void sub_100005238(uint64_t a1, uint64_t a2)
{
  char **v4;
  char **v5;
  char **v6;
  char v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  BOOL v13;
  unint64_t v14;
  uint64_t v15;
  int v16;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  char **v24;
  char **v25;
  char **v26;
  AWDHeaderInfoS *v27;
  char v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  char v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  uint64_t v56;
  char v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  char v63;
  unsigned int v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  char v69;
  unsigned int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  char v76;
  unsigned int v77;
  uint64_t v78;
  unint64_t v79;
  char v80;
  char v81;
  unsigned int v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  char v86;
  unsigned int v87;
  uint64_t v88;
  unint64_t v89;
  char v90;
  uint64_t v91;
  _BYTE v92[16];
  v4 = &selRef_setNodeCounts_count_;
  v5 = &selRef_setNodeCounts_count_;
  v6 = &selRef_setNodeCounts_count_;
  while (2)
  {
    if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)
      || *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error))
    {
      return;
    }

    v7 = 0;
    v8 = 0;
    v9 = 0LL;
    while (1)
    {
      v10 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      v11 = v10 + 1;
      if (v10 == -1) {
        goto LABEL_158;
      }
      if (v11 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      v12 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v10);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v11;
      v9 |= (unint64_t)(v12 & 0x7F) << v7;
      if ((v12 & 0x80) == 0) {
        goto LABEL_12;
      }
      v7 += 7;
      v13 = v8++ >= 9;
      if (v13)
      {
        v14 = 0LL;
        v15 = OBJC_IVAR___PBDataReader__error;
        goto LABEL_15;
      }
    }

    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_12:
    v15 = OBJC_IVAR___PBDataReader__error;
    v14 = *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) ? 0LL : v9;
LABEL_15:
    v16 = v14 & 7;
    if (*(_BYTE *)(a2 + v15) || v16 == 4) {
      return;
    }
    switch((v14 >> 3))
    {
      case 1u:
        v18 = 0;
        v19 = 0;
        v20 = 0LL;
        *(_BYTE *)(a1 + *((int *)v4 + 802)) |= 1u;
        while (1)
        {
          v21 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          v22 = v21 + 1;
          if (v21 == -1) {
            goto LABEL_158;
          }
          if (v22 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          v23 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v21);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v22;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0) {
            goto LABEL_145;
          }
          v18 += 7;
          v13 = v19++ >= 9;
          if (v13)
          {
            v20 = 0LL;
            goto LABEL_147;
          }
        }

        *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_145:
        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          v20 = 0LL;
        }
LABEL_147:
        *(void *)(a1 + *((int *)v5 + 803)) = v20;
        continue;
      case 2u:
        v24 = v6;
        v25 = v5;
        v26 = v4;
        v27 = objc_alloc_init(&OBJC_CLASS___AWDHeaderInfoS);
        objc_storeStrong((id *)(a1 + 112), v27);
        if (!PBReaderPlaceMark(a2, v92) || (sub_10012DC90((uint64_t)v27, a2), (v28 & 1) == 0))
        {

          return;
        }

        PBReaderRecallMark(a2, v92);

        v4 = v26;
        v5 = v25;
        v6 = v24;
        continue;
      case 3u:
        if (v16 == 2)
        {
          while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length)
               && !*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error))
          {
            v29 = 0;
            v30 = 0;
            v31 = 0LL;
            while (1)
            {
              v32 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
              v33 = v32 + 1;
              if (v32 == -1) {
                goto LABEL_158;
              }
              if (v33 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
                break;
              }
              v34 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v32);
              *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v33;
              v31 |= (unint64_t)(v34 & 0x7F) << v29;
              if ((v34 & 0x80) == 0) {
                goto LABEL_44;
              }
              v29 += 7;
              v13 = v30++ >= 9;
              if (v13)
              {
                v35 = 0LL;
                goto LABEL_47;
              }
            }

            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_44:
            if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
              v35 = 0LL;
            }
            else {
              v35 = v31;
            }
LABEL_47:
            PBRepeatedUInt32Add(a1 + *((int *)v6 + 798), v35);
          }

LABEL_96:
          PBReaderRecallMark(a2, v92);
          continue;
        }

        v69 = 0;
        v70 = 0;
        v71 = 0LL;
        v72 = a1 + *((int *)v6 + 798);
        while (1)
        {
          v73 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          v74 = v73 + 1;
          if (v73 == -1) {
            break;
          }
          if (v74 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            goto LABEL_139;
          }
          v75 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v73);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v74;
          v71 |= (unint64_t)(v75 & 0x7F) << v69;
          if ((v75 & 0x80) == 0) {
            goto LABEL_140;
          }
          v69 += 7;
          v13 = v70++ >= 9;
          if (v13) {
            goto LABEL_138;
          }
        }

      v38 = +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  sub_1000BE984(3, uint64));
      v39 = (void *)objc_claimAutoreleasedReturnValue(v38);
      if ((v55 & 0x80u) == 0) {
        v40 = buf;
      }
      else {
        v40 = *(_BYTE **)buf;
      }
      v41 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v40, v52));
      [v4 setObject:v39 forKey:v41];

      if (count == ++v10) {
        goto LABEL_104;
      }
    }

    HIDWORD(v16) = v55;
    LODWORD(v16) = (v55 << 24) - 201326592;
    v15 = v16 >> 25;
    v17 = (uint64_t *)buf;
    switch(v15)
    {
      case 0:
        if (*(void *)buf != 0x5F6C6572745F7874LL || *(unsigned int *)&buf[8] != 1937009520LL)
        {
          v17 = (uint64_t *)buf;
          switch(v15)
          {
            case 0:
LABEL_24:
              if (v55 == 16) {
                goto LABEL_40;
              }
              if (v55 == 24) {
                goto LABEL_45;
              }
              if (v55 != 22) {
                goto LABEL_96;
              }
LABEL_31:
              if (*(void *)buf == 0x5F6C6572745F7872LL
                && *(void *)&buf[8] == 0x73616364616F7262LL
                && *(void *)&buf[14] == 0x73746B705F747361LL)
              {
                goto LABEL_95;
              }

              if (v55 == 24) {
                goto LABEL_45;
              }
              if (v55 == 16) {
                goto LABEL_40;
              }
              goto LABEL_96;
            case 2:
              goto LABEL_40;
            case 5:
              goto LABEL_16;
            case 6:
              goto LABEL_83;
            default:
              goto LABEL_96;
          }
        }

        goto LABEL_93;
      case 2:
LABEL_40:
        if (*(void *)buf == 0x5F6C6572745F7872LL && *(void *)&buf[8] == 0x73746B705F6B6361LL) {
          goto LABEL_91;
        }
        if (v55 != 24) {
          goto LABEL_96;
        }
LABEL_45:
        v17 = (uint64_t *)buf;
        break;
      case 5:
LABEL_16:
        if (*(void *)buf == 0x5F6C6572745F7874LL
          && *(void *)&buf[8] == 0x73616364616F7262LL
          && *(void *)&buf[14] == 0x73746B705F747361LL)
        {
          goto LABEL_92;
        }

        v17 = (uint64_t *)buf;
        switch(v15)
        {
          case 0:
            goto LABEL_24;
          case 2:
            goto LABEL_40;
          case 5:
            goto LABEL_31;
          case 6:
            goto LABEL_83;
          default:
            goto LABEL_96;
        }

        goto LABEL_96;
      case 6:
        break;
      default:
        goto LABEL_96;
    }

  v44 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_txErrorNotGranted));
  [v3 setObject:v44 forKey:@"tx_error_not_granted"];

  v8 = self->_has;
  if ((*(void *)&v8 & 0x100000000000LL) == 0)
  {
LABEL_39:
    if ((*(void *)&v8 & 0x200000000000LL) == 0) {
      goto LABEL_40;
    }
    goto LABEL_98;
  }

  PBDataWriterWriteUint32Field(v7, self->_txErrorNotGranted, 35LL);
  v6 = self->_has;
  if ((*(void *)&v6 & 0x100000000000LL) == 0)
  {
LABEL_39:
    if ((*(void *)&v6 & 0x200000000000LL) == 0) {
      goto LABEL_40;
    }
    goto LABEL_98;
  }

  v4[51] = self->_txErrorNotGranted;
  *((void *)v4 + 31) |= 0x400000000000uLL;
  v6 = self->_has;
  if ((*(void *)&v6 & 0x100000000000LL) == 0)
  {
LABEL_39:
    if ((*(void *)&v6 & 0x200000000000LL) == 0) {
      goto LABEL_40;
    }
    goto LABEL_98;
  }

  *((_DWORD *)v6 + 50) = self->_txErrorNoAck;
  v6[31] |= 0x200000000000uLL;
  v10 = self->_has;
  if ((*(void *)&v10 & 0x10000000000LL) == 0)
  {
LABEL_39:
    if ((*(_BYTE *)&v10 & 0x80) == 0) {
      goto LABEL_40;
    }
    goto LABEL_98;
  }

  v10 = 0LL;
  if ((*(_BYTE *)&v4 & 0x80) != 0)
  {
LABEL_44:
    v11 = 2654435761LL * self->_receivedFrames;
    if ((*(_DWORD *)&v4 & 0x40000000) != 0) {
      goto LABEL_45;
    }
    goto LABEL_98;
  }

  self->_txErrorTxAbortedIfs = v5[59];
  *(void *)&self->_has |= 0x40000000000000uLL;
  v9 = *((void *)v5 + 31);
  if ((v9 & 0x80000000000000LL) == 0)
  {
LABEL_43:
    if ((v9 & 0x4000000000000LL) == 0) {
      goto LABEL_44;
    }
    goto LABEL_98;
  }

          -[AWDCountersIpv6S setTxSuccess:](v10, "setTxSuccess:", sub_1000BE984(3, uint64));
          goto LABEL_101;
        case 11:
          if ((void)buf != 0x79616C65645F7874LL || *(void *)((char *)&buf + 3) != 0x6E696D79616C6564LL)
          {
            if ((void)buf != 0x79616C65645F7874LL || *(void *)((char *)&buf + 3) != 0x78616D79616C6564LL)
            {
              p_buf = (uint64_t *)&buf;
              goto LABEL_71;
            }

            goto LABEL_99;
          }

          goto LABEL_97;
        case 18:
          if ((void)buf != 0x705F7070615F7874LL || *((void *)&buf + 1) != 0x65636375735F746BLL || v44 != 29555) {
            goto LABEL_101;
          }
LABEL_95:
          -[AWDCountersIpv6S setTxAppPktSucess:](v10, "setTxAppPktSucess:", sub_1000BE984(3, uint64));
          goto LABEL_101;
      }

      if (count == ++v11) {
        goto LABEL_106;
      }
    }

    v18 = *((void *)&buf + 1);
    if (*((void *)&buf + 1) == 10LL)
    {
      if (*(void *)buf == 0x65636375735F7874LL && *(_WORD *)(buf + 8) == 29555) {
        goto LABEL_96;
      }
      if (*(void *)buf == 0x756C6961665F7874LL && *(_WORD *)(buf + 8) == 25970) {
        goto LABEL_98;
      }
      if (*(void *)buf == 0x65636375735F7872LL && *(_WORD *)(buf + 8) == 29555) {
        goto LABEL_100;
      }
      if (*(void *)buf == 0x756C6961665F7872LL && *(_WORD *)(buf + 8) == 25970) {
        goto LABEL_94;
      }
    }

    if (*((void *)&buf + 1) == 18LL)
    {
      if (*(void *)buf == 0x705F7070615F7874LL
        && *(void *)(buf + 8) == 0x65636375735F746BLL
        && *(_WORD *)(buf + 16) == 29555)
      {
        goto LABEL_95;
      }

      v18 = *((void *)&buf + 1);
    }

    if (v18 != 11) {
      goto LABEL_101;
    }
    p_buf = (uint64_t *)buf;
    if (*(void *)buf != 0x79616C65645F7874LL || *(void *)(buf + 3) != 0x6E696D79616C6564LL)
    {
      if (*((void *)&buf + 1) != 11LL) {
        goto LABEL_101;
      }
      if (*(void *)buf != 0x79616C65645F7874LL || *(void *)(buf + 3) != 0x78616D79616C6564LL)
      {
LABEL_71:
        v30 = *p_buf;
        v31 = *(uint64_t *)((char *)p_buf + 3);
        if (v30 == 0x79616C65645F7874LL && v31 == 0x67766179616C6564LL) {
          -[AWDCountersIpv6S setTxDelayavg:](v10, "setTxDelayavg:", sub_1000BE984(3, uint64));
        }
        goto LABEL_101;
      }

LABEL_158:
        __break(0x5500u);
        return;
      case 4u:
        if (v16 != 2)
        {
          v76 = 0;
          v77 = 0;
          v71 = 0LL;
          v72 = a1 + 56;
          while (1)
          {
            v78 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            v79 = v78 + 1;
            if (v78 == -1) {
              goto LABEL_158;
            }
            if (v79 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
              goto LABEL_139;
            }
            v80 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v78);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v79;
            v71 |= (unint64_t)(v80 & 0x7F) << v76;
            if ((v80 & 0x80) == 0) {
              goto LABEL_140;
            }
            v76 += 7;
            v13 = v77++ >= 9;
            if (v13) {
              goto LABEL_138;
            }
          }
        }

        while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length)
             && !*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error))
        {
          v36 = 0;
          v37 = 0;
          v38 = 0LL;
          while (1)
          {
            v39 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            v40 = v39 + 1;
            if (v39 == -1) {
              goto LABEL_158;
            }
            if (v40 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
              break;
            }
            v41 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v39);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v40;
            v38 |= (unint64_t)(v41 & 0x7F) << v36;
            if ((v41 & 0x80) == 0) {
              goto LABEL_60;
            }
            v36 += 7;
            v13 = v37++ >= 9;
            if (v13)
            {
              v42 = 0LL;
              goto LABEL_63;
            }
          }

          *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_60:
          if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
            v42 = 0LL;
          }
          else {
            v42 = v38;
          }
LABEL_63:
          PBRepeatedUInt32Add(a1 + 56, v42);
        }

        goto LABEL_96;
      case 5u:
        if (v16 != 2)
        {
          v81 = 0;
          v82 = 0;
          v71 = 0LL;
          v72 = a1 + 8;
          while (1)
          {
            v83 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            v84 = v83 + 1;
            if (v83 == -1) {
              goto LABEL_158;
            }
            if (v84 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
              goto LABEL_139;
            }
            v85 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v83);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v84;
            v71 |= (unint64_t)(v85 & 0x7F) << v81;
            if ((v85 & 0x80) == 0) {
              goto LABEL_140;
            }
            v81 += 7;
            v13 = v82++ >= 9;
            if (v13) {
              goto LABEL_138;
            }
          }
        }

        while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length)
             && !*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error))
        {
          v43 = 0;
          v44 = 0;
          v45 = 0LL;
          while (1)
          {
            v46 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            v47 = v46 + 1;
            if (v46 == -1) {
              goto LABEL_158;
            }
            if (v47 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
              break;
            }
            v48 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v46);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v47;
            v45 |= (unint64_t)(v48 & 0x7F) << v43;
            if ((v48 & 0x80) == 0) {
              goto LABEL_76;
            }
            v43 += 7;
            v13 = v44++ >= 9;
            if (v13)
            {
              v49 = 0LL;
              goto LABEL_79;
            }
          }

          *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_76:
          if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
            v49 = 0LL;
          }
          else {
            v49 = v45;
          }
LABEL_79:
          PBRepeatedUInt32Add(a1 + 8, v49);
        }

        goto LABEL_96;
      case 6u:
        if (v16 != 2)
        {
          v86 = 0;
          v87 = 0;
          v71 = 0LL;
          v72 = a1 + 80;
          while (1)
          {
            v88 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            v89 = v88 + 1;
            if (v88 == -1) {
              goto LABEL_158;
            }
            if (v89 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
              break;
            }
            v90 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v88);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v89;
            v71 |= (unint64_t)(v90 & 0x7F) << v86;
            if ((v90 & 0x80) == 0) {
              goto LABEL_140;
            }
            v86 += 7;
            v13 = v87++ >= 9;
            if (v13)
            {
LABEL_138:
              v91 = 0LL;
              goto LABEL_143;
            }
          }

    v55 = *(void *)v52;
    v56 = *((void *)v52 + 1);
    v57 = *((unsigned int *)v52 + 4);
    if (v55 == 0x6150726574756F52LL && v56 == 0x6E756F4374656B63LL && v57 == 1564040052)
    {
      v107 = sub_1000BE984(4, uint64);
      goto LABEL_173;
    }

      v54 = *v51;
      v55 = v51[1];
      v56 = *(uint64_t *)((char *)v51 + 11);
      if (v54 == 0x6F4E746365726944LL && v55 == 0x726F7272456B6341LL && v56 == 0x5D395B726F727245LL)
      {
        v106 = sub_1000BE984(4, uint64);
        goto LABEL_182;
      }

    v53 = *(void *)v50;
    v54 = *((void *)v50 + 1);
    v55 = *((unsigned int *)v50 + 4);
    if (v53 == 0x6150726574756F52LL && v54 == 0x6E756F4374656B63LL && v55 == 1564040052)
    {
      HIDWORD(v102) = sub_1000BE984(4, uint64);
      goto LABEL_173;
    }

    v53 = *v50;
    v54 = v50[1];
    v55 = *(uint64_t *)((char *)v50 + 11);
    if (v53 == 0x6F4E746365726944LL && v54 == 0x726F7272456B6341LL && v55 == 0x5D395B726F727245LL)
    {
      HIDWORD(v105) = sub_1000BE984(4, uint64);
      goto LABEL_182;
    }

LABEL_139:
          *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_140:
          if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
            v91 = 0LL;
          }
          else {
            v91 = v71;
          }
LABEL_143:
          PBRepeatedUInt32Add(v72, v91);
          continue;
        }

        while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length)
             && !*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error))
        {
          v50 = 0;
          v51 = 0;
          v52 = 0LL;
          while (1)
          {
            v53 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            v54 = v53 + 1;
            if (v53 == -1) {
              goto LABEL_158;
            }
            if (v54 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
              break;
            }
            v55 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v53);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v54;
            v52 |= (unint64_t)(v55 & 0x7F) << v50;
            if ((v55 & 0x80) == 0) {
              goto LABEL_92;
            }
            v50 += 7;
            v13 = v51++ >= 9;
            if (v13)
            {
              v56 = 0LL;
              goto LABEL_95;
            }
          }

          *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_92:
          if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
            v56 = 0LL;
          }
          else {
            v56 = v52;
          }
LABEL_95:
          PBRepeatedUInt32Add(a1 + 80, v56);
        }

        goto LABEL_96;
      case 7u:
        v57 = 0;
        v58 = 0;
        v59 = 0LL;
        *(_BYTE *)(a1 + *((int *)v4 + 802)) |= 2u;
        while (1)
        {
          v60 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          v61 = v60 + 1;
          if (v60 == -1) {
            goto LABEL_158;
          }
          if (v61 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          v62 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v60);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v61;
          v59 |= (unint64_t)(v62 & 0x7F) << v57;
          if ((v62 & 0x80) == 0) {
            goto LABEL_149;
          }
          v57 += 7;
          v13 = v58++ >= 9;
          if (v13)
          {
            LODWORD(v59) = 0;
            goto LABEL_151;
          }
        }

        *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_149:
        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v59) = 0;
        }
LABEL_151:
        *(_DWORD *)(a1 + 120) = v59;
        continue;
      case 8u:
        v63 = 0;
        v64 = 0;
        v65 = 0LL;
        *(_BYTE *)(a1 + *((int *)v4 + 802)) |= 4u;
        while (1)
        {
          v66 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          v67 = v66 + 1;
          if (v66 == -1) {
            goto LABEL_158;
          }
          if (v67 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          v68 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v66);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v67;
          v65 |= (unint64_t)(v68 & 0x7F) << v63;
          if ((v68 & 0x80) == 0) {
            goto LABEL_153;
          }
          v63 += 7;
          v13 = v64++ >= 9;
          if (v13)
          {
            LODWORD(v65) = 0;
            goto LABEL_155;
          }
        }

        *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_153:
        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v65) = 0;
        }
LABEL_155:
        *(_DWORD *)(a1 + 124) = v65;
        continue;
      default:
        if ((PBReaderSkipValueWithTag(a2) & 1) != 0) {
          continue;
        }
        return;
    }
  }

        __break(0x5500u);
        return result;
      case 6u:
        if (v14 != 2)
        {
          v69 = 0;
          v70 = 0;
          v55 = 0LL;
          result = v3 + 56;
          while (1)
          {
            v71 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            v72 = v71 + 1;
            if (v71 == -1) {
              goto LABEL_139;
            }
            if (v72 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
              break;
            }
            v73 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v71);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v72;
            v55 |= (unint64_t)(v73 & 0x7F) << v69;
            if ((v73 & 0x80) == 0) {
              goto LABEL_129;
            }
            v69 += 7;
            v11 = v70++ >= 9;
            if (v11)
            {
LABEL_127:
              v74 = 0LL;
              goto LABEL_132;
            }
          }
}

  ;
}

LABEL_24:
  return v7;
}

    v15 = 1LL;
  }

  else
  {
    v14 = 0LL;
    a5 = 0LL;
LABEL_11:
    sub_1000712BC((char *)&v20, v14, v24, &v24[a5], a5);
    sub_1000200F8(a3, (uint64_t)&v20);
    v15 = 0LL;
  }

  v23 = (void **)&v20;
  sub_100006F6C(&v23);
  return v15;
}

  __break(0x5515u);
  return result;
}

  if (a2 == 2) {
    return 0LL;
  }
  sub_100034C60("Cii", (uint64_t *)&v37, 0x80u);
  sub_100006EFC(a1 + 104, &v37);
  __p[0] = &v37;
  sub_100006F6C((void ***)__p);
  *(_WORD *)(a1 + 98) = 0;
  *(_WORD *)(a1 + 8) = 559;
LABEL_26:
  v17 = *(_DWORD *)(a1 + 128);
  if (v17)
  {
    v18 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v18)
    {
      v19 = v18;
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }

    goto LABEL_65;
  }

  if (a2 != -1409351679)
  {
    v25 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v25)
    {
      v26 = v25;
      goto LABEL_64;
    }

    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
LABEL_63:
    }
      sub_1001FB53C();
LABEL_64:
    v17 = 0;
LABEL_65:
    if (v17 <= 1) {
      v31 = 1LL;
    }
    else {
      v31 = v17;
    }
    v32 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v32)
    {
      v33 = v32;
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }

    v37.n128_u64[0] = 0LL;
    (*(void (**)(uint64_t, uint64_t, __n128 *))(*(void *)a1 + 32LL))(a1, v31, &v37);
    if (v37.n128_u64[0]) {
      (*(void (**)(unint64_t))(*(void *)v37.n128_u64[0] + 8LL))(v37.n128_u64[0]);
    }
    sub_100071430((uint64_t *)(a1 + 144));
    result = 3LL;
    goto LABEL_77;
  }

  v20 = v39;
  v39 += 2;
  v21 = *v20;
  v39 = v20 + 4;
  v22 = (_WORD *)*((void *)v20 + 1);
  v39 = v20 + 6;
  v23 = *(int *)(a1 + 136);
  else {
    v24 = *(_DWORD *)&aR_1[4 * v23];
  }
  if (v21 != v24)
  {
    v29 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v29)
    {
      v30 = v29;
      goto LABEL_64;
    }

    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      goto LABEL_63;
    }
    goto LABEL_64;
  }

  v27 = *(_DWORD *)(a1 + 168);
  if (v27 == 1)
  {
    v37.n128_u64[0] = (unint64_t)&v37;
    v37.n128_u64[1] = (unint64_t)&v37;
    v38 = 0LL;
    for (i = *(void *)(a1 + 152); i != a1 + 144; i = *(void *)(i + 8))
    {
      sub_10007FB68(i + 16, (uint64_t)__p);
      sub_10007FB18((uint64_t *)&v37, __p);
      sub_10000D448((uint64_t)__p);
    }

    sub_1000737B8(__p, (uint64_t)&v37);
    (*(void (**)(uint64_t, void, void **))(*(void *)a1 + 32LL))(a1, 0LL, __p);
    if (__p[0]) {
      (*(void (**)(void *))(*(void *)__p[0] + 8LL))(__p[0]);
    }
    sub_10000C178((uint64_t *)&v37);
  }

  else if (v27)
  {
    v37.n128_u64[0] = 0LL;
    (*(void (**)(uint64_t, void, __n128 *))(*(void *)a1 + 32LL))(a1, 0LL, &v37);
    if (v37.n128_u64[0]) {
      (*(void (**)(unint64_t))(*(void *)v37.n128_u64[0] + 8LL))(v37.n128_u64[0]);
    }
  }

  else
  {
    v37.n128_u64[0] = (unint64_t)&v37;
    v37.n128_u64[1] = (unint64_t)&v37;
    v38 = 0LL;
    for (j = *(void *)(a1 + 152); j != a1 + 144; j = *(void *)(j + 8))
    {
      sub_10007F534(j + 16, __p);
      sub_100044B24((uint64_t *)&v37, (uint64_t)__p);
      if (v36 < 0) {
        operator delete(__p[0]);
      }
    }

    sub_1000731A0(__p, (uint64_t)&v37);
    (*(void (**)(uint64_t, void, void **))(*(void *)a1 + 32LL))(a1, 0LL, __p);
    if (__p[0]) {
      (*(void (**)(void *))(*(void *)__p[0] + 8LL))(__p[0]);
    }
    sub_10000C0E8(&v37);
  }

  sub_100071430((uint64_t *)(a1 + 144));
LABEL_14:
  result = 2LL;
LABEL_77:
  *(_WORD *)(a1 + 8) = 0;
  return result;
}

    if (a2 == 2) {
      return 0LL;
    }
    sub_100034C60("CiLS", (uint64_t *)&v48, 0x80u);
    sub_100006EFC(a1 + 104, &v48);
    v50 = &v48;
    sub_100006F6C((void ***)&v50);
    *(_WORD *)(a1 + 98) = 0;
    *(_WORD *)(a1 + 8) = 87;
LABEL_26:
    v17 = *(_DWORD *)(a1 + 128);
    if (v17)
    {
      v18 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v18)
      {
        v19 = v18;
      }

      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        sub_1001FB53C();
      }

      goto LABEL_70;
    }

    if (a2 != -1426063341) {
      goto LABEL_69;
    }
    v20 = v49;
    v49 += 2;
    v21 = *v20;
    v22 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v22)
    {
      v23 = v22;
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }

    v29 = v49;
    v49 += 2;
    v30 = *(_WORD **)v29;
    v49 = v29 + 4;
    v31 = v29[2];
    v47 = 0LL;
    v46 = 0;
    if ((int)spinel_datatype_unpack(v30, v31, "CiLSD", v24, v25, v26, v27, v28, 0LL) <= 0)
    {
      v35 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v35)
      {
        v36 = v35;
        goto LABEL_69;
      }

      if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        goto LABEL_69;
      }
    }

    else
    {
      if (v45 == *(_DWORD *)(a1 + 136))
      {
        if (v46 == *(unsigned __int16 *)(a1 + 140))
        {
          sub_100018E5C(&v48, v47, (uint64_t)v47 + v46);
          v32 = operator new(0x20uLL);
          v33 = sub_10001A3BC(v32, &v48);
          v44 = v34;
          (*(void (**)(uint64_t, void, uint64_t *, __n128))(*(void *)a1 + 32LL))(a1, 0LL, &v44, v33);
          if (v44) {
            (*(void (**)(uint64_t))(*(void *)v44 + 8LL))(v44);
          }
          v50 = &v48;
          sub_100006F6C((void ***)&v50);
LABEL_14:
          *(_WORD *)(a1 + 8) = 0;
          return 2LL;
        }

        v39 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v39)
        {
          v40 = v39;
          goto LABEL_69;
        }

        if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          goto LABEL_68;
        }
LABEL_69:
        v17 = 0;
LABEL_70:
        if (v17 <= 1) {
          v41 = 1LL;
        }
        else {
          v41 = v17;
        }
        v42 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v42)
        {
          v43 = v42;
        }

        else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
          sub_1001FB53C();
        }

        v48.n128_u64[0] = 0LL;
        (*(void (**)(uint64_t, uint64_t, __n128 *))(*(void *)a1 + 32LL))(a1, v41, &v48);
        if (v48.n128_u64[0]) {
          (*(void (**)(unint64_t))(*(void *)v48.n128_u64[0] + 8LL))(v48.n128_u64[0]);
        }
        goto LABEL_81;
      }

      v37 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v37)
      {
        v38 = v37;
        goto LABEL_69;
      }

      if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        goto LABEL_69;
      }
    }

  v13 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_retryIntervalAvg));
  [v3 setObject:v13 forKey:@"retry_interval_avg"];

  has = (__int16)self->_has;
  if ((has & 4) == 0)
  {
LABEL_9:
    if ((has & 0x4000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_26;
  }

  PBDataWriterWriteUint32Field(v5, self->_retryIntervalAvg, 7LL);
  has = (__int16)self->_has;
  if ((has & 4) == 0)
  {
LABEL_9:
    if ((has & 0x4000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_26;
  }

  v4[5] = self->_retryIntervalAvg;
  *((_WORD *)v4 + 34) |= 8u;
  has = (__int16)self->_has;
  if ((has & 4) == 0)
  {
LABEL_9:
    if ((has & 0x4000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_26;
  }

  *((_DWORD *)result + 5) = self->_retryIntervalAvg;
  *((_WORD *)result + 34) |= 8u;
  has = (__int16)self->_has;
  if ((has & 4) == 0)
  {
LABEL_9:
    if ((has & 0x4000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_26;
  }

  v10 = 0LL;
  if ((*(_WORD *)&self->_has & 0x4000) != 0)
  {
LABEL_10:
    v11 = 2654435761LL * self->_txDelayMin;
    if ((*(_WORD *)&self->_has & 0x2000) != 0) {
      goto LABEL_11;
    }
    goto LABEL_26;
  }

  self->_retryIntervalAvg = *((_DWORD *)v4 + 5);
  *(_WORD *)&self->_has |= 8u;
  v5 = *((_WORD *)v4 + 34);
  if ((v5 & 4) == 0)
  {
LABEL_9:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_26;
  }

  PBDataWriterWriteUint32Field(v9, self->_coexTxDeniedRequests, 4LL);
  v4 = v9;
  has = (__int16)self->_has;
  if ((has & 4) == 0)
  {
LABEL_6:
    if ((has & 2) == 0) {
      goto LABEL_7;
    }
    goto LABEL_26;
  }

  self->_coexTxDeniedRequests = *((_DWORD *)v4 + 17);
  *(_WORD *)&self->_has |= 8u;
  v5 = *((_WORD *)v4 + 50);
  if ((v5 & 4) == 0)
  {
LABEL_6:
    if ((v5 & 2) == 0) {
      goto LABEL_7;
    }
    goto LABEL_26;
  }

  v18 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_rxErrNoframe));
  [v3 setObject:v18 forKey:@"rx_err_noframe"];

  has = (__int16)self->_has;
  if ((has & 4) == 0)
  {
LABEL_11:
    if ((has & 0x40) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }

  PBDataWriterWriteUint32Field(v7, self->_rxErrUnknownNeighbor, 6LL);
  v4 = v7;
  has = (__int16)self->_has;
  if ((has & 0x10) == 0)
  {
LABEL_8:
    if ((has & 0x100) == 0) {
      goto LABEL_9;
    }
    goto LABEL_26;
  }

  v4[11] = self->_rxErrFcs;
  *((_WORD *)v4 + 40) |= 8u;
  has = (__int16)self->_has;
  if ((has & 0x200) == 0)
  {
LABEL_7:
    if ((has & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_26;
  }

  v4[13] = self->_rxErrNoframe;
  *((_WORD *)v4 + 40) |= 0x20u;
  has = (__int16)self->_has;
  if ((has & 4) == 0)
  {
LABEL_11:
    if ((has & 0x40) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }

  self->_rxErrUnknownNeighbor = *((_DWORD *)v4 + 17);
  *(_WORD *)&self->_has |= 0x200u;
  v5 = *((_WORD *)v4 + 40);
  if ((v5 & 0x10) == 0)
  {
LABEL_8:
    if ((v5 & 0x100) == 0) {
      goto LABEL_9;
    }
    goto LABEL_26;
  }

    CFRelease(v5);
    goto LABEL_25;
  }

  v7 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (!v7)
  {
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      sub_1001FB53C();
    }
    goto LABEL_17;
  }

  if (!sub_10015A058(5))
  {
LABEL_17:
    v8 = 1;
    goto LABEL_25;
  }

  v8 = 1;
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    buf.n128_u16[0] = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "fillmoreController is null", (uint8_t *)&buf, 2u);
  }

void *sub_100006504(void *a1, uint64_t a2, uint64_t *a3)
{
  v6[0] = 0LL;
  sub_100007640((uint64_t)v6, a3);
  sub_1000342C8((uint64_t)a1, a2, v6);
  sub_100006E7C(v6);
  *a1 = off_1002AD760;
  return a1;
}

void sub_100006564( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *sub_10000657C(void *result)
{
  *(_BYTE *)(result[7] + 73904LL) = 0;
  return sub_100034408(result);
}

uint64_t sub_100006590( uint64_t a1, unsigned int a2, unsigned int *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v10 = *(unsigned __int16 *)(a1 + 8);
  uint64_t result = 3LL;
  if (v10 > 79)
  {
    if (v10 != 80)
    {
      if (v10 != 82)
      {
        if (v10 != 89) {
          goto LABEL_90;
        }
        goto LABEL_47;
      }

LABEL_44:
      if ((a2 | 0x1000000) != 0xFF000052)
      {
        if (sub_100159F84(a1)) {
          return 0LL;
        }
        sub_10015A00C(a1);
        v41 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v41)
        {
          v42 = v41;
          goto LABEL_80;
        }

        if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          goto LABEL_80;
        }
        goto LABEL_77;
      }

      sub_10015A00C(a1);
      if (a2 != -16777134)
      {
        v39 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v39)
        {
          v40 = v39;
          goto LABEL_80;
        }

        if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          goto LABEL_80;
        }
        goto LABEL_77;
      }

      sub_100159FC0(a1, 30.0);
      *(_WORD *)(a1 + 8) = 89;
LABEL_47:
      int v35 = sub_1000D8DE8(*(void *)(a1 + 56));
      if (!sub_1000B5088(v35))
      {
        int v36 = sub_1000D8DE8(*(void *)(a1 + 56));
        if (!sub_1000B50E8(v36))
        {
          sub_10015A00C(a1);
          goto LABEL_61;
        }
      }

      if (sub_100159F84(a1)) {
        return 0LL;
      }
      sub_10015A00C(a1);
      v37 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v37)
      {
        v38 = v37;
        goto LABEL_80;
      }

      if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        goto LABEL_80;
      }
LABEL_77:
      sub_1001FB53C();
      goto LABEL_80;
    }
}
}
}

    if (sub_1000D8DE8(*(void *)(a1 + 56)) == 3)
    {
      uint64_t v13 = 1;
      goto LABEL_98;
    }

    unsigned int v26 = sub_1000D8DE8(*(void *)(a1 + 56));
    if (!sub_1000B50F4(v26))
    {
      uint64_t v13 = 1;
LABEL_62:
      v31 = *(void *)(a1 + 56) + 72792LL;
      buf.n128_u32[0] = 13;
      uint64_t v32 = sub_100007684(v31, (unsigned int *)&buf);
      v33 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      v34 = v33;
      if (v32)
      {
        if (v33)
        {
          if (sub_10015A058(5) && os_log_type_enabled(v34, OS_LOG_TYPE_INFO))
          {
            buf.n128_u16[0] = 0;
            _os_log_impl( (void *)&_mh_execute_header,  v34,  OS_LOG_TYPE_INFO,  "DeepSleep: Putting NCP to low-power.",  (uint8_t *)&buf,  2u);
          }
        }

        else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
          sub_1001FB53C();
        }

        sub_100034C60("CiiC", (uint64_t *)&buf, 0x80u);
        sub_100006EFC(a1 + 104, &buf);
        p_buf = &buf;
        sub_100006F6C((void ***)&p_buf);
        *(_WORD *)(a1 + 98) = 0;
        *(_WORD *)(a1 + 8) = 129;
        goto LABEL_78;
      }

      if (v33)
      {
      }

      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        sub_1001FB53C();
      }

      sub_100034C60("Ciib", (uint64_t *)&buf, 0x80u);
      sub_100006EFC(a1 + 104, &buf);
      p_buf = &buf;
      sub_100006F6C((void ***)&p_buf);
      *(_WORD *)(a1 + 98) = 0;
      *(_WORD *)(a1 + 8) = 142;
LABEL_89:
      if ((int)sub_10003453C(a1, a2, a3, a4, a5, a6, a7, a8) >= 2)
      {
        while (1)
        {
          *(_WORD *)(a1 + 8) = 151;
LABEL_93:
          if ((a2 & 0xFF000000) == 0xAB000000) {
            break;
          }
          sub_100159FC0(a1, 0.5);
          uint64_t v14 = 0;
          *(_WORD *)(a1 + 8) = 152;
LABEL_95:
          if (!v14)
          {
            if (sub_100159F84(a1)) {
              return 0LL;
            }
            sub_10015A00C(a1);
            sub_1000DA700(*(void *)(a1 + 56), 3LL);
            goto LABEL_98;
          }

          sub_10015A00C(a1);
        }
      }

      return 0LL;
    }

    sub_100034C60("Ciib", (uint64_t *)&buf, 0x80u);
    sub_100006EFC(a1 + 104, &buf);
    p_buf = &buf;
    sub_100006F6C((void ***)&p_buf);
    *(_WORD *)(a1 + 98) = 0;
    *(_WORD *)(a1 + 8) = 102;
    goto LABEL_48;
  }

        sub_10010BC24(a1, a3);
        return 0LL;
      }

      goto LABEL_40;
    }

    dispatch_retain(v13);
    goto LABEL_45;
  }

LABEL_21:
    uint64_t v17 = *(void *)(a1 + 56);
    if (*(int *)(v17 + 70088) > 0 || *(void *)(v17 + 72704))
    {
      if (sub_100159F84(a1)) {
        return 0LL;
      }
      sub_10015A00C(a1);
      v18 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v18)
      {
        v19 = v18;
        goto LABEL_80;
      }

      if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        goto LABEL_79;
      }
      goto LABEL_80;
    }

    sub_10015A00C(a1);
    uint64_t v25 = *(void *)(a1 + 56);
    unsigned int v26 = *(unsigned __int8 *)(v25 + 67456);
    if (v26 <= 0xE) {
      char v27 = v26 + 1;
    }
    else {
      char v27 = 1;
    }
    *(_BYTE *)(v25 + 67456) = v27;
    *(_BYTE *)(a1 + 96) = v27 | 0x80;
    int v28 = spinel_datatype_pack(v25 + 68785, 1300LL, (uint64_t)"Ci", v20, v21, v22, v23, v24, 0LL);
    uint64_t v29 = *(void *)(a1 + 56);
    *(_DWORD *)(v29 + 70088) = v28;
    if (*(void *)(v29 + 72704))
    {
      v30 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v30)
      {
        v31 = v30;
      }

      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        sub_1001FB53C();
      }
    }

    uint64_t v32 = *(void *)(a1 + 56);
    if (*(int *)(v32 + 70088) <= 0)
    {
      v43 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v43)
      {
        v44 = v43;
        goto LABEL_80;
      }

      if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
LABEL_79:
      }
        sub_1001FB53C();
LABEL_80:
      uint64_t v14 = 1LL;
LABEL_81:
      v45 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v45)
      {
        v46 = v45;
      }

      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        sub_1001FB53C();
      }

      (*(void (**)(void))(**(void **)(a1 + 56) + 120LL))(*(void *)(a1 + 56));
      v52[0].n128_u64[0] = 0LL;
      (*(void (**)(uint64_t, uint64_t, __n128 *))(*(void *)a1 + 32LL))(a1, v14, v52);
      if (v52[0].n128_u64[0]) {
        (*(void (**)(unint64_t))(*(void *)v52[0].n128_u64[0] + 8LL))(v52[0].n128_u64[0]);
      }
      uint64_t result = 3LL;
      goto LABEL_90;
    }

    v33 = operator new(0x20uLL);
    void *v33 = sub_1000D514C;
    v33[1] = 0LL;
    v33[2] = v32;
    *((_DWORD *)v33 + 6) = -16777134;
    v48[0] = (uint64_t)off_1002AD910;
    v48[1] = (uint64_t)v33;
    v34 = operator new(0x20uLL);
    void *v34 = sub_1000D514C;
    v34[1] = 0LL;
    v34[2] = v32;
    *((_DWORD *)v34 + 6) = -33554350;
    v47[0] = (uint64_t)off_1002AD930;
    v47[1] = (uint64_t)v34;
    sub_100006D1C((uint64_t)sub_100006DEC, v48, v47, &v49);
    sub_100007A04((uint64_t (***)())v52, &v49);
    sub_100006E08((uint64_t *)(*(void *)(a1 + 56) + 72704LL), (uint64_t *)v52);
    sub_1000075F0(v52);
    sub_1000075F0(v51);
    sub_100007618(v50);
    sub_1000075F0(v47);
    sub_100007618(v48);
    *(_BYTE *)(*(void *)(a1 + 56) + 68785LL) = *(_BYTE *)(a1 + 96);
    sub_100159FC0(a1, 30.0);
    *(_WORD *)(a1 + 8) = 82;
    goto LABEL_44;
  }

  switch(v10)
  {
    case 0:
      *(_WORD *)(a1 + 8) = 63;
      goto LABEL_11;
    case 63:
LABEL_11:
      if (a2 == 2) {
        return 0LL;
      }
      (*(void (**)(void, uint64_t))(**(void **)(a1 + 56) + 104LL))(*(void *)(a1 + 56), 1LL);
      uint64_t v13 = *(void *)(a1 + 56);
      *(_BYTE *)(v13 + 73904) = 1;
      v52[0].n128_u32[0] = 13;
      if (sub_100007684(v13 + 72792, (unsigned int *)v52))
      {
        sub_100034C60("CiiC", (uint64_t *)v52, 0x80u);
        sub_100006EFC(a1 + 104, v52);
        v53 = (void **)v52;
        sub_100006F6C(&v53);
        *(_WORD *)(a1 + 98) = 0;
        *(_WORD *)(a1 + 8) = 75;
LABEL_14:
        if ((int)sub_10003453C(a1, a2, a3, a4, a5, a6, a7, a8) >= 2)
        {
          uint64_t v14 = *(unsigned int *)(a1 + 128);
          if ((_DWORD)v14)
          {
            v15 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
            if (v15)
            {
              v16 = v15;
            }

            else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
            {
              sub_1001FB53C();
            }

            goto LABEL_81;
          }

  if (v11 < 0) {
    operator delete(__p[0]);
  }
  return v5 >= 0;
}

  if (v11 < 0) {
    operator delete(__p[0]);
  }
  return v5 >= 0;
}

  *((_DWORD *)result + 11) = self->_txSuccessRate;
  *((_WORD *)result + 24) |= 0x200u;
  if ((*(_WORD *)&self->_has & 4) == 0) {
    return result;
  }
LABEL_11:
  *((_DWORD *)result + 4) = self->_rxSuccessRate;
  *((_WORD *)result + 24) |= 4u;
  return result;
}

    v18 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsDiscoveryJoin]);
    v19 = [v18 hasSCntrsJoiner];

    if (v19)
    {
      std::string::append(&v66, "JoinSuccessRate=");
      uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsDiscoveryJoin]);
      uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue([v20 sCntrsJoiner]);
      [v21 joinSuccessRate];
      std::to_string(&v67, v22);
      sub_10000D650(&v66, (const std::string::value_type *)&v67);

      std::string::append(&v66, "::");
      std::string::append(&v66, "JoinAttempts=");
      uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsDiscoveryJoin]);
      uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue([v23 sCntrsJoiner]);
      std::to_string(&v67, [v24 joinAttempts]);
      sub_10000D650(&v66, (const std::string::value_type *)&v67);

      std::string::append(&v66, "::");
      uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsDiscoveryJoin]);
      unsigned int v26 = (void *)objc_claimAutoreleasedReturnValue([v25 sCntrsJoiner]);
      char v27 = [v26 attachLatencyHistogramsCount] == 0;

      if (!v27)
      {
        std::string::append(&v66, "AttachLatencyHistogramsCount=");
        int v28 = 0LL;
        while (1)
        {
          uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsDiscoveryJoin]);
          v30 = (void *)objc_claimAutoreleasedReturnValue([v29 sCntrsJoiner]);
          v31 = (unint64_t)[v30 attachLatencyHistogramsCount] > v28;

          if (!v31) {
            break;
          }
          std::string::append(&v66, "[");
          uint64_t v32 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsDiscoveryJoin]);
          v33 = (void *)objc_claimAutoreleasedReturnValue([v32 sCntrsJoiner]);
          std::to_string(&v67, *((_DWORD *)[v33 attachLatencyHistograms] + v28));
          sub_10000D650(&v66, (const std::string::value_type *)&v67);

          std::string::append(&v66, "]");
          if (++v28 == 0x80000000) {
            goto LABEL_56;
          }
        }

        std::string::append(&v66, "::");
      }

      v34 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsDiscoveryJoin]);
      int v35 = (void *)objc_claimAutoreleasedReturnValue([v34 sCntrsJoiner]);
      int v36 = [v35 joinerLatencyHistogramsCount] == 0;

      if (!v36)
      {
        std::string::append(&v66, "JoinerLatencyHistogramsCount=");
        v37 = 0LL;
        while (1)
        {
          v38 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsDiscoveryJoin]);
          v39 = (void *)objc_claimAutoreleasedReturnValue([v38 sCntrsJoiner]);
          v40 = (unint64_t)[v39 joinerLatencyHistogramsCount] > v37;

          if (!v40) {
            break;
          }
          std::string::append(&v66, "[");
          v41 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsDiscoveryJoin]);
          v42 = (void *)objc_claimAutoreleasedReturnValue([v41 sCntrsJoiner]);
          std::to_string(&v67, *((_DWORD *)[v42 joinerLatencyHistograms] + v37));
          sub_10000D650(&v66, (const std::string::value_type *)&v67);

          std::string::append(&v66, "]");
          if (++v37 == 0x80000000) {
            goto LABEL_56;
          }
        }

        std::string::append(&v66, "::");
      }

      v43 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsDiscoveryJoin]);
      v44 = (void *)objc_claimAutoreleasedReturnValue([v43 sCntrsJoiner]);
      v45 = [v44 attachFailLatencyHistogramsCount] == 0;

      if (!v45)
      {
        std::string::append(&v66, "AttachFailLatencyHistogramsCount=");
        v46 = 0LL;
        while (1)
        {
          v47 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsDiscoveryJoin]);
          v48 = (void *)objc_claimAutoreleasedReturnValue([v47 sCntrsJoiner]);
          uint64_t v49 = (unint64_t)[v48 attachFailLatencyHistogramsCount] > v46;

          if (!v49) {
            break;
          }
          std::string::append(&v66, "[");
          v50 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsDiscoveryJoin]);
          v51 = (void *)objc_claimAutoreleasedReturnValue([v50 sCntrsJoiner]);
          std::to_string(&v67, *((_DWORD *)[v51 attachFailLatencyHistograms] + v46));
          sub_10000D650(&v66, (const std::string::value_type *)&v67);

          std::string::append(&v66, "]");
          if (++v46 == 0x80000000) {
            goto LABEL_56;
          }
        }

        std::string::append(&v66, "::");
      }

      v52 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsDiscoveryJoin]);
      v53 = (void *)objc_claimAutoreleasedReturnValue([v52 sCntrsJoiner]);
      v54 = [v53 joinerFailLatencyHistogramsCount] == 0;

      if (!v54)
      {
        std::string::append(&v66, "JoinerFailLatencyHistogramsCount=");
        v55 = 0LL;
        while (1)
        {
          v56 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsDiscoveryJoin]);
          v57 = (void *)objc_claimAutoreleasedReturnValue([v56 sCntrsJoiner]);
          v58 = (unint64_t)[v57 joinerFailLatencyHistogramsCount] > v55;

          if (!v58) {
            break;
          }
          std::string::append(&v66, "[");
          v59 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsDiscoveryJoin]);
          v60 = (void *)objc_claimAutoreleasedReturnValue([v59 sCntrsJoiner]);
          std::to_string(&v67, *((_DWORD *)[v60 joinerFailLatencyHistograms] + v55));
          sub_10000D650(&v66, (const std::string::value_type *)&v67);

          std::string::append(&v66, "]");
          if (++v55 == 0x80000000) {
            goto LABEL_56;
          }
        }

    if (a2 == 2) {
      return 0LL;
    }
    if (!*(_BYTE *)(a1 + 136))
    {
LABEL_31:
      v36.n128_u64[0] = 0LL;
      (*(void (**)(uint64_t, void, __n128 *))(*(void *)a1 + 32LL))(a1, 0LL, &v36);
      if (v36.n128_u64[0]) {
        (*(void (**)(unint64_t))(*(void *)v36.n128_u64[0] + 8LL))(v36.n128_u64[0]);
      }
      uint64_t result = 2LL;
      goto LABEL_49;
    }

    sub_100034C60("Ci", (uint64_t *)&v36, 0x80u);
    sub_100006EFC(a1 + 104, &v36);
    v37 = &v36;
    sub_100006F6C((void ***)&v37);
    *(_WORD *)(a1 + 98) = 0;
    *(_WORD *)(a1 + 8) = 76;
LABEL_24:
    if (*(_DWORD *)(a1 + 128))
    {
      uint64_t v24 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v24)
      {
        uint64_t v25 = v24;
      }

      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        sub_1001FB53C();
      }

      v33 = 1LL;
      goto LABEL_40;
    }

    goto LABEL_31;
  }

  if (!v11)
  {
    uint64_t v13 = *(void *)(a1 + 56);
    sub_100159FC0(a1, 30.0);
    *(_WORD *)(a1 + 8) = 64;
    goto LABEL_13;
  }

  if (v11 == 64)
  {
LABEL_13:
    uint64_t v14 = sub_1000D8DE8(*(void *)(a1 + 56));
    if (sub_1000B50E8(v14)
      || (*(unsigned int (**)(void))(**(void **)(a1 + 56) + 160LL))(*(void *)(a1 + 56)))
    {
      if (!sub_100159F84(a1))
      {
        sub_10015A00C(a1);
        v15 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v15)
        {
          v16 = v15;
        }

        else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
          sub_1001FB53C();
        }

        v33 = 0LL;
LABEL_40:
        v34 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v34)
        {
          int v35 = v34;
        }

        else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
          sub_1001FB53C();
        }

        (*(void (**)(void))(**(void **)(a1 + 56) + 144LL))(*(void *)(a1 + 56));
        v36.n128_u64[0] = 0LL;
        (*(void (**)(uint64_t, uint64_t, __n128 *))(*(void *)a1 + 32LL))(a1, v33, &v36);
        if (v36.n128_u64[0]) {
          (*(void (**)(unint64_t))(*(void *)v36.n128_u64[0] + 8LL))(v36.n128_u64[0]);
        }
        uint64_t result = 3LL;
        goto LABEL_49;
      }

      return 0LL;
    }

    sub_10015A00C(a1);
    *(_WORD *)(a1 + 8) = 72;
    goto LABEL_21;
  }

  int v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", self->_rtt90perc));
  [v3 setObject:v10 forKey:@"rtt_90perc"];

  has = (__int16)self->_has;
  if ((has & 0x20) == 0)
  {
LABEL_6:
    if ((has & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_23;
  }

  PBDataWriterWriteUint32Field(v5, self->_rtt90perc, 4LL);
  has = (__int16)self->_has;
  if ((has & 0x20) == 0)
  {
LABEL_6:
    if ((has & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_23;
  }

  v4[8] = self->_rtt90perc;
  *((_WORD *)v4 + 34) |= 0x40u;
  has = (__int16)self->_has;
  if ((has & 0x20) == 0)
  {
LABEL_6:
    if ((has & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_23;
  }

  *((_DWORD *)result + 8) = self->_rtt90perc;
  *((_WORD *)result + 34) |= 0x40u;
  has = (__int16)self->_has;
  if ((has & 0x20) == 0)
  {
LABEL_6:
    if ((has & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_23;
  }

  v7 = 0LL;
  if ((has & 0x10) != 0)
  {
LABEL_7:
    v8 = 2654435761LL * self->_retryIntervalMax;
    if ((has & 8) != 0) {
      goto LABEL_8;
    }
    goto LABEL_23;
  }

  self->_rtt90perc = *((_DWORD *)v4 + 8);
  *(_WORD *)&self->_has |= 0x40u;
  v5 = *((_WORD *)v4 + 34);
  if ((v5 & 0x20) == 0)
  {
LABEL_6:
    if ((v5 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_23;
  }

        sub_10000B338((uint64_t)buf);
        v16 = *(void **)buf;
        if (*(void **)buf == v15) {
          goto LABEL_30;
        }
      }

      sub_1001247E4((std::string *)(v16 + 7), (uint64_t *)&__p);
      v19 = (__int128 *)(a1 + 1696);
LABEL_20:
      sub_1000D4BE4(v19, (__int128 *)&__p);
      sub_10000F9EC((uint64_t *)&__p.__r_.__value_.__l.__size_);
      goto LABEL_21;
    }

    uint64_t v14 = byte_1002C98D0 != 0;
    goto LABEL_22;
  }

  return result;
}

  return v8;
}

  v15 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_rxErrUnknownNeighbor));
  [v3 setObject:v15 forKey:@"rx_err_unknown_neighbor"];

  has = (__int16)self->_has;
  if ((has & 0x10) == 0)
  {
LABEL_8:
    if ((has & 0x100) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }

  PBDataWriterWriteUint32Field(v7, self->_rxUnicast, 3LL);
  v4 = v7;
  has = (__int16)self->_has;
  if ((has & 1) == 0)
  {
LABEL_5:
    if ((has & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_23;
  }

  v4[17] = self->_rxErrUnknownNeighbor;
  *((_WORD *)v4 + 40) |= 0x200u;
  has = (__int16)self->_has;
  if ((has & 0x10) == 0)
  {
LABEL_8:
    if ((has & 0x100) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }

  v8 = 0LL;
  if ((has & 4) == 0) {
    goto LABEL_22;
  }
LABEL_11:
  v9 = 2654435761LL * self->_rxErrDuplicated;
  if ((has & 0x40) != 0)
  {
LABEL_12:
    int v10 = 2654435761LL * self->_rxErrOther;
    goto LABEL_24;
  }

  self->_rxUnicast = *((_DWORD *)v4 + 19);
  *(_WORD *)&self->_has |= 0x800u;
  v5 = *((_WORD *)v4 + 40);
  if ((v5 & 1) == 0)
  {
LABEL_5:
    if ((v5 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_23;
  }
  }
}

    uint64_t v21 = sub_1001768B4(1);
    uint64_t v20 = (os_log_s *)objc_claimAutoreleasedReturnValue(v21);
    if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 136315394;
      char v27 = "-[THThreadNetworkCredentialsKeychainBackingStore dumpFrozenThreadNetworks:]";
      int v28 = 1024;
      uint64_t v29 = 3709;
      _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_INFO,  "%s:%d: ==================================",  buf,  0x12u);
    }
  }

  else
  {
    v19 = sub_1001768B4(1);
    uint64_t v20 = (os_log_s *)objc_claimAutoreleasedReturnValue(v19);
    if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136315394;
      char v27 = "-[THThreadNetworkCredentialsKeychainBackingStore dumpFrozenThreadNetworks:]";
      int v28 = 1024;
      uint64_t v29 = 3692;
      _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEFAULT,  "%s:%d: Frozen thread network records empty ",  buf,  0x12u);
    }
  }
}

LABEL_61:
          v52[0].n128_u64[0] = 0LL;
          (*(void (**)(uint64_t, void, __n128 *))(*(void *)a1 + 32LL))(a1, 0LL, v52);
          if (v52[0].n128_u64[0]) {
            (*(void (**)(unint64_t))(*(void *)v52[0].n128_u64[0] + 8LL))(v52[0].n128_u64[0]);
          }
          uint64_t result = 2LL;
          break;
        }

        return 0LL;
      }

      sub_100159FC0(a1, 30.0);
      *(_WORD *)(a1 + 8) = 80;
      goto LABEL_21;
    case 75:
      goto LABEL_14;
  }

  uint64_t v29 = *(void **)(a1 + 80);
  if (v29)
  {
    free(v29);
    *(void *)(a1 + 80) = 0LL;
  }

  uint64_t result = 0LL;
  *v8 = 0;
  return result;
}

  PBDataWriterWriteUint32Field(v14, self->_txErrCcaPercentage, 24LL);
  v4 = v14;
  uint64_t v13 = self->_has;
  if ((*(_WORD *)&v13 & 0x800) == 0)
  {
LABEL_41:
    if ((*(_WORD *)&v13 & 0x2000) == 0) {
      goto LABEL_42;
    }
LABEL_63:
    PBDataWriterWriteUint32Field(v14, self->_txErrBusyChannelPercentage, 26LL);
    v4 = v14;
    if ((*(_DWORD *)&self->_has & 0x10000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_43;
  }

  self->_txErrCcaPercentage = v28[59];
  *(_DWORD *)&self->_has |= 0x8000u;
  char v27 = v28[64];
  if ((v27 & 0x800) == 0)
  {
LABEL_41:
    if ((v27 & 0x2000) == 0) {
      goto LABEL_42;
    }
LABEL_63:
    self->_txErrBusyChannelPercentage = v28[57];
    *(_DWORD *)&self->_has |= 0x2000u;
    if ((v28[64] & 0x10000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_43;
  }

  if ((v4[8] & 8) == 0) {
    goto LABEL_71;
  }
  if ((v13 & 2) == 0
    || (v36[1] = 0LL,
        v37 = 0LL,
        v36[0] = 0LL,
        v31 = (dirent **)(*((void *)v4 + 2) - 8LL),
        sub_100168A50(v31, (uint64_t)v36),
        (v37 & 1) != 0)
    && (v37 != 1 || LODWORD(v36[0])))
  {
LABEL_70:
    sub_100169410((uint64_t)v4);
    if (*((void *)v4 + 1) != *((void *)v4 + 2)) {
      goto LABEL_72;
    }
LABEL_71:
    v36[0] = *a1;
    *a1 = 0LL;
    sub_10016A4A4((uint64_t *)v36);
    goto LABEL_72;
  }

  v40 = 0LL;
  if (!*v31 || !*(void *)&(*v31)->d_name[27])
  {
    sub_10016A418(&v40);
    goto LABEL_70;
  }

  sub_10016A418(&v40);
LABEL_72:
  if (!a2)
  {
    exception = __cxa_allocate_exception(0x30uLL);
    v34 = v38;
    int v35 = v39;
    boost::filesystem::filesystem_error::filesystem_error( exception,  "filesystem::recursive_directory_iterator increment error",  &v34);
  }

  uint64_t result = *(double *)&v38;
  *(_OWORD *)a2 = v38;
  a2[2] = v39;
  return result;
}

          v42 = (uint64_t)v10;
LABEL_62:

          int v10 = (void *)v42;
LABEL_63:
          v12 = v16;
          if (v16 >= a4) {
            goto LABEL_76;
          }
          break;
      }
    }

    v75 = sub_1001768B4(1);
    uint64_t v21 = (os_log_s *)objc_claimAutoreleasedReturnValue(v75);
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
      sub_1001AA978();
    }
    goto LABEL_132;
  }

  LOBYTE(v11) = 0;
  v98 = 0LL;
  v99 = 0LL;
  v100 = 0LL;
  v101 = 0LL;
  int v10 = 0LL;
LABEL_76:
  v64 = v99;
  v65 = v100;
  v66 = v98;
  if (v10 && v101 && v100 && v98 && v99)
  {
    LOBYTE(v97) = 1;
    uint64_t v21 = -[THThreadNetworkCredentials initWithMasterKey:passPhrase:PSKc:channel:PANID:userInfo:credentialDataSet:isActiveDevice:]( objc_alloc(&OBJC_CLASS___THThreadNetworkCredentials),  "initWithMasterKey:passPhrase:PSKc:channel:PANID:userInfo:credentialDataSet:isActiveDevice:",  v100,  0LL,  v98,  v11,  v99,  0LL,  0LL,  v97);
    v67 = sub_1001768B4(1);
    v68 = (os_log_s *)objc_claimAutoreleasedReturnValue(v67);
    v69 = os_log_type_enabled(v68, OS_LOG_TYPE_ERROR);
    if (v21)
    {
      if (v69) {
        sub_1001AA1D8();
      }

      v70 = [[THThreadNetwork alloc] initWithName:v10 extendedPANID:v101];
      if (!v70)
      {
        v78 = sub_1001768B4(1);
        v79 = (os_log_s *)objc_claimAutoreleasedReturnValue(v78);
        if (os_log_type_enabled(v79, OS_LOG_TYPE_ERROR)) {
          sub_1001A9FA8();
        }

        goto LABEL_132;
      }

      v71 = v70;
      v72 = -[THThreadNetworkCredentialsStoreRecord initWithNetwork:credentials:uniqueIdentifier:keychainAccessGroup:creationDate:lastModificationDate:]( objc_alloc(&OBJC_CLASS___THThreadNetworkCredentialsStoreRecord),  "initWithNetwork:credentials:uniqueIdentifier:keychainAccessGroup:creationDate:lastModificationDate:",  v70,  v21,  0LL,  @"com.apple.thread.network",  0LL,  0LL);
      if (!v72)
      {
        v83 = sub_1001768B4(1);
        v84 = (os_log_s *)objc_claimAutoreleasedReturnValue(v83);
        if (os_log_type_enabled(v84, OS_LOG_TYPE_ERROR)) {
          sub_100199D50();
        }

        goto LABEL_132;
      }

      v73 = v72;
    }

    else
    {
      if (v69) {
        sub_1001A9F7C();
      }
      v73 = 0LL;
      uint64_t v21 = v68;
    }

          v42 = (uint64_t)v10;
LABEL_62:

          int v10 = (void *)v42;
LABEL_63:
          v12 = v16;
          if (v16 >= a4) {
            goto LABEL_76;
          }
          break;
      }
    }
  }

  LOBYTE(v11) = 0;
  v91 = 0LL;
  v92 = 0LL;
  v89 = 0LL;
  v90 = 0LL;
  int v10 = 0LL;
LABEL_76:
  if (!v10 || !v89 || !v92 || !v91 || !v90)
  {
    v68 = sub_1001768B4(1);
    v67 = (os_log_s *)objc_claimAutoreleasedReturnValue(v68);
    if (os_log_type_enabled(v67, OS_LOG_TYPE_ERROR)) {
      sub_1001AABB8();
    }
    goto LABEL_99;
  }

  LOBYTE(v88) = 1;
  v64 = -[THThreadNetworkCredentials initWithMasterKey:passPhrase:PSKc:channel:PANID:userInfo:credentialDataSet:isActiveDevice:]( objc_alloc(&OBJC_CLASS___THThreadNetworkCredentials),  "initWithMasterKey:passPhrase:PSKc:channel:PANID:userInfo:credentialDataSet:isActiveDevice:",  v92,  0LL,  v91,  v11,  v90,  0LL,  0LL,  v88);
  if (!v64) {
    goto LABEL_97;
  }
  v65 = v64;
  v66 = sub_1001768B4(1);
  v67 = (os_log_s *)objc_claimAutoreleasedReturnValue(v66);
  if (os_log_type_enabled(v67, OS_LOG_TYPE_ERROR)) {
    sub_1001AAB48();
  }
LABEL_100:

  return v65;
}

LABEL_90:
  *(_WORD *)(a1 + 8) = 0;
  return result;
}

  v38 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_txErrorTxAbortedCsmaBackoff));
  [v3 setObject:v38 forKey:@"tx_error_tx_aborted_csma_backoff"];

  v8 = self->_has;
  if ((*(void *)&v8 & 0x20000000000000LL) == 0)
  {
LABEL_33:
    if ((*(void *)&v8 & 0x40000000000000LL) == 0) {
      goto LABEL_34;
    }
    goto LABEL_92;
  }

  PBDataWriterWriteUint32Field(v7, self->_txErrorTxAbortedCsmaBackoff, 29LL);
  v6 = self->_has;
  if ((*(void *)&v6 & 0x20000000000000LL) == 0)
  {
LABEL_33:
    if ((*(void *)&v6 & 0x40000000000000LL) == 0) {
      goto LABEL_34;
    }
    goto LABEL_92;
  }

  v4[56] = self->_txErrorTxAbortedCsmaBackoff;
  *((void *)v4 + 31) |= 0x8000000000000uLL;
  v6 = self->_has;
  if ((*(void *)&v6 & 0x20000000000000LL) == 0)
  {
LABEL_33:
    if ((*(void *)&v6 & 0x40000000000000LL) == 0) {
      goto LABEL_34;
    }
    goto LABEL_92;
  }

  *((_DWORD *)v6 + 59) = self->_txErrorTxAbortedIfs;
  v6[31] |= 0x40000000000000uLL;
  int v10 = self->_has;
  if ((*(void *)&v10 & 0x80000000000000LL) == 0)
  {
LABEL_33:
    if ((*(void *)&v10 & 0x4000000000000LL) == 0) {
      goto LABEL_34;
    }
    goto LABEL_92;
  }

  uint64_t v32 = 0LL;
  if ((*(void *)&v4 & 0x4000000000000LL) != 0)
  {
LABEL_38:
    v5 = 2654435761LL * self->_txErrorTxAbortedCcaTx;
    if ((*(void *)&v4 & 0x100000000000000LL) != 0) {
      goto LABEL_39;
    }
    goto LABEL_92;
  }

  self->_txErrorChannelAccessCcaBusy = v5[47];
  *(void *)&self->_has |= 0x40000000000uLL;
  v9 = *((void *)v5 + 31);
  if ((v9 & 0x80000000000LL) == 0)
  {
LABEL_37:
    if ((v9 & 0x2000000000000LL) == 0) {
      goto LABEL_38;
    }
    goto LABEL_92;
  }

  *__error() = 22;
  return 0xFFFFFFFFLL;
}

void sub_100006CA8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26)
{
}

void *sub_100006D1C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, void *a4@<X8>)
{
  v9[0] = 0LL;
  sub_100007640((uint64_t)v9, a2);
  v8[0] = 0LL;
  sub_100007640((uint64_t)v8, a3);
  sub_100007890(v10, v9, v8);
  sub_10000799C(a4, a1, v10);
  sub_1000075F0(v11);
  sub_100007618(v10);
  sub_1000075F0(v8);
  return sub_100007618(v9);
}

void sub_100006DB0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
}

uint64_t sub_100006DEC(int a1, void *a2, void *a3)
{
  if (a1) {
    return sub_100006FF8(a3);
  }
  else {
    return sub_100006F84(a2);
  }
}

uint64_t *sub_100006E08(uint64_t *a1, uint64_t *a2)
{
  v4[0] = 0LL;
  sub_1000080D0(v4, a2);
  sub_10000805C(v4, a1);
  sub_1000075F0(v4);
  return a1;
}

void sub_100006E50( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100006E68(uint64_t a1)
{
  v1 = (void *)sub_100034374(a1);
  operator delete(v1);
}

void *sub_100006E7C(void *a1)
{
  return a1;
}

void *sub_100006EA4(void *result)
{
  uint64_t v1 = *result;
  if (*result)
  {
    v2 = result;
    if ((v1 & 1) == 0)
    {
      v3 = *(uint64_t (**)(void *, void *, uint64_t))(v1 & 0xFFFFFFFFFFFFFFFELL);
      if (v3) {
        uint64_t result = (void *)v3(result + 1, result + 1, 2LL);
      }
    }

    void *v2 = 0LL;
  }

  return result;
}

void sub_100006EEC(void *a1)
{
}

__n128 sub_100006EFC(uint64_t a1, __n128 *a2)
{
  __n128 result = *a2;
  *(__n128 *)a1 = *a2;
  *(void *)(a1 + 16) = a2[1].n128_u64[0];
  a2->n128_u64[0] = 0LL;
  a2->n128_u64[1] = 0LL;
  a2[1].n128_u64[0] = 0LL;
  return result;
}

void sub_100006F38(uint64_t a1)
{
  v2 = *(void **)a1;
  if (v2)
  {
    *(void *)(a1 + 8) = v2;
    operator delete(v2);
    *(void *)a1 = 0LL;
    *(void *)(a1 + 8) = 0LL;
    *(void *)(a1 + 16) = 0LL;
  }

void sub_100006F6C(void ***a1)
{
  uint64_t v1 = *a1;
  v2 = **a1;
  if (v2)
  {
    v1[1] = v2;
    operator delete(v2);
  }

uint64_t sub_100006F84(void *a1)
{
  if (!*a1)
  {
    std::runtime_error::runtime_error(&v2, "call to empty boost::function");
    v2.__vftable = (std::runtime_error_vtbl *)&off_1002AD8D8;
    sub_10000706C(&v2);
  }

  return (*(uint64_t (**)(void *))((*a1 & 0xFFFFFFFFFFFFFFFELL) + 8))(a1 + 1);
}

void sub_100006FE4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, std::runtime_error a9)
{
}

uint64_t sub_100006FF8(void *a1)
{
  if (!*a1)
  {
    std::runtime_error::runtime_error(&v2, "call to empty boost::function");
    v2.__vftable = (std::runtime_error_vtbl *)&off_1002AD8D8;
    sub_10000706C(&v2);
  }

  return (*(uint64_t (**)(void *))((*a1 & 0xFFFFFFFFFFFFFFFELL) + 8))(a1 + 1);
}

void sub_100007058( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, std::runtime_error a9)
{
}

void sub_10000706C(const std::runtime_error *a1)
{
  exception = __cxa_allocate_exception(0x40uLL);
  sub_1000070C0((uint64_t)exception, a1);
}

void sub_1000070A8(_Unwind_Exception *a1)
{
}

uint64_t sub_1000070C4(uint64_t a1)
{
  *(void *)(a1 + 24) = &off_1002AD900;
  sub_1000073F8((uint64_t *)(a1 + 32));
  std::runtime_error::~runtime_error((std::runtime_error *)(a1 + 8));
  return a1;
}

uint64_t sub_100007104(uint64_t a1, const std::runtime_error *a2)
{
  *(void *)a1 = &off_1002AD8A8;
  std::runtime_error::runtime_error((std::runtime_error *)(a1 + 8), a2);
  *(void *)(a1 + 40) = 0LL;
  *(void *)(a1 + 48) = 0LL;
  *(_DWORD *)(a1 + 56) = -1;
  *(void *)a1 = &off_1002AD830;
  *(void *)(a1 + 8) = off_1002AD860;
  *(void *)(a1 + 24) = off_1002AD888;
  *(void *)(a1 + 32) = 0LL;
  return a1;
}

char *sub_100007160(uint64_t a1)
{
  std::runtime_error v2 = (char *)operator new(0x40uLL);
  *(void *)std::runtime_error v2 = &off_1002AD8A8;
  std::runtime_error::runtime_error((std::runtime_error *)(v2 + 8), (const std::runtime_error *)(a1 + 8));
  *((void *)v2 + 1) = &off_1002AD8D8;
  *((void *)v2 + 3) = &off_1002AD900;
  uint64_t v3 = *(void *)(a1 + 32);
  *((void *)v2 + 4) = v3;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 24LL))(v3);
  }
  *(_OWORD *)(v2 + 40) = *(_OWORD *)(a1 + 40);
  *((_DWORD *)v2 + 14) = *(_DWORD *)(a1 + 56);
  *(void *)std::runtime_error v2 = &off_1002AD830;
  *((void *)v2 + 1) = off_1002AD860;
  *((void *)v2 + 3) = off_1002AD888;
  sub_1000074F8((uint64_t)(v2 + 24), a1 + 24);
  return v2;
}

void sub_100007228(_Unwind_Exception *a1)
{
}

void sub_10000725C(uint64_t a1)
{
  exception = __cxa_allocate_exception(0x40uLL);
  sub_100007438((uint64_t)exception, a1);
}

void sub_100007298(_Unwind_Exception *a1)
{
}

void sub_1000072AC(uint64_t a1)
{
  *(void *)(a1 + 24) = &off_1002AD900;
  sub_1000073F8((uint64_t *)(a1 + 32));
  std::runtime_error::~runtime_error((std::runtime_error *)(a1 + 8));
  operator delete((void *)a1);
}

void sub_1000072EC(uint64_t a1)
{
  *(void *)(a1 + 16) = &off_1002AD900;
  sub_1000073F8((uint64_t *)(a1 + 24));
  std::runtime_error::~runtime_error((std::runtime_error *)a1);
}

void sub_100007324(uint64_t a1)
{
  std::runtime_error v2 = (void *)(a1 - 8);
  *(void *)(a1 + 16) = &off_1002AD900;
  sub_1000073F8((uint64_t *)(a1 + 24));
  std::runtime_error::~runtime_error((std::runtime_error *)a1);
  operator delete(v2);
}

void sub_100007368(void *a1)
{
  *a1 = &off_1002AD900;
  sub_1000073F8(a1 + 1);
  std::runtime_error::~runtime_error((std::runtime_error *)a1 - 1);
}

void sub_1000073A0(void *a1)
{
  std::runtime_error v2 = a1 - 3;
  *a1 = &off_1002AD900;
  sub_1000073F8(a1 + 1);
  std::runtime_error::~runtime_error((std::runtime_error *)a1 - 1);
  operator delete(v2);
}

void sub_1000073E4(std::runtime_error *a1)
{
}

uint64_t *sub_1000073F8(uint64_t *a1)
{
  uint64_t v2 = *a1;
  return a1;
}

uint64_t sub_100007438(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_1002AD8A8;
  std::runtime_error::runtime_error((std::runtime_error *)(a1 + 8), (const std::runtime_error *)(a2 + 8));
  *(void *)(a1 + 8) = &off_1002AD8D8;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = &off_1002AD900;
  *(void *)(a1 + 32) = v4;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 24LL))(v4);
  }
  __int128 v5 = *(_OWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = v5;
  *(void *)a1 = &off_1002AD830;
  *(void *)(a1 + 8) = off_1002AD860;
  *(void *)(a1 + 24) = off_1002AD888;
  return a1;
}

void sub_1000074E4(_Unwind_Exception *a1)
{
}

uint64_t *sub_1000074F8(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = 0LL;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4)
  {
    (*(void (**)(uint64_t *__return_ptr))(*(void *)v4 + 40LL))(&v6);
    sub_10000759C(&v7, v6);
    sub_1000073F8(&v6);
  }

  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  sub_10000759C((uint64_t *)(a1 + 8), v7);
  return sub_1000073F8(&v7);
}

void sub_100007574( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
}

uint64_t sub_10000759C(uint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 32LL))(result);
  }
  *a1 = a2;
  if (a2) {
    return (*(uint64_t (**)(uint64_t))(*(void *)a2 + 24LL))(a2);
  }
  return result;
}

void *sub_1000075F0(void *a1)
{
  return a1;
}

void *sub_100007618(void *a1)
{
  return a1;
}

__n128 sub_100007640(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  if (*a2)
  {
    *(void *)a1 = v2;
    if ((v2 & 1) != 0)
    {
      __n128 result = *(__n128 *)(a2 + 1);
      *(void *)(a1 + 24) = a2[3];
      *(__n128 *)(a1 + 8) = result;
    }

    else
    {
      (*(void (**)(uint64_t *, uint64_t, void))(v2 & 0xFFFFFFFFFFFFFFFELL))(a2 + 1, a1 + 8, 0LL);
    }
  }

  return result;
}

uint64_t sub_100007684(uint64_t a1, unsigned int *a2)
{
  uint64_t v2 = *(uint64_t **)(a1 + 8);
  if (v2)
  {
    unsigned int v3 = *a2;
    uint64_t result = 1LL;
    do
    {
      unsigned int v5 = *((_DWORD *)v2 + 7);
      if (v3 >= v5)
      {
        if (v5 >= v3) {
          return result;
        }
        ++v2;
      }

      uint64_t v2 = (uint64_t *)*v2;
    }

    while (v2);
  }

  return 0LL;
}

void sub_1000076BC(_OWORD **a1, uint64_t a2, int a3)
{
  if (a3 == 4)
  {
    *(_WORD *)(a2 + 8) = 0;
  }

  else
  {
    sub_100007708(a1, a2, a3);
  }

uint64_t sub_1000076DC(uint64_t *a1)
{
  return sub_1000077D4(*a1 + 16, *a1);
}

void sub_100007708(_OWORD **a1, uint64_t a2, int a3)
{
  switch(a3)
  {
    case 0:
      unsigned int v5 = *a1;
      uint64_t v6 = operator new(0x20uLL);
      __int128 v7 = v5[1];
      *uint64_t v6 = *v5;
      v6[1] = v7;
      *(void *)a2 = v6;
      break;
    case 1:
      *(void *)a2 = *a1;
      *a1 = 0LL;
      break;
    case 2:
      if (*(void *)a2) {
        operator delete(*(void **)a2);
      }
      goto LABEL_9;
    case 3:
      v8 = (const char *)(*(void *)(*(void *)a2 + 8LL) & 0x7FFFFFFFFFFFFFFFLL);
      if (v8 == (const char *)((unint64_t)"N5boost3_bi6bind_tIiNS_4_mfi3mf1IiN2nl8wpantund15NCPInstanceBaseEiEENS"
                                                  "0_5list2INS0_5valueIPNS5_17SpinelNCPInstanceEEENS9_IiEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)
        || !strcmp( v8,  (const char *)((unint64_t)"N5boost3_bi6bind_tIiNS_4_mfi3mf1IiN2nl8wpantund15NCPInstanceBaseEiEENS0_5 list2INS0_5valueIPNS5_17SpinelNCPInstanceEEENS9_IiEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))
      {
        *(void *)a2 = *a1;
      }

      else
      {
LABEL_9:
        *(void *)a2 = 0LL;
      }

      break;
    default:
      *(_WORD *)(a2 + 8) = 0;
      break;
  }

uint64_t sub_1000077D4(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(_DWORD *)(a1 + 8);
  return sub_10000780C(a2, (void *)a1, 0LL, &v3);
}

uint64_t sub_10000780C(uint64_t result, void *a2, uint64_t a3, unsigned int *a4)
{
  if (*a2)
  {
    uint64_t v4 = *(uint64_t (**)(void *, void))result;
    uint64_t v5 = *(void *)(result + 8);
    uint64_t v6 = (void *)(*a2 + (v5 >> 1));
    if ((v5 & 1) != 0) {
      uint64_t v4 = *(uint64_t (**)(void *, void))(*v6 + v4);
    }
    return v4(v6, *a4);
  }

  else
  {
    __break(0x5516u);
  }

  return result;
}

uint64_t sub_100007834(uint64_t *a1)
{
  return sub_10000785C(*a1);
}

uint64_t sub_10000785C(uint64_t a1)
{
  return sub_1000077D4(a1 + 16, a1);
}

void *sub_100007890(void *a1, uint64_t *a2, uint64_t *a3)
{
  v7[0] = 0LL;
  sub_100007640((uint64_t)v7, a2);
  v6[0] = 0LL;
  sub_100007640((uint64_t)v6, a3);
  sub_10000791C(a1, v7, v6);
  sub_1000075F0(v6);
  sub_100007618(v7);
  return a1;
}

void sub_1000078F8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
}

void *sub_10000791C(void *a1, uint64_t *a2, uint64_t *a3)
{
  v6[0] = 0LL;
  sub_100007640((uint64_t)v6, a2);
  *a1 = 0LL;
  sub_100007640((uint64_t)a1, v6);
  sub_100007618(v6);
  a1[4] = 0LL;
  sub_100007640((uint64_t)(a1 + 4), a3);
  return a1;
}

void sub_10000797C(_Unwind_Exception *a1)
{
}

void *sub_10000799C(void *a1, uint64_t a2, uint64_t *a3)
{
  *a1 = a2;
  a1[1] = 0LL;
  sub_100007640((uint64_t)(a1 + 1), a3);
  a1[5] = 0LL;
  sub_100007640((uint64_t)(a1 + 5), a3 + 4);
  return a1;
}

void sub_1000079F0(_Unwind_Exception *a1)
{
}

uint64_t (***sub_100007A04(uint64_t (***a1)(), uint64_t *a2))()
{
  uint64_t v5 = *a2;
  v6[0] = 0LL;
  sub_100007640((uint64_t)v6, a2 + 1);
  v7[0] = 0LL;
  sub_100007640((uint64_t)v7, a2 + 5);
  sub_100007AAC(a1, &v5);
  sub_1000075F0(v7);
  sub_100007618(v6);
  return a1;
}

void sub_100007A88(_Unwind_Exception *a1)
{
}

uint64_t (***sub_100007AAC(uint64_t (***a1)(), uint64_t *a2))()
{
  *a1 = 0LL;
  uint64_t v5 = *a2;
  v6[0] = 0LL;
  sub_100007640((uint64_t)v6, a2 + 1);
  v7[0] = 0LL;
  sub_100007640((uint64_t)v7, a2 + 5);
  sub_100007B54(a1, &v5);
  sub_1000075F0(v7);
  sub_100007618(v6);
  return a1;
}

void sub_100007B30(_Unwind_Exception *a1)
{
}

void *sub_100007B54(uint64_t (***a1)(), uint64_t *a2)
{
  uint64_t v7 = *a2;
  v8[0] = 0LL;
  sub_100007640((uint64_t)v8, a2 + 1);
  v9[0] = 0LL;
  sub_100007640((uint64_t)v9, a2 + 5);
  int v4 = sub_100007C60((uint64_t)off_1002AD940, &v7, a1 + 1);
  sub_1000075F0(v9);
  uint64_t result = sub_100007618(v8);
  if (v4) {
    uint64_t v6 = off_1002AD940;
  }
  else {
    uint64_t v6 = 0LL;
  }
  *a1 = v6;
  return result;
}

void sub_100007BF4(_Unwind_Exception *a1)
{
}

void sub_100007C18(void **a1, _WORD *a2, int a3)
{
  if (a3 == 4)
  {
    a2[4] = 0;
  }

  else
  {
    sub_100007D18(a1, a2, a3);
  }

void *sub_100007C38(uint64_t *a1, unsigned int a2)
{
  unsigned int v3 = a2;
  return sub_100007E50(*a1, &v3);
}

uint64_t sub_100007C60(uint64_t a1, uint64_t *a2, void *a3)
{
  uint64_t v8 = *a2;
  v9[0] = 0LL;
  sub_100007640((uint64_t)v9, a2 + 1);
  v10[0] = 0LL;
  sub_100007640((uint64_t)v10, a2 + 5);
  uint64_t v6 = sub_100007F20(a1, &v8, a3);
  sub_1000075F0(v10);
  sub_100007618(v9);
  return v6;
}

void sub_100007CF4(_Unwind_Exception *a1)
{
}

void sub_100007D18(void **a1, _WORD *a2, int a3)
{
  switch(a3)
  {
    case 0:
      uint64_t v5 = *a1;
      uint64_t v6 = operator new(0x48uLL);
      *uint64_t v6 = *v5;
      v6[1] = 0LL;
      sub_100007640((uint64_t)(v6 + 1), v5 + 1);
      v6[5] = 0LL;
      sub_100007640((uint64_t)(v6 + 5), v5 + 5);
      *(void *)a2 = v6;
      break;
    case 1:
      *(void *)a2 = *a1;
      *a1 = 0LL;
      break;
    case 2:
      uint64_t v7 = *(void **)a2;
      if (*(void *)a2)
      {
        sub_1000075F0(v7 + 5);
        sub_100007618(v7 + 1);
        operator delete(v7);
      }

      goto LABEL_8;
    case 3:
      uint64_t v8 = (const char *)(*(void *)(*(void *)a2 + 8LL) & 0x7FFFFFFFFFFFFFFFLL);
      if (v8 == (const char *)((unint64_t)"N5boost3_bi6bind_tIvPFviNS_8functionIFvvEEENS2_IFviEEEENS0_5list3INS_3"
                                                  "argILi1EEENS0_5valueIS4_EENSC_IS6_EEEEEE" & 0x7FFFFFFFFFFFFFFFLL)
        || !strcmp( v8,  (const char *)((unint64_t)"N5boost3_bi6bind_tIvPFviNS_8functionIFvvEEENS2_IFviEEEENS0_5list3INS_3arg ILi1EEENS0_5valueIS4_EENSC_IS6_EEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))
      {
        *(void *)a2 = *a1;
      }

      else
      {
LABEL_8:
        *(void *)a2 = 0LL;
      }

      break;
    default:
      a2[4] = 0;
      break;
  }

void sub_100007E2C(_Unwind_Exception *a1)
{
}

void *sub_100007E50(uint64_t a1, unsigned int *a2)
{
  unsigned int v3 = a2;
  return sub_100007E84((uint64_t *)(a1 + 8), (void (**)(uint64_t, void *, void *, __n128))a1, &v3);
}

void *sub_100007E84( uint64_t *a1, void (**a2)(uint64_t, void *, void *, __n128), unsigned int **a3)
{
  int v4 = *a2;
  uint64_t v5 = **a3;
  v9[0] = 0LL;
  sub_100007640((uint64_t)v9, a1);
  v8[0] = 0LL;
  __n128 v6 = sub_100007640((uint64_t)v8, a1 + 4);
  v4(v5, v9, v8, v6);
  sub_1000075F0(v8);
  return sub_100007618(v9);
}

void sub_100007EFC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
}

uint64_t sub_100007F20(uint64_t a1, uint64_t *a2, void *a3)
{
  uint64_t v7 = *a2;
  v8[0] = 0LL;
  sub_100007640((uint64_t)v8, a2 + 1);
  v9[0] = 0LL;
  sub_100007640((uint64_t)v9, a2 + 5);
  sub_100007FD4(a1, &v7, a3);
  sub_1000075F0(v9);
  sub_100007618(v8);
  return 1LL;
}

void sub_100007FB0(_Unwind_Exception *a1)
{
}

void sub_100007FD4(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = operator new(0x48uLL);
  *uint64_t v5 = *a2;
  v5[1] = 0LL;
  sub_100007640((uint64_t)(v5 + 1), a2 + 1);
  v5[5] = 0LL;
  sub_100007640((uint64_t)(v5 + 5), a2 + 5);
  *a3 = v5;
}

void sub_100008038(_Unwind_Exception *a1)
{
}

uint64_t *sub_10000805C(uint64_t *result, uint64_t *a2)
{
  if (a2 != result)
  {
    unsigned int v3 = result;
    v4[0] = 0LL;
    sub_1000080D0(v4, result);
    sub_1000080D0(v3, a2);
    sub_1000080D0(a2, v4);
    return sub_1000075F0(v4);
  }

  return result;
}

void sub_1000080BC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t *sub_1000080D0(uint64_t *result, uint64_t *a2)
{
  if (a2 != result)
  {
    uint64_t v3 = *a2;
    if (*a2)
    {
      *uint64_t result = v3;
      if ((v3 & 1) != 0)
      {
        __int128 v4 = *(_OWORD *)(a2 + 1);
        result[3] = a2[3];
        *(_OWORD *)(result + 1) = v4;
      }

      else
      {
        uint64_t result = (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v3 & 0xFFFFFFFFFFFFFFFELL))( a2 + 1,  result + 1,  1LL);
      }

      *a2 = 0LL;
    }

    else
    {
      return sub_100006EA4(result);
    }
  }

  return result;
}

void sub_100008144(void *a1)
{
  void *v1 = 0LL;
  __cxa_rethrow();
}

void sub_100008154(_Unwind_Exception *a1)
{
}

void sub_100008168( void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

void sub_100008178( void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

  ;
}

  ;
}

  ;
}

  ;
}

size_t sub_1000081C8(void *a1, char *__s, uint64_t a3)
{
  size_t v6 = strlen(__s);
  size_t v7 = v6;
  if (a3)
  {
    if (v6 >= a3 - 1) {
      size_t v8 = a3 - 1;
    }
    else {
      size_t v8 = v6;
    }
    if (v8) {
      memcpy(a1, __s, v8);
    }
    *((_BYTE *)a1 + v8) = 0;
  }

  return v7;
}

size_t sub_10000822C(const char *a1, const char *a2, unint64_t a3)
{
  size_t result = strlen(a1);
  if (!a3) {
    goto LABEL_8;
  }
  size_t v7 = result;
  if (result < a3 - 1)
  {
    if (a3 >= result)
    {
      size_t v8 = strlcpy((char *)&a1[result], a2, a3 - result);
      goto LABEL_6;
    }

LABEL_8:
    __break(0x5515u);
    goto LABEL_9;
  }

  size_t v8 = strlen(a2);
LABEL_6:
  BOOL v9 = __CFADD__(v7, v8);
  size_t result = v7 + v8;
  if (v9) {
LABEL_9:
  }
    __break(0x5500u);
  return result;
}

  size_t v7 = (_WORD *)(a1 + 73686);
  size_t v8 = *(unsigned __int16 *)(a1 + 40);
  if (v8 <= 0x367)
  {
    if (*(unsigned __int16 *)(a1 + 40) > 0x35Au)
    {
      if (v8 != 859)
      {
        if (v8 != 866) {
          goto LABEL_39;
        }
LABEL_28:
        v11 = sub_10003C81C(a1, a2, v27);
        goto LABEL_64;
      }
    }

    else
    {
      if (*(_WORD *)(a1 + 40))
      {
        if (v8 != 853) {
          goto LABEL_39;
        }
      }

      else
      {
        *size_t v7 = 0;
        *(_WORD *)(a1 + 40) = 853;
      }

      if (sub_1000D8DE8(a1) == 1)
      {
        *(_WORD *)(a1 + 40) = 0;
        return 2LL;
      }

      *(_WORD *)(a1 + 40) = 859;
    }

    size_t result = sub_1000561A0(a1 + 74016);
    if (!(_DWORD)result) {
      return result;
    }
    if (!*(_BYTE *)(a1 + 1379)) {
      goto LABEL_66;
    }
    if (!*(_BYTE *)(a1 + 1376)) {
      goto LABEL_66;
    }
    if (!*(_BYTE *)(a1 + 72757)) {
      goto LABEL_66;
    }
    uint64_t v14 = sub_1000D8DE8(a1);
    if (sub_1000B50F4(v14)) {
      goto LABEL_66;
    }
    v15 = sub_1000D8DE8(a1);
    if (sub_1000B50E8(v15)) {
      goto LABEL_66;
    }
    v16 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v16)
    {
      uint64_t v17 = v16;
      if (sub_10015A058(5) && os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
      {
        LOWORD(v24) = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_INFO,  "AutoResume is enabled. Trying to resume.",  (uint8_t *)&v24,  2u);
      }
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FF028();
    }

    *size_t v7 = 0;
    *(_WORD *)(a1 + 40) = 866;
    goto LABEL_28;
  }

  if (*(unsigned __int16 *)(a1 + 40) > 0x375u)
  {
    if (v8 != 886)
    {
      if (v8 != 889)
      {
        if (v8 != 902) {
          goto LABEL_39;
        }
        goto LABEL_66;
      }

      goto LABEL_63;
    }

    goto LABEL_38;
  }

  if (v8 != 872)
  {
    if (v8 == 879) {
      goto LABEL_20;
    }
LABEL_39:
    *(_WORD *)(a1 + 40) = 0;
    return 3LL;
  }

  if (!sub_100159F84(a1 + 32))
  {
    sub_10015A00C(a1 + 32);
    v12 = sub_1000D8DE8(a1);
    if (sub_1000B50E8(v12))
    {
LABEL_2:
      size_t result = 0LL;
      *(_WORD *)(a1 + 40) = 0;
      return result;
    }

    if (*(_BYTE *)(a1 + 1376))
    {
      uint64_t v13 = sub_1000D8DE8(a1);
      if (!sub_1000B50F4(v13))
      {
        uint64_t v20 = sub_1000D8DE8(a1);
        if ((sub_1000B50B8(v20) & 1) != 0)
        {
          uint64_t v21 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (v21)
          {
            uint64_t v22 = v21;
          }

          else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
          {
            sub_1001FF028();
          }

          uint64_t v23 = 902;
          goto LABEL_67;
        }

        *size_t v7 = 0;
        *(_WORD *)(a1 + 40) = 889;
LABEL_63:
        v11 = sub_10003E21C(a1, a2);
LABEL_64:
        if (v11 < 2) {
          return 0LL;
        }
        goto LABEL_66;
      }

      *size_t v7 = 0;
      *(_WORD *)(a1 + 40) = 886;
LABEL_38:
      v11 = sub_10003D694(a1, a2);
      goto LABEL_64;
    }

    v18 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v18)
    {
      v19 = v18;
      if (sub_10015A058(5) && os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
      {
        LOWORD(v24) = 0;
        _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_INFO, "Driver disabled.", (uint8_t *)&v24, 2u);
      }
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FF028();
    }

    *size_t v7 = 0;
    *(_WORD *)(a1 + 40) = 879;
LABEL_20:
    if (*(_BYTE *)(a1 + 1376))
    {
      BOOL v9 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v9)
      {
        int v10 = v9;
        if (sub_10015A058(5))
        {
          if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
          {
            LOWORD(v24) = 0;
            _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_INFO,  "Driver enabled - reinitializing NCP.",  (uint8_t *)&v24,  2u);
          }
        }
      }

      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        sub_1001FF028();
      }

      goto LABEL_2;
    }

  *a2 = v5;
  return result;
}

  *a2 = v5;
  return result;
}

  *a2 = v3;
  return v6;
}

    if (*a2 != 47) {
      sub_10016E988(this);
    }
    sub_10016EADC(this, a2, a3);
    return;
  }

  size_t v7 = (std::string *)this->__r_.__value_.__r.__words[0];
  size = this->__r_.__value_.__l.__size_;
LABEL_7:
  sub_10016A2F4(&__p, a2, a3, a3 - a2);
  sub_10016E894(this, &__p);
}

  uint64_t v23 = sub_1001768B4(1);
  v12 = (void *)objc_claimAutoreleasedReturnValue(v23);
  if (os_log_type_enabled((os_log_t)v12, OS_LOG_TYPE_ERROR)) {
    sub_1001767B4(self);
  }
  uint64_t v22 = 0LL;
LABEL_11:

  return v22;
}

  int v10 = sub_1001768B4(1);
  v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 136315138;
    v15 = "-[THThreadNetworkCredentialsKeychainBackingStore validateAODInternally:completion:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "%s: Error, dataset is not valid ", buf, 0xCu);
  }

  v12 = (void *)objc_claimAutoreleasedReturnValue( +[NSError storeError:description:]( &OBJC_CLASS___NSError,  "storeError:description:",  37LL,  @"Unable parse the Active Operational Dataset"));
  (*(void (**)(void))(*(void *)(a1 + 48) + 16LL))();

LABEL_11:
}

  v12 = sub_1001768B4(1);
  uint64_t v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 136315138;
    v18 = "-[THThreadNetworkCredentialsKeychainBackingStore storeCachedAODasPreferredNetwork:completion:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "%s: Error, dataset is not valid ", buf, 0xCu);
  }

  v11 = (void *)objc_claimAutoreleasedReturnValue( +[NSError storeError:description:]( &OBJC_CLASS___NSError,  "storeError:description:",  10LL,  @"No preferred network found"));
  (*(void (**)(void))(*(void *)(a1 + 48) + 16LL))();
LABEL_11:
}

  return v10;
}

void sub_1000082A0(uint64_t a1@<X0>, uint64_t **a2@<X8>)
{
  xpc_object_t v51 = xpc_null_create();
  xpc_object_t v4 = xpc_dictionary_create(0LL, 0LL, 0LL);
  if (v4 || (xpc_object_t v4 = xpc_null_create()) != 0LL)
  {
    if (xpc_get_type(v4) == (xpc_type_t)&_xpc_type_dictionary)
    {
      xpc_retain(v4);
      xpc_object_t v5 = v4;
    }

    else
    {
      xpc_object_t v5 = xpc_null_create();
    }
  }

  else
  {
    xpc_object_t v5 = xpc_null_create();
    xpc_object_t v4 = 0LL;
  }

  xpc_release(v4);
  xpc_object_t v6 = xpc_null_create();
  xpc_object_t v7 = v51;
  xpc_object_t v51 = v5;
  xpc_release(v7);
  xpc_release(v6);
  xpc_object_t v49 = xpc_string_create("wpantund");
  if (!v49) {
    xpc_object_t v49 = xpc_null_create();
  }
  __str.__r_.__value_.__r.__words[0] = (std::string::size_type)&v51;
  __str.__r_.__value_.__l.__size_ = (std::string::size_type)"ServerHostName";
  sub_1000089EC((uint64_t)&__str, &v49, &v50);
  xpc_release(v50);
  xpc_object_t v50 = 0LL;
  xpc_release(v49);
  xpc_object_t v49 = 0LL;
  xpc_object_t v47 = xpc_string_create("com.apple.wpantund.xpc");
  if (!v47) {
    xpc_object_t v47 = xpc_null_create();
  }
  __str.__r_.__value_.__r.__words[0] = (std::string::size_type)&v51;
  __str.__r_.__value_.__l.__size_ = (std::string::size_type)"ServiceXPCName";
  sub_1000089EC((uint64_t)&__str, &v47, &v48);
  xpc_release(v48);
  xpc_object_t v48 = 0LL;
  xpc_release(v47);
  xpc_object_t v47 = 0LL;
  xpc_object_t v45 = xpc_string_create("wpantund.daemon.ready");
  if (!v45) {
    xpc_object_t v45 = xpc_null_create();
  }
  __str.__r_.__value_.__r.__words[0] = (std::string::size_type)&v51;
  __str.__r_.__value_.__l.__size_ = (std::string::size_type)"ServiceNotificationName";
  sub_1000089EC((uint64_t)&__str, &v45, &v46);
  xpc_release(v46);
  xpc_object_t v46 = 0LL;
  xpc_release(v45);
  xpc_object_t v45 = 0LL;
  xpc_object_t v43 = xpc_BOOL_create(0);
  if (!v43) {
    xpc_object_t v43 = xpc_null_create();
  }
  __str.__r_.__value_.__r.__words[0] = (std::string::size_type)&v51;
  __str.__r_.__value_.__l.__size_ = (std::string::size_type)"ServerEnableSignalHandler";
  sub_1000089EC((uint64_t)&__str, &v43, &v44);
  xpc_release(v44);
  xpc_object_t v44 = 0LL;
  xpc_release(v43);
  xpc_object_t v43 = 0LL;
  size_t v8 = dispatch_queue_attr_make_with_qos_class(0LL, QOS_CLASS_USER_INITIATED, 0);
  dispatch_queue_t v9 = dispatch_queue_create("wpantund.xpc.queue", v8);
  int v10 = *(dispatch_object_s **)(a1 + 72);
  *(void *)(a1 + 72) = v9;
  if (v10) {
    dispatch_release(v10);
  }
  xpc_object_t v42 = v51;
  if (v51) {
    xpc_retain(v51);
  }
  else {
    xpc_object_t v42 = xpc_null_create();
  }
  v11 = _Block_copy(&stru_1002AD980);
  v12 = *(dispatch_object_s **)(a1 + 72);
  if (v12) {
    dispatch_retain(*(dispatch_object_t *)(a1 + 72));
  }
  v40 = v11;
  dispatch_object_t v41 = v12;
  sub_10015DC28(&v42, (uint64_t)&v40, a2);
  if (v41) {
    dispatch_release(v41);
  }
  if (v40) {
    _Block_release(v40);
  }
  xpc_release(v42);
  xpc_object_t v42 = 0LL;
  sub_10000AC00(&__str, "WpanctlCmd");
  uint64_t v13 = *a2;
  std::string::basic_string(&v38, &__str);
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1174405120LL;
  aBlock[2] = sub_100008B84;
  aBlock[3] = &unk_1002AD9D0;
  aBlock[4] = a1;
  std::string::basic_string(&v35, &__str);
  uint64_t v14 = _Block_copy(aBlock);
  v15 = *(dispatch_object_s **)(a1 + 72);
  if (v15) {
    dispatch_retain(*(dispatch_object_t *)(a1 + 72));
  }
  int v36 = v14;
  dispatch_object_t v37 = v15;
  sub_10015E65C(v13, &v38, (uint64_t)&v36);
  if (v37) {
    dispatch_release(v37);
  }
  if (v36) {
    _Block_release(v36);
  }
  sub_10000AC00(&v33, "TnmCmd");
  v16 = *a2;
  std::string::basic_string(&v32, &v33);
  v28[0] = _NSConcreteStackBlock;
  v28[1] = 1174405120LL;
  v28[2] = sub_100009A18;
  v28[3] = &unk_1002ADA00;
  std::string::basic_string(&v29, &v33);
  uint64_t v17 = _Block_copy(v28);
  v18 = *(dispatch_object_s **)(a1 + 72);
  if (v18) {
    dispatch_retain(*(dispatch_object_t *)(a1 + 72));
  }
  v30 = v17;
  dispatch_object_t object = v18;
  sub_10015E65C(v16, &v32, (uint64_t)&v30);
  if (object) {
    dispatch_release(object);
  }
  if (v30) {
    _Block_release(v30);
  }
  sub_10000AC00(&v27, "TdmCmd");
  v19 = *a2;
  std::string::basic_string(&v26, &v27);
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 1174405120LL;
  v22[2] = sub_100009C54;
  v22[3] = &unk_1002ADA30;
  std::string::basic_string(&__p, &v27);
  uint64_t v20 = _Block_copy(v22);
  uint64_t v21 = *(dispatch_object_s **)(a1 + 72);
  if (v21) {
    dispatch_retain(v21);
  }
  uint64_t v24 = v20;
  dispatch_object_t v25 = v21;
  sub_10015E65C(v19, &v26, (uint64_t)&v24);
  if (v25) {
    dispatch_release(v25);
  }
  if (v24) {
    _Block_release(v24);
  }
  xpc_release(v51);
}

void sub_10000880C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19, uint64_t a20, void *a21, uint64_t a22, int a23, __int16 a24, char a25, char a26, void *a27, uint64_t a28, int a29, __int16 a30, char a31, char a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, void *a37, uint64_t a38, int a39, __int16 a40, char a41, char a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, void *a48, uint64_t a49, int a50,__int16 a51,char a52,char a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,void *a59,uint64_t a60,int a61,__int16 a62,char a63)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (a32 < 0) {
    operator delete(a27);
  }
  if (a42 < 0) {
    operator delete(a37);
  }
  if (a53 < 0) {
    operator delete(a48);
  }
  if (a64 < 0) {
    operator delete(a59);
  }
  sub_10000AB80(v64);
  sub_1000089BC((xpc_object_t *)(v65 - 88));
  _Unwind_Resume(a1);
}

void sub_100008904( int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, void *__p, uint64_t a45, int a46, __int16 a47, char a48, char a49)
{
  if (a49 < 0) {
    operator delete(__p);
  }
  JUMPOUT(0x1000088DCLL);
}

void sub_10000893C()
{
}

void sub_100008944()
{
}

void sub_100008950()
{
}

xpc_object_t *sub_1000089BC(xpc_object_t *a1)
{
  *a1 = 0LL;
  return a1;
}

xpc_object_t sub_1000089EC@<X0>(uint64_t a1@<X0>, xpc_object_t *a2@<X1>, xpc_object_t *a3@<X8>)
{
  *a3 = *a2;
  xpc_object_t result = xpc_null_create();
  *a2 = result;
  return result;
}

void sub_100008A34(id a1, int a2)
{
  uint64_t v3 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v3)
  {
    xpc_object_t v4 = v3;
    if (sub_10015A058(6) && os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      sub_10015E828(a2, __p);
      if (v7 >= 0) {
        xpc_object_t v5 = __p;
      }
      else {
        xpc_object_t v5 = (void **)__p[0];
      }
      *(_DWORD *)buf = 136315138;
      dispatch_queue_t v9 = v5;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Wpantund Server status: %s", buf, 0xCu);
      if (v7 < 0) {
        operator delete(__p[0]);
      }
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

uint64_t sub_100008B48(uint64_t a1)
{
  uint64_t v2 = *(dispatch_object_s **)(a1 + 8);
  if (v2) {
    dispatch_release(v2);
  }
  if (*(void *)a1) {
    _Block_release(*(const void **)a1);
  }
  return a1;
}

void sub_100008B84(uint64_t a1, void *a2, void **a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(a1 + 32);
  dispatch_queue_t v9 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v9)
  {
    int v10 = v9;
    if (sub_10015A058(6) && os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      v11 = (void *)(a1 + 40);
      *(_DWORD *)buf = 136315138;
      uint64_t v24 = v11;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "Posted %s to Wpantund Process Queue", buf, 0xCu);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  v12 = *(dispatch_queue_s **)(v8 + 288);
  block[0] = _NSConcreteStackBlock;
  block[1] = 1174405120LL;
  block[2] = sub_100008D88;
  block[3] = &unk_1002AD9A0;
  block[4] = v8;
  std::string::basic_string(&__p, (const std::string *)(a1 + 40));
  sub_10000AB5C(&v18, a2);
  uint64_t v13 = *a3;
  xpc_object_t v20 = v13;
  if (v13) {
    xpc_retain(v13);
  }
  else {
    xpc_object_t v20 = xpc_null_create();
  }
  uint64_t v14 = *(void **)a4;
  if (*(void *)a4) {
    uint64_t v14 = _Block_copy(v14);
  }
  v15 = *(dispatch_object_s **)(a4 + 8);
  aBlock = v14;
  dispatch_object_t object = v15;
  if (v15) {
    dispatch_retain(v15);
  }
  dispatch_async(v12, block);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  xpc_release(v20);
  xpc_object_t v20 = 0LL;
  if (v19) {
    sub_10000ABAC(v19);
  }
}

void sub_100008D64(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    sub_100006EEC(a1);
  }
  _Unwind_Resume(a1);
}

void sub_100008D88(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v3)
  {
    xpc_object_t v4 = v3;
    if (sub_10015A058(6) && os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      xpc_object_t v5 = (void *)(a1 + 40);
      sub_10015A2BC((const std::string **)(a1 + 64), &v20);
      int size = (char)v20.__r_.__value_.__s.__size_;
      std::string::size_type v7 = v20.__r_.__value_.__r.__words[0];
      xpc::object::to_string((xpc::object *)(a1 + 80));
      uint64_t v8 = &v20;
      if (size < 0) {
        uint64_t v8 = (std::string *)v7;
      }
      if (v19 >= 0) {
        p_p = &__p;
      }
      else {
        p_p = __p;
      }
      LODWORD(buf.__r_.__value_.__l.__data_) = 136315650;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v5;
      WORD2(buf.__r_.__value_.__r.__words[1]) = 2080;
      *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v8;
      HIWORD(buf.__r_.__value_.__r.__words[2]) = 2080;
      uint64_t v22 = p_p;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_INFO,  "Handling command: %s for client %s with inputs %s",  (uint8_t *)&buf,  0x20u);
      if (v19 < 0) {
        operator delete(__p);
      }
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  sub_10015A2BC((const std::string **)(a1 + 64), &buf);
  if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    p_std::string buf = &buf;
  }
  else {
    p_std::string buf = (std::string *)buf.__r_.__value_.__r.__words[0];
  }
  sub_10000AC00(&v17, (char *)p_buf);
  v11 = *(void **)(a1 + 80);
  xpc_object_t v16 = v11;
  if (v11) {
    xpc_retain(v11);
  }
  else {
    xpc_object_t v16 = xpc_null_create();
  }
  v12 = *(void **)(a1 + 88);
  if (v12) {
    v12 = _Block_copy(v12);
  }
  uint64_t v13 = *(dispatch_object_s **)(a1 + 96);
  aBlock = v12;
  dispatch_object_t object = v13;
  if (v13) {
    dispatch_retain(v13);
  }
  sub_100009038(v2, &v17, &v16, (uint64_t)&aBlock);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  xpc_release(v16);
  xpc_object_t v16 = 0LL;
}

void sub_100008FBC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20, void *__p, uint64_t a22, int a23, __int16 a24, char a25, char a26, uint64_t a27, uint64_t a28, int a29, __int16 a30, char a31, char a32)
{
  if (a26 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100009038(uint64_t a1, const std::string *a2, xpc_object_t *a3, uint64_t a4)
{
  int v8 = sub_1000F3D4C();
  dispatch_queue_t v9 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v9)
  {
    int v10 = v9;
    if (sub_10015A058(5) && os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)std::string buf = 67109120;
      *(_DWORD *)&uint8_t buf[4] = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_INFO,  "WPANTUND:XPCServer - os_feature_enabled : %d",  buf,  8u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  if ((v8 & 1) == 0)
  {
    uint64_t v13 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v13)
    {
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }

    xpc_object_t v15 = xpc_null_create();
    if (*(void *)a4) {
      xpc_object_t v16 = _Block_copy(*(const void **)a4);
    }
    else {
      xpc_object_t v16 = 0LL;
    }
    uint64_t v22 = *(dispatch_queue_s **)(a4 + 8);
    *(void *)std::string buf = _NSConcreteStackBlock;
    *(void *)&buf[8] = 1174405120LL;
    *(void *)&buf[16] = sub_10000B228;
    v53 = (char *)&unk_1002ADAC8;
    if (v16) {
      uint64_t v23 = _Block_copy(v16);
    }
    else {
      uint64_t v23 = 0LL;
    }
    int v55 = 6;
    *(void *)&__int128 v54 = v23;
    *((void *)&v54 + 1) = v15;
    if (v15) {
      xpc_retain(v15);
    }
    else {
      *((void *)&v54 + 1) = xpc_null_create();
    }
    dispatch_async(v22, buf);
    xpc_release(*((xpc_object_t *)&v54 + 1));
    *((void *)&v54 + 1) = 0LL;
    if ((void)v54) {
      _Block_release((const void *)v54);
    }
    if (v16) {
      _Block_release(v16);
    }
    xpc_release(v15);
    return;
  }

  snprintf(__str, 0x100uLL, "%s/%s", "/com/nestlabs/WPANTunnelDriver", "utun2");
  snprintf(__s2, 0x100uLL, "%s/%s", "/org/wpantund", "utun2");
  v11 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v11)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      v12 = (void *)(a1 + 24);
      *(_DWORD *)std::string buf = 136315906;
      *(void *)&uint8_t buf[4] = v12;
      *(_WORD *)&buf[12] = 2080;
      *(void *)&buf[14] = "/com/nestlabs/WPANTunnelDriver";
      *(_WORD *)&buf[22] = 2080;
      v53 = __str;
      LOWORD(v54) = 2080;
      *(void *)((char *)&v54 + 2) = __s2;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_INFO,  "WPANTUND:XPCServer - Looking messages on interface = %s for Paths, %s, %s, %s",  buf,  0x2Au);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  if (xpc_get_type(*a3) != (xpc_type_t)&_xpc_type_dictionary)
  {
    uint64_t v14 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v14)
    {
      if (sub_10015A058(3))
      {
        if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
          sub_1001FBA14(v14);
        }
      }

      return;
    }

    if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      return;
    }
LABEL_49:
    sub_1001FB53C();
    return;
  }

  string = xpc_dictionary_get_string(*a3, "method");
  uint64_t v18 = xpc_dictionary_get_string(*a3, "interface");
  char v19 = xpc_dictionary_get_string(*a3, "path");
  std::string v20 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v20)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
    {
      uint64_t v21 = (void *)(a1 + 24);
      *(_DWORD *)std::string buf = 136315906;
      *(void *)&uint8_t buf[4] = v21;
      *(_WORD *)&buf[12] = 2080;
      *(void *)&buf[14] = v19;
      *(_WORD *)&buf[22] = 2080;
      v53 = (char *)v18;
      LOWORD(v54) = 2080;
      *(void *)((char *)&v54 + 2) = string;
      _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_INFO,  "WPANTUND:XPCServer - Received message for: interface = %s, path = %s, interface = %s, method = %s",  buf,  0x2Au);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  uint64_t v24 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v24)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v24, OS_LOG_TYPE_INFO))
    {
      int v25 = strcmp(v18, "com.nestlabs.WPANTunnelDriver");
      int v26 = strcmp(v19, "/com/nestlabs/WPANTunnelDriver");
      *(_DWORD *)std::string buf = 67109376;
      *(_DWORD *)&uint8_t buf[4] = v25;
      *(_WORD *)&buf[8] = 1024;
      *(_DWORD *)&buf[10] = v26;
      _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_INFO,  "WPANTUND:XPCServer - int_check = %d, path_check = %d",  buf,  0xEu);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  if (!strcmp(v18, "com.nestlabs.WPANTunnelDriver"))
  {
    if (!strcmp(v19, "/com/nestlabs/WPANTunnelDriver"))
    {
      std::string::basic_string(&v49, a2);
      xpc_object_t v37 = *a3;
      xpc_object_t v48 = v37;
      if (v37) {
        xpc_retain(v37);
      }
      else {
        xpc_object_t v48 = xpc_null_create();
      }
      std::string v38 = *(void **)a4;
      if (*(void *)a4) {
        std::string v38 = _Block_copy(v38);
      }
      v39 = *(dispatch_object_s **)(a4 + 8);
      xpc_object_t v46 = v38;
      dispatch_object_t v47 = v39;
      if (v39) {
        dispatch_retain(v39);
      }
      sub_10000A3E4(a1, (uint64_t)&v49, &v48, (uint64_t)&v46);
      if (v47) {
        dispatch_release(v47);
      }
      if (v46) {
        _Block_release(v46);
      }
      xpc_release(v48);
      xpc_object_t v48 = 0LL;
      std::string v32 = (void *)v49.__r_.__value_.__r.__words[0];
    }

    else
    {
      if (strcmp(v19, __str)) {
        goto LABEL_59;
      }
      sub_10000AC00(&v45, 0LL);
      xpc_object_t v28 = *a3;
      std::string v29 = *(void **)a4;
      if (*(void *)a4) {
        std::string v29 = _Block_copy(v29);
      }
      uint64_t v30 = a1 + 96;
      v31 = *(dispatch_object_s **)(a4 + 8);
      aBlock = v29;
      dispatch_object_t object = v31;
      if (v31) {
        dispatch_retain(v31);
      }
      sub_100018B1C(v30, &v45, v28, (uint64_t)&aBlock);
      if (object) {
        dispatch_release(object);
      }
      if (aBlock) {
        _Block_release(aBlock);
      }
      std::string v32 = (void *)v45.__r_.__value_.__r.__words[0];
    }

LABEL_103:
    operator delete(v32);
    return;
  }

  xpc_object_t v51 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_rxErrorDelayedTimeout));
  [v3 setObject:v51 forKey:@"rx_error_delayed_timeout"];

  int v8 = self->_has;
  if ((*(_DWORD *)&v8 & 0x8000000) == 0)
  {
LABEL_46:
    if ((*(_DWORD *)&v8 & 0x2000000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_105;
  }

  PBDataWriterWriteUint32Field(v7, self->_rxErrorDelayedTimeout, 42LL);
  xpc_object_t v6 = self->_has;
  if ((*(_DWORD *)&v6 & 0x8000000) == 0)
  {
LABEL_46:
    if ((*(_DWORD *)&v6 & 0x2000000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_105;
  }

  v4[25] = self->_rxErrorDelayedTimeout;
  *((void *)v4 + 31) |= 0x800000uLL;
  xpc_object_t v6 = self->_has;
  if ((*(_DWORD *)&v6 & 0x8000000) == 0)
  {
LABEL_46:
    if ((*(_DWORD *)&v6 & 0x2000000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_105;
  }

  *((_DWORD *)v6 + 27) = self->_rxErrorDestAddrFiltered;
  v6[31] |= 0x2000000uLL;
  int v10 = self->_has;
  if ((*(_DWORD *)&v10 & 0x80000000) == 0)
  {
LABEL_46:
    if ((*(void *)&v10 & 0x100000000LL) == 0) {
      goto LABEL_47;
    }
    goto LABEL_105;
  }

  std::string v17 = 0LL;
  if ((*(void *)&v4 & 0x100000000LL) != 0)
  {
LABEL_51:
    uint64_t v18 = 2654435761LL * self->_rxErrorTimeslotEnded;
    if ((*(_DWORD *)&v4 & 0x40000) != 0) {
      goto LABEL_52;
    }
    goto LABEL_105;
  }

  self->_txErrorAckNoMem = v5[45];
  *(void *)&self->_has |= 0x10000000000uLL;
  dispatch_queue_t v9 = *((void *)v5 + 31);
  if ((v9 & 0x80) == 0)
  {
LABEL_50:
    if ((v9 & 0x40000000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_105;
  }

LABEL_59:
  if ((!strcmp(v18, "org.wpantund.v1") || !strcmp(v18, "com.nestlabs.wpantund.v1")) && !strcmp(v19, __s2))
  {
    std::string::basic_string(&v42, a2);
    xpc_object_t v33 = *a3;
    v34 = *(void **)a4;
    if (*(void *)a4) {
      v34 = _Block_copy(v34);
    }
    uint64_t v35 = a1 + 192;
    int v36 = *(dispatch_object_s **)(a4 + 8);
    v40 = v34;
    dispatch_object_t v41 = v36;
    if (v36) {
      dispatch_retain(v36);
    }
    sub_10002B53C(v35, &v42, v33, (uint64_t)&v40);
    if (v41) {
      dispatch_release(v41);
    }
    if (v40) {
      _Block_release(v40);
    }
    std::string v32 = (void *)v42.__r_.__value_.__r.__words[0];
    goto LABEL_103;
  }

  std::string v27 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (!v27)
  {
    if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      return;
    }
    goto LABEL_49;
  }

  PBDataWriterWriteUint32Field(v14, self->_cslLossOfSyncDueToCslTimeout, 22LL);
  xpc_object_t v4 = v14;
  uint64_t v13 = self->_has;
  if ((*(_BYTE *)&v13 & 2) == 0)
  {
LABEL_39:
    if ((*(_WORD *)&v13 & 0x8000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_61;
  }

  self->_cslLossOfSyncDueToCslTimeout = v28[44];
  *(_DWORD *)&self->_has |= 1u;
  std::string v27 = v28[64];
  if ((v27 & 2) == 0)
  {
LABEL_39:
    if ((v27 & 0x8000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_61;
  }

      if (*(_DWORD *)(a1 + 244))
      {
        uint64_t v24 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v24)
        {
          int v25 = v24;
        }

        else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
          sub_1001FB53C();
        }
      }

      if (!*(_DWORD *)(a1 + 168)) {
        goto LABEL_76;
      }
      sub_100034C60("Ciib", (uint64_t *)&v43, 0x80u);
      sub_100006EFC(a1 + 104, &v43);
      std::string v45 = &v43;
      sub_100006F6C((void ***)&v45);
      *(_WORD *)(a1 + 98) = 0;
      *(_WORD *)(a1 + 8) = 396;
      int v8 = v44;
LABEL_68:
      if ((int)sub_10003453C(a1, a2, v8, a4, a5, a6, a7, a8) >= 2)
      {
        std::string v32 = *(unsigned int *)(a1 + 128);
        if ((_DWORD)v32)
        {
          *(_DWORD *)(a1 + 244) = v32;
          xpc_object_t v33 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (v33)
          {
            v34 = v33;
          }

          else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
          {
            sub_1001FB53C();
          }
        }

  __break(0x5500u);
}

                            uint64_t v13 = a1 + 22720;
                            uint64_t v14 = a3;
                            xpc_object_t v15 = 0;
                            goto LABEL_60;
                          }

          sub_10010D2EC(*(unsigned int *)(v6 + 12), &v31);
          uint64_t v22 = (char *)operator new(0x20uLL);
          *(void *)uint64_t v22 = &off_1002AE030;
          *(std::string *)(v22 + 8) = v31;
          memset(&v31, 0, sizeof(v31));
          v30.__r_.__value_.__r.__words[0] = (std::string::size_type)v22;
          sub_10003446C(a3);
          goto LABEL_54;
        }

void sub_1000097D8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, char a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19, uint64_t a20, char a21, uint64_t a22, int a23, __int16 a24, char a25, char a26, char a27, uint64_t a28, char a29, int a30, __int16 a31, char a32, char a33, uint64_t a34, int a35, __int16 a36, char a37, char a38)
{
  if (a2) {
    sub_100006EEC(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100009894(uint64_t a1)
{
  uint64_t v2 = *(dispatch_object_s **)(a1 + 8);
  if (v2) {
    dispatch_release(v2);
  }
  if (*(void *)a1) {
    _Block_release(*(const void **)a1);
  }
  return a1;
}

void sub_1000098D0(uint64_t a1, uint64_t a2)
{
  xpc_object_t v4 = *(void **)(a2 + 80);
  *(void *)(a1 + 80) = v4;
  if (v4) {
    xpc_retain(v4);
  }
  else {
    *(void *)(a1 + 80) = xpc_null_create();
  }
  xpc_object_t v5 = *(void **)(a2 + 88);
  if (v5) {
    xpc_object_t v5 = _Block_copy(v5);
  }
  xpc_object_t v6 = *(dispatch_object_s **)(a2 + 96);
  *(void *)(a1 + 88) = v5;
  *(void *)(a1 + 96) = v6;
  if (v6) {
    dispatch_retain(v6);
  }
}

void sub_100009954(uint64_t a1)
{
  uint64_t v2 = *(dispatch_object_s **)(a1 + 96);
  if (v2) {
    dispatch_release(v2);
  }
  uint64_t v3 = *(const void **)(a1 + 88);
  if (v3) {
    _Block_release(v3);
  }
  xpc_release(*(xpc_object_t *)(a1 + 80));
  *(void *)(a1 + 80) = 0LL;
  sub_10000AB80(a1 + 64);
}

std::string *sub_1000099BC(uint64_t a1, uint64_t a2)
{
  return std::string::basic_string((std::string *)(a1 + 40), (const std::string *)(a2 + 40));
}

void sub_1000099C8(uint64_t a1)
{
}

uint64_t sub_1000099DC(uint64_t a1)
{
  uint64_t v2 = *(dispatch_object_s **)(a1 + 8);
  if (v2) {
    dispatch_release(v2);
  }
  if (*(void *)a1) {
    _Block_release(*(const void **)a1);
  }
  return a1;
}

void sub_100009A18(uint64_t a1, const std::string **a2, void **a3, uint64_t a4)
{
  int v8 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v8)
  {
    dispatch_queue_t v9 = v8;
    if (sub_10015A058(6) && os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      int v10 = (void *)(a1 + 32);
      sub_10015A2BC(a2, &__p);
      if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        p_p = &__p;
      }
      else {
        p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      *(_DWORD *)std::string buf = 136315394;
      uint64_t v21 = v10;
      __int16 v22 = 2080;
      uint64_t v23 = p_p;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_INFO,  "Posted %s to TNM Process Queue from client : %s",  buf,  0x16u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  sub_10015A2BC(a2, &v18);
  v12 = *a3;
  xpc_object_t v17 = v12;
  if (v12) {
    xpc_retain(v12);
  }
  else {
    xpc_object_t v17 = xpc_null_create();
  }
  uint64_t v13 = *(void **)a4;
  if (*(void *)a4) {
    uint64_t v13 = _Block_copy(v13);
  }
  uint64_t v14 = *(dispatch_object_s **)(a4 + 8);
  aBlock = v13;
  dispatch_object_t object = v14;
  if (v14) {
    dispatch_retain(v14);
  }
  threadNetworkManager_MsgHandler(&v18, &v17, (uint64_t)&aBlock);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  xpc_release(v17);
  xpc_object_t v17 = 0LL;
}

void sub_100009BE4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, char a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a2) {
    sub_100006EEC(exception_object);
  }
  _Unwind_Resume(exception_object);
}

std::string *sub_100009C34(uint64_t a1, uint64_t a2)
{
  return std::string::basic_string((std::string *)(a1 + 32), (const std::string *)(a2 + 32));
}

void sub_100009C40(uint64_t a1)
{
}

void sub_100009C54(uint64_t a1, const std::string **a2, void **a3, uint64_t a4)
{
  int v8 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v8)
  {
    dispatch_queue_t v9 = v8;
    if (sub_10015A058(6) && os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      int v10 = (void *)(a1 + 32);
      sub_10015A2BC(a2, &__p);
      if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        p_p = &__p;
      }
      else {
        p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      *(_DWORD *)std::string buf = 136315394;
      uint64_t v21 = v10;
      __int16 v22 = 2080;
      uint64_t v23 = p_p;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_INFO,  "Posted %s to TDM Process Queue from client : %s",  buf,  0x16u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  sub_10015A2BC(a2, &v18);
  v12 = *a3;
  xpc_object_t v17 = v12;
  if (v12) {
    xpc_retain(v12);
  }
  else {
    xpc_object_t v17 = xpc_null_create();
  }
  uint64_t v13 = *(void **)a4;
  if (*(void *)a4) {
    uint64_t v13 = _Block_copy(v13);
  }
  uint64_t v14 = *(dispatch_object_s **)(a4 + 8);
  aBlock = v13;
  dispatch_object_t object = v14;
  if (v14) {
    dispatch_retain(v14);
  }
  threadDiagnosticsManager_MsgHandler((__int128 *)&v18, &v17, (uint64_t)&aBlock);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  xpc_release(v17);
  xpc_object_t v17 = 0LL;
}

void sub_100009E20( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, char a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a2) {
    sub_100006EEC(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100009E70(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 24) = 0LL;
  *(void *)a1 = off_1002ADA70;
  *(void *)(a1 + 32) = 0LL;
  *(void *)(a1 + 40) = 0LL;
  *(void *)(a1 + 56) = 0LL;
  *(void *)(a1 + 48) = a1 + 56;
  *(void *)(a1 + 64) = 0LL;
  *(void *)(a1 + 72) = 0LL;
  xpc_object_t v4 = (void *)(a1 + 80);
  sub_1000082A0(a1, (uint64_t **)(a1 + 80));
  sub_10000AB5C(&v14, v4);
  xpc_object_t v5 = *(dispatch_object_s **)(a1 + 72);
  dispatch_object_t object = v5;
  if (v5) {
    dispatch_retain(v5);
  }
  sub_100016CCC(a1 + 96, &v14, &object);
  if (object) {
    dispatch_release(object);
  }
  if (v15) {
    sub_10000ABAC(v15);
  }
  sub_10000AB5C(&v11, v4);
  xpc_object_t v6 = *(dispatch_object_s **)(a1 + 72);
  dispatch_object_t v10 = v6;
  if (v6) {
    dispatch_retain(v6);
  }
  sub_10001B38C(a1 + 192, &v11, &v10);
  if (v10) {
    dispatch_release(v10);
  }
  if (v12) {
    sub_10000ABAC(v12);
  }
  *(void *)(a1 + 288) = a2;
  std::string::size_type v7 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v7)
  {
    if (sub_10015A058(6) && os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)dispatch_queue_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "WPANTUND XPCServer - Started", v9, 2u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  return a1;
}

void sub_10000A000( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, dispatch_object_t object, char a12, uint64_t a13, dispatch_object_t a14, char a15)
{
  if (object) {
    dispatch_release(object);
  }
  sub_10000AB80((uint64_t)&a12);
  sub_100016DA8(v18);
  sub_10000AB80(v17);
  uint64_t v21 = *(dispatch_object_s **)(v15 + 72);
  if (v21) {
    dispatch_release(v21);
  }
  sub_10000AD30(v16);
  _Unwind_Resume(a1);
}

uint64_t sub_10000A08C(uint64_t a1)
{
  *(void *)a1 = off_1002ADA70;
  uint64_t v2 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v2)
  {
    if (sub_10015A058(6) && os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)xpc_object_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "WPANTUND XPCServer - Deleted", v5, 2u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  sub_10001B468(a1 + 192);
  sub_100016DA8(a1 + 96);
  sub_10000AB80(a1 + 80);
  uint64_t v3 = *(dispatch_object_s **)(a1 + 72);
  if (v3) {
    dispatch_release(v3);
  }
  sub_10000AD30(a1 + 48);
  return a1;
}

void sub_10000A184(uint64_t a1)
{
  uint64_t v1 = (void *)sub_10000A08C(a1);
  operator delete(v1);
}

uint64_t sub_10000A198()
{
  return 0x7FFFFFFFFFFFFFFFLL;
}

uint64_t sub_10000A1A4()
{
  return 0xFFFFFFFFLL;
}

uint64_t sub_10000A1B0(uint64_t a1, void *a2)
{
  (*(void (**)(std::string *__return_ptr, void *))(*(void *)a2 + 360LL))(&__str, a2);
  xpc_object_t v4 = (void *)(a1 + 24);
  std::string::operator=((std::string *)(a1 + 24), &__str);
  *sub_10000A3B0((uint64_t **)(a1 + 48), &__str) = a2;
  sub_1000186EC(a1 + 96, (uint64_t)a2);
  sub_10001B5F0(a1 + 192, (uint64_t)a2);
  xpc_object_t v5 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v5)
  {
    if (sub_10015A058(6) && os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)std::string buf = 136315138;
      dispatch_object_t v10 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_INFO,  "WPANTUND XPCServer - Interface added %s",  buf,  0xCu);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  sub_10015E214(*(uint64_t **)(a1 + 80));
  xpc_object_t v6 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v6)
  {
    if (sub_10015A058(6) && os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "xpc server started", buf, 2u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  return 0LL;
}

void sub_10000A384( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
}

void **sub_10000A3B0(uint64_t **a1, std::string *a2)
{
  uint64_t v3 = a2;
  return sub_10000ADA8(a1, (const void **)&a2->__r_.__value_.__l.__data_, (uint64_t)&unk_100222756, &v3) + 7;
}

void sub_10000A3E4(uint64_t a1, uint64_t a2, xpc_object_t *a3, uint64_t a4)
{
  string = xpc_dictionary_get_string(*a3, "method");
  dispatch_queue_t v9 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v9)
  {
    dispatch_object_t v10 = v9;
    if (sub_10015A058(6) && os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      uint64_t v11 = a2;
      xpc::object::to_string((xpc::object *)a3);
      if (v39 >= 0) {
        p_p = &__p;
      }
      else {
        p_p = __p;
      }
      *(_DWORD *)std::string buf = 136315650;
      *(void *)&uint8_t buf[4] = string;
      *(_WORD *)&buf[12] = 2080;
      *(void *)&buf[14] = v11;
      *(_WORD *)&buf[22] = 2080;
      dispatch_object_t v41 = p_p;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_INFO,  "WPANTUND XPCServer->MH: Inbound XPC message for method %s from %s as %s",  buf,  0x20u);
      if (v39 < 0) {
        operator delete(__p);
      }
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  if (!strcmp(string, "GetVersion"))
  {
    xpc_object_t v14 = xpc_null_create();
    std::string __p = v14;
    xpc_object_t v15 = xpc_dictionary_create(0LL, 0LL, 0LL);
    if (v15 || (xpc_object_t v15 = xpc_null_create()) != 0LL)
    {
      if (xpc_get_type(v15) == (xpc_type_t)&_xpc_type_dictionary)
      {
        xpc_retain(v15);
        xpc_object_t v16 = v15;
      }

      else
      {
        xpc_object_t v16 = xpc_null_create();
      }
    }

    else
    {
      xpc_object_t v16 = xpc_null_create();
      xpc_object_t v15 = 0LL;
    }

    xpc_release(v15);
    xpc_object_t v20 = xpc_null_create();
    std::string __p = v16;
    xpc_release(v14);
    xpc_release(v20);
    xpc_dictionary_set_uint64(v16, "version", 2uLL);
    uint64_t v21 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v21)
    {
      if (sub_10015A058(6) && os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)std::string buf = 136315394;
        *(void *)&uint8_t buf[4] = string;
        *(_WORD *)&buf[12] = 2080;
        *(void *)&buf[14] = a2;
        _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_INFO,  "WPANTUND XPCServer->MH: Sent XPC response for method %s from %s ",  buf,  0x16u);
      }
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }

    __int16 v22 = __p;
    if (__p)
    {
      xpc_retain(__p);
      xpc_object_t v23 = v22;
    }

    else
    {
      xpc_object_t v23 = xpc_null_create();
    }

    if (*(void *)a4) {
      uint64_t v24 = _Block_copy(*(const void **)a4);
    }
    else {
      uint64_t v24 = 0LL;
    }
    int v25 = *(dispatch_queue_s **)(a4 + 8);
    *(void *)std::string buf = _NSConcreteStackBlock;
    *(void *)&buf[8] = 1174405120LL;
    *(void *)&buf[16] = sub_10000B228;
    dispatch_object_t v41 = &unk_1002ADAC8;
    if (v24) {
      int v26 = _Block_copy(v24);
    }
    else {
      int v26 = 0LL;
    }
    int v44 = 0;
    aBlock = v26;
    xpc_object_t object = v23;
    if (v23) {
      xpc_retain(v23);
    }
    else {
      xpc_object_t object = xpc_null_create();
    }
    dispatch_async(v25, buf);
    xpc_release(object);
    xpc_object_t object = 0LL;
    if (aBlock) {
      _Block_release(aBlock);
    }
    if (v24) {
      _Block_release(v24);
    }
    xpc_release(v23);
    xpc_release(v22);
  }

  else if (!strcmp(string, "GetInterfaces"))
  {
    xpc_object_t v17 = xpc_null_create();
    std::string __p = v17;
    xpc_object_t v18 = xpc_dictionary_create(0LL, 0LL, 0LL);
    if (v18 || (xpc_object_t v18 = xpc_null_create()) != 0LL)
    {
      if (xpc_get_type(v18) == (xpc_type_t)&_xpc_type_dictionary)
      {
        xpc_retain(v18);
        xpc_object_t v19 = v18;
      }

      else
      {
        xpc_object_t v19 = xpc_null_create();
      }
    }

    else
    {
      xpc_object_t v19 = xpc_null_create();
      xpc_object_t v18 = 0LL;
    }

    xpc_release(v18);
    xpc_object_t v27 = xpc_null_create();
    std::string __p = v19;
    xpc_release(v17);
    xpc_release(v27);
    uint64_t v37 = 0LL;
    xpc_object_t v28 = xpc_array_create(0LL, 0LL);
    uint64_t v29 = *(void *)(a1 + 48);
    uint64_t v37 = v29;
    if (v29 != a1 + 56)
    {
      do
      {
        uint64_t v30 = (const char *)(v29 + 32);
        xpc_array_set_string(v28, 0xFFFFFFFFFFFFFFFFLL, v30);
        sub_10000B338((uint64_t)&v37);
        uint64_t v29 = v37;
      }

      while (v37 != a1 + 56);
      xpc_object_t v19 = __p;
    }

    xpc_dictionary_set_string(v19, "method", string);
    v31 = __p;
    xpc_dictionary_set_value(__p, "list", v28);
    xpc_release(v28);
    std::string v32 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v32)
    {
      if (sub_10015A058(6) && os_log_type_enabled(v32, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)std::string buf = 136315394;
        *(void *)&uint8_t buf[4] = string;
        *(_WORD *)&buf[12] = 2080;
        *(void *)&buf[14] = a2;
        _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_INFO,  "WPANTUND XPCServer->MH: Sent XPC response for method %s from %s",  buf,  0x16u);
      }
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }

    if (v31)
    {
      xpc_retain(v31);
      xpc_object_t v33 = v31;
    }

    else
    {
      xpc_object_t v33 = xpc_null_create();
    }

    if (*(void *)a4) {
      v34 = _Block_copy(*(const void **)a4);
    }
    else {
      v34 = 0LL;
    }
    uint64_t v35 = *(dispatch_queue_s **)(a4 + 8);
    *(void *)std::string buf = _NSConcreteStackBlock;
    *(void *)&buf[8] = 1174405120LL;
    *(void *)&buf[16] = sub_10000B228;
    dispatch_object_t v41 = &unk_1002ADAC8;
    if (v34) {
      int v36 = _Block_copy(v34);
    }
    else {
      int v36 = 0LL;
    }
    int v44 = 0;
    aBlock = v36;
    xpc_object_t object = v33;
    if (v33) {
      xpc_retain(v33);
    }
    else {
      xpc_object_t object = xpc_null_create();
    }
    dispatch_async(v35, buf);
    xpc_release(object);
    xpc_object_t object = 0LL;
    if (aBlock) {
      _Block_release(aBlock);
    }
    if (v34) {
      _Block_release(v34);
    }
    xpc_release(v33);
    xpc_release(v31);
  }

  else
  {
    uint64_t v13 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v13)
    {
      if (sub_10015A058(3))
      {
        if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
          sub_1001FBAD0((uint64_t)string, (uint64_t *)a2, v13);
        }
      }
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }
  }

void sub_10000AA9C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  if (a2) {
    sub_100006EEC(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void *sub_10000AB5C(void *result, void *a2)
{
  uint64_t v2 = a2[1];
  *xpc_object_t result = *a2;
  result[1] = v2;
  if (v2)
  {
    uint64_t v3 = (unint64_t *)(v2 + 8);
    do
      unint64_t v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }

  return result;
}

uint64_t sub_10000AB80(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 8);
  if (v2) {
    sub_10000ABAC(v2);
  }
  return a1;
}

void sub_10000ABAC(std::__shared_weak_count *a1)
{
  p_shared_owners = (unint64_t *)&a1->__shared_owners_;
  do
    unint64_t v3 = __ldaxr(p_shared_owners);
  while (__stlxr(v3 - 1, p_shared_owners));
  if (!v3)
  {
    ((void (*)(std::__shared_weak_count *))a1->__on_zero_shared)(a1);
    std::__shared_weak_count::__release_weak(a1);
  }

void *sub_10000AC00(void *a1, char *__s)
{
  size_t v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8LL) {
    sub_10000ACA8();
  }
  size_t v5 = v4;
  if (v4 >= 0x17)
  {
    if ((v4 | 7) == 0x17) {
      size_t v7 = 25LL;
    }
    else {
      size_t v7 = (v4 | 7) + 1;
    }
    xpc_object_t v6 = operator new(v7);
    a1[1] = v5;
    a1[2] = v7 | 0x8000000000000000LL;
    *a1 = v6;
  }

  else
  {
    *((_BYTE *)a1 + 23) = v4;
    xpc_object_t v6 = a1;
    if (!v4) {
      goto LABEL_10;
    }
  }

  memmove(v6, __s, v5);
LABEL_10:
  *((_BYTE *)v6 + v5) = 0;
  return a1;
}

void sub_10000ACA8()
{
}

void sub_10000ACBC(const char *a1)
{
  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  sub_10000AD0C(exception, a1);
}

void sub_10000ACF8(_Unwind_Exception *a1)
{
}

std::logic_error *sub_10000AD0C(std::logic_error *a1, const char *a2)
{
  xpc_object_t result = std::logic_error::logic_error(a1, a2);
  return result;
}

uint64_t sub_10000AD30(uint64_t a1)
{
  return a1;
}

void sub_10000AD58(uint64_t a1, char *a2)
{
  if (a2)
  {
    sub_10000AD58(a1, *(void *)a2);
    sub_10000AD58(a1, *((void *)a2 + 1));
    if (a2[55] < 0) {
      operator delete(*((void **)a2 + 4));
    }
    operator delete(a2);
  }

void **sub_10000ADA8(uint64_t **a1, const void **a2, uint64_t a3, const std::string **a4)
{
  size_t v7 = (void ***)sub_10000AE50((uint64_t)a1, &v12, a2);
  int v8 = *v7;
  if (!*v7)
  {
    dispatch_queue_t v9 = v7;
    sub_10000AEEC((uint64_t)a1, a3, a4, (uint64_t)v11);
    sub_10000AF70(a1, v12, v9, v11[0]);
    int v8 = v11[0];
    v11[0] = 0LL;
    sub_10000B1C0(v11, 0LL);
  }

  return v8;
}

void *sub_10000AE50(uint64_t a1, void *a2, const void **a3)
{
  size_t v5 = (void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    uint64_t v7 = a1 + 16;
    do
    {
      while (1)
      {
        int v8 = (void *)v4;
        dispatch_queue_t v9 = (const void **)(v4 + 32);
        uint64_t v4 = *v8;
        size_t v5 = v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }

      if (!sub_10000AFC8(v7, v9, a3)) {
        break;
      }
      size_t v5 = v8 + 1;
      uint64_t v4 = v8[1];
    }

    while (v4);
  }

  else
  {
    int v8 = (void *)(a1 + 8);
  }

LABEL_10:
  *a2 = v8;
  return v5;
}

  *a2 = v7;
  return result;
}

  *a2 = v8;
  return v5;
}

  *a2 = v7;
  return result;
}

  *a2 = v7;
  return result;
}

  if (v7 < 0x4B)
  {
    uint64_t v11 = 3LL;
LABEL_18:
    sub_1000AFB14((uint64_t)result, (uint64_t)"Add", this, a3, v11);
    return (ot *)v11;
  }

  if ((_DWORD)v7 == 75)
  {
    *(_OWORD *)(a1 + 1800) = *(_OWORD *)this;
    int v8 = *(unsigned __int16 *)(a1 + 1800);
    if (v8 <= 0x4B)
    {
      *(void *)(a1 + 24LL * *(unsigned __int16 *)(a1 + 1800) + 16) = a3;
      *(_WORD *)(a1 + 1800) = v8 + 1;
LABEL_17:
      sub_1000AFAD8(a1, (unsigned __int16)v8);
      uint64_t v11 = 0LL;
      goto LABEL_18;
    }
  }

  *a2 = v8;
  return v5;
}

  *a2 = v7;
  return result;
}

    __n.__r_.__value_.__r.__words[0] = 0LL;
    xpc_object_t v14 = 0LL;
    if ((char)a1->__r_.__value_.__s.__size_ < 0)
    {
      dispatch_queue_t v9 = (std::string *)a1->__r_.__value_.__r.__words[0];
      int v8 = a1->__r_.__value_.__l.__size_;
    }

    else
    {
      int v8 = a1->__r_.__value_.__s.__size_;
      dispatch_queue_t v9 = a1;
    }

    sub_10016EE08(v9, v8, &v14);
    dispatch_object_t v10 = __n.__r_.__value_.__r.__words[0];
    if (!__n.__r_.__value_.__r.__words[0]) {
      goto LABEL_20;
    }
    if (__n.__r_.__value_.__r.__words[0] != v14) {
      goto LABEL_19;
    }
    uint64_t v11 = a1;
    if (!memcmp(v11, __s, __n.__r_.__value_.__r.__words[0]))
    {
LABEL_20:
      uint64_t v12 = &__s[v10];
      if (*v12 != 47) {
        sub_10016E988(a1);
      }
      sub_10016EADC(a1, v12, a3);
    }

    else
    {
LABEL_19:
      sub_10016E7C8(a1, __s, a3, a3 - __s);
    }

    return;
  }

  if (a1 > (std::string *)__s) {
    goto LABEL_10;
  }
  int size = a1->__r_.__value_.__s.__size_;
  uint64_t v7 = a1;
LABEL_9:
  sub_10016A2F4(&__n, __s, a3, a3 - __s);
  sub_10016EC50(a1, &__n);
}

    int v8 = 0LL;
    goto LABEL_11;
  }

  uint64_t v7 = (void *)result;
  if (!result)
  {
    uint64_t v13 = sub_1001768B4(1);
    xpc_object_t v14 = (os_log_s *)objc_claimAutoreleasedReturnValue(v13);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
      sub_10019443C(v14, v15, v16);
    }

    if (a4)
    {
      int v8 = 0LL;
      *a4 = (id)objc_claimAutoreleasedReturnValue( +[NSError storeError:description:]( &OBJC_CLASS___NSError,  "storeError:description:",  3LL,  @"Bad return type from SecItemCopyMatching"));
      goto LABEL_11;
    }

    goto LABEL_10;
  }

  int v8 = (void *)objc_claimAutoreleasedReturnValue( +[THThreadNetworkCredentialsActiveDataSetRecord activeDataSetRecordFromKeychainDictionary:]( &OBJC_CLASS___THThreadNetworkCredentialsActiveDataSetRecord,  "activeDataSetRecordFromKeychainDictionary:",  result));
LABEL_11:

  return v8;
}

  *a2 = v7;
  return result;
}

std::string *sub_10000AEEC@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, const std::string **a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a1 + 8;
  int v8 = (char *)operator new(0x40uLL);
  *(void *)a4 = v8;
  *(void *)(a4 + 8) = v7;
  *(_BYTE *)(a4 + 16) = 0;
  xpc_object_t result = sub_10000B034(v7, (std::string *)(v8 + 32), a2, a3);
  *(_BYTE *)(a4 + 16) = 1;
  return result;
}

void sub_10000AF58(_Unwind_Exception *a1)
{
}

void *sub_10000AF70(uint64_t **a1, uint64_t a2, void **a3, void *a4)
{
  *a4 = 0LL;
  a4[1] = 0LL;
  a4[2] = a2;
  *a3 = a4;
  size_t v5 = (uint64_t *)**a1;
  if (v5) {
    *a1 = v5;
  }
  xpc_object_t result = sub_10000B054(a1[1], *a3);
  uint64_t v7 = a1[2];
  BOOL v8 = __CFADD__(v7, 1LL);
  dispatch_queue_t v9 = (uint64_t *)((char *)v7 + 1);
  if (v8) {
    __break(0x5500u);
  }
  else {
    a1[2] = v9;
  }
  return result;
}

BOOL sub_10000AFC8(uint64_t a1, const void **a2, const void **a3)
{
  int v3 = *((char *)a3 + 23);
  BOOL v4 = v3 < 0;
  if (v3 >= 0) {
    size_t v5 = a3;
  }
  else {
    size_t v5 = *a3;
  }
  if (v4) {
    size_t v6 = (size_t)a3[1];
  }
  else {
    size_t v6 = *((unsigned __int8 *)a3 + 23);
  }
  int v7 = *((char *)a2 + 23);
  if (v7 >= 0) {
    size_t v8 = *((unsigned __int8 *)a2 + 23);
  }
  else {
    size_t v8 = (size_t)a2[1];
  }
  if (v7 >= 0) {
    dispatch_queue_t v9 = a2;
  }
  else {
    dispatch_queue_t v9 = *a2;
  }
  if (v6 >= v8) {
    size_t v10 = v8;
  }
  else {
    size_t v10 = v6;
  }
  int v11 = memcmp(v9, v5, v10);
  if (v11) {
    return v11 < 0;
  }
  else {
    return v8 < v6;
  }
}

std::string *sub_10000B034(int a1, std::string *this, uint64_t a3, const std::string **a4)
{
  xpc_object_t result = std::string::basic_string(this, *a4);
  result[1].__r_.__value_.__r.__words[0] = 0LL;
  return result;
}

void *sub_10000B054(void *result, void *a2)
{
  *((_BYTE *)a2 + 24) = a2 == result;
  if (a2 != result)
  {
    do
    {
      uint64_t v2 = a2[2];
      if (*(_BYTE *)(v2 + 24)) {
        break;
      }
      int v3 = *(void **)(v2 + 16);
      uint64_t v4 = *v3;
      if (*v3 == v2)
      {
        uint64_t v7 = v3[1];
        if (!v7 || (v8 = *(unsigned __int8 *)(v7 + 24), size_t v5 = (_BYTE *)(v7 + 24), v8))
        {
          if (*(void **)v2 != a2)
          {
            sub_10000B148(a2[2]);
            a2 = (void *)v2;
          }

          uint64_t v11 = a2[2];
          *(_BYTE *)(v11 + 24) = 1;
          uint64_t v12 = *(void *)(v11 + 16);
          *(_BYTE *)(v12 + 24) = 0;
          return sub_10000B184((void *)v12);
        }
      }

      else if (!v4 || (v6 = *(unsigned __int8 *)(v4 + 24), size_t v5 = (_BYTE *)(v4 + 24), v6))
      {
        if (*(void **)v2 == a2)
        {
          sub_10000B184((void *)a2[2]);
          a2 = (void *)v2;
        }

        uint64_t v9 = a2[2];
        *(_BYTE *)(v9 + 24) = 1;
        uint64_t v10 = *(void *)(v9 + 16);
        *(_BYTE *)(v10 + 24) = 0;
        return (void *)sub_10000B148(v10);
      }

      *(_BYTE *)(v2 + 24) = 1;
      a2 = v3;
      *((_BYTE *)v3 + 24) = v3 == result;
      *size_t v5 = 1;
    }

    while (v3 != result);
  }

  return result;
}

uint64_t sub_10000B148(uint64_t result)
{
  uint64_t v1 = *(uint64_t **)(result + 8);
  uint64_t v2 = *v1;
  *(void *)(result + 8) = *v1;
  if (v2) {
    *(void *)(v2 + 16) = result;
  }
  v1[2] = *(void *)(result + 16);
  *(void *)(*(void *)(result + 16) + 8LL * (**(void **)(result + 16) != result)) = v1;
  uint64_t *v1 = result;
  *(void *)(result + 16) = v1;
  return result;
}

void *sub_10000B184(void *result)
{
  uint64_t v1 = *result;
  uint64_t v2 = *(void *)(*result + 8LL);
  *xpc_object_t result = v2;
  if (v2) {
    *(void *)(v2 + 16) = result;
  }
  *(void *)(v1 + 16) = result[2];
  *(void *)(result[2] + 8LL * (*(void *)result[2] != (void)result)) = v1;
  *(void *)(v1 + 8) = result;
  result[2] = v1;
  return result;
}

void sub_10000B1C0(void ***a1, void **a2)
{
  int v3 = *a1;
  *a1 = a2;
  if (v3) {
    sub_10000B1DC((uint64_t)(a1 + 1), v3);
  }
}

void sub_10000B1DC(uint64_t a1, void **__p)
{
  if (*(_BYTE *)(a1 + 8))
  {
  }

  else if (!__p)
  {
    return;
  }

  operator delete(__p);
}

void sub_10000B228(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 48);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v2 = *(void **)(a1 + 40);
  xpc_object_t object = v2;
  if (v2) {
    xpc_retain(v2);
  }
  else {
    xpc_object_t object = xpc_null_create();
  }
  (*(void (**)(uint64_t, void, xpc_object_t *))(v3 + 16))(v3, v1, &object);
  xpc_release(object);
}

void sub_10000B288(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

xpc_object_t sub_10000B2A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(const void **)(a2 + 32);
  if (v4) {
    size_t v5 = _Block_copy(v4);
  }
  else {
    size_t v5 = 0LL;
  }
  int v6 = *(void **)(a2 + 40);
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  if (v6) {
    return xpc_retain(v6);
  }
  xpc_object_t result = xpc_null_create();
  *(void *)(a1 + 40) = result;
  return result;
}

void sub_10000B2FC(uint64_t a1)
{
  *(void *)(a1 + 40) = 0LL;
  uint64_t v2 = *(const void **)(a1 + 32);
  if (v2) {
    _Block_release(v2);
  }
}

uint64_t sub_10000B338(uint64_t result)
{
  int v1 = *(void **)result;
  uint64_t v2 = *(void **)(*(void *)result + 8LL);
  if (v2)
  {
    do
    {
      uint64_t v3 = v2;
      uint64_t v2 = (void *)*v2;
    }

    while (v2);
  }

  else
  {
    do
    {
      uint64_t v3 = (void *)v1[2];
      BOOL v4 = *v3 == (void)v1;
      int v1 = v3;
    }

    while (!v4);
  }

  *(void *)xpc_object_t result = v3;
  return result;
}

uint64_t sub_10000B370()
{
  *(void *)size_t v5 = 0x1500000001LL;
  size_t v3 = 16LL;
  gettimeofday(&v2, &v1);
  if (sysctl(v5, 2u, &v4, &v3, 0LL, 0LL) == -1 || !v4) {
    return -1LL;
  }
  uint64_t result = v2.tv_sec - v4;
  if (__OFSUB__(v2.tv_sec, v4))
  {
    __break(0x5515u);
    return -1LL;
  }

  return result;
}

uint64_t sub_10000B414()
{
  return gettimeofday((timeval *)&qword_1002C9660, &unk_1002C9670);
}

__darwin_time_t sub_10000B428()
{
  if (!qword_1002C9660 || !v2.tv_sec) {
    return -1LL;
  }
  __darwin_time_t result = v2.tv_sec - qword_1002C9660;
  if (__OFSUB__(v2.tv_sec, qword_1002C9660))
  {
    __break(0x5515u);
    return -1LL;
  }

  return result;
}

void sub_10000B470(uint64_t *a1)
{
  timeval v2 = objc_autoreleasePoolPush();
  size_t v3 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  uint64_t v4 = sub_10000BD6C(a1);
  {
    sub_10000BDD8((uint64_t)a1, (uint64_t)&v52);
    size_t v5 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    int v6 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    for (uint64_t i = v53[0]; (std::string::size_type *)i != &v52; uint64_t i = *(void *)(i + 8))
    {
      int v8 = (void *)(i + 16);
      uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v8));
      -[NSMutableArray addObject:](v6, "addObject:", v9);
    }

    -[NSMutableDictionary setObject:forKey:](v5, "setObject:forKey:", v6, @"String Values");
    -[NSMutableDictionary setValuesForKeysWithDictionary:](v3, "setValuesForKeysWithDictionary:", v5);

    sub_10000C0E8(&v52);
    goto LABEL_27;
  }

  uint64_t v10 = sub_10000BD6C(a1);
  {
    sub_10000BE48((uint64_t)a1, &v52);
    uint64_t v11 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    uint64_t v12 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    std::string::size_type v13 = v52;
    for (v51.__r_.__value_.__r.__words[0] = v52;
          v51.__r_.__value_.__l.__data_ != (std::string::pointer)v53;
          std::string::size_type v13 = v51.__r_.__value_.__r.__words[0])
    {
      xpc_object_t v14 = (void *)(v13 + 32);
      xpc_object_t v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v14));
      -[NSMutableArray addObject:](v12, "addObject:", v15);

      sub_10000B338((uint64_t)&v51);
    }

    -[NSMutableDictionary setObject:forKey:](v11, "setObject:forKey:", v12, @"String Values");
    -[NSMutableDictionary setValuesForKeysWithDictionary:](v3, "setValuesForKeysWithDictionary:", v11);

    sub_10000AD30((uint64_t)&v52);
    goto LABEL_27;
  }

  xpc_object_t v16 = sub_10000BD6C(a1);
  {
    sub_10000BEB8((uint64_t)a1, &v52);
    xpc_object_t v17 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    xpc_object_t v18 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    xpc_object_t v19 = (unsigned __int8 *)v52;
    if (v52 != v53[0])
    {
      do
      {
        std::to_string(&v51, *v19);
        if ((char)v51.__r_.__value_.__s.__size_ < 0)
        {
          xpc_object_t v20 = (std::string *)v51.__r_.__value_.__r.__words[0];
          operator delete(v51.__r_.__value_.__l.__data_);
        }

        else
        {
          xpc_object_t v20 = &v51;
        }

        uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v20));
        -[NSMutableArray addObject:](v18, "addObject:", v21);

        ++v19;
      }

      while (v19 != (unsigned __int8 *)v53[0]);
    }

LABEL_26:
    -[NSMutableDictionary setObject:forKey:](v17, "setObject:forKey:", v18, @"String Values");
    -[NSMutableDictionary setValuesForKeysWithDictionary:](v3, "setValuesForKeysWithDictionary:", v17);

    v51.__r_.__value_.__r.__words[0] = (std::string::size_type)&v52;
    sub_100006F6C((void ***)&v51);
LABEL_27:
    int v26 = v3;
LABEL_28:

    objc_autoreleasePoolPop(v2);
    xpc_object_t v27 = v26;
    return;
  }

  __int16 v22 = sub_10000BD6C(a1);
  {
    sub_10000BF28((uint64_t)a1, &v52);
    xpc_object_t v17 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    xpc_object_t v18 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    xpc_object_t v23 = (unsigned __int8 *)v52;
    if (v52 != v53[0])
    {
      do
      {
        std::to_string(&v51, *v23);
        if ((char)v51.__r_.__value_.__s.__size_ < 0)
        {
          uint64_t v24 = (std::string *)v51.__r_.__value_.__r.__words[0];
          operator delete(v51.__r_.__value_.__l.__data_);
        }

        else
        {
          uint64_t v24 = &v51;
        }

        int v25 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v24));
        -[NSMutableArray addObject:](v18, "addObject:", v25);

        ++v23;
      }

      while (v23 != (unsigned __int8 *)v53[0]);
    }

    goto LABEL_26;
  }

  xpc_object_t v28 = sub_10000BD6C(a1);
  {
    sub_10000BF98((uint64_t)a1, &v52);
    uint64_t v29 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    uint64_t v30 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    std::string::size_type v31 = v52;
    for (v50.__r_.__value_.__r.__words[0] = v52;
          v50.__r_.__value_.__l.__data_ != (std::string::pointer)v53;
          std::string::size_type v31 = v50.__r_.__value_.__r.__words[0])
    {
      std::to_string(&v51, *(_DWORD *)(v31 + 28));
      if ((char)v51.__r_.__value_.__s.__size_ < 0)
      {
        std::string v32 = (std::string *)v51.__r_.__value_.__r.__words[0];
        operator delete(v51.__r_.__value_.__l.__data_);
      }

      else
      {
        std::string v32 = &v51;
      }

      xpc_object_t v33 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v32));
      -[NSMutableArray addObject:](v30, "addObject:", v33);

      sub_10000B338((uint64_t)&v50);
    }

    -[NSMutableDictionary setObject:forKey:](v29, "setObject:forKey:", v30, @"String Values");
    -[NSMutableDictionary setValuesForKeysWithDictionary:](v3, "setValuesForKeysWithDictionary:", v29);

    sub_10000D0D4((uint64_t)&v52);
    goto LABEL_27;
  }

  v34 = sub_10000BD6C(a1);
  {
    sub_10000C008((uint64_t)a1, &v52);
    uint64_t v35 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    std::string::size_type v36 = v52;
    for (v50.__r_.__value_.__r.__words[0] = v52;
          v50.__r_.__value_.__l.__data_ != (std::string::pointer)v53;
          std::string::size_type v36 = v50.__r_.__value_.__r.__words[0])
    {
      uint64_t v37 = (void *)(v36 + 32);
      std::string v38 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v37));
      sub_100147B4C((uint64_t *)(v50.__r_.__value_.__r.__words[0] + 56), &v51);
      if ((v51.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        char v39 = &v51;
      }
      else {
        char v39 = (std::string *)v51.__r_.__value_.__r.__words[0];
      }
      v40 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v39));
      -[NSMutableDictionary setObject:forKeyedSubscript:](v35, "setObject:forKeyedSubscript:", v40, v38);

      sub_10000B338((uint64_t)&v50);
    }

    -[NSMutableDictionary setValuesForKeysWithDictionary:](v3, "setValuesForKeysWithDictionary:", v35);

    sub_10000D448((uint64_t)&v52);
    goto LABEL_27;
  }

  dispatch_object_t v41 = sub_10000BD6C(a1);
  {
    int v26 = 0LL;
    goto LABEL_28;
  }

  sub_10000C078((uint64_t)a1, (uint64_t *)&v52);
  std::string v42 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  xpc_object_t v43 = (uint64_t *)v53[0];
  if ((std::string::size_type *)v53[0] == &v52)
  {
LABEL_61:
    -[NSMutableDictionary setValuesForKeysWithDictionary:](v3, "setValuesForKeysWithDictionary:", v42);

    sub_10000C178((uint64_t *)&v52);
    goto LABEL_27;
  }

  int v44 = 1;
  while (1)
  {
    sub_10000AC00(&v51, "Element:");
    std::to_string(&v50, v44);
    sub_10000D650(&v51, (const std::string::value_type *)&v50);
    sub_10000D66C(&v49, v43 + 2);
    uint64_t v45 = sub_10000B470(&v49);
    xpc_object_t v46 = (void *)objc_claimAutoreleasedReturnValue(v45);
    if (v49) {
      (*(void (**)(uint64_t))(*(void *)v49 + 8LL))(v49);
    }
    dispatch_object_t v47 = (v51.__r_.__value_.__s.__size_ & 0x80u) == 0 ? &v51 : (std::string *)v51.__r_.__value_.__r.__words[0];
    xpc_object_t v48 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v47));
    -[NSMutableDictionary setObject:forKey:](v42, "setObject:forKey:", v46, v48);

    if (__OFADD__(v44, 1)) {
      break;
    }

    xpc_object_t v43 = (uint64_t *)v43[1];
    ++v44;
  }

  __break(0x5500u);
}

  int v25 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", self->_txUnicast));
  [v3 setObject:v25 forKey:@"tx_unicast"];

  has = self->_has;
  if ((*(_BYTE *)&has & 0x80) == 0)
  {
LABEL_5:
    if ((*(_WORD *)&has & 0x4000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_28;
  }

  v4[63] = self->_txUnicast;
  v4[64] |= 0x80000u;
  has = self->_has;
  if ((*(_BYTE *)&has & 0x80) == 0)
  {
LABEL_5:
    if ((*(_WORD *)&has & 0x4000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_28;
  }

    std::string::append(&v9, "::");
    if ([v1 hasMaxChangeinNodeCount])
    {
      std::string::append(&v9, "MaxChangeInNodeCount=");
      std::to_string(&v10, [v1 maxChangeinNodeCount]);
      sub_10000D650(&v9, (const std::string::value_type *)&v10);
      std::string::append(&v9, "::");
    }

    if ([v1 hasPercTopologyChangeTimeInstances])
    {
      std::string::append(&v9, "PercChangeTimeInstances=");
      std::to_string(&v10, [v1 percTopologyChangeTimeInstances]);
      sub_10000D650(&v9, (const std::string::value_type *)&v10);
      std::string::append(&v9, "::");
    }
  }

  int v6 = sub_1000160F4("com.apple.wpantund.awd", "default");
  uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    int v8 = &v9;
    if ((v9.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      int v8 = (std::string *)v9.__r_.__value_.__r.__words[0];
    }
    LODWORD(v10.__r_.__value_.__l.__data_) = 136315138;
    *(std::string::size_type *)((char *)v10.__r_.__value_.__r.__words + 4) = (std::string::size_type)v8;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "AWDMetricsLogger : %s", (uint8_t *)&v10, 0xCu);
  }
}

  xpc_object_t v15 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_txDelayMin));
  [v3 setObject:v15 forKey:@"tx_delay_min"];

  has = (__int16)self->_has;
  if ((has & 0x2000) == 0)
  {
LABEL_11:
    if ((has & 0x1000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_28;
  }

  PBDataWriterWriteUint32Field(v5, self->_txDelayMin, 9LL);
  has = (__int16)self->_has;
  if ((has & 0x2000) == 0)
  {
LABEL_11:
    if ((has & 0x1000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_28;
  }

  v4[16] = self->_txDelayMin;
  *((_WORD *)v4 + 34) |= 0x4000u;
  has = (__int16)self->_has;
  if ((has & 0x2000) == 0)
  {
LABEL_11:
    if ((has & 0x1000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_28;
  }

  *((_DWORD *)result + 16) = self->_txDelayMin;
  *((_WORD *)result + 34) |= 0x4000u;
  has = (__int16)self->_has;
  if ((has & 0x2000) == 0)
  {
LABEL_11:
    if ((has & 0x1000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_28;
  }

  uint64_t v12 = 0LL;
  if ((*(_WORD *)&self->_has & 0x1000) != 0)
  {
LABEL_12:
    std::string::size_type v13 = 2654435761LL * self->_txDelayAvg;
    if ((*(_WORD *)&self->_has & 0x800) != 0) {
      goto LABEL_13;
    }
    goto LABEL_28;
  }

  self->_txDelayMin = *((_DWORD *)v4 + 16);
  *(_WORD *)&self->_has |= 0x4000u;
  size_t v5 = *((_WORD *)v4 + 34);
  if ((v5 & 0x2000) == 0)
  {
LABEL_11:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_28;
  }

  PBDataWriterWriteUint32Field(v9, self->_coexRxGrantedRequests, 6LL);
  uint64_t v4 = v9;
  if ((*(_WORD *)&self->_has & 1) != 0)
  {
LABEL_8:
    PBDataWriterWriteUint32Field(v9, self->_coexRxDeniedRequests, 7LL);
    uint64_t v4 = v9;
  }

  v4[17] = self->_coexTxDeniedRequests;
  *((_WORD *)v4 + 50) |= 8u;
  has = (__int16)self->_has;
  if ((has & 4) == 0)
  {
LABEL_6:
    if ((has & 2) == 0) {
      goto LABEL_7;
    }
LABEL_28:
    v4[15] = self->_coexRxGrantedRequests;
    *((_WORD *)v4 + 50) |= 2u;
    if ((*(_WORD *)&self->_has & 1) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }

  self->_coexRxGrantedRequests = *((_DWORD *)v4 + 15);
  *(_WORD *)&self->_has |= 2u;
  if ((*((_WORD *)v4 + 50) & 1) != 0)
  {
LABEL_8:
    self->_coexRxDeniedRequests = *((_DWORD *)v4 + 14);
    *(_WORD *)&self->_has |= 1u;
  }

  PBDataWriterWriteUint32Field(v7, self->_rxErrSecurity, 8LL);
  uint64_t v4 = v7;
  has = (__int16)self->_has;
  if ((has & 0x20) == 0)
  {
LABEL_10:
    if ((has & 4) == 0) {
      goto LABEL_11;
    }
    goto LABEL_28;
  }

  v4[12] = self->_rxErrInvalidSrcAddr;
  *((_WORD *)v4 + 40) |= 0x10u;
  has = (__int16)self->_has;
  if ((has & 0x100) == 0)
  {
LABEL_9:
    if ((has & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_28;
  }

  self->_rxErrSecurity = *((_DWORD *)v4 + 16);
  *(_WORD *)&self->_has |= 0x100u;
  size_t v5 = *((_WORD *)v4 + 40);
  if ((v5 & 0x20) == 0)
  {
LABEL_10:
    if ((v5 & 4) == 0) {
      goto LABEL_11;
    }
    goto LABEL_28;
  }

      if (!memcmp(&buf, "CCAEnergyDetect[0x4] [-75dBm-70dBm)", 0x23uLL)) {
        goto LABEL_46;
      }
      if (!memcmp(&buf, "CCAEnergyDetect[0x5] [-70dBm-65dBm)", 0x23uLL))
      {
LABEL_47:
        uint64_t v29 = sub_1000BE984(4, uint64);
        goto LABEL_63;
      }
  }

  else
  {
    __int16 v22 = sub_1000160F4("com.apple.wpantund.tnm", "default");
    uint64_t v10 = (dispatch_semaphore_s *)objc_claimAutoreleasedReturnValue(v22);
    if (os_log_type_enabled((os_log_t)v10, OS_LOG_TYPE_ERROR)) {
      sub_1001EDC78((os_log_s *)v10, v23, v24, v25, v26, v27, v28, v29);
    }
    uint64_t v21 = 0;
  }

  _Block_object_dispose(&v53, 8);
  _Block_object_dispose(&v59, 8);

  return v21;
}

void sub_10000BB64( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20, char a21, uint64_t a22)
{
  sub_10000C178(&a22);
  _Unwind_Resume(a1);
}

void *sub_10000BD6C(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if (v1) {
    return (void *)(*(uint64_t (**)(uint64_t))(*(void *)v1 + 16LL))(v1);
  }
  else {
}
  }

BOOL sub_10000BD8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a2 + 8);
  if (v2 == v3) {
    return 1LL;
  }
  if ((v3 & v2) < 0 != __OFSUB__(v2, v3)) {
    return strcmp((const char *)(v2 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL)) == 0;
  }
  return 0LL;
}

uint64_t sub_10000BDD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = sub_10000C200(a1);
  if (!v3)
  {
    v5.__vftable = 0LL;
    std::bad_cast::bad_cast(&v5);
    v5.__vftable = (std::bad_cast_vtbl *)&off_1002ADCA8;
    sub_10000C268();
  }

  return sub_10000C678(a2, v3);
}

void sub_10000BE34( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::bad_cast a10)
{
}

void *sub_10000BE48@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (uint64_t *)sub_10000C7E0(a1);
  if (!v3)
  {
    v5.__vftable = 0LL;
    std::bad_cast::bad_cast(&v5);
    v5.__vftable = (std::bad_cast_vtbl *)&off_1002ADCA8;
    sub_10000C268();
  }

  return sub_10000C848(a2, v3);
}

void sub_10000BEA4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::bad_cast a10)
{
}

void *sub_10000BEB8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = sub_10000CB98(a1);
  if (!v3)
  {
    v5.__vftable = 0LL;
    std::bad_cast::bad_cast(&v5);
    v5.__vftable = (std::bad_cast_vtbl *)&off_1002ADCA8;
    sub_10000C268();
  }

  return sub_10000CBF8(a2, v3);
}

void sub_10000BF14( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::bad_cast a10)
{
}

void *sub_10000BF28@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = sub_10000CD04(a1);
  if (!v3)
  {
    v5.__vftable = 0LL;
    std::bad_cast::bad_cast(&v5);
    v5.__vftable = (std::bad_cast_vtbl *)&off_1002ADCA8;
    sub_10000C268();
  }

  return sub_10000CBF8(a2, v3);
}

void sub_10000BF84( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::bad_cast a10)
{
}

void *sub_10000BF98@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (uint64_t *)sub_10000CD6C(a1);
  if (!v3)
  {
    v5.__vftable = 0LL;
    std::bad_cast::bad_cast(&v5);
    v5.__vftable = (std::bad_cast_vtbl *)&off_1002ADCA8;
    sub_10000C268();
  }

  return sub_10000CDD4(a2, v3);
}

void sub_10000BFF4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::bad_cast a10)
{
}

void *sub_10000C008@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (uint64_t *)sub_10000D13C(a1);
  if (!v3)
  {
    v5.__vftable = 0LL;
    std::bad_cast::bad_cast(&v5);
    v5.__vftable = (std::bad_cast_vtbl *)&off_1002ADCA8;
    sub_10000C268();
  }

  return sub_10000D19C(a2, v3);
}

void sub_10000C064( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::bad_cast a10)
{
}

uint64_t *sub_10000C078@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_10000D4B8(a1);
  if (!v3)
  {
    v5.__vftable = 0LL;
    std::bad_cast::bad_cast(&v5);
    v5.__vftable = (std::bad_cast_vtbl *)&off_1002ADCA8;
    sub_10000C268();
  }

  return sub_10000D518(a2, v3);
}

void sub_10000C0D4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::bad_cast a10)
{
}

void sub_10000C0E8(void *a1)
{
  if (a1[2])
  {
    uint64_t v3 = *a1;
    uint64_t v2 = a1[1];
    uint64_t v4 = *(void **)v2;
    v4[1] = *(void *)(*a1 + 8LL);
    **(void **)(v3 + 8) = v4;
    a1[2] = 0LL;
    while ((void *)v2 != a1)
    {
      uint64_t v5 = *(void *)(v2 + 8);
      sub_10000C148((int)a1, (void **)v2);
      uint64_t v2 = v5;
    }
  }

void sub_10000C148(int a1, void **__p)
{
}

void sub_10000C178(uint64_t *a1)
{
  if (a1[2])
  {
    uint64_t v3 = *a1;
    uint64_t v2 = (uint64_t *)a1[1];
    uint64_t v4 = *v2;
    *(void *)(v4 + 8) = *(void *)(*a1 + 8);
    **(void **)(v3 + 8) = v4;
    a1[2] = 0LL;
    while (v2 != a1)
    {
      uint64_t v5 = (uint64_t *)v2[1];
      sub_10000C1D8((uint64_t)a1, v2);
      uint64_t v2 = v5;
    }
  }

void sub_10000C1D8(uint64_t a1, void *a2)
{
}

uint64_t sub_10000C200(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = (void *)result;
    __darwin_time_t result = *((void *)sub_10000BD6C((uint64_t *)result) + 1) & 0x7FFFFFFFFFFFFFFFLL;
    if (result == (0x8000000100222757LL & 0x7FFFFFFFFFFFFFFFLL)
      || (__darwin_time_t result = strcmp((const char *)result, (const char *)(0x8000000100222757LL & 0x7FFFFFFFFFFFFFFFLL)),
          !(_DWORD)result))
    {
      if (*v1) {
        return *v1 + 8LL;
      }
      else {
        __break(0x5516u);
      }
    }

    else
    {
      return 0LL;
    }
  }

  return result;
}

void sub_10000C268()
{
  exception = __cxa_allocate_exception(0x38uLL);
  sub_10000C2BC((uint64_t)exception);
}

void sub_10000C2A4(_Unwind_Exception *a1)
{
}

uint64_t sub_10000C2C0(uint64_t a1)
{
  *(void *)(a1 + 16) = &off_1002AD900;
  sub_1000073F8((uint64_t *)(a1 + 24));
  std::bad_cast::~bad_cast((std::bad_cast *)(a1 + 8));
  return a1;
}

uint64_t sub_10000C300(uint64_t result)
{
  *(void *)(result + 32) = 0LL;
  *(void *)(result + 40) = 0LL;
  *(_DWORD *)(result + 48) = -1;
  *(void *)__darwin_time_t result = &off_1002ADC30;
  *(void *)(result + 8) = off_1002ADC60;
  *(void *)(result + 16) = off_1002ADC88;
  *(void *)(result + 24) = 0LL;
  return result;
}

void *sub_10000C32C(uint64_t a1)
{
  uint64_t v2 = operator new(0x38uLL);
  void *v2 = &off_1002AD8A8;
  v2[1] = &off_1002ADCA8;
  v2[2] = &off_1002AD900;
  uint64_t v3 = *(void *)(a1 + 24);
  v2[3] = v3;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 24LL))(v3);
  }
  *((_OWORD *)v2 + 2) = *(_OWORD *)(a1 + 32);
  *((_DWORD *)v2 + 12) = *(_DWORD *)(a1 + 48);
  void *v2 = &off_1002ADC30;
  v2[1] = off_1002ADC60;
  v2[2] = off_1002ADC88;
  sub_1000074F8((uint64_t)(v2 + 2), a1 + 16);
  return v2;
}

void sub_10000C3E8(_Unwind_Exception *a1)
{
}

void sub_10000C41C(uint64_t a1)
{
  exception = __cxa_allocate_exception(0x38uLL);
  sub_10000C5C4((uint64_t)exception, a1);
}

void sub_10000C458(_Unwind_Exception *a1)
{
}

void sub_10000C46C(uint64_t a1)
{
  *(void *)(a1 + 16) = &off_1002AD900;
  sub_1000073F8((uint64_t *)(a1 + 24));
  std::bad_cast::~bad_cast((std::bad_cast *)(a1 + 8));
  operator delete((void *)a1);
}

void sub_10000C4AC(uint64_t a1)
{
  *(void *)(a1 + 8) = &off_1002AD900;
  sub_1000073F8((uint64_t *)(a1 + 16));
  std::bad_cast::~bad_cast((std::bad_cast *)a1);
}

void sub_10000C4E4(uint64_t a1)
{
  uint64_t v2 = (void *)(a1 - 8);
  *(void *)(a1 + 8) = &off_1002AD900;
  sub_1000073F8((uint64_t *)(a1 + 16));
  std::bad_cast::~bad_cast((std::bad_cast *)a1);
  operator delete(v2);
}

const char *sub_10000C528()
{
  return "boost::bad_any_cast: failed conversion using boost::any_cast";
}

void sub_10000C534(void *a1)
{
  *a1 = &off_1002AD900;
  sub_1000073F8(a1 + 1);
  std::bad_cast::~bad_cast((std::bad_cast *)a1 - 1);
}

void sub_10000C56C(void *a1)
{
  uint64_t v2 = a1 - 2;
  *a1 = &off_1002AD900;
  sub_1000073F8(a1 + 1);
  std::bad_cast::~bad_cast((std::bad_cast *)a1 - 1);
  operator delete(v2);
}

void sub_10000C5B0(std::bad_cast *a1)
{
}

uint64_t sub_10000C5C4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_1002AD8A8;
  *(void *)(a1 + 8) = &off_1002ADCA8;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = &off_1002AD900;
  *(void *)(a1 + 24) = v4;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 24LL))(v4);
  }
  __int128 v5 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)a1 = &off_1002ADC30;
  *(void *)(a1 + 8) = off_1002ADC60;
  *(void *)(a1 + 16) = off_1002ADC88;
  return a1;
}

void sub_10000C664(_Unwind_Exception *a1)
{
}

uint64_t sub_10000C678(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = a1;
  *(void *)(a1 + 8) = a1;
  *(void *)(a1 + 16) = 0LL;
  for (uint64_t i = *(void *)(a2 + 8); i != a2; uint64_t i = *(void *)(i + 8))
    sub_10000C6E4((char **)a1, (const std::string *)(i + 16));
  return a1;
}

void sub_10000C6D0(_Unwind_Exception *a1)
{
}

char *sub_10000C6E4(char **a1, const std::string *a2)
{
  __darwin_time_t result = sub_10000C734((uint64_t)a1, 0LL, 0LL, a2);
  uint64_t v4 = *a1;
  *(void *)__darwin_time_t result = *a1;
  *((void *)result + 1) = a1;
  *((void *)v4 + 1) = result;
  *a1 = result;
  __int128 v5 = a1[2];
  BOOL v6 = __CFADD__(v5, 1LL);
  uint64_t v7 = v5 + 1;
  if (v6) {
    __break(0x5500u);
  }
  else {
    a1[2] = v7;
  }
  return result;
}

char *sub_10000C734(uint64_t a1, uint64_t a2, uint64_t a3, const std::string *a4)
{
  uint64_t v11 = 1LL;
  uint64_t v7 = (char *)operator new(0x28uLL);
  uint64_t v12 = v7;
  *(void *)uint64_t v7 = a2;
  *((void *)v7 + 1) = a3;
  std::string::basic_string((std::string *)(v7 + 16), a4);
  int v8 = v12;
  uint64_t v12 = 0LL;
  sub_10000C7B0((uint64_t)v10);
  return v8;
}

void sub_10000C79C(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void sub_10000C7B0(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  if (v2)
  {
    if (*(void *)(a1 + 8) >= 0x666666666666667uLL) {
      __break(0x550Cu);
    }
    else {
      operator delete(v2);
    }
  }

uint64_t sub_10000C7E0(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = (void *)result;
    __darwin_time_t result = *((void *)sub_10000BD6C((uint64_t *)result) + 1) & 0x7FFFFFFFFFFFFFFFLL;
    if (result == (0x8000000100222806LL & 0x7FFFFFFFFFFFFFFFLL)
      || (__darwin_time_t result = strcmp((const char *)result, (const char *)(0x8000000100222806LL & 0x7FFFFFFFFFFFFFFFLL)),
          !(_DWORD)result))
    {
      if (*v1) {
        return *v1 + 8LL;
      }
      else {
        __break(0x5516u);
      }
    }

    else
    {
      return 0LL;
    }
  }

  return result;
}

void *sub_10000C848(void *a1, uint64_t *a2)
{
  uint64_t v4 = sub_10000C8F8(a1);
  sub_10000C890((uint64_t)v4, *a2, (uint64_t)(a2 + 1));
  return a1;
}

void sub_10000C87C(_Unwind_Exception *a1)
{
}

uint64_t sub_10000C890(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = a2;
  if (a2 != a3)
  {
    uint64_t v4 = (const void **)result;
    uint64_t v5 = result + 8;
    do
    {
      sub_10000C90C(v4, v5, (const void **)(a2 + 32), (const std::string *)(a2 + 32));
      __darwin_time_t result = sub_10000B338((uint64_t)&v6);
      a2 = v6;
    }

    while (v6 != a3);
  }

  return result;
}

void *sub_10000C8F8(void *result)
{
  result[1] = 0LL;
  result[2] = 0LL;
  *__darwin_time_t result = result + 1;
  return result;
}

void **sub_10000C90C(const void **a1, uint64_t a2, const void **a3, const std::string *a4)
{
  uint64_t v6 = sub_10000C9A0(a1, a2, &v12, &v11, a3);
  uint64_t v7 = (void **)*v6;
  if (!*v6)
  {
    int v8 = v6;
    sub_10000CAF8((uint64_t)a1, a4, (uint64_t)v10);
    sub_10000AF70((uint64_t **)a1, (uint64_t)v12, (void **)v8, v10[0]);
    uint64_t v7 = v10[0];
    v10[0] = 0LL;
    sub_10000B1C0(v10, 0LL);
  }

  return v7;
}

const void **sub_10000C9A0(const void **result, uint64_t a2, const void ***a3, void *a4, const void **a5)
{
  int v8 = result;
  uint64_t v9 = result + 1;
  if (result + 1 != (const void **)a2)
  {
    __darwin_time_t result = (const void **)sub_10000AFC8((uint64_t)(result + 2), a5, (const void **)(a2 + 32));
    if (!(_DWORD)result)
    {
      if (!sub_10000AFC8((uint64_t)(v8 + 2), (const void **)(a2 + 32), a5))
      {
        *a3 = (const void **)a2;
        *a4 = a2;
        return (const void **)a4;
      }

      xpc_object_t v14 = (const void **)a2;
      sub_10000B338((uint64_t)&v14);
      std::string::size_type v13 = v14;
      if (v14 == v9 || sub_10000AFC8((uint64_t)(v8 + 2), a5, v14 + 4))
      {
        a4 = (void *)(a2 + 8);
        if (*(void *)(a2 + 8))
        {
          *a3 = v13;
          return v13;
        }

        else
        {
          *a3 = (const void **)a2;
        }

        return (const void **)a4;
      }

      return (const void **)sub_10000AE50((uint64_t)v8, a3, a5);
    }
  }

  xpc_object_t v14 = (const void **)a2;
  if (*v8 != a2)
  {
    uint64_t v11 = sub_10000CB60(&v14);
    __darwin_time_t result = (const void **)sub_10000AFC8((uint64_t)(v8 + 2), (const void **)*v11 + 4, a5);
    if (!(_DWORD)result) {
      return (const void **)sub_10000AE50((uint64_t)v8, a3, a5);
    }
  }

  if (!*(void *)a2)
  {
    *a3 = (const void **)a2;
    return (const void **)a2;
  }

  uint64_t v12 = v14;
  *a3 = v14;
  if (v12) {
    return v12 + 1;
  }
  __break(0x5516u);
  return result;
}

std::string *sub_10000CAF8@<X0>(uint64_t a1@<X0>, const std::string *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = (char *)operator new(0x38uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  __darwin_time_t result = std::string::basic_string((std::string *)(v6 + 32), a2);
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_10000CB48(_Unwind_Exception *a1)
{
}

void **sub_10000CB60(void **result)
{
  uint64_t v1 = *result;
  uint64_t v2 = (void *)**result;
  if (v2)
  {
    do
    {
      uint64_t v3 = v2;
      uint64_t v2 = (void *)v2[1];
    }

    while (v2);
  }

  else
  {
    do
    {
      uint64_t v3 = (void *)v1[2];
      BOOL v4 = *v3 == (void)v1;
      uint64_t v1 = v3;
    }

    while (v4);
  }

  *__darwin_time_t result = v3;
  return result;
}

uint64_t sub_10000CB98(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = (void *)result;
    __darwin_time_t result = *((void *)sub_10000BD6C((uint64_t *)result) + 1) & 0x7FFFFFFFFFFFFFFFLL;
    if (result == ((unint64_t)"N2nl4DataE" & 0x7FFFFFFFFFFFFFFFLL)
      || (__darwin_time_t result = strcmp((const char *)result, (const char *)((unint64_t)"N2nl4DataE" & 0x7FFFFFFFFFFFFFFFLL)),
          !(_DWORD)result))
    {
      if (*v1) {
        return *v1 + 8LL;
      }
      else {
        __break(0x5516u);
      }
    }

    else
    {
      return 0LL;
    }
  }

  return result;
}

void *sub_10000CBF8(void *a1, uint64_t a2)
{
  *a1 = 0LL;
  a1[1] = 0LL;
  a1[2] = 0LL;
  sub_10000CC30(a1, *(const void **)a2, *(void *)(a2 + 8), *(void *)(a2 + 8) - *(void *)a2);
  return a1;
}

void *sub_10000CC30(void *result, const void *a2, uint64_t a3, size_t __sz)
{
  if (__sz)
  {
    uint64_t v6 = result;
    __darwin_time_t result = sub_10000CCB0(result, __sz);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      __darwin_time_t result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }

  return result;
}

void sub_10000CC9C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
}

char *sub_10000CCB0(void *a1, size_t __sz)
{
  if ((__sz & 0x8000000000000000LL) != 0) {
    sub_10000CCF0();
  }
  __darwin_time_t result = (char *)operator new(__sz);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[__sz];
  return result;
}

void sub_10000CCF0()
{
}

uint64_t sub_10000CD04(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = (void *)result;
    __darwin_time_t result = *((void *)sub_10000BD6C((uint64_t *)result) + 1) & 0x7FFFFFFFFFFFFFFFLL;
    if (result == (0x80000001002277C8LL & 0x7FFFFFFFFFFFFFFFLL)
      || (__darwin_time_t result = strcmp((const char *)result, (const char *)(0x80000001002277C8LL & 0x7FFFFFFFFFFFFFFFLL)),
          !(_DWORD)result))
    {
      if (*v1) {
        return *v1 + 8LL;
      }
      else {
        __break(0x5516u);
      }
    }

    else
    {
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_10000CD6C(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = (void *)result;
    __darwin_time_t result = *((void *)sub_10000BD6C((uint64_t *)result) + 1) & 0x7FFFFFFFFFFFFFFFLL;
    if (result == (0x8000000100222867LL & 0x7FFFFFFFFFFFFFFFLL)
      || (__darwin_time_t result = strcmp((const char *)result, (const char *)(0x8000000100222867LL & 0x7FFFFFFFFFFFFFFFLL)),
          !(_DWORD)result))
    {
      if (*v1) {
        return *v1 + 8LL;
      }
      else {
        __break(0x5516u);
      }
    }

    else
    {
      return 0LL;
    }
  }

  return result;
}

void *sub_10000CDD4(void *a1, uint64_t *a2)
{
  BOOL v4 = sub_10000C8F8(a1);
  sub_10000CE1C((uint64_t)v4, *a2, (uint64_t)(a2 + 1));
  return a1;
}

void sub_10000CE08(_Unwind_Exception *a1)
{
}

uint64_t sub_10000CE1C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = a2;
  if (a2 != a3)
  {
    BOOL v4 = (uint64_t **)result;
    uint64_t v5 = result + 8;
    do
    {
      sub_10000CE84(v4, v5, (int *)(a2 + 28), (_DWORD *)(a2 + 28));
      __darwin_time_t result = sub_10000B338((uint64_t)&v6);
      a2 = v6;
    }

    while (v6 != a3);
  }

  return result;
}

_DWORD *sub_10000CE84(uint64_t **a1, uint64_t a2, int *a3, _DWORD *a4)
{
  uint64_t v6 = (void **)sub_10000CF30(a1, a2, &v13, &v12, a3);
  uint64_t v7 = *v6;
  if (!*v6)
  {
    size_t v8 = v6;
    uint64_t v7 = operator new(0x20uLL);
    v10[1] = a1 + 1;
    v7[7] = *a4;
    char v11 = 1;
    sub_10000AF70(a1, v13, (void **)v8, v7);
    v10[0] = 0LL;
    sub_10000D0A8(v10, 0LL);
  }

  return v7;
}

void **sub_10000CF30(void **result, uint64_t a2, void *a3, void *a4, int *a5)
{
  uint64_t v8 = (uint64_t)result;
  uint64_t v9 = result + 1;
  if (result + 1 != (void **)a2)
  {
    int v10 = *(_DWORD *)(a2 + 28);
    if (*a5 >= v10)
    {
      if (v10 >= *a5)
      {
        *a3 = a2;
        *a4 = a2;
        return (void **)a4;
      }

      uint64_t v12 = (void *)a2;
      sub_10000B338((uint64_t)&v12);
      a4 = v12;
      if (v12 == v9 || *a5 < *((_DWORD *)v12 + 7))
      {
        if (*(void *)(a2 + 8))
        {
          *a3 = v12;
        }

        else
        {
          *a3 = a2;
          return (void **)(a2 + 8);
        }

        return (void **)a4;
      }

      return (void **)sub_10000D058(v8, a3, a5);
    }
  }

  uint64_t v12 = (void *)a2;
  if (*result != (void *)a2)
  {
    __darwin_time_t result = sub_10000CB60(&v12);
    if (*((_DWORD *)*result + 7) >= *a5) {
      return (void **)sub_10000D058(v8, a3, a5);
    }
  }

  if (!*(void *)a2)
  {
    *a3 = a2;
    return (void **)a2;
  }

  char v11 = v12;
  *a3 = v12;
  if (v11) {
    return (void **)(v11 + 1);
  }
  __break(0x5516u);
  return result;
}

void *sub_10000D058(uint64_t a1, void *a2, int *a3)
{
  uint64_t v5 = *(void *)(a1 + 8);
  __darwin_time_t result = (void *)(a1 + 8);
  uint64_t v4 = v5;
  if (v5)
  {
    int v6 = *a3;
    do
    {
      while (1)
      {
        uint64_t v7 = (void *)v4;
        int v8 = *(_DWORD *)(v4 + 28);
        if (v6 >= v8) {
          break;
        }
        uint64_t v4 = *v7;
        __darwin_time_t result = v7;
        if (!*v7) {
          goto LABEL_10;
        }
      }

      if (v8 >= v6) {
        break;
      }
      __darwin_time_t result = v7 + 1;
      uint64_t v4 = v7[1];
    }

    while (v4);
  }

  else
  {
    uint64_t v7 = result;
  }

void sub_10000D0A8(void **a1, void *a2)
{
  uint64_t v3 = *a1;
  *a1 = a2;
  if (v3) {
    sub_10000D0C4((_DWORD)a1 + 8, v3);
  }
}

void sub_10000D0C4(int a1, void *__p)
{
  if (__p) {
    operator delete(__p);
  }
}

uint64_t sub_10000D0D4(uint64_t a1)
{
  return a1;
}

void sub_10000D0FC(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_10000D0FC(a1, *a2);
    sub_10000D0FC(a1, a2[1]);
    operator delete(a2);
  }

uint64_t sub_10000D13C(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = (void *)result;
    __darwin_time_t result = *((void *)sub_10000BD6C((uint64_t *)result) + 1) & 0x7FFFFFFFFFFFFFFFLL;
    if (result == ((unint64_t)"NSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN5boost3anyE"
                                      "NS_4lessIS6_EENS4_INS_4pairIKS6_S8_EEEEEE" & 0x7FFFFFFFFFFFFFFFLL)
      || (__darwin_time_t result = strcmp( (const char *)result,  (const char *)((unint64_t)"NSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIc EEEEN5boost3anyENS_4lessIS6_EENS4_INS_4pairIKS6_S8_EEEEEE" & 0x7FFFFFFFFFFFFFFFLL)),  !(_DWORD)result))
    {
      if (*v1) {
        return *v1 + 8LL;
      }
      else {
        __break(0x5516u);
      }
    }

    else
    {
      return 0LL;
    }
  }

  return result;
}

void *sub_10000D19C(void *a1, uint64_t *a2)
{
  uint64_t v4 = sub_10000C8F8(a1);
  sub_10000D1E4((uint64_t)v4, *a2, (uint64_t)(a2 + 1));
  return a1;
}

void sub_10000D1D0(_Unwind_Exception *a1)
{
}

uint64_t sub_10000D1E4(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = a2;
  if (a2 != a3)
  {
    uint64_t v4 = (const void **)result;
    uint64_t v5 = result + 8;
    do
    {
      sub_10000D24C(v4, v5, (const void **)(a2 + 32), (const std::string *)(a2 + 32));
      __darwin_time_t result = sub_10000B338((uint64_t)&v6);
      a2 = v6;
    }

    while (v6 != a3);
  }

  return result;
}

void *sub_10000D24C(const void **a1, uint64_t a2, const void **a3, const std::string *a4)
{
  uint64_t v6 = sub_10000C9A0(a1, a2, &v12, &v11, a3);
  uint64_t v7 = (void *)*v6;
  if (!*v6)
  {
    int v8 = v6;
    sub_10000D2E0((uint64_t)a1, a4, (uint64_t)v10);
    sub_10000AF70((uint64_t **)a1, (uint64_t)v12, (void **)v8, (void *)v10[0]);
    uint64_t v7 = v10[0];
    v10[0] = 0LL;
    sub_10000D3A4(v10, 0LL);
  }

  return v7;
}

std::string *sub_10000D2E0@<X0>(uint64_t a1@<X0>, const std::string *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = (char *)operator new(0x40uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  __darwin_time_t result = sub_10000D348((std::string *)(v6 + 32), a2);
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_10000D330(_Unwind_Exception *a1)
{
}

std::string *sub_10000D348(std::string *a1, const std::string *a2)
{
  uint64_t data = (uint64_t)a2[1].__r_.__value_.__l.__data_;
  if (data) {
    uint64_t data = (*(uint64_t (**)(uint64_t))(*(void *)data + 24LL))(data);
  }
  a1[1].__r_.__value_.__r.__words[0] = data;
  return a1;
}

void sub_10000D388(_Unwind_Exception *exception_object)
{
}

void sub_10000D3A4(void **a1, void *a2)
{
  uint64_t v3 = *a1;
  *a1 = a2;
  if (v3) {
    sub_10000D3C0((uint64_t)(a1 + 1), v3);
  }
}

void sub_10000D3C0(uint64_t a1, void *__p)
{
  if (*(_BYTE *)(a1 + 8)) {
    sub_10000D400((uint64_t)__p + 32);
  }
  if (__p) {
    operator delete(__p);
  }
}

void sub_10000D400(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
  }
}

uint64_t sub_10000D448(uint64_t a1)
{
  return a1;
}

void sub_10000D470(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_10000D470(a1, *a2);
    sub_10000D470(a1, a2[1]);
    sub_10000D400((uint64_t)(a2 + 4));
    operator delete(a2);
  }

uint64_t sub_10000D4B8(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = (void *)result;
    __darwin_time_t result = *((void *)sub_10000BD6C((uint64_t *)result) + 1) & 0x7FFFFFFFFFFFFFFFLL;
    if (result == ((unint64_t)"NSt3__14listINS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN5b"
                                      "oost3anyENS_4lessIS7_EENS5_INS_4pairIKS7_S9_EEEEEENS5_ISG_EEEE" & 0x7FFFFFFFFFFFFFFFLL)
      || (__darwin_time_t result = strcmp( (const char *)result,  (const char *)((unint64_t)"NSt3__14listINS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9al locatorIcEEEEN5boost3anyENS_4lessIS7_EENS5_INS_4pairIKS7_S9_EEEEEENS5_ISG_EEEE" & 0x7FFFFFFFFFFFFFFFLL)),  !(_DWORD)result))
    {
      if (*v1) {
        return *v1 + 8LL;
      }
      else {
        __break(0x5516u);
      }
    }

    else
    {
      return 0LL;
    }
  }

  return result;
}

uint64_t *sub_10000D518(uint64_t *a1, uint64_t a2)
{
  *a1 = (uint64_t)a1;
  a1[1] = (uint64_t)a1;
  a1[2] = 0LL;
  for (uint64_t i = *(void *)(a2 + 8); i != a2; uint64_t i = *(void *)(i + 8))
    sub_10000D584(a1, (uint64_t *)(i + 16));
  return a1;
}

void sub_10000D570(_Unwind_Exception *a1)
{
}

void *sub_10000D584(uint64_t *a1, uint64_t *a2)
{
  __darwin_time_t result = sub_10000D5D4((uint64_t)a1, 0LL, 0LL, a2);
  uint64_t v4 = *a1;
  *__darwin_time_t result = *a1;
  result[1] = a1;
  *(void *)(v4 + 8) = result;
  *a1 = (uint64_t)result;
  uint64_t v5 = a1[2];
  BOOL v6 = __CFADD__(v5, 1LL);
  uint64_t v7 = v5 + 1;
  if (v6) {
    __break(0x5500u);
  }
  else {
    a1[2] = v7;
  }
  return result;
}

void *sub_10000D5D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v11 = 1LL;
  uint64_t v7 = operator new(0x28uLL);
  uint64_t v12 = v7;
  *uint64_t v7 = a2;
  v7[1] = a3;
  sub_10000D19C(v7 + 2, a4);
  int v8 = v12;
  uint64_t v12 = 0LL;
  sub_10000C7B0((uint64_t)v10);
  return v8;
}

void sub_10000D63C(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

std::string *sub_10000D650(std::string *a1, const std::string::value_type *a2)
{
  std::string::size_type v2 = *((void *)a2 + 1);
  if (a2[23] >= 0)
  {
    std::string::size_type v3 = *((unsigned __int8 *)a2 + 23);
  }

  else
  {
    a2 = *(const std::string::value_type **)a2;
    std::string::size_type v3 = v2;
  }

  return std::string::append(a1, a2, v3);
}

void *sub_10000D66C(void *a1, uint64_t *a2)
{
  uint64_t v4 = operator new(0x20uLL);
  *uint64_t v4 = off_1002ADCD0;
  sub_10000D19C(v4 + 1, a2);
  *a1 = v4;
  return a1;
}

void sub_10000D6BC(_Unwind_Exception *a1)
{
}

uint64_t sub_10000D6D0(uint64_t a1)
{
  return a1;
}

void sub_10000D6F8(void *a1)
{
}

_UNKNOWN **sub_10000D720()
{
}

void *sub_10000D72C(uint64_t a1)
{
  std::string::size_type v2 = operator new(0x20uLL);
  void *v2 = off_1002ADCD0;
  sub_10000D19C(v2 + 1, (uint64_t *)(a1 + 8));
  return v2;
}

void sub_10000D76C(_Unwind_Exception *a1)
{
}

std::string *sub_10000D780(uint64_t a1, const std::string *a2)
{
  return sub_100014D54(a1 + 42016, a2);
}

uint64_t sub_10000D78C(uint64_t a1)
{
  if (qword_1002C9678)
  {
    std::string::size_type v2 = (void *)sub_10000D78C();
    operator delete(v2);
    qword_1002C9678 = 0LL;
  }

  sub_1000155B0(a1 + 42016);
  return a1;
}

void sub_10000D7D4(uint64_t a1)
{
  std::string::size_type v2 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v2)
  {
    std::string::size_type v3 = v2;
    if (sub_10015A058(6) && os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      int v11 = 136315138;
      uint64_t v12 = "Enable";
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_INFO,  "MulticastRoutingManager: %s",  (uint8_t *)&v11,  0xCu);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  uint64_t v4 = (_BYTE *)(a1 + 42012);
  if (*(_BYTE *)(a1 + 42012))
  {
    uint64_t v5 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v5)
    {
      BOOL v6 = v5;
      if (sub_10015A058(4))
      {
        if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
          sub_1001FBB64(v6, v7, v8);
        }
      }
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }
  }

  else
  {
    if ((sub_100014108(a1 + 42016) & 1) == 0)
    {
      uint64_t v9 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v9)
      {
        int v10 = v9;
        if (sub_10015A058(6) && os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
        {
          int v11 = 136315138;
          uint64_t v12 = "Enable";
          _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_INFO,  "MulticastRoutingManager: %s backbone routing initialization failed",  (uint8_t *)&v11,  0xCu);
        }
      }

      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        sub_1001FB53C();
      }
    }

    *uint64_t v4 = 1;
  }

void sub_10000D9D4(uint64_t a1)
{
  std::string::size_type v2 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v2)
  {
    std::string::size_type v3 = v2;
    if (sub_10015A058(6) && os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      int v8 = 136315138;
      uint64_t v9 = "Disable";
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_INFO,  "MulticastRoutingManager: %s",  (uint8_t *)&v8,  0xCu);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  if (*(_BYTE *)(a1 + 42012))
  {
    *(_BYTE *)(a1 + 42012) = 0;
  }

  else
  {
    uint64_t v4 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v4)
    {
      uint64_t v5 = v4;
      if (sub_10015A058(4))
      {
        if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
          sub_1001FBBD8(v5, v6, v7);
        }
      }
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }
  }

void sub_10000DB2C(uint64_t a1, void *a2)
{
  if (!*(_BYTE *)(a1 + 42012)) {
    return;
  }
  sub_10000DC2C(a1, a2);
  BOOL v4 = sub_100014D5C(a1 + 42016, a2);
  uint64_t v5 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  uint64_t v6 = v5;
  if (v4)
  {
    if (v5)
    {
      if (sub_10015A058(7))
      {
        if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG)) {
          sub_1001FBC4C(a2, (uint64_t)v6);
        }
      }

      return;
    }

    if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      return;
    }
LABEL_14:
    sub_1001FB53C();
    return;
  }

  if (!v5)
  {
    if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      return;
    }
    goto LABEL_14;
  }

void sub_10000DC2C(uint64_t a1, void *a2)
{
  uint64_t v4 = 750LL;
  do
  {
    if (*(_BYTE *)(a1 + 48) == 1 && *(_BYTE *)(a1 + 49) && *(void *)(a1 + 16) == *a2 && *(void *)(a1 + 24) == a2[1])
    {
      sub_10000E3FC(a1, 1, 0);
      uint64_t v6 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v6)
      {
        if (sub_10015A058(7) && os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v7 = "Unknown";
          uint64_t v12 = v7;
          sub_100108154((void *)a1, v15);
          int v8 = v16;
          uint64_t v9 = (void **)v15[0];
          sub_100108154((void *)(a1 + 16), __p);
          int v10 = v15;
          if (v8 < 0) {
            int v10 = v9;
          }
          int v11 = __p;
          if (v14 < 0) {
            int v11 = (void **)__p[0];
          }
          *(_DWORD *)std::string buf = 136316162;
          xpc_object_t v18 = "UnblockInboundMulticastForwardingCache";
          __int16 v19 = 2080;
          xpc_object_t v20 = v12;
          __int16 v21 = 2080;
          __int16 v22 = v10;
          __int16 v23 = 2080;
          uint64_t v24 = v11;
          __int16 v25 = 2080;
          int v26 = "Thread";
          _os_log_debug_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "MulticastRoutingManager: %s: %s %s => %s %s",  buf,  0x34u);
          if (v14 < 0) {
            operator delete(__p[0]);
          }
          if (v16 < 0) {
            operator delete(v15[0]);
          }
        }
      }

      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)std::string buf = 136315394;
        xpc_object_t v18 = "com.apple.wpantund.ncp";
        __int16 v19 = 2080;
        xpc_object_t v20 = "default";
        _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "Logging Module is not defined for SubSystem: %s, Category: %s",  buf,  0x16u);
      }
    }

    a1 += 56LL;
    --v4;
  }

  while (v4);
}

void sub_10000DEAC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20, __int16 a21, char a22, char a23)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_10000DED0(uint64_t a1, _OWORD *a2)
{
  if (!*(_BYTE *)(a1 + 42012)) {
    return;
  }
  sub_10000E034(a1, a2);
  BOOL v4 = sub_1000151E4(a1 + 42016, a2);
  uint64_t v5 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  uint64_t v6 = v5;
  if (v4)
  {
    if (v5)
    {
      goto LABEL_15;
    }

    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      goto LABEL_14;
    }
  }

  else
  {
    if (v5)
    {
      goto LABEL_15;
    }

    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
LABEL_14:
    }
      sub_1001FB53C();
  }

LABEL_15:
  uint64_t v7 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v7)
  {
    int v8 = v7;
    if (sub_10015A058(7))
    {
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG)) {
        sub_1001FBD64(a2, (uint64_t)v8);
      }
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  v34 = 0LL;
  if ((*(_WORD *)&has & 0x400) != 0)
  {
LABEL_7:
    xpc_object_t v33 = 2654435761LL * self->_txErrAbort;
    if ((*(_WORD *)&has & 0x1000) != 0) {
      goto LABEL_8;
    }
    goto LABEL_17;
  }

  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", self->_rxSuccess));
  [v3 setObject:v9 forKey:@"rx_success"];

  has = (__int16)self->_has;
  if ((has & 1) == 0)
  {
LABEL_5:
    if ((has & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }

  PBDataWriterWriteUint32Field(v5, self->_rxSuccess, 3LL);
  has = (__int16)self->_has;
  if ((has & 1) == 0)
  {
LABEL_5:
    if ((has & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }

  v4[3] = self->_rxSuccess;
  *((_WORD *)v4 + 24) |= 2u;
  has = (__int16)self->_has;
  if ((has & 1) == 0)
  {
LABEL_5:
    if ((has & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }

  *((_DWORD *)result + 3) = self->_rxSuccess;
  *((_WORD *)result + 24) |= 2u;
  has = (__int16)self->_has;
  if ((has & 1) == 0)
  {
LABEL_5:
    if ((has & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }

  uint64_t v6 = 0LL;
  if ((has & 8) != 0)
  {
LABEL_6:
    uint64_t v7 = 2654435761LL * self->_txAppPktSucess;
    if ((has & 0x40) != 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }

  self->_rxSuccess = *((_DWORD *)v4 + 3);
  *(_WORD *)&self->_has |= 2u;
  uint64_t v5 = *((_WORD *)v4 + 24);
  if ((v5 & 1) == 0)
  {
LABEL_5:
    if ((v5 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }

    return v18;
  }

  __break(0x5500u);
  return result;
}

    char v16 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsNetwork]);
    xpc_object_t v17 = [v16 packetRssiNbrAccessoryHistogramsCount] == 0;

    if (!v17)
    {
      std::string::append(&v94, "PacketRssiNbrAccessoryHistograms=");
      xpc_object_t v18 = 0LL;
      while (1)
      {
        __int16 v19 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsNetwork]);
        xpc_object_t v20 = (unint64_t)[v19 packetRssiNbrAccessoryHistogramsCount] > v18;

        if (!v20) {
          break;
        }
        std::string::append(&v94, "[");
        __int16 v21 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsNetwork]);
        std::to_string(&v95, *((_DWORD *)[v21 packetRssiNbrAccessoryHistograms] + v18));
        sub_10000D650(&v94, (const std::string::value_type *)&v95);

        std::string::append(&v94, "]");
        if (++v18 == 0x80000000) {
          goto LABEL_37;
        }
      }

      std::string::append(&v94, "::");
    }

    __int16 v22 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsNetwork]);
    __int16 v23 = [v22 channelSelectionsHistogramsCount] == 0;

    if (!v23)
    {
      std::string::append(&v94, "ChannelSelectionsHistograms=");
      uint64_t v24 = 0LL;
      while (1)
      {
        __int16 v25 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsNetwork]);
        int v26 = (unint64_t)[v25 channelSelectionsHistogramsCount] > v24;

        if (!v26) {
          break;
        }
        std::string::append(&v94, "[");
        xpc_object_t v27 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsNetwork]);
        std::to_string(&v95, *((_DWORD *)[v27 channelSelectionsHistograms] + v24));
        sub_10000D650(&v94, (const std::string::value_type *)&v95);

        std::string::append(&v94, "]");
        if (++v24 == 0x80000000) {
          goto LABEL_37;
        }
      }

      std::string::append(&v94, "::");
    }

    xpc_object_t v28 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsNetwork]);
    uint64_t v29 = [v28 packetLqiHistogramsCount] == 0;

    if (!v29)
    {
      std::string::append(&v94, "PacketLqiHistograms=");
      uint64_t v30 = 0LL;
      while (1)
      {
        std::string::size_type v31 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsNetwork]);
        std::string v32 = (unint64_t)[v31 packetLqiHistogramsCount] > v30;

        if (!v32) {
          break;
        }
        std::string::append(&v94, "[");
        xpc_object_t v33 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsNetwork]);
        std::to_string(&v95, *((_DWORD *)[v33 packetLqiHistograms] + v30));
        sub_10000D650(&v94, (const std::string::value_type *)&v95);

        std::string::append(&v94, "]");
        if (++v30 == 0x80000000) {
          goto LABEL_37;
        }
      }

    fprintf( v14,  "/Library/Caches/com.apple.xbs/Sources/CoreThreadRadio/wpantund/src/ncp-spinel/spinel-extra.c:%d: Requirement Failed (%s)\n",  v16,  v15);
    return 9LL;
  }

  return 2LL;
}

    __break(0x5512u);
  }

  else
  {
LABEL_9:
    uint64_t v7 = 23;
LABEL_14:
    sub_1000AFB14(a1, (uint64_t)"Remove", a2, 0LL, v7);
  }

  int v10 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_routerRoleCount));
  [v3 setObject:v10 forKey:@"router_role_count"];

  has = (__int16)self->_has;
  if ((has & 0x20) == 0)
  {
LABEL_6:
    if ((has & 1) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }

  PBDataWriterWriteUint32Field(v5, self->_routerRoleCount, 4LL);
  has = (__int16)self->_has;
  if ((has & 0x20) == 0)
  {
LABEL_6:
    if ((has & 1) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }

  v4[10] = self->_routerRoleCount;
  *((_WORD *)v4 + 22) |= 0x100u;
  has = (__int16)self->_has;
  if ((has & 0x20) == 0)
  {
LABEL_6:
    if ((has & 1) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }

  *((_DWORD *)result + 10) = self->_routerRoleCount;
  *((_WORD *)result + 22) |= 0x100u;
  has = (__int16)self->_has;
  if ((has & 0x20) == 0)
  {
LABEL_6:
    if ((has & 1) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }

  uint64_t v7 = 0LL;
  if ((has & 1) != 0)
  {
LABEL_7:
    int v8 = 2654435761LL * self->_attachAttempts;
    if ((has & 0x80) != 0) {
      goto LABEL_8;
    }
    goto LABEL_17;
  }

  self->_routerRoleCount = *((_DWORD *)v4 + 10);
  *(_WORD *)&self->_has |= 0x100u;
  uint64_t v5 = *((_WORD *)v4 + 22);
  if ((v5 & 0x20) == 0)
  {
LABEL_6:
    if ((v5 & 1) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }

  sub_10000D448((uint64_t)&v19);

  return count;
}

  return count;
}

  uint64_t v9 = 0LL;
LABEL_16:
  int v10 = PBRepeatedUInt32Hash(&self->_coexRxGrantTimeHistograms, a2);
  uint64_t v12 = PBRepeatedUInt32Hash(&self->_coexTxGrantTimeHistograms, v11);
  uint64_t v13 = (__int16)self->_has;
  if ((v13 & 0x400) != 0)
  {
    char v14 = 2654435761LL * self->_txGrantedReqPercentage;
    if ((*(_WORD *)&self->_has & 0x100) != 0)
    {
LABEL_18:
      xpc_object_t v15 = 2654435761LL * self->_rxGrantedReqPercentage;
      if ((*(_WORD *)&self->_has & 0x200) != 0) {
        goto LABEL_19;
      }
LABEL_23:
      char v16 = 0LL;
      if ((v13 & 0x80) != 0) {
        goto LABEL_20;
      }
LABEL_24:
      xpc_object_t v17 = 0LL;
      return v4 ^ v19 ^ v5 ^ v6 ^ v7 ^ v8 ^ v9 ^ v10 ^ v12 ^ v14 ^ v15 ^ v16 ^ v17;
    }
  }

  else
  {
    char v14 = 0LL;
    if ((*(_WORD *)&self->_has & 0x100) != 0) {
      goto LABEL_18;
    }
  }

  xpc_object_t v15 = 0LL;
  if ((*(_WORD *)&self->_has & 0x200) == 0) {
    goto LABEL_23;
  }
LABEL_19:
  char v16 = 2654435761LL * self->_txDeniedReqPercentage;
  if ((v13 & 0x80) == 0) {
    goto LABEL_24;
  }
LABEL_20:
  xpc_object_t v17 = 2654435761LL * self->_rxDeniedReqPercentage;
  return v4 ^ v19 ^ v5 ^ v6 ^ v7 ^ v8 ^ v9 ^ v10 ^ v12 ^ v14 ^ v15 ^ v16 ^ v17;
}

  xpc_object_t v15 = 0LL;
  if ((has & 1) != 0)
  {
LABEL_5:
    char v14 = 2654435761LL * self->_rxBroadcast;
    if ((has & 8) != 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }

    __break(0x5500u);
  }

  return result;
}

    __break(0x5500u);
  }

  return result;
}

    CFRelease(v6);
    goto LABEL_16;
  }

  int v11 = sub_1000160F4("com.apple.wpantund.tnm", "default");
  uint64_t v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
  if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
  {
    LOWORD(v13) = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_INFO,  "Failed to save saveStringValue due to null input.",  (uint8_t *)&v13,  2u);
  }

  if (v6) {
    goto LABEL_15;
  }
LABEL_16:
  if (v8) {
    CFRelease(v8);
  }
}

    BOOL v4 = *a1;
    uint64_t v5 = *(DIR **)&(*a1)->d_name[27];
    if (!v5)
    {
      __p.__r_.__value_.__r.__words[0] = (std::string::size_type)*a1;
      *a1 = 0LL;
      p_p = (unsigned int **)&__p;
LABEL_42:
      sub_10016A418(p_p);
      goto LABEL_46;
    }

    if ((__src.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_src = &__src;
    }
    else {
      p_src = (std::string *)__src.__r_.__value_.__r.__words[0];
    }
    if (p_src->__r_.__value_.__s.__data_[0] != 46) {
      break;
    }
    uint64_t v12 = (__src.__r_.__value_.__s.__size_ & 0x80u) == 0 ? &__src : (std::string *)__src.__r_.__value_.__r.__words[0];
    uint64_t v13 = v12->__r_.__value_.__s.__data_[1];
    if (v13)
    {
      if (v13 != 46) {
        break;
      }
      char v14 = (__src.__r_.__value_.__s.__size_ & 0x80u) == 0 ? &__src : (std::string *)__src.__r_.__value_.__r.__words[0];
      if (v14->__r_.__value_.__s.__data_[2]) {
        break;
      }
    }
  }

  else {
    std::string __p = __src;
  }
  sub_10016F550((std::string *)&v4->d_seekoff);
  sub_10016EC50((std::string *)&v4->d_seekoff, &__p);
  *(void *)&xpc_object_t v17 = 0xFFFF00000000LL;
  *((void *)&v17 + 1) = 0xFFFF00000000LL;
  *(_OWORD *)&v4->d_name[11] = v17;
LABEL_46:
}

  if (([*(id *)(a1 + 32) deleteAllRecordsForKeychainAccessGroup:@"0000000000"] & 1) == 0)
  {
    xpc_object_t v17 = sub_1001768B4(1);
    xpc_object_t v18 = (os_log_s *)objc_claimAutoreleasedReturnValue(v17);
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
      sub_100195F48();
    }
  }

  __int16 v19 = sub_1001768B4(1);
  xpc_object_t v20 = (os_log_s *)objc_claimAutoreleasedReturnValue(v19);
  if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
  {
    xpc_object_t v33 = 136315394;
    v34 = "-[THThreadNetworkCredentialsKeychainBackingStore deletePreferredAndFrozenThreadNetworksWithCompletion:]_block_invoke";
    uint64_t v35 = 1024;
    std::string::size_type v36 = 2378;
    _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_INFO,  "%s:%d: Deleted all preferred and frozen networks !",  (uint8_t *)&v33,  0x12u);
  }

  __int16 v21 = *(void (**)(void))(*(void *)(a1 + 40) + 16LL);
LABEL_25:
  v21();
LABEL_37:

  objc_autoreleasePoolPop(v2);
}

  return v11;
}

void sub_10000E034(uint64_t a1, _OWORD *a2)
{
  uint64_t v3 = a1;
  uint64_t v4 = 750LL;
  do
  {
    if (*(_BYTE *)(v3 + 48) == 1 && *(_OWORD *)(v3 + 16) == *a2) {
      sub_10000E45C(a1, (_BYTE *)v3);
    }
    v3 += 56LL;
    --v4;
  }

  while (v4);
}

uint64_t sub_10000E098(unsigned __int8 *a1, void *a2, uint64_t a3)
{
  if (a1[42012])
  {
    int v6 = sub_10000E170(a1, a2 + 1, (ot *)(a2 + 3), 0);
    uint64_t result = 0LL;
    if (!v6)
    {
      sub_100013AF4((uint64_t)(a1 + 42016), a2, a3);
      return 1LL;
    }

    return result;
  }

  int v8 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (!v8)
  {
    uint64_t result = os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR);
    if (!(_DWORD)result) {
      return result;
    }
    sub_1001FB53C();
    return 0LL;
  }

  uint64_t v9 = v8;
  uint64_t result = sub_10015A058(3);
  if ((_DWORD)result)
  {
    uint64_t result = os_log_type_enabled(v9, OS_LOG_TYPE_ERROR);
    if ((_DWORD)result)
    {
      sub_1001FBF08(a3, v9, v10, v11, v12, v13, v14, v15);
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_10000E170(unsigned __int8 *a1, void *a2, ot *a3, unsigned int a4)
{
  if (a4 > 1) {
    return 7LL;
  }
  sub_10000E294(a1);
  if (a4 == 1)
  {
    char v9 = 0;
  }

  else if (ot::IsMulticastLargerThanRealmLocal(a3, v8))
  {
    char v9 = 1;
  }

  else
  {
    char v9 = -1;
  }

  sub_10000E324((uint64_t)a1, a2, a3, a4, v9);
  return 0LL;
}

BOOL sub_10000E1F4(unsigned __int8 *a1, void *a2, ot *a3)
{
  return sub_10000E170(a1, a2, a3, 1u) == 0;
}

uint64_t sub_10000E214(unsigned __int8 *a1)
{
  if (!a1[42012]) {
    return 0LL;
  }
  uint64_t v2 = (uint64_t)(a1 + 42016);
  if (!sub_1000133C4((uint64_t)(a1 + 42016), &v6, &v5)
    || (uint64_t v3 = 1LL, sub_10000E170(a1, &v6, (ot *)&v5, 1u)))
  {
    sub_100013794(v2);
    return 0LL;
  }

  return v3;
}

void sub_10000E294(unsigned __int8 *a1)
{
  unint64_t v2 = ot::otPlatTimeGet((ot *)a1);
  uint64_t v3 = *((void *)a1 + 5250);
  BOOL v4 = __CFADD__(v3, 60000000LL);
  unint64_t v5 = v3 + 60000000;
  if (!v4)
  {
    if (v2 < v5) {
      return;
    }
    *((void *)a1 + 5250) = v2;
    __int128 v6 = a1 + 48;
    uint64_t v7 = 750LL;
    while (*v6 == 255 || *((void *)v6 - 2) <= 0xFFFFFFFFEE1E5CFFLL)
    {
      v6 += 56;
      if (!--v7)
      {
        sub_10000E65C(a1);
        return;
      }
    }
  }

  __break(0x5500u);
}

unint64_t sub_10000E324(uint64_t a1, void *a2, void *a3, char a4, char a5)
{
  char v9 = 0LL;
  uint64_t v10 = 0LL;
  uint64_t v11 = 750LL;
  do
  {
    if (*(unsigned __int8 *)(a1 + 48) == 255)
    {
      if (!v9) {
        char v9 = (_OWORD *)a1;
      }
    }

    else
    {
      if (*(void *)a1 == *a2
        && *(void *)(a1 + 8) == a2[1]
        && *(void *)(a1 + 16) == *a3
        && *(void *)(a1 + 24) == a3[1])
      {
        return sub_10000E3FC(a1, a4, a5);
      }

      if (v10)
      {
        if (*(void *)(a1 + 32) < *(void *)(v10 + 32)) {
          uint64_t v10 = a1;
        }
      }

      else
      {
        uint64_t v10 = a1;
      }
    }

    a1 += 56LL;
    --v11;
  }

  while (v11);
  if (!v9)
  {
    sub_10000E45C(a1, (_BYTE *)v10);
    char v9 = (_OWORD *)v10;
  }

  *char v9 = *(_OWORD *)a2;
  v9[1] = *(_OWORD *)a3;
  a1 = (uint64_t)v9;
  return sub_10000E3FC(a1, a4, a5);
}

unint64_t sub_10000E3FC(uint64_t a1, char a2, char a3)
{
  *(_BYTE *)(a1 + 48) = a2;
  *(_BYTE *)(a1 + 49) = a3;
  *(void *)(a1 + 40) = 0LL;
  unint64_t result = ot::otPlatTimeGet((ot *)a1);
  *(void *)(a1 + 32) = result;
  return result;
}

const char *sub_10000E42C(char a1)
{
  else {
    return off_1002ADF80[(char)(a1 + 1)];
  }
}

void sub_10000E45C(uint64_t a1, _BYTE *a2)
{
  uint64_t v3 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v3)
  {
    BOOL v4 = v3;
    if (sub_10015A058(7) && os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG))
    {
      else {
        unint64_t v5 = off_1002ADF80[(char)(a2[48] + 1)];
      }
      __int128 v6 = v11;
      sub_100108154(a2, v11);
      if (v12 < 0) {
        __int128 v6 = (void **)v11[0];
      }
      sub_100108154(a2 + 16, __p);
      if (v10 >= 0) {
        uint64_t v7 = __p;
      }
      else {
        uint64_t v7 = (void **)__p[0];
      }
      else {
        int v8 = off_1002ADF80[(char)(a2[49] + 1)];
      }
      *(_DWORD *)std::string buf = 136316162;
      uint64_t v14 = "RemoveMulticastForwardingCache";
      __int16 v15 = 2080;
      char v16 = v5;
      __int16 v17 = 2080;
      xpc_object_t v18 = v6;
      __int16 v19 = 2080;
      xpc_object_t v20 = v7;
      __int16 v21 = 2080;
      __int16 v22 = v8;
      _os_log_debug_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "MulticastRoutingManager: %s: %s %s => %s %s",  buf,  0x34u);
      if (v10 < 0) {
        operator delete(__p[0]);
      }
      if (v12 < 0) {
        operator delete(v11[0]);
      }
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  a2[48] = -1;
}

void sub_10000E638( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_10000E65C(_BYTE *a1)
{
  unint64_t v2 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v2)
  {
    uint64_t v3 = v2;
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  uint64_t v11 = 750LL;
  do
  {
    if (a1[48] != 255)
    {
      char v12 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v12)
      {
        if (sub_10015A058(7) && os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v13 = "Unknown";
          sub_100108154(a1, v27);
          if (v28 >= 0) {
            uint64_t v14 = v27;
          }
          else {
            uint64_t v14 = (void **)v27[0];
          }
          sub_100108154(a1 + 16, __p);
          __int16 v15 = __p;
          if (v26 < 0) {
            __int16 v15 = (void **)__p[0];
          }
          char v16 = "Unknown";
          *(_DWORD *)std::string buf = 136315906;
          uint64_t v30 = v13;
          __int16 v31 = 2080;
          std::string v32 = (const char *)v14;
          __int16 v33 = 2080;
          v34 = v15;
          __int16 v35 = 2080;
          std::string::size_type v36 = v16;
          _os_log_debug_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEBUG,  "MulticastRoutingManager: %s %s => %s %s",  buf,  0x2Au);
          if (v26 < 0) {
            operator delete(__p[0]);
          }
          if (v28 < 0) {
            operator delete(v27[0]);
          }
        }
      }

      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)std::string buf = 136315394;
        uint64_t v30 = "com.apple.wpantund.ncp";
        __int16 v31 = 2080;
        std::string v32 = "default";
        _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "Logging Module is not defined for SubSystem: %s, Category: %s",  buf,  0x16u);
      }
    }

    a1 += 56;
    --v11;
  }

  while (v11);
  __int16 v17 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v17)
  {
    if (sub_10015A058(7))
    {
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEBUG)) {
        sub_1001FBF80(v17, v18, v19, v20, v21, v22, v23, v24);
      }
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

void sub_10000E970( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20, char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_10000E994(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v4 = a2;
  if (a2[23] < 0) {
    uint64_t v4 = *(const char **)a2;
  }
  if (strcasecmp(v4, "NCP:State"))
  {
    if (!strcasecmp(v4, "Thread:BackboneRouter:State"))
    {
      char v12 = (const std::string *)sub_10000F154(a3);
      std::string::basic_string(&v18, v12);
      uint64_t v13 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v13)
      {
        if (sub_10015A058(6) && os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
        {
          uint64_t v14 = &v18;
          if ((v18.__r_.__value_.__s.__size_ & 0x80u) != 0) {
            uint64_t v14 = (std::string *)v18.__r_.__value_.__r.__words[0];
          }
          LODWORD(buf.__r_.__value_.__l.__data_) = 136315138;
          *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v14;
          _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_INFO,  "MulticastRoutingManager::BackboneRouterState changed %s",  (uint8_t *)&buf,  0xCu);
        }
      }

      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        sub_1001FB53C();
      }

      if ((v18.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        __int16 v15 = &v18;
      }
      else {
        __int16 v15 = (std::string *)v18.__r_.__value_.__r.__words[0];
      }
      else {
        sub_10000D9D4(a1);
      }
    }

    else if (!strcasecmp(v4, "Thread:BackboneRouter:MulticastListenerEvent"))
    {
      uint64_t v6 = (uint64_t *)sub_10000F220(a3);
      sub_10000D19C(&v18, v6);
      sub_10000AC00(&buf, "MulticastListenerEventType");
      uint64_t v7 = sub_10000ED88((uint64_t **)&v18, (__n128 *)&buf);
      int v8 = sub_1001476B4(v7, 0);
      sub_10000AC00(&__p, "MulticastListenerEventAddress");
      uint64_t v9 = sub_10000ED88((uint64_t **)&v18, (__n128 *)&__p);
      sub_100147B4C(v9, &buf);
      if (v22 < 0) {
        operator delete(__p);
      }
      if (sub_100148E18((uint64_t)&buf, &v17))
      {
        uint64_t v10 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v10)
        {
          if (sub_10015A058(6) && os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
          {
            p_std::string buf = &buf;
            if ((buf.__r_.__value_.__s.__size_ & 0x80u) != 0) {
              p_std::string buf = (std::string *)buf.__r_.__value_.__r.__words[0];
            }
            LODWORD(__p) = 67109378;
            HIDWORD(__p) = v8;
            __int16 v20 = 2080;
            uint64_t v21 = p_buf;
            _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_INFO,  "MulticastRoutingManager::BackboneRouterMulticastListnerEvent changed %d addr %s",  (uint8_t *)&__p,  0x12u);
          }
        }

        else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
          sub_1001FB53C();
        }

        if (v8)
        {
          if (v8 == 1) {
            sub_10000DED0(a1, &v17);
          }
        }

        else
        {
          sub_10000DB2C(a1, &v17);
        }
      }

      else
      {
        char v16 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v16)
        {
        }

        else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
          sub_1001FB53C();
        }
      }

      sub_10000D448((uint64_t)&v18);
    }
  }

void sub_10000ED14( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, int a20, __int16 a21, char a22, char a23)
{
}

void *sub_10000ED88(uint64_t **a1, __n128 *a2)
{
  uint64_t v3 = a2;
  return sub_10000F284(a1, (const void **)a2, (uint64_t)&unk_1002228DC, &v3) + 7;
}

void sub_10000EDBC(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = (void *)(a1 + 43920);
  uint64_t v3 = *(void *)(a1 + 43920);
  if (v3 != a2)
  {
    if (v3)
    {
      *(void *)&__int128 v7 = sub_10000E994;
      *((void *)&v7 + 1) = 0LL;
      uint64_t v8 = a1;
      sub_10000EE8C(v3 + 104, &v7);
    }

    void *v2 = a2;
    if (a2)
    {
      v6[0] = sub_10000E994;
      v6[1] = 0LL;
      v6[2] = a1;
      sub_1000126D0(&v7, (uint64_t)v6);
      sub_10000EEB4(a2 + 104, (uint64_t)&v7, 0, &v10);
      sub_10000EF74(&v11);
      sub_10000EFC4(v9);
      char v12 = (void **)&v7;
      sub_10000EFEC(&v12);
    }
  }

void sub_10000EE78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
}

uint64_t *sub_10000EE8C(uint64_t a1, __int128 *a2)
{
  uint64_t v3 = (void *)sub_10000F38C((uint64_t *)(a1 + 8));
  return sub_10000F3CC(v3, a2);
}

void *sub_10000EEB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t *a4@<X8>)
{
  __int128 v7 = (uint64_t *)sub_10000F38C((uint64_t *)(a1 + 8));
  return sub_10000FE54(v7, a2, a3, a4);
}

uint64_t sub_10000EEF4(uint64_t a1)
{
  uint64_t v3 = (void **)a1;
  sub_10000EFEC(&v3);
  return a1;
}

unint64_t sub_10000EF30(_OWORD *a1, _OWORD *a2, _OWORD *a3, char a4, char a5)
{
  *a1 = *a2;
  a1[1] = *a3;
  return sub_10000E3FC((uint64_t)a1, a4, a5);
}

unint64_t sub_10000EF4C(ot *a1, uint64_t a2)
{
  *((void *)a1 + 5) = a2;
  unint64_t result = ot::otPlatTimeGet(a1);
  *((void *)a1 + 4) = result;
  return result;
}

unsigned int **sub_10000EF74(unsigned int **a1)
{
  unint64_t v2 = *a1;
  if (v2)
  {
    uint64_t v3 = v2 + 3;
    do
    {
      unsigned int v4 = __ldaxr(v3);
      unsigned int v5 = v4 - 1;
    }

    while (__stlxr(v5, v3));
    if (!v5) {
      (*(void (**)(unsigned int *))(*(void *)v2 + 24LL))(v2);
    }
  }

  return a1;
}

void *sub_10000EFC4(void *a1)
{
  return a1;
}

void sub_10000EFEC(void ***a1)
{
  unint64_t v2 = *a1;
  if (*v2)
  {
    sub_10000F05C((unsigned int **)v2, (unsigned int *)*v2);
    uint64_t v3 = **a1;
    if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)(*a1)[2] - (_BYTE *)v3) >> 3) >= 0xAAAAAAAAAAAAAABLL) {
      __break(0x550Cu);
    }
    else {
      operator delete(v3);
    }
  }

unsigned int **sub_10000F05C(unsigned int **result, unsigned int *a2)
{
  uint64_t v3 = result;
  v3[1] = a2;
  return result;
}

unsigned int **sub_10000F0A8(uint64_t a1)
{
  unsigned int v1 = *(_DWORD *)a1 ^ (*(int *)a1 >> 31);
  if (v1 == 2)
  {
    unint64_t result = *(unsigned int ***)(a1 + 8);
    if (result) {
      return (unsigned int **)(*((uint64_t (**)(unsigned int **))*result + 1))(result);
    }
  }

  else
  {
    if (v1 > 1) {
      sub_10000F104();
    }
    return sub_10000EF74((unsigned int **)(a1 + 16));
  }

  return result;
}

void sub_10000F104()
{
  __assert_rtn("forced_return", "forced_return.hpp", 38, "false");
}

void sub_10000F12C()
{
  exception = (std::bad_array_new_length *)__cxa_allocate_exception(8uLL);
  unsigned int v1 = std::bad_array_new_length::bad_array_new_length(exception);
}

uint64_t sub_10000F154(uint64_t a1)
{
  uint64_t result = sub_10000F1B8(a1);
  if (!result)
  {
    v2.__vftable = 0LL;
    std::bad_cast::bad_cast(&v2);
    v2.__vftable = (std::bad_cast_vtbl *)&off_1002ADCA8;
    sub_10000C268();
  }

  return result;
}

void sub_10000F1A4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::bad_cast a10)
{
}

uint64_t sub_10000F1B8(uint64_t result)
{
  if (result)
  {
    unsigned int v1 = (void *)result;
    uint64_t result = *((void *)sub_10000BD6C((uint64_t *)result) + 1) & 0x7FFFFFFFFFFFFFFFLL;
    if (result == (0x8000000100229AD0LL & 0x7FFFFFFFFFFFFFFFLL)
      || (uint64_t result = strcmp((const char *)result, (const char *)(0x8000000100229AD0LL & 0x7FFFFFFFFFFFFFFFLL)),
          !(_DWORD)result))
    {
      if (*v1) {
        return *v1 + 8LL;
      }
      else {
        __break(0x5516u);
      }
    }

    else
    {
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_10000F220(uint64_t a1)
{
  uint64_t result = sub_10000D13C(a1);
  if (!result)
  {
    v2.__vftable = 0LL;
    std::bad_cast::bad_cast(&v2);
    v2.__vftable = (std::bad_cast_vtbl *)&off_1002ADCA8;
    sub_10000C268();
  }

  return result;
}

void sub_10000F270( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::bad_cast a10)
{
}

void *sub_10000F284(uint64_t **a1, const void **a2, uint64_t a3, __n128 **a4)
{
  uint64_t v6 = sub_10000AE50((uint64_t)a1, &v11, a2);
  __int128 v7 = (void *)*v6;
  if (!*v6)
  {
    uint64_t v8 = (void **)v6;
    sub_10000F32C((uint64_t)a1, a4, (uint64_t)v10);
    sub_10000AF70(a1, v11, v8, (void *)v10[0]);
    __int128 v7 = v10[0];
    v10[0] = 0LL;
    sub_10000D3A4(v10, 0LL);
  }

  return v7;
}

__n128 sub_10000F32C@<Q0>(uint64_t a1@<X0>, __n128 **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = (__n128 *)operator new(0x40uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  __int128 v7 = *a2;
  unint64_t v8 = (*a2)[1].n128_u64[0];
  __n128 result = **a2;
  v6[2] = result;
  v6[3].n128_u64[0] = v8;
  v7->n128_u64[0] = 0LL;
  v7->n128_u64[1] = 0LL;
  v7[1].n128_u64[0] = 0LL;
  v6[3].n128_u64[1] = 0LL;
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

uint64_t sub_10000F38C(uint64_t *a1)
{
  uint64_t result = *a1;
  if (!result) {
    __assert_rtn("operator*", "shared_ptr.hpp", 780, "px != 0");
  }
  return result;
}

uint64_t *sub_10000F3CC(void *a1, __int128 *a2)
{
  uint64_t v3 = (uint64_t *)sub_10000F5D0(&v17);
  uint64_t v4 = sub_10000F7D0(v3);
  while (1)
  {
    uint64_t v4 = *(void *)(v4 + 8);
    uint64_t v5 = (uint64_t *)sub_10000F5D0(&v17);
    if (v4 == sub_10000F7D0(v5)) {
      break;
    }
    uint64_t v6 = sub_10000F610((uint64_t *)(v4 + 16));
    sub_10000F810(v21, v6);
    if (*(_BYTE *)(sub_10000F650((uint64_t *)(v4 + 16)) + 24))
    {
      uint64_t v7 = sub_10000F650((uint64_t *)(v4 + 16));
      uint64_t v8 = sub_10000FB30((uint64_t *)(v7 + 32));
      __int128 v15 = *a2;
      uint64_t v16 = *((void *)a2 + 2);
      unsigned int v9 = sub_10000F690((uint64_t *)(v8 + 24), &v15);
      uint64_t v10 = (uint64_t *)sub_10000F650((uint64_t *)(v4 + 16));
      if (v9)
      {
        sub_10000F6C4(v10, v21);
      }

      else
      {
        uint64_t v11 = sub_10000FB30(v10 + 4);
        char v12 = (uint64_t *)sub_10000F6D8((uint64_t *)(v11 + 24));
        if (v12)
        {
          __int128 v19 = *a2;
          uint64_t v20 = *((void *)a2 + 2);
          if (sub_10000F690(v12, &v19))
          {
            uint64_t v13 = (uint64_t *)sub_10000F650((uint64_t *)(v4 + 16));
            sub_10000F6C4(v13, v21);
          }
        }
      }
    }

    sub_10000FE20(&v22);
    sub_10000F8D8(v21);
  }

  return sub_10000F9EC(&v18);
}

void sub_10000F534( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{
}

pthread_mutex_t **sub_10000F570@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v8 = (pthread_mutex_t *)sub_10000F72C(a1 + 3);
  sub_10000F76C(v8);
  uint64_t v4 = a1[1];
  *a2 = *a1;
  a2[1] = v4;
  if (v4)
  {
    uint64_t v5 = (unsigned int *)(v4 + 8);
    do
      unsigned int v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }

  return sub_10000F788(&v8);
}

uint64_t sub_10000F5D0(uint64_t *a1)
{
  uint64_t result = *a1;
  if (!result) {
    __assert_rtn("operator->", "shared_ptr.hpp", 786, "px != 0");
  }
  return result;
}

uint64_t sub_10000F610(uint64_t *a1)
{
  uint64_t result = *a1;
  if (!result) {
    __assert_rtn("operator*", "shared_ptr.hpp", 780, "px != 0");
  }
  return result;
}

uint64_t sub_10000F650(uint64_t *a1)
{
  uint64_t result = *a1;
  if (!result) {
    __assert_rtn("operator->", "shared_ptr.hpp", 786, "px != 0");
  }
  return result;
}

void *sub_10000F690(uint64_t *a1, void *a2)
{
  uint64_t result = sub_10000FA90(a1);
  if (result) {
    return (void *)sub_10000FAE8(result, a2);
  }
  return result;
}

uint64_t *sub_10000F6C4(uint64_t *result, void *a2)
{
  if (*((_BYTE *)result + 24))
  {
    *((_BYTE *)result + 24) = 0;
    return sub_10000FB70(result, a2);
  }

  return result;
}

_UNKNOWN **sub_10000F6D8(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if (!*a1) {
    return 0LL;
  }
  __int16 v4 = 0;
  (*(void (**)(uint64_t *, _UNKNOWN ***, uint64_t))(v1 & 0xFFFFFFFFFFFFFFFELL))(a1 + 1, &v3, 3LL);
  return v3;
}

uint64_t sub_10000F72C(uint64_t *a1)
{
  uint64_t result = *a1;
  if (!result) {
    __assert_rtn("operator*", "shared_ptr.hpp", 780, "px != 0");
  }
  return result;
}

uint64_t sub_10000F76C(pthread_mutex_t *a1)
{
  uint64_t result = pthread_mutex_lock(a1);
  if ((_DWORD)result) {
    sub_1001FC050();
  }
  return result;
}

pthread_mutex_t **sub_10000F788(pthread_mutex_t **a1)
{
  return a1;
}

uint64_t sub_10000F7B4(pthread_mutex_t *a1)
{
  uint64_t result = pthread_mutex_unlock(a1);
  if ((_DWORD)result) {
    sub_1001FC078();
  }
  return result;
}

uint64_t sub_10000F7D0(uint64_t *a1)
{
  uint64_t result = *a1;
  if (!result) {
    __assert_rtn("operator*", "shared_ptr.hpp", 780, "px != 0");
  }
  return result;
}

void *sub_10000F810(void *a1, uint64_t a2)
{
  sub_10000F860(a1)[23] = a2;
  (*(void (**)(uint64_t))(*(void *)a2 + 24LL))(a2);
  return a1;
}

void sub_10000F84C(_Unwind_Exception *a1)
{
}

void *sub_10000F860(void *a1)
{
  a1[20] = 10LL;
  a1[21] = a1;
  a1[22] = 0LL;
  if (!sub_10000F898(a1)) {
    sub_1001FC0A0();
  }
  return a1;
}

BOOL sub_10000F898(void *a1)
{
  uint64_t v1 = (void *)a1[21];
  if (!v1) {
    return 1LL;
  }
  unint64_t v2 = a1[20];
  if (v2 >= 0xA && (v1 == a1 ? (BOOL v3 = v2 == 10) : (BOOL v3 = 1), v3)) {
    return a1[22] <= v2;
  }
  else {
    return 0LL;
  }
}

void *sub_10000F8D8(void *a1)
{
  return a1;
}

void sub_10000F900(void *a1)
{
  if (!sub_10000F898(a1)) {
    sub_1001FC0C8();
  }
  if (a1[21]) {
    sub_10000F944((uint64_t)a1);
  }
}

void sub_10000F944(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 176);
  if (v2) {
    sub_10000F99C((uint64_t *)a1, v2);
  }
  unint64_t v3 = *(void *)(a1 + 160);
  if (v3 >= 0xB)
  {
    if (v3 >> 60) {
      __break(0x550Cu);
    }
    else {
      operator delete(*(void **)(a1 + 168));
    }
  }

uint64_t *sub_10000F99C(uint64_t *result, uint64_t a2)
{
  if (!a2) {
    sub_1001FC0F0();
  }
  if (a2 - 1 >= 0)
  {
    uint64_t v2 = result[21] + 16 * result[22];
    unint64_t v3 = v2 + 16 * ~a2;
    unint64_t v4 = v2 - 16;
    do
    {
      uint64_t result = sub_10000F9EC((uint64_t *)(v4 + 8));
      v4 -= 16LL;
    }

    while (v4 > v3);
  }

  return result;
}

uint64_t *sub_10000F9EC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (v2) {
    sub_10000FA1C(v2);
  }
  return a1;
}

uint64_t sub_10000FA1C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = (unsigned int *)(result + 8);
  do
  {
    unsigned int v3 = __ldaxr(v2);
    unsigned int v4 = v3 - 1;
  }

  while (__stlxr(v4, v2));
  if (!v4)
  {
    uint64_t v5 = (unsigned int *)(result + 12);
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 16LL))(result);
    do
    {
      unsigned int v6 = __ldaxr(v5);
      unsigned int v7 = v6 - 1;
    }

    while (__stlxr(v7, v5));
    if (!v7) {
      return (*(uint64_t (**)(uint64_t))(*(void *)v1 + 24LL))(v1);
    }
  }

  return result;
}

_UNKNOWN **sub_10000FA90(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if (!*a1) {
    return 0LL;
  }
  __int16 v4 = 1;
  (*(void (**)(uint64_t *, _UNKNOWN ***, uint64_t))(v1 & 0xFFFFFFFFFFFFFFFELL))(a1 + 1, &v3, 3LL);
  return v3;
}

BOOL sub_10000FAE8(void *a1, void *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a2[1];
  BOOL v5 = v2 == v3;
  uint64_t v4 = (v3 | v2) & 1 | *a1;
  BOOL v5 = v5 || v4 == 0;
  int v6 = v5;
  return *a1 == *a2 && v6 != 0 && a1[2] == a2[2];
}

uint64_t sub_10000FB30(uint64_t *a1)
{
  uint64_t result = *a1;
  if (!result) {
    __assert_rtn("operator*", "shared_ptr.hpp", 780, "px != 0");
  }
  return result;
}

uint64_t *sub_10000FB70(uint64_t *result, void *a2)
{
  int v2 = *((_DWORD *)result + 7);
  if (!v2) {
    sub_1001FC118();
  }
  int v3 = v2 - 1;
  *((_DWORD *)result + 7) = v3;
  if (!v3)
  {
    (*(void (**)(__int128 *__return_ptr))(*result + 40))(&v5);
    sub_10000FBE8(a2, &v5);
    return sub_10000F9EC((uint64_t *)&v5 + 1);
  }

  return result;
}

void sub_10000FBD4(_Unwind_Exception *a1)
{
}

void *sub_10000FBE8(void *result, __int128 *a2)
{
  int v3 = result;
  uint64_t v4 = result[22];
  if (v4 != result[20]) {
    return sub_10000FC34(v3, a2);
  }
  if (v4 != -1)
  {
    sub_10000FC94(result, v4 + 1);
    return sub_10000FC34(v3, a2);
  }

  __break(0x5500u);
  return result;
}

void *sub_10000FC34(void *result, __int128 *a2)
{
  uint64_t v2 = result[22];
  if (v2 == result[20]) {
    sub_1001FC140();
  }
  __int128 v3 = *a2;
  *(_OWORD *)(result[21] + 16 * v2) = *a2;
  if (*((void *)&v3 + 1))
  {
    uint64_t v4 = (unsigned int *)(*((void *)&v3 + 1) + 8LL);
    do
      unsigned int v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
    uint64_t v2 = result[22];
  }

  BOOL v6 = __CFADD__(v2, 1LL);
  uint64_t v7 = v2 + 1;
  if (v6) {
    __break(0x5500u);
  }
  else {
    result[22] = v7;
  }
  return result;
}

void sub_10000FC94(void *a1, unint64_t a2)
{
  unint64_t v2 = a1[20];
  if (v2 <= 9) {
    sub_1001FC168();
  }
  if (v2 < a2)
  {
    unint64_t v5 = sub_10000FD48((unint64_t)a1, a2);
    sub_10000FCF0(a1, v5);
    if (a1[20] < a2) {
      sub_1001FC190();
    }
  }

void sub_10000FCF0(void *a1, unint64_t a2)
{
  uint64_t v4 = sub_10000FD80((uint64_t)a1, a2);
  sub_10000F900(a1);
  a1[20] = a2;
  a1[21] = v4;
  if (a1[22] > a2) {
    sub_1001FC1B8();
  }
}

unint64_t sub_10000FD48(unint64_t result, unint64_t a2)
{
  unint64_t v2 = *(void *)(result + 160);
  if (v2 >= a2) {
    sub_1001FC1E0();
  }
  if (v2 >> 62)
  {
    __break(0x550Cu);
  }

  else
  {
    unint64_t v3 = 4 * v2;
    if (v3 <= a2) {
      return a2;
    }
    else {
      return v3;
    }
  }

  return result;
}

void *sub_10000FD80(uint64_t a1, unint64_t a2)
{
  unint64_t v3 = (void *)a1;
  if (a2 >= 0xB) {
    unint64_t v3 = sub_10000FDC8(a1, a2);
  }
  sub_10000FDE4(*(void **)(a1 + 168), (void *)(*(void *)(a1 + 168) + 16LL * *(void *)(a1 + 176)), v3);
  return v3;
}

void *sub_10000FDC8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60) {
    sub_10000F12C();
  }
  return operator new(16 * a2);
}

void *sub_10000FDE4(void *a1, void *a2, void *a3)
{
  while (a1 != a2)
  {
    uint64_t v3 = a1[1];
    *a3 = *a1;
    a3[1] = v3;
    if (v3)
    {
      uint64_t v4 = (unsigned int *)(v3 + 8);
      do
        unsigned int v5 = __ldxr(v4);
      while (__stxr(v5 + 1, v4));
    }

    a1 += 2;
    a3 += 2;
  }

  return a3;
}

void *sub_10000FE20(void *a1)
{
  return a1;
}

void *sub_10000FE54@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = (pthread_mutex_t *)sub_10000F72C(a1 + 3);
  sub_100010030(v10, v8);
  sub_10000FF24(a1, v10, a2, a3, a4);
  sub_10000F788(&v11);
  return sub_10000F8D8(v10);
}

void sub_10000FF00(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t *sub_10000FF24@<X0>( uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t *a5@<X8>)
{
  LOBYTE(v21) = 0;
  if (a4)
  {
    int v20 = 0;
    uint64_t v8 = (uint64_t *)sub_10000F5D0(a1);
    uint64_t v9 = sub_10000F7D0(v8);
    sub_100010148(v9, &v20, &v22);
  }

  else
  {
    int v20 = 2;
    uint64_t v10 = (uint64_t *)sub_10000F5D0(a1);
    uint64_t v11 = sub_10000F7D0(v10);
    sub_1000100DC(v11, &v20, &v22);
  }

  uint64_t v12 = sub_10000F650(&v22);
  *(_DWORD *)(v12 + 64) = v20;
  uint64_t v13 = v22;
  *(void *)(v12 + 68) = v21;
  uint64_t v14 = v23;
  __int128 v19 = v23;
  if (v23)
  {
    __int128 v15 = v23 + 3;
    do
      unsigned int v16 = __ldxr(v15);
    while (__stxr(v16 + 1, v15));
    *a5 = v13;
    a5[1] = (uint64_t)v14;
    do
      unsigned int v17 = __ldxr(v15);
    while (__stxr(v17 + 1, v15));
  }

  else
  {
    *a5 = v13;
    a5[1] = 0LL;
  }

  sub_10000EF74(&v19);
  return sub_10000F9EC((uint64_t *)&v23);
}

void sub_100010018(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
}

void *sub_100010030(void *a1, pthread_mutex_t *a2)
{
  sub_10000F860(a1)[23] = a2;
  sub_10000F76C(a2);
  return a1;
}

void sub_100010064(_Unwind_Exception *a1)
{
}

uint64_t *sub_100010078@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v7 = operator new(0x50uLL);
  sub_1000118C4((uint64_t)v7, a3, a1 + 3);
  return sub_1000123C4(a4, (uint64_t)v7);
}

void sub_1000100C8(_Unwind_Exception *a1)
{
}

_OWORD *sub_1000100DC(uint64_t a1, _DWORD *a2, void *a3)
{
  if (*a2 == 2) {
    BOOL v6 = (uint64_t *)(a1 + 32);
  }
  else {
    BOOL v6 = sub_1000113FC(a1 + 24, (uint64_t)a2);
  }
  uint64_t v8 = v6;
  return sub_1000124E4(a1, &v8, (uint64_t)a2, a3);
}

_OWORD *sub_100010148(uint64_t a1, _DWORD *a2, void *a3)
{
  BOOL v6 = (uint64_t **)(a1 + 24);
  if (*a2) {
    uint64_t v7 = sub_100011390((uint64_t)v6, (uint64_t)a2);
  }
  else {
    uint64_t v7 = *v6;
  }
  uint64_t v9 = v7;
  return sub_1000124E4(a1, &v9, (uint64_t)a2, a3);
}

uint64_t *sub_1000101B0(uint64_t *a1, void *a2)
{
  uint64_t v4 = a1[1];
  if (v4)
  {
    unsigned int v5 = atomic_load((unsigned int *)(v4 + 8));
    if (v5 == 1) {
      return sub_100010440(a1, a2, 1, 2);
    }
  }

  uint64_t v7 = (uint64_t *)operator new(0x20uLL);
  uint64_t v8 = sub_1000102F8(a1);
  uint64_t v9 = (uint64_t *)sub_10000F5D0(a1);
  uint64_t v10 = sub_10000F7D0(v9);
  sub_10001065C(v7, v8, v10);
  sub_10001029C(a1, (uint64_t)v7);
  uint64_t v11 = (uint64_t *)sub_10000F5D0(a1);
  uint64_t v12 = *(uint64_t **)(sub_10000F7D0(v11) + 8);
  return sub_100010338(a1, a2, 1, &v12, 0);
}

void sub_100010288(_Unwind_Exception *a1)
{
}

uint64_t *sub_10001029C(void *a1, uint64_t a2)
{
  if (a2 && *a1 == a2) {
    sub_1001FC208();
  }
  sub_1000104D4((uint64_t *)&v5, a2);
  __int128 v3 = *(_OWORD *)a1;
  *(_OWORD *)a1 = v5;
  __int128 v5 = v3;
  return sub_10000F9EC((uint64_t *)&v5 + 1);
}

uint64_t sub_1000102F8(uint64_t *a1)
{
  uint64_t result = *a1;
  if (!result) {
    __assert_rtn("operator*", "shared_ptr.hpp", 780, "px != 0");
  }
  return result;
}

uint64_t *sub_100010338(uint64_t *a1, void *a2, int a3, uint64_t **a4, int a5)
{
  uint64_t v5 = a1[1];
  uint64_t v21 = *a4;
  uint64_t v11 = (uint64_t *)sub_10000F5D0(a1);
  unsigned int v12 = 0;
  unsigned int v13 = a5 - 1;
  while (1)
  {
    uint64_t result = (uint64_t *)sub_10000F7D0(v11);
    __int128 v15 = v21;
    if (v21 == result || v13 < v12)
    {
      a1[2] = (uint64_t)v21;
      return result;
    }

    if (a3)
    {
      unsigned int v17 = (uint64_t *)sub_10000F650(v21 + 2);
      sub_100010FA8(v17, a2);
      __int128 v15 = v21;
    }

    if (*(_BYTE *)(sub_10000F650(v15 + 2) + 24))
    {
      uint64_t result = (uint64_t *)v21[1];
    }

    else
    {
      uint64_t v18 = (uint64_t *)sub_10000F5D0(a1);
      uint64_t v19 = sub_10000F7D0(v18);
      uint64_t v20 = sub_10000F650(v21 + 2);
      uint64_t result = (uint64_t *)sub_100010FF0(v19, (void *)(v20 + 64), &v21);
    }

    uint64_t v21 = result;
    if (v12 == -1) {
      break;
    }
    uint64_t v11 = (uint64_t *)sub_10000F5D0(a1);
    ++v12;
  }

  __break(0x5500u);
  return result;
}

uint64_t *sub_100010440(uint64_t *a1, void *a2, int a3, int a4)
{
  uint64_t v4 = a1[1];
  uint64_t v10 = (uint64_t *)sub_10000F5D0(a1);
  uint64_t v11 = sub_10000F7D0(v10);
  unsigned int v12 = (uint64_t *)a1[2];
  if (v12 == (uint64_t *)v11)
  {
    unsigned int v13 = (uint64_t *)sub_10000F5D0(a1);
    unsigned int v12 = *(uint64_t **)(sub_10000F7D0(v13) + 8);
  }

  __int128 v15 = v12;
  return sub_100010338(a1, a2, a3, &v15, a4);
}

uint64_t *sub_1000104D4(uint64_t *a1, uint64_t a2)
{
  *a1 = a2;
  a1[1] = 0LL;
  sub_10001053C(&v5, a2);
  uint64_t v3 = a1[1];
  a1[1] = v5;
  uint64_t v5 = v3;
  sub_10000F9EC(&v5);
  return a1;
}

void sub_100010528(_Unwind_Exception *a1)
{
}

void *sub_10001053C(void *a1, uint64_t a2)
{
  *a1 = 0LL;
  uint64_t v4 = operator new(0x18uLL);
  v4[1] = 0x100000001LL;
  *uint64_t v4 = &off_1002ADD48;
  v4[2] = a2;
  *a1 = v4;
  return a1;
}

void sub_100010588(void *a1)
{
}

void sub_10001059C(_Unwind_Exception *a1)
{
}

void sub_1000105B0(uint64_t *a1)
{
  if (a1)
  {
    sub_10000F9EC(a1 + 3);
    sub_10000F9EC(a1 + 1);
    operator delete(a1);
  }

void sub_1000105F0(uint64_t a1)
{
  uint64_t v1 = *(uint64_t **)(a1 + 16);
  if (v1)
  {
    sub_10000F9EC(v1 + 3);
    sub_10000F9EC(v1 + 1);
    operator delete(v1);
  }

uint64_t sub_100010630(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }
  return result;
}

uint64_t sub_100010644()
{
  return 0LL;
}

uint64_t sub_10001064C()
{
  return 0LL;
}

uint64_t sub_100010654()
{
  return 0LL;
}

uint64_t *sub_10001065C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v6 = operator new(0x40uLL);
  sub_1000106E0((uint64_t)v6, a3);
  sub_100010E34(a1, (uint64_t)v6);
  uint64_t v7 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v7;
  if (v7)
  {
    uint64_t v8 = (unsigned int *)(v7 + 8);
    do
      unsigned int v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }

  return a1;
}

void sub_1000106CC(_Unwind_Exception *a1)
{
}

uint64_t sub_1000106E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010838((uint64_t *)a1, a2);
  sub_100010A3C((uint64_t)(v4 + 3), (uint64_t *)(a2 + 24));
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 24);
  uint64_t v11 = 0LL;
  uint64_t v11 = *(void *)(a2 + 24);
  while (v11 != a2 + 32)
  {
    if (v10 == a1 + 32) {
      __assert_rtn("grouped_list", "slot_groups.hpp", 80, "this_map_it != _group_map.end()");
    }
    *(void *)(v10 + 48) = v5;
    uint64_t v6 = sub_100010820(a2, (uint64_t)&v11);
    uint64_t v9 = v11;
    sub_10000B338((uint64_t)&v9);
    uint64_t v7 = sub_100010820(a2, (uint64_t)&v9);
    while (v6 != v7)
    {
      uint64_t v6 = *(void *)(v6 + 8);
      uint64_t v5 = *(void *)(v5 + 8);
    }

    sub_10000B338((uint64_t)&v11);
    sub_10000B338((uint64_t)&v10);
  }

  return a1;
}

void sub_1000107F4(_Unwind_Exception *a1)
{
}

uint64_t sub_100010820(uint64_t result, uint64_t a2)
{
  if (*(void *)a2 != result + 32) {
    return *(void *)(*(void *)a2 + 48LL);
  }
  return result;
}

uint64_t *sub_100010838(uint64_t *a1, uint64_t a2)
{
  *a1 = (uint64_t)a1;
  a1[1] = (uint64_t)a1;
  a1[2] = 0LL;
  for (uint64_t i = *(void *)(a2 + 8); i != a2; uint64_t i = *(void *)(i + 8))
    sub_1000108A4(a1, (void *)(i + 16));
  return a1;
}

void sub_100010890(_Unwind_Exception *a1)
{
}

void *sub_1000108A4(uint64_t *a1, void *a2)
{
  uint64_t result = sub_1000108F4((uint64_t)a1, 0LL, 0LL, a2);
  uint64_t v4 = *a1;
  *uint64_t result = *a1;
  result[1] = a1;
  *(void *)(v4 + 8) = result;
  *a1 = (uint64_t)result;
  uint64_t v5 = a1[2];
  BOOL v6 = __CFADD__(v5, 1LL);
  uint64_t v7 = v5 + 1;
  if (v6) {
    __break(0x5500u);
  }
  else {
    a1[2] = v7;
  }
  return result;
}

void *sub_1000108F4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v11 = 1LL;
  uint64_t v8 = operator new(0x20uLL);
  void *v8 = a2;
  v8[1] = a3;
  sub_10001096C(a1 + 16, v8 + 2, a4);
  uint64_t v12 = 0LL;
  sub_100010990((uint64_t)v10);
  return v8;
}

void sub_10001096C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = a3[1];
  *a2 = *a3;
  a2[1] = v3;
  if (v3)
  {
    uint64_t v4 = (unsigned int *)(v3 + 8);
    do
      unsigned int v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }

void sub_100010990(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  if (v2)
  {
    if (*(void *)(a1 + 8) >> 59) {
      __break(0x550Cu);
    }
    else {
      operator delete(v2);
    }
  }

void sub_1000109B4(uint64_t *a1)
{
  if (a1[2])
  {
    uint64_t v3 = *a1;
    uint64_t v2 = (uint64_t *)a1[1];
    uint64_t v4 = *v2;
    *(void *)(v4 + 8) = *(void *)(*a1 + 8);
    **(void **)(v3 + 8) = v4;
    a1[2] = 0LL;
    while (v2 != a1)
    {
      unsigned int v5 = (uint64_t *)v2[1];
      sub_100010A14((uint64_t)a1, v2);
      uint64_t v2 = v5;
    }
  }

void sub_100010A14(uint64_t a1, uint64_t *a2)
{
}

uint64_t sub_100010A3C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_100010AEC(a1, (uint64_t)a2);
  sub_100010A84(v4, *a2, (uint64_t)(a2 + 1));
  return a1;
}

void sub_100010A70(_Unwind_Exception *a1)
{
}

uint64_t sub_100010A84(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = a2;
  if (a2 != a3)
  {
    uint64_t v4 = (uint64_t **)result;
    unsigned int v5 = (void *)(result + 8);
    do
    {
      sub_100010B0C(v4, v5, a2 + 32, a2 + 32);
      uint64_t result = sub_10000B338((uint64_t)&v6);
      a2 = v6;
    }

    while (v6 != a3);
  }

  return result;
}

uint64_t sub_100010AEC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 8) = 0LL;
  *(void *)uint64_t result = 0LL;
  *(void *)(result + 16) = 0LL;
  *(_BYTE *)(result + 24) = *(_BYTE *)(a2 + 24);
  *(void *)uint64_t result = result + 8;
  return result;
}

_OWORD *sub_100010B0C(uint64_t **a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = (void **)sub_100010BC0(a1, a2, &v13, &v12, a3);
  uint64_t v7 = *v6;
  if (!*v6)
  {
    uint64_t v8 = v6;
    uint64_t v7 = operator new(0x38uLL);
    v10[1] = a1 + 1;
    v7[2] = *(_OWORD *)a4;
    *((void *)v7 + 6) = *(void *)(a4 + 16);
    char v11 = 1;
    sub_10000AF70(a1, v13, (void **)v8, v7);
    v10[0] = 0LL;
    sub_10000D0A8(v10, 0LL);
  }

  return v7;
}

void *sub_100010BC0(void *result, void *a2, void *a3, void *a4, uint64_t a5)
{
  uint64_t v8 = result;
  uint64_t v9 = result + 1;
  if (result + 1 != a2)
  {
    uint64_t result = (void *)sub_100010DB4((uint64_t)(result + 3), a5, (uint64_t)(a2 + 4));
    if (!(_DWORD)result)
    {
      if (!sub_100010DB4((uint64_t)(v8 + 3), (uint64_t)(a2 + 4), a5))
      {
        *a3 = a2;
        *a4 = a2;
        return a4;
      }

      uint64_t v14 = a2;
      sub_10000B338((uint64_t)&v14);
      uint64_t v13 = v14;
      if (v14 == v9 || sub_100010DB4((uint64_t)(v8 + 3), a5, (uint64_t)(v14 + 4)))
      {
        a4 = a2 + 1;
        if (a2[1])
        {
          *a3 = v13;
          return v13;
        }

        else
        {
          *a3 = a2;
        }

        return a4;
      }

      return sub_100010D18((uint64_t)v8, a3, a5);
    }
  }

  uint64_t v14 = a2;
  if ((void *)*v8 != a2)
  {
    char v11 = sub_10000CB60(&v14);
    uint64_t result = (void *)sub_100010DB4((uint64_t)(v8 + 3), (uint64_t)(*v11 + 4), a5);
    if (!(_DWORD)result) {
      return sub_100010D18((uint64_t)v8, a3, a5);
    }
  }

  if (!*a2)
  {
    *a3 = a2;
    return a2;
  }

  uint64_t v12 = v14;
  *a3 = v14;
  if (v12) {
    return v12 + 1;
  }
  __break(0x5516u);
  return result;
}

void *sub_100010D18(uint64_t a1, void *a2, uint64_t a3)
{
  unsigned int v5 = (void *)(a1 + 8);
  uint64_t v4 = *(void **)(a1 + 8);
  if (v4)
  {
    uint64_t v7 = a1 + 24;
    do
    {
      while (1)
      {
        uint64_t v8 = v4;
        uint64_t v9 = (uint64_t)(v4 + 4);
        uint64_t v4 = (void *)*v8;
        unsigned int v5 = v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }

      if (!sub_100010DB4(v7, v9, a3)) {
        break;
      }
      unsigned int v5 = v8 + 1;
      uint64_t v4 = (void *)v8[1];
    }

    while (v4);
  }

  else
  {
    uint64_t v8 = (void *)(a1 + 8);
  }

BOOL sub_100010DB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  BOOL v3 = *(_DWORD *)a2 < *(_DWORD *)a3;
  if (*(_DWORD *)a2 == *(_DWORD *)a3)
  {
    if (*(_DWORD *)a2 != 1) {
      return 0LL;
    }
    unsigned int v5 = sub_100010E14((_BYTE *)(a2 + 4));
    return *(_DWORD *)v5 < *(_DWORD *)sub_100010E14((_BYTE *)(a3 + 4));
  }

  return v3;
}

_BYTE *sub_100010E14(_BYTE *a1)
{
  if (!*a1) {
    sub_1001FC280();
  }
  return a1 + 4;
}

uint64_t *sub_100010E34(uint64_t *a1, uint64_t a2)
{
  *a1 = a2;
  a1[1] = 0LL;
  sub_100010E9C(&v5, a2);
  uint64_t v3 = a1[1];
  a1[1] = v5;
  uint64_t v5 = v3;
  sub_10000F9EC(&v5);
  return a1;
}

void sub_100010E88(_Unwind_Exception *a1)
{
}

void *sub_100010E9C(void *a1, uint64_t a2)
{
  *a1 = 0LL;
  uint64_t v4 = operator new(0x18uLL);
  v4[1] = 0x100000001LL;
  *uint64_t v4 = &off_1002ADDB8;
  v4[2] = a2;
  *a1 = v4;
  return a1;
}

void sub_100010EE8(void *a1)
{
}

void sub_100010EFC(_Unwind_Exception *a1)
{
}

void sub_100010F10(uint64_t *a1)
{
  if (a1)
  {
    sub_10000D0D4((uint64_t)(a1 + 3));
    sub_1000109B4(a1);
    operator delete(a1);
  }

void sub_100010F50(uint64_t a1)
{
  uint64_t v1 = *(uint64_t **)(a1 + 16);
  if (v1)
  {
    sub_10000D0D4((uint64_t)(v1 + 3));
    sub_1000109B4(v1);
    operator delete(v1);
  }

uint64_t sub_100010F90()
{
  return 0LL;
}

uint64_t sub_100010F98()
{
  return 0LL;
}

uint64_t sub_100010FA0()
{
  return 0LL;
}

uint64_t *sub_100010FA8(uint64_t *a1, void *a2)
{
  uint64_t v4 = a1[4];
  uint64_t result = a1 + 4;
  if (v4)
  {
    uint64_t v6 = (uint64_t *)sub_10000FB30(result);
    uint64_t result = (uint64_t *)sub_1000110BC(v6);
    if ((_DWORD)result) {
      return sub_100011120(a1, a2);
    }
  }

  return result;
}

uint64_t sub_100010FF0(uint64_t a1, void *a2, uint64_t **a3)
{
  uint64_t v6 = (uint64_t **)(a1 + 24);
  uint64_t v7 = sub_100011390(a1 + 24, (uint64_t)a2);
  uint64_t v8 = v7;
  uint64_t v9 = v8[6];
  uint64_t v10 = *a3;
  if ((uint64_t *)v9 == *a3)
  {
    uint64_t v11 = *(void *)(v9 + 8);
    else {
      *sub_100011318(v6, a2) = v11;
    }
    uint64_t v10 = *a3;
  }

  return sub_10001134C(a1, v10);
}

BOOL sub_1000110BC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v1 = a1[1];
  BOOL v3 = *a1 != v1;
  if (*a1 != v1)
  {
    do
    {
      v2 += 24LL;
      uint64_t v5 = a1[1];
      BOOL v3 = v2 != v5;
    }

    while (v2 != v5);
  }

  return v3;
}

uint64_t *sub_100011120(uint64_t *result, void *a2)
{
  if (*((_BYTE *)result + 24))
  {
    *((_BYTE *)result + 24) = 0;
    return sub_100011210(result, a2);
  }

  return result;
}

uint64_t sub_100011134(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = a2;
  switch(*(_DWORD *)a1 ^ (*(int *)a1 >> 31))
  {
    case 0:
    case 1:
      uint64_t v2 = *(void *)(a1 + 16);
      if (v2)
      {
        unsigned int v3 = atomic_load((unsigned int *)(v2 + 8));
        uint64_t result = v3 == 0;
      }

      else
      {
        uint64_t result = 1LL;
      }

      break;
    case 2:
      uint64_t result = sub_1000111B0((uint64_t)&v5, (uint64_t *)(a1 + 8));
      break;
    default:
      sub_10000F104();
  }

  return result;
}

uint64_t sub_1000111B0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = sub_1000111D0(a2);
  return (*(uint64_t (**)(uint64_t))(*(void *)v2 + 24LL))(v2);
}

uint64_t sub_1000111D0(uint64_t *a1)
{
  uint64_t result = *a1;
  if (!result) {
    __assert_rtn("operator->", "scoped_ptr.hpp", 105, "px != 0");
  }
  return result;
}

uint64_t *sub_100011210(uint64_t *result, void *a2)
{
  int v2 = *((_DWORD *)result + 7);
  if (!v2) {
    sub_1001FC118();
  }
  int v3 = v2 - 1;
  *((_DWORD *)result + 7) = v3;
  if (!v3)
  {
    (*(void (**)(__int128 *__return_ptr))(*result + 40))(&v5);
    sub_10000FBE8(a2, &v5);
    return sub_10000F9EC((uint64_t *)&v5 + 1);
  }

  return result;
}

void sub_100011274(_Unwind_Exception *a1)
{
}

BOOL sub_100011288(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1 + 56;
  return !sub_100010DB4(a1 + 56, a2, a3) && !sub_100010DB4(v5, a3, a2);
}

uint64_t sub_1000112DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000113FC(a1 + 24, a2);
  return sub_100010820(a1, (uint64_t)&v4);
}

void *sub_100011318(uint64_t **a1, void *a2)
{
  int v3 = a2;
  return sub_100011468(a1, (uint64_t)a2, (uint64_t)&unk_1002228DC, &v3) + 6;
}

uint64_t sub_10001134C(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = a2[1];
  *(void *)(v2 + 8) = v3;
  *(void *)a2[1] = v2;
  uint64_t v4 = *(void *)(result + 16);
  BOOL v5 = v4 != 0;
  uint64_t v6 = v4 - 1;
  if (v5)
  {
    *(void *)(result + 16) = v6;
    sub_100010A14(result, a2);
    return v3;
  }

  else
  {
    __break(0x5515u);
  }

  return result;
}

void *sub_100011390(uint64_t a1, uint64_t a2)
{
  return sub_10001139C(a1, a2, *(void **)(a1 + 8), (void *)(a1 + 8));
}

void *sub_10001139C(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  if (a3)
  {
    BOOL v5 = a3;
    uint64_t v7 = a1 + 24;
    do
    {
      BOOL v8 = sub_100010DB4(v7, (uint64_t)(v5 + 4), a2);
      uint64_t v9 = v5 + 1;
      if (!v8)
      {
        uint64_t v9 = v5;
        a4 = v5;
      }

      BOOL v5 = (void *)*v9;
    }

    while (*v9);
  }

  return a4;
}

void *sub_1000113FC(uint64_t a1, uint64_t a2)
{
  return sub_100011408(a1, a2, *(void **)(a1 + 8), (void *)(a1 + 8));
}

void *sub_100011408(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  if (a3)
  {
    BOOL v5 = a3;
    uint64_t v7 = a1 + 24;
    do
    {
      BOOL v8 = sub_100010DB4(v7, a2, (uint64_t)(v5 + 4));
      uint64_t v9 = v5 + 1;
      if (v8)
      {
        uint64_t v9 = v5;
        a4 = v5;
      }

      BOOL v5 = (void *)*v9;
    }

    while (*v9);
  }

  return a4;
}

void *sub_100011468(uint64_t **a1, uint64_t a2, uint64_t a3, void **a4)
{
  uint64_t v6 = sub_100010D18((uint64_t)a1, &v11, a2);
  uint64_t v7 = (void *)*v6;
  if (!*v6)
  {
    BOOL v8 = (void **)v6;
    sub_100011510((uint64_t)a1, a4, (uint64_t)v10);
    sub_10000AF70(a1, v11, v8, (void *)v10[0]);
    uint64_t v7 = v10[0];
    v10[0] = 0LL;
    sub_10000D0A8(v10, 0LL);
  }

  return v7;
}

void *sub_100011510@<X0>(uint64_t a1@<X0>, void **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t result = operator new(0x38uLL);
  *(void *)a3 = result;
  *(void *)(a3 + 8) = v5;
  int v7 = *((_DWORD *)*a2 + 2);
  result[4] = **a2;
  *((_DWORD *)result + 10) = v7;
  result[6] = 0LL;
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

uint64_t sub_100011568(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_100011598(a1, a2);
  operator delete(a2);
  return v3;
}

uint64_t sub_100011598(uint64_t a1, uint64_t *a2)
{
  BOOL v8 = a2;
  uint64_t result = sub_10000B338((uint64_t)&v8);
  uint64_t v5 = *(void *)(a1 + 16);
  BOOL v6 = v5 != 0;
  uint64_t v7 = v5 - 1;
  if (v6)
  {
    *(void *)(a1 + 16) = v7;
    sub_100011604(*(uint64_t **)(a1 + 8), a2);
    return (uint64_t)v8;
  }

  else
  {
    __break(0x5515u);
  }

  return result;
}

uint64_t *sub_100011604(uint64_t *a1, uint64_t *a2)
{
  uint64_t result = a2;
  if (*a2)
  {
    uint64_t result = a2;
    if (a2[1]) {
      uint64_t result = sub_100011890(a2);
    }
    uint64_t v5 = *result;
    if (*result) {
      goto LABEL_6;
    }
  }

  uint64_t v5 = result[1];
  if (v5)
  {
LABEL_6:
    int v6 = 0;
    *(void *)(v5 + 16) = result[2];
  }

  else
  {
    int v6 = 1;
  }

  uint64_t v7 = (uint64_t *)result[2];
  uint64_t v8 = *v7;
  if ((uint64_t *)*v7 == result)
  {
    *uint64_t v7 = v5;
    if (result == a1)
    {
      uint64_t v8 = 0LL;
      a1 = (uint64_t *)v5;
    }

    else
    {
      uint64_t v8 = v7[1];
    }
  }

  else
  {
    v7[1] = v5;
  }

  int v9 = *((unsigned __int8 *)result + 24);
  if (result != a2)
  {
    uint64_t v10 = a2[2];
    result[2] = v10;
    *(void *)(v10 + 8LL * (*(void *)a2[2] != (void)a2)) = result;
    uint64_t v12 = *a2;
    uint64_t v11 = a2[1];
    *(void *)(v12 + 16) = result;
    *uint64_t result = v12;
    result[1] = v11;
    if (v11) {
      *(void *)(v11 + 16) = result;
    }
    *((_BYTE *)result + 24) = *((_BYTE *)a2 + 24);
    if (a1 == a2) {
      a1 = result;
    }
  }

  if (v9 && a1)
  {
    if (!v6)
    {
LABEL_51:
      *(_BYTE *)(v5 + 24) = 1;
      return result;
    }

    while (1)
    {
      uint64_t result = *(uint64_t **)(v8 + 16);
      if (*result == v8)
      {
        if (!*(_BYTE *)(v8 + 24))
        {
          *(_BYTE *)(v8 + 24) = 1;
          *((_BYTE *)result + 24) = 0;
          uint64_t result = sub_10000B184(result);
          __int128 v15 = *(uint64_t **)(v8 + 8);
          if (a1 == v15) {
            a1 = (uint64_t *)v8;
          }
          uint64_t v8 = *v15;
        }

        uint64_t v16 = *(void *)v8;
        if (*(void *)v8 && !*(_BYTE *)(v16 + 24)) {
          goto LABEL_54;
        }
        uint64_t v17 = *(void *)(v8 + 8);
        if (v17 && !*(_BYTE *)(v17 + 24))
        {
          if (!v16) {
            goto LABEL_55;
          }
LABEL_54:
          if (*(_BYTE *)(v16 + 24))
          {
LABEL_55:
            *(_BYTE *)(*(void *)(v8 + 8) + 24LL) = 1;
            *(_BYTE *)(v8 + 24) = 0;
            sub_10000B148(v8);
            uint64_t v8 = *(void *)(v8 + 16);
          }

          uint64_t v22 = *(void *)(v8 + 16);
          *(_BYTE *)(v8 + 24) = *(_BYTE *)(v22 + 24);
          *(_BYTE *)(v22 + 24) = 1;
          *(_BYTE *)(*(void *)v8 + 24LL) = 1;
          return sub_10000B184((void *)v22);
        }

        *(_BYTE *)(v8 + 24) = 0;
        uint64_t v5 = *(void *)(v8 + 16);
        if (*(_BYTE *)(v5 + 24)) {
          BOOL v18 = v5 == (void)a1;
        }
        else {
          BOOL v18 = 1;
        }
        if (v18) {
          goto LABEL_51;
        }
      }

      else
      {
        if (!*(_BYTE *)(v8 + 24))
        {
          *(_BYTE *)(v8 + 24) = 1;
          *((_BYTE *)result + 24) = 0;
          uint64_t result = (uint64_t *)sub_10000B148((uint64_t)result);
          uint64_t v8 = *(void *)(*(void *)v8 + 8LL);
        }

        uint64_t v13 = *(void *)v8;
        if (*(void *)v8 && !*(_BYTE *)(v13 + 24) || (uint64_t v14 = *(void *)(v8 + 8)) != 0 && !*(_BYTE *)(v14 + 24))
        {
          uint64_t v19 = *(void *)(v8 + 8);
          if (!v19 || *(_BYTE *)(v19 + 24))
          {
            *(_BYTE *)(v13 + 24) = 1;
            *(_BYTE *)(v8 + 24) = 0;
            sub_10000B184((void *)v8);
            uint64_t v8 = *(void *)(v8 + 16);
          }

          uint64_t v21 = *(void *)(v8 + 8);
          uint64_t v20 = *(void *)(v8 + 16);
          *(_BYTE *)(v8 + 24) = *(_BYTE *)(v20 + 24);
          *(_BYTE *)(v20 + 24) = 1;
          *(_BYTE *)(v21 + 24) = 1;
          return (uint64_t *)sub_10000B148(v20);
        }

        *(_BYTE *)(v8 + 24) = 0;
        uint64_t v5 = *(void *)(v8 + 16);
        if ((uint64_t *)v5 == a1)
        {
          uint64_t v5 = (uint64_t)a1;
          goto LABEL_51;
        }

        if (!*(_BYTE *)(v5 + 24)) {
          goto LABEL_51;
        }
      }

      uint64_t v8 = *(void *)(*(void *)(v5 + 16) + 8LL * (**(void **)(v5 + 16) == v5));
    }
  }

  return result;
}

void *sub_100011890(void *a1)
{
  uint64_t v1 = (void *)a1[1];
  if (v1)
  {
    do
    {
      uint64_t result = v1;
      uint64_t v1 = (void *)*v1;
    }

    while (v1);
  }

  else
  {
    uint64_t v3 = a1;
    do
    {
      uint64_t result = (void *)v3[2];
      BOOL v4 = *result == (void)v3;
      uint64_t v3 = result;
    }

    while (!v4);
  }

  return result;
}

uint64_t sub_1000118C4(uint64_t a1, uint64_t a2, void *a3)
{
  *(void *)(a1 + 8) = 0LL;
  *(void *)(a1 + 16) = 0LL;
  *(_BYTE *)(a1 + 24) = 1;
  *(_DWORD *)(a1 + 28) = 1;
  *(void *)a1 = off_1002ADE18;
  int v6 = operator new(0x38uLL);
  sub_100011AD4(v6, (_DWORD **)a2);
  void v6[3] = 0LL;
  sub_100007640((uint64_t)(v6 + 3), (uint64_t *)(a2 + 24));
  sub_100011E4C((uint64_t *)(a1 + 32), (uint64_t)v6);
  uint64_t v7 = a3[1];
  *(void *)(a1 + 48) = *a3;
  *(void *)(a1 + 56) = v7;
  if (v7)
  {
    uint64_t v8 = (unsigned int *)(v7 + 8);
    do
      unsigned int v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }

  *(_DWORD *)(a1 + 64) = 0;
  *(_BYTE *)(a1 + 68) = 0;
  return a1;
}

void sub_100011970(_Unwind_Exception *a1, uint64_t a2, ...)
{
  *(void *)uint64_t v2 = off_1002ADE80;
  sub_10000EF74((unsigned int **)(v2 + 16));
  _Unwind_Resume(a1);
}

void sub_1000119B8(uint64_t a1)
{
  uint64_t v1 = (void *)sub_100011FD0(a1);
  operator delete(v1);
}

uint64_t sub_1000119CC(uint64_t a1)
{
  uint64_t v2 = (pthread_mutex_t *)sub_10000F72C((uint64_t *)(a1 + 48));
  sub_100010030(v5, v2);
  sub_10001201C((uint64_t *)a1, v5);
  uint64_t v3 = *(unsigned __int8 *)(a1 + 24);
  sub_10000F788(&v6);
  sub_10000F8D8(v5);
  return v3;
}

void sub_100011A5C(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_100011A80(uint64_t a1)
{
  uint64_t v1 = (pthread_mutex_t *)sub_100012350((uint64_t *)(a1 + 48));
  return sub_10000F76C(v1);
}

uint64_t sub_100011A98(uint64_t a1)
{
  uint64_t v1 = (pthread_mutex_t *)sub_100012350((uint64_t *)(a1 + 48));
  return sub_10000F7B4(v1);
}

uint64_t *sub_100011AB0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v2 = (__int128 *)(a1 + 32);
  *a2 = v4;
  a2[1] = v3;
  if (v3)
  {
    uint64_t v5 = (unsigned int *)(v3 + 8);
    do
      unsigned int v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }

  return sub_100012390(v2);
}

void *sub_100011AD4(void *a1, _DWORD **a2)
{
  *a1 = 0LL;
  a1[1] = 0LL;
  a1[2] = 0LL;
  sub_100011B1C(a1, *a2, a2[1], 0xAAAAAAAAAAAAAAABLL * (((char *)a2[1] - (char *)*a2) >> 3));
  return a1;
}

void *sub_100011B1C(void *result, _DWORD *a2, _DWORD *a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = (uint64_t)result;
    sub_100011B90(result, a4);
    return (void *)sub_100011BE4(v6, a2, a3);
  }

  return result;
}

void sub_100011B7C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
}

char *sub_100011B90(void *a1, unint64_t a2)
{
  if (a2 >= 0xAAAAAAAAAAAAAABLL) {
    sub_10000CCF0();
  }
  uint64_t result = (char *)sub_100011C1C((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[24 * a2];
  return result;
}

uint64_t sub_100011BE4(uint64_t a1, _DWORD *a2, _DWORD *a3)
{
  uint64_t result = sub_100011C48(a1 + 16, a2, a3, *(void *)(a1 + 8));
  *(void *)(a1 + 8) = result;
  return result;
}

void sub_100011C14(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void *sub_100011C1C(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0xAAAAAAAAAAAAAABLL) {
    sub_10000F12C();
  }
  return operator new(24 * a2);
}

uint64_t sub_100011C48(uint64_t a1, _DWORD *a2, _DWORD *a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v10 = a4;
  uint64_t v11 = a4;
  v8[0] = a1;
  v8[1] = &v10;
  v8[2] = &v11;
  char v9 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      sub_100011CE8(v4, v6);
      v6 += 6;
      uint64_t v4 = v11 + 24;
      v11 += 24LL;
    }

    while (v6 != a3);
  }

  char v9 = 1;
  sub_100011DDC((uint64_t)v8);
  return v4;
}

void sub_100011CD4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_100011CE8(uint64_t a1, _DWORD *a2)
{
  uint64_t v7 = (uint64_t *)(a1 + 8);
  int v4 = *a2;
  uint64_t v3 = (uint64_t *)(a2 + 2);
  switch(v4 ^ (v4 >> 31))
  {
    case 0:
    case 1:
      sub_100011D80(&v7, v3);
      break;
    case 2:
      sub_100011DA8(&v7, v3);
      break;
    default:
      sub_10000F104();
  }

  *(_DWORD *)a1 = *a2 ^ ((int)*a2 >> 31);
  return a1;
}

void **sub_100011D80(void **result, void *a2)
{
  uint64_t v2 = *result;
  uint64_t v3 = a2[1];
  void *v2 = *a2;
  v2[1] = v3;
  if (v3)
  {
    int v4 = (unsigned int *)(v3 + 12);
    do
      unsigned int v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }

  return result;
}

uint64_t sub_100011DA8(uint64_t **a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = sub_1000111D0(a2);
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 32LL))(v3);
  uint64_t *v2 = result;
  return result;
}

uint64_t sub_100011DDC(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24)) {
    sub_100011E10((unsigned int **)a1);
  }
  return a1;
}

unsigned int **sub_100011E10(unsigned int **result)
{
  uint64_t v1 = *(void *)result[2];
  uint64_t v2 = *(void *)result[1];
  while (v1 != v2)
  {
    v1 -= 24LL;
    uint64_t result = sub_10000F0A8(v1);
  }

  return result;
}

uint64_t *sub_100011E4C(uint64_t *a1, uint64_t a2)
{
  *a1 = a2;
  a1[1] = 0LL;
  sub_100011EB4(&v5, a2);
  uint64_t v3 = a1[1];
  a1[1] = v5;
  uint64_t v5 = v3;
  sub_10000F9EC(&v5);
  return a1;
}

void sub_100011EA0(_Unwind_Exception *a1)
{
}

void *sub_100011EB4(void *a1, uint64_t a2)
{
  *a1 = 0LL;
  int v4 = operator new(0x18uLL);
  v4[1] = 0x100000001LL;
  *int v4 = &off_1002ADEC0;
  v4[2] = a2;
  *a1 = v4;
  return a1;
}

void sub_100011F00(void *a1)
{
}

void sub_100011F14(_Unwind_Exception *a1)
{
}

void sub_100011F28(uint64_t a1)
{
  if (a1)
  {
    sub_10000EFC4((void *)(a1 + 24));
    uint64_t v2 = (void **)a1;
    sub_10000EFEC(&v2);
    operator delete((void *)a1);
  }

void sub_100011F74(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_10000EFC4((void *)(v1 + 24));
    uint64_t v2 = (void **)v1;
    sub_10000EFEC(&v2);
    operator delete((void *)v1);
  }

uint64_t sub_100011FB8()
{
  return 0LL;
}

uint64_t sub_100011FC0()
{
  return 0LL;
}

uint64_t sub_100011FC8()
{
  return 0LL;
}

uint64_t sub_100011FD0(uint64_t a1)
{
  *(void *)a1 = off_1002ADE18;
  sub_10000F9EC((uint64_t *)(a1 + 56));
  sub_10000F9EC((uint64_t *)(a1 + 40));
  *(void *)a1 = off_1002ADE80;
  sub_10000EF74((unsigned int **)(a1 + 16));
  return a1;
}

uint64_t *sub_10001201C(uint64_t *result, void *a2)
{
  uint64_t v2 = result + 4;
  if (result[4])
  {
    int v4 = result;
    for (uint64_t i = *(_DWORD **)sub_10000FB30(result + 4); ; i += 6)
    {
      uint64_t result = (uint64_t *)sub_10000FB30(v2);
      if (i == (_DWORD *)result[1]) {
        break;
      }
      sub_100012108(i, (uint64_t)v7);
      if (sub_100011134((uint64_t)i, (uint64_t)&v6))
      {
        sub_100011120(v4, a2);
        return sub_1000122FC((uint64_t)v7);
      }

      sub_1000122FC((uint64_t)v7);
    }
  }

  return result;
}

void sub_1000120E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_100012108@<X0>(_DWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = (uint64_t *)(a1 + 2);
  switch(*a1 ^ ((int)*a1 >> 31))
  {
    case 0:
      uint64_t result = (uint64_t)sub_10001218C(a2);
      break;
    case 1:
      uint64_t result = (uint64_t)sub_1000121BC(v2, a2);
      break;
    case 2:
      uint64_t result = sub_100012270(v2, a2);
      break;
    default:
      sub_10000F104();
  }

  return result;
}

uint64_t *sub_10001218C@<X0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 8) = 0LL;
  *(void *)(a1 + 16) = 0LL;
  uint64_t v2 = 0LL;
  *(_DWORD *)a1 = 0;
  return sub_10000F9EC(&v2);
}

uint64_t *sub_1000121BC@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  *(_OWORD *)(a2 + 8) = v4;
  __int128 v4 = 0uLL;
  *(_DWORD *)a2 = 0;
  return sub_10000F9EC((uint64_t *)&v4 + 1);
}

void *sub_100012204(void *result, void *a2)
{
  uint64_t v2 = a2[1];
  *uint64_t result = 0LL;
  result[1] = v2;
  if (v2)
  {
    uint64_t v3 = (unsigned int *)(v2 + 8);
    unsigned int v4 = *(_DWORD *)(v2 + 8);
    while (1)
    {
      if (!v4)
      {
        result[1] = 0LL;
        goto LABEL_13;
      }

      if (v4 == -1)
      {
        __break(0x5500u);
        return result;
      }

      unsigned int v5 = __ldxr(v3);
      if (v5 != v4) {
        break;
      }
      if (__stxr(v4 + 1, v3)) {
        goto LABEL_9;
      }
      char v6 = 1;
LABEL_10:
      unsigned int v4 = v5;
      if ((v6 & 1) != 0) {
        goto LABEL_13;
      }
    }

    __clrex();
LABEL_9:
    char v6 = 0;
    goto LABEL_10;
  }

LABEL_13:
  if (result[1]) {
    *uint64_t result = *a2;
  }
  return result;
}

  std::string::size_type v36 = 0LL;
  if ((*(_BYTE *)&has & 0x80) != 0)
  {
LABEL_5:
    __int16 v35 = 2654435761LL * self->_txBroadcast;
    if ((*(_WORD *)&has & 0x4000) != 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }

  unsigned int v5 = 0LL;
  if ((*(_WORD *)&self->_has & 0x100) != 0)
  {
LABEL_5:
    char v6 = 2654435761LL * self->_routerRoleCount;
    if ((has & 0x20) != 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }

  __break(0x5500u);
LABEL_14:
  __break(0x5512u);
  return result;
}

  uint64_t v7 = 0LL;
  if ((has & 2) == 0) {
    goto LABEL_14;
  }
LABEL_7:
  uint64_t v8 = 2654435761LL * self->_coexRxGrantedRequests;
  if ((has & 1) != 0)
  {
LABEL_8:
    char v9 = 2654435761LL * self->_coexRxDeniedRequests;
    goto LABEL_16;
  }

  char v6 = PBRepeatedUInt32NSArray(&self->_rxPacketCountHistograms);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
  [v3 setObject:v7 forKey:@"rx_packet_count_histogram"];

  if ((*(_WORD *)&self->_has & 0x80) != 0)
  {
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_rxErrPercentage));
    [v3 setObject:v8 forKey:@"rx_err_percentage"];
  }

  return v3;
}

  if (self->_rxPacketCountHistograms.count)
  {
    char v6 = 0LL;
    do
    {
      PBDataWriterWriteUint32Field(v7, self->_rxPacketCountHistograms.list[v6], 12LL);
      unsigned int v4 = v7;
      ++v6;
    }

    while (v6 < self->_rxPacketCountHistograms.count);
  }

  if ((*(_WORD *)&self->_has & 0x80) != 0)
  {
    PBDataWriterWriteUint32Field(v7, self->_rxErrPercentage, 13LL);
    unsigned int v4 = v7;
  }
}

  char v9 = v4;
  if (-[AWDCountersMacRxS rxPacketCountHistogramsCount](self, "rxPacketCountHistogramsCount"))
  {
    [v9 clearRxPacketCountHistograms];
    char v6 = -[AWDCountersMacRxS rxPacketCountHistogramsCount](self, "rxPacketCountHistogramsCount");
    if (v6)
    {
      uint64_t v7 = v6;
      for (uint64_t i = 0LL; i != v7; ++i)
        objc_msgSend( v9,  "addRxPacketCountHistogram:",  -[AWDCountersMacRxS rxPacketCountHistogramAtIndex:](self, "rxPacketCountHistogramAtIndex:", i));
    }
  }

  if ((*(_WORD *)&self->_has & 0x80) != 0)
  {
    *((_DWORD *)v9 + 15) = self->_rxErrPercentage;
    *((_WORD *)v9 + 40) |= 0x80u;
  }
}

  PBRepeatedUInt32Copy(v4 + 2, &self->_rxPacketCountHistograms);
  if ((*(_WORD *)&self->_has & 0x80) != 0)
  {
    v5[15] = self->_rxErrPercentage;
    *((_WORD *)v5 + 40) |= 0x80u;
  }

  return v5;
}

  char v9 = (unsigned int *)v4;
  char v6 = (char *)[v4 rxPacketCountHistogramsCount];
  if (v6)
  {
    uint64_t v7 = v6;
    for (uint64_t i = 0LL; i != v7; ++i)
      -[AWDCountersMacRxS addRxPacketCountHistogram:]( self,  "addRxPacketCountHistogram:",  [v9 rxPacketCountHistogramAtIndex:i]);
  }

  if ((v9[20] & 0x80) != 0)
  {
    self->_rxErrPercentage = v9[15];
    *(_WORD *)&self->_has |= 0x80u;
  }
}

    uint64_t v8 = 0;
  }

  if ((size & 0x80) != 0)
  {
    p_int size = &v1[1].__r_.__value_.__l.__size_;
    uint64_t v8 = v1[1].__r_.__value_.__l.__size_ + v1->__r_.__value_.__l.__size_;
    v1[1].__r_.__value_.__l.__size_ = v8;
    if (v8 >= v3)
    {
LABEL_61:
      *v1->__r_.__value_.__l.__data_ = 0;
      v1->__r_.__value_.__l.__size_ = 0LL;
      return;
    }
  }

  else
  {
    p_int size = &v1[1].__r_.__value_.__l.__size_;
    uint64_t v8 = v1[1].__r_.__value_.__l.__size_ + size;
    v1[1].__r_.__value_.__l.__size_ = v8;
    if (v8 >= v3)
    {
LABEL_15:
      v1->__r_.__value_.__s.__data_[0] = 0;
      v1->__r_.__value_.__s.__size_ = 0;
      return;
    }
  }

  char v9 = data;
  if (data[23] < 0) {
    char v9 = *(std::string::pointer *)data;
  }
  if (v9[v8] == 47)
  {
    uint64_t v21 = 0LL;
    if (data[23] < 0) {
      uint64_t data = *(std::string::pointer *)data;
    }
    uint64_t v10 = sub_10016EE08(data, v3, &v21);
    uint64_t v8 = *p_size;
    if (*p_size == v10)
    {
      if ((char)v1->__r_.__value_.__s.__size_ < 0)
      {
        if (v1->__r_.__value_.__l.__size_ == v21)
        {
          v1->__r_.__value_.__l.__size_ = 1LL;
          uint64_t v1 = (std::string *)v1->__r_.__value_.__r.__words[0];
          goto LABEL_28;
        }
      }

      else if (v21 == v1->__r_.__value_.__s.__size_)
      {
        v1->__r_.__value_.__s.__size_ = 1;
LABEL_28:
        LOWORD(v1->__r_.__value_.__l.__data_) = 47;
        return;
      }
    }

    for (data = v1[1].__r_.__value_.__l.__data_; v3 != v8; *p_int size = ++v8)
    {
      uint64_t v11 = data;
      if (data[23] < 0) {
        uint64_t v11 = *(std::string::pointer *)data;
      }
      if (v11[v8] != 47) {
        goto LABEL_46;
      }
    }

    uint64_t v12 = v3 - 1 >= v10 ? v10 : v3 - 1;
    uint64_t v13 = data[23] >= 0 ? data : *(std::string::pointer *)data;
    uint64_t v14 = v13 - 2;
    __int128 v15 = v3;
    while (1)
    {
      uint64_t v16 = v15 - 1;
      if (v15 - 1 <= v10) {
        break;
      }
      uint64_t v17 = v14[v15--];
      if (v17 != 47) {
        goto LABEL_45;
      }
    }

    uint64_t v16 = v12;
LABEL_45:
    uint64_t v8 = v3;
    if (v16 != v10)
    {
      v1[1].__r_.__value_.__l.__size_ = v3 - 1;
      goto LABEL_61;
    }
  }

  uint64_t v19 = sub_1001768B4(1);
  uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue(v19);
  if (os_log_type_enabled((os_log_t)v20, OS_LOG_TYPE_ERROR)) {
    sub_10019EF90();
  }
  uint64_t v21 = 0LL;
LABEL_16:

  return v21;
}

    return;
  }

  if (!-[ThreadDiagnosticsManagerInstance shouldRunDiagnostics](self, "shouldRunDiagnostics"))
  {
    uint64_t v20 = sub_1000160F4("com.apple.wpantund.tdm", "default");
    uint64_t v17 = (os_log_s *)objc_claimAutoreleasedReturnValue(v20);
    if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)std::string buf = 0;
      BOOL v18 = "TDM: handlePeriodicTimer return here as additional checks failed to run TDM on this device (primary resident"
            " or extaddr not in the list)";
      uint64_t v19 = buf;
      goto LABEL_12;
    }

    goto LABEL_13;
  }

  uint64_t v3 = sub_1001B103C();
  NetworkDiagnosticsManager::cleanup((uint64_t)v3, 0, 1);
  unsigned int v4 = sub_1001B103C();
  NetworkDiagnosticsManager::initialize(v4);
  if (!-[ThreadDiagnosticsManagerInstance updateNCPProperties](self, "updateNCPProperties"))
  {
    unsigned int v5 = sub_1000160F4("com.apple.wpantund.tdm", "default");
    char v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_1001B4D1C(v6, v7, v8, v9, v10, v11, v12, v13);
    }
  }

  -[ThreadDiagnosticsManagerInstance setupCleanupTimer](self, "setupCleanupTimer");
  uint64_t v14 = sub_1001B103C();
  NetworkDiagnosticsManager::startDiagnostics(v14);
  __int128 v15 = objc_initWeak(&location, self);
  -[ThreadDiagnosticsManagerInstance send_nwdiagnostics_get_req](self, "send_nwdiagnostics_get_req");

  objc_destroyWeak(&location);
}

uint64_t sub_100012270@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3 = sub_1000111D0(a1);
  (*(void (**)(uint64_t *__return_ptr))(*(void *)v3 + 16LL))(&v5);
  *(void *)(a2 + 8) = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 16LL))(v5);
  *(_DWORD *)a2 = 1;
  uint64_t result = v5;
  if (v5) {
    return (*(uint64_t (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
  }
  return result;
}

void sub_1000122DC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10) {
    (*(void (**)(uint64_t))(*(void *)a10 + 8LL))(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_1000122FC(uint64_t a1)
{
  int v1 = *(_DWORD *)a1 ^ (*(int *)a1 >> 31);
  if (v1 == 1)
  {
    uint64_t result = *(uint64_t **)(a1 + 8);
    if (result) {
      return (uint64_t *)(*(uint64_t (**)(uint64_t *))(*result + 8))(result);
    }
  }

  else
  {
    if (v1) {
      sub_10000F104();
    }
    return sub_10000F9EC((uint64_t *)(a1 + 16));
  }

  return result;
}

uint64_t sub_100012350(uint64_t *a1)
{
  uint64_t result = *a1;
  if (!result) {
    __assert_rtn("operator->", "shared_ptr.hpp", 786, "px != 0");
  }
  return result;
}

uint64_t *sub_100012390(__int128 *a1)
{
  __int128 v1 = *a1;
  *(void *)a1 = 0LL;
  *((void *)a1 + 1) = 0LL;
  *((void *)&v3 + 1) = *((void *)&v1 + 1);
  return sub_10000F9EC((uint64_t *)&v3 + 1);
}

uint64_t *sub_1000123C4(uint64_t *a1, uint64_t a2)
{
  *a1 = a2;
  a1[1] = 0LL;
  sub_10001242C(&v5, a2);
  uint64_t v3 = a1[1];
  a1[1] = v5;
  uint64_t v5 = v3;
  sub_10000F9EC(&v5);
  return a1;
}

void sub_100012418(_Unwind_Exception *a1)
{
}

void *sub_10001242C(void *a1, uint64_t a2)
{
  *a1 = 0LL;
  unsigned int v4 = operator new(0x18uLL);
  v4[1] = 0x100000001LL;
  *unsigned int v4 = &off_1002ADF20;
  v4[2] = a2;
  *a1 = v4;
  return a1;
}

void sub_100012478(void *a1)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  __cxa_rethrow();
}

void sub_100012498(_Unwind_Exception *a1)
{
}

uint64_t sub_1000124B4(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 16);
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }
  return result;
}

uint64_t sub_1000124CC()
{
  return 0LL;
}

uint64_t sub_1000124D4()
{
  return 0LL;
}

uint64_t sub_1000124DC()
{
  return 0LL;
}

_OWORD *sub_1000124E4(uint64_t a1, uint64_t **a2, uint64_t a3, void *a4)
{
  uint64_t v12 = *a2;
  uint64_t v8 = (uint64_t *)sub_100010820(a1, (uint64_t)&v12);
  char v9 = sub_1000125C8(a1, v8, a4);
  uint64_t v10 = sub_100011390(a1 + 24, a3);
  if ((void *)(a1 + 32) == v10
    || (uint64_t result = (_OWORD *)sub_100011288(a1, (uint64_t)(v10 + 4), a3), (result & 1) == 0))
  {
    uint64_t v12 = *(uint64_t **)a3;
    int v13 = *(_DWORD *)(a3 + 8);
    uint64_t v14 = v9;
    return sub_100012620((uint64_t **)(a1 + 24), (uint64_t)&v12, (uint64_t)&v12);
  }

  return result;
}

void *sub_1000125C8(uint64_t a1, uint64_t *a2, void *a3)
{
  uint64_t result = sub_1000108F4(a1, 0LL, 0LL, a3);
  uint64_t v6 = *a2;
  *(void *)(v6 + 8) = result;
  *uint64_t result = v6;
  *a2 = (uint64_t)result;
  result[1] = a2;
  uint64_t v7 = *(void *)(a1 + 16);
  BOOL v8 = __CFADD__(v7, 1LL);
  uint64_t v9 = v7 + 1;
  if (v8) {
    __break(0x5500u);
  }
  else {
    *(void *)(a1 + 16) = v9;
  }
  return result;
}

_OWORD *sub_100012620(uint64_t **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (void **)sub_100010D18((uint64_t)a1, &v11, a2);
  uint64_t v6 = *v5;
  if (!*v5)
  {
    uint64_t v7 = v5;
    uint64_t v6 = operator new(0x38uLL);
    v9[1] = a1 + 1;
    v6[2] = *(_OWORD *)a3;
    *((void *)v6 + 6) = *(void *)(a3 + 16);
    char v10 = 1;
    sub_10000AF70(a1, v11, (void **)v7, v6);
    v9[0] = 0LL;
    sub_10000D0A8(v9, 0LL);
  }

  return v6;
}

void *sub_1000126D0(void *a1, uint64_t a2)
{
  *a1 = 0LL;
  a1[1] = 0LL;
  a1[2] = 0LL;
  a1[3] = 0LL;
  sub_100012724((uint64_t)a1, a2);
  return a1;
}

void sub_100012704( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10)
{
  a10 = (void **)v10;
  sub_10000EFEC(&a10);
  _Unwind_Resume(a1);
}

uint64_t *sub_100012724(uint64_t a1, uint64_t a2)
{
  __int128 v3 = *(_OWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  return sub_100012758((uint64_t *)(a1 + 24), &v3);
}

uint64_t *sub_100012758(uint64_t *a1, __int128 *a2)
{
  __int128 v5 = *a2;
  uint64_t v6 = *((void *)a2 + 2);
  uint64_t v4 = (uint64_t)off_1002ADF70 + 1;
  sub_1000127C8(&v4, a1);
  sub_10000EFC4(&v4);
  return a1;
}

void sub_1000127B4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t *sub_1000127C8(uint64_t *result, uint64_t *a2)
{
  if (a2 != result)
  {
    __int128 v3 = result;
    v4[0] = 0LL;
    sub_100012948(v4, result);
    sub_100012948(v3, a2);
    sub_100012948(a2, v4);
    return sub_10000EFC4(v4);
  }

  return result;
}

void sub_100012828( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_10001283C(uint64_t result, uint64_t a2, unsigned int a3)
{
  if (a3 == 4) {
    goto LABEL_2;
  }
  uint64_t v4 = result;
  if (a3 > 1)
  {
    if (a3 != 2)
    {
      if (a3 != 3)
      {
LABEL_2:
        *(_WORD *)(a2 + 8) = 0;
        return result;
      }

      uint64_t result = *(void *)(*(void *)a2 + 8LL) & 0x7FFFFFFFFFFFFFFFLL;
      if (result == ((unint64_t)"N5boost3_bi6bind_tIvNS_4_mfi3mf2Iv23MulticastRoutingManagerRKNSt3__112basic_stri"
                                        "ngIcNS5_11char_traitsIcEENS5_9allocatorIcEEEERKNS_3anyEEENS0_5list3INS0_5valueIP"
                                        "S4_EENS_3argILi1EEENSM_ILi2EEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)
        || (uint64_t result = strcmp( (const char *)result,  (const char *)((unint64_t)"N5boost3_bi6bind_tIvNS_4_mfi3mf2Iv23MulticastRoutingManagerRKNSt 3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEERKN S_3anyEEENS0_5list3INS0_5valueIPS4_EENS_3argILi1EEENSM_ILi2EEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)),  !(_DWORD)result))
      {
        *(void *)a2 = v4;
      }

      else
      {
        *(void *)a2 = 0LL;
      }
    }
  }

  else
  {
    __int128 v5 = *(_OWORD *)result;
    *(void *)(a2 + 16) = *(void *)(result + 16);
    *(_OWORD *)a2 = v5;
  }

  return result;
}

uint64_t sub_1000128DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[0] = a2;
  v4[1] = a3;
  return sub_100012910((uint64_t *)(a1 + 16), a1, v4);
}

uint64_t sub_100012910(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  return sub_100012928(a2, *a1, *a3, a3[1]);
}

uint64_t sub_100012928(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(uint64_t (**)(void *, uint64_t, uint64_t))a1;
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = (void *)(a2 + (v5 >> 1));
  if ((v5 & 1) != 0) {
    uint64_t v4 = *(uint64_t (**)(void *, uint64_t, uint64_t))(*v6 + v4);
  }
  return v4(v6, a3, a4);
}

uint64_t *sub_100012948(uint64_t *result, uint64_t *a2)
{
  if (a2 != result)
  {
    uint64_t v3 = *a2;
    if (*a2)
    {
      *uint64_t result = v3;
      if ((v3 & 1) != 0)
      {
        __int128 v4 = *(_OWORD *)(a2 + 1);
        result[3] = a2[3];
        *(_OWORD *)(result + 1) = v4;
      }

      else
      {
        uint64_t result = (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v3 & 0xFFFFFFFFFFFFFFFELL))( a2 + 1,  result + 1,  1LL);
      }

      *a2 = 0LL;
    }

    else
    {
      return sub_100006EA4(result);
    }
  }

  return result;
}

void sub_1000129BC(void *a1)
{
  void *v1 = 0LL;
  __cxa_rethrow();
}

void sub_1000129CC(_Unwind_Exception *a1)
{
}

  ;
}

  ;
}

void sub_100012A00( void *a1, int a2, int a3, const char *a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint8_t buf)
{
}

void *sub_100012A14(void *a1, uint64_t a2, ...)
{
  return sub_100108154(a1, (uint64_t *)va);
}

void sub_100012A20(void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
}

  ;
}

void sub_100012A40(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p)
{
}

void sub_100012A48( void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

  ;
}

uint64_t sub_100012A60()
{
  for (int i = 0; ; ++i)
  {
    snprintf(__str, 0x100uLL, "/dev/bpf%d", i);
    uint64_t v1 = open(__str, 2, 0LL);
    uint64_t v2 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v2)
    {
      uint64_t v3 = v2;
      if (!sub_10015A058(3) || !os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
      {
LABEL_7:
        if ((v1 & 0x80000000) == 0) {
          return v1;
        }
        goto LABEL_8;
      }

      *(_DWORD *)std::string buf = 67109376;
      *(_DWORD *)int v13 = i;
      *(_WORD *)&v13[4] = 1024;
      *(_DWORD *)&v13[6] = v1;
      __int128 v4 = v3;
      uint64_t v5 = "BackboneIPv6Interface bpf_new for %d fd=%d";
      uint32_t v6 = 14;
    }

    else
    {
      if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        goto LABEL_7;
      }
      *(_DWORD *)std::string buf = 136315394;
      *(void *)int v13 = "com.apple.wpantund.ncp";
      *(_WORD *)&v13[8] = 2080;
      uint64_t v14 = "default";
      __int128 v4 = (os_log_s *)&_os_log_default;
      uint64_t v5 = "Logging Module is not defined for SubSystem: %s, Category: %s";
      uint32_t v6 = 22;
    }

    _os_log_error_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, v5, buf, v6);
    if ((v1 & 0x80000000) == 0) {
      return v1;
    }
LABEL_8:
    uint64_t v7 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v7)
    {
      BOOL v8 = v7;
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)std::string buf = 136315394;
      *(void *)int v13 = "com.apple.wpantund.ncp";
      *(_WORD *)&v13[8] = 2080;
      uint64_t v14 = "default";
      _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "Logging Module is not defined for SubSystem: %s, Category: %s",  buf,  0x16u);
    }

    if (*__error() != 16) {
      break;
    }
    if (__OFADD__(i, 1)) {
      __break(0x5500u);
    }
  }

  return v1;
}

uint64_t sub_100012CC0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

void sub_100012CC8(uint64_t a1, void *a2, unint64_t a3)
{
  if (*(_BYTE *)(a1 + 38))
  {
    int v3 = a3;
    uint32_t v6 = (int *)(a1 + 88);
    unint64_t v5 = *(int *)(a1 + 88);
    if (v5 > a3)
    {
      uint64_t v7 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v7)
      {
        BOOL v8 = v7;
        if (sub_10015A058(3))
        {
          if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
            sub_1001FC3B4(v3, v6, v8);
          }
        }

        return;
      }

      if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        return;
      }
LABEL_43:
      sub_1001FB53C();
      return;
    }

    uint64_t v11 = *(void *)(a1 + 80);
    if (v11)
    {
      if ((_DWORD)v5)
      {
        uint64_t v13 = v11 + *(unsigned __int16 *)(v11 + 16);
        uint64_t v14 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v14)
        {
          __int128 v15 = v14;
        }

        else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
          sub_1001FB53C();
        }

        unint64_t v20 = *(unsigned int *)(v11 + 12);
        uint64_t v21 = v20 - 14;
        if (v20 < 0xE)
        {
          __break(0x5515u);
          return;
        }

        memmove(a2, (const void *)(v13 + 14), (int)v21);
        uint64_t v22 = *(void **)(a1 + 80);
        if (v22)
        {
          *(_DWORD *)(a1 + 88) = 0;
          operator delete(v22);
          *(void *)(a1 + 80) = 0LL;
        }

        else
        {
          __int16 v31 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (v31)
          {
            std::string v32 = v31;
          }

          else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
          {
            sub_1001FB53C();
          }
        }

        uint64_t v23 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (!v23)
        {
          if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
            return;
          }
          goto LABEL_43;
        }

        uint64_t v24 = v23;
      }

      else
      {
        BOOL v18 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (!v18)
        {
          if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
            return;
          }
          goto LABEL_43;
        }

        uint64_t v19 = v18;
      }
    }

    else
    {
      uint64_t v16 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v16)
      {
        uint64_t v17 = v16;
      }

      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        sub_1001FB53C();
      }

      *uint32_t v6 = 0;
    }
  }

  else
  {
    uint64_t v9 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (!v9)
    {
      if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        return;
      }
      goto LABEL_43;
    }

    uint64_t v10 = v9;
  }

ot *sub_10001301C(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _OWORD *a5)
{
  if (!a2) {
    return 0LL;
  }
  uint64_t v7 = (unsigned __int16 *)(a2 + *(unsigned __int16 *)(a2 + 16));
  int v8 = v7[6];
  uint64_t v9 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  uint64_t v10 = v9;
  if (v8 != 56710)
  {
    if (v9)
    {
      return 0LL;
    }

    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
LABEL_30:
    }
      sub_1001FB53C();
    return 0LL;
  }

  if (v9)
  {
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  unsigned int v11 = bswap32(v7[9]) >> 16;
  if (v11 >= 0x501)
  {
    uint64_t v12 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v12)
    {
      return 0LL;
    }

    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      goto LABEL_30;
    }
    return 0LL;
  }

  memset(v35, 0, 46);
  uint64_t v13 = v7 + 11;
  inet_ntop(30, v7 + 11, (char *)v35, 0x2Eu);
  memset(v34, 0, sizeof(v34));
  uint64_t v14 = v7 + 19;
  *(_OWORD *)__int16 v33 = 0u;
  inet_ntop(30, v7 + 19, v33, 0x2Eu);
  *(_OWORD *)__s = 0u;
  memset(v32, 0, sizeof(v32));
  inet_ntop(30, v7 + 19, __s, 0x2Eu);
  sub_10000AC00(__p, __s);
  uint64_t v16 = ot::IsMulticastLargerThanRealmLocal((ot *)(v7 + 19), v15);
  if ((v16 & 1) != 0)
  {
    *a4 = *v13;
    *a5 = *v14;
    uint64_t v17 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v17)
    {
      if (sub_10015A058(7) && os_log_type_enabled(v17, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)std::string buf = 136315906;
        uint64_t v24 = v35;
        __int16 v25 = 2080;
        uint64_t v26 = v33;
        __int16 v27 = 1024;
        unsigned int v28 = v11;
        __int16 v29 = 2048;
        uint64_t v30 = 8LL;
        _os_log_debug_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEBUG,  "BackboneIPv6Interface: check_valid_read read ipv6 src:%s to dst:%s ipv6 packet len(%d) ipv6 hdr len(%lu)",  buf,  0x26u);
      }

      goto LABEL_37;
    }

    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      goto LABEL_36;
    }
  }

  else
  {
    BOOL v18 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v18)
    {
      goto LABEL_37;
    }

    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
LABEL_36:
    }
      sub_1001FB53C();
  }

LABEL_37:
  if (v22 < 0) {
    operator delete(__p[0]);
  }
  return v16;
}

  __int16 v35 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_cslTxErrBusyChannel));
  [v3 setObject:v35 forKey:@"csl_tx_err_busy_channel"];

  unint64_t v20 = self->_has;
  if ((*(_BYTE *)&v20 & 1) == 0)
  {
LABEL_17:
    if ((*(_BYTE *)&v20 & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_39;
  }

  v5[47] = self->_cslTxErrBusyChannel;
  v5[64] |= 8u;
  uint64_t v7 = self->_has;
  if ((*(_BYTE *)&v7 & 1) == 0)
  {
LABEL_17:
    if ((*(_BYTE *)&v7 & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_39;
  }

  uint64_t v24 = 0LL;
  if ((*(_BYTE *)&v18 & 2) != 0)
  {
LABEL_27:
    __int16 v25 = 2654435761LL * self->_cslLossOfSyncDueToMaxRetx;
    if ((*(_WORD *)&v18 & 0x8000) != 0) {
      goto LABEL_28;
    }
    goto LABEL_39;
  }

      __break(0x5500u);
      goto LABEL_38;
    }

  sub_100030134(&v30, &v31);
  sub_10003446C(a3);
LABEL_54:
  if (v30.__r_.__value_.__r.__words[0]) {
    (*(void (**)(std::string::size_type))(*(void *)v30.__r_.__value_.__l.__data_ + 8LL))(v30.__r_.__value_.__r.__words[0]);
  }
}

      if (v79[5])
      {
        __int128 v54 = sub_1001768B4(1);
        int v55 = (os_log_s *)objc_claimAutoreleasedReturnValue(v54);
        if (os_log_type_enabled(v55, OS_LOG_TYPE_INFO))
        {
          v56 = (void *)objc_claimAutoreleasedReturnValue([v79[5] network]);
          v57 = (void *)objc_claimAutoreleasedReturnValue([v56 networkName]);
          *(_DWORD *)std::string buf = 136315650;
          v92 = "-[THThreadNetworkCredentialsKeychainBackingStore getRecordForPreferredNetwork:anyDsFormat:skipScan:]";
          v93 = 1024;
          v94 = 1836;
          v95 = 2112;
          v96 = v57;
          _os_log_impl( (void *)&_mh_execute_header,  v55,  OS_LOG_TYPE_INFO,  "%s : %d : Check if require to update preferred network with record : name : %@",  buf,  0x1Cu);
        }

        v58 = (void *)objc_claimAutoreleasedReturnValue([(id)v85[5] credentialsDataSetRecord]);
        v59 = v58 == 0LL;

        if (v59)
        {
          objc_initWeak((id *)buf, self);
          global_queue = dispatch_get_global_queue(0LL, 0LL);
          v61 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
          block[0] = _NSConcreteStackBlock;
          block[1] = 3221225472LL;
          block[2] = sub_100180FF0;
          block[3] = &unk_1002B5240;
          objc_copyWeak(&v72, (id *)buf);
          block[4] = &v78;
          void block[5] = &v84;
          dispatch_async(v61, block);

          objc_destroyWeak(&v72);
          objc_destroyWeak((id *)buf);
        }
      }

      uint64_t v24 = v79[5];
    }

    else
    {
      std::string::size_type v52 = sub_1001768B4(1);
      v53 = (os_log_s *)objc_claimAutoreleasedReturnValue(v52);
      if (os_log_type_enabled(v53, OS_LOG_TYPE_ERROR)) {
        sub_10019520C();
      }

      uint64_t v24 = 0LL;
    }

    goto LABEL_44;
  }

  uint64_t v16 = sub_1001768B4(1);
  uint64_t v17 = (os_log_s *)objc_claimAutoreleasedReturnValue(v16);
  if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
  {
    BOOL v18 = (void *)objc_claimAutoreleasedReturnValue([(id)v85[5] credentialsDataSetRecord]);
    uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([v18 network]);
    unint64_t v20 = (void *)objc_claimAutoreleasedReturnValue([v19 networkName]);
    uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue([(id)v85[5] credentialsDataSetRecord]);
    char v22 = (void *)objc_claimAutoreleasedReturnValue([v21 credentialsDataSet]);
    uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue([v22 dataSetArray]);
    *(_DWORD *)std::string buf = 136315906;
    v92 = "-[THThreadNetworkCredentialsKeychainBackingStore getRecordForPreferredNetwork:anyDsFormat:skipScan:]";
    v93 = 1024;
    v94 = 1787;
    v95 = 2112;
    v96 = v20;
    v97 = 2112;
    v98 = v23;
    _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_INFO,  "%s:%d: This preferred network entry has record associated with it, returning the same record : %@, dataset : %@",  buf,  0x26u);
  }

  uint64_t v24 = (id)objc_claimAutoreleasedReturnValue([(id)v85[5] credentialsDataSetRecord]);
LABEL_45:
  _Block_object_dispose(&v78, 8);

  _Block_object_dispose(&v84, 8);
  return v24;
}

void sub_100013398( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1000133C4(uint64_t a1, _OWORD *a2, _OWORD *a3)
{
  if ((*(char *)(a1 + 31) & 0x80000000) == 0)
  {
    if (*(_BYTE *)(a1 + 31)) {
      goto LABEL_3;
    }
LABEL_13:
    unsigned int v11 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v11)
    {
      uint64_t v12 = v11;
      uint64_t result = sub_10015A058(7);
      if (!(_DWORD)result) {
        return result;
      }
      uint64_t result = os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG);
      if (!(_DWORD)result) {
        return result;
      }
      sub_1001FC7D4();
      return 0LL;
    }

    uint64_t result = os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR);
    if (!(_DWORD)result) {
      return result;
    }
LABEL_22:
    sub_1001FB53C();
    return 0LL;
  }

  if (!*(void *)(a1 + 16)) {
    goto LABEL_13;
  }
LABEL_3:
  if (!*(_BYTE *)(a1 + 38))
  {
    uint64_t v14 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v14)
    {
      __int128 v15 = v14;
      uint64_t result = sub_10015A058(7);
      if (!(_DWORD)result) {
        return result;
      }
      uint64_t result = os_log_type_enabled(v15, OS_LOG_TYPE_DEBUG);
      if (!(_DWORD)result) {
        return result;
      }
      sub_1001FC800();
      return 0LL;
    }

    uint64_t result = os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR);
    if (!(_DWORD)result) {
      return result;
    }
    goto LABEL_22;
  }

  int v6 = *(_DWORD *)(a1 + 68);
  if (v6 < 0) {
    return 0LL;
  }
  if (ioctl(v6, 0x40044266uLL, &__size) < 0)
  {
    uint64_t v16 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v16)
    {
      uint64_t v17 = v16;
      uint64_t result = sub_10015A058(7);
      if (!(_DWORD)result) {
        return result;
      }
      uint64_t result = os_log_type_enabled(v17, OS_LOG_TYPE_DEBUG);
      if (!(_DWORD)result) {
        return result;
      }
      sub_1001FC82C();
    }

    else
    {
      uint64_t result = os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR);
      if (!(_DWORD)result) {
        return result;
      }
      sub_1001FB53C();
    }

    return 0LL;
  }

  if (*(void *)(a1 + 80) || (v8 = (int *)(a1 + 88), int v7 = *(_DWORD *)(a1 + 88), v7 >= 1))
  {
    uint64_t v9 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v9)
    {
      uint64_t v10 = v9;
      if (sub_10015A058(7))
      {
        if (os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG)) {
          sub_1001FC88C();
        }
      }
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }

    return 1LL;
  }

  if (v7)
  {
    BOOL v18 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v18)
    {
      uint64_t v19 = v18;
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }

    *(_DWORD *)(a1 + 88) = 0;
    unint64_t v20 = *(void **)(a1 + 80);
    if (v20) {
      operator delete(v20);
    }
  }

  size_t v21 = __size;
  char v22 = malloc(__size);
  *(void *)(a1 + 80) = v22;
  if (v22)
  {
    ssize_t v23 = read(*(_DWORD *)(a1 + 68), v22, v21);
    *(_DWORD *)(a1 + 88) = v23;
    if ((int)v23 >= 1 && sub_10001301C(v23, *(void *)(a1 + 80), v24, a2, a3))
    {
      if (*v8 < 1295) {
        return 1LL;
      }
      __int16 v25 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v25)
      {
        uint64_t v26 = v25;
        goto LABEL_61;
      }

      if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        goto LABEL_60;
      }
    }
  }

  else
  {
    __int16 v27 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v27)
    {
      unsigned int v28 = v27;
      goto LABEL_61;
    }

    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
LABEL_60:
    }
      sub_1001FB53C();
  }

void sub_100013794(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 80);
  if (v2)
  {
    operator delete(v2);
    *(void *)(a1 + 80) = 0LL;
  }

  *(_DWORD *)(a1 + 88) = 0;
}

uint64_t sub_1000137C4()
{
  return 0LL;
}

uint64_t sub_1000137CC(uint64_t a1)
{
  if (getifaddrs(&v23) < 0)
  {
    uint64_t v9 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v9)
    {
      uint64_t v10 = v9;
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }

    return 0LL;
  }

  uint64_t v2 = v23;
  if (!v23) {
    return 0LL;
  }
  while (1)
  {
    int v3 = (const char *)(a1 + 8);
    if (!strcmp(v3, v2->ifa_name))
    {
      ifa_addr = v2->ifa_addr;
      if (ifa_addr->sa_family == 18)
      {
        unint64_t v5 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v5)
        {
          int v6 = v5;
          if (sub_10015A058(6) && os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
          {
            ifa_name = v2->ifa_name;
            int v8 = ifa_addr->sa_data[2];
            *(_DWORD *)std::string buf = 136315394;
            *(void *)__int16 v25 = ifa_name;
            *(_WORD *)&v25[8] = 1024;
            LODWORD(v26) = v8;
            _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_INFO,  "BackboneIPv6Interface update_backbone_ethernet_address ifname=%s ether_type=%d",  buf,  0x12u);
          }
        }

        else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)std::string buf = 136315394;
          *(void *)__int16 v25 = "com.apple.wpantund.ncp";
          *(_WORD *)&v25[8] = 2080;
          uint64_t v26 = "default";
          _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "Logging Module is not defined for SubSystem: %s, Category: %s",  buf,  0x16u);
        }

        if (ifa_addr->sa_data[2] == 6) {
          break;
        }
      }
    }

    uint64_t v2 = v2->ifa_next;
    if (!v2) {
      return 0LL;
    }
  }

  uint64_t v13 = &ifa_addr->sa_len + ifa_addr->sa_data[3];
  int v14 = *((_DWORD *)v13 + 2);
  *(_WORD *)(a1 + 36) = *((_WORD *)v13 + 6);
  *(_DWORD *)(a1 + 32) = v14;
  freeifaddrs(v23);
  __int128 v15 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (!v15)
  {
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      sub_1001FB53C();
    }
    return 1LL;
  }

  uint64_t v16 = v15;
  uint64_t v11 = 1LL;
  if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
  {
    int v17 = *(unsigned __int8 *)(a1 + 32);
    int v18 = *(unsigned __int8 *)(a1 + 33);
    int v19 = *(unsigned __int8 *)(a1 + 34);
    int v20 = *(unsigned __int8 *)(a1 + 35);
    int v21 = *(unsigned __int8 *)(a1 + 36);
    int v22 = *(unsigned __int8 *)(a1 + 37);
    *(_DWORD *)std::string buf = 67110400;
    *(_DWORD *)__int16 v25 = v17;
    *(_WORD *)&v25[4] = 1024;
    *(_DWORD *)&v25[6] = v18;
    LOWORD(v26) = 1024;
    *(_DWORD *)((char *)&v26 + 2) = v19;
    HIWORD(v26) = 1024;
    int v27 = v20;
    __int16 v28 = 1024;
    int v29 = v21;
    __int16 v30 = 1024;
    int v31 = v22;
    _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_INFO,  "BackboneIPv6Interface update_backbone_ethernet_address,the WiFi HW address is %02x:%02x:%02x:%02x:%02x:%02x ",  buf,  0x26u);
  }

  return v11;
}

void sub_100013AF4(uint64_t a1, const void *a2, uint64_t a3)
{
  if (*(_BYTE *)(a1 + 38))
  {
    int v21 = 13107;
    __int16 v22 = 256;
    bzero(v26, 0x7F2uLL);
    int v23 = *(_DWORD *)(a1 + 32);
    __int16 v24 = *(_WORD *)(a1 + 36);
    __int16 v25 = -8826;
    *(void *)&v20[2] = 0LL;
    *(void *)&v20[10] = 0LL;
    *(_WORD *)int v20 = 6930;
    memcpy(v26, a2, a3);
    int v6 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v6)
    {
      int v7 = v6;
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }

    if (v27 <= 1u)
    {
      uint64_t v11 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v11)
      {
        uint64_t v12 = v11;
        if (sub_10015A058(7))
        {
          if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG)) {
            sub_1001FCAA8();
          }
        }

        return;
      }

      if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        return;
      }
LABEL_28:
      sub_1001FB53C();
      return;
    }

    --v27;
    int v13 = *(_DWORD *)(a1 + 72);
    if (v13 == -1)
    {
      int v18 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (!v18)
      {
        if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          return;
        }
        goto LABEL_28;
      }

      int v19 = v18;
    }

    else if ((unint64_t)a3 >= 0xFFFFFFFFFFFFFFF2LL {
           || (ssize_t v14 = sendto(v13, &v21, a3 + 14, 0, (const sockaddr *)v20, 0x12u), a3 > 0x7FFFFFFFFFFFFFF1LL))
    }
    {
      __break(0x5500u);
    }

    else
    {
      uint64_t v15 = v14;
      uint64_t v16 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      int v17 = v16;
      if (v15 == a3 + 14)
      {
        if (v16)
        {
        }

        else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
          sub_1001FB53C();
        }
      }

      else if (v16)
      {
      }

      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        sub_1001FB53C();
      }
    }
  }

  else
  {
    int v8 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v8)
    {
      uint64_t v9 = v8;
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }
  }

uint64_t sub_100013E64(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, int *a5)
{
  if (*(_BYTE *)(a1 + 38))
  {
    if (!a2) {
      return 0LL;
    }
    unint64_t v8 = *(unsigned int *)(a1 + 68);
    if ((v8 & 0x80000000) == 0 && __darwin_check_fd_set_overflow(*(_DWORD *)(a1 + 68), a2, 0)) {
      *(_DWORD *)&a2[(v8 >> 3) & 0x1FFFFFFC] |= 1 << v8;
    }
    unint64_t v9 = *(unsigned int *)(a1 + 64);
    if ((v9 & 0x80000000) == 0 && __darwin_check_fd_set_overflow(*(_DWORD *)(a1 + 64), a2, 0)) {
      *(_DWORD *)&a2[(v9 >> 3) & 0x1FFFFFFC] |= 1 << v9;
    }
    if (a5)
    {
      uint64_t result = 0LL;
      int v11 = *(_DWORD *)(a1 + 68);
      if (*a5 > v11) {
        int v11 = *a5;
      }
      *a5 = v11;
      if (v11 <= *(_DWORD *)(a1 + 64)) {
        int v11 = *(_DWORD *)(a1 + 64);
      }
      *a5 = v11;
    }

    else
    {
      return 0LL;
    }
  }

  else
  {
    uint64_t v12 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v12)
    {
      int v13 = v12;
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }

    return 0xFFFFFFFFLL;
  }

  return result;
}

uint64_t sub_100013FA8(uint64_t a1, const char *a2)
{
  int v4 = socket(27, 3, 0);
  *(_DWORD *)(a1 + 72) = v4;
  if (v4 < 0)
  {
    int v7 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v7)
    {
      unint64_t v8 = v7;
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }
  }

  else
  {
    strlcpy(v10.sa_data, a2, 0x10uLL);
    *(_WORD *)&v10.sa_len = 6930;
    if (bind(*(_DWORD *)(a1 + 72), &v10, 0x12u) < 0)
    {
      unint64_t v5 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v5)
      {
        int v6 = v5;
      }

      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        sub_1001FB53C();
      }
    }
  }

  return *(unsigned int *)(a1 + 72);
}

uint64_t sub_100014108(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 38))
  {
    unint64_t v5 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v5)
    {
      int v6 = v5;
      return 0LL;
    }

    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
LABEL_21:
    }
      sub_1001FB53C();
    return 0LL;
  }

  char v1 = sub_100014278(a1);
  uint64_t v2 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  int v3 = v2;
  if ((v1 & 1) == 0)
  {
    if (v2)
    {
      return 0LL;
    }

    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      goto LABEL_21;
    }
    return 0LL;
  }

  if (!v2)
  {
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      sub_1001FB53C();
    }
    return 1LL;
  }

  uint64_t v4 = 1LL;
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)unint64_t v8 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_INFO,  "BackboneIPv6Interface::checkAndInitialize Backbone link successfully initialized",  v8,  2u);
  }

  return v4;
}

uint64_t sub_100014278(uint64_t a1)
{
  if ((*(char *)(a1 + 31) & 0x80000000) == 0)
  {
    if (*(_BYTE *)(a1 + 31)) {
      goto LABEL_3;
    }
LABEL_9:
    int v7 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v7)
    {
      unint64_t v8 = v7;
      uint64_t result = sub_10015A058(3);
      if (!(_DWORD)result) {
        return result;
      }
      uint64_t result = os_log_type_enabled(v8, OS_LOG_TYPE_ERROR);
      if (!(_DWORD)result) {
        return result;
      }
      sub_1001FCE34();
    }

    else
    {
      uint64_t result = os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR);
      if (!(_DWORD)result) {
        return result;
      }
      sub_1001FB53C();
    }

    return 0LL;
  }

  if (!*(void *)(a1 + 16)) {
    goto LABEL_9;
  }
LABEL_3:
  int v2 = socket(30, 2, 0);
  if (v2 < 0)
  {
    sockaddr v10 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v10)
    {
      int v11 = v10;
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }

    goto LABEL_141;
  }

  *(_DWORD *)(a1 + 64) = v2;
  *(_DWORD *)(a1 + 68) = sub_100012A60();
  int v3 = (int *)(a1 + 68);
  uint64_t v4 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v4)
  {
    unint64_t v5 = v4;
    if (sub_10015A058(6) && os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      int v6 = *v3;
      *(_DWORD *)std::string buf = 67109120;
      *(_DWORD *)&uint8_t buf[4] = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "BackboneIPv6Interface bp_new fd=%d", buf, 8u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  int v12 = *v3;
  if (*v3 < 0)
  {
    int v19 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v19)
    {
      int v20 = v19;
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }

    goto LABEL_141;
  }

  int v13 = (const char *)(a1 + 8);
  ssize_t v14 = (const char *)(a1 + 8);
  int v50 = 0;
  strlcpy(buf, v14, 0xFuLL);
  if (ioctl(v12, 0x8020426CuLL, buf) < 0)
  {
    int v21 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v21)
    {
      __int16 v22 = v21;
      if (sub_10015A058(3) && os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
      {
        sub_1001FCF94();
        if (!v12) {
          goto LABEL_135;
        }
        goto LABEL_134;
      }
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
      if (!v12) {
        goto LABEL_135;
      }
      goto LABEL_134;
    }

    goto LABEL_133;
  }

  if (ioctl(v12, 0x80044275uLL, &v50) < 0)
  {
    int v23 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v23)
    {
      __int16 v24 = v23;
      if (sub_10015A058(3) && os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
      {
        sub_1001FD008();
        if (!v12) {
          goto LABEL_135;
        }
        goto LABEL_134;
      }
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
      if (!v12) {
        goto LABEL_135;
      }
      goto LABEL_134;
    }

    goto LABEL_133;
  }

  if (ioctl(v12, 0x80044277uLL, &v50) < 0)
  {
    __int16 v25 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v25)
    {
      uint64_t v26 = v25;
      if (sub_10015A058(3) && os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
      {
        sub_1001FD07C();
        if (!v12) {
          goto LABEL_135;
        }
        goto LABEL_134;
      }
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
      if (!v12) {
        goto LABEL_135;
      }
      goto LABEL_134;
    }

    goto LABEL_133;
  }

  if (ioctl(v12, 0x80044270uLL, &v50) < 0)
  {
    unsigned __int8 v27 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v27)
    {
      __int16 v28 = v27;
      if (sub_10015A058(3) && os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
      {
        sub_1001FD0F0();
        if (!v12) {
          goto LABEL_135;
        }
        goto LABEL_134;
      }
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
      if (!v12) {
        goto LABEL_135;
      }
      goto LABEL_134;
    }

    goto LABEL_133;
  }

  uint64_t v51 = 0LL;
  LODWORD(v52) = 1000;
  if (ioctl(v12, 0x8010426DuLL, &v51) == -1)
  {
    int v29 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v29)
    {
      __int16 v30 = v29;
      if (sub_10015A058(3) && os_log_type_enabled(v30, OS_LOG_TYPE_ERROR))
      {
        sub_1001FD164();
        if (!v12) {
          goto LABEL_135;
        }
        goto LABEL_134;
      }
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
      if (!v12) {
        goto LABEL_135;
      }
      goto LABEL_134;
    }

LABEL_133:
    if (!v12) {
      goto LABEL_135;
    }
    goto LABEL_134;
  }

  int v15 = fcntl(v12, 3, 0LL);
  if (v15 != -1)
  {
    if ((v15 & 4) != 0 || fcntl(v12, 4, v15 | 4u) != -1)
    {
      uint64_t v16 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v16)
      {
        int v17 = v16;
        if (sub_10015A058(6) && os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
        {
          int v18 = *v3;
          *(_DWORD *)std::string buf = 67109120;
          *(_DWORD *)&uint8_t buf[4] = v18;
          _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_INFO,  "BackboneIPv6Interface bpf_set_options fd=%d",  buf,  8u);
        }
      }

      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        sub_1001FB53C();
      }

      int v33 = *v3;
      *(_OWORD *)std::string buf = *(_OWORD *)"(";
      *(_OWORD *)&buf[16] = unk_100222F70;
      __int128 v54 = xmmword_100222F80;
      LODWORD(v51) = 6;
      std::string::size_type v52 = buf;
      int v34 = ioctl(v33, 0x80104267uLL, &v51);
      __int16 v35 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      std::string::size_type v36 = v35;
      if ((v34 & 0x80000000) == 0)
      {
        if (v35)
        {
          if (sub_10015A058(6) && os_log_type_enabled(v36, OS_LOG_TYPE_INFO))
          {
            uint64_t v37 = (const char *)(a1 + 8);
            int v38 = *(_DWORD *)(a1 + 68);
            char v39 = (void *)(a1 + 40);
            *(_DWORD *)std::string buf = 67109634;
            *(_DWORD *)&uint8_t buf[4] = v38;
            *(_WORD *)&buf[8] = 2080;
            *(void *)&buf[10] = v37;
            *(_WORD *)&buf[18] = 2080;
            *(void *)&buf[20] = v39;
            _os_log_impl( (void *)&_mh_execute_header,  v36,  OS_LOG_TYPE_INFO,  "BackboneIPv6Interface bpf_set_filter fd=%d backbone interface name =%s thread interface name=%s",  buf,  0x1Cu);
          }
        }

        else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
          sub_1001FB53C();
        }

        int v40 = sub_100013FA8(a1, v13);
        *(_DWORD *)(a1 + 72) = v40;
        if ((v40 & 0x80000000) == 0) {
          return 1LL;
        }
        dispatch_object_t v41 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v41)
        {
          std::string v42 = v41;
        }

        else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
          sub_1001FB53C();
        }

        *(_DWORD *)(a1 + 72) = -1;
        goto LABEL_141;
      }

      if (v35)
      {
        goto LABEL_141;
      }

      if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        goto LABEL_140;
      }
      goto LABEL_141;
    }

    xpc_object_t v43 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v43)
    {
      int v44 = v43;
      goto LABEL_127;
    }

    if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      goto LABEL_127;
    }
LABEL_126:
    sub_1001FB53C();
    goto LABEL_127;
  }

  int v31 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (!v31)
  {
    if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      goto LABEL_127;
    }
    goto LABEL_126;
  }

  std::string v32 = v31;
LABEL_127:
  uint64_t v45 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v45)
  {
    xpc_object_t v46 = v45;
    if (sub_10015A058(3) && os_log_type_enabled(v46, OS_LOG_TYPE_ERROR))
    {
      sub_1001FD1D8();
      if (!v12) {
        goto LABEL_135;
      }
LABEL_134:
      close(v12);
      goto LABEL_135;
    }

    goto LABEL_133;
  }

  if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
    goto LABEL_133;
  }
  sub_1001FB53C();
  if (v12) {
    goto LABEL_134;
  }
LABEL_135:
  dispatch_object_t v47 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v47)
  {
    xpc_object_t v48 = v47;
    goto LABEL_141;
  }

  if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
LABEL_140:
  }
    sub_1001FB53C();
LABEL_141:
  int v49 = *(_DWORD *)(a1 + 72);
  if (v49)
  {
    close(v49);
    *(_DWORD *)(a1 + 72) = -1;
  }

  uint64_t result = *(unsigned int *)(a1 + 68);
  if ((_DWORD)result)
  {
    close(result);
    uint64_t result = 0LL;
    *(_DWORD *)(a1 + 68) = -1;
  }

  return result;
}

    uint64_t v64 = v99;
    uint64_t v65 = v100;
    v66 = v98;
  }

  else
  {
    v74 = sub_1001768B4(1);
    int v21 = (os_log_s *)objc_claimAutoreleasedReturnValue(v74);
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
      sub_1001AA248();
    }
    v73 = 0LL;
  }

  return v73;
}

uint64_t sub_100014C3C(uint64_t a1, char *a2, char a3)
{
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  if ((sub_1000137CC(a1) & 1) == 0)
  {
    unint64_t v5 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v5)
    {
      int v6 = v5;
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }
  }

  *(_BYTE *)(a1 + 38) = a3;
  sub_10010F3FC();
  return 1LL;
}

uint64_t sub_100014D08(uint64_t a1, __int128 *a2)
{
  __int128 v4 = *a2;
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  *(_OWORD *)a1 = v4;
  *((_BYTE *)a2 + 23) = 0;
  *(_BYTE *)a2 = 0;
  return a1;
}

std::string *sub_100014D54(uint64_t a1, const std::string *a2)
{
  return std::string::operator=((std::string *)(a1 + 40), a2);
}

BOOL sub_100014D5C(uint64_t a1, void *a2)
{
  int v3 = (char *)(a1 + 8);
  if (v11 >= 0) {
    __int128 v4 = __p;
  }
  else {
    __int128 v4 = (void **)__p[0];
  }
  int v5 = sub_100014F30(*(_DWORD *)(a1 + 64), 80, v3, (const char *)v4);
  if ((v5 & 0x80000000) == 0)
  {
    int v6 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v6)
    {
      if (sub_10015A058(6) && os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
      {
        int v7 = __p;
        if (v11 < 0) {
          int v7 = (void **)__p[0];
        }
        *(_DWORD *)std::string buf = 136315138;
        int v13 = v7;
        _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_INFO,  "BackboneIPv6Interface::subscribeMulticastAddress subscribed:%s on Backbone",  buf,  0xCu);
      }

      goto LABEL_21;
    }

    if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      goto LABEL_21;
    }
LABEL_20:
    sub_1001FB53C();
    goto LABEL_21;
  }

  unint64_t v8 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (!v8)
  {
    if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      goto LABEL_21;
    }
    goto LABEL_20;
  }

void sub_100014F04( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100014F30(int a1, int a2, char *a3, const char *a4)
{
  if ((a2 & 0xFFFFFFFE) != 0x50) {
    return 0xFFFFFFFFLL;
  }
  unsigned int v8 = if_nametoindex(a3);
  unsigned int v28 = v8;
  *(_OWORD *)int v21 = 0uLL;
  char v9 = gethostbyname2(a4, 30);
  if (!v9)
  {
    uint64_t v16 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v16)
    {
      int v17 = v16;
      return 0xFFFFFFFFLL;
    }

    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
LABEL_25:
    }
      sub_1001FB53C();
    return 0xFFFFFFFFLL;
  }

  if (v9->h_length <= 0)
  {
    int v18 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v18)
    {
      int v19 = v18;
      return 0xFFFFFFFFLL;
    }

    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      goto LABEL_25;
    }
    return 0xFFFFFFFFLL;
  }

  inet_pton(30, a4, v21);
  *(_OWORD *)int v33 = *(_OWORD *)v21;
  *(_OWORD *)&v33[12] = *(_OWORD *)&v21[12];
  char v30 = 30;
  __int16 v31 = 0;
  int v32 = 0;
  *(_DWORD *)&char v33[16] = if_nametoindex(a3);
  char v29 = 28;
  uint64_t v10 = setsockopt(a1, 41, a2, &v28, 0x84u);
  if ((_DWORD)v10)
  {
    char v11 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v11)
    {
      int v12 = v11;
      if (sub_10015A058(3) && os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
      {
        int v13 = __error();
        if (a2 == 80) {
          ssize_t v14 = "MCAST_JOIN_GROUP";
        }
        else {
          ssize_t v14 = "MCAST_LEAVE_GROUP";
        }
        int v15 = strerror(*v13);
        *(_DWORD *)&v21[16] = 136315906;
        *(void *)&v21[20] = v14;
        __int16 v22 = 1024;
        unsigned int v23 = v8;
        __int16 v24 = 2080;
        __int16 v25 = v15;
        __int16 v26 = 1024;
        int v27 = v10;
        _os_log_error_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_ERROR,  "BackboneIPv6Interface setsockopt(%s) if_index %d failed, %s ret %d\n",  &v21[16],  0x22u);
      }
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }
  }

  return v10;
}

BOOL sub_1000151E4(uint64_t a1, void *a2)
{
  int v3 = (char *)(a1 + 8);
  if (v11 >= 0) {
    __int128 v4 = __p;
  }
  else {
    __int128 v4 = (void **)__p[0];
  }
  int v5 = sub_100014F30(*(_DWORD *)(a1 + 64), 81, v3, (const char *)v4);
  if ((v5 & 0x80000000) == 0)
  {
    int v6 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v6)
    {
      if (sub_10015A058(6) && os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
      {
        int v7 = __p;
        if (v11 < 0) {
          int v7 = (void **)__p[0];
        }
        *(_DWORD *)std::string buf = 136315138;
        int v13 = v7;
        _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_INFO,  "BackboneIPv6Interface::unSubscribeMulticastAddress unsubscribed:%s on Backbone",  buf,  0xCu);
      }

      goto LABEL_21;
    }

    if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      goto LABEL_21;
    }
LABEL_20:
    sub_1001FB53C();
    goto LABEL_21;
  }

  unsigned int v8 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (!v8)
  {
    if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      goto LABEL_21;
    }
    goto LABEL_20;
  }

void sub_10001538C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1000153B8(uint64_t a1)
{
  *(void *)(a1 + 8) = 0LL;
  *(void *)a1 = off_1002ADFA8;
  *(void *)(a1 + 16) = 0LL;
  *(void *)(a1 + 24) = 0LL;
  *(void *)(a1 + 40) = 0LL;
  *(void *)(a1 + 48) = 0LL;
  *(void *)(a1 + 56) = 0LL;
  *(void *)(a1 + 64) = -1LL;
  *(_DWORD *)(a1 + 72) = -1;
  *(_BYTE *)(a1 + 76) = 0;
  *(void *)(a1 + 80) = 0LL;
  *(_DWORD *)(a1 + 88) = 0;
  *(_BYTE *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 31) = 0;
  *(_BYTE *)(a1 + 38) = 0;
  sub_10010F32C();
  return a1;
}

void sub_100015430(_Unwind_Exception *exception_object)
{
}

uint64_t sub_100015460(uint64_t a1)
{
  *(void *)a1 = off_1002ADFA8;
  sub_10010F3FC();
  else {
    uint64_t v2 = *(unsigned __int8 *)(a1 + 31);
  }
  int v3 = (void **)(a1 + 8);
  if (v2)
  {
    __int128 v4 = (char *)(a1 + 8);
    if ((*(_BYTE *)(a1 + 31) & 0x80) != 0) {
      __int128 v4 = (char *)*v3;
    }
    if ((sub_100014F30(*(_DWORD *)(a1 + 64), 81, v4, "ff04::1") & 0x80000000) != 0)
    {
      uint64_t v10 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v10)
      {
      }

      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        sub_1001FB53C();
      }
    }
  }

  int v5 = *(_DWORD *)(a1 + 72);
  if (v5)
  {
    close(v5);
    *(_DWORD *)(a1 + 72) = -1;
  }

  int v6 = *(_DWORD *)(a1 + 68);
  if (v6)
  {
    close(v6);
    *(_DWORD *)(a1 + 68) = -1;
  }

  int v7 = *(_DWORD *)(a1 + 64);
  if (v7)
  {
    close(v7);
    *(_DWORD *)(a1 + 64) = -1;
  }

  unsigned int v8 = *(void **)(a1 + 80);
  if (v8)
  {
    operator delete(v8);
    *(void *)(a1 + 80) = 0LL;
    *(_DWORD *)(a1 + 88) = 0;
  }

  return a1;
}

void sub_1000155B4(uint64_t a1)
{
  uint64_t v1 = (void *)sub_100015460(a1);
  operator delete(v1);
}

void sub_1000155C8(void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
}

void sub_1000155D4( void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

  ;
}

  ;
}

  ;
}

void sub_100015614( void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

void sub_100015624(void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
}

char *sub_100015630(int *a1)
{
  return strerror(*a1);
}

void sub_100015638(uint64_t a1@<X8>)
{
  *(void *)(v1 - 8) = a1;
}

int *sub_100015668()
{
  return __error();
}

  ;
}

  ;
}

void sub_100015688( void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

void sub_10001569C(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
}

  ;
}

  ;
}

  ;
}

  ;
}

void sub_1000156F8(void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
}

  ;
}

void sub_10001570C(void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
}

uint64_t sub_100015718()
{
  qword_1002C9680 = NEVirtualInterfaceCreateNexus(kCFAllocatorDefault, 1LL, 0LL, 0LL, 1LL, 1LL, 0LL, 0LL, 0LL);
  if (!qword_1002C9680)
  {
    qword_1002C9680 = NEVirtualInterfaceCreateNexus(kCFAllocatorDefault, 1LL, 0LL, 0LL, 1LL, 1LL, 0LL, 0LL, 0LL);
    if (!qword_1002C9680) {
      syslog(3, "RETRY of NEVirtualInterfaceCreateNexus returned NULL");
    }
    sub_10000AC00(v12, "ABSENT");
    sub_10000AC00(v10, "ABSENT");
    sub_10000AC00(v8, "ABSENT");
    sub_10000AC00(v6, "Stability");
    sub_10000AC00(v4, "Invalid State");
    sub_10000AC00(__p, "NE Virtual Interface Create Fail");
    sub_1000E892C( (const std::string::value_type *)v12,  (uint64_t)v10,  (uint64_t)v8,  (uint64_t *)v6,  (uint64_t *)v4,  (const std::string::value_type *)__p,  0LL);
    if (v3 < 0) {
      operator delete(__p[0]);
    }
    if (v5 < 0) {
      operator delete(v4[0]);
    }
    if (v7 < 0) {
      operator delete(v6[0]);
    }
    if (v9 < 0) {
      operator delete(v8[0]);
    }
    if (v11 < 0) {
      operator delete(v10[0]);
    }
    if (v13 < 0) {
      operator delete(v12[0]);
    }
  }

  NEVirtualInterfaceEnableFlowswitch(qword_1002C9680, 1LL);
  uint64_t v0 = NEVirtualInterfaceDupSocket(qword_1002C9680);
  syslog(6, "Openned a tunnel with fd: %d ", v0);
  return v0;
}

void sub_1000158C8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20, char a21, char a22, void *a23, uint64_t a24, int a25, __int16 a26, char a27, char a28, void *a29, uint64_t a30, int a31, __int16 a32, char a33, char a34)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  if (a34 < 0) {
    operator delete(a29);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10001595C()
{
  return NEVirtualInterfaceInvalidate(qword_1002C9680);
}

uint64_t sub_100015968(char *a1, int a2)
{
  __int128 v4 = (const __CFString *)NEVirtualInterfaceCopyName(qword_1002C9680);
  if (!v4) {
    return 0xFFFFFFFFLL;
  }
  char v5 = v4;
  CFTypeID v6 = CFGetTypeID(v4);
  if (v6 == CFStringGetTypeID())
  {
    CFStringGetCString(v5, a1, a2, 0x8000100u);
    syslog(6, "Openned tunnel name is: %s ", a1);
    uint64_t v7 = 0LL;
  }

  else
  {
    uint64_t v7 = 0xFFFFFFFFLL;
  }

  CFRelease(v5);
  return v7;
}

BOOL sub_100015A0C(uint64_t a1)
{
  return NEVirtualInterfaceSetMTU(qword_1002C9680, a1) != 0;
}

uint64_t sub_100015A34()
{
  uint64_t Index = NEVirtualInterfaceGetIndex(qword_1002C9680);
  syslog(6, "Opened tunnel ifIndex is: %d ", Index);
  return Index;
}

void sub_100015A7C(void *a1, int a2, int a3)
{
  __int128 v30 = 0u;
  *(_WORD *)cStr = 14906;
  inet_ntop(30, a1, cStr, 0x2Eu);
  sub_10000AC00(v23, cStr);
  char v5 = __p;
  sub_10000AC00(__p, "ff:fe00:");
  uint64_t v6 = v24;
  if ((v24 & 0x80u) == 0) {
    uint64_t v7 = v23;
  }
  else {
    uint64_t v7 = (void **)v23[0];
  }
  if ((v24 & 0x80u) != 0) {
    uint64_t v6 = (uint64_t)v23[1];
  }
  if ((v22 & 0x80u) == 0)
  {
    int64_t v8 = v22;
  }

  else
  {
    char v5 = (void **)__p[0];
    int64_t v8 = (int64_t)__p[1];
  }

  if (v8)
  {
    char v9 = (char *)v7 + v6;
    if (v6 >= v8)
    {
      int v14 = *(char *)v5;
      int v15 = v7;
      do
      {
        BOOL v16 = __OFSUB__(v6, v8);
        uint64_t v17 = v6 - v8;
        if (v16)
        {
          __break(0x5515u);
LABEL_46:
          __break(0x5500u);
        }

        if (__OFADD__(v17, 1LL)) {
          goto LABEL_46;
        }
        if (v17 == -1) {
          break;
        }
        int v18 = (char *)memchr(v15, v14, v17 + 1);
        if (!v18) {
          break;
        }
        uint64_t v10 = v18;
        if (!memcmp(v18, v5, v8)) {
          goto LABEL_12;
        }
        int v15 = (void **)(v10 + 1);
        uint64_t v6 = v9 - (v10 + 1);
      }

      while (v6 >= v8);
    }

    uint64_t v10 = v9;
LABEL_12:
    if (v10 == v9) {
      int64_t v8 = -1LL;
    }
    else {
      int64_t v8 = v10 - (char *)v7;
    }
  }

  syslog(6, "Add Address: address_string: %s, prefixlen: %d preferred=%d isAddressLocator=%d", cStr, a2, a3, v8 != -1);
  CFStringRef v11 = CFStringCreateWithCString(0LL, cStr, 0x8000100u);
  syslog(6, "Add Address: address: %@", v11);
  v28[0] = -1LL;
  v28[1] = -1LL;
  if ((a2 & 0x80) != 0) {
    unint64_t v12 = 128LL;
  }
  else {
    unint64_t v12 = a2;
  }
  bzero((char *)v28 + ((v12 + 7) >> 3), 16 - ((v12 + 7) >> 3));
  if ((v12 & 7) != 0)
  {
    if ((v12 >> 3) == 16)
    {
      __break(1u);
      return;
    }

    *((_BYTE *)v28 + (v12 >> 3)) &= -256 >> (v12 & 7);
  }

  memset(v27, 0, sizeof(v27));
  __int128 v26 = 0u;
  *(_WORD *)__int16 v25 = 14906;
  inet_ntop(30, v28, v25, 0x2Eu);
  syslog(6, "Add Address: prefix_string: %s, prefixlen: %d", v25, a2);
  CFStringRef v13 = CFStringCreateWithCString(0LL, v25, 0x8000100u);
  syslog(6, "Add Address: prefix_mask: %@", v13);
  if (v11 && v13)
  {
    if (v8 == -1 || (a3 & 1) != 0)
    {
      NEVirtualInterfaceAddAddress(qword_1002C9680, v11, v13);
    }

    else
    {
      uint64_t v20 = 0xFFFFFFFFLL;
      NEVirtualInterfaceAddAddressWithLifetime(qword_1002C9680, v11, v13, v19);
    }
  }

  else if (!v11)
  {
    goto LABEL_38;
  }

  CFRelease(v11);
LABEL_38:
  if (v13) {
    CFRelease(v13);
  }
}

void sub_100015DB4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20, char a21, void *a22, uint64_t a23, int a24, __int16 a25, char a26, char a27)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100015E04(void *a1)
{
  __int128 v5 = 0u;
  *(_WORD *)cStr = 14906;
  inet_ntop(30, a1, cStr, 0x2Eu);
  syslog(6, "Remove Address: address_string: %s", cStr);
  CFStringRef v1 = CFStringCreateWithCString(0LL, cStr, 0x8000100u);
  syslog(6, "Remove Address: address: %@", v1);
  if (!v1) {
    return 0xFFFFFFFFLL;
  }
  else {
    uint64_t v2 = 0LL;
  }
  CFRelease(v1);
  return v2;
}

uint64_t sub_100015EF0()
{
  else {
    return 0xFFFFFFFFLL;
  }
}

void sub_100015F24()
{
}

uint64_t sub_100015F3C()
{
  return byte_1002C9E0A;
}

void sub_100015F48()
{
  byte_1002C9E0A = 1;
  BOOL v0 = os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR);
  if (v0) {
    sub_1001FD504(v0, v1, v2, v3, v4, v5, v6, v7);
  }
}

void sub_100015F84(char *a1, char *category)
{
  if (a1 && category)
  {
    os_log_t v4 = os_log_create(a1, category);
    sub_10000AC00(&v15, a1);
    sub_10000AC00(&v13, category);
    std::string v16 = v15;
    *(_OWORD *)std::string __p = v13;
    uint64_t v18 = v14;
    *sub_100016080((uint64_t **)&qword_1002C9688, &v16) = v4;
    if (SHIBYTE(v18) < 0) {
      operator delete(__p[0]);
    }
  }

  else
  {
    BOOL v5 = os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR);
    if (v5) {
      sub_1001FD578(v5, v6, v7, v8, v9, v10, v11, v12);
    }
  }

void sub_100016054( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, char a18)
{
}

void *sub_100016080(uint64_t **a1, std::string *a2)
{
  uint64_t v3 = a2;
  return sub_100016504(a1, (const void **)&a2->__r_.__value_.__l.__data_, (uint64_t)&unk_100222F90, &v3) + 10;
}

uint64_t sub_1000160B4(uint64_t a1)
{
  return a1;
}

void *sub_1000160F4(char *__s, const char *a2)
{
  if ((byte_1002C9E0A & 1) != 0) {
    return &_os_log_default;
  }
  __dst[99] = 0;
  __sa[99] = 0;
  if (__s && a2)
  {
    if (strlen(__s) <= 0x63 && strlen(a2) < 0x64)
    {
      strncpy(__dst, __s, 0x63uLL);
      strncpy(__sa, a2, 0x63uLL);
      sub_10000AC00(&v24, __dst);
      sub_10000AC00(&v22, __sa);
      *(_OWORD *)__int128 v26 = v24;
      uint64_t v27 = v25;
      *(_OWORD *)std::string __p = v22;
      uint64_t v29 = v23;
      if (sub_1000168C4((uint64_t)&qword_1002C9688, (const void **)v26))
      {
        uint64_t v2 = *(void **)(sub_10001692C((uint64_t)&qword_1002C9688, (const void **)v26) + 80);
      }

      else
      {
        uint64_t v2 = &_os_log_default;
        if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          sub_1001FD6D4((uint64_t)__dst, (uint64_t)__sa);
        }
      }

      if (SHIBYTE(v29) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v27) < 0) {
        operator delete(v26[0]);
      }
    }

    else
    {
      uint64_t v2 = &_os_log_default;
      BOOL v5 = os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR);
      if (v5) {
        sub_1001FD660(v5, v6, v7, v8, v9, v10, v11, v12);
      }
    }
  }

  else
  {
    uint64_t v2 = &_os_log_default;
    BOOL v13 = os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR);
    if (v13) {
      sub_1001FD5EC(v13, v14, v15, v16, v17, v18, v19, v20);
    }
  }

  return v2;
}

void sub_1000162A4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, char a18)
{
}

void sub_1000162DC()
{
}

void sub_100016328()
{
}

uint64_t sub_100016448()
{
  return 1LL;
}

uint64_t sub_100016450(uint64_t a1)
{
  return a1;
}

void sub_100016478(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_100016478(a1, *a2);
    sub_100016478(a1, a2[1]);
    sub_1000164C0((uint64_t)(a2 + 4));
    operator delete(a2);
  }

void sub_1000164C0(uint64_t a1)
{
}

void *sub_100016504(uint64_t **a1, const void **a2, uint64_t a3, const std::string **a4)
{
  uint64_t v7 = sub_1000165AC((uint64_t)a1, &v12, a2);
  uint64_t v8 = (void *)*v7;
  if (!*v7)
  {
    uint64_t v9 = (void **)v7;
    sub_10001663C((uint64_t)a1, a3, a4, (uint64_t)v11);
    sub_10000AF70(a1, v12, v9, (void *)v11[0]);
    uint64_t v8 = v11[0];
    v11[0] = 0LL;
    sub_100016868(v11, 0LL);
  }

  return v8;
}

void *sub_1000165AC(uint64_t a1, void *a2, const void **a3)
{
  BOOL v5 = (void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    do
    {
      while (1)
      {
        uint64_t v7 = (void *)v4;
        uint64_t v8 = (const void **)(v4 + 32);
        uint64_t v4 = *v7;
        BOOL v5 = v7;
        if (!*v7) {
          goto LABEL_9;
        }
      }

      BOOL v5 = v7 + 1;
      uint64_t v4 = v7[1];
    }

    while (v4);
  }

  else
  {
    uint64_t v7 = (void *)(a1 + 8);
  }

LABEL_9:
  *a2 = v7;
  return v5;
}

    std::string::push_back(a2, v7);
    --v4;
  }

  while (v4);
}

  *a2 = v7;
  return v5;
}

  *a2 = v7;
  return v5;
}

  *a2 = v5;
  return result;
}

  uint64_t v6 = PBRepeatedUInt32NSArray(&self->_coexRxGrantTimeHistograms);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
  [v3 setObject:v7 forKey:@"coex_rx_grant_time_histogram"];

  uint64_t v8 = PBRepeatedUInt32NSArray(&self->_coexTxGrantTimeHistograms);
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
  [v3 setObject:v9 forKey:@"coex_tx_grant_time_histogram"];

  uint64_t v10 = (__int16)self->_has;
  if ((v10 & 0x400) != 0)
  {
    uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_txGrantedReqPercentage));
    [v3 setObject:v19 forKey:@"tx_granted_req_percentage"];

    uint64_t v10 = (__int16)self->_has;
    if ((v10 & 0x100) == 0)
    {
LABEL_11:
      if ((v10 & 0x200) == 0) {
        goto LABEL_12;
      }
LABEL_24:
      int v21 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_txDeniedReqPercentage));
      [v3 setObject:v21 forKey:@"tx_denied_req_percentage"];

      if ((*(_WORD *)&self->_has & 0x80) == 0) {
        return v3;
      }
      goto LABEL_13;
    }
  }

  else if ((*(_WORD *)&self->_has & 0x100) == 0)
  {
    goto LABEL_11;
  }

  uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_rxGrantedReqPercentage));
  [v3 setObject:v20 forKey:@"rx_granted_req_percentage"];

  uint64_t v10 = (__int16)self->_has;
  if ((v10 & 0x200) != 0) {
    goto LABEL_24;
  }
LABEL_12:
  if ((v10 & 0x80) != 0)
  {
LABEL_13:
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_rxDeniedReqPercentage));
    [v3 setObject:v11 forKey:@"rx_denied_req_percentage"];
  }

  return v3;
}

  if (self->_coexRxGrantTimeHistograms.count)
  {
    uint64_t v6 = 0LL;
    do
    {
      PBDataWriterWriteUint32Field(v9, self->_coexRxGrantTimeHistograms.list[v6], 8LL);
      uint64_t v4 = v9;
      ++v6;
    }

    while (v6 < self->_coexRxGrantTimeHistograms.count);
  }

  if (self->_coexTxGrantTimeHistograms.count)
  {
    uint64_t v7 = 0LL;
    do
    {
      PBDataWriterWriteUint32Field(v9, self->_coexTxGrantTimeHistograms.list[v7], 9LL);
      uint64_t v4 = v9;
      ++v7;
    }

    while (v7 < self->_coexTxGrantTimeHistograms.count);
  }

  uint64_t v8 = (__int16)self->_has;
  if ((v8 & 0x400) != 0)
  {
    PBDataWriterWriteUint32Field(v9, self->_txGrantedReqPercentage, 10LL);
    uint64_t v4 = v9;
    uint64_t v8 = (__int16)self->_has;
    if ((v8 & 0x100) == 0)
    {
LABEL_17:
      if ((v8 & 0x200) == 0) {
        goto LABEL_18;
      }
LABEL_30:
      PBDataWriterWriteUint32Field(v9, self->_txDeniedReqPercentage, 12LL);
      uint64_t v4 = v9;
      if ((*(_WORD *)&self->_has & 0x80) == 0) {
        goto LABEL_20;
      }
      goto LABEL_19;
    }
  }

  else if ((*(_WORD *)&self->_has & 0x100) == 0)
  {
    goto LABEL_17;
  }

  PBDataWriterWriteUint32Field(v9, self->_rxGrantedReqPercentage, 11LL);
  uint64_t v4 = v9;
  uint64_t v8 = (__int16)self->_has;
  if ((v8 & 0x200) != 0) {
    goto LABEL_30;
  }
LABEL_18:
  if ((v8 & 0x80) != 0)
  {
LABEL_19:
    PBDataWriterWriteUint32Field(v9, self->_rxDeniedReqPercentage, 13LL);
    uint64_t v4 = v9;
  }

  BOOL v13 = v4;
  if (-[AWDCountersCoexS coexRxGrantTimeHistogramsCount](self, "coexRxGrantTimeHistogramsCount"))
  {
    [v13 clearCoexRxGrantTimeHistograms];
    uint64_t v6 = -[AWDCountersCoexS coexRxGrantTimeHistogramsCount](self, "coexRxGrantTimeHistogramsCount");
    if (v6)
    {
      uint64_t v7 = v6;
      for (int i = 0LL; i != v7; ++i)
        objc_msgSend( v13,  "addCoexRxGrantTimeHistogram:",  -[AWDCountersCoexS coexRxGrantTimeHistogramAtIndex:](self, "coexRxGrantTimeHistogramAtIndex:", i));
    }
  }

  if (-[AWDCountersCoexS coexTxGrantTimeHistogramsCount](self, "coexTxGrantTimeHistogramsCount"))
  {
    [v13 clearCoexTxGrantTimeHistograms];
    uint64_t v9 = -[AWDCountersCoexS coexTxGrantTimeHistogramsCount](self, "coexTxGrantTimeHistogramsCount");
    if (v9)
    {
      uint64_t v10 = v9;
      for (j = 0LL; j != v10; ++j)
        objc_msgSend( v13,  "addCoexTxGrantTimeHistogram:",  -[AWDCountersCoexS coexTxGrantTimeHistogramAtIndex:](self, "coexTxGrantTimeHistogramAtIndex:", j));
    }
  }

  uint64_t v12 = (__int16)self->_has;
  if ((v12 & 0x400) != 0)
  {
    *((_DWORD *)v13 + 24) = self->_txGrantedReqPercentage;
    *((_WORD *)v13 + 50) |= 0x400u;
    uint64_t v12 = (__int16)self->_has;
    if ((v12 & 0x100) == 0)
    {
LABEL_19:
      if ((v12 & 0x200) == 0) {
        goto LABEL_20;
      }
LABEL_32:
      *((_DWORD *)v13 + 23) = self->_txDeniedReqPercentage;
      *((_WORD *)v13 + 50) |= 0x200u;
      if ((*(_WORD *)&self->_has & 0x80) == 0) {
        goto LABEL_22;
      }
      goto LABEL_21;
    }
  }

  else if ((*(_WORD *)&self->_has & 0x100) == 0)
  {
    goto LABEL_19;
  }

  *((_DWORD *)v13 + 22) = self->_rxGrantedReqPercentage;
  *((_WORD *)v13 + 50) |= 0x100u;
  uint64_t v12 = (__int16)self->_has;
  if ((v12 & 0x200) != 0) {
    goto LABEL_32;
  }
LABEL_20:
  if ((v12 & 0x80) != 0)
  {
LABEL_21:
    *((_DWORD *)v13 + 21) = self->_rxDeniedReqPercentage;
    *((_WORD *)v13 + 50) |= 0x80u;
  }

  PBRepeatedUInt32Copy(v4 + 2, &self->_coexRxGrantTimeHistograms);
  PBRepeatedUInt32Copy(v5 + 8, &self->_coexTxGrantTimeHistograms);
  uint64_t v7 = (__int16)self->_has;
  if ((v7 & 0x400) != 0)
  {
    v5[24] = self->_txGrantedReqPercentage;
    *((_WORD *)v5 + 50) |= 0x400u;
    uint64_t v7 = (__int16)self->_has;
    if ((v7 & 0x100) == 0)
    {
LABEL_11:
      if ((v7 & 0x200) == 0) {
        goto LABEL_12;
      }
LABEL_24:
      void v5[23] = self->_txDeniedReqPercentage;
      *((_WORD *)v5 + 50) |= 0x200u;
      if ((*(_WORD *)&self->_has & 0x80) == 0) {
        return v5;
      }
      goto LABEL_13;
    }
  }

  else if ((*(_WORD *)&self->_has & 0x100) == 0)
  {
    goto LABEL_11;
  }

  v5[22] = self->_rxGrantedReqPercentage;
  *((_WORD *)v5 + 50) |= 0x100u;
  uint64_t v7 = (__int16)self->_has;
  if ((v7 & 0x200) != 0) {
    goto LABEL_24;
  }
LABEL_12:
  if ((v7 & 0x80) != 0)
  {
LABEL_13:
    v5[21] = self->_rxDeniedReqPercentage;
    *((_WORD *)v5 + 50) |= 0x80u;
  }

  return v5;
}

  BOOL v13 = (unsigned int *)v4;
  uint64_t v6 = (char *)[v4 coexRxGrantTimeHistogramsCount];
  if (v6)
  {
    uint64_t v7 = v6;
    for (int i = 0LL; i != v7; ++i)
      -[AWDCountersCoexS addCoexRxGrantTimeHistogram:]( self,  "addCoexRxGrantTimeHistogram:",  [v13 coexRxGrantTimeHistogramAtIndex:i]);
  }

  uint64_t v9 = (char *)[v13 coexTxGrantTimeHistogramsCount];
  if (v9)
  {
    uint64_t v10 = v9;
    for (j = 0LL; j != v10; ++j)
      -[AWDCountersCoexS addCoexTxGrantTimeHistogram:]( self,  "addCoexTxGrantTimeHistogram:",  [v13 coexTxGrantTimeHistogramAtIndex:j]);
  }

  uint64_t v12 = *((_WORD *)v13 + 50);
  if ((v12 & 0x400) != 0)
  {
    self->_txGrantedReqPercentage = v13[24];
    *(_WORD *)&self->_has |= 0x400u;
    uint64_t v12 = *((_WORD *)v13 + 50);
    if ((v12 & 0x100) == 0)
    {
LABEL_17:
      if ((v12 & 0x200) == 0) {
        goto LABEL_18;
      }
LABEL_30:
      self->_txDeniedReqPercentage = v13[23];
      *(_WORD *)&self->_has |= 0x200u;
      if ((v13[25] & 0x80) == 0) {
        goto LABEL_20;
      }
      goto LABEL_19;
    }
  }

  else if ((v13[25] & 0x100) == 0)
  {
    goto LABEL_17;
  }

  self->_rxGrantedReqPercentage = v13[22];
  *(_WORD *)&self->_has |= 0x100u;
  uint64_t v12 = *((_WORD *)v13 + 50);
  if ((v12 & 0x200) != 0) {
    goto LABEL_30;
  }
LABEL_18:
  if ((v12 & 0x80) != 0)
  {
LABEL_19:
    self->_rxDeniedReqPercentage = v13[21];
    *(_WORD *)&self->_has |= 0x80u;
  }

  BOOL v13 = v2;
LABEL_15:

  return v13;
}

  *a2 = v7;
  return v5;
}

  v60 = 0LL;
LABEL_10:
  v59 = -[AWDRadioStatsS hash](self->_sRadioStats, "hash");
  uint64_t v4 = self->_has;
  if ((*(_DWORD *)&v4 & 0x20000) != 0)
  {
    v58 = 2654435761LL * self->_rttMinVal;
    if ((*(_DWORD *)&v4 & 0x10000) != 0)
    {
LABEL_12:
      v57 = 2654435761LL * self->_rttMaxVal;
      if ((*(_WORD *)&v4 & 0x8000) != 0) {
        goto LABEL_13;
      }
      goto LABEL_66;
    }
  }

  else
  {
    v58 = 0LL;
    if ((*(_DWORD *)&v4 & 0x10000) != 0) {
      goto LABEL_12;
    }
  }

  v57 = 0LL;
  if ((*(_WORD *)&v4 & 0x8000) != 0)
  {
LABEL_13:
    v56 = 2654435761LL * self->_rttAvgVal;
    if ((*(_WORD *)&v4 & 0x4000) != 0) {
      goto LABEL_14;
    }
    goto LABEL_67;
  }

  uint64_t v16 = sub_1001768B4(1);
  uint64_t v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v16);
  if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
    sub_1001726A0();
  }
  uint64_t v17 = 0LL;
LABEL_12:

  objc_autoreleasePoolPop(v4);
  return v17;
}

  uint64_t v17 = sub_1001768B4(1);
  uint64_t v18 = (os_log_s *)objc_claimAutoreleasedReturnValue(v17);
  if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
    sub_1001762BC(self);
  }

  uint64_t v16 = 0LL;
  return v16;
}

  uint64_t v27 = sub_1001768B4(1);
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(v27);
  if (os_log_type_enabled((os_log_t)v14, OS_LOG_TYPE_ERROR)) {
    sub_10019EEA8();
  }
  __int128 v26 = 0LL;
LABEL_12:

  return v26;
}

  ot::BorderRouter::BorderAgent::Start(this);
LABEL_10:
  uint64_t v6 = (os_log_s *)sub_1000160F4("com.apple.wpantund.commissioning", "commissioning");
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    if (*((_BYTE *)this + 48)) {
      uint64_t v7 = "initialized";
    }
    else {
      uint64_t v7 = "not initialized";
    }
    uint64_t v8 = 136315138;
    uint64_t v9 = v7;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "PSKc is %s", (uint8_t *)&v8, 0xCu);
  }

std::string *sub_10001663C@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, const std::string **a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a1 + 8;
  uint64_t v8 = (char *)operator new(0x58uLL);
  *(void *)a4 = v8;
  *(void *)(a4 + 8) = v7;
  *(_BYTE *)(a4 + 16) = 0;
  uint64_t result = sub_1000167F8(v7, (std::string *)(v8 + 32), a2, a3);
  *(_BYTE *)(a4 + 16) = 1;
  return result;
}

void sub_1000166A8(_Unwind_Exception *a1)
{
}

uint64_t sub_1000166C0(const void **a1, const void **a2)
{
  uint64_t v2 = a2;
  uint64_t v3 = a1;
  size_t v4 = *((unsigned __int8 *)a2 + 23);
  size_t v5 = (size_t)a2[1];
  if ((v4 & 0x80u) == 0LL)
  {
    size_t v6 = *((unsigned __int8 *)a2 + 23);
  }

  else
  {
    a2 = (const void **)*a2;
    size_t v6 = v5;
  }

  size_t v7 = *((unsigned __int8 *)a1 + 23);
  if ((v7 & 0x80u) == 0LL) {
    size_t v8 = *((unsigned __int8 *)a1 + 23);
  }
  else {
    size_t v8 = (size_t)a1[1];
  }
  if ((v7 & 0x80u) != 0LL) {
    a1 = (const void **)*a1;
  }
  if (v6 >= v8) {
    size_t v9 = v8;
  }
  else {
    size_t v9 = v6;
  }
  int v10 = memcmp(a1, a2, v9);
  BOOL v11 = v8 < v6;
  if (v10) {
    BOOL v11 = v10 < 0;
  }
  if (v11) {
    return 1LL;
  }
  if ((v7 & 0x80u) == 0LL) {
    BOOL v13 = v3;
  }
  else {
    BOOL v13 = *v3;
  }
  if ((v7 & 0x80u) != 0LL) {
    size_t v7 = (size_t)v3[1];
  }
  if ((v4 & 0x80u) == 0LL)
  {
    uint64_t v14 = v2;
  }

  else
  {
    size_t v4 = (size_t)v2[1];
    uint64_t v14 = *v2;
  }

  if (v7 >= v4) {
    size_t v15 = v4;
  }
  else {
    size_t v15 = v7;
  }
  int v16 = memcmp(v14, v13, v15);
  BOOL v17 = v4 < v7;
  if (v16) {
    BOOL v17 = v16 < 0;
  }
  if (v17) {
    return 0LL;
  }
  uint64_t v20 = (const void **)v2[3];
  uint64_t v19 = v2 + 3;
  uint64_t v18 = v20;
  int v21 = *((char *)v19 + 23);
  if (v21 >= 0) {
    __int128 v22 = v19;
  }
  else {
    __int128 v22 = v18;
  }
  if (v21 >= 0) {
    size_t v23 = *((unsigned __int8 *)v19 + 23);
  }
  else {
    size_t v23 = (size_t)v19[1];
  }
  __int128 v26 = (const void **)v3[3];
  uint64_t v25 = v3 + 3;
  __int128 v24 = v26;
  int v27 = *((char *)v25 + 23);
  if (v27 >= 0) {
    size_t v28 = *((unsigned __int8 *)v25 + 23);
  }
  else {
    size_t v28 = (size_t)v25[1];
  }
  if (v27 >= 0) {
    uint64_t v29 = v25;
  }
  else {
    uint64_t v29 = v24;
  }
  if (v23 >= v28) {
    size_t v30 = v28;
  }
  else {
    size_t v30 = v23;
  }
  int v31 = memcmp(v29, v22, v30);
  if (v31) {
    return v31 < 0;
  }
  else {
    return v28 < v23;
  }
}

std::string *sub_1000167F8(uint64_t a1, std::string *a2, uint64_t a3, const std::string **a4)
{
  uint64_t result = sub_100016818(a2, *a4);
  result[2].__r_.__value_.__r.__words[0] = 0LL;
  return result;
}

std::string *sub_100016818(std::string *a1, const std::string *a2)
{
  size_t v4 = std::string::basic_string(a1, a2);
  std::string::basic_string(v4 + 1, a2 + 1);
  return a1;
}

void sub_10001684C(_Unwind_Exception *exception_object)
{
}

void sub_100016868(void **a1, void *a2)
{
  uint64_t v3 = *a1;
  *a1 = a2;
  if (v3) {
    sub_100016884((uint64_t)(a1 + 1), v3);
  }
}

void sub_100016884(uint64_t a1, void *__p)
{
  if (*(_BYTE *)(a1 + 8)) {
    sub_1000164C0((uint64_t)__p + 32);
  }
  if (__p) {
    operator delete(__p);
  }
}

uint64_t sub_1000168C4(uint64_t a1, const void **a2)
{
  uint64_t v2 = *(const void ***)(a1 + 8);
  if (v2)
  {
    uint64_t v4 = 1LL;
    do
    {
      if ((sub_1000166C0(a2, v2 + 4) & 1) == 0)
      {
        ++v2;
      }

      uint64_t v2 = (const void **)*v2;
    }

    while (v2);
  }

  return 0LL;
}

uint64_t sub_10001692C(uint64_t a1, const void **a2)
{
  uint64_t v3 = a1 + 8;
  uint64_t v4 = sub_100016984(a1, a2, *(void *)(a1 + 8), a1 + 8);
  if (v3 != v4)
  {
    uint64_t v5 = v4;
  }

  return v3;
}

uint64_t sub_100016984(uint64_t a1, const void **a2, uint64_t a3, uint64_t a4)
{
  if (a3)
  {
    uint64_t v5 = a3;
    do
    {
      int v7 = sub_1000166C0((const void **)(v5 + 32), a2);
      size_t v8 = (uint64_t *)(v5 + 8);
      if (!v7)
      {
        size_t v8 = (uint64_t *)v5;
        a4 = v5;
      }

      uint64_t v5 = *v8;
    }

    while (*v8);
  }

  return a4;
}

void sub_1000169DC( void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

uint64_t sub_1000169EC()
{
  qword_1002C9698 = 0LL;
  qword_1002C9690 = 0LL;
  qword_1002C9688 = (uint64_t)&qword_1002C9690;
  return __cxa_atexit((void (*)(void *))sub_100015F38, &qword_1002C9688, (void *)&_mh_execute_header);
}

void *sub_100016A18(void *a1, void *a2, dispatch_object_s **a3)
{
  a1[3] = 0LL;
  a1[4] = 0LL;
  a1[5] = 0LL;
  a1[7] = 0LL;
  a1[6] = a1 + 7;
  a1[8] = 0LL;
  a1[9] = 0LL;
  uint64_t v5 = a1 + 10;
  sub_10000AB5C(a1 + 10, a2);
  sub_100016B6C((uint64_t)a1);
  size_t v6 = *a3;
  if (v6) {
    dispatch_retain(v6);
  }
  int v7 = (dispatch_object_s *)a1[9];
  a1[9] = v6;
  if (v7) {
    dispatch_release(v7);
  }
  if (*v5)
  {
    size_t v8 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v8)
    {
      if (sub_10015A058(5) && os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)int v10 = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_INFO,  "WPANTUND_v0: Call back table initialized",  v10,  2u);
      }
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }
  }

  return a1;
}

void sub_100016B30(_Unwind_Exception *a1)
{
  size_t v6 = *(dispatch_object_s **)(v1 + 72);
  if (v6) {
    dispatch_release(v6);
  }
  sub_100018F0C(v2);
  _Unwind_Resume(a1);
}

void sub_100016B6C(uint64_t a1)
{
  *(void *)&__int128 v15 = sub_1000170B0;
  *((void *)&v15 + 1) = 0LL;
  uint64_t v16 = a1;
  uint64_t v2 = (uint64_t **)(a1 + 48);
  sub_10000AC00(&v13, "Join");
  uint64_t v3 = sub_100016DAC(v2, &v13);
  sub_100016DE0(v3, &v15);
  if (v14 < 0) {
    operator delete((void *)v13);
  }
  *(void *)&__int128 v11 = sub_100017950;
  *((void *)&v11 + 1) = 0LL;
  uint64_t v12 = a1;
  sub_10000AC00(&v13, "Form");
  uint64_t v4 = sub_100016DAC(v2, &v13);
  sub_100016DE0(v4, &v11);
  if (v14 < 0) {
    operator delete((void *)v13);
  }
  *(void *)&__int128 v9 = sub_10001807C;
  *((void *)&v9 + 1) = 0LL;
  uint64_t v10 = a1;
  sub_10000AC00(&v13, "BeginNetWake");
  uint64_t v5 = sub_100016DAC(v2, &v13);
  sub_100016DE0(v5, &v9);
  if (v14 < 0) {
    operator delete((void *)v13);
  }
  *(void *)&__int128 v7 = sub_100018390;
  *((void *)&v7 + 1) = 0LL;
  uint64_t v8 = a1;
  sub_10000AC00(&v13, "PermitJoin");
  size_t v6 = sub_100016DAC(v2, &v13);
  sub_100016DE0(v6, &v7);
  if (v14 < 0) {
    operator delete((void *)v13);
  }
}

void sub_100016CA4(_Unwind_Exception *exception_object)
{
}

uint64_t sub_100016CD0(uint64_t a1)
{
  uint64_t v2 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v2)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "WPANTUND_v0: Destructor", v5, 2u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  sub_10000AB80(a1 + 80);
  uint64_t v3 = *(dispatch_object_s **)(a1 + 72);
  if (v3) {
    dispatch_release(v3);
  }
  sub_100018F0C(a1 + 48);
  return a1;
}

void *sub_100016DAC(uint64_t **a1, __int128 *a2)
{
  uint64_t v3 = a2;
  return sub_100018FE0(a1, (const void **)a2, (uint64_t)&unk_100222F95, &v3) + 7;
}

uint64_t *sub_100016DE0(uint64_t *a1, __int128 *a2)
{
  __int128 v5 = *a2;
  uint64_t v6 = *((void *)a2 + 2);
  uint64_t v4 = (uint64_t)off_1002ADFD0 + 1;
  sub_100019194(&v4, a1);
  sub_100018FB8(&v4);
  return a1;
}

void sub_100016E3C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100016E50(uint64_t a1, int a2, uint64_t a3, uint64_t **a4, const char *a5, uint64_t a6)
{
  xpc_object_t v10 = xpc_dictionary_create(0LL, 0LL, 0LL);
  xpc_dictionary_set_int64(v10, "ret", a2);
  __int128 v11 = a5;
  if (a5[23] < 0) {
    __int128 v11 = *(const char **)a5;
  }
  xpc_dictionary_set_string(v10, "method", v11);
  uint64_t v12 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v12)
  {
    __int128 v13 = v12;
    if (sub_10015A058(5) && os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
    {
      if (a5[23] < 0) {
        a5 = *(const char **)a5;
      }
      *(_DWORD *)BOOL v17 = 136315394;
      *(void *)&v17[4] = a5;
      *(_WORD *)&v17[12] = 2080;
      *(void *)&v17[14] = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_INFO,  "WPANTUND_v0 Sending XPC response for method %s to %s",  v17,  0x16u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  if (!v10) {
    xpc_object_t v10 = xpc_null_create();
  }
  if (*(void *)a6) {
    char v14 = _Block_copy(*(const void **)a6);
  }
  else {
    char v14 = 0LL;
  }
  __int128 v15 = *(dispatch_queue_s **)(a6 + 8);
  *(void *)BOOL v17 = _NSConcreteStackBlock;
  *(void *)&v17[8] = 1174405120LL;
  *(void *)&v17[16] = sub_100019548;
  uint64_t v18 = &unk_1002ADFF0;
  if (v14) {
    uint64_t v16 = _Block_copy(v14);
  }
  else {
    uint64_t v16 = 0LL;
  }
  int v21 = 0;
  aBlock = v16;
  xpc_object_t object = v10;
  if (v10) {
    xpc_retain(v10);
  }
  else {
    xpc_object_t object = xpc_null_create();
  }
  dispatch_async(v15, v17);
  xpc_release(object);
  xpc_object_t object = 0LL;
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v14) {
    _Block_release(v14);
  }
  xpc_release(v10);
}

void sub_100017070(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    sub_100006EEC(a1);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1000170B0(uint64_t a1, uint64_t a2, xpc_object_t xdict, const std::string *a4, uint64_t a5)
{
  v42[0] = 0LL;
  v42[1] = 0LL;
  dispatch_object_t v41 = v42;
  __int16 v39 = -1;
  char v38 = 0;
  string = (char *)xpc_dictionary_get_string(xdict, "method");
  sub_10000AC00(&__str, string);
  __int128 v11 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v11)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      uint64_t v12 = a4;
      *(_DWORD *)std::string buf = 136315394;
      *(void *)&uint8_t buf[4] = string;
      __int16 v44 = 2080;
      uint64_t v45 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_INFO,  "WPANTUND_v0 Handling %s method handler for %s",  buf,  0x16u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  __int128 v13 = (char *)xpc_dictionary_get_string(xdict, "network_name");
  __int16 int64 = xpc_dictionary_get_int64(xdict, "node_type");
  u__int16 int64 = xpc_dictionary_get_uint64(xdict, "xpanid");
  __int16 v39 = xpc_dictionary_get_uint64(xdict, "pan_id");
  char v38 = xpc_dictionary_get_uint64(xdict, "channel");
  sub_10000AC00(buf, v13);
  sub_10000AC00(&v35, "Network:Name");
  __int128 v15 = sub_10000ED88(&v41, &v35);
  sub_1000175B4(v15, (uint64_t)buf);
  if (v36 < 0) {
    operator delete((void *)v35.n128_u64[0]);
  }
  if (v46 < 0) {
    operator delete(*(void **)buf);
  }
  sub_10000AC00(buf, "Network:XPANID");
  uint64_t v16 = sub_10000ED88(&v41, (__n128 *)buf);
  sub_100017620(v16, (uint64_t *)&uint64);
  if (v46 < 0) {
    operator delete(*(void **)buf);
  }
  sub_10000AC00(buf, "Network:PANID");
  BOOL v17 = sub_10000ED88(&v41, (__n128 *)buf);
  sub_100017678(v17, &v39);
  if (v46 < 0) {
    operator delete(*(void **)buf);
  }
  sub_10000AC00(buf, "NCP:Channel");
  uint64_t v18 = sub_10000ED88(&v41, (__n128 *)buf);
  sub_1000176D4(v18, &v38);
  if (v46 < 0) {
    operator delete(*(void **)buf);
  }
  if (int64)
  {
    v35.n128_u32[0] = int64;
    sub_10000AC00(buf, "Network:NodeType");
    uint64_t v19 = sub_10000ED88(&v41, (__n128 *)buf);
    sub_100017730(v19, &v35);
    if (v46 < 0) {
      operator delete(*(void **)buf);
    }
  }

  std::string::basic_string(&v26, a4);
  std::string::basic_string(&v25, &__str);
  uint64_t v20 = *(void **)a5;
  if (*(void *)a5) {
    uint64_t v20 = _Block_copy(v20);
  }
  int v21 = *(dispatch_object_s **)(a5 + 8);
  size_t v23 = v20;
  dispatch_object_t v24 = v21;
  if (v21) {
    dispatch_retain(v21);
  }
  sub_10001778C(&v26, (uint64_t)sub_100016E50, 0LL, a1, (uint64_t)xdict, &v25, (uint64_t)&v23, v27);
  sub_100019BF4(v34, v27);
  (*(void (**)(uint64_t, uint64_t **, uint64_t (***)()))(*(void *)a2 + 8LL))(a2, &v41, v34);
  sub_1000075F0(v34);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v31 < 0) {
    operator delete(__p);
  }
  if (v29 < 0) {
    operator delete(v28);
  }
  if (v24) {
    dispatch_release(v24);
  }
  if (v23) {
    _Block_release(v23);
  }
  return sub_10000D448((uint64_t)&v41);
}

void sub_1000174B8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20, __int16 a21, char a22, char a23, char a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, char a36)
{
}

uint64_t *sub_1000175B4(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = (char *)operator new(0x20uLL);
  *(void *)uint64_t v4 = &off_1002AE030;
  *(_OWORD *)(v4 + 8) = *(_OWORD *)a2;
  *((void *)v4 + 3) = *(void *)(a2 + 16);
  *(void *)a2 = 0LL;
  *(void *)(a2 + 8) = 0LL;
  *(void *)(a2 + 16) = 0LL;
  uint64_t v5 = *a1;
  *a1 = (uint64_t)v4;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
  }
  return a1;
}

uint64_t *sub_100017620(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = operator new(0x10uLL);
  uint64_t v5 = *a2;
  *uint64_t v4 = &off_1002AE088;
  v4[1] = v5;
  uint64_t v6 = *a1;
  *a1 = (uint64_t)v4;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8LL))(v6);
  }
  return a1;
}

uint64_t *sub_100017678(uint64_t *a1, _WORD *a2)
{
  uint64_t v4 = operator new(0x10uLL);
  *(void *)uint64_t v4 = &off_1002AE0D0;
  uint64_t v4[4] = *a2;
  uint64_t v5 = *a1;
  *a1 = (uint64_t)v4;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
  }
  return a1;
}

uint64_t *sub_1000176D4(uint64_t *a1, _BYTE *a2)
{
  uint64_t v4 = operator new(0x10uLL);
  *(void *)uint64_t v4 = &off_1002AE118;
  v4[8] = *a2;
  uint64_t v5 = *a1;
  *a1 = (uint64_t)v4;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
  }
  return a1;
}

uint64_t *sub_100017730(uint64_t *a1, _DWORD *a2)
{
  uint64_t v4 = operator new(0x10uLL);
  *(void *)uint64_t v4 = &off_1002AE160;
  uint64_t v4[2] = *a2;
  uint64_t v5 = *a1;
  *a1 = (uint64_t)v4;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
  }
  return a1;
}

void sub_10001778C( std::string *__str@<X4>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X2>, uint64_t a5@<X3>, const std::string *a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  *a8 = a2;
  a8[1] = a3;
  sub_100019B68((uint64_t)(a8 + 2), (uint64_t)v19);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v23 < 0) {
    operator delete(__p);
  }
  if (v21 < 0) {
    operator delete(v20);
  }
  if (v16) {
    dispatch_release(v16);
  }
  if (v15) {
    _Block_release(v15);
  }
}

void sub_1000178A8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20, char a21, char a22, char a23)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1000178F4(uint64_t a1)
{
  uint64_t v2 = *(dispatch_object_s **)(a1 + 88);
  if (v2) {
    dispatch_release(v2);
  }
  uint64_t v3 = *(const void **)(a1 + 80);
  if (v3) {
    _Block_release(v3);
  }
  return a1;
}

uint64_t sub_100017950(uint64_t a1, uint64_t a2, xpc_object_t xdict, const std::string *a4, uint64_t a5)
{
  v46[0] = 0LL;
  v46[1] = 0LL;
  uint64_t v45 = v46;
  u__int16 int64 = 0;
  string = (char *)xpc_dictionary_get_string(xdict, "method");
  sub_10000AC00(&__str, string);
  __int128 v11 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v11)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      uint64_t v12 = a4;
      *(_DWORD *)std::string buf = 136315394;
      *(void *)&uint8_t buf[4] = string;
      __int16 v48 = 2080;
      int v49 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_INFO,  "WPANTUND_v0 Handling %s method handler for %s",  buf,  0x16u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  __int128 v13 = (char *)xpc_dictionary_get_string(xdict, "network_name");
  __int16 int64 = xpc_dictionary_get_int64(xdict, "node_type");
  u__int16 int64 = xpc_dictionary_get_uint64(xdict, "channel_mask");
  int v15 = xpc_dictionary_get_int64(xdict, "ula_prefix_length");
  size_t length = 0LL;
  uint64_t data = xpc_dictionary_get_data(xdict, "ula_prefix", &length);
  if (int64)
  {
    __p.n128_u32[0] = int64;
    sub_10000AC00(buf, "Network:NodeType");
    std::string v17 = sub_10000ED88(&v45, (__n128 *)buf);
    sub_100017730(v17, &__p);
    if (v50 < 0) {
      operator delete(*(void **)buf);
    }
  }

  if (uint64
    && (sub_10000AC00(buf, "NCP:ChannelMask"),
        uint64_t v18 = sub_10000ED88(&v45, (__n128 *)buf),
        sub_100017F70(v18, &uint64),
        v50 < 0))
  {
    operator delete(*(void **)buf);
    if (!v15) {
      goto LABEL_18;
    }
  }

  else if (!v15)
  {
    goto LABEL_18;
  }

  sub_100018E5C(buf, data, (uint64_t)data + v15);
  sub_10000AC00(&__p, "com.nestlabs.internal:Legacy:MeshLocalPrefix");
  uint64_t v19 = sub_10000ED88(&v45, &__p);
  sub_100017FCC(v19, (__n128 *)buf);
  if (v41 < 0) {
    operator delete((void *)__p.n128_u64[0]);
  }
  __p.n128_u64[0] = (unint64_t)buf;
  sub_100006F6C((void ***)&__p);
LABEL_18:
  __p.n128_u64[0] = 0LL;
  sub_10000AC00(buf, "IPv6:MeshLocalPrefix");
  sub_1000FC7CC(a2, (uint64_t)buf, &v39);
  unint64_t v21 = v39;
  unint64_t v20 = __p.n128_u64[0];
  unint64_t v39 = 0LL;
  __p.n128_u64[0] = v21;
  if (v20)
  {
    (*(void (**)(unint64_t))(*(void *)v20 + 8LL))(v20);
    if (v39) {
      (*(void (**)(unint64_t))(*(void *)v39 + 8LL))(v39);
    }
  }

  if (v50 < 0) {
    operator delete(*(void **)buf);
  }
  if (__p.n128_u64[0])
  {
    sub_10000AC00(buf, "IPv6:MeshLocalPrefix");
    __int128 v22 = sub_10000ED88(&v45, (__n128 *)buf);
    sub_100018024(v22, &__p);
    if (v50 < 0) {
      operator delete(*(void **)buf);
    }
    if (__p.n128_u64[0]) {
      (*(void (**)(unint64_t))(*(void *)__p.n128_u64[0] + 8LL))(__p.n128_u64[0]);
    }
  }

  sub_10000AC00(buf, v13);
  sub_10000AC00(&__p, "Network:Name");
  char v23 = sub_10000ED88(&v45, &__p);
  sub_1000175B4(v23, (uint64_t)buf);
  if (v41 < 0) {
    operator delete((void *)__p.n128_u64[0]);
  }
  if (v50 < 0) {
    operator delete(*(void **)buf);
  }
  std::string::basic_string(&v30, a4);
  std::string::basic_string(&v29, &__str);
  dispatch_object_t v24 = *(void **)a5;
  if (*(void *)a5) {
    dispatch_object_t v24 = _Block_copy(v24);
  }
  std::string v25 = *(dispatch_object_s **)(a5 + 8);
  int v27 = v24;
  dispatch_object_t v28 = v25;
  if (v25) {
    dispatch_retain(v25);
  }
  sub_10001778C(&v30, (uint64_t)sub_100016E50, 0LL, a1, (uint64_t)xdict, &v29, (uint64_t)&v27, v31);
  sub_100019BF4(v38, v31);
  (*(void (**)(uint64_t, uint64_t **, uint64_t (***)()))(*(void *)a2 + 16LL))(a2, &v45, v38);
  sub_1000075F0(v38);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v35 < 0) {
    operator delete(v34);
  }
  if (v33 < 0) {
    operator delete(v32);
  }
  if (v28) {
    dispatch_release(v28);
  }
  if (v27) {
    _Block_release(v27);
  }
  return sub_10000D448((uint64_t)&v45);
}

void sub_100017E10( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20, char a21, char a22, char a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, char a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, void *a40, uint64_t a41, int a42, __int16 a43, char a44, char a45)
{
}

uint64_t *sub_100017F70(uint64_t *a1, _DWORD *a2)
{
  uint64_t v4 = operator new(0x10uLL);
  *(void *)uint64_t v4 = &off_1002AE1C8;
  uint64_t v4[2] = *a2;
  uint64_t v5 = *a1;
  *a1 = (uint64_t)v4;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
  }
  return a1;
}

uint64_t *sub_100017FCC(uint64_t *a1, __n128 *a2)
{
  uint64_t v4 = operator new(0x20uLL);
  __n128 v5 = sub_10001A3BC(v4, a2);
  uint64_t v6 = *a1;
  *a1 = (uint64_t)v4;
  if (v6) {
    (*(void (**)(uint64_t, __n128))(*(void *)v6 + 8LL))(v6, v5);
  }
  return a1;
}

uint64_t *sub_100018024(uint64_t *a1, void *a2)
{
  if (*a2) {
    uint64_t v3 = (*(uint64_t (**)(void))(*(void *)*a2 + 24LL))(*a2);
  }
  else {
    uint64_t v3 = 0LL;
  }
  uint64_t v4 = *a1;
  *a1 = v3;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
  }
  return a1;
}

void sub_10001807C(uint64_t a1, uint64_t a2, xpc_object_t xdict, const std::string *a4, uint64_t a5)
{
  string = (char *)xpc_dictionary_get_string(xdict, "method");
  sub_10000AC00(&__str, string);
  __int128 v11 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v11)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      uint64_t v12 = a4;
      *(_DWORD *)std::string buf = 136315394;
      char v31 = string;
      __int16 v32 = 2080;
      char v33 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_INFO,  "WPANTUND_v0 Handling %s method handler for %s",  buf,  0x16u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  u__int16 int64 = xpc_dictionary_get_uint64(xdict, "net_wake_flags");
  unsigned __int8 v14 = xpc_dictionary_get_uint64(xdict, "net_wake_data");
  std::string::basic_string(&v20, a4);
  std::string::basic_string(&v19, &__str);
  int v15 = *(void **)a5;
  if (*(void *)a5) {
    int v15 = _Block_copy(v15);
  }
  dispatch_object_t v16 = *(dispatch_object_s **)(a5 + 8);
  std::string v17 = v15;
  dispatch_object_t v18 = v16;
  if (v16) {
    dispatch_retain(v16);
  }
  sub_10001778C(&v20, (uint64_t)sub_100016E50, 0LL, a1, (uint64_t)xdict, &v19, (uint64_t)&v17, v21);
  sub_100019BF4(v28, v21);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t (***)()))(*(void *)a2 + 344LL))( a2,  v14,  uint64,  v28);
  sub_1000075F0(v28);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v25 < 0) {
    operator delete(__p);
  }
  if (v23 < 0) {
    operator delete(v22);
  }
  if (v18) {
    dispatch_release(v18);
  }
  if (v17) {
    _Block_release(v17);
  }
}

void sub_1000182F8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20, __int16 a21, char a22, char a23, char a24)
{
  if (a2) {
    sub_100006EEC(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_100018390(uint64_t a1, uint64_t a2, xpc_object_t xdict, const std::string *a4, uint64_t a5)
{
  string = (char *)xpc_dictionary_get_string(xdict, "method");
  sub_10000AC00(&__str, string);
  __int128 v11 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v11)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      uint64_t v12 = a4;
      *(_DWORD *)std::string buf = 136315394;
      char v33 = string;
      __int16 v34 = 2080;
      char v35 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_INFO,  "WPANTUND_v0 Handling %s method handler for %s",  buf,  0x16u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  LODWORD(v13) = xpc_dictionary_get_int64(xdict, "period");
  BOOL v14 = xpc_dictionary_get_BOOL(xdict, "network_wide");
  u__int16 int64 = xpc_dictionary_get_uint64(xdict, "commissioning_traffic_port");
  unsigned __int8 v16 = xpc_dictionary_get_uint64(xdict, "commissioning_traffic_type");
  if ((_DWORD)v13 == -1) {
    uint64_t v13 = 300LL;
  }
  else {
    uint64_t v13 = v13;
  }
  std::string::basic_string(&v22, a4);
  std::string::basic_string(&v21, &__str);
  std::string v17 = *(void **)a5;
  if (*(void *)a5) {
    std::string v17 = _Block_copy(v17);
  }
  dispatch_object_t v18 = *(dispatch_object_s **)(a5 + 8);
  std::string v19 = v17;
  dispatch_object_t v20 = v18;
  if (v18) {
    dispatch_retain(v18);
  }
  sub_10001778C(&v22, (uint64_t)sub_100016E50, 0LL, a1, (uint64_t)xdict, &v21, (uint64_t)&v19, v23);
  sub_100019BF4(v30, v23);
  (*(void (**)(uint64_t, uint64_t, void, void, BOOL, uint64_t (***)()))(*(void *)a2 + 352LL))( a2,  v13,  v16,  bswap32(uint64) >> 16,  v14,  v30);
  sub_1000075F0(v30);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v27 < 0) {
    operator delete(__p);
  }
  if (v25 < 0) {
    operator delete(v24);
  }
  if (v20) {
    dispatch_release(v20);
  }
  if (v19) {
    _Block_release(v19);
  }
}

void sub_100018654( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20, __int16 a21, char a22, char a23, char a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, char a36)
{
  if (a2) {
    sub_100006EEC(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_1000186EC(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 16) = a2;
  (*(void (**)(void **__return_ptr, uint64_t))(*(void *)a2 + 360LL))(__p, a2);
  uint64_t v3 = (void *)(a1 + 24);
  sub_100014D08(a1 + 24, (__int128 *)__p);
  if (v6 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v4 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v4)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      LODWORD(__p[0]) = 136315138;
      *(void **)((char *)__p + 4) = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_INFO,  "WPANTUND_V0 - Interface added %s",  (uint8_t *)__p,  0xCu);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

void sub_100018814(uint64_t a1, uint64_t a2, const std::string *a3, xpc_object_t xdict, uint64_t a5)
{
  string = (char *)xpc_dictionary_get_string(xdict, "method");
  __int128 v11 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v11)
  {
    uint64_t v12 = v11;
    if (sub_10015A058(5) && os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
    {
      uint64_t v13 = a3;
      *(_DWORD *)std::string buf = 136315394;
      *(void *)&uint8_t buf[4] = string;
      __int16 v21 = 2080;
      std::string v22 = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_INFO,  "WPANTUND_V0->MH: Inbound XPC message for method %s from %s",  buf,  0x16u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  sub_10000AC00(buf, string);
  BOOL v14 = sub_100016DAC((uint64_t **)(a1 + 48), (__int128 *)buf);
  std::string::basic_string(&v19, a3);
  int v15 = *(void **)a5;
  if (*(void *)a5) {
    int v15 = _Block_copy(v15);
  }
  unsigned __int8 v16 = *(dispatch_object_s **)(a5 + 8);
  aBlock = v15;
  dispatch_object_t object = v16;
  if (v16) {
    dispatch_retain(v16);
  }
  sub_100018A34(v14, a2, (uint64_t)xdict, (__int128 *)&v19, (uint64_t)&aBlock);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v23 < 0) {
    operator delete(*(void **)buf);
  }
}

void sub_1000189DC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20, __int16 a21, char a22, char a23)
{
  if (a2) {
    sub_100006EEC(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_100018A34(void *a1, uint64_t a2, uint64_t a3, __int128 *a4, uint64_t a5)
{
  if (!*a1)
  {
    __int128 v7 = std::runtime_error::runtime_error(&v11, "call to empty boost::function");
    v11.__vftable = (std::runtime_error_vtbl *)&off_1002AD8D8;
    sub_10000706C(v7);
  }

  __n128 v5 = *(void (**)(void *, uint64_t, uint64_t, void **, dispatch_object_t *))((*a1 & 0xFFFFFFFFFFFFFFFELL) + 8);
  __int128 v6 = *a4;
  uint64_t v10 = *((void *)a4 + 2);
  *((void *)a4 + 1) = 0LL;
  *((void *)a4 + 2) = 0LL;
  *(void *)a4 = 0LL;
  *(_OWORD *)dispatch_object_t object = *(_OWORD *)a5;
  *(_OWORD *)__n128 __p = v6;
  *(void *)a5 = 0LL;
  *(void *)(a5 + 8) = 0LL;
  v5(a1 + 1, a2, a3, __p, object);
  if (object[1]) {
    dispatch_release(object[1]);
  }
  if (object[0]) {
    _Block_release(object[0]);
  }
  if (SHIBYTE(v10) < 0) {
    operator delete(__p[0]);
  }
}

void sub_100018AE8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_100018B1C(uint64_t a1, const std::string *a2, void *a3, uint64_t a4)
{
  uint64_t v8 = std::string::append(&v21, "/");
  __int128 v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  buf.__r_.__value_.__l.__cap_ = v8->__r_.__value_.__l.__cap_;
  *(_OWORD *)&buf.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0LL;
  v8->__r_.__value_.__l.__cap_ = 0LL;
  v8->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v10 = sub_10000D650(&buf, (const std::string::value_type *)(a1 + 24));
  __int128 v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  int64_t cap = v10->__r_.__value_.__l.__cap_;
  *(_OWORD *)__n128 __p = v11;
  v10->__r_.__value_.__l.__size_ = 0LL;
  v10->__r_.__value_.__l.__cap_ = 0LL;
  v10->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v12 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v12)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
    {
      uint64_t v13 = __p;
      if (cap < 0) {
        uint64_t v13 = (void **)__p[0];
      }
      std::string::size_type v14 = (std::string::size_type)a2;
      LODWORD(buf.__r_.__value_.__l.__data_) = 136315394;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v13;
      WORD2(buf.__r_.__value_.__r.__words[1]) = 2080;
      *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v14;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_INFO,  "WPANTUND_V0->XMH: Inbound XPC message for INTERFACE %s from %s",  (uint8_t *)&buf,  0x16u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  uint64_t v15 = *(void *)(a1 + 16);
  std::string::basic_string(&v20, a2);
  unsigned __int8 v16 = *(void **)a4;
  if (*(void *)a4) {
    unsigned __int8 v16 = _Block_copy(v16);
  }
  std::string v17 = *(dispatch_object_s **)(a4 + 8);
  aBlock = v16;
  dispatch_object_t object = v17;
  if (v17) {
    dispatch_retain(v17);
  }
  sub_100018814(a1, v15, &v20, a3, (uint64_t)&aBlock);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (SHIBYTE(cap) < 0) {
    operator delete(__p[0]);
  }
}

void sub_100018D3C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, int a19, __int16 a20, char a21, char a22, void *a23, uint64_t a24, int a25, __int16 a26, char a27, char a28)
{
  if (a2) {
    sub_100006EEC(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100018DC4(uint64_t a1)
{
  uint64_t v2 = *(dispatch_object_s **)(a1 + 72);
  if (v2) {
    dispatch_release(v2);
  }
  uint64_t v3 = *(const void **)(a1 + 64);
  if (v3) {
    _Block_release(v3);
  }
  return a1;
}

uint64_t sub_100018E20(uint64_t a1)
{
  uint64_t v2 = *(dispatch_object_s **)(a1 + 8);
  if (v2) {
    dispatch_release(v2);
  }
  if (*(void *)a1) {
    _Block_release(*(const void **)a1);
  }
  return a1;
}

void *sub_100018E5C(void *a1, const void *a2, uint64_t a3)
{
  *a1 = 0LL;
  a1[1] = 0LL;
  a1[2] = 0LL;
  sub_100018E8C(a1, a2, a3, a3 - (void)a2);
  return a1;
}

void *sub_100018E8C(void *result, const void *a2, uint64_t a3, size_t __sz)
{
  if (__sz)
  {
    __int128 v6 = result;
    uint64_t result = sub_10000CCB0(result, __sz);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      uint64_t result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }

  return result;
}

void sub_100018EF8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
}

uint64_t sub_100018F0C(uint64_t a1)
{
  return a1;
}

void sub_100018F34(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_100018F34(a1, *a2);
    sub_100018F34(a1, a2[1]);
    sub_100018F7C((uint64_t)(a2 + 4));
    operator delete(a2);
  }

void sub_100018F7C(uint64_t a1)
{
}

void *sub_100018FB8(void *a1)
{
  return a1;
}

void *sub_100018FE0(uint64_t **a1, const void **a2, uint64_t a3, __int128 **a4)
{
  uint64_t v7 = sub_10000AE50((uint64_t)a1, &v12, a2);
  size_t v8 = (void *)*v7;
  if (!*v7)
  {
    __int128 v9 = (void **)v7;
    sub_100019088((uint64_t)a1, a3, a4, (uint64_t)v11);
    sub_10000AF70(a1, v12, v9, (void *)v11[0]);
    size_t v8 = v11[0];
    v11[0] = 0LL;
    sub_100019138(v11, 0LL);
  }

  return v8;
}

void sub_100019088(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 **a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a1 + 8;
  size_t v8 = operator new(0x58uLL);
  *(void *)a4 = v8;
  *(void *)(a4 + 8) = v7;
  *(_BYTE *)(a4 + 16) = 0;
  sub_10001910C(v7, (uint64_t)v8 + 32, a2, a3);
  *(_BYTE *)(a4 + 16) = 1;
}

void sub_1000190F4(_Unwind_Exception *a1)
{
}

double sub_10001910C(uint64_t a1, uint64_t a2, uint64_t a3, __int128 **a4)
{
  uint64_t v4 = *a4;
  __int128 v5 = **a4;
  *(void *)(a2 + 16) = *((void *)*a4 + 2);
  *(_OWORD *)a2 = v5;
  *((void *)v4 + 1) = 0LL;
  *((void *)v4 + 2) = 0LL;
  *(void *)uint64_t v4 = 0LL;
  double result = 0.0;
  *(_OWORD *)(a2 + 40) = 0u;
  *(_OWORD *)(a2 + 24) = 0u;
  return result;
}

void sub_100019138(void **a1, void *a2)
{
  uint64_t v3 = *a1;
  *a1 = a2;
  if (v3) {
    sub_100019154((uint64_t)(a1 + 1), v3);
  }
}

void sub_100019154(uint64_t a1, void *__p)
{
  if (*(_BYTE *)(a1 + 8)) {
    sub_100018F7C((uint64_t)__p + 32);
  }
  if (__p) {
    operator delete(__p);
  }
}

uint64_t *sub_100019194(uint64_t *result, uint64_t *a2)
{
  if (a2 != result)
  {
    uint64_t v3 = result;
    v4[0] = 0LL;
    sub_1000194B0(v4, result);
    sub_1000194B0(v3, a2);
    sub_1000194B0(a2, v4);
    return sub_100018FB8(v4);
  }

  return result;
}

void sub_1000191F4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_100019208(uint64_t result, uint64_t a2, unsigned int a3)
{
  if (a3 == 4) {
    goto LABEL_2;
  }
  uint64_t v4 = result;
  if (a3 > 1)
  {
    if (a3 != 2)
    {
      if (a3 != 3)
      {
LABEL_2:
        *(_WORD *)(a2 + 8) = 0;
        return result;
      }

      double result = *(void *)(*(void *)a2 + 8LL) & 0x7FFFFFFFFFFFFFFFLL;
      if (result == ((unint64_t)"N5boost3_bi6bind_tIvNS_4_mfi3mf4IvN2nl8wpantund12XPCIPCAPI_v0EPNS5_19NCPControlI"
                                        "nterfaceEPvNSt3__112basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEN8dis"
                                        "patch8callbackIU13block_pointerFvhN3xpc4dictEEEEEENS0_5list5INS0_5valueIPS6_EENS"
                                        "_3argILi1EEENST_ILi2EEENST_ILi3EEENST_ILi4EEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)
        || (double result = strcmp( (const char *)result,  (const char *)((unint64_t)"N5boost3_bi6bind_tIvNS_4_mfi3mf4IvN2nl8wpantund12XPCIPCAPI_v0EPN S5_19NCPControlInterfaceEPvNSt3__112basic_stringIcNSA_11char_tra itsIcEENSA_9allocatorIcEEEEN8dispatch8callbackIU13block_pointerF vhN3xpc4dictEEEEEENS0_5list5INS0_5valueIPS6_EENS_3argILi1EEENST_ ILi2EEENST_ILi3EEENST_ILi4EEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)),  !(_DWORD)result))
      {
        *(void *)a2 = v4;
      }

      else
      {
        *(void *)a2 = 0LL;
      }
    }
  }

  else
  {
    __int128 v5 = *(_OWORD *)result;
    *(void *)(a2 + 16) = *(void *)(result + 16);
    *(_OWORD *)a2 = v5;
  }

  return result;
}

void sub_1000192A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = a3;
  uint64_t v6 = a2;
  sub_1000192CC(a1, (uint64_t)&v6, (uint64_t)&v5, a4, a5);
}

void sub_1000192CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[0] = a2;
  v5[1] = a3;
  int v5[2] = a4;
  v5[3] = a5;
  sub_100019304((uint64_t *)(a1 + 16), a1, (uint64_t)v5);
}

void sub_100019304(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = **(void **)a3;
  uint64_t v6 = **(void **)(a3 + 8);
  uint64_t v7 = *(void *)(a3 + 16);
  std::string::size_type v8 = *(void *)(v7 + 16);
  *(_OWORD *)&__p.__r_.__value_.__l.__data_ = *(_OWORD *)v7;
  __p.__r_.__value_.__l.__cap_ = v8;
  *(void *)(v7 + 8) = 0LL;
  *(void *)(v7 + 16) = 0LL;
  *(void *)uint64_t v7 = 0LL;
  uint64_t v9 = *(void *)(a3 + 24);
  *(_OWORD *)dispatch_object_t object = *(_OWORD *)v9;
  *(void *)uint64_t v9 = 0LL;
  *(void *)(v9 + 8) = 0LL;
  sub_1000193C8(a2, v4, v5, v6, &__p, (uint64_t)object);
  if (object[1]) {
    dispatch_release(object[1]);
  }
  if (object[0]) {
    _Block_release(object[0]);
  }
}

void sub_1000193A4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_1000193C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, std::string *__str, uint64_t a6)
{
  uint64_t v10 = *(void (**)(void *, uint64_t, uint64_t, std::string *, void **))a1;
  uint64_t v9 = *(void *)(a1 + 8);
  __int128 v11 = (void *)(a2 + (v9 >> 1));
  if ((v9 & 1) != 0) {
    uint64_t v10 = *(void (**)(void *, uint64_t, uint64_t, std::string *, void **))(*v11 + v10);
  }
  std::string::basic_string(&v16, __str);
  uint64_t v12 = *(void **)a6;
  if (*(void *)a6) {
    uint64_t v12 = _Block_copy(v12);
  }
  uint64_t v13 = *(dispatch_object_s **)(a6 + 8);
  aBlock = v12;
  dispatch_object_t object = v13;
  if (v13) {
    dispatch_retain(v13);
  }
  v10(v11, a3, a4, &v16, &aBlock);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
}

void sub_10001948C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t *sub_1000194B0(uint64_t *result, uint64_t *a2)
{
  if (a2 != result)
  {
    uint64_t v3 = *a2;
    if (*a2)
    {
      *double result = v3;
      if ((v3 & 1) != 0)
      {
        __int128 v4 = *(_OWORD *)(a2 + 1);
        result[3] = a2[3];
        *(_OWORD *)(result + 1) = v4;
      }

      else
      {
        double result = (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v3 & 0xFFFFFFFFFFFFFFFELL))( a2 + 1,  result + 1,  1LL);
      }

      *a2 = 0LL;
    }

    else
    {
      return sub_100006EA4(result);
    }
  }

  return result;
}

void sub_100019524(void *a1)
{
  void *v1 = 0LL;
  __cxa_rethrow();
}

void sub_100019534(_Unwind_Exception *a1)
{
}

void sub_100019548(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 48);
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void **)(a1 + 40);
  xpc_object_t object = v3;
  if (v3 && xpc_get_type(v3) == (xpc_type_t)&_xpc_type_dictionary) {
    xpc_retain(v3);
  }
  else {
    xpc_object_t object = xpc_null_create();
  }
  (*(void (**)(uint64_t, void, xpc_object_t *))(v2 + 16))(v2, v1, &object);
  xpc_release(object);
}

void sub_1000195D4(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

xpc_object_t sub_1000195EC(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(const void **)(a2 + 32);
  if (v4) {
    uint64_t v5 = _Block_copy(v4);
  }
  else {
    uint64_t v5 = 0LL;
  }
  uint64_t v6 = *(void **)(a2 + 40);
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  if (v6) {
    return xpc_retain(v6);
  }
  xpc_object_t result = xpc_null_create();
  *(void *)(a1 + 40) = result;
  return result;
}

void sub_100019648(uint64_t a1)
{
  *(void *)(a1 + 40) = 0LL;
  uint64_t v2 = *(const void **)(a1 + 32);
  if (v2) {
    _Block_release(v2);
  }
}

uint64_t sub_100019684(uint64_t a1)
{
  return a1;
}

void sub_1000196B4(void **__p)
{
}

_UNKNOWN **sub_1000196E4()
{
}

char *sub_1000196F0(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x20uLL);
  *(void *)uint64_t v2 = &off_1002AE030;
  std::string::basic_string((std::string *)(v2 + 8), (const std::string *)(a1 + 8));
  return v2;
}

void sub_100019730(_Unwind_Exception *a1)
{
}

void *sub_10001974C()
{
}

void *sub_100019758(uint64_t a1)
{
  xpc_object_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *xpc_object_t result = &off_1002AE088;
  result[1] = v3;
  return result;
}

void *sub_100019794()
{
}

_WORD *sub_1000197A0(uint64_t a1)
{
  xpc_object_t result = operator new(0x10uLL);
  *(void *)xpc_object_t result = &off_1002AE0D0;
  result[4] = *(_WORD *)(a1 + 8);
  return result;
}

void *sub_1000197E0()
{
}

_BYTE *sub_1000197EC(uint64_t a1)
{
  xpc_object_t result = operator new(0x10uLL);
  *(void *)xpc_object_t result = &off_1002AE118;
  result[8] = *(_BYTE *)(a1 + 8);
  return result;
}

void *sub_10001982C()
{
}

_DWORD *sub_100019838(uint64_t a1)
{
  xpc_object_t result = operator new(0x10uLL);
  *(void *)xpc_object_t result = &off_1002AE160;
  result[2] = *(_DWORD *)(a1 + 8);
  return result;
}

void *sub_100019870(void *a1, uint64_t a2)
{
  __int128 v4 = *(void **)a2;
  if (*(void *)a2) {
    __int128 v4 = _Block_copy(v4);
  }
  uint64_t v5 = *(dispatch_object_s **)(a2 + 8);
  *a1 = v4;
  a1[1] = v5;
  if (v5) {
    dispatch_retain(v5);
  }
  return a1;
}

uint64_t sub_1000198B8( uint64_t a1, uint64_t a2, uint64_t a3, std::string *__str, const std::string *a5, uint64_t a6)
{
  __int128 v11 = *(void **)a6;
  if (*(void *)a6) {
    __int128 v11 = _Block_copy(v11);
  }
  uint64_t v12 = *(dispatch_object_s **)(a6 + 8);
  aBlock = v11;
  dispatch_object_t object = v12;
  if (v12) {
    dispatch_retain(v12);
  }
  sub_1000199D0(a1, a2, a3, &__stra, &v16, (uint64_t)&aBlock);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  return a1;
}

void sub_100019994( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20, char a21, char a22)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1000199D0( uint64_t a1, uint64_t a2, uint64_t a3, std::string *__str, const std::string *a5, uint64_t a6)
{
  __int128 v11 = *(void **)a6;
  if (*(void *)a6) {
    __int128 v11 = _Block_copy(v11);
  }
  uint64_t v12 = *(dispatch_object_s **)(a6 + 8);
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v12;
  if (v12) {
    dispatch_retain(v12);
  }
  return a1;
}

void sub_100019A8C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100019AC0(uint64_t a1, uint64_t a2, uint64_t a3, std::string *__str, const std::string *a5)
{
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = a3;
  std::string::basic_string((std::string *)(a1 + 16), &__stra);
  std::string::basic_string((std::string *)(a1 + 40), a5);
  return a1;
}

void sub_100019B38( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
}

uint64_t sub_100019B68(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  std::string::basic_string((std::string *)(a1 + 16), (const std::string *)(a2 + 16));
  std::string::basic_string((std::string *)(a1 + 40), (const std::string *)(a2 + 40));
  __int128 v4 = *(void **)(a2 + 64);
  if (v4) {
    __int128 v4 = _Block_copy(v4);
  }
  uint64_t v5 = *(dispatch_object_s **)(a2 + 72);
  *(void *)(a1 + 64) = v4;
  *(void *)(a1 + 72) = v5;
  if (v5) {
    dispatch_retain(v5);
  }
  return a1;
}

void sub_100019BD8(_Unwind_Exception *exception_object)
{
}

uint64_t (***sub_100019BF4(uint64_t (***a1)(), __int128 *a2))()
{
  __int128 v4 = *a2;
  sub_100019B68((uint64_t)&v5, (uint64_t)(a2 + 1));
  sub_100019C90(a1, &v4);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v9 < 0) {
    operator delete(__p);
  }
  if (v7 < 0) {
    operator delete(v6);
  }
  return a1;
}

void sub_100019C7C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t (***sub_100019C90(uint64_t (***a1)(), __int128 *a2))()
{
  *a1 = 0LL;
  __int128 v4 = *a2;
  sub_100019B68((uint64_t)&v5, (uint64_t)(a2 + 1));
  sub_100019D2C(a1, &v4);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v9 < 0) {
    operator delete(__p);
  }
  if (v7 < 0) {
    operator delete(v6);
  }
  return a1;
}

void sub_100019D18( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100019D2C(uint64_t (***a1)(), __int128 *a2)
{
  __int128 v5 = *a2;
  sub_100019B68((uint64_t)&v6, (uint64_t)(a2 + 1));
  int v3 = sub_100019E2C((uint64_t)off_1002AE198, &v5, a1 + 1);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v10 < 0) {
    operator delete(__p);
  }
  if (v8 < 0) {
    operator delete(v7);
  }
  if (v3) {
    __int128 v4 = off_1002AE198;
  }
  else {
    __int128 v4 = 0LL;
  }
  *a1 = v4;
}

void sub_100019DD0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100019DE4(_OWORD **a1, _WORD *a2, int a3)
{
  if (a3 == 4)
  {
    a2[4] = 0;
  }

  else
  {
    sub_100019ED0(a1, a2, a3);
  }

void sub_100019E04(uint64_t *a1, unsigned int a2)
{
  unsigned int v2 = a2;
  sub_10001A004(*a1, &v2);
}

uint64_t sub_100019E2C(uint64_t a1, __int128 *a2, void *a3)
{
  __int128 v7 = *a2;
  sub_100019B68((uint64_t)&v8, (uint64_t)(a2 + 1));
  uint64_t v5 = sub_10001A274(a1, &v7, a3);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v12 < 0) {
    operator delete(__p);
  }
  if (v10 < 0) {
    operator delete(v9);
  }
  return v5;
}

void sub_100019EBC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100019ED0(_OWORD **a1, _WORD *a2, int a3)
{
  switch(a3)
  {
    case 0:
      uint64_t v5 = *a1;
      uint64_t v6 = operator new(0x60uLL);
      *uint64_t v6 = *v5;
      sub_100019B68((uint64_t)(v6 + 1), (uint64_t)(v5 + 1));
      *(void *)a2 = v6;
      break;
    case 1:
      *(void *)a2 = *a1;
      *a1 = 0LL;
      break;
    case 2:
      uint64_t v7 = *(void *)a2;
      if (*(void *)a2)
      {
        uint64_t v8 = *(dispatch_object_s **)(v7 + 88);
        if (v8) {
          dispatch_release(v8);
        }
        char v9 = *(const void **)(v7 + 80);
        if (v9) {
          _Block_release(v9);
        }
        operator delete((void *)v7);
      }

      goto LABEL_17;
    case 3:
      char v10 = (const char *)(*(void *)(*(void *)a2 + 8LL) & 0x7FFFFFFFFFFFFFFFLL);
      if (v10 == (const char *)((unint64_t)"N5boost3_bi6bind_tIvNS_4_mfi3mf5IvN2nl8wpantund12XPCIPCAPI_v0EiPvNSt3"
                                                   "__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEESE_N8disp"
                                                   "atch8callbackIU13block_pointerFvhN3xpc4dictEEEEEENS0_5list6INS0_5valu"
                                                   "eIPS6_EENS_3argILi1EEENSO_IS7_EENSO_ISE_EESU_NSO_ISL_EEEEEE" & 0x7FFFFFFFFFFFFFFFLL)
        || !strcmp( v10,  (const char *)((unint64_t)"N5boost3_bi6bind_tIvNS_4_mfi3mf5IvN2nl8wpantund12XPCIPCAPI_v0EiPvNSt3__11 2basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEESE_N8dispatch8cal lbackIU13block_pointerFvhN3xpc4dictEEEEEENS0_5list6INS0_5valueIPS6_EENS_3 argILi1EEENSO_IS7_EENSO_ISE_EESU_NSO_ISL_EEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))
      {
        *(void *)a2 = *a1;
      }

      else
      {
LABEL_17:
        *(void *)a2 = 0LL;
      }

      break;
    default:
      a2[4] = 0;
      break;
  }

void sub_100019FF0(_Unwind_Exception *a1)
{
}

void sub_10001A004(uint64_t a1, unsigned int *a2)
{
  unsigned int v2 = a2;
  sub_10001A038(a1 + 16, a1, &v2);
}

void sub_10001A038(uint64_t a1, uint64_t a2, unsigned int **a3)
{
  uint64_t v5 = **a3;
  uint64_t v7 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  std::string::basic_string(&__str, (const std::string *)(a1 + 16));
  std::string::basic_string(&v12, (const std::string *)(a1 + 40));
  uint64_t v8 = *(void **)(a1 + 64);
  if (v8) {
    uint64_t v8 = _Block_copy(v8);
  }
  char v9 = *(dispatch_object_s **)(a1 + 72);
  aBlock = v8;
  dispatch_object_t object = v9;
  if (v9) {
    dispatch_retain(v9);
  }
  sub_10001A150(a2, v7, v5, v6, &__str, &v12, (uint64_t)&aBlock);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
}

void sub_10001A114( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20, char a21, char a22)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  _Unwind_Resume(a1);
}

void sub_10001A150( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, std::string *__str, const std::string *a6, uint64_t a7)
{
  std::string v12 = *(void (**)(void *, uint64_t, uint64_t, std::string *, std::string *, void **))a1;
  uint64_t v11 = *(void *)(a1 + 8);
  uint64_t v13 = (void *)(a2 + (v11 >> 1));
  if ((v11 & 1) != 0) {
    std::string v12 = *(void (**)(void *, uint64_t, uint64_t, std::string *, std::string *, void **))(*v13 + v12);
  }
  std::string::basic_string(&v19, __str);
  std::string::basic_string(&v18, a6);
  std::string::size_type v14 = *(void **)a7;
  if (*(void *)a7) {
    std::string::size_type v14 = _Block_copy(v14);
  }
  uint64_t v15 = *(dispatch_object_s **)(a7 + 8);
  aBlock = v14;
  dispatch_object_t object = v15;
  if (v15) {
    dispatch_retain(v15);
  }
  v12(v13, a3, a4, &v19, &v18, &aBlock);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
}

void sub_10001A238( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20, char a21, char a22)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10001A274(uint64_t a1, __int128 *a2, void *a3)
{
  __int128 v6 = *a2;
  sub_100019B68((uint64_t)&v7, (uint64_t)(a2 + 1));
  sub_10001A314(a1, &v6, a3);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v11 < 0) {
    operator delete(__p);
  }
  if (v9 < 0) {
    operator delete(v8);
  }
  return 1LL;
}

void sub_10001A300( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_10001A314(uint64_t a1, _OWORD *a2, void *a3)
{
  uint64_t v5 = operator new(0x60uLL);
  *uint64_t v5 = *a2;
  uint64_t result = sub_100019B68((uint64_t)(v5 + 1), (uint64_t)(a2 + 1));
  *a3 = v5;
  return result;
}

void sub_10001A35C(_Unwind_Exception *a1)
{
}

void *sub_10001A378()
{
}

_DWORD *sub_10001A384(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  *(void *)uint64_t result = &off_1002AE1C8;
  result[2] = *(_DWORD *)(a1 + 8);
  return result;
}

__n128 sub_10001A3BC(void *a1, __n128 *a2)
{
  *a1 = off_1002AE210;
  a1[1] = 0LL;
  a1[2] = 0LL;
  a1[3] = 0LL;
  __n128 result = *a2;
  *(__n128 *)(a1 + 1) = *a2;
  a1[3] = a2[1].n128_u64[0];
  a2->n128_u64[0] = 0LL;
  a2->n128_u64[1] = 0LL;
  a2[1].n128_u64[0] = 0LL;
  return result;
}

uint64_t sub_10001A3E8(uint64_t a1)
{
  int v3 = (void **)(a1 + 8);
  sub_100006F6C(&v3);
  return a1;
}

void sub_10001A420(void **a1)
{
  unsigned int v2 = a1 + 1;
  sub_100006F6C(&v2);
  operator delete(a1);
}

_UNKNOWN **sub_10001A45C()
{
}

void *sub_10001A468(uint64_t a1)
{
  unsigned int v2 = operator new(0x20uLL);
  void *v2 = off_1002AE210;
  sub_10000CBF8(v2 + 1, a1 + 8);
  return v2;
}

void sub_10001A4A8(_Unwind_Exception *a1)
{
}

void *sub_10001A4BC(void *a1, void *a2, dispatch_object_s **a3)
{
  a1[3] = 0LL;
  a1[4] = 0LL;
  a1[5] = 0LL;
  a1[7] = 0LL;
  a1[6] = a1 + 7;
  a1[8] = 0LL;
  a1[9] = 0LL;
  uint64_t v5 = a1 + 10;
  sub_10000AB5C(a1 + 10, a2);
  sub_10001A610((uint64_t)a1);
  __int128 v6 = *a3;
  if (v6) {
    dispatch_retain(v6);
  }
  uint64_t v7 = (dispatch_object_s *)a1[9];
  a1[9] = v6;
  if (v7) {
    dispatch_release(v7);
  }
  if (*v5)
  {
    uint64_t v8 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v8)
    {
      if (sub_10015A058(5) && os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)char v10 = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_INFO,  "WPANTUND_v1: Call back table initialized",  v10,  2u);
      }
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }
  }

  return a1;
}

void sub_10001A5D4(_Unwind_Exception *a1)
{
  __int128 v6 = *(dispatch_object_s **)(v1 + 72);
  if (v6) {
    dispatch_release(v6);
  }
  sub_100018F0C(v2);
  _Unwind_Resume(a1);
}

void sub_10001A610(uint64_t a1)
{
  *(void *)&__int128 v141 = sub_100022988;
  *((void *)&v141 + 1) = 0LL;
  uint64_t v142 = a1;
  uint64_t v2 = (uint64_t **)(a1 + 48);
  sub_10000AC00(&v139, "Reset");
  uint64_t v3 = sub_100016DAC(v2, &v139);
  sub_10001B46C(v3, &v141);
  if (v140 < 0) {
    operator delete((void *)v139);
  }
  *(void *)&__int128 v137 = sub_100022C6C;
  *((void *)&v137 + 1) = 0LL;
  uint64_t v138 = a1;
  sub_10000AC00(&v139, "HardReset");
  __int128 v4 = sub_100016DAC(v2, &v139);
  sub_10001B46C(v4, &v137);
  if (v140 < 0) {
    operator delete((void *)v139);
  }
  *(void *)&__int128 v135 = sub_10001EA48;
  *((void *)&v135 + 1) = 0LL;
  uint64_t v136 = a1;
  sub_10000AC00(&v139, "Status");
  uint64_t v5 = sub_100016DAC(v2, &v139);
  sub_10001B46C(v5, &v135);
  if (v140 < 0) {
    operator delete((void *)v139);
  }
  *(void *)&__int128 v133 = sub_100023A74;
  *((void *)&v133 + 1) = 0LL;
  uint64_t v134 = a1;
  sub_10000AC00(&v139, "Join");
  __int128 v6 = sub_100016DAC(v2, &v139);
  sub_10001B46C(v6, &v133);
  if (v140 < 0) {
    operator delete((void *)v139);
  }
  *(void *)&__int128 v131 = sub_1000240FC;
  *((void *)&v131 + 1) = 0LL;
  uint64_t v132 = a1;
  sub_10000AC00(&v139, "Form");
  uint64_t v7 = sub_100016DAC(v2, &v139);
  sub_10001B46C(v7, &v131);
  if (v140 < 0) {
    operator delete((void *)v139);
  }
  *(void *)&__int128 v129 = sub_10001F024;
  *((void *)&v129 + 1) = 0LL;
  uint64_t v130 = a1;
  sub_10000AC00(&v139, "Leave");
  uint64_t v8 = sub_100016DAC(v2, &v139);
  sub_10001B46C(v8, &v129);
  if (v140 < 0) {
    operator delete((void *)v139);
  }
  *(void *)&__int128 v127 = sub_1000248A0;
  *((void *)&v127 + 1) = 0LL;
  uint64_t v128 = a1;
  sub_10000AC00(&v139, "Attach");
  char v9 = sub_100016DAC(v2, &v139);
  sub_10001B46C(v9, &v127);
  if (v140 < 0) {
    operator delete((void *)v139);
  }
  *(void *)&__int128 v125 = sub_1000215B4;
  *((void *)&v125 + 1) = 0LL;
  uint64_t v126 = a1;
  sub_10000AC00(&v139, "RouteAdd");
  char v10 = sub_100016DAC(v2, &v139);
  sub_10001B46C(v10, &v125);
  if (v140 < 0) {
    operator delete((void *)v139);
  }
  *(void *)&__int128 v123 = sub_1000219C8;
  *((void *)&v123 + 1) = 0LL;
  uint64_t v124 = a1;
  sub_10000AC00(&v139, "RouteRemove");
  char v11 = sub_100016DAC(v2, &v139);
  sub_10001B46C(v11, &v123);
  if (v140 < 0) {
    operator delete((void *)v139);
  }
  *(void *)&__int128 v121 = sub_10002300C;
  *((void *)&v121 + 1) = 0LL;
  uint64_t v122 = a1;
  sub_10000AC00(&v139, "ConfigGateway");
  std::string v12 = sub_100016DAC(v2, &v139);
  sub_10001B46C(v12, &v121);
  if (v140 < 0) {
    operator delete((void *)v139);
  }
  *(void *)&__int128 v119 = sub_100025788;
  *((void *)&v119 + 1) = 0LL;
  uint64_t v120 = a1;
  sub_10000AC00(&v139, "ServiceAdd");
  uint64_t v13 = sub_100016DAC(v2, &v139);
  sub_10001B46C(v13, &v119);
  if (v140 < 0) {
    operator delete((void *)v139);
  }
  *(void *)&__int128 v117 = sub_100025BF8;
  *((void *)&v117 + 1) = 0LL;
  uint64_t v118 = a1;
  sub_10000AC00(&v139, "ServiceRemove");
  std::string::size_type v14 = sub_100016DAC(v2, &v139);
  sub_10001B46C(v14, &v117);
  if (v140 < 0) {
    operator delete((void *)v139);
  }
  *(void *)&__int128 v115 = sub_1000254A4;
  *((void *)&v115 + 1) = 0LL;
  uint64_t v116 = a1;
  sub_10000AC00(&v139, "DataPoll");
  uint64_t v15 = sub_100016DAC(v2, &v139);
  sub_10001B46C(v15, &v115);
  if (v140 < 0) {
    operator delete((void *)v139);
  }
  *(void *)&__int128 v113 = sub_100024B84;
  *((void *)&v113 + 1) = 0LL;
  uint64_t v114 = a1;
  sub_10000AC00(&v139, "BeginLowPower");
  uint64_t v16 = sub_100016DAC(v2, &v139);
  sub_10001B46C(v16, &v113);
  if (v140 < 0) {
    operator delete((void *)v139);
  }
  *(void *)&__int128 v111 = sub_100024E68;
  *((void *)&v111 + 1) = 0LL;
  uint64_t v112 = a1;
  sub_10000AC00(&v139, "HostDidWake");
  std::string v17 = sub_100016DAC(v2, &v139);
  sub_10001B46C(v17, &v111);
  if (v140 < 0) {
    operator delete((void *)v139);
  }
  *(void *)&__int128 v109 = sub_10002A354;
  *((void *)&v109 + 1) = 0LL;
  uint64_t v110 = a1;
  sub_10000AC00(&v139, "NetScanStop");
  std::string v18 = sub_100016DAC(v2, &v139);
  sub_10001B46C(v18, &v109);
  if (v140 < 0) {
    operator delete((void *)v139);
  }
  *(void *)&__int128 v107 = sub_10002030C;
  *((void *)&v107 + 1) = 0LL;
  uint64_t v108 = a1;
  sub_10000AC00(&v139, "NetScanStart");
  std::string v19 = sub_100016DAC(v2, &v139);
  sub_10001B46C(v19, &v107);
  if (v140 < 0) {
    operator delete((void *)v139);
  }
  *(void *)&__int128 v105 = sub_10002A638;
  *((void *)&v105 + 1) = 0LL;
  uint64_t v106 = a1;
  sub_10000AC00(&v139, "DiscoverScanStop");
  std::string v20 = sub_100016DAC(v2, &v139);
  sub_10001B46C(v20, &v105);
  if (v140 < 0) {
    operator delete((void *)v139);
  }
  *(void *)&__int128 v103 = sub_100020688;
  *((void *)&v103 + 1) = 0LL;
  uint64_t v104 = a1;
  sub_10000AC00(&v139, "DiscoverScanStart");
  std::string v21 = sub_100016DAC(v2, &v139);
  sub_10001B46C(v21, &v103);
  if (v140 < 0) {
    operator delete((void *)v139);
  }
  *(void *)&__int128 v101 = sub_10002A91C;
  *((void *)&v101 + 1) = 0LL;
  uint64_t v102 = a1;
  sub_10000AC00(&v139, "EnergyScanStop");
  std::string v22 = sub_100016DAC(v2, &v139);
  sub_10001B46C(v22, &v101);
  if (v140 < 0) {
    operator delete((void *)v139);
  }
  *(void *)&__int128 v99 = sub_100020BA8;
  *((void *)&v99 + 1) = 0LL;
  uint64_t v100 = a1;
  sub_10000AC00(&v139, "EnergyScanStart");
  char v23 = sub_100016DAC(v2, &v139);
  sub_10001B46C(v23, &v99);
  if (v140 < 0) {
    operator delete((void *)v139);
  }
  *(void *)&__int128 v97 = sub_100025FEC;
  *((void *)&v97 + 1) = 0LL;
  uint64_t v98 = a1;
  sub_10000AC00(&v139, "Mfg");
  dispatch_object_t v24 = sub_100016DAC(v2, &v139);
  sub_10001B46C(v24, &v97);
  if (v140 < 0) {
    operator delete((void *)v139);
  }
  *(void *)&__int128 v95 = sub_10001F4CC;
  *((void *)&v95 + 1) = 0LL;
  uint64_t v96 = a1;
  sub_10000AC00(&v139, "PropGet");
  char v25 = sub_100016DAC(v2, &v139);
  sub_10001B46C(v25, &v95);
  if (v140 < 0) {
    operator delete((void *)v139);
  }
  *(void *)&__int128 v93 = sub_10001FA88;
  *((void *)&v93 + 1) = 0LL;
  uint64_t v94 = a1;
  sub_10000AC00(&v139, "PropSet");
  std::string v26 = sub_100016DAC(v2, &v139);
  sub_10001B46C(v26, &v93);
  if (v140 < 0) {
    operator delete((void *)v139);
  }
  *(void *)&__int128 v91 = sub_100021DEC;
  *((void *)&v91 + 1) = 0LL;
  uint64_t v92 = a1;
  sub_10000AC00(&v139, "PropInsert");
  char v27 = sub_100016DAC(v2, &v139);
  sub_10001B46C(v27, &v91);
  if (v140 < 0) {
    operator delete((void *)v139);
  }
  *(void *)&__int128 v89 = sub_100022334;
  *((void *)&v89 + 1) = 0LL;
  uint64_t v90 = a1;
  sub_10000AC00(&v139, "PropRemove");
  dispatch_object_t v28 = sub_100016DAC(v2, &v139);
  sub_10001B46C(v28, &v89);
  if (v140 < 0) {
    operator delete((void *)v139);
  }
  *(void *)&__int128 v87 = sub_1000211A0;
  *((void *)&v87 + 1) = 0LL;
  uint64_t v88 = a1;
  sub_10000AC00(&v139, "PcapToFd");
  std::string v29 = sub_100016DAC(v2, &v139);
  sub_10001B46C(v29, &v87);
  if (v140 < 0) {
    operator delete((void *)v139);
  }
  *(void *)&__int128 v85 = sub_100026AE4;
  *((void *)&v85 + 1) = 0LL;
  uint64_t v86 = a1;
  sub_10000AC00(&v139, "JoinerAttach");
  std::string v30 = sub_100016DAC(v2, &v139);
  sub_10001B46C(v30, &v85);
  if (v140 < 0) {
    operator delete((void *)v139);
  }
  *(void *)&__int128 v83 = sub_100026E5C;
  *((void *)&v83 + 1) = 0LL;
  uint64_t v84 = a1;
  sub_10000AC00(&v139, "JoinerStart");
  char v31 = sub_100016DAC(v2, &v139);
  sub_10001B46C(v31, &v83);
  if (v140 < 0) {
    operator delete((void *)v139);
  }
  *(void *)&__int128 v81 = sub_1000274B0;
  *((void *)&v81 + 1) = 0LL;
  uint64_t v82 = a1;
  sub_10000AC00(&v139, "JoinerStop");
  __int16 v32 = sub_100016DAC(v2, &v139);
  sub_10001B46C(v32, &v81);
  if (v140 < 0) {
    operator delete((void *)v139);
  }
  *(void *)&__int128 v79 = sub_1000277C8;
  *((void *)&v79 + 1) = 0LL;
  uint64_t v80 = a1;
  sub_10000AC00(&v139, "JoinerAdd");
  char v33 = sub_100016DAC(v2, &v139);
  sub_10001B46C(v33, &v79);
  if (v140 < 0) {
    operator delete((void *)v139);
  }
  *(void *)&__int128 v77 = sub_100028AC0;
  *((void *)&v77 + 1) = 0LL;
  uint64_t v78 = a1;
  sub_10000AC00(&v139, "JoinerRemove");
  __int16 v34 = sub_100016DAC(v2, &v139);
  sub_10001B46C(v34, &v77);
  if (v140 < 0) {
    operator delete((void *)v139);
  }
  *(void *)&__int128 v75 = sub_100028E50;
  *((void *)&v75 + 1) = 0LL;
  uint64_t v76 = a1;
  sub_10000AC00(&v139, "AnnounceBegin");
  char v35 = sub_100016DAC(v2, &v139);
  sub_10001B46C(v35, &v75);
  if (v140 < 0) {
    operator delete((void *)v139);
  }
  *(void *)&__int128 v73 = sub_100029214;
  *((void *)&v73 + 1) = 0LL;
  uint64_t v74 = a1;
  sub_10000AC00(&v139, "EnergyScanQuery");
  char v36 = sub_100016DAC(v2, &v139);
  sub_10001B46C(v36, &v73);
  if (v140 < 0) {
    operator delete((void *)v139);
  }
  *(void *)&__int128 v71 = sub_100029A00;
  *((void *)&v71 + 1) = 0LL;
  uint64_t v72 = a1;
  sub_10000AC00(&v139, "PanIdQuery");
  uint64_t v37 = sub_100016DAC(v2, &v139);
  sub_10001B46C(v37, &v71);
  if (v140 < 0) {
    operator delete((void *)v139);
  }
  *(void *)&__int128 v69 = sub_100029DAC;
  *((void *)&v69 + 1) = 0LL;
  uint64_t v70 = a1;
  sub_10000AC00(&v139, "GeneratePSKc");
  char v38 = sub_100016DAC(v2, &v139);
  sub_10001B46C(v38, &v69);
  if (v140 < 0) {
    operator delete((void *)v139);
  }
  *(void *)&__int128 v67 = sub_1000295F0;
  *((void *)&v67 + 1) = 0LL;
  uint64_t v68 = a1;
  sub_10000AC00(&v139, "NetworkDiagnostics");
  unint64_t v39 = sub_100016DAC(v2, &v139);
  sub_10001B46C(v39, &v67);
  if (v140 < 0) {
    operator delete((void *)v139);
  }
  *(void *)&__int128 v65 = sub_100026388;
  *((void *)&v65 + 1) = 0LL;
  uint64_t v66 = a1;
  sub_10000AC00(&v139, "Peek");
  int v40 = sub_100016DAC(v2, &v139);
  sub_10001B46C(v40, &v65);
  if (v140 < 0) {
    operator delete((void *)v139);
  }
  *(void *)&__int128 v63 = sub_10002514C;
  *((void *)&v63 + 1) = 0LL;
  uint64_t v64 = a1;
  sub_10000AC00(&v139, "Poke");
  char v41 = sub_100016DAC(v2, &v139);
  sub_10001B46C(v41, &v63);
  if (v140 < 0) {
    operator delete((void *)v139);
  }
  *(void *)&__int128 v61 = sub_100027BE0;
  *((void *)&v61 + 1) = 0LL;
  uint64_t v62 = a1;
  sub_10000AC00(&v139, "LinkMetricsQuery");
  std::string v42 = sub_100016DAC(v2, &v139);
  sub_10001B46C(v42, &v61);
  if (v140 < 0) {
    operator delete((void *)v139);
  }
  *(void *)&__int128 v59 = sub_100027F90;
  *((void *)&v59 + 1) = 0LL;
  uint64_t v60 = a1;
  sub_10000AC00(&v139, "LinkMetricsProbe");
  xpc_object_t v43 = sub_100016DAC(v2, &v139);
  sub_10001B46C(v43, &v59);
  if (v140 < 0) {
    operator delete((void *)v139);
  }
  *(void *)&__int128 v57 = sub_10002833C;
  *((void *)&v57 + 1) = 0LL;
  uint64_t v58 = a1;
  sub_10000AC00(&v139, "LinkMetricsMgmtForward");
  __int16 v44 = sub_100016DAC(v2, &v139);
  sub_10001B46C(v44, &v57);
  if (v140 < 0) {
    operator delete((void *)v139);
  }
  *(void *)&__int128 v55 = sub_100028710;
  *((void *)&v55 + 1) = 0LL;
  uint64_t v56 = a1;
  sub_10000AC00(&v139, "LinkMetricsMgmtEnhAck");
  uint64_t v45 = sub_100016DAC(v2, &v139);
  sub_10001B46C(v45, &v55);
  if (v140 < 0) {
    operator delete((void *)v139);
  }
  *(void *)&__int128 v53 = sub_10002AF34;
  *((void *)&v53 + 1) = 0LL;
  uint64_t v54 = a1;
  sub_10000AC00(&v139, "MlrRequest");
  char v46 = sub_100016DAC(v2, &v139);
  sub_10001B46C(v46, &v53);
  if (v140 < 0) {
    operator delete((void *)v139);
  }
  *(void *)&__int128 v51 = sub_10002AC00;
  *((void *)&v51 + 1) = 0LL;
  uint64_t v52 = a1;
  sub_10000AC00(&v139, "BackboneRouterConfig");
  dispatch_object_t v47 = sub_100016DAC(v2, &v139);
  sub_10001B46C(v47, &v51);
  if (v140 < 0) {
    operator delete((void *)v139);
  }
  *(void *)&__int128 v49 = sub_1000266E4;
  *((void *)&v49 + 1) = 0LL;
  uint64_t v50 = a1;
  sub_10000AC00(&v139, "Keychain");
  __int16 v48 = sub_100016DAC(v2, &v139);
  sub_10001B46C(v48, &v49);
  if (v140 < 0) {
    operator delete((void *)v139);
  }
}

void sub_10001B2BC(_Unwind_Exception *exception_object)
{
}

uint64_t sub_10001B390(uint64_t a1)
{
  uint64_t v2 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v2)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "WPANTUND_v1: Destructor", v5, 2u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  sub_10000AB80(a1 + 80);
  uint64_t v3 = *(dispatch_object_s **)(a1 + 72);
  if (v3) {
    dispatch_release(v3);
  }
  sub_100018F0C(a1 + 48);
  return a1;
}

uint64_t *sub_10001B46C(uint64_t *a1, __int128 *a2)
{
  __int128 v5 = *a2;
  uint64_t v6 = *((void *)a2 + 2);
  uint64_t v4 = (uint64_t)off_1002AE318 + 1;
  sub_100019194(&v4, a1);
  sub_100018FB8(&v4);
  return a1;
}

void sub_10001B4C8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_10001B4DC(uint64_t a1@<X1>, std::string *a2@<X8>)
{
  uint64_t v4 = std::string::append(&v9, "/");
  __int128 v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v10.__r_.__value_.__l.__cap_ = v4->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v10.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0LL;
  v4->__r_.__value_.__l.__cap_ = 0LL;
  v4->__r_.__value_.__r.__words[0] = 0LL;
  (*(void (**)(void **__return_ptr, uint64_t))(*(void *)a1 + 360LL))(__p, a1);
  uint64_t v6 = sub_10000D650(&v10, (const std::string::value_type *)__p);
  *a2 = *v6;
  v6->__r_.__value_.__l.__size_ = 0LL;
  v6->__r_.__value_.__l.__cap_ = 0LL;
  v6->__r_.__value_.__r.__words[0] = 0LL;
  if (v8 < 0) {
    operator delete(__p[0]);
  }
}

void sub_10001B5A4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20, void *a21, uint64_t a22, int a23, __int16 a24, char a25, char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

void sub_10001B5F0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 16) = a2;
  (*(void (**)(uint8_t *__return_ptr, uint64_t))(*(void *)a2 + 360LL))(buf, a2);
  uint64_t v4 = (void *)(a1 + 24);
  sub_100014D08(a1 + 24, (__int128 *)buf);
  __int128 v5 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v5)
  {
    if (sub_10015A058(6) && os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)std::string buf = 136315138;
      *(void *)&uint8_t buf[4] = v4;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "WPANTUND_V1 - Interface added %s", buf, 0xCu);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  *(void *)&__int128 v12 = sub_10001B8AC;
  *((void *)&v12 + 1) = 0LL;
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  sub_10002BD04(buf, &v12);
  sub_10000EEB4(a2 + 104, (uint64_t)buf, 0, &v15);
  sub_10000EF74(&v16);
  sub_10000EFC4(v19);
  std::string v17 = buf;
  sub_10000EFEC((void ***)&v17);
  *(void *)&__int128 v12 = sub_10001BF68;
  *((void *)&v12 + 1) = 0LL;
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  sub_10002D2B8(buf, &v12);
  sub_10001BF28(a2 + 8, (uint64_t)buf, 0, &v10);
  sub_10000EF74(&v11);
  sub_10002B7E4(v19);
  std::string v17 = buf;
  sub_10000EFEC((void ***)&v17);
  *(void *)&__int128 v12 = sub_10001C2CC;
  *((void *)&v12 + 1) = 0LL;
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  sub_10002E850(buf, &v12);
  sub_10001C28C(a2 + 32, (uint64_t)buf, 0, &v8);
  sub_10000EF74(&v9);
  sub_10002B80C(v19);
  std::string v17 = buf;
  sub_10000EFEC((void ***)&v17);
  *(void *)&__int128 v12 = sub_10001C4CC;
  *((void *)&v12 + 1) = 0LL;
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  sub_10002FDA0(buf, &v12);
  sub_10001C48C(a2 + 56, (uint64_t)buf, 0, &v6);
  sub_10000EF74(&v7);
  sub_10002B834(v19);
  std::string v17 = buf;
  sub_10000EFEC((void ***)&v17);
}

void sub_10001B860(_Unwind_Exception *a1)
{
}

void sub_10001B8AC(uint64_t a1, uint64_t a2, const std::string *a3, uint64_t *a4)
{
  v47[0] = 0LL;
  v47[1] = 0LL;
  uint64_t v48 = 0LL;
  xpc_object_t v8 = xpc_dictionary_create(0LL, 0LL, 0LL);
  sub_10000AC00(v45, "method");
  sub_10000AC00(v43, "property_changed");
  if (v46 >= 0) {
    std::string v9 = v45;
  }
  else {
    std::string v9 = (void **)v45[0];
  }
  if (v44 >= 0) {
    uint64_t v10 = v43;
  }
  else {
    uint64_t v10 = (void **)v43[0];
  }
  xpc_dictionary_set_string(v8, (const char *)v9, (const char *)v10);
  std::string::size_type size = a3->__r_.__value_.__s.__size_;
  if ((size & 0x80u) == 0LL) {
    __int128 v12 = a3;
  }
  else {
    __int128 v12 = (const std::string *)a3->__r_.__value_.__r.__words[0];
  }
  while (1)
  {
    if ((size & 0x80u) == 0LL) {
      uint64_t v13 = a3;
    }
    else {
      uint64_t v13 = (const std::string *)a3->__r_.__value_.__r.__words[0];
    }
    if ((size & 0x80u) != 0LL) {
      std::string::size_type size = a3->__r_.__value_.__l.__size_;
    }
    int v14 = v12->__r_.__value_.__s.__data_[0];
    if (v14 < 0) {
      __uint32_t v15 = __maskrune(v12->__r_.__value_.__s.__data_[0], 0x500uLL);
    }
    else {
      __uint32_t v15 = _DefaultRuneLocale.__runetype[v14] & 0x500;
    }
    if (v14 != 95 && !v15)
    {
      if (v14 == 58)
      {
        LOBYTE(v14) = 47;
      }

      else
      {
        LOBYTE(v14) = 95;
      }
    }

    std::string::push_back(&v49, v14);
LABEL_26:
    __int128 v12 = (const std::string *)((char *)v12 + 1);
    std::string::size_type size = a3->__r_.__value_.__s.__size_;
  }

  sub_10001B4DC(a2, &v41);
  uint64_t v16 = std::string::append(&v41, "/Property/");
  __int128 v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  __p.__r_.__value_.__l.__cap_ = v16->__r_.__value_.__l.__cap_;
  *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v17;
  v16->__r_.__value_.__l.__size_ = 0LL;
  v16->__r_.__value_.__l.__cap_ = 0LL;
  v16->__r_.__value_.__r.__words[0] = 0LL;
  std::string v18 = sub_10000D650(&__p, (const std::string::value_type *)&v49);
  __int128 v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
  *(void *)&buf[16] = v18->__r_.__value_.__l.__cap_;
  *(_OWORD *)std::string buf = v19;
  v18->__r_.__value_.__l.__size_ = 0LL;
  v18->__r_.__value_.__l.__cap_ = 0LL;
  v18->__r_.__value_.__r.__words[0] = 0LL;
  sub_100014D08((uint64_t)v47, (__int128 *)buf);
  if ((buf[23] & 0x80000000) != 0) {
    operator delete(*(void **)buf);
  }
  std::string v20 = sub_10000BD6C(a4);
  {
    std::string v21 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v21)
    {
      if (sub_10015A058(6) && os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)std::string buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_INFO, "valMap Received", buf, 2u);
      }

      goto LABEL_54;
    }

    if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      goto LABEL_54;
    }
LABEL_53:
    sub_1001FB53C();
    goto LABEL_54;
  }

  std::string v22 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (!v22)
  {
    if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      goto LABEL_54;
    }
    goto LABEL_53;
  }

  if (sub_10015A058(6) && os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
  {
    int v23 = (char)a3->__r_.__value_.__s.__size_;
    std::string::size_type v24 = a3->__r_.__value_.__r.__words[0];
    int v25 = SHIBYTE(v48);
    std::string v26 = (void **)v47[0];
    sub_100147B4C(a4, &__p);
    char v27 = v47;
    if (v25 < 0) {
      char v27 = v26;
    }
    if (v23 >= 0) {
      dispatch_object_t v28 = a3;
    }
    else {
      dispatch_object_t v28 = (const std::string *)v24;
    }
    *(_DWORD *)std::string buf = 136315650;
    p_p = &__p;
    if ((__p.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    *(void *)&uint8_t buf[4] = v28;
    *(_WORD *)&_BYTE buf[12] = 2080;
    *(void *)&buf[14] = v27;
    *(_WORD *)&buf[22] = 2080;
    __int128 v51 = p_p;
    _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_INFO,  "XPCIPCAPI_v1:PropChanged: Key %s, Path: %s - value: %s",  buf,  0x20u);
  }

LABEL_54:
  if (v48 >= 0) {
    std::string v30 = v47;
  }
  else {
    std::string v30 = (void **)v47[0];
  }
  xpc_dictionary_set_string(v8, "path", (const char *)v30);
  if ((a3->__r_.__value_.__s.__size_ & 0x80u) == 0) {
    char v31 = (const char *)a3;
  }
  else {
    char v31 = (const char *)a3->__r_.__value_.__r.__words[0];
  }
  xpc_dictionary_set_string(v8, "key", v31);
  sub_10012C860(v8, a4);
  __int16 v32 = _Block_copy(&stru_1002AE2E8);
  char v33 = *(dispatch_object_s **)(a1 + 72);
  if (v33) {
    dispatch_retain(*(dispatch_object_t *)(a1 + 72));
  }
  *(void *)std::string buf = v32;
  *(void *)&buf[8] = v33;
  __int16 v34 = *(uint64_t **)(a1 + 80);
  std::string::basic_string(&v40, a3);
  if (v8)
  {
    xpc_object_t v39 = v8;
    goto LABEL_65;
  }

  xpc_object_t v8 = xpc_null_create();
  xpc_object_t v39 = v8;
  if (v8)
  {
LABEL_65:
    if (xpc_get_type(v8) != (xpc_type_t)&_xpc_type_dictionary)
    {
      xpc_object_t v35 = xpc_null_create();
      goto LABEL_70;
    }

    xpc_retain(v8);
    if (v32)
    {
LABEL_68:
      char v36 = _Block_copy(v32);
      goto LABEL_72;
    }
  }

  else
  {
    xpc_object_t v35 = xpc_null_create();
    xpc_object_t v8 = 0LL;
LABEL_70:
    xpc_object_t v39 = v35;
    if (v32) {
      goto LABEL_68;
    }
  }

  char v36 = 0LL;
LABEL_72:
  aBlock = v36;
  dispatch_object_t object = v33;
  if (v33) {
    dispatch_retain(v33);
  }
  sub_10015E448(v34, &v40, &v39, (uint64_t)&aBlock);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  xpc_release(v39);
  xpc_object_t v39 = 0LL;
  xpc_release(v8);
  if (v33) {
    dispatch_release(v33);
  }
  if (v32) {
    _Block_release(v32);
  }
  if (v44 < 0) {
    operator delete(v43[0]);
  }
  if (v46 < 0) {
    operator delete(v45[0]);
  }
  if (SHIBYTE(v48) < 0) {
    operator delete(v47[0]);
  }
}

  v4[63] = self->_txUnicast;
  v4[64] |= 0x80000u;
  has = self->_has;
  if ((*(_BYTE *)&has & 0x80) == 0)
  {
LABEL_5:
    if ((*(_WORD *)&has & 0x4000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_56;
  }

                        sub_10000AC00(&__str, "");
                        sub_1001095A0(a1 + 6800, a3, &__str);
                        if ((char)__str.__r_.__value_.__s.__size_ < 0)
                        {
                          __int128 v19 = (void *)__str.__r_.__value_.__r.__words[0];
LABEL_58:
                          operator delete(v19);
                        }

                        return 0LL;
                      }

    __break(1u);
  }

void sub_10001BE08( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, char a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20, int a21, __int16 a22, char a23, char a24, void *a25, uint64_t a26, int a27, __int16 a28, char a29, char a30, uint64_t a31, void *__p, uint64_t a33, int a34, __int16 a35, char a36, char a37, void *a38, uint64_t a39, int a40, __int16 a41, char a42, char a43, void *a44, uint64_t a45, int a46, __int16 a47, char a48, char a49)
{
  if (a37 < 0) {
    operator delete(__p);
  }
  if (a43 < 0) {
    operator delete(a38);
  }
  if (a49 < 0) {
    operator delete(a44);
  }
  _Unwind_Resume(exception_object);
}

void *sub_10001BF28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t *a4@<X8>)
{
  uint64_t v7 = (uint64_t *)sub_10002BF58((uint64_t *)(a1 + 8));
  return sub_10002BF98(v7, a2, a3, a4);
}

void sub_10001BF68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  xpc_object_t v5 = xpc_dictionary_create(0LL, 0LL, 0LL);
  xpc_dictionary_set_string(v5, "method", "Beacon");
  else {
    uint64_t v6 = *(const char **)a3;
  }
  if (*v6) {
    xpc_dictionary_set_string(v5, "kWPANTUNDProperty_NetworkName", v6);
  }
  sub_1001598C0((uint64_t)value, a3 + 24, 8LL);
  if (value[0])
  {
    sub_1001598C0((uint64_t)value, a3 + 24, 8LL);
    xpc_dictionary_set_uint64(v5, "kWPANTUNDProperty_NetworkXPANID", value[0]);
  }

  xpc_dictionary_set_uint64(v5, "kWPANTUNDProperty_NetworkPANID", *(unsigned __int16 *)(a3 + 32));
  if (*(_BYTE *)(a3 + 38)) {
    xpc_dictionary_set_int64(v5, "kWPANTUNDProperty_NetworkNodeType", *(unsigned __int8 *)(a3 + 38));
  }
  if (*(_BYTE *)(a3 + 34))
  {
    xpc_dictionary_set_uint64(v5, "kWPANTUNDProperty_NCPChannel", *(unsigned __int8 *)(a3 + 34));
    int64_t v7 = *(char *)(a3 + 36);
    if (v7 != -128) {
      xpc_dictionary_set_int64(v5, "RSSI", v7);
    }
    xpc_dictionary_set_BOOL(v5, "kWPANTUNDProperty_NestLabs_NetworkAllowingJoin", *(_BYTE *)(a3 + 35));
  }

  xpc_object_t v8 = (const void *)(a3 + 39);
  sub_1001598C0((uint64_t)value, (uint64_t)v8, 8LL);
  if (value[0]) {
    xpc_dictionary_set_data(v5, "kWPANTUNDProperty_NCPHardwareAddress", v8, 8uLL);
  }
  std::string v9 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v9)
  {
    uint64_t v10 = v9;
    if (sub_10015A058(5) && os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      LOWORD(value[0]) = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "Sending Beacon", (uint8_t *)value, 2u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  char v11 = *(uint64_t **)(a1 + 80);
  sub_10000AC00(&__p, "Beacon");
  if (v5)
  {
    xpc_object_t v15 = v5;
  }

  else
  {
    xpc_object_t v5 = xpc_null_create();
    xpc_object_t v15 = v5;
    if (!v5)
    {
      xpc_object_t v12 = xpc_null_create();
      xpc_object_t v5 = 0LL;
      goto LABEL_29;
    }
  }

  if (xpc_get_type(v5) == (xpc_type_t)&_xpc_type_dictionary)
  {
    xpc_retain(v5);
    goto LABEL_30;
  }

  xpc_object_t v12 = xpc_null_create();
LABEL_29:
  xpc_object_t v15 = v12;
LABEL_30:
  aBlock = 0LL;
  dispatch_object_t object = 0LL;
  sub_10015E448(v11, &__p, &v15, (uint64_t)&aBlock);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  xpc_release(v15);
  xpc_object_t v15 = 0LL;
  xpc_release(v5);
}

void sub_10001C21C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, xpc_object_t a11, char a12)
{
}

uint64_t sub_10001C250(uint64_t a1)
{
  uint64_t v3 = (void **)a1;
  sub_10000EFEC(&v3);
  return a1;
}

void *sub_10001C28C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t *a4@<X8>)
{
  int64_t v7 = (uint64_t *)sub_10002D5F0((uint64_t *)(a1 + 8));
  return sub_10002D630(v7, a2, a3, a4);
}

void sub_10001C2CC(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  xpc_object_t v5 = xpc_dictionary_create(0LL, 0LL, 0LL);
  xpc_dictionary_set_string(v5, "method", "EnergyScanResult");
  int64_t v6 = *a3;
  int64_t v7 = (char)a3[1];
  xpc_dictionary_set_int64(v5, "NCP:Channel", v6);
  xpc_dictionary_set_int64(v5, "RSSI", v7);
  xpc_object_t v8 = *(uint64_t **)(a1 + 80);
  sub_10000AC00(&__p, "EnergyScanResult");
  if (v5)
  {
    xpc_object_t v12 = v5;
  }

  else
  {
    xpc_object_t v5 = xpc_null_create();
    xpc_object_t v12 = v5;
    if (!v5)
    {
      xpc_object_t v9 = xpc_null_create();
      xpc_object_t v5 = 0LL;
      goto LABEL_8;
    }
  }

  if (xpc_get_type(v5) == (xpc_type_t)&_xpc_type_dictionary)
  {
    xpc_retain(v5);
    goto LABEL_9;
  }

  xpc_object_t v9 = xpc_null_create();
LABEL_8:
  xpc_object_t v12 = v9;
LABEL_9:
  aBlock = 0LL;
  dispatch_object_t object = 0LL;
  sub_10015E448(v8, &__p, &v12, (uint64_t)&aBlock);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  xpc_release(v12);
  xpc_object_t v12 = 0LL;
  xpc_release(v5);
}

void sub_10001C41C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, xpc_object_t a11, char a12)
{
}

uint64_t sub_10001C450(uint64_t a1)
{
  uint64_t v3 = (void **)a1;
  sub_10000EFEC(&v3);
  return a1;
}

void *sub_10001C48C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t *a4@<X8>)
{
  int64_t v7 = (uint64_t *)sub_10002EB40((uint64_t *)(a1 + 8));
  return sub_10002EB80(v7, a2, a3, a4);
}

void sub_10001C4CC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  xpc_object_t v5 = xpc_dictionary_create(0LL, 0LL, 0LL);
  xpc_dictionary_set_string(v5, "method", "NetworkTimeUpdate");
  xpc_dictionary_set_string(v5, "key", "NetworkTimeUpdate");
  sub_10000D66C(v15, a3);
  sub_10012C860(v5, v15);
  if (v15[0]) {
    (*(void (**)(uint64_t))(*(void *)v15[0] + 8LL))(v15[0]);
  }
  int64_t v6 = _Block_copy(&stru_1002AE268);
  int64_t v7 = *(dispatch_object_s **)(a1 + 72);
  if (v7) {
    dispatch_retain(*(dispatch_object_t *)(a1 + 72));
  }
  v15[0] = (uint64_t)v6;
  v15[1] = (uint64_t)v7;
  xpc_object_t v8 = *(uint64_t **)(a1 + 80);
  sub_10000AC00(&__p, "NetworkTimeUpdate");
  if (v5)
  {
    xpc_object_t v13 = v5;
  }

  else
  {
    xpc_object_t v5 = xpc_null_create();
    xpc_object_t v13 = v5;
    if (!v5)
    {
      xpc_object_t v9 = xpc_null_create();
      xpc_object_t v5 = 0LL;
LABEL_13:
      xpc_object_t v13 = v9;
      if (!v6) {
        goto LABEL_14;
      }
LABEL_11:
      uint64_t v10 = _Block_copy(v6);
      goto LABEL_15;
    }
  }

  if (xpc_get_type(v5) != (xpc_type_t)&_xpc_type_dictionary)
  {
    xpc_object_t v9 = xpc_null_create();
    goto LABEL_13;
  }

  xpc_retain(v5);
  if (v6) {
    goto LABEL_11;
  }
LABEL_14:
  uint64_t v10 = 0LL;
LABEL_15:
  aBlock = v10;
  dispatch_object_t object = v7;
  if (v7) {
    dispatch_retain(v7);
  }
  sub_10015E448(v8, &__p, &v13, (uint64_t)&aBlock);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  xpc_release(v13);
  xpc_object_t v13 = 0LL;
  xpc_release(v5);
  if (v7) {
    dispatch_release(v7);
  }
  if (v6) {
    _Block_release(v6);
  }
}

void sub_10001C698( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, xpc_object_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  sub_10001CD30((uint64_t)&a18);
  _Unwind_Resume(a1);
}

uint64_t sub_10001C704(uint64_t a1)
{
  uint64_t v3 = (void **)a1;
  sub_10000EFEC(&v3);
  return a1;
}

void sub_10001C740(uint64_t a1, int a2, uint64_t a3, uint64_t **a4, const char *a5, const char *a6, uint64_t a7)
{
  xpc_object_t v13 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v13)
  {
    int v14 = v13;
    if (sub_10015A058(5) && os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
    {
      xpc_object_t v15 = a5;
      if (a5[23] < 0) {
        xpc_object_t v15 = *(const char **)a5;
      }
      *(_DWORD *)std::string::size_type v24 = 136315394;
      *(void *)&v24[4] = v15;
      *(_WORD *)&v24[12] = 2080;
      *(void *)&v24[14] = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_INFO,  "WPANTUND_v1 Sending XPC response for method %s to %s",  v24,  0x16u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  if (*(void *)a7 && *(void *)(a7 + 8))
  {
    xpc_object_t v16 = xpc_dictionary_create(0LL, 0LL, 0LL);
    xpc_object_t v17 = v16;
    if (a5[23] < 0) {
      a5 = *(const char **)a5;
    }
    xpc_dictionary_set_string(v16, "method", a5);
    std::string v18 = a6;
    if (a6[23] < 0) {
      std::string v18 = *(const char **)a6;
    }
    xpc_dictionary_set_string(v17, "property_name", v18);
    xpc_dictionary_set_int64(v17, "ret", a2);
    if (a6[23] < 0) {
      a6 = *(const char **)a6;
    }
    if (!strcmp(a6, "NCP:TXPower"))
    {
      int v20 = (*(uint64_t (**)(void))(**(void **)(a1 + 16) + 376LL))(*(void *)(a1 + 16));
      xpc_dictionary_set_int64(v17, "value", v20);
      std::string v21 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v21)
      {
        if (sub_10015A058(5) && os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)std::string::size_type v24 = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_INFO,  "Getting Value for the updated NCP:TXPower",  v24,  2u);
        }
      }

      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        sub_1001FB53C();
      }
    }

    if (!v17) {
      xpc_object_t v17 = xpc_null_create();
    }
    if (*(void *)a7) {
      __int128 v19 = _Block_copy(*(const void **)a7);
    }
    else {
      __int128 v19 = 0LL;
    }
    std::string v22 = *(dispatch_queue_s **)(a7 + 8);
    *(void *)std::string::size_type v24 = _NSConcreteStackBlock;
    *(void *)&v24[8] = 1174405120LL;
    *(void *)&v24[16] = sub_100030090;
    int v25 = &unk_1002AE940;
    if (v19) {
      int v23 = _Block_copy(v19);
    }
    else {
      int v23 = 0LL;
    }
    int v28 = 0;
    aBlock = v23;
    xpc_object_t object = v17;
    if (v17) {
      xpc_retain(v17);
    }
    else {
      xpc_object_t object = xpc_null_create();
    }
    dispatch_async(v22, v24);
    xpc_release(object);
    xpc_object_t object = 0LL;
    if (aBlock) {
      _Block_release(aBlock);
    }
    if (v19) {
      _Block_release(v19);
    }
    xpc_release(v17);
  }

void sub_10001CA68(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    sub_100006EEC(a1);
  }
  _Unwind_Resume(a1);
}

void sub_10001CAAC(uint64_t a1, int a2, uint64_t a3, uint64_t **a4, const char *a5, uint64_t a6)
{
  uint64_t v10 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v10)
  {
    char v11 = v10;
    if (sub_10015A058(5) && os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      xpc_object_t v12 = a5;
      if (a5[23] < 0) {
        xpc_object_t v12 = *(const char **)a5;
      }
      *(_DWORD *)std::string v18 = 136315650;
      *(void *)&v18[4] = v12;
      *(_WORD *)&v18[12] = 2080;
      *(void *)&v18[14] = a4;
      *(_WORD *)&v18[22] = 1024;
      LODWORD(v19) = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_INFO,  "WPANTUND_v1 Sending XPC response for method %s to %s, ret : %d",  v18,  0x1Cu);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  if (*(void *)a6 && *(void *)(a6 + 8))
  {
    xpc_object_t v13 = xpc_dictionary_create(0LL, 0LL, 0LL);
    xpc_object_t v14 = v13;
    if (a5[23] < 0) {
      a5 = *(const char **)a5;
    }
    xpc_dictionary_set_string(v13, "method", a5);
    xpc_dictionary_set_int64(v14, "ret", a2);
    if (!v14) {
      xpc_object_t v14 = xpc_null_create();
    }
    if (*(void *)a6) {
      xpc_object_t v15 = _Block_copy(*(const void **)a6);
    }
    else {
      xpc_object_t v15 = 0LL;
    }
    xpc_object_t v16 = *(dispatch_queue_s **)(a6 + 8);
    *(void *)std::string v18 = _NSConcreteStackBlock;
    *(void *)&v18[8] = 1174405120LL;
    *(void *)&v18[16] = sub_100030090;
    __int128 v19 = &unk_1002AE940;
    if (v15) {
      xpc_object_t v17 = _Block_copy(v15);
    }
    else {
      xpc_object_t v17 = 0LL;
    }
    int v22 = 0;
    aBlock = v17;
    xpc_object_t object = v14;
    if (v14) {
      xpc_retain(v14);
    }
    else {
      xpc_object_t object = xpc_null_create();
    }
    dispatch_async(v16, v18);
    xpc_release(object);
    xpc_object_t object = 0LL;
    if (aBlock) {
      _Block_release(aBlock);
    }
    if (v15) {
      _Block_release(v15);
    }
    xpc_release(v14);
  }

void sub_10001CCEC(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    sub_100006EEC(a1);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10001CD30(uint64_t a1)
{
  uint64_t v2 = *(dispatch_object_s **)(a1 + 8);
  if (v2) {
    dispatch_release(v2);
  }
  if (*(void *)a1) {
    _Block_release(*(const void **)a1);
  }
  return a1;
}

void sub_10001CD6C(id a1)
{
  uint64_t v1 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v1)
  {
    uint64_t v2 = v1;
    if (sub_10015A058(6))
    {
      if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)uint64_t v3 = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "All Clients Rcvd the Network_time_update Event",  v3,  2u);
      }
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

void sub_10001CE0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (uint64_t *)sub_10000CB98(a3);
  if (v4)
  {
    xpc_object_t v5 = v4;
    int64_t v6 = v4 + 1;
    if (*v4 != v4[1] && *v4 != 0)
    {
      xpc_object_t v12 = xpc_dictionary_create(0LL, 0LL, 0LL);
      xpc_dictionary_set_string(v12, "method", "vendor:networkdiagnosticsrsp");
      xpc_dictionary_set_string(v12, "key", "vendor:networkdiagnosticsrsp");
      uint64_t v13 = v5[1];
      if (v13 == *v5) {
        xpc_object_t v14 = 0LL;
      }
      else {
        xpc_object_t v14 = (const void *)*v5;
      }
      xpc_dictionary_set_data(v12, "value", v14, v13 - *v5);
      xpc_object_t v15 = _Block_copy(&stru_1002AE2A8);
      xpc_object_t v16 = *(dispatch_object_s **)(a1 + 72);
      if (v16) {
        dispatch_retain(*(dispatch_object_t *)(a1 + 72));
      }
      std::string::size_type v24 = v15;
      int v25 = v16;
      xpc_object_t v17 = *(uint64_t **)(a1 + 80);
      sub_10000AC00(&__p, "vendor:networkdiagnosticsrsp");
      if (v12)
      {
        xpc_object_t v22 = v12;
      }

      else
      {
        xpc_object_t v12 = xpc_null_create();
        xpc_object_t v22 = v12;
        if (!v12)
        {
          xpc_object_t v18 = xpc_null_create();
          xpc_object_t v12 = 0LL;
          goto LABEL_32;
        }
      }

      if (xpc_get_type(v12) == (xpc_type_t)&_xpc_type_dictionary)
      {
        xpc_retain(v12);
        if (!v15)
        {
LABEL_33:
          __int128 v19 = 0LL;
          goto LABEL_34;
        }

LABEL_30:
        __int128 v19 = _Block_copy(v15);
LABEL_34:
        aBlock = v19;
        dispatch_object_t object = v16;
        if (v16) {
          dispatch_retain(v16);
        }
        sub_10015E448(v17, &__p, &v22, (uint64_t)&aBlock);
        if (object) {
          dispatch_release(object);
        }
        if (aBlock) {
          _Block_release(aBlock);
        }
        xpc_release(v22);
        xpc_object_t v22 = 0LL;
        xpc_release(v12);
        if (v16) {
          dispatch_release(v16);
        }
        if (v15) {
          _Block_release(v15);
        }
        return;
      }

      xpc_object_t v18 = xpc_null_create();
LABEL_32:
      xpc_object_t v22 = v18;
      if (!v15) {
        goto LABEL_33;
      }
      goto LABEL_30;
    }

    xpc_object_t v8 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v8)
    {
      xpc_object_t v9 = v8;
      return;
    }

    if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      return;
    }
LABEL_23:
    sub_1001FB53C();
    return;
  }

  uint64_t v10 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (!v10)
  {
    if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      return;
    }
    goto LABEL_23;
  }

  char v11 = v10;
}

    xpc_object_t v18 = xpc_null_create();
    goto LABEL_31;
  }

  std::string v29 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_txErrBusyChannel));
  [v3 setObject:v29 forKey:@"tx_err_busy_channel"];

  has = self->_has;
  if ((*(_WORD *)&has & 0x200) == 0)
  {
LABEL_9:
    if ((*(_DWORD *)&has & 0x20000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }

  v4[56] = self->_txErrBusyChannel;
  v4[64] |= 0x1000u;
  has = self->_has;
  if ((*(_WORD *)&has & 0x200) == 0)
  {
LABEL_9:
    if ((*(_DWORD *)&has & 0x20000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }

  uint64_t v4 = 1LL;
  if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    sub_1000A9F28(a1, v16);
    if (v17 >= 0) {
      xpc_object_t v14 = v16;
    }
    else {
      xpc_object_t v14 = (void **)v16[0];
    }
    *(_DWORD *)std::string __p = 136315394;
    *(void *)&__p[4] = v14;
    *(_WORD *)&__p[12] = 2080;
    *(void *)&__p[14] = a2;
    _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_INFO,  "Connection %s allowed for: %s \n",  __p,  0x16u);
    if (v17 < 0) {
      operator delete(v16[0]);
    }
    return 1LL;
  }

  return v4;
}

  __int128 v19 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_listeningTime));
  [v3 setObject:v19 forKey:@"listening_time"];

  has = (__int16)self->_has;
  if ((has & 2) != 0) {
    goto LABEL_31;
  }
LABEL_15:
  if ((has & 0x400) != 0)
  {
LABEL_16:
    xpc_object_t v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_transmittingTime));
    [v3 setObject:v5 forKey:@"transmitting_time"];
  }

  return v3;
}

  PBDataWriterWriteUint32Field(v5, self->_listeningTime, 13LL);
  has = (__int16)self->_has;
  if ((has & 2) != 0) {
    goto LABEL_31;
  }
LABEL_15:
  if ((has & 0x400) != 0) {
LABEL_16:
  }
    PBDataWriterWriteUint32Field(v5, self->_transmittingTime, 15LL);
LABEL_17:
}

  uint64_t v4[2] = self->_listeningTime;
  *((_WORD *)v4 + 34) |= 1u;
  has = (__int16)self->_has;
  if ((has & 2) != 0) {
    goto LABEL_31;
  }
LABEL_15:
  if ((has & 0x400) != 0)
  {
LABEL_16:
    v4[12] = self->_transmittingTime;
    *((_WORD *)v4 + 34) |= 0x400u;
  }

  *((_DWORD *)result + 2) = self->_listeningTime;
  *((_WORD *)result + 34) |= 1u;
  has = (__int16)self->_has;
  if ((has & 2) == 0)
  {
LABEL_15:
    if ((has & 0x400) == 0) {
      return result;
    }
    goto LABEL_16;
  }

  self->_listeningTime = *((_DWORD *)v4 + 2);
  *(_WORD *)&self->_has |= 1u;
  xpc_object_t v5 = *((_WORD *)v4 + 34);
  if ((v5 & 2) != 0) {
    goto LABEL_31;
  }
LABEL_15:
  if ((v5 & 0x400) != 0)
  {
LABEL_16:
    self->_transmittingTime = *((_DWORD *)v4 + 12);
    *(_WORD *)&self->_has |= 0x400u;
  }

    uint64_t v4 = (__int128 *)(a1 + 184);
    int64_t v7 = (uint64_t **)(a1 + 1320);
    int64_t v6 = (__int128 *)(a1 + 216);
  }

  int v20 = *v5;
  if (*v5) {
    goto LABEL_41;
  }
  std::string v21 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v21)
  {
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  sub_10000AC00(&__p, "/dev/null");
  sub_1001247E4(&__p, (uint64_t *)buf);
  sub_1000D4BE4((__int128 *)(a1 + 200), (__int128 *)buf);
  sub_10000F9EC((uint64_t *)&buf[8]);
  int v20 = *v5;
  if (*v5) {
LABEL_41:
  }
    (*(void (**)(uint64_t, uint64_t))(*(void *)v20 + 64LL))(v20, 7LL);
  sub_10008AE9C(v6, (uint64_t *)(a1 + 200));
  std::string v29 = operator new(0xF0uLL);
  sub_10011E570(v29, &v59, *(unsigned int *)(a1 + 1392), 1280LL);
  sub_1000DC548((uint64_t *)&__p, (uint64_t)v29);
  sub_1000D4BE4(v4, (__int128 *)&__p);
  sub_10000F9EC((uint64_t *)&__p.__r_.__value_.__l.__size_);
  std::string v30 = (const std::string *)sub_10011EC48(*(void *)v4);
  std::string::basic_string(&v58, v30);
  char v31 = sub_1000AD5C0();
  sub_10000D780((uint64_t)v31, &v58);
  __int16 v32 = *(void *)(a1 + 184);
  *(void *)std::string buf = sub_1000EE2F4;
  *(void *)&buf[8] = 0LL;
  uint64_t v62 = a1;
  __int128 v63 = 0xFFFFFFFF00000001LL;
  uint64_t v64 = -1;
  sub_1000DD6A4(&__p, (uint64_t)buf);
  sub_1000D4C2C(v32 + 24, (uint64_t)&__p, 0, &v56);
  sub_10000EF74(&v57);
  sub_1000DBFE8(&v53);
  p_p = &__p;
  sub_10000EFEC((void ***)&p_p);
  char v33 = *(void *)(a1 + 184);
  *(void *)std::string buf = sub_1000EE5E4;
  *(void *)&buf[8] = 0LL;
  uint64_t v62 = a1;
  LODWORD(v63) = 1;
  sub_1000DDA4C(&__p, buf);
  sub_1000D4C2C(v33 + 48, (uint64_t)&__p, 0, &v50);
  sub_10000EF74(&v51);
  sub_1000DBFE8(&v53);
  p_p = &__p;
  sub_10000EFEC((void ***)&p_p);
  __int16 v34 = *(void *)(a1 + 184);
  *(void *)std::string buf = sub_1000EF6BC;
  *(void *)&buf[8] = 0LL;
  uint64_t v62 = a1;
  LODWORD(v63) = 1;
  sub_1000DEAD4(&__p, buf);
  sub_1000D4C70(v34 + 72, (uint64_t)&__p, 0, &v48);
  sub_10000EF74(&v49);
  sub_1000DC010(&v53);
  p_p = &__p;
  sub_10000EFEC((void ***)&p_p);
  xpc_object_t v35 = *(void *)(a1 + 184);
  *(void *)std::string buf = sub_1000EF25C;
  *(void *)&buf[8] = 0LL;
  uint64_t v62 = a1;
  LODWORD(v63) = 1;
  sub_1000DEAD4(&__p, buf);
  sub_1000D4C70(v35 + 96, (uint64_t)&__p, 0, &v46);
  sub_10000EF74(&v47);
  sub_1000DC010(&v53);
  p_p = &__p;
  sub_10000EFEC((void ***)&p_p);
  char v36 = *(void *)(a1 + 184);
  *(_OWORD *)std::string buf = xmmword_100228310;
  uint64_t v62 = a1;
  sub_1000DFD20(&__p, (uint64_t)buf);
  sub_1000D4CB4(v36 + 120, (uint64_t)&__p, 0, &v44);
  sub_10000EF74(&v45);
  sub_1000DC038(&v53);
  p_p = &__p;
  sub_10000EFEC((void ***)&p_p);
  (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 104LL))(a1, 1LL);
  *(void *)(a1 + 67208) = FillmoreCreateController(kCFAllocatorDefault);
  uint64_t v37 = sub_100110CE0("Daemon:SyslogMask");
  if (v37)
  {
    sub_10000AC00(&__p, (char *)v37);
    char v38 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v38)
    {
      if (sub_10015A058(5) && os_log_type_enabled(v38, OS_LOG_TYPE_INFO))
      {
        xpc_object_t v39 = &__p;
        if ((__p.__r_.__value_.__s.__size_ & 0x80u) != 0) {
          xpc_object_t v39 = (std::string *)__p.__r_.__value_.__r.__words[0];
        }
        *(_DWORD *)std::string buf = 136315138;
        *(void *)&uint8_t buf[4] = v39;
        _os_log_impl((void *)&_mh_execute_header, v38, OS_LOG_TYPE_INFO, "Read SysLogMask as %s", buf, 0xCu);
      }
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }

    std::string v40 = sub_100030134(buf, &__p);
    memset(v43, 0, sizeof(v43));
    sub_1000D4CF8((uint64_t)v40, (uint64_t *)buf, v43);
    sub_1000075F0(v43);
    if (*(void *)buf) {
      (*(void (**)(void))(**(void **)buf + 8LL))(*(void *)buf);
    }
  }

  sub_10000AC00(&__p, "ff03::1");
  sub_100113444(a1, (uint64_t)&__p);
  sub_100156D24((uint64_t)&__p);
  __p.__r_.__value_.__s.__data_[0] = 0;
  uint64_t v54 = 767;
  __int128 v55 = -32746;
  sub_1000E0058(v7, (unsigned __int8 *)&__p, (uint64_t)&__p);
  sub_100156D24((uint64_t)&__p);
  LOWORD(__p.__r_.__value_.__l.__data_) = -31174;
  uint64_t v54 = 767;
  __int128 v55 = -32766;
  sub_1000E0058(v7, (unsigned __int8 *)&__p, (uint64_t)&__p);
  __p.__r_.__value_.__s.__data_[1] = -123;
  sub_1000E0058(v7, (unsigned __int8 *)&__p, (uint64_t)&__p);
  sub_100156D24((uint64_t)&__p);
  LOWORD(__p.__r_.__value_.__l.__data_) = -30662;
  sub_1000E0058(v7, (unsigned __int8 *)&__p, (uint64_t)&__p);
  __p.__r_.__value_.__s.__data_[1] = -121;
  sub_1000E0058(v7, (unsigned __int8 *)&__p, (uint64_t)&__p);
  __p.__r_.__value_.__s.__data_[1] = -119;
  sub_1000E0058(v7, (unsigned __int8 *)&__p, (uint64_t)&__p);
  return a1;
}

  char v33 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v33)
  {
    __int16 v34 = v33;
    if (sub_10015A058(7))
    {
      if (os_log_type_enabled(v34, OS_LOG_TYPE_DEBUG)) {
        sub_1002128D0();
      }
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FF028();
  }

          return;
        }
      }

      __break(1u);
    }

    __break(0x5500u);
  }

void sub_10001D0B4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, xpc_object_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, char a18)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  sub_10001CD30((uint64_t)&a18);
  _Unwind_Resume(a1);
}

void sub_10001D104(id a1)
{
  uint64_t v1 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v1)
  {
    uint64_t v2 = v1;
    if (sub_10015A058(6))
    {
      if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)uint64_t v3 = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "All Clients Rcvd the Network Diagnostics Rsp Event",  v3,  2u);
      }
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

void sub_10001D1A4(id a1)
{
  uint64_t v1 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v1)
  {
    uint64_t v2 = v1;
    if (sub_10015A058(6))
    {
      if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)uint64_t v3 = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_INFO,  "All Clients Rcvd the Property-Changed Event",  v3,  2u);
      }
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

void sub_10001D244(uint64_t a1, int a2, uint64_t a3, uint64_t a4, const char *a5, uint64_t a6)
{
  if (*(void *)a6 && *(void *)(a6 + 8))
  {
    xpc_object_t v10 = xpc_dictionary_create(0LL, 0LL, 0LL);
    xpc_dictionary_set_int64(v10, "ret", a2);
    if (a5[23] < 0) {
      a5 = *(const char **)a5;
    }
    xpc_dictionary_set_string(v10, "method", a5);
    if (v10)
    {
      std::string::size_type v56 = 0LL;
      block = 0LL;
      uint64_t v58 = 0LL;
      __int128 v59 = 0LL;
      xpc_object_t v11 = xpc_array_create(0LL, 0LL);
      sub_10000AC00(&__p, "NCP:State");
      sub_1000FC7CC(a3, (uint64_t)&__p, &v54);
      std::string::size_type v12 = v56;
      std::string::size_type v56 = v54.__r_.__value_.__r.__words[0];
      v54.__r_.__value_.__r.__words[0] = 0LL;
      if (v12)
      {
        (*(void (**)(std::string::size_type))(*(void *)v12 + 8LL))(v12);
        if (v54.__r_.__value_.__r.__words[0]) {
          (*(void (**)(std::string::size_type))(*(void *)v54.__r_.__value_.__l.__data_ + 8LL))(v54.__r_.__value_.__r.__words[0]);
        }
      }

      if (v56)
      {
        sub_100147B4C((uint64_t *)&v56, &__p);
        sub_100014D08((uint64_t)&block, (__int128 *)&__p);
        unsigned int v13 = sub_1000B5828(&block);
        if (SHIBYTE(v59) >= 0) {
          p_block = (BOOL *)&block;
        }
        else {
          p_block = (BOOL *)block;
        }
      }

      else
      {
        unsigned int v13 = 0;
        p_block = (BOOL *)"uninitialized";
      }

      sub_10012C8A8(v11, "NCP:State", 0xAuLL, p_block);
      sub_10000AC00(&__p, "Daemon:Enabled");
      sub_1000FC7CC(a3, (uint64_t)&__p, &v54);
      std::string::size_type v15 = v56;
      std::string::size_type v56 = v54.__r_.__value_.__r.__words[0];
      v54.__r_.__value_.__r.__words[0] = 0LL;
      if (v15)
      {
        (*(void (**)(std::string::size_type))(*(void *)v15 + 8LL))(v15);
        if (v54.__r_.__value_.__r.__words[0]) {
          (*(void (**)(std::string::size_type))(*(void *)v54.__r_.__value_.__l.__data_ + 8LL))(v54.__r_.__value_.__r.__words[0]);
        }
      }

      if (v56) {
        sub_10012BF68(v11, "Daemon:Enabled", (uint64_t)&v56);
      }
      uint64_t v16 = sub_10000B370();
      xpc_object_t v17 = operator new(0x10uLL);
      *xpc_object_t v17 = &off_1002AE088;
      v17[1] = v16;
      v52.__r_.__value_.__r.__words[0] = (std::string::size_type)v17;
      sub_100147B4C((uint64_t *)&v52, &v53);
      xpc_object_t v18 = std::string::insert(&v53, 0LL, "0x");
      __int128 v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
      v54.__r_.__value_.__l.__cap_ = v18->__r_.__value_.__l.__cap_;
      *(_OWORD *)&v54.__r_.__value_.__l.__data_ = v19;
      v18->__r_.__value_.__l.__size_ = 0LL;
      v18->__r_.__value_.__l.__cap_ = 0LL;
      v18->__r_.__value_.__r.__words[0] = 0LL;
      int v20 = std::string::append(&v54, " Sec");
      __int128 v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
      __p.__r_.__value_.__l.__cap_ = v20->__r_.__value_.__l.__cap_;
      *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v21;
      v20->__r_.__value_.__l.__size_ = 0LL;
      v20->__r_.__value_.__l.__cap_ = 0LL;
      v20->__r_.__value_.__r.__words[0] = 0LL;
      if (v52.__r_.__value_.__r.__words[0]) {
        (*(void (**)(std::string::size_type))(*(void *)v52.__r_.__value_.__l.__data_ + 8LL))(v52.__r_.__value_.__r.__words[0]);
      }
      sub_100030134(&v54, &__p);
      sub_10012BF68(v11, "System:Up Time", (uint64_t)&v54);
      if (v54.__r_.__value_.__r.__words[0]) {
        (*(void (**)(std::string::size_type))(*(void *)v54.__r_.__value_.__l.__data_ + 8LL))(v54.__r_.__value_.__r.__words[0]);
      }
      __darwin_time_t v22 = sub_10000B428();
      int v23 = operator new(0x10uLL);
      *int v23 = &off_1002AE088;
      v23[1] = v22;
      __int128 v51 = v23;
      sub_100147B4C((uint64_t *)&v51, &v52);
      std::string::size_type v24 = std::string::insert(&v52, 0LL, "0x");
      __int128 v25 = *(_OWORD *)&v24->__r_.__value_.__l.__data_;
      v53.__r_.__value_.__l.__cap_ = v24->__r_.__value_.__l.__cap_;
      *(_OWORD *)&v53.__r_.__value_.__l.__data_ = v25;
      v24->__r_.__value_.__l.__size_ = 0LL;
      v24->__r_.__value_.__l.__cap_ = 0LL;
      v24->__r_.__value_.__r.__words[0] = 0LL;
      std::string v26 = std::string::append(&v53, " Sec");
      __int128 v27 = *(_OWORD *)&v26->__r_.__value_.__l.__data_;
      v54.__r_.__value_.__l.__cap_ = v26->__r_.__value_.__l.__cap_;
      *(_OWORD *)&v54.__r_.__value_.__l.__data_ = v27;
      v26->__r_.__value_.__l.__size_ = 0LL;
      v26->__r_.__value_.__l.__cap_ = 0LL;
      v26->__r_.__value_.__r.__words[0] = 0LL;
      sub_100014D08((uint64_t)&__p, (__int128 *)&v54);
      if (v51) {
        (*(void (**)(void *))(*v51 + 8LL))(v51);
      }
      sub_100030134(&v54, &__p);
      sub_10012BF68(v11, "Daemon:Up Time", (uint64_t)&v54);
      if (v54.__r_.__value_.__r.__words[0]) {
        (*(void (**)(std::string::size_type))(*(void *)v54.__r_.__value_.__l.__data_ + 8LL))(v54.__r_.__value_.__r.__words[0]);
      }
      sub_10000AC00(&v54, "NCP:Version");
      sub_1000FC7CC(a3, (uint64_t)&v54, &v53);
      std::string::size_type v28 = v56;
      std::string::size_type v56 = v53.__r_.__value_.__r.__words[0];
      v53.__r_.__value_.__r.__words[0] = 0LL;
      if (v28)
      {
        (*(void (**)(std::string::size_type))(*(void *)v28 + 8LL))(v28);
        if (v53.__r_.__value_.__r.__words[0]) {
          (*(void (**)(std::string::size_type))(*(void *)v53.__r_.__value_.__l.__data_ + 8LL))(v53.__r_.__value_.__r.__words[0]);
        }
      }

      if (v56) {
        sub_10012BF68(v11, "NCP:Version", (uint64_t)&v56);
      }
      sub_10000AC00(&v54, "POSIXApp:RCPVersion:Cached");
      sub_1000FC7CC(a3, (uint64_t)&v54, &v53);
      std::string::size_type v29 = v56;
      std::string::size_type v56 = v53.__r_.__value_.__r.__words[0];
      v53.__r_.__value_.__r.__words[0] = 0LL;
      if (v29)
      {
        (*(void (**)(std::string::size_type))(*(void *)v29 + 8LL))(v29);
        if (v53.__r_.__value_.__r.__words[0]) {
          (*(void (**)(std::string::size_type))(*(void *)v53.__r_.__value_.__l.__data_ + 8LL))(v53.__r_.__value_.__r.__words[0]);
        }
      }

      if (v56) {
        sub_10012BF68(v11, "POSIXApp:RCPVersion", (uint64_t)&v56);
      }
      sub_10000AC00(&v54, "Daemon:Version");
      sub_1000FC7CC(a3, (uint64_t)&v54, &v53);
      std::string::size_type v30 = v56;
      std::string::size_type v56 = v53.__r_.__value_.__r.__words[0];
      v53.__r_.__value_.__r.__words[0] = 0LL;
      if (v30)
      {
        (*(void (**)(std::string::size_type))(*(void *)v30 + 8LL))(v30);
        if (v53.__r_.__value_.__r.__words[0]) {
          (*(void (**)(std::string::size_type))(*(void *)v53.__r_.__value_.__l.__data_ + 8LL))(v53.__r_.__value_.__r.__words[0]);
        }
      }

      if (v56) {
        sub_10012BF68(v11, "Daemon:Version", (uint64_t)&v56);
      }
      sub_10000AC00(&v54, "Config:NCP:DriverName");
      sub_1000FC7CC(a3, (uint64_t)&v54, &v53);
      std::string::size_type v31 = v56;
      std::string::size_type v56 = v53.__r_.__value_.__r.__words[0];
      v53.__r_.__value_.__r.__words[0] = 0LL;
      if (v31)
      {
        (*(void (**)(std::string::size_type))(*(void *)v31 + 8LL))(v31);
        if (v53.__r_.__value_.__r.__words[0]) {
          (*(void (**)(std::string::size_type))(*(void *)v53.__r_.__value_.__l.__data_ + 8LL))(v53.__r_.__value_.__r.__words[0]);
        }
      }

      if (v56) {
        sub_10012BF68(v11, "Config:NCP:DriverName", (uint64_t)&v56);
      }
      sub_10000AC00(&v54, "NCP:HardwareAddress");
      sub_1000FC7CC(a3, (uint64_t)&v54, &v53);
      std::string::size_type v32 = v56;
      std::string::size_type v56 = v53.__r_.__value_.__r.__words[0];
      v53.__r_.__value_.__r.__words[0] = 0LL;
      if (v32)
      {
        (*(void (**)(std::string::size_type))(*(void *)v32 + 8LL))(v32);
        if (v53.__r_.__value_.__r.__words[0]) {
          (*(void (**)(std::string::size_type))(*(void *)v53.__r_.__value_.__l.__data_ + 8LL))(v53.__r_.__value_.__r.__words[0]);
        }
      }

      if (v56) {
        sub_10012BF68(v11, "NCP:HardwareAddress", (uint64_t)&v56);
      }
      sub_10000AC00(&v54, "vendor:version");
      sub_1000FC7CC(a3, (uint64_t)&v54, &v53);
      std::string::size_type v33 = v56;
      std::string::size_type v56 = v53.__r_.__value_.__r.__words[0];
      v53.__r_.__value_.__r.__words[0] = 0LL;
      if (v33)
      {
        (*(void (**)(std::string::size_type))(*(void *)v33 + 8LL))(v33);
        if (v53.__r_.__value_.__r.__words[0]) {
          (*(void (**)(std::string::size_type))(*(void *)v53.__r_.__value_.__l.__data_ + 8LL))(v53.__r_.__value_.__r.__words[0]);
        }
      }

      if (v56) {
        sub_10012BF68(v11, "vendor:version", (uint64_t)&v56);
      }
      if (sub_1000B50D0(v13))
      {
        sub_10000AC00(&v54, "NCP:Channel");
        sub_1000FC7CC(a3, (uint64_t)&v54, &v53);
        std::string::size_type v34 = v56;
        std::string::size_type v56 = v53.__r_.__value_.__r.__words[0];
        v53.__r_.__value_.__r.__words[0] = 0LL;
        if (v34)
        {
          (*(void (**)(std::string::size_type))(*(void *)v34 + 8LL))(v34);
          if (v53.__r_.__value_.__r.__words[0]) {
            (*(void (**)(std::string::size_type))(*(void *)v53.__r_.__value_.__l.__data_ + 8LL))(v53.__r_.__value_.__r.__words[0]);
          }
        }

        if (v56) {
          sub_10012BF68(v11, "NCP:Channel", (uint64_t)&v56);
        }
        sub_10000AC00(&v54, "Network:NodeType");
        sub_1000FC7CC(a3, (uint64_t)&v54, &v53);
        std::string::size_type v35 = v56;
        std::string::size_type v56 = v53.__r_.__value_.__r.__words[0];
        v53.__r_.__value_.__r.__words[0] = 0LL;
        if (v35)
        {
          (*(void (**)(std::string::size_type))(*(void *)v35 + 8LL))(v35);
          if (v53.__r_.__value_.__r.__words[0]) {
            (*(void (**)(std::string::size_type))(*(void *)v53.__r_.__value_.__l.__data_ + 8LL))(v53.__r_.__value_.__r.__words[0]);
          }
        }

        if (v56) {
          sub_10012BF68(v11, "Network:NodeType", (uint64_t)&v56);
        }
        sub_10000AC00(&v54, "Network:Name");
        sub_1000FC7CC(a3, (uint64_t)&v54, &v53);
        std::string::size_type v36 = v56;
        std::string::size_type v56 = v53.__r_.__value_.__r.__words[0];
        v53.__r_.__value_.__r.__words[0] = 0LL;
        if (v36)
        {
          (*(void (**)(std::string::size_type))(*(void *)v36 + 8LL))(v36);
          if (v53.__r_.__value_.__r.__words[0]) {
            (*(void (**)(std::string::size_type))(*(void *)v53.__r_.__value_.__l.__data_ + 8LL))(v53.__r_.__value_.__r.__words[0]);
          }
        }

        if (v56) {
          sub_10012BF68(v11, "Network:Name", (uint64_t)&v56);
        }
        sub_10000AC00(&v54, "Network:PartitionId");
        sub_1000FC7CC(a3, (uint64_t)&v54, &v53);
        std::string::size_type v37 = v56;
        std::string::size_type v56 = v53.__r_.__value_.__r.__words[0];
        v53.__r_.__value_.__r.__words[0] = 0LL;
        if (v37)
        {
          (*(void (**)(std::string::size_type))(*(void *)v37 + 8LL))(v37);
          if (v53.__r_.__value_.__r.__words[0]) {
            (*(void (**)(std::string::size_type))(*(void *)v53.__r_.__value_.__l.__data_ + 8LL))(v53.__r_.__value_.__r.__words[0]);
          }
        }

        if (v56) {
          sub_10012BF68(v11, "Network:PartitionId", (uint64_t)&v56);
        }
        sub_10000AC00(&v54, "Network:XPANID");
        sub_1000FC7CC(a3, (uint64_t)&v54, &v53);
        std::string::size_type v38 = v56;
        std::string::size_type v56 = v53.__r_.__value_.__r.__words[0];
        v53.__r_.__value_.__r.__words[0] = 0LL;
        if (v38)
        {
          (*(void (**)(std::string::size_type))(*(void *)v38 + 8LL))(v38);
          if (v53.__r_.__value_.__r.__words[0]) {
            (*(void (**)(std::string::size_type))(*(void *)v53.__r_.__value_.__l.__data_ + 8LL))(v53.__r_.__value_.__r.__words[0]);
          }
        }

        if (v56) {
          sub_10012BF68(v11, "Network:XPANID", (uint64_t)&v56);
        }
        sub_10000AC00(&v54, "Network:PANID");
        sub_1000FC7CC(a3, (uint64_t)&v54, &v53);
        std::string::size_type v39 = v56;
        std::string::size_type v56 = v53.__r_.__value_.__r.__words[0];
        v53.__r_.__value_.__r.__words[0] = 0LL;
        if (v39)
        {
          (*(void (**)(std::string::size_type))(*(void *)v39 + 8LL))(v39);
          if (v53.__r_.__value_.__r.__words[0]) {
            (*(void (**)(std::string::size_type))(*(void *)v53.__r_.__value_.__l.__data_ + 8LL))(v53.__r_.__value_.__r.__words[0]);
          }
        }

        if (v56) {
          sub_10012BF68(v11, "Network:PANID", (uint64_t)&v56);
        }
        sub_10000AC00(&v54, "IPv6:LinkLocalAddress");
        sub_1000FC7CC(a3, (uint64_t)&v54, &v53);
        std::string::size_type v40 = v56;
        std::string::size_type v56 = v53.__r_.__value_.__r.__words[0];
        v53.__r_.__value_.__r.__words[0] = 0LL;
        if (v40)
        {
          (*(void (**)(std::string::size_type))(*(void *)v40 + 8LL))(v40);
          if (v53.__r_.__value_.__r.__words[0]) {
            (*(void (**)(std::string::size_type))(*(void *)v53.__r_.__value_.__l.__data_ + 8LL))(v53.__r_.__value_.__r.__words[0]);
          }
        }

        if (v56) {
          sub_10012BF68(v11, "IPv6:LinkLocalAddress", (uint64_t)&v56);
        }
        sub_10000AC00(&v54, "IPv6:MeshLocalAddress");
        sub_1000FC7CC(a3, (uint64_t)&v54, &v53);
        std::string::size_type v41 = v56;
        std::string::size_type v56 = v53.__r_.__value_.__r.__words[0];
        v53.__r_.__value_.__r.__words[0] = 0LL;
        if (v41)
        {
          (*(void (**)(std::string::size_type))(*(void *)v41 + 8LL))(v41);
          if (v53.__r_.__value_.__r.__words[0]) {
            (*(void (**)(std::string::size_type))(*(void *)v53.__r_.__value_.__l.__data_ + 8LL))(v53.__r_.__value_.__r.__words[0]);
          }
        }

        if (v56) {
          sub_10012BF68(v11, "IPv6:MeshLocalAddress", (uint64_t)&v56);
        }
        sub_10000AC00(&v54, "IPv6:MeshLocalPrefix");
        sub_1000FC7CC(a3, (uint64_t)&v54, &v53);
        std::string::size_type v42 = v56;
        std::string::size_type v56 = v53.__r_.__value_.__r.__words[0];
        v53.__r_.__value_.__r.__words[0] = 0LL;
        if (v42)
        {
          (*(void (**)(std::string::size_type))(*(void *)v42 + 8LL))(v42);
          if (v53.__r_.__value_.__r.__words[0]) {
            (*(void (**)(std::string::size_type))(*(void *)v53.__r_.__value_.__l.__data_ + 8LL))(v53.__r_.__value_.__r.__words[0]);
          }
        }

        if (v56) {
          sub_10012BF68(v11, "IPv6:MeshLocalPrefix", (uint64_t)&v56);
        }
        sub_10000AC00(&v54, "com.nestlabs.internal:Legacy:MeshLocalAddress");
        sub_1000FC7CC(a3, (uint64_t)&v54, &v53);
        std::string::size_type v43 = v56;
        std::string::size_type v56 = v53.__r_.__value_.__r.__words[0];
        v53.__r_.__value_.__r.__words[0] = 0LL;
        if (v43)
        {
          (*(void (**)(std::string::size_type))(*(void *)v43 + 8LL))(v43);
          if (v53.__r_.__value_.__r.__words[0]) {
            (*(void (**)(std::string::size_type))(*(void *)v53.__r_.__value_.__l.__data_ + 8LL))(v53.__r_.__value_.__r.__words[0]);
          }
        }

        if (v56) {
          sub_10012BF68(v11, "com.nestlabs.internal:Legacy:MeshLocalAddress", (uint64_t)&v56);
        }
        sub_10000AC00(&v54, "com.nestlabs.internal:Legacy:MeshLocalPrefix");
        sub_1000FC7CC(a3, (uint64_t)&v54, &v53);
        std::string::size_type v44 = v56;
        std::string::size_type v56 = v53.__r_.__value_.__r.__words[0];
        v53.__r_.__value_.__r.__words[0] = 0LL;
        if (v44)
        {
          (*(void (**)(std::string::size_type))(*(void *)v44 + 8LL))(v44);
          if (v53.__r_.__value_.__r.__words[0]) {
            (*(void (**)(std::string::size_type))(*(void *)v53.__r_.__value_.__l.__data_ + 8LL))(v53.__r_.__value_.__r.__words[0]);
          }
        }

        if (v56) {
          sub_10012BF68(v11, "com.nestlabs.internal:Legacy:MeshLocalPrefix", (uint64_t)&v56);
        }
        sub_10000AC00(&v54, "com.nestlabs.internal:Network:AllowingJoin");
        sub_1000FC7CC(a3, (uint64_t)&v54, &v53);
        std::string::size_type v45 = v56;
        std::string::size_type v56 = v53.__r_.__value_.__r.__words[0];
        v53.__r_.__value_.__r.__words[0] = 0LL;
        if (v45)
        {
          (*(void (**)(std::string::size_type))(*(void *)v45 + 8LL))(v45);
          if (v53.__r_.__value_.__r.__words[0]) {
            (*(void (**)(std::string::size_type))(*(void *)v53.__r_.__value_.__l.__data_ + 8LL))(v53.__r_.__value_.__r.__words[0]);
          }
        }

        if (v56) {
          sub_10012BF68(v11, "com.nestlabs.internal:Network:AllowingJoin", (uint64_t)&v56);
        }
        sub_1000E72E0(&v54);
        std::string::size_type v46 = v54.__r_.__value_.__r.__words[0];
        std::string::size_type v47 = v56;
        std::string::size_type v56 = v54.__r_.__value_.__r.__words[0];
        v54.__r_.__value_.__r.__words[0] = 0LL;
        if (v47)
        {
          (*(void (**)(std::string::size_type))(*(void *)v47 + 8LL))(v47);
          if (v54.__r_.__value_.__r.__words[0]) {
            (*(void (**)(std::string::size_type))(*(void *)v54.__r_.__value_.__l.__data_ + 8LL))(v54.__r_.__value_.__r.__words[0]);
          }
          std::string::size_type v46 = v56;
        }

        if (v46) {
          sub_10012BF68(v11, "NCP:HealthInfo", (uint64_t)&v56);
        }
      }

      xpc_dictionary_set_value(v10, "status_array", v11);
      xpc_release(v11);
      if (SHIBYTE(v59) < 0) {
        operator delete(block);
      }
      if (v56) {
        (*(void (**)(std::string::size_type))(*(void *)v56 + 8LL))(v56);
      }
    }

    else
    {
      xpc_object_t v10 = xpc_null_create();
    }

    if (*(void *)a6) {
      uint64_t v48 = _Block_copy(*(const void **)a6);
    }
    else {
      uint64_t v48 = 0LL;
    }
    uint64_t v49 = *(dispatch_queue_s **)(a6 + 8);
    block = _NSConcreteStackBlock;
    uint64_t v58 = 1174405120LL;
    __int128 v59 = sub_100030090;
    uint64_t v60 = &unk_1002AE940;
    if (v48) {
      uint64_t v50 = _Block_copy(v48);
    }
    else {
      uint64_t v50 = 0LL;
    }
    int v63 = 0;
    __int128 v61 = v50;
    xpc_object_t v62 = v10;
    if (v10) {
      xpc_retain(v10);
    }
    else {
      xpc_object_t v62 = xpc_null_create();
    }
    dispatch_async(v49, &block);
    xpc_release(v62);
    xpc_object_t v62 = 0LL;
    if (v61) {
      _Block_release(v61);
    }
    if (v48) {
      _Block_release(v48);
    }
    xpc_release(v10);
  }

void sub_10001E0C0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20, char a21, uint64_t a22, void *a23, uint64_t a24, int a25, __int16 a26, char a27, char a28, uint64_t a29, void *__p, uint64_t a31, int a32, __int16 a33, char a34, char a35, uint64_t a36, uint64_t a37)
{
  if (a35 < 0) {
    operator delete(__p);
  }
  if (a37) {
    (*(void (**)(uint64_t))(*(void *)a37 + 8LL))(a37);
  }
  _Unwind_Resume(exception_object);
}

void sub_10001E2A4(uint64_t a1, int a2, uint64_t *a3, void **a4, const char *a5, const char *a6, uint64_t a7)
{
  unsigned int v13 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v13)
  {
    xpc_object_t v14 = v13;
    if (sub_10015A058(5) && os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
    {
      std::string::size_type v15 = a5;
      if (a5[23] < 0) {
        std::string::size_type v15 = *(const char **)a5;
      }
      uint64_t v16 = a6;
      if (a6[23] < 0) {
        uint64_t v16 = *(const char **)a6;
      }
      *(_DWORD *)std::string buf = 136315650;
      *(void *)&uint8_t buf[4] = v15;
      *(_WORD *)&_BYTE buf[12] = 2080;
      *(void *)&buf[14] = v16;
      *(_WORD *)&buf[22] = 2080;
      __int128 v27 = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_INFO,  "WPANTUND_v1 Sending XPC response for method %s for property %s to %s",  buf,  0x20u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  if (*(void *)a7 && *(void *)(a7 + 8))
  {
    xpc_object_t v17 = xpc_dictionary_create(0LL, 0LL, 0LL);
    xpc_object_t v18 = v17;
    if (a5[23] < 0) {
      a5 = *(const char **)a5;
    }
    xpc_dictionary_set_string(v17, "method", a5);
    if (a6[23] < 0) {
      a6 = *(const char **)a6;
    }
    xpc_dictionary_set_string(v18, "property_name", a6);
    uint64_t v19 = 17LL;
    if (*a3) {
      uint64_t v19 = 0LL;
    }
    if (a2) {
      int64_t v20 = a2;
    }
    else {
      int64_t v20 = v19;
    }
    xpc_dictionary_set_int64(v18, "ret", v20);
    if (*a3)
    {
      sub_10012C860(v18, a3);
    }

    else
    {
      sub_10000AC00(buf, "<empty>");
      __int128 v21 = (char *)operator new(0x20uLL);
      *(void *)__int128 v21 = &off_1002AE030;
      *(_OWORD *)(v21 + 8) = *(_OWORD *)buf;
      *((void *)v21 + 3) = *(void *)&buf[16];
      memset(buf, 0, sizeof(buf));
      __int128 v25 = v21;
      sub_10012C860(v18, (uint64_t *)&v25);
      if (v25) {
        (*(void (**)(char *))(*(void *)v25 + 8LL))(v25);
      }
      if ((char)buf[23] < 0)
      {
        operator delete(*(void **)buf);
        if (v18) {
          goto LABEL_31;
        }
        goto LABEL_30;
      }
    }

    if (v18)
    {
LABEL_31:
      if (*(void *)a7) {
        __darwin_time_t v22 = _Block_copy(*(const void **)a7);
      }
      else {
        __darwin_time_t v22 = 0LL;
      }
      int v23 = *(dispatch_queue_s **)(a7 + 8);
      *(void *)std::string buf = _NSConcreteStackBlock;
      *(void *)&buf[8] = 1174405120LL;
      *(void *)&buf[16] = sub_100030090;
      __int128 v27 = (void **)&unk_1002AE940;
      if (v22) {
        std::string::size_type v24 = _Block_copy(v22);
      }
      else {
        std::string::size_type v24 = 0LL;
      }
      int v30 = 0;
      aBlock = v24;
      xpc_object_t object = v18;
      if (v18) {
        xpc_retain(v18);
      }
      else {
        xpc_object_t object = xpc_null_create();
      }
      dispatch_async(v23, buf);
      xpc_release(object);
      xpc_object_t object = 0LL;
      if (aBlock) {
        _Block_release(aBlock);
      }
      if (v22) {
        _Block_release(v22);
      }
      xpc_release(v18);
      return;
    }

void sub_10001E5C8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a2) {
    sub_100006EEC(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10001E634(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v21 = 0LL;
  uint64_t v22 = 0LL;
  v20[0] = 0LL;
  v20[1] = 0LL;
  sub_10000AC00(&__p, "NCP:State");
  sub_1000FC7CC(a1, (uint64_t)&__p, &v19);
  uint64_t v6 = v22;
  uint64_t v22 = v19;
  uint64_t v19 = 0LL;
  if (v6)
  {
    (*(void (**)(uint64_t))(*(void *)v6 + 8LL))(v6);
    if (v19) {
      (*(void (**)(uint64_t))(*(void *)v19 + 8LL))(v19);
    }
  }

  if (!v22) {
    goto LABEL_18;
  }
  sub_100147B4C(&v22, &__p);
  sub_100014D08((uint64_t)v20, (__int128 *)&__p);
  int v7 = sub_1000B5828(v20);
  xpc_object_t v8 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v8)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      xpc_object_t v9 = v20;
      if (v21 < 0) {
        xpc_object_t v9 = (void **)v20[0];
      }
      LODWORD(__p.__r_.__value_.__l.__data_) = 136315394;
      *(std::string::size_type *)((char *)__p.__r_.__value_.__r.__words + 4) = (std::string::size_type)v9;
      WORD2(__p.__r_.__value_.__r.__words[1]) = 1024;
      *(_DWORD *)((char *)&__p.__r_.__value_.__r.__words[1] + 6) = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_INFO,  "my NCP state = %s (%d) \n",  (uint8_t *)&__p,  0x12u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  if (v7 != 8)
  {
    xpc_object_t v11 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v11)
    {
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }

    uint64_t v10 = 0LL;
  }

  else
  {
LABEL_18:
    uint64_t v10 = 1LL;
  }

  if (*(void *)a3)
  {
    char v12 = *(void *)(a3 + 8) ? v10 : 1;
    if ((v12 & 1) == 0)
    {
      xpc_object_t v13 = xpc_dictionary_create(0LL, 0LL, 0LL);
      string = xpc_dictionary_get_string(a2, "method");
      xpc_dictionary_set_string(v13, "method", string);
      xpc_dictionary_set_int64(v13, "ret", 4LL);
      if (!v13) {
        xpc_object_t v13 = xpc_null_create();
      }
      if (*(void *)a3) {
        std::string::size_type v15 = _Block_copy(*(const void **)a3);
      }
      else {
        std::string::size_type v15 = 0LL;
      }
      uint64_t v16 = *(dispatch_queue_s **)(a3 + 8);
      __p.__r_.__value_.__r.__words[0] = (std::string::size_type)_NSConcreteStackBlock;
      __p.__r_.__value_.__l.__size_ = 1174405120LL;
      __p.__r_.__value_.__l.__cap_ = (std::string::size_type)sub_100030090;
      std::string::size_type v24 = &unk_1002AE940;
      if (v15) {
        xpc_object_t v17 = _Block_copy(v15);
      }
      else {
        xpc_object_t v17 = 0LL;
      }
      int v27 = 0;
      aBlock = v17;
      xpc_object_t object = v13;
      if (v13) {
        xpc_retain(v13);
      }
      else {
        xpc_object_t object = xpc_null_create();
      }
      dispatch_async(v16, &__p);
      xpc_release(object);
      xpc_object_t object = 0LL;
      if (aBlock) {
        _Block_release(aBlock);
      }
      if (v15) {
        _Block_release(v15);
      }
      xpc_release(v13);
    }
  }

  if (SHIBYTE(v21) < 0) {
    operator delete(v20[0]);
  }
  if (v22) {
    (*(void (**)(uint64_t))(*(void *)v22 + 8LL))(v22);
  }
  return v10;
}

void sub_10001E9B4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *a18, uint64_t a19, int a20, __int16 a21, char a22, char a23)
{
  if (a2) {
    sub_100006EEC(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10001EA48( std::string::size_type a1, std::string::size_type a2, void *a3, std::string::size_type a4, uint64_t a5)
{
  string = (char *)xpc_dictionary_get_string(a3, "method");
  sub_10000AC00(&__str, string);
  xpc_object_t v11 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v11)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      LODWORD(buf.__r_.__value_.__l.__data_) = 136315394;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)string;
      WORD2(buf.__r_.__value_.__r.__words[1]) = 2080;
      *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_INFO,  "WPANTUND_v1 Handling %s method handler for %s",  (uint8_t *)&buf,  0x16u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  if (v35)
  {
    sub_100147B4C(&v35, &buf);
    int v12 = sub_1000B5828(&buf);
  }

  else
  {
    int v12 = 0;
  }

  if (sub_1000B5088(v12)) {
    goto LABEL_19;
  }
  BOOL v13 = !sub_1000B5104(v12);
  if (!v12) {
    LOBYTE(v13) = 0;
  }
  if (v13)
  {
    std::string::basic_string(&v23, &__str);
    xpc_object_t v18 = *(void **)a5;
    if (*(void *)a5) {
      xpc_object_t v18 = _Block_copy(v18);
    }
    uint64_t v19 = *(dispatch_object_s **)(a5 + 8);
    uint64_t v21 = v18;
    dispatch_object_t v22 = v19;
    if (v19) {
      dispatch_retain(v19);
    }
    sub_10001EEB0(&v23, (uint64_t)sub_10001D244, 0LL, a1, a2, (std::string::size_type)a3, (uint64_t)&v21, (uint64_t)v24);
    sub_10003039C(v29, (uint64_t)v24);
    (*(void (**)(std::string::size_type, uint64_t (***)()))(*(void *)a2 + 48LL))(a2, v29);
    sub_1000075F0(v29);
    if (v28) {
      dispatch_release(v28);
    }
    if (v27) {
      _Block_release(v27);
    }
    if (v26 < 0) {
      operator delete(__p);
    }
    if (v22) {
      dispatch_release(v22);
    }
    if (v21) {
      _Block_release(v21);
    }
    if ((char)v23.__r_.__value_.__s.__size_ < 0)
    {
      xpc_object_t v17 = &v23;
      goto LABEL_45;
    }
  }

  else
  {
LABEL_19:
    sub_10000AC00(v32, "Status");
    std::string::size_type v15 = *(void **)a5;
    if (*(void *)a5) {
      std::string::size_type v15 = _Block_copy(v15);
    }
    uint64_t v16 = *(dispatch_object_s **)(a5 + 8);
    aBlock = v15;
    dispatch_object_t object = v16;
    if (v16) {
      dispatch_retain(v16);
    }
    sub_10001D244((uint64_t)v15, 0, a2, v14, (const char *)v32, (uint64_t)&aBlock);
    if (object) {
      dispatch_release(object);
    }
    if (aBlock) {
      _Block_release(aBlock);
    }
    if (v33 < 0)
    {
      xpc_object_t v17 = (std::string *)v32;
LABEL_45:
      operator delete(v17->__r_.__value_.__l.__data_);
    }
  }

  uint64_t result = v35;
  if (v35) {
    return (*(uint64_t (**)(uint64_t))(*(void *)v35 + 8LL))(v35);
  }
  return result;
}

void sub_10001ED74( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, char a27, uint64_t a28, uint64_t a29, uint64_t a30, char a31)
{
  if (a2) {
    sub_100006EEC(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void *sub_10001EE68(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  if (*(void *)a2) {
    uint64_t v4 = _Block_copy(v4);
  }
  xpc_object_t v5 = *(dispatch_object_s **)(a2 + 8);
  *a1 = v4;
  a1[1] = v5;
  if (v5) {
    dispatch_retain(v5);
  }
  return a1;
}

void sub_10001EEB0( std::string *__str@<X5>, uint64_t a2@<X0>, uint64_t a3@<X1>, std::string::size_type a4@<X2>, std::string::size_type a5@<X3>, std::string::size_type a6@<X4>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v20 < 0) {
    operator delete(__p);
  }
  if (v16) {
    dispatch_release(v16);
  }
  if (v15) {
    _Block_release(v15);
  }
}

void sub_10001EFA4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, char a18)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10001EFD8(uint64_t a1)
{
  uint64_t v2 = *(dispatch_object_s **)(a1 + 72);
  if (v2) {
    dispatch_release(v2);
  }
  uint64_t v3 = *(const void **)(a1 + 64);
  if (v3) {
    _Block_release(v3);
  }
  return a1;
}

void sub_10001F024(uint64_t a1, uint64_t a2, xpc_object_t xdict, const std::string *a4, uint64_t a5)
{
  string = (char *)xpc_dictionary_get_string(xdict, "method");
  sub_10000AC00(&__str, string);
  xpc_object_t v11 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v11)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      int v12 = a4;
      *(_DWORD *)std::string buf = 136315394;
      std::string::size_type v29 = string;
      __int16 v30 = 2080;
      std::string::size_type v31 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_INFO,  "WPANTUND_v1 Handling %s method handler for %s",  buf,  0x16u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  std::string::basic_string(&v18, a4);
  std::string::basic_string(&v17, &__str);
  BOOL v13 = *(void **)a5;
  if (*(void *)a5) {
    BOOL v13 = _Block_copy(v13);
  }
  uint64_t v14 = *(dispatch_object_s **)(a5 + 8);
  std::string::size_type v15 = v13;
  dispatch_object_t v16 = v14;
  if (v14) {
    dispatch_retain(v14);
  }
  sub_10001F308(&v18, (uint64_t)sub_10001CAAC, 0LL, a1, (uint64_t)xdict, &v17, (uint64_t)&v15, v19);
  sub_100030F0C(v26, v19);
  (*(void (**)(uint64_t, uint64_t (***)()))(*(void *)a2 + 24LL))(a2, v26);
  sub_1000075F0(v26);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v23 < 0) {
    operator delete(__p);
  }
  if (v21 < 0) {
    operator delete(v20);
  }
  if (v16) {
    dispatch_release(v16);
  }
  if (v15) {
    _Block_release(v15);
  }
}

void sub_10001F270( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20, __int16 a21, char a22, char a23, char a24)
{
  if (a2) {
    sub_100006EEC(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_10001F308( std::string *__str@<X4>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X2>, uint64_t a5@<X3>, const std::string *a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  *a8 = a2;
  a8[1] = a3;
  sub_100030E80((uint64_t)(a8 + 2), (uint64_t)v19);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v23 < 0) {
    operator delete(__p);
  }
  if (v21 < 0) {
    operator delete(v20);
  }
  if (v16) {
    dispatch_release(v16);
  }
  if (v15) {
    _Block_release(v15);
  }
}

void sub_10001F424( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20, char a21, char a22, char a23)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10001F470(uint64_t a1)
{
  uint64_t v2 = *(dispatch_object_s **)(a1 + 88);
  if (v2) {
    dispatch_release(v2);
  }
  uint64_t v3 = *(const void **)(a1 + 80);
  if (v3) {
    _Block_release(v3);
  }
  return a1;
}

void sub_10001F4CC(uint64_t a1, uint64_t a2, xpc_object_t xdict, const std::string *a4, uint64_t a5)
{
  string = xpc_dictionary_get_string(xdict, "method");
  std::string::assign(&__str, string);
  xpc_object_t v11 = xpc_dictionary_get_string(xdict, "property_name");
  std::string::assign(&v34, v11);
  int v12 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v12)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
    {
      BOOL v13 = &v34;
      if ((v34.__r_.__value_.__s.__size_ & 0x80u) != 0) {
        BOOL v13 = (std::string *)v34.__r_.__value_.__r.__words[0];
      }
      uint64_t v14 = a4;
      *(_DWORD *)std::string buf = 136315650;
      std::string::size_type v36 = string;
      __int16 v37 = 2080;
      std::string::size_type v38 = v13;
      __int16 v39 = 2080;
      std::string::size_type v40 = v14;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_INFO,  "WPANTUND_v1 Handling %s method handler for property %s for %s",  buf,  0x20u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  if (sub_1000FE128(&v34))
  {
    std::string::size_type v15 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v15)
    {
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }
  }

  std::string::basic_string(&v22, a4);
  std::string::basic_string(&v21, &__str);
  std::string::basic_string(&v20, &v34);
  dispatch_object_t v16 = *(void **)a5;
  if (*(void *)a5) {
    dispatch_object_t v16 = _Block_copy(v16);
  }
  std::string v17 = *(dispatch_object_s **)(a5 + 8);
  std::string v18 = v16;
  dispatch_object_t v19 = v17;
  if (v17) {
    dispatch_retain(v17);
  }
  sub_10001F8DC(&v22, (uint64_t)sub_10001E2A4, 0LL, a1, &v21, &v20, (uint64_t)&v18, &v23);
  sub_100031B30(v32, &v23);
  (*(void (**)(uint64_t, std::string *, uint64_t (***)()))(*(void *)a2 + 56LL))(a2, &v34, v32);
  sub_100006E7C(v32);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v29 < 0) {
    operator delete(__p);
  }
  if (v27 < 0) {
    operator delete(v26);
  }
  if (v25 < 0) {
    operator delete(v24);
  }
  if (v19) {
    dispatch_release(v19);
  }
  if (v18) {
    _Block_release(v18);
  }
}

void sub_10001F814( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20, __int16 a21, char a22, char a23, void *a24, uint64_t a25, int a26, __int16 a27, char a28, char a29, char a30)
{
}

void sub_10001F8DC( std::string *__str@<X3>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X2>, const std::string *a5@<X4>, const std::string *a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  *a8 = a2;
  a8[1] = a3;
  sub_100031A74((uint64_t)(a8 + 2), (uint64_t)v20);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v26 < 0) {
    operator delete(__p);
  }
  if (v24 < 0) {
    operator delete(v23);
  }
  if (v22 < 0) {
    operator delete(v21);
  }
  if (v16) {
    dispatch_release(v16);
  }
  if (v15) {
    _Block_release(v15);
  }
}

void sub_10001FA24( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20, __int16 a21, char a22, char a23, void *a24, uint64_t a25, int a26, __int16 a27, char a28, char a29, char a30)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  if (a29 < 0) {
    operator delete(a24);
  }
  _Unwind_Resume(a1);
}

void sub_10001FA88(uint64_t a1, uint64_t a2, xpc_object_t xdict, const std::string *a4, uint64_t a5)
{
  uint64_t v40 = 0LL;
  memset(v39, 0, sizeof(v39));
  string = (char *)xpc_dictionary_get_string(xdict, "method");
  sub_10000AC00(&__str, string);
  xpc_object_t v11 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v11)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      std::string::size_type v12 = (std::string::size_type)a4;
      LODWORD(buf.__r_.__value_.__l.__data_) = 136315394;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)string;
      WORD2(buf.__r_.__value_.__r.__words[1]) = 2080;
      *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_INFO,  "WPANTUND_v1 Handling %s method handler for %s",  (uint8_t *)&buf,  0x16u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  BOOL v13 = xpc_dictionary_get_string(xdict, "property_name");
  if (xpc_dictionary_get_uint64(xdict, "property_type"))
  {
    u__int16 int64 = xpc_dictionary_get_uint64(xdict, "property_value_length");
    if ((int)uint64 < 1)
    {
      sub_1000200F8(&v40, (uint64_t)v39);
    }

    else
    {
      size_t length = 0LL;
      uint64_t data = xpc_dictionary_get_data(xdict, "property_value", &length);
      dispatch_object_t v16 = malloc(uint64);
      memcpy(v16, data, uint64);
      sub_100018E5C(&buf, v16, (uint64_t)v16 + uint64);
      sub_100017FCC(&v40, (__n128 *)&buf);
      p_std::string buf = &buf;
      sub_100006F6C((void ***)&p_buf);
      free(v16);
    }
  }

  else
  {
    std::string v17 = (char *)xpc_dictionary_get_string(xdict, "property_value");
    std::string v18 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v18)
    {
      if (sub_10015A058(5) && os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
      {
        LODWORD(buf.__r_.__value_.__l.__data_) = 136315138;
        *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v17;
        _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_INFO,  "WPANTUND_v1 Property Value received is %s ",  (uint8_t *)&buf,  0xCu);
      }
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }

    sub_10000AC00(&buf, v17);
    sub_1000200A0(&v40, &buf);
  }

  std::string::assign(&v41, v13);
  sub_1000FDFA8(&v41);
  if (sub_1000FCAF8(&v41))
  {
    dispatch_object_t v19 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v19)
    {
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }
  }

  std::string::basic_string(&v26, a4);
  std::string::basic_string(&v25, &__str);
  std::string::basic_string(&v24, &v41);
  std::string v20 = *(void **)a5;
  if (*(void *)a5) {
    std::string v20 = _Block_copy(v20);
  }
  std::string v21 = *(dispatch_object_s **)(a5 + 8);
  char v22 = v20;
  dispatch_object_t v23 = v21;
  if (v21) {
    dispatch_retain(v21);
  }
  sub_100020150(&v26, (uint64_t)sub_10001C740, 0LL, a1, (uint64_t)xdict, &v25, &v24, (uint64_t)&v22, v27);
  sub_10003277C(v36, v27);
  (*(void (**)(uint64_t, std::string *, uint64_t *, uint64_t (***)()))(*(void *)a2 + 64LL))( a2,  &v41,  &v40,  v36);
  sub_1000075F0(v36);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v33 < 0) {
    operator delete(__p);
  }
  if (v31 < 0) {
    operator delete(v30);
  }
  if (v29 < 0) {
    operator delete(v28);
  }
  if (v23) {
    dispatch_release(v23);
  }
  if (v22) {
    _Block_release(v22);
  }
  __str.__r_.__value_.__r.__words[0] = (std::string::size_type)v39;
  sub_100006F6C((void ***)&__str);
  if (v40) {
    (*(void (**)(uint64_t))(*(void *)v40 + 8LL))(v40);
  }
}

void sub_10001FF68( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20, char a21, char a22, void *a23, uint64_t a24, int a25, __int16 a26, char a27, char a28, char a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, char a44)
{
  *(void *)(v44 - 216) = v44 - 192;
  sub_100006F6C((void ***)(v44 - 216));
  uint64_t v46 = *(void *)(v44 - 168);
  if (v46) {
    (*(void (**)(uint64_t))(*(void *)v46 + 8LL))(v46);
  }
  _Unwind_Resume(a1);
}

uint64_t *sub_1000200A0(uint64_t *a1, const std::string *a2)
{
  uint64_t v3 = v6;
  uint64_t v6 = *a1;
  uint64_t v4 = v6;
  *a1 = v3;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
  }
  return a1;
}

uint64_t *sub_1000200F8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v6;
  uint64_t v6 = *a1;
  uint64_t v4 = v6;
  *a1 = v3;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
  }
  return a1;
}

void sub_100020150( std::string *__str@<X4>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X2>, uint64_t a5@<X3>, const std::string *a6@<X5>, const std::string *a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  *a9 = a2;
  a9[1] = a3;
  sub_1000326D4((uint64_t)(a9 + 2), (uint64_t)v22);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v28 < 0) {
    operator delete(__p);
  }
  if (v26 < 0) {
    operator delete(v25);
  }
  if (v24 < 0) {
    operator delete(v23);
  }
  if (v18) {
    dispatch_release(v18);
  }
  if (v17) {
    _Block_release(v17);
  }
}

void sub_1000202A8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20, char a21, char a22, void *a23, uint64_t a24, int a25, __int16 a26, char a27, char a28, char a29)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10002030C(uint64_t a1, uint64_t a2, xpc_object_t xdict, const std::string *a4, uint64_t a5)
{
  v32[0] = 0LL;
  v32[1] = 0LL;
  char v31 = v32;
  u__int16 int64 = 0;
  string = (char *)xpc_dictionary_get_string(xdict, "method");
  sub_10000AC00(&__str, string);
  xpc_object_t v11 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v11)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      std::string::size_type v12 = a4;
      *(_DWORD *)std::string buf = 136315394;
      *(void *)&uint8_t buf[4] = string;
      __int16 v34 = 2080;
      uint64_t v35 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_INFO,  "WPANTUND_v1 Handling %s method handler for %s",  buf,  0x16u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  u__int16 int64 = xpc_dictionary_get_uint64(xdict, "channel_mask");
  if (uint64)
  {
    sub_10000AC00(buf, "Scan:ChannelMask");
    BOOL v13 = sub_10000ED88(&v31, (__n128 *)buf);
    sub_100017F70(v13, &uint64);
    if (v36 < 0) {
      operator delete(*(void **)buf);
    }
  }

  std::string::basic_string(&v20, a4);
  std::string::basic_string(&v19, &__str);
  uint64_t v14 = *(void **)a5;
  if (*(void *)a5) {
    uint64_t v14 = _Block_copy(v14);
  }
  std::string::size_type v15 = *(dispatch_object_s **)(a5 + 8);
  std::string v17 = v14;
  dispatch_object_t v18 = v15;
  if (v15) {
    dispatch_retain(v15);
  }
  sub_10001F308(&v20, (uint64_t)sub_10001CAAC, 0LL, a1, (uint64_t)xdict, &v19, (uint64_t)&v17, v21);
  sub_100030F0C(v28, v21);
  (*(void (**)(uint64_t, uint64_t **, uint64_t (***)()))(*(void *)a2 + 264LL))(a2, &v31, v28);
  sub_1000075F0(v28);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v25 < 0) {
    operator delete(__p);
  }
  if (v23 < 0) {
    operator delete(v22);
  }
  if (v18) {
    dispatch_release(v18);
  }
  if (v17) {
    _Block_release(v17);
  }
  return sub_10000D448((uint64_t)&v31);
}

void sub_1000205C4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20, __int16 a21, char a22, char a23, char a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, char a36)
{
}

uint64_t sub_100020688(uint64_t a1, uint64_t a2, xpc_object_t xdict, const std::string *a4, uint64_t a5)
{
  v40[0] = 0LL;
  v40[1] = 0LL;
  __int16 v39 = v40;
  int int64 = 0;
  __int16 v37 = -1;
  string = (char *)xpc_dictionary_get_string(xdict, "method");
  sub_10000AC00(&__str, string);
  xpc_object_t v11 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v11)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      std::string::size_type v12 = a4;
      *(_DWORD *)std::string buf = 136315394;
      *(void *)&uint8_t buf[4] = string;
      __int16 v42 = 2080;
      std::string::size_type v43 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_INFO,  "WPANTUND_v1 Handling %s method handler for %s",  buf,  0x16u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  int int64 = xpc_dictionary_get_int64(xdict, "channel_mask");
  BOOL v13 = xpc_dictionary_get_BOOL(xdict, "joiner_flag");
  BOOL v14 = xpc_dictionary_get_BOOL(xdict, "enable_filtering");
  __int16 v37 = xpc_dictionary_get_int64(xdict, "pan_id_filter");
  char v35 = 1;
  sub_10000AC00(buf, "Scan:Discover");
  std::string::size_type v15 = sub_10000ED88(&v39, (__n128 *)buf);
  sub_100020B4C(v15, &v35);
  if (v44 < 0) {
    operator delete(*(void **)buf);
  }
  if (int64)
  {
    sub_10000AC00(buf, "Scan:ChannelMask");
    dispatch_object_t v16 = sub_10000ED88(&v39, (__n128 *)buf);
    sub_100017F70(v16, &int64);
    if (v44 < 0) {
      operator delete(*(void **)buf);
    }
  }

  char v35 = v13;
  sub_10000AC00(buf, "Scan:JoinerFlag");
  std::string v17 = sub_10000ED88(&v39, (__n128 *)buf);
  sub_100020B4C(v17, &v35);
  if (v44 < 0) {
    operator delete(*(void **)buf);
  }
  char v35 = v14;
  sub_10000AC00(buf, "Scan:EnableFiltering");
  dispatch_object_t v18 = sub_10000ED88(&v39, (__n128 *)buf);
  sub_100020B4C(v18, &v35);
  if (v44 < 0) {
    operator delete(*(void **)buf);
  }
  sub_10000AC00(buf, "Scan:PANID");
  std::string v19 = sub_10000ED88(&v39, (__n128 *)buf);
  sub_100017678(v19, &v37);
  if (v44 < 0) {
    operator delete(*(void **)buf);
  }
  std::string::basic_string(&v26, a4);
  std::string::basic_string(&v25, &__str);
  std::string v20 = *(void **)a5;
  if (*(void *)a5) {
    std::string v20 = _Block_copy(v20);
  }
  std::string v21 = *(dispatch_object_s **)(a5 + 8);
  char v23 = v20;
  dispatch_object_t v24 = v21;
  if (v21) {
    dispatch_retain(v21);
  }
  sub_10001F308(&v26, (uint64_t)sub_10001CAAC, 0LL, a1, (uint64_t)xdict, &v25, (uint64_t)&v23, v27);
  sub_100030F0C(v34, v27);
  (*(void (**)(uint64_t, uint64_t **, uint64_t (***)()))(*(void *)a2 + 264LL))(a2, &v39, v34);
  sub_1000075F0(v34);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v31 < 0) {
    operator delete(__p);
  }
  if (v29 < 0) {
    operator delete(v28);
  }
  if (v24) {
    dispatch_release(v24);
  }
  if (v23) {
    _Block_release(v23);
  }
  return sub_10000D448((uint64_t)&v39);
}

void sub_100020A68( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20, char a21, char a22, char a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, char a35)
{
}

uint64_t *sub_100020B4C(uint64_t *a1, _BYTE *a2)
{
  uint64_t v4 = operator new(0x10uLL);
  *(void *)uint64_t v4 = &off_1002AEA00;
  v4[8] = *a2;
  uint64_t v5 = *a1;
  *a1 = (uint64_t)v4;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
  }
  return a1;
}

uint64_t sub_100020BA8(uint64_t a1, uint64_t a2, xpc_object_t xdict, const std::string *a4, uint64_t a5)
{
  v32[0] = 0LL;
  v32[1] = 0LL;
  char v31 = v32;
  uint int64 = 0;
  string = (char *)xpc_dictionary_get_string(xdict, "method");
  sub_10000AC00(&__str, string);
  xpc_object_t v11 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v11)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      std::string::size_type v12 = a4;
      *(_DWORD *)std::string buf = 136315394;
      *(void *)&uint8_t buf[4] = string;
      __int16 v34 = 2080;
      char v35 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_INFO,  "WPANTUND_v1 Handling %s method handler for %s",  buf,  0x16u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  uint int64 = xpc_dictionary_get_uint64(xdict, "channel_mask");
  if (uint64)
  {
    sub_10000AC00(buf, "NCP:ChannelMask");
    BOOL v13 = sub_10000ED88(&v31, (__n128 *)buf);
    sub_100017F70(v13, &uint64);
    if (v36 < 0) {
      operator delete(*(void **)buf);
    }
  }

  std::string::basic_string(&v20, a4);
  std::string::basic_string(&v19, &__str);
  BOOL v14 = *(void **)a5;
  if (*(void *)a5) {
    BOOL v14 = _Block_copy(v14);
  }
  std::string::size_type v15 = *(dispatch_object_s **)(a5 + 8);
  std::string v17 = v14;
  dispatch_object_t v18 = v15;
  if (v15) {
    dispatch_retain(v15);
  }
  sub_10001F308(&v20, (uint64_t)sub_10001CAAC, 0LL, a1, (uint64_t)xdict, &v19, (uint64_t)&v17, v21);
  sub_100030F0C(v28, v21);
  (*(void (**)(uint64_t, uint64_t **, uint64_t (***)()))(*(void *)a2 + 280LL))(a2, &v31, v28);
  sub_1000075F0(v28);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v25 < 0) {
    operator delete(__p);
  }
  if (v23 < 0) {
    operator delete(v22);
  }
  if (v18) {
    dispatch_release(v18);
  }
  if (v17) {
    _Block_release(v17);
  }
  return sub_10000D448((uint64_t)&v31);
}

void sub_100020E60( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20, __int16 a21, char a22, char a23, char a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, char a36)
{
}

void sub_100020F24(uint64_t a1, int a2, void *a3, uint64_t **a4, const char *a5, uint64_t a6)
{
  xpc_object_t v11 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v11)
  {
    std::string::size_type v12 = v11;
    if (sub_10015A058(5) && os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
    {
      BOOL v13 = a5;
      if (a5[23] < 0) {
        BOOL v13 = *(const char **)a5;
      }
      *(_DWORD *)dispatch_object_t v18 = 136315394;
      *(void *)&v18[4] = v13;
      *(_WORD *)&v18[12] = 2080;
      *(void *)&v18[14] = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_INFO,  "WPANTUND_v1 Sending ReplyInSync XPC response for method %s to %s",  v18,  0x16u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  if (*(void *)a6 && *(void *)(a6 + 8))
  {
    xpc_object_t reply = xpc_dictionary_create_reply(a3);
    xpc_release(a3);
    if (a5[23] < 0) {
      a5 = *(const char **)a5;
    }
    xpc_dictionary_set_string(reply, "method", a5);
    xpc_dictionary_set_int64(reply, "ret", a2);
    if (!reply) {
      xpc_object_t reply = xpc_null_create();
    }
    if (*(void *)a6) {
      std::string::size_type v15 = _Block_copy(*(const void **)a6);
    }
    else {
      std::string::size_type v15 = 0LL;
    }
    dispatch_object_t v16 = *(dispatch_queue_s **)(a6 + 8);
    *(void *)dispatch_object_t v18 = _NSConcreteStackBlock;
    *(void *)&v18[8] = 1174405120LL;
    *(void *)&v18[16] = sub_100030090;
    std::string v19 = &unk_1002AE940;
    if (v15) {
      std::string v17 = _Block_copy(v15);
    }
    else {
      std::string v17 = 0LL;
    }
    int v22 = 0;
    aBlock = v17;
    xpc_object_t object = reply;
    if (reply) {
      xpc_retain(reply);
    }
    else {
      xpc_object_t object = xpc_null_create();
    }
    dispatch_async(v16, v18);
    xpc_release(object);
    xpc_object_t object = 0LL;
    if (aBlock) {
      _Block_release(aBlock);
    }
    if (v15) {
      _Block_release(v15);
    }
    xpc_release(reply);
  }

void sub_10002115C(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    sub_100006EEC(a1);
  }
  _Unwind_Resume(a1);
}

void sub_1000211A0(uint64_t a1, uint64_t a2, xpc_object_t xdict, const std::string *a4, uint64_t a5)
{
  string = (char *)xpc_dictionary_get_string(xdict, "method");
  sub_10000AC00(&__str, string);
  xpc_object_t v11 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v11)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      std::string::size_type v12 = a4;
      *(_DWORD *)std::string buf = 136315394;
      std::string::size_type v32 = string;
      __int16 v33 = 2080;
      __int16 v34 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_INFO,  "WPANTUND_v1 Handling %s method handler for %s",  buf,  0x16u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  uint64_t v13 = xpc_dictionary_dup_fd(xdict, "fd");
  if ((_DWORD)v13 != -1)
  {
    BOOL v14 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v14)
    {
      if (sub_10015A058(5) && os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)std::string buf = 136315394;
        std::string::size_type v32 = string;
        __int16 v33 = 1024;
        LODWORD(v34) = v13;
        _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_INFO,  "WPANTUND_v1 Handling %s method handler for FD = %d",  buf,  0x12u);
      }

      goto LABEL_22;
    }

    if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      goto LABEL_22;
    }
LABEL_21:
    sub_1001FB53C();
    goto LABEL_22;
  }

  std::string::size_type v15 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (!v15)
  {
    if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      goto LABEL_22;
    }
    goto LABEL_21;
  }

LABEL_22:
  xpc_retain(xdict);
  std::string::basic_string(&v21, a4);
  std::string::basic_string(&v20, &__str);
  dispatch_object_t v16 = *(void **)a5;
  if (*(void *)a5) {
    dispatch_object_t v16 = _Block_copy(v16);
  }
  std::string v17 = *(dispatch_object_s **)(a5 + 8);
  dispatch_object_t v18 = v16;
  dispatch_object_t v19 = v17;
  if (v17) {
    dispatch_retain(v17);
  }
  sub_10001F308(&v21, (uint64_t)sub_100020F24, 0LL, a1, (uint64_t)xdict, &v20, (uint64_t)&v18, v22);
  sub_100030F0C(v29, v22);
  (*(void (**)(uint64_t, uint64_t, uint64_t (***)()))(*(void *)a2 + 248LL))(a2, v13, v29);
  sub_1000075F0(v29);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v26 < 0) {
    operator delete(__p);
  }
  if (v24 < 0) {
    operator delete(v23);
  }
  if (v19) {
    dispatch_release(v19);
  }
  if (v18) {
    _Block_release(v18);
  }
}

    *(_DWORD *)(a1 + 244) = 0;
    *(void *)(a1 + 160) = *(void *)(a1 + 144);
    goto LABEL_37;
  }

  if (v12 > 373)
  {
    if (v12 == 374)
    {
LABEL_13:
      if ((sub_10007AFA0((void *)(a1 + 208)) & 1) != 0)
      {
        sub_10015A00C(a1);
        *(_DWORD *)(a1 + 244) = 0;
      }

      else
      {
        if (sub_100159F84(a1)) {
          return 0LL;
        }
        sub_10015A00C(a1);
        std::string::size_type v15 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v15)
        {
          dispatch_object_t v16 = v15;
        }

        else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
          sub_1001FB53C();
        }
      }

      goto LABEL_59;
    }

    if (v12 == 396) {
      goto LABEL_68;
    }
  }

  else
  {
    if (v12 == 346)
    {
      while ((int)sub_10003453C(a1, a2, v8, a4, a5, a6, a7, a8) >= 2)
      {
LABEL_37:
        if (*(_DWORD *)(a1 + 244) || (dispatch_object_t v19 = *(void *)(a1 + 160), a1 + 136 == v19))
        {
          std::string v20 = *(_DWORD *)(a1 + 128);
          *(_DWORD *)(a1 + 244) = v20;
          if (!v20)
          {
            if (*(void *)(a1 + 176)) {
              char v23 = nullsub_56;
            }
            else {
              char v23 = 0LL;
            }
            if (a2 == -1409351679 && v23)
            {
              v44 += 6;
              *(_DWORD *)(a1 + 244) = sub_10007AF2C((void *)(a1 + 176));
            }

            if (*(_DWORD *)(a1 + 240))
            {
              uint64_t result = 1LL;
              xpc_object_t v11 = 371;
              goto LABEL_83;
            }

            goto LABEL_59;
          }

          std::string v21 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (v21)
          {
            int v22 = v21;
            goto LABEL_59;
          }

          if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
            goto LABEL_59;
          }
          goto LABEL_58;
        }

        *(void *)(a1 + 160) = *(void *)(v19 + 8);
        if (a1 + 104 != v19 + 16) {
          sub_100071098( (uint64_t *)(a1 + 104),  *(char **)(v19 + 16),  *(void *)(v19 + 24),  *(void *)(v19 + 24) - *(void *)(v19 + 16));
        }
        *(_WORD *)(a1 + 98) = 0;
        *(_WORD *)(a1 + 8) = 346;
      }

      return 0LL;
    }

    if (v12 == 371)
    {
      *(_DWORD *)(a1 + 244) = 7;
      sub_100159FC0(a1, (float)*(int *)(a1 + 240));
      *(_WORD *)(a1 + 8) = 374;
      goto LABEL_13;
    }
  }

  xpc_object_t v11 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_retryIntervalMin));
  [v3 setObject:v11 forKey:@"retry_interval_min"];

  has = (__int16)self->_has;
  if ((has & 0x10) == 0)
  {
LABEL_7:
    if ((has & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }

  PBDataWriterWriteUint32Field(v5, self->_retryIntervalMin, 5LL);
  has = (__int16)self->_has;
  if ((has & 0x10) == 0)
  {
LABEL_7:
    if ((has & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }

  v4[7] = self->_retryIntervalMin;
  *((_WORD *)v4 + 34) |= 0x20u;
  has = (__int16)self->_has;
  if ((has & 0x10) == 0)
  {
LABEL_7:
    if ((has & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }

  *((_DWORD *)result + 7) = self->_retryIntervalMin;
  *((_WORD *)result + 34) |= 0x20u;
  has = (__int16)self->_has;
  if ((has & 0x10) == 0)
  {
LABEL_7:
    if ((has & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }

  xpc_object_t v8 = 0LL;
  if ((has & 8) != 0)
  {
LABEL_8:
    xpc_object_t v9 = 2654435761LL * self->_retryIntervalAvg;
    if ((has & 4) != 0) {
      goto LABEL_9;
    }
    goto LABEL_24;
  }

  self->_retryIntervalMin = *((_DWORD *)v4 + 7);
  *(_WORD *)&self->_has |= 0x20u;
  uint64_t v5 = *((_WORD *)v4 + 34);
  if ((v5 & 0x10) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }

      int v7 = v4 + 47;
    }

    else
    {
      uint64_t v6 = v5 - 1;
      int v7 = 71;
      switch(v6)
      {
        case 0u:
          break;
        case 1u:
          int v7 = 68;
          break;
        case 3u:
          int v7 = 83;
          break;
        case 7u:
          int v7 = 100;
          break;
        default:
          goto LABEL_22;
      }
    }

      operator delete(__p.__r_.__value_.__l.__data_);
      goto LABEL_23;
    }
}

  dispatch_object_t v16 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_rxErrInvalidSrcAddr));
  [v3 setObject:v16 forKey:@"rx_err_invalid_src_addr"];

  has = (__int16)self->_has;
  if ((has & 0x100) == 0)
  {
LABEL_9:
    if ((has & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }

  PBDataWriterWriteUint32Field(v7, self->_rxBroadcast, 4LL);
  uint64_t v4 = v7;
  has = (__int16)self->_has;
  if ((has & 8) == 0)
  {
LABEL_6:
    if ((has & 0x200) == 0) {
      goto LABEL_7;
    }
    goto LABEL_24;
  }

  v4[19] = self->_rxUnicast;
  *((_WORD *)v4 + 40) |= 0x800u;
  has = (__int16)self->_has;
  if ((has & 1) == 0)
  {
LABEL_5:
    if ((has & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_24;
  }

  v4[12] = self->_rxErrInvalidSrcAddr;
  *((_WORD *)v4 + 40) |= 0x10u;
  has = (__int16)self->_has;
  if ((has & 0x100) == 0)
  {
LABEL_9:
    if ((has & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }

  self->_rxBroadcast = *((_DWORD *)v4 + 8);
  *(_WORD *)&self->_has |= 1u;
  uint64_t v5 = *((_WORD *)v4 + 40);
  if ((v5 & 8) == 0)
  {
LABEL_6:
    if ((v5 & 0x200) == 0) {
      goto LABEL_7;
    }
    goto LABEL_24;
  }

      xpc_object_t v11 = (char *)v11 + 1;
    }

    while (v9 != v11);
    xpc_object_t v9 = [obj countByEnumeratingWithState:&v54 objects:v58 count:16];
    if (v9) {
      continue;
    }
    break;
  }

  __int16 v30 = 0LL;
LABEL_27:
  int v7 = v32;
LABEL_29:

LABEL_30:
  return v30;
}

  return v30;
}

void sub_100021514( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20, __int16 a21, char a22, char a23, char a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, char a36)
{
  if (a2) {
    sub_100006EEC(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_1000215B4(uint64_t a1, uint64_t a2, xpc_object_t xdict, const std::string *a4, uint64_t a5)
{
  __dst[1] = 0LL;
  size_t length = 0LL;
  __dst[0] = 0LL;
  string = (char *)xpc_dictionary_get_string(xdict, "method");
  sub_10000AC00(&__str, string);
  uint64_t v10 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v10)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      xpc_object_t v11 = a4;
      *(_DWORD *)std::string buf = 136315394;
      uint64_t v40 = string;
      __int16 v41 = 2080;
      __int16 v42 = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_INFO,  "WPANTUND_v1 Handling %s method handler for %s",  buf,  0x16u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  uint int64 = xpc_dictionary_get_uint64(xdict, "prefix_bits_len");
  uint64_t data = xpc_dictionary_get_data(xdict, "prefix_bits", &length);
  unsigned __int16 v14 = xpc_dictionary_get_uint64(xdict, "domain_id");
  int int64 = xpc_dictionary_get_int64(xdict, "priority");
  BOOL v16 = xpc_dictionary_get_BOOL(xdict, "stable");
  BOOL v17 = xpc_dictionary_get_BOOL(xdict, "nat64");
  if (length >= 0x11)
  {
    int v22 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v22)
    {
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }
  }

  else
  {
    BOOL v18 = v17;
    memcpy(__dst, data, length);
    else {
      uint64_t v19 = ((__int16)int64 >> 15);
    }
    std::string::basic_string(&v27, a4);
    std::string::basic_string(&v26, &__str);
    std::string v20 = *(void **)a5;
    if (*(void *)a5) {
      std::string v20 = _Block_copy(v20);
    }
    std::string v21 = *(dispatch_object_s **)(a5 + 8);
    char v24 = v20;
    dispatch_object_t v25 = v21;
    if (v21) {
      dispatch_retain(v21);
    }
    sub_10001F308(&v27, (uint64_t)sub_10001CAAC, 0LL, a1, (uint64_t)xdict, &v26, (uint64_t)&v24, v28);
    sub_100030F0C(v35, v28);
    (*(void (**)(uint64_t, void *, void, void, uint64_t, BOOL, BOOL, uint64_t (***)()))(*(void *)a2 + 104LL))( a2,  __dst,  uint64,  v14,  v19,  v16,  v18,  v35);
    sub_1000075F0(v35);
    if (object) {
      dispatch_release(object);
    }
    if (aBlock) {
      _Block_release(aBlock);
    }
    if (v32 < 0) {
      operator delete(__p);
    }
    if (v30 < 0) {
      operator delete(v29);
    }
    if (v25) {
      dispatch_release(v25);
    }
    if (v24) {
      _Block_release(v24);
    }
  }

void sub_10002192C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20, int a21, __int16 a22, char a23, char a24, char a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, char a37)
{
  if (a2) {
    sub_100006EEC(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_1000219C8(uint64_t a1, uint64_t a2, xpc_object_t xdict, const std::string *a4, uint64_t a5)
{
  __dst[1] = 0LL;
  size_t length = 0LL;
  __dst[0] = 0LL;
  string = (char *)xpc_dictionary_get_string(xdict, "method");
  sub_10000AC00(&__str, string);
  xpc_object_t v11 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v11)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      std::string::size_type v12 = a4;
      *(_DWORD *)std::string buf = 136315394;
      __int16 v37 = string;
      __int16 v38 = 2080;
      __int16 v39 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_INFO,  "WPANTUND_v1 Handling %s method handler for %s",  buf,  0x16u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  uint int64 = xpc_dictionary_get_uint64(xdict, "prefix_len_in_bits");
  uint64_t data = xpc_dictionary_get_data(xdict, "prefix_bytes", &length);
  unsigned __int16 v15 = xpc_dictionary_get_uint64(xdict, "domain_id");
  if (length < 0x11)
  {
    if ((length & 0x80000000) == 0)
    {
      unsigned __int16 v16 = v15;
      memcpy(__dst, data, length);
      std::string::basic_string(&v24, a4);
      std::string::basic_string(&v23, &__str);
      BOOL v17 = *(void **)a5;
      if (*(void *)a5) {
        BOOL v17 = _Block_copy(v17);
      }
      BOOL v18 = *(dispatch_object_s **)(a5 + 8);
      std::string v21 = v17;
      dispatch_object_t v22 = v18;
      if (v18) {
        dispatch_retain(v18);
      }
      sub_10001F308(&v24, (uint64_t)sub_10001CAAC, 0LL, a1, (uint64_t)xdict, &v23, (uint64_t)&v21, v25);
      sub_100030F0C(v32, v25);
      (*(void (**)(uint64_t, void *, void, void, uint64_t (***)()))(*(void *)a2 + 112LL))( a2,  __dst,  uint64,  v16,  v32);
      sub_1000075F0(v32);
      if (object) {
        dispatch_release(object);
      }
      if (aBlock) {
        _Block_release(aBlock);
      }
      if (v29 < 0) {
        operator delete(__p);
      }
      if (v27 < 0) {
        operator delete(v26);
      }
      if (v22) {
        dispatch_release(v22);
      }
      if (v21) {
        _Block_release(v21);
      }
      goto LABEL_43;
    }

    std::string v20 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v20)
    {
      goto LABEL_43;
    }

    if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      goto LABEL_43;
    }
LABEL_42:
    sub_1001FB53C();
    goto LABEL_43;
  }

  uint64_t v19 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (!v19)
  {
    if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      goto LABEL_43;
    }
    goto LABEL_42;
  }

LABEL_43:
}
}

    _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_INFO, v21, buf, v23);
LABEL_18:
    sub_10004BF94(v30);
    sub_10004BED0(v29);
    sub_10004BEF8(v28);
    sub_100006E7C(v27);
    return;
  }

  sub_100034C60("CiiS", (uint64_t *)buf, 0x80u);
  sub_100079A40((uint64_t)v26, (uint64_t)buf);
  char v31 = buf;
  sub_100006F6C((void ***)&v31);
  __int128 v51 = *(void *)(*(void *)(a1 + 160) + 72817LL);
  if ((1000 * (unsigned __int128)a2) >> 64 == (1000LL * a2) >> 63)
  {
    BOOL v18 = operator new(0x20uLL);
    dispatch_object_s *v18 = sub_100047720;
    v18[1] = 0LL;
    v18[2] = a1;
    *((_DWORD *)v18 + 6) = a2;
    *(void *)std::string buf = off_1002AFB18;
    __int16 v33 = v18;
    sub_100142BE0(a1 + 168, 1000LL * a2, (uint64_t *)buf, 0);
    sub_10004BFBC(buf);
    goto LABEL_27;
  }

  __break(0x550Cu);
}

  __break(0x5500u);
}

  __break(0x5500u);
}

  __break(0x5500u);
}

      if (!memcmp(&buf, "CCAEnergyDetect[0x6] [-65dBm-60dBm)", 0x23uLL)) {
        goto LABEL_55;
      }
      if (!memcmp(&buf, "CCAEnergyDetect[0x7] [-60dBm-55dBm)", 0x23uLL))
      {
LABEL_56:
        char v27 = sub_1000BE984(4, uint64);
        goto LABEL_63;
      }

  __break(0x5500u);
}

void sub_100021D4C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20, char a21, char a22, char a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, char a35)
{
  if (a2) {
    sub_100006EEC(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_100021DEC(uint64_t a1, uint64_t a2, xpc_object_t xdict, const std::string *a4, uint64_t a5)
{
  uint64_t v38 = 0LL;
  string = (char *)xpc_dictionary_get_string(xdict, "method");
  sub_10000AC00(&__str, string);
  xpc_object_t v11 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v11)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      std::string::size_type v12 = (std::string::size_type)a4;
      LODWORD(buf.__r_.__value_.__l.__data_) = 136315394;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)string;
      WORD2(buf.__r_.__value_.__r.__words[1]) = 2080;
      *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_INFO,  "WPANTUND_v1 Handling %s method handler for %s",  (uint8_t *)&buf,  0x16u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  uint64_t v13 = xpc_dictionary_get_string(xdict, "property_name");
  if (xpc_dictionary_get_uint64(xdict, "property_type"))
  {
    uint int64 = xpc_dictionary_get_uint64(xdict, "property_value_length");
    size_t length = 0LL;
    uint64_t data = xpc_dictionary_get_data(xdict, "property_value", &length);
    unsigned __int16 v16 = malloc(uint64);
    memcpy(v16, data, uint64);
    sub_100018E5C(&buf, v16, (uint64_t)v16 + uint64);
    sub_100017FCC(&v38, (__n128 *)&buf);
    p_std::string buf = &buf;
    sub_100006F6C((void ***)&p_buf);
    free(v16);
  }

  else
  {
    BOOL v17 = (char *)xpc_dictionary_get_string(xdict, "property_value");
    sub_10000AC00(&buf, v17);
    sub_1000200A0(&v38, &buf);
  }

  std::string::assign(&v39, v13);
  if (sub_1000FCAF8(&v39))
  {
    BOOL v18 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v18)
    {
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }
  }

  std::string::basic_string(&v25, a4);
  std::string::basic_string(&v24, &__str);
  std::string::basic_string(&v23, &v39);
  uint64_t v19 = *(void **)a5;
  if (*(void *)a5) {
    uint64_t v19 = _Block_copy(v19);
  }
  std::string v20 = *(dispatch_object_s **)(a5 + 8);
  std::string v21 = v19;
  dispatch_object_t v22 = v20;
  if (v20) {
    dispatch_retain(v20);
  }
  sub_100020150(&v25, (uint64_t)sub_10001C740, 0LL, a1, (uint64_t)xdict, &v24, &v23, (uint64_t)&v21, v26);
  sub_10003277C(v35, v26);
  (*(void (**)(uint64_t, std::string *, uint64_t *, uint64_t (***)()))(*(void *)a2 + 72LL))( a2,  &v39,  &v38,  v35);
  sub_1000075F0(v35);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v32 < 0) {
    operator delete(__p);
  }
  if (v30 < 0) {
    operator delete(v29);
  }
  if (v28 < 0) {
    operator delete(v27);
  }
  if (v22) {
    dispatch_release(v22);
  }
  if (v21) {
    _Block_release(v21);
  }
  if (v38) {
    (*(void (**)(uint64_t))(*(void *)v38 + 8LL))(v38);
  }
}

void sub_10002220C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20, __int16 a21, char a22, char a23, void *a24, uint64_t a25, int a26, __int16 a27, char a28, char a29, char a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, char a45)
{
}

void sub_100022334(uint64_t a1, uint64_t a2, xpc_object_t xdict, const std::string *a4, uint64_t a5)
{
  uint64_t v42 = 0LL;
  string = (char *)xpc_dictionary_get_string(xdict, "method");
  sub_10000AC00(&__str, string);
  uint64_t v10 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v10)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      std::string::size_type v11 = (std::string::size_type)a4;
      LODWORD(buf.__r_.__value_.__l.__data_) = 136315394;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)string;
      WORD2(buf.__r_.__value_.__r.__words[1]) = 2080;
      *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_INFO,  "WPANTUND_v1 Handling %s method handler for %s",  (uint8_t *)&buf,  0x16u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  std::string::size_type v12 = xpc_dictionary_get_string(xdict, "property_name");
  if (xpc_dictionary_get_uint64(xdict, "property_type"))
  {
    uint int64 = xpc_dictionary_get_uint64(xdict, "property_value_length");
    size_t length = 0LL;
    uint64_t data = xpc_dictionary_get_data(xdict, "property_value", &length);
    size_t v15 = length;
    if (length == uint64)
    {
      unsigned __int16 v16 = data;
      BOOL v17 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v17)
      {
        if (sub_10015A058(6) && os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
        {
          LODWORD(buf.__r_.__value_.__l.__data_) = 134218240;
          *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = length;
          WORD2(buf.__r_.__value_.__r.__words[1]) = 1024;
          *(_DWORD *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = uint64;
          _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_INFO,  "sec_debug XPCIPCAPI_v1::interface_prop_remove_handler data_len(%zu) length(%d)",  (uint8_t *)&buf,  0x12u);
        }
      }

      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        sub_1001FB53C();
      }

      std::string v20 = malloc(v15);
      memcpy(v20, v16, v15);
      sub_100018E5C(&buf, v20, (uint64_t)v20 + v15);
      sub_100017FCC(&v42, (__n128 *)&buf);
      p_std::string buf = &buf;
      sub_100006F6C((void ***)&p_buf);
      free(v20);
    }

    else
    {
      uint64_t v19 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v19)
      {
      }

      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        sub_1001FB53C();
      }
    }
  }

  else
  {
    BOOL v18 = (char *)xpc_dictionary_get_string(xdict, "property_value");
    sub_10000AC00(&buf, v18);
    sub_1000200A0(&v42, &buf);
  }

  std::string::assign(&v43, v12);
  if (sub_1000FCAF8(&v43))
  {
    std::string v21 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v21)
    {
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }
  }

  std::string::basic_string(&v29, a4);
  std::string::basic_string(&v28, &__str);
  std::string::basic_string(&v27, &v43);
  dispatch_object_t v22 = *(void **)a5;
  if (*(void *)a5) {
    dispatch_object_t v22 = _Block_copy(v22);
  }
  std::string v23 = *(dispatch_object_s **)(a5 + 8);
  std::string v25 = v22;
  dispatch_object_t v26 = v23;
  if (v23) {
    dispatch_retain(v23);
  }
  sub_100020150(&v29, (uint64_t)sub_10001C740, 0LL, a1, (uint64_t)xdict, &v28, &v27, (uint64_t)&v25, v30);
  sub_10003277C(v39, v30);
  (*(void (**)(uint64_t, std::string *, uint64_t *, uint64_t (***)()))(*(void *)a2 + 80LL))( a2,  &v43,  &v42,  v39);
  sub_1000075F0(v39);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v36 < 0) {
    operator delete(__p);
  }
  if (v34 < 0) {
    operator delete(v33);
  }
  if (v32 < 0) {
    operator delete(v31);
  }
  if (v26) {
    dispatch_release(v26);
  }
  if (v25) {
    _Block_release(v25);
  }
  if (v42) {
    (*(void (**)(uint64_t))(*(void *)v42 + 8LL))(v42);
  }
}

void sub_100022858( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20, __int16 a21, char a22, char a23, void *a24, uint64_t a25, int a26, __int16 a27, char a28, char a29, char a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, char a45)
{
  *(void *)(v46 - 136) = v45;
  sub_100006F6C((void ***)(v46 - 136));
  uint64_t v48 = *(void *)(v46 - 168);
  if (v48) {
    (*(void (**)(uint64_t))(*(void *)v48 + 8LL))(v48);
  }
  _Unwind_Resume(a1);
}

void sub_100022988(uint64_t a1, uint64_t a2, xpc_object_t xdict, const std::string *a4, uint64_t a5)
{
  string = (char *)xpc_dictionary_get_string(xdict, "method");
  sub_10000AC00(&__str, string);
  std::string::size_type v11 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v11)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      std::string::size_type v12 = a4;
      *(_DWORD *)std::string buf = 136315394;
      std::string v29 = string;
      __int16 v30 = 2080;
      char v31 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_INFO,  "WPANTUND_v1 Handling %s method handler for %s",  buf,  0x16u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  std::string::basic_string(&v18, a4);
  std::string::basic_string(&v17, &__str);
  uint64_t v13 = *(void **)a5;
  if (*(void *)a5) {
    uint64_t v13 = _Block_copy(v13);
  }
  unsigned __int16 v14 = *(dispatch_object_s **)(a5 + 8);
  size_t v15 = v13;
  dispatch_object_t v16 = v14;
  if (v14) {
    dispatch_retain(v14);
  }
  sub_10001F308(&v18, (uint64_t)sub_10001CAAC, 0LL, a1, (uint64_t)xdict, &v17, (uint64_t)&v15, v19);
  sub_100030F0C(v26, v19);
  (*(void (**)(uint64_t, uint64_t (***)()))(*(void *)a2 + 40LL))(a2, v26);
  sub_1000075F0(v26);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v23 < 0) {
    operator delete(__p);
  }
  if (v21 < 0) {
    operator delete(v20);
  }
  if (v16) {
    dispatch_release(v16);
  }
  if (v15) {
    _Block_release(v15);
  }
}

void sub_100022BD4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20, __int16 a21, char a22, char a23, char a24)
{
  if (a2) {
    sub_100006EEC(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_100022C6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t Controller = FillmoreCreateController(kCFAllocatorDefault);
  if (Controller)
  {
    int v7 = (const void *)Controller;
    char v8 = FillmoreReset();
    xpc_object_t v9 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    uint64_t v10 = v9;
    if ((v8 & 1) != 0)
    {
      if (v9)
      {
        if (sub_10015A058(6) && os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)std::string buf = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_INFO,  "fillmoreController hard reset cmd successful",  buf,  2u);
        }
      }

      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        sub_1001FB53C();
      }

      unsigned int v13 = 0;
    }

    else
    {
      if (v9)
      {
      }

      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        sub_1001FB53C();
      }

      unsigned int v13 = 1;
    }

    CFRelease(v7);
  }

  else
  {
    std::string::size_type v11 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v11)
    {
      std::string::size_type v12 = v11;
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }

    unsigned int v13 = 1;
  }

  if (*(void *)a5 && *(void *)(a5 + 8))
  {
    xpc_object_t v14 = xpc_null_create();
    xpc_object_t v15 = xpc_dictionary_create(0LL, 0LL, 0LL);
    if (v15 || (xpc_object_t v15 = xpc_null_create()) != 0LL)
    {
      if (xpc_get_type(v15) == (xpc_type_t)&_xpc_type_dictionary)
      {
        xpc_retain(v15);
        xpc_object_t v16 = v15;
      }

      else
      {
        xpc_object_t v16 = xpc_null_create();
      }
    }

    else
    {
      xpc_object_t v16 = xpc_null_create();
      xpc_object_t v15 = 0LL;
    }

    xpc_release(v15);
    xpc_object_t v17 = xpc_null_create();
    xpc_release(v14);
    xpc_release(v17);
    xpc_dictionary_set_string(v16, "method", "HardReset");
    std::string v18 = v16;
    xpc_dictionary_set_uint64(v16, "ret", v13);
    if (v16)
    {
      xpc_retain(v16);
      xpc_object_t v19 = v16;
    }

    else
    {
      xpc_object_t v19 = xpc_null_create();
    }

    if (*(void *)a5) {
      std::string v20 = _Block_copy(*(const void **)a5);
    }
    else {
      std::string v20 = 0LL;
    }
    char v21 = *(dispatch_queue_s **)(a5 + 8);
    *(void *)std::string buf = _NSConcreteStackBlock;
    uint64_t v24 = 1174405120LL;
    std::string v25 = sub_100033000;
    dispatch_object_t v26 = &unk_1002AEA38;
    if (v20) {
      dispatch_object_t v22 = _Block_copy(v20);
    }
    else {
      dispatch_object_t v22 = 0LL;
    }
    char v29 = v13;
    aBlock = v22;
    xpc_object_t object = v19;
    if (v19) {
      xpc_retain(v19);
    }
    else {
      xpc_object_t object = xpc_null_create();
    }
    dispatch_async(v21, buf);
    xpc_release(object);
    xpc_object_t object = 0LL;
    if (aBlock) {
      _Block_release(aBlock);
    }
    if (v20) {
      _Block_release(v20);
    }
    xpc_release(v19);
    xpc_release(v18);
  }

void sub_100022FF8(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_10002300C(uint64_t a1, uint64_t a2, xpc_object_t xdict, const std::string *a4, void **a5)
{
  __dst[0] = 0LL;
  __dst[1] = 0LL;
  v66[0] = 0LL;
  v66[1] = 0LL;
  __int128 v65 = v66;
  string = (char *)xpc_dictionary_get_string(xdict, "method");
  sub_10000AC00(&__str, string);
  xpc_object_t v9 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v9)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      uint64_t v10 = a4;
      *(_DWORD *)std::string buf = 136315394;
      *(void *)&uint8_t buf[4] = string;
      __int16 v69 = 2080;
      uint64_t v70 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_INFO,  "WPANTUND_v1 Handling %s method handler for %s",  buf,  0x16u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  std::string::size_type v11 = *a5;
  if (*a5) {
    std::string::size_type v11 = _Block_copy(v11);
  }
  std::string::size_type v12 = (dispatch_object_s *)a5[1];
  xpc_object_t v62 = v11;
  dispatch_object_t v63 = v12;
  if (v12) {
    dispatch_retain(v12);
  }
  std::string::basic_string(&v61, &__str);
  char v13 = sub_10001E634(a2, xdict, (uint64_t)&v62);
  if (v63) {
    dispatch_release(v63);
  }
  if (v62) {
    _Block_release(v62);
  }
  if ((v13 & 1) != 0)
  {
    unsigned int int64 = xpc_dictionary_get_int64(xdict, "prefix_length");
    *(void *)std::string buf = 0LL;
    uint64_t data = xpc_dictionary_get_data(xdict, "prefix", (size_t *)buf);
    uunsigned int int64 = xpc_dictionary_get_uint64(xdict, "preferredLifetime");
    xpc_object_t v17 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v17)
    {
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }

    int v18 = xpc_dictionary_get_uint64(xdict, "validLifetime");
    BOOL v38 = xpc_dictionary_get_BOOL(xdict, "preferred");
    BOOL v37 = xpc_dictionary_get_BOOL(xdict, "slaac");
    BOOL v36 = xpc_dictionary_get_BOOL(xdict, "onMesh");
    int v19 = xpc_dictionary_get_int64(xdict, "priority");
    if (xpc_dictionary_get_value(xdict, "dhcp")) {
      BOOL v35 = xpc_dictionary_get_BOOL(xdict, "dhcp");
    }
    else {
      BOOL v35 = 0;
    }
    if (xpc_dictionary_get_value(xdict, "configure")) {
      BOOL v34 = xpc_dictionary_get_BOOL(xdict, "configure");
    }
    else {
      BOOL v34 = 0;
    }
    if (xpc_dictionary_get_value(xdict, "stable")) {
      BOOL v33 = xpc_dictionary_get_BOOL(xdict, "stable");
    }
    else {
      BOOL v33 = 1;
    }
    if (xpc_dictionary_get_value(xdict, "defaultRoute")) {
      BOOL v20 = xpc_dictionary_get_BOOL(xdict, "defaultRoute");
    }
    else {
      BOOL v20 = 0;
    }
    if (xpc_dictionary_get_value(xdict, "nd_dns")) {
      BOOL v21 = xpc_dictionary_get_BOOL(xdict, "nd_dns");
    }
    else {
      BOOL v21 = 0;
    }
    if (xpc_dictionary_get_value(xdict, "domain_prefix")) {
      BOOL v22 = xpc_dictionary_get_BOOL(xdict, "domain_prefix");
    }
    else {
      BOOL v22 = 0;
    }
    if (xpc_dictionary_get_value(xdict, "prefix_len_in_bits")) {
      unsigned __int16 v23 = xpc_dictionary_get_uint64(xdict, "prefix_len_in_bits");
    }
    else {
      unsigned __int16 v23 = 8 * int64;
    }
    unsigned int v24 = v23;
    if ((v23 & 0xFFC0) != 0) {
      unsigned int v24 = 64;
    }
    unsigned __int8 v39 = v24;
    if (int64 >= 0x11uLL)
    {
      dispatch_object_t v26 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (!v26)
      {
        if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          goto LABEL_122;
        }
        goto LABEL_117;
      }
    }

    else if ((int64 & 0x80000000) != 0)
    {
      std::string v27 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (!v27)
      {
        if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          goto LABEL_122;
        }
        goto LABEL_117;
      }
    }

    else if (v24)
    {
      if (8 * int64 < v24)
      {
        std::string v25 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v25)
        {
          goto LABEL_122;
        }

        if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          goto LABEL_122;
        }
LABEL_117:
        sub_1001FB53C();
        goto LABEL_122;
      }

      if (v19 << 16 >= 1) {
        uint64_t v29 = 1LL;
      }
      else {
        uint64_t v29 = ((__int16)v19 >> 15);
      }
      if (v20)
      {
        int v60 = 4;
        sub_10003308C(&v65, &v60, &v60);
      }

      if (v38)
      {
        int v60 = 0;
        sub_10003308C(&v65, &v60, &v60);
      }

      if (v37)
      {
        int v60 = 1;
        sub_10003308C(&v65, &v60, &v60);
      }

      if (v36)
      {
        int v60 = 5;
        sub_10003308C(&v65, &v60, &v60);
      }

      if (v35)
      {
        int v60 = 2;
        sub_10003308C(&v65, &v60, &v60);
      }

      if (v34)
      {
        int v60 = 3;
        sub_10003308C(&v65, &v60, &v60);
      }

      if (v21)
      {
        int v60 = 7;
        sub_10003308C(&v65, &v60, &v60);
      }

      if (v22)
      {
        int v60 = 6;
        sub_10003308C(&v65, &v60, &v60);
      }

      memcpy(__dst, data, (int)int64);
      if (v18)
      {
        sub_100033134(v54, (uint64_t *)&v65);
        std::string::basic_string(&v45, a4);
        std::string::basic_string(&v44, &__str);
        __int16 v30 = *a5;
        if (*a5) {
          __int16 v30 = _Block_copy(v30);
        }
        char v31 = (dispatch_object_s *)a5[1];
        uint64_t v42 = v30;
        dispatch_object_t v43 = v31;
        if (v31) {
          dispatch_retain(v31);
        }
        sub_10001F308(&v45, (uint64_t)sub_10001CAAC, 0LL, a1, (uint64_t)xdict, &v44, (uint64_t)&v42, v46);
        sub_100030F0C(v53, v46);
        (*(void (**)(uint64_t, void *, void, void *, uint64_t, BOOL, uint64_t (***)()))(*(void *)a2 + 88LL))( a2,  __dst,  v39,  v54,  v29,  v33,  v53);
        sub_1000075F0(v53);
        if (object) {
          dispatch_release(object);
        }
        if (aBlock) {
          _Block_release(aBlock);
        }
        if (v50 < 0) {
          operator delete(__p);
        }
        if (v48 < 0) {
          operator delete(v47);
        }
        if (v43) {
          dispatch_release(v43);
        }
        if (v42) {
          _Block_release(v42);
        }
        sub_10000D0D4((uint64_t)v54);
      }

      else
      {
        std::string::basic_string(&v57, a4);
        std::string::basic_string(&v56, &__str);
        sub_10001EE68(v55, (uint64_t)a5);
        sub_10001F308(&v57, (uint64_t)sub_10001CAAC, 0LL, a1, (uint64_t)xdict, &v56, (uint64_t)v55, v58);
        sub_100030F0C(v59, v58);
        (*(void (**)(uint64_t, void *, void, uint64_t (***)()))(*(void *)a2 + 96LL))( a2,  __dst,  v39,  v59);
        sub_1000075F0(v59);
        sub_10001F470((uint64_t)v58);
        sub_100009894((uint64_t)v55);
      }
    }

    else
    {
      std::string v28 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (!v28)
      {
        if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          goto LABEL_122;
        }
        goto LABEL_117;
      }
    }
  }

LABEL_122:
  return sub_10000D0D4((uint64_t)&v65);
}

void sub_1000238F8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20, void *a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, char a43, uint64_t a44, void *__p, uint64_t a46, int a47, __int16 a48, char a49, char a50,void *a51,uint64_t a52,int a53,__int16 a54,char a55,char a56,char a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  if (a50 < 0) {
    operator delete(__p);
  }
  if (a56 < 0) {
    operator delete(a51);
  }
  sub_10000D0D4(v69 - 168);
  _Unwind_Resume(a1);
}

uint64_t sub_100023A74(uint64_t a1, uint64_t a2, xpc_object_t xdict, const std::string *a4, uint64_t a5)
{
  v45[0] = 0LL;
  v45[1] = 0LL;
  std::string v44 = v45;
  int v43 = 0;
  size_t length = 0LL;
  uunsigned int int64 = 0LL;
  string = (char *)xpc_dictionary_get_string(xdict, "method");
  sub_10000AC00(&__str, string);
  std::string::size_type v11 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v11)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      std::string::size_type v12 = a4;
      *(_DWORD *)std::string buf = 136315394;
      *(void *)&uint8_t buf[4] = string;
      *(_WORD *)&_BYTE buf[12] = 2080;
      *(void *)std::string::size_type v47 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_INFO,  "WPANTUND_v1 Handling %s method handler for %s",  buf,  0x16u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  char v13 = (char *)xpc_dictionary_get_string(xdict, "network_name");
  xpc_object_t v14 = (char *)xpc_dictionary_get_string(xdict, "node_type");
  HIWORD(v43) = xpc_dictionary_get_uint64(xdict, "channel");
  LOWORD(v43) = xpc_dictionary_get_uint64(xdict, "panid");
  uunsigned int int64 = xpc_dictionary_get_uint64(xdict, "xpanid");
  uint64_t data = xpc_dictionary_get_data(xdict, "network_key", &length);
  xpc_object_t v16 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v16)
  {
    if (sub_10015A058(6) && os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)std::string buf = 67109632;
      *(_DWORD *)&uint8_t buf[4] = HIWORD(v43);
      *(_WORD *)&uint8_t buf[8] = 1024;
      *(_DWORD *)&buf[10] = (unsigned __int16)v43;
      *(_WORD *)std::string::size_type v47 = 2048;
      *(void *)&v47[2] = uint64;
      _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_INFO,  "Join Params: channel: %d, panid: 0x%x, xpanid: 0x%llx",  buf,  0x18u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  sub_10000AC00(buf, v13);
  sub_10000AC00(&__p, "Network:Name");
  xpc_object_t v17 = sub_10000ED88(&v44, &__p);
  sub_1000175B4(v17, (uint64_t)buf);
  if (v39 < 0) {
    operator delete((void *)__p.n128_u64[0]);
  }
  if ((v47[9] & 0x80000000) != 0) {
    operator delete(*(void **)buf);
  }
  sub_10000AC00(buf, v14);
  sub_10000AC00(&__p, "Network:NodeType");
  int v18 = sub_10000ED88(&v44, &__p);
  sub_1000175B4(v18, (uint64_t)buf);
  if (v39 < 0) {
    operator delete((void *)__p.n128_u64[0]);
  }
  if ((v47[9] & 0x80000000) != 0) {
    operator delete(*(void **)buf);
  }
  if (HIWORD(v43))
  {
    sub_10000AC00(buf, "NCP:Channel");
    int v19 = sub_10000ED88(&v44, (__n128 *)buf);
    sub_100017678(v19, (_WORD *)&v43 + 1);
    if ((v47[9] & 0x80000000) != 0) {
      operator delete(*(void **)buf);
    }
  }

  if ((_WORD)v43)
  {
    sub_10000AC00(buf, "Network:PANID");
    BOOL v20 = sub_10000ED88(&v44, (__n128 *)buf);
    sub_100017678(v20, &v43);
    if ((v47[9] & 0x80000000) != 0) {
      operator delete(*(void **)buf);
    }
  }

  if (uint64)
  {
    sub_10000AC00(buf, "Network:XPANID");
    BOOL v21 = sub_10000ED88(&v44, (__n128 *)buf);
    sub_100017620(v21, (uint64_t *)&uint64);
    if ((v47[9] & 0x80000000) != 0) {
      operator delete(*(void **)buf);
    }
  }

  if (length)
  {
    sub_100018E5C(buf, data, (uint64_t)data + length);
    sub_10000AC00(&__p, "Network:Key");
    BOOL v22 = sub_10000ED88(&v44, &__p);
    sub_100017FCC(v22, (__n128 *)buf);
    if (v39 < 0) {
      operator delete((void *)__p.n128_u64[0]);
    }
    __p.n128_u64[0] = (unint64_t)buf;
    sub_100006F6C((void ***)&__p);
  }

  std::string::basic_string(&v29, a4);
  std::string::basic_string(&v28, &__str);
  unsigned __int16 v23 = *(void **)a5;
  if (*(void *)a5) {
    unsigned __int16 v23 = _Block_copy(v23);
  }
  unsigned int v24 = *(dispatch_object_s **)(a5 + 8);
  dispatch_object_t v26 = v23;
  dispatch_object_t v27 = v24;
  if (v24) {
    dispatch_retain(v24);
  }
  sub_10001F308(&v29, (uint64_t)sub_10001CAAC, 0LL, a1, (uint64_t)xdict, &v28, (uint64_t)&v26, v30);
  sub_100030F0C(v37, v30);
  (*(void (**)(uint64_t, uint64_t **, uint64_t (***)()))(*(void *)a2 + 8LL))(a2, &v44, v37);
  sub_1000075F0(v37);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v34 < 0) {
    operator delete(v33);
  }
  if (v32 < 0) {
    operator delete(v31);
  }
  if (v27) {
    dispatch_release(v27);
  }
  if (v26) {
    _Block_release(v26);
  }
  return sub_10000D448((uint64_t)&v44);
}

void sub_100023FC4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20, char a21, char a22, char a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, char a35, uint64_t a36, uint64_t a37, uint64_t a38, void *a39, uint64_t a40, int a41, __int16 a42, char a43, char a44)
{
}

uint64_t sub_1000240FC(uint64_t a1, uint64_t a2, xpc_object_t xdict, const std::string *a4, uint64_t a5)
{
  v55[0] = 0LL;
  v55[1] = 0LL;
  std::string v54 = v55;
  uunsigned int int64 = 0;
  int v52 = 0;
  __int16 v51 = 0;
  size_t length = 0LL;
  uint64_t v50 = 0LL;
  int v48 = 0;
  size_t v46 = 0LL;
  size_t v47 = 0LL;
  string = (char *)xpc_dictionary_get_string(xdict, "method");
  sub_10000AC00(&__str, string);
  std::string::size_type v11 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v11)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      std::string::size_type v12 = a4;
      *(_DWORD *)std::string buf = 136315394;
      *(void *)&uint8_t buf[4] = string;
      __int16 v57 = 2080;
      uint64_t v58 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_INFO,  "WPANTUND_v1 Handling %s method handler for %s",  buf,  0x16u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  char v13 = (char *)xpc_dictionary_get_string(xdict, "network_name");
  uunsigned int int64 = xpc_dictionary_get_uint64(xdict, "channel");
  int v52 = xpc_dictionary_get_uint64(xdict, "channel_mask");
  __int16 v51 = xpc_dictionary_get_uint64(xdict, "panid");
  uint64_t v50 = xpc_dictionary_get_uint64(xdict, "xpanid");
  uint64_t data = xpc_dictionary_get_data(xdict, "network_key", &length);
  int v48 = xpc_dictionary_get_uint64(xdict, "key_index");
  xpc_object_t v15 = (char *)xpc_dictionary_get_string(xdict, "node_type");
  xpc_object_t v16 = xpc_dictionary_get_data(xdict, "mesh_local_prefix", &v47);
  xpc_object_t v17 = xpc_dictionary_get_data(xdict, "legacy_prefix", &v46);
  sub_10000AC00(buf, v13);
  sub_10000AC00(&__p, "Network:Name");
  int v18 = sub_10000ED88(&v54, &__p);
  sub_1000175B4(v18, (uint64_t)buf);
  if (v44 < 0) {
    operator delete((void *)__p.n128_u64[0]);
  }
  if (v59 < 0)
  {
    operator delete(*(void **)buf);
    if (!v15) {
      goto LABEL_19;
    }
  }

  else if (!v15)
  {
    goto LABEL_19;
  }

  sub_10000AC00(buf, v15);
  sub_10000AC00(&__p, "Network:NodeType");
  int v19 = sub_10000ED88(&v54, &__p);
  sub_1000175B4(v19, (uint64_t)buf);
  if (v44 < 0) {
    operator delete((void *)__p.n128_u64[0]);
  }
  if (v59 < 0) {
    operator delete(*(void **)buf);
  }
LABEL_19:
  if (uint64)
  {
    sub_10000AC00(buf, "NCP:Channel");
    BOOL v20 = sub_10000ED88(&v54, (__n128 *)buf);
    sub_100017678(v20, &uint64);
    if (v59 < 0) {
      operator delete(*(void **)buf);
    }
  }

  if (v52)
  {
    sub_10000AC00(buf, "NCP:ChannelMask");
    BOOL v21 = sub_10000ED88(&v54, (__n128 *)buf);
    sub_100017F70(v21, &v52);
    if (v59 < 0) {
      operator delete(*(void **)buf);
    }
  }

  if (v51)
  {
    sub_10000AC00(buf, "Network:PANID");
    BOOL v22 = sub_10000ED88(&v54, (__n128 *)buf);
    sub_100017678(v22, &v51);
    if (v59 < 0) {
      operator delete(*(void **)buf);
    }
  }

  if (v50)
  {
    sub_10000AC00(buf, "Network:XPANID");
    unsigned __int16 v23 = sub_10000ED88(&v54, (__n128 *)buf);
    sub_100017620(v23, (uint64_t *)&v50);
    if (v59 < 0) {
      operator delete(*(void **)buf);
    }
  }

  if (length)
  {
    sub_100018E5C(buf, data, (uint64_t)data + length);
    sub_10000AC00(&__p, "Network:Key");
    unsigned int v24 = sub_10000ED88(&v54, &__p);
    sub_100017FCC(v24, (__n128 *)buf);
    if (v44 < 0) {
      operator delete((void *)__p.n128_u64[0]);
    }
    __p.n128_u64[0] = (unint64_t)buf;
    sub_100006F6C((void ***)&__p);
  }

  if (v48)
  {
    sub_10000AC00(buf, "Network:KeyIndex");
    std::string v25 = sub_10000ED88(&v54, (__n128 *)buf);
    sub_100017F70(v25, &v48);
    if (v59 < 0) {
      operator delete(*(void **)buf);
    }
  }

  if (v47)
  {
    sub_100018E5C(buf, v16, (uint64_t)v16 + v47);
    sub_10000AC00(&__p, "IPv6:MeshLocalPrefix");
    dispatch_object_t v26 = sub_10000ED88(&v54, &__p);
    sub_100017FCC(v26, (__n128 *)buf);
    if (v44 < 0) {
      operator delete((void *)__p.n128_u64[0]);
    }
    __p.n128_u64[0] = (unint64_t)buf;
    sub_100006F6C((void ***)&__p);
  }

  if (v46)
  {
    sub_100018E5C(buf, v17, (uint64_t)v17 + v46);
    sub_10000AC00(&__p, "com.nestlabs.internal:Legacy:MeshLocalPrefix");
    dispatch_object_t v27 = sub_10000ED88(&v54, &__p);
    sub_100017FCC(v27, (__n128 *)buf);
    if (v44 < 0) {
      operator delete((void *)__p.n128_u64[0]);
    }
    __p.n128_u64[0] = (unint64_t)buf;
    sub_100006F6C((void ***)&__p);
  }

  std::string::basic_string(&v34, a4);
  std::string::basic_string(&v33, &__str);
  std::string v28 = *(void **)a5;
  if (*(void *)a5) {
    std::string v28 = _Block_copy(v28);
  }
  std::string v29 = *(dispatch_object_s **)(a5 + 8);
  char v31 = v28;
  dispatch_object_t v32 = v29;
  if (v29) {
    dispatch_retain(v29);
  }
  sub_10001F308(&v34, (uint64_t)sub_10001CAAC, 0LL, a1, (uint64_t)xdict, &v33, (uint64_t)&v31, v35);
  sub_100030F0C(v42, v35);
  (*(void (**)(uint64_t, uint64_t **, uint64_t (***)()))(*(void *)a2 + 16LL))(a2, &v54, v42);
  sub_1000075F0(v42);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v39 < 0) {
    operator delete(v38);
  }
  if (v37 < 0) {
    operator delete(v36);
  }
  if (v32) {
    dispatch_release(v32);
  }
  if (v31) {
    _Block_release(v31);
  }
  return sub_10000D448((uint64_t)&v54);
}

void sub_100024744( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, int a19, __int16 a20, char a21, char a22, char a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, char a35, uint64_t a36, uint64_t a37, uint64_t a38, void *a39, uint64_t a40, int a41, __int16 a42, char a43, char a44, void *__p, uint64_t a46, int a47, __int16 a48, char a49, char a50)
{
}

void sub_1000248A0(uint64_t a1, uint64_t a2, xpc_object_t xdict, const std::string *a4, uint64_t a5)
{
  string = (char *)xpc_dictionary_get_string(xdict, "method");
  sub_10000AC00(&__str, string);
  std::string::size_type v11 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v11)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      std::string::size_type v12 = a4;
      *(_DWORD *)std::string buf = 136315394;
      std::string v29 = string;
      __int16 v30 = 2080;
      char v31 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_INFO,  "WPANTUND_v1 Handling %s method handler for %s",  buf,  0x16u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  std::string::basic_string(&v18, a4);
  std::string::basic_string(&v17, &__str);
  char v13 = *(void **)a5;
  if (*(void *)a5) {
    char v13 = _Block_copy(v13);
  }
  xpc_object_t v14 = *(dispatch_object_s **)(a5 + 8);
  xpc_object_t v15 = v13;
  dispatch_object_t v16 = v14;
  if (v14) {
    dispatch_retain(v14);
  }
  sub_10001F308(&v18, (uint64_t)sub_10001CAAC, 0LL, a1, (uint64_t)xdict, &v17, (uint64_t)&v15, v19);
  sub_100030F0C(v26, v19);
  (*(void (**)(uint64_t, uint64_t (***)()))(*(void *)a2 + 32LL))(a2, v26);
  sub_1000075F0(v26);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v23 < 0) {
    operator delete(__p);
  }
  if (v21 < 0) {
    operator delete(v20);
  }
  if (v16) {
    dispatch_release(v16);
  }
  if (v15) {
    _Block_release(v15);
  }
}

void sub_100024AEC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20, __int16 a21, char a22, char a23, char a24)
{
  if (a2) {
    sub_100006EEC(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_100024B84(uint64_t a1, uint64_t a2, xpc_object_t xdict, const std::string *a4, uint64_t a5)
{
  string = (char *)xpc_dictionary_get_string(xdict, "method");
  sub_10000AC00(&__str, string);
  std::string::size_type v11 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v11)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      std::string::size_type v12 = a4;
      *(_DWORD *)std::string buf = 136315394;
      std::string v29 = string;
      __int16 v30 = 2080;
      char v31 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_INFO,  "WPANTUND_v1 Handling %s method handler for %s",  buf,  0x16u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  std::string::basic_string(&v18, a4);
  std::string::basic_string(&v17, &__str);
  char v13 = *(void **)a5;
  if (*(void *)a5) {
    char v13 = _Block_copy(v13);
  }
  xpc_object_t v14 = *(dispatch_object_s **)(a5 + 8);
  xpc_object_t v15 = v13;
  dispatch_object_t v16 = v14;
  if (v14) {
    dispatch_retain(v14);
  }
  sub_10001F308(&v18, (uint64_t)sub_10001CAAC, 0LL, a1, (uint64_t)xdict, &v17, (uint64_t)&v15, v19);
  sub_100030F0C(v26, v19);
  (*(void (**)(uint64_t, uint64_t (***)()))(*(void *)a2 + 304LL))(a2, v26);
  sub_1000075F0(v26);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v23 < 0) {
    operator delete(__p);
  }
  if (v21 < 0) {
    operator delete(v20);
  }
  if (v16) {
    dispatch_release(v16);
  }
  if (v15) {
    _Block_release(v15);
  }
}

void sub_100024DD0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20, __int16 a21, char a22, char a23, char a24)
{
  if (a2) {
    sub_100006EEC(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_100024E68(uint64_t a1, uint64_t a2, xpc_object_t xdict, const std::string *a4, uint64_t a5)
{
  string = (char *)xpc_dictionary_get_string(xdict, "method");
  sub_10000AC00(&__str, string);
  std::string::size_type v11 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v11)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      std::string::size_type v12 = a4;
      *(_DWORD *)std::string buf = 136315394;
      std::string v29 = string;
      __int16 v30 = 2080;
      char v31 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_INFO,  "WPANTUND_v1 Handling %s method handler for %s",  buf,  0x16u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  std::string::basic_string(&v18, a4);
  std::string::basic_string(&v17, &__str);
  char v13 = *(void **)a5;
  if (*(void *)a5) {
    char v13 = _Block_copy(v13);
  }
  xpc_object_t v14 = *(dispatch_object_s **)(a5 + 8);
  xpc_object_t v15 = v13;
  dispatch_object_t v16 = v14;
  if (v14) {
    dispatch_retain(v14);
  }
  sub_10001F308(&v18, (uint64_t)sub_10001CAAC, 0LL, a1, (uint64_t)xdict, &v17, (uint64_t)&v15, v19);
  sub_100030F0C(v26, v19);
  (*(void (**)(uint64_t, uint64_t (***)()))(*(void *)a2 + 312LL))(a2, v26);
  sub_1000075F0(v26);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v23 < 0) {
    operator delete(__p);
  }
  if (v21 < 0) {
    operator delete(v20);
  }
  if (v16) {
    dispatch_release(v16);
  }
  if (v15) {
    _Block_release(v15);
  }
}

void sub_1000250B4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20, __int16 a21, char a22, char a23, char a24)
{
  if (a2) {
    sub_100006EEC(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_10002514C(uint64_t a1, uint64_t a2, xpc_object_t xdict, const std::string *a4, uint64_t a5)
{
  string = (char *)xpc_dictionary_get_string(xdict, "method");
  sub_10000AC00(&__str, string);
  std::string::size_type v11 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v11)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      std::string::size_type v12 = a4;
      *(_DWORD *)std::string buf = 136315394;
      *(void *)&uint8_t buf[4] = string;
      __int16 v33 = 2080;
      std::string v34 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_INFO,  "WPANTUND_v1 Handling %s method handler for %s",  buf,  0x16u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  size_t length = 0LL;
  uint64_t data = xpc_dictionary_get_data(xdict, "value", &length);
  uunsigned int int64 = xpc_dictionary_get_uint64(xdict, "address");
  sub_100018E5C(v29, data, (uint64_t)data + length);
  std::string::basic_string(&v20, a4);
  std::string::basic_string(&v19, &__str);
  xpc_object_t v15 = *(void **)a5;
  if (*(void *)a5) {
    xpc_object_t v15 = _Block_copy(v15);
  }
  dispatch_object_t v16 = *(dispatch_object_s **)(a5 + 8);
  std::string v17 = v15;
  dispatch_object_t v18 = v16;
  if (v16) {
    dispatch_retain(v16);
  }
  sub_10001F308(&v20, (uint64_t)sub_10001CAAC, 0LL, a1, (uint64_t)xdict, &v19, (uint64_t)&v17, v21);
  sub_100030F0C(v28, v21);
  (*(void (**)(uint64_t, uint64_t, size_t *, uint64_t (***)()))(*(void *)a2 + 336LL))( a2,  uint64,  v29,  v28);
  sub_1000075F0(v28);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v25 < 0) {
    operator delete(__p);
  }
  if (v23 < 0) {
    operator delete(v22);
  }
  if (v18) {
    dispatch_release(v18);
  }
  if (v17) {
    _Block_release(v17);
  }
  *(void *)std::string buf = v29;
  sub_100006F6C((void ***)buf);
}

void sub_1000253F4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20, __int16 a21, char a22, char a23, char a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, char a36)
{
  if (a2) {
    sub_100006EEC(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_1000254A4(uint64_t a1, uint64_t a2, xpc_object_t xdict, const std::string *a4, uint64_t a5)
{
  string = (char *)xpc_dictionary_get_string(xdict, "method");
  sub_10000AC00(&__str, string);
  std::string::size_type v11 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v11)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      std::string::size_type v12 = a4;
      *(_DWORD *)std::string buf = 136315394;
      std::string v29 = string;
      __int16 v30 = 2080;
      char v31 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_INFO,  "WPANTUND_v1 Handling %s method handler for %s",  buf,  0x16u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  std::string::basic_string(&v18, a4);
  std::string::basic_string(&v17, &__str);
  char v13 = *(void **)a5;
  if (*(void *)a5) {
    char v13 = _Block_copy(v13);
  }
  xpc_object_t v14 = *(dispatch_object_s **)(a5 + 8);
  xpc_object_t v15 = v13;
  dispatch_object_t v16 = v14;
  if (v14) {
    dispatch_retain(v14);
  }
  sub_10001F308(&v18, (uint64_t)sub_10001CAAC, 0LL, a1, (uint64_t)xdict, &v17, (uint64_t)&v15, v19);
  sub_100030F0C(v26, v19);
  (*(void (**)(uint64_t, uint64_t (***)()))(*(void *)a2 + 320LL))(a2, v26);
  sub_1000075F0(v26);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v23 < 0) {
    operator delete(__p);
  }
  if (v21 < 0) {
    operator delete(v20);
  }
  if (v16) {
    dispatch_release(v16);
  }
  if (v15) {
    _Block_release(v15);
  }
}

void sub_1000256F0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20, __int16 a21, char a22, char a23, char a24)
{
  if (a2) {
    sub_100006EEC(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_100025788(uint64_t a1, uint64_t a2, xpc_object_t xdict, const std::string *a4, uint64_t a5)
{
  string = (char *)xpc_dictionary_get_string(xdict, "method");
  sub_10000AC00(&__str, string);
  std::string::size_type v11 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v11)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      std::string::size_type v12 = a4;
      *(_DWORD *)std::string buf = 136315394;
      int v43 = string;
      __int16 v44 = 2080;
      std::string v45 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_INFO,  "WPANTUND_v1 Handling %s method handler for %s",  buf,  0x16u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  char v13 = *(void **)a5;
  if (*(void *)a5) {
    char v13 = _Block_copy(v13);
  }
  xpc_object_t v14 = *(dispatch_object_s **)(a5 + 8);
  BOOL v36 = v13;
  dispatch_object_t v37 = v14;
  if (v14) {
    dispatch_retain(v14);
  }
  std::string::basic_string(&v35, &__str);
  char v15 = sub_10001E634(a2, xdict, (uint64_t)&v36);
  if (v37) {
    dispatch_release(v37);
  }
  if (v36) {
    _Block_release(v36);
  }
  if ((v15 & 1) != 0)
  {
    uunsigned int int64 = xpc_dictionary_get_uint64(xdict, "enterprise_number");
    uint64_t data = xpc_dictionary_get_data(xdict, "service_data", &length);
    std::string v18 = xpc_dictionary_get_data(xdict, "server_data", &v39);
    BOOL v19 = xpc_dictionary_get_BOOL(xdict, "stable");
    sub_100018E5C(buf, data, (uint64_t)data + length);
    sub_100018E5C(v34, v18, (uint64_t)v18 + v39);
    std::string::basic_string(&v25, a4);
    std::string::basic_string(&v24, &__str);
    std::string v20 = *(void **)a5;
    if (*(void *)a5) {
      std::string v20 = _Block_copy(v20);
    }
    char v21 = *(dispatch_object_s **)(a5 + 8);
    BOOL v22 = v20;
    dispatch_object_t v23 = v21;
    if (v21) {
      dispatch_retain(v21);
    }
    sub_10001F308(&v25, (uint64_t)sub_10001CAAC, 0LL, a1, (uint64_t)xdict, &v24, (uint64_t)&v22, v26);
    sub_100030F0C(v33, v26);
    (*(void (**)(uint64_t, uint64_t, uint8_t *, BOOL, void ***, uint64_t (***)()))(*(void *)a2 + 120LL))( a2,  uint64,  buf,  v19,  v34,  v33);
    sub_1000075F0(v33);
    if (object) {
      dispatch_release(object);
    }
    if (aBlock) {
      _Block_release(aBlock);
    }
    if (v30 < 0) {
      operator delete(__p);
    }
    if (v28 < 0) {
      operator delete(v27);
    }
    if (v23) {
      dispatch_release(v23);
    }
    if (v22) {
      _Block_release(v22);
    }
    __int16 v41 = v34;
    sub_100006F6C((void ***)&v41);
    v34[0] = (void **)buf;
    sub_100006F6C(v34);
  }

void sub_100025AFC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20, char a21, char a22, char a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, char a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39)
{
  if (a2) {
    sub_100006EEC(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_100025BF8(uint64_t a1, uint64_t a2, xpc_object_t xdict, const std::string *a4, uint64_t a5)
{
  string = (char *)xpc_dictionary_get_string(xdict, "method");
  sub_10000AC00(&__str, string);
  std::string::size_type v11 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v11)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      std::string::size_type v12 = a4;
      *(_DWORD *)std::string buf = 136315394;
      size_t v39 = string;
      __int16 v40 = 2080;
      __int16 v41 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_INFO,  "WPANTUND_v1 Handling %s method handler for %s",  buf,  0x16u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  char v13 = *(void **)a5;
  if (*(void *)a5) {
    char v13 = _Block_copy(v13);
  }
  xpc_object_t v14 = *(dispatch_object_s **)(a5 + 8);
  __int16 v33 = v13;
  dispatch_object_t v34 = v14;
  if (v14) {
    dispatch_retain(v14);
  }
  std::string::basic_string(&v32, &__str);
  char v15 = sub_10001E634(a2, xdict, (uint64_t)&v33);
  if (v34) {
    dispatch_release(v34);
  }
  if (v33) {
    _Block_release(v33);
  }
  if ((v15 & 1) != 0)
  {
    uunsigned int int64 = xpc_dictionary_get_uint64(xdict, "enterprise_number");
    uint64_t data = xpc_dictionary_get_data(xdict, "service_data", &length);
    sub_100018E5C(buf, data, (uint64_t)data + length);
    std::string::basic_string(&v23, a4);
    std::string::basic_string(&v22, &__str);
    std::string v18 = *(void **)a5;
    if (*(void *)a5) {
      std::string v18 = _Block_copy(v18);
    }
    BOOL v19 = *(dispatch_object_s **)(a5 + 8);
    std::string v20 = v18;
    dispatch_object_t v21 = v19;
    if (v19) {
      dispatch_retain(v19);
    }
    sub_10001F308(&v23, (uint64_t)sub_10001CAAC, 0LL, a1, (uint64_t)xdict, &v22, (uint64_t)&v20, v24);
    sub_100030F0C(v31, v24);
    (*(void (**)(uint64_t, uint64_t, uint8_t *, uint64_t (***)()))(*(void *)a2 + 128LL))( a2,  uint64,  buf,  v31);
    sub_1000075F0(v31);
    if (object) {
      dispatch_release(object);
    }
    if (aBlock) {
      _Block_release(aBlock);
    }
    if (v28 < 0) {
      operator delete(__p);
    }
    if (v26 < 0) {
      operator delete(v25);
    }
    if (v21) {
      dispatch_release(v21);
    }
    if (v20) {
      _Block_release(v20);
    }
    dispatch_object_t v37 = buf;
    sub_100006F6C((void ***)&v37);
  }

void sub_100025F08( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20, char a21, char a22, char a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, char a35)
{
  if (a2) {
    sub_100006EEC(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_100025FEC( uint64_t a1, void (***a2)(void *, std::string *, uint64_t (***)()), xpc_object_t xdict, const std::string *a4, uint64_t a5)
{
  string = (char *)xpc_dictionary_get_string(xdict, "method");
  sub_10000AC00(&__str, string);
  std::string::size_type v11 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v11)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      std::string::size_type v12 = (std::string::size_type)a4;
      LODWORD(buf.__r_.__value_.__l.__data_) = 136315394;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)string;
      WORD2(buf.__r_.__value_.__r.__words[1]) = 2080;
      *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_INFO,  "WPANTUND_v1 Handling %s method handler for %s",  (uint8_t *)&buf,  0x16u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  if (a2) {
  memset(&buf, 0, sizeof(buf));
  }
  char v13 = xpc_dictionary_get_string(xdict, "mfgCommand");
  std::string::assign(&buf, v13);
  std::string::basic_string(&v20, a4);
  std::string::basic_string(&v19, &__str);
  std::string::basic_string(&v18, &buf);
  xpc_object_t v14 = *(void **)a5;
  if (*(void *)a5) {
    xpc_object_t v14 = _Block_copy(v14);
  }
  char v15 = *(dispatch_object_s **)(a5 + 8);
  dispatch_object_t v16 = v14;
  dispatch_object_t v17 = v15;
  if (v15) {
    dispatch_retain(v15);
  }
  sub_10001F8DC(&v20, (uint64_t)sub_10001E2A4, 0LL, a1, &v19, &v18, (uint64_t)&v16, &v21);
  sub_100031B30(v30, &v21);
  (**a2)(a2, &buf, v30);
  sub_100006E7C(v30);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v27 < 0) {
    operator delete(__p);
  }
  if (v25 < 0) {
    operator delete(v24);
  }
  if (v23 < 0) {
    operator delete(v22);
  }
  if (v17) {
    dispatch_release(v17);
  }
  if (v16) {
    _Block_release(v16);
  }
}

void sub_1000262C0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20, char a21, char a22, void *a23, uint64_t a24, int a25, __int16 a26, char a27, char a28, char a29)
{
  if (a2) {
    sub_100006EEC(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_100026388(uint64_t a1, uint64_t a2, xpc_object_t xdict, const std::string *a4, uint64_t a5)
{
  string = (char *)xpc_dictionary_get_string(xdict, "method");
  sub_10000AC00(&__str, string);
  std::string::size_type v11 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v11)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      std::string::size_type v12 = a4;
      *(_DWORD *)std::string buf = 136315394;
      dispatch_object_t v34 = string;
      __int16 v35 = 2080;
      BOOL v36 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_INFO,  "WPANTUND_v1 Handling %s method handler for %s",  buf,  0x16u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  uunsigned int int64 = xpc_dictionary_get_uint64(xdict, "address");
  unsigned __int16 v14 = xpc_dictionary_get_uint64(xdict, "count");
  std::string::basic_string(&v21, a4);
  std::string::basic_string(&v20, &__str);
  std::string::basic_string(&v19, &__str);
  char v15 = *(void **)a5;
  if (*(void *)a5) {
    char v15 = _Block_copy(v15);
  }
  dispatch_object_t v16 = *(dispatch_object_s **)(a5 + 8);
  dispatch_object_t v17 = v15;
  dispatch_object_t v18 = v16;
  if (v16) {
    dispatch_retain(v16);
  }
  sub_10001F8DC(&v21, (uint64_t)sub_10001E2A4, 0LL, a1, &v20, &v19, (uint64_t)&v17, &v22);
  sub_100031B30(v31, &v22);
  (*(void (**)(uint64_t, uint64_t, void, uint64_t (***)()))(*(void *)a2 + 328LL))( a2,  uint64,  v14,  v31);
  sub_100006E7C(v31);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v28 < 0) {
    operator delete(__p);
  }
  if (v26 < 0) {
    operator delete(v25);
  }
  if (v24 < 0) {
    operator delete(v23);
  }
  if (v18) {
    dispatch_release(v18);
  }
  if (v17) {
    _Block_release(v17);
  }
}

void sub_100026630( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20, char a21, char a22, void *a23, uint64_t a24, int a25, __int16 a26, char a27, char a28, char a29)
{
  if (a2) {
    sub_100006EEC(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_1000266E4(int a1, uint64_t a2, xpc_object_t xdict, uint64_t **a4, uint64_t a5)
{
  string = (char *)xpc_dictionary_get_string(xdict, "method");
  sub_10000AC00(v25, string);
  uint64_t v10 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v10)
  {
    if (sub_10015A058(6) && os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)std::string buf = 136315394;
      *(void *)&uint8_t buf[4] = string;
      *(_WORD *)&_BYTE buf[12] = 2080;
      *(void *)&_BYTE buf[14] = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_INFO,  "WPANTUND_v1 Handling %s method handler for %s",  buf,  0x16u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  BOOL v11 = xpc_dictionary_get_BOOL(xdict, "active");
  BOOL v12 = xpc_dictionary_get_BOOL(xdict, "pending");
  BOOL v13 = xpc_dictionary_get_BOOL(xdict, "testcase");
  sub_10000AC00(&__p, "\n");
  if (v13)
  {
    uunsigned int int64 = xpc_dictionary_get_uint64(xdict, "test_id");
    (*(void (**)(uint64_t, uint64_t))(*(void *)a2 + 368LL))(a2, uint64);
    else {
      char v15 = off_1002AEA78[(int)uint64 - 1];
    }
    std::string::assign(&__p, v15);
    int v16 = 1;
  }

  else
  {
    int v16 = sub_1000FE12C(v11, v12, &__p);
  }

  if (*(void *)a5 && *(void *)(a5 + 8))
  {
    xpc_object_t v17 = xpc_dictionary_create(0LL, 0LL, 0LL);
    xpc_object_t v18 = v17;
    if (v26 >= 0) {
      std::string v19 = v25;
    }
    else {
      std::string v19 = (void **)v25[0];
    }
    xpc_dictionary_set_string(v17, "method", (const char *)v19);
    if (v16) {
      int64_t v20 = 0LL;
    }
    else {
      int64_t v20 = 17LL;
    }
    xpc_dictionary_set_int64(v18, "ret", v20);
    sub_100030134(buf, &__p);
    sub_10012C860(v18, (uint64_t *)buf);
    if (*(void *)buf) {
      (*(void (**)(void))(**(void **)buf + 8LL))(*(void *)buf);
    }
    if (!v18) {
      xpc_object_t v18 = xpc_null_create();
    }
    if (*(void *)a5) {
      std::string v21 = _Block_copy(*(const void **)a5);
    }
    else {
      std::string v21 = 0LL;
    }
    __int128 v22 = *(dispatch_queue_s **)(a5 + 8);
    *(void *)std::string buf = _NSConcreteStackBlock;
    *(void *)&uint8_t buf[8] = 1174405120LL;
    *(void *)&buf[16] = sub_100030090;
    char v28 = &unk_1002AE940;
    if (v21) {
      char v23 = _Block_copy(v21);
    }
    else {
      char v23 = 0LL;
    }
    int v31 = 0;
    aBlock = v23;
    xpc_object_t object = v18;
    if (v18) {
      xpc_retain(v18);
    }
    else {
      xpc_object_t object = xpc_null_create();
    }
    dispatch_async(v22, buf);
    xpc_release(object);
    xpc_object_t object = 0LL;
    if (aBlock) {
      _Block_release(aBlock);
    }
    if (v21) {
      _Block_release(v21);
    }
    xpc_release(v18);
  }

  if (v26 < 0) {
    operator delete(v25[0]);
  }
}

void sub_100026A44( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20, uint64_t a21)
{
  if (a2) {
    sub_100006EEC(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100026AE4(uint64_t a1, uint64_t a2, xpc_object_t xdict, const std::string *a4, uint64_t a5)
{
  v32[0] = 0LL;
  v32[1] = 0LL;
  int v31 = v32;
  string = (char *)xpc_dictionary_get_string(xdict, "method");
  sub_10000AC00(&__str, string);
  BOOL v11 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v11)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      BOOL v12 = a4;
      *(_DWORD *)std::string buf = 136315394;
      *(void *)&uint8_t buf[4] = string;
      __int16 v34 = 2080;
      __int16 v35 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_INFO,  "WPANTUND_v1 Handling %s method handler for %s",  buf,  0x16u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  BOOL v29 = xpc_dictionary_get_BOOL(xdict, "Joiner:ReturnImmediatelyOnStart");
  sub_10000AC00(buf, "Joiner:ReturnImmediatelyOnStart");
  BOOL v13 = sub_10000ED88(&v31, (__n128 *)buf);
  sub_100020B4C(v13, &v29);
  if (v36 < 0) {
    operator delete(*(void **)buf);
  }
  std::string::basic_string(&v20, a4);
  std::string::basic_string(&v19, &__str);
  unsigned __int16 v14 = *(void **)a5;
  if (*(void *)a5) {
    unsigned __int16 v14 = _Block_copy(v14);
  }
  char v15 = *(dispatch_object_s **)(a5 + 8);
  xpc_object_t v17 = v14;
  dispatch_object_t v18 = v15;
  if (v15) {
    dispatch_retain(v15);
  }
  sub_10001F308(&v20, (uint64_t)sub_10001CAAC, 0LL, a1, (uint64_t)xdict, &v19, (uint64_t)&v17, v21);
  sub_100030F0C(v28, v21);
  (*(void (**)(uint64_t, uint64_t **, uint64_t (***)()))(*(void *)a2 + 136LL))(a2, &v31, v28);
  sub_1000075F0(v28);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v25 < 0) {
    operator delete(__p);
  }
  if (v23 < 0) {
    operator delete(v22);
  }
  if (v18) {
    dispatch_release(v18);
  }
  if (v17) {
    _Block_release(v17);
  }
  return sub_10000D448((uint64_t)&v31);
}

void sub_100026D94( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20, __int16 a21, char a22, char a23, char a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, char a36)
{
}

uint64_t sub_100026E5C(uint64_t a1, uint64_t a2, xpc_object_t xdict, const std::string *a4, uint64_t a5)
{
  v51[0] = 0LL;
  v51[1] = 0LL;
  uint64_t v50 = v51;
  string = (char *)xpc_dictionary_get_string(xdict, "method");
  sub_10000AC00(&__str, string);
  BOOL v11 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v11)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      std::string::size_type v12 = (std::string::size_type)a4;
      LODWORD(buf.__r_.__value_.__l.__data_) = 136315394;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)string;
      WORD2(buf.__r_.__value_.__r.__words[1]) = 2080;
      *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_INFO,  "WPANTUND_v1 Handling %s method handler for %s",  (uint8_t *)&buf,  0x16u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  BOOL v13 = (char *)xpc_dictionary_get_string(xdict, "Joiner:PSKd");
  sub_10000AC00(&buf, v13);
  sub_10000AC00(&v48, "Joiner:PSKd");
  unsigned __int16 v14 = sub_10000ED88(&v50, (__n128 *)&v48);
  sub_1000200A0(v14, &buf);
  __p.n128_u8[0] = xpc_dictionary_get_BOOL(xdict, "Joiner:ReturnImmediatelyOnStart");
  sub_10000AC00(&v48, "Joiner:ReturnImmediatelyOnStart");
  char v15 = sub_10000ED88(&v50, (__n128 *)&v48);
  sub_100020B4C(v15, &__p);
  xpc_object_t value = xpc_dictionary_get_value(xdict, "Joiner:ProvisioningUrl");
  if (value)
  {
    string_ptr = (char *)xpc_string_get_string_ptr(value);
    sub_10000AC00(&v48, string_ptr);
    sub_10000AC00(&__p, "Joiner:ProvisioningUrl");
    dispatch_object_t v18 = sub_10000ED88(&v50, &__p);
    sub_1000200A0(v18, &v48);
    if (v47 < 0) {
      operator delete((void *)__p.n128_u64[0]);
    }
  }

  xpc_object_t v19 = xpc_dictionary_get_value(xdict, "Joiner:Vendor:Name");
  if (v19)
  {
    std::string v20 = (char *)xpc_string_get_string_ptr(v19);
    sub_10000AC00(&v48, v20);
    sub_10000AC00(&__p, "Joiner:Vendor:Name");
    std::string v21 = sub_10000ED88(&v50, &__p);
    sub_1000200A0(v21, &v48);
    if (v47 < 0) {
      operator delete((void *)__p.n128_u64[0]);
    }
  }

  xpc_object_t v22 = xpc_dictionary_get_value(xdict, "Joiner:Vendor:Model");
  if (v22)
  {
    char v23 = (char *)xpc_string_get_string_ptr(v22);
    sub_10000AC00(&v48, v23);
    sub_10000AC00(&__p, "Joiner:Vendor:Model");
    char v24 = sub_10000ED88(&v50, &__p);
    sub_1000200A0(v24, &v48);
    if (v47 < 0) {
      operator delete((void *)__p.n128_u64[0]);
    }
  }

  xpc_object_t v25 = xpc_dictionary_get_value(xdict, "Joiner:Vendor:SwVersion");
  if (v25)
  {
    char v26 = (char *)xpc_string_get_string_ptr(v25);
    sub_10000AC00(&v48, v26);
    sub_10000AC00(&__p, "Joiner:Vendor:SwVersion");
    char v27 = sub_10000ED88(&v50, &__p);
    sub_1000200A0(v27, &v48);
    if (v47 < 0) {
      operator delete((void *)__p.n128_u64[0]);
    }
  }

  xpc_object_t v28 = xpc_dictionary_get_value(xdict, "Joiner:Vendor:Data");
  if (v28)
  {
    BOOL v29 = (char *)xpc_string_get_string_ptr(v28);
    sub_10000AC00(&v48, v29);
    sub_10000AC00(&__p, "Joiner:Vendor:Data");
    char v30 = sub_10000ED88(&v50, &__p);
    sub_1000200A0(v30, &v48);
    if (v47 < 0) {
      operator delete((void *)__p.n128_u64[0]);
    }
  }

  std::string::basic_string(&v37, a4);
  std::string::basic_string(&v36, &__str);
  int v31 = *(void **)a5;
  if (*(void *)a5) {
    int v31 = _Block_copy(v31);
  }
  std::string v32 = *(dispatch_object_s **)(a5 + 8);
  __int16 v34 = v31;
  dispatch_object_t v35 = v32;
  if (v32) {
    dispatch_retain(v32);
  }
  sub_10001F308(&v37, (uint64_t)sub_10001CAAC, 0LL, a1, (uint64_t)xdict, &v36, (uint64_t)&v34, v38);
  sub_100030F0C(v45, v38);
  (*(void (**)(uint64_t, uint64_t, uint64_t **, uint64_t (***)()))(*(void *)a2 + 144LL))( a2,  1LL,  &v50,  v45);
  sub_1000075F0(v45);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v42 < 0) {
    operator delete(v41);
  }
  if (v40 < 0) {
    operator delete(v39);
  }
  if (v35) {
    dispatch_release(v35);
  }
  if (v34) {
    _Block_release(v34);
  }
  return sub_10000D448((uint64_t)&v50);
}

void sub_100027378( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, int a19, __int16 a20, char a21, char a22, char a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, char a35, uint64_t a36, uint64_t a37, uint64_t a38, void *a39, uint64_t a40, int a41, __int16 a42, char a43, char a44)
{
}

uint64_t sub_1000274B0(uint64_t a1, uint64_t a2, xpc_object_t xdict, const std::string *a4, uint64_t a5)
{
  v30[0] = 0LL;
  v30[1] = 0LL;
  BOOL v29 = v30;
  string = (char *)xpc_dictionary_get_string(xdict, "method");
  sub_10000AC00(&__str, string);
  BOOL v11 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v11)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      std::string::size_type v12 = a4;
      *(_DWORD *)std::string buf = 136315394;
      std::string v32 = string;
      __int16 v33 = 2080;
      __int16 v34 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_INFO,  "WPANTUND_v1 Handling %s method handler for %s",  buf,  0x16u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  std::string::basic_string(&v19, a4);
  std::string::basic_string(&v18, &__str);
  BOOL v13 = *(void **)a5;
  if (*(void *)a5) {
    BOOL v13 = _Block_copy(v13);
  }
  unsigned __int16 v14 = *(dispatch_object_s **)(a5 + 8);
  int v16 = v13;
  dispatch_object_t v17 = v14;
  if (v14) {
    dispatch_retain(v14);
  }
  sub_10001F308(&v19, (uint64_t)sub_10001CAAC, 0LL, a1, (uint64_t)xdict, &v18, (uint64_t)&v16, v20);
  sub_100030F0C(v27, v20);
  (*(void (**)(uint64_t, void, void **, uint64_t (***)()))(*(void *)a2 + 144LL))( a2,  0LL,  &v29,  v27);
  sub_1000075F0(v27);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v24 < 0) {
    operator delete(__p);
  }
  if (v22 < 0) {
    operator delete(v21);
  }
  if (v17) {
    dispatch_release(v17);
  }
  if (v16) {
    _Block_release(v16);
  }
  return sub_10000D448((uint64_t)&v29);
}

void sub_10002771C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20, char a21, char a22, char a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, char a35)
{
}

void sub_1000277C8(uint64_t a1, uint64_t a2, xpc_object_t xdict, const std::string *a4, uint64_t a5)
{
  size_t length = 0LL;
  string = (char *)xpc_dictionary_get_string(xdict, "method");
  sub_10000AC00(&__str, string);
  BOOL v11 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v11)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      std::string::size_type v12 = a4;
      *(_DWORD *)std::string buf = 136315394;
      std::string v36 = string;
      __int16 v37 = 2080;
      BOOL v38 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_INFO,  "WPANTUND_v1 Handling %s method handler for %s",  buf,  0x16u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  BOOL v13 = xpc_dictionary_get_string(xdict, "Joiner:PSKd");
  uunsigned int int64 = xpc_dictionary_get_uint64(xdict, "Joiner:Timeout");
  uint64_t data = xpc_dictionary_get_data(xdict, "Joiner:EUI64", &length);
  if (v13)
  {
    int v16 = data;
    if (data && length != 8)
    {
      dispatch_object_t v17 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v17)
      {
        goto LABEL_44;
      }

      if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        goto LABEL_44;
      }
LABEL_43:
      sub_1001FB53C();
      goto LABEL_44;
    }

    std::string::basic_string(&v24, a4);
    std::string::basic_string(&v23, &__str);
    std::string v19 = *(void **)a5;
    if (*(void *)a5) {
      std::string v19 = _Block_copy(v19);
    }
    std::string v20 = *(dispatch_object_s **)(a5 + 8);
    std::string v21 = v19;
    dispatch_object_t v22 = v20;
    if (v20) {
      dispatch_retain(v20);
    }
    sub_10001F308(&v24, (uint64_t)sub_10001CAAC, 0LL, a1, (uint64_t)xdict, &v23, (uint64_t)&v21, v25);
    sub_100030F0C(v32, v25);
    (*(void (**)(uint64_t, const void *, uint64_t, const char *, uint64_t (***)()))(*(void *)a2 + 152LL))( a2,  v16,  uint64,  v13,  v32);
    sub_1000075F0(v32);
    if (object) {
      dispatch_release(object);
    }
    if (aBlock) {
      _Block_release(aBlock);
    }
    if (v29 < 0) {
      operator delete(__p);
    }
    if (v27 < 0) {
      operator delete(v26);
    }
    if (v22) {
      dispatch_release(v22);
    }
    if (v21) {
      _Block_release(v21);
    }
  }

  else
  {
    std::string v18 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (!v18)
    {
      if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        goto LABEL_44;
      }
      goto LABEL_43;
    }
  }

void sub_100027B40( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20, char a21, char a22, char a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, char a35)
{
  if (a2) {
    sub_100006EEC(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_100027BE0(uint64_t a1, uint64_t a2, xpc_object_t xdict, const std::string *a4, uint64_t a5)
{
  size_t v33 = 0LL;
  string = (char *)xpc_dictionary_get_string(xdict, "method");
  sub_10000AC00(&__str, string);
  BOOL v11 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v11)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      std::string::size_type v12 = a4;
      *(_DWORD *)std::string buf = 136315394;
      __int16 v37 = string;
      __int16 v38 = 2080;
      size_t v39 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_INFO,  "WPANTUND_v1 Handling %s method handler for %s",  buf,  0x16u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  __int128 v34 = *(_OWORD *)xpc_dictionary_get_data(xdict, "destination", &length);
  uint64_t data = (unsigned __int8 *)xpc_dictionary_get_data(xdict, "metrics", &v33);
  uunsigned int int64 = xpc_dictionary_get_uint64(xdict, "series");
  if (length == 16)
  {
    unsigned __int8 v15 = uint64;
    uint64_t v16 = *data;
    std::string::basic_string(&v23, a4);
    std::string::basic_string(&v22, &__str);
    dispatch_object_t v17 = *(void **)a5;
    if (*(void *)a5) {
      dispatch_object_t v17 = _Block_copy(v17);
    }
    std::string v18 = *(dispatch_object_s **)(a5 + 8);
    std::string v20 = v17;
    dispatch_object_t v21 = v18;
    if (v18) {
      dispatch_retain(v18);
    }
    sub_10001F308(&v23, (uint64_t)sub_10001CAAC, 0LL, a1, (uint64_t)xdict, &v22, (uint64_t)&v20, v24);
    sub_100030F0C(v31, v24);
    (*(void (**)(uint64_t, __int128 *, void, uint64_t, uint64_t (***)()))(*(void *)a2 + 208LL))( a2,  &v34,  v15,  v16,  v31);
    sub_1000075F0(v31);
    if (object) {
      dispatch_release(object);
    }
    if (aBlock) {
      _Block_release(aBlock);
    }
    if (v28 < 0) {
      operator delete(__p);
    }
    if (v26 < 0) {
      operator delete(v25);
    }
    if (v21) {
      dispatch_release(v21);
    }
    if (v20) {
      _Block_release(v20);
    }
  }

  else
  {
    std::string v19 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v19)
    {
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }
  }

void sub_100027EF4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20, char a21, char a22, char a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, char a35)
{
  if (a2) {
    sub_100006EEC(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_100027F90(uint64_t a1, uint64_t a2, xpc_object_t xdict, const std::string *a4, uint64_t a5)
{
  string = (char *)xpc_dictionary_get_string(xdict, "method");
  sub_10000AC00(&__str, string);
  BOOL v11 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v11)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      std::string::size_type v12 = a4;
      *(_DWORD *)std::string buf = 136315394;
      __int128 v34 = string;
      __int16 v35 = 2080;
      std::string v36 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_INFO,  "WPANTUND_v1 Handling %s method handler for %s",  buf,  0x16u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  __int128 v31 = *(_OWORD *)xpc_dictionary_get_data(xdict, "destination", &length);
  if (length == 16)
  {
    uunsigned int int64 = xpc_dictionary_get_uint64(xdict, "series");
    unsigned __int8 v14 = xpc_dictionary_get_uint64(xdict, "length");
    std::string::basic_string(&v21, a4);
    std::string::basic_string(&v20, &__str);
    unsigned __int8 v15 = *(void **)a5;
    if (*(void *)a5) {
      unsigned __int8 v15 = _Block_copy(v15);
    }
    uint64_t v16 = *(dispatch_object_s **)(a5 + 8);
    std::string v18 = v15;
    dispatch_object_t v19 = v16;
    if (v16) {
      dispatch_retain(v16);
    }
    sub_10001F308(&v21, (uint64_t)sub_10001CAAC, 0LL, a1, (uint64_t)xdict, &v20, (uint64_t)&v18, v22);
    sub_100030F0C(v29, v22);
    (*(void (**)(uint64_t, __int128 *, void, void, uint64_t (***)()))(*(void *)a2 + 216LL))( a2,  &v31,  uint64,  v14,  v29);
    sub_1000075F0(v29);
    if (object) {
      dispatch_release(object);
    }
    if (aBlock) {
      _Block_release(aBlock);
    }
    if (v26 < 0) {
      operator delete(__p);
    }
    if (v24 < 0) {
      operator delete(v23);
    }
    if (v19) {
      dispatch_release(v19);
    }
    if (v18) {
      _Block_release(v18);
    }
  }

  else
  {
    dispatch_object_t v17 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v17)
    {
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }
  }

void sub_1000282A0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20, __int16 a21, char a22, char a23, char a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, char a36)
{
  if (a2) {
    sub_100006EEC(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_10002833C(uint64_t a1, uint64_t a2, xpc_object_t xdict, const std::string *a4, uint64_t a5)
{
  size_t v34 = 0LL;
  string = (char *)xpc_dictionary_get_string(xdict, "method");
  sub_10000AC00(&__str, string);
  BOOL v11 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v11)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      std::string::size_type v12 = a4;
      *(_DWORD *)std::string buf = 136315394;
      size_t v39 = string;
      __int16 v40 = 2080;
      __int16 v41 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_INFO,  "WPANTUND_v1 Handling %s method handler for %s",  buf,  0x16u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  __int128 v36 = *(_OWORD *)xpc_dictionary_get_data(xdict, "destination", &length);
  uint64_t data = (unsigned __int8 *)xpc_dictionary_get_data(xdict, "metrics", &v34);
  uunsigned int int64 = xpc_dictionary_get_uint64(xdict, "series");
  unsigned __int8 v15 = (unsigned __int8 *)xpc_dictionary_get_data(xdict, "frametypes", &v35);
  if (length == 16)
  {
    uint64_t v16 = *v15;
    uint64_t v17 = *data;
    std::string::basic_string(&v24, a4);
    std::string::basic_string(&v23, &__str);
    std::string v18 = *(void **)a5;
    if (*(void *)a5) {
      std::string v18 = _Block_copy(v18);
    }
    dispatch_object_t v19 = *(dispatch_object_s **)(a5 + 8);
    std::string v21 = v18;
    dispatch_object_t v22 = v19;
    if (v19) {
      dispatch_retain(v19);
    }
    sub_10001F308(&v24, (uint64_t)sub_10001CAAC, 0LL, a1, (uint64_t)xdict, &v23, (uint64_t)&v21, v25);
    sub_100030F0C(v32, v25);
    (*(void (**)(uint64_t, __int128 *, void, uint64_t, uint64_t, uint64_t (***)()))(*(void *)a2 + 224LL))( a2,  &v36,  uint64,  v16,  v17,  v32);
    sub_1000075F0(v32);
    if (object) {
      dispatch_release(object);
    }
    if (aBlock) {
      _Block_release(aBlock);
    }
    if (v29 < 0) {
      operator delete(__p);
    }
    if (v27 < 0) {
      operator delete(v26);
    }
    if (v22) {
      dispatch_release(v22);
    }
    if (v21) {
      _Block_release(v21);
    }
  }

  else
  {
    std::string v20 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v20)
    {
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }
  }

void sub_100028674( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20, __int16 a21, char a22, char a23, char a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, char a36)
{
  if (a2) {
    sub_100006EEC(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_100028710(uint64_t a1, uint64_t a2, xpc_object_t xdict, const std::string *a4, uint64_t a5)
{
  size_t v33 = 0LL;
  string = (char *)xpc_dictionary_get_string(xdict, "method");
  sub_10000AC00(&__str, string);
  BOOL v11 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v11)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      std::string::size_type v12 = a4;
      *(_DWORD *)std::string buf = 136315394;
      __int16 v37 = string;
      __int16 v38 = 2080;
      size_t v39 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_INFO,  "WPANTUND_v1 Handling %s method handler for %s",  buf,  0x16u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  __int128 v34 = *(_OWORD *)xpc_dictionary_get_data(xdict, "destination", &length);
  uint64_t data = (unsigned __int8 *)xpc_dictionary_get_data(xdict, "metrics", &v33);
  uunsigned int int64 = xpc_dictionary_get_uint64(xdict, "flags");
  if (length == 16)
  {
    unsigned __int8 v15 = uint64;
    uint64_t v16 = *data;
    std::string::basic_string(&v23, a4);
    std::string::basic_string(&v22, &__str);
    uint64_t v17 = *(void **)a5;
    if (*(void *)a5) {
      uint64_t v17 = _Block_copy(v17);
    }
    std::string v18 = *(dispatch_object_s **)(a5 + 8);
    std::string v20 = v17;
    dispatch_object_t v21 = v18;
    if (v18) {
      dispatch_retain(v18);
    }
    sub_10001F308(&v23, (uint64_t)sub_10001CAAC, 0LL, a1, (uint64_t)xdict, &v22, (uint64_t)&v20, v24);
    sub_100030F0C(v31, v24);
    (*(void (**)(uint64_t, __int128 *, void, uint64_t, uint64_t (***)()))(*(void *)a2 + 232LL))( a2,  &v34,  v15,  v16,  v31);
    sub_1000075F0(v31);
    if (object) {
      dispatch_release(object);
    }
    if (aBlock) {
      _Block_release(aBlock);
    }
    if (v28 < 0) {
      operator delete(__p);
    }
    if (v26 < 0) {
      operator delete(v25);
    }
    if (v21) {
      dispatch_release(v21);
    }
    if (v20) {
      _Block_release(v20);
    }
  }

  else
  {
    dispatch_object_t v19 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v19)
    {
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }
  }

void sub_100028A24( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20, char a21, char a22, char a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, char a35)
{
  if (a2) {
    sub_100006EEC(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_100028AC0(uint64_t a1, uint64_t a2, xpc_object_t xdict, const std::string *a4, uint64_t a5)
{
  size_t length = 0LL;
  string = (char *)xpc_dictionary_get_string(xdict, "method");
  sub_10000AC00(&__str, string);
  BOOL v11 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v11)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      std::string::size_type v12 = a4;
      *(_DWORD *)std::string buf = 136315394;
      size_t v33 = string;
      __int16 v34 = 2080;
      size_t v35 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_INFO,  "WPANTUND_v1 Handling %s method handler for %s",  buf,  0x16u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  uunsigned int int64 = xpc_dictionary_get_uint64(xdict, "Joiner:Timeout");
  uint64_t data = xpc_dictionary_get_data(xdict, "Joiner:EUI64", &length);
  if (!data || length == 8)
  {
    std::string::basic_string(&v21, a4);
    std::string::basic_string(&v20, &__str);
    uint64_t v16 = *(void **)a5;
    if (*(void *)a5) {
      uint64_t v16 = _Block_copy(v16);
    }
    uint64_t v17 = *(dispatch_object_s **)(a5 + 8);
    std::string v18 = v16;
    dispatch_object_t v19 = v17;
    if (v17) {
      dispatch_retain(v17);
    }
    sub_10001F308(&v21, (uint64_t)sub_10001CAAC, 0LL, a1, (uint64_t)xdict, &v20, (uint64_t)&v18, v22);
    sub_100030F0C(v29, v22);
    (*(void (**)(uint64_t, const void *, uint64_t, uint64_t (***)()))(*(void *)a2 + 160LL))( a2,  data,  uint64,  v29);
    sub_1000075F0(v29);
    if (object) {
      dispatch_release(object);
    }
    if (aBlock) {
      _Block_release(aBlock);
    }
    if (v26 < 0) {
      operator delete(__p);
    }
    if (v24 < 0) {
      operator delete(v23);
    }
    if (v19) {
      dispatch_release(v19);
    }
    if (v18) {
      _Block_release(v18);
    }
  }

  else
  {
    unsigned __int8 v15 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v15)
    {
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }
  }

void sub_100028DB4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20, char a21, char a22, char a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, char a35)
{
  if (a2) {
    sub_100006EEC(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_100028E50(uint64_t a1, uint64_t a2, xpc_object_t xdict, const std::string *a4, uint64_t a5)
{
  string = (char *)xpc_dictionary_get_string(xdict, "method");
  sub_10000AC00(&__str, string);
  BOOL v11 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v11)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      std::string::size_type v12 = a4;
      *(_DWORD *)std::string buf = 136315394;
      __int128 v36 = string;
      __int16 v37 = 2080;
      __int16 v38 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_INFO,  "WPANTUND_v1 Handling %s method handler for %s",  buf,  0x16u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  uunsigned int int64 = xpc_dictionary_get_uint64(xdict, "channel_mask");
  unsigned __int8 v14 = xpc_dictionary_get_uint64(xdict, "count");
  unsigned __int16 v15 = xpc_dictionary_get_uint64(xdict, "period");
  uint64_t data = (__int128 *)xpc_dictionary_get_data(xdict, "destination", &length);
  if (length == 16)
  {
    __int128 v33 = *data;
    std::string::basic_string(&v23, a4);
    std::string::basic_string(&v22, &__str);
    uint64_t v17 = *(void **)a5;
    if (*(void *)a5) {
      uint64_t v17 = _Block_copy(v17);
    }
    std::string v18 = *(dispatch_object_s **)(a5 + 8);
    std::string v20 = v17;
    dispatch_object_t v21 = v18;
    if (v18) {
      dispatch_retain(v18);
    }
    sub_10001F308(&v23, (uint64_t)sub_10001CAAC, 0LL, a1, (uint64_t)xdict, &v22, (uint64_t)&v20, v24);
    sub_100030F0C(v31, v24);
    (*(void (**)(uint64_t, uint64_t, void, void, __int128 *, uint64_t (***)()))(*(void *)a2 + 168LL))( a2,  uint64,  v14,  v15,  &v33,  v31);
    sub_1000075F0(v31);
    if (object) {
      dispatch_release(object);
    }
    if (aBlock) {
      _Block_release(aBlock);
    }
    if (v28 < 0) {
      operator delete(__p);
    }
    if (v26 < 0) {
      operator delete(v25);
    }
    if (v21) {
      dispatch_release(v21);
    }
    if (v20) {
      _Block_release(v20);
    }
  }

  else
  {
    dispatch_object_t v19 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v19)
    {
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }
  }

void sub_100029178( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20, __int16 a21, char a22, char a23, char a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, char a36)
{
  if (a2) {
    sub_100006EEC(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_100029214(uint64_t a1, uint64_t a2, xpc_object_t xdict, const std::string *a4, uint64_t a5)
{
  string = (char *)xpc_dictionary_get_string(xdict, "method");
  sub_10000AC00(&__str, string);
  BOOL v11 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v11)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      std::string::size_type v12 = a4;
      *(_DWORD *)std::string buf = 136315394;
      __int16 v37 = string;
      __int16 v38 = 2080;
      size_t v39 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_INFO,  "WPANTUND_v1 Handling %s method handler for %s",  buf,  0x16u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  uunsigned int int64 = xpc_dictionary_get_uint64(xdict, "channel_mask");
  unsigned __int8 v14 = xpc_dictionary_get_uint64(xdict, "count");
  unsigned __int16 v15 = xpc_dictionary_get_uint64(xdict, "period");
  unsigned __int16 v16 = xpc_dictionary_get_uint64(xdict, "duration");
  uint64_t data = (__int128 *)xpc_dictionary_get_data(xdict, "destination", &length);
  if (length == 16)
  {
    __int128 v34 = *data;
    std::string::basic_string(&v24, a4);
    std::string::basic_string(&v23, &__str);
    std::string v18 = *(void **)a5;
    if (*(void *)a5) {
      std::string v18 = _Block_copy(v18);
    }
    dispatch_object_t v19 = *(dispatch_object_s **)(a5 + 8);
    dispatch_object_t v21 = v18;
    dispatch_object_t v22 = v19;
    if (v19) {
      dispatch_retain(v19);
    }
    sub_10001F308(&v24, (uint64_t)sub_10001CAAC, 0LL, a1, (uint64_t)xdict, &v23, (uint64_t)&v21, v25);
    sub_100030F0C(v32, v25);
    (*(void (**)(uint64_t, uint64_t, void, void, void, __int128 *, uint64_t (***)()))(*(void *)a2 + 176LL))( a2,  uint64,  v14,  v15,  v16,  &v34,  v32);
    sub_1000075F0(v32);
    if (object) {
      dispatch_release(object);
    }
    if (aBlock) {
      _Block_release(aBlock);
    }
    if (v29 < 0) {
      operator delete(__p);
    }
    if (v27 < 0) {
      operator delete(v26);
    }
    if (v22) {
      dispatch_release(v22);
    }
    if (v21) {
      _Block_release(v21);
    }
  }

  else
  {
    std::string v20 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v20)
    {
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }
  }

void sub_100029554( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20, __int16 a21, char a22, char a23, char a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, char a36)
{
  if (a2) {
    sub_100006EEC(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_1000295F0(uint64_t a1, uint64_t a2, xpc_object_t xdict, const std::string *a4, uint64_t a5)
{
  string = (char *)xpc_dictionary_get_string(xdict, "method");
  sub_10000AC00(&__str, string);
  BOOL v11 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v11)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      std::string::size_type v12 = a4;
      *(_DWORD *)std::string buf = 136315394;
      __int16 v37 = string;
      __int16 v38 = 2080;
      size_t v39 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_INFO,  "WPANTUND_v1 Handling %s method handler for %s",  buf,  0x16u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  uint64_t data = (__int128 *)xpc_dictionary_get_data(xdict, "destination", &length);
  if (length == 16)
  {
    __int128 v34 = *data;
    unsigned __int8 v14 = xpc_dictionary_get_data(xdict, "tlv", &v33);
    if (v14)
    {
      unsigned __int8 v15 = v33;
      memcpy(__dst, v14, v33);
      std::string::basic_string(&v23, a4);
      std::string::basic_string(&v22, &__str);
      unsigned __int16 v16 = *(void **)a5;
      if (*(void *)a5) {
        unsigned __int16 v16 = _Block_copy(v16);
      }
      uint64_t v17 = *(dispatch_object_s **)(a5 + 8);
      std::string v20 = v16;
      dispatch_object_t v21 = v17;
      if (v17) {
        dispatch_retain(v17);
      }
      sub_10001F308(&v23, (uint64_t)sub_10001CAAC, 0LL, a1, (uint64_t)xdict, &v22, (uint64_t)&v20, v24);
      sub_10003317C(v31, v24);
      (*(void (**)(uint64_t, __int128 *, _BYTE *, void, uint64_t (***)()))(*(void *)a2 + 192LL))( a2,  &v34,  __dst,  v15,  v31);
      sub_100006E7C(v31);
      if (object) {
        dispatch_release(object);
      }
      if (aBlock) {
        _Block_release(aBlock);
      }
      if (v28 < 0) {
        operator delete(__p);
      }
      if (v26 < 0) {
        operator delete(v25);
      }
      if (v21) {
        dispatch_release(v21);
      }
      if (v20) {
        _Block_release(v20);
      }
      goto LABEL_43;
    }

    dispatch_object_t v19 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v19)
    {
      goto LABEL_43;
    }

    if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      goto LABEL_43;
    }
LABEL_42:
    sub_1001FB53C();
    goto LABEL_43;
  }

  std::string v18 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (!v18)
  {
    if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      goto LABEL_43;
    }
    goto LABEL_42;
  }

void sub_100029960( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20, char a21, char a22, char a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, char a35)
{
  if (a2) {
    sub_100006EEC(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_100029A00(uint64_t a1, uint64_t a2, xpc_object_t xdict, const std::string *a4, uint64_t a5)
{
  string = (char *)xpc_dictionary_get_string(xdict, "method");
  sub_10000AC00(&__str, string);
  BOOL v11 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v11)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      std::string::size_type v12 = a4;
      *(_DWORD *)std::string buf = 136315394;
      size_t v35 = string;
      __int16 v36 = 2080;
      __int16 v37 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_INFO,  "WPANTUND_v1 Handling %s method handler for %s",  buf,  0x16u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  uunsigned int int64 = xpc_dictionary_get_uint64(xdict, "channel_mask");
  unsigned __int16 v14 = xpc_dictionary_get_uint64(xdict, "panid");
  uint64_t data = (__int128 *)xpc_dictionary_get_data(xdict, "destination", &length);
  if (length == 16)
  {
    __int128 v32 = *data;
    std::string::basic_string(&v22, a4);
    std::string::basic_string(&v21, &__str);
    unsigned __int16 v16 = *(void **)a5;
    if (*(void *)a5) {
      unsigned __int16 v16 = _Block_copy(v16);
    }
    uint64_t v17 = *(dispatch_object_s **)(a5 + 8);
    dispatch_object_t v19 = v16;
    dispatch_object_t v20 = v17;
    if (v17) {
      dispatch_retain(v17);
    }
    sub_10001F308(&v22, (uint64_t)sub_10001CAAC, 0LL, a1, (uint64_t)xdict, &v21, (uint64_t)&v19, v23);
    sub_100030F0C(v30, v23);
    (*(void (**)(uint64_t, void, uint64_t, __int128 *, uint64_t (***)()))(*(void *)a2 + 184LL))( a2,  v14,  uint64,  &v32,  v30);
    sub_1000075F0(v30);
    if (object) {
      dispatch_release(object);
    }
    if (aBlock) {
      _Block_release(aBlock);
    }
    if (v27 < 0) {
      operator delete(__p);
    }
    if (v25 < 0) {
      operator delete(v24);
    }
    if (v20) {
      dispatch_release(v20);
    }
    if (v19) {
      _Block_release(v19);
    }
  }

  else
  {
    std::string v18 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v18)
    {
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }
  }

void sub_100029D10( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20, __int16 a21, char a22, char a23, char a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, char a36)
{
  if (a2) {
    sub_100006EEC(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_100029DAC(uint64_t a1, uint64_t a2, xpc_object_t xdict, const std::string *a4, uint64_t a5)
{
  string = (char *)xpc_dictionary_get_string(xdict, "method");
  sub_10000AC00(&__str, string);
  BOOL v11 = xpc_dictionary_get_string(xdict, "property_name");
  std::string::assign(&v41, v11);
  std::string::size_type v12 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v12)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
    {
      BOOL v13 = a4;
      *(_DWORD *)std::string buf = 136315394;
      *(void *)&uint8_t buf[4] = string;
      __int16 v44 = 2080;
      std::string v45 = (const char *)v13;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_INFO,  "WPANTUND_v1 Handling %s method handler for %s",  buf,  0x16u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  unsigned __int16 v14 = xpc_dictionary_get_string(xdict, "pass_phrase");
  unsigned __int8 v15 = xpc_dictionary_get_string(xdict, "network_name");
  uint64_t data = (uint64_t *)xpc_dictionary_get_data(xdict, "xpanid", &length);
  sub_100018E5C(v39, data, (uint64_t)data + length);
  uint64_t v17 = sub_100033680(buf, (uint64_t)v39);
  sub_100147B4C(v17, &__p);
  if (*(void *)buf) {
    (*(void (**)(void))(**(void **)buf + 8LL))(*(void *)buf);
  }
  std::string v18 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v18)
  {
    if (sub_10015A058(6) && os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
    {
      p_p = &__p;
      if ((__p.__r_.__value_.__s.__size_ & 0x80u) != 0) {
        p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      *(_DWORD *)std::string buf = 136315650;
      *(void *)&uint8_t buf[4] = v14;
      __int16 v44 = 2080;
      std::string v45 = v15;
      __int16 v46 = 2080;
      char v47 = p_p;
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_INFO, "pp = %s, nn = %s, xpanid = 0x%s", buf, 0x20u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  *(void *)std::string buf = v39;
  sub_100006F6C((void ***)buf);
  if (length == 8)
  {
    uint64_t v48 = *data;
    std::string::basic_string(&v27, a4);
    std::string::basic_string(&v26, &__str);
    std::string::basic_string(&v25, &v41);
    dispatch_object_t v20 = *(void **)a5;
    if (*(void *)a5) {
      dispatch_object_t v20 = _Block_copy(v20);
    }
    std::string v21 = *(dispatch_object_s **)(a5 + 8);
    std::string v23 = v20;
    dispatch_object_t v24 = v21;
    if (v21) {
      dispatch_retain(v21);
    }
    sub_10001F8DC(&v27, (uint64_t)sub_10001E2A4, 0LL, a1, &v26, &v25, (uint64_t)&v23, &v28);
    sub_100031B30(v37, &v28);
    (*(void (**)(uint64_t, const char *, const char *, uint64_t *, uint64_t (***)()))(*(void *)a2 + 200LL))( a2,  v14,  v15,  &v48,  v37);
    sub_100006E7C(v37);
    if (object) {
      dispatch_release(object);
    }
    if (aBlock) {
      _Block_release(aBlock);
    }
    if (v34 < 0) {
      operator delete(v33);
    }
    if (v32 < 0) {
      operator delete(v31);
    }
    if (v30 < 0) {
      operator delete(v29);
    }
    if (v24) {
      dispatch_release(v24);
    }
    if (v23) {
      _Block_release(v23);
    }
  }

  else
  {
    std::string v22 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v22)
    {
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }
  }

void sub_10002A234( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20, char a21, char a22, void *a23, uint64_t a24, int a25, __int16 a26, char a27, char a28, char a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, char a43, uint64_t a44, uint64_t a45, uint64_t a46, void *a47, uint64_t a48, int a49, __int16 a50,char a51,char a52)
{
  if (a2) {
    sub_100006EEC(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_10002A354(uint64_t a1, uint64_t a2, xpc_object_t xdict, const std::string *a4, uint64_t a5)
{
  string = (char *)xpc_dictionary_get_string(xdict, "method");
  sub_10000AC00(&__str, string);
  BOOL v11 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v11)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      std::string::size_type v12 = a4;
      *(_DWORD *)std::string buf = 136315394;
      char v29 = string;
      __int16 v30 = 2080;
      __int128 v31 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_INFO,  "WPANTUND_v1 Handling %s method handler for %s",  buf,  0x16u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  std::string::basic_string(&v18, a4);
  std::string::basic_string(&v17, &__str);
  BOOL v13 = *(void **)a5;
  if (*(void *)a5) {
    BOOL v13 = _Block_copy(v13);
  }
  unsigned __int16 v14 = *(dispatch_object_s **)(a5 + 8);
  unsigned __int8 v15 = v13;
  dispatch_object_t v16 = v14;
  if (v14) {
    dispatch_retain(v14);
  }
  sub_10001F308(&v18, (uint64_t)sub_10001CAAC, 0LL, a1, (uint64_t)xdict, &v17, (uint64_t)&v15, v19);
  sub_100030F0C(v26, v19);
  (*(void (**)(uint64_t, uint64_t (***)()))(*(void *)a2 + 272LL))(a2, v26);
  sub_1000075F0(v26);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v23 < 0) {
    operator delete(__p);
  }
  if (v21 < 0) {
    operator delete(v20);
  }
  if (v16) {
    dispatch_release(v16);
  }
  if (v15) {
    _Block_release(v15);
  }
}

void sub_10002A5A0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20, __int16 a21, char a22, char a23, char a24)
{
  if (a2) {
    sub_100006EEC(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_10002A638(uint64_t a1, uint64_t a2, xpc_object_t xdict, const std::string *a4, uint64_t a5)
{
  string = (char *)xpc_dictionary_get_string(xdict, "method");
  sub_10000AC00(&__str, string);
  BOOL v11 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v11)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      std::string::size_type v12 = a4;
      *(_DWORD *)std::string buf = 136315394;
      char v29 = string;
      __int16 v30 = 2080;
      __int128 v31 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_INFO,  "WPANTUND_v1 Handling %s method handler for %s",  buf,  0x16u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  std::string::basic_string(&v18, a4);
  std::string::basic_string(&v17, &__str);
  BOOL v13 = *(void **)a5;
  if (*(void *)a5) {
    BOOL v13 = _Block_copy(v13);
  }
  unsigned __int16 v14 = *(dispatch_object_s **)(a5 + 8);
  unsigned __int8 v15 = v13;
  dispatch_object_t v16 = v14;
  if (v14) {
    dispatch_retain(v14);
  }
  sub_10001F308(&v18, (uint64_t)sub_10001CAAC, 0LL, a1, (uint64_t)xdict, &v17, (uint64_t)&v15, v19);
  sub_100030F0C(v26, v19);
  (*(void (**)(uint64_t, uint64_t (***)()))(*(void *)a2 + 272LL))(a2, v26);
  sub_1000075F0(v26);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v23 < 0) {
    operator delete(__p);
  }
  if (v21 < 0) {
    operator delete(v20);
  }
  if (v16) {
    dispatch_release(v16);
  }
  if (v15) {
    _Block_release(v15);
  }
}

void sub_10002A884( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20, __int16 a21, char a22, char a23, char a24)
{
  if (a2) {
    sub_100006EEC(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_10002A91C(uint64_t a1, uint64_t a2, xpc_object_t xdict, const std::string *a4, uint64_t a5)
{
  string = (char *)xpc_dictionary_get_string(xdict, "method");
  sub_10000AC00(&__str, string);
  BOOL v11 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v11)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      std::string::size_type v12 = a4;
      *(_DWORD *)std::string buf = 136315394;
      char v29 = string;
      __int16 v30 = 2080;
      __int128 v31 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_INFO,  "WPANTUND_v1 Handling %s method handler for %s",  buf,  0x16u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  std::string::basic_string(&v18, a4);
  std::string::basic_string(&v17, &__str);
  BOOL v13 = *(void **)a5;
  if (*(void *)a5) {
    BOOL v13 = _Block_copy(v13);
  }
  unsigned __int16 v14 = *(dispatch_object_s **)(a5 + 8);
  unsigned __int8 v15 = v13;
  dispatch_object_t v16 = v14;
  if (v14) {
    dispatch_retain(v14);
  }
  sub_10001F308(&v18, (uint64_t)sub_10001CAAC, 0LL, a1, (uint64_t)xdict, &v17, (uint64_t)&v15, v19);
  sub_100030F0C(v26, v19);
  (*(void (**)(uint64_t, uint64_t (***)()))(*(void *)a2 + 288LL))(a2, v26);
  sub_1000075F0(v26);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v23 < 0) {
    operator delete(__p);
  }
  if (v21 < 0) {
    operator delete(v20);
  }
  if (v16) {
    dispatch_release(v16);
  }
  if (v15) {
    _Block_release(v15);
  }
}

void sub_10002AB68( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20, __int16 a21, char a22, char a23, char a24)
{
  if (a2) {
    sub_100006EEC(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_10002AC00(uint64_t a1, uint64_t a2, xpc_object_t xdict, const std::string *a4, uint64_t a5)
{
  string = (char *)xpc_dictionary_get_string(xdict, "method");
  sub_10000AC00(&__str, string);
  BOOL v11 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v11)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      std::string::size_type v12 = a4;
      *(_DWORD *)std::string buf = 136315394;
      char v32 = string;
      __int16 v33 = 2080;
      char v34 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_INFO,  "WPANTUND_v1 Handling %s method handler for %s",  buf,  0x16u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  uunsigned int int64 = xpc_dictionary_get_uint64(xdict, "delay");
  uint64_t v14 = xpc_dictionary_get_uint64(xdict, "timeout");
  unsigned __int8 v15 = xpc_dictionary_get_uint64(xdict, "seqno");
  std::string::basic_string(&v21, a4);
  std::string::basic_string(&v20, &__str);
  dispatch_object_t v16 = *(void **)a5;
  if (*(void *)a5) {
    dispatch_object_t v16 = _Block_copy(v16);
  }
  std::string v17 = *(dispatch_object_s **)(a5 + 8);
  std::string v18 = v16;
  dispatch_object_t v19 = v17;
  if (v17) {
    dispatch_retain(v17);
  }
  sub_10001F308(&v21, (uint64_t)sub_10001CAAC, 0LL, a1, (uint64_t)xdict, &v20, (uint64_t)&v18, v22);
  sub_100030F0C(v29, v22);
  (*(void (**)(uint64_t, void, uint64_t, void, uint64_t (***)()))(*(void *)a2 + 296LL))( a2,  uint64,  v14,  v15,  v29);
  sub_1000075F0(v29);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v26 < 0) {
    operator delete(__p);
  }
  if (v24 < 0) {
    operator delete(v23);
  }
  if (v19) {
    dispatch_release(v19);
  }
  if (v18) {
    _Block_release(v18);
  }
}

void sub_10002AE9C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20, __int16 a21, char a22, char a23, char a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, char a36)
{
  if (a2) {
    sub_100006EEC(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_10002AF34(uint64_t a1, uint64_t a2, xpc_object_t xdict, const std::string *a4, uint64_t a5)
{
  uint64_t v40 = 0LL;
  std::string v41 = 0LL;
  unint64_t v42 = 0LL;
  string = (char *)xpc_dictionary_get_string(xdict, "method");
  sub_10000AC00(&__str, string);
  BOOL v11 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v11)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      std::string::size_type v12 = a4;
      *(_DWORD *)std::string buf = 136315394;
      *(void *)&uint8_t buf[4] = string;
      *(_WORD *)&_BYTE buf[12] = 2080;
      *(void *)&_BYTE buf[14] = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_INFO,  "WPANTUND_v1 Handling %s method handler for %s",  buf,  0x16u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  BOOL v25 = xpc_dictionary_get_BOOL(xdict, "mlr_timeout_present");
  uunsigned int int64 = xpc_dictionary_get_uint64(xdict, "mlr_timeout");
  uint64_t v14 = a2;
  uint64_t v15 = a1;
  size_t length = 0LL;
  uint64_t data = (char *)xpc_dictionary_get_data(xdict, "addresses", &length);
  size_t v17 = length >> 4;
  if ((length >> 4))
  {
    std::string v18 = data;
    int v19 = 0;
    int v20 = 0;
    std::string v21 = v41;
    do
    {
      std::string v22 = &v18[16 * v19];
      *(_OWORD *)std::string buf = *(_OWORD *)v22;
      else {
        *v21++ = *(_OWORD *)v22;
      }
      std::string v41 = v21;
      int v19 = ++v20;
    }

    while (v20 < v17);
  }

  std::string::basic_string(&v29, a4);
  std::string::basic_string(&v28, &__str);
  char v23 = *(void **)a5;
  if (*(void *)a5) {
    char v23 = _Block_copy(v23);
  }
  char v24 = *(dispatch_object_s **)(a5 + 8);
  char v26 = v23;
  dispatch_object_t v27 = v24;
  if (v24) {
    dispatch_retain(v24);
  }
  sub_10001F308(&v29, (uint64_t)sub_10001CAAC, 0LL, v15, (uint64_t)xdict, &v28, (uint64_t)&v26, v30);
  sub_100030F0C(v37, v30);
  (*(void (**)(uint64_t, uint64_t *, BOOL, uint64_t, uint64_t (***)()))(*(void *)v14 + 240LL))( v14,  &v40,  v25,  uint64,  v37);
  sub_1000075F0(v37);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v34 < 0) {
    operator delete(__p);
  }
  if (v32 < 0) {
    operator delete(v31);
  }
  if (v27) {
    dispatch_release(v27);
  }
  if (v26) {
    _Block_release(v26);
  }
  __str.__r_.__value_.__r.__words[0] = (std::string::size_type)&v40;
  sub_1000336E4((void ***)&__str);
}

void sub_10002B25C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20, __int16 a21, char a22, char a23, char a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, char a36)
{
}

void sub_10002B31C(uint64_t a1, uint64_t a2, const std::string *a3, xpc_object_t xdict, uint64_t a5)
{
  string = (char *)xpc_dictionary_get_string(xdict, "method");
  BOOL v11 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v11)
  {
    std::string::size_type v12 = v11;
    if (sub_10015A058(5) && os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
    {
      BOOL v13 = a3;
      *(_DWORD *)std::string buf = 136315394;
      *(void *)&uint8_t buf[4] = string;
      __int16 v21 = 2080;
      std::string v22 = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_INFO,  "WPANTUND_V1->MH: Inbound XPC message for method %s from %s",  buf,  0x16u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  sub_10000AC00(buf, string);
  uint64_t v14 = sub_100016DAC((uint64_t **)(a1 + 48), (__int128 *)buf);
  std::string::basic_string(&v19, a3);
  uint64_t v15 = *(void **)a5;
  if (*(void *)a5) {
    uint64_t v15 = _Block_copy(v15);
  }
  dispatch_object_t v16 = *(dispatch_object_s **)(a5 + 8);
  aBlock = v15;
  dispatch_object_t object = v16;
  if (v16) {
    dispatch_retain(v16);
  }
  sub_100018A34(v14, a2, (uint64_t)xdict, (__int128 *)&v19, (uint64_t)&aBlock);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v23 < 0) {
    operator delete(*(void **)buf);
  }
}

void sub_10002B4E4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20, __int16 a21, char a22, char a23)
{
  if (a2) {
    sub_100006EEC(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_10002B53C(uint64_t a1, const std::string *a2, void *a3, uint64_t a4)
{
  char v8 = std::string::append(&v21, "/");
  __int128 v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  buf.__r_.__value_.__l.__cap_ = v8->__r_.__value_.__l.__cap_;
  *(_OWORD *)&buf.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0LL;
  v8->__r_.__value_.__l.__cap_ = 0LL;
  v8->__r_.__value_.__r.__words[0] = 0LL;
  uint64_t v10 = sub_10000D650(&buf, (const std::string::value_type *)(a1 + 24));
  __int128 v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  int64_t cap = v10->__r_.__value_.__l.__cap_;
  *(_OWORD *)std::string __p = v11;
  v10->__r_.__value_.__l.__size_ = 0LL;
  v10->__r_.__value_.__l.__cap_ = 0LL;
  v10->__r_.__value_.__r.__words[0] = 0LL;
  std::string::size_type v12 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v12)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
    {
      BOOL v13 = __p;
      if (cap < 0) {
        BOOL v13 = (void **)__p[0];
      }
      std::string::size_type v14 = (std::string::size_type)a2;
      LODWORD(buf.__r_.__value_.__l.__data_) = 136315394;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v13;
      WORD2(buf.__r_.__value_.__r.__words[1]) = 2080;
      *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v14;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_INFO,  "WPANTUND_V1->XMH: Inbound XPC message for INTERFACE %s from %s",  (uint8_t *)&buf,  0x16u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  uint64_t v15 = *(void *)(a1 + 16);
  std::string::basic_string(&v20, a2);
  dispatch_object_t v16 = *(void **)a4;
  if (*(void *)a4) {
    dispatch_object_t v16 = _Block_copy(v16);
  }
  size_t v17 = *(dispatch_object_s **)(a4 + 8);
  aBlock = v16;
  dispatch_object_t object = v17;
  if (v17) {
    dispatch_retain(v17);
  }
  sub_10002B31C(a1, v15, &v20, a3, (uint64_t)&aBlock);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (SHIBYTE(cap) < 0) {
    operator delete(__p[0]);
  }
}

void sub_10002B75C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, int a19, __int16 a20, char a21, char a22, void *a23, uint64_t a24, int a25, __int16 a26, char a27, char a28)
{
  if (a2) {
    sub_100006EEC(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void *sub_10002B7E4(void *a1)
{
  return a1;
}

void *sub_10002B80C(void *a1)
{
  return a1;
}

void *sub_10002B834(void *a1)
{
  return a1;
}

uint64_t sub_10002B85C(uint64_t a1)
{
  uint64_t v2 = *(dispatch_object_s **)(a1 + 56);
  if (v2) {
    dispatch_release(v2);
  }
  uint64_t v3 = *(const void **)(a1 + 48);
  if (v3) {
    _Block_release(v3);
  }
  return a1;
}

uint64_t sub_10002B8A8(uint64_t a1)
{
  uint64_t v2 = *(dispatch_object_s **)(a1 + 72);
  if (v2) {
    dispatch_release(v2);
  }
  uint64_t v3 = *(const void **)(a1 + 64);
  if (v3) {
    _Block_release(v3);
  }
  return a1;
}

uint64_t sub_10002B904(uint64_t a1)
{
  return a1;
}

uint64_t sub_10002B944(uint64_t a1)
{
  uint64_t v2 = *(dispatch_object_s **)(a1 + 88);
  if (v2) {
    dispatch_release(v2);
  }
  uint64_t v3 = *(const void **)(a1 + 80);
  if (v3) {
    _Block_release(v3);
  }
  return a1;
}

uint64_t sub_10002B9B0(uint64_t a1)
{
  return a1;
}

uint64_t sub_10002B9F0(uint64_t a1)
{
  uint64_t v2 = *(dispatch_object_s **)(a1 + 96);
  if (v2) {
    dispatch_release(v2);
  }
  uint64_t v3 = *(const void **)(a1 + 88);
  if (v3) {
    _Block_release(v3);
  }
  return a1;
}

uint64_t sub_10002BA5C(uint64_t result, uint64_t a2, unsigned int a3)
{
  if (a3 == 4) {
    goto LABEL_2;
  }
  uint64_t v4 = result;
  if (a3 > 1)
  {
    if (a3 != 2)
    {
      if (a3 != 3)
      {
LABEL_2:
        *(_WORD *)(a2 + 8) = 0;
        return result;
      }

      uint64_t result = *(void *)(*(void *)a2 + 8LL) & 0x7FFFFFFFFFFFFFFFLL;
      if (result == ((unint64_t)"N5boost3_bi6bind_tIvNS_4_mfi3mf4IvN2nl8wpantund12XPCIPCAPI_v1EPNS5_19NCPControlI"
                                        "nterfaceEPvNSt3__112basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEEN8dis"
                                        "patch8callbackIU13block_pointerFvhN3xpc4dictEEEEEENS0_5list5INS0_5valueIPS6_EENS"
                                        "_3argILi1EEENST_ILi2EEENST_ILi3EEENST_ILi4EEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)
        || (uint64_t result = strcmp( (const char *)result,  (const char *)((unint64_t)"N5boost3_bi6bind_tIvNS_4_mfi3mf4IvN2nl8wpantund12XPCIPCAPI_v1EPN S5_19NCPControlInterfaceEPvNSt3__112basic_stringIcNSA_11char_tra itsIcEENSA_9allocatorIcEEEEN8dispatch8callbackIU13block_pointerF vhN3xpc4dictEEEEEENS0_5list5INS0_5valueIPS6_EENS_3argILi1EEENST_ ILi2EEENST_ILi3EEENST_ILi4EEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)),  !(_DWORD)result))
      {
        *(void *)a2 = v4;
      }

      else
      {
        *(void *)a2 = 0LL;
      }
    }
  }

  else
  {
    __int128 v5 = *(_OWORD *)result;
    *(void *)(a2 + 16) = *(void *)(result + 16);
    *(_OWORD *)a2 = v5;
  }

  return result;
}

void sub_10002BAF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = a3;
  uint64_t v6 = a2;
  sub_10002BB20(a1, (uint64_t)&v6, (uint64_t)&v5, a4, a5);
}

void sub_10002BB20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[0] = a2;
  v5[1] = a3;
  int v5[2] = a4;
  v5[3] = a5;
  sub_10002BB58((uint64_t *)(a1 + 16), a1, (uint64_t)v5);
}

void sub_10002BB58(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = **(void **)a3;
  uint64_t v6 = **(void **)(a3 + 8);
  uint64_t v7 = *(void *)(a3 + 16);
  std::string::size_type v8 = *(void *)(v7 + 16);
  *(_OWORD *)&__p.__r_.__value_.__l.__data_ = *(_OWORD *)v7;
  __p.__r_.__value_.__l.__cap_ = v8;
  *(void *)(v7 + 8) = 0LL;
  *(void *)(v7 + 16) = 0LL;
  *(void *)uint64_t v7 = 0LL;
  uint64_t v9 = *(void *)(a3 + 24);
  *(_OWORD *)dispatch_object_t object = *(_OWORD *)v9;
  *(void *)uint64_t v9 = 0LL;
  *(void *)(v9 + 8) = 0LL;
  sub_10002BC1C(a2, v4, v5, v6, &__p, (uint64_t)object);
  if (object[1]) {
    dispatch_release(object[1]);
  }
  if (object[0]) {
    _Block_release(object[0]);
  }
}

void sub_10002BBF8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_10002BC1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, std::string *__str, uint64_t a6)
{
  uint64_t v10 = *(void (**)(void *, uint64_t, uint64_t, std::string *, void **))a1;
  uint64_t v9 = *(void *)(a1 + 8);
  __int128 v11 = (void *)(a2 + (v9 >> 1));
  if ((v9 & 1) != 0) {
    uint64_t v10 = *(void (**)(void *, uint64_t, uint64_t, std::string *, void **))(*v11 + v10);
  }
  std::string::basic_string(&v16, __str);
  std::string::size_type v12 = *(void **)a6;
  if (*(void *)a6) {
    std::string::size_type v12 = _Block_copy(v12);
  }
  BOOL v13 = *(dispatch_object_s **)(a6 + 8);
  aBlock = v12;
  dispatch_object_t object = v13;
  if (v13) {
    dispatch_retain(v13);
  }
  v10(v11, a3, a4, &v16, &aBlock);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
}

void sub_10002BCE0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void *sub_10002BD04(void *a1, _OWORD *a2)
{
  *a1 = 0LL;
  a1[1] = 0LL;
  a1[2] = 0LL;
  a1[3] = 0LL;
  sub_10002BD58((uint64_t)a1, a2);
  return a1;
}

void sub_10002BD38( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10)
{
  a10 = (void **)v10;
  sub_10000EFEC(&a10);
  _Unwind_Resume(a1);
}

uint64_t *sub_10002BD58(uint64_t a1, _OWORD *a2)
{
  __int128 v2 = a2[1];
  v4[0] = *a2;
  v4[1] = v2;
  return sub_10002BD84((uint64_t *)(a1 + 24), v4);
}

uint64_t *sub_10002BD84(uint64_t *a1, _OWORD *a2)
{
  uint64_t v4 = operator new(0x20uLL);
  __int128 v5 = a2[1];
  *uint64_t v4 = *a2;
  v4[1] = v5;
  v7[0] = (uint64_t)off_1002AE338;
  v7[1] = (uint64_t)v4;
  sub_1000127C8(v7, a1);
  sub_10000EFC4(v7);
  return a1;
}

void sub_10002BDE0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_10002BDF4(_OWORD **a1, uint64_t a2, int a3)
{
  if (a3 == 4)
  {
    *(_WORD *)(a2 + 8) = 0;
  }

  else
  {
    sub_10002BE1C(a1, a2, a3);
  }

uint64_t sub_10002BE14(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_10002BEE8(*a1, a2, a3);
}

void sub_10002BE1C(_OWORD **a1, uint64_t a2, int a3)
{
  switch(a3)
  {
    case 0:
      __int128 v5 = *a1;
      uint64_t v6 = operator new(0x20uLL);
      __int128 v7 = v5[1];
      *uint64_t v6 = *v5;
      v6[1] = v7;
      *(void *)a2 = v6;
      break;
    case 1:
      *(void *)a2 = *a1;
      *a1 = 0LL;
      break;
    case 2:
      if (*(void *)a2) {
        operator delete(*(void **)a2);
      }
      goto LABEL_9;
    case 3:
      std::string::size_type v8 = (const char *)(*(void *)(*(void *)a2 + 8LL) & 0x7FFFFFFFFFFFFFFFLL);
      if (v8 == (const char *)((unint64_t)"N5boost3_bi6bind_tIvNS_4_mfi3mf3IvN2nl8wpantund12XPCIPCAPI_v1EPNS5_19N"
                                                  "CPControlInterfaceERKNSt3__112basic_stringIcNS9_11char_traitsIcEENS9_9"
                                                  "allocatorIcEEEERKNS_3anyEEENS0_5list4INS0_5valueIPS6_EENSN_IS8_EENS_3a"
                                                  "rgILi1EEENSR_ILi2EEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)
        || !strcmp( v8,  (const char *)((unint64_t)"N5boost3_bi6bind_tIvNS_4_mfi3mf3IvN2nl8wpantund12XPCIPCAPI_v1EPNS5_19NCPC ontrolInterfaceERKNSt3__112basic_stringIcNS9_11char_traitsIcEENS9_9alloca torIcEEEERKNS_3anyEEENS0_5list4INS0_5valueIPS6_EENSN_IS8_EENS_3argILi1EEENSR_ILi2EEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))
      {
        *(void *)a2 = *a1;
      }

      else
      {
LABEL_9:
        *(void *)a2 = 0LL;
      }

      break;
    default:
      *(_WORD *)(a2 + 8) = 0;
      break;
  }

uint64_t sub_10002BEE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[0] = a2;
  v4[1] = a3;
  return sub_10002BF1C((uint64_t *)(a1 + 16), a1, v4);
}

uint64_t sub_10002BF1C(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  return sub_10002BF34(a2, *a1, a1[1], *a3, a3[1]);
}

uint64_t sub_10002BF34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  __int128 v5 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))a1;
  uint64_t v6 = *(void *)(a1 + 8);
  __int128 v7 = (void *)(a2 + (v6 >> 1));
  if ((v6 & 1) != 0) {
    __int128 v5 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*v7 + v5);
  }
  return v5(v7, a3, a4, a5);
}

uint64_t sub_10002BF58(uint64_t *a1)
{
  uint64_t result = *a1;
  if (!result) {
    __assert_rtn("operator*", "shared_ptr.hpp", 780, "px != 0");
  }
  return result;
}

void *sub_10002BF98@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t *a4@<X8>)
{
  std::string::size_type v8 = (pthread_mutex_t *)sub_10000F72C(a1 + 3);
  sub_100010030(v10, v8);
  sub_10002C068(a1, v10, a2, a3, a4);
  sub_10000F788(&v11);
  return sub_10000F8D8(v10);
}

void sub_10002C044(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t *sub_10002C068@<X0>( uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t *a5@<X8>)
{
  LOBYTE(v21) = 0;
  if (a4)
  {
    int v20 = 0;
    std::string::size_type v8 = (uint64_t *)sub_10002C1D8(a1);
    uint64_t v9 = sub_10002D278(v8);
    sub_100010148(v9, &v20, &v22);
  }

  else
  {
    int v20 = 2;
    uint64_t v10 = (uint64_t *)sub_10002C1D8(a1);
    uint64_t v11 = sub_10002D278(v10);
    sub_1000100DC(v11, &v20, &v22);
  }

  uint64_t v12 = sub_10002C218(&v22);
  *(_DWORD *)(v12 + 64) = v20;
  uint64_t v13 = v22;
  *(void *)(v12 + 68) = v21;
  std::string::size_type v14 = v23;
  std::string v19 = v23;
  if (v23)
  {
    uint64_t v15 = v23 + 3;
    do
      unsigned int v16 = __ldxr(v15);
    while (__stxr(v16 + 1, v15));
    *a5 = v13;
    a5[1] = (uint64_t)v14;
    do
      unsigned int v17 = __ldxr(v15);
    while (__stxr(v17 + 1, v15));
  }

  else
  {
    *a5 = v13;
    a5[1] = 0LL;
  }

  sub_10000EF74(&v19);
  return sub_10000F9EC((uint64_t *)&v23);
}

void sub_10002C15C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
}

uint64_t *sub_10002C174@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  __int128 v7 = operator new(0x50uLL);
  sub_10002CC8C((uint64_t)v7, a3, a1 + 3);
  return sub_10002D158(a4, (uint64_t)v7);
}

void sub_10002C1C4(_Unwind_Exception *a1)
{
}

uint64_t sub_10002C1D8(uint64_t *a1)
{
  uint64_t result = *a1;
  if (!result) {
    __assert_rtn("operator->", "shared_ptr.hpp", 786, "px != 0");
  }
  return result;
}

uint64_t sub_10002C218(uint64_t *a1)
{
  uint64_t result = *a1;
  if (!result) {
    __assert_rtn("operator->", "shared_ptr.hpp", 786, "px != 0");
  }
  return result;
}

uint64_t *sub_10002C258(uint64_t *a1, void *a2)
{
  uint64_t v4 = a1[1];
  if (v4)
  {
    unsigned int v5 = atomic_load((unsigned int *)(v4 + 8));
    if (v5 == 1) {
      return sub_10002C4E8(a1, a2, 1LL, 2);
    }
  }

  __int128 v7 = (uint64_t *)operator new(0x20uLL);
  uint64_t v8 = sub_10002C3A0(a1);
  uint64_t v9 = (uint64_t *)sub_10002C1D8(a1);
  uint64_t v10 = sub_10002D278(v9);
  sub_10002C6B8(v7, v8, v10);
  sub_10002C344(a1, (uint64_t)v7, v11);
  uint64_t v12 = (uint64_t *)sub_10002C1D8(a1);
  uint64_t v13 = *(uint64_t **)(sub_10002D278(v12) + 8);
  return sub_10002C3E0(a1, a2, 1LL, &v13, 0);
}

void sub_10002C330(_Unwind_Exception *a1)
{
}

uint64_t *sub_10002C344(void *a1, uint64_t a2, uint64_t a3)
{
  if (a2 && *a1 == a2) {
    sub_1001FE52C((uint64_t)a1, a2, a3);
  }
  sub_10002C57C((uint64_t *)&v6, a2);
  __int128 v4 = *(_OWORD *)a1;
  *(_OWORD *)a1 = v6;
  __int128 v6 = v4;
  return sub_10000F9EC((uint64_t *)&v6 + 1);
}

uint64_t sub_10002C3A0(uint64_t *a1)
{
  uint64_t result = *a1;
  if (!result) {
    __assert_rtn("operator*", "shared_ptr.hpp", 780, "px != 0");
  }
  return result;
}

uint64_t *sub_10002C3E0(uint64_t *a1, void *a2, uint64_t a3, uint64_t **a4, int a5)
{
  uint64_t v5 = a1[1];
  int v8 = a3;
  uint64_t v21 = *a4;
  uint64_t v11 = (uint64_t *)sub_10002C1D8(a1);
  unsigned int v12 = 0;
  unsigned int v13 = a5 - 1;
  while (1)
  {
    uint64_t result = (uint64_t *)sub_10002D278(v11);
    uint64_t v15 = v21;
    if (v21 == result || v13 < v12)
    {
      a1[2] = (uint64_t)v21;
      return result;
    }

    if (v8)
    {
      unsigned int v17 = (uint64_t *)sub_10002C218(v21 + 2);
      sub_10002CB04(v17, a2);
      uint64_t v15 = v21;
    }

    if (*(_BYTE *)(sub_10002C218(v15 + 2) + 24))
    {
      uint64_t result = (uint64_t *)v21[1];
    }

    else
    {
      std::string v18 = (uint64_t *)sub_10002C1D8(a1);
      uint64_t v19 = sub_10002D278(v18);
      uint64_t v20 = sub_10002C218(v21 + 2);
      uint64_t result = (uint64_t *)sub_10002CB4C(v19, (void *)(v20 + 64), &v21);
    }

    uint64_t v21 = result;
    if (v12 == -1) {
      break;
    }
    uint64_t v11 = (uint64_t *)sub_10002C1D8(a1);
    ++v12;
  }

  __break(0x5500u);
  return result;
}

uint64_t *sub_10002C4E8(uint64_t *a1, void *a2, uint64_t a3, int a4)
{
  uint64_t v4 = a1[1];
  uint64_t v10 = (uint64_t *)sub_10002C1D8(a1);
  uint64_t v11 = sub_10002D278(v10);
  unsigned int v12 = (uint64_t *)a1[2];
  if (v12 == (uint64_t *)v11)
  {
    unsigned int v13 = (uint64_t *)sub_10002C1D8(a1);
    unsigned int v12 = *(uint64_t **)(sub_10002D278(v13) + 8);
  }

  uint64_t v15 = v12;
  return sub_10002C3E0(a1, a2, a3, &v15, a4);
}

uint64_t *sub_10002C57C(uint64_t *a1, uint64_t a2)
{
  *a1 = a2;
  a1[1] = 0LL;
  sub_10002C5E4(&v5, a2);
  uint64_t v3 = a1[1];
  a1[1] = v5;
  uint64_t v5 = v3;
  sub_10000F9EC(&v5);
  return a1;
}

void sub_10002C5D0(_Unwind_Exception *a1)
{
}

void *sub_10002C5E4(void *a1, uint64_t a2)
{
  *a1 = 0LL;
  uint64_t v4 = operator new(0x18uLL);
  v4[1] = 0x100000001LL;
  *uint64_t v4 = &off_1002AE368;
  uint64_t v4[2] = a2;
  *a1 = v4;
  return a1;
}

void sub_10002C630(void *a1)
{
}

void sub_10002C644(_Unwind_Exception *a1)
{
}

void sub_10002C660(uint64_t a1)
{
  uint64_t v1 = *(uint64_t **)(a1 + 16);
  if (v1)
  {
    sub_10000F9EC(v1 + 3);
    sub_10000F9EC(v1 + 1);
    operator delete(v1);
  }

uint64_t sub_10002C6A0()
{
  return 0LL;
}

uint64_t sub_10002C6A8()
{
  return 0LL;
}

uint64_t sub_10002C6B0()
{
  return 0LL;
}

uint64_t *sub_10002C6B8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v6 = operator new(0x40uLL);
  sub_10002C73C((uint64_t)v6, a3);
  sub_10002C990(a1, (uint64_t)v6);
  uint64_t v7 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v7;
  if (v7)
  {
    int v8 = (unsigned int *)(v7 + 8);
    do
      unsigned int v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }

  return a1;
}

void sub_10002C728(_Unwind_Exception *a1)
{
}

uint64_t sub_10002C73C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002C87C((uint64_t *)a1, a2);
  sub_10002C948((uint64_t)(v4 + 3), (uint64_t *)(a2 + 24));
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 24);
  uint64_t v11 = 0LL;
  uint64_t v11 = *(void *)(a2 + 24);
  while (v11 != a2 + 32)
  {
    if (v10 == a1 + 32) {
      __assert_rtn("grouped_list", "slot_groups.hpp", 80, "this_map_it != _group_map.end()");
    }
    *(void *)(v10 + 48) = v5;
    uint64_t v6 = sub_100010820(a2, (uint64_t)&v11);
    uint64_t v9 = v11;
    sub_10000B338((uint64_t)&v9);
    uint64_t v7 = sub_100010820(a2, (uint64_t)&v9);
    while (v6 != v7)
    {
      uint64_t v6 = *(void *)(v6 + 8);
      uint64_t v5 = *(void *)(v5 + 8);
    }

    sub_10000B338((uint64_t)&v11);
    sub_10000B338((uint64_t)&v10);
  }

  return a1;
}

void sub_10002C850(_Unwind_Exception *a1)
{
}

uint64_t *sub_10002C87C(uint64_t *a1, uint64_t a2)
{
  *a1 = (uint64_t)a1;
  a1[1] = (uint64_t)a1;
  a1[2] = 0LL;
  for (uint64_t i = *(void *)(a2 + 8); i != a2; uint64_t i = *(void *)(i + 8))
    sub_1000108A4(a1, (void *)(i + 16));
  return a1;
}

void sub_10002C8D4(_Unwind_Exception *a1)
{
}

void sub_10002C8E8(uint64_t *a1)
{
  if (a1[2])
  {
    uint64_t v3 = *a1;
    uint64_t v2 = (uint64_t *)a1[1];
    uint64_t v4 = *v2;
    *(void *)(v4 + 8) = *(void *)(*a1 + 8);
    **(void **)(v3 + 8) = v4;
    a1[2] = 0LL;
    while (v2 != a1)
    {
      uint64_t v5 = (uint64_t *)v2[1];
      sub_100010A14((uint64_t)a1, v2);
      uint64_t v2 = v5;
    }
  }

uint64_t sub_10002C948(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_100010AEC(a1, (uint64_t)a2);
  sub_100010A84(v4, *a2, (uint64_t)(a2 + 1));
  return a1;
}

void sub_10002C97C(_Unwind_Exception *a1)
{
}

uint64_t *sub_10002C990(uint64_t *a1, uint64_t a2)
{
  *a1 = a2;
  a1[1] = 0LL;
  sub_10002C9F8(&v5, a2);
  uint64_t v3 = a1[1];
  a1[1] = v5;
  uint64_t v5 = v3;
  sub_10000F9EC(&v5);
  return a1;
}

void sub_10002C9E4(_Unwind_Exception *a1)
{
}

void *sub_10002C9F8(void *a1, uint64_t a2)
{
  *a1 = 0LL;
  uint64_t v4 = operator new(0x18uLL);
  v4[1] = 0x100000001LL;
  *uint64_t v4 = &off_1002AE3C8;
  uint64_t v4[2] = a2;
  *a1 = v4;
  return a1;
}

void sub_10002CA44(void *a1)
{
}

void sub_10002CA58(_Unwind_Exception *a1)
{
}

void sub_10002CA6C(uint64_t *a1)
{
  if (a1)
  {
    sub_10000D0D4((uint64_t)(a1 + 3));
    sub_10002C8E8(a1);
    operator delete(a1);
  }

void sub_10002CAAC(uint64_t a1)
{
  uint64_t v1 = *(uint64_t **)(a1 + 16);
  if (v1)
  {
    sub_10000D0D4((uint64_t)(v1 + 3));
    sub_10002C8E8(v1);
    operator delete(v1);
  }

uint64_t sub_10002CAEC()
{
  return 0LL;
}

uint64_t sub_10002CAF4()
{
  return 0LL;
}

uint64_t sub_10002CAFC()
{
  return 0LL;
}

uint64_t *sub_10002CB04(uint64_t *a1, void *a2)
{
  uint64_t v4 = a1[4];
  uint64_t result = a1 + 4;
  if (v4)
  {
    uint64_t v6 = (uint64_t *)sub_10002CC18(result);
    uint64_t result = (uint64_t *)sub_1000110BC(v6);
    if ((_DWORD)result) {
      return sub_100011120(a1, a2);
    }
  }

  return result;
}

uint64_t sub_10002CB4C(uint64_t a1, void *a2, uint64_t **a3)
{
  uint64_t v6 = (uint64_t **)(a1 + 24);
  uint64_t v7 = sub_100011390(a1 + 24, (uint64_t)a2);
  uint64_t v10 = v7;
  BOOL v11 = sub_100011288(a1, (uint64_t)(v7 + 4), (uint64_t)a2);
  if (!v11) {
    sub_1001FE5E0(v11, v12, v13);
  }
  uint64_t v14 = v10[6];
  uint64_t v15 = *a3;
  if ((uint64_t *)v14 == *a3)
  {
    uint64_t v16 = *(void *)(v14 + 8);
    else {
      *sub_10002CC58(v6, a2) = v16;
    }
    uint64_t v15 = *a3;
  }

  return sub_10001134C(a1, v15);
}

uint64_t sub_10002CC18(uint64_t *a1)
{
  uint64_t result = *a1;
  if (!result) {
    __assert_rtn("operator*", "shared_ptr.hpp", 780, "px != 0");
  }
  return result;
}

void *sub_10002CC58(uint64_t **a1, void *a2)
{
  uint64_t v3 = a2;
  return sub_100011468(a1, (uint64_t)a2, (uint64_t)&unk_10022324F, &v3) + 6;
}

uint64_t sub_10002CC8C(uint64_t a1, uint64_t a2, void *a3)
{
  *(void *)(a1 + 8) = 0LL;
  *(void *)(a1 + 16) = 0LL;
  *(_BYTE *)(a1 + 24) = 1;
  *(_DWORD *)(a1 + 28) = 1;
  *(void *)a1 = off_1002AE428;
  uint64_t v6 = operator new(0x38uLL);
  sub_100011AD4(v6, (_DWORD **)a2);
  void v6[3] = 0LL;
  sub_100007640((uint64_t)(v6 + 3), (uint64_t *)(a2 + 24));
  sub_10002CE9C((uint64_t *)(a1 + 32), (uint64_t)v6);
  uint64_t v7 = a3[1];
  *(void *)(a1 + 48) = *a3;
  *(void *)(a1 + 56) = v7;
  if (v7)
  {
    uint64_t v8 = (unsigned int *)(v7 + 8);
    do
      unsigned int v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }

  *(_DWORD *)(a1 + 64) = 0;
  *(_BYTE *)(a1 + 68) = 0;
  return a1;
}

void sub_10002CD38(_Unwind_Exception *a1, uint64_t a2, ...)
{
  *(void *)uint64_t v2 = off_1002ADE80;
  sub_10000EF74((unsigned int **)(v2 + 16));
  _Unwind_Resume(a1);
}

void sub_10002CD80(uint64_t a1)
{
  uint64_t v1 = (void *)sub_10002D020(a1);
  operator delete(v1);
}

uint64_t sub_10002CD94(uint64_t a1)
{
  uint64_t v2 = (pthread_mutex_t *)sub_10000F72C((uint64_t *)(a1 + 48));
  sub_100010030(v5, v2);
  sub_10002D06C((uint64_t *)a1, v5);
  uint64_t v3 = *(unsigned __int8 *)(a1 + 24);
  sub_10000F788(&v6);
  sub_10000F8D8(v5);
  return v3;
}

void sub_10002CE24(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_10002CE48(uint64_t a1)
{
  uint64_t v1 = (pthread_mutex_t *)sub_100012350((uint64_t *)(a1 + 48));
  return sub_10000F76C(v1);
}

uint64_t sub_10002CE60(uint64_t a1)
{
  uint64_t v1 = (pthread_mutex_t *)sub_100012350((uint64_t *)(a1 + 48));
  return sub_10000F7B4(v1);
}

uint64_t *sub_10002CE78@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v2 = (__int128 *)(a1 + 32);
  *a2 = v4;
  a2[1] = v3;
  if (v3)
  {
    uint64_t v5 = (unsigned int *)(v3 + 8);
    do
      unsigned int v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }

  return sub_100012390(v2);
}

uint64_t *sub_10002CE9C(uint64_t *a1, uint64_t a2)
{
  *a1 = a2;
  a1[1] = 0LL;
  sub_10002CF04(&v5, a2);
  uint64_t v3 = a1[1];
  a1[1] = v5;
  uint64_t v5 = v3;
  sub_10000F9EC(&v5);
  return a1;
}

void sub_10002CEF0(_Unwind_Exception *a1)
{
}

void *sub_10002CF04(void *a1, uint64_t a2)
{
  *a1 = 0LL;
  uint64_t v4 = operator new(0x18uLL);
  v4[1] = 0x100000001LL;
  *uint64_t v4 = &off_1002AE480;
  uint64_t v4[2] = a2;
  *a1 = v4;
  return a1;
}

void sub_10002CF50(void *a1)
{
}

void sub_10002CF64(_Unwind_Exception *a1)
{
}

void sub_10002CF78(uint64_t a1)
{
  if (a1)
  {
    sub_10002B7E4((void *)(a1 + 24));
    uint64_t v2 = (void **)a1;
    sub_10000EFEC(&v2);
    operator delete((void *)a1);
  }

void sub_10002CFC4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_10002B7E4((void *)(v1 + 24));
    uint64_t v2 = (void **)v1;
    sub_10000EFEC(&v2);
    operator delete((void *)v1);
  }

uint64_t sub_10002D008()
{
  return 0LL;
}

uint64_t sub_10002D010()
{
  return 0LL;
}

uint64_t sub_10002D018()
{
  return 0LL;
}

uint64_t sub_10002D020(uint64_t a1)
{
  *(void *)a1 = off_1002AE428;
  sub_10000F9EC((uint64_t *)(a1 + 56));
  sub_10000F9EC((uint64_t *)(a1 + 40));
  *(void *)a1 = off_1002ADE80;
  sub_10000EF74((unsigned int **)(a1 + 16));
  return a1;
}

uint64_t *sub_10002D06C(uint64_t *result, void *a2)
{
  uint64_t v2 = result + 4;
  if (result[4])
  {
    uint64_t v4 = result;
    for (uint64_t i = *(_DWORD **)sub_10002CC18(result + 4); ; i += 6)
    {
      uint64_t result = (uint64_t *)sub_10002CC18(v2);
      if (i == (_DWORD *)result[1]) {
        break;
      }
      sub_100012108(i, (uint64_t)v7);
      if (sub_100011134((uint64_t)i, (uint64_t)&v6))
      {
        sub_100011120(v4, a2);
        return sub_1000122FC((uint64_t)v7);
      }

      sub_1000122FC((uint64_t)v7);
    }
  }

  return result;
}

void sub_10002D138(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t *sub_10002D158(uint64_t *a1, uint64_t a2)
{
  *a1 = a2;
  a1[1] = 0LL;
  sub_10002D1C0(&v5, a2);
  uint64_t v3 = a1[1];
  a1[1] = v5;
  uint64_t v5 = v3;
  sub_10000F9EC(&v5);
  return a1;
}

void sub_10002D1AC(_Unwind_Exception *a1)
{
}

void *sub_10002D1C0(void *a1, uint64_t a2)
{
  *a1 = 0LL;
  uint64_t v4 = operator new(0x18uLL);
  v4[1] = 0x100000001LL;
  *uint64_t v4 = &off_1002AE4E0;
  uint64_t v4[2] = a2;
  *a1 = v4;
  return a1;
}

void sub_10002D20C(void *a1)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  __cxa_rethrow();
}

void sub_10002D22C(_Unwind_Exception *a1)
{
}

uint64_t sub_10002D248(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 16);
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }
  return result;
}

uint64_t sub_10002D260()
{
  return 0LL;
}

uint64_t sub_10002D268()
{
  return 0LL;
}

uint64_t sub_10002D270()
{
  return 0LL;
}

uint64_t sub_10002D278(uint64_t *a1)
{
  uint64_t result = *a1;
  if (!result) {
    __assert_rtn("operator*", "shared_ptr.hpp", 780, "px != 0");
  }
  return result;
}

void *sub_10002D2B8(void *a1, _OWORD *a2)
{
  *a1 = 0LL;
  a1[1] = 0LL;
  a1[2] = 0LL;
  a1[3] = 0LL;
  sub_10002D30C((uint64_t)a1, a2);
  return a1;
}

void sub_10002D2EC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10)
{
  a10 = (void **)v10;
  sub_10000EFEC(&a10);
  _Unwind_Resume(a1);
}

uint64_t *sub_10002D30C(uint64_t a1, _OWORD *a2)
{
  __int128 v2 = a2[1];
  v4[0] = *a2;
  v4[1] = v2;
  return sub_10002D338((uint64_t *)(a1 + 24), v4);
}

uint64_t *sub_10002D338(uint64_t *a1, _OWORD *a2)
{
  uint64_t v4 = operator new(0x20uLL);
  __int128 v5 = a2[1];
  *uint64_t v4 = *a2;
  v4[1] = v5;
  v7[0] = (uint64_t)off_1002AE530;
  v7[1] = (uint64_t)v4;
  sub_10002D3A8(v7, a1);
  sub_10002B7E4(v7);
  return a1;
}

void sub_10002D394( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t *sub_10002D3A8(uint64_t *result, uint64_t *a2)
{
  if (a2 != result)
  {
    uint64_t v3 = result;
    v4[0] = 0LL;
    sub_10002D558(v4, result);
    sub_10002D558(v3, a2);
    sub_10002D558(a2, v4);
    return sub_10002B7E4(v4);
  }

  return result;
}

void sub_10002D408( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_10002D41C(_OWORD **a1, uint64_t a2, int a3)
{
  if (a3 == 4)
  {
    *(_WORD *)(a2 + 8) = 0;
  }

  else
  {
    sub_10002D444(a1, a2, a3);
  }

uint64_t sub_10002D43C(uint64_t *a1, uint64_t a2)
{
  return sub_10002D510(*a1, a2);
}

void sub_10002D444(_OWORD **a1, uint64_t a2, int a3)
{
  switch(a3)
  {
    case 0:
      __int128 v5 = *a1;
      char v6 = operator new(0x20uLL);
      __int128 v7 = v5[1];
      *char v6 = *v5;
      v6[1] = v7;
      *(void *)a2 = v6;
      break;
    case 1:
      *(void *)a2 = *a1;
      *a1 = 0LL;
      break;
    case 2:
      if (*(void *)a2) {
        operator delete(*(void **)a2);
      }
      goto LABEL_9;
    case 3:
      uint64_t v8 = (const char *)(*(void *)(*(void *)a2 + 8LL) & 0x7FFFFFFFFFFFFFFFLL);
      if (v8 == (const char *)((unint64_t)"N5boost3_bi6bind_tIvNS_4_mfi3mf2IvN2nl8wpantund12XPCIPCAPI_v1EPNS5_19N"
                                                  "CPControlInterfaceERKNS5_4WPAN15NetworkInstanceEEENS0_5list3INS0_5valu"
                                                  "eIPS6_EENSF_IS8_EENS_3argILi1EEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)
        || !strcmp( v8,  (const char *)((unint64_t)"N5boost3_bi6bind_tIvNS_4_mfi3mf2IvN2nl8wpantund12XPCIPCAPI_v1EPNS5_19NCPC ontrolInterfaceERKNS5_4WPAN15NetworkInstanceEEENS0_5list3INS0_5valueIPS6_ EENSF_IS8_EENS_3argILi1EEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))
      {
        *(void *)a2 = *a1;
      }

      else
      {
LABEL_9:
        *(void *)a2 = 0LL;
      }

      break;
    default:
      *(_WORD *)(a2 + 8) = 0;
      break;
  }

uint64_t sub_10002D510(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2;
  return sub_10002D544((uint64_t *)(a1 + 16), a1, &v3);
}

uint64_t sub_10002D544(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  return sub_100012928(a2, *a1, a1[1], *a3);
}

uint64_t *sub_10002D558(uint64_t *result, uint64_t *a2)
{
  if (a2 != result)
  {
    uint64_t v3 = *a2;
    if (*a2)
    {
      *uint64_t result = v3;
      if ((v3 & 1) != 0)
      {
        __int128 v4 = *(_OWORD *)(a2 + 1);
        result[3] = a2[3];
        *(_OWORD *)(result + 1) = v4;
      }

      else
      {
        uint64_t result = (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v3 & 0xFFFFFFFFFFFFFFFELL))( a2 + 1,  result + 1,  1LL);
      }

      *a2 = 0LL;
    }

    else
    {
      return sub_100006EA4(result);
    }
  }

  return result;
}

void sub_10002D5CC(void *a1)
{
  void *v1 = 0LL;
  __cxa_rethrow();
}

void sub_10002D5DC(_Unwind_Exception *a1)
{
}

uint64_t sub_10002D5F0(uint64_t *a1)
{
  uint64_t result = *a1;
  if (!result) {
    __assert_rtn("operator*", "shared_ptr.hpp", 780, "px != 0");
  }
  return result;
}

void *sub_10002D630@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = (pthread_mutex_t *)sub_10000F72C(a1 + 3);
  sub_100010030(v10, v8);
  sub_10002D700(a1, v10, a2, a3, a4);
  sub_10000F788(&v11);
  return sub_10000F8D8(v10);
}

void sub_10002D6DC(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t *sub_10002D700@<X0>( uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t *a5@<X8>)
{
  LOBYTE(v21) = 0;
  if (a4)
  {
    int v20 = 0;
    uint64_t v8 = (uint64_t *)sub_10002D870(a1);
    uint64_t v9 = sub_10002E810(v8);
    sub_100010148(v9, &v20, &v22);
  }

  else
  {
    int v20 = 2;
    uint64_t v10 = (uint64_t *)sub_10002D870(a1);
    uint64_t v11 = sub_10002E810(v10);
    sub_1000100DC(v11, &v20, &v22);
  }

  uint64_t v12 = sub_10002D8B0(&v22);
  *(_DWORD *)(v12 + 64) = v20;
  uint64_t v13 = v22;
  *(void *)(v12 + 68) = v21;
  uint64_t v14 = v23;
  uint64_t v19 = v23;
  if (v23)
  {
    uint64_t v15 = v23 + 3;
    do
      unsigned int v16 = __ldxr(v15);
    while (__stxr(v16 + 1, v15));
    *a5 = v13;
    a5[1] = (uint64_t)v14;
    do
      unsigned int v17 = __ldxr(v15);
    while (__stxr(v17 + 1, v15));
  }

  else
  {
    *a5 = v13;
    a5[1] = 0LL;
  }

  sub_10000EF74(&v19);
  return sub_10000F9EC((uint64_t *)&v23);
}

void sub_10002D7F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
}

uint64_t *sub_10002D80C@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  __int128 v7 = operator new(0x50uLL);
  sub_10002E224((uint64_t)v7, a3, a1 + 3);
  return sub_10002E6F0(a4, (uint64_t)v7);
}

void sub_10002D85C(_Unwind_Exception *a1)
{
}

uint64_t sub_10002D870(uint64_t *a1)
{
  uint64_t result = *a1;
  if (!result) {
    __assert_rtn("operator->", "shared_ptr.hpp", 786, "px != 0");
  }
  return result;
}

uint64_t sub_10002D8B0(uint64_t *a1)
{
  uint64_t result = *a1;
  if (!result) {
    __assert_rtn("operator->", "shared_ptr.hpp", 786, "px != 0");
  }
  return result;
}

uint64_t *sub_10002D8F0(uint64_t *a1, void *a2)
{
  uint64_t v4 = a1[1];
  if (v4)
  {
    unsigned int v5 = atomic_load((unsigned int *)(v4 + 8));
    if (v5 == 1) {
      return sub_10002DB80(a1, a2, 1LL, 2);
    }
  }

  __int128 v7 = (uint64_t *)operator new(0x20uLL);
  uint64_t v8 = sub_10002DA38(a1);
  uint64_t v9 = (uint64_t *)sub_10002D870(a1);
  uint64_t v10 = sub_10002E810(v9);
  sub_10002DD50(v7, v8, v10);
  sub_10002D9DC(a1, (uint64_t)v7, v11);
  uint64_t v12 = (uint64_t *)sub_10002D870(a1);
  uint64_t v13 = *(uint64_t **)(sub_10002E810(v12) + 8);
  return sub_10002DA78(a1, a2, 1LL, &v13, 0);
}

void sub_10002D9C8(_Unwind_Exception *a1)
{
}

uint64_t *sub_10002D9DC(void *a1, uint64_t a2, uint64_t a3)
{
  if (a2 && *a1 == a2) {
    sub_1001FE52C((uint64_t)a1, a2, a3);
  }
  sub_10002DC14((uint64_t *)&v6, a2);
  __int128 v4 = *(_OWORD *)a1;
  *(_OWORD *)a1 = v6;
  __int128 v6 = v4;
  return sub_10000F9EC((uint64_t *)&v6 + 1);
}

uint64_t sub_10002DA38(uint64_t *a1)
{
  uint64_t result = *a1;
  if (!result) {
    __assert_rtn("operator*", "shared_ptr.hpp", 780, "px != 0");
  }
  return result;
}

uint64_t *sub_10002DA78(uint64_t *a1, void *a2, uint64_t a3, uint64_t **a4, int a5)
{
  uint64_t v5 = a1[1];
  int v8 = a3;
  uint64_t v21 = *a4;
  uint64_t v11 = (uint64_t *)sub_10002D870(a1);
  unsigned int v12 = 0;
  unsigned int v13 = a5 - 1;
  while (1)
  {
    uint64_t result = (uint64_t *)sub_10002E810(v11);
    uint64_t v15 = v21;
    if (v21 == result || v13 < v12)
    {
      a1[2] = (uint64_t)v21;
      return result;
    }

    if (v8)
    {
      unsigned int v17 = (uint64_t *)sub_10002D8B0(v21 + 2);
      sub_10002E19C(v17, a2);
      uint64_t v15 = v21;
    }

    if (*(_BYTE *)(sub_10002D8B0(v15 + 2) + 24))
    {
      uint64_t result = (uint64_t *)v21[1];
    }

    else
    {
      std::string v18 = (uint64_t *)sub_10002D870(a1);
      uint64_t v19 = sub_10002E810(v18);
      uint64_t v20 = sub_10002D8B0(v21 + 2);
      uint64_t result = (uint64_t *)sub_10002CB4C(v19, (void *)(v20 + 64), &v21);
    }

    uint64_t v21 = result;
    if (v12 == -1) {
      break;
    }
    uint64_t v11 = (uint64_t *)sub_10002D870(a1);
    ++v12;
  }

  __break(0x5500u);
  return result;
}

uint64_t *sub_10002DB80(uint64_t *a1, void *a2, uint64_t a3, int a4)
{
  uint64_t v4 = a1[1];
  uint64_t v10 = (uint64_t *)sub_10002D870(a1);
  uint64_t v11 = sub_10002E810(v10);
  unsigned int v12 = (uint64_t *)a1[2];
  if (v12 == (uint64_t *)v11)
  {
    unsigned int v13 = (uint64_t *)sub_10002D870(a1);
    unsigned int v12 = *(uint64_t **)(sub_10002E810(v13) + 8);
  }

  uint64_t v15 = v12;
  return sub_10002DA78(a1, a2, a3, &v15, a4);
}

uint64_t *sub_10002DC14(uint64_t *a1, uint64_t a2)
{
  *a1 = a2;
  a1[1] = 0LL;
  sub_10002DC7C(&v5, a2);
  uint64_t v3 = a1[1];
  a1[1] = v5;
  uint64_t v5 = v3;
  sub_10000F9EC(&v5);
  return a1;
}

void sub_10002DC68(_Unwind_Exception *a1)
{
}

void *sub_10002DC7C(void *a1, uint64_t a2)
{
  *a1 = 0LL;
  uint64_t v4 = operator new(0x18uLL);
  v4[1] = 0x100000001LL;
  *uint64_t v4 = &off_1002AE560;
  _OWORD v4[2] = a2;
  *a1 = v4;
  return a1;
}

void sub_10002DCC8(void *a1)
{
}

void sub_10002DCDC(_Unwind_Exception *a1)
{
}

void sub_10002DCF8(uint64_t a1)
{
  uint64_t v1 = *(uint64_t **)(a1 + 16);
  if (v1)
  {
    sub_10000F9EC(v1 + 3);
    sub_10000F9EC(v1 + 1);
    operator delete(v1);
  }

uint64_t sub_10002DD38()
{
  return 0LL;
}

uint64_t sub_10002DD40()
{
  return 0LL;
}

uint64_t sub_10002DD48()
{
  return 0LL;
}

uint64_t *sub_10002DD50(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v6 = operator new(0x40uLL);
  sub_10002DDD4((uint64_t)v6, a3);
  sub_10002E028(a1, (uint64_t)v6);
  uint64_t v7 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v7;
  if (v7)
  {
    int v8 = (unsigned int *)(v7 + 8);
    do
      unsigned int v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }

  return a1;
}

void sub_10002DDC0(_Unwind_Exception *a1)
{
}

uint64_t sub_10002DDD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002DF14((uint64_t *)a1, a2);
  sub_10002DFE0((uint64_t)(v4 + 3), (uint64_t *)(a2 + 24));
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 24);
  uint64_t v11 = 0LL;
  uint64_t v11 = *(void *)(a2 + 24);
  while (v11 != a2 + 32)
  {
    if (v10 == a1 + 32) {
      __assert_rtn("grouped_list", "slot_groups.hpp", 80, "this_map_it != _group_map.end()");
    }
    *(void *)(v10 + 48) = v5;
    uint64_t v6 = sub_100010820(a2, (uint64_t)&v11);
    uint64_t v9 = v11;
    sub_10000B338((uint64_t)&v9);
    uint64_t v7 = sub_100010820(a2, (uint64_t)&v9);
    while (v6 != v7)
    {
      uint64_t v6 = *(void *)(v6 + 8);
      uint64_t v5 = *(void *)(v5 + 8);
    }

    sub_10000B338((uint64_t)&v11);
    sub_10000B338((uint64_t)&v10);
  }

  return a1;
}

void sub_10002DEE8(_Unwind_Exception *a1)
{
}

uint64_t *sub_10002DF14(uint64_t *a1, uint64_t a2)
{
  *a1 = (uint64_t)a1;
  a1[1] = (uint64_t)a1;
  a1[2] = 0LL;
  for (uint64_t i = *(void *)(a2 + 8); i != a2; uint64_t i = *(void *)(i + 8))
    sub_1000108A4(a1, (void *)(i + 16));
  return a1;
}

void sub_10002DF6C(_Unwind_Exception *a1)
{
}

void sub_10002DF80(uint64_t *a1)
{
  if (a1[2])
  {
    uint64_t v3 = *a1;
    uint64_t v2 = (uint64_t *)a1[1];
    uint64_t v4 = *v2;
    *(void *)(v4 + 8) = *(void *)(*a1 + 8);
    **(void **)(v3 + 8) = v4;
    a1[2] = 0LL;
    while (v2 != a1)
    {
      uint64_t v5 = (uint64_t *)v2[1];
      sub_100010A14((uint64_t)a1, v2);
      uint64_t v2 = v5;
    }
  }

uint64_t sub_10002DFE0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_100010AEC(a1, (uint64_t)a2);
  sub_100010A84(v4, *a2, (uint64_t)(a2 + 1));
  return a1;
}

void sub_10002E014(_Unwind_Exception *a1)
{
}

uint64_t *sub_10002E028(uint64_t *a1, uint64_t a2)
{
  *a1 = a2;
  a1[1] = 0LL;
  sub_10002E090(&v5, a2);
  uint64_t v3 = a1[1];
  a1[1] = v5;
  uint64_t v5 = v3;
  sub_10000F9EC(&v5);
  return a1;
}

void sub_10002E07C(_Unwind_Exception *a1)
{
}

void *sub_10002E090(void *a1, uint64_t a2)
{
  *a1 = 0LL;
  uint64_t v4 = operator new(0x18uLL);
  v4[1] = 0x100000001LL;
  *uint64_t v4 = &off_1002AE5C0;
  _OWORD v4[2] = a2;
  *a1 = v4;
  return a1;
}

void sub_10002E0DC(void *a1)
{
}

void sub_10002E0F0(_Unwind_Exception *a1)
{
}

void sub_10002E104(uint64_t *a1)
{
  if (a1)
  {
    sub_10000D0D4((uint64_t)(a1 + 3));
    sub_10002DF80(a1);
    operator delete(a1);
  }

void sub_10002E144(uint64_t a1)
{
  uint64_t v1 = *(uint64_t **)(a1 + 16);
  if (v1)
  {
    sub_10000D0D4((uint64_t)(v1 + 3));
    sub_10002DF80(v1);
    operator delete(v1);
  }

uint64_t sub_10002E184()
{
  return 0LL;
}

uint64_t sub_10002E18C()
{
  return 0LL;
}

uint64_t sub_10002E194()
{
  return 0LL;
}

uint64_t *sub_10002E19C(uint64_t *a1, void *a2)
{
  uint64_t v4 = a1[4];
  uint64_t result = a1 + 4;
  if (v4)
  {
    uint64_t v6 = (uint64_t *)sub_10002E1E4(result);
    uint64_t result = (uint64_t *)sub_1000110BC(v6);
    if ((_DWORD)result) {
      return sub_100011120(a1, a2);
    }
  }

  return result;
}

uint64_t sub_10002E1E4(uint64_t *a1)
{
  uint64_t result = *a1;
  if (!result) {
    __assert_rtn("operator*", "shared_ptr.hpp", 780, "px != 0");
  }
  return result;
}

uint64_t sub_10002E224(uint64_t a1, uint64_t a2, void *a3)
{
  *(void *)(a1 + 8) = 0LL;
  *(void *)(a1 + 16) = 0LL;
  *(_BYTE *)(a1 + 24) = 1;
  *(_DWORD *)(a1 + 28) = 1;
  *(void *)a1 = off_1002AE620;
  uint64_t v6 = operator new(0x38uLL);
  sub_100011AD4(v6, (_DWORD **)a2);
  void v6[3] = 0LL;
  sub_100007640((uint64_t)(v6 + 3), (uint64_t *)(a2 + 24));
  sub_10002E434((uint64_t *)(a1 + 32), (uint64_t)v6);
  uint64_t v7 = a3[1];
  *(void *)(a1 + 48) = *a3;
  *(void *)(a1 + 56) = v7;
  if (v7)
  {
    int v8 = (unsigned int *)(v7 + 8);
    do
      unsigned int v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }

  *(_DWORD *)(a1 + 64) = 0;
  *(_BYTE *)(a1 + 68) = 0;
  return a1;
}

void sub_10002E2D0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  *(void *)uint64_t v2 = off_1002ADE80;
  sub_10000EF74((unsigned int **)(v2 + 16));
  _Unwind_Resume(a1);
}

void sub_10002E318(uint64_t a1)
{
  uint64_t v1 = (void *)sub_10002E5B8(a1);
  operator delete(v1);
}

uint64_t sub_10002E32C(uint64_t a1)
{
  uint64_t v2 = (pthread_mutex_t *)sub_10000F72C((uint64_t *)(a1 + 48));
  sub_100010030(v5, v2);
  sub_10002E604((uint64_t *)a1, v5);
  uint64_t v3 = *(unsigned __int8 *)(a1 + 24);
  sub_10000F788(&v6);
  sub_10000F8D8(v5);
  return v3;
}

void sub_10002E3BC(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_10002E3E0(uint64_t a1)
{
  uint64_t v1 = (pthread_mutex_t *)sub_100012350((uint64_t *)(a1 + 48));
  return sub_10000F76C(v1);
}

uint64_t sub_10002E3F8(uint64_t a1)
{
  uint64_t v1 = (pthread_mutex_t *)sub_100012350((uint64_t *)(a1 + 48));
  return sub_10000F7B4(v1);
}

uint64_t *sub_10002E410@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v2 = (__int128 *)(a1 + 32);
  *a2 = v4;
  a2[1] = v3;
  if (v3)
  {
    uint64_t v5 = (unsigned int *)(v3 + 8);
    do
      unsigned int v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }

  return sub_100012390(v2);
}

uint64_t *sub_10002E434(uint64_t *a1, uint64_t a2)
{
  *a1 = a2;
  a1[1] = 0LL;
  sub_10002E49C(&v5, a2);
  uint64_t v3 = a1[1];
  a1[1] = v5;
  uint64_t v5 = v3;
  sub_10000F9EC(&v5);
  return a1;
}

void sub_10002E488(_Unwind_Exception *a1)
{
}

void *sub_10002E49C(void *a1, uint64_t a2)
{
  *a1 = 0LL;
  uint64_t v4 = operator new(0x18uLL);
  v4[1] = 0x100000001LL;
  *uint64_t v4 = &off_1002AE678;
  _OWORD v4[2] = a2;
  *a1 = v4;
  return a1;
}

void sub_10002E4E8(void *a1)
{
}

void sub_10002E4FC(_Unwind_Exception *a1)
{
}

void sub_10002E510(uint64_t a1)
{
  if (a1)
  {
    sub_10002B80C((void *)(a1 + 24));
    uint64_t v2 = (void **)a1;
    sub_10000EFEC(&v2);
    operator delete((void *)a1);
  }

void sub_10002E55C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_10002B80C((void *)(v1 + 24));
    uint64_t v2 = (void **)v1;
    sub_10000EFEC(&v2);
    operator delete((void *)v1);
  }

uint64_t sub_10002E5A0()
{
  return 0LL;
}

uint64_t sub_10002E5A8()
{
  return 0LL;
}

uint64_t sub_10002E5B0()
{
  return 0LL;
}

uint64_t sub_10002E5B8(uint64_t a1)
{
  *(void *)a1 = off_1002AE620;
  sub_10000F9EC((uint64_t *)(a1 + 56));
  sub_10000F9EC((uint64_t *)(a1 + 40));
  *(void *)a1 = off_1002ADE80;
  sub_10000EF74((unsigned int **)(a1 + 16));
  return a1;
}

uint64_t *sub_10002E604(uint64_t *result, void *a2)
{
  uint64_t v2 = result + 4;
  if (result[4])
  {
    uint64_t v4 = result;
    for (uint64_t i = *(_DWORD **)sub_10002E1E4(result + 4); ; i += 6)
    {
      uint64_t result = (uint64_t *)sub_10002E1E4(v2);
      if (i == (_DWORD *)result[1]) {
        break;
      }
      sub_100012108(i, (uint64_t)v7);
      if (sub_100011134((uint64_t)i, (uint64_t)&v6))
      {
        sub_100011120(v4, a2);
        return sub_1000122FC((uint64_t)v7);
      }

      sub_1000122FC((uint64_t)v7);
    }
  }

  return result;
}

void sub_10002E6D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t *sub_10002E6F0(uint64_t *a1, uint64_t a2)
{
  *a1 = a2;
  a1[1] = 0LL;
  sub_10002E758(&v5, a2);
  uint64_t v3 = a1[1];
  a1[1] = v5;
  uint64_t v5 = v3;
  sub_10000F9EC(&v5);
  return a1;
}

void sub_10002E744(_Unwind_Exception *a1)
{
}

void *sub_10002E758(void *a1, uint64_t a2)
{
  *a1 = 0LL;
  uint64_t v4 = operator new(0x18uLL);
  v4[1] = 0x100000001LL;
  *uint64_t v4 = &off_1002AE6D8;
  _OWORD v4[2] = a2;
  *a1 = v4;
  return a1;
}

void sub_10002E7A4(void *a1)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  __cxa_rethrow();
}

void sub_10002E7C4(_Unwind_Exception *a1)
{
}

uint64_t sub_10002E7E0(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 16);
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }
  return result;
}

uint64_t sub_10002E7F8()
{
  return 0LL;
}

uint64_t sub_10002E800()
{
  return 0LL;
}

uint64_t sub_10002E808()
{
  return 0LL;
}

uint64_t sub_10002E810(uint64_t *a1)
{
  uint64_t result = *a1;
  if (!result) {
    __assert_rtn("operator*", "shared_ptr.hpp", 780, "px != 0");
  }
  return result;
}

void *sub_10002E850(void *a1, _OWORD *a2)
{
  *a1 = 0LL;
  a1[1] = 0LL;
  a1[2] = 0LL;
  a1[3] = 0LL;
  sub_10002E8A4((uint64_t)a1, a2);
  return a1;
}

void sub_10002E884( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10)
{
  a10 = (void **)v10;
  sub_10000EFEC(&a10);
  _Unwind_Resume(a1);
}

uint64_t *sub_10002E8A4(uint64_t a1, _OWORD *a2)
{
  __int128 v2 = a2[1];
  v4[0] = *a2;
  v4[1] = v2;
  return sub_10002E8D0((uint64_t *)(a1 + 24), v4);
}

uint64_t *sub_10002E8D0(uint64_t *a1, _OWORD *a2)
{
  uint64_t v4 = operator new(0x20uLL);
  __int128 v5 = a2[1];
  *uint64_t v4 = *a2;
  v4[1] = v5;
  v7[0] = (uint64_t)off_1002AE728;
  v7[1] = (uint64_t)v4;
  sub_10002E940(v7, a1);
  sub_10002B80C(v7);
  return a1;
}

void sub_10002E92C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t *sub_10002E940(uint64_t *result, uint64_t *a2)
{
  if (a2 != result)
  {
    uint64_t v3 = result;
    v4[0] = 0LL;
    sub_10002EAA8(v4, result);
    sub_10002EAA8(v3, a2);
    sub_10002EAA8(a2, v4);
    return sub_10002B80C(v4);
  }

  return result;
}

void sub_10002E9A0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_10002E9B4(_OWORD **a1, uint64_t a2, int a3)
{
  if (a3 == 4)
  {
    *(_WORD *)(a2 + 8) = 0;
  }

  else
  {
    sub_10002E9DC(a1, a2, a3);
  }

uint64_t sub_10002E9D4(uint64_t *a1, uint64_t a2)
{
  return sub_10002D510(*a1, a2);
}

void sub_10002E9DC(_OWORD **a1, uint64_t a2, int a3)
{
  switch(a3)
  {
    case 0:
      __int128 v5 = *a1;
      char v6 = operator new(0x20uLL);
      __int128 v7 = v5[1];
      *char v6 = *v5;
      v6[1] = v7;
      *(void *)a2 = v6;
      break;
    case 1:
      *(void *)a2 = *a1;
      *a1 = 0LL;
      break;
    case 2:
      if (*(void *)a2) {
        operator delete(*(void **)a2);
      }
      goto LABEL_9;
    case 3:
      int v8 = (const char *)(*(void *)(*(void *)a2 + 8LL) & 0x7FFFFFFFFFFFFFFFLL);
      if (v8 == (const char *)((unint64_t)"N5boost3_bi6bind_tIvNS_4_mfi3mf2IvN2nl8wpantund12XPCIPCAPI_v1EPNS5_19N"
                                                  "CPControlInterfaceERKNS5_21EnergyScanResultEntryEEENS0_5list3INS0_5val"
                                                  "ueIPS6_EENSE_IS8_EENS_3argILi1EEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)
        || !strcmp( v8,  (const char *)((unint64_t)"N5boost3_bi6bind_tIvNS_4_mfi3mf2IvN2nl8wpantund12XPCIPCAPI_v1EPNS5_19NCPC ontrolInterfaceERKNS5_21EnergyScanResultEntryEEENS0_5list3INS0_5valueIPS6 _EENSE_IS8_EENS_3argILi1EEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))
      {
        *(void *)a2 = *a1;
      }

      else
      {
LABEL_9:
        *(void *)a2 = 0LL;
      }

      break;
    default:
      *(_WORD *)(a2 + 8) = 0;
      break;
  }

uint64_t *sub_10002EAA8(uint64_t *result, uint64_t *a2)
{
  if (a2 != result)
  {
    uint64_t v3 = *a2;
    if (*a2)
    {
      *uint64_t result = v3;
      if ((v3 & 1) != 0)
      {
        __int128 v4 = *(_OWORD *)(a2 + 1);
        result[3] = a2[3];
        *(_OWORD *)(result + 1) = v4;
      }

      else
      {
        uint64_t result = (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v3 & 0xFFFFFFFFFFFFFFFELL))( a2 + 1,  result + 1,  1LL);
      }

      *a2 = 0LL;
    }

    else
    {
      return sub_100006EA4(result);
    }
  }

  return result;
}

void sub_10002EB1C(void *a1)
{
  void *v1 = 0LL;
  __cxa_rethrow();
}

void sub_10002EB2C(_Unwind_Exception *a1)
{
}

uint64_t sub_10002EB40(uint64_t *a1)
{
  uint64_t result = *a1;
  if (!result) {
    __assert_rtn("operator*", "shared_ptr.hpp", 780, "px != 0");
  }
  return result;
}

void *sub_10002EB80@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t *a4@<X8>)
{
  int v8 = (pthread_mutex_t *)sub_10000F72C(a1 + 3);
  sub_100010030(v10, v8);
  sub_10002EC50(a1, v10, a2, a3, a4);
  sub_10000F788(&v11);
  return sub_10000F8D8(v10);
}

void sub_10002EC2C(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t *sub_10002EC50@<X0>( uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t *a5@<X8>)
{
  LOBYTE(v21) = 0;
  if (a4)
  {
    int v20 = 0;
    int v8 = (uint64_t *)sub_10002EDC0(a1);
    uint64_t v9 = sub_10002FD60(v8);
    sub_100010148(v9, &v20, &v22);
  }

  else
  {
    int v20 = 2;
    uint64_t v10 = (uint64_t *)sub_10002EDC0(a1);
    uint64_t v11 = sub_10002FD60(v10);
    sub_1000100DC(v11, &v20, &v22);
  }

  uint64_t v12 = sub_10002EE00(&v22);
  *(_DWORD *)(v12 + 64) = v20;
  uint64_t v13 = v22;
  *(void *)(v12 + 68) = v21;
  uint64_t v14 = v23;
  uint64_t v19 = v23;
  if (v23)
  {
    uint64_t v15 = v23 + 3;
    do
      unsigned int v16 = __ldxr(v15);
    while (__stxr(v16 + 1, v15));
    *a5 = v13;
    a5[1] = (uint64_t)v14;
    do
      unsigned int v17 = __ldxr(v15);
    while (__stxr(v17 + 1, v15));
  }

  else
  {
    *a5 = v13;
    a5[1] = 0LL;
  }

  sub_10000EF74(&v19);
  return sub_10000F9EC((uint64_t *)&v23);
}

void sub_10002ED44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
}

uint64_t *sub_10002ED5C@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  __int128 v7 = operator new(0x50uLL);
  sub_10002F774((uint64_t)v7, a3, a1 + 3);
  return sub_10002FC40(a4, (uint64_t)v7);
}

void sub_10002EDAC(_Unwind_Exception *a1)
{
}

uint64_t sub_10002EDC0(uint64_t *a1)
{
  uint64_t result = *a1;
  if (!result) {
    __assert_rtn("operator->", "shared_ptr.hpp", 786, "px != 0");
  }
  return result;
}

uint64_t sub_10002EE00(uint64_t *a1)
{
  uint64_t result = *a1;
  if (!result) {
    __assert_rtn("operator->", "shared_ptr.hpp", 786, "px != 0");
  }
  return result;
}

uint64_t *sub_10002EE40(uint64_t *a1, void *a2)
{
  uint64_t v4 = a1[1];
  if (v4)
  {
    unsigned int v5 = atomic_load((unsigned int *)(v4 + 8));
    if (v5 == 1) {
      return sub_10002F0D0(a1, a2, 1LL, 2);
    }
  }

  __int128 v7 = (uint64_t *)operator new(0x20uLL);
  uint64_t v8 = sub_10002EF88(a1);
  uint64_t v9 = (uint64_t *)sub_10002EDC0(a1);
  uint64_t v10 = sub_10002FD60(v9);
  sub_10002F2A0(v7, v8, v10);
  sub_10002EF2C(a1, (uint64_t)v7, v11);
  uint64_t v12 = (uint64_t *)sub_10002EDC0(a1);
  uint64_t v13 = *(uint64_t **)(sub_10002FD60(v12) + 8);
  return sub_10002EFC8(a1, a2, 1LL, &v13, 0);
}

void sub_10002EF18(_Unwind_Exception *a1)
{
}

uint64_t *sub_10002EF2C(void *a1, uint64_t a2, uint64_t a3)
{
  if (a2 && *a1 == a2) {
    sub_1001FE52C((uint64_t)a1, a2, a3);
  }
  sub_10002F164((uint64_t *)&v6, a2);
  __int128 v4 = *(_OWORD *)a1;
  *(_OWORD *)a1 = v6;
  __int128 v6 = v4;
  return sub_10000F9EC((uint64_t *)&v6 + 1);
}

uint64_t sub_10002EF88(uint64_t *a1)
{
  uint64_t result = *a1;
  if (!result) {
    __assert_rtn("operator*", "shared_ptr.hpp", 780, "px != 0");
  }
  return result;
}

uint64_t *sub_10002EFC8(uint64_t *a1, void *a2, uint64_t a3, uint64_t **a4, int a5)
{
  uint64_t v5 = a1[1];
  int v8 = a3;
  uint64_t v21 = *a4;
  uint64_t v11 = (uint64_t *)sub_10002EDC0(a1);
  unsigned int v12 = 0;
  unsigned int v13 = a5 - 1;
  while (1)
  {
    uint64_t result = (uint64_t *)sub_10002FD60(v11);
    uint64_t v15 = v21;
    if (v21 == result || v13 < v12)
    {
      a1[2] = (uint64_t)v21;
      return result;
    }

    if (v8)
    {
      unsigned int v17 = (uint64_t *)sub_10002EE00(v21 + 2);
      sub_10002F6EC(v17, a2);
      uint64_t v15 = v21;
    }

    if (*(_BYTE *)(sub_10002EE00(v15 + 2) + 24))
    {
      uint64_t result = (uint64_t *)v21[1];
    }

    else
    {
      std::string v18 = (uint64_t *)sub_10002EDC0(a1);
      uint64_t v19 = sub_10002FD60(v18);
      uint64_t v20 = sub_10002EE00(v21 + 2);
      uint64_t result = (uint64_t *)sub_10002CB4C(v19, (void *)(v20 + 64), &v21);
    }

    uint64_t v21 = result;
    if (v12 == -1) {
      break;
    }
    uint64_t v11 = (uint64_t *)sub_10002EDC0(a1);
    ++v12;
  }

  __break(0x5500u);
  return result;
}

uint64_t *sub_10002F0D0(uint64_t *a1, void *a2, uint64_t a3, int a4)
{
  uint64_t v4 = a1[1];
  uint64_t v10 = (uint64_t *)sub_10002EDC0(a1);
  uint64_t v11 = sub_10002FD60(v10);
  unsigned int v12 = (uint64_t *)a1[2];
  if (v12 == (uint64_t *)v11)
  {
    unsigned int v13 = (uint64_t *)sub_10002EDC0(a1);
    unsigned int v12 = *(uint64_t **)(sub_10002FD60(v13) + 8);
  }

  uint64_t v15 = v12;
  return sub_10002EFC8(a1, a2, a3, &v15, a4);
}

uint64_t *sub_10002F164(uint64_t *a1, uint64_t a2)
{
  *a1 = a2;
  a1[1] = 0LL;
  sub_10002F1CC(&v5, a2);
  uint64_t v3 = a1[1];
  a1[1] = v5;
  uint64_t v5 = v3;
  sub_10000F9EC(&v5);
  return a1;
}

void sub_10002F1B8(_Unwind_Exception *a1)
{
}

void *sub_10002F1CC(void *a1, uint64_t a2)
{
  *a1 = 0LL;
  uint64_t v4 = operator new(0x18uLL);
  v4[1] = 0x100000001LL;
  *uint64_t v4 = &off_1002AE758;
  _OWORD v4[2] = a2;
  *a1 = v4;
  return a1;
}

void sub_10002F218(void *a1)
{
}

void sub_10002F22C(_Unwind_Exception *a1)
{
}

void sub_10002F248(uint64_t a1)
{
  uint64_t v1 = *(uint64_t **)(a1 + 16);
  if (v1)
  {
    sub_10000F9EC(v1 + 3);
    sub_10000F9EC(v1 + 1);
    operator delete(v1);
  }

uint64_t sub_10002F288()
{
  return 0LL;
}

uint64_t sub_10002F290()
{
  return 0LL;
}

uint64_t sub_10002F298()
{
  return 0LL;
}

uint64_t *sub_10002F2A0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v6 = operator new(0x40uLL);
  sub_10002F324((uint64_t)v6, a3);
  sub_10002F578(a1, (uint64_t)v6);
  uint64_t v7 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v7;
  if (v7)
  {
    int v8 = (unsigned int *)(v7 + 8);
    do
      unsigned int v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }

  return a1;
}

void sub_10002F310(_Unwind_Exception *a1)
{
}

uint64_t sub_10002F324(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10002F464((uint64_t *)a1, a2);
  sub_10002F530((uint64_t)(v4 + 3), (uint64_t *)(a2 + 24));
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 24);
  uint64_t v11 = 0LL;
  uint64_t v11 = *(void *)(a2 + 24);
  while (v11 != a2 + 32)
  {
    if (v10 == a1 + 32) {
      __assert_rtn("grouped_list", "slot_groups.hpp", 80, "this_map_it != _group_map.end()");
    }
    *(void *)(v10 + 48) = v5;
    uint64_t v6 = sub_100010820(a2, (uint64_t)&v11);
    uint64_t v9 = v11;
    sub_10000B338((uint64_t)&v9);
    uint64_t v7 = sub_100010820(a2, (uint64_t)&v9);
    while (v6 != v7)
    {
      uint64_t v6 = *(void *)(v6 + 8);
      uint64_t v5 = *(void *)(v5 + 8);
    }

    sub_10000B338((uint64_t)&v11);
    sub_10000B338((uint64_t)&v10);
  }

  return a1;
}

void sub_10002F438(_Unwind_Exception *a1)
{
}

uint64_t *sub_10002F464(uint64_t *a1, uint64_t a2)
{
  *a1 = (uint64_t)a1;
  a1[1] = (uint64_t)a1;
  a1[2] = 0LL;
  for (uint64_t i = *(void *)(a2 + 8); i != a2; uint64_t i = *(void *)(i + 8))
    sub_1000108A4(a1, (void *)(i + 16));
  return a1;
}

void sub_10002F4BC(_Unwind_Exception *a1)
{
}

void sub_10002F4D0(uint64_t *a1)
{
  if (a1[2])
  {
    uint64_t v3 = *a1;
    uint64_t v2 = (uint64_t *)a1[1];
    uint64_t v4 = *v2;
    *(void *)(v4 + 8) = *(void *)(*a1 + 8);
    **(void **)(v3 + 8) = v4;
    a1[2] = 0LL;
    while (v2 != a1)
    {
      uint64_t v5 = (uint64_t *)v2[1];
      sub_100010A14((uint64_t)a1, v2);
      uint64_t v2 = v5;
    }
  }

uint64_t sub_10002F530(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_100010AEC(a1, (uint64_t)a2);
  sub_100010A84(v4, *a2, (uint64_t)(a2 + 1));
  return a1;
}

void sub_10002F564(_Unwind_Exception *a1)
{
}

uint64_t *sub_10002F578(uint64_t *a1, uint64_t a2)
{
  *a1 = a2;
  a1[1] = 0LL;
  sub_10002F5E0(&v5, a2);
  uint64_t v3 = a1[1];
  a1[1] = v5;
  uint64_t v5 = v3;
  sub_10000F9EC(&v5);
  return a1;
}

void sub_10002F5CC(_Unwind_Exception *a1)
{
}

void *sub_10002F5E0(void *a1, uint64_t a2)
{
  *a1 = 0LL;
  uint64_t v4 = operator new(0x18uLL);
  v4[1] = 0x100000001LL;
  *uint64_t v4 = &off_1002AE7B8;
  _OWORD v4[2] = a2;
  *a1 = v4;
  return a1;
}

void sub_10002F62C(void *a1)
{
}

void sub_10002F640(_Unwind_Exception *a1)
{
}

void sub_10002F654(uint64_t *a1)
{
  if (a1)
  {
    sub_10000D0D4((uint64_t)(a1 + 3));
    sub_10002F4D0(a1);
    operator delete(a1);
  }

void sub_10002F694(uint64_t a1)
{
  uint64_t v1 = *(uint64_t **)(a1 + 16);
  if (v1)
  {
    sub_10000D0D4((uint64_t)(v1 + 3));
    sub_10002F4D0(v1);
    operator delete(v1);
  }

uint64_t sub_10002F6D4()
{
  return 0LL;
}

uint64_t sub_10002F6DC()
{
  return 0LL;
}

uint64_t sub_10002F6E4()
{
  return 0LL;
}

uint64_t *sub_10002F6EC(uint64_t *a1, void *a2)
{
  uint64_t v4 = a1[4];
  uint64_t result = a1 + 4;
  if (v4)
  {
    uint64_t v6 = (uint64_t *)sub_10002F734(result);
    uint64_t result = (uint64_t *)sub_1000110BC(v6);
    if ((_DWORD)result) {
      return sub_100011120(a1, a2);
    }
  }

  return result;
}

uint64_t sub_10002F734(uint64_t *a1)
{
  uint64_t result = *a1;
  if (!result) {
    __assert_rtn("operator*", "shared_ptr.hpp", 780, "px != 0");
  }
  return result;
}

uint64_t sub_10002F774(uint64_t a1, uint64_t a2, void *a3)
{
  *(void *)(a1 + 8) = 0LL;
  *(void *)(a1 + 16) = 0LL;
  *(_BYTE *)(a1 + 24) = 1;
  *(_DWORD *)(a1 + 28) = 1;
  *(void *)a1 = off_1002AE818;
  uint64_t v6 = operator new(0x38uLL);
  sub_100011AD4(v6, (_DWORD **)a2);
  void v6[3] = 0LL;
  sub_100007640((uint64_t)(v6 + 3), (uint64_t *)(a2 + 24));
  sub_10002F984((uint64_t *)(a1 + 32), (uint64_t)v6);
  uint64_t v7 = a3[1];
  *(void *)(a1 + 48) = *a3;
  *(void *)(a1 + 56) = v7;
  if (v7)
  {
    int v8 = (unsigned int *)(v7 + 8);
    do
      unsigned int v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }

  *(_DWORD *)(a1 + 64) = 0;
  *(_BYTE *)(a1 + 68) = 0;
  return a1;
}

void sub_10002F820(_Unwind_Exception *a1, uint64_t a2, ...)
{
  *(void *)uint64_t v2 = off_1002ADE80;
  sub_10000EF74((unsigned int **)(v2 + 16));
  _Unwind_Resume(a1);
}

void sub_10002F868(uint64_t a1)
{
  uint64_t v1 = (void *)sub_10002FB08(a1);
  operator delete(v1);
}

uint64_t sub_10002F87C(uint64_t a1)
{
  uint64_t v2 = (pthread_mutex_t *)sub_10000F72C((uint64_t *)(a1 + 48));
  sub_100010030(v5, v2);
  sub_10002FB54((uint64_t *)a1, v5);
  uint64_t v3 = *(unsigned __int8 *)(a1 + 24);
  sub_10000F788(&v6);
  sub_10000F8D8(v5);
  return v3;
}

void sub_10002F90C(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_10002F930(uint64_t a1)
{
  uint64_t v1 = (pthread_mutex_t *)sub_100012350((uint64_t *)(a1 + 48));
  return sub_10000F76C(v1);
}

uint64_t sub_10002F948(uint64_t a1)
{
  uint64_t v1 = (pthread_mutex_t *)sub_100012350((uint64_t *)(a1 + 48));
  return sub_10000F7B4(v1);
}

uint64_t *sub_10002F960@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v2 = (__int128 *)(a1 + 32);
  *a2 = v4;
  a2[1] = v3;
  if (v3)
  {
    uint64_t v5 = (unsigned int *)(v3 + 8);
    do
      unsigned int v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }

  return sub_100012390(v2);
}

uint64_t *sub_10002F984(uint64_t *a1, uint64_t a2)
{
  *a1 = a2;
  a1[1] = 0LL;
  sub_10002F9EC(&v5, a2);
  uint64_t v3 = a1[1];
  a1[1] = v5;
  uint64_t v5 = v3;
  sub_10000F9EC(&v5);
  return a1;
}

void sub_10002F9D8(_Unwind_Exception *a1)
{
}

void *sub_10002F9EC(void *a1, uint64_t a2)
{
  *a1 = 0LL;
  uint64_t v4 = operator new(0x18uLL);
  v4[1] = 0x100000001LL;
  *uint64_t v4 = &off_1002AE870;
  _OWORD v4[2] = a2;
  *a1 = v4;
  return a1;
}

void sub_10002FA38(void *a1)
{
}

void sub_10002FA4C(_Unwind_Exception *a1)
{
}

void sub_10002FA60(uint64_t a1)
{
  if (a1)
  {
    sub_10002B834((void *)(a1 + 24));
    uint64_t v2 = (void **)a1;
    sub_10000EFEC(&v2);
    operator delete((void *)a1);
  }

void sub_10002FAAC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_10002B834((void *)(v1 + 24));
    uint64_t v2 = (void **)v1;
    sub_10000EFEC(&v2);
    operator delete((void *)v1);
  }

uint64_t sub_10002FAF0()
{
  return 0LL;
}

uint64_t sub_10002FAF8()
{
  return 0LL;
}

uint64_t sub_10002FB00()
{
  return 0LL;
}

uint64_t sub_10002FB08(uint64_t a1)
{
  *(void *)a1 = off_1002AE818;
  sub_10000F9EC((uint64_t *)(a1 + 56));
  sub_10000F9EC((uint64_t *)(a1 + 40));
  *(void *)a1 = off_1002ADE80;
  sub_10000EF74((unsigned int **)(a1 + 16));
  return a1;
}

uint64_t *sub_10002FB54(uint64_t *result, void *a2)
{
  uint64_t v2 = result + 4;
  if (result[4])
  {
    uint64_t v4 = result;
    for (uint64_t i = *(_DWORD **)sub_10002F734(result + 4); ; i += 6)
    {
      uint64_t result = (uint64_t *)sub_10002F734(v2);
      if (i == (_DWORD *)result[1]) {
        break;
      }
      sub_100012108(i, (uint64_t)v7);
      if (sub_100011134((uint64_t)i, (uint64_t)&v6))
      {
        sub_100011120(v4, a2);
        return sub_1000122FC((uint64_t)v7);
      }

      sub_1000122FC((uint64_t)v7);
    }
  }

  return result;
}

void sub_10002FC20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t *sub_10002FC40(uint64_t *a1, uint64_t a2)
{
  *a1 = a2;
  a1[1] = 0LL;
  sub_10002FCA8(&v5, a2);
  uint64_t v3 = a1[1];
  a1[1] = v5;
  uint64_t v5 = v3;
  sub_10000F9EC(&v5);
  return a1;
}

void sub_10002FC94(_Unwind_Exception *a1)
{
}

void *sub_10002FCA8(void *a1, uint64_t a2)
{
  *a1 = 0LL;
  uint64_t v4 = operator new(0x18uLL);
  v4[1] = 0x100000001LL;
  *uint64_t v4 = &off_1002AE8D0;
  _OWORD v4[2] = a2;
  *a1 = v4;
  return a1;
}

void sub_10002FCF4(void *a1)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  __cxa_rethrow();
}

void sub_10002FD14(_Unwind_Exception *a1)
{
}

uint64_t sub_10002FD30(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 16);
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }
  return result;
}

uint64_t sub_10002FD48()
{
  return 0LL;
}

uint64_t sub_10002FD50()
{
  return 0LL;
}

uint64_t sub_10002FD58()
{
  return 0LL;
}

uint64_t sub_10002FD60(uint64_t *a1)
{
  uint64_t result = *a1;
  if (!result) {
    __assert_rtn("operator*", "shared_ptr.hpp", 780, "px != 0");
  }
  return result;
}

void *sub_10002FDA0(void *a1, _OWORD *a2)
{
  *a1 = 0LL;
  a1[1] = 0LL;
  a1[2] = 0LL;
  a1[3] = 0LL;
  sub_10002FDF4((uint64_t)a1, a2);
  return a1;
}

void sub_10002FDD4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10)
{
  a10 = (void **)v10;
  sub_10000EFEC(&a10);
  _Unwind_Resume(a1);
}

uint64_t *sub_10002FDF4(uint64_t a1, _OWORD *a2)
{
  __int128 v2 = a2[1];
  v4[0] = *a2;
  v4[1] = v2;
  return sub_10002FE20((uint64_t *)(a1 + 24), v4);
}

uint64_t *sub_10002FE20(uint64_t *a1, _OWORD *a2)
{
  uint64_t v4 = operator new(0x20uLL);
  __int128 v5 = a2[1];
  *uint64_t v4 = *a2;
  v4[1] = v5;
  v7[0] = (uint64_t)off_1002AE920;
  v7[1] = (uint64_t)v4;
  sub_10002FE90(v7, a1);
  sub_10002B834(v7);
  return a1;
}

void sub_10002FE7C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t *sub_10002FE90(uint64_t *result, uint64_t *a2)
{
  if (a2 != result)
  {
    uint64_t v3 = result;
    v4[0] = 0LL;
    sub_10002FFF8(v4, result);
    sub_10002FFF8(v3, a2);
    sub_10002FFF8(a2, v4);
    return sub_10002B834(v4);
  }

  return result;
}

void sub_10002FEF0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_10002FF04(_OWORD **a1, uint64_t a2, int a3)
{
  if (a3 == 4)
  {
    *(_WORD *)(a2 + 8) = 0;
  }

  else
  {
    sub_10002FF2C(a1, a2, a3);
  }

uint64_t sub_10002FF24(uint64_t *a1, uint64_t a2)
{
  return sub_10002D510(*a1, a2);
}

void sub_10002FF2C(_OWORD **a1, uint64_t a2, int a3)
{
  switch(a3)
  {
    case 0:
      __int128 v5 = *a1;
      char v6 = operator new(0x20uLL);
      __int128 v7 = v5[1];
      *char v6 = *v5;
      v6[1] = v7;
      *(void *)a2 = v6;
      break;
    case 1:
      *(void *)a2 = *a1;
      *a1 = 0LL;
      break;
    case 2:
      if (*(void *)a2) {
        operator delete(*(void **)a2);
      }
      goto LABEL_9;
    case 3:
      int v8 = (const char *)(*(void *)(*(void *)a2 + 8LL) & 0x7FFFFFFFFFFFFFFFLL);
      if (v8 == (const char *)((unint64_t)"N5boost3_bi6bind_tIvNS_4_mfi3mf2IvN2nl8wpantund12XPCIPCAPI_v1EPNS5_19N"
                                                  "CPControlInterfaceERKNSt3__13mapINS9_12basic_stringIcNS9_11char_traits"
                                                  "IcEENS9_9allocatorIcEEEENS_3anyENS9_4lessISG_EENSE_INS9_4pairIKSG_SH_E"
                                                  "EEEEEEENS0_5list3INS0_5valueIPS6_EENST_IS8_EENS_3argILi1EEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)
        || !strcmp( v8,  (const char *)((unint64_t)"N5boost3_bi6bind_tIvNS_4_mfi3mf2IvN2nl8wpantund12XPCIPCAPI_v1EPNS5_19NCPC ontrolInterfaceERKNSt3__13mapINS9_12basic_stringIcNS9_11char_traitsIcEENS 9_9allocatorIcEEEENS_3anyENS9_4lessISG_EENSE_INS9_4pairIKSG_SH_EEEEEEEENS 0_5list3INS0_5valueIPS6_EENST_IS8_EENS_3argILi1EEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))
      {
        *(void *)a2 = *a1;
      }

      else
      {
LABEL_9:
        *(void *)a2 = 0LL;
      }

      break;
    default:
      *(_WORD *)(a2 + 8) = 0;
      break;
  }

uint64_t *sub_10002FFF8(uint64_t *result, uint64_t *a2)
{
  if (a2 != result)
  {
    uint64_t v3 = *a2;
    if (*a2)
    {
      *uint64_t result = v3;
      if ((v3 & 1) != 0)
      {
        __int128 v4 = *(_OWORD *)(a2 + 1);
        result[3] = a2[3];
        *(_OWORD *)(result + 1) = v4;
      }

      else
      {
        uint64_t result = (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v3 & 0xFFFFFFFFFFFFFFFELL))( a2 + 1,  result + 1,  1LL);
      }

      *a2 = 0LL;
    }

    else
    {
      return sub_100006EA4(result);
    }
  }

  return result;
}

void sub_10003006C(void *a1)
{
  void *v1 = 0LL;
  __cxa_rethrow();
}

void sub_10003007C(_Unwind_Exception *a1)
{
}

void sub_100030090(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 48);
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void **)(a1 + 40);
  xpc_object_t object = v3;
  if (v3 && xpc_get_type(v3) == (xpc_type_t)&_xpc_type_dictionary) {
    xpc_retain(v3);
  }
  else {
    xpc_object_t object = xpc_null_create();
  }
  (*(void (**)(uint64_t, void, xpc_object_t *))(v2 + 16))(v2, v1, &object);
  xpc_release(object);
}

void sub_10003011C(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void *sub_100030134(void *a1, const std::string *a2)
{
  __int128 v4 = (char *)operator new(0x20uLL);
  *(void *)__int128 v4 = &off_1002AE030;
  std::string::basic_string((std::string *)(v4 + 8), a2);
  *a1 = v4;
  return a1;
}

void sub_100030184(_Unwind_Exception *a1)
{
}

std::string *sub_100030198( std::string *a1, std::string::size_type a2, std::string::size_type a3, std::string::size_type a4, std::string *__str, uint64_t a6)
{
  uint64_t v11 = *(void **)a6;
  if (*(void *)a6) {
    uint64_t v11 = _Block_copy(v11);
  }
  unsigned int v12 = *(dispatch_object_s **)(a6 + 8);
  aBlock = v11;
  dispatch_object_t object = v12;
  if (v12) {
    dispatch_retain(v12);
  }
  sub_10003027C(a1, a2, a3, a4, &__stra, (uint64_t)&aBlock);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  return a1;
}

void sub_100030258( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

std::string *sub_10003027C( std::string *a1, std::string::size_type a2, std::string::size_type a3, std::string::size_type a4, std::string *__str, uint64_t a6)
{
  a1->__r_.__value_.__r.__words[0] = a2;
  a1->__r_.__value_.__l.__size_ = a3;
  a1->__r_.__value_.__l.__cap_ = a4;
  std::string::basic_string(a1 + 1, &__stra);
  uint64_t v11 = *(void **)a6;
  if (*(void *)a6) {
    uint64_t v11 = _Block_copy(v11);
  }
  unsigned int v12 = *(dispatch_object_s **)(a6 + 8);
  a1[2].__r_.__value_.__r.__words[0] = (std::string::size_type)v11;
  a1[2].__r_.__value_.__l.__size_ = (std::string::size_type)v12;
  if (v12) {
    dispatch_retain(v12);
  }
  return a1;
}

void sub_100030318( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100030334(uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4)
{
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = a3;
  __int128 v6 = *a4;
  *(void *)(a1 + 32) = *((void *)a4 + 2);
  *(_OWORD *)(a1 + 16) = v6;
  std::string::basic_string((std::string *)(a1 + 40), (const std::string *)a4 + 1);
  __int128 v7 = (void *)*((void *)a4 + 6);
  if (v7) {
    __int128 v7 = _Block_copy(v7);
  }
  int v8 = (dispatch_object_s *)*((void *)a4 + 7);
  *(void *)(a1 + 64) = v7;
  *(void *)(a1 + 72) = v8;
  if (v8) {
    dispatch_retain(v8);
  }
  return a1;
}

uint64_t (***sub_10003039C(uint64_t (***a1)(), uint64_t a2))()
{
  __int128 v4 = *(_OWORD *)(a2 + 16);
  v8[0] = *(_OWORD *)a2;
  v8[1] = v4;
  uint64_t v9 = *(void *)(a2 + 32);
  std::string::basic_string(&__p, (const std::string *)(a2 + 40));
  __int128 v5 = *(void **)(a2 + 64);
  if (v5) {
    __int128 v5 = _Block_copy(v5);
  }
  __int128 v6 = *(dispatch_object_s **)(a2 + 72);
  aBlock = v5;
  dispatch_object_t object = v6;
  if (v6) {
    dispatch_retain(v6);
  }
  sub_10003045C(a1, (uint64_t)v8);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  return a1;
}

void sub_100030448( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t (***sub_10003045C(uint64_t (***a1)(), uint64_t a2))()
{
  *a1 = 0LL;
  __int128 v4 = *(_OWORD *)(a2 + 16);
  v8[0] = *(_OWORD *)a2;
  v8[1] = v4;
  uint64_t v9 = *(void *)(a2 + 32);
  std::string::basic_string(&__p, (const std::string *)(a2 + 40));
  __int128 v5 = *(void **)(a2 + 64);
  if (v5) {
    __int128 v5 = _Block_copy(v5);
  }
  __int128 v6 = *(dispatch_object_s **)(a2 + 72);
  aBlock = v5;
  dispatch_object_t object = v6;
  if (v6) {
    dispatch_retain(v6);
  }
  sub_10003051C(a1, (uint64_t)v8);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  return a1;
}

void sub_100030508( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_10003051C(uint64_t (***a1)(), uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v4;
  uint64_t v10 = *(void *)(a2 + 32);
  std::string::basic_string(&__p, (const std::string *)(a2 + 40));
  __int128 v5 = *(void **)(a2 + 64);
  if (v5) {
    __int128 v5 = _Block_copy(v5);
  }
  __int128 v6 = *(dispatch_object_s **)(a2 + 72);
  aBlock = v5;
  dispatch_object_t object = v6;
  if (v6) {
    dispatch_retain(v6);
  }
  int v7 = sub_100030640((uint64_t)off_1002AE970, (uint64_t)v9, a1 + 1);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v7) {
    int v8 = off_1002AE970;
  }
  else {
    int v8 = 0LL;
  }
  *a1 = v8;
}

void sub_1000305E4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1000305F8(uint64_t *a1, _WORD *a2, int a3)
{
  if (a3 == 4)
  {
    a2[4] = 0;
  }

  else
  {
    sub_100030710(a1, a2, a3);
  }

void sub_100030618(uint64_t *a1, unsigned int a2)
{
  unsigned int v2 = a2;
  sub_10003086C(*a1, &v2);
}

uint64_t sub_100030640(uint64_t a1, uint64_t a2, void *a3)
{
  __int128 v6 = *(_OWORD *)(a2 + 16);
  v11[0] = *(_OWORD *)a2;
  v11[1] = v6;
  uint64_t v12 = *(void *)(a2 + 32);
  std::string::basic_string(&__p, (const std::string *)(a2 + 40));
  int v7 = *(void **)(a2 + 64);
  if (v7) {
    int v7 = _Block_copy(v7);
  }
  int v8 = *(dispatch_object_s **)(a2 + 72);
  aBlock = v7;
  dispatch_object_t object = v8;
  if (v8) {
    dispatch_retain(v8);
  }
  uint64_t v9 = sub_100030A78(a1, (uint64_t)v11, a3);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  return v9;
}

void sub_1000306FC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100030710(uint64_t *a1, _WORD *a2, int a3)
{
  switch(a3)
  {
    case 0:
      uint64_t v5 = *a1;
      __int128 v6 = (char *)operator new(0x50uLL);
      *(_OWORD *)__int128 v6 = *(_OWORD *)v5;
      __int128 v7 = *(_OWORD *)(v5 + 16);
      *((void *)v6 + 4) = *(void *)(v5 + 32);
      *((_OWORD *)v6 + 1) = v7;
      std::string::basic_string((std::string *)(v6 + 40), (const std::string *)(v5 + 40));
      int v8 = *(void **)(v5 + 64);
      if (v8) {
        int v8 = _Block_copy(v8);
      }
      uint64_t v9 = *(dispatch_object_s **)(v5 + 72);
      *((void *)v6 + 8) = v8;
      *((void *)v6 + 9) = v9;
      if (v9) {
        dispatch_retain(v9);
      }
      *(void *)a2 = v6;
      break;
    case 1:
      *(void *)a2 = *a1;
      *a1 = 0LL;
      break;
    case 2:
      uint64_t v10 = *(void *)a2;
      if (*(void *)a2)
      {
        uint64_t v11 = *(dispatch_object_s **)(v10 + 72);
        if (v11) {
          dispatch_release(v11);
        }
        uint64_t v12 = *(const void **)(v10 + 64);
        if (v12) {
          _Block_release(v12);
        }
        operator delete((void *)v10);
      }

      goto LABEL_19;
    case 3:
      unsigned int v13 = (const char *)(*(void *)(*(void *)a2 + 8LL) & 0x7FFFFFFFFFFFFFFFLL);
      if (v13 == (const char *)((unint64_t)"N5boost3_bi6bind_tIvNS_4_mfi3mf5IvN2nl8wpantund12XPCIPCAPI_v1EiPNS5_1"
                                                   "9NCPControlInterfaceEPvNSt3__112basic_stringIcNSA_11char_traitsIcEENS"
                                                   "A_9allocatorIcEEEEN8dispatch8callbackIU13block_pointerFvhN3xpc4dictEE"
                                                   "EEEENS0_5list6INS0_5valueIPS6_EENS_3argILi1EEENSQ_IS8_EENSQ_IS9_EENSQ"
                                                   "_ISG_EENSQ_ISN_EEEEEE" & 0x7FFFFFFFFFFFFFFFLL)
        || !strcmp( v13,  (const char *)((unint64_t)"N5boost3_bi6bind_tIvNS_4_mfi3mf5IvN2nl8wpantund12XPCIPCAPI_v1EiPNS5_19NCP ControlInterfaceEPvNSt3__112basic_stringIcNSA_11char_traitsIcEENSA_9alloc atorIcEEEEN8dispatch8callbackIU13block_pointerFvhN3xpc4dictEEEEEENS0_5lis t6INS0_5valueIPS6_EENS_3argILi1EEENSQ_IS8_EENSQ_IS9_EENSQ_ISG_EENSQ_ISN_EEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))
      {
        *(void *)a2 = *a1;
      }

      else
      {
LABEL_19:
        *(void *)a2 = 0LL;
      }

      break;
    default:
      a2[4] = 0;
      break;
  }

void sub_100030858(_Unwind_Exception *a1)
{
}

void sub_10003086C(uint64_t a1, unsigned int *a2)
{
  unsigned int v2 = a2;
  sub_1000308A0((const std::string *)(a1 + 16), a1, &v2);
}

void sub_1000308A0(const std::string *a1, uint64_t a2, unsigned int **a3)
{
  uint64_t v5 = **a3;
  uint64_t v7 = a1->__r_.__value_.__r.__words[0];
  uint64_t size = a1->__r_.__value_.__l.__size_;
  uint64_t cap = a1->__r_.__value_.__l.__cap_;
  std::string::basic_string(&__str, a1 + 1);
  uint64_t data = a1[2].__r_.__value_.__l.__data_;
  if (data) {
    uint64_t data = _Block_copy(data);
  }
  uint64_t v10 = (dispatch_object_s *)a1[2].__r_.__value_.__l.__size_;
  aBlock = data;
  dispatch_object_t object = v10;
  if (v10) {
    dispatch_retain(v10);
  }
  sub_100030988(a2, v7, v5, size, cap, &__str, (uint64_t)&aBlock);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
}

void sub_100030964( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_100030988( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, std::string *__str, uint64_t a7)
{
  uint64_t v12 = *(void (**)(void *, uint64_t, uint64_t, uint64_t, std::string *, void **))a1;
  uint64_t v11 = *(void *)(a1 + 8);
  unsigned int v13 = (void *)(a2 + (v11 >> 1));
  if ((v11 & 1) != 0) {
    uint64_t v12 = *(void (**)(void *, uint64_t, uint64_t, uint64_t, std::string *, void **))(*v13 + v12);
  }
  std::string::basic_string(&v18, __str);
  uint64_t v14 = *(void **)a7;
  if (*(void *)a7) {
    uint64_t v14 = _Block_copy(v14);
  }
  uint64_t v15 = *(dispatch_object_s **)(a7 + 8);
  aBlock = v14;
  dispatch_object_t object = v15;
  if (v15) {
    dispatch_retain(v15);
  }
  v12(v13, a3, a4, a5, &v18, &aBlock);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
}

void sub_100030A54( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_100030A78(uint64_t a1, uint64_t a2, void *a3)
{
  __int128 v6 = *(_OWORD *)(a2 + 16);
  v10[0] = *(_OWORD *)a2;
  v10[1] = v6;
  uint64_t v11 = *(void *)(a2 + 32);
  std::string::basic_string(&__p, (const std::string *)(a2 + 40));
  uint64_t v7 = *(void **)(a2 + 64);
  if (v7) {
    uint64_t v7 = _Block_copy(v7);
  }
  int v8 = *(dispatch_object_s **)(a2 + 72);
  aBlock = v7;
  dispatch_object_t object = v8;
  if (v8) {
    dispatch_retain(v8);
  }
  sub_100030B44(a1, (uint64_t)v10, a3);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  return 1LL;
}

void sub_100030B30( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100030B44(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = (char *)operator new(0x50uLL);
  __int128 v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v5 = *(_OWORD *)a2;
  *((_OWORD *)v5 + 1) = v6;
  *((void *)v5 + 4) = *(void *)(a2 + 32);
  std::string::basic_string((std::string *)(v5 + 40), (const std::string *)(a2 + 40));
  uint64_t v7 = *(void **)(a2 + 64);
  if (v7) {
    uint64_t v7 = _Block_copy(v7);
  }
  int v8 = *(dispatch_object_s **)(a2 + 72);
  *((void *)v5 + 8) = v7;
  *((void *)v5 + 9) = v8;
  if (v8) {
    dispatch_retain(v8);
  }
  *a3 = v5;
}

void sub_100030BBC(_Unwind_Exception *a1)
{
}

uint64_t sub_100030BD0( uint64_t a1, uint64_t a2, uint64_t a3, std::string *__str, const std::string *a5, uint64_t a6)
{
  uint64_t v11 = *(void **)a6;
  if (*(void *)a6) {
    uint64_t v11 = _Block_copy(v11);
  }
  uint64_t v12 = *(dispatch_object_s **)(a6 + 8);
  aBlock = v11;
  dispatch_object_t object = v12;
  if (v12) {
    dispatch_retain(v12);
  }
  sub_100030CE8(a1, a2, a3, &__stra, &v16, (uint64_t)&aBlock);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  return a1;
}

void sub_100030CAC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20, char a21, char a22)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_100030CE8( uint64_t a1, uint64_t a2, uint64_t a3, std::string *__str, const std::string *a5, uint64_t a6)
{
  uint64_t v11 = *(void **)a6;
  if (*(void *)a6) {
    uint64_t v11 = _Block_copy(v11);
  }
  uint64_t v12 = *(dispatch_object_s **)(a6 + 8);
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v12;
  if (v12) {
    dispatch_retain(v12);
  }
  return a1;
}

void sub_100030DA4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100030DD8(uint64_t a1, uint64_t a2, uint64_t a3, std::string *__str, const std::string *a5)
{
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = a3;
  std::string::basic_string((std::string *)(a1 + 16), &__stra);
  std::string::basic_string((std::string *)(a1 + 40), a5);
  return a1;
}

void sub_100030E50( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
}

uint64_t sub_100030E80(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  std::string::basic_string((std::string *)(a1 + 16), (const std::string *)(a2 + 16));
  std::string::basic_string((std::string *)(a1 + 40), (const std::string *)(a2 + 40));
  __int128 v4 = *(void **)(a2 + 64);
  if (v4) {
    __int128 v4 = _Block_copy(v4);
  }
  uint64_t v5 = *(dispatch_object_s **)(a2 + 72);
  *(void *)(a1 + 64) = v4;
  *(void *)(a1 + 72) = v5;
  if (v5) {
    dispatch_retain(v5);
  }
  return a1;
}

void sub_100030EF0(_Unwind_Exception *exception_object)
{
}

uint64_t (***sub_100030F0C(uint64_t (***a1)(), __int128 *a2))()
{
  __int128 v4 = *a2;
  sub_100030E80((uint64_t)&v5, (uint64_t)(a2 + 1));
  sub_100030FA8(a1, &v4);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v9 < 0) {
    operator delete(__p);
  }
  if (v7 < 0) {
    operator delete(v6);
  }
  return a1;
}

void sub_100030F94( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t (***sub_100030FA8(uint64_t (***a1)(), __int128 *a2))()
{
  *a1 = 0LL;
  __int128 v4 = *a2;
  sub_100030E80((uint64_t)&v5, (uint64_t)(a2 + 1));
  sub_100031044(a1, &v4);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v9 < 0) {
    operator delete(__p);
  }
  if (v7 < 0) {
    operator delete(v6);
  }
  return a1;
}

void sub_100031030( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100031044(uint64_t (***a1)(), __int128 *a2)
{
  __int128 v5 = *a2;
  sub_100030E80((uint64_t)&v6, (uint64_t)(a2 + 1));
  int v3 = sub_100031144((uint64_t)off_1002AE990, &v5, a1 + 1);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v10 < 0) {
    operator delete(__p);
  }
  if (v8 < 0) {
    operator delete(v7);
  }
  if (v3) {
    __int128 v4 = off_1002AE990;
  }
  else {
    __int128 v4 = 0LL;
  }
  *a1 = v4;
}

void sub_1000310E8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1000310FC(_OWORD **a1, _WORD *a2, int a3)
{
  if (a3 == 4)
  {
    a2[4] = 0;
  }

  else
  {
    sub_1000311E8(a1, a2, a3);
  }

void sub_10003111C(uint64_t *a1, unsigned int a2)
{
  unsigned int v2 = a2;
  sub_10003131C(*a1, &v2);
}

uint64_t sub_100031144(uint64_t a1, __int128 *a2, void *a3)
{
  __int128 v7 = *a2;
  sub_100030E80((uint64_t)&v8, (uint64_t)(a2 + 1));
  uint64_t v5 = sub_10003158C(a1, &v7, a3);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v12 < 0) {
    operator delete(__p);
  }
  if (v10 < 0) {
    operator delete(v9);
  }
  return v5;
}

void sub_1000311D4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1000311E8(_OWORD **a1, _WORD *a2, int a3)
{
  switch(a3)
  {
    case 0:
      uint64_t v5 = *a1;
      uint64_t v6 = operator new(0x60uLL);
      *uint64_t v6 = *v5;
      sub_100030E80((uint64_t)(v6 + 1), (uint64_t)(v5 + 1));
      *(void *)a2 = v6;
      break;
    case 1:
      *(void *)a2 = *a1;
      *a1 = 0LL;
      break;
    case 2:
      uint64_t v7 = *(void *)a2;
      if (*(void *)a2)
      {
        uint64_t v8 = *(dispatch_object_s **)(v7 + 88);
        if (v8) {
          dispatch_release(v8);
        }
        char v9 = *(const void **)(v7 + 80);
        if (v9) {
          _Block_release(v9);
        }
        operator delete((void *)v7);
      }

      goto LABEL_17;
    case 3:
      char v10 = (const char *)(*(void *)(*(void *)a2 + 8LL) & 0x7FFFFFFFFFFFFFFFLL);
      if (v10 == (const char *)((unint64_t)"N5boost3_bi6bind_tIvNS_4_mfi3mf5IvN2nl8wpantund12XPCIPCAPI_v1EiPvNSt3"
                                                   "__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEESE_N8disp"
                                                   "atch8callbackIU13block_pointerFvhN3xpc4dictEEEEEENS0_5list6INS0_5valu"
                                                   "eIPS6_EENS_3argILi1EEENSO_IS7_EENSO_ISE_EESU_NSO_ISL_EEEEEE" & 0x7FFFFFFFFFFFFFFFLL)
        || !strcmp( v10,  (const char *)((unint64_t)"N5boost3_bi6bind_tIvNS_4_mfi3mf5IvN2nl8wpantund12XPCIPCAPI_v1EiPvNSt3__11 2basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEESE_N8dispatch8cal lbackIU13block_pointerFvhN3xpc4dictEEEEEENS0_5list6INS0_5valueIPS6_EENS_3 argILi1EEENSO_IS7_EENSO_ISE_EESU_NSO_ISL_EEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))
      {
        *(void *)a2 = *a1;
      }

      else
      {
LABEL_17:
        *(void *)a2 = 0LL;
      }

      break;
    default:
      a2[4] = 0;
      break;
  }

void sub_100031308(_Unwind_Exception *a1)
{
}

void sub_10003131C(uint64_t a1, unsigned int *a2)
{
  unsigned int v2 = a2;
  sub_100031350(a1 + 16, a1, &v2);
}

void sub_100031350(uint64_t a1, uint64_t a2, unsigned int **a3)
{
  uint64_t v5 = **a3;
  uint64_t v7 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  std::string::basic_string(&__str, (const std::string *)(a1 + 16));
  std::string::basic_string(&v12, (const std::string *)(a1 + 40));
  uint64_t v8 = *(void **)(a1 + 64);
  if (v8) {
    uint64_t v8 = _Block_copy(v8);
  }
  char v9 = *(dispatch_object_s **)(a1 + 72);
  aBlock = v8;
  dispatch_object_t object = v9;
  if (v9) {
    dispatch_retain(v9);
  }
  sub_100031468(a2, v7, v5, v6, &__str, &v12, (uint64_t)&aBlock);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
}

void sub_10003142C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20, char a21, char a22)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  _Unwind_Resume(a1);
}

void sub_100031468( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, std::string *__str, const std::string *a6, uint64_t a7)
{
  std::string v12 = *(void (**)(void *, uint64_t, uint64_t, std::string *, std::string *, void **))a1;
  uint64_t v11 = *(void *)(a1 + 8);
  unsigned int v13 = (void *)(a2 + (v11 >> 1));
  if ((v11 & 1) != 0) {
    std::string v12 = *(void (**)(void *, uint64_t, uint64_t, std::string *, std::string *, void **))(*v13 + v12);
  }
  std::string::basic_string(&v19, __str);
  std::string::basic_string(&v18, a6);
  uint64_t v14 = *(void **)a7;
  if (*(void *)a7) {
    uint64_t v14 = _Block_copy(v14);
  }
  uint64_t v15 = *(dispatch_object_s **)(a7 + 8);
  aBlock = v14;
  dispatch_object_t object = v15;
  if (v15) {
    dispatch_retain(v15);
  }
  v12(v13, a3, a4, &v19, &v18, &aBlock);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
}

void sub_100031550( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20, char a21, char a22)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10003158C(uint64_t a1, __int128 *a2, void *a3)
{
  __int128 v6 = *a2;
  sub_100030E80((uint64_t)&v7, (uint64_t)(a2 + 1));
  sub_10003162C(a1, &v6, a3);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v11 < 0) {
    operator delete(__p);
  }
  if (v9 < 0) {
    operator delete(v8);
  }
  return 1LL;
}

void sub_100031618( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_10003162C(uint64_t a1, _OWORD *a2, void *a3)
{
  uint64_t v5 = operator new(0x60uLL);
  *uint64_t v5 = *a2;
  uint64_t result = sub_100030E80((uint64_t)(v5 + 1), (uint64_t)(a2 + 1));
  *a3 = v5;
  return result;
}

void sub_100031674(_Unwind_Exception *a1)
{
}

uint64_t sub_100031688( uint64_t a1, uint64_t a2, std::string *__str, const std::string *a4, const std::string *a5, uint64_t a6)
{
  char v11 = *(void **)a6;
  if (*(void *)a6) {
    char v11 = _Block_copy(v11);
  }
  std::string v12 = *(dispatch_object_s **)(a6 + 8);
  aBlock = v11;
  dispatch_object_t object = v12;
  if (v12) {
    dispatch_retain(v12);
  }
  sub_1000317D4(a1, a2, &__stra, &v17, &v16, (uint64_t)&aBlock);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  return a1;
}

void sub_100031780( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20, __int16 a21, char a22, char a23, void *a24, uint64_t a25, int a26, __int16 a27, char a28, char a29)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  if (a29 < 0) {
    operator delete(a24);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1000317D4( uint64_t a1, uint64_t a2, std::string *__str, const std::string *a4, const std::string *a5, uint64_t a6)
{
  char v11 = *(void **)a6;
  if (*(void *)a6) {
    char v11 = _Block_copy(v11);
  }
  std::string v12 = *(dispatch_object_s **)(a6 + 8);
  *(void *)(a1 + 80) = v11;
  *(void *)(a1 + 88) = v12;
  if (v12) {
    dispatch_retain(v12);
  }
  return a1;
}

void sub_1000318AC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20, char a21, void *a22, uint64_t a23, int a24, __int16 a25, char a26, char a27)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1000318F8( uint64_t a1, uint64_t a2, std::string *__str, const std::string *a4, const std::string *a5)
{
  return a1;
}

void sub_10003198C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
}

uint64_t sub_1000319D0(uint64_t a1, uint64_t a2, std::string *__str, const std::string *a4)
{
  *(void *)a1 = a2;
  std::string::basic_string((std::string *)(a1 + 8), &__stra);
  std::string::basic_string((std::string *)(a1 + 32), a4);
  return a1;
}

void sub_100031A44( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
}

uint64_t sub_100031A74(uint64_t a1, uint64_t a2)
{
  __int128 v4 = (const std::string *)(a2 + 32);
  *(void *)a1 = *(void *)a2;
  uint64_t v5 = (std::string *)(a1 + 32);
  std::string::basic_string((std::string *)(a1 + 8), (const std::string *)(a2 + 8));
  std::string::basic_string(v5, v4);
  std::string::basic_string((std::string *)(a1 + 56), (const std::string *)(a2 + 56));
  __int128 v6 = *(void **)(a2 + 80);
  if (v6) {
    __int128 v6 = _Block_copy(v6);
  }
  uint64_t v7 = *(dispatch_object_s **)(a2 + 88);
  *(void *)(a1 + 80) = v6;
  *(void *)(a1 + 88) = v7;
  if (v7) {
    dispatch_retain(v7);
  }
  return a1;
}

void sub_100031B04(_Unwind_Exception *a1)
{
}

uint64_t (***sub_100031B30(uint64_t (***a1)(), __int128 *a2))()
{
  __int128 v4 = *a2;
  sub_100031A74((uint64_t)&v5, (uint64_t)(a2 + 1));
  sub_100031BE0(a1, &v4);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v11 < 0) {
    operator delete(__p);
  }
  if (v9 < 0) {
    operator delete(v8);
  }
  if (v7 < 0) {
    operator delete(v6);
  }
  return a1;
}

void sub_100031BCC(_Unwind_Exception *a1)
{
}

uint64_t (***sub_100031BE0(uint64_t (***a1)(), __int128 *a2))()
{
  *a1 = 0LL;
  __int128 v4 = *a2;
  sub_100031A74((uint64_t)&v5, (uint64_t)(a2 + 1));
  sub_100031C90(a1, &v4);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v11 < 0) {
    operator delete(__p);
  }
  if (v9 < 0) {
    operator delete(v8);
  }
  if (v7 < 0) {
    operator delete(v6);
  }
  return a1;
}

void sub_100031C7C(_Unwind_Exception *a1)
{
}

void sub_100031C90(uint64_t (***a1)(), __int128 *a2)
{
  __int128 v5 = *a2;
  sub_100031A74((uint64_t)&v6, (uint64_t)(a2 + 1));
  int v3 = sub_100031DA4((uint64_t)off_1002AE9B0, &v5, a1 + 1);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v12 < 0) {
    operator delete(__p);
  }
  if (v10 < 0) {
    operator delete(v9);
  }
  if (v8 < 0) {
    operator delete(v7);
  }
  if (v3) {
    __int128 v4 = off_1002AE9B0;
  }
  else {
    __int128 v4 = 0LL;
  }
  *a1 = v4;
}

void sub_100031D48(_Unwind_Exception *a1)
{
}

void sub_100031D5C(_OWORD **a1, _WORD *a2, int a3)
{
  if (a3 == 4)
  {
    a2[4] = 0;
  }

  else
  {
    sub_100031E64(a1, a2, a3);
  }

void sub_100031D7C(uint64_t *a1, unsigned int a2, unsigned int *a3)
{
  unsigned int v3 = a2;
  sub_100031F64(*a1, &v3, a3);
}

uint64_t sub_100031DA4(uint64_t a1, __int128 *a2, void *a3)
{
  __int128 v7 = *a2;
  sub_100031A74((uint64_t)&v8, (uint64_t)(a2 + 1));
  uint64_t v5 = sub_100032254(a1, &v7, a3);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v14 < 0) {
    operator delete(__p);
  }
  if (v12 < 0) {
    operator delete(v11);
  }
  if (v10 < 0) {
    operator delete(v9);
  }
  return v5;
}

void sub_100031E50(_Unwind_Exception *a1)
{
}

void sub_100031E64(_OWORD **a1, _WORD *a2, int a3)
{
  switch(a3)
  {
    case 0:
      uint64_t v5 = *a1;
      uint64_t v6 = operator new(0x70uLL);
      *uint64_t v6 = *v5;
      sub_100031A74((uint64_t)(v6 + 1), (uint64_t)(v5 + 1));
      *(void *)a2 = v6;
      break;
    case 1:
      *(void *)a2 = *a1;
      *a1 = 0LL;
      break;
    case 2:
      __int128 v7 = *(void **)a2;
      if (*(void *)a2)
      {
        sub_10002B944((uint64_t)v7 + 16);
        operator delete(v7);
      }

      goto LABEL_7;
    case 3:
      uint64_t v8 = (const char *)(*(void *)(*(void *)a2 + 8LL) & 0x7FFFFFFFFFFFFFFFLL);
      if (v8 == (const char *)((unint64_t)"N5boost3_bi6bind_tIvNS_4_mfi3mf6IvN2nl8wpantund12XPCIPCAPI_v1EiRKNS_3a"
                                                  "nyENSt3__112basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEESG_"
                                                  "SG_N8dispatch8callbackIU13block_pointerFvhN3xpc4dictEEEEEENS0_5list7IN"
                                                  "S0_5valueIPS6_EENS_3argILi1EEENST_ILi2EEENSQ_ISG_EESW_SW_NSQ_ISN_EEEEEE" & 0x7FFFFFFFFFFFFFFFLL)
        || !strcmp( v8,  (const char *)((unint64_t)"N5boost3_bi6bind_tIvNS_4_mfi3mf6IvN2nl8wpantund12XPCIPCAPI_v1EiRKNS_3anyE NSt3__112basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEESG_SG_N8d ispatch8callbackIU13block_pointerFvhN3xpc4dictEEEEEENS0_5list7INS0_5value IPS6_EENS_3argILi1EEENST_ILi2EEENSQ_ISG_EESW_SW_NSQ_ISN_EEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))
      {
        *(void *)a2 = *a1;
      }

      else
      {
LABEL_7:
        *(void *)a2 = 0LL;
      }

      break;
    default:
      a2[4] = 0;
      break;
  }

void sub_100031F50(_Unwind_Exception *a1)
{
}

void sub_100031F64(uint64_t a1, unsigned int *a2, unsigned int *a3)
{
  v3[0] = a2;
  v3[1] = a3;
  sub_100031F98(a1 + 16, a1, v3);
}

void sub_100031F98(uint64_t a1, uint64_t a2, unsigned int **a3)
{
  uint64_t v6 = (const std::string *)(a1 + 32);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = (uint64_t)a3[1];
  uint64_t v8 = **a3;
  std::string::basic_string(&__str, (const std::string *)(a1 + 8));
  std::string::basic_string(&v14, v6);
  std::string::basic_string(&v13, (const std::string *)(a1 + 56));
  char v9 = *(void **)(a1 + 80);
  if (v9) {
    char v9 = _Block_copy(v9);
  }
  char v10 = *(dispatch_object_s **)(a1 + 88);
  aBlock = v9;
  dispatch_object_t object = v10;
  if (v10) {
    dispatch_retain(v10);
  }
  sub_1000320EC(a2, v5, v8, v7, &__str, &v14, &v13, (uint64_t)&aBlock);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
}

void sub_100032098( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20, __int16 a21, char a22, char a23, void *a24, uint64_t a25, int a26, __int16 a27, char a28, char a29)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  if (a29 < 0) {
    operator delete(a24);
  }
  _Unwind_Resume(a1);
}

void sub_1000320EC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, std::string *__str, const std::string *a6, const std::string *a7, uint64_t a8)
{
  std::string v14 = *(void (**)(void *, uint64_t, uint64_t, std::string *, std::string *, std::string *, void **))a1;
  uint64_t v13 = *(void *)(a1 + 8);
  std::string v15 = (void *)(a2 + (v13 >> 1));
  if ((v13 & 1) != 0) {
    std::string v14 = *(void (**)(void *, uint64_t, uint64_t, std::string *, std::string *, std::string *, void **))(*v15 + v14);
  }
  std::string::basic_string(&v22, __str);
  std::string::basic_string(&v21, a6);
  std::string::basic_string(&v20, a7);
  uint64_t v16 = *(void **)a8;
  if (*(void *)a8) {
    uint64_t v16 = _Block_copy(v16);
  }
  std::string v17 = *(dispatch_object_s **)(a8 + 8);
  aBlock = v16;
  dispatch_object_t object = v17;
  if (v17) {
    dispatch_retain(v17);
  }
  v14(v15, a3, a4, &v22, &v21, &v20, &aBlock);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
}

void sub_100032200( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20, __int16 a21, char a22, char a23, void *a24, uint64_t a25, int a26, __int16 a27, char a28, char a29)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  if (a29 < 0) {
    operator delete(a24);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_100032254(uint64_t a1, __int128 *a2, void *a3)
{
  __int128 v6 = *a2;
  sub_100031A74((uint64_t)&v7, (uint64_t)(a2 + 1));
  sub_100032310(a1, &v6, a3);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v13 < 0) {
    operator delete(__p);
  }
  if (v11 < 0) {
    operator delete(v10);
  }
  if (v9 < 0) {
    operator delete(v8);
  }
  return 1LL;
}

void sub_1000322FC(_Unwind_Exception *a1)
{
}

uint64_t sub_100032310(uint64_t a1, _OWORD *a2, void *a3)
{
  uint64_t v5 = operator new(0x70uLL);
  *uint64_t v5 = *a2;
  uint64_t result = sub_100031A74((uint64_t)(v5 + 1), (uint64_t)(a2 + 1));
  *a3 = v5;
  return result;
}

void sub_100032358(_Unwind_Exception *a1)
{
}

uint64_t sub_10003236C( uint64_t a1, uint64_t a2, uint64_t a3, std::string *__str, const std::string *a5, const std::string *a6, uint64_t a7)
{
  char v13 = *(void **)a7;
  if (*(void *)a7) {
    char v13 = _Block_copy(v13);
  }
  std::string v14 = *(dispatch_object_s **)(a7 + 8);
  aBlock = v13;
  dispatch_object_t object = v14;
  if (v14) {
    dispatch_retain(v14);
  }
  sub_1000324C0(a1, a2, a3, &__stra, &v19, &v18, (uint64_t)&aBlock);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  return a1;
}

void sub_10003246C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20, __int16 a21, char a22, char a23, void *a24, uint64_t a25, int a26, __int16 a27, char a28, char a29)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  if (a29 < 0) {
    operator delete(a24);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1000324C0( uint64_t a1, uint64_t a2, uint64_t a3, std::string *__str, const std::string *a5, const std::string *a6, uint64_t a7)
{
  char v13 = *(void **)a7;
  if (*(void *)a7) {
    char v13 = _Block_copy(v13);
  }
  std::string v14 = *(dispatch_object_s **)(a7 + 8);
  *(void *)(a1 + 88) = v13;
  *(void *)(a1 + sub_10001C704(v1 - 96) = v14;
  if (v14) {
    dispatch_retain(v14);
  }
  return a1;
}

void sub_1000325A0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20, char a21, void *a22, uint64_t a23, int a24, __int16 a25, char a26, char a27)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1000325EC( uint64_t a1, uint64_t a2, uint64_t a3, std::string *__str, const std::string *a5, const std::string *a6)
{
  return a1;
}

void sub_100032690( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
}

uint64_t sub_1000326D4(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  std::string::basic_string((std::string *)(a1 + 16), (const std::string *)(a2 + 16));
  std::string::basic_string((std::string *)(a1 + 40), (const std::string *)(a2 + 40));
  std::string::basic_string((std::string *)(a1 + 64), (const std::string *)(a2 + 64));
  __int128 v4 = *(void **)(a2 + 88);
  if (v4) {
    __int128 v4 = _Block_copy(v4);
  }
  uint64_t v5 = *(dispatch_object_s **)(a2 + 96);
  *(void *)(a1 + 88) = v4;
  *(void *)(a1 + sub_10001C704(v1 - 96) = v5;
  if (v5) {
    dispatch_retain(v5);
  }
  return a1;
}

void sub_100032750(_Unwind_Exception *a1)
{
}

uint64_t (***sub_10003277C(uint64_t (***a1)(), __int128 *a2))()
{
  __int128 v4 = *a2;
  sub_1000326D4((uint64_t)&v5, (uint64_t)(a2 + 1));
  sub_10003282C(a1, &v4);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v11 < 0) {
    operator delete(__p);
  }
  if (v9 < 0) {
    operator delete(v8);
  }
  if (v7 < 0) {
    operator delete(v6);
  }
  return a1;
}

void sub_100032818(_Unwind_Exception *a1)
{
}

uint64_t (***sub_10003282C(uint64_t (***a1)(), __int128 *a2))()
{
  *a1 = 0LL;
  __int128 v4 = *a2;
  sub_1000326D4((uint64_t)&v5, (uint64_t)(a2 + 1));
  sub_1000328DC(a1, &v4);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v11 < 0) {
    operator delete(__p);
  }
  if (v9 < 0) {
    operator delete(v8);
  }
  if (v7 < 0) {
    operator delete(v6);
  }
  return a1;
}

void sub_1000328C8(_Unwind_Exception *a1)
{
}

void sub_1000328DC(uint64_t (***a1)(), __int128 *a2)
{
  __int128 v5 = *a2;
  sub_1000326D4((uint64_t)&v6, (uint64_t)(a2 + 1));
  int v3 = sub_1000329F0((uint64_t)off_1002AE9D0, &v5, a1 + 1);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v12 < 0) {
    operator delete(__p);
  }
  if (v10 < 0) {
    operator delete(v9);
  }
  if (v8 < 0) {
    operator delete(v7);
  }
  if (v3) {
    __int128 v4 = off_1002AE9D0;
  }
  else {
    __int128 v4 = 0LL;
  }
  *a1 = v4;
}

void sub_100032994(_Unwind_Exception *a1)
{
}

void sub_1000329A8(_OWORD **a1, _WORD *a2, int a3)
{
  if (a3 == 4)
  {
    a2[4] = 0;
  }

  else
  {
    sub_100032AB0(a1, a2, a3);
  }

void sub_1000329C8(uint64_t *a1, unsigned int a2)
{
  unsigned int v2 = a2;
  sub_100032BB0(*a1, &v2);
}

uint64_t sub_1000329F0(uint64_t a1, __int128 *a2, void *a3)
{
  __int128 v7 = *a2;
  sub_1000326D4((uint64_t)&v8, (uint64_t)(a2 + 1));
  uint64_t v5 = sub_100032E9C(a1, &v7, a3);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v14 < 0) {
    operator delete(__p);
  }
  if (v12 < 0) {
    operator delete(v11);
  }
  if (v10 < 0) {
    operator delete(v9);
  }
  return v5;
}

void sub_100032A9C(_Unwind_Exception *a1)
{
}

void sub_100032AB0(_OWORD **a1, _WORD *a2, int a3)
{
  switch(a3)
  {
    case 0:
      uint64_t v5 = *a1;
      uint64_t v6 = operator new(0x78uLL);
      *uint64_t v6 = *v5;
      sub_1000326D4((uint64_t)(v6 + 1), (uint64_t)(v5 + 1));
      *(void *)a2 = v6;
      break;
    case 1:
      *(void *)a2 = *a1;
      *a1 = 0LL;
      break;
    case 2:
      __int128 v7 = *(void **)a2;
      if (*(void *)a2)
      {
        sub_10002B9F0((uint64_t)v7 + 16);
        operator delete(v7);
      }

      goto LABEL_7;
    case 3:
      uint64_t v8 = (const char *)(*(void *)(*(void *)a2 + 8LL) & 0x7FFFFFFFFFFFFFFFLL);
      if (v8 == (const char *)((unint64_t)"N5boost3_bi6bind_tIvNS_4_mfi3mf6IvN2nl8wpantund12XPCIPCAPI_v1EiPvNSt3_"
                                                  "_112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEESE_SE_N8dis"
                                                  "patch8callbackIU13block_pointerFvhN3xpc4dictEEEEEENS0_5list7INS0_5valu"
                                                  "eIPS6_EENS_3argILi1EEENSO_IS7_EENSO_ISE_EESU_SU_NSO_ISL_EEEEEE" & 0x7FFFFFFFFFFFFFFFLL)
        || !strcmp( v8,  (const char *)((unint64_t)"N5boost3_bi6bind_tIvNS_4_mfi3mf6IvN2nl8wpantund12XPCIPCAPI_v1EiPvNSt3__11 2basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEESE_SE_N8dispatch8 callbackIU13block_pointerFvhN3xpc4dictEEEEEENS0_5list7INS0_5valueIPS6_EEN S_3argILi1EEENSO_IS7_EENSO_ISE_EESU_SU_NSO_ISL_EEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))
      {
        *(void *)a2 = *a1;
      }

      else
      {
LABEL_7:
        *(void *)a2 = 0LL;
      }

      break;
    default:
      a2[4] = 0;
      break;
  }

void sub_100032B9C(_Unwind_Exception *a1)
{
}

void sub_100032BB0(uint64_t a1, unsigned int *a2)
{
  unsigned int v2 = a2;
  sub_100032BE4(a1 + 16, a1, &v2);
}

void sub_100032BE4(uint64_t a1, uint64_t a2, unsigned int **a3)
{
  uint64_t v5 = **a3;
  uint64_t v7 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  std::string::basic_string(&__str, (const std::string *)(a1 + 16));
  std::string::basic_string(&v13, (const std::string *)(a1 + 40));
  std::string::basic_string(&v12, (const std::string *)(a1 + 64));
  uint64_t v8 = *(void **)(a1 + 88);
  if (v8) {
    uint64_t v8 = _Block_copy(v8);
  }
  char v9 = *(dispatch_object_s **)(a1 + 96);
  aBlock = v8;
  dispatch_object_t object = v9;
  if (v9) {
    dispatch_retain(v9);
  }
  sub_100032D34(a2, v7, v5, v6, &__str, &v13, &v12, (uint64_t)&aBlock);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
}

void sub_100032CE0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20, __int16 a21, char a22, char a23, void *a24, uint64_t a25, int a26, __int16 a27, char a28, char a29)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  if (a29 < 0) {
    operator delete(a24);
  }
  _Unwind_Resume(a1);
}

void sub_100032D34( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, std::string *__str, const std::string *a6, const std::string *a7, uint64_t a8)
{
  char v14 = *(void (**)(void *, uint64_t, uint64_t, std::string *, std::string *, std::string *, void **))a1;
  uint64_t v13 = *(void *)(a1 + 8);
  std::string v15 = (void *)(a2 + (v13 >> 1));
  if ((v13 & 1) != 0) {
    char v14 = *(void (**)(void *, uint64_t, uint64_t, std::string *, std::string *, std::string *, void **))(*v15 + v14);
  }
  std::string::basic_string(&v22, __str);
  std::string::basic_string(&v21, a6);
  std::string::basic_string(&v20, a7);
  std::string v16 = *(void **)a8;
  if (*(void *)a8) {
    std::string v16 = _Block_copy(v16);
  }
  std::string v17 = *(dispatch_object_s **)(a8 + 8);
  aBlock = v16;
  dispatch_object_t object = v17;
  if (v17) {
    dispatch_retain(v17);
  }
  v14(v15, a3, a4, &v22, &v21, &v20, &aBlock);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
}

void sub_100032E48( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20, __int16 a21, char a22, char a23, void *a24, uint64_t a25, int a26, __int16 a27, char a28, char a29)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  if (a29 < 0) {
    operator delete(a24);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_100032E9C(uint64_t a1, __int128 *a2, void *a3)
{
  __int128 v6 = *a2;
  sub_1000326D4((uint64_t)&v7, (uint64_t)(a2 + 1));
  sub_100032F58(a1, &v6, a3);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v13 < 0) {
    operator delete(__p);
  }
  if (v11 < 0) {
    operator delete(v10);
  }
  if (v9 < 0) {
    operator delete(v8);
  }
  return 1LL;
}

void sub_100032F44(_Unwind_Exception *a1)
{
}

uint64_t sub_100032F58(uint64_t a1, _OWORD *a2, void *a3)
{
  uint64_t v5 = operator new(0x78uLL);
  *uint64_t v5 = *a2;
  uint64_t result = sub_1000326D4((uint64_t)(v5 + 1), (uint64_t)(a2 + 1));
  *a3 = v5;
  return result;
}

void sub_100032FA0(_Unwind_Exception *a1)
{
}

void *sub_100032FBC()
{
}

_BYTE *sub_100032FC8(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  *(void *)uint64_t result = &off_1002AEA00;
  result[8] = *(_BYTE *)(a1 + 8);
  return result;
}

void sub_100033000(uint64_t a1)
{
}

void sub_100033010(uint64_t *a1, unsigned __int8 *a2, void **a3)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a2;
  uint64_t v5 = *a3;
  xpc_object_t object = v5;
  if (v5) {
    xpc_retain(v5);
  }
  else {
    xpc_object_t object = xpc_null_create();
  }
  (*(void (**)(uint64_t, uint64_t, xpc_object_t *))(v3 + 16))(v3, v4, &object);
  xpc_release(object);
}

void sub_100033074(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

_DWORD *sub_10003308C(uint64_t **a1, int *a2, _DWORD *a3)
{
  uint64_t v5 = (void **)sub_10000D058((uint64_t)a1, &v11, a2);
  __int128 v6 = *v5;
  if (!*v5)
  {
    uint64_t v7 = v5;
    __int128 v6 = operator new(0x20uLL);
    v9[1] = a1 + 1;
    _DWORD v6[7] = *a3;
    char v10 = 1;
    sub_10000AF70(a1, v11, (void **)v7, v6);
    v9[0] = 0LL;
    sub_10000D0A8(v9, 0LL);
  }

  return v6;
}

void *sub_100033134(void *a1, uint64_t *a2)
{
  uint64_t v4 = sub_10000C8F8(a1);
  sub_10000CE1C((uint64_t)v4, *a2, (uint64_t)(a2 + 1));
  return a1;
}

void sub_100033168(_Unwind_Exception *a1)
{
}

uint64_t (***sub_10003317C(uint64_t (***a1)(), __int128 *a2))()
{
  __int128 v4 = *a2;
  sub_100030E80((uint64_t)&v5, (uint64_t)(a2 + 1));
  sub_100033218(a1, &v4);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v9 < 0) {
    operator delete(__p);
  }
  if (v7 < 0) {
    operator delete(v6);
  }
  return a1;
}

void sub_100033204( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t (***sub_100033218(uint64_t (***a1)(), __int128 *a2))()
{
  *a1 = 0LL;
  __int128 v4 = *a2;
  sub_100030E80((uint64_t)&v5, (uint64_t)(a2 + 1));
  sub_1000332B4(a1, &v4);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v9 < 0) {
    operator delete(__p);
  }
  if (v7 < 0) {
    operator delete(v6);
  }
  return a1;
}

void sub_1000332A0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1000332B4(uint64_t (***a1)(), __int128 *a2)
{
  __int128 v5 = *a2;
  sub_100030E80((uint64_t)&v6, (uint64_t)(a2 + 1));
  int v3 = sub_100033394((uint64_t)off_1002AEA68, &v5, a1 + 1);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v10 < 0) {
    operator delete(__p);
  }
  if (v8 < 0) {
    operator delete(v7);
  }
  if (v3) {
    __int128 v4 = off_1002AEA68;
  }
  else {
    __int128 v4 = 0LL;
  }
  *a1 = v4;
}

void sub_100033358( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_10003336C(uint64_t *a1, unsigned int a2, unsigned int *a3)
{
  unsigned int v3 = a2;
  sub_100033438(*a1, &v3, a3);
}

uint64_t sub_100033394(uint64_t a1, __int128 *a2, void *a3)
{
  __int128 v7 = *a2;
  sub_100030E80((uint64_t)&v8, (uint64_t)(a2 + 1));
  uint64_t v5 = sub_100033584(a1, &v7, a3);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v12 < 0) {
    operator delete(__p);
  }
  if (v10 < 0) {
    operator delete(v9);
  }
  return v5;
}

void sub_100033424( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100033438(uint64_t a1, unsigned int *a2, unsigned int *a3)
{
  v3[0] = a2;
  v3[1] = a3;
  sub_10003346C(a1 + 16, a1, v3);
}

void sub_10003346C(uint64_t a1, uint64_t a2, unsigned int **a3)
{
  uint64_t v5 = **a3;
  uint64_t v7 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  std::string::basic_string(&__str, (const std::string *)(a1 + 16));
  std::string::basic_string(&v12, (const std::string *)(a1 + 40));
  uint64_t v8 = *(void **)(a1 + 64);
  if (v8) {
    uint64_t v8 = _Block_copy(v8);
  }
  char v9 = *(dispatch_object_s **)(a1 + 72);
  aBlock = v8;
  dispatch_object_t object = v9;
  if (v9) {
    dispatch_retain(v9);
  }
  sub_100031468(a2, v7, v5, v6, &__str, &v12, (uint64_t)&aBlock);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
}

void sub_100033548( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20, char a21, char a22)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_100033584(uint64_t a1, __int128 *a2, void *a3)
{
  __int128 v6 = *a2;
  sub_100030E80((uint64_t)&v7, (uint64_t)(a2 + 1));
  sub_100033624(a1, &v6, a3);
  if (object) {
    dispatch_release(object);
  }
  if (aBlock) {
    _Block_release(aBlock);
  }
  if (v11 < 0) {
    operator delete(__p);
  }
  if (v9 < 0) {
    operator delete(v8);
  }
  return 1LL;
}

void sub_100033610( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_100033624(uint64_t a1, _OWORD *a2, void *a3)
{
  uint64_t v5 = operator new(0x60uLL);
  *uint64_t v5 = *a2;
  uint64_t result = sub_100030E80((uint64_t)(v5 + 1), (uint64_t)(a2 + 1));
  *a3 = v5;
  return result;
}

void sub_10003366C(_Unwind_Exception *a1)
{
}

void *sub_100033680(void *a1, uint64_t a2)
{
  __int128 v4 = operator new(0x20uLL);
  *__int128 v4 = off_1002AE210;
  sub_10000CBF8(v4 + 1, a2);
  *a1 = v4;
  return a1;
}

void sub_1000336D0(_Unwind_Exception *a1)
{
}

void sub_1000336E4(void ***a1)
{
  uint64_t v1 = *a1;
  unsigned int v2 = **a1;
  if (v2)
  {
    v1[1] = v2;
    if ((_BYTE *)v1[2] - (_BYTE *)v2 < 0) {
      __break(0x550Cu);
    }
    else {
      operator delete(v2);
    }
  }

uint64_t sub_10003370C(uint64_t *a1, _OWORD *a2)
{
  uint64_t v2 = (a1[1] - *a1) >> 4;
  unint64_t v3 = v2 + 1;
  if (v2 == -1)
  {
    __break(0x5500u);
LABEL_10:
    sub_10000CCF0();
  }

  if (v3 >> 60) {
    goto LABEL_10;
  }
  unint64_t v6 = a1[2] - *a1;
  if (v6 >> 3 > v3) {
    unint64_t v3 = v6 >> 3;
  }
  if (v6 >= 0x7FFFFFFFFFFFFFF0LL) {
    unint64_t v7 = 0xFFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v7 = v3;
  }
  sub_100033848(v10, v7, v2, (uint64_t)(a1 + 2));
  *v11++ = *a2;
  sub_1000337D4(a1, v10);
  uint64_t v8 = a1[1];
  sub_1000338A4(v10);
  return v8;
}

void sub_1000337C0(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t *sub_1000337D4(uint64_t *result, void *a2)
{
  uint64_t v2 = *result;
  uint64_t v3 = result[1];
  uint64_t v4 = a2[1];
  if (v3 == *result)
  {
    uint64_t v5 = a2[1];
  }

  else
  {
    do
    {
      uint64_t v5 = v4 - 16;
      *(_OWORD *)(v4 - 16) = *(_OWORD *)(v3 - 16);
      v4 -= 16LL;
      v3 -= 16LL;
    }

    while (v3 != v2);
  }

  a2[1] = v5;
  uint64_t v6 = *result;
  *uint64_t result = v5;
  a2[1] = v6;
  uint64_t v7 = result[1];
  result[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = result[2];
  result[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

void *sub_100033848(void *a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  a1[3] = 0LL;
  a1[4] = a4;
  if (a2) {
    uint64_t v7 = (char *)sub_10000FDC8(a4, a2);
  }
  else {
    uint64_t v7 = 0LL;
  }
  uint64_t v8 = &v7[16 * a3];
  *a1 = v7;
  a1[1] = v8;
  a1[2] = v8;
  a1[3] = &v7[16 * a2];
  return a1;
}

void *sub_1000338A4(void *a1)
{
  uint64_t result = (void *)*a1;
  if (!*a1) {
    return a1;
  }
  if ((uint64_t)(a1[3] - (void)result) >= 0)
  {
    operator delete(result);
    return a1;
  }

  __break(0x550Cu);
  return result;
}

uint64_t sub_1000338E8(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(result + 16);
  if (v2 != a2) {
    *(void *)(result + 16) = v2 + ((a2 - v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  }
  return result;
}

void sub_10003390C(void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
}

  ;
}

  ;
}

void sub_100033944(const char *a1, const char *a2, uint64_t a3, const char *a4)
{
}

void sub_10003394C(const char *a1, const char *a2, uint64_t a3, const char *a4)
{
}

void sub_100033954(const char *a1, const char *a2, uint64_t a3, const char *a4)
{
}

void sub_10003395C(const char *a1, const char *a2, uint64_t a3, const char *a4)
{
}

void sub_100033964(const char *a1, const char *a2, uint64_t a3, const char *a4)
{
}

void sub_10003396C(const char *a1, const char *a2, uint64_t a3, const char *a4)
{
}

void sub_100033B74(uint64_t a1, uint64_t a2)
{
LABEL_1:
  do
  {
    if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)
      || *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error))
    {
      break;
    }

    char v4 = 0;
    unsigned int v5 = 0;
    uint64_t v6 = 0LL;
    while (1)
    {
      uint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v8 = v7 + 1;
      if (v7 == -1)
      {
LABEL_42:
        __break(0x5500u);
        return;
      }

      if (v8 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v9 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
      v6 |= (unint64_t)(v9 & 0x7F) << v4;
      if ((v9 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v10 = v5++ >= 9;
      if (v10)
      {
        unint64_t v11 = 0LL;
        uint64_t v12 = OBJC_IVAR___PBDataReader__error;
        goto LABEL_14;
      }
    }

    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    uint64_t v12 = OBJC_IVAR___PBDataReader__error;
    unint64_t v11 = *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) ? 0LL : v6;
LABEL_14:
    if (*(_BYTE *)(a2 + v12) || (v11 & 7) == 4) {
      break;
    }
    unint64_t v14 = v11 >> 3;
    if ((v11 >> 3) == 3)
    {
      std::string v21 = objc_alloc_init(&OBJC_CLASS___AWDCountersStabilityS);
      objc_storeStrong((id *)(a1 + 24), v21);
      if (PBReaderPlaceMark(a2, v24))
      {
        sub_10012307C((uint64_t)v21, a2);
        if ((v22 & 1) != 0) {
          goto LABEL_33;
        }
      }

      goto LABEL_41;
    }

    if ((_DWORD)v14 == 2)
    {
      std::string v21 = objc_alloc_init(&OBJC_CLASS___AWDHeaderInfoS);
      objc_storeStrong((id *)(a1 + 16), v21);
      if (PBReaderPlaceMark(a2, v24))
      {
        sub_10012DC90((uint64_t)v21, a2);
        if ((v23 & 1) != 0)
        {
LABEL_33:
          PBReaderRecallMark(a2, v24);

          goto LABEL_1;
        }
      }

LABEL_41:
      return;
    }

    if ((_DWORD)v14 == 1)
    {
      char v15 = 0;
      unsigned int v16 = 0;
      uint64_t v17 = 0LL;
      *(_BYTE *)(a1 + 32) |= 1u;
      while (1)
      {
        uint64_t v18 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        unint64_t v19 = v18 + 1;
        if (v18 == -1) {
          goto LABEL_42;
        }
        if (v19 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v20 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v18);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v19;
        v17 |= (unint64_t)(v20 & 0x7F) << v15;
        if ((v20 & 0x80) == 0) {
          goto LABEL_37;
        }
        v15 += 7;
        BOOL v10 = v16++ >= 9;
        if (v10)
        {
          uint64_t v17 = 0LL;
          goto LABEL_39;
        }
      }

      *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_37:
      if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        uint64_t v17 = 0LL;
      }
LABEL_39:
      *(void *)(a1 + 8) = v17;
      goto LABEL_1;
    }
  }

  while ((PBReaderSkipValueWithTag(a2) & 1) != 0);
}

  size_t v39 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_txErrAbortPercentage));
  [v3 setObject:v39 forKey:@"tx_err_abort_percentage"];

  char v20 = self->_has;
  if ((*(_WORD *)&v20 & 0x2000) != 0) {
    goto LABEL_42;
  }
LABEL_21:
  if ((*(_DWORD *)&v20 & 0x10000) != 0)
  {
LABEL_22:
    std::string v21 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_txErrPercentage));
    [v3 setObject:v21 forKey:@"tx_err_percentage"];
  }

  return v3;
}

  v5[55] = self->_txErrAbortPercentage;
  v5[64] |= 0x800u;
  uint64_t v7 = self->_has;
  if ((*(_WORD *)&v7 & 0x2000) != 0) {
    goto LABEL_42;
  }
LABEL_21:
  if ((*(_DWORD *)&v7 & 0x10000) != 0)
  {
LABEL_22:
    v5[60] = self->_txErrPercentage;
    v5[64] |= 0x10000u;
  }

  return v5;
}

  sub_1001FB53C();
LABEL_42:
  __int16 v30 = 1LL;
LABEL_43:
  sub_10000D448((uint64_t)&v49);
  sub_10000C0E8(v51);
  return v30;
}

      return;
    }

    if ((_DWORD)v14 == 1)
    {
      char v15 = 0;
      unsigned int v16 = 0;
      uint64_t v17 = 0LL;
      *(_BYTE *)(a1 + 32) |= 1u;
      while (1)
      {
        uint64_t v18 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        unint64_t v19 = v18 + 1;
        if (v18 == -1) {
          goto LABEL_42;
        }
        if (v19 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v20 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v18);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v19;
        v17 |= (unint64_t)(v20 & 0x7F) << v15;
        if ((v20 & 0x80) == 0) {
          goto LABEL_37;
        }
        v15 += 7;
        BOOL v10 = v16++ >= 9;
        if (v10)
        {
          uint64_t v17 = 0LL;
          goto LABEL_39;
        }
      }

      *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_37:
      if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        uint64_t v17 = 0LL;
      }
LABEL_39:
      *(void *)(a1 + 8) = v17;
      goto LABEL_1;
    }
  }

  while ((PBReaderSkipValueWithTag(a2) & 1) != 0);
}

      return;
    }

    if ((_DWORD)v14 == 1)
    {
      char v15 = 0;
      unsigned int v16 = 0;
      uint64_t v17 = 0LL;
      *(_BYTE *)(a1 + 32) |= 1u;
      while (1)
      {
        uint64_t v18 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        unint64_t v19 = v18 + 1;
        if (v18 == -1) {
          goto LABEL_42;
        }
        if (v19 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v20 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v18);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v19;
        v17 |= (unint64_t)(v20 & 0x7F) << v15;
        if ((v20 & 0x80) == 0) {
          goto LABEL_37;
        }
        v15 += 7;
        BOOL v10 = v16++ >= 9;
        if (v10)
        {
          uint64_t v17 = 0LL;
          goto LABEL_39;
        }
      }

      *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_37:
      if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        uint64_t v17 = 0LL;
      }
LABEL_39:
      *(void *)(a1 + 8) = v17;
      goto LABEL_1;
    }
  }

  while ((PBReaderSkipValueWithTag(a2) & 1) != 0);
}

uint64_t sub_1000342C8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  *(void *)(a1 + 24) = 0LL;
  *(void *)(a1 + 32) = 0LL;
  sub_100035104((uint64_t *)(a1 + 40), 0LL);
  sub_100159F64(a1);
  *(void *)a1 = off_1002AEAB8;
  *(void *)(a1 + 56) = a2;
  *(void *)(a1 + 64) = 0LL;
  sub_100007640(a1 + 64, a3);
  *(void *)(a1 + 104) = 0LL;
  *(void *)(a1 + 112) = 0LL;
  *(void *)(a1 + 120) = 0LL;
  *(_DWORD *)(a1 + 132) = 30;
  return a1;
}

void sub_100034340(_Unwind_Exception *a1)
{
}

uint64_t sub_100034374(uint64_t a1)
{
  *(void *)a1 = off_1002AEAB8;
  sub_100034408((void *)a1);
  uint64_t v3 = (void **)(a1 + 104);
  sub_100006F6C(&v3);
  sub_100006E7C((void *)(a1 + 64));
  nullsub_2(a1);
  sub_10000F9EC((uint64_t *)(a1 + 48));
  sub_10000EF74((unsigned int **)(a1 + 32));
  return a1;
}

void *sub_100034408(void *result)
{
  uint64_t v1 = result + 8;
  if (result[8])
  {
    sub_10003446C(result + 8);
    memset(v2, 0, sizeof(v2));
    sub_1000344E0(v1, (uint64_t *)v2);
    return sub_100006E7C(v2);
  }

  return result;
}

void sub_100034458( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_10003446C(void *a1)
{
  if (!*a1)
  {
    std::runtime_error::runtime_error(&v2, "call to empty boost::function");
    v2.__vftable = (std::runtime_error_vtbl *)&off_1002AD8D8;
    sub_10000706C(&v2);
  }

  return (*(uint64_t (**)(void *))((*a1 & 0xFFFFFFFFFFFFFFFELL) + 8))(a1 + 1);
}

void sub_1000344CC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, std::runtime_error a9)
{
}

uint64_t *sub_1000344E0(uint64_t *a1, uint64_t *a2)
{
  v4[0] = 0LL;
  sub_100035654(v4, a2);
  sub_1000355E0(v4, a1);
  sub_100006E7C(v4);
  return a1;
}

void sub_100034528( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_10003453C( uint64_t a1, unsigned int a2, unsigned int *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v10 = *(unsigned __int16 *)(a1 + 98);
  uint64_t result = 3LL;
  if (v10 <= 70)
  {
    if (v10)
    {
      if (v10 != 68) {
        goto LABEL_89;
      }
    }

    else
    {
      if (*(void *)(a1 + 112) - *(void *)(a1 + 104) >= 0x514uLL)
      {
        char v23 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v23)
        {
          char v24 = v23;
          goto LABEL_88;
        }

        if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          goto LABEL_88;
        }
        goto LABEL_87;
      }

      sub_100159FC0(a1, 30.0);
      *(_WORD *)(a1 + 98) = 68;
    }

    uint64_t v20 = *(void *)(a1 + 56);
    if (*(int *)(v20 + 70088) > 0 || *(void *)(v20 + 72704))
    {
      if (sub_100159F84(a1)) {
        return 0LL;
      }
      sub_10015A00C(a1);
      std::string v21 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v21)
      {
        char v22 = v21;
        goto LABEL_88;
      }

      if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        goto LABEL_88;
      }
    }

    else
    {
      sub_10015A00C(a1);
      uint64_t v25 = *(void *)(a1 + 56);
      unsigned int v26 = *(unsigned __int8 *)(v25 + 67456);
      if (v26 <= 0xE) {
        char v27 = v26 + 1;
      }
      else {
        char v27 = 1;
      }
      *(_BYTE *)(v25 + 67456) = v27;
      *(_BYTE *)(a1 + sub_10001C704(v1 - 96) = v27 | 0x80;
      std::string v28 = (void *)(v25 + 68785);
      uint64_t v29 = *(void *)(a1 + 104);
      uint64_t v30 = *(void *)(a1 + 112);
      if (v30 == v29) {
        __int128 v31 = 0LL;
      }
      else {
        __int128 v31 = *(const void **)(a1 + 104);
      }
      memcpy(v28, v31, v30 - v29);
      uint64_t v32 = *(void *)(a1 + 56);
      *(_DWORD *)(v32 + 70088) = *(_DWORD *)(a1 + 112) - *(_DWORD *)(a1 + 104);
      if (*(void *)(v32 + 72704))
      {
        __int16 v33 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v33)
        {
          char v34 = v33;
        }

        else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
          sub_1001FB53C();
        }
      }

      uint64_t v35 = *(void *)(a1 + 56);
      if (*(int *)(v35 + 70088) > 0)
      {
        __int16 v36 = operator new(0x20uLL);
        *__int16 v36 = sub_1000D514C;
        v36[1] = 0LL;
        v36[2] = v35;
        *((_DWORD *)v36 + 6) = -16777145;
        v49[0] = (uint64_t)off_1002AD910;
        v49[1] = (uint64_t)v36;
        __int16 v37 = operator new(0x20uLL);
        void *v37 = sub_1000D514C;
        v37[1] = 0LL;
        v37[2] = v35;
        *((_DWORD *)v37 + 6) = -33554361;
        v48[0] = (uint64_t)off_1002AD930;
        v48[1] = (uint64_t)v37;
        sub_100006D1C((uint64_t)sub_100034C44, v49, v48, &v50);
        sub_100007A04(v53, &v50);
        sub_100006E08((uint64_t *)(*(void *)(a1 + 56) + 72704LL), (uint64_t *)v53);
        sub_1000075F0(v53);
        sub_1000075F0(v52);
        sub_100007618(v51);
        sub_1000075F0(v48);
        sub_100007618(v49);
        *(_BYTE *)(*(void *)(a1 + 56) + 68785LL) = *(_BYTE *)(a1 + 96);
        sub_100159FC0(a1, 30.0);
        *(_WORD *)(a1 + 98) = 71;
        goto LABEL_49;
      }

      __int16 v46 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v46)
      {
        char v47 = v46;
        goto LABEL_88;
      }

      if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        goto LABEL_88;
      }
    }

LABEL_87:
    sub_1001FB53C();
    goto LABEL_88;
  }

  switch(v10)
  {
    case 'G':
LABEL_49:
      if ((a2 | 0x1000000) != 0xFF000047)
      {
        if (!sub_100159F84(a1))
        {
          sub_10015A00C(a1);
          uint64_t v40 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (v40)
          {
            std::string v41 = v40;
            goto LABEL_88;
          }

          if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
            goto LABEL_88;
          }
          goto LABEL_85;
        }

        return 0LL;
      }

      sub_10015A00C(a1);
      if (a2 != -16777145)
      {
        unint64_t v42 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v42)
        {
          int v43 = v42;
          goto LABEL_88;
        }

        if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          goto LABEL_88;
        }
        goto LABEL_85;
      }

      if (*(_BYTE *)(*(void *)(a1 + 104) + 1LL) != 1)
      {
        sub_100159FC0(a1, (float)*(int *)(a1 + 132));
        *(_WORD *)(a1 + 98) = 86;
        goto LABEL_68;
      }

      *(_BYTE *)(*(void *)(a1 + 56) + 73904LL) = 1;
      sub_100159FC0(a1, (float)*(int *)(a1 + 132));
      *(_WORD *)(a1 + 98) = 82;
LABEL_53:
      if (!sub_100159F84(a1))
      {
        sub_10015A00C(a1);
        __int16 v38 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v38)
        {
          size_t v39 = v38;
          goto LABEL_88;
        }

        if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          goto LABEL_88;
        }
LABEL_85:
        sub_1001FB53C();
        goto LABEL_88;
      }

      return 0LL;
    case 'R':
      if (HIBYTE(a2) == 171
        && (*(unsigned __int8 *)(*(void *)(a1 + 56) + 68758LL) == *(unsigned __int8 *)(a1 + 96)
         || (sub_10004ECBC(a2, a3, (uint64_t)a3, a4, a5, a6, a7, a8) & 0xFFFFFFF0) == 0x70))
      {
        sub_10015A00C(a1);
        *(_DWORD *)(a1 + 128) = 0;
LABEL_16:
        uint64_t result = 2LL;
        break;
      }

      goto LABEL_53;
    case 'V':
      if (HIBYTE(a2) == 171 && *(unsigned __int8 *)(*(void *)(a1 + 56) + 68758LL) == *(unsigned __int8 *)(a1 + 96))
      {
        sub_10015A00C(a1);
        uint64_t v19 = sub_10004ECBC(a2, a3, v13, v14, v15, v16, v17, v18);
        *(_DWORD *)(a1 + 128) = v19;
        if ((_DWORD)v19) {
          *(_DWORD *)(a1 + 128) = sub_10004EC14(v19);
        }
        goto LABEL_16;
      }

    sub_10015A00C((uint64_t)(a1 + 8));
LABEL_88:
    if (*((_BYTE *)a1 + 1376))
    {
LABEL_91:
      (*(void (**)(int *, uint64_t))(*(void *)a1 + 104LL))(a1, 1LL);
      char v34 = sub_1000D8DE8((uint64_t)a1);
      if (sub_1000B5088(v34))
      {
        uint64_t v35 = operator new(0x88uLL);
        v47[0] = (uint64_t)off_1002AECF8 + 1;
        sub_100006578(v35, (uint64_t)a1, v47);
        sub_100043330((uint64_t *)&buf, (uint64_t)v35);
        sub_10004E9A4((uint64_t)a1, (uint64_t *)&buf);
        sub_10000F9EC(v54);
        sub_100006E7C(v47);
      }

      uint64_t v6 = 3LL;
      goto LABEL_111;
    }

    if (!sub_1000D8DE8((uint64_t)a1))
    {
      __int16 v36 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v36)
      {
        __int16 v37 = v36;
        if (sub_10015A058(5) && os_log_type_enabled(v37, OS_LOG_TYPE_INFO))
        {
          LOWORD(buf) = 0;
          uint64_t v6 = 2LL;
          _os_log_impl( (void *)&_mh_execute_header,  v37,  OS_LOG_TYPE_INFO,  "Cannot attempt to sleep until NCP is initialized.",  (uint8_t *)&buf,  2u);
          goto LABEL_111;
        }

        goto LABEL_110;
      }

      if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        goto LABEL_110;
      }
      goto LABEL_109;
    }

    sub_100159FC0((uint64_t)(a1 + 8), 30.0);
    *((_WORD *)v4 + 491) = 69;
  }

  return 0LL;
}

  uint64_t v35 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_txErrorChannelAccessFailure));
  [v3 setObject:v35 forKey:@"tx_error_channel_access_failure"];

  unint64_t v8 = self->_has;
  if ((*(void *)&v8 & 0x2000000000000LL) == 0)
  {
LABEL_30:
    if ((*(void *)&v8 & 0x10000000000000LL) == 0) {
      goto LABEL_31;
    }
    goto LABEL_89;
  }

  PBDataWriterWriteUint32Field(v7, self->_txErrorChannelAccessFailure, 26LL);
  uint64_t v6 = self->_has;
  if ((*(void *)&v6 & 0x2000000000000LL) == 0)
  {
LABEL_30:
    if ((*(void *)&v6 & 0x10000000000000LL) == 0) {
      goto LABEL_31;
    }
    goto LABEL_89;
  }

  v4[48] = self->_txErrorChannelAccessFailure;
  *((void *)v4 + 31) |= 0x80000000000uLL;
  uint64_t v6 = self->_has;
  if ((*(void *)&v6 & 0x2000000000000LL) == 0)
  {
LABEL_30:
    if ((*(void *)&v6 & 0x10000000000000LL) == 0) {
      goto LABEL_31;
    }
    goto LABEL_89;
  }

  *((_DWORD *)v6 + 57) = self->_txErrorTxAbortedCsmaCfgBackoff;
  v6[31] |= 0x10000000000000uLL;
  int v10 = self->_has;
  if ((*(void *)&v10 & 0x8000000000000LL) == 0)
  {
LABEL_30:
    if ((*(void *)&v10 & 0x20000000000000LL) == 0) {
      goto LABEL_31;
    }
    goto LABEL_89;
  }

  uint64_t v35 = 0LL;
  if ((*(void *)&v4 & 0x20000000000000LL) != 0)
  {
LABEL_35:
    char v34 = 2654435761LL * self->_txErrorTxAbortedCsmaPrepare;
    if ((*(void *)&v4 & 0x40000000000000LL) != 0) {
      goto LABEL_36;
    }
    goto LABEL_89;
  }

  self->_txErrorTimeslotEnded = v5[53];
  *(void *)&self->_has |= 0x1000000000000uLL;
  char v9 = *((void *)v5 + 31);
  if ((v9 & 0x800000000000LL) == 0)
  {
LABEL_34:
    if ((v9 & 0x20000000000LL) == 0) {
      goto LABEL_35;
    }
    goto LABEL_89;
  }

LABEL_68:
      if (sub_100159F84(a1)) {
        return 0LL;
      }
      sub_10015A00C(a1);
      __int16 v44 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v44)
      {
        std::string v45 = v44;
        goto LABEL_88;
      }

      if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        goto LABEL_85;
      }
LABEL_88:
      *(_DWORD *)(a1 + 128) = 7;
      uint64_t result = 3LL;
      break;
  }

  v28[59] = self->_txErrCcaPercentage;
  v28[64] |= 0x8000u;
  char v27 = self->_has;
  if ((*(_WORD *)&v27 & 0x800) == 0)
  {
LABEL_48:
    if ((*(_WORD *)&v27 & 0x2000) == 0) {
      goto LABEL_49;
    }
LABEL_70:
    v28[57] = self->_txErrBusyChannelPercentage;
    v28[64] |= 0x2000u;
    if ((*(_DWORD *)&self->_has & 0x10000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_50;
  }

    sub_1001FB53C();
    goto LABEL_69;
  }

  if (!*(_WORD *)(a1 + 8))
  {
    uint64_t v12 = *(void *)(a1 + 56);
    if (*(_BYTE *)(v12 + 1376))
    {
      if (sub_1000D8DE8(v12) != 2)
      {
        sub_100159FC0(a1, 30.0);
        *(_WORD *)(a1 + 8) = 67;
LABEL_16:
        uint64_t v14 = sub_1000D8DE8(*(void *)(a1 + 56));
        if (sub_1000B50E8(v14)
          || (*(unsigned int (**)(void))(**(void **)(a1 + 56) + 160LL))(*(void *)(a1 + 56)))
        {
          if (!sub_100159F84(a1))
          {
            sub_10015A00C(a1);
            uint64_t v15 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
            if (v15)
            {
              uint64_t v16 = v15;
            }

            else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
            {
              sub_1001FB53C();
            }

            uint64_t v17 = 1;
            goto LABEL_70;
          }

          return 0LL;
        }

        sub_10015A00C(a1);
        *(_WORD *)(a1 + 8) = 75;
        goto LABEL_24;
      }

      v48.n128_u64[0] = 0LL;
      (*(void (**)(uint64_t, uint64_t, __n128 *))(*(void *)a1 + 32LL))(a1, 4LL, &v48);
    }

    else
    {
      v48.n128_u64[0] = 0LL;
      (*(void (**)(uint64_t, uint64_t, __n128 *))(*(void *)a1 + 32LL))(a1, 3LL, &v48);
    }

    if (v48.n128_u64[0]) {
      (*(void (**)(unint64_t))(*(void *)v48.n128_u64[0] + 8LL))(v48.n128_u64[0]);
    }
    goto LABEL_14;
  }

  if (v11 == 67) {
    goto LABEL_16;
  }
LABEL_81:
  *(_WORD *)(a1 + 8) = 0;
  return 3LL;
}

  uint64_t v20 = &v1[result];
  if (!v17)
  {
LABEL_69:
    char v22 = __stderrp;
    char v23 = "((void *)0) != scratchpad.pack_format";
    char v24 = 181;
    goto LABEL_70;
  }

      *(_BYTE *)(a1 + v37 + 700sub_10001C704(v1 - 96) = v26;
      if (v27 <= 124)
      {
        if (v27 != 17 && v27 != 19)
        {
LABEL_89:
          __int16 v44 = v4[652];
          if (__OFADD__(v44, 1)) {
            goto LABEL_145;
          }
          v4[652] = v44 + 1;
          if (v44 > 0xA27) {
            goto LABEL_91;
          }
          goto LABEL_78;
        }
      }

      else if ((v27 - 125) >= 2 && v27 != 248)
      {
        goto LABEL_89;
      }

      int v43 = v4[652];
      if (__OFADD__((_DWORD)v43, 1)) {
        goto LABEL_145;
      }
      v4[652] = v43 + 1;
      *(_BYTE *)(a1 + v43 + 700sub_10001C704(v1 - 96) = 125;
      __int16 v44 = v4[652];
      if (__OFADD__(v44, 1)) {
        goto LABEL_145;
      }
      LOBYTE(v27) = v27 ^ 0x20;
      v4[652] = v44 + 1;
      if (v44 >= 0xA28) {
        goto LABEL_91;
      }
LABEL_78:
      *(_BYTE *)(a1 + v44 + 700sub_10001C704(v1 - 96) = v27;
      std::string v45 = v4[652];
      if (__OFADD__((_DWORD)v45, 1)) {
        goto LABEL_145;
      }
      v4[652] = v45 + 1;
      if (v45 <= 0xA27)
      {
        *(_BYTE *)(a1 + v45 + 700sub_10001C704(v1 - 96) = 126;
        v4[1] = 0;
        *(_DWORD *)(a1 + 640) = 607;
LABEL_81:
        __int16 v46 = *(void *)(a1 + 216);
        char v47 = v4[652];
        uint64_t v48 = (*(uint64_t (**)(uint64_t))(*(void *)v46 + 80LL))(v46);
        if (*(_WORD *)(a1 + 642) == 78)
        {
          while ((sub_1000F4098((int)v6, v48) & 1) != 0
               || (*(unsigned int (**)(uint64_t))(*(void *)v46 + 48LL))(v46))
          {
            sub_10011D990((uint64_t)v6, v48);
            uint64_t v70 = *(void *)(a1 + 648);
            if (v47 < v70) {
              goto LABEL_146;
            }
            __int128 v71 = (*(uint64_t (**)(uint64_t, unint64_t, unint64_t))(*(void *)v46 + 16LL))( v46,  a1 + 70096 + v70,  v47 - v70);
            if (v71 < 0)
            {
              *(_DWORD *)(a1 + 656) = *__error();
              goto LABEL_135;
            }

            uint64_t v72 = *(void *)(a1 + 648);
            __int128 v73 = __CFADD__(v72, v71);
            uint64_t v49 = v72 + v71;
            if (v73) {
              goto LABEL_145;
            }
            *(void *)(a1 + 648) = v49;
LABEL_126:
            if (v49 >= v47) {
              goto LABEL_135;
            }
            sub_10011DAB8((uint64_t)v6, v48);
            *(_WORD *)(a1 + 642) = 78;
          }

          return;
        }

        if (!*(_WORD *)(a1 + 642))
        {
          uint64_t v49 = 0LL;
          *(void *)(a1 + 648) = 0LL;
          *(_DWORD *)(a1 + 656) = 0;
          goto LABEL_126;
        }

  *((_DWORD *)v6 + 16) = self->_rtt90perc;
  v6[31] |= 0x4000uLL;
  int v10 = self->_has;
  if ((*(_WORD *)&v10 & 0x2000) == 0)
  {
LABEL_11:
    if ((*(_WORD *)&v10 & 0x1000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_70;
  }

  std::string v54 = 0LL;
  if ((*(_WORD *)&v4 & 0x1000) != 0)
  {
LABEL_16:
    std::string v53 = 2654435761LL * self->_retryIntervalMax;
    if ((*(_WORD *)&v4 & 0x800) != 0) {
      goto LABEL_17;
    }
    goto LABEL_70;
  }

  if ((char)v23.__r_.__value_.__s.__size_ < 0)
  {
    operator delete(v23.__r_.__value_.__l.__data_);
    if ((v9 & 0x80000000) == 0)
    {
LABEL_72:
      if ((size & 0x80000000) == 0) {
        return;
      }
LABEL_76:
      operator delete(v29.__r_.__value_.__l.__data_);
      return;
    }
  }

  else if ((v9 & 0x80000000) == 0)
  {
    goto LABEL_72;
  }

  operator delete(v27.__r_.__value_.__l.__data_);
  if (size < 0) {
    goto LABEL_76;
  }
}

          uint64_t v86 = v367;
LABEL_73:

LABEL_74:
        }

        unint64_t v42 = v335;
        obja = [v335 countByEnumeratingWithState:&v418 objects:v453 count:16];
      }

      while (obja);
    }

    [v42 removeAllObjects];
    uint64_t v90 = sub_1001768B4(1);
    __int128 v91 = (os_log_s *)objc_claimAutoreleasedReturnValue(v90);
    if (os_log_type_enabled(v91, OS_LOG_TYPE_INFO))
    {
      uint64_t v92 = -[NSMutableArray count](v342, "count");
      __int128 v93 = -[NSMutableArray count](v387, "count");
      *(_DWORD *)std::string buf = 136315906;
      v436 = "-[THThreadNetworkCredentialsKeychainBackingStore cleanThreadKeychainDatabase:]_block_invoke";
      v437 = 1024;
      v438 = 2819;
      v439 = 2048;
      v440 = v92;
      v441 = 2048;
      v442 = v93;
      _os_log_impl( (void *)&_mh_execute_header,  v91,  OS_LOG_TYPE_INFO,  "%s:%d: End of 2nd pass, size of keepPreferredListForModification : %lu, size of cleanUpPreferredList : %lu ",  buf,  0x26u);
    }

    uint64_t v94 = sub_1001768B4(1);
    __int128 v95 = (os_log_s *)objc_claimAutoreleasedReturnValue(v94);
    a1 = v388;
    if (os_log_type_enabled(v95, OS_LOG_TYPE_INFO))
    {
      uint64_t v96 = -[NSMutableArray count](v342, "count");
      __int128 v97 = -[NSMutableArray count](v385, "count");
      *(_DWORD *)std::string buf = 136315906;
      v436 = "-[THThreadNetworkCredentialsKeychainBackingStore cleanThreadKeychainDatabase:]_block_invoke";
      v437 = 1024;
      v438 = 2820;
      v439 = 2048;
      v440 = v96;
      v441 = 2048;
      v442 = v97;
      _os_log_impl( (void *)&_mh_execute_header,  v95,  OS_LOG_TYPE_INFO,  "%s:%d: End of 2nd pass, size of keepPreferredListForModification : %lu , size of finalPreferredBARecordList : %lu",  buf,  0x26u);
    }

    uint64_t v98 = sub_1001768B4(1);
    __int128 v99 = (os_log_s *)objc_claimAutoreleasedReturnValue(v98);
    if (os_log_type_enabled(v99, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)std::string buf = 136315394;
      v436 = "-[THThreadNetworkCredentialsKeychainBackingStore cleanThreadKeychainDatabase:]_block_invoke";
      v437 = 1024;
      v438 = 2822;
      _os_log_impl((void *)&_mh_execute_header, v99, OS_LOG_TYPE_INFO, "%s:%d: Before 3rd pass starts", buf, 0x12u);
    }

    v416 = 0u;
    v417 = 0u;
    v414 = 0u;
    v415 = 0u;
    v352 = v342;
    v370 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v352,  "countByEnumeratingWithState:objects:count:",  &v414,  v452,  16LL);
    if (v370)
    {
      v360 = *(void *)v415;
      do
      {
        uint64_t v100 = 0LL;
        do
        {
          if (*(void *)v415 != v360) {
            objc_enumerationMutation(v352);
          }
          __int128 v101 = *(void **)(*((void *)&v414 + 1) + 8LL * (void)v100);
          uint64_t v102 = (void *)objc_claimAutoreleasedReturnValue([v101 credentialsDataSetRecord]);

          if (v102)
          {
            __int128 v103 = (void *)objc_claimAutoreleasedReturnValue([v101 credentialsDataSetRecord]);
LABEL_90:
            uint64_t v106 = (void *)objc_claimAutoreleasedReturnValue([v101 networkSignature]);
            __int128 v107 = (void *)objc_claimAutoreleasedReturnValue([v106 wifiPassword]);
            if ([v107 isEqualToString:@"ApplePreferredNetworkRecordLabel"])
            {

              goto LABEL_97;
            }

            uint64_t v108 = (void *)objc_claimAutoreleasedReturnValue([v101 networkSignature]);
            objb = v103;
            __int128 v109 = (void *)objc_claimAutoreleasedReturnValue([v108 wifiPassword]);
            uint64_t v110 = [v109 length];

            __int128 v103 = objb;
            if (v110)
            {
              __int128 v111 = objc_alloc(&OBJC_CLASS___THNetworkSignature);
              uint64_t v112 = (void *)objc_claimAutoreleasedReturnValue([v101 networkSignature]);
              __int128 v113 = (void *)objc_claimAutoreleasedReturnValue([v112 ipv4NwSignature]);
              uint64_t v114 = (void *)objc_claimAutoreleasedReturnValue([v101 networkSignature]);
              __int128 v115 = (void *)objc_claimAutoreleasedReturnValue([v114 ipv6NwSignature]);
              uint64_t v116 = (void *)objc_claimAutoreleasedReturnValue([v101 networkSignature]);
              __int128 v117 = (void *)objc_claimAutoreleasedReturnValue([v116 wifiPassword]);
              uint64_t v118 = [v111 initWithSignatures:v113 ipv6NwSignature:v115 wifSSID:v117 wifiPassword:@"ApplePreferredNetworkRecordLabel"];

              a1 = v388;
              __int128 v103 = objb;

              if (!v118)
              {
                __int128 v119 = sub_1001768B4(1);
                uint64_t v120 = (os_log_s *)objc_claimAutoreleasedReturnValue(v119);
                if (os_log_type_enabled(v120, OS_LOG_TYPE_ERROR))
                {
                  v145 = (void *)objc_claimAutoreleasedReturnValue([v101 network]);
                  v146 = (void *)objc_claimAutoreleasedReturnValue([v145 networkName]);
                  v147 = (void *)objc_claimAutoreleasedReturnValue([v101 network]);
                  v148 = (void *)objc_claimAutoreleasedReturnValue([v147 extendedPANID]);
                  *(_DWORD *)std::string buf = 136315906;
                  v436 = "-[THThreadNetworkCredentialsKeychainBackingStore cleanThreadKeychainDatabase:]_block_invoke";
                  v437 = 1024;
                  v438 = 2849;
                  v439 = 2112;
                  v440 = v146;
                  v441 = 2112;
                  v442 = v148;
                  _os_log_error_impl( (void *)&_mh_execute_header,  v120,  OS_LOG_TYPE_ERROR,  "%s:%d:Error : initializing copy of nw signature for item : (name : %@ | xpanid : %@)",  buf,  0x26u);
                }

                -[NSMutableArray removeObject:](v387, "removeObject:", v101);
                goto LABEL_106;
              }
            }

            else
            {
LABEL_97:
              uint64_t v118 = (id)objc_claimAutoreleasedReturnValue([v101 networkSignature]);
            }

            __int128 v121 = objc_alloc(&OBJC_CLASS___THPreferredThreadNetwork);
            uint64_t v122 = (void *)objc_claimAutoreleasedReturnValue([v101 network]);
            __int128 v123 = (void *)objc_claimAutoreleasedReturnValue([v101 creationDate]);
            uint64_t v124 = (void *)objc_claimAutoreleasedReturnValue([v101 userInfo]);
            __int128 v125 = -[THPreferredThreadNetwork initWithThreadNetwork:networkSignature:credentialsDataSetRecord:creationDate:lastModificationDate:userInfo:]( v121,  "initWithThreadNetwork:networkSignature:credentialsDataSetRecord:creationDate:lastModificationDate:userInfo:",  v122,  v118,  v103,  v123,  0LL,  v124);

            if (v125)
            {
              uint64_t v126 = (void *)objc_claimAutoreleasedReturnValue(-[THPreferredThreadNetwork credentialsDataSetRecord](v125, "credentialsDataSetRecord"));
              -[NSMutableArray addObject:](v385, "addObject:", v126);

              -[NSMutableArray addObject:](v334, "addObject:", v125);
              __int128 v127 = sub_1001768B4(1);
              uint64_t v128 = (os_log_s *)objc_claimAutoreleasedReturnValue(v127);
              if (os_log_type_enabled(v128, OS_LOG_TYPE_ERROR))
              {
                __int128 v133 = (void *)objc_claimAutoreleasedReturnValue(-[THPreferredThreadNetwork network](v125, "network"));
                uint64_t v134 = (void *)objc_claimAutoreleasedReturnValue([v133 networkName]);
                __int128 v135 = (void *)objc_claimAutoreleasedReturnValue(-[THPreferredThreadNetwork network](v125, "network"));
                uint64_t v136 = (void *)objc_claimAutoreleasedReturnValue([v135 extendedPANID]);
                *(_DWORD *)std::string buf = 136315906;
                v436 = "-[THThreadNetworkCredentialsKeychainBackingStore cleanThreadKeychainDatabase:]_block_invoke";
                v437 = 1024;
                v438 = 2864;
                v439 = 2112;
                v440 = v134;
                v441 = 2112;
                v442 = v136;
                _os_log_error_impl( (void *)&_mh_execute_header,  v128,  OS_LOG_TYPE_ERROR,  "%s:%d: 3rd pass, updated Signature & adding to Final/ToBeUpdated Preferred List - item : (name : %@ | xpanid : %@)",  buf,  0x26u);

                a1 = v388;
              }
            }

            else
            {
              __int128 v129 = sub_1001768B4(1);
              uint64_t v130 = (os_log_s *)objc_claimAutoreleasedReturnValue(v129);
              if (os_log_type_enabled(v130, OS_LOG_TYPE_ERROR))
              {
                __int128 v137 = (void *)objc_claimAutoreleasedReturnValue([v101 network]);
                uint64_t v138 = (void *)objc_claimAutoreleasedReturnValue([v137 networkName]);
                __int128 v139 = (void *)objc_claimAutoreleasedReturnValue([v101 network]);
                char v140 = (void *)objc_claimAutoreleasedReturnValue([v139 extendedPANID]);
                *(_DWORD *)std::string buf = 136315906;
                v436 = "-[THThreadNetworkCredentialsKeychainBackingStore cleanThreadKeychainDatabase:]_block_invoke";
                v437 = 1024;
                v438 = 2867;
                v439 = 2112;
                v440 = v138;
                v441 = 2112;
                v442 = v140;
                _os_log_error_impl( (void *)&_mh_execute_header,  v130,  OS_LOG_TYPE_ERROR,  "%s:%d: Failed to create instance of updated preferred network for item : (name : %@ | xpanid : %@)",  buf,  0x26u);

                a1 = v388;
              }

              -[NSMutableArray removeObject:](v387, "removeObject:", v101);
            }

LABEL_106:
            goto LABEL_107;
          }

          uint64_t v104 = *(void **)(a1 + 32);
          __int128 v105 = (void *)objc_claimAutoreleasedReturnValue([v101 network]);
          __int128 v103 = (void *)objc_claimAutoreleasedReturnValue([v104 getOneRecordForNetwork:v105]);

          if (v103) {
            goto LABEL_90;
          }
          __int128 v131 = sub_1001768B4(1);
          uint64_t v132 = (os_log_s *)objc_claimAutoreleasedReturnValue(v131);
          if (os_log_type_enabled(v132, OS_LOG_TYPE_ERROR))
          {
            __int128 v141 = (void *)objc_claimAutoreleasedReturnValue([v101 network]);
            uint64_t v142 = (void *)objc_claimAutoreleasedReturnValue([v141 networkName]);
            v143 = (void *)objc_claimAutoreleasedReturnValue([v101 network]);
            v144 = (void *)objc_claimAutoreleasedReturnValue([v143 extendedPANID]);
            *(_DWORD *)std::string buf = 136315906;
            v436 = "-[THThreadNetworkCredentialsKeychainBackingStore cleanThreadKeychainDatabase:]_block_invoke";
            v437 = 1024;
            v438 = 2830;
            v439 = 2112;
            v440 = v142;
            v441 = 2112;
            v442 = v144;
            _os_log_error_impl( (void *)&_mh_execute_header,  v132,  OS_LOG_TYPE_ERROR,  "%s:%d: Failed to get ds record for item : (name : %@ | xpanid : %@)",  buf,  0x26u);
          }

          -[NSMutableArray addObject:](v387, "addObject:", v101);
LABEL_107:
          uint64_t v100 = (char *)v100 + 1;
        }

        while (v370 != v100);
        v149 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v352,  "countByEnumeratingWithState:objects:count:",  &v414,  v452,  16LL);
        v370 = v149;
      }

      while (v149);
    }

    v150 = sub_1001768B4(1);
    v151 = (os_log_s *)objc_claimAutoreleasedReturnValue(v150);
    if (os_log_type_enabled(v151, OS_LOG_TYPE_ERROR)) {
      sub_1001970EC(v334, v387, v151);
    }

    v152 = sub_1001768B4(1);
    v153 = (os_log_s *)objc_claimAutoreleasedReturnValue(v152);
    if (os_log_type_enabled(v153, OS_LOG_TYPE_INFO))
    {
      v154 = -[NSMutableArray count](v385, "count");
      v155 = -[NSMutableArray count](v334, "count");
      *(_DWORD *)std::string buf = 136315906;
      v436 = "-[THThreadNetworkCredentialsKeychainBackingStore cleanThreadKeychainDatabase:]_block_invoke";
      v437 = 1024;
      v438 = 2873;
      v439 = 2048;
      v440 = v154;
      v441 = 2048;
      v442 = v155;
      _os_log_impl( (void *)&_mh_execute_header,  v153,  OS_LOG_TYPE_INFO,  "%s:%d: End of 3rd pass, size of finalPreferredBARecordList : %lu, toBeUpdatedPreferredList : %lu ",  buf,  0x26u);
    }

    -[NSMutableArray removeAllObjects](v352, "removeAllObjects");
    v156 = sub_1001768B4(1);
    v157 = (os_log_s *)objc_claimAutoreleasedReturnValue(v156);
    if (os_log_type_enabled(v157, OS_LOG_TYPE_ERROR)) {
      sub_10019706C(v334);
    }

    v412 = 0u;
    v413 = 0u;
    v410 = 0u;
    v411 = 0u;
    v158 = v334;
    v159 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v158,  "countByEnumeratingWithState:objects:count:",  &v410,  v451,  16LL);
    if (v159)
    {
      v160 = v159;
      v161 = *(void *)v411;
      v321 = v158;
      do
      {
        v162 = 0LL;
        do
        {
          if (*(void *)v411 != v161) {
            objc_enumerationMutation(v158);
          }
          v163 = *(void **)(*((void *)&v410 + 1) + 8LL * (void)v162);
          v409 = 0;
          [*(id *)(a1 + 32) dumpPreferredNetwork:v163];
          if (v163
            && [*(id *)(a1 + 32) storePreferredEntryAndCheckForDup:v163 isDuplicate:&v409])
          {
            v164 = v409;
            v165 = sub_1001768B4(1);
            v166 = (os_log_s *)objc_claimAutoreleasedReturnValue(v165);
            v167 = os_log_type_enabled(v166, OS_LOG_TYPE_ERROR);
            if (v164 == 1)
            {
              if (v167)
              {
                v346 = (void *)objc_claimAutoreleasedReturnValue([v163 network]);
                obje = (void *)objc_claimAutoreleasedReturnValue([v346 networkName]);
                v338 = (void *)objc_claimAutoreleasedReturnValue([v163 network]);
                v373 = (void *)objc_claimAutoreleasedReturnValue([v338 extendedPANID]);
                v331 = (void *)objc_claimAutoreleasedReturnValue([v163 networkSignature]);
                v363 = (__CFString *)objc_claimAutoreleasedReturnValue([v331 ipv4NwSignature]);
                v325 = (void *)objc_claimAutoreleasedReturnValue([v163 networkSignature]);
                v355 = (id)objc_claimAutoreleasedReturnValue([v325 ipv6NwSignature]);
                v183 = (void *)objc_claimAutoreleasedReturnValue([v163 networkSignature]);
                v184 = (void *)objc_claimAutoreleasedReturnValue([v183 wifiSSID]);
                v185 = &stru_1002B93F8;
                if (v184)
                {
                  v314 = (__CFString *)objc_claimAutoreleasedReturnValue([v163 networkSignature]);
                  v185 = (const __CFString *)objc_claimAutoreleasedReturnValue(-[__CFString wifiSSID](v314, "wifiSSID"));
                  v312 = (__CFString *)v185;
                }

                v186 = (void *)objc_claimAutoreleasedReturnValue([v163 networkSignature]);
                v187 = (void *)objc_claimAutoreleasedReturnValue([v186 wifiPassword]);
                *(_DWORD *)std::string buf = 136316930;
                v436 = "-[THThreadNetworkCredentialsKeychainBackingStore cleanThreadKeychainDatabase:]_block_invoke";
                v437 = 1024;
                v438 = 2892;
                v439 = 2112;
                v440 = obje;
                v441 = 2112;
                v442 = v373;
                v443 = 2112;
                v444 = v363;
                v445 = 2112;
                v446 = v355;
                v447 = 2112;
                v448 = v185;
                v449 = 2112;
                v450 = v187;
                _os_log_error_impl( (void *)&_mh_execute_header,  v166,  OS_LOG_TYPE_ERROR,  "%s:%d Updated the preferred Network : (name : %@ | xpanid : %@), ipv4 signature : %@, ipv6 signature : %@ , ssid : %@, pwd : %@",  buf,  0x4Eu);

                if (v184)
                {
                }

                a1 = v388;
                v158 = v321;
              }

              v166 = (os_log_s *)objc_claimAutoreleasedReturnValue( [*(id *)(a1 + 32) checkIfPrefItemPresentInTheCleanupList:v163 cleanupList:v387]);
              if (v166)
              {
                v168 = sub_1001768B4(1);
                v169 = (os_log_s *)objc_claimAutoreleasedReturnValue(v168);
                if (os_log_type_enabled(v169, OS_LOG_TYPE_ERROR))
                {
                  v347 = (void *)objc_claimAutoreleasedReturnValue([v163 network]);
                  objf = (void *)objc_claimAutoreleasedReturnValue([v347 networkName]);
                  v339 = (void *)objc_claimAutoreleasedReturnValue([v163 network]);
                  v374 = (void *)objc_claimAutoreleasedReturnValue([v339 extendedPANID]);
                  v332 = (void *)objc_claimAutoreleasedReturnValue([v163 networkSignature]);
                  v364 = (__CFString *)objc_claimAutoreleasedReturnValue([v332 ipv4NwSignature]);
                  v326 = (void *)objc_claimAutoreleasedReturnValue([v163 networkSignature]);
                  v356 = (id)objc_claimAutoreleasedReturnValue([v326 ipv6NwSignature]);
                  v188 = (void *)objc_claimAutoreleasedReturnValue([v163 networkSignature]);
                  v189 = (void *)objc_claimAutoreleasedReturnValue([v188 wifiSSID]);
                  v190 = &stru_1002B93F8;
                  if (v189)
                  {
                    v311 = (__CFString *)objc_claimAutoreleasedReturnValue([v163 networkSignature]);
                    v190 = (const __CFString *)objc_claimAutoreleasedReturnValue(-[__CFString wifiSSID](v311, "wifiSSID"));
                    v308 = (__CFString *)v190;
                  }

                  v191 = (void *)objc_claimAutoreleasedReturnValue([v163 networkSignature]);
                  v192 = (void *)objc_claimAutoreleasedReturnValue([v191 wifiPassword]);
                  *(_DWORD *)std::string buf = 136316930;
                  v436 = "-[THThreadNetworkCredentialsKeychainBackingStore cleanThreadKeychainDatabase:]_block_invoke";
                  v437 = 1024;
                  v438 = 2896;
                  v439 = 2112;
                  v440 = objf;
                  v441 = 2112;
                  v442 = v374;
                  v443 = 2112;
                  v444 = v364;
                  v445 = 2112;
                  v446 = v356;
                  v447 = 2112;
                  v448 = v190;
                  v449 = 2112;
                  v450 = v192;
                  _os_log_error_impl( (void *)&_mh_execute_header,  v169,  OS_LOG_TYPE_ERROR,  "%s:%d Removing from  cleanUpPreferredList : (name : %@ | xpanid : %@), ipv4 signature : %@, ipv6 sig nature : %@ , ssid : %@, pwd : %@",  buf,  0x4Eu);

                  if (v189)
                  {
                  }

                  a1 = v388;
                  v158 = v321;
                }

                -[NSMutableArray removeObject:](v387, "removeObject:", v166);
              }
            }

            else if (v167)
            {
              v353 = (id)objc_claimAutoreleasedReturnValue([v163 network]);
              objc = (void *)objc_claimAutoreleasedReturnValue([v353 networkName]);
              v344 = (void *)objc_claimAutoreleasedReturnValue([v163 network]);
              v371 = (void *)objc_claimAutoreleasedReturnValue([v344 extendedPANID]);
              v336 = (void *)objc_claimAutoreleasedReturnValue([v163 networkSignature]);
              v361 = (__CFString *)objc_claimAutoreleasedReturnValue([v336 ipv4NwSignature]);
              v329 = (void *)objc_claimAutoreleasedReturnValue([v163 networkSignature]);
              v172 = (void *)objc_claimAutoreleasedReturnValue([v329 ipv6NwSignature]);
              v173 = (void *)objc_claimAutoreleasedReturnValue([v163 networkSignature]);
              v174 = (void *)objc_claimAutoreleasedReturnValue([v173 wifiSSID]);
              v175 = &stru_1002B93F8;
              if (v174)
              {
                v315 = objc_claimAutoreleasedReturnValue([v163 networkSignature]);
                v175 = (const __CFString *)objc_claimAutoreleasedReturnValue([(id)v315 wifiSSID]);
                v313 = (__CFString *)v175;
              }

              v176 = (void *)objc_claimAutoreleasedReturnValue([v163 networkSignature]);
              v177 = (void *)objc_claimAutoreleasedReturnValue([v176 wifiPassword]);
              *(_DWORD *)std::string buf = 136316930;
              v436 = "-[THThreadNetworkCredentialsKeychainBackingStore cleanThreadKeychainDatabase:]_block_invoke";
              v437 = 1024;
              v438 = 2901;
              v439 = 2112;
              v440 = objc;
              v441 = 2112;
              v442 = v371;
              v443 = 2112;
              v444 = v361;
              v445 = 2112;
              v446 = v172;
              v447 = 2112;
              v448 = v175;
              v449 = 2112;
              v450 = v177;
              _os_log_error_impl( (void *)&_mh_execute_header,  v166,  OS_LOG_TYPE_ERROR,  "%s:%d Stored a new entry for preferred Network : (name : %@ | xpanid : %@), ipv4 signature : %@, ipv6 si gnature : %@ , ssid : %@, pwd : %@",  buf,  0x4Eu);

              if (v174)
              {
              }

              a1 = v388;
              v158 = v321;
            }
          }

          else
          {
            v170 = sub_1001768B4(1);
            v171 = (os_log_s *)objc_claimAutoreleasedReturnValue(v170);
            if (os_log_type_enabled(v171, OS_LOG_TYPE_ERROR))
            {
              v345 = (void *)objc_claimAutoreleasedReturnValue([v163 network]);
              objd = (void *)objc_claimAutoreleasedReturnValue([v345 networkName]);
              v337 = (void *)objc_claimAutoreleasedReturnValue([v163 network]);
              v372 = (void *)objc_claimAutoreleasedReturnValue([v337 extendedPANID]);
              v330 = (void *)objc_claimAutoreleasedReturnValue([v163 networkSignature]);
              v362 = (__CFString *)objc_claimAutoreleasedReturnValue([v330 ipv4NwSignature]);
              v324 = (void *)objc_claimAutoreleasedReturnValue([v163 networkSignature]);
              v354 = (id)objc_claimAutoreleasedReturnValue([v324 ipv6NwSignature]);
              v178 = (void *)objc_claimAutoreleasedReturnValue([v163 networkSignature]);
              v179 = (void *)objc_claimAutoreleasedReturnValue([v178 wifiSSID]);
              v180 = &stru_1002B93F8;
              if (v179)
              {
                v317 = (void *)objc_claimAutoreleasedReturnValue([v163 networkSignature]);
                v180 = (const __CFString *)objc_claimAutoreleasedReturnValue([v317 wifiSSID]);
                v316 = (__CFString *)v180;
              }

              v181 = (void *)objc_claimAutoreleasedReturnValue([v163 networkSignature]);
              v182 = (void *)objc_claimAutoreleasedReturnValue([v181 wifiPassword]);
              *(_DWORD *)std::string buf = 136316930;
              v436 = "-[THThreadNetworkCredentialsKeychainBackingStore cleanThreadKeychainDatabase:]_block_invoke";
              v437 = 1024;
              v438 = 2906;
              v439 = 2112;
              v440 = objd;
              v441 = 2112;
              v442 = v372;
              v443 = 2112;
              v444 = v362;
              v445 = 2112;
              v446 = v354;
              v447 = 2112;
              v448 = v180;
              v449 = 2112;
              v450 = v182;
              _os_log_error_impl( (void *)&_mh_execute_header,  v171,  OS_LOG_TYPE_ERROR,  "%s:%d Failed to store preferred network  : (name : %@ | xpanid : %@), ipv4 signature : %@, ipv6 signatur e : %@ , ssid : %@, pwd : %@",  buf,  0x4Eu);

              if (v179)
              {
              }

              a1 = v388;
              v158 = v321;
            }

            v166 = (os_log_s *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) getTheKeyFromPreferredNetworkEntry:v163]);
            -[NSMutableDictionary setObject:forKey:](v386, "setObject:forKey:", v163, v166);
          }

          v162 = (char *)v162 + 1;
        }

        while (v160 != v162);
        v193 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v158,  "countByEnumeratingWithState:objects:count:",  &v410,  v451,  16LL);
        v160 = v193;
      }

      while (v193);
    }

    -[NSMutableArray removeAllObjects](v158, "removeAllObjects");
    v194 = sub_1001768B4(1);
    v195 = (os_log_s *)objc_claimAutoreleasedReturnValue(v194);
    if (os_log_type_enabled(v195, OS_LOG_TYPE_ERROR)) {
      sub_100196FEC(v387);
    }

    v407 = 0u;
    v408 = 0u;
    v405 = 0u;
    v406 = 0u;
    v196 = v387;
    v197 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v196,  "countByEnumeratingWithState:objects:count:",  &v405,  v434,  16LL);
    if (v197)
    {
      v198 = v197;
      v199 = *(void *)v406;
      objg = v196;
      do
      {
        v200 = 0LL;
        do
        {
          if (*(void *)v406 != v199) {
            objc_enumerationMutation(v196);
          }
          v201 = *(void **)(*((void *)&v405 + 1) + 8LL * (void)v200);
          v202 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) getTheKeyFromPreferredNetworkEntry:v201]);
          v203 = (void *)objc_claimAutoreleasedReturnValue(-[NSMutableDictionary objectForKeyedSubscript:](v386, "objectForKeyedSubscript:", v202));

          if (v203)
          {
            v204 = sub_1001768B4(1);
            v205 = (os_log_s *)objc_claimAutoreleasedReturnValue(v204);
            if (os_log_type_enabled(v205, OS_LOG_TYPE_ERROR))
            {
              v208 = (void *)objc_claimAutoreleasedReturnValue([v201 network]);
              v209 = (void *)objc_claimAutoreleasedReturnValue([v208 networkName]);
              v210 = (void *)objc_claimAutoreleasedReturnValue([v201 network]);
              v211 = (void *)objc_claimAutoreleasedReturnValue([v210 extendedPANID]);
              *(_DWORD *)std::string buf = 136315906;
              v436 = "-[THThreadNetworkCredentialsKeychainBackingStore cleanThreadKeychainDatabase:]_block_invoke";
              v437 = 1024;
              v438 = 2927;
              v439 = 2112;
              v440 = v209;
              v441 = 2112;
              v442 = v211;
              _os_log_error_impl( (void *)&_mh_execute_header,  v205,  OS_LOG_TYPE_ERROR,  "%s:%d: Do not touch the preferred network entry : (name : %@ | xpanid : %@)",  buf,  0x26u);

              a1 = v388;
              v196 = objg;
            }

            [*(id *)(a1 + 32) dumpPreferredNetwork:v201];
          }

          else if (([*(id *)(a1 + 32) deletePreferredNetworkEntryWithoutRecords:v201] & 1) == 0)
          {
            v206 = sub_1001768B4(1);
            v207 = (os_log_s *)objc_claimAutoreleasedReturnValue(v206);
            if (os_log_type_enabled(v207, OS_LOG_TYPE_ERROR))
            {
              v333 = (void *)objc_claimAutoreleasedReturnValue([v201 network]);
              v365 = (void *)objc_claimAutoreleasedReturnValue([v333 networkName]);
              v327 = (void *)objc_claimAutoreleasedReturnValue([v201 network]);
              v357 = (id)objc_claimAutoreleasedReturnValue([v327 extendedPANID]);
              v322 = (void *)objc_claimAutoreleasedReturnValue([v201 networkSignature]);
              v348 = (__CFString *)objc_claimAutoreleasedReturnValue([v322 ipv4NwSignature]);
              v319 = (void *)objc_claimAutoreleasedReturnValue([v201 networkSignature]);
              v340 = (void *)objc_claimAutoreleasedReturnValue([v319 ipv6NwSignature]);
              v212 = (void *)objc_claimAutoreleasedReturnValue([v201 networkSignature]);
              v213 = (void *)objc_claimAutoreleasedReturnValue([v212 wifiSSID]);
              v214 = &stru_1002B93F8;
              if (v213)
              {
                v317 = (void *)objc_claimAutoreleasedReturnValue([v201 networkSignature]);
                v214 = (const __CFString *)objc_claimAutoreleasedReturnValue([v317 wifiSSID]);
                v316 = (__CFString *)v214;
              }

              v215 = (void *)objc_claimAutoreleasedReturnValue([v201 networkSignature]);
              v216 = (void *)objc_claimAutoreleasedReturnValue([v215 wifiPassword]);
              *(_DWORD *)std::string buf = 136316930;
              v436 = "-[THThreadNetworkCredentialsKeychainBackingStore cleanThreadKeychainDatabase:]_block_invoke";
              v437 = 1024;
              v438 = 2934;
              v439 = 2112;
              v440 = v365;
              v441 = 2112;
              v442 = v357;
              v443 = 2112;
              v444 = v348;
              v445 = 2112;
              v446 = v340;
              v447 = 2112;
              v448 = v214;
              v449 = 2112;
              v450 = v216;
              _os_log_error_impl( (void *)&_mh_execute_header,  v207,  OS_LOG_TYPE_ERROR,  "%s:%d Failed to delete the previous preferred network entry : (name : %@ | xpanid : %@), ipv4 signature : %@, ipv6 signature : %@ , ssid : %@, pwd : %@",  buf,  0x4Eu);

              if (v213)
              {
              }

              a1 = v388;
              v196 = objg;
            }
          }

          v200 = (char *)v200 + 1;
        }

        while (v198 != v200);
        v217 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v196,  "countByEnumeratingWithState:objects:count:",  &v405,  v434,  16LL);
        v198 = v217;
      }

      while (v217);
    }

    -[NSMutableDictionary removeAllObjects](v386, "removeAllObjects");
    -[NSMutableArray removeAllObjects](v196, "removeAllObjects");
    v218 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) getNumberOfPrefEntriesForTheCount:200]);
    v219 = sub_1001768B4(1);
    v220 = (os_log_s *)objc_claimAutoreleasedReturnValue(v219);
    if (os_log_type_enabled(v220, OS_LOG_TYPE_INFO))
    {
      v221 = [v218 count];
      *(_DWORD *)std::string buf = 136315650;
      v436 = "-[THThreadNetworkCredentialsKeychainBackingStore cleanThreadKeychainDatabase:]_block_invoke";
      v437 = 1024;
      v438 = 2942;
      v439 = 2048;
      v440 = v221;
      _os_log_impl( (void *)&_mh_execute_header,  v220,  OS_LOG_TYPE_INFO,  "%s:%d: End of 3rd Pass, size of preferred networks (prefNwFinalRecords) : %lu",  buf,  0x1Cu);
    }

    v222 = [v218 count];
    uint64_t v15 = (id)*((void *)&v427 + 1);
    *((void *)&v428 + 1) = v222;
    *(void *)&v428 = *((void *)&v427 + 1) - (void)v222;

    unint64_t v11 = &AWDPostMetric_ptr;
  }

  else
  {
    v335 = v12;
    v223 = sub_1001768B4(1);
    v224 = (os_log_s *)objc_claimAutoreleasedReturnValue(v223);
    if (os_log_type_enabled(v224, OS_LOG_TYPE_ERROR)) {
      sub_100196F78();
    }

    v428 = 0uLL;
  }

  v225 = (void *)objc_claimAutoreleasedReturnValue( [*(id *)(a1 + 32) getNumberOfRecordsForKeychainAccessGroup:@"0000000000" count:400]);
  v226 = sub_1001768B4(1);
  v227 = (os_log_s *)objc_claimAutoreleasedReturnValue(v226);
  if (os_log_type_enabled(v227, OS_LOG_TYPE_ERROR)) {
    sub_100196EF8(v225);
  }

  v358 = (char *)[v225 count];
  *(void *)&v426 = v358;
  v349 = v225;
  if (!v225)
  {
    v391 = 0u;
    v392 = 0u;
    v389 = 0u;
    v390 = 0u;
    v254 = v385;
    v273 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v254,  "countByEnumeratingWithState:objects:count:",  &v389,  v430,  16LL);
    if (!v273) {
      goto LABEL_265;
    }
    v274 = v273;
    v341 = v15;
    v275 = *(void *)v390;
    while (1)
    {
      v276 = 0LL;
      do
      {
        if (*(void *)v390 != v275) {
          objc_enumerationMutation(v254);
        }
        v277 = *(void **)(*((void *)&v389 + 1) + 8LL * (void)v276);
        if (v277
          && [*(id *)(v388 + 32) updateRecord:*(void *)(*((void *)&v389 + 1) + 8 * (void)v276)])
        {
          v278 = sub_1001768B4(1);
          v279 = (os_log_s *)objc_claimAutoreleasedReturnValue(v278);
          if (!os_log_type_enabled(v279, OS_LOG_TYPE_ERROR)) {
            goto LABEL_239;
          }
          v280 = (void *)objc_claimAutoreleasedReturnValue([v277 network]);
          v281 = (void *)objc_claimAutoreleasedReturnValue([v280 networkName]);
          v282 = (void *)objc_claimAutoreleasedReturnValue([v277 network]);
          v283 = (void *)objc_claimAutoreleasedReturnValue([v282 extendedPANID]);
          *(_DWORD *)std::string buf = 136315906;
          v436 = "-[THThreadNetworkCredentialsKeychainBackingStore cleanThreadKeychainDatabase:]_block_invoke";
          v437 = 1024;
          v438 = 3019;
          v439 = 2112;
          v440 = v281;
          v441 = 2112;
          v442 = v283;
          v284 = v279;
          v285 = "%s:%d: Updated BA Record for item : (name : %@ | xpanid : %@)";
        }

        else
        {
          v286 = sub_1001768B4(1);
          v279 = (os_log_s *)objc_claimAutoreleasedReturnValue(v286);
          if (!os_log_type_enabled(v279, OS_LOG_TYPE_ERROR)) {
            goto LABEL_239;
          }
          v280 = (void *)objc_claimAutoreleasedReturnValue([v277 network]);
          v281 = (void *)objc_claimAutoreleasedReturnValue([v280 networkName]);
          v282 = (void *)objc_claimAutoreleasedReturnValue([v277 network]);
          v283 = (void *)objc_claimAutoreleasedReturnValue([v282 extendedPANID]);
          *(_DWORD *)std::string buf = 136315906;
          v436 = "-[THThreadNetworkCredentialsKeychainBackingStore cleanThreadKeychainDatabase:]_block_invoke";
          v437 = 1024;
          v438 = 3021;
          v439 = 2112;
          v440 = v281;
          v441 = 2112;
          v442 = v283;
          v284 = v279;
          v285 = "%s:%d: Failed to create instance of BA Record for item : (name : %@ | xpanid : %@)";
        }

        _os_log_error_impl((void *)&_mh_execute_header, v284, OS_LOG_TYPE_ERROR, v285, buf, 0x26u);

LABEL_239:
        v276 = (char *)v276 + 1;
      }

      while (v274 != v276);
      v287 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v254,  "countByEnumeratingWithState:objects:count:",  &v389,  v430,  16LL);
      v274 = v287;
      if (!v287)
      {
LABEL_264:
        a1 = v388;
        uint64_t v15 = v341;
        goto LABEL_265;
      }
    }
  }

  if ((unint64_t)[v225 count] <= 0x18F)
  {
    v341 = v15;
    v228 = (void *)objc_claimAutoreleasedReturnValue([v11[127] arrayWithArray:v385]);
    v401 = 0u;
    v402 = 0u;
    v403 = 0u;
    v404 = 0u;
    v229 = v225;
    v230 = [v229 countByEnumeratingWithState:&v401 objects:v433 count:16];
    if (!v230) {
      goto LABEL_208;
    }
    v231 = v230;
    v232 = *(void *)v402;
    while (1)
    {
      for (k = 0LL; k != v231; k = (char *)k + 1)
      {
        if (*(void *)v402 != v232) {
          objc_enumerationMutation(v229);
        }
        v234 = *(void **)(*((void *)&v401 + 1) + 8LL * (void)k);
        if (v234)
        {
          if ([*(id *)(v388 + 32) checkIfActiveDatasetRecordIsPresentInTheGivenList:v385 Missinglist:v228 record:*(void *)(*((void *)&v401 + 1) + 8 * (void)k)])
          {
            v235 = sub_1001768B4(1);
            v236 = (os_log_s *)objc_claimAutoreleasedReturnValue(v235);
            if (os_log_type_enabled(v236, OS_LOG_TYPE_ERROR))
            {
              v375 = (void *)objc_claimAutoreleasedReturnValue([v234 network]);
              v237 = (void *)objc_claimAutoreleasedReturnValue([v375 networkName]);
              v366 = (void *)objc_claimAutoreleasedReturnValue([v234 network]);
              v238 = (void *)objc_claimAutoreleasedReturnValue([v366 extendedPANID]);
              v239 = (void *)objc_claimAutoreleasedReturnValue([v234 borderAgent]);
              v240 = (__CFString *)objc_claimAutoreleasedReturnValue([v239 discriminatorId]);
              *(_DWORD *)std::string buf = 136316162;
              v436 = "-[THThreadNetworkCredentialsKeychainBackingStore cleanThreadKeychainDatabase:]_block_invoke";
              v437 = 1024;
              v438 = 2984;
              v439 = 2112;
              v440 = v237;
              v441 = 2112;
              v442 = v238;
              v443 = 2112;
              v444 = v240;
              v241 = v236;
              v242 = "%s:%d: Not deleting the ba record (name : %@ | xpanid : %@ | baID : %@), this belongs to Preferred BARecord List.";
              goto LABEL_203;
            }

LABEL_89:
  *(_WORD *)(a1 + 98) = 0;
  return result;
}

  __int16 v37 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_txErrorTxAbortedCsmaCfgBackoff));
  [v3 setObject:v37 forKey:@"tx_error_tx_aborted_csma_cfg_backoff"];

  unint64_t v8 = self->_has;
  if ((*(void *)&v8 & 0x8000000000000LL) == 0)
  {
LABEL_32:
    if ((*(void *)&v8 & 0x20000000000000LL) == 0) {
      goto LABEL_33;
    }
    goto LABEL_91;
  }

  PBDataWriterWriteUint32Field(v7, self->_txErrorTxAbortedCsmaCfgBackoff, 28LL);
  uint64_t v6 = self->_has;
  if ((*(void *)&v6 & 0x8000000000000LL) == 0)
  {
LABEL_32:
    if ((*(void *)&v6 & 0x20000000000000LL) == 0) {
      goto LABEL_33;
    }
    goto LABEL_91;
  }

  v4[57] = self->_txErrorTxAbortedCsmaCfgBackoff;
  *((void *)v4 + 31) |= 0x10000000000000uLL;
  uint64_t v6 = self->_has;
  if ((*(void *)&v6 & 0x8000000000000LL) == 0)
  {
LABEL_32:
    if ((*(void *)&v6 & 0x20000000000000LL) == 0) {
      goto LABEL_33;
    }
    goto LABEL_91;
  }

  *((_DWORD *)v6 + 58) = self->_txErrorTxAbortedCsmaPrepare;
  v6[31] |= 0x20000000000000uLL;
  int v10 = self->_has;
  if ((*(void *)&v10 & 0x40000000000000LL) == 0)
  {
LABEL_32:
    if ((*(void *)&v10 & 0x80000000000000LL) == 0) {
      goto LABEL_33;
    }
    goto LABEL_91;
  }

  __int16 v33 = 0LL;
  if ((*(void *)&v4 & 0x80000000000000LL) != 0)
  {
LABEL_37:
    uint64_t v32 = 2654435761LL * self->_txErrorTxAbortedRxAck;
    if ((*(void *)&v4 & 0x4000000000000LL) != 0) {
      goto LABEL_38;
    }
    goto LABEL_91;
  }

  self->_txErrorBusyChannelCcaNotStarted = v5[46];
  *(void *)&self->_has |= 0x20000000000uLL;
  char v9 = *((void *)v5 + 31);
  if ((v9 & 0x40000000000LL) == 0)
  {
LABEL_36:
    if ((v9 & 0x80000000000LL) == 0) {
      goto LABEL_37;
    }
    goto LABEL_91;
  }

void sub_100034BF0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  va_copy(va2, va1);
  uint64_t v9 = va_arg(va2, void);
  uint64_t v11 = va_arg(va2, void);
  uint64_t v12 = va_arg(va2, void);
  uint64_t v13 = va_arg(va2, void);
  uint64_t v14 = va_arg(va2, void);
  va_copy(va3, va2);
  uint64_t v15 = va_arg(va3, void);
  uint64_t v17 = va_arg(va3, void);
  uint64_t v18 = va_arg(va3, void);
  uint64_t v19 = va_arg(va3, void);
  sub_1000075F0((void *)(v2 - 64));
  sub_1000075F0((uint64_t *)va3);
  sub_100007618((uint64_t *)va2);
  sub_1000075F0((uint64_t *)va);
  sub_100007618((uint64_t *)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_100034C44(int a1, void *a2, void *a3)
{
  if (a1) {
    return sub_100006FF8(a3);
  }
  else {
    return sub_100006F84(a2);
  }
}

uint64_t sub_100034C60@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>, unsigned int a3)
{
  while (1)
  {
    uint64_t v5 = a2[1];
    uint64_t v6 = *a2 == v5 ? 0LL : *a2;
    uint64_t result = spinel_datatype_vpack(v6, v5 - *a2, a1, &a3);
    if ((result & 0x80000000) != 0) {
      break;
    }
    unint64_t v8 = result;
    uint64_t v10 = *a2;
    uint64_t v9 = a2[1];
    uint64_t result = (uint64_t)sub_100034D10(a2, result);
    if (v9 - v10 >= v8) {
      return result;
    }
  }

  a2[1] = *a2;
  return result;
}

void sub_100034CF8(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t *sub_100034D10(uint64_t *result, unint64_t a2)
{
  unint64_t v2 = result[1] - *result;
  BOOL v3 = a2 >= v2;
  unint64_t v4 = a2 - v2;
  if (v4 != 0 && v3) {
    return (uint64_t *)sub_1000356EC(result, v4);
  }
  if (!v3) {
    result[1] = *result + a2;
  }
  return result;
}

uint64_t sub_100034D38(uint64_t a1, uint64_t *a2, int a3)
{
  v17[0] = a3;
  v17[1] = 0;
  uint64_t v4 = 14LL;
  if (a3 > 97)
  {
    switch(a3)
    {
      case 'b':
        unsigned int v6 = sub_1001478B8(a2);
        sub_100034C60(v17, (uint64_t *)&v15, v6);
        sub_1000350D0(a1, &v15);
        goto LABEL_18;
      case 'c':
      case 'i':
      case 'l':
        goto LABEL_17;
      case 'd':
LABEL_23:
        sub_100147058(a2, (uint64_t)&v15);
        unsigned int v11 = v15;
        if (v16 == v15) {
          unsigned int v11 = 0;
        }
        sub_100034C60(v17, (uint64_t *)&__p, v11);
        sub_1000350D0(a1, &__p.__r_.__value_.__l.__data_);
        p_p = &__p;
        sub_100006F6C((void ***)&p_p);
        __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v15;
        goto LABEL_19;
      case 'e':
        sub_100147058(a2, (uint64_t)&v15);
        unsigned int v5 = v15;
        if (v16 - v15 == 6)
        {
          if (v15 == v16) {
            unsigned int v5 = 0;
          }
LABEL_31:
          sub_100034C60(v17, (uint64_t *)&__p, v5);
          sub_1000350D0(a1, &__p.__r_.__value_.__l.__data_);
          p_p = &__p;
          sub_100006F6C((void ***)&p_p);
          uint64_t v4 = 0LL;
        }

        else
        {
LABEL_32:
          uint64_t v4 = 2LL;
        }

        __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v15;
        sub_100006F6C((void ***)&__p);
        return v4;
      case 'f':
      case 'g':
      case 'h':
      case 'j':
      case 'k':
        return v4;
      default:
        if (a3 == 115) {
          goto LABEL_17;
        }
        if (a3 == 120) {
          goto LABEL_16;
        }
        return v4;
    }
  }

  if (a3 > 82)
  {
    switch(a3)
    {
      case 'S':
LABEL_17:
        unsigned int v8 = sub_1001472F4(a2);
        sub_100034C60(v17, (uint64_t *)&v15, v8);
        sub_1000350D0(a1, &v15);
        break;
      case 'U':
        sub_100147B4C(a2, &__p);
        if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
          uint64_t v13 = &__p;
        }
        else {
          LODWORD(v13) = __p.__r_.__value_.__l.__data_;
        }
        sub_100034C60(v17, (uint64_t *)&v15, v13);
        sub_1000350D0(a1, &v15);
        p_p = (std::string *)&v15;
        sub_100006F6C((void ***)&p_p);
        return 0LL;
      case 'X':
LABEL_16:
        unsigned int v7 = sub_1001476B4(a2, 0);
        sub_100034C60(v17, (uint64_t *)&v15, v7);
        sub_1000350D0(a1, &v15);
        break;
      default:
        return v4;
    }

LABEL_18:
    __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v15;
LABEL_19:
    p_p_p = (void ***)&__p;
  }

  else
  {
    switch(a3)
    {
      case 'C':
      case 'L':
        goto LABEL_17;
      case 'D':
        goto LABEL_23;
      case 'E':
        sub_100147058(a2, (uint64_t)&v15);
        unsigned int v5 = v15;
        if (v16 - v15 != 8) {
          goto LABEL_32;
        }
        if (v15 == v16) {
          unsigned int v5 = 0;
        }
        goto LABEL_31;
      case 'F':
      case 'G':
      case 'H':
      case 'I':
      case 'J':
      case 'K':
        return v4;
      default:
        if (a3 != 54) {
          return v4;
        }
        __p.__r_.__value_.__r.__words[0] = sub_1001474A0(a2);
        __p.__r_.__value_.__l.__size_ = v12;
        sub_100034C60(v17, (uint64_t *)&v15, &__p);
        sub_1000350D0(a1, &v15);
        p_p = (std::string *)&v15;
        p_p_p = (void ***)&p_p;
        break;
    }
  }

  sub_100006F6C(p_p_p);
  return 0LL;
}

      if (!*(_BYTE *)(a1 + 1380)) {
        return 0LL;
      }
      goto LABEL_19;
    }

    if (v9 == 273)
    {
      if (v7) {
        goto LABEL_19;
      }
      goto LABEL_18;
    }

  std::string::size_type v12 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_txDelaymin));
  [v3 setObject:v12 forKey:@"tx_delaymin"];

  has = (__int16)self->_has;
  if ((has & 0x20) == 0)
  {
LABEL_8:
    if ((has & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }

  PBDataWriterWriteUint32Field(v5, self->_txDelaymin, 6LL);
  has = (__int16)self->_has;
  if ((has & 0x20) == 0)
  {
LABEL_8:
    if ((has & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }

  v4[8] = self->_txDelaymin;
  *((_WORD *)v4 + 24) |= 0x40u;
  has = (__int16)self->_has;
  if ((has & 0x20) == 0)
  {
LABEL_8:
    if ((has & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }

  *((_DWORD *)result + 8) = self->_txDelaymin;
  *((_WORD *)result + 24) |= 0x40u;
  has = (__int16)self->_has;
  if ((has & 0x20) == 0)
  {
LABEL_8:
    if ((has & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }

  uint64_t v9 = 0LL;
  if ((has & 0x10) != 0)
  {
LABEL_9:
    uint64_t v10 = 2654435761LL * self->_txDelayavg;
    if ((*(_WORD *)&self->_has & 0x200) != 0) {
      goto LABEL_10;
    }
LABEL_20:
    unsigned int v11 = 0LL;
    if ((has & 4) != 0) {
      goto LABEL_11;
    }
LABEL_21:
    std::string::size_type v12 = 0LL;
    return v4 ^ v3 ^ v5 ^ v6 ^ v7 ^ v8 ^ v9 ^ v10 ^ v11 ^ v12;
  }

  self->_txDelaymin = *((_DWORD *)v4 + 8);
  *(_WORD *)&self->_has |= 0x40u;
  unsigned int v5 = *((_WORD *)v4 + 24);
  if ((v5 & 0x20) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }

  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_partitionIdChangesCount));
  [v3 setObject:v13 forKey:@"partition_id_changes_count"];

  has = (__int16)self->_has;
  if ((has & 2) != 0) {
    goto LABEL_19;
  }
LABEL_9:
  if ((has & 0x40) != 0)
  {
LABEL_10:
    unsigned int v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_parentChangesCount));
    [v3 setObject:v5 forKey:@"parent_changes_count"];
  }

  return v3;
}

  PBDataWriterWriteUint32Field(v5, self->_partitionIdChangesCount, 7LL);
  has = (__int16)self->_has;
  if ((has & 2) != 0) {
    goto LABEL_19;
  }
LABEL_9:
  if ((has & 0x40) != 0) {
LABEL_10:
  }
    PBDataWriterWriteUint32Field(v5, self->_parentChangesCount, 9LL);
LABEL_11:
}

  v4[9] = self->_partitionIdChangesCount;
  *((_WORD *)v4 + 22) |= 0x80u;
  has = (__int16)self->_has;
  if ((has & 2) != 0) {
    goto LABEL_19;
  }
LABEL_9:
  if ((has & 0x40) != 0)
  {
LABEL_10:
    v4[8] = self->_parentChangesCount;
    *((_WORD *)v4 + 22) |= 0x40u;
  }

  *((_DWORD *)result + 9) = self->_partitionIdChangesCount;
  *((_WORD *)result + 22) |= 0x80u;
  has = (__int16)self->_has;
  if ((has & 2) == 0)
  {
LABEL_9:
    if ((has & 0x40) == 0) {
      return result;
    }
    goto LABEL_10;
  }

  self->_partitionIdChangesCount = *((_DWORD *)v4 + 9);
  *(_WORD *)&self->_has |= 0x80u;
  unsigned int v5 = *((_WORD *)v4 + 22);
  if ((v5 & 2) != 0) {
    goto LABEL_19;
  }
LABEL_9:
  if ((v5 & 0x40) != 0)
  {
LABEL_10:
    self->_parentChangesCount = *((_DWORD *)v4 + 8);
    *(_WORD *)&self->_has |= 0x40u;
  }

  sub_10000D448((uint64_t)&v24);

  return count;
}

  __break(1u);
  return result;
}

  __break(1u);
  return result;
}

  uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_coexTxDeniedRequests));
  [v3 setObject:v16 forKey:@"coex_tx_denied_requests"];

  has = (__int16)self->_has;
  if ((has & 4) == 0)
  {
LABEL_6:
    if ((has & 2) == 0) {
      goto LABEL_7;
    }
    goto LABEL_20;
  }

  v4[17] = self->_coexTxDeniedRequests;
  *((_WORD *)v4 + 50) |= 8u;
  has = (__int16)self->_has;
  if ((has & 4) == 0)
  {
LABEL_6:
    if ((has & 2) == 0) {
      goto LABEL_7;
    }
    goto LABEL_20;
  }

  std::string::size_type v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", self->_rxUnicast));
  [v3 setObject:v12 forKey:@"rx_unicast"];

  has = (__int16)self->_has;
  if ((has & 1) == 0)
  {
LABEL_5:
    if ((has & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }

  v4[19] = self->_rxUnicast;
  *((_WORD *)v4 + 40) |= 0x800u;
  has = (__int16)self->_has;
  if ((has & 1) == 0)
  {
LABEL_5:
    if ((has & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }

  unsigned int v5 = 0LL;
  if ((has & 0x10) != 0)
  {
LABEL_8:
    unsigned int v6 = 2654435761LL * self->_rxErrInvalidSrcAddr;
    if ((*(_WORD *)&self->_has & 0x100) != 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }

    __break(0x5512u);
  }

  else
  {
LABEL_17:
    [v2 setMaxChangeinNodeCount:HIDWORD(qword_1002D1910)];
    [v2 setPercTopologyChangeTimeInstances:qword_1002D1910];
    sub_100155A68();

    return 0LL;
  }

  return result;
}

      __break(0x5500u);
    }
  }

  __break(0x5515u);
  return result;
}

  return v30;
}

  char v24 = sub_1001768B4(1);
  char v23 = (os_log_s *)objc_claimAutoreleasedReturnValue(v24);
  if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)std::string buf = 138412802;
    __int128 v65 = v8;
    uint64_t v66 = 2112;
    __int128 v67 = v12;
    uint64_t v68 = 2112;
    uint64_t v69 = v19;
    _os_log_error_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_ERROR,  "Failed to decode Keychain item (name=%@; xpanid=%@; uuid=%@)!",
      buf,
      0x20u);
  }

  uint64_t v25 = 0LL;
LABEL_21:

  objc_autoreleasePoolPop(v4);
  return v25;
}

void sub_100035040( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, char a17)
{
  *(void *)(v18 - 40) = v17;
  sub_100006F6C((void ***)(v18 - 40));
  std::string __p = &a17;
  sub_100006F6C((void ***)&__p);
  _Unwind_Resume(a1);
}

uint64_t sub_1000350D0(uint64_t a1, char **a2)
{
  return a1;
}

uint64_t *sub_100035104(uint64_t *a1, uint64_t a2)
{
  *a1 = a2;
  a1[1] = 0LL;
  sub_10003516C(&v5, a2);
  uint64_t v3 = a1[1];
  a1[1] = v5;
  uint64_t v5 = v3;
  sub_10000F9EC(&v5);
  return a1;
}

void sub_100035158(_Unwind_Exception *a1)
{
}

void *sub_10003516C(void *a1, uint64_t a2)
{
  *a1 = 0LL;
  uint64_t v4 = operator new(0x18uLL);
  v4[1] = 0x100000001LL;
  *uint64_t v4 = &off_1002AEB58;
  _OWORD v4[2] = a2;
  *a1 = v4;
  return a1;
}

void sub_1000351B8(void *a1)
{
  if (v1) {
    operator delete(v1);
  }
  __cxa_rethrow();
}

void sub_1000351D0(_Unwind_Exception *a1)
{
}

void sub_1000351EC(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 16);
  if (v1) {
    operator delete(v1);
  }
}

uint64_t sub_1000351FC()
{
  return 0LL;
}

uint64_t sub_100035204()
{
  return 0LL;
}

uint64_t sub_10003520C()
{
  return 0LL;
}

void *sub_100035214(void *a1, size_t a2)
{
  *a1 = 0LL;
  a1[1] = 0LL;
  a1[2] = 0LL;
  if (a2)
  {
    sub_10000CCB0(a1, a2);
    sub_10003527C((uint64_t)a1, a2);
  }

  return a1;
}

void sub_100035268( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
}

uint64_t sub_10003527C(uint64_t result, uint64_t a2)
{
  unint64_t v2 = *(_BYTE **)(result + 8);
  if (a2)
  {
    uint64_t v3 = &v2[a2];
    do
    {
      *v2++ = 0;
      --a2;
    }

    while (a2);
    unint64_t v2 = v3;
  }

  *(void *)(result + 8) = v2;
  return result;
}

char *sub_1000352A0(char *result, char *a2, char *a3, char *a4, uint64_t a5)
{
  uint64_t v5 = a2;
  if (a5 < 1) {
    return v5;
  }
  unsigned int v8 = result;
  uint64_t v9 = *((void *)result + 2);
  unint64_t v10 = *((void *)result + 1);
  if ((uint64_t)(v9 - v10) < a5)
  {
    uint64_t v11 = *(void *)result;
    unint64_t v12 = v10 - *(void *)result;
    BOOL v13 = __CFADD__(v12, a5);
    unint64_t v14 = v12 + a5;
    if (v13)
    {
      __break(0x5500u);
    }

    else if ((v14 & 0x8000000000000000LL) == 0)
    {
      uint64_t v15 = (uint64_t)&a2[-v11];
      unint64_t v16 = v9 - v11;
      if (2 * v16 > v14) {
        unint64_t v14 = 2 * v16;
      }
      if (v16 >= 0x3FFFFFFFFFFFFFFFLL) {
        size_t v17 = 0x7FFFFFFFFFFFFFFFLL;
      }
      else {
        size_t v17 = v14;
      }
      sub_100035540(v21, v17, v15, (uint64_t)(result + 16));
      sub_100035454((uint64_t)v21, a3, a5);
      uint64_t v5 = (char *)sub_10003547C((void **)v8, (uint64_t)v21, v5);
      sub_100035598((uint64_t)v21);
      return v5;
    }

    sub_10000CCF0();
  }

  uint64_t v18 = v10 - (void)a2;
  if ((uint64_t)(v10 - (void)a2) >= a5)
  {
    uint64_t v19 = &a3[a5];
LABEL_18:
    sub_100035414(v8, v5, v10, &v5[a5]);
    if (v19 != a3) {
      memmove(v5, a3, v19 - a3);
    }
    return v5;
  }

  if (!__OFSUB__(a5, v18))
  {
    uint64_t v19 = &a3[v18];
    int64_t v20 = a4 - &a3[v18];
    if (a4 != &a3[v18]) {
      memmove(*((void **)result + 1), &a3[v18], a4 - &a3[v18]);
    }
    *((void *)v8 + 1) = v10 + v20;
    if (v18 < 1) {
      return v5;
    }
    goto LABEL_18;
  }

  __break(0x5515u);
  return result;
}

void sub_100035400(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void *sub_100035414(void *result, char *a2, unint64_t a3, _BYTE *a4)
{
  uint64_t v4 = (_BYTE *)result[1];
  uint64_t v5 = &a2[v4 - a4];
  unsigned int v6 = v4;
  while ((unint64_t)v5 < a3)
  {
    char v7 = *v5++;
    *v6++ = v7;
  }

  result[1] = v6;
  if (v4 != a4) {
    return memmove(a4, a2, v4 - a4);
  }
  return result;
}

uint64_t sub_100035454(uint64_t result, char *a2, uint64_t a3)
{
  uint64_t v3 = *(_BYTE **)(result + 16);
  if (a3)
  {
    uint64_t v4 = &v3[a3];
    do
    {
      char v5 = *a2++;
      *v3++ = v5;
      --a3;
    }

    while (a3);
    uint64_t v3 = v4;
  }

  *(void *)(result + 16) = v3;
  return result;
}

uint64_t sub_10003547C(void **a1, uint64_t a2, char *__src)
{
  uint64_t v5 = *(void *)(a2 + 8);
  unsigned int v6 = (char *)*a1;
  uint64_t v7 = v5;
  if (*a1 != __src)
  {
    uint64_t v7 = *(void *)(a2 + 8);
    unsigned int v8 = __src;
    do
    {
      char v9 = *--v8;
      *(_BYTE *)--uint64_t v7 = v9;
    }

    while (v8 != v6);
  }

  *(void *)(a2 + 8) = v7;
  unint64_t v10 = a1[1];
  uint64_t v11 = *(void *)(a2 + 16);
  int64_t v12 = v10 - __src;
  if (v10 != __src) {
    memmove(*(void **)(a2 + 16), __src, v10 - __src);
  }
  *(void *)(a2 + 16) = v11 + v12;
  BOOL v13 = (char *)*a1;
  *a1 = *(void **)(a2 + 8);
  *(void *)(a2 + 8) = v13;
  unint64_t v14 = a1[1];
  a1[1] = *(void **)(a2 + 16);
  *(void *)(a2 + 16) = v14;
  uint64_t v15 = a1[2];
  a1[2] = *(void **)(a2 + 24);
  *(void *)(a2 + 24) = v15;
  *(void *)a2 = *(void *)(a2 + 8);
  return v5;
}

void *sub_100035540(void *a1, size_t __sz, uint64_t a3, uint64_t a4)
{
  a1[3] = 0LL;
  a1[4] = a4;
  if (__sz) {
    uint64_t v7 = (char *)operator new(__sz);
  }
  else {
    uint64_t v7 = 0LL;
  }
  *a1 = v7;
  a1[1] = &v7[a3];
  a1[2] = &v7[a3];
  a1[3] = &v7[__sz];
  return a1;
}

uint64_t sub_100035598(uint64_t a1)
{
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t sub_1000355CC(uint64_t result, uint64_t a2)
{
  if (*(void *)(result + 16) != a2) {
    *(void *)(result + 16) = a2;
  }
  return result;
}

uint64_t *sub_1000355E0(uint64_t *result, uint64_t *a2)
{
  if (a2 != result)
  {
    uint64_t v3 = result;
    v4[0] = 0LL;
    sub_100035654(v4, result);
    sub_100035654(v3, a2);
    sub_100035654(a2, v4);
    return sub_100006E7C(v4);
  }

  return result;
}

void sub_100035640( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t *sub_100035654(uint64_t *result, uint64_t *a2)
{
  if (a2 != result)
  {
    uint64_t v3 = *a2;
    if (*a2)
    {
      *uint64_t result = v3;
      if ((v3 & 1) != 0)
      {
        __int128 v4 = *(_OWORD *)(a2 + 1);
        result[3] = a2[3];
        *(_OWORD *)(result + 1) = v4;
      }

      else
      {
        uint64_t result = (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v3 & 0xFFFFFFFFFFFFFFFELL))( a2 + 1,  result + 1,  1LL);
      }

      *a2 = 0LL;
    }

    else
    {
      return sub_100006EA4(result);
    }
  }

  return result;
}

void sub_1000356C8(void *a1)
{
  void *v1 = 0LL;
  __cxa_rethrow();
}

void sub_1000356D8(_Unwind_Exception *a1)
{
}

uint64_t sub_1000356EC(uint64_t *a1, unint64_t a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[1];
  if (v4 - v5 >= a2) {
    return sub_10003527C((uint64_t)a1, a2);
  }
  uint64_t v6 = v5 - *a1;
  unint64_t v7 = v6 + a2;
  if (__CFADD__(v6, a2))
  {
    __break(0x5500u);
LABEL_12:
    sub_10000CCF0();
  }

  if ((v7 & 0x8000000000000000LL) != 0) {
    goto LABEL_12;
  }
  unint64_t v8 = v4 - *a1;
  if (2 * v8 > v7) {
    unint64_t v7 = 2 * v8;
  }
  if (v8 >= 0x3FFFFFFFFFFFFFFFLL) {
    size_t v9 = 0x7FFFFFFFFFFFFFFFLL;
  }
  else {
    size_t v9 = v7;
  }
  sub_100035540(v11, v9, v6, (uint64_t)(a1 + 2));
  sub_1000357C0((uint64_t)v11, a2);
  sub_1000357E4(a1, v11);
  return sub_100035598((uint64_t)v11);
}

void sub_1000357AC(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_1000357C0(uint64_t result, uint64_t a2)
{
  unint64_t v2 = *(_BYTE **)(result + 16);
  if (a2)
  {
    uint64_t v3 = &v2[a2];
    do
    {
      *v2++ = 0;
      --a2;
    }

    while (a2);
    unint64_t v2 = v3;
  }

  *(void *)(result + 16) = v2;
  return result;
}

uint64_t *sub_1000357E4(uint64_t *result, void *a2)
{
  uint64_t v2 = *result;
  uint64_t v3 = result[1];
  uint64_t v4 = a2[1];
  while (v3 != v2)
  {
    char v5 = *(_BYTE *)--v3;
    *(_BYTE *)--uint64_t v4 = v5;
  }

  a2[1] = v4;
  uint64_t v6 = *result;
  *uint64_t result = v4;
  a2[1] = v6;
  uint64_t v7 = result[1];
  result[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = result[2];
  result[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_10003583C(uint64_t a1, uint64_t a2, uint64_t *a3, char a4, uint64_t *a5)
{
  v10[0] = 0LL;
  sub_100007640((uint64_t)v10, a3);
  sub_1000342C8(a1, a2, v10);
  sub_100006E7C(v10);
  *(void *)a1 = off_1002AEBB8;
  *(_BYTE *)(a1 + 136) = a4;
  sub_10000D19C((void *)(a1 + 144), a5);
  *(_DWORD *)(a1 + 168) = sub_1000D8DE8(a2);
  return a1;
}

void sub_1000358CC(_Unwind_Exception *a1)
{
}

void *sub_100035904(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 136)) {
    sub_1000DA700(*(void *)(a1 + 56), *(unsigned int *)(a1 + 168));
  }
  return sub_100034408((void *)a1);
}

uint64_t sub_100035954(uint64_t a1, int a2)
{
  else {
    return dword_1002249DC[a2 - 105];
  }
}

uint64_t sub_100035978( uint64_t a1, int a2, unsigned int *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v16 = sub_10004ECBC(a2, a3, (uint64_t)a3, a4, a5, a6, a7, a8);
  unsigned int v17 = *(unsigned __int16 *)(a1 + 8);
  uint64_t result = 3LL;
  if (v17 > 0x96)
  {
    if (*(unsigned __int16 *)(a1 + 8) > 0xC3u)
    {
      if (v17 == 196) {
        goto LABEL_97;
      }
      if (v17 != 230)
      {
        if (v17 == 241)
        {
          unsigned int v19 = 1;
LABEL_7:
          if ((v16 & 0xFFFFFFF8) == 0x68)
          {
            sub_10015A00C(a1);
            if ((v16 - 105) > 4) {
LABEL_65:
            }
              uint64_t v20 = 32LL;
            else {
              uint64_t v20 = dword_1002249DC[v16 - 105];
            }
            goto LABEL_176;
          }

          if (sub_100159F84(a1)) {
            return 0LL;
          }
          sub_10015A00C(a1);
          char v23 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (v23)
          {
            goto LABEL_198;
          }

          if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
            goto LABEL_198;
          }
LABEL_181:
          sub_1001FB53C();
          goto LABEL_198;
        }

LABEL_210:
        *(_WORD *)(a1 + 8) = 0;
        return result;
      }

LABEL_165:
      unsigned int v19 = *(_DWORD *)(a1 + 128);
      if (v19)
      {
        xpc_object_t v62 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v62)
        {
          goto LABEL_198;
        }

        if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          goto LABEL_198;
        }
        goto LABEL_181;
      }

      sub_10000AC00(buf, "Joiner:ReturnImmediatelyOnStart");
      dispatch_object_t v63 = sub_10000ED88((uint64_t **)(a1 + 144), (__n128 *)buf);
      BOOL v64 = sub_1001478B8(v63);
      if (SHIBYTE(v89) < 0) {
        operator delete(*(void **)buf);
      }
      if (!v64)
      {
        sub_100159FC0(a1, 60.0);
        unsigned int v19 = 0;
        *(_WORD *)(a1 + 8) = 241;
        goto LABEL_7;
      }

    if (sub_1000B55AC(buf, "RouterPacketCount[10]"))
    {
      uint64_t v132 = sub_1000BE984(4, uint64);
    }

    else if (sub_1000B55AC(buf, "RouterPacketCount[11]"))
    {
      uint64_t v128 = sub_1000BE984(4, uint64);
    }

    else if (sub_1000B55AC(buf, "RouterPacketCount[12]"))
    {
      __int128 v123 = sub_1000BE984(4, uint64);
    }

    else if (sub_1000B55AC(buf, "RouterPacketCount[13]"))
    {
      __int128 v119 = sub_1000BE984(4, uint64);
    }

      if (sub_1000B55AC(buf, "DirectNoAckError[10]"))
      {
        uint64_t v136 = sub_1000BE984(4, uint64);
      }

      else if (sub_1000B55AC(buf, "DirectNoAckError[11]"))
      {
        uint64_t v134 = sub_1000BE984(4, uint64);
      }

      else if (sub_1000B55AC(buf, "DirectNoAckError[12]"))
      {
        uint64_t v128 = sub_1000BE984(4, uint64);
      }

      else if (sub_1000B55AC(buf, "DirectNoAckError[13]"))
      {
        uint64_t v124 = sub_1000BE984(4, uint64);
      }

      else if (sub_1000B55AC(buf, "DirectNoAckError[14]"))
      {
        uint64_t v122 = sub_1000BE984(4, uint64);
      }

      else if (sub_1000B55AC(buf, "DirectNoAckError[15]"))
      {
        uint64_t v118 = sub_1000BE984(4, uint64);
      }

      else if (sub_1000B55AC(buf, "DirectNoAckError[16]"))
      {
        uint64_t v114 = sub_1000BE984(4, uint64);
      }

    if (sub_1000B55AC(buf, "RouterPacketCount[10]"))
    {
      __int128 v127 = sub_1000BE984(4, uint64);
    }

    else if (sub_1000B55AC(buf, "RouterPacketCount[11]"))
    {
      __int128 v123 = sub_1000BE984(4, uint64);
    }

    else if (sub_1000B55AC(buf, "RouterPacketCount[12]"))
    {
      uint64_t v118 = sub_1000BE984(4, uint64);
    }

    else if (sub_1000B55AC(buf, "RouterPacketCount[13]"))
    {
      uint64_t v114 = sub_1000BE984(4, uint64);
    }

    if (sub_1000B55AC(buf, "DirectNoAckError[10]"))
    {
      __int128 v135 = sub_1000BE984(4, uint64);
    }

    else if (sub_1000B55AC(buf, "DirectNoAckError[11]"))
    {
      __int128 v133 = sub_1000BE984(4, uint64);
    }

    else if (sub_1000B55AC(buf, "DirectNoAckError[12]"))
    {
      __int128 v127 = sub_1000BE984(4, uint64);
    }

    else if (sub_1000B55AC(buf, "DirectNoAckError[13]"))
    {
      __int128 v123 = sub_1000BE984(4, uint64);
    }

    else if (sub_1000B55AC(buf, "DirectNoAckError[14]"))
    {
      __int128 v121 = sub_1000BE984(4, uint64);
    }

    else if (sub_1000B55AC(buf, "DirectNoAckError[15]"))
    {
      __int128 v117 = sub_1000BE984(4, uint64);
    }

    else if (sub_1000B55AC(buf, "DirectNoAckError[16]"))
    {
      __int128 v113 = sub_1000BE984(4, uint64);
    }

LABEL_175:
      uint64_t v20 = 0LL;
LABEL_176:
      *(void *)std::string buf = 0LL;
      (*(void (**)(uint64_t, uint64_t, _BYTE *))(*(void *)a1 + 32LL))(a1, v20, buf);
      goto LABEL_177;
    }

    if (v17 != 151)
    {
      if (v17 == 186) {
        goto LABEL_74;
      }
      goto LABEL_210;
    }

LABEL_23:
    unsigned int v19 = *(_DWORD *)(a1 + 128);
    if (!v19) {
      goto LABEL_175;
    }
    std::string v21 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (!v21)
    {
      if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        goto LABEL_198;
      }
      goto LABEL_194;
    }

    a1 = (_WORD *)((char *)a1 + v15);
  }

  int v24 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v24)
  {
    if (sub_10015A058(6) && os_log_type_enabled(v24, OS_LOG_TYPE_INFO))
    {
      uint64_t v25 = &v37;
      if ((v37.__r_.__value_.__s.__size_ & 0x80u) != 0) {
        uint64_t v25 = (std::string *)v37.__r_.__value_.__r.__words[0];
      }
      LODWORD(v41.__r_.__value_.__l.__data_) = 136315138;
      *(std::string::size_type *)((char *)v41.__r_.__value_.__r.__words + 4) = (std::string::size_type)v25;
      _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_INFO, "Structure string : %s", (uint8_t *)&v41, 0xCu);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  if (a4) {
    sub_10005653C(a3, (uint64_t *)&v38);
  }
  else {
    sub_1000200A0(a3, &v37);
  }
  uint64_t v31 = 0LL;
LABEL_55:
  sub_10000D448((uint64_t)&v38);
  sub_10000C0E8(v40);
  return v31;
}

        __break(0x5500u);
        return result;
      }
    }
  }

  uint64_t v12 = 0LL;
  *((_DWORD *)v1 + 2) = 1;
  void *v1 = tv_sec;
LABEL_12:
  uint64_t v13 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v13)
  {
    uint64_t v14 = v13;
    if (sub_10015A058(7))
    {
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v15 = *((_DWORD *)v1 + 2);
        int v16 = *v1;
        *(_DWORD *)std::string buf = 67109632;
        uint64_t v20 = v15;
        std::string v21 = 2048;
        uint64_t v22 = v16;
        char v23 = 2048;
        int v24 = tv_sec;
        _os_log_debug_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEBUG,  "numOccurances=%d, NCP-Tx-Grant-Denied-Time-Sec=%llu, Curr-Time-Sec=%ld",  buf,  0x1Cu);
      }
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  return v12;
}

      char v23 = (_WORD *)((char *)v23 + v25);
      if (++v22 == 7)
      {
        uint64_t v28 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v28)
        {
          if (sub_10015A058(6) && os_log_type_enabled(v28, OS_LOG_TYPE_INFO))
          {
            unint64_t v29 = &v44;
            if ((v44.__r_.__value_.__s.__size_ & 0x80u) != 0) {
              unint64_t v29 = (std::string *)v44.__r_.__value_.__r.__words[0];
            }
            LODWORD(v50.__r_.__value_.__l.__data_) = 136315138;
            *(std::string::size_type *)((char *)v50.__r_.__value_.__r.__words + 4) = (std::string::size_type)v29;
            _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_INFO,  "Structure string : %s",  (uint8_t *)&v50,  0xCu);
          }
        }

        else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
          sub_1001FB53C();
        }

        sub_1000200A0(a3, &v44);
        int v38 = 0LL;
        goto LABEL_41;
      }
    }

    uint64_t v40 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (!v40)
    {
      if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        goto LABEL_40;
      }
      goto LABEL_39;
    }
  }

  unsigned int v26 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v26)
  {
    if (sub_10015A058(6) && os_log_type_enabled(v26, OS_LOG_TYPE_INFO))
    {
      int v27 = &v34;
      if ((v34.__r_.__value_.__s.__size_ & 0x80u) != 0) {
        int v27 = (std::string *)v34.__r_.__value_.__r.__words[0];
      }
      *(_DWORD *)std::string buf = 136315138;
      v39[0] = v27;
      _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_INFO, "Structure string : %s", buf, 0xCu);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  sub_1000200A0(a3, &v34);
  uint64_t v28 = 0LL;
LABEL_49:
  sub_10000D448((uint64_t)&v36);
  return v28;
}

    a1 = (_WORD *)((char *)a1 + v20);
    ++v7;
  }

  while (v7 != 2);
  unint64_t v29 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v29)
  {
    if (sub_10015A058(6) && os_log_type_enabled(v29, OS_LOG_TYPE_INFO))
    {
      uint64_t v30 = &v42;
      if ((v42.__r_.__value_.__s.__size_ & 0x80u) != 0) {
        uint64_t v30 = (std::string *)v42.__r_.__value_.__r.__words[0];
      }
      LODWORD(v46.__r_.__value_.__l.__data_) = 136315138;
      *(std::string::size_type *)((char *)v46.__r_.__value_.__r.__words + 4) = (std::string::size_type)v30;
      _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_INFO, "Structure string : %s", (uint8_t *)&v46, 0xCu);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  if (a4) {
    sub_10005653C(a3, (uint64_t *)&v43);
  }
  else {
    sub_1000200A0(a3, &v42);
  }
  __int16 v36 = 0LL;
LABEL_55:
  sub_10000D448((uint64_t)&v43);
  sub_10000C0E8(v45);
  return v36;
}

    a1 = (_WORD *)((char *)a1 + v15);
  }

  int v24 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v24)
  {
    if (sub_10015A058(6) && os_log_type_enabled(v24, OS_LOG_TYPE_INFO))
    {
      uint64_t v25 = &v37;
      if ((v37.__r_.__value_.__s.__size_ & 0x80u) != 0) {
        uint64_t v25 = (std::string *)v37.__r_.__value_.__r.__words[0];
      }
      LODWORD(v41.__r_.__value_.__l.__data_) = 136315138;
      *(std::string::size_type *)((char *)v41.__r_.__value_.__r.__words + 4) = (std::string::size_type)v25;
      _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_INFO, "Structure string : %s", (uint8_t *)&v41, 0xCu);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  if (a4) {
    sub_10005653C(a3, (uint64_t *)&v38);
  }
  else {
    sub_1000200A0(a3, &v37);
  }
  uint64_t v31 = 0LL;
LABEL_55:
  sub_10000D448((uint64_t)&v38);
  sub_10000C0E8(v40);
  return v31;
}

    a1 = (_WORD *)((char *)a1 + v15);
  }

  int v24 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v24)
  {
    if (sub_10015A058(6) && os_log_type_enabled(v24, OS_LOG_TYPE_INFO))
    {
      uint64_t v25 = &v37;
      if ((v37.__r_.__value_.__s.__size_ & 0x80u) != 0) {
        uint64_t v25 = (std::string *)v37.__r_.__value_.__r.__words[0];
      }
      LODWORD(v41.__r_.__value_.__l.__data_) = 136315138;
      *(std::string::size_type *)((char *)v41.__r_.__value_.__r.__words + 4) = (std::string::size_type)v25;
      _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_INFO, "Structure string : %s", (uint8_t *)&v41, 0xCu);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  if (a4) {
    sub_10005653C(a3, (uint64_t *)&v38);
  }
  else {
    sub_1000200A0(a3, &v37);
  }
  uint64_t v31 = 0LL;
LABEL_55:
  sub_10000D448((uint64_t)&v38);
  sub_10000C0E8(v40);
  return v31;
}

          *uint64_t v6 = v2;
          return;
        }

        if (*v3)
        {
          sub_100006FF8(v3);
          sub_100006EA4(v3);
        }

        continue;
      }

      goto LABEL_91;
    }
  }

  if (v7 != 392) {
    goto LABEL_23;
  }
  uint64_t v8 = (uint64_t *)(a1 + 184);
  size_t v9 = sub_1000AD580((uint64_t *)(a1 + 184));
  unint64_t v10 = (*(uint64_t (**)(uint64_t))(*(void *)v9 + 72LL))(v9);
  if ((sub_1000F3F58((int)v6, v10) & 1) != 0
    || (uint64_t v11 = sub_1000AD580((uint64_t *)(a1 + 1552)),
        uint64_t v12 = (*(uint64_t (**)(uint64_t))(*(void *)v11 + 72LL))(v11),
        (sub_1000F3F58((int)v6, v12) & 1) != 0)
    || *v4 > 0
    || (uint64_t v13 = sub_1000AD580((uint64_t *)(a1 + 1552)),
        ((*(uint64_t (**)(uint64_t))(*(void *)v13 + 40LL))(v13) & 1) != 0)
    || (uint64_t v14 = sub_1000AD580((uint64_t *)(a1 + 184)),
        ((*(uint64_t (**)(uint64_t))(*(void *)v14 + 40LL))(v14) & 1) != 0)
    || (uint64_t v15 = (unsigned __int8 *)sub_1000AD5C0(), sub_10000E214(v15)))
  {
    int v16 = sub_1000AD580((uint64_t *)(a1 + 1552));
    unsigned int v17 = (*(uint64_t (**)(uint64_t))(*(void *)v16 + 72LL))(v16);
    sub_10011D904((uint64_t)v6, v17);
LABEL_21:
    uint64_t v22 = sub_1000AD580(v8);
    char v23 = (*(uint64_t (**)(uint64_t))(*(void *)v22 + 72LL))(v22);
    sub_10011D904((uint64_t)v6, v23);
    goto LABEL_29;
  }

  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_retryIntervalMax));
  [v3 setObject:v12 forKey:@"retry_interval_max"];

  has = (__int16)self->_has;
  if ((has & 8) == 0)
  {
LABEL_8:
    if ((has & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_25;
  }

  PBDataWriterWriteUint32Field(v5, self->_retryIntervalMax, 6LL);
  has = (__int16)self->_has;
  if ((has & 8) == 0)
  {
LABEL_8:
    if ((has & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_25;
  }

  v4[6] = self->_retryIntervalMax;
  *((_WORD *)v4 + 34) |= 0x10u;
  has = (__int16)self->_has;
  if ((has & 8) == 0)
  {
LABEL_8:
    if ((has & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_25;
  }

  *((_DWORD *)result + 6) = self->_retryIntervalMax;
  *((_WORD *)result + 34) |= 0x10u;
  has = (__int16)self->_has;
  if ((has & 8) == 0)
  {
LABEL_8:
    if ((has & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_25;
  }

  size_t v9 = 0LL;
  if ((has & 4) != 0)
  {
LABEL_9:
    unint64_t v10 = 2654435761LL * self->_retryInterval90perc;
    if ((*(_WORD *)&self->_has & 0x4000) != 0) {
      goto LABEL_10;
    }
    goto LABEL_25;
  }

  self->_retryIntervalMax = *((_DWORD *)v4 + 6);
  *(_WORD *)&self->_has |= 0x10u;
  char v5 = *((_WORD *)v4 + 34);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_25;
  }

  PBDataWriterWriteUint32Field(v9, self->_coexTxGrantedRequests, 3LL);
  uint64_t v4 = v9;
  has = (__int16)self->_has;
  if ((has & 8) == 0)
  {
LABEL_5:
    if ((has & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_25;
  }

  self->_coexTxGrantedRequests = *((_DWORD *)v4 + 18);
  *(_WORD *)&self->_has |= 0x10u;
  char v5 = *((_WORD *)v4 + 50);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_25;
  }

  unsigned int v17 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_rxErrSecurity));
  [v3 setObject:v17 forKey:@"rx_err_security"];

  has = (__int16)self->_has;
  if ((has & 0x20) == 0)
  {
LABEL_10:
    if ((has & 4) == 0) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }

  PBDataWriterWriteUint32Field(v7, self->_rxErrFcs, 5LL);
  uint64_t v4 = v7;
  has = (__int16)self->_has;
  if ((has & 0x200) == 0)
  {
LABEL_7:
    if ((has & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_25;
  }

  v4[8] = self->_rxBroadcast;
  *((_WORD *)v4 + 40) |= 1u;
  has = (__int16)self->_has;
  if ((has & 8) == 0)
  {
LABEL_6:
    if ((has & 0x200) == 0) {
      goto LABEL_7;
    }
    goto LABEL_25;
  }

  v4[16] = self->_rxErrSecurity;
  *((_WORD *)v4 + 40) |= 0x100u;
  has = (__int16)self->_has;
  if ((has & 0x20) == 0)
  {
LABEL_10:
    if ((has & 4) == 0) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }

  unint64_t v10 = 0LL;
LABEL_24:
  uint64_t v11 = PBRepeatedUInt32Hash(&self->_rxPacketCountHistograms, a2);
  if ((*(_WORD *)&self->_has & 0x80) != 0) {
    uint64_t v12 = 2654435761LL * self->_rxErrPercentage;
  }
  else {
    uint64_t v12 = 0LL;
  }
  return v16 ^ v17 ^ v15 ^ v14 ^ v4 ^ v5 ^ v6 ^ v7 ^ v8 ^ v9 ^ v10 ^ v12 ^ v11;
}

  self->_rxErrFcs = *((_DWORD *)v4 + 11);
  *(_WORD *)&self->_has |= 8u;
  char v5 = *((_WORD *)v4 + 40);
  if ((v5 & 0x200) == 0)
  {
LABEL_7:
    if ((v5 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_25;
  }

LABEL_30:
  (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
LABEL_42:

LABEL_43:
  objc_autoreleasePoolPop(v2);
}

  return v34;
}

  _Block_object_dispose(&v54, 8);
  _Block_object_dispose(&v60, 8);

  return v32;
}

LABEL_198:
    if (v19 <= 1) {
      uint64_t v65 = 1LL;
    }
    else {
      uint64_t v65 = v19;
    }
    uint64_t v66 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v66)
    {
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }

    *(void *)std::string buf = 0LL;
    (*(void (**)(uint64_t, uint64_t, _BYTE *))(*(void *)a1 + 32LL))(a1, v65, buf);
    if (*(void *)buf) {
      (*(void (**)(void))(**(void **)buf + 8LL))(*(void *)buf);
    }
    uint64_t result = 3LL;
    goto LABEL_210;
  }

  if (*(unsigned __int16 *)(a1 + 8) <= 0x80u)
  {
    if (*(_WORD *)(a1 + 8))
    {
      if (v17 != 115) {
        goto LABEL_210;
      }
      goto LABEL_39;
    }

    uint64_t v22 = *(void *)(a1 + 56);
    if (*(_BYTE *)(v22 + 1376))
    {
      if (sub_1000D8DE8(v22) != 2)
      {
        sub_100159FC0(a1, 30.0);
        *(_WORD *)(a1 + 8) = 115;
LABEL_39:
        int v24 = sub_1000D8DE8(*(void *)(a1 + 56));
        if (sub_1000B50E8(v24))
        {
          if (sub_100159F84(a1)) {
            return 0LL;
          }
          sub_10015A00C(a1);
          uint64_t v25 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (v25)
          {
            unsigned int v26 = v25;
          }

          else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
          {
            sub_1001FB53C();
          }

          unsigned int v19 = 1;
          goto LABEL_198;
        }

        sub_10015A00C(a1);
        int v27 = sub_1000D8DE8(*(void *)(a1 + 56));
        if (sub_1000B5098(v27))
        {
          *(void *)std::string buf = 0LL;
          (*(void (**)(uint64_t, uint64_t, _BYTE *))(*(void *)a1 + 32LL))(a1, 10LL, buf);
          goto LABEL_177;
        }

        *(_WORD *)(a1 + 8) = 129;
        goto LABEL_48;
      }

      *(void *)std::string buf = 0LL;
      (*(void (**)(uint64_t, uint64_t, _BYTE *))(*(void *)a1 + 32LL))(a1, 4LL, buf);
    }

    else
    {
      *(void *)std::string buf = 0LL;
      (*(void (**)(uint64_t, uint64_t, _BYTE *))(*(void *)a1 + 32LL))(a1, 3LL, buf);
    }

          uint64_t result = PBReaderRecallMark(a2, v222);
          continue;
        }

        v211 = 0;
        v212 = 0;
        v187 = 0LL;
        uint64_t result = (uint64_t)(v3 + 14);
        while (1)
        {
          v213 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          v214 = v213 + 1;
          if (v213 == -1) {
            break;
          }
          if (v214 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            goto LABEL_325;
          }
          v215 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v213);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v214;
          v187 |= (unint64_t)(v215 & 0x7F) << v211;
          if ((v215 & 0x80) == 0) {
            goto LABEL_326;
          }
          v211 += 7;
          uint64_t v11 = v212++ >= 9;
          if (v11) {
            goto LABEL_324;
          }
        }

        __break(0x5500u);
        return result;
      case 9u:
        if (v14 != 2)
        {
          uint64_t v102 = 0;
          __int128 v103 = 0;
          uint64_t v98 = 0LL;
          uint64_t result = v3 + 32;
          while (1)
          {
            uint64_t v104 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            __int128 v105 = v104 + 1;
            if (v104 == -1) {
              goto LABEL_198;
            }
            if (v105 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
              break;
            }
            uint64_t v106 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v104);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v105;
            v98 |= (unint64_t)(v106 & 0x7F) << v102;
            if ((v106 & 0x80) == 0) {
              goto LABEL_192;
            }
            v102 += 7;
            uint64_t v11 = v103++ >= 9;
            if (v11)
            {
LABEL_146:
              __int128 v107 = 0LL;
              goto LABEL_195;
            }
          }

LABEL_177:
    if (*(void *)buf) {
      (*(void (**)(void))(**(void **)buf + 8LL))(*(void *)buf);
    }
    uint64_t result = 2LL;
    goto LABEL_210;
  }

  if (v17 != 129)
  {
    if (v17 != 141) {
      goto LABEL_210;
    }
    goto LABEL_19;
  }

LABEL_48:
  if (a2 == 2) {
    return 0LL;
  }
  if (!*(_BYTE *)(a1 + 136))
  {
    uint64_t v40 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v40)
    {
      std::string v41 = v40;
      if (sub_10015A058(6) && os_log_type_enabled(v41, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)std::string buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v41, OS_LOG_TYPE_INFO, "Stopping Joiner Commissioning", buf, 2u);
      }
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }

    sub_100034C60("Ciib", (uint64_t *)buf, 0x80u);
    sub_100006EFC(a1 + 104, (__n128 *)buf);
    v84.__r_.__value_.__r.__words[0] = (std::string::size_type)buf;
    sub_100006F6C((void ***)&v84);
    *(_WORD *)(a1 + 98) = 0;
    *(_WORD *)(a1 + 8) = 141;
LABEL_19:
    unsigned int v19 = *(_DWORD *)(a1 + 128);
    if (v19 && v19 != 10)
    {
      unint64_t v42 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (!v42)
      {
        if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          goto LABEL_198;
        }
        goto LABEL_194;
      }

      goto LABEL_198;
    }

    sub_100034C60("Ciib", (uint64_t *)buf, 0x80u);
    sub_100006EFC(a1 + 104, (__n128 *)buf);
    v84.__r_.__value_.__r.__words[0] = (std::string::size_type)buf;
    sub_100006F6C((void ***)&v84);
    *(_WORD *)(a1 + 98) = 0;
    *(_WORD *)(a1 + 8) = 151;
    goto LABEL_23;
  }

  *(_DWORD *)(a1 + 168) = sub_1000D8DE8(*(void *)(a1 + 56));
  sub_10000AC00(buf, "Joiner:PSKd");
  uint64_t v28 = sub_100037208(a1 + 144, (const void **)buf);
  if (SHIBYTE(v89) < 0) {
    operator delete(*(void **)buf);
  }
  if (!v28)
  {
    int v43 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v43)
    {
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }

    unsigned int v19 = 2;
    goto LABEL_198;
  }

  unint64_t v29 = 0LL;
  while (1)
  {
    uint64_t v30 = off_1002C8FC8[v29 / 8];
    if (!v30) {
      break;
    }
    sub_10000AC00(buf, v30);
    uint64_t v31 = sub_100037208(a1 + 144, (const void **)buf);
    uint64_t v32 = v31;
    if (SHIBYTE(v89) < 0)
    {
      operator delete(*(void **)buf);
      if (!v32)
      {
LABEL_59:
        sub_10000AC00(buf, "");
        sub_10000AC00(&v84, off_1002C8FC8[v29 / 8]);
        __int16 v33 = sub_10000ED88((uint64_t **)(a1 + 144), (__n128 *)&v84);
        sub_1000175B4(v33, (uint64_t)buf);
        if (SHIBYTE(v89) < 0) {
          operator delete(*(void **)buf);
        }
      }
    }

    else if (!v31)
    {
      goto LABEL_59;
    }

    v29 += 8LL;
    if (v29 > 0x2F)
    {
      __break(1u);
      goto LABEL_65;
    }
  }

  sub_10000AC00(buf, "Joiner:ReturnImmediatelyOnStart");
  uint64_t v34 = sub_100037208(a1 + 144, (const void **)buf);
  if (SHIBYTE(v89) < 0) {
    operator delete(*(void **)buf);
  }
  if (!v34)
  {
    uint64_t v35 = operator new(0x10uLL);
    *(void *)uint64_t v35 = &off_1002AEA00;
    v35[8] = 0;
    sub_10000AC00(buf, "Joiner:ReturnImmediatelyOnStart");
    __int16 v36 = sub_10000ED88((uint64_t **)(a1 + 144), (__n128 *)buf);
    uint64_t v37 = *v36;
    *__int16 v36 = (uint64_t)v35;
    if (v37) {
      (*(void (**)(uint64_t))(*(void *)v37 + 8LL))(v37);
    }
    if (SHIBYTE(v89) < 0) {
      operator delete(*(void **)buf);
    }
  }

  sub_1000DA700(*(void *)(a1 + 56), 6LL);
  sub_100034C60("CiiC", (uint64_t *)buf, 0x80u);
  sub_100006EFC(a1 + 104, (__n128 *)buf);
  v84.__r_.__value_.__r.__words[0] = (std::string::size_type)buf;
  sub_100006F6C((void ***)&v84);
  *(_WORD *)(a1 + 98) = 0;
  *(_WORD *)(a1 + 8) = 186;
LABEL_74:
  if ((int)sub_10003453C(a1, a2, a3, v11, v12, v13, v14, v15) >= 2)
  {
    int v38 = *(_DWORD *)(a1 + 128);
    if (v38)
    {
      size_t v39 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v39)
      {
      }

      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        sub_1001FB53C();
      }
    }

    sub_100034C60("Ciib", (uint64_t *)buf, 0x80u);
    sub_100006EFC(a1 + 104, (__n128 *)buf);
    v84.__r_.__value_.__r.__words[0] = (std::string::size_type)buf;
    sub_100006F6C((void ***)&v84);
    *(_WORD *)(a1 + 98) = 0;
    *(_WORD *)(a1 + 8) = 196;
LABEL_97:
    if ((int)sub_10003453C(a1, a2, a3, v11, v12, v13, v14, v15) >= 2)
    {
      unsigned int v19 = *(_DWORD *)(a1 + 128);
      if (!v19 || v19 == 10)
      {
        __int16 v44 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v44)
        {
          if (sub_10015A058(6) && os_log_type_enabled(v44, OS_LOG_TYPE_INFO))
          {
            sub_10000AC00(&v82, "Joiner:ProvisioningUrl");
            std::string v45 = sub_10000ED88((uint64_t **)(a1 + 144), &v82);
            __int16 v46 = &v84;
            sub_100147B4C(v45, &v84);
            if ((v84.__r_.__value_.__s.__size_ & 0x80u) != 0) {
              __int16 v46 = (std::string *)v84.__r_.__value_.__r.__words[0];
            }
            sub_10000AC00(&v79, "Joiner:Vendor:Name");
            char v47 = sub_10000ED88((uint64_t **)(a1 + 144), &v79);
            uint64_t v48 = &v81;
            sub_100147B4C(v47, &v81);
            if ((v81.__r_.__value_.__s.__size_ & 0x80u) != 0) {
              uint64_t v48 = (std::string *)v81.__r_.__value_.__r.__words[0];
            }
            sub_10000AC00(&v76, "Joiner:Vendor:Model");
            uint64_t v49 = sub_10000ED88((uint64_t **)(a1 + 144), &v76);
            uint64_t v50 = &v78;
            sub_100147B4C(v49, &v78);
            if ((v78.__r_.__value_.__s.__size_ & 0x80u) != 0) {
              uint64_t v50 = (std::string *)v78.__r_.__value_.__r.__words[0];
            }
            sub_10000AC00(&v73, "Joiner:Vendor:SwVersion");
            __int16 v51 = sub_10000ED88((uint64_t **)(a1 + 144), &v73);
            int v52 = &v75;
            sub_100147B4C(v51, &v75);
            if ((v75.__r_.__value_.__s.__size_ & 0x80u) != 0) {
              int v52 = (std::string *)v75.__r_.__value_.__r.__words[0];
            }
            sub_10000AC00(&v70, "Joiner:Vendor:Data");
            std::string v53 = sub_10000ED88((uint64_t **)(a1 + 144), &v70);
            sub_100147B4C(v53, &__p);
            if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
              p_p = &__p;
            }
            else {
              p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
            }
            *(_DWORD *)std::string buf = 136316162;
            *(void *)&uint8_t buf[4] = v46;
            __int16 v87 = 2080;
            uint64_t v88 = v48;
            __int16 v89 = 2080;
            uint64_t v90 = v50;
            __int16 v91 = 2080;
            uint64_t v92 = v52;
            __int16 v93 = 2080;
            uint64_t v94 = p_p;
            _os_log_impl( (void *)&_mh_execute_header,  v44,  OS_LOG_TYPE_INFO,  "Starting Joiner Commissioning, PSKd(hidden), ProvisioningURL:%s, VendorInfo [Name:%s, Model:%s , SwVer:%s, Data:%s]",  buf,  0x34u);
            if (v71 < 0) {
              operator delete((void *)v70.n128_u64[0]);
            }
            if (v74 < 0) {
              operator delete((void *)v73.n128_u64[0]);
            }
            if (v77 < 0) {
              operator delete((void *)v76.n128_u64[0]);
            }
            if (v80 < 0) {
              operator delete((void *)v79.n128_u64[0]);
            }
            if (v83 < 0) {
              operator delete((void *)v82.n128_u64[0]);
            }
          }
        }

        else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
          sub_1001FB53C();
        }

        sub_10000AC00(&v82, "Joiner:PSKd");
        std::string v56 = sub_10000ED88((uint64_t **)(a1 + 144), &v82);
        sub_100147B4C(v56, &v84);
        sub_10000AC00(&v79, "Joiner:ProvisioningUrl");
        __int16 v57 = sub_10000ED88((uint64_t **)(a1 + 144), &v79);
        sub_100147B4C(v57, &v81);
        sub_10000AC00(&v76, "Joiner:Vendor:Name");
        uint64_t v58 = sub_10000ED88((uint64_t **)(a1 + 144), &v76);
        sub_100147B4C(v58, &v78);
        sub_10000AC00(&v73, "Joiner:Vendor:Model");
        char v59 = sub_10000ED88((uint64_t **)(a1 + 144), &v73);
        sub_100147B4C(v59, &v75);
        sub_10000AC00(&v70, "Joiner:Vendor:SwVersion");
        int v60 = sub_10000ED88((uint64_t **)(a1 + 144), &v70);
        sub_100147B4C(v60, &__p);
        sub_10000AC00(&v67, "Joiner:Vendor:Data");
        std::string v61 = sub_10000ED88((uint64_t **)(a1 + 144), &v67);
        sub_100147B4C(v61, &v69);
        sub_100034C60("CiibUUUUUU", (uint64_t *)buf, 0x80u);
        sub_100006EFC(a1 + 104, (__n128 *)buf);
        __int128 v85 = (void **)buf;
        sub_100006F6C(&v85);
        if (v68 < 0) {
          operator delete((void *)v67.n128_u64[0]);
        }
        if (v71 < 0) {
          operator delete((void *)v70.n128_u64[0]);
        }
        if (v74 < 0) {
          operator delete((void *)v73.n128_u64[0]);
        }
        if (v77 < 0) {
          operator delete((void *)v76.n128_u64[0]);
        }
        if (v80 < 0) {
          operator delete((void *)v79.n128_u64[0]);
        }
        if (v83 < 0) {
          operator delete((void *)v82.n128_u64[0]);
        }
        *(_WORD *)(a1 + 98) = 0;
        *(_WORD *)(a1 + 8) = 230;
        goto LABEL_165;
      }

      __int128 v55 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v55)
      {
        goto LABEL_198;
      }

      if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        goto LABEL_198;
      }
LABEL_194:
      sub_1001FB53C();
      goto LABEL_198;
    }
  }

  return 0LL;
}

  PBDataWriterWriteUint32Field(v14, self->_txBroadcast, 4LL);
  uint64_t v4 = v14;
  has = self->_has;
  if ((*(_WORD *)&has & 0x4000) == 0)
  {
LABEL_6:
    if ((*(_WORD *)&has & 0x400) == 0) {
      goto LABEL_7;
    }
    goto LABEL_50;
  }

  self->_txBroadcast = v4[51];
  *(_DWORD *)&self->_has |= 0x80u;
  char v5 = v4[64];
  if ((v5 & 0x4000) == 0)
  {
LABEL_6:
    if ((v5 & 0x400) == 0) {
      goto LABEL_7;
    }
    goto LABEL_50;
  }

    uint64_t v13 = *(_DWORD *)(a1 + 128);
    if (v13)
    {
      int v27 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v27)
      {
        uint64_t v28 = v27;
        goto LABEL_98;
      }

      if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        goto LABEL_85;
      }
LABEL_98:
      __int16 v44 = sub_1000D8DE8(*(void *)(a1 + 56));
      std::string v45 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      __int16 v46 = v45;
      if (v44 == 3)
      {
        if (v45)
        {
          if (sub_10015A058(5) && os_log_type_enabled(v46, OS_LOG_TYPE_INFO))
          {
            buf.n128_u16[0] = 0;
            _os_log_impl((void *)&_mh_execute_header, v46, OS_LOG_TYPE_INFO, "NCP is asleep.", (uint8_t *)&buf, 2u);
          }
        }

        else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
          sub_1001FB53C();
        }

        std::string v54 = 0LL;
      }

      else
      {
        if (v45)
        {
        }

        else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
          sub_1001FB53C();
        }

        if (v13 <= 1) {
          std::string v54 = 1LL;
        }
        else {
          std::string v54 = v13;
        }
      }

      buf.n128_u64[0] = 0LL;
      (*(void (**)(uint64_t, uint64_t, __n128 *))(*(void *)a1 + 32LL))(a1, v54, &buf);
      if (buf.n128_u64[0]) {
        (*(void (**)(unint64_t))(*(void *)buf.n128_u64[0] + 8LL))(buf.n128_u64[0]);
      }
      goto LABEL_117;
    }

    sub_100034C60("Ciib", (uint64_t *)&buf, 0x80u);
    sub_100006EFC(a1 + 104, &buf);
    p_std::string buf = &buf;
    sub_100006F6C((void ***)&p_buf);
    *(_WORD *)(a1 + 98) = 0;
    *(_WORD *)(a1 + 8) = 111;
LABEL_56:
    uint64_t v13 = *(_DWORD *)(a1 + 128);
    if (v13)
    {
      unint64_t v29 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v29)
      {
        uint64_t v30 = v29;
        goto LABEL_98;
      }

      if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        goto LABEL_98;
      }
LABEL_85:
      sub_1001FB53C();
      goto LABEL_98;
    }

    goto LABEL_62;
  }

  if (*(unsigned __int16 *)(a1 + 8) > 0x49u)
  {
    if (v11 != 74)
    {
      if (v11 == 79) {
        goto LABEL_31;
      }
      if (v11 == 80)
      {
        uint64_t v12 = a2 & 0xFF000000;
        goto LABEL_33;
      }

      goto LABEL_117;
    }

    goto LABEL_27;
  }

  if (!*(_WORD *)(a1 + 8))
  {
    *(_WORD *)(a1 + 8) = 67;
    goto LABEL_21;
  }

  if (v11 == 67)
  {
LABEL_21:
    if (a2 == 2) {
      return 0LL;
    }
    uint64_t v15 = 0.0;
    if (*(_DWORD *)(*(void *)(a1 + 56) + 73680LL) == 2) {
      uint64_t v15 = 1.0;
    }
    sub_100159FC0(a1, v15);
    *(_WORD *)(a1 + 8) = 70;
    goto LABEL_25;
  }

  if (v11 == 70)
  {
LABEL_25:
    sub_10015A00C(a1);
    if ((*(unsigned int (**)(void))(**(void **)(a1 + 56) + 112LL))(*(void *)(a1 + 56)))
    {
      sub_100034C60("Ci", (uint64_t *)&buf, 0x80u);
      sub_100006EFC(a1 + 104, &buf);
      p_std::string buf = &buf;
      sub_100006F6C((void ***)&p_buf);
      *(_WORD *)(a1 + 98) = 0;
      *(_WORD *)(a1 + 8) = 74;
LABEL_27:
      if ((int)sub_10003453C(a1, a2, a3, a4, a5, a6, a7, a8) >= 2)
      {
        while (1)
        {
          *(_WORD *)(a1 + 8) = 79;
LABEL_31:
          uint64_t v12 = a2 & 0xFF000000;
          if ((a2 & 0xFF000000) == 0xAB000000) {
            break;
          }
          sub_100159FC0(a1, 0.5);
          *(_WORD *)(a1 + 8) = 80;
LABEL_33:
          if (v12 != -1426063360)
          {
            if (sub_100159F84(a1)) {
              return 0LL;
            }
            sub_10015A00C(a1);
            if ((*(unsigned int (**)(void, void))(**(void **)(a1 + 56) + 104LL))( *(void *)(a1 + 56),  0LL))
            {
              unsigned int v17 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
              if (v17)
              {
                uint64_t v18 = v17;
              }

              else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
              {
                sub_1001FB53C();
              }

              (*(void (**)(void, uint64_t))(**(void **)(a1 + 56) + 104LL))(*(void *)(a1 + 56), 1LL);
            }

            else
            {
              sub_1000DA700(*(void *)(a1 + 56), 3LL);
            }

            goto LABEL_44;
          }

          sub_10015A00C(a1);
        }
      }

      return 0LL;
    }

    uint64_t v28 = 1LL;
    goto LABEL_49;
  }

  return v8;
}

  if ((v7 & 0x80) != 0) {
    uint64_t v2 = *(_BYTE **)v2;
  }
  return (char *)sub_10016A2F4((void *)a2, &result[(void)v2], &result[(void)v2 + v4], v4);
}

void sub_1000368B8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20, uint64_t a21, uint64_t a22, void *a23, uint64_t a24, uint64_t a25, void *a26, uint64_t a27, uint64_t a28, void *a29, uint64_t a30, uint64_t a31, void *a32, uint64_t a33, int a34, __int16 a35, char a36, char a37, void *__p, uint64_t a39, int a40, __int16 a41, char a42, char a43, void *a44, uint64_t a45, int a46, __int16 a47, char a48, char a49, void *a50,uint64_t a51,int a52,__int16 a53,char a54,char a55,void *a56,uint64_t a57,int a58,__int16 a59,char a60,char a61)
{
  if (a43 < 0) {
    operator delete(__p);
  }
  if (a37 < 0) {
    operator delete(a32);
  }
  if (a55 < 0) {
    operator delete(a50);
  }
  if (a49 < 0) {
    operator delete(a44);
  }
  if (a61 < 0) {
    operator delete(a56);
  }
  _Unwind_Resume(a1);
}

void *sub_100036A9C(void *a1, uint64_t a2, uint64_t *a3, uint64_t *a4)
{
  v8[0] = 0LL;
  sub_100007640((uint64_t)v8, a3);
  sub_1000342C8((uint64_t)a1, a2, v8);
  sub_100006E7C(v8);
  *a1 = off_1002AEBF0;
  sub_10000D19C(a1 + 17, a4);
  return a1;
}

void sub_100036B14(_Unwind_Exception *a1)
{
}

uint64_t sub_100036B3C( uint64_t a1, unsigned int a2, unsigned int *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v11 = *(unsigned __int16 *)(a1 + 8);
  uint64_t result = 3LL;
  if (v11 <= 313)
  {
    if (v11)
    {
      if (v11 != 300) {
        goto LABEL_82;
      }
    }

    else
    {
      uint64_t v14 = *(void *)(a1 + 56);
      if (!*(_BYTE *)(v14 + 1376))
      {
        buf.n128_u64[0] = 0LL;
        (*(void (**)(uint64_t, uint64_t, __n128 *))(*(void *)a1 + 32LL))(a1, 3LL, &buf);
        goto LABEL_60;
      }

      if (sub_1000D8DE8(v14) == 2)
      {
        buf.n128_u64[0] = 0LL;
        (*(void (**)(uint64_t, uint64_t, __n128 *))(*(void *)a1 + 32LL))(a1, 4LL, &buf);
        goto LABEL_60;
      }

      sub_100159FC0(a1, 30.0);
      *(_WORD *)(a1 + 8) = 300;
    }

    int v15 = sub_1000D8DE8(*(void *)(a1 + 56));
    if (sub_1000B50E8(v15))
    {
      if (!sub_100159F84(a1))
      {
        sub_10015A00C(a1);
        int v16 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v16)
        {
          unsigned int v17 = v16;
        }

        else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
          sub_1001FB53C();
        }

        unsigned int v13 = 1;
        goto LABEL_70;
      }

      return 0LL;
    }

    sub_10015A00C(a1);
    int v18 = sub_1000D8DE8(*(void *)(a1 + 56));
    if (!sub_1000B5098(v18))
    {
      *(_WORD *)(a1 + 8) = 314;
      goto LABEL_23;
    }

    buf.n128_u64[0] = 0LL;
    (*(void (**)(uint64_t, uint64_t, __n128 *))(*(void *)a1 + 32LL))(a1, 10LL, &buf);
LABEL_60:
    if (buf.n128_u64[0]) {
      (*(void (**)(unint64_t))(*(void *)buf.n128_u64[0] + 8LL))(buf.n128_u64[0]);
    }
    uint64_t result = 2LL;
    goto LABEL_82;
  }

  switch(v11)
  {
    case 314:
LABEL_23:
      if (a2 == 2) {
        return 0LL;
      }
      unsigned int v19 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v19)
      {
        uint64_t v20 = v19;
        if (sub_10015A058(6) && os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
        {
          buf.n128_u16[0] = 0;
          _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_INFO, "Joiner Attach", (uint8_t *)&buf, 2u);
        }
      }

      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        sub_1001FB53C();
      }

      sub_10000AC00(&buf, "Joiner:ReturnImmediatelyOnStart");
      uint64_t v21 = sub_100037208(a1 + 136, (const void **)&buf);
      if (v37 < 0) {
        operator delete((void *)buf.n128_u64[0]);
      }
      if (!v21)
      {
        uint64_t v22 = operator new(0x10uLL);
        *(void *)uint64_t v22 = &off_1002AEA00;
        v22[8] = 0;
        sub_10000AC00(&buf, "Joiner:ReturnImmediatelyOnStart");
        char v23 = sub_10000ED88((uint64_t **)(a1 + 136), &buf);
        uint64_t v24 = *v23;
        *char v23 = (uint64_t)v22;
        if (v24) {
          (*(void (**)(uint64_t))(*(void *)v24 + 8LL))(v24);
        }
        if (v37 < 0) {
          operator delete((void *)buf.n128_u64[0]);
        }
      }

      sub_100034C60("Ciib", (uint64_t *)&buf, 0x80u);
      sub_100006EFC(a1 + 104, &buf);
      p___n128 buf = &buf;
      sub_100006F6C((void ***)&p_buf);
      *(_WORD *)(a1 + 98) = 0;
      *(_WORD *)(a1 + 8) = 332;
      goto LABEL_38;
    case 332:
LABEL_38:
      if ((int)sub_10003453C(a1, a2, a3, a4, a5, a6, a7, a8) >= 2)
      {
        unsigned int v13 = *(_DWORD *)(a1 + 128);
        if (v13 && v13 != 10)
        {
          uint64_t v28 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (v28)
          {
            unint64_t v29 = v28;
            goto LABEL_70;
          }

          if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
LABEL_64:
          }
            sub_1001FB53C();
LABEL_70:
          if (v13 <= 1) {
            uint64_t v33 = 1LL;
          }
          else {
            uint64_t v33 = v13;
          }
          uint64_t v34 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (v34)
          {
            uint64_t v35 = v34;
          }

          else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
          {
            sub_1001FB53C();
          }

          buf.n128_u64[0] = 0LL;
          (*(void (**)(uint64_t, uint64_t, __n128 *))(*(void *)a1 + 32LL))(a1, v33, &buf);
          if (buf.n128_u64[0]) {
            (*(void (**)(unint64_t))(*(void *)buf.n128_u64[0] + 8LL))(buf.n128_u64[0]);
          }
          uint64_t result = 3LL;
          break;
        }

        sub_10000AC00(&buf, "Joiner:ReturnImmediatelyOnStart");
        uint64_t v25 = sub_10000ED88((uint64_t **)(a1 + 136), &buf);
        BOOL v26 = sub_1001478B8(v25);
        BOOL v27 = v26;
        if (v37 < 0)
        {
          operator delete((void *)buf.n128_u64[0]);
          if (v27)
          {
LABEL_59:
            buf.n128_u64[0] = 0LL;
            (*(void (**)(uint64_t, void, __n128 *))(*(void *)a1 + 32LL))(a1, 0LL, &buf);
            goto LABEL_60;
          }
        }

        else if (v26)
        {
          goto LABEL_59;
        }

        sub_100159FC0(a1, 60.0);
        *(_WORD *)(a1 + 8) = 345;
LABEL_50:
        int v30 = sub_1000D8DE8(*(void *)(a1 + 56));
        if (!sub_1000B5098(v30)
          || (*(unsigned int (**)(void))(**(void **)(a1 + 56) + 160LL))(*(void *)(a1 + 56)))
        {
          if (sub_100159F84(a1)) {
            return 0LL;
          }
          sub_10015A00C(a1);
          uint64_t v31 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (v31)
          {
            uint64_t v32 = v31;
            goto LABEL_70;
          }

          if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
            goto LABEL_64;
          }
          goto LABEL_70;
        }

        sub_10015A00C(a1);
        goto LABEL_59;
      }

      return 0LL;
    case 345:
      unsigned int v13 = 1;
      goto LABEL_50;
  }

LABEL_82:
  *(_WORD *)(a1 + 8) = 0;
  return result;
}

  __break(0x550Cu);
  return result;
}

  int v30 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_transmittedFrames));
  [v3 setObject:v30 forKey:@"transmitted_frames"];

  uint64_t v8 = self->_has;
  if ((*(void *)&v8 & 0x1000000000000LL) == 0)
  {
LABEL_25:
    if ((*(void *)&v8 & 0x800000000000LL) == 0) {
      goto LABEL_26;
    }
    goto LABEL_84;
  }

  PBDataWriterWriteUint32Field(v7, self->_transmittedFrames, 21LL);
  uint64_t v6 = self->_has;
  if ((*(void *)&v6 & 0x1000000000000LL) == 0)
  {
LABEL_25:
    if ((*(void *)&v6 & 0x800000000000LL) == 0) {
      goto LABEL_26;
    }
    goto LABEL_84;
  }

  v4[39] = self->_transmittedFrames;
  *((void *)v4 + 31) |= 0x400000000uLL;
  uint64_t v6 = self->_has;
  if ((*(void *)&v6 & 0x1000000000000LL) == 0)
  {
LABEL_25:
    if ((*(void *)&v6 & 0x800000000000LL) == 0) {
      goto LABEL_26;
    }
    goto LABEL_84;
  }

  *((_DWORD *)v6 + 52) = self->_txErrorTimeslotDenied;
  v6[31] |= 0x800000000000uLL;
  unint64_t v10 = self->_has;
  if ((*(void *)&v10 & 0x20000000000LL) == 0)
  {
LABEL_25:
    if ((*(void *)&v10 & 0x40000000000LL) == 0) {
      goto LABEL_26;
    }
    goto LABEL_84;
  }

  uint64_t v40 = 0LL;
  if ((*(void *)&v4 & 0x40000000000LL) != 0)
  {
LABEL_30:
    size_t v39 = 2654435761LL * self->_txErrorChannelAccessCcaBusy;
    if ((*(void *)&v4 & 0x80000000000LL) != 0) {
      goto LABEL_31;
    }
    goto LABEL_84;
  }

  self->_txDelay90perc = v5[41];
  *(void *)&self->_has |= 0x1000000000uLL;
  size_t v9 = *((void *)v5 + 31);
  if ((v9 & 8) == 0)
  {
LABEL_29:
    if ((v9 & 0x200) == 0) {
      goto LABEL_30;
    }
    goto LABEL_84;
  }

void sub_1000370C8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  (*(void (**)(uint64_t))(*(void *)v18 + 8LL))(v18);
  _Unwind_Resume(a1);
}

uint64_t sub_100037140(void *a1)
{
  *a1 = off_1002AEBB8;
  sub_10000D448((uint64_t)(a1 + 18));
  return sub_100034374((uint64_t)a1);
}

void sub_100037170(void *a1)
{
  *a1 = off_1002AEBB8;
  sub_10000D448((uint64_t)(a1 + 18));
  uint64_t v2 = (void *)sub_100034374((uint64_t)a1);
  operator delete(v2);
}

uint64_t sub_1000371A4(void *a1)
{
  *a1 = off_1002AEBF0;
  sub_10000D448((uint64_t)(a1 + 17));
  return sub_100034374((uint64_t)a1);
}

void sub_1000371D4(void *a1)
{
  *a1 = off_1002AEBF0;
  sub_10000D448((uint64_t)(a1 + 17));
  uint64_t v2 = (void *)sub_100034374((uint64_t)a1);
  operator delete(v2);
}

uint64_t sub_100037208(uint64_t a1, const void **a2)
{
  uint64_t v2 = *(const void ***)(a1 + 8);
  if (v2)
  {
    uint64_t v4 = a1 + 16;
    uint64_t v5 = 1LL;
    do
    {
      if (!sub_10000AFC8(v4, a2, v2 + 4))
      {
        if (!sub_10000AFC8(v4, v2 + 4, a2)) {
          return v5;
        }
        ++v2;
      }

      uint64_t v2 = (const void **)*v2;
    }

    while (v2);
  }

  return 0LL;
}

LABEL_27:
  BOOL v26 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_txBroadcast));
  [v3 setObject:v26 forKey:@"tx_broadcast"];

  has = self->_has;
  if ((*(_WORD *)&has & 0x4000) == 0)
  {
LABEL_6:
    if ((*(_WORD *)&has & 0x400) == 0) {
      goto LABEL_7;
    }
    goto LABEL_29;
  }

  v4[51] = self->_txBroadcast;
  v4[64] |= 0x80u;
  has = self->_has;
  if ((*(_WORD *)&has & 0x4000) == 0)
  {
LABEL_6:
    if ((*(_WORD *)&has & 0x400) == 0) {
      goto LABEL_7;
    }
    goto LABEL_29;
  }

  int v16 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_txDelayMax));
  [v3 setObject:v16 forKey:@"tx_delay_max"];

  has = (__int16)self->_has;
  if ((has & 0x1000) == 0)
  {
LABEL_12:
    if ((has & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_29;
  }

  PBDataWriterWriteUint32Field(v5, self->_txDelayMax, 10LL);
  has = (__int16)self->_has;
  if ((has & 0x1000) == 0)
  {
LABEL_12:
    if ((has & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_29;
  }

  v4[15] = self->_txDelayMax;
  *((_WORD *)v4 + 34) |= 0x2000u;
  has = (__int16)self->_has;
  if ((has & 0x1000) == 0)
  {
LABEL_12:
    if ((has & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_29;
  }

  *((_DWORD *)result + 15) = self->_txDelayMax;
  *((_WORD *)result + 34) |= 0x2000u;
  has = (__int16)self->_has;
  if ((has & 0x1000) == 0)
  {
LABEL_12:
    if ((has & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_29;
  }

  unsigned int v13 = 0LL;
  if ((*(_WORD *)&self->_has & 0x800) != 0)
  {
LABEL_13:
    uint64_t v14 = 2654435761LL * self->_txDelay90perc;
    if ((has & 1) != 0) {
      goto LABEL_14;
    }
    goto LABEL_29;
  }

  self->_txDelayMax = *((_DWORD *)v4 + 15);
  *(_WORD *)&self->_has |= 0x2000u;
  uint64_t v5 = *((_WORD *)v4 + 34);
  if ((v5 & 0x1000) == 0)
  {
LABEL_12:
    if ((v5 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_29;
  }

      if (size >= 19)
      {
        BOOL v26 = p_buf;
        do
        {
          BOOL v27 = (std::string *)memchr(v26, 67, size - 18);
          if (!v27) {
            break;
          }
          if (v27->__r_.__value_.__r.__words[0] == 0x657463656E6E6F43LL
            && v27->__r_.__value_.__l.__size_ == 0x6F43646C69684364LL
            && *(std::string::size_type *)((char *)&v27->__r_.__value_.__r.__words[1] + 3) == 0x746E756F43646C69LL)
          {
            goto LABEL_39;
          }

          BOOL v26 = (std::string *)((char *)&v27->__r_.__value_.__l.__data_ + 1);
          uint64_t size = (char *)v19 - (char *)v26;
        }

        while ((char *)v19 - (char *)v26 > 18);
      }

      BOOL v27 = v19;
LABEL_39:
      if (v20 != v19 && v20 == p_buf && v15 != -1LL && v16 != -1LL) {
        break;
      }
      if (v27 != v19 && v27 == p_buf && v15 != -1LL && v16 != -1LL)
      {
        if (!v16)
        {
LABEL_67:
          __break(0x5515u);
LABEL_68:
          __break(0x5512u);
        }

        std::string::basic_string(&__str, &buf, v15 + 1, v16 - 1, (std::allocator<char> *)&v44);
        uint64_t v33 = std::stoi(&__str, 0LL, 10);
        if ((v33 & 0xF8u) <= 0x17)
        {
          uint64_t v31 = v33;
          if (v33 > 0x17u) {
            goto LABEL_68;
          }
          uint64_t v32 = v46;
LABEL_55:
          *((_DWORD *)v32 + v31) = uint64;
        }

  v4[16] = self->_coexRxRequests;
  *((_WORD *)v4 + 50) |= 4u;
  has = (__int16)self->_has;
  if ((has & 2) != 0) {
    goto LABEL_28;
  }
LABEL_7:
  if ((has & 1) != 0)
  {
LABEL_8:
    v4[14] = self->_coexRxDeniedRequests;
    *((_WORD *)v4 + 50) |= 1u;
  }

  PBDataWriterWriteUint32Field(v7, self->_rxErrNoframe, 9LL);
  uint64_t v4 = v7;
  has = (__int16)self->_has;
  if ((has & 4) == 0)
  {
LABEL_11:
    if ((has & 0x40) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }

  v4[16] = self->_rxErrSecurity;
  *((_WORD *)v4 + 40) |= 0x100u;
  has = (__int16)self->_has;
  if ((has & 0x20) == 0)
  {
LABEL_10:
    if ((has & 4) == 0) {
      goto LABEL_11;
    }
LABEL_29:
    v4[10] = self->_rxErrDuplicated;
    *((_WORD *)v4 + 40) |= 4u;
    if ((*(_WORD *)&self->_has & 0x40) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }

  self->_rxErrNoframe = *((_DWORD *)v4 + 13);
  *(_WORD *)&self->_has |= 0x20u;
  uint64_t v5 = *((_WORD *)v4 + 40);
  if ((v5 & 4) == 0)
  {
LABEL_11:
    if ((v5 & 0x40) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }

  return v18 != 0LL;
}

  unsigned int v19 = *a2;
  if (v19 == 4)
  {
    uint64_t v20 = *(unsigned __int8 *)(a1 + 1601);
    if (*(_BYTE *)(a1 + 1601)) {
      uint64_t v20 = *(void *)(a1 + 1552) != 0LL;
    }
    v18 |= v20 ^ 1;
    size_t v9 = "LEGACY";
    goto LABEL_34;
  }

      if (size >= 19)
      {
        BOOL v27 = p_buf;
        do
        {
          uint64_t v28 = (std::string *)memchr(v27, 67, size - 18);
          if (!v28) {
            break;
          }
          if (v28->__r_.__value_.__r.__words[0] == 0x657463656E6E6F43LL
            && v28->__r_.__value_.__l.__size_ == 0x6F43646C69684364LL
            && *(std::string::size_type *)((char *)&v28->__r_.__value_.__r.__words[1] + 3) == 0x746E756F43646C69LL)
          {
            goto LABEL_39;
          }

          BOOL v27 = (std::string *)((char *)&v28->__r_.__value_.__l.__data_ + 1);
          uint64_t size = (char *)v20 - (char *)v27;
        }

        while ((char *)v20 - (char *)v27 > 18);
      }

      uint64_t v28 = v20;
LABEL_39:
      if (v21 != v20 && v21 == p_buf && v16 != -1LL && v17 != -1LL) {
        break;
      }
      if (v28 != v20 && v28 == p_buf && v16 != -1LL && v17 != -1LL)
      {
        if (!v17)
        {
LABEL_69:
          __break(0x5515u);
LABEL_70:
          __break(0x5512u);
        }

        std::string::basic_string(&__str, &buf, v16 + 1, v17 - 1, (std::allocator<char> *)&v41);
        uint64_t v34 = std::stoi(&__str, 0LL, 10);
        if ((v34 & 0xF8u) <= 0x17)
        {
          uint64_t v32 = v34;
          if (v34 > 0x17u) {
            goto LABEL_70;
          }
          uint64_t v33 = v43;
LABEL_55:
          *((_DWORD *)v33 + v32) = uint64;
        }

LABEL_28:
  BOOL v27 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", self->_txErrCca));
  [v3 setObject:v27 forKey:@"tx_err_cca"];

  has = self->_has;
  if ((*(_WORD *)&has & 0x400) == 0)
  {
LABEL_7:
    if ((*(_WORD *)&has & 0x1000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_30;
  }

  v4[58] = self->_txErrCca;
  v4[64] |= 0x4000u;
  has = self->_has;
  if ((*(_WORD *)&has & 0x400) == 0)
  {
LABEL_7:
    if ((*(_WORD *)&has & 0x1000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_30;
  }

  sub_1000714B8(v26);
  return 1LL;
}

  unsigned int v17 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_txDelayAvg));
  [v3 setObject:v17 forKey:@"tx_delay_avg"];

  has = (__int16)self->_has;
  if ((has & 0x800) == 0)
  {
LABEL_13:
    if ((has & 1) == 0) {
      goto LABEL_14;
    }
    goto LABEL_30;
  }

  PBDataWriterWriteUint32Field(v5, self->_txDelayAvg, 11LL);
  has = (__int16)self->_has;
  if ((has & 0x800) == 0)
  {
LABEL_13:
    if ((has & 1) == 0) {
      goto LABEL_14;
    }
    goto LABEL_30;
  }

  v4[14] = self->_txDelayAvg;
  *((_WORD *)v4 + 34) |= 0x1000u;
  has = (__int16)self->_has;
  if ((has & 0x800) == 0)
  {
LABEL_13:
    if ((has & 1) == 0) {
      goto LABEL_14;
    }
    goto LABEL_30;
  }

  *((_DWORD *)result + 14) = self->_txDelayAvg;
  *((_WORD *)result + 34) |= 0x1000u;
  has = (__int16)self->_has;
  if ((has & 0x800) == 0)
  {
LABEL_13:
    if ((has & 1) == 0) {
      goto LABEL_14;
    }
    goto LABEL_30;
  }

  uint64_t v14 = 0LL;
  if ((has & 1) != 0)
  {
LABEL_14:
    int v15 = 2654435761LL * self->_listeningTime;
    if ((has & 2) != 0) {
      goto LABEL_15;
    }
LABEL_30:
    int v16 = 0LL;
    if ((*(_WORD *)&self->_has & 0x400) != 0) {
      goto LABEL_16;
    }
LABEL_31:
    unsigned int v17 = 0LL;
    return v4 ^ v3 ^ v5 ^ v6 ^ v7 ^ v8 ^ v9 ^ v10 ^ v11 ^ v12 ^ v13 ^ v14 ^ v15 ^ v16 ^ v17;
  }

  self->_txDelayAvg = *((_DWORD *)v4 + 14);
  *(_WORD *)&self->_has |= 0x1000u;
  uint64_t v5 = *((_WORD *)v4 + 34);
  if ((v5 & 0x800) == 0)
  {
LABEL_13:
    if ((v5 & 1) == 0) {
      goto LABEL_14;
    }
    goto LABEL_30;
  }

  PBDataWriterWriteUint32Field(v7, self->_rxErrDuplicated, 10LL);
  uint64_t v4 = v7;
  if ((*(_WORD *)&self->_has & 0x40) != 0)
  {
LABEL_12:
    PBDataWriterWriteUint32Field(v7, self->_rxErrOther, 11LL);
    uint64_t v4 = v7;
  }

  v4[13] = self->_rxErrNoframe;
  *((_WORD *)v4 + 40) |= 0x20u;
  has = (__int16)self->_has;
  if ((has & 4) != 0) {
    goto LABEL_29;
  }
LABEL_11:
  if ((has & 0x40) != 0)
  {
LABEL_12:
    v4[14] = self->_rxErrOther;
    *((_WORD *)v4 + 40) |= 0x40u;
  }

  self->_rxErrDuplicated = *((_DWORD *)v4 + 10);
  *(_WORD *)&self->_has |= 4u;
  if ((*((_WORD *)v4 + 40) & 0x40) != 0)
  {
LABEL_12:
    self->_rxErrOther = *((_DWORD *)v4 + 14);
    *(_WORD *)&self->_has |= 0x40u;
  }

  if ((v33 & 0x80u) == 0) {
    uint64_t v22 = v33;
  }
  else {
    uint64_t v22 = v32;
  }
  char v23 = *((unsigned __int8 *)a5 + 23);
  uint64_t v24 = (char)v23;
  if ((v23 & 0x80u) != 0LL) {
    char v23 = *((void *)a5 + 1);
  }
  if (v22 != v23) {
    goto LABEL_45;
  }
  if (v24 >= 0) {
    uint64_t v25 = (unsigned __int8 *)a5;
  }
  else {
    uint64_t v25 = *(unsigned __int8 **)a5;
  }
  if ((v33 & 0x80) == 0)
  {
    if (v33)
    {
      BOOL v26 = 0LL;
      while (v26 <= 0x17)
      {
        if (v33 == ++v26) {
          goto LABEL_51;
        }
      }

      goto LABEL_54;
    }

    goto LABEL_51;
  }

  if (memcmp(__p, v25, v32))
  {
LABEL_45:
    BOOL v27 = 0;
    goto LABEL_46;
  }

LABEL_29:
  uint64_t v28 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_txErrAbort));
  [v3 setObject:v28 forKey:@"tx_err_abort"];

  has = self->_has;
  if ((*(_WORD *)&has & 0x1000) == 0)
  {
LABEL_8:
    if ((*(_WORD *)&has & 0x200) == 0) {
      goto LABEL_9;
    }
    goto LABEL_31;
  }

  v4[54] = self->_txErrAbort;
  v4[64] |= 0x400u;
  has = self->_has;
  if ((*(_WORD *)&has & 0x1000) == 0)
  {
LABEL_8:
    if ((*(_WORD *)&has & 0x200) == 0) {
      goto LABEL_9;
    }
    goto LABEL_31;
  }

    *(_WORD *)(v5 + 3598) = 0;
    return 3LL;
  }

  if (v9 == 280)
  {
LABEL_20:
    if (!v7)
    {
      if (*(_BYTE *)(a1 + 1380))
      {
        unint64_t v10 = sub_1000D8DE8(a1);
        if (sub_1000B5088(v10)) {
          return 0LL;
        }
      }
    }

    sub_100159FC0(a1 + 32, v8);
    *(_WORD *)(v5 + 3598) = 291;
    if (!v7) {
      goto LABEL_24;
    }
LABEL_28:
    sub_10015A00C(a1 + 32);
    goto LABEL_29;
  }

  if (v9 != 291) {
    goto LABEL_29;
  }
  if (v7) {
    goto LABEL_28;
  }
LABEL_24:
  if (!*(_BYTE *)(a1 + 1380)) {
    goto LABEL_28;
  }
  int v11 = sub_1000561A0(a1 + 74016);
  if (HIBYTE(a2) == 171) {
    goto LABEL_28;
  }
  if (!v11) {
    goto LABEL_28;
  }
  uint64_t v12 = sub_1000D8DE8(a1);
  if (sub_1000B5088(v12)) {
    goto LABEL_28;
  }
  if (!sub_100159F84(a1 + 32))
  {
    sub_10015A00C(a1 + 32);
    uint64_t v14 = operator new(0x88uLL);
    v15[0] = (char *)off_1002AECF8 + 1;
    sub_10004D468(v14, a1, v15);
    sub_1000430D8(&v16, (uint64_t)v14);
    sub_10004E9A4(a1, &v16);
    sub_10000F9EC(&v17);
    sub_100006E7C(v15);
    goto LABEL_29;
  }

  return 0LL;
}

      LODWORD(v13) = *(_DWORD *)(a1 + 128);
      if ((_DWORD)v13)
      {
        int v15 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v15)
        {
          goto LABEL_163;
        }

        if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          goto LABEL_163;
        }
        goto LABEL_181;
      }

      if (*(_DWORD *)(a1 + 172) != 2) {
        goto LABEL_70;
      }
      sub_100034C60("Ciib", &v67.__sig, 0x80u);
      sub_100006EFC(a1 + 104, (__n128 *)&v67);
      __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v67;
      sub_100006F6C((void ***)&__p);
      *(_WORD *)(a1 + 98) = 0;
      *(_WORD *)(a1 + 8) = 120;
      goto LABEL_51;
    }

    if (v11)
    {
      if (v11 != 89)
      {
        if (v11 != 97) {
          goto LABEL_109;
        }
LABEL_11:
        if (a2 == 2) {
          return 0LL;
        }
        *(_BYTE *)(a1 + 180) = 0;
        sub_100034C60("CiiD", &v67.__sig, 0x80u);
        sub_100006EFC(a1 + 104, (__n128 *)&v67);
        __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v67;
        sub_100006F6C((void ***)&__p);
        *(_WORD *)(a1 + 98) = 0;
        *(_WORD *)(a1 + 8) = 108;
        goto LABEL_29;
      }
    }

    else
    {
      int v16 = *(void *)(a1 + 56);
      if (!*(_BYTE *)(v16 + 1376))
      {
        v67.__sig = 0LL;
        (*(void (**)(uint64_t, uint64_t, pthread_mutex_t *))(*(void *)a1 + 32LL))(a1, 3LL, &v67);
        goto LABEL_157;
      }

      if (sub_1000D8DE8(v16) == 2)
      {
        v67.__sig = 0LL;
        (*(void (**)(uint64_t, uint64_t, pthread_mutex_t *))(*(void *)a1 + 32LL))(a1, 4LL, &v67);
        goto LABEL_157;
      }

      sub_100159FC0(a1, 30.0);
      *(_WORD *)(a1 + 8) = 89;
    }

    unsigned int v17 = sub_1000D8DE8(*(void *)(a1 + 56));
    if (sub_1000B50E8(v17)
      || sub_1000D8DE8(*(void *)(a1 + 56)) == 6
      || sub_1000D8DE8(*(void *)(a1 + 56)) == 7
      || (*(unsigned int (**)(void))(**(void **)(a1 + 56) + 160LL))(*(void *)(a1 + 56)))
    {
      if (!sub_100159F84(a1))
      {
        sub_10015A00C(a1);
        uint64_t v18 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v18)
        {
          unsigned int v19 = v18;
        }

        else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
          sub_1001FB53C();
        }

      uint64_t v25 = *v4;
      if ((int)v25 >= 1)
      {
        sub_10006FD74((_BYTE *)a1, 0, (_WORD *)(a1 + 68785), v25);
        goto LABEL_31;
      }

      int v38 = sub_1000AD580((uint64_t *)(a1 + 184));
      if ((*(unsigned int (**)(uint64_t))(*(void *)v38 + 40LL))(v38))
      {
        size_t v39 = sub_1000AD580((uint64_t *)(a1 + 184));
        *uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v39 + 24LL))(v39, a1 + 68790, 1295LL);
        uint64_t v40 = 2;
LABEL_94:
        *(_BYTE *)(v5 + 1300) = v40;
        goto LABEL_95;
      }

      uint64_t v50 = (unsigned __int8 *)sub_1000AD5C0();
      if (sub_10000E214(v50))
      {
        __int16 v51 = sub_1000AD5C0();
        sub_100012CC8((uint64_t)v51 + 42016, (void *)(a1 + 68790), 0x50FuLL);
        *uint64_t v4 = v52;
        *(_BYTE *)(v5 + 1300) = 2;
        std::string v53 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v53)
        {
          std::string v54 = v53;
        }

        else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
          sub_1001FB53C();
        }

        goto LABEL_95;
      }

      while (1)
      {
        if (*(void *)(a1 + 1552))
        {
          __int128 v55 = sub_1000AD580((uint64_t *)(a1 + 1552));
          *uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v55 + 24LL))(v55, a1 + 68790, 1295LL);
          uint64_t v40 = 4;
          goto LABEL_94;
        }

  uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_txDelay90perc));
  [v3 setObject:v18 forKey:@"tx_delay_90perc"];

  has = (__int16)self->_has;
  if ((has & 1) == 0)
  {
LABEL_14:
    if ((has & 2) == 0) {
      goto LABEL_15;
    }
LABEL_31:
    uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_receivingTime));
    [v3 setObject:v20 forKey:@"receiving_time"];

    if ((*(_WORD *)&self->_has & 0x400) == 0) {
      return v3;
    }
    goto LABEL_16;
  }

  PBDataWriterWriteUint32Field(v5, self->_txDelay90perc, 12LL);
  has = (__int16)self->_has;
  if ((has & 1) == 0)
  {
LABEL_14:
    if ((has & 2) == 0) {
      goto LABEL_15;
    }
LABEL_31:
    PBDataWriterWriteUint32Field(v5, self->_receivingTime, 14LL);
    if ((*(_WORD *)&self->_has & 0x400) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }

  v4[13] = self->_txDelay90perc;
  *((_WORD *)v4 + 34) |= 0x800u;
  has = (__int16)self->_has;
  if ((has & 1) == 0)
  {
LABEL_14:
    if ((has & 2) == 0) {
      goto LABEL_15;
    }
LABEL_31:
    v4[3] = self->_receivingTime;
    *((_WORD *)v4 + 34) |= 2u;
    if ((*(_WORD *)&self->_has & 0x400) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }

  *((_DWORD *)result + 13) = self->_txDelay90perc;
  *((_WORD *)result + 34) |= 0x800u;
  has = (__int16)self->_has;
  if ((has & 1) == 0)
  {
LABEL_14:
    if ((has & 2) == 0) {
      goto LABEL_15;
    }
    goto LABEL_31;
  }

  int v15 = 0LL;
  if ((has & 2) == 0) {
    goto LABEL_30;
  }
LABEL_15:
  int v16 = 2654435761LL * self->_receivingTime;
  if ((*(_WORD *)&self->_has & 0x400) == 0) {
    goto LABEL_31;
  }
LABEL_16:
  unsigned int v17 = 2654435761LL * self->_transmittingTime;
  return v4 ^ v3 ^ v5 ^ v6 ^ v7 ^ v8 ^ v9 ^ v10 ^ v11 ^ v12 ^ v13 ^ v14 ^ v15 ^ v16 ^ v17;
}

  self->_txDelay90perc = *((_DWORD *)v4 + 13);
  *(_WORD *)&self->_has |= 0x800u;
  uint64_t v5 = *((_WORD *)v4 + 34);
  if ((v5 & 1) == 0)
  {
LABEL_14:
    if ((v5 & 2) == 0) {
      goto LABEL_15;
    }
LABEL_31:
    self->_receivingTime = *((_DWORD *)v4 + 3);
    *(_WORD *)&self->_has |= 2u;
    if ((*((_WORD *)v4 + 34) & 0x400) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }

      uint64_t result = sub_1001472F4(a3);
      if ((result - 1) >> 6 <= 0x13A)
      {
        uint64_t v18 = 60000LL * result;
        *(void *)uint64_t v8 = v18;
        sub_10010AA58(a1);
      }

      return sub_100006FF8(a4);
    }

  sub_10000C0E8(&v9);
}

          uint64_t v31 = sub_1001768B4(1);
          uint64_t v21 = (os_log_s *)objc_claimAutoreleasedReturnValue(v31);
          if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)__n128 buf = 136315650;
            __int128 v103 = "-[THThreadNetworkCredentialsStoreLocalClient parseDataSetFromTLVs:data_len:]";
            uint64_t v104 = 1024;
            *(_DWORD *)__int128 v105 = v17;
            *(_WORD *)&v105[4] = 1024;
            *(_DWORD *)&v105[6] = 1588;
            char v23 = v21;
            uint64_t v24 = "%s: #MOS : ==> Unknown type : %d, Line : %d";
            uint64_t v25 = 24;
LABEL_31:
            _os_log_error_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_ERROR, v24, buf, v25);
          }

          uint64_t v31 = sub_1001768B4(1);
          uint64_t v21 = (os_log_s *)objc_claimAutoreleasedReturnValue(v31);
          if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)__n128 buf = 136315650;
            uint64_t v94 = "-[THThreadNetworkCredentialsStoreLocalClient parseCredsFromTLVs:data_len:]";
            __int128 v95 = 1024;
            *(_DWORD *)uint64_t v96 = v17;
            *(_WORD *)&v96[4] = 1024;
            *(_DWORD *)&v96[6] = 1876;
            char v23 = v21;
            uint64_t v24 = "%s: #MOS : ==> Unknown type : %d, Line : %d";
            uint64_t v25 = 24;
LABEL_31:
            _os_log_error_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_ERROR, v24, buf, v25);
          }

LABEL_31:
  int v30 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_txDirectMaxRetryExpiry));
  [v3 setObject:v30 forKey:@"tx_direct_max_retry_expiry"];

  if ((*(_DWORD *)&self->_has & 0x20000) != 0)
  {
LABEL_10:
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_txIndirectMaxRetryExpiry));
    [v3 setObject:v5 forKey:@"tx_indirect_max_retry_expiry"];
  }

  v4[53] = self->_txDirectMaxRetryExpiry;
  v4[64] |= 0x200u;
  if ((*(_DWORD *)&self->_has & 0x20000) != 0)
  {
LABEL_10:
    v4[61] = self->_txIndirectMaxRetryExpiry;
    v4[64] |= 0x20000u;
  }

    CFRelease(v5);
    v12[0].n128_u64[0] = (unint64_t)&v13;
    sub_100006F6C((void ***)v12);
    return;
  }

  uint64_t v8 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v8)
  {
    size_t v9 = v8;
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FF028();
  }

  int v38 = 1LL;
LABEL_32:
  return v38;
}

  *((_DWORD *)result + 3) = self->_receivingTime;
  *((_WORD *)result + 34) |= 2u;
  if ((*(_WORD *)&self->_has & 0x400) == 0) {
    return result;
  }
LABEL_16:
  *((_DWORD *)result + 12) = self->_transmittingTime;
  *((_WORD *)result + 34) |= 0x400u;
  return result;
}

    memset(&v31, 0, sizeof(v31));
    uint64_t v14 = *(_DWORD *)(v6 + 8);
    if (v14 == 2)
    {
      uint64_t v18 = *(void *)v6;
      sub_10010D2EC(*(unsigned int *)(v6 + 12), __p);
      if (cap >= 0) {
        unsigned int v19 = __p;
      }
      else {
        unsigned int v19 = (void **)__p[0];
      }
      sub_100108290( "Auto stat log is enabled using short version of stat every %d min at log level '%s'.",  &v30,  v18 / 60000,  v19);
    }

    else
    {
      if (v14 != 1)
      {
        if (!v14) {
          std::string::assign(&v31, "Auto stat log is disabled.");
        }
LABEL_53:
        sub_100030134(&v30, &v31);
        sub_10003446C(a3);
        goto LABEL_54;
      }

      uint64_t v20 = *(void *)v6;
      sub_10010D2EC(*(unsigned int *)(v6 + 12), __p);
      if (cap >= 0) {
        uint64_t v21 = __p;
      }
      else {
        uint64_t v21 = (void **)__p[0];
      }
      sub_100108290( "Auto stat log is enabled using long version every %d min at log level '%s'.",  &v30,  v20 / 60000,  v21);
    }

    sub_100014D08((uint64_t)&v31, (__int128 *)&v30);
    if (SHIBYTE(cap) < 0) {
      operator delete(__p[0]);
    }
    goto LABEL_53;
  }

  uint64_t v7 = (const char *)a2->__r_.__value_.__r.__words[0];
  if (!strcasecmp(a2->__r_.__value_.__l.__data_, "Stat:AutoLog")) {
    goto LABEL_31;
  }
  if (!strcasecmp(v7, "Stat:AutoLog:State")) {
    goto LABEL_35;
  }
  if (!strcasecmp(v7, "Stat:AutoLog:Period")) {
    goto LABEL_38;
  }
  if (!strcasecmp(v7, "Stat:AutoLog:LogLevel")) {
    goto LABEL_59;
  }
  if (!strcasecmp(v7, "Stat:UserRequest:LogLevel")) {
    goto LABEL_60;
  }
  if (strcasecmp(v7, "Stat:LinkQuality")) {
    goto LABEL_8;
  }
LABEL_26:
  memset(&v31, 0, sizeof(v31));
  uint64_t v12 = sub_100142DC4(a1 + 65336) / 1000;
  if ((_DWORD)v12)
  {
    unsigned int v13 = "s";
    if ((_DWORD)v12 == 1) {
      unsigned int v13 = "";
    }
    sub_100108290("Peer link quality is collected every %d second%s", &v30, v12, v13);
    sub_100014D08((uint64_t)&v31, (__int128 *)&v30);
  }

  else
  {
    std::string::assign(&v31, "Periodic query of peer link quality is disabled");
  }

          uint64_t v31 = sub_1001768B4(1);
          uint64_t v25 = (os_log_s *)objc_claimAutoreleasedReturnValue(v31);
          if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)char v140 = 136315650;
            __int128 v141 = "-[THThreadNetworkCredentialsKeychainBackingStore areValidDataSetTLVs:creds:]";
            uint64_t v142 = 1024;
            LODWORD(v143[0]) = v20;
            WORD2(v143[0]) = 1024;
            *(_DWORD *)((char *)v143 + 6) = 5155;
            _os_log_error_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_ERROR,  "%s: #MOS : ==> Unknown type : %d, Line : %d",  v140,  0x18u);
          }

    BOOL v26 = 0LL;
    goto LABEL_32;
  }

  if (!std::string::compare(&v143, "GenerateDiagnostics"))
  {
    uint64_t v61 = *((_DWORD *)sub_1001B103C() + 10);
    dispatch_suspend((dispatch_object_t)self->_tdm_timer);
    xpc_object_t v62 = sub_1001B103C();
    dispatch_object_t v63 = *((_DWORD *)sub_1001B103C() + 11);
    BOOL v64 = *((_BYTE *)sub_1001B103C() + 49);
    *((_BYTE *)v62 + 6736) = 1;
    *((_BYTE *)v62 + 6744) = v64;
    *((_DWORD *)v62 + 1685) = v63;
    sub_1001B103C();
    *((_DWORD *)sub_1001B103C() + 11) = 0;
    *((_BYTE *)sub_1001B103C() + 49) = 0;
    uint64_t v65 = dispatch_time(0LL, 0LL);
    dispatch_source_set_timer((dispatch_source_t)self->_tdm_timer, v65, 1000000000LL * v61, 0LL);
    dispatch_resume((dispatch_object_t)self->_tdm_timer);
    uint64_t v66 = sub_1000160F4("com.apple.wpantund.tdm", "default");
    __n128 v67 = (os_log_s *)objc_claimAutoreleasedReturnValue(v66);
    if (os_log_type_enabled(v67, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)__n128 buf = 67109120;
      *(_DWORD *)v145 = v61;
      _os_log_impl( (void *)&_mh_execute_header,  v67,  OS_LOG_TYPE_INFO,  "TDM: sysdiagnose triggered thread diagnostics monitor curPeriodicity=%d",  buf,  8u);
    }

LABEL_11:
  uint64_t v6 = PBRepeatedUInt32NSArray(&self->_txPacketCountHistograms);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
  [v3 setObject:v7 forKey:@"tx_packet_count_histogram"];

  uint64_t v8 = PBRepeatedUInt32NSArray(&self->_txDirectRetryAttemptsHistograms);
  size_t v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
  [v3 setObject:v9 forKey:@"tx_direct_retry_attempts_histogram"];

  unint64_t v10 = PBRepeatedUInt32NSArray(&self->_txIndirectRetryAttemptsHistograms);
  int v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
  [v3 setObject:v11 forKey:@"tx_indirect_retry_attempts_histogram"];

  uint64_t v12 = PBRepeatedUInt32NSArray(&self->_txCcaEnergyDetectedHistograms);
  unsigned int v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
  [v3 setObject:v13 forKey:@"tx_cca_energy_detected_histogram"];

  uint64_t v14 = PBRepeatedUInt32NSArray(&self->_txDirectNoackHistograms);
  int v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
  [v3 setObject:v15 forKey:@"tx_direct_noack_histogram"];

  int v16 = PBRepeatedUInt32NSArray(&self->_txDirectChannelaccessfailureHistograms);
  unsigned int v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
  [v3 setObject:v17 forKey:@"tx_direct_channelaccessfailure_histogram"];

  uint64_t v18 = PBRepeatedUInt32NSArray(&self->_txCsmaBackoffHistograms);
  unsigned int v19 = (void *)objc_claimAutoreleasedReturnValue(v18);
  [v3 setObject:v19 forKey:@"tx_csma_backoff_histogram"];

  uint64_t v20 = self->_has;
  if ((*(_BYTE *)&v20 & 0x40) != 0)
  {
    uint64_t v31 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_cslTxTotal));
    [v3 setObject:v31 forKey:@"csl_tx_total"];

    uint64_t v20 = self->_has;
    if ((*(_BYTE *)&v20 & 0x20) == 0)
    {
LABEL_13:
      if ((*(_BYTE *)&v20 & 0x10) == 0) {
        goto LABEL_14;
      }
      goto LABEL_35;
    }
  }

  else if ((*(_BYTE *)&v20 & 0x20) == 0)
  {
    goto LABEL_13;
  }

  uint64_t v32 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_cslTxErrNoack));
  [v3 setObject:v32 forKey:@"csl_tx_err_noack"];

  uint64_t v20 = self->_has;
  if ((*(_BYTE *)&v20 & 0x10) == 0)
  {
LABEL_14:
    if ((*(_BYTE *)&v20 & 4) == 0) {
      goto LABEL_15;
    }
    goto LABEL_36;
  }

  if (self->_txPacketCountHistograms.count)
  {
    uint64_t v6 = 0LL;
    do
    {
      PBDataWriterWriteUint32Field(v14, self->_txPacketCountHistograms.list[v6], 10LL);
      uint64_t v4 = v14;
      ++v6;
    }

    while (v6 < self->_txPacketCountHistograms.count);
  }

  if (self->_txDirectRetryAttemptsHistograms.count)
  {
    uint64_t v7 = 0LL;
    do
    {
      PBDataWriterWriteUint32Field(v14, self->_txDirectRetryAttemptsHistograms.list[v7], 11LL);
      uint64_t v4 = v14;
      ++v7;
    }

    while (v7 < self->_txDirectRetryAttemptsHistograms.count);
  }

  if (self->_txIndirectRetryAttemptsHistograms.count)
  {
    uint64_t v8 = 0LL;
    do
    {
      PBDataWriterWriteUint32Field(v14, self->_txIndirectRetryAttemptsHistograms.list[v8], 12LL);
      uint64_t v4 = v14;
      ++v8;
    }

    while (v8 < self->_txIndirectRetryAttemptsHistograms.count);
  }

  if (self->_txCcaEnergyDetectedHistograms.count)
  {
    size_t v9 = 0LL;
    do
    {
      PBDataWriterWriteUint32Field(v14, self->_txCcaEnergyDetectedHistograms.list[v9], 13LL);
      uint64_t v4 = v14;
      ++v9;
    }

    while (v9 < self->_txCcaEnergyDetectedHistograms.count);
  }

  if (self->_txDirectNoackHistograms.count)
  {
    unint64_t v10 = 0LL;
    do
    {
      PBDataWriterWriteUint32Field(v14, self->_txDirectNoackHistograms.list[v10], 14LL);
      uint64_t v4 = v14;
      ++v10;
    }

    while (v10 < self->_txDirectNoackHistograms.count);
  }

  if (self->_txDirectChannelaccessfailureHistograms.count)
  {
    int v11 = 0LL;
    do
    {
      PBDataWriterWriteUint32Field(v14, self->_txDirectChannelaccessfailureHistograms.list[v11], 15LL);
      uint64_t v4 = v14;
      ++v11;
    }

    while (v11 < self->_txDirectChannelaccessfailureHistograms.count);
  }

  if (self->_txCsmaBackoffHistograms.count)
  {
    uint64_t v12 = 0LL;
    do
    {
      PBDataWriterWriteUint32Field(v14, self->_txCsmaBackoffHistograms.list[v12], 16LL);
      uint64_t v4 = v14;
      ++v12;
    }

    while (v12 < self->_txCsmaBackoffHistograms.count);
  }

  unsigned int v13 = self->_has;
  if ((*(_BYTE *)&v13 & 0x40) != 0)
  {
    PBDataWriterWriteUint32Field(v14, self->_cslTxTotal, 17LL);
    uint64_t v4 = v14;
    unsigned int v13 = self->_has;
    if ((*(_BYTE *)&v13 & 0x20) == 0)
    {
LABEL_34:
      if ((*(_BYTE *)&v13 & 0x10) == 0) {
        goto LABEL_35;
      }
      goto LABEL_56;
    }
  }

  else if ((*(_BYTE *)&v13 & 0x20) == 0)
  {
    goto LABEL_34;
  }

  PBDataWriterWriteUint32Field(v14, self->_cslTxErrNoack, 18LL);
  uint64_t v4 = v14;
  unsigned int v13 = self->_has;
  if ((*(_BYTE *)&v13 & 0x10) == 0)
  {
LABEL_35:
    if ((*(_BYTE *)&v13 & 4) == 0) {
      goto LABEL_36;
    }
    goto LABEL_57;
  }

  uint64_t v28 = v4;
  if (-[AWDCountersMacTxS txPacketCountHistogramsCount](self, "txPacketCountHistogramsCount"))
  {
    [v28 clearTxPacketCountHistograms];
    uint64_t v6 = -[AWDCountersMacTxS txPacketCountHistogramsCount](self, "txPacketCountHistogramsCount");
    if (v6)
    {
      uint64_t v7 = v6;
      for (uint64_t i = 0LL; i != v7; ++i)
        objc_msgSend( v28,  "addTxPacketCountHistogram:",  -[AWDCountersMacTxS txPacketCountHistogramAtIndex:](self, "txPacketCountHistogramAtIndex:", i));
    }
  }

  if (-[AWDCountersMacTxS txDirectRetryAttemptsHistogramsCount](self, "txDirectRetryAttemptsHistogramsCount"))
  {
    [v28 clearTxDirectRetryAttemptsHistograms];
    size_t v9 = -[AWDCountersMacTxS txDirectRetryAttemptsHistogramsCount](self, "txDirectRetryAttemptsHistogramsCount");
    if (v9)
    {
      unint64_t v10 = v9;
      for (j = 0LL; j != v10; ++j)
        objc_msgSend( v28,  "addTxDirectRetryAttemptsHistogram:",  -[AWDCountersMacTxS txDirectRetryAttemptsHistogramAtIndex:](self, "txDirectRetryAttemptsHistogramAtIndex:", j));
    }
  }

  if (-[AWDCountersMacTxS txIndirectRetryAttemptsHistogramsCount](self, "txIndirectRetryAttemptsHistogramsCount"))
  {
    [v28 clearTxIndirectRetryAttemptsHistograms];
    uint64_t v12 = -[AWDCountersMacTxS txIndirectRetryAttemptsHistogramsCount](self, "txIndirectRetryAttemptsHistogramsCount");
    if (v12)
    {
      unsigned int v13 = v12;
      for (k = 0LL; k != v13; ++k)
        objc_msgSend( v28,  "addTxIndirectRetryAttemptsHistogram:",  -[AWDCountersMacTxS txIndirectRetryAttemptsHistogramAtIndex:]( self,  "txIndirectRetryAttemptsHistogramAtIndex:",  k));
    }
  }

  if (-[AWDCountersMacTxS txCcaEnergyDetectedHistogramsCount](self, "txCcaEnergyDetectedHistogramsCount"))
  {
    [v28 clearTxCcaEnergyDetectedHistograms];
    int v15 = -[AWDCountersMacTxS txCcaEnergyDetectedHistogramsCount](self, "txCcaEnergyDetectedHistogramsCount");
    if (v15)
    {
      int v16 = v15;
      for (m = 0LL; m != v16; ++m)
        objc_msgSend( v28,  "addTxCcaEnergyDetectedHistogram:",  -[AWDCountersMacTxS txCcaEnergyDetectedHistogramAtIndex:](self, "txCcaEnergyDetectedHistogramAtIndex:", m));
    }
  }

  if (-[AWDCountersMacTxS txDirectNoackHistogramsCount](self, "txDirectNoackHistogramsCount"))
  {
    [v28 clearTxDirectNoackHistograms];
    uint64_t v18 = -[AWDCountersMacTxS txDirectNoackHistogramsCount](self, "txDirectNoackHistogramsCount");
    if (v18)
    {
      unsigned int v19 = v18;
      for (n = 0LL; n != v19; ++n)
        objc_msgSend( v28,  "addTxDirectNoackHistogram:",  -[AWDCountersMacTxS txDirectNoackHistogramAtIndex:](self, "txDirectNoackHistogramAtIndex:", n));
    }
  }

  if (-[AWDCountersMacTxS txDirectChannelaccessfailureHistogramsCount]( self,  "txDirectChannelaccessfailureHistogramsCount"))
  {
    [v28 clearTxDirectChannelaccessfailureHistograms];
    uint64_t v21 = -[AWDCountersMacTxS txDirectChannelaccessfailureHistogramsCount]( self,  "txDirectChannelaccessfailureHistogramsCount");
    if (v21)
    {
      uint64_t v22 = v21;
      for (iuint64_t i = 0LL; ii != v22; ++ii)
        objc_msgSend( v28,  "addTxDirectChannelaccessfailureHistogram:",  -[AWDCountersMacTxS txDirectChannelaccessfailureHistogramAtIndex:]( self,  "txDirectChannelaccessfailureHistogramAtIndex:",  ii));
    }
  }

  if (-[AWDCountersMacTxS txCsmaBackoffHistogramsCount](self, "txCsmaBackoffHistogramsCount"))
  {
    [v28 clearTxCsmaBackoffHistograms];
    uint64_t v24 = -[AWDCountersMacTxS txCsmaBackoffHistogramsCount](self, "txCsmaBackoffHistogramsCount");
    if (v24)
    {
      uint64_t v25 = v24;
      for (jj = 0LL; jj != v25; ++jj)
        objc_msgSend( v28,  "addTxCsmaBackoffHistogram:",  -[AWDCountersMacTxS txCsmaBackoffHistogramAtIndex:](self, "txCsmaBackoffHistogramAtIndex:", jj));
    }
  }

  BOOL v27 = self->_has;
  if ((*(_BYTE *)&v27 & 0x40) != 0)
  {
    v28[50] = self->_cslTxTotal;
    v28[64] |= 0x40u;
    BOOL v27 = self->_has;
    if ((*(_BYTE *)&v27 & 0x20) == 0)
    {
LABEL_41:
      if ((*(_BYTE *)&v27 & 0x10) == 0) {
        goto LABEL_42;
      }
      goto LABEL_63;
    }
  }

  else if ((*(_BYTE *)&v27 & 0x20) == 0)
  {
    goto LABEL_41;
  }

  v28[49] = self->_cslTxErrNoack;
  v28[64] |= 0x20u;
  BOOL v27 = self->_has;
  if ((*(_BYTE *)&v27 & 0x10) == 0)
  {
LABEL_42:
    if ((*(_BYTE *)&v27 & 4) == 0) {
      goto LABEL_43;
    }
    goto LABEL_64;
  }

  PBRepeatedUInt32Copy(v4 + 38, &self->_txPacketCountHistograms);
  PBRepeatedUInt32Copy(v5 + 26, &self->_txDirectRetryAttemptsHistograms);
  PBRepeatedUInt32Copy(v5 + 32, &self->_txIndirectRetryAttemptsHistograms);
  PBRepeatedUInt32Copy(v5 + 2, &self->_txCcaEnergyDetectedHistograms);
  PBRepeatedUInt32Copy(v5 + 20, &self->_txDirectNoackHistograms);
  PBRepeatedUInt32Copy(v5 + 14, &self->_txDirectChannelaccessfailureHistograms);
  PBRepeatedUInt32Copy(v5 + 8, &self->_txCsmaBackoffHistograms);
  uint64_t v7 = self->_has;
  if ((*(_BYTE *)&v7 & 0x40) != 0)
  {
    v5[50] = self->_cslTxTotal;
    v5[64] |= 0x40u;
    uint64_t v7 = self->_has;
    if ((*(_BYTE *)&v7 & 0x20) == 0)
    {
LABEL_13:
      if ((*(_BYTE *)&v7 & 0x10) == 0) {
        goto LABEL_14;
      }
      goto LABEL_35;
    }
  }

  else if ((*(_BYTE *)&v7 & 0x20) == 0)
  {
    goto LABEL_13;
  }

  v5[49] = self->_cslTxErrNoack;
  v5[64] |= 0x20u;
  uint64_t v7 = self->_has;
  if ((*(_BYTE *)&v7 & 0x10) == 0)
  {
LABEL_14:
    if ((*(_BYTE *)&v7 & 4) == 0) {
      goto LABEL_15;
    }
    goto LABEL_36;
  }

  uint64_t v28 = v4;
  uint64_t v6 = (char *)[v4 txPacketCountHistogramsCount];
  if (v6)
  {
    uint64_t v7 = v6;
    for (uint64_t i = 0LL; i != v7; ++i)
      -[AWDCountersMacTxS addTxPacketCountHistogram:]( self,  "addTxPacketCountHistogram:",  [v28 txPacketCountHistogramAtIndex:i]);
  }

  size_t v9 = (char *)[v28 txDirectRetryAttemptsHistogramsCount];
  if (v9)
  {
    unint64_t v10 = v9;
    for (j = 0LL; j != v10; ++j)
      -[AWDCountersMacTxS addTxDirectRetryAttemptsHistogram:]( self,  "addTxDirectRetryAttemptsHistogram:",  [v28 txDirectRetryAttemptsHistogramAtIndex:j]);
  }

  uint64_t v12 = (char *)[v28 txIndirectRetryAttemptsHistogramsCount];
  if (v12)
  {
    unsigned int v13 = v12;
    for (k = 0LL; k != v13; ++k)
      -[AWDCountersMacTxS addTxIndirectRetryAttemptsHistogram:]( self,  "addTxIndirectRetryAttemptsHistogram:",  [v28 txIndirectRetryAttemptsHistogramAtIndex:k]);
  }

  int v15 = (char *)[v28 txCcaEnergyDetectedHistogramsCount];
  if (v15)
  {
    int v16 = v15;
    for (m = 0LL; m != v16; ++m)
      -[AWDCountersMacTxS addTxCcaEnergyDetectedHistogram:]( self,  "addTxCcaEnergyDetectedHistogram:",  [v28 txCcaEnergyDetectedHistogramAtIndex:m]);
  }

  uint64_t v18 = (char *)[v28 txDirectNoackHistogramsCount];
  if (v18)
  {
    unsigned int v19 = v18;
    for (n = 0LL; n != v19; ++n)
      -[AWDCountersMacTxS addTxDirectNoackHistogram:]( self,  "addTxDirectNoackHistogram:",  [v28 txDirectNoackHistogramAtIndex:n]);
  }

  uint64_t v21 = (char *)[v28 txDirectChannelaccessfailureHistogramsCount];
  if (v21)
  {
    uint64_t v22 = v21;
    for (iuint64_t i = 0LL; ii != v22; ++ii)
      -[AWDCountersMacTxS addTxDirectChannelaccessfailureHistogram:]( self,  "addTxDirectChannelaccessfailureHistogram:",  [v28 txDirectChannelaccessfailureHistogramAtIndex:ii]);
  }

  uint64_t v24 = (char *)[v28 txCsmaBackoffHistogramsCount];
  if (v24)
  {
    uint64_t v25 = v24;
    for (jj = 0LL; jj != v25; ++jj)
      -[AWDCountersMacTxS addTxCsmaBackoffHistogram:]( self,  "addTxCsmaBackoffHistogram:",  [v28 txCsmaBackoffHistogramAtIndex:jj]);
  }

  BOOL v27 = v28[64];
  if ((v27 & 0x40) != 0)
  {
    self->_cslTxTotal = v28[50];
    *(_DWORD *)&self->_has |= 0x40u;
    BOOL v27 = v28[64];
    if ((v27 & 0x20) == 0)
    {
LABEL_34:
      if ((v27 & 0x10) == 0) {
        goto LABEL_35;
      }
      goto LABEL_56;
    }
  }

  else if ((v27 & 0x20) == 0)
  {
    goto LABEL_34;
  }

  self->_cslTxErrNoack = v28[49];
  *(_DWORD *)&self->_has |= 0x20u;
  BOOL v27 = v28[64];
  if ((v27 & 0x10) == 0)
  {
LABEL_35:
    if ((v27 & 4) == 0) {
      goto LABEL_36;
    }
    goto LABEL_57;
  }

      uint64_t v8 = 1;
      sub_1000176D4(a2, &v8);
      goto LABEL_13;
    }

    std::string::append(&v55, "\n");
    a1 = (_WORD *)((char *)a1 + v20);
    ++v11;
  }

  while (v11 != 5);
  if (v8) {
    sub_10005653C(a3, (uint64_t *)&v56);
  }
  else {
    sub_1000200A0(a3, &v55);
  }
  uint64_t v40 = 0LL;
LABEL_84:
  sub_10000D448((uint64_t)&v56);
  sub_10000C0E8(v58);
  return v40;
}
}
}

  uint64_t v5 = 0LL;
  if ((has & 8) != 0)
  {
LABEL_5:
    uint64_t v6 = 2654435761LL * self->_coexTxDeniedRequests;
    if ((has & 4) != 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }

  if (v4) {
    CFRelease(v4);
  }
  return v7 != 0;
}

  self->_receivedEnergyEvents = v4[8];
  *(void *)&self->_has |= 0x40uLL;
  if ((*((void *)v4 + 31) & 0x100) != 0)
  {
LABEL_5:
    self->_receivedPreambles = v4[10];
    *(void *)&self->_has |= 0x100uLL;
  }

  __break(0x5500u);
  return result;
}

  __break(0x5512u);
  return result;
}

        (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
        goto LABEL_21;
      }
    }

    else
    {
    }
  }

  BOOL v27 = sub_1001768B4(1);
  uint64_t v28 = (os_log_s *)objc_claimAutoreleasedReturnValue(v27);
  if (os_log_type_enabled(v28, OS_LOG_TYPE_INFO))
  {
    unint64_t v29 = (void *)objc_claimAutoreleasedReturnValue([v6 network]);
    int v30 = (void *)objc_claimAutoreleasedReturnValue([v29 networkName]);
    uint64_t v31 = (void *)objc_claimAutoreleasedReturnValue([v6 network]);
    uint64_t v32 = (void *)objc_claimAutoreleasedReturnValue([v31 extendedPANID]);
    *(_DWORD *)__n128 buf = 136315906;
    __int16 v46 = "-[THThreadNetworkCredentialsKeychainBackingStore checkIfRecordForPreferredNetworkIsPresentWithCompletion:]_block_invoke";
    char v47 = 1024;
    uint64_t v48 = 1744;
    uint64_t v49 = 2112;
    uint64_t v50 = v30;
    __int16 v51 = 2112;
    int v52 = v32;
    _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_INFO,  "%s : %d - Request to check how many active dataset records are present for preferred network (name=%@, xpanid=%@)",  buf,  0x26u);
  }

  uint64_t v33 = (void *)objc_claimAutoreleasedReturnValue([v6 network]);
  uint64_t v34 = (void *)objc_claimAutoreleasedReturnValue( +[THThreadNetworkCredentialsActiveDataSetRecord keyChainQueryForFetchActiveDataSetRecordsOperationForNetwork:]( &OBJC_CLASS___THThreadNetworkCredentialsActiveDataSetRecord,  "keyChainQueryForFetchActiveDataSetRecordsOperationForNetwork:",  v33));

  uint64_t v35 = *(void **)(a1 + 32);
  __int16 v44 = 0LL;
  __int16 v36 = (void *)objc_claimAutoreleasedReturnValue([v35 _doFetchActiveDataSetRecords:v34 error:&v44]);
  char v37 = v44;
  int v38 = sub_1001768B4(1);
  size_t v39 = (os_log_s *)objc_claimAutoreleasedReturnValue(v38);
  if (os_log_type_enabled(v39, OS_LOG_TYPE_INFO))
  {
    uint64_t v40 = [v36 count];
    *(_DWORD *)__n128 buf = 136315650;
    __int16 v46 = "-[THThreadNetworkCredentialsKeychainBackingStore checkIfRecordForPreferredNetworkIsPresentWithCompletion:]_block_invoke";
    char v47 = 1024;
    uint64_t v48 = 1750;
    uint64_t v49 = 2048;
    uint64_t v50 = v40;
    _os_log_impl( (void *)&_mh_execute_header,  v39,  OS_LOG_TYPE_INFO,  "%s:%d: Preferred Network present and the matching Active dataset records size is: %lu",  buf,  0x1Cu);
  }

  if ([v36 count])
  {
    std::string v41 = 1LL;
    unint64_t v42 = 0LL;
  }

  else
  {
    std::string v41 = 0LL;
    unint64_t v42 = v6;
  }

  (*(void (**)(void, uint64_t, void *))(*(void *)(a1 + 40) + 16LL))(*(void *)(a1 + 40), v41, v42);

LABEL_21:
  objc_autoreleasePoolPop(v2);
}
}

LABEL_35:
  uint64_t v33 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_cslTxErrCca));
  [v3 setObject:v33 forKey:@"csl_tx_err_cca"];

  uint64_t v20 = self->_has;
  if ((*(_BYTE *)&v20 & 4) == 0)
  {
LABEL_15:
    if ((*(_BYTE *)&v20 & 8) == 0) {
      goto LABEL_16;
    }
    goto LABEL_37;
  }

  v5[48] = self->_cslTxErrCca;
  v5[64] |= 0x10u;
  uint64_t v7 = self->_has;
  if ((*(_BYTE *)&v7 & 4) == 0)
  {
LABEL_15:
    if ((*(_BYTE *)&v7 & 8) == 0) {
      goto LABEL_16;
    }
    goto LABEL_37;
  }

  uint64_t v22 = 0LL;
  if ((*(_BYTE *)&v18 & 8) != 0)
  {
LABEL_25:
    char v23 = 2654435761LL * self->_cslTxErrBusyChannel;
    if ((*(_BYTE *)&v18 & 1) != 0) {
      goto LABEL_26;
    }
    goto LABEL_37;
  }

      if (a2 == 2) {
        return 0LL;
      }
      *(_BYTE *)(*(void *)(a1 + 56) + 72757LL) = 0;
      uint64_t v20 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v20)
      {
        uint64_t v21 = v20;
        if (sub_10015A058(6) && os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
        {
          buf.n128_u16[0] = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_INFO,  "Task Leave, Clear DataSets",  (uint8_t *)&buf,  2u);
        }
      }

      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        sub_1001FB53C();
      }

      uint64_t v22 = (*(uint64_t (**)(void))(**(void **)(a1 + 56) + 24LL))(*(void *)(a1 + 56));
      (*(void (**)(uint64_t))(*(void *)v22 + 392LL))(v22);
      char v23 = *(void *)(a1 + 56) + 74000LL;
      *(_DWORD *)(v23 + 8) = 0;
      *(void *)char v23 = 0LL;
      sub_100034C60("Ciib", (uint64_t *)&buf, 0x80u);
      sub_100006EFC(a1 + 104, &buf);
      p___n128 buf = &buf;
      sub_100006F6C((void ***)&p_buf);
      *(_WORD *)(a1 + 98) = 0;
      *(_WORD *)(a1 + 8) = 91;
      goto LABEL_43;
    }

    if (v11)
    {
      if (v11 != 66) {
        goto LABEL_115;
      }
      goto LABEL_27;
    }

    int v16 = *(void *)(a1 + 56);
    if (*(_BYTE *)(v16 + 1376))
    {
      if (sub_1000D8DE8(v16) != 2)
      {
        sub_100159FC0(a1, 30.0);
        *(_WORD *)(a1 + 8) = 66;
LABEL_27:
        unsigned int v17 = sub_1000D8DE8(*(void *)(a1 + 56));
        if (sub_1000B50E8(v17)
          || (*(unsigned int (**)(void))(**(void **)(a1 + 56) + 160LL))(*(void *)(a1 + 56)))
        {
          if (!sub_100159F84(a1))
          {
            sub_10015A00C(a1);
            uint64_t v18 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
            if (v18)
            {
              unsigned int v19 = v18;
            }

            else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
            {
              sub_1001FB53C();
            }

            unsigned int v13 = 1;
            goto LABEL_103;
          }

          return 0LL;
        }

        sub_10015A00C(a1);
        *(_WORD *)(a1 + 8) = 74;
        goto LABEL_35;
      }

      buf.n128_u64[0] = 0LL;
      (*(void (**)(uint64_t, uint64_t, __n128 *))(*(void *)a1 + 32LL))(a1, 4LL, &buf);
    }

    else
    {
      buf.n128_u64[0] = 0LL;
      (*(void (**)(uint64_t, uint64_t, __n128 *))(*(void *)a1 + 32LL))(a1, 3LL, &buf);
    }

      memset(&v31, 0, sizeof(v31));
      int v15 = *(int *)(v6 + 8);
      goto LABEL_37;
    }

  log = -[NSString initWithData:encoding:](objc_alloc(&OBJC_CLASS___NSString), "initWithData:encoding:", v78, 4LL);
  if (!log)
  {
    std::string v53 = sub_1000160F4("com.apple.wpantund.tnm", "threadStart");
    std::string v45 = (os_log_s *)objc_claimAutoreleasedReturnValue(v53);
    if (os_log_type_enabled(v45, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)__n128 buf = 136315650;
      __int128 v85 = "-[ThreadNetworkManagerInstance checkIfNetworkIsFoundInMDNSScan:borderAgentID:]";
      uint64_t v86 = 1024;
      *(_DWORD *)__int16 v87 = 6519;
      *(_WORD *)&v87[4] = 2112;
      *(void *)&v87[6] = v14;
      _os_log_error_impl( (void *)&_mh_execute_header,  v45,  OS_LOG_TYPE_ERROR,  "%s : %d network name nsstring conversion failure for server : %@, continue to next network",  buf,  0x1Cu);
    }

    int v30 = 0LL;
    uint64_t v31 = 0LL;
    uint64_t v32 = 0LL;
    uint64_t v33 = 0LL;
    goto LABEL_69;
  }

  if ((v23 & 1) != 0)
  {
    std::string v41 = sub_1000160F4("com.apple.wpantund.tnm", "threadStart");
    unint64_t v42 = (os_log_s *)objc_claimAutoreleasedReturnValue(v41);
    if (os_log_type_enabled(v42, OS_LOG_TYPE_INFO))
    {
      int v43 = (void *)objc_claimAutoreleasedReturnValue([v76 networkName]);
      __int16 v44 = (void *)objc_claimAutoreleasedReturnValue([v76 extendedPANID]);
      *(_DWORD *)__n128 buf = 136316930;
      __int128 v85 = "-[ThreadNetworkManagerInstance checkIfNetworkIsFoundInMDNSScan:borderAgentID:]";
      uint64_t v86 = 1024;
      *(_DWORD *)__int16 v87 = 6550;
      *(_WORD *)&v87[4] = 2112;
      *(void *)&v87[6] = v43;
      uint64_t v88 = 2112;
      __int16 v89 = v44;
      uint64_t v90 = 2112;
      __int16 v91 = v75;
      uint64_t v92 = 2112;
      __int16 v93 = log;
      uint64_t v94 = 2112;
      __int128 v95 = v80;
      uint64_t v96 = 2112;
      __int128 v97 = (NSString *)v79;
      _os_log_impl( (void *)&_mh_execute_header,  v42,  OS_LOG_TYPE_INFO,  "%s:%d: Comparing  => storing(network name:%@, xpanid :%@, baid : %@), mdns (network name:%@, xpanid:%@, baid : %@)",  buf,  0x4Eu);
    }

    std::string v45 = (os_log_s *)objc_claimAutoreleasedReturnValue([v76 networkName]);
    if (-[os_log_s isEqualToString:](v45, "isEqualToString:", log))
    {
      __int16 v46 = (void *)objc_claimAutoreleasedReturnValue([v76 extendedPANID]);
      if ([v46 isEqualToData:v80])
      {
        char v47 = -[NSString isEqualToData:](v75, "isEqualToData:", v79);

        if (v47)
        {
          uint64_t v48 = sub_1000160F4("com.apple.wpantund.tnm", "threadStart");
          uint64_t v49 = (os_log_s *)objc_claimAutoreleasedReturnValue(v48);
          if (os_log_type_enabled(v49, OS_LOG_TYPE_INFO))
          {
            uint64_t v50 = (void *)objc_claimAutoreleasedReturnValue([v76 networkName]);
            *(_DWORD *)__n128 buf = v74;
            __int128 v85 = "-[ThreadNetworkManagerInstance checkIfNetworkIsFoundInMDNSScan:borderAgentID:]";
            uint64_t v86 = 1024;
            *(_DWORD *)__int16 v87 = 6555;
            *(_WORD *)&v87[4] = 2112;
            *(void *)&v87[6] = v50;
            uint64_t v88 = 2112;
            __int16 v89 = log;
            _os_log_impl( (void *)&_mh_execute_header,  v49,  OS_LOG_TYPE_INFO,  "%s : %d: Network :%@ matches with mdns record :%@",  buf,  0x26u);
          }

          -[ThreadNetworkfinder clear](v83->_BAFinder, "clear");
          __int16 v51 = 1;
          int v30 = 0LL;
          uint64_t v31 = 0LL;
          uint64_t v32 = 0LL;
          uint64_t v33 = 0LL;
          goto LABEL_74;
        }

        int v30 = 0LL;
        uint64_t v31 = 0LL;
        uint64_t v32 = 0LL;
        uint64_t v33 = 0LL;
LABEL_80:
        __int16 v51 = 0;
        goto LABEL_74;
      }
    }

    int v30 = 0LL;
    uint64_t v31 = 0LL;
    uint64_t v32 = 0LL;
    uint64_t v33 = 0LL;
LABEL_72:
    __int16 v51 = 0;
LABEL_73:

    goto LABEL_74;
  }

  uint64_t v33 = -[NSString initWithData:encoding:](objc_alloc(&OBJC_CLASS___NSString), "initWithData:encoding:", v80, 4LL);
  std::string v54 = -[NSString initWithData:encoding:](objc_alloc(&OBJC_CLASS___NSString), "initWithData:encoding:", v79, 4LL);
  uint64_t v32 = v54;
  if (!v33 || !v54)
  {
    dispatch_object_t v63 = sub_1000160F4("com.apple.wpantund.tnm", "threadStart");
    std::string v45 = (os_log_s *)objc_claimAutoreleasedReturnValue(v63);
    if (os_log_type_enabled(v45, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)__n128 buf = 136315650;
      __int128 v85 = "-[ThreadNetworkManagerInstance checkIfNetworkIsFoundInMDNSScan:borderAgentID:]";
      uint64_t v86 = 1024;
      *(_DWORD *)__int16 v87 = 6527;
      *(_WORD *)&v87[4] = 2112;
      *(void *)&v87[6] = v14;
      _os_log_error_impl( (void *)&_mh_execute_header,  v45,  OS_LOG_TYPE_ERROR,  "%s : %d xpanid and baid nsstring conversion failure, server : %@, continue to next network",  buf,  0x1Cu);
    }

    int v30 = 0LL;
    uint64_t v31 = 0LL;
    goto LABEL_69;
  }

  uint64_t v31 = (void *)objc_claimAutoreleasedReturnValue(-[ThreadNetworkManagerInstance dataFromHexString:](v83, "dataFromHexString:", v33));
  __int128 v55 = objc_claimAutoreleasedReturnValue(-[ThreadNetworkManagerInstance dataFromHexString:](v83, "dataFromHexString:", v32));
  int v30 = (void *)v55;
  if (!v31 || !v55)
  {
    BOOL v64 = sub_1000160F4("com.apple.wpantund.tnm", "threadStart");
    std::string v45 = (os_log_s *)objc_claimAutoreleasedReturnValue(v64);
    if (os_log_type_enabled(v45, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)__n128 buf = 136315650;
      __int128 v85 = "-[ThreadNetworkManagerInstance checkIfNetworkIsFoundInMDNSScan:borderAgentID:]";
      uint64_t v86 = 1024;
      *(_DWORD *)__int16 v87 = 6535;
      *(_WORD *)&v87[4] = 2112;
      *(void *)&v87[6] = v14;
      _os_log_error_impl( (void *)&_mh_execute_header,  v45,  OS_LOG_TYPE_ERROR,  "%s : %d hex string conversion to nsdata failure for server : %@, continue to next network",  buf,  0x1Cu);
    }

LABEL_36:
  uint64_t v34 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_cslTxErrAbort));
  [v3 setObject:v34 forKey:@"csl_tx_err_abort"];

  uint64_t v20 = self->_has;
  if ((*(_BYTE *)&v20 & 8) == 0)
  {
LABEL_16:
    if ((*(_BYTE *)&v20 & 1) == 0) {
      goto LABEL_17;
    }
    goto LABEL_38;
  }

  v5[46] = self->_cslTxErrAbort;
  v5[64] |= 4u;
  uint64_t v7 = self->_has;
  if ((*(_BYTE *)&v7 & 8) == 0)
  {
LABEL_16:
    if ((*(_BYTE *)&v7 & 1) == 0) {
      goto LABEL_17;
    }
    goto LABEL_38;
  }

  char v23 = 0LL;
  if ((*(_BYTE *)&v18 & 1) != 0)
  {
LABEL_26:
    uint64_t v24 = 2654435761LL * self->_cslLossOfSyncDueToCslTimeout;
    if ((*(_BYTE *)&v18 & 2) != 0) {
      goto LABEL_27;
    }
    goto LABEL_38;
  }

  sub_1000075F0(v7);
  if (v19) {
    (*(void (**)(uint64_t))(*(void *)v19 + 8LL))(v19);
  }
  v17.__r_.__value_.__r.__words[0] = (std::string::size_type)&v20;
  sub_100006F6C((void ***)&v17);
}

    unsigned int v17 = 1LL;
  }

  else
  {
LABEL_20:
    if (v8) {
      sub_100070E34(a3, (uint64_t)v27);
    }
    else {
      sub_10006DA9C(a3, (uint64_t)v26);
    }
    unsigned int v17 = 0LL;
  }

  sub_10000C0E8(v26);
  sub_10000C178(v27);
  sub_10000D448((uint64_t)&v28);
  return v17;
}

    uint64_t v22 = 1LL;
  }

  else
  {
LABEL_20:
    if (v8) {
      sub_100070E34(a3, (uint64_t)v31);
    }
    else {
      sub_10006DA9C(a3, (uint64_t)v32);
    }
    uint64_t v22 = 0LL;
  }

  sub_10000C178(v31);
  sub_10000C0E8(v32);
  return v22;
}

          PBReaderRecallMark(a2, v23);

          break;
        default:
          if ((PBReaderSkipValueWithTag(a2) & 1) != 0) {
            goto LABEL_1;
          }
          return;
      }

      goto LABEL_1;
    }

    size_t v9 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
    *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
    v6 |= (unint64_t)(v9 & 0x7F) << v4;
    if ((v9 & 0x80) == 0) {
      goto LABEL_11;
    }
    v4 += 7;
    unint64_t v10 = v5++ >= 9;
    if (v10)
    {
      int v11 = 0LL;
      uint64_t v12 = OBJC_IVAR___PBDataReader__error;
      goto LABEL_14;
    }
  }

  if (a1[1] == 20LL)
  {
    int v11 = *(void *)*a1 == 0x3A656E696C66666FLL && *(void *)(*a1 + 8LL) == 0x697373696D6D6F63LL;
    if (v11 && *(_DWORD *)(*a1 + 16LL) == 1684369007) {
      return 5LL;
    }
  }

  if (a1[1] == 30LL)
  {
    unsigned int v13 = *(void *)*a1 == 0x746169636F737361LL && *(void *)(*a1 + 8LL) == 0x646572633A676E69LL;
    uint64_t v14 = v13 && *(void *)(*a1 + 16LL) == 0x2D736C6169746E65LL;
    if (v14 && *(void *)(*a1 + 22LL) == 0x64656465656E2D73LL) {
      return 7LL;
    }
  }

  if (a1[1] == 20LL)
  {
    int v16 = (void *)*a1;
LABEL_97:
    BOOL v27 = *v16;
    uint64_t v28 = v16[1];
    unint64_t v29 = *((_DWORD *)v16 + 4);
    int v30 = v27 == 0x746169636F737361LL && v28 == 0x61702D6F6E3A6465LL;
    if (v30 && v29 == 1953391986) {
      return 9LL;
    }
  }

    __break(0x5500u);
LABEL_37:
    __break(0x5515u);
    goto LABEL_38;
  }

  if ((a1 & 1) != 0)
  {
    int v15 = v5 / 0x1388;
    if (v15 <= 0x18)
    {
      int v16 = (char *)&xmmword_1002D0E00 + 4 * v15;
      unsigned int v17 = *((_DWORD *)v16 + 45);
      unsigned int v13 = v16 + 180;
      uint64_t v12 = v17;
LABEL_22:
      uint64_t v18 = __CFADD__(v12, 1);
      unsigned int v19 = v12 + 1;
      if (!v18) {
        goto LABEL_35;
      }
      goto LABEL_36;
    }

          PBReaderRecallMark(a2, v22);

          break;
        default:
          if ((PBReaderSkipValueWithTag(a2) & 1) != 0) {
            goto LABEL_1;
          }
          return;
      }

      goto LABEL_1;
    }

    size_t v9 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
    *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
    v6 |= (unint64_t)(v9 & 0x7F) << v4;
    if ((v9 & 0x80) == 0) {
      goto LABEL_11;
    }
    v4 += 7;
    unint64_t v10 = v5++ >= 9;
    if (v10)
    {
      int v11 = 0LL;
      uint64_t v12 = OBJC_IVAR___PBDataReader__error;
      goto LABEL_14;
    }
  }

          PBReaderRecallMark(a2, v22);

          break;
        default:
          if ((PBReaderSkipValueWithTag(a2) & 1) != 0) {
            goto LABEL_1;
          }
          return;
      }

      goto LABEL_1;
    }

    size_t v9 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
    *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
    v6 |= (unint64_t)(v9 & 0x7F) << v4;
    if ((v9 & 0x80) == 0) {
      goto LABEL_11;
    }
    v4 += 7;
    unint64_t v10 = v5++ >= 9;
    if (v10)
    {
      int v11 = 0LL;
      uint64_t v12 = OBJC_IVAR___PBDataReader__error;
      goto LABEL_14;
    }
  }

    __break(0x5500u);
LABEL_37:
    __break(0x5515u);
    goto LABEL_38;
  }

  if ((a1 & 1) != 0)
  {
    int v15 = v5 / 0x1388;
    if (v15 <= 0x18)
    {
      int v16 = (char *)&xmmword_1002D1510 + 4 * v15;
      unsigned int v17 = *((_DWORD *)v16 + 45);
      unsigned int v13 = v16 + 180;
      uint64_t v12 = v17;
LABEL_22:
      uint64_t v18 = __CFADD__(v12, 1);
      unsigned int v19 = v12 + 1;
      if (!v18) {
        goto LABEL_35;
      }
      goto LABEL_36;
    }

          PBReaderRecallMark(a2, v25);

          break;
        default:
          if ((PBReaderSkipValueWithTag(a2) & 1) != 0) {
            goto LABEL_1;
          }
          return;
      }

      goto LABEL_1;
    }

    size_t v9 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
    *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
    v6 |= (unint64_t)(v9 & 0x7F) << v4;
    if ((v9 & 0x80) == 0) {
      goto LABEL_11;
    }
    v4 += 7;
    unint64_t v10 = v5++ >= 9;
    if (v10)
    {
      int v11 = 0LL;
      uint64_t v12 = OBJC_IVAR___PBDataReader__error;
      goto LABEL_14;
    }
  }

  uint64_t v35 = v77;

  char v80 = 0u;
  std::string v81 = 0u;
  std::string v78 = 0u;
  __n128 v79 = 0u;
  __int16 v36 = self->_preferredList;
  char v37 = -[NSArray countByEnumeratingWithState:objects:count:]( v36,  "countByEnumeratingWithState:objects:count:",  &v78,  v91,  16LL);
  char v74 = (os_log_s *)v36;
  if (!v37)
  {
    __n128 v76 = 0LL;
    unsigned int v17 = 0LL;
    uint64_t v18 = 0;
    uint64_t v8 = v69;
    uint64_t v5 = v70;
    unint64_t v10 = (void *)v75;
    goto LABEL_78;
  }

  int v38 = v37;
  char v71 = self;
  char v68 = v9;
  __n128 v76 = 0LL;
  unsigned int v17 = 0LL;
  size_t v39 = *(void *)v79;
LABEL_38:
  uint64_t v40 = 0LL;
  while (1)
  {
    if (*(void *)v79 != v39) {
      objc_enumerationMutation(v36);
    }
    std::string v41 = *(void **)(*((void *)&v78 + 1) + 8 * v40);
    if (!v41) {
      goto LABEL_56;
    }
    unint64_t v42 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v78 + 1) + 8 * v40) network]);
    int v43 = (void *)objc_claimAutoreleasedReturnValue([v42 networkName]);
    __int16 v44 = [v43 isEqualToString:v35];

    std::string v45 = sub_1001768B4(1);
    __int16 v46 = (os_log_s *)objc_claimAutoreleasedReturnValue(v45);
    char v47 = os_log_type_enabled(v46, OS_LOG_TYPE_ERROR);
    if (!v44)
    {
      if (v47)
      {
        uint64_t v61 = (void *)objc_claimAutoreleasedReturnValue([v41 network]);
        xpc_object_t v62 = (void *)objc_claimAutoreleasedReturnValue([v61 networkName]);
        *(_DWORD *)__n128 buf = 136315906;
        std::string v84 = "-[ThreadBRFinder matchTheListWithServer:]";
        __int128 v85 = 1024;
        uint64_t v86 = 300;
        __int16 v87 = 2112;
        uint64_t v88 = v62;
        __int16 v89 = 2112;
        uint64_t v90 = v77;
        _os_log_error_impl( (void *)&_mh_execute_header,  v46,  OS_LOG_TYPE_ERROR,  "%s : %d: Preferred Network to find :%@ does not match with mdns record :%@",  buf,  0x26u);

        uint64_t v35 = v77;
        __int16 v36 = (NSArray *)v74;
      }

      uint64_t v48 = v17;
      goto LABEL_53;
    }

    if (v47)
    {
      char v59 = (void *)objc_claimAutoreleasedReturnValue([v41 network]);
      int v60 = (void *)objc_claimAutoreleasedReturnValue([v59 networkName]);
      *(_DWORD *)__n128 buf = 136315906;
      std::string v84 = "-[ThreadBRFinder matchTheListWithServer:]";
      __int128 v85 = 1024;
      uint64_t v86 = 267;
      __int16 v87 = 2112;
      uint64_t v88 = v60;
      __int16 v89 = 2112;
      uint64_t v90 = v35;
      _os_log_error_impl( (void *)&_mh_execute_header,  v46,  OS_LOG_TYPE_ERROR,  "%s : %d: Network name to find :%@ does match with mdns record name :%@",  buf,  0x26u);
    }

    if (v73 != (id)16)
    {
      std::string v54 = (void *)objc_claimAutoreleasedReturnValue([v41 network]);
      __int128 v55 = (void *)objc_claimAutoreleasedReturnValue([v54 extendedPANID]);
      std::string v56 = [v55 isEqualToData:v75];

      if (v56)
      {
        BOOL v64 = sub_1001768B4(1);
        uint64_t v65 = (os_log_s *)objc_claimAutoreleasedReturnValue(v64);
        if (os_log_type_enabled(v65, OS_LOG_TYPE_ERROR))
        {
          unint64_t v10 = (void *)v75;
          sub_1001A0CEC(v41, v75, v65);
          uint64_t v50 = (uint64_t)v76;
        }

        else
        {
          unint64_t v10 = (void *)v75;
          uint64_t v50 = (uint64_t)v76;
        }

        uint64_t v48 = v17;
        uint64_t v8 = v69;
        uint64_t v5 = v70;
        size_t v9 = v68;
        uint64_t v49 = v71;
        uint64_t v12 = v72;
        goto LABEL_77;
      }

      goto LABEL_55;
    }

    uint64_t v48 = -[NSString initWithData:encoding:](objc_alloc(&OBJC_CLASS___NSString), "initWithData:encoding:", v75, 4LL);

    if (!v48)
    {
      __int16 v57 = sub_1001768B4(1);
      __int16 v46 = (os_log_s *)objc_claimAutoreleasedReturnValue(v57);
      if (os_log_type_enabled(v46, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)__n128 buf = 136315650;
        std::string v84 = "-[ThreadBRFinder matchTheListWithServer:]";
        __int128 v85 = 1024;
        uint64_t v86 = 274;
        __int16 v87 = 2112;
        uint64_t v88 = v70;
        _os_log_error_impl( (void *)&_mh_execute_header,  v46,  OS_LOG_TYPE_ERROR,  "%s : %d xpanid nsstring conversion failure, server : %@",  buf,  0x1Cu);
      }

      uint64_t v48 = 0LL;
      goto LABEL_53;
    }

    uint64_t v49 = v71;
    uint64_t v50 = objc_claimAutoreleasedReturnValue(-[ThreadBRFinder dataFromHexString:](v71, "dataFromHexString:", v48));

    if (v50) {
      break;
    }
    uint64_t v58 = sub_1001768B4(1);
    __int16 v46 = (os_log_s *)objc_claimAutoreleasedReturnValue(v58);
    if (os_log_type_enabled(v46, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)__n128 buf = 136315650;
      std::string v84 = "-[ThreadBRFinder matchTheListWithServer:]";
      __int128 v85 = 1024;
      uint64_t v86 = 280;
      __int16 v87 = 2112;
      uint64_t v88 = v70;
      _os_log_error_impl( (void *)&_mh_execute_header,  v46,  OS_LOG_TYPE_ERROR,  "%s : %d hex string conversion to nsdata failure for server : %@",  buf,  0x1Cu);
    }

    __n128 v76 = 0LL;
LABEL_53:

    unsigned int v17 = v48;
LABEL_56:
    if (v38 == (id)++v40)
    {
      dispatch_object_t v63 = -[NSArray countByEnumeratingWithState:objects:count:]( v36,  "countByEnumeratingWithState:objects:count:",  &v78,  v91,  16LL);
      int v38 = v63;
      if (!v63)
      {
        uint64_t v18 = 0;
        uint64_t v8 = v69;
        uint64_t v5 = v70;
        size_t v9 = v68;
        unint64_t v10 = (void *)v75;
        goto LABEL_11;
      }

      goto LABEL_38;
    }
  }

  __int16 v51 = (void *)objc_claimAutoreleasedReturnValue([v41 network]);
  int v52 = (void *)objc_claimAutoreleasedReturnValue([v51 extendedPANID]);
  std::string v53 = [v52 isEqualToData:v50];

  if (!v53)
  {
    __n128 v76 = (void *)v50;
    unsigned int v17 = v48;
LABEL_55:
    __int16 v36 = (NSArray *)v74;
    uint64_t v35 = v77;
    goto LABEL_56;
  }

  uint64_t v66 = sub_1001768B4(1);
  uint64_t v65 = (os_log_s *)objc_claimAutoreleasedReturnValue(v66);
  if (os_log_type_enabled(v65, OS_LOG_TYPE_ERROR)) {
    sub_1001A0C40(v41, v50, v65);
  }
  uint64_t v8 = v69;
  uint64_t v5 = v70;
  size_t v9 = v68;
  unint64_t v10 = (void *)v75;
  uint64_t v12 = v72;
LABEL_77:

  objc_storeStrong((id *)&v49->_preferredRecord, v41);
  uint64_t v18 = 1;
  __n128 v76 = (void *)v50;
  unsigned int v17 = v48;
LABEL_78:

LABEL_79:
  uint64_t v22 = v76;
  char v23 = v77;
LABEL_80:

LABEL_81:
  return v18;
}

LABEL_38:
  __int16 v36 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_cslLossOfSyncDueToCslTimeout));
  [v3 setObject:v36 forKey:@"csl_loss_of_sync_due_to_csl_timeout"];

  uint64_t v20 = self->_has;
  if ((*(_BYTE *)&v20 & 2) == 0)
  {
LABEL_18:
    if ((*(_WORD *)&v20 & 0x8000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_40;
  }

  v5[44] = self->_cslLossOfSyncDueToCslTimeout;
  v5[64] |= 1u;
  uint64_t v7 = self->_has;
  if ((*(_BYTE *)&v7 & 2) == 0)
  {
LABEL_18:
    if ((*(_WORD *)&v7 & 0x8000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_40;
  }

  uint64_t v25 = 0LL;
  if ((*(_WORD *)&v18 & 0x8000) != 0)
  {
LABEL_28:
    BOOL v26 = 2654435761LL * self->_txErrCcaPercentage;
    if ((*(_WORD *)&v18 & 0x800) != 0) {
      goto LABEL_29;
    }
    goto LABEL_40;
  }

      std::string::append(&v94, "::");
    }
  }

  if ([v1 hasSCntrsRadio])
  {
    std::string::append(&v94, "cca_failed_attempts");
    std::string::append(&v94, "=");
    uint64_t v34 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsRadio]);
    std::to_string(&v95, [v34 ccaFailedAttempts]);
    sub_10000D650(&v94, (const std::string::value_type *)&v95);

    std::string::append(&v94, "::");
    std::string::append(&v94, "radio_received_frames");
    std::string::append(&v94, "=");
    uint64_t v35 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsRadio]);
    std::to_string(&v95, [v35 radioReceivedFrames]);
    sub_10000D650(&v94, (const std::string::value_type *)&v95);

    std::string::append(&v94, "::");
    std::string::append(&v94, "received_energy_events");
    std::string::append(&v94, "=");
    __int16 v36 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsRadio]);
    std::to_string(&v95, [v36 receivedEnergyEvents]);
    sub_10000D650(&v94, (const std::string::value_type *)&v95);

    std::string::append(&v94, "::");
    std::string::append(&v94, "received_preambles");
    std::string::append(&v94, "=");
    char v37 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsRadio]);
    std::to_string(&v95, [v37 receivedPreambles]);
    sub_10000D650(&v94, (const std::string::value_type *)&v95);

    std::string::append(&v94, "::");
    std::string::append(&v94, "RttMinVal");
    std::string::append(&v94, "=");
    int v38 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsRadio]);
    std::to_string(&v95, [v38 rttMinVal]);
    sub_10000D650(&v94, (const std::string::value_type *)&v95);

    std::string::append(&v94, "::");
    std::string::append(&v94, "RttMaxVal");
    std::string::append(&v94, "=");
    size_t v39 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsRadio]);
    std::to_string(&v95, [v39 rttMaxVal]);
    sub_10000D650(&v94, (const std::string::value_type *)&v95);

    std::string::append(&v94, "::");
    std::string::append(&v94, "RttAvgVal");
    std::string::append(&v94, "=");
    uint64_t v40 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsRadio]);
    std::to_string(&v95, [v40 rttAvgVal]);
    sub_10000D650(&v94, (const std::string::value_type *)&v95);

    std::string::append(&v94, "::");
    std::string::append(&v94, "Rtt90perc");
    std::string::append(&v94, "=");
    std::string v41 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsRadio]);
    std::to_string(&v95, [v41 rtt90perc]);
    sub_10000D650(&v94, (const std::string::value_type *)&v95);

    std::string::append(&v94, "::");
    std::string::append(&v94, "RetryIntervalMin");
    std::string::append(&v94, "=");
    unint64_t v42 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsRadio]);
    std::to_string(&v95, [v42 retryIntervalMin]);
    sub_10000D650(&v94, (const std::string::value_type *)&v95);

    std::string::append(&v94, "::");
    std::string::append(&v94, "RetryIntervalMax");
    std::string::append(&v94, "=");
    int v43 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsRadio]);
    std::to_string(&v95, [v43 retryIntervalMax]);
    sub_10000D650(&v94, (const std::string::value_type *)&v95);

    std::string::append(&v94, "::");
    std::string::append(&v94, "RetryIntervalAvg");
    std::string::append(&v94, "=");
    __int16 v44 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsRadio]);
    std::to_string(&v95, [v44 retryIntervalAvg]);
    sub_10000D650(&v94, (const std::string::value_type *)&v95);

    std::string::append(&v94, "::");
    std::string::append(&v94, "RetryInterval90Perc");
    std::string::append(&v94, "=");
    std::string v45 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsRadio]);
    std::to_string(&v95, [v45 retryInterval90perc]);
    sub_10000D650(&v94, (const std::string::value_type *)&v95);

    std::string::append(&v94, "::");
    std::string::append(&v94, "TxDelayMin");
    std::string::append(&v94, "=");
    __int16 v46 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsRadio]);
    std::to_string(&v95, [v46 txDelayMin]);
    sub_10000D650(&v94, (const std::string::value_type *)&v95);

    std::string::append(&v94, "::");
    std::string::append(&v94, "TxDelayMax");
    std::string::append(&v94, "=");
    char v47 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsRadio]);
    std::to_string(&v95, [v47 txDelayMax]);
    sub_10000D650(&v94, (const std::string::value_type *)&v95);

    std::string::append(&v94, "::");
    std::string::append(&v94, "TxDelayAvg");
    std::string::append(&v94, "=");
    uint64_t v48 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsRadio]);
    std::to_string(&v95, [v48 txDelayAvg]);
    sub_10000D650(&v94, (const std::string::value_type *)&v95);

    std::string::append(&v94, "::");
    std::string::append(&v94, "TxDelay90Perc");
    std::string::append(&v94, "=");
    uint64_t v49 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsRadio]);
    std::to_string(&v95, [v49 txDelay90perc]);
    sub_10000D650(&v94, (const std::string::value_type *)&v95);

    std::string::append(&v94, "::");
    std::string::append(&v94, "ListeningTime");
    std::string::append(&v94, "=");
    uint64_t v50 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsRadio]);
    std::to_string(&v95, [v50 listeningTime]);
    sub_10000D650(&v94, (const std::string::value_type *)&v95);

    std::string::append(&v94, "::");
    std::string::append(&v94, "ReceivingTime");
    std::string::append(&v94, "=");
    __int16 v51 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsRadio]);
    std::to_string(&v95, [v51 receivingTime]);
    sub_10000D650(&v94, (const std::string::value_type *)&v95);

    std::string::append(&v94, "::");
    std::string::append(&v94, "TrasmittingTime");
    std::string::append(&v94, "=");
    int v52 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsRadio]);
    std::to_string(&v95, [v52 transmittingTime]);
    sub_10000D650(&v94, (const std::string::value_type *)&v95);

    std::string::append(&v94, "transmitted_frames");
    std::string::append(&v94, "=");
    std::string v53 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsRadio]);
    std::to_string(&v95, [v53 transmittedFrames]);
    sub_10000D650(&v94, (const std::string::value_type *)&v95);

    std::string::append(&v94, "tx_error_timeslot_ended");
    std::string::append(&v94, "=");
    std::string v54 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsRadio]);
    std::to_string(&v95, [v54 txErrorTimeslotEnded]);
    sub_10000D650(&v94, (const std::string::value_type *)&v95);

    std::string::append(&v94, "tx_error_timeslot_denied");
    std::string::append(&v94, "=");
    __int128 v55 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsRadio]);
    std::to_string(&v95, [v55 txErrorTimeslotDenied]);
    sub_10000D650(&v94, (const std::string::value_type *)&v95);

    std::string::append(&v94, "tx_error_busy_channel_cca_not_started");
    std::string::append(&v94, "=");
    std::string v56 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsRadio]);
    std::to_string(&v95, [v56 txErrorBusyChannelCcaNotStarted]);
    sub_10000D650(&v94, (const std::string::value_type *)&v95);

    std::string::append(&v94, "tx_error_channel_access_cca_busy");
    std::string::append(&v94, "=");
    __int16 v57 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsRadio]);
    std::to_string(&v95, [v57 txErrorChannelAccessCcaBusy]);
    sub_10000D650(&v94, (const std::string::value_type *)&v95);

    std::string::append(&v94, "tx_error_channel_access_failure");
    std::string::append(&v94, "=");
    uint64_t v58 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsRadio]);
    std::to_string(&v95, [v58 txErrorChannelAccessFailure]);
    sub_10000D650(&v94, (const std::string::value_type *)&v95);

    std::string::append(&v94, "tx_error_tx_aborted");
    std::string::append(&v94, "=");
    char v59 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsRadio]);
    std::to_string(&v95, [v59 txErrorTxAborted]);
    sub_10000D650(&v94, (const std::string::value_type *)&v95);

    std::string::append(&v94, "tx_error_tx_aborted_csma_cfg_backoff");
    std::string::append(&v94, "=");
    int v60 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsRadio]);
    std::to_string(&v95, [v60 txErrorTxAbortedCsmaCfgBackoff]);
    sub_10000D650(&v94, (const std::string::value_type *)&v95);

    std::string::append(&v94, "tx_error_tx_aborted_csma_backoff");
    std::string::append(&v94, "=");
    uint64_t v61 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsRadio]);
    std::to_string(&v95, [v61 txErrorTxAbortedCsmaBackoff]);
    sub_10000D650(&v94, (const std::string::value_type *)&v95);

    std::string::append(&v94, "tx_error_tx_aborted_csma_prepare");
    std::string::append(&v94, "=");
    xpc_object_t v62 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsRadio]);
    std::to_string(&v95, [v62 txErrorTxAbortedCsmaPrepare]);
    sub_10000D650(&v94, (const std::string::value_type *)&v95);

    std::string::append(&v94, "tx_error_tx_aborted_ifs");
    std::string::append(&v94, "=");
    dispatch_object_t v63 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsRadio]);
    std::to_string(&v95, [v63 txErrorTxAbortedIfs]);
    sub_10000D650(&v94, (const std::string::value_type *)&v95);

    std::string::append(&v94, "tx_error_tx_aborted_rx_ack");
    std::string::append(&v94, "=");
    BOOL v64 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsRadio]);
    std::to_string(&v95, [v64 txErrorTxAbortedRxAck]);
    sub_10000D650(&v94, (const std::string::value_type *)&v95);

    std::string::append(&v94, "tx_error_tx_aborted_cca_tx");
    std::string::append(&v94, "=");
    uint64_t v65 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsRadio]);
    std::to_string(&v95, [v65 txErrorTxAbortedCcaTx]);
    sub_10000D650(&v94, (const std::string::value_type *)&v95);

    std::string::append(&v94, "tx_error_tx_aborted_tx");
    std::string::append(&v94, "=");
    uint64_t v66 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsRadio]);
    std::to_string(&v95, [v66 txErrorTxAbortedTx]);
    sub_10000D650(&v94, (const std::string::value_type *)&v95);

    std::string::append(&v94, "tx_error_not_granted");
    std::string::append(&v94, "=");
    __n128 v67 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsRadio]);
    std::to_string(&v95, [v67 txErrorNotGranted]);
    sub_10000D650(&v94, (const std::string::value_type *)&v95);

    std::string::append(&v94, "tx_error_invalid_ack");
    std::string::append(&v94, "=");
    char v68 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsRadio]);
    std::to_string(&v95, [v68 txErrorInvalidAck]);
    sub_10000D650(&v94, (const std::string::value_type *)&v95);

    std::string::append(&v94, "tx_error_no_ack");
    std::string::append(&v94, "=");
    std::string v69 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsRadio]);
    std::to_string(&v95, [v69 txErrorNoAck]);
    sub_10000D650(&v94, (const std::string::value_type *)&v95);

    std::string::append(&v94, "tx_error_ack_no_mem");
    std::string::append(&v94, "=");
    __n128 v70 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsRadio]);
    std::to_string(&v95, [v70 txErrorAckNoMem]);
    sub_10000D650(&v94, (const std::string::value_type *)&v95);

    std::string::append(&v94, "received_frames");
    std::string::append(&v94, "=");
    char v71 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsRadio]);
    std::to_string(&v95, [v71 receivedFrames]);
    sub_10000D650(&v94, (const std::string::value_type *)&v95);

    std::string::append(&v94, "rx_error_receive_failed");
    std::string::append(&v94, "=");
    uint64_t v72 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsRadio]);
    std::to_string(&v95, [v72 rxErrorReceiveFailed]);
    sub_10000D650(&v94, (const std::string::value_type *)&v95);

    std::string::append(&v94, "rx_error_invalid_frame");
    std::string::append(&v94, "=");
    __n128 v73 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsRadio]);
    std::to_string(&v95, [v73 rxErrorInvalidFrame]);
    sub_10000D650(&v94, (const std::string::value_type *)&v95);

    std::string::append(&v94, "rx_error_delayed_timeout");
    std::string::append(&v94, "=");
    char v74 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsRadio]);
    std::to_string(&v95, [v74 rxErrorDelayedTimeout]);
    sub_10000D650(&v94, (const std::string::value_type *)&v95);

    std::string::append(&v94, "rx_error_invalid_fcs");
    std::string::append(&v94, "=");
    std::string v75 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsRadio]);
    std::to_string(&v95, [v75 rxErrorInvalidFcs]);
    sub_10000D650(&v94, (const std::string::value_type *)&v95);

    std::string::append(&v94, "rx_error_dest_addr_filtered");
    std::string::append(&v94, "=");
    __n128 v76 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsRadio]);
    std::to_string(&v95, [v76 rxErrorDestAddrFiltered]);
    sub_10000D650(&v94, (const std::string::value_type *)&v95);

    std::string::append(&v94, "rx_error_runtime_delay");
    std::string::append(&v94, "=");
    char v77 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsRadio]);
    std::to_string(&v95, [v77 rxErrorRuntimeDelay]);
    sub_10000D650(&v94, (const std::string::value_type *)&v95);

    std::string::append(&v94, "rx_error_timeslot_ended");
    std::string::append(&v94, "=");
    std::string v78 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsRadio]);
    std::to_string(&v95, [v78 rxErrorTimeslotEnded]);
    sub_10000D650(&v94, (const std::string::value_type *)&v95);

    std::string::append(&v94, "rx_error_aborted");
    std::string::append(&v94, "=");
    __n128 v79 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsRadio]);
    std::to_string(&v95, [v79 rxErrorAborted]);
    sub_10000D650(&v94, (const std::string::value_type *)&v95);

    std::string::append(&v94, "rx_error_delayed_timeslot_ended");
    std::string::append(&v94, "=");
    char v80 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsRadio]);
    std::to_string(&v95, [v80 rxErrorDelayedTimeslotEnded]);
    sub_10000D650(&v94, (const std::string::value_type *)&v95);

    std::string::append(&v94, "rx_error_invalid_length");
    std::string::append(&v94, "=");
    std::string v81 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsRadio]);
    std::to_string(&v95, [v81 rxErrorInvalidLength]);
    sub_10000D650(&v94, (const std::string::value_type *)&v95);

    std::string::append(&v94, "rx_error_invalid_data");
    std::string::append(&v94, "=");
    __n128 v82 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsRadio]);
    std::to_string(&v95, [v82 rxErrorInvalidData]);
    sub_10000D650(&v94, (const std::string::value_type *)&v95);

    std::string::append(&v94, "rx_error_ack_failed_radio_state");
    std::string::append(&v94, "=");
    char v83 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsRadio]);
    std::to_string(&v95, [v83 rxErrorAckFailedRadioState]);
    sub_10000D650(&v94, (const std::string::value_type *)&v95);

    std::string::append(&v94, "rx_error_ack_failed_radio_delay");
    std::string::append(&v94, "=");
    std::string v84 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsRadio]);
    std::to_string(&v95, [v84 rxErrorAckFailedRadioDelay]);
    sub_10000D650(&v94, (const std::string::value_type *)&v95);

    std::string::append(&v94, "rx_error_ack_denied");
    std::string::append(&v94, "=");
    __int128 v85 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsRadio]);
    std::to_string(&v95, [v85 rxErrorAckDenied]);
    sub_10000D650(&v94, (const std::string::value_type *)&v95);

    std::string::append(&v94, "rx_error_ack_aborted");
    std::string::append(&v94, "=");
    uint64_t v86 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsRadio]);
    std::to_string(&v95, [v86 rxErrorAckAborted]);
    sub_10000D650(&v94, (const std::string::value_type *)&v95);

    std::string::append(&v94, "sleep_state");
    std::string::append(&v94, "=");
    __int16 v87 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsRadio]);
    std::to_string(&v95, [v87 sleepState]);
    sub_10000D650(&v94, (const std::string::value_type *)&v95);

    std::string::append(&v94, "energy_detected_requests");
    std::string::append(&v94, "=");
    uint64_t v88 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsRadio]);
    std::to_string(&v95, [v88 energyDetectedRequests]);
    sub_10000D650(&v94, (const std::string::value_type *)&v95);

    std::string::append(&v94, "energy_detected_events");
    std::string::append(&v94, "=");
    __int16 v89 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsRadio]);
    std::to_string(&v95, [v89 energyDetectedEvents]);
    sub_10000D650(&v94, (const std::string::value_type *)&v95);

    std::string::append(&v94, "radio_status_double_notification");
    std::string::append(&v94, "=");
    uint64_t v90 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsRadio]);
    std::to_string(&v95, [v90 radioStatusDoubleNotification]);
    sub_10000D650(&v94, (const std::string::value_type *)&v95);
  }

  __int16 v91 = sub_1000160F4("com.apple.wpantund.awd", "default");
  uint64_t v92 = (os_log_s *)objc_claimAutoreleasedReturnValue(v91);
  if (os_log_type_enabled(v92, OS_LOG_TYPE_INFO))
  {
    __int16 v93 = &v94;
    if ((v94.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      __int16 v93 = (std::string *)v94.__r_.__value_.__r.__words[0];
    }
    LODWORD(v95.__r_.__value_.__l.__data_) = 136315138;
    *(std::string::size_type *)((char *)v95.__r_.__value_.__r.__words + 4) = (std::string::size_type)v93;
    _os_log_impl((void *)&_mh_execute_header, v92, OS_LOG_TYPE_INFO, "AWDMetricsLogger : %s", (uint8_t *)&v95, 0xCu);
  }
}

    __break(0x5512u);
  }

  uint64_t v20 = v5 / 0x64;
  uint64_t v21 = (char *)&xmmword_1002D0E00 + 4 * v20;
  uint64_t v22 = *((_DWORD *)v21 + 121);
  uint64_t v18 = __CFADD__(v22, 1);
  unsigned int v19 = v22 + 1;
  if (v18) {
    goto LABEL_36;
  }
  unsigned int v13 = v21 + 484;
LABEL_35:
  *unsigned int v13 = v19;
}

  sub_100100944(a1);
  sub_100100988(a1);
  return 0LL;
}

        int v16 = *(void *)v6 / 60000LL;
        unsigned int v17 = operator new(0x10uLL);
        *(void *)unsigned int v17 = &off_1002AE160;
        unsigned __int8 v17[2] = v16;
        v31.__r_.__value_.__r.__words[0] = (std::string::size_type)v17;
        sub_10003446C(a3);
LABEL_39:
        if (v31.__r_.__value_.__r.__words[0]) {
          (*(void (**)(std::string::size_type))(*(void *)v31.__r_.__value_.__l.__data_ + 8LL))(v31.__r_.__value_.__r.__words[0]);
        }
        return;
      }

      uint64_t v4 = 1LL;
      goto LABEL_49;
    }

    uint64_t size = v16.__r_.__value_.__l.__size_;
    if (v16.__r_.__value_.__l.__size_ == 3)
    {
      if (*(_WORD *)v16.__r_.__value_.__l.__data_ == 25977 && *(_BYTE *)(v16.__r_.__value_.__r.__words[0] + 2) == 115) {
        goto LABEL_38;
      }
      uint64_t size = v16.__r_.__value_.__l.__size_;
    }

    else if (v16.__r_.__value_.__l.__size_ == 4 && *(_DWORD *)v16.__r_.__value_.__l.__data_ == 1702195828)
    {
      goto LABEL_38;
    }

    if (size == 1)
    {
      if (*v16.__r_.__value_.__l.__data_ == 49) {
        goto LABEL_38;
      }
      uint64_t size = v16.__r_.__value_.__l.__size_;
    }

    if (size == 4)
    {
      if (*(_DWORD *)v16.__r_.__value_.__l.__data_ == 1163219540) {
        goto LABEL_38;
      }
      uint64_t size = v16.__r_.__value_.__l.__size_;
    }

    if (size != 3) {
      goto LABEL_43;
    }
    size_t v9 = (std::string *)v16.__r_.__value_.__r.__words[0];
    goto LABEL_39;
  }

  uint64_t v5 = sub_10000BD6C(a1);
  else {
    uint64_t v6 = sub_1001472F4(a1) == 0;
  }
  return !v6;
}

    __break(0x5512u);
  }

  uint64_t v20 = v5 / 0x64;
  uint64_t v21 = (char *)&xmmword_1002D1510 + 4 * v20;
  uint64_t v22 = *((_DWORD *)v21 + 121);
  uint64_t v18 = __CFADD__(v22, 1);
  unsigned int v19 = v22 + 1;
  if (v18) {
    goto LABEL_36;
  }
  unsigned int v13 = v21 + 484;
LABEL_35:
  *unsigned int v13 = v19;
}

LABEL_39:
  char v37 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_cslLossOfSyncDueToMaxRetx));
  [v3 setObject:v37 forKey:@"csl_loss_of_sync_due_to_max_retx"];

  uint64_t v20 = self->_has;
  if ((*(_WORD *)&v20 & 0x8000) == 0)
  {
LABEL_19:
    if ((*(_WORD *)&v20 & 0x800) == 0) {
      goto LABEL_20;
    }
    goto LABEL_41;
  }

  v5[45] = self->_cslLossOfSyncDueToMaxRetx;
  v5[64] |= 2u;
  uint64_t v7 = self->_has;
  if ((*(_WORD *)&v7 & 0x8000) == 0)
  {
LABEL_19:
    if ((*(_WORD *)&v7 & 0x800) == 0) {
      goto LABEL_20;
    }
    goto LABEL_41;
  }

  BOOL v26 = 0LL;
  if ((*(_WORD *)&v18 & 0x800) != 0)
  {
LABEL_29:
    BOOL v27 = 2654435761LL * self->_txErrAbortPercentage;
    if ((*(_WORD *)&v18 & 0x2000) != 0) {
      goto LABEL_30;
    }
LABEL_41:
    uint64_t v28 = 0LL;
    if ((*(_DWORD *)&v18 & 0x10000) != 0) {
      goto LABEL_31;
    }
LABEL_42:
    unint64_t v29 = 0LL;
    return v37 ^ v38 ^ v36 ^ v35 ^ v34 ^ v33 ^ v32 ^ v31 ^ v4 ^ v5 ^ v7 ^ v9 ^ v11 ^ v13 ^ v15 ^ v17 ^ v19 ^ v20 ^ v21 ^ v22 ^ v23 ^ v24 ^ v25 ^ v26 ^ v27 ^ v28 ^ v29;
  }

          sub_1000EA7AC(a1, 9);
          goto LABEL_21;
        }
      }

      while (!v32);
      size_t v39 = v91;
      if (v91 == 125)
      {
LABEL_90:
        while (1)
        {
          char v68 = sub_1000ACC28(v4);
          std::string v69 = (*(uint64_t (**)(uint64_t))(*(void *)v68 + 72LL))(v68);
          sub_10011DA1C((uint64_t)v3, v69);
          *uint64_t v3 = 231;
LABEL_91:
          __n128 v70 = sub_1000ACC28(v4);
          char v71 = (*(uint64_t (**)(uint64_t))(*(void *)v70 + 72LL))(v70);
          if ((sub_1000F3F58((int)v3, v71) & 1) == 0)
          {
            uint64_t v72 = sub_1000ACC28(v4);
          }

          __n128 v73 = sub_1000ACC28(v4);
          char v74 = (*(uint64_t (**)(uint64_t))(*(void *)v73 + 72LL))(v73);
          sub_10011D904((uint64_t)v3, v74);
          std::string v75 = sub_1000ACC28(v4);
          __n128 v76 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)v75 + 24LL))(v75, &v91, 1LL);
          char v77 = v76;
          if (v76 < 0)
          {
            __n128 v79 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
            if (!v79)
            {
              if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
                goto LABEL_39;
              }
              goto LABEL_37;
            }

            char v80 = v79;
            unint64_t v42 = -v77;
            if (__OFSUB__(0LL, v77)) {
              goto LABEL_115;
            }
            goto LABEL_35;
          }

          if (v76)
          {
            if (v91 == 126) {
              goto LABEL_40;
            }
            size_t v39 = v91 ^ 0x20;
            v91 ^= 0x20u;
            goto LABEL_97;
          }
        }
      }

      if (v91 == 126)
      {
LABEL_40:
        int v43 = *(_DWORD *)(v2 + 2);
        if (v43 < 3) {
          goto LABEL_19;
        }
        __int16 v44 = v43 - 2;
        std::string v45 = *((_WORD *)v2 + 11);
        *(_DWORD *)(v2 + 2) = v44;
        __int16 v46 = ~v45;
        *((_WORD *)v2 + 11) = v46;
        if (v44 <= 0x513 && v43 <= 0x514)
        {
          if ((*(unsigned __int8 *)(a1 + 67458 + v44) | (*(unsigned __int8 *)(a1 + 67458 + v43 - 1) << 8)) == v46)
          {
            if (*(_DWORD *)(a1 + 248))
            {
              char v47 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
              if (v47)
              {
                uint64_t v48 = v47;
                if (sub_10015A058(3))
                {
                  if (os_log_type_enabled(v48, OS_LOG_TYPE_ERROR)) {
                    sub_10020C95C((int *)(a1 + 248));
                  }
                }
              }

              else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
              {
                sub_1001FB53C();
              }

              uint64_t v61 = *(_DWORD *)(a1 + 248);
              *__error() = v61;
              goto LABEL_39;
            }

            if ((int)spinel_datatype_unpack((_WORD *)(a1 + 67458), v44, "Ci", v33, v34, v35, v36, v37, (uint64_t)v2) >= 1)
            {
              __int16 v51 = *v2;
              if ((v51 & 0x80000000) == 0)
              {
                int v52 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
                if (v52)
                {
                  std::string v53 = v52;
                  uint64_t v14 = 0;
                  goto LABEL_22;
                }

                if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
                  goto LABEL_21;
                }
LABEL_85:
                sub_1001FB53C();
                goto LABEL_21;
              }

              if ((v51 & 0x30) != 0) {
                goto LABEL_21;
              }
              sub_10006FD74((_BYTE *)a1, 1, (_WORD *)(a1 + 67458), *(unsigned int *)(v2 + 2));
              sub_10006E3B8((uint64_t *)a1, v92, (_WORD *)(a1 + 67458), *(unsigned int *)(v2 + 2), v64, v65, v66, v67);
            }

  if (a2 != 2) {
    return (void *)sub_100006FF8(a4);
  }
  uint64_t v20 = a3->n128_u64[0];
  uint64_t v21 = a3->n128_i64[1];
  v22[0] = 0LL;
  sub_100007640((uint64_t)v22, a4);
  sub_1000EFC70((uint64_t)sub_1000EF170, 0LL, (uint64_t)a1, v20, v21, v22, (uint64_t)v23);
  sub_1000F2328(v25, (uint64_t)v23);
  (*(void (**)(uint64_t *, __n128 *, uint64_t (***)()))(*a1 + 184))(a1, a3, v25);
  sub_1000075F0(v25);
  sub_1000075F0(v24);
  unsigned int v19 = v22;
  return sub_1000075F0(v19);
}

    int v16 = a1;
    unsigned int v17 = a3;
    uint64_t v18 = 10;
LABEL_41:
    sub_10010BD44(v16, v17, v18);
    return 0LL;
  }

  uint64_t v12 = (const char *)a2->__r_.__value_.__r.__words[0];
  if (!strcasecmp(a2->__r_.__value_.__l.__data_, "Stat:Short")) {
    goto LABEL_39;
  }
  if (!strcasecmp(v12, "Stat:Long"))
  {
LABEL_40:
    int v16 = a1;
    unsigned int v17 = a3;
    uint64_t v18 = 0;
    goto LABEL_41;
  }

  if (!strcasecmp(v12, "Stat:RX")) {
    goto LABEL_44;
  }
  if (!strcasecmp(v12, "Stat:TX")) {
    goto LABEL_45;
  }
  if (!strcasecmp(v12, "Stat:RX:History")) {
    goto LABEL_46;
  }
  if (!strcasecmp(v12, "Stat:TX:History")) {
    goto LABEL_47;
  }
  if (!strcasecmp(v12, "Stat:History"))
  {
LABEL_48:
    sub_10010B5B0(a1, a3, 0);
    sub_10000AC00(&v24, "");
    sub_100044B24(a3, (uint64_t)&v24);
    if (SHIBYTE(cap) < 0) {
      operator delete((void *)v24);
    }
    goto LABEL_50;
  }

  if (!strcasecmp(v12, "Stat:NCP")) {
    goto LABEL_51;
  }
  if (!strcasecmp(v12, "Stat:BlockingHostSleep")) {
    goto LABEL_52;
  }
  if (!strcasecmp(v12, "Stat:Node")) {
    goto LABEL_53;
  }
  if (!strcasecmp(v12, "Stat:Node:History")) {
    goto LABEL_54;
  }
  if (!strncasecmp(v12, "Stat:Node:History:", 0x12uLL)) {
    goto LABEL_56;
  }
  if (!strcasecmp(v12, "Stat:LinkQuality:Long")) {
    goto LABEL_59;
  }
  uint64_t v4 = (const std::string *)v12;
  if (!strcasecmp(v12, "Stat:LinkQuality:Short"))
  {
LABEL_38:
    unsigned int v13 = a1 + 22720;
    uint64_t v14 = a3;
    int v15 = 8;
LABEL_60:
    sub_10010A664(v13, v14, v15);
    return 0LL;
  }

    CFRelease(Mutable);
    CFRelease(*(CFTypeRef *)buf);
    return v13;
  }

  uint64_t v5 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v5)
  {
    uint64_t v6 = v5;
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FF028();
  }

  return 0LL;
}

          PBReaderRecallMark(a2, v23);

          break;
        default:
          if ((PBReaderSkipValueWithTag(a2) & 1) != 0) {
            goto LABEL_1;
          }
          return;
      }

      goto LABEL_1;
    }

    size_t v9 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
    *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
    v6 |= (unint64_t)(v9 & 0x7F) << v4;
    if ((v9 & 0x80) == 0) {
      goto LABEL_11;
    }
    v4 += 7;
    unint64_t v10 = v5++ >= 9;
    if (v10)
    {
      int v11 = 0LL;
      uint64_t v12 = OBJC_IVAR___PBDataReader__error;
      goto LABEL_14;
    }
  }

    ++v15;
  }

  while (v15 != 5);
  uint64_t v35 = sub_1001768B4(1);
  uint64_t v21 = (os_log_s *)objc_claimAutoreleasedReturnValue(v35);
  if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
    sub_100199064();
  }
  uint64_t v32 = 0;
LABEL_43:

  __int16 v36 = (void *)WiFiCopyCurrentNetworkInfoEx(5LL, v56);
  char v37 = &stru_1002B93F8;
  if (v36)
  {
    int v38 = sub_1001768B4(1);
    size_t v39 = (os_log_s *)objc_claimAutoreleasedReturnValue(v38);
    if (os_log_type_enabled(v39, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v40 = (void *)objc_claimAutoreleasedReturnValue([v36 objectForKey:@"ssid"]);
      *(_DWORD *)__n128 buf = 136315650;
      uint64_t v58 = "-[THThreadNetworkCredentialsKeychainBackingStore getNetworkSignature]";
      char v59 = 1024;
      int v60 = 4415;
      uint64_t v61 = 2112;
      *(void *)xpc_object_t v62 = v40;
      _os_log_impl( (void *)&_mh_execute_header,  v39,  OS_LOG_TYPE_DEFAULT,  "%s:%d Network Information Wifi SSID : %@",  buf,  0x1Cu);
    }

    std::string v41 = objc_claimAutoreleasedReturnValue([v36 objectForKey:@"ssid"]);
    if (v41) {
      char v37 = (__CFString *)v41;
    }
  }

  unint64_t v42 = objc_alloc(&OBJC_CLASS___THNetworkSignature);
  if (v32) {
    int v43 = [v42 initSignaturesWithArrays:v72 ipv4BytesLen:v55 ipv6Bytes:v71 ipv6BytesLen:v54 wifSSID:v37 wifiPassword:@"ApplePreferredNetworkRecordLabel"];
  }
  else {
    int v43 = [v42 initWithSignatures:v53 ipv6NwSignature:v52 wifSSID:v37 wifiPassword:@"ApplePreferredNetworkRecordLabel"];
  }
  __int16 v44 = v43;
  if (v43)
  {
    std::string v45 = sub_1001768B4(1);
    __int16 v46 = (os_log_s *)objc_claimAutoreleasedReturnValue(v45);
    if (os_log_type_enabled(v46, OS_LOG_TYPE_DEFAULT))
    {
      char v47 = (void *)objc_claimAutoreleasedReturnValue([v44 ipv4NwSignature]);
      uint64_t v48 = (void *)objc_claimAutoreleasedReturnValue([v44 ipv6NwSignature]);
      *(_DWORD *)__n128 buf = 136316674;
      uint64_t v58 = "-[THThreadNetworkCredentialsKeychainBackingStore getNetworkSignature]";
      char v59 = 1024;
      int v60 = 4431;
      uint64_t v61 = 1024;
      *(_DWORD *)xpc_object_t v62 = v5 & 1;
      *(_WORD *)&v62[4] = 2112;
      *(void *)&v62[6] = v47;
      dispatch_object_t v63 = 1024;
      BOOL v64 = v17 & 1;
      uint64_t v65 = 2112;
      uint64_t v66 = v48;
      __n128 v67 = 2112;
      char v68 = v37;
      _os_log_impl( (void *)&_mh_execute_header,  v46,  OS_LOG_TYPE_DEFAULT,  "%s:%d ipv4 signature : [ret = %d]%@, ipv6 signature : [ret = %d]%@ , ssid : %@",  buf,  0x3Cu);
    }
  }

  uint64_t v6 = v52;
  uint64_t v5 = v53;
LABEL_59:

  return v44;
}

  ++*(void *)(a1 + 24);
  return v11;
}

  ++*(void *)(a1 + 24);
  return v10;
}

  ++*(void *)(a1 + 24);
  return v10;
}

LABEL_40:
  int v38 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_txErrCcaPercentage));
  [v3 setObject:v38 forKey:@"tx_err_cca_percentage"];

  uint64_t v20 = self->_has;
  if ((*(_WORD *)&v20 & 0x800) == 0)
  {
LABEL_20:
    if ((*(_WORD *)&v20 & 0x2000) == 0) {
      goto LABEL_21;
    }
LABEL_42:
    uint64_t v40 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_txErrBusyChannelPercentage));
    [v3 setObject:v40 forKey:@"tx_err_busy_channel_percentage"];

    if ((*(_DWORD *)&self->_has & 0x10000) == 0) {
      return v3;
    }
    goto LABEL_22;
  }

  v5[59] = self->_txErrCcaPercentage;
  v5[64] |= 0x8000u;
  uint64_t v7 = self->_has;
  if ((*(_WORD *)&v7 & 0x800) == 0)
  {
LABEL_20:
    if ((*(_WORD *)&v7 & 0x2000) == 0) {
      goto LABEL_21;
    }
LABEL_42:
    v5[57] = self->_txErrBusyChannelPercentage;
    v5[64] |= 0x2000u;
    if ((*(_DWORD *)&self->_has & 0x10000) == 0) {
      return v5;
    }
    goto LABEL_22;
  }

  BOOL v27 = 0LL;
  if ((*(_WORD *)&v18 & 0x2000) == 0) {
    goto LABEL_41;
  }
LABEL_30:
  uint64_t v28 = 2654435761LL * self->_txErrBusyChannelPercentage;
  if ((*(_DWORD *)&v18 & 0x10000) == 0) {
    goto LABEL_42;
  }
LABEL_31:
  unint64_t v29 = 2654435761LL * self->_txErrPercentage;
  return v37 ^ v38 ^ v36 ^ v35 ^ v34 ^ v33 ^ v32 ^ v31 ^ v4 ^ v5 ^ v7 ^ v9 ^ v11 ^ v13 ^ v15 ^ v17 ^ v19 ^ v20 ^ v21 ^ v22 ^ v23 ^ v24 ^ v25 ^ v26 ^ v27 ^ v28 ^ v29;
}

  int v38 = 1LL;
LABEL_41:
  sub_10000D448((uint64_t)&v48);
  return v38;
}

  v20[0] = 0LL;
  sub_100007640((uint64_t)v20, a4);
  sub_1000EFBBC((uint64_t)sub_1000EE234, 0LL, (uint64_t)a1, (uint64_t)"removing multicast address", v20, (uint64_t)v21);
  sub_1000F1D34(v23, (uint64_t)v21);
  (*(void (**)(uint64_t *, __n128 *, uint64_t (***)()))(*a1 + 192))(a1, a3, v23);
  sub_1000075F0(v23);
  sub_1000075F0(v22);
  return sub_1000075F0(v20);
}
  }
}

uint64_t sub_100038978(uint64_t result, uint64_t a2)
{
  uint64_t v3 = (_DWORD *)result;
  while (2)
  {
    int v4 = OBJC_IVAR___PBDataReader__error;
    if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)
      || *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error))
    {
      return *(unsigned __int8 *)(a2 + v4) == 0;
    }

    char v5 = 0;
    unsigned int v6 = 0;
    uint64_t v7 = 0LL;
    while (1)
    {
      uint64_t v8 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v9 = v8 + 1;
      if (v8 == -1) {
        goto LABEL_412;
      }
      if (v9 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v10 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v8);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v9;
      v7 |= (unint64_t)(v10 & 0x7F) << v5;
      if ((v10 & 0x80) == 0) {
        goto LABEL_12;
      }
      v5 += 7;
      BOOL v11 = v6++ >= 9;
      if (v11)
      {
        unint64_t v12 = 0LL;
        int v4 = OBJC_IVAR___PBDataReader__error;
        uint64_t v13 = OBJC_IVAR___PBDataReader__error;
        goto LABEL_16;
      }
    }

    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_12:
    uint64_t v13 = OBJC_IVAR___PBDataReader__error;
    unint64_t v12 = *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) ? 0LL : v7;
    int v4 = OBJC_IVAR___PBDataReader__error;
LABEL_16:
    int v14 = v12 & 7;
    if (*(_BYTE *)(a2 + v13) || v14 == 4) {
      return *(unsigned __int8 *)(a2 + v4) == 0;
    }
    switch((v12 >> 3))
    {
      case 1u:
        char v16 = 0;
        unsigned int v17 = 0;
        uint64_t v18 = 0LL;
        v3[64] |= 0x40000u;
        while (1)
        {
          uint64_t v19 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v20 = v19 + 1;
          if (v19 == -1) {
            goto LABEL_412;
          }
          if (v20 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v21 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v19);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v20;
          v18 |= (unint64_t)(v21 & 0x7F) << v16;
          if ((v21 & 0x80) == 0) {
            goto LABEL_331;
          }
          v16 += 7;
          BOOL v11 = v17++ >= 9;
          if (v11)
          {
            LODWORD(v18) = 0;
            goto LABEL_333;
          }
        }

        *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_331:
        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v18) = 0;
        }
LABEL_333:
        v3[62] = v18;
        continue;
      case 2u:
        char v22 = 0;
        unsigned int v23 = 0;
        uint64_t v24 = 0LL;
        v3[64] |= 0x100u;
        while (1)
        {
          uint64_t v25 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v26 = v25 + 1;
          if (v25 == -1) {
            goto LABEL_412;
          }
          if (v26 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v27 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v25);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v26;
          v24 |= (unint64_t)(v27 & 0x7F) << v22;
          if ((v27 & 0x80) == 0) {
            goto LABEL_335;
          }
          v22 += 7;
          BOOL v11 = v23++ >= 9;
          if (v11)
          {
            LODWORD(v24) = 0;
            goto LABEL_337;
          }
        }

        *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_335:
        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v24) = 0;
        }
LABEL_337:
        v3[52] = v24;
        continue;
      case 3u:
        char v28 = 0;
        unsigned int v29 = 0;
        uint64_t v30 = 0LL;
        v3[64] |= 0x80000u;
        while (1)
        {
          uint64_t v31 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v32 = v31 + 1;
          if (v31 == -1) {
            goto LABEL_412;
          }
          if (v32 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v33 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v31);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v32;
          v30 |= (unint64_t)(v33 & 0x7F) << v28;
          if ((v33 & 0x80) == 0) {
            goto LABEL_339;
          }
          v28 += 7;
          BOOL v11 = v29++ >= 9;
          if (v11)
          {
            LODWORD(v30) = 0;
            goto LABEL_341;
          }
        }

        *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_339:
        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v30) = 0;
        }
LABEL_341:
        v3[63] = v30;
        continue;
      case 4u:
        char v34 = 0;
        unsigned int v35 = 0;
        uint64_t v36 = 0LL;
        v3[64] |= 0x80u;
        while (1)
        {
          uint64_t v37 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v38 = v37 + 1;
          if (v37 == -1) {
            goto LABEL_412;
          }
          if (v38 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v39 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v37);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v38;
          v36 |= (unint64_t)(v39 & 0x7F) << v34;
          if ((v39 & 0x80) == 0) {
            goto LABEL_343;
          }
          v34 += 7;
          BOOL v11 = v35++ >= 9;
          if (v11)
          {
            LODWORD(v36) = 0;
            goto LABEL_345;
          }
        }

        *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_343:
        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v36) = 0;
        }
LABEL_345:
        v3[51] = v36;
        continue;
      case 5u:
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0LL;
        v3[64] |= 0x4000u;
        while (1)
        {
          uint64_t v43 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v44 = v43 + 1;
          if (v43 == -1) {
            goto LABEL_412;
          }
          if (v44 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v45 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v43);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v44;
          v42 |= (unint64_t)(v45 & 0x7F) << v40;
          if ((v45 & 0x80) == 0) {
            goto LABEL_347;
          }
          v40 += 7;
          BOOL v11 = v41++ >= 9;
          if (v11)
          {
            LODWORD(v42) = 0;
            goto LABEL_349;
          }
        }

        *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_347:
        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v42) = 0;
        }
LABEL_349:
        v3[58] = v42;
        continue;
      case 6u:
        char v46 = 0;
        unsigned int v47 = 0;
        uint64_t v48 = 0LL;
        v3[64] |= 0x400u;
        while (1)
        {
          uint64_t v49 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v50 = v49 + 1;
          if (v49 == -1) {
            goto LABEL_412;
          }
          if (v50 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v51 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v49);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v50;
          v48 |= (unint64_t)(v51 & 0x7F) << v46;
          if ((v51 & 0x80) == 0) {
            goto LABEL_351;
          }
          v46 += 7;
          BOOL v11 = v47++ >= 9;
          if (v11)
          {
            LODWORD(v48) = 0;
            goto LABEL_353;
          }
        }

        *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_351:
        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v48) = 0;
        }
LABEL_353:
        v3[54] = v48;
        continue;
      case 7u:
        char v52 = 0;
        unsigned int v53 = 0;
        uint64_t v54 = 0LL;
        v3[64] |= 0x1000u;
        while (1)
        {
          uint64_t v55 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v56 = v55 + 1;
          if (v55 == -1) {
            goto LABEL_412;
          }
          if (v56 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v57 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v55);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v56;
          v54 |= (unint64_t)(v57 & 0x7F) << v52;
          if ((v57 & 0x80) == 0) {
            goto LABEL_355;
          }
          v52 += 7;
          BOOL v11 = v53++ >= 9;
          if (v11)
          {
            LODWORD(v54) = 0;
            goto LABEL_357;
          }
        }

        *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_355:
        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v54) = 0;
        }
LABEL_357:
        v3[56] = v54;
        continue;
      case 8u:
        char v58 = 0;
        unsigned int v59 = 0;
        uint64_t v60 = 0LL;
        v3[64] |= 0x200u;
        while (1)
        {
          uint64_t v61 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v62 = v61 + 1;
          if (v61 == -1) {
            goto LABEL_412;
          }
          if (v62 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v63 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v61);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v62;
          v60 |= (unint64_t)(v63 & 0x7F) << v58;
          if ((v63 & 0x80) == 0) {
            goto LABEL_359;
          }
          v58 += 7;
          BOOL v11 = v59++ >= 9;
          if (v11)
          {
            LODWORD(v60) = 0;
            goto LABEL_361;
          }
        }

        *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_359:
        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v60) = 0;
        }
LABEL_361:
        v3[53] = v60;
        continue;
      case 9u:
        char v64 = 0;
        unsigned int v65 = 0;
        uint64_t v66 = 0LL;
        v3[64] |= 0x20000u;
        while (1)
        {
          uint64_t v67 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v68 = v67 + 1;
          if (v67 == -1) {
            goto LABEL_412;
          }
          if (v68 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v69 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v67);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v68;
          v66 |= (unint64_t)(v69 & 0x7F) << v64;
          if ((v69 & 0x80) == 0) {
            goto LABEL_363;
          }
          v64 += 7;
          BOOL v11 = v65++ >= 9;
          if (v11)
          {
            LODWORD(v66) = 0;
            goto LABEL_365;
          }
        }

        *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_363:
        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v66) = 0;
        }
LABEL_365:
        v3[61] = v66;
        continue;
      case 0xAu:
        if (v14 != 2)
        {
          char v185 = 0;
          unsigned int v186 = 0;
          uint64_t v187 = 0LL;
          uint64_t result = (uint64_t)(v3 + 38);
          while (1)
          {
            uint64_t v188 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            unint64_t v189 = v188 + 1;
            if (v188 == -1) {
              goto LABEL_412;
            }
            if (v189 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
              goto LABEL_325;
            }
            char v190 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v188);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v189;
            v187 |= (unint64_t)(v190 & 0x7F) << v185;
            if ((v190 & 0x80) == 0) {
              goto LABEL_326;
            }
            v185 += 7;
            BOOL v11 = v186++ >= 9;
            if (v11) {
              goto LABEL_324;
            }
          }
        }

        uint64_t result = PBReaderPlaceMark(a2, v222);
        if (!(_DWORD)result) {
          return result;
        }
        while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length)
             && !*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error))
        {
          char v70 = 0;
          unsigned int v71 = 0;
          uint64_t v72 = 0LL;
          while (1)
          {
            uint64_t v73 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            unint64_t v74 = v73 + 1;
            if (v73 == -1) {
              goto LABEL_412;
            }
            if (v74 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
              break;
            }
            char v75 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v73);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v74;
            v72 |= (unint64_t)(v75 & 0x7F) << v70;
            if ((v75 & 0x80) == 0) {
              goto LABEL_98;
            }
            v70 += 7;
            BOOL v11 = v71++ >= 9;
            if (v11)
            {
              uint64_t v76 = 0LL;
              goto LABEL_101;
            }
          }

          *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_98:
          if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
            uint64_t v76 = 0LL;
          }
          else {
            uint64_t v76 = v72;
          }
LABEL_101:
          uint64_t result = PBRepeatedUInt32Add(v3 + 38, v76);
        }

        goto LABEL_198;
      case 0xBu:
        if (v14 != 2)
        {
          char v191 = 0;
          unsigned int v192 = 0;
          uint64_t v187 = 0LL;
          uint64_t result = (uint64_t)(v3 + 26);
          while (1)
          {
            uint64_t v193 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            unint64_t v194 = v193 + 1;
            if (v193 == -1) {
              goto LABEL_412;
            }
            if (v194 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
              goto LABEL_325;
            }
            char v195 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v193);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v194;
            v187 |= (unint64_t)(v195 & 0x7F) << v191;
            if ((v195 & 0x80) == 0) {
              goto LABEL_326;
            }
            v191 += 7;
            BOOL v11 = v192++ >= 9;
            if (v11) {
              goto LABEL_324;
            }
          }
        }

        uint64_t result = PBReaderPlaceMark(a2, v222);
        if (!(_DWORD)result) {
          return result;
        }
        while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length)
             && !*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error))
        {
          char v77 = 0;
          unsigned int v78 = 0;
          uint64_t v79 = 0LL;
          while (1)
          {
            uint64_t v80 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            unint64_t v81 = v80 + 1;
            if (v80 == -1) {
              goto LABEL_412;
            }
            if (v81 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
              break;
            }
            char v82 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v80);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v81;
            v79 |= (unint64_t)(v82 & 0x7F) << v77;
            if ((v82 & 0x80) == 0) {
              goto LABEL_114;
            }
            v77 += 7;
            BOOL v11 = v78++ >= 9;
            if (v11)
            {
              uint64_t v83 = 0LL;
              goto LABEL_117;
            }
          }

          *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_114:
          if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
            uint64_t v83 = 0LL;
          }
          else {
            uint64_t v83 = v79;
          }
LABEL_117:
          uint64_t result = PBRepeatedUInt32Add(v3 + 26, v83);
        }

        goto LABEL_198;
      case 0xCu:
        if (v14 != 2)
        {
          char v196 = 0;
          unsigned int v197 = 0;
          uint64_t v187 = 0LL;
          uint64_t result = (uint64_t)(v3 + 32);
          while (1)
          {
            uint64_t v198 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            unint64_t v199 = v198 + 1;
            if (v198 == -1) {
              goto LABEL_412;
            }
            if (v199 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
              goto LABEL_325;
            }
            char v200 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v198);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v199;
            v187 |= (unint64_t)(v200 & 0x7F) << v196;
            if ((v200 & 0x80) == 0) {
              goto LABEL_326;
            }
            v196 += 7;
            BOOL v11 = v197++ >= 9;
            if (v11) {
              goto LABEL_324;
            }
          }
        }

        uint64_t result = PBReaderPlaceMark(a2, v222);
        if (!(_DWORD)result) {
          return result;
        }
        while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length)
             && !*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error))
        {
          char v84 = 0;
          unsigned int v85 = 0;
          uint64_t v86 = 0LL;
          while (1)
          {
            uint64_t v87 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            unint64_t v88 = v87 + 1;
            if (v87 == -1) {
              goto LABEL_412;
            }
            if (v88 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
              break;
            }
            char v89 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v87);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v88;
            v86 |= (unint64_t)(v89 & 0x7F) << v84;
            if ((v89 & 0x80) == 0) {
              goto LABEL_130;
            }
            v84 += 7;
            BOOL v11 = v85++ >= 9;
            if (v11)
            {
              uint64_t v90 = 0LL;
              goto LABEL_133;
            }
          }

          *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_130:
          if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
            uint64_t v90 = 0LL;
          }
          else {
            uint64_t v90 = v86;
          }
LABEL_133:
          uint64_t result = PBRepeatedUInt32Add(v3 + 32, v90);
        }

        goto LABEL_198;
      case 0xDu:
        if (v14 != 2)
        {
          char v201 = 0;
          unsigned int v202 = 0;
          uint64_t v187 = 0LL;
          uint64_t result = (uint64_t)(v3 + 2);
          while (1)
          {
            uint64_t v203 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            unint64_t v204 = v203 + 1;
            if (v203 == -1) {
              goto LABEL_412;
            }
            if (v204 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
              goto LABEL_325;
            }
            char v205 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v203);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v204;
            v187 |= (unint64_t)(v205 & 0x7F) << v201;
            if ((v205 & 0x80) == 0) {
              goto LABEL_326;
            }
            v201 += 7;
            BOOL v11 = v202++ >= 9;
            if (v11) {
              goto LABEL_324;
            }
          }
        }

        uint64_t result = PBReaderPlaceMark(a2, v222);
        if (!(_DWORD)result) {
          return result;
        }
        while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length)
             && !*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error))
        {
          char v91 = 0;
          unsigned int v92 = 0;
          uint64_t v93 = 0LL;
          while (1)
          {
            uint64_t v94 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            unint64_t v95 = v94 + 1;
            if (v94 == -1) {
              goto LABEL_412;
            }
            if (v95 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
              break;
            }
            char v96 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v94);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v95;
            v93 |= (unint64_t)(v96 & 0x7F) << v91;
            if ((v96 & 0x80) == 0) {
              goto LABEL_146;
            }
            v91 += 7;
            BOOL v11 = v92++ >= 9;
            if (v11)
            {
              uint64_t v97 = 0LL;
              goto LABEL_149;
            }
          }

          *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_146:
          if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
            uint64_t v97 = 0LL;
          }
          else {
            uint64_t v97 = v93;
          }
LABEL_149:
          uint64_t result = PBRepeatedUInt32Add(v3 + 2, v97);
        }

        goto LABEL_198;
      case 0xEu:
        if (v14 != 2)
        {
          char v206 = 0;
          unsigned int v207 = 0;
          uint64_t v187 = 0LL;
          uint64_t result = (uint64_t)(v3 + 20);
          while (1)
          {
            uint64_t v208 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            unint64_t v209 = v208 + 1;
            if (v208 == -1) {
              goto LABEL_412;
            }
            if (v209 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
              goto LABEL_325;
            }
            char v210 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v208);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v209;
            v187 |= (unint64_t)(v210 & 0x7F) << v206;
            if ((v210 & 0x80) == 0) {
              goto LABEL_326;
            }
            v206 += 7;
            BOOL v11 = v207++ >= 9;
            if (v11) {
              goto LABEL_324;
            }
          }
        }

        uint64_t result = PBReaderPlaceMark(a2, v222);
        if (!(_DWORD)result) {
          return result;
        }
        while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length)
             && !*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error))
        {
          char v98 = 0;
          unsigned int v99 = 0;
          uint64_t v100 = 0LL;
          while (1)
          {
            uint64_t v101 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            unint64_t v102 = v101 + 1;
            if (v101 == -1) {
              goto LABEL_412;
            }
            if (v102 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
              break;
            }
            char v103 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v101);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v102;
            v100 |= (unint64_t)(v103 & 0x7F) << v98;
            if ((v103 & 0x80) == 0) {
              goto LABEL_162;
            }
            v98 += 7;
            BOOL v11 = v99++ >= 9;
            if (v11)
            {
              uint64_t v104 = 0LL;
              goto LABEL_165;
            }
          }

          *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_162:
          if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
            uint64_t v104 = 0LL;
          }
          else {
            uint64_t v104 = v100;
          }
LABEL_165:
          uint64_t result = PBRepeatedUInt32Add(v3 + 20, v104);
        }

        goto LABEL_198;
      case 0xFu:
        if (v14 == 2)
        {
          uint64_t result = PBReaderPlaceMark(a2, v222);
          if (!(_DWORD)result) {
            return result;
          }
          while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length)
               && !*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error))
          {
            char v105 = 0;
            unsigned int v106 = 0;
            uint64_t v107 = 0LL;
            while (1)
            {
              uint64_t v108 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
              unint64_t v109 = v108 + 1;
              if (v108 == -1) {
                goto LABEL_412;
              }
              if (v109 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
                break;
              }
              char v110 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v108);
              *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v109;
              v107 |= (unint64_t)(v110 & 0x7F) << v105;
              if ((v110 & 0x80) == 0) {
                goto LABEL_178;
              }
              v105 += 7;
              BOOL v11 = v106++ >= 9;
              if (v11)
              {
                uint64_t v111 = 0LL;
                goto LABEL_181;
              }
            }

            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_178:
            if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
              uint64_t v111 = 0LL;
            }
            else {
              uint64_t v111 = v107;
            }
LABEL_181:
            uint64_t result = PBRepeatedUInt32Add(v3 + 14, v111);
          }

LABEL_412:
        __break(0x5500u);
        return result;
      case 0x10u:
        if (v14 != 2)
        {
          char v216 = 0;
          unsigned int v217 = 0;
          uint64_t v187 = 0LL;
          uint64_t result = (uint64_t)(v3 + 8);
          while (1)
          {
            uint64_t v218 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            unint64_t v219 = v218 + 1;
            if (v218 == -1) {
              goto LABEL_412;
            }
            if (v219 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
              break;
            }
            char v220 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v218);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v219;
            v187 |= (unint64_t)(v220 & 0x7F) << v216;
            if ((v220 & 0x80) == 0) {
              goto LABEL_326;
            }
            v216 += 7;
            BOOL v11 = v217++ >= 9;
            if (v11)
            {
LABEL_324:
              uint64_t v221 = 0LL;
              goto LABEL_329;
            }
          }

LABEL_325:
          *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_326:
          if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
            uint64_t v221 = 0LL;
          }
          else {
            uint64_t v221 = v187;
          }
LABEL_329:
          uint64_t result = PBRepeatedUInt32Add(result, v221);
          continue;
        }

        uint64_t result = PBReaderPlaceMark(a2, v222);
        if (!(_DWORD)result) {
          return result;
        }
        while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length)
             && !*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error))
        {
          char v112 = 0;
          unsigned int v113 = 0;
          uint64_t v114 = 0LL;
          while (1)
          {
            uint64_t v115 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            unint64_t v116 = v115 + 1;
            if (v115 == -1) {
              goto LABEL_412;
            }
            if (v116 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
              break;
            }
            char v117 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v115);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v116;
            v114 |= (unint64_t)(v117 & 0x7F) << v112;
            if ((v117 & 0x80) == 0) {
              goto LABEL_194;
            }
            v112 += 7;
            BOOL v11 = v113++ >= 9;
            if (v11)
            {
              uint64_t v118 = 0LL;
              goto LABEL_197;
            }
          }

          *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_194:
          if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
            uint64_t v118 = 0LL;
          }
          else {
            uint64_t v118 = v114;
          }
LABEL_197:
          uint64_t result = PBRepeatedUInt32Add(v3 + 8, v118);
        }

        goto LABEL_198;
      case 0x11u:
        char v119 = 0;
        unsigned int v120 = 0;
        uint64_t v121 = 0LL;
        v3[64] |= 0x40u;
        while (1)
        {
          uint64_t v122 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v123 = v122 + 1;
          if (v122 == -1) {
            goto LABEL_412;
          }
          if (v123 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v124 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v122);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v123;
          v121 |= (unint64_t)(v124 & 0x7F) << v119;
          if ((v124 & 0x80) == 0) {
            goto LABEL_367;
          }
          v119 += 7;
          BOOL v11 = v120++ >= 9;
          if (v11)
          {
            LODWORD(v121) = 0;
            goto LABEL_369;
          }
        }

        *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_367:
        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v121) = 0;
        }
LABEL_369:
        v3[50] = v121;
        continue;
      case 0x12u:
        char v125 = 0;
        unsigned int v126 = 0;
        uint64_t v127 = 0LL;
        v3[64] |= 0x20u;
        while (1)
        {
          uint64_t v128 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v129 = v128 + 1;
          if (v128 == -1) {
            goto LABEL_412;
          }
          if (v129 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v130 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v128);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v129;
          v127 |= (unint64_t)(v130 & 0x7F) << v125;
          if ((v130 & 0x80) == 0) {
            goto LABEL_371;
          }
          v125 += 7;
          BOOL v11 = v126++ >= 9;
          if (v11)
          {
            LODWORD(v127) = 0;
            goto LABEL_373;
          }
        }

        *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_371:
        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v127) = 0;
        }
LABEL_373:
        v3[49] = v127;
        continue;
      case 0x13u:
        char v131 = 0;
        unsigned int v132 = 0;
        uint64_t v133 = 0LL;
        v3[64] |= 0x10u;
        while (1)
        {
          uint64_t v134 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v135 = v134 + 1;
          if (v134 == -1) {
            goto LABEL_412;
          }
          if (v135 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v136 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v134);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v135;
          v133 |= (unint64_t)(v136 & 0x7F) << v131;
          if ((v136 & 0x80) == 0) {
            goto LABEL_375;
          }
          v131 += 7;
          BOOL v11 = v132++ >= 9;
          if (v11)
          {
            LODWORD(v133) = 0;
            goto LABEL_377;
          }
        }

        *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_375:
        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v133) = 0;
        }
LABEL_377:
        v3[48] = v133;
        continue;
      case 0x14u:
        char v137 = 0;
        unsigned int v138 = 0;
        uint64_t v139 = 0LL;
        v3[64] |= 4u;
        while (1)
        {
          uint64_t v140 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v141 = v140 + 1;
          if (v140 == -1) {
            goto LABEL_412;
          }
          if (v141 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v142 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v140);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v141;
          v139 |= (unint64_t)(v142 & 0x7F) << v137;
          if ((v142 & 0x80) == 0) {
            goto LABEL_379;
          }
          v137 += 7;
          BOOL v11 = v138++ >= 9;
          if (v11)
          {
            LODWORD(v139) = 0;
            goto LABEL_381;
          }
        }

        *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_379:
        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v139) = 0;
        }
LABEL_381:
        v3[46] = v139;
        continue;
      case 0x15u:
        char v143 = 0;
        unsigned int v144 = 0;
        uint64_t v145 = 0LL;
        v3[64] |= 8u;
        while (1)
        {
          uint64_t v146 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v147 = v146 + 1;
          if (v146 == -1) {
            goto LABEL_412;
          }
          if (v147 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v148 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v146);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v147;
          v145 |= (unint64_t)(v148 & 0x7F) << v143;
          if ((v148 & 0x80) == 0) {
            goto LABEL_383;
          }
          v143 += 7;
          BOOL v11 = v144++ >= 9;
          if (v11)
          {
            LODWORD(v145) = 0;
            goto LABEL_385;
          }
        }

        *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_383:
        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v145) = 0;
        }
LABEL_385:
        v3[47] = v145;
        continue;
      case 0x16u:
        char v149 = 0;
        unsigned int v150 = 0;
        uint64_t v151 = 0LL;
        v3[64] |= 1u;
        while (1)
        {
          uint64_t v152 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v153 = v152 + 1;
          if (v152 == -1) {
            goto LABEL_412;
          }
          if (v153 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v154 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v152);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v153;
          v151 |= (unint64_t)(v154 & 0x7F) << v149;
          if ((v154 & 0x80) == 0) {
            goto LABEL_387;
          }
          v149 += 7;
          BOOL v11 = v150++ >= 9;
          if (v11)
          {
            LODWORD(v151) = 0;
            goto LABEL_389;
          }
        }

        *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_387:
        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v151) = 0;
        }
LABEL_389:
        v3[44] = v151;
        continue;
      case 0x17u:
        char v155 = 0;
        unsigned int v156 = 0;
        uint64_t v157 = 0LL;
        v3[64] |= 2u;
        while (1)
        {
          uint64_t v158 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v159 = v158 + 1;
          if (v158 == -1) {
            goto LABEL_412;
          }
          if (v159 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v160 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v158);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v159;
          v157 |= (unint64_t)(v160 & 0x7F) << v155;
          if ((v160 & 0x80) == 0) {
            goto LABEL_391;
          }
          v155 += 7;
          BOOL v11 = v156++ >= 9;
          if (v11)
          {
            LODWORD(v157) = 0;
            goto LABEL_393;
          }
        }

        *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_391:
        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v157) = 0;
        }
LABEL_393:
        v3[45] = v157;
        continue;
      case 0x18u:
        char v161 = 0;
        unsigned int v162 = 0;
        uint64_t v163 = 0LL;
        v3[64] |= 0x8000u;
        while (1)
        {
          uint64_t v164 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v165 = v164 + 1;
          if (v164 == -1) {
            goto LABEL_412;
          }
          if (v165 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v166 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v164);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v165;
          v163 |= (unint64_t)(v166 & 0x7F) << v161;
          if ((v166 & 0x80) == 0) {
            goto LABEL_395;
          }
          v161 += 7;
          BOOL v11 = v162++ >= 9;
          if (v11)
          {
            LODWORD(v163) = 0;
            goto LABEL_397;
          }
        }

        *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_395:
        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v163) = 0;
        }
LABEL_397:
        v3[59] = v163;
        continue;
      case 0x19u:
        char v167 = 0;
        unsigned int v168 = 0;
        uint64_t v169 = 0LL;
        v3[64] |= 0x800u;
        while (1)
        {
          uint64_t v170 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v171 = v170 + 1;
          if (v170 == -1) {
            goto LABEL_412;
          }
          if (v171 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v172 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v170);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v171;
          v169 |= (unint64_t)(v172 & 0x7F) << v167;
          if ((v172 & 0x80) == 0) {
            goto LABEL_399;
          }
          v167 += 7;
          BOOL v11 = v168++ >= 9;
          if (v11)
          {
            LODWORD(v169) = 0;
            goto LABEL_401;
          }
        }

        *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_399:
        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v169) = 0;
        }
LABEL_401:
        v3[55] = v169;
        continue;
      case 0x1Au:
        char v173 = 0;
        unsigned int v174 = 0;
        uint64_t v175 = 0LL;
        v3[64] |= 0x2000u;
        while (1)
        {
          uint64_t v176 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v177 = v176 + 1;
          if (v176 == -1) {
            goto LABEL_412;
          }
          if (v177 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v178 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v176);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v177;
          v175 |= (unint64_t)(v178 & 0x7F) << v173;
          if ((v178 & 0x80) == 0) {
            goto LABEL_403;
          }
          v173 += 7;
          BOOL v11 = v174++ >= 9;
          if (v11)
          {
            LODWORD(v175) = 0;
            goto LABEL_405;
          }
        }

        *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_403:
        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v175) = 0;
        }
LABEL_405:
        v3[57] = v175;
        continue;
      case 0x1Bu:
        char v179 = 0;
        unsigned int v180 = 0;
        uint64_t v181 = 0LL;
        v3[64] |= 0x10000u;
        while (1)
        {
          uint64_t v182 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v183 = v182 + 1;
          if (v182 == -1) {
            goto LABEL_412;
          }
          if (v183 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v184 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v182);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v183;
          v181 |= (unint64_t)(v184 & 0x7F) << v179;
          if ((v184 & 0x80) == 0) {
            goto LABEL_407;
          }
          v179 += 7;
          BOOL v11 = v180++ >= 9;
          if (v11)
          {
            LODWORD(v181) = 0;
            goto LABEL_409;
          }
        }

        *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_407:
        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v181) = 0;
        }
LABEL_409:
        v3[60] = v181;
        continue;
      default:
        uint64_t result = PBReaderSkipValueWithTag(a2);
        if ((result & 1) != 0) {
          continue;
        }
        return 0LL;
    }
  }

LABEL_47:
  PBDataWriterWriteUint32Field(v14, self->_txUnicast, 3LL);
  int v4 = v14;
  has = self->_has;
  if ((*(_BYTE *)&has & 0x80) == 0)
  {
LABEL_5:
    if ((*(_WORD *)&has & 0x4000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_49;
  }

  self->_txUnicast = v4[63];
  *(_DWORD *)&self->_has |= 0x80000u;
  char v5 = v4[64];
  if ((v5 & 0x80) == 0)
  {
LABEL_5:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_49;
  }

      __break(0x5500u);
      return result;
    }

    uint64_t result = PBReaderSkipValueWithTag(a2);
    if ((result & 1) != 0) {
      continue;
    }
    return 0LL;
  }

              sub_10010BB04(a1, a3);
LABEL_50:
              sub_10010B424(a1, a3, 0);
              return 0LL;
            }

      __break(0x5500u);
      return result;
    }

    uint64_t result = PBReaderSkipValueWithTag(a2);
    if ((result & 1) != 0) {
      continue;
    }
    return 0LL;
  }

          uint64_t v36 = *p_extendedPANIDToFind;
          if (v67 == (id)16)
          {
            if (!v36)
            {
              unint64_t v68 = 0LL;
              unint64_t v38 = 0LL;
LABEL_64:
              if (*p_borderAgentIdToFind)
              {
                unint64_t v44 = -[NSString initWithData:encoding:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithData:encoding:",  v11,  4LL);
                if (!v44)
                {
                  unsigned int v35 = (os_log_s *)v38;
                  char v57 = sub_1001768B4(1);
                  unsigned int v41 = (os_log_s *)objc_claimAutoreleasedReturnValue(v57);
                  if (os_log_type_enabled(v41, OS_LOG_TYPE_ERROR)) {
                    sub_1001A1010();
                  }
                  goto LABEL_88;
                }

                char v45 = v44;
                char v46 = objc_claimAutoreleasedReturnValue(-[ThreadBRFinder dataFromHexString:](self, "dataFromHexString:", v44));
                if (!v46)
                {
                  unsigned int v35 = (os_log_s *)v38;
                  char v58 = sub_1001768B4(1);
                  unsigned int v59 = (os_log_s *)objc_claimAutoreleasedReturnValue(v58);
                  if (os_log_type_enabled(v59, OS_LOG_TYPE_ERROR)) {
                    sub_1001A1084();
                  }

                  goto LABEL_92;
                }

                uint64_t v42 = (void *)v46;
                char v64 = v38;
                if (!-[NSData isEqualToData:](*p_borderAgentIdToFind, "isEqualToData:", v46))
                {
                  uint64_t v60 = sub_1001768B4(1);
                  uint64_t v61 = (os_log_s *)objc_claimAutoreleasedReturnValue(v60);
                  if (os_log_type_enabled(v61, OS_LOG_TYPE_ERROR)) {
                    sub_1001A10F8();
                  }

                  goto LABEL_93;
                }

                unint64_t v62 = v45;
                uint64_t v66 = v23;
              }

              else
              {
                char v64 = v38;
                uint64_t v66 = v23;
                uint64_t v42 = 0LL;
                unint64_t v62 = 0LL;
              }

LABEL_49:
  PBDataWriterWriteUint32Field(v14, self->_txErrCca, 5LL);
  int v4 = v14;
  has = self->_has;
  if ((*(_WORD *)&has & 0x400) == 0)
  {
LABEL_7:
    if ((*(_WORD *)&has & 0x1000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_51;
  }

  self->_txErrCca = v4[58];
  *(_DWORD *)&self->_has |= 0x4000u;
  char v5 = v4[64];
  if ((v5 & 0x400) == 0)
  {
LABEL_7:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_51;
  }

  *(_WORD *)(a1 + 8) = 0;
  return result;
}

      if (ferror(v10)) {
        goto LABEL_63;
      }
    }

    *(_DWORD *)std::string __p = 67109120;
    *(_DWORD *)&__p[4] = v16;
    uint64_t v18 = v17;
    uint64_t v19 = "Got unrecognized char 0x%x in NetworkRetain child process.";
    unint64_t v20 = 8;
    goto LABEL_54;
  }

        return v4;
      }

      if (LOWORD(v16.__r_.__value_.__l.__data_) != 25977 || v16.__r_.__value_.__s.__data_[2] != 115)
      {
        unint64_t v9 = &v16;
LABEL_39:
        data_low = LOWORD(v9->__r_.__value_.__l.__data_);
        unint64_t v12 = v9->__r_.__value_.__s.__data_[2];
        if (data_low != 17753 || v12 != 83) {
          goto LABEL_43;
        }
      }

      [v4 setLinkLossNbrRouterCount:uint64];
      goto LABEL_50;
    }

    p_p = (uint64_t *)__p;
LABEL_37:
    unint64_t v20 = *p_p;
    char v21 = p_p[1];
    char v22 = p_p[2];
    unsigned int v23 = *((unsigned __int8 *)p_p + 24);
    if (v20 == 0x736F6C5F6B6E696CLL && v21 == 0x68635F72626E5F73LL && v22 == 0x6E756F635F646C69LL && v23 == 116) {
      [v4 setLinkLossNbrChildCount:uint64];
    }
    goto LABEL_50;
  }

  char v5 = sub_1000160F4("com.apple.wpantund.awd", "default");
  unsigned int v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled((os_log_t)v6, OS_LOG_TYPE_ERROR)) {
    sub_100212D50();
  }
  count = 1LL;
LABEL_54:

LABEL_55:
  sub_10000D448((uint64_t)&v31);

  return count;
}
  }

  uint64_t v80 = (const __CFDictionary *)objc_claimAutoreleasedReturnValue( [*(id *)(a1 + 32) keyChainItemRepresentationForActiveDataSetRecordAddOperation]);
  uint64_t v31 = v80;
  if (!v80)
  {
    unint64_t v81 = @"Bad network parameter";
    char v82 = 4LL;
    goto LABEL_54;
  }

  if (*(_BYTE *)(a1 + 56))
  {
    [*(id *)(a1 + 40) storeActiveDataSetRecordAndSync:*(void *)(a1 + 32) completion:*(void *)(a1 + 48)];
    goto LABEL_14;
  }

  uint64_t v83 = SecItemAdd(v80, 0LL);
  if ((_DWORD)v83 == -25299)
  {
    char v84 = sub_1001768B4(1);
    unsigned int v85 = (os_log_s *)objc_claimAutoreleasedReturnValue(v84);
    if (os_log_type_enabled(v85, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__n128 buf = 136315138;
      unsigned int v106 = "-[THThreadNetworkCredentialsKeychainBackingStore storeThreadCredentialActiveDataSetRecord:waitForSync:compl"
             "etion:]_block_invoke";
      _os_log_impl( (void *)&_mh_execute_header,  v85,  OS_LOG_TYPE_DEFAULT,  "%s: Credential exists. Will update instead.",  buf,  0xCu);
    }

    uint64_t v86 = (const __CFDictionary *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) keyChainQueryForActiveDataSetRecordUpdateOperation]);
    uint64_t v87 = (const __CFDictionary *)objc_claimAutoreleasedReturnValue( [*(id *)(a1 + 32) keyChainItemRepresentationForActiveDataSetRecordUpdateOperation]);
    uint64_t v83 = SecItemUpdate(v86, v87);
  }

  if (!(_DWORD)v83)
  {
    if (!_os_feature_enabled_impl("Home", "ThreadCommissioningService")
      || ([*(id *)(a1 + 40) markAsPreferred:*(void *)(a1 + 32)] & 1) != 0)
    {
      uint64_t v61 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) computedUniqueIdentifier]);
      unint64_t v62 = *(void (**)(void))(*(void *)(a1 + 48) + 16LL);
      goto LABEL_55;
    }

    uint64_t v90 = *(void **)(a1 + 32);
    if (v90)
    {
      char v91 = (void *)objc_claimAutoreleasedReturnValue([v90 network]);
      unsigned int v92 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) borderAgent]);
      uint64_t v93 = (const __CFDictionary *)objc_claimAutoreleasedReturnValue( +[THThreadNetworkCredentialsActiveDataSetRecord keyChainQueryForDeleteActiveDataSetOperationForNetworkAndBorderAgent:borderAgent:]( &OBJC_CLASS___THThreadNetworkCredentialsActiveDataSetRecord,  "keyChainQueryForDeleteActiveDataSetOperationForNetworkAndBorderAgent:borderAgent:",  v91,  v92));

      uint64_t v94 = SecItemDelete(v93);
      unint64_t v95 = sub_1001768B4(1);
      char v96 = (os_log_s *)objc_claimAutoreleasedReturnValue(v95);
      if (os_log_type_enabled(v96, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)__n128 buf = 136315650;
        unsigned int v106 = "-[THThreadNetworkCredentialsKeychainBackingStore storeThreadCredentialActiveDataSetRecord:waitForSync:com"
               "pletion:]_block_invoke";
        uint64_t v107 = 1024;
        uint64_t v108 = 1501;
        unint64_t v109 = 1024;
        LODWORD(v110) = v94;
        _os_log_impl( (void *)&_mh_execute_header,  v96,  OS_LOG_TYPE_DEFAULT,  "%s:%d Preferred network storing failed, deleted the local record : (err=%d)",  buf,  0x18u);
      }
    }

    uint64_t v97 = sub_1001768B4(1);
    char v98 = (os_log_s *)objc_claimAutoreleasedReturnValue(v97);
    if (os_log_type_enabled(v98, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__n128 buf = 136315138;
      unsigned int v106 = "-[THThreadNetworkCredentialsKeychainBackingStore storeThreadCredentialActiveDataSetRecord:waitForSync:compl"
             "etion:]_block_invoke";
      _os_log_impl( (void *)&_mh_execute_header,  v98,  OS_LOG_TYPE_DEFAULT,  "%s: Error, Preferred network storing failure ",  buf,  0xCu);
    }

    unint64_t v81 = @"No preferred network found";
    char v82 = 10LL;
LABEL_54:
    uint64_t v61 = (void *)objc_claimAutoreleasedReturnValue(+[NSError storeError:description:](&OBJC_CLASS___NSError, "storeError:description:", v82, v81));
    unint64_t v62 = *(void (**)(void))(*(void *)(a1 + 48) + 16LL);
LABEL_55:
    v62();

    goto LABEL_14;
  }

  unint64_t v88 = sub_1001768B4(1);
  char v89 = (os_log_s *)objc_claimAutoreleasedReturnValue(v88);
  if (os_log_type_enabled(v89, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)__n128 buf = 136315650;
    unsigned int v106 = "-[THThreadNetworkCredentialsKeychainBackingStore storeThreadCredentialActiveDataSetRecord:waitForSync:complet"
           "ion:]_block_invoke";
    uint64_t v107 = 1024;
    uint64_t v108 = 1482;
    unint64_t v109 = 1024;
    LODWORD(v110) = v83;
    _os_log_impl( (void *)&_mh_execute_header,  v89,  OS_LOG_TYPE_DEFAULT,  "%s:%d Error while adding/updating the record : (err=%d)",  buf,  0x18u);
  }

  [*(id *)(a1 + 40) errorout:v83 completion:*(void *)(a1 + 48)];
LABEL_14:
}

LABEL_50:
  PBDataWriterWriteUint32Field(v14, self->_txErrAbort, 6LL);
  int v4 = v14;
  has = self->_has;
  if ((*(_WORD *)&has & 0x1000) == 0)
  {
LABEL_8:
    if ((*(_WORD *)&has & 0x200) == 0) {
      goto LABEL_9;
    }
    goto LABEL_52;
  }

  self->_txErrAbort = v4[54];
  *(_DWORD *)&self->_has |= 0x400u;
  char v5 = v4[64];
  if ((v5 & 0x1000) == 0)
  {
LABEL_8:
    if ((v5 & 0x200) == 0) {
      goto LABEL_9;
    }
    goto LABEL_52;
  }

    if (v57 <= 2u)
    {
      unint64_t v38 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v38)
      {
      }

      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        sub_1001FB53C();
      }

      sub_10000AC00(v54, "Stability");
      sub_10000AC00(v52, "Invalid State");
      sub_10000AC00(__p, "EMERG/ALERT/CRIT NCP log");
      (*((void (**)(CFDateFormatterRef *, void **, void **, void **, void, uint64_t))*a1 + 9))( a1,  v54,  v52,  __p,  0LL,  1LL);
      if (v51 < 0) {
        operator delete(__p[0]);
      }
      if (v53 < 0) {
        operator delete(v52[0]);
      }
      if (v55 < 0) {
        operator delete(v54[0]);
      }
    }

    return;
  }

  char v34 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (!v34)
  {
    if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      return;
    }
    goto LABEL_38;
  }

      char v27 = 1;
LABEL_51:
      std::ios_base::getloc((const std::ios_base *)((char *)v14 + *(void *)(*v14 - 24LL)));
      unint64_t v38 = std::locale::use_facet((const std::locale *)v79, &std::ctype<char>::id);
      char v39 = ((uint64_t (*)(const std::locale::facet *, uint64_t))v38->__vftable[2].~facet_0)(v38, 10LL);
      std::locale::~locale((std::locale *)v79);
      std::ostream::put(v14, v39);
      std::ostream::flush(v14);
      unint64_t v32 = ++v31;
      if (v31 == v66) {
        goto LABEL_9;
      }
    }

    gethostname(v79, 0x400uLL);
    char v40 = sub_1001B02E4(v14, (uint64_t)" Name:", 6LL);
    unsigned int v41 = strlen(v79);
    sub_1001B02E4(v40, (uint64_t)v79, v41);
    sub_10000AC00(v69, v79);
    *(_OWORD *)&a4->__r_.__value_.__l.__data_ = *(_OWORD *)v69;
    a4->__r_.__value_.__l.__cap_ = *(void *)&v69[16];
    if (!(_DWORD)a6) {
      goto LABEL_50;
    }
    *(_DWORD *)char v69 = 0;
    memset(&v69[8], 0, 48);
    char v70 = 0u;
    unsigned int v71 = 0u;
    uint64_t v72 = 0u;
    memset(v73, 0, sizeof(v73));
    unint64_t v74 = -1;
    std::string::operator=((std::string *)((char *)&v71 + 8), &__str);
    std::string::operator=((std::string *)v73, a4);
    unint64_t v74 = a2;
    std::string::operator=((std::string *)&v69[8], a4);
    strcpy(v78, "CANNOT DETRMINE");
    sub_10000AC00(&v76, v78);
    if (SBYTE7(v71) < 0) {
      operator delete((void *)v70);
    }
    char v70 = v76;
    *(void *)&unsigned int v71 = v77;
    sub_10000AC00(&v76, v78);
    if ((v69[55] & 0x80000000) != 0) {
      operator delete(*(void **)&v69[32]);
    }
    *(_OWORD *)&v69[32] = v76;
    *(void *)&v69[48] = v77;
    *(_DWORD *)&v73[24] = 0;
    *(void *)&uint64_t v76 = &__str;
    uint64_t v42 = sub_1001B7150(a7, (unsigned __int8 *)&__str, (uint64_t)&unk_10022BF59, (__int128 **)&v76);
    sub_1001B606C((uint64_t)(v42 + 40), (uint64_t)v69);
    if ((v73[23] & 0x80000000) != 0) {
      operator delete(*(void **)v73);
    }
    if (SHIBYTE(v72) < 0) {
      operator delete(*((void **)&v71 + 1));
    }
    if (SBYTE7(v71) < 0) {
      operator delete((void *)v70);
    }
    if ((v69[55] & 0x80000000) != 0) {
      operator delete(*(void **)&v69[32]);
    }
    if ((v69[31] & 0x80000000) == 0) {
      goto LABEL_50;
    }
    uint64_t v43 = *(void **)&v69[8];
    goto LABEL_115;
  }

  uint64_t v24 = sub_1001B02E4(v14, (uint64_t)"ERR: IP Address List information not present", 44LL);
  std::ios_base::getloc((const std::ios_base *)((char *)v24 + *(void *)(*v24 - 24LL)));
  uint64_t v25 = std::locale::use_facet((const std::locale *)v79, &std::ctype<char>::id);
  unint64_t v26 = ((uint64_t (*)(const std::locale::facet *, uint64_t))v25->__vftable[2].~facet_0)(v25, 10LL);
  std::locale::~locale((std::locale *)v79);
  std::ostream::put(v24, v26);
  std::ostream::flush(v24);
LABEL_8:
  char v27 = 0;
LABEL_9:
  if ((v27 & 1) == 0 && (_DWORD)a6)
  {
    memset(v69, 0, 24);
    convertUint16ToHexString(a2, (uint64_t)v69);
    if (v69[23] >= 0) {
      char v28 = v69;
    }
    else {
      char v28 = *(const char **)v69;
    }
    fprintf( __stderrp,  "WARN: output_ipAddrListTlv_to_file sDsnInfo has no entry possibly bec not reg to SRP proxy. Cannot determine hostn ame for Rloc16=%s\n",  v28);
    strcpy((char *)&v76, "CANNOT DETRMINE");
    *(_DWORD *)uint64_t v79 = 0;
    memset(&v79[8], 0, 48);
    uint64_t v80 = 0u;
    unint64_t v81 = 0u;
    char v82 = 0u;
    memset(__p, 0, sizeof(__p));
    char v84 = -1;
    if ((char)__str.__r_.__value_.__s.__size_ < 0)
    {
      if (__str.__r_.__value_.__l.__size_)
      {
        unsigned int v29 = (std::string *)__str.__r_.__value_.__r.__words[0];
        goto LABEL_19;
      }
    }

    else if (__str.__r_.__value_.__s.__size_)
    {
      unsigned int v29 = &__str;
LABEL_19:
      fprintf(__stderrp, "WARN Entered address for dnsInfo unresolved service=%s rloc16=%x\n", (const char *)v29, a2);
      std::string::operator=((std::string *)((char *)&v81 + 8), &__str);
    }

    sub_10000AC00(__s, (char *)&v76);
    if ((__p[23] & 0x80000000) != 0) {
      operator delete(*(void **)__p);
    }
    *(_OWORD *)std::string __p = __s[0];
    *(void *)&__p[16] = *(void *)&__s[1];
    char v84 = a2;
    sub_10000AC00(__s, (char *)&v76);
    if ((v79[31] & 0x80000000) != 0) {
      operator delete(*(void **)&v79[8]);
    }
    *(_OWORD *)&v79[8] = __s[0];
    *(void *)&v79[24] = *(void *)&__s[1];
    sub_10000AC00(__s, (char *)&v76);
    if (SBYTE7(v81) < 0) {
      operator delete((void *)v80);
    }
    uint64_t v80 = __s[0];
    *(void *)&unint64_t v81 = *(void *)&__s[1];
    sub_10000AC00(__s, (char *)&v76);
    if ((v79[55] & 0x80000000) != 0) {
      operator delete(*(void **)&v79[32]);
    }
    *(_OWORD *)&v79[32] = __s[0];
    *(void *)&v79[48] = *(void *)&__s[1];
    *(_DWORD *)&__p[24] = 0;
    *(void *)&__s[0] = &__str;
    uint64_t v30 = sub_1001B7150(a7, (unsigned __int8 *)&__str, (uint64_t)&unk_10022BF59, (__int128 **)__s);
    sub_1001B606C((uint64_t)(v30 + 40), (uint64_t)v79);
    if ((__p[23] & 0x80000000) != 0) {
      operator delete(*(void **)__p);
    }
    if (SHIBYTE(v82) < 0) {
      operator delete(*((void **)&v81 + 1));
    }
    if (SBYTE7(v81) < 0) {
      operator delete((void *)v80);
    }
    if ((v79[55] & 0x80000000) != 0) {
      operator delete(*(void **)&v79[32]);
    }
    if ((v79[31] & 0x80000000) != 0) {
      operator delete(*(void **)&v79[8]);
    }
    if ((v69[23] & 0x80000000) != 0) {
      operator delete(*(void **)v69);
    }
  }

  if (v67 < 0) {
    operator delete(v65);
  }

  return v34;
}

LABEL_51:
  PBDataWriterWriteUint32Field(v14, self->_txErrBusyChannel, 7LL);
  int v4 = v14;
  has = self->_has;
  if ((*(_WORD *)&has & 0x200) == 0)
  {
LABEL_9:
    if ((*(_DWORD *)&has & 0x20000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
}

  self->_txErrBusyChannel = v4[56];
  *(_DWORD *)&self->_has |= 0x1000u;
  char v5 = v4[64];
  if ((v5 & 0x200) == 0)
  {
LABEL_9:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }

        LODWORD(v13) = *(_DWORD *)(a1 + 128);
        if ((_DWORD)v13)
        {
          unint64_t v20 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (v20)
          {
            goto LABEL_163;
          }

          if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
            goto LABEL_163;
          }
          goto LABEL_181;
        }

        sub_100034C60("Ciib", &v67.__sig, 0x80u);
        sub_100006EFC(a1 + 104, (__n128 *)&v67);
        __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v67;
        sub_100006F6C((void ***)&__p);
        *(_WORD *)(a1 + 98) = 0;
        *(_WORD *)(a1 + 8) = 130;
        goto LABEL_20;
      }

          std::string::append(&v31, "'");
          sub_100066088(a2, (const void **)&v31.__r_.__value_.__l.__data_, (uint64_t)__p);
          if (v30 >= 0) {
            char v22 = __p;
          }
          else {
            char v22 = (void **)__p[0];
          }
          unsigned int v23 = (unsigned __int16)system((const char *)v22) >> 8;
          if (v30 < 0) {
            operator delete(__p[0]);
          }
          fputc(v23, v14);
          fflush(v14);
        }
      }

      _exit(1);
    }

    if (waitpid(v5, &v33, 0) < 0)
    {
      uint64_t v8 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v8)
      {
        unint64_t v9 = v8;
      }

      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        sub_1001FB53C();
      }
    }

    if (BYTE1(v33))
    {
      unsigned int v6 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v6)
      {
        uint64_t v7 = v6;
        if (sub_10015A058(3))
        {
          if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
            sub_10020FB7C((uint64_t)&v33);
          }
        }
      }

      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        sub_1001FB53C();
      }

      close(*v4);
      *int v4 = -1;
      char v10 = BYTE1(v33);
      *__error() = v10;
    }
  }

                  sub_10010B738(a1, a3, 0);
                  return 0LL;
                }

                goto LABEL_48;
              }

  unsigned int v29 = sub_1000160F4("com.apple.wpantund.tnm", "default");
  uint64_t v30 = (os_log_s *)objc_claimAutoreleasedReturnValue(v29);
  if (os_log_type_enabled(v30, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)__n128 buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_INFO, " Networks are same ", buf, 2u);
  }

  char v27 = 1;
LABEL_46:

  return v27;
}

LABEL_52:
  PBDataWriterWriteUint32Field(v14, self->_txDirectMaxRetryExpiry, 8LL);
  int v4 = v14;
  if ((*(_DWORD *)&self->_has & 0x20000) != 0)
  {
LABEL_10:
    PBDataWriterWriteUint32Field(v14, self->_txIndirectMaxRetryExpiry, 9LL);
    int v4 = v14;
  }

  self->_txDirectMaxRetryExpiry = v4[53];
  *(_DWORD *)&self->_has |= 0x200u;
  if ((v4[64] & 0x20000) != 0)
  {
LABEL_10:
    self->_txIndirectMaxRetryExpiry = v4[61];
    *(_DWORD *)&self->_has |= 0x20000u;
  }

    __break(0x5515u);
    return;
  }

  if (!*(_BYTE *)(a1 + 1738))
  {
    *(_BYTE *)(a1 + 1738) = 1;
    unint64_t v20 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v20)
    {
      char v21 = v20;
      if (sub_10015A058(6) && os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)__n128 buf = 134217984;
        *(void *)&uint8_t buf[4] = v2;
        _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_INFO, "NCP is now BUSY at %lldms.", buf, 0xCu);
      }
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }

    sub_10000AC00(buf, "Daemon:ReadyForHostSleep");
    uint64_t v24 = operator new(0x10uLL);
    *(void *)uint64_t v24 = &off_1002AEA00;
    v24[8] = 0;
    unint64_t v32 = v24;
    (*(void (**)(uint64_t, _BYTE *, _BYTE **))(*(void *)a1 + 360LL))(a1, buf, &v32);
    goto LABEL_46;
  }

  BOOL v11 = *(void *)(a1 + 1744);
  if (v11)
  {
    uint64_t v7 = __OFSUB__(v2, v11);
    unint64_t v12 = v2 - v11;
    if (v7) {
      goto LABEL_52;
    }
    if (v12 <= 0xC7) {
      return;
    }
    *(_BYTE *)(a1 + 1738) = v5 ^ 1;
    uint64_t v13 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v13)
    {
      int v14 = v13;
      int v15 = *(void *)(a1 + 1744);
      uint64_t v7 = __OFSUB__(v2, v15);
      char v16 = v2 - v15;
      if (v7) {
        goto LABEL_52;
      }
      *(_DWORD *)__n128 buf = 134218240;
      *(void *)&uint8_t buf[4] = v2;
      char v34 = 2048;
      unsigned int v35 = v16;
      unsigned int v17 = "NCP is no longer busy, host sleep is permitted at %lldms. (Was busy for %lldms)";
      uint64_t v18 = v14;
      uint64_t v19 = 22;
      goto LABEL_27;
    }

    if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      goto LABEL_45;
    }
LABEL_44:
    sub_1001FB53C();
    goto LABEL_45;
  }

  *(_BYTE *)(a1 + 1738) = v5 ^ 1;
  char v22 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (!v22)
  {
    if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      goto LABEL_45;
    }
    goto LABEL_44;
  }

  unsigned int v23 = v22;
  *(_WORD *)__n128 buf = 0;
  unsigned int v17 = "NCP is no longer busy, host sleep is permitted.";
  uint64_t v18 = v23;
  uint64_t v19 = 2;
LABEL_27:
  _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_INFO, v17, buf, v19);
LABEL_45:
  sub_10000AC00(buf, "Daemon:ReadyForHostSleep");
  uint64_t v25 = operator new(0x10uLL);
  *(void *)uint64_t v25 = &off_1002AEA00;
  v25[8] = 1;
  unint64_t v32 = v25;
  (*(void (**)(uint64_t, _BYTE *, _BYTE **))(*(void *)a1 + 360LL))(a1, buf, &v32);
LABEL_46:
  if (v32) {
    (*(void (**)(_BYTE *))(*(void *)v32 + 8LL))(v32);
  }
  if (v36 < 0) {
    operator delete(*(void **)buf);
  }
  *(void *)(a1 + 1744) = v2;
}

                    sub_10010B8CC(a1, a3, 0);
                    return 0LL;
                  }

      if (count == ++v8)
      {
        count = 0LL;
        goto LABEL_54;
      }
    }

    if (v29 != 25)
    {
      if (v29 != 26
        || (*(void *)__p == 0x736F6C5F6B6E696CLL ? (char v16 = *((void *)__p + 1) == 0x6F725F72626E5F73LL) : (char v16 = 0),
            v16 ? (unsigned int v17 = *((void *)__p + 2) == 0x756F635F72657475LL) : (unsigned int v17 = 0),
            v17 ? (uint64_t v18 = *((unsigned __int16 *)__p + 12) == 29806) : (uint64_t v18 = 0),
            !v18))
      {
LABEL_50:
        if (SHIBYTE(v30) < 0) {
          operator delete(__p);
        }
        goto LABEL_52;
      }

    goto LABEL_31;
  }

  uint64_t v24 = sub_1000160F4("com.apple.wpantund.tdm", "default");
  uint64_t v25 = (os_log_s *)objc_claimAutoreleasedReturnValue(v24);
  if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
    sub_1001B47B0((uint64_t *)&a3->var0.var0.var0.var1, (uint64_t *)&v143, v25);
  }

  unint64_t v26 = 1LL;
LABEL_32:
  char v119 = sub_1000EA704(v8);
  unsigned int v120 = (void *)objc_claimAutoreleasedReturnValue(v119);
  uint64_t v121 = v120;
  if ((v143.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    uint64_t v122 = &v143;
  }
  else {
    uint64_t v122 = (std::string *)v143.__r_.__value_.__r.__words[0];
  }
  xpc_dictionary_set_string(v120, "method", (const char *)v122);

  unint64_t v123 = sub_1000EA704(v8);
  char v124 = (void *)objc_claimAutoreleasedReturnValue(v123);
  char v125 = v124;
  if (v142 >= 0) {
    unsigned int v126 = __p;
  }
  else {
    unsigned int v126 = (void **)__p[0];
  }
  xpc_dictionary_set_string(v124, "property_name", (const char *)v126);

  uint64_t v127 = sub_1000EA704(v8);
  uint64_t v128 = (void *)objc_claimAutoreleasedReturnValue(v127);
  xpc_dictionary_set_int64(v128, "ret", v26);

  if (v142 < 0) {
    operator delete(__p[0]);
  }
  return v129;
}

LABEL_56:
  PBDataWriterWriteUint32Field(v14, self->_cslTxErrCca, 19LL);
  int v4 = v14;
  uint64_t v13 = self->_has;
  if ((*(_BYTE *)&v13 & 4) == 0)
  {
LABEL_36:
    if ((*(_BYTE *)&v13 & 8) == 0) {
      goto LABEL_37;
    }
    goto LABEL_58;
  }

  v4[58] = self->_txErrCca;
  v4[64] |= 0x4000u;
  has = self->_has;
  if ((*(_WORD *)&has & 0x400) == 0)
  {
LABEL_7:
    if ((*(_WORD *)&has & 0x1000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_58;
  }

  self->_cslTxErrCca = v28[48];
  *(_DWORD *)&self->_has |= 0x10u;
  char v27 = v28[64];
  if ((v27 & 4) == 0)
  {
LABEL_36:
    if ((v27 & 8) == 0) {
      goto LABEL_37;
    }
    goto LABEL_58;
  }

      __break(0x5500u);
      goto LABEL_57;
    }

  sub_10000AC00(&v58, "Joiner: not a valid cmd");
LABEL_57:
  *(_DWORD *)a3 = 10;
  *(__n128 *)(a3 + 8) = v58;
  *(void *)(a3 + 24) = v59;
LABEL_126:
  if ((buf[23] & 0x80000000) != 0) {
    operator delete(*(void **)buf);
  }
LABEL_128:
  if (v9) {
    dispatch_release(v9);
  }
  if (v7) {
    _Block_release(v7);
  }
  if (v61) {
    dispatch_release(v61);
  }
  if (v6) {
    dispatch_release(v6);
  }
  sub_10000D448((uint64_t)&v64);
  _Block_object_dispose(&v66, 8);
}
      }

      ++v10;
      uint64_t v3 = v39;
      if (v10 == count) {
        goto LABEL_63;
      }
    }

    if (!v16) {
      goto LABEL_67;
    }
    std::string::basic_string(&__str, &buf, v15 + 1, v16 - 1, (std::allocator<char> *)&v44);
    uint64_t v30 = std::stoi(&__str, 0LL, 10);
    if ((v30 & 0xF8u) <= 0x17)
    {
      uint64_t v31 = v30;
      if (v30 >= 0x18u) {
        goto LABEL_68;
      }
      unint64_t v32 = v47;
      goto LABEL_55;
    }

    goto LABEL_56;
  }

  unsigned int v6 = 0LL;
LABEL_63:
  for (uint64_t i = 0LL; i != 96; i += 4LL)
  {
    unsigned int v35 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)((char *)v47 + i)));
    [v42 addObject:v35];

    uint64_t v36 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)((char *)v46 + i)));
    [v41 addObject:v36];
  }

  [v3 setObject:v41 forKey:@"child_nodes_count"];
  [v3 setObject:v42 forKey:@"router_nodes_count"];
  uint64_t v7 = 0LL;
LABEL_66:

  return v7;
}

                          std::string::basic_string( &v22,  v4,  0x12uLL,  0xFFFFFFFFFFFFFFFFLL,  (std::allocator<char> *)&v24);
                          sub_1001095A0(a1 + 6800, a3, &v22);
                          if ((char)v22.__r_.__value_.__s.__size_ < 0)
                          {
                            uint64_t v19 = (void *)v22.__r_.__value_.__r.__words[0];
                            goto LABEL_58;
                          }

                          return 0LL;
                        }

      unint64_t v26 = __p;
LABEL_121:
      uint64_t v37 = *(void *)v26;
      unint64_t v38 = *((unsigned __int16 *)v26 + 4);
      if (v37 != 0x4D79616C65447854LL || v38 != 30817)
      {
LABEL_125:
        if (sub_1000B55AC(__p, "TxDelayAvg"))
        {
          objc_msgSend(v4, "setTxDelayAvg:", sub_1000BE984(4, uint64));
        }

        else if (sub_1000B55AC(__p, "TxDelay90Perc"))
        {
          objc_msgSend(v4, "setTxDelay90perc:", sub_1000BE984(4, uint64));
        }

        else if (sub_1000B55AC(__p, "ListeningTime"))
        {
          objc_msgSend(v4, "setListeningTime:", sub_1000BE984(4, uint64));
        }

        else if (sub_1000B55AC(__p, "ReceivingTime"))
        {
          objc_msgSend(v4, "setReceivingTime:", sub_1000BE984(4, uint64));
        }

        else if (sub_1000B55AC(__p, "TrasmittingTime"))
        {
          objc_msgSend(v4, "setTransmittingTime:", sub_1000BE984(4, uint64));
        }

        goto LABEL_139;
      }

      objc_msgSend(v4, "setTxDelayMax:", sub_1000BE984(4, uint64));
LABEL_139:
      if (count == ++v10)
      {
        count = 0LL;
        goto LABEL_143;
      }
    }

    if (v42 > 0xFu)
    {
      if (v42 == 16)
      {
        if (*(void *)__p == 0x746E497972746552LL && *(void *)&__p[8] == 0x6E694D6C61767265LL) {
          goto LABEL_97;
        }
        if (*(void *)__p == 0x746E497972746552LL && *(void *)&__p[8] == 0x78614D6C61767265LL) {
          goto LABEL_98;
        }
LABEL_92:
        if (*(void *)__p == 0x746E497972746552LL && *(void *)&__p[8] == 0x6776416C61767265LL) {
          goto LABEL_138;
        }
      }

      else
      {
        if (v42 != 19) {
          goto LABEL_125;
        }
        if (*(void *)__p == 0x746E497972746552LL
          && *(void *)&__p[8] == 0x5030396C61767265LL
          && *(void *)&__p[11] == 0x6372655030396C61LL)
        {
LABEL_132:
          objc_msgSend(v4, "setRetryInterval90perc:", sub_1000BE984(4, uint64));
          goto LABEL_139;
        }
      }
    }

    else if (v42 == 9)
    {
      if (*(void *)__p != 0x61566E694D747452LL || __p[8] != 108)
      {
        if (*(void *)__p != 0x615678614D747452LL || __p[8] != 108)
        {
          if (*(void *)__p != 0x6156677641747452LL || __p[8] != 108) {
            goto LABEL_41;
          }
LABEL_73:
          objc_msgSend(v4, "setRttAvgVal:", sub_1000BE984(4, uint64));
          goto LABEL_139;
        }
      }

      ++v11;
      int v4 = v38;
      if (v11 == count) {
        goto LABEL_63;
      }
    }

    if (!v17) {
      goto LABEL_69;
    }
    std::string::basic_string(&__str, &buf, v16 + 1, v17 - 1, (std::allocator<char> *)&v41);
    uint64_t v31 = std::stoi(&__str, 0LL, 10);
    if ((v31 & 0xF8u) <= 0x17)
    {
      unint64_t v32 = v31;
      if (v31 >= 0x18u) {
        goto LABEL_70;
      }
      char v33 = v44;
      goto LABEL_55;
    }

    goto LABEL_56;
  }

  uint64_t v7 = 0LL;
LABEL_63:
  unsigned int v35 = 0LL;
  while (!*((_DWORD *)v44 + v35))
  {
    if (++v35 == 24)
    {
      unsigned int v35 = 0LL;
      break;
    }
  }

  [v4 setChildNodesCount:*((unsigned int *)v43 + v35)];
  [v4 setRouterNodesCount:*((unsigned int *)v44 + v35)];
  uint64_t v8 = 0LL;
LABEL_68:

  return v8;
}

      sub_10016E988(a2);
      std::string::append(a2, &v2[v7], v15);
      goto LABEL_57;
    }

    if (v15 != 1 || *v14 != 46) {
      goto LABEL_56;
    }
    if (v8 == v4) {
      break;
    }
LABEL_11:
    if (v8 < v4)
    {
      while (v2[v8] == 47)
      {
        if (++v8 >= v4) {
          goto LABEL_59;
        }
      }
    }

    uint64_t v7 = v8;
  }

  while (v8 != v4);
LABEL_59:
  uint64_t v25 = a2->__r_.__value_.__s.__size_;
  unint64_t v26 = a2->__r_.__value_.__s.__size_;
  if ((char)a2->__r_.__value_.__s.__size_ < 0)
  {
    char v27 = a2->__r_.__value_.__l.__size_;
    if (!v27) {
      goto LABEL_78;
    }
    if (v27 == 1) {
      goto LABEL_77;
    }
LABEL_65:
    char v28 = v27 - 1;
    if ((v26 & 0x80) != 0)
    {
      if (*(_BYTE *)(a2->__r_.__value_.__r.__words[0] + v28) != 46) {
        goto LABEL_77;
      }
      unsigned int v29 = a2->__r_.__value_.__l.__size_;
    }

    else
    {
      if (a2->__r_.__value_.__s.__data_[v28] != 46) {
        goto LABEL_77;
      }
      unsigned int v29 = a2->__r_.__value_.__s.__size_;
    }

    uint64_t v30 = v29 - 2;
    if ((v26 & 0x80) != 0)
    {
      uint64_t v31 = (std::string *)a2->__r_.__value_.__r.__words[0];
      if (*(_BYTE *)(a2->__r_.__value_.__r.__words[0] + v30) != 46) {
        goto LABEL_77;
      }
      uint64_t v25 = a2->__r_.__value_.__l.__size_;
      if (v25 == 2) {
        goto LABEL_78;
      }
    }

    else
    {
      if (a2->__r_.__value_.__s.__data_[v30] != 46) {
        goto LABEL_77;
      }
      if (v26 == 2) {
        goto LABEL_78;
      }
      uint64_t v31 = a2;
    }

    if (v31->__r_.__value_.__s.__data_[v25 - 3] != 47) {
      goto LABEL_77;
    }
  }

  else if (a2->__r_.__value_.__s.__size_)
  {
    if (v26 != 1)
    {
      char v27 = a2->__r_.__value_.__s.__size_;
      goto LABEL_65;
    }

LABEL_57:
  PBDataWriterWriteUint32Field(v14, self->_cslTxErrAbort, 20LL);
  int v4 = v14;
  uint64_t v13 = self->_has;
  if ((*(_BYTE *)&v13 & 8) == 0)
  {
LABEL_37:
    if ((*(_BYTE *)&v13 & 1) == 0) {
      goto LABEL_38;
    }
    goto LABEL_59;
  }

  v4[54] = self->_txErrAbort;
  v4[64] |= 0x400u;
  has = self->_has;
  if ((*(_WORD *)&has & 0x1000) == 0)
  {
LABEL_8:
    if ((*(_WORD *)&has & 0x200) == 0) {
      goto LABEL_9;
    }
LABEL_59:
    v4[53] = self->_txDirectMaxRetryExpiry;
    v4[64] |= 0x200u;
    if ((*(_DWORD *)&self->_has & 0x20000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }

  self->_cslTxErrAbort = v28[46];
  *(_DWORD *)&self->_has |= 4u;
  char v27 = v28[64];
  if ((v27 & 8) == 0)
  {
LABEL_37:
    if ((v27 & 1) == 0) {
      goto LABEL_38;
    }
    goto LABEL_59;
  }

        std::string::append(&v66, "::");
      }
    }
  }

  if ([v1 hasSCntrsReachability])
  {
    std::string::append(&v66, "LinkLossNbrChildCount=");
    uint64_t v61 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsReachability]);
    std::to_string(&v67, [v61 linkLossNbrChildCount]);
    sub_10000D650(&v66, (const std::string::value_type *)&v67);

    std::string::append(&v66, "::");
    std::string::append(&v66, "LinkLossNbrRouterCount=");
    unint64_t v62 = (void *)objc_claimAutoreleasedReturnValue([v1 sCntrsReachability]);
    std::to_string(&v67, [v62 linkLossNbrRouterCount]);
    sub_10000D650(&v66, (const std::string::value_type *)&v67);
  }

  char v63 = sub_1000160F4("com.apple.wpantund.awd", "default");
  char v64 = (os_log_s *)objc_claimAutoreleasedReturnValue(v63);
  if (os_log_type_enabled(v64, OS_LOG_TYPE_INFO))
  {
    unsigned int v65 = &v66;
    if ((v66.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      unsigned int v65 = (std::string *)v66.__r_.__value_.__r.__words[0];
    }
    LODWORD(v67.__r_.__value_.__l.__data_) = 136315138;
    *(std::string::size_type *)((char *)v67.__r_.__value_.__r.__words + 4) = (std::string::size_type)v65;
    _os_log_impl((void *)&_mh_execute_header, v64, OS_LOG_TYPE_INFO, "AWDMetricsLogger : %s", (uint8_t *)&v67, 0xCu);
  }
}

LABEL_58:
  PBDataWriterWriteUint32Field(v14, self->_cslTxErrBusyChannel, 21LL);
  int v4 = v14;
  uint64_t v13 = self->_has;
  if ((*(_BYTE *)&v13 & 1) == 0)
  {
LABEL_38:
    if ((*(_BYTE *)&v13 & 2) == 0) {
      goto LABEL_39;
    }
    goto LABEL_60;
  }

  v4[56] = self->_txErrBusyChannel;
  v4[64] |= 0x1000u;
  has = self->_has;
  if ((*(_WORD *)&has & 0x200) != 0) {
    goto LABEL_59;
  }
LABEL_9:
  if ((*(_DWORD *)&has & 0x20000) != 0)
  {
LABEL_10:
    v4[61] = self->_txIndirectMaxRetryExpiry;
    v4[64] |= 0x20000u;
  }

  self->_cslTxErrBusyChannel = v28[47];
  *(_DWORD *)&self->_has |= 8u;
  char v27 = v28[64];
  if ((v27 & 1) == 0)
  {
LABEL_38:
    if ((v27 & 2) == 0) {
      goto LABEL_39;
    }
    goto LABEL_60;
  }

    uint64_t v13 = *(_DWORD *)(a1 + 128);
    if (v13)
    {
      char v28 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v28)
      {
        unsigned int v29 = v28;
        goto LABEL_103;
      }

      if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        goto LABEL_103;
      }
      goto LABEL_117;
    }

    sub_100159FC0(a1, 30.0);
    *(_WORD *)(a1 + 8) = 125;
LABEL_65:
    uint64_t v30 = sub_1000D8DE8(*(void *)(a1 + 56));
    if (sub_1000B50E8(v30))
    {
      sub_10015A00C(a1);
      sub_100159FC0(a1, 30.0);
      *(_WORD *)(a1 + 8) = 133;
      goto LABEL_67;
    }

    if (sub_100159F84(a1)) {
      return 0LL;
    }
    sub_10015A00C(a1);
    uint64_t v36 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v36)
    {
      uint64_t v37 = v36;
      goto LABEL_103;
    }

    if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      goto LABEL_103;
    }
LABEL_117:
    sub_1001FB53C();
    goto LABEL_103;
  }

  if (v11 == 100) {
    goto LABEL_50;
  }
  if (v11 == 106)
  {
LABEL_13:
    uint64_t v13 = *(_DWORD *)(a1 + 128);
    if (v13)
    {
      int v14 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v14)
      {
        int v15 = v14;
        goto LABEL_103;
      }

      if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        goto LABEL_103;
      }
      goto LABEL_117;
    }

    __n128 buf = 0uLL;
    uint64_t v42 = 0LL;
    sub_100006EFC(*(void *)(a1 + 56) + 73720LL, &buf);
    p___n128 buf = &buf;
    sub_100006F6C((void ***)&p_buf);
    *(_DWORD *)(*(void *)(a1 + 56) + 73744LL) = 0;
    sub_100034C60("Ci", (uint64_t *)&buf, 0x80u);
    sub_100006EFC(a1 + 104, &buf);
    p___n128 buf = &buf;
    sub_100006F6C((void ***)&p_buf);
    *(_WORD *)(a1 + 98) = 0;
    *(_WORD *)(a1 + 8) = 116;
    goto LABEL_58;
  }

LABEL_60:
  PBDataWriterWriteUint32Field(v14, self->_cslLossOfSyncDueToMaxRetx, 23LL);
  int v4 = v14;
  uint64_t v13 = self->_has;
  if ((*(_WORD *)&v13 & 0x8000) == 0)
  {
LABEL_40:
    if ((*(_WORD *)&v13 & 0x800) == 0) {
      goto LABEL_41;
    }
    goto LABEL_62;
  }

  self->_cslLossOfSyncDueToMaxRetx = v28[45];
  *(_DWORD *)&self->_has |= 2u;
  char v27 = v28[64];
  if ((v27 & 0x8000) == 0)
  {
LABEL_40:
    if ((v27 & 0x800) == 0) {
      goto LABEL_41;
    }
    goto LABEL_62;
  }

  return v10;
}

            sub_10010D2EC(*(unsigned int *)(v6 + 16), &v31);
            unsigned int v23 = (char *)operator new(0x20uLL);
            *(void *)unsigned int v23 = &off_1002AE030;
            *(std::string *)(v23 + 8) = v31;
            memset(&v31, 0, sizeof(v31));
            v30.__r_.__value_.__r.__words[0] = (std::string::size_type)v23;
            sub_10003446C(a3);
            goto LABEL_54;
          }

  BOOL v11 = v6;

  return v11;
}

LABEL_62:
  PBDataWriterWriteUint32Field(v14, self->_txErrAbortPercentage, 25LL);
  int v4 = v14;
  uint64_t v13 = self->_has;
  if ((*(_WORD *)&v13 & 0x2000) != 0) {
    goto LABEL_63;
  }
LABEL_42:
  if ((*(_DWORD *)&v13 & 0x10000) != 0)
  {
LABEL_43:
    PBDataWriterWriteUint32Field(v14, self->_txErrPercentage, 27LL);
    int v4 = v14;
  }

  self->_txErrAbortPercentage = v28[55];
  *(_DWORD *)&self->_has |= 0x800u;
  char v27 = v28[64];
  if ((v27 & 0x2000) != 0) {
    goto LABEL_63;
  }
LABEL_42:
  if ((v27 & 0x10000) != 0)
  {
LABEL_43:
    self->_txErrPercentage = v28[60];
    *(_DWORD *)&self->_has |= 0x10000u;
  }

            LODWORD(v61) = sub_1000BE984(3, uint64);
            break;
          case 11:
            goto LABEL_88;
          case 18:
            if ((void)buf != 0x705F7070615F7874LL || *((void *)&buf + 1) != 0x65636375735F746BLL || v63 != 29555)
            {
              if ((void)buf != 0x705F7070615F7874LL || *((void *)&buf + 1) != 0x756C6961665F746BLL || v63 != 25970) {
                break;
              }
LABEL_118:
              HIDWORD(v59) = sub_1000BE984(3, uint64);
              break;
            }

      uint64_t v24 = 2;
      goto LABEL_51;
    }

    uint64_t v24 = 0;
    goto LABEL_51;
  }

  unint64_t v9 = (const char *)a2->__r_.__value_.__r.__words[0];
  if (!strcasecmp(a2->__r_.__value_.__l.__data_, "Stat:AutoLog:State")) {
    goto LABEL_20;
  }
  if (!strcasecmp(v9, "Stat:AutoLog:Period")) {
    goto LABEL_29;
  }
  if (!strcasecmp(v9, "Stat:AutoLog:LogLevel")) {
    goto LABEL_32;
  }
  if (!strcasecmp(v9, "Stat:UserRequest:LogLevel")) {
    goto LABEL_13;
  }
LABEL_6:
  if (strcasecmp(v9, "Stat:LinkQuality:Period"))
  {
    v29.__r_.__value_.__r.__words[0] = (std::string::size_type)&v29;
    v29.__r_.__value_.__l.__size_ = (std::string::size_type)&v29;
    v29.__r_.__value_.__l.__cap_ = 0LL;
    if (!sub_10010C5B0(a1, a2, (uint64_t *)&v29))
    {
      for (uint64_t i = (std::string *)v29.__r_.__value_.__l.__size_; i != &v29; uint64_t i = (std::string *)i->__r_.__value_.__l.__size_)
      {
        char v27 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v27)
        {
          if (sub_10015A058(*(_DWORD *)(v8 + 16)))
          {
            switch(*(_DWORD *)(v8 + 16))
            {
              case 0:
              case 1:
              case 2:
                if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
                  goto LABEL_68;
                }
                break;
              case 3:
              case 4:
                if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR)) {
LABEL_68:
                }
                  sub_100210404();
                break;
              case 5:
              case 6:
                if (os_log_type_enabled(v27, OS_LOG_TYPE_INFO))
                {
                  char v28 = &i->__r_.__value_.__s.__data_[16];
                  if (i[1].__r_.__value_.__s.__data_[15] < 0) {
                    char v28 = *(const char **)v28;
                  }
                  *(_DWORD *)__n128 buf = 136315138;
                  uint64_t v31 = v28;
                  _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_INFO, "Stat: %s", buf, 0xCu);
                }

                break;
              case 7:
                if (os_log_type_enabled(v27, OS_LOG_TYPE_DEBUG)) {
                  sub_1002103C8();
                }
                break;
              default:
                continue;
            }
          }
        }

        else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)__n128 buf = 136315394;
          uint64_t v31 = "com.apple.wpantund.ncp";
          unint64_t v32 = 2080;
          char v33 = "default";
          _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "Logging Module is not defined for SubSystem: %s, Category: %s",  buf,  0x16u);
        }
      }
    }

    sub_10000C0E8(&v29);
    return sub_100006FF8(a4);
  }

  uint64_t result = sub_1001472F4(a3);
  uint64_t v25 = 1000LL * result;
  if (((unsigned __int128)result * 1000) >> 64 == v25 >> 63)
  {
    sub_10010DB20(a1, v25);
    return sub_100006FF8(a4);
  }

  char v10 = v3;

  return v10;
}
}

LABEL_55:
  v4[51] = self->_txBroadcast;
  v4[64] |= 0x80u;
  has = self->_has;
  if ((*(_WORD *)&has & 0x4000) == 0)
  {
LABEL_6:
    if ((*(_WORD *)&has & 0x400) == 0) {
      goto LABEL_7;
    }
    goto LABEL_57;
  }

  unsigned int v23 = 1LL;
LABEL_56:
  if (SHIBYTE(v32) < 0) {
    operator delete(v31[0]);
  }
  __p[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v33;
  sub_100006F6C((void ***)__p);
  sub_10000C0E8(v40);
  return v23;
}

  while (1)
  {
    unint64_t v26 = *v17;
    if (v26 != 46) {
      break;
    }
    ++v17;
  }

  if (*v17 && v26 != 41)
  {
    if (v19) {
      uint64_t result = 0LL;
    }
    else {
      uint64_t result = 15LL;
    }
  }

  else
  {
    uint64_t result = 15LL;
  }

  char v27 = *(unsigned __int8 *)(a1 + 24);
  *(void *)a1 = v20;
  *(_DWORD *)(a1 + 8) = v19;
  if (v27 != 65)
  {
    *(_DWORD *)(a1 + 12) = v9;
    *(void *)(a1 + 16) = v17;
    *(void *)(a1 + 24) = v10;
  }

  return result;
}

    sub_10016E988(a2);
    std::string::append(a2, &v2[v7], v14);
LABEL_56:
    char v16 = 0;
LABEL_57:
    v7 += v14;
    if (v7 == v4) {
      break;
    }
    if (v7 < v4)
    {
      while (v2[v7] == 47)
      {
        if (++v7 >= v4) {
          goto LABEL_61;
        }
      }
    }

    if (v7 == v4) {
      goto LABEL_61;
    }
  }

  uint64_t v25 = a2->__r_.__value_.__s.__size_;
  if ((v25 & 0x80u) != 0LL) {
    uint64_t v25 = a2->__r_.__value_.__l.__size_;
  }
  if (((v25 != 0) & ~v16) == 0)
  {
LABEL_61:
    sub_10016E988(a2);
    std::string::push_back(a2, 46);
  }

      ++v12;
    }

    while (v12 != v11);
  }

  if (!-[os_log_s count](v8, "count")) {
    goto LABEL_69;
  }
  uint64_t v61 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](&OBJC_CLASS___NSSet, "setWithArray:", v8));
LABEL_70:

  return v61;
}

LABEL_63:
  v28[48] = self->_cslTxErrCca;
  v28[64] |= 0x10u;
  char v27 = self->_has;
  if ((*(_BYTE *)&v27 & 4) == 0)
  {
LABEL_43:
    if ((*(_BYTE *)&v27 & 8) == 0) {
      goto LABEL_44;
    }
    goto LABEL_65;
  }

    unsigned int v35 = 1LL;
    goto LABEL_64;
  }

              HIDWORD(v60) = sub_1000BE984(3, uint64);
              break;
            }

  v5[8] = self->_receivedEnergyEvents;
  *((void *)v5 + 31) |= 0x40uLL;
  if ((*(void *)&self->_has & 0x100) != 0)
  {
LABEL_5:
    v5[10] = self->_receivedPreambles;
    *((void *)v5 + 31) |= 0x100uLL;
  }

    ++v11;
  }

  while (count != v11);
  *(void *)&char v40 = __PAIR64__(v26, HIDWORD(v26));
  HIDWORD(v39) = v27;
  LODWORD(v39) = v30;
  *(void *)((char *)&v39 + 4) = __PAIR64__(v28, v29);
  *((void *)&v38 + 1) = __PAIR64__(v31, v32);
  *(void *)&unint64_t v38 = v33;
  *((void *)&v40 + 1) = __PAIR64__(v34, v35);
LABEL_68:
  for (uint64_t i = 0LL; i != 48; i += 4LL)
  {
    uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "sCntrsMacTx", v26));
    [v24 addTxCcaEnergyDetectedHistogram:*(unsigned int *)((char *)&v38 + i)];
  }

  uint64_t v7 = 0LL;
LABEL_71:

  return v7;
}

LABEL_64:
  v28[46] = self->_cslTxErrAbort;
  v28[64] |= 4u;
  char v27 = self->_has;
  if ((*(_BYTE *)&v27 & 8) == 0)
  {
LABEL_44:
    if ((*(_BYTE *)&v27 & 1) == 0) {
      goto LABEL_45;
    }
    goto LABEL_66;
  }

          unsigned int v53 = (_WORD *)((char *)v53 + v55);
          if (++v52 == 16)
          {
            char v58 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
            if (v58)
            {
              if (sub_10015A058(6) && os_log_type_enabled(v58, OS_LOG_TYPE_INFO))
              {
                unsigned int v59 = &v71;
                if ((v71.__r_.__value_.__s.__size_ & 0x80u) != 0) {
                  unsigned int v59 = (std::string *)v71.__r_.__value_.__r.__words[0];
                }
                LODWORD(buf.__r_.__value_.__l.__data_) = 136315138;
                *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v59;
                _os_log_impl( (void *)&_mh_execute_header,  v58,  OS_LOG_TYPE_INFO,  "Structure string : %s",  (uint8_t *)&buf,  0xCu);
              }
            }

            else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
            {
              sub_1001FB53C();
            }

            sub_1000200A0(a3, &v71);
            uint64_t v67 = 0LL;
            goto LABEL_112;
          }
        }

        char v64 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v64)
        {
          goto LABEL_111;
        }

        if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          goto LABEL_111;
        }
      }

      else
      {
        while (1)
        {
          char v46 = spinel_datatype_unpack(v73, v72, "c", v41, v42, v43, v44, v45, (uint64_t)&v69);
          if (v46 <= 0) {
            break;
          }
          if (v72 < v46)
          {
            char v63 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
            if (v63)
            {
              goto LABEL_111;
            }

            if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
              goto LABEL_111;
            }
            goto LABEL_110;
          }

          uint64_t v73 = (_WORD *)((char *)v73 + v46);
          v72 -= v46;
          snprintf((char *)&buf, 0x14uLL, " %5d", v69);
          std::string::append(&v71, (const std::string::value_type *)&buf);
          if (!--v40) {
            goto LABEL_54;
          }
        }

        unint64_t v62 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v62)
        {
          goto LABEL_111;
        }

        if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          goto LABEL_111;
        }
      }

  return v9;
}

      if (v54) {
        sub_10000ABAC(v54);
      }
LABEL_66:
      if (v11) {
        sub_10000ABAC(v11);
      }
      if (v60) {
        sub_10000ABAC(v60);
      }
      sub_10000B338((uint64_t)&v61);
      uint64_t v8 = v61;
    }

    while (v61 != v9);
  }

  if (*(void *)a4 && *(void *)(a4 + 8))
  {
    unint64_t v38 = (dispatch_queue_s *)a1[6];
    v43[0] = _NSConcreteStackBlock;
    v43[1] = 1174405120LL;
    v43[2] = sub_100134C34;
    v43[3] = &unk_1002B4170;
    std::string::basic_string(&v44, a2);
    char v39 = *(void **)a4;
    if (*(void *)a4) {
      char v39 = _Block_copy(v39);
    }
    char v40 = *(dispatch_object_s **)(a4 + 8);
    aBlock = v39;
    dispatch_object_t object = v40;
    if (v40) {
      dispatch_retain(v40);
    }
    dispatch_group_notify(v7, v38, v43);
    if (object) {
      dispatch_release(object);
    }
    if (aBlock) {
      _Block_release(aBlock);
    }
  }

  dispatch_release(v7);
}

LABEL_65:
  v28[47] = self->_cslTxErrBusyChannel;
  v28[64] |= 8u;
  char v27 = self->_has;
  if ((*(_BYTE *)&v27 & 1) == 0)
  {
LABEL_45:
    if ((*(_BYTE *)&v27 & 2) == 0) {
      goto LABEL_46;
    }
    goto LABEL_67;
  }

      unsigned int v41 = 1LL;
      goto LABEL_66;
    }

    int v15 = a2 >= v13;
    a2 = a2 - v13;
    if (!v15)
    {
      char v39 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      char v40 = v39;
      if (v39)
      {
      }

      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        goto LABEL_64;
      }

      goto LABEL_65;
    }

    char v16 = v53;
    if (i) {
      unsigned int v17 = "    Number of connected Child nodes at hour:";
    }
    else {
      unsigned int v17 = "    Number of connected Router nodes at hour:";
    }
    std::string::append(&v55, v17);
    if (v16)
    {
      unsigned int v23 = 0;
      if (i) {
        uint64_t v24 = "ConnectedChildCount";
      }
      else {
        uint64_t v24 = "ConnectedRouterCount";
      }
      while (1)
      {
        uint64_t v25 = spinel_datatype_unpack(v54, v53, "C", v18, v19, v20, v21, v22, (uint64_t)&v52);
        if (!v25) {
          break;
        }
        if (v53 < v25)
        {
          uint64_t v37 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (v37)
          {
            goto LABEL_65;
          }

          if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
            goto LABEL_65;
          }
          goto LABEL_64;
        }

        uint64_t v54 = (_WORD *)((char *)v54 + v25);
        v53 -= v25;
        std::string::append(&v55, " [");
        std::to_string(&v59, v23);
        sub_10000D650(&v55, (const std::string::value_type *)&v59);
        std::string::append(&v55, ": ");
        if ((a4 & 1) != 0)
        {
          sub_10000AC00(&v49, v24);
          sub_10000AC00(v47, "[");
          unint64_t v26 = sub_10000D650(&v49, (const std::string::value_type *)v47);
          char v27 = *(_OWORD *)&v26->__r_.__value_.__l.__data_;
          v50.__r_.__value_.__l.__cap_ = v26->__r_.__value_.__l.__cap_;
          *(_OWORD *)&v50.__r_.__value_.__l.__data_ = v27;
          v26->__r_.__value_.__l.__size_ = 0LL;
          v26->__r_.__value_.__l.__cap_ = 0LL;
          v26->__r_.__value_.__r.__words[0] = 0LL;
          std::to_string(&v46, v23);
          char v28 = sub_10000D650(&v50, (const std::string::value_type *)&v46);
          unsigned int v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
          v51.__r_.__value_.__l.__cap_ = v28->__r_.__value_.__l.__cap_;
          *(_OWORD *)&v51.__r_.__value_.__l.__data_ = v29;
          v28->__r_.__value_.__l.__size_ = 0LL;
          v28->__r_.__value_.__l.__cap_ = 0LL;
          v28->__r_.__value_.__r.__words[0] = 0LL;
          sub_10000AC00(__p, "]");
          uint64_t v30 = sub_10000D650(&v51, (const std::string::value_type *)__p);
          uint64_t v31 = *(_OWORD *)&v30->__r_.__value_.__l.__data_;
          v59.__r_.__value_.__l.__cap_ = v30->__r_.__value_.__l.__cap_;
          *(_OWORD *)&v59.__r_.__value_.__l.__data_ = v31;
          v30->__r_.__value_.__l.__size_ = 0LL;
          v30->__r_.__value_.__l.__cap_ = 0LL;
          v30->__r_.__value_.__r.__words[0] = 0LL;
          if (v45 < 0) {
            operator delete(__p[0]);
          }
          if (v48 < 0) {
            operator delete(v47[0]);
          }
          unint64_t v32 = sub_100070EE8(&v56, &v59);
          sub_1000176D4(v32, &v52);
        }

        else
        {
          snprintf((char *)&v59, 0x64uLL, "%hhu", v52);
          std::string::append(&v55, (const std::string::value_type *)&v59);
        }

        std::string::append(&v55, "]");
        char v33 = v23 + 1;
        if (__OFADD__(v23, 1)) {
          __break(0x5500u);
        }
        ++v23;
        if (v33 >= v16) {
          goto LABEL_34;
        }
      }

      uint64_t v36 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v36)
      {
        goto LABEL_65;
      }

      if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        goto LABEL_65;
      }
LABEL_64:
      sub_1001FB53C();
      goto LABEL_65;
    }

  int v14 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_receivedEnergyEvents));
  [v3 setObject:v14 forKey:@"received_energy_events"];

  if ((*(void *)&self->_has & 0x100) != 0)
  {
LABEL_5:
    char v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_receivedPreambles));
    [v3 setObject:v5 forKey:@"received_preambles"];
  }

  PBDataWriterWriteUint32Field(v7, self->_receivedEnergyEvents, 3LL);
  if ((*(void *)&self->_has & 0x100) != 0) {
LABEL_5:
  }
    PBDataWriterWriteUint32Field(v7, self->_receivedPreambles, 4LL);
LABEL_6:
  sRadioStats = self->_sRadioStats;
  if (sRadioStats) {
    PBDataWriterWriteSubmessage(v7, sRadioStats, 5LL);
  }
  unsigned int v6 = self->_has;
  if ((*(_DWORD *)&v6 & 0x20000) != 0)
  {
    PBDataWriterWriteUint32Field(v7, self->_rttMinVal, 6LL);
    unsigned int v6 = self->_has;
    if ((*(_DWORD *)&v6 & 0x10000) == 0)
    {
LABEL_10:
      if ((*(_WORD *)&v6 & 0x8000) == 0) {
        goto LABEL_11;
      }
      goto LABEL_69;
    }
  }

  else if ((*(_DWORD *)&v6 & 0x10000) == 0)
  {
    goto LABEL_10;
  }

  PBDataWriterWriteUint32Field(v7, self->_rttMaxVal, 7LL);
  unsigned int v6 = self->_has;
  if ((*(_WORD *)&v6 & 0x8000) == 0)
  {
LABEL_11:
    if ((*(_WORD *)&v6 & 0x4000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_70;
  }

  v4[8] = self->_receivedEnergyEvents;
  *((void *)v4 + 31) |= 0x40uLL;
  if ((*(void *)&self->_has & 0x100) != 0)
  {
LABEL_5:
    v4[10] = self->_receivedPreambles;
    *((void *)v4 + 31) |= 0x100uLL;
  }

          unsigned int v29 = 3LL;
LABEL_78:
          sub_10015A564((const void **)&buf.__r_.__value_.__l.__data_);
          goto LABEL_79;
        }

        uint64_t v19 = &__s1;
        unsigned int v17 = v15;
        goto LABEL_39;
      }
    }

    else
    {
      if (v13 != v61)
      {
        uint64_t v18 = strlen("eventsOn");
        goto LABEL_32;
      }

      if (v13 != -1LL)
      {
        char v16 = &__s1;
        goto LABEL_28;
      }
    }

    sub_100077124();
  }

LABEL_66:
  v28[44] = self->_cslLossOfSyncDueToCslTimeout;
  v28[64] |= 1u;
  char v27 = self->_has;
  if ((*(_BYTE *)&v27 & 2) == 0)
  {
LABEL_46:
    if ((*(_WORD *)&v27 & 0x8000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_68;
  }

    sub_100159FC0(a1 + 32, 0.0);
    unsigned int v23 = 872;
LABEL_67:
    *(_WORD *)(a1 + 40) = v23;
  }

  return 1LL;
}

  unint64_t v56 = 0LL;
  if ((*(_WORD *)&v4 & 0x4000) != 0)
  {
LABEL_14:
    uint64_t v55 = 2654435761LL * self->_rtt90perc;
    if ((*(_WORD *)&v4 & 0x2000) != 0) {
      goto LABEL_15;
    }
    goto LABEL_68;
  }

      return;
    default:
      return;
  }

LABEL_67:
  v28[45] = self->_cslLossOfSyncDueToMaxRetx;
  v28[64] |= 2u;
  char v27 = self->_has;
  if ((*(_WORD *)&v27 & 0x8000) == 0)
  {
LABEL_47:
    if ((*(_WORD *)&v27 & 0x800) == 0) {
      goto LABEL_48;
    }
    goto LABEL_69;
  }

  *((_DWORD *)v6 + 17) = self->_rttAvgVal;
  v6[31] |= 0x8000uLL;
  char v10 = self->_has;
  if ((*(_WORD *)&v10 & 0x4000) == 0)
  {
LABEL_10:
    if ((*(_WORD *)&v10 & 0x2000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_69;
  }

  uint64_t v55 = 0LL;
  if ((*(_WORD *)&v4 & 0x2000) != 0)
  {
LABEL_15:
    uint64_t v54 = 2654435761LL * self->_retryIntervalMin;
    if ((*(_WORD *)&v4 & 0x1000) != 0) {
      goto LABEL_16;
    }
    goto LABEL_69;
  }

    sub_100168054(a3, (void *)xmmword_1002D19B8, *((unint64_t *)&xmmword_1002D19B8 + 1));
    goto LABEL_68;
  }

  unint64_t v12 = 0LL;
  while ((void)v26 != a2 || *((void *)&v26 + 1) != v7)
  {
    if (sub_10016F344((unint64_t)&v25, (unint64_t)&stru_1002D19D0))
    {
      int v14 = v25.__r_.__value_.__s.__size_;
      if ((v25.__r_.__value_.__s.__size_ & 0x80u) != 0) {
        int v14 = v25.__r_.__value_.__l.__size_;
      }
    }

    else
    {
      --v12;
    }

    sub_100170DB4(&v25);
  }

  if (v12 < 0)
  {
    a3->__r_.__value_.__r.__words[0] = 0LL;
    a3->__r_.__value_.__l.__size_ = 0LL;
    a3->__r_.__value_.__l.__cap_ = 0LL;
    goto LABEL_68;
  }

  if (v12)
  {
    a3->__r_.__value_.__r.__words[0] = 0LL;
    a3->__r_.__value_.__l.__size_ = 0LL;
    int v15 = v12 + 1;
    a3->__r_.__value_.__l.__cap_ = 0LL;
    do
    {
      sub_10016EC50(a3, &stru_1002D19D0);
      --v15;
    }

    while (v15 > 1);
  }

  else
  {
    if ((void)v24 == a1 && *((void *)&v24 + 1) == v6) {
      goto LABEL_64;
    }
    uint64_t v18 = v23.__r_.__value_.__s.__size_;
    if ((v23.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      uint64_t v18 = v23.__r_.__value_.__l.__size_;
    }
    if (!v18)
    {
LABEL_64:
      if ((byte_1002D19CF & 0x80000000) == 0)
      {
        *(_OWORD *)&a3->__r_.__value_.__l.__data_ = xmmword_1002D19B8;
        BOOL v11 = unk_1002D19C8;
        goto LABEL_66;
      }

      goto LABEL_67;
    }

    a3->__r_.__value_.__r.__words[0] = 0LL;
    a3->__r_.__value_.__l.__size_ = 0LL;
    a3->__r_.__value_.__l.__cap_ = 0LL;
  }

  while ((void)v24 != a1 || *((void *)&v24 + 1) != v6)
  {
    sub_10016EC50(a3, &v23);
    sub_100170DB4(&v23);
  }

LABEL_69:
  v28[55] = self->_txErrAbortPercentage;
  v28[64] |= 0x800u;
  char v27 = self->_has;
  if ((*(_WORD *)&v27 & 0x2000) != 0) {
    goto LABEL_70;
  }
LABEL_49:
  if ((*(_DWORD *)&v27 & 0x10000) != 0)
  {
LABEL_50:
    v28[60] = self->_txErrPercentage;
    v28[64] |= 0x10000u;
  }

          (*(void (**)(void *))(*(void *)v28 + 8LL))(v28);
          goto LABEL_70;
        }

        uint64_t v128 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v128)
        {
          break;
        }

        if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          goto LABEL_536;
        }
        break;
      case 0x1524:
        *(void *)v352 = 0LL;
        *(_DWORD *)__n = 0;
        LOWORD(v304) = 0;
        LOWORD(v303) = 0;
        memset(__p, 0, 24);
        if ((int)spinel_datatype_unpack(a3, a4, "DS6S", a4, a5, a6, a7, a8, (uint64_t)v352) > 0)
        {
          sub_10006D498((uint64_t)__p, *(char **)v352, *(unsigned int *)__n);
          buf.__r_.__value_.__s.__data_[0] = BYTE1(v304);
          sub_10006D4CC(&__p[0].__sig, &buf);
          buf.__r_.__value_.__s.__data_[0] = v304;
          sub_10006D4CC(&__p[0].__sig, &buf);
          sub_10006D498((uint64_t)__p, (char *)__src, 16LL);
          buf.__r_.__value_.__s.__data_[0] = BYTE1(v303);
          sub_10006D4CC(&__p[0].__sig, &buf);
          buf.__r_.__value_.__s.__data_[0] = v303;
          sub_10006D4CC(&__p[0].__sig, &buf);
          sub_10000AC00(&buf, "UdpForward:Stream");
          sub_100033680(&__n[4], (uint64_t)__p);
          (*(void (**)(uint64_t *, std::string *, _BYTE *))(*a1 + 360))(a1, &buf, &__n[4]);
          char v28 = *(void **)&__n[4];
          if (!*(void *)&__n[4]) {
            goto LABEL_70;
          }
          goto LABEL_69;
        }

        uint64_t v127 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v127)
        {
          break;
        }

        if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
LABEL_536:
        }
          sub_1001FB53C();
        break;
      case 0x1900:
        v352[0] = 0;
        if ((spinel_datatype_unpack(a3, a4, "C", a4, a5, a6, a7, a8, (uint64_t)v352) & 0x80000000) != 0
          || v352[0] == *((unsigned __int8 *)v9 + 1005))
        {
          goto LABEL_609;
        }

        *((_BYTE *)v9 + 1005) = v352[0];
        sub_10000AC00(__p, "ChannelManager:NewChannel");
        unint64_t v20 = operator new(0x10uLL);
        *(void *)unint64_t v20 = &off_1002AE118;
        _BYTE v20[8] = v352[0];
        buf.__r_.__value_.__r.__words[0] = (std::string::size_type)v20;
        (*(void (**)(uint64_t *, pthread_mutex_t *, std::string *))(*a1 + 360))(a1, __p, &buf);
        if (buf.__r_.__value_.__r.__words[0]) {
          (*(void (**)(std::string::size_type))(*(void *)buf.__r_.__value_.__l.__data_ + 8LL))(buf.__r_.__value_.__r.__words[0]);
        }
        if (__p[0].__opaque[15] < 0) {
          operator delete((void *)__p[0].__sig);
        }
        char v21 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (!v21)
        {
          if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
            goto LABEL_609;
          }
          goto LABEL_639;
        }

        LODWORD(__p[0].__sig) = 67109120;
        HIDWORD(__p[0].__sig) = v352[0];
        char v22 = "[-NCP-]: ChannelManager about to switch to new channel %d";
        unsigned int v23 = (std::string *)__p;
        uint64_t v24 = v21;
        uint64_t v25 = 8;
        goto LABEL_48;
      default:
        goto LABEL_238;
    }

  unsigned int v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", self->_rttAvgVal));
  [v3 setObject:v17 forKey:@"rtt_avg_val"];

  uint64_t v8 = self->_has;
  if ((*(_WORD *)&v8 & 0x4000) == 0)
  {
LABEL_12:
    if ((*(_WORD *)&v8 & 0x2000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_71;
  }

  PBDataWriterWriteUint32Field(v7, self->_rttAvgVal, 8LL);
  unsigned int v6 = self->_has;
  if ((*(_WORD *)&v6 & 0x4000) == 0)
  {
LABEL_12:
    if ((*(_WORD *)&v6 & 0x2000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_71;
  }

  v4[17] = self->_rttAvgVal;
  *((void *)v4 + 31) |= 0x8000uLL;
  unsigned int v6 = self->_has;
  if ((*(_WORD *)&v6 & 0x4000) == 0)
  {
LABEL_12:
    if ((*(_WORD *)&v6 & 0x2000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_71;
  }

  *((_DWORD *)v6 + 15) = self->_retryIntervalMin;
  v6[31] |= 0x2000uLL;
  char v10 = self->_has;
  if ((*(_WORD *)&v10 & 0x1000) == 0)
  {
LABEL_12:
    if ((*(_WORD *)&v10 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_71;
  }

  unsigned int v53 = 0LL;
  if ((*(_WORD *)&v4 & 0x800) != 0)
  {
LABEL_17:
    char v52 = 2654435761LL * self->_retryIntervalAvg;
    if ((*(_WORD *)&v4 & 0x400) != 0) {
      goto LABEL_18;
    }
    goto LABEL_71;
  }

        *(std::string *)a4 = v35;
        return;
      }

      if (!a3 || (a3 & 0x100) != 0)
      {
        v32.__r_.__value_.__r.__words[0] = 0LL;
        sub_100168560((dirent **)&v32, v7, 0, a4);
        if (!a4 || (int v14 = a4[2], (v14 & 1) == 0) || v14 == 1 && !*(_DWORD *)a4)
        {
          v31.__r_.__value_.__r.__words[0] = 0LL;
          int v15 = v32.__r_.__value_.__r.__words[0];
          if (v32.__r_.__value_.__r.__words[0])
          {
            char v16 = a3 | 0x4000u;
            do
            {
              if (!v15 || !*(void *)(v15 + 48)) {
                break;
              }
              unsigned int v17 = v15 + 8;
              sub_10016E594((_BYTE *)(v15 + 8), &__p);
              else {
                __dst = *(std::string *)a2;
              }
              sub_10016EC50(&__dst, &__p);
              sub_10016B8EC(v17, &__dst, v16, a4);
              if (a4)
              {
                uint64_t v18 = a4[2];
                if ((v18 & 1) != 0 && (v18 != 1 || *(_DWORD *)a4)) {
                  break;
                }
              }

              sub_100168A50((dirent **)&v32, (uint64_t)a4);
              if (a4)
              {
                uint64_t v19 = a4[2];
                if ((v19 & 1) != 0 && (v19 != 1 || *(_DWORD *)a4)) {
                  break;
                }
              }

              int v15 = v32.__r_.__value_.__r.__words[0];
            }

            while (v32.__r_.__value_.__r.__words[0] != v31.__r_.__value_.__r.__words[0]);
          }

          sub_10016A418((unsigned int **)&v31);
        }

        sub_10016A418((unsigned int **)&v32);
      }

      return;
    }

    if ((unint64_t)qword_1002C9390 >> 1 == 0x595588BD12BF6FE8LL
      || ((BOOL (*)(uint64_t, int))boost::system::detail::generic_cat_holder<void>::instance[6])( (uint64_t)&boost::system::detail::generic_cat_holder<void>::instance,  21))
    {
      char v10 = 3LL;
    }

    else
    {
      char v10 = 2LL;
    }

    v35.__r_.__value_.__r.__words[0] = 21LL;
    v35.__r_.__value_.__l.__size_ = (std::string::size_type)&boost::system::detail::generic_cat_holder<void>::instance;
    v35.__r_.__value_.__l.__cap_ = v10;
    if (a4) {
      goto LABEL_69;
    }
    exception = __cxa_allocate_exception(0x30uLL);
    unsigned int v29 = v35;
    boost::filesystem::filesystem_error::filesystem_error(exception, "boost::filesystem::copy", v7, a2, &v29);
LABEL_133:
  }

  if (LODWORD(v35.__r_.__value_.__l.__data_) != 4)
  {
LABEL_12:
    unint64_t v9 = 78;
LABEL_14:
    sub_1001677F4(v9, (uint64_t)v7, a2, (uint64_t)a4, (uint64_t)"boost::filesystem::copy");
    return;
  }

  if ((a3 & 0x400) == 0)
  {
    if ((a3 & 0x200) == 0) {
      goto LABEL_12;
    }
    sub_10016C150((uint64_t)v7, a2, a4);
  }

    char v51 = 4;
    goto LABEL_73;
  }

  unint64_t v56 = sub_1000160F4("com.apple.wpantund.tnm", "threadStart");
  char v57 = (os_log_s *)objc_claimAutoreleasedReturnValue(v56);
  if (os_log_type_enabled(v57, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)__n128 buf = 136316930;
    unsigned int v85 = "-[ThreadNetworkManagerInstance checkIfNetworkIsFoundInMDNSScan:borderAgentID:]";
    uint64_t v86 = 1024;
    *(_DWORD *)uint64_t v87 = 6539;
    *(_WORD *)&v87[4] = 2112;
    *(void *)&v87[6] = log;
    unint64_t v88 = 2112;
    char v89 = v33;
    uint64_t v90 = 2112;
    char v91 = v32;
    unsigned int v92 = 2112;
    uint64_t v93 = (os_log_s *)v31;
    uint64_t v94 = 2112;
    unint64_t v95 = v30;
    char v96 = 2112;
    uint64_t v97 = v75;
    _os_log_impl( (void *)&_mh_execute_header,  v57,  OS_LOG_TYPE_INFO,  "%s:%d: network name str : %@, xpan id str : %@, baid str : %@, foundxpanid : %@, foundbaid : %@, borderAgentID : %@",  buf,  0x4Eu);
  }

  char v45 = (os_log_s *)objc_claimAutoreleasedReturnValue([v76 networkName]);
  char v58 = (void *)objc_claimAutoreleasedReturnValue([v76 extendedPANID]);
  if (([v58 isEqualToData:v31] & 1) == 0)
  {

    goto LABEL_72;
  }

  unsigned int v59 = -[NSString isEqualToData:](v75, "isEqualToData:", v30);

  if (!v59) {
    goto LABEL_80;
  }
  uint64_t v60 = sub_1000160F4("com.apple.wpantund.tnm", "threadStart");
  uint64_t v61 = (os_log_s *)objc_claimAutoreleasedReturnValue(v60);
  if (os_log_type_enabled(v61, OS_LOG_TYPE_INFO))
  {
    unint64_t v62 = (void *)objc_claimAutoreleasedReturnValue([v76 networkName]);
    *(_DWORD *)__n128 buf = v74;
    unsigned int v85 = "-[ThreadNetworkManagerInstance checkIfNetworkIsFoundInMDNSScan:borderAgentID:]";
    uint64_t v86 = 1024;
    *(_DWORD *)uint64_t v87 = 6544;
    *(_WORD *)&v87[4] = 2112;
    *(void *)&v87[6] = v62;
    unint64_t v88 = 2112;
    char v89 = log;
    _os_log_impl( (void *)&_mh_execute_header,  v61,  OS_LOG_TYPE_INFO,  "%s : %d: Network :%@ matches with mdns record :%@",  buf,  0x26u);
  }

  -[ThreadNetworkfinder clear](v83->_BAFinder, "clear");
  char v51 = 1;
LABEL_74:

  if (!v51) {
    goto LABEL_25;
  }

  if (v51 == 4) {
    goto LABEL_26;
  }
  uint64_t v73 = 1;
LABEL_86:

  return v73;
}

LABEL_110:
  return v10;
}

      sub_1001FB53C();
      goto LABEL_111;
    }

    unint64_t v38 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v38)
    {
      goto LABEL_111;
    }

    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      goto LABEL_74;
    }
  }

  char v58 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_rxErrorInvalidLength));
  [v3 setObject:v58 forKey:@"rx_error_invalid_length"];

  uint64_t v8 = self->_has;
  if ((*(_DWORD *)&v8 & 0x4000000) == 0)
  {
LABEL_53:
    if ((*(_DWORD *)&v8 & 0x400000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_112;
  }

  PBDataWriterWriteUint32Field(v7, self->_rxErrorInvalidLength, 49LL);
  unsigned int v6 = self->_has;
  if ((*(_DWORD *)&v6 & 0x4000000) == 0)
  {
LABEL_53:
    if ((*(_DWORD *)&v6 & 0x400000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_112;
  }

  v4[31] = self->_rxErrorInvalidLength;
  *((void *)v4 + 31) |= 0x20000000uLL;
  unsigned int v6 = self->_has;
  if ((*(_DWORD *)&v6 & 0x4000000) == 0)
  {
LABEL_53:
    if ((*(_DWORD *)&v6 & 0x400000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_112;
  }

  *((_DWORD *)v6 + 24) = self->_rxErrorAckFailedRadioState;
  v6[31] |= 0x400000uLL;
  char v10 = self->_has;
  if ((*(_DWORD *)&v10 & 0x200000) == 0)
  {
LABEL_53:
    if ((*(_DWORD *)&v10 & 0x100000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_112;
  }

  uint64_t v24 = 0LL;
  if ((*(_DWORD *)&v4 & 0x100000) != 0)
  {
LABEL_58:
    uint64_t v25 = 2654435761LL * self->_rxErrorAckDenied;
    if ((*(_DWORD *)&v4 & 0x80000) != 0) {
      goto LABEL_59;
    }
    goto LABEL_112;
  }

  self->_rxErrorRuntimeDelay = v5[33];
  *(void *)&self->_has |= 0x80000000uLL;
  unint64_t v9 = *((void *)v5 + 31);
  if ((v9 & 0x100000000LL) == 0)
  {
LABEL_57:
    if ((v9 & 0x40000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_112;
  }

LABEL_14:
  unsigned int v35 = 0LL;
  if ((*(_WORD *)&has & 0x4000) != 0)
  {
LABEL_6:
    char v34 = 2654435761LL * self->_txErrCca;
    if ((*(_WORD *)&has & 0x400) != 0) {
      goto LABEL_7;
    }
    goto LABEL_16;
  }

  char v5 = 0LL;
  if ((has & 1) != 0)
  {
LABEL_5:
    unsigned int v6 = 2654435761LL * self->_rxFailure;
    if ((has & 8) != 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }

  unint64_t v9 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_childRoleCount));
  [v3 setObject:v9 forKey:@"child_role_count"];

  has = (__int16)self->_has;
  if ((has & 0x100) == 0)
  {
LABEL_5:
    if ((has & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }

  PBDataWriterWriteUint32Field(v5, self->_childRoleCount, 3LL);
  has = (__int16)self->_has;
  if ((has & 0x100) == 0)
  {
LABEL_5:
    if ((has & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }

  uint64_t v4[4] = self->_childRoleCount;
  *((_WORD *)v4 + 22) |= 4u;
  has = (__int16)self->_has;
  if ((has & 0x100) == 0)
  {
LABEL_5:
    if ((has & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }

  *((_DWORD *)result + 4) = self->_childRoleCount;
  *((_WORD *)result + 22) |= 4u;
  has = (__int16)self->_has;
  if ((has & 0x100) == 0)
  {
LABEL_5:
    if ((has & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }

  unsigned int v6 = 0LL;
  if ((has & 0x20) != 0)
  {
LABEL_6:
    uint64_t v7 = 2654435761LL * self->_leaderRoleCount;
    if ((has & 1) != 0) {
      goto LABEL_7;
    }
    goto LABEL_16;
  }

  self->_childRoleCount = *((_DWORD *)v4 + 4);
  *(_WORD *)&self->_has |= 4u;
  char v5 = *((_WORD *)v4 + 22);
  if ((v5 & 0x100) == 0)
  {
LABEL_5:
    if ((v5 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }

  __break(0x5512u);
  return result;
}

  return v8;
}

  uint64_t result = *(double *)(a1 + 24);
  *a3 = result;
  return result;
}

  if (![v9 count]) {
    goto LABEL_23;
  }
  -[THThreadNetworkCredentialsKeychainBackingStore dumpPreferredNetworks:](self, "dumpPreferredNetworks:", v9);
  unint64_t v9 = v9;
  unint64_t v12 = sub_1001768B4(1);
  uint64_t v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
  if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
    sub_1001985FC(v9);
  }

  if (![v9 count])
  {
    BOOL v11 = 0LL;
LABEL_25:
    uint64_t v19 = v9;
    goto LABEL_26;
  }

  BOOL v11 = (os_log_s *)objc_claimAutoreleasedReturnValue( -[THThreadNetworkCredentialsKeychainBackingStore sortAndReturnPreferredNetwork:]( self,  "sortAndReturnPreferredNetwork:",  v9));
  if (!v11) {
    goto LABEL_25;
  }
  int v14 = objc_claimAutoreleasedReturnValue( -[THThreadNetworkCredentialsKeychainBackingStore checkIfNetworkSignatureUpdateIsRequiredForPreferredNetwork:nwSignature:]( self,  "checkIfNetworkSignatureUpdateIsRequiredForPreferredNetwork:nwSignature:",  v11,  v5));
  if (!v14) {
    goto LABEL_25;
  }
  int v15 = (void *)v14;
  char v16 = sub_1001768B4(1);
  unsigned int v17 = (os_log_s *)objc_claimAutoreleasedReturnValue(v16);
  if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
  {
    unsigned int v23 = 136315394;
    uint64_t v24 = "-[THThreadNetworkCredentialsKeychainBackingStore updatePreferredNetwork]";
    uint64_t v25 = 1024;
    unint64_t v26 = 4029;
    _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_INFO,  "%s : %d Updated Preferred Network",  (uint8_t *)&v23,  0x12u);
  }

  uint64_t v18 = 1;
LABEL_30:

  return v18;
}

  if (v22) {
    (*(void (**)(uint64_t))(*(void *)v22 + 8LL))(v22);
  }
  if (v7 < 0) {
    operator delete(v6);
  }
  return v17;
}

  if (v22) {
    (*(void (**)(uint64_t))(*(void *)v22 + 8LL))(v22);
  }
  if (v7 < 0) {
    operator delete(v6);
  }
  return v17;
}

  if (v22) {
    (*(void (**)(uint64_t))(*(void *)v22 + 8LL))(v22);
  }
  if (v7 < 0) {
    operator delete(v6);
  }
  return v17;
}

  if (v22) {
    (*(void (**)(uint64_t))(*(void *)v22 + 8LL))(v22);
  }
  if (v7 < 0) {
    operator delete(v6);
  }
  return v17;
}

  if (v22) {
    (*(void (**)(uint64_t))(*(void *)v22 + 8LL))(v22);
  }
  if (v7 < 0) {
    operator delete(v6);
  }
  return v17;
}

LABEL_16:
  char v33 = 0LL;
  if ((*(_WORD *)&has & 0x1000) != 0)
  {
LABEL_8:
    unint64_t v32 = 2654435761LL * self->_txErrBusyChannel;
    if ((*(_WORD *)&has & 0x200) != 0) {
      goto LABEL_9;
    }
LABEL_18:
    uint64_t v31 = 0LL;
    if ((*(_DWORD *)&has & 0x20000) != 0) {
      goto LABEL_10;
    }
    goto LABEL_19;
  }

  char v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", self->_rxFailure));
  [v3 setObject:v10 forKey:@"rx_failure"];

  has = (__int16)self->_has;
  if ((has & 8) == 0)
  {
LABEL_6:
    if ((has & 0x40) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }

  PBDataWriterWriteUint32Field(v5, self->_rxFailure, 4LL);
  has = (__int16)self->_has;
  if ((has & 8) == 0)
  {
LABEL_6:
    if ((has & 0x40) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }

  _OWORD v4[2] = self->_rxFailure;
  *((_WORD *)v4 + 24) |= 1u;
  has = (__int16)self->_has;
  if ((has & 8) == 0)
  {
LABEL_6:
    if ((has & 0x40) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }

  *((_DWORD *)result + 2) = self->_rxFailure;
  *((_WORD *)result + 24) |= 1u;
  has = (__int16)self->_has;
  if ((has & 8) == 0)
  {
LABEL_6:
    if ((has & 0x40) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }

  uint64_t v7 = 0LL;
  if ((has & 0x40) != 0)
  {
LABEL_7:
    uint64_t v8 = 2654435761LL * self->_txDelaymin;
    if ((has & 0x20) != 0) {
      goto LABEL_8;
    }
    goto LABEL_18;
  }

  self->_rxFailure = *((_DWORD *)v4 + 2);
  *(_WORD *)&self->_has |= 1u;
  char v5 = *((_WORD *)v4 + 24);
  if ((v5 & 8) == 0)
  {
LABEL_6:
    if ((v5 & 0x40) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }

    sub_1001FB53C();
    return 1LL;
  }

  switch(v56)
  {
    case '!':
      if ((int)spinel_datatype_unpack(v55, v54, "C", v9, v10, v11, v12, v13, (uint64_t)&__str) > 0)
      {
        uint64_t result = 0LL;
        *(_BYTE *)(a1 + 160) = __str.__r_.__value_.__s.__data_[0];
        *(_BYTE *)(a1 + 161) = 1;
        return result;
      }

      char v45 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v45)
      {
        char v46 = v45;
        return 1LL;
      }

      if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        return 1LL;
      }
LABEL_150:
      sub_1001FB53C();
      return 1LL;
    case '""':
      if (v54)
      {
        unsigned int v17 = 0;
        uint64_t v18 = v54 - 1;
        uint64_t v19 = (_WORD *)((char *)v55 + 1);
        while (1)
        {
          unint64_t v20 = *((unsigned __int8 *)v19 - 1);
          if (v20 >= 0x20) {
            break;
          }
          v17 |= 1 << v20;
          uint64_t v55 = v19;
          uint64_t v54 = v18--;
          uint64_t v19 = (_WORD *)((char *)v19 + 1);
          if (v18 == -1) {
            goto LABEL_106;
          }
        }

        unsigned int v47 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v47)
        {
          uint64_t v48 = v47;
          return 1LL;
        }

        if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          goto LABEL_16;
        }
        return 1LL;
      }

      unsigned int v17 = 0;
LABEL_106:
      uint64_t result = 0LL;
      *(_DWORD *)(a1 + 200) = v17;
      *(_BYTE *)(a1 + 204) = 1;
      break;
    case '6':
      if ((int)spinel_datatype_unpack(v55, v54, "S", v9, v10, v11, v12, v13, (uint64_t)&__str) > 0)
      {
        uint64_t result = 0LL;
        *(_WORD *)(a1 + 156) = __str.__r_.__value_.__l.__data_;
        *(_BYTE *)(a1 + 158) = 1;
        return result;
      }

      uint64_t v43 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v43)
      {
        unint64_t v44 = v43;
        return 1LL;
      }

      if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        goto LABEL_150;
      }
      return 1LL;
    default:
LABEL_53:
      char v21 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v21)
      {
        char v22 = v21;
        uint64_t result = sub_10015A058(4);
        if ((_DWORD)result)
        {
          uint64_t result = os_log_type_enabled(v22, OS_LOG_TYPE_ERROR);
          if ((_DWORD)result)
          {
            sub_100208288(&v56, v22);
            return 0LL;
          }
        }
      }

      else
      {
        uint64_t result = os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR);
        if ((_DWORD)result)
        {
          sub_1001FB53C();
          return 0LL;
        }
      }

      break;
  }

  return result;
}

  return v8;
}

  BOOL v11 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_leaderRoleCount));
  [v3 setObject:v11 forKey:@"leader_role_count"];

  has = (__int16)self->_has;
  if ((has & 1) == 0)
  {
LABEL_7:
    if ((has & 0x80) == 0) {
      goto LABEL_8;
    }
    goto LABEL_18;
  }

  PBDataWriterWriteUint32Field(v5, self->_leaderRoleCount, 5LL);
  has = (__int16)self->_has;
  if ((has & 1) == 0)
  {
LABEL_7:
    if ((has & 0x80) == 0) {
      goto LABEL_8;
    }
    goto LABEL_18;
  }

  v4[7] = self->_leaderRoleCount;
  *((_WORD *)v4 + 22) |= 0x20u;
  has = (__int16)self->_has;
  if ((has & 1) == 0)
  {
LABEL_7:
    if ((has & 0x80) == 0) {
      goto LABEL_8;
    }
    goto LABEL_18;
  }

  *((_DWORD *)result + 7) = self->_leaderRoleCount;
  *((_WORD *)result + 22) |= 0x20u;
  has = (__int16)self->_has;
  if ((has & 1) == 0)
  {
LABEL_7:
    if ((has & 0x80) == 0) {
      goto LABEL_8;
    }
    goto LABEL_18;
  }

  uint64_t v8 = 0LL;
  if ((has & 0x80) != 0)
  {
LABEL_8:
    unint64_t v9 = 2654435761LL * self->_partitionIdChangesCount;
    if ((has & 2) != 0) {
      goto LABEL_9;
    }
LABEL_18:
    char v10 = 0LL;
    if ((has & 0x40) != 0) {
      goto LABEL_10;
    }
LABEL_19:
    BOOL v11 = 0LL;
    return v4 ^ v3 ^ v5 ^ v6 ^ v7 ^ v8 ^ v9 ^ v10 ^ v11;
  }

  self->_leaderRoleCount = *((_DWORD *)v4 + 7);
  *(_WORD *)&self->_has |= 0x20u;
  char v5 = *((_WORD *)v4 + 22);
  if ((v5 & 1) == 0)
  {
LABEL_7:
    if ((v5 & 0x80) == 0) {
      goto LABEL_8;
    }
    goto LABEL_18;
  }

  int v14 = 0LL;
  if ((has & 8) != 0)
  {
LABEL_6:
    int v4 = 2654435761LL * self->_rxErrFcs;
    if ((*(_WORD *)&self->_has & 0x200) != 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }

  unsigned int v6 = strcasecmp((const char *)v4, "Stat:Help");
  if (!(_DWORD)v6)
  {
    sub_10010BF44(v6, a3);
    return 0LL;
  }

  sub_10000AC00(&v20, "Unknown/unsupported stat property. Please use get ");
  uint64_t v7 = std::string::append(&v20, "Stat:Help");
  uint64_t v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  v21.__r_.__value_.__l.__cap_ = v7->__r_.__value_.__l.__cap_;
  *(_OWORD *)&v21.__r_.__value_.__l.__data_ = v8;
  v7->__r_.__value_.__l.__size_ = 0LL;
  v7->__r_.__value_.__l.__cap_ = 0LL;
  v7->__r_.__value_.__r.__words[0] = 0LL;
  unint64_t v9 = std::string::append(&v21, " to get list of supported properties by statistics collector.");
  char v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  uint64_t cap = v9->__r_.__value_.__l.__cap_;
  uint64_t v24 = v10;
  v9->__r_.__value_.__l.__size_ = 0LL;
  v9->__r_.__value_.__l.__cap_ = 0LL;
  v9->__r_.__value_.__r.__words[0] = 0LL;
  sub_100044B24(a3, (uint64_t)&v24);
  if (SHIBYTE(cap) < 0) {
    operator delete((void *)v24);
  }
  return 16LL;
}

    return v2;
  }

  return 1;
}

  return v18;
}

  uint64_t v37 = 0;
LABEL_17:

  return v37;
}

  uint64_t result = v23;
  if (v23) {
    uint64_t result = (basic_string<char, std::char_traits<char>, std::allocator<char>> *)(*((uint64_t (**)(basic_string<char, std::char_traits<char>, std::allocator<char>> *))v23->var0.var0.var0.var1.var0
  }
                                                                                  + 1))(v23);
  if (v8 < 0) {
    operator delete(v7);
  }
  return result;
}

  uint64_t result = v23;
  if (v23) {
    uint64_t result = (basic_string<char, std::char_traits<char>, std::allocator<char>> *)(*((uint64_t (**)(basic_string<char, std::char_traits<char>, std::allocator<char>> *))v23->var0.var0.var0.var1.var0
  }
                                                                                  + 1))(v23);
  if (v8 < 0) {
    operator delete(v7);
  }
  return result;
}

  uint64_t result = v23;
  if (v23) {
    uint64_t result = (basic_string<char, std::char_traits<char>, std::allocator<char>> *)(*((uint64_t (**)(basic_string<char, std::char_traits<char>, std::allocator<char>> *))v23->var0.var0.var0.var1.var0
  }
                                                                                  + 1))(v23);
  if (v8 < 0) {
    operator delete(v7);
  }
  return result;
}

LABEL_17:
  unint64_t v32 = 0LL;
  if ((*(_WORD *)&has & 0x200) == 0) {
    goto LABEL_18;
  }
LABEL_9:
  uint64_t v31 = 2654435761LL * self->_txDirectMaxRetryExpiry;
  if ((*(_DWORD *)&has & 0x20000) != 0)
  {
LABEL_10:
    int v4 = 2654435761LL * self->_txIndirectMaxRetryExpiry;
    goto LABEL_20;
  }

  BOOL v11 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_txAppPktSucess));
  [v3 setObject:v11 forKey:@"tx_app_pkt_sucess"];

  has = (__int16)self->_has;
  if ((has & 0x40) == 0)
  {
LABEL_7:
    if ((has & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }

  PBDataWriterWriteUint32Field(v5, self->_txAppPktSucess, 5LL);
  has = (__int16)self->_has;
  if ((has & 0x40) == 0)
  {
LABEL_7:
    if ((has & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }

  v4[5] = self->_txAppPktSucess;
  *((_WORD *)v4 + 24) |= 8u;
  has = (__int16)self->_has;
  if ((has & 0x40) == 0)
  {
LABEL_7:
    if ((has & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }

  *((_DWORD *)result + 5) = self->_txAppPktSucess;
  *((_WORD *)result + 24) |= 8u;
  has = (__int16)self->_has;
  if ((has & 0x40) == 0)
  {
LABEL_7:
    if ((has & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }

  uint64_t v8 = 0LL;
  if ((has & 0x20) != 0)
  {
LABEL_8:
    unint64_t v9 = 2654435761LL * self->_txDelaymax;
    if ((has & 0x10) != 0) {
      goto LABEL_9;
    }
    goto LABEL_19;
  }

  self->_txAppPktSucess = *((_DWORD *)v4 + 5);
  *(_WORD *)&self->_has |= 8u;
  char v5 = *((_WORD *)v4 + 24);
  if ((v5 & 0x40) == 0)
  {
LABEL_7:
    if ((v5 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
}
}

  unint64_t v12 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_attachAttempts));
  [v3 setObject:v12 forKey:@"attach_attempts"];

  has = (__int16)self->_has;
  if ((has & 0x80) == 0)
  {
LABEL_8:
    if ((has & 2) == 0) {
      goto LABEL_9;
    }
LABEL_19:
    int v14 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_betterPartitionAttachAttempts));
    [v3 setObject:v14 forKey:@"better_partition_attach_attempts"];

    if ((*(_WORD *)&self->_has & 0x40) == 0) {
      return v3;
    }
    goto LABEL_10;
  }

  PBDataWriterWriteUint32Field(v5, self->_attachAttempts, 6LL);
  has = (__int16)self->_has;
  if ((has & 0x80) == 0)
  {
LABEL_8:
    if ((has & 2) == 0) {
      goto LABEL_9;
    }
LABEL_19:
    PBDataWriterWriteUint32Field(v5, self->_betterPartitionAttachAttempts, 8LL);
    if ((*(_WORD *)&self->_has & 0x40) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }

  _OWORD v4[2] = self->_attachAttempts;
  *((_WORD *)v4 + 22) |= 1u;
  has = (__int16)self->_has;
  if ((has & 0x80) == 0)
  {
LABEL_8:
    if ((has & 2) == 0) {
      goto LABEL_9;
    }
LABEL_19:
    v4[3] = self->_betterPartitionAttachAttempts;
    *((_WORD *)v4 + 22) |= 2u;
    if ((*(_WORD *)&self->_has & 0x40) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }

  *((_DWORD *)result + 2) = self->_attachAttempts;
  *((_WORD *)result + 22) |= 1u;
  has = (__int16)self->_has;
  if ((has & 0x80) == 0)
  {
LABEL_8:
    if ((has & 2) == 0) {
      goto LABEL_9;
    }
    goto LABEL_19;
  }

  unint64_t v9 = 0LL;
  if ((has & 2) == 0) {
    goto LABEL_18;
  }
LABEL_9:
  char v10 = 2654435761LL * self->_betterPartitionAttachAttempts;
  if ((has & 0x40) == 0) {
    goto LABEL_19;
  }
LABEL_10:
  BOOL v11 = 2654435761LL * self->_parentChangesCount;
  return v4 ^ v3 ^ v5 ^ v6 ^ v7 ^ v8 ^ v9 ^ v10 ^ v11;
}

  self->_attachAttempts = *((_DWORD *)v4 + 2);
  *(_WORD *)&self->_has |= 1u;
  char v5 = *((_WORD *)v4 + 22);
  if ((v5 & 0x80) == 0)
  {
LABEL_8:
    if ((v5 & 2) == 0) {
      goto LABEL_9;
    }
LABEL_19:
    self->_betterPartitionAttachAttempts = *((_DWORD *)v4 + 3);
    *(_WORD *)&self->_has |= 2u;
    if ((*((_WORD *)v4 + 22) & 0x40) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }

  return count;
}

  return count;
}

  int v15 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_coexTxGrantedRequests));
  [v3 setObject:v15 forKey:@"coex_tx_granted_requests"];

  has = (__int16)self->_has;
  if ((has & 8) == 0)
  {
LABEL_5:
    if ((has & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_19;
  }

  v4[18] = self->_coexTxGrantedRequests;
  *((_WORD *)v4 + 50) |= 0x10u;
  has = (__int16)self->_has;
  if ((has & 8) == 0)
  {
LABEL_5:
    if ((has & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_19;
  }

  int v4 = 0LL;
  if ((*(_WORD *)&self->_has & 0x200) != 0)
  {
LABEL_7:
    char v5 = 2654435761LL * self->_rxErrUnknownNeighbor;
    if ((has & 0x10) != 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }

  if (data != v8 || size != v9) {
    return 1LL;
  }
  if (a3[1].__r_.__value_.__r.__words[0] != *(void *)(a4 + 24)
    || a3[1].__r_.__value_.__l.__size_ != *(void *)(a4 + 32))
  {
    return 0xFFFFFFFFLL;
  }

  return 0LL;
}

  if (data != v8 || size != v9) {
    return 1LL;
  }
  if (a3[1].__r_.__value_.__r.__words[0] != *(void *)(a4 + 24)
    || a3[1].__r_.__value_.__l.__size_ != *(void *)(a4 + 32))
  {
    return 0xFFFFFFFFLL;
  }

  return 0LL;
}

  return v25;
}

      unint64_t v12 = (char *)v12 + 1;
    }

    while (v10 != v12);
    char v10 = [obj countByEnumeratingWithState:&v37 objects:v47 count:16];
    if (v10) {
      continue;
    }
    break;
  }

  char v27 = 1;
LABEL_22:
  uint64_t v8 = v29;
LABEL_24:

LABEL_25:
  return v27;
}

              LOBYTE(v2) = 0;
LABEL_56:

              goto LABEL_57;
            }

            goto LABEL_20;
          }
        }
      }

  uint64_t v19 = dispatch_queue_attr_make_with_qos_class(0LL, QOS_CLASS_USER_INITIATED, 0);
  unint64_t v20 = (dispatch_queue_attr_s *)objc_claimAutoreleasedReturnValue(v19);
  char v21 = (OS_dispatch_queue *)dispatch_queue_create("checkPreferred.ThreadNetwork.Queue", v20);
  checkPreferredThreadNetworkTimerQueue = self->_checkPreferredThreadNetworkTimerQueue;
  self->_checkPreferredThreadNetworkTimerQueue = v21;

  unsigned int v23 = (dispatch_queue_s *)self->_checkPreferredThreadNetworkTimerQueue;
  if (!v23)
  {
    uint64_t v24 = sub_1000160F4("com.apple.wpantund.tdm", "default");
    uint64_t v25 = (os_log_s *)objc_claimAutoreleasedReturnValue(v24);
    if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR)) {
      sub_1001EF154(v25, v26, v27, v28, v29, v30, v31, v32);
    }

    unsigned int v23 = (dispatch_queue_s *)self->_checkPreferredThreadNetworkTimerQueue;
  }

  char v33 = (OS_dispatch_source *)dispatch_source_create( (dispatch_source_type_t)&_dispatch_source_type_timer,  0LL,  0LL,  v23);
  checkPreferredThreadNetworkTimer = self->_checkPreferredThreadNetworkTimer;
  self->_checkPreferredThreadNetworkTimer = v33;

  unsigned int v35 = self->_checkPreferredThreadNetworkTimer;
  if (!v35)
  {
    uint64_t v36 = sub_1000160F4("com.apple.wpantund.tnm", "default");
    uint64_t v37 = (os_log_s *)objc_claimAutoreleasedReturnValue(v36);
    if (os_log_type_enabled(v37, OS_LOG_TYPE_ERROR)) {
      sub_1001EF0E0();
    }

    unsigned int v35 = self->_checkPreferredThreadNetworkTimer;
  }

  dispatch_source_set_timer((dispatch_source_t)v35, v8, 0x13ADC1B2F200uLL, 0LL);
  unint64_t v38 = self->_checkPreferredThreadNetworkTimer;
  handler[0] = _NSConcreteStackBlock;
  handler[1] = 3221225472LL;
  handler[2] = sub_1001E6A8C;
  handler[3] = &unk_1002B5570;
  handler[4] = self;
  dispatch_source_set_event_handler((dispatch_source_t)v38, handler);
  char v39 = sub_1000160F4("com.apple.wpantund.tnm", "default");
  char v40 = (os_log_s *)objc_claimAutoreleasedReturnValue(v39);
  if (os_log_type_enabled(v40, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)__n128 buf = 136315394;
    uint64_t v43 = "-[ThreadNetworkManagerInstance initCheckPreferredTimer]";
    unint64_t v44 = 1024;
    char v45 = 6075;
    _os_log_impl( (void *)&_mh_execute_header,  v40,  OS_LOG_TYPE_INFO,  "%s:%d : activating self heal thread network timer",  buf,  0x12u);
  }

  dispatch_activate((dispatch_object_t)self->_checkPreferredThreadNetworkTimer);
}

  char v22 = dispatch_queue_attr_make_with_qos_class(0LL, QOS_CLASS_USER_INITIATED, 0);
  unsigned int v23 = (dispatch_queue_attr_s *)objc_claimAutoreleasedReturnValue(v22);
  uint64_t v24 = (OS_dispatch_queue *)dispatch_queue_create("selfHeal.ThreadNetwork.Queue", v23);
  selfHealThreadNetworkTimerQueue = self->_selfHealThreadNetworkTimerQueue;
  self->_selfHealThreadNetworkTimerQueue = v24;

  unint64_t v26 = (dispatch_queue_s *)self->_selfHealThreadNetworkTimerQueue;
  if (!v26)
  {
    char v33 = sub_1000160F4("com.apple.wpantund.tnm", "default");
    char v34 = (os_log_s *)objc_claimAutoreleasedReturnValue(v33);
    if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR)) {
      sub_1001F0AD4(v34, v35, v36, v37, v38, v39, v40, v41);
    }

    __assert_rtn( "-[ThreadNetworkManagerSelfHealHandler initSelfHealThreadNetworkTimer]",  "ThreadNetworkManager_SelfHealHandler.mm",  91,  "false");
  }

  char v27 = (OS_dispatch_source *)dispatch_source_create( (dispatch_source_type_t)&_dispatch_source_type_timer,  0LL,  0LL,  v26);
  selfHealThreadNetworkTimer = self->_selfHealThreadNetworkTimer;
  self->_selfHealThreadNetworkTimer = v27;

  unsigned int v29 = self->_selfHealThreadNetworkTimer;
  if (!v29)
  {
    uint64_t v42 = sub_1000160F4("com.apple.wpantund.tnm", "default");
    uint64_t v43 = (os_log_s *)objc_claimAutoreleasedReturnValue(v42);
    if (os_log_type_enabled(v43, OS_LOG_TYPE_ERROR)) {
      sub_1001F0B44();
    }

    __assert_rtn( "-[ThreadNetworkManagerSelfHealHandler initSelfHealThreadNetworkTimer]",  "ThreadNetworkManager_SelfHealHandler.mm",  99,  "false");
  }

  dispatch_source_set_timer((dispatch_source_t)v29, v11, 0x2260FF9290000uLL, 0LL);
  uint64_t v30 = self->_selfHealThreadNetworkTimer;
  handler[0] = _NSConcreteStackBlock;
  handler[1] = 3221225472LL;
  handler[2] = sub_1001F04A8;
  handler[3] = &unk_1002B5570;
  handler[4] = self;
  dispatch_source_set_event_handler((dispatch_source_t)v30, handler);
  uint64_t v31 = sub_1000160F4("com.apple.wpantund.tnm", "default");
  unint64_t v32 = (os_log_s *)objc_claimAutoreleasedReturnValue(v31);
  if (os_log_type_enabled(v32, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)__n128 buf = 136315394;
    char v46 = "-[ThreadNetworkManagerSelfHealHandler initSelfHealThreadNetworkTimer]";
    unsigned int v47 = 1024;
    uint64_t v48 = 114;
    _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_INFO,  "%s:%d : activating self heal thread network timer",  buf,  0x12u);
  }

  dispatch_activate((dispatch_object_t)self->_selfHealThreadNetworkTimer);
}

LABEL_19:
  int v4 = 0LL;
LABEL_20:
  char v5 = PBRepeatedUInt32Hash(&self->_txPacketCountHistograms, a2);
  uint64_t v7 = PBRepeatedUInt32Hash(&self->_txDirectRetryAttemptsHistograms, v6);
  unint64_t v9 = PBRepeatedUInt32Hash(&self->_txIndirectRetryAttemptsHistograms, v8);
  BOOL v11 = PBRepeatedUInt32Hash(&self->_txCcaEnergyDetectedHistograms, v10);
  uint64_t v13 = PBRepeatedUInt32Hash(&self->_txDirectNoackHistograms, v12);
  int v15 = PBRepeatedUInt32Hash(&self->_txDirectChannelaccessfailureHistograms, v14);
  unsigned int v17 = PBRepeatedUInt32Hash(&self->_txCsmaBackoffHistograms, v16);
  uint64_t v18 = self->_has;
  if ((*(_BYTE *)&v18 & 0x40) != 0)
  {
    uint64_t v19 = 2654435761LL * self->_cslTxTotal;
    if ((*(_BYTE *)&v18 & 0x20) != 0)
    {
LABEL_22:
      unint64_t v20 = 2654435761LL * self->_cslTxErrNoack;
      if ((*(_BYTE *)&v18 & 0x10) != 0) {
        goto LABEL_23;
      }
      goto LABEL_34;
    }
  }

  else
  {
    uint64_t v19 = 0LL;
    if ((*(_BYTE *)&v18 & 0x20) != 0) {
      goto LABEL_22;
    }
  }

  unint64_t v20 = 0LL;
  if ((*(_BYTE *)&v18 & 0x10) != 0)
  {
LABEL_23:
    char v21 = 2654435761LL * self->_cslTxErrCca;
    if ((*(_BYTE *)&v18 & 4) != 0) {
      goto LABEL_24;
    }
    goto LABEL_35;
  }

  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_txDelaymax));
  [v3 setObject:v13 forKey:@"tx_delaymax"];

  has = (__int16)self->_has;
  if ((has & 0x10) == 0)
  {
LABEL_9:
    if ((has & 0x200) == 0) {
      goto LABEL_10;
    }
LABEL_21:
    int v15 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_txSuccessRate));
    [v3 setObject:v15 forKey:@"tx_success_rate"];

    if ((*(_WORD *)&self->_has & 4) == 0) {
      return v3;
    }
    goto LABEL_11;
  }

  PBDataWriterWriteUint32Field(v5, self->_txDelaymax, 7LL);
  has = (__int16)self->_has;
  if ((has & 0x10) == 0)
  {
LABEL_9:
    if ((has & 0x200) == 0) {
      goto LABEL_10;
    }
LABEL_21:
    PBDataWriterWriteUint32Field(v5, self->_txSuccessRate, 9LL);
    if ((*(_WORD *)&self->_has & 4) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }

  v4[7] = self->_txDelaymax;
  *((_WORD *)v4 + 24) |= 0x20u;
  has = (__int16)self->_has;
  if ((has & 0x10) == 0)
  {
LABEL_9:
    if ((has & 0x200) == 0) {
      goto LABEL_10;
    }
LABEL_21:
    v4[11] = self->_txSuccessRate;
    *((_WORD *)v4 + 24) |= 0x200u;
    if ((*(_WORD *)&self->_has & 4) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }

  *((_DWORD *)result + 7) = self->_txDelaymax;
  *((_WORD *)result + 24) |= 0x20u;
  has = (__int16)self->_has;
  if ((has & 0x10) == 0)
  {
LABEL_9:
    if ((has & 0x200) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }

  char v10 = 0LL;
  if ((*(_WORD *)&self->_has & 0x200) == 0) {
    goto LABEL_20;
  }
LABEL_10:
  BOOL v11 = 2654435761LL * self->_txSuccessRate;
  if ((has & 4) == 0) {
    goto LABEL_21;
  }
LABEL_11:
  unint64_t v12 = 2654435761LL * self->_rxSuccessRate;
  return v4 ^ v3 ^ v5 ^ v6 ^ v7 ^ v8 ^ v9 ^ v10 ^ v11 ^ v12;
}

  self->_txDelaymax = *((_DWORD *)v4 + 7);
  *(_WORD *)&self->_has |= 0x20u;
  char v5 = *((_WORD *)v4 + 24);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x200) == 0) {
      goto LABEL_10;
    }
LABEL_21:
    self->_txSuccessRate = *((_DWORD *)v4 + 11);
    *(_WORD *)&self->_has |= 0x200u;
    if ((*((_WORD *)v4 + 24) & 4) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }

            char v21 = sub_1000D8DE8(a1);
            if (sub_1000B5104(v21)) {
              goto LABEL_21;
            }
            void *v2 = 0;
            *(_DWORD *)(v2 + 2) = 0;
            char v22 = sub_1000ACC28(v4);
            unsigned int v23 = (*(uint64_t (**)(uint64_t))(*(void *)v22 + 72LL))(v22);
            sub_10011DA1C((uint64_t)v3, v23);
            int v14 = 170;
            goto LABEL_22;
          }

          uint64_t v49 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (v49)
          {
            unint64_t v50 = v49;
          }

          else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
          {
            sub_1001FB53C();
          }

          uint64_t v54 = *(_DWORD *)(v2 + 2);
          uint64_t v55 = v54 + 2;
          if (v54 >= 0xFFFFFFFE)
          {
            __break(0x5500u);
            goto LABEL_90;
          }

          unint64_t v56 = 0LL;
          *(_DWORD *)(v2 + 2) = v55;
          char v57 = v54 + 2;
          while (v56 != 1300)
          {
            char v58 = *(unsigned __int8 *)(a1 + 67458 + v56);
            if ((v58 - 7) >= 7 && v58 != 0 && (char)v58 <= 31)
            {
              unint64_t v62 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
              if (v62)
              {
                char v63 = v62;
                if ((sub_10015A058(3) & 1) != 0 && os_log_type_enabled(v63, OS_LOG_TYPE_ERROR)) {
                  sub_10020C9D0((unsigned __int8 *)(a1 + v56 + 67458), v56, v63);
                }
              }

              else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
              {
                sub_1001FB53C();
              }

              char v57 = v56;
LABEL_73:
              if (v57 == *(_DWORD *)(v2 + 2)) {
                sub_10004E00C((char *)(a1 + 67458), v57);
              }
              goto LABEL_19;
            }

            if (v55 == ++v56) {
              goto LABEL_73;
            }
          }
        }

  __break(0x5512u);
  return result;
}

  char v5 = 0LL;
  if ((has & 0x40) != 0)
  {
LABEL_5:
    unsigned int v6 = 2654435761LL * self->_rtt90perc;
    if ((has & 0x20) != 0) {
      goto LABEL_6;
    }
    goto LABEL_21;
  }

  *((_DWORD *)result + 3) = self->_betterPartitionAttachAttempts;
  *((_WORD *)result + 22) |= 2u;
  if ((*(_WORD *)&self->_has & 0x40) == 0) {
    return result;
  }
LABEL_10:
  *((_DWORD *)result + 8) = self->_parentChangesCount;
  *((_WORD *)result + 22) |= 0x40u;
  return result;
}

  unsigned int v17 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_coexRxRequests));
  [v3 setObject:v17 forKey:@"coex_rx_requests"];

  has = (__int16)self->_has;
  if ((has & 2) == 0)
  {
LABEL_7:
    if ((has & 1) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }

  v4[16] = self->_coexRxRequests;
  *((_WORD *)v4 + 50) |= 4u;
  has = (__int16)self->_has;
  if ((has & 2) == 0)
  {
LABEL_7:
    if ((has & 1) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }

  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_rxBroadcast));
  [v3 setObject:v13 forKey:@"rx_broadcast"];

  has = (__int16)self->_has;
  if ((has & 8) == 0)
  {
LABEL_6:
    if ((has & 0x200) == 0) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }

  v4[8] = self->_rxBroadcast;
  *((_WORD *)v4 + 40) |= 1u;
  has = (__int16)self->_has;
  if ((has & 8) == 0)
  {
LABEL_6:
    if ((has & 0x200) == 0) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }

  unsigned int v6 = 0LL;
  if ((*(_WORD *)&self->_has & 0x100) != 0)
  {
LABEL_9:
    uint64_t v7 = 2654435761LL * self->_rxErrSecurity;
    if ((has & 0x20) != 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }

  __p.__r_.__value_.__r.__words[0] = 0LL;
  __p.__r_.__value_.__l.__size_ = (std::string::size_type)&__p;
  __p.__r_.__value_.__l.__cap_ = 0x2000000000LL;
  unsigned int v35 = TelephonyUtilGetSystemTime(v8);
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1174405120LL;
  aBlock[2] = sub_1001345E0;
  aBlock[3] = &unk_1002B40E0;
  aBlock[4] = &__p;
  std::string::basic_string(&v31, a2);
  char v16 = _Block_copy(aBlock);
  unsigned int v17 = *(dispatch_object_s **)(a1 + 32);
  if (v17) {
    dispatch_retain(*(dispatch_object_t *)(a1 + 32));
  }
  unint64_t v32 = v16;
  char v33 = v17;
  if (__OFADD__(qword_1002C9898, 1LL) || (++qword_1002C9898, __OFADD__(qword_1002C98A0, 1LL))) {
    __break(0x5500u);
  }
  ++qword_1002C98A0;
  uint64_t v18 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v18)
  {
    if (sub_10015A058(5))
    {
      uint64_t v19 = os_log_type_enabled(v18, OS_LOG_TYPE_INFO);
      if (v19)
      {
        unint64_t v20 = a2;
        char v21 = TelephonyUtilGetSystemTime(v19);
        *(_DWORD *)__n128 buf = 136315906;
        unint64_t v38 = v20;
        char v39 = 2048;
        char v40 = v21;
        unsigned int v41 = 2048;
        uint64_t v42 = qword_1002C9898;
        uint64_t v43 = 2048;
        unint64_t v44 = qword_1002C98A0;
        _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_INFO,  "Posting event (%s) to Internal Broadcast Event Handler, at: %llu, numPendingEventsToBeSent: %lld numPendingEve ntsToRcvResponse : %lld",  buf,  0x2Au);
      }
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  char v22 = *(dispatch_queue_s **)(a1 + 40);
  v25[0] = _NSConcreteStackBlock;
  v25[1] = 1174405120LL;
  __int128 v25[2] = sub_100134740;
  v25[3] = &unk_1002B4110;
  v25[4] = a1;
  std::string::basic_string(&v26, a2);
  unsigned int v23 = *a3;
  if (*a3) {
    unsigned int v23 = (*(uint64_t (**)(uint64_t))(*(void *)v23 + 24LL))(v23);
  }
  char v27 = v23;
  if (v16) {
    uint64_t v24 = _Block_copy(v16);
  }
  else {
    uint64_t v24 = 0LL;
  }
  char v28 = v24;
  dispatch_object_t object = v17;
  if (v17) {
    dispatch_retain(v17);
  }
  dispatch_async(v22, v25);
  if (object) {
    dispatch_release(object);
  }
  if (v28) {
    _Block_release(v28);
  }
  if (v27) {
    (*(void (**)(uint64_t))(*(void *)v27 + 8LL))(v27);
  }
  if (v17) {
    dispatch_release(v17);
  }
  if (v16) {
    _Block_release(v16);
  }
  _Block_object_dispose(&__p, 8);
}

  if ((a3 & 4) != 0 || (a3 & 3) == 2) {
    int v15 = 16778753;
  }
  else {
    int v15 = 16780801;
  }
  do
  {
    else {
      char v16 = *(const char **)a2;
    }
    uint64_t v13 = open(v16, v15, st_mode | 0x80u);
    uint64_t v25 = v13;
    if ((v13 & 0x80000000) == 0)
    {
      uint64_t v18 = 0;
      goto LABEL_37;
    }

    char v10 = *__error();
  }

  while (v10 == 4);
  if (v10 != 17) {
    goto LABEL_33;
  }
  if ((a3 & 1) == 0) {
    goto LABEL_32;
  }
LABEL_34:
  unsigned int v17 = 0LL;
LABEL_59:
  sub_10016CB10(&v25);
  sub_10016CB10(&v26);
  return v17;
}

  uint64_t v30 = sub_1001768B4(1);
  unsigned int v29 = (os_log_s *)objc_claimAutoreleasedReturnValue(v30);
  if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)__n128 buf = 136316162;
    uint64_t v87 = "+[THThreadNetworkCredentialsActiveDataSetRecord(Keychain) activeDataSetRecordFromKeychainDictionary:]";
    unint64_t v88 = 1024;
    char v89 = 158;
    uint64_t v90 = 2112;
    char v91 = v8;
    unsigned int v92 = 2112;
    uint64_t v93 = v84;
    uint64_t v94 = 2112;
    unint64_t v95 = v25;
    _os_log_error_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_ERROR,  "%s:%d: This is not a Credentials DataSet record, (name=%@; xpanid=%@; uuid=%@)!",
      buf,
      0x30u);
  }

  uint64_t v31 = 0LL;
LABEL_22:

  objc_autoreleasePoolPop(v4);
  return v31;
}
}

    uint64_t v18 = sub_1001768B4(1);
    int v15 = (os_log_s *)objc_claimAutoreleasedReturnValue(v18);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)__n128 buf = 136315394;
      uint64_t v25 = "-[THThreadNetworkCredentialsKeychainBackingStore dumpPreferredNetworksArray:]";
      unint64_t v26 = 1024;
      char v27 = 3660;
      _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_INFO,  "%s:%d: ==================================",  buf,  0x12u);
    }
  }

  else
  {
    int v14 = sub_1001768B4(1);
    int v15 = (os_log_s *)objc_claimAutoreleasedReturnValue(v14);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
      sub_100197D00();
    }
  }
}

    uint64_t v18 = sub_1001768B4(1);
    int v15 = (os_log_s *)objc_claimAutoreleasedReturnValue(v18);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)__n128 buf = 136315394;
      uint64_t v25 = "-[THThreadNetworkCredentialsKeychainBackingStore dumpPreferredNetworks:]";
      unint64_t v26 = 1024;
      char v27 = 3684;
      _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_INFO,  "%s:%d: ==================================",  buf,  0x12u);
    }
  }

  else
  {
    int v14 = sub_1001768B4(1);
    int v15 = (os_log_s *)objc_claimAutoreleasedReturnValue(v14);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
      sub_100197DE8();
    }
  }
}

    unsigned int v17 = (os_log_s *)sub_1000160F4("com.apple.wpantund.commissioning", "commissioning");
    if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
    {
      uint64_t v18 = 0xF0F0F0F0F0F0F0F1LL * ((uint64_t)(*((void *)this + 2) - *((void *)this + 1)) >> 3);
      uint64_t v19 = 134217984;
      unint64_t v20 = (const char *)v18;
      _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_INFO,  "mServices size DiscardService after %lu",  (uint8_t *)&v19,  0xCu);
    }

    if (a4) {
      sub_1001FA6DC();
    }
  }

  else if (v9)
  {
    int v14 = 0xF0F0F0F0F0F0F0F1LL * ((uint64_t)(*((void *)this + 2) - *((void *)this + 1)) >> 3);
    uint64_t v19 = 136316418;
    unint64_t v20 = "void ot::BorderRouter::Mdns::PublisherMDnsSd::DiscardService(const char *, const char *, DNSServiceRef)";
    char v21 = 1024;
    char v22 = 327;
    unsigned int v23 = 2080;
    uint64_t v24 = a2;
    uint64_t v25 = 2080;
    unint64_t v26 = a3;
    char v27 = 2048;
    char v28 = a4;
    unsigned int v29 = 2048;
    uint64_t v30 = v14;
    _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_INFO,  "%s:%d: Error : Can not discard the service, nil input parameters passed (aName : %s, aType %s : aServiceRef : %p), mService size %lu",  (uint8_t *)&v19,  0x3Au);
  }

LABEL_34:
  char v21 = 0LL;
  if ((*(_BYTE *)&v18 & 4) != 0)
  {
LABEL_24:
    char v22 = 2654435761LL * self->_cslTxErrAbort;
    if ((*(_BYTE *)&v18 & 8) != 0) {
      goto LABEL_25;
    }
    goto LABEL_36;
  }

    if (sub_100159F84(a1 + 32)) {
      goto LABEL_155;
    }
    char v16 = 1;
    goto LABEL_36;
  }

  if (v10 == 194)
  {
LABEL_138:
    if ((a2 | 0x1000000) == 0xFF0000C2)
    {
      uint64_t v48 = 0;
    }

    else
    {
      if (sub_100159F84(a1 + 32)) {
        goto LABEL_155;
      }
      uint64_t v48 = 1;
    }

    sub_10015A00C(a1 + 32);
    if (v48)
    {
      uint64_t v49 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v49)
      {
        goto LABEL_183;
      }

      if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        goto LABEL_183;
      }
LABEL_174:
      sub_1001FF028();
      goto LABEL_183;
    }

    if (a2 != -16777022)
    {
      char v58 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v58)
      {
        goto LABEL_183;
      }

      if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        goto LABEL_183;
      }
      goto LABEL_174;
    }

    sub_100159FC0(a1 + 32, 30.0);
    *(_WORD *)(v6 + 982) = 195;
    goto LABEL_147;
  }

  if (v10 != 195) {
    goto LABEL_190;
  }
  if (HIBYTE(a2) == 171 && *(unsigned __int8 *)(a1 + 68758) == *(unsigned __int8 *)(a1 + 67457))
  {
    int v15 = 0;
LABEL_149:
    sub_10015A00C(a1 + 32);
    if (v15)
    {
      unint64_t v56 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v56)
      {
        goto LABEL_183;
      }

      if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        goto LABEL_183;
      }
      goto LABEL_174;
    }

    if (sub_10004ECBC(a2, a3, v50, v51, v52, v53, v54, v55))
    {
      char v57 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v57)
      {
        goto LABEL_183;
      }

      if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        goto LABEL_183;
      }
      goto LABEL_174;
    }

    goto LABEL_161;
  }

    std::string::append(&v55, "\n");
    a1 = (_WORD *)((char *)a1 + v14);
  }

  char v34 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v34)
  {
    if (sub_10015A058(6) && os_log_type_enabled(v34, OS_LOG_TYPE_INFO))
    {
      unsigned int v35 = &v55;
      if ((v55.__r_.__value_.__s.__size_ & 0x80u) != 0) {
        unsigned int v35 = (std::string *)v55.__r_.__value_.__r.__words[0];
      }
      LODWORD(v59.__r_.__value_.__l.__data_) = 136315138;
      *(std::string::size_type *)((char *)v59.__r_.__value_.__r.__words + 4) = (std::string::size_type)v35;
      _os_log_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_INFO, "Structure string : %s", (uint8_t *)&v59, 0xCu);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  if (a4) {
    sub_10005653C(a3, (uint64_t *)&v56);
  }
  else {
    sub_1000200A0(a3, &v55);
  }
  unsigned int v41 = 0LL;
LABEL_66:
  sub_10000D448((uint64_t)&v56);
  sub_10000C0E8(v58);
  return v41;
}

  if (SHIBYTE(cap) < 0) {
    operator delete(__p[0]);
  }
LABEL_36:
  if (v24) {
    sub_10000ABAC(v24);
  }
}

    char v63 = objc_claimAutoreleasedReturnValue(-[__CFDictionary credentialsDataSet](v31, "credentialsDataSet"));
    if (v63)
    {
      char v64 = (void *)v63;
      unsigned int v65 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) credentialsDataSet]);
      if (v65)
      {
        uint64_t v66 = (void *)v65;
        uint64_t v67 = (void *)objc_claimAutoreleasedReturnValue(-[__CFDictionary credentialsDataSet](v31, "credentialsDataSet"));
        unint64_t v68 = (void *)objc_claimAutoreleasedReturnValue([v67 dataSetArray]);
        if ([v68 length])
        {
          char v69 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) credentialsDataSet]);
          char v70 = (void *)objc_claimAutoreleasedReturnValue([v69 dataSetArray]);
          if ([v70 length])
          {
            unint64_t v102 = (void *)objc_claimAutoreleasedReturnValue(-[__CFDictionary credentialsDataSet](v31, "credentialsDataSet"));
            unsigned int v71 = (void *)objc_claimAutoreleasedReturnValue([v102 dataSetArray]);
            uint64_t v72 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) credentialsDataSet]);
            uint64_t v100 = v69;
            uint64_t v73 = (void *)objc_claimAutoreleasedReturnValue([v72 dataSetArray]);
            uint64_t v104 = [v71 isEqualToData:v73];

            if ((v104 & 1) == 0)
            {
              unint64_t v74 = sub_1001768B4(1);
              char v75 = (os_log_s *)objc_claimAutoreleasedReturnValue(v74);
              if (os_log_type_enabled(v75, OS_LOG_TYPE_ERROR)) {
                sub_100194EE4();
              }

              uint64_t v76 = sub_1001768B4(1);
              char v77 = (os_log_s *)objc_claimAutoreleasedReturnValue(v76);
              if (os_log_type_enabled(v77, OS_LOG_TYPE_INFO))
              {
                *(_DWORD *)__n128 buf = 136315394;
                unsigned int v106 = "-[THThreadNetworkCredentialsKeychainBackingStore storeThreadCredentialActiveDataSetRecord:waitFor"
                       "Sync:completion:]_block_invoke";
                uint64_t v107 = 1024;
                uint64_t v108 = 1441;
                _os_log_impl( (void *)&_mh_execute_header,  v77,  OS_LOG_TYPE_INFO,  "%s:%d: prefRecord =======>",  buf,  0x12u);
              }

              [*(id *)(a1 + 40) thDumpActiveDatasetRecord:v31];
              unsigned int v78 = sub_1001768B4(1);
              uint64_t v79 = (os_log_s *)objc_claimAutoreleasedReturnValue(v78);
              if (os_log_type_enabled(v79, OS_LOG_TYPE_INFO))
              {
                *(_DWORD *)__n128 buf = 136315394;
                unsigned int v106 = "-[THThreadNetworkCredentialsKeychainBackingStore storeThreadCredentialActiveDataSetRecord:waitFor"
                       "Sync:completion:]_block_invoke";
                uint64_t v107 = 1024;
                uint64_t v108 = 1444;
                _os_log_impl( (void *)&_mh_execute_header,  v79,  OS_LOG_TYPE_INFO,  "%s:%d: Incoming record =====>",  buf,  0x12u);
              }

              [*(id *)(a1 + 40) thDumpActiveDatasetRecord:*(void *)(a1 + 32)];
            }

            goto LABEL_49;
          }
        }
      }
    }

              char v28 = (os_log_s *)objc_claimAutoreleasedReturnValue(-[ThreadNetworkManagerInstance getCurrentBorderAgent](self, "getCurrentBorderAgent"));
              if (v28)
              {
                uint64_t v31 = (os_log_s *)objc_claimAutoreleasedReturnValue( -[ThreadNetworkManagerInstance getCurrentNetworkNameAndXpanid]( self,  "getCurrentNetworkNameAndXpanid"));
                if (v31)
                {
                  unint64_t v32 = 1;
                  while (1)
                  {
                    char v33 = v32;
                    if (self->_lastKnownNCPState == 8)
                    {
                      char v34 = sub_1000160F4("com.apple.wpantund.tnm", "default");
                      unsigned int v35 = (os_log_s *)objc_claimAutoreleasedReturnValue(v34);
                      if (os_log_type_enabled(v35, OS_LOG_TYPE_INFO))
                      {
                        *(_DWORD *)__n128 buf = 136315394;
                        unint64_t v62 = "-[ThreadNetworkManagerInstance updatePreferredNetworkForDatasetChange]";
                        char v63 = 1024;
                        char v64 = 4732;
                        _os_log_impl( (void *)&_mh_execute_header,  v35,  OS_LOG_TYPE_INFO,  "%s:%d: Active DataSet change event - Updating keychain store\n",  buf,  0x12u);
                      }

                      uint64_t v36 = dispatch_semaphore_create(0LL);
                      keyChainStore = self->_keyChainStore;
                      v49[0] = _NSConcreteStackBlock;
                      v49[1] = 3221225472LL;
                      v49[2] = sub_1001DE460;
                      v49[3] = &unk_1002B5A48;
                      char v52 = v53;
                      char v51 = &v55;
                      uint64_t v49[4] = self;
                      unint64_t v38 = v36;
                      unint64_t v50 = v38;
                      -[THThreadNetworkCredentialsStoreLocalClient updatePreferredNetworkWithNewDataset:network:credentialsDataSet:completion:]( keyChainStore,  "updatePreferredNetworkWithNewDataset:network:credentialsDataSet:completion:",  v28,  v31,  v14,  v49);
                      char v39 = dispatch_time(0LL, 150000000000LL);
                      if (dispatch_semaphore_wait(v38, v39))
                      {
                        char v40 = sub_1000160F4("com.apple.wpantund.tnm", "default");
                        unsigned int v41 = (os_log_s *)objc_claimAutoreleasedReturnValue(v40);
                        if (os_log_type_enabled(v41, OS_LOG_TYPE_ERROR))
                        {
                          *(_DWORD *)__n128 buf = 136315394;
                          unint64_t v62 = "-[ThreadNetworkManagerInstance updatePreferredNetworkForDatasetChange]";
                          char v63 = 1024;
                          char v64 = 4754;
                          _os_log_error_impl( (void *)&_mh_execute_header,  v41,  OS_LOG_TYPE_ERROR,  "%s:%d:  Error, semaphore wait timed out ",  buf,  0x12u);
                        }

                        uint64_t v42 = 0;
                        LOBYTE(v2) = 0;
                      }

                      else
                      {
                        uint64_t v43 = v56[5];
                        uint64_t v42 = v43 != 0;
                        LOBYTE(v2) = (v43 == 0) | v2;
                      }

                      if (!v42) {
                        goto LABEL_54;
                      }
                    }

                    unint64_t v32 = 0;
                    if ((v33 & 1) == 0)
                    {
                      LOBYTE(v2) = 0;
                      goto LABEL_54;
                    }
                  }
                }

                char v45 = sub_1000160F4("com.apple.wpantund.tnm", "commissioning");
                char v46 = (os_log_s *)objc_claimAutoreleasedReturnValue(v45);
                if (os_log_type_enabled(v46, OS_LOG_TYPE_ERROR)) {
                  sub_1001EE774();
                }
              }

              else
              {
                unint64_t v44 = sub_1000160F4("com.apple.wpantund.tnm", "commissioning");
                uint64_t v31 = (os_log_s *)objc_claimAutoreleasedReturnValue(v44);
                if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR)) {
                  sub_1001EE700();
                }
              }

              LOBYTE(v2) = 0;
LABEL_54:

              goto LABEL_55;
            }
          }

          goto LABEL_34;
        }

        uint64_t v30 = sub_1000160F4("com.apple.wpantund.tnm", "commissioning");
        char v28 = (os_log_s *)objc_claimAutoreleasedReturnValue(v30);
        if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
          sub_1001EE68C();
        }
      }

      else
      {
        unsigned int v29 = sub_1000160F4("com.apple.wpantund.tnm", "commissioning");
        char v28 = (os_log_s *)objc_claimAutoreleasedReturnValue(v29);
        if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR)) {
          sub_1001EE618();
        }
      }

      LOBYTE(v2) = 0;
LABEL_55:

      goto LABEL_56;
    }

    char v16 = sub_1000160F4("com.apple.wpantund.tnm", "default");
    int v4 = (void *)objc_claimAutoreleasedReturnValue(v16);
    if (os_log_type_enabled((os_log_t)v4, OS_LOG_TYPE_ERROR)) {
      sub_1001EE530();
    }
  }

  else
  {
    int v15 = sub_1000160F4("com.apple.wpantund.tnm", "default");
    int v4 = (void *)objc_claimAutoreleasedReturnValue(v15);
    if (os_log_type_enabled((os_log_t)v4, OS_LOG_TYPE_ERROR)) {
      sub_1001EE4BC();
    }
  }

  LOBYTE(v2) = 0;
LABEL_57:

  _Block_object_dispose(v53, 8);
  _Block_object_dispose(&v55, 8);

  return v2 & 1;
}

uint64_t sub_10003BDC8(int *a1, int a2)
{
  int v4 = (uint64_t *)(a1 + 18176);
  unsigned int v5 = *((unsigned __int16 *)a1 + 36843);
  uint64_t v6 = 3LL;
  if (v5 > 0x67)
  {
    if (*((unsigned __int16 *)a1 + 36843) > 0x77u)
    {
      if (v5 != 120)
      {
        if (v5 != 129) {
          goto LABEL_111;
        }
        if (a2 == -1409351680) {
          goto LABEL_87;
        }
        goto LABEL_41;
      }
    }

    else
    {
      if (v5 == 104) {
        goto LABEL_84;
      }
      if (v5 != 118) {
        goto LABEL_111;
      }
LABEL_9:
      uint64_t v7 = a1 + 17522;
      if (a1[17522] > 0 || *v4)
      {
        uint64_t v8 = (uint64_t)(a1 + 8);
        if (sub_100159F84(v8)) {
          return 0LL;
        }
        sub_10015A00C(v8);
        unint64_t v9 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v9)
        {
          char v10 = v9;
          goto LABEL_110;
        }

        if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          goto LABEL_109;
        }
        goto LABEL_110;
      }

      sub_10015A00C((uint64_t)(a1 + 8));
      unsigned int v16 = *((unsigned __int8 *)a1 + 67456);
      if (v16 <= 0xE) {
        char v17 = v16 + 1;
      }
      else {
        char v17 = 1;
      }
      *((_BYTE *)a1 + 67456) = v17;
      *((_BYTE *)a1 + 67457) = v17 | 0x80;
      int v18 = spinel_datatype_pack((uint64_t)a1 + 68785, 1300LL, (uint64_t)"Ci", v11, v12, v13, v14, v15, 0LL);
      *uint64_t v7 = v18;
      if (*v4)
      {
        uint64_t v19 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v19)
        {
          unint64_t v20 = v19;
        }

        else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
          sub_1001FF028();
        }

        int v18 = *v7;
      }

      if (v18 <= 0)
      {
        uint64_t v31 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v31)
        {
          unint64_t v32 = v31;
          goto LABEL_110;
        }

        if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
LABEL_109:
        }
          sub_1001FF028();
LABEL_110:
        uint64_t v6 = 2LL;
        goto LABEL_111;
      }

      char v21 = operator new(0x20uLL);
      *char v21 = sub_1000D514C;
      v21[1] = 0LL;
      __int128 v21[2] = a1;
      *((_DWORD *)v21 + 6) = -16777096;
      v49[0] = (uint64_t)off_1002AD910;
      v49[1] = (uint64_t)v21;
      char v22 = operator new(0x20uLL);
      *char v22 = sub_1000D514C;
      v22[1] = 0LL;
      __int128 v22[2] = a1;
      *((_DWORD *)v22 + 6) = -33554312;
      v48[0] = (uint64_t)off_1002AD930;
      v48[1] = (uint64_t)v22;
      sub_100006D1C((uint64_t)sub_10003C800, v49, v48, &v50);
      sub_100007A04(&buf, &v50);
      sub_100006E08(v4, (uint64_t *)&buf);
      sub_1000075F0(&buf);
      sub_1000075F0(v52);
      sub_100007618(v51);
      sub_1000075F0(v48);
      sub_100007618(v49);
      *((_BYTE *)a1 + 68785) = *((_BYTE *)a1 + 67457);
      sub_100159FC0((uint64_t)(a1 + 8), 30.0);
      *((_WORD *)v4 + 491) = 120;
    }

    if ((a2 | 0x1000000) != 0xFF000078)
    {
      uint64_t v26 = (uint64_t)(a1 + 8);
      if (sub_100159F84(v26)) {
        return 0LL;
      }
      sub_10015A00C(v26);
      char v27 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v27)
      {
        char v28 = v27;
        goto LABEL_110;
      }

      if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        goto LABEL_110;
      }
      goto LABEL_64;
    }

    sub_10015A00C((uint64_t)(a1 + 8));
    if (a2 != -16777096)
    {
      unsigned int v29 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v29)
      {
        uint64_t v30 = v29;
        goto LABEL_110;
      }

      if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        goto LABEL_110;
      }
      goto LABEL_64;
    }

    *((_BYTE *)v4 + 1200) = 1;
    sub_100159FC0((uint64_t)(a1 + 8), 30.0);
    *((_WORD *)v4 + 491) = 129;
LABEL_41:
    uint64_t v23 = (uint64_t)(a1 + 8);
    if (sub_100159F84(v23)) {
      return 0LL;
    }
    sub_10015A00C(v23);
    uint64_t v24 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v24)
    {
      uint64_t v25 = v24;
      goto LABEL_110;
    }

    if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      goto LABEL_110;
    }
LABEL_64:
    sub_1001FF028();
    goto LABEL_110;
  }

  if (*((unsigned __int16 *)a1 + 36843) > 0x54u)
  {
    if (v5 == 85) {
      goto LABEL_75;
    }
    if (v5 == 96) {
      goto LABEL_82;
    }
    goto LABEL_111;
  }

  if (!*((_WORD *)a1 + 36843)) {
    goto LABEL_88;
  }
  if (v5 != 69)
  {
LABEL_111:
    *((_WORD *)v4 + 491) = 0;
    return v6;
  }

  while (*((_BYTE *)a1 + 1376)
       || !(*(unsigned int (**)(int *))(*(void *)a1 + 296LL))(a1)
       || !sub_100159F84((uint64_t)(a1 + 8)))
  {
    sub_10015A00C((uint64_t)(a1 + 8));
    if (*((_BYTE *)a1 + 1376)) {
      goto LABEL_91;
    }
    if ((*(unsigned int (**)(int *))(*(void *)a1 + 160LL))(a1))
    {
      unint64_t v38 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v38)
      {
        char v39 = v38;
        goto LABEL_110;
      }

      if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        goto LABEL_110;
      }
      goto LABEL_109;
    }

    (*(void (**)(int *, uint64_t))(*(void *)a1 + 128LL))(a1, 11LL);
    if (sub_1000D8DE8((uint64_t)a1) != 3 && sub_1000D8DE8((uint64_t)a1) != 1)
    {
      char v33 = operator new(0x88uLL);
      v56[0] = (char *)off_1002AECF8 + 1;
      sub_10004D468(v33, a1, v56);
      sub_1000430D8((uint64_t *)&buf, (uint64_t)v33);
      sub_10004E9A4((uint64_t)a1, (uint64_t *)&buf);
      sub_10000F9EC(v54);
      sub_100006E7C(v56);
      sub_100159FC0((uint64_t)(a1 + 8), 30.0);
      *((_WORD *)v4 + 491) = 85;
LABEL_75:
      if (sub_1000D8DE8((uint64_t)a1) != 3
        && !sub_1000561A0((uint64_t)(a1 + 18504))
        && sub_100159F84((uint64_t)(a1 + 8)))
      {
        return 0LL;
      }

      sub_10015A00C((uint64_t)(a1 + 8));
    }

    if (sub_1000D8DE8((uint64_t)a1) != 3 && sub_1000D8DE8((uint64_t)a1) != 1)
    {
      int v40 = sub_1000D8DE8((uint64_t)a1);
      if (!sub_1000B50E8(v40))
      {
        uint64_t v41 = (*(uint64_t (**)(int *))(*(void *)a1 + 24LL))(a1);
        v55[0] = (char *)off_1002AED78 + 1;
        (*(void (**)(uint64_t, void *))(*(void *)v41 + 40LL))(v41, v55);
        sub_1000075F0(v55);
      }

      goto LABEL_110;
    }

    *((_WORD *)v4 + 491) = 96;
LABEL_82:
    if ((a2 & 0xFF000000) == 0xAB000000) {
      return 0LL;
    }
    sub_100159FC0((uint64_t)(a1 + 8), 4200.0);
    *((_WORD *)v4 + 491) = 104;
LABEL_84:
    if (sub_1000D8DE8((uint64_t)a1) == 3 && (a2 & 0xFF000000) != 0xAB000000 && !*((_BYTE *)a1 + 1376))
    {
      sub_10015A00C((uint64_t)(a1 + 8));
      uint64_t v43 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v43)
      {
        unint64_t v44 = v43;
      }

      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        sub_1001FF028();
      }

      char v45 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v45)
      {
        char v46 = v45;
      }

      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        sub_1001FF028();
      }

      sub_100159FC0((uint64_t)(a1 + 8), 30.0);
      *((_WORD *)v4 + 491) = 118;
      goto LABEL_9;
    }

void sub_10003C784(_Unwind_Exception *a1)
{
}

void sub_10003C794(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
}

void sub_10003C7E4()
{
}

uint64_t sub_10003C800(int a1, void *a2, void *a3)
{
  if (a1) {
    return sub_100006FF8(a3);
  }
  else {
    return sub_100006F84(a2);
  }
}

uint64_t sub_10003C81C(uint64_t a1, unsigned int a2, unsigned int *a3)
{
  uint64_t v6 = a1 + 72704;
  uint64_t v7 = (int *)(a1 + 70088);
  uint64_t v8 = (_BYTE *)(a1 + 68785);
  unint64_t v9 = (char *)(a1 + 67456);
  uint64_t v73 = 0LL;
  unint64_t v74 = 0LL;
  uint64_t v75 = 0LL;
  unsigned int v10 = *(unsigned __int16 *)(a1 + 73686);
  uint64_t v11 = 3LL;
  if (v10 <= 0xB4)
  {
    if (*(_WORD *)(a1 + 73686))
    {
      if (v10 != 169)
      {
        if (v10 != 180) {
          goto LABEL_190;
        }
        goto LABEL_12;
      }
    }

    else
    {
      if (!*(_BYTE *)(a1 + 72757))
      {
        uint64_t v25 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v25)
        {
          if (sub_10015A058(5) && os_log_type_enabled(v25, OS_LOG_TYPE_INFO))
          {
            buf[0].n128_u16[0] = 0;
            uint64_t v11 = 2LL;
            _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_INFO,  "NCP is NOT commissioned. Cannot resume.",  (uint8_t *)buf,  2u);
            goto LABEL_190;
          }
        }

        else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
          sub_1001FF028();
        }

LABEL_161:
        uint64_t v11 = 2LL;
        goto LABEL_190;
      }

      char v17 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v17)
      {
        if (sub_10015A058(5) && os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
        {
          buf[0].n128_u16[0] = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_INFO,  "NCP is commissioned. Resuming...",  (uint8_t *)buf,  2u);
        }
      }

      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        sub_1001FF028();
      }

      sub_100159FC0(a1 + 32, 30.0);
      *(_WORD *)(v6 + 982) = 169;
    }

    if (*v7 > 0 || *(void *)v6)
    {
      if (sub_100159F84(a1 + 32)) {
        goto LABEL_155;
      }
      int v27 = 1;
    }

    else
    {
      int v27 = 0;
    }

    sub_10015A00C(a1 + 32);
    if (v27)
    {
      char v28 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v28)
      {
        goto LABEL_183;
      }

      if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        goto LABEL_183;
      }
    }

    else
    {
      unsigned int v29 = *v9;
      if (v29 <= 0xE) {
        char v30 = v29 + 1;
      }
      else {
        char v30 = 1;
      }
      *unint64_t v9 = v30;
      v9[1] = v30 | 0x80;
      sub_100034C60("Ciib", (uint64_t *)buf, 0x80u);
      sub_100006EFC((uint64_t)&v73, buf);
      v76[0] = (void **)buf;
      sub_100006F6C(v76);
      int v31 = (_DWORD)v74 - (_DWORD)v73;
      if ((unint64_t)(v74 - v73) >= 0x514)
      {
        unsigned int v35 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v35)
        {
          goto LABEL_183;
        }

        if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          goto LABEL_183;
        }
      }

      else
      {
        if (v73 == v74) {
          unint64_t v32 = 0LL;
        }
        else {
          unint64_t v32 = v73;
        }
        memcpy(v8, v32, v74 - v73);
        *uint64_t v7 = v31;
        if (*(void *)v6)
        {
          char v33 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (v33)
          {
          }

          else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
          {
            sub_1001FF028();
          }
        }

        if (*v7 > 0)
        {
          uint64_t v43 = operator new(0x20uLL);
          void *v43 = sub_1000D514C;
          v43[1] = 0LL;
          v43[2] = a1;
          *((_DWORD *)v43 + 6) = -16777036;
          v68[0] = (uint64_t)off_1002AD910;
          v68[1] = (uint64_t)v43;
          unint64_t v44 = operator new(0x20uLL);
          void *v44 = sub_1000D514C;
          v44[1] = 0LL;
          v44[2] = a1;
          *((_DWORD *)v44 + 6) = -33554252;
          v67[0] = (uint64_t)off_1002AD930;
          v67[1] = (uint64_t)v44;
          sub_100006D1C((uint64_t)sub_10003C800, v68, v67, &v69);
          sub_100007A04((uint64_t (***)())buf, &v69);
          sub_100006E08((uint64_t *)v6, (uint64_t *)buf);
          sub_1000075F0(buf);
          sub_1000075F0(v71);
          sub_100007618(v70);
          sub_1000075F0(v67);
          sub_100007618(v68);
          _BYTE *v8 = v9[1];
          sub_100159FC0(a1 + 32, 30.0);
          *(_WORD *)(v6 + 982) = 180;
LABEL_12:
          if ((a2 | 0x1000000) == 0xFF0000B4)
          {
            int v13 = 0;
          }

          else
          {
            if (sub_100159F84(a1 + 32)) {
              goto LABEL_155;
            }
            int v13 = 1;
          }

          sub_10015A00C(a1 + 32);
          if (v13)
          {
            uint64_t v14 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
            if (v14)
            {
              goto LABEL_183;
            }

            if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
              goto LABEL_183;
            }
            goto LABEL_182;
          }

          if (a2 != -16777036)
          {
            int v34 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
            if (v34)
            {
              goto LABEL_183;
            }

            if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
              goto LABEL_183;
            }
            goto LABEL_182;
          }

          sub_100159FC0(a1 + 32, 30.0);
          *(_WORD *)(v6 + 982) = 181;
          goto LABEL_34;
        }

        char v45 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v45)
        {
          goto LABEL_183;
        }

        if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          goto LABEL_183;
        }
      }
    }

    sub_1001FF028();
    goto LABEL_183;
  }

  if (*(unsigned __int16 *)(a1 + 73686) <= 0xC1u)
  {
    if (v10 != 181)
    {
      if (v10 == 185) {
        goto LABEL_5;
      }
LABEL_190:
      *(_WORD *)(v6 + 982) = 0;
      goto LABEL_191;
    }

    if (HIBYTE(a2) == 171 && *(unsigned __int8 *)(a1 + 68758) == *(unsigned __int8 *)(a1 + 67457))
    {
      int v16 = 0;
LABEL_36:
      sub_10015A00C(a1 + 32);
      if (v16)
      {
        uint64_t v24 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v24)
        {
          goto LABEL_183;
        }

        if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          goto LABEL_183;
        }
        goto LABEL_182;
      }

      if (sub_10004ECBC(a2, a3, v18, v19, v20, v21, v22, v23))
      {
        uint64_t v26 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v26)
        {
          goto LABEL_183;
        }

        if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          goto LABEL_183;
        }
        goto LABEL_182;
      }

      sub_100159FC0(a1 + 32, 30.0);
      *(_WORD *)(v6 + 982) = 185;
LABEL_5:
      if (*v7 > 0 || *(void *)v6)
      {
        if (sub_100159F84(a1 + 32)) {
          goto LABEL_155;
        }
        int v12 = 1;
      }

      else
      {
        int v12 = 0;
      }

      sub_10015A00C(a1 + 32);
      if (v12)
      {
        uint64_t v36 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v36)
        {
          goto LABEL_183;
        }

        if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          goto LABEL_182;
        }
LABEL_183:
        uint64_t v60 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v60)
        {
        }

        else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
          sub_1001FF028();
        }

        (*(void (**)(uint64_t))(*(void *)a1 + 120LL))(a1);
        uint64_t v11 = 3LL;
        goto LABEL_190;
      }

      unsigned int v37 = *v9;
      if (v37 <= 0xE) {
        char v38 = v37 + 1;
      }
      else {
        char v38 = 1;
      }
      *unint64_t v9 = v38;
      v9[1] = v38 | 0x80;
      sub_100034C60("Ciib", (uint64_t *)buf, 0x80u);
      sub_100006EFC((uint64_t)&v73, buf);
      v76[0] = (void **)buf;
      sub_100006F6C(v76);
      int v39 = (_DWORD)v74 - (_DWORD)v73;
      if ((unint64_t)(v74 - v73) >= 0x514)
      {
        uint64_t v42 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v42)
        {
          goto LABEL_183;
        }

        if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          goto LABEL_183;
        }
      }

      else
      {
        if (v73 == v74) {
          int v40 = 0LL;
        }
        else {
          int v40 = v73;
        }
        memcpy(v8, v40, v74 - v73);
        *uint64_t v7 = v39;
        if (*(void *)v6)
        {
          uint64_t v41 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (v41)
          {
          }

          else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
          {
            sub_1001FF028();
          }
        }

        if (*v7 > 0)
        {
          char v46 = operator new(0x20uLL);
          void *v46 = sub_1000D514C;
          v46[1] = 0LL;
          __int128 v46[2] = a1;
          *((_DWORD *)v46 + 6) = -16777022;
          v63[0] = (uint64_t)off_1002AD910;
          v63[1] = (uint64_t)v46;
          unsigned int v47 = operator new(0x20uLL);
          *unsigned int v47 = sub_1000D514C;
          v47[1] = 0LL;
          v47[2] = a1;
          *((_DWORD *)v47 + 6) = -33554238;
          v62[0] = (uint64_t)off_1002AD930;
          v62[1] = (uint64_t)v47;
          sub_100006D1C((uint64_t)sub_10003C800, v63, v62, &v64);
          sub_100007A04((uint64_t (***)())buf, &v64);
          sub_100006E08((uint64_t *)v6, (uint64_t *)buf);
          sub_1000075F0(buf);
          sub_1000075F0(v66);
          sub_100007618(v65);
          sub_1000075F0(v62);
          sub_100007618(v63);
          _BYTE *v8 = v9[1];
          sub_100159FC0(a1 + 32, 30.0);
          *(_WORD *)(v6 + 982) = 194;
          goto LABEL_138;
        }

        unsigned int v59 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v59)
        {
          goto LABEL_183;
        }

        if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          goto LABEL_183;
        }
      }

              if (tcgetattr(v17, &v165))
              {
                unsigned int v92 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
                if (v92)
                {
                  uint64_t v93 = v92;
                  if (sub_10015A058(7) && os_log_type_enabled(v93, OS_LOG_TYPE_DEBUG))
                  {
                    uint64_t v94 = __error();
                    unint64_t v95 = strerror(*v94);
                    char v96 = *__error();
                    *(_DWORD *)__n128 buf = 136315394;
                    *(void *)uint64_t v164 = v95;
                    *(_WORD *)&v164[8] = 1024;
                    *(_DWORD *)&v164[10] = v96;
                    _os_log_debug_impl( (void *)&_mh_execute_header,  v93,  OS_LOG_TYPE_DEBUG,  "tcgetattr() failed. %s (%d)",  buf,  0x12u);
                  }
                }

                else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
                {
                  *(_DWORD *)__n128 buf = 136315394;
                  *(void *)uint64_t v164 = "com.apple.wpantund.ncp";
                  *(_WORD *)&v164[8] = 2080;
                  *(void *)&v164[10] = "default";
                  _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "Logging Module is not defined for SubSystem: %s, Category: %s",  buf,  0x16u);
                }
              }

              cfsetspeed(&v165, v32);
              if (!tcsetattr(v17, 0, &v165)) {
                goto LABEL_296;
              }
              uint64_t v97 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
              if (v97)
              {
                uint64_t v83 = v97;
                goto LABEL_292;
              }

              if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
                goto LABEL_294;
              }
              goto LABEL_296;
            }

            if (!strncasecmp(v9, ",default", 8uLL))
            {
              if (tcgetattr(v17, &v165))
              {
                int v40 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
                if (v40)
                {
                  uint64_t v41 = v40;
                  if (sub_10015A058(7) && os_log_type_enabled(v41, OS_LOG_TYPE_DEBUG))
                  {
                    uint64_t v42 = __error();
                    uint64_t v43 = strerror(*v42);
                    unint64_t v44 = *__error();
                    *(_DWORD *)__n128 buf = 136315394;
                    *(void *)uint64_t v164 = v43;
                    *(_WORD *)&v164[8] = 1024;
                    *(_DWORD *)&v164[10] = v44;
                    _os_log_debug_impl( (void *)&_mh_execute_header,  v41,  OS_LOG_TYPE_DEBUG,  "tcgetattr() failed. %s (%d)",  buf,  0x12u);
                  }
                }

                else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
                {
                  *(_DWORD *)__n128 buf = 136315394;
                  *(void *)uint64_t v164 = "com.apple.wpantund.ncp";
                  *(_WORD *)&v164[8] = 2080;
                  *(void *)&v164[10] = "default";
                  _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "Logging Module is not defined for SubSystem: %s, Category: %s",  buf,  0x16u);
                }
              }

              uint64_t v60 = 35LL;
              uint64_t v61 = (int64x2_t)xmmword_100227B20;
              unint64_t v62 = (int64x2_t)xmmword_100227B10;
              do
              {
                char v63 = (int32x4_t)vcgtq_u64(v155, (uint64x2_t)v61);
                *(int32x2_t *)v63.i8 = vmovn_s64((int64x2_t)v63);
                if ((vmovn_s32(v63).u8[0] & 1) != 0) {
                  v164[v60 + 17] = -1;
                }
                uint64_t v64 = (int32x4_t)vcgtq_u64((uint64x2_t)vdupq_n_s64(0x14uLL), (uint64x2_t)v61);
                *(int32x2_t *)v64.i8 = vmovn_s64((int64x2_t)v64);
                if ((vmovn_s32(v64).i8[2] & 1) != 0) {
                  v164[v60 + 18] = -1;
                }
                unsigned int v65 = (int64x2_t)vcgtq_u64((uint64x2_t)vdupq_n_s64(0x14uLL), (uint64x2_t)v62);
                uint64_t v66 = (int64x2_t)vcgtq_u64((uint64x2_t)vdupq_n_s64(0x14uLL), (uint64x2_t)v62);
                unint64_t v62 = vaddq_s64(v62, v154);
                uint64_t v61 = vaddq_s64(v61, v154);
                v60 += 4LL;
              }

              while (v60 != 55);
              *(_OWORD *)&v165.c_cflag = xmmword_10022A620;
              v165.c_iflag = 0LL;
              v165.c_oflag = 0LL;
              cfmakeraw(&v165);
              if (tcsetattr(v17, 0, &v165))
              {
                uint64_t v67 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
                if (v67)
                {
                  unint64_t v68 = v67;
                  if (sub_10015A058(7) && os_log_type_enabled(v68, OS_LOG_TYPE_DEBUG))
                  {
                    uint64_t v69 = __error();
                    char v70 = strerror(*v69);
                    unsigned int v71 = *__error();
                    *(_DWORD *)__n128 buf = 136315394;
                    *(void *)uint64_t v164 = v70;
                    *(_WORD *)&v164[8] = 1024;
                    *(_DWORD *)&v164[10] = v71;
                    _os_log_debug_impl( (void *)&_mh_execute_header,  v68,  OS_LOG_TYPE_DEBUG,  "tcsetattr() failed. %s (%d)",  buf,  0x12u);
                  }
                }

                else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
                {
                  *(_DWORD *)__n128 buf = 136315394;
                  *(void *)uint64_t v164 = "com.apple.wpantund.ncp";
                  *(_WORD *)&v164[8] = 2080;
                  *(void *)&v164[10] = "default";
                  _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "Logging Module is not defined for SubSystem: %s, Category: %s",  buf,  0x16u);
                }
              }

              uint64_t v72 = ioctl(v17, 0x80085402uLL, &dword_1002C9294);
              uint64_t v73 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
              if (v73)
              {
                unint64_t v74 = v73;
                if (sub_10015A058(6) && os_log_type_enabled(v74, OS_LOG_TYPE_INFO))
                {
                  uint64_t v75 = dword_1002C9294;
                  uint64_t v76 = strerror(v72);
                  *(_DWORD *)__n128 buf = 67109634;
                  *(_DWORD *)uint64_t v164 = v75;
                  *(_WORD *)&v164[4] = 2080;
                  *(void *)&v164[6] = v76;
                  *(_WORD *)&v164[14] = 1024;
                  *(_DWORD *)&v164[16] = v72;
                  _os_log_impl( (void *)&_mh_execute_header,  v74,  OS_LOG_TYPE_INFO,  "IOCTL error status to set baud rate %d (with CTS/RTS): %s(%u)",  buf,  0x18u);
                }

                goto LABEL_296;
              }

              if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
              {
LABEL_294:
                *(_DWORD *)__n128 buf = 136315394;
                *(void *)uint64_t v164 = "com.apple.wpantund.ncp";
                *(_WORD *)&v164[8] = 2080;
                *(void *)&v164[10] = "default";
                unsigned int v37 = (os_log_s *)&_os_log_default;
                char v38 = "Logging Module is not defined for SubSystem: %s, Category: %s";
                int v39 = 22;
LABEL_295:
                _os_log_error_impl((void *)&_mh_execute_header, v37, OS_LOG_TYPE_ERROR, v38, buf, v39);
                goto LABEL_296;
              }

              goto LABEL_296;
            }

            if (strncasecmp(v9, ",raw", 4uLL)) {
              break;
            }
            if (tcgetattr(v17, &v165))
            {
              char v45 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
              if (v45)
              {
                char v46 = v45;
                if (sub_10015A058(7) && os_log_type_enabled(v46, OS_LOG_TYPE_DEBUG))
                {
                  unsigned int v47 = __error();
                  int v48 = strerror(*v47);
                  uint64_t v49 = *__error();
                  *(_DWORD *)__n128 buf = 136315394;
                  *(void *)uint64_t v164 = v48;
                  *(_WORD *)&v164[8] = 1024;
                  *(_DWORD *)&v164[10] = v49;
                  _os_log_debug_impl( (void *)&_mh_execute_header,  v46,  OS_LOG_TYPE_DEBUG,  "tcgetattr() failed. %s (%d)",  buf,  0x12u);
                }
              }

              else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
              {
                *(_DWORD *)__n128 buf = 136315394;
                *(void *)uint64_t v164 = "com.apple.wpantund.ncp";
                *(_WORD *)&v164[8] = 2080;
                *(void *)&v164[10] = "default";
                _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "Logging Module is not defined for SubSystem: %s, Category: %s",  buf,  0x16u);
              }
            }

            cfmakeraw(&v165);
            if (!tcsetattr(v17, 0, &v165)) {
              goto LABEL_296;
            }
            char v82 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
            if (v82)
            {
              uint64_t v83 = v82;
LABEL_292:
              char v137 = __error();
              unsigned int v138 = strerror(*v137);
              uint64_t v139 = *__error();
              *(_DWORD *)__n128 buf = 136315394;
              *(void *)uint64_t v164 = v138;
              *(_WORD *)&v164[8] = 1024;
              *(_DWORD *)&v164[10] = v139;
              _os_log_debug_impl( (void *)&_mh_execute_header,  v83,  OS_LOG_TYPE_DEBUG,  "tcsetattr() failed. %s (%d)",  buf,  0x12u);
              goto LABEL_296;
            }

            if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
              goto LABEL_294;
            }
LABEL_296:
            unint64_t v9 = strchr(v9 + 1, 44);
            if (!v9) {
              goto LABEL_297;
            }
          }

          if (strncasecmp(v9, ",clocal=", 8uLL))
          {
            if (strncasecmp(v9, ",ixoff=", 7uLL))
            {
              if (strncasecmp(v9, ",ixon=", 6uLL))
              {
                if (strncasecmp(v9, ",ixany=", 7uLL))
                {
                  if (strncasecmp(v9, ",crtscts=", 9uLL))
                  {
                    if (strncasecmp(v9, ",ccts_oflow=", 0xCuLL))
                    {
                      if (strncasecmp(v9, ",crts_iflow=", 0xCuLL))
                      {
                        unsigned int v35 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
                        if (v35)
                        {
                          uint64_t v36 = v35;
                          *(_DWORD *)__n128 buf = 136315138;
                          *(void *)uint64_t v164 = v9;
                          unsigned int v37 = v36;
                          char v38 = "Unknown option (%s)";
                          int v39 = 12;
                          goto LABEL_295;
                        }

                        if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
                          goto LABEL_294;
                        }
                        goto LABEL_296;
                      }

                      if (tcgetattr(v17, &v165))
                      {
                        uint64_t v114 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
                        if (v114)
                        {
                          uint64_t v115 = v114;
                          if (sub_10015A058(7) && os_log_type_enabled(v115, OS_LOG_TYPE_DEBUG))
                          {
                            unint64_t v116 = __error();
                            char v117 = strerror(*v116);
                            uint64_t v118 = *__error();
                            *(_DWORD *)__n128 buf = 136315394;
                            *(void *)uint64_t v164 = v117;
                            *(_WORD *)&v164[8] = 1024;
                            *(_DWORD *)&v164[10] = v118;
                            _os_log_debug_impl( (void *)&_mh_execute_header,  v115,  OS_LOG_TYPE_DEBUG,  "tcgetattr() failed. %s (%d)",  buf,  0x12u);
                          }
                        }

                        else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
                        {
                          *(_DWORD *)__n128 buf = 136315394;
                          *(void *)uint64_t v164 = "com.apple.wpantund.ncp";
                          *(_WORD *)&v164[8] = 2080;
                          *(void *)&v164[10] = "default";
                          _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "Logging Module is not defined for SubSystem: %s, Category: %s",  buf,  0x16u);
                        }
                      }

                      unint64_t v9 = strchr(v9, 61);
                      char v131 = v9[1];
                      if (v131 != 48)
                      {
                        if (v131 == 49)
                        {
                          unsigned int v132 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
                          if (v132)
                          {
                            uint64_t v133 = v132;
                          }

                          else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
                          {
                            *(_DWORD *)__n128 buf = 136315394;
                            *(void *)uint64_t v164 = "com.apple.wpantund.ncp";
                            *(_WORD *)&v164[8] = 2080;
                            *(void *)&v164[10] = "default";
                            _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "Logging Module is not defined for SubSystem: %s, Category: %s",  buf,  0x16u);
                          }

                          uint64_t v134 = v165.c_cflag | 0x20000;
LABEL_287:
                          v165.c_cflag = v134;
                        }

                        if (tcsetattr(v17, 0, &v165))
                        {
                          char v136 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
                          if (v136)
                          {
                            uint64_t v83 = v136;
                            goto LABEL_292;
                          }

                          if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
                            goto LABEL_294;
                          }
                        }

                        goto LABEL_296;
                      }

                      uint64_t v134 = v165.c_cflag & 0xFFFFFFFFFFFDFFFFLL;
                      goto LABEL_287;
                    }

                    if (tcgetattr(v17, &v165))
                    {
                      unsigned int v106 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
                      if (v106)
                      {
                        uint64_t v107 = v106;
                        if (sub_10015A058(7) && os_log_type_enabled(v107, OS_LOG_TYPE_DEBUG))
                        {
                          uint64_t v108 = __error();
                          unint64_t v109 = strerror(*v108);
                          char v110 = *__error();
                          *(_DWORD *)__n128 buf = 136315394;
                          *(void *)uint64_t v164 = v109;
                          *(_WORD *)&v164[8] = 1024;
                          *(_DWORD *)&v164[10] = v110;
                          _os_log_debug_impl( (void *)&_mh_execute_header,  v107,  OS_LOG_TYPE_DEBUG,  "tcgetattr() failed. %s (%d)",  buf,  0x12u);
                        }
                      }

                      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
                      {
                        *(_DWORD *)__n128 buf = 136315394;
                        *(void *)uint64_t v164 = "com.apple.wpantund.ncp";
                        *(_WORD *)&v164[8] = 2080;
                        *(void *)&v164[10] = "default";
                        _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "Logging Module is not defined for SubSystem: %s, Category: %s",  buf,  0x16u);
                      }
                    }

                    unint64_t v9 = strchr(v9, 61);
                    unsigned int v126 = v9[1];
                    if (v126 != 48)
                    {
                      if (v126 == 49)
                      {
                        uint64_t v127 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
                        if (v127)
                        {
                          uint64_t v128 = v127;
                        }

                        else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
                        {
                          *(_DWORD *)__n128 buf = 136315394;
                          *(void *)uint64_t v164 = "com.apple.wpantund.ncp";
                          *(_WORD *)&v164[8] = 2080;
                          *(void *)&v164[10] = "default";
                          _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "Logging Module is not defined for SubSystem: %s, Category: %s",  buf,  0x16u);
                        }

                        unint64_t v129 = v165.c_cflag | 0x10000;
LABEL_276:
                        v165.c_cflag = v129;
                      }

                      if (tcsetattr(v17, 0, &v165))
                      {
                        unint64_t v135 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
                        if (v135)
                        {
                          uint64_t v83 = v135;
                          goto LABEL_292;
                        }

                        if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
                          goto LABEL_294;
                        }
                      }

                      goto LABEL_296;
                    }

                    unint64_t v129 = v165.c_cflag & 0xFFFFFFFFFFFEFFFFLL;
                    goto LABEL_276;
                  }

                  if (tcgetattr(v17, &v165))
                  {
                    char v98 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
                    if (v98)
                    {
                      unsigned int v99 = v98;
                      if (sub_10015A058(7) && os_log_type_enabled(v99, OS_LOG_TYPE_DEBUG))
                      {
                        uint64_t v100 = __error();
                        uint64_t v101 = strerror(*v100);
                        unint64_t v102 = *__error();
                        *(_DWORD *)__n128 buf = 136315394;
                        *(void *)uint64_t v164 = v101;
                        *(_WORD *)&v164[8] = 1024;
                        *(_DWORD *)&v164[10] = v102;
                        _os_log_debug_impl( (void *)&_mh_execute_header,  v99,  OS_LOG_TYPE_DEBUG,  "tcgetattr() failed. %s (%d)",  buf,  0x12u);
                      }
                    }

                    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
                    {
                      *(_DWORD *)__n128 buf = 136315394;
                      *(void *)uint64_t v164 = "com.apple.wpantund.ncp";
                      *(_WORD *)&v164[8] = 2080;
                      *(void *)&v164[10] = "default";
                      _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "Logging Module is not defined for SubSystem: %s, Category: %s",  buf,  0x16u);
                    }
                  }

                  unint64_t v9 = strchr(v9, 61);
                  uint64_t v122 = v9[1];
                  if (v122 != 48)
                  {
                    if (v122 == 49)
                    {
                      unint64_t v123 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
                      if (v123)
                      {
                        char v124 = v123;
                      }

                      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
                      {
                        *(_DWORD *)__n128 buf = 136315394;
                        *(void *)uint64_t v164 = "com.apple.wpantund.ncp";
                        *(_WORD *)&v164[8] = 2080;
                        *(void *)&v164[10] = "default";
                        _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "Logging Module is not defined for SubSystem: %s, Category: %s",  buf,  0x16u);
                      }

                      char v125 = v165.c_cflag | 0x30000;
LABEL_255:
                      v165.c_cflag = v125;
                    }

                    if (tcsetattr(v17, 0, &v165))
                    {
                      char v130 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
                      if (v130)
                      {
                        uint64_t v83 = v130;
                        goto LABEL_292;
                      }

                      if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
                        goto LABEL_294;
                      }
                    }

                    goto LABEL_296;
                  }

                  char v125 = v165.c_cflag & 0xFFFFFFFFFFFCFFFFLL;
                  goto LABEL_255;
                }

                if (tcgetattr(v17, &v165))
                {
                  char v84 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
                  if (v84)
                  {
                    unsigned int v85 = v84;
                    if (sub_10015A058(7) && os_log_type_enabled(v85, OS_LOG_TYPE_DEBUG))
                    {
                      uint64_t v86 = __error();
                      uint64_t v87 = strerror(*v86);
                      unint64_t v88 = *__error();
                      *(_DWORD *)__n128 buf = 136315394;
                      *(void *)uint64_t v164 = v87;
                      *(_WORD *)&v164[8] = 1024;
                      *(_DWORD *)&v164[10] = v88;
                      _os_log_debug_impl( (void *)&_mh_execute_header,  v85,  OS_LOG_TYPE_DEBUG,  "tcgetattr() failed. %s (%d)",  buf,  0x12u);
                    }
                  }

                  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
                  {
                    *(_DWORD *)__n128 buf = 136315394;
                    *(void *)uint64_t v164 = "com.apple.wpantund.ncp";
                    *(_WORD *)&v164[8] = 2080;
                    *(void *)&v164[10] = "default";
                    _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "Logging Module is not defined for SubSystem: %s, Category: %s",  buf,  0x16u);
                  }
                }

                unint64_t v9 = strchr(v9, 61);
                char v119 = v9[1];
                if (v119 == 48)
                {
                  unsigned int v120 = v165.c_iflag & 0xFFFFFFFFFFFFF7FFLL;
LABEL_224:
                  v165.c_iflag = v120;
                }

                else if (v119 == 49)
                {
                  unsigned int v120 = v165.c_iflag | 0x800;
                  goto LABEL_224;
                }

                if (tcsetattr(v17, 0, &v165))
                {
                  uint64_t v121 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
                  if (v121)
                  {
                    uint64_t v83 = v121;
                    goto LABEL_292;
                  }

                  if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
                    goto LABEL_294;
                  }
                }

                goto LABEL_296;
              }

              if (tcgetattr(v17, &v165))
              {
                char v77 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
                if (v77)
                {
                  unsigned int v78 = v77;
                  if (sub_10015A058(7) && os_log_type_enabled(v78, OS_LOG_TYPE_DEBUG))
                  {
                    uint64_t v79 = __error();
                    uint64_t v80 = strerror(*v79);
                    unint64_t v81 = *__error();
                    *(_DWORD *)__n128 buf = 136315394;
                    *(void *)uint64_t v164 = v80;
                    *(_WORD *)&v164[8] = 1024;
                    *(_DWORD *)&v164[10] = v81;
                    _os_log_debug_impl( (void *)&_mh_execute_header,  v78,  OS_LOG_TYPE_DEBUG,  "tcgetattr() failed. %s (%d)",  buf,  0x12u);
                  }
                }

                else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
                {
                  *(_DWORD *)__n128 buf = 136315394;
                  *(void *)uint64_t v164 = "com.apple.wpantund.ncp";
                  *(_WORD *)&v164[8] = 2080;
                  *(void *)&v164[10] = "default";
                  _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "Logging Module is not defined for SubSystem: %s, Category: %s",  buf,  0x16u);
                }
              }

              unint64_t v9 = strchr(v9, 61);
              uint64_t v111 = v9[1];
              if (v111 == 48)
              {
                char v112 = v165.c_iflag & 0xFFFFFFFFFFFFFDFFLL;
LABEL_205:
                v165.c_iflag = v112;
              }

              else if (v111 == 49)
              {
                char v112 = v165.c_iflag | 0x200;
                goto LABEL_205;
              }

              if (tcsetattr(v17, 0, &v165))
              {
                unsigned int v113 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
                if (v113)
                {
                  uint64_t v83 = v113;
                  goto LABEL_292;
                }

                if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
                  goto LABEL_294;
                }
              }

              goto LABEL_296;
            }

            if (tcgetattr(v17, &v165))
            {
              uint64_t v55 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
              if (v55)
              {
                unint64_t v56 = v55;
                if (sub_10015A058(7) && os_log_type_enabled(v56, OS_LOG_TYPE_DEBUG))
                {
                  char v57 = __error();
                  char v58 = strerror(*v57);
                  unsigned int v59 = *__error();
                  *(_DWORD *)__n128 buf = 136315394;
                  *(void *)uint64_t v164 = v58;
                  *(_WORD *)&v164[8] = 1024;
                  *(_DWORD *)&v164[10] = v59;
                  _os_log_debug_impl( (void *)&_mh_execute_header,  v56,  OS_LOG_TYPE_DEBUG,  "tcgetattr() failed. %s (%d)",  buf,  0x12u);
                }
              }

              else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
              {
                *(_DWORD *)__n128 buf = 136315394;
                *(void *)uint64_t v164 = "com.apple.wpantund.ncp";
                *(_WORD *)&v164[8] = 2080;
                *(void *)&v164[10] = "default";
                _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "Logging Module is not defined for SubSystem: %s, Category: %s",  buf,  0x16u);
              }
            }

            unint64_t v9 = strchr(v9, 61);
            char v103 = v9[1];
            if (v103 == 48)
            {
              uint64_t v104 = v165.c_iflag & 0xFFFFFFFFFFFFFBFFLL;
LABEL_186:
              v165.c_iflag = v104;
            }

            else if (v103 == 49)
            {
              uint64_t v104 = v165.c_iflag | 0x400;
              goto LABEL_186;
            }

            if (tcsetattr(v17, 0, &v165))
            {
              char v105 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
              if (v105)
              {
                uint64_t v83 = v105;
                goto LABEL_292;
              }

              if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
                goto LABEL_294;
              }
            }

            goto LABEL_296;
          }

          if (tcgetattr(v17, &v165))
          {
            uint64_t v50 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
            if (v50)
            {
              uint64_t v51 = v50;
              if (sub_10015A058(7) && os_log_type_enabled(v51, OS_LOG_TYPE_DEBUG))
              {
                uint64_t v52 = __error();
                uint64_t v53 = strerror(*v52);
                uint64_t v54 = *__error();
                *(_DWORD *)__n128 buf = 136315394;
                *(void *)uint64_t v164 = v53;
                *(_WORD *)&v164[8] = 1024;
                *(_DWORD *)&v164[10] = v54;
                _os_log_debug_impl( (void *)&_mh_execute_header,  v51,  OS_LOG_TYPE_DEBUG,  "tcgetattr() failed. %s (%d)",  buf,  0x12u);
              }
            }

            else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)__n128 buf = 136315394;
              *(void *)uint64_t v164 = "com.apple.wpantund.ncp";
              *(_WORD *)&v164[8] = 2080;
              *(void *)&v164[10] = "default";
              _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "Logging Module is not defined for SubSystem: %s, Category: %s",  buf,  0x16u);
            }
          }

          unint64_t v9 = strchr(v9, 61);
          char v89 = v9[1];
          if (v89 == 48)
          {
            uint64_t v90 = v165.c_cflag & 0xFFFFFFFFFFFF7FFFLL;
          }

          else
          {
            if (v89 != 49) {
              goto LABEL_153;
            }
            uint64_t v90 = v165.c_cflag | 0x8000;
          }

          v165.c_cflag = v90;
LABEL_153:
          if (tcsetattr(v17, 0, &v165))
          {
            char v91 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
            if (v91)
            {
              uint64_t v83 = v91;
              goto LABEL_292;
            }

            if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
              goto LABEL_294;
            }
          }

          goto LABEL_296;
        }

LABEL_182:
      sub_1001FF028();
      goto LABEL_183;
    }

      if ((v139 & 0x80000000) == 0)
      {
        if (v139 != 17) {
          goto LABEL_338;
        }
        if (*(void *)buf == 0x6343746365726944LL && *(void *)&buf[8] == 0x305B726F72724561LL && buf[16] == 93) {
          goto LABEL_275;
        }
        if (*(void *)buf == 0x6343746365726944LL && *(void *)&buf[8] == 0x315B726F72724561LL && buf[16] == 93) {
          goto LABEL_276;
        }
        if (*(void *)buf == 0x6343746365726944LL && *(void *)&buf[8] == 0x325B726F72724561LL && buf[16] == 93) {
          goto LABEL_277;
        }
        if (*(void *)buf == 0x6343746365726944LL && *(void *)&buf[8] == 0x335B726F72724561LL && buf[16] == 93) {
          goto LABEL_278;
        }
        if (*(void *)buf == 0x6343746365726944LL && *(void *)&buf[8] == 0x345B726F72724561LL && buf[16] == 93) {
          goto LABEL_279;
        }
LABEL_259:
        if (*(void *)buf == 0x6343746365726944LL && *(void *)&buf[8] == 0x355B726F72724561LL && buf[16] == 93) {
          goto LABEL_312;
        }
        if (*(void *)buf == 0x6343746365726944LL && *(void *)&buf[8] == 0x365B726F72724561LL && buf[16] == 93) {
          goto LABEL_313;
        }
LABEL_296:
        if (*(void *)buf == 0x6343746365726944LL && *(void *)&buf[8] == 0x375B726F72724561LL && buf[16] == 93) {
          goto LABEL_352;
        }
        if (*(void *)buf == 0x6343746365726944LL && *(void *)&buf[8] == 0x385B726F72724561LL && buf[16] == 93) {
          goto LABEL_353;
        }
        goto LABEL_330;
      }

      if (*(void *)&buf[8] != 17LL) {
        goto LABEL_338;
      }
      if (**(void **)buf == 0x6343746365726944LL
        && *(void *)(*(void *)buf + 8LL) == 0x305B726F72724561LL
        && *(_BYTE *)(*(void *)buf + 16LL) == 93)
      {
LABEL_275:
        LODWORD(v140) = sub_1000BE984(4, uint64);
        goto LABEL_355;
      }

      if (**(void **)buf == 0x6343746365726944LL
        && *(void *)(*(void *)buf + 8LL) == 0x315B726F72724561LL
        && *(_BYTE *)(*(void *)buf + 16LL) == 93)
      {
LABEL_276:
        unsigned int v132 = sub_1000BE984(4, uint64);
        goto LABEL_355;
      }

      if (**(void **)buf == 0x6343746365726944LL
        && *(void *)(*(void *)buf + 8LL) == 0x325B726F72724561LL
        && *(_BYTE *)(*(void *)buf + 16LL) == 93)
      {
LABEL_277:
        char v130 = sub_1000BE984(4, uint64);
        goto LABEL_355;
      }

      if (**(void **)buf == 0x6343746365726944LL
        && *(void *)(*(void *)buf + 8LL) == 0x335B726F72724561LL
        && *(_BYTE *)(*(void *)buf + 16LL) == 93)
      {
LABEL_278:
        unsigned int v126 = sub_1000BE984(4, uint64);
        goto LABEL_355;
      }

      if (**(void **)buf == 0x6343746365726944LL
        && *(void *)(*(void *)buf + 8LL) == 0x345B726F72724561LL
        && *(_BYTE *)(*(void *)buf + 16LL) == 93)
      {
LABEL_279:
        unsigned int v120 = sub_1000BE984(4, uint64);
        goto LABEL_355;
      }

      if ((v139 & 0x80) == 0)
      {
        if (v139 != 17) {
          goto LABEL_338;
        }
        goto LABEL_259;
      }

      if (**(void **)buf == 0x6343746365726944LL
        && *(void *)(*(void *)buf + 8LL) == 0x355B726F72724561LL
        && *(_BYTE *)(*(void *)buf + 16LL) == 93)
      {
LABEL_312:
        unint64_t v116 = sub_1000BE984(4, uint64);
        goto LABEL_355;
      }

      if (**(void **)buf == 0x6343746365726944LL
        && *(void *)(*(void *)buf + 8LL) == 0x365B726F72724561LL
        && *(_BYTE *)(*(void *)buf + 16LL) == 93)
      {
LABEL_313:
        char v112 = sub_1000BE984(4, uint64);
        goto LABEL_355;
      }

      if ((v139 & 0x80) == 0)
      {
        if (v139 != 17) {
          goto LABEL_338;
        }
        goto LABEL_296;
      }

      if (**(void **)buf == 0x6343746365726944LL
        && *(void *)(*(void *)buf + 8LL) == 0x375B726F72724561LL
        && *(_BYTE *)(*(void *)buf + 16LL) == 93)
      {
LABEL_352:
        unint64_t v109 = sub_1000BE984(4, uint64);
        goto LABEL_355;
      }

      uint64_t v93 = *(_BYTE **)buf;
      if (**(void **)buf == 0x6343746365726944LL
        && *(void *)(*(void *)buf + 8LL) == 0x385B726F72724561LL
        && *(_BYTE *)(*(void *)buf + 16LL) == 93)
      {
LABEL_353:
        uint64_t v107 = sub_1000BE984(4, uint64);
        goto LABEL_355;
      }

      if (v139 < 0) {
        goto LABEL_331;
      }
      if (v139 != 17) {
        goto LABEL_338;
      }
LABEL_330:
      uint64_t v93 = buf;
LABEL_331:
      char v96 = *(void *)v93;
      uint64_t v97 = *((void *)v93 + 1);
      char v98 = v93[16];
      if (v96 != 0x6343746365726944LL || v97 != 0x395B726F72724561LL || v98 != 93)
      {
LABEL_338:
        if (sub_1000B55AC(buf, "DirectCcaError[10]"))
        {
          unint64_t v135 = sub_1000BE984(4, uint64);
        }

        else if (sub_1000B55AC(buf, "DirectCcaError[11]"))
        {
          uint64_t v133 = sub_1000BE984(4, uint64);
        }

        else if (sub_1000B55AC(buf, "DirectCcaError[12]"))
        {
          uint64_t v127 = sub_1000BE984(4, uint64);
        }

        else if (sub_1000B55AC(buf, "DirectCcaError[13]"))
        {
          unint64_t v123 = sub_1000BE984(4, uint64);
        }

        else if (sub_1000B55AC(buf, "DirectCcaError[14]"))
        {
          uint64_t v121 = sub_1000BE984(4, uint64);
        }

        else if (sub_1000B55AC(buf, "DirectCcaError[15]"))
        {
          char v117 = sub_1000BE984(4, uint64);
        }

        else if (sub_1000B55AC(buf, "DirectCcaError[16]"))
        {
          unsigned int v113 = sub_1000BE984(4, uint64);
        }

        goto LABEL_355;
      }

      char v105 = sub_1000BE984(4, uint64);
LABEL_355:
      if (v139 < 0) {
        operator delete(*(void **)buf);
      }
      if (count == ++v12)
      {
        count = 0LL;
        char v149 = v114;
        *((void *)&v148 + 1) = __PAIR64__(v118, v122);
        *(void *)&char v148 = __PAIR64__(v124, v128);
        *((void *)&v147 + 1) = __PAIR64__(v134, v136);
        *(void *)&unint64_t v147 = __PAIR64__(v106, v108);
        *((void *)&v146 + 1) = __PAIR64__(v110, v111);
        *(void *)&uint64_t v146 = __PAIR64__(v115, v119);
        DWORD1(v145) = v131;
        *((void *)&v145 + 1) = __PAIR64__(v125, v129);
        unsigned int v144 = v113;
        *((void *)&v143 + 1) = __PAIR64__(v117, v121);
        *(void *)&char v143 = __PAIR64__(v123, v127);
        *((void *)&v142 + 1) = __PAIR64__(v133, v135);
        *(void *)&char v142 = __PAIR64__(v105, v107);
        *((void *)&v141 + 1) = __PAIR64__(v109, v112);
        *(void *)&unint64_t v141 = __PAIR64__(v116, v120);
        DWORD1(v140) = v132;
        *((void *)&v140 + 1) = __PAIR64__(v126, v130);
        goto LABEL_360;
      }
    }

    if (v139 != 19) {
      goto LABEL_165;
    }
LABEL_86:
    if (*(void *)buf == 0x6F4E746365726944LL
      && *(void *)&buf[8] == 0x726F7272456B6341LL
      && *(void *)&buf[11] == 0x5D355B726F727245LL)
    {
      goto LABEL_139;
    }

    if (*(void *)buf == 0x6F4E746365726944LL
      && *(void *)&buf[8] == 0x726F7272456B6341LL
      && *(void *)&buf[11] == 0x5D365B726F727245LL)
    {
      goto LABEL_140;
    }

    goto LABEL_123;
  }

  uint64_t v6 = sub_1000160F4("com.apple.wpantund.awd", "default");
  uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
    sub_10020D69C();
  }

  uint64_t v8 = 0LL;
  count = 1LL;
LABEL_360:
  for (uint64_t i = 0LL; i != 68; i += 4LL)
  {
    unint64_t v102 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)((char *)&v145 + i)));
    [v4 addObject:v102];

    char v103 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  *(unsigned int *)((char *)&v140 + i)));
    [v5 addObject:v103];
  }

  [v137 setObject:v4 forKey:@"tx_direct_noack_histogram"];
  [v137 setObject:v5 forKey:@"tx_direct_channelaccessfailure_histogram"];

  return count;
}

    if ((v137 & 0x80000000) == 0)
    {
      if (v137 != 17) {
        goto LABEL_338;
      }
      if (*(void *)buf == 0x6343746365726944LL && *(void *)&buf[8] == 0x305B726F72724561LL && buf[16] == 93) {
        goto LABEL_275;
      }
      if (*(void *)buf == 0x6343746365726944LL && *(void *)&buf[8] == 0x315B726F72724561LL && buf[16] == 93) {
        goto LABEL_276;
      }
      if (*(void *)buf == 0x6343746365726944LL && *(void *)&buf[8] == 0x325B726F72724561LL && buf[16] == 93) {
        goto LABEL_277;
      }
      if (*(void *)buf == 0x6343746365726944LL && *(void *)&buf[8] == 0x335B726F72724561LL && buf[16] == 93) {
        goto LABEL_278;
      }
      if (*(void *)buf == 0x6343746365726944LL && *(void *)&buf[8] == 0x345B726F72724561LL && buf[16] == 93) {
        goto LABEL_279;
      }
LABEL_259:
      if (*(void *)buf == 0x6343746365726944LL && *(void *)&buf[8] == 0x355B726F72724561LL && buf[16] == 93) {
        goto LABEL_312;
      }
      if (*(void *)buf == 0x6343746365726944LL && *(void *)&buf[8] == 0x365B726F72724561LL && buf[16] == 93) {
        goto LABEL_313;
      }
LABEL_296:
      if (*(void *)buf == 0x6343746365726944LL && *(void *)&buf[8] == 0x375B726F72724561LL && buf[16] == 93) {
        goto LABEL_352;
      }
      if (*(void *)buf == 0x6343746365726944LL && *(void *)&buf[8] == 0x385B726F72724561LL && buf[16] == 93) {
        goto LABEL_353;
      }
LABEL_330:
      unsigned int v92 = buf;
      goto LABEL_331;
    }

    if (*(void *)&buf[8] != 17LL) {
      goto LABEL_338;
    }
    if (**(void **)buf == 0x6343746365726944LL
      && *(void *)(*(void *)buf + 8LL) == 0x305B726F72724561LL
      && *(_BYTE *)(*(void *)buf + 16LL) == 93)
    {
LABEL_275:
      LODWORD(v138) = sub_1000BE984(4, uint64);
      goto LABEL_355;
    }

    if (**(void **)buf == 0x6343746365726944LL
      && *(void *)(*(void *)buf + 8LL) == 0x315B726F72724561LL
      && *(_BYTE *)(*(void *)buf + 16LL) == 93)
    {
LABEL_276:
      char v131 = sub_1000BE984(4, uint64);
      goto LABEL_355;
    }

    if (**(void **)buf == 0x6343746365726944LL
      && *(void *)(*(void *)buf + 8LL) == 0x325B726F72724561LL
      && *(_BYTE *)(*(void *)buf + 16LL) == 93)
    {
LABEL_277:
      unint64_t v129 = sub_1000BE984(4, uint64);
      goto LABEL_355;
    }

    if (**(void **)buf == 0x6343746365726944LL
      && *(void *)(*(void *)buf + 8LL) == 0x335B726F72724561LL
      && *(_BYTE *)(*(void *)buf + 16LL) == 93)
    {
LABEL_278:
      char v125 = sub_1000BE984(4, uint64);
      goto LABEL_355;
    }

    if (**(void **)buf == 0x6343746365726944LL
      && *(void *)(*(void *)buf + 8LL) == 0x345B726F72724561LL
      && *(_BYTE *)(*(void *)buf + 16LL) == 93)
    {
LABEL_279:
      char v119 = sub_1000BE984(4, uint64);
      goto LABEL_355;
    }

    if ((v137 & 0x80) == 0)
    {
      if (v137 != 17) {
        goto LABEL_338;
      }
      goto LABEL_259;
    }

    if (**(void **)buf == 0x6343746365726944LL
      && *(void *)(*(void *)buf + 8LL) == 0x355B726F72724561LL
      && *(_BYTE *)(*(void *)buf + 16LL) == 93)
    {
LABEL_312:
      uint64_t v115 = sub_1000BE984(4, uint64);
      goto LABEL_355;
    }

    if (**(void **)buf == 0x6343746365726944LL
      && *(void *)(*(void *)buf + 8LL) == 0x365B726F72724561LL
      && *(_BYTE *)(*(void *)buf + 16LL) == 93)
    {
LABEL_313:
      uint64_t v111 = sub_1000BE984(4, uint64);
      goto LABEL_355;
    }

    if ((v137 & 0x80) == 0)
    {
      if (v137 != 17) {
        goto LABEL_338;
      }
      goto LABEL_296;
    }

    if (**(void **)buf == 0x6343746365726944LL
      && *(void *)(*(void *)buf + 8LL) == 0x375B726F72724561LL
      && *(_BYTE *)(*(void *)buf + 16LL) == 93)
    {
LABEL_352:
      uint64_t v108 = sub_1000BE984(4, uint64);
      goto LABEL_355;
    }

    unsigned int v92 = *(_BYTE **)buf;
    if (**(void **)buf == 0x6343746365726944LL
      && *(void *)(*(void *)buf + 8LL) == 0x385B726F72724561LL
      && *(_BYTE *)(*(void *)buf + 16LL) == 93)
    {
LABEL_353:
      unsigned int v106 = sub_1000BE984(4, uint64);
      goto LABEL_355;
    }

    if ((v137 & 0x80) == 0)
    {
      if (v137 != 17) {
        goto LABEL_338;
      }
      goto LABEL_330;
    }

LABEL_147:
  if (!sub_100159F84(a1 + 32))
  {
    int v15 = 1;
    goto LABEL_149;
  }

    if ((int)sub_10003453C(a1, a2, v8, a4, a5, a6, a7, a8) >= 2)
    {
      int v13 = *(unsigned int *)(a1 + 128);
      if (!(_DWORD)v13 || (_DWORD)v13 == 10)
      {
        *(_BYTE *)(a1 + 180) = 0;
        goto LABEL_156;
      }

      uint64_t v55 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v55)
      {
        goto LABEL_163;
      }

      if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        goto LABEL_181;
      }
      goto LABEL_163;
    }

    return 0LL;
  }

  if (v11 == 188)
  {
LABEL_79:
    if ((int)sub_10003453C(a1, a2, v8, a4, a5, a6, a7, a8) >= 2)
    {
      LODWORD(v13) = *(_DWORD *)(a1 + 128);
      if (!(_DWORD)v13)
      {
        uint64_t v25 = a2;
        goto LABEL_139;
      }

      uint64_t v24 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v24)
      {
        goto LABEL_163;
      }

      if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        goto LABEL_181;
      }
LABEL_163:
      else {
        int v13 = v13;
      }
      if (!*(_BYTE *)(a1 + 180)) {
        goto LABEL_171;
      }
      sub_100034C60("Ciib", &v67.__sig, 0x80u);
      sub_100006EFC(a1 + 104, (__n128 *)&v67);
      __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v67;
      sub_100006F6C((void ***)&__p);
      *(_WORD *)(a1 + 98) = 0;
      *(_WORD *)(a1 + 8) = 320;
      uint64_t v8 = v66;
LABEL_168:
      *(_BYTE *)(a1 + 180) = 0;
LABEL_171:
      unint64_t v56 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v56)
      {
      }

      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        sub_1001FB53C();
      }

      v67.__sig = 0LL;
      (*(void (**)(uint64_t, uint64_t, pthread_mutex_t *))(*(void *)a1 + 32LL))(a1, v13, &v67);
      if (v67.__sig) {
        (*(void (**)(uint64_t))(*(void *)v67.__sig + 8LL))(v67.__sig);
      }
      uint64_t result = 3LL;
      goto LABEL_109;
    }

    return 0LL;
  }

  if (v11 != 199) {
    goto LABEL_109;
  }
  while (1)
  {
    if (a2 + 1409351679 >= 2)
    {
      if (sub_100159F84(a1)) {
        return 0LL;
      }
      sub_10015A00C(a1);
      uint64_t v54 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v54)
      {
      }

      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        sub_1001FB53C();
      }

      goto LABEL_162;
    }

    sub_10015A00C(a1);
    unint64_t v32 = v66;
    v66 += 2;
    char v33 = *v32;
    uint64_t v66 = v32 + 4;
    int v34 = (_WORD *)*((void *)v32 + 1);
    uint64_t v66 = v32 + 6;
    unsigned int v35 = v32[4];
    if (v33 != 48) {
      break;
    }
    spinel_datatype_unpack(v34, v35, "i", v27, v28, v29, v30, v31, (uint64_t)&v67);
    uint64_t v25 = 1;
    if (!LODWORD(v67.__sig)) {
      goto LABEL_145;
    }
LABEL_139:
    sub_100159FC0(a1, 15.0);
    *(_WORD *)(a1 + 8) = 199;
    a2 = v25;
  }

  if (v33 == 57)
  {
    uint64_t v25 = 1;
    if (*(_DWORD *)(a1 + 172) == 1)
    {
      unint64_t v44 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v44)
      {
      }

      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        sub_1001FB53C();
      }

      spinel_datatype_unpack(v34, v35, "Cc", v45, v46, v47, v48, v49, (uint64_t)&v67);
      uint64_t v53 = (*(uint64_t (**)(void))(**(void **)(a1 + 56) + 24LL))(*(void *)(a1 + 56));
      sub_10008AC50(v53 + 32, &v67);
    }

    goto LABEL_139;
  }

  uint64_t v25 = 1;
  if (v33 != 51 || (*(_DWORD *)(a1 + 172) | 2) != 2) {
    goto LABEL_139;
  }
  unsigned int v65 = 0LL;
  char v63 = 0LL;
  __s = "";
  unint64_t v62 = 0LL;
  uint64_t v61 = -1;
  uint64_t v60 = -1;
  unsigned int v59 = 0;
  char v58 = 0;
  uint64_t v36 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v36)
  {
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  spinel_datatype_unpack(v34, v35, "Cct(ESSC)t(iCUd)", v37, v38, v39, v40, v41, (uint64_t)&v59 + 1);
  if ((v62 & 0xFFFFFFF700000000LL) == 0)
  {
    sub_10000AC00(&__p, __s);
    sub_10008AC70((std::string *)&v67, &__p, v63, v61, SHIBYTE(v59), v58 & 1);
    v67.__opaque[28] = HIBYTE(v58);
    v67.__opaque[30] = v62;
    v67.__opaque[29] = v59;
    *(_WORD *)&v67.__opaque[40] = v60;
    if (v65) {
      *(void *)&v67.__opaque[31] = *v65;
    }
    uint64_t v52 = (*(uint64_t (**)(void))(**(void **)(a1 + 56) + 24LL))(*(void *)(a1 + 56));
    sub_10008AC48(v52 + 8, &v67);
    if (v67.__opaque[15] < 0) {
      operator delete((void *)v67.__sig);
    }
    uint64_t v25 = 1;
    goto LABEL_139;
  }

              if (v15 != 19) {
                break;
              }
            }

LABEL_155:
  uint64_t v11 = 0LL;
LABEL_191:
  buf[0].n128_u64[0] = (unint64_t)&v73;
  sub_100006F6C((void ***)buf);
  return v11;
}

        if (sub_1000B55AC(__s1, "tx_error_tx_aborted_ifs"))
        {
          objc_msgSend(v4, "setTxErrorTxAbortedIfs:", sub_1000BE984(4, uint64));
        }

        else if (sub_1000B55AC(__s1, "tx_error_tx_aborted_rx_ack"))
        {
          objc_msgSend(v4, "setTxErrorTxAbortedRxAck:", sub_1000BE984(4, uint64));
        }

        else if (sub_1000B55AC(__s1, "tx_error_tx_aborted_cca_tx"))
        {
          objc_msgSend(v4, "setTxErrorTxAbortedCcaTx:", sub_1000BE984(4, uint64));
        }

        else if (sub_1000B55AC(__s1, "tx_error_tx_aborted_tx"))
        {
          objc_msgSend(v4, "setTxErrorTxAbortedTx:", sub_1000BE984(4, uint64));
        }

        else if (sub_1000B55AC(__s1, "tx_error_not_granted"))
        {
          objc_msgSend(v4, "setTxErrorNotGranted:", sub_1000BE984(4, uint64));
        }

        else if (sub_1000B55AC(__s1, "tx_error_invalid_ack"))
        {
          objc_msgSend(v4, "setTxErrorInvalidAck:", sub_1000BE984(4, uint64));
        }

        else if (sub_1000B55AC(__s1, "tx_error_no_ack"))
        {
          objc_msgSend(v4, "setTxErrorNoAck:", sub_1000BE984(4, uint64));
        }

        else if (sub_1000B55AC(__s1, "tx_error_ack_no_mem"))
        {
          objc_msgSend(v4, "setTxErrorAckNoMem:", sub_1000BE984(4, uint64));
        }

        else if (sub_1000B55AC(__s1, "received_frames"))
        {
          objc_msgSend(v4, "setReceivedFrames:", sub_1000BE984(4, uint64));
        }

        else if (sub_1000B55AC(__s1, "rx_error_receive_failed"))
        {
          objc_msgSend(v4, "setRxErrorReceiveFailed:", sub_1000BE984(4, uint64));
        }

        else if (sub_1000B55AC(__s1, "rx_error_invalid_frame"))
        {
          objc_msgSend(v4, "setRxErrorInvalidFrame:", sub_1000BE984(4, uint64));
        }

        else if (sub_1000B55AC(__s1, "rx_error_delayed_timeout"))
        {
          objc_msgSend(v4, "setRxErrorDelayedTimeout:", sub_1000BE984(4, uint64));
        }

        else if (sub_1000B55AC(__s1, "rx_error_invalid_fcs"))
        {
          objc_msgSend(v4, "setRxErrorInvalidFcs:", sub_1000BE984(4, uint64));
        }

        else if (sub_1000B55AC(__s1, "rx_error_dest_addr_filtered"))
        {
          objc_msgSend(v4, "setRxErrorDestAddrFiltered:", sub_1000BE984(4, uint64));
        }

        else if (sub_1000B55AC(__s1, "rx_error_runtime_delay"))
        {
          objc_msgSend(v4, "setRxErrorRuntimeDelay:", sub_1000BE984(4, uint64));
        }

        else if (sub_1000B55AC(__s1, "rx_error_timeslot_ended"))
        {
          objc_msgSend(v4, "setRxErrorTimeslotEnded:", sub_1000BE984(4, uint64));
        }

        else if (sub_1000B55AC(__s1, "rx_error_aborted"))
        {
          objc_msgSend(v4, "setRxErrorAborted:", sub_1000BE984(4, uint64));
        }

        else if (sub_1000B55AC(__s1, "rx_error_delayed_timeslot_ended"))
        {
          objc_msgSend(v4, "setRxErrorDelayedTimeslotEnded:", sub_1000BE984(4, uint64));
        }

        else if (sub_1000B55AC(__s1, "rx_error_invalid_length"))
        {
          objc_msgSend(v4, "setRxErrorInvalidLength:", sub_1000BE984(4, uint64));
        }

        else if (sub_1000B55AC(__s1, "rx_error_invalid_data"))
        {
          objc_msgSend(v4, "setRxErrorInvalidData:", sub_1000BE984(4, uint64));
        }

        else if (sub_1000B55AC(__s1, "rx_error_ack_failed_radio_state"))
        {
          objc_msgSend(v4, "setRxErrorAckFailedRadioState:", sub_1000BE984(4, uint64));
        }

        else if (sub_1000B55AC(__s1, "rx_error_ack_failed_radio_delay"))
        {
          objc_msgSend(v4, "setRxErrorAckFailedRadioDelay:", sub_1000BE984(4, uint64));
        }

        else if (sub_1000B55AC(__s1, "rx_error_ack_denied"))
        {
          objc_msgSend(v4, "setRxErrorAckDenied:", sub_1000BE984(4, uint64));
        }

        else if (sub_1000B55AC(__s1, "rx_error_ack_aborted"))
        {
          objc_msgSend(v4, "setRxErrorAckAborted:", sub_1000BE984(4, uint64));
        }

        else if (sub_1000B55AC(__s1, "sleep_state"))
        {
          objc_msgSend(v4, "setSleepState:", sub_1000BE984(4, uint64));
        }

        else if (sub_1000B55AC(__s1, "energy_detected_requests"))
        {
          objc_msgSend(v4, "setEnergyDetectedRequests:", sub_1000BE984(4, uint64));
        }

        else if (sub_1000B55AC(__s1, "energy_detected_events"))
        {
          objc_msgSend(v4, "setEnergyDetectedEvents:", sub_1000BE984(4, uint64));
        }

        else if (sub_1000B55AC(__s1, "radio_status_double_notification"))
        {
          objc_msgSend(v4, "setRadioStatusDoubleNotification:", sub_1000BE984(4, uint64));
        }

        goto LABEL_241;
      }

      uint64_t v18 = *(void *)&__s1[8];
      if (*(void *)&__s1[8] == 18LL
        && (**(void **)__s1 == 0x74696D736E617274LL
          ? (uint64_t v19 = *(void *)(*(void *)__s1 + 8LL) == 0x6D6172665F646574LL)
          : (uint64_t v19 = 0),
            v19 ? (uint64_t v20 = *(unsigned __int16 *)(*(void *)__s1 + 16LL) == 29541) : (uint64_t v20 = 0),
            v20))
      {
LABEL_98:
        objc_msgSend(v4, "setTransmittedFrames:", sub_1000BE984(4, uint64));
      }

      else
      {
        if (*(void *)&__s1[8] == 23LL)
        {
          if (**(void **)__s1 == 0x726F7272655F7874LL
            && *(void *)(*(void *)__s1 + 8LL) == 0x6F6C73656D69745FLL
            && *(void *)(*(void *)__s1 + 15LL) == 0x6465646E655F746FLL)
          {
LABEL_107:
            objc_msgSend(v4, "setTxErrorTimeslotEnded:", sub_1000BE984(4, uint64));
            goto LABEL_241;
          }

          uint64_t v18 = *(void *)&__s1[8];
        }

        if (v18 == 24)
        {
          if (**(void **)__s1 == 0x726F7272655F7874LL
            && *(void *)(*(void *)__s1 + 8LL) == 0x6F6C73656D69745FLL
            && *(void *)(*(void *)__s1 + 16LL) == 0x6465696E65645F74LL)
          {
LABEL_116:
            objc_msgSend(v4, "setTxErrorTimeslotDenied:", sub_1000BE984(4, uint64));
            goto LABEL_241;
          }

          uint64_t v18 = *(void *)&__s1[8];
        }

        if (v18 == 37)
        {
          if (!memcmp(*(const void **)__s1, "tx_error_busy_channel_cca_not_started", 0x25uLL))
          {
LABEL_121:
            objc_msgSend(v4, "setTxErrorBusyChannelCcaNotStarted:", sub_1000BE984(4, uint64));
            goto LABEL_241;
          }

          uint64_t v18 = *(void *)&__s1[8];
        }

        if (v18 == 32)
        {
          if (**(void **)__s1 == 0x726F7272655F7874LL
            && *(void *)(*(void *)__s1 + 8LL) == 0x6C656E6E6168635FLL
            && *(void *)(*(void *)__s1 + 16LL) == 0x5F7373656363615FLL
            && *(void *)(*(void *)__s1 + 24LL) == 0x797375625F616363LL)
          {
LABEL_187:
            objc_msgSend(v4, "setTxErrorChannelAccessCcaBusy:", sub_1000BE984(4, uint64));
            goto LABEL_241;
          }

          uint64_t v18 = *(void *)&__s1[8];
        }

        if (v18 == 31)
        {
          if (**(void **)__s1 == 0x726F7272655F7874LL
            && *(void *)(*(void *)__s1 + 8LL) == 0x6C656E6E6168635FLL
            && *(void *)(*(void *)__s1 + 16LL) == 0x5F7373656363615FLL
            && *(void *)(*(void *)__s1 + 23LL) == 0x6572756C6961665FLL)
          {
LABEL_188:
            objc_msgSend(v4, "setTxErrorChannelAccessFailure:", sub_1000BE984(4, uint64));
            goto LABEL_241;
          }

          uint64_t v18 = *(void *)&__s1[8];
        }

        if (v18 == 19)
        {
          if (**(void **)__s1 == 0x726F7272655F7874LL
            && *(void *)(*(void *)__s1 + 8LL) == 0x726F62615F78745FLL
            && *(void *)(*(void *)__s1 + 11LL) == 0x646574726F62615FLL)
          {
LABEL_161:
            objc_msgSend(v4, "setTxErrorTxAborted:", sub_1000BE984(4, uint64));
            goto LABEL_241;
          }

          uint64_t v18 = *(void *)&__s1[8];
        }

        if (v18 == 36)
        {
          if (!memcmp(*(const void **)__s1, "tx_error_tx_aborted_csma_cfg_backoff", 0x24uLL))
          {
LABEL_191:
            objc_msgSend(v4, "setTxErrorTxAbortedCsmaCfgBackoff:", sub_1000BE984(4, uint64));
            goto LABEL_241;
          }

          uint64_t v18 = *(void *)&__s1[8];
        }

        if (v18 != 32) {
          goto LABEL_155;
        }
        if (**(void **)__s1 == 0x726F7272655F7874LL
          && *(void *)(*(void *)__s1 + 8LL) == 0x726F62615F78745FLL
          && *(void *)(*(void *)__s1 + 16LL) == 0x616D73635F646574LL
          && *(void *)(*(void *)__s1 + 24LL) == 0x66666F6B6361625FLL)
        {
LABEL_192:
          objc_msgSend(v4, "setTxErrorTxAbortedCsmaBackoff:", sub_1000BE984(4, uint64));
        }

        else
        {
          if (*(void *)&__s1[8] != 32LL) {
            goto LABEL_155;
          }
          uint64_t v36 = *(uint64_t **)__s1;
LABEL_175:
          uint64_t v52 = *v36;
          uint64_t v53 = v36[1];
          uint64_t v55 = v36[2];
          uint64_t v54 = v36[3];
          unint64_t v56 = v52 == 0x726F7272655F7874LL && v53 == 0x726F62615F78745FLL;
          char v57 = v56 && v55 == 0x616D73635F646574LL;
          if (!v57 || v54 != 0x657261706572705FLL) {
            goto LABEL_155;
          }
          objc_msgSend(v4, "setTxErrorTxAbortedCsmaPrepare:", sub_1000BE984(4, uint64));
        }
      }

void sub_10003D580(_Unwind_Exception *a1)
{
  *(void *)(v1 - 160) = v1 - 120;
  sub_100006F6C((void ***)(v1 - 160));
  _Unwind_Resume(a1);
}

uint64_t sub_10003D694(uint64_t a1, unsigned int a2)
{
  uint64_t v4 = a1 + 72704;
  unsigned int v5 = (int *)(a1 + 70088);
  uint64_t v6 = (_BYTE *)(a1 + 68785);
  uint64_t v7 = (char *)(a1 + 67456);
  if (*(_BYTE *)(a1 + 1376))
  {
    int v8 = sub_1000D8DE8(a1);
    BOOL v9 = !sub_1000B50F4(v8);
  }

  else
  {
    LOBYTE(v9) = 1;
  }

  uint64_t result = 3LL;
  switch(*(_WORD *)(v4 + 982))
  {
    case 0xE4:
      goto LABEL_17;
    case 0xE5:
    case 0xE6:
    case 0xE7:
    case 0xE9:
    case 0xEC:
    case 0xED:
    case 0xEF:
      goto LABEL_141;
    case 0xE8:
      goto LABEL_67;
    case 0xEA:
      goto LABEL_5;
    case 0xEB:
      if (HIBYTE(a2) != 171 || v7[1302] != v7[1]) {
        goto LABEL_35;
      }
      sub_10015A00C(a1 + 32);
      sub_100159FC0(a1 + 32, 30.0);
      *(_WORD *)(v4 + 982) = 238;
LABEL_28:
      if (*v5 > 0 || *(void *)v4)
      {
        if (sub_100159F84(a1 + 32)) {
          return 0LL;
        }
        sub_10015A00C(a1 + 32);
        uint64_t v14 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v14)
        {
          int v15 = v14;
          goto LABEL_134;
        }

        if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          goto LABEL_134;
        }
        goto LABEL_133;
      }

      sub_10015A00C(a1 + 32);
      unsigned int v27 = *v7;
      if (v27 <= 0xE) {
        char v28 = v27 + 1;
      }
      else {
        char v28 = 1;
      }
      *uint64_t v7 = v28;
      v7[1] = v28 | 0x80;
      int v29 = spinel_cmd_prop_value_get((uint64_t)v6, 1300LL, 15617LL, v22, v23, v24, v25, v26);
      *unsigned int v5 = v29;
      if (*(void *)v4)
      {
        char v30 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v30)
        {
          int v31 = v30;
        }

        else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
          sub_1001FF028();
        }

        int v29 = *v5;
      }

      if (v29 > 0)
      {
        int v48 = operator new(0x20uLL);
        *int v48 = sub_1000D514C;
        v48[1] = 0LL;
        v48[2] = a1;
        *((_DWORD *)v48 + 6) = -16776976;
        v61[0] = (uint64_t)off_1002AD910;
        v61[1] = (uint64_t)v48;
        uint64_t v49 = operator new(0x20uLL);
        *uint64_t v49 = sub_1000D514C;
        v49[1] = 0LL;
        v49[2] = a1;
        *((_DWORD *)v49 + 6) = -33554192;
        v60[0] = (uint64_t)off_1002AD930;
        v60[1] = (uint64_t)v49;
        sub_100006D1C((uint64_t)sub_10003C800, v61, v60, &v62);
        sub_100007A04((uint64_t (***)())buf, &v62);
        sub_100006E08((uint64_t *)v4, (uint64_t *)buf);
        sub_1000075F0(buf);
        sub_1000075F0(v64);
        sub_100007618(v63);
        sub_1000075F0(v60);
        sub_100007618(v61);
        *uint64_t v6 = v7[1];
        sub_100159FC0(a1 + 32, 30.0);
        *(_WORD *)(v4 + 982) = 240;
LABEL_102:
        if ((a2 | 0x1000000) != 0xFF0000F0)
        {
          if (sub_100159F84(a1 + 32)) {
            return 0LL;
          }
          sub_10015A00C(a1 + 32);
          uint64_t v54 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (v54)
          {
            uint64_t v55 = v54;
            goto LABEL_134;
          }

          if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
            goto LABEL_134;
          }
          goto LABEL_129;
        }

        sub_10015A00C(a1 + 32);
        if (a2 != -16776976)
        {
          uint64_t v52 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (v52)
          {
            uint64_t v53 = v52;
            goto LABEL_134;
          }

          if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
            goto LABEL_134;
          }
          goto LABEL_129;
        }

        sub_100159FC0(a1 + 32, 30.0);
        *(_WORD *)(v4 + 982) = 241;
LABEL_105:
        if (!sub_100159F84(a1 + 32))
        {
          sub_10015A00C(a1 + 32);
          uint64_t v50 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (v50)
          {
            uint64_t v51 = v50;
            goto LABEL_134;
          }

          if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
            goto LABEL_134;
          }
LABEL_129:
          sub_1001FF028();
          goto LABEL_134;
        }

        return 0LL;
      }

      unint64_t v56 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v56)
      {
        char v57 = v56;
        goto LABEL_134;
      }

      if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
LABEL_133:
        sub_1001FF028();
        goto LABEL_134;
      }

      goto LABEL_134;
    case 0xEE:
      goto LABEL_28;
    case 0xF0:
      goto LABEL_102;
    case 0xF1:
      if (HIBYTE(a2) != 171 || v7[1302] != v7[1]) {
        goto LABEL_105;
      }
      sub_10015A00C(a1 + 32);
      *(_DWORD *)(a1 + 1524) = 0;
      goto LABEL_19;
    default:
      if (*(_WORD *)(v4 + 982) == 221) {
        goto LABEL_11;
      }
      if (*(_WORD *)(v4 + 982)) {
        goto LABEL_141;
      }
      sub_100159FC0(a1 + 32, 60.0);
      *(_WORD *)(v4 + 982) = 221;
LABEL_11:
      char v11 = HIBYTE(a2) != 171 || v9;
      if ((v11 & 1) == 0 && sub_100159F84(a1 + 32)) {
        return 0LL;
      }
      sub_10015A00C(a1 + 32);
      sub_100159FC0(a1 + 32, 60.0);
      *(_WORD *)(v4 + 982) = 228;
LABEL_17:
      if (v9)
      {
        sub_10015A00C(a1 + 32);
LABEL_19:
        uint64_t result = 2LL;
        goto LABEL_141;
      }

      if (sub_100159F84(a1 + 32)) {
        return 0LL;
      }
      sub_10015A00C(a1 + 32);
      int v12 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v12)
      {
        int v13 = v12;
        if (sub_10015A058(6) && os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)__n128 buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_INFO, "Tickle...", buf, 2u);
        }
      }

      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        sub_1001FF028();
      }

      sub_100159FC0(a1 + 32, 30.0);
      *(_WORD *)(v4 + 982) = 232;
LABEL_67:
      if (*v5 > 0 || *(void *)v4)
      {
        if (sub_100159F84(a1 + 32)) {
          return 0LL;
        }
        sub_10015A00C(a1 + 32);
        unint64_t v32 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v32)
        {
          char v33 = v32;
          goto LABEL_134;
        }

        if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          goto LABEL_134;
        }
LABEL_83:
        sub_1001FF028();
        goto LABEL_134;
      }

      sub_10015A00C(a1 + 32);
      unsigned int v39 = *v7;
      if (v39 <= 0xE) {
        char v40 = v39 + 1;
      }
      else {
        char v40 = 1;
      }
      *uint64_t v7 = v40;
      v7[1] = v40 | 0x80;
      int v41 = spinel_datatype_pack((uint64_t)v6, 1300LL, (uint64_t)"Ci", v34, v35, v36, v37, v38, 0LL);
      *unsigned int v5 = v41;
      if (*(void *)v4)
      {
        uint64_t v42 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v42)
        {
          uint64_t v43 = v42;
        }

        else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
          sub_1001FF028();
        }

        int v41 = *v5;
      }

      if (v41 <= 0)
      {
        char v46 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v46)
        {
          unsigned int v47 = v46;
          goto LABEL_134;
        }

        if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          goto LABEL_83;
        }
      }

      else
      {
        unint64_t v44 = operator new(0x20uLL);
        void *v44 = sub_1000D514C;
        v44[1] = 0LL;
        v44[2] = a1;
        *((_DWORD *)v44 + 6) = -16776982;
        v66[0] = (uint64_t)off_1002AD910;
        v66[1] = (uint64_t)v44;
        char v45 = operator new(0x20uLL);
        void *v45 = sub_1000D514C;
        v45[1] = 0LL;
        void v45[2] = a1;
        *((_DWORD *)v45 + 6) = -33554198;
        v65[0] = (uint64_t)off_1002AD930;
        v65[1] = (uint64_t)v45;
        sub_100006D1C((uint64_t)sub_10003C800, v66, v65, &v67);
        sub_100007A04((uint64_t (***)())buf, &v67);
        sub_100006E08((uint64_t *)v4, (uint64_t *)buf);
        sub_1000075F0(buf);
        sub_1000075F0(v69);
        sub_100007618(v68);
        sub_1000075F0(v65);
        sub_100007618(v66);
        *uint64_t v6 = v7[1];
        sub_100159FC0(a1 + 32, 30.0);
        *(_WORD *)(v4 + 982) = 234;
LABEL_5:
        if ((a2 | 0x1000000) == 0xFF0000EA)
        {
          sub_10015A00C(a1 + 32);
          if (a2 == -16776982)
          {
            sub_100159FC0(a1 + 32, 30.0);
            *(_WORD *)(v4 + 982) = 235;
LABEL_35:
            if (sub_100159F84(a1 + 32)) {
              return 0LL;
            }
            sub_10015A00C(a1 + 32);
            int v16 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
            if (v16)
            {
              char v17 = v16;
              goto LABEL_134;
            }

            if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
              goto LABEL_134;
            }
            goto LABEL_87;
          }

          uint64_t v20 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (v20)
          {
            uint64_t v21 = v20;
            goto LABEL_134;
          }

          if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
LABEL_87:
          }
            sub_1001FF028();
        }

        else
        {
          if (sub_100159F84(a1 + 32)) {
            return 0LL;
          }
          sub_10015A00C(a1 + 32);
          uint64_t v18 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (v18)
          {
            uint64_t v19 = v18;
            goto LABEL_134;
          }

          if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
            goto LABEL_87;
          }
        }
      }

LABEL_134:
      char v58 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v58)
      {
        unsigned int v59 = v58;
        if (sub_10015A058(3))
        {
          if (os_log_type_enabled(v59, OS_LOG_TYPE_ERROR)) {
            sub_1001FF494();
          }
        }
      }

      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        sub_1001FF028();
      }

      (*(void (**)(uint64_t))(*(void *)a1 + 120LL))(a1);
      uint64_t result = 3LL;
LABEL_141:
      *(_WORD *)(v4 + 982) = 0;
      return result;
  }

      sub_100147B4C(a3, &__p);
      int v16 = sub_1000A36C4((uint64_t **)(a1 + 64), a2);
      sub_100014D08((uint64_t)v16, (__int128 *)&__p);
      char v17 = (char *)sub_1000A36C4((uint64_t **)(a1 + 64), a2);
      if (v17[23] >= 0) {
        uint64_t v18 = v17;
      }
      else {
        uint64_t v18 = *(char **)v17;
      }
      sub_10010FFCC("vendor:coex:rx_mode", v18);
      uint64_t v19 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (!v19)
      {
        if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          sub_1001FB53C();
        }
        goto LABEL_192;
      }

      uint64_t v20 = (char)a2->__r_.__value_.__s.__size_;
      uint64_t v21 = (std::string *)a2->__r_.__value_.__r.__words[0];
      sub_100147B4C(a3, &__p);
      uint64_t v22 = (char *)(v20 >= 0 ? a2 : v21);
      uint64_t v23 = (__p.__r_.__value_.__s.__size_ & 0x80u) == 0 ? &__p : (std::string *)__p.__r_.__value_.__r.__words[0];
      LODWORD(buf.__r_.__value_.__l.__data_) = 136315394;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v22;
      WORD2(buf.__r_.__value_.__r.__words[1]) = 2080;
      *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v23;
      _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_INFO,  "Saved Vendor Settings property to restore it later: %s, value %s",  (uint8_t *)&buf,  0x16u);
      goto LABEL_181;
    }

void sub_10003E17C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  va_copy(va2, va1);
  uint64_t v10 = va_arg(va2, void);
  uint64_t v12 = va_arg(va2, void);
  uint64_t v13 = va_arg(va2, void);
  uint64_t v14 = va_arg(va2, void);
  uint64_t v15 = va_arg(va2, void);
  va_copy(va3, va2);
  uint64_t v16 = va_arg(va3, void);
  uint64_t v18 = va_arg(va3, void);
  uint64_t v19 = va_arg(va3, void);
  uint64_t v20 = va_arg(va3, void);
  sub_1000075F0((void *)(v3 - 112));
  sub_1000075F0(va3);
  sub_100007618((uint64_t *)va2);
  sub_1000075F0((uint64_t *)va);
  sub_100007618((uint64_t *)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_10003E21C(uint64_t a1, unsigned int a2)
{
  uint64_t v4 = a1 + 73720;
  uint64_t v5 = a1 + 70088;
  unsigned int v6 = sub_1000D8DE8(a1);
  BOOL v7 = (sub_1000B50B8(v6) & 1) != 0 || !*(_BYTE *)(a1 + 1376) || *(_DWORD *)v5 > 0;
  float v8 = (float)*(int *)(a1 + 1384);
  if (*(void *)v4 != *(void *)(v4 + 8) || *(_DWORD *)(v4 + 24)) {
    float v8 = v8 + 60.0;
  }
  unsigned int v9 = *(unsigned __int16 *)(v5 + 3598);
  if (v9 <= 0x117)
  {
    if (!*(_WORD *)(v5 + 3598))
    {
      *(_WORD *)(v5 + 3598) = 273;
      if (v7)
      {
LABEL_19:
        *(_WORD *)(v5 + 3598) = 280;
        goto LABEL_20;
      }

void sub_10003E400( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_10003E43C(uint64_t a1, int a2, unsigned int *a3)
{
  uint64_t v6 = a1 + 73648;
  if (a2 == -1409351680)
  {
    int v7 = *(_DWORD *)(a1 + 73680);
    if (v7 == 1)
    {
      *(_DWORD *)(a1 + 73680) = 0;
    }

    else if (!v7)
    {
      int v8 = *(_DWORD *)(a1 + 1524);
      BOOL v9 = __OFADD__(v8, 1);
      int v10 = v8 + 1;
      if (v9) {
        goto LABEL_578;
      }
      *(_DWORD *)(a1 + 1524) = v10;
      BOOL v11 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v11)
      {
        int v12 = v11;
      }

      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        sub_1001FF028();
      }

      *(_WORD *)(v6 + 38) = 0;
    }
  }

  uint64_t v13 = (void *)(a1 + 72704);
  uint64_t v14 = (int *)(a1 + 70088);
  uint64_t v15 = (_BYTE *)(a1 + 68785);
  uint64_t v16 = (char *)(a1 + 67456);
  unsigned int v17 = *(unsigned __int16 *)(v6 + 38);
  uint64_t result = 3LL;
  if (v17 <= 0x1B7)
  {
    if (*(unsigned __int16 *)(v6 + 38) > 0x197u)
    {
      if (*(unsigned __int16 *)(v6 + 38) > 0x1AAu)
      {
        if (*(unsigned __int16 *)(v6 + 38) > 0x1B3u)
        {
          if (v17 != 436)
          {
            __int16 v19 = 0;
            if (v17 != 438) {
              goto LABEL_588;
            }
LABEL_90:
            if ((a2 | 0x1000000) != 0xFF0001B6)
            {
              if (sub_100159F84(a1 + 32)) {
                return 0LL;
              }
              sub_10015A00C(a1 + 32);
              uint64_t v73 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
              if (v73)
              {
                goto LABEL_587;
              }

              if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
                goto LABEL_587;
              }
              goto LABEL_388;
            }

            sub_10015A00C(a1 + 32);
            if (a2 != -16776778)
            {
              unint64_t v74 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
              if (v74)
              {
                goto LABEL_587;
              }

              if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
                goto LABEL_587;
              }
              goto LABEL_388;
            }

            sub_100159FC0(a1 + 32, 30.0);
            *(_WORD *)(v6 + 38) = 440;
LABEL_134:
            if (sub_100159F84(a1 + 32)) {
              return 0LL;
            }
            sub_10015A00C(a1 + 32);
            uint64_t v55 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
            if (v55)
            {
              goto LABEL_587;
            }

            if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
              goto LABEL_587;
            }
LABEL_388:
            sub_1001FF028();
            goto LABEL_587;
          }

LABEL_433:
          if (*v14 > 0 || *v13)
          {
            if (sub_100159F84(a1 + 32)) {
              return 0LL;
            }
            sub_10015A00C(a1 + 32);
            char v155 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
            if (v155)
            {
              goto LABEL_587;
            }

            if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
              goto LABEL_587;
            }
            goto LABEL_536;
          }

          sub_10015A00C(a1 + 32);
          unsigned int v161 = *v16;
          if (v161 <= 0xE) {
            char v162 = v161 + 1;
          }
          else {
            char v162 = 1;
          }
          char *v16 = v162;
          *(_BYTE *)(a1 + 67457) = v162 | 0x80;
          int v163 = spinel_cmd_prop_value_get(a1 + 68785, 1300LL, 66LL, v156, v157, v158, v159, v160);
          *uint64_t v14 = v163;
          if (*v13)
          {
            uint64_t v164 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
            if (v164)
            {
            }

            else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
            {
              sub_1001FF028();
            }

            int v163 = *v14;
          }

          if (v163 <= 0)
          {
            char v173 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
            if (v173)
            {
              goto LABEL_587;
            }

            if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
              goto LABEL_587;
            }
            goto LABEL_536;
          }

          unint64_t v171 = operator new(0x20uLL);
          *unint64_t v171 = sub_1000D514C;
          v171[1] = 0LL;
          v171[2] = a1;
          *((_DWORD *)v171 + 6) = -16776778;
          v269[1] = (uint64_t)v171;
          v269[0] = (uint64_t)off_1002AD910;
          char v172 = operator new(0x20uLL);
          *char v172 = sub_1000D514C;
          v172[1] = 0LL;
          v172[2] = a1;
          *((_DWORD *)v172 + 6) = -33553994;
          v268[1] = (uint64_t)v172;
          v268[0] = (uint64_t)off_1002AD930;
          sub_100006D1C((uint64_t)sub_10003C800, v269, v268, &v270);
          sub_100007A04((uint64_t (***)())&buf, &v270);
          sub_100006E08((uint64_t *)(a1 + 72704), (uint64_t *)&buf);
          sub_1000075F0(&buf);
          sub_1000075F0(v272);
          sub_100007618(v271);
          sub_1000075F0(v268);
          sub_100007618(v269);
          _BYTE *v15 = *(_BYTE *)(a1 + 67457);
          sub_100159FC0(a1 + 32, 30.0);
          *(_WORD *)(v6 + 38) = 438;
          goto LABEL_90;
        }

        if (v17 != 427)
        {
          __int16 v19 = 0;
          if (v17 != 429) {
            goto LABEL_588;
          }
          if ((a2 & 0xFF000000) == 0xAB000000 && *(unsigned __int8 *)(a1 + 68758) == *(unsigned __int8 *)(a1 + 67457))
          {
            sub_10015A00C(a1 + 32);
            uint64_t v27 = sub_10004ECBC(a2, a3, v21, v22, v23, v24, v25, v26);
            if ((_DWORD)v27)
            {
              char v28 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
              if (v28)
              {
              }

              else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
              {
                sub_1001FF028();
              }

              goto LABEL_581;
            }

            if (sub_1000D8DE8(a1))
            {
LABEL_293:
              sub_100159FC0(a1 + 32, 30.0);
              *(_WORD *)(v6 + 38) = 448;
              goto LABEL_294;
            }

            sub_100159FC0(a1 + 32, 30.0);
            *(_WORD *)(v6 + 38) = 436;
            goto LABEL_433;
          }

          goto LABEL_361;
        }

LABEL_358:
        if ((a2 | 0x1000000) != 0xFF0001AB)
        {
          if (sub_100159F84(a1 + 32)) {
            return 0LL;
          }
          sub_10015A00C(a1 + 32);
          char v143 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (v143)
          {
            goto LABEL_587;
          }

          if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
            goto LABEL_587;
          }
          goto LABEL_384;
        }

        sub_10015A00C(a1 + 32);
        if (a2 != -16776789)
        {
          unsigned int v144 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (v144)
          {
            goto LABEL_587;
          }

          if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
            goto LABEL_587;
          }
          goto LABEL_384;
        }

        sub_100159FC0(a1 + 32, 30.0);
        *(_WORD *)(v6 + 38) = 429;
LABEL_361:
        if (sub_100159F84(a1 + 32)) {
          return 0LL;
        }
        sub_10015A00C(a1 + 32);
        char v142 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v142)
        {
          goto LABEL_587;
        }

        if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          goto LABEL_587;
        }
LABEL_384:
        sub_1001FF028();
        goto LABEL_587;
      }

      if (v17 != 408)
      {
        if (v17 != 417)
        {
          __int16 v19 = 0;
          if (v17 != 425) {
            goto LABEL_588;
          }
          goto LABEL_142;
        }

        if (a2 == -1409351680)
        {
          sub_10015A00C(a1 + 32);
LABEL_141:
          *(_DWORD *)(v6 + 32) = 0;
          sub_100159FC0(a1 + 32, 30.0);
          *(_WORD *)(v6 + 38) = 425;
LABEL_142:
          if (*v14 > 0 || *v13)
          {
            if (sub_100159F84(a1 + 32)) {
              return 0LL;
            }
            sub_10015A00C(a1 + 32);
            unint64_t v56 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
            if (v56)
            {
              goto LABEL_587;
            }

            if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
              goto LABEL_587;
            }
            goto LABEL_536;
          }

          sub_10015A00C(a1 + 32);
          unsigned int v80 = *v16;
          if (v80 <= 0xE) {
            char v81 = v80 + 1;
          }
          else {
            char v81 = 1;
          }
          char *v16 = v81;
          *(_BYTE *)(a1 + 67457) = v81 | 0x80;
          int v82 = spinel_cmd_prop_value_get(a1 + 68785, 1300LL, 1LL, v75, v76, v77, v78, v79);
          *uint64_t v14 = v82;
          if (*v13)
          {
            uint64_t v83 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
            if (v83)
            {
            }

            else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
            {
              sub_1001FF028();
            }

            int v82 = *v14;
          }

          if (v82 <= 0)
          {
            uint64_t v145 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
            if (v145)
            {
              goto LABEL_587;
            }

            if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
              goto LABEL_587;
            }
            goto LABEL_536;
          }

          uint64_t v140 = operator new(0x20uLL);
          *uint64_t v140 = sub_1000D514C;
          v140[1] = 0LL;
          v140[2] = a1;
          *((_DWORD *)v140 + 6) = -16776789;
          v274[1] = (uint64_t)v140;
          v274[0] = (uint64_t)off_1002AD910;
          unint64_t v141 = operator new(0x20uLL);
          *unint64_t v141 = sub_1000D514C;
          v141[1] = 0LL;
          v141[2] = a1;
          *((_DWORD *)v141 + 6) = -33554005;
          v273[1] = (uint64_t)v141;
          v273[0] = (uint64_t)off_1002AD930;
          sub_100006D1C((uint64_t)sub_10003C800, v274, v273, &v275);
          sub_100007A04((uint64_t (***)())&buf, &v275);
          sub_100006E08((uint64_t *)(a1 + 72704), (uint64_t *)&buf);
          sub_1000075F0(&buf);
          sub_1000075F0(v277);
          sub_100007618(v276);
          sub_1000075F0(v273);
          sub_100007618(v274);
          _BYTE *v15 = *(_BYTE *)(a1 + 67457);
          sub_100159FC0(a1 + 32, 30.0);
          *(_WORD *)(v6 + 38) = 427;
          goto LABEL_358;
        }

        goto LABEL_501;
      }

      goto LABEL_498;
    }

    if (*(unsigned __int16 *)(v6 + 38) > 0x172u)
    {
      if (v17 == 371)
      {
        if (sub_100159F84(a1 + 32)) {
          return 1LL;
        }
        sub_10015A00C(a1 + 32);
        goto LABEL_335;
      }

      if (v17 == 375)
      {
        if (sub_100159F84(a1 + 32)) {
          return 1LL;
        }
        sub_10015A00C(a1 + 32);
        int v68 = *(_DWORD *)(a1 + 1524);
        int v69 = *(_DWORD *)(a1 + 1528);
        if (v68 > v69)
        {
          char v70 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (v70)
          {
          }

          else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
          {
            sub_1001FF028();
          }

          sub_1000DA700(a1, 1LL);
          goto LABEL_344;
        }

        if (*(_BYTE *)(a1 + 1378))
        {
          BOOL v9 = __OFSUB__(v69, 1);
          int v84 = v69 - 1;
          if (v9)
          {
            __break(0x5515u);
            JUMPOUT(0x100040C74LL);
          }

          if (v68 > v84 && (*(unsigned int (**)(uint64_t))(*(void *)a1 + 288LL))(a1))
          {
            unsigned int v85 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
            if (v85)
            {
            }

            else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
            {
              sub_1001FF028();
            }

            (*(void (**)(uint64_t))(*(void *)a1 + 272LL))(a1);
            __int16 v19 = 0;
            uint64_t result = 0LL;
            goto LABEL_588;
          }
        }

        uint64_t v100 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v100)
        {
        }

        else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
          sub_1001FF028();
        }

        sub_1000DA700(a1, 0LL);
        __n128 buf = 0uLL;
        uint64_t v285 = 0LL;
        sub_100006EFC(a1 + 73720, &buf);
        v283[0] = (void **)&buf;
        sub_100006F6C(v283);
        *(_DWORD *)(v6 + sub_10001C704(v1 - 96) = 0;
        (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 128LL))(a1, 11LL);
        if ((*(_BYTE *)(a1 + 1524) & 1) == 0)
        {
          (*(void (**)(uint64_t))(*(void *)a1 + 96LL))(a1);
LABEL_500:
          *(_DWORD *)(v6 + 32) = 1;
          sub_100159FC0(a1 + 32, 30.0);
          *(_WORD *)(v6 + 38) = 417;
LABEL_501:
          if (sub_100159F84(a1 + 32)) {
            return 0LL;
          }
          sub_10015A00C(a1 + 32);
          uint64_t v176 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (v176)
          {
            goto LABEL_587;
          }

          if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
            goto LABEL_587;
          }
LABEL_524:
          sub_1001FF028();
          goto LABEL_587;
        }

        sub_100159FC0(a1 + 32, 30.0);
        *(_WORD *)(v6 + 38) = 406;
      }

      else
      {
        __int16 v19 = 0;
        if (v17 != 406) {
          goto LABEL_588;
        }
      }

      if (*v14 > 0 || *v13)
      {
        if (sub_100159F84(a1 + 32)) {
          return 0LL;
        }
        sub_10015A00C(a1 + 32);
        int v29 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v29)
        {
          goto LABEL_587;
        }

        if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          goto LABEL_587;
        }
      }

      else
      {
        sub_10015A00C(a1 + 32);
        unsigned int v120 = *v16;
        if (v120 <= 0xE) {
          char v121 = v120 + 1;
        }
        else {
          char v121 = 1;
        }
        char *v16 = v121;
        *(_BYTE *)(a1 + 67457) = v121 | 0x80;
        int v122 = spinel_datatype_pack(a1 + 68785, 1300LL, (uint64_t)"Ci", v115, v116, v117, v118, v119, 0LL);
        *uint64_t v14 = v122;
        if (*v13)
        {
          unint64_t v123 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (v123)
          {
          }

          else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
          {
            sub_1001FF028();
          }

          int v122 = *v14;
        }

        if (v122 > 0)
        {
          unsigned int v174 = operator new(0x20uLL);
          *unsigned int v174 = sub_1000D514C;
          v174[1] = 0LL;
          v174[2] = a1;
          *((_DWORD *)v174 + 6) = -16776808;
          v279[1] = (uint64_t)v174;
          v279[0] = (uint64_t)off_1002AD910;
          uint64_t v175 = operator new(0x20uLL);
          *uint64_t v175 = sub_1000D514C;
          v175[1] = 0LL;
          v175[2] = a1;
          *((_DWORD *)v175 + 6) = -33554024;
          v278[1] = (uint64_t)v175;
          v278[0] = (uint64_t)off_1002AD930;
          sub_100006D1C((uint64_t)sub_10003C800, v279, v278, &v280);
          sub_100007A04((uint64_t (***)())&buf, &v280);
          sub_100006E08((uint64_t *)(a1 + 72704), (uint64_t *)&buf);
          sub_1000075F0(&buf);
          sub_1000075F0(v282);
          sub_100007618(v281);
          sub_1000075F0(v278);
          sub_100007618(v279);
          _BYTE *v15 = *(_BYTE *)(a1 + 67457);
          sub_100159FC0(a1 + 32, 30.0);
          *(_WORD *)(v6 + 38) = 408;
LABEL_498:
          if ((a2 | 0x1000000) != 0xFF000198)
          {
            if (sub_100159F84(a1 + 32)) {
              return 0LL;
            }
            sub_10015A00C(a1 + 32);
            unint64_t v177 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
            if (v177)
            {
              goto LABEL_587;
            }

            if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
              goto LABEL_587;
            }
            goto LABEL_524;
          }

          sub_10015A00C(a1 + 32);
          if (a2 != -16776808)
          {
            char v178 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
            if (v178)
            {
              goto LABEL_587;
            }

            if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
              goto LABEL_587;
            }
            goto LABEL_524;
          }

          goto LABEL_500;
        }

        char v179 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v179)
        {
          goto LABEL_587;
        }

        if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          goto LABEL_587;
        }
      }

      sub_1001FF028();
      goto LABEL_587;
    }

    if (*(_WORD *)(v6 + 38))
    {
      if (v17 != 320)
      {
        __int16 v19 = 0;
        if (v17 != 358) {
          goto LABEL_588;
        }
        goto LABEL_327;
      }
    }

    else
    {
      *(_WORD *)(v6 + 38) = 320;
    }

    uint64_t v45 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 280LL))(a1);
    char v46 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    unsigned int v47 = v46;
    if (!(_DWORD)v45)
    {
      if (v46)
      {
        if (sub_10015A058(6) && os_log_type_enabled(v47, OS_LOG_TYPE_INFO))
        {
          buf.n128_u16[0] = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v47,  OS_LOG_TYPE_INFO,  "Firmware Update Complete.",  (uint8_t *)&buf,  2u);
        }
      }

      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        sub_1001FF028();
      }

                                              sub_100147B4C(a3, &__p);
                                              unsigned int v144 = sub_1000A36C4((uint64_t **)(a1 + 64), a2);
                                              sub_100014D08((uint64_t)v144, (__int128 *)&__p);
                                              uint64_t v145 = (char *)sub_1000A36C4((uint64_t **)(a1 + 64), a2);
                                              if (v145[23] >= 0) {
                                                uint64_t v146 = v145;
                                              }
                                              else {
                                                uint64_t v146 = *(char **)v145;
                                              }
                                              sub_10010FFCC("vendor:coex:RxThrottle:Timeout", v146);
                                              unint64_t v147 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
                                              if (!v147)
                                              {
                                                if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
                                                  sub_1001FB53C();
                                                }
                                                goto LABEL_338;
                                              }

                                              if (sub_10015A058(6)
                                                && os_log_type_enabled(v147, OS_LOG_TYPE_INFO))
                                              {
                                                char v148 = (char)a2->__r_.__value_.__s.__size_;
                                                char v149 = (std::string *)a2->__r_.__value_.__r.__words[0];
                                                sub_100147B4C(a3, &__p);
                                                unsigned int v150 = (char *)(v148 >= 0 ? a2 : v149);
                                                uint64_t v151 = (__p.__r_.__value_.__s.__size_ & 0x80u) == 0
                                                     ? &__p
                                                     : (std::string *)__p.__r_.__value_.__r.__words[0];
                                                LODWORD(buf.__r_.__value_.__l.__data_) = 136315394;
                                                *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v150;
                                                WORD2(buf.__r_.__value_.__r.__words[1]) = 2080;
                                                *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v151;
                                                _os_log_impl( (void *)&_mh_execute_header,  v147,  OS_LOG_TYPE_INFO,  "Saved Vendor Settings property to restore it later: %s, value %s",  (uint8_t *)&buf,  0x16u);
                                              }

                                              goto LABEL_338;
                                            }

                                            goto LABEL_339;
                                          }

LABEL_318:
      if (sub_1000D8DE8(a1) != 1)
      {
        sub_100070BF0(a1, (void *)(a1 + 73928));
        unint64_t v135 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v135)
        {
          if (sub_10015A058(6) && os_log_type_enabled(v135, OS_LOG_TYPE_INFO))
          {
            buf.n128_u16[0] = 0;
            _os_log_impl((void *)&_mh_execute_header, v135, OS_LOG_TYPE_INFO, "Initializing NCP", (uint8_t *)&buf, 2u);
          }
        }

        else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
          sub_1001FF028();
        }

        (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 152LL))(a1, 1LL);
        sub_1000DA700(a1, 0LL);
        (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 104LL))(a1, 1LL);
        sub_1000ED4AC(a1);
        std::string::assign((std::string *)(a1 + 1352), "");
        *(_DWORD *)(v6 + 32) = 1;
        if (!*(_BYTE *)(v6 + 256))
        {
          sub_1001144CC((int *)(a1 + 1536));
          sub_100159FC0(a1 + 32, v139);
          uint64_t result = 1LL;
          __int16 v19 = 371;
          goto LABEL_588;
        }

        sub_100159FC0(a1 + 32, 30.0);
        *(_WORD *)(v6 + 38) = 358;
LABEL_327:
        if (*(_BYTE *)(v6 + 256))
        {
          if (sub_100159F84(a1 + 32)) {
            return 0LL;
          }
          sub_10015A00C(a1 + 32);
          int v136 = *(_DWORD *)(a1 + 1524);
          BOOL v9 = __OFADD__(v136, 1);
          int v137 = v136 + 1;
          if (!v9)
          {
            *(_DWORD *)(a1 + 1524) = v137;
            *(_BYTE *)(v6 + 256) = 0;
            unsigned int v138 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
            if (v138)
            {
            }

            else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
            {
              sub_1001FF028();
            }

            goto LABEL_335;
          }

          goto LABEL_578;
        }

        sub_10015A00C(a1 + 32);
LABEL_335:
        sub_100159FC0(a1 + 32, 0.1);
        uint64_t result = 1LL;
        __int16 v19 = 375;
        goto LABEL_588;
      }

LABEL_344:
      __int16 v19 = 0;
      uint64_t result = 2LL;
      goto LABEL_588;
    }

    if (v46)
    {
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FF028();
    }

    int v86 = *(_DWORD *)(a1 + 1524);
    BOOL v9 = __OFADD__(v86, 1);
    int v87 = v86 + 1;
    if (!v9)
    {
      *(_DWORD *)(a1 + 1524) = v87;
      unint64_t v88 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v88)
      {
      }

      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        sub_1001FF028();
      }

      if (*(_DWORD *)(a1 + 1524) > *(_DWORD *)(a1 + 1528))
      {
        char v89 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v89)
        {
        }

        else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
          sub_1001FF028();
        }

        sub_1000DA700(a1, 1LL);
      }

      goto LABEL_318;
    }

LABEL_578:
    __break(0x5500u);
    goto LABEL_579;
  }

  if (*(unsigned __int16 *)(v6 + 38) > 0x22Bu)
  {
    if (*(unsigned __int16 *)(v6 + 38) > 0x245u)
    {
      if (*(unsigned __int16 *)(v6 + 38) <= 0x257u)
      {
        if (v17 == 582)
        {
          uint64_t v27 = 0LL;
          goto LABEL_602;
        }

        uint64_t v27 = 0LL;
        __int16 v19 = 0;
        if (v17 != 599) {
          goto LABEL_588;
        }
LABEL_42:
        if ((a2 | 0x1000000) == 0xFF000257)
        {
          sub_10015A00C(a1 + 32);
          if (a2 == -16776617)
          {
            sub_100159FC0(a1 + 32, 30.0);
            *(_WORD *)(v6 + 38) = 600;
LABEL_166:
            if (sub_100159F84(a1 + 32)) {
              return 0LL;
            }
            sub_10015A00C(a1 + 32);
            unsigned int v65 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
            if (v65)
            {
              goto LABEL_580;
            }

            if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
              goto LABEL_580;
            }
LABEL_352:
            sub_1001FF028();
            goto LABEL_580;
          }

          uint64_t v67 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (!v67)
          {
            if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
              goto LABEL_580;
            }
            goto LABEL_352;
          }
        }

        else
        {
          if (sub_100159F84(a1 + 32)) {
            return 0LL;
          }
          sub_10015A00C(a1 + 32);
          uint64_t v66 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (!v66)
          {
            if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
              goto LABEL_580;
            }
            goto LABEL_352;
          }
        }

LABEL_580:
        if (!(_DWORD)v27) {
          goto LABEL_587;
        }
LABEL_581:
        uint64_t v188 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v188)
        {
        }

        else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
          sub_1001FF028();
        }

        goto LABEL_587;
      }

      if (v17 == 600)
      {
        if ((a2 & 0xFF000000) == 0xAB000000 && *(unsigned __int8 *)(a1 + 68758) == *(unsigned __int8 *)(a1 + 67457))
        {
          sub_10015A00C(a1 + 32);
          uint64_t v27 = sub_10004ECBC(a2, a3, v58, v59, v60, v61, v62, v63);
          if ((_DWORD)v27)
          {
            uint64_t v64 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
            if (v64)
            {
            }

            else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
            {
              sub_1001FF028();
            }
          }

          goto LABEL_614;
        }

        uint64_t v27 = 0LL;
        goto LABEL_166;
      }

      __int16 v19 = 0;
      if (v17 != 667) {
        goto LABEL_588;
      }
      if (!sub_100159F84(a1 + 32))
      {
        sub_10015A00C(a1 + 32);
        int v39 = *(_DWORD *)(a1 + 1524);
        BOOL v9 = __OFADD__(v39, 1);
        int v40 = v39 + 1;
        if (!v9)
        {
          *(_DWORD *)(a1 + 1524) = v40;
          int v41 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (v41)
          {
          }

          else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
          {
            sub_1001FF028();
          }

          goto LABEL_335;
        }

        goto LABEL_578;
      }

      return 1LL;
    }

    if (v17 != 556)
    {
      uint64_t v27 = 0LL;
      if (v17 != 560)
      {
        __int16 v19 = 0;
        if (v17 != 561) {
          goto LABEL_588;
        }
        if ((a2 & 0xFF000000) == 0xAB000000 && *(unsigned __int8 *)(a1 + 68758) == *(unsigned __int8 *)(a1 + 67457))
        {
          sub_10015A00C(a1 + 32);
          uint64_t v27 = sub_10004ECBC(a2, a3, v30, v31, v32, v33, v34, v35);
          if (!(_DWORD)v27) {
            goto LABEL_574;
          }
          uint64_t v36 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (!v36)
          {
            if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
              sub_1001FF028();
            }
            goto LABEL_574;
          }

          unsigned int v37 = *(_DWORD *)(v6 + 40);
          if (v37 <= 0x1F)
          {
            sub_100201D9C(v37, v27, (uint64_t)v283, v36);
            goto LABEL_574;
          }

LABEL_579:
          __break(0x5512u);
          __break(1u);
          JUMPOUT(0x1000410D4LL);
        }

        uint64_t v27 = 0LL;
        goto LABEL_397;
      }

        if (sub_10006CA2C(__p, a1 + 9099)) {
          sub_100076DCC(a1 + 9099, &__p[0].__sig);
        }
        sub_10000D0D4((uint64_t)__p);
        goto LABEL_609;
      case 8:
        sub_100018E5C(__p, a3, (uint64_t)a3 + a4);
        if ((_DWORD)a4 == 8) {
          sub_100112E3C((unsigned __int8 *)a1, a3);
        }
        goto LABEL_537;
      case 12:
        v352[0] = 0;
        int v98 = (int)spinel_datatype_unpack(a3, a4, "C", a4, a5, a6, a7, a8, (uint64_t)v352) > 0;
        unsigned int v99 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        uint64_t v100 = v99;
        if (!v98)
        {
          if (v99)
          {
            goto LABEL_609;
          }

          if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
            goto LABEL_609;
          }
          goto LABEL_576;
        }

        if (v99)
        {
          if (sub_10015A058(6) && os_log_type_enabled(v100, OS_LOG_TYPE_INFO))
          {
            LODWORD(__p[0].__sig) = 67109120;
            HIDWORD(__p[0].__sig) = v352[0];
            _os_log_impl( (void *)&_mh_execute_header,  v100,  OS_LOG_TYPE_INFO,  "[-NCP-]: Host Power State %d",  (uint8_t *)__p,  8u);
          }
        }

        else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
          sub_1001FB53C();
        }

        sub_10000AC00(__p, "NCP:HostPowerState");
        uint64_t v157 = operator new(0x10uLL);
        *(void *)uint64_t v157 = &off_1002AE118;
        v157[8] = v352[0];
        buf.__r_.__value_.__r.__words[0] = (std::string::size_type)v157;
        (*(void (**)(uint64_t *, pthread_mutex_t *, std::string *))(*a1 + 360))(a1, __p, &buf);
LABEL_474:
        unint64_t v177 = buf.__r_.__value_.__r.__words[0];
        if (!buf.__r_.__value_.__r.__words[0]) {
          goto LABEL_476;
        }
        goto LABEL_475;
      case 13:
        buf.__r_.__value_.__s.__data_[0] = 0;
        uint64_t v101 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v101)
        {
          if (sub_10015A058(6) && os_log_type_enabled(v101, OS_LOG_TYPE_INFO))
          {
            LODWORD(__p[0].__sig) = 136315394;
            *(uint64_t *)((char *)&__p[0].__sig + 4) = (uint64_t)spinel_mcu_power_state_to_cstr(buf.__r_.__value_.__s.__data_[0]);
            *(_WORD *)&__p[0].__opaque[4] = 1024;
            *(_DWORD *)&__p[0].__opaque[6] = buf.__r_.__value_.__s.__data_[0];
            _os_log_impl( (void *)&_mh_execute_header,  v101,  OS_LOG_TYPE_INFO,  "[-NCP-]: MCU power state %s (%d)",  (uint8_t *)__p,  0x12u);
          }
        }

        else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
          sub_1001FB53C();
        }

        uint64_t v158 = sub_1000D8DE8((uint64_t)a1);
        if ((v158 - 4) >= 2)
        {
          if (v158 != 3 || buf.__r_.__value_.__s.__data_[0]) {
            goto LABEL_609;
          }
          if (*((_BYTE *)v9 + 5)) {
            uint64_t v159 = 5LL;
          }
          else {
            uint64_t v159 = 4LL;
          }
        }

        else
        {
          if (buf.__r_.__value_.__s.__data_[0] != 1) {
            goto LABEL_609;
          }
          uint64_t v159 = 3LL;
        }

        sub_1000DA700((uint64_t)a1, v159);
        goto LABEL_609;
      default:
        switch((int)a2)
        {
          case '!':
            *(_DWORD *)v352 = 0;
            unsigned int v17 = (int)spinel_datatype_unpack(a3, a4, "i", a4, a5, a6, a7, a8, (uint64_t)v352) > 0;
            uint64_t v18 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
            __int16 v19 = v18;
            if (v17)
            {
              if (v18)
              {
                if (sub_10015A058(6) && os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
                {
                  LODWORD(__p[0].__sig) = 67109120;
                  HIDWORD(__p[0].__sig) = *(_DWORD *)v352;
                  _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_INFO,  "[-NCP-]: Channel %d",  (uint8_t *)__p,  8u);
                }
              }

              else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
              {
                sub_1001FB53C();
              }

              if (*(_DWORD *)v352 != *((unsigned __int8 *)a1 + 1498))
              {
                *((_BYTE *)a1 + 1498) = v352[0];
                sub_10000AC00(__p, "NCP:Channel");
                uint64_t v160 = operator new(0x10uLL);
                *(void *)uint64_t v160 = &off_1002AE118;
                v160[8] = *((_BYTE *)a1 + 1498);
                buf.__r_.__value_.__r.__words[0] = (std::string::size_type)v160;
                (*(void (**)(uint64_t *, pthread_mutex_t *, std::string *))(*a1 + 360))(a1, __p, &buf);
                goto LABEL_450;
              }

              goto LABEL_609;
            }

            if (v18)
            {
              goto LABEL_609;
            }

            if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
              goto LABEL_609;
            }
            goto LABEL_576;
          case '""':
            __p[0].__sig = 0LL;
            *((_DWORD *)v9 + 249) = sub_1001472F4(&__p[0].__sig);
            uint64_t v105 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
            if (v105)
            {
              if (sub_10015A058(6) && os_log_type_enabled(v105, OS_LOG_TYPE_INFO))
              {
                uint64_t v106 = *((_DWORD *)v9 + 249);
                LODWORD(buf.__r_.__value_.__l.__data_) = 67109120;
                HIDWORD(buf.__r_.__value_.__r.__words[0]) = v106;
                uint64_t v107 = "[-NCP-]: Supported Channel Mask 0x%x";
                goto LABEL_329;
              }

              goto LABEL_215;
            }

            if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
              goto LABEL_215;
            }
            goto LABEL_568;
          case '%':
            v352[0] = 0;
            uint64_t v102 = (int)spinel_datatype_unpack(a3, a4, "c", a4, a5, a6, a7, a8, (uint64_t)v352) > 0;
            uint64_t v103 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
            uint64_t v104 = v103;
            if (v102)
            {
              if (v103)
              {
                if (sub_10015A058(6) && os_log_type_enabled(v104, OS_LOG_TYPE_INFO))
                {
                  LODWORD(__p[0].__sig) = 67109120;
                  HIDWORD(__p[0].__sig) = v352[0];
                  _os_log_impl( (void *)&_mh_execute_header,  v104,  OS_LOG_TYPE_INFO,  "[-NCP-]: Tx power %d",  (uint8_t *)__p,  8u);
                }
              }

              else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
              {
                sub_1001FB53C();
              }

              if (*(_DWORD *)v9 != v352[0])
              {
                *(_DWORD *)BOOL v9 = v352[0];
                sub_10000AC00(__p, "NCP:TXPower");
                unsigned int v161 = operator new(0x10uLL);
                *(void *)unsigned int v161 = &off_1002AE160;
                v161[2] = *(_DWORD *)v9;
                buf.__r_.__value_.__r.__words[0] = (std::string::size_type)v161;
                (*(void (**)(uint64_t *, pthread_mutex_t *, std::string *))(*a1 + 360))(a1, __p, &buf);
LABEL_450:
                if (buf.__r_.__value_.__r.__words[0]) {
                  (*(void (**)(std::string::size_type))(*(void *)buf.__r_.__value_.__l.__data_ + 8LL))(buf.__r_.__value_.__r.__words[0]);
                }
                if (__p[0].__opaque[15] < 0) {
                  operator delete((void *)__p[0].__sig);
                }
              }

              goto LABEL_609;
            }

            if (v103)
            {
              goto LABEL_609;
            }

            if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
              goto LABEL_609;
            }
            break;
          case ')':
            __p[0].__sig = 0LL;
            *((_DWORD *)v9 + 250) = sub_1001472F4(&__p[0].__sig);
            uint64_t v105 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
            if (v105)
            {
              if (sub_10015A058(6) && os_log_type_enabled(v105, OS_LOG_TYPE_INFO))
              {
                float v139 = *((_DWORD *)v9 + 250);
                LODWORD(buf.__r_.__value_.__l.__data_) = 67109120;
                HIDWORD(buf.__r_.__value_.__r.__words[0]) = v139;
                uint64_t v107 = "[-NCP-]: Preferred Channel Mask 0x%x";
LABEL_329:
                _os_log_impl((void *)&_mh_execute_header, v105, OS_LOG_TYPE_INFO, v107, (uint8_t *)&buf, 8u);
              }
            }

            else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
            {
LABEL_568:
              sub_1001FB53C();
            }

LABEL_394:
      if ((a2 | 0x1000000) == 0xFF000230)
      {
        sub_10015A00C(a1 + 32);
        if (a2 == -16776656)
        {
          sub_100159FC0(a1 + 32, 30.0);
          *(_WORD *)(v6 + 38) = 561;
LABEL_397:
          if (sub_100159F84(a1 + 32)) {
            return 0LL;
          }
          sub_10015A00C(a1 + 32);
          char v148 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (v148)
          {
            goto LABEL_580;
          }

          if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
            goto LABEL_580;
          }
          goto LABEL_420;
        }

        unsigned int v150 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v150)
        {
          goto LABEL_580;
        }

        if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          goto LABEL_580;
        }
      }

      else
      {
        if (sub_100159F84(a1 + 32)) {
          return 0LL;
        }
        sub_10015A00C(a1 + 32);
        char v149 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v149)
        {
          goto LABEL_580;
        }

        if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          goto LABEL_580;
        }
      }

LABEL_420:
      sub_1001FF028();
      goto LABEL_580;
    }

    uint64_t v27 = 0LL;
LABEL_150:
    if (*v14 > 0 || *v13)
    {
      if (sub_100159F84(a1 + 32)) {
        return 0LL;
      }
      sub_10015A00C(a1 + 32);
      char v57 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v57)
      {
        goto LABEL_580;
      }

      if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        goto LABEL_580;
      }
    }

    else
    {
      sub_10015A00C(a1 + 32);
      unsigned int v95 = *v16;
      if (v95 <= 0xE) {
        char v96 = v95 + 1;
      }
      else {
        char v96 = 1;
      }
      char *v16 = v96;
      *(_BYTE *)(a1 + 67457) = v96 | 0x80;
      uint64_t v97 = *(unsigned int *)(v6 + 40);
      int v98 = spinel_cmd_prop_value_get( a1 + 68785,  1300LL,  dword_100224A58[2 * v97],  v90,  v91,  v92,  v93,  v94);
      *uint64_t v14 = v98;
      if (*v13)
      {
        unsigned int v99 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v99)
        {
        }

        else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
          sub_1001FF028();
        }

        int v98 = *v14;
      }

      if (v98 > 0)
      {
        uint64_t v146 = operator new(0x20uLL);
        *uint64_t v146 = sub_1000D514C;
        v146[1] = 0LL;
        v146[2] = a1;
        *((_DWORD *)v146 + 6) = -16776656;
        v252[1] = (uint64_t)v146;
        v252[0] = (uint64_t)off_1002AD910;
        unint64_t v147 = operator new(0x20uLL);
        *unint64_t v147 = sub_1000D514C;
        v147[1] = 0LL;
        v147[2] = a1;
        *((_DWORD *)v147 + 6) = -33553872;
        v251[0] = (uint64_t)off_1002AD930;
        v251[1] = (uint64_t)v147;
        sub_100006D1C((uint64_t)sub_10003C800, v252, v251, &v253);
        sub_100007A04((uint64_t (***)())&buf, &v253);
        sub_100006E08((uint64_t *)(a1 + 72704), (uint64_t *)&buf);
        sub_1000075F0(&buf);
        sub_1000075F0(v255);
        sub_100007618(v254);
        sub_1000075F0(v251);
        sub_100007618(v252);
        _BYTE *v15 = *(_BYTE *)(a1 + 67457);
        sub_100159FC0(a1 + 32, 30.0);
        *(_WORD *)(v6 + 38) = 560;
        goto LABEL_394;
      }

      uint64_t v151 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v151)
      {
        goto LABEL_580;
      }

      if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        goto LABEL_580;
      }
    }

LABEL_655:
    sub_1001FF028();
    goto LABEL_580;
  }

  if (*(unsigned __int16 *)(v6 + 38) <= 0x1C3u)
  {
    if (v17 != 440)
    {
      if (v17 != 448)
      {
        __int16 v19 = 0;
        if (v17 != 450) {
          goto LABEL_588;
        }
LABEL_63:
        if ((a2 | 0x1000000) != 0xFF0001C2)
        {
          if (sub_100159F84(a1 + 32)) {
            return 0LL;
          }
          sub_10015A00C(a1 + 32);
          unsigned int v71 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (v71)
          {
            goto LABEL_587;
          }

          if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
            goto LABEL_587;
          }
          goto LABEL_386;
        }

        sub_10015A00C(a1 + 32);
        if (a2 != -16776766)
        {
          uint64_t v72 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (v72)
          {
            goto LABEL_587;
          }

          if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
            goto LABEL_587;
          }
          goto LABEL_386;
        }

        sub_100159FC0(a1 + 32, 30.0);
        *(_WORD *)(v6 + 38) = 452;
LABEL_109:
        if (sub_100159F84(a1 + 32)) {
          return 0LL;
        }
        sub_10015A00C(a1 + 32);
        unint64_t v44 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v44)
        {
          goto LABEL_587;
        }

        if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          goto LABEL_587;
        }
LABEL_386:
        sub_1001FF028();
        goto LABEL_587;
      }

LABEL_294:
      if (*v14 > 0 || *v13)
      {
        if (sub_100159F84(a1 + 32)) {
          return 0LL;
        }
        sub_10015A00C(a1 + 32);
        char v124 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v124)
        {
          goto LABEL_587;
        }

        if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          goto LABEL_587;
        }
        goto LABEL_536;
      }

      sub_10015A00C(a1 + 32);
      unsigned int v130 = *v16;
      if (v130 <= 0xE) {
        char v131 = v130 + 1;
      }
      else {
        char v131 = 1;
      }
      char *v16 = v131;
      *(_BYTE *)(a1 + 67457) = v131 | 0x80;
      int v132 = spinel_cmd_prop_value_get(a1 + 68785, 1300LL, 67LL, v125, v126, v127, v128, v129);
      *uint64_t v14 = v132;
      if (*v13)
      {
        uint64_t v133 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v133)
        {
        }

        else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
          sub_1001FF028();
        }

        int v132 = *v14;
      }

      if (v132 <= 0)
      {
        char v154 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v154)
        {
          goto LABEL_587;
        }

        if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          goto LABEL_587;
        }
        goto LABEL_536;
      }

      uint64_t v152 = operator new(0x20uLL);
      *uint64_t v152 = sub_1000D514C;
      v152[1] = 0LL;
      v152[2] = a1;
      *((_DWORD *)v152 + 6) = -16776766;
      v264[1] = (uint64_t)v152;
      v264[0] = (uint64_t)off_1002AD910;
      unint64_t v153 = operator new(0x20uLL);
      *unint64_t v153 = sub_1000D514C;
      v153[1] = 0LL;
      v153[2] = a1;
      *((_DWORD *)v153 + 6) = -33553982;
      v263[1] = (uint64_t)v153;
      v263[0] = (uint64_t)off_1002AD930;
      sub_100006D1C((uint64_t)sub_10003C800, v264, v263, &v265);
      sub_100007A04((uint64_t (***)())&buf, &v265);
      sub_100006E08((uint64_t *)(a1 + 72704), (uint64_t *)&buf);
      sub_1000075F0(&buf);
      sub_1000075F0(v267);
      sub_100007618(v266);
      sub_1000075F0(v263);
      sub_100007618(v264);
      _BYTE *v15 = *(_BYTE *)(a1 + 67457);
      sub_100159FC0(a1 + 32, 30.0);
      *(_WORD *)(v6 + 38) = 450;
      goto LABEL_63;
    }

    if ((a2 & 0xFF000000) == 0xAB000000 && *(unsigned __int8 *)(a1 + 68758) == *(unsigned __int8 *)(a1 + 67457))
    {
      sub_10015A00C(a1 + 32);
      if (!sub_1000D8DE8(a1))
      {
        uint64_t v54 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v54)
        {
          goto LABEL_587;
        }

        if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          goto LABEL_587;
        }
        goto LABEL_536;
      }

      goto LABEL_293;
    }

    goto LABEL_134;
  }

  if (*(unsigned __int16 *)(v6 + 38) <= 0x1D0u)
  {
    if (v17 != 452)
    {
      __int16 v19 = 0;
      if (v17 != 463) {
        goto LABEL_588;
      }
      goto LABEL_19;
    }

    if ((a2 & 0xFF000000) == 0xAB000000 && *(unsigned __int8 *)(a1 + 68758) == *(unsigned __int8 *)(a1 + 67457))
    {
      sub_10015A00C(a1 + 32);
      if (!sub_1000D8DE8(a1))
      {
        uint64_t v134 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v134)
        {
          goto LABEL_587;
        }

        if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          goto LABEL_587;
        }
        goto LABEL_536;
      }

      int v42 = sub_1000D8DE8(a1);
      if (sub_1000B50A8(v42))
      {
        uint64_t v43 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v43)
        {
          goto LABEL_587;
        }

        if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          goto LABEL_587;
        }
        goto LABEL_536;
      }

      if (*(_BYTE *)(v6 + 257))
      {
        sub_100159FC0(a1 + 32, 30.0);
        *(_WORD *)(v6 + 38) = 463;
LABEL_19:
        if (*v14 > 0 || *v13)
        {
          if (!sub_100159F84(a1 + 32))
          {
            sub_10015A00C(a1 + 32);
            uint64_t v20 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
            if (v20)
            {
              if (sub_10015A058(4))
              {
                if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
                  sub_100201D24();
                }
              }

              goto LABEL_587;
            }

            if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
              goto LABEL_536;
            }
LABEL_587:
            sub_100159FC0(a1 + 32, 0.5);
            uint64_t result = 1LL;
            __int16 v19 = 667;
            goto LABEL_588;
          }

          return 0LL;
        }

        sub_10015A00C(a1 + 32);
        unsigned int v111 = *v16;
        if (v111 <= 0xE) {
          char v112 = v111 + 1;
        }
        else {
          char v112 = 1;
        }
        char *v16 = v112;
        *(_BYTE *)(a1 + 67457) = v112 | 0x80;
        int v113 = spinel_cmd_prop_value_set_uint(a1 + 68785, 1300LL, 55LL, 1LL, v107, v108, v109, v110);
        *uint64_t v14 = v113;
        if (*v13)
        {
          uint64_t v114 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (v114)
          {
          }

          else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
          {
            sub_1001FF028();
          }

          int v113 = *v14;
        }

        if (v113 > 0)
        {
          unint64_t v165 = operator new(0x20uLL);
          *unint64_t v165 = sub_1000D514C;
          v165[1] = 0LL;
          v165[2] = a1;
          *((_DWORD *)v165 + 6) = -16776751;
          v259[1] = (uint64_t)v165;
          v259[0] = (uint64_t)off_1002AD910;
          char v166 = operator new(0x20uLL);
          *char v166 = sub_1000D514C;
          v166[1] = 0LL;
          v166[2] = a1;
          *((_DWORD *)v166 + 6) = -33553967;
          v258[1] = (uint64_t)v166;
          v258[0] = (uint64_t)off_1002AD930;
          sub_100006D1C((uint64_t)sub_10003C800, v259, v258, &v260);
          sub_100007A04((uint64_t (***)())&buf, &v260);
          sub_100006E08((uint64_t *)(a1 + 72704), (uint64_t *)&buf);
          sub_1000075F0(&buf);
          sub_1000075F0(v262);
          sub_100007618(v261);
          sub_1000075F0(v258);
          sub_100007618(v259);
          _BYTE *v15 = *(_BYTE *)(a1 + 67457);
          sub_100159FC0(a1 + 32, 30.0);
          *(_WORD *)(v6 + 38) = 465;
          goto LABEL_457;
        }

        uint64_t v170 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v170)
        {
          goto LABEL_587;
        }

        if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          goto LABEL_587;
        }
LABEL_536:
        sub_1001FF028();
        goto LABEL_587;
      }

      goto LABEL_86;
    }

    goto LABEL_109;
  }

  if (v17 == 465)
  {
LABEL_457:
    if ((a2 | 0x1000000) != 0xFF0001D1)
    {
      if (sub_100159F84(a1 + 32)) {
        return 0LL;
      }
      sub_10015A00C(a1 + 32);
      unsigned int v168 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v168)
      {
        goto LABEL_587;
      }

      if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        goto LABEL_587;
      }
      goto LABEL_483;
    }

    sub_10015A00C(a1 + 32);
    if (a2 != -16776751)
    {
      uint64_t v169 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v169)
      {
        goto LABEL_587;
      }

      if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        goto LABEL_587;
      }
      goto LABEL_483;
    }

    sub_100159FC0(a1 + 32, 30.0);
    *(_WORD *)(v6 + 38) = 467;
LABEL_460:
    if (sub_100159F84(a1 + 32)) {
      return 0LL;
    }
    sub_10015A00C(a1 + 32);
    char v167 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v167)
    {
      goto LABEL_587;
    }

    if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      goto LABEL_587;
    }
LABEL_483:
    sub_1001FF028();
    goto LABEL_587;
  }

  __int16 v19 = 0;
  if (v17 != 467) {
    goto LABEL_588;
  }
  sub_10015A00C(a1 + 32);
LABEL_86:
  if (!*(_BYTE *)(a1 + 1376)) {
    goto LABEL_620;
  }
  unsigned int v38 = 0;
  uint64_t v27 = 0LL;
  *(_DWORD *)(v6 + 40) = 0;
  while (v38 <= 0x1F)
  {
    if ((unint64_t)((int)v38 - 29LL) >= 0xFFFFFFFFFFFFFFFDLL)
    {
      if (!sub_100007684(a1 + 72792, &dword_100224A58[2 * v38 + 1])) {
        goto LABEL_574;
      }
      unsigned int v38 = *(_DWORD *)(v6 + 40);
      if (v38 > 0x1F) {
        goto LABEL_579;
      }
    }

    if (dword_100224A58[2 * v38] >> 1 != 2700) {
      goto LABEL_576;
    }
    if (sub_1000D8DE8(a1) == 8 || sub_1000D8DE8(a1) == 5)
    {
      byte_1002C98D0 = 0;
      uint64_t v180 = *(unsigned int *)(v6 + 40);
      int v181 = dword_100224A58[2 * v180];
      if (v181 == 5401)
      {
        unint64_t v183 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v183)
        {
        }

        else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
          sub_1001FF028();
        }

        sub_10000AC00(&buf, "GetPending");
        v256[0] = 0LL;
        unsigned int v186 = operator new(0x28uLL);
        *unsigned int v186 = sub_100041F8C;
        v186[1] = 0LL;
        v186[2] = a1;
        v186[3] = "GetPending";
        v186[4] = a1 + 73376;
        v256[0] = (uint64_t)off_1002AEDE8;
        v256[1] = (uint64_t)v186;
        sub_1000574A4(a1, (_BYTE *)(a1 + 73376), (char *)&buf, v256);
        char v185 = v256;
      }

      else
      {
        if (v181 != 5400)
        {
LABEL_576:
          sub_100159FC0(a1 + 32, 30.0);
          *(_WORD *)(v6 + 38) = 556;
          goto LABEL_150;
        }

        uint64_t v182 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v182)
        {
        }

        else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
          sub_1001FF028();
        }

        sub_10000AC00(&buf, "GetActive");
        v257[0] = 0LL;
        char v184 = operator new(0x28uLL);
        *char v184 = sub_100041F8C;
        v184[1] = 0LL;
        v184[2] = a1;
        v184[3] = "GetActive";
        v184[4] = a1 + 73104;
        v257[1] = (uint64_t)v184;
        v257[0] = (uint64_t)off_1002AEDE8;
        sub_1000574A4(a1, (_BYTE *)(a1 + 73104), (char *)&buf, v257);
        char v185 = v257;
      }

      sub_1000075F0(v185);
      if (SHIBYTE(v285) < 0) {
        operator delete((void *)buf.n128_u64[0]);
      }
    }

LABEL_574:
    int v187 = *(_DWORD *)(v6 + 40);
    BOOL v9 = __OFADD__(v187, 1);
    unsigned int v38 = v187 + 1;
    if (v9) {
      goto LABEL_578;
    }
    *(_DWORD *)(v6 + 40) = v38;
  }

  *(void *)(v6 + 24) = *(void *)v6;
  while (*(void *)(v6 + 24) != a1 + 73656)
  {
    char v195 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v195)
    {
      if (sub_10015A058(6) && os_log_type_enabled(v195, OS_LOG_TYPE_INFO))
      {
        uint64_t v196 = *(void *)(v6 + 24);
        unsigned int v197 = (void *)(v196 + 32);
        buf.n128_u32[0] = 136315138;
        *(unint64_t *)((char *)buf.n128_u64 + 4) = (unint64_t)v197;
        _os_log_impl( (void *)&_mh_execute_header,  v195,  OS_LOG_TYPE_INFO,  "Restoring property %s on NCP",  (uint8_t *)&buf,  0xCu);
      }
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FF028();
    }

    uint64_t v198 = *(void *)(v6 + 24);
    int v200 = *(_DWORD *)(v198 + 80);
    unint64_t v199 = (unsigned int *)(v198 + 80);
    if (!v200 || sub_100007684(a1 + 72792, v199))
    {
      sub_100159FC0(a1 + 32, 30.0);
      *(_WORD *)(v6 + 38) = 582;
LABEL_602:
      if (*v14 > 0 || *v13)
      {
        if (sub_100159F84(a1 + 32)) {
          return 0LL;
        }
        sub_10015A00C(a1 + 32);
        uint64_t v208 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v208)
        {
          goto LABEL_580;
        }

        if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          goto LABEL_580;
        }
        goto LABEL_655;
      }

      sub_10015A00C(a1 + 32);
      unsigned int v201 = *v16;
      if (v201 <= 0xE) {
        char v202 = v201 + 1;
      }
      else {
        char v202 = 1;
      }
      char *v16 = v202;
      *(_BYTE *)(a1 + 67457) = v202 | 0x80;
      uint64_t v203 = *(_BYTE **)(*(void *)(v6 + 24) + 56LL);
      unint64_t v204 = *(_BYTE **)(*(void *)(v6 + 24) + 64LL);
      size_t v205 = v204 - v203;
      if ((unint64_t)(v204 - v203) <= 0x514)
      {
        *uint64_t v14 = v205;
        if (v203 == v204) {
          char v211 = 0LL;
        }
        else {
          char v211 = v203;
        }
        memcpy((void *)(a1 + 68785), v211, v205);
        if (*v13)
        {
          unsigned int v212 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (v212)
          {
          }

          else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
          {
            sub_1001FF028();
          }
        }

        if (*v14 > 0)
        {
          char v216 = operator new(0x20uLL);
          *char v216 = sub_1000D514C;
          v216[1] = 0LL;
          v216[2] = a1;
          *((_DWORD *)v216 + 6) = -16776617;
          v247[1] = (uint64_t)v216;
          v247[0] = (uint64_t)off_1002AD910;
          unsigned int v217 = operator new(0x20uLL);
          *unsigned int v217 = sub_1000D514C;
          v217[1] = 0LL;
          v217[2] = a1;
          *((_DWORD *)v217 + 6) = -33553833;
          v246[0] = (uint64_t)off_1002AD930;
          v246[1] = (uint64_t)v217;
          sub_100006D1C((uint64_t)sub_10003C800, v247, v246, &v248);
          sub_100007A04((uint64_t (***)())&buf, &v248);
          sub_100006E08((uint64_t *)(a1 + 72704), (uint64_t *)&buf);
          sub_1000075F0(&buf);
          sub_1000075F0(v250);
          sub_100007618(v249);
          sub_1000075F0(v246);
          sub_100007618(v247);
          _BYTE *v15 = *(_BYTE *)(a1 + 67457);
          sub_100159FC0(a1 + 32, 30.0);
          *(_WORD *)(v6 + 38) = 599;
          goto LABEL_42;
        }

        uint64_t v218 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v218)
        {
          goto LABEL_580;
        }

        if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          goto LABEL_580;
        }
        goto LABEL_655;
      }

      char v206 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v206)
      {
      }

      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        sub_1001FF028();
      }
    }

LABEL_614:
    sub_10000B338(a1 + 73672);
  }

LABEL_620:
  sub_1000A3F5C((void *)(a1 + 74104));
  unint64_t v209 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v209)
  {
    if (sub_10015A058(6) && os_log_type_enabled(v209, OS_LOG_TYPE_INFO))
    {
      unsigned __int32 v210 = sub_1000D8DE8(a1);
      buf.n128_u32[0] = 67109120;
      buf.n128_u32[1] = v210;
      _os_log_impl((void *)&_mh_execute_header, v209, OS_LOG_TYPE_INFO, "NCP State is %d", (uint8_t *)&buf, 8u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FF028();
  }

  if (sub_1000D8DE8(a1) == 4)
  {
    sub_1000421D0(a1, 5400LL);
    sub_1000421D0(a1, 5401LL);
    BOOL v213 = sub_10008E500((_BYTE *)(a1 + 73104));
    unint64_t v214 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    char v215 = v214;
    if (v213)
    {
      if (v214)
      {
      }

      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        sub_1001FF028();
      }

      sub_10000AC00(&buf, "SetActive");
      unint64_t v219 = operator new(0x28uLL);
      *unint64_t v219 = sub_1000422B0;
      v219[1] = 0LL;
      v219[2] = a1;
      v219[3] = "SetActive";
      v219[4] = a1 + 73104;
      v245[0] = (uint64_t)off_1002AEDE8;
      v245[1] = (uint64_t)v219;
      sub_1000574A4(a1, (_BYTE *)(a1 + 73104), (char *)&buf, v245);
      sub_1000075F0(v245);
      if (SHIBYTE(v285) < 0) {
        operator delete((void *)buf.n128_u64[0]);
      }
      BOOL v220 = sub_10008E500((_BYTE *)(a1 + 73376));
      uint64_t v221 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      v222 = v221;
      if (v220)
      {
        if (v221)
        {
        }

        else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
          sub_1001FF028();
        }

        sub_10000AC00(&buf, "SetPending");
        v224 = operator new(0x28uLL);
        void *v224 = sub_1000422B0;
        v224[1] = 0LL;
        v224[2] = a1;
        v224[3] = "SetPending";
        v224[4] = a1 + 73376;
        v244[0] = (uint64_t)off_1002AEDE8;
        v244[1] = (uint64_t)v224;
        sub_1000574A4(a1, (_BYTE *)(a1 + 73376), (char *)&buf, v244);
        sub_1000075F0(v244);
        if (SHIBYTE(v285) < 0) {
          operator delete((void *)buf.n128_u64[0]);
        }
      }

      else if (v221)
      {
        if (sub_10015A058(6) && os_log_type_enabled(v222, OS_LOG_TYPE_INFO))
        {
          buf.n128_u16[0] = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v222,  OS_LOG_TYPE_INFO,  "NCP is OFFLINE, PendingDataset has no valid values",  (uint8_t *)&buf,  2u);
        }
      }

      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        sub_1001FF028();
      }
    }

    else
    {
      if (v214)
      {
        if (sub_10015A058(6) && os_log_type_enabled(v215, OS_LOG_TYPE_INFO))
        {
          buf.n128_u16[0] = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v215,  OS_LOG_TYPE_INFO,  "NCP is OFFLINE, ActiveDataset has no valid values",  (uint8_t *)&buf,  2u);
        }
      }

      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        sub_1001FF028();
      }

      if (sub_10008E500((_BYTE *)(a1 + 73376)))
      {
        v223 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v223)
        {
        }

        else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
          sub_1001FF028();
        }

        sub_10008C394((_BYTE *)(a1 + 73376));
        sub_1001462A0(0x1519u);
      }
    }

    byte_1002C98D0 = 1;
  }

  *(_DWORD *)(a1 + 1524) = 0;
  *(_WORD *)(v6 + 256) = 0;
  *(_BYTE *)(v6 + 108) = 0;
  (*(void (**)(uint64_t, void))(*(void *)a1 + 152LL))(a1, 0LL);
  *(_DWORD *)(v6 + 32) = 2;
  sub_100070C70(a1, (uint64_t *)(a1 + 73928));
  v225 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v225)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v225, OS_LOG_TYPE_INFO))
    {
      unint64_t v226 = *(void *)(v6 + 296);
      buf.n128_u32[0] = 134217984;
      *(unint64_t *)((char *)buf.n128_u64 + 4) = v226;
      _os_log_impl( (void *)&_mh_execute_header,  v225,  OS_LOG_TYPE_INFO,  "Finished initializing NCP, Time taken[%llu msec]",  (uint8_t *)&buf,  0xCu);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FF028();
  }

  if ((unint64_t)(*(void *)(v6 + 296) - 3000LL) <= 0xE3C7A72847LL)
  {
    sub_10000AC00(v242, "Performance");
    sub_10000AC00(v240, "Data Stall");
    sub_10000AC00(__p, "NCP Initialization takes long time");
    (*(void (**)(uint64_t, void **, void **, void **, void, uint64_t))(*(void *)a1 + 72LL))( a1,  v242,  v240,  __p,  0LL,  1LL);
    if (v239 < 0) {
      operator delete(__p[0]);
    }
    if (v241 < 0) {
      operator delete(v240[0]);
    }
    if (v243 < 0) {
      operator delete(v242[0]);
    }
  }

  if ((byte_1002C9E0D & 1) == 0)
  {
    v227 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v227)
    {
      if (sub_10015A058(6) && os_log_type_enabled(v227, OS_LOG_TYPE_INFO))
      {
        buf.n128_u16[0] = 0;
        _os_log_impl((void *)&_mh_execute_header, v227, OS_LOG_TYPE_INFO, "tmac: Verification", (uint8_t *)&buf, 2u);
      }
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FF028();
    }

    uint64_t v228 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 24LL))(a1);
    sub_10000AC00(&buf, "NCP:HardwareAddress");
    sub_1000FC7CC(v228, (uint64_t)&buf, &v237);
    if (SHIBYTE(v285) < 0) {
      operator delete((void *)buf.n128_u64[0]);
    }
    __n128 buf = 0uLL;
    uint64_t v285 = 0LL;
    if (v237)
    {
      sub_100147B4C(&v237, &v236);
      sub_100014D08((uint64_t)&buf, (__int128 *)&v236);
      v229 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v229)
      {
      }

      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        sub_1001FF028();
      }
    }

    else
    {
      v231 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v231)
      {
      }

      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        sub_1001FF028();
      }
    }

    if (v285 >= 0) {
      p___n128 buf = &buf;
    }
    else {
      p___n128 buf = (__n128 *)buf.n128_u64[0];
    }
    if (FillmoreControllerCheckTmac((const char *)p_buf))
    {
      v233 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v233)
      {
        if (sub_10015A058(6) && os_log_type_enabled(v233, OS_LOG_TYPE_INFO))
        {
          LOWORD(v236.__r_.__value_.__l.__data_) = 0;
          v234 = "tmac:Verification success";
          goto LABEL_735;
        }

        goto LABEL_740;
      }

      if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        goto LABEL_740;
      }
LABEL_739:
      sub_1001FF028();
      goto LABEL_740;
    }

    v233 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (!v233)
    {
      if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        goto LABEL_740;
      }
      goto LABEL_739;
    }

    if (sub_10015A058(6) && os_log_type_enabled(v233, OS_LOG_TYPE_INFO))
    {
      LOWORD(v236.__r_.__value_.__l.__data_) = 0;
      v234 = "tmac:Verification fail";
LABEL_735:
      _os_log_impl((void *)&_mh_execute_header, v233, OS_LOG_TYPE_INFO, v234, (uint8_t *)&v236, 2u);
    }

LABEL_740:
    byte_1002C9E0D = 1;
    if (SHIBYTE(v285) < 0) {
      operator delete((void *)buf.n128_u64[0]);
    }
    if (v237) {
      (*(void (**)(uint64_t))(*(void *)v237 + 8LL))(v237);
    }
  }

  if ((byte_1002C9E0E & 1) != 0)
  {
    __int16 v19 = 0;
  }

  else
  {
    sub_10000AC00(&buf, "vendor:power:mapping:table:flash:data");
    v235[2] = 0LL;
    v235[3] = a1;
    v235[0] = (uint64_t)off_1002AEE08 + 1;
    v235[1] = (uint64_t)sub_100042520;
    sub_100090BFC(a1 + 74104, (char *)&buf, v235);
    sub_100006E7C(v235);
    if (SHIBYTE(v285) < 0) {
      operator delete((void *)buf.n128_u64[0]);
    }
    __int16 v19 = 0;
    byte_1002C9E0E = 1;
  }

  uint64_t result = 3LL;
LABEL_588:
  *(_WORD *)(v6 + 38) = v19;
  return result;
}

void sub_100041E7C()
{
}

void sub_100041E8C()
{
}

void sub_100041E9C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  if (a18) {
    (*(void (**)(uint64_t))(*(void *)a18 + 8LL))(a18);
  }
  _Unwind_Resume(a1);
}

void sub_100041F3C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20, int a21, __int16 a22, char a23, char a24, void *a25, uint64_t a26, int a27, __int16 a28, char a29, char a30, uint64_t a31, uint64_t a32, int a33, __int16 a34, char a35, char a36)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  if (a30 < 0) {
    operator delete(a25);
  }
  if ((a36 & 0x80000000) == 0) {
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x100041104LL);
}

void sub_100041F8C(uint64_t a1, int a2, uint64_t *a3, uint64_t a4)
{
  int v8 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v8)
  {
    BOOL v9 = v8;
    if (sub_10015A058(6) && os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      else {
        int v10 = (uint64_t *)*a3;
      }
      *(_DWORD *)__n128 buf = 136315650;
      uint64_t v18 = "readDataSetCallback_for";
      __int16 v19 = 2080;
      uint64_t v20 = v10;
      __int16 v21 = 1024;
      int v22 = a2;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "%s, command: %s, ret = %d", buf, 0x1Cu);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FF028();
  }

  if (!a2) {
    sub_100145208(a4);
  }
  int v11 = *((char *)a3 + 23);
  if (v11 < 0)
  {
    if (a3[1] != 10) {
      return;
    }
    a3 = (uint64_t *)*a3;
  }

  else if (v11 != 10)
  {
    return;
  }

  if (*a3 == 0x69646E6550746547LL && *((_WORD *)a3 + 4) == 26478)
  {
    int v13 = sub_1000D8DE8(a1);
    if (v13 == 8 || v13 == 5)
    {
      uint64_t v14 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v14)
      {
        if (sub_10015A058(4))
        {
          if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
            sub_100201FE0();
          }
        }
      }

      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        sub_1001FF028();
      }

      uint64_t v15 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 24LL))(a1);
      v16[0] = (char *)off_1002AED78 + 1;
      (*(void (**)(uint64_t, void *))(*(void *)v15 + 40LL))(v15, v16);
      sub_1000075F0(v16);
    }
  }

void sub_1000421B4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_1000421D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (_BYTE *)(a1 + 73104);
  if ((_DWORD)a2 != 5400) {
    uint64_t v3 = 0LL;
  }
  if ((_DWORD)a2 == 5401) {
    uint64_t v4 = (_BYTE *)(a1 + 73376);
  }
  else {
    uint64_t v4 = v3;
  }
  uint64_t v5 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v5)
  {
    uint64_t v6 = v5;
    if (sub_10015A058(6) && os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)int v8 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_INFO,  "SpinelNCPInstance::loadDataSetFromKeychain",  v8,  2u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FF028();
  }

  return sub_100146808(a2, v4);
}

void sub_1000422B0(uint64_t a1, int a2, uint64_t *a3, uint64_t a4)
{
  int v8 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v8)
  {
    BOOL v9 = v8;
    if (sub_10015A058(6) && os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      else {
        int v10 = (uint64_t *)*a3;
      }
      *(_DWORD *)__n128 buf = 136315650;
      *(void *)&uint8_t buf[4] = "writeDataSetCallback_for";
      __int16 v17 = 2080;
      uint64_t v18 = v10;
      __int16 v19 = 1024;
      int v20 = a2;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "%s, command: %s, ret = %d", buf, 0x1Cu);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FF028();
  }

  if (!a2)
  {
    int v11 = *((char *)a3 + 23);
    if (v11 < 0)
    {
      if (a3[1] != 9)
      {
LABEL_29:
        sub_100145208(a4);
        return;
      }

      a3 = (uint64_t *)*a3;
    }

    else if (v11 != 9)
    {
      goto LABEL_29;
    }

    if (*a3 == 0x7669746341746553LL && *((_BYTE *)a3 + 8) == 101)
    {
      int v13 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v13)
      {
      }

      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        sub_1001FF028();
      }

      uint64_t v14 = operator new(0x10uLL);
      *(void *)uint64_t v14 = &off_1002AE160;
      v14[2] = 1;
      v15[3] = a1;
      *(void *)__n128 buf = v14;
      v15[1] = (uint64_t)sub_1000427A0;
      uint64_t v15[2] = 0LL;
      v15[0] = (uint64_t)off_1002AEE28 + 1;
      sub_10006135C(a1, (uint64_t *)buf, v15);
      sub_1000075F0(v15);
      if (*(void *)buf) {
        (*(void (**)(void))(**(void **)buf + 8LL))(*(void *)buf);
      }
    }

    goto LABEL_29;
  }

void sub_1000424F0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  if (a13) {
    (*(void (**)(uint64_t))(*(void *)a13 + 8LL))(a13);
  }
  _Unwind_Resume(a1);
}

void sub_100042520(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t Controller = FillmoreCreateController(kCFAllocatorDefault);
  if (Controller)
  {
    uint64_t v5 = (const void *)Controller;
    uint64_t v13 = 0LL;
    uint64_t v14 = 0LL;
    uint64_t v15 = 0LL;
    if (!*a3)
    {
      int v10 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v10)
      {
      }

      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        sub_1001FF028();
      }

      goto LABEL_31;
    }

    sub_100147058(a3, (uint64_t)v12);
    sub_100006EFC((uint64_t)&v13, v12);
    uint64_t v16 = (void **)v12;
    sub_100006F6C(&v16);
    if (v13 == v14) {
      uint64_t v6 = 0LL;
    }
    else {
      uint64_t v6 = v13;
    }
    if ((FillmoreVerifyCalibration(v5, v6, (unsigned __int16)(v14 - v13)) & 1) != 0)
    {
      int v7 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v7)
      {
        if (sub_10015A058(5))
        {
          if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
          {
            v12[0].n128_u16[0] = 0;
            _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "[THCL CHECK] SUCCESS", (uint8_t *)v12, 2u);
          }
        }

        goto LABEL_31;
      }

      if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        goto LABEL_30;
      }
    }

    else
    {
      int v11 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v11)
      {
        goto LABEL_31;
      }

      if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
LABEL_30:
      }
        sub_1001FF028();
    }

void sub_100042774( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  a9 = (void **)&a13;
  sub_100006F6C(&a9);
  _Unwind_Resume(a1);
}

void sub_1000427A0(uint64_t a1, int a2)
{
  uint64_t v3 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v3)
  {
    uint64_t v4 = v3;
    if (sub_10015A058(6))
    {
      if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
      {
        int v5 = 136315394;
        uint64_t v6 = "setInterfaceUpCallback";
        __int16 v7 = 1024;
        int v8 = a2;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "%s, ret = %d", (uint8_t *)&v5, 0x12u);
      }
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FF028();
  }

uint64_t sub_100042890(uint64_t a1)
{
  uint64_t v3 = (void **)(a1 + 216);
  sub_100006F6C(&v3);
  uint64_t v3 = (void **)(a1 + 168);
  sub_100006F6C(&v3);
  uint64_t v3 = (void **)(a1 + 96);
  sub_100006F6C(&v3);
  uint64_t v3 = (void **)(a1 + 32);
  sub_100006F6C(&v3);
  return a1;
}

void sub_100042908(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v3)
  {
    uint64_t v4 = v3;
    if (sub_10015A058(6) && os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)int v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "SpinelNCPInstance::readAndLogDataSet", v5, 2u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FF028();
  }

uint64_t sub_1000429CC(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v27 = a3;
  if (!sub_1000561A0(a1 + 74016))
  {
    while (1)
    {
      sub_1000561DC(a1 + 74016, &v24);
      uint64_t v26 = v27;
      uint64_t v6 = sub_100042EAC(&v24);
      sub_100063CF4(a1 + 74016);
      sub_10000F9EC(&v25);
      if (sub_1000561A0(a1 + 74016)) {
        goto LABEL_8;
      }
    }

    sub_10000F9EC(&v25);
  }

void sub_100042E98(_Unwind_Exception *a1)
{
}

uint64_t sub_100042EAC(uint64_t *a1)
{
  uint64_t result = *a1;
  if (!result) {
    __assert_rtn("operator->", "shared_ptr.hpp", 786, "px != 0");
  }
  return result;
}

uint64_t sub_100042EEC(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  return sub_1000429CC(a1 - 32, a2, a3);
}

uint64_t sub_100042EF4(uint64_t a1)
{
  *(void *)a1 = 0LL;
  *(_BYTE *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0LL;
  *(_BYTE *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0LL;
  *(void *)(a1 + 40) = 0LL;
  *(void *)(a1 + 48) = 0LL;
  *(_BYTE *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0LL;
  *(void *)(a1 + 72) = 0LL;
  *(void *)(a1 + 80) = 0LL;
  *(_BYTE *)(a1 + 88) = 0;
  *(void *)(a1 + sub_10001C704(v1 - 96) = 0LL;
  *(void *)(a1 + 104) = 0LL;
  *(void *)(a1 + 112) = 0LL;
  *(_BYTE *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = 0LL;
  *(void *)(a1 + 136) = 0LL;
  *(_BYTE *)(a1 + 144) = 0;
  *(_DWORD *)(a1 + 148) = 0;
  *(_BYTE *)(a1 + 152) = 0;
  *(_WORD *)(a1 + 156) = 0;
  *(_BYTE *)(a1 + 158) = 0;
  *(_WORD *)(a1 + 160) = 0;
  *(void *)(a1 + 168) = 0LL;
  *(void *)(a1 + sub_100008B48(v0 - 176) = 0LL;
  *(void *)(a1 + 184) = 0LL;
  *(_BYTE *)(a1 + 192) = 0;
  *(_DWORD *)(a1 + 200) = 0;
  *(_BYTE *)(a1 + 204) = 0;
  *(_DWORD *)(a1 + 208) = 0;
  *(_BYTE *)(a1 + 212) = 0;
  *(void *)(a1 + 216) = 0LL;
  *(void *)(a1 + 224) = 0LL;
  *(void *)(a1 + 232) = 0LL;
  *(_BYTE *)(a1 + sub_1000099DC(v49 - 240) = 0;
  *(_BYTE *)(a1 + 264) = 0;
  *(void *)(a1 + 248) = 0LL;
  *(void *)(a1 + 256) = 0LL;
  sub_10008C394((_BYTE *)a1);
  return a1;
}

void sub_100042FCC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10)
{
  int v13 = v11;
  sub_100006F6C(&a10);
  sub_100006F6C(&a10);
  a10 = v13;
  sub_100006F6C(&a10);
  sub_100006F6C(&a10);
  _Unwind_Resume(a1);
}

uint64_t sub_10004301C(uint64_t result, _WORD *a2, unsigned int a3)
{
  if (a3 == 4) {
    goto LABEL_2;
  }
  if (a3 > 2)
  {
    if (a3 != 3)
    {
LABEL_2:
      a2[4] = 0;
      return result;
    }

    uint64_t v4 = result;
    uint64_t result = *(void *)(*(void *)a2 + 8LL) & 0x7FFFFFFFFFFFFFFFLL;
    if (result == ((unint64_t)"N2nl9NilReturnE" & 0x7FFFFFFFFFFFFFFFLL)
      || (uint64_t result = strcmp( (const char *)result,  (const char *)((unint64_t)"N2nl9NilReturnE" & 0x7FFFFFFFFFFFFFFFLL)),  !(_DWORD)result))
    {
      *(void *)a2 = v4;
    }

    else
    {
      *(void *)a2 = 0LL;
    }
  }

  return result;
}

uint64_t sub_1000430A0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t result = *a3;
  if (*a3)
  {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 24LL))(result);
    if (result) {
      return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
    }
  }

  return result;
}

uint64_t *sub_1000430D8(uint64_t *a1, uint64_t a2)
{
  *a1 = a2;
  a1[1] = 0LL;
  uint64_t v4 = a1 + 1;
  sub_100043160(&v7, a2);
  uint64_t v5 = *v4;
  *uint64_t v4 = v7;
  uint64_t v7 = v5;
  sub_10000F9EC(&v7);
  if (a2) {
    sub_100043218((uint64_t *)(a2 + 24), (uint64_t)a1, a2);
  }
  return a1;
}

void sub_10004314C(_Unwind_Exception *a1)
{
}

void *sub_100043160(void *a1, uint64_t a2)
{
  *a1 = 0LL;
  uint64_t v4 = operator new(0x18uLL);
  v4[1] = 0x100000001LL;
  *uint64_t v4 = &off_1002AED28;
  _OWORD v4[2] = a2;
  *a1 = v4;
  return a1;
}

void sub_1000431AC(void *a1)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  __cxa_rethrow();
}

void sub_1000431CC(_Unwind_Exception *a1)
{
}

uint64_t sub_1000431E8(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 16);
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }
  return result;
}

uint64_t sub_100043200()
{
  return 0LL;
}

uint64_t sub_100043208()
{
  return 0LL;
}

uint64_t sub_100043210()
{
  return 0LL;
}

uint64_t *sub_100043218(uint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = result[1];
  if (!v3 || (unsigned int v4 = atomic_load((unsigned int *)(v3 + 8))) == 0)
  {
    uint64_t v5 = *(void *)(a2 + 8);
    uint64_t v8 = a3;
    uint64_t v9 = v5;
    if (v5)
    {
      uint64_t v6 = (unsigned int *)(v5 + 8);
      do
        unsigned int v7 = __ldxr(v6);
      while (__stxr(v7 + 1, v6));
    }

    sub_100043284((uint64_t)result, (uint64_t)&v8);
    return sub_10000F9EC(&v9);
  }

  return result;
}

uint64_t sub_100043284(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  sub_1000432B0((unsigned int **)(a1 + 8), (unsigned int **)(a2 + 8));
  return a1;
}

unsigned int **sub_1000432B0(unsigned int **a1, unsigned int **a2)
{
  uint64_t v3 = *a2;
  unsigned int v4 = *a1;
  if (*a2 != v4)
  {
    if (v3)
    {
      uint64_t v5 = v3 + 3;
      do
        unsigned int v6 = __ldxr(v5);
      while (__stxr(v6 + 1, v5));
      unsigned int v4 = *a1;
    }

    if (v4)
    {
      unsigned int v7 = v4 + 3;
      do
      {
        unsigned int v8 = __ldaxr(v7);
        unsigned int v9 = v8 - 1;
      }

      while (__stlxr(v9, v7));
      if (!v9) {
        (*(void (**)(unsigned int *))(*(void *)v4 + 24LL))(v4);
      }
    }

    *a1 = v3;
  }

  return a1;
}

uint64_t *sub_100043330(uint64_t *a1, uint64_t a2)
{
  *a1 = a2;
  a1[1] = 0LL;
  unsigned int v4 = a1 + 1;
  sub_1000433B8(&v7, a2);
  uint64_t v5 = *v4;
  *unsigned int v4 = v7;
  uint64_t v7 = v5;
  sub_10000F9EC(&v7);
  if (a2) {
    sub_100043218((uint64_t *)(a2 + 24), (uint64_t)a1, a2);
  }
  return a1;
}

void sub_1000433A4(_Unwind_Exception *a1)
{
}

void *sub_1000433B8(void *a1, uint64_t a2)
{
  *a1 = 0LL;
  unsigned int v4 = operator new(0x18uLL);
  v4[1] = 0x100000001LL;
  *unsigned int v4 = &off_1002AED98;
  _OWORD v4[2] = a2;
  *a1 = v4;
  return a1;
}

void sub_100043404(void *a1)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  __cxa_rethrow();
}

void sub_100043424(_Unwind_Exception *a1)
{
}

uint64_t sub_100043440(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 16);
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }
  return result;
}

uint64_t sub_100043458()
{
  return 0LL;
}

uint64_t sub_100043460()
{
  return 0LL;
}

uint64_t sub_100043468()
{
  return 0LL;
}

void sub_100043470(uint64_t *a1, uint64_t a2, int a3)
{
  if (a3 == 4)
  {
    *(_WORD *)(a2 + 8) = 0;
  }

  else
  {
    sub_1000434B8(a1, a2, a3);
  }

void sub_100043490(uint64_t *a1, unsigned int a2)
{
  unsigned int v2 = a2;
  sub_10004358C(*a1, &v2);
}

void sub_1000434B8(uint64_t *a1, uint64_t a2, int a3)
{
  switch(a3)
  {
    case 0:
      uint64_t v5 = *a1;
      unsigned int v6 = operator new(0x28uLL);
      uint64_t v7 = *(void *)(v5 + 32);
      __int128 v8 = *(_OWORD *)(v5 + 16);
      *unsigned int v6 = *(_OWORD *)v5;
      v6[1] = v8;
      *((void *)v6 + 4) = v7;
      *(void *)a2 = v6;
      break;
    case 1:
      *(void *)a2 = *a1;
      *a1 = 0LL;
      break;
    case 2:
      if (*(void *)a2) {
        operator delete(*(void **)a2);
      }
      goto LABEL_9;
    case 3:
      unsigned int v9 = (const char *)(*(void *)(*(void *)a2 + 8LL) & 0x7FFFFFFFFFFFFFFFLL);
      if (v9 == (const char *)((unint64_t)"N5boost3_bi6bind_tIvNS_4_mfi3mf3IvN2nl8wpantund17SpinelNCPInstanceEiRK"
                                                  "NSt3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEEPNS5_1"
                                                  "3ThreadDatasetEEENS0_5list4INS0_5valueIPS6_EENS_3argILi1EEENSK_IPKcEENSK_ISH_EEEEEE" & 0x7FFFFFFFFFFFFFFFLL)
        || !strcmp( v9,  (const char *)((unint64_t)"N5boost3_bi6bind_tIvNS_4_mfi3mf3IvN2nl8wpantund17SpinelNCPInstanceEiRKNSt 3__112basic_stringIcNS7_11char_traitsIcEENS7_9allocatorIcEEEEPNS5_13Threa dDatasetEEENS0_5list4INS0_5valueIPS6_EENS_3argILi1EEENSK_IPKcEENSK_ISH_EEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))
      {
        *(void *)a2 = *a1;
      }

      else
      {
LABEL_9:
        *(void *)a2 = 0LL;
      }

      break;
    default:
      *(_WORD *)(a2 + 8) = 0;
      break;
  }

void sub_10004358C(uint64_t a1, unsigned int *a2)
{
  unsigned int v2 = a2;
  sub_1000435C0(a1 + 16, a1, &v2);
}

void sub_1000435C0(uint64_t a1, uint64_t a2, unsigned int **a3)
{
  uint64_t v5 = **a3;
  uint64_t v6 = *(void *)a1;
  sub_10000AC00(__p, *(char **)(a1 + 8));
  sub_10002BF34(a2, v6, v5, (uint64_t)__p, *(void *)(a1 + 16));
  if (v8 < 0) {
    operator delete(__p[0]);
  }
}

void sub_10004362C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100043648(uint64_t result, uint64_t a2, unsigned int a3)
{
  if (a3 == 4) {
    goto LABEL_2;
  }
  uint64_t v4 = result;
  if (a3 > 1)
  {
    if (a3 != 2)
    {
      if (a3 != 3)
      {
LABEL_2:
        *(_WORD *)(a2 + 8) = 0;
        return result;
      }

      uint64_t result = *(void *)(*(void *)a2 + 8LL) & 0x7FFFFFFFFFFFFFFFLL;
      if (result == ((unint64_t)"N5boost3_bi6bind_tIvNS_4_mfi3mf2IvN2nl8wpantund17SpinelNCPInstanceEiRKNS_3anyEEE"
                                        "NS0_5list3INS0_5valueIPS6_EENS_3argILi1EEENSF_ILi2EEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)
        || (uint64_t result = strcmp( (const char *)result,  (const char *)((unint64_t)"N5boost3_bi6bind_tIvNS_4_mfi3mf2IvN2nl8wpantund17SpinelNCPInstan ceEiRKNS_3anyEEENS0_5list3INS0_5valueIPS6_EENS_3argILi1EEENSF_ILi2EEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)),  !(_DWORD)result))
      {
        *(void *)a2 = v4;
      }

      else
      {
        *(void *)a2 = 0LL;
      }
    }
  }

  else
  {
    __int128 v5 = *(_OWORD *)result;
    *(void *)(a2 + 16) = *(void *)(result + 16);
    *(_OWORD *)a2 = v5;
  }

  return result;
}

uint64_t sub_1000436E4(uint64_t a1, unsigned int a2, unsigned int *a3)
{
  unsigned int v4 = a2;
  return sub_100043708(a1, &v4, a3);
}

uint64_t sub_100043708(uint64_t a1, unsigned int *a2, unsigned int *a3)
{
  v4[0] = a2;
  v4[1] = a3;
  return sub_10004373C((uint64_t *)(a1 + 16), a1, v4);
}

uint64_t sub_10004373C(uint64_t *a1, uint64_t a2, unsigned int **a3)
{
  return sub_100012928(a2, *a1, **a3, (uint64_t)a3[1]);
}

uint64_t sub_100043754(uint64_t result, uint64_t a2, unsigned int a3)
{
  if (a3 == 4) {
    goto LABEL_2;
  }
  uint64_t v4 = result;
  if (a3 > 1)
  {
    if (a3 != 2)
    {
      if (a3 != 3)
      {
LABEL_2:
        *(_WORD *)(a2 + 8) = 0;
        return result;
      }

      uint64_t result = *(void *)(*(void *)a2 + 8LL) & 0x7FFFFFFFFFFFFFFFLL;
      if (result == ((unint64_t)"N5boost3_bi6bind_tIvNS_4_mfi3mf1IvN2nl8wpantund17SpinelNCPInstanceEiEENS0_5list2"
                                        "INS0_5valueIPS6_EENS_3argILi1EEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)
        || (uint64_t result = strcmp( (const char *)result,  (const char *)((unint64_t)"N5boost3_bi6bind_tIvNS_4_mfi3mf1IvN2nl8wpantund17SpinelNCPInstan ceEiEENS0_5list2INS0_5valueIPS6_EENS_3argILi1EEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)),  !(_DWORD)result))
      {
        *(void *)a2 = v4;
      }

      else
      {
        *(void *)a2 = 0LL;
      }
    }
  }

  else
  {
    __int128 v5 = *(_OWORD *)result;
    *(void *)(a2 + 16) = *(void *)(result + 16);
    *(_OWORD *)a2 = v5;
  }

  return result;
}

uint64_t sub_1000437F0(uint64_t a1, unsigned int a2)
{
  unsigned int v3 = a2;
  return sub_100043814(a1, &v3);
}

uint64_t sub_100043814(uint64_t a1, unsigned int *a2)
{
  unsigned int v3 = a2;
  return sub_100043848((void *)(a1 + 16), a1, &v3);
}

uint64_t sub_100043848(void *a1, uint64_t a2, unsigned int **a3)
{
  uint64_t v4 = **a3;
  __int128 v5 = *(uint64_t (**)(void *, uint64_t))a2;
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v7 = (void *)(*a1 + (v6 >> 1));
  if ((v6 & 1) != 0) {
    __int128 v5 = *(uint64_t (**)(void *, uint64_t))(*v7 + v5);
  }
  return v5(v7, v4);
}

void sub_100043870( void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
}

void sub_100043880(uint64_t a1@<X8>)
{
  *(void *)(v1 - 8) = a1;
}

  ;
}

void sub_1000438AC(void *a1, os_log_s *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
}

void sub_1000438B8(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
}

void sub_1000438CC(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
}

  ;
}

  ;
}

  ;
}

void *sub_100043918(unsigned int a1, uint64_t a2, ...)
{
  return sub_1000B5130(a1, (uint64_t *)va);
}

uint64_t sub_100043920()
{
  return __cxa_atexit((void (*)(void *))sub_100042890, byte_1002C96A0, (void *)&_mh_execute_header);
}

uint64_t sub_10004395C(uint64_t a1, uint64_t a2, uint64_t *a3, int a4)
{
  v8[0] = 0LL;
  sub_100007640((uint64_t)v8, a3);
  sub_1000342C8(a1, a2, v8);
  sub_100006E7C(v8);
  *(void *)a1 = &off_1002AEE58;
  *(_DWORD *)(a1 + 136) = a4;
  return a1;
}

void sub_1000439CC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_1000439E4( uint64_t a1, unsigned int a2, unsigned int *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v40 = a3;
  int v11 = *(unsigned __int16 *)(a1 + 8);
  uint64_t result = 3LL;
  if (v11 > 78)
  {
    if (v11 != 79)
    {
      if (v11 != 86) {
        goto LABEL_86;
      }
      goto LABEL_26;
    }
  }

  else
  {
    if (v11)
    {
      if (v11 != 71) {
        goto LABEL_86;
      }
    }

    else
    {
      uint64_t v13 = *(void *)(a1 + 56);
      if (!*(_BYTE *)(v13 + 1376))
      {
        v35.n128_u64[0] = 0LL;
        (*(void (**)(uint64_t, uint64_t, __n128 *))(*(void *)a1 + 32LL))(a1, 3LL, &v35);
        goto LABEL_12;
      }

      if (sub_1000D8DE8(v13) == 2)
      {
        v35.n128_u64[0] = 0LL;
        (*(void (**)(uint64_t, uint64_t, __n128 *))(*(void *)a1 + 32LL))(a1, 4LL, &v35);
        goto LABEL_12;
      }

      sub_100159FC0(a1, 30.0);
      *(_WORD *)(a1 + 8) = 71;
    }

    int v14 = sub_1000D8DE8(*(void *)(a1 + 56));
    if (sub_1000B50E8(v14)
      || (*(unsigned int (**)(void))(**(void **)(a1 + 56) + 160LL))(*(void *)(a1 + 56)))
    {
      if (!sub_100159F84(a1))
      {
        sub_10015A00C(a1);
        int v15 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v15)
        {
          uint64_t v16 = v15;
        }

        else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
          sub_1001FB53C();
        }

        unsigned int v17 = 1;
        goto LABEL_74;
      }

      return 0LL;
    }

    sub_10015A00C(a1);
    *(_WORD *)(a1 + 8) = 79;
  }

  if (a2 == 2) {
    return 0LL;
  }
  sub_100034C60("Cii", (uint64_t *)&v35, 0x80u);
  sub_100006EFC(a1 + 104, &v35);
  int v41 = &v35;
  sub_100006F6C((void ***)&v41);
  *(_WORD *)(a1 + 98) = 0;
  *(_WORD *)(a1 + 8) = 86;
LABEL_26:
  unsigned int v17 = *(_DWORD *)(a1 + 128);
  if (v17)
  {
    uint64_t v18 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v18)
    {
      __int16 v19 = v18;
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }

    goto LABEL_74;
  }

  if (a2 != -1409351679)
  {
    uint64_t v25 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v25)
    {
      uint64_t v26 = v25;
      goto LABEL_73;
    }

    if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      goto LABEL_73;
    }
    goto LABEL_72;
  }

  unsigned int v20 = v40;
  v40 += 2;
  unsigned int v21 = *v20;
  int v40 = v20 + 4;
  int v22 = (_WORD *)*((void *)v20 + 1);
  int v40 = v20 + 6;
  if (v21 != 1680)
  {
    uint64_t v27 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v27)
    {
      char v28 = v27;
      goto LABEL_73;
    }

    if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      goto LABEL_73;
    }
LABEL_72:
    sub_1001FB53C();
    goto LABEL_73;
  }

  if ((spinel_datatype_unpack( v22,  v20[4],  "SSSSSSSSSSSSSSSS",  (uint64_t)&v38,  (uint64_t)&v39,  (uint64_t)&v39 + 2,  (uint64_t)&v39 + 4,  (uint64_t)&v39 + 6,  (uint64_t)v37) & 0x80000000) != 0)
  {
    int v29 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v29)
    {
      uint64_t v30 = v29;
      goto LABEL_73;
    }

    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      goto LABEL_72;
    }
LABEL_73:
    unsigned int v17 = 0;
LABEL_74:
    if (v17 <= 1) {
      uint64_t v32 = 1LL;
    }
    else {
      uint64_t v32 = v17;
    }
    uint64_t v33 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v33)
    {
      uint64_t v34 = v33;
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }

    v35.n128_u64[0] = 0LL;
    (*(void (**)(uint64_t, uint64_t, __n128 *))(*(void *)a1 + 32LL))(a1, v32, &v35);
    if (v35.n128_u64[0]) {
      (*(void (**)(unint64_t))(*(void *)v35.n128_u64[0] + 8LL))(v35.n128_u64[0]);
    }
    uint64_t result = 3LL;
    goto LABEL_86;
  }

  int v23 = *(_DWORD *)(a1 + 136);
  if (!v23)
  {
    sub_10004463C(v37, &v35);
    uint64_t v31 = (char *)operator new(0x20uLL);
    *(void *)uint64_t v31 = &off_1002AE030;
    *(__n128 *)(v31 + 8) = v35;
    *((void *)v31 + 3) = v36;
    __n128 v35 = 0uLL;
    uint64_t v36 = 0LL;
    int v41 = (__n128 *)v31;
    (*(void (**)(uint64_t, void, __n128 **))(*(void *)a1 + 32LL))(a1, 0LL, &v41);
    if (v41) {
      (*(void (**)(__n128 *))(v41->n128_u64[0] + 8))(v41);
    }
    if (SHIBYTE(v36) < 0) {
      operator delete((void *)v35.n128_u64[0]);
    }
    goto LABEL_14;
  }

  if (v23 == 2)
  {
    sub_10004470C(v37, (uint64_t)&v35);
    sub_100044CD0(&v41, &v35);
    (*(void (**)(uint64_t, void, __n128 **))(*(void *)a1 + 32LL))(a1, 0LL, &v41);
    if (v41) {
      (*(void (**)(__n128 *))(v41->n128_u64[0] + 8))(v41);
    }
    sub_10000D448((uint64_t)&v35);
    goto LABEL_14;
  }

  if (v23 != 1)
  {
    v35.n128_u64[0] = 0LL;
    (*(void (**)(uint64_t, void, __n128 *))(*(void *)a1 + 32LL))(a1, 0LL, &v35);
LABEL_12:
    if (v35.n128_u64[0]) {
      (*(void (**)(unint64_t))(*(void *)v35.n128_u64[0] + 8LL))(v35.n128_u64[0]);
    }
    goto LABEL_14;
  }

  sub_1000440FC(v37, (uint64_t *)&v35);
  uint64_t v24 = operator new(0x20uLL);
  int v41 = (__n128 *)sub_100044B8C(v24, &v35);
  (*(void (**)(uint64_t, void, __n128 **))(*(void *)a1 + 32LL))(a1, 0LL, &v41);
  if (v41) {
    (*(void (**)(__n128 *))(v41->n128_u64[0] + 8))(v41);
  }
  sub_10000C0E8(&v35);
LABEL_14:
  uint64_t result = 2LL;
LABEL_86:
  *(_WORD *)(a1 + 8) = 0;
  return result;
}

void sub_100044044(_Unwind_Exception *a1)
{
  uint64_t v3 = *(void *)(v1 - 56);
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }
  sub_10000C0E8((void *)(v1 - 120));
  _Unwind_Resume(a1);
}

void sub_1000440FC(unsigned __int16 *a1@<X0>, uint64_t *a2@<X8>)
{
  *a2 = (uint64_t)a2;
  a2[1] = (uint64_t)a2;
  a2[2] = 0LL;
  snprintf(__str, 0x64uLL, "mTotalBuffers = %d", *a1);
  sub_10000AC00(__p, __str);
  sub_100044B24(a2, (uint64_t)__p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  snprintf(__str, 0x64uLL, "mFreeBuffers = %d", a1[1]);
  sub_10000AC00(__p, __str);
  sub_100044B24(a2, (uint64_t)__p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  snprintf(__str, 0x64uLL, "m6loSendMessages = %d", a1[2]);
  sub_10000AC00(__p, __str);
  sub_100044B24(a2, (uint64_t)__p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  snprintf(__str, 0x64uLL, "m6loSendBuffers = %d", a1[3]);
  sub_10000AC00(__p, __str);
  sub_100044B24(a2, (uint64_t)__p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  snprintf(__str, 0x64uLL, "m6loReassemblyMessages = %d", a1[4]);
  sub_10000AC00(__p, __str);
  sub_100044B24(a2, (uint64_t)__p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  snprintf(__str, 0x64uLL, "m6loReassemblyBuffers = %d", a1[5]);
  sub_10000AC00(__p, __str);
  sub_100044B24(a2, (uint64_t)__p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  snprintf(__str, 0x64uLL, "mIp6Messages = %d", a1[6]);
  sub_10000AC00(__p, __str);
  sub_100044B24(a2, (uint64_t)__p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  snprintf(__str, 0x64uLL, "mIp6Buffers = %d", a1[7]);
  sub_10000AC00(__p, __str);
  sub_100044B24(a2, (uint64_t)__p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  snprintf(__str, 0x64uLL, "mMplMessages = %d", a1[8]);
  sub_10000AC00(__p, __str);
  sub_100044B24(a2, (uint64_t)__p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  snprintf(__str, 0x64uLL, "mMplBuffers = %d", a1[9]);
  sub_10000AC00(__p, __str);
  sub_100044B24(a2, (uint64_t)__p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  snprintf(__str, 0x64uLL, "mMleMessages = %d", a1[10]);
  sub_10000AC00(__p, __str);
  sub_100044B24(a2, (uint64_t)__p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  snprintf(__str, 0x64uLL, "mMleBuffers = %d", a1[11]);
  sub_10000AC00(__p, __str);
  sub_100044B24(a2, (uint64_t)__p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  snprintf(__str, 0x64uLL, "mArpMessages = %d", a1[12]);
  sub_10000AC00(__p, __str);
  sub_100044B24(a2, (uint64_t)__p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  snprintf(__str, 0x64uLL, "mArpBuffers = %d", a1[13]);
  sub_10000AC00(__p, __str);
  sub_100044B24(a2, (uint64_t)__p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  snprintf(__str, 0x64uLL, "mCoapClientMessages = %d", a1[14]);
  sub_10000AC00(__p, __str);
  sub_100044B24(a2, (uint64_t)__p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  snprintf(__str, 0x64uLL, "mCoapClientBuffers = %d", a1[15]);
  sub_10000AC00(__p, __str);
  sub_100044B24(a2, (uint64_t)__p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_100044598( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  sub_10000C0E8(v15);
  _Unwind_Resume(a1);
}

void *sub_10004463C@<X0>(unsigned __int16 *a1@<X0>, void *a2@<X8>)
{
  snprintf( __str,  0x320uLL,  "TotalBuffers = %-3d, FreeBuffers = %-3d, 6loSendMessages = %-3d, 6loSendBuffers = %-3d, 6loReassemblyMessages = %-3d , 6loReassemblyBuffers = %-3d, Ip6Messages = %-3d, Ip6Buffers = %-3d, MplMessages = %-3d, MplBuffers = %-3d, MleMess ages = %-3d, MleBuffers = %-3d, ArpMessages = %-3d, ArpBuffers = %-3d, CoapClientMessages = %-3d, CoapClientBuffers = %-3d, ",  *a1,  a1[1],  a1[2],  a1[3],  a1[4],  a1[5],  a1[6],  a1[7],  a1[8],  a1[9],  a1[10],  a1[11],  a1[12],  a1[13],  a1[14],  a1[15]);
  return sub_10000AC00(a2, __str);
}

void sub_10004470C(_WORD *a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a2 + 16) = 0LL;
  *(void *)(a2 + 8) = 0LL;
  *(void *)a2 = a2 + 8;
  sub_10000AC00(&__p, "TotalBuffers");
  uint64_t v4 = sub_10000ED88((uint64_t **)a2, &__p);
  sub_100017678(v4, a1);
  if (v21 < 0) {
    operator delete((void *)__p.n128_u64[0]);
  }
  sub_10000AC00(&__p, "FreeBuffers");
  char v5 = sub_10000ED88((uint64_t **)a2, &__p);
  sub_100017678(v5, a1 + 1);
  if (v21 < 0) {
    operator delete((void *)__p.n128_u64[0]);
  }
  sub_10000AC00(&__p, "6loSendMessages");
  uint64_t v6 = sub_10000ED88((uint64_t **)a2, &__p);
  sub_100017678(v6, a1 + 2);
  if (v21 < 0) {
    operator delete((void *)__p.n128_u64[0]);
  }
  sub_10000AC00(&__p, "6loSendBuffers");
  uint64_t v7 = sub_10000ED88((uint64_t **)a2, &__p);
  sub_100017678(v7, a1 + 3);
  if (v21 < 0) {
    operator delete((void *)__p.n128_u64[0]);
  }
  sub_10000AC00(&__p, "6loReassemblyMessages");
  char v8 = sub_10000ED88((uint64_t **)a2, &__p);
  sub_100017678(v8, a1 + 4);
  if (v21 < 0) {
    operator delete((void *)__p.n128_u64[0]);
  }
  sub_10000AC00(&__p, "6loReassemblyBuffers");
  unsigned int v9 = sub_10000ED88((uint64_t **)a2, &__p);
  sub_100017678(v9, a1 + 5);
  if (v21 < 0) {
    operator delete((void *)__p.n128_u64[0]);
  }
  sub_10000AC00(&__p, "Ip6Messages");
  uint64_t v10 = sub_10000ED88((uint64_t **)a2, &__p);
  sub_100017678(v10, a1 + 6);
  if (v21 < 0) {
    operator delete((void *)__p.n128_u64[0]);
  }
  sub_10000AC00(&__p, "Ip6Buffers");
  int v11 = sub_10000ED88((uint64_t **)a2, &__p);
  sub_100017678(v11, a1 + 7);
  if (v21 < 0) {
    operator delete((void *)__p.n128_u64[0]);
  }
  sub_10000AC00(&__p, "MplMessages");
  int v12 = sub_10000ED88((uint64_t **)a2, &__p);
  sub_100017678(v12, a1 + 8);
  if (v21 < 0) {
    operator delete((void *)__p.n128_u64[0]);
  }
  sub_10000AC00(&__p, "MplBuffers");
  uint64_t v13 = sub_10000ED88((uint64_t **)a2, &__p);
  sub_100017678(v13, a1 + 9);
  if (v21 < 0) {
    operator delete((void *)__p.n128_u64[0]);
  }
  sub_10000AC00(&__p, "MleMessages");
  int v14 = sub_10000ED88((uint64_t **)a2, &__p);
  sub_100017678(v14, a1 + 10);
  if (v21 < 0) {
    operator delete((void *)__p.n128_u64[0]);
  }
  sub_10000AC00(&__p, "MleBuffers");
  int v15 = sub_10000ED88((uint64_t **)a2, &__p);
  sub_100017678(v15, a1 + 11);
  if (v21 < 0) {
    operator delete((void *)__p.n128_u64[0]);
  }
  sub_10000AC00(&__p, "ArpMessages");
  uint64_t v16 = sub_10000ED88((uint64_t **)a2, &__p);
  sub_100017678(v16, a1 + 12);
  if (v21 < 0) {
    operator delete((void *)__p.n128_u64[0]);
  }
  sub_10000AC00(&__p, "ArpBuffers");
  unsigned int v17 = sub_10000ED88((uint64_t **)a2, &__p);
  sub_100017678(v17, a1 + 13);
  if (v21 < 0) {
    operator delete((void *)__p.n128_u64[0]);
  }
  sub_10000AC00(&__p, "CoapClientMessages");
  uint64_t v18 = sub_10000ED88((uint64_t **)a2, &__p);
  sub_100017678(v18, a1 + 14);
  if (v21 < 0) {
    operator delete((void *)__p.n128_u64[0]);
  }
  sub_10000AC00(&__p, "CoapClientBuffers");
  __int16 v19 = sub_10000ED88((uint64_t **)a2, &__p);
  sub_100017678(v19, a1 + 15);
  if (v21 < 0) {
    operator delete((void *)__p.n128_u64[0]);
  }
}

void sub_100044A80( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
}

void *sub_100044B24(uint64_t *a1, uint64_t a2)
{
  uint64_t result = sub_100044D5C((uint64_t)a1, 0LL, 0LL, a2);
  uint64_t v4 = *a1;
  *uint64_t result = *a1;
  result[1] = a1;
  *(void *)(v4 + 8) = result;
  *a1 = (uint64_t)result;
  uint64_t v5 = a1[2];
  BOOL v6 = __CFADD__(v5, 1LL);
  uint64_t v7 = v5 + 1;
  if (v6) {
    __break(0x5500u);
  }
  else {
    a1[2] = v7;
  }
  return result;
}

void sub_100044B78(uint64_t a1)
{
  uint64_t v1 = (void *)sub_100034374(a1);
  operator delete(v1);
}

void *sub_100044B8C(void *a1, void *a2)
{
  uint64_t v3 = a1 + 1;
  *a1 = off_1002AEEA8;
  a1[1] = v3;
  a1[2] = v3;
  a1[3] = 0LL;
  sub_100044C80((uint64_t)v3, v3, a2);
  return a1;
}

uint64_t sub_100044BD0(uint64_t a1)
{
  return a1;
}

void sub_100044BF8(void *a1)
{
}

_UNKNOWN **sub_100044C20()
{
}

void *sub_100044C2C(uint64_t a1)
{
  unsigned int v2 = operator new(0x20uLL);
  void *v2 = off_1002AEEA8;
  sub_10000C678((uint64_t)(v2 + 1), a1 + 8);
  return v2;
}

void sub_100044C6C(_Unwind_Exception *a1)
{
}

uint64_t sub_100044C80(uint64_t result, uint64_t *a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (v3)
  {
    uint64_t v5 = *a3;
    uint64_t v4 = (uint64_t *)a3[1];
    uint64_t v6 = *v4;
    *(void *)(v6 + 8) = *(void *)(*a3 + 8LL);
    **(void **)(v5 + 8) = v6;
    uint64_t v7 = *a2;
    *(void *)(v7 + 8) = v4;
    *uint64_t v4 = v7;
    *a2 = v5;
    *(void *)(v5 + 8) = a2;
    uint64_t v8 = *(void *)(result + 16);
    BOOL v9 = __CFADD__(v8, v3);
    uint64_t v10 = v8 + v3;
    if (v9)
    {
      __break(0x5500u);
    }

    else
    {
      *(void *)(result + 16) = v10;
      a3[2] = 0LL;
    }
  }

  return result;
}

void *sub_100044CD0(void *a1, void *a2)
{
  uint64_t v4 = operator new(0x20uLL);
  *uint64_t v4 = off_1002ADCD0;
  sub_100044D20(v4 + 1, a2);
  *a1 = v4;
  return a1;
}

void *sub_100044D20(void *result, void *a2)
{
  *uint64_t result = *a2;
  uint64_t v2 = a2[1];
  result[1] = v2;
  uint64_t v3 = result + 1;
  uint64_t v4 = a2[2];
  result[2] = v4;
  if (v4)
  {
    *(void *)(v2 + 16) = v3;
    a2[1] = 0LL;
    a2[2] = 0LL;
    *a2 = a2 + 1;
  }

  else
  {
    *uint64_t result = v3;
  }

  return result;
}

void *sub_100044D5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = 1LL;
  uint64_t v7 = operator new(0x28uLL);
  *uint64_t v7 = a2;
  v7[1] = a3;
  *((_OWORD *)v7 + 1) = *(_OWORD *)a4;
  uint64_t v7[4] = *(void *)(a4 + 16);
  *(void *)a4 = 0LL;
  *(void *)(a4 + 8) = 0LL;
  *(void *)(a4 + 16) = 0LL;
  uint64_t v11 = 0LL;
  sub_10000C7B0((uint64_t)v9);
  return v7;
}

void *sub_100044DD0(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_100044E28(a1);
  *uint64_t v4 = off_1002AEEF0;
  v4[19] = off_1002AF0B8;
  v4[20] = a2;
  sub_100142AC8(v4 + 21);
  return a1;
}

void sub_100044E14(_Unwind_Exception *a1)
{
}

void *sub_100044E28(void *a1)
{
  *a1 = &off_1002B32D8;
  uint64_t v2 = a1 + 4;
  sub_100049C1C(a1 + 1);
  sub_10004A280(v2);
  sub_10004A638(a1 + 7);
  sub_10004A9F0(a1 + 10);
  sub_10004B26C(a1 + 13);
  sub_10004B624(a1 + 16);
  return a1;
}

void sub_100044EC4(_Unwind_Exception *a1)
{
  v1[13] = (uint64_t)off_1002AF628;
  sub_10000F9EC(v1 + 15);
  v1[10] = (uint64_t)off_1002AF498;
  sub_10000F9EC(v1 + 12);
  v1[7] = (uint64_t)off_1002AF3C8;
  sub_10000F9EC(v1 + 9);
  v1[4] = (uint64_t)off_1002AF2F8;
  sub_10000F9EC(v1 + 6);
  v1[1] = (uint64_t)off_1002AF118;
  sub_10000F9EC(v1 + 3);
  _Unwind_Resume(a1);
}

void *sub_100044F58(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = *(void *)(a1 + 160);
  uint64_t v6 = operator new(0xA8uLL);
  v8[0] = 0LL;
  sub_100007640((uint64_t)v8, a3);
  sub_100045084(v8, v9);
  sub_10004BFE4(v10, v9);
  sub_100077A20(v6, v5, v10, a2);
  sub_10004C360(&v11, (uint64_t)v6);
  sub_10004E9A4(v5, &v11);
  sub_10000F9EC(&v12);
  sub_100006E7C(v10);
  sub_1000075F0(v9);
  return sub_1000075F0(v8);
}

void sub_10004501C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  va_copy(va2, va1);
  uint64_t v9 = va_arg(va2, void);
  uint64_t v11 = va_arg(va2, void);
  uint64_t v12 = va_arg(va2, void);
  uint64_t v13 = va_arg(va2, void);
  uint64_t v14 = va_arg(va2, void);
  sub_10000F9EC((uint64_t *)(v2 + 8));
  sub_100006E7C((uint64_t *)va2);
  sub_1000075F0((uint64_t *)va1);
  sub_1000075F0((uint64_t *)va);
  _Unwind_Resume(a1);
}

void *sub_100045084@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  v4[0] = 0LL;
  sub_100007640((uint64_t)v4, a1);
  *a2 = 0LL;
  sub_100007640((uint64_t)a2, v4);
  return sub_1000075F0(v4);
}

void sub_1000450D0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *sub_1000450E4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = *(void *)(a1 + 160);
  uint64_t v6 = operator new(0xA8uLL);
  v8[0] = 0LL;
  sub_100007640((uint64_t)v8, a3);
  sub_100045084(v8, v9);
  sub_10004BFE4(v10, v9);
  sub_1000A74E4(v6, v5, v10, a2);
  sub_10004C4A0(&v11, (uint64_t)v6);
  sub_10004E9A4(v5, &v11);
  sub_10000F9EC(&v12);
  sub_100006E7C(v10);
  sub_1000075F0(v9);
  return sub_1000075F0(v8);
}

void sub_1000451A8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  va_copy(va2, va1);
  uint64_t v9 = va_arg(va2, void);
  uint64_t v11 = va_arg(va2, void);
  uint64_t v12 = va_arg(va2, void);
  uint64_t v13 = va_arg(va2, void);
  uint64_t v14 = va_arg(va2, void);
  sub_10000F9EC((uint64_t *)(v2 + 8));
  sub_100006E7C((uint64_t *)va2);
  sub_1000075F0((uint64_t *)va1);
  sub_1000075F0((uint64_t *)va);
  _Unwind_Resume(a1);
}

void *sub_100045210(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *(void *)(a1 + 160);
  uint64_t v4 = operator new(0x88uLL);
  v6[0] = 0LL;
  sub_100007640((uint64_t)v6, a2);
  sub_100045084(v6, v7);
  sub_10004BFE4(v8, v7);
  sub_1000B0154(v4, v3, v8);
  sub_10004C5E0(&v9, (uint64_t)v4);
  sub_10004E9A4(v3, &v9);
  sub_10000F9EC(&v10);
  sub_100006E7C(v8);
  sub_1000075F0(v7);
  return sub_1000075F0(v6);
}

void sub_1000452CC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  va_copy(va2, va1);
  uint64_t v9 = va_arg(va2, void);
  uint64_t v11 = va_arg(va2, void);
  uint64_t v12 = va_arg(va2, void);
  uint64_t v13 = va_arg(va2, void);
  uint64_t v14 = va_arg(va2, void);
  sub_10000F9EC((uint64_t *)(v2 + 8));
  sub_100006E7C((uint64_t *)va2);
  sub_1000075F0((uint64_t *)va1);
  sub_1000075F0((uint64_t *)va);
  _Unwind_Resume(a1);
}

void *sub_100045334(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *(void *)(a1 + 160);
  sub_1000798B4((uint64_t)v10, v3);
  uint64_t v4 = sub_10007993C((uint64_t)v10, a2);
  sub_100034C60("Ciib", v9, 0x80u);
  uint64_t v5 = sub_100079A40(v4, (uint64_t)v9);
  sub_100034C60("Ciib", (uint64_t *)v8, 0x80u);
  uint64_t v6 = sub_100079A40(v5, (uint64_t)v8);
  sub_10007A86C(v6, &v15);
  sub_10004E9A4(v3, &v15);
  sub_10000F9EC(&v16);
  unsigned int v17 = v8;
  sub_100006F6C((void ***)&v17);
  v8[0] = (void **)v9;
  sub_100006F6C(v8);
  sub_10004BF94(v14);
  sub_10004BED0(v13);
  sub_10004BEF8(v12);
  return sub_100006E7C(v11);
}

void sub_100045450(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  uint64_t v8 = va_arg(va1, void **);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  va_copy(va2, va1);
  uint64_t v12 = va_arg(va2, void);
  uint64_t v14 = va_arg(va2, void);
  uint64_t v15 = va_arg(va2, void);
  sub_10000F9EC((uint64_t *)(v5 + 8));
  *(void *)(v6 - 40) = va;
  sub_100006F6C((void ***)(v6 - 40));
  va_copy((va_list)v8, va1);
  sub_100006F6C((void ***)va);
  sub_1000454AC((uint64_t *)va2);
  _Unwind_Resume(a1);
}

void *sub_1000454AC(void *a1)
{
  return a1;
}

void *sub_1000454EC(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *(void *)(a1 + 160);
  sub_1000798B4((uint64_t)v15, v4);
  v12[0] = 0LL;
  sub_100007640((uint64_t)v12, a2);
  sub_1000456D0(v12, 0, (uint64_t)v13);
  sub_10004C720(v14, (uint64_t)v13);
  uint64_t v5 = sub_10007993C((uint64_t)v15, (uint64_t *)v14);
  sub_100034C60("Ci", v11, 0x80u);
  uint64_t v6 = sub_100079A40(v5, (uint64_t)v11);
  uint64_t v7 = *(void ***)(a1 + 160);
  v10[1] = (void **)sub_100045738;
  void v10[2] = v7;
  v10[0] = (void **)((char *)off_1002AF9D8 + 1);
  uint64_t v8 = sub_10007A7E0(v6, (uint64_t *)v10, 30);
  sub_10007A86C(v8, &v20);
  sub_10004E9A4(v4, &v20);
  sub_10000F9EC(&v21);
  sub_10004BF94(v10);
  v10[0] = (void **)v11;
  sub_100006F6C(v10);
  sub_1000075F0(v14);
  sub_1000075F0(v13);
  sub_1000075F0(v12);
  sub_10004BF94(v19);
  sub_10004BED0(v18);
  sub_10004BEF8(v17);
  return sub_100006E7C(v16);
}

void sub_100045650( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void **a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32)
{
  a12 = (void **)&a16;
  sub_100006F6C(&a12);
  sub_1000075F0(&a28);
  sub_1000075F0(&a23);
  sub_1000075F0(&a19);
  sub_1000454AC(&a32);
  _Unwind_Resume(a1);
}

void *sub_1000456D0@<X0>(uint64_t *a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  v6[0] = 0LL;
  sub_100007640((uint64_t)v6, a1);
  *(void *)a3 = 0LL;
  sub_100007640(a3, v6);
  *(_DWORD *)(a3 + 32) = a2;
  return sub_1000075F0(v6);
}

void sub_100045724( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_100045738(uint64_t a1)
{
  int v2 = sub_1000D8DE8(a1);
  if (sub_1000B50E8(v2)) {
    return 0LL;
  }
  else {
    return (*(unsigned int (**)(uint64_t))(*(void *)a1 + 160LL))(a1) ^ 1;
  }
}

uint64_t sub_10004577C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_100006FF8(a4);
}

void *sub_100045788(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *(void *)(a1 + 160);
  uint64_t v5 = operator new(0x90uLL);
  v7[0] = 0LL;
  sub_100007640((uint64_t)v7, a2);
  sub_100045084(v7, v8);
  sub_10004BFE4(v9, v8);
  sub_1000ABFB0(v5, v4, v9, *(unsigned __int8 *)(*(void *)(a1 + 160) + 72760LL));
  sub_10004CB98(&v10, (uint64_t)v5);
  sub_10004E9A4(v4, &v10);
  sub_10000F9EC(&v11);
  sub_100006E7C(v9);
  sub_1000075F0(v8);
  return sub_1000075F0(v7);
}

void sub_100045858(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  va_copy(va2, va1);
  uint64_t v9 = va_arg(va2, void);
  uint64_t v11 = va_arg(va2, void);
  uint64_t v12 = va_arg(va2, void);
  uint64_t v13 = va_arg(va2, void);
  uint64_t v14 = va_arg(va2, void);
  sub_10000F9EC((uint64_t *)(v2 + 8));
  sub_100006E7C((uint64_t *)va2);
  sub_1000075F0((uint64_t *)va1);
  sub_1000075F0((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_1000458C0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = (char *)operator new(0x20uLL);
  *(void *)uint64_t v4 = &off_1002AE030;
  *(_OWORD *)(v4 + 8) = *(_OWORD *)__p;
  *((void *)v4 + 3) = v8;
  __p[0] = 0LL;
  __p[1] = 0LL;
  uint64_t v8 = 0LL;
  uint64_t v9 = v4;
  v6[0] = 0LL;
  __n128 v5 = sub_100007640((uint64_t)v6, a2);
  (*(void (**)(uint64_t, void **, char **, void *, __n128))(*(void *)a1 + 64LL))(a1, v10, &v9, v6, v5);
  sub_1000075F0(v6);
  if (v9) {
    (*(void (**)(char *))(*(void *)v9 + 8LL))(v9);
  }
  if (SHIBYTE(v8) < 0) {
    operator delete(__p[0]);
  }
  if (v11 < 0) {
    operator delete(v10[0]);
  }
}

void sub_1000459A8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, uint64_t a20)
{
  if (a20) {
    (*(void (**)(uint64_t))(*(void *)a20 + 8LL))(a20);
  }
  if (a19 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void *sub_100045A0C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *(void *)(a1 + 160);
  sub_1000798B4((uint64_t)v8, v3);
  uint64_t v4 = sub_10007993C((uint64_t)v8, a2);
  sub_100034C60("Ci", v7, 0x80u);
  uint64_t v5 = sub_100079A40(v4, (uint64_t)v7);
  sub_10007A86C(v5, &v13);
  sub_10004E9A4(v3, &v13);
  sub_10000F9EC(&v14);
  uint64_t v15 = (void **)v7;
  sub_100006F6C(&v15);
  sub_10004BF94(v12);
  sub_10004BED0(v11);
  sub_10004BEF8(v10);
  return sub_100006E7C(v9);
}

void sub_100045AD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v7 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  sub_10000F9EC((uint64_t *)(v4 + 8));
  *(void *)(v5 - 40) = va;
  sub_100006F6C((void ***)(v5 - 40));
  sub_1000454AC((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void *sub_100045B10(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *(void *)(a1 + 160);
  sub_1000798B4((uint64_t)v8, v3);
  uint64_t v4 = sub_10007993C((uint64_t)v8, a2);
  sub_100034C60("Cii", v7, 0x80u);
  uint64_t v5 = sub_100079A40(v4, (uint64_t)v7);
  sub_10007A86C(v5, &v13);
  sub_10004E9A4(v3, &v13);
  sub_10000F9EC(&v14);
  uint64_t v15 = (void **)v7;
  sub_100006F6C(&v15);
  sub_10004BF94(v12);
  sub_10004BED0(v11);
  sub_10004BEF8(v10);
  return sub_100006E7C(v9);
}

void sub_100045BE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v7 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  sub_10000F9EC((uint64_t *)(v4 + 8));
  *(void *)(v5 - 40) = va;
  sub_100006F6C((void ***)(v5 - 40));
  sub_1000454AC((uint64_t *)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_100045C20(uint64_t a1, __int128 *a2, uint64_t a3, uint64_t *a4, int a5, uint64_t a6, uint64_t *a7)
{
  uint64_t v8 = *(void *)(a1 + 160);
  if (*(_BYTE *)(v8 + 1376))
  {
    sub_100033134(v18, a4);
    uint64_t v13 = sub_1000EB9EC((uint64_t)v18, a5);
    v17[0] = 0LL;
    sub_100007640((uint64_t)v17, a7);
    sub_1000EE8F4((uint64_t **)v8, 2, a2, a3, v13, a6, 0, v17);
    sub_1000075F0(v17);
    return sub_10000D0D4((uint64_t)v18);
  }

  else
  {
    uint64_t v15 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v15)
    {
      uint64_t v16 = v15;
      if (sub_10015A058(4))
      {
        if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
          sub_10020245C();
        }
      }
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }

    return sub_100006FF8(a7);
  }

void sub_100045D40(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3 = va_arg(va1, void);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_1000075F0((uint64_t *)va);
  sub_10000D0D4((uint64_t)va1);
  _Unwind_Resume(a1);
}

void *sub_100045D64(uint64_t a1, __int128 *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5 = *(_BYTE **)(a1 + 160);
  if (v5[1376])
  {
    v11[0] = 0LL;
    sub_100007640((uint64_t)v11, a4);
    sub_1000EED40(v5, 2, a2, a3, 0, 1u, 0, v11);
    return sub_1000075F0(v11);
  }

  else
  {
    uint64_t v9 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v9)
    {
      uint64_t v10 = v9;
      if (sub_10015A058(4))
      {
        if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
          sub_1002024D4();
        }
      }
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }

    return (void *)sub_100006FF8(a4);
  }

void sub_100045E50( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *sub_100045E64( uint64_t a1, __int128 *a2, unsigned int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8)
{
  if (!a2)
  {
    uint64_t v16 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v16)
    {
      unsigned int v17 = v16;
      goto LABEL_28;
    }

    if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      goto LABEL_28;
    }
    goto LABEL_27;
  }

  unsigned __int8 v9 = a3;
  if ((a3 & 0x80000000) != 0)
  {
    uint64_t v18 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v18)
    {
      __int16 v19 = v18;
      goto LABEL_28;
    }

    if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      goto LABEL_28;
    }
LABEL_27:
    sub_1001FB53C();
    goto LABEL_28;
  }

  if (a3 >= 0x81)
  {
    uint64_t v20 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v20)
    {
      uint64_t v21 = v20;
      goto LABEL_28;
    }

    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      goto LABEL_27;
    }
LABEL_28:
    uint64_t v24 = a8;
    return (void *)sub_100006FF8(v24);
  }

  uint64_t v10 = *(void *)(a1 + 160);
  if (*(_BYTE *)(v10 + 1376))
  {
    v25[0] = 0LL;
    sub_100007640((uint64_t)v25, a8);
    sub_1000F005C(v10, 2u, a2, v9, a5, a6, a7, 0, 1, v25);
    return sub_1000075F0(v25);
  }

  int v22 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v22)
  {
    int v23 = v22;
    if (sub_10015A058(4))
    {
      if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
        sub_1002025C4();
      }
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  uint64_t v24 = a8;
  return (void *)sub_100006FF8(v24);
}

void sub_1000460B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void *sub_1000460CC(uint64_t a1, __int128 *a2, unsigned int a3, uint64_t a4, uint64_t *a5)
{
  if (!a2)
  {
    uint64_t v10 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v10)
    {
      char v11 = v10;
      goto LABEL_28;
    }

    if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      goto LABEL_28;
    }
    goto LABEL_27;
  }

  unsigned __int8 v6 = a3;
  if ((a3 & 0x80000000) != 0)
  {
    uint64_t v12 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v12)
    {
      uint64_t v13 = v12;
      goto LABEL_28;
    }

    if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      goto LABEL_28;
    }
LABEL_27:
    sub_1001FB53C();
    goto LABEL_28;
  }

  if (a3 >= 0x81)
  {
    uint64_t v14 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v14)
    {
      uint64_t v15 = v14;
      goto LABEL_28;
    }

    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      goto LABEL_27;
    }
LABEL_28:
    uint64_t v18 = a5;
    return (void *)sub_100006FF8(v18);
  }

  uint64_t v7 = *(_BYTE **)(a1 + 160);
  if (v7[1376])
  {
    v19[0] = 0LL;
    sub_100007640((uint64_t)v19, a5);
    sub_1000F030C(v7, 2, a2, v6, 0LL, 1LL, 0, v19);
    return sub_1000075F0(v19);
  }

  uint64_t v16 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v16)
  {
    unsigned int v17 = v16;
    if (sub_10015A058(4))
    {
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
        sub_1002027A4();
      }
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  uint64_t v18 = a5;
  return (void *)sub_100006FF8(v18);
}

void sub_1000462F4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *sub_100046308(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t *a6)
{
  if (a3[1] == *a3)
  {
    uint64_t v13 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v13)
    {
      uint64_t v14 = v13;
      goto LABEL_21;
    }

    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
LABEL_20:
    }
      sub_1001FB53C();
LABEL_21:
    __int16 v19 = a6;
    return (void *)sub_100006FF8(v19);
  }

  if (a5[1] == *a5)
  {
    uint64_t v15 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v15)
    {
      uint64_t v16 = v15;
      goto LABEL_21;
    }

    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      goto LABEL_20;
    }
    goto LABEL_21;
  }

  uint64_t v8 = *(void *)(a1 + 160);
  if (*(_BYTE *)(v8 + 1376))
  {
    v20[0] = 0LL;
    sub_100007640((uint64_t)v20, a6);
    sub_1000F0858((uint64_t *)v8, 2, a2, (uint64_t)a3, a4, (uint64_t)a5, v20);
    return sub_1000075F0(v20);
  }

  unsigned int v17 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v17)
  {
    uint64_t v18 = v17;
    if (sub_10015A058(4))
    {
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
        sub_1002029FC();
      }
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  __int16 v19 = a6;
  return (void *)sub_100006FF8(v19);
}

void sub_1000464E4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *sub_1000464F8(uint64_t a1, uint64_t a2, void *a3, uint64_t *a4)
{
  if (a3[1] == *a3)
  {
    unsigned __int8 v9 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v9)
    {
      uint64_t v10 = v9;
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }

    uint64_t v13 = a4;
  }

  else
  {
    uint64_t v5 = *(void *)(a1 + 160);
    if (*(_BYTE *)(v5 + 1376))
    {
      v14[0] = 0LL;
      sub_100007640((uint64_t)v14, a4);
      sub_1000F1110((uint64_t *)v5, 2, a2, (uint64_t)a3, v14);
      return sub_1000075F0(v14);
    }

    char v11 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v11)
    {
      uint64_t v12 = v11;
      if (sub_10015A058(4))
      {
        if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
          sub_100202AEC();
        }
      }
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }

    uint64_t v13 = a4;
  }

  return (void *)sub_100006FF8(v13);
}

void sub_100046650( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *sub_100046664(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v5 = *(void *)(a1 + 160);
  unsigned __int8 v6 = operator new(0xA0uLL);
  v8[0] = 0LL;
  sub_100007640((uint64_t)v8, a3);
  sub_100045084(v8, v9);
  sub_10004BFE4(v10, v9);
  sub_100036B38(v6, v5, (uint64_t *)v10, a2);
  sub_10004CCD8(&v11, (uint64_t)v6);
  sub_10004E9A4(v5, &v11);
  sub_10000F9EC(&v12);
  sub_100006E7C(v10);
  sub_1000075F0(v9);
  return sub_1000075F0(v8);
}

void sub_100046728(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  va_copy(va2, va1);
  uint64_t v9 = va_arg(va2, void);
  uint64_t v11 = va_arg(va2, void);
  uint64_t v12 = va_arg(va2, void);
  uint64_t v13 = va_arg(va2, void);
  uint64_t v14 = va_arg(va2, void);
  sub_10000F9EC((uint64_t *)(v2 + 8));
  sub_100006E7C((uint64_t *)va2);
  sub_1000075F0((uint64_t *)va1);
  sub_1000075F0((uint64_t *)va);
  _Unwind_Resume(a1);
}

void *sub_100046790(uint64_t a1, char a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v7 = *(void *)(a1 + 160);
  uint64_t v8 = operator new(0xB0uLL);
  v10[0] = 0LL;
  sub_100007640((uint64_t)v10, a4);
  sub_100045084(v10, v11);
  sub_10004BFE4(v12, v11);
  sub_100035900((uint64_t)v8, v7, (uint64_t *)v12, a2, a3);
  sub_10004CE18(&v13, (uint64_t)v8);
  sub_10004E9A4(v7, &v13);
  sub_10000F9EC(&v14);
  sub_100006E7C(v12);
  sub_1000075F0(v11);
  return sub_1000075F0(v10);
}

void sub_100046864(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  va_copy(va2, va1);
  uint64_t v9 = va_arg(va2, void);
  uint64_t v11 = va_arg(va2, void);
  uint64_t v12 = va_arg(va2, void);
  uint64_t v13 = va_arg(va2, void);
  uint64_t v14 = va_arg(va2, void);
  sub_10000F9EC((uint64_t *)(v2 + 8));
  sub_100006E7C((uint64_t *)va2);
  sub_1000075F0((uint64_t *)va1);
  sub_1000075F0((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_1000468CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  if (!a4)
  {
    uint64_t v9 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v9)
    {
      uint64_t v10 = v9;
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }

    uint64_t v13 = a5;
    goto LABEL_23;
  }

  uint64_t v7 = *(void *)(a1 + 160);
  if (!*(_BYTE *)(v7 + 1376))
  {
    uint64_t v11 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v11)
    {
      uint64_t v12 = v11;
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }

    uint64_t v13 = a5;
    goto LABEL_23;
  }

  v17[0].n128_u32[0] = 1024;
  if (!sub_100007684(v7 + 72792, (unsigned int *)v17))
  {
    uint64_t v13 = a5;
LABEL_23:
    sub_100006FF8(v13);
    return;
  }

  memset(v23, 0, sizeof(v23));
  if (a2) {
    sub_100034C60("Ciit(E)LU", (uint64_t *)v17, 0x80u);
  }
  else {
    sub_100034C60("Ciit()LU", (uint64_t *)v17, 0x80u);
  }
  sub_100006EFC((uint64_t)v23, v17);
  uint64_t v21 = (void **)v17;
  sub_100006F6C(&v21);
  uint64_t v14 = *(void *)(a1 + 160);
  sub_1000798B4((uint64_t)v17, v14);
  uint64_t v15 = sub_10007993C((uint64_t)v17, a5);
  uint64_t v16 = sub_100079A40(v15, (uint64_t)v23);
  sub_10007A86C(v16, (uint64_t *)&v21);
  sub_10004E9A4(v14, (uint64_t *)&v21);
  sub_10000F9EC(&v22);
  sub_10004BF94(v20);
  sub_10004BED0(v19);
  sub_10004BEF8(v18);
  sub_100006E7C(&v17[0].n128_u64[1]);
  v17[0].n128_u64[0] = (unint64_t)v23;
  sub_100006F6C((void ***)v17);
}

void sub_100046B1C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void **a15)
{
  a15 = (void **)(v15 - 72);
  sub_100006F6C(&a15);
  _Unwind_Resume(a1);
}

void sub_100046B60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5 = *(void *)(a1 + 160);
  if (!*(_BYTE *)(v5 + 1376))
  {
    uint64_t v8 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v8)
    {
      uint64_t v9 = v8;
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }

    uint64_t v10 = a4;
    goto LABEL_15;
  }

  v14[0].n128_u32[0] = 1024;
  if (!sub_100007684(v5 + 72792, (unsigned int *)v14))
  {
    uint64_t v10 = a4;
LABEL_15:
    sub_100006FF8(v10);
    return;
  }

  memset(v20, 0, sizeof(v20));
  if (a2) {
    sub_100034C60("Ciit(E)L", (uint64_t *)v14, 0x80u);
  }
  else {
    sub_100034C60("Ciit()L", (uint64_t *)v14, 0x80u);
  }
  sub_100006EFC((uint64_t)v20, v14);
  uint64_t v18 = (void **)v14;
  sub_100006F6C(&v18);
  uint64_t v11 = *(void *)(a1 + 160);
  sub_1000798B4((uint64_t)v14, v11);
  uint64_t v12 = sub_10007993C((uint64_t)v14, a4);
  uint64_t v13 = sub_100079A40(v12, (uint64_t)v20);
  sub_10007A86C(v13, (uint64_t *)&v18);
  sub_10004E9A4(v11, (uint64_t *)&v18);
  sub_10000F9EC(&v19);
  sub_10004BF94(v17);
  sub_10004BED0(v16);
  sub_10004BEF8(v15);
  sub_100006E7C(&v14[0].n128_u64[1]);
  v14[0].n128_u64[0] = (unint64_t)v20;
  sub_100006F6C((void ***)v14);
}

void sub_100046D38( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void **a15)
{
  a15 = (void **)(v15 - 72);
  sub_100006F6C(&a15);
  _Unwind_Resume(a1);
}

void *sub_100046D7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6)
{
  uint64_t v7 = *(void *)(a1 + 160);
  if (*(_BYTE *)(v7 + 1376))
  {
    unsigned int v17 = 1024;
    if (sub_100007684(v7 + 72792, &v17))
    {
      uint64_t v9 = *(void *)(a1 + 160);
      sub_1000798B4((uint64_t)&v17, v9);
      uint64_t v10 = sub_10007993C((uint64_t)&v17, a6);
      sub_100034C60("CiiLCS6", v16, 0x80u);
      uint64_t v11 = sub_100079A40(v10, (uint64_t)v16);
      sub_10007A86C(v11, &v22);
      sub_10004E9A4(v9, &v22);
      sub_10000F9EC(&v23);
      uint64_t v24 = (void **)v16;
      sub_100006F6C(&v24);
      sub_10004BF94(v21);
      sub_10004BED0(v20);
      sub_10004BEF8(v19);
      return sub_100006E7C(v18);
    }

    uint64_t v15 = a6;
  }

  else
  {
    uint64_t v13 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v13)
    {
      uint64_t v14 = v13;
      if (sub_10015A058(4))
      {
        if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
          sub_100202CCC();
        }
      }
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }

    uint64_t v15 = a6;
  }

  return (void *)sub_100006FF8(v15);
}

void sub_100046F24( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  uint64_t v11 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  sub_10000F9EC((uint64_t *)(v8 + 8));
  *(void *)(v9 - 72) = va;
  sub_100006F6C((void ***)(v9 - 72));
  sub_1000454AC((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_100046F64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7)
{
  uint64_t v8 = *(void *)(a1 + 160);
  if (*(_BYTE *)(v8 + 1376))
  {
    unsigned int v17 = 1024;
    if (sub_100007684(v8 + 72792, &v17))
    {
      uint64_t v10 = *(void *)(a1 + 160);
      sub_1000798B4((uint64_t)&v17, v10);
      uint64_t v11 = sub_10007993C((uint64_t)&v17, a7);
      sub_100034C60("CiiLCSS6", v16, 0x80u);
      uint64_t v12 = sub_100079A40(v11, (uint64_t)v16);
      sub_10007A86C(v12, &v22);
      sub_10004E9A4(v10, &v22);
      sub_10000F9EC(&v23);
      uint64_t v24 = (void **)v16;
      sub_100006F6C(&v24);
      sub_10004BF94(v21);
      sub_10004BED0(v20);
      sub_10004BEF8(v19);
      sub_100006E7C(v18);
      sub_10000C178((uint64_t *)(*(void *)(a1 + 160) + 73760LL));
      return;
    }

    uint64_t v15 = a7;
  }

  else
  {
    uint64_t v13 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v13)
    {
      uint64_t v14 = v13;
      if (sub_10015A058(4))
      {
        if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
          sub_100202D44();
        }
      }
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }

    uint64_t v15 = a7;
  }

  sub_100006FF8(v15);
}

void sub_10004712C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  uint64_t v13 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  sub_10000F9EC((uint64_t *)(v10 + 8));
  *(void *)(v11 - 88) = va;
  sub_100006F6C((void ***)(v11 - 88));
  sub_1000454AC((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_10004716C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v6 = *(void *)(a1 + 160);
  if (*(_BYTE *)(v6 + 1376))
  {
    unsigned int v15 = 1024;
    if (sub_100007684(v6 + 72792, &v15))
    {
      uint64_t v8 = *(void *)(a1 + 160);
      sub_1000798B4((uint64_t)&v15, v8);
      uint64_t v9 = sub_10007993C((uint64_t)&v15, a5);
      sub_100034C60("CiiSL6", v14, 0x80u);
      uint64_t v10 = sub_100079A40(v9, (uint64_t)v14);
      sub_10007A86C(v10, &v20);
      sub_10004E9A4(v8, &v20);
      sub_10000F9EC(&v21);
      uint64_t v22 = (void **)v14;
      sub_100006F6C(&v22);
      sub_10004BF94(v19);
      sub_10004BED0(v18);
      sub_10004BEF8(v17);
      sub_100006E7C(v16);
      sub_10000C178((uint64_t *)(*(void *)(a1 + 160) + 73784LL));
      return;
    }

    uint64_t v13 = a5;
  }

  else
  {
    uint64_t v11 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v11)
    {
      uint64_t v12 = v11;
      if (sub_10015A058(4))
      {
        if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
          sub_100202DBC();
        }
      }
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }

    uint64_t v13 = a5;
  }

  sub_100006FF8(v13);
}

void sub_100047318( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  uint64_t v11 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  sub_10000F9EC((uint64_t *)(v8 + 8));
  *(void *)(v9 - 72) = va;
  sub_100006F6C((void ***)(v9 - 72));
  sub_1000454AC((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void *sub_100047358(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v6 = *(void *)(a1 + 160);
  sub_1000798B4((uint64_t)v13, v6);
  uint64_t v7 = sub_1000798B8((uint64_t)v13, a5);
  sub_100034C60("Cii6d", v12, 0x80u);
  uint64_t v8 = sub_100079A40(v7, (uint64_t)v12);
  sub_10000AC00(&__p, "D");
  uint64_t v9 = sub_100079AD0(v8, &__p);
  sub_10007A86C(v9, &v18);
  sub_10004E9A4(v6, &v18);
  sub_10000F9EC(&v19);
  __p.__r_.__value_.__r.__words[0] = (std::string::size_type)v12;
  sub_100006F6C((void ***)&__p);
  sub_10004BF94(v17);
  sub_10004BED0(v16);
  sub_10004BEF8(v15);
  return sub_100006E7C(v14);
}

void sub_100047478( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char *__p, uint64_t a17, int a18, __int16 a19, char a20, char a21, char a22, uint64_t a23, uint64_t a24, uint64_t a25)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  std::string __p = &a22;
  sub_100006F6C((void ***)&__p);
  sub_1000454AC(&a25);
  _Unwind_Resume(a1);
}

void sub_1000474D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7 = *(void *)(a1 + 160) + 72792LL;
  LODWORD(v15[0]) = 1024;
  if (sub_100007684(v7, (unsigned int *)v15))
  {
    uint64_t v8 = *(void *)(a1 + 160);
    sub_1000798B4((uint64_t)v15, v8);
    uint64_t v9 = sub_1000798B8((uint64_t)v15, a5);
    sub_100034C60("CiiUUd", v14, 0x80u);
    uint64_t v10 = sub_100079A40(v9, (uint64_t)v14);
    sub_10000AC00(&__p, "D");
    uint64_t v11 = sub_100079AD0(v10, &__p);
    sub_10007A86C(v11, &v20);
    sub_10004E9A4(v8, &v20);
    sub_10000F9EC(&v21);
    __p.__r_.__value_.__r.__words[0] = (std::string::size_type)v14;
    sub_100006F6C((void ***)&__p);
    sub_10004BF94(v19);
    sub_10004BED0(v18);
    sub_10004BEF8(v17);
    sub_100006E7C(&v15[1]);
  }

  else
  {
    sub_10000AC00(v15, "Commissioner feature is not enabled on NCP");
    uint64_t v12 = (char *)operator new(0x20uLL);
    *(void *)uint64_t v12 = &off_1002AE030;
    *(_OWORD *)(v12 + 8) = *(_OWORD *)v15;
    *((void *)v12 + 3) = v16;
    v15[0] = 0LL;
    v15[1] = 0LL;
    uint64_t v16 = 0LL;
    v14[0] = (uint64_t)v12;
    sub_10003446C(a5);
    if (v14[0]) {
      (*(void (**)(uint64_t))(*(void *)v14[0] + 8LL))(v14[0]);
    }
    if (SHIBYTE(v16) < 0) {
      operator delete(v15[0]);
    }
  }

void sub_100047690( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20, char a21, uint64_t a22, uint64_t a23, uint64_t a24, void *__p, uint64_t a26, int a27, __int16 a28, char a29, char a30)
{
  if (a22) {
    (*(void (**)(uint64_t))(*(void *)a22 + 8LL))(a22);
  }
  if (a30 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *sub_100047720(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v5)
  {
    uint64_t v6 = v5;
    if (sub_10015A058(5) && os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)__n128 buf = 67109120;
      int v10 = a3;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_INFO,  "PermitJoin: Timeout interval of %d seconds expired",  buf,  8u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  v8[0] = (char *)off_1002AED78 + 1;
  (*(void (**)(uint64_t, void, uint64_t, void, void, void *))(*(void *)a1 + 352LL))( a1,  0LL,  255LL,  0LL,  0LL,  v8);
  return sub_1000075F0(v8);
}

void sub_100047840(_Unwind_Exception *exception_object)
{
}

void sub_10004785C(uint64_t a1, int a2, int a3, unsigned int a4, uint64_t a5, uint64_t *a6)
{
  uint64_t v11 = (uint64_t *)(a1 + 160);
  sub_1000798B4((uint64_t)v26, *(void *)(a1 + 160));
  uint64_t v12 = *v11;
  if (!*(_BYTE *)(*v11 + 1376))
  {
    int v15 = 3;
LABEL_11:
    unsigned int v17 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v17)
    {
      if (sub_10015A058(3))
      {
        if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
          sub_100202E34(v15, v17);
        }
      }
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }

    sub_100006FF8(a6);
    goto LABEL_18;
  }

  *(_DWORD *)__n128 buf = 514;
  if (sub_100007684(v12 + 72792, (unsigned int *)buf))
  {
    uint64_t v13 = *(void *)(a1 + 160);
    BOOL v14 = *(_BYTE *)(v13 + 72816) != 0;
    if (a4) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }

  BOOL v14 = 0;
  uint64_t v13 = *(void *)(a1 + 160);
  if (!a4) {
LABEL_4:
  }
    a4 = bswap32(*(unsigned __int16 *)(v13 + 1388)) >> 16;
LABEL_5:
  int v15 = sub_1001131C8(v13, a2, a3, a4);
  if (v15)
  {
    uint64_t v16 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v16)
    {
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }

    goto LABEL_11;
  }

  sub_10007993C((uint64_t)v26, a6);
  if (a2 < 1)
  {
    sub_100034C60("Cii", (uint64_t *)buf, 0x80u);
    sub_100079A40((uint64_t)v26, (uint64_t)buf);
    uint64_t v31 = buf;
    sub_100006F6C((void ***)&v31);
    uint64_t v51 = 0LL;
    sub_100142D88((void *)(a1 + 168));
LABEL_27:
    if (v14)
    {
      sub_100034C60("CiiE", (uint64_t *)buf, 0x80u);
      sub_100079A40((uint64_t)v26, (uint64_t)buf);
      uint64_t v31 = buf;
      sub_100006F6C((void ***)&v31);
    }

    uint64_t v19 = *(void *)(a1 + 160);
    sub_10007A86C((uint64_t)v26, (uint64_t *)buf);
    sub_10004E9A4(v19, (uint64_t *)buf);
    sub_10000F9EC((uint64_t *)&v33);
    if (a2 < 1)
    {
      uint64_t v24 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (!v24)
      {
        if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          goto LABEL_18;
        }
        goto LABEL_49;
      }

      *(_WORD *)__n128 buf = 0;
      uint64_t v21 = "PermitJoin: Becoming non-joinable";
      uint64_t v22 = v24;
      uint32_t v23 = 2;
    }

    else
    {
      if (v14)
      {
        uint64_t v20 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v20)
        {
          *(_DWORD *)__n128 buf = 67111680;
          *(_DWORD *)&uint8_t buf[4] = a2;
          LOWORD(v33) = 1024;
          *(_DWORD *)((char *)&v33 + 2) = a3;
          HIWORD(v33) = 1024;
          unsigned int v34 = __rev16(a4);
          __int16 v35 = 1024;
          int v36 = v51;
          __int16 v37 = 1024;
          int v38 = BYTE1(v51);
          __int16 v39 = 1024;
          int v40 = BYTE2(v51);
          __int16 v41 = 1024;
          int v42 = BYTE3(v51);
          __int16 v43 = 1024;
          int v44 = BYTE4(v51);
          __int16 v45 = 1024;
          int v46 = BYTE5(v51);
          __int16 v47 = 1024;
          int v48 = BYTE6(v51);
          __int16 v49 = 1024;
          int v50 = HIBYTE(v51);
          uint64_t v21 = "PermitJoin: seconds=%d type=%d port=%d, steering_data_addr=%02X%02X%02X%02X%02X%02X%02X%02X";
          uint64_t v22 = v20;
          uint32_t v23 = 68;
          goto LABEL_43;
        }

        if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          goto LABEL_18;
        }
LABEL_49:
        sub_1001FB53C();
        goto LABEL_18;
      }

      uint64_t v25 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (!v25)
      {
        if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          goto LABEL_18;
        }
        goto LABEL_49;
      }

      *(_DWORD *)__n128 buf = 67109632;
      *(_DWORD *)&uint8_t buf[4] = a2;
      LOWORD(v33) = 1024;
      *(_DWORD *)((char *)&v33 + 2) = a3;
      HIWORD(v33) = 1024;
      unsigned int v34 = __rev16(a4);
      uint64_t v21 = "PermitJoin: seconds=%d type=%d port=%d";
      uint64_t v22 = v25;
      uint32_t v23 = 20;
    }

void sub_100047E14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  *(void *)(v6 - 168) = v5;
  sub_100006F6C((void ***)(v6 - 168));
  sub_1000454AC((uint64_t *)va);
  _Unwind_Resume(a1);
}

void *sub_100047E98(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  unsigned int v6 = *(_DWORD *)(*(void *)(a1 + 160) + 73748LL);
  sub_10000AC00(&v32, "Scan:ChannelMask");
  uint64_t v7 = sub_100037208(a2, (const void **)&v32);
  uint64_t v8 = v7;
  if (v34 < 0)
  {
    operator delete(v32);
    if (!v8) {
      goto LABEL_7;
    }
  }

  else if (!v7)
  {
    goto LABEL_7;
  }

  sub_10000AC00(&v32, "Scan:ChannelMask");
  uint64_t v9 = (uint64_t *)sub_1000482CC(a2, (const void **)&v32);
  unsigned int v6 = sub_1001472F4(v9);
  if (v34 < 0) {
    operator delete(v32);
  }
LABEL_7:
  sub_10000AC00(&v32, "Scan:Discover");
  uint64_t v10 = sub_100037208(a2, (const void **)&v32);
  uint64_t v11 = v10;
  if ((v34 & 0x80000000) == 0)
  {
    if (v10) {
      goto LABEL_9;
    }
LABEL_13:
    int v13 = 0;
    LOBYTE(v14) = 0;
    __int16 v15 = -1;
    goto LABEL_30;
  }

  operator delete(v32);
  if (!v11) {
    goto LABEL_13;
  }
LABEL_9:
  sub_10000AC00(&v32, "Scan:JoinerFlag");
  uint64_t v12 = sub_100037208(a2, (const void **)&v32);
  uint64_t v11 = v12;
  if (v34 < 0)
  {
    operator delete(v32);
    if (!v11) {
      goto LABEL_17;
    }
  }

  else if (!v12)
  {
    goto LABEL_17;
  }

  sub_10000AC00(&v32, "Scan:JoinerFlag");
  uint64_t v16 = (uint64_t *)sub_1000482CC(a2, (const void **)&v32);
  LOBYTE(v11) = sub_1001478B8(v16);
  if (v34 < 0) {
    operator delete(v32);
  }
LABEL_17:
  sub_10000AC00(&v32, "Scan:EnableFiltering");
  uint64_t v17 = sub_100037208(a2, (const void **)&v32);
  uint64_t v14 = v17;
  if (v34 < 0)
  {
    operator delete(v32);
    if (!v14) {
      goto LABEL_23;
    }
  }

  else if (!v17)
  {
    goto LABEL_23;
  }

  sub_10000AC00(&v32, "Scan:EnableFiltering");
  uint64_t v18 = (uint64_t *)sub_1000482CC(a2, (const void **)&v32);
  LOBYTE(v14) = sub_1001478B8(v18);
  if (v34 < 0) {
    operator delete(v32);
  }
LABEL_23:
  sub_10000AC00(&v32, "Scan:PANID");
  uint64_t v19 = sub_100037208(a2, (const void **)&v32);
  uint64_t v20 = v19;
  if (v34 < 0)
  {
    operator delete(v32);
    if (v20)
    {
LABEL_25:
      sub_10000AC00(&v32, "Scan:PANID");
      uint64_t v21 = (uint64_t *)sub_1000482CC(a2, (const void **)&v32);
      __int16 v15 = sub_1001472F4(v21);
      if (v34 < 0) {
        operator delete(v32);
      }
      goto LABEL_29;
    }
  }

  else if (v19)
  {
    goto LABEL_25;
  }

  __int16 v15 = -1;
LABEL_29:
  int v13 = 2;
LABEL_30:
  sub_10000AC00(&v32, "Scan:Period");
  uint64_t v22 = sub_100037208(a2, (const void **)&v32);
  uint64_t v23 = v22;
  if (v34 < 0)
  {
    operator delete(v32);
    if (!v23) {
      goto LABEL_36;
    }
  }

  else if (!v22)
  {
    goto LABEL_36;
  }

  sub_10000AC00(&v32, "Scan:Period");
  uint64_t v24 = (uint64_t *)sub_1000482CC(a2, (const void **)&v32);
  LODWORD(v23) = sub_1001472F4(v24);
  if (v34 < 0) {
    operator delete(v32);
  }
LABEL_36:
  uint64_t v25 = *(void *)(a1 + 160);
  uint64_t v26 = operator new(0xB8uLL);
  v29[0] = 0LL;
  sub_100007640((uint64_t)v29, a3);
  sub_100045084(v29, v30);
  sub_10004BFE4(v31, v30);
  else {
    __int16 v27 = 200;
  }
  sub_100089DE8((uint64_t)v26, v25, (uint64_t *)v31, v6, v27, v13, v11, v14, v15);
  sub_10004D140((uint64_t *)&v32, (uint64_t)v26);
  sub_10004E9A4(v25, (uint64_t *)&v32);
  sub_10000F9EC(&v33);
  sub_100006E7C(v31);
  sub_1000075F0(v30);
  return sub_1000075F0(v29);
}

void sub_100048228( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20)
{
}

uint64_t sub_1000482CC(uint64_t a1, const void **a2)
{
  uint64_t v2 = *sub_10000AE50(a1, &v4, a2);
  if (!v2) {
    sub_10004D0CC("map::at:  key not found");
  }
  return v2 + 56;
}

uint64_t sub_100048308(uint64_t a1, void *a2)
{
  return sub_100006FF8(a2);
}

void *sub_100048314(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  unsigned int v6 = *(_DWORD *)(*(void *)(a1 + 160) + 73748LL);
  sub_10000AC00(&v16, "NCP:ChannelMask");
  uint64_t v7 = sub_100037208(a2, (const void **)&v16);
  uint64_t v8 = v7;
  if (v18 < 0)
  {
    operator delete(v16);
    if (!v8) {
      goto LABEL_7;
    }
  }

  else if (!v7)
  {
    goto LABEL_7;
  }

  sub_10000AC00(&v16, "NCP:ChannelMask");
  uint64_t v9 = (uint64_t *)sub_1000482CC(a2, (const void **)&v16);
  unsigned int v6 = sub_1001472F4(v9);
  if (v18 < 0) {
    operator delete(v16);
  }
LABEL_7:
  uint64_t v10 = *(void *)(a1 + 160);
  uint64_t v11 = operator new(0xB8uLL);
  v13[0] = 0LL;
  sub_100007640((uint64_t)v13, a3);
  sub_100045084(v13, v14);
  sub_10004BFE4(v15, v14);
  sub_100089DE8((uint64_t)v11, v10, (uint64_t *)v15, v6, 200, 1, 0, 0, 0xFFFF);
  sub_10004D140((uint64_t *)&v16, (uint64_t)v11);
  sub_10004E9A4(v10, (uint64_t *)&v16);
  sub_10000F9EC(&v17);
  sub_100006E7C(v15);
  sub_1000075F0(v14);
  return sub_1000075F0(v13);
}

void sub_10004847C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  va_copy(va2, va1);
  uint64_t v10 = va_arg(va2, void);
  uint64_t v12 = va_arg(va2, void);
  uint64_t v13 = va_arg(va2, void);
  uint64_t v14 = va_arg(va2, void);
  uint64_t v15 = va_arg(va2, void);
  sub_10000F9EC((uint64_t *)(v3 + 8));
  sub_100006E7C((uint64_t *)va2);
  sub_1000075F0((uint64_t *)va1);
  sub_1000075F0((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000484FC(uint64_t a1, void *a2)
{
  return sub_100006FF8(a2);
}

std::string *sub_100048508@<X0>(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v3 = (const std::string *)(*(uint64_t (**)(void))(**(void **)(a1 + 160) + 16LL))(*(void *)(a1 + 160));
  return std::string::basic_string(a2, v3);
}

void *sub_10004853C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = *(void *)(a1 + 160);
  sub_1000798B4((uint64_t)v11, v4);
  uint64_t v5 = sub_1000798B8((uint64_t)v11, a3);
  sub_100034C60("CiiU", v10, 0x80u);
  uint64_t v6 = sub_100079A40(v5, (uint64_t)v10);
  sub_10000AC00(&__p, "U");
  uint64_t v7 = sub_100079AD0(v6, &__p);
  sub_10007A86C(v7, &v16);
  sub_10004E9A4(v4, &v16);
  sub_10000F9EC(&v17);
  __p.__r_.__value_.__r.__words[0] = (std::string::size_type)v10;
  sub_100006F6C((void ***)&__p);
  sub_10004BF94(v15);
  sub_10004BED0(v14);
  sub_10004BEF8(v13);
  return sub_100006E7C(v12);
}

void sub_100048650( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, char a20, uint64_t a21, uint64_t a22, uint64_t a23)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  std::string __p = &a20;
  sub_100006F6C((void ***)&__p);
  sub_1000454AC(&a23);
  _Unwind_Resume(a1);
}

void *sub_1000486AC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_10004853C(a1 - 152, a2, a3);
}

void *sub_1000486B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7 = *(void *)(a1 + 160) + 72792LL;
  unsigned int v13 = 1031;
  if (!sub_100007684(v7, &v13)) {
    return (void *)sub_100006FF8(a5);
  }
  sub_10004D280(*(void *)(a1 + 160) + 73808LL);
  uint64_t v8 = *(void *)(a1 + 160);
  sub_1000798B4((uint64_t)&v13, v8);
  uint64_t v9 = sub_10007993C((uint64_t)&v13, a5);
  sub_100034C60("Cii6CC", v12, 0x80u);
  uint64_t v10 = sub_100079A40(v9, (uint64_t)v12);
  sub_10007A86C(v10, &v18);
  sub_10004E9A4(v8, &v18);
  sub_10000F9EC(&v19);
  uint64_t v20 = (void **)v12;
  sub_100006F6C(&v20);
  sub_10004BF94(v17);
  sub_10004BED0(v16);
  sub_10004BEF8(v15);
  return sub_100006E7C(v14);
}

void sub_1000487E8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  uint64_t v11 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  sub_10000F9EC((uint64_t *)(v8 + 8));
  *(void *)(v9 - 56) = va;
  sub_100006F6C((void ***)(v9 - 56));
  sub_1000454AC((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void *sub_100048828(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7 = *(void *)(a1 + 160) + 72792LL;
  unsigned int v13 = 1032;
  if (!sub_100007684(v7, &v13)) {
    return (void *)sub_100006FF8(a5);
  }
  uint64_t v8 = *(void *)(a1 + 160);
  sub_1000798B4((uint64_t)&v13, v8);
  uint64_t v9 = sub_10007993C((uint64_t)&v13, a5);
  sub_100034C60("CiiSLC", v12, 0x80u);
  uint64_t v10 = sub_100079A40(v9, (uint64_t)v12);
  sub_10007A86C(v10, &v18);
  sub_10004E9A4(v8, &v18);
  sub_10000F9EC(&v19);
  uint64_t v20 = (void **)v12;
  sub_100006F6C(&v20);
  sub_10004BF94(v17);
  sub_10004BED0(v16);
  sub_10004BEF8(v15);
  return sub_100006E7C(v14);
}

void sub_10004894C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  uint64_t v11 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  sub_10000F9EC((uint64_t *)(v8 + 8));
  *(void *)(v9 - 56) = va;
  sub_100006F6C((void ***)(v9 - 56));
  sub_1000454AC((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void *sub_10004898C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7 = *(void *)(a1 + 160) + 72792LL;
  unsigned int v13 = 1031;
  if (!sub_100007684(v7, &v13)) {
    return (void *)sub_100006FF8(a5);
  }
  uint64_t v8 = *(void *)(a1 + 160);
  sub_1000798B4((uint64_t)&v13, v8);
  uint64_t v9 = sub_10007993C((uint64_t)&v13, a5);
  sub_100034C60("Cii6CC", v12, 0x80u);
  uint64_t v10 = sub_100079A40(v9, (uint64_t)v12);
  sub_10007A86C(v10, &v18);
  sub_10004E9A4(v8, &v18);
  sub_10000F9EC(&v19);
  uint64_t v20 = (void **)v12;
  sub_100006F6C(&v20);
  sub_10004BF94(v17);
  sub_10004BED0(v16);
  sub_10004BEF8(v15);
  return sub_100006E7C(v14);
}

void sub_100048AB0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  uint64_t v11 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  sub_10000F9EC((uint64_t *)(v8 + 8));
  *(void *)(v9 - 56) = va;
  sub_100006F6C((void ***)(v9 - 56));
  sub_1000454AC((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void *sub_100048AF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6)
{
  uint64_t v8 = *(void *)(a1 + 160) + 72792LL;
  unsigned int v14 = 1031;
  if (!sub_100007684(v8, &v14)) {
    return (void *)sub_100006FF8(a6);
  }
  sub_10004D280(*(void *)(a1 + 160) + 73832LL);
  uint64_t v9 = *(void *)(a1 + 160);
  sub_1000798B4((uint64_t)&v14, v9);
  uint64_t v10 = sub_10007993C((uint64_t)&v14, a6);
  sub_100034C60("Cii6CCC", v13, 0x80u);
  uint64_t v11 = sub_100079A40(v10, (uint64_t)v13);
  sub_10007A86C(v11, &v19);
  sub_10004E9A4(v9, &v19);
  sub_10000F9EC(&v20);
  uint64_t v21 = (void **)v13;
  sub_100006F6C(&v21);
  sub_10004BF94(v18);
  sub_10004BED0(v17);
  sub_10004BEF8(v16);
  return sub_100006E7C(v15);
}

void sub_100048C38( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  uint64_t v11 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  sub_10000F9EC((uint64_t *)(v8 + 8));
  *(void *)(v9 - 72) = va;
  sub_100006F6C((void ***)(v9 - 72));
  sub_1000454AC((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void *sub_100048C78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7 = *(void *)(a1 + 160) + 72792LL;
  unsigned int v13 = 1031;
  if (!sub_100007684(v7, &v13)) {
    return (void *)sub_100006FF8(a5);
  }
  sub_10004D280(*(void *)(a1 + 160) + 73832LL);
  uint64_t v8 = *(void *)(a1 + 160);
  sub_1000798B4((uint64_t)&v13, v8);
  uint64_t v9 = sub_10007993C((uint64_t)&v13, a5);
  sub_100034C60("Cii6CC", v12, 0x80u);
  uint64_t v10 = sub_100079A40(v9, (uint64_t)v12);
  sub_10007A86C(v10, &v18);
  sub_10004E9A4(v8, &v18);
  sub_10000F9EC(&v19);
  uint64_t v20 = (void **)v12;
  sub_100006F6C(&v20);
  sub_10004BF94(v17);
  sub_10004BED0(v16);
  sub_10004BEF8(v15);
  return sub_100006E7C(v14);
}

void sub_100048DAC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  uint64_t v11 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  sub_10000F9EC((uint64_t *)(v8 + 8));
  *(void *)(v9 - 56) = va;
  sub_100006F6C((void ***)(v9 - 56));
  sub_1000454AC((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_100048DEC(uint64_t a1, uint64_t *a2, char a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v9 = *(void *)(a1 + 160) + 72792LL;
  LODWORD(v15) = 54;
  if (sub_100007684(v9, (unsigned int *)&v15))
  {
    sub_10004D280(*(void *)(a1 + 160) + 73880LL);
    memset(v23, 0, sizeof(v23));
    for (uint64_t i = *a2; i != a2[1]; i += 16LL)
    {
      sub_100034C60("6", (uint64_t *)&v15, i);
      sub_1000350D0((uint64_t)v23, (char **)&v15);
      v22[0] = (void **)&v15;
      sub_100006F6C(v22);
    }

    memset(v22, 0, sizeof(v22));
    if ((a3 & 1) != 0)
    {
      sub_100034C60("t(CL)", (uint64_t *)&v15, 0);
      sub_1000350D0((uint64_t)v22, (char **)&v15);
      v14[0] = (void **)&v15;
      sub_100006F6C(v14);
    }

    uint64_t v11 = *(void *)(a1 + 160);
    sub_1000798B4((uint64_t)&v15, v11);
    uint64_t v12 = sub_10007993C((uint64_t)&v15, a5);
    sub_100034C60("Ciit(D)D", (uint64_t *)v14, 0x80u);
    uint64_t v13 = sub_100079A40(v12, (uint64_t)v14);
    sub_10007A86C(v13, &v20);
    sub_10004E9A4(v11, &v20);
    sub_10000F9EC(&v21);
    uint64_t v24 = v14;
    sub_100006F6C((void ***)&v24);
    sub_10004BF94(v19);
    sub_10004BED0(v18);
    sub_10004BEF8(v17);
    sub_100006E7C(v16);
    uint64_t v15 = v22;
    sub_100006F6C((void ***)&v15);
    uint64_t v15 = (void ***)v23;
    sub_100006F6C((void ***)&v15);
  }

  else
  {
    sub_100006FF8(a5);
  }

void sub_100048FF8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void **a16, uint64_t a17, uint64_t a18, void **a19)
{
  a19 = (void **)(v19 - 136);
  sub_100006F6C(&a19);
  a19 = (void **)(v19 - 112);
  sub_100006F6C(&a19);
  _Unwind_Resume(a1);
}

uint64_t sub_100049094(uint64_t a1)
{
  return sub_1000D5144(*(void *)(a1 + 160));
}

BOOL sub_10004909C(uint64_t a1)
{
  uint64_t v2 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v2)
  {
    uint64_t v3 = v2;
    if (sub_10015A058(6) && os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "Clear the Active/Pending DataSets", v5, 2u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  sub_10008C394((_BYTE *)(*(void *)(a1 + 160) + 73104LL));
  sub_1001462A0(0x1518u);
  sub_10008C394((_BYTE *)(*(void *)(a1 + 160) + 73376LL));
  return sub_1001462A0(0x1519u);
}

uint64_t sub_100049178(uint64_t a1)
{
  return *(void *)(a1 + 160);
}

uint64_t sub_100049180(uint64_t a1, int a2, void *a3)
{
  if ((sub_1000B6338(*(void *)(a1 + 160) + 1608LL, a2) & 0x80000000) != 0)
  {
    uint64_t v4 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v4)
    {
      uint64_t v5 = v4;
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }
  }

  return sub_100006FF8(a3);
}

uint64_t sub_10004922C(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 160) + 1608LL;
  uint64_t v4 = (uint64_t *)sub_1000B6330(v3);
  sub_1000B6638(v3, v4);
  return sub_100006FF8(a2);
}

void *sub_10004926C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = *(void *)(a1 + 160);
  v7[0] = 0LL;
  __n128 v5 = sub_100007640((uint64_t)v7, a3);
  (*(void (**)(uint64_t, uint64_t, void *, __n128))(*(void *)v4 + 328LL))(v4, a2, v7, v5);
  return sub_100006E7C(v7);
}

void sub_1000492C4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *sub_1000492D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = *(void *)(a1 + 160);
  v9[0] = 0LL;
  __n128 v7 = sub_100007640((uint64_t)v9, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t, void *, __n128))(*(void *)v6 + 336LL))(v6, a2, a3, v9, v7);
  return sub_1000075F0(v9);
}

void sub_100049340( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *sub_100049354(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = *(void *)(a1 + 160);
  v9[0] = 0LL;
  __n128 v7 = sub_100007640((uint64_t)v9, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t, void *, __n128))(*(void *)v6 + 344LL))(v6, a2, a3, v9, v7);
  return sub_1000075F0(v9);
}

void sub_1000493BC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *sub_1000493D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = *(void *)(a1 + 160);
  v9[0] = 0LL;
  __n128 v7 = sub_100007640((uint64_t)v9, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t, void *, __n128))(*(void *)v6 + 352LL))(v6, a2, a3, v9, v7);
  return sub_1000075F0(v9);
}

void sub_100049438( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_10004944C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8 = *(void *)(a1 + 160) + 72792LL;
  LODWORD(__p[0]) = 7;
  if (sub_100007684(v8, (unsigned int *)__p))
  {
    uint64_t v9 = *(void *)(a1 + 160);
    uint64_t v10 = operator new(0x90uLL);
    v16[0] = 0LL;
    __n128 v11 = sub_100007640((uint64_t)v16, a4);
    sub_1000A8E80(v10, v9, v16, a2, a3, v11);
    sub_10004D2B4((uint64_t *)__p, (uint64_t)v10);
    sub_10004E9A4(v9, (uint64_t *)__p);
    sub_10000F9EC((uint64_t *)&__p[1]);
    sub_100006E7C(v16);
  }

  else
  {
    sub_10000AC00(__p, "Feature not supported by NCP. No peeking!");
    uint64_t v12 = (char *)operator new(0x20uLL);
    *(void *)uint64_t v12 = &off_1002AE030;
    *(_OWORD *)(v12 + 8) = *(_OWORD *)__p;
    *((void *)v12 + 3) = v14;
    __p[0] = 0LL;
    __p[1] = 0LL;
    uint64_t v14 = 0LL;
    uint64_t v15 = v12;
    sub_10003446C(a4);
    if (v15) {
      (*(void (**)(char *))(*(void *)v15 + 8LL))(v15);
    }
    if (SHIBYTE(v14) < 0) {
      operator delete(__p[0]);
    }
  }

void sub_100049584( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, char a16)
{
  if (a15) {
    (*(void (**)(uint64_t))(*(void *)a15 + 8LL))(a15);
  }
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1000495F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = *(void *)(a1 + 160) + 72792LL;
  unsigned int v12 = 7;
  if (!sub_100007684(v6, &v12)) {
    return (void *)sub_100006FF8(a4);
  }
  uint64_t v7 = *(void *)(a1 + 160);
  sub_1000798B4((uint64_t)&v12, v7);
  uint64_t v8 = sub_10007993C((uint64_t)&v12, a4);
  sub_100034C60("CiLSD", v11, 0x80u);
  uint64_t v9 = sub_100079A40(v8, (uint64_t)v11);
  sub_10007A86C(v9, &v17);
  sub_10004E9A4(v7, &v17);
  sub_10000F9EC(&v18);
  uint64_t v19 = (void **)v11;
  sub_100006F6C(&v19);
  sub_10004BF94(v16);
  sub_10004BED0(v15);
  sub_10004BEF8(v14);
  return sub_100006E7C(v13);
}

void sub_100049718( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  uint64_t v11 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  sub_10000F9EC((uint64_t *)(v8 + 8));
  *(void *)(v9 - 56) = va;
  sub_100006F6C((void ***)(v9 - 56));
  sub_1000454AC((uint64_t *)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_100049758(uint64_t a1)
{
  return sub_100070BE0(*(void *)(a1 + 160));
}

void *sub_100049760(uint64_t a1)
{
  return sub_100065AA4(*(void *)(a1 + 160));
}

uint64_t sub_100049768(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v4)
  {
    __n128 v5 = v4;
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  uint64_t result = strcmp((const char *)a2, "true");
  *(_BYTE *)(*(void *)(a1 + 160) + 1616LL) = (_DWORD)result != 0;
  return result;
}

void sub_100049820(uint64_t a1, int a2)
{
  uint64_t v4 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v4)
  {
    __n128 v5 = v4;
    if (sub_10015A058(6) && os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)__n128 buf = 67109120;
      *(_DWORD *)&uint8_t buf[4] = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_INFO,  "<<<<<<<< KeyChainTest: val[%d] >>>>>>>>>",  buf,  8u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  switch(a2)
  {
    case 1:
      sub_100146808(5400LL, byte_1002C99E8);
      sub_100145208((uint64_t)byte_1002C99E8);
      break;
    case 2:
      sub_100146808(5401LL, byte_1002C9AF8);
      sub_100145208((uint64_t)byte_1002C9AF8);
      break;
    case 3:
      sub_100145208((uint64_t)byte_1002C99E8);
      *(void *)__n128 buf = 0LL;
      uint64_t v10 = 0LL;
      uint64_t v11 = 0LL;
      sub_10008DD9C((uint64_t)byte_1002C99E8, buf, 1);
      if (*(void *)buf == v10) {
        uint64_t v6 = 0LL;
      }
      else {
        uint64_t v6 = *(const UInt8 **)buf;
      }
      sub_100145D8C(5400LL, v6, v10 - *(_DWORD *)buf, 0LL);
      goto LABEL_17;
    case 4:
      sub_100145208((uint64_t)byte_1002C9AF8);
      *(void *)__n128 buf = 0LL;
      uint64_t v10 = 0LL;
      uint64_t v11 = 0LL;
      sub_10008DD9C((uint64_t)byte_1002C9AF8, buf, 1);
      if (*(void *)buf == v10) {
        uint64_t v7 = 0LL;
      }
      else {
        uint64_t v7 = *(const UInt8 **)buf;
      }
      sub_100145D8C(5401LL, v7, v10 - *(_DWORD *)buf, 0LL);
LABEL_17:
      uint64_t v8 = buf;
      sub_100006F6C((void ***)&v8);
      break;
    case 5:
      sub_10008C394((_BYTE *)(*(void *)(a1 + 160) + 73104LL));
      sub_1001462A0(0x1518u);
      break;
    case 6:
      sub_10008C394((_BYTE *)(*(void *)(a1 + 160) + 73376LL));
      sub_1001462A0(0x1519u);
      break;
    default:
      return;
  }

void sub_100049A4C(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t *sub_100049A70(uint64_t *a1)
{
  *a1 = (uint64_t)off_1002AEEF0;
  a1[19] = (uint64_t)off_1002AF0B8;
  sub_100142BC8(a1 + 21);
  return sub_1000FC720(a1);
}

void sub_100049AAC(uint64_t *a1)
{
  *a1 = (uint64_t)off_1002AEEF0;
  a1[19] = (uint64_t)off_1002AF0B8;
  sub_100142BC8(a1 + 21);
  uint64_t v2 = sub_1000FC720(a1);
  operator delete(v2);
}

uint64_t *sub_100049AEC(void *a1)
{
  *(a1 - 19) = off_1002AEEF0;
  uint64_t v1 = a1 - 19;
  *a1 = off_1002AF0B8;
  sub_100142BC8(a1 + 2);
  return sub_1000FC720(v1);
}

void sub_100049B24(uint64_t a1)
{
}

void *sub_100049B2C(void *a1)
{
  *a1 = off_1002AF628;
  sub_10000F9EC(a1 + 2);
  return a1;
}

void *sub_100049B5C(void *a1)
{
  *a1 = off_1002AF498;
  sub_10000F9EC(a1 + 2);
  return a1;
}

void *sub_100049B8C(void *a1)
{
  *a1 = off_1002AF3C8;
  sub_10000F9EC(a1 + 2);
  return a1;
}

void *sub_100049BBC(void *a1)
{
  *a1 = off_1002AF2F8;
  sub_10000F9EC(a1 + 2);
  return a1;
}

void *sub_100049BEC(void *a1)
{
  *a1 = off_1002AF118;
  sub_10000F9EC(a1 + 2);
  return a1;
}

void *sub_100049C1C(void *a1)
{
  *a1 = off_1002AF118;
  uint64_t v2 = (uint64_t *)operator new(0x28uLL);
  sub_100049CE4(v2);
  sub_10004A10C(a1 + 1, (uint64_t)v2);
  return a1;
}

void sub_100049C7C(_Unwind_Exception *a1)
{
}

void sub_100049C90(uint64_t *a1)
{
  *a1 = (uint64_t)off_1002AF118;
  sub_10000F9EC(a1 + 2);
  operator delete(a1);
}

uint64_t sub_100049CC0@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)(result + 16);
  *a2 = *(void *)(result + 8);
  a2[1] = v2;
  if (v2)
  {
    uint64_t v3 = (unsigned int *)(v2 + 8);
    do
      unsigned int v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }

  return result;
}

uint64_t *sub_100049CE4(uint64_t *a1)
{
  uint64_t v2 = (uint64_t *)operator new(0x20uLL);
  v5[0] = (uint64_t)v5;
  v5[1] = (uint64_t)v5;
  v7[0] = 0LL;
  v7[1] = 0LL;
  int v5[2] = 0LL;
  uint64_t v6 = v7;
  sub_100049E10(v2, (uint64_t)v5);
  sub_10002C57C(a1, (uint64_t)v2);
  sub_10000D0D4((uint64_t)&v6);
  sub_10002C8E8(v5);
  a1[2] = *(void *)*a1;
  uint64_t v3 = (pthread_mutex_t *)operator new(0x40uLL);
  pthread_mutex_init(v3, 0LL);
  sub_100049FA8(a1 + 3, (uint64_t)v3);
  return a1;
}

void sub_100049D8C(_Unwind_Exception *a1)
{
  uint64_t v3 = v2;
  operator delete(v3);
  sub_10000F9EC((uint64_t *)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_100049DE0(uint64_t *a1)
{
  return a1;
}

uint64_t *sub_100049E10(uint64_t *a1, uint64_t a2)
{
  unsigned int v4 = operator new(0x40uLL);
  sub_10002C73C((uint64_t)v4, a2);
  sub_10002C990(a1, (uint64_t)v4);
  __n128 v5 = operator new(1uLL);
  sub_100049E98(a1 + 2, (uint64_t)v5);
  return a1;
}

void sub_100049E70(_Unwind_Exception *a1)
{
  uint64_t v2 = v1;
  operator delete(v2);
  _Unwind_Resume(a1);
}

uint64_t *sub_100049E98(uint64_t *a1, uint64_t a2)
{
  *a1 = a2;
  a1[1] = 0LL;
  sub_100049F00(&v5, a2);
  uint64_t v3 = a1[1];
  a1[1] = v5;
  uint64_t v5 = v3;
  sub_10000F9EC(&v5);
  return a1;
}

void sub_100049EEC(_Unwind_Exception *a1)
{
}

void *sub_100049F00(void *a1, uint64_t a2)
{
  *a1 = 0LL;
  unsigned int v4 = operator new(0x18uLL);
  v4[1] = 0x100000001LL;
  *unsigned int v4 = &off_1002AF1D8;
  _OWORD v4[2] = a2;
  *a1 = v4;
  return a1;
}

void sub_100049F4C(void *a1)
{
  if (v1) {
    operator delete(v1);
  }
  __cxa_rethrow();
}

void sub_100049F64(_Unwind_Exception *a1)
{
}

void sub_100049F80(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 16);
  if (v1) {
    operator delete(v1);
  }
}

uint64_t sub_100049F90()
{
  return 0LL;
}

uint64_t sub_100049F98()
{
  return 0LL;
}

uint64_t sub_100049FA0()
{
  return 0LL;
}

uint64_t *sub_100049FA8(uint64_t *a1, uint64_t a2)
{
  *a1 = a2;
  a1[1] = 0LL;
  sub_10004A010(&v5, a2);
  uint64_t v3 = a1[1];
  a1[1] = v5;
  uint64_t v5 = v3;
  sub_10000F9EC(&v5);
  return a1;
}

void sub_100049FFC(_Unwind_Exception *a1)
{
}

void *sub_10004A010(void *a1, uint64_t a2)
{
  *a1 = 0LL;
  unsigned int v4 = operator new(0x18uLL);
  v4[1] = 0x100000001LL;
  *unsigned int v4 = &off_1002AF238;
  _OWORD v4[2] = a2;
  *a1 = v4;
  return a1;
}

void sub_10004A05C(void *a1)
{
}

void sub_10004A070(_Unwind_Exception *a1)
{
}

void sub_10004A084(pthread_mutex_t *a1)
{
  if (a1)
  {
    uint64_t v1 = sub_10004A0E4(a1);
    operator delete(v1);
  }

void sub_10004A0A8(uint64_t a1)
{
  uint64_t v1 = *(pthread_mutex_t **)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = sub_10004A0E4(v1);
    operator delete(v2);
  }

uint64_t sub_10004A0CC()
{
  return 0LL;
}

uint64_t sub_10004A0D4()
{
  return 0LL;
}

uint64_t sub_10004A0DC()
{
  return 0LL;
}

pthread_mutex_t *sub_10004A0E4(pthread_mutex_t *a1)
{
  return a1;
}

uint64_t *sub_10004A10C(uint64_t *a1, uint64_t a2)
{
  *a1 = a2;
  a1[1] = 0LL;
  sub_10004A174(&v5, a2);
  uint64_t v3 = a1[1];
  a1[1] = v5;
  uint64_t v5 = v3;
  sub_10000F9EC(&v5);
  return a1;
}

void sub_10004A160(_Unwind_Exception *a1)
{
}

void *sub_10004A174(void *a1, uint64_t a2)
{
  *a1 = 0LL;
  unsigned int v4 = operator new(0x18uLL);
  v4[1] = 0x100000001LL;
  *unsigned int v4 = &off_1002AF298;
  _OWORD v4[2] = a2;
  *a1 = v4;
  return a1;
}

void sub_10004A1C0(void *a1)
{
}

void sub_10004A1D4(_Unwind_Exception *a1)
{
}

void sub_10004A1E8(uint64_t *a1)
{
  if (a1)
  {
    sub_10000F9EC(a1 + 4);
    sub_10000F9EC(a1 + 1);
    operator delete(a1);
  }

void sub_10004A228(uint64_t a1)
{
  uint64_t v1 = *(uint64_t **)(a1 + 16);
  if (v1)
  {
    sub_10000F9EC(v1 + 4);
    sub_10000F9EC(v1 + 1);
    operator delete(v1);
  }

uint64_t sub_10004A268()
{
  return 0LL;
}

uint64_t sub_10004A270()
{
  return 0LL;
}

uint64_t sub_10004A278()
{
  return 0LL;
}

void *sub_10004A280(void *a1)
{
  *a1 = off_1002AF2F8;
  uint64_t v2 = (uint64_t *)operator new(0x28uLL);
  sub_10004A348(v2);
  sub_10004A4FC(a1 + 1, (uint64_t)v2);
  return a1;
}

void sub_10004A2E0(_Unwind_Exception *a1)
{
}

void sub_10004A2F4(uint64_t *a1)
{
  *a1 = (uint64_t)off_1002AF2F8;
  sub_10000F9EC(a1 + 2);
  operator delete(a1);
}

uint64_t sub_10004A324@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)(result + 16);
  *a2 = *(void *)(result + 8);
  a2[1] = v2;
  if (v2)
  {
    uint64_t v3 = (unsigned int *)(v2 + 8);
    do
      unsigned int v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }

  return result;
}

uint64_t *sub_10004A348(uint64_t *a1)
{
  uint64_t v2 = (uint64_t *)operator new(0x20uLL);
  v5[0] = (uint64_t)v5;
  v5[1] = (uint64_t)v5;
  v7[0] = 0LL;
  v7[1] = 0LL;
  int v5[2] = 0LL;
  uint64_t v6 = v7;
  sub_10004A474(v2, (uint64_t)v5);
  sub_10002DC14(a1, (uint64_t)v2);
  sub_10000D0D4((uint64_t)&v6);
  sub_10002DF80(v5);
  a1[2] = *(void *)*a1;
  uint64_t v3 = (pthread_mutex_t *)operator new(0x40uLL);
  pthread_mutex_init(v3, 0LL);
  sub_100049FA8(a1 + 3, (uint64_t)v3);
  return a1;
}

void sub_10004A3F0(_Unwind_Exception *a1)
{
  uint64_t v3 = v2;
  operator delete(v3);
  sub_10000F9EC((uint64_t *)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_10004A444(uint64_t *a1)
{
  return a1;
}

uint64_t *sub_10004A474(uint64_t *a1, uint64_t a2)
{
  unsigned int v4 = operator new(0x40uLL);
  sub_10002DDD4((uint64_t)v4, a2);
  sub_10002E028(a1, (uint64_t)v4);
  uint64_t v5 = operator new(1uLL);
  sub_100049E98(a1 + 2, (uint64_t)v5);
  return a1;
}

void sub_10004A4D4(_Unwind_Exception *a1)
{
  uint64_t v2 = v1;
  operator delete(v2);
  _Unwind_Resume(a1);
}

uint64_t *sub_10004A4FC(uint64_t *a1, uint64_t a2)
{
  *a1 = a2;
  a1[1] = 0LL;
  sub_10004A564(&v5, a2);
  uint64_t v3 = a1[1];
  a1[1] = v5;
  uint64_t v5 = v3;
  sub_10000F9EC(&v5);
  return a1;
}

void sub_10004A550(_Unwind_Exception *a1)
{
}

void *sub_10004A564(void *a1, uint64_t a2)
{
  *a1 = 0LL;
  unsigned int v4 = operator new(0x18uLL);
  v4[1] = 0x100000001LL;
  *unsigned int v4 = &off_1002AF368;
  _OWORD v4[2] = a2;
  *a1 = v4;
  return a1;
}

void sub_10004A5B0(void *a1)
{
}

void sub_10004A5C4(_Unwind_Exception *a1)
{
}

void sub_10004A5E0(uint64_t a1)
{
  uint64_t v1 = *(uint64_t **)(a1 + 16);
  if (v1)
  {
    sub_10000F9EC(v1 + 4);
    sub_10000F9EC(v1 + 1);
    operator delete(v1);
  }

uint64_t sub_10004A620()
{
  return 0LL;
}

uint64_t sub_10004A628()
{
  return 0LL;
}

uint64_t sub_10004A630()
{
  return 0LL;
}

void *sub_10004A638(void *a1)
{
  *a1 = off_1002AF3C8;
  uint64_t v2 = (uint64_t *)operator new(0x28uLL);
  sub_10004A700(v2);
  sub_10004A8B4(a1 + 1, (uint64_t)v2);
  return a1;
}

void sub_10004A698(_Unwind_Exception *a1)
{
}

void sub_10004A6AC(uint64_t *a1)
{
  *a1 = (uint64_t)off_1002AF3C8;
  sub_10000F9EC(a1 + 2);
  operator delete(a1);
}

uint64_t sub_10004A6DC@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)(result + 16);
  *a2 = *(void *)(result + 8);
  a2[1] = v2;
  if (v2)
  {
    uint64_t v3 = (unsigned int *)(v2 + 8);
    do
      unsigned int v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }

  return result;
}

uint64_t *sub_10004A700(uint64_t *a1)
{
  uint64_t v2 = (uint64_t *)operator new(0x20uLL);
  v5[0] = (uint64_t)v5;
  v5[1] = (uint64_t)v5;
  v7[0] = 0LL;
  v7[1] = 0LL;
  int v5[2] = 0LL;
  uint64_t v6 = v7;
  sub_10004A82C(v2, (uint64_t)v5);
  sub_10002F164(a1, (uint64_t)v2);
  sub_10000D0D4((uint64_t)&v6);
  sub_10002F4D0(v5);
  a1[2] = *(void *)*a1;
  uint64_t v3 = (pthread_mutex_t *)operator new(0x40uLL);
  pthread_mutex_init(v3, 0LL);
  sub_100049FA8(a1 + 3, (uint64_t)v3);
  return a1;
}

void sub_10004A7A8(_Unwind_Exception *a1)
{
  uint64_t v3 = v2;
  operator delete(v3);
  sub_10000F9EC((uint64_t *)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_10004A7FC(uint64_t *a1)
{
  return a1;
}

uint64_t *sub_10004A82C(uint64_t *a1, uint64_t a2)
{
  unsigned int v4 = operator new(0x40uLL);
  sub_10002F324((uint64_t)v4, a2);
  sub_10002F578(a1, (uint64_t)v4);
  uint64_t v5 = operator new(1uLL);
  sub_100049E98(a1 + 2, (uint64_t)v5);
  return a1;
}

void sub_10004A88C(_Unwind_Exception *a1)
{
  uint64_t v2 = v1;
  operator delete(v2);
  _Unwind_Resume(a1);
}

uint64_t *sub_10004A8B4(uint64_t *a1, uint64_t a2)
{
  *a1 = a2;
  a1[1] = 0LL;
  sub_10004A91C(&v5, a2);
  uint64_t v3 = a1[1];
  a1[1] = v5;
  uint64_t v5 = v3;
  sub_10000F9EC(&v5);
  return a1;
}

void sub_10004A908(_Unwind_Exception *a1)
{
}

void *sub_10004A91C(void *a1, uint64_t a2)
{
  *a1 = 0LL;
  unsigned int v4 = operator new(0x18uLL);
  v4[1] = 0x100000001LL;
  *unsigned int v4 = &off_1002AF438;
  _OWORD v4[2] = a2;
  *a1 = v4;
  return a1;
}

void sub_10004A968(void *a1)
{
}

void sub_10004A97C(_Unwind_Exception *a1)
{
}

void sub_10004A998(uint64_t a1)
{
  uint64_t v1 = *(uint64_t **)(a1 + 16);
  if (v1)
  {
    sub_10000F9EC(v1 + 4);
    sub_10000F9EC(v1 + 1);
    operator delete(v1);
  }

uint64_t sub_10004A9D8()
{
  return 0LL;
}

uint64_t sub_10004A9E0()
{
  return 0LL;
}

uint64_t sub_10004A9E8()
{
  return 0LL;
}

void *sub_10004A9F0(void *a1)
{
  *a1 = off_1002AF498;
  uint64_t v2 = (uint64_t *)operator new(0x28uLL);
  sub_10004AAB8(v2);
  sub_10004B130(a1 + 1, (uint64_t)v2);
  return a1;
}

void sub_10004AA50(_Unwind_Exception *a1)
{
}

void sub_10004AA64(uint64_t *a1)
{
  *a1 = (uint64_t)off_1002AF498;
  sub_10000F9EC(a1 + 2);
  operator delete(a1);
}

uint64_t sub_10004AA94@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)(result + 16);
  *a2 = *(void *)(result + 8);
  a2[1] = v2;
  if (v2)
  {
    uint64_t v3 = (unsigned int *)(v2 + 8);
    do
      unsigned int v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }

  return result;
}

uint64_t *sub_10004AAB8(uint64_t *a1)
{
  uint64_t v2 = (uint64_t *)operator new(0x20uLL);
  v5[0] = (uint64_t)v5;
  v5[1] = (uint64_t)v5;
  v7[0] = 0LL;
  v7[1] = 0LL;
  int v5[2] = 0LL;
  uint64_t v6 = v7;
  sub_10004AC44(v2, (uint64_t)v5);
  sub_10004AFF4(a1, (uint64_t)v2);
  sub_10000D0D4((uint64_t)&v6);
  sub_10004ABE4(v5);
  a1[2] = *(void *)*a1;
  uint64_t v3 = (pthread_mutex_t *)operator new(0x40uLL);
  pthread_mutex_init(v3, 0LL);
  sub_100049FA8(a1 + 3, (uint64_t)v3);
  return a1;
}

void sub_10004AB60(_Unwind_Exception *a1)
{
  uint64_t v3 = v2;
  operator delete(v3);
  sub_10000F9EC((uint64_t *)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_10004ABB4(uint64_t *a1)
{
  return a1;
}

void sub_10004ABE4(uint64_t *a1)
{
  if (a1[2])
  {
    uint64_t v3 = *a1;
    uint64_t v2 = (uint64_t *)a1[1];
    uint64_t v4 = *v2;
    *(void *)(v4 + 8) = *(void *)(*a1 + 8);
    **(void **)(v3 + 8) = v4;
    a1[2] = 0LL;
    while (v2 != a1)
    {
      uint64_t v5 = (uint64_t *)v2[1];
      sub_100010A14((uint64_t)a1, v2);
      uint64_t v2 = v5;
    }
  }

uint64_t *sub_10004AC44(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = operator new(0x40uLL);
  sub_10004ACCC((uint64_t)v4, a2);
  sub_10004AE80(a1, (uint64_t)v4);
  uint64_t v5 = operator new(1uLL);
  sub_100049E98(a1 + 2, (uint64_t)v5);
  return a1;
}

void sub_10004ACA4(_Unwind_Exception *a1)
{
  uint64_t v2 = v1;
  operator delete(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_10004ACCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10004ADCC((uint64_t *)a1, a2);
  sub_10004AE38((uint64_t)(v4 + 3), (uint64_t *)(a2 + 24));
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v12 = 0LL;
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v12 = v6;
  while (v6 != a2 + 32)
  {
    *(void *)(v11 + 48) = v5;
    uint64_t v7 = sub_100010820(a2, (uint64_t)&v12);
    uint64_t v10 = v12;
    sub_10000B338((uint64_t)&v10);
    uint64_t v8 = sub_100010820(a2, (uint64_t)&v10);
    while (v7 != v8)
    {
      uint64_t v7 = *(void *)(v7 + 8);
      uint64_t v5 = *(void *)(v5 + 8);
    }

    sub_10000B338((uint64_t)&v12);
    sub_10000B338((uint64_t)&v11);
    uint64_t v6 = v12;
  }

  return a1;
}

void sub_10004ADA4(_Unwind_Exception *a1)
{
}

uint64_t *sub_10004ADCC(uint64_t *a1, uint64_t a2)
{
  *a1 = (uint64_t)a1;
  a1[1] = (uint64_t)a1;
  a1[2] = 0LL;
  for (uint64_t i = *(void *)(a2 + 8); i != a2; uint64_t i = *(void *)(i + 8))
    sub_1000108A4(a1, (void *)(i + 16));
  return a1;
}

void sub_10004AE24(_Unwind_Exception *a1)
{
}

uint64_t sub_10004AE38(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_100010AEC(a1, (uint64_t)a2);
  sub_100010A84(v4, *a2, (uint64_t)(a2 + 1));
  return a1;
}

void sub_10004AE6C(_Unwind_Exception *a1)
{
}

uint64_t *sub_10004AE80(uint64_t *a1, uint64_t a2)
{
  *a1 = a2;
  a1[1] = 0LL;
  sub_10004AEE8(&v5, a2);
  uint64_t v3 = a1[1];
  a1[1] = v5;
  uint64_t v5 = v3;
  sub_10000F9EC(&v5);
  return a1;
}

void sub_10004AED4(_Unwind_Exception *a1)
{
}

void *sub_10004AEE8(void *a1, uint64_t a2)
{
  *a1 = 0LL;
  uint64_t v4 = operator new(0x18uLL);
  v4[1] = 0x100000001LL;
  *uint64_t v4 = &off_1002AF508;
  _OWORD v4[2] = a2;
  *a1 = v4;
  return a1;
}

void sub_10004AF34(void *a1)
{
}

void sub_10004AF48(_Unwind_Exception *a1)
{
}

void sub_10004AF5C(uint64_t *a1)
{
  if (a1)
  {
    sub_10000D0D4((uint64_t)(a1 + 3));
    sub_10004ABE4(a1);
    operator delete(a1);
  }

void sub_10004AF9C(uint64_t a1)
{
  uint64_t v1 = *(uint64_t **)(a1 + 16);
  if (v1)
  {
    sub_10000D0D4((uint64_t)(v1 + 3));
    sub_10004ABE4(v1);
    operator delete(v1);
  }

uint64_t sub_10004AFDC()
{
  return 0LL;
}

uint64_t sub_10004AFE4()
{
  return 0LL;
}

uint64_t sub_10004AFEC()
{
  return 0LL;
}

uint64_t *sub_10004AFF4(uint64_t *a1, uint64_t a2)
{
  *a1 = a2;
  a1[1] = 0LL;
  sub_10004B05C(&v5, a2);
  uint64_t v3 = a1[1];
  a1[1] = v5;
  uint64_t v5 = v3;
  sub_10000F9EC(&v5);
  return a1;
}

void sub_10004B048(_Unwind_Exception *a1)
{
}

void *sub_10004B05C(void *a1, uint64_t a2)
{
  *a1 = 0LL;
  uint64_t v4 = operator new(0x18uLL);
  v4[1] = 0x100000001LL;
  *uint64_t v4 = &off_1002AF568;
  _OWORD v4[2] = a2;
  *a1 = v4;
  return a1;
}

void sub_10004B0A8(void *a1)
{
}

void sub_10004B0BC(_Unwind_Exception *a1)
{
}

void sub_10004B0D8(uint64_t a1)
{
  uint64_t v1 = *(uint64_t **)(a1 + 16);
  if (v1)
  {
    sub_10000F9EC(v1 + 3);
    sub_10000F9EC(v1 + 1);
    operator delete(v1);
  }

uint64_t sub_10004B118()
{
  return 0LL;
}

uint64_t sub_10004B120()
{
  return 0LL;
}

uint64_t sub_10004B128()
{
  return 0LL;
}

uint64_t *sub_10004B130(uint64_t *a1, uint64_t a2)
{
  *a1 = a2;
  a1[1] = 0LL;
  sub_10004B198(&v5, a2);
  uint64_t v3 = a1[1];
  a1[1] = v5;
  uint64_t v5 = v3;
  sub_10000F9EC(&v5);
  return a1;
}

void sub_10004B184(_Unwind_Exception *a1)
{
}

void *sub_10004B198(void *a1, uint64_t a2)
{
  *a1 = 0LL;
  uint64_t v4 = operator new(0x18uLL);
  v4[1] = 0x100000001LL;
  *uint64_t v4 = &off_1002AF5C8;
  _OWORD v4[2] = a2;
  *a1 = v4;
  return a1;
}

void sub_10004B1E4(void *a1)
{
}

void sub_10004B1F8(_Unwind_Exception *a1)
{
}

void sub_10004B214(uint64_t a1)
{
  uint64_t v1 = *(uint64_t **)(a1 + 16);
  if (v1)
  {
    sub_10000F9EC(v1 + 4);
    sub_10000F9EC(v1 + 1);
    operator delete(v1);
  }

uint64_t sub_10004B254()
{
  return 0LL;
}

uint64_t sub_10004B25C()
{
  return 0LL;
}

uint64_t sub_10004B264()
{
  return 0LL;
}

void *sub_10004B26C(void *a1)
{
  *a1 = off_1002AF628;
  uint64_t v2 = (uint64_t *)operator new(0x28uLL);
  sub_10004B334(v2);
  sub_10004B4E8(a1 + 1, (uint64_t)v2);
  return a1;
}

void sub_10004B2CC(_Unwind_Exception *a1)
{
}

void sub_10004B2E0(uint64_t *a1)
{
  *a1 = (uint64_t)off_1002AF628;
  sub_10000F9EC(a1 + 2);
  operator delete(a1);
}

uint64_t sub_10004B310@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)(result + 16);
  *a2 = *(void *)(result + 8);
  a2[1] = v2;
  if (v2)
  {
    uint64_t v3 = (unsigned int *)(v2 + 8);
    do
      unsigned int v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }

  return result;
}

uint64_t *sub_10004B334(uint64_t *a1)
{
  uint64_t v2 = (uint64_t *)operator new(0x20uLL);
  v5[0] = (uint64_t)v5;
  v5[1] = (uint64_t)v5;
  v7[0] = 0LL;
  v7[1] = 0LL;
  int v5[2] = 0LL;
  uint64_t v6 = v7;
  sub_10004B460(v2, (uint64_t)v5);
  sub_1000104D4(a1, (uint64_t)v2);
  sub_10000D0D4((uint64_t)&v6);
  sub_1000109B4(v5);
  a1[2] = *(void *)*a1;
  uint64_t v3 = (pthread_mutex_t *)operator new(0x40uLL);
  pthread_mutex_init(v3, 0LL);
  sub_100049FA8(a1 + 3, (uint64_t)v3);
  return a1;
}

void sub_10004B3DC(_Unwind_Exception *a1)
{
  uint64_t v3 = v2;
  operator delete(v3);
  sub_10000F9EC((uint64_t *)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_10004B430(uint64_t *a1)
{
  return a1;
}

uint64_t *sub_10004B460(uint64_t *a1, uint64_t a2)
{
  unsigned int v4 = operator new(0x40uLL);
  sub_1000106E0((uint64_t)v4, a2);
  sub_100010E34(a1, (uint64_t)v4);
  uint64_t v5 = operator new(1uLL);
  sub_100049E98(a1 + 2, (uint64_t)v5);
  return a1;
}

void sub_10004B4C0(_Unwind_Exception *a1)
{
  uint64_t v2 = v1;
  operator delete(v2);
  _Unwind_Resume(a1);
}

uint64_t *sub_10004B4E8(uint64_t *a1, uint64_t a2)
{
  *a1 = a2;
  a1[1] = 0LL;
  sub_10004B550(&v5, a2);
  uint64_t v3 = a1[1];
  a1[1] = v5;
  uint64_t v5 = v3;
  sub_10000F9EC(&v5);
  return a1;
}

void sub_10004B53C(_Unwind_Exception *a1)
{
}

void *sub_10004B550(void *a1, uint64_t a2)
{
  *a1 = 0LL;
  unsigned int v4 = operator new(0x18uLL);
  v4[1] = 0x100000001LL;
  *unsigned int v4 = &off_1002AF698;
  _OWORD v4[2] = a2;
  *a1 = v4;
  return a1;
}

void sub_10004B59C(void *a1)
{
}

void sub_10004B5B0(_Unwind_Exception *a1)
{
}

void sub_10004B5CC(uint64_t a1)
{
  uint64_t v1 = *(uint64_t **)(a1 + 16);
  if (v1)
  {
    sub_10000F9EC(v1 + 4);
    sub_10000F9EC(v1 + 1);
    operator delete(v1);
  }

uint64_t sub_10004B60C()
{
  return 0LL;
}

uint64_t sub_10004B614()
{
  return 0LL;
}

uint64_t sub_10004B61C()
{
  return 0LL;
}

void *sub_10004B624(void *a1)
{
  *a1 = off_1002AF6F8;
  uint64_t v2 = (uint64_t *)operator new(0x28uLL);
  sub_10004B71C(v2);
  sub_10004BD94(a1 + 1, (uint64_t)v2);
  return a1;
}

void sub_10004B684(_Unwind_Exception *a1)
{
}

void *sub_10004B698(void *a1)
{
  *a1 = off_1002AF6F8;
  sub_10000F9EC(a1 + 2);
  return a1;
}

void sub_10004B6C8(uint64_t *a1)
{
  *a1 = (uint64_t)off_1002AF6F8;
  sub_10000F9EC(a1 + 2);
  operator delete(a1);
}

uint64_t sub_10004B6F8@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)(result + 16);
  *a2 = *(void *)(result + 8);
  a2[1] = v2;
  if (v2)
  {
    uint64_t v3 = (unsigned int *)(v2 + 8);
    do
      unsigned int v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }

  return result;
}

uint64_t *sub_10004B71C(uint64_t *a1)
{
  uint64_t v2 = (uint64_t *)operator new(0x20uLL);
  v5[0] = (uint64_t)v5;
  v5[1] = (uint64_t)v5;
  v7[0] = 0LL;
  v7[1] = 0LL;
  int v5[2] = 0LL;
  uint64_t v6 = v7;
  sub_10004B8A8(v2, (uint64_t)v5);
  sub_10004BC58(a1, (uint64_t)v2);
  sub_10000D0D4((uint64_t)&v6);
  sub_10004B848(v5);
  a1[2] = *(void *)*a1;
  uint64_t v3 = (pthread_mutex_t *)operator new(0x40uLL);
  pthread_mutex_init(v3, 0LL);
  sub_100049FA8(a1 + 3, (uint64_t)v3);
  return a1;
}

void sub_10004B7C4(_Unwind_Exception *a1)
{
  uint64_t v3 = v2;
  operator delete(v3);
  sub_10000F9EC((uint64_t *)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_10004B818(uint64_t *a1)
{
  return a1;
}

void sub_10004B848(uint64_t *a1)
{
  if (a1[2])
  {
    uint64_t v3 = *a1;
    uint64_t v2 = (uint64_t *)a1[1];
    uint64_t v4 = *v2;
    *(void *)(v4 + 8) = *(void *)(*a1 + 8);
    **(void **)(v3 + 8) = v4;
    a1[2] = 0LL;
    while (v2 != a1)
    {
      uint64_t v5 = (uint64_t *)v2[1];
      sub_100010A14((uint64_t)a1, v2);
      uint64_t v2 = v5;
    }
  }

uint64_t *sub_10004B8A8(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = operator new(0x40uLL);
  sub_10004B930((uint64_t)v4, a2);
  sub_10004BAE4(a1, (uint64_t)v4);
  uint64_t v5 = operator new(1uLL);
  sub_100049E98(a1 + 2, (uint64_t)v5);
  return a1;
}

void sub_10004B908(_Unwind_Exception *a1)
{
  uint64_t v2 = v1;
  operator delete(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_10004B930(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10004BA30((uint64_t *)a1, a2);
  sub_10004BA9C((uint64_t)(v4 + 3), (uint64_t *)(a2 + 24));
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v12 = 0LL;
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v12 = v6;
  while (v6 != a2 + 32)
  {
    *(void *)(v11 + 48) = v5;
    uint64_t v7 = sub_100010820(a2, (uint64_t)&v12);
    uint64_t v10 = v12;
    sub_10000B338((uint64_t)&v10);
    uint64_t v8 = sub_100010820(a2, (uint64_t)&v10);
    while (v7 != v8)
    {
      uint64_t v7 = *(void *)(v7 + 8);
      uint64_t v5 = *(void *)(v5 + 8);
    }

    sub_10000B338((uint64_t)&v12);
    sub_10000B338((uint64_t)&v11);
    uint64_t v6 = v12;
  }

  return a1;
}

void sub_10004BA08(_Unwind_Exception *a1)
{
}

uint64_t *sub_10004BA30(uint64_t *a1, uint64_t a2)
{
  *a1 = (uint64_t)a1;
  a1[1] = (uint64_t)a1;
  a1[2] = 0LL;
  for (uint64_t i = *(void *)(a2 + 8); i != a2; uint64_t i = *(void *)(i + 8))
    sub_1000108A4(a1, (void *)(i + 16));
  return a1;
}

void sub_10004BA88(_Unwind_Exception *a1)
{
}

uint64_t sub_10004BA9C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_100010AEC(a1, (uint64_t)a2);
  sub_100010A84(v4, *a2, (uint64_t)(a2 + 1));
  return a1;
}

void sub_10004BAD0(_Unwind_Exception *a1)
{
}

uint64_t *sub_10004BAE4(uint64_t *a1, uint64_t a2)
{
  *a1 = a2;
  a1[1] = 0LL;
  sub_10004BB4C(&v5, a2);
  uint64_t v3 = a1[1];
  a1[1] = v5;
  uint64_t v5 = v3;
  sub_10000F9EC(&v5);
  return a1;
}

void sub_10004BB38(_Unwind_Exception *a1)
{
}

void *sub_10004BB4C(void *a1, uint64_t a2)
{
  *a1 = 0LL;
  uint64_t v4 = operator new(0x18uLL);
  v4[1] = 0x100000001LL;
  *uint64_t v4 = &off_1002AF768;
  _OWORD v4[2] = a2;
  *a1 = v4;
  return a1;
}

void sub_10004BB98(void *a1)
{
}

void sub_10004BBAC(_Unwind_Exception *a1)
{
}

void sub_10004BBC0(uint64_t *a1)
{
  if (a1)
  {
    sub_10000D0D4((uint64_t)(a1 + 3));
    sub_10004B848(a1);
    operator delete(a1);
  }

void sub_10004BC00(uint64_t a1)
{
  uint64_t v1 = *(uint64_t **)(a1 + 16);
  if (v1)
  {
    sub_10000D0D4((uint64_t)(v1 + 3));
    sub_10004B848(v1);
    operator delete(v1);
  }

uint64_t sub_10004BC40()
{
  return 0LL;
}

uint64_t sub_10004BC48()
{
  return 0LL;
}

uint64_t sub_10004BC50()
{
  return 0LL;
}

uint64_t *sub_10004BC58(uint64_t *a1, uint64_t a2)
{
  *a1 = a2;
  a1[1] = 0LL;
  sub_10004BCC0(&v5, a2);
  uint64_t v3 = a1[1];
  a1[1] = v5;
  uint64_t v5 = v3;
  sub_10000F9EC(&v5);
  return a1;
}

void sub_10004BCAC(_Unwind_Exception *a1)
{
}

void *sub_10004BCC0(void *a1, uint64_t a2)
{
  *a1 = 0LL;
  uint64_t v4 = operator new(0x18uLL);
  v4[1] = 0x100000001LL;
  *uint64_t v4 = &off_1002AF7C8;
  _OWORD v4[2] = a2;
  *a1 = v4;
  return a1;
}

void sub_10004BD0C(void *a1)
{
}

void sub_10004BD20(_Unwind_Exception *a1)
{
}

void sub_10004BD3C(uint64_t a1)
{
  uint64_t v1 = *(uint64_t **)(a1 + 16);
  if (v1)
  {
    sub_10000F9EC(v1 + 3);
    sub_10000F9EC(v1 + 1);
    operator delete(v1);
  }

uint64_t sub_10004BD7C()
{
  return 0LL;
}

uint64_t sub_10004BD84()
{
  return 0LL;
}

uint64_t sub_10004BD8C()
{
  return 0LL;
}

uint64_t *sub_10004BD94(uint64_t *a1, uint64_t a2)
{
  *a1 = a2;
  a1[1] = 0LL;
  sub_10004BDFC(&v5, a2);
  uint64_t v3 = a1[1];
  a1[1] = v5;
  uint64_t v5 = v3;
  sub_10000F9EC(&v5);
  return a1;
}

void sub_10004BDE8(_Unwind_Exception *a1)
{
}

void *sub_10004BDFC(void *a1, uint64_t a2)
{
  *a1 = 0LL;
  uint64_t v4 = operator new(0x18uLL);
  v4[1] = 0x100000001LL;
  *uint64_t v4 = &off_1002AF828;
  _OWORD v4[2] = a2;
  *a1 = v4;
  return a1;
}

void sub_10004BE48(void *a1)
{
}

void sub_10004BE5C(_Unwind_Exception *a1)
{
}

void sub_10004BE78(uint64_t a1)
{
  uint64_t v1 = *(uint64_t **)(a1 + 16);
  if (v1)
  {
    sub_10000F9EC(v1 + 4);
    sub_10000F9EC(v1 + 1);
    operator delete(v1);
  }

uint64_t sub_10004BEB8()
{
  return 0LL;
}

uint64_t sub_10004BEC0()
{
  return 0LL;
}

uint64_t sub_10004BEC8()
{
  return 0LL;
}

void *sub_10004BED0(void *a1)
{
  return a1;
}

void sub_10004BEF8(void *a1)
{
  if (a1[2])
  {
    uint64_t v3 = *a1;
    uint64_t v2 = a1[1];
    uint64_t v4 = *(void **)v2;
    v4[1] = *(void *)(*a1 + 8LL);
    **(void **)(v3 + 8) = v4;
    a1[2] = 0LL;
    while ((void *)v2 != a1)
    {
      uint64_t v5 = *(void *)(v2 + 8);
      sub_10004BF58((uint64_t)a1, (void **)v2);
      uint64_t v2 = v5;
    }
  }

void sub_10004BF58(uint64_t a1, void **a2)
{
  uint64_t v3 = a2 + 2;
  sub_100006F6C(&v3);
  operator delete(a2);
}

void *sub_10004BF94(void *a1)
{
  return a1;
}

void *sub_10004BFBC(void *a1)
{
  return a1;
}

uint64_t (***sub_10004BFE4(uint64_t (***a1)(), uint64_t *a2))()
{
  v4[0] = 0LL;
  sub_100007640((uint64_t)v4, a2);
  sub_10004C044(a1, v4);
  sub_1000075F0(v4);
  return a1;
}

void sub_10004C030(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t (***sub_10004C044(uint64_t (***a1)(), uint64_t *a2))()
{
  *a1 = 0LL;
  v4[0] = 0LL;
  sub_100007640((uint64_t)v4, a2);
  sub_10004C0A4(a1, v4);
  sub_1000075F0(v4);
  return a1;
}

void sub_10004C090(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void *sub_10004C0A4(uint64_t (***a1)(), uint64_t *a2)
{
  v6[0] = 0LL;
  sub_100007640((uint64_t)v6, a2);
  int v3 = sub_10004C148((uint64_t)off_1002AF878, v6, a1 + 1);
  uint64_t result = sub_1000075F0(v6);
  if (v3) {
    uint64_t v5 = off_1002AF878;
  }
  else {
    uint64_t v5 = 0LL;
  }
  *a1 = v5;
  return result;
}

void sub_10004C10C(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void sub_10004C120(uint64_t **a1, _WORD *a2, int a3)
{
  if (a3 == 4)
  {
    a2[4] = 0;
  }

  else
  {
    sub_10004C1B0(a1, a2, a3);
  }

uint64_t sub_10004C140(void **a1)
{
  return sub_100006FF8(*a1);
}

uint64_t sub_10004C148(uint64_t a1, uint64_t *a2, void *a3)
{
  v7[0] = 0LL;
  sub_100007640((uint64_t)v7, a2);
  uint64_t v5 = sub_10004C2A4(a1, v7, a3);
  sub_1000075F0(v7);
  return v5;
}

void sub_10004C19C(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void sub_10004C1B0(uint64_t **a1, _WORD *a2, int a3)
{
  switch(a3)
  {
    case 0:
      uint64_t v5 = *a1;
      uint64_t v6 = operator new(0x28uLL);
      *uint64_t v6 = 0LL;
      sub_100007640((uint64_t)v6, v5);
      *(void *)a2 = v6;
      break;
    case 1:
      *(void *)a2 = *a1;
      *a1 = 0LL;
      break;
    case 2:
      if (*(void *)a2)
      {
        uint64_t v7 = sub_1000075F0(*(void **)a2);
        operator delete(v7);
      }

      goto LABEL_7;
    case 3:
      uint64_t v8 = (const char *)(*(void *)(*(void *)a2 + 8LL) & 0x7FFFFFFFFFFFFFFFLL);
      if (v8 == (const char *)((unint64_t)"N5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFviEEENS0_5list1INS_3argILi1EEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)
        || !strcmp( v8,  (const char *)((unint64_t)"N5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFviEEENS0_5list1INS_3argILi1EEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))
      {
        *(void *)a2 = *a1;
      }

      else
      {
LABEL_7:
        *(void *)a2 = 0LL;
      }

      break;
    default:
      a2[4] = 0;
      break;
  }

void sub_10004C290(_Unwind_Exception *a1)
{
}

uint64_t sub_10004C2A4(uint64_t a1, uint64_t *a2, void *a3)
{
  v6[0] = 0LL;
  sub_100007640((uint64_t)v6, a2);
  sub_10004C308(a1, v6, a3);
  sub_1000075F0(v6);
  return 1LL;
}

void sub_10004C2F4(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void sub_10004C308(uint64_t a1, uint64_t *a2, void *a3)
{
  uint64_t v5 = operator new(0x28uLL);
  *uint64_t v5 = 0LL;
  sub_100007640((uint64_t)v5, a2);
  *a3 = v5;
}

void sub_10004C34C(_Unwind_Exception *a1)
{
}

uint64_t *sub_10004C360(uint64_t *a1, uint64_t a2)
{
  *a1 = a2;
  a1[1] = 0LL;
  uint64_t v4 = a1 + 1;
  sub_10004C3E8(&v7, a2);
  uint64_t v5 = *v4;
  *uint64_t v4 = v7;
  uint64_t v7 = v5;
  sub_10000F9EC(&v7);
  if (a2) {
    sub_100043218((uint64_t *)(a2 + 24), (uint64_t)a1, a2);
  }
  return a1;
}

void sub_10004C3D4(_Unwind_Exception *a1)
{
}

void *sub_10004C3E8(void *a1, uint64_t a2)
{
  *a1 = 0LL;
  uint64_t v4 = operator new(0x18uLL);
  v4[1] = 0x100000001LL;
  *uint64_t v4 = &off_1002AF8A8;
  _OWORD v4[2] = a2;
  *a1 = v4;
  return a1;
}

void sub_10004C434(void *a1)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  __cxa_rethrow();
}

void sub_10004C454(_Unwind_Exception *a1)
{
}

uint64_t sub_10004C470(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 16);
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }
  return result;
}

uint64_t sub_10004C488()
{
  return 0LL;
}

uint64_t sub_10004C490()
{
  return 0LL;
}

uint64_t sub_10004C498()
{
  return 0LL;
}

uint64_t *sub_10004C4A0(uint64_t *a1, uint64_t a2)
{
  *a1 = a2;
  a1[1] = 0LL;
  uint64_t v4 = a1 + 1;
  sub_10004C528(&v7, a2);
  uint64_t v5 = *v4;
  *uint64_t v4 = v7;
  uint64_t v7 = v5;
  sub_10000F9EC(&v7);
  if (a2) {
    sub_100043218((uint64_t *)(a2 + 24), (uint64_t)a1, a2);
  }
  return a1;
}

void sub_10004C514(_Unwind_Exception *a1)
{
}

void *sub_10004C528(void *a1, uint64_t a2)
{
  *a1 = 0LL;
  uint64_t v4 = operator new(0x18uLL);
  v4[1] = 0x100000001LL;
  *uint64_t v4 = &off_1002AF908;
  _OWORD v4[2] = a2;
  *a1 = v4;
  return a1;
}

void sub_10004C574(void *a1)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  __cxa_rethrow();
}

void sub_10004C594(_Unwind_Exception *a1)
{
}

uint64_t sub_10004C5B0(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 16);
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }
  return result;
}

uint64_t sub_10004C5C8()
{
  return 0LL;
}

uint64_t sub_10004C5D0()
{
  return 0LL;
}

uint64_t sub_10004C5D8()
{
  return 0LL;
}

uint64_t *sub_10004C5E0(uint64_t *a1, uint64_t a2)
{
  *a1 = a2;
  a1[1] = 0LL;
  uint64_t v4 = a1 + 1;
  sub_10004C668(&v7, a2);
  uint64_t v5 = *v4;
  *uint64_t v4 = v7;
  uint64_t v7 = v5;
  sub_10000F9EC(&v7);
  if (a2) {
    sub_100043218((uint64_t *)(a2 + 24), (uint64_t)a1, a2);
  }
  return a1;
}

void sub_10004C654(_Unwind_Exception *a1)
{
}

void *sub_10004C668(void *a1, uint64_t a2)
{
  *a1 = 0LL;
  uint64_t v4 = operator new(0x18uLL);
  v4[1] = 0x100000001LL;
  *uint64_t v4 = &off_1002AF968;
  _OWORD v4[2] = a2;
  *a1 = v4;
  return a1;
}

void sub_10004C6B4(void *a1)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  __cxa_rethrow();
}

void sub_10004C6D4(_Unwind_Exception *a1)
{
}

uint64_t sub_10004C6F0(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 16);
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }
  return result;
}

uint64_t sub_10004C708()
{
  return 0LL;
}

uint64_t sub_10004C710()
{
  return 0LL;
}

uint64_t sub_10004C718()
{
  return 0LL;
}

uint64_t (***sub_10004C720(uint64_t (***a1)(), uint64_t a2))()
{
  v5[0] = 0LL;
  sub_100007640((uint64_t)v5, (uint64_t *)a2);
  int v6 = *(_DWORD *)(a2 + 32);
  sub_10004C78C(a1, (uint64_t)v5);
  sub_1000075F0(v5);
  return a1;
}

void sub_10004C778(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t (***sub_10004C78C(uint64_t (***a1)(), uint64_t a2))()
{
  *a1 = 0LL;
  v5[0] = 0LL;
  sub_100007640((uint64_t)v5, (uint64_t *)a2);
  int v6 = *(_DWORD *)(a2 + 32);
  sub_10004C7F8(a1, (uint64_t)v5);
  sub_1000075F0(v5);
  return a1;
}

void sub_10004C7E4(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void *sub_10004C7F8(uint64_t (***a1)(), uint64_t a2)
{
  v7[0] = 0LL;
  sub_100007640((uint64_t)v7, (uint64_t *)a2);
  int v8 = *(_DWORD *)(a2 + 32);
  int v4 = sub_10004C8AC((uint64_t)off_1002AF9B8, (uint64_t)v7, a1 + 1);
  uint64_t result = sub_1000075F0(v7);
  if (v4) {
    int v6 = off_1002AF9B8;
  }
  else {
    int v6 = 0LL;
  }
  *a1 = v6;
  return result;
}

void sub_10004C86C(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void sub_10004C880(uint64_t *a1, _WORD *a2, int a3)
{
  if (a3 == 4)
  {
    a2[4] = 0;
  }

  else
  {
    sub_10004C928(a1, a2, a3);
  }

uint64_t sub_10004C8A0(void **a1)
{
  return sub_100006FF8(*a1);
}

uint64_t sub_10004C8AC(uint64_t a1, uint64_t a2, void *a3)
{
  v8[0] = 0LL;
  sub_100007640((uint64_t)v8, (uint64_t *)a2);
  int v9 = *(_DWORD *)(a2 + 32);
  uint64_t v6 = sub_10004CA24(a1, (uint64_t)v8, a3);
  sub_1000075F0(v8);
  return v6;
}

void sub_10004C914(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void sub_10004C928(uint64_t *a1, _WORD *a2, int a3)
{
  switch(a3)
  {
    case 0:
      uint64_t v5 = *a1;
      uint64_t v6 = operator new(0x28uLL);
      *(void *)uint64_t v6 = 0LL;
      sub_100007640((uint64_t)v6, (uint64_t *)v5);
      v6[8] = *(_DWORD *)(v5 + 32);
      *(void *)a2 = v6;
      break;
    case 1:
      *(void *)a2 = *a1;
      *a1 = 0LL;
      break;
    case 2:
      if (*(void *)a2)
      {
        uint64_t v7 = sub_1000075F0(*(void **)a2);
        operator delete(v7);
      }

      goto LABEL_7;
    case 3:
      int v8 = (const char *)(*(void *)(*(void *)a2 + 8LL) & 0x7FFFFFFFFFFFFFFFLL);
      if (v8 == (const char *)((unint64_t)"N5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFviEEENS0_5list1INS0"
                                                  "_5valueI17wpantund_status_tEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)
        || !strcmp( v8,  (const char *)((unint64_t)"N5boost3_bi6bind_tINS0_11unspecifiedENS_8functionIFviEEENS0_5list1INS0_5v alueI17wpantund_status_tEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))
      {
        *(void *)a2 = *a1;
      }

      else
      {
LABEL_7:
        *(void *)a2 = 0LL;
      }

      break;
    default:
      a2[4] = 0;
      break;
  }

void sub_10004CA10(_Unwind_Exception *a1)
{
}

uint64_t sub_10004CA24(uint64_t a1, uint64_t a2, void *a3)
{
  v7[0] = 0LL;
  sub_100007640((uint64_t)v7, (uint64_t *)a2);
  int v8 = *(_DWORD *)(a2 + 32);
  sub_10004CA9C(a1, (uint64_t)v7, a3);
  sub_1000075F0(v7);
  return 1LL;
}

void sub_10004CA88(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void sub_10004CA9C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = operator new(0x28uLL);
  *(void *)uint64_t v5 = 0LL;
  sub_100007640((uint64_t)v5, (uint64_t *)a2);
  v5[8] = *(_DWORD *)(a2 + 32);
  *a3 = v5;
}

void sub_10004CAE8(_Unwind_Exception *a1)
{
}

uint64_t sub_10004CAFC(uint64_t result, _WORD *a2, unsigned int a3)
{
  if (a3 == 4) {
    goto LABEL_2;
  }
  uint64_t v4 = result;
  if (a3 > 1)
  {
    if (a3 != 2)
    {
      if (a3 != 3)
      {
LABEL_2:
        a2[4] = 0;
        return result;
      }

      uint64_t result = *(void *)(*(void *)a2 + 8LL) & 0x7FFFFFFFFFFFFFFFLL;
      if (result == ((unint64_t)"N5boost3_bi6bind_tIbPFbPN2nl8wpantund17SpinelNCPInstanceEENS0_5list1INS0_5valueIS5_EEEEEE" & 0x7FFFFFFFFFFFFFFFLL)
        || (uint64_t result = strcmp( (const char *)result,  (const char *)((unint64_t)"N5boost3_bi6bind_tIbPFbPN2nl8wpantund17SpinelNCPInstanceEENS0_5l ist1INS0_5valueIS5_EEEEEE" & 0x7FFFFFFFFFFFFFFFLL)),  !(_DWORD)result))
      {
        *(void *)a2 = v4;
      }

      else
      {
        *(void *)a2 = 0LL;
      }
    }
  }

  else
  {
    *(_OWORD *)a2 = *(_OWORD *)result;
  }

  return result;
}

uint64_t sub_10004CB90(uint64_t a1)
{
  return (*(uint64_t (**)(void))a1)(*(void *)(a1 + 8));
}

uint64_t *sub_10004CB98(uint64_t *a1, uint64_t a2)
{
  *a1 = a2;
  a1[1] = 0LL;
  uint64_t v4 = a1 + 1;
  sub_10004CC20(&v7, a2);
  uint64_t v5 = *v4;
  *uint64_t v4 = v7;
  uint64_t v7 = v5;
  sub_10000F9EC(&v7);
  if (a2) {
    sub_100043218((uint64_t *)(a2 + 24), (uint64_t)a1, a2);
  }
  return a1;
}

void sub_10004CC0C(_Unwind_Exception *a1)
{
}

void *sub_10004CC20(void *a1, uint64_t a2)
{
  *a1 = 0LL;
  uint64_t v4 = operator new(0x18uLL);
  v4[1] = 0x100000001LL;
  *uint64_t v4 = &off_1002AFA08;
  _OWORD v4[2] = a2;
  *a1 = v4;
  return a1;
}

void sub_10004CC6C(void *a1)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  __cxa_rethrow();
}

void sub_10004CC8C(_Unwind_Exception *a1)
{
}

uint64_t sub_10004CCA8(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 16);
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }
  return result;
}

uint64_t sub_10004CCC0()
{
  return 0LL;
}

uint64_t sub_10004CCC8()
{
  return 0LL;
}

uint64_t sub_10004CCD0()
{
  return 0LL;
}

uint64_t *sub_10004CCD8(uint64_t *a1, uint64_t a2)
{
  *a1 = a2;
  a1[1] = 0LL;
  uint64_t v4 = a1 + 1;
  sub_10004CD60(&v7, a2);
  uint64_t v5 = *v4;
  *uint64_t v4 = v7;
  uint64_t v7 = v5;
  sub_10000F9EC(&v7);
  if (a2) {
    sub_100043218((uint64_t *)(a2 + 24), (uint64_t)a1, a2);
  }
  return a1;
}

void sub_10004CD4C(_Unwind_Exception *a1)
{
}

void *sub_10004CD60(void *a1, uint64_t a2)
{
  *a1 = 0LL;
  uint64_t v4 = operator new(0x18uLL);
  v4[1] = 0x100000001LL;
  *uint64_t v4 = &off_1002AFA68;
  _OWORD v4[2] = a2;
  *a1 = v4;
  return a1;
}

void sub_10004CDAC(void *a1)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  __cxa_rethrow();
}

void sub_10004CDCC(_Unwind_Exception *a1)
{
}

uint64_t sub_10004CDE8(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 16);
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }
  return result;
}

uint64_t sub_10004CE00()
{
  return 0LL;
}

uint64_t sub_10004CE08()
{
  return 0LL;
}

uint64_t sub_10004CE10()
{
  return 0LL;
}

uint64_t *sub_10004CE18(uint64_t *a1, uint64_t a2)
{
  *a1 = a2;
  a1[1] = 0LL;
  uint64_t v4 = a1 + 1;
  sub_10004CEA0(&v7, a2);
  uint64_t v5 = *v4;
  *uint64_t v4 = v7;
  uint64_t v7 = v5;
  sub_10000F9EC(&v7);
  if (a2) {
    sub_100043218((uint64_t *)(a2 + 24), (uint64_t)a1, a2);
  }
  return a1;
}

void sub_10004CE8C(_Unwind_Exception *a1)
{
}

void *sub_10004CEA0(void *a1, uint64_t a2)
{
  *a1 = 0LL;
  uint64_t v4 = operator new(0x18uLL);
  v4[1] = 0x100000001LL;
  *uint64_t v4 = &off_1002AFAC8;
  _OWORD v4[2] = a2;
  *a1 = v4;
  return a1;
}

void sub_10004CEEC(void *a1)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  __cxa_rethrow();
}

void sub_10004CF0C(_Unwind_Exception *a1)
{
}

uint64_t sub_10004CF28(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 16);
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }
  return result;
}

uint64_t sub_10004CF40()
{
  return 0LL;
}

uint64_t sub_10004CF48()
{
  return 0LL;
}

uint64_t sub_10004CF50()
{
  return 0LL;
}

void sub_10004CF58(_OWORD **a1, uint64_t a2, int a3)
{
  if (a3 == 4)
  {
    *(_WORD *)(a2 + 8) = 0;
  }

  else
  {
    sub_10004CFA0(a1, a2, a3);
  }

uint64_t sub_10004CF78(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = a2;
  return sub_10004D06C(*a1, &v3);
}

void sub_10004CFA0(_OWORD **a1, uint64_t a2, int a3)
{
  switch(a3)
  {
    case 0:
      uint64_t v5 = *a1;
      uint64_t v6 = operator new(0x20uLL);
      __int128 v7 = v5[1];
      *uint64_t v6 = *v5;
      v6[1] = v7;
      *(void *)a2 = v6;
      break;
    case 1:
      *(void *)a2 = *a1;
      *a1 = 0LL;
      break;
    case 2:
      if (*(void *)a2) {
        operator delete(*(void **)a2);
      }
      goto LABEL_9;
    case 3:
      int v8 = (const char *)(*(void *)(*(void *)a2 + 8LL) & 0x7FFFFFFFFFFFFFFFLL);
      if (v8 == (const char *)((unint64_t)"N5boost3_bi6bind_tIvNS_4_mfi3mf2IvN2nl8wpantund25SpinelNCPControlInter"
                                                  "faceEPNS4_5TimerEiEENS0_5list3INS0_5valueIPS6_EENS_3argILi1EEENSB_IiEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)
        || !strcmp( v8,  (const char *)((unint64_t)"N5boost3_bi6bind_tIvNS_4_mfi3mf2IvN2nl8wpantund25SpinelNCPControlInterfac eEPNS4_5TimerEiEENS0_5list3INS0_5valueIPS6_EENS_3argILi1EEENSB_IiEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))
      {
        *(void *)a2 = *a1;
      }

      else
      {
LABEL_9:
        *(void *)a2 = 0LL;
      }

      break;
    default:
      *(_WORD *)(a2 + 8) = 0;
      break;
  }

uint64_t sub_10004D06C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = a2;
  return sub_10004D0A0(a1 + 16, a1, &v3);
}

uint64_t sub_10004D0A0(uint64_t a1, uint64_t a2, uint64_t **a3)
{
  uint64_t v4 = **a3;
  uint64_t v5 = *(unsigned int *)(a1 + 8);
  uint64_t v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))a2;
  uint64_t v7 = *(void *)(a2 + 8);
  int v8 = (void *)(*(void *)a1 + (v7 >> 1));
  if ((v7 & 1) != 0) {
    uint64_t v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(*v8 + v6);
  }
  return v6(v8, v4, v5);
}

void sub_10004D0CC(const char *a1)
{
  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  sub_10004D11C(exception, a1);
}

void sub_10004D108(_Unwind_Exception *a1)
{
}

std::logic_error *sub_10004D11C(std::logic_error *a1, const char *a2)
{
  uint64_t result = std::logic_error::logic_error(a1, a2);
  return result;
}

uint64_t *sub_10004D140(uint64_t *a1, uint64_t a2)
{
  *a1 = a2;
  a1[1] = 0LL;
  uint64_t v4 = a1 + 1;
  sub_10004D1C8(&v7, a2);
  uint64_t v5 = *v4;
  *uint64_t v4 = v7;
  uint64_t v7 = v5;
  sub_10000F9EC(&v7);
  if (a2) {
    sub_100043218((uint64_t *)(a2 + 24), (uint64_t)a1, a2);
  }
  return a1;
}

void sub_10004D1B4(_Unwind_Exception *a1)
{
}

void *sub_10004D1C8(void *a1, uint64_t a2)
{
  *a1 = 0LL;
  uint64_t v4 = operator new(0x18uLL);
  v4[1] = 0x100000001LL;
  *uint64_t v4 = &off_1002AFB48;
  _OWORD v4[2] = a2;
  *a1 = v4;
  return a1;
}

void sub_10004D214(void *a1)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  __cxa_rethrow();
}

void sub_10004D234(_Unwind_Exception *a1)
{
}

uint64_t sub_10004D250(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 16);
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }
  return result;
}

uint64_t sub_10004D268()
{
  return 0LL;
}

uint64_t sub_10004D270()
{
  return 0LL;
}

uint64_t sub_10004D278()
{
  return 0LL;
}

void sub_10004D280(uint64_t a1)
{
  uint64_t v2 = (void *)(a1 + 8);
  sub_10000D470(a1, *(void **)(a1 + 8));
  *(void *)a1 = v2;
  *(void *)(a1 + 16) = 0LL;
  void *v2 = 0LL;
}

uint64_t *sub_10004D2B4(uint64_t *a1, uint64_t a2)
{
  *a1 = a2;
  a1[1] = 0LL;
  uint64_t v4 = a1 + 1;
  sub_10004D33C(&v7, a2);
  uint64_t v5 = *v4;
  *uint64_t v4 = v7;
  uint64_t v7 = v5;
  sub_10000F9EC(&v7);
  if (a2) {
    sub_100043218((uint64_t *)(a2 + 24), (uint64_t)a1, a2);
  }
  return a1;
}

void sub_10004D328(_Unwind_Exception *a1)
{
}

void *sub_10004D33C(void *a1, uint64_t a2)
{
  *a1 = 0LL;
  uint64_t v4 = operator new(0x18uLL);
  v4[1] = 0x100000001LL;
  *uint64_t v4 = &off_1002AFBA8;
  _OWORD v4[2] = a2;
  *a1 = v4;
  return a1;
}

void sub_10004D388(void *a1)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  __cxa_rethrow();
}

void sub_10004D3A8(_Unwind_Exception *a1)
{
}

uint64_t sub_10004D3C4(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 16);
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }
  return result;
}

uint64_t sub_10004D3DC()
{
  return 0LL;
}

uint64_t sub_10004D3E4()
{
  return 0LL;
}

uint64_t sub_10004D3EC()
{
  return 0LL;
}

void *sub_10004D3F4(void *a1, uint64_t a2, uint64_t *a3)
{
  v6[0] = 0LL;
  sub_100007640((uint64_t)v6, a3);
  sub_1000342C8((uint64_t)a1, a2, v6);
  sub_100006E7C(v6);
  *a1 = &off_1002AFC08;
  return a1;
}

void sub_10004D454( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *sub_10004D46C(void *result)
{
  *(_BYTE *)(result[7] + 73904LL) = 0;
  return sub_100034408(result);
}

uint64_t sub_10004D480( uint64_t a1, unsigned int a2, unsigned int *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned int v11 = *(unsigned __int16 *)(a1 + 8);
  if (v11 > 0x65)
  {
    if (*(unsigned __int16 *)(a1 + 8) > 0x8Du)
    {
      unsigned int v13 = 1;
      if (v11 != 142)
      {
        if (v11 == 151) {
          goto LABEL_93;
        }
        if (v11 == 152)
        {
          BOOL v14 = (a2 & 0xFF000000) == -1426063360;
          goto LABEL_95;
        }

        goto LABEL_117;
      }

      goto LABEL_89;
    }

    if (v11 != 102)
    {
      if (v11 != 111)
      {
        if (v11 != 129) {
          goto LABEL_117;
        }
LABEL_78:
        if ((int)sub_10003453C(a1, a2, a3, a4, a5, a6, a7, a8) >= 2)
        {
          unsigned int v13 = *(_DWORD *)(a1 + 128);
          if (!v13) {
            goto LABEL_98;
          }
          int v42 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (v42)
          {
            __int16 v43 = v42;
            goto LABEL_98;
          }

          if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
            goto LABEL_98;
          }
          goto LABEL_85;
        }

        return 0LL;
      }

      goto LABEL_56;
    }

LABEL_117:
  *(_WORD *)(a1 + 8) = 0;
  return 3LL;
}

            HIDWORD(v61) = sub_1000BE984(3, uint64);
            break;
        }
      }

  unsigned int v65 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_energyDetectedRequests));
  [v3 setObject:v65 forKey:@"energy_detected_requests"];

  int v8 = self->_has;
  if ((*(_BYTE *)&v8 & 2) != 0) {
    goto LABEL_118;
  }
LABEL_60:
  if ((*(_BYTE *)&v8 & 0x20) != 0)
  {
LABEL_61:
    int v9 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_radioStatusDoubleNotification));
    [v3 setObject:v9 forKey:@"radio_status_double_notification"];
  }

  PBDataWriterWriteUint32Field(v7, self->_energyDetectedRequests, 56LL);
  uint64_t v6 = self->_has;
  if ((*(_BYTE *)&v6 & 2) != 0) {
    goto LABEL_118;
  }
LABEL_60:
  if ((*(_BYTE *)&v6 & 0x20) != 0) {
LABEL_61:
  }
    PBDataWriterWriteUint32Field(v7, self->_radioStatusDoubleNotification, 58LL);
LABEL_62:
}

  uint64_t v4[4] = self->_energyDetectedRequests;
  *((void *)v4 + 31) |= 4uLL;
  uint64_t v6 = self->_has;
  if ((*(_BYTE *)&v6 & 2) != 0) {
    goto LABEL_118;
  }
LABEL_60:
  if ((*(_BYTE *)&v6 & 0x20) != 0)
  {
LABEL_61:
    v4[7] = self->_radioStatusDoubleNotification;
    *((void *)v4 + 31) |= 0x20uLL;
  }

  self->_rxErrorAckFailedRadioDelay = v5[23];
  *(void *)&self->_has |= 0x200000uLL;
  int v9 = *((void *)v5 + 31);
  if ((v9 & 0x100000) == 0)
  {
LABEL_64:
    if ((v9 & 0x80000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_119;
  }

              xpc_release(message);
              uint64_t v7 = v61;
              goto LABEL_118;
            }
          }

          sub_100077124();
        }

        uint64_t v18 = strlen("eventsOn");
        if ((v15 & 0x80) != 0)
        {
          uint64_t v17 = v60;
LABEL_36:
          if (v18 != v17)
          {
            uint64_t v20 = strlen("eventsOff");
            goto LABEL_55;
          }

          if (v17 == -1LL) {
            sub_100077124();
          }
          uint64_t v19 = __s1;
LABEL_39:
          if (!memcmp(v19, "eventsOn", v17))
          {
            *(void *)uint64_t v63 = a3;
            *(void *)&v63[8] = "eventList";
            sub_1000A99D0((uint64_t)v63, &v57);
            xpc::bridge(object, (xpc *)&v57, v23);
            sub_100162F60(&buf, (CFTypeRef *)object);
            sub_100162FE4((const void **)object);
            xpc_release(v57);
            if (buf.__r_.__value_.__r.__words[0]) {
              uint64_t v24 = sub_100163014;
            }
            else {
              uint64_t v24 = 0LL;
            }
            if (v24)
            {
              uint64_t v25 = *a2;
              uint64_t v54 = v25;
              if (v25) {
                xpc_retain(v25);
              }
              else {
                uint64_t v54 = xpc_null_create();
              }
              sub_10015A530(&v53, (const void **)&buf.__r_.__value_.__l.__data_);
              sub_100162D50(a1, &v54, 1, &v53);
              sub_10015A564(&v53);
              xpc_release(v54);
              int v29 = 0LL;
              uint64_t v54 = 0LL;
              goto LABEL_78;
            }

            goto LABEL_65;
          }

          uint64_t v20 = strlen("eventsOff");
          if ((v15 & 0x80) == 0) {
            goto LABEL_41;
          }
          uint64_t v17 = v60;
LABEL_55:
          if (v20 != v17) {
            goto LABEL_117;
          }
          if (v17 == -1LL) {
            sub_100077124();
          }
          uint64_t v21 = __s1;
          float v15 = v17;
          goto LABEL_58;
        }

void sub_10004DC64( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  if (a13) {
    (*(void (**)(uint64_t))(*(void *)a13 + 8LL))(a13);
  }
  _Unwind_Resume(exception_object);
}

void sub_10004DC88(uint64_t a1)
{
  uint64_t v1 = (void *)sub_100034374(a1);
  operator delete(v1);
}

void sub_10004DC9C(uint64_t a1, xpc_object_t *a2)
{
  if (xpc_get_type(*a2) == (xpc_type_t)&_xpc_type_dictionary)
  {
    unsigned int int64 = xpc_dictionary_get_int64(*a2, "ret");
    string = xpc_dictionary_get_string(*a2, "method");
    if (int64)
    {
      uint64_t v6 = (uint64_t)string;
      if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        sub_10020323C(v6, int64);
      }
      uint64_t v7 = sub_1001020A8(int64);
      sub_10000AC00(&__p, v7);
      *(_DWORD *)a1 = 3;
      sub_100014D08(a1 + 8, (__int128 *)&__p);
    }

    else
    {
      memset(&__p, 0, sizeof(__p));
      *(_DWORD *)a1 = 0;
      std::string::operator=((std::string *)(a1 + 8), &__p);
      if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
      {
        LOWORD(__p.__r_.__value_.__l.__data_) = 0;
        _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_INFO,  "Updating primary resident information... \n",  (uint8_t *)&__p,  2u);
      }
    }
  }

  else
  {
    sub_10000AC00(&__p, "Reply is not a dictionary");
    *(_DWORD *)a1 = 11;
    sub_100014D08(a1 + 8, (__int128 *)&__p);
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      sub_1002032E8();
    }
  }

void sub_10004DE2C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_10004DE48@<D0>(xpc_object_t *a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  int v5 = *a2;
  int v6 = a2[1];
  uint64_t v7 = (const char *)*((void *)a2 + 1);
  xpc_object_t v11 = xpc_string_create("updatePrimaryResident");
  if (!v11) {
    xpc_object_t v11 = xpc_null_create();
  }
  *(void *)&__int128 v9 = a1;
  *((void *)&v9 + 1) = "method";
  sub_1000089EC((uint64_t)&v9, &v11, &object);
  xpc_release(object);
  xpc_object_t object = 0LL;
  xpc_release(v11);
  xpc_object_t v11 = 0LL;
  xpc_dictionary_set_string(*a1, "property_name", "updatePrimaryResident");
  xpc_dictionary_set_BOOL(*a1, "isPrimaryResident", v5 != 0);
  xpc_dictionary_set_BOOL(*a1, "isPrimaryResidentThreadCapable", v6 != 0);
  if (v7) {
    xpc_dictionary_set_string(*a1, "primaryResidentInfo", v7);
  }
  sub_10000AC00(&v9, "");
  *(_DWORD *)a3 = 0;
  double result = *(double *)&v9;
  *(_OWORD *)(a3 + 8) = v9;
  *(void *)(a3 + 24) = v10;
  return result;
}

void *sub_10004DF70(void *a1)
{
  uint64_t v2 = operator new(0x121E8uLL);
  sub_10004ED6C((uint64_t)v2, a1);
  return v2;
}

void sub_10004DFA8(_Unwind_Exception *a1)
{
}

void *sub_10004DFC0(void *a1)
{
  uint64_t v2 = operator new(0x121E8uLL);
  sub_10004ED6C((uint64_t)v2, a1);
  return v2;
}

void sub_10004DFF8(_Unwind_Exception *a1)
{
}

void sub_10004E00C(char *a1, int a2)
{
  int v2 = a2 - 1;
  if (__OFSUB__(a2, 1))
  {
LABEL_26:
    __break(0x5515u);
LABEL_27:
    __break(0x5512u);
    __break(1u);
LABEL_28:
    __break(0x5500u);
  }

  while (a2)
  {
    int v5 = *a1++;
    int v4 = v5;
    int v6 = v5;
    uint64_t v7 = dword_1002C9FA4;
    if (v5 == 9 || v4 >= 32)
    {
      int v8 = dword_1002C9FA4 + 1;
      if (__OFADD__(dword_1002C9FA4, 1)) {
        goto LABEL_28;
      }
      ++dword_1002C9FA4;
      byte_1002C9E10[v7] = v6;
      LODWORD(v7) = v7 + 1;
      if (!v8) {
        goto LABEL_22;
      }
    }

    else if (!dword_1002C9FA4)
    {
      goto LABEL_22;
    }

    if (v7 > 0x18F)
    {
      if ((_DWORD)v7 != 400) {
        goto LABEL_27;
      }
LABEL_15:
      byte_1002C9E10[(int)v7] = 0;
      __int128 v9 = (os_log_s *)sub_1000160F4("com.apple.wpantund.ncp", "default");
      if (v9)
      {
        uint64_t v10 = v9;
        if (sub_10015A058(7))
        {
          if (os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG)) {
            sub_10020332C(v16, &v17, v10);
          }
        }
      }

      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)__n128 buf = 136315394;
        unsigned int v13 = "com.apple.wpantund.ncp";
        __int16 v14 = 2080;
        float v15 = "default";
        _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "Logging Module is not defined for SubSystem: %s, Category: %s",  buf,  0x16u);
      }

      dword_1002C9FA4 = 0;
      goto LABEL_22;
    }

    if (v6 == 10 || v6 == 13) {
      goto LABEL_15;
    }
LABEL_22:
    a2 = v2;
    if (__OFSUB__(v2--, 1)) {
      goto LABEL_26;
    }
  }

const char *sub_10004E1F4(unsigned int a1)
{
  if (a1 > 7) {
    return "----";
  }
  else {
    return off_1002B0658[(char)a1];
  }
}

const char *sub_10004E21C(int a1)
{
  else {
    return off_1002B05D0[a1 - 1];
  }
}

void sub_10004E244( CFDateFormatterRef *a1, _WORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8 = a3;
  unsigned __int8 v57 = 7;
  unsigned int v11 = spinel_datatype_unpack(a2, a3, "U", a4, a5, a6, a7, a8, (uint64_t)&v58);
  unsigned int v12 = v11;
  if ((v11 & 0x80000000) != 0)
  {
    uint64_t v16 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v16)
    {
      return;
    }

    if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      return;
    }
LABEL_21:
    sub_1001FB53C();
    return;
  }

  BOOL v13 = __OFSUB__(v8, v11);
  uint64_t v14 = v8 - v11;
  if ((int)v14 < 0 != v13)
  {
    float v15 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v15)
    {
      return;
    }

    if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      return;
    }
    goto LABEL_21;
  }

  __str[0] = 0;
  *(_DWORD *)__n128 buf = 518;
  uint64_t v22 = (_WORD *)((char *)a2 + v12);
  unsigned int v23 = spinel_datatype_unpack(v22, v14, "Ci", v17, v18, v19, v20, v21, (uint64_t)&v57);
  if ((v23 & 0x80000000) != 0)
  {
    uint64_t v32 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (!v32)
    {
      if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        return;
      }
      goto LABEL_38;
    }

    return;
  }

  BOOL v29 = v14 >= v23;
  uint64_t v30 = v14 - v23;
  if (!v29)
  {
    uint64_t v31 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v31)
    {
      if (sub_10015A058(4))
      {
        if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR)) {
          sub_100203554();
        }
      }

      return;
    }

    if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      return;
    }
LABEL_38:
    sub_1001FB53C();
    return;
  }

  if (v30 < 8)
  {
    else {
      uint64_t v35 = off_1002B0658[(char)v57];
    }
    uint64_t v36 = sub_10004E21C(v56);
    snprintf(__str, 0x191uLL, "[%s]%s: ", v35, v36);
    goto LABEL_43;
  }

  int v33 = spinel_datatype_unpack((_WORD *)((char *)v22 + v23), v30, "X", v24, v25, v26, v27, v28, (uint64_t)buf);
  if (v33 < 0)
  {
    uint64_t v40 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (!v40)
    {
      if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        return;
      }
      goto LABEL_38;
    }

    return;
  }

  if ((int)v30 >= v33)
  {
    unint64_t v41 = *(void *)buf;
    if (*(void *)buf < 0xE3C7A73401uLL)
    {
      int v42 = 0LL;
      StringWithDate = 0LL;
      char v46 = 1;
      CStringPtr = " ";
    }

    else
    {
      int v42 = CFDateCreate(kCFAllocatorDefault, (double)((*(void *)buf - 978307200000LL) / 0x3E8uLL));
      StringWithDate = CFDateFormatterCreateStringWithDate(kCFAllocatorDefault, a1[9092], v42);
      if (StringWithDate)
      {
        CFStringEncoding SystemEncoding = CFStringGetSystemEncoding();
        CStringPtr = CFStringGetCStringPtr(StringWithDate, SystemEncoding);
        char v46 = 0;
      }

      else
      {
        CStringPtr = " ";
        char v46 = 1;
      }
    }

    int v47 = v41 % 0x3E8;
    else {
      uint64_t v48 = off_1002B0658[(char)v57];
    }
    uint64_t v49 = sub_10004E21C(v56);
    snprintf(__str, 0x191uLL, "[%s.%03d][%s]%s: ", CStringPtr, v47, v48, v49);
    if (v42) {
      CFRelease(v42);
    }
    if ((v46 & 1) == 0) {
      CFRelease(StringWithDate);
    }
LABEL_43:
    uint64_t v37 = (os_log_s *)sub_1000160F4("com.apple.wpantund.ncp", "default");
    if (!v37)
    {
      if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        sub_1001FB53C();
      }
      goto LABEL_50;
    }

    if (sub_10015A058(v57))
    {
      if (v57 - 5 <= 1)
      {
        if (!os_log_type_enabled(v37, OS_LOG_TYPE_INFO)) {
          return;
        }
        *(_DWORD *)__n128 buf = 136315394;
        *(void *)&uint8_t buf[4] = __str;
        __int16 v60 = 2080;
        uint64_t v61 = v58;
        _os_log_impl((void *)&_mh_execute_header, v37, OS_LOG_TYPE_INFO, "NCP => %s%s\n", buf, 0x16u);
        goto LABEL_50;
      }

      if (v57 == 7)
      {
        if (os_log_type_enabled(v37, OS_LOG_TYPE_DEBUG)) {
          sub_10020347C();
        }
        goto LABEL_50;
      }

      if (v57 - 3 <= 1)
      {
        if (!os_log_type_enabled(v37, OS_LOG_TYPE_ERROR)) {
          goto LABEL_50;
        }
        goto LABEL_69;
      }

      if (v57 <= 2u && os_log_type_enabled(v37, OS_LOG_TYPE_ERROR)) {
LABEL_69:
      }
        sub_1002034E8();
    }

void sub_10004E950( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, void *a20, uint64_t a21, int a22, __int16 a23, char a24, char a25, void *a26, uint64_t a27, int a28, __int16 a29, char a30, char a31)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  if (a25 < 0) {
    operator delete(a20);
  }
  if (a31 < 0) {
    operator delete(a26);
  }
  _Unwind_Resume(exception_object);
}

ssize_t sub_10004E9A4(uint64_t a1, uint64_t *a2)
{
  int v4 = sub_1000D8DE8(a1);
  BOOL v5 = sub_1000B5104(v4);
  uint64_t v6 = sub_100042EAC(a2);
  if (v5)
  {
    ssize_t v22 = 0LL;
    (*(void (**)(uint64_t, uint64_t, ssize_t *))(*(void *)v6 + 32LL))(v6, 3LL, &v22);
    ssize_t result = v22;
    if (v22) {
      return (*(uint64_t (**)(ssize_t))(*(void *)v22 + 8LL))(v22);
    }
  }

  else
  {
    ssize_t result = sub_10015A014(v6, 2LL, v7, v8, v9, v10, v11, v12, v19);
    if ((int)result <= 1)
    {
      int v14 = sub_1000D8DE8(a1);
      if (sub_1000B5088(v14) {
        && (!*a2
      }
      {
        if (((*(uint64_t (**)(uint64_t))(*(void *)a1 + 112LL))(a1) & 1) != 0
          || (LODWORD(v22) = 13, !sub_100007684(a1 + 72792, (unsigned int *)&v22)))
        {
          float v15 = operator new(0x88uLL);
          v21[0] = (uint64_t)off_1002AECF8 + 1;
          sub_100006578(v15, a1, v21);
          sub_100043330(&v22, (uint64_t)v15);
          sub_10004E9A4(a1, &v22);
          sub_10000F9EC(&v23);
          sub_100006E7C(v21);
        }
      }

      uint64_t v16 = a2[1];
      uint64_t v19 = *a2;
      uint64_t v20 = v16;
      if (v16)
      {
        uint64_t v17 = (unsigned int *)(v16 + 8);
        do
          unsigned int v18 = __ldxr(v17);
        while (__stxr(v18 + 1, v17));
      }

      sub_10004EBA8(a1 + 74016, &v19);
      sub_10000F9EC(&v20);
      return write(dword_1002C97C4, "x", 1uLL);
    }
  }

  return result;
}

void sub_10004EB40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void sub_10004EBA8(uint64_t a1, void *a2)
{
  int v4 = (std::mutex *)(a1 + 24);
  std::mutex::lock((std::mutex *)(a1 + 24));
  sub_1000108A4((uint64_t *)a1, a2);
  std::mutex::unlock(v4);
}

void sub_10004EC00( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_10004EC14(uint64_t result)
{
  if ((int)result > 18)
  {
    if ((int)result > 104)
    {
      if ((_DWORD)result == 105) {
        return 20LL;
      }
      if ((_DWORD)result == 107) {
        return 19LL;
      }
    }

    else
    {
      if ((_DWORD)result == 19) {
        return 10LL;
      }
      if ((_DWORD)result == 104) {
        return 18LL;
      }
    }

    return (unsigned __int16)result | 0xEA0000u;
  }

  else
  {
    switch((int)result)
    {
      case 0:
      case 4:
        return result;
      case 3:
        ssize_t result = 24LL;
        break;
      case 10:
        ssize_t result = 12LL;
        break;
      case 12:
        ssize_t result = 9LL;
        break;
      case 13:
        ssize_t result = 16LL;
        break;
      default:
        return (unsigned __int16)result | 0xEA0000u;
    }
  }

  return result;
}

uint64_t sub_10004ECBC( int a1, unsigned int *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11 = a2;
  unsigned int v10 = 0;
  if (a1 == -1409351680) {
    return *v11;
  }
  uint64_t result = 0LL;
  if (a1 == -1409351679)
  {
    return v10;
  }

  return result;
}

uint64_t sub_10004ED6C(uint64_t a1, void *a2)
{
  int v4 = (void *)sub_1000D2BB4(a1, a2);
  *int v4 = off_1002AFC58;
  uint64_t v4[4] = off_1002AFDF0;
  sub_100044F54(v4 + 8402, a1);
  *(void *)(a1 + 72768) = 0LL;
  *(void *)(a1 + 72704) = 0LL;
  *(void *)(a1 + 72776) = 0LL;
  *(void *)(a1 + 72784) = 0LL;
  *(void *)(a1 + 72800) = 0LL;
  *(void *)(a1 + 72792) = a1 + 72800;
  *(void *)(a1 + 72808) = 0LL;
  sub_100042EF4(a1 + 72832);
  sub_100042EF4(a1 + 73104);
  sub_100042EF4(a1 + 73376);
  *(_OWORD *)(a1 + 73656) = 0u;
  *(void *)(a1 + 73648) = a1 + 73656;
  *(void *)(a1 + 73672) = 0LL;
  *(_OWORD *)(a1 + 736sub_10001C704(v1 - 96) = 0u;
  *(void *)(a1 + 73712) = 0LL;
  *(_OWORD *)(a1 + 73720) = 0u;
  *(void *)(a1 + 73736) = 0LL;
  *(void *)(a1 + 73760) = a1 + 73760;
  *(void *)(a1 + 73768) = a1 + 73760;
  *(void *)(a1 + 73776) = 0LL;
  *(void *)(a1 + 73784) = a1 + 73784;
  *(void *)(a1 + 73792) = a1 + 73784;
  *(void *)(a1 + 73800) = 0LL;
  *(void *)(a1 + 73816) = 0LL;
  *(void *)(a1 + 73808) = a1 + 73816;
  *(void *)(a1 + 73824) = 0LL;
  *(void *)(a1 + 73848) = 0LL;
  *(void *)(a1 + 73840) = 0LL;
  *(void *)(a1 + 73888) = 0LL;
  *(void *)(a1 + 73880) = a1 + 73888;
  *(void *)(a1 + 73832) = a1 + 73840;
  *(void *)(a1 + 73864) = 0LL;
  *(void *)(a1 + 73856) = a1 + 73864;
  *(void *)(a1 + 73872) = 0LL;
  *(void *)(a1 + 738sub_10001C704(v1 - 96) = 0LL;
  *(void *)(a1 + 74016) = a1 + 74016;
  *(void *)(a1 + 74024) = a1 + 74016;
  *(_OWORD *)(a1 + 74048) = 0u;
  *(_OWORD *)(a1 + 74064) = 0u;
  *(_OWORD *)(a1 + 74080) = 0u;
  *(void *)(a1 + 740sub_10001C704(v1 - 96) = 0LL;
  *(_OWORD *)(a1 + 74032) = xmmword_100227490;
  sub_10008FCD0();
  *(_DWORD *)(a1 + 73920) = 0;
  *(void *)(a1 + 73912) = 0LL;
  *(_DWORD *)(a1 + 68776) = 0;
  *(void *)(a1 + 68768) = 0LL;
  *(_BYTE *)(a1 + 68764) = 0;
  *(_WORD *)(a1 + 68780) = 0;
  *(_DWORD *)(a1 + 68760) = 0;
  *(_BYTE *)(a1 + 68758) = 0;
  *(_BYTE *)(a1 + 80) = 1;
  *(_BYTE *)(a1 + 72760) = 0;
  *(_WORD *)(a1 + 67456) = 0;
  *(_DWORD *)(a1 + 726sub_10001C704(v1 - 96) = 0;
  *(void *)(a1 + 70088) = 0LL;
  *(_BYTE *)(a1 + 70085) = 0;
  *(_WORD *)(a1 + 73904) = 0;
  *(_BYTE *)(a1 + 72816) = 0;
  *(_DWORD *)(a1 + 73688) = 0;
  *(_DWORD *)(a1 + 72752) = 0;
  *(_DWORD *)(a1 + 72756) = 16842752;
  *(_WORD *)(a1 + 73756) = 0;
  *(_BYTE *)(a1 + 73758) = -100;
  *(void *)(a1 + 73744) = 0LL;
  *(_DWORD *)(a1 + 73752) = 0;
  sub_10000C178((uint64_t *)(a1 + 73760));
  sub_10000C178((uint64_t *)(a1 + 73784));
  *(_DWORD *)(a1 + 74008) = 0;
  *(void *)(a1 + 74000) = 0LL;
  sub_1000715D4(a1 + 73648);
  BOOL v5 = CFLocaleCopyCurrent();
  *(void *)(a1 + 72744) = v5;
  uint64_t v6 = CFDateFormatterCreate(kCFAllocatorDefault, v5, kCFDateFormatterShortStyle, kCFDateFormatterShortStyle);
  *(void *)(a1 + 72736) = v6;
  CFDateFormatterSetFormat(v6, @"yyyy-MM-dd HH:mm:ss");
  sub_10004F5B8(a1);
  sub_100051C8C(a1);
  sub_100053DAC(a1);
  sub_100053EA0(a1);
  *(void *)(a1 + 72817) = -1LL;
  if (a2[2])
  {
    for (uint64_t i = (char *)*a2; i != (char *)(a2 + 1); sub_10000B338((uint64_t)&i))
    {
      uint64_t v7 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v7)
      {
        if (sub_10015A058(6) && os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
        {
          uint64_t v8 = i + 32;
          if (i[55] < 0) {
            uint64_t v8 = (void *)*v8;
          }
          *(_DWORD *)__n128 buf = 136315138;
          *(void *)&uint8_t buf[4] = v8;
          _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "Settings property %s", buf, 0xCu);
        }
      }

      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)__n128 buf = 136315394;
        *(void *)&uint8_t buf[4] = "com.apple.wpantund.ncp";
        __int16 v24 = 2080;
        uint64_t v25 = "default";
        _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "Logging Module is not defined for SubSystem: %s, Category: %s",  buf,  0x16u);
      }
    }
  }

  else
  {
    uint64_t v9 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v9)
    {
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }
  }

  if (a2[2])
  {
    uint64_t v12 = (char *)*a2;
    uint64_t v11 = (char *)(a2 + 1);
    unsigned int v10 = v12;
    uint64_t i = v12;
    if (v12 != v11)
    {
      while (1)
      {
        if (sub_1000D4ED8(v10 + 32)) {
          goto LABEL_42;
        }
        uint64_t v13 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 24LL))(a1);
        int v14 = i;
        sub_100071608(buf, (const std::string *)(i + 56));
        unsigned int v15 = sub_1000FC97C(v13, (uint64_t)(v14 + 32), (uint64_t)buf);
        if (*(void *)buf) {
          (*(void (**)(void))(**(void **)buf + 8LL))(*(void *)buf);
        }
        uint64_t v16 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v16) {
          break;
        }
        if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          goto LABEL_32;
        }
        *(_DWORD *)__n128 buf = 136315394;
        *(void *)&uint8_t buf[4] = "com.apple.wpantund.ncp";
        __int16 v24 = 2080;
        uint64_t v25 = "default";
        _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "Logging Module is not defined for SubSystem: %s, Category: %s",  buf,  0x16u);
        if (v15) {
          goto LABEL_33;
        }
LABEL_42:
        sub_10000B338((uint64_t)&i);
        unsigned int v10 = i;
        if (i == v11) {
          return a1;
        }
      }

      if (sub_10015A058(6) && os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
      {
        uint64_t v17 = i + 32;
        if (i[55] < 0) {
          uint64_t v17 = (void *)*v17;
        }
        *(_DWORD *)__n128 buf = 136315138;
        *(void *)&uint8_t buf[4] = v17;
        _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_INFO, "Attempting to set property %s", buf, 0xCu);
        if (!v15) {
          goto LABEL_42;
        }
LABEL_33:
        if (v15 != 12)
        {
          unsigned int v18 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (v18)
          {
            if (sub_10015A058(4) && os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
            {
              uint64_t v19 = i + 32;
              if (i[55] < 0) {
                uint64_t v19 = (void *)*v19;
              }
              uint64_t v20 = sub_1001020A8(v15);
              *(_DWORD *)__n128 buf = 136315394;
              *(void *)&uint8_t buf[4] = v19;
              __int16 v24 = 2080;
              uint64_t v25 = v20;
              _os_log_error_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_ERROR,  "Attempt to set property %s failed with err %s",  buf,  0x16u);
            }
          }

          else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)__n128 buf = 136315394;
            *(void *)&uint8_t buf[4] = "com.apple.wpantund.ncp";
            __int16 v24 = 2080;
            uint64_t v25 = "default";
            _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "Logging Module is not defined for SubSystem: %s, Category: %s",  buf,  0x16u);
          }
        }

        goto LABEL_42;
      }

LABEL_32:
      if (v15) {
        goto LABEL_33;
      }
      goto LABEL_42;
    }
  }

  return a1;
}

        sub_100147B4C(a3, &v29);
        uint64_t v19 = (char)v29.__r_.__value_.__s.__size_;
        uint64_t v20 = (void *)v29.__r_.__value_.__r.__words[0];
        if ((v29.__r_.__value_.__s.__size_ & 0x80u) == 0) {
          uint64_t v21 = &v29;
        }
        else {
          uint64_t v21 = (std::string *)v29.__r_.__value_.__r.__words[0];
        }
        ssize_t v22 = sub_10010DA1C((const char *)v21);
        uint64_t v23 = v22;
        if (v19 < 0)
        {
          operator delete(v20);
          if (v23 < 0) {
            return sub_100006FF8(a4);
          }
        }

        else if (v22 < 0)
        {
          return sub_100006FF8(a4);
        }

        *(_DWORD *)(v8 + 12) = v23;
        return sub_100006FF8(a4);
      }

  if (v19 == 3) {
    uint64_t v9 = "INSECURE";
  }
LABEL_34:
  sub_100157B24(a3, a4, (uint64_t)v9, v18);
  uint64_t v21 = sub_1000D8DE8(a1);
  if ((sub_1000B50B8(v21) & 1) == 0)
  {
    ssize_t v22 = sub_1000D8DE8(a1);
    uint64_t v23 = sub_1000B5088(v22);
    __int16 v24 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    uint64_t v25 = v24;
    if (v23)
    {
      if (v24)
      {
      }

      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        sub_1001FB53C();
      }

      (*(void (**)(uint64_t))(*(void *)a1 + 144LL))(a1);
    }

    else if (v24)
    {
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }

    unsigned int v18 = 1;
  }

  if (*a2 == 4 && sub_100114358(a1 + 1568, v37)) {
    *a2 = 2;
  }
  if ((v18 & 1) != 0)
  {
    uint64_t v26 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v26)
    {
      uint64_t v27 = v26;
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }
  }

  else
  {
    uint64_t v28 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 32LL))(a1);
    sub_10010B0D0(v28, a3);
  }

  return v18 ^ 1u;
}

  *uint64_t v9 = 0;
  if (a2) {
    goto LABEL_9;
  }
  return v3;
}

        if (v18 != v15)
        {
          uint64_t v20 = strlen("eventsOff");
LABEL_41:
          if (v20 != v15) {
            goto LABEL_117;
          }
          uint64_t v21 = &__s1;
LABEL_58:
          if (memcmp(v21, "eventsOff", v15)) {
            goto LABEL_117;
          }
          *(void *)uint64_t v63 = a3;
          *(void *)&v63[8] = "eventList";
          sub_1000A99D0((uint64_t)v63, &v57);
          xpc::bridge(object, (xpc *)&v57, v26);
          sub_100162F60(&buf, (CFTypeRef *)object);
          sub_100162FE4((const void **)object);
          xpc_release(v57);
          if (buf.__r_.__value_.__r.__words[0]) {
            uint64_t v27 = sub_100163014;
          }
          else {
            uint64_t v27 = 0LL;
          }
          if (v27)
          {
            uint64_t v28 = *a2;
            uint64_t v52 = v28;
            if (v28) {
              xpc_retain(v28);
            }
            else {
              uint64_t v52 = xpc_null_create();
            }
            sub_10015A530(&v51, (const void **)&buf.__r_.__value_.__l.__data_);
            sub_100162D50(a1, &v52, 0, &v51);
            sub_10015A564(&v51);
            xpc_release(v52);
            BOOL v29 = 0LL;
            uint64_t v52 = 0LL;
            goto LABEL_78;
          }

      sub_10016EC50(a4, &v32);
      sub_10016F8B8(a4);
      if (v15)
      {
        sub_10016B318((const char *)a4, (uint64_t)a3, (int *)&__str);
        if (a3)
        {
          uint64_t v16 = a3[2];
          if ((v16 & 1) != 0 && (v16 != 1 || *(_DWORD *)a3))
          {
            uint64_t v21 = 2;
            goto LABEL_77;
          }
        }

        if (LODWORD(__str.__r_.__value_.__l.__data_) == 4) {
          break;
        }
      }

    unsigned int v10 = 17;
LABEL_33:
    sub_1001677F4(v10, a1, a2, (uint64_t)a4, (uint64_t)"boost::filesystem::copy_file");
    goto LABEL_34;
  }

  objc_autoreleasePoolPop(v7);
  return v17;
}

        uint64_t v38 = -[NSString initWithData:encoding:](objc_alloc(&OBJC_CLASS___NSString), "initWithData:encoding:", v28, 4LL);
        if (!v38)
        {
          uint64_t v49 = sub_1000160F4("com.apple.wpantund.tnm", "threadStart");
          uint64_t v50 = (os_log_s *)objc_claimAutoreleasedReturnValue(v49);
          if (os_log_type_enabled(v50, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)unsigned int v144 = 136315650;
            uint64_t v145 = "-[ThreadNetworkManagerInstance checkAndUpdateNetworkParamsFromMdnsScan:borderAgentID:leaderBorderAgen"
                   "tID:isNwFound:numAppleBRs:numThirdPartyBRs:isLeaderAppleDevice:numThreadNwsFound:shouldRunPeriodicTdm:]";
            uint64_t v146 = 1024;
            LODWORD(v147) = 6670;
            WORD2(v147) = 2112;
            *(void *)((char *)&v147 + 6) = v23;
            _os_log_error_impl( (void *)&_mh_execute_header,  v50,  OS_LOG_TYPE_ERROR,  "%s : %d network name nsstring conversion failure for server : %@, continue to next network",  v144,  0x1Cu);
          }

          goto LABEL_96;
        }

        uint64_t v128 = -[NSString initWithData:encoding:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithData:encoding:",  v138,  4LL);
        if (!v128)
        {
          char v51 = sub_1000160F4("com.apple.wpantund.tnm", "threadStart");
          log = (os_log_s *)objc_claimAutoreleasedReturnValue(v51);
          if (os_log_type_enabled(log, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)unsigned int v144 = 136315650;
            uint64_t v145 = "-[ThreadNetworkManagerInstance checkAndUpdateNetworkParamsFromMdnsScan:borderAgentID:leaderBorderAgen"
                   "tID:isNwFound:numAppleBRs:numThirdPartyBRs:isLeaderAppleDevice:numThreadNwsFound:shouldRunPeriodicTdm:]";
            uint64_t v146 = 1024;
            LODWORD(v147) = 6676;
            WORD2(v147) = 2112;
            *(void *)((char *)&v147 + 6) = v23;
            _os_log_error_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_ERROR,  "%s : %d vendor name nsstring conversion failure for server : %@, continue to next network",  v144,  0x1Cu);
          }

          goto LABEL_95;
        }

        -[os_log_s addObject:](v131, "addObject:", v38);
        if (-[NSString isEqualToString:](v128, "isEqualToString:", @"Apple Inc."))
        {
          int v44 = *a7 + 1;
          if (__OFADD__(*a7, 1)) {
            goto LABEL_138;
          }
          __int16 v45 = a7;
        }

        else
        {
          int v44 = *a8 + 1;
          if (__OFADD__(*a8, 1)) {
            goto LABEL_138;
          }
          __int16 v45 = a8;
        }

        os_log_s *v45 = v44;
        if ((v34 & 1) == 0)
        {
          uint64_t v58 = -[NSString initWithData:encoding:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithData:encoding:",  v141,  4LL);
          uint64_t v59 = -[NSString initWithData:encoding:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithData:encoding:",  v140,  4LL);
          log = (os_log_s *)v58;
          uint64_t v126 = v59;
          if (v58 && (__int16 v60 = v59) != 0LL)
          {
            uint64_t v61 = (NSString *)objc_claimAutoreleasedReturnValue(-[ThreadNetworkManagerInstance dataFromHexString:](self, "dataFromHexString:", v58));
            uint64_t v62 = objc_claimAutoreleasedReturnValue(-[ThreadNetworkManagerInstance dataFromHexString:](self, "dataFromHexString:", v60));
            uint64_t v63 = (void *)v62;
            uint64_t v125 = v61;
            if (v61 && v62)
            {
              if ([v130 isEqualToData:v62]
                && (uint64_t v64 = (void *)objc_claimAutoreleasedReturnValue([v135 networkName]),
                    unsigned int v65 = [v64 isEqualToString:v38],
                    v64,
                    v65))
              {
                char v124 = 1;
                if (-[NSString isEqualToString:](v128, "isEqualToString:", @"Apple Inc.")) {
                  *a9 = 1;
                }
              }

              else
              {
                char v124 = 0;
              }

              char v81 = (void *)objc_claimAutoreleasedReturnValue([v135 networkName]);
              if ([v81 isEqualToString:v38])
              {
                int v82 = (void *)objc_claimAutoreleasedReturnValue([v135 extendedPANID]);
                if ([v82 isEqualToData:v125])
                {
                  uint64_t v83 = [v137 isEqualToData:v63];

                  if (v83)
                  {
                    int v84 = sub_1000160F4("com.apple.wpantund.tnm", "threadStart");
                    unsigned int v85 = (os_log_s *)objc_claimAutoreleasedReturnValue(v84);
                    if (os_log_type_enabled(v85, OS_LOG_TYPE_INFO))
                    {
                      int v86 = (void *)objc_claimAutoreleasedReturnValue([v135 networkName]);
                      *(_DWORD *)unsigned int v144 = 136315906;
                      uint64_t v145 = "-[ThreadNetworkManagerInstance checkAndUpdateNetworkParamsFromMdnsScan:borderAgentID:leader"
                             "BorderAgentID:isNwFound:numAppleBRs:numThirdPartyBRs:isLeaderAppleDevice:numThreadNwsFound:"
                             "shouldRunPeriodicTdm:]";
                      uint64_t v146 = 1024;
                      LODWORD(v147) = 6718;
                      WORD2(v147) = 2112;
                      *(void *)((char *)&v147 + 6) = v86;
                      HIWORD(v147) = 2112;
                      *(void *)char v148 = v38;
                      _os_log_impl( (void *)&_mh_execute_header,  v85,  OS_LOG_TYPE_INFO,  "%s : %d: Network :%@ matches with mdns record :%@",  v144,  0x26u);
                    }

                    *a6 = 1;
                  }
                }

                else
                {
                }
              }

              else
              {
              }

              int v87 = sub_1000160F4("com.apple.wpantund.tnm", "threadStart");
              unint64_t v88 = (os_log_s *)objc_claimAutoreleasedReturnValue(v87);
              if (os_log_type_enabled(v88, OS_LOG_TYPE_INFO))
              {
                *(_DWORD *)unsigned int v144 = 136317442;
                uint64_t v145 = "-[ThreadNetworkManagerInstance checkAndUpdateNetworkParamsFromMdnsScan:borderAgentID:leaderBorder"
                       "AgentID:isNwFound:numAppleBRs:numThirdPartyBRs:isLeaderAppleDevice:numThreadNwsFound:shouldRunPeriodicTdm:]";
                uint64_t v146 = 1024;
                LODWORD(v147) = 6722;
                WORD2(v147) = 2112;
                *(void *)((char *)&v147 + 6) = v38;
                HIWORD(v147) = 2112;
                *(void *)char v148 = v58;
                *(_WORD *)&v148[8] = 2112;
                *(void *)&v148[10] = v126;
                char v149 = 2112;
                unsigned int v150 = v125;
                uint64_t v151 = 2112;
                uint64_t v152 = v63;
                unint64_t v153 = 2112;
                char v154 = v137;
                char v155 = 2112;
                uint64_t v156 = v138;
                uint64_t v157 = 1024;
                uint64_t v158 = v124;
                _os_log_impl( (void *)&_mh_execute_header,  v88,  OS_LOG_TYPE_INFO,  "%s:%d: network name str : %@, xpan id str : %@, baid str : %@, foundxpanid : %@, foundbaid : %@ nwFoun d:true, borderAgentID : %@, vendorName:%@, isLeader:%d",  v144,  0x5Eu);
              }
            }

            else
            {
              uint64_t v76 = sub_1000160F4("com.apple.wpantund.tnm", "threadStart");
              uint64_t v77 = (os_log_s *)objc_claimAutoreleasedReturnValue(v76);
              if (os_log_type_enabled(v77, OS_LOG_TYPE_ERROR))
              {
                *(_DWORD *)unsigned int v144 = 136315650;
                uint64_t v145 = "-[ThreadNetworkManagerInstance checkAndUpdateNetworkParamsFromMdnsScan:borderAgentID:leaderBorder"
                       "AgentID:isNwFound:numAppleBRs:numThirdPartyBRs:isLeaderAppleDevice:numThreadNwsFound:shouldRunPeriodicTdm:]";
                uint64_t v146 = 1024;
                LODWORD(v147) = 6703;
                WORD2(v147) = 2112;
                *(void *)((char *)&v147 + 6) = v23;
                _os_log_error_impl( (void *)&_mh_execute_header,  v77,  OS_LOG_TYPE_ERROR,  "%s : %d hex string conversion to nsdata failure for server : %@, continue to next network",  v144,  0x1Cu);
              }
            }
          }

          else
          {
            uint64_t v66 = sub_1000160F4("com.apple.wpantund.tnm", "threadStart");
            uint64_t v67 = (os_log_s *)objc_claimAutoreleasedReturnValue(v66);
            if (os_log_type_enabled(v67, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)unsigned int v144 = 136315650;
              uint64_t v145 = "-[ThreadNetworkManagerInstance checkAndUpdateNetworkParamsFromMdnsScan:borderAgentID:leaderBorderAg"
                     "entID:isNwFound:numAppleBRs:numThirdPartyBRs:isLeaderAppleDevice:numThreadNwsFound:shouldRunPeriodicTdm:]";
              uint64_t v146 = 1024;
              LODWORD(v147) = 6695;
              WORD2(v147) = 2112;
              *(void *)((char *)&v147 + 6) = v23;
              _os_log_error_impl( (void *)&_mh_execute_header,  v67,  OS_LOG_TYPE_ERROR,  "%s : %d xpanid and baid nsstring conversion failure, server : %@, continue to next network",  v144,  0x1Cu);
            }
          }

          goto LABEL_95;
        }

        uint64_t v52 = (void *)objc_claimAutoreleasedReturnValue([v135 networkName]);
        if ([v52 isEqualToString:v38])
        {
          char v53 = (void *)objc_claimAutoreleasedReturnValue([v135 extendedPANID]);
          if ([v53 isEqualToData:v141])
          {
            uint64_t v54 = [v137 isEqualToData:v140];

            if (v54)
            {
              char v55 = sub_1000160F4("com.apple.wpantund.tnm", "threadStart");
              int v56 = (os_log_s *)objc_claimAutoreleasedReturnValue(v55);
              if (os_log_type_enabled(v56, OS_LOG_TYPE_INFO))
              {
                unsigned __int8 v57 = (void *)objc_claimAutoreleasedReturnValue([v135 networkName]);
                *(_DWORD *)unsigned int v144 = 136315906;
                uint64_t v145 = "-[ThreadNetworkManagerInstance checkAndUpdateNetworkParamsFromMdnsScan:borderAgentID:leaderBorder"
                       "AgentID:isNwFound:numAppleBRs:numThirdPartyBRs:isLeaderAppleDevice:numThreadNwsFound:shouldRunPeriodicTdm:]";
                uint64_t v146 = 1024;
                LODWORD(v147) = 6728;
                WORD2(v147) = 2112;
                *(void *)((char *)&v147 + 6) = v57;
                HIWORD(v147) = 2112;
                *(void *)char v148 = v38;
                _os_log_impl( (void *)&_mh_execute_header,  v56,  OS_LOG_TYPE_INFO,  "%s : %d: Network :%@ matches with mdns record :%@",  v144,  0x26u);
              }

              *a6 = 1;
            }
          }

          else
          {
          }
        }

        else
        {
        }

        int v68 = (void *)objc_claimAutoreleasedReturnValue([v135 networkName]);
        if ([v68 isEqualToString:v38])
        {
          int v69 = [v130 isEqualToData:v140];

          if (v69)
          {
            char v70 = 1;
            if (-[NSString isEqualToString:](v128, "isEqualToString:", @"Apple Inc.")) {
              *a9 = 1;
            }
            goto LABEL_72;
          }
        }

        else
        {
        }

        char v70 = 0;
LABEL_72:
        unsigned int v71 = (void *)objc_claimAutoreleasedReturnValue([v135 networkName]);
        if ([v71 isEqualToString:v38])
        {
          uint64_t v72 = (void *)objc_claimAutoreleasedReturnValue([v135 extendedPANID]);
          if ([v72 isEqualToData:v141])
          {
            uint64_t v73 = -[NSString isEqualToString:](v128, "isEqualToString:", @"Apple Inc.");

            if (v73)
            {
              unint64_t v74 = v140;
              sub_100159A78( (unint64_t)[v74 bytes],  (uint64_t)objc_msgSend(v74, "length"),  v144,  0x100uLL,  0);
              uint64_t v75 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithCString:encoding:]( &OBJC_CLASS___NSString,  "stringWithCString:encoding:",  v144,  +[NSString defaultCStringEncoding](&OBJC_CLASS___NSString, "defaultCStringEncoding")));
              -[NSMutableArray addObject:](v139, "addObject:", v75);
            }
          }

          else
          {
          }
        }

        else
        {
        }

        uint64_t v78 = sub_1000160F4("com.apple.wpantund.tnm", "threadStart");
        log = (os_log_s *)objc_claimAutoreleasedReturnValue(v78);
        if (os_log_type_enabled(log, OS_LOG_TYPE_INFO))
        {
          uint64_t v79 = (void *)objc_claimAutoreleasedReturnValue([v135 networkName]);
          unsigned int v80 = (void *)objc_claimAutoreleasedReturnValue([v135 extendedPANID]);
          *(_DWORD *)unsigned int v144 = 136317442;
          uint64_t v145 = "-[ThreadNetworkManagerInstance checkAndUpdateNetworkParamsFromMdnsScan:borderAgentID:leaderBorderAgentI"
                 "D:isNwFound:numAppleBRs:numThirdPartyBRs:isLeaderAppleDevice:numThreadNwsFound:shouldRunPeriodicTdm:]";
          uint64_t v146 = 1024;
          LODWORD(v147) = 6761;
          WORD2(v147) = 2112;
          *(void *)((char *)&v147 + 6) = v79;
          HIWORD(v147) = 2112;
          *(void *)char v148 = v80;
          *(_WORD *)&v148[8] = 2112;
          *(void *)&v148[10] = v137;
          char v149 = 2112;
          unsigned int v150 = v38;
          uint64_t v151 = 2112;
          uint64_t v152 = v141;
          unint64_t v153 = 2112;
          char v154 = v140;
          char v155 = 2112;
          uint64_t v156 = v138;
          uint64_t v157 = 1024;
          uint64_t v158 = v70;
          _os_log_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_INFO,  "%s:%d: Comparing  => storing(network name:%@, xpanid :%@, baid : %@), mdns (network name:%@, xpanid:%@, baid : %@, vendorName:%@, isLeader:%d)",  v144,  0x5Eu);
        }

  ot::BorderRouter::AgentInstance::ResetSocketClosedFlag(v9);
LABEL_33:
  byte_1002D1A58 = 0;
  uint64_t v19 = (os_log_s *)sub_1000160F4("com.apple.wpantund.commissioning", "commissioning");
  if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
  {
    LOWORD(buf.fds_bits[0]) = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_INFO,  "BA Wrapper: Border Agent stopped",  (uint8_t *)&buf,  2u);
  }

  os_state_remove_handler(v8);
  block[0] = _NSConcreteStackBlock;
  block[1] = 0x40000000LL;
  block[2] = sub_1001F1D3C;
  block[3] = &unk_1002B5C28;
  block[4] = &v23;
  dispatch_sync(v7, block);
  dispatch_release(v7);
  uint64_t v3 = 0LL;
LABEL_36:
  _Block_object_dispose(&v23, 8);
  return v3;
}

void sub_10004F484( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26)
{
}

void *sub_10004F5B8(uint64_t a1)
{
  v104[0] = (uint64_t)off_1002B02C8 + 1;
  v104[1] = (uint64_t)sub_100058BA0;
  sub_100058840(a1, "NCP:HardwareSerialNumber", 15507, v104);
  sub_10004BED0(v104);
  v103[0] = (uint64_t)off_1002B02C8 + 1;
  v103[1] = (uint64_t)sub_100058D9C;
  sub_100058840(a1, "NCP:ChannelMask", 34, v103);
  sub_10004BED0(v103);
  v102[0] = (uint64_t)off_1002B02C8 + 1;
  v102[1] = (uint64_t)sub_100058D9C;
  sub_100058840(a1, "NCP:PreferredChannelMask", 41, v102);
  sub_10004BED0(v102);
  sub_100058688(a1, "Thread:ActiveDataset:Bytes", 5437, "D");
  v101[1] = (uint64_t)sub_100058E5C;
  v101[2] = 0LL;
  v101[0] = (uint64_t)off_1002B0308 + 1;
  sub_100058840(a1, "Thread:ActiveDataset", 5400, v101);
  sub_10004BED0(v101);
  v100[1] = (uint64_t)sub_100058E5C;
  v100[2] = 1LL;
  v100[0] = (uint64_t)off_1002B0308 + 1;
  sub_100058840(a1, "Thread:ActiveDataset:AsValMap", 5400, v100);
  sub_10004BED0(v100);
  v99[2] = 0LL;
  v99[1] = (uint64_t)sub_100058E5C;
  v99[0] = (uint64_t)off_1002B0308 + 1;
  sub_100058840(a1, "Thread:PendingDataset", 5401, v99);
  sub_10004BED0(v99);
  v98[2] = 1LL;
  v98[1] = (uint64_t)sub_100058E5C;
  v98[0] = (uint64_t)off_1002B0308 + 1;
  sub_100058840(a1, "Thread:PendingDataset:AsValMap", 5401, v98);
  sub_10004BED0(v98);
  v97[2] = 0LL;
  v97[1] = (uint64_t)sub_100058FFC;
  v97[0] = (uint64_t)off_1002B0308 + 1;
  sub_100058840(a1, "Thread:Parent", 81, v97);
  sub_10004BED0(v97);
  v96[2] = 1LL;
  v96[1] = (uint64_t)sub_100058FFC;
  v96[0] = (uint64_t)off_1002B0308 + 1;
  sub_100058840(a1, "Thread:Parent:AsValMap", 81, v96);
  sub_10004BED0(v96);
  v95[2] = 0LL;
  v95[1] = (uint64_t)sub_1000595C0;
  v95[0] = (uint64_t)off_1002B0308 + 1;
  sub_100058840(a1, "Thread:AddressCacheTable", 5411, v95);
  sub_10004BED0(v95);
  v94[2] = 1LL;
  v94[1] = (uint64_t)sub_1000595C0;
  v94[0] = (uint64_t)off_1002B0308 + 1;
  sub_100058840(a1, "Thread:AddressCacheTable:AsValMap", 5411, v94);
  sub_10004BED0(v94);
  v93[1] = (uint64_t)sub_100059AA4;
  v93[0] = (uint64_t)off_1002B02C8 + 1;
  sub_100058AC0(a1, "NCP:MCUPowerState", 13, 13, v93);
  sub_10004BED0(v93);
  v92[1] = (uint64_t)sub_100059C88;
  v92[0] = (uint64_t)off_1002B02C8 + 1;
  sub_100058AC0(a1, "Thread:Joiner:State", 1027, 128, v92);
  sub_10004BED0(v92);
  v91[1] = (uint64_t)sub_100059EE4;
  v91[0] = (uint64_t)off_1002B02C8 + 1;
  sub_100058AC0(a1, "Commissioner:State", 1024, 130, v91);
  sub_10004BED0(v91);
  v90[2] = 0LL;
  v90[1] = (uint64_t)sub_100059FD8;
  v90[0] = (uint64_t)off_1002B0308 + 1;
  sub_100058AC0(a1, "MAC:Whitelist:Entries", 512, 4864, v90);
  sub_10004BED0(v90);
  v89[2] = 1LL;
  v89[1] = (uint64_t)sub_100059FD8;
  v89[0] = (uint64_t)off_1002B0308 + 1;
  sub_100058AC0(a1, "MAC:Whitelist:Entries:AsValMap", 512, 4864, v89);
  sub_10004BED0(v89);
  v88[2] = 0LL;
  v88[1] = (uint64_t)sub_10005A3DC;
  v88[0] = (uint64_t)off_1002B0308 + 1;
  sub_100058AC0(a1, "MAC:Blacklist:Entries", 512, 4870, v88);
  sub_10004BED0(v88);
  v87[2] = 1LL;
  v87[1] = (uint64_t)sub_10005A3DC;
  v87[0] = (uint64_t)off_1002B0308 + 1;
  sub_100058AC0(a1, "MAC:Blacklist:Entries:AsValMap", 512, 4870, v87);
  sub_10004BED0(v87);
  v86[2] = 0LL;
  v86[1] = (uint64_t)sub_100059FD8;
  v86[0] = (uint64_t)off_1002B0308 + 1;
  sub_100058AC0(a1, "MAC:Filter:Entries", 512, 4872, v86);
  sub_10004BED0(v86);
  v85[2] = 1LL;
  v85[1] = (uint64_t)sub_100059FD8;
  v85[0] = (uint64_t)off_1002B0308 + 1;
  sub_100058AC0(a1, "MAC:Filter:Entries:AsValMap", 512, 4872, v85);
  sub_10004BED0(v85);
  v84[2] = 0LL;
  v84[1] = (uint64_t)sub_10005A67C;
  v84[0] = (uint64_t)off_1002B0308 + 1;
  sub_100058AC0(a1, "ChannelMonitor:ChannelQuality", 515, 4618, v84);
  sub_10004BED0(v84);
  v83[2] = 1LL;
  v83[1] = (uint64_t)sub_10005A67C;
  v83[0] = (uint64_t)off_1002B0308 + 1;
  sub_100058AC0(a1, "ChannelMonitor:ChannelQuality:AsValMap", 515, 4618, v83);
  sub_10004BED0(v83);
  v82[1] = (uint64_t)sub_100058D9C;
  v82[0] = (uint64_t)off_1002B02C8 + 1;
  sub_100058AC0(a1, "ChannelManager:SupportedChannelMask", 517, 6402, v82);
  sub_10004BED0(v82);
  v81[1] = (uint64_t)sub_100058D9C;
  v81[0] = (uint64_t)off_1002B02C8 + 1;
  sub_100058AC0(a1, "ChannelManager:FavoredChannelMask", 517, 6403, v81);
  sub_10004BED0(v81);
  v80[2] = 0LL;
  v80[1] = (uint64_t)sub_10005AA64;
  v80[0] = (uint64_t)off_1002B0308 + 1;
  sub_100058AC0(a1, "NCP:Counter:AllMac", 5, 1681, v80);
  sub_10004BED0(v80);
  v79[2] = 1LL;
  v79[1] = (uint64_t)sub_10005AA64;
  v79[0] = (uint64_t)off_1002B0308 + 1;
  sub_100058AC0(a1, "NCP:Counter:AllMac:AsValMap", 5, 1681, v79);
  sub_10004BED0(v79);
  char v77 = 1;
  uint64_t v78 = "TPC:FrameTxPowerHistogram";
  v76[1] = (uint64_t)sub_10005AE9C;
  v76[0] = (uint64_t)off_1002B0328 + 1;
  sub_100058AC0(a1, "TPC:FrameTxPowerHistogram", 529, 4645, v76);
  sub_10004BED0(v76);
  char v74 = 1;
  uint64_t v75 = "TPC:NeighborTxPowerHistogram";
  v73[1] = (uint64_t)sub_10005AE9C;
  v73[0] = (uint64_t)off_1002B0328 + 1;
  sub_100058AC0(a1, "TPC:NeighborTxPowerHistogram", 529, 4646, v73);
  sub_10004BED0(v73);
  char v71 = 1;
  uint64_t v72 = "TPC:NeighborEnergySavingsFactorHistogram";
  v70[1] = (uint64_t)sub_10005AE9C;
  v70[0] = (uint64_t)off_1002B0328 + 1;
  sub_100058AC0(a1, "TPC:NeighborEnergySavingsFactorHistogram", 529, 4647, v70);
  sub_10004BED0(v70);
  v69[2] = 0LL;
  v69[1] = (uint64_t)sub_10005B484;
  v69[0] = (uint64_t)off_1002B0308 + 1;
  sub_100058AC0(a1, "NCP:Counter:Thread:Mle", 5, 1682, v69);
  sub_10004BED0(v69);
  v68[2] = 1LL;
  v68[1] = (uint64_t)sub_10005B484;
  v68[0] = (uint64_t)off_1002B0308 + 1;
  sub_100058AC0(a1, "NCP:Counter:Thread:Mle:AsValMap", 5, 1682, v68);
  sub_10004BED0(v68);
  v67[2] = 0LL;
  v67[1] = (uint64_t)sub_10005B758;
  v67[0] = (uint64_t)off_1002B0308 + 1;
  sub_100058AC0(a1, "NCP:Counter:AllIPv6", 5, 1683, v67);
  sub_10004BED0(v67);
  void v66[2] = 1LL;
  v66[1] = (uint64_t)sub_10005B758;
  v66[0] = (uint64_t)off_1002B0308 + 1;
  sub_100058AC0(a1, "NCP:Counter:AllIPv6:AsValMap", 5, 1683, v66);
  sub_10004BED0(v66);
  v65[2] = 0LL;
  v65[1] = (uint64_t)sub_10005BBAC;
  v65[0] = (uint64_t)off_1002B0308 + 1;
  sub_100058AC0(a1, "TimeSync:ThreadNetworkTime", 519, 6407, v65);
  sub_10004BED0(v65);
  v64[2] = 1LL;
  v64[1] = (uint64_t)sub_10005BBAC;
  v64[0] = (uint64_t)off_1002B0308 + 1;
  sub_100058AC0(a1, "TimeSync:ThreadNetworkTime:AsValMap", 519, 6407, v64);
  sub_10004BED0(v64);
  v63[2] = 0LL;
  v63[1] = (uint64_t)sub_10005BCBC;
  v63[0] = (uint64_t)off_1002B0308 + 1;
  sub_100058AC0(a1, "Thread:Leader:Services", 1029, 162, v63);
  sub_10004BED0(v63);
  v62[2] = 1LL;
  v62[1] = (uint64_t)sub_10005BCBC;
  v62[0] = (uint64_t)off_1002B0308 + 1;
  sub_100058AC0(a1, "Thread:Leader:Services:AsValMap", 1029, 162, v62);
  sub_10004BED0(v62);
  v61[2] = 0LL;
  v61[1] = (uint64_t)sub_10005C0CC;
  v61[0] = (uint64_t)off_1002B0308 + 1;
  sub_100058AC0(a1, "NCP:CoexMetrics", 523, 4620, v61);
  sub_10004BED0(v61);
  v60[2] = 1LL;
  v60[1] = (uint64_t)sub_10005C0CC;
  v60[0] = (uint64_t)off_1002B0308 + 1;
  sub_100058AC0(a1, "NCP:CoexMetrics:AsValMap", 523, 4620, v60);
  sub_10004BED0(v60);
  v59[2] = 0LL;
  v59[1] = (uint64_t)sub_10005C80C;
  v59[0] = (uint64_t)off_1002B0308 + 1;
  sub_100058AC0(a1, "NCP:MacRetryHistogram", 524, 1684, v59);
  sub_10004BED0(v59);
  v58[2] = 1LL;
  v58[1] = (uint64_t)sub_10005C80C;
  v58[0] = (uint64_t)off_1002B0308 + 1;
  sub_100058AC0(a1, "NCP:MacRetryHistogram:AsValMap", 524, 1684, v58);
  sub_10004BED0(v58);
  v57[1] = (uint64_t)sub_10005CD84;
  v57[0] = (uint64_t)off_1002B02C8 + 1;
  sub_100058AC0(a1, "Thread:DUA:InterfaceIdentifier", 527, 5430, v57);
  sub_10004BED0(v57);
  v56[1] = (uint64_t)sub_10005CE8C;
  v56[0] = (uint64_t)off_1002B0348 + 1;
  sub_100058AC0(a1, "Thread:BackboneRouter:Primary", 54, 5431, v56);
  sub_10004BED0(v56);
  v55[1] = (uint64_t)sub_100056594;
  v55[0] = (uint64_t)off_1002B0348 + 1;
  sub_100058AC0(a1, "Thread:BackboneRouter:State", 1032, 5432, v55);
  sub_10004BED0(v55);
  v54[1] = (uint64_t)sub_10005D030;
  v54[0] = (uint64_t)off_1002B0348 + 1;
  sub_100058AC0(a1, "Thread:BackboneRouter:Config", 1032, 5433, v54);
  sub_10004BED0(v54);
  void v53[2] = 0LL;
  v53[3] = a1;
  v53[1] = (uint64_t)sub_10005D134;
  v53[0] = (uint64_t)off_1002B0368 + 1;
  sub_100058498(a1, "Config:NCP:DriverName", v53);
  sub_100070E0C(v53);
  __n128 v52[2] = 0LL;
  v52[3] = a1;
  v52[1] = (uint64_t)sub_10005D200;
  v52[0] = (uint64_t)off_1002B0368 + 1;
  sub_100058498(a1, "NCP:Capabilities", v52);
  sub_100070E0C(v52);
  void v51[2] = 0LL;
  v51[3] = a1;
  v51[1] = (uint64_t)sub_10005D37C;
  v51[0] = (uint64_t)off_1002B0368 + 1;
  sub_100058498(a1, "Network:IsCommissioned", v51);
  sub_100070E0C(v51);
  v50[2] = 0LL;
  v50[3] = a1;
  v50[1] = (uint64_t)sub_10005D410;
  v50[0] = (uint64_t)off_1002B0368 + 1;
  sub_100058498(a1, "Thread:RouterID", v50);
  sub_100070E0C(v50);
  v49[2] = 0LL;
  v49[3] = a1;
  v49[1] = (uint64_t)sub_10005D504;
  v49[0] = (uint64_t)off_1002B0368 + 1;
  sub_100058498(a1, "Thread:Config:FilterRLOCAddresses", v49);
  sub_100070E0C(v49);
  v48[2] = 0LL;
  v48[3] = a1;
  v48[1] = (uint64_t)sub_10005D598;
  v48[0] = (uint64_t)off_1002B0368 + 1;
  sub_100058498(a1, "Thread:Config:FilterALOCAddresses", v48);
  sub_100070E0C(v48);
  v47[2] = 0LL;
  v47[3] = a1;
  v47[1] = (uint64_t)sub_10005D62C;
  v47[0] = (uint64_t)off_1002B0368 + 1;
  sub_100058498(a1, "IPv6:MeshLocalPrefix", v47);
  sub_100070E0C(v47);
  __int128 v46[2] = 0LL;
  v46[3] = a1;
  v46[1] = (uint64_t)sub_10005D7F8;
  v46[0] = (uint64_t)off_1002B0368 + 1;
  sub_100058498(a1, "IPv6:MeshLocalAddress", v46);
  sub_100070E0C(v46);
  void v45[2] = 0LL;
  v45[3] = a1;
  v45[1] = (uint64_t)sub_10005D95C;
  v45[0] = (uint64_t)off_1002B0368 + 1;
  sub_100058498(a1, "IPv6:LinkLocalAddress", v45);
  sub_100070E0C(v45);
  v44[2] = 0LL;
  v44[3] = a1;
  v44[1] = (uint64_t)sub_10005DAC0;
  v44[0] = (uint64_t)off_1002B0368 + 1;
  sub_100058498(a1, "Thread:ChildTable", v44);
  sub_100070E0C(v44);
  v43[2] = 0LL;
  v43[3] = a1;
  v43[1] = (uint64_t)sub_10005DB94;
  v43[0] = (uint64_t)off_1002B0368 + 1;
  sub_100058498(a1, "Thread:ChildTable:AsValMap", v43);
  sub_100070E0C(v43);
  void v42[2] = 0LL;
  v42[3] = a1;
  v42[1] = (uint64_t)sub_10005DC68;
  v42[0] = (uint64_t)off_1002B0368 + 1;
  sub_100058498(a1, "Thread:ChildTable:Addresses", v42);
  sub_100070E0C(v42);
  v41[2] = 0LL;
  v41[3] = a1;
  v41[1] = (uint64_t)sub_10005DD3C;
  v41[0] = (uint64_t)off_1002B0368 + 1;
  sub_100058498(a1, "Thread:ChildTable:Addresses:AsValMap", v41);
  sub_100070E0C(v41);
  void v40[2] = 0LL;
  v40[3] = a1;
  v40[1] = (uint64_t)sub_10005DE10;
  v40[0] = (uint64_t)off_1002B0368 + 1;
  sub_100058498(a1, "Thread:NeighborTable", v40);
  sub_100070E0C(v40);
  v39[2] = 0LL;
  void v39[3] = a1;
  v39[1] = (uint64_t)sub_10005DEE4;
  v39[0] = (uint64_t)off_1002B0368 + 1;
  sub_100058498(a1, "Thread:NeighborTable:AsValMap", v39);
  sub_100070E0C(v39);
  __int128 v38[2] = 0LL;
  v38[3] = a1;
  v38[1] = (uint64_t)sub_10005DFB8;
  v38[0] = (uint64_t)off_1002B0368 + 1;
  sub_100058498(a1, "Thread:RouterTable", v38);
  sub_100070E0C(v38);
  v37[2] = 0LL;
  v37[3] = a1;
  v37[1] = (uint64_t)sub_10005E08C;
  v37[0] = (uint64_t)off_1002B0368 + 1;
  sub_100058498(a1, "Thread:RouterTable:AsValMap", v37);
  sub_100070E0C(v37);
  v36[2] = 0LL;
  v36[3] = a1;
  v36[1] = (uint64_t)sub_10005E160;
  v36[0] = (uint64_t)off_1002B0368 + 1;
  sub_100058498(a1, "OpenThread:MsgBufferCounters", v36);
  sub_100070E0C(v36);
  __int128 v35[2] = 0LL;
  _OWORD v35[3] = a1;
  v35[1] = (uint64_t)sub_10005E230;
  v35[0] = (uint64_t)off_1002B0368 + 1;
  sub_100058498(a1, "OpenThread:MsgBufferCounters:AsString", v35);
  sub_100070E0C(v35);
  v34[2] = 0LL;
  v34[3] = a1;
  v34[1] = (uint64_t)sub_10005E300;
  v34[0] = (uint64_t)off_1002B0368 + 1;
  sub_100058498(a1, "OpenThread:SteeringData:SetWhenJoinable", v34);
  sub_100070E0C(v34);
  v33[2] = 0LL;
  v33[3] = a1;
  v33[1] = (uint64_t)sub_10005E394;
  v33[0] = (uint64_t)off_1002B0368 + 1;
  sub_100058498(a1, "OpenThread:SteeringData:Address", v33);
  sub_100070E0C(v33);
  void v32[2] = 0LL;
  v32[3] = a1;
  v32[1] = (uint64_t)sub_10005E45C;
  v32[0] = (uint64_t)off_1002B0368 + 1;
  sub_100058498(a1, "Dataset:ActiveTimestamp", v32);
  sub_100070E0C(v32);
  __int128 v31[2] = 0LL;
  v31[3] = a1;
  v31[1] = (uint64_t)sub_10005E578;
  v31[0] = (uint64_t)off_1002B0368 + 1;
  sub_100058498(a1, "Dataset:PendingTimestamp", v31);
  sub_100070E0C(v31);
  __int128 v30[2] = 0LL;
  v30[3] = a1;
  v30[1] = (uint64_t)sub_10005E694;
  v30[0] = (uint64_t)off_1002B0368 + 1;
  sub_100058498(a1, "Dataset:MasterKey", v30);
  sub_100070E0C(v30);
  v29[2] = 0LL;
  size_t v29[3] = a1;
  v29[1] = (uint64_t)sub_10005E7A4;
  v29[0] = (uint64_t)off_1002B0368 + 1;
  sub_100058498(a1, "Dataset:NetworkName", v29);
  sub_100070E0C(v29);
  __int128 v28[2] = 0LL;
  v28[3] = a1;
  v28[1] = (uint64_t)sub_10005E8B4;
  v28[0] = (uint64_t)off_1002B0368 + 1;
  sub_100058498(a1, "Dataset:ExtendedPanId", v28);
  sub_100070E0C(v28);
  __int128 v27[2] = 0LL;
  v27[3] = a1;
  v27[1] = (uint64_t)sub_10005E9C4;
  v27[0] = (uint64_t)off_1002B0368 + 1;
  sub_100058498(a1, "Dataset:MeshLocalPrefix", v27);
  sub_100070E0C(v27);
  __int128 v26[2] = 0LL;
  v26[3] = a1;
  v26[1] = (uint64_t)sub_10005EB2C;
  v26[0] = (uint64_t)off_1002B0368 + 1;
  sub_100058498(a1, "Dataset:Delay", v26);
  sub_100070E0C(v26);
  __int128 v25[2] = 0LL;
  v25[3] = a1;
  v25[1] = (uint64_t)sub_10005EC4C;
  v25[0] = (uint64_t)off_1002B0368 + 1;
  sub_100058498(a1, "Dataset:PanId", v25);
  sub_100070E0C(v25);
  __int128 v24[2] = 0LL;
  v24[3] = a1;
  v24[1] = (uint64_t)sub_10005ED6C;
  v24[0] = (uint64_t)off_1002B0368 + 1;
  sub_100058498(a1, "Dataset:Channel", v24);
  sub_100070E0C(v24);
  __int128 v23[2] = 0LL;
  void v23[3] = a1;
  v23[1] = (uint64_t)sub_10005EE8C;
  v23[0] = (uint64_t)off_1002B0368 + 1;
  sub_100058498(a1, "Dataset:PSKc", v23);
  sub_100070E0C(v23);
  __int128 v22[2] = 0LL;
  v22[3] = a1;
  v22[1] = (uint64_t)sub_10005EF9C;
  v22[0] = (uint64_t)off_1002B0368 + 1;
  sub_100058498(a1, "Dataset:ChannelMaskPage0", v22);
  sub_100070E0C(v22);
  __int128 v21[2] = 0LL;
  v21[3] = a1;
  v21[1] = (uint64_t)sub_10005F0BC;
  v21[0] = (uint64_t)off_1002B0368 + 1;
  sub_100058498(a1, "Dataset:SecPolicy:KeyRotation", v21);
  sub_100070E0C(v21);
  __int128 v20[2] = 0LL;
  void v20[3] = a1;
  v20[1] = (uint64_t)sub_10005F1DC;
  v20[0] = (uint64_t)off_1002B0368 + 1;
  sub_100058498(a1, "Dataset:SecPolicy:Flags", v20);
  sub_100070E0C(v20);
  __int128 v19[2] = 0LL;
  v19[3] = a1;
  v19[1] = (uint64_t)sub_10005F2FC;
  v19[0] = (uint64_t)off_1002B0368 + 1;
  sub_100058498(a1, "Dataset:RawTlvs", v19);
  sub_100070E0C(v19);
  v18[2] = 0LL;
  void v18[3] = a1;
  v18[0] = (uint64_t)off_1002B0368 + 1;
  v18[1] = (uint64_t)sub_10005F40C;
  sub_100058498(a1, "Dataset:DestIpAddress", v18);
  sub_100070E0C(v18);
  __n128 v17[2] = 0LL;
  v17[3] = a1;
  v17[0] = (uint64_t)off_1002B0368 + 1;
  v17[1] = (uint64_t)sub_10005F574;
  sub_100058498(a1, "Dataset:AllFields", v17);
  sub_100070E0C(v17);
  v16[2] = 0LL;
  uint64_t v16[3] = a1;
  v16[0] = (uint64_t)off_1002B0368 + 1;
  v16[1] = (uint64_t)sub_10005F574;
  sub_100058498(a1, "Dataset", v16);
  sub_100070E0C(v16);
  uint64_t v15[2] = 0LL;
  v15[3] = a1;
  v15[0] = (uint64_t)off_1002B0368 + 1;
  v15[1] = (uint64_t)sub_10005F628;
  sub_100058498(a1, "Dataset:AsValMap", v15);
  sub_100070E0C(v15);
  __n128 v14[2] = 0LL;
  uint64_t v14[3] = a1;
  v14[0] = (uint64_t)off_1002B0368 + 1;
  v14[1] = (uint64_t)sub_10005F6E0;
  sub_100058498(a1, "Dataset:Command", v14);
  sub_100070E0C(v14);
  v13[2] = 0LL;
  uint64_t v13[3] = a1;
  v13[0] = (uint64_t)off_1002B0368 + 1;
  v13[1] = (uint64_t)sub_10005F78C;
  sub_100058498(a1, "Daemon:TickleOnHostDidWake", v13);
  sub_100070E0C(v13);
  __n128 v12[2] = 0LL;
  uint64_t v12[3] = a1;
  v12[0] = (uint64_t)off_1002B0368 + 1;
  v12[1] = (uint64_t)sub_10005F820;
  sub_1000584FC(a1, "Commissioner:EnergyScanResult", 1024, v12);
  sub_100070E0C(v12);
  _OWORD v11[2] = 0LL;
  uint64_t v11[3] = a1;
  v11[0] = (uint64_t)off_1002B0368 + 1;
  v11[1] = (uint64_t)sub_10005F8A0;
  sub_1000584FC(a1, "Commissioner:PanIdConflictResult", 1024, v11);
  sub_100070E0C(v11);
  void v10[2] = 0LL;
  uint64_t v10[3] = a1;
  v10[0] = (uint64_t)off_1002B0368 + 1;
  v10[1] = (uint64_t)sub_10005F920;
  sub_1000584FC(a1, "LinkMetrics:QueryResult", 1031, v10);
  sub_100070E0C(v10);
  _OWORD v9[2] = 0LL;
  uint64_t v9[3] = a1;
  v9[0] = (uint64_t)off_1002B0368 + 1;
  v9[1] = (uint64_t)sub_10005F9A0;
  sub_1000584FC(a1, "LinkMetrics:MgmtResponse", 1031, v9);
  sub_100070E0C(v9);
  _OWORD v8[2] = 0LL;
  void v8[3] = a1;
  v8[0] = (uint64_t)off_1002B0368 + 1;
  v8[1] = (uint64_t)sub_10005FA20;
  sub_1000584FC(a1, "LinkMetrics:LastEnhAckIE", 1031, v8);
  sub_100070E0C(v8);
  v7[2] = 0LL;
  uint64_t v7[3] = a1;
  v7[0] = (uint64_t)off_1002B0368 + 1;
  v7[1] = (uint64_t)sub_10005FAA0;
  sub_1000584FC(a1, "Thread:Mlr:Response", 54, v7);
  sub_100070E0C(v7);
  v6[2] = 0LL;
  void v6[3] = a1;
  v6[0] = (uint64_t)off_1002B0368 + 1;
  v6[1] = (uint64_t)sub_10005FB20;
  sub_1000584FC(a1, "Thread:NeighborTable:ErrorRates", 516, v6);
  sub_100070E0C(v6);
  int v5[2] = 0LL;
  uint64_t v5[3] = a1;
  v5[0] = (uint64_t)off_1002B0368 + 1;
  v5[1] = (uint64_t)sub_10005FBF4;
  sub_1000584FC(a1, "Thread:NeighborTable:ErrorRates:AsValMap", 516, v5);
  sub_100070E0C(v5);
  _OWORD v4[2] = 0LL;
  v4[3] = a1;
  v4[0] = (uint64_t)off_1002B0368 + 1;
  v4[1] = (uint64_t)sub_10005FCC8;
  sub_1000584FC(a1, "POSIXApp:RCPVersion:Cached", 521, v4);
  sub_100070E0C(v4);
  v3[2] = 0LL;
  v3[3] = a1;
  v3[0] = (uint64_t)off_1002B0368 + 1;
  v3[1] = (uint64_t)sub_10005FD48;
  sub_1000584FC(a1, "MAC:Filter:FixedRssi", 512, v3);
  return sub_100070E0C(v3);
}

void sub_100051800( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *sub_100051C8C(uint64_t a1)
{
  v118[1] = (uint64_t)sub_100060A4C;
  v118[0] = (uint64_t)off_1002B0510 + 1;
  sub_1000607CC(a1, "NCP:ChannelMask", 34, 68, v118);
  sub_100071070(v118);
  memset(v117, 0, sizeof(v117));
  sub_1000608A0(a1, "MAC:Whitelist:Enabled", 512, 4865, 98, (uint64_t *)v117);
  sub_100071070(v117);
  memset(v116, 0, sizeof(v116));
  sub_1000608A0(a1, "MAC:Blacklist:Enabled", 512, 4871, 98, (uint64_t *)v116);
  sub_100071070(v116);
  memset(v115, 0, sizeof(v115));
  sub_1000608A0(a1, "Commissioner:ProvisioningUrl", 1024, 132, 85, (uint64_t *)v115);
  sub_100071070(v115);
  memset(v114, 0, sizeof(v114));
  sub_1000608A0(a1, "Commissioner:Send:MgmtGet", 1024, 6149, 100, (uint64_t *)v114);
  sub_100071070(v114);
  memset(v113, 0, sizeof(v113));
  sub_1000608A0(a1, "Commissioner:Send:MgmtSet", 1024, 6150, 100, (uint64_t *)v113);
  sub_100071070(v113);
  memset(v112, 0, sizeof(v112));
  sub_1000607CC(a1, "Cmmissioner:Joiner:Scan:Retries", 143, 67, (uint64_t *)v112);
  sub_100071070(v112);
  memset(v111, 0, sizeof(v111));
  sub_1000608A0(a1, "ChannelManager:ChannelSelect", 517, 6404, 98, (uint64_t *)v111);
  sub_100071070(v111);
  memset(v110, 0, sizeof(v110));
  sub_1000608A0(a1, "TimeSync:Period", 519, 6408, 83, (uint64_t *)v110);
  sub_100071070(v110);
  memset(v109, 0, sizeof(v109));
  sub_1000608A0(a1, "TimeSync:XtalThreshold", 519, 6409, 83, (uint64_t *)v109);
  sub_100071070(v109);
  memset(v108, 0, sizeof(v108));
  sub_1000608A0(a1, "OpenThread:LogTimestampBase", 518, 16387, 88, (uint64_t *)v108);
  sub_100071070(v108);
  v107[1] = (uint64_t)sub_100060B18;
  v107[0] = (uint64_t)off_1002B0510 + 1;
  sub_1000608A0(a1, "Commissioner:State", 1024, 130, 67, v107);
  sub_100071070(v107);
  v106[1] = (uint64_t)sub_100060C88;
  v106[0] = (uint64_t)off_1002B0510 + 1;
  sub_1000608A0(a1, "NCP:Counter:All:Reset", 5, 1280, 67, v106);
  sub_100071070(v106);
  v105[1] = (uint64_t)sub_100060CB8;
  v105[0] = (uint64_t)off_1002B0510 + 1;
  sub_1000608A0(a1, "Thread:DUA:InterfaceIdentifier", 527, 5430, 68, v105);
  sub_100071070(v105);
  v104[1] = (uint64_t)sub_100060C88;
  v104[0] = (uint64_t)off_1002B0510 + 1;
  sub_1000608A0(a1, "NCP:Counter:AllMac", 5, 1681, 67, v104);
  sub_100071070(v104);
  v103[1] = (uint64_t)sub_100060C88;
  v103[0] = (uint64_t)off_1002B0510 + 1;
  sub_1000608A0(a1, "NCP:Counter:Thread:Mle", 5, 1682, 67, v103);
  sub_100071070(v103);
  v102[1] = (uint64_t)sub_100060C88;
  v102[0] = (uint64_t)off_1002B0510 + 1;
  sub_1000608A0(a1, "NCP:Counter:AllIPv6", 5, 1683, 67, v102);
  sub_100071070(v102);
  v101[1] = (uint64_t)sub_100060C88;
  v101[0] = (uint64_t)off_1002B0510 + 1;
  sub_1000608A0(a1, "NCP:MacRetryHistogram", 524, 1684, 67, v101);
  sub_100071070(v101);
  v100[1] = (uint64_t)sub_100060DB4;
  v100[0] = (uint64_t)off_1002B0510 + 1;
  sub_1000608A0(a1, "Thread:BackboneRouter:State", 1032, 5432, 67, v100);
  sub_100071070(v100);
  v99[1] = (uint64_t)sub_100060F4C;
  v99[0] = (uint64_t)off_1002B0510 + 1;
  sub_1000608A0(a1, "Thread:BackboneRouter:Register", 1032, 5434, 67, v99);
  sub_100071070(v99);
  memset(v98, 0, sizeof(v98));
  sub_100060974(a1, "NCP:SleepyPollInterval", 49, 58, 76, (uint64_t *)v98);
  sub_100071070(v98);
  memset(v97, 0, sizeof(v97));
  sub_100060974(a1, "TmfProxy:Enabled", 1025, 5393, 98, (uint64_t *)v97);
  sub_100071070(v97);
  memset(v96, 0, sizeof(v96));
  sub_100060974(a1, "JamDetection:Enable", 6, 4608, 98, (uint64_t *)v96);
  sub_100071070(v96);
  memset(v95, 0, sizeof(v95));
  sub_100060974(a1, "JamDetection:RssiThreshold", 6, 4610, 99, (uint64_t *)v95);
  sub_100071070(v95);
  memset(v94, 0, sizeof(v94));
  sub_100060974(a1, "JamDetection:Window", 6, 4611, 67, (uint64_t *)v94);
  sub_100071070(v94);
  memset(v93, 0, sizeof(v93));
  sub_100060974(a1, "JamDetection:BusyPeriod", 6, 4612, 67, (uint64_t *)v93);
  sub_100071070(v93);
  memset(v92, 0, sizeof(v92));
  sub_100060974(a1, "com.nestlabs.internal:Legacy:MeshLocalPrefix", 15296, 15297, 68, (uint64_t *)v92);
  sub_100071070(v92);
  memset(v91, 0, sizeof(v91));
  sub_100060974(a1, "ChildSupervision:Interval", 520, 6410, 83, (uint64_t *)v91);
  sub_100071070(v91);
  memset(v90, 0, sizeof(v90));
  sub_100060974(a1, "ChildSupervision:CheckTimeout", 520, 6411, 83, (uint64_t *)v90);
  sub_100071070(v90);
  memset(v89, 0, sizeof(v89));
  sub_1000608A0(a1, "ChannelManager:NewChannel", 517, 6400, 67, (uint64_t *)v89);
  sub_100071070(v89);
  memset(v88, 0, sizeof(v88));
  sub_1000608A0(a1, "ChannelManager:Delay", 517, 6401, 83, (uint64_t *)v88);
  sub_100071070(v88);
  memset(v87, 0, sizeof(v87));
  sub_100060974(a1, "ChannelManager:AutoSelect:Enabled", 517, 6405, 98, (uint64_t *)v87);
  sub_100071070(v87);
  memset(v86, 0, sizeof(v86));
  sub_100060974(a1, "ChannelManager:AutoSelect:Interval", 517, 6406, 76, (uint64_t *)v86);
  sub_100071070(v86);
  memset(v85, 0, sizeof(v85));
  sub_100060974(a1, "OpenThread:SLAAC:Enabled", 522, 6414, 98, (uint64_t *)v85);
  sub_100071070(v85);
  memset(v84, 0, sizeof(v84));
  sub_100060974(a1, "NCP:Coex:Enable", 523, 4621, 98, (uint64_t *)v84);
  sub_100071070(v84);
  memset(v83, 0, sizeof(v83));
  sub_100060974(a1, "ChannelUtilizationMonitor:SampleInterval", 638, 4622, 76, (uint64_t *)v83);
  sub_100071070(v83);
  memset(v82, 0, sizeof(v82));
  sub_100060974(a1, "ChannelUtilizationMonitor:NoAckFailureThreshold", 638, 4624, 67, (uint64_t *)v82);
  sub_100071070(v82);
  memset(v81, 0, sizeof(v81));
  sub_100060974(a1, "ChannelUtilizationMonitor:CcaFailureThreshold", 638, 4623, 67, (uint64_t *)v81);
  sub_100071070(v81);
  memset(v80, 0, sizeof(v80));
  sub_100060974(a1, "ChannelUtilizationMonitor:RxUnsolGrantUtil", 638, 4625, 67, (uint64_t *)v80);
  sub_100071070(v80);
  memset(v79, 0, sizeof(v79));
  sub_100060974(a1, "ChannelUtilizationMonitor:Enabled", 638, 4626, 98, (uint64_t *)v79);
  sub_100071070(v79);
  memset(v78, 0, sizeof(v78));
  sub_100060974(a1, "TPC:Mode", 529, 4628, 67, (uint64_t *)v78);
  sub_100071070(v78);
  memset(v77, 0, sizeof(v77));
  sub_100060974(a1, "TPC:StepUpAckLost", 529, 4639, 67, (uint64_t *)v77);
  sub_100071070(v77);
  memset(v76, 0, sizeof(v76));
  sub_100060974(a1, "TPC:LinkMetricsProbeInterval", 529, 4629, 76, (uint64_t *)v76);
  sub_100071070(v76);
  memset(v75, 0, sizeof(v75));
  sub_100060974(a1, "TPC:LinkMarginSetPointRouter", 529, 4631, 67, (uint64_t *)v75);
  sub_100071070(v75);
  memset(v74, 0, sizeof(v74));
  sub_100060974(a1, "TPC:LinkMarginSetPointEndDevice", 529, 4632, 67, (uint64_t *)v74);
  sub_100071070(v74);
  memset(v73, 0, sizeof(v73));
  sub_100060974(a1, "TPC:WeightFactor", 529, 4630, 67, (uint64_t *)v73);
  sub_100071070(v73);
  memset(v72, 0, sizeof(v72));
  sub_100060974(a1, "TPC:PropotionalGain", 529, 4633, 108, (uint64_t *)v72);
  sub_100071070(v72);
  memset(v71, 0, sizeof(v71));
  sub_100060974(a1, "TPC:IntegralGain", 529, 4634, 108, (uint64_t *)v71);
  sub_100071070(v71);
  memset(v70, 0, sizeof(v70));
  sub_100060974(a1, "TPC:ErrorGain:CodeWord0", 529, 4635, 99, (uint64_t *)v70);
  sub_100071070(v70);
  memset(v69, 0, sizeof(v69));
  sub_100060974(a1, "TPC:ErrorGain:CodeWord1", 529, 4636, 99, (uint64_t *)v69);
  sub_100071070(v69);
  memset(v68, 0, sizeof(v68));
  sub_100060974(a1, "TPC:ErrorGain:CodeWord2", 529, 4637, 99, (uint64_t *)v68);
  sub_100071070(v68);
  memset(v67, 0, sizeof(v67));
  sub_100060974(a1, "TPC:ErrorGain:CodeWord3", 529, 4638, 99, (uint64_t *)v67);
  sub_100071070(v67);
  v66[1] = (uint64_t)sub_100060C88;
  v66[0] = (uint64_t)off_1002B0510 + 1;
  sub_1000608A0(a1, "TPC:FrameTxPowerHistogram", 529, 4645, 67, v66);
  sub_100071070(v66);
  v65[1] = (uint64_t)sub_100060C88;
  v65[0] = (uint64_t)off_1002B0510 + 1;
  sub_1000608A0(a1, "TPC:NeighborTxPowerHistogram", 529, 4646, 67, v65);
  sub_100071070(v65);
  v64[1] = (uint64_t)sub_100060C88;
  v64[0] = (uint64_t)off_1002B0510 + 1;
  sub_1000608A0(a1, "TPC:NeighborEnergySavingsFactorHistogram", 529, 4647, 67, v64);
  sub_100071070(v64);
  v63[1] = (uint64_t)sub_100060F7C;
  v63[0] = (uint64_t)off_1002B0510 + 1;
  sub_100060974(a1, "NCP:MCUPowerState", 13, 13, 67, v63);
  sub_100071070(v63);
  v62[1] = (uint64_t)sub_100060A4C;
  v62[0] = (uint64_t)off_1002B0510 + 1;
  sub_100060974(a1, "ChannelManager:SupportedChannelMask", 517, 6402, 68, v62);
  sub_100071070(v62);
  v61[1] = (uint64_t)sub_100060A4C;
  v61[0] = (uint64_t)off_1002B0510 + 1;
  sub_100060974(a1, "ChannelManager:FavoredChannelMask", 517, 6403, 68, v61);
  sub_100071070(v61);
  v60[2] = 0LL;
  v60[3] = a1;
  v60[1] = (uint64_t)sub_1000610BC;
  v60[0] = (uint64_t)off_1002B0550 + 1;
  memset(v59, 0, sizeof(v59));
  sub_1000604D8(a1, "Network:Key", v60, (uint64_t *)v59);
  sub_100071070(v59);
  sub_100071048(v60);
  v58[2] = 0LL;
  v58[3] = a1;
  v58[1] = (uint64_t)sub_10006135C;
  v58[0] = (uint64_t)off_1002B0550 + 1;
  memset(v57, 0, sizeof(v57));
  sub_1000604D8(a1, "Interface:Up", v58, (uint64_t *)v57);
  sub_100071070(v57);
  sub_100071048(v58);
  v56[2] = 0LL;
  v56[3] = a1;
  v56[1] = (uint64_t)sub_100061594;
  v56[0] = (uint64_t)off_1002B0550 + 1;
  memset(v55, 0, sizeof(v55));
  sub_1000604D8(a1, "Network:XPANID", v56, (uint64_t *)v55);
  sub_100071070(v55);
  sub_100071048(v56);
  v54[2] = 0LL;
  uint64_t v54[3] = a1;
  v54[1] = (uint64_t)sub_100061644;
  v54[0] = (uint64_t)off_1002B0550 + 1;
  memset(v53, 0, sizeof(v53));
  sub_1000604D8(a1, "IPv6:MeshLocalPrefix", v54, (uint64_t *)v53);
  sub_100071070(v53);
  sub_100071048(v54);
  __n128 v52[2] = 0LL;
  v52[3] = a1;
  v52[1] = (uint64_t)sub_10006176C;
  v52[0] = (uint64_t)off_1002B0550 + 1;
  memset(v51, 0, sizeof(v51));
  sub_1000604D8(a1, "Thread:Config:FilterRLOCAddresses", v52, (uint64_t *)v51);
  sub_100071070(v51);
  sub_100071048(v52);
  v50[2] = 0LL;
  v50[3] = a1;
  v50[1] = (uint64_t)sub_1000617A8;
  v50[0] = (uint64_t)off_1002B0550 + 1;
  memset(v49, 0, sizeof(v49));
  sub_1000604D8(a1, "Thread:Config:FilterALOCAddresses", v50, (uint64_t *)v49);
  sub_100071070(v49);
  sub_100071048(v50);
  v48[2] = 0LL;
  v48[3] = a1;
  v48[1] = (uint64_t)sub_1000617E4;
  v48[0] = (uint64_t)off_1002B0550 + 1;
  memset(v47, 0, sizeof(v47));
  sub_1000604D8(a1, "OpenThread:SteeringData:SetWhenJoinable", v48, (uint64_t *)v47);
  sub_100071070(v47);
  sub_100071048(v48);
  __int128 v46[2] = 0LL;
  v46[3] = a1;
  v46[1] = (uint64_t)sub_100061820;
  v46[0] = (uint64_t)off_1002B0550 + 1;
  memset(v45, 0, sizeof(v45));
  sub_1000604D8(a1, "OpenThread:SteeringData:Address", v46, (uint64_t *)v45);
  sub_100071070(v45);
  sub_100071048(v46);
  v44[2] = 0LL;
  v44[3] = a1;
  v44[1] = (uint64_t)sub_1000618B4;
  v44[0] = (uint64_t)off_1002B0550 + 1;
  memset(v43, 0, sizeof(v43));
  sub_1000604D8(a1, "TmfProxy:Stream", v44, (uint64_t *)v43);
  sub_100071070(v43);
  sub_100071048(v44);
  void v42[2] = 0LL;
  v42[3] = a1;
  v42[1] = (uint64_t)sub_100061A60;
  v42[0] = (uint64_t)off_1002B0550 + 1;
  memset(v41, 0, sizeof(v41));
  sub_1000604D8(a1, "UdpForward:Stream", v42, (uint64_t *)v41);
  sub_100071070(v41);
  sub_100071048(v42);
  void v40[2] = 0LL;
  v40[3] = a1;
  v40[1] = (uint64_t)sub_100061BF0;
  v40[0] = (uint64_t)off_1002B0550 + 1;
  memset(v39, 0, sizeof(v39));
  sub_1000604D8(a1, "Dataset:ActiveTimestamp", v40, (uint64_t *)v39);
  sub_100071070(v39);
  sub_100071048(v40);
  __int128 v38[2] = 0LL;
  v38[3] = a1;
  v38[1] = (uint64_t)sub_100061C34;
  v38[0] = (uint64_t)off_1002B0550 + 1;
  memset(v37, 0, sizeof(v37));
  sub_1000604D8(a1, "Dataset:PendingTimestamp", v38, (uint64_t *)v37);
  sub_100071070(v37);
  sub_100071048(v38);
  v36[2] = 0LL;
  v36[3] = a1;
  v36[1] = (uint64_t)sub_100061C78;
  v36[0] = (uint64_t)off_1002B0550 + 1;
  memset(v35, 0, sizeof(v35));
  sub_1000604D8(a1, "Dataset:MasterKey", v36, (uint64_t *)v35);
  sub_100071070(v35);
  sub_100071048(v36);
  v34[2] = 0LL;
  v34[3] = a1;
  v34[1] = (uint64_t)sub_100061D0C;
  v34[0] = (uint64_t)off_1002B0550 + 1;
  memset(v33, 0, sizeof(v33));
  sub_1000604D8(a1, "Dataset:NetworkName", v34, (uint64_t *)v33);
  sub_100071070(v33);
  sub_100071048(v34);
  void v32[2] = 0LL;
  v32[3] = a1;
  v32[1] = (uint64_t)sub_100061D98;
  v32[0] = (uint64_t)off_1002B0550 + 1;
  memset(v31, 0, sizeof(v31));
  sub_1000604D8(a1, "Dataset:ExtendedPanId", v32, (uint64_t *)v31);
  sub_100071070(v31);
  sub_100071048(v32);
  __int128 v30[2] = 0LL;
  v30[3] = a1;
  v30[1] = (uint64_t)sub_100061E6C;
  v30[0] = (uint64_t)off_1002B0550 + 1;
  memset(v29, 0, sizeof(v29));
  sub_1000604D8(a1, "Dataset:MeshLocalPrefix", v30, (uint64_t *)v29);
  sub_100071070(v29);
  sub_100071048(v30);
  __int128 v28[2] = 0LL;
  v28[3] = a1;
  v28[1] = (uint64_t)sub_100061EAC;
  v28[0] = (uint64_t)off_1002B0550 + 1;
  memset(v27, 0, sizeof(v27));
  sub_1000604D8(a1, "Dataset:Delay", v28, (uint64_t *)v27);
  sub_100071070(v27);
  sub_100071048(v28);
  __int128 v26[2] = 0LL;
  v26[3] = a1;
  v26[1] = (uint64_t)sub_100061EEC;
  v26[0] = (uint64_t)off_1002B0550 + 1;
  memset(v25, 0, sizeof(v25));
  sub_1000604D8(a1, "Dataset:PanId", v26, (uint64_t *)v25);
  sub_100071070(v25);
  sub_100071048(v26);
  __int128 v24[2] = 0LL;
  v24[3] = a1;
  v24[1] = (uint64_t)sub_100061F2C;
  v24[0] = (uint64_t)off_1002B0550 + 1;
  memset(v23, 0, sizeof(v23));
  sub_1000604D8(a1, "Dataset:Channel", v24, (uint64_t *)v23);
  sub_100071070(v23);
  sub_100071048(v24);
  __int128 v22[2] = 0LL;
  v22[3] = a1;
  v22[1] = (uint64_t)sub_100061F6C;
  v22[0] = (uint64_t)off_1002B0550 + 1;
  memset(v21, 0, sizeof(v21));
  sub_1000604D8(a1, "Dataset:PSKc", v22, (uint64_t *)v21);
  sub_100071070(v21);
  sub_100071048(v22);
  __int128 v20[2] = 0LL;
  void v20[3] = a1;
  v20[1] = (uint64_t)sub_100062040;
  v20[0] = (uint64_t)off_1002B0550 + 1;
  memset(v19, 0, sizeof(v19));
  sub_1000604D8(a1, "Dataset:ChannelMaskPage0", v20, (uint64_t *)v19);
  sub_100071070(v19);
  sub_100071048(v20);
  v18[2] = 0LL;
  void v18[3] = a1;
  v18[0] = (uint64_t)off_1002B0550 + 1;
  v18[1] = (uint64_t)sub_100062080;
  memset(v17, 0, sizeof(v17));
  sub_1000604D8(a1, "Dataset:SecPolicy:KeyRotation", v18, (uint64_t *)v17);
  sub_100071070(v17);
  sub_100071048(v18);
  v16[2] = 0LL;
  uint64_t v16[3] = a1;
  v16[0] = (uint64_t)off_1002B0550 + 1;
  v16[1] = (uint64_t)sub_1000620D0;
  memset(v15, 0, sizeof(v15));
  sub_1000604D8(a1, "Dataset:SecPolicy:Flags", v16, (uint64_t *)v15);
  sub_100071070(v15);
  sub_100071048(v16);
  __n128 v14[2] = 0LL;
  uint64_t v14[3] = a1;
  v14[0] = (uint64_t)off_1002B0550 + 1;
  v14[1] = (uint64_t)sub_100062120;
  memset(v13, 0, sizeof(v13));
  sub_1000604D8(a1, "Dataset:RawTlvs", v14, (uint64_t *)v13);
  sub_100071070(v13);
  sub_100071048(v14);
  __n128 v12[2] = 0LL;
  uint64_t v12[3] = a1;
  v12[0] = (uint64_t)off_1002B0550 + 1;
  v12[1] = (uint64_t)sub_1000621A0;
  memset(v11, 0, sizeof(v11));
  sub_1000604D8(a1, "Dataset:DestIpAddress", v12, (uint64_t *)v11);
  sub_100071070(v11);
  sub_100071048(v12);
  void v10[2] = 0LL;
  uint64_t v10[3] = a1;
  v10[0] = (uint64_t)off_1002B0550 + 1;
  v10[1] = (uint64_t)sub_1000621E0;
  memset(v9, 0, sizeof(v9));
  sub_1000604D8(a1, "Dataset:Command", v10, (uint64_t *)v9);
  sub_100071070(v9);
  sub_100071048(v10);
  _OWORD v8[2] = 0LL;
  void v8[3] = a1;
  v8[0] = (uint64_t)off_1002B0550 + 1;
  v8[1] = (uint64_t)sub_100062278;
  memset(v7, 0, sizeof(v7));
  sub_1000604D8(a1, "Thread:ActiveDataset:Bytes", v8, (uint64_t *)v7);
  sub_100071070(v7);
  sub_100071048(v8);
  v6[2] = 0LL;
  void v6[3] = a1;
  v6[0] = (uint64_t)off_1002B0550 + 1;
  v6[1] = (uint64_t)sub_100062424;
  memset(v5, 0, sizeof(v5));
  sub_1000604D8(a1, "Daemon:TickleOnHostDidWake", v6, (uint64_t *)v5);
  sub_100071070(v5);
  sub_100071048(v6);
  _OWORD v4[2] = 0LL;
  v4[3] = a1;
  v4[0] = (uint64_t)off_1002B0550 + 1;
  v4[1] = (uint64_t)sub_100062548;
  memset(v3, 0, sizeof(v3));
  sub_1000604D8(a1, "MAC:Filter:FixedRssi", v4, (uint64_t *)v3);
  sub_100071070(v3);
  return sub_100071048(v4);
}

void sub_100053710( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
}

void *sub_100053DAC(uint64_t a1)
{
  _OWORD v5[2] = 0LL;
  uint64_t v5[3] = a1;
  v5[0] = (uint64_t)off_1002B0550 + 1;
  v5[1] = (uint64_t)sub_100062C04;
  sub_100062A78(a1, "MAC:Whitelist:Entries", 512, v5);
  sub_100071048(v5);
  _OWORD v4[2] = 0LL;
  v4[3] = a1;
  v4[0] = (uint64_t)off_1002B0550 + 1;
  v4[1] = (uint64_t)sub_100062D80;
  sub_100062A78(a1, "MAC:Blacklist:Entries", 512, v4);
  sub_100071048(v4);
  _OWORD v3[2] = 0LL;
  v3[3] = a1;
  v3[0] = (uint64_t)off_1002B0550 + 1;
  v3[1] = (uint64_t)sub_100062EFC;
  sub_100062A78(a1, "MAC:Filter:Entries", 512, v3);
  return sub_100071048(v3);
}

void sub_100053E74( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *sub_100053EA0(uint64_t a1)
{
  _OWORD v5[2] = 0LL;
  uint64_t v5[3] = a1;
  v5[0] = (uint64_t)off_1002B0550 + 1;
  v5[1] = (uint64_t)sub_1000634CC;
  sub_1000633F4(a1, "MAC:Whitelist:Entries", 512, v5);
  sub_100071048(v5);
  _OWORD v4[2] = 0LL;
  v4[3] = a1;
  v4[0] = (uint64_t)off_1002B0550 + 1;
  v4[1] = (uint64_t)sub_100063640;
  sub_1000633F4(a1, "MAC:Blacklist:Entries", 512, v4);
  sub_100071048(v4);
  _OWORD v3[2] = 0LL;
  v3[3] = a1;
  v3[0] = (uint64_t)off_1002B0550 + 1;
  v3[1] = (uint64_t)sub_1000637B4;
  sub_1000633F4(a1, "MAC:Filter:Entries", 512, v3);
  return sub_100071048(v3);
}

void sub_100053F68( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_100053F94(uint64_t a1)
{
  return a1;
}

void *sub_100053FC4(uint64_t a1)
{
  uint64_t v2 = a1 + 67216;
  *(void *)a1 = off_1002AFC58;
  *(void *)(a1 + 32) = off_1002AFDF0;
  CFRelease(*(CFTypeRef *)(a1 + 72744));
  CFRelease(*(CFTypeRef *)(v2 + 5520));
  sub_10008FD28(a1 + 74104);
  std::mutex::~mutex((std::mutex *)(a1 + 74040));
  sub_100070DAC((uint64_t *)(a1 + 74016));
  sub_10000D448(a1 + 73880);
  sub_10000D448(a1 + 73856);
  sub_10000D448(a1 + 73832);
  sub_10000D448(a1 + 73808);
  sub_10000C178((uint64_t *)(a1 + 73784));
  sub_10000C178((uint64_t *)(a1 + 73760));
  int v4 = (void **)(a1 + 73720);
  sub_100006F6C(&v4);
  int v4 = (void **)(a1 + 73696);
  sub_100006F6C(&v4);
  sub_100071520(a1 + 73648);
  int v4 = (void **)(a1 + 73592);
  sub_100006F6C(&v4);
  int v4 = (void **)(a1 + 73544);
  sub_100006F6C(&v4);
  int v4 = (void **)(a1 + 73472);
  sub_100006F6C(&v4);
  int v4 = (void **)(a1 + 73408);
  sub_100006F6C(&v4);
  int v4 = (void **)(a1 + 73320);
  sub_100006F6C(&v4);
  int v4 = (void **)(a1 + 73272);
  sub_100006F6C(&v4);
  int v4 = (void **)(a1 + 73200);
  sub_100006F6C(&v4);
  int v4 = (void **)(a1 + 73136);
  sub_100006F6C(&v4);
  int v4 = (void **)(a1 + 73048);
  sub_100006F6C(&v4);
  int v4 = (void **)(a1 + 73000);
  sub_100006F6C(&v4);
  int v4 = (void **)(a1 + 72928);
  sub_100006F6C(&v4);
  int v4 = (void **)(a1 + 72864);
  sub_100006F6C(&v4);
  sub_10000D0D4(a1 + 72792);
  sub_1000075F0((void *)(a1 + 72704));
  *(void *)uint64_t v2 = off_1002AEEF0;
  *(void *)(v2 + 152) = off_1002AF0B8;
  sub_100142BC8(a1 + 67384);
  sub_1000FC720((uint64_t *)v2);
  return sub_1000D4FC0(a1);
}

void *sub_100054258(uint64_t a1)
{
  return sub_100053FC4(a1 - 32);
}

void sub_100054260(uint64_t a1)
{
  uint64_t v1 = sub_100053FC4(a1);
  operator delete(v1);
}

void sub_100054274(uint64_t a1)
{
  uint64_t v1 = sub_100053FC4(a1 - 32);
  operator delete(v1);
}

void *sub_10005428C@<X0>(char a1@<W0>, void *a2@<X8>)
{
  uint64_t v3 = "yes";
  if ((a1 & 8) != 0) {
    int v4 = "yes";
  }
  else {
    int v4 = "no";
  }
  if ((a1 & 2) != 0) {
    BOOL v5 = "yes";
  }
  else {
    BOOL v5 = "no";
  }
  if ((a1 & 1) != 0) {
    uint64_t v6 = "yes";
  }
  else {
    uint64_t v6 = "no";
  }
  if ((a1 & 4) == 0) {
    uint64_t v3 = "no";
  }
  snprintf(__str, 0x190uLL, "RxOnWhenIdle:%s FTD:%s FullNetData:%s SecDataReq:%s", v4, v5, v6, v3);
  return sub_10000AC00(a2, __str);
}

uint64_t sub_100054334(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 72756);
}

uint64_t sub_100054348(uint64_t a1)
{
  return a1 + 67216;
}

void sub_100054354(unsigned __int8 *a1@<X0>, void *a2@<X8>)
{
  if (v8 < 0) {
    operator delete(__p);
  }
  sub_10000AC00(&__p, "NCP:Channel");
  sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
  if (v8 < 0) {
    operator delete(__p);
  }
  sub_10000AC00(&__p, "NCP:ChannelMask");
  sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
  if (v8 < 0) {
    operator delete(__p);
  }
  sub_10000AC00(&__p, "NCP:PreferredChannelMask");
  sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
  if (v8 < 0) {
    operator delete(__p);
  }
  sub_10000AC00(&__p, "NCP:Frequency");
  sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
  if (v8 < 0) {
    operator delete(__p);
  }
  sub_10000AC00(&__p, "NCP:RSSI");
  sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
  if (v8 < 0) {
    operator delete(__p);
  }
  sub_10000AC00(&__p, "NCP:ExtendedAddress");
  sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
  if (v8 < 0) {
    operator delete(__p);
  }
  sub_10000AC00(&__p, "NCP:HardwareSerialNumber");
  sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
  if (v8 < 0) {
    operator delete(__p);
  }
  sub_10000AC00(&__p, "NCP:CCAFailureRate");
  sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
  if (v8 < 0) {
    operator delete(__p);
  }
  sub_10000AC00(&__p, "NCP:Capabilities");
  sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
  if (v8 < 0) {
    operator delete(__p);
  }
  uint64_t v4 = (uint64_t)(a1 + 72792);
  LODWORD(__p) = 49;
  if (sub_100007684((uint64_t)(a1 + 72792), (unsigned int *)&__p))
  {
    sub_10000AC00(&__p, "NCP:SleepyPollInterval");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
  }

  sub_10000AC00(&__p, "Thread:RLOC16");
  sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
  if (v8 < 0) {
    operator delete(__p);
  }
  sub_10000AC00(&__p, "Thread:DeviceMode");
  sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
  if (v8 < 0) {
    operator delete(__p);
  }
  sub_10000AC00(&__p, "Thread:RouterID");
  sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
  if (v8 < 0) {
    operator delete(__p);
  }
  sub_10000AC00(&__p, "Thread:Leader:Address");
  sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
  if (v8 < 0) {
    operator delete(__p);
  }
  sub_10000AC00(&__p, "Thread:Leader:RouterID");
  sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
  if (v8 < 0) {
    operator delete(__p);
  }
  sub_10000AC00(&__p, "Thread:Leader:Weight");
  sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
  if (v8 < 0) {
    operator delete(__p);
  }
  sub_10000AC00(&__p, "Thread:Leader:LocalWeight");
  sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
  if (v8 < 0) {
    operator delete(__p);
  }
  sub_10000AC00(&__p, "Thread:NetworkData");
  sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
  if (v8 < 0) {
    operator delete(__p);
  }
  sub_10000AC00(&__p, "Thread:NetworkDataVersion");
  sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
  if (v8 < 0) {
    operator delete(__p);
  }
  sub_10000AC00(&__p, "Thread:StableNetworkData");
  sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
  if (v8 < 0) {
    operator delete(__p);
  }
  sub_10000AC00(&__p, "Thread:StableNetworkDataVersion");
  sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
  if (v8 < 0) {
    operator delete(__p);
  }
  sub_10000AC00(&__p, "Thread:Leader:NetworkData");
  sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
  if (v8 < 0) {
    operator delete(__p);
  }
  sub_10000AC00(&__p, "Thread:Leader:StableNetworkData");
  sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
  if (v8 < 0) {
    operator delete(__p);
  }
  sub_10000AC00(&__p, "Thread:ChildTable");
  sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
  if (v8 < 0) {
    operator delete(__p);
  }
  sub_10000AC00(&__p, "Thread:ChildTable:Addresses");
  sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
  if (v8 < 0) {
    operator delete(__p);
  }
  sub_10000AC00(&__p, "Thread:NeighborTable");
  sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
  if (v8 < 0) {
    operator delete(__p);
  }
  sub_10000AC00(&__p, "Thread:ChildTimeout");
  sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
  if (v8 < 0) {
    operator delete(__p);
  }
  sub_10000AC00(&__p, "Thread:RouterTable");
  sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
  if (v8 < 0) {
    operator delete(__p);
  }
  sub_10000AC00(&__p, "Thread:Parent");
  sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
  if (v8 < 0) {
    operator delete(__p);
  }
  sub_10000AC00(&__p, "Thread:OffMeshRoutes");
  sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
  if (v8 < 0) {
    operator delete(__p);
  }
  sub_10000AC00(&__p, "Network:PartitionId");
  sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
  if (v8 < 0) {
    operator delete(__p);
  }
  sub_10000AC00(&__p, "Thread:RouterUpgradeThreshold");
  sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
  if (v8 < 0) {
    operator delete(__p);
  }
  sub_10000AC00(&__p, "Thread:RouterDowngradeThreshold");
  sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
  if (v8 < 0) {
    operator delete(__p);
  }
  sub_10000AC00(&__p, "Thread:ActiveDataset");
  sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
  if (v8 < 0) {
    operator delete(__p);
  }
  sub_10000AC00(&__p, "Thread:PendingDataset");
  sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
  if (v8 < 0) {
    operator delete(__p);
  }
  sub_10000AC00(&__p, "Thread:AddressCacheTable");
  sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
  if (v8 < 0) {
    operator delete(__p);
  }
  sub_10000AC00(&__p, "NCP:MacMaxRetryDirect");
  sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
  if (v8 < 0) {
    operator delete(__p);
  }
  sub_10000AC00(&__p, "NCP:MacMaxRetryInDirect");
  sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
  if (v8 < 0) {
    operator delete(__p);
  }
  LODWORD(__p) = 54;
  if (sub_100007684((uint64_t)(a1 + 72792), (unsigned int *)&__p))
  {
    sub_10000AC00(&__p, "Thread:DomainName");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
    sub_10000AC00(&__p, "Thread:BackboneRouter:Primary");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
  }

  LODWORD(__p) = 1032;
  if (sub_100007684((uint64_t)(a1 + 72792), (unsigned int *)&__p))
  {
    sub_10000AC00(&__p, "Thread:BackboneRouter:State");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
    sub_10000AC00(&__p, "Thread:BackboneRouter:Config");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
    sub_10000AC00(&__p, "Thread:BackboneRouter:Register");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
    sub_10000AC00(&__p, "Thread:BackboneRouter:Jitter");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
  }

  LODWORD(__p) = 516;
  if (sub_100007684((uint64_t)(a1 + 72792), (unsigned int *)&__p))
  {
    sub_10000AC00(&__p, "Thread:NeighborTable:ErrorRates");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
  }

  LODWORD(__p) = 527;
  if (sub_100007684((uint64_t)(a1 + 72792), (unsigned int *)&__p))
  {
    sub_10000AC00(&__p, "Thread:DUA:InterfaceIdentifier");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
  }

  LODWORD(__p) = 1024;
  if (sub_100007684((uint64_t)(a1 + 72792), (unsigned int *)&__p))
  {
    sub_10000AC00(&__p, "Commissioner:State");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
    sub_10000AC00(&__p, "Commissioner:ProvisioningUrl");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
    sub_10000AC00(&__p, "Commissioner:SessionId");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
  }

  LODWORD(__p) = 1027;
  if (sub_100007684((uint64_t)(a1 + 72792), (unsigned int *)&__p))
  {
    sub_10000AC00(&__p, "Thread:Joiner:State");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
  }

  LODWORD(__p) = 521;
  if (sub_100007684((uint64_t)(a1 + 72792), (unsigned int *)&__p))
  {
    sub_10000AC00(&__p, "POSIXApp:RCPVersion");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
  }

  LODWORD(__p) = 5;
  if (sub_100007684((uint64_t)(a1 + 72792), (unsigned int *)&__p))
  {
    sub_10000AC00(&__p, "NCP:Counter:AllMac");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
    sub_10000AC00(&__p, "NCP:Counter:TX_IP_SEC_TOTAL");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
    sub_10000AC00(&__p, "NCP:Counter:TX_IP_INSEC_TOTAL");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
    sub_10000AC00(&__p, "NCP:Counter:TX_IP_DROPPED");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
    sub_10000AC00(&__p, "NCP:Counter:RX_IP_SEC_TOTAL");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
    sub_10000AC00(&__p, "NCP:Counter:RX_IP_INSEC_TOTAL");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
    sub_10000AC00(&__p, "NCP:Counter:RX_IP_DROPPED");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
    sub_10000AC00(&__p, "NCP:Counter:TX_SPINEL_TOTAL");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
    sub_10000AC00(&__p, "NCP:Counter:RX_SPINEL_TOTAL");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
    sub_10000AC00(&__p, "NCP:Counter:RX_SPINEL_ERR");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
    sub_10000AC00(&__p, "NCP:Counter:Thread:Mle");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
    sub_10000AC00(&__p, "NCP:Counter:AllIPv6");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
  }

  LODWORD(__p) = 512;
  if (sub_100007684((uint64_t)(a1 + 72792), (unsigned int *)&__p))
  {
    sub_10000AC00(&__p, "MAC:Whitelist:Enabled");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
    sub_10000AC00(&__p, "MAC:Whitelist:Entries");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
    sub_10000AC00(&__p, "MAC:Blacklist:Enabled");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
    sub_10000AC00(&__p, "MAC:Blacklist:Entries");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
  }

  LODWORD(__p) = 6;
  if (sub_100007684((uint64_t)(a1 + 72792), (unsigned int *)&__p))
  {
    sub_10000AC00(&__p, "JamDetection:Status");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
    sub_10000AC00(&__p, "JamDetection:Enable");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
    sub_10000AC00(&__p, "JamDetection:RssiThreshold");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
    sub_10000AC00(&__p, "JamDetection:Window");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
    sub_10000AC00(&__p, "JamDetection:BusyPeriod");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
    sub_10000AC00(&__p, "JamDetection:Debug:HistoryBitmap");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
  }

  LODWORD(__p) = 515;
  if (sub_100007684((uint64_t)(a1 + 72792), (unsigned int *)&__p))
  {
    sub_10000AC00(&__p, "ChannelMonitor:SampleInterval");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
    sub_10000AC00(&__p, "ChannelMonitor:RssiThreshold");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
    sub_10000AC00(&__p, "ChannelMonitor:SampleWindow");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
    sub_10000AC00(&__p, "ChannelMonitor:SampleCount");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
    sub_10000AC00(&__p, "ChannelMonitor:ChannelQuality");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
  }

  LODWORD(__p) = 517;
  if (sub_100007684((uint64_t)(a1 + 72792), (unsigned int *)&__p))
  {
    sub_10000AC00(&__p, "ChannelManager:NewChannel");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
    sub_10000AC00(&__p, "ChannelManager:Delay");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
    sub_10000AC00(&__p, "ChannelManager:AutoSelect:Enabled");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
    sub_10000AC00(&__p, "ChannelManager:AutoSelect:Interval");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
    sub_10000AC00(&__p, "ChannelManager:SupportedChannelMask");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
    sub_10000AC00(&__p, "ChannelManager:FavoredChannelMask");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
  }

  LODWORD(__p) = 1025;
  if (sub_100007684((uint64_t)(a1 + 72792), (unsigned int *)&__p))
  {
    sub_10000AC00(&__p, "TmfProxy:Enabled");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
  }

  LODWORD(__p) = 15296;
  if (sub_100007684((uint64_t)(a1 + 72792), (unsigned int *)&__p))
  {
    sub_10000AC00(&__p, "com.nestlabs.internal:Legacy:MeshLocalPrefix");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
  }

  LODWORD(__p) = 519;
  if (sub_100007684((uint64_t)(a1 + 72792), (unsigned int *)&__p))
  {
    sub_10000AC00(&__p, "TimeSync:ThreadNetworkTime");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
    sub_10000AC00(&__p, "TimeSync:Period");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
    sub_10000AC00(&__p, "TimeSync:XtalThreshold");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
  }

  LODWORD(__p) = 1029;
  if (sub_100007684((uint64_t)(a1 + 72792), (unsigned int *)&__p))
  {
    sub_10000AC00(&__p, "Thread:Services");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
    sub_10000AC00(&__p, "Thread:Leader:Services");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
  }

  LODWORD(__p) = 1030;
  if (sub_100007684((uint64_t)(a1 + 72792), (unsigned int *)&__p))
  {
    sub_10000AC00(&__p, "Thread:Csl:Period");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
    sub_10000AC00(&__p, "Thread:Csl:Timeout");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
    sub_10000AC00(&__p, "Thread:Csl:Channel");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
  }

  LODWORD(__p) = 523;
  if (sub_100007684((uint64_t)(a1 + 72792), (unsigned int *)&__p))
  {
    sub_10000AC00(&__p, "NCP:Coex:Enable");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
    sub_10000AC00(&__p, "NCP:CoexMetrics");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
  }

  LODWORD(__p) = 518;
  if (sub_100007684((uint64_t)(a1 + 72792), (unsigned int *)&__p))
  {
    sub_10000AC00(&__p, "OpenThread:LogTimestampBase");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
  }

  LODWORD(__p) = 524;
  if (sub_100007684((uint64_t)(a1 + 72792), (unsigned int *)&__p))
  {
    sub_10000AC00(&__p, "NCP:MacRetryHistogram");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
  }

  BOOL v5 = (uint64_t *)sub_100090BAC((uint64_t)(a1 + 74104));
  sub_10000C848(&__p, v5);
  sub_10000C890((uint64_t)a2, (uint64_t)__p, (uint64_t)&v7);
  sub_10000AD30((uint64_t)&__p);
  LODWORD(__p) = 638;
  if (sub_100007684(v4, (unsigned int *)&__p))
  {
    sub_10000AC00(&__p, "ChannelUtilizationMonitor:SampleInterval");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
    sub_10000AC00(&__p, "ChannelUtilizationMonitor:NoAckFailureThreshold");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
    sub_10000AC00(&__p, "ChannelUtilizationMonitor:CcaFailureThreshold");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
    sub_10000AC00(&__p, "ChannelUtilizationMonitor:RxUnsolGrantUtil");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
    sub_10000AC00(&__p, "ChannelUtilizationMonitor:Enabled");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
    sub_10000AC00(&__p, "ChannelUtilizationMonitor:State");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
  }

  LODWORD(__p) = 529;
  if (sub_100007684(v4, (unsigned int *)&__p))
  {
    sub_10000AC00(&__p, "TPC:Mode");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
    sub_10000AC00(&__p, "TPC:LinkMetricsProbeInterval");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
    sub_10000AC00(&__p, "TPC:LinkMarginSetPointRouter");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
    sub_10000AC00(&__p, "TPC:LinkMarginSetPointEndDevice");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
    sub_10000AC00(&__p, "TPC:PropotionalGain");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
    sub_10000AC00(&__p, "TPC:IntegralGain");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
    sub_10000AC00(&__p, "TPC:WeightFactor");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
    sub_10000AC00(&__p, "TPC:ErrorGain:CodeWord0");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
    sub_10000AC00(&__p, "TPC:ErrorGain:CodeWord1");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
    sub_10000AC00(&__p, "TPC:ErrorGain:CodeWord2");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
    sub_10000AC00(&__p, "TPC:ErrorGain:CodeWord3");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
    sub_10000AC00(&__p, "TPC:StepUpAckLost");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
    sub_10000AC00(&__p, "TPC:FrameTxPowerHistogram");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
    sub_10000AC00(&__p, "TPC:NeighborTxPowerHistogram");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
    sub_10000AC00(&__p, "TPC:NeighborEnergySavingsFactorHistogram");
    sub_10007166C((uint64_t)a2, (const void **)&__p, (uint64_t)&__p);
    if (v8 < 0) {
      operator delete(__p);
    }
  }

void sub_100055C6C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  sub_10000AD30(v15);
  _Unwind_Resume(a1);
}

uint64_t sub_1000560C0(uint64_t a1)
{
  __darwin_time_t v2 = sub_1000F340C(a1);
  int v3 = sub_1000D8DE8(a1);
  if (sub_1000B5104(v3)) {
    return 0x7FFFFFFFFFFFFFFFLL;
  }
  if (!*(_WORD *)(a1 + 40)) {
    __darwin_time_t v2 = 0LL;
  }
  if (!sub_1000561A0(a1 + 74016))
  {
    sub_1000561DC(a1 + 74016, &v7);
    uint64_t v5 = sub_100042EAC(&v7);
    uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 16LL))(v5);
    sub_10000F9EC(&v8);
    if (v6 < v2) {
      __darwin_time_t v2 = v6;
    }
  }

  if (v2 > sub_1000A3E0C()) {
    __darwin_time_t v2 = sub_1000A3E0C();
  }
  return v2 & ~(v2 >> 63);
}

void sub_10005618C(_Unwind_Exception *a1)
{
}

BOOL sub_1000561A0(uint64_t a1)
{
  __darwin_time_t v2 = (std::mutex *)(a1 + 24);
  std::mutex::lock((std::mutex *)(a1 + 24));
  uint64_t v3 = *(void *)(a1 + 16);
  std::mutex::unlock(v2);
  return v3 == 0;
}

void sub_1000561DC(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = (std::mutex *)(a1 + 24);
  std::mutex::lock((std::mutex *)(a1 + 24));
  uint64_t v5 = (void *)sub_100070DA0(a1);
  uint64_t v6 = v5[1];
  *a2 = *v5;
  a2[1] = v6;
  if (v6)
  {
    uint64_t v7 = (unsigned int *)(v6 + 8);
    do
      unsigned int v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }

  std::mutex::unlock(v4);
}

uint64_t sub_10005623C(uint64_t a1)
{
  return sub_1000560C0(a1 - 32);
}

uint64_t sub_100056244(_WORD *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v6)
  {
    uint64_t v7 = v6;
    if (sub_10015A058(6) && os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)__n128 buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_INFO,  "unpack_backbone_router_multicast_listener_event",  buf,  2u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  unsigned __int8 v26 = 0;
  uint64_t v25 = 0LL;
  v24[0] = 0LL;
  v24[1] = 0LL;
  *(void *)__n128 buf = v24;
  if ((int)spinel_datatype_unpack(a1, a2, "C6", v8, v9, v10, v11, v12, (uint64_t)&v26) < 1)
  {
    uint64_t v18 = 1LL;
  }

  else
  {
    uint64_t v22 = v26;
    sub_10000AC00(&__p, "MulticastListenerEventType");
    uint64_t v13 = sub_10000ED88((uint64_t **)buf, &__p);
    sub_100017620(v13, &v22);
    if (v21 < 0) {
      operator delete((void *)__p.n128_u64[0]);
    }
    sub_100108154(v25, &__p);
    sub_10000AC00(v27, "MulticastListenerEventAddress");
    int v14 = sub_10000ED88((uint64_t **)buf, (__n128 *)v27);
    sub_1000175B4(v14, (uint64_t)&__p);
    if (v30 < 0) {
      operator delete(*(void **)v27);
    }
    if (v21 < 0) {
      operator delete((void *)__p.n128_u64[0]);
    }
    sub_10005653C(a3, (uint64_t *)buf);
    uint64_t v15 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v15)
    {
      if (sub_10015A058(6) && os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
      {
        int v16 = v26;
        sub_100108154(v25, &__p);
        if (v21 >= 0) {
          p_p = &__p;
        }
        else {
          p_p = (__n128 *)__p.n128_u64[0];
        }
        *(_DWORD *)uint64_t v27 = 67109378;
        *(_DWORD *)&uint64_t v27[4] = v16;
        __int16 v28 = 2080;
        BOOL v29 = p_p;
        _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_INFO,  "[-NCP-]: BackboneRouterMulticastListenerEvent:Changed event(%d) addr: %s",  v27,  0x12u);
        if (v21 < 0) {
          operator delete((void *)__p.n128_u64[0]);
        }
      }
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }

    uint64_t v18 = 0LL;
  }

  sub_10000D448((uint64_t)buf);
  return v18;
}

void sub_1000564D8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, char a18)
{
}

uint64_t *sub_10005653C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = v6;
  uint64_t v6 = *a1;
  uint64_t v4 = v6;
  *a1 = v3;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
  }
  return a1;
}

uint64_t sub_100056594(_WORD *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v6)
  {
    uint64_t v7 = v6;
    if (sub_10015A058(6) && os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)__n128 buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "unpack_backbone_router_state", buf, 2u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  if (v16 == 2)
  {
    sub_10000AC00(buf, "primary");
    sub_1000175B4(a3, (uint64_t)buf);
    goto LABEL_15;
  }

  if (v16 == 1)
  {
    sub_10000AC00(buf, "secondary");
    sub_1000175B4(a3, (uint64_t)buf);
    goto LABEL_15;
  }

  if (v16) {
    return 1LL;
  }
  sub_10000AC00(buf, "disabled");
  sub_1000175B4(a3, (uint64_t)buf);
LABEL_15:
  if (v15 < 0) {
    operator delete(*(void **)buf);
  }
  return 0LL;
}

void sub_1000566FC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100056720(int a1, uint64_t *a2)
{
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_100044B24(a2, (uint64_t)__p);
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_100044B24(a2, (uint64_t)__p);
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_100044B24(a2, (uint64_t)__p);
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_100044B24(a2, (uint64_t)__p);
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_100044B24(a2, (uint64_t)__p);
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_100044B24(a2, (uint64_t)__p);
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_100044B24(a2, (uint64_t)__p);
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_100044B24(a2, (uint64_t)__p);
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_100044B24(a2, (uint64_t)__p);
  if (v4 < 0) {
    operator delete(__p[0]);
  }
}

void sub_100056904( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100056944(uint64_t a1, _WORD *a2, uint64_t a3)
{
  return sub_10008D124((_BYTE *)(a1 + 72832), a2, a3);
}

void sub_100056950(uint64_t a1, char *a2, uint64_t *a3)
{
  char v4 = a2;
  if (a2[23] < 0) {
    char v4 = *(const char **)a2;
  }
  if (!strcasecmp(v4, "Erase"))
  {
    sub_10008C394((_BYTE *)(a1 + 72832));
    sub_100006FF8(a3);
    return;
  }

  if (!strcasecmp(v4, "GetActive"))
  {
    v24[0] = 0LL;
    sub_100007640((uint64_t)v24, a3);
    sub_100045084(v24, v25);
    sub_10004BFE4(v26, v25);
    _OWORD v23[2] = 0LL;
    void v23[3] = a1;
    v23[0] = (uint64_t)off_1002B0228 + 1;
    v23[1] = (uint64_t)sub_100056944;
    sub_100057040(a1, (uint64_t *)v26, 5400LL, v23);
    sub_10004BED0(v23);
    sub_100006E7C(v26);
    sub_1000075F0(v25);
    uint64_t v6 = v24;
    goto LABEL_16;
  }

  if (!strcasecmp(v4, "SetActive"))
  {
    uint64_t v20 = 0LL;
    uint64_t v21 = 0LL;
    uint64_t v22 = 0LL;
    sub_10008DD9C(a1 + 72832, &v20, 1);
    sub_100033680(&v19, (uint64_t)&v20);
    v18[0] = 0LL;
    sub_100007640((uint64_t)v18, a3);
    memset(&v17, 0, sizeof(v17));
    sub_100057164(a1, &v19, v18, 5400LL, 68, 0, 0, &v17);
    uint64_t v7 = v18;
  }

  else if (!strcasecmp(v4, "SendMgmtGetActive"))
  {
    uint64_t v20 = 0LL;
    uint64_t v21 = 0LL;
    uint64_t v22 = 0LL;
    sub_10008DD9C(a1 + 72832, &v20, 0);
    sub_100033680(&v19, (uint64_t)&v20);
    v16[0] = 0LL;
    sub_100007640((uint64_t)v16, a3);
    memset(&v17, 0, sizeof(v17));
    sub_100057164(a1, &v19, v16, 5413LL, 68, 0, 0, &v17);
    uint64_t v7 = v16;
  }

  else
  {
    if (strcasecmp(v4, "SendMgmtSetActive"))
    {
      if (strcasecmp(v4, "GetPending"))
      {
        if (!strcasecmp(v4, "SetPending"))
        {
          uint64_t v20 = 0LL;
          uint64_t v21 = 0LL;
          uint64_t v22 = 0LL;
          sub_10008DD9C(a1 + 72832, &v20, 1);
          sub_100033680(&v19, (uint64_t)&v20);
          v10[0] = 0LL;
          sub_100007640((uint64_t)v10, a3);
          memset(&v17, 0, sizeof(v17));
          sub_100057164(a1, &v19, v10, 5401LL, 68, 0, 0, &v17);
          uint64_t v7 = v10;
        }

        else if (!strcasecmp(v4, "SendMgmtGetPending"))
        {
          uint64_t v20 = 0LL;
          uint64_t v21 = 0LL;
          uint64_t v22 = 0LL;
          sub_10008DD9C(a1 + 72832, &v20, 0);
          sub_100033680(&v19, (uint64_t)&v20);
          v9[0] = 0LL;
          sub_100007640((uint64_t)v9, a3);
          memset(&v17, 0, sizeof(v17));
          sub_100057164(a1, &v19, v9, 5414LL, 68, 0, 0, &v17);
          uint64_t v7 = v9;
        }

        else
        {
          if (strcasecmp(v4, "SendMgmtSetPending"))
          {
            sub_100006FF8(a3);
            return;
          }

          uint64_t v20 = 0LL;
          uint64_t v21 = 0LL;
          uint64_t v22 = 0LL;
          sub_10008DD9C(a1 + 72832, &v20, 1);
          sub_100033680(&v19, (uint64_t)&v20);
          v8[0] = 0LL;
          sub_100007640((uint64_t)v8, a3);
          memset(&v17, 0, sizeof(v17));
          sub_100057164(a1, &v19, v8, 5403LL, 68, 0, 0, &v17);
          uint64_t v7 = v8;
        }

        goto LABEL_36;
      }

      v12[0] = 0LL;
      sub_100007640((uint64_t)v12, a3);
      sub_100045084(v12, v13);
      sub_10004BFE4(v14, v13);
      _OWORD v11[2] = 0LL;
      uint64_t v11[3] = a1;
      v11[0] = (uint64_t)off_1002B0228 + 1;
      v11[1] = (uint64_t)sub_100056944;
      sub_100057040(a1, (uint64_t *)v14, 5401LL, v11);
      sub_10004BED0(v11);
      sub_100006E7C(v14);
      sub_1000075F0(v13);
      uint64_t v6 = v12;
LABEL_16:
      sub_1000075F0(v6);
      return;
    }

    uint64_t v20 = 0LL;
    uint64_t v21 = 0LL;
    uint64_t v22 = 0LL;
    sub_10008DD9C(a1 + 72832, &v20, 1);
    sub_100033680(&v19, (uint64_t)&v20);
    v15[0] = 0LL;
    sub_100007640((uint64_t)v15, a3);
    memset(&v17, 0, sizeof(v17));
    sub_100057164(a1, &v19, v15, 5402LL, 68, 0, 0, &v17);
    uint64_t v7 = v15;
  }

void sub_100056EB0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v4 = *(void *)(v2 - 200);
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
  }
  *(void *)(v2 - 256) = v2 - 192;
  sub_100006F6C((void ***)(v2 - 256));
  _Unwind_Resume(a1);
}

void *sub_100057040(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7 = sub_1000798B8((uint64_t)v12, a2);
  sub_100034C60("Cii", v11, 0x80u);
  uint64_t v8 = sub_100079A40(v7, (uint64_t)v11);
  uint64_t v9 = sub_10007A754(v8, a4);
  sub_10007A86C(v9, &v17);
  sub_10004E9A4(a1, &v17);
  sub_10000F9EC(&v18);
  uint64_t v19 = (void **)v11;
  sub_100006F6C(&v19);
  sub_10004BF94(v16);
  sub_10004BED0(v15);
  sub_10004BEF8(v14);
  return sub_100006E7C(v13);
}

void sub_100057124(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v7 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  sub_10000F9EC((uint64_t *)(v4 + 8));
  *(void *)(v5 - 56) = va;
  sub_100006F6C((void ***)(v5 - 56));
  sub_1000454AC((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_100057164( uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t a4, int a5, unsigned int a6, int a7, std::string *a8)
{
  unsigned int v30 = a6;
  sub_100034C60("Cii", v29, 0x80u);
  if (!a7) {
    goto LABEL_11;
  }
  sub_10000CBF8(&__p, (uint64_t)v29);
  unsigned int v23 = a6;
  char v15 = sub_1000602A4((uint64_t **)(a1 + 73648), a8);
  sub_100006EFC((uint64_t)v15, (__n128 *)&__p);
  *((_DWORD *)v15 + 6) = v23;
  p_p = &__p;
  sub_100006F6C((void ***)&p_p);
  int size = (char)a8->__r_.__value_.__s.__size_;
  uint64_t v17 = (std::string *)a8->__r_.__value_.__r.__words[0];
  sub_100147B4C(a2, &__p);
  uint64_t v18 = (char *)(size >= 0 ? a8 : v17);
  uint64_t v19 = (__p.__r_.__value_.__s.__size_ & 0x80u) == 0 ? &__p : (std::string *)__p.__r_.__value_.__r.__words[0];
  sub_10010FFCC(v18, (char *)v19);
  if ((char)__p.__r_.__value_.__s.__size_ < 0)
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    if (!a6) {
      goto LABEL_13;
    }
  }

  else
  {
LABEL_11:
    if (!a6)
    {
LABEL_13:
      sub_1000798B4((uint64_t)&__p, a1);
      uint64_t v20 = sub_10007993C((uint64_t)&__p, a3);
      uint64_t v21 = sub_100079A40(v20, (uint64_t)v29);
      sub_10007A86C(v21, (uint64_t *)&p_p);
      sub_10004E9A4(a1, (uint64_t *)&p_p);
      sub_10000F9EC(&v28);
      sub_10004BF94(v26);
      sub_10004BED0(v25);
      sub_10004BEF8(v24);
      sub_100006E7C(&__p.__r_.__value_.__l.__size_);
      goto LABEL_14;
    }
  }

  if (sub_100007684(a1 + 72792, &v30)) {
    goto LABEL_13;
  }
LABEL_2:
  sub_100006FF8(a3);
LABEL_14:
  __p.__r_.__value_.__r.__words[0] = (std::string::size_type)v29;
  sub_100006F6C((void ***)&__p);
}

void sub_100057330( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  std::string __p = (void *)(v17 - 112);
  sub_100006F6C((void ***)&__p);
  _Unwind_Resume(a1);
}

uint64_t sub_1000573A8(uint64_t a1, _BYTE *a2, uint64_t a3, UInt8 *a4, uint64_t a5)
{
  unsigned int v7 = a3;
  if ((_DWORD)a5)
  {
    sub_100145D8C(a3, a4, a5, a1);
  }

  else
  {
    uint64_t v9 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v9)
    {
      uint64_t v10 = v9;
      if (sub_10015A058(6) && os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)uint64_t v12 = 0;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "Thread DataSet does not have Values", v12, 2u);
      }
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }

    sub_1001462A0(v7);
  }

  return sub_10008D124(a2, a4, a5);
}

void sub_1000574A4(uint64_t a1, _BYTE *a2, char *a3, uint64_t *a4)
{
  uint64_t v5 = a3;
  if (a3[23] < 0) {
    uint64_t v5 = *(const char **)a3;
  }
  if (!strcasecmp(v5, "Erase"))
  {
    sub_10008C394(a2);
    sub_100006FF8(a4);
    return;
  }

  if (!strcasecmp(v5, "GetActive"))
  {
    v24[0] = 0LL;
    sub_100007640((uint64_t)v24, a4);
    sub_100045084(v24, v25);
    sub_10004BFE4(v26, v25);
    uint64_t v8 = operator new(0x28uLL);
    void *v8 = sub_1000573A8;
    v8[1] = 0LL;
    _OWORD v8[2] = a1;
    void v8[3] = a2;
    *((_DWORD *)v8 + 8) = 5400;
    v23[0] = (uint64_t)off_1002B0248;
    v23[1] = (uint64_t)v8;
    sub_100057040(a1, (uint64_t *)v26, 5400LL, v23);
    sub_10004BED0(v23);
    sub_100006E7C(v26);
    sub_1000075F0(v25);
    uint64_t v9 = v24;
    goto LABEL_16;
  }

  if (strcasecmp(v5, "SetActive"))
  {
    if (strcasecmp(v5, "GetPending"))
    {
      if (strcasecmp(v5, "SetPending"))
      {
        sub_100006FF8(a4);
        return;
      }

      uint64_t v20 = 0LL;
      uint64_t v21 = 0LL;
      uint64_t v22 = 0LL;
      sub_10008DD9C((uint64_t)a2, &v20, 1);
      sub_100033680(&v19, (uint64_t)&v20);
      v12[0] = 0LL;
      sub_100007640((uint64_t)v12, a4);
      memset(&__p, 0, sizeof(__p));
      sub_100057164(a1, &v19, v12, 5401LL, 68, 0, 0, &__p);
      uint64_t v10 = v12;
      goto LABEL_20;
    }

    v14[0] = 0LL;
    sub_100007640((uint64_t)v14, a4);
    sub_100045084(v14, v15);
    sub_10004BFE4(v16, v15);
    uint64_t v11 = operator new(0x28uLL);
    void *v11 = sub_1000573A8;
    v11[1] = 0LL;
    _OWORD v11[2] = a1;
    uint64_t v11[3] = a2;
    *((_DWORD *)v11 + 8) = 5401;
    v13[0] = (uint64_t)off_1002B0248;
    v13[1] = (uint64_t)v11;
    sub_100057040(a1, (uint64_t *)v16, 5401LL, v13);
    sub_10004BED0(v13);
    sub_100006E7C(v16);
    sub_1000075F0(v15);
    uint64_t v9 = v14;
LABEL_16:
    sub_1000075F0(v9);
    return;
  }

  uint64_t v20 = 0LL;
  uint64_t v21 = 0LL;
  uint64_t v22 = 0LL;
  sub_10008DD9C((uint64_t)a2, &v20, 1);
  sub_100033680(&v19, (uint64_t)&v20);
  v18[0] = 0LL;
  sub_100007640((uint64_t)v18, a4);
  memset(&__p, 0, sizeof(__p));
  sub_100057164(a1, &v19, v18, 5400LL, 68, 0, 0, &__p);
  uint64_t v10 = v18;
LABEL_20:
  sub_1000075F0(v10);
  if (v19) {
    (*(void (**)(uint64_t))(*(void *)v19 + 8LL))(v19);
  }
  __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v20;
  sub_100006F6C((void ***)&__p);
}

void sub_1000577D0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20, uint64_t a21, char a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, char a27, uint64_t a28, uint64_t a29, uint64_t a30, void *__p, uint64_t a32, int a33, __int16 a34, char a35, char a36, char a37)
{
  if (a36 < 0) {
    operator delete(__p);
  }
  sub_1000075F0(&a10);
  uint64_t v39 = *(void *)(v37 - 216);
  if (v39) {
    (*(void (**)(uint64_t))(*(void *)v39 + 8LL))(v39);
  }
  std::string __p = (void *)(v37 - 208);
  sub_100006F6C((void ***)&__p);
  _Unwind_Resume(a1);
}

void sub_1000578D0(unsigned int *a1, unsigned int a2)
{
  if (a1[380] != a2)
  {
    uint64_t v4 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v4)
    {
      uint64_t v5 = v4;
      if (sub_10015A058(5) && os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
      {
        sub_1000B51B4(a1[380], &v12);
        int size = (char)v12.__r_.__value_.__s.__size_;
        std::string::size_type v7 = v12.__r_.__value_.__r.__words[0];
        sub_1000B51B4(a2, &__p);
        uint64_t v8 = &v12;
        if (size < 0) {
          uint64_t v8 = (std::string *)v7;
        }
        if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
          p_p = &__p;
        }
        else {
          p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
        }
        *(_DWORD *)__n128 buf = 136315394;
        *(void *)&uint8_t buf[4] = v8;
        __int16 v14 = 2080;
        char v15 = p_p;
        _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_INFO,  "Node type change: %s -> %s",  buf,  0x16u);
      }
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }

    a1[380] = a2;
    sub_10000AC00(&v12, "Network:NodeType");
    sub_1000B51B4(a1[380], &__p);
    uint64_t v10 = (char *)operator new(0x20uLL);
    *(void *)uint64_t v10 = &off_1002AE030;
    *(std::string *)(v10 + 8) = __p;
    memset(&__p, 0, sizeof(__p));
    *(void *)__n128 buf = v10;
    (*(void (**)(unsigned int *, std::string *, _BYTE *))(*(void *)a1 + 360LL))(a1, &v12, buf);
    if (*(void *)buf) {
      (*(void (**)(void))(**(void **)buf + 8LL))(*(void *)buf);
    }
  }

void sub_100057AD4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20, uint64_t a21)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100057B30(uint64_t a1, void *a2)
{
  if (a2)
  {
    if (*(void *)(a1 + 1448) != *a2 || *(void *)(a1 + 1456) != a2[1])
    {
      *(_OWORD *)(a1 + 1448) = *(_OWORD *)a2;
      sub_10000AC00(v9, "IPv6:LinkLocalAddress");
      sub_100108154(a2, __p);
      uint64_t v5 = (char *)operator new(0x20uLL);
      *(void *)uint64_t v5 = &off_1002AE030;
      *(_OWORD *)(v5 + 8) = *(_OWORD *)__p;
      *((void *)v5 + 3) = v7;
      __p[0] = 0LL;
      __p[1] = 0LL;
      uint64_t v7 = 0LL;
      uint64_t v8 = v5;
      (*(void (**)(uint64_t, void **, char **))(*(void *)a1 + 360LL))(a1, v9, &v8);
      if (v8) {
        (*(void (**)(char *))(*(void *)v8 + 8LL))(v8);
      }
      if (SHIBYTE(v7) < 0) {
        operator delete(__p[0]);
      }
      if (v10 < 0) {
        operator delete(v9[0]);
      }
    }
  }

void sub_100057C14( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20, char a21, char a22)
{
  if (a16) {
    (*(void (**)(uint64_t))(*(void *)a16 + 8LL))(a16);
  }
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100057C64(uint64_t result, uint64_t a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = sub_100159E98((unsigned __int8 *)a2, 8LL);
    if ((_DWORD)result)
    {
      if (*(void *)(v3 + 1432) != *(void *)a2 || *(void *)(v3 + 1440) != *(void *)(a2 + 8))
      {
        *(_OWORD *)(v3 + 1432) = *(_OWORD *)a2;
        sub_10000AC00(v9, "IPv6:MeshLocalAddress");
        sub_100108154((void *)a2, __p);
        uint64_t v5 = (char *)operator new(0x20uLL);
        *(void *)uint64_t v5 = &off_1002AE030;
        *(_OWORD *)(v5 + 8) = *(_OWORD *)__p;
        *((void *)v5 + 3) = v7;
        __p[0] = 0LL;
        __p[1] = 0LL;
        uint64_t v7 = 0LL;
        uint64_t v8 = v5;
        (*(void (**)(uint64_t, void **, char **))(*(void *)v3 + 360LL))(v3, v9, &v8);
        if (v8) {
          (*(void (**)(char *))(*(void *)v8 + 8LL))(v8);
        }
        if (SHIBYTE(v7) < 0) {
          operator delete(__p[0]);
        }
        if (v10 < 0) {
          operator delete(v9[0]);
        }
        return sub_100057DB0(v3);
      }
    }
  }

  return result;
}

void sub_100057D60( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20, char a21, char a22)
{
  if (a16) {
    (*(void (**)(uint64_t))(*(void *)a16 + 8LL))(a16);
  }
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100057DB0(uint64_t a1)
{
  uint64_t v2 = v5;
  uint64_t v4 = v5;
  while ((uint64_t *)v2 != &v6)
  {
    if (!*(_DWORD *)(v2 + 44))
    {
    }

    sub_10000B338((uint64_t)&v4);
    uint64_t v2 = v4;
  }

  return sub_10000D0D4((uint64_t)&v5);
}

void sub_100057E40(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_100057E54(uint64_t result, unsigned __int8 *a2)
{
  if (a2)
  {
    uint64_t v3 = (void *)result;
    uint64_t result = sub_100159E98(a2, 8LL);
    if ((_DWORD)result)
    {
      if (v3[179] != *(void *)a2)
      {
        uint64_t v4 = *(void *)a2;
        v3[179] = *(void *)a2;
        v13[0] = v4;
        v13[1] = 0LL;
        sub_10000AC00(v11, "IPv6:MeshLocalPrefix");
        sub_100108154(v13, &__p);
        uint64_t v5 = std::string::append(&__p, "/64");
        std::string::size_type v6 = v5->__r_.__value_.__r.__words[0];
        v14[0] = v5->__r_.__value_.__l.__size_;
        *(void *)((char *)v14 + 7) = *(std::string::size_type *)((char *)&v5->__r_.__value_.__r.__words[1] + 7);
        unsigned __int8 size = v5->__r_.__value_.__s.__size_;
        v5->__r_.__value_.__l.__size_ = 0LL;
        v5->__r_.__value_.__l.__cap_ = 0LL;
        v5->__r_.__value_.__r.__words[0] = 0LL;
        uint64_t v8 = operator new(0x20uLL);
        void *v8 = &off_1002AE030;
        v8[1] = v6;
        _OWORD v8[2] = v14[0];
        *(void *)((char *)v8 + 23) = *(void *)((char *)v14 + 7);
        *((_BYTE *)v8 + 31) = size;
        char v10 = v8;
        (*(void (**)(void *, void **, void **))(*v3 + 360LL))(v3, v11, &v10);
        if (v10) {
          (*(void (**)(void *))(*v10 + 8LL))(v10);
        }
        if (v12 < 0) {
          operator delete(v11[0]);
        }
        return sub_100057DB0((uint64_t)v3);
      }
    }
  }

  return result;
}

void sub_100057FA8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20, char a21)
{
  if (a15) {
    (*(void (**)(uint64_t))(*(void *)a15 + 8LL))(a15);
  }
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  _Unwind_Resume(exception_object);
}

void *sub_100058014(uint64_t a1, uint64_t *a2, uint64_t a3, const std::string *a4)
{
  uint64_t v7 = sub_1000798B8((uint64_t)v12, a2);
  sub_100034C60("Cii", v11, 0x80u);
  uint64_t v8 = sub_100079A40(v7, (uint64_t)v11);
  uint64_t v9 = sub_100079AD0(v8, a4);
  sub_10007A86C(v9, &v17);
  sub_10004E9A4(a1, &v17);
  sub_10000F9EC(&v18);
  uint64_t v19 = (void **)v11;
  sub_100006F6C(&v19);
  sub_10004BF94(v16);
  sub_10004BED0(v15);
  sub_10004BEF8(v14);
  return sub_100006E7C(v13);
}

void sub_1000580F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v7 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  sub_10000F9EC((uint64_t *)(v4 + 8));
  *(void *)(v5 - 56) = va;
  sub_100006F6C((void ***)(v5 - 56));
  sub_1000454AC((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void *sub_100058138(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_10007993C((uint64_t)v8, a2);
  sub_100034C60("CiiLCXLLS", v7, 0x80u);
  uint64_t v5 = sub_100079A40(v4, (uint64_t)v7);
  sub_10007A86C(v5, &v13);
  sub_10004E9A4(a1, &v13);
  sub_10000F9EC(&v14);
  char v15 = (void **)v7;
  sub_100006F6C(&v15);
  sub_10004BF94(v12);
  sub_10004BED0(v11);
  sub_10004BEF8(v10);
  return sub_100006E7C(v9);
}

void sub_100058214( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  uint64_t v13 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  sub_10000F9EC((uint64_t *)(v10 + 8));
  *(void *)(v11 - 40) = va;
  sub_100006F6C((void ***)(v11 - 40));
  sub_1000454AC((uint64_t *)va1);
  _Unwind_Resume(a1);
}

void sub_100058254(uint64_t a1, uint64_t *a2, uint64_t a3, int a4, void *a5)
{
  int v15 = a4;
  if (sub_100007684(a1 + 72792, (unsigned int *)&v15))
  {
    v14[0] = 0LL;
    sub_100007640((uint64_t)v14, a2);
    sub_1000583E4(a5, v14, a3);
    sub_100006E7C(v14);
  }

  else
  {
    uint64_t v8 = spinel_capability_to_cstr(v15);
    else {
      uint64_t v9 = *(const char **)a3;
    }
    snprintf(__str, 0xC8uLL, "Capability %s (required for %s) is not supported by NCP", v8, v9);
    sub_10000AC00(__p, __str);
    uint64_t v10 = (char *)operator new(0x20uLL);
    *(void *)uint64_t v10 = &off_1002AE030;
    *(_OWORD *)(v10 + 8) = *(_OWORD *)__p;
    *((void *)v10 + 3) = v12;
    __p[0] = 0LL;
    __p[1] = 0LL;
    uint64_t v12 = 0LL;
    uint64_t v13 = v10;
    sub_10003446C(a2);
    if (v13) {
      (*(void (**)(char *))(*(void *)v13 + 8LL))(v13);
    }
    if (SHIBYTE(v12) < 0) {
      operator delete(__p[0]);
    }
  }

void sub_100058394( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, char a19)
{
  if (a18) {
    (*(void (**)(uint64_t))(*(void *)a18 + 8LL))(a18);
  }
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1000583E4(void *a1, uint64_t *a2, uint64_t a3)
{
  if (!*a1)
  {
    std::runtime_error::runtime_error(&v8, "call to empty boost::function");
    v8.__vftable = (std::runtime_error_vtbl *)&off_1002AD8D8;
    sub_10000706C(&v8);
  }

  uint64_t v4 = *(void (**)(void *, uint64_t *, uint64_t))((*a1 & 0xFFFFFFFFFFFFFFFELL) + 8);
  uint64_t v5 = a1 + 1;
  v7[0] = 0LL;
  sub_100035654(v7, a2);
  v4(v5, v7, a3);
  return sub_100006E7C(v7);
}

void sub_100058474( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, std::runtime_error a13)
{
}

void *sub_100058498(uint64_t a1, char *a2, uint64_t *a3)
{
  v6[0] = 0LL;
  sub_100007640((uint64_t)v6, a3);
  sub_1000D606C(a1, a2, v6);
  return sub_100070E0C(v6);
}

void sub_1000584E8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *sub_1000584FC(uint64_t a1, char *a2, int a3, uint64_t *a4)
{
  v8[0] = 0LL;
  sub_100007640((uint64_t)v8, a4);
  sub_1000585D4((uint64_t)sub_100058254, 0LL, a1, a3, v8, (uint64_t)v9);
  sub_100071A50(v11, (uint64_t)v9);
  sub_100058498(a1, a2, (uint64_t *)v11);
  sub_100070E0C(v11);
  sub_100070E0C(v10);
  return sub_100070E0C(v8);
}

void sub_10005859C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
}

void *sub_1000585D4@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t *a5@<X4>, uint64_t a6@<X8>)
{
  v12[0] = 0LL;
  sub_100007640((uint64_t)v12, a5);
  sub_10007199C((uint64_t)v13, a3, a4, v12);
  sub_100071A18(a6, a1, a2, (uint64_t)v13);
  sub_100070E0C(v14);
  return sub_100070E0C(v12);
}

void sub_100058664( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100058688(uint64_t a1, char *a2, int a3, char *__s)
{
  if (v10 < 0) {
    operator delete(__p);
  }
}

void sub_100058730( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20, int a21, __int16 a22, char a23, char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  if (a14 < 0) {
    operator delete(a9);
  }
  _Unwind_Resume(a1);
}

void sub_100058774( std::string *__str@<X4>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X2>, int a5@<W3>, uint64_t a6@<X8>)
{
  if (v14 < 0) {
    operator delete(__p);
  }
}

void sub_10005880C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20, char a21, char a22)
{
  if (a22 < 0) {
    operator delete(__p);
  }
  if (a14 < 0) {
    operator delete(a9);
  }
  _Unwind_Resume(exception_object);
}

void *sub_100058840(uint64_t a1, char *a2, int a3, uint64_t *a4)
{
  v8[0] = 0LL;
  sub_100007640((uint64_t)v8, a4);
  sub_100058918((uint64_t)sub_100057040, 0LL, a1, a3, v8, (uint64_t)v9);
  sub_100072674(v11, (uint64_t)v9);
  sub_100058498(a1, a2, (uint64_t *)v11);
  sub_100070E0C(v11);
  sub_10004BED0(v10);
  return sub_10004BED0(v8);
}

void sub_1000588E0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
}

void *sub_100058918@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t *a5@<X4>, uint64_t a6@<X8>)
{
  v12[0] = 0LL;
  sub_100007640((uint64_t)v12, a5);
  sub_1000725F8((uint64_t)v13, a3, a4, v12);
  sub_100071A18(a6, a1, a2, (uint64_t)v13);
  sub_10004BED0(v14);
  return sub_10004BED0(v12);
}

void sub_1000589A8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1000589CC(uint64_t a1, char *a2, int a3, int a4, char *__s)
{
  if (v12 < 0) {
    operator delete(__p);
  }
}

void sub_100058A7C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20, int a21, __int16 a22, char a23, char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  if (a14 < 0) {
    operator delete(a9);
  }
  _Unwind_Resume(a1);
}

void *sub_100058AC0(uint64_t a1, char *a2, int a3, int a4, uint64_t *a5)
{
  v10[0] = 0LL;
  sub_100007640((uint64_t)v10, a5);
  sub_100058918((uint64_t)sub_100057040, 0LL, a1, a4, v10, (uint64_t)v11);
  sub_100072674(v13, (uint64_t)v11);
  sub_1000584FC(a1, a2, a3, (uint64_t *)v13);
  sub_100070E0C(v13);
  sub_10004BED0(v12);
  return sub_10004BED0(v10);
}

void sub_100058B68( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
}

uint64_t sub_100058BA0( _WORD *a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v20 = 0LL;
  uint64_t v21 = 0LL;
  uint64_t v22 = 0LL;
  if ((_DWORD)a2)
  {
    uint64_t v9 = a2;
    unint64_t v11 = 0LL;
    while (1)
    {
      unsigned int v12 = spinel_datatype_unpack(a1, v9, "c", a4, a5, a6, a7, a8, (uint64_t)&v24[v11]);
      if (!v12) {
        break;
      }
      BOOL v13 = v9 >= v12;
      uint64_t v9 = v9 - v12;
      if (!v13)
      {
        uint64_t v17 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        uint64_t v18 = v17;
        if (v17)
        {
          goto LABEL_24;
        }

        if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          goto LABEL_24;
        }
LABEL_23:
        sub_1001FB53C();
        goto LABEL_24;
      }

      a5 = v11 + 1;
      if ((_DWORD)v9)
      {
        a1 = (_WORD *)((char *)a1 + v12);
        BOOL v13 = v11++ >= 0x13;
        if (!v13) {
          continue;
        }
      }

      char v14 = v21;
      goto LABEL_11;
    }

    uint64_t v16 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (!v16)
    {
      if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        goto LABEL_24;
      }
      goto LABEL_23;
    }

void sub_100058D6C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
}

uint64_t sub_100058D9C( _WORD *a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v17 = 0;
  unsigned __int8 v16 = -1;
  if ((_DWORD)a2)
  {
    uint64_t v9 = a2;
    int v11 = 0;
    while (1)
    {
      unsigned int v12 = spinel_datatype_unpack(a1, v9, "C", a4, a5, a6, a7, a8, (uint64_t)&v16);
      BOOL v13 = v9 < v12 || (int)v12 < 1;
      if (v13 || v16 > 0x1Fu) {
        return 1LL;
      }
      v11 |= 1 << v16;
      int v17 = v11;
      a1 = (_WORD *)((char *)a1 + v12);
      uint64_t v9 = v9 - v12;
      if (!(_DWORD)v9) {
        goto LABEL_11;
      }
    }
  }

  else
  {
LABEL_11:
    sub_100017F70(a3, &v17);
    return 0LL;
  }

uint64_t sub_100058E5C(_WORD *a1, uint64_t a2, uint64_t *a3, int a4)
{
  v13[0] = 0LL;
  v13[1] = 0LL;
  _OWORD v11[2] = 0LL;
  unsigned int v12 = v13;
  v11[0] = (uint64_t)v11;
  v11[1] = (uint64_t)v11;
  uint64_t v8 = sub_10008D124(v14, a1, a2);
  if ((_DWORD)v8)
  {
    uint64_t v9 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v9)
    {
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }
  }

  else if (a4)
  {
    sub_10008C3D0((uint64_t)v14, &v12);
    sub_10005653C(a3, (uint64_t *)&v12);
  }

  else
  {
    sub_10008C93C((uint64_t)v14, v11);
    sub_10006DA9C(a3, (uint64_t)v11);
  }

  sub_10000C0E8(v11);
  sub_10000D448((uint64_t)&v12);
  unsigned int v12 = &v20;
  sub_100006F6C((void ***)&v12);
  unsigned int v12 = &v19;
  sub_100006F6C((void ***)&v12);
  unsigned int v12 = &v18;
  sub_100006F6C((void ***)&v12);
  if (v17 < 0) {
    operator delete(__p);
  }
  unsigned int v12 = &v15;
  sub_100006F6C((void ***)&v12);
  return v8;
}

void sub_100058FD4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, char a15)
{
}

uint64_t sub_100058FFC( _WORD *a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char v8 = a4;
  unsigned int v10 = a2;
  v52[0] = 0LL;
  v52[1] = 0LL;
  uint64_t v50 = 0LL;
  char v51 = v52;
  int v11 = spinel_datatype_unpack(a1, a2, "ESLccCC", a4, a5, a6, a7, a8, (uint64_t)&v50);
  if (v11 <= 0)
  {
    BOOL v13 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v13)
    {
      goto LABEL_44;
    }

    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
LABEL_43:
    }
      sub_1001FB53C();
LABEL_44:
    uint64_t v40 = 1LL;
    goto LABEL_45;
  }

  if (v11 > v10)
  {
    unsigned int v12 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v12)
    {
      goto LABEL_44;
    }

    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      goto LABEL_43;
    }
    goto LABEL_44;
  }

  if ((v8 & 1) != 0)
  {
    v54[0] = 0LL;
    v54[1] = 0LL;
    *(void *)std::string __str = v54;
    uint64_t v14 = v50[6];
    uint64_t v15 = v50[7];
    uint64_t v16 = v50[5];
    uint64_t v17 = v50[4];
    uint64_t v18 = v50[3];
    uint64_t v19 = v50[2];
    uint64_t v20 = v50[1];
    uint64_t v21 = *v50;
    uint64_t v22 = operator new(0x10uLL);
    *uint64_t v22 = &off_1002AE088;
    v22[1] = v15 | (v14 << 8) | (v16 << 16) | (v17 << 24) | (v18 << 32) | (v19 << 40) | (v20 << 48) | (v21 << 56);
    sub_10000AC00(&__p, "ExtAddress");
    unsigned int v23 = sub_10000ED88((uint64_t **)__str, &__p);
    uint64_t v24 = *v23;
    *unsigned int v23 = (uint64_t)v22;
    if (v24) {
      (*(void (**)(uint64_t))(*(void *)v24 + 8LL))(v24);
    }
    if (v43 < 0) {
      operator delete((void *)__p.n128_u64[0]);
    }
    uint64_t v25 = operator new(0x10uLL);
    *(void *)uint64_t v25 = &off_1002AE0D0;
    uint64_t v25[4] = v49;
    sub_10000AC00(&__p, "RLOC16");
    unsigned __int8 v26 = sub_10000ED88((uint64_t **)__str, &__p);
    uint64_t v27 = *v26;
    *unsigned __int8 v26 = (uint64_t)v25;
    if (v27) {
      (*(void (**)(uint64_t))(*(void *)v27 + 8LL))(v27);
    }
    if (v43 < 0) {
      operator delete((void *)__p.n128_u64[0]);
    }
    uint64_t v28 = operator new(0x10uLL);
    *(void *)uint64_t v28 = &off_1002AE1C8;
    __int128 v28[2] = v48;
    sub_10000AC00(&__p, "Age");
    BOOL v29 = sub_10000ED88((uint64_t **)__str, &__p);
    uint64_t v30 = *v29;
    *BOOL v29 = (uint64_t)v28;
    if (v30) {
      (*(void (**)(uint64_t))(*(void *)v30 + 8LL))(v30);
    }
    if (v43 < 0) {
      operator delete((void *)__p.n128_u64[0]);
    }
    uint64_t v31 = operator new(0x10uLL);
    *(void *)uint64_t v31 = &off_1002B01F0;
    v31[8] = v47;
    sub_10000AC00(&__p, "AverageRssi");
    uint64_t v32 = sub_10000ED88((uint64_t **)__str, &__p);
    uint64_t v33 = *v32;
    *uint64_t v32 = (uint64_t)v31;
    if (v33) {
      (*(void (**)(uint64_t))(*(void *)v33 + 8LL))(v33);
    }
    if (v43 < 0) {
      operator delete((void *)__p.n128_u64[0]);
    }
    char v34 = operator new(0x10uLL);
    *(void *)char v34 = &off_1002B01F0;
    v34[8] = v46;
    sub_10000AC00(&__p, "LastRssi");
    uint64_t v35 = sub_10000ED88((uint64_t **)__str, &__p);
    uint64_t v36 = *v35;
    *uint64_t v35 = (uint64_t)v34;
    if (v36) {
      (*(void (**)(uint64_t))(*(void *)v36 + 8LL))(v36);
    }
    if (v43 < 0) {
      operator delete((void *)__p.n128_u64[0]);
    }
    uint64_t v37 = operator new(0x10uLL);
    *(void *)uint64_t v37 = &off_1002AE118;
    v37[8] = v45;
    sub_10000AC00(&__p, "LinkQualityIn");
    uint64_t v38 = sub_10000ED88((uint64_t **)__str, &__p);
    uint64_t v39 = *v38;
    uint64_t *v38 = (uint64_t)v37;
    if (v39) {
      (*(void (**)(uint64_t))(*(void *)v39 + 8LL))(v39);
    }
    if (v43 < 0) {
      operator delete((void *)__p.n128_u64[0]);
    }
    sub_10005653C(a3, (uint64_t *)__str);
    sub_10000D448((uint64_t)__str);
  }

  else
  {
    snprintf( __str,  0xC8uLL,  "%02X%02X%02X%02X%02X%02X%02X%02X, RLOC16:%04x, Age:%u, AveRssi:%d, LastRssi:%d, LQIn:%d, LQOut:%d",  *v50,  v50[1],  v50[2],  v50[3],  v50[4],  v50[5],  v50[6],  v50[7],  v49,  v48,  v47,  v46,  v45,  v44);
    sub_10000AC00(&__p, __str);
    sub_1000175B4(a3, (uint64_t)&__p);
    if (v43 < 0) {
      operator delete((void *)__p.n128_u64[0]);
    }
  }

  uint64_t v40 = 0LL;
LABEL_45:
  sub_10000D448((uint64_t)&v51);
  return v40;
}

void sub_100059500( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, void *__p, uint64_t a24, int a25, __int16 a26, char a27, char a28, uint64_t a29, uint64_t a30, uint64_t a31, char a32, uint64_t a33, uint64_t a34, char a35)
{
  if (a28 < 0) {
    operator delete(__p);
  }
  sub_10000D448((uint64_t)&a32);
  _Unwind_Resume(a1);
}

uint64_t sub_1000595C0( _WORD *a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8 = a4;
  v37[0] = (uint64_t)v37;
  v37[1] = (uint64_t)v37;
  _OWORD v37[2] = 0LL;
  v36[0] = (uint64_t)v36;
  v36[1] = (uint64_t)v36;
  v36[2] = 0LL;
  if ((_DWORD)a2)
  {
    uint64_t v9 = a2;
    while (1)
    {
      uint64_t v35 = 0LL;
      int v11 = spinel_datatype_unpack(a1, v9, "t(6SC)", a4, a5, a6, a7, a8, (uint64_t)&v35);
      unsigned int v12 = v11;
      if (v11 <= 0) {
        break;
      }
      if (v9 < v11)
      {
        unsigned __int8 v26 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v26)
        {
          goto LABEL_46;
        }

        if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          goto LABEL_46;
        }
LABEL_45:
        sub_1001FB53C();
        goto LABEL_46;
      }

      if ((v8 & 1) != 0)
      {
        v39[0] = 0LL;
        v39[1] = 0LL;
        *(void *)std::string __str = v39;
        sub_100108154(v35, v31);
        BOOL v13 = (char *)operator new(0x20uLL);
        *(void *)BOOL v13 = &off_1002AE030;
        *(_OWORD *)(v13 + 8) = *(_OWORD *)v31;
        *((void *)v13 + 3) = v32;
        v31[0] = 0LL;
        v31[1] = 0LL;
        uint64_t v32 = 0LL;
        sub_10000AC00(&__p, "Address");
        uint64_t v14 = sub_10000ED88((uint64_t **)__str, &__p);
        uint64_t v15 = *v14;
        *uint64_t v14 = (uint64_t)v13;
        if (v15) {
          (*(void (**)(uint64_t))(*(void *)v15 + 8LL))(v15);
        }
        if (v30 < 0) {
          operator delete((void *)__p.n128_u64[0]);
        }
        if (SHIBYTE(v32) < 0) {
          operator delete(v31[0]);
        }
        uint64_t v16 = operator new(0x10uLL);
        *(void *)uint64_t v16 = &off_1002AE0D0;
        uint64_t v16[4] = v34;
        sub_10000AC00(v31, "RLOC16");
        uint64_t v17 = sub_10000ED88((uint64_t **)__str, (__n128 *)v31);
        uint64_t v18 = *v17;
        *uint64_t v17 = (uint64_t)v16;
        if (v18) {
          (*(void (**)(uint64_t))(*(void *)v18 + 8LL))(v18);
        }
        if (SHIBYTE(v32) < 0) {
          operator delete(v31[0]);
        }
        uint64_t v19 = operator new(0x10uLL);
        *(void *)uint64_t v19 = &off_1002AE118;
        v19[8] = v33;
        sub_10000AC00(v31, "Age");
        uint64_t v20 = sub_10000ED88((uint64_t **)__str, (__n128 *)v31);
        uint64_t v21 = *v20;
        *uint64_t v20 = (uint64_t)v19;
        if (v21) {
          (*(void (**)(uint64_t))(*(void *)v21 + 8LL))(v21);
        }
        if (SHIBYTE(v32) < 0) {
          operator delete(v31[0]);
        }
        sub_10000D584(v36, (uint64_t *)__str);
        sub_10000D448((uint64_t)__str);
      }

      else
      {
        sub_100108154(v35, v31);
        uint64_t v22 = v31;
        if (v32 < 0) {
          uint64_t v22 = (void **)v31[0];
        }
        snprintf(__str, 0x64uLL, "%s -> 0x%04x, age:%d", (const char *)v22, v34, v33);
        if (SHIBYTE(v32) < 0) {
          operator delete(v31[0]);
        }
        sub_10000AC00(v31, __str);
        sub_100044B24(v37, (uint64_t)v31);
        if (SHIBYTE(v32) < 0) {
          operator delete(v31[0]);
        }
      }

      BOOL v23 = v9 >= v12;
      uint64_t v9 = v9 - v12;
      if (!v23) {
        __break(0x5515u);
      }
      a1 = (_WORD *)((char *)a1 + v12);
      if (!(_DWORD)v9) {
        goto LABEL_30;
      }
    }

    uint64_t v25 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (!v25)
    {
      if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        goto LABEL_46;
      }
      goto LABEL_45;
    }

LABEL_46:
    uint64_t v24 = 1LL;
  }

  else
  {
LABEL_30:
    if (v8) {
      sub_100070E34(a3, (uint64_t)v36);
    }
    else {
      sub_10006DA9C(a3, (uint64_t)v37);
    }
    uint64_t v24 = 0LL;
  }

  sub_10000C178(v36);
  sub_10000C0E8(v37);
  return v24;
}

    sub_10000AC00(&v58, "JoinerStop");
    sub_10000AC00(&__p, "method");
    uint64_t v24 = sub_10000ED88(&v64, &__p);
    sub_1000175B4(v24, (uint64_t)&v58);
    if (v57 < 0) {
      operator delete((void *)__p.n128_u64[0]);
    }
    if (SHIBYTE(v59) < 0) {
      operator delete((void *)v58.n128_u64[0]);
    }
    v48[0] = _NSConcreteStackBlock;
    v48[1] = 1174405120LL;
    v48[2] = sub_1000BCA54;
    v48[3] = &unk_1002B1D68;
    uint64_t v48[4] = a1;
    uint64_t v21 = v49;
    sub_10000D19C(v49, (uint64_t *)&v64);
    if (v7) {
      uint64_t v25 = _Block_copy(v7);
    }
    else {
      uint64_t v25 = 0LL;
    }
    uint64_t v50 = v25;
    xpc_object_t object = v9;
    if (v9) {
      dispatch_retain(v9);
    }
    sub_1000BE60C(a1, (uint64_t)v48);
    if (object) {
      dispatch_release(object);
    }
    if (v50) {
      _Block_release(v50);
    }
    goto LABEL_118;
  }

  BOOL v13 = *(void *)&buf[8];
  if (*(void *)&buf[8] == 10LL)
  {
    if (**(void **)buf == 0x745372656E696F4ALL && *(_WORD *)(*(void *)buf + 8LL) == 28783) {
      goto LABEL_46;
    }
    BOOL v13 = *(void *)&buf[8];
  }

  else if (*(void *)&buf[8] == 11LL {
         && **(void **)buf == 0x745372656E696F4ALL
  }
         && *(void *)(*(void *)buf + 3LL) == 0x747261745372656ELL)
  {
    goto LABEL_58;
  }

  if (v13 == 12)
  {
    unsigned int v12 = *(_BYTE **)buf;
    goto LABEL_28;
  }

            sub_10010BC24(a1, a3);
            sub_10010B5B0(a1, a3, 0);
            return 0LL;
          }

  __break(0x5500u);
}

  if (data[23] < 0)
  {
    uint64_t v18 = *(std::string::pointer *)data;
    uint64_t v19 = *((void *)data + 1);
  }

  else
  {
    uint64_t v18 = data;
    uint64_t v19 = data[23];
  }

  if (v19 <= v8) {
    goto LABEL_53;
  }
  uint64_t v20 = v8;
  while (v18[v20] != 47)
  {
    if (v19 == ++v20) {
      goto LABEL_53;
    }
  }

  if (v19 == v20 || v20 == -1LL) {
LABEL_53:
  }
    uint64_t v20 = v3;
  if (data[23] < 0) {
    uint64_t data = *(std::string::pointer *)data;
  }
  sub_10016E7C8(v1, &data[v8], &data[v20], v20 - v8);
}

void sub_1000599B8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, int a16, __int16 a17, char a18, char a19, void *__p, uint64_t a21, int a22, __int16 a23, char a24, char a25, uint64_t a26, uint64_t a27, char a28, uint64_t a29, uint64_t a30, char a31, uint64_t a32, uint64_t a33, char a34)
{
}

uint64_t sub_100059AA4( _WORD *a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned int v9 = a2;
  int v10 = spinel_datatype_unpack(a1, a2, "C", a4, a5, a6, a7, a8, (uint64_t)&v18);
  if (v10 <= 0)
  {
    BOOL v13 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v13)
    {
      uint64_t v14 = v13;
      return 1LL;
    }

    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
LABEL_19:
    }
      sub_1001FB53C();
    return 1LL;
  }

  if (v10 > v9)
  {
    int v11 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v11)
    {
      unsigned int v12 = v11;
      if (sub_10015A058(4))
      {
        if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
          sub_100203B20();
        }
      }

      return 1LL;
    }

    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      goto LABEL_19;
    }
    return 1LL;
  }

  if (v18 == 2)
  {
    sub_10000AC00(__p, "off");
    sub_1000175B4(a3, (uint64_t)__p);
  }

  else if (v18 == 1)
  {
    sub_10000AC00(__p, "low-power");
    sub_1000175B4(a3, (uint64_t)__p);
  }

  else
  {
    if (v18) {
      sub_10000AC00(__p, "unknown");
    }
    else {
      sub_10000AC00(__p, "on");
    }
    sub_1000175B4(a3, (uint64_t)__p);
  }

  if (v17 < 0) {
    operator delete(__p[0]);
  }
  return 0LL;
}

void sub_100059C60( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100059C88( _WORD *a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned int v9 = a2;
  int v10 = spinel_datatype_unpack(a1, a2, "C", a4, a5, a6, a7, a8, (uint64_t)&v18);
  if (v10 <= 0)
  {
    BOOL v13 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v13)
    {
      uint64_t v14 = v13;
      return 1LL;
    }

    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
LABEL_16:
    }
      sub_1001FB53C();
    return 1LL;
  }

  if (v10 > v9)
  {
    int v11 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v11)
    {
      unsigned int v12 = v11;
      if (sub_10015A058(4))
      {
        if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
          sub_100203C10();
        }
      }

      return 1LL;
    }

    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      goto LABEL_16;
    }
    return 1LL;
  }

  switch(v18)
  {
    case 0:
      sub_10000AC00(__p, "idle");
      sub_1000175B4(a3, (uint64_t)__p);
      break;
    case 1:
      sub_10000AC00(__p, "discover");
      sub_1000175B4(a3, (uint64_t)__p);
      break;
    case 2:
      sub_10000AC00(__p, "connecting");
      sub_1000175B4(a3, (uint64_t)__p);
      break;
    case 3:
      sub_10000AC00(__p, "connected");
      sub_1000175B4(a3, (uint64_t)__p);
      break;
    case 4:
      sub_10000AC00(__p, "entrust");
      sub_1000175B4(a3, (uint64_t)__p);
      break;
    case 5:
      sub_10000AC00(__p, "joined");
      sub_1000175B4(a3, (uint64_t)__p);
      break;
    default:
      sub_10000AC00(__p, "unknown");
      sub_1000175B4(a3, (uint64_t)__p);
      break;
  }

  if (v17 < 0) {
    operator delete(__p[0]);
  }
  return 0LL;
}

void sub_100059EB0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100059EE4( _WORD *a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (v12 == 2)
  {
    sub_10000AC00(__p, "active");
    sub_1000175B4(a3, (uint64_t)__p);
    goto LABEL_9;
  }

  if (v12 == 1)
  {
    sub_10000AC00(__p, "petition");
    sub_1000175B4(a3, (uint64_t)__p);
    goto LABEL_9;
  }

  if (v12) {
    return 1LL;
  }
  sub_10000AC00(__p, "disabled");
  sub_1000175B4(a3, (uint64_t)__p);
LABEL_9:
  if (v11 < 0) {
    operator delete(__p[0]);
  }
  return 0LL;
}

void sub_100059FB4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100059FD8( _WORD *a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8 = a4;
  v29[0] = 0LL;
  v29[1] = 0LL;
  _OWORD v27[2] = 0LL;
  uint64_t v28 = v29;
  v27[0] = (uint64_t)v27;
  v27[1] = (uint64_t)v27;
  v26[0] = (uint64_t)v26;
  v26[1] = (uint64_t)v26;
  __int128 v26[2] = 0LL;
  *(void *)uint64_t v25 = 0LL;
  char v24 = 0;
  if ((_DWORD)a2)
  {
    uint64_t v9 = a2;
    while (1)
    {
      int v11 = spinel_datatype_unpack(a1, v9, "t(Ec)", a4, a5, a6, a7, a8, (uint64_t)v25);
      unsigned int v12 = v11;
      if (v11 <= 0) {
        break;
      }
      if (v9 < v11)
      {
        uint64_t v19 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v19)
        {
          goto LABEL_36;
        }

        if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          goto LABEL_36;
        }
LABEL_35:
        sub_1001FB53C();
        goto LABEL_36;
      }

      if (v8)
      {
        sub_10004D280((uint64_t)&v28);
        uint64_t v31 = 0LL;
        __n128 v30 = 0uLL;
        sub_100018E8C(&v30, *(const void **)v25, *(void *)v25 + 8LL, 8uLL);
        sub_10000AC00(&__p, "ExtAddress");
        BOOL v13 = sub_10000ED88(&v28, &__p);
        sub_100017FCC(v13, &v30);
        if (v23 < 0) {
          operator delete((void *)__p.n128_u64[0]);
        }
        __p.n128_u64[0] = (unint64_t)&v30;
        sub_100006F6C((void ***)&__p);
        if (v24 != 127)
        {
          sub_10000AC00(&v30, "FixedRssi");
          uint64_t v14 = sub_10000ED88(&v28, &v30);
          sub_100070E8C(v14, &v24);
          if (SHIBYTE(v31) < 0) {
            operator delete((void *)v30.n128_u64[0]);
          }
        }

        sub_10000D584(v27, (uint64_t *)&v28);
      }

      else
      {
        unsigned int v15 = snprintf( (char *)&v30,  0x1F4uLL,  "%02X%02X%02X%02X%02X%02X%02X%02X",  **(_BYTE **)v25,  *(unsigned __int8 *)(*(void *)v25 + 1LL),  *(unsigned __int8 *)(*(void *)v25 + 2LL),  *(unsigned __int8 *)(*(void *)v25 + 3LL),  *(unsigned __int8 *)(*(void *)v25 + 4LL),  *(unsigned __int8 *)(*(void *)v25 + 5LL),  *(unsigned __int8 *)(*(void *)v25 + 6LL),  *(unsigned __int8 *)(*(void *)v25 + 7LL));
        if (v15 <= 0x1F3 && v24 != 127) {
          snprintf((char *)&v30 + v15, 500LL - v15, "   fixed-rssi:%d", v24);
        }
        sub_10000AC00(&__p, (char *)&v30);
        sub_100044B24(v26, (uint64_t)&__p);
        if (v23 < 0) {
          operator delete((void *)__p.n128_u64[0]);
        }
      }

      BOOL v16 = v9 >= v12;
      uint64_t v9 = v9 - v12;
      if (!v16) {
        __break(0x5515u);
      }
      a1 = (_WORD *)((char *)a1 + v12);
      if (!(_DWORD)v9) {
        goto LABEL_20;
      }
    }

    char v18 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (!v18)
    {
      if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        goto LABEL_36;
      }
      goto LABEL_35;
    }

void sub_10005A33C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20, __int16 a21, char a22, char a23, uint64_t a24, uint64_t a25, char a26, uint64_t a27, uint64_t a28, char a29, uint64_t a30, uint64_t a31, char a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, int a37, __int16 a38, char a39, char a40)
{
}

uint64_t sub_10005A3DC( _WORD *a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8 = a4;
  v25[0] = 0LL;
  v25[1] = 0LL;
  _OWORD v23[2] = 0LL;
  char v24 = v25;
  v23[0] = (uint64_t)v23;
  v23[1] = (uint64_t)v23;
  v22[0] = (uint64_t)v22;
  v22[1] = (uint64_t)v22;
  __int128 v22[2] = 0LL;
  *(void *)uint64_t v21 = 0LL;
  if ((_DWORD)a2)
  {
    uint64_t v10 = a2;
    while (1)
    {
      int v12 = spinel_datatype_unpack(a1, v10, "t(E)", a4, a5, a6, a7, a8, (uint64_t)v21);
      unsigned int v13 = v12;
      if (v8)
      {
        sub_10004D280((uint64_t)&v24);
        uint64_t v27 = 0LL;
        __n128 __str = 0uLL;
        sub_100018E8C(&__str, *(const void **)v21, *(void *)v21 + 8LL, 8uLL);
        sub_10000AC00(&__p, "ExtAddress");
        unsigned int v15 = sub_10000ED88(&v24, &__p);
        sub_100017FCC(v15, &__str);
        if (v20 < 0) {
          operator delete((void *)__p.n128_u64[0]);
        }
        __p.n128_u64[0] = (unint64_t)&__str;
        sub_100006F6C((void ***)&__p);
        sub_10000D584(v23, (uint64_t *)&v24);
      }

      else
      {
        snprintf( (char *)&__str,  0x1F4uLL,  "%02X%02X%02X%02X%02X%02X%02X%02X",  **(_BYTE **)v21,  *(unsigned __int8 *)(*(void *)v21 + 1LL),  *(unsigned __int8 *)(*(void *)v21 + 2LL),  *(unsigned __int8 *)(*(void *)v21 + 3LL),  *(unsigned __int8 *)(*(void *)v21 + 4LL),  *(unsigned __int8 *)(*(void *)v21 + 5LL),  *(unsigned __int8 *)(*(void *)v21 + 6LL),  *(unsigned __int8 *)(*(void *)v21 + 7LL));
        sub_10000AC00(&__p, (char *)&__str);
        sub_100044B24(v22, (uint64_t)&__p);
        if (v20 < 0) {
          operator delete((void *)__p.n128_u64[0]);
        }
      }

      BOOL v16 = v10 >= v13;
      uint64_t v10 = v10 - v13;
      if (!v16) {
        __break(0x5515u);
      }
      a1 = (_WORD *)((char *)a1 + v13);
      if (!(_DWORD)v10) {
        goto LABEL_16;
      }
    }

    uint64_t v17 = 1LL;
  }

  else
  {
LABEL_16:
    if (v8) {
      sub_100070E34(a3, (uint64_t)v23);
    }
    else {
      sub_10006DA9C(a3, (uint64_t)v22);
    }
    uint64_t v17 = 0LL;
  }

  sub_10000C0E8(v22);
  sub_10000C178(v23);
  sub_10000D448((uint64_t)&v24);
  return v17;
}

void sub_10005A604( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20, char a21, char a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, char a30, uint64_t a31, uint64_t a32, char a33)
{
}

uint64_t sub_10005A67C( _WORD *a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8 = a4;
  v32[0] = (uint64_t)v32;
  v32[1] = (uint64_t)v32;
  void v32[2] = 0LL;
  v31[0] = (uint64_t)v31;
  v31[1] = (uint64_t)v31;
  _OWORD v31[2] = 0LL;
  if ((_DWORD)a2)
  {
    uint64_t v9 = a2;
    while (1)
    {
      int v11 = spinel_datatype_unpack(a1, v9, "t(CS)", a4, a5, a6, a7, a8, (uint64_t)&v30);
      unsigned int v12 = v11;
      if (v11 <= 0) {
        break;
      }
      if (v9 < v11)
      {
        char v24 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v24)
        {
          goto LABEL_36;
        }

        if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          goto LABEL_36;
        }
LABEL_35:
        sub_1001FB53C();
        goto LABEL_36;
      }

      if ((v8 & 1) != 0)
      {
        v34[0] = 0LL;
        v34[1] = 0LL;
        *(void *)__n128 __str = v34;
        int v13 = v30;
        uint64_t v14 = operator new(0x10uLL);
        *(void *)uint64_t v14 = &off_1002AE160;
        void v14[2] = v13;
        sub_10000AC00(&__p, "Channel");
        unsigned int v15 = sub_10000ED88((uint64_t **)__str, &__p);
        uint64_t v16 = *v15;
        uint64_t *v15 = (uint64_t)v14;
        if (v16) {
          (*(void (**)(uint64_t))(*(void *)v16 + 8LL))(v16);
        }
        if (v28 < 0) {
          operator delete((void *)__p.n128_u64[0]);
        }
        int v17 = v29;
        char v18 = operator new(0x10uLL);
        *(void *)char v18 = &off_1002AE160;
        v18[2] = v17;
        sub_10000AC00(&__p, "Quality");
        uint64_t v19 = sub_10000ED88((uint64_t **)__str, &__p);
        uint64_t v20 = *v19;
        uint64_t *v19 = (uint64_t)v18;
        if (v20) {
          (*(void (**)(uint64_t))(*(void *)v20 + 8LL))(v20);
        }
        if (v28 < 0) {
          operator delete((void *)__p.n128_u64[0]);
        }
        sub_10000D584(v31, (uint64_t *)__str);
        sub_10000D448((uint64_t)__str);
      }

      else
      {
        snprintf(__str, 0x64uLL, "ch %d (0x%04x) %.2f%% busy ", v30, v29, (double)v29 * 100.0 / 65535.0);
        sub_10000AC00(&__p, __str);
        sub_100044B24(v32, (uint64_t)&__p);
        if (v28 < 0) {
          operator delete((void *)__p.n128_u64[0]);
        }
      }

      BOOL v21 = v9 >= v12;
      uint64_t v9 = v9 - v12;
      if (!v21) {
        __break(0x5515u);
      }
      a1 = (_WORD *)((char *)a1 + v12);
      if (!(_DWORD)v9) {
        goto LABEL_20;
      }
    }

    char v23 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (!v23)
    {
      if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        goto LABEL_36;
      }
      goto LABEL_35;
    }

void sub_10005A9C8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, uint64_t a20, char a21, uint64_t a22, uint64_t a23, char a24, uint64_t a25, uint64_t a26, char a27)
{
}

uint64_t sub_10005AA64( _WORD *a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8 = a4;
  int v11 = 0;
  v35[0] = (uint64_t)v35;
  v35[1] = (uint64_t)v35;
  _OWORD v35[2] = 0LL;
  v34[0] = 0LL;
  v34[1] = 0LL;
  unsigned __int8 v33 = v34;
LABEL_2:
  uint64_t v32 = 0LL;
  unsigned int v31 = 0;
  if (v11) {
    unint64_t v12 = 144LL;
  }
  else {
    unint64_t v12 = 200LL;
  }
  if (v11) {
    int v13 = off_1002AFEF0;
  }
  else {
    int v13 = off_1002AFE28;
  }
  unsigned int v14 = spinel_datatype_unpack(a1, a2, "d", a4, a5, a6, a7, a8, (uint64_t)&v32);
  if (!v14)
  {
    char v24 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v24)
    {
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      goto LABEL_37;
    }

    goto LABEL_38;
  }

  BOOL v15 = a2 >= v14;
  a2 = a2 - v14;
  if (!v15)
  {
    uint64_t v25 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    unsigned __int8 v26 = v25;
    if (v25)
    {
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      goto LABEL_37;
    }

    goto LABEL_38;
  }

  unint64_t v16 = 0LL;
  a1 = (_WORD *)((char *)a1 + v14);
  while (1)
  {
    if (!v13[v16 / 8])
    {
      if (++v11 != 2) {
        goto LABEL_2;
      }
      if (v8) {
        sub_10005653C(a3, (uint64_t *)&v33);
      }
      else {
        sub_10006DA9C(a3, (uint64_t)v35);
      }
      uint64_t v22 = 0LL;
      goto LABEL_39;
    }

    unsigned int v17 = spinel_datatype_unpack(v32, v31, "L", a4, a5, a6, a7, a8, (uint64_t)&v30);
    if (!v17) {
      break;
    }
    if (v31 < v17)
    {
      BOOL v21 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v21)
      {
        goto LABEL_38;
      }

      if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        goto LABEL_38;
      }
      goto LABEL_37;
    }

    uint64_t v32 = (_WORD *)((char *)v32 + v17);
    v31 -= v17;
    if ((v8 & 1) != 0)
    {
      sub_10000AC00(&__str, v13[v16 / 8]);
      char v18 = sub_10000ED88(&v33, &__str);
      sub_100017F70(v18, &v30);
      if (v37 < 0)
      {
        uint64_t v19 = (void *)__str.n128_u64[0];
LABEL_20:
        operator delete(v19);
      }
    }

    else
    {
      snprintf((char *)&__str, 0xC8uLL, "%-20s = %d", v13[v16 / 8], v30);
      sub_10000AC00(__p, (char *)&__str);
      sub_100044B24(v35, (uint64_t)__p);
      if (v29 < 0)
      {
        uint64_t v19 = __p[0];
        goto LABEL_20;
      }
    }

    v16 += 8LL;
    if (v12 <= v16) {
      __break(1u);
    }
  }

  uint64_t v20 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v20)
  {
    goto LABEL_38;
  }

  if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
    goto LABEL_38;
  }
LABEL_37:
  sub_1001FB53C();
LABEL_38:
  uint64_t v22 = 1LL;
LABEL_39:
  sub_10000D448((uint64_t)&v33);
  sub_10000C0E8(v35);
  return v22;
}

void sub_10005AE2C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20, char a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, int a29, __int16 a30, char a31, char a32)
{
}

uint64_t sub_10005AE9C( _WORD *a1, uint64_t a2, uint64_t *a3, uint64_t a4, char *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v9 = a4;
  unsigned int v11 = a2;
  __int128 v78 = 0u;
  __int128 v79 = 0u;
  __int128 v76 = 0u;
  __int128 v77 = 0u;
  __int128 v74 = 0u;
  __int128 v75 = 0u;
  __int128 v72 = 0u;
  __int128 v73 = 0u;
  __int128 v70 = 0u;
  __int128 v71 = 0u;
  __int128 v68 = 0u;
  __int128 v69 = 0u;
  __int128 v66 = 0u;
  __int128 v67 = 0u;
  __int128 v64 = 0u;
  __int128 v65 = 0u;
  __int128 v62 = 0u;
  __int128 v63 = 0u;
  __int128 v60 = 0u;
  __int128 v61 = 0u;
  __int128 v58 = 0u;
  __int128 v59 = 0u;
  __int128 v56 = 0u;
  __int128 v57 = 0u;
  *(_OWORD *)__s = 0u;
  uint64_t v54 = 0LL;
  unsigned int v53 = 0;
  v52[0] = 0LL;
  v52[1] = 0LL;
  char v51 = v52;
  unsigned int v12 = spinel_datatype_unpack(a1, a2, "d", a4, (uint64_t)a5, a6, a7, a8, (uint64_t)&v54);
  if (!v12)
  {
    uint64_t v19 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (!v19)
    {
      if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        goto LABEL_63;
      }
      goto LABEL_45;
    }

    goto LABEL_63;
  }

  if (v12 > v11)
  {
    char v18 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v18)
    {
      goto LABEL_63;
    }

    if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      goto LABEL_63;
    }
LABEL_45:
    sub_1001FB53C();
    goto LABEL_63;
  }

  strcpy(__s, "[ ");
  uint64_t v20 = v53;
  if (v53)
  {
    unsigned int v21 = 0;
    unsigned int v22 = 2;
    while (1)
    {
      unsigned int v23 = spinel_datatype_unpack(v54, v20, "L", v13, v14, v15, v16, v17, (uint64_t)&v50);
      if (!v23) {
        break;
      }
      if (v53 < v23)
      {
        char v37 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v37)
        {
          goto LABEL_63;
        }

        if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          goto LABEL_63;
        }
LABEL_62:
        sub_1001FB53C();
        goto LABEL_63;
      }

      uint64_t v54 = (_WORD *)((char *)v54 + v23);
      v53 -= v23;
      if (v22 > 0x190) {
        goto LABEL_66;
      }
      int v24 = snprintf(&__s[v22], 400LL - v22, "%d", v50);
      BOOL v25 = __OFADD__(v22, v24);
      unsigned int v26 = v22 + v24;
      if (v25) {
        goto LABEL_65;
      }
      if (v53)
      {
        if (v26 > 0x190) {
          goto LABEL_66;
        }
        int v27 = snprintf(&__s[v26], 400LL - v26, ", ");
      }

      else
      {
        if (v26 > 0x190) {
          goto LABEL_66;
        }
        int v27 = snprintf(&__s[v26], 400LL - v26, " ]");
      }

      BOOL v25 = __OFADD__(v26, v27);
      unsigned int v22 = v26 + v27;
      if (v25) {
        goto LABEL_65;
      }
      if (v9)
      {
        memset(&v49, 0, sizeof(v49));
        sub_10000AC00(&v44, a5);
        sub_10000AC00(v42, "[");
        char v28 = sub_10000D650(&v44, (const std::string::value_type *)v42);
        __int128 v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
        v45.__r_.__value_.__l.__cap_ = v28->__r_.__value_.__l.__cap_;
        *(_OWORD *)&v45.__r_.__value_.__l.__data_ = v29;
        v28->__r_.__value_.__l.__size_ = 0LL;
        v28->__r_.__value_.__l.__cap_ = 0LL;
        v28->__r_.__value_.__r.__words[0] = 0LL;
        std::to_string(&v41, v21);
        int v30 = sub_10000D650(&v45, (const std::string::value_type *)&v41);
        __int128 v31 = *(_OWORD *)&v30->__r_.__value_.__l.__data_;
        v46.__r_.__value_.__l.__cap_ = v30->__r_.__value_.__l.__cap_;
        *(_OWORD *)&v46.__r_.__value_.__l.__data_ = v31;
        v30->__r_.__value_.__l.__size_ = 0LL;
        v30->__r_.__value_.__l.__cap_ = 0LL;
        v30->__r_.__value_.__r.__words[0] = 0LL;
        sub_10000AC00(v39, "]");
        uint64_t v32 = sub_10000D650(&v46, (const std::string::value_type *)v39);
        __int128 v33 = *(_OWORD *)&v32->__r_.__value_.__l.__data_;
        std::string::size_type cap = v32->__r_.__value_.__l.__cap_;
        *(_OWORD *)__n128 __p = v33;
        v32->__r_.__value_.__l.__size_ = 0LL;
        v32->__r_.__value_.__l.__cap_ = 0LL;
        v32->__r_.__value_.__r.__words[0] = 0LL;
        sub_100014D08((uint64_t)&v49, (__int128 *)__p);
        if (SHIBYTE(cap) < 0) {
          operator delete(__p[0]);
        }
        if (v40 < 0) {
          operator delete(v39[0]);
        }
        if (v43 < 0) {
          operator delete(v42[0]);
        }
        unsigned __int16 v34 = sub_100070EE8(&v51, &v49);
        sub_100017F70(v34, &v50);
      }

      if (v21 == -1)
      {
LABEL_65:
        __break(0x5500u);
LABEL_66:
        __break(0x5512u);
      }

      uint64_t v20 = v53;
      ++v21;
      if (!v53) {
        goto LABEL_42;
      }
    }

    uint64_t v36 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (!v36)
    {
      if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        goto LABEL_63;
      }
      goto LABEL_62;
    }

LABEL_42:
  if (v9)
  {
    sub_10005653C(a3, (uint64_t *)&v51);
  }

  else
  {
    sub_10000AC00(&v49, __s);
    sub_1000175B4(a3, (uint64_t)&v49);
  }

  uint64_t v35 = 0LL;
LABEL_64:
  sub_10000D448((uint64_t)&v51);
  return v35;
}

LABEL_43:
    char v43 = 0;
LABEL_44:
    std::string v44 = 1;
    goto LABEL_45;
  }

  unsigned __int16 v34 = sub_1000160F4("com.apple.wpantund.tnm", "form");
  uint64_t v35 = (os_log_s *)objc_claimAutoreleasedReturnValue(v34);
  if (os_log_type_enabled(v35, OS_LOG_TYPE_INFO))
  {
    var0 = a3.var0.var0;
    sub_1000E7B14(v89, &v79);
    uint64_t v36 = (char)v79.__r_.__value_.__s.__size_;
    char v37 = v79.__r_.__value_.__r.__words[0];
    std::string::basic_string(&v117, &v90);
    uint64_t v38 = &v79;
    if (v36 < 0) {
      uint64_t v38 = (std::string *)v37;
    }
    uint64_t v39 = &v117;
    if ((v117.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      uint64_t v39 = (std::string *)v117.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)__n128 buf = 136315650;
    *(void *)&uint8_t buf[4] = "Network:PSKc";
    *(_WORD *)&_BYTE buf[12] = 2080;
    *(void *)&_BYTE buf[14] = v38;
    *(_WORD *)&buf[22] = 2080;
    *(void *)&uint8_t buf[24] = v39;
    _os_log_impl( (void *)&_mh_execute_header,  v35,  OS_LOG_TYPE_INFO,  "Set Result for %s = %s, Error Info: %s",  buf,  0x20u);
    a3.var0.var0 = var0;
  }

  lastHostConfiguredChannel = self->_lastHostConfiguredChannel;
  std::string v41 = self->_CtrInternalClientPtr;
  unsigned int v95 = v14;
  char v96 = 1;
  uint64_t v97 = lastHostConfiguredChannel;
  int v98 = 0;
  unsigned int v99 = v93;
  uint64_t v100 = v94;
  uint64_t v101 = 0;
  uint64_t v102 = 1;
  uint64_t v103 = v8;
  uint64_t v104 = 1;
  *(_DWORD *)uint64_t v105 = *(_DWORD *)v92;
  *(_DWORD *)&v105[3] = *(_DWORD *)&v92[3];
  uint64_t v106 = NewXPANIDAsInt;
  uint64_t v107 = 1;
  uint64_t v108 = v120;
  uint64_t v109 = 0;
  uint64_t v110 = 0;
  unsigned int v111 = 0;
  *(_DWORD *)char v112 = *(_DWORD *)v91;
  *(_DWORD *)&v112[3] = *(_DWORD *)&v91[3];
  int v113 = "router";
  uint64_t v114 = 0;
  uint64_t v115 = 0;
  *(void *)uint64_t v116 = *(void *)v119;
  *(void *)&v116[6] = *(void *)&v119[6];
  if (v41) {
    -[CtrInternalClient form:](v41, "form:", &v95);
  }
  else {
    memset(buf, 0, 32);
  }
  sub_1000E4898(&v89, (uint64_t)buf);
  if (v89)
  {
    int v42 = sub_1000160F4("com.apple.wpantund.tnm", "form");
    __int128 v33 = (os_log_s *)objc_claimAutoreleasedReturnValue(v42);
    if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR))
    {
      sub_1000E7B14(v89, buf);
      __int128 v66 = (char)buf[23];
      __int128 v67 = *(uint8_t **)buf;
      std::string::basic_string(&v79, &v90);
      __int128 v68 = buf;
      if (v66 < 0) {
        __int128 v68 = v67;
      }
      if ((v79.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        __int128 v69 = &v79;
      }
      else {
        __int128 v69 = (std::string *)v79.__r_.__value_.__r.__words[0];
      }
      LODWORD(v117.__r_.__value_.__l.__data_) = 136315394;
      *(std::string::size_type *)((char *)v117.__r_.__value_.__r.__words + 4) = (std::string::size_type)v68;
      WORD2(v117.__r_.__value_.__r.__words[1]) = 2080;
      *(std::string::size_type *)((char *)&v117.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v69;
      _os_log_error_impl( (void *)&_mh_execute_header,  v33,  OS_LOG_TYPE_ERROR,  "Set Result for FORM = %s, Error Info: %s",  (uint8_t *)&v117,  0x16u);
    }

    goto LABEL_42;
  }

  std::string v46 = sub_1000160F4("com.apple.wpantund.tnm", "form");
  char v47 = (os_log_s *)objc_claimAutoreleasedReturnValue(v46);
  if (os_log_type_enabled(v47, OS_LOG_TYPE_INFO))
  {
    sub_1000E7B14(v89, buf);
    int v48 = (char)buf[23];
    std::string v49 = *(uint8_t **)buf;
    std::string::basic_string(&v79, &v90);
    int v50 = buf;
    if (v48 < 0) {
      int v50 = v49;
    }
    if ((v79.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      char v51 = &v79;
    }
    else {
      char v51 = (std::string *)v79.__r_.__value_.__r.__words[0];
    }
    LODWORD(v117.__r_.__value_.__l.__data_) = 136315394;
    *(std::string::size_type *)((char *)v117.__r_.__value_.__r.__words + 4) = (std::string::size_type)v50;
    WORD2(v117.__r_.__value_.__r.__words[1]) = 2080;
    *(std::string::size_type *)((char *)&v117.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v51;
    _os_log_impl( (void *)&_mh_execute_header,  v47,  OS_LOG_TYPE_INFO,  "Set Result for FORM = %s, Error Info: %s",  (uint8_t *)&v117,  0x16u);
  }

  uint64_t v52 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableString stringWithCapacity:](&OBJC_CLASS___NSMutableString, "stringWithCapacity:", 0LL));
  unsigned int v53 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", @"0x%04X", v8));
  [v52 appendString:v53];

  uint64_t v54 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableString stringWithCapacity:](&OBJC_CLASS___NSMutableString, "stringWithCapacity:", 0LL));
  char v55 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"%08llX",  NewXPANIDAsInt));
  [v54 appendString:v55];

  sleep(2u);
  -[ThreadNetworkManagerInstance saveThreadConfiguration:passPhrase:]( self,  "saveThreadConfiguration:passPhrase:",  a3.var0.var0,  v17);
  sub_1000E4898(&v87, (uint64_t)buf);
  if (LODWORD(v87.__r_.__value_.__l.__data_))
  {
    __int128 v56 = sub_1000160F4("com.apple.wpantund.tnm", "commissioning");
    __int128 v57 = (os_log_s *)objc_claimAutoreleasedReturnValue(v56);
    if (os_log_type_enabled(v57, OS_LOG_TYPE_ERROR)) {
      sub_1001EEE80();
    }

    -[CtrInternalClient leave](self->_CtrInternalClientPtr, "leave");
    if (v78 < 0) {
      operator delete(v77);
    }
    char v43 = LODWORD(v87.__r_.__value_.__l.__data_) == 13;
    goto LABEL_44;
  }

  __int128 v58 = sub_1000160F4("com.apple.wpantund.tnm", "commissioning");
  __int128 v59 = (os_log_s *)objc_claimAutoreleasedReturnValue(v58);
  if (os_log_type_enabled(v59, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)__n128 buf = 136315394;
    *(void *)&uint8_t buf[4] = "-[ThreadNetworkManagerInstance formNewNetwork:]";
    *(_WORD *)&_BYTE buf[12] = 1024;
    *(_DWORD *)&_BYTE buf[14] = 5477;
    _os_log_impl( (void *)&_mh_execute_header,  v59,  OS_LOG_TYPE_INFO,  "%s:%d: Successfully formed new network",  buf,  0x12u);
  }

  -[ThreadNetworkManagerInstance saveLastKnownJoinedNetwork:datasetRecord:]( self,  "saveLastKnownJoinedNetwork:datasetRecord:",  [0 UTF8String],  0);
  __int128 v60 = sub_1000160F4("com.apple.wpantund.tnm", "commissioning");
  __int128 v61 = (os_log_s *)objc_claimAutoreleasedReturnValue(v60);
  if (os_log_type_enabled(v61, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)__n128 buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v61,  OS_LOG_TYPE_INFO,  "formNewNetwork:Retrieve Third Party Info",  buf,  2u);
  }

  -[ThreadNetworkManagerInstance retrieveAndPostThirdPartyInfo](self, "retrieveAndPostThirdPartyInfo");
  char v43 = 0;
  std::string v44 = 0;
LABEL_45:
  if ((v44 & (!v43 | isNetworkConnected())) == 1 && isSystemUpTimeIsGreaterThan(0x12CuLL))
  {
    sub_10000AC00(v75, "Error");
    sub_10000AC00(v73, "Form Failed");
    sub_10000AC00(v71, "Failed to form a new network");
    sub_1000E8078((uint64_t *)v75, (uint64_t *)v73, (const std::string::value_type *)v71, 0LL);
    if (v72 < 0) {
      operator delete(v71[0]);
    }
    if (v74 < 0) {
      operator delete(v73[0]);
    }
    if (v76 < 0) {
      operator delete(v75[0]);
    }
  }

  if (SHIBYTE(v83) < 0) {
    operator delete(v82[0]);
  }

  if (SHIBYTE(v88) < 0) {
    operator delete((void *)v87.__r_.__value_.__l.__size_);
  }
  return v44;
}

void sub_10005B3A0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20, char a21, char a22, void *a23, uint64_t a24, int a25, __int16 a26, char a27, char a28, void *a29, uint64_t a30, int a31, __int16 a32, char a33, char a34, void *a35, uint64_t a36, int a37, __int16 a38, char a39, char a40, uint64_t a41, void *a42, uint64_t a43, int a44, __int16 a45, char a46, char a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,void *__p,uint64_t a53,int a54,__int16 a55,char a56,char a57,uint64_t a58,char a59)
{
  if (a57 < 0) {
    operator delete(__p);
  }
  sub_10000D448((uint64_t)&a59);
  _Unwind_Resume(a1);
}

uint64_t sub_10005B484( _WORD *a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8 = a4;
  unint64_t v12 = 0LL;
  v28[0] = (uint64_t)v28;
  v28[1] = (uint64_t)v28;
  __int128 v28[2] = 0LL;
  v27[0] = 0LL;
  v27[1] = 0LL;
  unsigned int v26 = v27;
  do
  {
    if (!off_1002AFF80[v12 / 8]) {
      goto LABEL_14;
    }
    int v13 = spinel_datatype_unpack(a1, a2, "S", a4, a5, a6, a7, a8, (uint64_t)&v25);
    unsigned int v14 = v13;
    if (v13 <= 0)
    {
      char v18 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v18)
      {
        goto LABEL_30;
      }

      if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
LABEL_29:
      }
        sub_1001FB53C();
LABEL_30:
      uint64_t v21 = 1LL;
      goto LABEL_31;
    }

    BOOL v15 = a2 >= v13;
    a2 = (a2 - v13);
    if (!v15)
    {
      uint64_t v19 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      uint64_t v20 = v19;
      if (v19)
      {
        goto LABEL_30;
      }

      if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        goto LABEL_29;
      }
      goto LABEL_30;
    }

    if ((v8 & 1) != 0)
    {
      sub_10000AC00(&__str, off_1002AFF80[v12 / 8]);
      uint64_t v16 = sub_10000ED88(&v26, &__str);
      sub_100017678(v16, &v25);
      if ((v30 & 0x80000000) == 0) {
        goto LABEL_12;
      }
      uint64_t v17 = (void *)__str.n128_u64[0];
    }

    else
    {
      snprintf((char *)&__str, 0xC8uLL, "%-20s = %d", off_1002AFF80[v12 / 8], v25);
      sub_10000AC00(__p, (char *)&__str);
      sub_100044B24(v28, (uint64_t)__p);
      if ((v24 & 0x80000000) == 0) {
        goto LABEL_12;
      }
      uint64_t v17 = __p[0];
    }

    operator delete(v17);
LABEL_12:
    a1 = (_WORD *)((char *)a1 + v14);
    v12 += 8LL;
  }

  while (v12 <= 0x4F);
  __break(1u);
LABEL_14:
  if (v8) {
    sub_10005653C(a3, (uint64_t *)&v26);
  }
  else {
    sub_10006DA9C(a3, (uint64_t)v28);
  }
  uint64_t v21 = 0LL;
LABEL_31:
  sub_10000D448((uint64_t)&v26);
  sub_10000C0E8(v28);
  return v21;
}

void sub_10005B6F4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, char a19, uint64_t a20, uint64_t a21, char a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, int a27, __int16 a28, char a29, char a30)
{
}

uint64_t sub_10005B758( _WORD *a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8 = a4;
  int v11 = 0;
  v37[0] = (uint64_t)v37;
  v37[1] = (uint64_t)v37;
  _OWORD v37[2] = 0LL;
  v36[0] = 0LL;
  v36[1] = 0LL;
  uint64_t v12 = 40LL;
  uint64_t v35 = v36;
LABEL_2:
  unsigned __int16 v34 = 0LL;
  unsigned int v33 = 0;
  if (v11 == 1)
  {
    uint64_t v12 = 24LL;
    int v13 = off_1002AFFE8;
  }

  else
  {
    int v13 = off_1002B0000;
  }

  if (v11) {
    unint64_t v14 = v12;
  }
  else {
    unint64_t v14 = 24LL;
  }
  if (v11) {
    BOOL v15 = v13;
  }
  else {
    BOOL v15 = off_1002AFFD0;
  }
  unsigned int v16 = spinel_datatype_unpack(a1, a2, "d", a4, a5, a6, a7, a8, (uint64_t)&v34);
  if (!v16)
  {
    unsigned int v26 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v26)
    {
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      goto LABEL_40;
    }

    goto LABEL_41;
  }

  BOOL v17 = a2 >= v16;
  a2 = a2 - v16;
  if (!v17)
  {
    int v27 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    char v28 = v27;
    if (v27)
    {
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      goto LABEL_40;
    }

    goto LABEL_41;
  }

  unint64_t v18 = 0LL;
  a1 = (_WORD *)((char *)a1 + v16);
  while (1)
  {
    if (!v15[v18 / 8])
    {
      ++v11;
      uint64_t v12 = 40LL;
      if (v11 != 3) {
        goto LABEL_2;
      }
      if (v8) {
        sub_10005653C(a3, (uint64_t *)&v35);
      }
      else {
        sub_10006DA9C(a3, (uint64_t)v37);
      }
      uint64_t v24 = 0LL;
      goto LABEL_42;
    }

    unsigned int v19 = spinel_datatype_unpack(v34, v33, "L", a4, a5, a6, a7, a8, (uint64_t)&v32);
    if (!v19) {
      break;
    }
    if (v33 < v19)
    {
      unsigned int v23 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v23)
      {
        goto LABEL_41;
      }

      if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        goto LABEL_41;
      }
      goto LABEL_40;
    }

    unsigned __int16 v34 = (_WORD *)((char *)v34 + v19);
    v33 -= v19;
    if ((v8 & 1) != 0)
    {
      sub_10000AC00(&__str, v15[v18 / 8]);
      uint64_t v20 = sub_10000ED88(&v35, &__str);
      sub_100017F70(v20, &v32);
      if (v39 < 0)
      {
        uint64_t v21 = (void *)__str.n128_u64[0];
LABEL_23:
        operator delete(v21);
      }
    }

    else
    {
      snprintf((char *)&__str, 0xC8uLL, "%-20s = %d", v15[v18 / 8], v32);
      sub_10000AC00(__p, (char *)&__str);
      sub_100044B24(v37, (uint64_t)__p);
      if (v31 < 0)
      {
        uint64_t v21 = __p[0];
        goto LABEL_23;
      }
    }

    v18 += 8LL;
    if (v14 <= v18) {
      __break(1u);
    }
  }

  unsigned int v22 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v22)
  {
    goto LABEL_41;
  }

  if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
    goto LABEL_41;
  }
LABEL_40:
  sub_1001FB53C();
LABEL_41:
  uint64_t v24 = 1LL;
LABEL_42:
  sub_10000D448((uint64_t)&v35);
  sub_10000C0E8(v37);
  return v24;
}

void sub_10005BB3C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20, char a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, int a29, __int16 a30, char a31, char a32)
{
}

uint64_t sub_10005BBAC( _WORD *a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v15[0] = 0LL;
  v15[1] = 0LL;
  unint64_t v14 = v15;
  v13[0] = (uint64_t)v13;
  v13[1] = (uint64_t)v13;
  void v13[2] = 0LL;
  memset(&__p, 0, sizeof(__p));
  v11[0] = (char *)v11;
  v11[1] = (char *)v11;
  _OWORD v11[2] = 0LL;
  if (!(_DWORD)a4)
  {
    if (!sub_10006D780(a1, a2, &__p, a4, a5, a6, a7, a8))
    {
      sub_10000C6E4(v11, &__p);
      sub_10006DA9C(a3, (uint64_t)v11);
      goto LABEL_7;
    }

LABEL_5:
    uint64_t v9 = 1LL;
    goto LABEL_8;
  }

  sub_10000D584(v13, (uint64_t *)&v14);
  sub_100070E34(a3, (uint64_t)v13);
LABEL_7:
  uint64_t v9 = 0LL;
LABEL_8:
  sub_10000C0E8(v11);
  sub_10000C178(v13);
  sub_10000D448((uint64_t)&v14);
  return v9;
}

  uint64_t v265 = 0;
  v262 = 0;
  v256 = 0;
  v254 = 0;
  int v13 = 0LL;
LABEL_6:
  unint64_t v14 = (unsigned int *)((char *)&unk_1002CA1D0 + 13848 * v267);
  unsigned int v16 = v14[1];
  BOOL v15 = v14 + 1;
  BOOL v17 = *v14 + v16;
  if (__CFADD__(*v14, v16)) {
    goto LABEL_486;
  }
  unint64_t v18 = 100;
  if (v17)
  {
    unsigned int v19 = 100LL * *v14;
    if ((v19 & 0xFFFFFFFF00000000LL) != 0) {
      goto LABEL_487;
    }
    unint64_t v18 = v19 / v17;
  }

  uint64_t v20 = sub_1000BE984(4, v18);
  uint64_t v21 = (char *)&unk_1002CA1D0 + 13848 * v267;
  *((_DWORD *)v21 + 8) = v20;
  v261 = v21 + 32;
  unsigned int v22 = byte_1002D1238;
  sub_10000AC00(buf, "tx_success_perc");
  unsigned int v23 = sub_10000ED88(v268, (__n128 *)buf);
  sub_100017F70(v23, (_DWORD *)&unk_1002CA1D0 + 3462 * v22 + 8);
  if ((buf[23] & 0x80000000) != 0) {
    operator delete(*(void **)buf);
  }
  if (__CFADD__(*v14, *v15)) {
    goto LABEL_486;
  }
  uint64_t v24 = (char *)&unk_1002CA1D0 + 13848 * v267;
  *((_DWORD *)v24 + 2) = *v14 + *v15;
  v264 = v24 + 8;
  unsigned __int16 v25 = byte_1002D1238;
  sub_10000AC00(buf, "tx_total");
  unsigned int v26 = sub_10000ED88(v268, (__n128 *)buf);
  sub_100017F70(v26, (_DWORD *)&unk_1002CA1D0 + 3462 * v25 + 2);
  if ((buf[23] & 0x80000000) != 0) {
    operator delete(*(void **)buf);
  }
  int v27 = byte_1002D1238;
  sub_10000AC00(buf, "tx_success");
  char v28 = sub_10000ED88(v268, (__n128 *)buf);
  sub_100017F70(v28, (_DWORD *)&unk_1002CA1D0 + 3462 * v27);
  if ((buf[23] & 0x80000000) != 0) {
    operator delete(*(void **)buf);
  }
  __int128 v29 = (char *)&unk_1002CA1D0 + 13848 * v267;
  int v32 = *((_DWORD *)v29 + 5);
  char v31 = v29 + 20;
  char v30 = v32;
  unsigned int v33 = v31[1];
  int v122 = __CFADD__(v32, v33);
  unsigned __int16 v34 = v32 + v33;
  if (v122) {
    goto LABEL_486;
  }
  uint64_t v35 = 100;
  if (v34)
  {
    uint64_t v36 = 100LL * v30;
    if ((v36 & 0xFFFFFFFF00000000LL) != 0) {
      goto LABEL_487;
    }
    uint64_t v35 = v36 / v34;
  }

  char v37 = sub_1000BE984(4, v35);
  uint64_t v38 = (char *)&unk_1002CA1D0 + 13848 * v267;
  *((_DWORD *)v38 + 10) = v37;
  v259 = v38 + 40;
  char v39 = byte_1002D1238;
  sub_10000AC00(buf, "rx_success_perc");
  char v40 = sub_10000ED88(v268, (__n128 *)buf);
  sub_100017F70(v40, (_DWORD *)&unk_1002CA1D0 + 3462 * v39 + 10);
  if ((buf[23] & 0x80000000) != 0) {
    operator delete(*(void **)buf);
  }
  std::string v41 = v31[1];
  int v42 = *v31 + v41;
  if (__CFADD__(*v31, v41)) {
    goto LABEL_486;
  }
  char v43 = (char *)&unk_1002CA1D0 + 13848 * v267;
  *((_DWORD *)v43 + 7) = v42;
  v258 = v43 + 28;
  std::string v44 = byte_1002D1238;
  sub_10000AC00(buf, "rx_total");
  std::string v45 = sub_10000ED88(v268, (__n128 *)buf);
  sub_100017F70(v45, (_DWORD *)&unk_1002CA1D0 + 3462 * v44 + 7);
  if ((buf[23] & 0x80000000) != 0) {
    operator delete(*(void **)buf);
  }
  std::string v46 = byte_1002D1238;
  sub_10000AC00(buf, "rx_success");
  char v47 = sub_10000ED88(v268, (__n128 *)buf);
  sub_100017F70(v47, (_DWORD *)&unk_1002CA1D0 + 3462 * v46 + 5);
  if ((buf[23] & 0x80000000) != 0) {
    operator delete(*(void **)buf);
  }
  int v48 = v265 + v262;
  if (__CFADD__(v265, v262)) {
    goto LABEL_486;
  }
  if (v48)
  {
    std::string v49 = 100LL * v262;
    if ((v49 & 0xFFFFFFFF00000000LL) != 0) {
      goto LABEL_487;
    }
    int v50 = v49 / v48;
  }

  else
  {
    int v50 = 0;
  }

  v266 = sub_1000BE984(4, v50);
  *((_DWORD *)&unk_1002CA1D0 + 3462 * v267 + 25) = v266;
  unint64_t v177 = byte_1002D1238;
  sub_10000AC00(buf, "coex_tx_denied_requests_percentage");
  char v178 = sub_10000ED88(v268, (__n128 *)buf);
  sub_100017F70(v178, (_DWORD *)&unk_1002CA1D0 + 3462 * v177 + 25);
  if ((buf[23] & 0x80000000) != 0) {
    operator delete(*(void **)buf);
  }
  char v179 = v256 + v254;
  if (__CFADD__(v256, v254))
  {
LABEL_486:
    __break(0x5500u);
    goto LABEL_487;
  }

  if (v179)
  {
    uint64_t v180 = 100LL * v254;
    if ((v180 & 0xFFFFFFFF00000000LL) == 0)
    {
      int v181 = v180 / v179;
      goto LABEL_326;
    }

  BOOL v17 = 0LL;
LABEL_10:

  return v17;
}

void sub_10005BC88( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  sub_10000C178(&a18);
  sub_10000D448(v18 - 40);
  _Unwind_Resume(a1);
}

uint64_t sub_10005BCBC( _WORD *a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8 = a4;
  v30[0] = (uint64_t)v30;
  v30[1] = (uint64_t)v30;
  __int128 v30[2] = 0LL;
  v29[0] = (uint64_t)v29;
  v29[1] = (uint64_t)v29;
  void v29[2] = 0LL;
  if ((_DWORD)a2)
  {
    uint64_t v9 = a2;
    int v11 = 0;
    do
    {
      int v12 = spinel_datatype_unpack(a1, v9, "t(CLdbdS)", a4, a5, a6, a7, a8, (uint64_t)&v38);
      if (v12 < 1) {
        break;
      }
      if (v8)
      {
        uint64_t v27 = 0LL;
        uint64_t v28 = 0LL;
        unsigned int v26 = &v27;
        sub_10000AC00(&__p, "ServiceId");
        int v13 = sub_10000ED88((uint64_t **)&v26, &__p);
        sub_1000176D4(v13, &v38);
        if (v25 < 0) {
          operator delete((void *)__p.n128_u64[0]);
        }
        sub_10000AC00(&__p, "EnterpriseNumber");
        unint64_t v14 = sub_10000ED88((uint64_t **)&v26, &__p);
        sub_100017F70(v14, &v37);
        if (v25 < 0) {
          operator delete((void *)__p.n128_u64[0]);
        }
        sub_100018E5C(&__p, v36, (uint64_t)v36 + v35);
        sub_10000AC00(&v22, "ServiceData");
        BOOL v15 = sub_10000ED88((uint64_t **)&v26, &v22);
        sub_100017FCC(v15, &__p);
        if (v23 < 0) {
          operator delete((void *)v22.n128_u64[0]);
        }
        v22.n128_u64[0] = (unint64_t)&__p;
        sub_100006F6C((void ***)&v22);
        sub_10000AC00(&__p, "Stable");
        unsigned int v16 = sub_10000ED88((uint64_t **)&v26, &__p);
        sub_100020B4C(v16, &v34);
        if (v25 < 0) {
          operator delete((void *)__p.n128_u64[0]);
        }
        sub_100018E5C(&__p, v33, (uint64_t)v33 + v32);
        sub_10000AC00(&v22, "ServerData");
        BOOL v17 = sub_10000ED88((uint64_t **)&v26, &v22);
        sub_100017FCC(v17, &__p);
        if (v23 < 0) {
          operator delete((void *)v22.n128_u64[0]);
        }
        v22.n128_u64[0] = (unint64_t)&__p;
        sub_100006F6C((void ***)&v22);
        sub_10000AC00(&__p, "RLOC16");
        uint64_t v18 = sub_10000ED88((uint64_t **)&v26, &__p);
        sub_100017678(v18, &v31);
        if (v25 < 0) {
          operator delete((void *)__p.n128_u64[0]);
        }
        sub_10000D584(v30, (uint64_t *)&v26);
        sub_10000D448((uint64_t)&v26);
      }

      else
      {
        snprintf(__str, 0x1F4uLL, "ServiceId:%01x, EnterpriseNumber:%u, Stable:%d, RLOC16:%04x", v38, v37, v34, v31);
        sub_10000AC00(&v26, __str);
        sub_100044B24(v29, (uint64_t)&v26);
        if (SHIBYTE(v28) < 0) {
          operator delete(v26);
        }
      }

      if (__OFADD__(v11, 1))
      {
        __break(0x5500u);
LABEL_29:
        __break(0x5515u);
      }

      BOOL v19 = v9 >= v12;
      uint64_t v9 = (v9 - v12);
      if (!v19) {
        goto LABEL_29;
      }
      a1 = (_WORD *)((char *)a1 + v12);
      ++v11;
    }

    while ((_DWORD)v9);
  }

  if (v8) {
    sub_100070E34(a3, (uint64_t)v30);
  }
  else {
    sub_10006DA9C(a3, (uint64_t)v29);
  }
  sub_10000C0E8(v29);
  sub_10000C178(v30);
  return 0LL;
}

void sub_10005C00C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20, __int16 a21, char a22, char a23, void *a24, uint64_t a25, int a26, __int16 a27, char a28, char a29, void *__p, uint64_t a31, int a32, __int16 a33, char a34, char a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39)
{
}

uint64_t sub_10005C0CC( _WORD *a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char v8 = a4;
  int v11 = 0;
  v51[0] = (uint64_t)v51;
  v51[1] = (uint64_t)v51;
  _OWORD v51[2] = 0LL;
  v50[0] = 0LL;
  v50[1] = 0LL;
  std::string v49 = v50;
  while (2)
  {
    std::string v46 = 0LL;
    unsigned int v45 = 0;
    if (v11) {
      unint64_t v12 = 80LL;
    }
    else {
      unint64_t v12 = 72LL;
    }
    if (v11) {
      int v13 = off_1002B0070;
    }
    else {
      int v13 = off_1002B0028;
    }
    unsigned int v14 = spinel_datatype_unpack(a1, a2, "d", a4, a5, a6, a7, a8, (uint64_t)&v46);
    if (!v14)
    {
      unsigned int v32 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v32)
      {
      }

      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        goto LABEL_41;
      }

      goto LABEL_42;
    }

    BOOL v15 = a2 >= v14;
    a2 = a2 - v14;
    if (!v15)
    {
      unsigned int v33 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      unsigned __int8 v34 = v33;
      if (v33)
      {
      }

      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        goto LABEL_41;
      }

      goto LABEL_42;
    }

    unint64_t v16 = 0LL;
    a1 = (_WORD *)((char *)a1 + v14);
    while (v13[v16 / 8])
    {
      unsigned int v17 = spinel_datatype_unpack(v46, v45, "L", a4, a5, a6, a7, a8, (uint64_t)&v44);
      if (!v17)
      {
        uint64_t v28 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v28)
        {
          goto LABEL_42;
        }

        if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          goto LABEL_42;
        }
        goto LABEL_41;
      }

      if (v45 < v17)
      {
        __int128 v29 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v29)
        {
          goto LABEL_42;
        }

        if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          goto LABEL_42;
        }
        goto LABEL_41;
      }

      std::string v46 = (_WORD *)((char *)v46 + v17);
      v45 -= v17;
      if ((v8 & 1) != 0)
      {
        sub_10000AC00(&__str, v13[v16 / 8]);
        uint64_t v18 = sub_10000ED88(&v49, &__str);
        sub_100017F70(v18, &v44);
        if (v53 < 0)
        {
          BOOL v19 = (void *)__str.n128_u64[0];
LABEL_20:
          operator delete(v19);
        }
      }

      else
      {
        snprintf((char *)&__str, 0xC8uLL, "%-20s = %u", v13[v16 / 8], v44);
        sub_10000AC00(__p, (char *)&__str);
        sub_100044B24(v51, (uint64_t)__p);
        if (v43 < 0)
        {
          BOOL v19 = __p[0];
          goto LABEL_20;
        }
      }

      v16 += 8LL;
      if (v12 <= v16) {
        __break(1u);
      }
    }

    if (++v11 != 2) {
      continue;
    }
    break;
  }

  int v20 = spinel_datatype_unpack(a1, a2, "b", a4, a5, a6, a7, a8, (uint64_t)&v48);
  if (v20 <= 0)
  {
    unsigned int v35 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v35)
    {
      goto LABEL_42;
    }

    if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      goto LABEL_42;
    }
  }

  else
  {
    BOOL v15 = a2 >= v20;
    uint64_t v26 = (a2 - v20);
    if (v15)
    {
      int v36 = spinel_datatype_unpack( (_WORD *)((char *)a1 + v20),  v26,  "L",  v21,  v22,  v23,  v24,  v25,  (uint64_t)&v47);
      if (v36 <= 0)
      {
        unsigned __int8 v38 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v38)
        {
          goto LABEL_42;
        }

        if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          goto LABEL_42;
        }
      }

      else
      {
        if (v26 >= v36)
        {
          if ((v8 & 1) != 0)
          {
            sub_10000AC00(&__str, "Stopped");
            char v39 = sub_10000ED88(&v49, &__str);
            sub_100020B4C(v39, &v48);
            if (v53 < 0) {
              operator delete((void *)__str.n128_u64[0]);
            }
            sub_10000AC00(&__str, "NumGrantGlitch");
            char v40 = sub_10000ED88(&v49, &__str);
            sub_100017F70(v40, &v47);
            if (v53 < 0) {
              operator delete((void *)__str.n128_u64[0]);
            }
            sub_10005653C(a3, (uint64_t *)&v49);
          }

          else
          {
            snprintf((char *)&__str, 0xC8uLL, "%-20s = %u", "Stopped", v48);
            sub_10000AC00(__p, (char *)&__str);
            sub_100044B24(v51, (uint64_t)__p);
            if (v43 < 0) {
              operator delete(__p[0]);
            }
            snprintf((char *)&__str, 0xC8uLL, "%-20s = %u", "NumGrantGlitch", v47);
            sub_10000AC00(__p, (char *)&__str);
            sub_100044B24(v51, (uint64_t)__p);
            if (v43 < 0) {
              operator delete(__p[0]);
            }
            sub_10006DA9C(a3, (uint64_t)v51);
          }

          uint64_t v30 = 0LL;
          goto LABEL_43;
        }

        int v37 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v37)
        {
          goto LABEL_42;
        }

        if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          goto LABEL_42;
        }
      }
    }

    else
    {
      uint64_t v27 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v27)
      {
        goto LABEL_42;
      }

      if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        goto LABEL_42;
      }
    }
  }

void sub_10005C76C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20, char a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, int a29, __int16 a30, char a31, char a32)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  sub_10000D448((uint64_t)&a21);
  sub_10000C0E8(&a24);
  _Unwind_Resume(a1);
}

uint64_t sub_10005C80C(_WORD *a1, uint64_t a2, uint64_t *a3, int a4)
{
  v40[0] = v40;
  v40[1] = v40;
  void v40[2] = 0LL;
  v39[0] = 0LL;
  v39[1] = 0LL;
  unsigned __int8 v38 = v39;
  memset(&v37, 0, sizeof(v37));
  std::string::push_back(&v37, 10);
  std::string::push_back(&v37, 10);
  std::string::append(&v37, "Histogram for Packet Retries : ");
  std::string::push_back(&v37, 10);
  std::string::push_back(&v37, 10);
  for (int i = 0; i != 2; ++i)
  {
    int v36 = 0LL;
    unsigned int v35 = 0;
    if (i) {
      int v13 = off_1002B0150;
    }
    else {
      int v13 = off_1002B00C0;
    }
    unsigned int v14 = spinel_datatype_unpack(a1, a2, "d", v7, v8, v9, v10, v11, (uint64_t)&v36);
    unsigned int v15 = v14;
    if (!v14)
    {
      uint64_t v28 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v28)
      {
        goto LABEL_54;
      }

      if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        goto LABEL_54;
      }
LABEL_53:
      sub_1001FB53C();
      goto LABEL_54;
    }

    BOOL v16 = a2 >= v14;
    a2 = a2 - v14;
    if (!v16)
    {
      __int128 v29 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      uint64_t v30 = v29;
      if (v29)
      {
        goto LABEL_54;
      }

      if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        goto LABEL_53;
      }
LABEL_54:
      uint64_t v31 = 1LL;
      goto LABEL_55;
    }

    if (v35 >= 4)
    {
      int v17 = 0;
      unint64_t v18 = 0LL;
      unint64_t v19 = (unint64_t)(int)v35 >> 2;
      if (i) {
        int v20 = "  InDirect Messages after [";
      }
      else {
        int v20 = "    Direct Messages after [";
      }
      while (1)
      {
        unsigned int v21 = spinel_datatype_unpack(v36, v35, "L", v7, v8, v9, v10, v11, (uint64_t)&v34);
        if (!v21) {
          break;
        }
        if (v35 < v21)
        {
          uint64_t v27 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (v27)
          {
            goto LABEL_54;
          }

          if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
            goto LABEL_54;
          }
          goto LABEL_53;
        }

        int v36 = (_WORD *)((char *)v36 + v21);
        v35 -= v21;
        std::string::append(&v37, v20);
        std::to_string(&v41, v17);
        sub_10000D650(&v37, (const std::string::value_type *)&v41);
        std::string::append(&v37, "] retry attempts: ");
        if ((a4 & 1) != 0)
        {
          if (v18 > 0x8F) {
            goto LABEL_65;
          }
          sub_10000AC00(&v41, v13[v18 / 8]);
          uint64_t v22 = sub_10000ED88(&v38, (__n128 *)&v41);
          sub_100017F70(v22, &v34);
        }

        else
        {
          snprintf((char *)&v41, 0x14uLL, " %2d\n", v34);
          std::string::append(&v37, (const std::string::value_type *)&v41);
        }

        int v23 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
          __break(0x5500u);
LABEL_65:
          __break(1u);
        }

        v18 += 8LL;
        ++v17;
        if (v19 <= v23) {
          goto LABEL_23;
        }
      }

      uint64_t v26 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v26)
      {
        goto LABEL_54;
      }

      if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        goto LABEL_54;
      }
      goto LABEL_53;
    }

void sub_10005CD0C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, char a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, void *a26, uint64_t a27, int a28, __int16 a29, char a30, char a31)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  sub_10000D448((uint64_t)&a20);
  sub_10000C0E8(&a23);
  _Unwind_Resume(a1);
}

void sub_10005CD84(unint64_t a1, int a2, uint64_t *a3)
{
  if (a2)
  {
    if (a2 != 8) {
      goto LABEL_13;
    }
    char v9 = 16;
    *(_OWORD *)__n128 __p = 0u;
    char v8 = 0;
    sub_100014D08((uint64_t)&v10, (__int128 *)__p);
    if (v9 < 0) {
      operator delete(__p[0]);
    }
    std::string::resize(&v10, 0x11uLL, 0);
    std::string::size_type v5 = v10.__r_.__value_.__l.__cap_ & 0x7FFFFFFFFFFFFFFFLL;
    if ((v10.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      std::string::size_type v5 = 23LL;
    }
    if (!v5)
    {
      __break(0x5515u);
      return;
    }

    if ((v10.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      std::string::size_type v6 = &v10;
    }
    else {
      std::string::size_type v6 = (std::string *)v10.__r_.__value_.__r.__words[0];
    }
    sub_100159A78(a1, 8LL, v6, v5 - 1, 0);
  }

  sub_1000200A0(a3, &v10);
LABEL_13:
}

void sub_10005CE70( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10005CE8C(_WORD *a1, uint64_t a2, uint64_t *a3)
{
  std::string::size_type v6 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v6)
  {
    uint64_t v7 = v6;
    if (sub_10015A058(6) && os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)__n128 buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "unpack_backbone_router_primary", buf, 2u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  int v17 = 0;
  int v18 = 0;
  unsigned __int8 v16 = 0;
  snprintf( (char *)buf,  0x12CuLL,  "server16 = 0x%04X, seqno = %hu, delay = %hu secs, timeout = %u secs",  HIWORD(v18),  v16,  (unsigned __int16)v18,  v17);
  sub_10000AC00(__p, (char *)buf);
  sub_1000175B4(a3, (uint64_t)__p);
  if (v15 < 0) {
    operator delete(__p[0]);
  }
  return 0LL;
}

void sub_10005D00C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10005D030( _WORD *a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned __int16 v14 = 0;
  int v13 = 0;
  unsigned __int8 v12 = 0;
  snprintf(__str, 0x12CuLL, "seqno = %hu, delay = %hu secs, timeout = %u secs", v12, v14, v13);
  sub_10000AC00(__p, __str);
  sub_1000175B4(a3, (uint64_t)__p);
  if (v11 < 0) {
    operator delete(__p[0]);
  }
  return 0LL;
}

void sub_10005D110( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_10005D134(uint64_t a1, void *a2)
{
  uint64_t v3 = (char *)operator new(0x20uLL);
  *(void *)uint64_t v3 = &off_1002AE030;
  *(_OWORD *)(v3 + 8) = *(_OWORD *)__p;
  *((void *)v3 + 3) = v5;
  __p[0] = 0LL;
  __p[1] = 0LL;
  uint64_t v5 = 0LL;
  std::string::size_type v6 = v3;
  sub_10003446C(a2);
  if (v6) {
    (*(void (**)(char *))(*(void *)v6 + 8LL))(v6);
  }
  if (SHIBYTE(v5) < 0) {
    operator delete(__p[0]);
  }
}

void sub_10005D1C8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15)
{
  if (a15) {
    (*(void (**)(uint64_t))(*(void *)a15 + 8LL))(a15);
  }
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_10005D200(uint64_t a1, void *a2)
{
  v9[0] = (uint64_t)v9;
  v9[1] = (uint64_t)v9;
  _OWORD v9[2] = 0LL;
  uint64_t v3 = *(void *)(a1 + 72792);
  uint64_t v8 = v3;
  for (i = a1 + 72800; v8 != i; uint64_t v3 = v8)
  {
    uint64_t v5 = spinel_capability_to_cstr(*(_DWORD *)(v3 + 28));
    snprintf(__str, 0xC8uLL, "%s (%d)", v5, *(_DWORD *)(v8 + 28));
    sub_10000AC00(__p, __str);
    sub_100044B24(v9, (uint64_t)__p);
    if (v7 < 0) {
      operator delete(__p[0]);
    }
    sub_10000B338((uint64_t)&v8);
  }

  sub_1000731A0(__str, (uint64_t)v9);
  sub_10003446C(a2);
  if (*(void *)__str) {
    (*(void (**)(void))(**(void **)__str + 8LL))(*(void *)__str);
  }
  sub_10000C0E8(v9);
}

void sub_10005D32C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22)
{
  if (a22) {
    (*(void (**)(uint64_t))(*(void *)a22 + 8LL))(a22);
  }
  sub_10000C0E8(&a19);
  _Unwind_Resume(a1);
}

uint64_t sub_10005D37C(uint64_t a1, void *a2)
{
  uint64_t v4 = operator new(0x10uLL);
  *(void *)uint64_t v4 = &off_1002AEA00;
  v4[8] = *(_BYTE *)(a1 + 72757);
  std::string::size_type v6 = v4;
  sub_10003446C(a2);
  uint64_t result = (uint64_t)v6;
  if (v6) {
    return (*(uint64_t (**)(void *))(*(void *)v6 + 8LL))(v6);
  }
  return result;
}

void sub_10005D3F0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10) {
    (*(void (**)(uint64_t))(*(void *)a10 + 8LL))(a10);
  }
  _Unwind_Resume(exception_object);
}

void *sub_10005D410(uint64_t a1, uint64_t *a2)
{
  v5[0] = 0LL;
  sub_100007640((uint64_t)v5, a2);
  sub_10005FDDC((uint64_t)sub_10005FE64, v5, &v6);
  sub_10007331C(v8, &v6);
  sub_10000AC00(&__p, "S");
  sub_100058014(a1, (uint64_t *)v8, 5377LL, &__p);
  sub_100006E7C(v8);
  sub_100006E7C(v7);
  return sub_100006E7C(v5);
}

void sub_10005D4B4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  sub_100006E7C((void *)(v20 - 48));
  sub_100006E7C(&a20);
  sub_100006E7C(&a15);
  _Unwind_Resume(a1);
}

uint64_t sub_10005D504(uint64_t a1, void *a2)
{
  uint64_t v4 = operator new(0x10uLL);
  *(void *)uint64_t v4 = &off_1002AEA00;
  v4[8] = *(_BYTE *)(a1 + 72758);
  uint64_t v6 = v4;
  sub_10003446C(a2);
  uint64_t result = (uint64_t)v6;
  if (v6) {
    return (*(uint64_t (**)(void *))(*(void *)v6 + 8LL))(v6);
  }
  return result;
}

void sub_10005D578( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10) {
    (*(void (**)(uint64_t))(*(void *)a10 + 8LL))(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10005D598(uint64_t a1, void *a2)
{
  uint64_t v4 = operator new(0x10uLL);
  *(void *)uint64_t v4 = &off_1002AEA00;
  v4[8] = *(_BYTE *)(a1 + 72759);
  uint64_t v6 = v4;
  sub_10003446C(a2);
  uint64_t result = (uint64_t)v6;
  if (v6) {
    return (*(uint64_t (**)(void *))(*(void *)v6 + 8LL))(v6);
  }
  return result;
}

void sub_10005D60C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10) {
    (*(void (**)(uint64_t))(*(void *)a10 + 8LL))(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_10005D62C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = (void *)(a1 + 1432);
  if (sub_100159E98((unsigned __int8 *)(a1 + 1432), 8LL))
  {
    v11[0] = *v4;
    v11[1] = 0LL;
    sub_100108154(v11, &v9);
    uint64_t v5 = std::string::append(&v9, "/64");
    std::string::size_type v6 = v5->__r_.__value_.__r.__words[0];
    v14[0] = v5->__r_.__value_.__l.__size_;
    *(void *)((char *)v14 + 7) = *(std::string::size_type *)((char *)&v5->__r_.__value_.__r.__words[1] + 7);
    unsigned __int8 size = v5->__r_.__value_.__s.__size_;
    v5->__r_.__value_.__l.__size_ = 0LL;
    v5->__r_.__value_.__l.__cap_ = 0LL;
    v5->__r_.__value_.__r.__words[0] = 0LL;
    uint64_t v8 = operator new(0x20uLL);
    void *v8 = &off_1002AE030;
    v8[1] = v6;
    _OWORD v8[2] = v14[0];
    *(void *)((char *)v8 + 23) = *(void *)((char *)v14 + 7);
    *((_BYTE *)v8 + 31) = size;
    uint64_t v10 = v8;
    sub_10003446C(a2);
    if (v10) {
      (*(void (**)(void *))(*v10 + 8LL))(v10);
    }
  }

  else
  {
    v13[0] = 0LL;
    sub_100007640((uint64_t)v13, a2);
    v12[0] = (uint64_t)off_1002B02C8 + 1;
    v12[1] = (uint64_t)sub_10005FF0C;
    sub_100057040(a1, v13, 98LL, v12);
    sub_10004BED0(v12);
    sub_100006E7C(v13);
  }

void sub_10005D78C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23)
{
}

void sub_10005D7F8(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = (void *)(a1 + 1432);
  if (sub_100159E98((unsigned __int8 *)(a1 + 1432), 8LL))
  {
    sub_100108154(v4, &__p);
    uint64_t v5 = (char *)operator new(0x20uLL);
    *(void *)uint64_t v5 = &off_1002AE030;
    *(std::string *)(v5 + 8) = __p;
    memset(&__p, 0, sizeof(__p));
    std::string::size_type v6 = v5;
    sub_10003446C(a2);
    if (v6) {
      (*(void (**)(char *))(*(void *)v6 + 8LL))(v6);
    }
  }

  else
  {
    v8[0] = 0LL;
    sub_100007640((uint64_t)v8, a2);
    sub_10000AC00(&__p, "6");
    sub_100058014(a1, v8, 97LL, &__p);
    sub_100006E7C(v8);
  }

void sub_10005D8FC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  sub_100006E7C(&a16);
  _Unwind_Resume(a1);
}

void sub_10005D95C(uint64_t a1, uint64_t *a2)
{
  if (*(unsigned __int8 *)(a1 + 1448) == 254 && (*(_BYTE *)(a1 + 1449) & 0xC0) == 0x80)
  {
    sub_100108154((void *)(a1 + 1448), &__p);
    uint64_t v4 = (char *)operator new(0x20uLL);
    *(void *)uint64_t v4 = &off_1002AE030;
    *(std::string *)(v4 + 8) = __p;
    memset(&__p, 0, sizeof(__p));
    uint64_t v5 = v4;
    sub_10003446C(a2);
    if (v5) {
      (*(void (**)(char *))(*(void *)v5 + 8LL))(v5);
    }
  }

  else
  {
    v7[0] = 0LL;
    sub_100007640((uint64_t)v7, a2);
    sub_10000AC00(&__p, "6");
    sub_100058014(a1, v7, 96LL, &__p);
    sub_100006E7C(v7);
  }

void sub_10005DA60( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a9) {
    (*(void (**)(uint64_t))(*(void *)a9 + 8LL))(a9);
  }
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *sub_10005DAC0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = operator new(0xB0uLL);
  v7[0] = 0LL;
  __n128 v5 = sub_100007640((uint64_t)v7, a2);
  sub_10007E204(v4, a1, v7, 0LL, 0LL, v5);
  sub_100073930(&v8, (uint64_t)v4);
  sub_10004E9A4(a1, &v8);
  sub_10000F9EC(&v9);
  return sub_100006E7C(v7);
}

void sub_10005DB50( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *sub_10005DB94(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = operator new(0xB0uLL);
  v7[0] = 0LL;
  __n128 v5 = sub_100007640((uint64_t)v7, a2);
  sub_10007E204(v4, a1, v7, 0LL, 1LL, v5);
  sub_100073930(&v8, (uint64_t)v4);
  sub_10004E9A4(a1, &v8);
  sub_10000F9EC(&v9);
  return sub_100006E7C(v7);
}

void sub_10005DC24( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *sub_10005DC68(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = operator new(0xB0uLL);
  v7[0] = 0LL;
  __n128 v5 = sub_100007640((uint64_t)v7, a2);
  sub_10007E204(v4, a1, v7, 1LL, 0LL, v5);
  sub_100073930(&v8, (uint64_t)v4);
  sub_10004E9A4(a1, &v8);
  sub_10000F9EC(&v9);
  return sub_100006E7C(v7);
}

void sub_10005DCF8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *sub_10005DD3C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = operator new(0xB0uLL);
  v7[0] = 0LL;
  __n128 v5 = sub_100007640((uint64_t)v7, a2);
  sub_10007E204(v4, a1, v7, 1LL, 1LL, v5);
  sub_100073930(&v8, (uint64_t)v4);
  sub_10004E9A4(a1, &v8);
  sub_10000F9EC(&v9);
  return sub_100006E7C(v7);
}

void sub_10005DDCC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *sub_10005DE10(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = operator new(0xB0uLL);
  v7[0] = 0LL;
  __n128 v5 = sub_100007640((uint64_t)v7, a2);
  sub_10007E204(v4, a1, v7, 2LL, 0LL, v5);
  sub_100073930(&v8, (uint64_t)v4);
  sub_10004E9A4(a1, &v8);
  sub_10000F9EC(&v9);
  return sub_100006E7C(v7);
}

void sub_10005DEA0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *sub_10005DEE4(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = operator new(0xB0uLL);
  v7[0] = 0LL;
  __n128 v5 = sub_100007640((uint64_t)v7, a2);
  sub_10007E204(v4, a1, v7, 2LL, 1LL, v5);
  sub_100073930(&v8, (uint64_t)v4);
  sub_10004E9A4(a1, &v8);
  sub_10000F9EC(&v9);
  return sub_100006E7C(v7);
}

void sub_10005DF74( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *sub_10005DFB8(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = operator new(0xB0uLL);
  v7[0] = 0LL;
  __n128 v5 = sub_100007640((uint64_t)v7, a2);
  sub_10007E204(v4, a1, v7, 3LL, 0LL, v5);
  sub_100073930(&v8, (uint64_t)v4);
  sub_10004E9A4(a1, &v8);
  sub_10000F9EC(&v9);
  return sub_100006E7C(v7);
}

void sub_10005E048( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *sub_10005E08C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = operator new(0xB0uLL);
  v7[0] = 0LL;
  __n128 v5 = sub_100007640((uint64_t)v7, a2);
  sub_10007E204(v4, a1, v7, 3LL, 1LL, v5);
  sub_100073930(&v8, (uint64_t)v4);
  sub_10004E9A4(a1, &v8);
  sub_10000F9EC(&v9);
  return sub_100006E7C(v7);
}

void sub_10005E11C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *sub_10005E160(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = operator new(0x90uLL);
  v6[0] = 0LL;
  sub_100007640((uint64_t)v6, a2);
  sub_1000439E0((uint64_t)v4, a1, v6, 1);
  sub_100073A70(&v7, (uint64_t)v4);
  sub_10004E9A4(a1, &v7);
  sub_10000F9EC(&v8);
  return sub_100006E7C(v6);
}

void sub_10005E1EC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *sub_10005E230(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = operator new(0x90uLL);
  v6[0] = 0LL;
  sub_100007640((uint64_t)v6, a2);
  sub_1000439E0((uint64_t)v4, a1, v6, 0);
  sub_100073A70(&v7, (uint64_t)v4);
  sub_10004E9A4(a1, &v7);
  sub_10000F9EC(&v8);
  return sub_100006E7C(v6);
}

void sub_10005E2BC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_10005E300(uint64_t a1, void *a2)
{
  uint64_t v4 = operator new(0x10uLL);
  *(void *)uint64_t v4 = &off_1002AEA00;
  v4[8] = *(_BYTE *)(a1 + 72816);
  std::string::size_type v6 = v4;
  sub_10003446C(a2);
  uint64_t result = (uint64_t)v6;
  if (v6) {
    return (*(uint64_t (**)(void *))(*(void *)v6 + 8LL))(v6);
  }
  return result;
}

void sub_10005E374( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10) {
    (*(void (**)(uint64_t))(*(void *)a10 + 8LL))(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_10005E394(uint64_t a1, void *a2)
{
  __n128 v5 = 0uLL;
  uint64_t v6 = 0LL;
  sub_100018E8C(&v5, (const void *)(a1 + 72817), a1 + 72825, 8uLL);
  uint64_t v3 = operator new(0x20uLL);
  sub_10001A3BC(v3, &v5);
  uint64_t v7 = v4;
  sub_10003446C(a2);
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8LL))(v7);
  }
  uint64_t v8 = &v5;
  sub_100006F6C((void ***)&v8);
}

void sub_10005E424( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  if (a13) {
    (*(void (**)(uint64_t))(*(void *)a13 + 8LL))(a13);
  }
  *(void *)(v13 - 24) = &a10;
  sub_100006F6C((void ***)(v13 - 24));
  _Unwind_Resume(a1);
}

void sub_10005E45C(uint64_t a1, void *a2)
{
  uint64_t v3 = (uint64_t *)(a1 + 72832);
  if (*(_BYTE *)(a1 + 72840))
  {
    uint64_t v4 = operator new(0x10uLL);
    uint64_t v5 = *v3;
    *uint64_t v4 = &off_1002AE088;
    v4[1] = v5;
    v8.n128_u64[0] = (unint64_t)v4;
    sub_10003446C(a2);
    if (v8.n128_u64[0]) {
      (*(void (**)(unint64_t))(*(void *)v8.n128_u64[0] + 8LL))(v8.n128_u64[0]);
    }
  }

  else
  {
    __n128 v8 = 0uLL;
    uint64_t v9 = 0LL;
    uint64_t v6 = operator new(0x20uLL);
    sub_10001A3BC(v6, &v8);
    uint64_t v10 = v7;
    sub_10003446C(a2);
    if (v10) {
      (*(void (**)(uint64_t))(*(void *)v10 + 8LL))(v10);
    }
    char v11 = &v8;
    sub_100006F6C((void ***)&v11);
  }

void sub_10005E524( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  if (a13) {
    (*(void (**)(uint64_t))(*(void *)a13 + 8LL))(a13);
  }
  *(void *)(v13 - 24) = &a10;
  sub_100006F6C((void ***)(v13 - 24));
  _Unwind_Resume(a1);
}

void sub_10005E578(uint64_t a1, void *a2)
{
  uint64_t v3 = (uint64_t *)(a1 + 72848);
  if (*(_BYTE *)(a1 + 72856))
  {
    uint64_t v4 = operator new(0x10uLL);
    uint64_t v5 = *v3;
    *uint64_t v4 = &off_1002AE088;
    v4[1] = v5;
    v8.n128_u64[0] = (unint64_t)v4;
    sub_10003446C(a2);
    if (v8.n128_u64[0]) {
      (*(void (**)(unint64_t))(*(void *)v8.n128_u64[0] + 8LL))(v8.n128_u64[0]);
    }
  }

  else
  {
    __n128 v8 = 0uLL;
    uint64_t v9 = 0LL;
    uint64_t v6 = operator new(0x20uLL);
    sub_10001A3BC(v6, &v8);
    uint64_t v10 = v7;
    sub_10003446C(a2);
    if (v10) {
      (*(void (**)(uint64_t))(*(void *)v10 + 8LL))(v10);
    }
    char v11 = &v8;
    sub_100006F6C((void ***)&v11);
  }

void sub_10005E640( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  if (a13) {
    (*(void (**)(uint64_t))(*(void *)a13 + 8LL))(a13);
  }
  *(void *)(v13 - 24) = &a10;
  sub_100006F6C((void ***)(v13 - 24));
  _Unwind_Resume(a1);
}

void sub_10005E694(uint64_t a1, void *a2)
{
  if (*(_BYTE *)(a1 + 72888))
  {
    sub_100073BB0(&v5, a1 + 72864);
    sub_10003446C(a2);
    if (v5.n128_u64[0]) {
      (*(void (**)(unint64_t))(*(void *)v5.n128_u64[0] + 8LL))(v5.n128_u64[0]);
    }
  }

  else
  {
    __n128 v5 = 0uLL;
    uint64_t v6 = 0LL;
    uint64_t v3 = operator new(0x20uLL);
    sub_10001A3BC(v3, &v5);
    uint64_t v7 = v4;
    sub_10003446C(a2);
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8LL))(v7);
    }
    __n128 v8 = &v5;
    sub_100006F6C((void ***)&v8);
  }

void sub_10005E750( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  if (a13) {
    (*(void (**)(uint64_t))(*(void *)a13 + 8LL))(a13);
  }
  *(void *)(v13 - 24) = &a10;
  sub_100006F6C((void ***)(v13 - 24));
  _Unwind_Resume(a1);
}

void sub_10005E7A4(uint64_t a1, void *a2)
{
  if (*(_BYTE *)(a1 + 72920))
  {
    sub_100071608(&v5, (const std::string *)(a1 + 72896));
    sub_10003446C(a2);
    if (v5.n128_u64[0]) {
      (*(void (**)(unint64_t))(*(void *)v5.n128_u64[0] + 8LL))(v5.n128_u64[0]);
    }
  }

  else
  {
    __n128 v5 = 0uLL;
    uint64_t v6 = 0LL;
    uint64_t v3 = operator new(0x20uLL);
    sub_10001A3BC(v3, &v5);
    uint64_t v7 = v4;
    sub_10003446C(a2);
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8LL))(v7);
    }
    __n128 v8 = &v5;
    sub_100006F6C((void ***)&v8);
  }

void sub_10005E860( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  if (a13) {
    (*(void (**)(uint64_t))(*(void *)a13 + 8LL))(a13);
  }
  *(void *)(v13 - 24) = &a10;
  sub_100006F6C((void ***)(v13 - 24));
  _Unwind_Resume(a1);
}

void sub_10005E8B4(uint64_t a1, void *a2)
{
  if (*(_BYTE *)(a1 + 72952))
  {
    sub_100073BB0(&v5, a1 + 72928);
    sub_10003446C(a2);
    if (v5.n128_u64[0]) {
      (*(void (**)(unint64_t))(*(void *)v5.n128_u64[0] + 8LL))(v5.n128_u64[0]);
    }
  }

  else
  {
    __n128 v5 = 0uLL;
    uint64_t v6 = 0LL;
    uint64_t v3 = operator new(0x20uLL);
    sub_10001A3BC(v3, &v5);
    uint64_t v7 = v4;
    sub_10003446C(a2);
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8LL))(v7);
    }
    __n128 v8 = &v5;
    sub_100006F6C((void ***)&v8);
  }

void sub_10005E970( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  if (a13) {
    (*(void (**)(uint64_t))(*(void *)a13 + 8LL))(a13);
  }
  *(void *)(v13 - 24) = &a10;
  sub_100006F6C((void ***)(v13 - 24));
  _Unwind_Resume(a1);
}

void sub_10005E9C4(uint64_t a1, void *a2)
{
  if (*(_BYTE *)(a1 + 72976))
  {
    sub_100108154((void *)(a1 + 72960), __p);
    uint64_t v3 = (char *)operator new(0x20uLL);
    *(void *)uint64_t v3 = &off_1002AE030;
    *(_OWORD *)(v3 + 8) = *(_OWORD *)__p;
    *((void *)v3 + 3) = v8;
    __p[0] = 0LL;
    __p[1] = 0LL;
    uint64_t v8 = 0LL;
    uint64_t v9 = (void **)v3;
    sub_10003446C(a2);
    if (v9) {
      (*((void (**)(void **))*v9 + 1))(v9);
    }
    if (SHIBYTE(v8) < 0) {
      operator delete(__p[0]);
    }
  }

  else
  {
    __p[0] = 0LL;
    __p[1] = 0LL;
    uint64_t v8 = 0LL;
    uint64_t v4 = operator new(0x20uLL);
    sub_10001A3BC(v4, (__n128 *)__p);
    uint64_t v6 = v5;
    sub_10003446C(a2);
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8LL))(v6);
    }
    uint64_t v9 = __p;
    sub_100006F6C(&v9);
  }

void sub_10005EAC0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a10) {
    (*(void (**)(uint64_t))(*(void *)a10 + 8LL))(a10);
  }
  *(void *)(v16 - 24) = &__p;
  sub_100006F6C((void ***)(v16 - 24));
  _Unwind_Resume(a1);
}

void sub_10005EB2C(uint64_t a1, void *a2)
{
  uint64_t v3 = (_DWORD *)(a1 + 72980);
  if (*(_BYTE *)(a1 + 72984))
  {
    uint64_t v4 = operator new(0x10uLL);
    *(void *)uint64_t v4 = &off_1002AE1C8;
    _OWORD v4[2] = *v3;
    v7.n128_u64[0] = (unint64_t)v4;
    sub_10003446C(a2);
    if (v7.n128_u64[0]) {
      (*(void (**)(unint64_t))(*(void *)v7.n128_u64[0] + 8LL))(v7.n128_u64[0]);
    }
  }

  else
  {
    __n128 v7 = 0uLL;
    uint64_t v8 = 0LL;
    uint64_t v5 = operator new(0x20uLL);
    sub_10001A3BC(v5, &v7);
    uint64_t v9 = v6;
    sub_10003446C(a2);
    if (v9) {
      (*(void (**)(uint64_t))(*(void *)v9 + 8LL))(v9);
    }
    uint64_t v10 = &v7;
    sub_100006F6C((void ***)&v10);
  }

void sub_10005EBF8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  if (a13) {
    (*(void (**)(uint64_t))(*(void *)a13 + 8LL))(a13);
  }
  *(void *)(v13 - 24) = &a10;
  sub_100006F6C((void ***)(v13 - 24));
  _Unwind_Resume(a1);
}

void sub_10005EC4C(uint64_t a1, void *a2)
{
  uint64_t v3 = (_WORD *)(a1 + 72988);
  if (*(_BYTE *)(a1 + 72990))
  {
    uint64_t v4 = operator new(0x10uLL);
    *(void *)uint64_t v4 = &off_1002AE0D0;
    uint64_t v4[4] = *v3;
    v7.n128_u64[0] = (unint64_t)v4;
    sub_10003446C(a2);
    if (v7.n128_u64[0]) {
      (*(void (**)(unint64_t))(*(void *)v7.n128_u64[0] + 8LL))(v7.n128_u64[0]);
    }
  }

  else
  {
    __n128 v7 = 0uLL;
    uint64_t v8 = 0LL;
    uint64_t v5 = operator new(0x20uLL);
    sub_10001A3BC(v5, &v7);
    uint64_t v9 = v6;
    sub_10003446C(a2);
    if (v9) {
      (*(void (**)(uint64_t))(*(void *)v9 + 8LL))(v9);
    }
    uint64_t v10 = &v7;
    sub_100006F6C((void ***)&v10);
  }

void sub_10005ED18( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  if (a13) {
    (*(void (**)(uint64_t))(*(void *)a13 + 8LL))(a13);
  }
  *(void *)(v13 - 24) = &a10;
  sub_100006F6C((void ***)(v13 - 24));
  _Unwind_Resume(a1);
}

void sub_10005ED6C(uint64_t a1, void *a2)
{
  uint64_t v3 = (_BYTE *)(a1 + 72992);
  if (*(_BYTE *)(a1 + 72993))
  {
    uint64_t v4 = operator new(0x10uLL);
    *(void *)uint64_t v4 = &off_1002AE118;
    v4[8] = *v3;
    v7.n128_u64[0] = (unint64_t)v4;
    sub_10003446C(a2);
    if (v7.n128_u64[0]) {
      (*(void (**)(unint64_t))(*(void *)v7.n128_u64[0] + 8LL))(v7.n128_u64[0]);
    }
  }

  else
  {
    __n128 v7 = 0uLL;
    uint64_t v8 = 0LL;
    uint64_t v5 = operator new(0x20uLL);
    sub_10001A3BC(v5, &v7);
    uint64_t v9 = v6;
    sub_10003446C(a2);
    if (v9) {
      (*(void (**)(uint64_t))(*(void *)v9 + 8LL))(v9);
    }
    uint64_t v10 = &v7;
    sub_100006F6C((void ***)&v10);
  }

void sub_10005EE38( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  if (a13) {
    (*(void (**)(uint64_t))(*(void *)a13 + 8LL))(a13);
  }
  *(void *)(v13 - 24) = &a10;
  sub_100006F6C((void ***)(v13 - 24));
  _Unwind_Resume(a1);
}

void sub_10005EE8C(uint64_t a1, void *a2)
{
  if (*(_BYTE *)(a1 + 73024))
  {
    sub_100073BB0(&v5, a1 + 73000);
    sub_10003446C(a2);
    if (v5.n128_u64[0]) {
      (*(void (**)(unint64_t))(*(void *)v5.n128_u64[0] + 8LL))(v5.n128_u64[0]);
    }
  }

  else
  {
    __n128 v5 = 0uLL;
    uint64_t v6 = 0LL;
    uint64_t v3 = operator new(0x20uLL);
    sub_10001A3BC(v3, &v5);
    uint64_t v7 = v4;
    sub_10003446C(a2);
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8LL))(v7);
    }
    uint64_t v8 = &v5;
    sub_100006F6C((void ***)&v8);
  }

void sub_10005EF48( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  if (a13) {
    (*(void (**)(uint64_t))(*(void *)a13 + 8LL))(a13);
  }
  *(void *)(v13 - 24) = &a10;
  sub_100006F6C((void ***)(v13 - 24));
  _Unwind_Resume(a1);
}

void sub_10005EF9C(uint64_t a1, void *a2)
{
  uint64_t v3 = (_DWORD *)(a1 + 73032);
  if (*(_BYTE *)(a1 + 73036))
  {
    uint64_t v4 = operator new(0x10uLL);
    *(void *)uint64_t v4 = &off_1002AE1C8;
    _OWORD v4[2] = *v3;
    v7.n128_u64[0] = (unint64_t)v4;
    sub_10003446C(a2);
    if (v7.n128_u64[0]) {
      (*(void (**)(unint64_t))(*(void *)v7.n128_u64[0] + 8LL))(v7.n128_u64[0]);
    }
  }

  else
  {
    __n128 v7 = 0uLL;
    uint64_t v8 = 0LL;
    __n128 v5 = operator new(0x20uLL);
    sub_10001A3BC(v5, &v7);
    uint64_t v9 = v6;
    sub_10003446C(a2);
    if (v9) {
      (*(void (**)(uint64_t))(*(void *)v9 + 8LL))(v9);
    }
    uint64_t v10 = &v7;
    sub_100006F6C((void ***)&v10);
  }

void sub_10005F068( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  if (a13) {
    (*(void (**)(uint64_t))(*(void *)a13 + 8LL))(a13);
  }
  *(void *)(v13 - 24) = &a10;
  sub_100006F6C((void ***)(v13 - 24));
  _Unwind_Resume(a1);
}

void sub_10005F0BC(uint64_t a1, void *a2)
{
  uint64_t v3 = (_WORD *)(a1 + 73040);
  if (*(_BYTE *)(a1 + 73044))
  {
    uint64_t v4 = operator new(0x10uLL);
    *(void *)uint64_t v4 = &off_1002AE0D0;
    uint64_t v4[4] = *v3;
    v7.n128_u64[0] = (unint64_t)v4;
    sub_10003446C(a2);
    if (v7.n128_u64[0]) {
      (*(void (**)(unint64_t))(*(void *)v7.n128_u64[0] + 8LL))(v7.n128_u64[0]);
    }
  }

  else
  {
    __n128 v7 = 0uLL;
    uint64_t v8 = 0LL;
    __n128 v5 = operator new(0x20uLL);
    sub_10001A3BC(v5, &v7);
    uint64_t v9 = v6;
    sub_10003446C(a2);
    if (v9) {
      (*(void (**)(uint64_t))(*(void *)v9 + 8LL))(v9);
    }
    uint64_t v10 = &v7;
    sub_100006F6C((void ***)&v10);
  }

void sub_10005F188( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  if (a13) {
    (*(void (**)(uint64_t))(*(void *)a13 + 8LL))(a13);
  }
  *(void *)(v13 - 24) = &a10;
  sub_100006F6C((void ***)(v13 - 24));
  _Unwind_Resume(a1);
}

void sub_10005F1DC(uint64_t a1, void *a2)
{
  uint64_t v3 = (_BYTE *)(a1 + 73042);
  if (*(_BYTE *)(a1 + 73044))
  {
    uint64_t v4 = operator new(0x10uLL);
    *(void *)uint64_t v4 = &off_1002AE118;
    v4[8] = *v3;
    v7.n128_u64[0] = (unint64_t)v4;
    sub_10003446C(a2);
    if (v7.n128_u64[0]) {
      (*(void (**)(unint64_t))(*(void *)v7.n128_u64[0] + 8LL))(v7.n128_u64[0]);
    }
  }

  else
  {
    __n128 v7 = 0uLL;
    uint64_t v8 = 0LL;
    __n128 v5 = operator new(0x20uLL);
    sub_10001A3BC(v5, &v7);
    uint64_t v9 = v6;
    sub_10003446C(a2);
    if (v9) {
      (*(void (**)(uint64_t))(*(void *)v9 + 8LL))(v9);
    }
    uint64_t v10 = &v7;
    sub_100006F6C((void ***)&v10);
  }

void sub_10005F2A8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  if (a13) {
    (*(void (**)(uint64_t))(*(void *)a13 + 8LL))(a13);
  }
  *(void *)(v13 - 24) = &a10;
  sub_100006F6C((void ***)(v13 - 24));
  _Unwind_Resume(a1);
}

void sub_10005F2FC(uint64_t a1, void *a2)
{
  if (*(_BYTE *)(a1 + 73072))
  {
    sub_100073BB0(&v5, a1 + 73048);
    sub_10003446C(a2);
    if (v5.n128_u64[0]) {
      (*(void (**)(unint64_t))(*(void *)v5.n128_u64[0] + 8LL))(v5.n128_u64[0]);
    }
  }

  else
  {
    __n128 v5 = 0uLL;
    uint64_t v6 = 0LL;
    uint64_t v3 = operator new(0x20uLL);
    sub_10001A3BC(v3, &v5);
    uint64_t v7 = v4;
    sub_10003446C(a2);
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8LL))(v7);
    }
    uint64_t v8 = &v5;
    sub_100006F6C((void ***)&v8);
  }

void sub_10005F3B8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  if (a13) {
    (*(void (**)(uint64_t))(*(void *)a13 + 8LL))(a13);
  }
  *(void *)(v13 - 24) = &a10;
  sub_100006F6C((void ***)(v13 - 24));
  _Unwind_Resume(a1);
}

void sub_10005F40C(uint64_t a1, void *a2)
{
  if (*(_BYTE *)(a1 + 73096))
  {
    sub_100108154((void *)(a1 + 73080), __p);
    uint64_t v3 = (char *)operator new(0x20uLL);
    *(void *)uint64_t v3 = &off_1002AE030;
    *(_OWORD *)(v3 + 8) = *(_OWORD *)__p;
    *((void *)v3 + 3) = v8;
    __p[0] = 0LL;
    __p[1] = 0LL;
    uint64_t v8 = 0LL;
    uint64_t v9 = (void **)v3;
    sub_10003446C(a2);
    if (v9) {
      (*((void (**)(void **))*v9 + 1))(v9);
    }
    if (SHIBYTE(v8) < 0) {
      operator delete(__p[0]);
    }
  }

  else
  {
    __p[0] = 0LL;
    __p[1] = 0LL;
    uint64_t v8 = 0LL;
    uint64_t v4 = operator new(0x20uLL);
    sub_10001A3BC(v4, (__n128 *)__p);
    uint64_t v6 = v5;
    sub_10003446C(a2);
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8LL))(v6);
    }
    uint64_t v9 = __p;
    sub_100006F6C(&v9);
  }

void sub_10005F508( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a10) {
    (*(void (**)(uint64_t))(*(void *)a10 + 8LL))(a10);
  }
  *(void *)(v16 - 24) = &__p;
  sub_100006F6C((void ***)(v16 - 24));
  _Unwind_Resume(a1);
}

void sub_10005F574(uint64_t a1, void *a2)
{
  v4[0] = (uint64_t)v4;
  v4[1] = (uint64_t)v4;
  _OWORD v4[2] = 0LL;
  sub_10008C93C(a1 + 72832, v4);
  sub_1000731A0(&v3, (uint64_t)v4);
  sub_10003446C(a2);
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }
  sub_10000C0E8(v4);
}

void sub_10005F5F4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  if (a2) {
    (*(void (**)(uint64_t))(*(void *)a2 + 8LL))(a2);
  }
  sub_10000C0E8((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10005F628(uint64_t a1, void *a2)
{
  v6[0] = 0LL;
  v6[1] = 0LL;
  uint64_t v5 = v6;
  sub_10008C3D0(a1 + 72832, &v5);
  sub_1000738CC(&v4, (uint64_t *)&v5);
  sub_10003446C(a2);
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
  }
  return sub_10000D448((uint64_t)&v5);
}

void sub_10005F6AC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  if (a2) {
    (*(void (**)(uint64_t))(*(void *)a2 + 8LL))(a2);
  }
  sub_10000D448((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10005F6E0(int a1, void *a2)
{
  v4[0] = (uint64_t)v4;
  v4[1] = (uint64_t)v4;
  _OWORD v4[2] = 0LL;
  sub_100056720(a1, v4);
  sub_1000731A0(&v3, (uint64_t)v4);
  sub_10003446C(a2);
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }
  sub_10000C0E8(v4);
}

void sub_10005F758(_Unwind_Exception *a1, uint64_t a2, ...)
{
  if (a2) {
    (*(void (**)(uint64_t))(*(void *)a2 + 8LL))(a2);
  }
  sub_10000C0E8((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10005F78C(uint64_t a1, void *a2)
{
  uint64_t v4 = operator new(0x10uLL);
  *(void *)uint64_t v4 = &off_1002AEA00;
  v4[8] = *(_BYTE *)(a1 + 72760);
  uint64_t v6 = v4;
  sub_10003446C(a2);
  uint64_t result = (uint64_t)v6;
  if (v6) {
    return (*(uint64_t (**)(void *))(*(void *)v6 + 8LL))(v6);
  }
  return result;
}

void sub_10005F800( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10) {
    (*(void (**)(uint64_t))(*(void *)a10 + 8LL))(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10005F820(uint64_t a1, void *a2)
{
  uint64_t result = v4;
  if (v4) {
    return (*(uint64_t (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
  }
  return result;
}

void sub_10005F880( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10) {
    (*(void (**)(uint64_t))(*(void *)a10 + 8LL))(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10005F8A0(uint64_t a1, void *a2)
{
  uint64_t result = v4;
  if (v4) {
    return (*(uint64_t (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
  }
  return result;
}

void sub_10005F900( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10) {
    (*(void (**)(uint64_t))(*(void *)a10 + 8LL))(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10005F920(uint64_t a1, void *a2)
{
  uint64_t result = v4;
  if (v4) {
    return (*(uint64_t (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
  }
  return result;
}

void sub_10005F980( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10) {
    (*(void (**)(uint64_t))(*(void *)a10 + 8LL))(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10005F9A0(uint64_t a1, void *a2)
{
  uint64_t result = v4;
  if (v4) {
    return (*(uint64_t (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
  }
  return result;
}

void sub_10005FA00( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10) {
    (*(void (**)(uint64_t))(*(void *)a10 + 8LL))(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10005FA20(uint64_t a1, void *a2)
{
  uint64_t result = v4;
  if (v4) {
    return (*(uint64_t (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
  }
  return result;
}

void sub_10005FA80( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10) {
    (*(void (**)(uint64_t))(*(void *)a10 + 8LL))(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10005FAA0(uint64_t a1, void *a2)
{
  uint64_t result = v4;
  if (v4) {
    return (*(uint64_t (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
  }
  return result;
}

void sub_10005FB00( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10) {
    (*(void (**)(uint64_t))(*(void *)a10 + 8LL))(a10);
  }
  _Unwind_Resume(exception_object);
}

void *sub_10005FB20(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = operator new(0xB0uLL);
  v7[0] = 0LL;
  __n128 v5 = sub_100007640((uint64_t)v7, a2);
  sub_10007E204(v4, a1, v7, 4LL, 0LL, v5);
  sub_100073930(&v8, (uint64_t)v4);
  sub_10004E9A4(a1, &v8);
  sub_10000F9EC(&v9);
  return sub_100006E7C(v7);
}

void sub_10005FBB0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *sub_10005FBF4(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = operator new(0xB0uLL);
  v7[0] = 0LL;
  __n128 v5 = sub_100007640((uint64_t)v7, a2);
  sub_10007E204(v4, a1, v7, 4LL, 1LL, v5);
  sub_100073930(&v8, (uint64_t)v4);
  sub_10004E9A4(a1, &v8);
  sub_10000F9EC(&v9);
  return sub_100006E7C(v7);
}

void sub_10005FC84( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_10005FCC8(const std::string *a1, void *a2)
{
  uint64_t result = v4;
  if (v4) {
    return (*(uint64_t (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
  }
  return result;
}

void sub_10005FD28( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10) {
    (*(void (**)(uint64_t))(*(void *)a10 + 8LL))(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10005FD48(uint64_t a1, void *a2)
{
  uint64_t v4 = operator new(0x10uLL);
  *(void *)uint64_t v4 = &off_1002B01F0;
  v4[8] = *(_BYTE *)(a1 + 73758);
  uint64_t v6 = v4;
  sub_10003446C(a2);
  uint64_t result = (uint64_t)v6;
  if (v6) {
    return (*(uint64_t (**)(void *))(*(void *)v6 + 8LL))(v6);
  }
  return result;
}

void sub_10005FDBC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10) {
    (*(void (**)(uint64_t))(*(void *)a10 + 8LL))(a10);
  }
  _Unwind_Resume(exception_object);
}

void *sub_10005FDDC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  v6[0] = 0LL;
  sub_100007640((uint64_t)v6, a2);
  sub_100073204(v7, v6);
  *a3 = a1;
  a3[1] = 0LL;
  sub_100007640((uint64_t)(a3 + 1), v7);
  sub_100006E7C(v7);
  return sub_100006E7C(v6);
}

void sub_10005FE40( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
}

uint64_t sub_10005FE64(void *a1, int a2, uint64_t *a3)
{
  if (a2) {
    LOBYTE(v4) = 0;
  }
  else {
    __int16 v4 = (unsigned __int16)sub_1001472F4(a3) >> 10;
  }
  __n128 v5 = operator new(0x10uLL);
  *(void *)__n128 v5 = &off_1002AE118;
  v5[8] = v4;
  uint64_t v7 = v5;
  sub_10003446C(a1);
  uint64_t result = (uint64_t)v7;
  if (v7) {
    return (*(uint64_t (**)(void *))(*(void *)v7 + 8LL))(v7);
  }
  return result;
}

void sub_10005FEEC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10) {
    (*(void (**)(uint64_t))(*(void *)a10 + 8LL))(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10005FF0C( _WORD *a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned int v9 = a2;
  int v10 = spinel_datatype_unpack(a1, a2, "6C", a4, a5, a6, a7, a8, (uint64_t)&v22);
  if (v10 > v9)
  {
    char v11 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v11)
    {
      if (sub_10015A058(4))
      {
        if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
          sub_100204B10();
        }
      }
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }

    return 1LL;
  }

  if (v10 < 1) {
    return 1LL;
  }
  snprintf(__str, 0xAuLL, "/%d", v21);
  sub_100108154(v22, &v20);
  sub_10000AC00(__p, __str);
  unsigned __int8 v12 = sub_10000D650(&v20, (const std::string::value_type *)__p);
  std::string::size_type v13 = v12->__r_.__value_.__r.__words[0];
  v23[0] = v12->__r_.__value_.__l.__size_;
  *(void *)((char *)v23 + 7) = *(std::string::size_type *)((char *)&v12->__r_.__value_.__r.__words[1] + 7);
  unsigned __int8 size = v12->__r_.__value_.__s.__size_;
  v12->__r_.__value_.__l.__size_ = 0LL;
  v12->__r_.__value_.__l.__cap_ = 0LL;
  v12->__r_.__value_.__r.__words[0] = 0LL;
  char v15 = operator new(0x20uLL);
  void *v15 = &off_1002AE030;
  v15[1] = v13;
  void v15[2] = v23[0];
  *(void *)((char *)v15 + 23) = *(void *)((char *)v23 + 7);
  *((_BYTE *)v15 + 31) = size;
  uint64_t v16 = *a3;
  *a3 = (uint64_t)v15;
  if (v16) {
    (*(void (**)(uint64_t))(*(void *)v16 + 8LL))(v16);
  }
  if (v19 < 0) {
    operator delete(__p[0]);
  }
  return 0LL;
}

void sub_1000600B8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20, __int16 a21, char a22, char a23)
{
  if (v24 < 0) {
    operator delete(v23);
  }
  if (a17 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  _Unwind_Resume(exception_object);
}

void *sub_100060108(uint64_t a1, std::string *a2, uint64_t *a3)
{
  if (((*(uint64_t (**)(uint64_t))(*(void *)a1 + 160LL))(a1) & 1) == 0)
  {
    uint64_t v6 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v6)
    {
      uint64_t v7 = v6;
      if (sub_10015A058(6) && os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
      {
        if ((a2->__r_.__value_.__s.__size_ & 0x80u) == 0) {
          uint64_t v8 = a2;
        }
        else {
          uint64_t v8 = (std::string *)a2->__r_.__value_.__r.__words[0];
        }
        *(_DWORD *)__n128 buf = 136315138;
        unsigned __int16 v14 = v8;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "property_get_value: key: %s", buf, 0xCu);
      }
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }
  }

  if (sub_100090BB4(a1 + 74104, (const void **)&a2->__r_.__value_.__l.__data_))
  {
    v12[0] = 0LL;
    sub_100007640((uint64_t)v12, a3);
    unsigned int v9 = v12;
    sub_100090BFC(a1 + 74104, (char *)a2, v12);
  }

  else
  {
    v11[0] = 0LL;
    sub_100007640((uint64_t)v11, a3);
    unsigned int v9 = v11;
    sub_1000D8B74(a1, a2, v11);
  }

  return sub_100006E7C(v9);
}

void sub_10006027C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *sub_1000602A4(uint64_t **a1, std::string *a2)
{
  uint64_t v3 = a2;
  return sub_100073C14(a1, (const void **)&a2->__r_.__value_.__l.__data_, (uint64_t)&unk_100226587, &v3) + 7;
}

uint64_t sub_1000602D8(uint64_t a1, uint64_t *a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v10 = 0LL;
  if (sub_1000603A4(a4))
  {
    sub_100006FF8(a2);
  }

  else
  {
    v9[0] = 0LL;
    sub_100007640((uint64_t)v9, a2);
    sub_100060418(a5, (uint64_t)&v10, v9, a3);
    sub_1000075F0(v9);
  }

  uint64_t result = v10;
  if (v10) {
    return (*(uint64_t (**)(uint64_t))(*(void *)v10 + 8LL))(v10);
  }
  return result;
}

void sub_100060374( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  if (a14) {
    (*(void (**)(uint64_t))(*(void *)a14 + 8LL))(a14);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1000603A4(void *a1)
{
  if (!*a1)
  {
    std::runtime_error::runtime_error(&v2, "call to empty boost::function");
    v2.__vftable = (std::runtime_error_vtbl *)&off_1002AD8D8;
    sub_10000706C(&v2);
  }

  return (*(uint64_t (**)(void *))((*a1 & 0xFFFFFFFFFFFFFFFELL) + 8))(a1 + 1);
}

void sub_100060404( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, std::runtime_error a9)
{
}

void *sub_100060418(void *a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  if (!*a1)
  {
    std::runtime_error::runtime_error(&v10, "call to empty boost::function");
    v10.__vftable = (std::runtime_error_vtbl *)&off_1002AD8D8;
    sub_10000706C(&v10);
  }

  uint64_t v6 = *(void (**)(void *, uint64_t, uint64_t *, uint64_t))((*a1 & 0xFFFFFFFFFFFFFFFELL) + 8);
  uint64_t v7 = a1 + 1;
  v9[0] = 0LL;
  sub_1000080D0(v9, a3);
  v6(v7, a2, v9, a4);
  return sub_1000075F0(v9);
}

void sub_1000604B4( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, std::runtime_error a13)
{
}

void *sub_1000604D8(uint64_t a1, char *a2, uint64_t *a3, uint64_t *a4)
{
  if (*a4)
  {
    v9[0] = 0LL;
    sub_100007640((uint64_t)v9, a4);
    v8[0] = 0LL;
    sub_100007640((uint64_t)v8, a3);
    sub_10006062C((uint64_t)sub_1000602D8, v9, v8, &v10);
    sub_100073F9C(v13, &v10);
    sub_1000D8DF0(a1, a2, (uint64_t *)v13);
    sub_100071048(v13);
    sub_100071048(v12);
    sub_100071070(v11);
    sub_100071048(v8);
    return sub_100071070(v9);
  }

  else
  {
    v14[0] = 0LL;
    sub_100007640((uint64_t)v14, a3);
    sub_1000D8DF0(a1, a2, v14);
    return sub_100071048(v14);
  }

void sub_1000605C8(_Unwind_Exception *a1)
{
}

void *sub_10006062C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, void *a4@<X8>)
{
  v9[0] = 0LL;
  sub_100007640((uint64_t)v9, a2);
  v8[0] = 0LL;
  sub_100007640((uint64_t)v8, a3);
  sub_100073E28(v10, v9, v8);
  sub_100073F34(a4, a1, v10);
  sub_100071048(v11);
  sub_100071070(v10);
  sub_100071048(v8);
  return sub_100071070(v9);
}

void sub_1000606C0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
}

void *sub_1000606FC(uint64_t a1, char *a2, int a3, char a4, uint64_t *a5)
{
  uint64_t v10 = operator new(0x28uLL);
  *uint64_t v10 = sub_100057164;
  v10[1] = 0LL;
  void v10[2] = a1;
  *((_DWORD *)v10 + 6) = a3;
  *((_BYTE *)v10 + 28) = a4;
  *((_DWORD *)v10 + 8) = 0;
  *((_BYTE *)v10 + 36) = 0;
  v13[0] = (uint64_t)off_1002B04D0;
  v13[1] = (uint64_t)v10;
  v12[0] = 0LL;
  sub_100007640((uint64_t)v12, a5);
  sub_1000604D8(a1, a2, v13, v12);
  sub_100071070(v12);
  return sub_100071048(v13);
}

void sub_1000607A8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
}

void *sub_1000607CC(uint64_t a1, char *a2, int a3, char a4, uint64_t *a5)
{
  uint64_t v10 = operator new(0x28uLL);
  *uint64_t v10 = sub_100057164;
  v10[1] = 0LL;
  void v10[2] = a1;
  *((_DWORD *)v10 + 6) = a3;
  *((_BYTE *)v10 + 28) = a4;
  *((_DWORD *)v10 + 8) = 0;
  *((_BYTE *)v10 + 36) = 1;
  v13[0] = (uint64_t)off_1002B04D0;
  v13[1] = (uint64_t)v10;
  v12[0] = 0LL;
  sub_100007640((uint64_t)v12, a5);
  sub_1000604D8(a1, a2, v13, v12);
  sub_100071070(v12);
  return sub_100071048(v13);
}

void sub_10006087C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
}

void *sub_1000608A0(uint64_t a1, char *a2, int a3, int a4, char a5, uint64_t *a6)
{
  unsigned __int8 v12 = operator new(0x28uLL);
  void *v12 = sub_100057164;
  v12[1] = 0LL;
  __n128 v12[2] = a1;
  *((_DWORD *)v12 + 6) = a4;
  *((_BYTE *)v12 + 28) = a5;
  *((_DWORD *)v12 + 8) = a3;
  *((_BYTE *)v12 + 36) = 0;
  v15[0] = (uint64_t)off_1002B04F0;
  v15[1] = (uint64_t)v12;
  v14[0] = 0LL;
  sub_100007640((uint64_t)v14, a6);
  sub_1000604D8(a1, a2, v15, v14);
  sub_100071070(v14);
  return sub_100071048(v15);
}

void sub_100060950( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
}

void *sub_100060974(uint64_t a1, char *a2, int a3, int a4, char a5, uint64_t *a6)
{
  unsigned __int8 v12 = operator new(0x28uLL);
  void *v12 = sub_100057164;
  v12[1] = 0LL;
  __n128 v12[2] = a1;
  *((_DWORD *)v12 + 6) = a4;
  *((_BYTE *)v12 + 28) = a5;
  *((_DWORD *)v12 + 8) = a3;
  *((_BYTE *)v12 + 36) = 1;
  v15[0] = (uint64_t)off_1002B04F0;
  v15[1] = (uint64_t)v12;
  v14[0] = 0LL;
  sub_100007640((uint64_t)v14, a6);
  sub_1000604D8(a1, a2, v15, v14);
  sub_100071070(v14);
  return sub_100071048(v15);
}

void sub_100060A28( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
}

uint64_t sub_100060A4C(uint64_t *a1, uint64_t *a2)
{
  unsigned int v3 = sub_1001472F4(a1);
  sub_100035214(&v7, 0x20uLL);
  unsigned __int8 v4 = 0;
  __n128 v5 = v7;
  uint64_t v8 = (uint64_t)v7;
  LOBYTE(v10) = 0;
  do
  {
    if (((v3 >> v4) & 1) != 0)
    {
      else {
        *v5++ = v4;
      }
      uint64_t v8 = (uint64_t)v5;
      unsigned __int8 v4 = v10;
    }

    LOBYTE(v10) = ++v4;
  }

  while (v4 < 0x20u);
  sub_1000200F8(a2, (uint64_t)&v7);
  uint64_t v10 = &v7;
  sub_100006F6C((void ***)&v10);
  return 0LL;
}

void sub_100060AF8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void **a12)
{
  a12 = (void **)&a9;
  sub_100006F6C(&a12);
  _Unwind_Resume(a1);
}

uint64_t sub_100060B18(uint64_t *a1, uint64_t *a2)
{
  p_p = &__p;
  sub_100147B4C(a1, &__p);
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) != 0) {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if (!strcasecmp((const char *)p_p, "disabled")
    || !strcasecmp((const char *)p_p, "stop")
    || !strcasecmp((const char *)p_p, "off")
    || !strcasecmp((const char *)p_p, "0")
    || !strcasecmp((const char *)p_p, "false"))
  {
    char v6 = 0;
    sub_1000176D4(a2, &v6);
  }

  else
  {
    if (strcasecmp((const char *)p_p, "active")
      && strcasecmp((const char *)p_p, "start")
      && strcasecmp((const char *)p_p, "on")
      && strcasecmp((const char *)p_p, "1")
      && strcasecmp((const char *)p_p, "true"))
    {
      uint64_t v4 = 2LL;
      goto LABEL_16;
    }

    char v6 = 2;
    sub_1000176D4(a2, &v6);
  }

  uint64_t v4 = 0LL;
LABEL_16:
  return v4;
}

void sub_100060C68( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100060C88(uint64_t a1, uint64_t *a2)
{
  int v3 = 1;
  sub_100017730(a2, &v3);
  return 0LL;
}

uint64_t sub_100060CB8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v8 = 0LL;
  unint64_t v9 = 0LL;
  uint64_t v10 = 0LL;
  if ((char)__p.__r_.__value_.__s.__size_ < 0)
  {
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
    if (__p.__r_.__value_.__l.__size_ == 16) {
      goto LABEL_3;
    }
  }

  else
  {
    std::string::size_type size = __p.__r_.__value_.__s.__size_;
    if (__p.__r_.__value_.__s.__size_ == 16)
    {
LABEL_3:
      sub_100034D10((uint64_t *)&v8, 8uLL);
      if (v9 == v8) {
        uint64_t v4 = 0LL;
      }
      else {
        uint64_t v4 = v8;
      }
      if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        p_p = &__p;
      }
      else {
        p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      sub_100159978(v4, v9 - v8, p_p);
      uint64_t v6 = 0LL;
      goto LABEL_12;
    }
  }

  uint64_t v6 = 2 * (size != 0);
LABEL_12:
  sub_1000200F8(a2, (uint64_t)&v8);
  unsigned __int8 v12 = (void **)&v8;
  sub_100006F6C(&v12);
  return v6;
}

void sub_100060D88( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  *(void *)(v18 - 40) = &a10;
  sub_100006F6C((void ***)(v18 - 40));
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_100060DB4(uint64_t *a1, uint64_t *a2)
{
  p_p = &__p;
  sub_100147B4C(a1, &__p);
  if ((__p.__r_.__value_.__s.__size_ & 0x80u) != 0) {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if (!strcasecmp((const char *)p_p, "disabled")
    || !strcasecmp((const char *)p_p, "stop")
    || !strcasecmp((const char *)p_p, "off")
    || !strcasecmp((const char *)p_p, "0")
    || !strcasecmp((const char *)p_p, "false")
    || !strcasecmp((const char *)p_p, "disable"))
  {
    char v6 = 0;
    sub_1000176D4(a2, &v6);
  }

  else
  {
    if (strcasecmp((const char *)p_p, "primary")
      && strcasecmp((const char *)p_p, "start")
      && strcasecmp((const char *)p_p, "on")
      && strcasecmp((const char *)p_p, "1")
      && strcasecmp((const char *)p_p, "true")
      && strcasecmp((const char *)p_p, "enable"))
    {
      uint64_t v4 = 2LL;
      goto LABEL_18;
    }

    char v6 = 2;
    sub_1000176D4(a2, &v6);
  }

  uint64_t v4 = 0LL;
LABEL_18:
  return v4;
}

void sub_100060F2C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100060F4C(uint64_t a1, uint64_t *a2)
{
  int v3 = 1;
  sub_100017730(a2, &v3);
  return 0LL;
}

uint64_t sub_100060F7C(uint64_t *a1, uint64_t *a2)
{
  if (((char)v9.__r_.__value_.__s.__size_ & 0x80000000) == 0)
  {
    if (strcasecmp((const char *)&v9, "on"))
    {
      if (strcasecmp((const char *)&v9, "low-power"))
      {
        int v3 = &v9;
        uint64_t v4 = &v9;
        goto LABEL_8;
      }

LABEL_12:
    char v8 = 0;
    sub_1000176D4(a2, &v8);
    goto LABEL_13;
  }

  int v3 = (std::string *)v9.__r_.__value_.__r.__words[0];
  if (!strcasecmp(v9.__r_.__value_.__l.__data_, "on")) {
    goto LABEL_12;
  }
  uint64_t v4 = v3;
LABEL_8:
  int v5 = strcasecmp((const char *)v3, "kWPANTUNDNCPMCUPowerState_Off");
  uint64_t v6 = 2LL;
  if (v5) {
    goto LABEL_14;
  }
  char v8 = 2;
  sub_1000176D4(a2, &v8);
LABEL_13:
  uint64_t v6 = 0LL;
LABEL_14:
  return v6;
}

  *a2 = (a1 & 0x20) != 0;
  return result;
}
}
}

  uint64_t v6 = 0LL;
  if ((has & 4) != 0)
  {
LABEL_6:
    uint64_t v7 = 2654435761LL * self->_coexRxRequests;
    if ((has & 2) != 0) {
      goto LABEL_7;
    }
LABEL_14:
    char v8 = 0LL;
    if ((has & 1) != 0) {
      goto LABEL_8;
    }
    goto LABEL_15;
  }

  return v6;
}

  return v6;
}

  __break(0x5515u);
  return result;
}

      goto LABEL_17;
    }

    char v8 = dispatch_time(0LL, 0LL);
  }

    return;
  }

  sub_10000AC00(v16, "Error");
  sub_10000AC00(v14, "Error in Srp-mdns interaction");
  sub_10000AC00(v12, "No mdns record found for current network after successful threadstart");
  sub_1000E8078((uint64_t *)v16, (uint64_t *)v14, (const std::string::value_type *)v12, 0LL);
  if (v13 < 0) {
    operator delete(v12[0]);
  }
  if (v15 < 0) {
    operator delete(v14[0]);
  }
  if (v17 < 0) {
    operator delete(v16[0]);
  }
}

      goto LABEL_17;
    }

    char v11 = dispatch_time(0LL, 0LL);
  }

void sub_100061098( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1000610BC(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  int v6 = sub_1000D8DE8(a1);
  if (!sub_1000B50F4(v6))
  {
    if (!*(_DWORD *)(a1 + 73744)) {
      *(_DWORD *)(a1 + 73744) = 1;
    }
  }

  if (sub_1000D8DE8(a1) == 7)
  {
    *(_OWORD *)&v15.__r_.__value_.__r.__words[1] = 0uLL;
    v15.__r_.__value_.__r.__words[0] = (std::string::size_type)&v15.__r_.__value_.__l.__size_;
    sub_10000AC00(&v13, "Network:Key");
    uint64_t v7 = sub_10000ED88((uint64_t **)&v15, &v13);
    sub_100018024(v7, a2);
    if (v14 < 0) {
      operator delete((void *)v13.n128_u64[0]);
    }
    char v8 = operator new(0xA8uLL);
    v10[0] = 0LL;
    sub_100007640((uint64_t)v10, a3);
    sub_100045084(v10, v11);
    sub_10004BFE4(v12, v11);
    sub_100077A20(v8, a1, v12, &v15);
    sub_10004C360((uint64_t *)&v13, (uint64_t)v8);
    sub_10004E9A4(a1, (uint64_t *)&v13);
    sub_10000F9EC(&v13.n128_i64[1]);
    sub_100006E7C(v12);
    sub_1000075F0(v11);
    sub_1000075F0(v10);
    sub_10000D448((uint64_t)&v15);
  }

  else
  {
    v9[0] = 0LL;
    sub_100007640((uint64_t)v9, a3);
    memset(&v15, 0, sizeof(v15));
    sub_100057164(a1, a2, v9, 70LL, 68, 0, 0, &v15);
    sub_1000075F0(v9);
  }

  v15.__r_.__value_.__r.__words[0] = (std::string::size_type)&v16;
  sub_100006F6C((void ***)&v15);
}

void sub_100061294( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v9 - 80) = v9 - 56;
  sub_100006F6C((void ***)(v9 - 80));
  _Unwind_Resume(a1);
}

void *sub_10006135C(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v6 = sub_10007993C((uint64_t)v11, a3);
  sub_100034C60("Ciib", v10, 0x80u);
  uint64_t v7 = sub_100079A40(v6, (uint64_t)v10);
  sub_100034C60("Ciib", (uint64_t *)v9, 0x80u);
  uint64_t v5 = sub_100079A40(v7, (uint64_t)v9);
  sub_10007A86C(v5, &v16);
  sub_10004E9A4(a1, &v16);
  sub_10000F9EC(&v17);
  uint64_t v18 = v9;
  sub_100006F6C((void ***)&v18);
  v9[0] = (void **)v10;
  sub_100006F6C(v9);
  sub_10004BF94(v15);
  sub_10004BED0(v14);
  sub_10004BEF8(v13);
  return sub_100006E7C(v12);
}

void sub_100061520(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  char v8 = va_arg(va1, void **);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  va_copy(va2, va1);
  uint64_t v12 = va_arg(va2, void);
  uint64_t v14 = va_arg(va2, void);
  uint64_t v15 = va_arg(va2, void);
  sub_10000F9EC((uint64_t *)(v5 + 8));
  *(void *)(v6 - 40) = va;
  sub_100006F6C((void ***)(v6 - 40));
  va_copy((va_list)v8, va1);
  sub_100006F6C((void ***)va);
  sub_1000454AC((uint64_t *)va2);
  _Unwind_Resume(a1);
}

void *sub_100061594(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  *(_BYTE *)(a1 + 73756) = 1;
  v7[0] = 0LL;
  sub_100007640((uint64_t)v7, a3);
  memset(&__p, 0, sizeof(__p));
  sub_100057164(a1, a2, v7, 69LL, 68, 0, 0, &__p);
  return sub_1000075F0(v7);
}

void sub_100061620( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  sub_1000075F0(&a16);
  _Unwind_Resume(a1);
}

void *sub_100061644(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  v16[1] = sub_1001474A0(a2);
  v16[2] = v5;
  sub_1000798B4((uint64_t)v10, a1);
  uint64_t v6 = sub_10007993C((uint64_t)v10, a3);
  sub_100034C60("Cii6C", v9, 0x80u);
  uint64_t v7 = sub_100079A40(v6, (uint64_t)v9);
  sub_10007A86C(v7, &v15);
  sub_10004E9A4(a1, &v15);
  sub_10000F9EC(v16);
  uint64_t v17 = (void **)v9;
  sub_100006F6C(&v17);
  sub_10004BF94(v14);
  sub_10004BED0(v13);
  sub_10004BEF8(v12);
  return sub_100006E7C(v11);
}

void sub_10006172C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  uint64_t v9 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  sub_10000F9EC((uint64_t *)(v6 + 8));
  *(void *)(v7 - 40) = va;
  sub_100006F6C((void ***)(v7 - 40));
  sub_1000454AC((uint64_t *)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_10006176C(uint64_t a1, uint64_t *a2, void *a3)
{
  *(_BYTE *)(a1 + 72758) = sub_1001478B8(a2);
  return sub_100006FF8(a3);
}

uint64_t sub_1000617A8(uint64_t a1, uint64_t *a2, void *a3)
{
  *(_BYTE *)(a1 + 72759) = sub_1001478B8(a2);
  return sub_100006FF8(a3);
}

uint64_t sub_1000617E4(uint64_t a1, uint64_t *a2, void *a3)
{
  *(_BYTE *)(a1 + 72816) = sub_1001478B8(a2);
  return sub_100006FF8(a3);
}

void sub_100061820(uint64_t a1, uint64_t *a2, void *a3)
{
  if (v5[1] - v5[0] == 8LL) {
    *(void *)(a1 + 72817) = *(void *)v5[0];
  }
  sub_100006FF8(a3);
  uint64_t v6 = (void **)v5;
  sub_100006F6C(&v6);
}

void sub_100061898( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void **a12)
{
  a12 = (void **)&a9;
  sub_100006F6C(&a12);
  _Unwind_Resume(a1);
}

void sub_1000618B4(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  if ((unint64_t)(v16 - v15) < 5)
  {
    sub_100006FF8(a3);
  }

  else
  {
    sub_100034D10(&v15, v16 - v15 - 4);
    sub_100034C60("CiidSS", v14, 0x80u);
    sub_1000798B4((uint64_t)&v7, a1);
    uint64_t v5 = sub_10007993C((uint64_t)&v7, a3);
    uint64_t v6 = sub_100079A40(v5, (uint64_t)v14);
    sub_10007A86C(v6, &v12);
    sub_10004E9A4(a1, &v12);
    sub_10000F9EC(&v13);
    sub_10004BF94(v11);
    sub_10004BED0(v10);
    sub_10004BEF8(v9);
    sub_100006E7C(v8);
    uint64_t v7 = (void **)v14;
    sub_100006F6C(&v7);
  }

  uint64_t v7 = (void **)&v15;
  sub_100006F6C(&v7);
}

void sub_100061A04( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void **a16)
{
  a16 = (void **)(v16 - 88);
  sub_100006F6C(&a16);
  _Unwind_Resume(a1);
}

void sub_100061A60(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  if ((unint64_t)(v17 - v16) < 0x15)
  {
    sub_100006FF8(a3);
  }

  else
  {
    __int128 v15 = *(_OWORD *)(v17 - 18);
    sub_100034C60("CiidS6S", v14, 0x80u);
    sub_1000798B4((uint64_t)&v7, a1);
    uint64_t v5 = sub_10007993C((uint64_t)&v7, a3);
    uint64_t v6 = sub_100079A40(v5, (uint64_t)v14);
    sub_10007A86C(v6, &v12);
    sub_10004E9A4(a1, &v12);
    sub_10000F9EC(&v13);
    sub_10004BF94(v11);
    sub_10004BED0(v10);
    sub_10004BEF8(v9);
    sub_100006E7C(v8);
    uint64_t v7 = (void **)v14;
    sub_100006F6C(&v7);
  }

  uint64_t v7 = (void **)&v16;
  sub_100006F6C(&v7);
}

void sub_100061B98( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void **a17)
{
  a17 = (void **)(v17 - 56);
  sub_100006F6C(&a17);
  _Unwind_Resume(a1);
}

uint64_t sub_100061BF0(uint64_t a1, uint64_t *a2, void *a3)
{
  uint64_t v4 = a1 + 72832;
  *(void *)(a1 + 72832) = sub_1001476B4(a2, 0);
  *(_BYTE *)(v4 + 8) = 1;
  return sub_100006FF8(a3);
}

uint64_t sub_100061C34(uint64_t a1, uint64_t *a2, void *a3)
{
  uint64_t v4 = a1 + 72848;
  *(void *)(a1 + 72848) = sub_1001476B4(a2, 0);
  *(_BYTE *)(v4 + 8) = 1;
  return sub_100006FF8(a3);
}

void sub_100061C78(uint64_t a1, uint64_t *a2, void *a3)
{
  if (v5[1] - v5[0] == 16LL) {
    sub_100074D90((uint64_t *)(a1 + 72864), (uint64_t)v5);
  }
  sub_100006FF8(a3);
  uint64_t v6 = (void **)v5;
  sub_100006F6C(&v6);
}

void sub_100061CF0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void **a12)
{
  a12 = (void **)&a9;
  sub_100006F6C(&a12);
  _Unwind_Resume(a1);
}

uint64_t sub_100061D0C(uint64_t a1, uint64_t *a2, void *a3)
{
  std::string::operator=((std::string *)(a1 + 72896), &__str);
  *(_BYTE *)(a1 + 72920) = 1;
  return sub_100006FF8(a3);
}

void sub_100061D7C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100061D98(uint64_t a1, uint64_t *a2, void *a3)
{
  if (v7[1] - v7[0] == 8LL)
  {
    sub_100147058(a2, (uint64_t)v6);
    sub_100074D90((uint64_t *)(a1 + 72928), (uint64_t)v6);
    char v8 = v6;
    sub_100006F6C((void ***)&v8);
  }

  sub_100006FF8(a3);
  v6[0] = (void **)v7;
  sub_100006F6C(v6);
}

void sub_100061E38( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10, uint64_t a11, uint64_t a12, char a13)
{
  *(void *)(v14 - 40) = v13;
  sub_100006F6C((void ***)(v14 - 40));
  a10 = (void **)&a13;
  sub_100006F6C(&a10);
  _Unwind_Resume(a1);
}

uint64_t sub_100061E6C(uint64_t a1, uint64_t *a2, void *a3)
{
  uint64_t v4 = a1 + 72960;
  *(void *)(a1 + 72960) = sub_1001474A0(a2);
  *(void *)(v4 + 8) = v5;
  *(_BYTE *)(v4 + 16) = 1;
  return sub_100006FF8(a3);
}

uint64_t sub_100061EAC(uint64_t a1, uint64_t *a2, void *a3)
{
  uint64_t v4 = a1 + 72980;
  *(_DWORD *)(a1 + 72980) = sub_1001472F4(a2);
  *(_BYTE *)(v4 + 4) = 1;
  return sub_100006FF8(a3);
}

uint64_t sub_100061EEC(uint64_t a1, uint64_t *a2, void *a3)
{
  uint64_t v4 = a1 + 72988;
  *(_WORD *)(a1 + 72988) = sub_1001472F4(a2);
  *(_BYTE *)(v4 + 2) = 1;
  return sub_100006FF8(a3);
}

uint64_t sub_100061F2C(uint64_t a1, uint64_t *a2, void *a3)
{
  uint64_t v4 = a1 + 72992;
  *(_BYTE *)(a1 + 72992) = sub_1001472F4(a2);
  *(_BYTE *)(v4 + 1) = 1;
  return sub_100006FF8(a3);
}

void sub_100061F6C(uint64_t a1, uint64_t *a2, void *a3)
{
  if (v7[1] - v7[0] <= 0x10uLL)
  {
    sub_100147058(a2, (uint64_t)v6);
    sub_100074D90((uint64_t *)(a1 + 73000), (uint64_t)v6);
    char v8 = v6;
    sub_100006F6C((void ***)&v8);
  }

  sub_100006FF8(a3);
  v6[0] = (void **)v7;
  sub_100006F6C(v6);
}

void sub_10006200C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10, uint64_t a11, uint64_t a12, char a13)
{
  *(void *)(v14 - 40) = v13;
  sub_100006F6C((void ***)(v14 - 40));
  a10 = (void **)&a13;
  sub_100006F6C(&a10);
  _Unwind_Resume(a1);
}

uint64_t sub_100062040(uint64_t a1, uint64_t *a2, void *a3)
{
  uint64_t v4 = a1 + 73032;
  *(_DWORD *)(a1 + 73032) = sub_1001472F4(a2);
  *(_BYTE *)(v4 + 4) = 1;
  return sub_100006FF8(a3);
}

uint64_t sub_100062080(uint64_t a1, uint64_t *a2, void *a3)
{
  uint64_t v4 = a1 + 73040;
  unsigned __int16 v5 = *(_WORD *)(a1 + 73042);
  *(_DWORD *)(a1 + 73040) = (unsigned __int16)sub_1001472F4(a2) | (v5 << 16);
  *(_BYTE *)(v4 + 4) = 1;
  return sub_100006FF8(a3);
}

uint64_t sub_1000620D0(uint64_t a1, uint64_t *a2, void *a3)
{
  uint64_t v4 = a1 + 73040;
  int v5 = *(_DWORD *)(a1 + 73040);
  *(_DWORD *)(a1 + 73040) = v5 & 0xFF00FFFF | (sub_1001472F4(a2) << 16);
  *(_BYTE *)(v4 + 4) = 1;
  return sub_100006FF8(a3);
}

uint64_t sub_100062120(uint64_t a1, uint64_t *a2, void *a3)
{
  uint64_t v7 = (void **)v6;
  sub_100006F6C(&v7);
  return sub_100006FF8(a3);
}

void sub_100062188(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
}

uint64_t sub_1000621A0(uint64_t a1, uint64_t *a2, void *a3)
{
  uint64_t v4 = a1 + 73080;
  *(void *)(a1 + 73080) = sub_1001474A0(a2);
  *(void *)(v4 + 8) = v5;
  *(_BYTE *)(v4 + 16) = 1;
  return sub_100006FF8(a3);
}

void sub_1000621E0(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  v5[0] = 0LL;
  sub_100007640((uint64_t)v5, a3);
  sub_100056950(a1, (char *)&__p, v5);
  sub_1000075F0(v5);
}

void sub_10006224C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_100062278(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v6 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v6)
  {
    uint64_t v7 = v6;
    if (sub_10015A058(6) && os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      buf.n128_u16[0] = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_INFO,  "set_prop_DatasetBytes Entered",  (uint8_t *)&buf,  2u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  sub_100147058(a2, (uint64_t)&buf);
  char v8 = operator new(0x20uLL);
  sub_10001A3BC(v8, &buf);
  uint64_t v13 = v9;
  v11[0] = 0LL;
  sub_100007640((uint64_t)v11, a3);
  memset(&__p, 0, sizeof(__p));
  sub_100057164(a1, &v13, v11, 5437LL, 68, 0, 0, &__p);
  sub_1000075F0(v11);
  if (v13) {
    (*(void (**)(uint64_t))(*(void *)v13 + 8LL))(v13);
  }
  __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&buf;
  sub_100006F6C((void ***)&__p);
}

void sub_1000623C8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  sub_1000075F0(&a16);
  uint64_t v22 = *(void *)(v20 - 40);
  if (v22) {
    (*(void (**)(void))(*(void *)v22 + 8LL))(*(void *)(v20 - 40));
  }
  std::string __p = &a20;
  sub_100006F6C((void ***)&__p);
  _Unwind_Resume(a1);
}

uint64_t sub_100062424(uint64_t a1, uint64_t *a2, void *a3)
{
  uint64_t v4 = (_BYTE *)(a1 + 72760);
  *(_BYTE *)(a1 + 72760) = sub_1001478B8(a2);
  uint64_t v5 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v5)
  {
    uint64_t v6 = v5;
    if (sub_10015A058(6) && os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      if (*v4) {
        uint64_t v7 = "en";
      }
      else {
        uint64_t v7 = "dis";
      }
      int v9 = 136315138;
      uint64_t v10 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_INFO,  "TickleOnHostDidWake is %sabled",  (uint8_t *)&v9,  0xCu);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  return sub_100006FF8(a3);
}

uint64_t sub_100062548(uint64_t a1, uint64_t *a2, void *a3)
{
  unsigned int v7 = 512;
  if (sub_100007684(a1 + 72792, &v7)) {
    *(_BYTE *)(a1 + 73758) = sub_1001472F4(a2);
  }
  return sub_100006FF8(a3);
}

uint64_t *sub_1000625C0(uint64_t *a1, uint64_t a2)
{
  return a1;
}

void *sub_1000625FC(_BYTE *a1, std::string *a2, uint64_t *a3, uint64_t *a4)
{
  char v8 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v8)
  {
    int v9 = v8;
    if (sub_10015A058(6) && os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      if ((a2->__r_.__value_.__s.__size_ & 0x80u) == 0) {
        uint64_t v10 = a2;
      }
      else {
        uint64_t v10 = (std::string *)a2->__r_.__value_.__r.__words[0];
      }
      *(_DWORD *)__n128 buf = 136315138;
      uint64_t v20 = v10;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "property_set_value: key: %s", buf, 0xCu);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  if (!a1[1376])
  {
    __int128 v15 = (a2->__r_.__value_.__s.__size_ & 0x80u) == 0
        ? (const char *)a2
        : (const char *)a2->__r_.__value_.__r.__words[0];
    if (strcasecmp(v15, "Daemon:Enabled")) {
      return (void *)sub_100006FF8(a4);
    }
  }

  if (sub_100090BB4((uint64_t)(a1 + 74104), (const void **)&a2->__r_.__value_.__l.__data_))
  {
    v18[0] = 0LL;
    sub_100007640((uint64_t)v18, a4);
    sub_10009F31C((uint64_t)(a1 + 74104), a2, a3, v18);
    uint64_t v11 = v18;
  }

  else
  {
    if ((a2->__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v12 = (const char *)a2;
    }
    else {
      uint64_t v12 = (const char *)a2->__r_.__value_.__r.__words[0];
    }
    if (!strcasecmp(v12, "NCP:PcapEnabled"))
    {
      BOOL v13 = sub_1001478B8(a3);
      uint64_t v14 = (FILE **)(a1 + 1608);
      if (v13) {
        sub_1000B6044(v14);
      }
      else {
        sub_1000B622C((uint64_t)v14);
      }
    }

    v17[0] = 0LL;
    sub_100007640((uint64_t)v17, a4);
    sub_1000D9A18(a1, a2, a3, v17);
    uint64_t v11 = v17;
  }

  return sub_1000075F0(v11);
}

void sub_1000627E8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  if (a2 == 2)
  {
    __int128 v15 = __cxa_begin_catch(exception_object);
    uint64_t v16 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v16)
    {
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }
  }

  else
  {
    if (a2 != 1) {
      _Unwind_Resume(exception_object);
    }
    uint64_t v17 = __cxa_begin_catch(exception_object);
    uint64_t v18 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v18)
    {
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }
  }

  sub_100006FF8(v13);
  __cxa_end_catch();
  JUMPOUT(0x1000627B4LL);
}

void *sub_100062974(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, unsigned int a5, void *a6)
{
  unsigned int v12 = a5;
  if (!sub_100007684(a1 + 72792, &v12)) {
    return (void *)sub_100006FF8(a3);
  }
  v11[0] = 0LL;
  sub_100007640((uint64_t)v11, a3);
  sub_100060418(a6, a2, v11, a4);
  return sub_1000075F0(v11);
}

void sub_100062A00(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void *sub_100062A14(uint64_t a1, char *a2, uint64_t *a3)
{
  v6[0] = 0LL;
  sub_100007640((uint64_t)v6, a3);
  sub_1000D9DC8(a1, a2, v6);
  return sub_100071048(v6);
}

void sub_100062A64( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *sub_100062A78(uint64_t a1, char *a2, int a3, uint64_t *a4)
{
  v8[0] = 0LL;
  sub_100007640((uint64_t)v8, a4);
  sub_100062B50((uint64_t)sub_100062974, 0LL, a1, a3, v8, (uint64_t)v9);
  sub_100074E4C(v11, (uint64_t)v9);
  sub_100062A14(a1, a2, (uint64_t *)v11);
  sub_100071048(v11);
  sub_100071048(v10);
  return sub_100071048(v8);
}

void sub_100062B18( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
}

void *sub_100062B50@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t *a5@<X4>, uint64_t a6@<X8>)
{
  v12[0] = 0LL;
  sub_100007640((uint64_t)v12, a5);
  sub_100074DD0((uint64_t)v13, a3, a4, v12);
  sub_100071A18(a6, a1, a2, (uint64_t)v13);
  sub_100071048(v14);
  return sub_100071048(v12);
}

void sub_100062BE0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100062C04(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  if (v15[1] - v15[0] == 8LL)
  {
    sub_1000798B4((uint64_t)&v8, a1);
    uint64_t v5 = sub_10007993C((uint64_t)&v8, a3);
    sub_100034C60("CiiEc", v7, 0x80u);
    uint64_t v6 = sub_100079A40(v5, (uint64_t)v7);
    sub_10007A86C(v6, &v13);
    sub_10004E9A4(a1, &v13);
    sub_10000F9EC(&v14);
    uint64_t v16 = (void **)v7;
    sub_100006F6C(&v16);
    sub_10004BF94(v12);
    sub_10004BED0(v11);
    sub_10004BEF8(v10);
    sub_100006E7C(v9);
  }

  else
  {
    sub_100006FF8(a3);
  }

  char v8 = (void **)v15;
  sub_100006F6C(&v8);
}

void sub_100062D24( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void **a18)
{
  a18 = (void **)(v18 - 64);
  sub_100006F6C(&a18);
  _Unwind_Resume(a1);
}

void sub_100062D80(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  if (v15[1] - v15[0] == 8LL)
  {
    sub_1000798B4((uint64_t)&v8, a1);
    uint64_t v5 = sub_10007993C((uint64_t)&v8, a3);
    sub_100034C60("CiiEc", v7, 0x80u);
    uint64_t v6 = sub_100079A40(v5, (uint64_t)v7);
    sub_10007A86C(v6, &v13);
    sub_10004E9A4(a1, &v13);
    sub_10000F9EC(&v14);
    uint64_t v16 = (void **)v7;
    sub_100006F6C(&v16);
    sub_10004BF94(v12);
    sub_10004BED0(v11);
    sub_10004BEF8(v10);
    sub_100006E7C(v9);
  }

  else
  {
    sub_100006FF8(a3);
  }

  char v8 = (void **)v15;
  sub_100006F6C(&v8);
}

void sub_100062EA0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void **a18)
{
  a18 = (void **)(v18 - 64);
  sub_100006F6C(&a18);
  _Unwind_Resume(a1);
}

void sub_100062EFC(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  if (v15[1] - v15[0] == 8LL)
  {
    sub_1000798B4((uint64_t)&v8, a1);
    uint64_t v5 = sub_10007993C((uint64_t)&v8, a3);
    sub_100034C60("CiiEc", v7, 0x80u);
    uint64_t v6 = sub_100079A40(v5, (uint64_t)v7);
    sub_10007A86C(v6, &v13);
    sub_10004E9A4(a1, &v13);
    sub_10000F9EC(&v14);
    uint64_t v16 = (void **)v7;
    sub_100006F6C(&v16);
    sub_10004BF94(v12);
    sub_10004BED0(v11);
    sub_10004BEF8(v10);
    sub_100006E7C(v9);
  }

  else
  {
    sub_100006FF8(a3);
  }

  char v8 = (void **)v15;
  sub_100006F6C(&v8);
}

void sub_100063024( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void **a18)
{
  a18 = (void **)(v18 - 64);
  sub_100006F6C(&a18);
  _Unwind_Resume(a1);
}

void *sub_100063080(uint64_t a1, std::string *a2, uint64_t a3, uint64_t *a4)
{
  char v8 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v8)
  {
    uint64_t v9 = v8;
    if (sub_10015A058(6) && os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      if ((a2->__r_.__value_.__s.__size_ & 0x80u) == 0) {
        uint64_t v10 = a2;
      }
      else {
        uint64_t v10 = (std::string *)a2->__r_.__value_.__r.__words[0];
      }
      *(_DWORD *)__n128 buf = 136315138;
      uint64_t v16 = v10;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "property_insert_value: key: %s", buf, 0xCu);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  if (!*(_BYTE *)(a1 + 1376)) {
    return (void *)sub_100006FF8(a4);
  }
  if (sub_100090BB4(a1 + 74104, (const void **)&a2->__r_.__value_.__l.__data_))
  {
    v14[0] = 0LL;
    sub_100007640((uint64_t)v14, a4);
    sub_1000A3DC4(a1 + 74104, (uint64_t)a2, a3, v14);
    uint64_t v11 = v14;
  }

  else
  {
    v13[0] = 0LL;
    sub_100007640((uint64_t)v13, a4);
    sub_1000D9F6C(a1, a2, a3, v13);
    uint64_t v11 = v13;
  }

  return sub_1000075F0(v11);
}

void sub_10006320C( _Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (a2 == 2)
  {
    uint64_t v13 = __cxa_begin_catch(a1);
    uint64_t v14 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v14)
    {
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }
  }

  else
  {
    if (a2 != 1) {
      _Unwind_Resume(a1);
    }
    __int128 v15 = __cxa_begin_catch(a1);
    uint64_t v16 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v16)
    {
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }
  }

  sub_100006FF8(v9);
  __cxa_end_catch();
  JUMPOUT(0x1000631D8LL);
}

void *sub_100063390(uint64_t a1, char *a2, uint64_t *a3)
{
  v6[0] = 0LL;
  sub_100007640((uint64_t)v6, a3);
  sub_1000DA204(a1, a2, v6);
  return sub_100071048(v6);
}

void sub_1000633E0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *sub_1000633F4(uint64_t a1, char *a2, int a3, uint64_t *a4)
{
  v8[0] = 0LL;
  sub_100007640((uint64_t)v8, a4);
  sub_100062B50((uint64_t)sub_100062974, 0LL, a1, a3, v8, (uint64_t)v9);
  sub_100074E4C(v11, (uint64_t)v9);
  sub_100063390(a1, a2, (uint64_t *)v11);
  sub_100071048(v11);
  sub_100071048(v10);
  return sub_100071048(v8);
}

void sub_100063494( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
}

void sub_1000634CC(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  if (v15[1] - v15[0] == 8LL)
  {
    sub_1000798B4((uint64_t)&v8, a1);
    uint64_t v5 = sub_10007993C((uint64_t)&v8, a3);
    sub_100034C60("CiiE", v7, 0x80u);
    uint64_t v6 = sub_100079A40(v5, (uint64_t)v7);
    sub_10007A86C(v6, &v13);
    sub_10004E9A4(a1, &v13);
    sub_10000F9EC(&v14);
    uint64_t v16 = (void **)v7;
    sub_100006F6C(&v16);
    sub_10004BF94(v12);
    sub_10004BED0(v11);
    sub_10004BEF8(v10);
    sub_100006E7C(v9);
  }

  else
  {
    sub_100006FF8(a3);
  }

  char v8 = (void **)v15;
  sub_100006F6C(&v8);
}

void sub_1000635E4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void **a16)
{
  a16 = (void **)(v16 - 64);
  sub_100006F6C(&a16);
  _Unwind_Resume(a1);
}

void sub_100063640(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  if (v15[1] - v15[0] == 8LL)
  {
    sub_1000798B4((uint64_t)&v8, a1);
    uint64_t v5 = sub_10007993C((uint64_t)&v8, a3);
    sub_100034C60("CiiE", v7, 0x80u);
    uint64_t v6 = sub_100079A40(v5, (uint64_t)v7);
    sub_10007A86C(v6, &v13);
    sub_10004E9A4(a1, &v13);
    sub_10000F9EC(&v14);
    uint64_t v16 = (void **)v7;
    sub_100006F6C(&v16);
    sub_10004BF94(v12);
    sub_10004BED0(v11);
    sub_10004BEF8(v10);
    sub_100006E7C(v9);
  }

  else
  {
    sub_100006FF8(a3);
  }

  char v8 = (void **)v15;
  sub_100006F6C(&v8);
}

void sub_100063758( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void **a16)
{
  a16 = (void **)(v16 - 64);
  sub_100006F6C(&a16);
  _Unwind_Resume(a1);
}

void sub_1000637B4(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  if (v15[1] - v15[0] == 8LL)
  {
    sub_1000798B4((uint64_t)&v8, a1);
    uint64_t v5 = sub_10007993C((uint64_t)&v8, a3);
    sub_100034C60("CiiE", v7, 0x80u);
    uint64_t v6 = sub_100079A40(v5, (uint64_t)v7);
    sub_10007A86C(v6, &v13);
    sub_10004E9A4(a1, &v13);
    sub_10000F9EC(&v14);
    uint64_t v16 = (void **)v7;
    sub_100006F6C(&v16);
    sub_10004BF94(v12);
    sub_10004BED0(v11);
    sub_10004BEF8(v10);
    sub_100006E7C(v9);
  }

  else
  {
    sub_100006FF8(a3);
  }

  char v8 = (void **)v15;
  sub_100006F6C(&v8);
}

void sub_1000638CC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void **a16)
{
  a16 = (void **)(v16 - 64);
  sub_100006F6C(&a16);
  _Unwind_Resume(a1);
}

void *sub_100063928(uint64_t a1, std::string *a2, uint64_t a3, uint64_t *a4)
{
  char v8 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v8)
  {
    uint64_t v9 = v8;
    if (sub_10015A058(6) && os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      if ((a2->__r_.__value_.__s.__size_ & 0x80u) == 0) {
        uint64_t v10 = a2;
      }
      else {
        uint64_t v10 = (std::string *)a2->__r_.__value_.__r.__words[0];
      }
      *(_DWORD *)__n128 buf = 136315138;
      uint64_t v16 = v10;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "property_remove_value: key: %s", buf, 0xCu);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  if (sub_100090BB4(a1 + 74104, (const void **)&a2->__r_.__value_.__l.__data_))
  {
    v14[0] = 0LL;
    sub_100007640((uint64_t)v14, a4);
    sub_1000A3DC4(a1 + 74104, (uint64_t)a2, a3, v14);
    uint64_t v11 = v14;
  }

  else
  {
    v13[0] = 0LL;
    sub_100007640((uint64_t)v13, a4);
    sub_1000DA3A8(a1, a2, a3, v13);
    uint64_t v11 = v13;
  }

  return sub_1000075F0(v11);
}

void sub_100063A9C( _Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (a2 == 2)
  {
    uint64_t v13 = __cxa_begin_catch(a1);
    uint64_t v14 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v14)
    {
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }
  }

  else
  {
    if (a2 != 1) {
      _Unwind_Resume(a1);
    }
    __int128 v15 = __cxa_begin_catch(a1);
    uint64_t v16 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v16)
    {
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }
  }

  sub_100006FF8(v9);
  __cxa_end_catch();
  JUMPOUT(0x100063A68LL);
}

BOOL sub_100063C20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 74016;
  for (BOOL result = sub_1000561A0(a1 + 74016); !result; BOOL result = sub_1000561A0(v4))
  {
    sub_1000561DC(v4, &v8);
    uint64_t v6 = sub_100042EAC(&v8);
    uint64_t v7 = 0LL;
    (*(void (**)(uint64_t, uint64_t, uint64_t *))(*(void *)v6 + 32LL))(v6, a2, &v7);
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8LL))(v7);
    }
    sub_10000F9EC(&v9);
    sub_100063CF4(v4);
  }

  return result;
}

void sub_100063CCC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  if (a10) {
    (*(void (**)(uint64_t))(*(void *)a10 + 8LL))(a10);
  }
  sub_10000F9EC(v10);
  _Unwind_Resume(a1);
}

void sub_100063CF4(uint64_t a1)
{
  std::runtime_error v2 = (std::mutex *)(a1 + 24);
  std::mutex::lock((std::mutex *)(a1 + 24));
  sub_100070D78(a1);
  std::mutex::unlock(v2);
}

void sub_100063D3C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_100063D50(uint64_t a1, _WORD *a2, uint64_t a3)
{
  uint64_t v5 = (uint64_t **)a1;
  uint64_t i = 0LL;
  sub_100075400(&v45, (uint64_t *)(a1 + 1096));
  if ((_DWORD)a3)
  {
    int v11 = 0;
    unsigned int v32 = v5;
    do
    {
      int v44 = 0LL;
      __int16 v43 = 0;
      unsigned __int16 v42 = 0;
      unsigned __int8 v41 = 0;
      unsigned __int16 v40 = 0;
      int v12 = spinel_datatype_unpack(a2, a3, "t(6CbCbSC)", v6, v7, v8, v9, v10, (uint64_t)&v44);
      if (v12 <= 0) {
        break;
      }
      uint64_t v13 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v13)
      {
        if (sub_10015A058(6) && os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
        {
          sub_100108154(v44, &v37);
          int v14 = v39;
          __int128 v15 = (void **)v37;
          int v16 = HIBYTE(v43);
          int v17 = v43;
          int v18 = v41;
          sub_1000EB864(_byteswap_ushort(v42), 0, __p);
          char v19 = "yes";
          if (v18) {
            uint64_t v20 = "yes";
          }
          else {
            uint64_t v20 = "no";
          }
          if (!v17) {
            char v19 = "no";
          }
          unsigned __int8 v21 = (void **)__p[0];
          uint64_t v22 = &v37;
          if (v14 < 0) {
            uint64_t v22 = v15;
          }
          *(_DWORD *)__n128 buf = 67110658;
          if (v36 >= 0) {
            unsigned __int8 v21 = __p;
          }
          *(_DWORD *)std::string v49 = v11;
          *(_WORD *)&uint64_t v49[4] = 2080;
          *(void *)&v49[6] = v22;
          *(_WORD *)&v49[14] = 1024;
          *(_DWORD *)&v49[16] = v16;
          __int16 v50 = 2080;
          char v51 = v19;
          __int16 v52 = 2080;
          char v53 = v20;
          __int16 v54 = 2080;
          char v55 = v21;
          __int16 v56 = 1024;
          int v57 = v40;
          _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_INFO,  "[-NCP-]: On-mesh net [%d] %s/%d stable:%s local:%s flags:%s, rloc16:0x%04x",  buf,  0x3Cu);
          if (v36 < 0) {
            operator delete(__p[0]);
          }
          uint64_t v5 = v32;
          if (v39 < 0) {
            operator delete(v37);
          }
        }
      }

      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)__n128 buf = 136315394;
        *(void *)std::string v49 = "com.apple.wpantund.ncp";
        *(_WORD *)&v49[8] = 2080;
        *(void *)&v49[10] = "default";
        _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "Logging Module is not defined for SubSystem: %s, Category: %s",  buf,  0x16u);
      }

      if (__OFADD__(v11++, 1))
      {
        __break(0x5500u);
LABEL_40:
        __break(0x5515u);
      }

      if (!v41)
      {
        sub_1000EB2CC((uint64_t)buf, v44, HIBYTE(v43));
        LODWORD(v37) = 0;
        WORD2(v37) = HIBYTE(v42);
        BYTE6(v37) = v43;
        unsigned __int16 v38 = v40;
        uint64_t i = sub_100075724((uint64_t)&v45, (uint64_t)buf);
        if (v46 != (_BYTE *)i)
        {
          int v24 = sub_100075788((uint64_t)&v45, (uint64_t)buf);
          while (i != v24)
          {
            if (sub_1000EBB58((uint64_t)(i + 6), (uint64_t)&v37))
            {
              sub_100011568((uint64_t)&v45, i);
              break;
            }

            sub_10000B338((uint64_t)&i);
          }
        }

        v34[0] = (uint64_t)off_1002AED78 + 1;
        sub_1000EE8F4(v5, 0, v44, HIBYTE(v43), HIBYTE(v42), v43, v40, v34);
        sub_1000075F0(v34);
      }

      BOOL v25 = a3 >= v12;
      a3 = (a3 - v12);
      if (!v25) {
        goto LABEL_40;
      }
      a2 = (_WORD *)((char *)a2 + v12);
    }

    while ((_DWORD)a3);
  }

  uint64_t v26 = v45;
  for (i = v45; i != (uint64_t *)v46; uint64_t v26 = i)
  {
    if (!*((_DWORD *)v26 + 12))
    {
      uint64_t v27 = *((unsigned __int8 *)v26 + 44);
      unsigned __int16 v28 = *((unsigned __int8 *)v26 + 52);
      unsigned __int8 v29 = *((_BYTE *)v26 + 54);
      __int16 v30 = *((_WORD *)v26 + 28);
      v33[0] = (uint64_t)off_1002AED78 + 1;
      sub_1000EED40(v5, 0, (__int128 *)((char *)v26 + 28), v27, v28, v29, v30, v33);
      sub_1000075F0(v33);
    }

    sub_10000B338((uint64_t)&i);
  }

  return sub_10000D0D4((uint64_t)&v45);
}

void sub_10006419C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, char a25, uint64_t a26, uint64_t a27, uint64_t a28, char a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, void *__p, uint64_t a37, int a38, __int16 a39, char a40, char a41)
{
}

uint64_t sub_100064204(uint64_t a1, _WORD *a2, uint64_t a3)
{
  uint64_t v5 = (_BYTE *)a1;
  uint64_t i = 0LL;
  sub_1000757EC(&v56, (uint64_t *)(a1 + 1120));
  if ((_DWORD)a3)
  {
    int v11 = 0;
    unsigned int v35 = v5;
    do
    {
      char v55 = 0LL;
      int v12 = spinel_datatype_unpack(a2, a3, "t(6CbCbbS)", v6, v7, v8, v9, v10, (uint64_t)&v55);
      if (v12 <= 0) {
        break;
      }
      uint64_t v13 = sub_100064700(v52, &v48);
      int v14 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v14)
      {
        if (sub_10015A058(6) && os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
        {
          sub_100108154(v55, &v42);
          int v15 = v47;
          char v36 = (void **)v42;
          int v37 = v54;
          int v16 = v53;
          BOOL v17 = v48;
          int v18 = v51;
          sub_1000FC6F0(v13, __p);
          if (v18) {
            char v19 = "yes";
          }
          else {
            char v19 = "no";
          }
          uint64_t v20 = (void **)__p[0];
          if (v17) {
            unsigned __int8 v21 = "yes";
          }
          else {
            unsigned __int8 v21 = "no";
          }
          if (v16) {
            uint64_t v22 = "yes";
          }
          else {
            uint64_t v22 = "no";
          }
          int v23 = &v42;
          if (v15 < 0) {
            int v23 = v36;
          }
          *(_DWORD *)__n128 buf = 67111170;
          if (v41 >= 0) {
            uint64_t v20 = __p;
          }
          *(_DWORD *)__int128 v60 = v11;
          if (v50) {
            int v24 = "yes";
          }
          else {
            int v24 = "no";
          }
          *(_WORD *)&uint64_t v60[4] = 2080;
          *(void *)&v60[6] = v23;
          *(_WORD *)&v60[14] = 1024;
          *(_DWORD *)&v60[16] = v37;
          __int16 v61 = 2080;
          __int128 v62 = v22;
          __int16 v63 = 2080;
          __int128 v64 = v21;
          __int16 v65 = 2080;
          __int128 v66 = v19;
          __int16 v67 = 2080;
          __int128 v68 = v20;
          __int16 v69 = 2080;
          __int128 v70 = v24;
          __int16 v71 = 1024;
          int v72 = v49;
          _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_INFO,  "[-NCP-]: Off-mesh route [%d] %s/%d stable:%s nat64:%s local:%s preference:%s, next_hop_is_this_device:%s, rloc16:0x%0x",  buf,  0x50u);
          if (v41 < 0) {
            operator delete(__p[0]);
          }
          uint64_t v5 = v35;
          if (v47 < 0) {
            operator delete(v42);
          }
        }
      }

      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)__n128 buf = 136315394;
        *(void *)__int128 v60 = "com.apple.wpantund.ncp";
        *(_WORD *)&v60[8] = 2080;
        *(void *)&v60[10] = "default";
        _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "Logging Module is not defined for SubSystem: %s, Category: %s",  buf,  0x16u);
      }

      if (__OFADD__(v11++, 1))
      {
        __break(0x5500u);
LABEL_47:
        __break(0x5515u);
      }

      if (!v51)
      {
        sub_1000EB2CC((uint64_t)buf, v55, v54);
        BOOL v26 = v48;
        LODWORD(v42) = 0;
        HIDWORD(v42) = v13;
        unsigned __int8 v43 = v53;
        BOOL v44 = v48;
        unsigned __int16 v45 = v49;
        char v46 = v50;
        uint64_t i = sub_100075724((uint64_t)&v56, (uint64_t)buf);
        if (v57 != (_BYTE *)i)
        {
          uint64_t v27 = sub_100075788((uint64_t)&v56, (uint64_t)buf);
          while (i != v27)
          {
            if (sub_1000EBDEC((uint64_t)(i + 6), (uint64_t)&v42))
            {
              sub_100011568((uint64_t)&v56, i);
              break;
            }

            sub_10000B338((uint64_t)&i);
          }
        }

        v39[0] = (uint64_t)off_1002AED78 + 1;
        sub_1000F005C((uint64_t)v5, 0, v55, v54, v13, v53, v26, v49, v50, v39);
        sub_1000075F0(v39);
      }

      BOOL v28 = a3 >= v12;
      a3 = (a3 - v12);
      if (!v28) {
        goto LABEL_47;
      }
      a2 = (_WORD *)((char *)a2 + v12);
    }

    while ((_DWORD)a3);
  }

  unsigned __int8 v29 = v56;
  for (i = v56; i != (uint64_t *)v57; unsigned __int8 v29 = i)
  {
    if (!*((_DWORD *)v29 + 12))
    {
      uint64_t v30 = *((unsigned __int8 *)v29 + 44);
      uint64_t v31 = *((unsigned int *)v29 + 13);
      uint64_t v32 = *((unsigned __int8 *)v29 + 56);
      __int16 v33 = *((_WORD *)v29 + 29);
      v38[0] = (uint64_t)off_1002AED78 + 1;
      sub_1000F030C(v5, 0, (__int128 *)((char *)v29 + 28), v30, v31, v32, v33, v38);
      sub_1000075F0(v38);
    }

    sub_10000B338((uint64_t)&i);
  }

  return sub_10000D0D4((uint64_t)&v56);
}

void sub_100064698( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, char a26, uint64_t a27, uint64_t a28, uint64_t a29, char a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, void *__p, uint64_t a38, int a39, __int16 a40, char a41, char a42)
{
}

uint64_t sub_100064700(uint64_t a1, BOOL *a2)
{
  switch(a1 & 0xC0)
  {
    case 192LL:
      uint64_t result = 0xFFFFFFFFLL;
      goto LABEL_12;
    case 64LL:
      uint64_t result = 1LL;
      goto LABEL_12;
    case 0LL:
      goto LABEL_4;
  }

  uint64_t v5 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (!v5)
  {
    uint64_t result = os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR);
    if (!(_DWORD)result) {
      goto LABEL_12;
    }
    sub_1001FB53C();
    goto LABEL_4;
  }

  uint64_t v6 = v5;
  uint64_t result = sub_10015A058(4);
  if ((_DWORD)result)
  {
    uint64_t result = os_log_type_enabled(v6, OS_LOG_TYPE_ERROR);
    if ((_DWORD)result)
    {
      sub_100204E28(a1, v6, v7, v8, v9, v10, v11, v12);
LABEL_4:
      uint64_t result = 0LL;
    }
  }

void sub_1000647C4(uint64_t *a1, _WORD *a2, uint64_t a3)
{
  int v34 = 0LL;
  unsigned int v33 = 0;
  unsigned __int8 v32 = 0;
  uint64_t v31 = 0LL;
  unsigned int v30 = 0;
  sub_100075954(&v27, a1 + 149);
  if ((_DWORD)a3)
  {
    int v11 = 0;
    do
    {
      int v12 = spinel_datatype_unpack(a2, a3, "t(LdbdS)", v6, v7, v8, v9, v10, (uint64_t)&v35);
      if (v12 < 1) {
        break;
      }
      uint64_t v13 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v13)
      {
        if (sub_10015A058(6) && os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
        {
          int v14 = "yes";
          if (!v32) {
            int v14 = "no";
          }
          *(_DWORD *)__n128 buf = 67109890;
          *(_DWORD *)&uint8_t buf[4] = v11;
          *(_WORD *)&uint8_t buf[8] = 1024;
          *(_DWORD *)&buf[10] = v35;
          *(_WORD *)unsigned __int16 v38 = 2080;
          *(void *)&__int128 v38[2] = v14;
          __int16 v39 = 1024;
          int v40 = v29;
          _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_INFO,  "[-NCP-]: Service [%d] enterprise_number:%u stable:%s RLOC16:%04x",  buf,  0x1Eu);
        }
      }

      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)__n128 buf = 136315394;
        *(void *)&uint8_t buf[4] = "com.apple.wpantund.ncp";
        *(_WORD *)&_BYTE buf[12] = 2080;
        *(void *)unsigned __int16 v38 = "default";
        _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "Logging Module is not defined for SubSystem: %s, Category: %s",  buf,  0x16u);
      }

      sub_100018E5C(v26, v34, (uint64_t)v34 + v33);
      sub_100018E5C(v25, v31, (uint64_t)v31 + v30);
      sub_1000711B4((uint64_t)buf, 0, v35, (uint64_t)v26, v32, (uint64_t)v25);
      uint64_t v15 = sub_100075D7C(v27, v28, (uint64_t)buf);
      if (v15 != v28)
      {
        sub_100075DD4((uint64_t)&v36, v15 + 72, v28, v15);
        sub_100075D20((uint64_t)&v27, v16);
      }

      v24[0] = (uint64_t)off_1002AED78 + 1;
      sub_1000F0858(a1, 0, v35, (uint64_t)v26, v32, (uint64_t)v25, v24);
      sub_1000075F0(v24);
      BOOL v17 = a3 >= v12;
      a3 = (a3 - v12);
      if (!v17)
      {
        __break(0x5515u);
LABEL_24:
        __break(0x5500u);
      }

      if (__OFADD__(v11, 1)) {
        goto LABEL_24;
      }
      a2 = (_WORD *)((char *)a2 + v12);
      int v18 = (void ***)sub_100071254((uint64_t)buf);
      *(void *)__n128 buf = v25;
      sub_100006F6C(v18);
      *(void *)__n128 buf = v26;
      sub_100006F6C((void ***)buf);
      ++v11;
    }

    while ((_DWORD)a3);
  }

  uint64_t v19 = v28;
  if (v27 != v28)
  {
    uint64_t v20 = v27 + 16;
    do
    {
      if (!*(_DWORD *)(v20 - 8))
      {
        uint64_t v21 = *(unsigned int *)(v20 - 4);
        v23[0] = (uint64_t)off_1002AED78 + 1;
        sub_1000F1110(a1, 0, v21, v20, v23);
        sub_1000075F0(v23);
        uint64_t v19 = v28;
      }

      uint64_t v22 = v20 + 56;
      v20 += 72LL;
    }

    while (v22 != v19);
  }

  *(void *)__n128 buf = &v27;
  sub_100075CA4((void ***)buf);
}

void sub_100064B60( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, char a21, uint64_t a22, uint64_t a23, uint64_t a24, char a25, uint64_t a26, uint64_t a27, uint64_t a28, char a29, uint64_t a30, uint64_t a31, char a32, uint64_t a33, uint64_t a34, char a35)
{
}

void sub_100064BF0(uint64_t *a1, _WORD *a2, uint64_t a3)
{
  uint64_t v6 = a1 + 149;
  sub_100075954(&v25, a1 + 149);
  if ((_DWORD)a3)
  {
    int v12 = 0;
    do
    {
      int v13 = spinel_datatype_unpack(a2, a3, "t(CLdbdS)", v7, v8, v9, v10, v11, (uint64_t)&v34);
      if (v13 < 1) {
        break;
      }
      int v14 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v14)
      {
        if (sub_10015A058(6) && os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)__n128 buf = 67109888;
          *(_DWORD *)&uint8_t buf[4] = v34;
          *(_WORD *)&uint8_t buf[8] = 1024;
          *(_DWORD *)&buf[10] = v33;
          LOWORD(v42) = 1024;
          *(_DWORD *)((char *)&v42 + 2) = v30;
          HIWORD(v42) = 1024;
          int v43 = v27;
          _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_INFO,  "[-NCP-]: ServiceId:%01x, EnterpriseNumber:%u, Stable:%d, RLOC16:%04x",  buf,  0x1Au);
        }
      }

      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)__n128 buf = 136315394;
        *(void *)&uint8_t buf[4] = "com.apple.wpantund.ncp";
        *(_WORD *)&_BYTE buf[12] = 2080;
        unsigned __int16 v42 = "default";
        _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "Logging Module is not defined for SubSystem: %s, Category: %s",  buf,  0x16u);
      }

      sub_100018E5C(v24, v32, (uint64_t)v32 + v31);
      sub_100018E5C(v23, v29, (uint64_t)v29 + v28);
      sub_1000F0F88((uint64_t)a1, 0, v33, v24, v30, v23, &v25);
      sub_1000711B4((uint64_t)buf, 0, v33, (uint64_t)v24, v30, (uint64_t)v23);
      if (!sub_1000F0E28((uint64_t)a1, 0, v33, v24, v30, v23, v6))
      {
        unint64_t v15 = a1[150];
        if (v15 >= a1[151])
        {
          uint64_t v16 = sub_100075EC4(v6, (uint64_t)buf);
        }

        else
        {
          sub_100075E84((uint64_t)v6, (uint64_t)buf);
          uint64_t v16 = v15 + 72;
        }

        a1[150] = v16;
        BOOL v17 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v17)
        {
          if (sub_10015A058(6) && os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
          {
            sub_1000EC218((uint64_t)buf, __p);
            int v18 = __p;
            if (v38 < 0) {
              int v18 = *(_BYTE **)__p;
            }
            *(_DWORD *)__int16 v39 = 136315138;
            int v40 = v18;
            _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_INFO, "Adding Service: %s", v39, 0xCu);
            if (v38 < 0) {
              operator delete(*(void **)__p);
            }
          }
        }

        else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)std::string __p = 136315394;
          *(void *)&__p[4] = "com.apple.wpantund.ncp";
          __int16 v36 = 2080;
          int v37 = "default";
          _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "Logging Module is not defined for SubSystem: %s, Category: %s",  __p,  0x16u);
        }
      }

      if (__OFADD__(v12, 1))
      {
        __break(0x5500u);
LABEL_34:
        __break(0x5515u);
      }

      BOOL v19 = a3 >= v13;
      a3 = (a3 - v13);
      if (!v19) {
        goto LABEL_34;
      }
      a2 = (_WORD *)((char *)a2 + v13);
      uint64_t v20 = (void ***)sub_100071254((uint64_t)buf);
      *(void *)__n128 buf = v23;
      sub_100006F6C(v20);
      *(void *)__n128 buf = v24;
      sub_100006F6C((void ***)buf);
      ++v12;
    }

    while ((_DWORD)a3);
  }

  uint64_t v22 = v25;
  uint64_t v21 = v26;
  while (v22 != v21)
  {
    if (!*(_DWORD *)(v22 + 8))
    {
      sub_1000F0F88( (uint64_t)a1,  0,  *(_DWORD *)(v22 + 12),  (const void **)(v22 + 16),  *(unsigned __int8 *)(v22 + 40),  (const void **)(v22 + 48),  v6);
      uint64_t v21 = v26;
    }

    v22 += 72LL;
  }

  sub_1000ECF4C(a1);
  *(void *)__n128 buf = &v25;
  sub_100075CA4((void ***)buf);
}

void sub_100065060( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, char a21, uint64_t a22, uint64_t a23, char a24, uint64_t a25, uint64_t a26, char a27)
{
  *(void *)(v27 - sub_100071254(v27 - 176) = &a21;
  sub_100006F6C((void ***)(v27 - 176));
  *(void *)(v27 - sub_100071254(v27 - 176) = &a24;
  sub_100006F6C((void ***)(v27 - 176));
  *(void *)(v27 - sub_100071254(v27 - 176) = &a27;
  sub_100075CA4((void ***)(v27 - 176));
  _Unwind_Resume(a1);
}

void sub_1000650E0(uint64_t a1, int a2)
{
  int v3 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v3)
  {
    uint64_t v4 = v3;
    if (sub_10015A058(6))
    {
      if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
      {
        v5[0] = 67109120;
        v5[1] = a2;
        _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_INFO,  "fault_info_clear_cb: status[%d]",  (uint8_t *)v5,  8u);
      }
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

void sub_1000651BC(uint64_t a1, int a2)
{
  uint64_t v4 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v4)
  {
    uint64_t v5 = v4;
    if (sub_10015A058(6) && os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      LODWORD(buf.__r_.__value_.__l.__data_) = 67109120;
      HIDWORD(buf.__r_.__value_.__r.__words[0]) = a2;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "fault_info_cb, status[%d]", (uint8_t *)&buf, 8u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  if (DWORD1(xmmword_1002C98A8))
  {
    unint64_t v6 = *((void *)&xmmword_1002C98A8 + 1);
    if (*((void *)&xmmword_1002C98A8 + 1) < 0xE3C7A73401uLL)
    {
      StringWithDate = 0LL;
      uint64_t v7 = 0LL;
    }

    else
    {
      uint64_t v7 = CFDateCreate( kCFAllocatorDefault,  (double)((*((void *)&xmmword_1002C98A8 + 1) - 978307200000LL) / 0x3E8uLL));
      StringWithDate = CFDateFormatterCreateStringWithDate(kCFAllocatorDefault, *(CFDateFormatterRef *)(a1 + 72736), v7);
    }

    uint64_t v10 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v10)
    {
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }

    if ((_DWORD)xmmword_1002C98A8 == -559038737) {
      qword_1002C98B8 = (uint64_t)vdup_n_s32(0xDEADBEEF);
    }
    v22[0] = xmmword_1002C98A8;
    v22[1] = *(_OWORD *)&qword_1002C98B8;
    sub_1000E72B4(v22);
    if (v7) {
      CFRelease(v7);
    }
    if (StringWithDate) {
      CFRelease(StringWithDate);
    }
    sub_1000A5B1C(a1 + 74104, &buf);
    uint64_t v11 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v11)
    {
      if (sub_10015A058(6) && os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
      {
        p_std::string buf = &buf;
        if ((buf.__r_.__value_.__s.__size_ & 0x80u) != 0) {
          p_std::string buf = (std::string *)buf.__r_.__value_.__r.__words[0];
        }
        *(_DWORD *)int v23 = 136315138;
        int v24 = p_buf;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "NCP Crashed: Vendor_version = %s", v23, 0xCu);
      }
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }

    uint64_t size = buf.__r_.__value_.__s.__size_;
    if ((buf.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      int v14 = &buf;
    }
    else {
      int v14 = (std::string *)buf.__r_.__value_.__r.__words[0];
    }
    if ((buf.__r_.__value_.__s.__size_ & 0x80u) != 0) {
      uint64_t size = buf.__r_.__value_.__l.__size_;
    }
    if (size >= 5)
    {
      unint64_t v15 = (char *)v14 + size;
      uint64_t v16 = v14;
      do
      {
        BOOL v17 = (char *)memchr(v16, 68, size - 4);
        if (!v17) {
          break;
        }
        if (*(_DWORD *)v17 == 1430406468 && v17[4] == 71)
        {
          if (v17 != v15 && v17 - (char *)v14 != -1)
          {
            std::string::basic_string(&v21, &buf);
            v20[0] = xmmword_1002C98A8;
            v20[1] = *(_OWORD *)&qword_1002C98B8;
            sub_100065674(a1, (const void **)&v21.__r_.__value_.__l.__data_, (uint64_t)v20);
          }

          break;
        }

        uint64_t v16 = (std::string *)(v17 + 1);
        uint64_t size = v15 - (char *)v16;
      }

      while (v15 - (char *)v16 >= 5);
    }

    _OWORD v19[2] = 0LL;
    v19[3] = a1;
    v19[0] = (uint64_t)off_1002AEE28 + 1;
    v19[1] = (uint64_t)sub_1000650E0;
    sub_100058138(a1, v19);
    sub_1000075F0(v19);
  }

  else
  {
    uint64_t v9 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v9)
    {
      if (sub_10015A058(6) && os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
      {
        LOWORD(buf.__r_.__value_.__l.__data_) = 0;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "fault Info: NONE", (uint8_t *)&buf, 2u);
      }
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }
  }

void sub_100065624( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20, __int16 a21, char a22, char a23)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100065674(uint64_t a1, const void **a2, uint64_t a3)
{
  unsigned int v6 = *(_DWORD *)(a3 + 4) - 1;
  if (v6 >= 3) {
    uint64_t v7 = "unknown_dump_";
  }
  else {
    uint64_t v7 = off_1002B0698[v6];
  }
  std::string::assign(&__str, v7);
  sub_100066088((const void **)&__str.__r_.__value_.__l.__data_, a2, (uint64_t)&__p);
  sub_100014D08((uint64_t)&__str, (__int128 *)&__p);
  uint64_t v8 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v8)
  {
    if (sub_10015A058(6) && os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      p_str = &__str;
      if ((__str.__r_.__value_.__s.__size_ & 0x80u) != 0) {
        p_str = (std::string *)__str.__r_.__value_.__r.__words[0];
      }
      LODWORD(__p.__r_.__value_.__l.__data_) = 136315138;
      *(std::string::size_type *)((char *)__p.__r_.__value_.__r.__words + 4) = (std::string::size_type)p_str;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_INFO,  "collect_ncp_crash_dump: file_prefix[%s]",  (uint8_t *)&__p,  0xCu);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  std::string::basic_string(&v24, &__str);
  int v10 = sub_100080F10(__s, 250LL, (uint64_t *)&v24);
  int v11 = v10;
  if ((char)v24.__r_.__value_.__s.__size_ < 0)
  {
    operator delete(v24.__r_.__value_.__l.__data_);
    if (!v11) {
      goto LABEL_27;
    }
  }

  else if (!v10)
  {
    goto LABEL_27;
  }

  sub_10000AC00(&__p, __s);
  LODWORD(v22) = 7;
  if (sub_100007684(a1 + 72792, (unsigned int *)&v22))
  {
    uint64_t v12 = 483328LL;
    do
    {
      int v13 = operator new(0x90uLL);
      std::string::basic_string(&v18, &__p);
      sub_100066158((uint64_t)sub_100065BBC, &v18, v12, (uint64_t)v19);
      sub_10007674C(v21, v19);
      sub_1000A8E80(v13, a1, v21, v12, 1024LL, v14);
      sub_10004D2B4(&v22, (uint64_t)v13);
      sub_10004E9A4(a1, &v22);
      sub_10000F9EC(&v23);
      sub_100006E7C(v21);
      if (v20 < 0) {
        operator delete((void *)v19[1]);
      }
      uint64_t v12 = (v12 + 1024);
    }

    while ((_DWORD)v12 != 495616);
  }

  else
  {
    uint64_t v16 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v16)
    {
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }
  }

  __int128 v15 = *(_OWORD *)(a3 + 16);
  v17[0] = *(_OWORD *)a3;
  v17[1] = v15;
  sub_1000E9EF4((uint64_t)v17, (uint64_t)__s);
LABEL_27:
}

void sub_1000659B8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20, uint64_t a21, int a22, __int16 a23, char a24, char a25, uint64_t a26, char a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, int a35, __int16 a36, char a37, char a38, void *a39, uint64_t a40, int a41, __int16 a42, char a43, char a44, void *__p, uint64_t a46, int a47, __int16 a48, char a49, char a50)
{
}

void *sub_100065AA4(uint64_t a1)
{
  std::runtime_error v2 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v2)
  {
    int v3 = v2;
    if (sub_10015A058(6) && os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "collect_ncp_fault_info: ", buf, 2u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  void v6[2] = 0LL;
  void v6[3] = a1;
  v6[0] = (uint64_t)off_1002B0590 + 1;
  v6[1] = (uint64_t)sub_1000651BC;
  v5[0] = (uint64_t)off_1002B02C8 + 1;
  v5[1] = (uint64_t)sub_10009B0B0;
  sub_100057040(a1, v6, 15498LL, v5);
  sub_10004BED0(v5);
  return sub_100006E7C(v6);
}

void sub_100065BA0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
}

void sub_100065BBC(uint64_t a1, uint64_t *a2, const char *a3, int a4)
{
  uint64_t v7 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v7)
  {
    uint64_t v8 = v7;
    if (sub_10015A058(6) && os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      LOWORD(buf) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_INFO,  "<------------- PEEKING ------------->!",  (uint8_t *)&buf,  2u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  uint64_t v9 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v9)
  {
    if (sub_10015A058(6) && os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      LODWORD(buf) = 67109120;
      DWORD1(buf) = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "Reading HW Address [0x%X]", (uint8_t *)&buf, 8u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  int v10 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v10)
  {
    if (sub_10015A058(6) && os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      int v11 = a3;
      if (a3[23] < 0) {
        int v11 = *(const char **)a3;
      }
      LODWORD(buf) = 136315138;
      *(void *)((char *)&buf + 4) = v11;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "Writing into file [%s]", (uint8_t *)&buf, 0xCu);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  uint64_t v12 = sub_10000BD6C(a2);
  {
    sub_10000BEB8((uint64_t)a2, &buf);
    int v13 = 0;
    if ((void)buf == *((void *)&buf + 1)) {
      __n128 v14 = 0LL;
    }
    else {
      __n128 v14 = (char *)buf;
    }
    do
    {
      __int128 v15 = a3;
      if (a3[23] < 0) {
        __int128 v15 = *(const char **)a3;
      }
      int v16 = sub_1000812AC(v15, v14, 0xFFu);
      BOOL v17 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v17)
      {
        if (sub_10015A058(6) && os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)std::string v21 = 67109376;
          *(_DWORD *)&uint64_t v21[4] = v16;
          *(_WORD *)&v21[8] = 1024;
          *(_DWORD *)&v21[10] = v13;
          _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_INFO,  "Chars written: %u, write_count[%u]",  v21,  0xEu);
        }
      }

      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)std::string v21 = 136315394;
        *(void *)&uint64_t v21[4] = "com.apple.wpantund.ncp";
        *(_WORD *)&v21[12] = 2080;
        uint64_t v22 = "default";
        _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "Logging Module is not defined for SubSystem: %s, Category: %s",  v21,  0x16u);
      }

      v14 += 255;
      ++v13;
    }

    while (v13 != 4);
    if (a3[23] < 0) {
      a3 = *(const char **)a3;
    }
    int v19 = sub_1000812AC(a3, v14, 4u);
    char v20 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v20)
    {
      if (sub_10015A058(6))
      {
        if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)std::string v21 = 67109376;
          *(_DWORD *)&uint64_t v21[4] = v19;
          *(_WORD *)&v21[8] = 1024;
          *(_DWORD *)&v21[10] = 4;
          _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_INFO,  "Chars written: %u, write_count[%u]",  v21,  0xEu);
        }
      }
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }

    *(void *)std::string v21 = &buf;
    sub_100006F6C((void ***)v21);
  }

  else
  {
    std::string v18 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v18)
    {
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }
  }

void sub_100066058( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void **a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  a13 = (void **)&a17;
  sub_100006F6C(&a13);
  _Unwind_Resume(a1);
}

uint64_t sub_100066088@<X0>(const void **a1@<X0>, const void **a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = a3;
  else {
    size_t v6 = (size_t)a1[1];
  }
  else {
    size_t v7 = (size_t)a2[1];
  }
  if (__CFADD__(v6, v7))
  {
    __break(0x5500u);
  }

  else
  {
    uint64_t result = sub_1000765F0(a3, v6 + v7);
    else {
      uint64_t v8 = *(char **)result;
    }
    if (v6)
    {
      else {
        uint64_t v9 = *a1;
      }
      uint64_t result = (uint64_t)memmove(v8, v9, v6);
    }

    if (v7)
    {
      else {
        int v10 = *a2;
      }
      uint64_t result = (uint64_t)memmove(&v8[v6], v10, v7);
    }

    v8[v6 + v7] = 0;
  }

  return result;
}

void sub_100066158(uint64_t a1@<X0>, const std::string *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  *(void *)a4 = a1;
  std::string::basic_string((std::string *)(a4 + 8), &__str);
  *(_DWORD *)(a4 + 32) = v9;
}

void sub_1000661DC( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20, char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_100066210( uint64_t *a1, uint64_t a2, _WORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v9 = a1 + 9094;
  if ((int)a2 <= 89)
  {
    switch((int)a2)
    {
      case 0:
        *(_DWORD *)v352 = 0;
        spinel_datatype_unpack(a3, a4, "i", a4, a5, a6, a7, a8, (uint64_t)v352);
        __int128 v15 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v15)
        {
          if (sub_10015A058(6) && os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
          {
            LODWORD(__p[0].__sig) = 136315394;
            *(uint64_t *)((char *)&__p[0].__sig + 4) = (uint64_t)spinel_status_to_cstr(*(int *)v352);
            *(_WORD *)&__p[0].__opaque[4] = 1024;
            *(_DWORD *)&__p[0].__opaque[6] = *(_DWORD *)v352;
            _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_INFO,  "[-NCP-]: Last status (%s, %d)",  (uint8_t *)__p,  0x12u);
          }
        }

        else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
          sub_1001FB53C();
        }

        if ((*(_DWORD *)v352 - 129) >= 0xFFFFFFEF)
        {
          char v131 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (v131)
          {
            if (sub_10015A058(5) && os_log_type_enabled(v131, OS_LOG_TYPE_INFO))
            {
              unsigned int v138 = spinel_status_to_cstr(*(int *)v352);
              LODWORD(__p[0].__sig) = 136315394;
              *(uint64_t *)((char *)&__p[0].__sig + 4) = (uint64_t)v138;
              *(_WORD *)&__p[0].__opaque[4] = 1024;
              *(_DWORD *)&__p[0].__opaque[6] = *(_DWORD *)v352;
              _os_log_impl( (void *)&_mh_execute_header,  v131,  OS_LOG_TYPE_INFO,  "[-NCP-]: NCP was reset (%s, %d)",  (uint8_t *)__p,  0x12u);
            }
          }

          else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
          {
            sub_1001FB53C();
          }

          sub_10015A014((uint64_t)(a1 + 4), 2885615616LL, v132, v133, v134, v135, v136, v137, *(unsigned int *)v352);
          if (!*((_BYTE *)v9 + 1152) && *((_DWORD *)v9 + 232) == 2)
          {
            if ((*(_DWORD *)v352 - 115) < 4 || *(_DWORD *)v352 == 120)
            {
              (*(void (**)(uint64_t *, uint64_t))(*a1 + 128))(a1, 22LL);
              sub_100065AA4((uint64_t)a1);
            }

            else
            {
              (*(void (**)(uint64_t *, uint64_t))(*a1 + 128))(a1, 27LL);
            }
          }

          if (*((_DWORD *)v9 + 232) == 2) {
            (*(void (**)(uint64_t *))(*a1 + 120))(a1);
          }
          *((_BYTE *)a1 + 80) = 1;
          sub_10000AC00(__p, "NCP:Reset");
          uint64_t v180 = operator new(0x10uLL);
          *(void *)uint64_t v180 = &off_1002AE1C8;
          v180[2] = *(_DWORD *)v352;
          buf.__r_.__value_.__r.__words[0] = (std::string::size_type)v180;
          (*(void (**)(uint64_t *, pthread_mutex_t *, std::string *))(*a1 + 360))(a1, __p, &buf);
          if (buf.__r_.__value_.__r.__words[0]) {
            (*(void (**)(std::string::size_type))(*(void *)buf.__r_.__value_.__l.__data_ + 8LL))(buf.__r_.__value_.__r.__words[0]);
          }
          if (__p[0].__opaque[15] < 0) {
            operator delete((void *)__p[0].__sig);
          }
          *((_BYTE *)v9 + 1152) = 0;
          return;
        }

        if ((*(_DWORD *)v352 - 104) <= 8)
        {
          if (*(_DWORD *)v352 == 109) {
            uint64_t v129 = 5LL;
          }
          else {
            uint64_t v129 = 7LL;
          }
          sub_1000DA700((uint64_t)a1, v129);
          sub_10000AC00(__p, "CommissioningIsInProgress");
          unsigned int v130 = operator new(0x10uLL);
          *(void *)unsigned int v130 = &off_1002AEA00;
          v130[8] = 0;
          buf.__r_.__value_.__r.__words[0] = (std::string::size_type)v130;
          (*(void (**)(uint64_t *, pthread_mutex_t *, std::string *))(*a1 + 360))(a1, __p, &buf);
          goto LABEL_474;
        }

        if (*(int *)v352 <= 15392)
        {
          if (*(_DWORD *)v352 == 3)
          {
            sub_10000AC00(v343, "Stability");
            sub_10000AC00(v341, "Invalid State");
            sub_10000AC00(v339, "NCP Status Invalid Argument");
            (*(void (**)(uint64_t *, void *, void **, void **, void, uint64_t))(*a1 + 72))( a1,  v343,  v341,  v339,  0LL,  1LL);
            if (v340 < 0) {
              operator delete(v339[0]);
            }
            if (v342 < 0) {
              operator delete(v341[0]);
            }
            if (v344 < 0)
            {
              uint64_t v182 = (void *)v343[0];
              goto LABEL_555;
            }

            goto LABEL_609;
          }

          if (*(_DWORD *)v352 != 5)
          {
            if (*(_DWORD *)v352 != 15392) {
              goto LABEL_609;
            }
            uint64_t v26 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
            if (v26)
            {
              if (sub_10015A058(5) && os_log_type_enabled(v26, OS_LOG_TYPE_INFO))
              {
                LOWORD(__p[0].__sig) = 0;
                uint64_t v27 = (std::string *)__p;
                goto LABEL_57;
              }

              goto LABEL_596;
            }

            if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
              goto LABEL_596;
            }
            goto LABEL_595;
          }

          int v13 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (v13)
          {
            if (sub_10015A058(5) && os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
            {
              LOWORD(__p[0].__sig) = 0;
              __n128 v14 = "[-NCP-]: COMMAND NOT RECOGNIZED";
              goto LABEL_308;
            }

            goto LABEL_609;
          }

          if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
            goto LABEL_609;
          }
          goto LABEL_639;
        }

        if (*(int *)v352 > 2000000)
        {
          if (*(_DWORD *)v352 == 2000001)
          {
            int v13 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
            if (v13)
            {
              if (sub_10015A058(5) && os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
              {
                LOWORD(__p[0].__sig) = 0;
                __n128 v14 = "[-NCP-]: IPV6 message allocation failure, IPV6_MSG_ALLOC_FAILURE";
                goto LABEL_308;
              }

              goto LABEL_609;
            }

            if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
              goto LABEL_609;
            }
          }

          else
          {
            if (*(_DWORD *)v352 != 2000002) {
              goto LABEL_609;
            }
            int v13 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
            if (v13)
            {
              if (sub_10015A058(5) && os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
              {
                LOWORD(__p[0].__sig) = 0;
                __n128 v14 = "[-NCP-]: Log dropped, LOG_DROPPED";
                goto LABEL_308;
              }

              goto LABEL_609;
            }

            if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
              goto LABEL_609;
            }
          }

          goto LABEL_639;
        }

        if (*(_DWORD *)v352 != 15393)
        {
          if (*(_DWORD *)v352 == 2000000)
          {
            unsigned int v150 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
            if (v150)
            {
              if (sub_10015A058(5) && os_log_type_enabled(v150, OS_LOG_TYPE_INFO))
              {
                LOWORD(__p[0].__sig) = 0;
                _os_log_impl( (void *)&_mh_execute_header,  v150,  OS_LOG_TYPE_INFO,  "[-NCP-]: TX Request Timed out, TRANSMIT_NOT_GRANTED",  (uint8_t *)__p,  2u);
              }
            }

            else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
            {
              sub_1001FB53C();
            }

            if (sub_10006C850((uint64_t)a1))
            {
              sub_10000AC00(v349, "Performance");
              sub_10000AC00(v347, "Data Stall");
              sub_10000AC00(v345, "Continual denial from Wifi. Transmit not granted");
              (*(void (**)(uint64_t *, void *, void **, void **, void, void))(*a1 + 72))( a1,  v349,  v347,  v345,  0LL,  0LL);
              if (v346 < 0) {
                operator delete(v345[0]);
              }
              if (v348 < 0) {
                operator delete(v347[0]);
              }
              if (v350 < 0)
              {
                uint64_t v182 = (void *)v349[0];
                goto LABEL_555;
              }
            }
          }

          goto LABEL_609;
        }

        unint64_t v147 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v147)
        {
          if (sub_10015A058(5) && os_log_type_enabled(v147, OS_LOG_TYPE_INFO))
          {
            LOWORD(__p[0].__sig) = 0;
            char v148 = (std::string *)__p;
            goto LABEL_384;
          }

          goto LABEL_599;
        }

        if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          goto LABEL_599;
        }
        goto LABEL_598;
      case 1:
        LODWORD(__p[0].__sig) = 0;
        LODWORD(buf.__r_.__value_.__l.__data_) = 0;
        spinel_datatype_unpack(a3, a4, "ii", a4, a5, a6, a7, a8, (uint64_t)__p);
        if (LODWORD(__p[0].__sig) != 4)
        {
          uint64_t v97 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (v97)
          {
          }

          else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
          {
            sub_1001FB53C();
          }

          sub_10000AC00(v313, "Stability");
          sub_10000AC00(v311, "Invalid State");
          sub_10000AC00(v309, "NCP is using unsupported protocol version");
          (*(void (**)(uint64_t *, void **, void **, void **, void, void))(*a1 + 72))( a1,  v313,  v311,  v309,  0LL,  0LL);
          if (v310 < 0) {
            operator delete(v309[0]);
          }
          if (v312 < 0) {
            operator delete(v311[0]);
          }
          if (v314 < 0) {
            operator delete(v313[0]);
          }
          sub_1000DA700((uint64_t)a1, 1LL);
        }

        if (LODWORD(buf.__r_.__value_.__l.__data_) != 3)
        {
          char v179 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (v179)
          {
          }

          else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
          {
            sub_1001FB53C();
          }
        }

        goto LABEL_609;
      case 2:
        buf.__r_.__value_.__r.__words[0] = 0LL;
        if ((int)spinel_datatype_unpack(a3, a4, "U", a4, a5, a6, a7, a8, (uint64_t)&buf) < 1
          || !buf.__r_.__value_.__r.__words[0])
        {
          unsigned int v120 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (v120)
          {
          }

          else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
          {
            sub_1001FB53C();
          }

          sub_10000AC00(v331, "Stability");
          sub_10000AC00(v329, "Invalid State");
          sub_10000AC00(v327, "Corrupted NCP version");
          (*(void (**)(uint64_t *, void **, void **, void **, void, void))(*a1 + 72))( a1,  v331,  v329,  v327,  0LL,  0LL);
          if (v328 < 0) {
            operator delete(v327[0]);
          }
          if (v330 < 0) {
            operator delete(v329[0]);
          }
          if (v332 < 0) {
            operator delete(v331[0]);
          }
          sub_1000DA700((uint64_t)a1, 1LL);
          goto LABEL_609;
        }

        sub_10000AC00(__p, buf.__r_.__value_.__l.__data_);
        sub_1000D5264((uint64_t)a1, (std::string *)__p);
        if ((__p[0].__opaque[15] & 0x80000000) == 0) {
          goto LABEL_609;
        }
        goto LABEL_554;
      case 3:
        LODWORD(__p[0].__sig) = 0;
        spinel_datatype_unpack(a3, a4, "i", a4, a5, a6, a7, a8, (uint64_t)__p);
        if (LODWORD(__p[0].__sig) != 3)
        {
          char v96 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (v96)
          {
          }

          else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
          {
            sub_1001FB53C();
          }

          sub_10000AC00(v319, "Stability");
          sub_10000AC00(v317, "Invalid State");
          sub_10000AC00(v315, "NCP is using unsupported protocol type");
          (*(void (**)(uint64_t *, void **, void **, void **, void, void))(*a1 + 72))( a1,  v319,  v317,  v315,  0LL,  0LL);
          if (v316 < 0) {
            operator delete(v315[0]);
          }
          if (v318 < 0) {
            operator delete(v317[0]);
          }
          if (v320 < 0) {
            operator delete(v319[0]);
          }
          sub_1000DA700((uint64_t)a1, 1LL);
        }

        goto LABEL_609;
      case 4:
      case 6:
      case 7:
      case 9:
      case 10:
      case 11:
        goto LABEL_238;
      case 5:
        *(void *)&__p[0].__opaque[8] = 0LL;
        *(void *)__p[0].__opaque = 0LL;
        __p[0].__uint64_t sig = (uint64_t)__p[0].__opaque;
        if (!(_DWORD)a4) {
          goto LABEL_579;
        }
        uint64_t v91 = a3;
        uint64_t v92 = a4;
        while (1)
        {
          *(_DWORD *)v352 = 0;
          int v93 = spinel_datatype_unpack(v91, v92, "i", a4, a5, a6, a7, a8, (uint64_t)v352);
          if (v93 <= 0) {
            break;
          }
          sub_100076CD4((uint64_t **)__p, (unsigned int *)v352, v352);
          uint64_t v94 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (v94)
          {
            if (sub_10015A058(6) && os_log_type_enabled(v94, OS_LOG_TYPE_INFO))
            {
              unsigned int v95 = spinel_capability_to_cstr(*(int *)v352);
              LODWORD(buf.__r_.__value_.__l.__data_) = 136315394;
              *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v95;
              WORD2(buf.__r_.__value_.__r.__words[1]) = 1024;
              *(_DWORD *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = *(_DWORD *)v352;
              _os_log_impl( (void *)&_mh_execute_header,  v94,  OS_LOG_TYPE_INFO,  "[-NCP-]: Capability (%s, %d)",  (uint8_t *)&buf,  0x12u);
            }
          }

          else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
          {
            LODWORD(buf.__r_.__value_.__l.__data_) = 136315394;
            *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)"com.apple.wpantund.ncp";
            WORD2(buf.__r_.__value_.__r.__words[1]) = 2080;
            *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)"default";
            _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "Logging Module is not defined for SubSystem: %s, Category: %s",  (uint8_t *)&buf,  0x16u);
          }

          BOOL v46 = v92 >= v93;
          uint64_t v92 = (v92 - v93);
          if (!v46)
          {
LABEL_992:
            __break(0x5515u);
            goto LABEL_993;
          }

          uint64_t v91 = (_WORD *)((char *)v91 + v93);
          if (!(_DWORD)v92) {
            goto LABEL_579;
          }
        }

        char v143 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v143)
        {
        }

        else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
          sub_1001FB53C();
        }

LABEL_215:
            uint64_t sig = __p[0].__sig;
            if (__p[0].__sig) {
              goto LABEL_216;
            }
            goto LABEL_609;
          default:
            goto LABEL_238;
        }

        goto LABEL_576;
    }
  }

  if ((int)a2 <= 160)
  {
    switch((int)a2)
    {
      case 'Z':
        sub_100063D50((uint64_t)a1, a3, a4);
        goto LABEL_609;
      case '[':
        sub_100064204((uint64_t)a1, a3, a4);
        goto LABEL_609;
      case '\\':
        int v83 = a4 != 0;
        *(_WORD *)v352 = 0;
        if (*(unsigned __int8 *)(sub_1000D5144((uint64_t)a1) + 35) != v83)
        {
          *((_BYTE *)a1 + 1499) = v83;
          sub_10000AC00(__p, "com.nestlabs.internal:Network:AllowingJoin");
          int v84 = operator new(0x10uLL);
          *(void *)int v84 = &off_1002AEA00;
          v84[8] = v83;
          buf.__r_.__value_.__r.__words[0] = (std::string::size_type)v84;
          (*(void (**)(uint64_t *, pthread_mutex_t *, std::string *))(*a1 + 360))(a1, __p, &buf);
          if (buf.__r_.__value_.__r.__words[0]) {
            (*(void (**)(std::string::size_type))(*(void *)buf.__r_.__value_.__l.__data_ + 8LL))(buf.__r_.__value_.__r.__words[0]);
          }
          if (__p[0].__opaque[15] < 0) {
            operator delete((void *)__p[0].__sig);
          }
        }

        unsigned int v85 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        int v13 = v85;
        if ((_DWORD)a4)
        {
          if (v85)
          {
            if (sub_10015A058(5) && os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
            {
              LOWORD(__p[0].__sig) = 0;
              _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_INFO,  "Network is joinable",  (uint8_t *)__p,  2u);
            }
          }

          else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
          {
            sub_1001FB53C();
          }

          unint64_t v153 = a3;
          uint64_t v154 = a4;
          while (1)
          {
            int v155 = spinel_datatype_unpack(v153, v154, "S", a4, a5, a6, a7, a8, (uint64_t)v352);
            if (v155 < 1) {
              goto LABEL_609;
            }
            uint64_t v156 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
            if (v156)
            {
              if (sub_10015A058(5) && os_log_type_enabled(v156, OS_LOG_TYPE_INFO))
              {
                LODWORD(__p[0].__sig) = 67109120;
                HIDWORD(__p[0].__sig) = *(unsigned __int16 *)v352;
                _os_log_impl( (void *)&_mh_execute_header,  v156,  OS_LOG_TYPE_INFO,  "Assisting on port %d",  (uint8_t *)__p,  8u);
              }
            }

            else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
            {
              LODWORD(__p[0].__sig) = 136315394;
              *(uint64_t *)((char *)&__p[0].__sig + 4) = (uint64_t)"com.apple.wpantund.ncp";
              *(_WORD *)&__p[0].__opaque[4] = 2080;
              *(void *)&__p[0].__opaque[6] = "default";
              _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "Logging Module is not defined for SubSystem: %s, Category: %s",  (uint8_t *)__p,  0x16u);
            }

            BOOL v46 = v154 >= v155;
            uint64_t v154 = (v154 - v155);
            if (!v46) {
              goto LABEL_992;
            }
            unint64_t v153 = (_WORD *)((char *)v153 + v155);
            if (!(_DWORD)v154) {
              goto LABEL_609;
            }
          }
        }

        if (v85)
        {
          if (sub_10015A058(5) && os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
          {
            LOWORD(__p[0].__sig) = 0;
            __n128 v14 = "Network is not joinable";
            goto LABEL_308;
          }

          goto LABEL_609;
        }

        if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          goto LABEL_609;
        }
        goto LABEL_639;
      case ']':
      case '_':
      case 'd':
      case 'e':
      case 'g':
      case 'h':
      case 'i':
      case 'j':
      case 'k':
      case 'l':
      case 'm':
      case 'n':
      case 'o':
      case 'r':
      case 's':
        goto LABEL_238;
      case '^':
        v352[0] = *((_BYTE *)a1 + 72756);
        BOOL v86 = (int)spinel_datatype_unpack(a3, a4, "C", a4, a5, a6, a7, a8, (uint64_t)v352) > 0;
        int v87 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        unint64_t v88 = v87;
        if (!v86)
        {
          if (v87)
          {
          }

          else
          {
            if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
              goto LABEL_609;
            }
LABEL_576:
            sub_1001FB53C();
          }

          goto LABEL_609;
        }

        if (v87)
        {
          if (sub_10015A058(6) && os_log_type_enabled(v88, OS_LOG_TYPE_INFO))
          {
            sub_10005428C(v352[0], __p);
            char v89 = __p[0].__opaque[15] >= 0 ? __p : (pthread_mutex_t *)__p[0].__sig;
            LODWORD(buf.__r_.__value_.__l.__data_) = 136315394;
            *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v89;
            WORD2(buf.__r_.__value_.__r.__words[1]) = 1024;
            *(_DWORD *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v352[0];
            _os_log_impl( (void *)&_mh_execute_header,  v88,  OS_LOG_TYPE_INFO,  "[-NCP-]: Thread Mode %s (0x%02x)",  (uint8_t *)&buf,  0x12u);
            if (__p[0].__opaque[15] < 0) {
              operator delete((void *)__p[0].__sig);
            }
          }
        }

        else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
          sub_1001FB53C();
        }

        *((_BYTE *)v9 + 4) = v352[0];
        int v151 = sub_1000D8DE8((uint64_t)a1);
        if (v151 == 6)
        {
          if (*((_BYTE *)v9 + 5) && (*((_BYTE *)v9 + 4) & 8) == 0)
          {
            uint64_t v152 = 9LL;
            goto LABEL_467;
          }
        }

        else if (v151 == 9 && (*((_BYTE *)v9 + 4) & 8) != 0)
        {
          uint64_t v152 = 6LL;
LABEL_467:
          sub_1000DA700((uint64_t)a1, v152);
        }

        if ((a1[190] & 0xFFFFFFFE) == 2)
        {
          if ((*((_BYTE *)v9 + 4) & 8) != 0) {
            sub_1000578D0((unsigned int *)a1, 2u);
          }
          else {
            sub_1000578D0((unsigned int *)a1, 3u);
          }
        }

        goto LABEL_609;
        *(void *)v352 = 0LL;
        spinel_datatype_unpack(a3, a4, "6", a4, a5, a6, a7, a8, (uint64_t)v352);
        if (*(void *)v352)
        {
          __int128 v64 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (v64)
          {
            if (sub_10015A058(6) && os_log_type_enabled(v64, OS_LOG_TYPE_INFO))
            {
              sub_100108154(*(void **)v352, __p);
              __int16 v65 = __p[0].__opaque[15] >= 0 ? __p : (pthread_mutex_t *)__p[0].__sig;
              LODWORD(buf.__r_.__value_.__l.__data_) = 136315138;
              *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v65;
              _os_log_impl( (void *)&_mh_execute_header,  v64,  OS_LOG_TYPE_INFO,  "[-NCP-]: Link-local IPv6 address %s",  (uint8_t *)&buf,  0xCu);
              if (__p[0].__opaque[15] < 0) {
                operator delete((void *)__p[0].__sig);
              }
            }
          }

          else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
          {
            sub_1001FB53C();
          }
        }

        sub_100057B30((uint64_t)a1, *(void **)v352);
        goto LABEL_609;
      case 'a':
        *(void *)v352 = 0LL;
        spinel_datatype_unpack(a3, a4, "6", a4, a5, a6, a7, a8, (uint64_t)v352);
        if (*(void *)v352)
        {
          __int128 v58 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (v58)
          {
            if (sub_10015A058(6) && os_log_type_enabled(v58, OS_LOG_TYPE_INFO))
            {
              sub_100108154(*(void **)v352, __p);
              __int128 v59 = __p[0].__opaque[15] >= 0 ? __p : (pthread_mutex_t *)__p[0].__sig;
              LODWORD(buf.__r_.__value_.__l.__data_) = 136315138;
              *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v59;
              _os_log_impl( (void *)&_mh_execute_header,  v58,  OS_LOG_TYPE_INFO,  "[-NCP-]: Mesh-local IPv6 address %s",  (uint8_t *)&buf,  0xCu);
              if (__p[0].__opaque[15] < 0) {
                operator delete((void *)__p[0].__sig);
              }
            }
          }

          else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
          {
            sub_1001FB53C();
          }
        }

        sub_100057C64((uint64_t)a1, *(uint64_t *)v352);
        goto LABEL_609;
      case 'b':
        __src = 0LL;
        spinel_datatype_unpack(a3, a4, "6", a4, a5, a6, a7, a8, (uint64_t)&__src);
        if (__src)
        {
          __int128 v60 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (v60)
          {
            if (sub_10015A058(6) && os_log_type_enabled(v60, OS_LOG_TYPE_INFO))
            {
              sub_100108154(__src, &buf);
              __int16 v61 = std::string::append(&buf, "/64");
              __int128 v62 = *(_OWORD *)&v61->__r_.__value_.__l.__data_;
              *(void *)&__p[0].__opaque[8] = v61->__r_.__value_.__l.__cap_;
              *(_OWORD *)&__p[0].__uint64_t sig = v62;
              v61->__r_.__value_.__l.__size_ = 0LL;
              v61->__r_.__value_.__l.__cap_ = 0LL;
              v61->__r_.__value_.__r.__words[0] = 0LL;
              __int16 v63 = __p;
              if (__p[0].__opaque[15] < 0) {
                __int16 v63 = (pthread_mutex_t *)__p[0].__sig;
              }
              *(_DWORD *)v352 = 136315138;
              *(void *)&v352[4] = v63;
              _os_log_impl( (void *)&_mh_execute_header,  v60,  OS_LOG_TYPE_INFO,  "[-NCP-]: Mesh-local prefix %s",  v352,  0xCu);
              if (__p[0].__opaque[15] < 0) {
                operator delete((void *)__p[0].__sig);
              }
            }
          }

          else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
          {
            sub_1001FB53C();
          }
        }

        sub_100057E54((uint64_t)a1, (unsigned __int8 *)__src);
        goto LABEL_609;
      case 'c':
        __src = 0LL;
        sub_100077138(__p, a1 + 131);
        if ((_DWORD)a4)
        {
          int v71 = 0;
          int v72 = a3;
          uint64_t v73 = a4;
          do
          {
            memset(__n, 0, sizeof(__n));
            int v74 = spinel_datatype_unpack(v72, v73, "D.", v66, v67, v68, v69, v70, (uint64_t)&__n[4]);
            if (v74 <= 0) {
              goto LABEL_366;
            }
            __int128 v75 = *(void **)&__n[4];
            __int128 v76 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
            if (v76)
            {
              if (sub_10015A058(6) && os_log_type_enabled(v76, OS_LOG_TYPE_INFO))
              {
                sub_100108154(v75, &buf);
                p_std::string buf = &buf;
                if ((buf.__r_.__value_.__s.__size_ & 0x80u) != 0) {
                  p_std::string buf = (std::string *)buf.__r_.__value_.__r.__words[0];
                }
                *(_DWORD *)v352 = 67109378;
                *(_DWORD *)&v352[4] = v71;
                *(_WORD *)&v352[8] = 2080;
                *(void *)&v352[10] = p_buf;
                _os_log_impl( (void *)&_mh_execute_header,  v76,  OS_LOG_TYPE_INFO,  "[-NCP-]: IPv6 address [%d] %s",  v352,  0x12u);
              }
            }

            else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
            {
              LODWORD(buf.__r_.__value_.__l.__data_) = 136315394;
              *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)"com.apple.wpantund.ncp";
              WORD2(buf.__r_.__value_.__r.__words[1]) = 2080;
              *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)"default";
              _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "Logging Module is not defined for SubSystem: %s, Category: %s",  (uint8_t *)&buf,  0x16u);
            }

            int v78 = v71 + 1;
            if (__OFADD__(v71, 1)) {
              goto LABEL_993;
            }
            sub_100077574((uint64_t)__p, (unint64_t *)v75);
            sub_10006CB4C((uint64_t)a1, 99LL, *(uint64_t **)&__n[4], *(unsigned int *)__n, v79, v80, v81, v82);
            BOOL v46 = v73 >= v74;
            uint64_t v73 = (v73 - v74);
            if (!v46) {
              goto LABEL_992;
            }
            int v72 = (_WORD *)((char *)v72 + v74);
            ++v71;
          }

          while ((_DWORD)v73);
          int v71 = v78;
        }

        else
        {
          int v71 = 0;
        }

LABEL_366:
        unsigned int v144 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v144)
        {
          if (sub_10015A058(6) && os_log_type_enabled(v144, OS_LOG_TYPE_INFO))
          {
            uint64_t v145 = "";
            if (v71 > 1) {
              uint64_t v145 = "es";
            }
            LODWORD(buf.__r_.__value_.__l.__data_) = 67109378;
            HIDWORD(buf.__r_.__value_.__r.__words[0]) = v71;
            LOWORD(buf.__r_.__value_.__r.__words[1]) = 2080;
            *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)v145;
            _os_log_impl( (void *)&_mh_execute_header,  v144,  OS_LOG_TYPE_INFO,  "[-NCP-]: IPv6 address: Total %d address%s",  (uint8_t *)&buf,  0x12u);
          }
        }

        else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
          sub_1001FB53C();
        }

        uint64_t v146 = __p[0].__sig;
        __src = (void *)__p[0].__sig;
        while ((char *)v146 != __p[0].__opaque)
        {
          if (!*(_DWORD *)(v146 + 44)) {
            sub_1000EE5E4((uint64_t)a1, 0, (unint64_t *)(v146 + 28));
          }
          sub_10000B338((uint64_t)&__src);
          uint64_t v146 = (uint64_t)__src;
        }

        sub_10000D0D4((uint64_t)__p);
        goto LABEL_609;
      case 'f':
        __src = 0LL;
        sub_1000776A4(__p, a1 + 134);
        if (!(_DWORD)a4) {
          goto LABEL_160;
        }
        int v35 = 0;
        __int16 v36 = a3;
        uint64_t v37 = a4;
        do
        {
          memset(__n, 0, sizeof(__n));
          int v38 = spinel_datatype_unpack(v36, v37, "D.", v30, v31, v32, v33, v34, (uint64_t)&__n[4]);
          if (v38 <= 0) {
            break;
          }
          __int16 v39 = *(void **)&__n[4];
          int v40 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (v40)
          {
            if (sub_10015A058(6) && os_log_type_enabled(v40, OS_LOG_TYPE_INFO))
            {
              sub_100108154(v39, &buf);
              char v41 = &buf;
              if ((buf.__r_.__value_.__s.__size_ & 0x80u) != 0) {
                char v41 = (std::string *)buf.__r_.__value_.__r.__words[0];
              }
              *(_DWORD *)v352 = 67109378;
              *(_DWORD *)&v352[4] = v35;
              *(_WORD *)&v352[8] = 2080;
              *(void *)&v352[10] = v41;
              _os_log_impl( (void *)&_mh_execute_header,  v40,  OS_LOG_TYPE_INFO,  "[-NCP-]: Multicast IPv6 address [%d] %s",  v352,  0x12u);
            }
          }

          else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
          {
            LODWORD(buf.__r_.__value_.__l.__data_) = 136315394;
            *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)"com.apple.wpantund.ncp";
            WORD2(buf.__r_.__value_.__r.__words[1]) = 2080;
            *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)"default";
            _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "Logging Module is not defined for SubSystem: %s, Category: %s",  (uint8_t *)&buf,  0x16u);
          }

          if (__OFADD__(v35, 1)) {
            goto LABEL_993;
          }
          sub_100077574((uint64_t)__p, (unint64_t *)v39);
          sub_10006CB4C((uint64_t)a1, 102LL, *(uint64_t **)&__n[4], *(unsigned int *)__n, v42, v43, v44, v45);
          BOOL v46 = v37 >= v38;
          uint64_t v37 = (v37 - v38);
          if (!v46) {
            goto LABEL_992;
          }
          __int16 v36 = (_WORD *)((char *)v36 + v38);
          ++v35;
        }

        while ((_DWORD)v37);
LABEL_160:
        uint64_t v90 = __p[0].__sig;
        for (__src = (void *)__p[0].__sig; __src != __p[0].__opaque; uint64_t v90 = (uint64_t)__src)
        {
          if (!*(_DWORD *)(v90 + 44))
          {
            v306[0] = (uint64_t)off_1002AED78 + 1;
            sub_1000EF25C(a1, 0, (__n128 *)(v90 + 28), v306);
            sub_1000075F0(v306);
          }

          sub_10000B338((uint64_t)&__src);
        }

        sub_10000D0D4((uint64_t)__p);
        goto LABEL_609;
      case 'p':
        sub_10004E00C((char *)a3, a4);
        goto LABEL_609;
      case 'q':
        if (!sub_1000B6320(a1 + 201)) {
          goto LABEL_609;
        }
        *(void *)v352 = 0LL;
        __src = 0LL;
        *(void *)__n = 0LL;
        sub_1000B5DC4((uint64_t)__p);
        __int16 v305 = 0;
        unsigned int v304 = 0;
        unsigned int v303 = 0;
        char v47 = sub_1000B5DD8(__p, 0LL);
        sub_1000B5E2C((uint64_t)v47, 230);
        if ((int)spinel_datatype_unpack(a3, a4, "dD", v48, v49, v50, v51, v52, (uint64_t)v352) > 0)
        {
          if ((int)spinel_datatype_unpack(__src, *(unsigned int *)__n, "ccSt()t(LL)", v53, v54, v55, v56, v57, 0LL) <= 0)
          {
            unint64_t v183 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
            if (v183)
            {
            }

            else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
            {
              sub_1001FB53C();
            }
          }

          buf.__r_.__value_.__r.__words[0] = v304;
          buf.__r_.__value_.__l.__size_ = v303;
          goto LABEL_992;
        }

        char v178 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v178)
        {
          goto LABEL_609;
        }

        if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          goto LABEL_609;
        }
        goto LABEL_639;
      case 't':
        sub_10004E244((CFDateFormatterRef *)a1, a3, a4, a4, a5, a6, a7, a8);
        goto LABEL_609;
      default:
        if ((_DWORD)a2 != 130) {
          goto LABEL_238;
        }
        *(void *)v352 = 0LL;
        uint64_t v140 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (!v140)
        {
          if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
            goto LABEL_67;
          }
          goto LABEL_574;
        }

        sub_100147B4C((uint64_t *)v352, (std::string *)__p);
        if (__p[0].__opaque[15] >= 0) {
          unint64_t v141 = __p;
        }
        else {
          unint64_t v141 = (pthread_mutex_t *)__p[0].__sig;
        }
        LODWORD(buf.__r_.__value_.__l.__data_) = 136315138;
        *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v141;
        char v142 = "[-NCP-]: Thread Commissioner state is %s";
        goto LABEL_345;
    }
  }

  if ((int)a2 <= 15487)
  {
    if ((int)a2 <= 5393)
    {
      switch((_DWORD)a2)
      {
        case 0xA1:
          goto LABEL_609;
        case 0xA2:
          sub_100064BF0(a1, a3, a4);
          goto LABEL_609;
        case 0x1201:
          v352[0] = 0;
          spinel_datatype_unpack(a3, a4, "b", a4, a5, a6, a7, a8, (uint64_t)v352);
          sub_10000AC00(__p, "JamDetection:Status");
          int v10 = operator new(0x10uLL);
          *(void *)int v10 = &off_1002AEA00;
          _BYTE v10[8] = v352[0];
          buf.__r_.__value_.__r.__words[0] = (std::string::size_type)v10;
          (*(void (**)(uint64_t *, pthread_mutex_t *, std::string *))(*a1 + 360))(a1, __p, &buf);
          if (buf.__r_.__value_.__r.__words[0]) {
            (*(void (**)(std::string::size_type))(*(void *)buf.__r_.__value_.__l.__data_ + 8LL))(buf.__r_.__value_.__r.__words[0]);
          }
          if (__p[0].__opaque[15] < 0) {
            operator delete((void *)__p[0].__sig);
          }
          BOOL v11 = v352[0] == 0;
          uint64_t v12 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          int v13 = v12;
          if (v11)
          {
            if (v12)
            {
              LOWORD(__p[0].__sig) = 0;
              __n128 v14 = "Signal jamming cleared";
LABEL_308:
              _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_INFO, v14, (uint8_t *)__p, 2u);
              goto LABEL_609;
            }

            if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
              goto LABEL_609;
            }
          }

          else
          {
            if (v12)
            {
              LOWORD(__p[0].__sig) = 0;
              __n128 v14 = "Signal jamming is detected";
              goto LABEL_308;
            }

            if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
              goto LABEL_609;
            }
          }

LABEL_639:
          sub_1001FB53C();
          goto LABEL_609;
      }

      goto LABEL_238;
    }

    switch((_DWORD)a2)
    {
      case 0x1512:
        *(void *)v352 = 0LL;
        *(_DWORD *)&__n[4] = 0;
        *(_WORD *)__n = 0;
        LOWORD(v304) = 0;
        memset(__p, 0, 24);
        if ((int)spinel_datatype_unpack(a3, a4, "DSS", a4, a5, a6, a7, a8, (uint64_t)v352) > 0)
        {
          sub_10006D498((uint64_t)__p, *(char **)v352, *(unsigned int *)&__n[4]);
          buf.__r_.__value_.__s.__data_[0] = __n[1];
          sub_10006D4CC(&__p[0].__sig, &buf);
          buf.__r_.__value_.__s.__data_[0] = __n[0];
          sub_10006D4CC(&__p[0].__sig, &buf);
          buf.__r_.__value_.__s.__data_[0] = BYTE1(v304);
          sub_10006D4CC(&__p[0].__sig, &buf);
          buf.__r_.__value_.__s.__data_[0] = v304;
          sub_10006D4CC(&__p[0].__sig, &buf);
          sub_10000AC00(&buf, "TmfProxy:Stream");
          sub_100033680(&__src, (uint64_t)__p);
          (*(void (**)(uint64_t *, std::string *, void **))(*a1 + 360))(a1, &buf, &__src);
          unsigned int v28 = __src;
          if (!__src)
          {
LABEL_70:
            break;
          }

LABEL_537:
    buf.__r_.__value_.__r.__words[0] = (std::string::size_type)__p;
    sub_100006F6C((void ***)&buf);
    goto LABEL_609;
  }

  switch((int)a2)
  {
    case 15498:
      int v16 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v16)
      {
        int v13 = v16;
        if (sub_10015A058(6) && os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
        {
          LOWORD(__p[0].__sig) = 0;
          __n128 v14 = "[-NCP-]: Vendor Fault Info";
          goto LABEL_308;
        }

        goto LABEL_609;
      }

      if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        goto LABEL_609;
      }
      goto LABEL_357;
    case 15499:
      int v113 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v113)
      {
        int v13 = v113;
        if (sub_10015A058(6) && os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
        {
          LOWORD(__p[0].__sig) = 0;
          __n128 v14 = "[-NCP-]: SPINEL_PROP_VENDOR_DEEP_SLEEP_FILTER_LIST";
          goto LABEL_308;
        }

        goto LABEL_609;
      }

      if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        goto LABEL_609;
      }
      goto LABEL_357;
    case 15500:
      v352[0] = 0;
      BOOL v110 = (int)spinel_datatype_unpack(a3, a4, "C", a4, a5, a6, a7, a8, (uint64_t)v352) > 0;
      unsigned int v111 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      char v112 = v111;
      if (v110)
      {
        if (v111)
        {
          if (sub_10015A058(6) && os_log_type_enabled(v112, OS_LOG_TYPE_INFO))
          {
            LODWORD(__p[0].__sig) = 67109120;
            HIDWORD(__p[0].__sig) = v352[0];
            _os_log_impl( (void *)&_mh_execute_header,  v112,  OS_LOG_TYPE_INFO,  "[-NCP-]: SPINEL_PROP_VENDOR_DEEP_SLEEP_LOG_LEVEL %d",  (uint8_t *)__p,  8u);
          }
        }

        else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
          sub_1001FB53C();
        }

        sub_10000AC00(__p, "vendor:deepsleep:loglevel");
        uint64_t v176 = operator new(0x10uLL);
        *(void *)uint64_t v176 = &off_1002AE118;
        v176[8] = v352[0];
        buf.__r_.__value_.__r.__words[0] = (std::string::size_type)v176;
        (*(void (**)(uint64_t *, pthread_mutex_t *, std::string *))(*a1 + 360))(a1, __p, &buf);
        goto LABEL_474;
      }

      if (v111)
      {
        goto LABEL_609;
      }

      if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        goto LABEL_609;
      }
      goto LABEL_576;
    case 15501:
      uint64_t v109 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v109)
      {
        int v13 = v109;
        if (sub_10015A058(6) && os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
        {
          LOWORD(__p[0].__sig) = 0;
          __n128 v14 = "[-NCP-]: SPINEL_PROP_VENDOR_DEEP_SLEEP_REGION_LOG_LEVELS";
          goto LABEL_308;
        }

        goto LABEL_609;
      }

      if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        goto LABEL_609;
      }
      goto LABEL_357;
    case 15502:
      uint64_t v114 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v114)
      {
        int v13 = v114;
        if (sub_10015A058(6) && os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
        {
          LOWORD(__p[0].__sig) = 0;
          __n128 v14 = "[-NCP-]: SPINEL_PROP_VENDOR_LAST_HOST_WAKE_REASON";
          goto LABEL_308;
        }

        goto LABEL_609;
      }

      if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        goto LABEL_609;
      }
      goto LABEL_357;
    case 15503:
    case 15504:
    case 15505:
      break;
    case 15506:
      uint64_t v108 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v108)
      {
        int v13 = v108;
        if (sub_10015A058(6) && os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
        {
          LOWORD(__p[0].__sig) = 0;
          __n128 v14 = "[-NCP-]: SPINEL_PROP_VENDOR_NCP_STATE_DUMP";
          goto LABEL_308;
        }
      }

      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
LABEL_357:
        sub_1001FB53C();
      }

      goto LABEL_609;
    default:
      if ((_DWORD)a2 == 15488)
      {
        buf.__r_.__value_.__r.__words[0] = 0LL;
        BOOL v117 = (int)spinel_datatype_unpack(a3, a4, "U", a4, a5, a6, a7, a8, (uint64_t)&buf) < 1
            || buf.__r_.__value_.__r.__words[0] == 0;
        uint64_t v118 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        uint64_t v119 = v118;
        if (v117)
        {
          if (v118)
          {
          }

          else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
          {
            sub_1001FB53C();
          }

          sub_10000AC00(v325, "Stability");
          sub_10000AC00(v323, "Invalid State");
          sub_10000AC00(v321, "Corrupted NCP Vendor version");
          (*(void (**)(uint64_t *, void **, void **, void **, void, void))(*a1 + 72))( a1,  v325,  v323,  v321,  0LL,  0LL);
          if (v322 < 0) {
            operator delete(v321[0]);
          }
          if (v324 < 0) {
            operator delete(v323[0]);
          }
          if (v326 < 0) {
            operator delete(v325[0]);
          }
          sub_1000DA700((uint64_t)a1, 1LL);
          goto LABEL_609;
        }

        if (v118)
        {
          if (sub_10015A058(6) && os_log_type_enabled(v119, OS_LOG_TYPE_INFO))
          {
            LODWORD(__p[0].__sig) = 136315138;
            *(uint64_t *)((char *)&__p[0].__sig + 4) = buf.__r_.__value_.__r.__words[0];
            _os_log_impl( (void *)&_mh_execute_header,  v119,  OS_LOG_TYPE_INFO,  "Setting NCP Vendor Version: %s",  (uint8_t *)__p,  0xCu);
          }
        }

        else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
          sub_1001FB53C();
        }

        sub_10000AC00(__p, buf.__r_.__value_.__l.__data_);
        sub_1000DA9C8((uint64_t)a1, (const std::string *)__p);
        if (__p[0].__opaque[15] < 0) {
          operator delete((void *)__p[0].__sig);
        }
        sub_10000AC00(__p, buf.__r_.__value_.__l.__data_);
        sub_1000A590C((uint64_t)(a1 + 9263), (std::string *)__p);
        if ((__p[0].__opaque[15] & 0x80000000) == 0) {
          goto LABEL_609;
        }
        goto LABEL_554;
      }

      if ((_DWORD)a2 == 15617)
      {
        LODWORD(__p[0].__sig) = 0;
        spinel_datatype_unpack(a3, a4, "i", a4, a5, a6, a7, a8, (uint64_t)__p);
        if (LODWORD(__p[0].__sig) == 15393)
        {
          unint64_t v147 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (v147)
          {
            if (sub_10015A058(5) && os_log_type_enabled(v147, OS_LOG_TYPE_INFO))
            {
              LOWORD(buf.__r_.__value_.__l.__data_) = 0;
              char v148 = &buf;
LABEL_384:
              _os_log_impl( (void *)&_mh_execute_header,  v147,  OS_LOG_TYPE_INFO,  "[-NCP-]: NCP Buffer thresh low, SPINEL_STATUS_VENDOR_NCP_BUFFER_THRESH_LOW",  (uint8_t *)v148,  2u);
            }
          }

          else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
          {
LABEL_598:
            sub_1001FB53C();
          }

LABEL_599:
          *((_BYTE *)a1 + 80) = 1;
        }

        else if (LODWORD(__p[0].__sig) == 15392)
        {
          uint64_t v26 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (v26)
          {
            if (sub_10015A058(5) && os_log_type_enabled(v26, OS_LOG_TYPE_INFO))
            {
              LOWORD(buf.__r_.__value_.__l.__data_) = 0;
              uint64_t v27 = &buf;
LABEL_57:
              _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_INFO,  "[-NCP-]: NCP Buffer thresh high, SPINEL_STATUS_VENDOR_NCP_BUFFER_THRESH_HIGH",  (uint8_t *)v27,  2u);
            }
          }

          else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
          {
LABEL_595:
            sub_1001FB53C();
          }

LABEL_596:
          *((_BYTE *)a1 + 80) = 0;
        }

        else
        {
          char v149 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (v149)
          {
          }

          else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
          {
            sub_1001FB53C();
          }

          sub_10000AC00(v337, "Stability");
          sub_10000AC00(v335, "Invalid State");
          sub_10000AC00(v333, "NCP Invalid property data");
          (*(void (**)(uint64_t *, void **, void **, void **, void, void))(*a1 + 72))( a1,  v337,  v335,  v333,  0LL,  0LL);
          if (v334 < 0) {
            operator delete(v333[0]);
          }
          if (v336 < 0) {
            operator delete(v335[0]);
          }
          if (v338 < 0) {
            operator delete(v337[0]);
          }
          sub_1000DA700((uint64_t)a1, 1LL);
        }

        goto LABEL_609;
      }

      break;
  }

LABEL_238:
  if ((a2 & 0xFFFFFFFE) == 0x72)
  {
    __p[0].__uint64_t sig = 0LL;
    LODWORD(buf.__r_.__value_.__l.__data_) = 0;
    if ((_DWORD)a2 == 115) {
      char v115 = 3;
    }
    else {
      char v115 = 2;
    }
    v352[0] = v115;
    if ((int)spinel_datatype_unpack(a3, a4, "DD", a4, a5, a6, a7, a8, (uint64_t)__p) > 0)
    {
      if (sub_10011395C((uint64_t)a1, v352, __p[0].__sig, LODWORD(buf.__r_.__value_.__l.__data_)))
      {
        if (a1[194] && v352[0] == 4) {
          sub_100113864((uint64_t)a1, __p[0].__sig, LODWORD(buf.__r_.__value_.__l.__data_));
        }
        else {
          sub_100113608((uint64_t)a1, __p[0].__sig, LODWORD(buf.__r_.__value_.__l.__data_));
        }
      }

      goto LABEL_609;
    }

    int v181 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v181)
    {
      goto LABEL_609;
    }

    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      goto LABEL_639;
    }
LABEL_609:
    sub_10015A014((uint64_t)(a1 + 4), 2885615617LL, (uint64_t)a3, a4, a5, a6, a7, a8, a2);
    return;
  }

  if ((int)a2 > 5421)
  {
    if ((int)a2 <= 6406)
    {
      switch((int)a2)
      {
        case 5422:
          __src = 0LL;
          memset(__p, 0, 24);
          memset(&buf, 0, sizeof(buf));
          char v162 = (uint64_t **)(a1 + 9226);
          memset(__n, 0, sizeof(__n));
          sub_10004D280((uint64_t)(a1 + 9226));
          if ((spinel_datatype_unpack(a3, a4, "6Cd", v163, v164, v165, v166, v167, (uint64_t)&__src) & 0x80000000) == 0)
          {
            sub_100108154(__src, v352);
            sub_100014D08((uint64_t)__p, (__int128 *)v352);
            if (v353 < 0) {
              operator delete(*(void **)v352);
            }
            unsigned int v168 = spinel_link_metrics_status_to_cstr(v304);
            std::string::assign(&buf, v168);
            sub_10000AC00(v352, "Source");
            uint64_t v169 = sub_10000ED88(v162, (__n128 *)v352);
            sub_1000200A0(v169, (const std::string *)__p);
            if (v353 < 0) {
              operator delete(*(void **)v352);
            }
            sub_10000AC00(v352, "Status");
            uint64_t v170 = sub_10000ED88(v162, (__n128 *)v352);
            sub_1000200A0(v170, &buf);
            if (v353 < 0) {
              operator delete(*(void **)v352);
            }
            sub_10006D828(*(uint64_t *)&__n[4], *(unsigned int *)__n, v162, v171, v172, v173, v174, v175);
            goto LABEL_935;
          }

          uint64_t v265 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (v265)
          {
            goto LABEL_935;
          }

          if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
            goto LABEL_935;
          }
          goto LABEL_934;
        case 5425:
          LOWORD(__src) = 0;
          __p[0].__uint64_t sig = 0LL;
          buf.__r_.__value_.__r.__words[0] = 0LL;
          *(_DWORD *)v352 = 0;
          unint64_t v226 = (uint64_t **)(a1 + 9232);
          sub_10004D280((uint64_t)(a1 + 9232));
          int v232 = spinel_datatype_unpack(a3, a4, "SEd", v227, v228, v229, v230, v231, (uint64_t)&__src);
          v233 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          v234 = v233;
          if (v232 < 0)
          {
            if (v233)
            {
            }

            else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
            {
              sub_1001FB53C();
            }
          }

          else
          {
            if (v233)
            {
            }

            else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
            {
              sub_1001FB53C();
            }

            sub_10006D828( (uint64_t)buf.__r_.__value_.__l.__data_,  *(unsigned int *)v352,  v226,  v235,  v236,  v237,  v238,  v239);
          }

          goto LABEL_609;
        case 5427:
          __src = 0LL;
          memset(__p, 0, 24);
          memset(&buf, 0, sizeof(buf));
          if ((spinel_datatype_unpack(a3, a4, "6C", a4, a5, a6, a7, a8, (uint64_t)&__src) & 0x80000000) != 0)
          {
            v266 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
            if (v266)
            {
            }

            else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
            {
LABEL_934:
              sub_1001FB53C();
            }
          }

          else
          {
            sub_100108154(__src, v352);
            sub_100014D08((uint64_t)__p, (__int128 *)v352);
            if (v353 < 0) {
              operator delete(*(void **)v352);
            }
            char v195 = spinel_link_metrics_status_to_cstr(__n[4]);
            std::string::assign(&buf, v195);
            sub_10000AC00(v352, "Source");
            uint64_t v196 = sub_10000ED88((uint64_t **)a1 + 9229, (__n128 *)v352);
            sub_1000200A0(v196, (const std::string *)__p);
            if (v353 < 0) {
              operator delete(*(void **)v352);
            }
            sub_10000AC00(v352, "Status");
            unsigned int v197 = sub_10000ED88((uint64_t **)a1 + 9229, (__n128 *)v352);
            sub_1000200A0(v197, &buf);
            if (v353 < 0) {
              operator delete(*(void **)v352);
            }
            uint64_t v198 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
            if (v198)
            {
              if (sub_10015A058(6) && os_log_type_enabled(v198, OS_LOG_TYPE_INFO))
              {
                unint64_t v199 = &buf;
                if ((buf.__r_.__value_.__s.__size_ & 0x80u) != 0) {
                  unint64_t v199 = (std::string *)buf.__r_.__value_.__r.__words[0];
                }
                int v200 = __p;
                if (__p[0].__opaque[15] < 0) {
                  int v200 = (pthread_mutex_t *)__p[0].__sig;
                }
                *(_DWORD *)v352 = 136315394;
                *(void *)&v352[4] = v199;
                *(_WORD *)&v352[12] = 2080;
                *(void *)&v352[14] = v200;
                _os_log_impl( (void *)&_mh_execute_header,  v198,  OS_LOG_TYPE_INFO,  "Link Metrics Mqmt Response: %s (src: %s)",  v352,  0x16u);
              }
            }

            else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
            {
              sub_1001FB53C();
            }
          }

                                                      uint64_t v91 = *(void *)(a1 + 8);
                                                      sub_1000798B4((uint64_t)&v225, v91);
                                                      uint64_t v92 = sub_1000798B8((uint64_t)&v225, a3);
                                                      sub_100034C60("Cii", (uint64_t *)&__p, 0x80u);
                                                      int v93 = sub_100079A40(v92, (uint64_t)&__p);
                                                      *(void *)&uint64_t v231 = (char *)off_1002B02C8 + 1;
                                                      *((void *)&v231 + 1) = sub_100099254;
                                                      uint64_t v94 = sub_10007A754(v93, (uint64_t *)&v231);
                                                      sub_10007A86C(v94, &v229);
                                                      sub_10004E9A4(v91, &v229);
                                                      goto LABEL_225;
                                                    }

    uint64_t v57 = *v55;
    __int128 v58 = v55[1];
    if (v57 == 0x74656B6361507852LL && v58 == 0x5D395B746E756F43LL)
    {
      DWORD1(v90) = sub_1000BE984(4, uint64);
      goto LABEL_277;
    }

LABEL_935:
          if (__p[0].__opaque[15] < 0) {
            operator delete((void *)__p[0].__sig);
          }
          goto LABEL_609;
        case 5429:
          unsigned int v201 = (uint64_t **)(a1 + 9235);
          sub_10004D280((uint64_t)(a1 + 9235));
          *(void *)v352 = 0LL;
          *(_DWORD *)&__n[4] = 0;
          unsigned int v202 = a4;
          unsigned int v208 = spinel_datatype_unpack(a3, a4, "CC", v203, v204, v205, v206, v207, (uint64_t)__n);
          unsigned int v209 = v208;
          if ((v208 & 0x80000000) != 0)
          {
            v267 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
            if (v267)
            {
            }

            else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
            {
              sub_1001FB53C();
            }

            goto LABEL_609;
          }

          if (v202 < v208) {
            goto LABEL_992;
          }
          sub_10000AC00(__p, "Status");
          unsigned __int32 v210 = sub_10000ED88(v201, (__n128 *)__p);
          sub_1000176D4(v210, __n);
          if (__p[0].__opaque[15] < 0) {
            operator delete((void *)__p[0].__sig);
          }
          sub_10000AC00(__p, "MlrStatus");
          char v211 = sub_10000ED88(v201, (__n128 *)__p);
          sub_1000176D4(v211, &v304);
          if (__p[0].__opaque[15] < 0) {
            operator delete((void *)__p[0].__sig);
          }
          __p[0].__uint64_t sig = (uint64_t)__p;
          *(void *)__p[0].__opaque = __p;
          *(void *)&__p[0].__opaque[8] = 0LL;
          if ((spinel_datatype_unpack( (_WORD *)((char *)a3 + v209),  v202 - v209,  "d",  v212,  v213,  v214,  v215,  v216,  (uint64_t)v352) & 0x80000000) != 0)
          {
            v278 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
            if (v278)
            {
              goto LABEL_991;
            }

            if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
LABEL_990:
            }
              sub_1001FB53C();
          }

          else
          {
            uint64_t v222 = *(unsigned int *)&__n[4];
            if (*(_DWORD *)&__n[4])
            {
              while (1)
              {
                int v223 = spinel_datatype_unpack(*(_WORD **)v352, v222, "6", v217, v218, v219, v220, v221, (uint64_t)&__src);
                if (v223 <= 0) {
                  break;
                }
                *(void *)v352 += v223;
                *(_DWORD *)&__n[4] -= v223;
                sub_100108154(__src, &buf);
                sub_100044B24(&__p[0].__sig, (uint64_t)&buf);
                uint64_t v222 = *(unsigned int *)&__n[4];
                if (!*(_DWORD *)&__n[4]) {
                  goto LABEL_712;
                }
              }

              v283 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
              if (v283)
              {
                goto LABEL_991;
              }

              if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
                goto LABEL_990;
              }
            }

            else
            {
LABEL_712:
              sub_10000AC00(&buf, "Addresses");
              v224 = sub_10000ED88(v201, (__n128 *)&buf);
              sub_10006DA9C(v224, (uint64_t)__p);
              v225 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
              if (v225)
              {
                goto LABEL_991;
              }

              if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
                goto LABEL_990;
              }
            }
          }

LABEL_991:
          sub_10000C0E8(__p);
          goto LABEL_609;
        case 5432:
          *(void *)v352 = 0LL;
          v240 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (v240)
          {
            if (sub_10015A058(6) && os_log_type_enabled(v240, OS_LOG_TYPE_INFO))
            {
              sub_10006DAF4((uint64_t)v352, (std::string *)__p);
              char v241 = __p[0].__opaque[15] >= 0 ? __p : (pthread_mutex_t *)__p[0].__sig;
              LODWORD(buf.__r_.__value_.__l.__data_) = 136315138;
              *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v241;
              _os_log_impl( (void *)&_mh_execute_header,  v240,  OS_LOG_TYPE_INFO,  "[-NCP-]: BackboneRouterLocalState:Changed %s",  (uint8_t *)&buf,  0xCu);
              if (__p[0].__opaque[15] < 0) {
                operator delete((void *)__p[0].__sig);
              }
            }
          }

          else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
          {
            sub_1001FB53C();
          }

          sub_10000AC00(__p, "Thread:BackboneRouter:State");
          (*(void (**)(uint64_t *, pthread_mutex_t *, _BYTE *))(*a1 + 360))(a1, __p, v352);
          goto LABEL_346;
        case 5436:
          buf.__r_.__value_.__r.__words[0] = 0LL;
          if (!sub_100056244(a3, a4, (uint64_t *)&buf))
          {
            sub_10000AC00(__p, "Thread:BackboneRouter:MulticastListenerEvent");
            (*(void (**)(uint64_t *, pthread_mutex_t *, std::string *))(*a1 + 360))(a1, __p, &buf);
            if (__p[0].__opaque[15] < 0) {
              operator delete((void *)__p[0].__sig);
            }
          }

          uint64_t sig = buf.__r_.__value_.__r.__words[0];
          if (!buf.__r_.__value_.__r.__words[0]) {
            goto LABEL_609;
          }
          goto LABEL_216;
        default:
          goto LABEL_609;
      }
    }

    if ((_DWORD)a2 != 6407)
    {
      if ((_DWORD)a2 != 6412)
      {
        if ((_DWORD)a2 == 6414 && (int)spinel_datatype_unpack(a3, a4, "b", a4, a5, a6, a7, a8, (uint64_t)&buf) >= 1)
        {
          uint64_t v189 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (v189)
          {
            if (sub_10015A058(5) && os_log_type_enabled(v189, OS_LOG_TYPE_INFO))
            {
              if (buf.__r_.__value_.__s.__data_[0]) {
                uint64_t v190 = "en";
              }
              else {
                uint64_t v190 = "dis";
              }
              LODWORD(__p[0].__sig) = 136315138;
              *(uint64_t *)((char *)&__p[0].__sig + 4) = (uint64_t)v190;
              _os_log_impl( (void *)&_mh_execute_header,  v189,  OS_LOG_TYPE_INFO,  "[-NCP-]: SLAAC %sabled",  (uint8_t *)__p,  0xCu);
            }
          }

          else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
          {
            sub_1001FB53C();
          }

          *((_BYTE *)a1 + 1399) = buf.__r_.__value_.__s.__data_[0];
        }

        goto LABEL_609;
      }

      buf.__r_.__value_.__r.__words[0] = 0LL;
      sub_10000AC00(__p, buf.__r_.__value_.__l.__data_);
      sub_100014D08((uint64_t)(a1 + 9096), (__int128 *)&__p[0].__sig);
      if (__p[0].__opaque[15] < 0) {
        operator delete((void *)__p[0].__sig);
      }
      uint64_t v194 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (!v194)
      {
        if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          goto LABEL_609;
        }
        goto LABEL_639;
      }

      LODWORD(__p[0].__sig) = 136315138;
      *(uint64_t *)((char *)&__p[0].__sig + 4) = buf.__r_.__value_.__r.__words[0];
      uint64_t v22 = "[-NCP-]: RCP is running %s";
      uint64_t v23 = (std::string *)__p;
LABEL_789:
      std::string v24 = v194;
      uint32_t v25 = 12;
LABEL_48:
      _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_INFO, v22, (uint8_t *)v23, v25);
      goto LABEL_609;
    }

    *(void *)&__p[0].__opaque[8] = 0LL;
    *(void *)__p[0].__opaque = 0LL;
    __p[0].__uint64_t sig = (uint64_t)__p[0].__opaque;
    memset(&buf, 0, sizeof(buf));
    if (sub_10006D66C(a3, a4, (uint64_t **)__p, a4, a5, a6, a7, a8))
    {
      uint64_t v260 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v260)
      {
      }

      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        sub_1001FB53C();
      }

      goto LABEL_986;
    }

    if (sub_10006D780(a3, a4, &buf, v255, v256, v257, v258, v259))
    {
      v273 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v273)
      {
        goto LABEL_985;
      }

      if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        goto LABEL_984;
      }
    }

    else
    {
      v281 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v281)
      {
        if (sub_10015A058(6) && os_log_type_enabled(v281, OS_LOG_TYPE_INFO))
        {
          v282 = &buf;
          if ((buf.__r_.__value_.__s.__size_ & 0x80u) != 0) {
            v282 = (std::string *)buf.__r_.__value_.__r.__words[0];
          }
          *(_DWORD *)v352 = 136315138;
          *(void *)&v352[4] = v282;
          _os_log_impl( (void *)&_mh_execute_header,  v281,  OS_LOG_TYPE_INFO,  "[-NCP-]: Network time update: %s",  v352,  0xCu);
        }

        goto LABEL_985;
      }

      if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
LABEL_984:
      }
        sub_1001FB53C();
    }

LABEL_985:
    sub_1000DB100((uint64_t)a1, __p);
LABEL_986:
    sub_10000D448((uint64_t)__p);
    goto LABEL_609;
  }

  if ((int)a2 <= 5386)
  {
    if ((int)a2 <= 127)
    {
      if ((_DWORD)a2 == 72)
      {
        *(_DWORD *)v352 = 0;
        int v242 = spinel_datatype_unpack(a3, a4, "L", a4, a5, a6, a7, a8, (uint64_t)v352);
        char v243 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v243)
        {
          if (sub_10015A058(6) && os_log_type_enabled(v243, OS_LOG_TYPE_INFO))
          {
            LODWORD(__p[0].__sig) = 67109376;
            HIDWORD(__p[0].__sig) = *(_DWORD *)v352;
            *(_WORD *)__p[0].__opaque = 1024;
            *(_DWORD *)&__p[0].__opaque[2] = *(_DWORD *)v352;
            _os_log_impl( (void *)&_mh_execute_header,  v243,  OS_LOG_TYPE_INFO,  "[-NCP-] Partition id: %u (0x%x)",  (uint8_t *)__p,  0xEu);
          }
        }

        else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
          sub_1001FB53C();
        }

        if (v242 <= 0)
        {
          v277 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (v277)
          {
          }

          else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
          {
            sub_1001FB53C();
          }

          sub_10000AC00(v301, "Stability");
          sub_10000AC00(v299, "Invalid State");
          sub_10000AC00(v297, "NCP has Corrupted Network Partition Id");
          (*(void (**)(uint64_t *, void **, void **, void **, void, uint64_t))(*a1 + 72))( a1,  v301,  v299,  v297,  0LL,  1LL);
          if (v298 < 0) {
            operator delete(v297[0]);
          }
          if (v300 < 0) {
            operator delete(v299[0]);
          }
          if (v302 < 0) {
            operator delete(v301[0]);
          }
          sub_1000DA700((uint64_t)a1, 1LL);
        }

        else if (*((_DWORD *)a1 + 379) != *(_DWORD *)v352)
        {
          *((_DWORD *)a1 + 379) = *(_DWORD *)v352;
          sub_10000AC00(__p, "Network:PartitionId");
          v274 = operator new(0x10uLL);
          *(void *)v274 = &off_1002AE1C8;
          v274[2] = *(_DWORD *)v352;
          buf.__r_.__value_.__r.__words[0] = (std::string::size_type)v274;
          (*(void (**)(uint64_t *, pthread_mutex_t *, std::string *))(*a1 + 360))(a1, __p, &buf);
          uint64_t v275 = buf.__r_.__value_.__r.__words[0];
          if (buf.__r_.__value_.__r.__words[0]) {
            uint64_t v275 = (*(uint64_t (**)(std::string::size_type))(*(void *)buf.__r_.__value_.__l.__data_ + 8LL))(buf.__r_.__value_.__r.__words[0]);
          }
          if (__p[0].__opaque[15] < 0) {
            operator delete((void *)__p[0].__sig);
          }
          sub_10006D508(v275, a1 + 9250);
          if (v276)
          {
            sub_10000AC00(v295, "Stability");
            sub_10000AC00(v293, "Invalid State");
            sub_10000AC00(v291, "Too Many Network Partitions Created");
            (*(void (**)(uint64_t *, void **, void **, void **, void, uint64_t))(*a1 + 72))( a1,  v295,  v293,  v291,  0LL,  1LL);
            if (v292 < 0) {
              operator delete(v291[0]);
            }
            if (v294 < 0) {
              operator delete(v293[0]);
            }
            if (v296 < 0) {
              operator delete(v295[0]);
            }
          }
        }

        goto LABEL_609;
      }

      if ((_DWORD)a2 != 82) {
        goto LABEL_609;
      }
      __p[0].__uint64_t sig = (uint64_t)__p;
      *(void *)__p[0].__opaque = __p;
      *(void *)&__p[0].__opaque[8] = 0LL;
      sub_10007EDC0(a3, a4, &__p[0].__sig);
      uint64_t v184 = *(void *)__p[0].__opaque;
      if (*(pthread_mutex_t **)__p[0].__opaque != __p)
      {
        int v185 = 0;
        while (1)
        {
          int v186 = v185 + 1;
          if (__OFADD__(v185, 1)) {
            goto LABEL_993;
          }
          int v187 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (v187)
          {
            if (sub_10015A058(6) && os_log_type_enabled(v187, OS_LOG_TYPE_INFO))
            {
              sub_10007F534(v184 + 16, &buf);
              uint64_t v188 = &buf;
              if ((buf.__r_.__value_.__s.__size_ & 0x80u) != 0) {
                uint64_t v188 = (std::string *)buf.__r_.__value_.__r.__words[0];
              }
              *(_DWORD *)v352 = 67109378;
              *(_DWORD *)&v352[4] = v185 + 1;
              *(_WORD *)&v352[8] = 2080;
              *(void *)&v352[10] = v188;
              _os_log_impl((void *)&_mh_execute_header, v187, OS_LOG_TYPE_INFO, "[-NCP-] Child: %02d %s", v352, 0x12u);
            }
          }

          else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
          {
            LODWORD(buf.__r_.__value_.__l.__data_) = 136315394;
            *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)"com.apple.wpantund.ncp";
            WORD2(buf.__r_.__value_.__r.__words[1]) = 2080;
            *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)"default";
            _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "Logging Module is not defined for SubSystem: %s, Category: %s",  (uint8_t *)&buf,  0x16u);
          }

          uint64_t v184 = *(void *)(v184 + 8);
          ++v185;
          if ((pthread_mutex_t *)v184 == __p) {
            goto LABEL_840;
          }
        }
      }

      int v186 = 0;
LABEL_840:
      v268 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v268)
      {
        v269 = "";
        if (v186 > 1) {
          v269 = "ren";
        }
        LODWORD(buf.__r_.__value_.__l.__data_) = 67109378;
        HIDWORD(buf.__r_.__value_.__r.__words[0]) = v186;
        LOWORD(buf.__r_.__value_.__r.__words[1]) = 2080;
        *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)v269;
        uint64_t v270 = "[-NCP-] Child: Total %d child%s";
        goto LABEL_872;
      }

      if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        goto LABEL_906;
      }
      goto LABEL_905;
    }

    if ((_DWORD)a2 == 128)
    {
      *(void *)v352 = 0LL;
      if (!sub_100059C88(a3, a4, (uint64_t *)v352, a4, a5, a6, a7, a8))
      {
        uint64_t v140 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v140)
        {
          if (sub_10015A058(5) && os_log_type_enabled(v140, OS_LOG_TYPE_INFO))
          {
            sub_100147B4C((uint64_t *)v352, (std::string *)__p);
            if (__p[0].__opaque[15] >= 0) {
              v244 = __p;
            }
            else {
              v244 = (pthread_mutex_t *)__p[0].__sig;
            }
            LODWORD(buf.__r_.__value_.__l.__data_) = 136315138;
            *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v244;
            char v142 = "[-NCP-]: Joiner state %s";
LABEL_345:
            _os_log_impl((void *)&_mh_execute_header, v140, OS_LOG_TYPE_INFO, v142, (uint8_t *)&buf, 0xCu);
LABEL_346:
            if (__p[0].__opaque[15] < 0) {
              operator delete((void *)__p[0].__sig);
            }
          }
        }

        else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
LABEL_574:
          sub_1001FB53C();
        }
      }

      goto LABEL_67;
    }

    if ((_DWORD)a2 != 4627) {
      goto LABEL_609;
    }
    buf.__r_.__value_.__r.__words[0] = 0LL;
    BOOL v191 = (int)spinel_datatype_unpack(a3, a4, "X", a4, a5, a6, a7, a8, (uint64_t)&buf) > 0;
    uint64_t v192 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    uint64_t v193 = v192;
    if (!v191)
    {
      if (v192)
      {
      }

      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        sub_1001FB53C();
      }

      goto LABEL_609;
    }

    if (v192)
    {
      if (sub_10015A058(6) && os_log_type_enabled(v193, OS_LOG_TYPE_INFO))
      {
        LODWORD(__p[0].__sig) = 134217984;
        *(uint64_t *)((char *)&__p[0].__sig + 4) = buf.__r_.__value_.__r.__words[0];
        _os_log_impl( (void *)&_mh_execute_header,  v193,  OS_LOG_TYPE_INFO,  "[-NCP-]: ChannelUtilization:Changed %llu",  (uint8_t *)__p,  0xCu);
      }
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }

    sub_10000AC00(__p, "ChannelUtilizationMonitor:State");
    v279 = operator new(0x10uLL);
    std::string::size_type v280 = buf.__r_.__value_.__r.__words[0];
    void *v279 = &off_1002AE088;
    v279[1] = v280;
    *(void *)v352 = v279;
    (*(void (**)(uint64_t *, pthread_mutex_t *, _BYTE *))(*a1 + 360))(a1, __p, v352);
    std::string::size_type v177 = *(void *)v352;
    if (*(void *)v352) {
LABEL_475:
    }
      (*(void (**)(std::string::size_type))(*(void *)v177 + 8LL))(v177);
LABEL_476:
    if ((__p[0].__opaque[15] & 0x80000000) == 0) {
      goto LABEL_609;
    }
LABEL_554:
    uint64_t v182 = (void *)__p[0].__sig;
LABEL_555:
    operator delete(v182);
    goto LABEL_609;
  }

  if ((int)a2 <= 5398)
  {
    if ((_DWORD)a2 == 5387)
    {
      __p[0].__uint64_t sig = (uint64_t)__p;
      *(void *)__p[0].__opaque = __p;
      *(void *)&__p[0].__opaque[8] = 0LL;
      sub_10007EDE8(a3, a4, &__p[0].__sig);
      uint64_t v261 = *(void *)__p[0].__opaque;
      if (*(pthread_mutex_t **)__p[0].__opaque != __p)
      {
        int v262 = 0;
        while (1)
        {
          int v252 = v262 + 1;
          if (__OFADD__(v262, 1)) {
            goto LABEL_993;
          }
          v263 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (v263)
          {
            if (sub_10015A058(6) && os_log_type_enabled(v263, OS_LOG_TYPE_INFO))
            {
              sub_10007F534(v261 + 16, &buf);
              v264 = &buf;
              if ((buf.__r_.__value_.__s.__size_ & 0x80u) != 0) {
                v264 = (std::string *)buf.__r_.__value_.__r.__words[0];
              }
              *(_DWORD *)v352 = 67109378;
              *(_DWORD *)&v352[4] = v262 + 1;
              *(_WORD *)&v352[8] = 2080;
              *(void *)&v352[10] = v264;
              _os_log_impl( (void *)&_mh_execute_header,  v263,  OS_LOG_TYPE_INFO,  "[-NCP-] Neighbor: %02d %s",  v352,  0x12u);
            }
          }

          else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
          {
            LODWORD(buf.__r_.__value_.__l.__data_) = 136315394;
            *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)"com.apple.wpantund.ncp";
            WORD2(buf.__r_.__value_.__r.__words[1]) = 2080;
            *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)"default";
            _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "Logging Module is not defined for SubSystem: %s, Category: %s",  (uint8_t *)&buf,  0x16u);
          }

          uint64_t v261 = *(void *)(v261 + 8);
          ++v262;
          if ((pthread_mutex_t *)v261 == __p) {
            goto LABEL_866;
          }
        }
      }

      int v252 = 0;
LABEL_866:
      v268 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v268)
      {
        v272 = "";
        if (v252 > 1) {
          v272 = "s";
        }
LABEL_871:
        LODWORD(buf.__r_.__value_.__l.__data_) = 67109378;
        HIDWORD(buf.__r_.__value_.__r.__words[0]) = v252;
        LOWORD(buf.__r_.__value_.__r.__words[1]) = 2080;
        *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)v272;
        uint64_t v270 = "[-NCP-] Neighbor: Total %d neighbor%s";
LABEL_872:
        _os_log_impl((void *)&_mh_execute_header, v268, OS_LOG_TYPE_INFO, v270, (uint8_t *)&buf, 0x12u);
LABEL_906:
        sub_100071430(&__p[0].__sig);
        goto LABEL_609;
      }

      if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        goto LABEL_906;
      }
LABEL_905:
      sub_1001FB53C();
      goto LABEL_906;
    }

    if ((_DWORD)a2 != 5389) {
      goto LABEL_609;
    }
    sub_100159A78((unint64_t)a3, a4, __p, 0x21CuLL, 0);
    uint64_t v194 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (!v194)
    {
      if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        goto LABEL_609;
      }
      goto LABEL_639;
    }

    LODWORD(buf.__r_.__value_.__l.__data_) = 136642819;
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)__p;
    uint64_t v22 = "[-NCP-] Leader network data: %{sensitive}s";
    uint64_t v23 = &buf;
    goto LABEL_789;
  }

  if ((_DWORD)a2 == 5399)
  {
    __p[0].__uint64_t sig = (uint64_t)__p;
    *(void *)__p[0].__opaque = __p;
    *(void *)&__p[0].__opaque[8] = 0LL;
    sub_10007EE10(a3, a4, &__p[0].__sig);
    uint64_t v245 = *(void *)__p[0].__opaque;
    if (*(pthread_mutex_t **)__p[0].__opaque != __p)
    {
      int v246 = 0;
      while (1)
      {
        int v247 = v246 + 1;
        if (__OFADD__(v246, 1)) {
          goto LABEL_993;
        }
        uint64_t v248 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v248)
        {
          if (sub_10015A058(6) && os_log_type_enabled(v248, OS_LOG_TYPE_INFO))
          {
            sub_10007F534(v245 + 16, &buf);
            v249 = &buf;
            if ((buf.__r_.__value_.__s.__size_ & 0x80u) != 0) {
              v249 = (std::string *)buf.__r_.__value_.__r.__words[0];
            }
            *(_DWORD *)v352 = 67109378;
            *(_DWORD *)&v352[4] = v246 + 1;
            *(_WORD *)&v352[8] = 2080;
            *(void *)&v352[10] = v249;
            _os_log_impl((void *)&_mh_execute_header, v248, OS_LOG_TYPE_INFO, "[-NCP-] Router: %02d %s", v352, 0x12u);
          }
        }

        else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
          LODWORD(buf.__r_.__value_.__l.__data_) = 136315394;
          *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)"com.apple.wpantund.ncp";
          WORD2(buf.__r_.__value_.__r.__words[1]) = 2080;
          *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)"default";
          _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "Logging Module is not defined for SubSystem: %s, Category: %s",  (uint8_t *)&buf,  0x16u);
        }

        uint64_t v245 = *(void *)(v245 + 8);
        ++v246;
        if ((pthread_mutex_t *)v245 == __p) {
          goto LABEL_847;
        }
      }
    }

    int v247 = 0;
LABEL_847:
    v268 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v268)
    {
      v271 = "";
      if (v247 > 1) {
        v271 = "s";
      }
      LODWORD(buf.__r_.__value_.__l.__data_) = 67109378;
      HIDWORD(buf.__r_.__value_.__r.__words[0]) = v247;
      LOWORD(buf.__r_.__value_.__r.__words[1]) = 2080;
      *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)v271;
      uint64_t v270 = "[-NCP-] Router: Total %d router%s";
      goto LABEL_872;
    }

    if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      goto LABEL_906;
    }
    goto LABEL_905;
  }

  if ((_DWORD)a2 == 5410)
  {
    __p[0].__uint64_t sig = (uint64_t)__p;
    *(void *)__p[0].__opaque = __p;
    *(void *)&__p[0].__opaque[8] = 0LL;
    sub_10007EDFC(a3, a4, &__p[0].__sig);
    uint64_t v250 = *(void *)__p[0].__opaque;
    if (*(pthread_mutex_t **)__p[0].__opaque != __p)
    {
      int v251 = 0;
      while (1)
      {
        int v252 = v251 + 1;
        if (__OFADD__(v251, 1)) {
          goto LABEL_993;
        }
        uint64_t v253 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v253)
        {
          if (sub_10015A058(6) && os_log_type_enabled(v253, OS_LOG_TYPE_INFO))
          {
            sub_10007F534(v250 + 16, &buf);
            v254 = &buf;
            if ((buf.__r_.__value_.__s.__size_ & 0x80u) != 0) {
              v254 = (std::string *)buf.__r_.__value_.__r.__words[0];
            }
            *(_DWORD *)v352 = 67109378;
            *(_DWORD *)&v352[4] = v251 + 1;
            *(_WORD *)&v352[8] = 2080;
            *(void *)&v352[10] = v254;
            _os_log_impl((void *)&_mh_execute_header, v253, OS_LOG_TYPE_INFO, "[-NCP-] Neighbor: %02d %s", v352, 0x12u);
          }
        }

        else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
          LODWORD(buf.__r_.__value_.__l.__data_) = 136315394;
          *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)"com.apple.wpantund.ncp";
          WORD2(buf.__r_.__value_.__r.__words[1]) = 2080;
          *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)"default";
          _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "Logging Module is not defined for SubSystem: %s, Category: %s",  (uint8_t *)&buf,  0x16u);
        }

        uint64_t v250 = *(void *)(v250 + 8);
        ++v251;
        if ((pthread_mutex_t *)v250 == __p) {
          goto LABEL_854;
        }
      }
    }

    int v252 = 0;
LABEL_854:
    v268 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v268)
    {
      v272 = "";
      if (v252 > 1) {
        v272 = "s";
      }
      goto LABEL_871;
    }

    if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      goto LABEL_906;
    }
    goto LABEL_905;
  }

  if ((_DWORD)a2 != 5411) {
    goto LABEL_609;
  }
  *(void *)v352 = 0LL;
  if (sub_1000595C0(a3, a4, (uint64_t *)v352, 0LL, a5, a6, a7, a8) {
    || (char v121 = sub_10000BD6C((uint64_t *)v352),
  }
  {
LABEL_67:
    uint64_t sig = *(void *)v352;
    if (*(void *)v352) {
LABEL_216:
    }
      (*(void (**)(uint64_t))(*(void *)sig + 8LL))(sig);
    goto LABEL_609;
  }

  sub_10000BDD8((uint64_t)v352, (uint64_t)__p);
  uint64_t v122 = *(void *)__p[0].__opaque;
  if (*(pthread_mutex_t **)__p[0].__opaque == __p)
  {
    int v124 = 0;
LABEL_974:
    v284 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v284)
    {
      if (sub_10015A058(6) && os_log_type_enabled(v284, OS_LOG_TYPE_INFO))
      {
        uint64_t v285 = "y";
        if (v124 > 1) {
          uint64_t v285 = "ies";
        }
        LODWORD(buf.__r_.__value_.__l.__data_) = 67109378;
        HIDWORD(buf.__r_.__value_.__r.__words[0]) = v124;
        LOWORD(buf.__r_.__value_.__r.__words[1]) = 2080;
        *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)v285;
        _os_log_impl( (void *)&_mh_execute_header,  v284,  OS_LOG_TYPE_INFO,  "[-NCP-] AddressCache: Total %d entr%s",  (uint8_t *)&buf,  0x12u);
      }
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }

    sub_10000C0E8(__p);
    goto LABEL_67;
  }

  int v123 = 0;
  while (1)
  {
    int v124 = v123 + 1;
    if (__OFADD__(v123, 1)) {
      break;
    }
    uint64_t v125 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v125)
    {
      if (sub_10015A058(6) && os_log_type_enabled(v125, OS_LOG_TYPE_INFO))
      {
        uint64_t v126 = (void *)(v122 + 16);
        LODWORD(buf.__r_.__value_.__l.__data_) = 67109378;
        HIDWORD(buf.__r_.__value_.__r.__words[0]) = v123 + 1;
        LOWORD(buf.__r_.__value_.__r.__words[1]) = 2080;
        *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 2) = (std::string::size_type)v126;
        _os_log_impl( (void *)&_mh_execute_header,  v125,  OS_LOG_TYPE_INFO,  "[-NCP-] AddressCache: %02d %s",  (uint8_t *)&buf,  0x12u);
      }
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      LODWORD(buf.__r_.__value_.__l.__data_) = 136315394;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)"com.apple.wpantund.ncp";
      WORD2(buf.__r_.__value_.__r.__words[1]) = 2080;
      *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)"default";
      _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "Logging Module is not defined for SubSystem: %s, Category: %s",  (uint8_t *)&buf,  0x16u);
    }

    uint64_t v122 = *(void *)(v122 + 8);
    ++v123;
    if ((pthread_mutex_t *)v122 == __p) {
      goto LABEL_974;
    }
  }

LABEL_993:
  __break(0x5500u);
}

void sub_10006C170(_Unwind_Exception *a1)
{
  uint64_t v3 = *(void *)(v1 - 160);
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10006C850(uint64_t a1)
{
  uint64_t v1 = (__darwin_time_t *)(a1 + 73912);
  uint64_t result = gettimeofday(&v18, &v17);
  int v3 = *((_DWORD *)v1 + 2);
  __darwin_time_t tv_sec = v18.tv_sec;
  if (v3)
  {
    __darwin_time_t v5 = *v1;
    if (v18.tv_sec >= (unint64_t)*v1)
    {
      BOOL v6 = __CFADD__(v5, 3600LL);
      unint64_t v7 = v5 + 3600;
      if (v6) {
        goto LABEL_23;
      }
      if (v18.tv_sec < v7)
      {
        BOOL v8 = __OFADD__(v3, 1);
        int v9 = v3 + 1;
        if (!v8)
        {
          *((_DWORD *)v1 + 2) = v9;
          if (v9 < 101)
          {
            uint64_t v12 = 0LL;
          }

          else
          {
            *((_DWORD *)v1 + 2) = 0;
            __darwin_time_t *v1 = tv_sec;
            int v10 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
            if (v10)
            {
              BOOL v11 = v10;
            }

            else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
            {
              sub_1001FB53C();
            }

            uint64_t v12 = 1LL;
          }

          goto LABEL_12;
        }

BOOL sub_10006CA2C(void *a1, uint64_t *a2)
{
  if (a1[2] == a2[2])
  {
    int v3 = a1 + 1;
    std::runtime_error v2 = (void *)*a1;
    uint64_t v8 = *a2;
    int v9 = v2;
    if (v2 == a1 + 1)
    {
      BOOL v6 = 1;
    }

    else
    {
      do
      {
        int v4 = *((_DWORD *)v2 + 7);
        int v5 = *(_DWORD *)(v8 + 28);
        BOOL v6 = v4 == v5;
        if (v4 != v5) {
          break;
        }
        sub_10000B338((uint64_t)&v9);
        sub_10000B338((uint64_t)&v8);
        std::runtime_error v2 = v9;
      }

      while (v9 != v3);
    }
  }

  else
  {
    BOOL v6 = 0;
  }

  return !v6;
}

BOOL sub_10006CABC(void *a1, char *__s)
{
  size_t v4 = strlen(__s);
  if (*((char *)a1 + 23) < 0)
  {
    if (v4 == a1[1])
    {
      if (v4 == -1LL) {
        goto LABEL_10;
      }
      a1 = (void *)*a1;
      return memcmp(a1, __s, v4) != 0;
    }
  }

  else if (v4 == *((unsigned __int8 *)a1 + 23))
  {
    if (v4 == -1LL) {
LABEL_10:
    }
      sub_100077124();
    return memcmp(a1, __s, v4) != 0;
  }

  return 1LL;
}

uint64_t sub_10006CB4C( uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v9 = a3;
  if ((int)a2 <= 5386)
  {
    switch((_DWORD)a2)
    {
      case 'R':
        sub_10007E168(&v33);
        if (!sub_10007E568(v9, a4, (uint64_t)&v33))
        {
          char v17 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (v17)
          {
            if (sub_10015A058(6) && os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
            {
              sub_10007F534((uint64_t)&v33, &__p);
              timeval v18 = v29 >= 0 ? &__p : (__n128 *)__p.n128_u64[0];
              buf.n128_u32[0] = 136315138;
              *(unint64_t *)((char *)buf.n128_u64 + 4) = (unint64_t)v18;
              _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_INFO,  "[-NCP-]: ChildTable entry added: %s",  (uint8_t *)&buf,  0xCu);
              if (v29 < 0) {
                operator delete((void *)__p.n128_u64[0]);
              }
            }
          }

          else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
          {
            sub_1001FB53C();
          }

          sub_10000AC00(&__p, "Thread:ChildTable:AddChild");
          sub_10007FB68((uint64_t)&v33, (uint64_t)&buf);
          __darwin_time_t v24 = operator new(0x20uLL);
          *__darwin_time_t v24 = off_1002ADCD0;
          sub_100044D20(v24 + 1, &buf);
          uint64_t v27 = v24;
          (*(void (**)(uint64_t, __n128 *, const void **))(*(void *)a1 + 360LL))(a1, &__p, &v27);
          if (v27) {
            (*(void (**)(const void *))(*(void *)v27 + 8LL))(v27);
          }
          sub_10000D448((uint64_t)&buf);
          if (v29 < 0) {
            operator delete((void *)__p.n128_u64[0]);
          }
        }

        sub_1000714B8(v36);
        break;
      case 'c':
        uint64_t v33 = 0LL;
        LOBYTE(v27) = 0;
        __p.n128_u32[0] = -1;
        buf.n128_u32[0] = -1;
        spinel_datatype_unpack(a3, a4, "6CLL", a4, a5, a6, a7, a8, (uint64_t)&v33);
        break;
      case 'f':
        uint64_t v33 = 0LL;
        spinel_datatype_unpack(a3, a4, "6", a4, a5, a6, a7, a8, (uint64_t)&v33);
        a3 = (uint64_t *)v33;
        if (v33)
        {
          if (v33->n128_u32[0] || v33->n128_u32[1] || v33->n128_u32[2] || v33->n128_u32[3])
          {
            v30[0] = (uint64_t)off_1002AED78 + 1;
            sub_1000EF6BC((uint64_t *)a1, 0, v33, v30);
            sub_1000075F0(v30);
          }
        }

        break;
    }
  }

  else
  {
    uint64_t v12 = (void *)(a1 + 73776);
    if ((int)a2 > 6147)
    {
      if ((_DWORD)a2 == 6148)
      {
        uint64_t v34 = 0LL;
        uint64_t v35 = 0LL;
        uint64_t v33 = (__n128 *)&v34;
        if ((int)spinel_datatype_unpack(a3, a4, "SL", a4, a5, a6, a7, a8, (uint64_t)&v27) <= 0)
        {
          __int16 v23 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (v23)
          {
          }

          else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
          {
            sub_1001FB53C();
          }
        }

        sub_10000AC00(&__p, "PanId");
        int v19 = sub_10000ED88((uint64_t **)&v33, &__p);
        sub_100017678(v19, &v27);
        if (v29 < 0) {
          operator delete((void *)__p.n128_u64[0]);
        }
        sub_10000AC00(&__p, "ChannelMask");
        int v20 = sub_10000ED88((uint64_t **)&v33, &__p);
        sub_100017F70(v20, &buf);
        if (v29 < 0) {
          operator delete((void *)__p.n128_u64[0]);
        }
        if (*(void *)(a1 + 73800) == 64LL) {
          sub_10006DC2C(a1 + 73784);
        }
        sub_10000D584((uint64_t *)(a1 + 73784), (uint64_t *)&v33);
        goto LABEL_58;
      }

      if ((_DWORD)a2 == 2000015)
      {
        buf.n128_u64[0] = 0LL;
        LOWORD(v27) = 0;
        if ((int)spinel_datatype_unpack(a3, a4, "d", a4, a5, a6, a7, a8, (uint64_t)&buf) <= 0)
        {
          __darwin_time_t v22 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (v22)
          {
          }

          else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
          {
            sub_1001FB53C();
          }
        }

        else
        {
          uint64_t v33 = 0LL;
          uint64_t v34 = 0LL;
          uint64_t v35 = 0LL;
          sub_1000712BC( (char *)&v33,  0LL,  (char *)buf.n128_u64[0],  (char *)(buf.n128_u64[0] + (unsigned __int16)v27),  (unsigned __int16)v27);
          sub_100033680(&__p, (uint64_t)&v33);
          sub_1000DB138(a1, (pthread_mutex_t *)&__p);
          if (__p.n128_u64[0]) {
            (*(void (**)(unint64_t))(*(void *)__p.n128_u64[0] + 8LL))(__p.n128_u64[0]);
          }
          __p.n128_u64[0] = (unint64_t)&v33;
          sub_100006F6C((void ***)&__p);
        }
      }
    }

    else if ((_DWORD)a2 == 5387)
    {
      uint64_t v33 = (__n128 *)&v33;
      uint64_t v34 = (uint64_t **)&v33;
      uint64_t v35 = 0LL;
      if (!sub_10007EDE8(a3, a4, (uint64_t *)&v33) && v35)
      {
        int v15 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v15)
        {
          if (sub_10015A058(6) && os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
          {
            sub_10007F534((uint64_t)(v34 + 2), &__p);
            __darwin_time_t v16 = v29 >= 0 ? &__p : (__n128 *)__p.n128_u64[0];
            buf.n128_u32[0] = 136315138;
            *(unint64_t *)((char *)buf.n128_u64 + 4) = (unint64_t)v16;
            _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_INFO,  "[-NCP-]: Neighbor(Router) entry added: %s",  (uint8_t *)&buf,  0xCu);
            if (v29 < 0) {
              operator delete((void *)__p.n128_u64[0]);
            }
          }
        }

        else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
          sub_1001FB53C();
        }
      }

      sub_100071430((uint64_t *)&v33);
    }

    else if ((_DWORD)a2 == 6146)
    {
      uint64_t v27 = 0LL;
      uint64_t v34 = 0LL;
      uint64_t v35 = 0LL;
      uint64_t v33 = (__n128 *)&v34;
      if ((int)spinel_datatype_unpack(a3, a4, "Ld", a4, a5, a6, a7, a8, (uint64_t)&v26) <= 0)
      {
        __int16 v21 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v21)
        {
        }

        else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
          sub_1001FB53C();
        }
      }

      sub_10000AC00(&__p, "ChannelMask");
      int v13 = sub_10000ED88((uint64_t **)&v33, &__p);
      sub_100017F70(v13, &v26);
      if (v29 < 0) {
        operator delete((void *)__p.n128_u64[0]);
      }
      sub_100018E5C(&__p, v27, (uint64_t)v27);
      sub_10000AC00(&buf, "Data");
      __n128 v14 = sub_10000ED88((uint64_t **)&v33, &buf);
      sub_100017FCC(v14, &__p);
      if (v32 < 0) {
        operator delete((void *)buf.n128_u64[0]);
      }
      buf.n128_u64[0] = (unint64_t)&__p;
      sub_100006F6C((void ***)&buf);
      if (*v12 == 64LL) {
        sub_10006DC2C(a1 + 73760);
      }
      sub_10000D584((uint64_t *)(a1 + 73760), (uint64_t *)&v33);
LABEL_58:
      sub_10000D448((uint64_t)&v33);
    }
  }

  return sub_10015A014(a1 + 32, 2885615618LL, (uint64_t)a3, a4, a5, a6, a7, a8, a2);
}

void sub_10006D310( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20, char a21, char a22, uint64_t a23, uint64_t a24, uint64_t a25, void *a26, uint64_t a27, int a28, __int16 a29, char a30, char a31, char a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40)
{
}

BOOL sub_10006D45C(uint64_t a1, uint64_t a2)
{
  std::runtime_error v2 = *(const void **)a1;
  size_t v4 = *(void *)(a1 + 8) - (void)v2;
  int v5 = *(const void **)a2;
  return v4 != *(void *)(a2 + 8) - (void)v5 || memcmp(v2, v5, v4) != 0;
}

uint64_t sub_10006D498(uint64_t a1, char *a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_10006D4CC(uint64_t *a1, _BYTE *a2)
{
  unint64_t v3 = a1[1];
  if (v3 >= a1[2])
  {
    uint64_t result = sub_10007781C(a1, a2);
  }

  else
  {
    sub_100077808((uint64_t)a1, a2);
    uint64_t result = v3 + 1;
  }

  a1[1] = result;
  return result;
}

void sub_10006D508(uint64_t a1, __darwin_time_t *a2)
{
  unint64_t v3 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v3)
  {
    size_t v4 = v3;
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  int v5 = *((_DWORD *)a2 + 2);
  __darwin_time_t tv_sec = v15.tv_sec;
  if (!v5) {
    goto LABEL_17;
  }
  __darwin_time_t v7 = *a2;
  BOOL v8 = __CFADD__(v7, 3600LL);
  unint64_t v9 = v7 + 3600;
  if (v8)
  {
LABEL_22:
    __break(0x5500u);
    return;
  }

  if (v15.tv_sec >= v9)
  {
LABEL_17:
    *((_DWORD *)a2 + 2) = 1;
    *a2 = tv_sec;
    return;
  }

  BOOL v10 = __OFADD__(v5, 1);
  int v11 = v5 + 1;
  if (v10) {
    goto LABEL_22;
  }
  *((_DWORD *)a2 + 2) = v11;
  if (v11 >= 21)
  {
    *((_DWORD *)a2 + 2) = 1;
    *a2 = tv_sec;
    uint64_t v12 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v12)
    {
      int v13 = v12;
      if (sub_10015A058(4))
      {
        if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
          sub_100205EBC();
        }
      }
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }
  }

uint64_t sub_10006D66C( _WORD *a1, uint64_t a2, uint64_t **a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v18[0] = 0LL;
  v18[1] = 0LL;
  char v17 = v18;
  if ((int)spinel_datatype_unpack(a1, a2, "Xc", a4, a5, a6, a7, a8, (uint64_t)&v16) < 1)
  {
    uint64_t v11 = 1LL;
  }

  else
  {
    sub_10004D280((uint64_t)a3);
    sub_10000AC00(&__p, "ThreadNetworkTime");
    unint64_t v9 = sub_10000ED88(a3, &__p);
    sub_100017620(v9, &v16);
    if (v14 < 0) {
      operator delete((void *)__p.n128_u64[0]);
    }
    sub_10000AC00(&__p, "TimeSyncStatus");
    BOOL v10 = sub_10000ED88(a3, &__p);
    sub_100070E8C(v10, &v15);
    if (v14 < 0) {
      operator delete((void *)__p.n128_u64[0]);
    }
    uint64_t v11 = 0LL;
  }

  sub_10000D448((uint64_t)&v17);
  return v11;
}

void sub_10006D748( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
}

uint64_t sub_10006D780( _WORD *a1, uint64_t a2, std::string *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return 0LL;
}

void sub_10006D828( uint64_t a1, uint64_t a2, uint64_t **a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v27 = 0LL;
  __int16 v26 = 0;
  if (!(_DWORD)a2) {
    return;
  }
  uint64_t v9 = a2;
  while (2)
  {
    unsigned int v11 = spinel_datatype_unpack((_WORD *)a1, v9, "t(CD)", a4, a5, a6, a7, a8, (uint64_t)&v28);
    if ((v11 & 0x80000000) == 0)
    {
      unsigned int v12 = v11;
      BOOL v13 = v9 >= v11;
      uint64_t v9 = v9 - v11;
      if (v13)
      {
        char v14 = (unsigned __int8 *)(a1 + 3);
        uint64_t v27 = a1 + 3;
        switch(v28)
        {
          case 1:
            sub_10000AC00(&__p, "PDU count");
            char v15 = sub_10000ED88(a3, &__p);
            sub_100017F70(v15, (_DWORD *)(a1 + 3));
            goto LABEL_11;
          case 2:
            int v23 = *v14;
            sub_10000AC00(&__p, "LQI");
            uint64_t v16 = sub_10000ED88(a3, &__p);
            sub_100017F70(v16, &v23);
            goto LABEL_11;
          case 4:
            int v23 = *v14;
            sub_10000AC00(&__p, "Link margin");
            char v17 = sub_10000ED88(a3, &__p);
            sub_100017F70(v17, &v23);
            goto LABEL_11;
          case 8:
            sub_10000AC00(&__p, "RSSI");
            timeval v18 = sub_10000ED88(a3, &__p);
            sub_100070E8C(v18, (_BYTE *)(a1 + 3));
LABEL_11:
            if (v25 < 0) {
              operator delete((void *)__p.n128_u64[0]);
            }
            a1 += v12;
            if (!(_DWORD)v9) {
              return;
            }
            continue;
          default:
            return;
        }
      }

      __int16 v21 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v21)
      {
        __darwin_time_t v22 = v21;
        if (sub_10015A058(4))
        {
          if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR)) {
            sub_100205F74();
          }
        }

        return;
      }

      if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
        return;
      }
LABEL_26:
      sub_1001FB53C();
      return;
    }

    break;
  }

  int v19 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (!v19)
  {
    if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      return;
    }
    goto LABEL_26;
  }

  int v20 = v19;
}

void sub_10006DA74( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_10006DA9C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v6;
  uint64_t v6 = *a1;
  uint64_t v4 = v6;
  *a1 = v3;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
  }
  return a1;
}

std::string *sub_10006DAF4@<X0>(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v3 = (const std::string *)sub_10000F1B8(a1);
  if (!v3)
  {
    v5.__vftable = 0LL;
    std::bad_cast::bad_cast(&v5);
    v5.__vftable = (std::bad_cast_vtbl *)&off_1002ADCA8;
    sub_10000C268();
  }

  return std::string::basic_string(a2, v3);
}

void sub_10006DB50( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::bad_cast a10)
{
}

uint64_t sub_10006DB64(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (!a1[72758]) {
    return 0LL;
  }
  if (*((_DWORD *)a2 + 2) != -16777216 || *((_WORD *)a2 + 6) != 254) {
    return 0LL;
  }
  if (a2[14] == 252)
  {
    return 0LL;
  }

  BOOL v4 = *a2 == 254 && (a2[1] & 0xC0) == 128;
  __darwin_time_t v7 = a1 + 1432;
  if (sub_100159E98(a1 + 1432, 8LL)) {
    return *v7 == *(void *)a2 || v4;
  }
  return v4;
}

void sub_10006DC2C(uint64_t a1)
{
  uint64_t v1 = *(uint64_t **)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *v1;
  *(void *)(v3 + 8) = v1[1];
  *(void *)v1[1] = v3;
  BOOL v4 = v2 != 0;
  uint64_t v5 = v2 - 1;
  if (v4)
  {
    *(void *)(a1 + 16) = v5;
    sub_10000C1D8(a1, v1);
  }

  else
  {
    __break(0x5515u);
  }

uint64_t sub_10006DC54( uint64_t a1, uint64_t a2, _WORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if ((_DWORD)a2 == 5387)
  {
    uint64_t v23 = (uint64_t)&v23;
    __darwin_time_t v24 = &v23;
    uint64_t v25 = 0LL;
    if (!sub_10007EDE8(a3, a4, &v23) && v25)
    {
      char v14 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v14)
      {
        if (sub_10015A058(6) && os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
        {
          sub_10007F534((uint64_t)(v24 + 2), __p);
          char v15 = v20 >= 0 ? __p : (void **)__p[0];
          *(_DWORD *)__n128 buf = 136315138;
          __darwin_time_t v22 = v15;
          _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_INFO,  "[-NCP-]: Neighbor(Router) entry removed: %s",  buf,  0xCu);
          if (v20 < 0) {
            operator delete(__p[0]);
          }
        }
      }

      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        sub_1001FB53C();
      }
    }

    sub_100071430(&v23);
  }

  else if ((_DWORD)a2 == 82)
  {
    sub_10007E168(&v23);
    if (!sub_10007E568(a3, a4, (uint64_t)&v23))
    {
      unsigned int v12 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (v12)
      {
        if (sub_10015A058(6) && os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
        {
          sub_10007F534((uint64_t)&v23, __p);
          BOOL v13 = v20 >= 0 ? __p : (void **)__p[0];
          *(_DWORD *)__n128 buf = 136315138;
          __darwin_time_t v22 = v13;
          _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_INFO,  "[-NCP-]: ChildTable entry removed: %s",  buf,  0xCu);
          if (v20 < 0) {
            operator delete(__p[0]);
          }
        }
      }

      else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        sub_1001FB53C();
      }

      sub_10000AC00(__p, "Thread:ChildTable:RemoveChild");
      sub_10007FB68((uint64_t)&v23, (uint64_t)buf);
      uint64_t v16 = operator new(0x20uLL);
      void *v16 = off_1002ADCD0;
      sub_100044D20(v16 + 1, buf);
      timeval v18 = v16;
      (*(void (**)(uint64_t, void **, void **))(*(void *)a1 + 360LL))(a1, __p, &v18);
      if (v18) {
        (*(void (**)(void *))(*v18 + 8LL))(v18);
      }
      sub_10000D448((uint64_t)buf);
      if (v20 < 0) {
        operator delete(__p[0]);
      }
    }

    sub_1000714B8(v26);
  }

  return sub_10015A014(a1 + 32, 2885615619LL, (uint64_t)a3, a4, a5, a6, a7, a8, a2);
}

void sub_10006DF48( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, char a20, uint64_t a21, uint64_t a22, char a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31)
{
}

void *sub_10006DFD0(uint64_t a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6 = (_BYTE *)(a1 + 72757);
  sub_1000DAC24(a1, a2, a3);
  BOOL v7 = sub_1000B50F4(a3);
  if (a2 == 4 && v7) {
    v6[1148] = 0;
  }
  if (sub_1000B5098(a2) && !sub_1000B5098(a3))
  {
    *uint64_t v6 = 1;
    sub_1000798B4((uint64_t)v24, a1);
    sub_100034C60("Cii", v23, 0x80u);
    uint64_t v11 = sub_100079A40((uint64_t)v24, (uint64_t)v23);
    sub_100034C60("Cii", (uint64_t *)&v21, 0x80u);
    uint64_t v12 = sub_100079A40(v11, (uint64_t)&v21);
    sub_100034C60("Cii", (uint64_t *)v20, 0x80u);
    uint64_t v13 = sub_100079A40(v12, (uint64_t)v20);
    sub_100034C60("Cii", (uint64_t *)v19, 0x80u);
    uint64_t v14 = sub_100079A40(v13, (uint64_t)v19);
    sub_100034C60("Cii", (uint64_t *)v18, 0x80u);
    uint64_t v15 = sub_100079A40(v14, (uint64_t)v18);
    sub_100034C60("Cii", (uint64_t *)v17, 0x80u);
    uint64_t v16 = sub_100079A40(v15, (uint64_t)v17);
    sub_10007A86C(v16, &v29);
    sub_10004E9A4(a1, &v29);
    sub_10000F9EC(&v30);
    uint64_t v31 = v17;
    sub_100006F6C((void ***)&v31);
    v17[0] = (void **)v18;
    sub_100006F6C(v17);
    v18[0] = (void **)v19;
    sub_100006F6C(v18);
    v19[0] = (void **)v20;
    sub_100006F6C(v19);
    v20[0] = (void **)&v21;
    sub_100006F6C(v20);
    __int16 v21 = v23;
    char v10 = (void ***)&v21;
    goto LABEL_11;
  }

  uint64_t result = (void *)sub_1000B50A8(a2);
  if ((_DWORD)result)
  {
    uint64_t result = (void *)sub_1000B50A8(a3);
    if ((result & 1) == 0)
    {
      uint64_t result = (void *)sub_100159E98((unsigned __int8 *)(a1 + 1432), 8LL);
      if ((result & 1) == 0)
      {
        sub_1000798B4((uint64_t)v24, a1);
        sub_100034C60("Cii", v23, 0x80u);
        uint64_t v9 = sub_100079A40((uint64_t)v24, (uint64_t)v23);
        sub_10007A86C(v9, (uint64_t *)&v21);
        sub_10004E9A4(a1, (uint64_t *)&v21);
        sub_10000F9EC(&v22);
        v20[0] = (void **)v23;
        char v10 = v20;
LABEL_11:
        sub_100006F6C(v10);
        sub_10004BF94(v28);
        sub_10004BED0(v27);
        sub_10004BEF8(v26);
        return sub_100006E7C(v25);
      }
    }
  }

  return result;
}

void sub_10006E2C8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, void **a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, char a28, uint64_t a29, uint64_t a30, uint64_t a31)
{
  a22 = (void **)&a28;
  sub_100006F6C(&a22);
  sub_1000454AC(&a31);
  _Unwind_Resume(a1);
}

void sub_10006E3B8( uint64_t *a1, int a2, _WORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if ((a2 - 6) > 2)
  {
    sub_10015A014((uint64_t)(a1 + 4), a2 | 0xAB000000, (uint64_t)a3, a4, a5, a6, a7, a8, *(unsigned __int8 *)a3);
  }

  else if (spinel_datatype_unpack(a3, a4, "CiiD", a4, a5, a6, a7, a8, 0LL) == -1)
  {
    uint64_t v14 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v14)
    {
      uint64_t v15 = v14;
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }
  }

  else
  {
    switch(a2)
    {
      case 8:
        sub_10006DC54((uint64_t)a1, 0LL, 0LL, 0LL, v10, v11, v12, v13);
        break;
      case 7:
        sub_10006CB4C((uint64_t)a1, 0LL, 0LL, 0LL, v10, v11, v12, v13);
        break;
      case 6:
        sub_100066210(a1, 0LL, 0LL, 0LL, v10, v11, v12, v13);
        break;
    }
  }

void *sub_10006E50C(uint64_t a1, void *a2, int a3, uint64_t *a4)
{
  BOOL v8 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v8)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      sub_100108154(a2, &__p);
      if (v13 >= 0) {
        p_p = &__p;
      }
      else {
        p_p = __p;
      }
      *(_DWORD *)__n128 buf = 136315394;
      *(void *)&uint8_t buf[4] = p_p;
      __int16 v20 = 1024;
      int v21 = a3;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "Adding address %s/%d to NCP", buf, 0x12u);
      if (v13 < 0) {
        operator delete(__p);
      }
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  sub_10007993C((uint64_t)v14, a4);
  sub_100034C60("Cii6CLL", (uint64_t *)&__p, 0x80u);
  sub_100079A40((uint64_t)v14, (uint64_t)&__p);
  *(void *)__n128 buf = &__p;
  sub_100006F6C((void ***)buf);
  sub_10007A86C((uint64_t)v14, (uint64_t *)&__p);
  sub_10004E9A4(a1, (uint64_t *)&__p);
  sub_10000F9EC(&v12);
  sub_10004BF94(v18);
  sub_10004BED0(v17);
  sub_10004BEF8(v16);
  return sub_100006E7C(v15);
}

void sub_10006E6F8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
}

void *sub_10006E748(uint64_t a1, void *a2, int a3, uint64_t *a4)
{
  BOOL v8 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v8)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      sub_100108154(a2, &__p);
      if (v13 >= 0) {
        p_p = &__p;
      }
      else {
        p_p = __p;
      }
      *(_DWORD *)__n128 buf = 136315394;
      *(void *)&uint8_t buf[4] = p_p;
      __int16 v20 = 1024;
      int v21 = a3;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "Removing address %s/%d from NCP", buf, 0x12u);
      if (v13 < 0) {
        operator delete(__p);
      }
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  sub_10007993C((uint64_t)v14, a4);
  sub_100034C60("Cii6C", (uint64_t *)&__p, 0x80u);
  sub_100079A40((uint64_t)v14, (uint64_t)&__p);
  *(void *)__n128 buf = &__p;
  sub_100006F6C((void ***)buf);
  sub_10007A86C((uint64_t)v14, (uint64_t *)&__p);
  sub_10004E9A4(a1, (uint64_t *)&__p);
  sub_10000F9EC(&v12);
  sub_10004BF94(v18);
  sub_10004BED0(v17);
  sub_10004BEF8(v16);
  return sub_100006E7C(v15);
}

void sub_10006E92C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
}

void *sub_10006E97C(uint64_t a1, void *a2, uint64_t *a3)
{
  uint64_t v6 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v6)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      sub_100108154(a2, &__p);
      if (v11 >= 0) {
        p_p = &__p;
      }
      else {
        p_p = __p;
      }
      *(_DWORD *)__n128 buf = 136315138;
      *(void *)&uint8_t buf[4] = p_p;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_INFO,  "Adding multicast address %s to NCP",  buf,  0xCu);
      if (v11 < 0) {
        operator delete(__p);
      }
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  sub_10007993C((uint64_t)v12, a3);
  sub_100034C60("Cii6", (uint64_t *)&__p, 0x80u);
  sub_100079A40((uint64_t)v12, (uint64_t)&__p);
  *(void *)__n128 buf = &__p;
  sub_100006F6C((void ***)buf);
  sub_10007A86C((uint64_t)v12, (uint64_t *)&__p);
  sub_10004E9A4(a1, (uint64_t *)&__p);
  sub_10000F9EC(&v10);
  sub_10004BF94(v16);
  sub_10004BED0(v15);
  sub_10004BEF8(v14);
  return sub_100006E7C(v13);
}

void sub_10006EB3C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
}

void *sub_10006EB8C(uint64_t a1, void *a2, uint64_t *a3)
{
  uint64_t v6 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v6)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      sub_100108154(a2, &__p);
      if (v11 >= 0) {
        p_p = &__p;
      }
      else {
        p_p = __p;
      }
      *(_DWORD *)__n128 buf = 136315138;
      *(void *)&uint8_t buf[4] = p_p;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_INFO,  "Removing multicast address %s from NCP",  buf,  0xCu);
      if (v11 < 0) {
        operator delete(__p);
      }
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  sub_10007993C((uint64_t)v12, a3);
  sub_100034C60("Cii6", (uint64_t *)&__p, 0x80u);
  sub_100079A40((uint64_t)v12, (uint64_t)&__p);
  *(void *)__n128 buf = &__p;
  sub_100006F6C((void ***)buf);
  sub_10007A86C((uint64_t)v12, (uint64_t *)&__p);
  sub_10004E9A4(a1, (uint64_t *)&__p);
  sub_10000F9EC(&v10);
  sub_10004BF94(v16);
  sub_10004BED0(v15);
  sub_10004BEF8(v14);
  return sub_100006E7C(v13);
}

void sub_10006ED4C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
}

void *sub_10006ED9C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6)
{
  uint64_t v9 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v9)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      LODWORD(buf) = 67109120;
      HIDWORD(buf) = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_INFO,  "Adding service with enterprise number:%u to NCP",  (uint8_t *)&buf,  8u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  LODWORD(buf) = 1029;
  if (sub_100007684(a1 + 72792, (unsigned int *)&buf))
  {
    sub_10007A7D8((uint64_t)v13, 160);
    sub_10007993C((uint64_t)v13, a6);
    sub_100034C60("CiiLdbd", &buf, 0x80u);
    sub_100079A40((uint64_t)v13, (uint64_t)&buf);
    p_uint64_t buf = (void **)&buf;
    sub_100006F6C(&p_buf);
    sub_10007A86C((uint64_t)v13, &buf);
    sub_10004E9A4(a1, &buf);
    sub_10000F9EC(&v20);
  }

  else
  {
    uint64_t v10 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v10)
    {
      if (sub_10015A058(3) && os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      {
        char v11 = spinel_capability_to_cstr(1029);
        sub_1002060DC((uint64_t)v11, (uint64_t)&buf, v10);
      }
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }

    sub_100006FF8(a6);
  }

  sub_10004BF94(v17);
  sub_10004BED0(v16);
  sub_10004BEF8(v15);
  return sub_100006E7C(v14);
}

void sub_10006F004( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
}

void *sub_10006F05C(uint64_t a1, int a2, uint64_t a3, uint64_t *a4)
{
  BOOL v7 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v7)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      LODWORD(buf) = 67109120;
      HIDWORD(buf) = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_INFO,  "Removing service with enterprise number:%u from NCP",  (uint8_t *)&buf,  8u);
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  LODWORD(buf) = 1029;
  if (sub_100007684(a1 + 72792, (unsigned int *)&buf))
  {
    sub_10007A7D8((uint64_t)v11, 160);
    sub_10007993C((uint64_t)v11, a4);
    sub_100034C60("CiiLd", &buf, 0x80u);
    sub_100079A40((uint64_t)v11, (uint64_t)&buf);
    p_uint64_t buf = (void **)&buf;
    sub_100006F6C(&p_buf);
    sub_10007A86C((uint64_t)v11, &buf);
    sub_10004E9A4(a1, &buf);
    sub_10000F9EC(&v18);
  }

  else
  {
    BOOL v8 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v8)
    {
      if (sub_10015A058(3) && os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      {
        uint64_t v9 = spinel_capability_to_cstr(1029);
        sub_1002060DC((uint64_t)v9, (uint64_t)&buf, v8);
      }
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }

    sub_100006FF8(a4);
  }

  sub_10004BF94(v15);
  sub_10004BED0(v14);
  sub_10004BEF8(v13);
  return sub_100006E7C(v12);
}

void sub_10006F29C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void *sub_10006F2F4(uint64_t a1, void *a2, int a3, uint64_t a4, uint64_t a5, uint64_t *a6)
{
  uint64_t v10 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v10)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      sub_100108154(a2, &__p);
      if (v15 >= 0) {
        p_p = &__p;
      }
      else {
        p_p = __p;
      }
      *(_DWORD *)uint64_t buf = 136315394;
      *(void *)&uint8_t buf[4] = p_p;
      __int16 v22 = 1024;
      int v23 = a3;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_INFO,  "Adding on-mesh prefix %s/%d to NCP",  buf,  0x12u);
      if (v15 < 0) {
        operator delete(__p);
      }
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  sub_10007A7D8((uint64_t)v16, 93);
  sub_10007993C((uint64_t)v16, a6);
  sub_100034C60("Cii6CbCbSC", (uint64_t *)&__p, 0x80u);
  sub_100079A40((uint64_t)v16, (uint64_t)&__p);
  *(void *)uint64_t buf = &__p;
  sub_100006F6C((void ***)buf);
  sub_10007A86C((uint64_t)v16, (uint64_t *)&__p);
  sub_10004E9A4(a1, (uint64_t *)&__p);
  sub_10000F9EC(&v14);
  sub_10004BF94(v20);
  sub_10004BED0(v19);
  sub_10004BEF8(v18);
  return sub_100006E7C(v17);
}

void sub_10006F508( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
}

void *sub_10006F558(uint64_t a1, void *a2, int a3, uint64_t a4, uint64_t a5, uint64_t *a6)
{
  uint64_t v10 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v10)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      sub_100108154(a2, &__p);
      if (v15 >= 0) {
        p_p = &__p;
      }
      else {
        p_p = __p;
      }
      *(_DWORD *)uint64_t buf = 136315394;
      *(void *)&uint8_t buf[4] = p_p;
      __int16 v22 = 1024;
      int v23 = a3;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_INFO,  "Removing on-mesh prefix %s/%d from NCP",  buf,  0x12u);
      if (v15 < 0) {
        operator delete(__p);
      }
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  sub_10007A7D8((uint64_t)v16, 93);
  sub_10007993C((uint64_t)v16, a6);
  sub_100034C60("Cii6CbC", (uint64_t *)&__p, 0x80u);
  sub_100079A40((uint64_t)v16, (uint64_t)&__p);
  *(void *)uint64_t buf = &__p;
  sub_100006F6C((void ***)buf);
  sub_10007A86C((uint64_t)v16, (uint64_t *)&__p);
  sub_10004E9A4(a1, (uint64_t *)&__p);
  sub_10000F9EC(&v14);
  sub_10004BF94(v20);
  sub_10004BED0(v19);
  sub_10004BEF8(v18);
  return sub_100006E7C(v17);
}

void sub_10006F764( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
}

void *sub_10006F7B4(uint64_t a1, void *a2, int a3, int a4, uint64_t a5, uint64_t a6, uint64_t *a7)
{
  uint64_t v12 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v12)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
    {
      sub_100108154(a2, v20);
      int v13 = v21;
      uint64_t v14 = (void **)v20[0];
      sub_1000FC6F0(a4, __p);
      char v15 = v20;
      if (v13 < 0) {
        char v15 = v14;
      }
      uint64_t v16 = __p;
      if (v19 < 0) {
        uint64_t v16 = (void **)__p[0];
      }
      *(_DWORD *)uint64_t buf = 136315650;
      char v28 = v15;
      __int16 v29 = 1024;
      int v30 = a3;
      __int16 v31 = 2080;
      char v32 = v16;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_INFO,  "Adding off-mesh route %s/%d with preference %s to NCP",  buf,  0x1Cu);
      if (v19 < 0) {
        operator delete(__p[0]);
      }
      if (v21 < 0) {
        operator delete(v20[0]);
      }
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  sub_10007A7D8((uint64_t)v22, 93);
  sub_10007993C((uint64_t)v22, a7);
  sub_100034C60("Cii6CbC", (uint64_t *)buf, 0x80u);
  sub_100079A40((uint64_t)v22, (uint64_t)buf);
  v20[0] = buf;
  sub_100006F6C((void ***)v20);
  sub_10007A86C((uint64_t)v22, (uint64_t *)buf);
  sub_10004E9A4(a1, (uint64_t *)buf);
  sub_10000F9EC((uint64_t *)((char *)&v28 + 4));
  sub_10004BF94(v26);
  sub_10004BED0(v25);
  sub_10004BEF8(v24);
  return sub_100006E7C(v23);
}

void sub_10006FA20( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20, int a21, __int16 a22, char a23, char a24, uint64_t a25)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  sub_1000454AC(&a25);
  _Unwind_Resume(a1);
}

uint64_t sub_10006FA88(int a1, int a2)
{
  if (a1 == -1) {
    char v2 = -64;
  }
  else {
    char v2 = 0;
  }
  if (a1 == 1) {
    char v2 = 64;
  }
  if (a2) {
    v2 |= 0x20u;
  }
  return v2 & 0xE0;
}

void *sub_10006FAB4(uint64_t a1, void *a2, int a3, int a4, uint64_t a5, uint64_t *a6)
{
  char v11 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v11)
  {
    if (sub_10015A058(5) && os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      sub_100108154(a2, v19);
      int v12 = v20;
      int v13 = (void **)v19[0];
      sub_1000FC6F0(a4, __p);
      uint64_t v14 = v19;
      if (v12 < 0) {
        uint64_t v14 = v13;
      }
      if (v18 >= 0) {
        char v15 = __p;
      }
      else {
        char v15 = (void **)__p[0];
      }
      *(_DWORD *)uint64_t buf = 136315650;
      uint64_t v27 = v14;
      __int16 v28 = 1024;
      int v29 = a3;
      __int16 v30 = 2080;
      __int16 v31 = v15;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_INFO,  "Removing off-mesh route %s/%d with preference %s from NCP",  buf,  0x1Cu);
      if (v18 < 0) {
        operator delete(__p[0]);
      }
      if (v20 < 0) {
        operator delete(v19[0]);
      }
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

  sub_10007A7D8((uint64_t)v21, 93);
  sub_10007993C((uint64_t)v21, a6);
  sub_100034C60("Cii6CbC", (uint64_t *)buf, 0x80u);
  sub_100079A40((uint64_t)v21, (uint64_t)buf);
  v19[0] = buf;
  sub_100006F6C((void ***)v19);
  sub_10007A86C((uint64_t)v21, (uint64_t *)buf);
  sub_10004E9A4(a1, (uint64_t *)buf);
  sub_10000F9EC((uint64_t *)((char *)&v27 + 4));
  sub_10004BF94(v25);
  sub_10004BED0(v24);
  sub_10004BEF8(v23);
  return sub_100006E7C(v22);
}

void sub_10006FD0C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20, int a21, __int16 a22, char a23, char a24, uint64_t a25)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  sub_1000454AC(&a25);
  _Unwind_Resume(a1);
}

void sub_10006FD74(_BYTE *a1, int a2, _WORD *a3, uint64_t a4)
{
  int v8 = sub_10015A044(0);
  char v9 = v8;
  sub_10015A044(v8);
  if ((v9 & 0x40) == 0) {
    return;
  }
  char v52 = 0;
  unsigned int v51 = 0;
  uint64_t v50 = 0LL;
  unsigned int v49 = 0;
  char v15 = a2 ? "[NCP->]" : "[->NCP]";
  char v16 = v52;
  __int16 v22 = spinel_command_to_cstr(v51);
  int v23 = v16 & 0xF;
  if (((1 << v51) & 0x1FC) == 0)
  {
    if (((1 << v51) & 0x403) != 0)
    {
      uint64_t v33 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (!v33)
      {
        if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          return;
        }
        goto LABEL_40;
      }

      int v64 = 136315650;
      __int16 v65 = v15;
      __int16 v66 = 1024;
      int v67 = v23;
      __int16 v68 = 2080;
      uint64_t v69 = v22;
      int v29 = "%s (%d) %s";
      __int16 v30 = (uint8_t *)&v64;
      __int16 v31 = v33;
      uint32_t v32 = 28;
    }

    else
    {
      if (((1 << v51) & 0x1C0000) != 0)
      {
        *(_DWORD *)__n128 __p = 0;
        LOWORD(v47) = 0;
        __int16 v28 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v28)
        {
          int v64 = 136316162;
          __int16 v65 = v15;
          __int16 v66 = 1024;
          int v67 = v23;
          __int16 v68 = 2080;
          uint64_t v69 = v22;
          __int16 v70 = 1024;
          unsigned int v71 = *(_DWORD *)__p;
          __int16 v72 = 1024;
          int v73 = (unsigned __int16)v47;
          int v29 = "%s (%d) %s(0x%x, %d)";
          __int16 v30 = (uint8_t *)&v64;
          __int16 v31 = v28;
          uint32_t v32 = 40;
          goto LABEL_95;
        }

        if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          return;
        }
LABEL_40:
        sub_1001FB53C();
        return;
      }

      uint64_t v34 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
      if (!v34)
      {
        if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          return;
        }
        goto LABEL_40;
      }

      int v64 = 136315906;
      __int16 v65 = v15;
      __int16 v66 = 1024;
      int v67 = v23;
      __int16 v68 = 2080;
      uint64_t v69 = v22;
      __int16 v70 = 1024;
      unsigned int v71 = v51;
      int v29 = "%s (%d) %s(cmd_id:%d)";
      __int16 v30 = (uint8_t *)&v64;
      __int16 v31 = v34;
      uint32_t v32 = 34;
    }

LABEL_95:
    _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_INFO, v29, v30, v32);
    return;
  }

  int v48 = 0;
  char v47 = 0LL;
  unsigned int v46 = 0;
  __darwin_time_t v24 = spinel_prop_key_to_cstr(v48);
  int v25 = 1;
  if (v48 > 5399)
  {
    switch(v48)
    {
      case 5400:
        if (a2 != 1) {
          goto LABEL_77;
        }
        if (!v23)
        {
          sub_1000573A8((uint64_t)a1, a1 + 73104, 5400LL, v47, v46);
          __int16 v36 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (v36)
          {
            if (sub_10015A058(6) && os_log_type_enabled(v36, OS_LOG_TYPE_INFO))
            {
              *(_WORD *)__n128 __p = 0;
              _os_log_impl( (void *)&_mh_execute_header,  v36,  OS_LOG_TYPE_INFO,  "Logging received THREAD_ACTIVE_DATASET as: ",  __p,  2u);
            }
          }

          else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
          {
            sub_1001FB53C();
          }

          sub_100145208((uint64_t)(a1 + 73104));
          sub_10000AC00(__p, "ActiveDataSetChanged");
          __int16 v39 = operator new(0x10uLL);
          *(void *)__int16 v39 = &off_1002AEA00;
          v39[8] = 1;
          uint64_t v45 = v39;
          (*(void (**)(_BYTE *, _BYTE *, _BYTE **))(*(void *)a1 + 360LL))(a1, __p, &v45);
          if (v45) {
            (*(void (**)(_BYTE *))(*(void *)v45 + 8LL))(v45);
          }
          if (SBYTE3(v57) < 0) {
            operator delete(*(void **)__p);
          }
          goto LABEL_77;
        }

        uint64_t v35 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v35)
        {
          *(_DWORD *)__n128 __p = 67109120;
          *(_DWORD *)&__p[4] = v23;
LABEL_55:
          _os_log_impl( (void *)&_mh_execute_header,  v35,  OS_LOG_TYPE_INFO,  "Not Adding THREAD_ACTIVE_DATASET to Keychain (only unsolicitied one to be added) tid: %d",  __p,  8u);
          goto LABEL_77;
        }

        if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          goto LABEL_77;
        }
        break;
      case 5401:
        if (a2 != 1)
        {
LABEL_77:
          sub_100159A78((unint64_t)v47, v46, &v64, 0x401uLL, 0);
          int v25 = 0;
          goto LABEL_78;
        }

        if (!v23)
        {
          uint64_t v37 = (uint64_t)(a1 + 73376);
          sub_1000573A8((uint64_t)a1, a1 + 73376, 5401LL, v47, v46);
          int v38 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (v38)
          {
            if (sub_10015A058(6) && os_log_type_enabled(v38, OS_LOG_TYPE_INFO))
            {
              *(_WORD *)__n128 __p = 0;
              _os_log_impl( (void *)&_mh_execute_header,  v38,  OS_LOG_TYPE_INFO,  "Logging received THREAD_PENDING_DATASET as: ",  __p,  2u);
            }
          }

          else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
          {
            sub_1001FB53C();
          }

          sub_100145208(v37);
          goto LABEL_77;
        }

        uint64_t v35 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v35)
        {
          *(_DWORD *)__n128 __p = 67109120;
          *(_DWORD *)&__p[4] = v23;
          goto LABEL_55;
        }

        if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
          goto LABEL_77;
        }
        break;
      case 5437:
        goto LABEL_78;
      default:
        goto LABEL_77;
    }

    sub_1001FB53C();
    goto LABEL_77;
  }

  uint64_t v26 = (v48 - 70);
  if (((1LL << (v48 - 70)) & 0x2000000000000021LL) == 0)
  {
    if (v26 == 59)
    {
      sub_10000AC00(__p, "CommissioningIsInProgress");
      uint64_t v27 = operator new(0x10uLL);
      *(void *)uint64_t v27 = &off_1002AEA00;
      uint8_t v27[8] = 1;
      uint64_t v45 = v27;
      (*(void (**)(_BYTE *, _BYTE *, _BYTE **))(*(void *)a1 + 360LL))(a1, __p, &v45);
      if (v45) {
        (*(void (**)(_BYTE *))(*(void *)v45 + 8LL))(v45);
      }
      if (SBYTE3(v57) < 0) {
        operator delete(*(void **)__p);
      }
      goto LABEL_78;
    }

    goto LABEL_77;
  }

        __int16 v56 = *v4;
        if ((v56 & 0x80000000) != 0)
        {
          __int16 v68 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
          if (v68)
          {
            uint64_t v69 = v68;
          }

          else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
          {
            sub_1001FB53C();
          }

          sub_1000EA7AC(a1, 9);
          goto LABEL_123;
        }

        if (!(_DWORD)v56
          || (sub_100113F90((void *)a1, (_BYTE *)(v5 + 1300), (unsigned __int8 *)(a1 + 68790), v56) & 1) == 0)
        {
          *BOOL v4 = 0;
          goto LABEL_25;
        }

        uint64_t v57 = *v4;
        *(_WORD *)(v5 + 3) = *v4;
        __int16 v58 = __OFADD__(v57, 5);
        __int128 v59 = v57 + 5;
        if (v58) {
          goto LABEL_145;
        }
        *BOOL v4 = v59;
        *(_WORD *)uint64_t v5 = 896;
        __int16 v60 = *(unsigned __int8 *)(v5 + 1300);
        if (v60 == 3)
        {
          __int16 v61 = 115;
        }

        else
        {
          if (v60 != 2) {
            *(_BYTE *)uint64_t v5 = -112;
          }
          __int16 v61 = 114;
        }

        *(_BYTE *)(v5 + 2) = v61;
LABEL_31:
        uint64_t v26 = 0;
        uint64_t v27 = 0;
        v4[652] = 1;
        *((_BYTE *)v4 + 8) = 126;
        __int16 v28 = *v4;
        if ((int)v28 >= 1)
        {
          int v29 = 0LL;
          LOWORD(v30) = -1;
          while (1)
          {
            if (v29 == 1300) {
              goto LABEL_91;
            }
            __int16 v31 = *(unsigned __int8 *)(a1 + 68785 + v29);
            uint32_t v32 = (unsigned __int16)word_100227BB4[(v31 ^ v30)];
            if (v31 <= 0x7C)
            {
              if (v31 == 17 || v31 == 19)
              {
LABEL_45:
                uint64_t v35 = v4[652];
                if (__OFADD__((_DWORD)v35, 1)) {
                  goto LABEL_145;
                }
                v4[652] = v35 + 1;
                *(_BYTE *)(a1 + v35 + 700sub_10001C704(v1 - 96) = 125;
                uint64_t v33 = v4[652];
                if (__OFADD__(v33, 1)) {
                  goto LABEL_145;
                }
                v4[652] = v33 + 1;
                if (v33 >= 0xA28) {
                  goto LABEL_91;
                }
                LOBYTE(v31) = v31 ^ 0x20;
                goto LABEL_50;
              }
            }

            else if (v31 - 125 < 2 || v31 == 248)
            {
              goto LABEL_45;
            }

            uint64_t v33 = v4[652];
            if (__OFADD__(v33, 1)) {
              goto LABEL_145;
            }
            v4[652] = v33 + 1;
            if (v33 > 0xA27) {
              goto LABEL_91;
            }
LABEL_50:
            *(_BYTE *)(a1 + v33 + 700sub_10001C704(v1 - 96) = v31;
            ++v29;
            __int16 v30 = v32 ^ ((unsigned __int16)(v30 & 0xFF00) >> 8);
            if (v28 == v29)
            {
              uint64_t v26 = ~(_BYTE)v30;
              uint64_t v27 = ((unsigned __int16)~(_WORD)v30 >> 8);
              __int16 v36 = ~(_BYTE)v30;
              if (v36 <= 0x7C)
              {
                if (v36 != 17 && v36 != 19) {
                  break;
                }
              }

              else if (v36 - 125 >= 2 && v36 != 248)
              {
                break;
              }

              uint64_t v42 = v4[652];
              if (__OFADD__((_DWORD)v42, 1)) {
                goto LABEL_145;
              }
              v4[652] = v42 + 1;
              *(_BYTE *)(a1 + v42 + 700sub_10001C704(v1 - 96) = 125;
              uint64_t v37 = v4[652];
              if (__OFADD__(v37, 1)) {
                goto LABEL_145;
              }
              uint64_t v26 = v30 ^ 0xDF;
              v4[652] = v37 + 1;
              if (v37 >= 0xA28) {
                goto LABEL_91;
              }
              goto LABEL_68;
            }
          }
        }

        uint64_t v37 = v4[652];
        if (__OFADD__(v37, 1)) {
          goto LABEL_145;
        }
        v4[652] = v37 + 1;
        if (v37 <= 0xA27) {
          break;
        }
LABEL_91:
        __break(0x5512u);
      }

  int v43 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_txErrorTxAbortedTx));
  [v3 setObject:v43 forKey:@"tx_error_tx_aborted_tx"];

  int v8 = self->_has;
  if ((*(void *)&v8 & 0x400000000000LL) == 0)
  {
LABEL_38:
    if ((*(void *)&v8 & 0x100000000000LL) == 0) {
      goto LABEL_39;
    }
    goto LABEL_97;
  }

  PBDataWriterWriteUint32Field(v7, self->_txErrorTxAbortedTx, 34LL);
  uint64_t v6 = self->_has;
  if ((*(void *)&v6 & 0x400000000000LL) == 0)
  {
LABEL_38:
    if ((*(void *)&v6 & 0x100000000000LL) == 0) {
      goto LABEL_39;
    }
    goto LABEL_97;
  }

  v4[61] = self->_txErrorTxAbortedTx;
  *((void *)v4 + 31) |= 0x100000000000000uLL;
  uint64_t v6 = self->_has;
  if ((*(void *)&v6 & 0x400000000000LL) == 0)
  {
LABEL_38:
    if ((*(void *)&v6 & 0x100000000000LL) == 0) {
      goto LABEL_39;
    }
    goto LABEL_97;
  }

  *((_DWORD *)v6 + 49) = self->_txErrorInvalidAck;
  v6[31] |= 0x100000000000uLL;
  uint64_t v10 = self->_has;
  if ((*(void *)&v10 & 0x200000000000LL) == 0)
  {
LABEL_38:
    if ((*(void *)&v10 & 0x10000000000LL) == 0) {
      goto LABEL_39;
    }
    goto LABEL_97;
  }

  char v9 = 0LL;
  if ((*(void *)&v4 & 0x10000000000LL) != 0)
  {
LABEL_43:
    uint64_t v10 = 2654435761LL * self->_txErrorAckNoMem;
    if ((*(_BYTE *)&v4 & 0x80) != 0) {
      goto LABEL_44;
    }
    goto LABEL_97;
  }

  self->_txErrorTxAbortedCsmaPrepare = v5[58];
  *(void *)&self->_has |= 0x20000000000000uLL;
  char v9 = *((void *)v5 + 31);
  if ((v9 & 0x40000000000000LL) == 0)
  {
LABEL_42:
    if ((v9 & 0x80000000000000LL) == 0) {
      goto LABEL_43;
    }
    goto LABEL_97;
  }

        uint64_t v50 = (os_log_s *)v128;
LABEL_96:

        goto LABEL_97;
      }

      unsigned int v46 = sub_1000160F4("com.apple.wpantund.tnm", "threadStart");
      int v38 = (NSString *)objc_claimAutoreleasedReturnValue(v46);
      if (os_log_type_enabled((os_log_t)v38, OS_LOG_TYPE_ERROR))
      {
        char v47 = [v141 length];
        int v48 = [v140 length];
        *(_DWORD *)unsigned int v144 = 136315906;
        uint64_t v145 = "-[ThreadNetworkManagerInstance checkAndUpdateNetworkParamsFromMdnsScan:borderAgentID:leaderBorderAgentID:"
               "isNwFound:numAppleBRs:numThirdPartyBRs:isLeaderAppleDevice:numThreadNwsFound:shouldRunPeriodicTdm:]";
        uint64_t v146 = 1024;
        LODWORD(v147) = 6663;
        WORD2(v147) = 2048;
        *(void *)((char *)&v147 + 6) = v47;
        HIWORD(v147) = 2048;
        *(void *)char v148 = v48;
        __int16 v39 = (os_log_s *)v38;
        int v40 = "%s:%d Continuing... BorderAgent ID and XpanID length mismatch !!! xpan id length : %lu, border agent id length : %lu";
        char v41 = 38;
        goto LABEL_39;
      }
    }

    else
    {
      uint64_t v37 = sub_1000160F4("com.apple.wpantund.tnm", "threadStart");
      int v38 = (NSString *)objc_claimAutoreleasedReturnValue(v37);
      if (os_log_type_enabled((os_log_t)v38, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)unsigned int v144 = 136315650;
        uint64_t v145 = "-[ThreadNetworkManagerInstance checkAndUpdateNetworkParamsFromMdnsScan:borderAgentID:leaderBorderAgentID:"
               "isNwFound:numAppleBRs:numThirdPartyBRs:isLeaderAppleDevice:numThreadNwsFound:shouldRunPeriodicTdm:]";
        uint64_t v146 = 1024;
        LODWORD(v147) = 6650;
        WORD2(v147) = 2112;
        *(void *)((char *)&v147 + 6) = v23;
        __int16 v39 = (os_log_s *)v38;
        int v40 = "%s : %d cannot parse dictionary data for server : %@, continue to next network";
        char v41 = 28;
LABEL_39:
        _os_log_error_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_ERROR, v40, v144, v41);
      }
    }

LABEL_78:
  if (v51 != 2)
  {
    char v41 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v41)
    {
      if (sub_10015A058(6) && os_log_type_enabled(v41, OS_LOG_TYPE_INFO))
      {
        uint64_t v42 = (int *)"-- value hidden --";
        *(_DWORD *)__n128 __p = 136316418;
        if (!v25) {
          uint64_t v42 = &v64;
        }
        *(void *)&__p[4] = v15;
        if (v46 < 0x201) {
          int v43 = 1;
        }
        else {
          int v43 = v25;
        }
        __int16 v54 = 1024;
        int v55 = v23;
        __int16 v56 = 2080;
        uint64_t v57 = v22;
        if (v43) {
          uint64_t v44 = "";
        }
        else {
          uint64_t v44 = "...";
        }
        __int16 v58 = 2080;
        __int128 v59 = v24;
        __int16 v60 = 2080;
        __int16 v61 = v42;
        __int16 v62 = 2080;
        __int16 v63 = v44;
        int v29 = "%s (%d) %s(%s) [%s%s]";
        __int16 v30 = __p;
        __int16 v31 = v41;
        uint32_t v32 = 58;
        goto LABEL_95;
      }

      return;
    }

    if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      return;
    }
LABEL_98:
    sub_1001FB53C();
    return;
  }

  int v40 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (!v40)
  {
    if (!os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
      return;
    }
    goto LABEL_98;
  }

  if (sub_10015A058(6) && os_log_type_enabled(v40, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)__n128 __p = 136315906;
    *(void *)&__p[4] = v15;
    __int16 v54 = 1024;
    int v55 = v23;
    __int16 v56 = 2080;
    uint64_t v57 = v22;
    __int16 v58 = 2080;
    __int128 v59 = v24;
    int v29 = "%s (%d) %s(%s)";
    __int16 v30 = __p;
    __int16 v31 = v40;
    uint32_t v32 = 38;
    goto LABEL_95;
  }

  return v8;
}

  uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  self->_txDelay90perc));
  [v3 setObject:v26 forKey:@"tx_delay_90perc"];

  int v8 = self->_has;
  if ((*(_BYTE *)&v8 & 8) == 0)
  {
LABEL_21:
    if ((*(_WORD *)&v8 & 0x200) == 0) {
      goto LABEL_22;
    }
    goto LABEL_80;
  }

  PBDataWriterWriteUint32Field(v7, self->_txDelay90perc, 17LL);
  uint64_t v6 = self->_has;
  if ((*(_BYTE *)&v6 & 8) == 0)
  {
LABEL_21:
    if ((*(_WORD *)&v6 & 0x200) == 0) {
      goto LABEL_22;
    }
    goto LABEL_80;
  }

  v4[41] = self->_txDelay90perc;
  *((void *)v4 + 31) |= 0x1000000000uLL;
  uint64_t v6 = self->_has;
  if ((*(_BYTE *)&v6 & 8) == 0)
  {
LABEL_21:
    if ((*(_WORD *)&v6 & 0x200) == 0) {
      goto LABEL_22;
    }
    goto LABEL_80;
  }

  *((_DWORD *)v6 + 11) = self->_receivingTime;
  v6[31] |= 0x200uLL;
  uint64_t v10 = self->_has;
  if ((*(void *)&v10 & 0x800000000LL) == 0)
  {
LABEL_21:
    if ((*(void *)&v10 & 0x400000000LL) == 0) {
      goto LABEL_22;
    }
    goto LABEL_80;
  }

  uint64_t v44 = 0LL;
  if ((*(void *)&v4 & 0x400000000LL) != 0)
  {
LABEL_26:
    int v43 = 2654435761LL * self->_transmittedFrames;
    if ((*(void *)&v4 & 0x1000000000000LL) != 0) {
      goto LABEL_27;
    }
    goto LABEL_80;
  }

  self->_retryInterval90perc = v5[12];
  *(void *)&self->_has |= 0x400uLL;
  char v9 = *((void *)v5 + 31);
  if ((v9 & 0x8000000000LL) == 0)
  {
LABEL_25:
    if ((v9 & 0x4000000000LL) == 0) {
      goto LABEL_26;
    }
    goto LABEL_80;
  }

  uint32_t v32 = a2->__r_.__value_.__s.__size_;
  if ((v32 & 0x80u) != 0LL) {
    uint32_t v32 = a2->__r_.__value_.__l.__size_;
  }
  if (!v32) {
    std::string::push_back(a2, 46);
  }
}

void sub_1000706A4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20, int a21, __int16 a22, char a23, char a24)
{
  if (a13) {
    (*(void (**)(uint64_t))(*(void *)a13 + 8LL))(a13);
  }
  if (a24 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100070718(uint64_t a1)
{
  char v2 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
  if (v2)
  {
    uint64_t v3 = v2;
    if (sub_10015A058(6))
    {
      if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
      {
        v4[0] = 67109120;
        v4[1] = sub_1000561A0(a1 + 74016);
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "TaskQueue state is  %d ", (uint8_t *)v4, 8u);
      }
    }
  }

  else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    sub_1001FB53C();
  }

BOOL sub_100070800(_DWORD *a1)
{
  return (sub_1000DB174(a1) & 1) != 0 || !sub_1000561A0((uint64_t)(a1 + 18504));
}

uint64_t sub_10007083C(uint64_t a1)
{
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 160LL))(a1);
  if ((result & 1) == 0)
  {
    uint64_t result = sub_1000561A0(a1 + 74016);
    if ((_DWORD)result)
    {
      uint64_t result = sub_1000B6320((void *)(a1 + 1608));
      uint64_t v3 = (_BYTE *)(a1 + 73905);
      if (*(unsigned __int8 *)(a1 + 73905) != (_DWORD)result)
      {
        char v4 = result;
        sub_1000798B4((uint64_t)v8, a1);
        *uint64_t v3 = v4;
        uint64_t v5 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
        if (v5)
        {
          if (sub_10015A058(6))
          {
            if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
            {
              int v6 = *v3;
              LODWORD(buf) = 67109120;
              HIDWORD(buf) = v6;
              _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_INFO,  "SNIFFER_TLF::SpinelNCPInstance::process mIsPcapInProgress[%d]",  (uint8_t *)&buf,  8u);
            }
          }
        }

        else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
        {
          sub_1001FB53C();
        }

        sub_100034C60("Ciib", &buf, 0x80u);
        sub_100079A40((uint64_t)v8, (uint64_t)&buf);
        p_uint64_t buf = (void **)&buf;
        sub_100006F6C(&p_buf);
        if (*v3)
        {
          sub_100034C60("Ciib", &buf, 0x80u);
          sub_100079A40((uint64_t)v8, (uint64_t)&buf);
          p_uint64_t buf = (void **)&buf;
          sub_100006F6C(&p_buf);
          int v7 = sub_1000D8DE8(a1);
          if (!sub_1000B50F4(v7))
          {
            sub_100034C60("CiiC", &buf, 0x80u);
            sub_100079A40((uint64_t)v8, (uint64_t)&buf);
            p_uint64_t buf = (void **)&buf;
            sub_100006F6C(&p_buf);
            sub_100034C60("CiiC", &buf, 0x80u);
            sub_100079A40((uint64_t)v8, (uint64_t)&buf);
            goto LABEL_16;
          }

          if (!*(_BYTE *)(a1 + 1405))
          {
LABEL_17:
            sub_10007A86C((uint64_t)v8, &buf);
            sub_10004E9A4(a1, &buf);
            sub_10000F9EC(&v15);
            sub_1000F3908((uint64_t *)a1);
            sub_10004BF94(v12);
            sub_10004BED0(v11);
            sub_10004BEF8(v10);
            return (uint64_t)sub_100006E7C(v9);
          }
        }

        sub_100034C60("CiiC", &buf, 0x80u);
        sub_100079A40((uint64_t)v8, (uint64_t)&buf);
LABEL_16:
        p_uint64_t buf = (void **)&buf;
        sub_100006F6C(&p_buf);
        goto LABEL_17;
      }
    }
  }

  return result;
}

void sub_100070B6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  *(void *)(v6 - 72) = v5;
  sub_100006F6C((void ***)(v6 - 72));
  sub_1000454AC((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100070BE0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 72752);
}

uint64_t sub_100070BF0(uint64_t a1, void *a2)
{
  *a2 = 0LL;
  a2[1] = 0LL;
  a2[2] = 0LL;
  uint64_t result = gettimeofday(&v5, &v4);
  if (is_mul_ok(v5.tv_sec, 0x3E8uLL))
  {
    if (!__CFADD__(1000 * v5.tv_sec, v5.tv_usec / 0x3E8uLL))
    {
      *a2 = 1000 * v5.tv_sec + v5.tv_usec / 0x3E8uLL;
      return result;
    }
  }

  else
  {
    __break(0x550Cu);
  }

  __break(0x5500u);
  return result;
}

void sub_100070C70(uint64_t a1, uint64_t *a2)
{
  if (!is_mul_ok(v9.tv_sec, 0x3E8uLL))
  {
    __break(0x550Cu);
    goto LABEL_14;
  }

  unint64_t v3 = 1000 * v9.tv_sec + v9.tv_usec / 0x3E8uLL;
  if (__CFADD__(1000 * v9.tv_sec, v9.tv_usec / 0x3E8uLL))
  {
LABEL_14:
    __break(0x5500u);
    return;
  }

  a2[1] = v3;
  BOOL v4 = v3 > *a2;
  unint64_t v5 = v3 - *a2;
  if (v4)
  {
    a2[2] = v5;
  }

  else
  {
    a2[2] = 3000LL;
    uint64_t v6 = (os_log_s *)sub_1000160F4("com.apple.wpantund", "default");
    if (v6)
    {
      int v7 = v6;
      if (sub_10015A058(3))
      {
        if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
          sub_100206118(a2 + 1, a2, v7);
        }
      }
    }

    else if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      sub_1001FB53C();
    }
  }

void sub_100070D78(uint64_t a1)
{
  uint64_t v1 = *(uint64_t **)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *v1;
  *(void *)(v3 + 8) = v1[1];
  *(void *)v1[1] = v3;
  BOOL v4 = v2 != 0;
  uint64_t v5 = v2 - 1;
  if (v4)
  {
    *(void *)(a1 + 16) = v5;
    sub_100010A14(a1, v1);
  }

  else
  {
    __break(0x5515u);
  }

uint64_t sub_100070DA0(uint64_t a1)
{
  return *(void *)(a1 + 8) + 16LL;
}

void sub_100070DAC(uint64_t *a1)
{
  if (a1[2])
  {
    uint64_t v3 = *a1;
    uint64_t v2 = (uint64_t *)a1[1];
    uint64_t v4 = *v2;
    *(void *)(v4 + 8) = *(void *)(*a1 + 8);
    **(void **)(v3 + 8) = v4;
    a1[2] = 0LL;
    while (v2 != a1)
    {
      uint64_t v5 = (uint64_t *)v2[1];
      sub_100010A14((uint64_t)a1, v2);
      uint64_t v2 = v5;
    }
  }

void *sub_100070E0C(void *a1)
{
  return a1;
}

uint64_t *sub_100070E34(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v6;
  uint64_t v6 = *a1;
  uint64_t v4 = v6;
  *a1 = v3;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
  }
  return a1;
}

uint64_t *sub_100070E8C(uint64_t *a1, _BYTE *a2)
{
  uint64_t v4 = operator new(0x10uLL);
  *(void *)uint64_t v4 = &off_1002B01F0;
  v4[8] = *a2;
  uint64_t v5 = *a1;
  *a1 = (uint64_t)v4;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
  }
  return a1;
}

void *sub_100070EE8(uint64_t **a1, std::string *a2)
{
  uint64_t v3 = a2;
  return sub_100070F1C(a1, (const void **)&a2->__r_.__value_.__l.__data_, (uint64_t)&unk_100226587, &v3) + 7;
}

void *sub_100070F1C(uint64_t **a1, const void **a2, uint64_t a3, const std::string **a4)
{
  int v7 = sub_10000AE50((uint64_t)a1, &v12, a2);
  char v8 = (void *)*v7;
  if (!*v7)
  {
    timeval v9 = (void **)v7;
    sub_100070FC4((uint64_t)a1, a3, a4, (uint64_t)v11);
    sub_10000AF70(a1, v12, v9, (void *)v11[0]);
    char v8 = v11[0];
    v11[0] = 0LL;
    sub_10000D3A4(v11, 0LL);
  }

  return v8;
}

std::string *sub_100070FC4@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, const std::string **a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a1 + 8;
  char v8 = (char *)operator new(0x40uLL);
  *(void *)a4 = v8;
  *(void *)(a4 + 8) = v7;
  *(_BYTE *)(a4 + 16) = 0;
  uint64_t result = sub_10000B034(v7, (std::string *)(v8 + 32), a2, a3);
  *(_BYTE *)(a4 + 16) = 1;
  return result;
}

void sub_100071030(_Unwind_Exception *a1)
{
}

void *sub_100071048(void *a1)
{
  return a1;
}

void *sub_100071070(void *a1)
{
  return a1;
}

uint64_t *sub_100071098(uint64_t *result, char *__src, uint64_t a3, unint64_t a4)
{
  uint64_t v7 = result;
  char v8 = (char *)*result;
  if (result[2] - *result < a4)
  {
    sub_100006F38((uint64_t)result);
    if ((a4 & 0x8000000000000000LL) != 0) {
      sub_10000CCF0();
    }
    unint64_t v9 = v7[2] - *v7;
    uint64_t v10 = 2 * v9;
    if (2 * v9 <= a4) {
      uint64_t v10 = a4;
    }
    if (v9 >= 0x3FFFFFFFFFFFFFFFLL) {
      size_t v11 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      size_t v11 = v10;
    }
    uint64_t result = (uint64_t *)sub_10000CCB0(v7, v11);
    char v8 = (char *)v7[1];
    goto LABEL_12;
  }

  uint64_t v12 = (_BYTE *)result[1];
  uint64_t v13 = v12 - v8;
  if (v12 - v8 >= a4)
  {
LABEL_12:
    size_t v15 = a3 - (void)__src;
    if (v15) {
      uint64_t result = (uint64_t *)memmove(v8, __src, v15);
    }
    char v16 = &v8[v15];
LABEL_20:
    v7[1] = (uint64_t)v16;
    return result;
  }

  if (v12 == v8)
  {
    uint64_t v14 = *result;
  }

  else
  {
    uint64_t result = (uint64_t *)memmove((void *)*result, __src, v12 - v8);
    uint64_t v14 = *v7;
    char v8 = (char *)v7[1];
  }

  if ((unint64_t)&v8[-v14] <= a4)
  {
    uint64_t v17 = &__src[v13];
    size_t v18 = a3 - (void)&__src[v13];
    if (v18) {
      uint64_t result = (uint64_t *)memmove(v8, v17, v18);
    }
    char v16 = &v8[v18];
    goto LABEL_20;
  }

  __break(0x5515u);
  return result;
}

uint64_t sub_1000711B4(uint64_t a1, int a2, int a3, uint64_t a4, char a5, uint64_t a6)
{
  *(void *)a1 = off_1002B2EA8;
  *(_DWORD *)(a1 + 8) = a2;
  *(_DWORD *)(a1 + 12) = a3;
  sub_10000CBF8((void *)(a1 + 16), a4);
  *(void *)a1 = off_1002B2F08;
  *(_BYTE *)(a1 + sub_10000D448(v16 - 40) = a5;
  sub_10000CBF8((void *)(a1 + 48), a6);
  return a1;
}

void sub_100071238(_Unwind_Exception *a1, uint64_t a2, ...)
{
  void *v2 = v3;
  sub_100006F6C((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100071254(uint64_t a1)
{
  *(void *)a1 = off_1002B2F08;
  uint64_t v3 = (void **)(a1 + 48);
  sub_100006F6C(&v3);
  *(void *)a1 = off_1002B2EA8;
  uint64_t v3 = (void **)(a1 + 16);
  sub_100006F6C(&v3);
  return a1;
}

char *sub_1000712BC(char *result, char *a2, char *a3, char *a4, uint64_t a5)
{
  uint64_t v5 = a2;
  if (a5 < 1) {
    return v5;
  }
  char v8 = result;
  uint64_t v9 = *((void *)result + 2);
  unint64_t v10 = *((void *)result + 1);
  if ((uint64_t)(v9 - v10) < a5)
  {
    uint64_t v11 = *(void *)result;
    unint64_t v12 = v10 - *(void *)result;
    BOOL v13 = __CFADD__(v12, a5);
    unint64_t v14 = v12 + a5;
    if (v13)
    {
      __break(0x5500u);
    }

    else if ((v14 & 0x8000000000000000LL) == 0)
    {
      uint64_t v15 = (uint64_t)&a2[-v11];
      unint64_t v16 = v9 - v11;
      if (2 * v16 > v14) {
        unint64_t v14 = 2 * v16;
      }
      if (v16 >= 0x3FFFFFFFFFFFFFFFLL) {
        size_t v17 = 0x7FFFFFFFFFFFFFFFLL;
      }
      else {
        size_t v17 = v14;
      }
      sub_100035540(v21, v17, v15, (uint64_t)(result + 16));
      sub_100035454((uint64_t)v21, a3, a5);
      uint64_t v5 = (char *)sub_10003547C((void **)v8, (uint64_t)v21, v5);
      sub_100035598((uint64_t)v21);
      return v5;
    }

    sub_10000CCF0();
  }

  uint64_t v18 = v10 - (void)a2;
  if ((uint64_t)(v10 - (void)a2) >= a5)
  {
    uint64_t v19 = &a3[a5];
LABEL_18:
    sub_100035414(v8, v5, v10, &v5[a5]);
    if (v19 != a3) {
      memmove(v5, a3, v19 - a3);
    }
    return v5;
  }

  if (!__OFSUB__(a5, v18))
  {
    uint64_t v19 = &a3[v18];
    int64_t v20 = a4 - &a3[v18];
    if (a4 != &a3[v18]) {
      memmove(*((void **)result + 1), &a3[v18], a4 - &a3[v18]);
    }
    *((void *)v8 + 1) = v10 + v20;
    if (v18 < 1) {
      return v5;
    }
    goto LABEL_18;
  }

  __break(0x5515u);
  return result;
}

void sub_10007141C(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void sub_100071430(uint64_t *a1)
{
  if (a1[2])
  {
    uint64_t v3 = *a1;
    uint64_t v2 = (uint64_t *)a1[1];
    uint64_t v4 = *v2;
    *(void *)(v4 + 8) = *(void *)(*a1 + 8);
    **(void **)(v3 + 8) = v4;
    a1[2] = 0LL;
    while (v2 != a1)
    {
      uint64_t v5 = (uint64_t *)v2[1];
      sub_100071490((uint64_t)a1, v2);
      uint64_t v2 = v5;
    }
  }

void sub_100071490(uint64_t a1, uint64_t *a2)
{
}

void sub_1000714B8(uint64_t *a1)
{
  if (a1[2])
  {
    uint64_t v3 = *a1;
    uint64_t v2 = (uint64_t *)a1[1];
    uint64_t v4 = *v2;
    *(void *)(v4 + 8) = *(void *)(*a1 + 8);
    **(void **)(v3 + 8) = v4;
    a1[2] = 0LL;
    while (v2 != a1)
    {
      uint64_t v5 = (uint64_t *)v2[1];
      sub_100071518((int)a1, v2);
      uint64_t v2 = v5;
    }
  }

void sub_100071518(int a1, void *__p)
{
}

uint64_t sub_100071520(uint64_t a1)
{
  return a1;
}

void sub_100071548(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_100071548(a1, *a2);
    sub_100071548(a1, a2[1]);
    sub_100071590((uint64_t)(a2 + 4));
    operator delete(a2);
  }

void sub_100071590(uint64_t a1)
{
  uint64_t v2 = (void **)(a1 + 24);
  sub_100006F6C(&v2);
}

void sub_1000715D4(uint64_t a1)
{
  uint64_t v2 = (void *)(a1 + 8);
  sub_100071548(a1, *(void **)(a1 + 8));
  *(void *)a1 = v2;
  *(void *)(a1 + 16) = 0LL;
  void *v2 = 0LL;
}

void *sub_100071608(void *a1, const std::string *a2)
{
  uint64_t v4 = (char *)operator new(0x20uLL);
  *(void *)uint64_t v4 = &off_1002AE030;
  std::string::basic_string((std::string *)(v4 + 8), a2);
  *a1 = v4;
  return a1;
}

void sub_100071658(_Unwind_Exception *a1)
{
}

_OWORD *sub_10007166C(uint64_t a1, const void **a2, uint64_t a3)
{
  uint64_t v5 = (void **)sub_10000AE50(a1, &v11, a2);
  uint64_t v6 = *v5;
  if (!*v5)
  {
    uint64_t v7 = v5;
    uint64_t v6 = operator new(0x38uLL);
    v9[1] = (void **)(a1 + 8);
    void v6[2] = *(_OWORD *)a3;
    *((void *)v6 + 6) = *(void *)(a3 + 16);
    *(void *)a3 = 0LL;
    *(void *)(a3 + 8) = 0LL;
    *(void *)(a3 + 16) = 0LL;
    char v10 = 1;
    sub_10000AF70((uint64_t **)a1, v11, (void **)v7, v6);
    v9[0] = 0LL;
    sub_10000B1C0(v9, 0LL);
  }

  return v6;
}

void *sub_10007172C()
{
}

_BYTE *sub_100071738(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  *(void *)uint64_t result = &off_1002B01F0;
  result[8] = *(_BYTE *)(a1 + 8);
  return result;
}

uint64_t sub_100071770(uint64_t result, uint64_t a2, unsigned int a3)
{
  if (a3 == 4) {
    goto LABEL_2;
  }
  uint64_t v4 = result;
  if (a3 > 1)
  {
    if (a3 != 2)
    {
      if (a3 != 3)
      {
LABEL_2:
        *(_WORD *)(a2 + 8) = 0;
        return result;
      }

      uint64_t result = *(void *)(*(void *)a2 + 8LL) & 0x7FFFFFFFFFFFFFFFLL;
      if (result == ((unint64_t)"N5boost3_bi6bind_tIiNS_4_mfi3mf2IiN2nl8wpantund17SpinelNCPInstanceEPKhjEENS0_5li"
                                        "st3INS0_5valueIPS6_EENS_3argILi1EEENSE_ILi2EEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)
        || (uint64_t result = strcmp( (const char *)result,  (const char *)((unint64_t)"N5boost3_bi6bind_tIiNS_4_mfi3mf2IiN2nl8wpantund17SpinelNCPInstan ceEPKhjEENS0_5list3INS0_5valueIPS6_EENS_3argILi1EEENSE_ILi2EEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)),  !(_DWORD)result))
      {
        *(void *)a2 = v4;
      }

      else
      {
        *(void *)a2 = 0LL;
      }
    }
  }

  else
  {
    __int128 v5 = *(_OWORD *)result;
    *(void *)(a2 + 16) = *(void *)(result + 16);
    *(_OWORD *)a2 = v5;
  }

  return result;
}

uint64_t sub_10007180C(uint64_t a1, uint64_t a2, int a3, uint64_t *a4)
{
  uint64_t v6 = a2;
  int v5 = a3;
  return sub_100071838(a1, &v6, (uint64_t *)&v5, a4);
}

uint64_t sub_100071838(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t *a4)
{
  v5[0] = a2;
  v5[1] = a3;
  _DWORD v5[2] = a4;
  return sub_100071870((void *)(a1 + 16), a1, v5);
}

uint64_t sub_100071870(void *a1, uint64_t a2, uint64_t **a3)
{
  uint64_t v4 = **a3;
  uint64_t v5 = *(unsigned int *)a3[1];
  uint64_t v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))a2;
  uint64_t v7 = *(void *)(a2 + 8);
  char v8 = (void *)(*a1 + (v7 >> 1));
  if ((v7 & 1) != 0) {
    uint64_t v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(*v8 + v6);
  }
  return v6(v8, v4, v5);
}

void sub_10007189C(uint64_t *a1, uint64_t a2, int a3)
{
  switch(a3)
  {
    case 0:
      uint64_t v5 = *a1;
      uint64_t v6 = operator new(0x28uLL);
      uint64_t v7 = *(void *)(v5 + 32);
      __int128 v8 = *(_OWORD *)(v5 + 16);
      *uint64_t v6 = *(_OWORD *)v5;
      v6[1] = v8;
      *((void *)v6 + 4) = v7;
      *(void *)a2 = v6;
      break;
    case 1:
      *(void *)a2 = *a1;
      *a1 = 0LL;
      break;
    case 2:
      if (*(void *)a2) {
        operator delete(*(void **)a2);
      }
      goto LABEL_9;
    case 3:
      uint64_t v9 = (const char *)(*(void *)(*(void *)a2 + 8LL) & 0x7FFFFFFFFFFFFFFFLL);
      if (v9 == (const char *)((unint64_t)"N5boost3_bi6bind_tIiNS_4_mfi3mf4IiN2nl8wpantund17SpinelNCPInstanceEPNS"
                                                  "5_13ThreadDatasetEjPKhjEENS0_5list5INS0_5valueIPS6_EENSD_IS8_EENSD_I3$"
                                                  "_0EENS_3argILi1EEENSJ_ILi2EEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)
        || !strcmp( v9,  (const char *)((unint64_t)"N5boost3_bi6bind_tIiNS_4_mfi3mf4IiN2nl8wpantund17SpinelNCPInstanceEPNS5_1 3ThreadDatasetEjPKhjEENS0_5list5INS0_5valueIPS6_EENSD_IS8_EENSD_I3$_0EENS _3argILi1EEENSJ_ILi2EEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))
      {
        *(void *)a2 = *a1;
      }

      else
      {
LABEL_9:
        *(void *)a2 = 0LL;
      }

      break;
    default:
      *(_WORD *)(a2 + 8) = 0;
      break;
  }

uint64_t sub_100071970(unsigned int **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (uint64_t (*)(void, void, void, void, void))*((void *)*a1 + 3);
  uint64_t v6 = (*a1)[8];
  uint64_t v7 = *(uint64_t (**)(void *, void, uint64_t, uint64_t, uint64_t))*a1;
  uint64_t v8 = *((void *)*a1 + 1);
  uint64_t v9 = (void *)(*((void *)*a1 + 2) + (v8 >> 1));
  if ((v8 & 1) != 0) {
    uint64_t v7 = *(uint64_t (**)(void *, void, uint64_t, uint64_t, uint64_t))(*v9 + v7);
  }
  return v7(v9, v5, v6, a2, a3);
}

uint64_t sub_10007199C(uint64_t a1, uint64_t a2, int a3, uint64_t *a4)
{
  v8[0] = 0LL;
  sub_100007640((uint64_t)v8, a4);
  *(void *)a1 = a2;
  *(_DWORD *)(a1 + 8) = a3;
  *(void *)(a1 + 16) = 0LL;
  sub_100007640(a1 + 16, v8);
  sub_100070E0C(v8);
  return a1;
}

void sub_100071A04( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_100071A18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = a3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)a4;
  *(void *)(a1 + 32) = 0LL;
  sub_100007640(a1 + 32, (uint64_t *)(a4 + 16));
  return a1;
}

uint64_t (***sub_100071A50(uint64_t (***a1)(), uint64_t a2))()
{
  __int128 v3 = *(_OWORD *)(a2 + 16);
  v5[0] = *(_OWORD *)a2;
  v5[1] = v3;
  v6[0] = 0LL;
  sub_100007640((uint64_t)v6, (uint64_t *)(a2 + 32));
  sub_100071AC0(a1, (uint64_t)v5);
  sub_100070E0C(v6);
  return a1;
}

void sub_100071AAC(_Unwind_Exception *a1)
{
}

uint64_t (***sub_100071AC0(uint64_t (***a1)(), uint64_t a2))()
{
  *a1 = 0LL;
  __int128 v3 = *(_OWORD *)(a2 + 16);
  v5[0] = *(_OWORD *)a2;
  v5[1] = v3;
  v6[0] = 0LL;
  sub_100007640((uint64_t)v6, (uint64_t *)(a2 + 32));
  sub_100071B30(a1, (uint64_t)v5);
  sub_100070E0C(v6);
  return a1;
}

void sub_100071B1C(_Unwind_Exception *a1)
{
}

void *sub_100071B30(uint64_t (***a1)(), uint64_t a2)
{
  __int128 v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v8[0] = 0LL;
  sub_100007640((uint64_t)v8, (uint64_t *)(a2 + 32));
  int v4 = sub_100071BE4((uint64_t)off_1002B0268, (uint64_t)v7, a1 + 1);
  uint64_t result = sub_100070E0C(v8);
  if (v4) {
    uint64_t v6 = off_1002B0268;
  }
  else {
    uint64_t v6 = 0LL;
  }
  *a1 = v6;
  return result;
}

void sub_100071BA8(_Unwind_Exception *a1)
{
}

void sub_100071BBC(uint64_t *a1, _WORD *a2, int a3)
{
  if (a3 == 4)
  {
    a2[4] = 0;
  }

  else
  {
    sub_100071C64(a1, a2, a3);
  }

void *sub_100071BDC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_100071D70(*a1, a2, a3);
}

uint64_t sub_100071BE4(uint64_t a1, uint64_t a2, void *a3)
{
  __int128 v5 = *(_OWORD *)(a2 + 16);
  v8[0] = *(_OWORD *)a2;
  v8[1] = v5;
  v9[0] = 0LL;
  sub_100007640((uint64_t)v9, (uint64_t *)(a2 + 32));
  uint64_t v6 = sub_100071F18(a1, (uint64_t)v8, a3);
  sub_100070E0C(v9);
  return v6;
}

void sub_100071C50(_Unwind_Exception *a1)
{
}

void sub_100071C64(uint64_t *a1, _WORD *a2, int a3)
{
  switch(a3)
  {
    case 0:
      uint64_t v5 = *a1;
      uint64_t v6 = operator new(0x40uLL);
      *uint64_t v6 = *(_OWORD *)v5;
      v6[1] = *(_OWORD *)(v5 + 16);
      *((void *)v6 + 4) = 0LL;
      sub_100007640((uint64_t)(v6 + 2), (uint64_t *)(v5 + 32));
      *(void *)a2 = v6;
      break;
    case 1:
      *(void *)a2 = *a1;
      *a1 = 0LL;
      break;
    case 2:
      uint64_t v7 = *(void **)a2;
      if (*(void *)a2)
      {
        sub_100070E0C(v7 + 4);
        operator delete(v7);
      }

      goto LABEL_7;
    case 3:
      uint64_t v8 = (const char *)(*(void *)(*(void *)a2 + 8LL) & 0x7FFFFFFFFFFFFFFFLL);
      if (v8 == (const char *)((unint64_t)"N5boost3_bi6bind_tIvNS_4_mfi3mf4IvN2nl8wpantund17SpinelNCPInstanceENS_"
                                                  "8functionIFviRKNS_3anyEEEERKNSt3__112basic_stringIcNSD_11char_traitsIc"
                                                  "EENSD_9allocatorIcEEEEjNS7_IFvSC_SL_EEEEENS0_5list5INS0_5valueIPS6_EEN"
                                                  "S_3argILi1EEENST_ILi2EEENSQ_IjEENSQ_ISN_EEEEEE" & 0x7FFFFFFFFFFFFFFFLL)
        || !strcmp( v8,  (const char *)((unint64_t)"N5boost3_bi6bind_tIvNS_4_mfi3mf4IvN2nl8wpantund17SpinelNCPInstanceENS_8fu nctionIFviRKNS_3anyEEEERKNSt3__112basic_stringIcNSD_11char_traitsIcEENSD_ 9allocatorIcEEEEjNS7_IFvSC_SL_EEEEENS0_5list5INS0_5valueIPS6_EENS_3argILi 1EEENST_ILi2EEENSQ_IjEENSQ_ISN_EEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))
      {
        *(void *)a2 = *a1;
      }

      else
      {
LABEL_7:
        *(void *)a2 = 0LL;
      }

      break;
    default:
      a2[4] = 0;
      break;
  }

void sub_100071D5C(_Unwind_Exception *a1)
{
}

void *sub_100071D70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[0] = a2;
  v4[1] = a3;
  return sub_100071DA4(a1 + 16, a1, (uint64_t)v4);
}

void *sub_100071DA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(uint64_t **)a3;
  v12[0] = 0LL;
  sub_100035654(v12, v7);
  uint64_t v8 = *(void *)(a3 + 8);
  uint64_t v9 = *(unsigned int *)(a1 + 8);
  v11[0] = 0LL;
  sub_100007640((uint64_t)v11, (uint64_t *)(a1 + 16));
  sub_100071E5C(a2, v6, v12, v8, v9, v11);
  sub_100070E0C(v11);
  return sub_100006E7C(v12);
}

void sub_100071E38( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
}

void *sub_100071E5C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t *a6)
{
  char v10 = *(void (**)(void *, void *, uint64_t, uint64_t, void *, __n128))a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v11 = (void *)(a2 + (v9 >> 1));
  if ((v9 & 1) != 0) {
    char v10 = *(void (**)(void *, void *, uint64_t, uint64_t, void *, __n128))(*v11 + v10);
  }
  v15[0] = 0LL;
  sub_100007640((uint64_t)v15, a3);
  v14[0] = 0LL;
  __n128 v12 = sub_100007640((uint64_t)v14, a6);
  v10(v11, v15, a4, a5, v14, v12);
  sub_100070E0C(v14);
  return sub_100006E7C(v15);
}

void sub_100071EF4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
}

uint64_t sub_100071F18(uint64_t a1, uint64_t a2, void *a3)
{
  __int128 v5 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v5;
  v8[0] = 0LL;
  sub_100007640((uint64_t)v8, (uint64_t *)(a2 + 32));
  sub_100071F94(a1, (uint64_t)v7, a3);
  sub_100070E0C(v8);
  return 1LL;
}

void sub_100071F80(_Unwind_Exception *a1)
{
}

void sub_100071F94(uint64_t a1, uint64_t a2, void *a3)
{
  __int128 v5 = operator new(0x40uLL);
  __int128 v6 = *(_OWORD *)(a2 + 16);
  *__int128 v5 = *(_OWORD *)a2;
  v5[1] = v6;
  *((void *)v5 + 4) = 0LL;
  sub_100007640((uint64_t)(v5 + 2), (uint64_t *)(a2 + 32));
  *a3 = v5;
}

void sub_100071FE0(_Unwind_Exception *a1)
{
}

uint64_t sub_100071FF4(uint64_t a1, uint64_t a2, int a3, std::string *__str)
{
  *(void *)a1 = a2;
  *(_DWORD *)(a1 + 8) = a3;
  std::string::basic_string((std::string *)(a1 + 16), &__stra);
  return a1;
}

void sub_10007205C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100072078(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = a3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)a4;
  std::string::basic_string((std::string *)(a1 + 32), (const std::string *)(a4 + 16));
  return a1;
}

uint64_t (***sub_1000720B0(uint64_t (***a1)(), uint64_t a2))()
{
  __int128 v3 = *(_OWORD *)(a2 + 16);
  v5[0] = *(_OWORD *)a2;
  v5[1] = v3;
  std::string::basic_string(&__p, (const std::string *)(a2 + 32));
  sub_100072128(a1, (uint64_t)v5);
  return a1;
}

void sub_10007210C( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t (***sub_100072128(uint64_t (***a1)(), uint64_t a2))()
{
  *a1 = 0LL;
  __int128 v3 = *(_OWORD *)(a2 + 16);
  v5[0] = *(_OWORD *)a2;
  v5[1] = v3;
  std::string::basic_string(&__p, (const std::string *)(a2 + 32));
  sub_1000721A0(a1, (uint64_t)v5);
  return a1;
}

void sub_100072184( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1000721A0(uint64_t (***a1)(), uint64_t a2)
{
  __int128 v3 = *(_OWORD *)(a2 + 16);
  v6[0] = *(_OWORD *)a2;
  v6[1] = v3;
  std::string::basic_string(&__p, (const std::string *)(a2 + 32));
  int v4 = sub_10007225C((uint64_t)off_1002B0288, (uint64_t)v6, a1 + 1);
  if (v4) {
    __int128 v5 = off_1002B0288;
  }
  else {
    __int128 v5 = 0LL;
  }
  *a1 = v5;
}

void sub_100072218( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100072234(uint64_t *a1, _WORD *a2, int a3)
{
  if (a3 == 4)
  {
    a2[4] = 0;
  }

  else
  {
    sub_1000722DC(a1, a2, a3);
  }

void *sub_100072254(uint64_t *a1, uint64_t *a2, uint64_t *a3)
{
  return sub_1000723F0(*a1, a2, a3);
}

uint64_t sub_10007225C(uint64_t a1, uint64_t a2, void *a3)
{
  __int128 v5 = *(_OWORD *)(a2 + 16);
  v8[0] = *(_OWORD *)a2;
  v8[1] = v5;
  std::string::basic_string(&__p, (const std::string *)(a2 + 32));
  uint64_t v6 = sub_100072520(a1, (uint64_t)v8, a3);
  return v6;
}

void sub_1000722C0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1000722DC(uint64_t *a1, _WORD *a2, int a3)
{
  switch(a3)
  {
    case 0:
      uint64_t v5 = *a1;
      uint64_t v6 = (char *)operator new(0x38uLL);
      *(_OWORD *)uint64_t v6 = *(_OWORD *)v5;
      *((_OWORD *)v6 + 1) = *(_OWORD *)(v5 + 16);
      std::string::basic_string((std::string *)(v6 + 32), (const std::string *)(v5 + 32));
      *(void *)a2 = v6;
      break;
    case 1:
      *(void *)a2 = *a1;
      *a1 = 0LL;
      break;
    case 2:
      uint64_t v7 = *(void *)a2;
      if (*(void *)a2)
      {
        operator delete((void *)v7);
      }

      goto LABEL_9;
    case 3:
      uint64_t v8 = (const char *)(*(void *)(*(void *)a2 + 8LL) & 0x7FFFFFFFFFFFFFFFLL);
      if (v8 == (const char *)((unint64_t)"N5boost3_bi6bind_tIvNS_4_mfi3mf3IvN2nl8wpantund17SpinelNCPInstanceENS_"
                                                  "8functionIFviRKNS_3anyEEEEjRKNSt3__112basic_stringIcNSD_11char_traitsI"
                                                  "cEENSD_9allocatorIcEEEEEENS0_5list4INS0_5valueIPS6_EENS_3argILi1EEENSO"
                                                  "_IjEENSO_ISJ_EEEEEE" & 0x7FFFFFFFFFFFFFFFLL)
        || !strcmp( v8,  (const char *)((unint64_t)"N5boost3_bi6bind_tIvNS_4_mfi3mf3IvN2nl8wpantund17SpinelNCPInstanceENS_8fu nctionIFviRKNS_3anyEEEEjRKNSt3__112basic_stringIcNSD_11char_traitsIcEENSD _9allocatorIcEEEEEENS0_5list4INS0_5valueIPS6_EENS_3argILi1EEENSO_IjEENSO_ISJ_EEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))
      {
        *(void *)a2 = *a1;
      }

      else
      {
LABEL_9:
        *(void *)a2 = 0LL;
      }

      break;
    default:
      a2[4] = 0;
      break;
  }

void sub_1000723DC(_Unwind_Exception *a1)
{
}

void *sub_1000723F0(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  v4[0] = a2;
  v4[1] = a3;
  return sub_100072424(a1 + 16, a1, v4);
}

void *sub_100072424(uint64_t a1, uint64_t a2, uint64_t **a3)
{
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *a3;
  v8[0] = 0LL;
  sub_100035654(v8, v6);
  sub_10007249C(a2, v5, v8, *(unsigned int *)(a1 + 8), a1 + 16);
  return sub_100006E7C(v8);
}

void sub_100072488( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *sub_10007249C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = *(void (**)(void *, void *, uint64_t, uint64_t, __n128))a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v9 = (void *)(a2 + (v7 >> 1));
  if ((v7 & 1) != 0) {
    uint64_t v8 = *(void (**)(void *, void *, uint64_t, uint64_t, __n128))(*v9 + v8);
  }
  v12[0] = 0LL;
  __n128 v10 = sub_100007640((uint64_t)v12, a3);
  v8(v9, v12, a4, a5, v10);
  return sub_100006E7C(v12);
}

void sub_10007250C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_100072520(uint64_t a1, uint64_t a2, void *a3)
{
  __int128 v5 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v5;
  std::string::basic_string(&__p, (const std::string *)(a2 + 32));
  sub_10007259C(a1, (uint64_t)v7, a3);
  return 1LL;
}

void sub_100072580( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

std::string *sub_10007259C(uint64_t a1, uint64_t a2, void *a3)
{
  __int128 v5 = (char *)operator new(0x38uLL);
  __int128 v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)__int128 v5 = *(_OWORD *)a2;
  *((_OWORD *)v5 + 1) = v6;
  uint64_t result = std::string::basic_string((std::string *)(v5 + 32), (const std::string *)(a2 + 32));
  *a3 = v5;
  return result;
}

void sub_1000725E4(_Unwind_Exception *a1)
{
}

uint64_t sub_1000725F8(uint64_t a1, uint64_t a2, int a3, uint64_t *a4)
{
  v8[0] = 0LL;
  sub_100007640((uint64_t)v8, a4);
  *(void *)a1 = a2;
  *(_DWORD *)(a1 + 8) = a3;
  *(void *)(a1 + 16) = 0LL;
  sub_100007640(a1 + 16, v8);
  sub_10004BED0(v8);
  return a1;
}

void sub_100072660( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t (***sub_100072674(uint64_t (***a1)(), uint64_t a2))()
{
  __int128 v3 = *(_OWORD *)(a2 + 16);
  v5[0] = *(_OWORD *)a2;
  v5[1] = v3;
  v6[0] = 0LL;
  sub_100007640((uint64_t)v6, (uint64_t *)(a2 + 32));
  sub_1000726E4(a1, (uint64_t)v5);
  sub_10004BED0(v6);
  return a1;
}

void sub_1000726D0(_Unwind_Exception *a1)
{
}

uint64_t (***sub_1000726E4(uint64_t (***a1)(), uint64_t a2))()
{
  *a1 = 0LL;
  __int128 v3 = *(_OWORD *)(a2 + 16);
  v5[0] = *(_OWORD *)a2;
  v5[1] = v3;
  v6[0] = 0LL;
  sub_100007640((uint64_t)v6, (uint64_t *)(a2 + 32));
  sub_100072754(a1, (uint64_t)v5);
  sub_10004BED0(v6);
  return a1;
}

void sub_100072740(_Unwind_Exception *a1)
{
}

void *sub_100072754(uint64_t (***a1)(), uint64_t a2)
{
  __int128 v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v8[0] = 0LL;
  sub_100007640((uint64_t)v8, (uint64_t *)(a2 + 32));
  int v4 = sub_100072808((uint64_t)off_1002B02A8, (uint64_t)v7, a1 + 1);
  uint64_t result = sub_10004BED0(v8);
  if (v4) {
    __int128 v6 = off_1002B02A8;
  }
  else {
    __int128 v6 = 0LL;
  }
  *a1 = v6;
  return result;
}

void sub_1000727CC(_Unwind_Exception *a1)
{
}

void sub_1000727E0(uint64_t *a1, _WORD *a2, int a3)
{
  if (a3 == 4)
  {
    a2[4] = 0;
  }

  else
  {
    sub_100072888(a1, a2, a3);
  }

void *sub_100072800(uint64_t *a1, uint64_t *a2, uint64_t *a3)
{
  return sub_100072994(*a1, a2, a3);
}

uint64_t sub_100072808(uint64_t a1, uint64_t a2, void *a3)
{
  __int128 v5 = *(_OWORD *)(a2 + 16);
  v8[0] = *(_OWORD *)a2;
  v8[1] = v5;
  v9[0] = 0LL;
  sub_100007640((uint64_t)v9, (uint64_t *)(a2 + 32));
  uint64_t v6 = sub_100072B18(a1, (uint64_t)v8, a3);
  sub_10004BED0(v9);
  return v6;
}

void sub_100072874(_Unwind_Exception *a1)
{
}

void sub_100072888(uint64_t *a1, _WORD *a2, int a3)
{
  switch(a3)
  {
    case 0:
      uint64_t v5 = *a1;
      uint64_t v6 = operator new(0x40uLL);
      *uint64_t v6 = *(_OWORD *)v5;
      v6[1] = *(_OWORD *)(v5 + 16);
      *((void *)v6 + 4) = 0LL;
      sub_100007640((uint64_t)(v6 + 2), (uint64_t *)(v5 + 32));
      *(void *)a2 = v6;
      break;
    case 1:
      *(void *)a2 = *a1;
      *a1 = 0LL;
      break;
    case 2:
      uint64_t v7 = *(void **)a2;
      if (*(void *)a2)
      {
        sub_10004BED0(v7 + 4);
        operator delete(v7);
      }

      goto LABEL_7;
    case 3:
      uint64_t v8 = (const char *)(*(void *)(*(void *)a2 + 8LL) & 0x7FFFFFFFFFFFFFFFLL);
      if (v8 == (const char *)((unint64_t)"N5boost3_bi6bind_tIvNS_4_mfi3mf3IvN2nl8wpantund17SpinelNCPInstanceENS_"
                                                  "8functionIFviRKNS_3anyEEEEjNS7_IFiPKhjRS8_EEEEENS0_5list4INS0_5valueIP"
                                                  "S6_EENS_3argILi1EEENSK_IjEENSK_ISH_EEEEEE" & 0x7FFFFFFFFFFFFFFFLL)
        || !strcmp( v8,  (const char *)((unint64_t)"N5boost3_bi6bind_tIvNS_4_mfi3mf3IvN2nl8wpantund17SpinelNCPInstanceENS_8fu nctionIFviRKNS_3anyEEEEjNS7_IFiPKhjRS8_EEEEENS0_5list4INS0_5valueIPS6_EEN S_3argILi1EEENSK_IjEENSK_ISH_EEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))
      {
        *(void *)a2 = *a1;
      }

      else
      {
LABEL_7:
        *(void *)a2 = 0LL;
      }

      break;
    default:
      a2[4] = 0;
      break;
  }

void sub_100072980(_Unwind_Exception *a1)
{
}

void *sub_100072994(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  v4[0] = a2;
  v4[1] = a3;
  return sub_1000729C8(a1 + 16, a1, v4);
}

void *sub_1000729C8(uint64_t a1, uint64_t a2, uint64_t **a3)
{
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *a3;
  v10[0] = 0LL;
  sub_100035654(v10, v6);
  uint64_t v7 = *(unsigned int *)(a1 + 8);
  v9[0] = 0LL;
  sub_100007640((uint64_t)v9, (uint64_t *)(a1 + 16));
  sub_100072A6C(a2, v5, v10, v7, v9);
  sub_10004BED0(v9);
  return sub_100006E7C(v10);
}

void sub_100072A48( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
}

void *sub_100072A6C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v8 = *(void (**)(void *, void *, uint64_t, void *, __n128))a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v9 = (void *)(a2 + (v7 >> 1));
  if ((v7 & 1) != 0) {
    uint64_t v8 = *(void (**)(void *, void *, uint64_t, void *, __n128))(*v9 + v8);
  }
  v13[0] = 0LL;
  sub_100007640((uint64_t)v13, a3);
  v12[0] = 0LL;
  __n128 v10 = sub_100007640((uint64_t)v12, a5);
  v8(v9, v13, a4, v12, v10);
  sub_10004BED0(v12);
  return sub_100006E7C(v13);
}

void sub_100072AF4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
}

uint64_t sub_100072B18(uint64_t a1, uint64_t a2, void *a3)
{
  __int128 v5 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v5;
  v8[0] = 0LL;
  sub_100007640((uint64_t)v8, (uint64_t *)(a2 + 32));
  sub_100072B94(a1, (uint64_t)v7, a3);
  sub_10004BED0(v8);
  return 1LL;
}

void sub_100072B80(_Unwind_Exception *a1)
{
}

void sub_100072B94(uint64_t a1, uint64_t a2, void *a3)
{
  __int128 v5 = operator new(0x40uLL);
  __int128 v6 = *(_OWORD *)(a2 + 16);
  *__int128 v5 = *(_OWORD *)a2;
  v5[1] = v6;
  *((void *)v5 + 4) = 0LL;
  sub_100007640((uint64_t)(v5 + 2), (uint64_t *)(a2 + 32));
  *a3 = v5;
}

void sub_100072BE0(_Unwind_Exception *a1)
{
}

uint64_t sub_100072BF4(uint64_t result, _WORD *a2, int a3)
{
  uint64_t v4 = result;
  switch(a3)
  {
    case 0:
      *(void *)a2 = *(void *)result;
      break;
    case 1:
      *(void *)a2 = *(void *)result;
      *(void *)uint64_t result = 0LL;
      break;
    case 2:
      goto LABEL_7;
    case 3:
      uint64_t result = *(void *)(*(void *)a2 + 8LL) & 0x7FFFFFFFFFFFFFFFLL;
      if (result == ((unint64_t)"PFiPKhjRN5boost3anyEE" & 0x7FFFFFFFFFFFFFFFLL)
        || (uint64_t result = strcmp( (const char *)result,  (const char *)((unint64_t)"PFiPKhjRN5boost3anyEE" & 0x7FFFFFFFFFFFFFFFLL)),  !(_DWORD)result))
      {
        *(void *)a2 = v4;
      }

      else
      {
LABEL_7:
        *(void *)a2 = 0LL;
      }

      break;
    default:
      *(void *)a2 = &off_1002B02E8;
      a2[4] = 0;
      break;
  }

  return result;
}

uint64_t sub_100072C9C( uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t sub_100072CB0(uint64_t result, _WORD *a2, unsigned int a3)
{
  if (a3 == 4) {
    goto LABEL_2;
  }
  uint64_t v4 = result;
  if (a3 > 1)
  {
    if (a3 != 2)
    {
      if (a3 != 3)
      {
LABEL_2:
        a2[4] = 0;
        return result;
      }

      uint64_t result = *(void *)(*(void *)a2 + 8LL) & 0x7FFFFFFFFFFFFFFFLL;
      if (result == ((unint64_t)"N5boost3_bi6bind_tIiPFiPKhjRNS_3anyEbENS0_5list4INS_3argILi1EEENS9_ILi2EEENS9_IL"
                                        "i3EEENS0_5valueIbEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)
        || (uint64_t result = strcmp( (const char *)result,  (const char *)((unint64_t)"N5boost3_bi6bind_tIiPFiPKhjRNS_3anyEbENS0_5list4INS_3argILi1EEEN S9_ILi2EEENS9_ILi3EEENS0_5valueIbEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)),  !(_DWORD)result))
      {
        *(void *)a2 = v4;
      }

      else
      {
        *(void *)a2 = 0LL;
      }
    }
  }

  else
  {
    *(_OWORD *)a2 = *(_OWORD *)result;
  }

  return result;
}

uint64_t sub_100072D44(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v6 = a2;
  int v5 = a3;
  return sub_100072D70(a1, (uint64_t)&v6, (uint64_t)&v5, a4);
}

uint64_t sub_100072D70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[0] = a2;
  v5[1] = a3;
  _OWORD v5[2] = a4;
  return sub_100072DA8( (unsigned __int8 *)(a1 + 8),  (uint64_t (**)(void, void, void, void))a1,  (uint64_t)v5);
}

uint64_t sub_100072DA8( unsigned __int8 *a1, uint64_t (**a2)(void, void, void, void), uint64_t a3)
{
  return (*a2)(**(void **)a3, **(unsigned int **)(a3 + 8), *(void *)(a3 + 16), *a1);
}

uint64_t sub_100072DC8(uint64_t result, uint64_t a2, unsigned int a3)
{
  if (a3 == 4) {
    goto LABEL_2;
  }
  uint64_t v4 = result;
  if (a3 > 1)
  {
    if (a3 != 2)
    {
      if (a3 != 3)
      {
LABEL_2:
        *(_WORD *)(a2 + 8) = 0;
        return result;
      }

      uint64_t result = *(void *)(*(void *)a2 + 8LL) & 0x7FFFFFFFFFFFFFFFLL;
      if (result == ((unint64_t)"N5boost3_bi6bind_tIiPFiPKhjRNS_3anyEbPKcENS0_5list5INS_3argILi1EEENSB_ILi2EEENSB"
                                        "_ILi3EEENS0_5valueIbEENSF_IS7_EEEEEE" & 0x7FFFFFFFFFFFFFFFLL)
        || (uint64_t result = strcmp( (const char *)result,  (const char *)((unint64_t)"N5boost3_bi6bind_tIiPFiPKhjRNS_3anyEbPKcENS0_5list5INS_3argILi1E EENSB_ILi2EEENSB_ILi3EEENS0_5valueIbEENSF_IS7_EEEEEE" & 0x7FFFFFFFFFFFFFFFLL)),  !(_DWORD)result))
      {
        *(void *)a2 = v4;
      }

      else
      {
        *(void *)a2 = 0LL;
      }
    }
  }

  else
  {
    __int128 v5 = *(_OWORD *)result;
    *(void *)(a2 + 16) = *(void *)(result + 16);
    *(_OWORD *)a2 = v5;
  }

  return result;
}

uint64_t sub_100072E64(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v6 = a2;
  int v5 = a3;
  return sub_100072E90(a1, (uint64_t)&v6, (uint64_t)&v5, a4);
}

uint64_t sub_100072E90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[0] = a2;
  v5[1] = a3;
  _OWORD v5[2] = a4;
  return sub_100072EC8( (unsigned __int8 *)(a1 + 8),  (uint64_t (**)(void, void, void, void, void))a1,  (uint64_t)v5);
}

uint64_t sub_100072EC8( unsigned __int8 *a1, uint64_t (**a2)(void, void, void, void, void), uint64_t a3)
{
  return (*a2)(**(void **)a3, **(unsigned int **)(a3 + 8), *(void *)(a3 + 16), *a1, *((void *)a1 + 1));
}

uint64_t sub_100072EEC(uint64_t result, _WORD *a2, unsigned int a3)
{
  if (a3 == 4) {
    goto LABEL_2;
  }
  uint64_t v4 = result;
  if (a3 > 1)
  {
    if (a3 != 2)
    {
      if (a3 != 3)
      {
LABEL_2:
        a2[4] = 0;
        return result;
      }

      uint64_t result = *(void *)(*(void *)a2 + 8LL) & 0x7FFFFFFFFFFFFFFFLL;
      if (result == ((unint64_t)"N5boost3_bi6bind_tIiPFiPKhjRNS_3anyEENS0_5list3INS_3argILi1EEENS9_ILi2EEENS9_ILi3EEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)
        || (uint64_t result = strcmp( (const char *)result,  (const char *)((unint64_t)"N5boost3_bi6bind_tIiPFiPKhjRNS_3anyEENS0_5list3INS_3argILi1EEENS 9_ILi2EEENS9_ILi3EEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)),  !(_DWORD)result))
      {
        *(void *)a2 = v4;
      }

      else
      {
        *(void *)a2 = 0LL;
      }
    }
  }

  else
  {
    *(_OWORD *)a2 = *(_OWORD *)result;
  }

  return result;
}

uint64_t sub_100072F80(uint64_t (**a1)(void, void, void), uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v6 = a2;
  int v5 = a3;
  return sub_100072FAC(a1, (uint64_t)&v6, (uint64_t)&v5, a4);
}

uint64_t sub_100072FAC(uint64_t (**a1)(void, void, void), uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[0] = a2;
  v5[1] = a3;
  _OWORD v5[2] = a4;
  return sub_100072FE4((uint64_t)(a1 + 1), a1, (uint64_t)v5);
}

uint64_t sub_100072FE4(uint64_t a1, uint64_t (**a2)(void, void, void), uint64_t a3)
{
  return (*a2)(**(void **)a3, **(unsigned int **)(a3 + 8), *(void *)(a3 + 16));
}

uint64_t sub_100072FFC(uint64_t result, uint64_t a2, unsigned int a3)
{
  if (a3 == 4) {
    goto LABEL_2;
  }
  uint64_t v4 = result;
  if (a3 > 1)
  {
    if (a3 != 2)
    {
      if (a3 != 3)
      {
LABEL_2:
        *(_WORD *)(a2 + 8) = 0;
        return result;
      }

      uint64_t result = *(void *)(*(void *)a2 + 8LL) & 0x7FFFFFFFFFFFFFFFLL;
      if (result == ((unint64_t)"N5boost3_bi6bind_tIvNS_4_mfi3mf1IvN2nl8wpantund17SpinelNCPInstanceENS_8functionI"
                                        "FviRKNS_3anyEEEEEENS0_5list2INS0_5valueIPS6_EENS_3argILi1EEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)
        || (uint64_t result = strcmp( (const char *)result,  (const char *)((unint64_t)"N5boost3_bi6bind_tIvNS_4_mfi3mf1IvN2nl8wpantund17SpinelNCPInstan ceENS_8functionIFviRKNS_3anyEEEEEENS0_5list2INS0_5valueIPS6_EENS _3argILi1EEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)),  !(_DWORD)result))
      {
        *(void *)a2 = v4;
      }

      else
      {
        *(void *)a2 = 0LL;
      }
    }
  }

  else
  {
    __int128 v5 = *(_OWORD *)result;
    *(void *)(a2 + 16) = *(void *)(result + 16);
    *(_OWORD *)a2 = v5;
  }

  return result;
}

void *sub_10007309C(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  v4[0] = a2;
  v4[1] = a3;
  return sub_1000730D0((uint64_t *)(a1 + 16), a1, v4);
}

void *sub_1000730D0(uint64_t *a1, uint64_t a2, uint64_t **a3)
{
  uint64_t v4 = *a3;
  uint64_t v5 = *a1;
  v7[0] = 0LL;
  sub_100035654(v7, v4);
  sub_100073134(a2, v5, v7);
  return sub_100006E7C(v7);
}

void sub_100073120( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *sub_100073134(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = *(void (**)(void *, void *, __n128))a1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v5 = (void *)(a2 + (v3 >> 1));
  if ((v3 & 1) != 0) {
    uint64_t v4 = *(void (**)(void *, void *, __n128))(*v5 + v4);
  }
  v8[0] = 0LL;
  __n128 v6 = sub_100007640((uint64_t)v8, a3);
  v4(v5, v8, v6);
  return sub_100006E7C(v8);
}

void sub_10007318C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *sub_1000731A0(void *a1, uint64_t a2)
{
  uint64_t v4 = operator new(0x20uLL);
  *uint64_t v4 = off_1002AEEA8;
  sub_10000C678((uint64_t)(v4 + 1), a2);
  *a1 = v4;
  return a1;
}

void sub_1000731F0(_Unwind_Exception *a1)
{
}

void *sub_100073204(void *a1, uint64_t *a2)
{
  v4[0] = 0LL;
  sub_100007640((uint64_t)v4, a2);
  sub_100073260(a1, v4);
  sub_100006E7C(v4);
  return a1;
}

void sub_10007324C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *sub_100073260(void *a1, uint64_t *a2)
{
  v4[0] = 0LL;
  sub_100007640((uint64_t)v4, a2);
  sub_1000732BC(a1, v4);
  sub_100006E7C(v4);
  return a1;
}

void sub_1000732A8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *sub_1000732BC(void *a1, uint64_t *a2)
{
  v4[0] = 0LL;
  sub_100007640((uint64_t)v4, a2);
  *a1 = 0LL;
  sub_100007640((uint64_t)a1, v4);
  sub_100006E7C(v4);
  return a1;
}

void sub_100073308( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t (***sub_10007331C(uint64_t (***a1)(), uint64_t *a2))()
{
  uint64_t v4 = *a2;
  v5[0] = 0LL;
  sub_100007640((uint64_t)v5, a2 + 1);
  sub_100073388(a1, &v4);
  sub_100006E7C(v5);
  return a1;
}

void sub_100073374(_Unwind_Exception *a1)
{
}

uint64_t (***sub_100073388(uint64_t (***a1)(), uint64_t *a2))()
{
  *a1 = 0LL;
  uint64_t v4 = *a2;
  v5[0] = 0LL;
  sub_100007640((uint64_t)v5, a2 + 1);
  sub_1000733F4(a1, &v4);
  sub_100006E7C(v5);
  return a1;
}

void sub_1000733E0(_Unwind_Exception *a1)
{
}

void *sub_1000733F4(uint64_t (***a1)(), uint64_t *a2)
{
  uint64_t v6 = *a2;
  v7[0] = 0LL;
  sub_100007640((uint64_t)v7, a2 + 1);
  int v3 = sub_1000734C4((uint64_t)off_1002B0388, &v6, a1 + 1);
  uint64_t result = sub_100006E7C(v7);
  if (v3) {
    uint64_t v5 = off_1002B0388;
  }
  else {
    uint64_t v5 = 0LL;
  }
  *a1 = v5;
  return result;
}

void sub_100073468(_Unwind_Exception *a1)
{
}

void sub_10007347C(void **a1, _WORD *a2, int a3)
{
  if (a3 == 4)
  {
    a2[4] = 0;
  }

  else
  {
    sub_100073540(a1, a2, a3);
  }

void *sub_10007349C(uint64_t *a1, unsigned int a2, unsigned int *a3)
{
  unsigned int v4 = a2;
  return sub_100073644(*a1, &v4, a3);
}

uint64_t sub_1000734C4(uint64_t a1, uint64_t *a2, void *a3)
{
  uint64_t v7 = *a2;
  v8[0] = 0LL;
  sub_100007640((uint64_t)v8, a2 + 1);
  uint64_t v5 = sub_1000736E0(a1, &v7, a3);
  sub_100006E7C(v8);
  return v5;
}

void sub_10007352C(_Unwind_Exception *a1)
{
}

void sub_100073540(void **a1, _WORD *a2, int a3)
{
  switch(a3)
  {
    case 0:
      uint64_t v5 = *a1;
      uint64_t v6 = operator new(0x28uLL);
      *uint64_t v6 = *v5;
      v6[1] = 0LL;
      sub_100007640((uint64_t)(v6 + 1), v5 + 1);
      *(void *)a2 = v6;
      break;
    case 1:
      *(void *)a2 = *a1;
      *a1 = 0LL;
      break;
    case 2:
      uint64_t v7 = *(void **)a2;
      if (*(void *)a2)
      {
        sub_100006E7C(v7 + 1);
        operator delete(v7);
      }

      goto LABEL_7;
    case 3:
      uint64_t v8 = (const char *)(*(void *)(*(void *)a2 + 8LL) & 0x7FFFFFFFFFFFFFFFLL);
      if (v8 == (const char *)((unint64_t)"N5boost3_bi6bind_tIvPFvNS_8functionIFviRKNS_3anyEEEEiS5_ENS0_5list3INS"
                                                  "0_5valueIS7_EENS_3argILi1EEENSD_ILi2EEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)
        || !strcmp( v8,  (const char *)((unint64_t)"N5boost3_bi6bind_tIvPFvNS_8functionIFviRKNS_3anyEEEEiS5_ENS0_5list3INS0_5 valueIS7_EENS_3argILi1EEENSD_ILi2EEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))
      {
        *(void *)a2 = *a1;
      }

      else
      {
LABEL_7:
        *(void *)a2 = 0LL;
      }

      break;
    default:
      a2[4] = 0;
      break;
  }

void sub_100073630(_Unwind_Exception *a1)
{
}

void *sub_100073644(uint64_t a1, unsigned int *a2, unsigned int *a3)
{
  v4[0] = a2;
  v4[1] = a3;
  return sub_100073678((uint64_t *)(a1 + 8), (void (**)(void *, void, unsigned int *, __n128))a1, v4);
}

void *sub_100073678( uint64_t *a1, void (**a2)(void *, void, unsigned int *, __n128), unsigned int **a3)
{
  unsigned int v4 = *a2;
  v7[0] = 0LL;
  __n128 v5 = sub_100007640((uint64_t)v7, a1);
  v4(v7, **a3, a3[1], v5);
  return sub_100006E7C(v7);
}

void sub_1000736CC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_1000736E0(uint64_t a1, uint64_t *a2, void *a3)
{
  uint64_t v6 = *a2;
  v7[0] = 0LL;
  sub_100007640((uint64_t)v7, a2 + 1);
  sub_100073758(a1, &v6, a3);
  sub_100006E7C(v7);
  return 1LL;
}

void sub_100073744(_Unwind_Exception *a1)
{
}

void sub_100073758(uint64_t a1, void *a2, void *a3)
{
  __n128 v5 = operator new(0x28uLL);
  *__n128 v5 = *a2;
  v5[1] = 0LL;
  sub_100007640((uint64_t)(v5 + 1), a2 + 1);
  *a3 = v5;
}

void sub_1000737A4(_Unwind_Exception *a1)
{
}

void *sub_1000737B8(void *a1, uint64_t a2)
{
  unsigned int v4 = operator new(0x20uLL);
  *unsigned int v4 = off_1002B03B8;
  sub_10000D518(v4 + 1, a2);
  *a1 = v4;
  return a1;
}

void sub_100073808(_Unwind_Exception *a1)
{
}

uint64_t sub_10007381C(uint64_t a1)
{
  return a1;
}

void sub_100073844(uint64_t *a1)
{
}

_UNKNOWN **sub_10007386C()
{
}

void *sub_100073878(uint64_t a1)
{
  uint64_t v2 = operator new(0x20uLL);
  void *v2 = off_1002B03B8;
  sub_10000D518(v2 + 1, a1 + 8);
  return v2;
}

void sub_1000738B8(_Unwind_Exception *a1)
{
}

void *sub_1000738CC(void *a1, uint64_t *a2)
{
  unsigned int v4 = operator new(0x20uLL);
  *unsigned int v4 = off_1002ADCD0;
  sub_10000D19C(v4 + 1, a2);
  *a1 = v4;
  return a1;
}

void sub_10007391C(_Unwind_Exception *a1)
{
}

uint64_t *sub_100073930(uint64_t *a1, uint64_t a2)
{
  *a1 = a2;
  a1[1] = 0LL;
  unsigned int v4 = a1 + 1;
  sub_1000739B8(&v7, a2);
  uint64_t v5 = *v4;
  *unsigned int v4 = v7;
  uint64_t v7 = v5;
  sub_10000F9EC(&v7);
  if (a2) {
    sub_100043218((uint64_t *)(a2 + 24), (uint64_t)a1, a2);
  }
  return a1;
}

void sub_1000739A4(_Unwind_Exception *a1)
{
}

void *sub_1000739B8(void *a1, uint64_t a2)
{
  *a1 = 0LL;
  unsigned int v4 = operator new(0x18uLL);
  v4[1] = 0x100000001LL;
  *unsigned int v4 = &off_1002B0400;
  void v4[2] = a2;
  *a1 = v4;
  return a1;
}

void sub_100073A04(void *a1)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  __cxa_rethrow();
}

void sub_100073A24(_Unwind_Exception *a1)
{
}

uint64_t sub_100073A40(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 16);
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }
  return result;
}

uint64_t sub_100073A58()
{
  return 0LL;
}

uint64_t sub_100073A60()
{
  return 0LL;
}

uint64_t sub_100073A68()
{
  return 0LL;
}

uint64_t *sub_100073A70(uint64_t *a1, uint64_t a2)
{
  *a1 = a2;
  a1[1] = 0LL;
  unsigned int v4 = a1 + 1;
  sub_100073AF8(&v7, a2);
  uint64_t v5 = *v4;
  *unsigned int v4 = v7;
  uint64_t v7 = v5;
  sub_10000F9EC(&v7);
  if (a2) {
    sub_100043218((uint64_t *)(a2 + 24), (uint64_t)a1, a2);
  }
  return a1;
}

void sub_100073AE4(_Unwind_Exception *a1)
{
}

void *sub_100073AF8(void *a1, uint64_t a2)
{
  *a1 = 0LL;
  unsigned int v4 = operator new(0x18uLL);
  v4[1] = 0x100000001LL;
  *unsigned int v4 = &off_1002B0460;
  void v4[2] = a2;
  *a1 = v4;
  return a1;
}

void sub_100073B44(void *a1)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
  }
  __cxa_rethrow();
}

void sub_100073B64(_Unwind_Exception *a1)
{
}

uint64_t sub_100073B80(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 16);
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }
  return result;
}

uint64_t sub_100073B98()
{
  return 0LL;
}

uint64_t sub_100073BA0()
{
  return 0LL;
}

uint64_t sub_100073BA8()
{
  return 0LL;
}

void *sub_100073BB0(void *a1, uint64_t a2)
{
  unsigned int v4 = operator new(0x20uLL);
  *unsigned int v4 = off_1002AE210;
  sub_10000CBF8(v4 + 1, a2);
  *a1 = v4;
  return a1;
}

void sub_100073C00(_Unwind_Exception *a1)
{
}

void *sub_100073C14(uint64_t **a1, const void **a2, uint64_t a3, const std::string **a4)
{
  uint64_t v7 = sub_10000AE50((uint64_t)a1, &v12, a2);
  uint64_t v8 = (void *)*v7;
  if (!*v7)
  {
    uint64_t v9 = (void **)v7;
    sub_100073CBC((uint64_t)a1, a3, a4, (uint64_t)v11);
    sub_10000AF70(a1, v12, v9, (void *)v11[0]);
    uint64_t v8 = v11[0];
    v11[0] = 0LL;
    sub_100073DCC(v11, 0LL);
  }

  return v8;
}

uint64_t sub_100073CBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, const std::string **a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a1 + 8;
  uint64_t v8 = operator new(0x58uLL);
  *(void *)a4 = v8;
  *(void *)(a4 + 8) = v7;
  *(_BYTE *)(a4 + 16) = 0;
  uint64_t result = sub_100073D40(v7, (uint64_t)v8 + 32, a2, a3);
  *(_BYTE *)(a4 + 16) = 1;
  return result;
}

void sub_100073D28(_Unwind_Exception *a1)
{
}

uint64_t sub_100073D40(uint64_t a1, uint64_t a2, uint64_t a3, const std::string **a4)
{
  return sub_100073D4C(a2, *a4);
}

uint64_t sub_100073D4C(uint64_t a1, const std::string *a2)
{
  int v3 = std::string::basic_string((std::string *)a1, a2);
  memset(v5, 0, sizeof(v5));
  sub_10000CBF8(v3[1].__r_.__value_.__r.__words, (uint64_t)v5);
  *(_DWORD *)(a1 + 48) = 0;
  uint64_t v6 = (void **)v5;
  sub_100006F6C(&v6);
  return a1;
}

void sub_100073DA0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void **a12)
{
  a12 = (void **)&a9;
  sub_100006F6C(&a12);
  _Unwind_Resume(a1);
}

void sub_100073DCC(void **a1, void *a2)
{
  int v3 = *a1;
  *a1 = a2;
  if (v3) {
    sub_100073DE8((uint64_t)(a1 + 1), v3);
  }
}

void sub_100073DE8(uint64_t a1, void *__p)
{
  if (*(_BYTE *)(a1 + 8)) {
    sub_100071590((uint64_t)__p + 32);
  }
  if (__p) {
    operator delete(__p);
  }
}

void *sub_100073E28(void *a1, uint64_t *a2, uint64_t *a3)
{
  v7[0] = 0LL;
  sub_100007640((uint64_t)v7, a2);
  v6[0] = 0LL;
  sub_100007640((uint64_t)v6, a3);
  sub_100073EB4(a1, v7, v6);
  sub_100071048(v6);
  sub_100071070(v7);
  return a1;
}

void sub_100073E90( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
}

void *sub_100073EB4(void *a1, uint64_t *a2, uint64_t *a3)
{
  v6[0] = 0LL;
  sub_100007640((uint64_t)v6, a2);
  *a1 = 0LL;
  sub_100007640((uint64_t)a1, v6);
  sub_100071070(v6);
  a1[4] = 0LL;
  sub_100007640((uint64_t)(a1 + 4), a3);
  return a1;
}

void sub_100073F14(_Unwind_Exception *a1)
{
}

void *sub_100073F34(void *a1, uint64_t a2, uint64_t *a3)
{
  *a1 = a2;
  a1[1] = 0LL;
  sub_100007640((uint64_t)(a1 + 1), a3);
  a1[5] = 0LL;
  sub_100007640((uint64_t)(a1 + 5), a3 + 4);
  return a1;
}

void sub_100073F88(_Unwind_Exception *a1)
{
}

uint64_t (***sub_100073F9C(uint64_t (***a1)(), uint64_t *a2))()
{
  uint64_t v5 = *a2;
  v6[0] = 0LL;
  sub_100007640((uint64_t)v6, a2 + 1);
  v7[0] = 0LL;
  sub_100007640((uint64_t)v7, a2 + 5);
  sub_100074044(a1, &v5);
  sub_100071048(v7);
  sub_100071070(v6);
  return a1;
}

void sub_100074020(_Unwind_Exception *a1)
{
}

uint64_t (***sub_100074044(uint64_t (***a1)(), uint64_t *a2))()
{
  *a1 = 0LL;
  uint64_t v5 = *a2;
  v6[0] = 0LL;
  sub_100007640((uint64_t)v6, a2 + 1);
  v7[0] = 0LL;
  sub_100007640((uint64_t)v7, a2 + 5);
  sub_1000740EC(a1, &v5);
  sub_100071048(v7);
  sub_100071070(v6);
  return a1;
}

void sub_1000740C8(_Unwind_Exception *a1)
{
}

void *sub_1000740EC(uint64_t (***a1)(), uint64_t *a2)
{
  uint64_t v7 = *a2;
  v8[0] = 0LL;
  sub_100007640((uint64_t)v8, a2 + 1);
  v9[0] = 0LL;
  sub_100007640((uint64_t)v9, a2 + 5);
  int v4 = sub_1000741D8((uint64_t)off_1002B04B0, &v7, a1 + 1);
  sub_100071048(v9);
  uint64_t result = sub_100071070(v8);
  if (v4) {
    uint64_t v6 = off_1002B04B0;
  }
  else {
    uint64_t v6 = 0LL;
  }
  *a1 = v6;
  return result;
}

void sub_10007418C(_Unwind_Exception *a1)
{
}

void sub_1000741B0(void **a1, _WORD *a2, int a3)
{
  if (a3 == 4)
  {
    a2[4] = 0;
  }

  else
  {
    sub_100074290(a1, a2, a3);
  }

void *sub_1000741D0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000743C8(*a1, a2, a3, a4);
}

uint64_t sub_1000741D8(uint64_t a1, uint64_t *a2, void *a3)
{
  uint64_t v8 = *a2;
  v9[0] = 0LL;
  sub_100007640((uint64_t)v9, a2 + 1);
  v10[0] = 0LL;
  sub_100007640((uint64_t)v10, a2 + 5);
  uint64_t v6 = sub_1000744CC(a1, &v8, a3);
  sub_100071048(v10);
  sub_100071070(v9);
  return v6;
}

void sub_10007426C(_Unwind_Exception *a1)
{
}

void sub_100074290(void **a1, _WORD *a2, int a3)
{
  switch(a3)
  {
    case 0:
      uint64_t v5 = *a1;
      uint64_t v6 = operator new(0x48uLL);
      *uint64_t v6 = *v5;
      v6[1] = 0LL;
      sub_100007640((uint64_t)(v6 + 1), v5 + 1);
      uint64_t v6[5] = 0LL;
      sub_100007640((uint64_t)(v6 + 5), v5 + 5);
      *(void *)a2 = v6;
      break;
    case 1:
      *(void *)a2 = *a1;
      *a1 = 0LL;
      break;
    case 2:
      uint64_t v7 = *(void **)a2;
      if (*(void *)a2)
      {
        sub_100071048(v7 + 5);
        sub_100071070(v7 + 1);
        operator delete(v7);
      }

      goto LABEL_8;
    case 3:
      uint64_t v8 = (const char *)(*(void *)(*(void *)a2 + 8LL) & 0x7FFFFFFFFFFFFFFFLL);
      if (v8 == (const char *)((unint64_t)"N5boost3_bi6bind_tIvPFvRKNS_3anyENS_8functionIFviEEERKNSt3__112basic_s"
                                                  "tringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEENS5_IFiS4_RS2_EEENS5_I"
                                                  "FvS4_S7_SG_EEEENS0_5list5INS_3argILi1EEENSP_ILi2EEENSP_ILi3EEENS0_5val"
                                                  "ueISJ_EENST_ISL_EEEEEE" & 0x7FFFFFFFFFFFFFFFLL)
        || !strcmp( v8,  (const char *)((unint64_t)"N5boost3_bi6bind_tIvPFvRKNS_3anyENS_8functionIFviEEERKNSt3__112basic_stri ngIcNS8_11char_traitsIcEENS8_9allocatorIcEEEENS5_IFiS4_RS2_EEENS5_IFvS4_S 7_SG_EEEENS0_5list5INS_3argILi1EEENSP_ILi2EEENSP_ILi3EEENS0_5valueISJ_EENST_ISL_EEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))
      {
        *(void *)a2 = *a1;
      }

      else
      {
LABEL_8:
        *(void *)a2 = 0LL;
      }

      break;
    default:
      a2[4] = 0;
      break;
  }

void sub_1000743A4(_Unwind_Exception *a1)
{
}

void *sub_1000743C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[0] = a2;
  v5[1] = a3;
  _OWORD v5[2] = a4;
  return sub_100074400( (uint64_t *)(a1 + 8),  (void (**)(uint64_t, uint64_t *, uint64_t, void *, void *, __n128))a1,  v5);
}

void *sub_100074400( uint64_t *a1, void (**a2)(uint64_t, uint64_t *, uint64_t, void *, void *, __n128), uint64_t *a3)
{
  uint64_t v5 = *a2;
  uint64_t v7 = *a3;
  uint64_t v6 = (uint64_t *)a3[1];
  v13[0] = 0LL;
  sub_1000080D0(v13, v6);
  uint64_t v8 = a3[2];
  v12[0] = 0LL;
  sub_100007640((uint64_t)v12, a1);
  v11[0] = 0LL;
  __n128 v9 = sub_100007640((uint64_t)v11, a1 + 4);
  v5(v7, v13, v8, v12, v11, v9);
  sub_100071048(v11);
  sub_100071070(v12);
  return sub_1000075F0(v13);
}

void sub_100074498( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
}

uint64_t sub_1000744CC(uint64_t a1, uint64_t *a2, void *a3)
{
  uint64_t v7 = *a2;
  v8[0] = 0LL;
  sub_100007640((uint64_t)v8, a2 + 1);
  v9[0] = 0LL;
  sub_100007640((uint64_t)v9, a2 + 5);
  sub_100074580(a1, &v7, a3);
  sub_100071048(v9);
  sub_100071070(v8);
  return 1LL;
}

void sub_10007455C(_Unwind_Exception *a1)
{
}

void sub_100074580(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = operator new(0x48uLL);
  *uint64_t v5 = *a2;
  v5[1] = 0LL;
  sub_100007640((uint64_t)(v5 + 1), a2 + 1);
  v5[5] = 0LL;
  sub_100007640((uint64_t)(v5 + 5), a2 + 5);
  *a3 = v5;
}

void sub_1000745E4(_Unwind_Exception *a1)
{
}

void sub_100074608(uint64_t *a1, uint64_t a2, int a3)
{
  if (a3 == 4)
  {
    *(_WORD *)(a2 + 8) = 0;
  }

  else
  {
    sub_100074630(a1, a2, a3);
  }

void *sub_100074628(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100074704(*a1, a2, a3, a4);
}

void sub_100074630(uint64_t *a1, uint64_t a2, int a3)
{
  switch(a3)
  {
    case 0:
      uint64_t v5 = *a1;
      uint64_t v6 = operator new(0x28uLL);
      uint64_t v7 = *(void *)(v5 + 32);
      __int128 v8 = *(_OWORD *)(v5 + 16);
      *uint64_t v6 = *(_OWORD *)v5;
      v6[1] = v8;
      *((void *)v6 + 4) = v7;
      *(void *)a2 = v6;
      break;
    case 1:
      *(void *)a2 = *a1;
      *a1 = 0LL;
      break;
    case 2:
      if (*(void *)a2) {
        operator delete(*(void **)a2);
      }
      goto LABEL_9;
    case 3:
      __n128 v9 = (const char *)(*(void *)(*(void *)a2 + 8LL) & 0x7FFFFFFFFFFFFFFFLL);
      if (v9 == (const char *)((unint64_t)"N5boost3_bi6bind_tIvNS_4_mfi3mf7IvN2nl8wpantund17SpinelNCPInstanceERKN"
                                                  "S_3anyENS_8functionIFviEEEjcjbRKNSt3__112basic_stringIcNSD_11char_trai"
                                                  "tsIcEENSD_9allocatorIcEEEEEENS0_5list8INS0_5valueIPS6_EENS_3argILi1EEE"
                                                  "NSR_ILi2EEENSO_IjEENSO_IcEENSO_IiEENSO_IbEENSR_ILi3EEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)
        || !strcmp( v9,  (const char *)((unint64_t)"N5boost3_bi6bind_tIvNS_4_mfi3mf7IvN2nl8wpantund17SpinelNCPInstanceERKNS_3 anyENS_8functionIFviEEEjcjbRKNSt3__112basic_stringIcNSD_11char_traitsIcEE NSD_9allocatorIcEEEEEENS0_5list8INS0_5valueIPS6_EENS_3argILi1EEENSR_ILi2E EENSO_IjEENSO_IcEENSO_IiEENSO_IbEENSR_ILi3EEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))
      {
        *(void *)a2 = *a1;
      }

      else
      {
LABEL_9:
        *(void *)a2 = 0LL;
      }

      break;
    default:
      *(_WORD *)(a2 + 8) = 0;
      break;
  }

void *sub_100074704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[0] = a2;
  v5[1] = a3;
  _OWORD v5[2] = a4;
  return sub_10007473C(a1 + 16, a1, v5);
}

void *sub_10007473C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6 = *(void *)a1;
  uint64_t v8 = *a3;
  uint64_t v7 = (uint64_t *)a3[1];
  v10[0] = 0LL;
  sub_1000080D0(v10, v7);
  sub_1000747D4( a2,  v6,  v8,  v10,  *(unsigned int *)(a1 + 8),  *(char *)(a1 + 12),  *(unsigned int *)(a1 + 16),  *(unsigned __int8 *)(a1 + 20),  a3[2]);
  return sub_1000075F0(v10);
}

void sub_1000747C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

void *sub_1000747D4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v15 = *(void (**)(void *, uint64_t, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128))a1;
  uint64_t v14 = *(void *)(a1 + 8);
  unint64_t v16 = (void *)(a2 + (v14 >> 1));
  if ((v14 & 1) != 0) {
    uint64_t v15 = *(void (**)(void *, uint64_t, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128))(*v16 + v15);
  }
  v19[0] = 0LL;
  __n128 v17 = sub_100007640((uint64_t)v19, a4);
  v15(v16, a3, v19, a5, a6, a7, a8, a9, v17);
  return sub_1000075F0(v19);
}

void sub_100074874( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100074888(uint64_t *a1, uint64_t a2, int a3)
{
  if (a3 == 4)
  {
    *(_WORD *)(a2 + 8) = 0;
  }

  else
  {
    sub_1000748B0(a1, a2, a3);
  }

void *sub_1000748A8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100074984(*a1, a2, a3, a4);
}

void sub_1000748B0(uint64_t *a1, uint64_t a2, int a3)
{
  switch(a3)
  {
    case 0:
      uint64_t v5 = *a1;
      uint64_t v6 = operator new(0x28uLL);
      uint64_t v7 = *(void *)(v5 + 32);
      __int128 v8 = *(_OWORD *)(v5 + 16);
      *uint64_t v6 = *(_OWORD *)v5;
      v6[1] = v8;
      *((void *)v6 + 4) = v7;
      *(void *)a2 = v6;
      break;
    case 1:
      *(void *)a2 = *a1;
      *a1 = 0LL;
      break;
    case 2:
      if (*(void *)a2) {
        operator delete(*(void **)a2);
      }
      goto LABEL_9;
    case 3:
      __n128 v9 = (const char *)(*(void *)(*(void *)a2 + 8LL) & 0x7FFFFFFFFFFFFFFFLL);
      if (v9 == (const char *)((unint64_t)"N5boost3_bi6bind_tIvNS_4_mfi3mf7IvN2nl8wpantund17SpinelNCPInstanceERKN"
                                                  "S_3anyENS_8functionIFviEEEjcjbRKNSt3__112basic_stringIcNSD_11char_trai"
                                                  "tsIcEENSD_9allocatorIcEEEEEENS0_5list8INS0_5valueIPS6_EENS_3argILi1EEE"
                                                  "NSR_ILi2EEENSO_IjEENSO_IcEESU_NSO_IbEENSR_ILi3EEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)
        || !strcmp( v9,  (const char *)((unint64_t)"N5boost3_bi6bind_tIvNS_4_mfi3mf7IvN2nl8wpantund17SpinelNCPInstanceERKNS_3 anyENS_8functionIFviEEEjcjbRKNSt3__112basic_stringIcNSD_11char_traitsIcEE NSD_9allocatorIcEEEEEENS0_5list8INS0_5valueIPS6_EENS_3argILi1EEENSR_ILi2E EENSO_IjEENSO_IcEESU_NSO_IbEENSR_ILi3EEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))
      {
        *(void *)a2 = *a1;
      }

      else
      {
LABEL_9:
        *(void *)a2 = 0LL;
      }

      break;
    default:
      *(_WORD *)(a2 + 8) = 0;
      break;
  }

void *sub_100074984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[0] = a2;
  v5[1] = a3;
  _OWORD v5[2] = a4;
  return sub_1000749BC(a1 + 16, a1, v5);
}

void *sub_1000749BC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6 = *(void *)a1;
  uint64_t v8 = *a3;
  uint64_t v7 = (uint64_t *)a3[1];
  v10[0] = 0LL;
  sub_1000080D0(v10, v7);
  sub_1000747D4( a2,  v6,  v8,  v10,  *(unsigned int *)(a1 + 8),  *(char *)(a1 + 12),  *(unsigned int *)(a1 + 16),  *(unsigned __int8 *)(a1 + 20),  a3[2]);
  return sub_1000075F0(v10);
}

void sub_100074A40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
}

uint64_t sub_100074A54(uint64_t result, _WORD *a2, int a3)
{
  uint64_t v4 = result;
  switch(a3)
  {
    case 0:
      *(void *)a2 = *(void *)result;
      break;
    case 1:
      *(void *)a2 = *(void *)result;
      *(void *)uint64_t result = 0LL;
      break;
    case 2:
      goto LABEL_7;
    case 3:
      uint64_t result = *(void *)(*(void *)a2 + 8LL) & 0x7FFFFFFFFFFFFFFFLL;
      if (result == ((unint64_t)"PFiRKN5boost3anyERS0_E" & 0x7FFFFFFFFFFFFFFFLL)
        || (uint64_t result = strcmp( (const char *)result,  (const char *)((unint64_t)"PFiRKN5boost3anyERS0_E" & 0x7FFFFFFFFFFFFFFFLL)),  !(_DWORD)result))
      {
        *(void *)a2 = v4;
      }

      else
      {
LABEL_7:
        *(void *)a2 = 0LL;
      }

      break;
    default:
      *(void *)a2 = &off_1002B0530;
      a2[4] = 0;
      break;
  }

  return result;
}

uint64_t sub_100074AFC(uint64_t (**a1)(uint64_t, uint64_t), uint64_t a2, uint64_t a3)
{
  return (*a1)(a2, a3);
}

uint64_t sub_100074B0C(uint64_t result, uint64_t a2, unsigned int a3)
{
  if (a3 == 4) {
    goto LABEL_2;
  }
  uint64_t v4 = result;
  if (a3 > 1)
  {
    if (a3 != 2)
    {
      if (a3 != 3)
      {
LABEL_2:
        *(_WORD *)(a2 + 8) = 0;
        return result;
      }

      uint64_t result = *(void *)(*(void *)a2 + 8LL) & 0x7FFFFFFFFFFFFFFFLL;
      if (result == ((unint64_t)"N5boost3_bi6bind_tIvNS_4_mfi3mf2IvN2nl8wpantund17SpinelNCPInstanceERKNS_3anyENS_"
                                        "8functionIFviEEEEENS0_5list3INS0_5valueIPS6_EENS_3argILi1EEENSI_ILi2EEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)
        || (uint64_t result = strcmp( (const char *)result,  (const char *)((unint64_t)"N5boost3_bi6bind_tIvNS_4_mfi3mf2IvN2nl8wpantund17SpinelNCPInstan ceERKNS_3anyENS_8functionIFviEEEEENS0_5list3INS0_5valueIPS6_EENS _3argILi1EEENSI_ILi2EEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)),  !(_DWORD)result))
      {
        *(void *)a2 = v4;
      }

      else
      {
        *(void *)a2 = 0LL;
      }
    }
  }

  else
  {
    __int128 v5 = *(_OWORD *)result;
    *(void *)(a2 + 16) = *(void *)(result + 16);
    *(_OWORD *)a2 = v5;
  }

  return result;
}

void *sub_100074BAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[0] = a2;
  v5[1] = a3;
  _OWORD v5[2] = a4;
  return sub_100074BE4((uint64_t *)(a1 + 16), a1, v5);
}

void *sub_100074BE4(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = *a1;
  uint64_t v6 = *a3;
  __int128 v5 = (uint64_t *)a3[1];
  v8[0] = 0LL;
  sub_1000080D0(v8, v5);
  sub_100074C54(a2, v4, v6, v8);
  return sub_1000075F0(v8);
}

void sub_100074C40( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *sub_100074C54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = *(void (**)(void *, uint64_t, void *, __n128))a1;
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v7 = (void *)(a2 + (v5 >> 1));
  if ((v5 & 1) != 0) {
    uint64_t v6 = *(void (**)(void *, uint64_t, void *, __n128))(*v7 + v6);
  }
  v10[0] = 0LL;
  __n128 v8 = sub_100007640((uint64_t)v10, a4);
  v6(v7, a3, v10, v8);
  return sub_1000075F0(v10);
}

void sub_100074CBC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_100074CD0(uint64_t *a1, _BYTE *a2)
{
  uint64_t v2 = a1[1] - *a1;
  unint64_t v3 = v2 + 1;
  if (v2 == -1)
  {
    __break(0x5500u);
LABEL_10:
    sub_10000CCF0();
  }

  if ((v3 & 0x8000000000000000LL) != 0) {
    goto LABEL_10;
  }
  unint64_t v6 = a1[2] - *a1;
  if (2 * v6 > v3) {
    unint64_t v3 = 2 * v6;
  }
  if (v6 >= 0x3FFFFFFFFFFFFFFFLL) {
    size_t v7 = 0x7FFFFFFFFFFFFFFFLL;
  }
  else {
    size_t v7 = v3;
  }
  sub_100035540(v10, v7, v2, (uint64_t)(a1 + 2));
  *v11++ = *a2;
  sub_1000357E4(a1, v10);
  uint64_t v8 = a1[1];
  sub_100035598((uint64_t)v10);
  return v8;
}

void sub_100074D7C(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t *sub_100074D90(uint64_t *result, uint64_t a2)
{
  uint64_t v2 = result;
  *((_BYTE *)v2 + 24) = 1;
  return result;
}

uint64_t sub_100074DD0(uint64_t a1, uint64_t a2, int a3, uint64_t *a4)
{
  v8[0] = 0LL;
  sub_100007640((uint64_t)v8, a4);
  *(void *)a1 = a2;
  *(_DWORD *)(a1 + 8) = a3;
  *(void *)(a1 + 16) = 0LL;
  sub_100007640(a1 + 16, v8);
  sub_100071048(v8);
  return a1;
}

void sub_100074E38( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t (***sub_100074E4C(uint64_t (***a1)(), uint64_t a2))()
{
  __int128 v3 = *(_OWORD *)(a2 + 16);
  v5[0] = *(_OWORD *)a2;
  v5[1] = v3;
  v6[0] = 0LL;
  sub_100007640((uint64_t)v6, (uint64_t *)(a2 + 32));
  sub_100074EBC(a1, (uint64_t)v5);
  sub_100071048(v6);
  return a1;
}

void sub_100074EA8(_Unwind_Exception *a1)
{
}

uint64_t (***sub_100074EBC(uint64_t (***a1)(), uint64_t a2))()
{
  *a1 = 0LL;
  __int128 v3 = *(_OWORD *)(a2 + 16);
  v5[0] = *(_OWORD *)a2;
  v5[1] = v3;
  v6[0] = 0LL;
  sub_100007640((uint64_t)v6, (uint64_t *)(a2 + 32));
  sub_100074F2C(a1, (uint64_t)v5);
  sub_100071048(v6);
  return a1;
}

void sub_100074F18(_Unwind_Exception *a1)
{
}

void *sub_100074F2C(uint64_t (***a1)(), uint64_t a2)
{
  __int128 v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v8[0] = 0LL;
  sub_100007640((uint64_t)v8, (uint64_t *)(a2 + 32));
  int v4 = sub_100074FE0((uint64_t)off_1002B0570, (uint64_t)v7, a1 + 1);
  uint64_t result = sub_100071048(v8);
  if (v4) {
    unint64_t v6 = off_1002B0570;
  }
  else {
    unint64_t v6 = 0LL;
  }
  *a1 = v6;
  return result;
}

void sub_100074FA4(_Unwind_Exception *a1)
{
}

void sub_100074FB8(uint64_t *a1, _WORD *a2, int a3)
{
  if (a3 == 4)
  {
    a2[4] = 0;
  }

  else
  {
    sub_100075060(a1, a2, a3);
  }

void *sub_100074FD8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10007516C(*a1, a2, a3, a4);
}

uint64_t sub_100074FE0(uint64_t a1, uint64_t a2, void *a3)
{
  __int128 v5 = *(_OWORD *)(a2 + 16);
  v8[0] = *(_OWORD *)a2;
  v8[1] = v5;
  v9[0] = 0LL;
  sub_100007640((uint64_t)v9, (uint64_t *)(a2 + 32));
  uint64_t v6 = sub_100075324(a1, (uint64_t)v8, a3);
  sub_100071048(v9);
  return v6;
}

void sub_10007504C(_Unwind_Exception *a1)
{
}

void sub_100075060(uint64_t *a1, _WORD *a2, int a3)
{
  switch(a3)
  {
    case 0:
      uint64_t v5 = *a1;
      uint64_t v6 = operator new(0x40uLL);
      *uint64_t v6 = *(_OWORD *)v5;
      v6[1] = *(_OWORD *)(v5 + 16);
      *((void *)v6 + 4) = 0LL;
      sub_100007640((uint64_t)(v6 + 2), (uint64_t *)(v5 + 32));
      *(void *)a2 = v6;
      break;
    case 1:
      *(void *)a2 = *a1;
      *a1 = 0LL;
      break;
    case 2:
      size_t v7 = *(void **)a2;
      if (*(void *)a2)
      {
        sub_100071048(v7 + 4);
        operator delete(v7);
      }

      goto LABEL_7;
    case 3:
      uint64_t v8 = (const char *)(*(void *)(*(void *)a2 + 8LL) & 0x7FFFFFFFFFFFFFFFLL);
      if (v8 == (const char *)((unint64_t)"N5boost3_bi6bind_tIvNS_4_mfi3mf5IvN2nl8wpantund17SpinelNCPInstanceERKN"
                                                  "S_3anyENS_8functionIFviEEERKNSt3__112basic_stringIcNSD_11char_traitsIc"
                                                  "EENSD_9allocatorIcEEEEjNSA_IFvS9_SC_SL_EEEEENS0_5list6INS0_5valueIPS6_"
                                                  "EENS_3argILi1EEENST_ILi2EEENST_ILi3EEENSQ_IjEENSQ_ISN_EEEEEE" & 0x7FFFFFFFFFFFFFFFLL)
        || !strcmp( v8,  (const char *)((unint64_t)"N5boost3_bi6bind_tIvNS_4_mfi3mf5IvN2nl8wpantund17SpinelNCPInstanceERKNS_3 anyENS_8functionIFviEEERKNSt3__112basic_stringIcNSD_11char_traitsIcEENSD_ 9allocatorIcEEEEjNSA_IFvS9_SC_SL_EEEEENS0_5list6INS0_5valueIPS6_EENS_3arg ILi1EEENST_ILi2EEENST_ILi3EEENSQ_IjEENSQ_ISN_EEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))
      {
        *(void *)a2 = *a1;
      }

      else
      {
LABEL_7:
        *(void *)a2 = 0LL;
      }

      break;
    default:
      a2[4] = 0;
      break;
  }

void sub_100075158(_Unwind_Exception *a1)
{
}

void *sub_10007516C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[0] = a2;
  v5[1] = a3;
  _OWORD v5[2] = a4;
  return sub_1000751A4(a1 + 16, a1, v5);
}

void *sub_1000751A4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6 = *(void *)a1;
  uint64_t v8 = *a3;
  size_t v7 = (uint64_t *)a3[1];
  v13[0] = 0LL;
  sub_1000080D0(v13, v7);
  uint64_t v9 = a3[2];
  uint64_t v10 = *(unsigned int *)(a1 + 8);
  v12[0] = 0LL;
  sub_100007640((uint64_t)v12, (uint64_t *)(a1 + 16));
  sub_100075260(a2, v6, v8, v13, v9, v10, v12);
  sub_100071048(v12);
  return sub_1000075F0(v13);
}

void sub_10007523C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
}

void *sub_100075260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t *a7)
{
  uint64_t v12 = *(void (**)(void *, uint64_t, void *, uint64_t, uint64_t, void *, __n128))a1;
  uint64_t v11 = *(void *)(a1 + 8);
  BOOL v13 = (void *)(a2 + (v11 >> 1));
  if ((v11 & 1) != 0) {
    uint64_t v12 = *(void (**)(void *, uint64_t, void *, uint64_t, uint64_t, void *, __n128))(*v13
  }
                                                                                                 + v12);
  v17[0] = 0LL;
  sub_100007640((uint64_t)v17, a4);
  v16[0] = 0LL;
  __n128 v14 = sub_100007640((uint64_t)v16, a7);
  v12(v13, a3, v17, a5, a6, v16, v14);
  sub_100071048(v16);
  return sub_1000075F0(v17);
}

void sub_100075300( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
}

uint64_t sub_100075324(uint64_t a1, uint64_t a2, void *a3)
{
  __int128 v5 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v5;
  v8[0] = 0LL;
  sub_100007640((uint64_t)v8, (uint64_t *)(a2 + 32));
  sub_1000753A0(a1, (uint64_t)v7, a3);
  sub_100071048(v8);
  return 1LL;
}

void sub_10007538C(_Unwind_Exception *a1)
{
}

void sub_1000753A0(uint64_t a1, uint64_t a2, void *a3)
{
  __int128 v5 = operator new(0x40uLL);
  __int128 v6 = *(_OWORD *)(a2 + 16);
  *__int128 v5 = *(_OWORD *)a2;
  v5[1] = v6;
  *((void *)v5 + 4) = 0LL;
  sub_100007640((uint64_t)(v5 + 2), (uint64_t *)(a2 + 32));
  *a3 = v5;
}

void sub_1000753EC(_Unwind_Exception *a1)
{
}

void *sub_100075400(void *a1, uint64_t *a2)
{
  a1[1] = 0LL;
  a1[2] = 0LL;
  *a1 = a1 + 1;
  sub_100075450((uint64_t)a1, *a2, (uint64_t)(a2 + 1));
  return a1;
}

void sub_10007543C(_Unwind_Exception *a1)
{
}

uint64_t sub_100075450(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = a2;
  if (a2 != a3)
  {
    int v4 = (uint64_t **)result;
    __int128 v5 = (void *)(result + 8);
    do
    {
      sub_1000754B4(v4, v5, (_OWORD *)(a2 + 28));
      uint64_t result = sub_10000B338((uint64_t)&v6);
      a2 = v6;
    }

    while (v6 != a3);
  }

  return result;
}

void *sub_1000754B4(uint64_t **a1, void *a2, _OWORD *a3)
{
  uint64_t v6 = a1 + 1;
  size_t v7 = (char *)operator new(0x40uLL);
  v13[0] = v7;
  v13[1] = v6;
  __int128 v8 = a3[1];
  *(_OWORD *)(v7 + 28) = *a3;
  *(_OWORD *)(v7 + 44) = v8;
  char v14 = 1;
  uint64_t v9 = (void **)sub_100075560((uint64_t)a1, a2, &v12, (uint64_t)(v7 + 28));
  sub_10000AF70(a1, v12, v9, (void *)v13[0]);
  uint64_t v10 = v13[0];
  v13[0] = 0LL;
  sub_10000D0A8(v13, 0LL);
  return v10;
}

void sub_100075548(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

uint64_t sub_100075560(uint64_t result, void *a2, void *a3, uint64_t a4)
{
  uint64_t v6 = a2;
  size_t v7 = (void *)result;
  if ((void *)(result + 8) != a2)
  {
    uint64_t result = sub_1000EB330((uint64_t)a2 + 28, a4);
    if ((result & 1) != 0) {
      return (uint64_t)sub_1000756B0((uint64_t)v7, a3, a4);
    }
  }

  uint64_t v10 = v6;
  if ((void *)*v7 != v6)
  {
    __int128 v8 = sub_10000CB60(&v10);
    uint64_t result = sub_1000EB330(a4, (uint64_t)*v8 + 28);
    if ((result & 1) != 0) {
      return (uint64_t)sub_100075640((uint64_t)v7, a3, a4);
    }
  }

  if (!*v6)
  {
    *a3 = v6;
    return (uint64_t)v6;
  }

  uint64_t v9 = v10;
  *a3 = v10;
  if (v9) {
    return (uint64_t)(v9 + 1);
  }
  __break(0x5516u);
  return result;
}

void *sub_100075640(uint64_t a1, void *a2, uint64_t a3)
{
  __int128 v5 = (void *)(a1 + 8);
  int v4 = *(void **)(a1 + 8);
  if (v4)
  {
    do
    {
      while (1)
      {
        __int128 v5 = v4;
        int v4 = (void *)*v5;
        uint64_t result = v5;
        if (!*v5) {
          goto LABEL_8;
        }
      }

      int v4 = (void *)v5[1];
    }

    while (v4);
    uint64_t result = v5 + 1;
  }

  else
  {
    uint64_t result = (void *)(a1 + 8);
  }

void *sub_1000756B0(uint64_t a1, void *a2, uint64_t a3)
{
  __int128 v5 = (void *)(a1 + 8);
  int v4 = *(void **)(a1 + 8);
  if (v4)
  {
    do
    {
      while (1)
      {
        __int128 v5 = v4;
        int v4 = (void *)*v5;
        uint64_t result = v5;
        if (!*v5) {
          goto LABEL_8;
        }
      }

      int v4 = (void *)v5[1];
    }

    while (v4);
    uint64_t result = v5 + 1;
  }

  else
  {
    uint64_t result = (void *)(a1 + 8);
  }

void *sub_100075724(uint64_t a1, uint64_t a2)
{
  return sub_100075730(a1, a2, *(void **)(a1 + 8), (void *)(a1 + 8));
}

void *sub_100075730(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  if (a3)
  {
    __int128 v5 = a3;
    do
    {
      int v7 = sub_1000EB330((uint64_t)v5 + 28, a2);
      __int128 v8 = v5 + 1;
      if (!v7)
      {
        __int128 v8 = v5;
        a4 = v5;
      }

      __int128 v5 = (void *)*v8;
    }

    while (*v8);
  }

  return a4;
}

void *sub_100075788(uint64_t a1, uint64_t a2)
{
  return sub_100075794(a1, a2, *(void **)(a1 + 8), (void *)(a1 + 8));
}

void *sub_100075794(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  if (a3)
  {
    __int128 v5 = a3;
    do
    {
      int v7 = sub_1000EB330(a2, (uint64_t)v5 + 28);
      __int128 v8 = v5 + 1;
      if (v7)
      {
        __int128 v8 = v5;
        a4 = v5;
      }

      __int128 v5 = (void *)*v8;
    }

    while (*v8);
  }

  return a4;
}

void *sub_1000757EC(void *a1, uint64_t *a2)
{
  a1[1] = 0LL;
  a1[2] = 0LL;
  *a1 = a1 + 1;
  sub_10007583C((uint64_t)a1, *a2, (uint64_t)(a2 + 1));
  return a1;
}

void sub_100075828(_Unwind_Exception *a1)
{
}

uint64_t sub_10007583C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = a2;
  if (a2 != a3)
  {
    int v4 = (uint64_t **)result;
    __int128 v5 = (void *)(result + 8);
    do
    {
      sub_1000758A0(v4, v5, a2 + 28);
      uint64_t result = sub_10000B338((uint64_t)&v6);
      a2 = v6;
    }

    while (v6 != a3);
  }

  return result;
}

void *sub_1000758A0(uint64_t **a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a1 + 1;
  int v7 = (char *)operator new(0x40uLL);
  v13[0] = v7;
  v13[1] = v6;
  __int128 v8 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v7 + 28) = *(_OWORD *)a3;
  *(_OWORD *)(v7 + 44) = v8;
  *((_DWORD *)v7 + 15) = *(_DWORD *)(a3 + 32);
  char v14 = 1;
  uint64_t v9 = (void **)sub_100075560((uint64_t)a1, a2, &v12, (uint64_t)(v7 + 28));
  sub_10000AF70(a1, v12, v9, (void *)v13[0]);
  uint64_t v10 = v13[0];
  v13[0] = 0LL;
  sub_10000D0A8(v13, 0LL);
  return v10;
}

void sub_10007593C(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void *sub_100075954(void *a1, uint64_t *a2)
{
  *a1 = 0LL;
  a1[1] = 0LL;
  a1[2] = 0LL;
  sub_1000759A4(a1, *a2, a2[1], 0x8E38E38E38E38E39LL * ((a2[1] - *a2) >> 3));
  return a1;
}

void *sub_1000759A4(void *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = (uint64_t)result;
    sub_100075A18(result, a4);
    return (void *)sub_100075A70(v6, a2, a3);
  }

  return result;
}

void sub_100075A04( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
}

char *sub_100075A18(void *a1, unint64_t a2)
{
  if (a2 >= 0x38E38E38E38E38FLL) {
    sub_10000CCF0();
  }
  uint64_t result = (char *)sub_100075AA8((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[72 * a2];
  return result;
}

uint64_t sub_100075A70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_100075AD8(a1 + 16, a2, a3, *(void *)(a1 + 8));
  *(void *)(a1 + 8) = result;
  return result;
}

void sub_100075AA0(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void *sub_100075AA8(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x38E38E38E38E38FLL) {
    sub_10000F12C();
  }
  return operator new(72 * a2);
}

uint64_t sub_100075AD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v11 = a4;
  uint64_t v12 = a4;
  v9[0] = a1;
  v9[1] = &v11;
  _OWORD v9[2] = &v12;
  char v10 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      sub_100075B80(a1, v4, v6);
      v6 += 72LL;
      uint64_t v4 = v12 + 72;
      v12 += 72LL;
    }

    while (v6 != a3);
  }

  char v10 = 1;
  sub_100075C18((uint64_t)v9);
  return v4;
}

void sub_100075B6C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *sub_100075B80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = off_1002B2EA8;
  *(void *)(a2 + 8) = *(void *)(a3 + 8);
  sub_10000CBF8((void *)(a2 + 16), a3 + 16);
  *(void *)a2 = off_1002B2F08;
  *(_BYTE *)(a2 + sub_10000D448(v16 - 40) = *(_BYTE *)(a3 + 40);
  return sub_10000CBF8((void *)(a2 + 48), a3 + 48);
}

void sub_100075BFC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  void *v2 = v3;
  sub_100006F6C((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100075C18(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24)) {
    sub_100075C4C(a1);
  }
  return a1;
}

uint64_t sub_100075C4C(uint64_t result)
{
  uint64_t v1 = **(uint64_t (*****)(void))(result + 16);
  uint64_t v2 = **(uint64_t (*****)(void))(result + 8);
  if (v1 != v2)
  {
    uint64_t v3 = v1 - 9;
    uint64_t v4 = v1 - 9;
    do
    {
      __int128 v5 = *v4;
      v4 -= 9;
      uint64_t result = (*v5)(v3);
      BOOL v6 = v3 == v2;
      uint64_t v3 = v4;
    }

    while (!v6);
  }

  return result;
}

void sub_100075CA4(void ***a1)
{
  uint64_t v2 = *a1;
  if (*v2)
  {
    sub_100075D20((uint64_t)v2, (uint64_t (***)(void))*v2);
    uint64_t v3 = **a1;
    if (0x8E38E38E38E38E39LL * (((_BYTE *)(*a1)[2] - (_BYTE *)v3) >> 3) >= 0x38E38E38E38E38FLL) {
      __break(0x550Cu);
    }
    else {
      operator delete(v3);
    }
  }

uint64_t sub_100075D20(uint64_t result, uint64_t (***a2)(void))
{
  uint64_t v3 = result;
  uint64_t v4 = *(uint64_t (****)(void))(result + 8);
  if (v4 != a2)
  {
    __int128 v5 = v4 - 9;
    BOOL v6 = v4 - 9;
    do
    {
      int v7 = *v6;
      v6 -= 9;
      uint64_t result = (*v7)(v5);
      BOOL v8 = v5 == a2;
      __int128 v5 = v6;
    }

    while (!v8);
  }

  *(void *)(v3 + 8) = a2;
  return result;
}

uint64_t sub_100075D7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a1;
  if (a1 != a2)
  {
    while (!sub_1000EC0A8(v3, a3))
    {
      v3 += 72LL;
      if (v3 == a2) {
        return a2;
      }
    }
  }

  return v3;
}

uint64_t sub_100075DD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 == a3) {
    return a2;
  }
  uint64_t v6 = a3;
  uint64_t v7 = 0LL;
  do
  {
    uint64_t v8 = a4 + v7;
    uint64_t v9 = a2 + v7;
    *(void *)(a4 + v7 + 8) = *(void *)(a2 + v7 + 8);
    if (a2 == a4)
    {
      *(_BYTE *)(v8 + sub_10000D448(v16 - 40) = *(_BYTE *)(v9 + 40);
    }

    else
    {
      sub_100071098( (uint64_t *)(v8 + 16),  *(char **)(v9 + 16),  *(void *)(v9 + 24),  *(void *)(v9 + 24) - *(void *)(v9 + 16));
      *(_BYTE *)(v8 + sub_10000D448(v16 - 40) = *(_BYTE *)(v9 + 40);
      sub_100071098( (uint64_t *)(v8 + 48),  *(char **)(v9 + 48),  *(void *)(v9 + 56),  *(void *)(v9 + 56) - *(void *)(v9 + 48));
    }

    v7 += 72LL;
  }

  while (a2 + v7 != v6);
  return v6;
}

void *sub_100075E84(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t result = sub_100075FE0(a1 + 16, v3, a2);
  *(void *)(a1 + 8) = v3 + 72;
  return result;
}

void sub_100075EBC(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_100075EC4(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = 0x8E38E38E38E38E39LL * ((a1[1] - *a1) >> 3);
  unint64_t v3 = v2 + 1;
  if (v2 == -1)
  {
    __break(0x5500u);
LABEL_10:
    sub_10000CCF0();
  }

  if (v3 > 0x38E38E38E38E38ELL) {
    goto LABEL_10;
  }
  if (0x1C71C71C71C71C72LL * ((a1[2] - *a1) >> 3) > v3) {
    unint64_t v3 = 0x1C71C71C71C71C72LL * ((a1[2] - *a1) >> 3);
  }
  if (0x8E38E38E38E38E39LL * ((a1[2] - *a1) >> 3) >= 0x1C71C71C71C71C7LL) {
    unint64_t v6 = 0x38E38E38E38E38ELL;
  }
  else {
    unint64_t v6 = v3;
  }
  sub_1000760EC(v9, v6, v2, (uint64_t)(a1 + 2));
  sub_100075FE0((uint64_t)(a1 + 2), v10, a2);
  v10 += 72LL;
  sub_100076078(a1, v9);
  uint64_t v7 = a1[1];
  sub_100076310(v9);
  return v7;
}

void sub_100075FCC(_Unwind_Exception *a1, uint64_t a2, ...)
{
}

void *sub_100075FE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = off_1002B2EA8;
  *(void *)(a2 + 8) = *(void *)(a3 + 8);
  sub_10000CBF8((void *)(a2 + 16), a3 + 16);
  *(void *)a2 = off_1002B2F08;
  *(_BYTE *)(a2 + sub_10000D448(v16 - 40) = *(_BYTE *)(a3 + 40);
  return sub_10000CBF8((void *)(a2 + 48), a3 + 48);
}

void sub_10007605C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  void *v2 = v3;
  sub_100006F6C((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100076078(uint64_t *a1, void *a2)
{
  uint64_t result = sub_10007614C((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

void *sub_1000760EC(void *a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  a1[3] = 0LL;
  a1[4] = a4;
  if (a2) {
    uint64_t v7 = (char *)sub_100075AA8(a4, a2);
  }
  else {
    uint64_t v7 = 0LL;
  }
  uint64_t v8 = &v7[72 * a3];
  *a1 = v7;
  a1[1] = v8;
  a1[2] = v8;
  a1[3] = &v7[72 * a2];
  return a1;
}

uint64_t sub_10007614C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&__int128 v16 = a6;
  *((void *)&v16 + 1) = a7;
  __int128 v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  void v13[2] = &v16;
  char v14 = 0;
  if (a3 == a5)
  {
    uint64_t v11 = a6;
  }

  else
  {
    uint64_t v9 = a3;
    do
    {
      v9 -= 72LL;
      sub_100075FE0(a1, v7 - 72, v9);
      uint64_t v7 = *((void *)&v16 + 1) - 72LL;
      *((void *)&v16 + 1) -= 72LL;
    }

    while (v9 != a5);
    uint64_t v11 = v16;
  }

  char v14 = 1;
  sub_100076214((uint64_t)v13);
  return v11;
}

void sub_100076200( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_100076214(uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24)) {
    sub_100076248((uint64_t *)a1);
  }
  return a1;
}

void (***sub_100076248(uint64_t *a1))(void)
{
  uint64_t v1 = *(void *)(a1[2] + 8);
  uint64_t v11 = *(void *)a1[2];
  uint64_t v12 = v1;
  uint64_t v13 = v11;
  uint64_t v14 = v1;
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(a1[1] + 8);
  uint64_t v6 = *(void *)a1[1];
  uint64_t v7 = v3;
  uint64_t v8 = v6;
  uint64_t v9 = v3;
  return sub_1000762BC(v2, (uint64_t)v10, (uint64_t)v5);
}

void (***sub_1000762BC(uint64_t a1, uint64_t a2, uint64_t a3))(void)
{
  for (uint64_t result = *(void (****)(void))(a2 + 32);
        result != *(void (****)(void))(a3 + 32);
        *(void *)(a2 + 32) = result)
  {
    (**result)(result);
    uint64_t result = (void (***)(void))(*(void *)(a2 + 32) + 72LL);
  }

  return result;
}

void *sub_100076310(void *a1)
{
  uint64_t result = (void *)*a1;
  if (!*a1) {
    return a1;
  }
  if (0x8E38E38E38E38E39LL * ((uint64_t)(a1[3] - (void)result) >> 3) < 0x38E38E38E38E38FLL)
  {
    operator delete(result);
    return a1;
  }

  __break(0x550Cu);
  return result;
}

uint64_t sub_100076380(uint64_t a1, uint64_t a2)
{
  for (uint64_t result = *(void *)(a1 + 16); result != a2; uint64_t result = *(void *)(a1 + 16))
  {
    uint64_t v5 = *(void (***)(void))(result - 72);
    *(void *)(a1 + 16) = result - 72;
    (*v5)();
  }

  return result;
}

uint64_t sub_1000763C8(uint64_t result, uint64_t a2, unsigned int a3)
{
  if (a3 == 4) {
    goto LABEL_2;
  }
  uint64_t v4 = result;
  if (a3 > 1)
  {
    if (a3 != 2)
    {
      if (a3 != 3)
      {
LABEL_2:
        *(_WORD *)(a2 + 8) = 0;
        return result;
      }

      uint64_t result = *(void *)(*(void *)a2 + 8LL) & 0x7FFFFFFFFFFFFFFFLL;
      if (result == ((unint64_t)"N5boost3_bi6bind_tIvNS_4_mfi3mf2IvN2nl8wpantund17SpinelNCPInstanceEiNS_3anyEEENS"
                                        "0_5list3INS0_5valueIPS6_EENS_3argILi1EEENSD_ILi2EEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)
        || (uint64_t result = strcmp( (const char *)result,  (const char *)((unint64_t)"N5boost3_bi6bind_tIvNS_4_mfi3mf2IvN2nl8wpantund17SpinelNCPInstan ceEiNS_3anyEEENS0_5list3INS0_5valueIPS6_EENS_3argILi1EEENSD_ILi2EEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)),  !(_DWORD)result))
      {
        *(void *)a2 = v4;
      }

      else
      {
        *(void *)a2 = 0LL;
      }
    }
  }

  else
  {
    __int128 v5 = *(_OWORD *)result;
    *(void *)(a2 + 16) = *(void *)(result + 16);
    *(_OWORD *)a2 = v5;
  }

  return result;
}

uint64_t sub_100076464(uint64_t a1, unsigned int a2, unsigned int *a3)
{
  unsigned int v4 = a2;
  return sub_100076488(a1, &v4, a3);
}

uint64_t sub_100076488(uint64_t a1, unsigned int *a2, unsigned int *a3)
{
  v4[0] = a2;
  v4[1] = a3;
  return sub_1000764BC((uint64_t *)(a1 + 16), a1, v4);
}

uint64_t sub_1000764BC(uint64_t *a1, uint64_t a2, unsigned int **a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = **a3;
  uint64_t v6 = *(void *)a3[1];
  if (v6) {
    uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 24LL))(v6);
  }
  uint64_t v8 = v6;
  sub_100076554(a2, v4, v5, &v8);
  uint64_t result = v8;
  if (v8) {
    return (*(uint64_t (**)(uint64_t))(*(void *)v8 + 8LL))(v8);
  }
  return result;
}

void sub_100076534( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10) {
    (*(void (**)(uint64_t))(*(void *)a10 + 8LL))(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100076554(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = *(void (**)(void *, uint64_t, uint64_t *))a1;
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v7 = (void *)(a2 + (v5 >> 1));
  if ((v5 & 1) != 0) {
    uint64_t v6 = *(void (**)(void *, uint64_t, uint64_t *))(*v7 + v6);
  }
  uint64_t v8 = *a4;
  if (*a4) {
    uint64_t v8 = (*(uint64_t (**)(uint64_t))(*(void *)v8 + 24LL))(v8);
  }
  uint64_t v10 = v8;
  v6(v7, a3, &v10);
  uint64_t result = v10;
  if (v10) {
    return (*(uint64_t (**)(uint64_t))(*(void *)v10 + 8LL))(v10);
  }
  return result;
}

void sub_1000765D0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10) {
    (*(void (**)(uint64_t))(*(void *)a10 + 8LL))(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1000765F0(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x7FFFFFFFFFFFFFF8LL) {
    sub_10000ACA8();
  }
  if (a2 > 0x16)
  {
    if ((a2 | 7) == 0x17) {
      size_t v4 = 25LL;
    }
    else {
      size_t v4 = (a2 | 7) + 1;
    }
    uint64_t v5 = operator new(v4);
    *(void *)(a1 + 8) = a2;
    *(void *)(a1 + 16) = v4 | 0x8000000000000000LL;
    *(void *)a1 = v5;
  }

  else
  {
    *(void *)(a1 + 8) = 0LL;
    *(void *)(a1 + 16) = 0LL;
    *(void *)a1 = 0LL;
    *(_BYTE *)(a1 + 23) = a2;
  }

  return a1;
}

uint64_t sub_10007666C(uint64_t a1, const std::string *a2, int a3)
{
  return a1;
}

void sub_1000766C0( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1000766DC(uint64_t a1, const std::string *a2, int a3)
{
  *(_DWORD *)(a1 + 24) = a3;
  return a1;
}

void sub_100076730( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t (***sub_10007674C(uint64_t (***a1)(), uint64_t *a2))()
{
  uint64_t v5 = *a2;
  std::string::basic_string(&__p, (const std::string *)(a2 + 1));
  int v7 = *((_DWORD *)a2 + 8);
  sub_1000767D0(a1, (uint64_t)&v5);
  return a1;
}

void sub_1000767B4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t (***sub_1000767D0(uint64_t (***a1)(), uint64_t a2))()
{
  *a1 = 0LL;
  uint64_t v5 = *(void *)a2;
  std::string::basic_string(&__p, (const std::string *)(a2 + 8));
  int v7 = *(_DWORD *)(a2 + 32);
  sub_100076854(a1, &v5);
  return a1;
}

void sub_100076838( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100076854(uint64_t (***a1)(), uint64_t *a2)
{
  uint64_t v6 = *a2;
  std::string::basic_string(&__p, (const std::string *)(a2 + 1));
  int v8 = *((_DWORD *)a2 + 8);
  int v4 = sub_10007693C((uint64_t)off_1002B05B0, (uint64_t)&v6, a1 + 1);
  if (v4) {
    uint64_t v5 = off_1002B05B0;
  }
  else {
    uint64_t v5 = 0LL;
  }
  *a1 = v5;
}

void sub_1000768D8( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1000768F4(uint64_t *a1, _WORD *a2, int a3)
{
  if (a3 == 4)
  {
    a2[4] = 0;
  }

  else
  {
    sub_1000769D0(a1, a2, a3);
  }

uint64_t sub_100076914(uint64_t *a1, unsigned int a2, unsigned int *a3)
{
  unsigned int v4 = a2;
  return sub_100076AE0(*a1, &v4, a3);
}

uint64_t sub_10007693C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v8 = *(void *)a2;
  std::string::basic_string(&__p, (const std::string *)(a2 + 8));
  int v10 = *(_DWORD *)(a2 + 32);
  uint64_t v6 = sub_100076BE0(a1, &v8, a3);
  return v6;
}

void sub_1000769B4( _Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1000769D0(uint64_t *a1, _WORD *a2, int a3)
{
  switch(a3)
  {
    case 0:
      uint64_t v5 = *a1;
      uint64_t v6 = (char *)operator new(0x28uLL);
      *(void *)uint64_t v6 = *(void *)v5;
      std::string::basic_string((std::string *)(v6 + 8), (const std::string *)(v5 + 8));
      *((_DWORD *)v6 + 8) = *(_DWORD *)(v5 + 32);
      *(void *)a2 = v6;
      break;
    case 1:
      *(void *)a2 = *a1;
      *a1 = 0LL;
      break;
    case 2:
      uint64_t v7 = *(void *)a2;
      if (*(void *)a2)
      {
        operator delete((void *)v7);
      }

      goto LABEL_9;
    case 3:
      uint64_t v8 = (const char *)(*(void *)(*(void *)a2 + 8LL) & 0x7FFFFFFFFFFFFFFFLL);
      if (v8 == (const char *)((unint64_t)"N5boost3_bi6bind_tIvPFviNS_3anyENSt3__112basic_stringIcNS3_11char_trai"
                                                  "tsIcEENS3_9allocatorIcEEEEjENS0_5list4INS_3argILi1EEENSD_ILi2EEENS0_5v"
                                                  "alueIS9_EENSG_IjEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)
        || !strcmp( v8,  (const char *)((unint64_t)"N5boost3_bi6bind_tIvPFviNS_3anyENSt3__112basic_stringIcNS3_11char_traitsI cEENS3_9allocatorIcEEEEjENS0_5list4INS_3argILi1EEENSD_ILi2EEENS0_5valueIS 9_EENSG_IjEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))
      {
        *(void *)a2 = *a1;
      }

      else
      {
LABEL_9:
        *(void *)a2 = 0LL;
      }

      break;
    default:
      a2[4] = 0;
      break;
  }