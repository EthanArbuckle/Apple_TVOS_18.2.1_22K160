uint64_t sub_100257E44(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  int *v42;
  void *v43;
  void *v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  float *v52;
  char v53;
  float *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  uint64_t v61;
  unsigned int (*v62)(uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char v66;
  void (*v67)(char *, uint64_t);
  char *v68;
  void *v69;
  void *v70;
  int *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  char *v78;
  char *v79;
  v4 = type metadata accessor for RoutingSession.HostInfo(0LL);
  v5 = *(void *)(v4 - 8);
  v74 = v4;
  v75 = v5;
  __chkstk_darwin(v4);
  v72 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v73 = sub_100156B68(&qword_1003FC940);
  __chkstk_darwin(v73);
  v79 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v8 = sub_100156B68(&qword_1003F9448);
  v9 = __chkstk_darwin(v8);
  v78 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v11 = __chkstk_darwin(v9);
  v76 = (char *)&v68 - v12;
  __chkstk_darwin(v11);
  v77 = (char *)&v68 - v13;
  v14 = type metadata accessor for HostedRoutingSession.NowPlayingInfo(0LL);
  v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v18 = sub_100156B68(&qword_1003FC948);
  __chkstk_darwin(v18);
  v20 = (char *)&v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v21 = sub_100156B68(&qword_1003F9450);
  v22 = __chkstk_darwin(v21);
  v24 = (uint64_t *)((char *)&v68 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  v25 = __chkstk_darwin(v22);
  v27 = (char *)&v68 - v26;
  __chkstk_darwin(v25);
  v29 = (char *)&v68 - v28;
  v30 = a1[1];
  v31 = a2[1];
  if (*a1 == *a2 && v30 == v31
    || (v32 = _stringCompareWithSmolCheck(_:_:expecting:)(*a1, v30, *a2, v31, 0LL), LOBYTE(v33) = 0, (v32 & 1) != 0))
  {
    if ((sub_100248C10( a1[2],  a2[2],  type metadata accessor for HostedRoutingItem,  (uint64_t (*)(char *, char *))sub_100257980) & 1) == 0 || (sub_100248C10( a1[3],  a2[3],  type metadata accessor for HostedRoutingItem,  (uint64_t (*)(char *, char *))sub_100257980) & 1) == 0)
    {
      goto LABEL_32;
    }

    v68 = v17;
    v34 = type metadata accessor for HostedRoutingSession(0LL);
    v35 = *(int *)(v34 + 28);
    v69 = a1;
    sub_1001A8360((uint64_t)a1 + v35, (uint64_t)v29, &qword_1003F9450);
    v70 = a2;
    v71 = (int *)v34;
    sub_1001A8360((uint64_t)a2 + *(int *)(v34 + 28), (uint64_t)v27, &qword_1003F9450);
    v36 = (uint64_t)&v20[*(int *)(v18 + 48)];
    sub_1001A8360((uint64_t)v29, (uint64_t)v20, &qword_1003F9450);
    sub_1001A8360((uint64_t)v27, v36, &qword_1003F9450);
    v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
    if (v37((uint64_t)v20, 1LL, v14) == 1)
    {
      sub_1001603DC((uint64_t)v27, &qword_1003F9450);
      sub_1001603DC((uint64_t)v29, &qword_1003F9450);
      if (v37(v36, 1LL, v14) == 1)
      {
        sub_1001603DC((uint64_t)v20, &qword_1003F9450);
LABEL_14:
        v43 = v70;
        v42 = v71;
        v44 = v69;
        if ((static RoutingControls.== infix(_:_:)((char *)v69 + v71[8], (char *)v70 + v71[8]) & 1) == 0
          || (sub_1001AE868(*(void **)((char *)v44 + v42[9]), *(void **)((char *)v43 + v42[9])) & 1) == 0
          || (sub_1001AE868(*(void **)((char *)v44 + v42[10]), *(void **)((char *)v43 + v42[10])) & 1) == 0)
        {
          goto LABEL_32;
        }

        v45 = v42[11];
        v46 = (void *)((char *)v44 + v45);
        v47 = *(void *)((char *)v44 + v45 + 8);
        v48 = (void *)((char *)v43 + v45);
        v49 = v48[1];
        if (v47)
        {
          if (!v49) {
            goto LABEL_32;
          }
          if (*v46 != *v48 || v47 != v49)
          {
            v50 = _stringCompareWithSmolCheck(_:_:expecting:)(*v46, v47, *v48, v49, 0LL);
            LOBYTE(v33) = 0;
            if ((v50 & 1) == 0) {
              return v33 & 1;
            }
          }
        }

        else if (v49)
        {
          goto LABEL_32;
        }

        v51 = v42[12];
        v52 = (float *)((char *)v44 + v51);
        v53 = *((_BYTE *)v44 + v51 + 4);
        v54 = (float *)((char *)v43 + v51);
        v33 = *((unsigned __int8 *)v43 + v51 + 4);
        if ((v53 & 1) != 0)
        {
          v56 = (uint64_t)v78;
          v55 = (uint64_t)v79;
          v58 = (uint64_t)v76;
          v57 = (uint64_t)v77;
          if (!v33) {
            return v33 & 1;
          }
        }

        else
        {
          if (*v52 != *v54) {
            LOBYTE(v33) = 1;
          }
          v56 = (uint64_t)v78;
          v55 = (uint64_t)v79;
          v58 = (uint64_t)v76;
          v57 = (uint64_t)v77;
          if ((v33 & 1) != 0) {
            goto LABEL_32;
          }
        }

        if ((static Date.== infix(_:_:)((char *)v44 + v42[13], (char *)v43 + v42[13]) & 1) == 0
          || *((unsigned __int8 *)v44 + v42[14]) != *((unsigned __int8 *)v43 + v42[14]))
        {
LABEL_32:
          LOBYTE(v33) = 0;
          return v33 & 1;
        }

        sub_1001A8360((uint64_t)v44 + v42[15], v57, &qword_1003F9448);
        sub_1001A8360((uint64_t)v43 + v42[15], v58, &qword_1003F9448);
        v60 = v55 + *(int *)(v73 + 48);
        sub_1001A8360(v57, v55, &qword_1003F9448);
        sub_1001A8360(v58, v60, &qword_1003F9448);
        v61 = v74;
        v62 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48);
        if (v62(v55, 1LL, v74) == 1)
        {
          sub_1001603DC(v58, &qword_1003F9448);
          sub_1001603DC(v57, &qword_1003F9448);
          if (v62(v60, 1LL, v61) == 1)
          {
            sub_1001603DC(v55, &qword_1003F9448);
            goto LABEL_41;
          }
        }

        else
        {
          sub_1001A8360(v55, v56, &qword_1003F9448);
          if (v62(v60, 1LL, v61) != 1)
          {
            v63 = v75;
            v64 = v72;
            (*(void (**)(char *, uint64_t, uint64_t))(v75 + 32))(v72, v60, v61);
            v65 = sub_100156FEC( &qword_1003FC950,  (uint64_t (*)(uint64_t))&type metadata accessor for RoutingSession.HostInfo,  (uint64_t)&protocol conformance descriptor for RoutingSession.HostInfo);
            v66 = dispatch thunk of static Equatable.== infix(_:_:)(v56, v64, v61, v65);
            v67 = *(void (**)(char *, uint64_t))(v63 + 8);
            v67(v64, v61);
            sub_1001603DC(v58, &qword_1003F9448);
            sub_1001603DC(v57, &qword_1003F9448);
            v67((char *)v56, v61);
            sub_1001603DC(v55, &qword_1003F9448);
            if ((v66 & 1) == 0) {
              goto LABEL_32;
            }
LABEL_41:
            LOBYTE(v33) = *((_BYTE *)v44 + v71[16]) ^ *((_BYTE *)v43 + v71[16]) ^ 1;
            return v33 & 1;
          }

          sub_1001603DC(v58, &qword_1003F9448);
          sub_1001603DC(v57, &qword_1003F9448);
          (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v56, v61);
        }

        v38 = &qword_1003FC940;
        v39 = v55;
LABEL_12:
        sub_1001603DC(v39, v38);
        goto LABEL_32;
      }
    }

    else
    {
      sub_1001A8360((uint64_t)v20, (uint64_t)v24, &qword_1003F9450);
      if (v37(v36, 1LL, v14) != 1)
      {
        v40 = (uint64_t)v68;
        sub_1001A81D4(v36, (uint64_t)v68, type metadata accessor for HostedRoutingSession.NowPlayingInfo);
        v41 = sub_1002577C8(v24, v40);
        sub_1001A813C(v40, type metadata accessor for HostedRoutingSession.NowPlayingInfo);
        sub_1001603DC((uint64_t)v27, &qword_1003F9450);
        sub_1001603DC((uint64_t)v29, &qword_1003F9450);
        sub_1001A813C((uint64_t)v24, type metadata accessor for HostedRoutingSession.NowPlayingInfo);
        sub_1001603DC((uint64_t)v20, &qword_1003F9450);
        if ((v41 & 1) == 0) {
          goto LABEL_32;
        }
        goto LABEL_14;
      }

      sub_1001603DC((uint64_t)v27, &qword_1003F9450);
      sub_1001603DC((uint64_t)v29, &qword_1003F9450);
      sub_1001A813C((uint64_t)v24, type metadata accessor for HostedRoutingSession.NowPlayingInfo);
    }

    v38 = &qword_1003FC948;
    v39 = (uint64_t)v20;
    goto LABEL_12;
  }

  return v33 & 1;
}

uint64_t sub_100258594(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if (!v1) {
    return 0LL;
  }
  uint64_t v2 = result;
  LODWORD(result) = 0;
  v3 = (unsigned __int8 *)(v2 + 32);
  do
  {
    int v5 = *v3++;
    int v4 = v5;
    if ((v5 & ~(_DWORD)result) == 0) {
      int v4 = 0;
    }
    result = v4 | result;
    --v1;
  }

  while (v1);
  return result;
}

uint64_t sub_1002585CC(char a1)
{
  if ((a1 & 2) == 0)
  {
    if ((a1 & 1) != 0)
    {
      uint64_t v1 = 2LL;
      if ((a1 & 8) == 0) {
        return v1;
      }
    }

    else
    {
      uint64_t v1 = 0LL;
      if ((a1 & 8) == 0) {
        return v1;
      }
    }

    return v1 | 4;
  }

  if ((a1 & 1) == 0)
  {
    uint64_t v1 = 1LL;
    if ((a1 & 8) == 0) {
      return v1;
    }
    return v1 | 4;
  }

  uint64_t v1 = 3LL;
  if ((a1 & 8) != 0) {
    return v1 | 4;
  }
  return v1;
}

uint64_t type metadata accessor for HostedRoutingItem(uint64_t a1)
{
  return sub_100183BF8(a1, (uint64_t *)&unk_1004035F0, (uint64_t)&nominal type descriptor for HostedRoutingItem);
}

uint64_t type metadata accessor for HostedRoutingSession.NowPlayingInfo(uint64_t a1)
{
  return sub_100183BF8( a1,  (uint64_t *)&unk_100403620,  (uint64_t)&nominal type descriptor for HostedRoutingSession.NowPlayingInfo);
}

uint64_t type metadata accessor for HostedRoutingSourceSession(uint64_t a1)
{
  return sub_100183BF8(a1, (uint64_t *)&unk_100403600, (uint64_t)&nominal type descriptor for HostedRoutingSourceSession);
}

uint64_t sub_10025864C@<X0>(id *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10024D90C( a1,  *(void *)(v2 + 16),  *(void *)(v2 + 24),  *(void *)(v2 + 32),  *(void **)(v2 + 40),  *(void **)(v2 + 48),  a2);
}

uint64_t sub_10025867C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100156B68(&qword_1003FC438);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002586C4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100156B68(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 24LL))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for HostedRoutingSession(uint64_t a1)
{
  return sub_100183BF8(a1, (uint64_t *)&unk_100403610, (uint64_t)&nominal type descriptor for HostedRoutingSession);
}

uint64_t type metadata accessor for HostedRoutingSessionSnapshot(uint64_t a1)
{
  return sub_100183BF8( a1,  (uint64_t *)&unk_100403630,  (uint64_t)&nominal type descriptor for HostedRoutingSessionSnapshot);
}

unint64_t sub_100258734()
{
  unint64_t result = qword_1003FC4F8;
  if (!qword_1003FC4F8)
  {
    unint64_t result = swift_getWitnessTable(&unk_10034FAA0, &type metadata for RouteType);
    atomic_store(result, (unint64_t *)&qword_1003FC4F8);
  }

  return result;
}

unint64_t sub_10025877C()
{
  unint64_t result = qword_1003FC500;
  if (!qword_1003FC500)
  {
    unint64_t result = swift_getWitnessTable(&unk_10034FAC8, &type metadata for ConceptualRouteType);
    atomic_store(result, (unint64_t *)&qword_1003FC500);
  }

  return result;
}

unint64_t sub_1002587C4()
{
  unint64_t result = qword_1003FC508;
  if (!qword_1003FC508)
  {
    unint64_t result = swift_getWitnessTable(&unk_10034FBC0, &type metadata for DeviceType.ClusterMember);
    atomic_store(result, (unint64_t *)&qword_1003FC508);
  }

  return result;
}

unint64_t sub_10025880C()
{
  unint64_t result = qword_1003FC510;
  if (!qword_1003FC510)
  {
    unint64_t result = swift_getWitnessTable(&unk_10034FC50, &type metadata for DeviceType);
    atomic_store(result, (unint64_t *)&qword_1003FC510);
  }

  return result;
}

unint64_t sub_100258854()
{
  unint64_t result = qword_1003FC518;
  if (!qword_1003FC518)
  {
    unint64_t result = swift_getWitnessTable(&unk_10034FDE0, &type metadata for RoutingCapabilities);
    atomic_store(result, (unint64_t *)&qword_1003FC518);
  }

  return result;
}

unint64_t sub_1002588A0()
{
  unint64_t result = qword_1003FC520;
  if (!qword_1003FC520)
  {
    unint64_t result = swift_getWitnessTable(&unk_10034FE18, &type metadata for RoutingCapabilities);
    atomic_store(result, (unint64_t *)&qword_1003FC520);
  }

  return result;
}

unint64_t sub_1002588E8()
{
  unint64_t result = qword_1003FC528;
  if (!qword_1003FC528)
  {
    unint64_t result = swift_getWitnessTable(&unk_10034FE40, &type metadata for RoutingCapabilities);
    atomic_store(result, (unint64_t *)&qword_1003FC528);
  }

  return result;
}

unint64_t sub_100258930()
{
  unint64_t result = qword_1003FC530;
  if (!qword_1003FC530)
  {
    unint64_t result = swift_getWitnessTable(&unk_10034FFD8, &type metadata for VolumeCapabilities);
    atomic_store(result, (unint64_t *)&qword_1003FC530);
  }

  return result;
}

unint64_t sub_10025897C()
{
  unint64_t result = qword_1003FC538;
  if (!qword_1003FC538)
  {
    unint64_t result = swift_getWitnessTable(&unk_100350010, &type metadata for VolumeCapabilities);
    atomic_store(result, (unint64_t *)&qword_1003FC538);
  }

  return result;
}

unint64_t sub_1002589C4()
{
  unint64_t result = qword_1003FC540;
  if (!qword_1003FC540)
  {
    unint64_t result = swift_getWitnessTable(&unk_100350038, &type metadata for VolumeCapabilities);
    atomic_store(result, (unint64_t *)&qword_1003FC540);
  }

  return result;
}

uint64_t sub_100258A08()
{
  return sub_100156FEC(&qword_1003F8D30, type metadata accessor for HostedRoutingItem, (uint64_t)&unk_1003500D0);
}

unint64_t sub_100258A38()
{
  unint64_t result = qword_1003FC548;
  if (!qword_1003FC548)
  {
    unint64_t result = swift_getWitnessTable(&unk_100350160, &type metadata for HostedRoutingSourceSession.Source);
    atomic_store(result, (unint64_t *)&qword_1003FC548);
  }

  return result;
}

uint64_t sub_100258A7C()
{
  return sub_100156FEC(&qword_1003FC550, type metadata accessor for HostedRoutingSourceSession, (uint64_t)&unk_100350218);
}

unint64_t sub_100258AAC()
{
  unint64_t result = qword_1003FC558;
  if (!qword_1003FC558)
  {
    unint64_t result = swift_getWitnessTable(&unk_1003502A8, &type metadata for HostedRoutingSession.NowPlayingInfo.Publisher);
    atomic_store(result, (unint64_t *)&qword_1003FC558);
  }

  return result;
}

uint64_t sub_100258AF0()
{
  return sub_100156FEC( &qword_1003FC560,  type metadata accessor for HostedRoutingSession.NowPlayingInfo,  (uint64_t)&unk_100350360);
}

uint64_t sub_100258B1C()
{
  return sub_100156FEC(&qword_1003F94D0, type metadata accessor for HostedRoutingSession, (uint64_t)&unk_100350418);
}

uint64_t sub_100258B48()
{
  return sub_100156FEC( &qword_1003F9498,  type metadata accessor for HostedRoutingSessionSnapshot,  (uint64_t)&unk_1003504D0);
}

uint64_t *sub_100258B74(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 - 8);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16LL) & ~(unint64_t)v6));
    swift_retain(v9);
  }

  else
  {
    uint64_t v7 = sub_100156B68(&qword_1003F8E90);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1LL, v7))
    {
      memcpy(a1, a2, *(void *)(v5 + 64));
    }

    else
    {
      uint64_t v32 = v8;
      uint64_t v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      uint64_t v11 = a2[3];
      a1[2] = a2[2];
      a1[3] = v11;
      uint64_t v12 = a2[5];
      a1[4] = a2[4];
      a1[5] = v12;
      uint64_t v13 = a2[7];
      a1[6] = a2[6];
      a1[7] = v13;
      v14 = (int *)type metadata accessor for HostedRoutingItem(0LL);
      uint64_t v15 = v14[8];
      __dst = (char *)a1 + v15;
      v16 = (char *)a2 + v15;
      uint64_t v17 = type metadata accessor for RoutingItem.SelectionIndicator(0LL);
      uint64_t v29 = *(void *)(v17 - 8);
      v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v31(v16, 1LL, v17))
      {
        uint64_t v18 = sub_100156B68(&qword_1003F8920);
        memcpy(__dst, v16, *(void *)(*(void *)(v18 - 8) + 64LL));
      }

      else
      {
        (*(void (**)(char *, char *, uint64_t))(v29 + 16))(__dst, v16, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(__dst, 0LL, 1LL, v17);
      }

      *((_BYTE *)a1 + v14[9]) = *((_BYTE *)a2 + v14[9]);
      *((_BYTE *)a1 + v14[10]) = *((_BYTE *)a2 + v14[10]);
      *((_BYTE *)a1 + v14[11]) = *((_BYTE *)a2 + v14[11]);
      uint64_t v19 = v14[12];
      v20 = (char *)a1 + v19;
      v21 = (char *)a2 + v19;
      *(_DWORD *)v20 = *(_DWORD *)v21;
      v20[4] = v21[4];
      *((_BYTE *)a1 + v14[13]) = *((_BYTE *)a2 + v14[13]);
      uint64_t v22 = v14[14];
      v23 = (char *)a1 + v22;
      v24 = (char *)a2 + v22;
      uint64_t v25 = *(void *)v24;
      uint64_t v26 = *((void *)v24 + 1);
      unsigned __int16 v27 = *((_WORD *)v24 + 8);
      sub_10018390C(*(void *)v24, v26, v27);
      *(void *)v23 = v25;
      *((void *)v23 + 1) = v26;
      *((_WORD *)v23 + 8) = v27;
      *((_BYTE *)a1 + v14[15]) = *((_BYTE *)a2 + v14[15]);
      *((_BYTE *)a1 + v14[16]) = *((_BYTE *)a2 + v14[16]);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v32 + 56))(a1, 0LL, 1LL, v7);
    }
  }

  return a1;
}

uint64_t sub_100258DC0(uint64_t a1)
{
  uint64_t v2 = sub_100156B68(&qword_1003F8E90);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48LL))(a1, 1LL, v2);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = type metadata accessor for HostedRoutingItem(0LL);
    uint64_t v5 = a1 + *(int *)(v4 + 32);
    uint64_t v6 = type metadata accessor for RoutingItem.SelectionIndicator(0LL);
    uint64_t v7 = *(void *)(v6 - 8);
    return sub_1001835D8( *(void *)(a1 + *(int *)(v4 + 56)),  *(void *)(a1 + *(int *)(v4 + 56) + 8),  *(unsigned __int16 *)(a1 + *(int *)(v4 + 56) + 16));
  }

  return result;
}

void *sub_100258EA4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_100156B68(&qword_1003F8E90);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1LL, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
  }

  else
  {
    uint64_t v30 = v7;
    uint64_t v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    uint64_t v9 = a2[3];
    a1[2] = a2[2];
    a1[3] = v9;
    uint64_t v10 = a2[5];
    a1[4] = a2[4];
    a1[5] = v10;
    uint64_t v11 = a2[7];
    a1[6] = a2[6];
    a1[7] = v11;
    uint64_t v12 = (int *)type metadata accessor for HostedRoutingItem(0LL);
    uint64_t v13 = v12[8];
    __dst = (char *)a1 + v13;
    v14 = (char *)a2 + v13;
    uint64_t v15 = type metadata accessor for RoutingItem.SelectionIndicator(0LL);
    uint64_t v27 = *(void *)(v15 - 8);
    v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v28(v14, 1LL, v15))
    {
      uint64_t v16 = sub_100156B68(&qword_1003F8920);
      memcpy(__dst, v14, *(void *)(*(void *)(v16 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(__dst, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(__dst, 0LL, 1LL, v15);
    }

    *((_BYTE *)a1 + v12[9]) = *((_BYTE *)a2 + v12[9]);
    *((_BYTE *)a1 + v12[10]) = *((_BYTE *)a2 + v12[10]);
    *((_BYTE *)a1 + v12[11]) = *((_BYTE *)a2 + v12[11]);
    uint64_t v17 = v12[12];
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
    v18[4] = v19[4];
    *((_BYTE *)a1 + v12[13]) = *((_BYTE *)a2 + v12[13]);
    uint64_t v20 = v12[14];
    v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    uint64_t v23 = *(void *)v22;
    uint64_t v24 = *((void *)v22 + 1);
    unsigned __int16 v25 = *((_WORD *)v22 + 8);
    sub_10018390C(*(void *)v22, v24, v25);
    *(void *)v21 = v23;
    *((void *)v21 + 1) = v24;
    *((_WORD *)v21 + 8) = v25;
    *((_BYTE *)a1 + v12[15]) = *((_BYTE *)a2 + v12[15]);
    *((_BYTE *)a1 + v12[16]) = *((_BYTE *)a2 + v12[16]);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(a1, 0LL, 1LL, v6);
  }

  return a1;
}

void *sub_1002590D0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_100156B68(&qword_1003F8E90);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1LL, v6);
  int v10 = v8(a2, 1LL, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_1001603DC((uint64_t)a1, &qword_1003F8E90);
      goto LABEL_7;
    }

    *a1 = *a2;
    a1[1] = a2[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    a1[2] = a2[2];
    a1[3] = a2[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    a1[4] = a2[4];
    a1[5] = a2[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    a1[6] = a2[6];
    a1[7] = a2[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v16 = (int *)type metadata accessor for HostedRoutingItem(0LL);
    uint64_t v17 = v16[8];
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    uint64_t v20 = type metadata accessor for RoutingItem.SelectionIndicator(0LL);
    uint64_t v21 = *(void *)(v20 - 8);
    uint64_t v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
    int v23 = v22(v18, 1LL, v20);
    int v24 = v22(v19, 1LL, v20);
    if (v23)
    {
      if (!v24)
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0LL, 1LL, v20);
LABEL_16:
        *((_BYTE *)a1 + v16[9]) = *((_BYTE *)a2 + v16[9]);
        *((_BYTE *)a1 + v16[10]) = *((_BYTE *)a2 + v16[10]);
        *((_BYTE *)a1 + v16[11]) = *((_BYTE *)a2 + v16[11]);
        uint64_t v36 = v16[12];
        v37 = (char *)a1 + v36;
        v38 = (char *)a2 + v36;
        int v39 = *(_DWORD *)v38;
        v37[4] = v38[4];
        *(_DWORD *)v37 = v39;
        *((_BYTE *)a1 + v16[13]) = *((_BYTE *)a2 + v16[13]);
        uint64_t v40 = v16[14];
        v41 = (char *)a1 + v40;
        v42 = (char *)a2 + v40;
        uint64_t v43 = *(void *)v42;
        uint64_t v44 = *((void *)v42 + 1);
        unsigned __int16 v45 = *((_WORD *)v42 + 8);
        sub_10018390C(*(void *)v42, v44, v45);
        uint64_t v46 = *(void *)v41;
        uint64_t v47 = *((void *)v41 + 1);
        *(void *)v41 = v43;
        *((void *)v41 + 1) = v44;
        unsigned int v48 = *((unsigned __int16 *)v41 + 8);
        *((_WORD *)v41 + 8) = v45;
        sub_1001835D8(v46, v47, v48);
        *((_BYTE *)a1 + v16[15]) = *((_BYTE *)a2 + v16[15]);
        *((_BYTE *)a1 + v16[16]) = *((_BYTE *)a2 + v16[16]);
        return a1;
      }
    }

    else
    {
      if (!v24)
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 24))(v18, v19, v20);
        goto LABEL_16;
      }

      (*(void (**)(char *, uint64_t))(v21 + 8))(v18, v20);
    }

    uint64_t v35 = sub_100156B68(&qword_1003F8920);
    memcpy(v18, v19, *(void *)(*(void *)(v35 - 8) + 64LL));
    goto LABEL_16;
  }

  if (v10)
  {
LABEL_7:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
    return a1;
  }

  uint64_t v53 = v7;
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  uint64_t v11 = (int *)type metadata accessor for HostedRoutingItem(0LL);
  uint64_t v12 = v11[8];
  __dst = (char *)a1 + v12;
  uint64_t v13 = (char *)a2 + v12;
  uint64_t v14 = type metadata accessor for RoutingItem.SelectionIndicator(0LL);
  uint64_t v50 = *(void *)(v14 - 8);
  v51 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v51(v13, 1LL, v14))
  {
    uint64_t v15 = sub_100156B68(&qword_1003F8920);
    memcpy(__dst, v13, *(void *)(*(void *)(v15 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v50 + 16))(__dst, v13, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(__dst, 0LL, 1LL, v14);
  }

  *((_BYTE *)a1 + v11[9]) = *((_BYTE *)a2 + v11[9]);
  *((_BYTE *)a1 + v11[10]) = *((_BYTE *)a2 + v11[10]);
  *((_BYTE *)a1 + v11[11]) = *((_BYTE *)a2 + v11[11]);
  uint64_t v25 = v11[12];
  uint64_t v26 = (char *)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  int v28 = *(_DWORD *)v27;
  v26[4] = v27[4];
  *(_DWORD *)uint64_t v26 = v28;
  *((_BYTE *)a1 + v11[13]) = *((_BYTE *)a2 + v11[13]);
  uint64_t v29 = v11[14];
  uint64_t v30 = (char *)a1 + v29;
  v31 = (char *)a2 + v29;
  uint64_t v32 = *(void *)v31;
  uint64_t v33 = *((void *)v31 + 1);
  unsigned __int16 v34 = *((_WORD *)v31 + 8);
  sub_10018390C(*(void *)v31, v33, v34);
  *(void *)uint64_t v30 = v32;
  *((void *)v30 + 1) = v33;
  *((_WORD *)v30 + 8) = v34;
  *((_BYTE *)a1 + v11[15]) = *((_BYTE *)a2 + v11[15]);
  *((_BYTE *)a1 + v11[16]) = *((_BYTE *)a2 + v11[16]);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v53 + 56))(a1, 0LL, 1LL, v6);
  return a1;
}

_OWORD *sub_10025953C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = sub_100156B68(&qword_1003F8E90);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1LL, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
  }

  else
  {
    __int128 v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    __int128 v9 = a2[3];
    a1[2] = a2[2];
    a1[3] = v9;
    int v10 = (int *)type metadata accessor for HostedRoutingItem(0LL);
    uint64_t v11 = v10[8];
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = type metadata accessor for RoutingItem.SelectionIndicator(0LL);
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1LL, v14))
    {
      uint64_t v16 = sub_100156B68(&qword_1003F8920);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0LL, 1LL, v14);
    }

    *((_BYTE *)a1 + v10[9]) = *((_BYTE *)a2 + v10[9]);
    *((_BYTE *)a1 + v10[10]) = *((_BYTE *)a2 + v10[10]);
    *((_BYTE *)a1 + v10[11]) = *((_BYTE *)a2 + v10[11]);
    uint64_t v17 = v10[12];
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
    v18[4] = v19[4];
    *((_BYTE *)a1 + v10[13]) = *((_BYTE *)a2 + v10[13]);
    uint64_t v20 = v10[14];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
    *((_WORD *)v21 + 8) = *((_WORD *)v22 + 8);
    *((_BYTE *)a1 + v10[15]) = *((_BYTE *)a2 + v10[15]);
    *((_BYTE *)a1 + v10[16]) = *((_BYTE *)a2 + v10[16]);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0LL, 1LL, v6);
  }

  return a1;
}

void *sub_100259700(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_100156B68(&qword_1003F8E90);
  uint64_t v7 = *(void *)(v6 - 8);
  __int128 v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1LL, v6);
  int v10 = v8(a2, 1LL, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_1001603DC((uint64_t)a1, &qword_1003F8E90);
      goto LABEL_7;
    }

    uint64_t v20 = a2[1];
    *a1 = *a2;
    a1[1] = v20;
    swift_bridgeObjectRelease();
    uint64_t v21 = a2[3];
    a1[2] = a2[2];
    a1[3] = v21;
    swift_bridgeObjectRelease();
    uint64_t v22 = a2[5];
    a1[4] = a2[4];
    a1[5] = v22;
    swift_bridgeObjectRelease();
    uint64_t v23 = a2[7];
    a1[6] = a2[6];
    a1[7] = v23;
    swift_bridgeObjectRelease();
    int v24 = (int *)type metadata accessor for HostedRoutingItem(0LL);
    uint64_t v25 = v24[8];
    uint64_t v26 = (char *)a1 + v25;
    uint64_t v27 = (char *)a2 + v25;
    uint64_t v28 = type metadata accessor for RoutingItem.SelectionIndicator(0LL);
    uint64_t v29 = *(void *)(v28 - 8);
    uint64_t v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 48);
    int v31 = v30(v26, 1LL, v28);
    int v32 = v30(v27, 1LL, v28);
    if (v31)
    {
      if (!v32)
      {
        (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v26, v27, v28);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0LL, 1LL, v28);
LABEL_16:
        *((_BYTE *)a1 + v24[9]) = *((_BYTE *)a2 + v24[9]);
        *((_BYTE *)a1 + v24[10]) = *((_BYTE *)a2 + v24[10]);
        *((_BYTE *)a1 + v24[11]) = *((_BYTE *)a2 + v24[11]);
        uint64_t v40 = v24[12];
        v41 = (char *)a1 + v40;
        v42 = (char *)a2 + v40;
        *(_DWORD *)v41 = *(_DWORD *)v42;
        v41[4] = v42[4];
        *((_BYTE *)a1 + v24[13]) = *((_BYTE *)a2 + v24[13]);
        uint64_t v43 = v24[14];
        uint64_t v44 = (char *)a1 + v43;
        unsigned __int16 v45 = (char *)a2 + v43;
        __int16 v46 = *((_WORD *)v45 + 8);
        uint64_t v47 = *(void *)v44;
        uint64_t v48 = *((void *)v44 + 1);
        *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
        unsigned int v49 = *((unsigned __int16 *)v44 + 8);
        *((_WORD *)v44 + 8) = v46;
        sub_1001835D8(v47, v48, v49);
        *((_BYTE *)a1 + v24[15]) = *((_BYTE *)a2 + v24[15]);
        *((_BYTE *)a1 + v24[16]) = *((_BYTE *)a2 + v24[16]);
        return a1;
      }
    }

    else
    {
      if (!v32)
      {
        (*(void (**)(char *, char *, uint64_t))(v29 + 40))(v26, v27, v28);
        goto LABEL_16;
      }

      (*(void (**)(char *, uint64_t))(v29 + 8))(v26, v28);
    }

    uint64_t v39 = sub_100156B68(&qword_1003F8920);
    memcpy(v26, v27, *(void *)(*(void *)(v39 - 8) + 64LL));
    goto LABEL_16;
  }

  if (v10)
  {
LABEL_7:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
    return a1;
  }

  __int128 v11 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v11;
  __int128 v12 = *((_OWORD *)a2 + 3);
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  *((_OWORD *)a1 + 3) = v12;
  uint64_t v13 = (int *)type metadata accessor for HostedRoutingItem(0LL);
  uint64_t v14 = v13[8];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = type metadata accessor for RoutingItem.SelectionIndicator(0LL);
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1LL, v17))
  {
    uint64_t v19 = sub_100156B68(&qword_1003F8920);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v15, v16, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0LL, 1LL, v17);
  }

  *((_BYTE *)a1 + v13[9]) = *((_BYTE *)a2 + v13[9]);
  *((_BYTE *)a1 + v13[10]) = *((_BYTE *)a2 + v13[10]);
  *((_BYTE *)a1 + v13[11]) = *((_BYTE *)a2 + v13[11]);
  uint64_t v33 = v13[12];
  unsigned __int16 v34 = (char *)a1 + v33;
  uint64_t v35 = (char *)a2 + v33;
  *(_DWORD *)unsigned __int16 v34 = *(_DWORD *)v35;
  v34[4] = v35[4];
  *((_BYTE *)a1 + v13[13]) = *((_BYTE *)a2 + v13[13]);
  uint64_t v36 = v13[14];
  v37 = (char *)a1 + v36;
  v38 = (char *)a2 + v36;
  *(_OWORD *)v37 = *(_OWORD *)v38;
  *((_WORD *)v37 + 8) = *((_WORD *)v38 + 8);
  *((_BYTE *)a1 + v13[15]) = *((_BYTE *)a2 + v13[15]);
  *((_BYTE *)a1 + v13[16]) = *((_BYTE *)a2 + v13[16]);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0LL, 1LL, v6);
  return a1;
}

uint64_t sub_100259A94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100259AA0);
}

uint64_t sub_100259AA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100156B68(&qword_1003F8E90);
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48LL))(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0LL;
  }
}

uint64_t sub_100259AF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100259AFC);
}

uint64_t sub_100259AFC(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0LL;
  }
  uint64_t v6 = sub_100156B68(&qword_1003F8E90);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56LL))(a1, v5, a3, v6);
}

uint64_t sub_100259B50(uint64_t a1)
{
  uint64_t v2 = sub_100156B68(&qword_1003F8E90);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48LL))(a1, 1LL, v2);
}

uint64_t sub_100259B8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100156B68(&qword_1003F8E90);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56LL))(a1, a2, 1LL, v4);
}

uint64_t type metadata accessor for HostedRoutingError(uint64_t a1)
{
  return sub_100183BF8(a1, (uint64_t *)&unk_1004035E0, (uint64_t)&nominal type descriptor for HostedRoutingError);
}

uint64_t sub_100259BE4(uint64_t a1)
{
  uint64_t result = type metadata accessor for HostedRoutingItem(319LL);
  if (v3 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload(a1, 256LL, *(void *)(result - 8) + 64LL, 1LL);
    return 0LL;
  }

  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for RouteType(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_100259E94(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_10018390C);
}

uint64_t destroy for RouteType(uint64_t a1)
{
  return sub_1001835D8(*(void *)a1, *(void *)(a1 + 8), *(unsigned __int16 *)(a1 + 16));
}

uint64_t *assignWithCopy for RouteType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_100259EF0( a1,  a2,  a3,  (void (*)(void, uint64_t, uint64_t))sub_10018390C,  (void (*)(uint64_t, uint64_t, uint64_t))sub_1001835D8);
}

__n128 initializeWithTake for DeviceType(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t *assignWithTake for RouteType(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_100259F5C(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1001835D8);
}

uint64_t getEnumTagSinglePayload for RouteType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 >= 0x1FA && *(_BYTE *)(a1 + 18)) {
    return (*(_DWORD *)a1 + 506);
  }
  unsigned int v3 = ((((*(unsigned __int16 *)(a1 + 16) >> 2) & 0x180 | (*(_WORD *)(a1 + 16) >> 1)) >> 6) & 0xFFFFFE07 | (8 * ((*(unsigned __int16 *)(a1 + 16) >> 1) & 0x3F))) ^ 0x1FF;
  if (v3 >= 0x1F9) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for RouteType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x1F9)
  {
    *(_WORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 506;
    *(void *)(result + 8) = 0LL;
    if (a3 >= 0x1FA) {
      *(_BYTE *)(result + 18) = 1;
    }
  }

  else
  {
    if (a3 >= 0x1FA) {
      *(_BYTE *)(result + 18) = 0;
    }
    if (a2)
    {
      *(void *)__n128 result = 0LL;
      *(void *)(result + 8) = 0LL;
      *(_WORD *)(result + 16) = (((-a2 & 0x1F8) >> 2) - ((_BYTE)a2 << 7)) & 0xFE | (((-a2 >> 1) & 3) << 9);
    }
  }

  return result;
}

uint64_t sub_100259D48(uint64_t a1)
{
  unsigned int v1 = HIBYTE(*(unsigned __int16 *)(a1 + 16)) & 6 | (*(unsigned __int16 *)(a1 + 16) >> 7) & 1;
  if (v1 <= 5) {
    return v1;
  }
  else {
    return (*(_DWORD *)a1 + 6);
  }
}

uint64_t sub_100259D6C(uint64_t result)
{
  *(_WORD *)(result + 16) &= 0xF97Fu;
  return result;
}

uint64_t sub_100259D80(uint64_t result, unsigned int a2)
{
  if (a2 < 6)
  {
    *(_WORD *)(result + 16) = ((_WORD)a2 << 8) & 0x600 | ((a2 & 1) << 7) | *(_WORD *)(result + 16) & 0xF901;
  }

  else
  {
    *(void *)__n128 result = a2 - 6;
    *(void *)(result + 8) = 0LL;
    *(_WORD *)(result + 16) = 1536;
  }

  return result;
}

ValueMetadata *type metadata accessor for RouteType()
{
  return &type metadata for RouteType;
}

uint64_t storeEnumTagSinglePayload for ConceptualRouteType(uint64_t a1, int a2, int a3)
{
  else {
    int v3 = 2;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2) {
    return ((uint64_t (*)(void))((char *)sub_100259E0C + 4 * byte_10034F979[v4]))();
  }
  else {
    return ((uint64_t (*)(void))((char *)sub_100259E2C + 4 * byte_10034F97E[v4]))();
  }
}

_BYTE *sub_100259E0C(_BYTE *result, char a2)
{
  *__n128 result = a2;
  return result;
}

_BYTE *sub_100259E2C(_BYTE *result)
{
  *__n128 result = 0;
  return result;
}

_DWORD *sub_100259E34(_DWORD *result, int a2)
{
  *__n128 result = a2;
  return result;
}

_WORD *sub_100259E3C(_WORD *result, __int16 a2)
{
  *__n128 result = a2;
  return result;
}

_WORD *sub_100259E44(_WORD *result)
{
  *__n128 result = 0;
  return result;
}

_DWORD *sub_100259E4C(_DWORD *result)
{
  *__n128 result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ConceptualRouteType()
{
  return &type metadata for ConceptualRouteType;
}

ValueMetadata *type metadata accessor for DeviceModels()
{
  return &type metadata for DeviceModels;
}

uint64_t initializeBufferWithCopyOfBuffer for DeviceType(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_100259E94(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_10018394C);
}

uint64_t destroy for DeviceType(uint64_t a1)
{
  return sub_100183618(*(void *)a1, *(void *)(a1 + 8), *(_WORD *)(a1 + 16));
}

uint64_t sub_100259E94(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t))
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = *((unsigned __int16 *)a2 + 8);
  a4(*a2, v6, v7);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(_WORD *)(a1 + 16) = v7;
  return a1;
}

uint64_t *assignWithCopy for DeviceType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_100259EF0( a1,  a2,  a3,  (void (*)(void, uint64_t, uint64_t))sub_10018394C,  (void (*)(uint64_t, uint64_t, uint64_t))sub_100183618);
}

uint64_t *sub_100259EF0( uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  uint64_t v9 = *((unsigned __int16 *)a2 + 8);
  a4(*a2, v8, v9);
  uint64_t v10 = *a1;
  uint64_t v11 = a1[1];
  *a1 = v7;
  a1[1] = v8;
  uint64_t v12 = *((unsigned __int16 *)a1 + 8);
  *((_WORD *)a1 + 8) = v9;
  a5(v10, v11, v12);
  return a1;
}

uint64_t *assignWithTake for DeviceType(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_100259F5C(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_100183618);
}

uint64_t *sub_100259F5C( uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  __int16 v5 = *(_WORD *)(a2 + 16);
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v8 = *((unsigned __int16 *)a1 + 8);
  *((_WORD *)a1 + 8) = v5;
  a4(v6, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for DeviceType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 >= 0x3FEF && *(_BYTE *)(a1 + 18)) {
    return (*(_DWORD *)a1 + 16367);
  }
  unsigned int v3 = ((*(unsigned __int16 *)(a1 + 16) >> 11) | (32
                                                * ((*(unsigned __int16 *)(a1 + 16) >> 2) & 0x180 | (*(_WORD *)(a1 + 16) >> 1)))) ^ 0x3FFF;
  if (v3 >= 0x3FEE) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for DeviceType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3FEE)
  {
    *(_WORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 16367;
    *(void *)(result + 8) = 0LL;
    if (a3 >= 0x3FEF) {
      *(_BYTE *)(result + 18) = 1;
    }
  }

  else
  {
    if (a3 >= 0x3FEF) {
      *(_BYTE *)(result + 18) = 0;
    }
    if (a2)
    {
      unsigned int v3 = ((-a2 >> 5) & 0x1FF) - (a2 << 9);
      *(void *)__n128 result = 0LL;
      *(void *)(result + 8) = 0LL;
      *(_WORD *)(result + 16) = (4 * v3) & 0xFE00 | (2 * (v3 & 0x7F));
    }
  }

  return result;
}

uint64_t sub_10025A074(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int16 *)(a1 + 16) >> 11;
  if (v1 <= 0x10) {
    return v1;
  }
  else {
    return (*(_DWORD *)a1 + 17);
  }
}

uint64_t sub_10025A090(uint64_t result)
{
  *(_WORD *)(result + 16) &= 0x7FFu;
  return result;
}

uint64_t sub_10025A0A0(uint64_t result, unsigned int a2)
{
  if (a2 < 0x11)
  {
    *(_WORD *)(result + 16) = *(_WORD *)(result + 16) & 0x101 | ((_WORD)a2 << 11);
  }

  else
  {
    *(void *)__n128 result = a2 - 17;
    *(void *)(result + 8) = 0LL;
    *(_WORD *)(result + 16) = -30720;
  }

  return result;
}

ValueMetadata *type metadata accessor for DeviceType()
{
  return &type metadata for DeviceType;
}

uint64_t destroy for DeviceType.ClusterMember(uint64_t a1)
{
  return sub_1001835D8(*(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned __int16 *)(a1 + 32));
}

uint64_t initializeWithCopy for DeviceType.ClusterMember(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  unsigned int v6 = *(unsigned __int16 *)(a2 + 32);
  swift_bridgeObjectRetain();
  sub_10018390C(v4, v5, v6);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(_WORD *)(a1 + 32) = v6;
  return a1;
}

uint64_t assignWithCopy for DeviceType.ClusterMember(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = v2[2];
  uint64_t v5 = v2[3];
  LODWORD(v2) = *((unsigned __int16 *)v2 + 16);
  sub_10018390C(v4, v5, v2);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  unsigned int v8 = *(unsigned __int16 *)(a1 + 32);
  *(_WORD *)(a1 + 32) = (_WORD)v2;
  sub_1001835D8(v6, v7, v8);
  return a1;
}

__n128 initializeWithTake for DeviceType.ClusterMember(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  __int128 v3 = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for DeviceType.ClusterMember(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  __int16 v5 = *(_WORD *)(a2 + 32);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  unsigned int v8 = *(unsigned __int16 *)(a1 + 32);
  *(_WORD *)(a1 + 32) = v5;
  sub_1001835D8(v6, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for DeviceType.ClusterMember(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 34)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DeviceType.ClusterMember(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0LL;
    *(void *)(result + 24) = 0LL;
    *(_WORD *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0LL;
    if (a3 < 0) {
      *(_BYTE *)(result + 34) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 34) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for DeviceType.ClusterMember()
{
  return &type metadata for DeviceType.ClusterMember;
}

ValueMetadata *type metadata accessor for RoutingCapabilities()
{
  return &type metadata for RoutingCapabilities;
}

ValueMetadata *type metadata accessor for VolumeCapabilities()
{
  return &type metadata for VolumeCapabilities;
}

void *sub_10025A2F4(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v16 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v16);
  }

  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[5];
    a1[4] = a2[4];
    a1[5] = v9;
    uint64_t v10 = a2[7];
    uint64_t v11 = a3[8];
    __dst = (char *)a1 + v11;
    uint64_t v12 = (char *)a2 + v11;
    a1[6] = a2[6];
    a1[7] = v10;
    uint64_t v13 = type metadata accessor for RoutingItem.SelectionIndicator(0LL);
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v28(v12, 1LL, v13))
    {
      uint64_t v15 = sub_100156B68(&qword_1003F8920);
      memcpy(__dst, v12, *(void *)(*(void *)(v15 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(__dst, v12, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(__dst, 0LL, 1LL, v13);
    }

    uint64_t v17 = a3[10];
    *((_BYTE *)v4 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    *((_BYTE *)v4 + v17) = *((_BYTE *)a2 + v17);
    uint64_t v18 = a3[12];
    *((_BYTE *)v4 + a3[11]) = *((_BYTE *)a2 + a3[11]);
    uint64_t v19 = (char *)v4 + v18;
    uint64_t v20 = (char *)a2 + v18;
    *(_DWORD *)uint64_t v19 = *(_DWORD *)v20;
    v19[4] = v20[4];
    uint64_t v21 = a3[14];
    *((_BYTE *)v4 + a3[13]) = *((_BYTE *)a2 + a3[13]);
    uint64_t v22 = (char *)v4 + v21;
    uint64_t v23 = *(void *)((char *)a2 + v21);
    uint64_t v24 = *(void *)((char *)a2 + v21 + 8);
    unsigned __int16 v25 = *(_WORD *)((char *)a2 + v21 + 16);
    sub_10018390C(v23, v24, v25);
    *(void *)uint64_t v22 = v23;
    *((void *)v22 + 1) = v24;
    *((_WORD *)v22 + 8) = v25;
    uint64_t v26 = a3[16];
    *((_BYTE *)v4 + a3[15]) = *((_BYTE *)a2 + a3[15]);
    *((_BYTE *)v4 + v26) = *((_BYTE *)a2 + v26);
  }

  return v4;
}

uint64_t sub_10025A4C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = type metadata accessor for RoutingItem.SelectionIndicator(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  return sub_1001835D8( *(void *)(a1 + *(int *)(a2 + 56)),  *(void *)(a1 + *(int *)(a2 + 56) + 8),  *(unsigned __int16 *)(a1 + *(int *)(a2 + 56) + 16));
}

void *sub_10025A568(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  uint64_t v9 = a2[7];
  uint64_t v10 = a3[8];
  __dst = (char *)a1 + v10;
  uint64_t v11 = (char *)a2 + v10;
  a1[6] = a2[6];
  a1[7] = v9;
  uint64_t v12 = type metadata accessor for RoutingItem.SelectionIndicator(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v26(v11, 1LL, v12))
  {
    uint64_t v14 = sub_100156B68(&qword_1003F8920);
    memcpy(__dst, v11, *(void *)(*(void *)(v14 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0LL, 1LL, v12);
  }

  uint64_t v15 = a3[10];
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  *((_BYTE *)a1 + v15) = *((_BYTE *)a2 + v15);
  uint64_t v16 = a3[12];
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  v17[4] = v18[4];
  uint64_t v19 = a3[14];
  *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = *(void *)((char *)a2 + v19);
  uint64_t v22 = *(void *)((char *)a2 + v19 + 8);
  unsigned __int16 v23 = *(_WORD *)((char *)a2 + v19 + 16);
  sub_10018390C(v21, v22, v23);
  *(void *)uint64_t v20 = v21;
  *((void *)v20 + 1) = v22;
  *((_WORD *)v20 + 8) = v23;
  uint64_t v24 = a3[16];
  *((_BYTE *)a1 + a3[15]) = *((_BYTE *)a2 + a3[15]);
  *((_BYTE *)a1 + v24) = *((_BYTE *)a2 + v24);
  return a1;
}

void *sub_10025A710(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[8];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for RoutingItem.SelectionIndicator(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1LL, v9);
  int v13 = v11(v8, 1LL, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }

  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_100156B68(&qword_1003F8920);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0LL, 1LL, v9);
LABEL_7:
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  uint64_t v15 = a3[12];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  int v18 = *(_DWORD *)v17;
  v16[4] = v17[4];
  *(_DWORD *)uint64_t v16 = v18;
  *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
  uint64_t v19 = a3[14];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = *(void *)v21;
  uint64_t v23 = *((void *)v21 + 1);
  unsigned __int16 v24 = *((_WORD *)v21 + 8);
  sub_10018390C(*(void *)v21, v23, v24);
  uint64_t v25 = *(void *)v20;
  uint64_t v26 = *((void *)v20 + 1);
  *(void *)uint64_t v20 = v22;
  *((void *)v20 + 1) = v23;
  unsigned int v27 = *((unsigned __int16 *)v20 + 8);
  *((_WORD *)v20 + 8) = v24;
  sub_1001835D8(v25, v26, v27);
  *((_BYTE *)a1 + a3[15]) = *((_BYTE *)a2 + a3[15]);
  *((_BYTE *)a1 + a3[16]) = *((_BYTE *)a2 + a3[16]);
  return a1;
}

_OWORD *sub_10025A93C(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  __int128 v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a3[8];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for RoutingItem.SelectionIndicator(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1LL, v11))
  {
    uint64_t v13 = sub_100156B68(&qword_1003F8920);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0LL, 1LL, v11);
  }

  uint64_t v14 = a3[10];
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  *((_BYTE *)a1 + v14) = *((_BYTE *)a2 + v14);
  uint64_t v15 = a3[12];
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
  v16[4] = v17[4];
  uint64_t v18 = a3[14];
  *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  *((_WORD *)v19 + 8) = *((_WORD *)v20 + 8);
  uint64_t v21 = a3[16];
  *((_BYTE *)a1 + a3[15]) = *((_BYTE *)a2 + a3[15]);
  *((_BYTE *)a1 + v21) = *((_BYTE *)a2 + v21);
  return a1;
}

void *sub_10025AA80(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[8];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for RoutingItem.SelectionIndicator(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1LL, v13);
  int v17 = v15(v12, 1LL, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v11, v12, v13);
      goto LABEL_7;
    }

    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }

  if (v17)
  {
LABEL_6:
    uint64_t v18 = sub_100156B68(&qword_1003F8920);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0LL, 1LL, v13);
LABEL_7:
  uint64_t v19 = a3[10];
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  *((_BYTE *)a1 + v19) = *((_BYTE *)a2 + v19);
  uint64_t v20 = a3[12];
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
  uint64_t v23 = a3[13];
  uint64_t v24 = a3[14];
  char v25 = *((_BYTE *)a2 + v23);
  v21[4] = v22[4];
  *((_BYTE *)a1 + v23) = v25;
  uint64_t v26 = (char *)a1 + v24;
  LOWORD(v23) = *(_WORD *)((char *)a2 + v24 + 16);
  uint64_t v27 = *(void *)((char *)a1 + v24);
  uint64_t v28 = *(void *)((char *)a1 + v24 + 8);
  *(_OWORD *)uint64_t v26 = *(_OWORD *)((char *)a2 + v24);
  unsigned int v29 = *(unsigned __int16 *)((char *)a1 + v24 + 16);
  *((_WORD *)v26 + 8) = v23;
  sub_1001835D8(v27, v28, v29);
  uint64_t v30 = a3[16];
  *((_BYTE *)a1 + a3[15]) = *((_BYTE *)a2 + a3[15]);
  *((_BYTE *)a1 + v30) = *((_BYTE *)a2 + v30);
  return a1;
}

uint64_t sub_10025AC4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10025AC58);
}

uint64_t sub_10025AC58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }

  else
  {
    uint64_t v8 = sub_100156B68(&qword_1003F8920);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48LL))( a1 + *(int *)(a3 + 32),  a2,  v8);
  }

uint64_t sub_10025ACD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10025ACE4);
}

uint64_t sub_10025ACE4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }

  else
  {
    uint64_t v7 = sub_100156B68(&qword_1003F8920);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56LL))( v5 + *(int *)(a4 + 32),  a2,  a2,  v7);
  }

  return result;
}

void sub_10025AD5C(uint64_t a1)
{
  v4[0] = &unk_100350598;
  v4[1] = &unk_1003505B0;
  v4[2] = &unk_100350598;
  v4[3] = &unk_100350598;
  sub_10025C3F0( 319LL,  (unint64_t *)&unk_1003FC630,  (uint64_t (*)(uint64_t))&type metadata accessor for RoutingItem.SelectionIndicator);
  if (v3 <= 0x3F)
  {
    v4[4] = *(void *)(v2 - 8) + 64LL;
    v4[5] = &unk_1003505C8;
    v4[6] = &unk_1003505C8;
    v4[7] = (char *)&value witness table for Builtin.Int8 + 64;
    v4[8] = &unk_1003505E0;
    v4[9] = (char *)&value witness table for Builtin.Int8 + 64;
    v4[10] = &unk_1003505F8;
    v4[11] = &unk_1003505C8;
    v4[12] = &unk_1003505C8;
    swift_initStructMetadata(a1, 256LL, 13LL, v4, a1 + 16);
  }

void *sub_10025AE20(void *a1, void *a2, int *a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (void *)(v15 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v15);
  }

  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a3[7];
    uint64_t v10 = (void *)((char *)a1 + v9);
    uint64_t v11 = (unsigned __int8 *)a2 + v9;
    a1[4] = a2[4];
    uint64_t v12 = type metadata accessor for HostedRoutingSession.NowPlayingInfo(0LL);
    __dst = *(void **)(v12 - 8);
    uint64_t v13 = (unsigned int (*)(unsigned __int8 *, uint64_t, uint64_t))__dst[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v11, 1LL, v12))
    {
      uint64_t v14 = sub_100156B68(&qword_1003F9450);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64LL));
    }

    else
    {
      uint64_t v16 = *((void *)v11 + 1);
      *uint64_t v10 = *(void *)v11;
      v10[1] = v16;
      uint64_t v17 = *((void *)v11 + 3);
      v10[2] = *((void *)v11 + 2);
      v10[3] = v17;
      uint64_t v18 = *((void *)v11 + 4);
      uint64_t v19 = *((unsigned int *)v11 + 10);
      unsigned __int8 v20 = v11[44];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1001A8278(v18, v19, v20);
      v10[4] = v18;
      *((_DWORD *)v10 + 10) = v19;
      *((_BYTE *)v10 + 44) = v20;
      uint64_t v21 = *((void *)v11 + 6);
      uint64_t v22 = *((void *)v11 + 7);
      v10[6] = v21;
      v10[7] = v22;
      uint64_t v23 = *(int *)(v12 + 36);
      uint64_t v53 = &v11[v23];
      v54 = (char *)v10 + v23;
      uint64_t v24 = type metadata accessor for RoutingSession.NowPlayingInfo.PlaybackInfo(0LL);
      char v25 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v24 - 8) + 16LL);
      swift_retain(v21);
      swift_bridgeObjectRetain();
      v25(v54, v53, v24);
      uint64_t v26 = *(int *)(v12 + 40);
      uint64_t v27 = (char *)v10 + v26;
      uint64_t v28 = &v11[v26];
      uint64_t v29 = type metadata accessor for RoutingSession.NowPlayingInfo.TrackInfo(0LL);
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v29 - 8) + 16LL))(v27, v28, v29);
      ((void (*)(void *, void, uint64_t, uint64_t))__dst[7])(v10, 0LL, 1LL, v12);
    }

    uint64_t v30 = a3[8];
    int v31 = (char *)v4 + v30;
    int v32 = (char *)a2 + v30;
    uint64_t v33 = type metadata accessor for RoutingControls(0LL);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16LL))(v31, v32, v33);
    uint64_t v34 = a3[10];
    *(void *)((char *)v4 + a3[9]) = *(void *)((char *)a2 + a3[9]);
    *(void *)((char *)v4 + v34) = *(void *)((char *)a2 + v34);
    uint64_t v35 = a3[11];
    uint64_t v36 = a3[12];
    v37 = (void *)((char *)v4 + v35);
    v38 = (void *)((char *)a2 + v35);
    uint64_t v39 = v38[1];
    void *v37 = *v38;
    v37[1] = v39;
    uint64_t v40 = (char *)v4 + v36;
    v41 = (char *)a2 + v36;
    *(_DWORD *)uint64_t v40 = *(_DWORD *)v41;
    v40[4] = v41[4];
    uint64_t v42 = a3[14];
    *((_BYTE *)v4 + a3[13]) = *((_BYTE *)a2 + a3[13]);
    __dsta = (char *)v4 + v42;
    uint64_t v43 = (char *)a2 + v42;
    uint64_t v44 = type metadata accessor for RoutingSession.HostInfo(0LL);
    uint64_t v45 = *(void *)(v44 - 8);
    __int16 v46 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v46(v43, 1LL, v44))
    {
      uint64_t v47 = sub_100156B68(&qword_1003F9448);
      memcpy(__dsta, v43, *(void *)(*(void *)(v47 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v45 + 16))(__dsta, v43, v44);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(__dsta, 0LL, 1LL, v44);
    }

    uint64_t v48 = a3[15];
    unsigned int v49 = (char *)v4 + v48;
    uint64_t v50 = (char *)a2 + v48;
    uint64_t v51 = type metadata accessor for Date(0LL);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16LL))(v49, v50, v51);
  }

  return v4;
}

uint64_t sub_10025B140(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[7];
  uint64_t v5 = type metadata accessor for HostedRoutingSession.NowPlayingInfo(0LL);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48LL))(v4, 1LL, v5))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1001A0918(*(void *)(v4 + 32), *(unsigned int *)(v4 + 40), *(_BYTE *)(v4 + 44));
    swift_release(*(void *)(v4 + 48));
    swift_bridgeObjectRelease();
    uint64_t v6 = v4 + *(int *)(v5 + 36);
    uint64_t v7 = type metadata accessor for RoutingSession.NowPlayingInfo.PlaybackInfo(0LL);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8LL))(v6, v7);
    uint64_t v8 = v4 + *(int *)(v5 + 40);
    uint64_t v9 = type metadata accessor for RoutingSession.NowPlayingInfo.TrackInfo(0LL);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8LL))(v8, v9);
  }

  uint64_t v10 = a1 + a2[8];
  uint64_t v11 = type metadata accessor for RoutingControls(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8LL))(v10, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = a1 + a2[14];
  uint64_t v13 = type metadata accessor for RoutingSession.HostInfo(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = a1 + a2[15];
  uint64_t v16 = type metadata accessor for Date(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8LL))(v15, v16);
}

void *sub_10025B2DC(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  a1[4] = a2[4];
  uint64_t v8 = a3[7];
  uint64_t v9 = (void *)((char *)a1 + v8);
  uint64_t v10 = (unsigned __int8 *)a2 + v8;
  uint64_t v11 = type metadata accessor for HostedRoutingSession.NowPlayingInfo(0LL);
  __dst = *(void **)(v11 - 8);
  uint64_t v12 = (unsigned int (*)(unsigned __int8 *, uint64_t, uint64_t))__dst[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v10, 1LL, v11))
  {
    uint64_t v13 = sub_100156B68(&qword_1003F9450);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64LL));
  }

  else
  {
    uint64_t v14 = *((void *)v10 + 1);
    *uint64_t v9 = *(void *)v10;
    v9[1] = v14;
    uint64_t v15 = *((void *)v10 + 3);
    v9[2] = *((void *)v10 + 2);
    v9[3] = v15;
    uint64_t v16 = *((void *)v10 + 4);
    uint64_t v17 = *((unsigned int *)v10 + 10);
    unsigned __int8 v18 = v10[44];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1001A8278(v16, v17, v18);
    v9[4] = v16;
    *((_DWORD *)v9 + 10) = v17;
    *((_BYTE *)v9 + 44) = v18;
    uint64_t v19 = *((void *)v10 + 6);
    uint64_t v20 = *((void *)v10 + 7);
    v9[6] = v19;
    v9[7] = v20;
    uint64_t v21 = *(int *)(v11 + 36);
    uint64_t v51 = &v10[v21];
    v52 = (char *)v9 + v21;
    uint64_t v22 = type metadata accessor for RoutingSession.NowPlayingInfo.PlaybackInfo(0LL);
    uint64_t v23 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v22 - 8) + 16LL);
    swift_retain(v19);
    swift_bridgeObjectRetain();
    v23(v52, v51, v22);
    uint64_t v24 = *(int *)(v11 + 40);
    char v25 = (char *)v9 + v24;
    uint64_t v26 = &v10[v24];
    uint64_t v27 = type metadata accessor for RoutingSession.NowPlayingInfo.TrackInfo(0LL);
    (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v27 - 8) + 16LL))(v25, v26, v27);
    ((void (*)(void *, void, uint64_t, uint64_t))__dst[7])(v9, 0LL, 1LL, v11);
  }

  uint64_t v28 = a3[8];
  uint64_t v29 = (char *)a1 + v28;
  uint64_t v30 = (char *)a2 + v28;
  uint64_t v31 = type metadata accessor for RoutingControls(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16LL))(v29, v30, v31);
  uint64_t v32 = a3[10];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  *(void *)((char *)a1 + v32) = *(void *)((char *)a2 + v32);
  uint64_t v33 = a3[11];
  uint64_t v34 = a3[12];
  uint64_t v35 = (void *)((char *)a1 + v33);
  uint64_t v36 = (void *)((char *)a2 + v33);
  uint64_t v37 = v36[1];
  *uint64_t v35 = *v36;
  v35[1] = v37;
  v38 = (char *)a1 + v34;
  uint64_t v39 = (char *)a2 + v34;
  *(_DWORD *)v38 = *(_DWORD *)v39;
  v38[4] = v39[4];
  uint64_t v40 = a3[14];
  *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
  __dsta = (char *)a1 + v40;
  v41 = (char *)a2 + v40;
  uint64_t v42 = type metadata accessor for RoutingSession.HostInfo(0LL);
  uint64_t v43 = *(void *)(v42 - 8);
  uint64_t v44 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v44(v41, 1LL, v42))
  {
    uint64_t v45 = sub_100156B68(&qword_1003F9448);
    memcpy(__dsta, v41, *(void *)(*(void *)(v45 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v43 + 16))(__dsta, v41, v42);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v43 + 56))(__dsta, 0LL, 1LL, v42);
  }

  uint64_t v46 = a3[15];
  uint64_t v47 = (char *)a1 + v46;
  uint64_t v48 = (char *)a2 + v46;
  uint64_t v49 = type metadata accessor for Date(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16LL))(v47, v48, v49);
  return a1;
}

void *sub_10025B5D0(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[7];
  uint64_t v7 = (uint64_t)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for HostedRoutingSession.NowPlayingInfo(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1LL, v9);
  int v13 = v11((uint64_t)v8, 1LL, v9);
  if (v12)
  {
    if (!v13)
    {
      *(void *)uint64_t v7 = *(void *)v8;
      *(void *)(v7 + 8) = *((void *)v8 + 1);
      *(void *)(v7 + 16) = *((void *)v8 + 2);
      *(void *)(v7 + 24) = *((void *)v8 + 3);
      uint64_t v67 = *((void *)v8 + 4);
      uint64_t v14 = *((unsigned int *)v8 + 10);
      unsigned __int8 v15 = v8[44];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1001A8278(v67, v14, v15);
      *(void *)(v7 + 32) = v67;
      *(_DWORD *)(v7 + 40) = v14;
      *(_BYTE *)(v7 + 44) = v15;
      uint64_t v16 = *((void *)v8 + 6);
      *(void *)(v7 + 48) = v16;
      *(void *)(v7 + 56) = *((void *)v8 + 7);
      uint64_t v17 = *(int *)(v9 + 36);
      v66 = &v8[v17];
      uint64_t v68 = v7 + v17;
      uint64_t v18 = type metadata accessor for RoutingSession.NowPlayingInfo.PlaybackInfo(0LL);
      v65 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 16LL);
      swift_retain(v16);
      swift_bridgeObjectRetain();
      v65(v68, v66, v18);
      uint64_t v19 = *(int *)(v9 + 40);
      uint64_t v20 = v7 + v19;
      uint64_t v21 = &v8[v19];
      uint64_t v22 = type metadata accessor for RoutingSession.NowPlayingInfo.TrackInfo(0LL);
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v22 - 8) + 16LL))(v20, v21, v22);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(v7, 0LL, 1LL, v9);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v13)
  {
    sub_1001A813C(v7, type metadata accessor for HostedRoutingSession.NowPlayingInfo);
LABEL_6:
    uint64_t v23 = sub_100156B68(&qword_1003F9450);
    memcpy((void *)v7, v8, *(void *)(*(void *)(v23 - 8) + 64LL));
    goto LABEL_7;
  }

  *(void *)uint64_t v7 = *(void *)v8;
  *(void *)(v7 + 8) = *((void *)v8 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v7 + 16) = *((void *)v8 + 2);
  *(void *)(v7 + 24) = *((void *)v8 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v49 = *((void *)v8 + 4);
  unsigned int v50 = *((_DWORD *)v8 + 10);
  unsigned __int8 v51 = v8[44];
  sub_1001A8278(v49, v50, v51);
  uint64_t v52 = *(void *)(v7 + 32);
  uint64_t v53 = *(unsigned int *)(v7 + 40);
  *(void *)(v7 + 32) = v49;
  *(_DWORD *)(v7 + 40) = v50;
  unsigned __int8 v54 = *(_BYTE *)(v7 + 44);
  *(_BYTE *)(v7 + 44) = v51;
  sub_1001A0918(v52, v53, v54);
  uint64_t v55 = *(void *)(v7 + 48);
  uint64_t v56 = *((void *)v8 + 6);
  *(void *)(v7 + 48) = v56;
  swift_retain(v56);
  swift_release(v55);
  *(void *)(v7 + 56) = *((void *)v8 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v57 = *(int *)(v9 + 36);
  uint64_t v58 = v7 + v57;
  v59 = &v8[v57];
  uint64_t v60 = type metadata accessor for RoutingSession.NowPlayingInfo.PlaybackInfo(0LL);
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v60 - 8) + 24LL))(v58, v59, v60);
  uint64_t v61 = *(int *)(v9 + 40);
  uint64_t v62 = v7 + v61;
  v63 = &v8[v61];
  uint64_t v64 = type metadata accessor for RoutingSession.NowPlayingInfo.TrackInfo(0LL);
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v64 - 8) + 24LL))(v62, v63, v64);
LABEL_7:
  uint64_t v24 = a3[8];
  char v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  uint64_t v27 = type metadata accessor for RoutingControls(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 24LL))(v25, v26, v27);
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v28 = a3[11];
  uint64_t v29 = (void *)((char *)a1 + v28);
  uint64_t v30 = (void *)((char *)a2 + v28);
  *uint64_t v29 = *v30;
  v29[1] = v30[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v31 = a3[12];
  uint64_t v32 = (char *)a1 + v31;
  uint64_t v33 = (char *)a2 + v31;
  int v34 = *(_DWORD *)v33;
  v32[4] = v33[4];
  *(_DWORD *)uint64_t v32 = v34;
  *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
  uint64_t v35 = a3[14];
  uint64_t v36 = (char *)a1 + v35;
  uint64_t v37 = (char *)a2 + v35;
  uint64_t v38 = type metadata accessor for RoutingSession.HostInfo(0LL);
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v40 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v39 + 48);
  int v41 = v40(v36, 1LL, v38);
  int v42 = v40(v37, 1LL, v38);
  if (!v41)
  {
    if (!v42)
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 24))(v36, v37, v38);
      goto LABEL_13;
    }

    (*(void (**)(char *, uint64_t))(v39 + 8))(v36, v38);
    goto LABEL_12;
  }

  if (v42)
  {
LABEL_12:
    uint64_t v43 = sub_100156B68(&qword_1003F9448);
    memcpy(v36, v37, *(void *)(*(void *)(v43 - 8) + 64LL));
    goto LABEL_13;
  }

  (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v36, v37, v38);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v36, 0LL, 1LL, v38);
LABEL_13:
  uint64_t v44 = a3[15];
  uint64_t v45 = (char *)a1 + v44;
  uint64_t v46 = (char *)a2 + v44;
  uint64_t v47 = type metadata accessor for Date(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 24LL))(v45, v46, v47);
  return a1;
}

uint64_t sub_10025BAA4(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = a3[7];
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  uint64_t v10 = type metadata accessor for HostedRoutingSession.NowPlayingInfo(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v11 + 48))(v9, 1LL, v10))
  {
    uint64_t v12 = sub_100156B68(&qword_1003F9450);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64LL));
  }

  else
  {
    __int128 v13 = v9[1];
    *uint64_t v8 = *v9;
    v8[1] = v13;
    *((void *)v8 + 4) = *((void *)v9 + 4);
    *(void *)((char *)v8 + 37) = *(void *)((char *)v9 + 37);
    uint64_t v14 = *((void *)v9 + 7);
    *((void *)v8 + 6) = *((void *)v9 + 6);
    *((void *)v8 + 7) = v14;
    uint64_t v15 = *(int *)(v10 + 36);
    uint64_t v16 = (char *)v8 + v15;
    uint64_t v17 = (char *)v9 + v15;
    uint64_t v18 = type metadata accessor for RoutingSession.NowPlayingInfo.PlaybackInfo(0LL);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32LL))(v16, v17, v18);
    uint64_t v19 = *(int *)(v10 + 40);
    uint64_t v20 = (char *)v8 + v19;
    uint64_t v21 = (char *)v9 + v19;
    uint64_t v22 = type metadata accessor for RoutingSession.NowPlayingInfo.TrackInfo(0LL);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32LL))(v20, v21, v22);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0LL, 1LL, v10);
  }

  uint64_t v23 = a3[8];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = type metadata accessor for RoutingControls(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32LL))(v24, v25, v26);
  uint64_t v27 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(void *)(a1 + v27) = *(void *)(a2 + v27);
  uint64_t v28 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  *(_DWORD *)uint64_t v29 = *(_DWORD *)v30;
  *(_BYTE *)(v29 + 4) = *(_BYTE *)(v30 + 4);
  uint64_t v31 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  uint64_t v32 = (void *)(a1 + v31);
  uint64_t v33 = (const void *)(a2 + v31);
  uint64_t v34 = type metadata accessor for RoutingSession.HostInfo(0LL);
  uint64_t v35 = *(void *)(v34 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v35 + 48))(v33, 1LL, v34))
  {
    uint64_t v36 = sub_100156B68(&qword_1003F9448);
    memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v35 + 32))(v32, v33, v34);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0LL, 1LL, v34);
  }

  uint64_t v37 = a3[15];
  uint64_t v38 = a1 + v37;
  uint64_t v39 = a2 + v37;
  uint64_t v40 = type metadata accessor for Date(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 32LL))(v38, v39, v40);
  return a1;
}

void *sub_10025BD00(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[7];
  uint64_t v9 = (uint64_t)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for HostedRoutingSession.NowPlayingInfo(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __int128 v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1LL, v11);
  int v15 = v13((uint64_t)v10, 1LL, v11);
  if (v14)
  {
    if (!v15)
    {
      __int128 v16 = *((_OWORD *)v10 + 1);
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      *(_OWORD *)(v9 + 16) = v16;
      *(void *)(v9 + 32) = *((void *)v10 + 4);
      *(void *)(v9 + 37) = *(void *)(v10 + 37);
      uint64_t v17 = *((void *)v10 + 7);
      *(void *)(v9 + 48) = *((void *)v10 + 6);
      *(void *)(v9 + 56) = v17;
      uint64_t v18 = *(int *)(v11 + 36);
      uint64_t v19 = v9 + v18;
      uint64_t v20 = &v10[v18];
      uint64_t v21 = type metadata accessor for RoutingSession.NowPlayingInfo.PlaybackInfo(0LL);
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v21 - 8) + 32LL))(v19, v20, v21);
      uint64_t v22 = *(int *)(v11 + 40);
      uint64_t v23 = v9 + v22;
      uint64_t v24 = &v10[v22];
      uint64_t v25 = type metadata accessor for RoutingSession.NowPlayingInfo.TrackInfo(0LL);
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v25 - 8) + 32LL))(v23, v24, v25);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(v9, 0LL, 1LL, v11);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v15)
  {
    sub_1001A813C(v9, type metadata accessor for HostedRoutingSession.NowPlayingInfo);
LABEL_6:
    uint64_t v26 = sub_100156B68(&qword_1003F9450);
    memcpy((void *)v9, v10, *(void *)(*(void *)(v26 - 8) + 64LL));
    goto LABEL_7;
  }

  uint64_t v55 = *((void *)v10 + 1);
  *(void *)uint64_t v9 = *(void *)v10;
  *(void *)(v9 + 8) = v55;
  swift_bridgeObjectRelease();
  uint64_t v56 = *((void *)v10 + 3);
  *(void *)(v9 + 16) = *((void *)v10 + 2);
  *(void *)(v9 + 24) = v56;
  swift_bridgeObjectRelease();
  int v57 = *((_DWORD *)v10 + 10);
  char v58 = v10[44];
  uint64_t v59 = *(void *)(v9 + 32);
  uint64_t v60 = *(unsigned int *)(v9 + 40);
  *(void *)(v9 + 32) = *((void *)v10 + 4);
  *(_DWORD *)(v9 + 40) = v57;
  unsigned __int8 v61 = *(_BYTE *)(v9 + 44);
  *(_BYTE *)(v9 + 44) = v58;
  sub_1001A0918(v59, v60, v61);
  uint64_t v62 = *(void *)(v9 + 48);
  *(void *)(v9 + 48) = *((void *)v10 + 6);
  swift_release(v62);
  *(void *)(v9 + 56) = *((void *)v10 + 7);
  swift_bridgeObjectRelease();
  uint64_t v63 = *(int *)(v11 + 36);
  uint64_t v64 = v9 + v63;
  v65 = &v10[v63];
  uint64_t v66 = type metadata accessor for RoutingSession.NowPlayingInfo.PlaybackInfo(0LL);
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v66 - 8) + 40LL))(v64, v65, v66);
  uint64_t v67 = *(int *)(v11 + 40);
  uint64_t v68 = v9 + v67;
  v69 = &v10[v67];
  uint64_t v70 = type metadata accessor for RoutingSession.NowPlayingInfo.TrackInfo(0LL);
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v70 - 8) + 40LL))(v68, v69, v70);
LABEL_7:
  uint64_t v27 = a3[8];
  uint64_t v28 = (char *)a1 + v27;
  uint64_t v29 = (char *)a2 + v27;
  uint64_t v30 = type metadata accessor for RoutingControls(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 40LL))(v28, v29, v30);
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  swift_bridgeObjectRelease();
  uint64_t v31 = a3[11];
  uint64_t v32 = (void *)((char *)a1 + v31);
  uint64_t v33 = (void *)((char *)a2 + v31);
  uint64_t v35 = *v33;
  uint64_t v34 = v33[1];
  *uint64_t v32 = v35;
  v32[1] = v34;
  swift_bridgeObjectRelease();
  uint64_t v36 = a3[12];
  uint64_t v37 = a3[13];
  uint64_t v38 = (char *)a1 + v36;
  uint64_t v39 = (char *)a2 + v36;
  *(_DWORD *)uint64_t v38 = *(_DWORD *)v39;
  char v40 = *((_BYTE *)a2 + v37);
  v38[4] = v39[4];
  *((_BYTE *)a1 + v37) = v40;
  uint64_t v41 = a3[14];
  int v42 = (char *)a1 + v41;
  uint64_t v43 = (char *)a2 + v41;
  uint64_t v44 = type metadata accessor for RoutingSession.HostInfo(0LL);
  uint64_t v45 = *(void *)(v44 - 8);
  uint64_t v46 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v45 + 48);
  int v47 = v46(v42, 1LL, v44);
  int v48 = v46(v43, 1LL, v44);
  if (!v47)
  {
    if (!v48)
    {
      (*(void (**)(char *, char *, uint64_t))(v45 + 40))(v42, v43, v44);
      goto LABEL_13;
    }

    (*(void (**)(char *, uint64_t))(v45 + 8))(v42, v44);
    goto LABEL_12;
  }

  if (v48)
  {
LABEL_12:
    uint64_t v49 = sub_100156B68(&qword_1003F9448);
    memcpy(v42, v43, *(void *)(*(void *)(v49 - 8) + 64LL));
    goto LABEL_13;
  }

  (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v42, v43, v44);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v42, 0LL, 1LL, v44);
LABEL_13:
  uint64_t v50 = a3[15];
  unsigned __int8 v51 = (char *)a1 + v50;
  uint64_t v52 = (char *)a2 + v50;
  uint64_t v53 = type metadata accessor for Date(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 40LL))(v51, v52, v53);
  return a1;
}

uint64_t sub_10025C0D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10025C0E4);
}

uint64_t sub_10025C0E4(uint64_t a1, uint64_t a2, int *a3)
{
  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }

  else
  {
    uint64_t v8 = sub_100156B68(&qword_1003F9450);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a3[7];
    }

    else
    {
      uint64_t v12 = type metadata accessor for RoutingControls(0LL);
      uint64_t v9 = *(void *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        uint64_t v10 = v12;
        uint64_t v11 = a3[8];
      }

      else
      {
        uint64_t v13 = sub_100156B68(&qword_1003F9448);
        uint64_t v9 = *(void *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
        {
          uint64_t v10 = v13;
          uint64_t v11 = a3[14];
        }

        else
        {
          uint64_t v10 = type metadata accessor for Date(0LL);
          uint64_t v9 = *(void *)(v10 - 8);
          uint64_t v11 = a3[15];
        }
      }
    }

    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }

uint64_t sub_10025C1D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10025C1E0);
}

uint64_t sub_10025C1E0(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }

  else
  {
    uint64_t v8 = sub_100156B68(&qword_1003F9450);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a4[7];
    }

    else
    {
      uint64_t v12 = type metadata accessor for RoutingControls(0LL);
      uint64_t v9 = *(void *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        uint64_t v10 = v12;
        uint64_t v11 = a4[8];
      }

      else
      {
        uint64_t v13 = sub_100156B68(&qword_1003F9448);
        uint64_t v9 = *(void *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == a3)
        {
          uint64_t v10 = v13;
          uint64_t v11 = a4[14];
        }

        else
        {
          uint64_t v10 = type metadata accessor for Date(0LL);
          uint64_t v9 = *(void *)(v10 - 8);
          uint64_t v11 = a4[15];
        }
      }
    }

    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }

  return result;
}

void sub_10025C2CC(uint64_t a1)
{
  v10[0] = &unk_100350598;
  v10[1] = &unk_1003505B0;
  v10[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
  sub_10025C3F0( 319LL,  (unint64_t *)&qword_1003FAC70,  type metadata accessor for HostedRoutingSession.NowPlayingInfo);
  if (v3 <= 0x3F)
  {
    v10[3] = *(void *)(v2 - 8) + 64LL;
    uint64_t v4 = type metadata accessor for RoutingControls(319LL);
    if (v5 <= 0x3F)
    {
      v10[4] = *(void *)(v4 - 8) + 64LL;
      v10[5] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v10[6] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v10[7] = &unk_1003505B0;
      v10[8] = &unk_1003505E0;
      v10[9] = &unk_1003505C8;
      sub_10025C3F0( 319LL,  (unint64_t *)&unk_1003FC6E8,  (uint64_t (*)(uint64_t))&type metadata accessor for RoutingSession.HostInfo);
      if (v7 <= 0x3F)
      {
        v10[10] = *(void *)(v6 - 8) + 64LL;
        uint64_t v8 = type metadata accessor for Date(319LL);
        if (v9 <= 0x3F)
        {
          v10[11] = *(void *)(v8 - 8) + 64LL;
          swift_initStructMetadata(a1, 256LL, 12LL, v10, a1 + 16);
        }
      }
    }
  }

void sub_10025C3F0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  if (!*a2)
  {
    uint64_t v5 = a3(255LL);
    unint64_t v6 = type metadata accessor for Optional(a1, v5);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }

uint64_t getEnumTagSinglePayload for HostedRoutingSourceSession.Source(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  else {
    return 0LL;
  }
}

uint64_t storeEnumTagSinglePayload for HostedRoutingSourceSession.Source( uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)__n128 result = 0LL;
    *(void *)(result + 8) = 0LL;
    *(_DWORD *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(_BYTE *)(result + 16) = 1;
    }
  }

  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(_BYTE *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }

  return result;
}

uint64_t sub_10025C4E0(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_10025C4F8(void *result, int a2)
{
  if (a2 < 0)
  {
    *__n128 result = a2 ^ 0x80000000;
    result[1] = 0LL;
  }

  else if (a2)
  {
    result[1] = (a2 - 1);
  }

  return result;
}

ValueMetadata *type metadata accessor for HostedRoutingSourceSession.Source()
{
  return &type metadata for HostedRoutingSourceSession.Source;
}

ValueMetadata *type metadata accessor for RoutingSessionsState()
{
  return &type metadata for RoutingSessionsState;
}

void *sub_10025C538(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v15);
  }

  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a3[7];
    uint64_t v10 = (void *)((char *)a1 + v9);
    uint64_t v11 = (unsigned __int8 *)a2 + v9;
    uint64_t v12 = type metadata accessor for HostedRoutingSession.NowPlayingInfo(0LL);
    uint64_t v56 = *(void *)(v12 - 8);
    uint64_t v13 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v56 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v11, 1LL, v12))
    {
      uint64_t v14 = sub_100156B68(&qword_1003F9450);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64LL));
    }

    else
    {
      uint64_t v16 = *((void *)v11 + 1);
      *uint64_t v10 = *(void *)v11;
      v10[1] = v16;
      uint64_t v17 = *((void *)v11 + 3);
      v10[2] = *((void *)v11 + 2);
      v10[3] = v17;
      uint64_t v18 = *((void *)v11 + 4);
      uint64_t v19 = *((unsigned int *)v11 + 10);
      unsigned __int8 v20 = v11[44];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1001A8278(v18, v19, v20);
      v10[4] = v18;
      *((_DWORD *)v10 + 10) = v19;
      *((_BYTE *)v10 + 44) = v20;
      uint64_t v21 = *((void *)v11 + 6);
      uint64_t v22 = *((void *)v11 + 7);
      v10[6] = v21;
      v10[7] = v22;
      uint64_t v23 = *(int *)(v12 + 36);
      unsigned __int8 v54 = &v11[v23];
      uint64_t v55 = (char *)v10 + v23;
      uint64_t v24 = type metadata accessor for RoutingSession.NowPlayingInfo.PlaybackInfo(0LL);
      uint64_t v25 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v24 - 8) + 16LL);
      swift_retain(v21);
      swift_bridgeObjectRetain();
      v25(v55, v54, v24);
      uint64_t v26 = *(int *)(v12 + 40);
      uint64_t v27 = (char *)v10 + v26;
      uint64_t v28 = &v11[v26];
      uint64_t v29 = type metadata accessor for RoutingSession.NowPlayingInfo.TrackInfo(0LL);
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v29 - 8) + 16LL))(v27, v28, v29);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v56 + 56))(v10, 0LL, 1LL, v12);
    }

    uint64_t v30 = a3[8];
    uint64_t v31 = (char *)v4 + v30;
    uint64_t v32 = (char *)a2 + v30;
    uint64_t v33 = type metadata accessor for RoutingControls(0LL);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16LL))(v31, v32, v33);
    uint64_t v34 = a3[10];
    *(void *)((char *)v4 + a3[9]) = *(void *)((char *)a2 + a3[9]);
    *(void *)((char *)v4 + v34) = *(void *)((char *)a2 + v34);
    uint64_t v35 = a3[11];
    uint64_t v36 = a3[12];
    uint64_t v37 = (void *)((char *)v4 + v35);
    uint64_t v38 = (void *)((char *)a2 + v35);
    uint64_t v39 = v38[1];
    void *v37 = *v38;
    v37[1] = v39;
    char v40 = (char *)v4 + v36;
    uint64_t v41 = (char *)a2 + v36;
    v40[4] = v41[4];
    *(_DWORD *)char v40 = *(_DWORD *)v41;
    uint64_t v42 = a3[13];
    uint64_t v43 = (char *)v4 + v42;
    uint64_t v44 = (char *)a2 + v42;
    uint64_t v45 = type metadata accessor for Date(0LL);
    uint64_t v46 = *(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16LL);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v46(v43, v44, v45);
    uint64_t v47 = a3[15];
    *((_BYTE *)v4 + a3[14]) = *((_BYTE *)a2 + a3[14]);
    int v48 = (char *)v4 + v47;
    uint64_t v49 = (char *)a2 + v47;
    uint64_t v50 = type metadata accessor for RoutingSession.HostInfo(0LL);
    uint64_t v51 = *(void *)(v50 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v49, 1LL, v50))
    {
      uint64_t v52 = sub_100156B68(&qword_1003F9448);
      memcpy(v48, v49, *(void *)(*(void *)(v52 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v48, v49, v50);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v48, 0LL, 1LL, v50);
    }

    *((_BYTE *)v4 + a3[16]) = *((_BYTE *)a2 + a3[16]);
  }

  return v4;
}

uint64_t sub_10025C858(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[7];
  uint64_t v5 = type metadata accessor for HostedRoutingSession.NowPlayingInfo(0LL);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48LL))(v4, 1LL, v5))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1001A0918(*(void *)(v4 + 32), *(unsigned int *)(v4 + 40), *(_BYTE *)(v4 + 44));
    swift_release(*(void *)(v4 + 48));
    swift_bridgeObjectRelease();
    uint64_t v6 = v4 + *(int *)(v5 + 36);
    uint64_t v7 = type metadata accessor for RoutingSession.NowPlayingInfo.PlaybackInfo(0LL);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8LL))(v6, v7);
    uint64_t v8 = v4 + *(int *)(v5 + 40);
    uint64_t v9 = type metadata accessor for RoutingSession.NowPlayingInfo.TrackInfo(0LL);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8LL))(v8, v9);
  }

  uint64_t v10 = a1 + a2[8];
  uint64_t v11 = type metadata accessor for RoutingControls(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8LL))(v10, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = a1 + a2[13];
  uint64_t v13 = type metadata accessor for Date(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8LL))(v12, v13);
  uint64_t v14 = a1 + a2[15];
  uint64_t v15 = type metadata accessor for RoutingSession.HostInfo(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1LL, v15);
  if (!(_DWORD)result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
  }
  return result;
}

void *sub_10025CA08(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a3[7];
  uint64_t v9 = (void *)((char *)a1 + v8);
  uint64_t v10 = (unsigned __int8 *)a2 + v8;
  uint64_t v11 = type metadata accessor for HostedRoutingSession.NowPlayingInfo(0LL);
  uint64_t v54 = *(void *)(v11 - 8);
  uint64_t v12 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v54 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v10, 1LL, v11))
  {
    uint64_t v13 = sub_100156B68(&qword_1003F9450);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64LL));
  }

  else
  {
    uint64_t v14 = *((void *)v10 + 1);
    *uint64_t v9 = *(void *)v10;
    v9[1] = v14;
    uint64_t v15 = *((void *)v10 + 3);
    v9[2] = *((void *)v10 + 2);
    v9[3] = v15;
    uint64_t v16 = *((void *)v10 + 4);
    uint64_t v17 = *((unsigned int *)v10 + 10);
    unsigned __int8 v18 = v10[44];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1001A8278(v16, v17, v18);
    v9[4] = v16;
    *((_DWORD *)v9 + 10) = v17;
    *((_BYTE *)v9 + 44) = v18;
    uint64_t v19 = *((void *)v10 + 6);
    uint64_t v20 = *((void *)v10 + 7);
    v9[6] = v19;
    v9[7] = v20;
    uint64_t v21 = *(int *)(v11 + 36);
    uint64_t v52 = &v10[v21];
    uint64_t v53 = (char *)v9 + v21;
    uint64_t v22 = type metadata accessor for RoutingSession.NowPlayingInfo.PlaybackInfo(0LL);
    uint64_t v23 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v22 - 8) + 16LL);
    swift_retain(v19);
    swift_bridgeObjectRetain();
    v23(v53, v52, v22);
    uint64_t v24 = *(int *)(v11 + 40);
    uint64_t v25 = (char *)v9 + v24;
    uint64_t v26 = &v10[v24];
    uint64_t v27 = type metadata accessor for RoutingSession.NowPlayingInfo.TrackInfo(0LL);
    (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v27 - 8) + 16LL))(v25, v26, v27);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v54 + 56))(v9, 0LL, 1LL, v11);
  }

  uint64_t v28 = a3[8];
  uint64_t v29 = (char *)a1 + v28;
  uint64_t v30 = (char *)a2 + v28;
  uint64_t v31 = type metadata accessor for RoutingControls(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16LL))(v29, v30, v31);
  uint64_t v32 = a3[10];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  *(void *)((char *)a1 + v32) = *(void *)((char *)a2 + v32);
  uint64_t v33 = a3[11];
  uint64_t v34 = a3[12];
  uint64_t v35 = (void *)((char *)a1 + v33);
  uint64_t v36 = (void *)((char *)a2 + v33);
  uint64_t v37 = v36[1];
  *uint64_t v35 = *v36;
  v35[1] = v37;
  uint64_t v38 = (char *)a1 + v34;
  uint64_t v39 = (char *)a2 + v34;
  v38[4] = v39[4];
  *(_DWORD *)uint64_t v38 = *(_DWORD *)v39;
  uint64_t v40 = a3[13];
  uint64_t v41 = (char *)a1 + v40;
  uint64_t v42 = (char *)a2 + v40;
  uint64_t v43 = type metadata accessor for Date(0LL);
  uint64_t v44 = *(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16LL);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v44(v41, v42, v43);
  uint64_t v45 = a3[15];
  *((_BYTE *)a1 + a3[14]) = *((_BYTE *)a2 + a3[14]);
  uint64_t v46 = (char *)a1 + v45;
  uint64_t v47 = (char *)a2 + v45;
  uint64_t v48 = type metadata accessor for RoutingSession.HostInfo(0LL);
  uint64_t v49 = *(void *)(v48 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v47, 1LL, v48))
  {
    uint64_t v50 = sub_100156B68(&qword_1003F9448);
    memcpy(v46, v47, *(void *)(*(void *)(v50 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v46, v47, v48);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v46, 0LL, 1LL, v48);
  }

  *((_BYTE *)a1 + a3[16]) = *((_BYTE *)a2 + a3[16]);
  return a1;
}

void *sub_10025CCFC(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[7];
  uint64_t v7 = (uint64_t)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for HostedRoutingSession.NowPlayingInfo(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1LL, v9);
  int v13 = v11((uint64_t)v8, 1LL, v9);
  if (v12)
  {
    if (!v13)
    {
      *(void *)uint64_t v7 = *(void *)v8;
      *(void *)(v7 + 8) = *((void *)v8 + 1);
      *(void *)(v7 + 16) = *((void *)v8 + 2);
      *(void *)(v7 + 24) = *((void *)v8 + 3);
      uint64_t v67 = *((void *)v8 + 4);
      uint64_t v14 = *((unsigned int *)v8 + 10);
      unsigned __int8 v15 = v8[44];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1001A8278(v67, v14, v15);
      *(void *)(v7 + 32) = v67;
      *(_DWORD *)(v7 + 40) = v14;
      *(_BYTE *)(v7 + 44) = v15;
      uint64_t v16 = *((void *)v8 + 6);
      *(void *)(v7 + 48) = v16;
      *(void *)(v7 + 56) = *((void *)v8 + 7);
      uint64_t v17 = *(int *)(v9 + 36);
      uint64_t v66 = &v8[v17];
      uint64_t v68 = v7 + v17;
      uint64_t v18 = type metadata accessor for RoutingSession.NowPlayingInfo.PlaybackInfo(0LL);
      v65 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 16LL);
      swift_retain(v16);
      swift_bridgeObjectRetain();
      v65(v68, v66, v18);
      uint64_t v19 = *(int *)(v9 + 40);
      uint64_t v20 = v7 + v19;
      uint64_t v21 = &v8[v19];
      uint64_t v22 = type metadata accessor for RoutingSession.NowPlayingInfo.TrackInfo(0LL);
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v22 - 8) + 16LL))(v20, v21, v22);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(v7, 0LL, 1LL, v9);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v13)
  {
    sub_1001A813C(v7, type metadata accessor for HostedRoutingSession.NowPlayingInfo);
LABEL_6:
    uint64_t v23 = sub_100156B68(&qword_1003F9450);
    memcpy((void *)v7, v8, *(void *)(*(void *)(v23 - 8) + 64LL));
    goto LABEL_7;
  }

  *(void *)uint64_t v7 = *(void *)v8;
  *(void *)(v7 + 8) = *((void *)v8 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v7 + 16) = *((void *)v8 + 2);
  *(void *)(v7 + 24) = *((void *)v8 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v49 = *((void *)v8 + 4);
  unsigned int v50 = *((_DWORD *)v8 + 10);
  unsigned __int8 v51 = v8[44];
  sub_1001A8278(v49, v50, v51);
  uint64_t v52 = *(void *)(v7 + 32);
  uint64_t v53 = *(unsigned int *)(v7 + 40);
  *(void *)(v7 + 32) = v49;
  *(_DWORD *)(v7 + 40) = v50;
  unsigned __int8 v54 = *(_BYTE *)(v7 + 44);
  *(_BYTE *)(v7 + 44) = v51;
  sub_1001A0918(v52, v53, v54);
  uint64_t v55 = *(void *)(v7 + 48);
  uint64_t v56 = *((void *)v8 + 6);
  *(void *)(v7 + 48) = v56;
  swift_retain(v56);
  swift_release(v55);
  *(void *)(v7 + 56) = *((void *)v8 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v57 = *(int *)(v9 + 36);
  uint64_t v58 = v7 + v57;
  uint64_t v59 = &v8[v57];
  uint64_t v60 = type metadata accessor for RoutingSession.NowPlayingInfo.PlaybackInfo(0LL);
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v60 - 8) + 24LL))(v58, v59, v60);
  uint64_t v61 = *(int *)(v9 + 40);
  uint64_t v62 = v7 + v61;
  uint64_t v63 = &v8[v61];
  uint64_t v64 = type metadata accessor for RoutingSession.NowPlayingInfo.TrackInfo(0LL);
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v64 - 8) + 24LL))(v62, v63, v64);
LABEL_7:
  uint64_t v24 = a3[8];
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  uint64_t v27 = type metadata accessor for RoutingControls(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 24LL))(v25, v26, v27);
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v28 = a3[11];
  uint64_t v29 = (void *)((char *)a1 + v28);
  uint64_t v30 = (void *)((char *)a2 + v28);
  *uint64_t v29 = *v30;
  v29[1] = v30[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v31 = a3[12];
  uint64_t v32 = (char *)a1 + v31;
  uint64_t v33 = (char *)a2 + v31;
  int v34 = *(_DWORD *)v33;
  v32[4] = v33[4];
  *(_DWORD *)uint64_t v32 = v34;
  uint64_t v35 = a3[13];
  uint64_t v36 = (char *)a1 + v35;
  uint64_t v37 = (char *)a2 + v35;
  uint64_t v38 = type metadata accessor for Date(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 24LL))(v36, v37, v38);
  *((_BYTE *)a1 + a3[14]) = *((_BYTE *)a2 + a3[14]);
  uint64_t v39 = a3[15];
  uint64_t v40 = (char *)a1 + v39;
  uint64_t v41 = (char *)a2 + v39;
  uint64_t v42 = type metadata accessor for RoutingSession.HostInfo(0LL);
  uint64_t v43 = *(void *)(v42 - 8);
  uint64_t v44 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v43 + 48);
  int v45 = v44(v40, 1LL, v42);
  int v46 = v44(v41, 1LL, v42);
  if (!v45)
  {
    if (!v46)
    {
      (*(void (**)(char *, char *, uint64_t))(v43 + 24))(v40, v41, v42);
      goto LABEL_13;
    }

    (*(void (**)(char *, uint64_t))(v43 + 8))(v40, v42);
    goto LABEL_12;
  }

  if (v46)
  {
LABEL_12:
    uint64_t v47 = sub_100156B68(&qword_1003F9448);
    memcpy(v40, v41, *(void *)(*(void *)(v47 - 8) + 64LL));
    goto LABEL_13;
  }

  (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v40, v41, v42);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v43 + 56))(v40, 0LL, 1LL, v42);
LABEL_13:
  *((_BYTE *)a1 + a3[16]) = *((_BYTE *)a2 + a3[16]);
  return a1;
}

_OWORD *sub_10025D1D4(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[7];
  uint64_t v8 = (_OWORD *)((char *)a1 + v7);
  uint64_t v9 = (_OWORD *)((char *)a2 + v7);
  uint64_t v10 = type metadata accessor for HostedRoutingSession.NowPlayingInfo(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v11 + 48))(v9, 1LL, v10))
  {
    uint64_t v12 = sub_100156B68(&qword_1003F9450);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64LL));
  }

  else
  {
    __int128 v13 = v9[1];
    *uint64_t v8 = *v9;
    v8[1] = v13;
    *((void *)v8 + 4) = *((void *)v9 + 4);
    *(void *)((char *)v8 + 37) = *(void *)((char *)v9 + 37);
    uint64_t v14 = *((void *)v9 + 7);
    *((void *)v8 + 6) = *((void *)v9 + 6);
    *((void *)v8 + 7) = v14;
    uint64_t v15 = *(int *)(v10 + 36);
    uint64_t v16 = (char *)v8 + v15;
    uint64_t v17 = (char *)v9 + v15;
    uint64_t v18 = type metadata accessor for RoutingSession.NowPlayingInfo.PlaybackInfo(0LL);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32LL))(v16, v17, v18);
    uint64_t v19 = *(int *)(v10 + 40);
    uint64_t v20 = (char *)v8 + v19;
    uint64_t v21 = (char *)v9 + v19;
    uint64_t v22 = type metadata accessor for RoutingSession.NowPlayingInfo.TrackInfo(0LL);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32LL))(v20, v21, v22);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0LL, 1LL, v10);
  }

  uint64_t v23 = a3[8];
  uint64_t v24 = (char *)a1 + v23;
  uint64_t v25 = (char *)a2 + v23;
  uint64_t v26 = type metadata accessor for RoutingControls(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32LL))(v24, v25, v26);
  uint64_t v27 = a3[10];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  *(void *)((char *)a1 + v27) = *(void *)((char *)a2 + v27);
  uint64_t v28 = a3[12];
  *(_OWORD *)((char *)a1 + a3[11]) = *(_OWORD *)((char *)a2 + a3[11]);
  uint64_t v29 = (char *)a1 + v28;
  uint64_t v30 = (char *)a2 + v28;
  *(_DWORD *)uint64_t v29 = *(_DWORD *)v30;
  v29[4] = v30[4];
  uint64_t v31 = a3[13];
  uint64_t v32 = (char *)a1 + v31;
  uint64_t v33 = (char *)a2 + v31;
  uint64_t v34 = type metadata accessor for Date(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32LL))(v32, v33, v34);
  uint64_t v35 = a3[15];
  *((_BYTE *)a1 + a3[14]) = *((_BYTE *)a2 + a3[14]);
  uint64_t v36 = (char *)a1 + v35;
  uint64_t v37 = (char *)a2 + v35;
  uint64_t v38 = type metadata accessor for RoutingSession.HostInfo(0LL);
  uint64_t v39 = *(void *)(v38 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1LL, v38))
  {
    uint64_t v40 = sub_100156B68(&qword_1003F9448);
    memcpy(v36, v37, *(void *)(*(void *)(v40 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v36, v37, v38);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v36, 0LL, 1LL, v38);
  }

  *((_BYTE *)a1 + a3[16]) = *((_BYTE *)a2 + a3[16]);
  return a1;
}

void *sub_10025D434(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[7];
  uint64_t v8 = (uint64_t)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for HostedRoutingSession.NowPlayingInfo(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1LL, v10);
  int v14 = v12((uint64_t)v9, 1LL, v10);
  if (v13)
  {
    if (!v14)
    {
      __int128 v15 = *((_OWORD *)v9 + 1);
      *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
      *(_OWORD *)(v8 + 16) = v15;
      *(void *)(v8 + 32) = *((void *)v9 + 4);
      *(void *)(v8 + 37) = *(void *)(v9 + 37);
      uint64_t v16 = *((void *)v9 + 7);
      *(void *)(v8 + 48) = *((void *)v9 + 6);
      *(void *)(v8 + 56) = v16;
      uint64_t v17 = *(int *)(v10 + 36);
      uint64_t v18 = v8 + v17;
      uint64_t v19 = &v9[v17];
      uint64_t v20 = type metadata accessor for RoutingSession.NowPlayingInfo.PlaybackInfo(0LL);
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v20 - 8) + 32LL))(v18, v19, v20);
      uint64_t v21 = *(int *)(v10 + 40);
      uint64_t v22 = v8 + v21;
      uint64_t v23 = &v9[v21];
      uint64_t v24 = type metadata accessor for RoutingSession.NowPlayingInfo.TrackInfo(0LL);
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v24 - 8) + 32LL))(v22, v23, v24);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(v8, 0LL, 1LL, v10);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v14)
  {
    sub_1001A813C(v8, type metadata accessor for HostedRoutingSession.NowPlayingInfo);
LABEL_6:
    uint64_t v25 = sub_100156B68(&qword_1003F9450);
    memcpy((void *)v8, v9, *(void *)(*(void *)(v25 - 8) + 64LL));
    goto LABEL_7;
  }

  uint64_t v52 = *((void *)v9 + 1);
  *(void *)uint64_t v8 = *(void *)v9;
  *(void *)(v8 + 8) = v52;
  swift_bridgeObjectRelease();
  uint64_t v53 = *((void *)v9 + 3);
  *(void *)(v8 + 16) = *((void *)v9 + 2);
  *(void *)(v8 + 24) = v53;
  swift_bridgeObjectRelease();
  int v54 = *((_DWORD *)v9 + 10);
  char v55 = v9[44];
  uint64_t v56 = *(void *)(v8 + 32);
  uint64_t v57 = *(unsigned int *)(v8 + 40);
  *(void *)(v8 + 32) = *((void *)v9 + 4);
  *(_DWORD *)(v8 + 40) = v54;
  unsigned __int8 v58 = *(_BYTE *)(v8 + 44);
  *(_BYTE *)(v8 + 44) = v55;
  sub_1001A0918(v56, v57, v58);
  uint64_t v59 = *(void *)(v8 + 48);
  *(void *)(v8 + 48) = *((void *)v9 + 6);
  swift_release(v59);
  *(void *)(v8 + 56) = *((void *)v9 + 7);
  swift_bridgeObjectRelease();
  uint64_t v60 = *(int *)(v10 + 36);
  uint64_t v61 = v8 + v60;
  uint64_t v62 = &v9[v60];
  uint64_t v63 = type metadata accessor for RoutingSession.NowPlayingInfo.PlaybackInfo(0LL);
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v63 - 8) + 40LL))(v61, v62, v63);
  uint64_t v64 = *(int *)(v10 + 40);
  uint64_t v65 = v8 + v64;
  uint64_t v66 = &v9[v64];
  uint64_t v67 = type metadata accessor for RoutingSession.NowPlayingInfo.TrackInfo(0LL);
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v67 - 8) + 40LL))(v65, v66, v67);
LABEL_7:
  uint64_t v26 = a3[8];
  uint64_t v27 = (char *)a1 + v26;
  uint64_t v28 = (char *)a2 + v26;
  uint64_t v29 = type metadata accessor for RoutingControls(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 40LL))(v27, v28, v29);
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  swift_bridgeObjectRelease();
  uint64_t v30 = a3[11];
  uint64_t v31 = (void *)((char *)a1 + v30);
  uint64_t v32 = (void *)((char *)a2 + v30);
  uint64_t v34 = *v32;
  uint64_t v33 = v32[1];
  void *v31 = v34;
  v31[1] = v33;
  swift_bridgeObjectRelease();
  uint64_t v35 = a3[12];
  uint64_t v36 = a3[13];
  uint64_t v37 = (char *)a1 + v35;
  uint64_t v38 = (char *)a2 + v35;
  *(_DWORD *)uint64_t v37 = *(_DWORD *)v38;
  v37[4] = v38[4];
  uint64_t v39 = (char *)a1 + v36;
  uint64_t v40 = (char *)a2 + v36;
  uint64_t v41 = type metadata accessor for Date(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 40LL))(v39, v40, v41);
  uint64_t v42 = a3[15];
  *((_BYTE *)a1 + a3[14]) = *((_BYTE *)a2 + a3[14]);
  uint64_t v43 = (char *)a1 + v42;
  uint64_t v44 = (char *)a2 + v42;
  uint64_t v45 = type metadata accessor for RoutingSession.HostInfo(0LL);
  uint64_t v46 = *(void *)(v45 - 8);
  uint64_t v47 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v46 + 48);
  int v48 = v47(v43, 1LL, v45);
  int v49 = v47(v44, 1LL, v45);
  if (!v48)
  {
    if (!v49)
    {
      (*(void (**)(char *, char *, uint64_t))(v46 + 40))(v43, v44, v45);
      goto LABEL_13;
    }

    (*(void (**)(char *, uint64_t))(v46 + 8))(v43, v45);
    goto LABEL_12;
  }

  if (v49)
  {
LABEL_12:
    uint64_t v50 = sub_100156B68(&qword_1003F9448);
    memcpy(v43, v44, *(void *)(*(void *)(v50 - 8) + 64LL));
    goto LABEL_13;
  }

  (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v43, v44, v45);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v43, 0LL, 1LL, v45);
LABEL_13:
  *((_BYTE *)a1 + a3[16]) = *((_BYTE *)a2 + a3[16]);
  return a1;
}

uint64_t sub_10025D814(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10025D820);
}

uint64_t sub_10025D820(uint64_t a1, uint64_t a2, int *a3)
{
  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }

  else
  {
    uint64_t v8 = sub_100156B68(&qword_1003F9450);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a3[7];
    }

    else
    {
      uint64_t v12 = type metadata accessor for RoutingControls(0LL);
      uint64_t v9 = *(void *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        uint64_t v10 = v12;
        uint64_t v11 = a3[8];
      }

      else
      {
        uint64_t v13 = type metadata accessor for Date(0LL);
        uint64_t v9 = *(void *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
        {
          uint64_t v10 = v13;
          uint64_t v11 = a3[13];
        }

        else
        {
          uint64_t v10 = sub_100156B68(&qword_1003F9448);
          uint64_t v9 = *(void *)(v10 - 8);
          uint64_t v11 = a3[15];
        }
      }
    }

    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }

uint64_t sub_10025D910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10025D91C);
}

uint64_t sub_10025D91C(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }

  else
  {
    uint64_t v8 = sub_100156B68(&qword_1003F9450);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a4[7];
    }

    else
    {
      uint64_t v12 = type metadata accessor for RoutingControls(0LL);
      uint64_t v9 = *(void *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        uint64_t v10 = v12;
        uint64_t v11 = a4[8];
      }

      else
      {
        uint64_t v13 = type metadata accessor for Date(0LL);
        uint64_t v9 = *(void *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == a3)
        {
          uint64_t v10 = v13;
          uint64_t v11 = a4[13];
        }

        else
        {
          uint64_t v10 = sub_100156B68(&qword_1003F9448);
          uint64_t v9 = *(void *)(v10 - 8);
          uint64_t v11 = a4[15];
        }
      }
    }

    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }

  return result;
}

void sub_10025DA08(uint64_t a1)
{
  v10[0] = &unk_100350598;
  v10[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v10[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
  sub_10025C3F0( 319LL,  (unint64_t *)&qword_1003FAC70,  type metadata accessor for HostedRoutingSession.NowPlayingInfo);
  if (v3 <= 0x3F)
  {
    v10[3] = *(void *)(v2 - 8) + 64LL;
    uint64_t v4 = type metadata accessor for RoutingControls(319LL);
    if (v5 <= 0x3F)
    {
      v10[4] = *(void *)(v4 - 8) + 64LL;
      v10[5] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v10[6] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v10[7] = &unk_1003505B0;
      v10[8] = &unk_1003505E0;
      uint64_t v6 = type metadata accessor for Date(319LL);
      if (v7 <= 0x3F)
      {
        v10[9] = *(void *)(v6 - 8) + 64LL;
        v10[10] = &unk_1003505C8;
        sub_10025C3F0( 319LL,  (unint64_t *)&unk_1003FC6E8,  (uint64_t (*)(uint64_t))&type metadata accessor for RoutingSession.HostInfo);
        if (v9 <= 0x3F)
        {
          v10[11] = *(void *)(v8 - 8) + 64LL;
          void v10[12] = &unk_1003505C8;
          swift_initStructMetadata(a1, 256LL, 13LL, v10, a1 + 16);
        }
      }
    }
  }

uint64_t sub_10025DB24(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *(void *)a1 = *a2;
    a1 = v23 + ((v5 + 16LL) & ~(unint64_t)v5);
    swift_retain(v23);
  }

  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    uint64_t v9 = a2[4];
    uint64_t v10 = *((unsigned int *)a2 + 10);
    unsigned __int8 v11 = *((_BYTE *)a2 + 44);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1001A8278(v9, v10, v11);
    *(void *)(a1 + 32) = v9;
    *(_DWORD *)(a1 + 40) = v10;
    *(_BYTE *)(a1 + 44) = v11;
    uint64_t v12 = a2[6];
    uint64_t v13 = a2[7];
    *(void *)(a1 + 48) = v12;
    *(void *)(a1 + 56) = v13;
    uint64_t v14 = *(int *)(a3 + 36);
    uint64_t v15 = a1 + v14;
    uint64_t v16 = (uint64_t)a2 + v14;
    uint64_t v17 = type metadata accessor for RoutingSession.NowPlayingInfo.PlaybackInfo(0LL);
    uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16LL);
    swift_retain(v12);
    swift_bridgeObjectRetain();
    v18(v15, v16, v17);
    uint64_t v19 = *(int *)(a3 + 40);
    uint64_t v20 = a1 + v19;
    uint64_t v21 = (uint64_t)a2 + v19;
    uint64_t v22 = type metadata accessor for RoutingSession.NowPlayingInfo.TrackInfo(0LL);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16LL))(v20, v21, v22);
  }

  return a1;
}

uint64_t sub_10025DC50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = type metadata accessor for RoutingSession.NowPlayingInfo.PlaybackInfo(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8LL))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 40);
  uint64_t v7 = type metadata accessor for RoutingSession.NowPlayingInfo.TrackInfo(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8LL))(v6, v7);
}

uint64_t sub_10025DCEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(unsigned int *)(a2 + 40);
  unsigned __int8 v10 = *(_BYTE *)(a2 + 44);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1001A8278(v8, v9, v10);
  *(void *)(a1 + 32) = v8;
  *(_DWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 44) = v10;
  uint64_t v11 = *(void *)(a2 + 48);
  uint64_t v12 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = v11;
  *(void *)(a1 + 56) = v12;
  uint64_t v13 = *(int *)(a3 + 36);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = type metadata accessor for RoutingSession.NowPlayingInfo.PlaybackInfo(0LL);
  uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16LL);
  swift_retain(v11);
  swift_bridgeObjectRetain();
  v17(v14, v15, v16);
  uint64_t v18 = *(int *)(a3 + 40);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = type metadata accessor for RoutingSession.NowPlayingInfo.TrackInfo(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16LL))(v19, v20, v21);
  return a1;
}

uint64_t sub_10025DDEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 32);
  unsigned int v7 = *(_DWORD *)(a2 + 40);
  unsigned __int8 v8 = *(_BYTE *)(a2 + 44);
  sub_1001A8278(v6, v7, v8);
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = *(unsigned int *)(a1 + 40);
  *(void *)(a1 + 32) = v6;
  *(_DWORD *)(a1 + 40) = v7;
  unsigned __int8 v11 = *(_BYTE *)(a1 + 44);
  *(_BYTE *)(a1 + 44) = v8;
  sub_1001A0918(v9, v10, v11);
  uint64_t v12 = *(void *)(a1 + 48);
  uint64_t v13 = *(void *)(a2 + 48);
  *(void *)(a1 + 48) = v13;
  swift_retain(v13);
  swift_release(v12);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = *(int *)(a3 + 36);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = type metadata accessor for RoutingSession.NowPlayingInfo.PlaybackInfo(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 24LL))(v15, v16, v17);
  uint64_t v18 = *(int *)(a3 + 40);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = type metadata accessor for RoutingSession.NowPlayingInfo.TrackInfo(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 24LL))(v19, v20, v21);
  return a1;
}

uint64_t sub_10025DF24(uint64_t a1, __int128 *a2, uint64_t a3)
{
  __int128 v6 = *a2;
  __int128 v7 = a2[1];
  *(void *)(a1 + 32) = *((void *)a2 + 4);
  *(void *)(a1 + 37) = *(void *)((char *)a2 + 37);
  uint64_t v8 = *((void *)a2 + 7);
  *(void *)(a1 + 48) = *((void *)a2 + 6);
  *(void *)(a1 + 56) = v8;
  uint64_t v9 = *(int *)(a3 + 36);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = (uint64_t)a2 + v9;
  *(_OWORD *)a1 = v6;
  *(_OWORD *)(a1 + 16) = v7;
  uint64_t v12 = type metadata accessor for RoutingSession.NowPlayingInfo.PlaybackInfo(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32LL))(v10, v11, v12);
  uint64_t v13 = *(int *)(a3 + 40);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = (uint64_t)a2 + v13;
  uint64_t v16 = type metadata accessor for RoutingSession.NowPlayingInfo.TrackInfo(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32LL))(v14, v15, v16);
  return a1;
}

uint64_t sub_10025DFD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  int v8 = *(_DWORD *)(a2 + 40);
  char v9 = *(_BYTE *)(a2 + 44);
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v11 = *(unsigned int *)(a1 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = v8;
  unsigned __int8 v12 = *(_BYTE *)(a1 + 44);
  *(_BYTE *)(a1 + 44) = v9;
  sub_1001A0918(v10, v11, v12);
  uint64_t v13 = *(void *)(a1 + 48);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_release(v13);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  uint64_t v14 = *(int *)(a3 + 36);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = type metadata accessor for RoutingSession.NowPlayingInfo.PlaybackInfo(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 40LL))(v15, v16, v17);
  uint64_t v18 = *(int *)(a3 + 40);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = type metadata accessor for RoutingSession.NowPlayingInfo.TrackInfo(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 40LL))(v19, v20, v21);
  return a1;
}

uint64_t sub_10025E0CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10025E0D8);
}

uint64_t sub_10025E0D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 56);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }

  else
  {
    uint64_t v8 = type metadata accessor for RoutingSession.NowPlayingInfo.PlaybackInfo(0LL);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a3 + 36);
    }

    else
    {
      uint64_t v10 = type metadata accessor for RoutingSession.NowPlayingInfo.TrackInfo(0LL);
      uint64_t v9 = *(void *)(v10 - 8);
      uint64_t v11 = *(int *)(a3 + 40);
    }

    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }

uint64_t sub_10025E178(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10025E184);
}

uint64_t sub_10025E184(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 56) = (a2 - 1);
  }

  else
  {
    uint64_t v8 = type metadata accessor for RoutingSession.NowPlayingInfo.PlaybackInfo(0LL);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a4 + 36);
    }

    else
    {
      uint64_t v10 = type metadata accessor for RoutingSession.NowPlayingInfo.TrackInfo(0LL);
      uint64_t v9 = *(void *)(v10 - 8);
      uint64_t v11 = *(int *)(a4 + 40);
    }

    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }

  return result;
}

uint64_t sub_10025E220(uint64_t a1)
{
  v5[0] = &unk_1003505B0;
  v5[1] = &unk_1003505B0;
  v5[2] = "\r";
  v5[3] = &unk_100350660;
  v5[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
  uint64_t result = type metadata accessor for RoutingSession.NowPlayingInfo.PlaybackInfo(319LL);
  if (v3 <= 0x3F)
  {
    v5[5] = *(void *)(result - 8) + 64LL;
    uint64_t result = type metadata accessor for RoutingSession.NowPlayingInfo.TrackInfo(319LL);
    if (v4 <= 0x3F)
    {
      v5[6] = *(void *)(result - 8) + 64LL;
      swift_initStructMetadata(a1, 256LL, 7LL, v5, a1 + 16);
      return 0LL;
    }
  }

  return result;
}

uint64_t destroy for HostedRoutingSession.NowPlayingInfo.Publisher(uint64_t a1)
{
  return sub_1001A0918(*(void *)a1, *(unsigned int *)(a1 + 8), *(_BYTE *)(a1 + 12));
}

uint64_t _s12mediaremoted20HostedRoutingSessionV14NowPlayingInfoV9PublisherOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unsigned int v4 = *(_DWORD *)(a2 + 8);
  unsigned __int8 v5 = *(_BYTE *)(a2 + 12);
  sub_1001A8278(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(_DWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 12) = v5;
  return a1;
}

uint64_t assignWithCopy for HostedRoutingSession.NowPlayingInfo.Publisher(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unsigned int v4 = *(_DWORD *)(a2 + 8);
  unsigned __int8 v5 = *(_BYTE *)(a2 + 12);
  sub_1001A8278(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(unsigned int *)(a1 + 8);
  *(void *)a1 = v3;
  *(_DWORD *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(_BYTE *)(a1 + 12);
  *(_BYTE *)(a1 + 12) = v5;
  sub_1001A0918(v6, v7, v8);
  return a1;
}

void *initializeWithTake for HostedRoutingSession.NowPlayingInfo.Publisher(void *result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(void *)((char *)result + 5) = *(uint64_t *)((char *)a2 + 5);
  *uint64_t result = v2;
  return result;
}

uint64_t assignWithTake for HostedRoutingSession.NowPlayingInfo.Publisher(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  int v4 = *((_DWORD *)a2 + 2);
  char v5 = *((_BYTE *)a2 + 12);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(unsigned int *)(a1 + 8);
  *(void *)a1 = v3;
  *(_DWORD *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(_BYTE *)(a1 + 12);
  *(_BYTE *)(a1 + 12) = v5;
  sub_1001A0918(v6, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for HostedRoutingSession.NowPlayingInfo.Publisher( uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 13)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 12);
  if (v3 <= 4) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for HostedRoutingSession.NowPlayingInfo.Publisher( uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_BYTE *)(result + 12) = 0;
    *(_DWORD *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 252;
    if (a3 >= 0xFC) {
      *(_BYTE *)(result + 13) = 1;
    }
  }

  else
  {
    if (a3 >= 0xFC) {
      *(_BYTE *)(result + 13) = 0;
    }
    if (a2) {
      *(_BYTE *)(result + 12) = -(char)a2;
    }
  }

  return result;
}

uint64_t sub_10025E488(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 12);
}

uint64_t sub_10025E490(uint64_t result, char a2)
{
  *(_BYTE *)(result + 12) = a2;
  return result;
}

ValueMetadata *type metadata accessor for HostedRoutingSession.NowPlayingInfo.Publisher()
{
  return &type metadata for HostedRoutingSession.NowPlayingInfo.Publisher;
}

uint64_t *sub_10025E4A8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v10);
  }

  else
  {
    uint64_t v7 = (int *)type metadata accessor for HostedRoutingSession(0LL);
    uint64_t v8 = *((void *)v7 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48))(a2, 1LL, v7))
    {
      uint64_t v9 = sub_100156B68(&qword_1003F94C0);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64LL));
    }

    else
    {
      uint64_t v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      uint64_t v12 = a2[3];
      a1[2] = a2[2];
      a1[3] = v12;
      uint64_t v13 = v7[7];
      __dst = (uint64_t *)((char *)a1 + v13);
      uint64_t v61 = v8;
      uint64_t v14 = (unsigned __int8 *)a2 + v13;
      uint64_t v15 = type metadata accessor for HostedRoutingSession.NowPlayingInfo(0LL);
      uint64_t v57 = *(void *)(v15 - 8);
      uint64_t v16 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v57 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v58 = v15;
      if (v16(v14, 1LL, v15))
      {
        uint64_t v17 = sub_100156B68(&qword_1003F9450);
        memcpy(__dst, v14, *(void *)(*(void *)(v17 - 8) + 64LL));
      }

      else
      {
        uint64_t v18 = *((void *)v14 + 1);
        void *__dst = *(void *)v14;
        __dst[1] = v18;
        uint64_t v19 = *((void *)v14 + 3);
        __dst[2] = *((void *)v14 + 2);
        __dst[3] = v19;
        uint64_t v20 = *((void *)v14 + 4);
        uint64_t v21 = *((unsigned int *)v14 + 10);
        unsigned __int8 v22 = v14[44];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1001A8278(v20, v21, v22);
        __dst[4] = v20;
        *((_DWORD *)__dst + 10) = v21;
        *((_BYTE *)__dst + 44) = v22;
        uint64_t v23 = *((void *)v14 + 6);
        uint64_t v24 = *((void *)v14 + 7);
        __dst[6] = v23;
        __dst[7] = v24;
        uint64_t v25 = *(int *)(v58 + 36);
        char v55 = &v14[v25];
        uint64_t v56 = (char *)__dst + v25;
        uint64_t v26 = type metadata accessor for RoutingSession.NowPlayingInfo.PlaybackInfo(0LL);
        int v54 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v26 - 8) + 16LL);
        swift_retain(v23);
        swift_bridgeObjectRetain();
        v54(v56, v55, v26);
        uint64_t v27 = *(int *)(v58 + 40);
        uint64_t v28 = (char *)__dst + v27;
        uint64_t v29 = &v14[v27];
        uint64_t v30 = type metadata accessor for RoutingSession.NowPlayingInfo.TrackInfo(0LL);
        (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v30 - 8) + 16LL))(v28, v29, v30);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v57 + 56))(__dst, 0LL, 1LL, v58);
      }

      uint64_t v31 = v7[8];
      uint64_t v32 = (char *)a1 + v31;
      uint64_t v33 = (char *)a2 + v31;
      uint64_t v34 = type metadata accessor for RoutingControls(0LL);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16LL))(v32, v33, v34);
      *(uint64_t *)((char *)a1 + v7[9]) = *(uint64_t *)((char *)a2 + v7[9]);
      *(uint64_t *)((char *)a1 + v7[10]) = *(uint64_t *)((char *)a2 + v7[10]);
      uint64_t v35 = v7[11];
      uint64_t v36 = (uint64_t *)((char *)a1 + v35);
      uint64_t v37 = (uint64_t *)((char *)a2 + v35);
      uint64_t v38 = v37[1];
      *uint64_t v36 = *v37;
      v36[1] = v38;
      uint64_t v39 = v7[12];
      uint64_t v40 = (char *)a1 + v39;
      uint64_t v41 = (char *)a2 + v39;
      *(_DWORD *)uint64_t v40 = *(_DWORD *)v41;
      v40[4] = v41[4];
      uint64_t v42 = v7[13];
      __dsta = (char *)a1 + v42;
      uint64_t v43 = (char *)a2 + v42;
      uint64_t v44 = type metadata accessor for Date(0LL);
      uint64_t v45 = *(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16LL);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v45(__dsta, v43, v44);
      *((_BYTE *)a1 + v7[14]) = *((_BYTE *)a2 + v7[14]);
      uint64_t v46 = v7[15];
      uint64_t v47 = (char *)a1 + v46;
      int v48 = (char *)a2 + v46;
      uint64_t v49 = type metadata accessor for RoutingSession.HostInfo(0LL);
      uint64_t v50 = *(void *)(v49 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v48, 1LL, v49))
      {
        uint64_t v51 = sub_100156B68(&qword_1003F9448);
        memcpy(v47, v48, *(void *)(*(void *)(v51 - 8) + 64LL));
      }

      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v47, v48, v49);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v47, 0LL, 1LL, v49);
      }

      *((_BYTE *)a1 + v7[16]) = *((_BYTE *)a2 + v7[16]);
      (*(void (**)(uint64_t *, void, uint64_t, int *))(v61 + 56))(a1, 0LL, 1LL, v7);
    }

    uint64_t v52 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)a1 + v52) = *(uint64_t *)((char *)a2 + v52);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }

  return a1;
}

uint64_t sub_10025E878(uint64_t a1)
{
  uint64_t v2 = (int *)type metadata accessor for HostedRoutingSession(0LL);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v2 - 1) + 48LL))(a1, 1LL, v2))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v3 = a1 + v2[7];
    uint64_t v4 = type metadata accessor for HostedRoutingSession.NowPlayingInfo(0LL);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48LL))(v3, 1LL, v4))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1001A0918(*(void *)(v3 + 32), *(unsigned int *)(v3 + 40), *(_BYTE *)(v3 + 44));
      swift_release(*(void *)(v3 + 48));
      swift_bridgeObjectRelease();
      uint64_t v5 = v3 + *(int *)(v4 + 36);
      uint64_t v6 = type metadata accessor for RoutingSession.NowPlayingInfo.PlaybackInfo(0LL);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8LL))(v5, v6);
      uint64_t v7 = v3 + *(int *)(v4 + 40);
      uint64_t v8 = type metadata accessor for RoutingSession.NowPlayingInfo.TrackInfo(0LL);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8LL))(v7, v8);
    }

    uint64_t v9 = a1 + v2[8];
    uint64_t v10 = type metadata accessor for RoutingControls(0LL);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8LL))(v9, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v11 = a1 + v2[13];
    uint64_t v12 = type metadata accessor for Date(0LL);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8LL))(v11, v12);
    uint64_t v13 = a1 + v2[15];
    uint64_t v14 = type metadata accessor for RoutingSession.HostInfo(0LL);
    uint64_t v15 = *(void *)(v14 - 8);
  }

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *sub_10025EA54(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for HostedRoutingSession(0LL);
  uint64_t v7 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(a2, 1LL, v6))
  {
    uint64_t v8 = sub_100156B68(&qword_1003F94C0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64LL));
  }

  else
  {
    uint64_t v58 = v7;
    uint64_t v59 = a3;
    uint64_t v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    uint64_t v10 = a2[3];
    a1[2] = a2[2];
    a1[3] = v10;
    uint64_t v11 = v6[7];
    uint64_t v12 = (void *)((char *)a1 + v11);
    uint64_t v13 = (unsigned __int8 *)a2 + v11;
    uint64_t v14 = type metadata accessor for HostedRoutingSession.NowPlayingInfo(0LL);
    uint64_t v57 = *(void *)(v14 - 8);
    uint64_t v15 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v57 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v15(v13, 1LL, v14))
    {
      uint64_t v16 = sub_100156B68(&qword_1003F9450);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64LL));
    }

    else
    {
      uint64_t v17 = *((void *)v13 + 1);
      *uint64_t v12 = *(void *)v13;
      v12[1] = v17;
      uint64_t v18 = *((void *)v13 + 3);
      v12[2] = *((void *)v13 + 2);
      v12[3] = v18;
      uint64_t v19 = *((void *)v13 + 4);
      uint64_t v20 = *((unsigned int *)v13 + 10);
      unsigned __int8 v21 = v13[44];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1001A8278(v19, v20, v21);
      v12[4] = v19;
      *((_DWORD *)v12 + 10) = v20;
      *((_BYTE *)v12 + 44) = v21;
      uint64_t v22 = *((void *)v13 + 6);
      uint64_t v23 = *((void *)v13 + 7);
      v12[6] = v22;
      v12[7] = v23;
      uint64_t v24 = *(int *)(v14 + 36);
      char v55 = &v13[v24];
      uint64_t v56 = (char *)v12 + v24;
      uint64_t v25 = type metadata accessor for RoutingSession.NowPlayingInfo.PlaybackInfo(0LL);
      uint64_t v26 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v25 - 8) + 16LL);
      swift_retain(v22);
      swift_bridgeObjectRetain();
      v26(v56, v55, v25);
      uint64_t v27 = *(int *)(v14 + 40);
      uint64_t v28 = (char *)v12 + v27;
      uint64_t v29 = &v13[v27];
      uint64_t v30 = type metadata accessor for RoutingSession.NowPlayingInfo.TrackInfo(0LL);
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v30 - 8) + 16LL))(v28, v29, v30);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v57 + 56))(v12, 0LL, 1LL, v14);
    }

    uint64_t v31 = v6[8];
    uint64_t v32 = (char *)a1 + v31;
    uint64_t v33 = (char *)a2 + v31;
    uint64_t v34 = type metadata accessor for RoutingControls(0LL);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16LL))(v32, v33, v34);
    *(void *)((char *)a1 + v6[9]) = *(void *)((char *)a2 + v6[9]);
    *(void *)((char *)a1 + v6[10]) = *(void *)((char *)a2 + v6[10]);
    uint64_t v35 = v6[11];
    uint64_t v36 = (void *)((char *)a1 + v35);
    uint64_t v37 = (void *)((char *)a2 + v35);
    uint64_t v38 = v37[1];
    *uint64_t v36 = *v37;
    v36[1] = v38;
    uint64_t v39 = v6[12];
    uint64_t v40 = (char *)a1 + v39;
    uint64_t v41 = (char *)a2 + v39;
    *(_DWORD *)uint64_t v40 = *(_DWORD *)v41;
    v40[4] = v41[4];
    uint64_t v42 = v6[13];
    uint64_t v43 = (char *)a1 + v42;
    uint64_t v44 = (char *)a2 + v42;
    uint64_t v45 = type metadata accessor for Date(0LL);
    uint64_t v46 = *(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16LL);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v46(v43, v44, v45);
    *((_BYTE *)a1 + v6[14]) = *((_BYTE *)a2 + v6[14]);
    uint64_t v47 = v6[15];
    int v48 = (char *)a1 + v47;
    uint64_t v49 = (char *)a2 + v47;
    uint64_t v50 = type metadata accessor for RoutingSession.HostInfo(0LL);
    uint64_t v51 = *(void *)(v50 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v49, 1LL, v50))
    {
      uint64_t v52 = sub_100156B68(&qword_1003F9448);
      memcpy(v48, v49, *(void *)(*(void *)(v52 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v48, v49, v50);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v48, 0LL, 1LL, v50);
    }

    *((_BYTE *)a1 + v6[16]) = *((_BYTE *)a2 + v6[16]);
    a3 = v59;
    (*(void (**)(void *, void, uint64_t, int *))(v58 + 56))(a1, 0LL, 1LL, v6);
  }

  uint64_t v53 = *(int *)(a3 + 24);
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  *(void *)((char *)a1 + v53) = *(void *)((char *)a2 + v53);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_10025EDE0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for HostedRoutingSession(0LL);
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 1LL, v6);
  int v10 = v8(a2, 1LL, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_1001A813C((uint64_t)a1, type metadata accessor for HostedRoutingSession);
      goto LABEL_7;
    }

    *a1 = *a2;
    a1[1] = a2[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    a1[2] = a2[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    a1[3] = a2[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v18 = v6[7];
    uint64_t v19 = (char *)a1 + v18;
    uint64_t v20 = (unsigned int *)((char *)a2 + v18);
    uint64_t v21 = type metadata accessor for HostedRoutingSession.NowPlayingInfo(0LL);
    uint64_t v22 = *(void *)(v21 - 8);
    uint64_t v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
    int v24 = v23(v19, 1LL, v21);
    int v25 = v23((char *)v20, 1LL, v21);
    if (v24)
    {
      if (!v25)
      {
        *(void *)uint64_t v19 = *(void *)v20;
        *((void *)v19 + 1) = *((void *)v20 + 1);
        *((void *)v19 + 2) = *((void *)v20 + 2);
        *((void *)v19 + 3) = *((void *)v20 + 3);
        uint64_t v26 = *((void *)v20 + 4);
        uint64_t v121 = a3;
        uint64_t v27 = v20[10];
        unsigned __int8 v118 = *((_BYTE *)v20 + 44);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1001A8278(v26, v27, v118);
        *((void *)v19 + 4) = v26;
        *((_DWORD *)v19 + 10) = v27;
        v19[44] = v118;
        uint64_t v28 = *((void *)v20 + 6);
        *((void *)v19 + 6) = v28;
        *((void *)v19 + 7) = *((void *)v20 + 7);
        uint64_t v29 = *(int *)(v21 + 36);
        v116 = (char *)v20 + v29;
        v119 = &v19[v29];
        uint64_t v30 = type metadata accessor for RoutingSession.NowPlayingInfo.PlaybackInfo(0LL);
        v113 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16LL);
        swift_retain(v28);
        swift_bridgeObjectRetain();
        uint64_t v31 = v30;
        a3 = v121;
        v113(v119, v116, v31);
        uint64_t v32 = *(int *)(v21 + 40);
        uint64_t v33 = &v19[v32];
        uint64_t v34 = (char *)v20 + v32;
        uint64_t v35 = type metadata accessor for RoutingSession.NowPlayingInfo.TrackInfo(0LL);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16LL))(v33, v34, v35);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0LL, 1LL, v21);
        goto LABEL_19;
      }
    }

    else
    {
      if (!v25)
      {
        *(void *)uint64_t v19 = *(void *)v20;
        *((void *)v19 + 1) = *((void *)v20 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *((void *)v19 + 2) = *((void *)v20 + 2);
        *((void *)v19 + 3) = *((void *)v20 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v95 = *((void *)v20 + 4);
        unsigned int v96 = v20[10];
        uint64_t v97 = a3;
        unsigned __int8 v98 = *((_BYTE *)v20 + 44);
        sub_1001A8278(v95, v96, v98);
        uint64_t v99 = *((void *)v19 + 4);
        uint64_t v100 = *((unsigned int *)v19 + 10);
        *((void *)v19 + 4) = v95;
        *((_DWORD *)v19 + 10) = v96;
        unsigned __int8 v101 = v19[44];
        v19[44] = v98;
        a3 = v97;
        sub_1001A0918(v99, v100, v101);
        uint64_t v102 = *((void *)v19 + 6);
        uint64_t v103 = *((void *)v20 + 6);
        *((void *)v19 + 6) = v103;
        swift_retain(v103);
        swift_release(v102);
        *((void *)v19 + 7) = *((void *)v20 + 7);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v104 = *(int *)(v21 + 36);
        v105 = &v19[v104];
        v106 = (char *)v20 + v104;
        uint64_t v107 = type metadata accessor for RoutingSession.NowPlayingInfo.PlaybackInfo(0LL);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v107 - 8) + 24LL))(v105, v106, v107);
        uint64_t v108 = *(int *)(v21 + 40);
        v109 = &v19[v108];
        v110 = (char *)v20 + v108;
        uint64_t v111 = type metadata accessor for RoutingSession.NowPlayingInfo.TrackInfo(0LL);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v111 - 8) + 24LL))(v109, v110, v111);
LABEL_19:
        uint64_t v70 = v6[8];
        v71 = (char *)a1 + v70;
        v72 = (char *)a2 + v70;
        uint64_t v73 = type metadata accessor for RoutingControls(0LL);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 24LL))(v71, v72, v73);
        *(void *)((char *)a1 + v6[9]) = *(void *)((char *)a2 + v6[9]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)((char *)a1 + v6[10]) = *(void *)((char *)a2 + v6[10]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v74 = v6[11];
        v75 = (void *)((char *)a1 + v74);
        v76 = (void *)((char *)a2 + v74);
        void *v75 = *v76;
        v75[1] = v76[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v77 = v6[12];
        v78 = (char *)a1 + v77;
        v79 = (char *)a2 + v77;
        int v80 = *(_DWORD *)v79;
        v78[4] = v79[4];
        *(_DWORD *)v78 = v80;
        uint64_t v81 = v6[13];
        v82 = (char *)a1 + v81;
        v83 = (char *)a2 + v81;
        uint64_t v84 = type metadata accessor for Date(0LL);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 24LL))(v82, v83, v84);
        *((_BYTE *)a1 + v6[14]) = *((_BYTE *)a2 + v6[14]);
        uint64_t v85 = v6[15];
        v86 = (char *)a1 + v85;
        v87 = (char *)a2 + v85;
        uint64_t v88 = type metadata accessor for RoutingSession.HostInfo(0LL);
        uint64_t v89 = *(void *)(v88 - 8);
        v90 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v89 + 48);
        int v91 = v90(v86, 1LL, v88);
        int v92 = v90(v87, 1LL, v88);
        if (v91)
        {
          if (!v92)
          {
            (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v86, v87, v88);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v86, 0LL, 1LL, v88);
LABEL_25:
            *((_BYTE *)a1 + v6[16]) = *((_BYTE *)a2 + v6[16]);
            goto LABEL_26;
          }
        }

        else
        {
          if (!v92)
          {
            (*(void (**)(char *, char *, uint64_t))(v89 + 24))(v86, v87, v88);
            goto LABEL_25;
          }

          (*(void (**)(char *, uint64_t))(v89 + 8))(v86, v88);
        }

        uint64_t v93 = sub_100156B68(&qword_1003F9448);
        memcpy(v86, v87, *(void *)(*(void *)(v93 - 8) + 64LL));
        goto LABEL_25;
      }

      sub_1001A813C((uint64_t)v19, type metadata accessor for HostedRoutingSession.NowPlayingInfo);
    }

    uint64_t v69 = sub_100156B68(&qword_1003F9450);
    memcpy(v19, v20, *(void *)(*(void *)(v69 - 8) + 64LL));
    goto LABEL_19;
  }

  if (v10)
  {
LABEL_7:
    uint64_t v17 = sub_100156B68(&qword_1003F94C0);
    memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64LL));
    goto LABEL_26;
  }

  uint64_t v117 = v7;
  uint64_t v120 = a3;
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  uint64_t v11 = v6[7];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (unsigned __int8 *)a2 + v11;
  uint64_t v14 = type metadata accessor for HostedRoutingSession.NowPlayingInfo(0LL);
  uint64_t v115 = *(void *)(v14 - 8);
  uint64_t v15 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v115 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v15(v13, 1LL, v14))
  {
    uint64_t v16 = sub_100156B68(&qword_1003F9450);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64LL));
  }

  else
  {
    *uint64_t v12 = *(void *)v13;
    v12[1] = *((void *)v13 + 1);
    v12[2] = *((void *)v13 + 2);
    v12[3] = *((void *)v13 + 3);
    uint64_t v36 = *((void *)v13 + 4);
    uint64_t v37 = *((unsigned int *)v13 + 10);
    unsigned __int8 v38 = v13[44];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1001A8278(v36, v37, v38);
    v12[4] = v36;
    *((_DWORD *)v12 + 10) = v37;
    *((_BYTE *)v12 + 44) = v38;
    uint64_t v39 = *((void *)v13 + 6);
    v12[6] = v39;
    v12[7] = *((void *)v13 + 7);
    uint64_t v40 = *(int *)(v14 + 36);
    v112 = &v13[v40];
    v114 = (char *)v12 + v40;
    uint64_t v41 = type metadata accessor for RoutingSession.NowPlayingInfo.PlaybackInfo(0LL);
    uint64_t v42 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v41 - 8) + 16LL);
    swift_retain(v39);
    swift_bridgeObjectRetain();
    v42(v114, v112, v41);
    uint64_t v43 = *(int *)(v14 + 40);
    uint64_t v44 = (char *)v12 + v43;
    uint64_t v45 = &v13[v43];
    uint64_t v46 = type metadata accessor for RoutingSession.NowPlayingInfo.TrackInfo(0LL);
    (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v46 - 8) + 16LL))(v44, v45, v46);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v115 + 56))(v12, 0LL, 1LL, v14);
  }

  uint64_t v47 = v6[8];
  int v48 = (char *)a1 + v47;
  uint64_t v49 = (char *)a2 + v47;
  uint64_t v50 = type metadata accessor for RoutingControls(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16LL))(v48, v49, v50);
  *(void *)((char *)a1 + v6[9]) = *(void *)((char *)a2 + v6[9]);
  *(void *)((char *)a1 + v6[10]) = *(void *)((char *)a2 + v6[10]);
  uint64_t v51 = v6[11];
  uint64_t v52 = (void *)((char *)a1 + v51);
  uint64_t v53 = (void *)((char *)a2 + v51);
  void *v52 = *v53;
  v52[1] = v53[1];
  uint64_t v54 = v6[12];
  char v55 = (char *)a1 + v54;
  uint64_t v56 = (char *)a2 + v54;
  char v57 = v56[4];
  *(_DWORD *)char v55 = *(_DWORD *)v56;
  v55[4] = v57;
  uint64_t v58 = v6[13];
  uint64_t v59 = (char *)a1 + v58;
  uint64_t v60 = (char *)a2 + v58;
  uint64_t v61 = type metadata accessor for Date(0LL);
  uint64_t v62 = *(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16LL);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v62(v59, v60, v61);
  *((_BYTE *)a1 + v6[14]) = *((_BYTE *)a2 + v6[14]);
  uint64_t v63 = v6[15];
  uint64_t v64 = (char *)a1 + v63;
  uint64_t v65 = (char *)a2 + v63;
  uint64_t v66 = type metadata accessor for RoutingSession.HostInfo(0LL);
  uint64_t v67 = *(void *)(v66 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v65, 1LL, v66))
  {
    uint64_t v68 = sub_100156B68(&qword_1003F9448);
    memcpy(v64, v65, *(void *)(*(void *)(v68 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v64, v65, v66);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(v64, 0LL, 1LL, v66);
  }

  *((_BYTE *)a1 + v6[16]) = *((_BYTE *)a2 + v6[16]);
  a3 = v120;
  (*(void (**)(void *, void, uint64_t, int *))(v117 + 56))(a1, 0LL, 1LL, v6);
LABEL_26:
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_10025F67C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for HostedRoutingSession(0LL);
  uint64_t v7 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v7 + 48))(a2, 1LL, v6))
  {
    uint64_t v8 = sub_100156B68(&qword_1003F94C0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64LL));
  }

  else
  {
    __int128 v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    uint64_t v10 = v6[7];
    uint64_t v11 = (_OWORD *)((char *)a1 + v10);
    uint64_t v12 = (_OWORD *)((char *)a2 + v10);
    uint64_t v13 = type metadata accessor for HostedRoutingSession.NowPlayingInfo(0LL);
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v14 + 48))(v12, 1LL, v13))
    {
      uint64_t v15 = sub_100156B68(&qword_1003F9450);
      memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64LL));
    }

    else
    {
      __int128 v16 = v12[1];
      *uint64_t v11 = *v12;
      v11[1] = v16;
      *((void *)v11 + 4) = *((void *)v12 + 4);
      *(void *)((char *)v11 + 37) = *(void *)((char *)v12 + 37);
      uint64_t v17 = *((void *)v12 + 7);
      *((void *)v11 + 6) = *((void *)v12 + 6);
      *((void *)v11 + 7) = v17;
      uint64_t v18 = *(int *)(v13 + 36);
      uint64_t v19 = (char *)v11 + v18;
      uint64_t v44 = (char *)v12 + v18;
      uint64_t v20 = type metadata accessor for RoutingSession.NowPlayingInfo.PlaybackInfo(0LL);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32LL))(v19, v44, v20);
      uint64_t v21 = *(int *)(v13 + 40);
      uint64_t v22 = (char *)v11 + v21;
      uint64_t v23 = (char *)v12 + v21;
      uint64_t v24 = type metadata accessor for RoutingSession.NowPlayingInfo.TrackInfo(0LL);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32LL))(v22, v23, v24);
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0LL, 1LL, v13);
    }

    uint64_t v25 = v6[8];
    uint64_t v26 = (char *)a1 + v25;
    uint64_t v27 = (char *)a2 + v25;
    uint64_t v28 = type metadata accessor for RoutingControls(0LL);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32LL))(v26, v27, v28);
    *(void *)((char *)a1 + v6[9]) = *(void *)((char *)a2 + v6[9]);
    *(void *)((char *)a1 + v6[10]) = *(void *)((char *)a2 + v6[10]);
    *(_OWORD *)((char *)a1 + v6[11]) = *(_OWORD *)((char *)a2 + v6[11]);
    uint64_t v29 = v6[12];
    uint64_t v30 = (char *)a1 + v29;
    uint64_t v31 = (char *)a2 + v29;
    *(_DWORD *)uint64_t v30 = *(_DWORD *)v31;
    v30[4] = v31[4];
    uint64_t v32 = v6[13];
    uint64_t v33 = (char *)a1 + v32;
    uint64_t v34 = (char *)a2 + v32;
    uint64_t v35 = type metadata accessor for Date(0LL);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32LL))(v33, v34, v35);
    *((_BYTE *)a1 + v6[14]) = *((_BYTE *)a2 + v6[14]);
    uint64_t v36 = v6[15];
    uint64_t v37 = (char *)a1 + v36;
    unsigned __int8 v38 = (char *)a2 + v36;
    uint64_t v39 = type metadata accessor for RoutingSession.HostInfo(0LL);
    uint64_t v40 = *(void *)(v39 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1LL, v39))
    {
      uint64_t v41 = sub_100156B68(&qword_1003F9448);
      memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v37, v38, v39);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v37, 0LL, 1LL, v39);
    }

    *((_BYTE *)a1 + v6[16]) = *((_BYTE *)a2 + v6[16]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v7 + 56))(a1, 0LL, 1LL, v6);
  }

  uint64_t v42 = *(int *)(a3 + 24);
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  *(void *)((char *)a1 + v42) = *(void *)((char *)a2 + v42);
  return a1;
}

void *sub_10025F96C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for HostedRoutingSession(0LL);
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 1LL, v6);
  int v10 = v8(a2, 1LL, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_1001A813C((uint64_t)a1, type metadata accessor for HostedRoutingSession);
      goto LABEL_7;
    }

    uint64_t v109 = a3;
    uint64_t v19 = a2[1];
    *a1 = *a2;
    a1[1] = v19;
    swift_bridgeObjectRelease();
    a1[2] = a2[2];
    swift_bridgeObjectRelease();
    a1[3] = a2[3];
    swift_bridgeObjectRelease();
    uint64_t v20 = v6[7];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    uint64_t v23 = type metadata accessor for HostedRoutingSession.NowPlayingInfo(0LL);
    uint64_t v24 = *(void *)(v23 - 8);
    uint64_t v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48);
    int v26 = v25(v21, 1LL, v23);
    int v27 = v25(v22, 1LL, v23);
    if (v26)
    {
      if (!v27)
      {
        __int128 v28 = *((_OWORD *)v22 + 1);
        *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
        *((_OWORD *)v21 + 1) = v28;
        *((void *)v21 + 4) = *((void *)v22 + 4);
        *(void *)(v21 + 37) = *(void *)(v22 + 37);
        uint64_t v29 = *((void *)v22 + 7);
        *((void *)v21 + 6) = *((void *)v22 + 6);
        *((void *)v21 + 7) = v29;
        uint64_t v30 = *(int *)(v23 + 36);
        uint64_t v31 = &v21[v30];
        uint64_t v32 = &v22[v30];
        uint64_t v33 = type metadata accessor for RoutingSession.NowPlayingInfo.PlaybackInfo(0LL);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32LL))(v31, v32, v33);
        uint64_t v34 = *(int *)(v23 + 40);
        uint64_t v35 = &v21[v34];
        uint64_t v36 = &v22[v34];
        uint64_t v37 = type metadata accessor for RoutingSession.NowPlayingInfo.TrackInfo(0LL);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32LL))(v35, v36, v37);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0LL, 1LL, v23);
        goto LABEL_19;
      }
    }

    else
    {
      if (!v27)
      {
        uint64_t v93 = *((void *)v22 + 1);
        *(void *)uint64_t v21 = *(void *)v22;
        *((void *)v21 + 1) = v93;
        swift_bridgeObjectRelease();
        uint64_t v94 = *((void *)v22 + 3);
        *((void *)v21 + 2) = *((void *)v22 + 2);
        *((void *)v21 + 3) = v94;
        swift_bridgeObjectRelease();
        int v95 = *((_DWORD *)v22 + 10);
        char v96 = v22[44];
        uint64_t v97 = *((void *)v21 + 4);
        uint64_t v98 = *((unsigned int *)v21 + 10);
        *((void *)v21 + 4) = *((void *)v22 + 4);
        *((_DWORD *)v21 + 10) = v95;
        unsigned __int8 v99 = v21[44];
        v21[44] = v96;
        sub_1001A0918(v97, v98, v99);
        uint64_t v100 = *((void *)v21 + 6);
        *((void *)v21 + 6) = *((void *)v22 + 6);
        swift_release(v100);
        *((void *)v21 + 7) = *((void *)v22 + 7);
        swift_bridgeObjectRelease();
        uint64_t v101 = *(int *)(v23 + 36);
        uint64_t v102 = &v21[v101];
        uint64_t v103 = &v22[v101];
        uint64_t v104 = type metadata accessor for RoutingSession.NowPlayingInfo.PlaybackInfo(0LL);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 40LL))(v102, v103, v104);
        uint64_t v105 = *(int *)(v23 + 40);
        v106 = &v21[v105];
        uint64_t v107 = &v22[v105];
        uint64_t v108 = type metadata accessor for RoutingSession.NowPlayingInfo.TrackInfo(0LL);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v108 - 8) + 40LL))(v106, v107, v108);
LABEL_19:
        uint64_t v67 = v6[8];
        uint64_t v68 = (char *)a1 + v67;
        uint64_t v69 = (char *)a2 + v67;
        uint64_t v70 = type metadata accessor for RoutingControls(0LL);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 40LL))(v68, v69, v70);
        *(void *)((char *)a1 + v6[9]) = *(void *)((char *)a2 + v6[9]);
        swift_bridgeObjectRelease();
        *(void *)((char *)a1 + v6[10]) = *(void *)((char *)a2 + v6[10]);
        swift_bridgeObjectRelease();
        uint64_t v71 = v6[11];
        v72 = (void *)((char *)a1 + v71);
        uint64_t v73 = (void *)((char *)a2 + v71);
        uint64_t v75 = *v73;
        uint64_t v74 = v73[1];
        void *v72 = v75;
        v72[1] = v74;
        swift_bridgeObjectRelease();
        uint64_t v76 = v6[12];
        uint64_t v77 = (char *)a1 + v76;
        v78 = (char *)a2 + v76;
        *(_DWORD *)uint64_t v77 = *(_DWORD *)v78;
        v77[4] = v78[4];
        uint64_t v79 = v6[13];
        int v80 = (char *)a1 + v79;
        uint64_t v81 = (char *)a2 + v79;
        uint64_t v82 = type metadata accessor for Date(0LL);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 40LL))(v80, v81, v82);
        *((_BYTE *)a1 + v6[14]) = *((_BYTE *)a2 + v6[14]);
        uint64_t v83 = v6[15];
        uint64_t v84 = (char *)a1 + v83;
        uint64_t v85 = (char *)a2 + v83;
        uint64_t v86 = type metadata accessor for RoutingSession.HostInfo(0LL);
        uint64_t v87 = *(void *)(v86 - 8);
        uint64_t v88 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v87 + 48);
        int v89 = v88(v84, 1LL, v86);
        int v90 = v88(v85, 1LL, v86);
        if (v89)
        {
          if (!v90)
          {
            (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v84, v85, v86);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v87 + 56))(v84, 0LL, 1LL, v86);
LABEL_25:
            a3 = v109;
            *((_BYTE *)a1 + v6[16]) = *((_BYTE *)a2 + v6[16]);
            goto LABEL_26;
          }
        }

        else
        {
          if (!v90)
          {
            (*(void (**)(char *, char *, uint64_t))(v87 + 40))(v84, v85, v86);
            goto LABEL_25;
          }

          (*(void (**)(char *, uint64_t))(v87 + 8))(v84, v86);
        }

        uint64_t v91 = sub_100156B68(&qword_1003F9448);
        memcpy(v84, v85, *(void *)(*(void *)(v91 - 8) + 64LL));
        goto LABEL_25;
      }

      sub_1001A813C((uint64_t)v21, type metadata accessor for HostedRoutingSession.NowPlayingInfo);
    }

    uint64_t v66 = sub_100156B68(&qword_1003F9450);
    memcpy(v21, v22, *(void *)(*(void *)(v66 - 8) + 64LL));
    goto LABEL_19;
  }

  if (v10)
  {
LABEL_7:
    uint64_t v18 = sub_100156B68(&qword_1003F94C0);
    memcpy(a1, a2, *(void *)(*(void *)(v18 - 8) + 64LL));
    goto LABEL_26;
  }

  __int128 v11 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v11;
  uint64_t v12 = v6[7];
  uint64_t v13 = (_OWORD *)((char *)a1 + v12);
  uint64_t v14 = (_OWORD *)((char *)a2 + v12);
  uint64_t v15 = type metadata accessor for HostedRoutingSession.NowPlayingInfo(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v16 + 48))(v14, 1LL, v15))
  {
    uint64_t v17 = sub_100156B68(&qword_1003F9450);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64LL));
  }

  else
  {
    __int128 v38 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v38;
    *((void *)v13 + 4) = *((void *)v14 + 4);
    *(void *)((char *)v13 + 37) = *(void *)((char *)v14 + 37);
    uint64_t v39 = *((void *)v14 + 7);
    *((void *)v13 + 6) = *((void *)v14 + 6);
    *((void *)v13 + 7) = v39;
    uint64_t v40 = *(int *)(v15 + 36);
    uint64_t v110 = a3;
    uint64_t v41 = (char *)v13 + v40;
    uint64_t v42 = (char *)v14 + v40;
    uint64_t v43 = type metadata accessor for RoutingSession.NowPlayingInfo.PlaybackInfo(0LL);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32LL))(v41, v42, v43);
    uint64_t v44 = *(int *)(v15 + 40);
    uint64_t v45 = (char *)v13 + v44;
    uint64_t v46 = (char *)v14 + v44;
    uint64_t v47 = type metadata accessor for RoutingSession.NowPlayingInfo.TrackInfo(0LL);
    int v48 = v45;
    a3 = v110;
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32LL))(v48, v46, v47);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0LL, 1LL, v15);
  }

  uint64_t v49 = v6[8];
  uint64_t v50 = (char *)a1 + v49;
  uint64_t v51 = (char *)a2 + v49;
  uint64_t v52 = type metadata accessor for RoutingControls(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 32LL))(v50, v51, v52);
  *(void *)((char *)a1 + v6[9]) = *(void *)((char *)a2 + v6[9]);
  *(void *)((char *)a1 + v6[10]) = *(void *)((char *)a2 + v6[10]);
  *(_OWORD *)((char *)a1 + v6[11]) = *(_OWORD *)((char *)a2 + v6[11]);
  uint64_t v53 = v6[12];
  uint64_t v54 = (char *)a1 + v53;
  char v55 = (char *)a2 + v53;
  *(_DWORD *)uint64_t v54 = *(_DWORD *)v55;
  v54[4] = v55[4];
  uint64_t v56 = v6[13];
  char v57 = (char *)a1 + v56;
  uint64_t v58 = (char *)a2 + v56;
  uint64_t v59 = type metadata accessor for Date(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 32LL))(v57, v58, v59);
  *((_BYTE *)a1 + v6[14]) = *((_BYTE *)a2 + v6[14]);
  uint64_t v60 = v6[15];
  uint64_t v61 = (char *)a1 + v60;
  uint64_t v62 = (char *)a2 + v60;
  uint64_t v63 = type metadata accessor for RoutingSession.HostInfo(0LL);
  uint64_t v64 = *(void *)(v63 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v62, 1LL, v63))
  {
    uint64_t v65 = sub_100156B68(&qword_1003F9448);
    memcpy(v61, v62, *(void *)(*(void *)(v65 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v61, v62, v63);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v61, 0LL, 1LL, v63);
  }

  *((_BYTE *)a1 + v6[16]) = *((_BYTE *)a2 + v6[16]);
  (*(void (**)(void *, void, uint64_t, int *))(v7 + 56))(a1, 0LL, 1LL, v6);
LABEL_26:
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10026004C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100260058);
}

uint64_t sub_100260058(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100156B68(&qword_1003F94C0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  }
  unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF) {
    LODWORD(v9) = -1;
  }
  return (v9 + 1);
}

uint64_t sub_1002600D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002600E4);
}

uint64_t sub_1002600E4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100156B68(&qword_1003F94C0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  }
  *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

void sub_100260160(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(v2 - 8) + 64LL;
    v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_initStructMetadata(a1, 256LL, 3LL, v4, a1 + 16);
  }

uint64_t sub_10026023C()
{
  uint64_t v0 = sub_100156B68(&qword_1003F8620);
  uint64_t v1 = swift_allocObject(v0, 208LL, 7LL);
  *(_OWORD *)(v1 + 16) = xmmword_1003506B0;
  uint64_t result = kMRMediaRemoteOriginNowPlayingApplicationDidChangeNotification;
  if (!kMRMediaRemoteOriginNowPlayingApplicationDidChangeNotification)
  {
    __break(1u);
    goto LABEL_14;
  }

  *(void *)(v1 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(kMRMediaRemoteOriginNowPlayingApplicationDidChangeNotification);
  *(void *)(v1 + 40) = v3;
  uint64_t result = kMRMediaRemoteOriginNowPlayingApplicationClientStateDidChange;
  if (!kMRMediaRemoteOriginNowPlayingApplicationClientStateDidChange)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }

  *(void *)(v1 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)(kMRMediaRemoteOriginNowPlayingApplicationClientStateDidChange);
  *(void *)(v1 + 56) = v4;
  uint64_t result = kMRMediaRemoteOriginNowPlayingPlayerDidChange;
  if (!kMRMediaRemoteOriginNowPlayingPlayerDidChange)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }

  *(void *)(v1 + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)(kMRMediaRemoteOriginNowPlayingPlayerDidChange);
  *(void *)(v1 + 72) = v5;
  uint64_t result = kMRMediaRemoteOriginNowPlayingApplicationIsPlayingDidChangeNotification;
  if (!kMRMediaRemoteOriginNowPlayingApplicationIsPlayingDidChangeNotification)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }

  *(void *)(v1 + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)(kMRMediaRemoteOriginNowPlayingApplicationIsPlayingDidChangeNotification);
  *(void *)(v1 + 88) = v6;
  uint64_t result = kMROriginNowPlayingPlaybackQueueChangedNotification;
  if (!kMROriginNowPlayingPlaybackQueueChangedNotification)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }

  *(void *)(v1 + 96) = static String._unconditionallyBridgeFromObjectiveC(_:)(kMROriginNowPlayingPlaybackQueueChangedNotification);
  *(void *)(v1 + 104) = v7;
  uint64_t result = kMROriginPlaybackQueueContentItemsChangedNotification;
  if (!kMROriginPlaybackQueueContentItemsChangedNotification)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }

  *(void *)(v1 + 112) = static String._unconditionallyBridgeFromObjectiveC(_:)(kMROriginPlaybackQueueContentItemsChangedNotification);
  *(void *)(v1 + 120) = v8;
  uint64_t result = kMROriginPlaybackQueueContentItemArtworkChangedNotification;
  if (!kMROriginPlaybackQueueContentItemArtworkChangedNotification)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }

  *(void *)(v1 + 128) = static String._unconditionallyBridgeFromObjectiveC(_:)(kMROriginPlaybackQueueContentItemArtworkChangedNotification);
  *(void *)(v1 + 136) = v9;
  uint64_t result = kMRMediaRemoteOriginSupportedCommandsDidChangeNotification;
  if (!kMRMediaRemoteOriginSupportedCommandsDidChangeNotification)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }

  *(void *)(v1 + 144) = static String._unconditionallyBridgeFromObjectiveC(_:)(kMRMediaRemoteOriginSupportedCommandsDidChangeNotification);
  *(void *)(v1 + 152) = v10;
  uint64_t result = kMRMediaRemoteOriginNowPlayingPlayerStateDidChange;
  if (!kMRMediaRemoteOriginNowPlayingPlayerStateDidChange)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }

  *(void *)(v1 + 160) = static String._unconditionallyBridgeFromObjectiveC(_:)(kMRMediaRemoteOriginNowPlayingPlayerStateDidChange);
  *(void *)(v1 + 168) = v11;
  uint64_t result = kMRMediaRemoteOriginDidRegisterNotification;
  if (!kMRMediaRemoteOriginDidRegisterNotification)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }

  *(void *)(v1 + 176) = static String._unconditionallyBridgeFromObjectiveC(_:)(kMRMediaRemoteOriginDidRegisterNotification);
  *(void *)(v1 + 184) = v12;
  uint64_t result = kMRMediaRemoteOriginDidUnregisterNotification;
  if (kMRMediaRemoteOriginDidUnregisterNotification)
  {
    uint64_t result = static String._unconditionallyBridgeFromObjectiveC(_:)(kMRMediaRemoteOriginDidUnregisterNotification);
    *(void *)(v1 + 192) = result;
    *(void *)(v1 + 200) = v13;
    qword_100403648 = v1;
    return result;
  }

id sub_1002603B8()
{
  uint64_t v0 = sub_100156B68(&qword_1003F8D58);
  uint64_t v1 = swift_allocObject(v0, 56LL, 7LL);
  *(_OWORD *)(v1 + 16) = xmmword_10034C4E0;
  uint64_t v2 = (void *)MRAVEndpointVolumeDidChangeNotification;
  uint64_t v3 = (void *)MRAVEndpointVolumeControlCapabilitiesDidChangeNotification;
  *(void *)(v1 + 32) = MRAVEndpointVolumeDidChangeNotification;
  *(void *)(v1 + 40) = v3;
  id v7 = (id)MRAVEndpointDeviceInfoDidChangeNotification;
  *(void *)(v1 + 48) = MRAVEndpointDeviceInfoDidChangeNotification;
  qword_100403658 = v1;
  id v4 = v2;
  id v5 = v3;
  return v7;
}

id sub_100260440()
{
  return *(id *)(v0 + 32);
}

void sub_100260470(uint64_t a1)
{
  uint64_t v3 = *(void **)(v1 + 32);
  *(void *)(v1 + 32) = a1;
}

uint64_t (*sub_1002604B4(uint64_t a1))(void)
{
  return j__swift_endAccess;
}

uint64_t sub_1002604F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_routingMode;
  swift_beginAccess(v3, v6, 0LL, 0LL);
  uint64_t v4 = type metadata accessor for RoutingMode(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a1, v3, v4);
}

uint64_t sub_100260554(_BYTE *a1)
{
  uint64_t v3 = type metadata accessor for RoutingMode(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  id v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v5);
  uint64_t v9 = &v18[-v8];
  uint64_t v10 = v1 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_routingMode;
  __n128 v11 = swift_beginAccess( v1 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_routingMode,  v19,  0LL,  0LL);
  uint64_t v12 = *(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v4 + 16);
  v12(v9, v10, v3, v11);
  __n128 v13 = swift_beginAccess(v10, v18, 33LL, 0LL);
  (*(void (**)(uint64_t, _BYTE *, uint64_t, __n128))(v4 + 24))(v10, a1, v3, v13);
  swift_endAccess(v18);
  ((void (*)(_BYTE *, uint64_t, uint64_t))v12)(v7, v10, v3);
  uint64_t v14 = sub_100156FEC( &qword_1003F8D38,  (uint64_t (*)(uint64_t))&type metadata accessor for RoutingMode,  (uint64_t)&protocol conformance descriptor for RoutingMode);
  char v15 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v7, v3, v14);
  uint64_t v16 = *(void (**)(_BYTE *, uint64_t))(v4 + 8);
  v16(v7, v3);
  if ((v15 & 1) == 0) {
    sub_10026C750();
  }
  v16(a1, v3);
  return ((uint64_t (*)(_BYTE *, uint64_t))v16)(v9, v3);
}

void (*sub_1002606D4(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x48uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = type metadata accessor for RoutingMode(0LL);
  v3[4] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[5] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[6] = malloc(v6);
  id v7 = malloc(v6);
  v3[7] = v7;
  uint64_t v8 = v1 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_routingMode;
  __n128 v9 = swift_beginAccess(v8, v3, 0LL, 0LL);
  uint64_t v10 = *(void (**)(void *, uint64_t, uint64_t, __n128))(v5 + 16);
  v3[8] = v10;
  v10(v7, v8, v4, v9);
  return sub_100260790;
}

void sub_100260790(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  if ((a2 & 1) != 0)
  {
    uint64_t v3 = *(_BYTE **)(v2 + 56);
    uint64_t v5 = *(void *)(v2 + 40);
    uint64_t v4 = *(_BYTE **)(v2 + 48);
    uint64_t v6 = *(void *)(v2 + 32);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v2 + 64))(v4, v3, v6);
    sub_100260554(v4);
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v3, v6);
  }

  else
  {
    uint64_t v4 = *(_BYTE **)(v2 + 48);
    uint64_t v3 = *(_BYTE **)(v2 + 56);
    sub_100260554(v3);
  }

  free(v3);
  free(v4);
  free((void *)v2);
}

uint64_t sub_10026081C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v2;
  uint64_t v5 = type metadata accessor for HostedRoutingSourceSession(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (uint64_t *)((char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v9 = type metadata accessor for Logger(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __n128 v13 = (void *)((char *)v2 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_sessions);
  swift_beginAccess((char *)v2 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_sessions, v78, 0LL, 0LL);
  uint64_t v14 = *v13;
  swift_bridgeObjectRetain();
  LOBYTE(a1) = sub_100275E34(a1, v14);
  uint64_t result = swift_bridgeObjectRelease();
  if ((a1 & 1) != 0) {
    return result;
  }
  uint64_t v16 = sub_1001741A8();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v16, v9);
  uint64_t v17 = swift_retain_n(v2, 2LL);
  uint64_t v18 = (os_log_s *)Logger.logObject.getter(v17);
  int v19 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v18, (os_log_type_t)v19))
  {
    int v71 = v19;
    os_log_t v73 = v18;
    uint64_t v74 = v12;
    uint64_t v20 = swift_slowAlloc(22LL, -1LL);
    uint64_t v70 = swift_slowAlloc(64LL, -1LL);
    v77[0] = v70;
    *(_DWORD *)uint64_t v20 = 136315394;
    uint64_t v21 = _typeName(_:qualified:)(v4, 0LL);
    uint64_t v76 = (void *)sub_10015ADC4(v21, v22, v77);
    uint64_t v23 = v77;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v76, v77, v20 + 4, v20 + 12);
    swift_bridgeObjectRelease();
    v72 = (uint8_t *)v20;
    *(_WORD *)(v20 + 12) = 2080;
    uint64_t v75 = v13;
    uint64_t v24 = *v13;
    int64_t v25 = *(void *)(*v13 + 16);
    int v26 = _swiftEmptyArrayStorage;
    if (v25)
    {
      uint64_t v66 = v77;
      uint64_t v67 = v10;
      uint64_t v68 = v9;
      uint64_t v69 = v2;
      uint64_t v76 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      sub_10015DCE8(0, v25, 0);
      uint64_t v27 = *(unsigned __int8 *)(v6 + 80);
      uint64_t v65 = v24;
      uint64_t v28 = v24 + ((v27 + 32) & ~v27);
      uint64_t v29 = *(void *)(v6 + 72);
      int v26 = v76;
      do
      {
        sub_1001A80F8(v28, (uint64_t)v8, type metadata accessor for HostedRoutingSourceSession);
        uint64_t v30 = *v8;
        uint64_t v31 = v8[1];
        swift_bridgeObjectRetain();
        sub_1001A813C((uint64_t)v8, type metadata accessor for HostedRoutingSourceSession);
        if ((swift_isUniquelyReferenced_nonNull_native(v26) & 1) == 0)
        {
          sub_10015DCE8(0, v26[2] + 1LL, 1);
          int v26 = v76;
        }

        unint64_t v33 = v26[2];
        unint64_t v32 = v26[3];
        if (v33 >= v32 >> 1)
        {
          sub_10015DCE8(v32 > 1, v33 + 1, 1);
          int v26 = v76;
        }

        v26[2] = v33 + 1;
        uint64_t v34 = &v26[2 * v33];
        v34[4] = v30;
        v34[5] = v31;
        v28 += v29;
        --v25;
      }

      while (v25);
      swift_bridgeObjectRelease();
      uint64_t v9 = v68;
      uint64_t v2 = v69;
      uint64_t v23 = v66;
      uint64_t v10 = v67;
    }

    uint64_t v35 = v72;
    uint64_t v36 = Array.description.getter(v26, &type metadata for String);
    unint64_t v38 = v37;
    swift_bridgeObjectRelease();
    uint64_t v76 = (void *)sub_10015ADC4(v36, v38, v77);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v76, v23, v35 + 14, v35 + 22);
    swift_release_n(v2, 2LL);
    swift_bridgeObjectRelease();
    os_log_t v39 = v73;
    _os_log_impl((void *)&_mh_execute_header, v73, (os_log_type_t)v71, "[%s] setSessions - value: %s", v35, 0x16u);
    uint64_t v40 = v70;
    swift_arrayDestroy(v70, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v40, -1LL, -1LL);
    swift_slowDealloc(v35, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v74, v9);
    __n128 v13 = v75;
  }

  else
  {

    swift_release_n(v2, 2LL);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }

  sub_100269150();
  uint64_t v41 = (char *)v2 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_delegate;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong((char *)v2 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_delegate);
  if (Strong)
  {
    uint64_t v44 = Strong;
    uint64_t v45 = *((void *)v41 + 1);
    uint64_t ObjectType = swift_getObjectType(Strong, v43);
    uint64_t v47 = *v13;
    int v48 = *(void (**)(void *, uint64_t, uint64_t, uint64_t))(v45 + 8);
    swift_bridgeObjectRetain();
    v48(v2, v47, ObjectType, v45);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease(v44);
  }

  uint64_t v49 = (void *)((char *)v2 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_internalSessionObservers);
  swift_beginAccess( (char *)v2 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_internalSessionObservers,  v77,  0LL,  0LL);
  uint64_t v50 = *v49;
  uint64_t v51 = *v49 + 64LL;
  uint64_t v52 = 1LL << *(_BYTE *)(*v49 + 32LL);
  uint64_t v53 = -1LL;
  if (v52 < 64) {
    uint64_t v53 = ~(-1LL << v52);
  }
  unint64_t v54 = v53 & *(void *)(*v49 + 64LL);
  int64_t v55 = (unint64_t)(v52 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain_n(*v49, 2LL);
  int64_t v56 = 0LL;
  while (1)
  {
    if (v54)
    {
      unint64_t v57 = __clz(__rbit64(v54));
      v54 &= v54 - 1;
      unint64_t v58 = v57 | (v56 << 6);
      goto LABEL_19;
    }

    int64_t v59 = v56 + 1;
    if (__OFADD__(v56, 1LL))
    {
      __break(1u);
      goto LABEL_42;
    }

    if (v59 >= v55) {
      goto LABEL_39;
    }
    unint64_t v60 = *(void *)(v51 + 8 * v59);
    ++v56;
    if (!v60)
    {
      int64_t v56 = v59 + 1;
      if (v59 + 1 >= v55) {
        goto LABEL_39;
      }
      unint64_t v60 = *(void *)(v51 + 8 * v56);
      if (!v60)
      {
        int64_t v56 = v59 + 2;
        if (v59 + 2 >= v55) {
          goto LABEL_39;
        }
        unint64_t v60 = *(void *)(v51 + 8 * v56);
        if (!v60)
        {
          int64_t v56 = v59 + 3;
          if (v59 + 3 >= v55) {
            goto LABEL_39;
          }
          unint64_t v60 = *(void *)(v51 + 8 * v56);
          if (!v60)
          {
            int64_t v56 = v59 + 4;
            if (v59 + 4 >= v55) {
              goto LABEL_39;
            }
            unint64_t v60 = *(void *)(v51 + 8 * v56);
            if (!v60) {
              break;
            }
          }
        }
      }
    }

void *sub_100260E08(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_10015DCE8(0, v1, 0);
  uint64_t result = (void *)sub_1001E5AA0(a1);
  uint64_t v5 = (uint64_t)result;
  uint64_t v6 = 0LL;
  uint64_t v7 = a1 + 64;
  int64_t v21 = v1;
  int v22 = v4;
  uint64_t v23 = a1 + 64;
  while ((v5 & 0x8000000000000000LL) == 0 && v5 < 1LL << *(_BYTE *)(a1 + 32))
  {
    unint64_t v10 = (unint64_t)v5 >> 6;
    if (*(_DWORD *)(a1 + 36) != v4) {
      goto LABEL_24;
    }
    uint64_t v11 = *(void *)(*(void *)(a1 + 56) + 8 * v5);
    uint64_t v24 = v6;
    swift_retain(v11);
    v12._countAndFlagsBits = sub_100262454();
    String.append(_:)(v12);
    swift_release(v11);
    uint64_t result = (void *)swift_bridgeObjectRelease();
    unint64_t v14 = _swiftEmptyArrayStorage[2];
    unint64_t v13 = _swiftEmptyArrayStorage[3];
    if (v14 >= v13 >> 1) {
      uint64_t result = (void *)sub_10015DCE8(v13 > 1, v14 + 1, 1);
    }
    _swiftEmptyArrayStorage[2] = v14 + 1;
    char v15 = &_swiftEmptyArrayStorage[2 * v14];
    v15[4] = 538976288LL;
    v15[5] = 0xE400000000000000LL;
    int64_t v8 = 1LL << *(_BYTE *)(a1 + 32);
    if (v5 >= v8) {
      goto LABEL_25;
    }
    uint64_t v7 = a1 + 64;
    uint64_t v16 = *(void *)(v23 + 8 * v10);
    if ((v16 & (1LL << v5)) == 0) {
      goto LABEL_26;
    }
    int v4 = v22;
    if (*(_DWORD *)(a1 + 36) != v22) {
      goto LABEL_27;
    }
    unint64_t v17 = v16 & (-2LL << (v5 & 0x3F));
    if (v17)
    {
      int64_t v8 = __clz(__rbit64(v17)) | v5 & 0xFFFFFFFFFFFFFFC0LL;
      int64_t v9 = v21;
    }

    else
    {
      unint64_t v18 = v10 + 1;
      unint64_t v19 = (unint64_t)(v8 + 63) >> 6;
      int64_t v9 = v21;
      if (v10 + 1 < v19)
      {
        unint64_t v20 = *(void *)(v23 + 8 * v18);
        if (v20)
        {
LABEL_20:
          int64_t v8 = __clz(__rbit64(v20)) + (v18 << 6);
        }

        else
        {
          while (v19 - 2 != v10)
          {
            unint64_t v20 = *(void *)(a1 + 80 + 8 * v10++);
            if (v20)
            {
              unint64_t v18 = v10 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }

    uint64_t v6 = v24 + 1;
    uint64_t v5 = v8;
    if (v24 + 1 == v9) {
      return _swiftEmptyArrayStorage;
    }
  }

  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_100261048(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = _swiftEmptyArrayStorage;
  if (!v1) {
    return (uint64_t)v2;
  }
  sub_10015DCE8(0, v1, 0);
  uint64_t v2 = _swiftEmptyArrayStorage;
  uint64_t result = sub_1001E5AA0(a1);
  uint64_t v6 = result;
  uint64_t v7 = 0LL;
  uint64_t v8 = a1 + 64;
  int64_t v25 = v1;
  int v26 = v5;
  uint64_t v27 = a1 + 64;
  while ((v6 & 0x8000000000000000LL) == 0 && v6 < 1LL << *(_BYTE *)(a1 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if (*(_DWORD *)(a1 + 36) != v5) {
      goto LABEL_24;
    }
    Swift::String v12 = v2;
    uint64_t v13 = *(void *)(*(void *)(a1 + 56) + 8 * v6);
    swift_retain(v13);
    uint64_t v28 = sub_10017EB08();
    uint64_t v15 = v14;
    uint64_t v16 = v13;
    uint64_t v2 = v12;
    uint64_t result = swift_release(v16);
    uint64_t v29 = v12;
    unint64_t v17 = v12[2];
    unint64_t v18 = v2[3];
    if (v17 >= v18 >> 1)
    {
      uint64_t result = sub_10015DCE8(v18 > 1, v17 + 1, 1);
      uint64_t v2 = v29;
    }

    v2[2] = v17 + 1;
    unint64_t v19 = &v2[2 * v17];
    v19[4] = v28;
    v19[5] = v15;
    int64_t v9 = 1LL << *(_BYTE *)(a1 + 32);
    if (v6 >= v9) {
      goto LABEL_25;
    }
    uint64_t v8 = a1 + 64;
    uint64_t v20 = *(void *)(v27 + 8 * v11);
    if ((v20 & (1LL << v6)) == 0) {
      goto LABEL_26;
    }
    int v5 = v26;
    if (*(_DWORD *)(a1 + 36) != v26) {
      goto LABEL_27;
    }
    unint64_t v21 = v20 & (-2LL << (v6 & 0x3F));
    if (v21)
    {
      int64_t v9 = __clz(__rbit64(v21)) | v6 & 0xFFFFFFFFFFFFFFC0LL;
      int64_t v10 = v25;
    }

    else
    {
      unint64_t v22 = v11 + 1;
      unint64_t v23 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v25;
      if (v11 + 1 < v23)
      {
        unint64_t v24 = *(void *)(v27 + 8 * v22);
        if (v24)
        {
LABEL_20:
          int64_t v9 = __clz(__rbit64(v24)) + (v22 << 6);
        }

        else
        {
          while (v23 - 2 != v11)
          {
            unint64_t v24 = *(void *)(a1 + 80 + 8 * v11++);
            if (v24)
            {
              unint64_t v22 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }

    ++v7;
    uint64_t v6 = v9;
    if (v7 == v10) {
      return (uint64_t)v2;
    }
  }

  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_100261268()
{
  int64_t v1 = (void *)(v0 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_sessions);
  swift_beginAccess(v0 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_sessions, v3, 0LL, 0LL);
  return swift_bridgeObjectRetain(*v1);
}

uint64_t sub_1002612B0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_sessions);
  swift_beginAccess(v1 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_sessions, v6, 1LL, 0LL);
  uint64_t v4 = *v3;
  uint64_t *v3 = a1;
  sub_10026081C(v4);
  return swift_bridgeObjectRelease();
}

void (*sub_100261314(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_sessions;
  v3[4] = v1;
  v3[5] = v4;
  int v5 = (void *)(v1 + v4);
  swift_beginAccess(v1 + v4, v3, 1LL, 0LL);
  v3[3] = *v5;
  swift_bridgeObjectRetain();
  return sub_100261388;
}

void sub_100261388(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v4 = *(void *)(*(void *)a1 + 32LL);
  uint64_t v3 = *(void *)(*(void *)a1 + 40LL);
  uint64_t v5 = *(void *)(v4 + v3);
  *(void *)(v4 + v3) = *(void *)(*(void *)a1 + 24LL);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    sub_10026081C(v5);
    swift_bridgeObjectRelease();
  }

  else
  {
    sub_10026081C(v5);
  }

  swift_bridgeObjectRelease();
  free(v2);
}

id sub_1002613F8()
{
  uint64_t v1 = OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource____lazy_storage___discoverySession;
  uint64_t v2 = *(void **)((char *)v0
                + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource____lazy_storage___discoverySession);
  if (v2)
  {
    id v3 = *(id *)((char *)v0
               + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource____lazy_storage___discoverySession);
  }

  else
  {
    id v4 = sub_10026145C((uint64_t)v0, *v0);
    uint64_t v5 = *(void **)((char *)v0 + v1);
    *(uint64_t *)((char *)v0 + v1) = (uint64_t)v4;
    id v3 = v4;

    uint64_t v2 = 0LL;
  }

  id v6 = v2;
  return v3;
}

id sub_10026145C(uint64_t a1, uint64_t a2)
{
  uint64_t v46 = a1;
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v43 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v42 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for Logger(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  Swift::String v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = sub_1001741A8();
  uint64_t v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  uint64_t v15 = (os_log_s *)Logger.logObject.getter(v14);
  os_log_type_t v16 = static os_log_type_t.default.getter();
  BOOL v17 = os_log_type_enabled(v15, v16);
  uint64_t v44 = v7;
  uint64_t v45 = v6;
  if (v17)
  {
    uint64_t v41 = v3;
    unint64_t v18 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v19 = swift_slowAlloc(32LL, -1LL);
    *(void *)&__int128 aBlock = v19;
    uint64_t v40 = v4;
    *(_DWORD *)unint64_t v18 = 136315138;
    uint64_t v20 = _typeName(_:qualified:)(a2, 0LL);
    uint64_t v47 = (void *)sub_10015ADC4(v20, v21, (uint64_t *)&aBlock);
    uint64_t v4 = v40;
    uint64_t v3 = v41;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, &aBlock, v18 + 4, v18 + 12);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "[%s] discoverySession - initializing", v18, 0xCu);
    swift_arrayDestroy(v19, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1LL, -1LL);
    swift_slowDealloc(v18, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  id result =  [(id)objc_opt_self(MRAVRoutingDiscoverySession) discoverySessionWithEndpointFeatures:8 enableThrottling:0];
  uint64_t v23 = v46;
  if (result)
  {
    id v24 = result;
    [v24 setAlwaysAllowUpdates:1];
    uint64_t v25 = swift_allocObject(&unk_1003ABBC0, 24LL, 7LL);
    swift_weakInit(v25 + 16, v23);
    uint64_t v50 = sub_10028F81C;
    uint64_t v51 = v25;
    *(void *)&__int128 aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256LL;
    *(void *)&__int128 v49 = sub_100261984;
    *((void *)&v49 + 1) = &unk_1003ABCA0;
    int v26 = _Block_copy(&aBlock);
    swift_release(v51);
    id v27 = [v24 addEndpointsAddedCallback:v26];
    _Block_release(v26);
    if (v27)
    {
      _bridgeAnyObjectToAny(_:)(&aBlock);
      swift_unknownObjectRelease(v27);
    }

    else
    {
      __int128 aBlock = 0u;
      __int128 v49 = 0u;
    }

    sub_1001603DC((uint64_t)&aBlock, &qword_1003F9EE0);
    uint64_t v28 = swift_allocObject(&unk_1003ABBC0, 24LL, 7LL);
    swift_weakInit(v28 + 16, v23);
    uint64_t v50 = sub_10028F844;
    uint64_t v51 = v28;
    *(void *)&__int128 aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256LL;
    *(void *)&__int128 v49 = sub_100261984;
    *((void *)&v49 + 1) = &unk_1003ABCC8;
    uint64_t v29 = _Block_copy(&aBlock);
    swift_release(v51);
    id v30 = [v24 addEndpointsRemovedCallback:v29];
    _Block_release(v29);

    if (v30)
    {
      _bridgeAnyObjectToAny(_:)(&aBlock);
      swift_unknownObjectRelease(v30);
    }

    else
    {
      __int128 aBlock = 0u;
      __int128 v49 = 0u;
    }

    uint64_t v31 = sub_1001603DC((uint64_t)&aBlock, &qword_1003F9EE0);
    unint64_t v32 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v23 + 280LL))(v31);
    uint64_t v50 = sub_10029256C;
    uint64_t v51 = v23;
    *(void *)&__int128 aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256LL;
    *(void *)&__int128 v49 = sub_100157EA8;
    *((void *)&v49 + 1) = &unk_1003ABCF0;
    unint64_t v33 = _Block_copy(&aBlock);
    uint64_t v34 = swift_retain(v23);
    uint64_t v35 = v42;
    static DispatchQoS.unspecified.getter(v34);
    uint64_t v47 = _swiftEmptyArrayStorage;
    uint64_t v36 = sub_100156FEC( (unint64_t *)&qword_1003FADB0,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    uint64_t v37 = sub_100156B68((uint64_t *)&unk_1003F9A70);
    uint64_t v38 = sub_1001604E8( (unint64_t *)&qword_1003FADC0,  (uint64_t *)&unk_1003F9A70,  (uint64_t)&protocol conformance descriptor for [A]);
    os_log_t v39 = v45;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v47, v37, v38, v3, v36);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v35, v39, v33);
    _Block_release(v33);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v39, v3);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v35, v44);
    swift_release(v51);
    return v24;
  }

  else
  {
    __break(1u);
  }

  return result;
}

uint64_t sub_100261984(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (a2)
  {
    uint64_t v5 = sub_10016083C(0LL, &qword_1003FC960, &OBJC_CLASS___MRAVEndpoint_ptr);
    uint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v5);
  }

  swift_retain(v3);
  v4(v2);
  swift_release(v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1002619F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  a1 += 16LL;
  swift_beginAccess(a1, v29, 0LL, 0LL);
  uint64_t result = swift_weakLoadStrong(a1);
  if (result)
  {
    uint64_t v15 = result;
    uint64_t v16 = (*(uint64_t (**)(void))(*(void *)result + 280LL))();
    uint64_t v25 = v7;
    BOOL v17 = (void *)v16;
    aBlock[4] = a2;
    uint64_t v28 = v15;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256LL;
    aBlock[2] = sub_100157EA8;
    aBlock[3] = a3;
    unint64_t v18 = _Block_copy(aBlock);
    uint64_t v19 = swift_retain(v15);
    static DispatchQoS.unspecified.getter(v19);
    int v26 = _swiftEmptyArrayStorage;
    uint64_t v20 = sub_100156FEC( (unint64_t *)&qword_1003FADB0,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    uint64_t v21 = sub_100156B68((uint64_t *)&unk_1003F9A70);
    uint64_t v24 = v10;
    uint64_t v22 = v21;
    uint64_t v23 = sub_1001604E8( (unint64_t *)&qword_1003FADC0,  (uint64_t *)&unk_1003F9A70,  (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v26, v22, v23, v6, v20);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v13, v9, v18);
    _Block_release(v18);
    swift_release(v15);

    (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v6);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v24);
    return swift_release(v28);
  }

  return result;
}

uint64_t sub_100261C08()
{
  if (*v0) {
    return 0x7463656E6E6F632ELL;
  }
  else {
    return 0x65766F637369642ELL;
  }
}

uint64_t sub_100261C78()
{
  if (*v0) {
    return 0x636E79732ELL;
  }
  else {
    return 0x65766F637369642ELL;
  }
}

uint64_t sub_100261CB4()
{
  uint64_t v1 = *(void *)(v0 + 24);
  if (v1)
  {
    uint64_t v2 = (void *)objc_opt_self(&OBJC_CLASS___NSNotificationCenter);
    swift_unknownObjectRetain(v1);
    id v3 = [v2 defaultCenter];
    [v3 removeObserver:v1];
    swift_unknownObjectRelease(v1);

    uint64_t v4 = *(void *)(v0 + 24);
  }

  else
  {
    uint64_t v4 = 0LL;
  }

  swift_unknownObjectRelease(v4);
  swift_bridgeObjectRelease(*(void *)(v0 + 40));
  swift_bridgeObjectRelease(*(void *)(v0 + 56));

  return swift_deallocClassInstance(v0, 81LL, 7LL);
}

void sub_100261D68(void *a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = sub_100156B68((uint64_t *)&unk_1003FBBE0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = (void *)v1[9];
  v1[9] = (uint64_t)a1;
  id v8 = a1;
  id v9 = [v7 outputDevices];
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = sub_10016083C(0LL, (unint64_t *)&qword_1003F8300, &OBJC_CLASS___MRAVOutputDevice_ptr);
    uint64_t v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v10, v11);
  }

  else
  {
    uint64_t v12 = 0LL;
  }

  id v13 = [v8 outputDevices];
  if (!v13)
  {
    if (!v12) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }

  uint64_t v14 = v13;
  uint64_t v15 = sub_10016083C(0LL, (unint64_t *)&qword_1003F8300, &OBJC_CLASS___MRAVOutputDevice_ptr);
  unint64_t v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v14, v15);

  if (!v12)
  {
    if (!v16) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }

  if (!v16)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    if ((v1[10] & 1) == 0) {
      goto LABEL_15;
    }
LABEL_14:

    return;
  }

  uint64_t v17 = swift_bridgeObjectRetain();
  unsigned __int8 v18 = sub_100275B40(v17, v16);
  swift_bridgeObjectRelease_n(v12, 2LL);
  swift_bridgeObjectRelease();
  if ((v18 & 1) != 0 || (v1[10] & 1) != 0) {
    goto LABEL_14;
  }
LABEL_15:
  uint64_t v19 = sub_100174330();
  sub_1001A8360(v19, (uint64_t)v6, (uint64_t *)&unk_1003FBBE0);
  uint64_t v20 = type metadata accessor for Logger(0LL);
  uint64_t v21 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v6, 1LL, v20) == 1)
  {

    sub_1001603DC((uint64_t)v6, (uint64_t *)&unk_1003FBBE0);
    return;
  }

  uint64_t v22 = (uint64_t)v8;
  uint64_t v23 = (void *)Logger.logObject.getter(v22);
  int v24 = static os_log_type_t.default.getter(v23);
  if (!os_log_type_enabled((os_log_t)v23, (os_log_type_t)v24))
  {

LABEL_41:
    (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v20);
    return;
  }

  os_log_t v59 = (os_log_t)v23;
  int v57 = v24;
  uint64_t v25 = swift_slowAlloc(22LL, -1LL);
  uint64_t v56 = swift_slowAlloc(64LL, -1LL);
  uint64_t v61 = v56;
  *(_DWORD *)uint64_t v25 = 136315394;
  uint64_t v26 = _typeName(_:qualified:)(v3, 0LL);
  uint64_t v60 = sub_10015ADC4(v26, v27, &v61);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61, v25 + 4, v25 + 12);
  swift_bridgeObjectRelease();
  unint64_t v58 = (uint8_t *)v25;
  *(_WORD *)(v25 + 12) = 2080;
  id v28 = [(id)v22 outputDevices];
  if (!v28) {
    goto LABEL_43;
  }
  uint64_t v29 = v28;
  id v52 = (id)v22;
  uint64_t v53 = v21;
  uint64_t v54 = v20;
  uint64_t v30 = sub_10016083C(0LL, (unint64_t *)&qword_1003F8300, &OBJC_CLASS___MRAVOutputDevice_ptr);
  uint64_t v31 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v29, v30);

  id v55 = v7;
  if ((unint64_t)v31 >> 62)
  {
    if (v31 < 0) {
      uint64_t v44 = v31;
    }
    else {
      uint64_t v44 = v31 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
    uint64_t v22 = _CocoaArrayWrapper.endIndex.getter(v44);
    if (v22) {
      goto LABEL_21;
    }
LABEL_39:
    unint64_t v33 = _swiftEmptyArrayStorage;
LABEL_40:
    swift_bridgeObjectRelease_n(v31, 2LL);
    uint64_t v45 = v58;
    uint64_t v46 = Array.description.getter(v33, &type metadata for String);
    unint64_t v48 = v47;
    swift_bridgeObjectRelease();
    uint64_t v60 = sub_10015ADC4(v46, v48, &v61);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61, v45 + 14, v45 + 22);
    id v49 = v52;

    swift_bridgeObjectRelease();
    os_log_t v50 = v59;
    _os_log_impl( (void *)&_mh_execute_header,  v59,  (os_log_type_t)v57,  "[%s] updateWithEndpoint - updated topology: %s",  v45,  0x16u);
    uint64_t v51 = v56;
    swift_arrayDestroy(v56, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v51, -1LL, -1LL);
    swift_slowDealloc(v45, -1LL, -1LL);

    uint64_t v21 = v53;
    uint64_t v20 = v54;
    goto LABEL_41;
  }

  uint64_t v22 = *(void *)((v31 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  swift_bridgeObjectRetain();
  if (!v22) {
    goto LABEL_39;
  }
LABEL_21:
  if (v22 >= 1)
  {
    uint64_t v32 = 0LL;
    unint64_t v33 = _swiftEmptyArrayStorage;
    do
    {
      if ((v31 & 0xC000000000000001LL) != 0) {
        id v34 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v32, v31);
      }
      else {
        id v34 = *(id *)(v31 + 8 * v32 + 32);
      }
      id v35 = v34;
      id v36 = [v35 uid];
      if (v36)
      {
        uint64_t v37 = v36;
        uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
        uint64_t v40 = v39;

        if ((swift_isUniquelyReferenced_nonNull_native(v33) & 1) == 0) {
          unint64_t v33 = sub_1001E1164(0LL, v33[2] + 1LL, 1, v33);
        }
        unint64_t v42 = v33[2];
        unint64_t v41 = v33[3];
        if (v42 >= v41 >> 1) {
          unint64_t v33 = sub_1001E1164((void *)(v41 > 1), v42 + 1, 1, v33);
        }
        v33[2] = v42 + 1;
        uint64_t v43 = &v33[2 * v42];
        v43[4] = v38;
        v43[5] = v40;
      }

      else
      {
      }

      ++v32;
    }

    while (v22 != v32);
    goto LABEL_40;
  }

  __break(1u);
LABEL_43:

  __break(1u);
}

void *sub_1002622C0(uint64_t a1)
{
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = _CocoaArrayWrapper.endIndex.getter(v16))
  {
    uint64_t v3 = _swiftEmptyArrayStorage;
    uint64_t v4 = 4LL;
    while (1)
    {
      id v5 = (a1 & 0xC000000000000001LL) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4 - 4, a1)
         : *(id *)(a1 + 8 * v4);
      uint64_t v6 = v5;
      uint64_t v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1LL)) {
        break;
      }
      id v8 = [v5 uid];
      if (v8)
      {
        id v9 = v8;
        uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
        uint64_t v12 = v11;

        if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0) {
          uint64_t v3 = sub_1001E1164(0LL, v3[2] + 1LL, 1, v3);
        }
        unint64_t v14 = v3[2];
        unint64_t v13 = v3[3];
        if (v14 >= v13 >> 1) {
          uint64_t v3 = sub_1001E1164((void *)(v13 > 1), v14 + 1, 1, v3);
        }
        v3[2] = v14 + 1;
        uint64_t v15 = &v3[2 * v14];
        v15[4] = v10;
        v15[5] = v12;
      }

      else
      {
      }

      ++v4;
      if (v7 == v2) {
        goto LABEL_22;
      }
    }

    __break(1u);
LABEL_17:
    if (a1 < 0) {
      uint64_t v16 = a1;
    }
    else {
      uint64_t v16 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
  }

  uint64_t v3 = _swiftEmptyArrayStorage;
LABEL_22:
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_100262454()
{
  uint64_t v1 = *v0;
  _StringGuts.grow(_:)(67LL);
  v2._countAndFlagsBits = 60LL;
  v2._object = (void *)0xE100000000000000LL;
  String.append(_:)(v2);
  v3._countAndFlagsBits = _typeName(_:qualified:)(v1, 0LL);
  object = v3._object;
  String.append(_:)(v3);
  swift_bridgeObjectRelease(object);
  v5._countAndFlagsBits = 0x746E656469202D20LL;
  v5._object = (void *)0xEF203A7265696669LL;
  String.append(_:)(v5);
  uint64_t v6 = v0[6];
  uint64_t v7 = (void *)v0[7];
  swift_bridgeObjectRetain(v7);
  v8._countAndFlagsBits = v6;
  v8._object = v7;
  String.append(_:)(v8);
  swift_bridgeObjectRelease(v7);
  v9._countAndFlagsBits = 0x3A6574617473202CLL;
  v9._object = (void *)0xE900000000000020LL;
  String.append(_:)(v9);
  unint64_t v10 = 0xEB00000000676E69LL;
  if (*((_BYTE *)v0 + 16) != 1) {
    unint64_t v10 = 0xEA00000000006465LL;
  }
  if (*((_BYTE *)v0 + 16)) {
    uint64_t v11 = 0x7463656E6E6F632ELL;
  }
  else {
    uint64_t v11 = 0x65766F637369642ELL;
  }
  if (*((_BYTE *)v0 + 16)) {
    unint64_t v12 = v10;
  }
  else {
    unint64_t v12 = 0xEB00000000646572LL;
  }
  unint64_t v13 = v12;
  String.append(_:)(*(Swift::String *)&v11);
  swift_bridgeObjectRelease(v12);
  v14._object = (void *)0x8000000100340330LL;
  v14._countAndFlagsBits = 0xD000000000000013LL;
  String.append(_:)(v14);
  uint64_t v15 = v0[4];
  uint64_t v16 = (void *)v0[5];
  swift_bridgeObjectRetain(v16);
  v17._countAndFlagsBits = v15;
  v17._object = v16;
  String.append(_:)(v17);
  swift_bridgeObjectRelease(v16);
  v18._countAndFlagsBits = 0x696F70646E65202CLL;
  v18._object = (void *)0xEC000000203A746ELL;
  String.append(_:)(v18);
  id v19 = (id)v0[8];
  id v20 = [v19 description];
  uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
  uint64_t v23 = v22;

  v24._countAndFlagsBits = v21;
  v24._object = v23;
  String.append(_:)(v24);

  swift_bridgeObjectRelease(v23);
  v25._countAndFlagsBits = 62LL;
  v25._object = (void *)0xE100000000000000LL;
  String.append(_:)(v25);
  return 0LL;
}

Swift::Int sub_100262688()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)(v5, 0LL);
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v3 = *(void *)(v1 + 56);
  swift_bridgeObjectRetain(v3);
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_1002626E4(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 48);
  uint64_t v5 = *(void *)(v3 + 56);
  swift_bridgeObjectRetain(v5);
  String.hash(into:)(a1, v4, v5);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_10026272C(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 48LL);
  uint64_t v3 = *(void *)(*(void *)v1 + 56LL);
  swift_bridgeObjectRetain(v3);
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_100262784()
{
  return sub_100262454();
}

uint64_t sub_1002627A4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t v4 = *(void *)(*a1 + 48);
  uint64_t v5 = *(void *)(v2 + 56);
  uint64_t v6 = *(void *)(v3 + 48);
  uint64_t v7 = *(void *)(v3 + 56);
  if (v4 == v6 && v5 == v7) {
    return 1LL;
  }
  else {
    return _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v6, v7, 0LL);
  }
}

void sub_1002627D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3)
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(a3);
    String.hash(into:)(a1, a2, a3);
    swift_bridgeObjectRelease(a3);
  }

  else
  {
    Hasher._combine(_:)(0);
  }

  Swift::UInt v8 = *(void *)(a4 + 16);
  Hasher._combine(_:)(v8);
  if (v8)
  {
    swift_bridgeObjectRetain(a4);
    Swift::String v9 = (void *)(a4 + 40);
    do
    {
      uint64_t v10 = *(v9 - 1);
      uint64_t v11 = *v9;
      swift_bridgeObjectRetain(*v9);
      String.hash(into:)(a1, v10, v11);
      swift_bridgeObjectRelease(v11);
      v9 += 2;
      --v8;
    }

    while (v8);
    swift_bridgeObjectRelease(a4);
  }

Swift::Int sub_1002628A4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v3 = v0[2];
  Hasher.init(_seed:)(v5, 0LL);
  sub_1002627D0((uint64_t)v5, v1, v2, v3);
  return Hasher._finalize()();
}

void sub_1002628FC(uint64_t a1)
{
}

Swift::Int sub_100262908(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v4 = v1[2];
  Hasher.init(_seed:)(v6, a1);
  sub_1002627D0((uint64_t)v6, v2, v3, v4);
  return Hasher._finalize()();
}

uint64_t sub_10026295C(uint64_t *a1, void *a2)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = (void *)a1[2];
  uint64_t v5 = a2[1];
  uint64_t v6 = (void *)a2[2];
  if (v3)
  {
    if (v5)
    {
      uint64_t v7 = *a1;
      BOOL v8 = v7 == *a2 && v3 == v5;
      if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)(v7, v3, *a2, v5, 0LL) & 1) != 0) {
        return sub_1001AE868(v4, v6);
      }
    }
  }

  else if (!v5)
  {
    return sub_1001AE868(v4, v6);
  }

  return 0LL;
}

void sub_1002629C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = sub_100156B68(&qword_1003F9518);
  __chkstk_darwin(v7);
  uint64_t v137 = (uint64_t)&v130 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v136 = type metadata accessor for HostedRoutingSourceSession(0LL);
  uint64_t v138 = *(void *)(v136 - 8);
  uint64_t v9 = __chkstk_darwin(v136);
  uint64_t v11 = (uint64_t *)((char *)&v130 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin(v9);
  unint64_t v13 = (char *)&v130 - v12;
  uint64_t v14 = type metadata accessor for Logger(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  Swift::String v17 = (char *)&v130 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  Swift::String v18 = (void *)((char *)v3 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionIdentifier);
  swift_beginAccess( (char *)v3 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionIdentifier,  v143,  0LL,  0LL);
  uint64_t v19 = v18[1];
  BOOL v20 = *v18 == a1 && v19 == a2;
  if (v20 || (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, *v18, v19, 0LL) & 1) != 0) {
    return;
  }
  uint64_t v21 = sub_1001741A8();
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v21, v14);
  uint64_t v22 = swift_retain_n(v3, 2LL);
  uint64_t v23 = (os_log_s *)Logger.logObject.getter(v22);
  os_log_type_t v24 = static os_log_type_t.default.getter(v23);
  int v25 = v24;
  BOOL v26 = os_log_type_enabled(v23, v24);
  v132 = v13;
  if (v26)
  {
    uint64_t v27 = swift_slowAlloc(22LL, -1LL);
    LODWORD(v135) = v25;
    uint64_t v28 = v27;
    uint64_t v134 = swift_slowAlloc(64LL, -1LL);
    uint64_t v141 = v134;
    *(_DWORD *)uint64_t v28 = 136315394;
    uint64_t v133 = v6;
    uint64_t v29 = _typeName(_:qualified:)(v6, 0LL);
    uint64_t v139 = sub_10015ADC4(v29, v30, &v141);
    os_log_t v131 = v23;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v139, &v140, v28 + 4, v28 + 12);
    swift_bridgeObjectRelease();
    *(_WORD *)(v28 + 12) = 2080;
    v130 = (const char *)(v28 + 14);
    uint64_t v31 = *v18;
    unint64_t v32 = v18[1];
    swift_bridgeObjectRetain();
    uint64_t v139 = sub_10015ADC4(v31, v32, &v141);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v139, &v140, v130, v28 + 22);
    swift_release_n(v3, 2LL);
    uint64_t v6 = v133;
    swift_bridgeObjectRelease();
    os_log_t v33 = v131;
    _os_log_impl( (void *)&_mh_execute_header,  v131,  (os_log_type_t)v135,  "[%s] setActiveSessionIdentifier - value: %s",  (uint8_t *)v28,  0x16u);
    uint64_t v34 = v134;
    swift_arrayDestroy(v134, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v34, -1LL, -1LL);
    swift_slowDealloc(v28, -1LL, -1LL);
  }

  else
  {

    swift_release_n(v3, 2LL);
  }

  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  id v35 = (char *)v3 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_delegate;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong((char *)v3 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_delegate);
  if (Strong)
  {
    uint64_t v38 = Strong;
    uint64_t v39 = *((void *)v35 + 1);
    uint64_t ObjectType = swift_getObjectType(Strong, v37);
    uint64_t v41 = *v18;
    uint64_t v42 = v18[1];
    uint64_t v43 = *(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 24);
    swift_bridgeObjectRetain();
    v43(v3, v41, v42, ObjectType, v39);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease(v38);
  }

  uint64_t v45 = *v18;
  uint64_t v44 = v18[1];
  swift_bridgeObjectRetain();
  uint64_t v46 = sub_10024B258();
  uint64_t v47 = *((void *)v46 + 1);
  if (v45 == *(void *)v46 && v44 == v47)
  {
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }

  char v48 = _stringCompareWithSmolCheck(_:_:expecting:)(v45, v44, *(void *)v46, v47, 0LL);
  uint64_t v49 = swift_bridgeObjectRelease();
  if ((v48 & 1) != 0)
  {
LABEL_15:
    id v50 = [(id)objc_opt_self(MRDMediaRemoteServer) server];
    id v51 = [v50 routingServer];

    uint64_t v52 = (uint64_t)[v51 systemEndpointController];
    if (v52)
    {
      uint64_t v141 = 0LL;
      unint64_t v142 = 0xE000000000000000LL;
      _StringGuts.grow(_:)(26LL);
      swift_bridgeObjectRelease();
      uint64_t v141 = 91LL;
      unint64_t v142 = 0xE100000000000000LL;
      v53._countAndFlagsBits = _typeName(_:qualified:)(v6, 0LL);
      String.append(_:)(v53);
      swift_bridgeObjectRelease();
      v54._countAndFlagsBits = 0xD000000000000017LL;
      v54._object = (void *)0x80000001003407D0LL;
      String.append(_:)(v54);
      id v55 = objc_allocWithZone(&OBJC_CLASS___MRUpdateActiveSystemEndpointRequest);
      NSString v56 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v57 = [v55 initWithOutputDeviceUID:0 type:0 reason:v56];

      [(id)v52 updateSystemEndpointForRequest:v57];
      return;
    }

    goto LABEL_102;
  }

  v130 = v46;
  uint64_t v133 = v6;
  unint64_t v58 = (os_log_s *)(*(uint64_t (**)(uint64_t))(*v3 + 328LL))(v49);
  uint64_t v59 = *((void *)v58 + 2);
  if (v59)
  {
    uint64_t v60 = (uint64_t)v58 + ((*(unsigned __int8 *)(v138 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v138 + 80));
    uint64_t v61 = *(uint64_t (**)(uint64_t))(*v3 + 544LL);
    uint64_t v134 = *(void *)(v138 + 72);
    v135 = v61;
    os_log_t v131 = v58;
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v62 = sub_1001A80F8(v60, (uint64_t)v11, type metadata accessor for HostedRoutingSourceSession);
      uint64_t v64 = *v11;
      uint64_t v63 = v11[1];
      uint64_t v65 = v135(v62);
      if (v64 == v65 && v63 == v66) {
        break;
      }
      char v68 = _stringCompareWithSmolCheck(_:_:expecting:)(v64, v63, v65, v66, 0LL);
      swift_bridgeObjectRelease();
      if ((v68 & 1) != 0) {
        goto LABEL_29;
      }
      sub_1001A813C((uint64_t)v11, type metadata accessor for HostedRoutingSourceSession);
      v60 += v134;
      if (!--v59)
      {
        swift_bridgeObjectRelease();
        goto LABEL_27;
      }
    }

    swift_bridgeObjectRelease();
LABEL_29:
    uint64_t v70 = (uint64_t)v132;
    uint64_t v71 = v136;
    swift_bridgeObjectRelease();
    uint64_t v52 = v137;
    sub_1001A81D4((uint64_t)v11, v137, type metadata accessor for HostedRoutingSourceSession);
    uint64_t v69 = 0LL;
  }

  else
  {
LABEL_27:
    uint64_t v69 = 1LL;
    uint64_t v70 = (uint64_t)v132;
    uint64_t v71 = v136;
    uint64_t v52 = v137;
  }

  uint64_t v72 = v138;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v138 + 56))(v52, v69, 1LL, v71);
  swift_bridgeObjectRelease();
  sub_1001A81D4(v52, v70, type metadata accessor for HostedRoutingSourceSession);
  uint64_t v73 = *(void *)(v70 + 24);
  if (!v73)
  {
LABEL_104:
    __break(1u);
    goto LABEL_105;
  }

  uint64_t v74 = *(void *)(v70 + 16);
  uint64_t v75 = (void *)((char *)v3 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_endpoints);
  swift_beginAccess( (char *)v3 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_endpoints,  &v141,  0LL,  0LL);
  uint64_t v76 = *v75;
  if (!*(void *)(v76 + 16))
  {
LABEL_41:
    sub_1001A813C(v70, type metadata accessor for HostedRoutingSourceSession);
    return;
  }

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v77 = sub_10015CAD4(v74, v73);
  if ((v78 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_41;
  }

  uint64_t v79 = *(void *)(*(void *)(v76 + 56) + 8 * v77);
  swift_retain(v79);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_BYTE *)(v79 + 16) != 2)
  {
    uint64_t v92 = v70;
LABEL_68:
    sub_1001A813C(v92, type metadata accessor for HostedRoutingSourceSession);
    swift_release(v79);
    return;
  }

  int v80 = (void *)objc_opt_self(&OBJC_CLASS___MRDMediaRemoteServer);
  id v81 = [v80 server];
  id v82 = [v81 routingServer];

  id v83 = [v82 systemEndpointController];
  if (!v83)
  {
LABEL_105:
    __break(1u);
    goto LABEL_106;
  }

  id v84 = [v83 activeOutputDeviceUID:0];

  if (!v84) {
    goto LABEL_45;
  }
  uint64_t v85 = static String._unconditionallyBridgeFromObjectiveC(_:)(v84);
  uint64_t v87 = v86;

  id v88 = [(id)objc_opt_self(MRAVOutputDevice) localDeviceUID];
  uint64_t v89 = static String._unconditionallyBridgeFromObjectiveC(_:)(v88);
  uint64_t v91 = v90;

  if (v85 == v89 && v87 == v91)
  {
    swift_bridgeObjectRelease();
LABEL_44:
    swift_bridgeObjectRelease();
LABEL_45:
    uint64_t v94 = v18[1];
    uint64_t v95 = *((void *)v130 + 1);
    if ((*v18 != *(void *)v130 || v94 != v95)
      && (_stringCompareWithSmolCheck(_:_:expecting:)(*v18, v94, *(void *)v130, v95, 0LL) & 1) == 0)
    {
      id v96 = [v80 server];
      id v97 = [v96 routingServer];

      id v98 = [v97 systemEndpointController];
      if (!v98)
      {
LABEL_106:
        __break(1u);
        goto LABEL_107;
      }

      uint64_t v99 = v133;
      if ((*(_BYTE *)(v79 + 80) & 1) != 0) {
        id v100 = [*(id *)(v79 + 64) resolvedOutputDevices];
      }
      else {
        id v100 = [*(id *)(v79 + 72) outputDevices];
      }
      id v102 = v100;
      uint64_t v103 = (uint64_t)v132;
      if (v102)
      {
        uint64_t v104 = sub_10016083C(0LL, (unint64_t *)&qword_1003F8300, &OBJC_CLASS___MRAVOutputDevice_ptr);
        uint64_t v52 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v102, v104);
      }

      else
      {
        uint64_t v52 = (uint64_t)_swiftEmptyArrayStorage;
      }

      if ((unint64_t)v52 >> 62)
      {
        if (v52 < 0) {
          uint64_t v120 = v52;
        }
        else {
          uint64_t v120 = v52 & 0xFFFFFFFFFFFFFF8LL;
        }
        swift_bridgeObjectRetain();
        uint64_t v121 = _CocoaArrayWrapper.endIndex.getter(v120);
        swift_bridgeObjectRelease();
        if (!v121) {
          goto LABEL_94;
        }
        goto LABEL_59;
      }

      if (*(void *)((v52 & 0xFFFFFFFFFFFFF8LL) + 0x10))
      {
LABEL_59:
        if ((v52 & 0xC000000000000001LL) != 0) {
          goto LABEL_100;
        }
        if (*(void *)((v52 & 0xFFFFFFFFFFFFF8LL) + 0x10))
        {
LABEL_80:
          id v115 = *(id *)(v52 + 32);
          goto LABEL_81;
        }

        __break(1u);
        goto LABEL_90;
      }

LABEL_100:
  id v115 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v52);
LABEL_81:
  v116 = v115;
  swift_bridgeObjectRelease();
  id v117 = [v116 uid];

  if (!v117)
  {
LABEL_95:
    uint64_t v119 = 0LL;
    goto LABEL_96;
  }

  static String._unconditionallyBridgeFromObjectiveC(_:)(v117);
  uint64_t v119 = v118;

LABEL_96:
  uint64_t v139 = 0LL;
  unint64_t v140 = 0xE000000000000000LL;
  _StringGuts.grow(_:)(31LL);
  swift_bridgeObjectRelease();
  uint64_t v139 = 91LL;
  unint64_t v140 = 0xE100000000000000LL;
  v124._countAndFlagsBits = _typeName(_:qualified:)(v99, 0LL);
  String.append(_:)(v124);
  swift_bridgeObjectRelease();
  v125._object = (void *)0x80000001003407B0LL;
  v125._countAndFlagsBits = 0xD00000000000001CLL;
  String.append(_:)(v125);
  if (v119)
  {
    NSString v126 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }

  else
  {
    NSString v126 = 0LL;
  }

  id v127 = objc_allocWithZone(&OBJC_CLASS___MRUpdateActiveSystemEndpointRequest);
  NSString v128 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v129 = [v127 initWithOutputDeviceUID:v126 type:0 reason:v128];

  [v98 updateSystemEndpointForRequest:v129];
  swift_release(v79);

  sub_1001A813C(v103, type metadata accessor for HostedRoutingSourceSession);
}

uint64_t sub_100263768(uint64_t (*a1)(id *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  swift_bridgeObjectRetain(a3);
  for (; v6; uint64_t v6 = _CocoaArrayWrapper.endIndex.getter(v15))
  {
    uint64_t v7 = 4LL;
    while (1)
    {
      id v8 = (a3 & 0xC000000000000001LL) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7 - 4, a3)
         : *(id *)(a3 + 8 * v7);
      uint64_t v9 = v8;
      uint64_t v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1LL)) {
        break;
      }
      id v17 = v8;
      char v11 = a1(&v17);
      if (v4)
      {
        swift_bridgeObjectRelease(a3);

        return v13 & 1;
      }

      char v12 = v11;

      if ((v12 & 1) != 0)
      {
        swift_bridgeObjectRelease(a3);
        char v13 = 1;
        return v13 & 1;
      }

      ++v7;
      if (v10 == v6) {
        goto LABEL_11;
      }
    }

    __break(1u);
LABEL_16:
    if (a3 < 0) {
      uint64_t v15 = a3;
    }
    else {
      uint64_t v15 = a3 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a3);
  }

uint64_t sub_100263898()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionIdentifier);
  swift_beginAccess( v0 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionIdentifier,  v4,  0LL,  0LL);
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain(v1[1]);
  return v2;
}

uint64_t sub_1002638EC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionIdentifier);
  swift_beginAccess( v2 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionIdentifier,  v9,  1LL,  0LL);
  uint64_t v6 = *v5;
  uint64_t v7 = v5[1];
  *uint64_t v5 = a1;
  v5[1] = a2;
  sub_1002629C4(v6, v7);
  return swift_bridgeObjectRelease();
}

void (*sub_10026395C(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionIdentifier;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = (void *)(v1 + v4);
  swift_beginAccess(v1 + v4, v3, 1LL, 0LL);
  uint64_t v6 = v5[1];
  v3[3] = *v5;
  v3[4] = v6;
  swift_bridgeObjectRetain();
  return sub_1002639D0;
}

void sub_1002639D0(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 24LL);
  uint64_t v5 = *(void *)(*(void *)a1 + 40LL);
  uint64_t v4 = *(void *)(*(void *)a1 + 48LL);
  uint64_t v6 = *(void *)(*(void *)a1 + 32LL);
  uint64_t v7 = (uint64_t *)(v5 + v4);
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  *uint64_t v7 = v3;
  v7[1] = v6;
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1002629C4(v9, v8);
    swift_bridgeObjectRelease();
  }

  else
  {
    sub_1002629C4(v9, v8);
  }

  swift_bridgeObjectRelease();
  free(v2);
}

os_log_s *sub_100263A50(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v36 = *v3;
  uint64_t v8 = type metadata accessor for Logger(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t result = (os_log_s *)__chkstk_darwin(v8);
  char v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  char v13 = (void *)((char *)v4 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements);
  uint64_t v14 = *(void **)((char *)v4
                   + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements
                   + 16);
  if (!a3)
  {
    if (!v14) {
      return result;
    }
    goto LABEL_20;
  }

  if (v14)
  {
    uint64_t v37 = v9;
    uint64_t v38 = v8;
    uint64_t v16 = *v13;
    uint64_t v15 = v13[1];
    if (a2)
    {
      if (!v15)
      {
        sub_10028E974(a1, a2, (uint64_t)a3);
        sub_10028E974(a1, a2, (uint64_t)a3);
        sub_10028E974(v16, 0LL, (uint64_t)v14);
        goto LABEL_19;
      }

      BOOL v17 = v16 == a1 && v15 == a2;
      if (!v17 && (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, *v13, v13[1], 0LL) & 1) == 0)
      {
        sub_10028E974(a1, a2, (uint64_t)a3);
        uint64_t v18 = a1;
        uint64_t v19 = a2;
LABEL_15:
        sub_10028E974(v18, v19, (uint64_t)a3);
        sub_10028E974(v16, v15, (uint64_t)v14);
        swift_bridgeObjectRelease();
LABEL_19:
        swift_bridgeObjectRelease();
        sub_10028DA70(a1, a2, (uint64_t)a3);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v9 = v37;
        uint64_t v8 = v38;
        goto LABEL_20;
      }
    }

    else if (v15)
    {
      sub_10028E974(a1, 0LL, (uint64_t)a3);
      uint64_t v18 = a1;
      uint64_t v19 = 0LL;
      goto LABEL_15;
    }

    char v20 = sub_1001AE868(a3, v14);
    sub_10028E974(a1, a2, (uint64_t)a3);
    sub_10028E974(a1, a2, (uint64_t)a3);
    sub_10028E974(v16, v15, (uint64_t)v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10028DA70(a1, a2, (uint64_t)a3);
    swift_bridgeObjectRelease();
    uint64_t result = (os_log_s *)swift_bridgeObjectRelease();
    uint64_t v9 = v37;
    uint64_t v8 = v38;
    if ((v20 & 1) != 0) {
      return result;
    }
  }

uint64_t sub_100263EC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v11 = swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  sub_100263F30(a1, a2, a3, a4, a5);
  return v11;
}

void sub_100263F30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v6 = (uint64_t)v5;
  uint64_t v100 = a4;
  uint64_t v101 = a3;
  uint64_t v103 = a2;
  uint64_t v9 = sub_100156B68(&qword_1003F8210);
  __chkstk_darwin(v9);
  uint64_t v91 = (char *)&v87 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v92 = type metadata accessor for NSNotificationCenter.Publisher(0LL);
  uint64_t v90 = *(void *)(v92 - 8);
  __chkstk_darwin(v92);
  uint64_t v89 = (char *)&v87 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_100156B68((uint64_t *)&unk_1003FBED0);
  uint64_t v94 = *(void *)(v12 - 8);
  uint64_t v95 = v12;
  __chkstk_darwin(v12);
  char v93 = (char *)&v87 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for RoutingSessionConfiguration.ItemType(0LL);
  uint64_t v98 = *(void *)(v14 - 8);
  uint64_t v99 = v14;
  uint64_t v15 = __chkstk_darwin(v14);
  id v97 = (char *)&v87 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v87 - v17;
  uint64_t v19 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (uint64_t *)((char *)&v87 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  v5[2] = &_swiftEmptySetSingleton;
  v5[3] = &_swiftEmptySetSingleton;
  uint64_t v23 = (char *)v5 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_routingMode;
  uint64_t v24 = enum case for RoutingMode.disabled(_:);
  uint64_t v25 = type metadata accessor for RoutingMode(0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104LL))(v23, v24, v25);
  *(void *)((char *)v5 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_sessions) = _swiftEmptyArrayStorage;
  *(void *)((char *)v5 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_internalSessionObservers) = &_swiftEmptyDictionarySingleton;
  uint64_t v26 = (char *)v5 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_delegate;
  *((void *)v26 + 1) = 0LL;
  swift_unknownObjectWeakInit(v26, 0LL);
  *(void *)((char *)v5
            + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource____lazy_storage___discoverySession) = 0LL;
  *(void *)((char *)v5 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_itemTypes) = &_swiftEmptySetSingleton;
  *(void *)((char *)v5 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_itemDataSources) = &_swiftEmptyDictionarySingleton;
  *(void *)((char *)v5 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_endpoints) = &_swiftEmptyDictionarySingleton;
  *(void *)((char *)v5
            + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_failedEndpointReconnectIntervals) = &_swiftEmptyDictionarySingleton;
  *(void *)((char *)v5 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeEndpointObserver) = 0LL;
  uint64_t v27 = (void *)((char *)v5 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements);
  v27[1] = 0LL;
  v27[2] = 0LL;
  *uint64_t v27 = 0LL;
  *(void *)((char *)v5 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_pendingInteractions) = &_swiftEmptyDictionarySingleton;
  *uint64_t v22 = a5;
  (*(void (**)(void *, void, uint64_t))(v20 + 104))(v22, enum case for DispatchPredicate.onQueue(_:), v19);
  id v28 = a5;
  LOBYTE(a5) = _dispatchPreconditionTest(_:)(v22);
  (*(void (**)(void *, uint64_t))(v20 + 8))(v22, v19);
  if ((a5 & 1) == 0)
  {
    __break(1u);
    goto LABEL_17;
  }

  *(void *)((char *)v5 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_timeline) = a1;
  uint64_t v102 = a1;
  swift_retain(a1);
  unint64_t v29 = sub_10024B258();
  uint64_t v30 = *((void *)v29 + 1);
  uint64_t v31 = (void *)((char *)v5 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionIdentifier);
  void *v31 = *(void *)v29;
  v31[1] = v30;
  v5[4] = v28;
  id v88 = v5 + 4;
  uint64_t v32 = (void *)objc_opt_self(&OBJC_CLASS___MRUserSettings);
  id v96 = v28;
  swift_bridgeObjectRetain();
  id v33 = [v32 currentSettings];
  if (!v33)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }

  unint64_t v34 = v33;
  unsigned __int8 v35 = [v33 supportSystemEndpoints];

  *((_BYTE *)v5 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_supportActiveSession) = v35;
  uint64_t v36 = v103;
  *(void *)((char *)v5 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_identifierStore) = v103;
  uint64_t v37 = enum case for RoutingSessionConfiguration.ItemType.standard(_:);
  uint64_t v39 = v98;
  uint64_t v38 = v99;
  uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t))(v98 + 104);
  v40(v18, enum case for RoutingSessionConfiguration.ItemType.standard(_:), v99);
  type metadata accessor for RoutingItemDataSource(0LL);
  uint64_t v41 = v97;
  v40(v97, v37, v38);
  uint64_t v42 = OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_timeline;
  uint64_t v43 = *(void *)(v6 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_timeline);
  swift_retain(v36);
  swift_retain(v43);
  swift_retain(v6);
  id v44 = sub_100175D44();
  uint64_t v45 = sub_100175D5C(v41, v43, v6, (uint64_t)&off_1003AB878, v44);
  uint64_t v46 = (void *)(v6 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_itemDataSources);
  swift_beginAccess( v6 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_itemDataSources,  v105,  33LL,  0LL);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v46);
  id v104 = (id)*v46;
  *uint64_t v46 = 0x8000000000000000LL;
  sub_10028D744(v45, (uint64_t)v18, isUniquelyReferenced_nonNull_native);
  *uint64_t v46 = v104;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v18, v38);
  swift_endAccess(v105);
  uint64_t v48 = *(void *)(v6 + v42);
  uint64_t v49 = *(void (**)(uint64_t, _UNKNOWN **))(*(void *)v48 + 200LL);
  swift_retain(v6);
  swift_retain(v48);
  v49(v6, &off_1003AB868);
  swift_release(v48);
  swift_release(v6);
  uint64_t v50 = v6 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_delegate;
  uint64_t v51 = v101;
  *(void *)(v50 + 8) = v100;
  swift_unknownObjectWeakAssign(v50, v51);
  if (*(_BYTE *)(v6 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_supportActiveSession) != 1)
  {
    swift_release(v102);
    swift_release(v36);
    swift_unknownObjectRelease(v51);

    return;
  }

  id v52 = [(id)objc_opt_self(MRDMediaRemoteServer) server];
  id v53 = [v52 routingServer];

  id v54 = [v53 systemEndpointController];
  uint64_t v55 = v102;
  if (!v54) {
    goto LABEL_18;
  }
  id v56 = [v54 activeOutputDeviceUID:0];

  if (v56)
  {
    uint64_t v57 = static String._unconditionallyBridgeFromObjectiveC(_:)(v56);
    uint64_t v59 = v58;

    id v60 = [(id)objc_opt_self(MRAVOutputDevice) localDeviceUID];
    uint64_t v61 = static String._unconditionallyBridgeFromObjectiveC(_:)(v60);
    uint64_t v63 = v62;

    if (v57 == v61 && v59 == v63)
    {
      swift_bridgeObjectRelease_n(v59, 2LL);
    }

    else
    {
      char v64 = _stringCompareWithSmolCheck(_:_:expecting:)(v57, v59, v61, v63, 0LL);
      swift_bridgeObjectRelease();
      if ((v64 & 1) != 0)
      {
        swift_bridgeObjectRelease();
      }

      else
      {
        uint64_t v65 = sub_100156B68(&qword_1003F8620);
        uint64_t v66 = swift_allocObject(v65, 48LL, 7LL);
        *(_OWORD *)(v66 + 16) = xmmword_10034BE40;
        *(void *)(v66 + 32) = v57;
        *(void *)(v66 + 40) = v59;
        uint64_t v67 = (void *)(v6 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements);
        uint64_t v69 = *(void *)(v6 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements);
        uint64_t v68 = *(void *)(v6 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements + 8);
        uint64_t v70 = *(void *)(v6 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements + 16);
        *uint64_t v67 = 0LL;
        v67[1] = 0LL;
        v67[2] = v66;
        sub_10028DA70(v69, v68, v70);
      }
    }

    uint64_t v55 = v102;
  }

  id v71 = [(id)objc_opt_self(NSNotificationCenter) defaultCenter];
  if (kMRMediaRemoteActiveSystemEndpointDidChangeNotification)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(kMRMediaRemoteActiveSystemEndpointDidChangeNotification);
    NSString v72 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v73 = v89;
    NSNotificationCenter.publisher(for:object:)(v72, 0LL);

    swift_beginAccess(v88, v105, 0LL, 0LL);
    id v104 = *(id *)(v6 + 32);
    id v74 = v104;
    uint64_t v75 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0LL);
    uint64_t v76 = (uint64_t)v91;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v75 - 8) + 56LL))(v91, 1LL, 1LL, v75);
    uint64_t v77 = sub_10016083C(0LL, (unint64_t *)&qword_1003F9F50, &OBJC_CLASS___OS_dispatch_queue_ptr);
    uint64_t v78 = sub_100156FEC( (unint64_t *)&unk_1003FBEE0,  (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher,  (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Publisher);
    unint64_t v79 = sub_100184978();
    id v80 = v74;
    uint64_t v82 = v92;
    id v81 = v93;
    Publisher.receive<A>(on:options:)(&v104, v76, v92, v77, v78, v79);
    sub_1001603DC(v76, &qword_1003F8210);

    (*(void (**)(char *, uint64_t))(v90 + 8))(v73, v82);
    uint64_t v83 = sub_1001604E8( (unint64_t *)&qword_1003FBEF0,  (uint64_t *)&unk_1003FBED0,  (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    swift_retain(v6);
    uint64_t v84 = v95;
    uint64_t v85 = Publisher<>.sink(receiveValue:)(sub_10028D8A0, v6, v95, v83);
    swift_release(v55);
    swift_release(v103);
    swift_unknownObjectRelease(v51);

    swift_release(v6);
    (*(void (**)(char *, uint64_t))(v94 + 8))(v81, v84);
    uint64_t v86 = *(void *)(v6 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeEndpointObserver);
    *(void *)(v6 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeEndpointObserver) = v85;
    swift_unknownObjectRelease(v86);
    return;
  }

uint64_t sub_1002647B4()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_timeline;
  (*(void (**)(uint64_t, _UNKNOWN **))(**(void **)(v0
                                                             + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_timeline)
                                               + 208LL))( v0,  &off_1003AB868);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v3 = v0 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_routingMode;
  uint64_t v4 = type metadata accessor for RoutingMode(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8LL))(v3, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100183478(v1 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_delegate);
  objc_release(*(id *)(v1
                     + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource____lazy_storage___discoverySession));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release(*(void *)(v1 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_identifierStore));
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease(*(void *)(v1
                                       + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeEndpointObserver));
  sub_10028DA70( *(void *)(v1 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements),  *(void *)(v1 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements + 8),  *(void *)(v1 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements + 16));
  swift_bridgeObjectRelease();
  swift_release(*(void *)(v1 + v2));
  return v1;
}

uint64_t sub_100264924()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_100264948(uint64_t a1)
{
  uint64_t v163 = *v1;
  uint64_t v166 = type metadata accessor for Logger(0LL);
  uint64_t v165 = *(void *)(v166 - 8);
  uint64_t v3 = __chkstk_darwin(v166);
  v159 = (char *)&v158 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v3);
  v167 = (char *)&v158 - v5;
  uint64_t v175 = type metadata accessor for RoutingMode(0LL);
  uint64_t v170 = *(void *)(v175 - 8);
  uint64_t v6 = __chkstk_darwin(v175);
  v169 = (char *)&v158 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  v174 = (char *)&v158 - v8;
  uint64_t v9 = type metadata accessor for RoutingSessionConfiguration.ItemType(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  v187 = (char *)&v158 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = __chkstk_darwin(v11);
  v177 = (char *)&v158 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  v181 = (char *)&v158 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  v171 = (char *)&v158 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v158 - v20;
  uint64_t v22 = __chkstk_darwin(v19);
  uint64_t v24 = (char *)&v158 - v23;
  __chkstk_darwin(v22);
  v184 = (char *)&v158 - v25;
  uint64_t v160 = OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_itemTypes;
  *(void *)((char *)v1 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_itemTypes) = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v186 = v1;
  uint64_t v26 = (char *)v1 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_itemDataSources;
  swift_beginAccess(v26, v196, 0LL, 0LL);
  v182 = (uint64_t *)v26;
  uint64_t v27 = *(void *)v26;
  uint64_t v28 = *(void *)(*(void *)v26 + 64LL);
  uint64_t v176 = *(void *)v26 + 64LL;
  uint64_t v29 = 1LL << *(_BYTE *)(v27 + 32);
  if (v29 < 64) {
    uint64_t v30 = ~(-1LL << v29);
  }
  else {
    uint64_t v30 = -1LL;
  }
  unint64_t v31 = v30 & v28;
  uint64_t v185 = OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_timeline;
  int64_t v178 = (unint64_t)(v29 + 63) >> 6;
  uint64_t v190 = a1 + 56;
  uint64_t v191 = a1;
  int v32 = enum case for RoutingSessionConfiguration.ItemType.standard(_:);
  unsigned int v173 = enum case for RoutingMode.disabled(_:);
  uint64_t v183 = v27;
  __n128 v33 = swift_bridgeObjectRetain_n(v27, 2LL);
  int64_t v34 = 0LL;
  v33.n128_u64[0] = 136315138LL;
  __n128 v162 = v33;
  v161 = (char *)&type metadata for Any + 8;
  LODWORD(v180) = v32;
  while (v31)
  {
    uint64_t v188 = (v31 - 1) & v31;
    int64_t v189 = v34;
    unint64_t v36 = __clz(__rbit64(v31)) | (v34 << 6);
LABEL_28:
    uint64_t v41 = *(void *)(v10 + 72);
    uint64_t v42 = *(void (**)(char *, unint64_t, uint64_t))(v10 + 16);
    uint64_t v43 = v184;
    v42(v184, *(void *)(v183 + 48) + v41 * v36, v9);
    uint64_t v44 = (*(uint64_t (**)(char *, char *, uint64_t))(v10 + 32))(v24, v43, v9);
    if (*(void *)(v191 + 16))
    {
      uint64_t v45 = v191;
      uint64_t v46 = *(void *)(v191 + 40);
      uint64_t v47 = sub_100156FEC( &qword_1003F94A0,  (uint64_t (*)(uint64_t))&type metadata accessor for RoutingSessionConfiguration.ItemType,  (uint64_t)&protocol conformance descriptor for RoutingSessionConfiguration.ItemType);
      uint64_t v44 = dispatch thunk of Hashable._rawHashValue(seed:)(v46, v9, v47);
      uint64_t v48 = -1LL << *(_BYTE *)(v45 + 32);
      unint64_t v49 = v44 & ~v48;
      if (((*(void *)(v190 + ((v49 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v49) & 1) != 0)
      {
        uint64_t v50 = ~v48;
        do
        {
          v42(v21, *(void *)(v191 + 48) + v49 * v41, v9);
          uint64_t v51 = sub_100156FEC( &qword_1003F94A8,  (uint64_t (*)(uint64_t))&type metadata accessor for RoutingSessionConfiguration.ItemType,  (uint64_t)&protocol conformance descriptor for RoutingSessionConfiguration.ItemType);
          char v52 = dispatch thunk of static Equatable.== infix(_:_:)(v21, v24, v9, v51);
          unsigned __int8 v35 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
          uint64_t v44 = v35(v21, v9);
          if ((v52 & 1) != 0) {
            goto LABEL_6;
          }
          unint64_t v49 = (v49 + 1) & v50;
        }

        while (((*(void *)(v190 + ((v49 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v49) & 1) != 0);
      }
    }

    uint64_t v53 = *(void *)((char *)v186 + v185);
    uint64_t v54 = (*(uint64_t (**)(uint64_t))(*(void *)v53 + 112LL))(v44);
    uint64_t v55 = v180;
    if ((unint64_t)v54 >> 62)
    {
      if (v54 >= 0) {
        v54 &= 0xFFFFFFFFFFFFFF8uLL;
      }
      uint64_t v56 = _CocoaArrayWrapper.endIndex.getter(v54);
    }

    else
    {
      uint64_t v56 = *(void *)((v54 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    }

    swift_bridgeObjectRelease();
    if (v56)
    {
      unsigned __int8 v35 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
LABEL_6:
      v35(v24, v9);
      goto LABEL_7;
    }

    uint64_t v57 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 104);
    v57(v21, v55, v9);
    char v58 = static RoutingSessionConfiguration.ItemType.== infix(_:_:)(v24, v21);
    v179 = *(void (**)(char *, uint64_t))(v10 + 8);
    v179(v21, v9);
    if ((v58 & 1) != 0)
    {
      uint64_t v59 = (uint64_t)v171;
      v57(v171, v55, v9);
      uint64_t v60 = *v182;
      if (!*(void *)(*v182 + 16)) {
        goto LABEL_112;
      }
      swift_bridgeObjectRetain();
      unint64_t v61 = sub_10028C468(v59);
      if ((v62 & 1) == 0) {
        goto LABEL_115;
      }
      uint64_t v63 = *(void *)(*(void *)(v60 + 56) + 8 * v61);
      swift_retain(v63);
      swift_bridgeObjectRelease();
      uint64_t v64 = ((uint64_t (*)(uint64_t, uint64_t))v179)(v59, v9);
      uint64_t v65 = v174;
      (*(void (**)(uint64_t))(*(void *)v63 + 200LL))(v64);
      uint64_t v66 = v170;
      uint64_t v67 = v169;
      uint64_t v68 = v175;
      v172 = *(void (**)(char *, void, uint64_t))(v170 + 104);
      v172(v169, v173, v175);
      uint64_t v69 = sub_100156FEC( &qword_1003F8D38,  (uint64_t (*)(uint64_t))&type metadata accessor for RoutingMode,  (uint64_t)&protocol conformance descriptor for RoutingMode);
      char v70 = dispatch thunk of static Equatable.== infix(_:_:)(v65, v67, v68, v69);
      id v71 = *(void (**)(char *, uint64_t))(v66 + 8);
      v71(v67, v68);
      v71(v65, v68);
      if ((v70 & 1) != 0)
      {
        v179(v24, v9);
        swift_release(v63);
      }

      else
      {
        uint64_t v168 = v63;
        uint64_t v82 = sub_1001741A8();
        uint64_t v83 = v165;
        uint64_t v84 = v167;
        uint64_t v85 = v166;
        uint64_t v86 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v165 + 16))(v167, v82, v166);
        uint64_t v87 = (os_log_s *)Logger.logObject.getter(v86);
        os_log_type_t v88 = static os_log_type_t.default.getter(v87);
        if (os_log_type_enabled(v87, v88))
        {
          uint64_t v89 = swift_slowAlloc(12LL, -1LL);
          uint64_t v164 = swift_slowAlloc(32LL, -1LL);
          uint64_t v195 = v164;
          *(_DWORD *)uint64_t v89 = v162.n128_u32[0];
          uint64_t v90 = _typeName(_:qualified:)(v163, 0LL);
          *(void *)(v89 + 4) = sub_10015ADC4(v90, v91, &v195);
          swift_bridgeObjectRelease();
          _os_log_impl( (void *)&_mh_execute_header,  v87,  v88,  "[%s] updateWithItemTypes - disable routing mode for .standard",  (uint8_t *)v89,  0xCu);
          uint64_t v92 = v164;
          swift_arrayDestroy(v164, 1LL, v161);
          swift_slowDealloc(v92, -1LL, -1LL);
          swift_slowDealloc(v89, -1LL, -1LL);

          (*(void (**)(char *, uint64_t))(v83 + 8))(v167, v85);
        }

        else
        {

          (*(void (**)(char *, uint64_t))(v83 + 8))(v84, v85);
        }

        char v93 = v179;
        uint64_t v94 = v168;
        uint64_t v95 = v174;
        v172(v174, v173, v175);
        (*(void (**)(char *))(*(void *)v94 + 208LL))(v95);
        swift_release(v94);
        v93(v24, v9);
      }
    }

    else
    {
      NSString v72 = v182;
      swift_beginAccess(v182, &v195, 33LL, 0LL);
      swift_bridgeObjectRetain();
      unint64_t v73 = sub_10028C468((uint64_t)v24);
      char v75 = v74;
      swift_bridgeObjectRelease();
      if ((v75 & 1) != 0)
      {
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v72);
        uint64_t v77 = *v72;
        v194 = (void *)*v72;
        uint64_t *v72 = 0x8000000000000000LL;
        if (!isUniquelyReferenced_nonNull_native)
        {
          sub_10028DE40();
          uint64_t v77 = (uint64_t)v194;
        }

        unint64_t v78 = *(void *)(v77 + 48) + v73 * v41;
        unint64_t v79 = v179;
        v179((char *)v78, v9);
        uint64_t v80 = (uint64_t)v194;
        uint64_t v81 = *(void *)(v194[7] + 8 * v73);
        sub_10028D348(v73, (uint64_t)v194);
        uint64_t *v72 = v80;
        swift_bridgeObjectRelease();
        swift_endAccess(&v195);
        (*(void (**)(uint64_t, _UNKNOWN **))(*(void *)v53 + 208LL))(v81, &off_1003A4050);
        swift_release(v81);
        v79(v24, v9);
      }

      else
      {
        swift_endAccess(&v195);
        v179(v24, v9);
      }
    }

LABEL_113:
  __break(1u);
LABEL_114:
  __break(1u);
LABEL_115:
  swift_bridgeObjectRelease();
  __break(1u);
LABEL_116:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v9);
  __break(1u);
  return result;
}

uint64_t sub_1002659E4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_itemDataSources);
  swift_beginAccess(v3, v9, 0LL, 0LL);
  uint64_t v4 = *v3;
  if (*(void *)(v4 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v5 = sub_10028C468(a1);
    if ((v6 & 1) != 0)
    {
      uint64_t v7 = *(void *)(*(void *)(v4 + 56) + 8 * v5);
      swift_retain(v7);
      swift_bridgeObjectRelease();
      return v7;
    }
  }

  else
  {
    __break(1u);
  }

  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_100265A7C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for RoutingMode(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = (uint64_t *)(v2 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_itemDataSources);
  swift_beginAccess(v9, v16, 0LL, 0LL);
  uint64_t v10 = *v9;
  if (*(void *)(*v9 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v11 = sub_10028C468(a2);
    if ((v12 & 1) != 0)
    {
      uint64_t v13 = *(void *)(*(void *)(v10 + 56) + 8 * v11);
      swift_retain(v13);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
      (*(void (**)(char *))(*(void *)v13 + 208LL))(v8);
      return swift_release(v13);
    }
  }

  else
  {
    __break(1u);
  }

  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_100265B8C@<X0>(uint64_t a1@<X8>)
{
  return sub_100265BA0( (unsigned int *)&enum case for RoutingSessionConfiguration.Attribution.none(_:),  (uint64_t (*)(void))&type metadata accessor for RoutingSessionConfiguration.Attribution,  a1);
}

uint64_t sub_100265BA0@<X0>(unsigned int *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a2(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104LL))(a3, v4, v5);
}

uint64_t sub_100265BDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v70 = a3;
  uint64_t v5 = *v3;
  uint64_t v69 = type metadata accessor for RoutingSessionConfiguration.Attribution(0LL);
  uint64_t v67 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  uint64_t v68 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for RoutingEvent(0LL);
  __chkstk_darwin(v7);
  uint64_t v71 = (uint64_t)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for RoutingInteraction(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v64 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v65 = v12;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v59 - v13;
  uint64_t v15 = type metadata accessor for Logger(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v72 = RoutingInteraction.identifier.getter(v17);
  unint64_t v21 = v20;
  uint64_t v22 = sub_1001741A8();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v19, v22, v15);
  uint64_t v23 = a1;
  char v75 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v75(v14, a1, v9);
  unint64_t v74 = v21;
  swift_bridgeObjectRetain_n(v21, 2LL);
  uint64_t v25 = (os_log_s *)Logger.logObject.getter(v24);
  os_log_type_t v26 = static os_log_type_t.default.getter(v25);
  int v27 = v26;
  BOOL v28 = os_log_type_enabled(v25, v26);
  uint64_t v73 = v23;
  uint64_t v63 = v5;
  if (v28)
  {
    uint64_t v29 = swift_slowAlloc(32LL, -1LL);
    uint64_t v62 = swift_slowAlloc(96LL, -1LL);
    v77[0] = v62;
    *(_DWORD *)uint64_t v29 = 136315650;
    int v60 = v27;
    uint64_t v30 = _typeName(_:qualified:)(v5, 0LL);
    uint64_t v76 = sub_10015ADC4(v30, v31, v77);
    uint64_t v61 = v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v76, v77, v29 + 4, v29 + 12);
    swift_bridgeObjectRelease();
    *(_WORD *)(v29 + 12) = 2080;
    uint64_t v59 = v15;
    unint64_t v32 = v74;
    swift_bridgeObjectRetain();
    uint64_t v76 = sub_10015ADC4(v72, v32, v77);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v76, v77, v29 + 14, v29 + 22);
    swift_bridgeObjectRelease_n(v32, 3LL);
    *(_WORD *)(v29 + 22) = 2080;
    uint64_t v33 = sub_100156FEC( &qword_1003F88F8,  (uint64_t (*)(uint64_t))&type metadata accessor for RoutingInteraction,  (uint64_t)&protocol conformance descriptor for RoutingInteraction);
    uint64_t v34 = dispatch thunk of CustomStringConvertible.description.getter(v9, v33);
    uint64_t v76 = sub_10015ADC4(v34, v35, v77);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v76, v77, v29 + 24, v29 + 32);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
    _os_log_impl( (void *)&_mh_execute_header,  v25,  (os_log_type_t)v60,  "[%s] handleInteractionForConfiguration<%s> - interaction: %s",  (uint8_t *)v29,  0x20u);
    uint64_t v36 = v62;
    swift_arrayDestroy(v62, 3LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v36, -1LL, -1LL);
    uint64_t v37 = v29;
    uint64_t v23 = v73;
    swift_slowDealloc(v37, -1LL, -1LL);

    uint64_t v38 = (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v19, v59);
  }

  else
  {
    swift_bridgeObjectRelease_n(v74, 2LL);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);

    uint64_t v38 = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  }

  uint64_t v39 = v66;
  uint64_t v40 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v66 + 280LL))(v38);
  uint64_t v41 = (uint64_t)v64;
  v75(v64, v23, v9);
  uint64_t v42 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v43 = (v42 + 24) & ~v42;
  unint64_t v44 = (v65 + v43 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v45 = (v44 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v46 = v9;
  uint64_t v47 = v10;
  unint64_t v48 = (v45 + 23) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v49 = swift_allocObject(&unk_1003AB800, v48 + 8, v42 | 7);
  *(void *)(v49 + 16) = v40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 32))(v49 + v43, v41, v46);
  *(void *)(v49 + v44) = v39;
  uint64_t v50 = (void *)(v49 + v45);
  unint64_t v51 = v74;
  *uint64_t v50 = v72;
  v50[1] = v51;
  *(void *)(v49 + v48) = v63;
  uint64_t v52 = sub_100156B68(&qword_1003F8EB0);
  swift_allocObject(v52, *(unsigned int *)(v52 + 48), *(unsigned __int16 *)(v52 + 52));
  id v53 = v40;
  swift_retain(v39);
  uint64_t v54 = Future.init(_:)(sub_10028E11C, v49);
  uint64_t v55 = v73;
  v75((char *)v41, v73, v46);
  uint64_t v56 = (uint64_t)v68;
  (*(void (**)(char *, uint64_t, uint64_t))(v67 + 16))(v68, v70, v69);
  swift_retain(v54);
  uint64_t v57 = v71;
  sub_100156C28(v41, v56, v54, v71);
  (*(void (**)(uint64_t))(**(void **)(v39
                                                + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_timeline)
                                  + 216LL))(v57);
  sub_100268508(v55);

  sub_1001A813C(v57, type metadata accessor for RoutingEvent);
  return v54;
}

uint64_t sub_100266124( os_log_s *a1, char *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8)
{
  uint64_t v332 = a8;
  v341 = a7;
  uint64_t v333 = a6;
  uint64_t v346 = a5;
  uint64_t v310 = type metadata accessor for RoutingInteraction(0LL);
  uint64_t v309 = *(void *)(v310 - 8);
  __chkstk_darwin(v310);
  v311 = (char *)&v308 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v317 = type metadata accessor for RoutingSessionConfiguration.ItemType(0LL);
  uint64_t v316 = *(void *)(v317 - 8);
  __chkstk_darwin(v317);
  v315 = (char *)&v308 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v324 = type metadata accessor for RoutingControl.Target(0LL);
  uint64_t v328 = *(void *)(v324 - 8);
  __chkstk_darwin(v324);
  v323 = (uint64_t *)((char *)&v308 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v327 = type metadata accessor for RoutingControl.RoutingControlType(0LL);
  uint64_t v326 = *(void *)(v327 - 8);
  __chkstk_darwin(v327);
  v325 = (char *)&v308 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v330 = type metadata accessor for RoutingControl(0LL);
  v331 = *(const char **)(v330 - 8);
  uint64_t v16 = __chkstk_darwin(v330);
  v312 = (char *)&v308 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16);
  v329 = (char *)&v308 - v18;
  uint64_t v19 = sub_100156B68(&qword_1003F9518);
  __chkstk_darwin(v19);
  uint64_t v319 = (uint64_t)&v308 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v318 = type metadata accessor for HostedRoutingSourceSession(0LL);
  uint64_t v322 = *(void *)(v318 - 8);
  uint64_t v21 = __chkstk_darwin(v318);
  uint64_t v23 = (uint64_t *)((char *)&v308 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin(v21);
  uint64_t v320 = (uint64_t)&v308 - v24;
  uint64_t v339 = type metadata accessor for Logger(0LL);
  uint64_t v340 = *(void *)(v339 - 8);
  uint64_t v25 = __chkstk_darwin(v339);
  v314 = (char *)&v308 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v27 = __chkstk_darwin(v25);
  v313 = (char *)&v308 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  v321 = (char *)&v308 - v30;
  __chkstk_darwin(v29);
  v338 = (char *)&v308 - v31;
  uint64_t v337 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v336 = *(void *)(v337 - 8);
  __chkstk_darwin(v337);
  v335 = (uint64_t *)((char *)&v308 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v33 = type metadata accessor for RoutingInteraction.Action(0LL);
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v37 = (char *)&v308 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v35);
  uint64_t v39 = (uint64_t *)((char *)&v308 - v38);
  uint64_t v40 = swift_allocObject(&unk_1003AC868, 32LL, 7LL);
  v334 = a1;
  *(void *)(v40 + 16) = a1;
  *(void *)(v40 + 24) = a2;
  uint64_t v41 = (void *)swift_allocObject(&unk_1003AC890, 40LL, 7LL);
  v41[2] = a3;
  v41[3] = sub_1002922B0;
  v344 = a2;
  v345 = v41;
  v41[4] = v40;
  swift_retain_n(a2, 2LL);
  uint64_t v343 = v40;
  swift_retain(v40);
  id v42 = a3;
  uint64_t v342 = a4;
  RoutingInteraction.action.getter(v42);
  int v43 = (*(uint64_t (**)(uint64_t *, uint64_t))(v34 + 88))(v39, v33);
  if (v43 == enum case for RoutingInteraction.Action.add(_:)
    || v43 == enum case for RoutingInteraction.Action.remove(_:)
    || v43 == enum case for RoutingInteraction.Action.set(_:))
  {
    id v45 = v42;
    (*(void (**)(uint64_t *, uint64_t))(v34 + 96))(v39, v33);
    uint64_t v47 = v39[2];
    uint64_t v46 = v39[3];
    uint64_t v48 = *v39;
    uint64_t v49 = v39[1];
    uint64_t v50 = sub_10024B258();
    uint64_t v51 = *((void *)v50 + 1);
    if (v47 == *(void *)v50 && v46 == v51)
    {
      swift_bridgeObjectRelease();
      uint64_t v52 = v346;
      unint64_t v53 = (unint64_t)v341;
    }

    else
    {
      char v54 = _stringCompareWithSmolCheck(_:_:expecting:)(v47, v46, *(void *)v50, v51, 0LL);
      swift_bridgeObjectRelease();
      uint64_t v52 = v346;
      unint64_t v53 = (unint64_t)v341;
      if ((v54 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_release(v344);
        swift_release(v343);
        uint64_t v355 = type metadata accessor for HostedRoutingSessionDataSource(0LL);
        v356 = &off_1003AB888;
        v352 = (char *)v52;
        uint64_t v44 = v52;
        goto LABEL_19;
      }
    }

    swift_beginAccess( v52 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_itemDataSources,  &v349,  0LL,  0LL);
    swift_bridgeObjectRetain();
    uint64_t v55 = swift_bridgeObjectRetain();
    uint64_t v56 = sub_10028FC64(v55, v48, v49);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n(v49, 2LL);
    if (v56)
    {
      swift_release(v344);
      swift_release(v343);
      uint64_t v57 = sub_1001741A8();
      uint64_t v58 = v340;
      uint64_t v59 = v338;
      uint64_t v60 = v339;
      (*(void (**)(char *, uint64_t, uint64_t))(v340 + 16))(v338, v57, v339);
      swift_bridgeObjectRetain_n(v53, 2LL);
      uint64_t v61 = swift_retain_n(v56, 2LL);
      uint64_t v62 = (os_log_s *)Logger.logObject.getter(v61);
      os_log_type_t v63 = static os_log_type_t.default.getter(v62);
      if (os_log_type_enabled(v62, v63))
      {
        uint64_t v64 = swift_slowAlloc(32LL, -1LL);
        uint64_t v65 = swift_slowAlloc(96LL, -1LL);
        v352 = (char *)v65;
        *(_DWORD *)uint64_t v64 = 136315650;
        uint64_t v66 = _typeName(_:qualified:)(v332, 0LL);
        uint64_t v347 = sub_10015ADC4(v66, v67, (uint64_t *)&v352);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v347, v348, v64 + 4, v64 + 12);
        swift_bridgeObjectRelease();
        *(_WORD *)(v64 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v347 = sub_10015ADC4(v333, v53, (uint64_t *)&v352);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v347, v348, v64 + 14, v64 + 22);
        swift_bridgeObjectRelease_n(v53, 3LL);
        *(_WORD *)(v64 + 22) = 2080;
        uint64_t v347 = v56;
        uint64_t v68 = type metadata accessor for RoutingItemDataSource(0LL);
        uint64_t v69 = sub_100156FEC(&qword_1003FCE68, type metadata accessor for RoutingItemDataSource, (uint64_t)&unk_10034C1CC);
        uint64_t v70 = dispatch thunk of CustomStringConvertible.description.getter(v68, v69);
        uint64_t v347 = sub_10015ADC4(v70, v71, (uint64_t *)&v352);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v347, v348, v64 + 24, v64 + 32);
        swift_release_n(v56, 2LL);
        swift_bridgeObjectRelease();
        _os_log_impl( (void *)&_mh_execute_header,  v62,  v63,  "[%s] handleInteractionForConfiguration<%s> - delegating to data source: %s",  (uint8_t *)v64,  0x20u);
        swift_arrayDestroy(v65, 3LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v65, -1LL, -1LL);
        swift_slowDealloc(v64, -1LL, -1LL);

        (*(void (**)(char *, uint64_t))(v340 + 8))(v59, v339);
      }

      else
      {

        swift_release_n(v56, 2LL);
        swift_bridgeObjectRelease_n(v53, 2LL);
        (*(void (**)(char *, uint64_t))(v58 + 8))(v59, v60);
      }

      unint64_t v106 = v345;
      uint64_t v78 = v342;
      uint64_t v355 = type metadata accessor for RoutingItemDataSource(0LL);
      v356 = &off_1003A4060;
      v352 = (char *)v56;
      goto LABEL_93;
    }

    uint64_t v90 = type metadata accessor for InternalRoutingError(0LL);
    uint64_t v91 = sub_100156FEC( &qword_1003F8908,  (uint64_t (*)(uint64_t))&type metadata accessor for InternalRoutingError,  (uint64_t)&protocol conformance descriptor for InternalRoutingError);
    uint64_t v92 = swift_allocError(v90, v91, 0LL, 0LL);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v90 - 8) + 104LL))( v93,  enum case for InternalRoutingError.itemNotFound(_:),  v90);
    uint64_t v94 = MRDFastSyncGroupSessionState.rawValue.getter(v92, 0LL, 0LL, 4LL);
    uint64_t v96 = v95;
    uint64_t v98 = v97;
    unsigned __int8 v100 = v99;
    uint64_t v33 = (uint64_t)v335;
    uint64_t v101 = v45;
    uint64_t *v335 = (uint64_t)v45;
    uint64_t v37 = (char *)v336;
    uint64_t v102 = v337;
    (*(void (**)(uint64_t, void, uint64_t))(v336 + 104))( v33,  enum case for DispatchPredicate.onQueue(_:),  v337);
    id v103 = v101;
    LOBYTE(v101) = _dispatchPreconditionTest(_:)(v33);
    (*((void (**)(uint64_t, uint64_t))v37 + 1))(v33, v102);
    if ((v101 & 1) != 0)
    {
      v352 = (char *)v94;
      unint64_t v353 = v96;
      uint64_t v354 = v98;
      LOWORD(v355) = v100;
      id v104 = v344;
      ((void (*)(char **))v334)(&v352);
      swift_release(v345);
      swift_release(v104);
      swift_release(v343);
      swift_errorRelease(v94);
      return sub_100156BA8(v96, v98, v100);
    }

    __break(1u);
LABEL_106:
    __break(1u);
LABEL_107:
    __break(1u);
LABEL_108:
    __break(1u);
    goto LABEL_109;
  }

  if (v43 != enum case for RoutingInteraction.Action.setActiveSession(_:))
  {
    if (v43 == enum case for RoutingInteraction.Action.setActiveItem(_:))
    {
      swift_release(v344);
      swift_release(v343);
      (*(void (**)(uint64_t *, uint64_t))(v34 + 96))(v39, v33);
      swift_bridgeObjectRelease();
      uint64_t v72 = sub_1001A8998();
      uint64_t v74 = v73;
      uint64_t v75 = v346;
      uint64_t v76 = *(void *)(v346 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_identifierStore);
      uint64_t v77 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)v76 + 280LL);
      swift_retain(v76);
      uint64_t v78 = v342;
      v77(v72, v74, v342);
      swift_release(v76);
      swift_bridgeObjectRelease();
      uint64_t v79 = v75 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_delegate;
      uint64_t Strong = swift_unknownObjectWeakLoadStrong(v75 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_delegate);
      if (Strong)
      {
        uint64_t v82 = Strong;
        uint64_t v83 = *(void *)(v79 + 8);
        uint64_t ObjectType = swift_getObjectType(Strong, v81);
        uint64_t v85 = sub_10024B258();
        uint64_t v86 = *(void *)v85;
        uint64_t v87 = *((void *)v85 + 1);
        os_log_type_t v88 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v83 + 32);
        swift_bridgeObjectRetain();
        uint64_t v89 = v86;
        uint64_t v78 = v342;
        v88(v75, v89, v87, v72, v74, ObjectType, v83);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease(v82);
      }

      else
      {
        swift_bridgeObjectRelease();
      }

      unint64_t v106 = v345;
      uint64_t v355 = type metadata accessor for HostedRoutingSessionDataSource(0LL);
      v356 = &off_1003AB888;
      v352 = (char *)v75;
      swift_retain(v75);
      goto LABEL_93;
    }

    if (v43 == enum case for RoutingInteraction.Action.handoff(_:))
    {
      (*(void (**)(uint64_t *, uint64_t))(v34 + 96))(v39, v33);
      uint64_t v37 = (char *)*v39;
      int64_t v107 = *(char **)(*v39 + 16);
      uint64_t v108 = *(void *)(*v39 + 24);
      uint64_t v33 = *((void *)v37 + 6);
      swift_bridgeObjectRetain();
      swift_retain(v33);
      int64_t v109 = sub_10024B258();
      uint64_t v110 = *(void *)v109;
      uint64_t v111 = *((void *)v109 + 1);
      BOOL v160 = v107 == *(char **)v109;
      v338 = v107;
      if (v160 && v108 == v111 || (_stringCompareWithSmolCheck(_:_:expecting:)(v107, v108, v110, v111, 0LL) & 1) != 0)
      {
        swift_release(v344);
        swift_release(v343);
        sub_10016083C(0LL, &qword_1003F88E0, off_100397340);
        id v112 = sub_100298F38();
        id v113 = [(id)objc_opt_self(MROrigin) localOrigin];
        RoutingInteraction.Action.HandoffContext.sourceBundleIdentifier.getter(v113);
        id v114 = objc_allocWithZone(&OBJC_CLASS___MRPlayerPath);
        NSString v115 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v116 = [v114 initWithOrigin:v113 bundleIdentifier:v115 player:0];

        id v117 = [v112 resolveExistingPlayerPath:v116];
        uint64_t v78 = v342;
        uint64_t v34 = v346;
        if (v117)
        {
          if ([v117 isResolved])
          {
            uint64_t v343 = v33;
            v344 = v37;
            uint64_t v118 = sub_1001741A8();
            uint64_t v119 = v321;
            uint64_t v120 = v339;
            (*(void (**)(char *, uint64_t, uint64_t))(v340 + 16))(v321, v118, v339);
            unint64_t v121 = (unint64_t)v341;
            swift_bridgeObjectRetain_n(v341, 2LL);
            id v122 = v117;
            uint64_t v123 = (os_log_s *)Logger.logObject.getter(v122);
            os_log_type_t v124 = static os_log_type_t.default.getter(v123);
            if (os_log_type_enabled(v123, v124))
            {
              uint64_t v125 = swift_slowAlloc(32LL, -1LL);
              uint64_t v336 = swift_slowAlloc(8LL, -1LL);
              uint64_t v337 = swift_slowAlloc(64LL, -1LL);
              v352 = (char *)v337;
              *(_DWORD *)uint64_t v125 = 136315650;
              uint64_t v126 = _typeName(_:qualified:)(v332, 0LL);
              *(void *)&__int128 v349 = sub_10015ADC4(v126, v127, (uint64_t *)&v352);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v349, (char *)&v349 + 8, v125 + 4, v125 + 12);
              swift_bridgeObjectRelease();
              *(_WORD *)(v125 + 12) = 2080;
              swift_bridgeObjectRetain();
              *(void *)&__int128 v349 = sub_10015ADC4(v333, v121, (uint64_t *)&v352);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v349, (char *)&v349 + 8, v125 + 14, v125 + 22);
              swift_bridgeObjectRelease_n(v121, 3LL);
              *(_WORD *)(v125 + 22) = 2112;
              *(void *)&__int128 v349 = v122;
              id v128 = v122;
              uint64_t v78 = v342;
              uint64_t v34 = v346;
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v349, (char *)&v349 + 8, v125 + 24, v125 + 32);
              uint64_t v129 = v336;
              *(void *)uint64_t v336 = v117;

              _os_log_impl( (void *)&_mh_execute_header,  v123,  v124,  "[%s] handleInteractionForConfiguration<%s> - inject source player path: %@ into handoff context",  (uint8_t *)v125,  0x20u);
              uint64_t v130 = sub_100156B68((uint64_t *)&unk_1003FB7E0);
              swift_arrayDestroy(v129, 1LL, v130);
              swift_slowDealloc(v129, -1LL, -1LL);
              uint64_t v131 = v337;
              swift_arrayDestroy(v337, 2LL, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v131, -1LL, -1LL);
              swift_slowDealloc(v125, -1LL, -1LL);

              (*(void (**)(char *, uint64_t))(v340 + 8))(v321, v339);
            }

            else
            {

              swift_bridgeObjectRelease_n(v121, 2LL);
              (*(void (**)(char *, uint64_t))(v340 + 8))(v119, v120);
            }

            id v197 = v122;
            uint64_t v33 = v343;
            dispatch thunk of RoutingInteraction.Action.HandoffContext.sourcePlayerPath.setter(v117);
            uint64_t v37 = v344;
          }
        }

        uint64_t v198 = sub_1001A8998();
        uint64_t v200 = v199;
        uint64_t v201 = *(void *)(v34 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_identifierStore);
        v202 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)v201 + 280LL);
        swift_retain(v201);
        v202(v198, v200, v78);
        swift_release(v201);
        swift_bridgeObjectRelease();
        uint64_t v203 = v34 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_delegate;
        uint64_t v204 = swift_unknownObjectWeakLoadStrong(v34 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_delegate);
        if (v204)
        {
          uint64_t v206 = v204;
          uint64_t v207 = *(void *)(v203 + 8);
          uint64_t v208 = swift_getObjectType(v204, v205);
          (*(void (**)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v207 + 32))( v34,  v338,  v108,  v198,  v200,  v208,  v207);
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease(v206);
        }

        else
        {
          swift_bridgeObjectRelease();
        }

        swift_bridgeObjectRelease();
        unint64_t v106 = v345;
LABEL_68:
        uint64_t v355 = type metadata accessor for HostedRoutingSessionDataSource(0LL);
        v356 = &off_1003AB888;
        swift_retain(v34);
        swift_release(v37);
        swift_release(v33);
        v352 = (char *)v34;
        goto LABEL_93;
      }

      v331 = v109;
      uint64_t v327 = (uint64_t)v42;
      uint64_t v34 = v346;
      uint64_t v154 = (*(uint64_t (**)(void))(*(void *)v346 + 328LL))();
      uint64_t v155 = *(void *)(v154 + 16);
      if (v155)
      {
        uint64_t v156 = v37;
        uint64_t v157 = v154 + ((*(unsigned __int8 *)(v322 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v322 + 80));
        uint64_t v158 = *(void *)(v322 + 72);
        while (1)
        {
          sub_1001A80F8(v157, (uint64_t)v23, type metadata accessor for HostedRoutingSourceSession);
          uint64_t v159 = v23[1];
          BOOL v160 = (char *)*v23 == v338 && v159 == v108;
          if (v160 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v23, v159, v338, v108, 0LL) & 1) != 0) {
            break;
          }
          sub_1001A813C((uint64_t)v23, type metadata accessor for HostedRoutingSourceSession);
          v157 += v158;
          if (!--v155)
          {
            uint64_t v161 = 1LL;
            uint64_t v37 = v156;
            goto LABEL_71;
          }
        }

        uint64_t v209 = v319;
        sub_1001A81D4((uint64_t)v23, v319, type metadata accessor for HostedRoutingSourceSession);
        uint64_t v161 = 0LL;
        uint64_t v37 = v156;
      }

      else
      {
        uint64_t v161 = 1LL;
LABEL_71:
        uint64_t v209 = v319;
      }

      uint64_t v210 = v322;
      uint64_t v211 = v318;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v322 + 56))(v209, v161, 1LL, v318);
      swift_bridgeObjectRelease();
      int v212 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v210 + 48))(v209, 1LL, v211);
      unint64_t v213 = (unint64_t)v341;
      if (v212 != 1)
      {
        swift_release(v344);
        swift_release(v343);
        uint64_t v231 = v320;
        sub_1001A81D4(v209, v320, type metadata accessor for HostedRoutingSourceSession);
        uint64_t v232 = *(void *)(v231 + 24);
        if (v232)
        {
          uint64_t v233 = *(void *)(v231 + 16);
          v234 = (uint64_t *)(v34 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_endpoints);
          swift_beginAccess( v34 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_endpoints,  &v349,  0LL,  0LL);
          uint64_t v235 = *v234;
          if (*(void *)(v235 + 16))
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            unint64_t v236 = sub_10015CAD4(v233, v232);
            if ((v237 & 1) != 0)
            {
              uint64_t v238 = *(void *)(*(void *)(v235 + 56) + 8 * v236);
              swift_retain(v238);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (*(_BYTE *)(v238 + 16) == 2
                && (id v239 = [*(id *)(v238 + 64) origin]) != 0)
              {
                v240 = v239;
                v344 = v37;
                sub_10016083C(0LL, &qword_1003F88E0, off_100397340);
                id v241 = sub_100298F38();
                id v242 = v240;
                RoutingInteraction.Action.HandoffContext.sourceBundleIdentifier.getter(v242);
                id v243 = objc_allocWithZone(&OBJC_CLASS___MRPlayerPath);
                NSString v244 = String._bridgeToObjectiveC()();
                swift_bridgeObjectRelease();
                id v245 = [v243 initWithOrigin:v242 bundleIdentifier:v244 player:0];

                id v246 = [v241 resolveExistingPlayerPath:v245];
                if (v246)
                {
                  unsigned __int8 v247 = [v246 isResolved];
                  uint64_t v37 = v344;
                  if ((v247 & 1) != 0)
                  {
                    uint64_t v343 = v33;
                    uint64_t v248 = sub_1001741A8();
                    uint64_t v249 = v340;
                    v250 = v313;
                    uint64_t v251 = v339;
                    (*(void (**)(char *, uint64_t, uint64_t))(v340 + 16))(v313, v248, v339);
                    swift_bridgeObjectRetain_n(v213, 2LL);
                    id v252 = v246;
                    v253 = (os_log_s *)Logger.logObject.getter(v252);
                    os_log_type_t v254 = static os_log_type_t.default.getter(v253);
                    LODWORD(v337) = v254;
                    if (os_log_type_enabled(v253, v254))
                    {
                      uint64_t v255 = swift_slowAlloc(32LL, -1LL);
                      v335 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
                      uint64_t v336 = swift_slowAlloc(64LL, -1LL);
                      v352 = (char *)v336;
                      *(_DWORD *)uint64_t v255 = 136315650;
                      uint64_t v256 = _typeName(_:qualified:)(v332, 0LL);
                      v334 = v253;
                      uint64_t v347 = sub_10015ADC4(v256, v257, (uint64_t *)&v352);
                      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v347, v348, v255 + 4, v255 + 12);
                      swift_bridgeObjectRelease();
                      *(_WORD *)(v255 + 12) = 2080;
                      swift_bridgeObjectRetain();
                      uint64_t v347 = sub_10015ADC4(v333, v213, (uint64_t *)&v352);
                      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v347, v348, v255 + 14, v255 + 22);
                      swift_bridgeObjectRelease_n(v213, 3LL);
                      *(_WORD *)(v255 + 22) = 2112;
                      uint64_t v347 = (uint64_t)v252;
                      id v258 = v252;
                      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v347, v348, v255 + 24, v255 + 32);
                      v259 = v335;
                      uint64_t *v335 = (uint64_t)v246;

                      os_log_t v260 = v334;
                      _os_log_impl( (void *)&_mh_execute_header,  v334,  (os_log_type_t)v337,  "[%s] handleInteractionForConfiguration<%s> - inject source player path: %@ into handoff context",  (uint8_t *)v255,  0x20u);
                      uint64_t v261 = sub_100156B68((uint64_t *)&unk_1003FB7E0);
                      swift_arrayDestroy(v259, 1LL, v261);
                      swift_slowDealloc(v259, -1LL, -1LL);
                      uint64_t v262 = v336;
                      swift_arrayDestroy(v336, 2LL, (char *)&type metadata for Any + 8);
                      swift_slowDealloc(v262, -1LL, -1LL);
                      swift_slowDealloc(v255, -1LL, -1LL);

                      (*(void (**)(char *, uint64_t))(v340 + 8))(v313, v339);
                    }

                    else
                    {

                      swift_bridgeObjectRelease_n(v213, 2LL);
                      (*(void (**)(char *, uint64_t))(v249 + 8))(v250, v251);
                    }

                    id v292 = v252;
                    uint64_t v33 = v343;
                    dispatch thunk of RoutingInteraction.Action.HandoffContext.sourcePlayerPath.setter(v246);

                    swift_release(v238);
                    uint64_t v34 = v346;
                    uint64_t v37 = v344;
                  }

                  else
                  {

                    swift_release(v238);
                  }
                }

                else
                {
                  swift_release(v238);

                  uint64_t v37 = v344;
                }
              }

              else
              {
                swift_release(v238);
              }
            }

            else
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
          }

          uint64_t v282 = v34 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_delegate;
          uint64_t v283 = swift_unknownObjectWeakLoadStrong(v34 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_delegate);
          if (v283)
          {
            uint64_t v285 = v283;
            uint64_t v286 = *(void *)(v282 + 8);
            uint64_t v287 = swift_getObjectType(v283, v284);
            uint64_t v288 = *(void *)v331;
            uint64_t v289 = *((void *)v331 + 1);
            v290 = v37;
            v291 = *(void (**)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v286 + 32);
            swift_bridgeObjectRetain();
            v291(v34, v338, v108, v288, v289, v287, v286);
            uint64_t v37 = v290;
            swift_bridgeObjectRelease();
            swift_unknownObjectRelease(v285);
            swift_bridgeObjectRelease();
            sub_1001A813C(v320, type metadata accessor for HostedRoutingSourceSession);
          }

          else
          {
            sub_1001A813C(v320, type metadata accessor for HostedRoutingSourceSession);
            swift_bridgeObjectRelease();
          }

          unint64_t v106 = v345;
          uint64_t v78 = v342;
          goto LABEL_68;
        }

        goto LABEL_108;
      }

      sub_1001603DC(v209, &qword_1003F9518);
      uint64_t v214 = type metadata accessor for InternalRoutingError(0LL);
      uint64_t v215 = sub_100156FEC( &qword_1003F8908,  (uint64_t (*)(uint64_t))&type metadata accessor for InternalRoutingError,  (uint64_t)&protocol conformance descriptor for InternalRoutingError);
      uint64_t v216 = swift_allocError(v214, v215, 0LL, 0LL);
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v214 - 8) + 104LL))( v217,  enum case for InternalRoutingError.sessionNotFound(_:),  v214);
      uint64_t v218 = MRDFastSyncGroupSessionState.rawValue.getter(v216, v338, v108, 2LL);
      uint64_t v220 = v219;
      uint64_t v222 = v221;
      unsigned __int8 v224 = v223;
      uint64_t v34 = (uint64_t)v335;
      v225 = (void *)v327;
      uint64_t *v335 = v327;
      uint64_t v226 = v336;
      uint64_t v227 = v337;
      (*(void (**)(uint64_t, void, uint64_t))(v336 + 104))( v34,  enum case for DispatchPredicate.onQueue(_:),  v337);
      id v228 = v225;
      LOBYTE(v225) = _dispatchPreconditionTest(_:)(v34);
      (*(void (**)(uint64_t, uint64_t))(v226 + 8))(v34, v227);
      if ((v225 & 1) != 0)
      {
        v352 = (char *)v218;
        unint64_t v353 = v220;
        uint64_t v354 = v222;
        LOWORD(v355) = v224;
        v229 = v344;
        ((void (*)(char **))v334)(&v352);
        swift_release(v345);
        swift_release(v229);
        swift_release(v343);
        swift_errorRelease(v218);
        sub_100156BA8(v220, v222, v224);
        swift_release(v37);
        uint64_t v230 = v33;
        return swift_release(v230);
      }

      goto LABEL_106;
    }

    if (v43 != enum case for RoutingInteraction.Action.control(_:))
    {
LABEL_109:
      swift_release(v344);
      swift_release(v343);
      (*(void (**)(char *, uint64_t, uint64_t))(v309 + 16))(v311, v342, v310);
      v352 = 0LL;
      unint64_t v353 = 0xE000000000000000LL;
      _StringGuts.grow(_:)(78LL);
      v293._countAndFlagsBits = 91LL;
      v293._object = (void *)0xE100000000000000LL;
      String.append(_:)(v293);
      v294._countAndFlagsBits = _typeName(_:qualified:)(v332, 0LL);
      String.append(_:)(v294);
      swift_bridgeObjectRelease();
      v295._object = (void *)0x80000001003406F0LL;
      v295._countAndFlagsBits = 0xD000000000000024LL;
      String.append(_:)(v295);
      v296._countAndFlagsBits = v333;
      v296._object = v341;
      String.append(_:)(v296);
      v297._countAndFlagsBits = 0xD000000000000023LL;
      v297._object = (void *)0x8000000100340720LL;
      String.append(_:)(v297);
      RoutingInteraction.action.getter(v298);
      uint64_t v299 = sub_100156FEC( &qword_1003F7F88,  (uint64_t (*)(uint64_t))&type metadata accessor for RoutingInteraction.Action,  (uint64_t)&protocol conformance descriptor for RoutingInteraction.Action);
      v300._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v33, v299);
      String.append(_:)(v300);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v37, v33);
      uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  v352,  v353,  "mediaremoted/HostedRoutingSessionDataSource.swift",  49LL,  2LL,  404LL,  0);
LABEL_111:
      __break(1u);
      return result;
    }

    (*(void (**)(uint64_t *, uint64_t))(v34 + 96))(v39, v33);
    uint64_t v132 = *v39;
    uint64_t v133 = swift_projectBox(v132);
    BOOL v134 = v331;
    uint64_t v135 = (uint64_t (*)(char *, uint64_t, uint64_t))*((void *)v331 + 2);
    uint64_t v34 = (uint64_t)v329;
    uint64_t v33 = v330;
    uint64_t v136 = v135(v329, v133, v330);
    uint64_t v137 = v325;
    RoutingControl.type.getter(v136);
    uint64_t v138 = v326;
    uint64_t v139 = v327;
    uint64_t v140 = (*(uint64_t (**)(char *, uint64_t))(v326 + 88))(v137, v327);
    uint64_t v141 = v328;
    if ((_DWORD)v140 == enum case for RoutingControl.RoutingControlType.absoluteVolume(_:))
    {
      uint64_t v142 = v341;
      uint64_t v143 = v323;
      RoutingControl.target.getter(v140);
      uint64_t v144 = v324;
      int v145 = (*(uint64_t (**)(uint64_t *, uint64_t))(v141 + 88))(v143, v324);
      uint64_t v146 = v346;
      if (v145 == enum case for RoutingControl.Target.session(_:))
      {
        swift_release(v344);
        swift_release(v343);
        (*(void (**)(uint64_t *, uint64_t))(v141 + 96))(v143, v144);
        uint64_t v147 = v143;
        uint64_t v148 = *v143;
        uint64_t v149 = v147[1];
        os_log_type_t v150 = sub_10024B258();
        uint64_t v151 = *((void *)v150 + 1);
        unint64_t v106 = v345;
        if (v148 == *(void *)v150 && v149 == v151)
        {
          swift_bridgeObjectRelease();
          uint64_t v78 = v342;
        }

        else
        {
          char v169 = _stringCompareWithSmolCheck(_:_:expecting:)(v148, v149, *(void *)v150, v151, 0LL);
          swift_bridgeObjectRelease();
          uint64_t v78 = v342;
          if ((v169 & 1) == 0)
          {
            uint64_t v350 = type metadata accessor for HostedRoutingSessionDataSource(0LL);
            v351 = &off_1003AB888;
            *(void *)&__int128 v349 = v146;
            v279 = (void (*)(uint64_t, uint64_t))*((void *)v331 + 1);
            swift_retain(v146);
            v279(v34, v33);
LABEL_92:
            sub_100228154(&v349, (uint64_t)&v352);
            swift_release(v132);
            goto LABEL_93;
          }
        }

        uint64_t v170 = v316;
        v171 = v315;
        uint64_t v172 = v317;
        (*(void (**)(char *, void, uint64_t))(v316 + 104))( v315,  enum case for RoutingSessionConfiguration.ItemType.standard(_:),  v317);
        uint64_t v173 = (*(uint64_t (**)(char *))(*(void *)v146 + 656LL))(v171);
        uint64_t v175 = v174;
        (*(void (**)(char *, uint64_t))(v170 + 8))(v171, v172);
        uint64_t v350 = swift_getObjectType(v173, v176);
        v351 = *(_UNKNOWN ***)(v175 + 16);
LABEL_91:
        *(void *)&__int128 v349 = v173;
        (*((void (**)(uint64_t, uint64_t))v331 + 1))(v34, v33);
        goto LABEL_92;
      }

      uint64_t v327 = (uint64_t)v42;
      if (v145 != enum case for RoutingControl.Target.item(_:))
      {
        swift_release(v344);
        swift_release(v343);
        v135(v312, v34, v33);
        v352 = 0LL;
        unint64_t v353 = 0xE000000000000000LL;
        _StringGuts.grow(_:)(77LL);
        v301._countAndFlagsBits = 91LL;
        v301._object = (void *)0xE100000000000000LL;
        String.append(_:)(v301);
        v302._countAndFlagsBits = _typeName(_:qualified:)(v332, 0LL);
        String.append(_:)(v302);
        swift_bridgeObjectRelease();
        v303._object = (void *)0x80000001003406F0LL;
        v303._countAndFlagsBits = 0xD000000000000024LL;
        String.append(_:)(v303);
        v304._countAndFlagsBits = v333;
        v304._object = v142;
        String.append(_:)(v304);
        v305._countAndFlagsBits = 0xD000000000000022LL;
        v305._object = (void *)0x8000000100340750LL;
        String.append(_:)(v305);
        uint64_t v306 = sub_100156FEC( &qword_1003F8900,  (uint64_t (*)(uint64_t))&type metadata accessor for RoutingControl,  (uint64_t)&protocol conformance descriptor for RoutingControl);
        v307._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v33, v306);
        String.append(_:)(v307);
        swift_bridgeObjectRelease();
        uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  v352,  v353,  "mediaremoted/HostedRoutingSessionDataSource.swift",  49LL,  2LL,  398LL,  0);
        goto LABEL_111;
      }

      (*(void (**)(uint64_t *, uint64_t))(v141 + 96))(v143, v144);
      uint64_t v163 = *v143;
      uint64_t v162 = v143[1];
      uint64_t v164 = sub_10024A2D0(*v143, v162);
      uint64_t v166 = v165;
      v167 = sub_10024B258();
      uint64_t v168 = *((void *)v167 + 1);
      if (v164 == *(void *)v167 && v166 == v168)
      {
        swift_bridgeObjectRelease();
LABEL_58:
        uint64_t v178 = sub_10024A3A0(v163, v162);
        uint64_t v180 = v179;
        swift_bridgeObjectRelease();
        swift_beginAccess( v146 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_itemDataSources,  &v347,  0LL,  0LL);
        swift_bridgeObjectRetain();
        uint64_t v181 = swift_bridgeObjectRetain();
        uint64_t v173 = sub_10028FC64(v181, v178, v180);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n(v180, 2LL);
        if (!v173)
        {
          uint64_t v263 = type metadata accessor for InternalRoutingError(0LL);
          uint64_t v264 = sub_100156FEC( &qword_1003F8908,  (uint64_t (*)(uint64_t))&type metadata accessor for InternalRoutingError,  (uint64_t)&protocol conformance descriptor for InternalRoutingError);
          uint64_t v265 = swift_allocError(v263, v264, 0LL, 0LL);
          (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v263 - 8) + 104LL))( v266,  enum case for InternalRoutingError.itemNotFound(_:),  v263);
          uint64_t v37 = (char *)MRDFastSyncGroupSessionState.rawValue.getter(v265, 0LL, 0LL, 4LL);
          uint64_t v346 = v267;
          uint64_t v269 = v268;
          unsigned __int8 v271 = v270;
          v272 = v335;
          v273 = (void *)v327;
          uint64_t *v335 = v327;
          uint64_t v274 = v336;
          uint64_t v275 = v337;
          (*(void (**)(uint64_t *, void, uint64_t))(v336 + 104))( v272,  enum case for DispatchPredicate.onQueue(_:),  v337);
          id v276 = v273;
          LOBYTE(v273) = _dispatchPreconditionTest(_:)(v272);
          (*(void (**)(uint64_t *, uint64_t))(v274 + 8))(v272, v275);
          if ((v273 & 1) != 0)
          {
            uint64_t v277 = v346;
            v352 = v37;
            unint64_t v353 = v346;
            uint64_t v354 = v269;
            LOWORD(v355) = v271;
            v278 = v344;
            ((void (*)(char **))v334)(&v352);
            swift_release(v345);
            swift_errorRelease(v37);
            sub_100156BA8(v277, v269, v271);
            swift_release(v278);
            swift_release(v343);
            (*((void (**)(uint64_t, uint64_t))v331 + 1))(v34, v33);
            uint64_t v230 = v132;
            return swift_release(v230);
          }

          goto LABEL_107;
        }

        swift_release(v344);
        swift_release(v343);
        uint64_t v182 = sub_1001741A8();
        uint64_t v183 = v340;
        v184 = v314;
        uint64_t v185 = v339;
        (*(void (**)(char *, uint64_t, uint64_t))(v340 + 16))(v314, v182, v339);
        swift_bridgeObjectRetain_n(v142, 2LL);
        uint64_t v186 = swift_retain_n(v173, 2LL);
        v187 = (os_log_s *)Logger.logObject.getter(v186);
        os_log_type_t v188 = static os_log_type_t.default.getter(v187);
        if (os_log_type_enabled(v187, v188))
        {
          uint64_t v189 = swift_slowAlloc(32LL, -1LL);
          uint64_t v190 = swift_slowAlloc(96LL, -1LL);
          v352 = (char *)v190;
          *(_DWORD *)uint64_t v189 = 136315650;
          uint64_t v191 = _typeName(_:qualified:)(v332, 0LL);
          *(void *)&__int128 v349 = sub_10015ADC4(v191, v192, (uint64_t *)&v352);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v349, (char *)&v349 + 8, v189 + 4, v189 + 12);
          swift_bridgeObjectRelease();
          *(_WORD *)(v189 + 12) = 2080;
          swift_bridgeObjectRetain();
          *(void *)&__int128 v349 = sub_10015ADC4(v333, (unint64_t)v142, (uint64_t *)&v352);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v349, (char *)&v349 + 8, v189 + 14, v189 + 22);
          swift_bridgeObjectRelease_n(v142, 3LL);
          *(_WORD *)(v189 + 22) = 2080;
          *(void *)&__int128 v349 = v173;
          uint64_t v193 = type metadata accessor for RoutingItemDataSource(0LL);
          uint64_t v194 = sub_100156FEC( &qword_1003FCE68,  type metadata accessor for RoutingItemDataSource,  (uint64_t)&unk_10034C1CC);
          uint64_t v195 = dispatch thunk of CustomStringConvertible.description.getter(v193, v194);
          *(void *)&__int128 v349 = sub_10015ADC4(v195, v196, (uint64_t *)&v352);
          uint64_t v34 = (uint64_t)v329;
          uint64_t v33 = v330;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v349, (char *)&v349 + 8, v189 + 24, v189 + 32);
          swift_release_n(v173, 2LL);
          swift_bridgeObjectRelease();
          _os_log_impl( (void *)&_mh_execute_header,  v187,  v188,  "[%s] handleInteractionForConfiguration<%s> - delegating to data source: %s",  (uint8_t *)v189,  0x20u);
          swift_arrayDestroy(v190, 3LL, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v190, -1LL, -1LL);
          swift_slowDealloc(v189, -1LL, -1LL);

          (*(void (**)(char *, uint64_t))(v340 + 8))(v314, v339);
        }

        else
        {

          swift_release_n(v173, 2LL);
          swift_bridgeObjectRelease_n(v142, 2LL);
          (*(void (**)(char *, uint64_t))(v183 + 8))(v184, v185);
        }

        unint64_t v106 = v345;
        uint64_t v78 = v342;
        uint64_t v350 = type metadata accessor for RoutingItemDataSource(0LL);
        v351 = &off_1003A4060;
        goto LABEL_91;
      }

      char v177 = _stringCompareWithSmolCheck(_:_:expecting:)(v164, v166, *(void *)v167, v168, 0LL);
      swift_bridgeObjectRelease();
      if ((v177 & 1) != 0) {
        goto LABEL_58;
      }
      swift_bridgeObjectRelease();
      swift_release(v344);
      swift_release(v343);
      uint64_t v350 = type metadata accessor for HostedRoutingSessionDataSource(0LL);
      v351 = &off_1003AB888;
      *(void *)&__int128 v349 = v146;
      uint64_t v153 = (void (*)(uint64_t, uint64_t))*((void *)v331 + 1);
      uint64_t v152 = v146;
    }

    else
    {
      swift_release(v344);
      swift_release(v343);
      (*(void (**)(char *, uint64_t))(v138 + 8))(v137, v139);
      uint64_t v350 = type metadata accessor for HostedRoutingSessionDataSource(0LL);
      v351 = &off_1003AB888;
      uint64_t v152 = v346;
      *(void *)&__int128 v349 = v346;
      uint64_t v153 = (void (*)(uint64_t, uint64_t))*((void *)v134 + 1);
    }

    swift_retain(v152);
    v153(v34, v33);
    sub_100228154(&v349, (uint64_t)&v352);
    swift_release(v132);
    goto LABEL_20;
  }

  swift_release(v344);
  swift_release(v343);
  (*(void (**)(uint64_t *, uint64_t))(v34 + 96))(v39, v33);
  swift_bridgeObjectRelease();
  uint64_t v355 = type metadata accessor for HostedRoutingSessionDataSource(0LL);
  v356 = &off_1003AB888;
  uint64_t v44 = v346;
  v352 = (char *)v346;
LABEL_19:
  swift_retain(v44);
LABEL_20:
  unint64_t v106 = v345;
  uint64_t v78 = v342;
LABEL_93:
  uint64_t v280 = v355;
  v281 = v356;
  sub_1001865C4(&v352, v355);
  ((void (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, unsigned __int8), void *, uint64_t, _UNKNOWN **))v281[1])( v78,  sub_100292344,  v106,  v280,  v281);
  swift_release(v106);
  return sub_1001607E0(&v352);
}

uint64_t sub_100268418( uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4, void *a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, void))
{
  uint64_t v12 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (uint64_t *)((char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  *uint64_t v15 = a5;
  (*(void (**)(void *, void, uint64_t))(v13 + 104))(v15, enum case for DispatchPredicate.onQueue(_:), v12);
  id v16 = a5;
  LOBYTE(a5) = _dispatchPreconditionTest(_:)(v15);
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v13 + 8))(v15, v12);
  __break(1u);
  return result;
}

uint64_t sub_100268508(uint64_t a1)
{
  uint64_t v102 = type metadata accessor for RoutingControl.Target(0LL);
  uint64_t v101 = *(void *)(v102 - 8);
  uint64_t v2 = __chkstk_darwin(v102);
  unsigned __int8 v100 = (char *)&v89 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v2);
  unsigned __int8 v99 = (char *)&v89 - v4;
  uint64_t v120 = type metadata accessor for RoutingInteraction(0LL);
  uint64_t v111 = *(void *)(v120 - 8);
  uint64_t v5 = __chkstk_darwin(v120);
  uint64_t v97 = (char *)&v89 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v89 - v7;
  uint64_t v9 = type metadata accessor for RoutingControl.RoutingControlType(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  int64_t v109 = (char *)&v89 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  uint64_t v118 = (char *)&v89 - v13;
  uint64_t v14 = type metadata accessor for RoutingControl(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  id v112 = (char *)&v89 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v89 - v18;
  uint64_t v20 = type metadata accessor for RoutingInteraction.Action(0LL);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = __chkstk_darwin(v20);
  id v116 = (char *)&v89 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v26 = (uint64_t *)((char *)&v89 - v25);
  uint64_t v119 = a1;
  RoutingInteraction.action.getter(v24);
  NSString v115 = *(uint64_t (**)(void *, uint64_t))(v21 + 88);
  int v114 = v115(v26, v20);
  if (v114 != enum case for RoutingInteraction.Action.control(_:)) {
    return (*(uint64_t (**)(void *, uint64_t))(v21 + 8))(v26, v20);
  }
  uint64_t v107 = v21;
  uint64_t v108 = v20;
  unint64_t v106 = *(void (**)(void *, uint64_t))(v21 + 96);
  v106(v26, v20);
  uint64_t v27 = *v26;
  uint64_t v28 = swift_projectBox(*v26);
  unint64_t v105 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 16);
  uint64_t v29 = v105(v19, v28, v14);
  uint64_t v30 = v118;
  RoutingControl.type.getter(v29);
  id v104 = *(uint64_t (**)(char *, uint64_t))(v10 + 88);
  int v103 = v104(v30, v9);
  if (v103 != enum case for RoutingControl.RoutingControlType.absoluteVolume(_:))
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v19, v14);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v30, v9);
    uint64_t v88 = v27;
    return swift_release(v88);
  }

  uint64_t v110 = v14;
  uint64_t v98 = v9;
  uint64_t v93 = v27;
  uint64_t v95 = v19;
  uint64_t v94 = v10;
  unint64_t v31 = v117;
  uint64_t v32 = (*(uint64_t (**)(void))(**(void **)(v117
                                           + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_timeline)
                             + 112LL))();
  uint64_t v33 = v32;
  if ((unint64_t)v32 >> 62)
  {
    if (v32 >= 0) {
      v32 &= 0xFFFFFFFFFFFFFF8uLL;
    }
    uint64_t result = _CocoaArrayWrapper.endIndex.getter(v32);
  }

  else
  {
    uint64_t result = *(void *)((v32 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  }

  uint64_t v35 = v108;
  uint64_t v36 = v15;
  if (!result)
  {
LABEL_29:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v95, v110);
    uint64_t v88 = v93;
    return swift_release(v88);
  }

  if (result >= 1)
  {
    uint64_t v37 = v111;
    uint64_t v38 = 0LL;
    uint64_t v92 = (uint64_t *)(v31 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_pendingInteractions);
    unint64_t v117 = v33 & 0xC000000000000001LL;
    unsigned int v91 = enum case for InternalRoutingError.replacedBySubsequentInteraction(_:);
    uint64_t v96 = v8;
    uint64_t v113 = v33;
    uint64_t v118 = (char *)result;
    while (1)
    {
      if (v117)
      {
        uint64_t v39 = specialized _ArrayBuffer._getElementSlowPath(_:)(v38, v33);
      }

      else
      {
        uint64_t v39 = *(void *)(v33 + 8 * v38 + 32);
        swift_retain(v39);
      }

      uint64_t v40 = *(void (**)(void))(*(void *)v39 + 176LL);
      v40();
      char v41 = static RoutingInteraction.== infix(_:_:)(v8, v119);
      id v42 = *(uint64_t (**)(char *, uint64_t))(v37 + 8);
      uint64_t v43 = v42(v8, v120);
      if ((v41 & 1) != 0)
      {
        swift_release(v39);
      }

      else
      {
        uint64_t v44 = v36;
        id v45 = v116;
        (*(void (**)(uint64_t))(*(void *)v39 + 168LL))(v43);
        int v46 = v115(v45, v35);
        if (v46 == v114)
        {
          v106(v45, v35);
          uint64_t v47 = *v45;
          uint64_t v48 = swift_projectBox(*v45);
          uint64_t v49 = v112;
          uint64_t v50 = v110;
          v105(v112, v48, v110);
          uint64_t v51 = swift_release(v47);
          uint64_t v52 = v109;
          RoutingControl.type.getter(v51);
          uint64_t v53 = v98;
          uint64_t v54 = v104(v52, v98);
          if ((_DWORD)v54 != v103)
          {
            (*(void (**)(char *, uint64_t))(v44 + 8))(v49, v50);
            swift_release(v39);
            (*(void (**)(char *, uint64_t))(v94 + 8))(v52, v53);
            uint64_t v36 = v44;
LABEL_26:
            uint64_t v8 = v96;
            uint64_t v35 = v108;
            uint64_t v33 = v113;
            uint64_t v37 = v111;
            goto LABEL_9;
          }

          uint64_t v55 = v99;
          uint64_t v56 = RoutingControl.target.getter(v54);
          uint64_t v57 = v100;
          RoutingControl.target.getter(v56);
          char v58 = static RoutingControl.Target.== infix(_:_:)(v55, v57);
          uint64_t v59 = *(void (**)(char *, uint64_t))(v101 + 8);
          uint64_t v60 = v57;
          uint64_t v61 = v102;
          v59(v60, v102);
          uint64_t v62 = ((uint64_t (*)(char *, uint64_t))v59)(v55, v61);
          if ((v58 & 1) != 0)
          {
            uint64_t v63 = (uint64_t)v97;
            ((void (*)(uint64_t))v40)(v62);
            uint64_t v64 = v92;
            swift_beginAccess(v92, v121, 33LL, 0LL);
            swift_bridgeObjectRetain();
            unint64_t v65 = sub_10018036C(v63);
            char v67 = v66;
            swift_bridgeObjectRelease();
            uint64_t v36 = v44;
            if ((v67 & 1) == 0)
            {
              v42((char *)v63, v120);
              swift_endAccess(v121);
              (*(void (**)(char *, uint64_t))(v44 + 8))(v112, v110);
              swift_release(v39);
              goto LABEL_26;
            }

            int64_t v68 = v65;
            int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v64);
            uint64_t v70 = *v64;
            uint64_t v123 = *v64;
            *uint64_t v64 = 0x8000000000000000LL;
            uint64_t v8 = v96;
            if (!isUniquelyReferenced_nonNull_native)
            {
              sub_1001815C0();
              uint64_t v70 = v123;
            }

            uint64_t v37 = v111;
            uint64_t v71 = v120;
            v42((char *)(*(void *)(v70 + 48) + *(void *)(v111 + 72) * v68), v120);
            uint64_t v72 = v123;
            uint64_t v73 = (void *)(*(void *)(v123 + 56) + 16 * v68);
            uint64_t v75 = (void (*)(void *))*v73;
            uint64_t v74 = v73[1];
            uint64_t v90 = v75;
            uint64_t v89 = v74;
            sub_100180DE0(v68, v123);
            *uint64_t v64 = v72;
            swift_bridgeObjectRelease();
            v42(v97, v71);
            swift_endAccess(v121);
            uint64_t v76 = type metadata accessor for InternalRoutingError(0LL);
            uint64_t v77 = sub_100156FEC( &qword_1003F8908,  (uint64_t (*)(uint64_t))&type metadata accessor for InternalRoutingError,  (uint64_t)&protocol conformance descriptor for InternalRoutingError);
            uint64_t v78 = swift_allocError(v76, v77, 0LL, 0LL);
            (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v76 - 8) + 104LL))(v79, v91, v76);
            uint64_t v80 = MRDFastSyncGroupSessionState.rawValue.getter(v78, 0LL, 0LL, 4LL);
            uint64_t v82 = v81;
            uint64_t v84 = v83;
            unsigned __int8 v86 = v85;
            v121[0] = v80;
            v121[1] = v81;
            v121[2] = v83;
            unsigned __int8 v122 = v85;
            uint64_t v87 = v89;
            v90(v121);
            swift_release(v39);
            swift_errorRelease(v80);
            sub_100156BA8(v82, v84, v86);
            swift_release(v87);
            (*(void (**)(char *, uint64_t))(v36 + 8))(v112, v110);
          }

          else
          {
            uint64_t v36 = v44;
            (*(void (**)(char *, uint64_t))(v44 + 8))(v49, v110);
            swift_release(v39);
            uint64_t v37 = v111;
            uint64_t v8 = v96;
          }

          uint64_t v35 = v108;
          uint64_t v33 = v113;
        }

        else
        {
          swift_release(v39);
          (*(void (**)(void *, uint64_t))(v107 + 8))(v45, v35);
          uint64_t v36 = v44;
          uint64_t v33 = v113;
        }
      }

uint64_t sub_100268D6C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v3;
  uint64_t v7 = type metadata accessor for Logger(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (!a2)
  {
    uint64_t v20 = sub_1001741A8();
    uint64_t v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v20, v7);
    uint64_t v22 = (os_log_s *)Logger.logObject.getter(v21);
    os_log_type_t v23 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v25 = swift_slowAlloc(32LL, -1LL);
      uint64_t v49 = v25;
      *(_DWORD *)uint64_t v24 = 136315138;
      uint64_t v47 = v24 + 4;
      uint64_t v26 = _typeName(_:qualified:)(v6, 0LL);
      uint64_t v48 = sub_10015ADC4(v26, v27, &v49);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, &v49, v47, v24 + 12);
      swift_bridgeObjectRelease();
      _os_log_impl( (void *)&_mh_execute_header,  v22,  v23,  "[%s] updateActiveSessionElementsWithDeviceIdentifier - set to nil for nil ASE",  v24,  0xCu);
      swift_arrayDestroy(v25, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v25, -1LL, -1LL);
      swift_slowDealloc(v24, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    uint64_t v28 = (uint64_t *)((char *)v3 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements);
    uint64_t v29 = *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements);
    uint64_t v30 = *(uint64_t *)((char *)v3
                     + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements
                     + 8);
    unint64_t v31 = *(void **)((char *)v3
                     + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements
                     + 16);
    v28[1] = 0LL;
    v28[2] = 0LL;
    *uint64_t v28 = 0LL;
    sub_10028E974(v29, v30, (uint64_t)v31);
    sub_10028DA70(v29, v30, (uint64_t)v31);
    sub_100263A50(v29, v30, v31);
    return sub_10028DA70(v29, v30, (uint64_t)v31);
  }

  uint64_t v11 = (uint64_t *)((char *)v3 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements);
  uint64_t v12 = *(void **)((char *)v3
                   + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements
                   + 16);
  if (!v12)
  {
    swift_bridgeObjectRetain();
LABEL_26:
    uint64_t v39 = sub_100156B68(&qword_1003F8620);
    uint64_t v40 = swift_allocObject(v39, 48LL, 7LL);
    *(_OWORD *)(v40 + 16) = xmmword_10034BE40;
    *(void *)(v40 + 32) = a1;
    *(void *)(v40 + 40) = a2;
    uint64_t v41 = *v11;
    uint64_t v42 = v11[1];
    uint64_t v43 = (void *)v11[2];
    *uint64_t v11 = 0LL;
    v11[1] = 0LL;
    v11[2] = v40;
    sub_10028E974(v41, v42, (uint64_t)v43);
    sub_10028DA70(v41, v42, (uint64_t)v43);
    sub_100263A50(v41, v42, v43);
    uint64_t v44 = sub_10028DA70(v41, v42, (uint64_t)v43);
    uint64_t v45 = (*(uint64_t (**)(uint64_t))(*v3 + 328))(v44);
    sub_10026D3D4(v45);
    return swift_bridgeObjectRelease();
  }

  uint64_t v14 = *v11;
  uint64_t v13 = v11[1];
  uint64_t v47 = (uint8_t *)v12[2];
  if (!v47) {
    goto LABEL_25;
  }
  uint64_t v15 = v12[4];
  uint64_t v16 = v12[5];
  BOOL v17 = v15 == a1 && v16 == a2;
  if (v17 || (uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v16, a1, a2, 0LL), (result & 1) != 0))
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = v14;
LABEL_10:
    sub_10028E974(v19, v13, (uint64_t)v12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }

  if (v47 == (uint8_t *)1)
  {
LABEL_25:
    swift_bridgeObjectRetain();
    sub_10028E974(v14, v13, (uint64_t)v12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }

  uint64_t v32 = v12 + 7;
  uint64_t v33 = 1LL;
  while (1)
  {
    uint64_t v34 = v14;
    uint64_t v35 = v33 + 1;
    if (__OFADD__(v33, 1LL)) {
      break;
    }
    uint64_t v36 = *(v32 - 1);
    uint64_t v37 = *v32;
    BOOL v38 = v36 == a1 && v37 == a2;
    if (v38 || (uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(v36, v37, a1, a2, 0LL), (result & 1) != 0))
    {
      swift_bridgeObjectRetain();
      uint64_t v19 = v34;
      goto LABEL_10;
    }

    v32 += 2;
    ++v33;
    BOOL v17 = v35 == (void)v47;
    uint64_t v14 = v34;
    if (v17) {
      goto LABEL_25;
    }
  }

  __break(1u);
  return result;
}

os_log_s *sub_100269150()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = type metadata accessor for Logger(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v125 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v125 - v8;
  uint64_t v10 = sub_100156B68(&qword_1003F9518);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v125 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v125 - v14;
  uint64_t v16 = type metadata accessor for HostedRoutingSourceSession(0LL);
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v125 - v19;
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v22 = __chkstk_darwin(v21);
  uint64_t v23 = __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v125 - v24;
  uint64_t result = (os_log_s *)__chkstk_darwin(v23);
  if (*((_BYTE *)v1 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_supportActiveSession) != 1) {
    return result;
  }
  os_log_t v137 = result;
  uint64_t v138 = v31;
  uint64_t v130 = (uint64_t *)v30;
  uint64_t v131 = v7;
  uint64_t v132 = v2;
  uint64_t v134 = v4;
  uint64_t v135 = v29;
  uint64_t v32 = (void *)((char *)v1 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements);
  uint64_t v33 = *(void *)((char *)v1
                  + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements
                  + 16);
  if (!v33)
  {
LABEL_40:
    uint64_t v113 = sub_10024B258();
    uint64_t v114 = *(void *)v113;
    uint64_t v115 = *((void *)v113 + 1);
    id v116 = *(uint64_t (**)(uint64_t, uint64_t))(*v1 + 552LL);
    swift_bridgeObjectRetain();
    return (os_log_s *)v116(v114, v115);
  }

  uint64_t v125 = (uint64_t *)v27;
  uint64_t v133 = (uint64_t **)((char *)&v125 - v28);
  uint64_t v126 = v9;
  uint64_t v136 = v13;
  uint64_t v34 = *v32;
  unint64_t v35 = v32[1];
  swift_bridgeObjectRetain_n(v35, 2LL);
  swift_bridgeObjectRetain();
  uint64_t v36 = sub_10028DA70(v34, v35, v33);
  if (v35)
  {
    uint64_t v37 = *(uint64_t (**)(uint64_t))(*v1 + 328LL);
    uint64_t v128 = (uint64_t)v1;
    uint64_t v38 = v37(v36);
    uint64_t v39 = *(void *)(v38 + 16);
    uint64_t v127 = v38;
    if (v39)
    {
      uint64_t v129 = v3;
      uint64_t v40 = v38 + ((*(unsigned __int8 *)(v138 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v138 + 80));
      uint64_t v41 = *(void *)(v138 + 72);
      while (1)
      {
        sub_1001A80F8(v40, (uint64_t)v25, type metadata accessor for HostedRoutingSourceSession);
        if ((sub_10024B01C(*((void *)v25 + 2), *((void *)v25 + 3), v34, v35) & 1) != 0) {
          break;
        }
        sub_1001A813C((uint64_t)v25, type metadata accessor for HostedRoutingSourceSession);
        v40 += v41;
        if (!--v39)
        {
          uint64_t v42 = 1LL;
          goto LABEL_11;
        }
      }

      sub_1001A81D4((uint64_t)v25, (uint64_t)v15, type metadata accessor for HostedRoutingSourceSession);
      uint64_t v42 = 0LL;
LABEL_11:
      uint64_t v1 = (void *)v128;
      uint64_t v3 = v129;
    }

    else
    {
      uint64_t v42 = 1LL;
      uint64_t v1 = (void *)v128;
    }

    os_log_t v43 = v137;
    uint64_t v44 = v138;
    (*(void (**)(char *, uint64_t, uint64_t, os_log_t))(v138 + 56))(v15, v42, 1LL, v137);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, os_log_t))(v44 + 48))(v15, 1LL, v43) == 1)
    {
      swift_bridgeObjectRelease();
      sub_1001603DC((uint64_t)v15, &qword_1003F9518);
      goto LABEL_21;
    }

    sub_1001A81D4((uint64_t)v15, (uint64_t)v133, type metadata accessor for HostedRoutingSourceSession);
    uint64_t v45 = (char *)v1 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_endpoints;
    swift_beginAccess( (char *)v1 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_endpoints,  v139,  0LL,  0LL);
    uint64_t v46 = *(void *)v45;
    if (*(void *)(*(void *)v45 + 16LL))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v47 = sub_10015CAD4(v34, v35);
      if ((v48 & 1) != 0)
      {
        uint64_t v49 = *(void *)(*(void *)(v46 + 56) + 8 * v47);
        swift_retain(v49);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(_BYTE *)(v49 + 16) == 2)
        {
          uint64_t v50 = sub_1001741A8();
          uint64_t v51 = v134;
          uint64_t v52 = v126;
          (*(void (**)(char *, uint64_t, uint64_t))(v134 + 16))(v126, v50, v3);
          uint64_t v53 = v125;
          sub_1001A80F8((uint64_t)v133, (uint64_t)v125, type metadata accessor for HostedRoutingSourceSession);
          uint64_t v54 = swift_bridgeObjectRetain();
          uint64_t v55 = (os_log_s *)Logger.logObject.getter(v54);
          os_log_type_t v56 = static os_log_type_t.debug.getter();
          int v57 = v56;
          if (os_log_type_enabled(v55, v56))
          {
            uint64_t v58 = swift_slowAlloc(32LL, -1LL);
            LODWORD(v137) = v57;
            uint64_t v59 = v58;
            uint64_t v60 = swift_slowAlloc(96LL, -1LL);
            uint64_t v129 = v3;
            uint64_t v136 = (char *)v60;
            v142[0] = v60;
            *(_DWORD *)uint64_t v59 = 136315650;
            uint64_t v61 = _typeName(_:qualified:)(v132, 0LL);
            uint64_t v141 = sub_10015ADC4(v61, v62, v142);
            uint64_t v138 = v49;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v141, v142, v59 + 4, v59 + 12);
            uint64_t v1 = (void *)v128;
            swift_bridgeObjectRelease();
            *(_WORD *)(v59 + 12) = 2080;
            swift_bridgeObjectRetain();
            uint64_t v141 = sub_10015ADC4(v34, v35, v142);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v141, v142, v59 + 14, v59 + 22);
            swift_bridgeObjectRelease_n(v35, 3LL);
            *(_WORD *)(v59 + 22) = 2080;
            uint64_t v63 = *v53;
            unint64_t v64 = v53[1];
            swift_bridgeObjectRetain();
            uint64_t v141 = sub_10015ADC4(v63, v64, v142);
            uint64_t v49 = v138;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v141, v142, v59 + 24, v59 + 32);
            swift_bridgeObjectRelease();
            sub_1001A813C((uint64_t)v53, type metadata accessor for HostedRoutingSourceSession);
            _os_log_impl( (void *)&_mh_execute_header,  v55,  (os_log_type_t)v137,  "[%s] updateActiveSessionIdentifierIfNeeded - matched session elements groupIdentifier: %s to session: %s",  (uint8_t *)v59,  0x20u);
            uint64_t v65 = (uint64_t)v136;
            swift_arrayDestroy(v136, 3LL, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v65, -1LL, -1LL);
            swift_slowDealloc(v59, -1LL, -1LL);

            (*(void (**)(char *, uint64_t))(v134 + 8))(v52, v129);
          }

          else
          {
            swift_bridgeObjectRelease_n(v35, 2LL);
            sub_1001A813C((uint64_t)v53, type metadata accessor for HostedRoutingSourceSession);

            (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v3);
          }

          unint64_t v117 = v133;
          uint64_t v118 = *v133;
          uint64_t v119 = v133[1];
          uint64_t v120 = *(void (**)(uint64_t, uint64_t))(*v1 + 552LL);
          swift_bridgeObjectRetain();
          v120(v118, v119);
          swift_release(v49);
          return (os_log_s *)sub_1001A813C((uint64_t)v117, type metadata accessor for HostedRoutingSourceSession);
        }

        sub_1001A813C((uint64_t)v133, type metadata accessor for HostedRoutingSourceSession);
        swift_bridgeObjectRelease();
        swift_release(v49);
        goto LABEL_21;
      }

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }

    sub_1001A813C((uint64_t)v133, type metadata accessor for HostedRoutingSourceSession);
    swift_bridgeObjectRelease();
  }

void sub_100269D3C()
{
  uint64_t v144 = *v0;
  uint64_t v139 = type metadata accessor for RoutingMode(0LL);
  uint64_t v138 = *(void *)(v139 - 8);
  uint64_t v1 = __chkstk_darwin(v139);
  os_log_t v137 = &v132[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v1);
  uint64_t v136 = &v132[-v3];
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v5 = *(char **)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = &v132[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v6);
  uint64_t v10 = &v132[-v9];
  int v145 = v0;
  id v11 = sub_1002613F8();
  id v12 = [v11 availableEndpoints];

  if (!v12) {
    goto LABEL_122;
  }
  uint64_t v13 = sub_10016083C(0LL, &qword_1003FC960, &OBJC_CLASS___MRAVEndpoint_ptr);
  uint64_t v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v12, v13);

  uint64_t v15 = sub_1001741A8();
  uint64_t v151 = (void (*)(_BYTE *))*((void *)v5 + 2);
  uint64_t v152 = v15;
  v151(v10);
  uint64_t v16 = swift_bridgeObjectRetain_n(v14, 2LL);
  uint64_t v17 = (os_log_s *)Logger.logObject.getter(v16);
  os_log_type_t v18 = static os_log_type_t.debug.getter();
  BOOL v19 = os_log_type_enabled(v17, v18);
  uint64_t v20 = (char *)&type metadata for Any;
  uint64_t v148 = v8;
  if (v19)
  {
    uint64_t v21 = swift_slowAlloc(22LL, -1LL);
    int64_t v153 = swift_slowAlloc(64LL, -1LL);
    uint64_t v156 = v153;
    *(_DWORD *)uint64_t v21 = 136315394;
    uint64_t v22 = _typeName(_:qualified:)(v144, 0LL);
    uint64_t v154 = v5;
    uint64_t v158 = sub_10015ADC4(v22, v23, &v156);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v158, v159, v21 + 4, v21 + 12);
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2080;
    uint64_t v24 = swift_bridgeObjectRetain();
    uint64_t v25 = Array.description.getter(v24, v13);
    unint64_t v27 = v26;
    swift_bridgeObjectRelease();
    uint64_t v158 = sub_10015ADC4(v25, v27, &v156);
    uint64_t v8 = v148;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v158, v159, v21 + 14, v21 + 22);
    swift_bridgeObjectRelease_n(v14, 2LL);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "[%s] updateEndpoints - endpoints: %s", (uint8_t *)v21, 0x16u);
    int64_t v28 = v153;
    swift_arrayDestroy(v153, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v28, -1LL, -1LL);
    uint64_t v29 = v21;
    uint64_t v20 = (char *)&type metadata for Any;
    swift_slowDealloc(v29, -1LL, -1LL);

    uint64_t v30 = (void *)*((void *)v154 + 1);
  }

  else
  {

    swift_bridgeObjectRelease_n(v14, 2LL);
    uint64_t v30 = (void *)*((void *)v5 + 1);
  }

  os_log_type_t v150 = v30;
  ((void (*)(_BYTE *, uint64_t))v30)(v10, v4);
  BOOL v160 = (char *)&_swiftEmptySetSingleton;
  uint64_t v31 = *(void *)((v14 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  uint64_t v32 = &qword_100401648[823];
  while (v31)
  {
    unint64_t v33 = v14 & 0xC000000000000001LL;
    uint64_t v140 = (void *)((char *)v145 + v32[209]);
    __n128 v34 = swift_beginAccess(v140, &v158, 0LL, 0LL);
    int v133 = 0;
    unint64_t v35 = 0LL;
    uint64_t v149 = v14 & 0xFFFFFFFFFFFFFF8LL;
    unsigned int v135 = enum case for RoutingMode.disabled(_:);
    uint64_t v36 = &selRef_initWithListeningMode_outputDeviceUID_;
    v34.n128_u64[0] = 136315394LL;
    __n128 v142 = v34;
    uint64_t v141 = v20 + 8;
    uint64_t v147 = v4;
    uint64_t v146 = v14;
    int64_t v153 = v14 & 0xC000000000000001LL;
    uint64_t v154 = (char *)v31;
    while (1)
    {
      if (v33)
      {
        id v37 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v35, v14);
      }

      else
      {
        if (v35 >= *(void *)(v149 + 16)) {
          goto LABEL_50;
        }
        id v37 = *(id *)(v14 + 8 * v35 + 32);
      }

      uint64_t v38 = v37;
      uint64_t v20 = (char *)(v35 + 1);
      if (__OFADD__(v35, 1LL)) {
        break;
      }
      if ([v37 v36[221]])
      {

        goto LABEL_45;
      }

      id v39 = [v38 outputDevices];
      if (!v39) {
        goto LABEL_40;
      }
      uint64_t v40 = v39;
      uint64_t v41 = sub_10016083C(0LL, (unint64_t *)&qword_1003F8300, &OBJC_CLASS___MRAVOutputDevice_ptr);
      uint64_t v42 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v40, v41);

      if ((unint64_t)v42 >> 62)
      {
        if (v42 < 0) {
          uint64_t v76 = v42;
        }
        else {
          uint64_t v76 = v42 & 0xFFFFFFFFFFFFFF8LL;
        }
        swift_bridgeObjectRetain();
        uint64_t v77 = _CocoaArrayWrapper.endIndex.getter(v76);
        swift_bridgeObjectRelease();
        if (!v77)
        {
LABEL_39:
          swift_bridgeObjectRelease();
LABEL_40:
          ((void (*)(_BYTE *, uint64_t, uint64_t))v151)(v8, v152, v4);
          id v78 = v38;
          uint64_t v79 = (os_log_s *)Logger.logObject.getter(v78);
          os_log_type_t v80 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v79, v80))
          {
            uint64_t v81 = swift_slowAlloc(22LL, -1LL);
            uint64_t v82 = (void *)swift_slowAlloc(8LL, -1LL);
            uint64_t v83 = swift_slowAlloc(32LL, -1LL);
            uint64_t v156 = v83;
            *(_DWORD *)uint64_t v81 = v142.n128_u32[0];
            uint64_t v84 = _typeName(_:qualified:)(v144, 0LL);
            *(void *)(v81 + 4) = sub_10015ADC4(v84, v85, &v156);
            uint64_t v14 = v146;
            uint64_t v4 = v147;
            swift_bridgeObjectRelease();
            *(_WORD *)(v81 + 12) = 2112;
            *(void *)(v81 + 14) = v78;
            void *v82 = v78;

            _os_log_impl( (void *)&_mh_execute_header,  v79,  v80,  "[%s] updateEndpoints - endpoint: %@ has no output device with a groupID",  (uint8_t *)v81,  0x16u);
            uint64_t v86 = sub_100156B68((uint64_t *)&unk_1003FB7E0);
            swift_arrayDestroy(v82, 1LL, v86);
            uint64_t v87 = v82;
            uint64_t v8 = v148;
            swift_slowDealloc(v87, -1LL, -1LL);
            swift_arrayDestroy(v83, 1LL, v141);
            swift_slowDealloc(v83, -1LL, -1LL);
            swift_slowDealloc(v81, -1LL, -1LL);
          }

          else
          {
          }

          ((void (*)(_BYTE *, uint64_t))v150)(v8, v4);
LABEL_44:
          unint64_t v33 = v153;
          uint64_t v31 = (uint64_t)v154;
          uint64_t v36 = &selRef_initWithListeningMode_outputDeviceUID_;
LABEL_45:
          ++v35;
          goto LABEL_46;
        }
      }

      else if (!*(void *)((v42 & 0xFFFFFFFFFFFFF8LL) + 0x10))
      {
        goto LABEL_39;
      }

      if ((v42 & 0xC000000000000001LL) != 0)
      {
        id v43 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v42);
      }

      else
      {
        if (!*(void *)((v42 & 0xFFFFFFFFFFFFF8LL) + 0x10)) {
          goto LABEL_51;
        }
        id v43 = *(id *)(v42 + 32);
      }

      uint64_t v44 = v43;
      swift_bridgeObjectRelease();
      id v45 = [v44 groupID];

      if (!v45) {
        goto LABEL_40;
      }
      uint64_t v46 = static String._unconditionallyBridgeFromObjectiveC(_:)(v45);
      uint64_t v48 = v47;

      swift_bridgeObjectRetain();
      uint64_t v143 = v46;
      sub_10015B404(&v156, v46, v48);
      uint64_t v49 = swift_bridgeObjectRelease();
      uint64_t v50 = *v140;
      if (!*(void *)(*v140 + 16LL)) {
        goto LABEL_29;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v51 = sub_10015CAD4(v143, v48);
      if ((v52 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v49 = swift_bridgeObjectRelease();
LABEL_29:
        int v57 = v136;
        (*(void (**)(uint64_t))(*v145 + 304LL))(v49);
        uint64_t v58 = v138;
        uint64_t v59 = v137;
        uint64_t v60 = v139;
        (*(void (**)(_BYTE *, void, uint64_t))(v138 + 104))(v137, v135, v139);
        uint64_t v61 = sub_100156FEC( &qword_1003F8D38,  (uint64_t (*)(uint64_t))&type metadata accessor for RoutingMode,  (uint64_t)&protocol conformance descriptor for RoutingMode);
        char v62 = dispatch thunk of static Equatable.== infix(_:_:)(v57, v59, v60, v61);
        uint64_t v63 = *(void (**)(_BYTE *, uint64_t))(v58 + 8);
        uint64_t v4 = v147;
        unint64_t v64 = v59;
        uint64_t v14 = v146;
        v63(v64, v60);
        uint64_t v65 = v60;
        uint64_t v8 = v148;
        v63(v57, v65);
        if ((v62 & 1) == 0
          || (id v66 = [v38 externalDevice], v66, v66)
          && ([v38 isConnected] & 1) != 0)
        {
          uint64_t v67 = type metadata accessor for HostedRoutingSessionDataSource.EndpointEntry();
          uint64_t v68 = swift_allocObject(v67, 81LL, 7LL);
          *(_BYTE *)(v68 + 16) = 0;
          *(void *)(v68 + 24) = 0LL;
          swift_bridgeObjectRetain();
          id v69 = v38;
          *(void *)(v68 + 48) = sub_1001A8998();
          *(void *)(v68 + 56) = v70;
          *(_BYTE *)(v68 + 80) = 1;
          *(void *)(v68 + 64) = v69;
          *(void *)(v68 + 72) = v69;
          uint64_t v71 = v4;
          uint64_t v72 = v143;
          *(void *)(v68 + 32) = v143;
          *(void *)(v68 + 40) = v48;
          uint64_t v73 = v140;
          swift_beginAccess(v140, &v156, 33LL, 0LL);
          id v134 = v69;
          swift_retain(v68);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v73);
          uint64_t v157 = *v73;
          *uint64_t v73 = 0x8000000000000000LL;
          uint64_t v75 = v72;
          uint64_t v4 = v71;
          sub_10028D5E8(v68, v75, v48, isUniquelyReferenced_nonNull_native);
          *uint64_t v73 = v157;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_endAccess(&v156);
          sub_10026ABFC(v68);
          swift_release(v68);
        }

        else
        {

          swift_bridgeObjectRelease();
        }

        goto LABEL_44;
      }

      uint64_t v53 = *(void *)(*(void *)(v50 + 56) + 8 * v51);
      swift_retain(v53);
      swift_bridgeObjectRelease_n(v48, 2LL);
      swift_bridgeObjectRelease();
      sub_100261D68(v38);
      char v55 = v54;

      if ((v55 & 1) == 0)
      {
        swift_release(v53);
        uint64_t v31 = (uint64_t)v154;
        uint64_t v36 = &selRef_initWithListeningMode_outputDeviceUID_;
        uint64_t v4 = v147;
        goto LABEL_45;
      }

      int v56 = *(unsigned __int8 *)(v53 + 16);
      swift_release(v53);
      BOOL v111 = v56 == 2;
      uint64_t v31 = (uint64_t)v154;
      uint64_t v36 = &selRef_initWithListeningMode_outputDeviceUID_;
      uint64_t v4 = v147;
      if (!v111) {
        goto LABEL_45;
      }
      int v133 = 1;
      ++v35;
LABEL_46:
    }

    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    if (v14 < 0) {
      uint64_t v88 = v14;
    }
    else {
      uint64_t v88 = v14 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
    uint64_t v31 = _CocoaArrayWrapper.endIndex.getter(v88);
    swift_bridgeObjectRelease();
    uint64_t v32 = qword_100401648 + 6584;
  }

  int v133 = 0;
LABEL_57:
  swift_bridgeObjectRelease();
  char v89 = (void *)((char *)v145 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_endpoints);
  swift_beginAccess( (char *)v145 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_endpoints,  &v157,  0LL,  0LL);
  os_log_type_t v150 = v89;
  uint64_t v90 = *v89;
  uint64_t v91 = *v89 + 64LL;
  uint64_t v92 = 1LL << *(_BYTE *)(*v89 + 32LL);
  if (v92 < 64) {
    uint64_t v93 = ~(-1LL << v92);
  }
  else {
    uint64_t v93 = -1LL;
  }
  unint64_t v94 = v93 & *(void *)(*v89 + 64LL);
  int64_t v153 = (unint64_t)(v92 + 63) >> 6;
  swift_bridgeObjectRetain_n(v90, 2LL);
  LODWORD(v151) = 0;
  int64_t v95 = 0LL;
  uint64_t v152 = v91;
  while (1)
  {
    uint64_t v96 = v160;
    uint64_t v154 = v160 + 56;
    if (!v94) {
      break;
    }
    while (1)
    {
      while (1)
      {
        unint64_t v97 = __clz(__rbit64(v94));
        v94 &= v94 - 1;
        unint64_t v98 = v97 | (v95 << 6);
LABEL_84:
        uint64_t v102 = (uint64_t *)(*(void *)(v90 + 48) + 16 * v98);
        uint64_t v104 = *v102;
        uint64_t v103 = v102[1];
        if (!*((void *)v96 + 2))
        {
          swift_bridgeObjectRetain();
LABEL_109:
          uint64_t v123 = v150;
          goto LABEL_111;
        }

        Hasher.init(_seed:)(&v156, *((void *)v96 + 5));
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        String.hash(into:)(&v156, v104, v103);
        Swift::Int v105 = Hasher._finalize()();
        uint64_t v106 = -1LL << v96[32];
        unint64_t v107 = v105 & ~v106;
        if (((*(void *)&v154[(v107 >> 3) & 0xFFFFFFFFFFFFF8LL] >> v107) & 1) == 0)
        {
          swift_bridgeObjectRelease();
          goto LABEL_109;
        }

        uint64_t v108 = *((void *)v96 + 6);
        uint64_t v109 = (void *)(v108 + 16 * v107);
        uint64_t v110 = v109[1];
        BOOL v111 = *v109 == v104 && v110 == v103;
        if (!v111 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v109, v110, v104, v103, 0LL) & 1) == 0) {
          break;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!v94) {
          goto LABEL_66;
        }
      }

      uint64_t v112 = v90;
      uint64_t v113 = ~v106;
      unint64_t v114 = (v107 + 1) & ~v106;
      if (((*(void *)&v154[(v114 >> 3) & 0xFFFFFFFFFFFFF8LL] >> v114) & 1) == 0) {
        goto LABEL_110;
      }
      uint64_t v115 = (void *)(v108 + 16 * v114);
      uint64_t v116 = v115[1];
      BOOL v117 = *v115 == v104 && v116 == v103;
      if (!v117 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v115, v116, v104, v103, 0LL) & 1) == 0) {
        break;
      }
LABEL_97:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v90 = v112;
      uint64_t v91 = v152;
      if (!v94) {
        goto LABEL_66;
      }
    }

    for (unint64_t i = v114 + 1; ; unint64_t i = v119 + 1)
    {
      unint64_t v119 = i & v113;
      uint64_t v120 = (void *)(v108 + 16 * v119);
      uint64_t v121 = v120[1];
      BOOL v122 = *v120 == v104 && v121 == v103;
      if (v122 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v120, v121, v104, v103, 0LL) & 1) != 0) {
        goto LABEL_97;
      }
    }

LABEL_110:
    swift_bridgeObjectRelease();
    uint64_t v90 = v112;
    uint64_t v123 = v150;
    uint64_t v91 = v152;
LABEL_111:
    swift_beginAccess(v123, &v156, 33LL, 0LL);
    swift_bridgeObjectRetain();
    os_log_type_t v124 = v123;
    unint64_t v125 = sub_10015CAD4(v104, v103);
    char v127 = v126;
    swift_bridgeObjectRelease();
    if ((v127 & 1) != 0)
    {
      char v128 = swift_isUniquelyReferenced_nonNull_native(*v124);
      uint64_t v129 = *v124;
      uint64_t v155 = *v124;
      *os_log_type_t v124 = 0x8000000000000000LL;
      if ((v128 & 1) == 0)
      {
        sub_10028DC8C();
        uint64_t v129 = v155;
      }

      swift_bridgeObjectRelease();
      uint64_t v130 = *(void *)(*(void *)(v129 + 56) + 8 * v125);
      sub_1001B1630(v125, v129);
      *os_log_type_t v124 = v129;
      swift_release(v130);
      swift_bridgeObjectRelease();
    }

    swift_bridgeObjectRelease();
    swift_endAccess(&v156);
    LODWORD(v151) = 1;
  }

void sub_10026ABFC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = type metadata accessor for RoutingMode(0LL);
  uint64_t v60 = *(void *)(v5 - 8);
  uint64_t v61 = v5;
  __chkstk_darwin(v5);
  uint64_t v59 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for Logger(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v11 = *(void *)(a1 + 40);
  uint64_t v63 = *(void *)(a1 + 32);
  uint64_t v13 = *(void *)(a1 + 48);
  unint64_t v12 = *(void *)(a1 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1001741A8();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v14, v7);
  swift_bridgeObjectRetain_n(v11, 2LL);
  swift_bridgeObjectRetain_n(v12, 2LL);
  swift_retain_n(a1, 2LL);
  uint64_t v15 = swift_retain_n(v2, 2LL);
  char v62 = v10;
  uint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
  os_log_type_t v17 = static os_log_type_t.default.getter(v16);
  int v18 = v17;
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v19 = swift_slowAlloc(52LL, -1LL);
    uint64_t v56 = v7;
    uint64_t v20 = v19;
    uint64_t v54 = swift_slowAlloc(160LL, -1LL);
    aBlock[0] = v54;
    *(_DWORD *)uint64_t v20 = 136316162;
    os_log_t v53 = v16;
    uint64_t v21 = _typeName(_:qualified:)(v4, 0LL);
    uint64_t v55 = v8;
    uint64_t v64 = sub_10015ADC4(v21, v22, aBlock);
    uint64_t v57 = v4;
    uint64_t v58 = aBlock;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, aBlock, v20 + 4, v20 + 12);
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v64 = sub_10015ADC4(v13, v12, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, aBlock, v20 + 14, v20 + 22);
    swift_bridgeObjectRelease_n(v12, 3LL);
    *(_WORD *)(v20 + 22) = 2080;
    id v23 = [*(id *)(a1 + 64) uniqueIdentifier];
    uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
    uint64_t v51 = v13;
    uint64_t v25 = v24;
    int v52 = v18;
    unint64_t v27 = v26;

    uint64_t v64 = sub_10015ADC4(v25, v27, aBlock);
    int64_t v28 = v58;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, v58, v20 + 24, v20 + 32);
    swift_release_n(a1, 2LL);
    uint64_t v29 = v63;
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 32) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v64 = sub_10015ADC4(v29, v11, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, v28, v20 + 34, v20 + 42);
    uint64_t v30 = swift_bridgeObjectRelease_n(v11, 3LL);
    *(_WORD *)(v20 + 42) = 2080;
    uint64_t v31 = v59;
    (*(void (**)(uint64_t))(*v2 + 304LL))(v30);
    uint64_t v32 = sub_100156FEC( &qword_1003F88F0,  (uint64_t (*)(uint64_t))&type metadata accessor for RoutingMode,  (uint64_t)&protocol conformance descriptor for RoutingMode);
    uint64_t v33 = v61;
    uint64_t v34 = dispatch thunk of CustomStringConvertible.description.getter(v61, v32);
    unint64_t v36 = v35;
    id v37 = v31;
    uint64_t v38 = v51;
    (*(void (**)(char *, uint64_t))(v60 + 8))(v37, v33);
    uint64_t v64 = sub_10015ADC4(v34, v36, aBlock);
    uint64_t v4 = v57;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, v58, v20 + 44, v20 + 52);
    swift_release_n(v2, 2LL);
    swift_bridgeObjectRelease();
    os_log_t v39 = v53;
    _os_log_impl( (void *)&_mh_execute_header,  v53,  (os_log_type_t)v52,  "[%s] connectToEntry<%s> - connect to endpoint: %s with groupID: %s, routingMode: %s",  (uint8_t *)v20,  0x34u);
    uint64_t v40 = v54;
    swift_arrayDestroy(v54, 5LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v40, -1LL, -1LL);
    swift_slowDealloc(v20, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v55 + 8))(v62, v56);
  }

  else
  {

    swift_release_n(v2, 2LL);
    swift_bridgeObjectRelease_n(v11, 2LL);
    swift_release_n(a1, 2LL);
    swift_bridgeObjectRelease_n(v12, 2LL);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v62, v7);
    uint64_t v38 = v13;
  }

  *(_BYTE *)(a1 + 16) = 1;
  uint64_t v41 = *(void **)(a1 + 64);
  id v42 = objc_allocWithZone(&OBJC_CLASS___MRRequestDetails);
  id v43 = v41;
  NSString v44 = String._bridgeToObjectiveC()();
  NSString v45 = String._bridgeToObjectiveC()();
  id v46 = [v42 initWithName:v44 requestID:0 reason:v45 userInitiated:0];

  uint64_t v47 = (void *)swift_allocObject(&unk_1003ABA80, 72LL, 7LL);
  v47[2] = v2;
  v47[3] = v38;
  v47[4] = v12;
  v47[5] = a1;
  v47[6] = v63;
  v47[7] = v11;
  v47[8] = v4;
  aBlock[4] = (uint64_t)sub_10028EFF8;
  id v66 = v47;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = (uint64_t)sub_100157E54;
  aBlock[3] = (uint64_t)&unk_1003ABA98;
  uint64_t v48 = _Block_copy(aBlock);
  uint64_t v49 = v66;
  swift_retain(a1);
  swift_retain(v2);
  swift_release(v49);
  [v43 connectToExternalDeviceWithOptions:0 details:v46 completion:v48];

  _Block_release(v48);
}

uint64_t sub_10026B19C( uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8)
{
  uint64_t v84 = a8;
  uint64_t v15 = type metadata accessor for Logger(0LL);
  uint64_t v91 = *(void *)(v15 - 8);
  uint64_t v92 = v15;
  __chkstk_darwin(v15);
  uint64_t v90 = (char *)&v73 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v89 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v87 = *(void *)(v89 - 8);
  __chkstk_darwin(v89);
  uint64_t v88 = (char *)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v86 = *(void *)(v18 - 8);
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v73 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v85 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 280LL))(v19);
  if (a1)
  {
    uint64_t v82 = a6;
    uint64_t v83 = v18;
    uint64_t v22 = sub_1001741A8();
    (*(void (**)(char *, uint64_t, uint64_t))(v91 + 16))(v90, v22, v92);
    swift_bridgeObjectRetain();
    swift_retain(a5);
    swift_bridgeObjectRetain();
    swift_errorRetain(a1);
    swift_bridgeObjectRetain();
    swift_retain(a5);
    swift_bridgeObjectRetain();
    uint64_t v23 = swift_errorRetain(a1);
    uint64_t v24 = (os_log_s *)Logger.logObject.getter(v23);
    os_log_type_t v25 = static os_log_type_t.default.getter(v24);
    int v26 = v25;
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v27 = swift_slowAlloc(52LL, -1LL);
      os_log_t v78 = v24;
      uint64_t v28 = v27;
      uint64_t v29 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
      uint64_t v76 = v29;
      uint64_t v79 = (void **)swift_slowAlloc(128LL, -1LL);
      __int128 aBlock = v79;
      *(_DWORD *)uint64_t v28 = 136316162;
      int v77 = v26;
      uint64_t v30 = _typeName(_:qualified:)(v84, 0LL);
      uint64_t v81 = a5;
      uint64_t v93 = (void *)sub_10015ADC4(v30, v31, (uint64_t *)&aBlock);
      uint64_t v80 = a2;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, &aBlock, v28 + 4, v28 + 12);
      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v75 = a3;
      uint64_t v93 = (void *)sub_10015ADC4(a3, a4, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, &aBlock, v28 + 14, v28 + 22);
      swift_bridgeObjectRelease_n(a4, 3LL);
      *(_WORD *)(v28 + 22) = 2112;
      swift_errorRetain(a1);
      uint64_t v32 = _swift_stdlib_bridgeErrorToNSError(a1);
      uint64_t v93 = (void *)v32;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, &aBlock, v28 + 24, v28 + 32);
      *uint64_t v29 = v32;
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      *(_WORD *)(v28 + 32) = 2080;
      uint64_t v74 = v28 + 34;
      id v33 = [*(id *)(v81 + 64) uniqueIdentifier];
      uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
      unint64_t v36 = v35;

      uint64_t v37 = v34;
      a5 = v81;
      uint64_t v93 = (void *)sub_10015ADC4(v37, v36, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, &aBlock, v74, v28 + 42);
      swift_release_n(a5, 2LL);
      uint64_t v38 = v75;
      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 42) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v39 = v82;
      uint64_t v93 = (void *)sub_10015ADC4(v82, a7, (uint64_t *)&aBlock);
      a2 = v80;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, &aBlock, v28 + 44, v28 + 52);
      swift_bridgeObjectRelease_n(a7, 3LL);
      os_log_t v40 = v78;
      _os_log_impl( (void *)&_mh_execute_header,  v78,  (os_log_type_t)v77,  "[%s] connectToEntry<%s> - error: %@ connecting to endpoint: %s with groupID: %s",  (uint8_t *)v28,  0x34u);
      uint64_t v41 = sub_100156B68((uint64_t *)&unk_1003FB7E0);
      id v42 = v76;
      swift_arrayDestroy(v76, 1LL, v41);
      swift_slowDealloc(v42, -1LL, -1LL);
      id v43 = v79;
      swift_arrayDestroy(v79, 4LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v43, -1LL, -1LL);
      uint64_t v44 = v28;
      uint64_t v45 = v84;
      swift_slowDealloc(v44, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v91 + 8))(v90, v92);
    }

    else
    {
      swift_bridgeObjectRelease_n(a4, 2LL);
      swift_errorRelease(a1);
      swift_errorRelease(a1);

      swift_bridgeObjectRelease_n(a7, 2LL);
      swift_release_n(a5, 2LL);
      (*(void (**)(char *, uint64_t))(v91 + 8))(v90, v92);
      uint64_t v39 = v82;
      uint64_t v38 = a3;
      uint64_t v45 = v84;
    }

    uint64_t v60 = (void *)swift_allocObject(&unk_1003ABB20, 72LL, 7LL);
    v60[2] = a2;
    v60[3] = a5;
    v60[4] = v38;
    v60[5] = a4;
    v60[6] = v39;
    v60[7] = a7;
    v60[8] = v45;
    unint64_t v98 = sub_10028F400;
    int64_t v99 = v60;
    __int128 aBlock = _NSConcreteStackBlock;
    uint64_t v95 = 1107296256LL;
    uint64_t v96 = sub_100157EA8;
    unint64_t v97 = &unk_1003ABB38;
    uint64_t v61 = _Block_copy(&aBlock);
    uint64_t v62 = a2;
    uint64_t v63 = v61;
    swift_retain(v62);
    swift_bridgeObjectRetain();
    swift_retain(a5);
    uint64_t v64 = swift_bridgeObjectRetain();
    static DispatchQoS.unspecified.getter(v64);
    uint64_t v93 = _swiftEmptyArrayStorage;
    uint64_t v65 = sub_100156FEC( (unint64_t *)&qword_1003FADB0,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    uint64_t v66 = sub_100156B68((uint64_t *)&unk_1003F9A70);
    uint64_t v67 = sub_1001604E8( (unint64_t *)&qword_1003FADC0,  (uint64_t *)&unk_1003F9A70,  (uint64_t)&protocol conformance descriptor for [A]);
    uint64_t v68 = v88;
    uint64_t v69 = v66;
    uint64_t v70 = v89;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v93, v69, v67, v89, v65);
    uint64_t v71 = (void *)v85;
    OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v21, v68, v63);
    _Block_release(v63);

    (*(void (**)(char *, uint64_t))(v87 + 8))(v68, v70);
    (*(void (**)(char *, uint64_t))(v86 + 8))(v21, v83);
  }

  else
  {
    id v46 = (void *)swift_allocObject(&unk_1003ABAD0, 72LL, 7LL);
    v46[2] = a2;
    v46[3] = a6;
    v46[4] = a7;
    v46[5] = a5;
    uint64_t v47 = (void *)v85;
    v46[6] = v85;
    v46[7] = a3;
    v46[8] = a4;
    unint64_t v98 = sub_10028F050;
    int64_t v99 = v46;
    __int128 aBlock = _NSConcreteStackBlock;
    uint64_t v95 = 1107296256LL;
    uint64_t v96 = sub_100157EA8;
    unint64_t v97 = &unk_1003ABAE8;
    uint64_t v48 = _Block_copy(&aBlock);
    uint64_t v49 = a2;
    uint64_t v50 = v48;
    swift_retain(v49);
    swift_bridgeObjectRetain();
    swift_retain(a5);
    id v51 = v47;
    uint64_t v52 = swift_bridgeObjectRetain();
    static DispatchQoS.unspecified.getter(v52);
    uint64_t v93 = _swiftEmptyArrayStorage;
    os_log_t v53 = v21;
    uint64_t v54 = sub_100156FEC( (unint64_t *)&qword_1003FADB0,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    uint64_t v55 = sub_100156B68((uint64_t *)&unk_1003F9A70);
    uint64_t v56 = sub_1001604E8( (unint64_t *)&qword_1003FADC0,  (uint64_t *)&unk_1003F9A70,  (uint64_t)&protocol conformance descriptor for [A]);
    uint64_t v57 = v88;
    uint64_t v58 = v55;
    uint64_t v59 = v89;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v93, v58, v56, v89, v54);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v53, v57, v50);
    _Block_release(v50);

    (*(void (**)(char *, uint64_t))(v87 + 8))(v57, v59);
    (*(void (**)(char *, uint64_t))(v86 + 8))(v53, v18);
  }

  return swift_release(v99);
}

uint64_t sub_10026B954( uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7)
{
  uint64_t v67 = a7;
  unint64_t v74 = a6;
  uint64_t v69 = a5;
  unint64_t v73 = a4;
  uint64_t v68 = a3;
  uint64_t v82 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v9 = *(void *)(v82 - 8);
  __chkstk_darwin(v82);
  unint64_t v11 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v78 = *(void *)(v12 - 8);
  uint64_t v79 = v12;
  __chkstk_darwin(v12);
  int v77 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v76 = type metadata accessor for DispatchTime(0LL);
  uint64_t v71 = *(void *)(v76 - 8);
  uint64_t v14 = __chkstk_darwin(v76);
  uint64_t v70 = (char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v14);
  uint64_t v75 = (char *)&v64 - v16;
  uint64_t v17 = type metadata accessor for Logger(0LL);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  double v89 = 30.0;
  uint64_t v22 = *(void *)(a2 + 32);
  uint64_t v21 = *(void *)(a2 + 40);
  uint64_t v72 = a2;
  uint64_t v23 = (uint64_t *)(a1 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_failedEndpointReconnectIntervals);
  swift_beginAccess( a1 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_failedEndpointReconnectIntervals,  v88,  0LL,  0LL);
  uint64_t v24 = *v23;
  if (!*(void *)(*v23 + 16)) {
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v25 = sub_10015CAD4(v22, v21);
  if ((v26 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_7:
    swift_beginAccess(v23, aBlock, 33LL, 0LL);
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v23);
    uint64_t v86 = *v23;
    uint64_t *v23 = 0x8000000000000000LL;
    sub_10028DAA0(v22, v21, isUniquelyReferenced_nonNull_native, 30.0);
    uint64_t *v23 = v86;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess(aBlock);
    goto LABEL_8;
  }

  double v27 = *(double *)(*(void *)(v24 + 56) + 8 * v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  double v28 = v27 * 4.0;
  if (v27 * 4.0 <= 1800.0) {
    double v28 = 1800.0;
  }
  double v89 = v28;
LABEL_8:
  uint64_t v30 = sub_1001741A8();
  uint64_t v31 = v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, v30, v17);
  uint64_t v32 = *(void *)&v89;
  unint64_t v33 = v73;
  swift_bridgeObjectRetain_n(v73, 2LL);
  uint64_t v34 = v18;
  unint64_t v35 = v74;
  uint64_t v36 = swift_bridgeObjectRetain_n(v74, 2LL);
  uint64_t v37 = (os_log_s *)Logger.logObject.getter(v36);
  os_log_type_t v38 = static os_log_type_t.default.getter(v37);
  BOOL v39 = os_log_type_enabled(v37, v38);
  uint64_t v80 = v11;
  uint64_t v81 = v9;
  if (v39)
  {
    uint64_t v40 = swift_slowAlloc(42LL, -1LL);
    uint64_t v66 = v31;
    uint64_t v41 = v40;
    uint64_t v65 = swift_slowAlloc(96LL, -1LL);
    aBlock[0] = v65;
    *(_DWORD *)uint64_t v41 = 136315906;
    uint64_t v42 = _typeName(_:qualified:)(v67, 0LL);
    uint64_t v67 = v34;
    uint64_t v86 = sub_10015ADC4(v42, v43, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v86, v87, v41 + 4, v41 + 12);
    swift_bridgeObjectRelease();
    *(_WORD *)(v41 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v86 = sub_10015ADC4(v68, v33, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v86, v87, v41 + 14, v41 + 22);
    swift_bridgeObjectRelease_n(v33, 3LL);
    *(_WORD *)(v41 + 22) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v86 = sub_10015ADC4(v69, v35, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v86, v87, v41 + 24, v41 + 32);
    swift_bridgeObjectRelease_n(v35, 3LL);
    *(_WORD *)(v41 + 32) = 2048;
    uint64_t v86 = v32;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v86, v87, v41 + 34, v41 + 42);
    _os_log_impl( (void *)&_mh_execute_header,  v37,  v38,  "[%s] connectToEntry<%s> - pause reconnection attempts for groupID: %s for: %fs",  (uint8_t *)v41,  0x2Au);
    uint64_t v44 = v65;
    swift_arrayDestroy(v65, 3LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v44, -1LL, -1LL);
    swift_slowDealloc(v41, -1LL, -1LL);

    uint64_t v45 = (*(uint64_t (**)(char *, uint64_t))(v67 + 8))(v20, v66);
  }

  else
  {

    swift_bridgeObjectRelease_n(v35, 2LL);
    swift_bridgeObjectRelease_n(v33, 2LL);
    uint64_t v45 = (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v20, v31);
  }

  uint64_t v46 = v72;
  uint64_t v47 = v71;
  uint64_t v48 = v70;
  uint64_t v49 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 280LL))(v45);
  static DispatchTime.now()();
  swift_beginAccess(&v89, &v86, 0LL, 0LL);
  uint64_t v50 = v75;
  + infix(_:_:)(v48, v89);
  id v51 = *(void (**)(char *, uint64_t))(v47 + 8);
  uint64_t v52 = v76;
  v51(v48, v76);
  uint64_t v53 = swift_allocObject(&unk_1003ABB70, 32LL, 7LL);
  *(void *)(v53 + 16) = a1;
  *(void *)(v53 + 24) = v46;
  aBlock[4] = (uint64_t)sub_10028F438;
  uint64_t v85 = v53;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = (uint64_t)sub_100157EA8;
  aBlock[3] = (uint64_t)&unk_1003ABB88;
  uint64_t v54 = _Block_copy(aBlock);
  swift_retain(a1);
  uint64_t v55 = swift_retain(v46);
  uint64_t v56 = v77;
  static DispatchQoS.unspecified.getter(v55);
  uint64_t v83 = _swiftEmptyArrayStorage;
  uint64_t v57 = sub_100156FEC( (unint64_t *)&qword_1003FADB0,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v58 = sub_100156B68((uint64_t *)&unk_1003F9A70);
  uint64_t v59 = sub_1001604E8( (unint64_t *)&qword_1003FADC0,  (uint64_t *)&unk_1003F9A70,  (uint64_t)&protocol conformance descriptor for [A]);
  uint64_t v60 = v80;
  uint64_t v61 = v58;
  uint64_t v62 = v82;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v83, v61, v59, v82, v57);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v50, v56, v60, v54);
  _Block_release(v54);

  (*(void (**)(char *, uint64_t))(v81 + 8))(v60, v62);
  (*(void (**)(char *, uint64_t))(v78 + 8))(v56, v79);
  v51(v50, v52);
  return swift_release(v85);
}

uint64_t sub_10026C048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v27 = a2;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v26 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = (void *)Notification.name.getter(v11);
  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  uint64_t v17 = v16;

  uint64_t v18 = (void *)swift_allocObject(&unk_1003ABC60, 48LL, 7LL);
  v18[2] = a3;
  v18[3] = a4;
  v18[4] = v15;
  v18[5] = v17;
  aBlock[4] = sub_10028F4F4;
  uint64_t v30 = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_100157EA8;
  aBlock[3] = &unk_1003ABC78;
  uint64_t v19 = _Block_copy(aBlock);
  swift_retain(a3);
  uint64_t v20 = swift_retain(a4);
  static DispatchQoS.unspecified.getter(v20);
  double v28 = _swiftEmptyArrayStorage;
  uint64_t v21 = sub_100156FEC( (unint64_t *)&qword_1003FADB0,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v22 = sub_100156B68((uint64_t *)&unk_1003F9A70);
  uint64_t v23 = sub_1001604E8( (unint64_t *)&qword_1003FADC0,  (uint64_t *)&unk_1003F9A70,  (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v28, v22, v23, v6, v21);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v13, v8, v19);
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v8, v6);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  return swift_release(v30);
}

uint64_t sub_10026C260(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Notification(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = *(void (**)(char *))(a1 + 32);
  uint64_t v8 = *(void *)(a1 + 40);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)(a2);
  swift_retain(v8);
  v9(v7);
  swift_release(v8);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_10026C304(void *a1)
{
  uint64_t v50 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v3 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  uint64_t v49 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v47 = *(void *)(v5 - 8);
  uint64_t v48 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v51 = type metadata accessor for DispatchTime(0LL);
  uint64_t v8 = *(void *)(v51 - 8);
  uint64_t v9 = __chkstk_darwin(v51);
  uint64_t v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v42 - v12;
  uint64_t v14 = a1[4];
  uint64_t v15 = a1[5];
  uint64_t v52 = v1;
  uint64_t v16 = (uint64_t *)(v1 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_endpoints);
  swift_beginAccess(v1 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_endpoints, v59, 0LL, 0LL);
  uint64_t v17 = *v16;
  if (*(void *)(*v16 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v18 = sub_10015CAD4(v14, v15);
    if ((v19 & 1) != 0)
    {
      uint64_t v45 = v3;
      uint64_t v20 = *(void *)(*(void *)(v17 + 56) + 8 * v18);
      swift_retain(v20);
      swift_bridgeObjectRelease();
      uint64_t v21 = v20;
      swift_bridgeObjectRelease();
      uint64_t v22 = *(void *)(v20 + 48);
      uint64_t v23 = *(void **)(v20 + 56);
      uint64_t v24 = (void *)a1[7];
      uint64_t v46 = a1[6];
      BOOL v25 = v22 == v46 && v23 == v24;
      if (v25 || (_stringCompareWithSmolCheck(_:_:expecting:)(v22, v23, v46, v24, 0LL) & 1) != 0)
      {
        swift_beginAccess(v16, &aBlock, 33LL, 0LL);
        swift_bridgeObjectRetain();
        uint64_t v44 = v21;
        uint64_t v26 = sub_10028C7F4(v14, v15);
        swift_endAccess(&aBlock);
        swift_bridgeObjectRelease();
        uint64_t v27 = swift_release(v26);
        uint64_t v28 = v52;
        uint64_t v29 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v52 + 280LL))(v27);
        static DispatchTime.now()();
        + infix(_:_:)(v11, 1.0);
        unint64_t v43 = *(void (**)(char *, uint64_t))(v8 + 8);
        v43(v11, v51);
        uint64_t v57 = sub_10029256C;
        uint64_t v58 = v28;
        *(void *)&__int128 aBlock = _NSConcreteStackBlock;
        *((void *)&aBlock + 1) = 1107296256LL;
        uint64_t v55 = sub_100157EA8;
        uint64_t v56 = &unk_1003ABA48;
        uint64_t v30 = _Block_copy(&aBlock);
        uint64_t v31 = swift_retain(v28);
        static DispatchQoS.unspecified.getter(v31);
        uint64_t v53 = _swiftEmptyArrayStorage;
        uint64_t v32 = sub_100156FEC( (unint64_t *)&qword_1003FADB0,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
        uint64_t v33 = sub_100156B68((uint64_t *)&unk_1003F9A70);
        uint64_t v34 = sub_1001604E8( (unint64_t *)&qword_1003FADC0,  (uint64_t *)&unk_1003F9A70,  (uint64_t)&protocol conformance descriptor for [A]);
        unint64_t v35 = v24;
        uint64_t v36 = v49;
        uint64_t v37 = v33;
        uint64_t v38 = v50;
        dispatch thunk of SetAlgebra.init<A>(_:)(&v53, v37, v34, v50, v32);
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v13, v7, v36, v30);
        _Block_release(v30);

        (*(void (**)(char *, uint64_t))(v45 + 8))(v36, v38);
        (*(void (**)(char *, uint64_t))(v47 + 8))(v7, v48);
        v43(v13, v51);
        swift_release(v58);
        *(void *)&__int128 aBlock = 0LL;
        *((void *)&aBlock + 1) = 0xE000000000000000LL;
        _StringGuts.grow(_:)(35LL);
        swift_bridgeObjectRelease();
        strcpy((char *)&aBlock, "removeEntry<");
        BYTE13(aBlock) = 0;
        HIWORD(aBlock) = -5120;
        swift_bridgeObjectRetain();
        v39._countAndFlagsBits = v46;
        v39._object = v35;
        String.append(_:)(v39);
        swift_bridgeObjectRelease();
        v40._object = (void *)0x8000000100340350LL;
        v40._countAndFlagsBits = 0xD000000000000013LL;
        String.append(_:)(v40);
        v41._countAndFlagsBits = sub_100262454();
        String.append(_:)(v41);
        swift_bridgeObjectRelease();
        sub_10026CE38(aBlock, *((unint64_t *)&aBlock + 1));
        swift_release(v44);
        swift_bridgeObjectRelease();
      }

      else
      {
        swift_release(v21);
      }
    }

    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }

void sub_10026C750()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = type metadata accessor for Logger(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v64 - v8;
  uint64_t v10 = type metadata accessor for RoutingMode(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v70 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v64 - v15;
  uint64_t v69 = *(void (**)(void))(v2 + 304);
  ((void (*)(uint64_t))v69)(v14);
  int v17 = (*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v16, v10);
  if (v17 == enum case for RoutingMode.disabled(_:) || v17 == enum case for RoutingMode.prewarm(_:))
  {
    id v19 = sub_1002613F8();
    unsigned int v20 = [v19 discoveryMode];

    if (v20 == 2)
    {
      uint64_t v21 = sub_1001741A8();
      uint64_t v22 = v3;
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v9, v21, v3);
      uint64_t v23 = swift_retain_n(v1, 2LL);
      uint64_t v24 = (os_log_s *)Logger.logObject.getter(v23);
      os_log_type_t v25 = static os_log_type_t.default.getter(v24);
      int v26 = v25;
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v27 = swift_slowAlloc(22LL, -1LL);
        uint64_t v67 = v4;
        uint64_t v68 = v22;
        uint64_t v28 = v27;
        uint64_t v66 = swift_slowAlloc(64LL, -1LL);
        uint64_t v72 = v66;
        *(_DWORD *)uint64_t v28 = 136315394;
        int v65 = v26;
        uint64_t v29 = _typeName(_:qualified:)(v2, 0LL);
        uint64_t v71 = sub_10015ADC4(v29, v30, &v72);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, &v72, v28 + 4, v28 + 12);
        uint64_t v31 = swift_bridgeObjectRelease();
        *(_WORD *)(v28 + 12) = 2080;
        uint64_t v64 = v28 + 14;
        uint64_t v32 = v70;
        ((void (*)(uint64_t))v69)(v31);
        uint64_t v33 = sub_100156FEC( &qword_1003F88F0,  (uint64_t (*)(uint64_t))&type metadata accessor for RoutingMode,  (uint64_t)&protocol conformance descriptor for RoutingMode);
        uint64_t v34 = dispatch thunk of CustomStringConvertible.description.getter(v10, v33);
        unint64_t v36 = v35;
        (*(void (**)(char *, uint64_t))(v11 + 8))(v32, v10);
        uint64_t v71 = sub_10015ADC4(v34, v36, &v72);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, &v72, v64, v28 + 22);
        swift_release_n(v1, 2LL);
        swift_bridgeObjectRelease();
        _os_log_impl( (void *)&_mh_execute_header,  v24,  (os_log_type_t)v65,  "[%s] updateDiscovery - disable for routing mode: %s",  (uint8_t *)v28,  0x16u);
        uint64_t v37 = v66;
        swift_arrayDestroy(v66, 2LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v37, -1LL, -1LL);
        swift_slowDealloc(v28, -1LL, -1LL);

        (*(void (**)(char *, uint64_t))(v67 + 8))(v9, v68);
      }

      else
      {

        swift_release_n(v1, 2LL);
        (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v22);
      }

      id v58 = sub_1002613F8();
      [v58 setDiscoveryMode:0];
      goto LABEL_21;
    }
  }

  else
  {
    if (v17 != enum case for RoutingMode.localNetwork(_:) && v17 != enum case for RoutingMode.detailed(_:))
    {
      uint64_t v72 = 0LL;
      unint64_t v73 = 0xE000000000000000LL;
      _StringGuts.grow(_:)(47LL);
      swift_bridgeObjectRelease();
      uint64_t v72 = 91LL;
      unint64_t v73 = 0xE100000000000000LL;
      v59._countAndFlagsBits = _typeName(_:qualified:)(v2, 0LL);
      String.append(_:)(v59);
      swift_bridgeObjectRelease();
      v60._object = (void *)0x80000001003407F0LL;
      v60._countAndFlagsBits = 0xD00000000000002ALL;
      String.append(_:)(v60);
      uint64_t v61 = v70;
      v69();
      uint64_t v62 = sub_100156FEC( &qword_1003F88F0,  (uint64_t (*)(uint64_t))&type metadata accessor for RoutingMode,  (uint64_t)&protocol conformance descriptor for RoutingMode);
      v63._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v10, v62);
      String.append(_:)(v63);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v61, v10);
      _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  v72,  v73,  "mediaremoted/HostedRoutingSessionDataSource.swift",  49LL,  2LL,  591LL,  0);
      __break(1u);
      return;
    }

    id v39 = sub_1002613F8();
    unsigned int v40 = [v39 discoveryMode];

    if (!v40)
    {
      uint64_t v41 = sub_1001741A8();
      uint64_t v42 = v3;
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v41, v3);
      uint64_t v43 = swift_retain_n(v1, 2LL);
      uint64_t v44 = (os_log_s *)Logger.logObject.getter(v43);
      os_log_type_t v45 = static os_log_type_t.default.getter(v44);
      int v46 = v45;
      if (os_log_type_enabled(v44, v45))
      {
        uint64_t v47 = swift_slowAlloc(22LL, -1LL);
        uint64_t v67 = v4;
        uint64_t v68 = v42;
        uint64_t v48 = v47;
        uint64_t v66 = swift_slowAlloc(64LL, -1LL);
        uint64_t v72 = v66;
        *(_DWORD *)uint64_t v48 = 136315394;
        int v65 = v46;
        uint64_t v49 = _typeName(_:qualified:)(v2, 0LL);
        uint64_t v71 = sub_10015ADC4(v49, v50, &v72);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, &v72, v48 + 4, v48 + 12);
        uint64_t v51 = swift_bridgeObjectRelease();
        *(_WORD *)(v48 + 12) = 2080;
        uint64_t v64 = v48 + 14;
        uint64_t v52 = v70;
        ((void (*)(uint64_t))v69)(v51);
        uint64_t v53 = sub_100156FEC( &qword_1003F88F0,  (uint64_t (*)(uint64_t))&type metadata accessor for RoutingMode,  (uint64_t)&protocol conformance descriptor for RoutingMode);
        uint64_t v54 = dispatch thunk of CustomStringConvertible.description.getter(v10, v53);
        unint64_t v56 = v55;
        (*(void (**)(char *, uint64_t))(v11 + 8))(v52, v10);
        uint64_t v71 = sub_10015ADC4(v54, v56, &v72);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, &v72, v64, v48 + 22);
        swift_release_n(v1, 2LL);
        swift_bridgeObjectRelease();
        _os_log_impl( (void *)&_mh_execute_header,  v44,  (os_log_type_t)v65,  "[%s] updateDiscovery - enable for routing mode: %s",  (uint8_t *)v48,  0x16u);
        uint64_t v57 = v66;
        swift_arrayDestroy(v66, 2LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v57, -1LL, -1LL);
        swift_slowDealloc(v48, -1LL, -1LL);

        (*(void (**)(char *, uint64_t))(v67 + 8))(v7, v68);
      }

      else
      {

        swift_release_n(v1, 2LL);
        (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v42);
      }

      id v58 = sub_1002613F8();
      [v58 setDiscoveryMode:2];
LABEL_21:
    }
  }

  sub_100269D3C();
}

uint64_t sub_10026CE38(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v62 = a1;
  uint64_t v5 = *v2;
  uint64_t v6 = sub_100156B68(&qword_1003FCE10);
  uint64_t v64 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  Swift::String v63 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for Logger(0LL);
  uint64_t v9 = *(void (**)(char *, uint64_t))(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v53 - v13;
  uint64_t v15 = sub_1001741A8();
  uint64_t v16 = (void (*)(char *, uint64_t, uint64_t))*((void *)v9 + 2);
  uint64_t v58 = v15;
  Swift::String v59 = v16;
  ((void (*)(char *))v16)(v14);
  uint64_t v17 = swift_bridgeObjectRetain_n(a2, 2LL);
  unint64_t v18 = (os_log_s *)Logger.logObject.getter(v17);
  os_log_type_t v19 = static os_log_type_t.debug.getter();
  int v20 = v19;
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v21 = swift_slowAlloc(22LL, -1LL);
    uint64_t v61 = v12;
    uint64_t v22 = v21;
    uint64_t v56 = swift_slowAlloc(64LL, -1LL);
    v68[0] = v56;
    *(_DWORD *)uint64_t v22 = 136315394;
    uint64_t v54 = v22 + 4;
    uint64_t v23 = _typeName(_:qualified:)(v5, 0LL);
    Swift::String v60 = v9;
    int v55 = v20;
    uint64_t v66 = (void *)sub_10015ADC4(v23, v24, v68);
    uint64_t v57 = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v66, &v67, v54, v22 + 12);
    uint64_t v25 = v62;
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v66 = (void *)sub_10015ADC4(v25, a2, v68);
    uint64_t v5 = v57;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v66, &v67, v22 + 14, v22 + 22);
    swift_bridgeObjectRelease_n(a2, 3LL);
    _os_log_impl( (void *)&_mh_execute_header,  v18,  (os_log_type_t)v55,  "[%s] updateSessionsIfNeeded - reason: %s",  (uint8_t *)v22,  0x16u);
    uint64_t v26 = v56;
    swift_arrayDestroy(v56, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1LL, -1LL);
    uint64_t v27 = v22;
    uint64_t v12 = v61;
    swift_slowDealloc(v27, -1LL, -1LL);

    uint64_t v28 = (void (*)(char *, uint64_t))*((void *)v60 + 1);
  }

  else
  {

    swift_bridgeObjectRelease_n(a2, 2LL);
    uint64_t v28 = (void (*)(char *, uint64_t))*((void *)v9 + 1);
  }

  Swift::String v60 = v28;
  v28(v14, v8);
  swift_beginAccess( (char *)v3 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_endpoints,  v68,  0LL,  0LL);
  uint64_t v29 = swift_bridgeObjectRetain();
  unint64_t v30 = sub_10028EC30(v29, (void (*)(uint64_t, uint64_t, uint64_t))sub_10028E9A4);
  swift_bridgeObjectRelease();
  uint64_t v66 = v30;
  uint64_t KeyPath = swift_getKeyPath(&unk_100350A88);
  uint64_t v32 = v63;
  KeyPathComparator.init<A>(_:order:)(KeyPath, 0LL, &protocol witness table for String);
  uint64_t v33 = sub_100156B68(&qword_1003FCE18);
  uint64_t v34 = sub_1001604E8(&qword_1003FCE20, &qword_1003FCE18, (uint64_t)&protocol conformance descriptor for [A]);
  uint64_t v35 = sub_1001604E8( &qword_1003FCE28,  &qword_1003FCE10,  (uint64_t)&protocol conformance descriptor for KeyPathComparator<A>);
  uint64_t v36 = Sequence.sorted<A>(using:)(v32, v33, v6, v34, v35);
  (*(void (**)(char *, uint64_t))(v64 + 8))(v32, v6);
  uint64_t v37 = swift_bridgeObjectRelease();
  uint64_t v38 = (*(uint64_t (**)(uint64_t))(*v3 + 328LL))(v37);
  LOBYTE(v34) = sub_100275E34(v36, v38);
  swift_bridgeObjectRelease();
  if ((v34 & 1) == 0)
  {
    v59(v12, v58, v8);
    uint64_t v39 = swift_bridgeObjectRetain_n(a2, 2LL);
    unsigned int v40 = (os_log_s *)Logger.logObject.getter(v39);
    os_log_type_t v41 = static os_log_type_t.default.getter(v40);
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v42 = swift_slowAlloc(22LL, -1LL);
      uint64_t v64 = v8;
      uint64_t v43 = v42;
      uint64_t v44 = swift_slowAlloc(64LL, -1LL);
      uint64_t v61 = v12;
      uint64_t v45 = v44;
      uint64_t v66 = (void *)v44;
      *(_DWORD *)uint64_t v43 = 136315394;
      uint64_t v46 = _typeName(_:qualified:)(v5, 0LL);
      uint64_t v65 = sub_10015ADC4(v46, v47, (uint64_t *)&v66);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, &v66, v43 + 4, v43 + 12);
      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v65 = sub_10015ADC4(v62, a2, (uint64_t *)&v66);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, &v66, v43 + 14, v43 + 22);
      swift_bridgeObjectRelease_n(a2, 3LL);
      _os_log_impl( (void *)&_mh_execute_header,  v40,  v41,  "[%s] updateSessionsIfNeeded - updated because: %s",  (uint8_t *)v43,  0x16u);
      swift_arrayDestroy(v45, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v45, -1LL, -1LL);
      swift_slowDealloc(v43, -1LL, -1LL);

      uint64_t v48 = v61;
      uint64_t v49 = v64;
    }

    else
    {

      swift_bridgeObjectRelease_n(a2, 2LL);
      uint64_t v48 = v12;
      uint64_t v49 = v8;
    }

    v60(v48, v49);
    unint64_t v50 = *(void (**)(uint64_t))(*v3 + 336LL);
    uint64_t v51 = swift_bridgeObjectRetain();
    v50(v51);
    sub_10026D3D4(v36);
  }

  return swift_bridgeObjectRelease();
}

id sub_10026D3D4(uint64_t a1)
{
  uint64_t v120 = a1;
  uint64_t v2 = type metadata accessor for HostedRoutingItem(0LL);
  uint64_t v122 = *(void *)(v2 - 8);
  uint64_t v3 = __chkstk_darwin(v2);
  char v128 = (uint64_t *)((char *)&v106 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v106 - v5;
  uint64_t v7 = sub_100156B68(&qword_1003F9518);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v106 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v117 = type metadata accessor for HostedRoutingSourceSession(0LL);
  uint64_t v123 = *(void *)(v117 - 8);
  uint64_t v10 = __chkstk_darwin(v117);
  uint64_t v12 = (char *)&v106 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id result = (id)__chkstk_darwin(v10);
  uint64_t v124 = (uint64_t)&v106 - v14;
  uint64_t v112 = v1;
  uint64_t v15 = (uint64_t *)(v1 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements);
  uint64_t v16 = *(void *)(v1 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements + 16);
  if (!v16) {
    return result;
  }
  uint64_t v17 = *v15;
  uint64_t v18 = v15[1];
  swift_bridgeObjectRetain_n(v18, 2LL);
  swift_bridgeObjectRetain();
  id result = (id)sub_10028DA70(v17, v18, v16);
  if (!v18)
  {
LABEL_11:
    uint64_t v28 = v15[2];
    if (!v28) {
      return result;
    }
    goto LABEL_12;
  }

  os_log_type_t v19 = (uint64_t *)(v112 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_endpoints);
  swift_beginAccess(v112 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_endpoints, v129, 0LL, 0LL);
  uint64_t v20 = *v19;
  if (*(void *)(v20 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v21 = sub_10015CAD4(v17, v18);
    if ((v22 & 1) != 0)
    {
      uint64_t v23 = *(void *)(*(void *)(v20 + 56) + 8 * v21);
      swift_retain(v23);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_BYTE *)(v23 + 16) == 2)
      {
        uint64_t v25 = *(void *)(v23 + 32);
        uint64_t v24 = *(void *)(v23 + 40);
        if ((*(_BYTE *)(v23 + 80) & 1) != 0)
        {
          uint64_t v26 = *(void **)(v23 + 64);
          swift_bridgeObjectRetain();
          id v27 = [v26 resolvedOutputDevices];
        }

        else
        {
          unint64_t v98 = *(void **)(v23 + 72);
          swift_bridgeObjectRetain();
          id v27 = [v98 outputDevices];
        }

        id v99 = v27;
        if (v99)
        {
          uint64_t v100 = sub_10016083C(0LL, (unint64_t *)&qword_1003F8300, &OBJC_CLASS___MRAVOutputDevice_ptr);
          int64_t v101 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v99, v100);
        }

        else
        {
          int64_t v101 = _swiftEmptyArrayStorage;
        }

        uint64_t v102 = sub_1002622C0((uint64_t)v101);
        swift_bridgeObjectRelease();
        uint64_t v103 = *v15;
        uint64_t v104 = v15[1];
        Swift::Int v105 = (void *)v15[2];
        *uint64_t v15 = v25;
        v15[1] = v24;
        v15[2] = (uint64_t)v102;
        sub_10028E974(v103, v104, (uint64_t)v105);
        sub_10028DA70(v103, v104, (uint64_t)v105);
        sub_100263A50(v103, v104, v105);
        sub_10028DA70(v103, v104, (uint64_t)v105);
        return (id)swift_release(v23);
      }

      id result = (id)swift_release(v23);
      uint64_t v28 = v15[2];
      if (!v28) {
        return result;
      }
      goto LABEL_12;
    }

    swift_bridgeObjectRelease();
    id result = (id)swift_bridgeObjectRelease();
    goto LABEL_11;
  }

  id result = (id)swift_bridgeObjectRelease();
  uint64_t v28 = v15[2];
  if (!v28) {
    return result;
  }
LABEL_12:
  uint64_t v30 = *v15;
  uint64_t v29 = v15[1];
  sub_10028E974(*v15, v29, v28);
  swift_bridgeObjectRetain();
  sub_10028DA70(v30, v29, v28);
  uint64_t v116 = *(void *)(v28 + 16);
  if (!v116) {
    return (id)swift_bridgeObjectRelease();
  }
  uint64_t v110 = v15;
  uint64_t v126 = *(void *)(v120 + 16);
  uint64_t v115 = v28 + 32;
  BOOL v111 = (uint64_t *)(v112 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_endpoints);
  id result = (id)swift_beginAccess( v112 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_endpoints,  v131,  0LL,  0LL);
  unint64_t v31 = 0LL;
  uint64_t v118 = v9;
  uint64_t v121 = v12;
  uint64_t v114 = v28;
  while (v31 < *(void *)(v28 + 16))
  {
    unint64_t v125 = v31;
    uint64_t v32 = (uint64_t *)(v115 + 16 * v31);
    uint64_t v33 = v32[1];
    if (v126)
    {
      uint64_t v34 = *v32;
      uint64_t v35 = v123;
      uint64_t v36 = v120 + ((*(unsigned __int8 *)(v123 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v123 + 80));
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v37 = 0LL;
      unint64_t v127 = *(void *)(v35 + 72);
      uint64_t v119 = v36;
      while (1)
      {
        sub_1001A80F8(v36 + v127 * v37, (uint64_t)v12, type metadata accessor for HostedRoutingSourceSession);
        uint64_t v38 = *((void *)v12 + 4);
        uint64_t v39 = *(void *)(v38 + 16);
        if (v39) {
          break;
        }
LABEL_19:
        ++v37;
        sub_1001A813C((uint64_t)v12, type metadata accessor for HostedRoutingSourceSession);
        if (v37 == v126)
        {
          swift_bridgeObjectRelease();
          uint64_t v44 = 1LL;
          uint64_t v9 = v118;
          goto LABEL_27;
        }
      }

      uint64_t v40 = v122;
      uint64_t v41 = v38 + ((*(unsigned __int8 *)(v122 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v122 + 80));
      swift_bridgeObjectRetain_n(v38, 2LL);
      uint64_t v42 = *(void *)(v40 + 72);
      while (1)
      {
        sub_1001A80F8(v41, (uint64_t)v6, type metadata accessor for HostedRoutingItem);
        char v43 = sub_10024A768(v34, v33);
        sub_1001A813C((uint64_t)v6, type metadata accessor for HostedRoutingItem);
        if ((v43 & 1) != 0) {
          break;
        }
        v41 += v42;
        if (!--v39)
        {
          swift_bridgeObjectRelease_n(v38, 2LL);
          uint64_t v12 = v121;
          uint64_t v36 = v119;
          goto LABEL_19;
        }
      }

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n(v38, 2LL);
      uint64_t v12 = v121;
      uint64_t v9 = v118;
      sub_1001A81D4((uint64_t)v121, (uint64_t)v118, type metadata accessor for HostedRoutingSourceSession);
      uint64_t v44 = 0LL;
    }

    else
    {
      swift_bridgeObjectRetain();
      uint64_t v44 = 1LL;
    }

void sub_10026DE84()
{
  uint64_t v1 = v0;
  id v77 = *v0;
  uint64_t v2 = sub_100156B68(&qword_1003F8210);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v72 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for NSNotificationCenter.Publisher(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_100156B68((uint64_t *)&unk_1003FBED0);
  uint64_t v81 = *(void *)(v9 - 8);
  uint64_t v82 = v9;
  __chkstk_darwin(v9);
  unint64_t v73 = (char *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for Logger(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v75 = v1 + 2;
  swift_beginAccess(v1 + 2, v85, 0LL, 0LL);
  uint64_t v15 = (uint64_t)v1[2];
  if ((v15 & 0xC000000000000001LL) != 0)
  {
    if (v15 < 0) {
      uint64_t v16 = (uint64_t)v1[2];
    }
    else {
      uint64_t v16 = v15 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
    uint64_t v17 = __CocoaSet.count.getter(v16);
    swift_bridgeObjectRelease();
    if (v17) {
      return;
    }
  }

  else if (*(void *)(v15 + 16))
  {
    return;
  }

  uint64_t v18 = sub_1001741A8();
  os_log_type_t v19 = (uint64_t (*)(void))v11;
  uint64_t v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v18, v11);
  unint64_t v21 = (os_log_s *)Logger.logObject.getter(v20);
  os_log_type_t v22 = static os_log_type_t.default.getter(v21);
  int v23 = v22;
  BOOL v24 = os_log_type_enabled(v21, v22);
  uint64_t v78 = v6;
  uint64_t v79 = v5;
  if (v24)
  {
    uint64_t v25 = swift_slowAlloc(12LL, -1LL);
    LODWORD(v74) = v23;
    uint64_t v26 = (uint8_t *)v25;
    id v27 = (void *)swift_slowAlloc(32LL, -1LL);
    v84[0] = v27;
    uint64_t v76 = v19;
    *(_DWORD *)uint64_t v26 = 136315138;
    uint64_t v72 = v26 + 4;
    uint64_t v28 = _typeName(_:qualified:)(v77, 0LL);
    uint64_t v83 = sub_10015ADC4(v28, v29, (uint64_t *)v84);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v83, v84, v72, v26 + 12);
    swift_bridgeObjectRelease();
    _os_log_impl( (void *)&_mh_execute_header,  v21,  (os_log_type_t)v74,  "[%s] installNotificationObservers - installing",  v26,  0xCu);
    swift_arrayDestroy(v27, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v27, -1LL, -1LL);
    swift_slowDealloc(v26, -1LL, -1LL);

    (*(void (**)(char *, uint64_t (*)(void)))(v12 + 8))(v14, v76);
  }

  else
  {

    (*(void (**)(char *, uint64_t (*)(void)))(v12 + 8))(v14, v19);
  }

  if (qword_100403640 != -1) {
    swift_once(&qword_100403640, sub_10026023C);
  }
  uint64_t v30 = qword_100403648;
  uint64_t v31 = *(void *)(qword_100403648 + 16);
  uint64_t v32 = &selRef_alertMessage;
  uint64_t v80 = v1;
  if (v31)
  {
    uint64_t v33 = (void *)objc_opt_self(&OBJC_CLASS___NSNotificationCenter);
    uint64_t v76 = (uint64_t (*)(void))*((void *)*v1 + 35);
    id v77 = v33;
    swift_bridgeObjectRetain();
    unint64_t v74 = (uint64_t (*)(void))v30;
    uint64_t v34 = v30 + 40;
    uint64_t v35 = v73;
    uint64_t v36 = v75;
    do
    {
      swift_bridgeObjectRetain();
      id v37 = [v77 defaultCenter];
      NSString v38 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      NSNotificationCenter.publisher(for:object:)(v38, 0LL);

      uint64_t v39 = v80;
      v84[0] = (id)v76();
      uint64_t v40 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0LL);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56LL))(v4, 1LL, 1LL, v40);
      uint64_t v41 = sub_10016083C(0LL, (unint64_t *)&qword_1003F9F50, &OBJC_CLASS___OS_dispatch_queue_ptr);
      uint64_t v42 = sub_100156FEC( (unint64_t *)&unk_1003FBEE0,  (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher,  (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Publisher);
      unint64_t v43 = sub_100184978();
      uint64_t v44 = v79;
      Publisher.receive<A>(on:options:)(v84, v4, v79, v41, v42, v43);
      sub_1001603DC((uint64_t)v4, &qword_1003F8210);

      (*(void (**)(char *, uint64_t))(v78 + 8))(v8, v44);
      uint64_t v45 = swift_allocObject(&unk_1003ABBC0, 24LL, 7LL);
      swift_weakInit(v45 + 16, v39);
      uint64_t v46 = sub_1001604E8( (unint64_t *)&qword_1003FBEF0,  (uint64_t *)&unk_1003FBED0,  (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
      uint64_t v47 = v82;
      uint64_t v48 = Publisher<>.sink(receiveValue:)(sub_100292350, v45, v82, v46);
      swift_release(v45);
      (*(void (**)(char *, uint64_t))(v81 + 8))(v35, v47);
      swift_beginAccess(v36, v84, 33LL, 0LL);
      AnyCancellable.store(in:)(v36);
      swift_endAccess(v84);
      uint64_t v49 = v48;
      uint64_t v32 = &selRef_alertMessage;
      swift_release(v49);
      v34 += 16LL;
      --v31;
    }

    while (v31);
    swift_bridgeObjectRelease();
    uint64_t v1 = v80;
  }

  if (qword_100403650 != -1) {
    swift_once(&qword_100403650, sub_1002603B8);
  }
  id v77 = (id)qword_100403658;
  uint64_t v50 = *(void *)(qword_100403658 + 16);
  if (v50)
  {
    unint64_t v51 = (uint64_t (*)(void))objc_opt_self(&OBJC_CLASS___NSNotificationCenter);
    id v52 = *v1;
    id v75 = v1 + 3;
    uint64_t v76 = v51;
    unint64_t v74 = (uint64_t (*)(void))*((void *)v52 + 35);
    swift_bridgeObjectRetain();
    uint64_t v53 = 0LL;
    uint64_t v54 = v73;
    char v55 = v80;
    do
    {
      uint64_t v56 = (void *)*((void *)v77 + v53++ + 4);
      id v57 = v56;
      id v58 = [v76 v32[414]];
      NSNotificationCenter.publisher(for:object:)(v57, 0LL);

      v84[0] = (id)v74();
      uint64_t v59 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0LL);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56LL))(v4, 1LL, 1LL, v59);
      uint64_t v60 = sub_10016083C(0LL, (unint64_t *)&qword_1003F9F50, &OBJC_CLASS___OS_dispatch_queue_ptr);
      uint64_t v61 = v50;
      uint64_t v62 = sub_100156FEC( (unint64_t *)&unk_1003FBEE0,  (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher,  (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Publisher);
      unint64_t v63 = sub_100184978();
      uint64_t v64 = v79;
      Publisher.receive<A>(on:options:)(v84, v4, v79, v60, v62, v63);
      sub_1001603DC((uint64_t)v4, &qword_1003F8210);

      (*(void (**)(char *, uint64_t))(v78 + 8))(v8, v64);
      uint64_t v65 = swift_allocObject(&unk_1003ABBC0, 24LL, 7LL);
      swift_weakInit(v65 + 16, v55);
      uint64_t v66 = sub_1001604E8( (unint64_t *)&qword_1003FBEF0,  (uint64_t *)&unk_1003FBED0,  (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
      uint64_t v67 = v82;
      uint64_t v68 = Publisher<>.sink(receiveValue:)(sub_100292350, v65, v82, v66);
      uint64_t v69 = v65;
      uint64_t v50 = v61;
      swift_release(v69);
      (*(void (**)(char *, uint64_t))(v81 + 8))(v54, v67);
      uint64_t v70 = v75;
      swift_beginAccess(v75, v84, 33LL, 0LL);
      AnyCancellable.store(in:)(v70);
      swift_endAccess(v84);

      uint64_t v71 = v68;
      uint64_t v32 = &selRef_alertMessage;
      swift_release(v71);
    }

    while (v50 != v53);
    swift_bridgeObjectRelease();
  }

  sub_10026CE38(0xD000000000000023LL, 0x8000000100340780LL);
}

uint64_t sub_10026E628(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = sub_100156B68((uint64_t *)&unk_1003FBBE0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for RoutingInteraction(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (uint8_t **)((char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v40 = v4;
  void *v16 = (*(uint64_t (**)(uint64_t))(v4 + 280))(v14);
  (*(void (**)(void *, void, uint64_t))(v13 + 104))(v16, enum case for DispatchPredicate.onQueue(_:), v12);
  LOBYTE(v4) = _dispatchPreconditionTest(_:)(v16);
  uint64_t v17 = (*(uint64_t (**)(void *, uint64_t))(v13 + 8))(v16, v12);
  if ((v4 & 1) == 0)
  {
    __break(1u);
LABEL_12:
    if (a1 < 0) {
      uint64_t v26 = a1;
    }
    else {
      uint64_t v26 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    uint64_t result = _CocoaArrayWrapper.endIndex.getter(v26);
    if (result) {
      goto LABEL_4;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    uint64_t v27 = sub_100174330();
    sub_1001A8360(v27, (uint64_t)v7, (uint64_t *)&unk_1003FBBE0);
    uint64_t v28 = type metadata accessor for Logger(0LL);
    uint64_t v29 = *(void *)(v28 - 8);
    uint64_t v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 48))(v7, 1LL, v28);
    if ((_DWORD)v30 == 1)
    {
      sub_1001603DC((uint64_t)v7, (uint64_t *)&unk_1003FBBE0);
    }

    else
    {
      uint64_t v31 = (os_log_s *)Logger.logObject.getter(v30);
      os_log_type_t v32 = static os_log_type_t.default.getter(v31);
      if (os_log_type_enabled(v31, v32))
      {
        uint64_t v33 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v34 = swift_slowAlloc(32LL, -1LL);
        v42[0] = v34;
        *(_DWORD *)uint64_t v33 = 136315138;
        uint64_t v39 = v33 + 4;
        uint64_t v35 = _typeName(_:qualified:)(v40, 0LL);
        uint64_t v41 = sub_10015ADC4(v35, v36, v42);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, v42, v39, v33 + 12);
        swift_bridgeObjectRelease();
        _os_log_impl( (void *)&_mh_execute_header,  v31,  v32,  "[%s] timelineDidUpdate - update item types to process deferred data source removals",  v33,  0xCu);
        swift_arrayDestroy(v34, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v34, -1LL, -1LL);
        swift_slowDealloc(v33, -1LL, -1LL);
      }

      (*(void (**)(char *, uint64_t))(v29 + 8))(v7, v28);
    }

    id v37 = *(void (**)(uint64_t))(*v2 + 648LL);
    uint64_t v38 = swift_bridgeObjectRetain();
    v37(v38);
    return swift_bridgeObjectRelease();
  }

  a1 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 112LL))(v17);
  uint64_t result = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  if (!result) {
    goto LABEL_16;
  }
LABEL_4:
  if ((a1 & 0xC000000000000001LL) != 0)
  {
    uint64_t v20 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, a1);
    uint64_t v19 = v20;
  }

  else
  {
    if (!*(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10))
    {
      __break(1u);
      return result;
    }

    uint64_t v19 = *(void *)(a1 + 32);
    uint64_t v20 = swift_retain(v19);
  }

  (*(void (**)(uint64_t))(*(void *)v19 + 176LL))(v20);
  swift_beginAccess( (char *)v2 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_pendingInteractions,  v42,  33LL,  0LL);
  uint64_t v21 = sub_10018019C((uint64_t)v11);
  uint64_t v23 = v22;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  swift_endAccess(v42);
  if (v21)
  {
    uint64_t v24 = swift_allocObject(&unk_1003AB828, 32LL, 7LL);
    *(void *)(v24 + 16) = v21;
    *(void *)(v24 + 24) = v23;
    sub_10026EA34(v19, v24);
    swift_bridgeObjectRelease();
    swift_release(v19);
    uint64_t v25 = v24;
  }

  else
  {
    swift_bridgeObjectRelease();
    uint64_t v25 = v19;
  }

  return swift_release(v25);
}

uint64_t sub_10026EA34(uint64_t a1, uint64_t a2)
{
  uint64_t v155 = a2;
  uint64_t v156 = *v2;
  uint64_t v139 = type metadata accessor for RoutingControl(0LL);
  uint64_t v140 = *(void *)(v139 - 8);
  __chkstk_darwin(v139);
  uint64_t v138 = (char *)&v137 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v141 = type metadata accessor for RoutingInteraction.Action(0LL);
  uint64_t v151 = *(void *)(v141 - 8);
  __chkstk_darwin(v141);
  __n128 v142 = (uint64_t *)((char *)&v137 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v147 = type metadata accessor for RoutingInteraction(0LL);
  uint64_t v153 = *(void *)(v147 - 8);
  uint64_t v6 = __chkstk_darwin(v147);
  os_log_t v137 = (char *)&v137 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v152 = (char *)&v137 - v9;
  __chkstk_darwin(v8);
  uint64_t v143 = (char *)&v137 - v10;
  uint64_t v11 = type metadata accessor for Logger(0LL);
  uint64_t v159 = *(void *)(v11 - 8);
  uint64_t v160 = v11;
  __chkstk_darwin(v11);
  uint64_t v158 = (char *)&v137 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v165 = type metadata accessor for ContinuousClock.Instant(0LL);
  uint64_t v13 = *(void *)(v165 - 8);
  uint64_t v150 = *(void *)(v13 + 64);
  uint64_t v14 = v13;
  uint64_t v15 = __chkstk_darwin(v165);
  uint64_t v161 = (char *)&v137 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v157 = (char *)&v137 - v18;
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v137 - v19;
  uint64_t v21 = type metadata accessor for ContinuousClock(0LL);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(void *)(v22 + 64);
  uint64_t v24 = __chkstk_darwin(v21);
  uint64_t v25 = __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v137 - v26;
  uint64_t v28 = __chkstk_darwin(v25);
  uint64_t v30 = (char *)&v137 - v29;
  uint64_t v164 = a1;
  uint64_t v31 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 160LL))(v28);
  uint64_t v162 = v32;
  uint64_t v163 = v31;
  uint64_t v33 = ContinuousClock.init()(v31);
  ContinuousClock.now.getter(v33);
  uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v22 + 16);
  uint64_t v146 = v30;
  v34(v27, v30, v21);
  uint64_t v35 = v14;
  unint64_t v36 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  id v37 = v157;
  int v145 = v20;
  uint64_t v38 = v20;
  uint64_t v39 = v165;
  v36(v157, v38, v165);
  uint64_t v149 = (char *)&v137 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v34(v149, v27, v21);
  v36(v161, v37, v39);
  uint64_t v40 = *(unsigned __int8 *)(v22 + 80);
  uint64_t v41 = (v40 + 16) & ~v40;
  uint64_t v42 = *(unsigned __int8 *)(v35 + 80);
  uint64_t v43 = v35;
  uint64_t v44 = (v23 + v42 + v41) & ~v42;
  unint64_t v45 = (v150 + v44 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v46 = (v45 + 23) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v47 = (v46 + 23) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v48 = swift_allocObject(&unk_1003ABD78, v47 + 8, v40 | v42 | 7);
  uint64_t v49 = v48 + v41;
  uint64_t v50 = v156;
  uint64_t v148 = v22;
  unint64_t v51 = *(void (**)(uint64_t, char *, uint64_t))(v22 + 32);
  uint64_t v154 = v21;
  v51(v49, v27, v21);
  uint64_t v150 = v43;
  id v52 = *(void (**)(uint64_t, char *, uint64_t))(v43 + 32);
  unint64_t v53 = (unint64_t)v162;
  v52(v48 + v44, v157, v165);
  uint64_t v54 = (void *)(v48 + v45);
  void *v54 = v163;
  v54[1] = v53;
  char v55 = (uint64_t (**)(uint64_t, uint64_t, uint64_t, char))(v48 + v46);
  uint64_t v56 = v155;
  *char v55 = sub_1001834C0;
  v55[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t, char))v56;
  *(void *)(v48 + v47) = v50;
  uint64_t v57 = v164;
  swift_bridgeObjectRetain();
  swift_retain(v56);
  uint64_t v58 = sub_1001741A8();
  (*(void (**)(char *, uint64_t, uint64_t))(v159 + 16))(v158, v58, v160);
  swift_bridgeObjectRetain_n(v53, 2LL);
  uint64_t v59 = swift_retain_n(v57, 2LL);
  uint64_t v60 = (os_log_s *)Logger.logObject.getter(v59);
  os_log_type_t v61 = static os_log_type_t.default.getter(v60);
  BOOL v62 = os_log_type_enabled(v60, v61);
  uint64_t v144 = v48;
  if (v62)
  {
    uint64_t v63 = swift_slowAlloc(32LL, -1LL);
    uint64_t v157 = (char *)swift_slowAlloc(96LL, -1LL);
    uint64_t v167 = (uint64_t)v157;
    *(_DWORD *)uint64_t v63 = 136315650;
    uint64_t v64 = _typeName(_:qualified:)(v50, 0LL);
    uint64_t v166 = sub_10015ADC4(v64, v65, &v167);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v166, &v167, v63 + 4, v63 + 12);
    swift_bridgeObjectRelease();
    *(_WORD *)(v63 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v166 = sub_10015ADC4(v163, v53, &v167);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v166, &v167, v63 + 14, v63 + 22);
    uint64_t v66 = swift_bridgeObjectRelease_n(v53, 3LL);
    *(_WORD *)(v63 + 22) = 2080;
    uint64_t v67 = v143;
    (*(void (**)(uint64_t))(*(void *)v164 + 176LL))(v66);
    uint64_t v68 = sub_100156FEC( &qword_1003F88F8,  (uint64_t (*)(uint64_t))&type metadata accessor for RoutingInteraction,  (uint64_t)&protocol conformance descriptor for RoutingInteraction);
    uint64_t v69 = v147;
    uint64_t v70 = dispatch thunk of CustomStringConvertible.description.getter(v147, v68);
    unint64_t v72 = v71;
    uint64_t v73 = v153;
    (*(void (**)(char *, uint64_t))(v153 + 8))(v67, v69);
    uint64_t v166 = sub_10015ADC4(v70, v72, &v167);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v166, &v167, v63 + 24, v63 + 32);
    swift_release_n(v164, 2LL);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v60, v61, "[%s] handleEvent<%s> - interaction: %s", (uint8_t *)v63, 0x20u);
    unint64_t v74 = v157;
    swift_arrayDestroy(v157, 3LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v74, -1LL, -1LL);
    uint64_t v75 = v63;
    uint64_t v57 = v164;
    swift_slowDealloc(v75, -1LL, -1LL);

    uint64_t v76 = (*(uint64_t (**)(char *, uint64_t))(v159 + 8))(v158, v160);
    uint64_t v77 = v73;
  }

  else
  {

    swift_release_n(v57, 2LL);
    swift_bridgeObjectRelease_n(v53, 2LL);
    uint64_t v76 = (*(uint64_t (**)(char *, uint64_t))(v159 + 8))(v158, v160);
    uint64_t v77 = v153;
  }

  uint64_t v78 = (*(uint64_t (**)(uint64_t))(*(void *)v57 + 128LL))(v76);
  uint64_t v82 = v154;
  uint64_t v83 = v165;
  uint64_t v84 = v151;
  uint64_t v85 = (uint64_t)v152;
  if (v78)
  {
    uint64_t v86 = v163;
    if (v78 == 2)
    {
      uint64_t v87 = type metadata accessor for InternalRoutingError(0LL);
      uint64_t v88 = sub_100156FEC( &qword_1003F8908,  (uint64_t (*)(uint64_t))&type metadata accessor for InternalRoutingError,  (uint64_t)&protocol conformance descriptor for InternalRoutingError);
      uint64_t v89 = swift_allocError(v87, v88, 0LL, 0LL);
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v87 - 8) + 104LL))( v90,  enum case for InternalRoutingError.cancelled(_:),  v87);
      uint64_t v91 = MRDFastSyncGroupSessionState.rawValue.getter(v89, 0LL, 0LL, 4LL);
      uint64_t v93 = v92;
      uint64_t v95 = v94;
      unsigned __int8 v97 = v96;
      uint64_t v98 = (uint64_t)v149;
      uint64_t v99 = (uint64_t)v161;
      sub_10026F8A4( v91,  v92,  v94,  v96,  (uint64_t)v149,  (uint64_t)v161,  v86,  (unint64_t)v162,  (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1001834C0,  v155,  v156);
      swift_release(v144);
      swift_errorRelease(v91);
      sub_100156BA8(v93, v95, v97);
      swift_bridgeObjectRelease();
      uint64_t v100 = *(void (**)(uint64_t, uint64_t))(v150 + 8);
      v100(v99, v83);
      int64_t v101 = *(void (**)(uint64_t, uint64_t))(v148 + 8);
      v101(v98, v82);
      v100((uint64_t)v145, v83);
      return ((uint64_t (*)(char *, uint64_t))v101)(v146, v82);
    }

    if (v78 == 1)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v150 + 8))(v161, v165);
      uint64_t v78 = (*(uint64_t (**)(char *, uint64_t))(v148 + 8))(v149, v154);
      __break(1u);
    }

    uint64_t v127 = v79;
    unsigned __int8 v128 = v81;
    uint64_t v129 = v80;
    uint64_t v85 = v78;
    swift_bridgeObjectRelease();
    swift_errorRelease(v85);
    sub_100156BA8(v127, v129, v128);
    (*(void (**)(char *, uint64_t))(v150 + 8))(v161, v165);
    (*(void (**)(char *, uint64_t))(v148 + 8))(v149, v154);
    __break(1u);
LABEL_28:
    uint64_t v130 = v147;
    (*(void (**)(char *, uint64_t, uint64_t))(v77 + 16))(v137, v85, v147);
    uint64_t v167 = 0LL;
    unint64_t v168 = 0xE000000000000000LL;
    _StringGuts.grow(_:)(48LL);
    swift_bridgeObjectRelease();
    uint64_t v167 = 91LL;
    unint64_t v168 = 0xE100000000000000LL;
    v131._countAndFlagsBits = _typeName(_:qualified:)(v156, 0LL);
    String.append(_:)(v131);
    swift_bridgeObjectRelease();
    v132._countAndFlagsBits = 0x656C646E6168205DLL;
    v132._object = (void *)0xEE003C746E657645LL;
    String.append(_:)(v132);
    v133._countAndFlagsBits = v163;
    v133._object = v162;
    String.append(_:)(v133);
    swift_bridgeObjectRelease();
    v134._object = (void *)0x8000000100340450LL;
    v134._countAndFlagsBits = 0xD00000000000001BLL;
    String.append(_:)(v134);
    uint64_t v135 = sub_100156FEC( &qword_1003F88F8,  (uint64_t (*)(uint64_t))&type metadata accessor for RoutingInteraction,  (uint64_t)&protocol conformance descriptor for RoutingInteraction);
    v136._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v130, v135);
    String.append(_:)(v136);
    swift_bridgeObjectRelease();
    uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  v167,  v168,  "mediaremoted/HostedRoutingSessionDataSource.swift",  49LL,  2LL,  720LL,  0);
    __break(1u);
    return result;
  }

  uint64_t v103 = *(void (**)(uint64_t, uint64_t))(v150 + 8);
  v103((uint64_t)v161, v165);
  uint64_t v104 = *(uint64_t (**)(uint64_t, uint64_t))(v148 + 8);
  uint64_t v105 = v104((uint64_t)v149, v82);
  uint64_t v106 = (*(uint64_t (**)(uint64_t))(*(void *)v57 + 176LL))(v105);
  uint64_t v107 = v142;
  RoutingInteraction.action.getter(v106);
  uint64_t v108 = v141;
  int v109 = (*(uint64_t (**)(uint64_t *, uint64_t))(v84 + 88))(v107, v141);
  if (v109 == enum case for RoutingInteraction.Action.add(_:))
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t *, uint64_t))(v84 + 96))(v107, v108);
    uint64_t v110 = v144;
    sub_10027002C( *v107,  v107[1],  v107[2],  v107[3],  v85,  v144,  (void *)1,  (uint64_t)&unk_1003ABDA0,  (uint64_t)sub_10028F950,  (uint64_t)&unk_1003ABDB8);
LABEL_13:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v111 = v110;
    goto LABEL_14;
  }

  if (v109 == enum case for RoutingInteraction.Action.remove(_:))
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t *, uint64_t))(v84 + 96))(v107, v108);
    uint64_t v110 = v144;
    sub_10027002C( *v107,  v107[1],  v107[2],  v107[3],  v85,  v144,  (void *)2,  (uint64_t)&unk_1003ABF08,  (uint64_t)sub_10028FEB0,  (uint64_t)&unk_1003ABF20);
    goto LABEL_13;
  }

  if (v109 == enum case for RoutingInteraction.Action.set(_:))
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t *, uint64_t))(v84 + 96))(v107, v108);
    uint64_t v110 = v144;
    sub_10027002C( *v107,  v107[1],  v107[2],  v107[3],  v85,  v144,  (void *)3,  (uint64_t)&unk_1003ABF80,  (uint64_t)sub_10028FF84,  (uint64_t)&unk_1003ABF98);
    goto LABEL_13;
  }

  if (v109 == enum case for RoutingInteraction.Action.setActiveSession(_:))
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t *, uint64_t))(v84 + 96))(v107, v108);
    uint64_t v112 = v144;
    sub_10027078C(*v107, v107[1], (void (*)(void))sub_10028F874, v144);
  }

  else
  {
    if (v109 != enum case for RoutingInteraction.Action.setActiveItem(_:))
    {
      if (v109 == enum case for RoutingInteraction.Action.handoff(_:))
      {
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t *, uint64_t))(v84 + 96))(v107, v108);
        uint64_t v113 = (void *)*v107;
        uint64_t v114 = v113[2];
        uint64_t v115 = v113[3];
        unint64_t v116 = v113[5];
        uint64_t v163 = v113[4];
        uint64_t v164 = v114;
        uint64_t v117 = v85;
        uint64_t v118 = v113[6];
        uint64_t v119 = swift_retain(v118);
        uint64_t v120 = RoutingInteraction.Action.HandoffContext.sourceBundleIdentifier.getter(v119);
        uint64_t v121 = v144;
        sub_100272278(v120, v122, v164, v115, v163, v116, v118, v117, v144);
        swift_release(v118);
        swift_bridgeObjectRelease();
        swift_release(v121);
        (*(void (**)(uint64_t, uint64_t))(v153 + 8))(v117, v147);
        v103((uint64_t)v145, v165);
        v104((uint64_t)v146, v154);
        return swift_release(v113);
      }

      if (v109 == enum case for RoutingInteraction.Action.control(_:))
      {
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t *, uint64_t))(v84 + 96))(v107, v108);
        uint64_t v164 = *v107;
        uint64_t v123 = swift_projectBox(v164);
        uint64_t v124 = (uint64_t)v138;
        uint64_t v125 = v139;
        (*(void (**)(char *, uint64_t, uint64_t))(v140 + 16))(v138, v123, v139);
        uint64_t v126 = v144;
        sub_10027307C(v124, v85, v144);
        swift_release(v126);
        (*(void (**)(uint64_t, uint64_t))(v140 + 8))(v124, v125);
        (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v85, v147);
        v103((uint64_t)v145, v83);
        v104((uint64_t)v146, v82);
        return swift_release(v164);
      }

      goto LABEL_28;
    }

    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t *, uint64_t))(v84 + 96))(v107, v108);
    uint64_t v112 = v144;
    sub_100270D64(*v107, v107[1], v85, 1, (void (*)(void))sub_10028F874, v144);
  }

  swift_bridgeObjectRelease();
  uint64_t v111 = v112;
LABEL_14:
  swift_release(v111);
  (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v85, v147);
  v103((uint64_t)v145, v83);
  return v104((uint64_t)v146, v82);
}

uint64_t sub_10026F8A4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, void (*a9)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a10, uint64_t a11)
{
  uint64_t v71 = a7;
  uint64_t v85 = a6;
  uint64_t v89 = a9;
  uint64_t v90 = a10;
  uint64_t v16 = type metadata accessor for Duration.UnitsFormatStyle.FractionalPartDisplayStrategy(0LL);
  uint64_t v83 = *(void *)(v16 - 8);
  uint64_t v84 = v16;
  __chkstk_darwin(v16);
  uint64_t v82 = (char *)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v81 = type metadata accessor for Duration.UnitsFormatStyle.ZeroValueUnitsDisplayStrategy(0LL);
  uint64_t v79 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  uint64_t v77 = (char *)&v65 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v76 = type metadata accessor for Duration.UnitsFormatStyle.UnitWidth(0LL);
  uint64_t v74 = *(void *)(v76 - 8);
  __chkstk_darwin(v76);
  uint64_t v73 = (char *)&v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v80 = type metadata accessor for Duration.UnitsFormatStyle(0LL);
  uint64_t v78 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  uint64_t v75 = (char *)&v65 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = type metadata accessor for Logger(0LL);
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v65 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v25 = type metadata accessor for ContinuousClock.Instant(0LL);
  uint64_t v87 = *(void *)(v25 - 8);
  uint64_t v88 = v25;
  uint64_t v26 = __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v65 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  ContinuousClock.now.getter(v26);
  uint64_t v86 = v28;
  uint64_t v29 = ContinuousClock.Instant.duration(to:)(v28);
  uint64_t v72 = v30;
  uint64_t v31 = sub_1001741A8();
  uint64_t v85 = v22;
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v24, v31, v21);
  swift_bridgeObjectRetain();
  sub_10018480C(a1, a2, a3, a4);
  swift_bridgeObjectRetain();
  uint64_t v32 = a4;
  uint64_t v33 = sub_10018480C(a1, a2, a3, a4);
  uint64_t v34 = (os_log_s *)Logger.logObject.getter(v33);
  int v35 = static os_log_type_t.default.getter(v34);
  if (os_log_type_enabled(v34, (os_log_type_t)v35))
  {
    int v66 = v35;
    uint64_t v67 = v29;
    os_log_t v68 = v34;
    uint64_t v69 = v24;
    uint64_t v70 = v21;
    uint64_t v36 = swift_slowAlloc(42LL, -1LL);
    uint64_t v65 = swift_slowAlloc(128LL, -1LL);
    uint64_t v95 = v65;
    *(_DWORD *)uint64_t v36 = 136315906;
    uint64_t v37 = _typeName(_:qualified:)(a11, 0LL);
    uint64_t v91 = sub_10015ADC4(v37, v38, &v95);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v91, v92, v36 + 4, v36 + 12);
    swift_bridgeObjectRelease();
    *(_WORD *)(v36 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v91 = sub_10015ADC4(v71, a8, &v95);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v91, v92, v36 + 14, v36 + 22);
    swift_bridgeObjectRelease_n(a8, 3LL);
    *(_WORD *)(v36 + 22) = 2080;
    if (a1)
    {
      uint64_t v91 = 0LL;
      v92[0] = 0xE000000000000000LL;
      _StringGuts.grow(_:)(16LL);
      swift_bridgeObjectRelease();
      strcpy((char *)v94, " with error: ");
      HIWORD(v94[1]) = -4864;
      uint64_t v91 = a1;
      v92[0] = a2;
      v92[1] = a3;
      char v93 = v32;
      swift_errorRetain(a1);
      sub_100156A2C(a2, a3, v32);
      unint64_t v39 = sub_100184894();
      v40._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for RoutingEvent.Error,  v39);
      String.append(_:)(v40);
      swift_bridgeObjectRelease();
      swift_errorRelease(a1);
      sub_100156BA8(a2, a3, v32);
      v41._countAndFlagsBits = 32LL;
      v41._object = (void *)0xE100000000000000LL;
      String.append(_:)(v41);
      uint64_t v42 = v94[0];
      unint64_t v43 = v94[1];
    }

    else
    {
      unint64_t v43 = 0xE100000000000000LL;
      uint64_t v42 = 32LL;
    }

    uint64_t v91 = sub_10015ADC4(v42, v43, &v95);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v91, v92, v36 + 24, v36 + 32);
    swift_bridgeObjectRelease();
    sub_100184850(a1, a2, a3, v32);
    sub_100184850(a1, a2, a3, v32);
    *(_WORD *)(v36 + 32) = 2080;
    uint64_t v71 = v36 + 34;
    uint64_t v44 = sub_100156B68(&qword_1003F8CE0);
    uint64_t v45 = type metadata accessor for Duration.UnitsFormatStyle.Unit(0LL);
    uint64_t v46 = *(void *)(v45 - 8);
    uint64_t v47 = *(void *)(v46 + 72);
    uint64_t v48 = *(unsigned __int8 *)(v46 + 80);
    uint64_t v49 = (v48 + 32) & ~v48;
    uint64_t v50 = swift_allocObject(v44, v49 + 2 * v47, v48 | 7);
    *(_OWORD *)(v50 + 16) = xmmword_10034C140;
    uint64_t v51 = static Duration.UnitsFormatStyle.Unit.seconds.getter();
    static Duration.UnitsFormatStyle.Unit.milliseconds.getter(v51);
    uint64_t v52 = sub_1001841C8(v50);
    swift_setDeallocating(v50);
    swift_arrayDestroy(v50 + v49, 2LL, v45);
    uint64_t v53 = swift_deallocClassInstance(v50, 32LL, 7LL);
    uint64_t v54 = v73;
    uint64_t v55 = static Duration.UnitsFormatStyle.UnitWidth.abbreviated.getter(v53);
    uint64_t v56 = v77;
    uint64_t v57 = static Duration.UnitsFormatStyle.ZeroValueUnitsDisplayStrategy.hide.getter(v55);
    uint64_t v58 = v82;
    static Duration.UnitsFormatStyle.FractionalPartDisplayStrategy.hide.getter(v57);
    uint64_t v59 = v75;
    static FormatStyle<>.units(allowed:width:maximumUnitCount:zeroValueUnits:valueLength:fractionalPart:)( v52,  v54,  0LL,  1LL,  v56,  0LL,  1LL,  v58);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v83 + 8))(v58, v84);
    (*(void (**)(char *, uint64_t))(v79 + 8))(v56, v81);
    (*(void (**)(char *, uint64_t))(v74 + 8))(v54, v76);
    uint64_t v60 = sub_100156FEC( &qword_1003F8CE8,  (uint64_t (*)(uint64_t))&type metadata accessor for Duration.UnitsFormatStyle,  (uint64_t)&protocol conformance descriptor for Duration.UnitsFormatStyle);
    uint64_t v61 = v80;
    Duration.formatted<A>(_:)(&v91, v59, v67, v72, v80, v60);
    (*(void (**)(char *, uint64_t))(v78 + 8))(v59, v61);
    uint64_t v91 = sub_10015ADC4(v91, v92[0], &v95);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v91, v92, v71, v36 + 42);
    swift_bridgeObjectRelease();
    os_log_t v62 = v68;
    _os_log_impl( (void *)&_mh_execute_header,  v68,  (os_log_type_t)v66,  "[%s] handleEvent<%s> - finished%sin: %s",  (uint8_t *)v36,  0x2Au);
    uint64_t v63 = v65;
    swift_arrayDestroy(v65, 4LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v63, -1LL, -1LL);
    swift_slowDealloc(v36, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v85 + 8))(v69, v70);
  }

  else
  {
    swift_bridgeObjectRelease_n(a8, 2LL);
    sub_100184850(a1, a2, a3, v32);
    sub_100184850(a1, a2, a3, v32);

    (*(void (**)(char *, uint64_t))(v85 + 8))(v24, v21);
  }

  v89(a1, a2, a3, v32);
  return (*(uint64_t (**)(char *, uint64_t))(v87 + 8))(v86, v88);
}

uint64_t sub_10027002C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v103 = a8;
  id v98 = a7;
  uint64_t v100 = a5;
  uint64_t v106 = a2;
  uint64_t v104 = a1;
  uint64_t v105 = type metadata accessor for RoutingInteraction(0LL);
  uint64_t v102 = *(void *)(v105 - 8);
  __chkstk_darwin(v105);
  uint64_t v99 = v14;
  int64_t v101 = (char *)&v93 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = sub_100156B68(&qword_1003F9518);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v93 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = type metadata accessor for HostedRoutingSourceSession(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (uint64_t *)((char *)&v93 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v109 = v10;
  uint64_t v110 = (uint64_t)&v93 - v24;
  uint64_t v25 = (*(uint64_t (**)(uint64_t))(*(void *)v10 + 328LL))(v23);
  uint64_t v26 = *(void *)(v25 + 16);
  if (v26)
  {
    uint64_t v107 = v18;
    uint64_t v108 = a6;
    uint64_t v27 = v25 + ((*(unsigned __int8 *)(v19 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
    uint64_t v28 = *(void *)(v19 + 72);
    while (1)
    {
      sub_1001A80F8(v27, (uint64_t)v22, type metadata accessor for HostedRoutingSourceSession);
      uint64_t v29 = v22[1];
      BOOL v30 = *v22 == a3 && v29 == a4;
      if (v30 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v22, v29, a3, a4, 0LL) & 1) != 0) {
        break;
      }
      sub_1001A813C((uint64_t)v22, type metadata accessor for HostedRoutingSourceSession);
      v27 += v28;
      if (!--v26)
      {
        uint64_t v31 = 1LL;
        goto LABEL_11;
      }
    }

    sub_1001A81D4((uint64_t)v22, (uint64_t)v17, type metadata accessor for HostedRoutingSourceSession);
    uint64_t v31 = 0LL;
LABEL_11:
    uint64_t v18 = v107;
    a6 = v108;
  }

  else
  {
    uint64_t v31 = 1LL;
  }

  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v17, v31, 1LL, v18);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1LL, v18) == 1)
  {
    sub_1001603DC((uint64_t)v17, &qword_1003F9518);
    uint64_t v32 = type metadata accessor for InternalRoutingError(0LL);
    uint64_t v33 = sub_100156FEC( &qword_1003F8908,  (uint64_t (*)(uint64_t))&type metadata accessor for InternalRoutingError,  (uint64_t)&protocol conformance descriptor for InternalRoutingError);
    uint64_t v34 = swift_allocError(v32, v33, 0LL, 0LL);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v32 - 8) + 104LL))( v35,  enum case for InternalRoutingError.sessionNotFound(_:),  v32);
    swift_bridgeObjectRetain();
    uint64_t v36 = MRDFastSyncGroupSessionState.rawValue.getter(v34, a3, a4, 2LL);
    uint64_t v38 = v37;
    uint64_t v40 = v39;
    unsigned __int8 v42 = v41;
    sub_10028F874(v36, v37, v39, v41);
    swift_errorRelease(v36);
    return sub_100156BA8(v38, v40, v42);
  }

  uint64_t v44 = v110;
  uint64_t result = sub_1001A81D4((uint64_t)v17, v110, type metadata accessor for HostedRoutingSourceSession);
  uint64_t v45 = *(void *)(v44 + 24);
  if (!v45)
  {
    __break(1u);
    return result;
  }

  uint64_t v46 = *(void *)(v44 + 16);
  uint64_t v47 = (uint64_t *)(v109 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_endpoints);
  swift_beginAccess(v109 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_endpoints, v113, 0LL, 0LL);
  uint64_t v48 = *v47;
  if (!*(void *)(v48 + 16)) {
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v49 = sub_10015CAD4(v46, v45);
  if ((v50 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_22:
    uint64_t v82 = type metadata accessor for InternalRoutingError(0LL);
    uint64_t v83 = sub_100156FEC( &qword_1003F8908,  (uint64_t (*)(uint64_t))&type metadata accessor for InternalRoutingError,  (uint64_t)&protocol conformance descriptor for InternalRoutingError);
    uint64_t v84 = swift_allocError(v82, v83, 0LL, 0LL);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v82 - 8) + 104LL))( v85,  enum case for InternalRoutingError.sessionNotFound(_:),  v82);
    swift_bridgeObjectRetain();
    uint64_t v86 = MRDFastSyncGroupSessionState.rawValue.getter(v84, a3, a4, 2LL);
    uint64_t v88 = v87;
    uint64_t v90 = v89;
    unsigned __int8 v92 = v91;
    sub_10028F874(v86, v87, v89, v91);
    swift_errorRelease(v86);
    sub_100156BA8(v88, v90, v92);
    uint64_t v81 = v44;
    return sub_1001A813C(v81, type metadata accessor for HostedRoutingSourceSession);
  }

  uint64_t v51 = *(void *)(*(void *)(v48 + 56) + 8 * v49);
  swift_retain(v51);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_BYTE *)(v51 + 16) != 2)
  {
    swift_release(v51);
    goto LABEL_22;
  }

  uint64_t v97 = a10;
  uint64_t v96 = a9;
  id v52 = MRRequestDetailsInitiatorRoutePicker;
  uint64_t v53 = v100;
  RoutingInteraction.identifier.getter(v52);
  uint64_t v107 = v51;
  uint64_t v108 = a6;
  uint64_t v54 = sub_100156FEC( &qword_1003F88F8,  (uint64_t (*)(uint64_t))&type metadata accessor for RoutingInteraction,  (uint64_t)&protocol conformance descriptor for RoutingInteraction);
  dispatch thunk of CustomStringConvertible.description.getter(v105, v54);
  id v55 = objc_allocWithZone(&OBJC_CLASS___MRRequestDetails);
  NSString v56 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v57 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v58 = [v55 initWithInitiator:v52 requestID:v56 reason:v57 userInitiated:1];

  uint64_t v59 = sub_100156B68(&qword_1003F8620);
  uint64_t v60 = swift_allocObject(v59, 48LL, 7LL);
  *(_OWORD *)(v60 + 16) = xmmword_10034BE40;
  uint64_t v61 = v106;
  *(void *)(v60 + 32) = v104;
  *(void *)(v60 + 40) = v61;
  id v62 = objc_allocWithZone(&OBJC_CLASS___MRGroupTopologyModificationRequest);
  swift_bridgeObjectRetain();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v98 = [v62 initWithRequestDetails:v58 type:v98 outputDeviceUIDs:isa];

  uint64_t v64 = v109;
  uint64_t v65 = *(uint64_t (**)(void))(*(void *)v109 + 280LL);
  id v95 = *(id *)(v107 + 64);
  uint64_t v94 = v65();
  uint64_t v67 = v101;
  uint64_t v66 = v102;
  uint64_t v68 = v105;
  (*(void (**)(char *, uint64_t, uint64_t))(v102 + 16))(v101, v53, v105);
  uint64_t v69 = *(unsigned __int8 *)(v66 + 80);
  uint64_t v70 = (v69 + 56) & ~v69;
  unint64_t v71 = (v99 + v70 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v72 = (char *)swift_allocObject(v103, v71 + 16, v69 | 7);
  uint64_t v73 = v108;
  *((void *)v72 + 2) = sub_10028F874;
  *((void *)v72 + 3) = v73;
  uint64_t v74 = v106;
  *((void *)v72 + 4) = v104;
  *((void *)v72 + 5) = v74;
  *((void *)v72 + 6) = v64;
  (*(void (**)(char *, char *, uint64_t))(v66 + 32))(&v72[v70], v67, v68);
  uint64_t v75 = &v72[v71];
  *(void *)uint64_t v75 = a3;
  *((void *)v75 + 1) = a4;
  aBlock[4] = v96;
  uint64_t v112 = v72;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_100157E54;
  aBlock[3] = v97;
  uint64_t v76 = _Block_copy(aBlock);
  uint64_t v77 = v112;
  swift_bridgeObjectRetain();
  swift_retain(v108);
  swift_retain(v64);
  swift_bridgeObjectRetain();
  swift_release(v77);
  id v78 = v95;
  uint64_t v79 = v98;
  uint64_t v80 = (void *)v94;
  [v95 modifyTopologyWithRequest:v98 withReplyQueue:v94 completion:v76];
  _Block_release(v76);
  swift_release(v107);

  uint64_t v81 = v110;
  return sub_1001A813C(v81, type metadata accessor for HostedRoutingSourceSession);
}

uint64_t sub_10027078C(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v84 = a4;
  uint64_t v8 = sub_100156B68(&qword_1003F9518);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for HostedRoutingSourceSession(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (void *)((char *)v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)v80 - v16;
  uint64_t v18 = sub_10024B258();
  uint64_t v19 = *((void *)v18 + 1);
  BOOL v20 = *(void *)v18 == a1 && v19 == a2;
  if (!v20 && (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, *(void *)v18, v19, 0LL) & 1) == 0)
  {
    uint64_t v82 = a3;
    uint64_t v83 = v4;
    uint64_t v26 = (*(uint64_t (**)(void))(*(void *)v4 + 328LL))();
    uint64_t v27 = *(void *)(v26 + 16);
    if (v27)
    {
      v80[1] = v26;
      uint64_t v81 = v17;
      uint64_t v28 = v26 + ((*(unsigned __int8 *)(v12 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
      uint64_t v29 = *(void *)(v12 + 72);
      while (1)
      {
        sub_1001A80F8(v28, (uint64_t)v15, type metadata accessor for HostedRoutingSourceSession);
        uint64_t v30 = v15[1];
        BOOL v31 = *v15 == a1 && v30 == a2;
        if (v31 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v15, v30, a1, a2, 0LL) & 1) != 0) {
          break;
        }
        sub_1001A813C((uint64_t)v15, type metadata accessor for HostedRoutingSourceSession);
        v28 += v29;
        if (!--v27)
        {
          uint64_t v32 = 1LL;
          goto LABEL_18;
        }
      }

      sub_1001A81D4((uint64_t)v15, (uint64_t)v10, type metadata accessor for HostedRoutingSourceSession);
      uint64_t v32 = 0LL;
LABEL_18:
      uint64_t v17 = v81;
    }

    else
    {
      uint64_t v32 = 1LL;
    }

    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, v32, 1LL, v11);
    swift_bridgeObjectRelease();
    int v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1LL, v11);
    uint64_t v35 = v82;
    uint64_t v34 = v83;
    if (v33 == 1)
    {
      sub_1001603DC((uint64_t)v10, &qword_1003F9518);
      uint64_t v36 = type metadata accessor for InternalRoutingError(0LL);
      uint64_t v37 = sub_100156FEC( &qword_1003F8908,  (uint64_t (*)(uint64_t))&type metadata accessor for InternalRoutingError,  (uint64_t)&protocol conformance descriptor for InternalRoutingError);
      uint64_t v38 = swift_allocError(v36, v37, 0LL, 0LL);
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v36 - 8) + 104LL))( v39,  enum case for InternalRoutingError.sessionNotFound(_:),  v36);
      swift_bridgeObjectRetain();
      uint64_t v40 = MRDFastSyncGroupSessionState.rawValue.getter(v38, a1, a2, 2LL);
      uint64_t v42 = v41;
      uint64_t v44 = v43;
      unsigned __int8 v46 = v45;
      v35();
      swift_errorRelease(v40);
      return sub_100156BA8(v42, v44, v46);
    }

    uint64_t result = sub_1001A81D4((uint64_t)v10, (uint64_t)v17, type metadata accessor for HostedRoutingSourceSession);
    uint64_t v47 = *((void *)v17 + 3);
    if (!v47)
    {
      __break(1u);
      return result;
    }

    uint64_t v48 = (uint64_t)v17;
    uint64_t v49 = *((void *)v17 + 2);
    char v50 = (uint64_t *)(v34 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_endpoints);
    swift_beginAccess(v50, v85, 0LL, 0LL);
    uint64_t v51 = *v50;
    if (*(void *)(v51 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v52 = sub_10015CAD4(v49, v47);
      if ((v53 & 1) != 0)
      {
        uint64_t v54 = *(void *)(*(void *)(v51 + 56) + 8 * v52);
        swift_retain(v54);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(_BYTE *)(v54 + 16) == 2)
        {
          uint64_t v55 = *(void *)(v54 + 32);
          uint64_t v56 = *(void *)(v54 + 40);
          if ((*(_BYTE *)(v54 + 80) & 1) != 0)
          {
            NSString v57 = *(void **)(v54 + 64);
            swift_bridgeObjectRetain();
            id v58 = [v57 resolvedOutputDevices];
          }

          else
          {
            unint64_t v71 = *(void **)(v54 + 72);
            swift_bridgeObjectRetain();
            id v58 = [v71 outputDevices];
          }

          id v72 = v58;
          if (v72)
          {
            uint64_t v73 = sub_10016083C(0LL, (unint64_t *)&qword_1003F8300, &OBJC_CLASS___MRAVOutputDevice_ptr);
            uint64_t v74 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v72, v73);
          }

          else
          {
            uint64_t v74 = _swiftEmptyArrayStorage;
          }

          uint64_t v75 = sub_1002622C0((uint64_t)v74);
          swift_bridgeObjectRelease();
          uint64_t v76 = (void *)(v83 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements);
          uint64_t v77 = *(void *)(v83 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements);
          uint64_t v78 = *(void *)(v83
                          + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements
                          + 8);
          uint64_t v79 = *(void **)(v83
                           + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements
                           + 16);
          void *v76 = v55;
          v76[1] = v56;
          v76[2] = v75;
          sub_10028E974(v77, v78, (uint64_t)v79);
          sub_10028DA70(v77, v78, (uint64_t)v79);
          sub_100263A50(v77, v78, v79);
          sub_10028DA70(v77, v78, (uint64_t)v79);
          ((void (*)(void, void, void, void))v35)(0LL, 0LL, 0LL, 0LL);
          swift_release(v54);
          return sub_1001A813C(v48, type metadata accessor for HostedRoutingSourceSession);
        }

        swift_release(v54);
      }

      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }

    uint64_t v59 = type metadata accessor for InternalRoutingError(0LL);
    uint64_t v60 = sub_100156FEC( &qword_1003F8908,  (uint64_t (*)(uint64_t))&type metadata accessor for InternalRoutingError,  (uint64_t)&protocol conformance descriptor for InternalRoutingError);
    uint64_t v61 = swift_allocError(v59, v60, 0LL, 0LL);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v59 - 8) + 104LL))( v62,  enum case for InternalRoutingError.sessionNotFound(_:),  v59);
    swift_bridgeObjectRetain();
    uint64_t v63 = MRDFastSyncGroupSessionState.rawValue.getter(v61, a1, a2, 2LL);
    uint64_t v65 = v64;
    uint64_t v67 = v66;
    uint64_t v68 = v35;
    unsigned __int8 v70 = v69;
    v68();
    swift_errorRelease(v63);
    sub_100156BA8(v65, v67, v70);
    return sub_1001A813C(v48, type metadata accessor for HostedRoutingSourceSession);
  }

  uint64_t v21 = (void *)(v4 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements);
  uint64_t v22 = *(void *)(v4 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements);
  uint64_t v23 = *(void *)(v4 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements + 8);
  uint64_t v24 = *(void **)(v4 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements + 16);
  v21[1] = 0LL;
  v21[2] = 0LL;
  void *v21 = 0LL;
  sub_10028E974(v22, v23, (uint64_t)v24);
  sub_10028DA70(v22, v23, (uint64_t)v24);
  sub_100263A50(v22, v23, v24);
  sub_10028DA70(v22, v23, (uint64_t)v24);
  return ((uint64_t (*)(void, void, void, void))a3)(0LL, 0LL, 0LL, 0LL);
}

void sub_100270D64(uint64_t a1, unint64_t a2, uint64_t a3, int a4, void (*a5)(void), uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v229 = a6;
  int v214 = a4;
  uint64_t v220 = *v7;
  uint64_t v12 = type metadata accessor for RoutingInteraction(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  unint64_t v213 = (char *)&v207 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v233 = (char *)&v207 - v17;
  uint64_t v212 = v18;
  __chkstk_darwin(v16);
  uint64_t v208 = (char *)&v207 - v19;
  uint64_t v20 = type metadata accessor for Logger(0LL);
  uint64_t v226 = *(void *)(v20 - 8);
  uint64_t v21 = __chkstk_darwin(v20);
  uint64_t v216 = (char *)&v207 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v207 - v24;
  __chkstk_darwin(v23);
  uint64_t v209 = (char *)&v207 - v26;
  uint64_t v27 = sub_100156B68(&qword_1003F9518);
  __chkstk_darwin(v27);
  uint64_t v224 = (uint64_t)&v207 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v225 = type metadata accessor for HostedRoutingSourceSession(0LL);
  uint64_t v29 = *(void *)(v225 - 8);
  uint64_t v30 = __chkstk_darwin(v225);
  uint64_t v231 = (char *)&v207 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v223 = (uint64_t)&v207 - v33;
  uint64_t v218 = a3;
  uint64_t v219 = RoutingInteraction.identifier.getter(v32);
  unint64_t v222 = v34;
  uint64_t v35 = *(uint64_t (**)(void))(*v7 + 328);
  uint64_t v215 = v7;
  uint64_t v36 = v35();
  uint64_t v37 = *(void *)(v36 + 16);
  uint64_t v217 = v12;
  uint64_t v221 = v13;
  unint64_t v234 = a2;
  uint64_t v232 = a1;
  uint64_t v235 = v37;
  id v228 = a5;
  uint64_t v227 = v20;
  if (v37)
  {
    Class isa = (Class)(v36 + ((*(unsigned __int8 *)(v29 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80)));
    unint64_t v236 = v246;
    uint64_t v211 = v29;
    uint64_t v237 = *(void *)(v29 + 72);
    uint64_t v210 = v36;
    swift_bridgeObjectRetain();
    uint64_t v38 = 0LL;
    uint64_t v39 = v233;
    uint64_t v40 = (uint64_t)v231;
    uint64_t v230 = v25;
    while (1)
    {
      sub_1001A80F8((uint64_t)isa + v237 * v38, v40, type metadata accessor for HostedRoutingSourceSession);
      int64_t v41 = *(void *)(*(void *)(v40 + 32) + 16LL);
      if (v41)
      {
        aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
        uint64_t v42 = (void *)swift_bridgeObjectRetain();
        sub_10015DCE8(0, v41, 0);
        uint64_t v43 = (char *)aBlock[0];
        uint64_t v44 = *(void *)(type metadata accessor for HostedRoutingItem(0LL) - 8);
        uint64_t v45 = *(unsigned __int8 *)(v44 + 80);
        uint64_t v46 = *(void *)(v44 + 72);
        id v239 = v42;
        uint64_t v47 = (void *)((char *)v42 + ((v45 + 32) & ~v45) + 8);
        do
        {
          uint64_t v49 = *(v47 - 1);
          uint64_t v48 = *v47;
          aBlock[0] = (uint64_t)v43;
          unint64_t v51 = *((void *)v43 + 2);
          unint64_t v50 = *((void *)v43 + 3);
          swift_bridgeObjectRetain();
          if (v51 >= v50 >> 1)
          {
            sub_10015DCE8(v50 > 1, v51 + 1, 1);
            uint64_t v43 = (char *)aBlock[0];
          }

          uint64_t v47 = (uint64_t *)((char *)v47 + v46);
          *((void *)v43 + 2) = v51 + 1;
          unint64_t v52 = &v43[16 * v51];
          *((void *)v52 + 4) = v49;
          *((void *)v52 + 5) = v48;
          --v41;
        }

        while (v41);
        swift_bridgeObjectRelease();
        a2 = v234;
        a1 = v232;
        uint64_t v25 = v230;
        uint64_t v39 = v233;
        uint64_t v40 = (uint64_t)v231;
      }

      else
      {
        uint64_t v43 = (char *)_swiftEmptyArrayStorage;
      }

      v246[0] = a1;
      v246[1] = a2;
      if (*((void *)v43 + 2) == 1LL)
      {
        if (v43 == &v245) {
          break;
        }
        uint64_t v53 = *((void *)v43 + 4);
        uint64_t v54 = *((void *)v43 + 5);
        BOOL v55 = v53 == a1 && v54 == a2;
        if (v55 || (_stringCompareWithSmolCheck(_:_:expecting:)(v53, v54, a1, a2, 0LL) & 1) != 0) {
          break;
        }
      }

      swift_bridgeObjectRetain();
      swift_arrayDestroy(v236, 1LL, &type metadata for String);
      ++v38;
      swift_bridgeObjectRelease();
      sub_1001A813C(v40, type metadata accessor for HostedRoutingSourceSession);
      if (v38 == v235)
      {
        swift_bridgeObjectRelease();
        uint64_t v57 = 1LL;
        uint64_t v56 = v228;
        uint64_t v58 = v224;
        goto LABEL_22;
      }
    }

    swift_bridgeObjectRetain();
    swift_arrayDestroy(v236, 1LL, &type metadata for String);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v58 = v224;
    sub_1001A81D4(v40, v224, type metadata accessor for HostedRoutingSourceSession);
    uint64_t v57 = 0LL;
    uint64_t v56 = v228;
LABEL_22:
    uint64_t v29 = v211;
  }

  else
  {
    uint64_t v56 = a5;
    uint64_t v57 = 1LL;
    uint64_t v39 = v233;
    uint64_t v58 = v224;
  }

  uint64_t v59 = v225;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56))(v58, v57, 1LL, v225);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v58, 1LL, v59) != 1)
  {
    uint64_t v73 = v58;
    uint64_t v74 = v223;
    sub_1001A81D4(v73, v223, type metadata accessor for HostedRoutingSourceSession);
    char v75 = sub_10024B254();
    uint64_t v76 = v227;
    if ((v75 & 1) != 0)
    {
      uint64_t v77 = v56;
      uint64_t v78 = sub_1001741A8();
      (*(void (**)(char *, uint64_t, uint64_t))(v226 + 16))(v25, v78, v76);
      uint64_t v79 = v221;
      uint64_t v80 = v217;
      (*(void (**)(char *, uint64_t, uint64_t))(v221 + 16))(v39, v218, v217);
      unint64_t v81 = v222;
      uint64_t v82 = swift_bridgeObjectRetain();
      uint64_t v83 = v39;
      uint64_t v84 = (os_log_s *)Logger.logObject.getter(v82);
      os_log_type_t v85 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v84, v85))
      {
        uint64_t v86 = swift_slowAlloc(32LL, -1LL);
        uint64_t v230 = v25;
        uint64_t v87 = v86;
        id v239 = (void *)swift_slowAlloc(96LL, -1LL);
        aBlock[0] = (uint64_t)v239;
        *(_DWORD *)uint64_t v87 = 136315650;
        uint64_t v88 = _typeName(_:qualified:)(v220, 0LL);
        uint64_t v240 = sub_10015ADC4(v88, v89, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v240, &v241, v87 + 4, v87 + 12);
        swift_bridgeObjectRelease();
        *(_WORD *)(v87 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v240 = sub_10015ADC4(v219, v81, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v240, &v241, v87 + 14, v87 + 22);
        swift_bridgeObjectRelease_n(v81, 3LL);
        *(_WORD *)(v87 + 22) = 2080;
        uint64_t v90 = sub_100156FEC( &qword_1003F88F8,  (uint64_t (*)(uint64_t))&type metadata accessor for RoutingInteraction,  (uint64_t)&protocol conformance descriptor for RoutingInteraction);
        uint64_t v91 = v233;
        uint64_t v92 = dispatch thunk of CustomStringConvertible.description.getter(v80, v90);
        uint64_t v240 = sub_10015ADC4(v92, v93, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v240, &v241, v87 + 24, v87 + 32);
        swift_bridgeObjectRelease();
        uint64_t v77 = v228;
        (*(void (**)(char *, uint64_t))(v221 + 8))(v91, v80);
        _os_log_impl( (void *)&_mh_execute_header,  v84,  v85,  "[%s] handleSetActiveItem<%s> - interaction: %s is invalid for a picked item on the local session",  (uint8_t *)v87,  0x20u);
        uint64_t v94 = v239;
        swift_arrayDestroy(v239, 3LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v94, -1LL, -1LL);
        swift_slowDealloc(v87, -1LL, -1LL);

        (*(void (**)(char *, uint64_t))(v226 + 8))(v230, v227);
      }

      else
      {
        swift_bridgeObjectRelease_n(v81, 2LL);
        (*(void (**)(char *, uint64_t))(v79 + 8))(v83, v80);

        (*(void (**)(char *, uint64_t))(v226 + 8))(v25, v76);
      }

      uint64_t v151 = type metadata accessor for InternalRoutingError(0LL);
      uint64_t v152 = sub_100156FEC( &qword_1003F8908,  (uint64_t (*)(uint64_t))&type metadata accessor for InternalRoutingError,  (uint64_t)&protocol conformance descriptor for InternalRoutingError);
      uint64_t v153 = swift_allocError(v151, v152, 0LL, 0LL);
      uint64_t v155 = v154;
      uint64_t v156 = (unsigned int *)&enum case for InternalRoutingError.invalidAction(_:);
    }

    else
    {
      uint64_t v121 = *(void **)(v74 + 24);
      uint64_t v77 = v56;
      if (v121)
      {
        uint64_t v122 = v227;
        uint64_t v123 = *(void *)(v74 + 16);
        uint64_t v124 = v215;
        uint64_t v125 = (uint64_t *)((char *)v215 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_endpoints);
        swift_beginAccess( (char *)v215 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_endpoints,  aBlock,  0LL,  0LL);
        uint64_t v126 = *v125;
        if (*(void *)(*v125 + 16))
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          unint64_t v127 = sub_10015CAD4(v123, (uint64_t)v121);
          if ((v128 & 1) != 0)
          {
            uint64_t v129 = *(_BYTE **)(*(void *)(v126 + 56) + 8 * v127);
            swift_retain(v129);
            swift_bridgeObjectRelease();
            if (v129[16] == 2)
            {
              id v239 = v129;
              uint64_t v130 = OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_identifierStore;
              uint64_t v131 = *(uint64_t *)((char *)v124
                                + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_identifierStore);
              Swift::String v132 = *(uint64_t (**)(uint64_t))(*(void *)v131 + 264LL);
              swift_retain(v131);
              uint64_t v133 = v132(v218);
              uint64_t v135 = v134;
              swift_release(v131);
              if (v135)
              {
                swift_bridgeObjectRelease();
                Swift::String v136 = v124;
                uint64_t v137 = *(uint64_t *)((char *)v124 + v130);
                uint64_t v138 = *(void (**)(uint64_t, void *, uint64_t, uint64_t, void *))(*(void *)v137 + 288LL);
                swift_retain(v137);
                v138(v133, v135, v218, v123, v121);
                swift_release(v137);
                uint64_t v240 = 0LL;
                unint64_t v241 = 0xE000000000000000LL;
                _StringGuts.grow(_:)(87LL);
                v139._countAndFlagsBits = 0xD00000000000001DLL;
                v139._object = (void *)0x80000001003404E0LL;
                String.append(_:)(v139);
                v140._countAndFlagsBits = v123;
                v140._object = v121;
                String.append(_:)(v140);
                swift_bridgeObjectRelease();
                v141._countAndFlagsBits = 0xD000000000000022LL;
                v141._object = (void *)0x8000000100340500LL;
                String.append(_:)(v141);
                v142._countAndFlagsBits = v133;
                v142._object = v135;
                String.append(_:)(v142);
                swift_bridgeObjectRelease();
                v143._object = (void *)0x8000000100340530LL;
                v143._countAndFlagsBits = 0xD000000000000012LL;
                String.append(_:)(v143);
                uint64_t v144 = sub_100156FEC( &qword_1003F88F8,  (uint64_t (*)(uint64_t))&type metadata accessor for RoutingInteraction,  (uint64_t)&protocol conformance descriptor for RoutingInteraction);
                v145._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v217, v144);
                String.append(_:)(v145);
                swift_bridgeObjectRelease();
                sub_10026CE38(v240, v241);
                swift_bridgeObjectRelease();
                uint64_t v146 = v239;
                if ((v214 & 1) != 0)
                {
                  uint64_t v147 = v239[4];
                  uint64_t v148 = v239[5];
                  if ((v239[10] & 1) != 0)
                  {
                    uint64_t v149 = (void *)v239[8];
                    swift_bridgeObjectRetain();
                    id v150 = [v149 resolvedOutputDevices];
                  }

                  else
                  {
                    uint64_t v198 = (void *)v239[9];
                    swift_bridgeObjectRetain();
                    id v150 = [v198 outputDevices];
                  }

                  id v199 = v150;
                  if (v199)
                  {
                    uint64_t v200 = sub_10016083C(0LL, (unint64_t *)&qword_1003F8300, &OBJC_CLASS___MRAVOutputDevice_ptr);
                    uint64_t v201 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v199, v200);
                  }

                  else
                  {
                    uint64_t v201 = _swiftEmptyArrayStorage;
                  }

                  v202 = sub_1002622C0((uint64_t)v201);
                  swift_bridgeObjectRelease();
                  uint64_t v203 = (uint64_t *)((char *)v136
                                   + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements);
                  uint64_t v204 = *(uint64_t *)((char *)v136
                                    + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements);
                  uint64_t v205 = *(uint64_t *)((char *)v136
                                    + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements
                                    + 8);
                  uint64_t v206 = *(void **)((char *)v136
                                    + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements
                                    + 16);
                  *uint64_t v203 = v147;
                  v203[1] = v148;
                  v203[2] = v202;
                  sub_10028E974(v204, v205, (uint64_t)v206);
                  sub_10028DA70(v204, v205, (uint64_t)v206);
                  sub_100263A50(v204, v205, v206);
                  sub_10028DA70(v204, v205, (uint64_t)v206);
                }

                ((void (*)(void, void, void, void))v77)(0LL, 0LL, 0LL, 0LL);
              }

              else
              {
                swift_bridgeObjectRelease();
                uint64_t v166 = sub_1001741A8();
                uint64_t v167 = v226;
                unint64_t v168 = v209;
                (*(void (**)(char *, uint64_t, uint64_t))(v226 + 16))(v209, v166, v122);
                uint64_t v169 = v221;
                uint64_t v170 = v208;
                uint64_t v171 = v217;
                (*(void (**)(char *, uint64_t, uint64_t))(v221 + 16))(v208, v218, v217);
                unint64_t v172 = v222;
                uint64_t v173 = swift_bridgeObjectRetain();
                uint64_t v174 = (os_log_s *)Logger.logObject.getter(v173);
                os_log_type_t v175 = static os_log_type_t.error.getter();
                int v176 = v175;
                if (os_log_type_enabled(v174, v175))
                {
                  uint64_t v177 = swift_slowAlloc(32LL, -1LL);
                  LODWORD(isa) = v176;
                  uint64_t v178 = v170;
                  uint64_t v179 = v177;
                  uint64_t v180 = swift_slowAlloc(96LL, -1LL);
                  uint64_t v240 = v180;
                  *(_DWORD *)uint64_t v179 = 136315650;
                  uint64_t v181 = _typeName(_:qualified:)(v220, 0LL);
                  uint64_t v242 = sub_10015ADC4(v181, v182, &v240);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v242, aBlock, v179 + 4, v179 + 12);
                  swift_bridgeObjectRelease();
                  *(_WORD *)(v179 + 12) = 2080;
                  swift_bridgeObjectRetain();
                  uint64_t v242 = sub_10015ADC4(v219, v172, &v240);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v242, aBlock, v179 + 14, v179 + 22);
                  swift_bridgeObjectRelease_n(v172, 3LL);
                  *(_WORD *)(v179 + 22) = 2080;
                  uint64_t v183 = sub_100156FEC( &qword_1003F88F8,  (uint64_t (*)(uint64_t))&type metadata accessor for RoutingInteraction,  (uint64_t)&protocol conformance descriptor for RoutingInteraction);
                  uint64_t v184 = v217;
                  uint64_t v185 = dispatch thunk of CustomStringConvertible.description.getter(v217, v183);
                  uint64_t v242 = sub_10015ADC4(v185, v186, &v240);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v242, aBlock, v179 + 24, v179 + 32);
                  swift_bridgeObjectRelease();
                  (*(void (**)(char *, uint64_t))(v169 + 8))(v178, v184);
                  _os_log_impl( (void *)&_mh_execute_header,  v174,  (os_log_type_t)isa,  "[%s] handleSetActiveItem<%s> - no prewarmed identifier found for interaction: %s. Failing",  (uint8_t *)v179,  0x20u);
                  swift_arrayDestroy(v180, 3LL, (char *)&type metadata for Any + 8);
                  swift_slowDealloc(v180, -1LL, -1LL);
                  swift_slowDealloc(v179, -1LL, -1LL);

                  (*(void (**)(char *, uint64_t))(v226 + 8))(v209, v227);
                }

                else
                {
                  swift_bridgeObjectRelease_n(v172, 2LL);
                  (*(void (**)(char *, uint64_t))(v169 + 8))(v170, v171);

                  (*(void (**)(char *, uint64_t))(v167 + 8))(v168, v227);
                }

                uint64_t v146 = v239;
                uint64_t v187 = type metadata accessor for InternalRoutingError(0LL);
                uint64_t v188 = sub_100156FEC( &qword_1003F8908,  (uint64_t (*)(uint64_t))&type metadata accessor for InternalRoutingError,  (uint64_t)&protocol conformance descriptor for InternalRoutingError);
                uint64_t v189 = swift_allocError(v187, v188, 0LL, 0LL);
                (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v187 - 8) + 104LL))( v190,  enum case for InternalRoutingError.sessionNotFound(_:),  v187);
                uint64_t v191 = MRDFastSyncGroupSessionState.rawValue.getter(v189, 1LL, 0LL, 4LL);
                uint64_t v193 = v192;
                uint64_t v195 = v194;
                unsigned __int8 v197 = v196;
                v77();
                swift_errorRelease(v191);
                sub_100156BA8(v193, v195, v197);
              }

              swift_release(v146);
              goto LABEL_45;
            }

            swift_bridgeObjectRelease();
            swift_release(v129);
          }

          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
        }
      }

      swift_bridgeObjectRelease();
      uint64_t v151 = type metadata accessor for InternalRoutingError(0LL);
      uint64_t v157 = sub_100156FEC( &qword_1003F8908,  (uint64_t (*)(uint64_t))&type metadata accessor for InternalRoutingError,  (uint64_t)&protocol conformance descriptor for InternalRoutingError);
      uint64_t v153 = swift_allocError(v151, v157, 0LL, 0LL);
      uint64_t v155 = v158;
      uint64_t v156 = (unsigned int *)&enum case for InternalRoutingError.sessionNotFound(_:);
    }

    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v151 - 8) + 104LL))(v155, *v156, v151);
    uint64_t v159 = MRDFastSyncGroupSessionState.rawValue.getter(v153, 0LL, 0LL, 4LL);
    uint64_t v161 = v160;
    uint64_t v163 = v162;
    unsigned __int8 v165 = v164;
    v77();
    swift_errorRelease(v159);
    sub_100156BA8(v161, v163, v165);
LABEL_45:
    sub_1001A813C(v223, type metadata accessor for HostedRoutingSourceSession);
    return;
  }

  sub_1001603DC(v58, &qword_1003F9518);
  uint64_t v60 = sub_1001741A8();
  uint64_t v61 = v226;
  uint64_t v62 = v216;
  uint64_t v63 = v227;
  (*(void (**)(char *, uint64_t, uint64_t))(v226 + 16))(v216, v60, v227);
  swift_bridgeObjectRetain_n(a2, 2LL);
  unint64_t v64 = v222;
  swift_bridgeObjectRetain_n(v222, 2LL);
  uint64_t v66 = (os_log_s *)Logger.logObject.getter(v65);
  os_log_type_t v67 = static os_log_type_t.default.getter(v66);
  if (os_log_type_enabled(v66, v67))
  {
    uint64_t v68 = swift_slowAlloc(32LL, -1LL);
    uint64_t v69 = swift_slowAlloc(96LL, -1LL);
    aBlock[0] = v69;
    *(_DWORD *)uint64_t v68 = 136315650;
    uint64_t v70 = _typeName(_:qualified:)(v220, 0LL);
    uint64_t v240 = sub_10015ADC4(v70, v71, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v240, &v241, v68 + 4, v68 + 12);
    swift_bridgeObjectRelease();
    *(_WORD *)(v68 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v240 = sub_10015ADC4(v219, v64, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v240, &v241, v68 + 14, v68 + 22);
    swift_bridgeObjectRelease_n(v64, 3LL);
    *(_WORD *)(v68 + 22) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v240 = sub_10015ADC4(v232, v234, aBlock);
    a2 = v234;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v240, &v241, v68 + 24, v68 + 32);
    swift_bridgeObjectRelease_n(a2, 3LL);
    _os_log_impl( (void *)&_mh_execute_header,  v66,  v67,  "[%s] handleSetActiveItem<%s> - creating endpoint for item: %s to set as active session",  (uint8_t *)v68,  0x20u);
    swift_arrayDestroy(v69, 3LL, (char *)&type metadata for Any + 8);
    uint64_t v72 = v69;
    a1 = v232;
    swift_slowDealloc(v72, -1LL, -1LL);
    swift_slowDealloc(v68, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v61 + 8))(v216, v63);
  }

  else
  {

    swift_bridgeObjectRelease_n(a2, 2LL);
    swift_bridgeObjectRelease_n(v64, 2LL);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v62, v63);
  }

  uint64_t v95 = v218;
  id v239 = (void *)objc_opt_self(&OBJC_CLASS___MRDCreateEndpointRequest);
  uint64_t v96 = sub_100156B68(&qword_1003F8620);
  uint64_t v97 = swift_allocObject(v96, 48LL, 7LL);
  *(_OWORD *)(v97 + 16) = xmmword_10034BE40;
  *(void *)(v97 + 32) = a1;
  *(void *)(v97 + 40) = a2;
  swift_bridgeObjectRetain();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  uint64_t v98 = swift_bridgeObjectRelease();
  RoutingInteraction.identifier.getter(v98);
  RoutingInteraction.description.getter();
  id v99 = objc_allocWithZone(&OBJC_CLASS___MRRequestDetails);
  NSString v100 = String._bridgeToObjectiveC()();
  NSString v101 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v102 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v103 = [v99 initWithName:v100 requestID:v101 reason:v102 userInitiated:1];

  uint64_t v104 = v221;
  uint64_t v105 = v213;
  uint64_t v106 = v217;
  (*(void (**)(char *, uint64_t, uint64_t))(v221 + 16))(v213, v95, v217);
  uint64_t v107 = *(unsigned __int8 *)(v104 + 80);
  uint64_t v108 = (v107 + 56) & ~v107;
  unint64_t v109 = (v108 + v212 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v110 = (v108 + v212 + 31) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v111 = (char *)swift_allocObject(&unk_1003ABFF8, v110 + 8, v107 | 7);
  uint64_t v112 = v215;
  uint64_t v113 = v219;
  *((void *)v111 + 2) = v215;
  *((void *)v111 + 3) = v113;
  uint64_t v114 = v228;
  *((void *)v111 + 4) = v64;
  *((void *)v111 + 5) = v114;
  uint64_t v115 = v229;
  *((void *)v111 + 6) = v229;
  (*(void (**)(char *, char *, uint64_t))(v104 + 32))(&v111[v108], v105, v106);
  unint64_t v116 = &v111[v109];
  unint64_t v117 = v234;
  *(void *)unint64_t v116 = v232;
  *((void *)v116 + 1) = v117;
  v116[16] = v214 & 1;
  *(void *)&v111[v110] = v220;
  aBlock[4] = (uint64_t)sub_1002901EC;
  NSString v244 = v111;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = (uint64_t)sub_100279A44;
  aBlock[3] = (uint64_t)&unk_1003AC010;
  uint64_t v118 = _Block_copy(aBlock);
  uint64_t v119 = v244;
  swift_bridgeObjectRetain();
  swift_retain(v112);
  swift_retain(v115);
  swift_release(v119);
  Class v120 = isa;
  [v239 createEndpointWithOutputDeviceUIDs:isa timeout:v103 details:v118 completion:8.0];
  _Block_release(v118);
}

uint64_t sub_100272278( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v169 = a7;
  unint64_t v173 = a6;
  uint64_t v174 = a5;
  uint64_t v166 = a1;
  uint64_t v167 = a2;
  uint64_t v176 = a9;
  uint64_t v171 = *v9;
  uint64_t v172 = type metadata accessor for Logger(0LL);
  uint64_t v13 = *(void *)(v172 - 8);
  uint64_t v14 = __chkstk_darwin(v172);
  uint64_t v163 = (char *)&v158 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v14);
  unsigned __int8 v165 = (char *)&v158 - v16;
  uint64_t v17 = type metadata accessor for RoutingInteraction(0LL);
  uint64_t v177 = *(void *)(v17 - 8);
  uint64_t v18 = *(void *)(v177 + 64);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v158 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v161 = (char *)&v158 - v22;
  __chkstk_darwin(v21);
  unint64_t v168 = (char *)&v158 - v23;
  uint64_t v24 = sub_100156B68(&qword_1003F9518);
  __chkstk_darwin(v24);
  uint64_t v160 = (uint64_t)&v158 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v159 = type metadata accessor for HostedRoutingSourceSession(0LL);
  unint64_t v164 = *(void *)(v159 - 8);
  uint64_t v26 = *(void *)(v164 + 64);
  uint64_t v27 = __chkstk_darwin(v159);
  uint64_t v158 = (uint64_t)&v158 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v28 = __chkstk_darwin(v27);
  uint64_t v30 = (uint64_t *)((char *)&v158 - v29);
  uint64_t v31 = __chkstk_darwin(v28);
  uint64_t v162 = (uint64_t)&v158 - v32;
  uint64_t v178 = a8;
  uint64_t v170 = RoutingInteraction.identifier.getter(v31);
  unint64_t v34 = v33;
  uint64_t v35 = sub_10024B258();
  uint64_t v36 = *((void *)v35 + 1);
  if (*(void *)v35 == a3 && v36 == a4
    || (_stringCompareWithSmolCheck(_:_:expecting:)(a3, a4, *(void *)v35, v36, 0LL) & 1) != 0
    || ((uint64_t v61 = sub_100249E64(), v62 = v61[1], *v61 != v174) || v62 != v173)
    && (_stringCompareWithSmolCheck(_:_:expecting:)(v174, v173, *v61, v62, 0LL) & 1) == 0)
  {
    uint64_t v37 = *((void *)v35 + 1);
    if (*(void *)v35 == a3 && v37 == a4
      || (_stringCompareWithSmolCheck(_:_:expecting:)(a3, a4, *(void *)v35, v37, 0LL) & 1) != 0)
    {
      unint64_t v164 = v34;
      uint64_t v38 = v175;
      uint64_t v39 = *(void *)(v175 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_identifierStore);
      uint64_t v40 = *(uint64_t (**)(uint64_t))(*(void *)v39 + 264LL);
      swift_retain(v39);
      uint64_t v41 = v178;
      uint64_t v42 = v40(v178);
      uint64_t v44 = v43;
      swift_release(v39);
      if (v44)
      {
        type metadata accessor for Preferences(0LL);
        LODWORD(v165) = static Preferences.deferHandoffActiveSessionChange.getter();
        uint64_t v45 = v176;
        uint64_t v46 = v177;
        uint64_t v47 = *(void (**)(char *, uint64_t, uint64_t))(v177 + 16);
        uint64_t v163 = (char *)v42;
        uint64_t v48 = v168;
        v47(v168, v41, v17);
        uint64_t v49 = *(unsigned __int8 *)(v46 + 80);
        uint64_t v50 = (v49 + 72) & ~v49;
        unint64_t v51 = (v18 + v50 + 7) & 0xFFFFFFFFFFFFFFF8LL;
        uint64_t v172 = v17;
        unint64_t v52 = (v51 + 23) & 0xFFFFFFFFFFFFFFF8LL;
        unint64_t v53 = (v52 + 15) & 0xFFFFFFFFFFFFFFF8LL;
        uint64_t v54 = (char *)swift_allocObject(&unk_1003AC188, v53 + 8, v49 | 7);
        *((void *)v54 + 2) = sub_10028F874;
        *((void *)v54 + 3) = v45;
        BOOL v55 = v163;
        *((void *)v54 + 4) = v38;
        *((void *)v54 + 5) = v55;
        uint64_t v56 = v170;
        *((void *)v54 + 6) = v44;
        *((void *)v54 + 7) = v56;
        *((void *)v54 + 8) = v164;
        (*(void (**)(char *, char *, uint64_t))(v46 + 32))(&v54[v50], v48, v172);
        uint64_t v57 = &v54[v51];
        uint64_t v58 = v167;
        *(void *)uint64_t v57 = v166;
        *((void *)v57 + 1) = v58;
        uint64_t v59 = v169;
        *(void *)&v54[v52] = v169;
        *(void *)&v54[v53] = v171;
        swift_retain(v45);
        swift_retain(v38);
        swift_retain(v59);
        swift_bridgeObjectRetain();
        sub_100270D64(v174, v173, v178, (v165 & 1) == 0, (void (*)(void))sub_1002906E8, (uint64_t)v54);
        return swift_release(v54);
      }

      uint64_t v70 = sub_1001741A8();
      unint64_t v71 = v165;
      uint64_t v72 = v172;
      (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v165, v70, v172);
      uint64_t v73 = v177;
      uint64_t v74 = v161;
      (*(void (**)(char *, uint64_t, uint64_t))(v177 + 16))(v161, v41, v17);
      unint64_t v75 = v164;
      uint64_t v76 = swift_bridgeObjectRetain();
      uint64_t v77 = (os_log_s *)Logger.logObject.getter(v76);
      uint64_t v78 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v77, (os_log_type_t)v78))
      {
        uint64_t v79 = v74;
        uint64_t v80 = swift_slowAlloc(32LL, -1LL);
        uint64_t v81 = swift_slowAlloc(96LL, -1LL);
        v179[0] = v81;
        *(_DWORD *)uint64_t v80 = 136315650;
        uint64_t v82 = _typeName(_:qualified:)(v171, 0LL);
        uint64_t v178 = v13;
        uint64_t v180 = sub_10015ADC4(v82, v83, v179);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v180, &v181, v80 + 4, v80 + 12);
        swift_bridgeObjectRelease();
        *(_WORD *)(v80 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v180 = sub_10015ADC4(v170, v75, v179);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v180, &v181, v80 + 14, v80 + 22);
        swift_bridgeObjectRelease_n(v75, 3LL);
        *(_WORD *)(v80 + 22) = 2080;
        uint64_t v84 = sub_100156FEC( &qword_1003F88F8,  (uint64_t (*)(uint64_t))&type metadata accessor for RoutingInteraction,  (uint64_t)&protocol conformance descriptor for RoutingInteraction);
        uint64_t v85 = dispatch thunk of CustomStringConvertible.description.getter(v17, v84);
        uint64_t v180 = sub_10015ADC4(v85, v86, v179);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v180, &v181, v80 + 24, v80 + 32);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v177 + 8))(v79, v17);
        _os_log_impl( (void *)&_mh_execute_header,  v77,  (os_log_type_t)v78,  "[%s] handleHandoffFromApplication<%s> - no prewarmed identifier found for interaction: %s -> failing",  (uint8_t *)v80,  0x20u);
        swift_arrayDestroy(v81, 3LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v81, -1LL, -1LL);
        swift_slowDealloc(v80, -1LL, -1LL);

        (*(void (**)(char *, uint64_t))(v178 + 8))(v165, v172);
      }

      else
      {
        swift_bridgeObjectRelease_n(v75, 2LL);
        (*(void (**)(char *, uint64_t))(v73 + 8))(v74, v17);

        (*(void (**)(char *, uint64_t))(v13 + 8))(v71, v72);
      }

      uint64_t v101 = type metadata accessor for InternalRoutingError(0LL);
      uint64_t v102 = sub_100156FEC( &qword_1003F8908,  (uint64_t (*)(uint64_t))&type metadata accessor for InternalRoutingError,  (uint64_t)&protocol conformance descriptor for InternalRoutingError);
      uint64_t v103 = swift_allocError(v101, v102, 0LL, 0LL);
      uint64_t v105 = v104;
      uint64_t v106 = (unsigned int *)&enum case for InternalRoutingError.sessionNotFound(_:);
    }

    else
    {
      uint64_t v87 = sub_1001741A8();
      uint64_t v88 = v163;
      uint64_t v89 = v172;
      (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v163, v87, v172);
      uint64_t v90 = v177;
      (*(void (**)(char *, uint64_t, uint64_t))(v177 + 16))(v20, v178, v17);
      uint64_t v91 = swift_bridgeObjectRetain();
      uint64_t v92 = (os_log_s *)Logger.logObject.getter(v91);
      os_log_type_t v93 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v92, v93))
      {
        uint64_t v94 = swift_slowAlloc(32LL, -1LL);
        uint64_t v178 = swift_slowAlloc(96LL, -1LL);
        v179[0] = v178;
        *(_DWORD *)uint64_t v94 = 136315650;
        uint64_t v95 = _typeName(_:qualified:)(v171, 0LL);
        uint64_t v180 = sub_10015ADC4(v95, v96, v179);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v180, &v181, v94 + 4, v94 + 12);
        swift_bridgeObjectRelease();
        *(_WORD *)(v94 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v180 = sub_10015ADC4(v170, v34, v179);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v180, &v181, v94 + 14, v94 + 22);
        swift_bridgeObjectRelease_n(v34, 3LL);
        *(_WORD *)(v94 + 22) = 2080;
        uint64_t v97 = sub_100156FEC( &qword_1003F88F8,  (uint64_t (*)(uint64_t))&type metadata accessor for RoutingInteraction,  (uint64_t)&protocol conformance descriptor for RoutingInteraction);
        uint64_t v98 = dispatch thunk of CustomStringConvertible.description.getter(v17, v97);
        uint64_t v180 = sub_10015ADC4(v98, v99, v179);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v180, &v181, v94 + 24, v94 + 32);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v177 + 8))(v20, v17);
        _os_log_impl( (void *)&_mh_execute_header,  v92,  v93,  "[%s] handleHandoffFromApplication<%s> - handoff interaction: %s doesn't match any supported direction",  (uint8_t *)v94,  0x20u);
        uint64_t v100 = v178;
        swift_arrayDestroy(v178, 3LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v100, -1LL, -1LL);
        swift_slowDealloc(v94, -1LL, -1LL);

        (*(void (**)(char *, uint64_t))(v13 + 8))(v163, v172);
      }

      else
      {
        swift_bridgeObjectRelease_n(v34, 2LL);
        (*(void (**)(char *, uint64_t))(v90 + 8))(v20, v17);

        (*(void (**)(char *, uint64_t))(v13 + 8))(v88, v89);
      }

      uint64_t v101 = type metadata accessor for InternalRoutingError(0LL);
      uint64_t v107 = sub_100156FEC( &qword_1003F8908,  (uint64_t (*)(uint64_t))&type metadata accessor for InternalRoutingError,  (uint64_t)&protocol conformance descriptor for InternalRoutingError);
      uint64_t v103 = swift_allocError(v101, v107, 0LL, 0LL);
      uint64_t v105 = v108;
      uint64_t v106 = (unsigned int *)&enum case for InternalRoutingError.invalidAction(_:);
    }

    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v101 - 8) + 104LL))(v105, *v106, v101);
    uint64_t v109 = MRDFastSyncGroupSessionState.rawValue.getter(v103, 1LL, 0LL, 4LL);
    uint64_t v113 = v109;
    uint64_t v114 = v110;
    uint64_t v115 = v111;
    unsigned __int8 v116 = v112;
    goto LABEL_30;
  }

  uint64_t v63 = swift_bridgeObjectRelease();
  uint64_t v174 = (*(uint64_t (**)(uint64_t))(*(void *)v175 + 328LL))(v63);
  uint64_t v64 = *(void *)(v174 + 16);
  if (v64)
  {
    uint64_t v172 = v17;
    uint64_t v65 = v174 + ((*(unsigned __int8 *)(v164 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v164 + 80));
    uint64_t v66 = *(void *)(v164 + 72);
    while (1)
    {
      sub_1001A80F8(v65, (uint64_t)v30, type metadata accessor for HostedRoutingSourceSession);
      uint64_t v67 = v30[1];
      BOOL v68 = *v30 == a3 && v67 == a4;
      if (v68 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v30, v67, a3, a4, 0LL) & 1) != 0) {
        break;
      }
      sub_1001A813C((uint64_t)v30, type metadata accessor for HostedRoutingSourceSession);
      v65 += v66;
      if (!--v64)
      {
        uint64_t v69 = 1LL;
        uint64_t v17 = v172;
        goto LABEL_34;
      }
    }

    uint64_t v117 = v160;
    sub_1001A81D4((uint64_t)v30, v160, type metadata accessor for HostedRoutingSourceSession);
    uint64_t v69 = 0LL;
    uint64_t v17 = v172;
  }

  else
  {
    uint64_t v69 = 1LL;
LABEL_34:
    uint64_t v117 = v160;
  }

  unint64_t v118 = v164;
  uint64_t v119 = v159;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v164 + 56))(v117, v69, 1LL, v159);
  swift_bridgeObjectRelease();
  int v120 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v118 + 48))(v117, 1LL, v119);
  uint64_t v121 = v176;
  uint64_t v122 = v162;
  if (v120 == 1)
  {
    sub_1001603DC(v117, &qword_1003F9518);
    uint64_t v123 = type metadata accessor for InternalRoutingError(0LL);
    uint64_t v124 = sub_100156FEC( &qword_1003F8908,  (uint64_t (*)(uint64_t))&type metadata accessor for InternalRoutingError,  (uint64_t)&protocol conformance descriptor for InternalRoutingError);
    uint64_t v125 = swift_allocError(v123, v124, 0LL, 0LL);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v123 - 8) + 104LL))( v126,  enum case for InternalRoutingError.sessionNotFound(_:),  v123);
    swift_bridgeObjectRetain();
    uint64_t v109 = MRDFastSyncGroupSessionState.rawValue.getter(v125, a3, a4, 2LL);
    uint64_t v113 = v109;
    uint64_t v114 = v110;
    uint64_t v115 = v111;
    unsigned __int8 v116 = v112;
LABEL_30:
    sub_10028F874(v109, v110, v111, v112);
    swift_errorRelease(v113);
    return sub_100156BA8(v114, v115, v116);
  }

  uint64_t result = sub_1001A81D4(v117, v162, type metadata accessor for HostedRoutingSourceSession);
  uint64_t v127 = *(void *)(v122 + 24);
  if (v127)
  {
    uint64_t v128 = *(void *)(v122 + 16);
    uint64_t v129 = (uint64_t *)(v175 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_endpoints);
    swift_beginAccess(v175 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_endpoints, v179, 0LL, 0LL);
    uint64_t v130 = *v129;
    if (*(void *)(v130 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v131 = sub_10015CAD4(v128, v127);
      if ((v132 & 1) != 0)
      {
        uint64_t v133 = *(void *)(*(void *)(v130 + 56) + 8 * v131);
        swift_retain(v133);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(_BYTE *)(v133 + 16) == 2)
        {
          uint64_t v134 = *(void *)v35;
          unint64_t v173 = *((void *)v35 + 1);
          uint64_t v174 = v134;
          uint64_t v135 = v158;
          sub_1001A80F8(v162, v158, type metadata accessor for HostedRoutingSourceSession);
          uint64_t v136 = v177;
          uint64_t v137 = v168;
          (*(void (**)(char *, uint64_t, uint64_t))(v177 + 16))(v168, v178, v17);
          uint64_t v138 = *(unsigned __int8 *)(v164 + 80);
          uint64_t v172 = v17;
          uint64_t v139 = (v138 + 40) & ~v138;
          unint64_t v140 = (v26 + v139 + 7) & 0xFFFFFFFFFFFFFFF8LL;
          uint64_t v141 = *(unsigned __int8 *)(v136 + 80);
          uint64_t v142 = (v141 + v140 + 8) & ~v141;
          Swift::String v143 = (char *)swift_allocObject(&unk_1003AC1B0, v142 + v18, v138 | v141 | 7);
          *((void *)v143 + 2) = sub_10028F874;
          *((void *)v143 + 3) = v121;
          uint64_t v144 = v175;
          *((void *)v143 + 4) = v175;
          sub_1001A81D4(v135, (uint64_t)&v143[v139], type metadata accessor for HostedRoutingSourceSession);
          uint64_t v145 = v169;
          *(void *)&v143[v140] = v169;
          (*(void (**)(char *, char *, uint64_t))(v136 + 32))(&v143[v142], v137, v172);
          uint64_t v146 = v173;
          swift_bridgeObjectRetain();
          swift_retain(v121);
          swift_retain(v144);
          swift_retain(v145);
          sub_10027078C(v174, v146, (void (*)(void))sub_1002909FC, (uint64_t)v143);
          swift_release(v133);
          swift_bridgeObjectRelease();
          swift_release(v143);
          return sub_1001A813C(v162, type metadata accessor for HostedRoutingSourceSession);
        }

        swift_release(v133);
      }

      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }

    uint64_t v147 = type metadata accessor for InternalRoutingError(0LL);
    uint64_t v148 = sub_100156FEC( &qword_1003F8908,  (uint64_t (*)(uint64_t))&type metadata accessor for InternalRoutingError,  (uint64_t)&protocol conformance descriptor for InternalRoutingError);
    uint64_t v149 = swift_allocError(v147, v148, 0LL, 0LL);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v147 - 8) + 104LL))( v150,  enum case for InternalRoutingError.sessionNotFound(_:),  v147);
    swift_bridgeObjectRetain();
    uint64_t v151 = MRDFastSyncGroupSessionState.rawValue.getter(v149, a3, a4, 2LL);
    uint64_t v153 = v152;
    uint64_t v155 = v154;
    unsigned __int8 v157 = v156;
    sub_10028F874(v151, v152, v154, v156);
    swift_errorRelease(v151);
    sub_100156BA8(v153, v155, v157);
    return sub_1001A813C(v162, type metadata accessor for HostedRoutingSourceSession);
  }

  else
  {
    __break(1u);
  }

  return result;
}

uint64_t sub_10027307C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v126 = a3;
  uint64_t v124 = *v3;
  uint64_t v120 = type metadata accessor for RoutingInteraction(0LL);
  uint64_t v119 = *(void *)(v120 - 8);
  __chkstk_darwin(v120);
  uint64_t v117 = v6;
  unint64_t v118 = (char *)&v108 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v128 = type metadata accessor for RoutingControl.RoutingControlType(0LL);
  uint64_t v127 = *(void *)(v128 - 8);
  __chkstk_darwin(v128);
  uint64_t v8 = (uint64_t *)((char *)&v108 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v9 = type metadata accessor for RoutingControl(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v115 = (char *)&v108 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v121 = (char *)&v108 - v14;
  uint64_t v116 = v15;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v108 - v16;
  uint64_t v18 = sub_100156B68((uint64_t *)&unk_1003FBBE0);
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v108 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v122 = a2;
  uint64_t v123 = RoutingInteraction.identifier.getter(v19);
  unint64_t v23 = v22;
  uint64_t v24 = sub_100174330();
  sub_1001A8360(v24, (uint64_t)v21, (uint64_t *)&unk_1003FBBE0);
  uint64_t v25 = type metadata accessor for Logger(0LL);
  uint64_t v26 = *(void *)(v25 - 8);
  int v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48))(v21, 1LL, v25);
  uint64_t v129 = (void *)v23;
  if (v27 == 1)
  {
    uint64_t v28 = sub_1001603DC((uint64_t)v21, (uint64_t *)&unk_1003FBBE0);
    uint64_t v29 = a1;
  }

  else
  {
    uint64_t v114 = v26;
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v17, a1, v9);
    swift_bridgeObjectRetain_n(v23, 2LL);
    uint64_t v31 = (os_log_s *)Logger.logObject.getter(v30);
    os_log_type_t v32 = static os_log_type_t.default.getter(v31);
    int v112 = v32;
    uint64_t v29 = a1;
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = swift_slowAlloc(32LL, -1LL);
      uint64_t v110 = swift_slowAlloc(96LL, -1LL);
      uint64_t v133 = v110;
      *(_DWORD *)uint64_t v33 = 136315650;
      uint64_t v113 = v9;
      os_log_t v109 = v31;
      uint64_t v34 = _typeName(_:qualified:)(v124, 0LL);
      uint64_t v130 = sub_10015ADC4(v34, v35, &v133);
      uint64_t v111 = v29;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v130, v131, v33 + 4, v33 + 12);
      swift_bridgeObjectRelease();
      *(_WORD *)(v33 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v130 = sub_10015ADC4(v123, v23, &v133);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v130, v131, v33 + 14, v33 + 22);
      swift_bridgeObjectRelease_n(v23, 3LL);
      *(_WORD *)(v33 + 22) = 2080;
      uint64_t v36 = sub_100156FEC( &qword_1003F8900,  (uint64_t (*)(uint64_t))&type metadata accessor for RoutingControl,  (uint64_t)&protocol conformance descriptor for RoutingControl);
      uint64_t v37 = dispatch thunk of CustomStringConvertible.description.getter(v113, v36);
      uint64_t v130 = sub_10015ADC4(v37, v38, &v133);
      uint64_t v29 = v111;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v130, v131, v33 + 24, v33 + 32);
      uint64_t v9 = v113;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
      os_log_t v39 = v109;
      _os_log_impl( (void *)&_mh_execute_header,  v109,  (os_log_type_t)v112,  "[%s] handleControl<%s> - handle interaction with: %s",  (uint8_t *)v33,  0x20u);
      uint64_t v40 = v110;
      swift_arrayDestroy(v110, 3LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v40, -1LL, -1LL);
      swift_slowDealloc(v33, -1LL, -1LL);
    }

    else
    {
      swift_bridgeObjectRelease_n(v23, 2LL);

      (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
    }

    uint64_t v28 = (*(uint64_t (**)(char *, uint64_t))(v114 + 8))(v21, v25);
  }

  RoutingControl.type.getter(v28);
  uint64_t v41 = v127;
  uint64_t v42 = v128;
  int v43 = (*(uint64_t (**)(uint64_t *, uint64_t))(v127 + 88))(v8, v128);
  if (v43 == enum case for RoutingControl.RoutingControlType.skipForward(_:))
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t *, uint64_t))(v41 + 96))(v8, v42);
    uint64_t v44 = *v8;
    uint64_t v45 = sub_100156B68((uint64_t *)&unk_1003F9E80);
    uint64_t inited = swift_initStackObject(v45, v131);
    *(_OWORD *)(inited + 16) = xmmword_10034BE40;
    if (kMRMediaRemoteOptionSkipInterval)
    {
      *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(kMRMediaRemoteOptionSkipInterval);
      *(void *)(inited + 40) = v47;
      *(void *)(inited + 72) = &type metadata for Double;
      *(void *)(inited + 48) = v44;
      unint64_t v48 = sub_1001B7BC8(inited);
      uint64_t v49 = v29;
      int v50 = 17;
LABEL_13:
      sub_100281478(v49, v50, v48, (void (*)(void))sub_10028F874, v126);
      return swift_bridgeObjectRelease();
    }

    __break(1u);
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }

  if (v43 == enum case for RoutingControl.RoutingControlType.skipBackward(_:))
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t *, uint64_t))(v41 + 96))(v8, v42);
    uint64_t v51 = *v8;
    uint64_t v52 = sub_100156B68((uint64_t *)&unk_1003F9E80);
    uint64_t v53 = swift_initStackObject(v52, v132);
    *(_OWORD *)(v53 + 16) = xmmword_10034BE40;
    if (kMRMediaRemoteOptionSkipInterval)
    {
      *(void *)(v53 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(kMRMediaRemoteOptionSkipInterval);
      *(void *)(v53 + 40) = v54;
      *(void *)(v53 + 72) = &type metadata for Double;
      *(void *)(v53 + 48) = v51;
      unint64_t v48 = sub_1001B7BC8(v53);
      uint64_t v49 = v29;
      int v50 = 18;
      goto LABEL_13;
    }

    goto LABEL_37;
  }

  if (v43 == enum case for RoutingControl.RoutingControlType.absoluteVolume(_:)) {
    goto LABEL_16;
  }
  if (v43 == enum case for RoutingControl.RoutingControlType.relativeVolume(_:))
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t *, uint64_t))(v41 + 96))(v8, v42);
    uint64_t v56 = type metadata accessor for RoutingControls.RelativeVolumeControl.AdjustmentType(0LL);
    (*(void (**)(uint64_t *, uint64_t))(*(void *)(v56 - 8) + 8LL))(v8, v56);
    return sub_100282460(v29, v122, v126);
  }

  if (v43 == enum case for RoutingControl.RoutingControlType.previousTrack(_:))
  {
    swift_bridgeObjectRelease();
    unint64_t v48 = sub_1001B7BC8((uint64_t)_swiftEmptyArrayStorage);
    uint64_t v49 = v29;
    int v50 = 5;
    goto LABEL_13;
  }

  if (v43 == enum case for RoutingControl.RoutingControlType.nextTrack(_:))
  {
    swift_bridgeObjectRelease();
    unint64_t v48 = sub_1001B7BC8((uint64_t)_swiftEmptyArrayStorage);
    uint64_t v49 = v29;
    int v50 = 4;
    goto LABEL_13;
  }

  if (v43 == enum case for RoutingControl.RoutingControlType.play(_:))
  {
    swift_bridgeObjectRelease();
    uint64_t v57 = v119;
    uint64_t v58 = v118;
    uint64_t v59 = v120;
    (*(void (**)(char *, uint64_t, uint64_t))(v119 + 16))(v118, v122, v120);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v121, v29, v9);
    uint64_t v60 = *(unsigned __int8 *)(v57 + 80);
    uint64_t v61 = (v60 + 40) & ~v60;
    uint64_t v62 = *(unsigned __int8 *)(v10 + 80);
    uint64_t v111 = v29;
    uint64_t v63 = (v117 + v62 + v61) & ~v62;
    uint64_t v64 = (char *)swift_allocObject(&unk_1003AC660, v63 + v116, v60 | v62 | 7);
    uint64_t v65 = v126;
    *((void *)v64 + 2) = sub_10028F874;
    *((void *)v64 + 3) = v65;
    uint64_t v66 = v125;
    *((void *)v64 + 4) = v125;
    (*(void (**)(char *, char *, uint64_t))(v57 + 32))(&v64[v61], v58, v59);
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v64[v63], v121, v9);
    swift_retain(v65);
    swift_retain(v66);
    unint64_t v67 = sub_1001B7BC8((uint64_t)_swiftEmptyArrayStorage);
    BOOL v68 = (void (*)(void))sub_100291B9C;
    uint64_t v69 = v111;
    int v70 = 0;
LABEL_28:
    sub_100281478(v69, v70, v67, v68, (uint64_t)v64);
    swift_release(v64);
    return swift_bridgeObjectRelease();
  }

  if (v43 == enum case for RoutingControl.RoutingControlType.pause(_:))
  {
    swift_bridgeObjectRelease();
    uint64_t v71 = v119;
    uint64_t v72 = v118;
    uint64_t v73 = v120;
    (*(void (**)(char *, uint64_t, uint64_t))(v119 + 16))(v118, v122, v120);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v121, v29, v9);
    uint64_t v74 = *(unsigned __int8 *)(v71 + 80);
    uint64_t v75 = (v74 + 40) & ~v74;
    uint64_t v76 = *(unsigned __int8 *)(v10 + 80);
    uint64_t v111 = v29;
    uint64_t v77 = (v117 + v76 + v75) & ~v76;
    uint64_t v64 = (char *)swift_allocObject(&unk_1003AC638, v77 + v116, v74 | v76 | 7);
    uint64_t v78 = v126;
    *((void *)v64 + 2) = sub_10028F874;
    *((void *)v64 + 3) = v78;
    uint64_t v79 = v125;
    *((void *)v64 + 4) = v125;
    (*(void (**)(char *, char *, uint64_t))(v71 + 32))(&v64[v75], v72, v73);
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v64[v77], v121, v9);
    swift_retain(v78);
    swift_retain(v79);
    unint64_t v67 = sub_1001B7BC8((uint64_t)_swiftEmptyArrayStorage);
    BOOL v68 = (void (*)(void))sub_100291AC0;
    uint64_t v69 = v111;
    int v70 = 1;
    goto LABEL_28;
  }

  if (v43 == enum case for RoutingControl.RoutingControlType.rewind(_:))
  {
LABEL_38:
    uint64_t v133 = 0LL;
    unint64_t v134 = 0xE000000000000000LL;
    _StringGuts.grow(_:)(81LL);
    v98._countAndFlagsBits = 91LL;
    v98._object = (void *)0xE100000000000000LL;
    String.append(_:)(v98);
    v99._countAndFlagsBits = _typeName(_:qualified:)(v124, 0LL);
    String.append(_:)(v99);
    swift_bridgeObjectRelease();
    v100._object = (void *)0x8000000100340610LL;
    v100._countAndFlagsBits = 0xD000000000000010LL;
    String.append(_:)(v100);
    v101._countAndFlagsBits = v123;
    v101._object = v129;
    String.append(_:)(v101);
    v102._countAndFlagsBits = 0xD00000000000003CLL;
    v102._object = (void *)0x8000000100340680LL;
    String.append(_:)(v102);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  v133,  v134,  "mediaremoted/HostedRoutingSessionDataSource.swift",  49LL,  2LL,  1061LL,  0);
    goto LABEL_40;
  }

  if (v43 == enum case for RoutingControl.RoutingControlType.fastForward(_:))
  {
    uint64_t v133 = 0LL;
    unint64_t v134 = 0xE000000000000000LL;
    _StringGuts.grow(_:)(86LL);
    v103._countAndFlagsBits = 91LL;
    v103._object = (void *)0xE100000000000000LL;
    String.append(_:)(v103);
    v104._countAndFlagsBits = _typeName(_:qualified:)(v124, 0LL);
    String.append(_:)(v104);
    swift_bridgeObjectRelease();
    v105._object = (void *)0x8000000100340610LL;
    v105._countAndFlagsBits = 0xD000000000000010LL;
    String.append(_:)(v105);
    v106._countAndFlagsBits = v123;
    v106._object = v129;
    String.append(_:)(v106);
    v107._countAndFlagsBits = 0xD000000000000041LL;
    v107._object = (void *)0x8000000100340630LL;
    String.append(_:)(v107);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  v133,  v134,  "mediaremoted/HostedRoutingSessionDataSource.swift",  49LL,  2LL,  1064LL,  0);
    goto LABEL_40;
  }

  if (v43 == enum case for RoutingControl.RoutingControlType.tvRemote(_:)
    || v43 == enum case for RoutingControl.RoutingControlType.favorite(_:))
  {
    swift_bridgeObjectRelease();
    uint64_t v80 = type metadata accessor for InternalRoutingError(0LL);
    uint64_t v81 = sub_100156FEC( &qword_1003F8908,  (uint64_t (*)(uint64_t))&type metadata accessor for InternalRoutingError,  (uint64_t)&protocol conformance descriptor for InternalRoutingError);
    uint64_t v82 = swift_allocError(v80, v81, 0LL, 0LL);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v80 - 8) + 104LL))( v83,  enum case for InternalRoutingError.notImplemented(_:),  v80);
    uint64_t v84 = MRDFastSyncGroupSessionState.rawValue.getter(v82, 0LL, 0LL, 4LL);
    uint64_t v86 = v85;
    uint64_t v88 = v87;
    unsigned __int8 v90 = v89;
    sub_10028F874(v84, v85, v87, v89);
    swift_errorRelease(v84);
    return sub_100156BA8(v86, v88, v90);
  }

  if (v43 == enum case for RoutingControl.RoutingControlType.mute(_:))
  {
LABEL_16:
    swift_bridgeObjectRelease();
    return sub_100282460(v29, v122, v126);
  }

  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v115, v29, v9);
  uint64_t v133 = 0LL;
  unint64_t v134 = 0xE000000000000000LL;
  _StringGuts.grow(_:)(49LL);
  swift_bridgeObjectRelease();
  uint64_t v133 = 91LL;
  unint64_t v134 = 0xE100000000000000LL;
  v91._countAndFlagsBits = _typeName(_:qualified:)(v124, 0LL);
  String.append(_:)(v91);
  swift_bridgeObjectRelease();
  v92._object = (void *)0x8000000100340610LL;
  v92._countAndFlagsBits = 0xD000000000000010LL;
  String.append(_:)(v92);
  v93._countAndFlagsBits = v123;
  v93._object = v129;
  String.append(_:)(v93);
  v94._countAndFlagsBits = 0x746E6F63202D203ELL;
  v94._object = (void *)0xED0000203A6C6F72LL;
  String.append(_:)(v94);
  uint64_t v95 = sub_100156FEC( &qword_1003F8900,  (uint64_t (*)(uint64_t))&type metadata accessor for RoutingControl,  (uint64_t)&protocol conformance descriptor for RoutingControl);
  v96._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v9, v95);
  String.append(_:)(v96);
  swift_bridgeObjectRelease();
  v97._countAndFlagsBits = 0x6E616820746F6E20LL;
  v97._object = (void *)0xED00002E64656C64LL;
  String.append(_:)(v97);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  v133,  v134,  "mediaremoted/HostedRoutingSessionDataSource.swift",  49LL,  2LL,  1082LL,  0);
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_100273E44(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v7 = a1 + 16;
  swift_beginAccess(a1 + 16, v15, 0LL, 0LL);
  uint64_t result = swift_weakLoadStrong(v7);
  if (result)
  {
    uint64_t v9 = result;
    swift_beginAccess( result + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_internalSessionObservers,  v14,  33LL,  0LL);
    uint64_t v10 = sub_100180288(a2, a3);
    uint64_t v12 = v11;
    swift_endAccess(v14);
    if (v10)
    {
      uint64_t v13 = sub_100162944(v10, v12);
      a4(v13);
    }

    return swift_release(v9);
  }

  return result;
}

uint64_t sub_100273F0C( uint64_t a1, void (*a2)(void, void, void, void), uint64_t a3, uint64_t (*a4)(void), uint64_t a5, double a6)
{
  uint64_t v160 = a5;
  uint64_t v149 = a4;
  uint64_t v161 = a3;
  uint64_t v148 = a2;
  uint64_t v151 = *v6;
  uint64_t v146 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v145 = *(void *)(v146 - 8);
  __chkstk_darwin(v146);
  uint64_t v144 = (char *)&v129 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v143 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v142 = *(void *)(v143 - 8);
  __chkstk_darwin(v143);
  uint64_t v141 = (char *)&v129 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v154 = type metadata accessor for DispatchTime(0LL);
  uint64_t v138 = *(void *)(v154 - 8);
  uint64_t v11 = __chkstk_darwin(v154);
  uint64_t v137 = (char *)&v129 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  unint64_t v140 = (char *)&v129 - v13;
  uint64_t v14 = type metadata accessor for RoutingInteraction(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v147 = (char *)&v129 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = type metadata accessor for Logger(0LL);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v129 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = type metadata accessor for ContinuousClock.Instant(0LL);
  uint64_t v158 = *(void *)(v21 - 8);
  uint64_t v159 = v21;
  uint64_t v22 = __chkstk_darwin(v21);
  uint64_t v163 = (uint64_t)&v129 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v153 = (uint64_t)&v129 - v25;
  uint64_t v132 = v26;
  __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v129 - v27;
  uint64_t v29 = type metadata accessor for ContinuousClock(0LL);
  uint64_t v155 = *(void *)(v29 - 8);
  uint64_t v156 = v29;
  uint64_t v30 = __chkstk_darwin(v29);
  uint64_t v162 = (char *)&v129 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v152 = (char *)&v129 - v33;
  uint64_t v131 = v34;
  uint64_t v35 = __chkstk_darwin(v32);
  uint64_t v37 = (char *)&v129 - v36;
  uint64_t v150 = RoutingInteraction.identifier.getter(v35);
  unint64_t v39 = v38;
  uint64_t v40 = ContinuousClock.init()(v150);
  unsigned __int8 v157 = v28;
  ContinuousClock.now.getter(v40);
  uint64_t v41 = sub_1001741A8();
  uint64_t v135 = v18;
  uint64_t v42 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  uint64_t v136 = v17;
  v42(v20, v41, v17);
  uint64_t v133 = v15;
  int v43 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  uint64_t v44 = v147;
  unint64_t v134 = (void (*)(void, void))v14;
  v43(v147, a1, v14);
  unint64_t v164 = v39;
  swift_bridgeObjectRetain_n(v39, 2LL);
  uint64_t v45 = v20;
  uint64_t v47 = (os_log_s *)Logger.logObject.getter(v46);
  os_log_type_t v48 = static os_log_type_t.default.getter(v47);
  if (os_log_type_enabled(v47, v48))
  {
    uint64_t v49 = swift_slowAlloc(32LL, -1LL);
    uint64_t v50 = swift_slowAlloc(96LL, -1LL);
    aBlock[0] = v50;
    *(_DWORD *)uint64_t v49 = 136315650;
    uint64_t v51 = _typeName(_:qualified:)(v151, 0LL);
    unsigned __int8 v165 = (void *)sub_10015ADC4(v51, v52, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v165, v166, v49 + 4, v49 + 12);
    swift_bridgeObjectRelease();
    *(_WORD *)(v49 + 12) = 2080;
    unint64_t v53 = v164;
    swift_bridgeObjectRetain();
    unsigned __int8 v165 = (void *)sub_10015ADC4(v150, v53, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v165, v166, v49 + 14, v49 + 22);
    swift_bridgeObjectRelease_n(v53, 3LL);
    *(_WORD *)(v49 + 22) = 2080;
    uint64_t v54 = sub_100156FEC( &qword_1003F88F8,  (uint64_t (*)(uint64_t))&type metadata accessor for RoutingInteraction,  (uint64_t)&protocol conformance descriptor for RoutingInteraction);
    uint64_t v130 = v45;
    BOOL v55 = v134;
    uint64_t v56 = dispatch thunk of CustomStringConvertible.description.getter(v134, v54);
    unsigned __int8 v165 = (void *)sub_10015ADC4(v56, v57, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v165, v166, v49 + 24, v49 + 32);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, void))(v133 + 8))(v44, v55);
    _os_log_impl( (void *)&_mh_execute_header,  v47,  v48,  "[%s] waitForSessionStability<%s> - interaction: %s",  (uint8_t *)v49,  0x20u);
    swift_arrayDestroy(v50, 3LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v50, -1LL, -1LL);
    swift_slowDealloc(v49, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v135 + 8))(v130, v136);
  }

  else
  {
    swift_bridgeObjectRelease_n(v164, 2LL);
    (*(void (**)(char *, void))(v133 + 8))(v44, v134);

    (*(void (**)(char *, uint64_t))(v135 + 8))(v20, v136);
  }

  uint64_t v58 = v132;
  uint64_t v59 = v131;
  uint64_t v60 = v155;
  uint64_t v61 = *(void (**)(char *, char *, uint64_t))(v155 + 16);
  uint64_t v62 = v152;
  uint64_t v147 = v37;
  uint64_t v63 = v37;
  uint64_t v64 = v156;
  v61(v152, v63, v156);
  uint64_t v65 = v158;
  uint64_t v66 = *(void (**)(uint64_t, char *, uint64_t))(v158 + 16);
  uint64_t v67 = v153;
  uint64_t v68 = v159;
  v66(v153, v157, v159);
  v61(v162, v62, v64);
  v66(v163, (char *)v67, v68);
  uint64_t v69 = *(unsigned __int8 *)(v60 + 80);
  uint64_t v70 = (v69 + 16) & ~v69;
  uint64_t v71 = *(unsigned __int8 *)(v65 + 80);
  uint64_t v72 = (v59 + v71 + v70) & ~v71;
  unint64_t v73 = (v58 + v72 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v74 = (v73 + 23) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v75 = (v74 + 23) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v76 = swift_allocObject(&unk_1003ABE18, v75 + 8, v69 | v71 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v60 + 32))(v76 + v70, v152, v64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v65 + 32))(v76 + v72, v153, v68);
  uint64_t v77 = (void *)(v76 + v73);
  unint64_t v78 = v164;
  *uint64_t v77 = v150;
  v77[1] = v78;
  uint64_t v79 = (void *)(v76 + v74);
  uint64_t v80 = v161;
  void *v79 = v148;
  v79[1] = v80;
  *(void *)(v76 + v75) = v151;
  swift_retain_n(v80, 2LL);
  swift_bridgeObjectRetain();
  uint64_t v81 = sub_1001A8998();
  uint64_t v153 = v81;
  uint64_t v83 = v82;
  uint64_t v84 = swift_allocObject(&unk_1003ABBC0, 24LL, 7LL);
  uint64_t v135 = v84 + 16;
  uint64_t v85 = v139;
  swift_weakInit(v84 + 16, v139);
  uint64_t v86 = (void *)swift_allocObject(&unk_1003ABE40, 72LL, 7LL);
  uint64_t v87 = v149;
  v86[2] = v84;
  v86[3] = v87;
  uint64_t v88 = v160;
  v86[4] = v160;
  v86[5] = v81;
  v86[6] = v83;
  v86[7] = sub_10028FA74;
  v86[8] = v76;
  uint64_t v89 = swift_allocObject(&unk_1003ABE68, 32LL, 7LL);
  *(void *)(v89 + 16) = sub_10028FA74;
  *(void *)(v89 + 24) = v76;
  uint64_t v90 = swift_allocObject(&unk_1003ABE90, 32LL, 7LL);
  *(void *)(v90 + 16) = sub_10028FB4C;
  *(void *)(v90 + 24) = v86;
  Swift::String v91 = (void *)(v85 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_internalSessionObservers);
  swift_beginAccess( v85 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_internalSessionObservers,  aBlock,  33LL,  0LL);
  swift_bridgeObjectRetain_n(v83, 3LL);
  uint64_t v152 = (char *)v76;
  swift_retain_n(v76, 3LL);
  uint64_t v136 = v84;
  swift_retain_n(v84, 2LL);
  swift_retain_n(v88, 2LL);
  swift_retain(v86);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v91);
  unsigned __int8 v165 = (void *)*v91;
  *Swift::String v91 = 0x8000000000000000LL;
  uint64_t v93 = v90;
  uint64_t v94 = v153;
  sub_100181C5C((uint64_t)sub_1001840B4, v93, v153, v83, isUniquelyReferenced_nonNull_native);
  *Swift::String v91 = v165;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v95 = swift_endAccess(aBlock);
  uint64_t v133 = (*(uint64_t (**)(uint64_t))(*(void *)v85 + 280LL))(v95);
  Swift::String v96 = v137;
  static DispatchTime.now()();
  Swift::String v97 = v140;
  + infix(_:_:)(v96, a6);
  unint64_t v134 = *(void (**)(void, void))(v138 + 8);
  v134(v96, v154);
  uint64_t v98 = swift_allocObject(&unk_1003ABBC0, 24LL, 7LL);
  swift_weakInit(v98 + 16, v85);
  Swift::String v99 = (void *)swift_allocObject(&unk_1003ABEB8, 56LL, 7LL);
  v99[2] = v98;
  v99[3] = v94;
  v99[4] = v83;
  v99[5] = sub_100184090;
  v99[6] = v89;
  aBlock[4] = (uint64_t)sub_10028FC60;
  unint64_t v168 = v99;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = (uint64_t)sub_100157EA8;
  aBlock[3] = (uint64_t)&unk_1003ABED0;
  Swift::String v100 = _Block_copy(aBlock);
  uint64_t v138 = v83;
  swift_bridgeObjectRetain();
  swift_retain(v98);
  uint64_t v139 = v89;
  uint64_t v101 = swift_retain(v89);
  Swift::String v102 = v141;
  static DispatchQoS.unspecified.getter(v101);
  unsigned __int8 v165 = _swiftEmptyArrayStorage;
  uint64_t v103 = sub_100156FEC( (unint64_t *)&qword_1003FADB0,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v104 = sub_100156B68((uint64_t *)&unk_1003F9A70);
  uint64_t v105 = sub_1001604E8( (unint64_t *)&qword_1003FADC0,  (uint64_t *)&unk_1003F9A70,  (uint64_t)&protocol conformance descriptor for [A]);
  Swift::String v106 = v144;
  uint64_t v107 = v104;
  uint64_t v108 = v146;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v165, v107, v105, v146, v103);
  os_log_t v109 = (void *)v133;
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v97, v102, v106, v100);
  _Block_release(v100);

  (*(void (**)(char *, uint64_t))(v145 + 8))(v106, v108);
  (*(void (**)(char *, uint64_t))(v142 + 8))(v102, v143);
  v134(v97, v154);
  uint64_t v110 = v168;
  swift_release(v98);
  swift_release(v110);
  uint64_t v111 = v135;
  swift_beginAccess(v135, aBlock, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(v111);
  if (Strong)
  {
    uint64_t v113 = Strong;
    uint64_t v114 = (void *)v139;
    (*(void (**)(void))(*(void *)Strong + 328LL))();
    uint64_t v115 = v160;
    char v116 = v149();
    swift_bridgeObjectRelease();
    uint64_t v117 = v161;
    unint64_t v118 = v164;
    uint64_t v119 = v138;
    if ((v116 & 1) != 0)
    {
      swift_beginAccess( v113 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_internalSessionObservers,  &v165,  33LL,  0LL);
      swift_bridgeObjectRetain();
      uint64_t v120 = sub_100180288(v153, v119);
      uint64_t v122 = v121;
      swift_endAccess(&v165);
      swift_bridgeObjectRelease();
      sub_100162944(v120, v122);
      sub_100274BBC(0, (uint64_t)v162, v163, v150, v118, v148, v117, v151);
    }

    swift_release(v86);
    uint64_t v86 = v114;
  }

  else
  {
    uint64_t v113 = v139;
    uint64_t v115 = v160;
    uint64_t v117 = v161;
  }

  swift_release(v86);
  swift_release(v113);
  swift_release_n(v152, 2LL);
  swift_bridgeObjectRelease();
  swift_release(v115);
  uint64_t v123 = v136;
  swift_release(v136);
  uint64_t v124 = v156;
  uint64_t v125 = *(void (**)(uint64_t, uint64_t))(v155 + 8);
  v125((uint64_t)v162, v156);
  uint64_t v126 = v159;
  uint64_t v127 = *(void (**)(uint64_t, uint64_t))(v158 + 8);
  v127(v163, v159);
  swift_bridgeObjectRelease();
  swift_release(v117);
  swift_bridgeObjectRelease();
  v127((uint64_t)v157, v126);
  v125((uint64_t)v147, v124);
  return swift_release(v123);
}

uint64_t sub_100274BBC( char a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, void (*a6)(void, void, void, void), uint64_t a7, uint64_t a8)
{
  uint64_t v85 = a8;
  uint64_t v101 = a7;
  Swift::String v102 = a6;
  uint64_t v86 = a4;
  uint64_t v94 = type metadata accessor for Duration.UnitsFormatStyle.FractionalPartDisplayStrategy(0LL);
  uint64_t v92 = *(void *)(v94 - 8);
  __chkstk_darwin(v94);
  Swift::String v91 = &v82[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v93 = type metadata accessor for Duration.UnitsFormatStyle.ZeroValueUnitsDisplayStrategy(0LL);
  uint64_t v89 = *(void *)(v93 - 8);
  __chkstk_darwin(v93);
  uint64_t v12 = &v82[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v90 = type metadata accessor for Duration.UnitsFormatStyle.UnitWidth(0LL);
  uint64_t v88 = *(void *)(v90 - 8);
  __chkstk_darwin(v90);
  uint64_t v14 = &v82[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v15 = type metadata accessor for Duration.UnitsFormatStyle(0LL);
  uint64_t v96 = *(void *)(v15 - 8);
  uint64_t v97 = v15;
  __chkstk_darwin(v15);
  uint64_t v95 = &v82[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v103 = type metadata accessor for Logger(0LL);
  uint64_t v17 = *(void *)(v103 - 8);
  uint64_t v18 = __chkstk_darwin(v103);
  uint64_t v20 = &v82[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v18);
  uint64_t v22 = &v82[-v21];
  uint64_t v23 = type metadata accessor for ContinuousClock.Instant(0LL);
  uint64_t v99 = *(void *)(v23 - 8);
  uint64_t v100 = v23;
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v26 = &v82[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  ContinuousClock.now.getter(v24);
  uint64_t v87 = ContinuousClock.Instant.duration(to:)(v26);
  uint64_t v28 = v27;
  uint64_t v29 = sub_1001741A8();
  uint64_t v98 = v17;
  uint64_t v30 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v17 + 16);
  if ((a1 & 1) != 0)
  {
    v30(v22, v29, v103);
    swift_bridgeObjectRetain_n(a5, 2LL);
    uint64_t v32 = (os_log_s *)Logger.logObject.getter(v31);
    os_log_type_t v33 = static os_log_type_t.error.getter();
    int v34 = v33;
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v35 = swift_slowAlloc(32LL, -1LL);
      uint64_t v84 = swift_slowAlloc(96LL, -1LL);
      v106[0] = v84;
      *(_DWORD *)uint64_t v35 = 136315650;
      uint64_t v36 = _typeName(_:qualified:)(v85, 0LL);
      uint64_t v85 = v28;
      uint64_t v104 = sub_10015ADC4(v36, v37, v106);
      int v83 = v34;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v104, &v105, v35 + 4, v35 + 12);
      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v104 = sub_10015ADC4(v86, a5, v106);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v104, &v105, v35 + 14, v35 + 22);
      swift_bridgeObjectRelease_n(a5, 3LL);
      *(_WORD *)(v35 + 22) = 2080;
      uint64_t v86 = v35 + 24;
      uint64_t v38 = sub_100156B68(&qword_1003F8CE0);
      uint64_t v39 = type metadata accessor for Duration.UnitsFormatStyle.Unit(0LL);
      uint64_t v40 = *(void *)(v39 - 8);
      uint64_t v41 = *(void *)(v40 + 72);
      uint64_t v42 = *(unsigned __int8 *)(v40 + 80);
      uint64_t v43 = (v42 + 32) & ~v42;
      uint64_t v44 = swift_allocObject(v38, v43 + 2 * v41, v42 | 7);
      *(_OWORD *)(v44 + 16) = xmmword_10034C140;
      uint64_t v45 = static Duration.UnitsFormatStyle.Unit.seconds.getter();
      static Duration.UnitsFormatStyle.Unit.milliseconds.getter(v45);
      uint64_t v46 = sub_1001841C8(v44);
      swift_setDeallocating(v44);
      swift_arrayDestroy(v44 + v43, 2LL, v39);
      uint64_t v47 = swift_deallocClassInstance(v44, 32LL, 7LL);
      uint64_t v48 = static Duration.UnitsFormatStyle.UnitWidth.abbreviated.getter(v47);
      uint64_t v49 = static Duration.UnitsFormatStyle.ZeroValueUnitsDisplayStrategy.hide.getter(v48);
      uint64_t v50 = v32;
      uint64_t v51 = v91;
      static Duration.UnitsFormatStyle.FractionalPartDisplayStrategy.hide.getter(v49);
      unint64_t v52 = v95;
      static FormatStyle<>.units(allowed:width:maximumUnitCount:zeroValueUnits:valueLength:fractionalPart:)( v46,  v14,  0LL,  1LL,  v12,  0LL,  1LL,  v51);
      swift_bridgeObjectRelease();
      (*(void (**)(_BYTE *, uint64_t))(v92 + 8))(v51, v94);
      (*(void (**)(_BYTE *, uint64_t))(v89 + 8))(v12, v93);
      (*(void (**)(_BYTE *, uint64_t))(v88 + 8))(v14, v90);
      uint64_t v53 = sub_100156FEC( &qword_1003F8CE8,  (uint64_t (*)(uint64_t))&type metadata accessor for Duration.UnitsFormatStyle,  (uint64_t)&protocol conformance descriptor for Duration.UnitsFormatStyle);
      uint64_t v54 = v97;
      Duration.formatted<A>(_:)(&v104, v52, v87, v85, v97, v53);
      (*(void (**)(_BYTE *, uint64_t))(v96 + 8))(v52, v54);
      uint64_t v104 = sub_10015ADC4(v104, v105, v106);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v104, &v105, v86, v35 + 32);
      swift_bridgeObjectRelease();
      _os_log_impl( (void *)&_mh_execute_header,  v50,  (os_log_type_t)v83,  "[%s] waitForSessionStability<%s> - timed out after: %s",  (uint8_t *)v35,  0x20u);
      uint64_t v55 = v84;
      swift_arrayDestroy(v84, 3LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v55, -1LL, -1LL);
      swift_slowDealloc(v35, -1LL, -1LL);
    }

    else
    {

      swift_bridgeObjectRelease_n(a5, 2LL);
    }

    (*(void (**)(_BYTE *, uint64_t))(v98 + 8))(v22, v103);
  }

  else
  {
    v30(v20, v29, v103);
    swift_bridgeObjectRetain_n(a5, 2LL);
    unint64_t v57 = (os_log_s *)Logger.logObject.getter(v56);
    os_log_type_t v58 = static os_log_type_t.default.getter(v57);
    int v59 = v58;
    if (os_log_type_enabled(v57, v58))
    {
      uint64_t v60 = swift_slowAlloc(32LL, -1LL);
      uint64_t v84 = swift_slowAlloc(96LL, -1LL);
      v106[0] = v84;
      *(_DWORD *)uint64_t v60 = 136315650;
      uint64_t v61 = _typeName(_:qualified:)(v85, 0LL);
      uint64_t v85 = v28;
      uint64_t v104 = sub_10015ADC4(v61, v62, v106);
      int v83 = v59;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v104, &v105, v60 + 4, v60 + 12);
      swift_bridgeObjectRelease();
      *(_WORD *)(v60 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v104 = sub_10015ADC4(v86, a5, v106);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v104, &v105, v60 + 14, v60 + 22);
      swift_bridgeObjectRelease_n(a5, 3LL);
      *(_WORD *)(v60 + 22) = 2080;
      uint64_t v86 = v60 + 24;
      uint64_t v63 = sub_100156B68(&qword_1003F8CE0);
      uint64_t v64 = type metadata accessor for Duration.UnitsFormatStyle.Unit(0LL);
      uint64_t v65 = *(void *)(v64 - 8);
      uint64_t v66 = *(void *)(v65 + 72);
      uint64_t v67 = *(unsigned __int8 *)(v65 + 80);
      uint64_t v68 = (v67 + 32) & ~v67;
      uint64_t v69 = swift_allocObject(v63, v68 + 2 * v66, v67 | 7);
      *(_OWORD *)(v69 + 16) = xmmword_10034C140;
      uint64_t v70 = static Duration.UnitsFormatStyle.Unit.seconds.getter();
      static Duration.UnitsFormatStyle.Unit.milliseconds.getter(v70);
      uint64_t v71 = sub_1001841C8(v69);
      swift_setDeallocating(v69);
      swift_arrayDestroy(v69 + v68, 2LL, v64);
      uint64_t v72 = swift_deallocClassInstance(v69, 32LL, 7LL);
      uint64_t v73 = static Duration.UnitsFormatStyle.UnitWidth.abbreviated.getter(v72);
      uint64_t v74 = static Duration.UnitsFormatStyle.ZeroValueUnitsDisplayStrategy.hide.getter(v73);
      unint64_t v75 = v57;
      uint64_t v76 = v91;
      static Duration.UnitsFormatStyle.FractionalPartDisplayStrategy.hide.getter(v74);
      uint64_t v77 = v95;
      static FormatStyle<>.units(allowed:width:maximumUnitCount:zeroValueUnits:valueLength:fractionalPart:)( v71,  v14,  0LL,  1LL,  v12,  0LL,  1LL,  v76);
      swift_bridgeObjectRelease();
      (*(void (**)(_BYTE *, uint64_t))(v92 + 8))(v76, v94);
      (*(void (**)(_BYTE *, uint64_t))(v89 + 8))(v12, v93);
      (*(void (**)(_BYTE *, uint64_t))(v88 + 8))(v14, v90);
      uint64_t v78 = sub_100156FEC( &qword_1003F8CE8,  (uint64_t (*)(uint64_t))&type metadata accessor for Duration.UnitsFormatStyle,  (uint64_t)&protocol conformance descriptor for Duration.UnitsFormatStyle);
      uint64_t v79 = v97;
      Duration.formatted<A>(_:)(&v104, v77, v87, v85, v97, v78);
      (*(void (**)(_BYTE *, uint64_t))(v96 + 8))(v77, v79);
      uint64_t v104 = sub_10015ADC4(v104, v105, v106);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v104, &v105, v86, v60 + 32);
      swift_bridgeObjectRelease();
      _os_log_impl( (void *)&_mh_execute_header,  v75,  (os_log_type_t)v83,  "[%s] waitForSessionStability<%s> - stable after: %s",  (uint8_t *)v60,  0x20u);
      uint64_t v80 = v84;
      swift_arrayDestroy(v84, 3LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v80, -1LL, -1LL);
      swift_slowDealloc(v60, -1LL, -1LL);
    }

    else
    {

      swift_bridgeObjectRelease_n(a5, 2LL);
    }

    (*(void (**)(_BYTE *, uint64_t))(v98 + 8))(v20, v103);
  }

  v102(0LL, 0LL, 0LL, 0LL);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v99 + 8))(v26, v100);
}

uint64_t sub_1002754B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for HostedRoutingSourceSession(0LL);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = *(void *)(a1 + 16);
  if (!v14) {
    return 0LL;
  }
  uint64_t v33 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  uint64_t v15 = *(void *)(v11 + 72);
  v31[1] = a1;
  uint64_t v32 = v15;
  swift_bridgeObjectRetain();
  uint64_t v16 = 0LL;
  while (1)
  {
    uint64_t v17 = (void *)(v33 + v32 * v16);
    uint64_t v18 = v17[1];
    if (*v17 == a2 && v18 == a3) {
      break;
    }
    char v20 = _stringCompareWithSmolCheck(_:_:expecting:)(*v17, v18, a2, a3, 0LL);
    sub_1001A80F8((uint64_t)v17, (uint64_t)v13, type metadata accessor for HostedRoutingSourceSession);
    if ((v20 & 1) != 0) {
      goto LABEL_11;
    }
LABEL_3:
    ++v16;
    sub_1001A813C((uint64_t)v13, type metadata accessor for HostedRoutingSourceSession);
    if (v16 == v14)
    {
      uint64_t v29 = 0LL;
      goto LABEL_21;
    }
  }

  sub_1001A80F8(v33 + v32 * v16, (uint64_t)v13, type metadata accessor for HostedRoutingSourceSession);
LABEL_11:
  uint64_t v21 = *((void *)v13 + 4);
  uint64_t v22 = *(void *)(v21 + 16);
  if (!v22) {
    goto LABEL_3;
  }
  uint64_t v23 = *(void *)(type metadata accessor for HostedRoutingItem(0LL) - 8);
  uint64_t v24 = *(void *)(v23 + 72);
  uint64_t v25 = (uint64_t *)(v21
  while (1)
  {
    uint64_t v26 = *(v25 - 1);
    uint64_t v27 = *v25;
    BOOL v28 = v26 == a4 && v27 == a5;
    if (v28 || (_stringCompareWithSmolCheck(_:_:expecting:)(v26, v27, a4, a5, 0LL) & 1) != 0) {
      break;
    }
    uint64_t v25 = (uint64_t *)((char *)v25 + v24);
    if (!--v22) {
      goto LABEL_3;
    }
  }

  sub_1001A813C((uint64_t)v13, type metadata accessor for HostedRoutingSourceSession);
  uint64_t v29 = 1LL;
LABEL_21:
  swift_bridgeObjectRelease();
  return v29;
}

uint64_t sub_10027567C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for HostedRoutingSourceSession(0LL);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = *(void *)(a1 + 16);
  if (!v14) {
    return 0LL;
  }
  uint64_t v33 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  uint64_t v15 = *(void *)(v11 + 72);
  v31[1] = a1;
  uint64_t v32 = v15;
  swift_bridgeObjectRetain();
  for (uint64_t i = 0LL; i != v14; ++i)
  {
    uint64_t v17 = (void *)(v33 + v32 * i);
    uint64_t v18 = v17[1];
    if (*v17 == a2 && v18 == a3)
    {
      sub_1001A80F8(v33 + v32 * i, (uint64_t)v13, type metadata accessor for HostedRoutingSourceSession);
    }

    else
    {
      char v20 = _stringCompareWithSmolCheck(_:_:expecting:)(*v17, v18, a2, a3, 0LL);
      sub_1001A80F8((uint64_t)v17, (uint64_t)v13, type metadata accessor for HostedRoutingSourceSession);
      if ((v20 & 1) == 0) {
        goto LABEL_3;
      }
    }

    uint64_t v21 = *((void *)v13 + 4);
    uint64_t v22 = *(void *)(v21 + 16);
    if (!v22)
    {
LABEL_19:
      sub_1001A813C((uint64_t)v13, type metadata accessor for HostedRoutingSourceSession);
      uint64_t v29 = 1LL;
      goto LABEL_20;
    }

    uint64_t v23 = *(void *)(type metadata accessor for HostedRoutingItem(0LL) - 8);
    uint64_t v24 = *(void *)(v23 + 72);
    uint64_t v25 = (uint64_t *)(v21
    while (1)
    {
      uint64_t v26 = *(v25 - 1);
      uint64_t v27 = *v25;
      BOOL v28 = v26 == a4 && v27 == a5;
      if (v28 || (_stringCompareWithSmolCheck(_:_:expecting:)(v26, v27, a4, a5, 0LL) & 1) != 0) {
        break;
      }
      uint64_t v25 = (uint64_t *)((char *)v25 + v24);
      if (!--v22) {
        goto LABEL_19;
      }
    }

uint64_t sub_100275844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for HostedRoutingSourceSession(0LL);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = *(void *)(a1 + 16);
  if (!v14) {
    return 0LL;
  }
  uint64_t v15 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  uint64_t v50 = *(void *)(v11 + 72);
  uint64_t v40 = a1;
  swift_bridgeObjectRetain();
  uint64_t v16 = 0LL;
  __int128 v48 = xmmword_10034BE40;
  uint64_t v46 = v13;
  uint64_t v47 = a5;
  uint64_t v44 = a3;
  uint64_t v45 = a4;
  uint64_t v42 = v14;
  uint64_t v43 = a2;
  uint64_t v41 = v15;
  while (1)
  {
    uint64_t v17 = (void *)(v15 + v50 * v16);
    uint64_t v18 = v17[1];
    if (*v17 == a2 && v18 == a3)
    {
      sub_1001A80F8(v15 + v50 * v16, (uint64_t)v13, type metadata accessor for HostedRoutingSourceSession);
    }

    else
    {
      char v20 = _stringCompareWithSmolCheck(_:_:expecting:)(*v17, v18, a2, a3, 0LL);
      sub_1001A80F8((uint64_t)v17, (uint64_t)v13, type metadata accessor for HostedRoutingSourceSession);
      if ((v20 & 1) == 0) {
        goto LABEL_4;
      }
    }

    int64_t v21 = *(void *)(*((void *)v13 + 4) + 16LL);
    if (v21)
    {
      unint64_t v52 = _swiftEmptyArrayStorage;
      uint64_t v22 = swift_bridgeObjectRetain();
      sub_10015DCE8(0, v21, 0);
      uint64_t v23 = v52;
      uint64_t v24 = *(void *)(type metadata accessor for HostedRoutingItem(0LL) - 8);
      uint64_t v25 = *(unsigned __int8 *)(v24 + 80);
      uint64_t v26 = *(void *)(v24 + 72);
      uint64_t v49 = v22;
      uint64_t v27 = (uint64_t *)(v22 + ((v25 + 32) & ~v25) + 8);
      do
      {
        uint64_t v28 = *(v27 - 1);
        uint64_t v29 = *v27;
        unint64_t v52 = v23;
        unint64_t v30 = v23[2];
        unint64_t v31 = v23[3];
        swift_bridgeObjectRetain();
        if (v30 >= v31 >> 1)
        {
          sub_10015DCE8(v31 > 1, v30 + 1, 1);
          uint64_t v23 = v52;
        }

        uint64_t v27 = (uint64_t *)((char *)v27 + v26);
        v23[2] = v30 + 1;
        uint64_t v32 = &v23[2 * v30];
        v32[4] = v28;
        v32[5] = v29;
        --v21;
      }

      while (v21);
      swift_bridgeObjectRelease();
      uint64_t v13 = v46;
      a5 = v47;
      a3 = v44;
      a4 = v45;
      uint64_t v14 = v42;
      a2 = v43;
      uint64_t v15 = v41;
    }

    else
    {
      uint64_t v23 = _swiftEmptyArrayStorage;
    }

    uint64_t v33 = sub_100156B68(&qword_1003F8620);
    uint64_t inited = swift_initStackObject(v33, v51);
    *(_OWORD *)(inited + 16) = v48;
    *(void *)(inited + 32) = a4;
    *(void *)(inited + 40) = a5;
    if (v23[2] == 1LL)
    {
      if (v23 == (void *)inited) {
        break;
      }
      uint64_t v35 = v23[4];
      uint64_t v36 = v23[5];
      BOOL v37 = v35 == a4 && v36 == a5;
      if (v37 || (_stringCompareWithSmolCheck(_:_:expecting:)(v35, v36, a4, a5, 0LL) & 1) != 0) {
        break;
      }
    }

    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_4:
    ++v16;
    sub_1001A813C((uint64_t)v13, type metadata accessor for HostedRoutingSourceSession);
    if (v16 == v14)
    {
      uint64_t v38 = 0LL;
      goto LABEL_30;
    }
  }

  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1001A813C((uint64_t)v13, type metadata accessor for HostedRoutingSourceSession);
  uint64_t v38 = 1LL;
LABEL_30:
  swift_bridgeObjectRelease();
  return v38;
}

id sub_100275B40(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v3 = a1;
  unint64_t v4 = (unint64_t)a1 >> 62;
  if (!((unint64_t)a1 >> 62))
  {
    unint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    unint64_t v6 = a2 >> 62;
    if (!(a2 >> 62)) {
      goto LABEL_3;
    }
LABEL_50:
    if (v2 < 0) {
      uint64_t v31 = v2;
    }
    else {
      uint64_t v31 = v2 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
    uint64_t v32 = _CocoaArrayWrapper.endIndex.getter(v31);
    swift_bridgeObjectRelease();
    if (v5 == v32) {
      goto LABEL_4;
    }
LABEL_54:
    LOBYTE(v5) = 0;
    return (id)(v5 & 1);
  }

  if (a1 < 0) {
    uint64_t v30 = a1;
  }
  else {
    uint64_t v30 = a1 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain();
  unint64_t v5 = _CocoaArrayWrapper.endIndex.getter(v30);
  swift_bridgeObjectRelease();
  unint64_t v6 = (unint64_t)v2 >> 62;
LABEL_3:
  if (v5 != *(void *)((v2 & 0xFFFFFFFFFFFFF8LL) + 0x10)) {
    goto LABEL_54;
  }
LABEL_4:
  if (!v5) {
    goto LABEL_37;
  }
  uint64_t v7 = v3 & 0xFFFFFFFFFFFFFF8LL;
  if (v3 < 0) {
    uint64_t v7 = v3;
  }
  if (!v4) {
    uint64_t v7 = (v3 & 0xFFFFFFFFFFFFFF8LL) + 32;
  }
  uint64_t v8 = v2 & 0xFFFFFFFFFFFFFF8LL;
  uint64_t v9 = (v2 & 0xFFFFFFFFFFFFFF8LL) + 32;
  if (v2 < 0) {
    uint64_t v10 = v2;
  }
  else {
    uint64_t v10 = v2 & 0xFFFFFFFFFFFFFF8LL;
  }
  if (v6) {
    uint64_t v9 = v10;
  }
  if (v7 == v9)
  {
LABEL_37:
    LOBYTE(v5) = 1;
    return (id)(v5 & 1);
  }

  if ((v5 & 0x8000000000000000LL) != 0) {
    goto LABEL_60;
  }
  unint64_t v33 = v3 & 0xC000000000000001LL;
  if ((v3 & 0xC000000000000001LL) != 0) {
    goto LABEL_61;
  }
  for (id result = *(id *)(v3 + 32); ; id result = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v3))
  {
    uint64_t v12 = result;
    if ((v2 & 0xC000000000000001LL) == 0) {
      break;
    }
    id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v2);
LABEL_21:
    uint64_t v14 = v13;
    sub_10016083C(0LL, (unint64_t *)&qword_1003F8300, &OBJC_CLASS___MRAVOutputDevice_ptr);
    char v15 = static NSObject.== infix(_:_:)(v12);

    if ((v15 & 1) == 0) {
      goto LABEL_54;
    }
    unint64_t v16 = v5 - 1;
    if (v5 == 1) {
      return (id)(v5 & 1);
    }
    if (((v2 | v3) & 0xC000000000000001LL) != 0)
    {
      uint64_t v17 = 0LL;
      unint64_t v18 = v5 - 2;
      while (v16 != v17)
      {
        unint64_t v5 = v17 + 1;
        if (v33) {
          id v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v17 + 1, v3);
        }
        else {
          id v19 = *(id *)(v3 + 40 + 8 * v17);
        }
        char v20 = v19;
        if ((v2 & 0xC000000000000001LL) != 0)
        {
          id v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v17 + 1, v2);
        }

        else
        {
          if (v5 >= *(void *)(v8 + 16)) {
            goto LABEL_59;
          }
          id v21 = *(id *)(v2 + 40 + 8 * v17);
        }

        uint64_t v22 = v21;
        unint64_t v5 = static NSObject.== infix(_:_:)(v20);

        if ((v5 & 1) != 0 && v18 != v17++) {
          continue;
        }
        return (id)(v5 & 1);
      }

      __break(1u);
    }

    else
    {
      unint64_t v24 = *(void *)(v8 + 16);
      if (v24 <= 1) {
        unint64_t v24 = 1LL;
      }
      unint64_t v25 = v24 - 1;
      uint64_t v26 = (void **)(v3 + 40);
      uint64_t v8 = v2 + 40;
      while (v16)
      {
        if (!v25) {
          goto LABEL_58;
        }
        uint64_t v28 = *v26++;
        uint64_t v27 = v28;
        uint64_t v29 = *(void **)v8;
        v8 += 8LL;
        uint64_t v2 = v27;
        uint64_t v3 = v29;
        unint64_t v5 = static NSObject.== infix(_:_:)(v2);

        if ((v5 & 1) != 0)
        {
          --v25;
          if (--v16) {
            continue;
          }
        }

        return (id)(v5 & 1);
      }
    }

    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
LABEL_61:
    ;
  }

  if (*(void *)(v8 + 16))
  {
    id v13 = *(id *)(v2 + 32);
    goto LABEL_21;
  }

  __break(1u);
  return result;
}

uint64_t sub_100275E34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HostedRoutingSourceSession(0LL);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v20 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      char v16 = 1;
    }

    else
    {
      unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v13 = *(void *)(v8 + 72);
      uint64_t v14 = v11 - 1;
      do
      {
        sub_1001A80F8(a1 + v12, (uint64_t)v10, type metadata accessor for HostedRoutingSourceSession);
        sub_1001A80F8(a2 + v12, (uint64_t)v7, type metadata accessor for HostedRoutingSourceSession);
        uint64_t v15 = sub_100156FEC( &qword_1003FC550,  type metadata accessor for HostedRoutingSourceSession,  (uint64_t)&unk_100350218);
        char v16 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v7, v4, v15);
        sub_1001A813C((uint64_t)v7, type metadata accessor for HostedRoutingSourceSession);
        sub_1001A813C((uint64_t)v10, type metadata accessor for HostedRoutingSourceSession);
        BOOL v18 = v14-- != 0;
        if ((v16 & 1) == 0) {
          break;
        }
        v12 += v13;
      }

      while (v18);
    }
  }

  else
  {
    char v16 = 0;
  }

  return v16 & 1;
}

uint64_t sub_100275F94( void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned __int8 a11, uint64_t a12)
{
  uint64_t v50 = a6;
  uint64_t v51 = a7;
  uint64_t v47 = a5;
  uint64_t v48 = a4;
  uint64_t v46 = a2;
  uint64_t v49 = a1;
  uint64_t v55 = a12;
  int v54 = a11;
  uint64_t v52 = a9;
  uint64_t v53 = a10;
  uint64_t v59 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v62 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  os_log_type_t v58 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v60 = *(void *)(v17 - 8);
  uint64_t v61 = v17;
  __chkstk_darwin(v17);
  uint64_t v56 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = type metadata accessor for RoutingInteraction(0LL);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(void *)(v20 + 64);
  uint64_t v22 = __chkstk_darwin(v19);
  uint64_t v45 = a3;
  uint64_t v57 = (*(uint64_t (**)(uint64_t))(*(void *)a3 + 280LL))(v22);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))( (char *)&v45 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL),  a8,  v19);
  uint64_t v23 = *(unsigned __int8 *)(v20 + 80);
  uint64_t v24 = (v23 + 72) & ~v23;
  unint64_t v25 = (v24 + v21 + 31) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v26 = (char *)swift_allocObject(&unk_1003AC048, v25 + 8, v23 | 7);
  uint64_t v27 = v48;
  *((void *)v26 + 2) = a2;
  *((void *)v26 + 3) = v27;
  uint64_t v29 = v49;
  uint64_t v28 = v50;
  *((void *)v26 + 4) = a5;
  *((void *)v26 + 5) = v28;
  uint64_t v30 = v51;
  *((void *)v26 + 6) = v51;
  *((void *)v26 + 7) = v29;
  uint64_t v31 = v45;
  *((void *)v26 + 8) = v45;
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))( &v26[v24],  (char *)&v45 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL),  v19);
  uint64_t v32 = &v26[(v24 + v21 + 7) & 0xFFFFFFFFFFFFFFF8LL];
  uint64_t v33 = v53;
  *(void *)uint64_t v32 = v52;
  *((void *)v32 + 1) = v33;
  v32[16] = v54;
  *(void *)&v26[v25] = v55;
  aBlock[4] = sub_100290340;
  uint64_t v65 = v26;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_100157EA8;
  aBlock[3] = &unk_1003AC060;
  int v34 = _Block_copy(aBlock);
  swift_errorRetain(v46);
  id v35 = v29;
  swift_retain(v31);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v36 = swift_retain(v30);
  BOOL v37 = v56;
  static DispatchQoS.unspecified.getter(v36);
  uint64_t v63 = _swiftEmptyArrayStorage;
  uint64_t v38 = sub_100156FEC( (unint64_t *)&qword_1003FADB0,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v39 = sub_100156B68((uint64_t *)&unk_1003F9A70);
  uint64_t v40 = sub_1001604E8( (unint64_t *)&qword_1003FADC0,  (uint64_t *)&unk_1003F9A70,  (uint64_t)&protocol conformance descriptor for [A]);
  uint64_t v42 = v58;
  uint64_t v41 = v59;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v63, v39, v40, v59, v38);
  uint64_t v43 = (void *)v57;
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v37, v42, v34);
  _Block_release(v34);

  (*(void (**)(char *, uint64_t))(v62 + 8))(v42, v41);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v37, v61);
  return swift_release(v65);
}

uint64_t sub_1002762E4( uint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a5, void *a6, uint64_t a7, uint64_t *a8, uint64_t a9, uint64_t a10, unsigned __int8 a11, uint64_t a12)
{
  uint64_t v322 = a8;
  uint64_t v327 = a5;
  uint64_t v325 = a2;
  uint64_t v324 = (char *)a12;
  uint64_t v310 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v309 = *(void *)(v310 - 8);
  __chkstk_darwin(v310);
  uint64_t v308 = (char *)&v289 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v307 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v306 = *(void *)(v307 - 8);
  __chkstk_darwin(v307);
  Swift::String v305 = (char *)&v289 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v312 = type metadata accessor for DispatchTime(0LL);
  uint64_t v303 = *(void *)(v312 - 8);
  uint64_t v19 = __chkstk_darwin(v312);
  Swift::String v302 = (char *)&v289 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v19);
  Swift::String v304 = (char *)&v289 - v21;
  v323 = (void **)type metadata accessor for RoutingInteraction(0LL);
  uint64_t v321 = (uint64_t)*(v323 - 1);
  uint64_t v22 = __chkstk_darwin(v323);
  Swift::String v301 = (char *)&v289 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = __chkstk_darwin(v22);
  v313 = (char *)&v289 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  Swift::String v300 = (char *)&v289 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v318 = (char *)&v289 - v29;
  uint64_t v311 = v30;
  __chkstk_darwin(v28);
  v314 = (char *)&v289 - v31;
  uint64_t v32 = type metadata accessor for Logger(0LL);
  uint64_t v33 = *(void (**)(char *, uint64_t))(v32 - 8);
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v299 = (os_log_s *)((char *)&v289 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v298 = (char *)&v289 - v37;
  uint64_t v38 = __chkstk_darwin(v36);
  Swift::String v297 = (char *)&v289 - v39;
  uint64_t v40 = __chkstk_darwin(v38);
  uint64_t v319 = (uint64_t)&v289 - v41;
  uint64_t v42 = __chkstk_darwin(v40);
  v315 = (char *)&v289 - v43;
  uint64_t v44 = __chkstk_darwin(v42);
  uint64_t v46 = (char *)&v289 - v45;
  __chkstk_darwin(v44);
  uint64_t v48 = (char *)&v289 - v47;
  uint64_t v328 = a1;
  uint64_t v326 = a4;
  if (!a1)
  {
LABEL_4:
    uint64_t v54 = sub_1001741A8();
    uint64_t v55 = (void (*)(char *))*((void *)v33 + 2);
    uint64_t v328 = v54;
    v55(v46);
    uint64_t v56 = (uint64_t)a6;
    id v57 = a6;
    swift_bridgeObjectRetain_n(a3, 2LL);
    os_log_type_t v58 = (char *)v57;
    uint64_t v59 = (os_log_s *)Logger.logObject.getter(v58);
    os_log_type_t v60 = static os_log_type_t.default.getter(v59);
    BOOL v61 = os_log_type_enabled(v59, v60);
    uint64_t v317 = (void *)a3;
    uint64_t v320 = v32;
    uint64_t v316 = v56;
    if (v61)
    {
      Swift::String v293 = v33;
      Swift::String v294 = v55;
      Swift::String v296 = v58;
      uint64_t v295 = a7;
      uint64_t v62 = swift_slowAlloc(32LL, -1LL);
      uint64_t v63 = (void *)swift_slowAlloc(8LL, -1LL);
      id v292 = (void **)swift_slowAlloc(64LL, -1LL);
      __int128 aBlock = v292;
      *(_DWORD *)uint64_t v62 = 136315650;
      uint64_t v64 = _typeName(_:qualified:)(v324, 0LL);
      uint64_t v344 = sub_10015ADC4(v64, v65, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v344, v345, v62 + 4, v62 + 12);
      swift_bridgeObjectRelease();
      *(_WORD *)(v62 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v344 = sub_10015ADC4(v325, a3, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v344, v345, v62 + 14, v62 + 22);
      swift_bridgeObjectRelease_n(a3, 3LL);
      *(_WORD *)(v62 + 22) = 2112;
      if (v56)
      {
        uint64_t v66 = v296;
        uint64_t v344 = (uint64_t)v296;
        uint64_t v67 = v296;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v344, v345, v62 + 24, v62 + 32);
      }

      else
      {
        uint64_t v344 = 0LL;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v344, v345, v62 + 24, v62 + 32);
        uint64_t v66 = v296;
      }

      void *v63 = v316;

      _os_log_impl( (void *)&_mh_execute_header,  v59,  v60,  "[%s] handleSetActiveItem<%s> - created endpoint: %@",  (uint8_t *)v62,  0x20u);
      uint64_t v95 = sub_100156B68((uint64_t *)&unk_1003FB7E0);
      swift_arrayDestroy(v63, 1LL, v95);
      swift_slowDealloc(v63, -1LL, -1LL);
      uint64_t v96 = v292;
      swift_arrayDestroy(v292, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v96, -1LL, -1LL);
      swift_slowDealloc(v62, -1LL, -1LL);

      uint64_t v68 = (void (*)(char *, uint64_t))*((void *)v293 + 1);
      uint64_t v32 = v320;
      v68(v46, v320);
      a7 = v295;
      os_log_type_t v58 = v66;
      uint64_t v55 = v294;
    }

    else
    {

      swift_bridgeObjectRelease_n(a3, 2LL);
      uint64_t v68 = (void (*)(char *, uint64_t))*((void *)v33 + 1);
      v68(v46, v32);
    }

    uint64_t v97 = OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_identifierStore;
    uint64_t v98 = *(void *)(a7 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_identifierStore);
    uint64_t v99 = *(uint64_t (**)(uint64_t *))(*(void *)v98 + 264LL);
    swift_retain(v98);
    uint64_t v100 = v322;
    uint64_t v101 = v99(v322);
    uint64_t v103 = v102;
    swift_release(v98);
    if (!v103)
    {
      uint64_t v183 = (uint64_t)v315;
      ((void (*)(char *, uint64_t, uint64_t))v55)(v315, v328, v32);
      uint64_t v184 = v321;
      uint64_t v185 = v314;
      unint64_t v186 = v323;
      (*(void (**)(char *, uint64_t *, void **))(v321 + 16))(v314, v100, v323);
      unint64_t v187 = (unint64_t)v317;
      swift_bridgeObjectRetain_n(v317, 2LL);
      uint64_t v189 = (os_log_s *)Logger.logObject.getter(v200);
      os_log_type_t v201 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v189, v201))
      {
        uint64_t v202 = swift_slowAlloc(32LL, -1LL);
        uint64_t v203 = (void **)swift_slowAlloc(96LL, -1LL);
        __int128 aBlock = v203;
        *(_DWORD *)uint64_t v202 = 136315650;
        uint64_t v204 = _typeName(_:qualified:)(v324, 0LL);
        uint64_t v344 = sub_10015ADC4(v204, v205, (uint64_t *)&aBlock);
        Swift::String v293 = v68;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v344, v345, v202 + 4, v202 + 12);
        swift_bridgeObjectRelease();
        *(_WORD *)(v202 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v344 = sub_10015ADC4(v325, v187, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v344, v345, v202 + 14, v202 + 22);
        swift_bridgeObjectRelease_n(v187, 3LL);
        *(_WORD *)(v202 + 22) = 2080;
        uint64_t v206 = sub_100156FEC( &qword_1003F88F8,  (uint64_t (*)(uint64_t))&type metadata accessor for RoutingInteraction,  (uint64_t)&protocol conformance descriptor for RoutingInteraction);
        uint64_t v207 = v314;
        uint64_t v208 = dispatch thunk of CustomStringConvertible.description.getter(v186, v206);
        uint64_t v344 = sub_10015ADC4(v208, v209, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v344, v345, v202 + 24, v202 + 32);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, void **))(v184 + 8))(v207, v186);
        _os_log_impl( (void *)&_mh_execute_header,  v189,  v201,  "[%s] handleSetActiveItem<%s> - no prewarmed identifier found for interaction: %s. Failing",  (uint8_t *)v202,  0x20u);
        swift_arrayDestroy(v203, 3LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v203, -1LL, -1LL);
        swift_slowDealloc(v202, -1LL, -1LL);

        id v199 = (uint64_t *)&v343;
        goto LABEL_32;
      }

uint64_t sub_100278464( uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9, uint64_t a10, char a11, uint64_t a12)
{
  uint64_t v183 = a8;
  uint64_t v197 = a7;
  uint64_t v196 = a6;
  uint64_t v187 = a5;
  uint64_t v186 = a3;
  uint64_t v185 = a2;
  uint64_t v190 = type metadata accessor for RoutingInteraction(0LL);
  uint64_t v14 = *(void *)(v190 - 8);
  uint64_t v15 = __chkstk_darwin(v190);
  uint64_t v184 = (char *)&v176 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v176 - v18;
  __chkstk_darwin(v17);
  uint64_t v182 = (char *)&v176 - v20;
  uint64_t v21 = type metadata accessor for Logger(0LL);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = __chkstk_darwin(v21);
  unint64_t v198 = (char *)&v176 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v176 - v26;
  __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v176 - v28;
  uint64_t v30 = sub_100156B68(&qword_1003F9518);
  __chkstk_darwin(v30);
  uint64_t v192 = (uint64_t)&v176 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v191 = type metadata accessor for HostedRoutingSourceSession(0LL);
  uint64_t v193 = *(void *)(v191 - 8);
  uint64_t v32 = __chkstk_darwin(v191);
  uint64_t v205 = (uint64_t)&v176 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v32);
  uint64_t v35 = (char *)&v176 - v34;
  a1 += 16LL;
  swift_beginAccess(a1, v212, 0LL, 0LL);
  uint64_t result = swift_weakLoadStrong(a1);
  if (result)
  {
    uint64_t v180 = a4;
    uint64_t v37 = *(uint64_t (**)(void))(*(void *)result + 328LL);
    uint64_t v189 = result;
    uint64_t v38 = v37();
    uint64_t v39 = *(void *)(v38 + 16);
    uint64_t v195 = v14;
    uint64_t v178 = v27;
    uint64_t v177 = v19;
    uint64_t v199 = v39;
    uint64_t v188 = v35;
    uint64_t v181 = v21;
    if (v39)
    {
      unint64_t v202 = v38 + ((*(unsigned __int8 *)(v193 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v193 + 80));
      uint64_t v200 = v211;
      uint64_t v201 = *(void *)(v193 + 72);
      uint64_t v179 = v38;
      swift_bridgeObjectRetain();
      uint64_t v40 = 0LL;
      uint64_t v41 = v198;
      uint64_t v42 = v197;
      uint64_t v43 = v196;
      uint64_t v44 = v205;
      uint64_t v194 = v22;
      uint64_t v203 = v29;
      while (1)
      {
        sub_1001A80F8(v202 + v201 * v40, v44, type metadata accessor for HostedRoutingSourceSession);
        uint64_t v45 = *(void *)(v44 + 32);
        int64_t v46 = *(void *)(v45 + 16);
        if (v46)
        {
          unint64_t v209 = (char *)_swiftEmptyArrayStorage;
          swift_bridgeObjectRetain();
          sub_10015DCE8(0, v46, 0);
          uint64_t v47 = v209;
          uint64_t v48 = *(void *)(type metadata accessor for HostedRoutingItem(0LL) - 8);
          uint64_t v49 = *(unsigned __int8 *)(v48 + 80);
          uint64_t v50 = *(void *)(v48 + 72);
          uint64_t v204 = v45;
          uint64_t v51 = (uint64_t *)(v45 + ((v49 + 32) & ~v49) + 8);
          do
          {
            uint64_t v53 = *(v51 - 1);
            uint64_t v52 = *v51;
            unint64_t v209 = v47;
            unint64_t v55 = *((void *)v47 + 2);
            unint64_t v54 = *((void *)v47 + 3);
            swift_bridgeObjectRetain();
            if (v55 >= v54 >> 1)
            {
              sub_10015DCE8(v54 > 1, v55 + 1, 1);
              uint64_t v47 = v209;
            }

            uint64_t v51 = (uint64_t *)((char *)v51 + v50);
            *((void *)v47 + 2) = v55 + 1;
            uint64_t v56 = &v47[16 * v55];
            *((void *)v56 + 4) = v53;
            *((void *)v56 + 5) = v52;
            --v46;
          }

          while (v46);
          swift_bridgeObjectRelease();
          uint64_t v22 = v194;
          uint64_t v14 = v195;
          uint64_t v41 = v198;
          uint64_t v29 = v203;
          uint64_t v42 = v197;
          uint64_t v43 = v196;
        }

        else
        {
          uint64_t v47 = (char *)_swiftEmptyArrayStorage;
          uint64_t v29 = v203;
        }

        v211[0] = v43;
        v211[1] = v42;
        if (*((void *)v47 + 2) == 1LL)
        {
          if (v47 == &v210) {
            break;
          }
          uint64_t v57 = *((void *)v47 + 4);
          uint64_t v58 = *((void *)v47 + 5);
          BOOL v59 = v57 == v43 && v58 == v42;
          if (v59 || (_stringCompareWithSmolCheck(_:_:expecting:)(v57, v58, v43, v42, 0LL) & 1) != 0) {
            break;
          }
        }

        swift_bridgeObjectRetain();
        swift_arrayDestroy(v200, 1LL, &type metadata for String);
        ++v40;
        swift_bridgeObjectRelease();
        uint64_t v44 = v205;
        sub_1001A813C(v205, type metadata accessor for HostedRoutingSourceSession);
        if (v40 == v199)
        {
          swift_bridgeObjectRelease();
          uint64_t v60 = 1LL;
          uint64_t v35 = v188;
          uint64_t v61 = v192;
          uint64_t v62 = v191;
          goto LABEL_23;
        }
      }

      uint64_t v35 = v188;
      uint64_t v62 = v191;
      swift_bridgeObjectRetain();
      swift_arrayDestroy(v200, 1LL, &type metadata for String);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v61 = v192;
      sub_1001A81D4(v205, v192, type metadata accessor for HostedRoutingSourceSession);
      uint64_t v60 = 0LL;
    }

    else
    {
      uint64_t v60 = 1LL;
      uint64_t v41 = v198;
      uint64_t v61 = v192;
      uint64_t v62 = v191;
    }

uint64_t sub_100279694( uint64_t a1, unint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5, void (*a6)(void))
{
  int64_t v46 = a6;
  uint64_t v47 = a1;
  uint64_t v49 = a5;
  uint64_t v9 = type metadata accessor for RoutingInteraction(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for Logger(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = sub_1001741A8();
  uint64_t v48 = v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v17, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a3, v9);
  swift_bridgeObjectRetain_n(a2, 2LL);
  uint64_t v19 = (os_log_s *)Logger.logObject.getter(v18);
  os_log_type_t v20 = static os_log_type_t.error.getter();
  int v21 = v20;
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v22 = swift_slowAlloc(32LL, -1LL);
    int v44 = v21;
    uint64_t v23 = v22;
    uint64_t v43 = swift_slowAlloc(96LL, -1LL);
    uint64_t v51 = v43;
    *(_DWORD *)uint64_t v23 = 136315650;
    uint64_t v24 = _typeName(_:qualified:)(v46, 0LL);
    uint64_t v45 = v13;
    uint64_t v50 = sub_10015ADC4(v24, v25, &v51);
    int64_t v46 = a4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51, v23 + 4, v23 + 12);
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v50 = sub_10015ADC4(v47, a2, &v51);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51, v23 + 14, v23 + 22);
    swift_bridgeObjectRelease_n(a2, 3LL);
    *(_WORD *)(v23 + 22) = 2080;
    uint64_t v26 = sub_100156FEC( &qword_1003F88F8,  (uint64_t (*)(uint64_t))&type metadata accessor for RoutingInteraction,  (uint64_t)&protocol conformance descriptor for RoutingInteraction);
    uint64_t v27 = dispatch thunk of CustomStringConvertible.description.getter(v9, v26);
    uint64_t v50 = sub_10015ADC4(v27, v28, &v51);
    a4 = v46;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51, v23 + 24, v23 + 32);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    _os_log_impl( (void *)&_mh_execute_header,  v19,  (os_log_type_t)v44,  "[%s] handleSetActiveItem<%s> - interaction: %s hit timeout",  (uint8_t *)v23,  0x20u);
    uint64_t v29 = v43;
    swift_arrayDestroy(v43, 3LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v29, -1LL, -1LL);
    swift_slowDealloc(v23, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v48 + 8))(v16, v45);
  }

  else
  {
    swift_bridgeObjectRelease_n(a2, 2LL);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);

    (*(void (**)(char *, uint64_t))(v48 + 8))(v16, v13);
  }

  uint64_t v30 = type metadata accessor for InternalRoutingError(0LL);
  uint64_t v31 = sub_100156FEC( &qword_1003F8908,  (uint64_t (*)(uint64_t))&type metadata accessor for InternalRoutingError,  (uint64_t)&protocol conformance descriptor for InternalRoutingError);
  uint64_t v32 = swift_allocError(v30, v31, 0LL, 0LL);
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v30 - 8) + 104LL))( v33,  enum case for InternalRoutingError.timedOut(_:),  v30);
  uint64_t v34 = MRDFastSyncGroupSessionState.rawValue.getter(v32, 1LL, 0LL, 4LL);
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  unsigned __int8 v40 = v39;
  a4();
  swift_errorRelease(v34);
  return sub_100156BA8(v36, v38, v40);
}

void sub_100279A44(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v8 = *(void (**)(void *, void *, void *))(a1 + 32);
  uint64_t v7 = *(void *)(a1 + 40);
  swift_retain(v7);
  id v11 = a2;
  id v9 = a3;
  id v10 = a4;
  v8(a2, a3, a4);
  swift_release(v7);
}

void sub_100279AD4(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v457 = a5;
  v456 = a4;
  uint64_t v459 = a2;
  v460 = a1;
  uint64_t v444 = *v5;
  uint64_t v454 = type metadata accessor for Features.MediaRemote(0LL);
  v453 = *(void (***)(void *, uint64_t))(v454 - 8);
  __chkstk_darwin(v454);
  v452 = (uint64_t *)((char *)&v426 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v8 = (void *)type metadata accessor for RoutingInteraction(0LL);
  id v9 = (void *)*(v8 - 1);
  __chkstk_darwin(v8);
  id v11 = (char *)&v426 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v440 = type metadata accessor for HostedRoutingSourceSession(0LL);
  __chkstk_darwin(v440);
  uint64_t v13 = (char *)&v426 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = (void *)type metadata accessor for Logger(0LL);
  uint64_t v15 = (void *)*(v14 - 1);
  uint64_t v16 = __chkstk_darwin(v14);
  v439 = (char *)&v426 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = __chkstk_darwin(v16);
  v441 = (char *)&v426 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  v437 = (char *)&v426 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  v436 = (char *)&v426 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  v434 = (char *)&v426 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  v435 = (char *)&v426 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  v433 = (char *)&v426 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  v431 = (char *)&v426 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  v432 = (char *)&v426 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  v430 = (char *)&v426 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v38 = (char *)&v426 - v37;
  uint64_t v445 = RoutingInteraction.identifier.getter(v36);
  unint64_t v40 = v39;
  uint64_t v41 = sub_1001741A8();
  v451 = v15;
  uint64_t v42 = (void (*)(void))v15[2];
  uint64_t v43 = (uint64_t)v460;
  uint64_t v442 = v41;
  id v458 = v14;
  v443 = (void (*)(char *, uint64_t, id))v42;
  v42(v38);
  v446 = v13;
  sub_1001A80F8(v43, (uint64_t)v13, type metadata accessor for HostedRoutingSourceSession);
  v449 = (void (**)(void, void))v9;
  int v44 = (void (*)(char *, uint64_t, void *))v9[2];
  v448 = v11;
  uint64_t v438 = a3;
  id v450 = v8;
  uint64_t v45 = v8;
  unint64_t v46 = v40;
  v44(v11, a3, v45);
  swift_bridgeObjectRetain_n(v40, 2LL);
  uint64_t v47 = swift_retain_n(v459, 2LL);
  id v447 = v38;
  uint64_t v48 = (os_log_s *)Logger.logObject.getter(v47);
  os_log_type_t v49 = static os_log_type_t.default.getter(v48);
  if (os_log_type_enabled(v48, v49))
  {
    uint64_t v50 = swift_slowAlloc(52LL, -1LL);
    unint64_t v427 = v40;
    uint64_t v51 = v50;
    uint64_t v429 = swift_slowAlloc(160LL, -1LL);
    aBlock[0] = v429;
    *(_DWORD *)uint64_t v51 = 136316162;
    os_log_t v428 = v48;
    uint64_t v52 = _typeName(_:qualified:)(v444, 0LL);
    *(void *)&__int128 v467 = sub_10015ADC4(v52, v53, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v467, (char *)&v467 + 8, v51 + 4, v51 + 12);
    swift_bridgeObjectRelease();
    *(_WORD *)(v51 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(void *)&__int128 v467 = sub_10015ADC4(v445, v40, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v467, (char *)&v467 + 8, v51 + 14, v51 + 22);
    swift_bridgeObjectRelease_n(v40, 3LL);
    *(_WORD *)(v51 + 22) = 2080;
    uint64_t v54 = sub_100156FEC( &qword_1003F9520,  type metadata accessor for HostedRoutingSourceSession,  (uint64_t)&unk_1003501C8);
    uint64_t v55 = (uint64_t)v446;
    uint64_t v56 = dispatch thunk of CustomStringConvertible.description.getter(v440, v54);
    *(void *)&__int128 v467 = sub_10015ADC4(v56, v57, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v467, (char *)&v467 + 8, v51 + 24, v51 + 32);
    swift_bridgeObjectRelease();
    id v58 = v458;
    sub_1001A813C(v55, type metadata accessor for HostedRoutingSourceSession);
    *(_WORD *)(v51 + 32) = 2080;
    uint64_t v59 = v459;
    *(void *)&__int128 v467 = v459;
    uint64_t v60 = type metadata accessor for RoutingInteraction.Action.HandoffContext(0LL);
    uint64_t v61 = sub_100156FEC( &qword_1003FCE40,  (uint64_t (*)(uint64_t))&type metadata accessor for RoutingInteraction.Action.HandoffContext,  (uint64_t)&protocol conformance descriptor for RoutingInteraction.Action.HandoffContext);
    uint64_t v62 = dispatch thunk of CustomStringConvertible.description.getter(v60, v61);
    *(void *)&__int128 v467 = sub_10015ADC4(v62, v63, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v467, (char *)&v467 + 8, v51 + 34, v51 + 42);
    uint64_t v64 = v59;
    swift_release_n(v59, 2LL);
    swift_bridgeObjectRelease();
    *(_WORD *)(v51 + 42) = 2080;
    uint64_t v65 = sub_100156FEC( &qword_1003F88F8,  (uint64_t (*)(uint64_t))&type metadata accessor for RoutingInteraction,  (uint64_t)&protocol conformance descriptor for RoutingInteraction);
    uint64_t v66 = (uint64_t)v448;
    id v67 = v450;
    uint64_t v68 = dispatch thunk of CustomStringConvertible.description.getter(v450, v65);
    *(void *)&__int128 v467 = sub_10015ADC4(v68, v69, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v467, (char *)&v467 + 8, v51 + 44, v51 + 52);
    swift_bridgeObjectRelease();
    uint64_t v70 = v66;
    id v71 = v58;
    ((void (**)(uint64_t, id))v449)[1](v70, v67);
    os_log_t v72 = v428;
    _os_log_impl( (void *)&_mh_execute_header,  v428,  v49,  "[%s] pullContentFromSession<%s> - session: %s, context: %s, for: %s",  (uint8_t *)v51,  0x34u);
    uint64_t v73 = v429;
    swift_arrayDestroy(v429, 5LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v73, -1LL, -1LL);
    uint64_t v74 = v51;
    unint64_t v46 = v427;
    uint64_t v75 = v455;
    swift_slowDealloc(v74, -1LL, -1LL);

    unint64_t v76 = (void (*)(id, id))v451[1];
    v76(v447, v71);
  }

  else
  {
    swift_bridgeObjectRelease_n(v40, 2LL);
    sub_1001A813C((uint64_t)v446, type metadata accessor for HostedRoutingSourceSession);
    uint64_t v64 = v459;
    swift_release_n(v459, 2LL);
    ((void (**)(char *, id))v449)[1](v448, v450);

    unint64_t v76 = (void (*)(id, id))v451[1];
    id v71 = v458;
    v76(v447, v458);
    uint64_t v75 = v455;
  }

  uint64_t v77 = v453;
  uint64_t v78 = v452;
  uint64_t v79 = v454;
  uint64_t v80 = ((uint64_t (*)(void *, void, uint64_t))v453[13])( v452,  enum case for Features.MediaRemote.cayenneNewMusicHandoff(_:),  v454);
  char v81 = Features.MediaRemote.isEnabled.getter(v80);
  v77[1](v78, v79);
  if ((v81 & 1) != 0)
  {
    uint64_t v82 = sub_10016083C(0LL, &qword_1003FABA8, &OBJC_CLASS___NSBundle_ptr);
    uint64_t v83 = RoutingInteraction.Action.HandoffContext.sourceBundleIdentifier.getter(v82);
    LOBYTE(v82) = sub_1002A2758(v83, v84);
    swift_bridgeObjectRelease();
    if ((v82 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      sub_100284EC4((uint64_t)v460, v64, v438, v456, v457);
      return;
    }
  }

  uint64_t v85 = v460;
  uint64_t v86 = v460[3];
  if (!v86)
  {
    uint64_t v119 = v439;
    v443(v439, v442, v71);
    uint64_t v120 = swift_bridgeObjectRetain();
    int v121 = (os_log_s *)Logger.logObject.getter(v120);
    os_log_type_t v122 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v121, v122))
    {
      uint64_t v123 = swift_slowAlloc(22LL, -1LL);
      uint64_t v124 = swift_slowAlloc(64LL, -1LL);
      aBlock[0] = v124;
      *(_DWORD *)uint64_t v123 = 136315394;
      unint64_t v125 = v46;
      uint64_t v126 = _typeName(_:qualified:)(v444, 0LL);
      *(void *)&__int128 v467 = sub_10015ADC4(v126, v127, aBlock);
      uint64_t v128 = (void (*)(void, id))v76;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v467, (char *)&v467 + 8, v123 + 4, v123 + 12);
      swift_bridgeObjectRelease();
      *(_WORD *)(v123 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(void *)&__int128 v467 = sub_10015ADC4(v445, v125, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v467, (char *)&v467 + 8, v123 + 14, v123 + 22);
      swift_bridgeObjectRelease_n(v125, 3LL);
      _os_log_impl( (void *)&_mh_execute_header,  v121,  v122,  "[%s] pullContentFromSession<%s> - failing because source session is not endpoint sourced",  (uint8_t *)v123,  0x16u);
      swift_arrayDestroy(v124, 2LL, (char *)&type metadata for Any + 8);
      uint64_t v85 = v460;
      swift_slowDealloc(v124, -1LL, -1LL);
      swift_slowDealloc(v123, -1LL, -1LL);

      unint64_t v129 = (uint64_t *)&v464;
LABEL_34:
      v128(*(v129 - 32), v71);
LABEL_36:
      uint64_t v137 = type metadata accessor for InternalRoutingError(0LL);
      uint64_t v138 = sub_100156FEC( &qword_1003F8908,  (uint64_t (*)(uint64_t))&type metadata accessor for InternalRoutingError,  (uint64_t)&protocol conformance descriptor for InternalRoutingError);
      uint64_t v139 = swift_allocError(v137, v138, 0LL, 0LL);
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v137 - 8) + 104LL))( v140,  enum case for InternalRoutingError.sessionNotFound(_:),  v137);
      uint64_t v141 = *v85;
      uint64_t v142 = v85[1];
      swift_bridgeObjectRetain();
      uint64_t v143 = MRDFastSyncGroupSessionState.rawValue.getter(v139, v141, v142, 2LL);
      uint64_t v145 = v144;
      uint64_t v147 = v146;
      unsigned __int8 v149 = v148;
      v456();
      swift_errorRelease(v143);
      sub_100156BA8(v145, v147, v149);
      return;
    }

LABEL_102:
    }

    uint64_t v340 = (uint64_t *)v439;
    uint64_t v341 = 1LL;
    while (1)
    {
      uint64_t v342 = v341 + 1;
      if (__OFADD__(v341, 1LL)) {
        break;
      }
      uint64_t v343 = *(v340 - 1);
      uint64_t v344 = *v340;
      BOOL v345 = v343 == v336 && v344 == v335;
      if (v345 || (_stringCompareWithSmolCheck(_:_:expecting:)(v343, v344, v336, v335, 0LL) & 1) != 0) {
        goto LABEL_120;
      }
      v340 += 2;
      ++v341;
      if (v342 == v333) {
        goto LABEL_102;
      }
    }

    __break(1u);
  }

  else
  {
LABEL_121:
    swift_bridgeObjectRelease();
    v443(v430, v442, v94);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v373 = swift_bridgeObjectRetain();
    v374 = (os_log_s *)Logger.logObject.getter(v373);
    os_log_type_t v375 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v374, v375))
    {
      uint64_t v376 = swift_slowAlloc(42LL, -1LL);
      uint64_t v459 = swift_slowAlloc(128LL, -1LL);
      aBlock[0] = v459;
      *(_DWORD *)uint64_t v376 = 136315906;
      uint64_t v377 = _typeName(_:qualified:)(v444, 0LL);
      *(void *)&__int128 v467 = sub_10015ADC4(v377, v378, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v467, (char *)&v467 + 8, v376 + 4, v376 + 12);
      swift_bridgeObjectRelease();
      *(_WORD *)(v376 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(void *)&__int128 v467 = sub_10015ADC4(v445, v93, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v467, (char *)&v467 + 8, v376 + 14, v376 + 22);
      swift_bridgeObjectRelease_n(v93, 3LL);
      *(_WORD *)(v376 + 22) = 2080;
      uint64_t v379 = (uint64_t)v446;
      uint64_t v380 = swift_bridgeObjectRetain();
      uint64_t v381 = Array.description.getter(v380, &type metadata for String);
      unint64_t v383 = v382;
      swift_bridgeObjectRelease();
      *(void *)&__int128 v467 = sub_10015ADC4(v381, v383, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v467, (char *)&v467 + 8, v376 + 24, v376 + 32);
      swift_bridgeObjectRelease_n(v379, 2LL);
      swift_bridgeObjectRelease();
      *(_WORD *)(v376 + 32) = 2080;
      v384 = v452;
      uint64_t v385 = swift_bridgeObjectRetain();
      uint64_t v386 = Array.description.getter(v385, &type metadata for String);
      unint64_t v388 = v387;
      swift_bridgeObjectRelease();
      *(void *)&__int128 v467 = sub_10015ADC4(v386, v388, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v467, (char *)&v467 + 8, v376 + 34, v376 + 42);
      swift_bridgeObjectRelease_n(v384, 2LL);
      swift_bridgeObjectRelease();
      _os_log_impl( (void *)&_mh_execute_header,  v374,  v375,  "[%s] pullContentFromSession<%s> - failing because no matching supported types found between source: %s, dest: %s",  (uint8_t *)v376,  0x2Au);
      uint64_t v389 = v459;
      swift_arrayDestroy(v459, 4LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v389, -1LL, -1LL);
      swift_slowDealloc(v376, -1LL, -1LL);
    }

    else
    {

      swift_bridgeObjectRelease_n(v452, 2LL);
      swift_bridgeObjectRelease_n(v446, 2LL);
      swift_bridgeObjectRelease_n(v93, 2LL);
    }

    ((void (*)(char *, id))v453)(v430, v94);
    uint64_t v390 = type metadata accessor for InternalRoutingError(0LL);
    uint64_t v391 = sub_100156FEC( &qword_1003F8908,  (uint64_t (*)(uint64_t))&type metadata accessor for InternalRoutingError,  (uint64_t)&protocol conformance descriptor for InternalRoutingError);
    uint64_t v392 = swift_allocError(v390, v391, 0LL, 0LL);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v390 - 8) + 104LL))( v393,  enum case for InternalRoutingError.unsupportedOperation(_:),  v390);
    uint64_t v394 = *v460;
    uint64_t v395 = v460[1];
    swift_bridgeObjectRetain();
    uint64_t v396 = MRDFastSyncGroupSessionState.rawValue.getter(v392, v394, v395, 2LL);
    uint64_t v398 = v397;
    uint64_t v400 = v399;
    unsigned __int8 v402 = v401;
    v456();
    swift_release(v454);

    swift_errorRelease(v396);
    sub_100156BA8(v398, v400, v402);
  }

uint64_t sub_10027CD00( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), void (*a6)(void), char *a7, uint64_t a8, unint64_t a9, uint64_t a10, unint64_t a11, char *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v176 = a7;
  uint64_t v177 = a5;
  uint64_t v178 = a6;
  uint64_t v165 = a14;
  uint64_t v166 = a15;
  uint64_t v164 = a13;
  uint64_t v171 = a16;
  id v172 = a12;
  uint64_t v168 = a8;
  unint64_t v169 = a11;
  uint64_t v167 = a10;
  unint64_t v173 = a9;
  uint64_t v170 = type metadata accessor for RoutingInteraction(0LL);
  uint64_t v174 = *(void *)(v170 - 8);
  __chkstk_darwin(v170);
  uint64_t v175 = (char *)&v153 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = type metadata accessor for Logger(0LL);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v153 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v153 - v26;
  uint64_t v28 = sub_100156B68(&qword_1003F9518);
  __chkstk_darwin(v28);
  uint64_t v30 = (char *)&v153 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v31 = type metadata accessor for HostedRoutingSourceSession(0LL);
  uint64_t v32 = __chkstk_darwin(v31);
  uint64_t v33 = __chkstk_darwin(v32);
  uint64_t v34 = __chkstk_darwin(v33);
  uint64_t v36 = (uint64_t *)((char *)&v153 - v35);
  uint64_t v37 = __chkstk_darwin(v34);
  if (a1)
  {
    sub_10018480C(a1, a2, a3, a4);
    swift_errorRetain(a1);
    sub_100156A2C(a2, a3, a4);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v177)(a1, a2, a3, a4);
    sub_100184850(a1, a2, a3, a4);
    swift_errorRelease(a1);
    return sub_100156BA8(a2, a3, a4);
  }

  uint64_t v154 = v38;
  uint64_t v159 = v30;
  uint64_t v163 = v42;
  uint64_t v155 = v41;
  uint64_t v161 = v37;
  uint64_t v156 = v40;
  uint64_t v44 = v170;
  unint64_t v157 = v25;
  uint64_t v158 = (uint64_t *)((char *)&v153 - v39);
  uint64_t v160 = v22;
  uint64_t v162 = v21;
  uint64_t v45 = (*(uint64_t (**)(void))(*(void *)v176 + 328LL))();
  uint64_t v46 = *(void *)(v45 + 16);
  if (v46)
  {
    uint64_t v47 = v45 + ((*(unsigned __int8 *)(v163 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v163 + 80));
    uint64_t v48 = *(void *)(v163 + 72);
    os_log_type_t v49 = v27;
    unint64_t v50 = v173;
    uint64_t v51 = v168;
    while (1)
    {
      sub_1001A80F8(v47, (uint64_t)v36, type metadata accessor for HostedRoutingSourceSession);
      uint64_t v52 = v36[1];
      BOOL v53 = *v36 == v51 && v52 == v50;
      if (v53 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v36, v52, v51, v50, 0LL) & 1) != 0) {
        break;
      }
      sub_1001A813C((uint64_t)v36, type metadata accessor for HostedRoutingSourceSession);
      v47 += v48;
      if (!--v46)
      {
        uint64_t v54 = 1LL;
        goto LABEL_14;
      }
    }

    uint64_t v55 = (uint64_t)v159;
    sub_1001A81D4((uint64_t)v36, (uint64_t)v159, type metadata accessor for HostedRoutingSourceSession);
    uint64_t v54 = 0LL;
  }

  else
  {
    uint64_t v54 = 1LL;
    os_log_type_t v49 = v27;
LABEL_14:
    uint64_t v55 = (uint64_t)v159;
  }

  uint64_t v56 = v163;
  uint64_t v57 = v161;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v163 + 56))(v55, v54, 1LL, v161);
  swift_bridgeObjectRelease();
  int v58 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v56 + 48))(v55, 1LL, v57);
  uint64_t v59 = v171;
  uint64_t v60 = v172;
  uint64_t v62 = v174;
  uint64_t v61 = v175;
  if (v58 != 1)
  {
    uint64_t v83 = v158;
    sub_1001A81D4(v55, (uint64_t)v158, type metadata accessor for HostedRoutingSourceSession);
    uint64_t v84 = v83[3];
    uint64_t v85 = v162;
    uint64_t v86 = v176;
    if (v84)
    {
      uint64_t v87 = v83[2];
      char v88 = (uint64_t *)&v176[OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_endpoints];
      swift_beginAccess(&v176[OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_endpoints], v179, 0LL, 0LL);
      uint64_t v89 = *v88;
      if (*(void *)(v89 + 16))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v90 = sub_10015CAD4(v87, v84);
        if ((v91 & 1) != 0)
        {
          uint64_t v92 = *(void *)(*(void *)(v89 + 56) + 8 * v90);
          swift_retain(v92);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(_BYTE *)(v92 + 16) == 2)
          {
            uint64_t v93 = v155;
            sub_1001A80F8((uint64_t)v83, v155, type metadata accessor for HostedRoutingSourceSession);
            uint64_t v94 = *(unsigned __int8 *)(v163 + 80);
            uint64_t v95 = (v94 + 16) & ~v94;
            unint64_t v96 = (v154 + v95 + 7) & 0xFFFFFFFFFFFFFFF8LL;
            unint64_t v97 = (v96 + 15) & 0xFFFFFFFFFFFFFFF8LL;
            uint64_t v98 = v59;
            unint64_t v99 = (v97 + 23) & 0xFFFFFFFFFFFFFFF8LL;
            unint64_t v100 = (v99 + 23) & 0xFFFFFFFFFFFFFFF8LL;
            id v101 = v86;
            uint64_t v102 = swift_allocObject(&unk_1003AC458, v100 + 8, v94 | 7);
            sub_1001A81D4(v93, v102 + v95, type metadata accessor for HostedRoutingSourceSession);
            *(void *)(v102 + v96) = v101;
            uint64_t v103 = (void *)(v102 + v97);
            unint64_t v104 = v169;
            *uint64_t v103 = v167;
            v103[1] = v104;
            unint64_t v105 = (void (**)(void))(v102 + v99);
            NSString v106 = v178;
            void *v105 = v177;
            v105[1] = v106;
            *(void *)(v102 + v100) = v98;
            swift_bridgeObjectRetain();
            swift_retain(v101);
            swift_retain(v106);
            uint64_t v107 = v158;
            sub_10027DE64(v164, v165, v158, v166, v172, v102);
            swift_release(v92);
            swift_release(v102);
            uint64_t v108 = (uint64_t)v107;
            return sub_1001A813C(v108, type metadata accessor for HostedRoutingSourceSession);
          }

          swift_release(v92);
        }

        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
      }
    }

    uint64_t v121 = sub_1001741A8();
    uint64_t v122 = v160;
    uint64_t v123 = v157;
    (*(void (**)(char *, uint64_t, uint64_t))(v160 + 16))(v157, v121, v85);
    uint64_t v124 = v85;
    uint64_t v125 = v156;
    sub_1001A80F8((uint64_t)v83, v156, type metadata accessor for HostedRoutingSourceSession);
    unint64_t v126 = v169;
    swift_bridgeObjectRetain_n(v169, 2LL);
    uint64_t v128 = (os_log_s *)Logger.logObject.getter(v127);
    os_log_type_t v129 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v128, v129))
    {
      uint64_t v130 = swift_slowAlloc(32LL, -1LL);
      uint64_t v131 = swift_slowAlloc(96LL, -1LL);
      uint64_t v181 = v131;
      *(_DWORD *)uint64_t v130 = 136315650;
      uint64_t v132 = _typeName(_:qualified:)(v59, 0LL);
      uint64_t v180 = sub_10015ADC4(v132, v133, &v181);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v180, &v181, v130 + 4, v130 + 12);
      swift_bridgeObjectRelease();
      *(_WORD *)(v130 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v180 = sub_10015ADC4(v167, v126, &v181);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v180, &v181, v130 + 14, v130 + 22);
      swift_bridgeObjectRelease_n(v126, 3LL);
      *(_WORD *)(v130 + 22) = 2080;
      uint64_t v134 = sub_100156FEC( &qword_1003F9520,  type metadata accessor for HostedRoutingSourceSession,  (uint64_t)&unk_1003501C8);
      uint64_t v135 = dispatch thunk of CustomStringConvertible.description.getter(v161, v134);
      uint64_t v180 = sub_10015ADC4(v135, v136, &v181);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v180, &v181, v130 + 24, v130 + 32);
      swift_bridgeObjectRelease();
      sub_1001A813C(v125, type metadata accessor for HostedRoutingSourceSession);
      _os_log_impl( (void *)&_mh_execute_header,  v128,  v129,  "[%s] handleHandoffFromApplication<%s> - destination session: %s is not backed by connected endpoint -> failing",  (uint8_t *)v130,  0x20u);
      swift_arrayDestroy(v131, 3LL, (char *)&type metadata for Any + 8);
      uint64_t v137 = v131;
      uint64_t v83 = v158;
      swift_slowDealloc(v137, -1LL, -1LL);
      swift_slowDealloc(v130, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v122 + 8))(v157, v162);
    }

    else
    {
      swift_bridgeObjectRelease_n(v126, 2LL);
      sub_1001A813C(v125, type metadata accessor for HostedRoutingSourceSession);

      (*(void (**)(char *, uint64_t))(v122 + 8))(v123, v124);
    }

    uint64_t v138 = v177;
    uint64_t v139 = type metadata accessor for InternalRoutingError(0LL);
    uint64_t v140 = sub_100156FEC( &qword_1003F8908,  (uint64_t (*)(uint64_t))&type metadata accessor for InternalRoutingError,  (uint64_t)&protocol conformance descriptor for InternalRoutingError);
    uint64_t v141 = swift_allocError(v139, v140, 0LL, 0LL);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v139 - 8) + 104LL))( v142,  enum case for InternalRoutingError.sessionNotFound(_:),  v139);
    uint64_t v143 = *v83;
    uint64_t v144 = v83[1];
    swift_bridgeObjectRetain();
    uint64_t v145 = MRDFastSyncGroupSessionState.rawValue.getter(v141, v143, v144, 2LL);
    uint64_t v147 = v146;
    uint64_t v149 = v148;
    uint64_t v150 = v83;
    unsigned __int8 v152 = v151;
    v138();
    swift_errorRelease(v145);
    sub_100156BA8(v147, v149, v152);
    uint64_t v108 = (uint64_t)v150;
    return sub_1001A813C(v108, type metadata accessor for HostedRoutingSourceSession);
  }

  sub_1001603DC(v55, &qword_1003F9518);
  uint64_t v63 = sub_1001741A8();
  uint64_t v64 = v160;
  uint64_t v65 = v49;
  uint64_t v66 = v49;
  uint64_t v67 = v162;
  (*(void (**)(char *, uint64_t, uint64_t))(v160 + 16))(v66, v63, v162);
  (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v61, v60, v44);
  unint64_t v68 = v169;
  swift_bridgeObjectRetain_n(v169, 2LL);
  unint64_t v69 = v173;
  swift_bridgeObjectRetain_n(v173, 2LL);
  id v71 = (os_log_s *)Logger.logObject.getter(v70);
  os_log_type_t v72 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v71, v72))
  {
    uint64_t v73 = swift_slowAlloc(42LL, -1LL);
    uint64_t v176 = v65;
    uint64_t v74 = v59;
    uint64_t v75 = v73;
    uint64_t v76 = swift_slowAlloc(128LL, -1LL);
    v179[0] = v76;
    *(_DWORD *)uint64_t v75 = 136315906;
    uint64_t v77 = _typeName(_:qualified:)(v74, 0LL);
    uint64_t v181 = sub_10015ADC4(v77, v78, v179);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v181, &v182, v75 + 4, v75 + 12);
    swift_bridgeObjectRelease();
    *(_WORD *)(v75 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v181 = sub_10015ADC4(v167, v68, v179);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v181, &v182, v75 + 14, v75 + 22);
    swift_bridgeObjectRelease_n(v68, 3LL);
    *(_WORD *)(v75 + 22) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v181 = sub_10015ADC4(v168, v69, v179);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v181, &v182, v75 + 24, v75 + 32);
    swift_bridgeObjectRelease_n(v69, 3LL);
    *(_WORD *)(v75 + 32) = 2080;
    uint64_t v79 = sub_100156FEC( &qword_1003F88F8,  (uint64_t (*)(uint64_t))&type metadata accessor for RoutingInteraction,  (uint64_t)&protocol conformance descriptor for RoutingInteraction);
    uint64_t v80 = v175;
    uint64_t v81 = dispatch thunk of CustomStringConvertible.description.getter(v44, v79);
    uint64_t v181 = sub_10015ADC4(v81, v82, v179);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v181, &v182, v75 + 34, v75 + 42);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v174 + 8))(v80, v44);
    _os_log_impl( (void *)&_mh_execute_header,  v71,  v72,  "[%s] handleHandoffFromApplication<%s> - no session found for prewarmed identifier: %s to continue interaction: %s -> failing",  (uint8_t *)v75,  0x2Au);
    swift_arrayDestroy(v76, 4LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v76, -1LL, -1LL);
    swift_slowDealloc(v75, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v160 + 8))(v176, v162);
  }

  else
  {
    swift_bridgeObjectRelease_n(v69, 2LL);
    swift_bridgeObjectRelease_n(v68, 2LL);
    (*(void (**)(char *, uint64_t))(v62 + 8))(v175, v44);

    (*(void (**)(char *, uint64_t))(v64 + 8))(v65, v67);
  }

  uint64_t v109 = v177;
  uint64_t v110 = type metadata accessor for InternalRoutingError(0LL);
  uint64_t v111 = sub_100156FEC( &qword_1003F8908,  (uint64_t (*)(uint64_t))&type metadata accessor for InternalRoutingError,  (uint64_t)&protocol conformance descriptor for InternalRoutingError);
  uint64_t v112 = swift_allocError(v110, v111, 0LL, 0LL);
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v110 - 8) + 104LL))( v113,  enum case for InternalRoutingError.sessionNotFound(_:),  v110);
  uint64_t v114 = MRDFastSyncGroupSessionState.rawValue.getter(v112, 1LL, 0LL, 4LL);
  uint64_t v116 = v115;
  uint64_t v118 = v117;
  unsigned __int8 v120 = v119;
  v109();
  swift_errorRelease(v114);
  return sub_100156BA8(v116, v118, v120);
}

uint64_t sub_10027D948( uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, os_log_s *a5, uint64_t a6, uint64_t a7, unint64_t a8, uint64_t (*a9)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a10, uint64_t a11)
{
  uint64_t v70 = a6;
  unint64_t v71 = a8;
  uint64_t v68 = a7;
  unint64_t v69 = a5;
  unsigned int v73 = a4;
  uint64_t v72 = a3;
  uint64_t v13 = a9;
  uint64_t v14 = type metadata accessor for HostedRoutingSourceSession(0LL);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = type metadata accessor for Logger(0LL);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for Preferences(0LL);
  char active = static Preferences.deferHandoffActiveSessionChange.getter();
  uint64_t v22 = v73;
  uint64_t v23 = v72;
  if ((active & 1) == 0) {
    return v13(a1, a2, v23, v22);
  }
  uint64_t v63 = v14;
  uint64_t v64 = a1;
  uint64_t v65 = a9;
  uint64_t v66 = a2;
  uint64_t v67 = a10;
  os_log_t v24 = v69;
  uint64_t v25 = v70;
  uint64_t v26 = *((void *)v69 + 3);
  unint64_t v27 = v71;
  if (!v26
    || (uint64_t v28 = *((void *)v69 + 2),
        uint64_t v29 = (uint64_t *)(v70 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_endpoints),
        swift_beginAccess(v70 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_endpoints, v74, 0LL, 0LL),
        uint64_t v30 = *v29,
        !*(void *)(v30 + 16)))
  {
LABEL_10:
    uint64_t v39 = sub_1001741A8();
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, v39, v17);
    sub_1001A80F8((uint64_t)v24, (uint64_t)v16, type metadata accessor for HostedRoutingSourceSession);
    swift_bridgeObjectRetain_n(v27, 2LL);
    uint64_t v41 = (os_log_s *)Logger.logObject.getter(v40);
    os_log_type_t v42 = static os_log_type_t.error.getter();
    int v43 = v42;
    if (os_log_type_enabled(v41, v42))
    {
      unint64_t v69 = v41;
      LODWORD(v70) = v43;
      uint64_t v44 = swift_slowAlloc(32LL, -1LL);
      uint64_t v45 = swift_slowAlloc(96LL, -1LL);
      v76[0] = v45;
      *(_DWORD *)uint64_t v44 = 136315650;
      uint64_t v46 = _typeName(_:qualified:)(a11, 0LL);
      uint64_t v75 = sub_10015ADC4(v46, v47, v76);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v75, v76, v44 + 4, v44 + 12);
      swift_bridgeObjectRelease();
      *(_WORD *)(v44 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v75 = sub_10015ADC4(v68, v27, v76);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v75, v76, v44 + 14, v44 + 22);
      swift_bridgeObjectRelease_n(v27, 3LL);
      *(_WORD *)(v44 + 22) = 2080;
      uint64_t v48 = sub_100156FEC( &qword_1003F9520,  type metadata accessor for HostedRoutingSourceSession,  (uint64_t)&unk_1003501C8);
      uint64_t v49 = dispatch thunk of CustomStringConvertible.description.getter(v63, v48);
      uint64_t v75 = sub_10015ADC4(v49, v50, v76);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v75, v76, v44 + 24, v44 + 32);
      swift_bridgeObjectRelease();
      sub_1001A813C((uint64_t)v16, type metadata accessor for HostedRoutingSourceSession);
      os_log_t v51 = v69;
      _os_log_impl( (void *)&_mh_execute_header,  v69,  (os_log_type_t)v70,  "[%s] handleHandoffFromApplication<%s> - entry lost for destination session: %s, will not perform deferred update of active session elements",  (uint8_t *)v44,  0x20u);
      swift_arrayDestroy(v45, 3LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v45, -1LL, -1LL);
      swift_slowDealloc(v44, -1LL, -1LL);
    }

    else
    {
      swift_bridgeObjectRelease_n(v27, 2LL);
      sub_1001A813C((uint64_t)v16, type metadata accessor for HostedRoutingSourceSession);
    }

    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    uint64_t v22 = v73;
    uint64_t v23 = v72;
    a2 = v66;
    a1 = v64;
    uint64_t v13 = v65;
    return v13(a1, a2, v23, v22);
  }

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v31 = sub_10015CAD4(v28, v26);
  if ((v32 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }

  uint64_t v33 = v24;
  uint64_t v34 = *(void *)(*(void *)(v30 + 56) + 8 * v31);
  swift_retain(v34);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_BYTE *)(v34 + 16) != 2)
  {
    swift_release(v34);
    os_log_t v24 = v33;
    goto LABEL_10;
  }

  uint64_t v36 = *(void *)(v34 + 32);
  uint64_t v35 = *(void *)(v34 + 40);
  if ((*(_BYTE *)(v34 + 80) & 1) != 0)
  {
    uint64_t v37 = *(void **)(v34 + 64);
    swift_bridgeObjectRetain();
    id v38 = objc_msgSend(v37, "resolvedOutputDevices", v63);
  }

  else
  {
    BOOL v53 = *(void **)(v34 + 72);
    swift_bridgeObjectRetain();
    id v38 = objc_msgSend(v53, "outputDevices", v63);
  }

  id v54 = v38;
  uint64_t v55 = v72;
  if (v54)
  {
    uint64_t v56 = sub_10016083C(0LL, (unint64_t *)&qword_1003F8300, &OBJC_CLASS___MRAVOutputDevice_ptr);
    uint64_t v57 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v54, v56);
  }

  else
  {
    uint64_t v57 = _swiftEmptyArrayStorage;
  }

  int v58 = sub_1002622C0((uint64_t)v57);
  swift_bridgeObjectRelease();
  uint64_t v59 = (void *)(v25 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements);
  uint64_t v60 = *(void *)(v25 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements);
  uint64_t v61 = *(void *)(v25 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements + 8);
  uint64_t v62 = *(void **)(v25 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_activeSessionElements + 16);
  void *v59 = v36;
  v59[1] = v35;
  v59[2] = v58;
  sub_10028E974(v60, v61, (uint64_t)v62);
  sub_10028DA70(v60, v61, (uint64_t)v62);
  sub_100263A50(v60, v61, v62);
  sub_10028DA70(v60, v61, (uint64_t)v62);
  swift_release(v34);
  return v65(v64, v66, v55, v73);
}

void sub_10027DE64(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, char *a5, uint64_t a6)
{
  uint64_t v486 = a6;
  uint64_t v487 = a1;
  uint64_t v484 = a4;
  uint64_t v489 = a2;
  uint64_t v485 = *v6;
  v480 = (void (*)(id, id))type metadata accessor for Features.MediaRemote(0LL);
  uint64_t v479 = *((void *)v480 - 1);
  __chkstk_darwin(v480);
  v478 = &v451[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v10 = type metadata accessor for RoutingInteraction(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  id v458 = &v451[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v455 = v13;
  __chkstk_darwin(v12);
  uint64_t v15 = &v451[-v14];
  uint64_t v16 = (void *)type metadata accessor for Logger(0LL);
  uint64_t v17 = (void *)*(v16 - 1);
  uint64_t v18 = __chkstk_darwin(v16);
  __int128 v468 = &v451[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v470 = &v451[-v21];
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v466 = &v451[-v23];
  uint64_t v24 = __chkstk_darwin(v22);
  v464 = &v451[-v25];
  uint64_t v26 = __chkstk_darwin(v24);
  v465 = &v451[-v27];
  uint64_t v28 = __chkstk_darwin(v26);
  v463 = &v451[-v29];
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v462 = &v451[-v31];
  uint64_t v32 = __chkstk_darwin(v30);
  v461 = &v451[-v33];
  uint64_t v34 = __chkstk_darwin(v32);
  v460 = &v451[-v35];
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v459 = &v451[-v37];
  uint64_t v38 = __chkstk_darwin(v36);
  uint64_t v457 = &v451[-v39];
  uint64_t v40 = __chkstk_darwin(v38);
  os_log_type_t v42 = &v451[-v41];
  uint64_t v43 = RoutingInteraction.identifier.getter(v40);
  unint64_t v45 = v44;
  uint64_t v471 = *a3;
  v490 = a3;
  unint64_t v46 = a3[1];
  swift_bridgeObjectRetain();
  uint64_t v47 = sub_1001741A8();
  v477 = v17;
  uint64_t v48 = (void (*)(void))v17[2];
  uint64_t v49 = v11;
  unint64_t v50 = v45;
  uint64_t v473 = v47;
  id v483 = v16;
  v474 = (void (*)(_BYTE *, uint64_t, id))v48;
  v48(v42);
  os_log_t v51 = *(void (**)(_BYTE *, char *, uint64_t))(v49 + 16);
  v476 = v15;
  uint64_t v52 = v42;
  __int128 v467 = a5;
  BOOL v53 = a5;
  uint64_t v54 = v484;
  uint64_t v481 = v10;
  uint64_t v454 = v51;
  v51(v15, v53, v10);
  swift_bridgeObjectRetain_n(v46, 2LL);
  swift_bridgeObjectRetain_n(v50, 2LL);
  unint64_t v55 = v489;
  swift_bridgeObjectRetain_n(v489, 2LL);
  uint64_t v56 = swift_retain_n(v54, 2LL);
  id v475 = v52;
  uint64_t v57 = (os_log_s *)Logger.logObject.getter(v56);
  os_log_type_t v58 = static os_log_type_t.default.getter(v57);
  int v59 = v58;
  BOOL v60 = os_log_type_enabled(v57, v58);
  uint64_t v469 = v43;
  uint64_t v456 = v49;
  v482 = (void *)v46;
  if (v60)
  {
    uint64_t v61 = swift_slowAlloc(62LL, -1LL);
    unint64_t v488 = v50;
    uint64_t v62 = v61;
    uint64_t v453 = swift_slowAlloc(192LL, -1LL);
    aBlock[0] = v453;
    *(_DWORD *)uint64_t v62 = 136316418;
    uint64_t v63 = _typeName(_:qualified:)(v485, 0LL);
    *(void *)&__int128 v494 = sub_10015ADC4(v63, v64, aBlock);
    int v452 = v59;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v494, (char *)&v494 + 8, v62 + 4, v62 + 12);
    swift_bridgeObjectRelease();
    *(_WORD *)(v62 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(void *)&__int128 v494 = sub_10015ADC4(v43, v488, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v494, (char *)&v494 + 8, v62 + 14, v62 + 22);
    swift_bridgeObjectRelease_n(v488, 3LL);
    *(_WORD *)(v62 + 22) = 2080;
    swift_bridgeObjectRetain();
    *(void *)&__int128 v494 = sub_10015ADC4(v487, v55, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v494, (char *)&v494 + 8, v62 + 24, v62 + 32);
    swift_bridgeObjectRelease_n(v55, 3LL);
    *(_WORD *)(v62 + 32) = 2080;
    swift_bridgeObjectRetain();
    *(void *)&__int128 v494 = sub_10015ADC4(v471, v46, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v494, (char *)&v494 + 8, v62 + 34, v62 + 42);
    swift_bridgeObjectRelease_n(v46, 3LL);
    *(_WORD *)(v62 + 42) = 2080;
    *(void *)&__int128 v494 = v54;
    uint64_t v65 = type metadata accessor for RoutingInteraction.Action.HandoffContext(0LL);
    uint64_t v66 = sub_100156FEC( &qword_1003FCE40,  (uint64_t (*)(uint64_t))&type metadata accessor for RoutingInteraction.Action.HandoffContext,  (uint64_t)&protocol conformance descriptor for RoutingInteraction.Action.HandoffContext);
    uint64_t v67 = dispatch thunk of CustomStringConvertible.description.getter(v65, v66);
    *(void *)&__int128 v494 = sub_10015ADC4(v67, v68, aBlock);
    id v69 = v483;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v494, (char *)&v494 + 8, v62 + 44, v62 + 52);
    swift_release_n(v54, 2LL);
    swift_bridgeObjectRelease();
    *(_WORD *)(v62 + 52) = 2080;
    uint64_t v70 = sub_100156FEC( &qword_1003F88F8,  (uint64_t (*)(uint64_t))&type metadata accessor for RoutingInteraction,  (uint64_t)&protocol conformance descriptor for RoutingInteraction);
    unint64_t v71 = v57;
    uint64_t v72 = v476;
    uint64_t v73 = v481;
    uint64_t v74 = dispatch thunk of CustomStringConvertible.description.getter(v481, v70);
    *(void *)&__int128 v494 = sub_10015ADC4(v74, v75, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v494, (char *)&v494 + 8, v62 + 54, v62 + 62);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v72, v73);
    _os_log_impl( (void *)&_mh_execute_header,  v71,  (os_log_type_t)v452,  "[%s] handoffFromApplication<%s> - bundle: %s to session: %s, context: %s, for: %s",  (uint8_t *)v62,  0x3Eu);
    uint64_t v76 = v453;
    swift_arrayDestroy(v453, 6LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v76, -1LL, -1LL);
    uint64_t v77 = v62;
    unint64_t v50 = v488;
    uint64_t v78 = v486;
    swift_slowDealloc(v77, -1LL, -1LL);

    uint64_t v79 = (void (*)(id, id))v477[1];
    v79(v475, v69);
  }

  else
  {
    swift_release_n(v54, 2LL);
    swift_bridgeObjectRelease_n(v46, 2LL);
    swift_bridgeObjectRelease_n(v55, 2LL);
    swift_bridgeObjectRelease_n(v50, 2LL);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v476, v481);

    uint64_t v79 = (void (*)(id, id))v477[1];
    id v69 = v483;
    v79(v475, v483);
    uint64_t v78 = v486;
  }

  uint64_t v80 = v479;
  uint64_t v81 = v478;
  unint64_t v82 = v480;
  uint64_t v83 = (*(uint64_t (**)(_BYTE *, void, void (*)(id, id)))(v479 + 104))( v478,  enum case for Features.MediaRemote.cayenneNewMusicHandoff(_:),  v480);
  char v84 = Features.MediaRemote.isEnabled.getter(v83);
  (*(void (**)(_BYTE *, void *))(v80 + 8))(v81, v82);
  uint64_t v85 = v487;
  if ((v84 & 1) != 0)
  {
    sub_10016083C(0LL, &qword_1003FABA8, &OBJC_CLASS___NSBundle_ptr);
    if ((sub_1002A2758(v85, v489) & 1) != 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1002891E0(v85, v489, v490, v484, v467, v78);
      return;
    }
  }

  uint64_t v86 = v490[3];
  if (!v86)
  {
    uint64_t v113 = v79;
    swift_bridgeObjectRelease();
    uint64_t v114 = v468;
    v474(v468, v473, v69);
    uint64_t v115 = swift_bridgeObjectRetain();
    uint64_t v116 = (os_log_s *)Logger.logObject.getter(v115);
    os_log_type_t v117 = static os_log_type_t.error.getter();
    BOOL v118 = os_log_type_enabled(v116, v117);
    uint64_t v119 = v485;
    if (v118)
    {
      uint64_t v120 = swift_slowAlloc(22LL, -1LL);
      uint64_t v121 = swift_slowAlloc(64LL, -1LL);
      aBlock[0] = v121;
      *(_DWORD *)uint64_t v120 = 136315394;
      v480 = v113;
      uint64_t v122 = _typeName(_:qualified:)(v119, 0LL);
      *(void *)&__int128 v494 = sub_10015ADC4(v122, v123, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v494, (char *)&v494 + 8, v120 + 4, v120 + 12);
      swift_bridgeObjectRelease();
      *(_WORD *)(v120 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(void *)&__int128 v494 = sub_10015ADC4(v469, v50, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v494, (char *)&v494 + 8, v120 + 14, v120 + 22);
      swift_bridgeObjectRelease_n(v50, 3LL);
      _os_log_impl( (void *)&_mh_execute_header,  v116,  v117,  "[%s] handoffFromApplication<%s> - failing because sessions are not both endpoint sourced",  (uint8_t *)v120,  0x16u);
      swift_arrayDestroy(v121, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v121, -1LL, -1LL);
      swift_slowDealloc(v120, -1LL, -1LL);

      v480(v114, v483);
    }

    else
    {

      swift_bridgeObjectRelease_n(v50, 2LL);
      v113(v114, v69);
    }

    goto LABEL_34;
  }

  uint64_t v87 = v490[2];
  char v88 = (uint64_t *)(v472 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_endpoints);
  swift_beginAccess(v472 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_endpoints, v496, 0LL, 0LL);
  uint64_t v89 = *v88;
  uint64_t v90 = v485;
  if (!*(void *)(v89 + 16))
  {
LABEL_31:
    swift_bridgeObjectRelease();
    uint64_t v124 = v470;
    v474(v470, v473, v69);
    uint64_t v125 = swift_bridgeObjectRetain();
    unint64_t v126 = (os_log_s *)Logger.logObject.getter(v125);
    os_log_type_t v127 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v126, v127))
    {
      uint64_t v128 = swift_slowAlloc(22LL, -1LL);
      uint64_t v129 = swift_slowAlloc(64LL, -1LL);
      aBlock[0] = v129;
      *(_DWORD *)uint64_t v128 = 136315394;
      v480 = v79;
      uint64_t v130 = _typeName(_:qualified:)(v90, 0LL);
      *(void *)&__int128 v494 = sub_10015ADC4(v130, v131, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v494, (char *)&v494 + 8, v128 + 4, v128 + 12);
      swift_bridgeObjectRelease();
      *(_WORD *)(v128 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(void *)&__int128 v494 = sub_10015ADC4(v469, v50, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v494, (char *)&v494 + 8, v128 + 14, v128 + 22);
      swift_bridgeObjectRelease_n(v50, 3LL);
      _os_log_impl( (void *)&_mh_execute_header,  v126,  v127,  "[%s] handoffFromApplication<%s> - failing because no connected entry for endpoint sourced sessions",  (uint8_t *)v128,  0x16u);
      swift_arrayDestroy(v129, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v129, -1LL, -1LL);
      swift_slowDealloc(v128, -1LL, -1LL);

      v480(v124, v69);
    }

    else
    {

      swift_bridgeObjectRelease_n(v50, 2LL);
      v79(v124, v69);
    }

LABEL_111:
                if ((id)++v327 == v475) {
                  goto LABEL_141;
                }
              }

              id v354 = (uint64_t *)v464;
              uint64_t v355 = 1LL;
              while (1)
              {
                uint64_t v356 = v355 + 1;
                if (__OFADD__(v355, 1LL)) {
                  break;
                }
                uint64_t v357 = *(v354 - 1);
                uint64_t v358 = *v354;
                BOOL v359 = v357 == v350 && v358 == v349;
                if (v359 || (_stringCompareWithSmolCheck(_:_:expecting:)(v357, v358, v350, v349, 0LL) & 1) != 0) {
                  goto LABEL_140;
                }
                v354 += 2;
                ++v355;
                if (v356 == v328) {
                  goto LABEL_111;
                }
              }

              __break(1u);
            }

            else
            {
LABEL_141:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v474(v457, v473, v483);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v419 = swift_bridgeObjectRetain();
              uint64_t v420 = (os_log_s *)Logger.logObject.getter(v419);
              os_log_type_t v421 = static os_log_type_t.error.getter();
              if (os_log_type_enabled(v420, v421))
              {
                uint64_t v422 = swift_slowAlloc(42LL, -1LL);
                uint64_t v423 = swift_slowAlloc(128LL, -1LL);
                aBlock[0] = v423;
                *(_DWORD *)uint64_t v422 = 136315906;
                uint64_t v424 = _typeName(_:qualified:)(v485, 0LL);
                *(void *)&__int128 v494 = sub_10015ADC4(v424, v425, aBlock);
                UnsafeMutableRawBufferPointer.copyMemory(from:)(&v494, (char *)&v494 + 8, v422 + 4, v422 + 12);
                swift_bridgeObjectRelease();
                *(_WORD *)(v422 + 12) = 2080;
                unint64_t v426 = v488;
                swift_bridgeObjectRetain();
                *(void *)&__int128 v494 = sub_10015ADC4(v469, v426, aBlock);
                UnsafeMutableRawBufferPointer.copyMemory(from:)(&v494, (char *)&v494 + 8, v422 + 14, v422 + 22);
                swift_bridgeObjectRelease_n(v426, 3LL);
                *(_WORD *)(v422 + 22) = 2080;
                unint64_t v427 = v466;
                uint64_t v428 = swift_bridgeObjectRetain();
                uint64_t v429 = Array.description.getter(v428, &type metadata for String);
                unint64_t v431 = v430;
                swift_bridgeObjectRelease();
                *(void *)&__int128 v494 = sub_10015ADC4(v429, v431, aBlock);
                UnsafeMutableRawBufferPointer.copyMemory(from:)(&v494, (char *)&v494 + 8, v422 + 24, v422 + 32);
                swift_bridgeObjectRelease_n(v427, 2LL);
                swift_bridgeObjectRelease();
                *(_WORD *)(v422 + 32) = 2080;
                v432 = v476;
                uint64_t v433 = swift_bridgeObjectRetain();
                uint64_t v434 = Array.description.getter(v433, &type metadata for String);
                unint64_t v436 = v435;
                swift_bridgeObjectRelease();
                *(void *)&__int128 v494 = sub_10015ADC4(v434, v436, aBlock);
                UnsafeMutableRawBufferPointer.copyMemory(from:)(&v494, (char *)&v494 + 8, v422 + 34, v422 + 42);
                swift_bridgeObjectRelease_n(v432, 2LL);
                swift_bridgeObjectRelease();
                _os_log_impl( (void *)&_mh_execute_header,  v420,  v421,  "[%s] handoffFromApplication<%s> - failing because no matching supported types found between source: %s, dest: %s",  (uint8_t *)v422,  0x2Au);
                swift_arrayDestroy(v423, 4LL, (char *)&type metadata for Any + 8);
                swift_slowDealloc(v423, -1LL, -1LL);
                swift_slowDealloc(v422, -1LL, -1LL);
              }

              else
              {

                swift_bridgeObjectRelease_n(v476, 2LL);
                swift_bridgeObjectRelease_n(v466, 2LL);
                swift_bridgeObjectRelease_n(v488, 2LL);
              }

              v480(v457, v483);
              uint64_t v437 = type metadata accessor for InternalRoutingError(0LL);
              uint64_t v438 = sub_100156FEC( &qword_1003F8908,  (uint64_t (*)(uint64_t))&type metadata accessor for InternalRoutingError,  (uint64_t)&protocol conformance descriptor for InternalRoutingError);
              uint64_t v439 = swift_allocError(v437, v438, 0LL, 0LL);
              (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v437 - 8) + 104LL))( v440,  enum case for InternalRoutingError.unsupportedOperation(_:),  v437);
              uint64_t v441 = *v490;
              uint64_t v442 = v490[1];
              swift_bridgeObjectRetain();
              uint64_t v443 = MRDFastSyncGroupSessionState.rawValue.getter(v439, v441, v442, 2LL);
              uint64_t v445 = v444;
              uint64_t v447 = v446;
              unsigned __int8 v449 = v448;
              sub_10029149C(v443, v444, v446, v448);
              swift_release(v479);

              swift_errorRelease(v443);
              sub_100156BA8(v445, v447, v449);
            }

            return;
          }

          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
LABEL_82:
          swift_bridgeObjectRelease();
LABEL_106:
          uint64_t v329 = v459;
          v474(v459, v473, v483);
          unint64_t v330 = v489;
          swift_bridgeObjectRetain_n(v489, 2LL);
          unint64_t v331 = v488;
          uint64_t v332 = swift_bridgeObjectRetain();
          uint64_t v333 = (os_log_s *)Logger.logObject.getter(v332);
          os_log_type_t v334 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v333, v334))
          {
            uint64_t v335 = swift_slowAlloc(32LL, -1LL);
            uint64_t v336 = swift_slowAlloc(96LL, -1LL);
            aBlock[0] = v336;
            *(_DWORD *)uint64_t v335 = 136315650;
            uint64_t v337 = _typeName(_:qualified:)(v485, 0LL);
            *(void *)&__int128 v494 = sub_10015ADC4(v337, v338, aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v494, (char *)&v494 + 8, v335 + 4, v335 + 12);
            swift_bridgeObjectRelease();
            *(_WORD *)(v335 + 12) = 2080;
            swift_bridgeObjectRetain();
            *(void *)&__int128 v494 = sub_10015ADC4(v469, v331, aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v494, (char *)&v494 + 8, v335 + 14, v335 + 22);
            swift_bridgeObjectRelease_n(v331, 3LL);
            *(_WORD *)(v335 + 22) = 2080;
            swift_bridgeObjectRetain();
            *(void *)&__int128 v494 = sub_10015ADC4(v487, v330, aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v494, (char *)&v494 + 8, v335 + 24, v335 + 32);
            swift_bridgeObjectRelease_n(v330, 3LL);
            _os_log_impl( (void *)&_mh_execute_header,  v333,  v334,  "[%s] handoffFromApplication<%s> - failing because no destination supported types found for: %s",  (uint8_t *)v335,  0x20u);
            swift_arrayDestroy(v336, 3LL, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v336, -1LL, -1LL);
            swift_slowDealloc(v335, -1LL, -1LL);
          }

          else
          {

            swift_bridgeObjectRelease_n(v330, 2LL);
            swift_bridgeObjectRelease_n(v331, 2LL);
          }

          v480(v329, v483);
LABEL_110:
          uint64_t v339 = type metadata accessor for InternalRoutingError(0LL);
          uint64_t v340 = sub_100156FEC( &qword_1003F8908,  (uint64_t (*)(uint64_t))&type metadata accessor for InternalRoutingError,  (uint64_t)&protocol conformance descriptor for InternalRoutingError);
          uint64_t v341 = swift_allocError(v339, v340, 0LL, 0LL);
          (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v339 - 8) + 104LL))( v342,  enum case for InternalRoutingError.unsupportedOperation(_:),  v339);
          uint64_t v343 = *v490;
          uint64_t v344 = v490[1];
          swift_bridgeObjectRetain();
          uint64_t v138 = MRDFastSyncGroupSessionState.rawValue.getter(v341, v343, v344, 2LL);
          uint64_t v140 = v345;
          uint64_t v142 = v346;
          unsigned __int8 v144 = v347;
          sub_10029149C(v138, v345, v346, v347);
          swift_release(v479);

          goto LABEL_35;
        }
      }

      else
      {
        __int128 v494 = 0u;
        __int128 v495 = 0u;
      }

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      sub_1001603DC((uint64_t)&v494, &qword_1003F9EE0);
      goto LABEL_106;
    }

    ++v109;
  }

  swift_bridgeObjectRelease_n(v107, 2LL);
  id v226 = [v111 options];
  id v227 = v477;
  uint64_t v228 = v487;
  if (!v226)
  {
    __int128 v494 = 0u;
    __int128 v495 = 0u;
    id v233 = v483;
LABEL_62:
    swift_bridgeObjectRelease();

    sub_1001603DC((uint64_t)&v494, &qword_1003F9EE0);
    goto LABEL_134;
  }

  uint64_t v229 = v226;
  uint64_t v230 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)( v226,  &type metadata for AnyHashable,  (char *)&type metadata for Any + 8,  &protocol witness table for AnyHashable);

  id v493 = (id)kMRMediaRemoteCommandInfoSupportedPlaybackSessionTypes;
  id v475 = (id)kMRMediaRemoteCommandInfoSupportedPlaybackSessionTypes;
  v476 = (char *)kMRMediaRemoteCommandInfoSupportedPlaybackSessionTypes;
  uint64_t v231 = sub_100156B68(&qword_1003F9500);
  uint64_t v470 = (_BYTE *)sub_1001A828C();
  AnyHashable.init<A>(_:)(&v493, v231, v470);
  if (*(void *)(v230 + 16))
  {
    unint64_t v232 = sub_10015CAA4((uint64_t)aBlock);
    id v233 = v483;
    if ((v234 & 1) != 0)
    {
      sub_100160800(*(void *)(v230 + 56) + 32 * v232, (uint64_t)&v494);
    }

    else
    {
      __int128 v494 = 0u;
      __int128 v495 = 0u;
    }
  }

  else
  {
    __int128 v494 = 0u;
    __int128 v495 = 0u;
    id v233 = v483;
  }

  sub_100160990((uint64_t)aBlock);
  swift_bridgeObjectRelease();
  if (!*((void *)&v495 + 1)) {
    goto LABEL_62;
  }
  uint64_t v235 = sub_100156B68(&qword_1003FA010);
  if ((swift_dynamicCast(aBlock, &v494, (char *)&type metadata for Any + 8, v235, 6LL) & 1) == 0)
  {
    swift_bridgeObjectRelease();

LABEL_134:
    uint64_t v361 = v463;
    v474(v463, v473, v233);
    unint64_t v362 = v489;
    swift_bridgeObjectRetain_n(v489, 2LL);
    unint64_t v363 = v488;
    uint64_t v364 = swift_bridgeObjectRetain();
    v365 = (os_log_s *)Logger.logObject.getter(v364);
    os_log_type_t v366 = static os_log_type_t.error.getter();
    BOOL v367 = os_log_type_enabled(v365, v366);
    uint64_t v368 = v485;
    if (v367)
    {
      uint64_t v369 = swift_slowAlloc(32LL, -1LL);
      uint64_t v484 = swift_slowAlloc(96LL, -1LL);
      aBlock[0] = v484;
      *(_DWORD *)uint64_t v369 = 136315650;
      uint64_t v370 = _typeName(_:qualified:)(v368, 0LL);
      *(void *)&__int128 v494 = sub_10015ADC4(v370, v371, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v494, (char *)&v494 + 8, v369 + 4, v369 + 12);
      swift_bridgeObjectRelease();
      *(_WORD *)(v369 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(void *)&__int128 v494 = sub_10015ADC4(v469, v363, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v494, (char *)&v494 + 8, v369 + 14, v369 + 22);
      swift_bridgeObjectRelease_n(v363, 3LL);
      *(_WORD *)(v369 + 22) = 2080;
      swift_bridgeObjectRetain();
      *(void *)&__int128 v494 = sub_10015ADC4(v487, v362, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v494, (char *)&v494 + 8, v369 + 24, v369 + 32);
      swift_bridgeObjectRelease_n(v362, 3LL);
      _os_log_impl( (void *)&_mh_execute_header,  v365,  v366,  "[%s] handoffFromApplication<%s> - failing because no source supported types found for: %s",  (uint8_t *)v369,  0x20u);
      uint64_t v372 = v484;
      swift_arrayDestroy(v484, 3LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v372, -1LL, -1LL);
      swift_slowDealloc(v369, -1LL, -1LL);

      id v373 = v477;
      v79(v463, v233);
      uint64_t v374 = v479;
    }

    else
    {

      swift_bridgeObjectRelease_n(v362, 2LL);
      swift_bridgeObjectRelease_n(v363, 2LL);
      v79(v361, v233);
      uint64_t v374 = v479;
      id v373 = v227;
    }

    uint64_t v375 = type metadata accessor for InternalRoutingError(0LL);
    uint64_t v376 = sub_100156FEC( &qword_1003F8908,  (uint64_t (*)(uint64_t))&type metadata accessor for InternalRoutingError,  (uint64_t)&protocol conformance descriptor for InternalRoutingError);
    uint64_t v377 = swift_allocError(v375, v376, 0LL, 0LL);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v375 - 8) + 104LL))( v378,  enum case for InternalRoutingError.unsupportedOperation(_:),  v375);
    uint64_t v379 = *v490;
    uint64_t v380 = v490[1];
    swift_bridgeObjectRetain();
    uint64_t v381 = MRDFastSyncGroupSessionState.rawValue.getter(v377, v379, v380, 2LL);
    uint64_t v383 = v382;
    uint64_t v385 = v384;
    unsigned __int8 v387 = v386;
    sub_10029149C(v381, v382, v384, v386);
    swift_errorRelease(v381);
    sub_100156BA8(v383, v385, v387);
    swift_release(v374);

LABEL_138:
    uint64_t v285 = &v497;
LABEL_139:

    return;
  }

  v463 = (_BYTE *)v235;
  v464 = (char *)v231;
  __int128 v468 = v111;
  uint64_t v236 = aBlock[0];
  id v237 = [v96 server];
  id v238 = [v237 nowPlayingServer];

  unsigned __int8 v239 = [v238 originClientForOrigin:v227];
  if (!v239)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v247 = v462;
    v474(v462, v473, v233);
    id v248 = v227;
    unint64_t v249 = v488;
    swift_bridgeObjectRetain();
    id v250 = v248;
    uint64_t v251 = (os_log_s *)Logger.logObject.getter(v250);
    os_log_type_t v252 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v251, v252))
    {
      uint64_t v253 = swift_slowAlloc(32LL, -1LL);
      uint64_t v254 = (void *)swift_slowAlloc(8LL, -1LL);
      uint64_t v489 = swift_slowAlloc(64LL, -1LL);
      aBlock[0] = v489;
      *(_DWORD *)uint64_t v253 = 136315650;
      uint64_t v255 = _typeName(_:qualified:)(v485, 0LL);
      *(void *)&__int128 v494 = sub_10015ADC4(v255, v256, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v494, (char *)&v494 + 8, v253 + 4, v253 + 12);
      swift_bridgeObjectRelease();
      *(_WORD *)(v253 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(void *)&__int128 v494 = sub_10015ADC4(v469, v249, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v494, (char *)&v494 + 8, v253 + 14, v253 + 22);
      swift_bridgeObjectRelease_n(v249, 3LL);
      *(_WORD *)(v253 + 22) = 2112;
      *(void *)&__int128 v494 = v250;
      id v257 = v250;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v494, (char *)&v494 + 8, v253 + 24, v253 + 32);
      *uint64_t v254 = v477;

      _os_log_impl( (void *)&_mh_execute_header,  v251,  v252,  "[%s] handoffFromApplication<%s> - failing because no destination origin client found for: %@",  (uint8_t *)v253,  0x20u);
      uint64_t v258 = sub_100156B68((uint64_t *)&unk_1003FB7E0);
      swift_arrayDestroy(v254, 1LL, v258);
      swift_slowDealloc(v254, -1LL, -1LL);
      uint64_t v259 = v489;
      swift_arrayDestroy(v489, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v259, -1LL, -1LL);
      swift_slowDealloc(v253, -1LL, -1LL);

      uint64_t v260 = v462;
      id v261 = v483;
    }

    else
    {

      swift_bridgeObjectRelease_n(v249, 2LL);
      uint64_t v260 = v247;
      id v261 = v233;
    }

    v79(v260, v261);
    uint64_t v272 = type metadata accessor for InternalRoutingError(0LL);
    uint64_t v273 = sub_100156FEC( &qword_1003F8908,  (uint64_t (*)(uint64_t))&type metadata accessor for InternalRoutingError,  (uint64_t)&protocol conformance descriptor for InternalRoutingError);
    uint64_t v274 = swift_allocError(v272, v273, 0LL, 0LL);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v272 - 8) + 104LL))( v275,  enum case for InternalRoutingError.sessionNotFound(_:),  v272);
    uint64_t v276 = *v490;
    uint64_t v277 = v490[1];
    swift_bridgeObjectRetain();
    uint64_t v278 = MRDFastSyncGroupSessionState.rawValue.getter(v274, v276, v277, 2LL);
    uint64_t v280 = v279;
    uint64_t v282 = v281;
    unsigned __int8 v284 = v283;
    sub_10029149C(v278, v279, v281, v283);
    swift_errorRelease(v278);
    sub_100156BA8(v280, v282, v284);
    swift_release(v479);

    uint64_t v285 = (uint64_t *)&v495;
    goto LABEL_139;
  }

  uint64_t v466 = (_BYTE *)v236;
  sub_10016083C(0LL, &qword_1003FABA8, &OBJC_CLASS___NSBundle_ptr);
  uint64_t v240 = v489;
  char v241 = sub_1002A2758(v228, v489);
  uint64_t v242 = v228;
  v465 = v239;
  if ((v241 & 1) == 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v246 = v240;
LABEL_67:
    if ((sub_1002A2764(v242, v246) & 1) == 0)
    {
      if (!v240) {
        goto LABEL_88;
      }
      goto LABEL_71;
    }

void sub_100281478(uint64_t a1, int a2, uint64_t a3, void (*a4)(void), uint64_t a5)
{
  LODWORD(v123) = a2;
  uint64_t v9 = type metadata accessor for RoutingControl(0LL);
  uint64_t v126 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v124 = v10;
  uint64_t v125 = (char *)&v116 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for HostedRoutingSourceSession(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (uint64_t *)((char *)&v116 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v15 = sub_100156B68(&qword_1003F9518);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v116 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v128 = a3;
  uint64_t v18 = swift_bridgeObjectRetain();
  uint64_t v19 = RoutingControl.sessionIdentifier.getter(v18);
  uint64_t v21 = v20;
  uint64_t v22 = sub_10024B258();
  uint64_t v23 = *(void *)v22;
  uint64_t v24 = *((void *)v22 + 1);
  if (v19 == *(void *)v22 && v21 == v24)
  {
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }

  uint64_t v120 = v12;
  char v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v21, v23, v24, 0LL);
  uint64_t v26 = swift_bridgeObjectRelease();
  if ((v25 & 1) == 0)
  {
    uint64_t v122 = a5;
    uint64_t v67 = (*(uint64_t (**)(uint64_t))(*(void *)v127 + 328LL))(v26);
    uint64_t v68 = *(void *)(v67 + 16);
    if (v68)
    {
      uint64_t v119 = v11;
      uint64_t v117 = v9;
      uint64_t v69 = a1;
      uint64_t v121 = a4;
      uint64_t v70 = v67 + ((*(unsigned __int8 *)(v120 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v120 + 80));
      uint64_t v71 = *(void *)(v120 + 72);
      uint64_t v118 = v67;
      swift_bridgeObjectRetain();
      while (1)
      {
        uint64_t v72 = sub_1001A80F8(v70, (uint64_t)v14, type metadata accessor for HostedRoutingSourceSession);
        uint64_t v73 = *v14;
        uint64_t v74 = v14[1];
        uint64_t v75 = RoutingControl.sessionIdentifier.getter(v72);
        if (v73 == v75 && v74 == v76) {
          break;
        }
        char v78 = _stringCompareWithSmolCheck(_:_:expecting:)(v73, v74, v75, v76, 0LL);
        swift_bridgeObjectRelease();
        if ((v78 & 1) != 0) {
          goto LABEL_20;
        }
        sub_1001A813C((uint64_t)v14, type metadata accessor for HostedRoutingSourceSession);
        v70 += v71;
        if (!--v68)
        {
          swift_bridgeObjectRelease();
          uint64_t v79 = 1LL;
          a5 = v122;
          a4 = v121;
          a1 = v69;
          uint64_t v9 = v117;
          uint64_t v11 = v119;
          goto LABEL_21;
        }
      }

      swift_bridgeObjectRelease();
LABEL_20:
      a5 = v122;
      a4 = v121;
      uint64_t v11 = v119;
      swift_bridgeObjectRelease();
      sub_1001A81D4((uint64_t)v14, (uint64_t)v17, type metadata accessor for HostedRoutingSourceSession);
      uint64_t v79 = 0LL;
      a1 = v69;
      uint64_t v9 = v117;
    }

    else
    {
      uint64_t v79 = 1LL;
      a5 = v122;
    }

uint64_t sub_100281F0C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for HostedRoutingSourceSession(0LL);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6) {
    return 0LL;
  }
  uint64_t v7 = (uint64_t *)(a1 + ((*(unsigned __int8 *)(v3 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
  uint64_t v8 = *(void *)(v3 + 72);
  uint64_t v9 = swift_bridgeObjectRetain();
  do
  {
    uint64_t v11 = *v7;
    uint64_t v10 = v7[1];
    uint64_t v12 = RoutingControl.sessionIdentifier.getter(v9);
    if (v11 == v12 && v10 == v13)
    {
      swift_bridgeObjectRelease();
      sub_1001A80F8((uint64_t)v7, (uint64_t)v5, type metadata accessor for HostedRoutingSourceSession);
    }

    else
    {
      char v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v10, v12, v13, 0LL);
      swift_bridgeObjectRelease();
      sub_1001A80F8((uint64_t)v7, (uint64_t)v5, type metadata accessor for HostedRoutingSourceSession);
      if ((v15 & 1) == 0)
      {
        uint64_t v9 = sub_1001A813C((uint64_t)v5, type metadata accessor for HostedRoutingSourceSession);
        goto LABEL_4;
      }
    }

    char v16 = sub_10024B264();
    uint64_t v9 = sub_1001A813C((uint64_t)v5, type metadata accessor for HostedRoutingSourceSession);
    if ((v16 & 1) != 0)
    {
      uint64_t v17 = 1LL;
      goto LABEL_16;
    }

uint64_t sub_100282078( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t (*a11)(void))
{
  uint64_t v24 = a8;
  uint64_t v25 = a7;
  uint64_t v26 = a5;
  uint64_t v27 = a6;
  uint64_t v23 = a11;
  uint64_t v15 = type metadata accessor for RoutingControl(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  __chkstk_darwin(v15);
  if (a1)
  {
    swift_errorRetain(a1);
    sub_100156A2C(a2, a3, a4);
    v26(a1, a2, a3, a4);
    return sub_100184850(a1, a2, a3, a4);
  }

  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))( (char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL),  a9,  v15);
    uint64_t v19 = *(unsigned __int8 *)(v16 + 80);
    uint64_t v20 = (v19 + 16) & ~v19;
    uint64_t v21 = swift_allocObject(a10, v20 + v17, v19 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))( v21 + v20,  (char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL),  v15);
    sub_100273F0C(v24, v26, v27, v23, v21, 2.0);
    return swift_release(v21);
  }

uint64_t sub_1002821E0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for HostedRoutingSourceSession(0LL);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6) {
    return 0LL;
  }
  uint64_t v7 = (uint64_t *)(a1 + ((*(unsigned __int8 *)(v3 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
  uint64_t v8 = *(void *)(v3 + 72);
  uint64_t v9 = swift_bridgeObjectRetain();
  do
  {
    uint64_t v11 = *v7;
    uint64_t v10 = v7[1];
    uint64_t v12 = RoutingControl.sessionIdentifier.getter(v9);
    if (v11 == v12 && v10 == v13)
    {
      swift_bridgeObjectRelease();
      sub_1001A80F8((uint64_t)v7, (uint64_t)v5, type metadata accessor for HostedRoutingSourceSession);
    }

    else
    {
      char v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v10, v12, v13, 0LL);
      swift_bridgeObjectRelease();
      sub_1001A80F8((uint64_t)v7, (uint64_t)v5, type metadata accessor for HostedRoutingSourceSession);
      if ((v15 & 1) == 0)
      {
        uint64_t v9 = sub_1001A813C((uint64_t)v5, type metadata accessor for HostedRoutingSourceSession);
        goto LABEL_4;
      }
    }

    char v16 = sub_10024B264();
    uint64_t v9 = sub_1001A813C((uint64_t)v5, type metadata accessor for HostedRoutingSourceSession);
    if ((v16 & 1) == 0)
    {
      uint64_t v17 = 1LL;
      goto LABEL_16;
    }

unint64_t sub_10028234C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2)
  {
    uint64_t v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }

  sub_100156B68(&qword_1003FCE58);
  uint64_t v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  uint64_t v4 = (void *)v3;
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v4;
  }

  swift_retain(v3);
  uint64_t v6 = (unint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v8 = (void *)*(v6 - 2);
    uint64_t v7 = *(v6 - 1);
    unint64_t v9 = *v6;
    id v10 = v8;
    sub_100160874(v7, v9);
    unint64_t result = sub_10028C500(v8);
    if ((v12 & 1) != 0) {
      break;
    }
    *(void *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL) + 64) |= 1LL << result;
    *(void *)(v4[6] + 8 * result) = v8;
    uint64_t v13 = (uint64_t *)(v4[7] + 16 * result);
    *uint64_t v13 = v7;
    v13[1] = v9;
    uint64_t v14 = v4[2];
    BOOL v15 = __OFADD__(v14, 1LL);
    uint64_t v16 = v14 + 1;
    if (v15) {
      goto LABEL_11;
    }
    v6 += 3;
    v4[2] = v16;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }

  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_100282460(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v257 = a3;
  uint64_t v244 = a2;
  uint64_t v5 = *v3;
  uint64_t v6 = sub_100156B68(&qword_1003F9518);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v241 = (uint64_t)&v231 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  id v238 = (char *)&v231 - v9;
  uint64_t v242 = type metadata accessor for HostedRoutingSourceSession(0LL);
  uint64_t v248 = *(void *)(v242 - 8);
  uint64_t v10 = __chkstk_darwin(v242);
  unsigned __int8 v239 = (char *)&v231 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v240 = (uint64_t)&v231 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v231 - v15;
  __chkstk_darwin(v14);
  uint64_t v237 = (uint64_t)&v231 - v17;
  uint64_t v247 = type metadata accessor for RoutingControl.Target(0LL);
  uint64_t v246 = *(void *)(v247 - 8);
  uint64_t v18 = __chkstk_darwin(v247);
  uint64_t v235 = (char *)&v231 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v18);
  uint64_t v245 = (uint64_t *)((char *)&v231 - v20);
  uint64_t v258 = type metadata accessor for RoutingControl(0LL);
  uint64_t v255 = *(void *)(v258 - 8);
  uint64_t v21 = *(void *)(v255 + 64);
  uint64_t v22 = __chkstk_darwin(v258);
  id v233 = (char *)&v231 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = __chkstk_darwin(v22);
  char v234 = (char *)&v231 - v24;
  __chkstk_darwin(v23);
  uint64_t v254 = (char *)&v231 - v25;
  uint64_t v26 = type metadata accessor for RoutingInteraction(0LL);
  uint64_t v243 = *(void *)(v26 - 8);
  uint64_t v27 = *(void *)(v243 + 64);
  __chkstk_darwin(v26);
  uint64_t v251 = (char *)&v231 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v28 = type metadata accessor for RoutingControl.RoutingControlType(0LL);
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v32 = (int *)((char *)&v231 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v256 = v5;
  uint64_t v33 = *(uint64_t (**)(uint64_t))(v5 + 280);
  id v250 = v3;
  id v249 = (id)v33(v30);
  uint64_t v34 = ((uint64_t (*)(void))RoutingControl.identifier.getter)();
  os_log_type_t v252 = v35;
  uint64_t v253 = v34;
  uint64_t v36 = a1;
  RoutingControl.type.getter(v34);
  int v37 = (*(uint64_t (**)(int *, uint64_t))(v29 + 88))(v32, v28);
  if (v37 != enum case for RoutingControl.RoutingControlType.absoluteVolume(_:))
  {
    uint64_t v80 = v256;
    uint64_t v81 = v252;
    uint64_t v82 = v253;
    if (v37 == enum case for RoutingControl.RoutingControlType.relativeVolume(_:))
    {
      swift_bridgeObjectRelease();
      (*(void (**)(int *, uint64_t))(v29 + 96))(v32, v28);
      uint64_t v83 = type metadata accessor for InternalRoutingError(0LL);
      uint64_t v84 = sub_100156FEC( &qword_1003F8908,  (uint64_t (*)(uint64_t))&type metadata accessor for InternalRoutingError,  (uint64_t)&protocol conformance descriptor for InternalRoutingError);
      uint64_t v85 = swift_allocError(v83, v84, 0LL, 0LL);
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v83 - 8) + 104LL))( v86,  enum case for InternalRoutingError.notImplemented(_:),  v83);
      uint64_t v87 = MRDFastSyncGroupSessionState.rawValue.getter(v85, 0LL, 0LL, 4LL);
      uint64_t v89 = v88;
      uint64_t v91 = v90;
      unsigned __int8 v93 = v92;
      sub_10028F874(v87, v88, v90, v92);

      swift_errorRelease(v87);
      sub_100156BA8(v89, v91, v93);
      uint64_t v94 = type metadata accessor for RoutingControls.RelativeVolumeControl.AdjustmentType(0LL);
      return (*(uint64_t (**)(int *, uint64_t))(*(void *)(v94 - 8) + 8LL))(v32, v94);
    }

    if (v37 == enum case for RoutingControl.RoutingControlType.mute(_:))
    {
      swift_bridgeObjectRelease();
      uint64_t v113 = type metadata accessor for InternalRoutingError(0LL);
      uint64_t v114 = sub_100156FEC( &qword_1003F8908,  (uint64_t (*)(uint64_t))&type metadata accessor for InternalRoutingError,  (uint64_t)&protocol conformance descriptor for InternalRoutingError);
      uint64_t v115 = swift_allocError(v113, v114, 0LL, 0LL);
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v113 - 8) + 104LL))( v116,  enum case for InternalRoutingError.notImplemented(_:),  v113);
      uint64_t v117 = MRDFastSyncGroupSessionState.rawValue.getter(v115, 0LL, 0LL, 4LL);
      uint64_t v119 = v118;
      uint64_t v121 = v120;
      unsigned __int8 v123 = v122;
      sub_10028F874(v117, v118, v120, v122);
LABEL_48:

      swift_errorRelease(v117);
      return sub_100156BA8(v119, v121, v123);
    }

    uint64_t v223 = v258;
    (*(void (**)(char *, uint64_t, uint64_t))(v255 + 16))(v233, v36, v258);
    __int128 aBlock = 0LL;
    unint64_t v260 = 0xE000000000000000LL;
    _StringGuts.grow(_:)(58LL);
    v224._countAndFlagsBits = 91LL;
    v224._object = (void *)0xE100000000000000LL;
    String.append(_:)(v224);
    v225._countAndFlagsBits = _typeName(_:qualified:)(v80, 0LL);
    String.append(_:)(v225);
    swift_bridgeObjectRelease();
    v226._countAndFlagsBits = 0xD000000000000016LL;
    v226._object = (void *)0x800000010033AC30LL;
    String.append(_:)(v226);
    v227._countAndFlagsBits = v82;
    v227._object = v81;
    String.append(_:)(v227);
    v228._countAndFlagsBits = 0xD00000000000001DLL;
    v228._object = (void *)0x800000010033AC50LL;
    String.append(_:)(v228);
    uint64_t v229 = sub_100156FEC( &qword_1003F8900,  (uint64_t (*)(uint64_t))&type metadata accessor for RoutingControl,  (uint64_t)&protocol conformance descriptor for RoutingControl);
    v230._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v223, v229);
    String.append(_:)(v230);
    swift_bridgeObjectRelease();
    uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  aBlock,  v260,  "mediaremoted/HostedRoutingSessionDataSource.swift",  49LL,  2LL,  1168LL,  0);
    goto LABEL_69;
  }

  id v233 = v16;
  (*(void (**)(int *, uint64_t))(v29 + 96))(v32, v28);
  int v38 = *v32;
  uint64_t v39 = v243;
  (*(void (**)(char *, uint64_t, uint64_t))(v243 + 16))(v251, v244, v26);
  uint64_t v40 = v255;
  uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t))(v255 + 16);
  uint64_t v236 = a1;
  unint64_t v232 = v41;
  v41(v254, a1, v258);
  uint64_t v42 = *(unsigned __int8 *)(v39 + 80);
  uint64_t v43 = (v42 + 24) & ~v42;
  unint64_t v44 = (v27 + v43 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v45 = *(unsigned __int8 *)(v40 + 80);
  uint64_t v46 = (v45 + v44 + 16) & ~v45;
  unint64_t v47 = (v21 + v46 + 3) & 0xFFFFFFFFFFFFFFFCLL;
  unint64_t v48 = (v47 + 11) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v244 = v26;
  unint64_t v49 = (v48 + 23) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v50 = swift_allocObject(&unk_1003AC778, v49 + 8, v42 | v45 | 7);
  id v52 = v250;
  os_log_t v51 = v251;
  *(void *)(v50 + 16) = v250;
  (*(void (**)(uint64_t, char *, uint64_t))(v39 + 32))(v50 + v43, v51, v244);
  id v53 = (uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v50 + v44);
  uint64_t v54 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v257;
  *id v53 = sub_10028F874;
  v53[1] = v54;
  uint64_t v55 = v50 + v46;
  uint64_t v56 = v258;
  (*(void (**)(uint64_t, char *, uint64_t))(v40 + 32))(v55, v254, v258);
  *(_DWORD *)(v50 + v47) = v38;
  uint64_t v57 = (uint64_t *)(v50 + v48);
  uint64_t v59 = v252;
  uint64_t v58 = v253;
  *uint64_t v57 = v253;
  v57[1] = (uint64_t)v59;
  uint64_t v255 = v50;
  uint64_t v60 = v256;
  *(void *)(v50 + v49) = v256;
  swift_retain(v52);
  swift_retain(v54);
  uint64_t v61 = swift_bridgeObjectRetain();
  uint64_t v62 = v245;
  RoutingControl.target.getter(v61);
  uint64_t v63 = v246;
  uint64_t v64 = v247;
  int v65 = (*(uint64_t (**)(uint64_t *, uint64_t))(v246 + 88))(v62, v247);
  uint64_t v66 = v63;
  if (v65 == enum case for RoutingControl.Target.session(_:))
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t *, uint64_t))(v63 + 96))(v62, v64);
    uint64_t v64 = *v62;
    uint64_t v67 = (void *)v62[1];
    uint64_t v68 = sub_10024B258();
    uint64_t v69 = (void *)*((void *)v68 + 1);
    if (v64 == *(void *)v68 && v67 == v69) {
      goto LABEL_63;
    }
    char v70 = _stringCompareWithSmolCheck(_:_:expecting:)(v64, v67, *(void *)v68, v69, 0LL);
    uint64_t v58 = (uint64_t)v233;
    uint64_t v56 = v257;
    if ((v70 & 1) == 0)
    {
      uint64_t v71 = v250;
      uint64_t v72 = (*(uint64_t (**)(void))(*v250 + 328))();
      uint64_t v73 = *(void *)(v72 + 16);
      if (v73)
      {
        uint64_t v74 = v56;
        uint64_t v75 = v72 + ((*(unsigned __int8 *)(v248 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v248 + 80));
        uint64_t v76 = *(void *)(v248 + 72);
        uint64_t v66 = (uint64_t)type metadata accessor for HostedRoutingSourceSession;
        while (1)
        {
          sub_1001A80F8(v75, v58, type metadata accessor for HostedRoutingSourceSession);
          uint64_t v77 = *(void **)(v58 + 8);
          BOOL v78 = *(void *)v58 == v64 && v77 == v67;
          if (v78 || (_stringCompareWithSmolCheck(_:_:expecting:)(*(void *)v58, v77, v64, v67, 0LL) & 1) != 0) {
            break;
          }
          sub_1001A813C(v58, type metadata accessor for HostedRoutingSourceSession);
          v75 += v76;
          if (!--v73)
          {
            uint64_t v79 = 1LL;
            uint64_t v56 = v74;
            goto LABEL_36;
          }
        }

        uint64_t v59 = v238;
        sub_1001A81D4(v58, (uint64_t)v238, type metadata accessor for HostedRoutingSourceSession);
        uint64_t v79 = 0LL;
        uint64_t v56 = v74;
      }

      else
      {
        uint64_t v79 = 1LL;
LABEL_36:
        uint64_t v59 = v238;
      }

      uint64_t v124 = v248;
      uint64_t v60 = v242;
      (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v248 + 56))(v59, v79, 1LL, v242);
      swift_bridgeObjectRelease();
      int v125 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v124 + 48))(v59, 1LL, v60);
      uint64_t v126 = v237;
      if (v125 == 1)
      {
        sub_1001603DC((uint64_t)v59, &qword_1003F9518);
        uint64_t v127 = type metadata accessor for InternalRoutingError(0LL);
        uint64_t v128 = sub_100156FEC( &qword_1003F8908,  (uint64_t (*)(uint64_t))&type metadata accessor for InternalRoutingError,  (uint64_t)&protocol conformance descriptor for InternalRoutingError);
        uint64_t v129 = swift_allocError(v127, v128, 0LL, 0LL);
        (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v127 - 8) + 104LL))( v130,  enum case for InternalRoutingError.sessionNotFound(_:),  v127);
        uint64_t v131 = v129;
        uint64_t v132 = v64;
        uint64_t v133 = v67;
LABEL_47:
        uint64_t v117 = MRDFastSyncGroupSessionState.rawValue.getter(v131, v132, v133, 2LL);
        uint64_t v119 = v163;
        uint64_t v121 = v164;
        unsigned __int8 v123 = v165;
        sub_10028F874(v117, v163, v164, v165);
        swift_release(v255);
        goto LABEL_48;
      }

      sub_1001A81D4((uint64_t)v59, v237, type metadata accessor for HostedRoutingSourceSession);
      uint64_t v58 = *(void *)(v126 + 24);
      if (v58)
      {
        uint64_t v134 = *(void *)(v126 + 16);
        uint64_t v135 = (uint64_t *)((char *)v71 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_endpoints);
        swift_beginAccess(v135, v265, 0LL, 0LL);
        uint64_t v136 = *v135;
        if (*(void *)(v136 + 16))
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          unint64_t v137 = sub_10015CAD4(v134, v58);
          if ((v138 & 1) != 0)
          {
            uint64_t v139 = *(void *)(*(void *)(v136 + 56) + 8 * v137);
            swift_retain(v139);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(_BYTE *)(v139 + 16) == 2)
            {
              id v140 = *(id *)(v139 + 64);
              RoutingControl.identifier.getter(v140);
              __int128 aBlock = 0LL;
              unint64_t v260 = 0xE000000000000000LL;
              _StringGuts.grow(_:)(23LL);
              swift_bridgeObjectRelease();
              uint64_t v141 = v56;
              __int128 aBlock = (void **)0xD000000000000014LL;
              unint64_t v260 = 0x800000010033AC90LL;
              v142._countAndFlagsBits = v64;
              v142._object = v67;
              String.append(_:)(v142);
              swift_bridgeObjectRelease();
              v143._countAndFlagsBits = 62LL;
              v143._object = (void *)0xE100000000000000LL;
              String.append(_:)(v143);
              id v144 = objc_allocWithZone(&OBJC_CLASS___MRRequestDetails);
              NSString v145 = String._bridgeToObjectiveC()();
              NSString v146 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease();
              NSString v147 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease();
              id v148 = [v144 initWithName:v145 requestID:v146 reason:v147];

              unint64_t v149 = (void *)swift_allocObject(&unk_1003AC7F0, 56LL, 7LL);
              id v150 = v249;
              v149[2] = v249;
              v149[3] = sub_10028F874;
              v149[4] = v141;
              v149[5] = sub_100292014;
              uint64_t v151 = v255;
              v149[6] = v255;
              id v263 = sub_1002920C0;
              NSString v264 = v149;
              __int128 aBlock = _NSConcreteStackBlock;
              unint64_t v260 = 1107296256LL;
              id v261 = sub_100157E54;
              id v262 = &unk_1003AC808;
              os_log_type_t v152 = _Block_copy(&aBlock);
              int v153 = v264;
              id v154 = v150;
              swift_retain(v141);
              id v155 = v154;
              swift_retain(v151);
              swift_release(v153);
              LODWORD(v156) = v38;
              [v140 setVolume:v148 details:v155 queue:v152 completion:v156];
              _Block_release(v152);
              swift_release(v151);
              swift_release(v139);

              return sub_1001A813C(v126, type metadata accessor for HostedRoutingSourceSession);
            }

            swift_release(v139);
          }

          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
        }

        uint64_t v192 = type metadata accessor for InternalRoutingError(0LL);
        uint64_t v193 = sub_100156FEC( &qword_1003F8908,  (uint64_t (*)(uint64_t))&type metadata accessor for InternalRoutingError,  (uint64_t)&protocol conformance descriptor for InternalRoutingError);
        uint64_t v194 = swift_allocError(v192, v193, 0LL, 0LL);
        (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v192 - 8) + 104LL))( v195,  enum case for InternalRoutingError.sessionNotFound(_:),  v192);
        uint64_t v196 = MRDFastSyncGroupSessionState.rawValue.getter(v194, v64, v67, 2LL);
        uint64_t v198 = v197;
        uint64_t v200 = v199;
        unsigned __int8 v202 = v201;
        sub_10028F874(v196, v197, v199, v201);
        swift_errorRelease(v196);
        sub_100156BA8(v198, v200, v202);

        swift_release(v255);
        return sub_1001A813C(v126, type metadata accessor for HostedRoutingSourceSession);
      }

      goto LABEL_65;
    }

    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
LABEL_65:
    __break(1u);
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }

  if (v65 != enum case for RoutingControl.Target.item(_:))
  {
LABEL_67:
    v232(v234, v236, v56);
    __int128 aBlock = 0LL;
    unint64_t v260 = 0xE000000000000000LL;
    _StringGuts.grow(_:)(57LL);
    v214._countAndFlagsBits = 91LL;
    v214._object = (void *)0xE100000000000000LL;
    String.append(_:)(v214);
    v215._countAndFlagsBits = _typeName(_:qualified:)(v60, 0LL);
    String.append(_:)(v215);
    swift_bridgeObjectRelease();
    v216._countAndFlagsBits = 0xD000000000000016LL;
    v216._object = (void *)0x800000010033AC30LL;
    String.append(_:)(v216);
    v217._countAndFlagsBits = v58;
    v217._object = v59;
    String.append(_:)(v217);
    v218._countAndFlagsBits = 0xD00000000000001CLL;
    v218._object = (void *)0x800000010033AC70LL;
    String.append(_:)(v218);
    uint64_t v219 = v235;
    RoutingControl.target.getter(v220);
    uint64_t v221 = sub_100156FEC( &qword_1003F8D10,  (uint64_t (*)(uint64_t))&type metadata accessor for RoutingControl.Target,  (uint64_t)&protocol conformance descriptor for RoutingControl.Target);
    v222._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v64, v221);
    String.append(_:)(v222);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v66 + 8))(v219, v64);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  aBlock,  v260,  "mediaremoted/HostedRoutingSessionDataSource.swift",  49LL,  2LL,  1159LL,  0);
LABEL_69:
    __break(1u);
    return result;
  }

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t *, uint64_t))(v63 + 96))(v62, v64);
  uint64_t v60 = *v62;
  uint64_t v96 = v62[1];
  uint64_t v97 = sub_10024A2D0(*v62, v96);
  uint64_t v59 = v98;
  uint64_t v66 = sub_10024A3A0(v60, v96);
  uint64_t v58 = v99;
  unint64_t v100 = sub_10024B258();
  uint64_t v101 = (void *)*((void *)v100 + 1);
  uint64_t v64 = v241;
  uint64_t v102 = v239;
  uint64_t v56 = v257;
  if (v97 == *(void *)v100 && v59 == v101) {
    goto LABEL_64;
  }
  char v103 = _stringCompareWithSmolCheck(_:_:expecting:)(v97, v59, *(void *)v100, v101, 0LL);
  uint64_t v104 = v250;
  if ((v103 & 1) != 0) {
    goto LABEL_62;
  }
  uint64_t v253 = v66;
  uint64_t v258 = v58;
  uint64_t v256 = v60;
  uint64_t v105 = (*(uint64_t (**)(void))(*v250 + 328))();
  uint64_t v60 = v105;
  uint64_t v106 = *(void *)(v105 + 16);
  if (v106)
  {
    uint64_t v254 = (char *)v96;
    uint64_t v107 = v56;
    uint64_t v108 = v105 + ((*(unsigned __int8 *)(v248 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v248 + 80));
    uint64_t v109 = *(void *)(v248 + 72);
    while (1)
    {
      sub_1001A80F8(v108, (uint64_t)v102, type metadata accessor for HostedRoutingSourceSession);
      uint64_t v110 = (void *)v102[1];
      BOOL v111 = *v102 == v97 && v110 == v59;
      if (v111 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v102, v110, v97, v59, 0LL) & 1) != 0) {
        break;
      }
      sub_1001A813C((uint64_t)v102, type metadata accessor for HostedRoutingSourceSession);
      v108 += v109;
      if (!--v106)
      {
        uint64_t v112 = 1LL;
        uint64_t v56 = v107;
        uint64_t v64 = v241;
        goto LABEL_34;
      }
    }

    uint64_t v64 = v241;
    sub_1001A81D4((uint64_t)v102, v241, type metadata accessor for HostedRoutingSourceSession);
    uint64_t v112 = 0LL;
    uint64_t v56 = v107;
LABEL_34:
    uint64_t v96 = (uint64_t)v254;
  }

  else
  {
    uint64_t v112 = 1LL;
  }

  uint64_t v58 = v248;
  uint64_t v157 = v242;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v248 + 56))(v64, v112, 1LL, v242);
  swift_bridgeObjectRelease();
  int v158 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v58 + 48))(v64, 1LL, v157);
  uint64_t v66 = v240;
  if (v158 == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1001603DC(v64, &qword_1003F9518);
    uint64_t v159 = type metadata accessor for InternalRoutingError(0LL);
    uint64_t v160 = sub_100156FEC( &qword_1003F8908,  (uint64_t (*)(uint64_t))&type metadata accessor for InternalRoutingError,  (uint64_t)&protocol conformance descriptor for InternalRoutingError);
    uint64_t v161 = swift_allocError(v159, v160, 0LL, 0LL);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v159 - 8) + 104LL))( v162,  enum case for InternalRoutingError.sessionNotFound(_:),  v159);
    uint64_t v131 = v161;
    uint64_t v132 = v97;
    uint64_t v133 = v59;
    goto LABEL_47;
  }

  swift_bridgeObjectRelease();
  sub_1001A81D4(v64, v66, type metadata accessor for HostedRoutingSourceSession);
  uint64_t v59 = *(void **)(v66 + 24);
  if (!v59) {
    goto LABEL_66;
  }
  uint64_t v166 = *(void *)(v66 + 16);
  os_log_type_t v167 = (uint64_t *)((char *)v104 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_endpoints);
  swift_beginAccess(v167, v265, 0LL, 0LL);
  uint64_t v168 = *v167;
  if (*(void *)(v168 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v169 = sub_10015CAD4(v166, (uint64_t)v59);
    if ((v170 & 1) != 0)
    {
      uint64_t v171 = *(void *)(*(void *)(v168 + 56) + 8 * v169);
      swift_retain(v171);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_BYTE *)(v171 + 16) == 2)
      {
        id v172 = *(id *)(v171 + 64);
        NSString v173 = String._bridgeToObjectiveC()();
        uint64_t v174 = swift_bridgeObjectRelease();
        RoutingControl.identifier.getter(v174);
        unint64_t v175 = (void *)v96;
        uint64_t v176 = v56;
        __int128 aBlock = 0LL;
        unint64_t v260 = 0xE000000000000000LL;
        _StringGuts.grow(_:)(23LL);
        swift_bridgeObjectRelease();
        __int128 aBlock = (void **)0xD000000000000014LL;
        unint64_t v260 = 0x800000010033AC90LL;
        v177._countAndFlagsBits = v256;
        v177._object = v175;
        String.append(_:)(v177);
        swift_bridgeObjectRelease();
        v178._countAndFlagsBits = 62LL;
        v178._object = (void *)0xE100000000000000LL;
        String.append(_:)(v178);
        id v179 = objc_allocWithZone(&OBJC_CLASS___MRRequestDetails);
        NSString v180 = String._bridgeToObjectiveC()();
        NSString v181 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        NSString v182 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v183 = [v179 initWithName:v180 requestID:v181 reason:v182];

        id v184 = (void *)swift_allocObject(&unk_1003AC7A0, 56LL, 7LL);
        id v185 = v249;
        v184[2] = v249;
        v184[3] = sub_10028F874;
        v184[4] = v176;
        v184[5] = sub_100292014;
        uint64_t v186 = v255;
        v184[6] = v255;
        id v263 = sub_1002920C0;
        NSString v264 = v184;
        __int128 aBlock = _NSConcreteStackBlock;
        unint64_t v260 = 1107296256LL;
        id v261 = sub_100157E54;
        id v262 = &unk_1003AC7B8;
        uint64_t v187 = _Block_copy(&aBlock);
        uint64_t v188 = v264;
        id v189 = v185;
        swift_retain(v176);
        id v190 = v189;
        swift_retain(v186);
        swift_release(v188);
        LODWORD(v191) = v38;
        [v172 setOutputDeviceVolume:v173 outputDevice:v183 details:v190 queue:v187 completion:v191];
        _Block_release(v187);
        swift_release(v186);
        swift_release(v171);

        return sub_1001A813C(v240, type metadata accessor for HostedRoutingSourceSession);
      }

      swift_release(v171);
    }

    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }

  swift_bridgeObjectRelease();
  uint64_t v203 = type metadata accessor for InternalRoutingError(0LL);
  uint64_t v204 = sub_100156FEC( &qword_1003F8908,  (uint64_t (*)(uint64_t))&type metadata accessor for InternalRoutingError,  (uint64_t)&protocol conformance descriptor for InternalRoutingError);
  uint64_t v205 = swift_allocError(v203, v204, 0LL, 0LL);
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v203 - 8) + 104LL))( v206,  enum case for InternalRoutingError.sessionNotFound(_:),  v203);
  uint64_t v207 = MRDFastSyncGroupSessionState.rawValue.getter(v205, v256, v96, 2LL);
  uint64_t v209 = v208;
  uint64_t v211 = v210;
  unsigned __int8 v213 = v212;
  sub_10028F874(v207, v208, v210, v212);
  swift_errorRelease(v207);
  sub_100156BA8(v209, v211, v213);

  swift_release(v255);
  return sub_1001A813C(v66, type metadata accessor for HostedRoutingSourceSession);
}

uint64_t sub_10028391C( uint64_t a1, uint64_t a2, void (*a3)(void, void, void, void), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, float a9)
{
  uint64_t v26 = a8;
  uint64_t v27 = a2;
  uint64_t v29 = a1;
  uint64_t v30 = a4;
  uint64_t v28 = a3;
  uint64_t v13 = type metadata accessor for RoutingControl(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a5, v13);
  uint64_t v17 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v18 = (v17 + 16) & ~v17;
  unint64_t v19 = (v15 + v18 + 3) & 0xFFFFFFFFFFFFFFFCLL;
  unint64_t v20 = (v19 + 11) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v21 = (v20 + 23) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v22 = swift_allocObject(&unk_1003AC840, v21 + 8, v17 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v22 + v18, v16, v13);
  *(float *)(v22 + v19) = a9;
  uint64_t v23 = (void *)(v22 + v20);
  void *v23 = a6;
  v23[1] = a7;
  *(void *)(v22 + v21) = v26;
  swift_bridgeObjectRetain();
  sub_100273F0C(v27, v28, v30, (uint64_t (*)(void))sub_1002921A4, v22, 1.0);
  return swift_release(v22);
}

uint64_t sub_100283A60(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, float a6)
{
  uint64_t v60 = a5;
  v61._countAndFlagsBits = a3;
  v61._object = a4;
  uint64_t v63 = type metadata accessor for RoutingControl(0LL);
  uint64_t v9 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  uint64_t v62 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for HostedRoutingItem(0LL);
  uint64_t v64 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for HostedRoutingSourceSession(0LL);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v65 = (uint64_t)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v59 - v17;
  uint64_t v19 = type metadata accessor for RoutingControl.Target(0LL);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (uint64_t *)((char *)&v59 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  RoutingControl.target.getter(v21);
  int v24 = (*(uint64_t (**)(uint64_t *, uint64_t))(v20 + 88))(v23, v19);
  if (v24 != enum case for RoutingControl.Target.session(_:))
  {
    if (v24 != enum case for RoutingControl.Target.item(_:))
    {
      uint64_t v52 = v63;
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v62, a2, v63);
      uint64_t v66 = 0LL;
      unint64_t v67 = 0xE000000000000000LL;
      _StringGuts.grow(_:)(61LL);
      v53._countAndFlagsBits = 91LL;
      v53._object = (void *)0xE100000000000000LL;
      String.append(_:)(v53);
      v54._countAndFlagsBits = _typeName(_:qualified:)(v60, 0LL);
      String.append(_:)(v54);
      swift_bridgeObjectRelease();
      v55._object = (void *)0x800000010033AC30LL;
      v55._countAndFlagsBits = 0xD000000000000016LL;
      String.append(_:)(v55);
      String.append(_:)(v61);
      v56._countAndFlagsBits = 0xD000000000000020LL;
      v56._object = (void *)0x80000001003406C0LL;
      String.append(_:)(v56);
      uint64_t v57 = sub_100156FEC( &qword_1003F8900,  (uint64_t (*)(uint64_t))&type metadata accessor for RoutingControl,  (uint64_t)&protocol conformance descriptor for RoutingControl);
      v58._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v52, v57);
      String.append(_:)(v58);
      swift_bridgeObjectRelease();
      uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  v66,  v67,  "mediaremoted/HostedRoutingSessionDataSource.swift",  49LL,  2LL,  1101LL,  0);
      __break(1u);
      return result;
    }

    (*(void (**)(uint64_t *, uint64_t))(v20 + 96))(v23, v19);
    uint64_t v30 = *v23;
    uint64_t v29 = v23[1];
    uint64_t v31 = sub_10024A2D0(v30, v29);
    uint64_t v33 = v32;
    uint64_t v34 = a1[1];
    if (*a1 == v31 && v34 == v33)
    {
      swift_bridgeObjectRelease();
      uint64_t v37 = v65;
      sub_1001A80F8((uint64_t)a1, v65, type metadata accessor for HostedRoutingSourceSession);
    }

    else
    {
      char v36 = _stringCompareWithSmolCheck(_:_:expecting:)(*a1, v34, v31, v33, 0LL);
      swift_bridgeObjectRelease();
      uint64_t v37 = v65;
      sub_1001A80F8((uint64_t)a1, v65, type metadata accessor for HostedRoutingSourceSession);
      uint64_t v28 = 0LL;
      if ((v36 & 1) == 0) {
        goto LABEL_34;
      }
    }

    uint64_t v41 = *(void *)(v37 + 32);
    uint64_t v42 = *(void *)(v41 + 16);
    if (!v42)
    {
      uint64_t v28 = 0LL;
      goto LABEL_34;
    }

    uint64_t v43 = v41 + ((*(unsigned __int8 *)(v64 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80));
    uint64_t v44 = *(void *)(v64 + 72);
    uint64_t v64 = v41;
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v45 = sub_10024A474();
      if (v45 == v30 && v46 == v29) {
        break;
      }
      char v47 = _stringCompareWithSmolCheck(_:_:expecting:)(v45, v46, v30, v29, 0LL);
      swift_bridgeObjectRelease();
      sub_1001A80F8(v43, (uint64_t)v13, type metadata accessor for HostedRoutingItem);
      if ((v47 & 1) != 0) {
        goto LABEL_27;
      }
      sub_1001A813C((uint64_t)v13, type metadata accessor for HostedRoutingItem);
LABEL_22:
      v43 += v44;
      if (!--v42)
      {
        uint64_t v28 = 0LL;
LABEL_33:
        swift_bridgeObjectRelease();
        uint64_t v37 = v65;
LABEL_34:
        sub_1001A813C(v37, type metadata accessor for HostedRoutingSourceSession);
        swift_bridgeObjectRelease();
        return v28;
      }
    }

    swift_bridgeObjectRelease();
    sub_1001A80F8(v43, (uint64_t)v13, type metadata accessor for HostedRoutingItem);
LABEL_27:
    unint64_t v48 = &v13[*(int *)(v11 + 48)];
    float v49 = *(float *)v48;
    char v50 = v48[4];
    sub_1001A813C((uint64_t)v13, type metadata accessor for HostedRoutingItem);
    if ((v50 & 1) == 0 && v49 == a6)
    {
      uint64_t v28 = 1LL;
      goto LABEL_33;
    }

    goto LABEL_22;
  }

  (*(void (**)(uint64_t *, uint64_t))(v20 + 96))(v23, v19);
  uint64_t v25 = a1[1];
  if (*a1 == *v23 && v25 == v23[1])
  {
    swift_bridgeObjectRelease();
    sub_1001A80F8((uint64_t)a1, (uint64_t)v18, type metadata accessor for HostedRoutingSourceSession);
  }

  else
  {
    char v27 = _stringCompareWithSmolCheck(_:_:expecting:)(*a1, v25, *v23, v23[1], 0LL);
    swift_bridgeObjectRelease();
    sub_1001A80F8((uint64_t)a1, (uint64_t)v18, type metadata accessor for HostedRoutingSourceSession);
    if ((v27 & 1) == 0)
    {
      sub_1001A813C((uint64_t)v18, type metadata accessor for HostedRoutingSourceSession);
      return 0LL;
    }
  }

  int v38 = &v18[*(int *)(v14 + 48)];
  float v39 = *(float *)v38;
  char v40 = v38[4];
  sub_1001A813C((uint64_t)v18, type metadata accessor for HostedRoutingSourceSession);
  return (v40 & 1) == 0 && v39 == a6;
}

uint64_t sub_100283F94(uint64_t a1, void *a2, void (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v9 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (uint64_t *)((char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  *uint64_t v12 = a2;
  (*(void (**)(void *, void, uint64_t))(v10 + 104))(v12, enum case for DispatchPredicate.onQueue(_:), v9);
  id v13 = a2;
  LOBYTE(a2) = _dispatchPreconditionTest(_:)(v12);
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v10 + 8))(v12, v9);
  if ((a2 & 1) != 0)
  {
    if (a1)
    {
      swift_errorRetain(a1);
      swift_errorRetain(a1);
      uint64_t v15 = MRDFastSyncGroupSessionState.rawValue.getter(a1, 0LL, 0LL, 4LL);
      uint64_t v17 = v16;
      uint64_t v19 = v18;
      unsigned __int8 v21 = v20;
      a3();
      swift_errorRelease(v15);
      sub_100156BA8(v17, v19, v21);
      return swift_errorRelease(a1);
    }

    else
    {
      return a5(result);
    }
  }

  else
  {
    __break(1u);
  }

  return result;
}

uint64_t sub_1002840D0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v29 = a3;
  uint64_t v33 = a2;
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v32 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v30 = *(void *)(v11 - 8);
  uint64_t v31 = v11;
  __chkstk_darwin(v11);
  id v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for RoutingControl(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a5, v14);
  uint64_t v18 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v19 = (v18 + 40) & ~v18;
  unsigned __int8 v20 = (char *)swift_allocObject(&unk_1003AC728, v19 + v16, v18 | 7);
  uint64_t v21 = v29;
  *((void *)v20 + 2) = a1;
  *((void *)v20 + 3) = v21;
  *((void *)v20 + 4) = a4;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(&v20[v19], v17, v14);
  uint64_t aBlock[4] = sub_100291E00;
  char v36 = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_100157EA8;
  aBlock[3] = &unk_1003AC740;
  uint64_t v22 = _Block_copy(aBlock);
  id v23 = a1;
  uint64_t v24 = swift_retain(a4);
  static DispatchQoS.unspecified.getter(v24);
  uint64_t v34 = _swiftEmptyArrayStorage;
  uint64_t v25 = sub_100156FEC( (unint64_t *)&qword_1003FADB0,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v26 = sub_100156B68((uint64_t *)&unk_1003F9A70);
  uint64_t v27 = sub_1001604E8( (unint64_t *)&qword_1003FADC0,  (uint64_t *)&unk_1003F9A70,  (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v34, v26, v27, v8, v25);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v13, v10, v22);
  _Block_release(v22);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v13, v31);
  return swift_release(v36);
}

uint64_t sub_100284348(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for RoutingSessionConfiguration.ItemType(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = v4 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_delegate;
  uint64_t result = swift_unknownObjectWeakLoadStrong(v4 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_delegate);
  if (result)
  {
    uint64_t v15 = result;
    uint64_t v16 = *(void *)(v12 + 8);
    uint64_t ObjectType = swift_getObjectType(result, v14);
    uint64_t v19 = swift_getObjectType(a1, v18);
    (*(void (**)(uint64_t, uint64_t))(a2 + 24))(v19, a2);
    (*(void (**)(uint64_t, uint64_t, char *, uint64_t, uint64_t))(v16 + 16))(v4, a3, v11, ObjectType, v16);
    swift_unknownObjectRelease(v15);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }

  return result;
}

uint64_t sub_100284444(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for RoutingInteraction(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  uint64_t v11 = swift_allocObject(&unk_1003AB850, 32LL, 7LL);
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  uint64_t v12 = (void *)(v3 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_pendingInteractions);
  swift_beginAccess( v3 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_pendingInteractions,  v16,  33LL,  0LL);
  swift_retain(a3);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v12);
  uint64_t v15 = *v12;
  *uint64_t v12 = 0x8000000000000000LL;
  sub_100181AF0((uint64_t)sub_1001835A8, v11, (uint64_t)v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v12 = v15;
  swift_bridgeObjectRelease();
  (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
  return swift_endAccess(v16);
}

uint64_t sub_100284574(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100284444(a1, a2, a3);
}

void sub_100284594()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for HostedRoutingSourceSession(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v82 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for RoutingMode(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v91 = 0xD00000000000002BLL;
  unint64_t v92 = 0x8000000100340010LL;
  v90._uint64_t countAndFlagsBits = 0LL;
  v90._object = (void *)0xE000000000000000LL;
  _StringGuts.grow(_:)(17LL);
  uint64_t v10 = swift_bridgeObjectRelease();
  strcpy((char *)&v90, "Routing Mode: ");
  HIBYTE(v90._object) = -18;
  (*(void (**)(uint64_t))(*(void *)v0 + 304LL))(v10);
  uint64_t v11 = sub_100156FEC( &qword_1003F88F0,  (uint64_t (*)(uint64_t))&type metadata accessor for RoutingMode,  (uint64_t)&protocol conformance descriptor for RoutingMode);
  v12._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v6, v11);
  String.append(_:)(v12);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v13._uint64_t countAndFlagsBits = 10LL;
  v13._object = (void *)0xE100000000000000LL;
  String.append(_:)(v13);
  String.append(_:)(v90);
  swift_bridgeObjectRelease();
  strcpy((char *)&v90, "Timeline:\n");
  BYTE3(v90._object) = 0;
  HIDWORD(v90._object) = -369098752;
  v14._uint64_t countAndFlagsBits = sub_1001F99E4();
  String.append(_:)(v14);
  swift_bridgeObjectRelease();
  String.append(_:)(v90);
  uint64_t v15 = swift_bridgeObjectRelease();
  strcpy((char *)&v90, "\nSessions:\n");
  HIDWORD(v90._object) = -352321536;
  uint64_t v16 = (*(uint64_t (**)(uint64_t))(*(void *)v0 + 328LL))(v15);
  int64_t v17 = *(void *)(v16 + 16);
  uint64_t v84 = v0;
  if (v17)
  {
    v87._uint64_t countAndFlagsBits = (uint64_t)_swiftEmptyArrayStorage;
    sub_10015DCE8(0, v17, 0);
    uint64_t v18 = *(unsigned __int8 *)(v3 + 80);
    uint64_t v83 = v16;
    uint64_t v19 = v16 + ((v18 + 32) & ~v18);
    uint64_t v85 = *(void *)(v3 + 72);
    do
    {
      sub_1001A80F8(v19, (uint64_t)v5, type metadata accessor for HostedRoutingSourceSession);
      v89._uint64_t countAndFlagsBits = 538976288LL;
      v89._object = (void *)0xE400000000000000LL;
      v20._uint64_t countAndFlagsBits = sub_10024E754();
      String.append(_:)(v20);
      swift_bridgeObjectRelease();
      uint64_t countAndFlagsBits = v89._countAndFlagsBits;
      object = v89._object;
      sub_1001A813C((uint64_t)v5, type metadata accessor for HostedRoutingSourceSession);
      id v23 = (void *)v87._countAndFlagsBits;
      if ((swift_isUniquelyReferenced_nonNull_native(v87._countAndFlagsBits) & 1) == 0)
      {
        sub_10015DCE8(0, v23[2] + 1LL, 1);
        id v23 = (void *)v87._countAndFlagsBits;
      }

      unint64_t v25 = v23[2];
      unint64_t v24 = v23[3];
      if (v25 >= v24 >> 1)
      {
        sub_10015DCE8(v24 > 1, v25 + 1, 1);
        id v23 = (void *)v87._countAndFlagsBits;
      }

      v23[2] = v25 + 1;
      uint64_t v26 = &v23[2 * v25];
      v26[4] = countAndFlagsBits;
      v26[5] = object;
      v19 += v85;
      --v17;
    }

    while (v17);
    swift_bridgeObjectRelease();
    uint64_t v1 = v84;
  }

  else
  {
    swift_bridgeObjectRelease();
    id v23 = _swiftEmptyArrayStorage;
  }

  v89._uint64_t countAndFlagsBits = (uint64_t)v23;
  uint64_t v27 = sub_100156B68(&qword_1003FA010);
  uint64_t v28 = sub_1001604E8( (unint64_t *)&qword_1003F8950,  &qword_1003FA010,  (uint64_t)&protocol conformance descriptor for [A]);
  uint64_t v29 = BidirectionalCollection<>.joined(separator:)(10LL, 0xE100000000000000LL, v27, v28);
  uint64_t v31 = v30;
  swift_bridgeObjectRelease();
  v32._uint64_t countAndFlagsBits = v29;
  v32._object = v31;
  String.append(_:)(v32);
  swift_bridgeObjectRelease();
  v33._uint64_t countAndFlagsBits = 10LL;
  v33._object = (void *)0xE100000000000000LL;
  String.append(_:)(v33);
  String.append(_:)(v90);
  swift_bridgeObjectRelease();
  v90._uint64_t countAndFlagsBits = 0LL;
  v90._object = (void *)0xE000000000000000LL;
  _StringGuts.grow(_:)(22LL);
  swift_bridgeObjectRelease();
  v89._uint64_t countAndFlagsBits = 0xD000000000000013LL;
  v89._object = (void *)0x8000000100340040LL;
  swift_beginAccess(v1 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_endpoints, &v90, 0LL, 0LL);
  uint64_t v34 = swift_bridgeObjectRetain();
  uint64_t v35 = sub_100260E08(v34);
  v82[1] = 0LL;
  swift_bridgeObjectRelease();
  v87._uint64_t countAndFlagsBits = (uint64_t)v35;
  uint64_t v85 = v27;
  uint64_t v83 = v28;
  uint64_t v36 = BidirectionalCollection<>.joined(separator:)(10LL, 0xE100000000000000LL, v27, v28);
  int v38 = v37;
  swift_bridgeObjectRelease();
  v39._uint64_t countAndFlagsBits = v36;
  v39._object = v38;
  String.append(_:)(v39);
  swift_bridgeObjectRelease();
  v40._uint64_t countAndFlagsBits = 10LL;
  v40._object = (void *)0xE100000000000000LL;
  String.append(_:)(v40);
  String.append(_:)(v89);
  swift_bridgeObjectRelease();
  v89._uint64_t countAndFlagsBits = 0LL;
  v89._object = (void *)0xE000000000000000LL;
  _StringGuts.grow(_:)(25LL);
  swift_bridgeObjectRelease();
  v89._uint64_t countAndFlagsBits = 0xD000000000000016LL;
  v89._object = (void *)0x8000000100340060LL;
  id v41 = sub_1002613F8();
  id v42 = [v41 availableEndpoints];

  if (!v42) {
    goto LABEL_29;
  }
  uint64_t v43 = sub_10016083C(0LL, &qword_1003FC960, &OBJC_CLASS___MRAVEndpoint_ptr);
  uint64_t v44 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v42, v43);

  if ((unint64_t)v44 >> 62)
  {
    if (v44 < 0) {
      uint64_t v60 = v44;
    }
    else {
      uint64_t v60 = v44 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
    uint64_t v45 = _CocoaArrayWrapper.endIndex.getter(v60);
    swift_bridgeObjectRelease();
    if (v45) {
      goto LABEL_13;
    }
LABEL_26:
    swift_bridgeObjectRelease();
    char v47 = _swiftEmptyArrayStorage;
LABEL_27:
    v87._uint64_t countAndFlagsBits = (uint64_t)v47;
    uint64_t v61 = v85;
    uint64_t v62 = v83;
    uint64_t v63 = BidirectionalCollection<>.joined(separator:)(10LL, 0xE100000000000000LL, v85, v83);
    uint64_t v65 = v64;
    swift_bridgeObjectRelease();
    v66._uint64_t countAndFlagsBits = v63;
    v66._object = v65;
    String.append(_:)(v66);
    swift_bridgeObjectRelease();
    v67._uint64_t countAndFlagsBits = 10LL;
    v67._object = (void *)0xE100000000000000LL;
    String.append(_:)(v67);
    String.append(_:)(v89);
    swift_bridgeObjectRelease();
    v89._uint64_t countAndFlagsBits = 0LL;
    v89._object = (void *)0xE000000000000000LL;
    _StringGuts.grow(_:)(26LL);
    swift_bridgeObjectRelease();
    v87._uint64_t countAndFlagsBits = 0xD000000000000017LL;
    v87._object = (void *)0x800000010033AA40LL;
    swift_beginAccess( v1 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_pendingInteractions,  &v89,  0LL,  0LL);
    uint64_t v68 = swift_bridgeObjectRetain();
    uint64_t v69 = sub_10017F1A8(v68);
    swift_bridgeObjectRelease();
    v88._uint64_t countAndFlagsBits = v69;
    uint64_t v70 = BidirectionalCollection<>.joined(separator:)(10LL, 0xE100000000000000LL, v61, v62);
    uint64_t v72 = v71;
    swift_bridgeObjectRelease();
    v73._uint64_t countAndFlagsBits = v70;
    v73._object = v72;
    String.append(_:)(v73);
    swift_bridgeObjectRelease();
    v74._uint64_t countAndFlagsBits = 10LL;
    v74._object = (void *)0xE100000000000000LL;
    String.append(_:)(v74);
    String.append(_:)(v87);
    swift_bridgeObjectRelease();
    v87._uint64_t countAndFlagsBits = 0LL;
    v87._object = (void *)0xE000000000000000LL;
    _StringGuts.grow(_:)(23LL);
    swift_bridgeObjectRelease();
    v88._uint64_t countAndFlagsBits = 0xD000000000000014LL;
    v88._object = (void *)0x8000000100340080LL;
    swift_beginAccess( v1 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_itemDataSources,  &v87,  0LL,  0LL);
    uint64_t v75 = swift_bridgeObjectRetain();
    uint64_t v76 = sub_100261048(v75);
    swift_bridgeObjectRelease();
    uint64_t v86 = v76;
    uint64_t v77 = BidirectionalCollection<>.joined(separator:)(10LL, 0xE100000000000000LL, v61, v62);
    uint64_t v79 = v78;
    swift_bridgeObjectRelease();
    v80._uint64_t countAndFlagsBits = v77;
    v80._object = v79;
    String.append(_:)(v80);
    swift_bridgeObjectRelease();
    v81._uint64_t countAndFlagsBits = 10LL;
    v81._object = (void *)0xE100000000000000LL;
    String.append(_:)(v81);
    String.append(_:)(v88);
    swift_bridgeObjectRelease();
    return;
  }

  uint64_t v45 = *(void *)((v44 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  if (!v45) {
    goto LABEL_26;
  }
LABEL_13:
  v88._uint64_t countAndFlagsBits = (uint64_t)_swiftEmptyArrayStorage;
  sub_10015DCE8(0, v45 & ~(v45 >> 63), 0);
  if ((v45 & 0x8000000000000000LL) == 0)
  {
    uint64_t v46 = 0LL;
    char v47 = (void *)v88._countAndFlagsBits;
    do
    {
      if ((v44 & 0xC000000000000001LL) != 0) {
        id v48 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v46, v44);
      }
      else {
        id v48 = *(id *)(v44 + 8 * v46 + 32);
      }
      float v49 = v48;
      v87._uint64_t countAndFlagsBits = 538976288LL;
      v87._object = (void *)0xE400000000000000LL;
      id v50 = [v48 description];
      uint64_t v51 = static String._unconditionallyBridgeFromObjectiveC(_:)(v50);
      Swift::String v53 = v52;

      v54._uint64_t countAndFlagsBits = v51;
      v54._object = v53;
      String.append(_:)(v54);

      swift_bridgeObjectRelease();
      uint64_t v55 = v87._countAndFlagsBits;
      Swift::String v56 = v87._object;
      v88._uint64_t countAndFlagsBits = (uint64_t)v47;
      unint64_t v58 = v47[2];
      unint64_t v57 = v47[3];
      if (v58 >= v57 >> 1)
      {
        sub_10015DCE8(v57 > 1, v58 + 1, 1);
        char v47 = (void *)v88._countAndFlagsBits;
      }

      ++v46;
      v47[2] = v58 + 1;
      uint64_t v59 = &v47[2 * v58];
      v59[4] = v55;
      v59[5] = v56;
    }

    while (v45 != v46);
    swift_bridgeObjectRelease();
    uint64_t v1 = v84;
    goto LABEL_27;
  }

  __break(1u);
LABEL_29:
  __break(1u);
}

void sub_100284EA4()
{
}

void sub_100284EC4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v189 = a5;
  uint64_t v188 = a4;
  uint64_t v191 = a2;
  uint64_t v192 = *v5;
  uint64_t v8 = type metadata accessor for RoutingInteraction(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = &v172[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v179 = type metadata accessor for HostedRoutingSourceSession(0LL);
  __chkstk_darwin(v179);
  Swift::String v13 = &v172[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  Swift::String v14 = (void *)type metadata accessor for Logger(0LL);
  uint64_t v15 = (void (*)(id, id))*(v14 - 1);
  uint64_t v16 = __chkstk_darwin(v14);
  Swift::String v178 = &v172[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v18 = __chkstk_darwin(v16);
  NSString v180 = &v172[-v19];
  uint64_t v20 = __chkstk_darwin(v18);
  Swift::String v177 = &v172[-v21];
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v176 = &v172[-v23];
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v26 = &v172[-v25];
  uint64_t v190 = RoutingInteraction.identifier.getter(v24);
  unint64_t v28 = v27;
  uint64_t v29 = sub_1001741A8();
  uint64_t v187 = v15;
  uint64_t v30 = (void (*)(void))*((void *)v15 + 2);
  unint64_t v31 = v28;
  uint64_t v182 = v29;
  id v194 = v14;
  id v183 = (void (*)(_BYTE *, uint64_t, id))v30;
  v30(v26);
  uint64_t v193 = (uint64_t *)a1;
  id v184 = v13;
  sub_1001A80F8(a1, (uint64_t)v13, type metadata accessor for HostedRoutingSourceSession);
  uint64_t v186 = v9;
  Swift::String v32 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16);
  Swift::String v33 = v11;
  uint64_t v34 = a3;
  uint64_t v35 = v191;
  v32(v11, v34, v8);
  swift_bridgeObjectRetain_n(v28, 2LL);
  uint64_t v36 = swift_retain_n(v35, 2LL);
  id v185 = v26;
  uint64_t v37 = (os_log_s *)Logger.logObject.getter(v36);
  os_log_type_t v38 = static os_log_type_t.default.getter(v37);
  int v39 = v38;
  if (os_log_type_enabled(v37, v38))
  {
    uint64_t v40 = swift_slowAlloc(52LL, -1LL);
    uint64_t v174 = swift_slowAlloc(160LL, -1LL);
    aBlock[0] = v174;
    *(_DWORD *)uint64_t v40 = 136316162;
    int v173 = v39;
    uint64_t v41 = _typeName(_:qualified:)(v192, 0LL);
    uint64_t v200 = sub_10015ADC4(v41, v42, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v200, v201, v40 + 4, v40 + 12);
    swift_bridgeObjectRelease();
    *(_WORD *)(v40 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v200 = sub_10015ADC4(v190, v31, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v200, v201, v40 + 14, v40 + 22);
    swift_bridgeObjectRelease_n(v31, 3LL);
    *(_WORD *)(v40 + 22) = 2080;
    unint64_t v175 = v31;
    uint64_t v43 = sub_100156FEC( &qword_1003F9520,  type metadata accessor for HostedRoutingSourceSession,  (uint64_t)&unk_1003501C8);
    uint64_t v44 = (uint64_t)v184;
    uint64_t v45 = dispatch thunk of CustomStringConvertible.description.getter(v179, v43);
    uint64_t v200 = sub_10015ADC4(v45, v46, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v200, v201, v40 + 24, v40 + 32);
    swift_bridgeObjectRelease();
    sub_1001A813C(v44, type metadata accessor for HostedRoutingSourceSession);
    *(_WORD *)(v40 + 32) = 2080;
    char v47 = v37;
    uint64_t v200 = v35;
    uint64_t v48 = type metadata accessor for RoutingInteraction.Action.HandoffContext(0LL);
    uint64_t v49 = sub_100156FEC( &qword_1003FCE40,  (uint64_t (*)(uint64_t))&type metadata accessor for RoutingInteraction.Action.HandoffContext,  (uint64_t)&protocol conformance descriptor for RoutingInteraction.Action.HandoffContext);
    uint64_t v50 = dispatch thunk of CustomStringConvertible.description.getter(v48, v49);
    uint64_t v200 = sub_10015ADC4(v50, v51, aBlock);
    unint64_t v31 = v175;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v200, v201, v40 + 34, v40 + 42);
    swift_release_n(v35, 2LL);
    swift_bridgeObjectRelease();
    *(_WORD *)(v40 + 42) = 2080;
    uint64_t v52 = sub_100156FEC( &qword_1003F88F8,  (uint64_t (*)(uint64_t))&type metadata accessor for RoutingInteraction,  (uint64_t)&protocol conformance descriptor for RoutingInteraction);
    uint64_t v53 = dispatch thunk of CustomStringConvertible.description.getter(v8, v52);
    uint64_t v200 = sub_10015ADC4(v53, v54, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v200, v201, v40 + 44, v40 + 52);
    swift_bridgeObjectRelease();
    (*(void (**)(_BYTE *, uint64_t))(v186 + 8))(v33, v8);
    _os_log_impl( (void *)&_mh_execute_header,  v37,  (os_log_type_t)v173,  "[%s] pullContentFromSession_new<%s> - session: %s, context: %s, for: %s",  (uint8_t *)v40,  0x34u);
    uint64_t v55 = v174;
    swift_arrayDestroy(v174, 5LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v55, -1LL, -1LL);
    swift_slowDealloc(v40, -1LL, -1LL);
  }

  else
  {
    swift_bridgeObjectRelease_n(v31, 2LL);
    sub_1001A813C((uint64_t)v184, type metadata accessor for HostedRoutingSourceSession);
    swift_release_n(v35, 2LL);
    (*(void (**)(_BYTE *, uint64_t))(v186 + 8))(v11, v8);
  }

  Swift::String v56 = (void (*)(id, id))*((void *)v187 + 1);
  v56(v185, v194);
  uint64_t v57 = v193[3];
  if (!v57)
  {
    Swift::String v81 = v178;
    v183(v178, v182, v194);
    uint64_t v82 = swift_bridgeObjectRetain();
    uint64_t v83 = (os_log_s *)Logger.logObject.getter(v82);
    os_log_type_t v84 = static os_log_type_t.error.getter();
    BOOL v85 = os_log_type_enabled(v83, v84);
    uint64_t v86 = v192;
    if (v85)
    {
      uint64_t v87 = swift_slowAlloc(22LL, -1LL);
      uint64_t v88 = swift_slowAlloc(64LL, -1LL);
      aBlock[0] = v88;
      *(_DWORD *)uint64_t v87 = 136315394;
      uint64_t v89 = _typeName(_:qualified:)(v86, 0LL);
      uint64_t v200 = sub_10015ADC4(v89, v90, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v200, v201, v87 + 4, v87 + 12);
      swift_bridgeObjectRelease();
      *(_WORD *)(v87 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v200 = sub_10015ADC4(v190, v31, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v200, v201, v87 + 14, v87 + 22);
      swift_bridgeObjectRelease_n(v31, 3LL);
      unint64_t v91 = "[%s] pullContentFromSession_new<%s> - failing because source session is not endpoint sourced";
LABEL_20:
      _os_log_impl((void *)&_mh_execute_header, v83, v84, v91, (uint8_t *)v87, 0x16u);
      swift_arrayDestroy(v88, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v88, -1LL, -1LL);
      swift_slowDealloc(v87, -1LL, -1LL);

LABEL_22:
      v56(v81, v194);
      uint64_t v95 = type metadata accessor for InternalRoutingError(0LL);
      uint64_t v96 = sub_100156FEC( &qword_1003F8908,  (uint64_t (*)(uint64_t))&type metadata accessor for InternalRoutingError,  (uint64_t)&protocol conformance descriptor for InternalRoutingError);
      uint64_t v97 = swift_allocError(v95, v96, 0LL, 0LL);
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v95 - 8) + 104LL))( v98,  enum case for InternalRoutingError.sessionNotFound(_:),  v95);
      uint64_t v99 = *v193;
      uint64_t v100 = v193[1];
      swift_bridgeObjectRetain();
      uint64_t v101 = MRDFastSyncGroupSessionState.rawValue.getter(v97, v99, v100, 2LL);
      uint64_t v103 = v102;
      uint64_t v105 = v104;
      unsigned __int8 v107 = v106;
      v188();
      swift_errorRelease(v101);
      sub_100156BA8(v103, v105, v107);
      return;
    }

uint64_t sub_100286200( void *a1, uint64_t a2, unint64_t a3, void *a4, void (*a5)(void), void *a6, void (*a7)(void, void), char *a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v220 = a8;
  uint64_t v219 = a7;
  char v234 = a5;
  id v235 = a6;
  uint64_t v244 = a2;
  uint64_t v240 = a1;
  uint64_t v13 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v198 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v215 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v214 = *(void *)(v215 - 8);
  __chkstk_darwin(v215);
  unsigned __int8 v213 = (char *)&v198 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v227 = type metadata accessor for DispatchTime(0LL);
  uint64_t v212 = *(void *)(v227 - 8);
  uint64_t v18 = __chkstk_darwin(v227);
  uint64_t v211 = (char *)&v198 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v18);
  Swift::String v226 = (char *)&v198 - v20;
  uint64_t v21 = sub_100156B68(&qword_1003F8210);
  __chkstk_darwin(v21);
  uint64_t v204 = (char *)&v198 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v206 = type metadata accessor for NSNotificationCenter.Publisher(0LL);
  uint64_t v205 = *(void *)(v206 - 8);
  __chkstk_darwin(v206);
  uint64_t v203 = (char *)&v198 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v209 = sub_100156B68((uint64_t *)&unk_1003FBED0);
  uint64_t v208 = *(void *)(v209 - 8);
  __chkstk_darwin(v209);
  uint64_t v207 = (char *)&v198 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v237 = type metadata accessor for ContinuousClock.Instant(0LL);
  uint64_t v231 = *(void *)(v237 - 8);
  uint64_t v25 = __chkstk_darwin(v237);
  Swift::String v225 = (char *)&v198 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v230 = (uint64_t)&v198 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  Swift::String v228 = (char *)&v198 - v30;
  uint64_t v223 = v31;
  __chkstk_darwin(v29);
  uint64_t v243 = (char *)&v198 - v32;
  uint64_t v236 = type metadata accessor for ContinuousClock(0LL);
  uint64_t v238 = *(void *)(v236 - 8);
  uint64_t v33 = __chkstk_darwin(v236);
  uint64_t v210 = (char *)&v198 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v229 = (uint64_t)&v198 - v36;
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v222 = (uint64_t)&v198 - v38;
  uint64_t v221 = v39;
  __chkstk_darwin(v37);
  uint64_t v242 = (char *)&v198 - v40;
  uint64_t v41 = type metadata accessor for Logger(0LL);
  uint64_t v42 = *(void *)(v41 - 8);
  uint64_t v43 = __chkstk_darwin(v41);
  uint64_t v45 = (char *)&v198 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v46 = __chkstk_darwin(v43);
  unint64_t v224 = (unint64_t)&v198 - v47;
  __chkstk_darwin(v46);
  uint64_t v49 = (char *)&v198 - v48;
  uint64_t v50 = sub_100174228();
  uint64_t v232 = v42;
  unint64_t v51 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 16);
  uint64_t v239 = v41;
  id v233 = v51;
  v51(v49, v50, v41);
  swift_bridgeObjectRetain_n(a3, 2LL);
  id v52 = a4;
  uint64_t v53 = (os_log_s *)Logger.logObject.getter(v52);
  os_log_type_t v54 = static os_log_type_t.default.getter(v53);
  int v55 = v54;
  BOOL v56 = os_log_type_enabled(v53, v54);
  uint64_t v241 = a11;
  uint64_t v218 = v13;
  uint64_t v217 = v14;
  Swift::String v216 = v16;
  if (v56)
  {
    uint64_t v57 = swift_slowAlloc(32LL, -1LL);
    uint64_t v201 = v45;
    uint64_t v58 = v57;
    uint64_t v200 = swift_slowAlloc(96LL, -1LL);
    aBlock[0] = (id)v200;
    *(_DWORD *)uint64_t v58 = 136315650;
    uint64_t v59 = _typeName(_:qualified:)(a11, 0LL);
    uint64_t v248 = sub_10015ADC4(v59, v60, (uint64_t *)aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v248, v249, v58 + 4, v58 + 12);
    swift_bridgeObjectRelease();
    *(_WORD *)(v58 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v248 = sub_10015ADC4(v244, a3, (uint64_t *)aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v248, v249, v58 + 14, v58 + 22);
    swift_bridgeObjectRelease_n(a3, 3LL);
    *(_WORD *)(v58 + 22) = 2080;
    id v61 = [v52 report];
    uint64_t v62 = static String._unconditionallyBridgeFromObjectiveC(_:)(v61);
    LODWORD(v199) = v55;
    unint64_t v63 = a3;
    uint64_t v64 = v62;
    unint64_t v66 = v65;

    uint64_t v67 = v64;
    a3 = v63;
    uint64_t v248 = sub_10015ADC4(v67, v66, (uint64_t *)aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v248, v249, v58 + 24, v58 + 32);

    swift_bridgeObjectRelease();
    _os_log_impl( (void *)&_mh_execute_header,  v53,  (os_log_type_t)v199,  "[%s] pullContentFromSession<%s> - report: %s",  (uint8_t *)v58,  0x20u);
    uint64_t v68 = v200;
    swift_arrayDestroy(v200, 3LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v68, -1LL, -1LL);
    uint64_t v69 = v58;
    uint64_t v45 = v201;
    swift_slowDealloc(v69, -1LL, -1LL);
  }

  else
  {

    swift_bridgeObjectRelease_n(a3, 2LL);
  }

  uint64_t v70 = *(void (**)(char *, uint64_t))(v232 + 8);
  uint64_t v71 = v239;
  v70(v49, v239);
  unint64_t v72 = v240;
  if (v240)
  {
    swift_errorRetain(v240);
    uint64_t v73 = sub_1001741A8();
    v233(v45, v73, v71);
    swift_bridgeObjectRetain();
    swift_errorRetain(v72);
    swift_bridgeObjectRetain();
    uint64_t v74 = swift_errorRetain(v72);
    id v75 = (os_log_s *)Logger.logObject.getter(v74);
    os_log_type_t v76 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v75, v76))
    {
      uint64_t v77 = swift_slowAlloc(32LL, -1LL);
      uint64_t v232 = (uint64_t)v70;
      uint64_t v78 = v77;
      uint64_t v79 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
      Swift::String v80 = (void *)swift_slowAlloc(64LL, -1LL);
      aBlock[0] = v80;
      *(_DWORD *)uint64_t v78 = 136315650;
      uint64_t v81 = _typeName(_:qualified:)(v241, 0LL);
      uint64_t v248 = sub_10015ADC4(v81, v82, (uint64_t *)aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v248, v249, v78 + 4, v78 + 12);
      swift_bridgeObjectRelease();
      *(_WORD *)(v78 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v248 = sub_10015ADC4(v244, a3, (uint64_t *)aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v248, v249, v78 + 14, v78 + 22);
      unint64_t v72 = v240;
      swift_bridgeObjectRelease_n(a3, 3LL);
      *(_WORD *)(v78 + 22) = 2112;
      swift_errorRetain(v72);
      uint64_t v83 = _swift_stdlib_bridgeErrorToNSError(v72);
      uint64_t v248 = v83;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v248, v249, v78 + 24, v78 + 32);
      uint64_t *v79 = v83;
      swift_errorRelease(v72);
      swift_errorRelease(v72);
      _os_log_impl( (void *)&_mh_execute_header,  v75,  v76,  "[%s] pullContentFromSession<%s> - failed with error: %@.",  (uint8_t *)v78,  0x20u);
      uint64_t v84 = sub_100156B68((uint64_t *)&unk_1003FB7E0);
      swift_arrayDestroy(v79, 1LL, v84);
      swift_slowDealloc(v79, -1LL, -1LL);
      swift_arrayDestroy(v80, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v80, -1LL, -1LL);
      swift_slowDealloc(v78, -1LL, -1LL);

      ((void (*)(char *, uint64_t))v232)(v45, v239);
    }

    else
    {
      swift_bridgeObjectRelease_n(a3, 2LL);
      swift_errorRelease(v72);
      swift_errorRelease(v72);

      v70(v45, v71);
    }

    swift_errorRetain(v72);
    uint64_t v105 = sub_10024B258();
    uint64_t v106 = *(void *)v105;
    uint64_t v107 = *((void *)v105 + 1);
    swift_bridgeObjectRetain();
    uint64_t v108 = MRDFastSyncGroupSessionState.rawValue.getter(v72, v106, v107, 2LL);
    uint64_t v110 = v109;
    uint64_t v112 = v111;
    unsigned __int8 v114 = v113;
    v234();
    swift_errorRelease(v108);
    sub_100156BA8(v110, v112, v114);
    return swift_errorRelease(v72);
  }

  else
  {
    uint64_t v232 = (uint64_t)v70;
    uint64_t v85 = a9;
    uint64_t v86 = (void *)swift_allocObject(&unk_1003AC2C8, 72LL, 7LL);
    id v87 = v235;
    v86[2] = v234;
    v86[3] = v87;
    uint64_t v88 = v219;
    uint64_t v89 = v244;
    v86[4] = v219;
    v86[5] = v89;
    unint64_t v90 = v220;
    v86[6] = a3;
    v86[7] = v90;
    uint64_t v91 = v241;
    uint64_t v240 = v86;
    v86[8] = v241;
    swift_bridgeObjectRetain();
    swift_retain(v87);
    id v92 = v88;
    id v235 = v90;
    uint64_t v93 = ContinuousClock.init()(v235);
    ContinuousClock.now.getter(v93);
    uint64_t v94 = sub_1001741A8();
    unint64_t v95 = v224;
    v233((char *)v224, v94, v71);
    swift_bridgeObjectRetain_n(a3, 2LL);
    uint64_t v97 = (os_log_s *)Logger.logObject.getter(v96);
    os_log_type_t v98 = static os_log_type_t.default.getter(v97);
    BOOL v99 = os_log_type_enabled(v97, v98);
    uint64_t v201 = (char *)a9;
    unint64_t v202 = a3;
    if (v99)
    {
      uint64_t v100 = swift_slowAlloc(22LL, -1LL);
      uint64_t v101 = (void *)swift_slowAlloc(64LL, -1LL);
      aBlock[0] = v101;
      *(_DWORD *)uint64_t v100 = 136315394;
      uint64_t v102 = _typeName(_:qualified:)(v91, 0LL);
      uint64_t v248 = sub_10015ADC4(v102, v103, (uint64_t *)aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v248, v249, v100 + 4, v100 + 12);
      swift_bridgeObjectRelease();
      *(_WORD *)(v100 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v248 = sub_10015ADC4(v89, a3, (uint64_t *)aBlock);
      uint64_t v85 = (uint64_t)v201;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v248, v249, v100 + 14, v100 + 22);
      swift_bridgeObjectRelease_n(a3, 3LL);
      _os_log_impl( (void *)&_mh_execute_header,  v97,  v98,  "[%s] pullContentFromSession<%s> - wait for stability",  (uint8_t *)v100,  0x16u);
      swift_arrayDestroy(v101, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v101, -1LL, -1LL);
      swift_slowDealloc(v100, -1LL, -1LL);

      unint64_t v104 = v224;
    }

    else
    {

      swift_bridgeObjectRelease_n(a3, 2LL);
      unint64_t v104 = v95;
    }

    ((void (*)(unint64_t, uint64_t))v232)(v104, v71);
    uint64_t v117 = v236;
    uint64_t v116 = v237;
    uint64_t v118 = v231;
    uint64_t v119 = v230;
    uint64_t v120 = v238;
    uint64_t v121 = swift_allocObject(&unk_1003AC2F0, 24LL, 7LL);
    uint64_t v239 = v121;
    *(void *)(v121 + 16) = 0LL;
    uint64_t v219 = (void (*)(void, void))(v121 + 16);
    uint64_t v122 = *(void (**)(void))(v120 + 16);
    uint64_t v123 = v222;
    ((void (*)(uint64_t, char *, uint64_t))v122)(v222, v242, v117);
    uint64_t v124 = *(void (**)(char *, char *, uint64_t))(v118 + 16);
    uint64_t v125 = v120;
    uint64_t v126 = v228;
    v124(v228, v243, v116);
    char v234 = v122;
    ((void (*)(uint64_t, uint64_t, uint64_t))v122)(v229, v123, v117);
    id v233 = (void (*)(char *, uint64_t, uint64_t))v124;
    v124((char *)v119, v126, v116);
    unint64_t v127 = *(unsigned __int8 *)(v125 + 80);
    uint64_t v128 = (v127 + 32) & ~v127;
    uint64_t v129 = *(unsigned __int8 *)(v118 + 80);
    v221 += v129;
    uint64_t v130 = v116;
    uint64_t v131 = (v221 + v128) & ~v129;
    unint64_t v224 = v127;
    uint64_t v200 = v129;
    uint64_t v220 = v223 + 7;
    unint64_t v132 = (unint64_t)&v223[v131 + 7] & 0xFFFFFFFFFFFFFFF8LL;
    unint64_t v133 = (v132 + 23) & 0xFFFFFFFFFFFFFFF8LL;
    unint64_t v134 = (v133 + 23) & 0xFFFFFFFFFFFFFFF8LL;
    uint64_t v232 = v127 | v129 | 7;
    uint64_t v135 = swift_allocObject(&unk_1003AC318, v134 + 8, v232);
    uint64_t v136 = v117;
    uint64_t v137 = v135;
    uint64_t v138 = v238;
    uint64_t v139 = (os_log_s *)v239;
    *(void *)(v135 + 16) = v85;
    *(void *)(v135 + 24) = v139;
    uint64_t v140 = v123;
    uint64_t v141 = v139;
    uint64_t v223 = *(char **)(v138 + 32);
    ((void (*)(uint64_t, uint64_t, uint64_t))v223)(v135 + v128, v140, v136);
    uint64_t v142 = v228;
    Swift::String v228 = *(char **)(v118 + 32);
    ((void (*)(uint64_t, char *, uint64_t))v228)(v137 + v131, v142, v130);
    Swift::String v143 = (void *)(v137 + v132);
    unint64_t v144 = v202;
    *Swift::String v143 = v244;
    v143[1] = v144;
    id v145 = (uint64_t (**)())(v137 + v133);
    uint64_t v146 = (uint64_t (*)())v240;
    *id v145 = sub_100290E78;
    v145[1] = v146;
    uint64_t v147 = v137;
    *(void *)(v137 + v134) = v241;
    uint64_t v148 = (void *)objc_opt_self(&OBJC_CLASS___NSNotificationCenter);
    swift_retain_n(v141, 2LL);
    swift_bridgeObjectRetain();
    swift_retain(v85);
    swift_retain(v146);
    id v149 = [v148 defaultCenter];
    if (kMRMediaRemoteNowPlayingInfoDidChangeNotification)
    {
      uint64_t v150 = v149;
      unint64_t v151 = v224;
      unint64_t v198 = ~v224;
      uint64_t v222 = ~v200;
      id v152 = kMRMediaRemoteNowPlayingInfoDidChangeNotification;
      uint64_t v153 = v203;
      NSNotificationCenter.publisher(for:object:)(v152, 0LL);

      aBlock[0] = (id)(*(uint64_t (**)(void))(*(void *)a10 + 280LL))();
      uint64_t v154 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0LL);
      uint64_t v155 = (uint64_t)v204;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v154 - 8) + 56LL))(v204, 1LL, 1LL, v154);
      uint64_t v156 = sub_10016083C(0LL, (unint64_t *)&qword_1003F9F50, &OBJC_CLASS___OS_dispatch_queue_ptr);
      uint64_t v157 = sub_100156FEC( (unint64_t *)&unk_1003FBEE0,  (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher,  (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Publisher);
      unint64_t v158 = sub_100184978();
      uint64_t v159 = v207;
      uint64_t v160 = v206;
      Publisher.receive<A>(on:options:)(aBlock, v155, v206, v156, v157, v158);
      sub_1001603DC(v155, &qword_1003F8210);

      (*(void (**)(char *, uint64_t))(v205 + 8))(v153, v160);
      uint64_t v161 = swift_allocObject(&unk_1003AC340, 32LL, 7LL);
      *(void *)(v161 + 16) = sub_100290FC4;
      *(void *)(v161 + 24) = v147;
      uint64_t v199 = v147;
      uint64_t v162 = sub_1001604E8( (unint64_t *)&qword_1003FBEF0,  (uint64_t *)&unk_1003FBED0,  (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
      swift_retain(v147);
      uint64_t v163 = v209;
      uint64_t v164 = Publisher<>.sink(receiveValue:)(sub_1001840B4, v161, v209, v162);
      swift_release(v161);
      (*(void (**)(char *, uint64_t))(v208 + 8))(v159, v163);
      swift_beginAccess(v219, &v248, 1LL, 0LL);
      uint64_t v165 = *((void *)v141 + 2);
      *((void *)v141 + 2) = v164;
      uint64_t v166 = swift_release(v165);
      uint64_t v167 = v211;
      static DispatchTime.now()(v166);
      + infix(_:_:)(v167, 2.0);
      uint64_t v219 = *(void (**)(void, void))(v212 + 8);
      v219(v167, v227);
      uint64_t v168 = v210;
      uint64_t v169 = v236;
      ((void (*)(char *, char *, uint64_t))v234)(v210, v242, v236);
      uint64_t v170 = v237;
      v233(v225, (uint64_t)v243, v237);
      uint64_t v171 = (v151 + 24) & v198;
      unint64_t v172 = (v221 + v171) & v222;
      unint64_t v173 = (unint64_t)&v220[v172] & 0xFFFFFFFFFFFFFFF8LL;
      unint64_t v174 = (v173 + 23) & 0xFFFFFFFFFFFFFFF8LL;
      unint64_t v175 = (v174 + 23) & 0xFFFFFFFFFFFFFFF8LL;
      uint64_t v176 = swift_allocObject(&unk_1003AC368, v175 + 8, v232);
      *(void *)(v176 + 16) = v141;
      ((void (*)(uint64_t, char *, uint64_t))v223)(v176 + v171, v168, v169);
      ((void (*)(unint64_t, char *, uint64_t))v228)(v176 + v172, v225, v170);
      Swift::String v177 = (void *)(v176 + v173);
      unint64_t v178 = v202;
      void *v177 = v244;
      v177[1] = v178;
      uint64_t v179 = (uint64_t (**)())(v176 + v174);
      uint64_t v180 = (uint64_t)v240;
      *uint64_t v179 = sub_100290E78;
      v179[1] = (uint64_t (*)())v180;
      *(void *)(v176 + v175) = v241;
      uint64_t aBlock[4] = sub_100291168;
      uint64_t v247 = v176;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = (id)1107296256;
      aBlock[2] = sub_100157EA8;
      aBlock[3] = &unk_1003AC380;
      uint64_t v181 = _Block_copy(aBlock);
      swift_bridgeObjectRetain();
      uint64_t v182 = v141;
      swift_retain(v141);
      uint64_t v183 = swift_retain(v180);
      id v184 = v213;
      static DispatchQoS.unspecified.getter(v183);
      uint64_t v245 = _swiftEmptyArrayStorage;
      uint64_t v185 = sub_100156FEC( (unint64_t *)&qword_1003FADB0,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      uint64_t v186 = sub_100156B68((uint64_t *)&unk_1003F9A70);
      uint64_t v187 = sub_1001604E8( (unint64_t *)&qword_1003FADC0,  (uint64_t *)&unk_1003F9A70,  (uint64_t)&protocol conformance descriptor for [A]);
      uint64_t v188 = v216;
      uint64_t v189 = v218;
      dispatch thunk of SetAlgebra.init<A>(_:)(&v245, v186, v187, v218, v185);
      uint64_t v190 = v226;
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v226, v184, v188, v181);
      _Block_release(v181);
      (*(void (**)(char *, uint64_t))(v217 + 8))(v188, v189);
      (*(void (**)(char *, uint64_t))(v214 + 8))(v184, v215);
      v219(v190, v227);
      swift_release(v247);
      uint64_t v191 = v229;
      uint64_t v192 = v230;
      sub_100287B3C( (uint64_t)v201,  v182,  v229,  v230,  v244,  v178,  (void (*)(uint64_t))sub_100290E78,  v180,  v241);
      swift_release(v182);
      swift_release(v180);
      swift_release(v199);
      uint64_t v193 = *(void (**)(uint64_t, uint64_t))(v231 + 8);
      uint64_t v194 = v237;
      v193(v192, v237);
      uint64_t v195 = *(void (**)(uint64_t, uint64_t))(v238 + 8);
      uint64_t v196 = v191;
      uint64_t v197 = v236;
      v195(v196, v236);
      v193((uint64_t)v243, v194);
      v195((uint64_t)v242, v197);
      return swift_release(v182);
    }

    else
    {
      swift_release(v141);
      swift_release(v240);
      (*(void (**)(uint64_t, uint64_t))(v231 + 8))(v230, v237);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v238 + 8))(v229, v236);
      __break(1u);
    }
  }

  return result;
}

uint64_t sub_100287564( void (*a1)(void, void, void, void), uint64_t a2, void *a3, uint64_t a4, unint64_t a5, void *a6, uint64_t a7)
{
  uint64_t v69 = a7;
  unint64_t v65 = a6;
  uint64_t v11 = type metadata accessor for Logger(0LL);
  uint64_t v68 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v67 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  a1(0LL, 0LL, 0LL, 0LL);
  uint64_t v13 = MRSystemAppPlaybackQueueCreate(kCFAllocatorDefault, 8LL);
  uint64_t ExternalRepresentation = MRSystemAppPlaybackQueueCreateExternalRepresentation(kCFAllocatorDefault, v13);
  if (!ExternalRepresentation) {
    __break(1u);
  }
  uint64_t v15 = (void *)ExternalRepresentation;
  uint64_t v66 = v11;
  uint64_t v64 = a4;
  uint64_t v16 = static Data._unconditionallyBridgeFromObjectiveC(_:)(ExternalRepresentation);
  unint64_t v18 = v17;

  uint64_t v19 = (void *)objc_opt_self(&OBJC_CLASS___NSPropertyListSerialization);
  uint64_t v20 = sub_100156B68(&qword_1003FCE50);
  uint64_t inited = swift_initStackObject(v20, v74);
  *(_OWORD *)(inited + 16) = xmmword_10034BE40;
  uint64_t v22 = (void *)kMRMediaRemoteOptionSystemAppPlaybackQueueData;
  *(void *)(inited + 32) = kMRMediaRemoteOptionSystemAppPlaybackQueueData;
  *(void *)(inited + 40) = v16;
  *(void *)(inited + 48) = v18;
  id v23 = v22;
  sub_100160874(v16, v18);
  sub_10028234C(inited);
  sub_100156B68(&qword_1003F9500);
  sub_1001A828C();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  aBlock[0] = 0LL;
  id v25 = [v19 dataWithPropertyList:isa format:200 options:0 error:aBlock];

  id v26 = aBlock[0];
  if (v25)
  {
    uint64_t v27 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v25);
    unint64_t v29 = v28;

    id v30 = objc_allocWithZone((Class)&OBJC_CLASS___MRDRemoteControlCommand);
    id v31 = a3;
    sub_100160874(v27, v29);
    NSString v32 = String._bridgeToObjectiveC()();
    Class v33 = Data._bridgeToObjectiveC()().super.isa;
    uint64_t v63 = v27;
    uint64_t v34 = v27;
    unint64_t v35 = v29;
    sub_1001608B8(v34, v29);
    id v62 = [v30 initWithCommandType:122 playerPath:v31 unresolvedPlayerPath:v31 senderAppDisplayID:v32 optionsData:v33];

    uint64_t v36 = sub_1001741A8();
    uint64_t v38 = v67;
    uint64_t v37 = v68;
    uint64_t v39 = v66;
    (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v67, v36, v66);
    swift_bridgeObjectRetain_n(a5, 2LL);
    uint64_t v41 = (os_log_s *)Logger.logObject.getter(v40);
    os_log_type_t v42 = static os_log_type_t.default.getter(v41);
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = swift_slowAlloc(22LL, -1LL);
      id v61 = (void *)swift_slowAlloc(64LL, -1LL);
      aBlock[0] = v61;
      *(_DWORD *)uint64_t v43 = 136315394;
      uint64_t v44 = _typeName(_:qualified:)(v69, 0LL);
      uint64_t v70 = sub_10015ADC4(v44, v45, (uint64_t *)aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v70, &v71, v43 + 4, v43 + 12);
      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v46 = v64;
      uint64_t v70 = sub_10015ADC4(v64, a5, (uint64_t *)aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v70, &v71, v43 + 14, v43 + 22);
      swift_bridgeObjectRelease_n(a5, 3LL);
      _os_log_impl( (void *)&_mh_execute_header,  v41,  v42,  "[%s] pullContentFromSession<%s> - clearing source queue.",  (uint8_t *)v43,  0x16u);
      uint64_t v47 = v61;
      swift_arrayDestroy(v61, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v47, -1LL, -1LL);
      swift_slowDealloc(v43, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v68 + 8))(v67, v66);
    }

    else
    {

      swift_bridgeObjectRelease_n(a5, 2LL);
      (*(void (**)(char *, uint64_t))(v37 + 8))(v38, v39);
      uint64_t v46 = v64;
    }

    id v48 = [(id)objc_opt_self(MRDMediaRemoteServer) server];
    id v49 = [v48 remoteControlServer];

    uint64_t v50 = (void *)swift_allocObject(&unk_1003AC3B8, 48LL, 7LL);
    unint64_t v51 = v65;
    v50[2] = v65;
    v50[3] = v46;
    uint64_t v52 = v69;
    v50[4] = a5;
    v50[5] = v52;
    uint64_t aBlock[4] = sub_100291210;
    uint64_t v73 = v50;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_100284344;
    aBlock[3] = &unk_1003AC3D0;
    uint64_t v53 = _Block_copy(aBlock);
    os_log_type_t v54 = v73;
    swift_bridgeObjectRetain();
    id v55 = v51;
    swift_release(v54);
    BOOL v56 = v62;
    [v49 sendRemoteControlCommand:v62 completion:v53];
    _Block_release(v53);

    sub_1001608B8(v63, v35);
    return sub_1001608B8(v16, v18);
  }

  else
  {
    uint64_t v58 = v26;
    uint64_t v59 = _convertNSErrorToError(_:)(v26);

    swift_willThrow(v60);
    uint64_t result = swift_unexpectedError(v59, "mediaremoted/HostedRoutingSessionDataSource.swift", 49LL, 1LL, 1332LL);
    __break(1u);
  }

  return result;
}

void sub_100287B3C( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, void (*a7)(uint64_t), uint64_t a8, uint64_t a9)
{
  uint64_t v97 = a8;
  os_log_type_t v98 = a7;
  unint64_t v96 = a6;
  uint64_t v86 = a5;
  uint64_t v100 = a3;
  uint64_t v101 = a4;
  os_log_t v99 = a2;
  uint64_t v103 = a1;
  uint64_t v102 = type metadata accessor for Duration.UnitsFormatStyle.FractionalPartDisplayStrategy(0LL);
  uint64_t v95 = *(void *)(v102 - 8);
  __chkstk_darwin(v102);
  uint64_t v94 = &v78[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v93 = type metadata accessor for Duration.UnitsFormatStyle.ZeroValueUnitsDisplayStrategy(0LL);
  uint64_t v91 = *(void *)(v93 - 8);
  __chkstk_darwin(v93);
  unint64_t v90 = &v78[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v89 = type metadata accessor for Duration.UnitsFormatStyle.UnitWidth(0LL);
  uint64_t v88 = *(void *)(v89 - 8);
  __chkstk_darwin(v89);
  id v87 = &v78[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v92 = type metadata accessor for Duration.UnitsFormatStyle(0LL);
  uint64_t v12 = *(void *)(v92 - 8);
  __chkstk_darwin(v92);
  uint64_t v14 = &v78[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v15 = type metadata accessor for Logger(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  unint64_t v18 = &v78[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v19 = type metadata accessor for ContinuousClock.Instant(0LL);
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = &v78[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v23 = sub_100156B68(&qword_1003F9450);
  __chkstk_darwin(v23);
  id v25 = &v78[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  sub_10016083C(0LL, &qword_1003F88E0, off_100397340);
  id v26 = sub_100298F38();
  sub_100298F94(v25);

  uint64_t v27 = type metadata accessor for HostedRoutingSession.NowPlayingInfo(0LL);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 48LL))(v25, 1LL, v27) == 1)
  {
    sub_1001603DC((uint64_t)v25, &qword_1003F9450);
    sub_100255AB4();
LABEL_7:
    swift_bridgeObjectRelease();
    return;
  }

  uint64_t v81 = v14;
  uint64_t v82 = v12;
  uint64_t v84 = v18;
  uint64_t v85 = v22;
  uint64_t v83 = v20;
  id v29 = *(id *)v25;
  uint64_t v28 = *((void *)v25 + 1);
  swift_bridgeObjectRetain();
  sub_1001A813C((uint64_t)v25, type metadata accessor for HostedRoutingSession.NowPlayingInfo);
  id v30 = sub_100255AB4();
  if (!v28) {
    goto LABEL_7;
  }
  if (v29 == v30 && v28 == v31)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v32 = v102;
    os_log_t v33 = v99;
  }

  else
  {
    char v34 = _stringCompareWithSmolCheck(_:_:expecting:)(v29, v28, v30, v31, 0LL);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v32 = v102;
    os_log_t v33 = v99;
    if ((v34 & 1) == 0) {
      return;
    }
  }

  unint64_t v35 = (void *)((char *)v33 + 16);
  swift_beginAccess((char *)v33 + 16, v107, 0LL, 0LL);
  if (*v35)
  {
    uint64_t v37 = v85;
    ContinuousClock.now.getter(v36);
    uint64_t v38 = ContinuousClock.Instant.duration(to:)(v37);
    uint64_t v102 = v39;
    uint64_t v103 = v38;
    uint64_t v40 = sub_1001741A8();
    uint64_t v41 = v84;
    uint64_t v42 = v15;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v16 + 16))(v84, v40, v15);
    unint64_t v43 = v96;
    swift_bridgeObjectRetain_n(v96, 2LL);
    unint64_t v45 = (os_log_s *)Logger.logObject.getter(v44);
    os_log_type_t v46 = static os_log_type_t.default.getter(v45);
    int v47 = v46;
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v100 = v16;
      uint64_t v101 = v42;
      os_log_t v99 = v45;
      uint64_t v48 = swift_slowAlloc(32LL, -1LL);
      uint64_t v80 = swift_slowAlloc(96LL, -1LL);
      v104[0] = v80;
      *(_DWORD *)uint64_t v48 = 136315650;
      int v79 = v47;
      uint64_t v49 = _typeName(_:qualified:)(a9, 0LL);
      uint64_t v105 = sub_10015ADC4(v49, v50, v104);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v105, v106, v48 + 4, v48 + 12);
      swift_bridgeObjectRelease();
      *(_WORD *)(v48 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v105 = sub_10015ADC4(v86, v43, v104);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v105, v106, v48 + 14, v48 + 22);
      swift_bridgeObjectRelease_n(v43, 3LL);
      *(_WORD *)(v48 + 22) = 2080;
      unint64_t v96 = v48 + 24;
      uint64_t v51 = sub_100156B68(&qword_1003F8CE0);
      uint64_t v52 = type metadata accessor for Duration.UnitsFormatStyle.Unit(0LL);
      uint64_t v53 = *(void *)(v52 - 8);
      os_log_type_t v54 = v35;
      uint64_t v55 = *(void *)(v53 + 72);
      uint64_t v56 = *(unsigned __int8 *)(v53 + 80);
      uint64_t v57 = (v56 + 32) & ~v56;
      uint64_t v58 = swift_allocObject(v51, v57 + 2 * v55, v56 | 7);
      *(_OWORD *)(v58 + 16) = xmmword_10034C140;
      uint64_t v59 = static Duration.UnitsFormatStyle.Unit.seconds.getter();
      static Duration.UnitsFormatStyle.Unit.milliseconds.getter(v59);
      uint64_t v60 = sub_1001841C8(v58);
      swift_setDeallocating(v58);
      uint64_t v61 = v58 + v57;
      uint64_t v37 = v85;
      swift_arrayDestroy(v61, 2LL, v52);
      uint64_t v62 = swift_deallocClassInstance(v58, 32LL, 7LL);
      uint64_t v63 = v87;
      uint64_t v64 = static Duration.UnitsFormatStyle.UnitWidth.abbreviated.getter(v62);
      unint64_t v65 = v90;
      uint64_t v66 = static Duration.UnitsFormatStyle.ZeroValueUnitsDisplayStrategy.hide.getter(v64);
      uint64_t v67 = v94;
      static Duration.UnitsFormatStyle.FractionalPartDisplayStrategy.hide.getter(v66);
      uint64_t v68 = v81;
      static FormatStyle<>.units(allowed:width:maximumUnitCount:zeroValueUnits:valueLength:fractionalPart:)( v60,  v63,  0LL,  1LL,  v65,  0LL,  1LL,  v67);
      unint64_t v35 = v54;
      swift_bridgeObjectRelease();
      (*(void (**)(_BYTE *, uint64_t))(v95 + 8))(v67, v32);
      (*(void (**)(_BYTE *, uint64_t))(v91 + 8))(v65, v93);
      (*(void (**)(_BYTE *, uint64_t))(v88 + 8))(v63, v89);
      uint64_t v69 = sub_100156FEC( &qword_1003F8CE8,  (uint64_t (*)(uint64_t))&type metadata accessor for Duration.UnitsFormatStyle,  (uint64_t)&protocol conformance descriptor for Duration.UnitsFormatStyle);
      uint64_t v70 = v92;
      Duration.formatted<A>(_:)(&v105, v68, v103, v102, v92, v69);
      (*(void (**)(_BYTE *, uint64_t))(v82 + 8))(v68, v70);
      uint64_t v105 = sub_10015ADC4(v105, v106[0], v104);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v105, v106, v96, v48 + 32);
      swift_bridgeObjectRelease();
      os_log_t v71 = v99;
      _os_log_impl( (void *)&_mh_execute_header,  v99,  (os_log_type_t)v79,  "[%s] pullContentFromSession<%s> - stable after: %s",  (uint8_t *)v48,  0x20u);
      uint64_t v72 = v80;
      swift_arrayDestroy(v80, 3LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v72, -1LL, -1LL);
      swift_slowDealloc(v48, -1LL, -1LL);

      (*(void (**)(_BYTE *, uint64_t))(v100 + 8))(v84, v101);
    }

    else
    {

      swift_bridgeObjectRelease_n(v43, 2LL);
      (*(void (**)(_BYTE *, uint64_t))(v16 + 8))(v41, v42);
    }

    uint64_t v73 = v98;
    uint64_t v74 = v83;
    swift_beginAccess(v35, &v105, 0LL, 0LL);
    uint64_t v75 = *v35;
    if (*v35)
    {
      swift_retain(*v35);
      AnyCancellable.cancel()();
      swift_release(v75);
    }

    swift_beginAccess(v35, v104, 1LL, 0LL);
    uint64_t v76 = *v35;
    *unint64_t v35 = 0LL;
    uint64_t v77 = swift_release(v76);
    v73(v77);
    (*(void (**)(_BYTE *, uint64_t))(v74 + 8))(v37, v19);
  }

void sub_1002882F0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, void (*a6)(void), uint64_t a7, void (*a8)(void))
{
  uint64_t v63 = a8;
  uint64_t v77 = a7;
  uint64_t v64 = a4;
  uint64_t v11 = type metadata accessor for Duration.UnitsFormatStyle.FractionalPartDisplayStrategy(0LL);
  uint64_t v73 = *(void *)(v11 - 8);
  uint64_t v74 = v11;
  __chkstk_darwin(v11);
  uint64_t v72 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v71 = type metadata accessor for Duration.UnitsFormatStyle.ZeroValueUnitsDisplayStrategy(0LL);
  uint64_t v69 = *(void *)(v71 - 8);
  __chkstk_darwin(v71);
  uint64_t v14 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v67 = type metadata accessor for Duration.UnitsFormatStyle.UnitWidth(0LL);
  uint64_t v65 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  uint64_t v16 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v70 = type metadata accessor for Duration.UnitsFormatStyle(0LL);
  uint64_t v68 = *(void *)(v70 - 8);
  __chkstk_darwin(v70);
  uint64_t v66 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = type metadata accessor for Logger(0LL);
  uint64_t v78 = *(void *)(v18 - 8);
  uint64_t v79 = v18;
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = type metadata accessor for ContinuousClock.Instant(0LL);
  uint64_t v75 = *(void *)(v21 - 8);
  uint64_t v76 = v21;
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v58 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = (void *)(a1 + 16);
  swift_beginAccess(a1 + 16, v83, 0LL, 0LL);
  if (*(void *)(a1 + 16))
  {
    ContinuousClock.now.getter(v25);
    uint64_t v26 = ContinuousClock.Instant.duration(to:)(v23);
    uint64_t v62 = v27;
    uint64_t v28 = sub_1001741A8();
    (*(void (**)(char *, uint64_t, uint64_t))(v78 + 16))(v20, v28, v79);
    swift_bridgeObjectRetain_n(a5, 2LL);
    id v30 = (os_log_s *)Logger.logObject.getter(v29);
    os_log_type_t v31 = static os_log_type_t.error.getter();
    int v32 = v31;
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v33 = swift_slowAlloc(32LL, -1LL);
      os_log_t v60 = v30;
      uint64_t v34 = v33;
      uint64_t v61 = swift_slowAlloc(96LL, -1LL);
      v80[0] = v61;
      *(_DWORD *)uint64_t v34 = 136315650;
      int v59 = v32;
      uint64_t v35 = _typeName(_:qualified:)(v63, 0LL);
      uint64_t v58 = v26;
      uint64_t v81 = sub_10015ADC4(v35, v36, v80);
      uint64_t v63 = a6;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, v82, v34 + 4, v34 + 12);
      swift_bridgeObjectRelease();
      *(_WORD *)(v34 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v81 = sub_10015ADC4(v64, a5, v80);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, v82, v34 + 14, v34 + 22);
      swift_bridgeObjectRelease_n(a5, 3LL);
      *(_WORD *)(v34 + 22) = 2080;
      uint64_t v64 = v34 + 24;
      uint64_t v37 = sub_100156B68(&qword_1003F8CE0);
      uint64_t v38 = type metadata accessor for Duration.UnitsFormatStyle.Unit(0LL);
      uint64_t v39 = *(void *)(v38 - 8);
      uint64_t v40 = *(void *)(v39 + 72);
      uint64_t v41 = *(unsigned __int8 *)(v39 + 80);
      uint64_t v42 = (v41 + 32) & ~v41;
      uint64_t v43 = swift_allocObject(v37, v42 + 2 * v40, v41 | 7);
      *(_OWORD *)(v43 + 16) = xmmword_10034C140;
      uint64_t v44 = static Duration.UnitsFormatStyle.Unit.seconds.getter();
      static Duration.UnitsFormatStyle.Unit.milliseconds.getter(v44);
      uint64_t v45 = sub_1001841C8(v43);
      swift_setDeallocating(v43);
      swift_arrayDestroy(v43 + v42, 2LL, v38);
      uint64_t v46 = swift_deallocClassInstance(v43, 32LL, 7LL);
      uint64_t v47 = static Duration.UnitsFormatStyle.UnitWidth.abbreviated.getter(v46);
      uint64_t v48 = static Duration.UnitsFormatStyle.ZeroValueUnitsDisplayStrategy.hide.getter(v47);
      uint64_t v49 = v72;
      static Duration.UnitsFormatStyle.FractionalPartDisplayStrategy.hide.getter(v48);
      unint64_t v50 = v66;
      static FormatStyle<>.units(allowed:width:maximumUnitCount:zeroValueUnits:valueLength:fractionalPart:)( v45,  v16,  0LL,  1LL,  v14,  0LL,  1LL,  v49);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v73 + 8))(v49, v74);
      (*(void (**)(char *, uint64_t))(v69 + 8))(v14, v71);
      (*(void (**)(char *, uint64_t))(v65 + 8))(v16, v67);
      uint64_t v51 = sub_100156FEC( &qword_1003F8CE8,  (uint64_t (*)(uint64_t))&type metadata accessor for Duration.UnitsFormatStyle,  (uint64_t)&protocol conformance descriptor for Duration.UnitsFormatStyle);
      uint64_t v52 = v70;
      Duration.formatted<A>(_:)(&v81, v50, v58, v62, v70, v51);
      (*(void (**)(char *, uint64_t))(v68 + 8))(v50, v52);
      uint64_t v81 = sub_10015ADC4(v81, v82[0], v80);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, v82, v64, v34 + 32);
      a6 = v63;
      swift_bridgeObjectRelease();
      os_log_t v53 = v60;
      _os_log_impl( (void *)&_mh_execute_header,  v60,  (os_log_type_t)v59,  "[%s] pullContentFromSession<%s> - timed out waiting for stability after: %s",  (uint8_t *)v34,  0x20u);
      uint64_t v54 = v61;
      swift_arrayDestroy(v61, 3LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v54, -1LL, -1LL);
      swift_slowDealloc(v34, -1LL, -1LL);
    }

    else
    {

      swift_bridgeObjectRelease_n(a5, 2LL);
    }

    (*(void (**)(char *, uint64_t))(v78 + 8))(v20, v79);
    swift_beginAccess(v24, &v81, 0LL, 0LL);
    uint64_t v55 = *v24;
    if (*v24)
    {
      swift_retain(*v24);
      AnyCancellable.cancel()();
      swift_release(v55);
    }

    swift_beginAccess(v24, v80, 1LL, 0LL);
    uint64_t v56 = *v24;
    void *v24 = 0LL;
    uint64_t v57 = swift_release(v56);
    a6(v57);
    (*(void (**)(char *, uint64_t))(v75 + 8))(v23, v76);
  }

uint64_t sub_10028890C( void *a1, uint64_t a2, uint64_t a3, unint64_t a4, void (*a5)(void), uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v98 = a7;
  uint64_t v99 = a8;
  uint64_t v102 = a5;
  uint64_t v103 = a6;
  uint64_t v100 = a3;
  unint64_t v101 = a4;
  id v97 = a1;
  uint64_t v9 = sub_100156B68(&qword_1003F8210);
  __chkstk_darwin(v9);
  uint64_t v11 = &v86[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v12 = type metadata accessor for NSNotificationCenter.Publisher(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = &v86[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v16 = sub_100156B68((uint64_t *)&unk_1003FBED0);
  uint64_t v17 = *(_BYTE **)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = &v86[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v105 = type metadata accessor for Logger(0LL);
  uint64_t v20 = *(void *)(v105 - 8);
  uint64_t v21 = __chkstk_darwin(v105);
  unint64_t v104 = &v86[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v21);
  uint64_t v24 = &v86[-v23];
  if (a2)
  {
    uint64_t v25 = a2;
    swift_errorRetain(a2);
    uint64_t v26 = sub_1001741A8();
    uint64_t v27 = v20;
    uint64_t v28 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v20 + 16);
    uint64_t v29 = v105;
    v28(v104, v26, v105);
    unint64_t v30 = v101;
    swift_bridgeObjectRetain();
    swift_errorRetain(a2);
    swift_bridgeObjectRetain();
    uint64_t v31 = swift_errorRetain(a2);
    int v32 = (os_log_s *)Logger.logObject.getter(v31);
    os_log_type_t v33 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = swift_slowAlloc(32LL, -1LL);
      uint64_t v35 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
      uint64_t v98 = swift_slowAlloc(64LL, -1LL);
      uint64_t v107 = v98;
      *(_DWORD *)uint64_t v34 = 136315650;
      uint64_t v36 = _typeName(_:qualified:)(v99, 0LL);
      uint64_t v106 = sub_10015ADC4(v36, v37, &v107);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v106, &v107, v34 + 4, v34 + 12);
      swift_bridgeObjectRelease();
      *(_WORD *)(v34 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v106 = sub_10015ADC4(v100, v30, &v107);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v106, &v107, v34 + 14, v34 + 22);
      swift_bridgeObjectRelease_n(v30, 3LL);
      *(_WORD *)(v34 + 22) = 2112;
      swift_errorRetain(v25);
      uint64_t v38 = _swift_stdlib_bridgeErrorToNSError(v25);
      uint64_t v106 = v38;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v106, &v107, v34 + 24, v34 + 32);
      *uint64_t v35 = v38;
      swift_errorRelease(v25);
      swift_errorRelease(v25);
      _os_log_impl( (void *)&_mh_execute_header,  v32,  v33,  "[%s] pullContentFromSession_new<%s> - failed to begin session with error: %@",  (uint8_t *)v34,  0x20u);
      uint64_t v39 = sub_100156B68((uint64_t *)&unk_1003FB7E0);
      swift_arrayDestroy(v35, 1LL, v39);
      swift_slowDealloc(v35, -1LL, -1LL);
      uint64_t v40 = v98;
      swift_arrayDestroy(v98, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v40, -1LL, -1LL);
      swift_slowDealloc(v34, -1LL, -1LL);

      (*(void (**)(_BYTE *, uint64_t))(v27 + 8))(v104, v105);
    }

    else
    {
      swift_bridgeObjectRelease_n(v30, 2LL);
      swift_errorRelease(a2);
      swift_errorRelease(a2);

      (*(void (**)(_BYTE *, uint64_t))(v27 + 8))(v104, v29);
    }

    swift_errorRetain(v25);
    uint64_t v57 = MRDFastSyncGroupSessionState.rawValue.getter(v25, 1LL, 0LL, 4LL);
    uint64_t v59 = v58;
    uint64_t v61 = v60;
    unsigned __int8 v63 = v62;
    v102();
    swift_errorRelease(v57);
    sub_100156BA8(v59, v61, v63);
    return swift_errorRelease(v25);
  }

  else
  {
    uint64_t v92 = v15;
    uint64_t v93 = v13;
    uint64_t v94 = v12;
    uint64_t v95 = v11;
    unint64_t v96 = v19;
    unint64_t v104 = v17;
    uint64_t v41 = sub_1001741A8();
    uint64_t v42 = v20;
    uint64_t v43 = v105;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v20 + 16))(v24, v41, v105);
    id v44 = v97;
    id v45 = v97;
    unint64_t v46 = v101;
    swift_bridgeObjectRetain_n(v101, 2LL);
    id v47 = v45;
    uint64_t v48 = (os_log_s *)Logger.logObject.getter(v47);
    int v49 = static os_log_type_t.error.getter();
    id v50 = v44;
    uint64_t v51 = v24;
    if (os_log_type_enabled(v48, (os_log_type_t)v49))
    {
      int v87 = v49;
      os_log_t v90 = v48;
      uint64_t v91 = v42;
      uint64_t v52 = swift_slowAlloc(32LL, -1LL);
      uint64_t v88 = (void *)swift_slowAlloc(8LL, -1LL);
      uint64_t v89 = swift_slowAlloc(64LL, -1LL);
      uint64_t v107 = v89;
      *(_DWORD *)uint64_t v52 = 136315650;
      uint64_t v53 = _typeName(_:qualified:)(v99, 0LL);
      uint64_t v106 = sub_10015ADC4(v53, v54, &v107);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v106, &v107, v52 + 4, v52 + 12);
      swift_bridgeObjectRelease();
      *(_WORD *)(v52 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v106 = sub_10015ADC4(v100, v46, &v107);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v106, &v107, v52 + 14, v52 + 22);
      swift_bridgeObjectRelease_n(v46, 3LL);
      *(_WORD *)(v52 + 22) = 2112;
      uint64_t v55 = v93;
      if (v50)
      {
        uint64_t v106 = (uint64_t)v47;
        id v56 = v47;
      }

      else
      {
        uint64_t v106 = 0LL;
      }

      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v106, &v107, v52 + 24, v52 + 32);
      uint64_t v65 = v16;
      uint64_t v71 = v88;
      *uint64_t v88 = v50;

      os_log_t v72 = v90;
      _os_log_impl( (void *)&_mh_execute_header,  v90,  (os_log_type_t)v87,  "[%s] pullContentFromSession_new<%s> - began session: %@",  (uint8_t *)v52,  0x20u);
      uint64_t v73 = sub_100156B68((uint64_t *)&unk_1003FB7E0);
      swift_arrayDestroy(v71, 1LL, v73);
      swift_slowDealloc(v71, -1LL, -1LL);
      uint64_t v74 = v89;
      swift_arrayDestroy(v89, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v74, -1LL, -1LL);
      swift_slowDealloc(v52, -1LL, -1LL);

      (*(void (**)(_BYTE *, uint64_t))(v91 + 8))(v51, v105);
      id v66 = v50;
      uint64_t v68 = v103;
      uint64_t v67 = v104;
      uint64_t v70 = (uint64_t)v95;
      uint64_t v69 = v96;
    }

    else
    {

      swift_bridgeObjectRelease_n(v46, 2LL);
      (*(void (**)(_BYTE *, uint64_t))(v42 + 8))(v24, v43);
      uint64_t v65 = v16;
      id v66 = v50;
      uint64_t v68 = v103;
      uint64_t v67 = v104;
      uint64_t v70 = (uint64_t)v95;
      uint64_t v69 = v96;
      uint64_t v55 = v93;
    }

    uint64_t v75 = v92;
    uint64_t v76 = v98;
    id v77 = [(id)objc_opt_self(NSNotificationCenter) defaultCenter];
    NSNotificationCenter.publisher(for:object:)(@"MRDMusicHandoffSessionDidFinishNotification", v66);

    uint64_t v107 = v76;
    uint64_t v78 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0LL);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 56LL))(v70, 1LL, 1LL, v78);
    uint64_t v79 = v75;
    uint64_t v80 = sub_10016083C(0LL, (unint64_t *)&qword_1003F9F50, &OBJC_CLASS___OS_dispatch_queue_ptr);
    uint64_t v81 = sub_100156FEC( (unint64_t *)&unk_1003FBEE0,  (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher,  (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Publisher);
    unint64_t v82 = sub_100184978();
    uint64_t v83 = v94;
    Publisher.receive<A>(on:options:)(&v107, v70, v94, v80, v81, v82);
    sub_1001603DC(v70, &qword_1003F8210);
    (*(void (**)(_BYTE *, uint64_t))(v55 + 8))(v79, v83);
    uint64_t v84 = swift_allocObject(&unk_1003AC278, 32LL, 7LL);
    *(void *)(v84 + 16) = v102;
    *(void *)(v84 + 24) = v68;
    uint64_t v85 = sub_1001604E8( (unint64_t *)&qword_1003FBEF0,  (uint64_t *)&unk_1003FBED0,  (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    swift_retain(v68);
    sub_100156640((uint64_t)sub_100290BD8, v84, v65, v85);
    swift_release(v84);
    return (*((uint64_t (**)(_BYTE *, uint64_t))v67 + 1))(v69, v65);
  }

void sub_10028916C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v6 = *(void (**)(void *, void *))(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  swift_retain(v5);
  id v8 = a2;
  id v7 = a3;
  v6(a2, a3);
  swift_release(v5);
}

void sub_1002891E0(uint64_t a1, unint64_t a2, uint64_t *a3, uint64_t a4, char *a5, uint64_t a6)
{
  uint64_t v202 = a6;
  uint64_t v197 = (char *)a5;
  uint64_t v208 = a4;
  unint64_t v204 = a2;
  uint64_t v189 = a1;
  uint64_t v206 = *v6;
  uint64_t v194 = type metadata accessor for RoutingInteraction(0LL);
  uint64_t v8 = *(void *)(v194 - 8);
  __chkstk_darwin(v194);
  uint64_t v10 = (char *)&v182 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for Logger(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v188 = (char *)&v182 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v190 = (char *)&v182 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v187 = (char *)&v182 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v186 = (char *)&v182 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v182 - v22;
  uint64_t v203 = RoutingInteraction.identifier.getter(v21);
  unint64_t v25 = v24;
  unint64_t v26 = a3[1];
  uint64_t v207 = *a3;
  uint64_t v199 = a3;
  uint64_t v27 = *(uint64_t (**)(uint64_t))(*v6 + 280);
  uint64_t v28 = swift_bridgeObjectRetain();
  uint64_t v191 = v6;
  uint64_t v29 = (void *)v27(v28);
  uint64_t v30 = sub_1001741A8();
  uint64_t v198 = v12;
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  uint64_t v32 = v194;
  uint64_t v192 = v30;
  uint64_t v205 = v11;
  uint64_t v193 = v31;
  ((void (*)(char *))v31)(v23);
  uint64_t v196 = v8;
  os_log_type_t v33 = *(void (**)(char *, void *, uint64_t))(v8 + 16);
  uint64_t v195 = v10;
  unint64_t v34 = v204;
  v33(v10, v197, v32);
  swift_bridgeObjectRetain_n(v26, 2LL);
  swift_bridgeObjectRetain_n(v25, 2LL);
  swift_bridgeObjectRetain_n(v34, 2LL);
  uint64_t v35 = swift_retain_n(v208, 2LL);
  uint64_t v197 = v23;
  uint64_t v36 = (os_log_s *)Logger.logObject.getter(v35);
  os_log_type_t v37 = static os_log_type_t.default.getter(v36);
  int v38 = v37;
  BOOL v39 = os_log_type_enabled(v36, v37);
  unint64_t v200 = v26;
  id v201 = v29;
  if (v39)
  {
    uint64_t v40 = swift_slowAlloc(62LL, -1LL);
    int v184 = v38;
    unint64_t v41 = v26;
    uint64_t v42 = v40;
    uint64_t v185 = swift_slowAlloc(192LL, -1LL);
    aBlock[0] = v185;
    *(_DWORD *)uint64_t v42 = 136316418;
    uint64_t v43 = _typeName(_:qualified:)(v206, 0LL);
    uint64_t v212 = sub_10015ADC4(v43, v44, aBlock);
    os_log_t v183 = v36;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v212, v213, v42 + 4, v42 + 12);
    swift_bridgeObjectRelease();
    *(_WORD *)(v42 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v212 = sub_10015ADC4(v203, v25, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v212, v213, v42 + 14, v42 + 22);
    swift_bridgeObjectRelease_n(v25, 3LL);
    *(_WORD *)(v42 + 22) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v212 = sub_10015ADC4(v189, v34, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v212, v213, v42 + 24, v42 + 32);
    swift_bridgeObjectRelease_n(v34, 3LL);
    *(_WORD *)(v42 + 32) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v212 = sub_10015ADC4(v207, v41, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v212, v213, v42 + 34, v42 + 42);
    swift_bridgeObjectRelease_n(v41, 3LL);
    *(_WORD *)(v42 + 42) = 2080;
    uint64_t v45 = v208;
    uint64_t v212 = v208;
    uint64_t v46 = type metadata accessor for RoutingInteraction.Action.HandoffContext(0LL);
    uint64_t v47 = sub_100156FEC( &qword_1003FCE40,  (uint64_t (*)(uint64_t))&type metadata accessor for RoutingInteraction.Action.HandoffContext,  (uint64_t)&protocol conformance descriptor for RoutingInteraction.Action.HandoffContext);
    uint64_t v48 = dispatch thunk of CustomStringConvertible.description.getter(v46, v47);
    uint64_t v212 = sub_10015ADC4(v48, v49, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v212, v213, v42 + 44, v42 + 52);
    swift_release_n(v45, 2LL);
    swift_bridgeObjectRelease();
    *(_WORD *)(v42 + 52) = 2080;
    uint64_t v50 = sub_100156FEC( &qword_1003F88F8,  (uint64_t (*)(uint64_t))&type metadata accessor for RoutingInteraction,  (uint64_t)&protocol conformance descriptor for RoutingInteraction);
    uint64_t v51 = v195;
    uint64_t v52 = dispatch thunk of CustomStringConvertible.description.getter(v32, v50);
    uint64_t v212 = sub_10015ADC4(v52, v53, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v212, v213, v42 + 54, v42 + 62);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v196 + 8))(v51, v32);
    os_log_t v54 = v183;
    _os_log_impl( (void *)&_mh_execute_header,  v183,  (os_log_type_t)v184,  "[%s] handoffFromApplication_new<%s> - bundle: %s to session: %s, context: %s, for: %s",  (uint8_t *)v42,  0x3Eu);
    uint64_t v55 = v185;
    swift_arrayDestroy(v185, 6LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v55, -1LL, -1LL);
    swift_slowDealloc(v42, -1LL, -1LL);
  }

  else
  {
    swift_release_n(v208, 2LL);
    swift_bridgeObjectRelease_n(v26, 2LL);
    swift_bridgeObjectRelease_n(v34, 2LL);
    swift_bridgeObjectRelease_n(v25, 2LL);
    (*(void (**)(char *, uint64_t))(v196 + 8))(v195, v32);
  }

  id v56 = *(void (**)(char *, uint64_t))(v198 + 8);
  uint64_t v57 = v205;
  v56(v197, v205);
  unint64_t v58 = v25;
  uint64_t v59 = v199[3];
  if (!v59)
  {
    uint64_t v93 = v188;
    v193(v188, v192, v57);
    uint64_t v94 = swift_bridgeObjectRetain();
    uint64_t v95 = (os_log_s *)Logger.logObject.getter(v94);
    os_log_type_t v96 = static os_log_type_t.error.getter();
    BOOL v97 = os_log_type_enabled(v95, v96);
    uint64_t v98 = v206;
    if (v97)
    {
      uint64_t v99 = swift_slowAlloc(22LL, -1LL);
      uint64_t v100 = swift_slowAlloc(64LL, -1LL);
      aBlock[0] = v100;
      *(_DWORD *)uint64_t v99 = 136315394;
      uint64_t v101 = _typeName(_:qualified:)(v98, 0LL);
      uint64_t v212 = sub_10015ADC4(v101, v102, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v212, v213, v99 + 4, v99 + 12);
      swift_bridgeObjectRelease();
      *(_WORD *)(v99 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v212 = sub_10015ADC4(v203, v25, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v212, v213, v99 + 14, v99 + 22);
      swift_bridgeObjectRelease_n(v25, 3LL);
      _os_log_impl( (void *)&_mh_execute_header,  v95,  v96,  "[%s] handoffFromApplication_new<%s> - failing because sessions are not both endpoint sourced",  (uint8_t *)v99,  0x16u);
      swift_arrayDestroy(v100, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v100, -1LL, -1LL);
      swift_slowDealloc(v99, -1LL, -1LL);

      uint64_t v103 = v93;
      uint64_t v104 = v205;
    }

    else
    {

      swift_bridgeObjectRelease_n(v25, 2LL);
      uint64_t v103 = v93;
      uint64_t v104 = v57;
    }

    v56(v103, v104);
    goto LABEL_22;
  }

  uint64_t v60 = v199[2];
  uint64_t v61 = (uint64_t *)((char *)v191 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_endpoints);
  __n128 v62 = swift_beginAccess( (char *)v191 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_endpoints,  &v212,  0LL,  0LL);
  uint64_t v63 = *v61;
  uint64_t v64 = v206;
  if (!*(void *)(v63 + 16))
  {
LABEL_18:
    uint64_t v105 = v56;
    uint64_t v106 = v190;
    ((void (*)(char *, uint64_t, uint64_t, __n128))v193)(v190, v192, v57, v62);
    uint64_t v107 = swift_bridgeObjectRetain();
    uint64_t v108 = (os_log_s *)Logger.logObject.getter(v107);
    os_log_type_t v109 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v108, v109))
    {
      uint64_t v110 = swift_slowAlloc(22LL, -1LL);
      uint64_t v111 = swift_slowAlloc(64LL, -1LL);
      aBlock[0] = v111;
      *(_DWORD *)uint64_t v110 = 136315394;
      uint64_t v112 = _typeName(_:qualified:)(v64, 0LL);
      uint64_t v211 = sub_10015ADC4(v112, v113, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v211, &v212, v110 + 4, v110 + 12);
      swift_bridgeObjectRelease();
      *(_WORD *)(v110 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v211 = sub_10015ADC4(v203, v25, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v211, &v212, v110 + 14, v110 + 22);
      swift_bridgeObjectRelease_n(v25, 3LL);
      _os_log_impl( (void *)&_mh_execute_header,  v108,  v109,  "[%s] handoffFromApplication_new<%s> - failing because no connected entry for endpoint sourced sessions",  (uint8_t *)v110,  0x16u);
      swift_arrayDestroy(v111, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v111, -1LL, -1LL);
      swift_slowDealloc(v110, -1LL, -1LL);

      unsigned __int8 v114 = v106;
      uint64_t v115 = v205;
    }

    else
    {

      swift_bridgeObjectRelease_n(v25, 2LL);
      unsigned __int8 v114 = v106;
      uint64_t v115 = v57;
    }

    v105(v114, v115);
LABEL_22:
    uint64_t v116 = v207;
    uint64_t v117 = type metadata accessor for InternalRoutingError(0LL);
    uint64_t v118 = sub_100156FEC( &qword_1003F8908,  (uint64_t (*)(uint64_t))&type metadata accessor for InternalRoutingError,  (uint64_t)&protocol conformance descriptor for InternalRoutingError);
    uint64_t v119 = swift_allocError(v117, v118, 0LL, 0LL);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v117 - 8) + 104LL))( v120,  enum case for InternalRoutingError.sessionNotFound(_:),  v117);
    uint64_t v121 = MRDFastSyncGroupSessionState.rawValue.getter(v119, v116, v200, 2LL);
    uint64_t v123 = v122;
    uint64_t v125 = v124;
    unsigned __int8 v127 = v126;
    sub_10029149C(v121, v122, v124, v126);
    swift_errorRelease(v121);
    sub_100156BA8(v123, v125, v127);
    id v85 = v201;
    goto LABEL_23;
  }

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v65 = sub_10015CAD4(v60, v59);
  if ((v66 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }

  uint64_t v67 = *(void *)(*(void *)(v63 + 56) + 8 * v65);
  swift_retain(v67);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_BYTE *)(v67 + 16) != 2)
  {
    swift_release(v67);
    goto LABEL_18;
  }

  uint64_t v68 = v57;
  id v69 = [*(id *)(v67 + 64) origin];
  id v70 = [(id)objc_opt_self(MRDMediaRemoteServer) server];
  id v71 = [v70 nowPlayingServer];

  id v72 = [v71 originClientForOrigin:v69];
  if (!v72)
  {
    v193(v187, v192, v68);
    id v128 = v69;
    swift_bridgeObjectRetain();
    id v85 = v128;
    uint64_t v129 = (os_log_s *)Logger.logObject.getter(v85);
    uint64_t v130 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v129, (os_log_type_t)v130))
    {
      uint64_t v131 = swift_slowAlloc(32LL, -1LL);
      uint64_t v199 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
      uint64_t v132 = swift_slowAlloc(64LL, -1LL);
      unint64_t v204 = v132;
      *(_DWORD *)uint64_t v131 = 136315650;
      uint64_t v208 = v67;
      aBlock[0] = v132;
      uint64_t v133 = _typeName(_:qualified:)(v64, 0LL);
      uint64_t v211 = sub_10015ADC4(v133, v134, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v211, &v212, v131 + 4, v131 + 12);
      swift_bridgeObjectRelease();
      *(_WORD *)(v131 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v211 = sub_10015ADC4(v203, v58, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v211, &v212, v131 + 14, v131 + 22);
      swift_bridgeObjectRelease_n(v58, 3LL);
      *(_WORD *)(v131 + 22) = 2112;
      uint64_t v211 = (uint64_t)v85;
      uint64_t v135 = v68;
      id v136 = v85;
      uint64_t v67 = v208;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v211, &v212, v131 + 24, v131 + 32);
      uint64_t v137 = v199;
      *uint64_t v199 = (uint64_t)v85;

      _os_log_impl( (void *)&_mh_execute_header,  v129,  (os_log_type_t)v130,  "[%s] handoffFromApplication_new<%s> - failing because no destination origin client found for: %@",  (uint8_t *)v131,  0x20u);
      uint64_t v138 = sub_100156B68((uint64_t *)&unk_1003FB7E0);
      swift_arrayDestroy(v137, 1LL, v138);
      swift_slowDealloc(v137, -1LL, -1LL);
      unint64_t v139 = v204;
      swift_arrayDestroy(v204, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v139, -1LL, -1LL);
      swift_slowDealloc(v131, -1LL, -1LL);

      uint64_t v140 = v187;
      uint64_t v141 = v135;
    }

    else
    {

      swift_bridgeObjectRelease_n(v58, 2LL);
      uint64_t v140 = v187;
      uint64_t v141 = v68;
    }

    v56(v140, v141);
    uint64_t v158 = v207;
    uint64_t v159 = type metadata accessor for InternalRoutingError(0LL);
    uint64_t v160 = sub_100156FEC( &qword_1003F8908,  (uint64_t (*)(uint64_t))&type metadata accessor for InternalRoutingError,  (uint64_t)&protocol conformance descriptor for InternalRoutingError);
    uint64_t v161 = swift_allocError(v159, v160, 0LL, 0LL);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v159 - 8) + 104LL))( v162,  enum case for InternalRoutingError.sessionNotFound(_:),  v159);
    uint64_t v163 = MRDFastSyncGroupSessionState.rawValue.getter(v161, v158, v200, 2LL);
    uint64_t v165 = v164;
    uint64_t v167 = v166;
    unsigned __int8 v169 = v168;
    sub_10029149C(v163, v164, v166, v168);
    swift_errorRelease(v163);
    sub_100156BA8(v165, v167, v169);

    swift_release(v67);
    goto LABEL_23;
  }

  id v73 = [v72 deviceInfo];
  id v74 = [v73 systemMediaApplication];

  uint64_t v208 = v67;
  if (!v74)
  {
    uint64_t v142 = v186;
    v193(v186, v192, v68);
    swift_bridgeObjectRetain_n(v204, 2LL);
    id v143 = v72;
    swift_bridgeObjectRetain();
    id v85 = v143;
    unint64_t v144 = (os_log_s *)Logger.logObject.getter(v85);
    os_log_type_t v145 = static os_log_type_t.error.getter();
    int v146 = v145;
    if (os_log_type_enabled(v144, v145))
    {
      uint64_t v147 = swift_slowAlloc(42LL, -1LL);
      LODWORD(v198) = v146;
      uint64_t v148 = v147;
      uint64_t v197 = (char *)swift_slowAlloc(8LL, -1LL);
      uint64_t v199 = (uint64_t *)swift_slowAlloc(96LL, -1LL);
      aBlock[0] = (uint64_t)v199;
      *(_DWORD *)uint64_t v148 = 136315906;
      uint64_t v149 = _typeName(_:qualified:)(v64, 0LL);
      uint64_t v211 = sub_10015ADC4(v149, v150, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v211, &v212, v148 + 4, v148 + 12);
      swift_bridgeObjectRelease();
      *(_WORD *)(v148 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v211 = sub_10015ADC4(v203, v58, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v211, &v212, v148 + 14, v148 + 22);
      swift_bridgeObjectRelease_n(v58, 3LL);
      *(_WORD *)(v148 + 22) = 2080;
      unint64_t v151 = v204;
      swift_bridgeObjectRetain();
      uint64_t v211 = sub_10015ADC4(v189, v151, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v211, &v212, v148 + 24, v148 + 32);
      swift_bridgeObjectRelease_n(v151, 3LL);
      *(_WORD *)(v148 + 32) = 2112;
      uint64_t v211 = (uint64_t)v85;
      id v152 = v85;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v211, &v212, v148 + 34, v148 + 42);
      uint64_t v153 = v197;
      *(void *)uint64_t v197 = v72;

      _os_log_impl( (void *)&_mh_execute_header,  v144,  (os_log_type_t)v198,  "[%s] handoffFromApplication_new<%s> - failing because unable to localize client: %s for destination origin client: %@",  (uint8_t *)v148,  0x2Au);
      uint64_t v154 = sub_100156B68((uint64_t *)&unk_1003FB7E0);
      swift_arrayDestroy((char *)v153, 1LL, v154);
      swift_slowDealloc((char *)v153, -1LL, -1LL);
      uint64_t v155 = v199;
      swift_arrayDestroy(v199, 3LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v155, -1LL, -1LL);
      swift_slowDealloc(v148, -1LL, -1LL);

      uint64_t v156 = v186;
      uint64_t v157 = v205;
    }

    else
    {

      swift_bridgeObjectRelease_n(v204, 2LL);
      swift_bridgeObjectRelease_n(v58, 2LL);
      uint64_t v156 = v142;
      uint64_t v157 = v68;
    }

    v56(v156, v157);
    uint64_t v170 = v207;
    uint64_t v171 = type metadata accessor for InternalRoutingError(0LL);
    uint64_t v172 = sub_100156FEC( &qword_1003F8908,  (uint64_t (*)(uint64_t))&type metadata accessor for InternalRoutingError,  (uint64_t)&protocol conformance descriptor for InternalRoutingError);
    uint64_t v173 = swift_allocError(v171, v172, 0LL, 0LL);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v171 - 8) + 104LL))( v174,  enum case for InternalRoutingError.unsupportedOperation(_:),  v171);
    uint64_t v175 = MRDFastSyncGroupSessionState.rawValue.getter(v173, v170, v200, 2LL);
    uint64_t v177 = v176;
    uint64_t v179 = v178;
    unsigned __int8 v181 = v180;
    sub_10029149C(v175, v176, v178, v180);
    swift_errorRelease(v175);
    sub_100156BA8(v177, v179, v181);

    swift_release(v208);
    goto LABEL_23;
  }

  uint64_t v75 = v64;
  unint64_t v76 = v25;
  static String._unconditionallyBridgeFromObjectiveC(_:)(v74);

  id v77 = objc_allocWithZone(&OBJC_CLASS___MRPlayerPath);
  id v78 = v69;
  NSString v79 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v80 = [v77 initWithOrigin:v78 bundleIdentifier:v79 player:0];

  sub_10016083C(0LL, &qword_1003F88E0, off_100397340);
  id v81 = sub_100298F38();
  uint64_t v82 = dispatch thunk of RoutingInteraction.Action.HandoffContext.sourcePlayerPath.getter();
  if (v82)
  {
    uint64_t v83 = v82;
    uint64_t v84 = objc_opt_self(&OBJC_CLASS___MRPlayerPath);
    id v85 = (id)swift_dynamicCastObjCClassUnconditional(v83, v84, 0LL, 0LL, 0LL);
    uint64_t v86 = (void *)swift_allocObject(&unk_1003AC4D0, 80LL, 7LL);
    uint64_t v87 = v202;
    v86[2] = v203;
    v86[3] = v76;
    v86[4] = sub_10029149C;
    v86[5] = v87;
    unint64_t v88 = v200;
    id v89 = v201;
    v86[6] = v207;
    v86[7] = v88;
    v86[8] = v89;
    v86[9] = v75;
    uint64_t aBlock[4] = (uint64_t)sub_1002916C0;
    uint64_t v210 = v86;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256LL;
    aBlock[2] = (uint64_t)sub_10028916C;
    aBlock[3] = (uint64_t)&unk_1003AC4E8;
    os_log_t v90 = _Block_copy(aBlock);
    uint64_t v91 = v210;
    swift_retain(v87);
    id v92 = v89;
    swift_release(v91);
    [v81 beginMusicHandoffSessionWithSource:v85 destination:v80 completion:v90];
    _Block_release(v90);

    swift_release(v208);
LABEL_23:

    return;
  }

  __break(1u);
}

uint64_t sub_10028A544( uint64_t a1, uint64_t a2, unint64_t a3, void *a4, void (*a5)(void), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v88 = a8;
  uint64_t v89 = a2;
  uint64_t v90 = a1;
  uint64_t v20 = type metadata accessor for Logger(0LL);
  uint64_t v21 = *(uint64_t **)(v20 - 8);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v83 = (char *)&v78 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v22);
  unint64_t v25 = (char *)&v78 - v24;
  uint64_t v26 = sub_100174228();
  uint64_t v82 = v21;
  id v80 = (void (*)(char *, uint64_t, uint64_t))v21[2];
  v80(v25, v26, v20);
  swift_bridgeObjectRetain_n(a3, 2LL);
  id v27 = a4;
  uint64_t v28 = (os_log_s *)Logger.logObject.getter(v27);
  os_log_type_t v29 = static os_log_type_t.default.getter(v28);
  int v30 = v29;
  BOOL v31 = os_log_type_enabled(v28, v29);
  uint64_t v86 = a7;
  uint64_t v87 = a6;
  unint64_t v84 = a3;
  id v85 = a5;
  uint64_t v81 = a15;
  if (v31)
  {
    uint64_t v32 = swift_slowAlloc(32LL, -1LL);
    int v79 = v30;
    uint64_t v33 = v32;
    uint64_t v78 = swift_slowAlloc(96LL, -1LL);
    v92[0] = v78;
    *(_DWORD *)uint64_t v33 = 136315650;
    uint64_t v34 = _typeName(_:qualified:)(a15, 0LL);
    uint64_t v91 = sub_10015ADC4(v34, v35, v92);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v91, v92, v33 + 4, v33 + 12);
    swift_bridgeObjectRelease();
    *(_WORD *)(v33 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v91 = sub_10015ADC4(v89, a3, v92);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v91, v92, v33 + 14, v33 + 22);
    swift_bridgeObjectRelease_n(a3, 3LL);
    *(_WORD *)(v33 + 22) = 2080;
    id v36 = [v27 report];
    uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
    unint64_t v39 = v38;

    uint64_t v91 = sub_10015ADC4(v37, v39, v92);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v91, v92, v33 + 24, v33 + 32);

    swift_bridgeObjectRelease();
    _os_log_impl( (void *)&_mh_execute_header,  v28,  (os_log_type_t)v79,  "[%s] handoffFromApplication<%s> - report: %s",  (uint8_t *)v33,  0x20u);
    uint64_t v40 = v78;
    swift_arrayDestroy(v78, 3LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v40, -1LL, -1LL);
    swift_slowDealloc(v33, -1LL, -1LL);
  }

  else
  {

    swift_bridgeObjectRelease_n(a3, 2LL);
  }

  unint64_t v41 = (void (*)(char *, uint64_t))v82[1];
  v41(v25, v20);
  uint64_t v42 = v90;
  uint64_t v43 = v83;
  if (v90)
  {
    swift_errorRetain(v90);
    uint64_t v44 = sub_1001741A8();
    v80(v43, v44, v20);
    unint64_t v45 = v84;
    swift_bridgeObjectRetain();
    swift_errorRetain(v42);
    swift_bridgeObjectRetain();
    uint64_t v46 = swift_errorRetain(v42);
    uint64_t v47 = (os_log_s *)Logger.logObject.getter(v46);
    os_log_type_t v48 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v47, v48))
    {
      uint64_t v49 = swift_slowAlloc(32LL, -1LL);
      uint64_t v82 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
      uint64_t v50 = swift_slowAlloc(64LL, -1LL);
      uint64_t v83 = (char *)v20;
      uint64_t v51 = v43;
      uint64_t v52 = v50;
      v92[0] = v50;
      *(_DWORD *)uint64_t v49 = 136315650;
      uint64_t v53 = _typeName(_:qualified:)(v81, 0LL);
      uint64_t v91 = sub_10015ADC4(v53, v54, v92);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v91, v92, v49 + 4, v49 + 12);
      swift_bridgeObjectRelease();
      *(_WORD *)(v49 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v91 = sub_10015ADC4(v89, v45, v92);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v91, v92, v49 + 14, v49 + 22);
      swift_bridgeObjectRelease_n(v45, 3LL);
      *(_WORD *)(v49 + 22) = 2112;
      swift_errorRetain(v90);
      uint64_t v55 = _swift_stdlib_bridgeErrorToNSError(v90);
      uint64_t v91 = v55;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v91, v92, v49 + 24, v49 + 32);
      id v56 = v82;
      uint64_t *v82 = v55;
      uint64_t v42 = v90;
      swift_errorRelease(v90);
      swift_errorRelease(v42);
      _os_log_impl( (void *)&_mh_execute_header,  v47,  v48,  "[%s] handoffFromApplication<%s> - failed with error: %@.",  (uint8_t *)v49,  0x20u);
      uint64_t v57 = sub_100156B68((uint64_t *)&unk_1003FB7E0);
      swift_arrayDestroy(v56, 1LL, v57);
      swift_slowDealloc(v56, -1LL, -1LL);
      swift_arrayDestroy(v52, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v52, -1LL, -1LL);
      swift_slowDealloc(v49, -1LL, -1LL);

      unint64_t v58 = v51;
      uint64_t v59 = v83;
    }

    else
    {
      swift_bridgeObjectRelease_n(v45, 2LL);
      swift_errorRelease(v42);
      swift_errorRelease(v42);

      unint64_t v58 = v43;
      uint64_t v59 = (char *)v20;
    }

    v41(v58, (uint64_t)v59);
    id v69 = v85;
    uint64_t v68 = v86;
    uint64_t v70 = v88;
    swift_bridgeObjectRetain();
    swift_errorRetain(v42);
    uint64_t v71 = MRDFastSyncGroupSessionState.rawValue.getter(v42, v68, v70, 2LL);
    uint64_t v73 = v72;
    uint64_t v75 = v74;
    unsigned __int8 v77 = v76;
    v69();
    swift_errorRelease(v71);
    sub_100156BA8(v73, v75, v77);
    return swift_errorRelease(v42);
  }

  else
  {
    uint64_t v60 = (void *)swift_allocObject(&unk_1003AC548, 80LL, 7LL);
    unint64_t v61 = v84;
    uint64_t v62 = v87;
    v60[2] = v85;
    v60[3] = v62;
    v60[4] = a9;
    v60[5] = a10;
    v60[6] = v89;
    v60[7] = v61;
    uint64_t v63 = v81;
    v60[8] = a11;
    v60[9] = v63;
    uint64_t v64 = (void *)swift_allocObject(&unk_1003AC570, 40LL, 7LL);
    uint64_t v65 = v88;
    v64[2] = v86;
    v64[3] = v65;
    v64[4] = a14;
    swift_bridgeObjectRetain();
    swift_retain(v62);
    swift_bridgeObjectRetain();
    id v66 = a11;
    swift_bridgeObjectRetain();
    swift_retain(a14);
    sub_100273F0C( a13,  (void (*)(void, void, void, void))sub_1002919D8,  (uint64_t)v60,  (uint64_t (*)(void))sub_100291A38,  (uint64_t)v64,  2.0);
    swift_release(v60);
    return swift_release(v64);
  }

uint64_t sub_10028ABB4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, void *a11, uint64_t a12)
{
  uint64_t v17 = type metadata accessor for Logger(0LL);
  uint64_t v79 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v78 = (char *)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  a5(a1, a2, a3, a4);
  uint64_t v19 = MRSystemAppPlaybackQueueCreate(kCFAllocatorDefault, 8LL);
  uint64_t ExternalRepresentation = MRSystemAppPlaybackQueueCreateExternalRepresentation(kCFAllocatorDefault, v19);
  if (!ExternalRepresentation) {
    __break(1u);
  }
  uint64_t v21 = (void *)ExternalRepresentation;
  uint64_t v22 = static Data._unconditionallyBridgeFromObjectiveC(_:)(ExternalRepresentation);
  unint64_t v24 = v23;

  id v25 = [(id)objc_opt_self(MROrigin) localOrigin];
  id v26 = objc_allocWithZone(&OBJC_CLASS___MRPlayerPath);
  swift_bridgeObjectRetain();
  NSString v27 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v28 = [v26 initWithOrigin:v25 bundleIdentifier:v27 player:0];

  os_log_type_t v29 = (void *)objc_opt_self(&OBJC_CLASS___NSPropertyListSerialization);
  uint64_t v30 = sub_100156B68(&qword_1003FCE50);
  uint64_t inited = swift_initStackObject(v30, v85);
  *(_OWORD *)(inited + 16) = xmmword_10034BE40;
  uint64_t v32 = (void *)kMRMediaRemoteOptionSystemAppPlaybackQueueData;
  *(void *)(inited + 32) = kMRMediaRemoteOptionSystemAppPlaybackQueueData;
  *(void *)(inited + 40) = v22;
  *(void *)(inited + 48) = v24;
  id v33 = v32;
  uint64_t v75 = v22;
  sub_100160874(v22, v24);
  sub_10028234C(inited);
  sub_100156B68(&qword_1003F9500);
  sub_1001A828C();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  aBlock[0] = 0LL;
  id v35 = [v29 dataWithPropertyList:isa format:200 options:0 error:aBlock];

  id v36 = aBlock[0];
  if (v35)
  {
    unsigned __int8 v76 = a11;
    uint64_t v77 = a12;
    uint64_t v73 = a9;
    uint64_t v37 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v35);
    unint64_t v39 = v38;

    id v40 = objc_allocWithZone((Class)&OBJC_CLASS___MRDRemoteControlCommand);
    id v41 = v28;
    sub_100160874(v37, v39);
    NSString v42 = String._bridgeToObjectiveC()();
    Class v43 = Data._bridgeToObjectiveC()().super.isa;
    sub_1001608B8(v37, v39);
    id v74 = [v40 initWithCommandType:122 playerPath:v41 unresolvedPlayerPath:v41 senderAppDisplayID:v42 optionsData:v43];

    uint64_t v44 = sub_1001741A8();
    uint64_t v46 = v78;
    uint64_t v45 = v79;
    (*(void (**)(char *, uint64_t, uint64_t))(v79 + 16))(v78, v44, v17);
    unint64_t v80 = a10;
    swift_bridgeObjectRetain_n(a10, 2LL);
    os_log_type_t v48 = (os_log_s *)Logger.logObject.getter(v47);
    os_log_type_t v49 = static os_log_type_t.default.getter(v48);
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v50 = swift_slowAlloc(22LL, -1LL);
      uint64_t v71 = v17;
      uint64_t v51 = v50;
      uint64_t v70 = (void *)swift_slowAlloc(64LL, -1LL);
      aBlock[0] = v70;
      *(_DWORD *)uint64_t v51 = 136315394;
      uint64_t v52 = _typeName(_:qualified:)(v77, 0LL);
      uint64_t v81 = sub_10015ADC4(v52, v53, (uint64_t *)aBlock);
      unint64_t v72 = v39;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, &v82, v51 + 4, v51 + 12);
      swift_bridgeObjectRelease();
      *(_WORD *)(v51 + 12) = 2080;
      unint64_t v54 = v80;
      swift_bridgeObjectRetain();
      uint64_t v55 = v73;
      uint64_t v81 = sub_10015ADC4(v73, v54, (uint64_t *)aBlock);
      unint64_t v39 = v72;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, &v82, v51 + 14, v51 + 22);
      swift_bridgeObjectRelease_n(v54, 3LL);
      _os_log_impl( (void *)&_mh_execute_header,  v48,  v49,  "[%s] handoffFromApplication<%s> - clearing source queue.",  (uint8_t *)v51,  0x16u);
      id v56 = v70;
      swift_arrayDestroy(v70, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v56, -1LL, -1LL);
      swift_slowDealloc(v51, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v79 + 8))(v78, v71);
    }

    else
    {

      swift_bridgeObjectRelease_n(v80, 2LL);
      (*(void (**)(char *, uint64_t))(v45 + 8))(v46, v17);
      uint64_t v55 = v73;
    }

    id v57 = [(id)objc_opt_self(MRDMediaRemoteServer) server];
    id v58 = [v57 remoteControlServer];

    uint64_t v59 = (void *)swift_allocObject(&unk_1003AC598, 48LL, 7LL);
    unint64_t v61 = v76;
    uint64_t v60 = v77;
    v59[2] = v76;
    v59[3] = v55;
    v59[4] = v80;
    v59[5] = v60;
    uint64_t aBlock[4] = sub_100291A54;
    unint64_t v84 = v59;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_100284344;
    aBlock[3] = &unk_1003AC5B0;
    uint64_t v62 = _Block_copy(aBlock);
    uint64_t v63 = v84;
    swift_bridgeObjectRetain();
    id v64 = v61;
    swift_release(v63);
    uint64_t v65 = v74;
    [v58 sendRemoteControlCommand:v74 completion:v62];
    _Block_release(v62);

    sub_1001608B8(v37, v39);
    return sub_1001608B8(v75, v24);
  }

  else
  {
    uint64_t v67 = v36;
    uint64_t v68 = _convertNSErrorToError(_:)(v36);

    swift_willThrow(v69);
    uint64_t result = swift_unexpectedError(v68, "mediaremoted/HostedRoutingSessionDataSource.swift", 49LL, 1LL, 1525LL);
    __break(1u);
  }

  return result;
}

uint64_t sub_10028B220( void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v33 = a2;
  uint64_t v15 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v32 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v30 = *(void *)(v18 - 8);
  uint64_t v31 = v18;
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v29 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = (void *)swift_allocObject(a6, 48LL, 7LL);
  v21[2] = a1;
  v21[3] = a3;
  v21[4] = a4;
  v21[5] = a5;
  uint64_t aBlock[4] = a7;
  id v36 = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_100157EA8;
  aBlock[3] = a8;
  uint64_t v22 = _Block_copy(aBlock);
  id v23 = a1;
  uint64_t v24 = swift_bridgeObjectRetain();
  static DispatchQoS.unspecified.getter(v24);
  uint64_t v34 = _swiftEmptyArrayStorage;
  uint64_t v25 = sub_100156FEC( (unint64_t *)&qword_1003FADB0,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v26 = sub_100156B68((uint64_t *)&unk_1003F9A70);
  uint64_t v27 = sub_1001604E8( (unint64_t *)&qword_1003FADC0,  (uint64_t *)&unk_1003F9A70,  (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v34, v26, v27, v15, v25);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v20, v17, v22);
  _Block_release(v22);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v17, v15);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v20, v31);
  return swift_release(v36);
}

id sub_10028B418(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, const char *a5)
{
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  id result = (id)__chkstk_darwin(v10);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (a1)
  {
    id result = [a1 error];
    if (result)
    {
      uint64_t v15 = result;
      uint64_t v16 = sub_1001741A8();
      (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, v16, v10);
      swift_bridgeObjectRetain_n(a3, 2LL);
      id v17 = v15;
      uint64_t v18 = (os_log_s *)Logger.logObject.getter(v17);
      os_log_type_t v19 = static os_log_type_t.error.getter();
      int v20 = v19;
      if (os_log_type_enabled(v18, v19))
      {
        uint64_t v21 = swift_slowAlloc(32LL, -1LL);
        id v35 = a5;
        uint64_t v22 = v21;
        uint64_t v34 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
        uint64_t v36 = swift_slowAlloc(64LL, -1LL);
        uint64_t v38 = v36;
        *(_DWORD *)uint64_t v22 = 136315650;
        os_log_t v33 = v18;
        uint64_t v23 = _typeName(_:qualified:)(a4, 0LL);
        uint64_t v37 = sub_10015ADC4(v23, v24, &v38);
        int v32 = v20;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38, v22 + 4, v22 + 12);
        swift_bridgeObjectRelease();
        *(_WORD *)(v22 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v37 = sub_10015ADC4(a2, a3, &v38);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38, v22 + 14, v22 + 22);
        swift_bridgeObjectRelease_n(a3, 3LL);
        *(_WORD *)(v22 + 22) = 2112;
        id v25 = v17;
        uint64_t v26 = _swift_stdlib_bridgeErrorToNSError(v25);
        uint64_t v37 = v26;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38, v22 + 24, v22 + 32);
        uint64_t v27 = v34;
        *uint64_t v34 = v26;

        os_log_t v28 = v33;
        _os_log_impl((void *)&_mh_execute_header, v33, (os_log_type_t)v32, v35, (uint8_t *)v22, 0x20u);
        uint64_t v29 = sub_100156B68((uint64_t *)&unk_1003FB7E0);
        swift_arrayDestroy(v27, 1LL, v29);
        swift_slowDealloc(v27, -1LL, -1LL);
        uint64_t v30 = v36;
        swift_arrayDestroy(v36, 2LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v30, -1LL, -1LL);
        swift_slowDealloc(v22, -1LL, -1LL);
      }

      else
      {

        swift_bridgeObjectRelease_n(a3, 2LL);
      }

      return (id)(*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    }
  }

  return result;
}

uint64_t sub_10028B6FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100156B68(&qword_1003F9450);
  __chkstk_darwin(v6);
  uint64_t v8 = (void **)((char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v26 = type metadata accessor for HostedRoutingSourceSession(0LL);
  __chkstk_darwin(v26);
  uint64_t v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = *(void *)(a1 + 16);
  if (!v12) {
    return 0LL;
  }
  uint64_t v13 = (void *)(a1 + ((*(unsigned __int8 *)(v9 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)));
  uint64_t v27 = *(void *)(v9 + 72);
  v25[1] = a1;
  swift_bridgeObjectRetain();
  while (1)
  {
    uint64_t v14 = v13[1];
    if (*v13 == a2 && v14 == a3)
    {
      sub_1001A80F8((uint64_t)v13, (uint64_t)v11, type metadata accessor for HostedRoutingSourceSession);
    }

    else
    {
      char v16 = _stringCompareWithSmolCheck(_:_:expecting:)(*v13, v14, a2, a3, 0LL);
      sub_1001A80F8((uint64_t)v13, (uint64_t)v11, type metadata accessor for HostedRoutingSourceSession);
      if ((v16 & 1) == 0)
      {
        sub_1001A813C((uint64_t)v11, type metadata accessor for HostedRoutingSourceSession);
        goto LABEL_4;
      }
    }

    sub_1001A8360((uint64_t)&v11[*(int *)(v26 + 28)], (uint64_t)v8, &qword_1003F9450);
    uint64_t v17 = type metadata accessor for HostedRoutingSession.NowPlayingInfo(0LL);
    if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48LL))(v8, 1LL, v17) == 1)
    {
      sub_1001603DC((uint64_t)v8, &qword_1003F9450);
      sub_100255AB4();
LABEL_19:
      sub_1001A813C((uint64_t)v11, type metadata accessor for HostedRoutingSourceSession);
      swift_bridgeObjectRelease();
      goto LABEL_4;
    }

    id v19 = *v8;
    uint64_t v18 = v8[1];
    swift_bridgeObjectRetain();
    sub_1001A813C((uint64_t)v8, type metadata accessor for HostedRoutingSession.NowPlayingInfo);
    id v20 = sub_100255AB4();
    if (!v18) {
      goto LABEL_19;
    }
    if (v19 == v20 && v18 == v21) {
      break;
    }
    char v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v18, v20, v21, 0LL);
    swift_bridgeObjectRelease();
    sub_1001A813C((uint64_t)v11, type metadata accessor for HostedRoutingSourceSession);
    swift_bridgeObjectRelease();
    if ((v22 & 1) != 0) {
      goto LABEL_23;
    }
LABEL_4:
    uint64_t v13 = (void *)((char *)v13 + v27);
    if (!--v12)
    {
      uint64_t v23 = 0LL;
      goto LABEL_24;
    }
  }

  swift_bridgeObjectRelease();
  sub_1001A813C((uint64_t)v11, type metadata accessor for HostedRoutingSourceSession);
  swift_bridgeObjectRelease();
LABEL_23:
  uint64_t v23 = 1LL;
LABEL_24:
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_10028B9A8( void *a1, uint64_t a2, uint64_t a3, unint64_t a4, void (*a5)(void), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v104 = a7;
  uint64_t v105 = a8;
  uint64_t v106 = a6;
  uint64_t v107 = a5;
  uint64_t v102 = a3;
  unint64_t v103 = a4;
  id v100 = a1;
  uint64_t v101 = a10;
  uint64_t v11 = sub_100156B68(&qword_1003F8210);
  __chkstk_darwin(v11);
  uint64_t v13 = &v86[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v14 = type metadata accessor for NSNotificationCenter.Publisher(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = &v86[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v18 = sub_100156B68((uint64_t *)&unk_1003FBED0);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = &v86[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v108 = type metadata accessor for Logger(0LL);
  uint64_t v22 = *(void *)(v108 - 8);
  uint64_t v23 = __chkstk_darwin(v108);
  id v25 = &v86[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v23);
  if (a2)
  {
    uint64_t v27 = v107;
    uint64_t v28 = a2;
    swift_errorRetain(a2);
    uint64_t v29 = sub_1001741A8();
    uint64_t v30 = v108;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v22 + 16))(v25, v29, v108);
    unint64_t v31 = v103;
    swift_bridgeObjectRetain();
    swift_errorRetain(v28);
    swift_bridgeObjectRetain();
    uint64_t v32 = swift_errorRetain(v28);
    os_log_t v33 = (os_log_s *)Logger.logObject.getter(v32);
    os_log_type_t v34 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = swift_slowAlloc(32LL, -1LL);
      uint64_t v99 = v22;
      uint64_t v36 = v35;
      uint64_t v98 = (void *)swift_slowAlloc(8LL, -1LL);
      id v100 = (id)swift_slowAlloc(64LL, -1LL);
      uint64_t v110 = (uint64_t)v100;
      *(_DWORD *)uint64_t v36 = 136315650;
      uint64_t v37 = _typeName(_:qualified:)(v101, 0LL);
      uint64_t v109 = sub_10015ADC4(v37, v38, &v110);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v109, &v110, v36 + 4, v36 + 12);
      swift_bridgeObjectRelease();
      *(_WORD *)(v36 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v109 = sub_10015ADC4(v102, v31, &v110);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v109, &v110, v36 + 14, v36 + 22);
      swift_bridgeObjectRelease_n(v31, 3LL);
      *(_WORD *)(v36 + 22) = 2112;
      swift_errorRetain(v28);
      uint64_t v39 = _swift_stdlib_bridgeErrorToNSError(v28);
      uint64_t v109 = v39;
      uint64_t v27 = v107;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v109, &v110, v36 + 24, v36 + 32);
      id v40 = v98;
      *uint64_t v98 = v39;
      swift_errorRelease(v28);
      swift_errorRelease(v28);
      _os_log_impl( (void *)&_mh_execute_header,  v33,  v34,  "[%s] handoffFromApplication_new<%s> - failed to begin session with error: %@",  (uint8_t *)v36,  0x20u);
      uint64_t v41 = sub_100156B68((uint64_t *)&unk_1003FB7E0);
      swift_arrayDestroy(v40, 1LL, v41);
      swift_slowDealloc(v40, -1LL, -1LL);
      id v42 = v100;
      swift_arrayDestroy(v100, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v42, -1LL, -1LL);
      swift_slowDealloc(v36, -1LL, -1LL);

      (*(void (**)(_BYTE *, uint64_t))(v99 + 8))(v25, v108);
    }

    else
    {
      swift_bridgeObjectRelease_n(v31, 2LL);
      swift_errorRelease(v28);
      swift_errorRelease(v28);

      (*(void (**)(_BYTE *, uint64_t))(v22 + 8))(v25, v30);
    }

    swift_errorRetain(v28);
    uint64_t v60 = v105;
    swift_bridgeObjectRetain();
    uint64_t v61 = MRDFastSyncGroupSessionState.rawValue.getter(v28, v104, v60, 2LL);
    uint64_t v63 = v62;
    uint64_t v65 = v64;
    unsigned __int8 v67 = v66;
    v27();
    swift_errorRelease(v61);
    sub_100156BA8(v63, v65, v67);
    return swift_errorRelease(v28);
  }

  else
  {
    id v92 = v17;
    uint64_t v93 = v15;
    uint64_t v94 = v14;
    uint64_t v95 = v13;
    os_log_type_t v96 = v21;
    uint64_t v97 = v19;
    uint64_t v98 = (void *)v18;
    uint64_t v91 = a9;
    Class v43 = &v86[-v26];
    uint64_t v44 = sub_1001741A8();
    uint64_t v45 = v108;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v22 + 16))(v43, v44, v108);
    id v46 = v100;
    uint64_t v47 = v22;
    id v48 = v100;
    unint64_t v49 = v103;
    swift_bridgeObjectRetain_n(v103, 2LL);
    id v50 = v48;
    uint64_t v51 = (os_log_s *)Logger.logObject.getter(v50);
    int v52 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v51, (os_log_type_t)v52))
    {
      int v87 = v52;
      os_log_t v89 = v51;
      uint64_t v90 = v43;
      uint64_t v99 = v47;
      uint64_t v53 = swift_slowAlloc(32LL, -1LL);
      unint64_t v54 = (void *)swift_slowAlloc(8LL, -1LL);
      uint64_t v88 = swift_slowAlloc(64LL, -1LL);
      uint64_t v110 = v88;
      *(_DWORD *)uint64_t v53 = 136315650;
      uint64_t v55 = _typeName(_:qualified:)(v101, 0LL);
      uint64_t v109 = sub_10015ADC4(v55, v56, &v110);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v109, &v110, v53 + 4, v53 + 12);
      swift_bridgeObjectRelease();
      *(_WORD *)(v53 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v109 = sub_10015ADC4(v102, v49, &v110);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v109, &v110, v53 + 14, v53 + 22);
      swift_bridgeObjectRelease_n(v49, 3LL);
      *(_WORD *)(v53 + 22) = 2112;
      uint64_t v57 = (uint64_t)v95;
      id v58 = v96;
      if (v46)
      {
        uint64_t v109 = (uint64_t)v50;
        id v59 = v50;
      }

      else
      {
        uint64_t v109 = 0LL;
      }

      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v109, &v110, v53 + 24, v53 + 32);
      uint64_t v71 = v97;
      void *v54 = v46;

      os_log_t v72 = v89;
      _os_log_impl( (void *)&_mh_execute_header,  v89,  (os_log_type_t)v87,  "[%s] handoffFromApplication_new<%s> - began session: %@",  (uint8_t *)v53,  0x20u);
      uint64_t v73 = sub_100156B68((uint64_t *)&unk_1003FB7E0);
      swift_arrayDestroy(v54, 1LL, v73);
      swift_slowDealloc(v54, -1LL, -1LL);
      uint64_t v74 = v88;
      swift_arrayDestroy(v88, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v74, -1LL, -1LL);
      swift_slowDealloc(v53, -1LL, -1LL);

      (*(void (**)(_BYTE *, uint64_t))(v99 + 8))(v90, v108);
      uint64_t v69 = v106;
      uint64_t v70 = (uint64_t)v98;
    }

    else
    {

      swift_bridgeObjectRelease_n(v49, 2LL);
      (*(void (**)(_BYTE *, uint64_t))(v47 + 8))(v43, v45);
      uint64_t v69 = v106;
      uint64_t v71 = v97;
      uint64_t v70 = (uint64_t)v98;
      uint64_t v57 = (uint64_t)v95;
      id v58 = v96;
    }

    uint64_t v76 = v93;
    uint64_t v75 = v94;
    uint64_t v77 = v92;
    id v78 = [(id)objc_opt_self(NSNotificationCenter) defaultCenter];
    NSNotificationCenter.publisher(for:object:)(@"MRDMusicHandoffSessionDidFinishNotification", v46);

    uint64_t v110 = v91;
    uint64_t v79 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0LL);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56LL))(v57, 1LL, 1LL, v79);
    uint64_t v80 = sub_10016083C(0LL, (unint64_t *)&qword_1003F9F50, &OBJC_CLASS___OS_dispatch_queue_ptr);
    uint64_t v81 = sub_100156FEC( (unint64_t *)&unk_1003FBEE0,  (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher,  (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Publisher);
    unint64_t v82 = sub_100184978();
    Publisher.receive<A>(on:options:)(&v110, v57, v75, v80, v81, v82);
    sub_1001603DC(v57, &qword_1003F8210);
    (*(void (**)(_BYTE *, uint64_t))(v76 + 8))(v77, v75);
    uint64_t v83 = (void *)swift_allocObject(&unk_1003AC520, 48LL, 7LL);
    v83[2] = v107;
    v83[3] = v69;
    uint64_t v84 = v105;
    v83[4] = v104;
    v83[5] = v84;
    uint64_t v85 = sub_1001604E8( (unint64_t *)&qword_1003FBEF0,  (uint64_t *)&unk_1003FBED0,  (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    swift_bridgeObjectRetain();
    swift_retain(v69);
    sub_100156640((uint64_t)sub_10029172C, (uint64_t)v83, v70, v85);
    swift_release(v83);
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v71 + 8))(v58, v70);
  }

uint64_t sub_10028C260(char a1, int64_t a2, char a3, unint64_t a4)
{
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
LABEL_29:
        uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Division by zero",  16LL,  2LL,  "Swift/IntegerTypes.swift",  24LL,  2,  14377LL,  0);
LABEL_31:
        __break(1u);
        return result;
      }

      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    uint64_t v7 = a2;
  }

  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v15 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }

  uint64_t v10 = sub_100156B68(&qword_1003F8EC8);
  uint64_t v11 = *(void *)(type metadata accessor for HostedRoutingSourceSession(0LL) - 8);
  uint64_t v12 = *(void *)(v11 + 72);
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = (v13 + 32) & ~v13;
  uint64_t v15 = (void *)swift_allocObject(v10, v14 + v12 * v9, v13 | 7);
  size_t v16 = j__malloc_size(v15);
  if (!v12) {
    goto LABEL_29;
  }
  if (v16 - v14 == 0x8000000000000000LL && v12 == -1)
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Division results in an overflow",  31LL,  2LL,  "Swift/IntegerTypes.swift",  24LL,  2,  14384LL,  0);
    goto LABEL_31;
  }

  v15[2] = v8;
  v15[3] = 2 * ((uint64_t)(v16 - v14) / v12);
LABEL_19:
  uint64_t v18 = type metadata accessor for HostedRoutingSourceSession(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (unint64_t)v15 + v20;
  if ((a1 & 1) != 0)
  {
    unint64_t v22 = a4 + v20;
    if ((unint64_t)v15 < a4 || v21 >= v22 + *(void *)(v19 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack((char *)v15 + v20, v22, v8, v18);
    }

    else if (v15 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront((char *)v15 + v20);
    }

    *(void *)(a4 + 16) = 0LL;
  }

  else
  {
    sub_10028EB18(0LL, v8, v21, a4);
  }

  swift_bridgeObjectRelease();
  return (uint64_t)v15;
}

unint64_t sub_10028C468(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v2 + 40);
  uint64_t v5 = type metadata accessor for RoutingSessionConfiguration.ItemType(0LL);
  uint64_t v6 = sub_100156FEC( &qword_1003F94A0,  (uint64_t (*)(uint64_t))&type metadata accessor for RoutingSessionConfiguration.ItemType,  (uint64_t)&protocol conformance descriptor for RoutingSessionConfiguration.ItemType);
  uint64_t v7 = dispatch thunk of Hashable._rawHashValue(seed:)(v4, v5, v6);
  return sub_10028C5BC( a1,  v7,  (uint64_t (*)(uint64_t))&type metadata accessor for RoutingSessionConfiguration.ItemType,  &qword_1003F94A8,  (uint64_t)&protocol conformance descriptor for RoutingSessionConfiguration.ItemType);
}

unint64_t sub_10028C500(void *a1)
{
  if (a1)
  {
    Hasher._combine(_:)(1u);
    type metadata accessor for CFString(0LL);
    uint64_t v4 = v3;
    uint64_t v5 = sub_100156FEC( &qword_1003FCE60,  (uint64_t (*)(uint64_t))type metadata accessor for CFString,  (uint64_t)&unk_10034C738);
    id v6 = a1;
    _CFObject.hash(into:)(v9, v4, v5);
  }

  else
  {
    Hasher._combine(_:)(0);
  }

  Swift::Int v7 = Hasher._finalize()();
  return sub_10028C6EC((uint64_t)a1, v7);
}

unint64_t sub_10028C5BC( uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  unint64_t v22 = a4;
  uint64_t v23 = a5;
  uint64_t v6 = v5;
  uint64_t v20 = a1;
  unint64_t v21 = a3;
  uint64_t v8 = a3(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v20 - v10;
  uint64_t v12 = -1LL << *(_BYTE *)(v6 + 32);
  unint64_t v13 = a2 & ~v12;
  if (((*(void *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v13) & 1) != 0)
  {
    uint64_t v14 = ~v12;
    uint64_t v15 = *(void *)(v9 + 72);
    size_t v16 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    do
    {
      v16(v11, *(void *)(v6 + 48) + v15 * v13, v8);
      uint64_t v17 = sub_100156FEC(v22, v21, v23);
      char v18 = dispatch thunk of static Equatable.== infix(_:_:)(v11, v20, v8, v17);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      if ((v18 & 1) != 0) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v14;
    }

    while (((*(void *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v13) & 1) != 0);
  }

  return v13;
}

unint64_t sub_10028C6EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1LL << *(_BYTE *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if (((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v5) & 1) != 0)
  {
    uint64_t v6 = v2;
    uint64_t v8 = ~v4;
    do
    {
      uint64_t v9 = *(void **)(*(void *)(v6 + 48) + 8 * v5);
      if (v9)
      {
        if (a1)
        {
          type metadata accessor for CFString(0LL);
          uint64_t v11 = v10;
          uint64_t v12 = sub_100156FEC( &qword_1003FCE60,  (uint64_t (*)(uint64_t))type metadata accessor for CFString,  (uint64_t)&unk_10034C738);
          id v13 = v9;
          LOBYTE(v11) = static _CFObject.== infix(_:_:)(v13, a1, v11, v12);

          if ((v11 & 1) != 0) {
            return v5;
          }
        }
      }

      else if (!a1)
      {
        return v5;
      }

      unint64_t v5 = (v5 + 1) & v8;
    }

    while (((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v5) & 1) != 0);
  }

  return v5;
}

uint64_t sub_10028C7F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_10015CAD4(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0LL;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  uint64_t *v3 = 0x8000000000000000LL;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10028DC8C();
    uint64_t v9 = v12;
  }

  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 8 * v6);
  sub_1001B1630(v6, v9);
  uint64_t *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_10028C8C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_10015CAD4(a1, a2);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0LL;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  uint64_t *v3 = 0x8000000000000000LL;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10028E7C8();
    uint64_t v9 = v12;
  }

  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 8 * v6);
  sub_1001B1630(v6, v9);
  uint64_t *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

Swift::Int sub_10028C99C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  if (*(void *)(*v2 + 24) <= a1) {
    uint64_t v6 = a1;
  }
  else {
    uint64_t v6 = *(void *)(*v2 + 24);
  }
  sub_100156B68(&qword_1003FCE30);
  char v37 = a2;
  uint64_t v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  uint64_t v8 = v7;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_43;
  }
  uint64_t v9 = 1LL << *(_BYTE *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1LL << v9);
  }
  else {
    uint64_t v10 = -1LL;
  }
  unint64_t v11 = v10 & *(void *)(v5 + 64);
  int64_t v35 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  Swift::Int result = swift_retain(v5);
  int64_t v14 = 0LL;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_34;
    }

    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1LL))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return result;
    }

    if (v22 >= v35) {
      break;
    }
    uint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v35) {
        goto LABEL_36;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_36:
          swift_release(v5);
          if ((v37 & 1) == 0) {
            goto LABEL_43;
          }
          goto LABEL_39;
        }

        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1LL)) {
              goto LABEL_45;
            }
            if (v14 >= v35) {
              goto LABEL_36;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_33;
            }
          }
        }

        int64_t v14 = v25;
      }
    }

uint64_t sub_10028CCB0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for RoutingSessionConfiguration.ItemType(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = *v2;
  if (*(void *)(*v2 + 24) > a1) {
    a1 = *(void *)(*v2 + 24);
  }
  sub_100156B68((uint64_t *)&unk_1003FCE70);
  int v45 = a2;
  uint64_t v11 = static _DictionaryStorage.resize(original:capacity:move:)(v10, a1, a2);
  uint64_t v12 = v11;
  if (!*(void *)(v10 + 16)) {
    goto LABEL_43;
  }
  uint64_t v13 = 1LL << *(_BYTE *)(v10 + 32);
  uint64_t v14 = *(void *)(v10 + 64);
  Class v43 = (void *)(v10 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1LL << v13);
  }
  else {
    uint64_t v15 = -1LL;
  }
  unint64_t v16 = v15 & v14;
  uint64_t v41 = v2;
  int64_t v42 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v17 = v11 + 64;
  uint64_t result = swift_retain(v10);
  int64_t v19 = 0LL;
  for (i = v10; ; uint64_t v10 = i)
  {
    if (v16)
    {
      unint64_t v21 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v22 = v21 | (v19 << 6);
      goto LABEL_24;
    }

    int64_t v23 = v19 + 1;
    if (__OFADD__(v19, 1LL))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return result;
    }

    if (v23 >= v42) {
      break;
    }
    unint64_t v24 = v43;
    unint64_t v25 = v43[v23];
    ++v19;
    if (!v25)
    {
      int64_t v19 = v23 + 1;
      if (v23 + 1 >= v42) {
        goto LABEL_36;
      }
      unint64_t v25 = v43[v19];
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v42)
        {
LABEL_36:
          swift_release(v10);
          uint64_t v3 = v41;
          if ((v45 & 1) == 0) {
            goto LABEL_43;
          }
          goto LABEL_39;
        }

        unint64_t v25 = v43[v26];
        if (!v25)
        {
          while (1)
          {
            int64_t v19 = v26 + 1;
            if (__OFADD__(v26, 1LL)) {
              goto LABEL_45;
            }
            if (v19 >= v42) {
              goto LABEL_36;
            }
            unint64_t v25 = v43[v19];
            ++v26;
            if (v25) {
              goto LABEL_23;
            }
          }
        }

        int64_t v19 = v26;
      }
    }

Swift::Int sub_10028D044(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  if (*(void *)(*v2 + 24) <= a1) {
    uint64_t v6 = a1;
  }
  else {
    uint64_t v6 = *(void *)(*v2 + 24);
  }
  sub_100156B68(&qword_1003FCE38);
  char v38 = a2;
  uint64_t v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  uint64_t v8 = v7;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_43;
  }
  uint64_t v9 = 1LL << *(_BYTE *)(v5 + 32);
  unint64_t v36 = v3;
  uint64_t v37 = v5 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1LL << v9);
  }
  else {
    uint64_t v10 = -1LL;
  }
  unint64_t v11 = v10 & *(void *)(v5 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = v7 + 64;
  Swift::Int result = swift_retain(v5);
  int64_t v15 = 0LL;
  while (1)
  {
    if (v11)
    {
      unint64_t v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v22 = v21 | (v15 << 6);
      goto LABEL_34;
    }

    int64_t v23 = v15 + 1;
    if (__OFADD__(v15, 1LL))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return result;
    }

    if (v23 >= v12) {
      break;
    }
    unint64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v37 + 8 * v23);
    ++v15;
    if (!v25)
    {
      int64_t v15 = v23 + 1;
      if (v23 + 1 >= v12) {
        goto LABEL_36;
      }
      unint64_t v25 = *(void *)(v37 + 8 * v15);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v12)
        {
LABEL_36:
          swift_release(v5);
          uint64_t v3 = v36;
          if ((v38 & 1) == 0) {
            goto LABEL_43;
          }
          goto LABEL_39;
        }

        unint64_t v25 = *(void *)(v37 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v15 = v26 + 1;
            if (__OFADD__(v26, 1LL)) {
              goto LABEL_45;
            }
            if (v15 >= v12) {
              goto LABEL_36;
            }
            unint64_t v25 = *(void *)(v37 + 8 * v15);
            ++v26;
            if (v25) {
              goto LABEL_33;
            }
          }
        }

        int64_t v15 = v26;
      }
    }

unint64_t sub_10028D348(int64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RoutingSessionConfiguration.ItemType(0LL);
  uint64_t v38 = *(void *)(v4 - 8);
  unint64_t result = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = a2 + 64;
  uint64_t v9 = -1LL << *(_BYTE *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1LL << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    unint64_t result = _HashTable.previousHole(before:)(a1, a2 + 64, ~v9);
    if ((*(void *)(v8 + 8 * (v10 >> 6)) & (1LL << v10)) != 0)
    {
      unint64_t v37 = (result + 1) & v11;
      uint64_t v12 = *(void *)(v38 + 72);
      unint64_t v36 = *(void (**)(char *, unint64_t, uint64_t))(v38 + 16);
      uint64_t v13 = v11;
      do
      {
        uint64_t v14 = v8;
        uint64_t v15 = v12;
        int64_t v16 = v12 * v10;
        uint64_t v17 = v13;
        v36(v7, *(void *)(a2 + 48) + v12 * v10, v4);
        uint64_t v18 = *(void *)(a2 + 40);
        uint64_t v19 = sub_100156FEC( &qword_1003F94A0,  (uint64_t (*)(uint64_t))&type metadata accessor for RoutingSessionConfiguration.ItemType,  (uint64_t)&protocol conformance descriptor for RoutingSessionConfiguration.ItemType);
        uint64_t v20 = dispatch thunk of Hashable._rawHashValue(seed:)(v18, v4, v19);
        unint64_t result = (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v7, v4);
        uint64_t v13 = v17;
        unint64_t v21 = v20 & v17;
        if (a1 >= (uint64_t)v37)
        {
          if (v21 >= v37 && a1 >= (uint64_t)v21)
          {
LABEL_16:
            uint64_t v24 = *(void *)(a2 + 48);
            unint64_t result = v24 + v15 * a1;
            uint64_t v25 = v24 + v16;
            uint64_t v8 = v14;
            if (v15 * a1 < v16 || (uint64_t v12 = v15, result >= v25 + v15))
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack(result, v25, 1LL, v4);
LABEL_21:
              uint64_t v13 = v17;
              uint64_t v12 = v15;
            }

            else if (v15 * a1 != v16)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront(result);
              goto LABEL_21;
            }

            uint64_t v26 = *(void *)(a2 + 56);
            char v27 = (void *)(v26 + 8 * a1);
            unint64_t v28 = (void *)(v26 + 8 * v10);
            if (a1 != v10 || (a1 = v10, v27 >= v28 + 1))
            {
              *char v27 = *v28;
              a1 = v10;
            }

            goto LABEL_5;
          }
        }

        else if (v21 >= v37 || a1 >= (uint64_t)v21)
        {
          goto LABEL_16;
        }

        uint64_t v8 = v14;
        uint64_t v12 = v15;
LABEL_5:
        unint64_t v10 = (v10 + 1) & v13;
      }

      while (((*(void *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v10) & 1) != 0);
    }

    BOOL v29 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v30 = *v29;
    uint64_t v31 = (-1LL << a1) - 1;
  }

  else
  {
    BOOL v29 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v31 = *v29;
    uint64_t v30 = (-1LL << a1) - 1;
  }

  *BOOL v29 = v31 & v30;
  uint64_t v32 = *(void *)(a2 + 16);
  BOOL v33 = __OFSUB__(v32, 1LL);
  uint64_t v34 = v32 - 1;
  if (v33)
  {
    __break(1u);
  }

  else
  {
    *(void *)(a2 + 16) = v34;
    ++*(_DWORD *)(a2 + 36);
  }

  return result;
}

uint64_t sub_10028D5E8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_10015CAD4(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }

  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_10028DC8C();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_release(*(void *)(v19 + 8 * v12));
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }

uint64_t sub_10028D744(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = type metadata accessor for RoutingSessionConfiguration.ItemType(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  char v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_10028C468(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }

  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      uint64_t result = swift_release(*(void *)(v21 + 8 * v14));
      *(void *)(v21 + 8 * v14) = a1;
      return result;
    }

    goto LABEL_11;
  }

  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_10028DE40();
    goto LABEL_7;
  }

  sub_10028CCB0(v17, a3 & 1);
  unint64_t v23 = sub_10028C468(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v8);
    __break(1u);
    return result;
  }

  unint64_t v14 = v23;
  uint64_t v20 = *v4;
  if ((v18 & 1) != 0) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_10028DBF4(v14, (uint64_t)v11, a1, v20);
}

void sub_10028D8A0()
{
  uint64_t v0 = Notification.userInfo.getter();
  if (!v0)
  {
    __int128 v14 = 0u;
    __int128 v15 = 0u;
    goto LABEL_14;
  }

  uint64_t v1 = v0;
  if (!kMRMediaRemoteActiveEndpointTypeUserInfoKey)
  {
    __break(1u);
    goto LABEL_19;
  }

  v12[0] = static String._unconditionallyBridgeFromObjectiveC(_:)(kMRMediaRemoteActiveEndpointTypeUserInfoKey);
  v12[1] = v2;
  AnyHashable.init<A>(_:)(v12, &type metadata for String, &protocol witness table for String);
  if (*(void *)(v1 + 16) && (unint64_t v3 = sub_10015CAA4((uint64_t)v13), (v4 & 1) != 0))
  {
    sub_100160800(*(void *)(v1 + 56) + 32 * v3, (uint64_t)&v14);
  }

  else
  {
    __int128 v14 = 0u;
    __int128 v15 = 0u;
  }

  swift_bridgeObjectRelease();
  sub_100160990((uint64_t)v13);
  if (!*((void *)&v15 + 1))
  {
LABEL_14:
    sub_1001603DC((uint64_t)&v14, &qword_1003F9EE0);
    return;
  }

  if ((swift_dynamicCast(v13, &v14, (char *)&type metadata for Any + 8, &type metadata for Int, 6LL) & 1) == 0
    || v13[0])
  {
    return;
  }

  id v5 = [(id)objc_opt_self(MRDMediaRemoteServer) server];
  id v6 = [v5 routingServer];

  id v7 = [v6 systemEndpointController];
  if (!v7)
  {
LABEL_19:
    __break(1u);
    return;
  }

  id v8 = [v7 activeOutputDeviceUID:0];

  if (v8)
  {
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    uint64_t v11 = v10;
  }

  else
  {
    uint64_t v9 = 0LL;
    uint64_t v11 = 0LL;
  }

  sub_100268D6C(v9, v11);
  swift_bridgeObjectRelease();
}

uint64_t sub_10028DA70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRelease(a3);
    return swift_bridgeObjectRelease(a2);
  }

  return result;
}

uint64_t sub_10028DAA0(uint64_t a1, uint64_t a2, char a3, double a4)
{
  id v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_10015CAD4(a1, a2);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }

  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_10028E7C8();
LABEL_7:
    char v18 = (void *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      *(double *)(v18[7] + 8 * v12) = a4;
      return result;
    }

uint64_t sub_10028DBF4(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1LL << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = type metadata accessor for RoutingSessionConfiguration.ItemType(0LL);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32LL))( v8 + *(void *)(*(void *)(v9 - 8) + 72LL) * a1,  a2,  v9);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1LL);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

void *sub_10028DC8C()
{
  uint64_t v1 = v0;
  sub_100156B68(&qword_1003FCE30);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)(*v0);
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release(v2);
    *uint64_t v1 = v4;
    return result;
  }

  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1LL << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  int64_t v9 = 0LL;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1LL << *(_BYTE *)(v2 + 32);
  uint64_t v11 = -1LL;
  if (v10 < 64) {
    uint64_t v11 = ~(-1LL << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }

    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1LL))
    {
      __break(1u);
      goto LABEL_28;
    }

    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }

void *sub_10028DE40()
{
  uint64_t v1 = type metadata accessor for RoutingSessionConfiguration.ItemType(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_100156B68((uint64_t *)&unk_1003FCE70);
  int64_t v24 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = static _DictionaryStorage.copy(original:)(*v0);
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release(v5);
    uint64_t *v24 = v7;
    return result;
  }

  uint64_t result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1LL << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  uint64_t v25 = v5 + 64;
  int64_t v11 = 0LL;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1LL << *(_BYTE *)(v5 + 32);
  uint64_t v13 = -1LL;
  if (v12 < 64) {
    uint64_t v13 = ~(-1LL << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  int64_t v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }

    int64_t v20 = v11 + 1;
    if (__OFADD__(v11, 1LL))
    {
      __break(1u);
      goto LABEL_28;
    }

    if (v20 >= v26) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      int64_t v11 = v20 + 1;
      if (v20 + 1 >= v26) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v25 + 8 * v11);
      if (!v21) {
        break;
      }
    }

uint64_t sub_10028E070()
{
  uint64_t v1 = type metadata accessor for RoutingInteraction(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8LL;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(void *)(v0 + v6));
  swift_bridgeObjectRelease(*(void *)(v0 + v7 + 8));
  return swift_deallocObject(v0, ((v7 + 23) & 0xFFFFFFFFFFFFFFF8LL) + 8, v5);
}

uint64_t sub_10028E11C(os_log_s *a1, char *a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for RoutingInteraction(0LL) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24LL) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  return sub_100266124( a1,  a2,  *(void **)(v2 + 16),  v2 + v6,  *(void *)(v2 + v7),  *(void *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8LL)),  *(void **)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8LL) + 8),  *(void *)(v2 + ((((v7 + 15) & 0xFFFFFFFFFFFFFFF8LL) + 23) & 0xFFFFFFFFFFFFF8LL)));
}

uint64_t sub_10028E19C()
{
  return type metadata accessor for HostedRoutingSessionDataSource(0LL);
}

uint64_t type metadata accessor for HostedRoutingSessionDataSource(uint64_t a1)
{
  uint64_t result = qword_1004036C8;
  if (!qword_1004036C8) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HostedRoutingSessionDataSource);
  }
  return result;
}

uint64_t sub_10028E1E0(uint64_t a1)
{
  v4[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  uint64_t result = type metadata accessor for RoutingMode(319LL);
  if (v3 <= 0x3F)
  {
    void v4[3] = *(void *)(result - 8) + 64LL;
    v4[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[5] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[6] = &unk_100350790;
    v4[7] = &unk_1003507A8;
    v4[8] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[9] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[10] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[11] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[12] = (char *)&value witness table for Builtin.NativeObject + 64;
    void v4[13] = &unk_1003507C0;
    v4[14] = &unk_1003507A8;
    v4[15] = &unk_1003507D8;
    v4[16] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[17] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[18] = &unk_1003507F0;
    return swift_updateClassMetadata2(a1, 256LL, 19LL, v4, a1 + 80);
  }

  return result;
}

uint64_t type metadata accessor for HostedRoutingSessionDataSource.EndpointEntry()
{
  return objc_opt_self(&OBJC_CLASS____TtCC12mediaremoted30HostedRoutingSessionDataSourceP33_7AD62D23D4E76D121DFFD6406CAA903C13EndpointEntry);
}

uint64_t storeEnumTagSinglePayload for HostedRoutingSessionDataSource.EndpointEntry.DataSource( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_10028E324 + 4 * byte_1003506D5[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10028E358 + 4 * byte_1003506D0[v4]))();
}

uint64_t sub_10028E358(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10028E360(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x10028E368LL);
  }
  return result;
}

uint64_t sub_10028E374(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x10028E37CLL);
  }
  *(_BYTE *)uint64_t result = a2 + 1;
  return result;
}

uint64_t sub_10028E380(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10028E388(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HostedRoutingSessionDataSource.EndpointEntry.DataSource()
{
  return &type metadata for HostedRoutingSessionDataSource.EndpointEntry.DataSource;
}

uint64_t getEnumTagSinglePayload for HostedRoutingSessionDataSource.EndpointEntry.State( unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }

  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }

    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }

uint64_t storeEnumTagSinglePayload for HostedRoutingSessionDataSource.EndpointEntry.State( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFD) {
    return ((uint64_t (*)(void))((char *)&loc_10028E480 + 4 * byte_1003506DF[v4]))();
  }
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_10028E4B4 + 4 * byte_1003506DA[v4]))();
}

uint64_t sub_10028E4B4(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10028E4BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x10028E4C4LL);
  }
  return result;
}

uint64_t sub_10028E4D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x10028E4D8LL);
  }
  *(_BYTE *)uint64_t result = a2 + 2;
  return result;
}

uint64_t sub_10028E4DC(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10028E4E4(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HostedRoutingSessionDataSource.EndpointEntry.State()
{
  return &type metadata for HostedRoutingSessionDataSource.EndpointEntry.State;
}

uint64_t destroy for HostedRoutingSessionDataSource.SessionElements(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(void *)(a1 + 16));
}

void *_s12mediaremoted30HostedRoutingSessionDataSourceC15SessionElementsVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[2];
  a1[2] = v4;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

void *assignWithCopy for HostedRoutingSessionDataSource.SessionElements(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  uint64_t v6 = a2[2];
  uint64_t v7 = a1[2];
  a1[2] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  return a1;
}

void *assignWithTake for HostedRoutingSessionDataSource.SessionElements(void *a1, uint64_t a2)
{
  *a1 = *(void *)a2;
  swift_bridgeObjectRelease(a1[1]);
  uint64_t v4 = a1[2];
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for HostedRoutingSessionDataSource.SessionElements(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HostedRoutingSessionDataSource.SessionElements( uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0LL;
    *(void *)(result + 16) = 0LL;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 24) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for HostedRoutingSessionDataSource.SessionElements()
{
  return &type metadata for HostedRoutingSessionDataSource.SessionElements;
}

unint64_t sub_10028E6AC()
{
  unint64_t result = qword_100403760[0];
  if (!qword_100403760[0])
  {
    unint64_t result = swift_getWitnessTable(&unk_100350870, &type metadata for HostedRoutingSessionDataSource.SessionElements);
    atomic_store(result, qword_100403760);
  }

  return result;
}

unint64_t sub_10028E6F4()
{
  unint64_t result = qword_100403870;
  if (!qword_100403870)
  {
    unint64_t result = swift_getWitnessTable( &unk_100350940,  &type metadata for HostedRoutingSessionDataSource.EndpointEntry.State);
    atomic_store(result, (unint64_t *)&qword_100403870);
  }

  return result;
}

unint64_t sub_10028E73C()
{
  unint64_t result = qword_100403A00[0];
  if (!qword_100403A00[0])
  {
    unint64_t result = swift_getWitnessTable( &unk_1003509D0,  &type metadata for HostedRoutingSessionDataSource.EndpointEntry.DataSource);
    atomic_store(result, qword_100403A00);
  }

  return result;
}

unint64_t sub_10028E784()
{
  unint64_t result = qword_100403C10[0];
  if (!qword_100403C10[0])
  {
    uint64_t v1 = type metadata accessor for HostedRoutingSessionDataSource.EndpointEntry();
    unint64_t result = swift_getWitnessTable(&unk_1003509F8, v1);
    atomic_store(result, qword_100403C10);
  }

  return result;
}

void *sub_10028E7C8()
{
  uint64_t v1 = v0;
  sub_100156B68(&qword_1003FCE38);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)(*v0);
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release(v2);
    *uint64_t v1 = v4;
    return result;
  }

  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1LL << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  int64_t v9 = 0LL;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1LL << *(_BYTE *)(v2 + 32);
  uint64_t v11 = -1LL;
  if (v10 < 64) {
    uint64_t v11 = ~(-1LL << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }

    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1LL))
    {
      __break(1u);
      goto LABEL_28;
    }

    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }

uint64_t sub_10028E974(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRetain(a2);
    return swift_bridgeObjectRetain(a3);
  }

  return result;
}

uint64_t sub_10028E9A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  if (*(_BYTE *)(a3 + 16) == 2)
  {
    uint64_t v9 = *(void *)(v4 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_identifierStore);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v9 + 256LL);
    swift_retain(v9);
    uint64_t v11 = v10(a1, a2);
    uint64_t v13 = v12;
    swift_release(v9);
    unint64_t v14 = *(void **)(a3 + 64);
    if ((*(_BYTE *)(a3 + 80) & 1) != 0)
    {
      id v15 = [v14 resolvedOutputDevices];
    }

    else
    {
      uint64_t v20 = *(void **)(a3 + 72);
      id v21 = v14;
      id v15 = [v20 outputDevices];
    }

    id v22 = v15;
    if (v22)
    {
      uint64_t v23 = sub_10016083C(0LL, (unint64_t *)&qword_1003F8300, &OBJC_CLASS___MRAVOutputDevice_ptr);
      int64_t v24 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v22, v23);
    }

    else
    {
      int64_t v24 = _swiftEmptyArrayStorage;
    }

    swift_bridgeObjectRetain();
    sub_10024B354(v11, v13, v14, (uint64_t)v24, a1, a2, a4);
    uint64_t v16 = type metadata accessor for HostedRoutingSourceSession(0LL);
    unint64_t v17 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56LL);
    uint64_t v18 = a4;
    uint64_t v19 = 0LL;
  }

  else
  {
    uint64_t v16 = type metadata accessor for HostedRoutingSourceSession(0LL);
    unint64_t v17 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56LL);
    uint64_t v18 = a4;
    uint64_t v19 = 1LL;
  }

  return v17(v18, v19, 1LL, v16);
}

uint64_t sub_10028EB18(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }

  if (v4 < 0)
  {
LABEL_9:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize with negative count",  51LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1090LL,  0);
    goto LABEL_11;
  }

  uint64_t v8 = *(void *)(type metadata accessor for HostedRoutingSourceSession(0LL) - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v8 + 72);
  unint64_t v11 = a4 + ((v9 + 32) & ~v9) + v10 * a1;
  uint64_t v12 = v10 * v4;
  unint64_t v13 = a3 + v12;
  unint64_t v14 = v11 + v12;
  if (v11 >= v13 || v14 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v13;
  }

  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
LABEL_11:
  __break(1u);
  return result;
}

void *sub_10028EC30(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t))
{
  unint64_t v37 = a2;
  uint64_t v3 = sub_100156B68(&qword_1003F9518);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for HostedRoutingSourceSession(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v33 = (uint64_t)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  uint64_t v32 = (uint64_t)&v31 - v10;
  uint64_t v11 = *(void *)(a1 + 64);
  uint64_t v35 = a1 + 64;
  uint64_t v12 = 1LL << *(_BYTE *)(a1 + 32);
  uint64_t v13 = -1LL;
  if (v12 < 64) {
    uint64_t v13 = ~(-1LL << v12);
  }
  unint64_t v14 = v13 & v11;
  int64_t v36 = (unint64_t)(v12 + 63) >> 6;
  uint64_t result = (void *)swift_bridgeObjectRetain();
  int64_t v16 = 0LL;
  uint64_t v34 = _swiftEmptyArrayStorage;
  if (!v14) {
    goto LABEL_7;
  }
LABEL_4:
  unint64_t v17 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  for (unint64_t i = v17 | (v16 << 6); ; unint64_t i = __clz(__rbit64(v24)) + (v16 << 6))
  {
    uint64_t v19 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    uint64_t v22 = *(void *)(*(void *)(a1 + 56) + 8 * i);
    swift_bridgeObjectRetain();
    swift_retain(v22);
    v37(v20, v21, v22);
    swift_release(v22);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1LL, v6) == 1)
    {
      uint64_t result = (void *)sub_1001603DC((uint64_t)v5, &qword_1003F9518);
      if (v14) {
        goto LABEL_4;
      }
    }

    else
    {
      uint64_t v26 = v32;
      sub_1001A81D4((uint64_t)v5, v32, type metadata accessor for HostedRoutingSourceSession);
      sub_1001A81D4(v26, v33, type metadata accessor for HostedRoutingSourceSession);
      if ((swift_isUniquelyReferenced_nonNull_native(v34) & 1) == 0) {
        uint64_t v34 = (void *)sub_10028C260(0, v34[2] + 1LL, 1, (unint64_t)v34);
      }
      unint64_t v28 = v34[2];
      unint64_t v27 = v34[3];
      if (v28 >= v27 >> 1) {
        uint64_t v34 = (void *)sub_10028C260(v27 > 1, v28 + 1, 1, (unint64_t)v34);
      }
      uint64_t v29 = v33;
      uint64_t v30 = v34;
      v34[2] = v28 + 1;
      uint64_t result = (void *)sub_1001A81D4( v29,  (uint64_t)v30 + ((*(unsigned __int8 *)(v7 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))
                         + *(void *)(v7 + 72) * v28,
                           type metadata accessor for HostedRoutingSourceSession);
      if (v14) {
        goto LABEL_4;
      }
    }

uint64_t sub_10028EFA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10028EFB4(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_10028EFBC()
{
  return swift_deallocObject(v0, 72LL, 7LL);
}

uint64_t sub_10028EFF8(uint64_t a1)
{
  return sub_10026B19C( a1,  *(void *)(v1 + 16),  *(void *)(v1 + 24),  *(void *)(v1 + 32),  *(void *)(v1 + 40),  *(void *)(v1 + 48),  *(void *)(v1 + 56),  *(void *)(v1 + 64));
}

uint64_t sub_10028F00C()
{
  swift_bridgeObjectRelease(*(void *)(v0 + 64));
  return swift_deallocObject(v0, 72LL, 7LL);
}

void sub_10028F050()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v3 = v0[5];
  uint64_t v5 = (void *)v0[6];
  uint64_t v6 = v0[7];
  uint64_t v7 = (void *)v0[8];
  uint64_t v8 = (uint64_t *)(v1 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_endpoints);
  swift_beginAccess(v1 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_endpoints, v41, 0LL, 0LL);
  uint64_t v9 = *v8;
  if (*(void *)(v9 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v10 = sub_10015CAD4(v2, v4);
    if ((v11 & 1) != 0)
    {
      uint64_t v12 = *(void *)(*(void *)(v9 + 56) + 8 * v10);
      swift_retain(v12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v13 = *(void *)(v3 + 48);
      uint64_t v14 = *(void *)(v3 + 56);
      uint64_t v15 = *(void *)(v12 + 48);
      uint64_t v16 = *(void *)(v12 + 56);
      BOOL v17 = v13 == v15 && v14 == v16;
      if (v17 || (_stringCompareWithSmolCheck(_:_:expecting:)(v13, v14, v15, v16, 0LL) & 1) != 0)
      {
        aBlock._uint64_t countAndFlagsBits = v6;
        uint64_t v18 = (void *)objc_opt_self(&OBJC_CLASS___NSNotificationCenter);
        id v19 = [v18 defaultCenter];
        uint64_t v20 = *(void **)(v3 + 64);
        uint64_t v21 = swift_allocObject(&unk_1003ABBC0, 24LL, 7LL);
        swift_weakInit(v21 + 16, v1);
        uint64_t v22 = swift_allocObject(&unk_1003ABBE8, 24LL, 7LL);
        swift_weakInit(v22 + 16, v3);
        int64_t v23 = (void *)swift_allocObject(&unk_1003ABC10, 40LL, 7LL);
        v23[2] = v5;
        v23[3] = v21;
        v23[4] = v22;
        uint64_t v39 = sub_10028F4B4;
        uint64_t v40 = v23;
        aBlock._object = _NSConcreteStackBlock;
        unint64_t v36 = 1107296256LL;
        unint64_t v37 = sub_10026C260;
        uint64_t v38 = &unk_1003ABC28;
        unint64_t v24 = _Block_copy(&aBlock._object);
        int64_t v25 = v40;
        id v26 = v20;
        id v27 = v5;
        swift_release(v25);
        id v28 = [v19 addObserverForName:0 object:v26 queue:0 usingBlock:v24];
        _Block_release(v24);

        if ([*(id *)(v3 + 64) isConnected])
        {
          *(_BYTE *)(v3 + 16) = 2;
          uint64_t v29 = *(void *)(v3 + 24);
          *(void *)(v3 + 24) = v28;
          swift_unknownObjectRetain(v28);
          swift_unknownObjectRelease(v29);
          uint64_t v30 = *(void *)(v3 + 32);
          uint64_t v31 = *(void *)(v3 + 40);
          swift_beginAccess( v1 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_failedEndpointReconnectIntervals,  &aBlock._object,  33LL,  0LL);
          swift_bridgeObjectRetain();
          sub_10028C8C0(v30, v31);
          swift_endAccess(&aBlock._object);
          swift_bridgeObjectRelease();
          aBlock._object = 0LL;
          unint64_t v36 = 0xE000000000000000LL;
          _StringGuts.grow(_:)(39LL);
          swift_bridgeObjectRelease();
          aBlock._object = (void *)0x547463656E6E6F63LL;
          unint64_t v36 = 0xEF3C7972746E456FLL;
          v32._uint64_t countAndFlagsBits = aBlock._countAndFlagsBits;
          v32._object = v7;
          String.append(_:)(v32);
          v33._object = (void *)0x8000000100340390LL;
          v33._uint64_t countAndFlagsBits = 0xD000000000000016LL;
          String.append(_:)(v33);
          sub_10026CE38((uint64_t)aBlock._object, v36);
          swift_bridgeObjectRelease();
        }

        else
        {
          id v34 = [v18 defaultCenter];
          [v34 removeObserver:v28];

          sub_10026C304((void *)v3);
        }

        swift_unknownObjectRelease(v28);
      }

      swift_release(v12);
    }

    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }

uint64_t sub_10028F3C4()
{
  return swift_deallocObject(v0, 72LL, 7LL);
}

uint64_t sub_10028F400()
{
  return sub_100290E84(sub_10026B954);
}

uint64_t sub_10028F40C()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

void sub_10028F438()
{
}

uint64_t sub_10028F45C()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_10028F480()
{
  swift_release(*(void *)(v0 + 24));
  swift_release(*(void *)(v0 + 32));
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_10028F4B4(uint64_t a1)
{
  return sub_10026C048(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_10028F4C0()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t sub_10028F4F4()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  unint64_t v3 = v0[5];
  uint64_t v4 = v0[2] + 16LL;
  swift_beginAccess(v4, v15, 0LL, 0LL);
  uint64_t result = swift_weakLoadStrong(v4);
  if (result)
  {
    uint64_t v6 = (void *)result;
    uint64_t v7 = v1 + 16;
    swift_beginAccess(v7, &v14, 0LL, 0LL);
    uint64_t Strong = swift_weakLoadStrong(v7);
    if (!Strong)
    {
      uint64_t v9 = v6;
      return swift_release(v9);
    }

    uint64_t v9 = (void *)Strong;
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(MRAVEndpointDidDisconnectNotification);
    if (v10 == v2 && v11 == v3)
    {
      swift_bridgeObjectRelease();
    }

    else
    {
      char v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v2, v3, v10, v11, 0LL);
      swift_bridgeObjectRelease();
      if ((v13 & 1) == 0) {
        goto LABEL_12;
      }
    }

    sub_10026C304(v9);
LABEL_12:
    sub_10026CE38(v2, v3);
    swift_release(v6);
    return swift_release(v9);
  }

  return result;
}

void *sub_10028F5FC(uint64_t a1, uint64_t a2)
{
  uint64_t v29 = type metadata accessor for HostedRoutingItem(0LL);
  uint64_t v5 = __chkstk_darwin(v29);
  uint64_t v28 = (uint64_t)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)v25 - v8;
  __chkstk_darwin(v7);
  uint64_t v12 = (char *)v25 - v11;
  uint64_t result = _swiftEmptyArrayStorage;
  uint64_t v30 = _swiftEmptyArrayStorage;
  uint64_t v14 = *(void *)(a1 + 16);
  if (v14)
  {
    uint64_t v15 = *(unsigned __int8 *)(v10 + 80);
    uint64_t v16 = *(void *)(v10 + 72);
    v25[1] = v2;
    uint64_t v26 = (v15 + 32) & ~v15;
    uint64_t v17 = a1 + v26;
    uint64_t v27 = a2;
    while (1)
    {
      sub_1001A80F8(v17, (uint64_t)v12, type metadata accessor for HostedRoutingItem);
      int v18 = v12[*(int *)(v29 + 36)];
      sub_1001A80F8((uint64_t)v12, (uint64_t)v9, type metadata accessor for HostedRoutingItem);
      if (v18 == 1)
      {
        uint64_t v19 = sub_10024A474();
        char v21 = sub_100158DD4(v19, v20, a2);
        swift_bridgeObjectRelease();
        sub_1001A813C((uint64_t)v9, type metadata accessor for HostedRoutingItem);
        if ((v21 & 1) != 0)
        {
          sub_1001A81D4((uint64_t)v12, v28, type metadata accessor for HostedRoutingItem);
          uint64_t v22 = v30;
          if ((swift_isUniquelyReferenced_nonNull_native(v30) & 1) == 0)
          {
            sub_1001A3FBC(0, v22[2] + 1LL, 1);
            uint64_t v22 = v30;
          }

          unint64_t v24 = v22[2];
          unint64_t v23 = v22[3];
          if (v24 >= v23 >> 1)
          {
            sub_1001A3FBC(v23 > 1, v24 + 1, 1);
            uint64_t v22 = v30;
          }

          v22[2] = v24 + 1;
          sub_1001A81D4(v28, (uint64_t)v22 + v26 + v24 * v16, type metadata accessor for HostedRoutingItem);
          a2 = v27;
          goto LABEL_5;
        }
      }

      else
      {
        sub_1001A813C((uint64_t)v9, type metadata accessor for HostedRoutingItem);
      }

      sub_1001A813C((uint64_t)v12, type metadata accessor for HostedRoutingItem);
LABEL_5:
      v17 += v16;
      if (!--v14) {
        return v30;
      }
    }
  }

  return result;
}

uint64_t sub_10028F81C()
{
  return sub_1002619F4(v0, (uint64_t)sub_10029256C, (uint64_t)&unk_1003ABD40);
}

uint64_t sub_10028F844()
{
  return sub_1002619F4(v0, (uint64_t)sub_10028F86C, (uint64_t)&unk_1003ABD18);
}

uint64_t sub_10028F874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(type metadata accessor for ContinuousClock(0LL) - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = *(void *)(v9 + 64);
  uint64_t v12 = *(void *)(type metadata accessor for ContinuousClock.Instant(0LL) - 8);
  unint64_t v13 = (v10 + v11 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v14 = (*(void *)(v12 + 64) + v13 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  return sub_10026F8A4( a1,  a2,  a3,  a4,  v4 + v10,  v4 + v13,  *(void *)(v4 + v14),  *(void *)(v4 + v14 + 8),  *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + ((v14 + 23) & 0xFFFFFFFFFFFFFFF8LL)),  *(void *)(v4 + ((v14 + 23) & 0xFFFFFFFFFFFFFFF8LL) + 8),  *(void *)(v4 + ((((v14 + 23) & 0xFFFFFFFFFFFFFFF8LL) + 23) & 0xFFFFFFFFFFFFF8LL)));
}

uint64_t sub_10028F950(uint64_t a1)
{
  return sub_10028FF98(a1, (uint64_t)&unk_1003ABDF0, (uint64_t (*)(void))sub_10028F970);
}

uint64_t sub_10028F964()
{
  return sub_1002916FC((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_10028F970(uint64_t a1)
{
  return sub_1002754B0(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_10028F980()
{
  uint64_t v1 = type metadata accessor for ContinuousClock(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = type metadata accessor for ContinuousClock.Instant(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v13 = v3 | v8 | 7;
  unint64_t v10 = (*(void *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v11 = (v10 + 23) & 0xFFFFFFFFFFFFFFF8LL;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  swift_bridgeObjectRelease(*(void *)(v0 + v10 + 8));
  swift_release(*(void *)(v0 + v11 + 8));
  return swift_deallocObject(v0, ((v11 + 23) & 0xFFFFFFFFFFFFFFF8LL) + 8, v13);
}

uint64_t sub_10028FA74(char a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for ContinuousClock(0LL) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(type metadata accessor for ContinuousClock.Instant(0LL) - 8);
  unint64_t v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = (*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  return sub_100274BBC( a1,  v1 + v4,  v1 + v7,  *(void *)(v1 + v8),  *(void *)(v1 + v8 + 8),  *(void (**)(void, void, void, void))(v1 + ((v8 + 23) & 0xFFFFFFFFFFFFFFF8LL)),  *(void *)(v1 + ((v8 + 23) & 0xFFFFFFFFFFFFFFF8LL) + 8),  *(void *)(v1 + ((((v8 + 23) & 0xFFFFFFFFFFFFFFF8LL) + 23) & 0xFFFFFFFFFFFFF8LL)));
}

uint64_t sub_10028FB10()
{
  return swift_deallocObject(v0, 72LL, 7LL);
}

uint64_t sub_10028FB4C()
{
  uint64_t v1 = (uint64_t (*)(void))v0[3];
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  unint64_t v4 = (void (*)(void))v0[7];
  uint64_t v5 = v0[2] + 16LL;
  swift_beginAccess(v5, v13, 0LL, 0LL);
  uint64_t result = swift_weakLoadStrong(v5);
  if (result)
  {
    uint64_t v7 = result;
    (*(void (**)(void))(*(void *)result + 328LL))();
    char v8 = v1();
    swift_bridgeObjectRelease();
    if ((v8 & 1) != 0)
    {
      swift_beginAccess( v7 + OBJC_IVAR____TtC12mediaremoted30HostedRoutingSessionDataSource_internalSessionObservers,  v12,  33LL,  0LL);
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_100180288(v2, v3);
      uint64_t v11 = v10;
      swift_endAccess(v12);
      swift_bridgeObjectRelease();
      sub_100162944(v9, v11);
      v4(0LL);
    }

    return swift_release(v7);
  }

  return result;
}

uint64_t sub_10028FC64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  uint64_t v6 = a1 + 64;
  uint64_t v7 = 1LL << *(_BYTE *)(a1 + 32);
  uint64_t v8 = -1LL;
  if (v7 < 64) {
    uint64_t v8 = ~(-1LL << v7);
  }
  unint64_t v9 = v8 & *(void *)(a1 + 64);
  int64_t v31 = (unint64_t)(v7 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v11 = 0LL;
  uint64_t v30 = result;
  uint64_t v29 = v6;
  while (1)
  {
LABEL_4:
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v11 << 6);
      goto LABEL_17;
    }

    if (__OFADD__(v11++, 1LL)) {
      break;
    }
    if (v11 >= v31) {
      goto LABEL_35;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v11);
    if (!v15)
    {
      int64_t v16 = v11 + 1;
      if (v11 + 1 >= v31) {
        goto LABEL_35;
      }
      unint64_t v15 = *(void *)(v6 + 8 * v16);
      if (v15) {
        goto LABEL_15;
      }
      int64_t v16 = v11 + 2;
      if (v11 + 2 >= v31) {
        goto LABEL_35;
      }
      unint64_t v15 = *(void *)(v6 + 8 * v16);
      if (v15) {
        goto LABEL_15;
      }
      int64_t v16 = v11 + 3;
      if (v11 + 3 >= v31) {
        goto LABEL_35;
      }
      unint64_t v15 = *(void *)(v6 + 8 * v16);
      if (v15)
      {
LABEL_15:
        int64_t v11 = v16;
      }

      else
      {
        int64_t v28 = v11 + 4;
        if (v11 + 4 >= v31)
        {
LABEL_35:
          swift_release(v5);
          return 0LL;
        }

        unint64_t v15 = *(void *)(v6 + 8 * v28);
        for (v11 += 4LL; !v15; ++v28)
        {
          int64_t v11 = v28 + 1;
          if (__OFADD__(v28, 1LL)) {
            goto LABEL_37;
          }
          if (v11 >= v31) {
            goto LABEL_35;
          }
          unint64_t v15 = *(void *)(v6 + 8 * v11);
        }
      }
    }

    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v11 << 6);
LABEL_17:
    uint64_t v17 = *(void *)(*(void *)(v5 + 56) + 8 * v13);
    int v18 = *(uint64_t (**)(uint64_t))(*(void *)v17 + 224LL);
    uint64_t v19 = swift_retain(v17);
    uint64_t v20 = v18(v19);
    uint64_t v21 = *(void *)(v20 + 16);
    if (v21)
    {
      uint64_t v22 = *(void *)(type metadata accessor for HostedRoutingItem(0LL) - 8);
      uint64_t v23 = *(void *)(v22 + 72);
      unint64_t v24 = (uint64_t *)(v20
      while (1)
      {
        uint64_t v25 = *(v24 - 1);
        uint64_t v26 = *v24;
        BOOL v27 = v25 == a2 && v26 == a3;
        if (v27 || (_stringCompareWithSmolCheck(_:_:expecting:)(v25, v26, a2, a3, 0LL) & 1) != 0) {
          break;
        }
        unint64_t v24 = (uint64_t *)((char *)v24 + v23);
        if (!--v21)
        {
          swift_release(v17);
          uint64_t result = swift_bridgeObjectRelease();
          uint64_t v5 = v30;
          uint64_t v6 = v29;
          goto LABEL_4;
        }
      }

      swift_release(v30);
      swift_bridgeObjectRelease();
      return v17;
    }

    swift_release(v17);
    uint64_t result = swift_bridgeObjectRelease();
  }

  __break(1u);
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_10028FEB0(uint64_t a1)
{
  return sub_10028FF98(a1, (uint64_t)&unk_1003ABF58, (uint64_t (*)(void))sub_10028FED0);
}

uint64_t sub_10028FEC4()
{
  return sub_1002916FC((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_10028FED0(uint64_t a1)
{
  return sub_10027567C(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_10028FEE0()
{
  uint64_t v1 = type metadata accessor for RoutingInteraction(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  swift_release(*((void *)v0 + 3));
  swift_bridgeObjectRelease(*((void *)v0 + 5));
  swift_release(*((void *)v0 + 6));
  (*(void (**)(char *, uint64_t))(v2 + 8))(&v0[v4], v1);
  swift_bridgeObjectRelease(*(void *)&v0[v6 + 8]);
  return swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t sub_10028FF84(uint64_t a1)
{
  return sub_10028FF98(a1, (uint64_t)&unk_1003ABFD0, (uint64_t (*)(void))sub_100290134);
}

uint64_t sub_10028FF98(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = v3;
  uint64_t v7 = *(void *)(type metadata accessor for RoutingInteraction(0LL) - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 56LL) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (void (*)(void))v3[2];
  uint64_t v10 = v5[4];
  uint64_t v28 = v5[3];
  uint64_t v11 = v5[5];
  unint64_t v12 = (void *)((char *)v5 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8LL));
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  if (!a1) {
    goto LABEL_4;
  }
  uint64_t v26 = a2;
  swift_getErrorValue(a1, v30, v29);
  uint64_t v15 = v29[1];
  uint64_t v16 = v29[2];
  swift_errorRetain(a1);
  if ((sub_100202810(v15, v16) & 1) != 0)
  {
    swift_errorRelease(a1);
    a2 = v26;
LABEL_4:
    uint64_t v17 = (void *)swift_allocObject(a2, 48LL, 7LL);
    v17[2] = v14;
    v17[3] = v13;
    v17[4] = v10;
    v17[5] = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100273F0C((uint64_t)v5 + v8, (void (*)(void, void, void, void))v9, v28, a3, (uint64_t)v17, 1.0);
    return swift_release(v17);
  }

  swift_errorRetain(a1);
  swift_bridgeObjectRetain();
  uint64_t v19 = MRDFastSyncGroupSessionState.rawValue.getter(a1, v10, v11, 1LL);
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  unsigned __int8 v25 = v24;
  v9();
  swift_errorRelease(v19);
  sub_100156BA8(v21, v23, v25);
  return swift_errorRelease(a1);
}

uint64_t sub_100290128()
{
  return sub_1002916FC((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_100290134(uint64_t a1)
{
  return sub_100275844(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_100290140()
{
  uint64_t v1 = type metadata accessor for RoutingInteraction(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  uint64_t v7 = (v5 + 7) & 0xFFFFFFFFFFFFF8LL;
  unint64_t v8 = ((v5 + 31) & 0xFFFFFFFFFFFFFFF8LL) + 8;
  swift_release(*((void *)v0 + 2));
  swift_bridgeObjectRelease(*((void *)v0 + 4));
  swift_release(*((void *)v0 + 6));
  (*(void (**)(char *, uint64_t))(v2 + 8))(&v0[v4], v1);
  swift_bridgeObjectRelease(*(void *)&v0[v7 + 8]);
  return swift_deallocObject(v0, v8, v6);
}

uint64_t sub_1002901EC(void *a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for RoutingInteraction(0LL) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 56LL) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = v6 + *(void *)(v5 + 64);
  return sub_100275F94( a1,  a2,  v2[2],  v2[3],  v2[4],  v2[5],  v2[6],  (uint64_t)v2 + v6,  *(uint64_t *)((char *)v2 + ((v7 + 7) & 0xFFFFFFFFFFFFFFF8LL)),  *(uint64_t *)((char *)v2 + ((v7 + 7) & 0xFFFFFFFFFFFFFFF8LL) + 8),  *((_BYTE *)v2 + ((v7 + 7) & 0xFFFFFFFFFFFFFFF8LL) + 16),  *(uint64_t *)((char *)v2 + ((v7 + 31) & 0xFFFFFFFFFFFFF8LL)));
}

uint64_t sub_100290284()
{
  uint64_t v1 = type metadata accessor for RoutingInteraction(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 72) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  uint64_t v7 = (v5 + 7) & 0xFFFFFFFFFFFFF8LL;
  unint64_t v8 = ((v5 + 31) & 0xFFFFFFFFFFFFFFF8LL) + 8;
  swift_errorRelease(*(void *)(v0 + 16));
  swift_bridgeObjectRelease(*(void *)(v0 + 32));
  swift_release(*(void *)(v0 + 48));

  swift_release(*(void *)(v0 + 64));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease(*(void *)(v0 + v7 + 8));
  return swift_deallocObject(v0, v8, v6);
}

uint64_t sub_100290340()
{
  uint64_t v1 = *(void *)(type metadata accessor for RoutingInteraction(0LL) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 72LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = v2 + *(void *)(v1 + 64);
  return sub_1002762E4( *(void *)(v0 + 16),  *(void *)(v0 + 24),  *(void *)(v0 + 32),  *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 40),  *(void *)(v0 + 48),  *(void **)(v0 + 56),  *(void *)(v0 + 64),  (uint64_t *)(v0 + v2),  *(void *)(v0 + ((v3 + 7) & 0xFFFFFFFFFFFFFFF8LL)),  *(void *)(v0 + ((v3 + 7) & 0xFFFFFFFFFFFFFFF8LL) + 8),  *(_BYTE *)(v0 + ((v3 + 7) & 0xFFFFFFFFFFFFFFF8LL) + 16),  *(void *)(v0 + ((v3 + 31) & 0xFFFFFFFFFFFFF8LL)));
}

uint64_t sub_1002903BC()
{
  uint64_t v1 = type metadata accessor for RoutingInteraction(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 88) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((v4 + *(void *)(v2 + 64)) & 0xFFFFFFFFFFFFFFF8LL) + 16;
  swift_release(*((void *)v0 + 2));
  swift_bridgeObjectRelease(*((void *)v0 + 4));
  swift_release(*((void *)v0 + 6));
  swift_bridgeObjectRelease(*((void *)v0 + 8));
  swift_bridgeObjectRelease(*((void *)v0 + 10));
  (*(void (**)(char *, uint64_t))(v2 + 8))(&v0[v4], v1);
  return swift_deallocObject(v0, v6, v5);
}

uint64_t sub_100290458()
{
  uint64_t v1 = *(void *)(type metadata accessor for RoutingInteraction(0LL) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 88LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_100278464( *(void *)(v0 + 16),  *(void *)(v0 + 24),  *(void *)(v0 + 32),  *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 40),  *(void *)(v0 + 48),  *(void *)(v0 + 56),  *(void *)(v0 + 64),  *(void *)(v0 + 72),  *(void *)(v0 + 80),  v0 + v2,  *(_BYTE *)(v0 + v2 + *(void *)(v1 + 64)),  *(void *)(((v2 + *(void *)(v1 + 64)) & 0xFFFFFFFFFFFFF8LL) + v0 + 8));
}

uint64_t sub_1002904C8()
{
  uint64_t v1 = type metadata accessor for RoutingInteraction(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  swift_bridgeObjectRelease(*(void *)(v0 + 24));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(void *)(v0 + v6 + 8));
  return swift_deallocObject(v0, ((v6 + 23) & 0xFFFFFFFFFFFFFFF8LL) + 8, v5);
}

uint64_t sub_100290564()
{
  uint64_t v1 = *(void *)(type metadata accessor for RoutingInteraction(0LL) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  return sub_100279694( *(void *)(v0 + 16),  *(void *)(v0 + 24),  v0 + v2,  *(void (**)(void))(v0 + v3),  *(void *)(v0 + v3 + 8),  *(void (**)(void))(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFF8LL)));
}

uint64_t sub_1002905B8()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_1002905E0()
{
  return swift_deallocObject(v0, 56LL, 7LL);
}

uint64_t sub_100290614()
{
  return sub_100273E44( *(void *)(v0 + 16),  *(void *)(v0 + 24),  *(void *)(v0 + 32),  *(void (**)(uint64_t))(v0 + 40));
}

uint64_t sub_100290624()
{
  uint64_t v1 = type metadata accessor for RoutingInteraction(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 72) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8LL;
  swift_release(*((void *)v0 + 3));
  swift_release(*((void *)v0 + 4));
  swift_bridgeObjectRelease(*((void *)v0 + 6));
  swift_bridgeObjectRelease(*((void *)v0 + 8));
  (*(void (**)(char *, uint64_t))(v2 + 8))(&v0[v4], v1);
  swift_bridgeObjectRelease(*(void *)&v0[v6 + 8]);
  swift_release(*(void *)&v0[v7]);
  return swift_deallocObject(v0, ((v7 + 15) & 0xFFFFFFFFFFFFFFF8LL) + 8, v5);
}

uint64_t sub_1002906E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(type metadata accessor for RoutingInteraction(0LL) - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 72LL) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v11 = (*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  return sub_10027CD00( a1,  a2,  a3,  a4,  *(void (**)(void))(v4 + 16),  *(void (**)(void))(v4 + 24),  *(char **)(v4 + 32),  *(void *)(v4 + 40),  *(void *)(v4 + 48),  *(void *)(v4 + 56),  *(void *)(v4 + 64),  (char *)(v4 + v10),  *(void *)(v4 + v11),  *(void *)(v4 + v11 + 8),  *(void *)(v4 + ((v11 + 23) & 0xFFFFFFFFFFFFFFF8LL)),  *(void *)(v4 + ((((v11 + 23) & 0xFFFFFFFFFFFFFFF8LL) + 15) & 0xFFFFFFFFFFFFF8LL)));
}

uint64_t sub_1002907A8()
{
  uint64_t v1 = (int *)type metadata accessor for HostedRoutingSourceSession(0LL);
  uint64_t v2 = *((void *)v1 - 1);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v26 = *(void *)(v2 + 64);
  uint64_t v27 = type metadata accessor for RoutingInteraction(0LL);
  uint64_t v5 = *(void *)(v27 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v25 = *(void *)(v5 + 64);
  swift_release(*(void *)(v0 + 24));
  swift_release(*(void *)(v0 + 32));
  uint64_t v7 = v0 + v4;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = v0 + v4 + v1[7];
  uint64_t v9 = type metadata accessor for HostedRoutingSession.NowPlayingInfo(0LL);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48LL))(v8, 1LL, v9))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1001A0918(*(void *)(v8 + 32), *(unsigned int *)(v8 + 40), *(_BYTE *)(v8 + 44));
    swift_release(*(void *)(v8 + 48));
    swift_bridgeObjectRelease();
    uint64_t v10 = v8 + *(int *)(v9 + 36);
    uint64_t v11 = type metadata accessor for RoutingSession.NowPlayingInfo.PlaybackInfo(0LL);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8LL))(v10, v11);
    uint64_t v12 = v8 + *(int *)(v9 + 40);
    uint64_t v13 = type metadata accessor for RoutingSession.NowPlayingInfo.TrackInfo(0LL);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8LL))(v12, v13);
  }

  uint64_t v14 = v7 + v1[8];
  uint64_t v15 = type metadata accessor for RoutingControls(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8LL))(v14, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v16 = v7 + v1[14];
  uint64_t v17 = type metadata accessor for RoutingSession.HostInfo(0LL);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = v3 | v6 | 7;
  unint64_t v20 = (v26 + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v21 = (v20 + v6 + 8) & ~v6;
  uint64_t v22 = v7 + v1[15];
  uint64_t v23 = type metadata accessor for Date(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8LL))(v22, v23);
  swift_release(*(void *)(v0 + v20));
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v21, v27);
  return swift_deallocObject(v0, v21 + v25, v19);
}

void sub_1002909FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = type metadata accessor for HostedRoutingSourceSession(0LL);
  uint64_t v11 = type metadata accessor for RoutingInteraction(0LL);
  uint64_t v12 = *(void (**)(void))(v4 + 16);
  uint64_t v13 = *(void *)(v4 + 24);
  if (a1)
  {
    swift_errorRetain(a1);
    sub_100156A2C(a2, a3, a4);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v12)(a1, a2, a3, a4);
    sub_100184850(a1, a2, a3, a4);
  }

  else
  {
    uint64_t v14 = *(void *)(v10 - 8);
    unint64_t v15 = (*(unsigned __int8 *)(v14 + 80) + 40LL) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    unint64_t v16 = (*(void *)(v14 + 64) + v15 + 7) & 0xFFFFFFFFFFFFFFF8LL;
    uint64_t v17 = *(unsigned __int8 *)(*(void *)(v11 - 8) + 80LL);
    sub_100279AD4((uint64_t *)(v5 + v15), *(void *)(v5 + v16), v5 + ((v17 + v16 + 8) & ~v17), v12, v13);
  }

uint64_t sub_100290B04()
{
  swift_release(*(void *)(v0 + 48));
  swift_release(*(void *)(v0 + 72));
  swift_release(*(void *)(v0 + 80));
  return swift_deallocObject(v0, 96LL, 7LL);
}

uint64_t sub_100290B58(void *a1)
{
  return sub_100286200( a1,  *(void *)(v1 + 16),  *(void *)(v1 + 24),  *(void **)(v1 + 32),  *(void (**)(void))(v1 + 40),  *(void **)(v1 + 48),  *(void (**)(void, void))(v1 + 56),  *(char **)(v1 + 64),  *(void *)(v1 + 72),  *(void *)(v1 + 80),  *(void *)(v1 + 88));
}

uint64_t sub_100290B94()
{
  return swift_deallocObject(v0, 64LL, 7LL);
}

uint64_t sub_100290BC8(void *a1, uint64_t a2)
{
  return sub_10028890C( a1,  a2,  *(void *)(v2 + 16),  *(void *)(v2 + 24),  *(void (**)(void))(v2 + 32),  *(void *)(v2 + 40),  *(void *)(v2 + 48),  *(void *)(v2 + 56));
}

void sub_100290BD8()
{
  uint64_t v1 = *(void (**)(void))(v0 + 16);
  uint64_t v2 = Notification.userInfo.getter();
  if (!v2)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    return;
  }

  uint64_t v3 = v2;
  *(void *)&v25[0] = static String._unconditionallyBridgeFromObjectiveC(_:)(@"MRDMusicHandoffSessionEventKey");
  *((void *)&v25[0] + 1) = v4;
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)(v25, &type metadata for String, &protocol witness table for String);
  if (*(void *)(v3 + 16) && (unint64_t v5 = sub_10015CAA4((uint64_t)v24), (v6 & 1) != 0))
  {
    sub_100160800(*(void *)(v3 + 56) + 32 * v5, (uint64_t)&v22);
  }

  else
  {
    __int128 v22 = 0u;
    __int128 v23 = 0u;
  }

  swift_bridgeObjectRelease();
  if (!*((void *)&v23 + 1)) {
    goto LABEL_12;
  }
  sub_100160990((uint64_t)v24);
  swift_bridgeObjectRelease();
  sub_100160944(&v22, v25);
  uint64_t v7 = sub_10016083C(0LL, &qword_1003FCE48, &OBJC_CLASS___MRMusicHandoffEvent_ptr);
  swift_dynamicCast(&v21, v25, (char *)&type metadata for Any + 8, v7, 7LL);
  id v8 = v21;
  if ([v21 type] == (id)1)
  {
    ((void (*)(void, void, void, void))v1)(0LL, 0LL, 0LL, 0LL);
  }

  else
  {
    uint64_t v9 = swift_allocObject(&unk_1003AC2A0, 32LL, 7LL);
    *(void *)(v9 + swift_weakDestroy(v0 + 16) = 0xD00000000000001CLL;
    *(void *)(v9 + 24) = 0x80000001003405D0LL;
    uint64_t v10 = type metadata accessor for InternalRoutingError(0LL);
    uint64_t v11 = sub_100156FEC( &qword_1003F8908,  (uint64_t (*)(uint64_t))&type metadata accessor for InternalRoutingError,  (uint64_t)&protocol conformance descriptor for InternalRoutingError);
    uint64_t v12 = swift_allocError(v10, v11, 0LL, 0LL);
    *uint64_t v13 = v9;
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v10 - 8) + 104LL))( v13,  enum case for InternalRoutingError.external(_:),  v10);
    uint64_t v14 = MRDFastSyncGroupSessionState.rawValue.getter(v12, 1LL, 0LL, 4LL);
    uint64_t v16 = v15;
    uint64_t v18 = v17;
    unsigned __int8 v20 = v19;
    v1();

    swift_errorRelease(v14);
    sub_100156BA8(v16, v18, v20);
  }

uint64_t sub_100290E18()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_100290E3C()
{
  swift_bridgeObjectRelease(*(void *)(v0 + 48));
  return swift_deallocObject(v0, 72LL, 7LL);
}

uint64_t sub_100290E78()
{
  return sub_100290E84((uint64_t (*)(void, void, void, void, void, void, void))sub_100287564);
}

uint64_t sub_100290E84(uint64_t (*a1)(void, void, void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8]);
}

uint64_t sub_100290E9C()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_100290EC0()
{
  uint64_t v1 = type metadata accessor for ContinuousClock(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = type metadata accessor for ContinuousClock.Instant(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v13 = v3 | v8 | 7;
  unint64_t v10 = (*(void *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v11 = (v10 + 23) & 0xFFFFFFFFFFFFFFF8LL;
  swift_release(*(void *)(v0 + 16));
  swift_release(*(void *)(v0 + 24));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  swift_bridgeObjectRelease(*(void *)(v0 + v10 + 8));
  swift_release(*(void *)(v0 + v11 + 8));
  return swift_deallocObject(v0, ((v11 + 23) & 0xFFFFFFFFFFFFFFF8LL) + 8, v13);
}

void sub_100290FC4()
{
  uint64_t v1 = *(void *)(type metadata accessor for ContinuousClock(0LL) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(type metadata accessor for ContinuousClock.Instant(0LL) - 8);
  unint64_t v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  sub_100287B3C( *(void *)(v0 + 16),  *(os_log_s **)(v0 + 24),  v0 + v2,  v0 + v5,  *(void *)(v0 + v6),  *(void *)(v0 + v6 + 8),  *(void (**)(uint64_t))(v0 + ((v6 + 23) & 0xFFFFFFFFFFFFFFF8LL)),  *(void *)(v0 + ((v6 + 23) & 0xFFFFFFFFFFFFFFF8LL) + 8),  *(void *)(v0 + ((((v6 + 23) & 0xFFFFFFFFFFFFFFF8LL) + 23) & 0xFFFFFFFFFFFFF8LL)));
}

uint64_t sub_10029106C()
{
  uint64_t v1 = type metadata accessor for ContinuousClock(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = type metadata accessor for ContinuousClock.Instant(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v13 = v3 | v8 | 7;
  unint64_t v10 = (*(void *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v11 = (v10 + 23) & 0xFFFFFFFFFFFFFFF8LL;
  swift_release(*(void *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  swift_bridgeObjectRelease(*(void *)(v0 + v10 + 8));
  swift_release(*(void *)(v0 + v11 + 8));
  return swift_deallocObject(v0, ((v11 + 23) & 0xFFFFFFFFFFFFFFF8LL) + 8, v13);
}

void sub_100291168()
{
  uint64_t v1 = *(void *)(type metadata accessor for ContinuousClock(0LL) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(type metadata accessor for ContinuousClock.Instant(0LL) - 8);
  unint64_t v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  sub_1002882F0( *(void *)(v0 + 16),  v0 + v2,  v0 + v5,  *(void *)(v0 + v6),  *(void *)(v0 + v6 + 8),  *(void (**)(void))(v0 + ((v6 + 23) & 0xFFFFFFFFFFFFFFF8LL)),  *(void *)(v0 + ((v6 + 23) & 0xFFFFFFFFFFFFFFF8LL) + 8),  *(void (**)(void))(v0 + ((((v6 + 23) & 0xFFFFFFFFFFFFFFF8LL) + 23) & 0xFFFFFFFFFFFFF8LL)));
}

uint64_t sub_100291200()
{
  return sub_100292300((void (*)(void))&_swift_bridgeObjectRelease, 48LL);
}

uint64_t sub_100291210(void *a1)
{
  return sub_10028B220( a1,  v1[2],  v1[3],  v1[4],  v1[5],  (uint64_t)&unk_1003AC408,  (uint64_t)sub_100291254,  (uint64_t)&unk_1003AC420);
}

uint64_t sub_100291244()
{
  return sub_100292300((void (*)(void))&_swift_bridgeObjectRelease, 48LL);
}

id sub_100291254()
{
  return sub_10028B418( *(void **)(v0 + 16),  *(void *)(v0 + 24),  *(void *)(v0 + 32),  *(void *)(v0 + 40),  "[%s] pullContentFromSession<%s> - failed to clear source queue with error: %@.");
}

uint64_t sub_100291278()
{
  uint64_t v1 = (int *)type metadata accessor for HostedRoutingSourceSession(0LL);
  uint64_t v2 = *((void *)v1 - 1);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = v0 + v4;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = v0 + v4 + v1[7];
  uint64_t v8 = type metadata accessor for HostedRoutingSession.NowPlayingInfo(0LL);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48LL))(v7, 1LL, v8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1001A0918(*(void *)(v7 + 32), *(unsigned int *)(v7 + 40), *(_BYTE *)(v7 + 44));
    swift_release(*(void *)(v7 + 48));
    swift_bridgeObjectRelease();
    uint64_t v9 = v7 + *(int *)(v8 + 36);
    uint64_t v10 = type metadata accessor for RoutingSession.NowPlayingInfo.PlaybackInfo(0LL);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8LL))(v9, v10);
    uint64_t v11 = v7 + *(int *)(v8 + 40);
    uint64_t v12 = type metadata accessor for RoutingSession.NowPlayingInfo.TrackInfo(0LL);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8LL))(v11, v12);
  }

  uint64_t v13 = v6 + v1[8];
  uint64_t v14 = type metadata accessor for RoutingControls(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8LL))(v13, v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v15 = v6 + v1[14];
  uint64_t v16 = type metadata accessor for RoutingSession.HostInfo(0LL);
  uint64_t v17 = *(void *)(v16 - 8);
  unint64_t v18 = (v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v19 = (((v18 + 15) & 0xFFFFFFFFFFFFFFF8LL) + 23) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v20 = v6 + v1[15];
  uint64_t v21 = type metadata accessor for Date(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8LL))(v20, v21);
  swift_release(*(void *)(v0 + v18));
  swift_bridgeObjectRelease();
  swift_release(*(void *)(v0 + v19 + 8));
  return swift_deallocObject(v0, ((v19 + 23) & 0xFFFFFFFFFFFFFFF8LL) + 8, v3 | 7);
}

uint64_t sub_10029149C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  uint64_t v9 = *(void *)(type metadata accessor for HostedRoutingSourceSession(0LL) - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v11 = (*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v12 = (v11 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  return sub_10027D948( a1,  a2,  a3,  a4,  (os_log_s *)(v4 + v10),  *(void *)(v4 + v11),  *(void *)(v4 + v12),  *(void *)(v4 + v12 + 8),  *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + ((v12 + 23) & 0xFFFFFFFFFFFFFFF8LL)),  *(void *)(v4 + ((v12 + 23) & 0xFFFFFFFFFFFFFFF8LL) + 8),  *(void *)(v4 + ((((v12 + 23) & 0xFFFFFFFFFFFFFFF8LL) + 23) & 0xFFFFFFFFFFFFF8LL)));
}

uint64_t sub_100291554()
{
  uint64_t v1 = type metadata accessor for RoutingInteraction(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 104) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  swift_bridgeObjectRelease(*(void *)(v0 + 24));

  swift_release(*(void *)(v0 + 48));
  swift_bridgeObjectRelease(*(void *)(v0 + 64));
  swift_bridgeObjectRelease(*(void *)(v0 + 80));

  swift_release(*(void *)(v0 + 96));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(void *)(v0 + v6));
  return swift_deallocObject(v0, ((v6 + 15) & 0xFFFFFFFFFFFFFFF8LL) + 8, v5);
}

uint64_t sub_10029161C(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for RoutingInteraction(0LL) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 104LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  return sub_10028A544( a1,  *(void *)(v1 + 16),  *(void *)(v1 + 24),  *(void **)(v1 + 32),  *(void (**)(void))(v1 + 40),  *(void *)(v1 + 48),  *(void *)(v1 + 56),  *(void *)(v1 + 64),  *(void *)(v1 + 72),  *(void *)(v1 + 80),  *(void **)(v1 + 88),  *(void *)(v1 + 96),  v1 + v4,  *(void *)(v1 + v5),  *(void *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFF8LL)));
}

uint64_t sub_1002916AC()
{
  return sub_10029198C( (void (*)(void))&_swift_bridgeObjectRelease,  (void (*)(void))&_swift_release);
}

uint64_t sub_1002916C0(void *a1, uint64_t a2)
{
  return sub_10028B9A8( a1,  a2,  *(void *)(v2 + 16),  *(void *)(v2 + 24),  *(void (**)(void))(v2 + 32),  *(void *)(v2 + 40),  *(void *)(v2 + 48),  *(void *)(v2 + 56),  *(void *)(v2 + 64),  *(void *)(v2 + 72));
}

uint64_t sub_1002916F0()
{
  return sub_1002916FC((void (*)(void))&_swift_release);
}

uint64_t sub_1002916FC(void (*a1)(void))
{
  return swift_deallocObject(v1, 48LL, 7LL);
}

void sub_10029172C()
{
  uint64_t v1 = (void (*)(void))v0[2];
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[5];
  uint64_t v4 = Notification.userInfo.getter();
  if (!v4)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    return;
  }

  uint64_t v5 = v4;
  *(void *)&v26[0] = static String._unconditionallyBridgeFromObjectiveC(_:)(@"MRDMusicHandoffSessionEventKey");
  *((void *)&v26[0] + 1) = v6;
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)(v26, &type metadata for String, &protocol witness table for String);
  if (*(void *)(v5 + 16) && (unint64_t v7 = sub_10015CAA4((uint64_t)v25), (v8 & 1) != 0))
  {
    sub_100160800(*(void *)(v5 + 56) + 32 * v7, (uint64_t)&v23);
  }

  else
  {
    __int128 v23 = 0u;
    __int128 v24 = 0u;
  }

  swift_bridgeObjectRelease();
  if (!*((void *)&v24 + 1)) {
    goto LABEL_12;
  }
  sub_100160990((uint64_t)v25);
  swift_bridgeObjectRelease();
  sub_100160944(&v23, v26);
  uint64_t v9 = sub_10016083C(0LL, &qword_1003FCE48, &OBJC_CLASS___MRMusicHandoffEvent_ptr);
  swift_dynamicCast(&v22, v26, (char *)&type metadata for Any + 8, v9, 7LL);
  id v10 = v22;
  if ([v22 type] == (id)1)
  {
    ((void (*)(void, void, void, void))v1)(0LL, 0LL, 0LL, 0LL);
  }

  else
  {
    uint64_t v11 = swift_allocObject(&unk_1003AC2A0, 32LL, 7LL);
    *(void *)(v11 + swift_weakDestroy(v0 + 16) = 0xD00000000000001CLL;
    *(void *)(v11 + 24) = 0x80000001003405D0LL;
    uint64_t v12 = type metadata accessor for InternalRoutingError(0LL);
    uint64_t v13 = sub_100156FEC( &qword_1003F8908,  (uint64_t (*)(uint64_t))&type metadata accessor for InternalRoutingError,  (uint64_t)&protocol conformance descriptor for InternalRoutingError);
    uint64_t v14 = swift_allocError(v12, v13, 0LL, 0LL);
    *uint64_t v15 = v11;
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v12 - 8) + 104LL))( v15,  enum case for InternalRoutingError.external(_:),  v12);
    swift_bridgeObjectRetain();
    uint64_t v16 = MRDFastSyncGroupSessionState.rawValue.getter(v14, v2, v3, 2LL);
    uint64_t v18 = v17;
    uint64_t v20 = v19;
    LOBYTE(v14) = v21;
    v1();

    swift_errorRelease(v16);
    sub_100156BA8(v18, v20, v14);
  }

uint64_t sub_100291978()
{
  return sub_10029198C( (void (*)(void))&_swift_release,  (void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_10029198C(void (*a1)(void), void (*a2)(void))
{
  return swift_deallocObject(v2, 80LL, 7LL);
}

uint64_t sub_1002919D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10028ABB4( a1,  a2,  a3,  a4,  *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 16),  *(void *)(v4 + 24),  *(void *)(v4 + 32),  *(void *)(v4 + 40),  *(void *)(v4 + 48),  *(void *)(v4 + 56),  *(void **)(v4 + 64),  *(void *)(v4 + 72));
}

uint64_t sub_100291A0C()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_100291A38(uint64_t a1)
{
  return sub_10028B6FC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100291A44()
{
  return sub_100292300((void (*)(void))&_swift_bridgeObjectRelease, 48LL);
}

uint64_t sub_100291A54(void *a1)
{
  return sub_10028B220( a1,  v1[2],  v1[3],  v1[4],  v1[5],  (uint64_t)&unk_1003AC5E8,  (uint64_t)sub_100291A98,  (uint64_t)&unk_1003AC600);
}

uint64_t sub_100291A88()
{
  return sub_100292300((void (*)(void))&_swift_bridgeObjectRelease, 48LL);
}

id sub_100291A98()
{
  return sub_10028B418( *(void **)(v0 + 16),  *(void *)(v0 + 24),  *(void *)(v0 + 32),  *(void *)(v0 + 40),  "[%s] handoffFromApplication<%s> - failed to clear source queue with error: %@.");
}

uint64_t sub_100291AC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100291BB0(a1, a2, a3, a4, (uint64_t)&unk_1003AC6B0, (uint64_t (*)(void))sub_100291CE0);
}

uint64_t sub_100291AD8()
{
  uint64_t v1 = type metadata accessor for RoutingInteraction(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = type metadata accessor for RoutingControl(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  swift_release(*(void *)(v0 + 24));
  swift_release(*(void *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v10, v11);
}

uint64_t sub_100291B9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100291BB0(a1, a2, a3, a4, (uint64_t)&unk_1003AC688, (uint64_t (*)(void))sub_100291C70);
}

uint64_t sub_100291BB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void))
{
  uint64_t v13 = *(void *)(type metadata accessor for RoutingInteraction(0LL) - 8);
  unint64_t v14 = (*(unsigned __int8 *)(v13 + 80) + 40LL) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v15 = *(void *)(v13 + 64);
  uint64_t v16 = *(unsigned __int8 *)(*(void *)(type metadata accessor for RoutingControl(0LL) - 8) + 80LL);
  return sub_100282078( a1,  a2,  a3,  a4,  *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 16),  *(void *)(v6 + 24),  *(void *)(v6 + 32),  v6 + v14,  v6 + ((v14 + v15 + v16) & ~v16),  a5,  a6);
}

uint64_t sub_100291C70(uint64_t a1)
{
  return sub_100291CEC(a1, (uint64_t (*)(uint64_t, uint64_t))sub_100281F0C);
}

uint64_t sub_100291C80()
{
  uint64_t v1 = type metadata accessor for RoutingControl(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100291CE0(uint64_t a1)
{
  return sub_100291CEC(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1002821E0);
}

uint64_t sub_100291CEC(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = *(unsigned __int8 *)(*(void *)(type metadata accessor for RoutingControl(0LL) - 8) + 80LL);
  return a2(a1, v2 + ((v4 + 16) & ~v4));
}

uint64_t sub_100291D3C(void *a1)
{
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(type metadata accessor for RoutingControl(0LL) - 8) + 80LL);
  return sub_1002840D0(a1, v1[2], v1[3], v1[4], (uint64_t)v1 + ((v3 + 40) & ~v3));
}

uint64_t sub_100291D84()
{
  uint64_t v1 = type metadata accessor for RoutingControl(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  swift_release(*(void *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_100291E00()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = *(void (**)(void))(v0 + 24);
  if (v1 && (id v3 = [v1 error]) != 0)
  {
    id v13 = v3;
    uint64_t v4 = RoutingControl.sessionIdentifier.getter();
    uint64_t v6 = MRDFastSyncGroupSessionState.rawValue.getter(v13, v4, v5, 2LL);
    uint64_t v8 = v7;
    uint64_t v10 = v9;
    unsigned __int8 v12 = v11;
    v2();
    swift_errorRelease(v6);
    sub_100156BA8(v8, v10, v12);
  }

  else
  {
    ((void (*)(void, void, void, void))v2)(0LL, 0LL, 0LL, 0LL);
  }

uint64_t sub_100291F0C()
{
  uint64_t v1 = type metadata accessor for RoutingInteraction(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v6 = type metadata accessor for RoutingControl(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v5 + v8 + 16) & ~v8;
  uint64_t v12 = v3 | v8 | 7;
  unint64_t v10 = (((*(void *)(v7 + 64) + v9 + 3) & 0xFFFFFFFFFFFFFFFCLL) + 11) & 0xFFFFFFFFFFFFFFF8LL;
  swift_release(*(void *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(void *)(v0 + v5 + 8));
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  swift_bridgeObjectRelease(*(void *)(v0 + v10 + 8));
  return swift_deallocObject(v0, ((v10 + 23) & 0xFFFFFFFFFFFFFFF8LL) + 8, v12);
}

uint64_t sub_100292014()
{
  uint64_t v1 = *(void *)(type metadata accessor for RoutingInteraction(0LL) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v4 = *(void *)(type metadata accessor for RoutingControl(0LL) - 8);
  unint64_t v5 = (v3 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 3) & 0xFFFFFFFFFFFFFFFCLL;
  return sub_10028391C( *(void *)(v0 + 16),  v0 + v2,  *(void (**)(void, void, void, void))(v0 + v3),  *(void *)(v0 + v3 + 8),  v0 + v5,  *(void *)(v0 + ((v6 + 11) & 0xFFFFFFFFFFFFFFF8LL)),  *(void *)(v0 + ((v6 + 11) & 0xFFFFFFFFFFFFFFF8LL) + 8),  *(void *)(v0 + ((((v6 + 11) & 0xFFFFFFFFFFFFFFF8LL) + 23) & 0xFFFFFFFFFFFFF8LL)),  *(float *)(v0 + v6));
}

uint64_t sub_1002920C8()
{
  swift_release(*(void *)(v0 + 32));
  swift_release(*(void *)(v0 + 48));
  return swift_deallocObject(v0, 56LL, 7LL);
}

uint64_t sub_1002920FC(uint64_t a1)
{
  return sub_100283F94( a1,  *(void **)(v1 + 16),  *(void (**)(void))(v1 + 24),  *(void *)(v1 + 32),  *(uint64_t (**)(uint64_t))(v1 + 40));
}

uint64_t sub_10029211C()
{
  uint64_t v1 = type metadata accessor for RoutingControl(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 3) & 0xFFFFFFFFFFFFFFFCLL) + 11) & 0xFFFFFFFFFFFFFFF8LL;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease(*(void *)(v0 + v6 + 8));
  return swift_deallocObject(v0, ((v6 + 23) & 0xFFFFFFFFFFFFFFF8LL) + 8, v5);
}

uint64_t sub_1002921A4(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for RoutingControl(0LL);
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v5 = *(void *)(v3 - 8);
    unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    unint64_t v7 = (*(void *)(v5 + 64) + v6 + 3) & 0xFFFFFFFFFFFFFFFCLL;
    unint64_t v8 = (v7 + 11) & 0xFFFFFFFFFFFFFFF8LL;
    float v9 = *(float *)(v1 + v7);
    uint64_t v10 = v1 + v6;
    uint64_t v11 = *(void *)(v1 + v8);
    uint64_t v12 = *(void **)(v1 + v8 + 8);
    uint64_t v13 = *(void *)(v1 + ((v8 + 23) & 0xFFFFFFFFFFFFF8LL));
    uint64_t v14 = *(void *)(type metadata accessor for HostedRoutingSourceSession(0LL) - 8);
    uint64_t v15 = (void *)(a1 + ((*(unsigned __int8 *)(v14 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80)));
    uint64_t v16 = *(void *)(v14 + 72);
    swift_bridgeObjectRetain();
    uint64_t v17 = v4 - 1;
    do
    {
      uint64_t v18 = v17;
      char v19 = sub_100283A60(v15, v10, v11, v12, v13, v9);
      if ((v19 & 1) != 0) {
        break;
      }
      uint64_t v17 = v18 - 1;
      uint64_t v15 = (void *)((char *)v15 + v16);
    }

    while (v18);
    swift_bridgeObjectRelease();
  }

  else
  {
    char v19 = 0;
  }

  return v19 & 1;
}

uint64_t sub_1002922B0(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  uint64_t v5 = *(uint64_t (**)(void *))(v4 + 16);
  v7[0] = a1;
  v7[1] = a2;
  v7[2] = a3;
  __int16 v8 = a4 & 0x1FF;
  return v5(v7);
}

uint64_t sub_1002922F0()
{
  return sub_100292300((void (*)(void))&_swift_release, 40LL);
}

uint64_t sub_100292300(void (*a1)(void), uint64_t a2)
{
  a1(*(void *)(v2 + 32));
  return swift_deallocObject(v2, a2, 7LL);
}

uint64_t sub_100292344(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  return sub_100268418( a1,  a2,  a3,  a4,  *(void **)(v4 + 16),  *(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v4 + 24));
}

uint64_t sub_100292354()
{
  uint64_t result = swift_weakLoadStrong(v0 + 16);
  if (result)
  {
    uint64_t v2 = result;
    uint64_t v3 = (void *)Notification.name.getter(result);
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
    unint64_t v6 = v5;

    sub_10026CE38(v4, v6);
    swift_bridgeObjectRelease();
    return swift_release(v2);
  }

  return result;
}

void **sub_1002923E4(void **result)
{
  if (*(void *)(v1 + 24))
  {
    uint64_t v2 = *result;
    NSString v3 = String._bridgeToObjectiveC()();
    id v4 = [v2 containsUID:v3];

    return (void **)v4;
  }

  else
  {
    __break(1u);
  }

  return result;
}

uint64_t sub_100292570()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_1001609C4(v0, qword_100403E38);
  sub_10015ADAC(v0, (uint64_t)qword_100403E38);
  id v1 = (id)*sub_100173F8C();
  return Logger.init(_:)(v1);
}

unint64_t sub_1002925C8(uint64_t a1)
{
  uint64_t v2 = sub_100156B68((uint64_t *)&unk_1003FCEF0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unint64_t v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6)
  {
    __int16 v8 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }

  sub_100156B68(&qword_1003FCED8);
  uint64_t v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  __int16 v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }

  uint64_t v10 = &v5[*(int *)(v2 + 48)];
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v3 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v3 + 72);
  swift_retain(v7);
  while (1)
  {
    sub_100295794(v13, (uint64_t)v5);
    unint64_t result = sub_100162DEC((uint64_t)v5);
    if ((v16 & 1) != 0) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << result;
    uint64_t v18 = v8[6];
    uint64_t v19 = type metadata accessor for UUID(0LL);
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v19 - 8) + 32LL))( v18 + *(void *)(*(void *)(v19 - 8) + 72LL) * v17,  v5,  v19);
    uint64_t v20 = (void *)(v8[7] + 16 * v17);
    uint64_t v21 = *((void *)v10 + 1);
    void *v20 = *(void *)v10;
    v20[1] = v21;
    uint64_t v22 = v8[2];
    BOOL v23 = __OFADD__(v22, 1LL);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_11;
    }
    v8[2] = v24;
    v13 += v14;
    if (!--v9)
    {
      swift_release(v8);
      goto LABEL_9;
    }
  }

  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_1002927FC(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  v29[1] = 0xE000000000000000LL;
  _StringGuts.grow(_:)(37LL);
  uint64_t v30 = 0LL;
  unint64_t v31 = 0xE000000000000000LL;
  v6._uint64_t countAndFlagsBits = 60LL;
  v6._object = (void *)0xE100000000000000LL;
  String.append(_:)(v6);
  v7._uint64_t countAndFlagsBits = _typeName(_:qualified:)(a2, 0LL);
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  v8._uint64_t countAndFlagsBits = 8250LL;
  v8._object = (void *)0xE200000000000000LL;
  String.append(_:)(v8);
  v29[0] = a1;
  _print_unlocked<A, B>(_:_:)( v29,  &v30,  &type metadata for UnsafeMutableRawPointer,  &type metadata for DefaultStringInterpolation,  &protocol witness table for DefaultStringInterpolation);
  v9._uint64_t countAndFlagsBits = 0x747265737361200ALL;
  v9._object = (void *)0xED00003D736E6F69LL;
  String.append(_:)(v9);
  swift_beginAccess(a1 + OBJC_IVAR___MRDGroupSessionAssertionManager_assertions, v29, 0LL, 0LL);
  uint64_t v10 = swift_bridgeObjectRetain();
  sub_100292A98(v10);
  swift_bridgeObjectRelease();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v12 = (id)MRCreateIndentedDebugDescriptionFromDictionary(isa);

  if (v12)
  {
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
    uint64_t v15 = v14;

    v16._uint64_t countAndFlagsBits = v13;
    v16._object = v15;
    String.append(_:)(v16);
    swift_bridgeObjectRelease();
    v17._uint64_t countAndFlagsBits = 0x76726573626F200ALL;
    v17._object = (void *)0xEC0000003D737265LL;
    String.append(_:)(v17);
    id v18 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a1
                                                                + OBJC_IVAR___MRDGroupSessionAssertionManager_observers), "allObjects"));
    uint64_t v19 = sub_100156B68(&qword_1003FCED0);
    uint64_t v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v18, v19);

    sub_100292FF4(v20);
    swift_bridgeObjectRelease();
    Class v21 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v22 = (id)MRCreateIndentedDebugDescriptionFromArray(v21);

    if (v22)
    {
      uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
      uint64_t v25 = v24;

      v26._uint64_t countAndFlagsBits = v23;
      v26._object = v25;
      String.append(_:)(v26);
      swift_bridgeObjectRelease();
      v27._uint64_t countAndFlagsBits = 62LL;
      v27._object = (void *)0xE100000000000000LL;
      String.append(_:)(v27);
      unint64_t v28 = v31;
      *a3 = v30;
      a3[1] = v28;
      return;
    }
  }

  else
  {
    __break(1u);
  }

  __break(1u);
}

uint64_t sub_100292A98(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  int v52 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v51 = sub_100156B68((uint64_t *)&unk_1003FCEE0);
  uint64_t v5 = __chkstk_darwin(v51);
  Swift::String v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v5);
  Swift::String v9 = (char *)&v45 - v8;
  uint64_t v53 = a1;
  uint64_t v10 = *(void *)(a1 + 16);
  if (v10)
  {
    sub_100156B68(&qword_1003F9F00);
    uint64_t v11 = (void *)static _DictionaryStorage.allocate(capacity:)(v10);
  }

  else
  {
    uint64_t v11 = &_swiftEmptyDictionarySingleton;
  }

  uint64_t v12 = *(void *)(v53 + 64);
  uint64_t v47 = v53 + 64;
  uint64_t v13 = -1LL << *(_BYTE *)(v53 + 32);
  if (-v13 < 64) {
    uint64_t v14 = ~(-1LL << -(char)v13);
  }
  else {
    uint64_t v14 = -1LL;
  }
  unint64_t v15 = v14 & v12;
  uint64_t v45 = -1LL << *(_BYTE *)(v53 + 32);
  int64_t v46 = (unint64_t)(63 - v13) >> 6;
  id v50 = &v58;
  unint64_t v49 = &v62;
  Swift::String v16 = (char *)(v11 + 8);
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain(v11);
  int64_t v54 = 0LL;
  id v48 = (char *)&type metadata for Any + 8;
  while (1)
  {
    if (v15)
    {
      unint64_t v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v21 = v20 | (v54 << 6);
      goto LABEL_28;
    }

    int64_t v22 = v54 + 1;
    if (__OFADD__(v54, 1LL))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }

    if (v22 >= v46) {
      goto LABEL_37;
    }
    unint64_t v23 = *(void *)(v47 + 8 * v22);
    int64_t v24 = v54 + 1;
    if (!v23)
    {
      int64_t v24 = v54 + 2;
      if (v54 + 2 >= v46) {
        goto LABEL_37;
      }
      unint64_t v23 = *(void *)(v47 + 8 * v24);
      if (!v23)
      {
        int64_t v24 = v54 + 3;
        if (v54 + 3 >= v46) {
          goto LABEL_37;
        }
        unint64_t v23 = *(void *)(v47 + 8 * v24);
        if (!v23)
        {
          int64_t v24 = v54 + 4;
          if (v54 + 4 >= v46) {
            goto LABEL_37;
          }
          unint64_t v23 = *(void *)(v47 + 8 * v24);
          if (!v23) {
            break;
          }
        }
      }
    }

uint64_t sub_100292FF4(uint64_t a1)
{
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0) {
      uint64_t v13 = a1;
    }
    else {
      uint64_t v13 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter(v13);
    swift_bridgeObjectRelease();
  }

  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  }

  uint64_t v3 = _swiftEmptyArrayStorage;
  if (!v2) {
    return (uint64_t)v3;
  }
  Swift::String v16 = _swiftEmptyArrayStorage;
  uint64_t result = sub_10016F76C(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000LL) == 0)
  {
    if ((a1 & 0xC000000000000001LL) != 0)
    {
      uint64_t v5 = 0LL;
      uint64_t v3 = v16;
      do
      {
        uint64_t v14 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, a1);
        uint64_t v6 = sub_100156B68(&qword_1003FCED0);
        swift_dynamicCast(v15, &v14, v6, (char *)&type metadata for Any + 8, 7LL);
        if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0)
        {
          sub_10016F76C(0, v3[2] + 1LL, 1);
          uint64_t v3 = v16;
        }

        unint64_t v8 = v3[2];
        unint64_t v7 = v3[3];
        if (v8 >= v7 >> 1)
        {
          sub_10016F76C(v7 > 1, v8 + 1, 1);
          uint64_t v3 = v16;
        }

        ++v5;
        v3[2] = v8 + 1;
        sub_100160944(v15, &v3[4 * v8 + 4]);
      }

      while (v2 != v5);
    }

    else
    {
      Swift::String v9 = (uint64_t *)(a1 + 32);
      uint64_t v3 = v16;
      do
      {
        uint64_t v14 = *v9;
        swift_unknownObjectRetain(v14);
        uint64_t v10 = sub_100156B68(&qword_1003FCED0);
        swift_dynamicCast(v15, &v14, v10, (char *)&type metadata for Any + 8, 7LL);
        if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0)
        {
          sub_10016F76C(0, v3[2] + 1LL, 1);
          uint64_t v3 = v16;
        }

        unint64_t v12 = v3[2];
        unint64_t v11 = v3[3];
        if (v12 >= v11 >> 1)
        {
          sub_10016F76C(v11 > 1, v12 + 1, 1);
          uint64_t v3 = v16;
        }

        v3[2] = v12 + 1;
        sub_100160944(v15, &v3[4 * v12 + 4]);
        ++v9;
        --v2;
      }

      while (v2);
    }

    return (uint64_t)v3;
  }

  __break(1u);
  return result;
}

BOOL sub_1002932B0()
{
  id v1 = (os_unfair_lock_s *)(*(void *)(v0 + OBJC_IVAR___MRDGroupSessionAssertionManager_lock) + 16LL);
  os_unfair_lock_lock(v1);
  sub_10029514C(&v4);
  BOOL v2 = v4;
  os_unfair_lock_unlock(v1);
  return v2;
}

uint64_t sub_100293308(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = type metadata accessor for UUID(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = __chkstk_darwin(v5);
  Swift::String v9 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  unint64_t v11 = (char *)aBlock - v10;
  sub_100293658(a1, a2, (uint64_t)aBlock - v10);
  uint64_t v12 = swift_allocObject(&unk_1003AC970, 24LL, 7LL);
  swift_unknownObjectWeakInit(v12 + 16, v2);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
  uint64_t v13 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v14 = (v13 + 24) & ~v13;
  uint64_t v15 = swift_allocObject(&unk_1003AC998, v14 + v7, v13 | 7);
  *(void *)(v15 + swift_weakDestroy(v0 + 16) = v12;
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v15 + v14, v9, v5);
  id v16 = objc_allocWithZone(&OBJC_CLASS___MRGroupSessionAssertion);
  uint64_t aBlock[4] = sub_100295240;
  uint64_t v22 = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_100157EA8;
  aBlock[3] = &unk_1003AC9B0;
  Swift::String v17 = _Block_copy(aBlock);
  uint64_t v18 = v22;
  swift_retain(v12);
  swift_release(v18);
  id v19 = [v16 initWithCancellationHandler:v17];
  _Block_release(v17);
  uint64_t result = swift_release(v12);
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    return (uint64_t)v19;
  }

  else
  {
    __break(1u);
  }

  return result;
}

void sub_10029352C(uint64_t a1)
{
}

void sub_10029354C(uint64_t a1)
{
}

void sub_100293558(uint64_t a1, SEL *a2)
{
  uint64_t v5 = (os_unfair_lock_s *)(*(void *)(v2 + OBJC_IVAR___MRDGroupSessionAssertionManager_lock) + 16LL);
  os_unfair_lock_lock(v5);
  objc_msgSend(*(id *)(v2 + OBJC_IVAR___MRDGroupSessionAssertionManager_observers), *a2, a1);
  os_unfair_lock_unlock(v5);
}

void sub_1002935C8(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  uint64_t v8 = (os_unfair_lock_s *)(*(void *)&a1[OBJC_IVAR___MRDGroupSessionAssertionManager_lock] + 16LL);
  swift_unknownObjectRetain(a3);
  Swift::String v9 = a1;
  os_unfair_lock_lock(v8);
  a5();
  os_unfair_lock_unlock(v8);
  swift_unknownObjectRelease(a3);
}

void sub_100293658(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t ObjectType = swift_getObjectType(v3, a2);
  uint64_t v8 = type metadata accessor for UUID(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  UUID.init()(v10);
  uint64_t v13 = *(os_unfair_lock_s **)(v3 + OBJC_IVAR___MRDGroupSessionAssertionManager_lock);
  uint64_t v31 = v3;
  uint64_t v32 = a3;
  uint64_t v33 = a1;
  unint64_t v34 = a2;
  uint64_t v14 = v13 + 4;
  os_unfair_lock_lock(v13 + 4);
  sub_100295740((BOOL *)&v36);
  int v15 = v36;
  os_unfair_lock_unlock(v14);
  if (v15 == 1) {
    sub_100293FE8(v16, v17);
  }
  if (qword_100403E30 != -1) {
    swift_once(&qword_100403E30, sub_100292570);
  }
  uint64_t v18 = type metadata accessor for Logger(0LL);
  sub_10015ADAC(v18, (uint64_t)qword_100403E38);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a3, v8);
  swift_bridgeObjectRetain_n(a2, 2LL);
  unint64_t v20 = (os_log_s *)Logger.logObject.getter(v19);
  os_log_type_t v21 = static os_log_type_t.default.getter(v20);
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc(32LL, -1LL);
    uint64_t v30 = swift_slowAlloc(96LL, -1LL);
    uint64_t v36 = v30;
    *(_DWORD *)uint64_t v22 = 136315650;
    uint64_t v23 = _typeName(_:qualified:)(ObjectType, 0LL);
    uint64_t v29 = a1;
    uint64_t v35 = sub_10015ADC4(v23, v24, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, &v36, v22 + 4, v22 + 12);
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2082;
    uint64_t v25 = sub_100156FEC( &qword_1003F8690,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
    uint64_t v26 = dispatch thunk of CustomStringConvertible.description.getter(v8, v25);
    uint64_t v35 = sub_10015ADC4(v26, v27, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, &v36, v22 + 14, v22 + 22);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    *(_WORD *)(v22 + 22) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_10015ADC4(v29, a2, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, &v36, v22 + 24, v22 + 32);
    swift_bridgeObjectRelease_n(a2, 3LL);
    _os_log_impl( (void *)&_mh_execute_header,  v20,  v21,  "[%s] Began assertion: %{public}s because: %{public}s",  (uint8_t *)v22,  0x20u);
    uint64_t v28 = v30;
    swift_arrayDestroy(v30, 3LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v28, -1LL, -1LL);
    swift_slowDealloc(v22, -1LL, -1LL);
  }

  else
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);

    swift_bridgeObjectRelease_n(a2, 2LL);
  }

uint64_t sub_100293978@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, BOOL *a5@<X8>)
{
  uint64_t v10 = type metadata accessor for UUID(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = (void *)(a1 + OBJC_IVAR___MRDGroupSessionAssertionManager_assertions);
  __n128 v15 = swift_beginAccess(v14, v22, 0LL, 0LL);
  BOOL v16 = *(void *)(*v14 + 16LL) == 0LL;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16))(v13, a2, v10, v15);
  swift_beginAccess(v14, v21, 33LL, 0LL);
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v14);
  uint64_t v20 = *v14;
  void *v14 = 0x8000000000000000LL;
  sub_100294D70(a3, a4, (uint64_t)v13, isUniquelyReferenced_nonNull_native);
  void *v14 = v20;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t result = swift_endAccess(v21);
  *a5 = v16;
  return result;
}

void sub_100293AC0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t ObjectType = swift_getObjectType(v2, a2);
  uint64_t v5 = type metadata accessor for UUID(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v42 - v10;
  uint64_t v12 = *(os_unfair_lock_s **)(v2 + OBJC_IVAR___MRDGroupSessionAssertionManager_lock);
  uint64_t v48 = v2;
  uint64_t v49 = a1;
  uint64_t v13 = v12 + 4;
  os_unfair_lock_lock(v12 + 4);
  sub_10029551C((uint64_t)v51);
  int v14 = LOBYTE(v51[0]);
  uint64_t v15 = v51[1];
  unint64_t v16 = v51[2];
  os_unfair_lock_unlock(v13);
  if (v16)
  {
    uint64_t v44 = v15;
    int v47 = v14;
    if (qword_100403E30 != -1) {
      swift_once(&qword_100403E30, sub_100292570);
    }
    uint64_t v17 = type metadata accessor for Logger(0LL);
    sub_10015ADAC(v17, (uint64_t)qword_100403E38);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v11, a1, v5);
    uint64_t v18 = swift_bridgeObjectRetain();
    uint64_t v19 = (os_log_s *)Logger.logObject.getter(v18);
    os_log_type_t v20 = static os_log_type_t.default.getter(v19);
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = swift_slowAlloc(32LL, -1LL);
      uint64_t v45 = v3;
      uint64_t v22 = v21;
      uint64_t v43 = swift_slowAlloc(96LL, -1LL);
      v51[0] = v43;
      *(_DWORD *)uint64_t v22 = 136315650;
      uint64_t v23 = _typeName(_:qualified:)(ObjectType, 0LL);
      uint64_t v50 = sub_10015ADC4(v23, v24, v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, v51, v22 + 4, v22 + 12);
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2082;
      uint64_t v25 = sub_100156FEC( &qword_1003F8690,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
      uint64_t v26 = dispatch thunk of CustomStringConvertible.description.getter(v5, v25);
      uint64_t v50 = sub_10015ADC4(v26, v27, v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, v51, v22 + 14, v22 + 22);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
      *(_WORD *)(v22 + 22) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v50 = sub_10015ADC4(v44, v16, v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, v51, v22 + 24, v22 + 32);
      swift_bridgeObjectRelease_n(v16, 3LL);
      _os_log_impl( (void *)&_mh_execute_header,  v19,  v20,  "[%s] Ended assertion: %{public}s with reason: %{public}s",  (uint8_t *)v22,  0x20u);
      uint64_t v28 = v43;
      swift_arrayDestroy(v43, 3LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v28, -1LL, -1LL);
      swift_slowDealloc(v22, -1LL, -1LL);

      if (!v47) {
        return;
      }
LABEL_15:
      sub_100293FE8(v29, v30);
      return;
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);

    uint64_t v29 = swift_bridgeObjectRelease_n(v16, 2LL);
    if (v47) {
      goto LABEL_15;
    }
  }

  else
  {
    if (qword_100403E30 != -1) {
      swift_once(&qword_100403E30, sub_100292570);
    }
    uint64_t v31 = type metadata accessor for Logger(0LL);
    sub_10015ADAC(v31, (uint64_t)qword_100403E38);
    uint64_t v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a1, v5);
    uint64_t v33 = (os_log_s *)Logger.logObject.getter(v32);
    os_log_type_t v34 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = swift_slowAlloc(22LL, -1LL);
      uint64_t v36 = swift_slowAlloc(64LL, -1LL);
      v51[0] = v36;
      *(_DWORD *)uint64_t v35 = 136315394;
      uint64_t v37 = _typeName(_:qualified:)(ObjectType, 0LL);
      uint64_t v45 = v3;
      uint64_t v50 = sub_10015ADC4(v37, v38, v51);
      int v47 = v14;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, v51, v35 + 4, v35 + 12);
      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 12) = 2082;
      uint64_t v39 = sub_100156FEC( &qword_1003F8690,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
      uint64_t v40 = dispatch thunk of CustomStringConvertible.description.getter(v5, v39);
      uint64_t v50 = sub_10015ADC4(v40, v41, v51);
      int v14 = v47;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, v51, v35 + 14, v35 + 22);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      _os_log_impl( (void *)&_mh_execute_header,  v33,  v34,  "[%s] Attempted to end unknown assertion: %{public}s",  (uint8_t *)v35,  0x16u);
      swift_arrayDestroy(v36, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v36, -1LL, -1LL);
      swift_slowDealloc(v35, -1LL, -1LL);
    }

    else
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    }

    if (v14) {
      goto LABEL_15;
    }
  }

uint64_t sub_100293FE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t ObjectType = swift_getObjectType(v2, a2);
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v50 = *(void *)(v8 - 8);
  uint64_t v51 = v8;
  __chkstk_darwin(v8);
  uint64_t v49 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v52 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = *(os_unfair_lock_s **)&v2[OBJC_IVAR___MRDGroupSessionAssertionManager_lock];
  uint64_t v53 = v2;
  int v14 = v13 + 4;
  os_unfair_lock_lock(v13 + 4);
  sub_1002952F4((uint64_t)&aBlock);
  LODWORD(v15) = aBlock;
  unint64_t v16 = (void *)v56;
  os_unfair_lock_unlock(v14);
  if (qword_100403E30 != -1) {
    swift_once(&qword_100403E30, sub_100292570);
  }
  uint64_t v17 = sub_10015ADAC(v10, (uint64_t)qword_100403E38);
  uint64_t v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v52 + 16))(v12, v17, v10);
  uint64_t v19 = (os_log_s *)Logger.logObject.getter(v18);
  os_log_type_t v20 = static os_log_type_t.default.getter(v19);
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc(22LL, -1LL);
    int64_t v46 = v7;
    uint64_t v22 = v21;
    uint64_t v23 = (void **)swift_slowAlloc(64LL, -1LL);
    uint64_t v47 = v5;
    unint64_t v24 = v23;
    Swift::String aBlock = v23;
    *(_DWORD *)uint64_t v22 = 136315394;
    uint64_t v44 = v3;
    char v25 = v15;
    uint64_t v26 = _typeName(_:qualified:)(ObjectType, 0LL);
    uint64_t v45 = v16;
    int64_t v54 = (void *)sub_10015ADC4(v26, v27, (uint64_t *)&aBlock);
    uint64_t ObjectType = v4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, &aBlock, v22 + 4, v22 + 12);
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2080;
    if ((_DWORD)v15) {
      uint64_t v28 = 0x7265737361207369LL;
    }
    else {
      uint64_t v28 = 0x6573736120746F6ELL;
    }
    if ((_DWORD)v15) {
      unint64_t v15 = 0xEC000000676E6974LL;
    }
    else {
      unint64_t v15 = 0xED0000676E697472LL;
    }
    int64_t v54 = (void *)sub_10015ADC4(v28, v15, (uint64_t *)&aBlock);
    uint64_t v4 = ObjectType;
    unint64_t v16 = v45;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, &aBlock, v22 + 14, v22 + 22);
    LOBYTE(v15) = v25;
    uint64_t v3 = v44;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "[%s] Notifying observers: %s", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy(v24, 2LL, (char *)&type metadata for Any + 8);
    uint64_t v29 = v24;
    uint64_t v5 = v47;
    swift_slowDealloc(v29, -1LL, -1LL);
    uint64_t v30 = v22;
    uint64_t v7 = v46;
    swift_slowDealloc(v30, -1LL, -1LL);
  }

  uint64_t v31 = (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v12, v10);
  id v33 = (id)MRGroupSessionSubsystemGetNotificationQueue(v31, v32);
  uint64_t v34 = swift_allocObject(&unk_1003AC9E8, 40LL, 7LL);
  *(void *)(v34 + swift_weakDestroy(v0 + 16) = v16;
  *(_BYTE *)(v34 + 24) = v15;
  *(void *)(v34 + 32) = v3;
  __int128 v59 = sub_100295394;
  uint64_t v60 = v34;
  Swift::String aBlock = _NSConcreteStackBlock;
  uint64_t v56 = 1107296256LL;
  uint64_t v57 = sub_100157EA8;
  uint64_t v58 = &unk_1003ACA00;
  uint64_t v35 = _Block_copy(&aBlock);
  id v36 = v16;
  id v37 = v3;
  unint64_t v38 = v49;
  static DispatchQoS.unspecified.getter(v37);
  int64_t v54 = _swiftEmptyArrayStorage;
  uint64_t v39 = sub_100156FEC( (unint64_t *)&qword_1003FADB0,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v40 = sub_100156B68((uint64_t *)&unk_1003F9A70);
  unint64_t v41 = sub_1002954D0();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v54, v40, v41, v4, v39);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v38, v7, v35);
  _Block_release(v35);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v38, v51);
  return swift_release(v60);
}

id sub_100294468()
{
  uint64_t v1 = OBJC_IVAR___MRDGroupSessionAssertionManager_observers;
  uint64_t v2 = (void *)objc_opt_self(&OBJC_CLASS___NSHashTable);
  uint64_t v3 = v0;
  *(void *)&v0[v1] = [v2 weakObjectsHashTable];
  uint64_t v4 = OBJC_IVAR___MRDGroupSessionAssertionManager_assertions;
  *(void *)&v3[v4] = sub_1002925C8((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v5 = OBJC_IVAR___MRDGroupSessionAssertionManager_lock;
  uint64_t v6 = sub_100156B68(&qword_1003FCE80);
  uint64_t v7 = swift_allocObject(v6, 20LL, 7LL);
  *(_DWORD *)(v7 + swift_weakDestroy(v0 + 16) = 0;
  *(void *)&v3[v5] = v7;

  v9.receiver = v3;
  v9.super_class = (Class)type metadata accessor for GroupSessionAssertionManager();
  return objc_msgSendSuper2(&v9, "init");
}

id sub_100294548()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for GroupSessionAssertionManager();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100294638(uint64_t a1)
{
  objc_super v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_100162DEC(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0LL;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  uint64_t v7 = *v2;
  uint64_t v12 = *v2;
  *objc_super v2 = 0x8000000000000000LL;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_100294EDC();
    uint64_t v7 = v12;
  }

  uint64_t v8 = *(void *)(v7 + 48);
  uint64_t v9 = type metadata accessor for UUID(0LL);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v9 - 8) + 8LL))( v8 + *(void *)(*(void *)(v9 - 8) + 72LL) * v4,  v9);
  uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 16 * v4);
  sub_100294AD0(v4, v7);
  *objc_super v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_100294724(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for UUID(0LL);
  uint64_t v48 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = *v2;
  if (*(void *)(*v2 + 24) > a1) {
    a1 = *(void *)(*v2 + 24);
  }
  sub_100156B68(&qword_1003FCED8);
  int v47 = a2;
  uint64_t v10 = static _DictionaryStorage.resize(original:capacity:move:)(v9, a1, a2);
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16)) {
    goto LABEL_43;
  }
  uint64_t v12 = 1LL << *(_BYTE *)(v9 + 32);
  uint64_t v13 = *(void *)(v9 + 64);
  uint64_t v45 = (void *)(v9 + 64);
  if (v12 < 64) {
    uint64_t v14 = ~(-1LL << v12);
  }
  else {
    uint64_t v14 = -1LL;
  }
  unint64_t v15 = v14 & v13;
  uint64_t v43 = v2;
  int64_t v44 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v16 = v10 + 64;
  uint64_t result = swift_retain(v9);
  int64_t v18 = 0LL;
  for (i = v9; ; uint64_t v9 = i)
  {
    if (v15)
    {
      unint64_t v21 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v22 = v21 | (v18 << 6);
      goto LABEL_24;
    }

    int64_t v23 = v18 + 1;
    if (__OFADD__(v18, 1LL))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return result;
    }

    if (v23 >= v44) {
      break;
    }
    unint64_t v24 = v45;
    unint64_t v25 = v45[v23];
    ++v18;
    if (!v25)
    {
      int64_t v18 = v23 + 1;
      if (v23 + 1 >= v44) {
        goto LABEL_36;
      }
      unint64_t v25 = v45[v18];
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v44)
        {
LABEL_36:
          swift_release(v9);
          uint64_t v3 = v43;
          if ((v47 & 1) == 0) {
            goto LABEL_43;
          }
          goto LABEL_39;
        }

        unint64_t v25 = v45[v26];
        if (!v25)
        {
          while (1)
          {
            int64_t v18 = v26 + 1;
            if (__OFADD__(v26, 1LL)) {
              goto LABEL_45;
            }
            if (v18 >= v44) {
              goto LABEL_36;
            }
            unint64_t v25 = v45[v18];
            ++v26;
            if (v25) {
              goto LABEL_23;
            }
          }
        }

        int64_t v18 = v26;
      }
    }

unint64_t sub_100294AD0(int64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID(0LL);
  uint64_t v38 = *(void *)(v4 - 8);
  unint64_t result = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = a2 + 64;
  uint64_t v9 = -1LL << *(_BYTE *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1LL << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    unint64_t result = _HashTable.previousHole(before:)(a1, a2 + 64, ~v9);
    if ((*(void *)(v8 + 8 * (v10 >> 6)) & (1LL << v10)) != 0)
    {
      unint64_t v37 = (result + 1) & v11;
      uint64_t v12 = *(void *)(v38 + 72);
      unint64_t v36 = *(void (**)(char *, unint64_t, uint64_t))(v38 + 16);
      uint64_t v13 = v11;
      do
      {
        uint64_t v14 = v8;
        uint64_t v15 = v12;
        int64_t v16 = v12 * v10;
        uint64_t v17 = v13;
        v36(v7, *(void *)(a2 + 48) + v12 * v10, v4);
        uint64_t v18 = *(void *)(a2 + 40);
        uint64_t v19 = sub_100156FEC( &qword_1003F8410,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
        uint64_t v20 = dispatch thunk of Hashable._rawHashValue(seed:)(v18, v4, v19);
        unint64_t result = (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v7, v4);
        uint64_t v13 = v17;
        unint64_t v21 = v20 & v17;
        if (a1 >= (uint64_t)v37)
        {
          if (v21 >= v37 && a1 >= (uint64_t)v21)
          {
LABEL_16:
            uint64_t v24 = *(void *)(a2 + 48);
            unint64_t result = v24 + v15 * a1;
            uint64_t v25 = v24 + v16;
            uint64_t v8 = v14;
            if (v15 * a1 < v16 || (uint64_t v12 = v15, result >= v25 + v15))
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack(result, v25, 1LL, v4);
LABEL_21:
              uint64_t v13 = v17;
              uint64_t v12 = v15;
            }

            else if (v15 * a1 != v16)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront(result);
              goto LABEL_21;
            }

            uint64_t v26 = *(void *)(a2 + 56);
            uint64_t v27 = (_OWORD *)(v26 + 16 * a1);
            unint64_t v28 = (_OWORD *)(v26 + 16 * v10);
            if (a1 != v10 || (a1 = v10, v27 >= v28 + 1))
            {
              *uint64_t v27 = *v28;
              a1 = v10;
            }

            goto LABEL_5;
          }
        }

        else if (v21 >= v37 || a1 >= (uint64_t)v21)
        {
          goto LABEL_16;
        }

        uint64_t v8 = v14;
        uint64_t v12 = v15;
LABEL_5:
        unint64_t v10 = (v10 + 1) & v13;
      }

      while (((*(void *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v10) & 1) != 0);
    }

    uint64_t v29 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v30 = *v29;
    uint64_t v31 = (-1LL << a1) - 1;
  }

  else
  {
    uint64_t v29 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v31 = *v29;
    uint64_t v30 = (-1LL << a1) - 1;
  }

  *uint64_t v29 = v31 & v30;
  uint64_t v32 = *(void *)(a2 + 16);
  BOOL v33 = __OFSUB__(v32, 1LL);
  uint64_t v34 = v32 - 1;
  if (v33)
  {
    __break(1u);
  }

  else
  {
    *(void *)(a2 + swift_weakDestroy(v0 + 16) = v34;
    ++*(_DWORD *)(a2 + 36);
  }

  return result;
}

uint64_t sub_100294D70(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  char v5 = (void **)v4;
  uint64_t v28 = a2;
  uint64_t v9 = type metadata accessor for UUID(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = (void *)*v4;
  unint64_t v15 = sub_100162DEC(a3);
  uint64_t v16 = v13[2];
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_14;
  }

  char v19 = v14;
  uint64_t v20 = v13[3];
  if (v20 >= v18 && (a4 & 1) != 0)
  {
LABEL_7:
    unint64_t v21 = *v5;
    if ((v19 & 1) != 0)
    {
LABEL_8:
      unint64_t v22 = (uint64_t *)(v21[7] + 16 * v15);
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v24 = v28;
      *unint64_t v22 = a1;
      v22[1] = v24;
      return result;
    }

    goto LABEL_11;
  }

  if (v20 >= v18 && (a4 & 1) == 0)
  {
    sub_100294EDC();
    goto LABEL_7;
  }

  sub_100294724(v18, a4 & 1);
  unint64_t v25 = sub_100162DEC(a3);
  if ((v19 & 1) != (v26 & 1))
  {
LABEL_14:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v9);
    __break(1u);
    return result;
  }

  unint64_t v15 = v25;
  unint64_t v21 = *v5;
  if ((v19 & 1) != 0) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a3, v9);
  return sub_100163714(v15, (uint64_t)v12, a1, v28, v21);
}

void *sub_100294EDC()
{
  uint64_t v36 = type metadata accessor for UUID(0LL);
  uint64_t v1 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v35 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_100156B68(&qword_1003FCED8);
  uint64_t v32 = v0;
  uint64_t v3 = *v0;
  uint64_t v4 = static _DictionaryStorage.copy(original:)(*v0);
  uint64_t v5 = *(void *)(v3 + 16);
  uint64_t v38 = v4;
  if (!v5)
  {
    uint64_t result = (void *)swift_release(v3);
    uint64_t v30 = v38;
    uint64_t v29 = v32;
LABEL_28:
    *uint64_t v29 = v30;
    return result;
  }

  uint64_t v6 = v4;
  uint64_t result = (void *)(v4 + 64);
  unint64_t v8 = (unint64_t)((1LL << *(_BYTE *)(v6 + 32)) + 63) >> 6;
  uint64_t v34 = (const void *)(v3 + 64);
  if (v6 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
  {
    uint64_t result = memmove(result, v34, 8 * v8);
    uint64_t v6 = v38;
  }

  int64_t v10 = 0LL;
  *(void *)(v6 + swift_weakDestroy(v0 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1LL << *(_BYTE *)(v3 + 32);
  uint64_t v37 = v3;
  uint64_t v12 = -1LL;
  if (v11 < 64) {
    uint64_t v12 = ~(-1LL << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v33 = (unint64_t)(v11 + 63) >> 6;
  unint64_t v15 = v35;
  uint64_t v14 = v36;
  uint64_t v16 = v38;
  while (1)
  {
    if (v13)
    {
      unint64_t v17 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v18 = v17 | (v10 << 6);
      uint64_t v19 = v37;
      goto LABEL_12;
    }

    int64_t v26 = v10 + 1;
    uint64_t v19 = v37;
    if (__OFADD__(v10, 1LL))
    {
      __break(1u);
      goto LABEL_30;
    }

    if (v26 >= v33) {
      goto LABEL_26;
    }
    unint64_t v27 = *((void *)v34 + v26);
    ++v10;
    if (!v27)
    {
      int64_t v10 = v26 + 1;
      if (v26 + 1 >= v33) {
        goto LABEL_26;
      }
      unint64_t v27 = *((void *)v34 + v10);
      if (!v27) {
        break;
      }
    }

uint64_t sub_10029514C@<X0>(BOOL *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16) + OBJC_IVAR___MRDGroupSessionAssertionManager_assertions;
  uint64_t result = swift_beginAccess(v3, v5, 0LL, 0LL);
  *a1 = *(void *)(*(void *)v3 + 16LL) != 0LL;
  return result;
}

uint64_t sub_1002951A8()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1002951CC()
{
  uint64_t v1 = type metadata accessor for UUID(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release(*(void *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_100295240()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(type metadata accessor for UUID(0LL) - 8) + 80LL);
  uint64_t v2 = *(void *)(v0 + 16) + 16LL;
  swift_beginAccess(v2, v6, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    sub_100293AC0(v0 + ((v1 + 24) & ~v1), v4);
  }

uint64_t sub_1002952BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1002952CC(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t type metadata accessor for GroupSessionAssertionManager()
{
  return objc_opt_self(&OBJC_CLASS___MRDGroupSessionAssertionManager);
}

id sub_1002952F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = v3 + OBJC_IVAR___MRDGroupSessionAssertionManager_assertions;
  swift_beginAccess(v3 + OBJC_IVAR___MRDGroupSessionAssertionManager_assertions, v7, 0LL, 0LL);
  *(_BYTE *)a1 = *(void *)(*(void *)v4 + 16LL) != 0LL;
  uint64_t v5 = *(void **)(v3 + OBJC_IVAR___MRDGroupSessionAssertionManager_observers);
  *(void *)(a1 + 8) = v5;
  return v5;
}

uint64_t sub_100295368()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

void sub_100295394()
{
  int v1 = *(unsigned __int8 *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 32);
  id v3 = [*(id *)(v0 + 16) allObjects];
  uint64_t v4 = sub_100156B68(&qword_1003FCED0);
  uint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

  if (!((unint64_t)v5 >> 62))
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    if (v6) {
      goto LABEL_3;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    return;
  }

  if (v5 < 0) {
    uint64_t v10 = v5;
  }
  else {
    uint64_t v10 = v5 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = _CocoaArrayWrapper.endIndex.getter(v10);
  swift_bridgeObjectRelease();
  if (!v6) {
    goto LABEL_16;
  }
LABEL_3:
  if (v6 >= 1)
  {
    uint64_t v7 = 0LL;
    do
    {
      if ((v5 & 0xC000000000000001LL) != 0)
      {
        unint64_t v8 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v5);
      }

      else
      {
        unint64_t v8 = *(void **)(v5 + 8 * v7 + 32);
        swift_unknownObjectRetain(v8);
      }

      ++v7;
      if (v1) {
        uint64_t v9 = &selRef_groupSessionAssertionManagerDidAssert_;
      }
      else {
        uint64_t v9 = &selRef_groupSessionAssertionManagerDidUnassert_;
      }
      objc_msgSend(v8, *v9, v2);
      swift_unknownObjectRelease(v8);
    }

    while (v6 != v7);
    goto LABEL_16;
  }

  __break(1u);
}

unint64_t sub_1002954D0()
{
  unint64_t result = qword_1003FADC0;
  if (!qword_1003FADC0)
  {
    uint64_t v1 = sub_100160358((uint64_t *)&unk_1003F9A70);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1003FADC0);
  }

  return result;
}

uint64_t sub_10029551C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = v3 + OBJC_IVAR___MRDGroupSessionAssertionManager_assertions;
  swift_beginAccess(v3 + OBJC_IVAR___MRDGroupSessionAssertionManager_assertions, v10, 33LL, 0LL);
  uint64_t v6 = sub_100294638(v4);
  uint64_t v8 = v7;
  uint64_t result = swift_endAccess(v10);
  *(_BYTE *)a1 = *(void *)(*(void *)v5 + 16LL) == 0LL;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v8;
  return result;
}

id sub_1002955A0()
{
  return sub_1002955F8((SEL *)&selRef_removeObject_);
}

uint64_t sub_1002955BC()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

id sub_1002955DC()
{
  return sub_1002955F8((SEL *)&selRef_addObject_);
}

id sub_1002955F8(SEL *a1)
{
  return objc_msgSend( *(id *)(*(void *)(v1 + 16) + OBJC_IVAR___MRDGroupSessionAssertionManager_observers),  *a1,  *(void *)(v1 + 24));
}

uint64_t sub_100295634@<X0>(BOOL *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16) + OBJC_IVAR___MRDGroupSessionAssertionManager_assertions;
  uint64_t result = swift_beginAccess(v3, v5, 0LL, 0LL);
  *a1 = *(void *)(*(void *)v3 + 16LL) != 0LL;
  return result;
}

void *sub_1002956A0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

void sub_1002956DC(void *a1@<X8>)
{
}

void *sub_100295704@<X0>(void *a1@<X8>)
{
  uint64_t result = (*(void *(**)(void *__return_ptr))(v1 + 16))(v6);
  if (!v2)
  {
    uint64_t v5 = v6[1];
    *a1 = v6[0];
    a1[1] = v5;
  }

  return result;
}

uint64_t sub_100295740@<X0>(BOOL *a1@<X8>)
{
  return sub_100293978(v1[2], v1[3], v1[4], v1[5], a1);
}

uint64_t sub_10029574C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100156B68((uint64_t *)&unk_1003FCEE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_100295794(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100156B68((uint64_t *)&unk_1003FCEF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002957E4()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_1001609C4(v0, qword_100403E58);
  sub_10015ADAC(v0, (uint64_t)qword_100403E58);
  id v1 = (id)*sub_100173F8C();
  return Logger.init(_:)(v1);
}

id sub_10029583C()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for GroupSessionHomeObserver()) init];
  qword_100405C90 = (uint64_t)result;
  return result;
}

uint64_t *sub_100295868()
{
  if (qword_100403E70 != -1) {
    swift_once(&qword_100403E70, sub_10029583C);
  }
  return &qword_100405C90;
}

uint64_t sub_1002958E8(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  *(void *)(v1 + swift_unknownObjectWeakDestroy(v0 + 16) = v3;
  uint64_t v4 = sub_10016083C(0LL, &qword_1003FCFD0, &OBJC_CLASS___HMHomeManager_ptr);
  void *v3 = v1;
  v3[1] = sub_100160A04;
  return withCheckedContinuation<A>(isolation:function:_:)( a1,  0LL,  0LL,  0xD000000000000018LL,  0x8000000100350B90LL,  sub_100295984,  0LL,  v4);
}

void sub_100295984(uint64_t a1)
{
  uint64_t v39 = sub_100156B68(&qword_1003FCFD8);
  uint64_t v2 = *(void *)(v39 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  __chkstk_darwin(v39);
  uint64_t v38 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for Date(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v35 - v9;
  if (qword_100403E50 != -1) {
    swift_once(&qword_100403E50, sub_1002957E4);
  }
  uint64_t v11 = type metadata accessor for Logger(0LL);
  uint64_t v12 = sub_10015ADAC(v11, (uint64_t)qword_100403E58);
  unint64_t v13 = (os_log_s *)Logger.logObject.getter(v12);
  os_log_type_t v14 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v36 = a1;
    uint64_t v15 = swift_slowAlloc(12LL, -1LL);
    uint64_t v35 = v5;
    uint64_t v16 = (uint8_t *)v15;
    uint64_t v17 = swift_slowAlloc(32LL, -1LL);
    uint64_t v37 = v3;
    uint64_t v18 = v17;
    aBlock[0] = v17;
    *(_DWORD *)uint64_t v16 = 136315138;
    uint64_t v40 = sub_10015ADC4(0xD000000000000018LL, 0x8000000100350B90LL, aBlock);
    a1 = v36;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, aBlock, v16 + 4, v16 + 12);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "[%s] - Initializing HMHomeManager", v16, 0xCu);
    swift_arrayDestroy(v18, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v19 = v18;
    uint64_t v3 = v37;
    swift_slowDealloc(v19, -1LL, -1LL);
    unint64_t v20 = v16;
    uint64_t v5 = v35;
    swift_slowDealloc(v20, -1LL, -1LL);
  }

  id v21 = [objc_allocWithZone(HMHomeManager) initWithOptions:9];
  uint64_t v22 = static Date.now.getter(v21);
  Date.addingTimeInterval(_:)(v22, 10.0);
  uint64_t v23 = *(void (**)(char *, uint64_t))(v5 + 8);
  v23(v8, v4);
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  v23(v10, v4);
  int64_t v26 = v38;
  uint64_t v25 = v39;
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v38, a1, v39);
  uint64_t v27 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v28 = (v27 + 16) & ~v27;
  unint64_t v29 = (v3 + v28 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v30 = swift_allocObject(&unk_1003ACB48, v29 + 8, v27 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v30 + v28, v26, v25);
  *(void *)(v30 + v29) = v21;
  uint64_t aBlock[4] = (uint64_t)sub_100298B18;
  uint64_t v42 = v30;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = (uint64_t)sub_100157E54;
  aBlock[3] = (uint64_t)&unk_1003ACB60;
  uint64_t v31 = _Block_copy(aBlock);
  uint64_t v32 = v42;
  id v33 = v21;
  swift_release(v32);
  id v34 = [v33 _refreshBeforeDate:isa completionHandler:v31];
  _Block_release(v31);

  swift_unknownObjectRelease(v34);
}

uint64_t sub_100295D00(uint64_t a1, uint64_t a2)
{
  v3[9] = v2;
  v3[10] = swift_getObjectType(v2, a2);
  uint64_t v4 = type metadata accessor for UUID(0LL);
  v3[11] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[12] = v5;
  v3[13] = swift_task_alloc((*(void *)(v5 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for Logger(0LL);
  v3[14] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v3[15] = v7;
  v3[16] = swift_task_alloc((*(void *)(v7 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_100295D94, 0LL, 0LL);
}

uint64_t sub_100295D94()
{
  uint64_t v1 = *(int **)(**(void **)(*(void *)(v0 + 72) + OBJC_IVAR___MRDGroupSessionHomeObserver_managerWrapper) + 176LL);
  uint64_t v4 = (uint64_t (*)(uint64_t))((char *)v1 + *v1);
  uint64_t v2 = (void *)swift_task_alloc(v1[1]);
  *(void *)(v0 + 136) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100295E0C;
  return v4(v0 + 48);
}

uint64_t sub_100295E0C()
{
  return swift_task_switch(sub_100295E60, 0LL, 0LL);
}

uint64_t sub_100295E60()
{
  uint64_t v2 = v0 + 48;
  uint64_t v1 = *(void **)(v0 + 48);
  id v3 = [v1 homes];

  uint64_t v4 = sub_10016083C(0LL, &qword_1003FCF28, &OBJC_CLASS___HMHome_ptr);
  uint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

  uint64_t v90 = _swiftEmptyArrayStorage;
  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0) {
      uint64_t v23 = v5;
    }
    else {
      uint64_t v23 = v5 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter(v23);
    uint64_t v85 = v0;
    if (v6) {
      goto LABEL_3;
    }
LABEL_20:
    swift_bridgeObjectRelease_n(v5, 2LL);
    uint64_t v22 = _swiftEmptyArrayStorage;
    goto LABEL_21;
  }

  uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  swift_bridgeObjectRetain();
  uint64_t v85 = v0;
  if (!v6) {
    goto LABEL_20;
  }
LABEL_3:
  if (v6 < 1)
  {
    __break(1u);
    goto LABEL_58;
  }

  uint64_t v86 = v0 + 48;
  for (uint64_t i = 0LL; i != v6; ++i)
  {
    if ((v5 & 0xC000000000000001LL) != 0) {
      id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v5);
    }
    else {
      id v9 = *(id *)(v5 + 8 * i + 32);
    }
    uint64_t v10 = v9;
    id v11 = [v9 users];
    uint64_t v12 = sub_10016083C(0LL, &qword_1003FCFA0, &OBJC_CLASS___HMUser_ptr);
    uint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, v12);

    uint64_t v91 = v13;
    id v14 = [v10 currentUser];
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v14);
    unint64_t v16 = *(void *)((v91 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
    unint64_t v15 = *(void *)((v91 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
    if (v16 >= v15 >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v15 > 1, v16 + 1, 1LL);
    }
    uint64_t v17 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v14);
    specialized Array._endMutation()(v17);
    id v18 = [v10 owner];
    if (v18)
    {
      id v19 = v18;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v18);
      unint64_t v21 = *(void *)((v91 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
      unint64_t v20 = *(void *)((v91 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
      if (v21 >= v20 >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v20 > 1, v21 + 1, 1LL);
      }
      uint64_t v8 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v21, v19);
      specialized Array._endMutation()(v8);
    }

    sub_1002971AC(v91);
  }

  swift_bridgeObjectRelease_n(v5, 2LL);
  uint64_t v22 = v90;
  uint64_t v0 = v85;
  uint64_t v2 = v86;
LABEL_21:
  uint64_t v24 = sub_100298768((uint64_t)v22);
  swift_bridgeObjectRelease();
  if (qword_100403E50 != -1) {
    swift_once(&qword_100403E50, sub_1002957E4);
  }
  uint64_t v25 = *(void *)(v0 + 120);
  uint64_t v26 = *(void *)(v0 + 128);
  uint64_t v27 = *(void *)(v0 + 112);
  uint64_t v28 = sub_10015ADAC(v27, (uint64_t)qword_100403E58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v26, v28, v27);
  swift_bridgeObjectRetain_n(v24, 2LL);
  uint64_t v30 = (void *)Logger.logObject.getter(v29);
  os_log_type_t v31 = static os_log_type_t.debug.getter();
  if (!os_log_type_enabled((os_log_t)v30, v31))
  {
    uint64_t v39 = *(void *)(v0 + 120);
    uint64_t v38 = *(void *)(v0 + 128);
    uint64_t v40 = *(void *)(v0 + 112);
    swift_bridgeObjectRelease_n(v24, 2LL);

    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v40);
LABEL_56:
    uint64_t v76 = *(void *)(v0 + 104);
    swift_task_dealloc(*(void *)(v0 + 128));
    swift_task_dealloc(v76);
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v24);
  }

  uint64_t v32 = *(void *)(v0 + 80);
  uint64_t v33 = swift_slowAlloc(22LL, -1LL);
  uint64_t v80 = swift_slowAlloc(64LL, -1LL);
  uint64_t v89 = v80;
  *(_DWORD *)uint64_t v33 = 136315394;
  uint64_t v34 = _typeName(_:qualified:)(v32, 0LL);
  *(void *)(v0 + 56) = sub_10015ADC4(v34, v35, &v89);
  uint64_t v79 = v2 + 16;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(v2 + 8, v2 + 16, v33 + 4, v33 + 12);
  swift_bridgeObjectRelease();
  *(_WORD *)(v33 + 12) = 2080;
  unint64_t v87 = v24 & 0xC000000000000001LL;
  unint64_t v82 = (uint8_t *)v33;
  os_log_type_t v81 = v31;
  if ((v24 & 0xC000000000000001LL) != 0)
  {
    if (v24 < 0) {
      uint64_t v36 = v24;
    }
    else {
      uint64_t v36 = v24 & 0xFFFFFFFFFFFFFF8LL;
    }
    uint64_t v37 = __CocoaSet.count.getter(v36);
  }

  else
  {
    uint64_t v37 = *(void *)(v24 + 16);
  }

  uint64_t v41 = _swiftEmptyArrayStorage;
  if (!v37)
  {
    uint64_t v46 = v24;
LABEL_55:
    uint64_t v71 = *(void *)(v0 + 120);
    uint64_t v88 = *(void *)(v0 + 128);
    uint64_t v72 = *(void *)(v0 + 112);
    uint64_t v73 = Array.description.getter(v41, *(void *)(v0 + 88));
    unint64_t v75 = v74;
    swift_bridgeObjectRelease();
    *(void *)(v85 + 64) = sub_10015ADC4(v73, v75, &v89);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v79, v85 + 72, v82 + 14, v82 + 22);
    uint64_t v0 = v85;
    swift_bridgeObjectRelease();
    uint64_t v24 = v46;
    swift_bridgeObjectRelease_n(v46, 2LL);
    _os_log_impl((void *)&_mh_execute_header, (os_log_t)v30, v81, "[%s - Known users: %s]", v82, 0x16u);
    swift_arrayDestroy(v80, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v80, -1LL, -1LL);
    swift_slowDealloc(v82, -1LL, -1LL);

    (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v88, v72);
    goto LABEL_56;
  }

  uint64_t v90 = _swiftEmptyArrayStorage;
  sub_100298034(0, v37 & ~(v37 >> 63), 0);
  if (v87)
  {
    if (v24 < 0) {
      uint64_t v42 = v24;
    }
    else {
      uint64_t v42 = v24 & 0xFFFFFFFFFFFFFF8LL;
    }
    uint64_t v43 = __CocoaSet.startIndex.getter(v42);
    char v45 = 1;
  }

  else
  {
    uint64_t v43 = sub_10015E990(v24);
    char v45 = v47 & 1;
  }

  uint64_t v91 = v43;
  uint64_t v92 = v44;
  char v93 = v45;
  if ((v37 & 0x8000000000000000LL) == 0)
  {
    id v78 = v30;
    uint64_t v48 = *(void *)(v0 + 96);
    uint64_t v49 = v24 & 0xFFFFFFFFFFFFFF8LL;
    if (v24 < 0) {
      uint64_t v49 = v24;
    }
    uint64_t v83 = v49;
    uint64_t v84 = v2 - 32;
    do
    {
      while (1)
      {
        int64_t v57 = v91;
        uint64_t v56 = v92;
        sub_100298500(v91, v92, v93, v24);
        id v59 = v58;
        id v60 = [v59 uniqueIdentifier];
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v41 = v90;
        if ((swift_isUniquelyReferenced_nonNull_native(v90) & 1) == 0)
        {
          sub_100298034(0, v41[2] + 1LL, 1);
          uint64_t v41 = v90;
        }

        unint64_t v62 = v41[2];
        unint64_t v61 = v41[3];
        if (v62 >= v61 >> 1)
        {
          sub_100298034(v61 > 1, v62 + 1, 1);
          uint64_t v41 = v90;
        }

        uint64_t v63 = *(void *)(v0 + 104);
        uint64_t v64 = *(void *)(v0 + 88);
        v41[2] = v62 + 1;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v48 + 32))( (unint64_t)v41 + ((*(unsigned __int8 *)(v48 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80))
        + *(void *)(v48 + 72) * v62,
          v63,
          v64);
        uint64_t v90 = v41;
        char v65 = v93;
        if (v87) {
          break;
        }
        int64_t v50 = sub_10015E644(v57, v56, v93, v24);
        uint64_t v51 = v24;
        uint64_t v53 = v52;
        char v55 = v54;
        sub_100160324(v57, v56, v65);
        uint64_t v91 = v50;
        uint64_t v92 = v53;
        uint64_t v24 = v51;
        uint64_t v0 = v85;
        char v93 = v55 & 1;
        if (!--v37) {
          goto LABEL_54;
        }
      }

      if ((v93 & 1) == 0) {
        goto LABEL_59;
      }
      uint64_t v66 = __CocoaSet.Index.handleBitPattern.getter(v57, v56);
      if (v66) {
        uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v66);
      }
      else {
        uint64_t isUniquelyReferenced_nonNull_native = 1LL;
      }
      uint64_t v68 = sub_100156B68(&qword_1003FCF98);
      uint64_t v69 = (void (*)(uint64_t, void))Set.Index._asCocoa.modify(v84, v68);
      __CocoaSet.formIndex(after:isUnique:)(v70, isUniquelyReferenced_nonNull_native, v83);
      v69(v84, 0LL);
      --v37;
    }

    while (v37);
LABEL_54:
    uint64_t v46 = v24;
    sub_100160324(v91, v92, v93);
    uint64_t v30 = v78;
    goto LABEL_55;
  }

uint64_t sub_1002965DC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v43 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v44 = a1 & 0xC000000000000001LL;
  if ((a1 & 0xC000000000000001LL) != 0)
  {
    if (a1 < 0) {
      uint64_t v5 = a1;
    }
    else {
      uint64_t v5 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    uint64_t v6 = __CocoaSet.count.getter(v5);
  }

  else
  {
    uint64_t v6 = *(void *)(a1 + 16);
  }

  uint64_t result = (uint64_t)_swiftEmptyArrayStorage;
  if (v6)
  {
    uint64_t v49 = _swiftEmptyArrayStorage;
    sub_10015DCE8(0, v6 & ~(v6 >> 63), 0);
    if (v44)
    {
      if (a1 < 0) {
        uint64_t v8 = a1;
      }
      else {
        uint64_t v8 = a1 & 0xFFFFFFFFFFFFFF8LL;
      }
      uint64_t result = __CocoaSet.startIndex.getter(v8);
      char v10 = 1;
    }

    else
    {
      uint64_t result = sub_10015E990(a1);
      char v10 = v11 & 1;
    }

    uint64_t v46 = result;
    uint64_t v47 = v9;
    char v48 = v10;
    if (v6 < 0)
    {
      __break(1u);
LABEL_32:
      __break(1u);
    }

    else
    {
      uint64_t v12 = a1 & 0xFFFFFFFFFFFFFF8LL;
      if (a1 < 0) {
        uint64_t v12 = a1;
      }
      uint64_t v41 = v3;
      uint64_t v42 = v12;
      do
      {
        while (1)
        {
          sub_100298500(v46, v47, v48, a1);
          id v24 = v23;
          id v25 = [v24 uniqueIdentifier];
          uint64_t v26 = v43;
          static UUID._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v28 = UUID.uuidString.getter(v27);
          uint64_t v30 = v29;
          (*(void (**)(char *, uint64_t))(v3 + 8))(v26, v2);

          os_log_type_t v31 = v49;
          uint64_t result = swift_isUniquelyReferenced_nonNull_native(v49);
          if ((result & 1) == 0)
          {
            uint64_t result = sub_10015DCE8(0, v31[2] + 1LL, 1);
            os_log_type_t v31 = v49;
          }

          unint64_t v33 = v31[2];
          unint64_t v32 = v31[3];
          if (v33 >= v32 >> 1)
          {
            uint64_t result = sub_10015DCE8(v32 > 1, v33 + 1, 1);
            os_log_type_t v31 = v49;
          }

          void v31[2] = v33 + 1;
          uint64_t v34 = &v31[2 * v33];
          v34[4] = v28;
          v34[5] = v30;
          if (v44) {
            break;
          }
          uint64_t v13 = v46;
          uint64_t v14 = v47;
          char v15 = v48;
          int64_t v16 = sub_10015E644(v46, v47, v48, a1);
          uint64_t v17 = a1;
          uint64_t v18 = v2;
          uint64_t v20 = v19;
          char v22 = v21;
          sub_100160324(v13, v14, v15);
          uint64_t v46 = v16;
          uint64_t v47 = v20;
          uint64_t v2 = v18;
          a1 = v17;
          uint64_t v3 = v41;
          char v48 = v22 & 1;
          if (!--v6) {
            goto LABEL_29;
          }
        }

        if ((v48 & 1) == 0) {
          goto LABEL_32;
        }
        uint64_t v35 = __CocoaSet.Index.handleBitPattern.getter(v46, v47);
        if (v35) {
          uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v35);
        }
        else {
          uint64_t isUniquelyReferenced_nonNull_native = 1LL;
        }
        uint64_t v37 = sub_100156B68(&qword_1003FCF98);
        uint64_t v38 = (void (*)(_BYTE *, void))Set.Index._asCocoa.modify(v45, v37);
        __CocoaSet.formIndex(after:isUnique:)(v39, isUniquelyReferenced_nonNull_native, v42);
        v38(v45, 0LL);
        --v6;
      }

      while (v6);
LABEL_29:
      sub_100160324(v46, v47, v48);
      return (uint64_t)v49;
    }
  }

  return result;
}

uint64_t sub_1002968C0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for UUID(0LL);
  uint64_t v25 = *(void *)(v4 - 8);
  uint64_t v26 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  while (1)
  {
    uint64_t v8 = (unint64_t *)&_swiftEmptyArrayStorage;
    if (!v7) {
      return (uint64_t)v8;
    }
    uint64_t v27 = (unint64_t *)&_swiftEmptyArrayStorage;
    uint64_t result = sub_10015DCE8(0, v7 & ~(v7 >> 63), 0);
    if (v7 < 0) {
      break;
    }
    uint64_t v10 = 0LL;
    uint64_t v8 = v27;
    v22[1] = v2;
    unint64_t v23 = a1 & 0xC000000000000001LL;
    uint64_t v24 = a1;
    while (v7 != v10)
    {
      if (v23) {
        id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, a1);
      }
      else {
        id v11 = *(id *)(a1 + 8 * v10 + 32);
      }
      id v12 = v11;
      id v13 = [v12 currentUser];
      id v14 = [v13 uniqueIdentifier];
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v2 = UUID.uuidString.getter(v15);
      unint64_t v17 = v16;
      (*(void (**)(char *, uint64_t))(v25 + 8))(v6, v26);

      uint64_t v27 = v8;
      unint64_t v19 = v8[2];
      unint64_t v18 = v8[3];
      if (v19 >= v18 >> 1)
      {
        sub_10015DCE8(v18 > 1, v19 + 1, 1);
        uint64_t v8 = v27;
      }

      ++v10;
      v8[2] = v19 + 1;
      uint64_t v20 = &v8[2 * v19];
      v20[4] = v2;
      v20[5] = v17;
      a1 = v24;
      if (v7 == v10) {
        return (uint64_t)v8;
      }
    }

    __break(1u);
LABEL_15:
    if (a1 < 0) {
      uint64_t v21 = a1;
    }
    else {
      uint64_t v21 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter(v21);
    swift_bridgeObjectRelease();
  }

  __break(1u);
  return result;
}

uint64_t sub_100296BD8(const void *a1, void *a2)
{
  v2[3] = a2;
  v2[4] = _Block_copy(a1);
  uint64_t v4 = dword_1003FCF14;
  a2;
  uint64_t v5 = (void *)swift_task_alloc(v4);
  v2[5] = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100296C38;
  return sub_100295D00((uint64_t)v5, v6);
}

uint64_t sub_100296C38(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 40LL);
  *(void *)(*(void *)v1 + 48LL) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_100296C94, 0LL, 0LL);
}

uint64_t sub_100296C94()
{
  uint64_t v2 = *(void **)(v0 + 24);
  uint64_t v1 = *(void (***)(void, void))(v0 + 32);
  uint64_t v3 = sub_1002965DC(*(void *)(v0 + 48));
  swift_bridgeObjectRelease();
  sub_1001A6418(v3);
  swift_bridgeObjectRelease();

  Class isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  ((void (**)(void, Class))v1)[2](v1, isa);

  _Block_release(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100296D48()
{
  *(void *)(v1 + 32) = v0;
  return swift_task_switch(sub_100296D60, 0LL, 0LL);
}

uint64_t sub_100296D60()
{
  uint64_t v1 = *(int **)(**(void **)(*(void *)(v0 + 32) + OBJC_IVAR___MRDGroupSessionHomeObserver_managerWrapper) + 176LL);
  uint64_t v4 = (uint64_t (*)(uint64_t))((char *)v1 + *v1);
  uint64_t v2 = (void *)swift_task_alloc(v1[1]);
  *(void *)(v0 + 40) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100296DD8;
  return v4(v0 + 16);
}

uint64_t sub_100296DD8()
{
  return swift_task_switch(sub_100296E2C, 0LL, 0LL);
}

uint64_t sub_100296E2C()
{
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = [v1 homes];

  uint64_t v3 = sub_10016083C(0LL, &qword_1003FCF28, &OBJC_CLASS___HMHome_ptr);
  uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  uint64_t v5 = sub_1002968C0(v4);
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_1001A6418(v5);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v6);
}

uint64_t sub_100297000(const void *a1, void *a2)
{
  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  uint64_t v4 = dword_1003FCF1C;
  id v5 = a2;
  uint64_t v6 = (void *)swift_task_alloc(v4);
  v2[4] = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_100297078;
  v6[4] = v5;
  return swift_task_switch(sub_100296D60, 0LL, 0LL);
}

uint64_t sub_100297078(uint64_t a1)
{
  uint64_t v3 = *(void (***)(void, void))(*v1 + 24);
  uint64_t v4 = *(void **)(*v1 + 16);
  uint64_t v7 = *v1;
  swift_task_dealloc(*(void *)(*v1 + 32));

  Class isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  ((void (**)(void, Class))v3)[2](v3, isa);

  _Block_release(v3);
  return (*(uint64_t (**)(void))(v7 + 8))();
}

uint64_t sub_1002971AC(uint64_t a1)
{
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0) {
      uint64_t v16 = a1;
    }
    else {
      uint64_t v16 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease();
  }

  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  }

  uint64_t v4 = *v1;
  if (!((unint64_t)*v1 >> 62))
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    uint64_t v6 = v5 + v3;
    if (!__OFADD__(v5, v3)) {
      goto LABEL_5;
    }
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }

  if (v4 < 0) {
    uint64_t v17 = *v1;
  }
  else {
    uint64_t v17 = v4 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = _CocoaArrayWrapper.endIndex.getter(v17);
  swift_bridgeObjectRelease();
  uint64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3)) {
    goto LABEL_29;
  }
LABEL_5:
  uint64_t v4 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v1);
  *uint64_t v1 = v4;
  uint64_t v5 = 0LL;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000LL) == 0 && (v4 & 0x4000000000000000LL) == 0)
  {
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8LL;
    if (v6 <= *(void *)((v4 & 0xFFFFFFFFFFFFFF8LL) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v5 = 1LL;
  }

  uint64_t v9 = *(void *)((v4 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  while (1)
  {
    if (v9 <= v6) {
      uint64_t v9 = v6;
    }
    swift_bridgeObjectRetain();
    uint64_t v4 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v5, v9, 1LL, v4);
    swift_bridgeObjectRelease();
    *uint64_t v1 = v4;
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8LL;
LABEL_15:
    uint64_t result = sub_100298230(v8 + 8LL * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1);
    if (v11 >= v3) {
      break;
    }
LABEL_30:
    __break(1u);
LABEL_31:
    if (v4 < 0) {
      uint64_t v18 = v4;
    }
    else {
      uint64_t v18 = v4 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease();
  }

  if (v11 < 1) {
    goto LABEL_19;
  }
  uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
  BOOL v13 = __OFADD__(v12, v11);
  uint64_t v14 = v12 + v11;
  if (!v13)
  {
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8LL) + 0x10) = v14;
LABEL_19:
    uint64_t v15 = swift_bridgeObjectRelease();
    return specialized Array._endMutation()(v15);
  }

  __break(1u);
  return result;
}

uint64_t sub_100297364(Swift::Int *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001LL) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = __CocoaSet.member(for:)();

    if (v9)
    {
      swift_bridgeObjectRelease();

      uint64_t v30 = v9;
      uint64_t v10 = sub_10016083C(0LL, &qword_1003FCFA0, &OBJC_CLASS___HMUser_ptr);
      swift_unknownObjectRetain(v9);
      swift_dynamicCast(&v31, &v30, (char *)&type metadata for Swift.AnyObject + 8, v10, 7LL);
      *a1 = v31;
      swift_unknownObjectRelease(v9);
      return 0LL;
    }

    uint64_t result = __CocoaSet.count.getter(v7);
    if (__OFADD__(result, 1LL))
    {
      __break(1u);
      return result;
    }

    Swift::Int v23 = sub_100297600(v7, result + 1);
    Swift::Int v31 = v23;
    unint64_t v24 = *(void *)(v23 + 16);
    if (*(void *)(v23 + 24) <= v24)
    {
      uint64_t v28 = v24 + 1;
      id v29 = v8;
      sub_1002977F4(v28);
      uint64_t v25 = v31;
    }

    else
    {
      uint64_t v25 = v23;
      id v26 = v8;
    }

    sub_1001B101C((uint64_t)v8, v25);
    uint64_t *v3 = v25;
  }

  else
  {
    Swift::Int v12 = *(void *)(v6 + 40);
    swift_bridgeObjectRetain();
    Swift::Int v13 = NSObject._rawHashValue(seed:)(v12);
    uint64_t v14 = -1LL << *(_BYTE *)(v6 + 32);
    unint64_t v15 = v13 & ~v14;
    if (((*(void *)(v6 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v15) & 1) != 0)
    {
      sub_10016083C(0LL, &qword_1003FCFA0, &OBJC_CLASS___HMUser_ptr);
      id v16 = *(id *)(*(void *)(v6 + 48) + 8 * v15);
      char v17 = static NSObject.== infix(_:_:)(v16);

      if ((v17 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        uint64_t v21 = *(void **)(*(void *)(*v3 + 48) + 8 * v15);
        *a1 = (Swift::Int)v21;
        id v22 = v21;
        return 0LL;
      }

      uint64_t v18 = ~v14;
      while (1)
      {
        unint64_t v15 = (v15 + 1) & v18;
        if (((*(void *)(v6 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v15) & 1) == 0) {
          break;
        }
        id v19 = *(id *)(*(void *)(v6 + 48) + 8 * v15);
        char v20 = static NSObject.== infix(_:_:)(v19);

        if ((v20 & 1) != 0) {
          goto LABEL_12;
        }
      }
    }

    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    Swift::Int v31 = *v3;
    uint64_t *v3 = 0x8000000000000000LL;
    id v8 = a2;
    sub_100297A90((uint64_t)v8, v15, isUniquelyReferenced_nonNull_native);
    uint64_t *v3 = v31;
  }

  swift_bridgeObjectRelease();
  *a1 = (Swift::Int)v8;
  return 1LL;
}

Swift::Int sub_100297600(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_100156B68(&qword_1003FCFB8);
    uint64_t v4 = static _SetStorage.convert(_:capacity:)(a1, a2);
    uint64_t v23 = v4;
    uint64_t v5 = __CocoaSet.makeIterator()(a1);
    uint64_t v6 = __CocoaSet.Iterator.next()(v5);
    if (v6)
    {
      uint64_t v7 = v6;
      uint64_t v8 = sub_10016083C(0LL, &qword_1003FCFA0, &OBJC_CLASS___HMUser_ptr);
      do
      {
        uint64_t v21 = v7;
        swift_dynamicCast(&v22, &v21, (char *)&type metadata for Swift.AnyObject + 8, v8, 7LL);
        uint64_t v4 = v23;
        unint64_t v16 = *(void *)(v23 + 16);
        if (*(void *)(v23 + 24) <= v16)
        {
          sub_1002977F4(v16 + 1);
          uint64_t v4 = v23;
        }

        uint64_t v9 = v22;
        Swift::Int result = NSObject._rawHashValue(seed:)(*(void *)(v4 + 40));
        uint64_t v11 = v4 + 56;
        uint64_t v12 = -1LL << *(_BYTE *)(v4 + 32);
        unint64_t v13 = result & ~v12;
        unint64_t v14 = v13 >> 6;
        if (((-1LL << v13) & ~*(void *)(v4 + 56 + 8 * (v13 >> 6))) != 0)
        {
          unint64_t v15 = __clz(__rbit64((-1LL << v13) & ~*(void *)(v4 + 56 + 8 * (v13 >> 6)))) | v13 & 0x7FFFFFFFFFFFFFC0LL;
        }

        else
        {
          char v17 = 0;
          unint64_t v18 = (unint64_t)(63 - v12) >> 6;
          do
          {
            if (++v14 == v18 && (v17 & 1) != 0)
            {
              __break(1u);
              return result;
            }

            BOOL v19 = v14 == v18;
            if (v14 == v18) {
              unint64_t v14 = 0LL;
            }
            v17 |= v19;
            uint64_t v20 = *(void *)(v11 + 8 * v14);
          }

          while (v20 == -1);
          unint64_t v15 = __clz(__rbit64(~v20)) + (v14 << 6);
        }

        *(void *)(v11 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v15;
        *(void *)(*(void *)(v4 + 48) + 8 * v15) = v9;
        ++*(void *)(v4 + 16);
        uint64_t v7 = __CocoaSet.Iterator.next()(result);
      }

      while (v7);
    }

    swift_release(v5);
  }

  else
  {
    swift_unknownObjectRelease(a1);
    return (Swift::Int)&_swiftEmptySetSingleton;
  }

  return v4;
}

Swift::Int sub_1002977F4(uint64_t a1)
{
  id v2 = v1;
  uint64_t v3 = *v1;
  if (*(void *)(*v1 + 24) <= a1) {
    uint64_t v4 = a1;
  }
  else {
    uint64_t v4 = *(void *)(*v1 + 24);
  }
  sub_100156B68(&qword_1003FCFB8);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1LL);
  uint64_t v6 = v5;
  if (*(void *)(v3 + 16))
  {
    uint64_t v30 = v2;
    uint64_t v7 = 1LL << *(_BYTE *)(v3 + 32);
    uint64_t v8 = (void *)(v3 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1LL << v7);
    }
    else {
      uint64_t v9 = -1LL;
    }
    unint64_t v10 = v9 & *(void *)(v3 + 56);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v12 = v5 + 56;
    Swift::Int result = swift_retain(v3);
    int64_t v14 = 0LL;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v14 << 6);
      }

      else
      {
        int64_t v18 = v14 + 1;
        if (__OFADD__(v14, 1LL))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }

        if (v18 >= v11) {
          goto LABEL_36;
        }
        unint64_t v19 = v8[v18];
        ++v14;
        if (!v19)
        {
          int64_t v14 = v18 + 1;
          if (v18 + 1 >= v11) {
            goto LABEL_36;
          }
          unint64_t v19 = v8[v14];
          if (!v19)
          {
            int64_t v14 = v18 + 2;
            if (v18 + 2 >= v11) {
              goto LABEL_36;
            }
            unint64_t v19 = v8[v14];
            if (!v19)
            {
              int64_t v20 = v18 + 3;
              if (v20 >= v11)
              {
LABEL_36:
                swift_release(v3);
                id v2 = v30;
                uint64_t v29 = 1LL << *(_BYTE *)(v3 + 32);
                if (v29 > 63) {
                  bzero((void *)(v3 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8LL);
                }
                else {
                  *uint64_t v8 = -1LL << v29;
                }
                *(void *)(v3 + swift_unknownObjectWeakDestroy(v0 + 16) = 0LL;
                break;
              }

              unint64_t v19 = v8[v20];
              if (!v19)
              {
                while (1)
                {
                  int64_t v14 = v20 + 1;
                  if (__OFADD__(v20, 1LL)) {
                    goto LABEL_42;
                  }
                  if (v14 >= v11) {
                    goto LABEL_36;
                  }
                  unint64_t v19 = v8[v14];
                  ++v20;
                  if (v19) {
                    goto LABEL_26;
                  }
                }
              }

              int64_t v14 = v20;
            }
          }
        }

void sub_100297A90(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v9 = v7 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1002977F4(v9);
  }

  else
  {
    if (v8 > v7)
    {
      sub_100297C14();
      goto LABEL_14;
    }

    sub_100297DBC(v9);
  }

  uint64_t v10 = *v3;
  Swift::Int v11 = NSObject._rawHashValue(seed:)(*(void *)(*v3 + 40));
  uint64_t v12 = -1LL << *(_BYTE *)(v10 + 32);
  a2 = v11 & ~v12;
  if (((*(void *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> a2) & 1) != 0)
  {
    uint64_t v13 = sub_10016083C(0LL, &qword_1003FCFA0, &OBJC_CLASS___HMUser_ptr);
    id v14 = *(id *)(*(void *)(v10 + 48) + 8 * a2);
    char v15 = static NSObject.== infix(_:_:)(v14);

    if ((v15 & 1) != 0)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v13);
      __break(1u);
    }

    else
    {
      uint64_t v16 = ~v12;
      while (1)
      {
        a2 = (a2 + 1) & v16;
        if (((*(void *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> a2) & 1) == 0) {
          break;
        }
        id v17 = *(id *)(*(void *)(v10 + 48) + 8 * a2);
        char v18 = static NSObject.== infix(_:_:)(v17);

        if ((v18 & 1) != 0) {
          goto LABEL_13;
        }
      }
    }
  }

id sub_100297C14()
{
  uint64_t v1 = v0;
  sub_100156B68(&qword_1003FCFB8);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)(*v0);
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (id)swift_release(v2);
    *uint64_t v1 = v4;
    return result;
  }

  id result = (id)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1LL << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  int64_t v9 = 0LL;
  *(void *)(v4 + swift_unknownObjectWeakDestroy(v0 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1LL << *(_BYTE *)(v2 + 32);
  uint64_t v11 = -1LL;
  if (v10 < 64) {
    uint64_t v11 = ~(-1LL << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }

    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1LL))
    {
      __break(1u);
      goto LABEL_30;
    }

    if (v18 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }

Swift::Int sub_100297DBC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *v1;
  if (*(void *)(*v1 + 24) <= a1) {
    uint64_t v4 = a1;
  }
  else {
    uint64_t v4 = *(void *)(*v1 + 24);
  }
  sub_100156B68(&qword_1003FCFB8);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0LL);
  uint64_t v6 = v5;
  if (!*(void *)(v3 + 16))
  {
    Swift::Int result = swift_release(v3);
LABEL_38:
    *uint64_t v2 = v6;
    return result;
  }

  uint64_t v30 = v2;
  uint64_t v7 = 1LL << *(_BYTE *)(v3 + 32);
  uint64_t v8 = v3 + 56;
  if (v7 < 64) {
    uint64_t v9 = ~(-1LL << v7);
  }
  else {
    uint64_t v9 = -1LL;
  }
  unint64_t v10 = v9 & *(void *)(v3 + 56);
  int64_t v11 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v12 = v5 + 56;
  Swift::Int result = swift_retain(v3);
  int64_t v14 = 0LL;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_27;
    }

    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1LL))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }

    if (v18 >= v11) {
      goto LABEL_36;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v18);
    ++v14;
    if (!v19)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v11) {
        goto LABEL_36;
      }
      unint64_t v19 = *(void *)(v8 + 8 * v14);
      if (!v19)
      {
        int64_t v14 = v18 + 2;
        if (v18 + 2 >= v11) {
          goto LABEL_36;
        }
        unint64_t v19 = *(void *)(v8 + 8 * v14);
        if (!v19) {
          break;
        }
      }
    }

uint64_t sub_100298034(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100298050(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_100298050(char a1, int64_t a2, char a3, void *a4)
{
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    unint64_t v15 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }

  uint64_t v10 = sub_100156B68(&qword_1003FCFA8);
  uint64_t v11 = *(void *)(type metadata accessor for UUID(0LL) - 8);
  uint64_t v12 = *(void *)(v11 + 72);
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = (v13 + 32) & ~v13;
  unint64_t v15 = (void *)swift_allocObject(v10, v14 + v12 * v9, v13 | 7);
  size_t v16 = j__malloc_size(v15);
  if (!v12)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }

  if (v16 - v14 == 0x8000000000000000LL && v12 == -1) {
    goto LABEL_34;
  }
  _OWORD v15[2] = v8;
  v15[3] = 2 * ((uint64_t)(v16 - v14) / v12);
LABEL_19:
  uint64_t v18 = type metadata accessor for UUID(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  Swift::Int v21 = (char *)v15 + v20;
  id v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v15 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack(v21, v22, v8, v18);
    }

    else if (v15 != a4)
    {
      swift_arrayInitWithTakeBackToFront(v21);
    }

    a4[2] = 0LL;
    goto LABEL_32;
  }

  uint64_t v23 = *(void *)(v19 + 72) * v8;
  unint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy(v21);
LABEL_32:
    swift_release(a4);
    return (uint64_t)v15;
  }

uint64_t sub_100298230(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0) {
      uint64_t v16 = a3;
    }
    else {
      uint64_t v16 = a3 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }

  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    if (!v7) {
      return a3;
    }
  }

  if (!a1) {
    goto LABEL_25;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8LL;
  if (v6)
  {
    if (a3 < 0) {
      uint64_t v10 = a3;
    }
    else {
      uint64_t v10 = a3 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease();
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100298A54();
        swift_bridgeObjectRetain();
        for (unint64_t i = 0LL; i != v7; ++i)
        {
          sub_100156B68(&qword_1003FCFC0);
          uint64_t v13 = sub_100298438(v18, i, a3);
          id v15 = *v14;
          ((void (*)(void (**)(id *), void))v13)(v18, 0LL);
          *(void *)(a1 + 8 * i) = v15;
        }

        swift_bridgeObjectRelease();
        return a3;
      }

      goto LABEL_24;
    }

void (*sub_100298438( void (**a1)(id *a1), unint64_t a2, uint64_t a3))(void *a1)
{
  unint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_10029848C(v6, a2, a3);
  return sub_100179FC0;
}

void (*sub_10029848C(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001LL) != 0)
  {
    id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }

  if ((a2 & 0x8000000000000000LL) != 0)
  {
    __break(1u);
  }

  else if (*(void *)((a3 & 0xFFFFFFFFFFFFF8LL) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return sub_1002984F8;
  }

  __break(1u);
  return result;
}

void sub_1002984F8(id *a1)
{
}

void sub_100298500(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  unint64_t v7 = a1;
  if ((a4 & 0xC000000000000001LL) == 0)
  {
    if ((a3 & 1) != 0) {
      goto LABEL_13;
    }
    if (a1 < 0 || 1LL << *(_BYTE *)(a4 + 32) <= a1)
    {
      __break(1u);
    }

    else if (((*(void *)(a4 + (((unint64_t)a1 >> 3) & 0xFFFFFFFFFFFFF8LL) + 56) >> a1) & 1) != 0)
    {
      if (*(_DWORD *)(a4 + 36) == (_DWORD)a2) {
        goto LABEL_20;
      }
      __break(1u);
LABEL_13:
      if (__CocoaSet.Index.age.getter(a1, a2) == *(_DWORD *)(a4 + 36))
      {
        uint64_t v11 = __CocoaSet.Index.element.getter(v7, a2);
        uint64_t v21 = v11;
        uint64_t v12 = sub_10016083C(0LL, &qword_1003FCFA0, &OBJC_CLASS___HMUser_ptr);
        swift_unknownObjectRetain(v11);
        swift_dynamicCast(&v22, &v21, (char *)&type metadata for Swift.AnyObject + 8, v12, 7LL);
        id v4 = v22;
        swift_unknownObjectRelease(v11);
        Swift::Int v13 = NSObject._rawHashValue(seed:)(*(void *)(a4 + 40));
        uint64_t v14 = -1LL << *(_BYTE *)(a4 + 32);
        unint64_t v7 = v13 & ~v14;
        if (((*(void *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v7) & 1) != 0)
        {
          id v15 = *(id *)(*(void *)(a4 + 48) + 8 * v7);
          char v16 = static NSObject.== infix(_:_:)(v15);

          if ((v16 & 1) == 0)
          {
            uint64_t v17 = ~v14;
            do
            {
              unint64_t v7 = (v7 + 1) & v17;
              if (((*(void *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v7) & 1) == 0) {
                goto LABEL_24;
              }
              id v18 = *(id *)(*(void *)(a4 + 48) + 8 * v7);
              char v19 = static NSObject.== infix(_:_:)(v18);
            }

            while ((v19 & 1) == 0);
          }

LABEL_20:
          id v20 = *(id *)(*(void *)(a4 + 48) + 8 * v7);
          return;
        }

uint64_t sub_100298768(uint64_t a1)
{
  unint64_t v2 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0) {
      uint64_t v13 = a1;
    }
    else {
      uint64_t v13 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter(v13);
    swift_bridgeObjectRelease();
  }

  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  }

  uint64_t v4 = sub_10016083C(0LL, &qword_1003FCFA0, &OBJC_CLASS___HMUser_ptr);
  unint64_t v5 = sub_1002989FC();
  uint64_t result = Set.init(minimumCapacity:)(v3, v4, v5);
  uint64_t v15 = result;
  if (v2)
  {
    if (a1 < 0) {
      uint64_t v8 = a1;
    }
    else {
      uint64_t v8 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter(v8);
    uint64_t result = swift_bridgeObjectRelease();
    if (!v7) {
      return v15;
    }
  }

  else
  {
    uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    if (!v7) {
      return v15;
    }
  }

  if (v7 >= 1)
  {
    if ((a1 & 0xC000000000000001LL) != 0)
    {
      for (uint64_t i = 0LL; i != v7; ++i)
      {
        uint64_t v10 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
        sub_100297364((Swift::Int *)&v14, v10);
      }
    }

    else
    {
      uint64_t v11 = (void **)(a1 + 32);
      do
      {
        uint64_t v12 = *v11++;
        sub_100297364((Swift::Int *)&v14, v12);

        --v7;
      }

      while (v7);
    }

    return v15;
  }

  __break(1u);
  return result;
}

uint64_t type metadata accessor for GroupSessionHomeObserver()
{
  return objc_opt_self(&OBJC_CLASS___MRDGroupSessionHomeObserver);
}

ValueMetadata *type metadata accessor for GroupSessionHomeObserver.Timeout()
{
  return &type metadata for GroupSessionHomeObserver.Timeout;
}

uint64_t sub_1002988F4()
{
  unint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc(dword_1003FCF5C);
  *(void *)(v1 + swift_unknownObjectWeakDestroy(v0 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_10015FD10;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_1003FCF58 + dword_1003FCF58))(v2, v3);
}

uint64_t sub_100298964()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_100298990()
{
  unint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc(dword_1003FCF7C);
  *(void *)(v1 + swift_unknownObjectWeakDestroy(v0 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_100160A04;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_1003FCF78 + dword_1003FCF78))(v2, v3);
}

unint64_t sub_1002989FC()
{
  unint64_t result = qword_1003FCFB0;
  if (!qword_1003FCFB0)
  {
    uint64_t v1 = sub_10016083C(255LL, &qword_1003FCFA0, &OBJC_CLASS___HMUser_ptr);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1003FCFB0);
  }

  return result;
}

unint64_t sub_100298A54()
{
  unint64_t result = qword_1003FCFC8;
  if (!qword_1003FCFC8)
  {
    uint64_t v1 = sub_100160358(&qword_1003FCFC0);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1003FCFC8);
  }

  return result;
}

uint64_t sub_100298AA0()
{
  uint64_t v1 = sub_100156B68(&qword_1003FCFD8);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_100298B18(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_100156B68(&qword_1003FCFD8) - 8);
  uint64_t v4 = *(void **)(v1
                + ((*(void *)(v3 + 64)
  if (!a1)
  {
    if (qword_100403E50 != -1) {
      swift_once(&qword_100403E50, sub_1002957E4);
    }
    uint64_t v14 = type metadata accessor for Logger(0LL);
    uint64_t v15 = sub_10015ADAC(v14, (uint64_t)qword_100403E58);
    uint64_t v7 = (os_log_s *)Logger.logObject.getter(v15);
    os_log_type_t v16 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v7, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v18 = swift_slowAlloc(32LL, -1LL);
      uint64_t v23 = v18;
      *(_DWORD *)uint64_t v17 = 136315138;
      uint64_t v22 = sub_10015ADC4(0xD000000000000018LL, 0x8000000100350B90LL, &v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23, v17 + 4, v17 + 12);
      _os_log_impl((void *)&_mh_execute_header, v7, v16, "[%s] - Refreshed HMHomeManager", v17, 0xCu);
      swift_arrayDestroy(v18, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v18, -1LL, -1LL);
      swift_slowDealloc(v17, -1LL, -1LL);
    }

    goto LABEL_11;
  }

  swift_errorRetain(a1);
  if (qword_100403E50 != -1) {
    swift_once(&qword_100403E50, sub_1002957E4);
  }
  uint64_t v5 = type metadata accessor for Logger(0LL);
  sub_10015ADAC(v5, (uint64_t)qword_100403E58);
  swift_errorRetain(a1);
  uint64_t v6 = swift_errorRetain(a1);
  uint64_t v7 = (os_log_s *)Logger.logObject.getter(v6);
  os_log_type_t v8 = static os_log_type_t.error.getter();
  if (!os_log_type_enabled(v7, v8))
  {
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    swift_errorRelease(a1);
LABEL_11:

    goto LABEL_12;
  }

  uint64_t v9 = swift_slowAlloc(32LL, -1LL);
  uint64_t v10 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
  uint64_t v11 = swift_slowAlloc(32LL, -1LL);
  uint64_t v23 = v11;
  *(_DWORD *)uint64_t v9 = 136315650;
  uint64_t v22 = sub_10015ADC4(0xD000000000000018LL, 0x8000000100350B90LL, &v23);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23, v9 + 4, v9 + 12);
  *(_WORD *)(v9 + 12) = 2048;
  uint64_t v22 = 0x4024000000000000LL;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23, v9 + 14, v9 + 22);
  *(_WORD *)(v9 + 22) = 2112;
  swift_errorRetain(a1);
  uint64_t v12 = _swift_stdlib_bridgeErrorToNSError(a1);
  uint64_t v22 = v12;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23, v9 + 24, v9 + 32);
  *uint64_t v10 = v12;
  swift_errorRelease(a1);
  swift_errorRelease(a1);
  _os_log_impl( (void *)&_mh_execute_header,  v7,  v8,  "[%s] - Failed to populate HMHomeManager within %f: %@",  (uint8_t *)v9,  0x20u);
  uint64_t v13 = sub_100156B68((uint64_t *)&unk_1003FB7E0);
  swift_arrayDestroy(v10, 1LL, v13);
  swift_slowDealloc(v10, -1LL, -1LL);
  swift_arrayDestroy(v11, 1LL, (char *)&type metadata for Any + 8);
  swift_slowDealloc(v11, -1LL, -1LL);
  swift_slowDealloc(v9, -1LL, -1LL);

  swift_errorRelease(a1);
LABEL_12:
  uint64_t v23 = (uint64_t)v4;
  id v19 = v4;
  uint64_t v20 = sub_100156B68(&qword_1003FCFD8);
  return CheckedContinuation.resume(returning:)(&v23, v20);
}

uint64_t sub_100298F20(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100298F30(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

id sub_100298F38()
{
  id v0 = [(id)objc_opt_self(MRDMediaRemoteServer) server];
  id v1 = [v0 nowPlayingServer];

  return v1;
}

void sub_100298F94(char *a1@<X8>)
{
  id v3 = [v1 localOriginClient];
  id v6 = v3;
  id v4 = [v6 activeNowPlayingClient];
  id v5 = [v4 activePlayerClient];

  sub_10024B984(v3, v5, a1);
}

void *sub_10029902C()
{
  return sub_100299044((SEL *)&selRef_systemMediaApplication);
}

void *sub_100299038()
{
  return sub_100299044((SEL *)&selRef_systemPodcastApplication);
}

void *sub_100299044(SEL *a1)
{
  id v3 = [v1 deviceInfo];
  id v4 = [v3 *a1];

  if (!v4) {
    return _swiftEmptyArrayStorage;
  }
  id v5 = [v1 defaultSupportedCommandsForClient:v4];

  uint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, (char *)&type metadata for Any + 8);
  uint64_t v7 = (uint64_t)sub_100197300(v6);
  swift_bridgeObjectRelease();
  if (!v7) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v8 = v7 & 0xFFFFFFFFFFFFFF8LL;
  uint64_t v9 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
  swift_bridgeObjectRetain();
  if (!v9)
  {
LABEL_12:
    swift_bridgeObjectRelease_n(v7, 2LL);
    return _swiftEmptyArrayStorage;
  }

uint64_t sub_1002992E0()
{
  id v1 = [v0 timeSincePlaying];
  return Date.init(timeIntervalSinceNow:)(v1, -v2);
}

void *sub_100299314()
{
  id v1 = [v0 supportedRemoteControlCommands];
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  double v2 = v1;
  uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, (char *)&type metadata for Any + 8);

  uint64_t v4 = (uint64_t)sub_100197300(v3);
  swift_bridgeObjectRelease();
  if (!v4) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v5 = v4 & 0xFFFFFFFFFFFFFF8LL;
  uint64_t v6 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
  swift_bridgeObjectRetain();
  if (!v6)
  {
LABEL_12:
    swift_bridgeObjectRelease_n(v4, 2LL);
    return _swiftEmptyArrayStorage;
  }

uint64_t sub_10029956C(uint64_t a1)
{
  uint64_t v31 = type metadata accessor for HostedRoutingItem(0LL);
  uint64_t v2 = *(void *)(v31 - 8);
  uint64_t v3 = __chkstk_darwin(v31);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v29 - v6;
  int64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = _swiftEmptyArrayStorage;
  if (!v8)
  {
LABEL_13:
    id v24 = sub_100299F64((uint64_t)v9);
    swift_bridgeObjectRelease();
    id v25 = [(id)objc_opt_self(MRGroupSymbolProvider) symbolNameForComposition:v24];
    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);

    return v14;
  }

  if (v8 != 1)
  {
    unint64_t v32 = _swiftEmptyArrayStorage;
    sub_100299E34(0LL, v8, 0);
    uint64_t v15 = a1 + ((*(unsigned __int8 *)(v2 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    uint64_t v16 = *(void *)(v2 + 72);
    uint64_t v9 = v32;
    uint64_t v30 = v16;
    do
    {
      sub_100183690(v15, (uint64_t)v5);
      unint64_t v17 = &v5[*(int *)(v31 + 56)];
      uint64_t v18 = *(void *)v17;
      uint64_t v19 = *((void *)v17 + 1);
      unsigned __int16 v20 = *((_WORD *)v17 + 8);
      sub_10018390C(*(void *)v17, v19, v20);
      sub_1001838D0((uint64_t)v5);
      if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
      {
        sub_100299E34(0LL, v9[2] + 1LL, 1);
        uint64_t v16 = v30;
        uint64_t v9 = v32;
      }

      unint64_t v22 = v9[2];
      unint64_t v21 = v9[3];
      if (v22 >= v21 >> 1)
      {
        sub_100299E34((char *)(v21 > 1), v22 + 1, 1);
        uint64_t v16 = v30;
        uint64_t v9 = v32;
      }

      v9[2] = v22 + 1;
      uint64_t v23 = &v9[3 * v22];
      v23[4] = v18;
      void v23[5] = v19;
      *((_WORD *)v23 + 24) = v20;
      v15 += v16;
      --v8;
    }

    while (v8);
    goto LABEL_13;
  }

  sub_100183690( a1 + ((*(unsigned __int8 *)(v2 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80)),  (uint64_t)&v29 - v6);
  uint64_t v10 = &v7[*(int *)(v31 + 56)];
  uint64_t v11 = *(void *)v10;
  uint64_t v12 = *((void *)v10 + 1);
  unsigned int v13 = *((unsigned __int16 *)v10 + 8);
  if (((v13 >> 8) & 6 | (v13 >> 7) & 1) == 6 && !(v12 | v11) && v13 == 1536)
  {
    uint64_t v14 = 0xD00000000000001FLL;
  }

  else
  {
    char v26 = sub_10029A774(v11, v12, v13);
    id v27 = [(id)objc_opt_self(MRGroupSymbolProvider) symbolNameForComposition:v26];
    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
  }

  sub_1001838D0((uint64_t)v7);
  return v14;
}

uint64_t sub_100299820( uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v69 = *(void *)(result + 16);
  if (!v69) {
    return result;
  }
  uint64_t v10 = a8;
  uint64_t v11 = a7;
  uint64_t v12 = a6;
  uint64_t v13 = a5;
  uint64_t v14 = a4;
  uint64_t v15 = a3;
  uint64_t v68 = result + 32;
  id v59 = (uint64_t *)(a3 + 16);
  int64_t v57 = (uint64_t *)(a5 + 16);
  id v58 = (uint64_t *)(a4 + 16);
  uint64_t v53 = (uint64_t *)(a7 + 16);
  char v54 = (uint64_t *)(a6 + 16);
  uint64_t v52 = (uint64_t *)(a8 + 16);
  char v55 = (void *)(a10 + 16);
  uint64_t v56 = (void *)(a9 + 16);
  id v60 = (uint64_t *)(a2 + 16);
  swift_bridgeObjectRetain();
  uint64_t v16 = 0LL;
  uint64_t v65 = v10;
  uint64_t v66 = v15;
  uint64_t v63 = v12;
  uint64_t v64 = v11;
  uint64_t v61 = v14;
  uint64_t v62 = v13;
  while (2)
  {
    uint64_t v75 = v16;
    uint64_t v17 = v68 + 24 * v16;
    uint64_t v18 = *(void *)v17;
    uint64_t v19 = *(void *)(v17 + 8);
    unsigned int v20 = *(unsigned __int16 *)(v17 + 16);
    sub_10018390C(*(void *)v17, v19, v20);
    sub_1002465C4(v18, v19, v20);
    uint64_t v71 = v21;
    uint64_t v72 = v22;
    unsigned __int16 v73 = v23;
    int v24 = v23 >> 11;
    uint64_t v74 = v19;
    unsigned int v76 = v20;
    if (v24 == 10 || (v24 != 9 ? (BOOL v25 = v24 == 8) : (BOOL v25 = 1), v25))
    {
      uint64_t v26 = *(void *)(v21 + 16);
      int64_t v27 = *(void *)(v26 + 16);
      if (v27)
      {
        swift_bridgeObjectRetain();
        sub_100299E34(0LL, v27, 0);
        __int128 v28 = (unsigned __int16 *)(v26 + 64);
        do
        {
          uint64_t v30 = *((void *)v28 - 2);
          uint64_t v29 = *((void *)v28 - 1);
          __int16 v31 = *v28;
          sub_10018390C(v30, v29, *v28);
          unint64_t v33 = _swiftEmptyArrayStorage[2];
          unint64_t v32 = _swiftEmptyArrayStorage[3];
          if (v33 >= v32 >> 1) {
            sub_100299E34((char *)(v32 > 1), v33 + 1, 1);
          }
          v28 += 20;
          _swiftEmptyArrayStorage[2] = v33 + 1;
          uint64_t v34 = (char *)&_swiftEmptyArrayStorage[3 * v33];
          *((void *)v34 + 4) = v30;
          *((void *)v34 + 5) = v29;
          *((_WORD *)v34 + 24) = v31;
          --v27;
        }

        while (v27);
        swift_bridgeObjectRelease();
        uint64_t v11 = v64;
        uint64_t v10 = v65;
        uint64_t v13 = v62;
        uint64_t v12 = v63;
        uint64_t v14 = v61;
        uint64_t v15 = v66;
      }

      sub_100299820(_swiftEmptyArrayStorage, a2, v15, v14, v13, v12, v11, v10, a9, a10);
      sub_1001835D8(v18, v74, v76);
      sub_100183618(v71, v72, v73);
      swift_bridgeObjectRelease();
      goto LABEL_4;
    }

    uint64_t v35 = v18;
    sub_1002465C4(v18, v19, v20);
    uint64_t v39 = v36;
    uint64_t v40 = v37;
    unsigned __int16 v41 = v38;
    if (sub_100247880(v36, v37, v38))
    {
      sub_100183618(v39, v40, v41);
      uint64_t v42 = v60;
      swift_beginAccess(v60, v77, 1LL, 0LL);
      uint64_t v43 = *v60 + 1;
      if (*v60 == -1)
      {
        __break(1u);
LABEL_65:
        __break(1u);
LABEL_66:
        __break(1u);
LABEL_67:
        __break(1u);
LABEL_68:
        __break(1u);
LABEL_69:
        __break(1u);
LABEL_70:
        __break(1u);
LABEL_71:
        __break(1u);
        JUMPOUT(0x100299D44LL);
      }

      goto LABEL_20;
    }

    switch(v41 >> 11)
    {
      case 2:
        sub_100183618(v39, v40, v41);
        uint64_t v42 = v57;
        swift_beginAccess(v57, v80, 1LL, 0LL);
        uint64_t v43 = *v57 + 1;
        if (*v57 == -1) {
          goto LABEL_65;
        }
        goto LABEL_20;
      case 6:
        sub_100183618(v39, v40, v41);
        uint64_t v42 = v59;
        swift_beginAccess(v59, v78, 1LL, 0LL);
        uint64_t v43 = *v59 + 1;
        if (*v59 == -1) {
          goto LABEL_67;
        }
        goto LABEL_20;
      case 7:
        sub_100183618(v39, v40, v41);
        uint64_t v42 = v58;
        swift_beginAccess(v58, v79, 1LL, 0LL);
        uint64_t v43 = *v58 + 1;
        if (*v58 == -1) {
          goto LABEL_68;
        }
        goto LABEL_20;
      case 11:
        sub_100183618(v39, v40, v41);
        uint64_t v42 = (uint64_t *)(a9 + 16);
        swift_beginAccess(v56, v84, 1LL, 0LL);
        uint64_t v43 = *v56 + 1LL;
        if (*v56 == -1LL) {
          goto LABEL_66;
        }
        goto LABEL_20;
      case 17:
        if (v41 == 34816 && v39 == 8 && v40 == 0)
        {
          uint64_t v42 = v54;
          swift_beginAccess(v54, v81, 1LL, 0LL);
          uint64_t v43 = *v54 + 1;
          if (*v54 == -1) {
            goto LABEL_70;
          }
          goto LABEL_20;
        }

        if (v41 == 34816 && v39 == 9 && v40 == 0)
        {
          uint64_t v42 = v53;
          swift_beginAccess(v53, v82, 1LL, 0LL);
          uint64_t v43 = *v53 + 1;
          if (*v53 == -1) {
            goto LABEL_71;
          }
          goto LABEL_20;
        }

        if (v41 != 34816 || v39 != 6 || v40 != 0)
        {
LABEL_53:
          char v70 = sub_100247938(v39, v40, v41);
          sub_100183618(v39, v40, v41);
          uint64_t v44 = v35;
          unsigned int v45 = v76;
          if ((v70 & 1) == 0) {
            goto LABEL_22;
          }
          uint64_t v42 = (uint64_t *)(a10 + 16);
          swift_beginAccess(v55, v85, 1LL, 0LL);
          uint64_t v43 = *v55 + 1LL;
          if (*v55 == -1LL) {
            goto LABEL_69;
          }
LABEL_21:
          uint64_t *v42 = v43;
LABEL_22:
          sub_1001835D8(v44, v74, v45);
          sub_100183618(v71, v72, v73);
          uint64_t v15 = v66;
LABEL_4:
          uint64_t v16 = v75 + 1;
          if (v75 + 1 == v69) {
            return swift_bridgeObjectRelease();
          }
          continue;
        }

        uint64_t v42 = v52;
        swift_beginAccess(v52, v83, 1LL, 0LL);
        uint64_t v43 = *v52 + 1;
        if (*v52 != -1)
        {
LABEL_20:
          uint64_t v44 = v35;
          unsigned int v45 = v76;
          goto LABEL_21;
        }

        __break(1u);
        return swift_bridgeObjectRelease();
      default:
        goto LABEL_53;
    }
  }

unint64_t sub_100299D84(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v4 = sub_10029A774(a1, a2, a3);
  id v5 = [(id)objc_opt_self(MRGroupSymbolProvider) symbolNameForComposition:v4];
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);

  return v3;
}

char *sub_100299E34(char *a1, int64_t a2, char a3)
{
  unint64_t result = sub_100299E50(a1, a2, a3, *v3);
  void *v3 = result;
  return result;
}

char *sub_100299E50(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    uint64_t v10 = sub_100156B68(&qword_1003FD078);
    uint64_t v11 = (char *)swift_allocObject(v10, 24 * v9 + 32, 7LL);
    size_t v12 = j__malloc_size(v11);
    *((void *)v11 + 2) = v8;
    *((void *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 24);
  }

  else
  {
    uint64_t v11 = (char *)&_swiftEmptyArrayStorage;
  }

  uint64_t v13 = v11 + 32;
  uint64_t v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[24 * v8]) {
      memmove(v13, v14, 24 * v8);
    }
    *((void *)a4 + 2) = 0LL;
  }

  else
  {
    swift_arrayInitWithCopy(v13);
  }

  swift_release(a4);
  return v11;
}

id sub_100299F64(uint64_t a1)
{
  uint64_t v12 = swift_allocObject(&unk_1003ACB98, 24LL, 7LL);
  *(void *)(v12 + swift_unknownObjectWeakDestroy(v0 + 16) = 0LL;
  uint64_t v11 = swift_allocObject(&unk_1003ACB98, 24LL, 7LL);
  *(void *)(v11 + swift_unknownObjectWeakDestroy(v0 + 16) = 0LL;
  uint64_t v9 = swift_allocObject(&unk_1003ACB98, 24LL, 7LL);
  *(void *)(v9 + swift_unknownObjectWeakDestroy(v0 + 16) = 0LL;
  uint64_t v1 = swift_allocObject(&unk_1003ACB98, 24LL, 7LL);
  *(void *)(v1 + swift_unknownObjectWeakDestroy(v0 + 16) = 0LL;
  uint64_t v2 = swift_allocObject(&unk_1003ACB98, 24LL, 7LL);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = 0LL;
  uint64_t v3 = swift_allocObject(&unk_1003ACB98, 24LL, 7LL);
  *(void *)(v3 + swift_unknownObjectWeakDestroy(v0 + 16) = 0LL;
  uint64_t v4 = swift_allocObject(&unk_1003ACB98, 24LL, 7LL);
  *(void *)(v4 + swift_unknownObjectWeakDestroy(v0 + 16) = 0LL;
  uint64_t v5 = swift_allocObject(&unk_1003ACB98, 24LL, 7LL);
  *(void *)(v5 + swift_unknownObjectWeakDestroy(v0 + 16) = 0LL;
  uint64_t v10 = swift_allocObject(&unk_1003ACB98, 24LL, 7LL);
  *(void *)(v10 + swift_unknownObjectWeakDestroy(v0 + 16) = 0LL;
  sub_100299820(a1, v9, v11, v12, v1, v2, v3, v4, v5, v10);
  id v6 = [objc_allocWithZone(MRGroupComposition) init];
  swift_beginAccess(v12 + 16, v21, 0LL, 0LL);
  [v6 setAtvCount:*(void *)(v12 + 16)];
  swift_beginAccess(v11 + 16, v20, 0LL, 0LL);
  [v6 setHomePodCount:*(void *)(v11 + 16)];
  swift_beginAccess(v9 + 16, v19, 0LL, 0LL);
  [v6 setHomePodMiniCount:*(void *)(v9 + 16)];
  swift_beginAccess(v1 + 16, v18, 0LL, 0LL);
  [v6 setHeadphoneCount:*(void *)(v1 + 16)];
  swift_beginAccess(v2 + 16, v17, 0LL, 0LL);
  [v6 setSetTopCount:*(void *)(v2 + 16)];
  swift_beginAccess(v3 + 16, v16, 0LL, 0LL);
  [v6 setTvStickCount:*(void *)(v3 + 16)];
  swift_beginAccess(v4 + 16, v15, 0LL, 0LL);
  [v6 setTvCount:*(void *)(v4 + 16)];
  swift_beginAccess(v5 + 16, v14, 0LL, 0LL);
  [v6 setMacCount:*(void *)(v5 + 16)];
  swift_beginAccess(v10 + 16, v13, 0LL, 0LL);
  [v6 setHifiCount:*(void *)(v10 + 16)];
  swift_release(v12);
  swift_release(v11);
  swift_release(v9);
  swift_release(v1);
  swift_release(v2);
  swift_release(v3);
  swift_release(v4);
  swift_release(v5);
  swift_release(v10);
  return v6;
}

id sub_10029A2CC(uint64_t a1, unsigned __int16 a2)
{
  int v2 = a2 >> 11;
  if (v2 != 10)
  {
    if (v2 == 9)
    {
      uint64_t v3 = *(void *)(a1 + 16);
      uint64_t v63 = *(void *)(v3 + 16);
      if (v63)
      {
        uint64_t v4 = *(void *)(v3 + 48);
        uint64_t v5 = *(void *)(v3 + 56);
        unsigned int v6 = *(unsigned __int16 *)(v3 + 64);
        uint64_t v61 = v3;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_10018390C(v4, v5, v6);
        sub_100247278();
        uint64_t v8 = v7;
        uint64_t v10 = v9;
        unsigned __int16 v12 = v11;
        BOOL v13 = sub_100247880(v7, v9, v11);
        sub_100183618(v8, v10, v12);
        swift_bridgeObjectRelease();
        sub_1001835D8(v4, v5, v6);
        if (v13)
        {
LABEL_5:
          swift_bridgeObjectRelease();
          id v14 = [(id)objc_opt_self(MRGroupComposition) homePodMiniHomeTheaterComposition];
          return v14;
        }

        if (v63 != 1)
        {
          uint64_t v37 = (unsigned __int16 *)(v61 + 104);
          uint64_t v38 = 1LL;
          while (1)
          {
            uint64_t v39 = *((void *)v37 - 2);
            uint64_t v40 = *((void *)v37 - 1);
            unsigned int v41 = *v37;
            uint64_t v42 = v38 + 1;
            if (__OFADD__(v38, 1LL)) {
              break;
            }
            swift_bridgeObjectRetain();
            sub_10018390C(v39, v40, v41);
            sub_100247278();
            uint64_t v44 = v43;
            uint64_t v46 = v45;
            unsigned __int16 v48 = v47;
            BOOL v65 = sub_100247880(v43, v45, v47);
            sub_100183618(v44, v46, v48);
            swift_bridgeObjectRelease();
            sub_1001835D8(v39, v40, v41);
            if (v65) {
              goto LABEL_5;
            }
            v37 += 20;
            ++v38;
            if (v42 == v63) {
              goto LABEL_21;
            }
          }

          __break(1u);
LABEL_32:
          __break(1u);
          goto LABEL_33;
        }

void *sub_10029A774(uint64_t a1, uint64_t a2, unsigned int a3)
{
  id v6 = [objc_allocWithZone(MRGroupComposition) init];
  uint64_t v7 = v6;
  int v8 = (a3 >> 8) & 6 | (a3 >> 7) & 1;
  if (v8 != 3)
  {
    sub_1002465C4(a1, a2, a3);
    uint64_t v10 = v9;
    uint64_t v12 = v11;
    unsigned __int16 v14 = v13;
    uint64_t v15 = sub_1002478CC(v9, v11, v13);
    if ((v15 & 1) != 0)
    {
      [v7 setDisplayCount:1];
    }

    else
    {
      unsigned __int16 v23 = v14;
      uint64_t v17 = v14 >> 11;
      if ((_DWORD)v17 != 15 || !v12)
      {
        if (v8 != 5 && !MSVDeviceIsAppleTV(v15, v16)) {
          __asm { BR              X9 }
        }

        [v7 setBuiltInCount:1];
        uint64_t v19 = v10;
        uint64_t v20 = v12;
        unsigned __int16 v21 = v23;
        goto LABEL_12;
      }

      swift_bridgeObjectRetain();
      NSString v18 = String._bridgeToObjectiveC()();
      unsigned __int16 v14 = v23;
      sub_100183618(v10, v12, v23);
      [v7 setSoloProductIdentifier:v18];

      [v7 setHeadphoneCount:1];
    }

    uint64_t v19 = v10;
    uint64_t v20 = v12;
    unsigned __int16 v21 = v14;
LABEL_12:
    sub_100183618(v19, v20, v21);
    return v7;
  }

  [v6 setCarplayCount:1];
  return v7;
}

void sub_10029A90C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, unsigned __int16 a11)
{
  id v20 = [objc_allocWithZone(*(Class *)(v14 + 1048)) *(SEL *)(v19 + 3016)];
  sub_1002465C4(v17, v16, v15);
  uint64_t v24 = v21;
  uint64_t v25 = v22;
  unsigned __int16 v26 = v23;
  switch(v18)
  {
    case 0:
LABEL_2:
      [v20 setUnknownCount:1];
      goto LABEL_34;
    case 1:
      if ((v23 & 0xF900) == 0x900) {
LABEL_5:
      }
        [v20 setHifiCount:1];
      else {
LABEL_7:
      }
        [v20 setLofiCount:1];
      goto LABEL_34;
    case 2:
      int v27 = v23 >> 11;
      if (v27 == 2)
      {
        if (v22) {
          NSString v28 = String._bridgeToObjectiveC()();
        }
        else {
          NSString v28 = 0LL;
        }
        [v20 setSoloProductIdentifier:v28];
      }

      else if (v27 == 17 && v23 == 34816 && v21 == 4 && !v22)
      {
        [v20 setHeadphoneCount:1];
        goto LABEL_35;
      }

      [v20 setBluetoothSpeakerCount:1];
LABEL_34:
      sub_100183618(v24, v25, v26);
LABEL_35:
      sub_100183618(v13, v12, a11);

      JUMPOUT(0x10029A8CCLL);
    case 3:
      [v20 setCarplayCount:1];
      goto LABEL_34;
    default:
      switch(v23 >> 11)
      {
        case 2:
          [v20 setHeadphoneCount:1];
          goto LABEL_34;
        case 4:
        case 5:
          if ((v21 & 1) != 0) {
            goto LABEL_5;
          }
          goto LABEL_7;
        case 11:
          [v20 setMacCount:1];
          goto LABEL_34;
        case 12:
          [v20 setIPhoneCount:1];
          goto LABEL_34;
        case 14:
          [v20 setVisionCount:1];
          goto LABEL_34;
        case 17:
          if ((v23 != 34816 || v21 != 2 || v22)
            && (v23 != 34816 || v21 != 3 || v22)
            && (v23 != 34816 || v21 != 6 || v22))
          {
            goto LABEL_2;
          }

          [v20 setTvCount:1];
          break;
        default:
          goto LABEL_2;
      }

      goto LABEL_34;
  }

uint64_t type metadata accessor for Symbols()
{
  return objc_opt_self(&OBJC_CLASS____TtC12mediaremoted7Symbols);
}

uint64_t sub_10029AD90()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

MRDMediaControlIPCServer __swiftcall MRDMediaControlIPCServer.init()()
{
  return (MRDMediaControlIPCServer)[objc_allocWithZone((Class)((uint64_t (*)())swift_getObjCClassFromMetadata)()) init];
}

id MRDMediaControlIPCServer.init()()
{
  v1.super_class = (Class)&OBJC_CLASS___MRDMediaControlIPCServer;
  return objc_msgSendSuper2(&v1, "init");
}

uint64_t sub_10029AF98()
{
  objc_super v1 = (void *)*sub_100216E68();
  uint64_t v2 = type metadata accessor for RoutingSessionServer();
  id v3 = v1;
  OS_dispatch_queue.asyncAndWait<A>(execute:)(&v5, sub_1002A03CC, v0, v2);

  return v5;
}

uint64_t sub_10029B004()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v6 = *(void *)(v1 + 16);
  if (v6)
  {
    uint64_t v7 = *(void *)(v1 + 16);
LABEL_5:
    swift_retain(v6);
    return v7;
  }

  int v8 = sub_100216E68();
  uint64_t v9 = (void *)*v8;
  *uint64_t v5 = *v8;
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  id v10 = v9;
  LOBYTE(v9) = _dispatchPreconditionTest(_:)(v5);
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v9 & 1) != 0)
  {
    type metadata accessor for RoutingSessionServer();
    uint64_t v7 = sub_100188060();
    uint64_t v12 = *(void *)(v1 + 16);
    *(void *)(v1 + swift_unknownObjectWeakDestroy(v0 + 16) = v7;
    swift_retain(v7);
    swift_release(v12);
    uint64_t v6 = 0LL;
    goto LABEL_5;
  }

  __break(1u);
  return result;
}

unint64_t sub_10029B108()
{
  return 0xD000000000000010LL;
}

uint64_t sub_10029B138@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = sub_1002A04C4(a1, a2);
  *a3 = result;
  return result;
}

void sub_10029B15C(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_10029B168(uint64_t a1)
{
  unint64_t v2 = sub_1002A03F8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10029B190(uint64_t a1)
{
  unint64_t v2 = sub_1002A03F8();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10029B1B8@<X0>(uint64_t a1@<X1>, _BYTE *a2@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease(a1);
  *a2 = 1;
  return result;
}

uint64_t sub_10029B1E4(uint64_t a1)
{
  unint64_t v2 = sub_1002A043C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10029B20C(uint64_t a1)
{
  unint64_t v2 = sub_1002A043C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10029B234(uint64_t a1)
{
  unint64_t v2 = sub_1002A0480();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10029B25C(uint64_t a1)
{
  unint64_t v2 = sub_1002A0480();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10029B284(void *a1, int a2)
{
  int v22 = a2;
  uint64_t v3 = sub_100156B68(&qword_1003FD080);
  uint64_t v20 = *(void *)(v3 - 8);
  uint64_t v21 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = sub_100156B68(&qword_1003FD088);
  uint64_t v6 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  int v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_100156B68(&qword_1003FD090);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = a1[3];
  uint64_t v14 = a1[4];
  sub_1001865C4(a1, v13);
  unint64_t v15 = sub_1002A03F8();
  dispatch thunk of Encoder.container<A>(keyedBy:)( &type metadata for MediaControlIPCServer.Errors.CodingKeys,  &type metadata for MediaControlIPCServer.Errors.CodingKeys,  v15,  v13,  v14);
  if ((v22 & 1) != 0)
  {
    char v24 = 1;
    unint64_t v17 = sub_1002A043C();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)( &type metadata for MediaControlIPCServer.Errors.MalformedMessageCodingKeys,  &v24,  v9,  &type metadata for MediaControlIPCServer.Errors.MalformedMessageCodingKeys,  v17);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v5, v21);
  }

  else
  {
    char v23 = 0;
    unint64_t v16 = sub_1002A0480();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)( &type metadata for MediaControlIPCServer.Errors.ValidationFailedCodingKeys,  &v23,  v9,  &type metadata for MediaControlIPCServer.Errors.ValidationFailedCodingKeys,  v16);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v19);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_10029B454@<X0>(void *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result = sub_1002A05AC(a1);
  if (!v2) {
    *a2 = result & 1;
  }
  return result;
}

uint64_t sub_10029B480(void *a1)
{
  return sub_10029B284(a1, *v1);
}

__n128 sub_10029B498@<Q0>(uint64_t a1@<X8>)
{
  char v3 = *(_BYTE *)(v1 + 48);
  __n128 result = *(__n128 *)(v1 + 16);
  __int128 v5 = *(_OWORD *)(v1 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v5;
  *(_BYTE *)(a1 + 32) = v3;
  return result;
}

uint64_t sub_10029B4E0(uint64_t a1)
{
  uint64_t v3 = v1 + 16;
  swift_beginAccess(v3, v5, 1LL, 0LL);
  return sub_1002A08D8(a1, v3);
}

uint64_t sub_10029B528()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain(*(void *)(v0 + 64));
  return v1;
}

uint64_t sub_10029B570(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 64);
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = a2;
  return swift_bridgeObjectRelease(v5);
}

uint64_t (*sub_10029B5C0(uint64_t a1))(void)
{
  return j_j__swift_endAccess;
}

unint64_t sub_10029B5FC()
{
  return *(unsigned int *)(v0 + 72) | ((unint64_t)*(unsigned __int8 *)(v0 + 76) << 32);
}

uint64_t sub_10029B63C(uint64_t a1)
{
  uint64_t result = swift_beginAccess(v1 + 72, v4, 1LL, 0LL);
  *(_DWORD *)(v1 + 72) = a1;
  *(_BYTE *)(v1 + 76) = BYTE4(a1) & 1;
  return result;
}

uint64_t sub_10029B680(uint64_t a1)
{
  uint64_t v3 = swift_allocObject(v1, 104LL, 7LL);
  *(_OWORD *)(v3 + swift_unknownObjectWeakDestroy(v0 + 16) = 0u;
  *(_OWORD *)(v3 + 32) = 0u;
  *(_BYTE *)(v3 + 48) = 1;
  *(void *)(v3 + 56) = 0LL;
  *(void *)(v3 + 64) = 0LL;
  *(_DWORD *)(v3 + 72) = 0;
  *(_BYTE *)(v3 + 76) = 1;
  *(void *)(v3 + 88) = sub_1001A8998();
  *(void *)(v3 + 96) = v4;
  *(void *)(v3 + 80) = a1;
  return v3;
}

uint64_t sub_10029B6DC()
{
  uint64_t v1 = *v0;
  _StringGuts.grow(_:)(30LL);
  swift_bridgeObjectRelease(0xE000000000000000LL);
  v2._uint64_t countAndFlagsBits = _typeName(_:qualified:)(v1, 0LL);
  object = v2._object;
  String.append(_:)(v2);
  swift_bridgeObjectRelease(object);
  v4._uint64_t countAndFlagsBits = 40LL;
  v4._object = (void *)0xE100000000000000LL;
  String.append(_:)(v4);
  uint64_t v5 = v0[11];
  uint64_t v6 = (void *)v0[12];
  swift_bridgeObjectRetain(v6);
  v7._uint64_t countAndFlagsBits = v5;
  v7._object = v6;
  String.append(_:)(v7);
  swift_bridgeObjectRelease(v6);
  v8._uint64_t countAndFlagsBits = 0x646E7562202D2029LL;
  v8._object = (void *)0xEC000000203A656CLL;
  String.append(_:)(v8);
  uint64_t v9 = (*(uint64_t (**)(void))(*v0 + 144LL))();
  if (v10)
  {
    unint64_t v11 = v10;
  }

  else
  {
    uint64_t v9 = 7104878LL;
    unint64_t v11 = 0xE300000000000000LL;
  }

  unint64_t v12 = v11;
  String.append(_:)(*(Swift::String *)&v9);
  swift_bridgeObjectRelease(v11);
  v13._uint64_t countAndFlagsBits = 0x203A646970202CLL;
  v13._object = (void *)0xE700000000000000LL;
  String.append(_:)(v13);
  (*(uint64_t (**)(void))(*v0 + 168LL))();
  v14._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int32,  &protocol witness table for Int32);
  unint64_t v15 = v14._object;
  String.append(_:)(v14);
  swift_bridgeObjectRelease(v15);
  v16._uint64_t countAndFlagsBits = 62LL;
  v16._object = (void *)0xE100000000000000LL;
  String.append(_:)(v16);
  return 60LL;
}

uint64_t sub_10029B860@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for InternalRoutingError(0LL);
  __chkstk_darwin(v6);
  uint64_t v7 = sub_100156B68(&qword_1003FD0A0);
  __chkstk_darwin(v7);
  uint64_t v9 = &v27[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v10 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  Swift::String v13 = (uint64_t *)&v27[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  Swift::String v14 = sub_100216E68();
  unint64_t v15 = (void *)*v14;
  *Swift::String v13 = *v14;
  (*(void (**)(uint64_t *, void, uint64_t))(v11 + 104))( v13,  enum case for DispatchPredicate.onQueue(_:),  v10);
  id v16 = v15;
  LOBYTE(v15) = _dispatchPreconditionTest(_:)(v13);
  uint64_t v17 = (*(uint64_t (**)(uint64_t *, uint64_t))(v11 + 8))(v13, v10);
  if ((v15 & 1) != 0)
  {
    uint64_t v18 = XPCReceivedMessage.auditToken.getter(v17);
    sub_10029BC78(v18, v19, v20, v21);
    if (qword_100403E80 == -1) {
      goto LABEL_3;
    }
  }

  else
  {
    __break(1u);
  }

  swift_once(&qword_100403E80, sub_10029CF40);
LABEL_3:
  swift_beginAccess(&qword_100405C98, v27, 0LL, 0LL);
  uint64_t v22 = qword_100405C98;
  swift_retain(qword_100405C98);
  sub_10029DB0C(a1, v3, (uint64_t)v9);
  swift_release(v22);
  uint64_t v23 = type metadata accessor for ReplyMessage(0LL);
  uint64_t v24 = *(void *)(v23 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v24 + 48))(v9, 1LL, v23) == 1)
  {
    uint64_t result = sub_1001603DC((uint64_t)v9, &qword_1003FD0A0);
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + swift_unknownObjectWeakDestroy(v0 + 16) = 0u;
    *(void *)(a2 + 32) = 0LL;
  }

  else
  {
    *(void *)(a2 + 24) = v23;
    *(void *)(a2 + 32) = sub_10022808C( &qword_1003FD0A8,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for ReplyMessage,  (uint64_t)&protocol conformance descriptor for ReplyMessage);
    unsigned __int16 v26 = sub_1001627AC((void *)a2);
    return (*(uint64_t (**)(void *, _BYTE *, uint64_t))(v24 + 32))(v26, v9, v23);
  }

  return result;
}

uint64_t sub_10029BB08()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)&v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v6 = sub_100216E68();
  uint64_t v7 = (void *)*v6;
  *uint64_t v5 = *v6;
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  id v8 = v7;
  LOBYTE(v7) = _dispatchPreconditionTest(_:)(v5);
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v7 & 1) == 0)
  {
    __break(1u);
    goto LABEL_5;
  }

  if (qword_100403E80 != -1) {
LABEL_5:
  }
    swift_once(&qword_100403E80, sub_10029CF40);
  swift_beginAccess(&qword_100405C98, v14, 0LL, 0LL);
  uint64_t v9 = qword_100405C98;
  swift_retain(qword_100405C98);
  Swift::String v13 = sub_1001FCF88();
  uint64_t v10 = sub_10029FC98(v1);
  swift_release(v10);
  *(void *)(v9 + 24) = v13;
  swift_bridgeObjectRelease();
  uint64_t v11 = sub_10029B004();
  (*(void (**)(void *, _UNKNOWN **, uint64_t))(*(void *)v11 + 384LL))(v1, &off_1003ACBD8, 1LL);
  swift_release(v9);
  return swift_release(v11);
}

uint64_t sub_10029BC78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  (*(void (**)(void *__return_ptr))(*v4 + 120LL))(v24);
  sub_1002A08D8((uint64_t)v24, (uint64_t)v25);
  if ((v26 & 1) == 0)
  {
    uint64_t result = sub_1002A0920(v25[0], v25[1], v25[2], v25[3], a1, a2, a3, a4);
    if ((result & 1) != 0) {
      return result;
    }
LABEL_11:
    unint64_t v18 = sub_1002A0EC8();
    uint64_t v19 = swift_allocError(&type metadata for MediaControlIPCServer.Errors, v18, 0LL, 0LL);
    _BYTE *v20 = 0;
    return swift_willThrow(v19);
  }

  *(void *)atoken.val = a1;
  *(void *)&atoken.val[2] = a2;
  *(void *)&atoken.val[4] = a3;
  *(void *)&atoken.val[6] = a4;
  id v9 = (id)MSVBundleIDForAuditToken(&atoken);
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    uint64_t v12 = v11;
  }

  else
  {
    uint64_t v21 = 0LL;
    uint64_t v12 = 0LL;
  }

  *(void *)atoken.val = a1;
  *(void *)&atoken.val[2] = a2;
  *(void *)&atoken.val[4] = a3;
  *(void *)&atoken.val[6] = a4;
  pid_t v14 = audit_token_to_pid(&atoken);
  if (!v12) {
    goto LABEL_11;
  }
  unsigned int v15 = v14;
  (*(void (**)(uint64_t, uint64_t))(*v4 + 152LL))(v21, v12);
  id v16 = *(void (**)(void))(*v4 + 176LL);
  LOBYTE(atoken.val[0]) = 0;
  v16(v15);
  v27[0] = a1;
  v27[1] = a2;
  v27[2] = a3;
  v27[3] = a4;
  char v28 = 0;
  (*(void (**)(void *))(*v4 + 128LL))(v27);
  if (qword_100403E80 != -1) {
    swift_once(&qword_100403E80, sub_10029CF40);
  }
  swift_beginAccess(&qword_100405C98, &atoken, 0LL, 0LL);
  uint64_t v17 = qword_100405C98;
  swift_retain(qword_100405C98);
  swift_retain(v4);
  uint64_t v22 = sub_1001FCF88();
  sub_10029EE88(&v29, v4);
  swift_release(v29);
  *(void *)(v17 + 24) = v22;
  swift_release(v17);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10029BEB8(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 88);
  uint64_t v3 = *(void *)(v1 + 96);
  swift_bridgeObjectRetain(v3);
  String.hash(into:)(a1, v4, v3);
  return swift_bridgeObjectRelease(v3);
}

uint64_t sub_10029BEFC(uint64_t a1)
{
  uint64_t v2 = sub_100156B68(&qword_1003FD0B0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_100156B68(&qword_1003FD0B8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for IPCClientMessage(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_1001A8360(a1, (uint64_t)v4, &qword_1003FD0B0);
  sub_10025518C((uint64_t)v4, (uint64_t)v7);
  TransportRoutingSessionUpdateMessage.init(snapshot:)(v7);
  (*(void (**)(char *, void, uint64_t))(v9 + 104))( v11,  enum case for IPCClientMessage.updateRoutingSnapshot(_:),  v8);
  sub_10029C590((uint64_t)v11);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_10029C03C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RoutingDialog(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for IPCClientMessage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  PresentDialogMessage.init(dialog:)(v5);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for IPCClientMessage.presentDialog(_:), v6);
  sub_10029C590((uint64_t)v9);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_10029C138(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for IPCClientMessage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_100156B68((uint64_t *)&unk_1003FD0C0);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  unsigned int v15 = (char *)&v19 - v14;
  if (a3)
  {
    static InternalRoutingError.wrapping(error:)(a3);
    uint64_t v16 = type metadata accessor for InternalRoutingError(0LL);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56LL))(v15, 0LL, 1LL, v16);
  }

  else
  {
    uint64_t v17 = type metadata accessor for InternalRoutingError(0LL);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v15, 1LL, 1LL, v17);
  }

  sub_1001A8360((uint64_t)v15, (uint64_t)v13, (uint64_t *)&unk_1003FD0C0);
  swift_bridgeObjectRetain();
  InteractWithItemResultMessage.init(itemIdentifier:error:)(a1, a2, v13);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))( v9,  enum case for IPCClientMessage.interactWithItemResult(_:),  v6);
  sub_10029C590((uint64_t)v9);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return sub_1001603DC((uint64_t)v15, (uint64_t *)&unk_1003FD0C0);
}

uint64_t sub_10029C2D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RoutingControl(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for IPCClientMessage(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_100156B68((uint64_t *)&unk_1003FD0C0);
  uint64_t v13 = __chkstk_darwin(v12);
  unsigned int v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v21 - v16;
  if (a2)
  {
    static InternalRoutingError.wrapping(error:)(a2);
    uint64_t v18 = type metadata accessor for InternalRoutingError(0LL);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56LL))(v17, 0LL, 1LL, v18);
  }

  else
  {
    uint64_t v19 = type metadata accessor for InternalRoutingError(0LL);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56LL))(v17, 1LL, 1LL, v19);
  }

  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  sub_1001A8360((uint64_t)v17, (uint64_t)v15, (uint64_t *)&unk_1003FD0C0);
  InteractWithControlResultMessage.init(control:error:)(v7, v15);
  (*(void (**)(char *, void, uint64_t))(v9 + 104))( v11,  enum case for IPCClientMessage.interactWithControlResult(_:),  v8);
  sub_10029C590((uint64_t)v11);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return sub_1001603DC((uint64_t)v17, (uint64_t *)&unk_1003FD0C0);
}

uint64_t sub_10029C4B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for IPCClientMessage(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  SessionTransitionMessage.init(sourceIdentifier:destinationIdentifier:)(a1, a2, a3, a4);
  (*(void (**)(char *, void, uint64_t))(v9 + 104))( v11,  enum case for IPCClientMessage.sessionTransition(_:),  v8);
  sub_10029C590((uint64_t)v11);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_10029C590(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ExecutionPriority(0LL);
  uint64_t v65 = *(void *)(v2 - 8);
  uint64_t v66 = v2;
  __chkstk_darwin(v2);
  uint64_t v64 = &v60[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v78 = *(void *)(v4 - 8);
  uint64_t v79 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v75 = &v60[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v5);
  uint64_t v77 = &v60[-v7];
  uint64_t v8 = type metadata accessor for IPCClientMessage(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v71 = &v60[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v12 = __chkstk_darwin(v10);
  unsigned int v76 = &v60[-v13];
  __chkstk_darwin(v12);
  unsigned int v15 = &v60[-v14];
  uint64_t v16 = sub_100156B68(&qword_1003FD3B0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = &v60[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v18);
  uint64_t v22 = &v60[-v21];
  uint64_t v72 = v9;
  uint64_t v23 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16);
  v23(v15, a1, v8);
  uint64_t v24 = sub_10022808C( &qword_1003FD3B8,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for IPCClientMessage,  (uint64_t)&protocol conformance descriptor for IPCClientMessage);
  uint64_t v25 = sub_10022808C( &qword_1003FD3C0,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for IPCClientMessage,  (uint64_t)&protocol conformance descriptor for IPCClientMessage);
  IPCMessage.init(message:)(v15, v8, v24, v25);
  uint64_t v26 = sub_1001742F0();
  int v27 = *(void (**)(void))(v78 + 16);
  v27();
  uint64_t v70 = a1;
  unsigned __int8 v67 = (void (*)(void, void, void))v23;
  v23(v76, a1, v8);
  uint64_t v73 = v17;
  uint64_t v74 = v22;
  char v28 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v17 + 16);
  uint64_t v29 = v20;
  uint64_t v30 = v20;
  uint64_t v31 = v16;
  v28(v30, v22, v16);
  uint64_t v32 = swift_retain_n(v80, 2LL);
  uint64_t v33 = (os_log_s *)Logger.logObject.getter(v32);
  os_log_type_t v34 = static os_log_type_t.default.getter(v33);
  int v35 = v34;
  BOOL v36 = os_log_type_enabled(v33, v34);
  uint64_t v68 = v26;
  uint64_t v69 = v27;
  if (v36)
  {
    uint64_t v37 = swift_slowAlloc(32LL, -1LL);
    uint64_t v63 = swift_slowAlloc(96LL, -1LL);
    v82[0] = v63;
    *(_DWORD *)uint64_t v37 = 136315650;
    os_log_t v62 = v33;
    uint64_t v38 = v80;
    uint64_t v39 = *(uint64_t (**)(uint64_t))(*(void *)v80 + 200LL);
    uint64_t v40 = swift_retain(v80);
    uint64_t v41 = v39(v40);
    int v61 = v35;
    unint64_t v43 = v42;
    swift_release(v38);
    uint64_t v81 = sub_10015ADC4(v41, v43, v82);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, v82, v37 + 4, v37 + 12);
    swift_release_n(v38, 2LL);
    swift_bridgeObjectRelease();
    *(_WORD *)(v37 + 12) = 2080;
    uint64_t v44 = sub_10022808C( &qword_1003FD3D0,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for IPCClientMessage,  (uint64_t)&protocol conformance descriptor for IPCClientMessage);
    uint64_t v45 = v76;
    uint64_t v46 = dispatch thunk of CustomStringConvertible.description.getter(v8, v44);
    uint64_t v81 = sub_10015ADC4(v46, v47, v82);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, v82, v37 + 14, v37 + 22);
    swift_bridgeObjectRelease();
    unsigned int v76 = *(_BYTE **)(v72 + 8);
    ((void (*)(_BYTE *, uint64_t))v76)(v45, v8);
    *(_WORD *)(v37 + 22) = 2080;
    uint64_t v72 = v8;
    unsigned __int16 v48 = v64;
    IPCMessage.priority.getter(v31);
    uint64_t v49 = sub_10022808C( &qword_1003FD3D8,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for ExecutionPriority,  (uint64_t)&protocol conformance descriptor for ExecutionPriority);
    uint64_t v50 = v66;
    uint64_t v51 = dispatch thunk of CustomStringConvertible.description.getter(v66, v49);
    unint64_t v53 = v52;
    (*(void (**)(_BYTE *, uint64_t))(v65 + 8))(v48, v50);
    uint64_t v81 = sub_10015ADC4(v51, v53, v82);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, v82, v37 + 24, v37 + 32);
    swift_bridgeObjectRelease();
    uint64_t v54 = *(void (**)(_BYTE *, uint64_t))(v73 + 8);
    v54(v29, v31);
    uint64_t v33 = v62;
    _os_log_impl( (void *)&_mh_execute_header,  v62,  (os_log_type_t)v61,  "[%s] Send: %s, priority: %s",  (uint8_t *)v37,  0x20u);
    uint64_t v55 = v63;
    swift_arrayDestroy(v63, 3LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v55, -1LL, -1LL);
    swift_slowDealloc(v37, -1LL, -1LL);
  }

  else
  {
    swift_release_n(v80, 2LL);
    uint64_t v56 = v76;
    unsigned int v76 = *(_BYTE **)(v72 + 8);
    ((void (*)(_BYTE *, uint64_t))v76)(v56, v8);
    uint64_t v54 = *(void (**)(_BYTE *, uint64_t))(v73 + 8);
    v54(v29, v31);
  }

  (*(void (**)(_BYTE *, uint64_t))(v78 + 8))(v77, v79);
  uint64_t v57 = v74;
  uint64_t v58 = sub_1001604E8(&qword_1003FD3C8, &qword_1003FD3B0, (uint64_t)&protocol conformance descriptor for IPCMessage<A>);
  dispatch thunk of XPCSession.send<A>(_:)(v57, v31, v58);
  return ((uint64_t (*)(_BYTE *, uint64_t))v54)(v57, v31);
}

uint64_t sub_10029CD7C()
{
  return swift_deallocClassInstance(v0, 104LL, 7LL);
}

Swift::Int sub_10029CDB0()
{
  return Hasher._finalize()();
}

uint64_t sub_10029CDF4()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 208LL))();
}

uint64_t sub_10029CE1C()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 216LL))();
}

uint64_t sub_10029CE44()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 288LL))();
}

uint64_t sub_10029CE6C()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 232LL))();
}

Swift::Int sub_10029CE94(uint64_t a1)
{
  return Hasher._finalize()();
}

uint64_t sub_10029CED8()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240LL))();
}

uint64_t sub_10029CEE4()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248LL))();
}

uint64_t sub_10029CEF0()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256LL))();
}

uint64_t sub_10029CEFC()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264LL))();
}

uint64_t sub_10029CF08()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272LL))();
}

uint64_t sub_10029CF14(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t v4 = *(void *)(*a1 + 88);
  uint64_t v5 = *(void *)(v2 + 96);
  uint64_t v6 = *(void *)(v3 + 88);
  uint64_t v7 = *(void *)(v3 + 96);
  if (v4 == v6 && v5 == v7) {
    return 1LL;
  }
  else {
    return _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v6, v7, 0LL);
  }
}

void *sub_10029CF40()
{
  uint64_t v0 = type metadata accessor for MediaControlIPCServer();
  uint64_t v1 = swift_allocObject(v0, 40LL, 7LL);
  uint64_t result = sub_10029CFAC();
  qword_100405C98 = v1;
  return result;
}

uint64_t sub_10029CF78()
{
  uint64_t v1 = swift_allocObject(v0, 40LL, 7LL);
  sub_10029CFAC();
  return v1;
}

void *sub_10029CFAC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = type metadata accessor for Logger(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v1[2] = 0LL;
  v1[3] = 0LL;
  v1[4] = 0LL;
  uint64_t v7 = sub_1001742F0();
  uint64_t v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v7, v3);
  uint64_t v9 = (os_log_s *)Logger.logObject.getter(v8);
  os_log_type_t v10 = static os_log_type_t.default.getter(v9);
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v12 = swift_slowAlloc(32LL, -1LL);
    uint64_t v19 = v12;
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v17 = v11 + 4;
    uint64_t v13 = _typeName(_:qualified:)(v2, 0LL);
    uint64_t v18 = sub_10015ADC4(v13, v14, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19, v17, v11 + 12);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "[%s] init", v11, 0xCu);
    swift_arrayDestroy(v12, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1LL, -1LL);
    swift_slowDealloc(v11, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v1;
}

uint64_t sub_10029D15C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = type metadata accessor for XPCListener.InitializationOptions(0LL);
  __chkstk_darwin(v2);
  uint64_t v51 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v46 - v8;
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v46 - v10;
  uint64_t v12 = sub_1001742F0();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v49 = v12;
  uint64_t v50 = v13;
  uint64_t v14 = ((uint64_t (*)(char *))v13)(v11);
  unsigned int v15 = (os_log_s *)Logger.logObject.getter(v14);
  os_log_type_t v16 = static os_log_type_t.default.getter(v15);
  BOOL v17 = os_log_type_enabled(v15, v16);
  uint64_t v52 = v1;
  if (v17)
  {
    uint64_t v18 = swift_slowAlloc(12LL, -1LL);
    uint64_t v46 = v9;
    uint64_t v19 = (uint8_t *)v18;
    uint64_t v20 = swift_slowAlloc(32LL, -1LL);
    v54[0] = v20;
    uint64_t v48 = v4;
    *(_DWORD *)uint64_t v19 = 136315138;
    uint64_t v21 = _typeName(_:qualified:)(v52, 0LL);
    uint64_t v53 = sub_10015ADC4(v21, v22, v54);
    uint64_t v1 = v52;
    uint64_t v4 = v48;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, v54, v19 + 4, v19 + 12);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "[%s] start", v19, 0xCu);
    swift_arrayDestroy(v20, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1LL, -1LL);
    uint64_t v23 = v19;
    uint64_t v9 = v46;
    swift_slowDealloc(v23, -1LL, -1LL);
  }

  uint64_t v24 = *(void (**)(char *, uint64_t))(v5 + 8);
  v24(v11, v4);
  uint64_t v25 = (void *)*sub_100216E68();
  uint64_t v26 = swift_allocObject(&unk_1003ACBC0, 24LL, 7LL);
  *(void *)(v26 + swift_unknownObjectWeakDestroy(v0 + 16) = v1;
  id v27 = v25;
  char v28 = v51;
  static XPCListener.InitializationOptions.none.getter(v27);
  uint64_t v29 = type metadata accessor for XPCListener(0LL);
  swift_allocObject(v29, *(unsigned int *)(v29 + 48), *(unsigned __int16 *)(v29 + 52));
  uint64_t v30 = XPCListener.init(service:targetQueue:options:incomingSessionHandler:)( 0xD00000000000001ALL,  0x8000000100340A20LL,  v25,  v28,  sub_1002A0A2C,  v26);
  v50(v9, v49, v4);
  uint64_t v31 = swift_retain_n(v30, 2LL);
  uint64_t v32 = (os_log_s *)Logger.logObject.getter(v31);
  os_log_type_t v33 = static os_log_type_t.default.getter(v32);
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v34 = swift_slowAlloc(22LL, -1LL);
    uint64_t v35 = swift_slowAlloc(64LL, -1LL);
    uint64_t v48 = v4;
    uint64_t v36 = v35;
    v54[0] = v35;
    *(_DWORD *)uint64_t v34 = 136315394;
    uint64_t v37 = _typeName(_:qualified:)(v52, 0LL);
    uint64_t v53 = sub_10015ADC4(v37, v38, v54);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, v54, v34 + 4, v34 + 12);
    uint64_t v39 = swift_bridgeObjectRelease();
    *(_WORD *)(v34 + 12) = 2080;
    uint64_t v40 = XPCListener.debugDescription.getter(v39);
    uint64_t v53 = sub_10015ADC4(v40, v41, v54);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, v54, v34 + 14, v34 + 22);
    swift_release_n(v30, 2LL);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v32, v33, "[%s] Created XPCListener: %s", (uint8_t *)v34, 0x16u);
    swift_arrayDestroy(v36, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v36, -1LL, -1LL);
    swift_slowDealloc(v34, -1LL, -1LL);

    unint64_t v42 = v9;
    uint64_t v43 = v48;
  }

  else
  {

    swift_release_n(v30, 2LL);
    unint64_t v42 = v9;
    uint64_t v43 = v4;
  }

  v24(v42, v43);
  uint64_t v44 = *(void *)(v47 + 32);
  *(void *)(v47 + 32) = v30;
  return swift_release(v44);
}

uint64_t sub_10029D7A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for Logger(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (void *)((char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v14 = sub_100216E68();
  unsigned int v15 = (void *)*v14;
  *uint64_t v13 = *v14;
  (*(void (**)(uint64_t *, void, uint64_t))(v11 + 104))( v13,  enum case for DispatchPredicate.onQueue(_:),  v10);
  id v16 = v15;
  LOBYTE(v15) = _dispatchPreconditionTest(_:)(v13);
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v11 + 8))(v13, v10);
  if ((v15 & 1) != 0)
  {
    uint64_t v18 = sub_1001742F0();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v18, v6);
    uint64_t v19 = swift_retain_n(a1, 2LL);
    uint64_t v20 = (os_log_s *)Logger.logObject.getter(v19);
    os_log_type_t v21 = static os_log_type_t.default.getter(v20);
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = swift_slowAlloc(22LL, -1LL);
      uint64_t v23 = swift_slowAlloc(64LL, -1LL);
      v33[1] = a3;
      uint64_t v24 = a1;
      uint64_t v25 = v23;
      uint64_t v35 = v23;
      *(_DWORD *)uint64_t v22 = 136315394;
      v33[0] = v6;
      uint64_t v26 = _typeName(_:qualified:)(a2, 0LL);
      uint64_t v34 = sub_10015ADC4(v26, v27, &v35);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35, v22 + 4, v22 + 12);
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2080;
      uint64_t v28 = ObjectIdentifier.debugDescription.getter(v24);
      uint64_t v34 = sub_10015ADC4(v28, v29, &v35);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35, v22 + 14, v22 + 22);
      swift_release_n(v24, 2LL);
      swift_bridgeObjectRelease();
      _os_log_impl( (void *)&_mh_execute_header,  v20,  v21,  "[%s] XPCListener incoming request: %s",  (uint8_t *)v22,  0x16u);
      swift_arrayDestroy(v25, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v25, -1LL, -1LL);
      swift_slowDealloc(v22, -1LL, -1LL);

      (*(void (**)(char *, void))(v7 + 8))(v9, v33[0]);
    }

    else
    {

      swift_release_n(a1, 2LL);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }

    uint64_t v30 = type metadata accessor for MediaControlIPCServer.XPCClient();
    uint64_t v32 = sub_10022808C( (unint64_t *)&unk_1003FD3A0,  v31,  (uint64_t (*)(uint64_t))type metadata accessor for MediaControlIPCServer.XPCClient,  (uint64_t)&unk_100350D14);
    return dispatch thunk of XPCListener.IncomingSessionRequest.accept<A>(_:)(sub_10029DA9C, 0LL, v30, v32);
  }

  else
  {
    __break(1u);
  }

  return result;
}

uint64_t sub_10029DA9C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for MediaControlIPCServer.XPCClient();
  uint64_t v5 = swift_allocObject(v4, 104LL, 7LL);
  *(_OWORD *)(v5 + swift_unknownObjectWeakDestroy(v0 + 16) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_BYTE *)(v5 + 48) = 1;
  *(void *)(v5 + 56) = 0LL;
  *(void *)(v5 + 64) = 0LL;
  *(_DWORD *)(v5 + 72) = 0;
  *(_BYTE *)(v5 + 76) = 1;
  swift_retain(a1);
  uint64_t result = sub_1001A8998();
  *(void *)(v5 + 88) = result;
  *(void *)(v5 + 96) = v7;
  *(void *)(v5 + 80) = a1;
  *a2 = v5;
  return result;
}

uint64_t sub_10029DB0C@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v190 = a2;
  uint64_t v200 = a3;
  uint64_t v186 = *v3;
  uint64_t v5 = type metadata accessor for InternalRoutingError(0LL);
  __chkstk_darwin(v5);
  uint64_t v195 = (char *)&v143 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v169 = type metadata accessor for SetExpandedSessionsStateMessage(0LL);
  uint64_t v173 = *(void *)(v169 - 8);
  __chkstk_darwin(v169);
  unsigned int v168 = (char *)&v143 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v172 = type metadata accessor for SetUIPresentedStateMessage(0LL);
  uint64_t v171 = *(void *)(v172 - 8);
  __chkstk_darwin(v172);
  uint64_t v170 = (char *)&v143 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v159 = type metadata accessor for RoutingControl(0LL);
  uint64_t v158 = *(void *)(v159 - 8);
  __chkstk_darwin(v159);
  uint64_t v157 = (char *)&v143 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v156 = type metadata accessor for InteractWithControlMessage(0LL);
  uint64_t v155 = *(void *)(v156 - 8);
  __chkstk_darwin(v156);
  uint64_t v154 = (char *)&v143 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v153 = type metadata accessor for RoutingDialog.Action(0LL);
  uint64_t v152 = *(void *)(v153 - 8);
  __chkstk_darwin(v153);
  unint64_t v151 = (char *)&v143 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v163 = type metadata accessor for InteractWithDialogMessage(0LL);
  uint64_t v162 = *(void *)(v163 - 8);
  __chkstk_darwin(v163);
  unint64_t v150 = (char *)&v143 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v161 = type metadata accessor for InteractWithSessionMessage(0LL);
  uint64_t v166 = *(void *)(v161 - 8);
  __chkstk_darwin(v161);
  uint64_t v160 = (char *)&v143 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v165 = type metadata accessor for InteractWithItemMessage(0LL);
  uint64_t v167 = *(void *)(v165 - 8);
  __chkstk_darwin(v165);
  uint64_t v164 = (char *)&v143 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v179 = type metadata accessor for RoutingMode(0LL);
  uint64_t v178 = *(void *)(v179 - 8);
  __chkstk_darwin(v179);
  uint64_t v177 = (char *)&v143 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v176 = type metadata accessor for SetRoutingModeMessage(0LL);
  uint64_t v175 = *(void *)(v176 - 8);
  __chkstk_darwin(v176);
  uint64_t v174 = (char *)&v143 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v182 = type metadata accessor for RoutingSessionConfiguration(0LL);
  uint64_t v181 = *(void *)(v182 - 8);
  __chkstk_darwin(v182);
  unsigned int v180 = (char *)&v143 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v191 = type metadata accessor for IPCConnectMessage(0LL);
  uint64_t v188 = *(void *)(v191 - 8);
  __chkstk_darwin(v191);
  uint64_t v187 = (char *)&v143 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v185 = type metadata accessor for ExecutionPriority(0LL);
  uint64_t v183 = *(void *)(v185 - 8);
  __chkstk_darwin(v185);
  int v184 = (char *)&v143 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = type metadata accessor for Logger(0LL);
  uint64_t v192 = *(void *)(v20 - 8);
  uint64_t v193 = v20;
  __chkstk_darwin(v20);
  uint64_t v196 = (char *)&v143 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v194 = type metadata accessor for IPCServerMessage(0LL);
  uint64_t v197 = *(void *)(v194 - 8);
  uint64_t v22 = __chkstk_darwin(v194);
  uint64_t v189 = (char *)&v143 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v143 - v25;
  __chkstk_darwin(v24);
  uint64_t v199 = (char *)&v143 - v27;
  uint64_t v28 = sub_100156B68(&qword_1003FD3E8);
  __chkstk_darwin(v28);
  uint64_t v30 = (char *)&v143 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v31 = sub_100156B68(&qword_1003FD3F0);
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v35 = (char *)&v143 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v33);
  uint64_t v198 = (char *)&v143 - v36;
  uint64_t v37 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v38 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v40 = (uint64_t *)((char *)&v143 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  unint64_t v41 = sub_100216E68();
  unint64_t v42 = (void *)*v41;
  *uint64_t v40 = *v41;
  (*(void (**)(uint64_t *, void, uint64_t))(v38 + 104))( v40,  enum case for DispatchPredicate.onQueue(_:),  v37);
  id v43 = v42;
  LOBYTE(v42) = _dispatchPreconditionTest(_:)(v40);
  (*(void (**)(uint64_t *, uint64_t))(v38 + 8))(v40, v37);
  if ((v42 & 1) == 0)
  {
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }

  uint64_t v44 = sub_1001604E8(&qword_1003FD3F8, &qword_1003FD3F0, (uint64_t)&protocol conformance descriptor for IPCMessage<A>);
  XPCReceivedMessage.decode<A>(as:)(v31, v31, v44);
  uint64_t v45 = v31;
  uint64_t v195 = a1;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v30, 0LL, 1LL, v31);
  uint64_t v46 = v198;
  (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v198, v30, v45);
  uint64_t v47 = v199;
  IPCMessage.message.getter(v45);
  uint64_t v48 = sub_1001742F0();
  uint64_t v50 = v192;
  uint64_t v49 = v193;
  (*(void (**)(char *, uint64_t, uint64_t))(v192 + 16))(v196, v48, v193);
  uint64_t v51 = v197;
  uint64_t v52 = v47;
  uint64_t v30 = (char *)v194;
  uint64_t v149 = *(void (**)(char *, char *, uint64_t))(v197 + 16);
  v149(v26, v52, v194);
  uint64_t v53 = (*(uint64_t (**)(char *, char *, uint64_t))(v32 + 16))(v35, v46, v45);
  uint64_t v54 = (os_log_s *)Logger.logObject.getter(v53);
  os_log_type_t v55 = static os_log_type_t.info.getter();
  int v56 = v55;
  BOOL v57 = os_log_type_enabled(v54, v55);
  uint64_t v148 = v45;
  if (v57)
  {
    uint64_t v58 = swift_slowAlloc(42LL, -1LL);
    uint64_t v147 = swift_slowAlloc(128LL, -1LL);
    uint64_t v202 = v147;
    *(_DWORD *)uint64_t v58 = 136315906;
    os_log_t v146 = v54;
    uint64_t v59 = _typeName(_:qualified:)(v186, 0LL);
    int v145 = v56;
    uint64_t v201 = sub_10015ADC4(v59, v60, &v202);
    unint64_t v144 = &v202;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v201, &v202, v58 + 4, v58 + 12);
    swift_bridgeObjectRelease();
    *(_WORD *)(v58 + 12) = 2080;
    uint64_t v61 = sub_10022808C( &qword_1003FD408,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for IPCServerMessage,  (uint64_t)&protocol conformance descriptor for IPCServerMessage);
    uint64_t v62 = dispatch thunk of CustomStringConvertible.description.getter(v30, v61);
    uint64_t v201 = sub_10015ADC4(v62, v63, &v202);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v201, &v202, v58 + 14, v58 + 22);
    swift_bridgeObjectRelease();
    uint64_t v186 = *(void (**)(char *, char *))(v51 + 8);
    v186(v26, v30);
    *(_WORD *)(v58 + 22) = 2080;
    uint64_t v143 = v58 + 24;
    uint64_t v64 = v184;
    IPCMessage.priority.getter(v45);
    uint64_t v65 = sub_10022808C( &qword_1003FD3D8,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for ExecutionPriority,  (uint64_t)&protocol conformance descriptor for ExecutionPriority);
    uint64_t v66 = v185;
    uint64_t v67 = dispatch thunk of CustomStringConvertible.description.getter(v185, v65);
    unint64_t v69 = v68;
    uint64_t v70 = v45;
    uint64_t v183 = *(void *)(v183 + 8);
    ((void (*)(char *, uint64_t))v183)(v64, v66);
    uint64_t v201 = sub_10015ADC4(v67, v69, &v202);
    uint64_t v71 = v144;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v201, v144, v143, v58 + 32);
    swift_bridgeObjectRelease();
    uint64_t v72 = *(uint64_t (**)(char *, uint64_t))(v32 + 8);
    uint64_t v73 = v70;
    uint64_t v74 = v199;
    uint64_t v75 = v72(v35, v73);
    *(_WORD *)(v58 + 32) = 2080;
    static ExecutionPriority.current.getter(v75);
    uint64_t v76 = v65;
    uint64_t v30 = (char *)v194;
    uint64_t v77 = dispatch thunk of CustomStringConvertible.description.getter(v66, v76);
    unint64_t v79 = v78;
    ((void (*)(char *, uint64_t))v183)(v64, v66);
    uint64_t v201 = sub_10015ADC4(v77, v79, &v202);
    uint64_t v80 = v186;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v201, v71, v58 + 34, v58 + 42);
    swift_bridgeObjectRelease();
    os_log_t v81 = v146;
    _os_log_impl( (void *)&_mh_execute_header,  v146,  (os_log_type_t)v145,  "[%s] Received message: %s, messagePriority: %s, currentPriority: %s",  (uint8_t *)v58,  0x2Au);
    uint64_t v82 = v147;
    swift_arrayDestroy(v147, 4LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v82, -1LL, -1LL);
    swift_slowDealloc(v58, -1LL, -1LL);

    uint64_t v83 = (*(uint64_t (**)(char *, uint64_t))(v192 + 8))(v196, v193);
    uint64_t v84 = v189;
    uint64_t v85 = v190;
    uint64_t v86 = v191;
  }

  else
  {
    uint64_t v80 = *(void (**)(char *, char *))(v51 + 8);
    v80(v26, v30);
    uint64_t v72 = *(uint64_t (**)(char *, uint64_t))(v32 + 8);
    v72(v35, v45);

    uint64_t v83 = (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v196, v49);
    uint64_t v84 = v189;
    uint64_t v85 = v190;
    uint64_t v86 = v191;
    uint64_t v74 = v199;
  }

  uint64_t v87 = XPCReceivedMessage.expectsReply.getter(v83);
  XPCReceivedMessage.isSync.getter(v87);
  v149(v84, v74, (uint64_t)v30);
  uint64_t v88 = v197;
  int v89 = (*(uint64_t (**)(char *, char *))(v197 + 88))(v84, v30);
  uint64_t v90 = v187;
  uint64_t v91 = v188;
  if (v89 == enum case for IPCServerMessage.prototype(_:))
  {
    v80(v74, v30);
    v72(v198, v148);
    v80(v84, v30);
LABEL_19:
    uint64_t v118 = v200;
    uint64_t v119 = type metadata accessor for ReplyMessage(0LL);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v119 - 8) + 56LL))( v118,  1LL,  1LL,  v119);
  }

  if (v89 == enum case for IPCServerMessage.connect(_:))
  {
    uint64_t v196 = (char *)v72;
    uint64_t v186 = v80;
    (*(void (**)(char *, char *))(v88 + 96))(v84, v30);
    (*(void (**)(char *, char *, uint64_t))(v91 + 32))(v90, v84, v86);
    uint64_t v92 = sub_10029B004();
    uint64_t v93 = (*(uint64_t (**)(void))(*(void *)v85 + 144LL))();
    if (v94)
    {
      uint64_t v95 = v93;
      uint64_t v96 = v94;
      uint64_t v97 = v180;
      IPCConnectMessage.configuration.getter();
      uint64_t v98 = v90;
      id v99 = sub_100175D44();
      (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, char *, id, uint64_t))(*(void *)v92 + 376LL))( v85,  &off_1003ACBD8,  v95,  v96,  v97,  v99,  1LL);
      swift_release(v92);
      swift_bridgeObjectRelease();

      (*(void (**)(char *, uint64_t))(v181 + 8))(v97, v182);
      (*(void (**)(char *, uint64_t))(v91 + 8))(v98, v191);
      v186(v199, v30);
LABEL_12:
      ((void (*)(char *, uint64_t))v196)(v198, v148);
      goto LABEL_19;
    }

    goto LABEL_31;
  }

  if (v89 == enum case for IPCServerMessage.setRoutingMode(_:))
  {
    (*(void (**)(char *, char *))(v88 + 96))(v84, v30);
    id v100 = v74;
    uint64_t v101 = v85;
    uint64_t v102 = v175;
    unint64_t v103 = *(void (**)(char *, char *, uint64_t))(v175 + 32);
    uint64_t v196 = (char *)v72;
    uint64_t v104 = v174;
    uint64_t v105 = v176;
    v103(v174, v84, v176);
    uint64_t v106 = sub_10029B004();
    uint64_t v107 = v177;
    SetRoutingModeMessage.routingMode.getter();
    (*(void (**)(char *, uint64_t, _UNKNOWN **, uint64_t))(*(void *)v106 + 424LL))( v107,  v101,  &off_1003ACBD8,  1LL);
    swift_release(v106);
    (*(void (**)(char *, uint64_t))(v178 + 8))(v107, v179);
    (*(void (**)(char *, uint64_t))(v102 + 8))(v104, v105);
    v80(v100, v30);
    goto LABEL_12;
  }

  if (v89 == enum case for IPCServerMessage.setUIPresented(_:))
  {
    (*(void (**)(char *, char *))(v88 + 96))(v84, v30);
    uint64_t v108 = v85;
    uint64_t v109 = v80;
    uint64_t v110 = v171;
    uint64_t v111 = v170;
    uint64_t v112 = v172;
    (*(void (**)(char *, char *, uint64_t))(v171 + 32))(v170, v84, v172);
    uint64_t v113 = sub_10029B004();
    char v114 = SetUIPresentedStateMessage.isPresented.getter();
    (*(void (**)(void, uint64_t, _UNKNOWN **, uint64_t))(*(void *)v113 + 432LL))( v114 & 1,  v108,  &off_1003ACBD8,  1LL);
    swift_release(v113);
    (*(void (**)(char *, uint64_t))(v110 + 8))(v111, v112);
LABEL_17:
    v109(v74, v30);
LABEL_18:
    v72(v198, v148);
    goto LABEL_19;
  }

  if (v89 == enum case for IPCServerMessage.setExpandedSessionIdentifiers(_:))
  {
    (*(void (**)(char *, char *))(v88 + 96))(v84, v30);
    uint64_t v115 = v168;
    uint64_t v109 = v80;
    uint64_t v116 = v169;
    (*(void (**)(char *, char *, uint64_t))(v173 + 32))(v168, v84, v169);
    uint64_t v117 = sub_10029B004();
    SetExpandedSessionsStateMessage.expandedSessionIdentifiers.getter();
    (*(void (**)(void))(*(void *)v117 + 440LL))();
    swift_release(v117);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v173 + 8))(v115, v116);
    goto LABEL_17;
  }

  if (v89 == enum case for IPCServerMessage.interactWithItem(_:))
  {
    (*(void (**)(char *, char *))(v88 + 96))(v84, v30);
    uint64_t v121 = v164;
    uint64_t v122 = v165;
    (*(void (**)(char *, char *, uint64_t))(v167 + 32))(v164, v84, v165);
    uint64_t v123 = sub_10029B004();
    uint64_t v124 = InteractWithItemMessage.itemIdentifier.getter();
    (*(void (**)(uint64_t))(*(void *)v123 + 392LL))(v124);
    swift_release(v123);
    swift_bridgeObjectRelease();
    uint64_t v125 = &v198;
LABEL_24:
    (*((void (**)(char *, uint64_t))*(v125 - 32) + 1))(v121, v122);
    v80(v74, v30);
    goto LABEL_18;
  }

  if (v89 == enum case for IPCServerMessage.interactWithSession(_:))
  {
    (*(void (**)(char *, char *))(v88 + 96))(v84, v30);
    uint64_t v121 = v160;
    uint64_t v122 = v161;
    (*(void (**)(char *, char *, uint64_t))(v166 + 32))(v160, v84, v161);
    uint64_t v126 = sub_10029B004();
    uint64_t v127 = InteractWithSessionMessage.sessionIdentifier.getter();
    (*(void (**)(uint64_t))(*(void *)v126 + 400LL))(v127);
    swift_release(v126);
    swift_bridgeObjectRelease();
    uint64_t v125 = (char **)&v197;
    goto LABEL_24;
  }

  uint64_t v128 = v85;
  uint64_t v186 = v80;
  if (v89 == enum case for IPCServerMessage.interactWithDialog(_:))
  {
    (*(void (**)(char *, char *))(v88 + 96))(v84, v30);
    uint64_t v129 = v150;
    (*(void (**)(char *, char *, uint64_t))(v162 + 32))(v150, v84, v163);
    uint64_t v130 = sub_10029B004();
    uint64_t v131 = InteractWithDialogMessage.dialogIdentifier.getter();
    uint64_t v133 = v132;
    unint64_t v134 = v151;
    InteractWithDialogMessage.action.getter();
    (*(void (**)(uint64_t, uint64_t, char *, uint64_t, _UNKNOWN **, uint64_t))(*(void *)v130 + 408LL))( v131,  v133,  v134,  v128,  &off_1003ACBD8,  1LL);
    swift_release(v130);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v152 + 8))(v134, v153);
    (*(void (**)(char *, uint64_t))(v162 + 8))(v129, v163);
LABEL_29:
    v186(v74, v30);
    goto LABEL_18;
  }

  if (v89 == enum case for IPCServerMessage.interactWithControl(_:))
  {
    (*(void (**)(char *, char *))(v88 + 96))(v84, v30);
    uint64_t v135 = v155;
    id v136 = v154;
    uint64_t v137 = v156;
    (*(void (**)(char *, char *, uint64_t))(v155 + 32))(v154, v84, v156);
    uint64_t v138 = sub_10029B004();
    unint64_t v139 = v157;
    InteractWithControlMessage.control.getter();
    (*(void (**)(char *, uint64_t, _UNKNOWN **, uint64_t))(*(void *)v138 + 416LL))( v139,  v128,  &off_1003ACBD8,  1LL);
    swift_release(v138);
    (*(void (**)(char *, uint64_t))(v158 + 8))(v139, v159);
    (*(void (**)(char *, uint64_t))(v135 + 8))(v136, v137);
    goto LABEL_29;
  }

uint64_t sub_10029EE54()
{
  return swift_deallocClassInstance(v0, 40LL, 7LL);
}

uint64_t sub_10029EE88(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001LL) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain();
    uint64_t v8 = swift_retain(a2);
    uint64_t v9 = __CocoaSet.member(for:)(v8, v7);
    swift_release(a2);
    if (v9)
    {
      swift_bridgeObjectRelease();
      swift_release(a2);
      uint64_t v36 = v9;
      uint64_t v10 = type metadata accessor for MediaControlIPCServer.XPCClient();
      swift_unknownObjectRetain(v9);
      swift_dynamicCast(v35, &v36, (char *)&type metadata for Swift.AnyObject + 8, v10, 7LL);
      *a1 = v35[0];
      swift_unknownObjectRelease(v9);
      return 0LL;
    }

    uint64_t result = __CocoaSet.count.getter(v7);
    if (__OFADD__(result, 1LL))
    {
      __break(1u);
      return result;
    }

    Swift::Int v24 = sub_10029F134(v7, result + 1);
    v35[0] = v24;
    unint64_t v25 = *(void *)(v24 + 16);
    if (*(void *)(v24 + 24) <= v25)
    {
      uint64_t v27 = v25 + 1;
      swift_retain(a2);
      sub_10029F33C(v27);
      uint64_t v26 = v35[0];
    }

    else
    {
      uint64_t v26 = v24;
      swift_retain(a2);
    }

    sub_10029F5FC((uint64_t)a2, v26);
    uint64_t *v3 = v26;
  }

  else
  {
    Hasher.init(_seed:)(v35, *(void *)(v6 + 40));
    uint64_t v12 = *(void (**)(void *))(*a2 + 232LL);
    swift_bridgeObjectRetain();
    v12(v35);
    Swift::Int v13 = Hasher._finalize()();
    uint64_t v14 = -1LL << *(_BYTE *)(v6 + 32);
    unint64_t v15 = v13 & ~v14;
    if (((*(void *)(v6 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v15) & 1) != 0)
    {
      uint64_t v16 = *(void *)(v6 + 48);
      uint64_t v17 = *(void *)(v16 + 8 * v15);
      uint64_t v18 = *(void *)(v17 + 88);
      uint64_t v19 = *(void *)(v17 + 96);
      uint64_t v20 = a2[11];
      uint64_t v21 = a2[12];
      BOOL v22 = v18 == v20 && v19 == v21;
      if (v22 || (_stringCompareWithSmolCheck(_:_:expecting:)(v18, v19, a2[11], a2[12], 0LL) & 1) != 0)
      {
LABEL_13:
        swift_release(a2);
        swift_bridgeObjectRelease();
        uint64_t v23 = *(void *)(*(void *)(*v3 + 48) + 8 * v15);
        *a1 = v23;
        swift_retain(v23);
        return 0LL;
      }

      uint64_t v28 = ~v14;
      while (1)
      {
        unint64_t v15 = (v15 + 1) & v28;
        if (((*(void *)(v6 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v15) & 1) == 0) {
          break;
        }
        uint64_t v29 = *(void *)(v16 + 8 * v15);
        uint64_t v30 = *(void *)(v29 + 88);
        uint64_t v31 = *(void *)(v29 + 96);
        BOOL v32 = v30 == v20 && v31 == v21;
        if (v32 || (_stringCompareWithSmolCheck(_:_:expecting:)(v30, v31, v20, v21, 0LL) & 1) != 0) {
          goto LABEL_13;
        }
      }
    }

    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v35[0] = *v3;
    uint64_t *v3 = 0x8000000000000000LL;
    uint64_t v34 = swift_retain(a2);
    sub_10029F6A4(v34, v15, isUniquelyReferenced_nonNull_native);
    uint64_t *v3 = v35[0];
  }

  swift_bridgeObjectRelease();
  *a1 = a2;
  return 1LL;
}

Swift::Int sub_10029F134(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_100156B68(&qword_1003FD3E0);
    uint64_t v4 = static _SetStorage.convert(_:capacity:)(a1, a2);
    uint64_t v23 = v4;
    uint64_t v5 = __CocoaSet.makeIterator()(a1);
    uint64_t v6 = __CocoaSet.Iterator.next()(v5);
    if (v6)
    {
      uint64_t v7 = v6;
      uint64_t v8 = type metadata accessor for MediaControlIPCServer.XPCClient();
      do
      {
        v21[0] = v7;
        swift_dynamicCast(&v22, v21, (char *)&type metadata for Swift.AnyObject + 8, v8, 7LL);
        uint64_t v4 = v23;
        unint64_t v16 = *(void *)(v23 + 16);
        if (*(void *)(v23 + 24) <= v16)
        {
          sub_10029F33C(v16 + 1);
          uint64_t v4 = v23;
        }

        uint64_t v9 = v22;
        Hasher.init(_seed:)(v21, *(void *)(v4 + 40));
        (*(void (**)(void *))(*(void *)v9 + 232LL))(v21);
        Swift::Int result = Hasher._finalize()();
        uint64_t v11 = v4 + 56;
        uint64_t v12 = -1LL << *(_BYTE *)(v4 + 32);
        unint64_t v13 = result & ~v12;
        unint64_t v14 = v13 >> 6;
        if (((-1LL << v13) & ~*(void *)(v4 + 56 + 8 * (v13 >> 6))) != 0)
        {
          unint64_t v15 = __clz(__rbit64((-1LL << v13) & ~*(void *)(v4 + 56 + 8 * (v13 >> 6)))) | v13 & 0x7FFFFFFFFFFFFFC0LL;
        }

        else
        {
          char v17 = 0;
          unint64_t v18 = (unint64_t)(63 - v12) >> 6;
          do
          {
            if (++v14 == v18 && (v17 & 1) != 0)
            {
              __break(1u);
              return result;
            }

            BOOL v19 = v14 == v18;
            if (v14 == v18) {
              unint64_t v14 = 0LL;
            }
            v17 |= v19;
            uint64_t v20 = *(void *)(v11 + 8 * v14);
          }

          while (v20 == -1);
          unint64_t v15 = __clz(__rbit64(~v20)) + (v14 << 6);
        }

        *(void *)(v11 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v15;
        *(void *)(*(void *)(v4 + 48) + 8 * v15) = v9;
        ++*(void *)(v4 + 16);
        uint64_t v7 = __CocoaSet.Iterator.next()(result);
      }

      while (v7);
    }

    swift_release(v5);
  }

  else
  {
    swift_unknownObjectRelease(a1);
    return (Swift::Int)&_swiftEmptySetSingleton;
  }

  return v4;
}

Swift::Int sub_10029F33C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *v1;
  if (*(void *)(*v1 + 24) <= a1) {
    uint64_t v4 = a1;
  }
  else {
    uint64_t v4 = *(void *)(*v1 + 24);
  }
  sub_100156B68(&qword_1003FD3E0);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1LL);
  uint64_t v6 = v5;
  if (*(void *)(v3 + 16))
  {
    uint64_t v30 = v2;
    uint64_t v7 = 1LL << *(_BYTE *)(v3 + 32);
    uint64_t v8 = (void *)(v3 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1LL << v7);
    }
    else {
      uint64_t v9 = -1LL;
    }
    unint64_t v10 = v9 & *(void *)(v3 + 56);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v12 = v5 + 56;
    Swift::Int result = swift_retain(v3);
    int64_t v14 = 0LL;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v14 << 6);
      }

      else
      {
        int64_t v18 = v14 + 1;
        if (__OFADD__(v14, 1LL))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }

        if (v18 >= v11) {
          goto LABEL_36;
        }
        unint64_t v19 = v8[v18];
        ++v14;
        if (!v19)
        {
          int64_t v14 = v18 + 1;
          if (v18 + 1 >= v11) {
            goto LABEL_36;
          }
          unint64_t v19 = v8[v14];
          if (!v19)
          {
            int64_t v14 = v18 + 2;
            if (v18 + 2 >= v11) {
              goto LABEL_36;
            }
            unint64_t v19 = v8[v14];
            if (!v19)
            {
              int64_t v20 = v18 + 3;
              if (v20 >= v11)
              {
LABEL_36:
                swift_release(v3);
                uint64_t v2 = v30;
                uint64_t v29 = 1LL << *(_BYTE *)(v3 + 32);
                if (v29 > 63) {
                  bzero((void *)(v3 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8LL);
                }
                else {
                  *uint64_t v8 = -1LL << v29;
                }
                *(void *)(v3 + swift_unknownObjectWeakDestroy(v0 + 16) = 0LL;
                break;
              }

              unint64_t v19 = v8[v20];
              if (!v19)
              {
                while (1)
                {
                  int64_t v14 = v20 + 1;
                  if (__OFADD__(v20, 1LL)) {
                    goto LABEL_42;
                  }
                  if (v14 >= v11) {
                    goto LABEL_36;
                  }
                  unint64_t v19 = v8[v14];
                  ++v20;
                  if (v19) {
                    goto LABEL_26;
                  }
                }
              }

              int64_t v14 = v20;
            }
          }
        }

unint64_t sub_10029F5FC(uint64_t a1, uint64_t a2)
{
  Swift::Int v4 = Hasher._finalize()();
  unint64_t result = _HashTable.nextHole(atOrAfter:)(v4 & ~(-1LL << *(_BYTE *)(a2 + 32)), a2 + 56, ~(-1LL << *(_BYTE *)(a2 + 32)));
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

uint64_t sub_10029F6A4(uint64_t result, unint64_t a2, char a3)
{
  Swift::Int v4 = v3;
  uint64_t v6 = (void *)result;
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_22;
  }
  uint64_t v9 = v7 + 1;
  if ((a3 & 1) != 0)
  {
    sub_10029F33C(v9);
  }

  else
  {
    if (v8 > v7)
    {
      unint64_t result = (uint64_t)sub_10029F848();
      goto LABEL_22;
    }

    sub_10029F9F0(v9);
  }

  uint64_t v10 = *v3;
  Hasher.init(_seed:)(v30, *(void *)(*v3 + 40));
  (*(void (**)(void *))(*v6 + 232LL))(v30);
  unint64_t result = Hasher._finalize()();
  uint64_t v11 = -1LL << *(_BYTE *)(v10 + 32);
  a2 = result & ~v11;
  uint64_t v12 = v10 + 56;
  if (((*(void *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> a2) & 1) != 0)
  {
    uint64_t v13 = type metadata accessor for MediaControlIPCServer.XPCClient();
    uint64_t v14 = *(void *)(v10 + 48);
    uint64_t v15 = *(void *)(v14 + 8 * a2);
    uint64_t v16 = *(void *)(v15 + 88);
    uint64_t v17 = *(void *)(v15 + 96);
    uint64_t v18 = v6[11];
    uint64_t v19 = v6[12];
    BOOL v20 = v16 == v18 && v17 == v19;
    if (v20 || (unint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v17, v6[11], v6[12], 0LL), (result & 1) != 0))
    {
LABEL_21:
      unint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v13);
      __break(1u);
    }

    else
    {
      uint64_t v21 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v21;
        if (((*(void *)(v12 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> a2) & 1) == 0) {
          break;
        }
        uint64_t v22 = *(void *)(v14 + 8 * a2);
        uint64_t v23 = *(void *)(v22 + 88);
        uint64_t v24 = *(void *)(v22 + 96);
        if (v23 != v18 || v24 != v19)
        {
          unint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(v23, v24, v18, v19, 0LL);
          if ((result & 1) == 0) {
            continue;
          }
        }

        goto LABEL_21;
      }
    }
  }

void *sub_10029F848()
{
  uint64_t v1 = v0;
  sub_100156B68(&qword_1003FD3E0);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)(*v0);
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    unint64_t result = (void *)swift_release(v2);
    *uint64_t v1 = v4;
    return result;
  }

  unint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1LL << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  int64_t v9 = 0LL;
  *(void *)(v4 + swift_unknownObjectWeakDestroy(v0 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1LL << *(_BYTE *)(v2 + 32);
  uint64_t v11 = -1LL;
  if (v10 < 64) {
    uint64_t v11 = ~(-1LL << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }

    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1LL))
    {
      __break(1u);
      goto LABEL_30;
    }

    if (v18 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }

Swift::Int sub_10029F9F0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *v1;
  if (*(void *)(*v1 + 24) <= a1) {
    uint64_t v4 = a1;
  }
  else {
    uint64_t v4 = *(void *)(*v1 + 24);
  }
  sub_100156B68(&qword_1003FD3E0);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0LL);
  uint64_t v6 = v5;
  if (!*(void *)(v3 + 16))
  {
    Swift::Int result = swift_release(v3);
LABEL_38:
    *uint64_t v2 = v6;
    return result;
  }

  uint64_t v7 = 1LL << *(_BYTE *)(v3 + 32);
  uint64_t v8 = v3 + 56;
  if (v7 < 64) {
    uint64_t v9 = ~(-1LL << v7);
  }
  else {
    uint64_t v9 = -1LL;
  }
  unint64_t v10 = v9 & *(void *)(v3 + 56);
  uint64_t v29 = v2;
  int64_t v30 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = v5 + 56;
  Swift::Int result = swift_retain(v3);
  int64_t v13 = 0LL;
  while (1)
  {
    if (v10)
    {
      unint64_t v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v16 = v15 | (v13 << 6);
      goto LABEL_27;
    }

    int64_t v17 = v13 + 1;
    if (__OFADD__(v13, 1LL))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }

    if (v17 >= v30) {
      goto LABEL_36;
    }
    unint64_t v18 = *(void *)(v8 + 8 * v17);
    ++v13;
    if (!v18)
    {
      int64_t v13 = v17 + 1;
      if (v17 + 1 >= v30) {
        goto LABEL_36;
      }
      unint64_t v18 = *(void *)(v8 + 8 * v13);
      if (!v18)
      {
        int64_t v13 = v17 + 2;
        if (v17 + 2 >= v30) {
          goto LABEL_36;
        }
        unint64_t v18 = *(void *)(v8 + 8 * v13);
        if (!v18) {
          break;
        }
      }
    }

uint64_t sub_10029FC98(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  if ((*v1 & 0xC000000000000001LL) == 0)
  {
    Hasher.init(_seed:)(v28, *(void *)(v4 + 40));
    uint64_t v9 = *(void (**)(void *))(*a1 + 232LL);
    swift_bridgeObjectRetain();
    v9(v28);
    Swift::Int v10 = Hasher._finalize()();
    uint64_t v11 = -1LL << *(_BYTE *)(v4 + 32);
    unint64_t v12 = v10 & ~v11;
    if (((*(void *)(v4 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v12) & 1) != 0)
    {
      uint64_t v13 = *(void *)(v4 + 48);
      uint64_t v14 = *(void *)(v13 + 8 * v12);
      uint64_t v15 = *(void *)(v14 + 88);
      uint64_t v16 = *(void *)(v14 + 96);
      uint64_t v17 = a1[11];
      uint64_t v18 = a1[12];
      BOOL v19 = v15 == v17 && v16 == v18;
      if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)(v15, v16, v17, v18, 0LL) & 1) != 0)
      {
LABEL_13:
        swift_bridgeObjectRelease();
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
        uint64_t v21 = *v2;
        v28[0] = *v2;
        *uint64_t v2 = 0x8000000000000000LL;
        if (!isUniquelyReferenced_nonNull_native)
        {
          sub_10029F848();
          uint64_t v21 = v28[0];
        }

        uint64_t v8 = *(void *)(*(void *)(v21 + 48) + 8 * v12);
        sub_1002A001C(v12);
        *uint64_t v2 = v28[0];
        goto LABEL_16;
      }

      uint64_t v22 = ~v11;
      while (1)
      {
        unint64_t v12 = (v12 + 1) & v22;
        if (((*(void *)(v4 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v12) & 1) == 0) {
          break;
        }
        uint64_t v23 = *(void *)(v13 + 8 * v12);
        uint64_t v24 = *(void *)(v23 + 88);
        uint64_t v25 = *(void *)(v23 + 96);
        BOOL v26 = v24 == v17 && v25 == v18;
        if (v26 || (_stringCompareWithSmolCheck(_:_:expecting:)(v24, v25, v17, v18, 0LL) & 1) != 0) {
          goto LABEL_13;
        }
      }
    }

uint64_t sub_10029FE74(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();
  uint64_t v6 = __CocoaSet.count.getter(a1);
  uint64_t v7 = swift_unknownObjectRetain(a1);
  Swift::Int v8 = sub_10029F134(v7, v6);
  Swift::Int v30 = v8;
  Hasher.init(_seed:)(v29, *(void *)(v8 + 40));
  uint64_t v9 = *(void (**)(void *))(*a2 + 232LL);
  swift_retain(v8);
  v9(v29);
  Swift::Int v10 = Hasher._finalize()();
  uint64_t v11 = -1LL << *(_BYTE *)(v8 + 32);
  unint64_t v12 = v10 & ~v11;
  if (((*(void *)(v8 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v12) & 1) != 0)
  {
    uint64_t v13 = *(void *)(v8 + 48);
    uint64_t v14 = *(void *)(v13 + 8 * v12);
    uint64_t v15 = *(void *)(v14 + 88);
    uint64_t v16 = *(void *)(v14 + 96);
    uint64_t v17 = a2[11];
    uint64_t v18 = a2[12];
    BOOL v19 = v15 == v17 && v16 == v18;
    if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)(v15, v16, v17, v18, 0LL) & 1) != 0)
    {
LABEL_14:
      swift_release(v8);
      Swift::Int v8 = *(void *)(*(void *)(v8 + 48) + 8 * v12);
      sub_1002A001C(v12);
      uint64_t v25 = *(void *)(v8 + 88);
      uint64_t v26 = *(void *)(v8 + 96);
      BOOL v27 = v17 == v25 && v18 == v26;
      if (v27 || (_stringCompareWithSmolCheck(_:_:expecting:)(v17, v18, v25, v26, 0LL) & 1) != 0)
      {
        Swift::Int *v3 = v30;
        return v8;
      }

      __break(1u);
    }

    else
    {
      uint64_t v20 = ~v11;
      while (1)
      {
        unint64_t v12 = (v12 + 1) & v20;
        if (((*(void *)(v8 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v12) & 1) == 0) {
          break;
        }
        uint64_t v21 = *(void *)(v13 + 8 * v12);
        uint64_t v22 = *(void *)(v21 + 88);
        uint64_t v23 = *(void *)(v21 + 96);
        BOOL v24 = v22 == v17 && v23 == v18;
        if (v24 || (_stringCompareWithSmolCheck(_:_:expecting:)(v22, v23, v17, v18, 0LL) & 1) != 0) {
          goto LABEL_14;
        }
      }
    }

    swift_release(v8);
    __break(1u);
  }

  uint64_t result = swift_release(v8);
  __break(1u);
  return result;
}

unint64_t sub_1002A001C(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56LL;
  uint64_t v5 = -1LL << *(_BYTE *)(*v1 + 32LL);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1LL << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain(*v1);
    uint64_t v8 = _HashTable.previousHole(before:)(v2, v4, v7);
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1LL << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        uint64_t v10 = *(void *)(*(void *)(v3 + 48) + 8 * v6);
        Hasher.init(_seed:)(v20, *(void *)(v3 + 40));
        uint64_t v11 = *(void (**)(void *))(*(void *)v10 + 232LL);
        swift_retain(v10);
        v11(v20);
        Swift::Int v12 = Hasher._finalize()();
        swift_release(v10);
        unint64_t v13 = v12 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v13 < v9) {
            goto LABEL_5;
          }
        }

        else if (v13 >= v9)
        {
          goto LABEL_11;
        }

        if (v2 >= (uint64_t)v13)
        {
LABEL_11:
          uint64_t v14 = *(void *)(v3 + 48);
          uint64_t v15 = (void *)(v14 + 8 * v2);
          uint64_t v16 = (void *)(v14 + 8 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v2 = v6;
          }
        }

void sub_1002A01E8(uint64_t isEscapingClosureAtFileLocation)
{
  uint64_t v2 = type metadata accessor for Features.MediaRemote(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = (*(uint64_t (**)(char *, void, uint64_t))(v3 + 104))( v5,  enum case for Features.MediaRemote.cayenne(_:),  v2);
  char v7 = Features.MediaRemote.isEnabled.getter(v6);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if ((v7 & 1) != 0)
  {
    uint64_t v8 = (void *)*sub_100216E68();
    uint64_t v9 = swift_allocObject(&unk_1003ACDF8, 24LL, 7LL);
    *(void *)(v9 + swift_unknownObjectWeakDestroy(v0 + 16) = isEscapingClosureAtFileLocation;
    uint64_t v10 = swift_allocObject(&unk_1003ACE20, 32LL, 7LL);
    *(void *)(v10 + swift_unknownObjectWeakDestroy(v0 + 16) = sub_1002A0F30;
    *(void *)(v10 + 24) = v9;
    uint64_t aBlock[4] = sub_1001840B4;
    uint64_t v17 = v10;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256LL;
    aBlock[2] = sub_1001B2FA0;
    aBlock[3] = &unk_1003ACE38;
    uint64_t v11 = _Block_copy(aBlock);
    uint64_t v12 = v17;
    id v13 = (id)isEscapingClosureAtFileLocation;
    swift_retain(v10);
    uint64_t v14 = v8;
    swift_release(v12);
    dispatch_sync(v14, v11);

    _Block_release(v11);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v10, "", 116LL, 28LL, 49LL, 1LL);
    swift_release(v9);
    swift_release(v10);
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      return;
    }
    __break(1u);
  }

  if (isEscapingClosureAtFileLocation)
  {
    NSString v15 = String._bridgeToObjectiveC()();
    [(id)isEscapingClosureAtFileLocation setMediaControlDiagnostic:v15];
  }

  else
  {
    __break(1u);
  }

uint64_t sub_1002A03CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10029B004();
  *a1 = result;
  return result;
}

unint64_t sub_1002A03F8()
{
  unint64_t result = qword_100403E88;
  if (!qword_100403E88)
  {
    unint64_t result = swift_getWitnessTable(&unk_1003510C4, &type metadata for MediaControlIPCServer.Errors.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100403E88);
  }

  return result;
}

unint64_t sub_1002A043C()
{
  unint64_t result = qword_100403E90;
  if (!qword_100403E90)
  {
    unint64_t result = swift_getWitnessTable( &unk_100351074,  &type metadata for MediaControlIPCServer.Errors.MalformedMessageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100403E90);
  }

  return result;
}

unint64_t sub_1002A0480()
{
  unint64_t result = qword_100403E98[0];
  if (!qword_100403E98[0])
  {
    unint64_t result = swift_getWitnessTable( &unk_100351024,  &type metadata for MediaControlIPCServer.Errors.ValidationFailedCodingKeys);
    atomic_store(result, qword_100403E98);
  }

  return result;
}

uint64_t sub_1002A04C4(uint64_t a1, unint64_t a2)
{
  if (a1 == 0xD000000000000010LL)
  {
    unint64_t v4 = 0x8000000100340B20LL;
    if (a2 == 0x8000000100340B20LL) {
      goto LABEL_5;
    }
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010LL, 0x8000000100340B20LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v4 = a2;
LABEL_5:
    swift_bridgeObjectRelease(v4);
    return 0LL;
  }

  if (a1 == 0xD000000000000010LL && a2 == 0x8000000100340B40LL)
  {
    swift_bridgeObjectRelease(0x8000000100340B40LL);
    return 1LL;
  }

  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010LL, 0x8000000100340B40LL, a1, a2, 0LL);
    swift_bridgeObjectRelease(a2);
    if ((v6 & 1) != 0) {
      return 1LL;
    }
    else {
      return 2LL;
    }
  }

uint64_t sub_1002A05AC(void *a1)
{
  uint64_t v31 = sub_100156B68(&qword_1003FD410);
  uint64_t v29 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  BOOL v32 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v30 = sub_100156B68(&qword_1003FD418);
  uint64_t v3 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_100156B68(&qword_1003FD420);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  sub_1001865C4(a1, v10);
  unint64_t v12 = sub_1002A03F8();
  uint64_t v13 = v33;
  dispatch thunk of Decoder.container<A>(keyedBy:)( &type metadata for MediaControlIPCServer.Errors.CodingKeys,  &type metadata for MediaControlIPCServer.Errors.CodingKeys,  v12,  v10,  v11);
  if (v13) {
    goto LABEL_7;
  }
  uint64_t v14 = v5;
  NSString v15 = v32;
  uint64_t v28 = a1;
  uint64_t v33 = v7;
  uint64_t v16 = KeyedDecodingContainer.allKeys.getter(v6);
  uint64_t v17 = v6;
  if (*(void *)(v16 + 16) != 1LL)
  {
    uint64_t v20 = type metadata accessor for DecodingError(0LL);
    swift_allocError(v20, &protocol witness table for DecodingError, 0LL, 0LL);
    uint64_t v21 = v9;
    uint64_t v23 = v22;
    sub_100156B68(&qword_1003FD428);
    void *v23 = &type metadata for MediaControlIPCServer.Errors;
    uint64_t v24 = KeyedDecodingContainer.codingPath.getter(v6);
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)( v24,  0xD00000000000002BLL,  0x8000000100340B90LL,  0LL);
    uint64_t v25 = (*(uint64_t (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104LL))( v23,  enum case for DecodingError.typeMismatch(_:),  v20);
    swift_willThrow(v25);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v21, v6);
    a1 = v28;
LABEL_7:
    sub_1001607E0(a1);
    return v6;
  }

  uint64_t v6 = *(unsigned __int8 *)(v16 + 32);
  if ((v6 & 1) != 0)
  {
    char v35 = 1;
    unint64_t v18 = sub_1002A043C();
    KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)( &type metadata for MediaControlIPCServer.Errors.MalformedMessageCodingKeys,  &v35,  v17,  &type metadata for MediaControlIPCServer.Errors.MalformedMessageCodingKeys,  v18);
    uint64_t v19 = v33;
    (*(void (**)(char *, uint64_t))(v29 + 8))(v15, v31);
  }

  else
  {
    char v34 = 0;
    unint64_t v26 = sub_1002A0480();
    KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)( &type metadata for MediaControlIPCServer.Errors.ValidationFailedCodingKeys,  &v34,  v17,  &type metadata for MediaControlIPCServer.Errors.ValidationFailedCodingKeys,  v26);
    uint64_t v19 = v33;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v14, v30);
  }

  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v17);
  sub_1001607E0(v28);
  return v6;
}

uint64_t sub_1002A08D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100156B68(&qword_1003FD098);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

BOOL sub_1002A0920( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = 0LL;
  uint64_t v9 = 0LL;
  v16[0] = a1;
  v16[1] = a2;
  v16[2] = a3;
  v16[3] = a4;
  v15[0] = a5;
  v15[1] = a6;
  _OWORD v15[2] = a7;
  v15[3] = a8;
  do
  {
    if (v9 == 32)
    {
      int v10 = 0;
      uint64_t v11 = 32LL;
    }

    else
    {
      int v10 = *((unsigned __int8 *)v16 + v9);
      uint64_t v11 = v9 + 1;
    }

    BOOL result = v8 == 32;
    if (v8 == 32)
    {
      int v13 = 0;
      uint64_t v14 = 32LL;
      if (v9 == 32) {
        return result;
      }
    }

    else
    {
      int v13 = *((unsigned __int8 *)v15 + v8);
      uint64_t v14 = v8 + 1;
      if (v9 == 32) {
        return result;
      }
    }

    BOOL result = 0LL;
    if (v8 == 32) {
      break;
    }
    uint64_t v8 = v14;
    uint64_t v9 = v11;
  }

  while (v10 == v13);
  return result;
}

uint64_t sub_1002A0A1C()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1002A0A2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10029D7A4(a1, *(void *)(v2 + 16), a2);
}

unint64_t sub_1002A0A38()
{
  unint64_t result = qword_1003FD0D0;
  if (!qword_1003FD0D0)
  {
    unint64_t result = swift_getWitnessTable(&unk_100350C1C, &type metadata for MediaControlIPCServer.Errors);
    atomic_store(result, (unint64_t *)&qword_1003FD0D0);
  }

  return result;
}

uint64_t sub_1002A0A7C(uint64_t a1, uint64_t a2)
{
  return sub_10022808C( &qword_1003FD0D8,  a2,  (uint64_t (*)(uint64_t))type metadata accessor for MediaControlIPCServer.XPCClient,  (uint64_t)&unk_100350DCC);
}

uint64_t type metadata accessor for MediaControlIPCServer.XPCClient()
{
  return objc_opt_self(&OBJC_CLASS____TtCC12mediaremoted21MediaControlIPCServer9XPCClient);
}

unint64_t type metadata accessor for MRDMediaControlIPCServer()
{
  unint64_t result = qword_100404320[0];
  if (!qword_100404320[0])
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___MRDMediaControlIPCServer);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, qword_100404320);
  }

  return result;
}

uint64_t type metadata accessor for MediaControlIPCServer()
{
  return objc_opt_self(&OBJC_CLASS____TtC12mediaremoted21MediaControlIPCServer);
}

ValueMetadata *type metadata accessor for MediaControlIPCServer.Errors()
{
  return &type metadata for MediaControlIPCServer.Errors;
}

__n128 sub_1002A0B38(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  __int128 v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_1002A0B44(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0LL;
  }
}

uint64_t sub_1002A0B64(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + swift_unknownObjectWeakDestroy(v0 + 16) = 0LL;
    *(void *)(result + 24) = 0LL;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0LL;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }

  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }

  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for audit_token_t()
{
  if (!qword_1003FD398)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata(0LL, &unk_1003ACD00);
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1003FD398);
    }
  }

uint64_t _s12mediaremoted21MediaControlIPCServerC6ErrorsOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_1002A0C30 + 4 * byte_100350C15[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1002A0C64 + 4 * asc_100350C10[v4]))();
}

uint64_t sub_1002A0C64(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002A0C6C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x1002A0C74LL);
  }
  return result;
}

uint64_t sub_1002A0C80(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x1002A0C88LL);
  }
  *(_BYTE *)__n128 result = a2 + 1;
  return result;
}

uint64_t sub_1002A0C8C(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002A0C94(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MediaControlIPCServer.Errors.CodingKeys()
{
  return &type metadata for MediaControlIPCServer.Errors.CodingKeys;
}

ValueMetadata *type metadata accessor for MediaControlIPCServer.Errors.ValidationFailedCodingKeys()
{
  return &type metadata for MediaControlIPCServer.Errors.ValidationFailedCodingKeys;
}

ValueMetadata *type metadata accessor for MediaControlIPCServer.Errors.MalformedMessageCodingKeys()
{
  return &type metadata for MediaControlIPCServer.Errors.MalformedMessageCodingKeys;
}

unint64_t sub_1002A0CD4()
{
  unint64_t result = qword_100404630[0];
  if (!qword_100404630[0])
  {
    unint64_t result = swift_getWitnessTable(&unk_100350FFC, &type metadata for MediaControlIPCServer.Errors.CodingKeys);
    atomic_store(result, qword_100404630);
  }

  return result;
}

unint64_t sub_1002A0D1C()
{
  unint64_t result = qword_100404740;
  if (!qword_100404740)
  {
    unint64_t result = swift_getWitnessTable( &unk_100350F1C,  &type metadata for MediaControlIPCServer.Errors.ValidationFailedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100404740);
  }

  return result;
}

unint64_t sub_1002A0D64()
{
  unint64_t result = qword_100404748[0];
  if (!qword_100404748[0])
  {
    unint64_t result = swift_getWitnessTable( &unk_100350F44,  &type metadata for MediaControlIPCServer.Errors.ValidationFailedCodingKeys);
    atomic_store(result, qword_100404748);
  }

  return result;
}

unint64_t sub_1002A0DAC()
{
  unint64_t result = qword_1004047D0;
  if (!qword_1004047D0)
  {
    unint64_t result = swift_getWitnessTable( &unk_100350ECC,  &type metadata for MediaControlIPCServer.Errors.MalformedMessageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1004047D0);
  }

  return result;
}

unint64_t sub_1002A0DF4()
{
  unint64_t result = qword_1004047D8[0];
  if (!qword_1004047D8[0])
  {
    unint64_t result = swift_getWitnessTable( &unk_100350EF4,  &type metadata for MediaControlIPCServer.Errors.MalformedMessageCodingKeys);
    atomic_store(result, qword_1004047D8);
  }

  return result;
}

unint64_t sub_1002A0E3C()
{
  unint64_t result = qword_100404860;
  if (!qword_100404860)
  {
    unint64_t result = swift_getWitnessTable(&unk_100350F6C, &type metadata for MediaControlIPCServer.Errors.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100404860);
  }

  return result;
}

unint64_t sub_1002A0E84()
{
  unint64_t result = qword_100404868[0];
  if (!qword_100404868[0])
  {
    unint64_t result = swift_getWitnessTable(&unk_100350F94, &type metadata for MediaControlIPCServer.Errors.CodingKeys);
    atomic_store(result, qword_100404868);
  }

  return result;
}

unint64_t sub_1002A0EC8()
{
  unint64_t result = qword_1003FD400;
  if (!qword_1003FD400)
  {
    unint64_t result = swift_getWitnessTable(&unk_100350C84, &type metadata for MediaControlIPCServer.Errors);
    atomic_store(result, (unint64_t *)&qword_1003FD400);
  }

  return result;
}

uint64_t sub_1002A0F0C()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

void sub_1002A0F30()
{
  __int16 v1 = *(void **)(v0 + 16);
  if (v1)
  {
    if (qword_100403E80 != -1) {
      swift_once(&qword_100403E80, sub_10029CF40);
    }
    swift_beginAccess(&qword_100405C98, v5, 0LL, 0LL);
    uint64_t v2 = qword_100405C98;
    swift_retain(qword_100405C98);
    uint64_t v3 = sub_10029B004();
    swift_release(v2);
    sub_10019E80C();
    swift_release(v3);
    NSString v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v1 setMediaControlDiagnostic:v4];
  }

  else
  {
    __break(1u);
  }

uint64_t sub_1002A100C()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_1002A101C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1002A102C(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_1002A10A8()
{
  __int16 v1 = (uint64_t *)(v0 + OBJC_IVAR___MRDRouteRecommendationDemotionContext_primaryBundleIdentifier);
  swift_beginAccess(v0 + OBJC_IVAR___MRDRouteRecommendationDemotionContext_primaryBundleIdentifier, v4, 0LL, 0LL);
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain(v1[1]);
  return v2;
}

uint64_t sub_1002A1164(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + OBJC_IVAR___MRDRouteRecommendationDemotionContext_primaryBundleIdentifier);
  swift_beginAccess(v5, v8, 1LL, 0LL);
  uint64_t v6 = v5[1];
  *uint64_t v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease(v6);
}

uint64_t (*sub_1002A11C0(uint64_t a1))(void)
{
  return j_j__swift_endAccess;
}

uint64_t sub_1002A1248()
{
  uint64_t v1 = v0 + OBJC_IVAR___MRDRouteRecommendationDemotionContext_recommendationType;
  swift_beginAccess(v0 + OBJC_IVAR___MRDRouteRecommendationDemotionContext_recommendationType, v3, 0LL, 0LL);
  return *(void *)v1;
}

uint64_t sub_1002A12D4(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR___MRDRouteRecommendationDemotionContext_recommendationType);
  uint64_t result = swift_beginAccess(v3, v5, 1LL, 0LL);
  void *v3 = a1;
  return result;
}

uint64_t (*sub_1002A131C(uint64_t a1))(void)
{
  return j_j__swift_endAccess;
}

uint64_t sub_1002A13A4()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___MRDRouteRecommendationDemotionContext_isASELocal);
  swift_beginAccess(v0 + OBJC_IVAR___MRDRouteRecommendationDemotionContext_isASELocal, v3, 0LL, 0LL);
  return *v1;
}

uint64_t sub_1002A1430(char a1)
{
  uint64_t v3 = (_BYTE *)(v1 + OBJC_IVAR___MRDRouteRecommendationDemotionContext_isASELocal);
  uint64_t result = swift_beginAccess(v3, v5, 1LL, 0LL);
  _BYTE *v3 = a1;
  return result;
}

uint64_t (*sub_1002A1478(uint64_t a1))(void)
{
  return j_j__swift_endAccess;
}

uint64_t sub_1002A1500()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___MRDRouteRecommendationDemotionContext_localOutputContextHasAirPlay);
  swift_beginAccess(v0 + OBJC_IVAR___MRDRouteRecommendationDemotionContext_localOutputContextHasAirPlay, v3, 0LL, 0LL);
  return *v1;
}

uint64_t sub_1002A158C(char a1)
{
  uint64_t v3 = (_BYTE *)(v1 + OBJC_IVAR___MRDRouteRecommendationDemotionContext_localOutputContextHasAirPlay);
  uint64_t result = swift_beginAccess(v3, v5, 1LL, 0LL);
  _BYTE *v3 = a1;
  return result;
}

uint64_t (*sub_1002A15D4(uint64_t a1))(void)
{
  return j__swift_endAccess;
}

uint64_t sub_1002A165C()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___MRDRouteRecommendationDemotionContext_isSourceEndpointPlaying);
  swift_beginAccess(v0 + OBJC_IVAR___MRDRouteRecommendationDemotionContext_isSourceEndpointPlaying, v3, 0LL, 0LL);
  return *v1;
}

uint64_t sub_1002A16E8(char a1)
{
  uint64_t v3 = (_BYTE *)(v1 + OBJC_IVAR___MRDRouteRecommendationDemotionContext_isSourceEndpointPlaying);
  uint64_t result = swift_beginAccess(v3, v5, 1LL, 0LL);
  _BYTE *v3 = a1;
  return result;
}

uint64_t (*sub_1002A1730(uint64_t a1))(void)
{
  return j_j__swift_endAccess;
}

uint64_t sub_1002A17B8()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___MRDRouteRecommendationDemotionContext_isTargetEndpointPlaying);
  swift_beginAccess(v0 + OBJC_IVAR___MRDRouteRecommendationDemotionContext_isTargetEndpointPlaying, v3, 0LL, 0LL);
  return *v1;
}

uint64_t sub_1002A1844(char a1)
{
  uint64_t v3 = (_BYTE *)(v1 + OBJC_IVAR___MRDRouteRecommendationDemotionContext_isTargetEndpointPlaying);
  uint64_t result = swift_beginAccess(v3, v5, 1LL, 0LL);
  _BYTE *v3 = a1;
  return result;
}

uint64_t (*sub_1002A188C(uint64_t a1))(void)
{
  return j_j__swift_endAccess;
}

uint64_t sub_1002A1948()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR___MRDRouteRecommendationDemotionContext_targetNowPlayingBundleIdentifier);
  swift_beginAccess( v0 + OBJC_IVAR___MRDRouteRecommendationDemotionContext_targetNowPlayingBundleIdentifier,  v4,  0LL,  0LL);
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain(v1[1]);
  return v2;
}

uint64_t sub_1002A1A14(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + OBJC_IVAR___MRDRouteRecommendationDemotionContext_targetNowPlayingBundleIdentifier);
  swift_beginAccess(v5, v8, 1LL, 0LL);
  uint64_t v6 = v5[1];
  *uint64_t v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease(v6);
}

uint64_t (*sub_1002A1A70(uint64_t a1))(void)
{
  return j_j__swift_endAccess;
}

uint64_t sub_1002A1AB4()
{
  uint64_t v1 = (unsigned __int8 *)(v0
                         + OBJC_IVAR___MRDRouteRecommendationDemotionContext_targetEndpointContainsDiscoverableGroupLeader);
  swift_beginAccess( v0 + OBJC_IVAR___MRDRouteRecommendationDemotionContext_targetEndpointContainsDiscoverableGroupLeader,  v3,  0LL,  0LL);
  return *v1;
}

uint64_t sub_1002A1AF8(char a1)
{
  uint64_t v3 = (_BYTE *)(v1 + OBJC_IVAR___MRDRouteRecommendationDemotionContext_targetEndpointContainsDiscoverableGroupLeader);
  uint64_t result = swift_beginAccess(v3, v5, 1LL, 0LL);
  _BYTE *v3 = a1;
  return result;
}

uint64_t (*sub_1002A1B40(uint64_t a1))(void)
{
  return j_j__swift_endAccess;
}

id sub_1002A1B84( uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5, char a6, char a7, uint64_t a8, uint64_t a9, char a10)
{
  unint64_t v18 = objc_allocWithZone(v10);
  uint64_t v19 = &v18[OBJC_IVAR___MRDRouteRecommendationDemotionContext_targetNowPlayingBundleIdentifier];
  *uint64_t v19 = 0LL;
  v19[1] = 0LL;
  uint64_t v20 = &v18[OBJC_IVAR___MRDRouteRecommendationDemotionContext_primaryBundleIdentifier];
  void *v20 = a1;
  v20[1] = a2;
  *(void *)&v18[OBJC_IVAR___MRDRouteRecommendationDemotionContext_recommendationType] = a3;
  v18[OBJC_IVAR___MRDRouteRecommendationDemotionContext_isASELocal] = a4;
  v18[OBJC_IVAR___MRDRouteRecommendationDemotionContext_localOutputContextHasAirPlay] = a5;
  v18[OBJC_IVAR___MRDRouteRecommendationDemotionContext_isSourceEndpointPlaying] = a6;
  v18[OBJC_IVAR___MRDRouteRecommendationDemotionContext_isTargetEndpointPlaying] = a7;
  swift_beginAccess(v19, v26, 1LL, 0LL);
  uint64_t v21 = v19[1];
  *uint64_t v19 = a8;
  v19[1] = a9;
  uint64_t v22 = v18;
  swift_bridgeObjectRelease(v21);
  v22[OBJC_IVAR___MRDRouteRecommendationDemotionContext_targetEndpointContainsDiscoverableGroupLeader] = a10;

  v25.receiver = v22;
  v25.super_class = v10;
  return objc_msgSendSuper2(&v25, "init");
}

id sub_1002A1CB8( uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5, char a6, char a7, uint64_t a8, uint64_t a9, char a10)
{
  unint64_t v12 = &v10[OBJC_IVAR___MRDRouteRecommendationDemotionContext_targetNowPlayingBundleIdentifier];
  *unint64_t v12 = 0LL;
  v12[1] = 0LL;
  int v13 = &v10[OBJC_IVAR___MRDRouteRecommendationDemotionContext_primaryBundleIdentifier];
  *int v13 = a1;
  v13[1] = a2;
  *(void *)&v10[OBJC_IVAR___MRDRouteRecommendationDemotionContext_recommendationType] = a3;
  v10[OBJC_IVAR___MRDRouteRecommendationDemotionContext_isASELocal] = a4;
  v10[OBJC_IVAR___MRDRouteRecommendationDemotionContext_localOutputContextHasAirPlay] = a5;
  v10[OBJC_IVAR___MRDRouteRecommendationDemotionContext_isSourceEndpointPlaying] = a6;
  v10[OBJC_IVAR___MRDRouteRecommendationDemotionContext_isTargetEndpointPlaying] = a7;
  swift_beginAccess(v12, v17, 1LL, 0LL);
  *unint64_t v12 = a8;
  v12[1] = a9;
  uint64_t v14 = v10;
  swift_bridgeObjectRelease();
  v14[OBJC_IVAR___MRDRouteRecommendationDemotionContext_targetEndpointContainsDiscoverableGroupLeader] = a10;

  v16.receiver = v14;
  v16.super_class = (Class)type metadata accessor for RouteRecommendationDemotionContext();
  return objc_msgSendSuper2(&v16, "init");
}

uint64_t type metadata accessor for RouteRecommendationDemotionContext()
{
  return objc_opt_self(&OBJC_CLASS___MRDRouteRecommendationDemotionContext);
}

id sub_1002A1EA8()
{
  return sub_1002142B8(type metadata accessor for RouteRecommendationDemotionContext);
}

id sub_1002A1F60()
{
  uint64_t v0 = (objc_class *)type metadata accessor for RouteRecommendationDemotionPolicy();
  uint64_t v1 = objc_allocWithZone(v0);
  v1[OBJC_IVAR___MRDRouteRecommendationDemotionPolicy_shouldDemote] = 0;
  uint64_t v2 = &v1[OBJC_IVAR___MRDRouteRecommendationDemotionPolicy_reason];
  *uint64_t v2 = 0LL;
  v2[1] = 0LL;
  v4.receiver = v1;
  v4.super_class = v0;
  id result = objc_msgSendSuper2(&v4, "init");
  qword_100405CA0 = (uint64_t)result;
  return result;
}

id sub_1002A1FC4(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = objc_allocWithZone(v3);
  v7[OBJC_IVAR___MRDRouteRecommendationDemotionPolicy_shouldDemote] = a1;
  uint64_t v8 = &v7[OBJC_IVAR___MRDRouteRecommendationDemotionPolicy_reason];
  *uint64_t v8 = a2;
  v8[1] = a3;
  v10.receiver = v7;
  v10.super_class = v3;
  return objc_msgSendSuper2(&v10, "init");
}

uint64_t type metadata accessor for RouteRecommendationDemotionPolicy()
{
  return objc_opt_self(&OBJC_CLASS___MRDRouteRecommendationDemotionPolicy);
}

id sub_1002A207C()
{
  return sub_1002142B8(type metadata accessor for RouteRecommendationDemotionPolicy);
}

id sub_1002A209C(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  sub_100216A8C((uint64_t)a1, (uint64_t)v3 + OBJC_IVAR___MRDRouteRecommendationDemotionController_appInFocusMonitor);
  v6.receiver = v3;
  v6.super_class = v1;
  id v4 = objc_msgSendSuper2(&v6, "init");
  sub_1001607E0(a1);
  return v4;
}

uint64_t type metadata accessor for RouteRecommendationDemotionController()
{
  return objc_opt_self(&OBJC_CLASS___MRDRouteRecommendationDemotionController);
}

id sub_1002A212C(void *a1)
{
  uint64_t v2 = v1;
  if (((*(uint64_t (**)(void))((swift_isaMask & *a1) + 0xC0LL))() & 1) == 0)
  {
    uint64_t v8 = (objc_class *)type metadata accessor for RouteRecommendationDemotionPolicy();
    uint64_t v9 = objc_allocWithZone(v8);
    v9[OBJC_IVAR___MRDRouteRecommendationDemotionPolicy_shouldDemote] = 1;
    objc_super v10 = &v9[OBJC_IVAR___MRDRouteRecommendationDemotionPolicy_reason];
    *objc_super v10 = 0xD000000000000010LL;
    v10[1] = 0x8000000100340BE0LL;
    return objc_msgSendSuper2( &v39,  "init",  v34.receiver,  v34.super_class,  v35.receiver,  v35.super_class,  v36.receiver,  v36.super_class,  v37.receiver,  v37.super_class,  v38.receiver,  v38.super_class,  v9,  v8);
  }

  if (((*(uint64_t (**)(void))((swift_isaMask & *a1) + 0xD8LL))() & 1) != 0)
  {
    id v4 = (objc_class *)type metadata accessor for RouteRecommendationDemotionPolicy();
    uint64_t v5 = objc_allocWithZone(v4);
    v5[OBJC_IVAR___MRDRouteRecommendationDemotionPolicy_shouldDemote] = 1;
    objc_super v6 = &v5[OBJC_IVAR___MRDRouteRecommendationDemotionPolicy_reason];
    *objc_super v6 = 0xD00000000000001CLL;
    v6[1] = 0x8000000100340C00LL;
    return objc_msgSendSuper2( &v34,  "init",  v5,  v4,  v35.receiver,  v35.super_class,  v36.receiver,  v36.super_class,  v37.receiver,  v37.super_class,  v38.receiver,  v38.super_class,  v39.receiver,  v39.super_class);
  }

  if (((*(uint64_t (**)(void))((swift_isaMask & *a1) + 0xF0LL))() & 1) != 0)
  {
    uint64_t v11 = (objc_class *)type metadata accessor for RouteRecommendationDemotionPolicy();
    unint64_t v12 = objc_allocWithZone(v11);
    v12[OBJC_IVAR___MRDRouteRecommendationDemotionPolicy_shouldDemote] = 1;
    int v13 = &v12[OBJC_IVAR___MRDRouteRecommendationDemotionPolicy_reason];
    *int v13 = 0xD000000000000011LL;
    v13[1] = 0x8000000100340CD0LL;
    return objc_msgSendSuper2( &v35,  "init",  v34.receiver,  v34.super_class,  v12,  v11,  v36.receiver,  v36.super_class,  v37.receiver,  v37.super_class,  v38.receiver,  v38.super_class,  v39.receiver,  v39.super_class);
  }

  if (((*(uint64_t (**)(void))((swift_isaMask & *a1) + 0x138LL))() & 1) == 0)
  {
    uint64_t v22 = (objc_class *)type metadata accessor for RouteRecommendationDemotionPolicy();
    uint64_t v23 = objc_allocWithZone(v22);
    v23[OBJC_IVAR___MRDRouteRecommendationDemotionPolicy_shouldDemote] = 1;
    uint64_t v24 = &v23[OBJC_IVAR___MRDRouteRecommendationDemotionPolicy_reason];
    void *v24 = 0xD00000000000001BLL;
    v24[1] = 0x8000000100340C20LL;
    return objc_msgSendSuper2( &v38,  "init",  v34.receiver,  v34.super_class,  v35.receiver,  v35.super_class,  v36.receiver,  v36.super_class,  v37.receiver,  v37.super_class,  v23,  v22,  v39.receiver,  v39.super_class);
  }

  uint64_t v14 = *(uint64_t (**)(void))((swift_isaMask & *a1) + 0x90LL);
  uint64_t v15 = v14();
  uint64_t v17 = v16;
  uint64_t v18 = (*(uint64_t (**)(void))((swift_isaMask & *a1) + 0x120LL))();
  if (!v19)
  {
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }

  if (v15 == v18 && v19 == v17)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }

  char v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v17, v18, v19, 0LL);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v21 & 1) == 0)
  {
LABEL_19:
    objc_super v25 = (objc_class *)type metadata accessor for RouteRecommendationDemotionPolicy();
    unint64_t v26 = objc_allocWithZone(v25);
    v26[OBJC_IVAR___MRDRouteRecommendationDemotionPolicy_shouldDemote] = 1;
    BOOL v27 = &v26[OBJC_IVAR___MRDRouteRecommendationDemotionPolicy_reason];
    *BOOL v27 = 0xD000000000000042LL;
    v27[1] = 0x8000000100340C40LL;
    return objc_msgSendSuper2( &v37,  "init",  v34.receiver,  v34.super_class,  v35.receiver,  v35.super_class,  v36.receiver,  v36.super_class,  v26,  v25,  v38.receiver,  v38.super_class,  v39.receiver,  v39.super_class);
  }

id sub_1002A25C4()
{
  return sub_1002142B8(type metadata accessor for RouteRecommendationDemotionController);
}

ValueMetadata *type metadata accessor for RouteRecommendationDemotionController.Reason()
{
  return &type metadata for RouteRecommendationDemotionController.Reason;
}

void type metadata accessor for MRRouteRecommendationType()
{
  if (!qword_1003FD500)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata(0LL, &unk_1003ACF98);
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_1003FD500);
    }
  }

void sub_1002A2644(uint64_t a1)
{
}

uint64_t *sub_1002A265C()
{
  if (qword_100404980 != -1) {
    swift_once(&qword_100404980, sub_1002A2644);
  }
  return &qword_100405CA8;
}

void sub_1002A269C(uint64_t a1)
{
}

void sub_1002A26B4(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3, void *a4)
{
  objc_super v6 = (void *)a2();
  if (v6)
  {
    uint64_t v7 = v6;
    id v8 = v6;
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
    uint64_t v11 = v10;

    *a3 = v9;
    *a4 = v11;
  }

  else
  {
    __break(1u);
  }

uint64_t *sub_1002A2718()
{
  if (qword_100404988 != -1) {
    swift_once(&qword_100404988, sub_1002A269C);
  }
  return &qword_100405CB8;
}

uint64_t sub_1002A2758(uint64_t a1, uint64_t a2)
{
  return sub_1002A2770(a1, a2, (uint64_t (*)(void))&_MRMediaRemoteApplicationIsSystemMediaApplication);
}

uint64_t sub_1002A2764(uint64_t a1, uint64_t a2)
{
  return sub_1002A2770(a1, a2, (uint64_t (*)(void))&_MRMediaRemoteApplicationIsSystemPodcastApplication);
}

uint64_t sub_1002A2770(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  NSString v4 = String._bridgeToObjectiveC()();
  uint64_t v5 = a3();

  return v5;
}

uint64_t sub_1002A27A4(uint64_t a1)
{
  NSString v2 = String._bridgeToObjectiveC()();
  int IsSystemMediaApplication = MRMediaRemoteApplicationIsSystemMediaApplication(v2);

  if (IsSystemMediaApplication)
  {
    if (qword_100404980 != -1) {
      swift_once(&qword_100404980, sub_1002A2644);
    }
    NSString v4 = &qword_100405CA8;
LABEL_9:
    swift_beginAccess(v4, v8, 0LL, 0LL);
    a1 = *v4;
    goto LABEL_10;
  }

  NSString v5 = String._bridgeToObjectiveC()();
  int IsSystemPodcastApplication = MRMediaRemoteApplicationIsSystemPodcastApplication(v5);

  if (IsSystemPodcastApplication)
  {
    if (qword_100404988 != -1) {
      swift_once(&qword_100404988, sub_1002A269C);
    }
    NSString v4 = &qword_100405CB8;
    goto LABEL_9;
  }

void *sub_1002A2898()
{
  return &unk_1003FD508;
}

void *sub_1002A28A4()
{
  return &unk_1003FD518;
}

void *sub_1002A28B0()
{
  return &unk_1003FD528;
}

void *sub_1002A28BC()
{
  return &unk_1003FD538;
}

void *sub_1002A28C8()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___MRDRouteRecommendationSuppressionContext_localEndpoint);
  swift_beginAccess(v0 + OBJC_IVAR___MRDRouteRecommendationSuppressionContext_localEndpoint, v5, 0LL, 0LL);
  NSString v2 = *v1;
  id v3 = v2;
  return v2;
}

void sub_1002A2914(void *a1)
{
}

uint64_t (*sub_1002A2920(uint64_t a1))(void)
{
  return j__swift_endAccess;
}

void *sub_1002A2964()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___MRDRouteRecommendationSuppressionContext_activeSystemEndpoint);
  swift_beginAccess(v0 + OBJC_IVAR___MRDRouteRecommendationSuppressionContext_activeSystemEndpoint, v5, 0LL, 0LL);
  NSString v2 = *v1;
  id v3 = v2;
  return v2;
}

void sub_1002A29B0(void *a1)
{
}

void sub_1002A29BC(void *a1, void *a2)
{
  NSString v4 = (void **)(v2 + *a2);
  swift_beginAccess(v4, v6, 1LL, 0LL);
  NSString v5 = *v4;
  *NSString v4 = a1;
}

uint64_t (*sub_1002A2A08(uint64_t a1))(void)
{
  return j_j__swift_endAccess;
}

uint64_t sub_1002A2A4C()
{
  uint64_t v1 = (unsigned __int8 *)(v0
                         + OBJC_IVAR___MRDRouteRecommendationSuppressionContext_eligibleToShowRecommendationsOutsideApp);
  swift_beginAccess( v0 + OBJC_IVAR___MRDRouteRecommendationSuppressionContext_eligibleToShowRecommendationsOutsideApp,  v3,  0LL,  0LL);
  return *v1;
}

uint64_t sub_1002A2A90(char a1)
{
  id v3 = (_BYTE *)(v1 + OBJC_IVAR___MRDRouteRecommendationSuppressionContext_eligibleToShowRecommendationsOutsideApp);
  uint64_t result = swift_beginAccess(v3, v5, 1LL, 0LL);
  _BYTE *v3 = a1;
  return result;
}

uint64_t (*sub_1002A2AD8(uint64_t a1))(void)
{
  return j_j__swift_endAccess;
}

uint64_t sub_1002A2B1C()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___MRDRouteRecommendationSuppressionContext_eligibleToShowDeltaBanners);
  swift_beginAccess(v0 + OBJC_IVAR___MRDRouteRecommendationSuppressionContext_eligibleToShowDeltaBanners, v3, 0LL, 0LL);
  return *v1;
}

uint64_t sub_1002A2B60(char a1)
{
  id v3 = (_BYTE *)(v1 + OBJC_IVAR___MRDRouteRecommendationSuppressionContext_eligibleToShowDeltaBanners);
  uint64_t result = swift_beginAccess(v3, v5, 1LL, 0LL);
  _BYTE *v3 = a1;
  return result;
}

uint64_t (*sub_1002A2BA8(uint64_t a1))(void)
{
  return j_j__swift_endAccess;
}

id sub_1002A2BEC(void *a1, void *a2, char a3, char a4)
{
  uint64_t v9 = (char *)objc_allocWithZone(v4);
  uint64_t v10 = (void **)&v9[OBJC_IVAR___MRDRouteRecommendationSuppressionContext_localEndpoint];
  *uint64_t v10 = 0LL;
  uint64_t v11 = (void **)&v9[OBJC_IVAR___MRDRouteRecommendationSuppressionContext_activeSystemEndpoint];
  *(void *)&v9[OBJC_IVAR___MRDRouteRecommendationSuppressionContext_activeSystemEndpoint] = 0LL;
  swift_beginAccess(v10, v21, 1LL, 0LL);
  unint64_t v12 = *v10;
  *uint64_t v10 = a1;
  int v13 = v9;
  id v14 = a1;

  swift_beginAccess(v11, v20, 1LL, 0LL);
  uint64_t v15 = *v11;
  *uint64_t v11 = a2;
  id v16 = a2;

  v13[OBJC_IVAR___MRDRouteRecommendationSuppressionContext_eligibleToShowRecommendationsOutsideApp] = a3;
  v13[OBJC_IVAR___MRDRouteRecommendationSuppressionContext_eligibleToShowDeltaBanners] = a4;

  v19.receiver = v13;
  v19.super_class = v4;
  id v17 = objc_msgSendSuper2(&v19, "init");

  return v17;
}

id sub_1002A2DA8()
{
  return sub_1002142B8(type metadata accessor for RouteRecommendationSuppressionContext);
}

id sub_1002A2E58()
{
  uint64_t v0 = (objc_class *)type metadata accessor for RouteRecommendationSuppressionPolicy();
  uint64_t v1 = objc_allocWithZone(v0);
  v1[OBJC_IVAR___MRDRouteRecommendationSuppressionPolicy_shouldSuppress] = 0;
  uint64_t v2 = &v1[OBJC_IVAR___MRDRouteRecommendationSuppressionPolicy_reason];
  *uint64_t v2 = 0LL;
  v2[1] = 0LL;
  v4.receiver = v1;
  v4.super_class = v0;
  id result = objc_msgSendSuper2(&v4, "init");
  qword_100405CC8 = (uint64_t)result;
  return result;
}

id sub_1002A2EBC(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = objc_allocWithZone(v3);
  v7[OBJC_IVAR___MRDRouteRecommendationSuppressionPolicy_shouldSuppress] = a1;
  id v8 = &v7[OBJC_IVAR___MRDRouteRecommendationSuppressionPolicy_reason];
  *id v8 = a2;
  v8[1] = a3;
  v10.receiver = v7;
  v10.super_class = v3;
  return objc_msgSendSuper2(&v10, "init");
}

uint64_t *sub_1002A2F28()
{
  if (qword_100404990 != -1) {
    swift_once(&qword_100404990, sub_1002A2E58);
  }
  return &qword_100405CC8;
}

id sub_1002A2F68(uint64_t a1, uint64_t a2)
{
  objc_super v4 = (objc_class *)type metadata accessor for RouteRecommendationSuppressionPolicy();
  NSString v5 = objc_allocWithZone(v4);
  v5[OBJC_IVAR___MRDRouteRecommendationSuppressionPolicy_shouldSuppress] = 1;
  objc_super v6 = &v5[OBJC_IVAR___MRDRouteRecommendationSuppressionPolicy_reason];
  *objc_super v6 = a1;
  v6[1] = a2;
  v8.receiver = v5;
  v8.super_class = v4;
  swift_bridgeObjectRetain();
  return objc_msgSendSuper2(&v8, "init");
}

id sub_1002A3010()
{
  return sub_1002142B8(type metadata accessor for RouteRecommendationSuppressionPolicy);
}

void *sub_1002A3030()
{
  return &unk_1003ACFC8;
}

const char *sub_1002A303C()
{
  return "ASE is playing";
}

unint64_t sub_1002A3048(uint64_t a1, void *a2)
{
  v4._uint64_t countAndFlagsBits = a1;
  v4._object = a2;
  String.append(_:)(v4);
  v5._uint64_t countAndFlagsBits = 0x65636976656420LL;
  v5._object = (void *)0xE700000000000000LL;
  String.append(_:)(v5);
  return 0xD000000000000024LL;
}

void *sub_1002A30E0()
{
  return &unk_1003ACFD8;
}

id sub_1002A30EC(void *a1, void *a2, char a3, char a4)
{
  uint64_t v9 = (void **)&v4[OBJC_IVAR___MRDRouteRecommendationSuppressionContext_localEndpoint];
  *uint64_t v9 = 0LL;
  objc_super v10 = (void **)&v4[OBJC_IVAR___MRDRouteRecommendationSuppressionContext_activeSystemEndpoint];
  *(void *)&v4[OBJC_IVAR___MRDRouteRecommendationSuppressionContext_activeSystemEndpoint] = 0LL;
  swift_beginAccess(v9, v19, 1LL, 0LL);
  uint64_t v11 = *v9;
  *uint64_t v9 = a1;
  unint64_t v12 = v4;
  id v13 = a1;

  swift_beginAccess(v10, v18, 1LL, 0LL);
  id v14 = *v10;
  *objc_super v10 = a2;
  id v15 = a2;

  v12[OBJC_IVAR___MRDRouteRecommendationSuppressionContext_eligibleToShowRecommendationsOutsideApp] = a3;
  v12[OBJC_IVAR___MRDRouteRecommendationSuppressionContext_eligibleToShowDeltaBanners] = a4;

  v17.receiver = v12;
  v17.super_class = (Class)type metadata accessor for RouteRecommendationSuppressionContext();
  return objc_msgSendSuper2(&v17, "init");
}

uint64_t type metadata accessor for RouteRecommendationSuppressionContext()
{
  return objc_opt_self(&OBJC_CLASS___MRDRouteRecommendationSuppressionContext);
}

uint64_t type metadata accessor for RouteRecommendationSuppressionPolicy()
{
  return objc_opt_self(&OBJC_CLASS___MRDRouteRecommendationSuppressionPolicy);
}

ValueMetadata *type metadata accessor for RouteRecommendationSuppressionReason()
{
  return &type metadata for RouteRecommendationSuppressionReason;
}

id sub_1002A3228( uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14 = InvitationRequest.__allocating_init(invitationData:displayName:userInfo:)( a1,  a2,  0LL,  0xE000000000000000LL,  0LL,  0xF000000000000000LL);
  uint64_t v15 = dispatch thunk of InvitationRequest.invitationUserInfo.getter();
  if (v16 >> 60 == 15)
  {
    sub_1001608B8(a1, a2);
    swift_release(v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_7:
    uint64_t ObjectType = swift_getObjectType(v43);
    swift_deallocPartialClassInstance(v43, ObjectType, 8LL);
    return 0LL;
  }

  uint64_t v17 = v15;
  unint64_t v18 = v16;
  uint64_t v42 = v14;
  sub_100160874(v15, v16);
  unsigned __int8 v19 = sub_10016F098(v17, v18);
  unsigned __int8 v20 = sub_10022AA88(v19);
  if (!v20)
  {
    sub_1001608B8(a1, a2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100171C30(v17, v18);
    swift_release(v14);
    goto LABEL_7;
  }

  unsigned __int8 v21 = v20;
  uint64_t v40 = v17;
  unint64_t v41 = v18;
  dispatch thunk of InvitationRequest.invitationDisplayName.getter();
  id v22 = objc_allocWithZone(&OBJC_CLASS___MRGroupSessionHostInfo);
  NSString v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v24 = [v22 initWithRouteType:v21 displayName:v23];

  v25.super.Class isa = Data._bridgeToObjectiveC()().super.isa;
  if (a4)
  {
    NSString v26 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }

  else
  {
    NSString v26 = 0LL;
  }

  if (!a6)
  {
    NSString v30 = 0LL;
    if (a8) {
      goto LABEL_12;
    }
LABEL_14:
    NSString v31 = 0LL;
    goto LABEL_15;
  }

  NSString v30 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (!a8) {
    goto LABEL_14;
  }
LABEL_12:
  NSString v31 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
LABEL_15:
  id v32 = [objc_allocWithZone(NSNumber) initWithInteger:a9];
  uint64_t v33 = v24;
  id v34 = [v43 initWithHostInfo:v24 invitationData:v25.super.isa sharedSecret:v26 sessionIdentifier:v30 equivalentMediaIdentifier:v31 version:v32];

  objc_super v35 = (void *)objc_opt_self(&OBJC_CLASS___MRDMusicUserStateCenter);
  id v28 = v34;
  id v36 = [v35 sharedCenter];
  id v37 = [v36 localActiveUserState];

  if (v37
    && (id v38 = [v37 storefrontCountryCode], v37, v38))
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v38);

    NSString v39 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v28 setStorefrontCountryCode:v39];
    sub_1001608B8(a1, a2);
    swift_release(v42);
    sub_100171C30(v40, v41);
  }

  else
  {

    swift_release(v42);
    sub_1001608B8(a1, a2);

    sub_100171C30(v40, v41);
  }

  return v28;
}

uint64_t ActivityController.delegate.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___MRDUIActivityController_delegate;
  swift_beginAccess(v0 + OBJC_IVAR___MRDUIActivityController_delegate, v3, 0LL, 0LL);
  return swift_unknownObjectWeakLoadStrong(v1);
}

uint64_t ActivityController.delegate.setter(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR___MRDUIActivityController_delegate;
  swift_beginAccess(v3, v5, 1LL, 0LL);
  swift_unknownObjectWeakAssign(v3, a1);
  return swift_unknownObjectRelease(a1);
}

void (*ActivityController.delegate.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR___MRDUIActivityController_delegate;
  v3[4] = v1;
  v3[5] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33LL, 0LL);
  v3[3] = swift_unknownObjectWeakLoadStrong(v5);
  return sub_1001B33BC;
}

unint64_t ActivityController.currentActivitiesInfo.getter()
{
  return sub_1002A396C((uint64_t)_swiftEmptyArrayStorage);
}

unint64_t sub_1002A396C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2)
  {
    uint64_t v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }

  sub_100156B68(&qword_1003FA018);
  uint64_t v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  uint64_t v4 = (void *)v3;
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v4;
  }

  swift_retain(v3);
  objc_super v6 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v7 = *(v6 - 2);
    uint64_t v8 = *(v6 - 1);
    uint64_t v9 = *v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_10015CAD4(v7, v8);
    if ((v11 & 1) != 0) {
      break;
    }
    *(void *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL) + 64) |= 1LL << result;
    unint64_t v12 = (uint64_t *)(v4[6] + 16 * result);
    *unint64_t v12 = v7;
    v12[1] = v8;
    *(void *)(v4[7] + 8 * result) = v9;
    uint64_t v13 = v4[2];
    BOOL v14 = __OFADD__(v13, 1LL);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4[2] = v15;
    v6 += 3;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }

  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

id ActivityController.contextForActivityIdentifier(_:)()
{
  return MRUIContextUnknown;
}

id ActivityController.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivityController();
  return objc_msgSendSuper2(&v2, "init");
}

uint64_t type metadata accessor for ActivityController()
{
  return objc_opt_self(&OBJC_CLASS___MRDUIActivityController);
}

id ActivityController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivityController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

unint64_t sub_1002A3BD8()
{
  if (*v0) {
    return 0xD000000000000011LL;
  }
  else {
    return 0xD000000000000010LL;
  }
}

uint64_t sub_1002A3C18@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = sub_1002A7294(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1002A3C3C(uint64_t a1)
{
  unint64_t v2 = sub_1002A7664();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002A3C64(uint64_t a1)
{
  unint64_t v2 = sub_1002A7664();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002A3CA8()
{
  return sub_100178610(&OBJC_IVAR___MRIRRouteRecommendationContext_candidateResults);
}

uint64_t sub_1002A3CD0(uint64_t a1)
{
  return sub_1002A5EC0(a1, &OBJC_IVAR___MRIRRouteRecommendationContext_candidateResults);
}

uint64_t (*sub_1002A3CDC(uint64_t a1))(void)
{
  return j_j__swift_endAccess;
}

uint64_t sub_1002A3D2C()
{
  return sub_1002A5C3C(&OBJC_IVAR___MRIRRouteRecommendationContext_contextIdentifier);
}

uint64_t sub_1002A3D44(uint64_t a1, uint64_t a2)
{
  return sub_1002A5CA4(a1, a2, &OBJC_IVAR___MRIRRouteRecommendationContext_contextIdentifier);
}

uint64_t (*sub_1002A3D50(uint64_t a1))(void)
{
  return j_j__swift_endAccess;
}

id sub_1002A3DC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (char *)objc_allocWithZone(v3);
  *(void *)&v7[OBJC_IVAR___MRIRRouteRecommendationContext_candidateResults] = a1;
  uint64_t v8 = &v7[OBJC_IVAR___MRIRRouteRecommendationContext_contextIdentifier];
  *(void *)uint64_t v8 = a2;
  *((void *)v8 + 1) = a3;
  v10.receiver = v7;
  v10.super_class = v3;
  return objc_msgSendSuper2(&v10, "init");
}

void *sub_1002A3ED8(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return sub_1002A3F18(a1);
}

void *sub_1002A3F18(void *a1)
{
  uint64_t v2 = type metadata accessor for UUID(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v34 = sub_100156B68(&qword_1003FD608);
  uint64_t v6 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = a1[3];
  uint64_t v9 = a1[4];
  objc_super v35 = a1;
  char v11 = sub_1001865C4(a1, v10);
  unint64_t v12 = sub_1002A7664();
  id v36 = v36;
  uint64_t v13 = v37;
  dispatch thunk of Decoder.container<A>(keyedBy:)( &type metadata for RouteRecommendationContext.CodingKeys,  &type metadata for RouteRecommendationContext.CodingKeys,  v12,  v10,  v9);
  if (v13)
  {
    unint64_t v18 = v36;
    sub_1001607E0(v35);

    uint64_t v19 = type metadata accessor for RouteRecommendationContext();
    swift_deallocPartialClassInstance(v18, v19, 32LL);
  }

  else
  {
    uint64_t v33 = v5;
    uint64_t v37 = v3;
    uint64_t v14 = v6;
    uint64_t v15 = sub_100156B68(&qword_1003FD618);
    char v41 = 0;
    uint64_t v16 = sub_1002A76C8( &qword_1003FD620,  &qword_1003FD628,  (uint64_t)&unk_100351570,  (uint64_t)&protocol conformance descriptor for <> Set<A>);
    uint64_t v17 = v34;
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v39, v15, &v41, v34, v15, v16);
    unsigned __int8 v21 = v36;
    *(void *)&v36[OBJC_IVAR___MRIRRouteRecommendationContext_candidateResults] = v39;
    LOBYTE(v39) = 1;
    uint64_t v22 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v39, v17);
    if (!v23)
    {
      uint64_t v39 = 760500813LL;
      unint64_t v40 = 0xE400000000000000LL;
      id v24 = v33;
      uint64_t v25 = UUID.init()(v22);
      uint64_t v26 = UUID.uuidString.getter(v25);
      id v28 = v27;
      (*(void (**)(char *, uint64_t))(v37 + 8))(v24, v2);
      v29._uint64_t countAndFlagsBits = v26;
      v29._object = v28;
      String.append(_:)(v29);
      swift_bridgeObjectRelease();
      uint64_t v22 = v39;
      unint64_t v23 = v40;
    }

    NSString v30 = (uint64_t *)&v21[OBJC_IVAR___MRIRRouteRecommendationContext_contextIdentifier];
    *NSString v30 = v22;
    v30[1] = v23;

    NSString v31 = (objc_class *)type metadata accessor for RouteRecommendationContext();
    v38.receiver = v21;
    v38.super_class = v31;
    char v11 = objc_msgSendSuper2(&v38, "init");
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v17);
    sub_1001607E0(v35);
  }

  return v11;
}

uint64_t sub_1002A4204(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100156B68(&qword_1003FD638);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  sub_1001865C4(a1, v9);
  unint64_t v11 = sub_1002A7664();
  uint64_t v12 = dispatch thunk of Encoder.container<A>(keyedBy:)( &type metadata for RouteRecommendationContext.CodingKeys,  &type metadata for RouteRecommendationContext.CodingKeys,  v11,  v9,  v10);
  uint64_t v21 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v3) + 0x60LL))(v12);
  char v20 = 0;
  uint64_t v13 = sub_100156B68(&qword_1003FD618);
  uint64_t v14 = sub_1002A76C8( &qword_1003FD640,  &qword_1003FD648,  (uint64_t)&unk_100351598,  (uint64_t)&protocol conformance descriptor for <> Set<A>);
  KeyedEncodingContainer.encode<A>(_:forKey:)(&v21, &v20, v5, v13, v14);
  uint64_t v15 = swift_bridgeObjectRelease();
  if (v2) {
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
  }
  uint64_t v17 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v3) + 0x78LL))(v15);
  v19[6] = 1;
  KeyedEncodingContainer.encode(_:forKey:)(v17, v18);
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
  return swift_bridgeObjectRelease();
}

id sub_1002A43E4()
{
  return sub_1002142B8(type metadata accessor for RouteRecommendationContext);
}

uint64_t sub_1002A442C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 152))();
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1002A4458()
{
  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0xA0LL))();
}

uint64_t sub_1002A4490(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1002A44D0 + 4 * byte_1003512E0[a1]))( 0x6966697373616C63LL,  0xEE006E6F69746163LL);
}

unint64_t sub_1002A44D0()
{
  return 0xD000000000000019LL;
}

uint64_t sub_1002A4578()
{
  return sub_1002A4490(*v0);
}

uint64_t sub_1002A4580@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = sub_1002A774C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1002A45A4(_BYTE *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_1002A45B0(uint64_t a1)
{
  unint64_t v2 = sub_1002A7B5C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002A45D8(uint64_t a1)
{
  unint64_t v2 = sub_1002A7B5C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002A4644()
{
  uint64_t v1 = v0 + OBJC_IVAR___MRIRRouteRecommendationCandidateResult_classification;
  swift_beginAccess(v0 + OBJC_IVAR___MRIRRouteRecommendationCandidateResult_classification, v3, 0LL, 0LL);
  return *(void *)v1;
}

uint64_t sub_1002A46D0(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR___MRIRRouteRecommendationCandidateResult_classification);
  uint64_t result = swift_beginAccess(v3, v5, 1LL, 0LL);
  void *v3 = a1;
  return result;
}

uint64_t (*sub_1002A4718(uint64_t a1))(void)
{
  return j_j__swift_endAccess;
}

uint64_t sub_1002A4768()
{
  return sub_1002A5C3C(&OBJC_IVAR___MRIRRouteRecommendationCandidateResult_classificationDescription);
}

uint64_t sub_1002A4780(uint64_t a1, uint64_t a2)
{
  return sub_1002A5CA4(a1, a2, &OBJC_IVAR___MRIRRouteRecommendationCandidateResult_classificationDescription);
}

uint64_t (*sub_1002A478C(uint64_t a1))(void)
{
  return j_j__swift_endAccess;
}

id sub_1002A4818()
{
  uint64_t v1 = (id *)(v0 + OBJC_IVAR___MRIRRouteRecommendationCandidateResult_candidate);
  swift_beginAccess(v0 + OBJC_IVAR___MRIRRouteRecommendationCandidateResult_candidate, v3, 0LL, 0LL);
  return *v1;
}

void sub_1002A48B8(void *a1)
{
  uint64_t v3 = (void **)(v1 + OBJC_IVAR___MRIRRouteRecommendationCandidateResult_candidate);
  swift_beginAccess(v3, v5, 1LL, 0LL);
  uint64_t v4 = *v3;
  void *v3 = a1;
}

uint64_t (*sub_1002A4908(uint64_t a1))(void)
{
  return j_j__swift_endAccess;
}

void *sub_1002A4994()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___MRIRRouteRecommendationCandidateResult_sortingHint);
  swift_beginAccess(v0 + OBJC_IVAR___MRIRRouteRecommendationCandidateResult_sortingHint, v5, 0LL, 0LL);
  unint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void sub_1002A4A3C(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR___MRIRRouteRecommendationCandidateResult_sortingHint);
  swift_beginAccess(v3, v5, 1LL, 0LL);
  uint64_t v4 = *v3;
  void *v3 = a1;
}

uint64_t (*sub_1002A4A8C(uint64_t a1))(void)
{
  return j_j__swift_endAccess;
}

uint64_t sub_1002A4B14()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___MRIRRouteRecommendationCandidateResult_isCallToAction);
  swift_beginAccess(v0 + OBJC_IVAR___MRIRRouteRecommendationCandidateResult_isCallToAction, v3, 0LL, 0LL);
  return *v1;
}

uint64_t sub_1002A4BA0(char a1)
{
  id v3 = (_BYTE *)(v1 + OBJC_IVAR___MRIRRouteRecommendationCandidateResult_isCallToAction);
  uint64_t result = swift_beginAccess(v3, v5, 1LL, 0LL);
  _BYTE *v3 = a1;
  return result;
}

uint64_t (*sub_1002A4BE8(uint64_t a1))(void)
{
  return j_j__swift_endAccess;
}

uint64_t sub_1002A4C70()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___MRIRRouteRecommendationCandidateResult_isLockScreenControl);
  swift_beginAccess(v0 + OBJC_IVAR___MRIRRouteRecommendationCandidateResult_isLockScreenControl, v3, 0LL, 0LL);
  return *v1;
}

uint64_t sub_1002A4CFC(char a1)
{
  id v3 = (_BYTE *)(v1 + OBJC_IVAR___MRIRRouteRecommendationCandidateResult_isLockScreenControl);
  uint64_t result = swift_beginAccess(v3, v5, 1LL, 0LL);
  _BYTE *v3 = a1;
  return result;
}

uint64_t (*sub_1002A4D44(uint64_t a1))(void)
{
  return j_j__swift_endAccess;
}

uint64_t sub_1002A4DCC()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___MRIRRouteRecommendationCandidateResult_isConservativeFiltered);
  swift_beginAccess(v0 + OBJC_IVAR___MRIRRouteRecommendationCandidateResult_isConservativeFiltered, v3, 0LL, 0LL);
  return *v1;
}

uint64_t sub_1002A4E58(char a1)
{
  id v3 = (_BYTE *)(v1 + OBJC_IVAR___MRIRRouteRecommendationCandidateResult_isConservativeFiltered);
  uint64_t result = swift_beginAccess(v3, v5, 1LL, 0LL);
  _BYTE *v3 = a1;
  return result;
}

uint64_t (*sub_1002A4EA0(uint64_t a1))(void)
{
  return j_j__swift_endAccess;
}

id sub_1002A4EE4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, char a6, char a7, char a8)
{
  uint64_t v15 = (char *)objc_allocWithZone(v8);
  uint64_t v16 = &v15[OBJC_IVAR___MRIRRouteRecommendationCandidateResult_classificationDescription];
  *(void *)uint64_t v16 = 0LL;
  *((void *)v16 + 1) = 0LL;
  uint64_t v17 = (void **)&v15[OBJC_IVAR___MRIRRouteRecommendationCandidateResult_sortingHint];
  *uint64_t v17 = 0LL;
  *(void *)&v15[OBJC_IVAR___MRIRRouteRecommendationCandidateResult_classification] = a1;
  *(void *)&v15[OBJC_IVAR___MRIRRouteRecommendationCandidateResult_candidate] = a4;
  swift_beginAccess(v17, v25, 1LL, 0LL);
  uint64_t v18 = *v17;
  *uint64_t v17 = a5;
  uint64_t v19 = v15;
  id v20 = a4;
  id v21 = a5;

  v19[OBJC_IVAR___MRIRRouteRecommendationCandidateResult_isCallToAction] = a6;
  v19[OBJC_IVAR___MRIRRouteRecommendationCandidateResult_isLockScreenControl] = a7;
  v19[OBJC_IVAR___MRIRRouteRecommendationCandidateResult_isConservativeFiltered] = a8;

  v24.receiver = v19;
  v24.super_class = v8;
  id v22 = objc_msgSendSuper2(&v24, "init");

  return v22;
}

id sub_1002A50C8(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return sub_1002A5108(a1);
}

id sub_1002A5108(void *a1)
{
  uint64_t v4 = sub_100156B68(&qword_1003FD688);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = &v1[OBJC_IVAR___MRIRRouteRecommendationCandidateResult_classificationDescription];
  *(void *)uint64_t v8 = 0LL;
  *((void *)v8 + 1) = 0LL;
  unint64_t v40 = a1;
  char v41 = (uint64_t *)v8;
  uint64_t v42 = (id *)&v1[OBJC_IVAR___MRIRRouteRecommendationCandidateResult_sortingHint];
  *(void *)&v1[OBJC_IVAR___MRIRRouteRecommendationCandidateResult_sortingHint] = 0LL;
  uint64_t v10 = a1[3];
  uint64_t v9 = a1[4];
  sub_1001865C4(a1, v10);
  unint64_t v11 = sub_1002A7B5C();
  id v43 = v1;
  dispatch thunk of Decoder.container<A>(keyedBy:)( &type metadata for RouteRecommendationCandidateResult.CodingKeys,  &type metadata for RouteRecommendationCandidateResult.CodingKeys,  v11,  v10,  v9);
  if (v2)
  {
    uint64_t v15 = v43;
    uint64_t v16 = v42;
    sub_1001607E0(v40);
    swift_bridgeObjectRelease();
    id v17 = *v16;

    uint64_t v18 = type metadata accessor for RouteRecommendationCandidateResult();
    swift_deallocPartialClassInstance(v15, v18, 51LL);
  }

  else
  {
    uint64_t v12 = v5;
    v47[0] = 0;
    uint64_t v13 = KeyedDecodingContainer.decode(_:forKey:)(v47, v4);
    uint64_t v14 = v4;
    id v20 = v43;
    *(void *)&v43[OBJC_IVAR___MRIRRouteRecommendationCandidateResult_classification] = v13;
    v47[0] = 1;
    uint64_t v21 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(v47, v4);
    uint64_t v23 = v22;
    objc_super v24 = v41;
    swift_beginAccess(v41, v47, 1LL, 0LL);
    uint64_t *v24 = v21;
    v24[1] = v23;
    swift_bridgeObjectRelease();
    uint64_t v25 = type metadata accessor for RouteRecommendationCandidate();
    char v46 = 2;
    uint64_t v26 = sub_1002A869C( &qword_1003FD698,  type metadata accessor for RouteRecommendationCandidate,  (uint64_t)&unk_1003516C8);
    uint64_t v27 = v25;
    uint64_t v28 = v25;
    Swift::String v29 = v7;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v45, v27, &v46, v4, v28, v26);
    NSString v30 = v42;
    *(void *)&v20[OBJC_IVAR___MRIRRouteRecommendationCandidateResult_candidate] = v45[0];
    LOBYTE(v45[0]) = 3;
    double v31 = COERCE_DOUBLE(KeyedDecodingContainer.decodeIfPresent(_:forKey:)(v45, v4));
    uint64_t v32 = v12;
    uint64_t v33 = v29;
    if ((v34 & 1) != 0) {
      id v35 = 0LL;
    }
    else {
      id v35 = [objc_allocWithZone(NSNumber) initWithDouble:v31];
    }
    swift_beginAccess(v30, v45, 1LL, 0LL);
    id v36 = *v30;
    *NSString v30 = v35;

    char v46 = 4;
    uint64_t v37 = v33;
    v20[OBJC_IVAR___MRIRRouteRecommendationCandidateResult_isCallToAction] = KeyedDecodingContainer.decodeIfPresent(_:forKey:)( &v46,  v14) & 1;
    char v46 = 5;
    v20[OBJC_IVAR___MRIRRouteRecommendationCandidateResult_isLockScreenControl] = KeyedDecodingContainer.decodeIfPresent(_:forKey:)( &v46,  v14) & 1;
    char v46 = 6;
    v20[OBJC_IVAR___MRIRRouteRecommendationCandidateResult_isConservativeFiltered] = KeyedDecodingContainer.decodeIfPresent(_:forKey:)( &v46,  v14) & 1;

    objc_super v38 = (objc_class *)type metadata accessor for RouteRecommendationCandidateResult();
    v44.receiver = v20;
    v44.super_class = v38;
    id v17 = objc_msgSendSuper2(&v44, "init");
    (*(void (**)(char *, uint64_t))(v32 + 8))(v37, v14);
    sub_1001607E0(v40);
  }

  return v17;
}

id sub_1002A551C(void *a1, uint64_t a2, uint64_t (*a3)(void), unint64_t *a4, uint64_t a5)
{
  id v8 = a1;
  sub_1002A5588(a3, a4, a5);

  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1002A5588(uint64_t (*a1)(void), unint64_t *a2, uint64_t a3)
{
  uint64_t v7 = v3;
  uint64_t v8 = type metadata accessor for String.Encoding(0LL);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for JSONEncoder(0LL);
  swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
  uint64_t v12 = JSONEncoder.init()();
  v32[0] = v3;
  uint64_t v13 = (objc_class *)a1();
  uint64_t v14 = sub_1002A869C(a2, a1, a3);
  uint64_t v15 = dispatch thunk of JSONEncoder.encode<A>(_:)(v32, v13, v14);
  unint64_t v17 = v16;
  static String.Encoding.utf8.getter(v15);
  uint64_t v18 = String.init(data:encoding:)(v15, v17, v10);
  if (v19)
  {
    uint64_t v20 = v18;
    uint64_t v21 = v19;
    sub_1001608B8(v15, v17);
  }

  else
  {
    sub_1001608B8(v15, v17);
    uint64_t v21 = (void *)0xEC00000061746164LL;
    uint64_t v20 = 0x2064696C61766E69LL;
  }

  v32[0] = 60LL;
  v32[1] = 0xE100000000000000LL;
  v31.receiver = v7;
  v31.super_class = v13;
  id v22 = objc_msgSendSuper2(&v31, "description");
  uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
  uint64_t v25 = v24;

  v26._uint64_t countAndFlagsBits = v23;
  v26._object = v25;
  String.append(_:)(v26);
  swift_bridgeObjectRelease();
  v27._uint64_t countAndFlagsBits = 2622LL;
  v27._object = (void *)0xE200000000000000LL;
  String.append(_:)(v27);
  v28._uint64_t countAndFlagsBits = v20;
  v28._object = v21;
  String.append(_:)(v28);
  swift_release(v12);
  swift_bridgeObjectRelease();
  return v32[0];
}

uint64_t sub_1002A5774(void *a1)
{
  id v3 = v1;
  uint64_t v5 = sub_100156B68(&qword_1003FD6A0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  sub_1001865C4(a1, v9);
  unint64_t v11 = sub_1002A7B5C();
  uint64_t v12 = dispatch thunk of Encoder.container<A>(keyedBy:)( &type metadata for RouteRecommendationCandidateResult.CodingKeys,  &type metadata for RouteRecommendationCandidateResult.CodingKeys,  v11,  v9,  v10);
  uint64_t v13 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v3) + 0x88LL))(v12);
  char v38 = 0;
  uint64_t v14 = KeyedEncodingContainer.encode(_:forKey:)(v13, &v38, v5);
  if (!v2)
  {
    uint64_t v16 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v3) + 0xA0LL))(v14);
    v37[1] = 1;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v16);
    uint64_t v17 = swift_bridgeObjectRelease();
    uint64_t v18 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v3) + 0xB8LL))(v17);
    uint64_t v32 = v18;
    v37[0] = 2;
    uint64_t v19 = type metadata accessor for RouteRecommendationCandidate();
    uint64_t v20 = sub_1002A869C( &qword_1003FD6A8,  type metadata accessor for RouteRecommendationCandidate,  (uint64_t)&unk_1003516F0);
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v32, v37, v5, v19, v20);

    uint64_t v21 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v3) + 0xD0LL))();
    id v22 = v21;
    if (v21)
    {
      [v21 doubleValue];
      objc_super v24 = v23;

      uint64_t v21 = v24;
    }

    char v36 = 3;
    uint64_t v25 = KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v21, v22 == 0LL, &v36, v5);
    char v26 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v3) + 0xE8LL))(v25);
    char v35 = 4;
    uint64_t v27 = KeyedEncodingContainer.encode(_:forKey:)(v26 & 1, &v35, v5);
    char v28 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v3) + 0x100LL))(v27);
    char v34 = 5;
    uint64_t v29 = KeyedEncodingContainer.encode(_:forKey:)(v28 & 1, &v34, v5);
    char v30 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v3) + 0x118LL))(v29);
    char v33 = 6;
    KeyedEncodingContainer.encode(_:forKey:)(v30 & 1, &v33, v5);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

id sub_1002A5AB8()
{
  return sub_1002142B8(type metadata accessor for RouteRecommendationCandidateResult);
}

uint64_t sub_1002A5B10@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 312))();
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1002A5B3C()
{
  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0x140LL))();
}

uint64_t sub_1002A5B74()
{
  if (*v0) {
    return 0x7365646F6ELL;
  }
  else {
    return 0xD000000000000013LL;
  }
}

uint64_t sub_1002A5BB0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = sub_1002A7BC0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1002A5BD4(uint64_t a1)
{
  unint64_t v2 = sub_1002A7CA4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002A5BFC(uint64_t a1)
{
  unint64_t v2 = sub_1002A7CA4();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002A5C30()
{
  return sub_1002A5C3C(&OBJC_IVAR___MRIRRouteRecommendationCandidate_candidateIdentifier);
}

uint64_t sub_1002A5C3C(void *a1)
{
  unint64_t v2 = (uint64_t *)(v1 + *a1);
  swift_beginAccess(v2, v5, 0LL, 0LL);
  uint64_t v3 = *v2;
  swift_bridgeObjectRetain(v2[1]);
  return v3;
}

uint64_t sub_1002A5C98(uint64_t a1, uint64_t a2)
{
  return sub_1002A5CA4(a1, a2, &OBJC_IVAR___MRIRRouteRecommendationCandidate_candidateIdentifier);
}

uint64_t sub_1002A5CA4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = (void *)(v3 + *a3);
  swift_beginAccess(v6, v9, 1LL, 0LL);
  uint64_t v7 = v6[1];
  *uint64_t v6 = a1;
  v6[1] = a2;
  return swift_bridgeObjectRelease(v7);
}

uint64_t (*sub_1002A5CFC(uint64_t a1))(void)
{
  return j_j__swift_endAccess;
}

Class sub_1002A5D5C(uint64_t a1, uint64_t a2, void *a3, void (*a4)(__n128), unint64_t *a5)
{
  __n128 v7 = swift_beginAccess(a1 + *a3, v10, 0LL, 0LL);
  a4(v7);
  sub_1002A869C(a5, (uint64_t (*)(void))a4, (uint64_t)&protocol conformance descriptor for NSObject);
  swift_bridgeObjectRetain();
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  return isa;
}

uint64_t sub_1002A5DF0()
{
  return sub_100178610(&OBJC_IVAR___MRIRRouteRecommendationCandidate_nodes);
}

uint64_t sub_1002A5E18( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), unint64_t *a5, void *a6)
{
  uint64_t v11 = a4();
  uint64_t v12 = sub_1002A869C(a5, a4, (uint64_t)&protocol conformance descriptor for NSObject);
  uint64_t v13 = static Set._unconditionallyBridgeFromObjectiveC(_:)(a3, v11, v12);
  uint64_t v14 = (uint64_t *)(a1 + *a6);
  swift_beginAccess(v14, v16, 1LL, 0LL);
  uint64_t *v14 = v13;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1002A5EB4(uint64_t a1)
{
  return sub_1002A5EC0(a1, &OBJC_IVAR___MRIRRouteRecommendationCandidate_nodes);
}

uint64_t sub_1002A5EC0(uint64_t a1, void *a2)
{
  uint64_t v4 = (uint64_t *)(v2 + *a2);
  swift_beginAccess(v4, v7, 1LL, 0LL);
  uint64_t v5 = *v4;
  *uint64_t v4 = a1;
  return swift_bridgeObjectRelease(v5);
}

uint64_t (*sub_1002A5F0C(uint64_t a1))(void)
{
  return j_j__swift_endAccess;
}

id sub_1002A5F50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 v7 = (char *)objc_allocWithZone(v3);
  uint64_t v8 = &v7[OBJC_IVAR___MRIRRouteRecommendationCandidate_candidateIdentifier];
  *(void *)uint64_t v8 = a1;
  *((void *)v8 + 1) = a2;
  *(void *)&v7[OBJC_IVAR___MRIRRouteRecommendationCandidate_nodes] = a3;
  v10.receiver = v7;
  v10.super_class = v3;
  return objc_msgSendSuper2(&v10, "init");
}

id sub_1002A5FBC(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return sub_1002A5FFC(a1);
}

id sub_1002A5FFC(void *a1)
{
  uint64_t v23 = sub_100156B68(&qword_1003FD6C0);
  uint64_t v4 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = a1[3];
  uint64_t v8 = a1[4];
  objc_super v24 = a1;
  sub_1001865C4(a1, v7);
  unint64_t v9 = sub_1002A7CA4();
  uint64_t v25 = v1;
  objc_super v10 = v6;
  dispatch thunk of Decoder.container<A>(keyedBy:)( &type metadata for RouteRecommendationCandidate.CodingKeys,  &type metadata for RouteRecommendationCandidate.CodingKeys,  v9,  v7,  v8);
  if (v2)
  {
    id v22 = v25;
    sub_1001607E0(v24);

    uint64_t v14 = type metadata accessor for RouteRecommendationCandidate();
    swift_deallocPartialClassInstance(v22, v14, 32LL);
  }

  else
  {
    uint64_t v11 = v4;
    LOBYTE(v28) = 0;
    uint64_t v12 = v23;
    uint64_t v13 = KeyedDecodingContainer.decode(_:forKey:)(&v28, v23);
    uint64_t v16 = v25;
    uint64_t v17 = (uint64_t *)&v25[OBJC_IVAR___MRIRRouteRecommendationCandidate_candidateIdentifier];
    *uint64_t v17 = v13;
    v17[1] = v18;
    uint64_t v19 = sub_100156B68(&qword_1003FD6D0);
    char v27 = 1;
    uint64_t v20 = sub_1002A7D08( &qword_1003FD6D8,  &qword_1003FD6E0,  (uint64_t)&unk_100351820,  (uint64_t)&protocol conformance descriptor for <> Set<A>);
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v28, v19, &v27, v12, v19, v20);
    *(void *)&v16[OBJC_IVAR___MRIRRouteRecommendationCandidate_nodes] = v28;

    uint64_t v21 = (objc_class *)type metadata accessor for RouteRecommendationCandidate();
    v26.receiver = v16;
    v26.super_class = v21;
    id v22 = objc_msgSendSuper2(&v26, "init");
    (*(void (**)(char *, uint64_t))(v11 + 8))(v10, v12);
    sub_1001607E0(v24);
  }

  return v22;
}

uint64_t sub_1002A6230(void *a1)
{
  id v3 = v1;
  uint64_t v5 = sub_100156B68(&qword_1003FD6E8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  sub_1001865C4(a1, v9);
  unint64_t v11 = sub_1002A7CA4();
  uint64_t v12 = dispatch thunk of Encoder.container<A>(keyedBy:)( &type metadata for RouteRecommendationCandidate.CodingKeys,  &type metadata for RouteRecommendationCandidate.CodingKeys,  v11,  v9,  v10);
  uint64_t v13 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v3) + 0x60LL))(v12);
  char v22 = 0;
  KeyedEncodingContainer.encode(_:forKey:)(v13, v14);
  if (v2)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return swift_bridgeObjectRelease();
  }

  else
  {
    uint64_t v16 = swift_bridgeObjectRelease();
    uint64_t v21 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v3) + 0x78LL))(v16);
    char v20 = 1;
    uint64_t v17 = sub_100156B68(&qword_1003FD6D0);
    uint64_t v18 = sub_1002A7D08( &qword_1003FD6F0,  &qword_1003FD6F8,  (uint64_t)&unk_100351848,  (uint64_t)&protocol conformance descriptor for <> Set<A>);
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v21, &v20, v5, v17, v18);
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }

id sub_1002A6418()
{
  return sub_1002142B8(type metadata accessor for RouteRecommendationCandidate);
}

uint64_t sub_1002A6460()
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1002A6498 + 4 * byte_1003512EB[*v0]))( 0xD000000000000018LL,  0x80000001003415B0LL);
}

unint64_t sub_1002A6498()
{
  return 0xD000000000000011LL;
}

uint64_t sub_1002A64B4()
{
  return 0x746E656449736469LL;
}

uint64_t sub_1002A64D8()
{
  return 0x6C61636F4C7369LL;
}

uint64_t sub_1002A64F0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = sub_1002A7D8C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1002A6514(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1002A6520(uint64_t a1)
{
  unint64_t v2 = sub_1002A7F60();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002A6548(uint64_t a1)
{
  unint64_t v2 = sub_1002A7F60();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002A657C()
{
  return sub_1002A5C3C(&OBJC_IVAR___MRIRRouteRecommendationNode_avOutputDeviceIdentifier);
}

uint64_t sub_1002A6594(uint64_t a1, uint64_t a2)
{
  return sub_1002A5CA4(a1, a2, &OBJC_IVAR___MRIRRouteRecommendationNode_avOutputDeviceIdentifier);
}

uint64_t (*sub_1002A65A0(uint64_t a1))(void)
{
  return j_j__swift_endAccess;
}

uint64_t sub_1002A65F0()
{
  return sub_1002A5C3C(&OBJC_IVAR___MRIRRouteRecommendationNode_rapportIdentifier);
}

uint64_t sub_1002A6608(uint64_t a1, uint64_t a2)
{
  return sub_1002A5CA4(a1, a2, &OBJC_IVAR___MRIRRouteRecommendationNode_rapportIdentifier);
}

uint64_t (*sub_1002A6614(uint64_t a1))(void)
{
  return j_j__swift_endAccess;
}

id sub_1002A6664(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a1 + *a3;
  swift_beginAccess(v3, v7, 0LL, 0LL);
  uint64_t v4 = *(void *)(v3 + 8);
  if (!v4) {
    return 0LL;
  }
  swift_bridgeObjectRetain(v4);
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v4);
  return v5;
}

uint64_t sub_1002A66D8()
{
  return sub_1002A5C3C(&OBJC_IVAR___MRIRRouteRecommendationNode_idsIdentifier);
}

uint64_t sub_1002A66F0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a3)
  {
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
    uint64_t v8 = v7;
  }

  else
  {
    uint64_t v6 = 0LL;
    uint64_t v8 = 0LL;
  }

  uint64_t v9 = (uint64_t *)(a1 + *a4);
  swift_beginAccess(v9, v12, 1LL, 0LL);
  uint64_t v10 = v9[1];
  *uint64_t v9 = v6;
  v9[1] = v8;
  return swift_bridgeObjectRelease(v10);
}

uint64_t sub_1002A6768(uint64_t a1, uint64_t a2)
{
  return sub_1002A5CA4(a1, a2, &OBJC_IVAR___MRIRRouteRecommendationNode_idsIdentifier);
}

uint64_t (*sub_1002A6774(uint64_t a1))(void)
{
  return j__swift_endAccess;
}

uint64_t sub_1002A67FC()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___MRIRRouteRecommendationNode_isLocal);
  swift_beginAccess(v0 + OBJC_IVAR___MRIRRouteRecommendationNode_isLocal, v3, 0LL, 0LL);
  return *v1;
}

uint64_t sub_1002A6888(char a1)
{
  uint64_t v3 = (_BYTE *)(v1 + OBJC_IVAR___MRIRRouteRecommendationNode_isLocal);
  uint64_t result = swift_beginAccess(v3, v5, 1LL, 0LL);
  _BYTE *v3 = a1;
  return result;
}

uint64_t (*sub_1002A68D0(uint64_t a1))(void)
{
  return j_j__swift_endAccess;
}

uint64_t sub_1002A6990()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x70LL))();
}

uint64_t sub_1002A6A30()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x78LL))();
}

uint64_t (*sub_1002A6A4C(void *a1))(uint64_t *a1, char a2)
{
  a1[2] = v1;
  *a1 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x70LL))();
  a1[1] = v3;
  return sub_1002A6A98;
}

uint64_t sub_1002A6A98(uint64_t *a1, char a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = *a1;
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & *(void *)a1[2]) + 0x78LL);
  if ((a2 & 1) == 0) {
    return v4(*a1, v2);
  }
  swift_bridgeObjectRetain(a1[1]);
  v4(v3, v2);
  return swift_bridgeObjectRelease(v2);
}

id sub_1002A6B10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v12 = (char *)objc_allocWithZone(v7);
  uint64_t v13 = &v12[OBJC_IVAR___MRIRRouteRecommendationNode_avOutputDeviceIdentifier];
  *(void *)uint64_t v13 = 0LL;
  *((void *)v13 + 1) = 0LL;
  uint64_t v14 = &v12[OBJC_IVAR___MRIRRouteRecommendationNode_rapportIdentifier];
  *(void *)uint64_t v14 = 0LL;
  *((void *)v14 + 1) = 0LL;
  uint64_t v15 = &v12[OBJC_IVAR___MRIRRouteRecommendationNode_idsIdentifier];
  *(void *)uint64_t v15 = 0LL;
  *((void *)v15 + 1) = 0LL;
  swift_beginAccess(v13, v27, 1LL, 0LL);
  uint64_t v16 = *((void *)v13 + 1);
  *(void *)uint64_t v13 = a1;
  *((void *)v13 + 1) = a2;
  uint64_t v17 = v12;
  swift_bridgeObjectRelease(v16);
  swift_beginAccess(v14, v26, 1LL, 0LL);
  uint64_t v18 = *((void *)v14 + 1);
  *(void *)uint64_t v14 = a3;
  *((void *)v14 + 1) = a4;
  swift_bridgeObjectRelease(v18);
  swift_beginAccess(v15, v25, 1LL, 0LL);
  uint64_t v19 = *((void *)v15 + 1);
  *(void *)uint64_t v15 = a5;
  *((void *)v15 + 1) = a6;
  swift_bridgeObjectRelease(v19);
  v17[OBJC_IVAR___MRIRRouteRecommendationNode_isLocal] = a7;

  v24.receiver = v17;
  v24.super_class = v7;
  return objc_msgSendSuper2(&v24, "init");
}

id sub_1002A6C40(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return sub_1002A6C80(a1);
}

id sub_1002A6C80(void *a1)
{
  uint64_t v35 = sub_100156B68(&qword_1003FD720);
  uint64_t v4 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = &v1[OBJC_IVAR___MRIRRouteRecommendationNode_avOutputDeviceIdentifier];
  *(void *)uint64_t v7 = 0LL;
  *((void *)v7 + 1) = 0LL;
  unint64_t v40 = (uint64_t *)v7;
  uint64_t v8 = &v1[OBJC_IVAR___MRIRRouteRecommendationNode_rapportIdentifier];
  *(void *)uint64_t v8 = 0LL;
  *((void *)v8 + 1) = 0LL;
  uint64_t v39 = (uint64_t *)v8;
  uint64_t v9 = &v1[OBJC_IVAR___MRIRRouteRecommendationNode_idsIdentifier];
  *(void *)uint64_t v9 = 0LL;
  *((void *)v9 + 1) = 0LL;
  char v38 = (uint64_t *)v9;
  id v10 = (id)a1[3];
  uint64_t v11 = a1[4];
  char v36 = a1;
  sub_1001865C4(a1, (uint64_t)v10);
  unint64_t v12 = sub_1002A7F60();
  uint64_t v37 = v1;
  dispatch thunk of Decoder.container<A>(keyedBy:)( &type metadata for RouteRecommendationNode.CodingKeys,  &type metadata for RouteRecommendationNode.CodingKeys,  v12,  v10,  v11);
  if (v2)
  {
    uint64_t v16 = v37;
    sub_1001607E0(v36);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    uint64_t v17 = type metadata accessor for RouteRecommendationNode();
    swift_deallocPartialClassInstance(v16, v17, 57LL);
  }

  else
  {
    uint64_t v13 = v4;
    v44[0] = 0;
    uint64_t v14 = v35;
    uint64_t v15 = v6;
    uint64_t v19 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(v44, v35);
    uint64_t v21 = v20;
    char v22 = v40;
    swift_beginAccess(v40, v44, 1LL, 0LL);
    *char v22 = v19;
    v22[1] = v21;
    swift_bridgeObjectRelease();
    v43[0] = 1;
    uint64_t v23 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(v43, v14);
    uint64_t v25 = v24;
    objc_super v26 = v39;
    swift_beginAccess(v39, v43, 1LL, 0LL);
    *objc_super v26 = v23;
    v26[1] = v25;
    swift_bridgeObjectRelease();
    v42[0] = 2;
    uint64_t v27 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(v42, v14);
    uint64_t v29 = v28;
    char v30 = v38;
    swift_beginAccess(v38, v42, 1LL, 0LL);
    *char v30 = v27;
    v30[1] = v29;
    swift_bridgeObjectRelease();
    char v45 = 3;
    char v31 = KeyedDecodingContainer.decode(_:forKey:)(&v45, v14);
    uint64_t v32 = v37;
    v37[OBJC_IVAR___MRIRRouteRecommendationNode_isLocal] = v31 & 1;

    char v33 = (objc_class *)type metadata accessor for RouteRecommendationNode();
    v41.receiver = v32;
    v41.super_class = v33;
    id v10 = objc_msgSendSuper2(&v41, "init");
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v14);
    sub_1001607E0(v36);
  }

  return v10;
}

uint64_t sub_1002A6FA4(void *a1)
{
  id v3 = v1;
  uint64_t v5 = sub_100156B68(&qword_1003FD730);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 4];
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  sub_1001865C4(a1, v9);
  unint64_t v11 = sub_1002A7F60();
  uint64_t v12 = dispatch thunk of Encoder.container<A>(keyedBy:)( &type metadata for RouteRecommendationNode.CodingKeys,  &type metadata for RouteRecommendationNode.CodingKeys,  v11,  v9,  v10);
  uint64_t v13 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v3) + 0x70LL))(v12);
  v22[3] = 0;
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v13);
  if (v2)
  {
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
    return swift_bridgeObjectRelease();
  }

  else
  {
    uint64_t v14 = swift_bridgeObjectRelease();
    uint64_t v15 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v3) + 0x88LL))(v14);
    void v22[2] = 1;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v15);
    uint64_t v16 = swift_bridgeObjectRelease();
    uint64_t v17 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v3) + 0xA0LL))(v16);
    v22[1] = 2;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v17);
    uint64_t v18 = swift_bridgeObjectRelease();
    char v19 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v3) + 0xB8LL))(v18);
    v22[0] = 3;
    KeyedEncodingContainer.encode(_:forKey:)(v19 & 1, v22, v5);
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
  }

id sub_1002A71D0()
{
  return sub_1002142B8(type metadata accessor for RouteRecommendationNode);
}

uint64_t sub_1002A7230@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 240))();
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1002A725C()
{
  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0xF8LL))();
}

uint64_t sub_1002A7294(uint64_t a1, unint64_t a2)
{
  if (a1 == 0xD000000000000010LL)
  {
    unint64_t v4 = 0x8000000100341480LL;
    if (a2 == 0x8000000100341480LL) {
      goto LABEL_5;
    }
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010LL, 0x8000000100341480LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v4 = a2;
LABEL_5:
    swift_bridgeObjectRelease(v4);
    return 0LL;
  }

  if (a1 == 0xD000000000000011LL && a2 == 0x800000010033F860LL)
  {
    swift_bridgeObjectRelease(0x800000010033F860LL);
    return 1LL;
  }

  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000011LL, 0x800000010033F860LL, a1, a2, 0LL);
    swift_bridgeObjectRelease(a2);
    if ((v6 & 1) != 0) {
      return 1LL;
    }
    else {
      return 2LL;
    }
  }

uint64_t sub_1002A737C(void *a1)
{
  uint64_t v2 = type metadata accessor for String.Encoding(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = objc_opt_self(&OBJC_CLASS___NSDictionary);
  uint64_t v7 = swift_dynamicCastObjCClass(a1, v6);
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = (void *)objc_opt_self(&OBJC_CLASS___NSJSONSerialization);
    *(void *)&__int128 v31 = 0LL;
    id v10 = a1;
    id v11 = [v9 dataWithJSONObject:v8 options:0 error:&v31];
    id v12 = (id)v31;
    if (v11)
    {
      uint64_t v13 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v11);
      unint64_t v15 = v14;

      goto LABEL_4;
    }

    uint64_t v27 = v12;
    uint64_t v28 = _convertNSErrorToError(_:)(v12);

    swift_willThrow(v29);
    uint64_t result = swift_unexpectedError(v28, "mediaremoted/RouteRecommendationContext.swift", 45LL, 1LL, 29LL);
    __break(1u);
  }

  else
  {
    uint64_t v20 = objc_opt_self(&OBJC_CLASS___NSString);
    uint64_t v21 = swift_dynamicCastObjCClass(a1, v20);
    if (v21)
    {
      __int128 v31 = 0uLL;
      uint64_t v22 = static String._conditionallyBridgeFromObjectiveC(_:result:)(v21, &v31);
      uint64_t v23 = *((void *)&v31 + 1);
      if (*((void *)&v31 + 1))
      {
        uint64_t v24 = v31;
        static String.Encoding.utf8.getter(v22);
        uint64_t v13 = String.data(using:allowLossyConversion:)(v5, 0LL, v24, v23);
        unint64_t v15 = v25;
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
        if (v15 >> 60 == 15)
        {
          __break(1u);
          goto LABEL_10;
        }

uint64_t type metadata accessor for RouteRecommendationContext()
{
  return objc_opt_self(&OBJC_CLASS___MRIRRouteRecommendationContext);
}

unint64_t sub_1002A7664()
{
  unint64_t result = qword_1003FD610;
  if (!qword_1003FD610)
  {
    unint64_t result = swift_getWitnessTable(&unk_100351378, &type metadata for RouteRecommendationContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1003FD610);
  }

  return result;
}

uint64_t type metadata accessor for RouteRecommendationCandidateResult()
{
  return objc_opt_self(&OBJC_CLASS___MRIRRouteRecommendationCandidateResult);
}

uint64_t sub_1002A76C8(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v9 = sub_100160358(&qword_1003FD618);
    sub_1002A869C(a2, type metadata accessor for RouteRecommendationCandidateResult, a3);
    uint64_t result = swift_getWitnessTable(a4, v9);
    atomic_store(result, a1);
  }

  return result;
}

uint64_t sub_1002A774C(uint64_t a1, unint64_t a2)
{
  if (a1 == 0x6966697373616C63LL && a2 == 0xEE006E6F69746163LL)
  {
    unint64_t v5 = 0xEE006E6F69746163LL;
    goto LABEL_8;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6966697373616C63LL, 0xEE006E6F69746163LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0LL;
  }

  if (a1 == 0xD000000000000019LL && a2 == 0x800000010033F880LL)
  {
    unint64_t v7 = 0x800000010033F880LL;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1LL;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000019LL, 0x800000010033F880LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v7 = a2;
    goto LABEL_14;
  }

  if (a1 == 0x74616469646E6163LL && a2 == 0xE900000000000065LL)
  {
    unint64_t v8 = 0xE900000000000065LL;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2LL;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x74616469646E6163LL, 0xE900000000000065LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v8 = a2;
    goto LABEL_20;
  }

  if (a1 == 0x48676E6974726F73LL && a2 == 0xEB00000000746E69LL)
  {
    unint64_t v9 = 0xEB00000000746E69LL;
LABEL_26:
    swift_bridgeObjectRelease(v9);
    return 3LL;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x48676E6974726F73LL, 0xEB00000000746E69LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v9 = a2;
    goto LABEL_26;
  }

  if (a1 == 0x6F546C6C61437369LL && a2 == 0xEE006E6F69746341LL)
  {
    unint64_t v10 = 0xEE006E6F69746341LL;
LABEL_32:
    swift_bridgeObjectRelease(v10);
    return 4LL;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6F546C6C61437369LL, 0xEE006E6F69746341LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v10 = a2;
    goto LABEL_32;
  }

  if (a1 == 0xD000000000000013LL)
  {
    unint64_t v11 = 0x80000001003414F0LL;
    if (a2 == 0x80000001003414F0LL) {
      goto LABEL_37;
    }
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000013LL, 0x80000001003414F0LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v11 = a2;
LABEL_37:
    swift_bridgeObjectRelease(v11);
    return 5LL;
  }

  if (a1 == 0xD000000000000016LL && a2 == 0x80000001003414D0LL)
  {
    swift_bridgeObjectRelease(0x80000001003414D0LL);
    return 6LL;
  }

  else
  {
    char v12 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000016LL, 0x80000001003414D0LL, a1, a2, 0LL);
    swift_bridgeObjectRelease(a2);
    if ((v12 & 1) != 0) {
      return 6LL;
    }
    else {
      return 7LL;
    }
  }

id sub_1002A7A5C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, char a6, char a7, char a8)
{
  unint64_t v15 = &v8[OBJC_IVAR___MRIRRouteRecommendationCandidateResult_classificationDescription];
  *(void *)unint64_t v15 = 0LL;
  *((void *)v15 + 1) = 0LL;
  uint64_t v16 = (void **)&v8[OBJC_IVAR___MRIRRouteRecommendationCandidateResult_sortingHint];
  char *v16 = 0LL;
  *(void *)&v8[OBJC_IVAR___MRIRRouteRecommendationCandidateResult_classification] = a1;
  *(void *)&v8[OBJC_IVAR___MRIRRouteRecommendationCandidateResult_candidate] = a4;
  swift_beginAccess(v16, v23, 1LL, 0LL);
  uint64_t v17 = *v16;
  char *v16 = a5;
  uint64_t v18 = v8;
  id v19 = a4;
  id v20 = a5;

  v18[OBJC_IVAR___MRIRRouteRecommendationCandidateResult_isCallToAction] = a6;
  v18[OBJC_IVAR___MRIRRouteRecommendationCandidateResult_isLockScreenControl] = a7;
  v18[OBJC_IVAR___MRIRRouteRecommendationCandidateResult_isConservativeFiltered] = a8;

  v22.receiver = v18;
  v22.super_class = (Class)type metadata accessor for RouteRecommendationCandidateResult();
  return objc_msgSendSuper2(&v22, "init");
}

unint64_t sub_1002A7B5C()
{
  unint64_t result = qword_1003FD690;
  if (!qword_1003FD690)
  {
    unint64_t result = swift_getWitnessTable(&unk_1003514D0, &type metadata for RouteRecommendationCandidateResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1003FD690);
  }

  return result;
}

uint64_t type metadata accessor for RouteRecommendationCandidate()
{
  return objc_opt_self(&OBJC_CLASS___MRIRRouteRecommendationCandidate);
}

uint64_t sub_1002A7BC0(uint64_t a1, unint64_t a2)
{
  if (a1 == 0xD000000000000013LL)
  {
    unint64_t v4 = 0x8000000100341540LL;
    if (a2 == 0x8000000100341540LL) {
      goto LABEL_5;
    }
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000013LL, 0x8000000100341540LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v4 = a2;
LABEL_5:
    swift_bridgeObjectRelease(v4);
    return 0LL;
  }

  if (a1 == 0x7365646F6ELL && a2 == 0xE500000000000000LL)
  {
    swift_bridgeObjectRelease(0xE500000000000000LL);
    return 1LL;
  }

  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)(0x7365646F6ELL, 0xE500000000000000LL, a1, a2, 0LL);
    swift_bridgeObjectRelease(a2);
    if ((v6 & 1) != 0) {
      return 1LL;
    }
    else {
      return 2LL;
    }
  }

unint64_t sub_1002A7CA4()
{
  unint64_t result = qword_1003FD6C8;
  if (!qword_1003FD6C8)
  {
    unint64_t result = swift_getWitnessTable(&unk_100351628, &type metadata for RouteRecommendationCandidate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1003FD6C8);
  }

  return result;
}

uint64_t type metadata accessor for RouteRecommendationNode()
{
  return objc_opt_self(&OBJC_CLASS___MRIRRouteRecommendationNode);
}

uint64_t sub_1002A7D08(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v9 = sub_100160358(&qword_1003FD6D0);
    sub_1002A869C(a2, type metadata accessor for RouteRecommendationNode, a3);
    uint64_t result = swift_getWitnessTable(a4, v9);
    atomic_store(result, a1);
  }

  return result;
}

uint64_t sub_1002A7D8C(uint64_t a1, unint64_t a2)
{
  if (a1 == 0xD000000000000018LL && a2 == 0x80000001003415B0LL)
  {
    unint64_t v4 = 0x80000001003415B0LL;
LABEL_6:
    swift_bridgeObjectRelease(v4);
    return 0LL;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000018LL, 0x80000001003415B0LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v4 = a2;
    goto LABEL_6;
  }

  if (a1 == 0xD000000000000011LL)
  {
    unint64_t v6 = 0x8000000100341590LL;
    if (a2 == 0x8000000100341590LL) {
      goto LABEL_11;
    }
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000011LL, 0x8000000100341590LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v6 = a2;
LABEL_11:
    swift_bridgeObjectRelease(v6);
    return 1LL;
  }

  if (a1 == 0x746E656449736469LL && a2 == 0xED00007265696669LL)
  {
    unint64_t v7 = 0xED00007265696669LL;
LABEL_17:
    swift_bridgeObjectRelease(v7);
    return 2LL;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x746E656449736469LL, 0xED00007265696669LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v7 = a2;
    goto LABEL_17;
  }

  if (a1 == 0x6C61636F4C7369LL && a2 == 0xE700000000000000LL)
  {
    swift_bridgeObjectRelease(0xE700000000000000LL);
    return 3LL;
  }

  else
  {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6C61636F4C7369LL, 0xE700000000000000LL, a1, a2, 0LL);
    swift_bridgeObjectRelease(a2);
    if ((v8 & 1) != 0) {
      return 3LL;
    }
    else {
      return 4LL;
    }
  }

unint64_t sub_1002A7F60()
{
  unint64_t result = qword_1003FD728;
  if (!qword_1003FD728)
  {
    unint64_t result = swift_getWitnessTable(&unk_100351780, &type metadata for RouteRecommendationNode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1003FD728);
  }

  return result;
}

unint64_t sub_1002A7FA8()
{
  unint64_t result = qword_1003FD738;
  if (!qword_1003FD738)
  {
    unint64_t result = swift_getWitnessTable(&unk_100351310, &type metadata for RouteRecommendationContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1003FD738);
  }

  return result;
}

unint64_t sub_1002A7FF0()
{
  unint64_t result = qword_1003FD740;
  if (!qword_1003FD740)
  {
    unint64_t result = swift_getWitnessTable(&unk_1003513F0, &type metadata for RouteRecommendationContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1003FD740);
  }

  return result;
}

unint64_t sub_1002A8038()
{
  unint64_t result = qword_1003FD748;
  if (!qword_1003FD748)
  {
    unint64_t result = swift_getWitnessTable(&unk_1003513C8, &type metadata for RouteRecommendationContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1003FD748);
  }

  return result;
}

unint64_t sub_1002A8080()
{
  unint64_t result = qword_1003FD750;
  if (!qword_1003FD750)
  {
    unint64_t result = swift_getWitnessTable(&unk_100351468, &type metadata for RouteRecommendationCandidateResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1003FD750);
  }

  return result;
}

unint64_t sub_1002A80C8()
{
  unint64_t result = qword_1003FD758;
  if (!qword_1003FD758)
  {
    unint64_t result = swift_getWitnessTable(&unk_100351548, &type metadata for RouteRecommendationCandidateResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1003FD758);
  }

  return result;
}

unint64_t sub_1002A8110()
{
  unint64_t result = qword_1003FD760;
  if (!qword_1003FD760)
  {
    unint64_t result = swift_getWitnessTable(&unk_100351520, &type metadata for RouteRecommendationCandidateResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1003FD760);
  }

  return result;
}

unint64_t sub_1002A8158()
{
  unint64_t result = qword_1003FD768;
  if (!qword_1003FD768)
  {
    unint64_t result = swift_getWitnessTable(&unk_1003515C0, &type metadata for RouteRecommendationCandidate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1003FD768);
  }

  return result;
}

unint64_t sub_1002A81A0()
{
  unint64_t result = qword_1003FD770;
  if (!qword_1003FD770)
  {
    unint64_t result = swift_getWitnessTable(&unk_1003516A0, &type metadata for RouteRecommendationCandidate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1003FD770);
  }

  return result;
}

unint64_t sub_1002A81E8()
{
  unint64_t result = qword_1003FD778;
  if (!qword_1003FD778)
  {
    unint64_t result = swift_getWitnessTable(&unk_100351678, &type metadata for RouteRecommendationCandidate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1003FD778);
  }

  return result;
}

unint64_t sub_1002A8230()
{
  unint64_t result = qword_1003FD780;
  if (!qword_1003FD780)
  {
    unint64_t result = swift_getWitnessTable(&unk_100351718, &type metadata for RouteRecommendationNode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1003FD780);
  }

  return result;
}

unint64_t sub_1002A8278()
{
  unint64_t result = qword_1003FD788;
  if (!qword_1003FD788)
  {
    unint64_t result = swift_getWitnessTable(&unk_1003517F8, &type metadata for RouteRecommendationNode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1003FD788);
  }

  return result;
}

unint64_t sub_1002A82C0()
{
  unint64_t result = qword_1003FD790;
  if (!qword_1003FD790)
  {
    unint64_t result = swift_getWitnessTable(&unk_1003517D0, &type metadata for RouteRecommendationNode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1003FD790);
  }

  return result;
}

ValueMetadata *type metadata accessor for RouteRecommendationContext.CodingKeys()
{
  return &type metadata for RouteRecommendationContext.CodingKeys;
}

uint64_t getEnumTagSinglePayload for RouteRecommendationCandidateResult.CodingKeys( unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }

  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }

    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }

uint64_t storeEnumTagSinglePayload for RouteRecommendationCandidateResult.CodingKeys( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xF9) {
    return ((uint64_t (*)(void))((char *)&loc_1002A83F4 + 4 * byte_1003512F4[v4]))();
  }
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1002A8428 + 4 * byte_1003512EF[v4]))();
}

uint64_t sub_1002A8428(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002A8430(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x1002A8438LL);
  }
  return result;
}

uint64_t sub_1002A8444(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x1002A844CLL);
  }
  *(_BYTE *)unint64_t result = a2 + 6;
  return result;
}

uint64_t sub_1002A8450(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002A8458(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RouteRecommendationCandidateResult.CodingKeys()
{
  return &type metadata for RouteRecommendationCandidateResult.CodingKeys;
}

uint64_t _s12mediaremoted26RouteRecommendationContextC10CodingKeysOwst_0( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_1002A84C0 + 4 * byte_1003512FE[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1002A84F4 + 4 * byte_1003512F9[v4]))();
}

uint64_t sub_1002A84F4(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002A84FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x1002A8504LL);
  }
  return result;
}

uint64_t sub_1002A8510(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x1002A8518LL);
  }
  *(_BYTE *)unint64_t result = a2 + 1;
  return result;
}

uint64_t sub_1002A851C(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002A8524(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RouteRecommendationCandidate.CodingKeys()
{
  return &type metadata for RouteRecommendationCandidate.CodingKeys;
}

uint64_t getEnumTagSinglePayload for RouteRecommendationNode.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }

  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }

    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }

uint64_t storeEnumTagSinglePayload for RouteRecommendationNode.CodingKeys( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFC) {
    return ((uint64_t (*)(void))((char *)&loc_1002A861C + 4 * byte_100351308[v4]))();
  }
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1002A8650 + 4 * byte_100351303[v4]))();
}

uint64_t sub_1002A8650(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002A8658(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x1002A8660LL);
  }
  return result;
}

uint64_t sub_1002A866C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x1002A8674LL);
  }
  *(_BYTE *)unint64_t result = a2 + 3;
  return result;
}

uint64_t sub_1002A8678(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002A8680(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RouteRecommendationNode.CodingKeys()
{
  return &type metadata for RouteRecommendationNode.CodingKeys;
}

uint64_t sub_1002A869C(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v6 = a2();
    uint64_t result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }

  return result;
}

uint64_t sub_1002A86DC@<X0>(uint64_t *a1@<X8>)
{
  return sub_1002A442C(a1);
}

uint64_t sub_1002A86F0()
{
  return sub_1002A4458();
}

uint64_t sub_1002A8704@<X0>(uint64_t a1@<X8>)
{
  if ([v1 isAirPlayActive])
  {
    id v3 = [v1 leaderDeviceInfo];
    if (!v3)
    {
      uint64_t v4 = type metadata accessor for RoutingSession.HostInfo(0LL);
      unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56LL);
      uint64_t v6 = a1;
      uint64_t v7 = 1LL;
      return v5(v6, v7, 1LL, v4);
    }
  }

  else
  {
    id v3 = v1;
  }

  id v8 = v3;
  id v9 = [objc_allocWithZone(MRDeviceInfoOutputDevice) initWithDeviceInfo:v8];
  id v10 = [v8 name];
  if (v10)
  {
    unint64_t v11 = v10;
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    unint64_t v14 = v13;
  }

  else
  {
    uint64_t v12 = 0LL;
    unint64_t v14 = 0xE000000000000000LL;
  }

  type metadata accessor for Symbols();
  id v15 = v9;
  uint64_t v16 = sub_10021924C();
  uint64_t v18 = v17;
  unsigned int v20 = v19;

  unint64_t v21 = sub_100299D84(v16, v18, v20);
  uint64_t v23 = v22;
  sub_1001835D8(v16, v18, v20);
  id v24 = [v8 localizedModelName];
  if (v24)
  {
    unint64_t v25 = v24;
    uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
    uint64_t v28 = v27;
  }

  else
  {
    uint64_t v26 = 0LL;
    uint64_t v28 = 0LL;
  }

  RoutingSession.HostInfo.init(name:symbolName:productName:)(v12, v14, v21, v23, v26, v28);

  uint64_t v4 = type metadata accessor for RoutingSession.HostInfo(0LL);
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56LL);
  uint64_t v6 = a1;
  uint64_t v7 = 0LL;
  return v5(v6, v7, 1LL, v4);
}

BOOL sub_1002A88D4()
{
  id v1 = [v0 deviceUID];
  id v2 = v1;
  if (v1) {

  }
  return v2 != 0LL;
}

id sub_1002A8918()
{
  id v0 = [(id)objc_opt_self(MRDMediaRemoteServer) server];
  id v1 = [v0 deviceInfo];

  return v1;
}

uint64_t sub_1002A8974()
{
  id v0 = [(id)objc_opt_self(MRDMediaRemoteServer) server];
  id v1 = [v0 deviceInfo];

  id v2 = [v1 deviceUID];
  if (v2)
  {
    id v3 = v2;

    return 0x72656B61657053LL;
  }

  uint64_t result = MSVCopyLocalizedModelName();
  if (result)
  {
    uint64_t v6 = (void *)result;
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);

    return v4;
  }

  __break(1u);
  return result;
}

uint64_t sub_1002A8A40()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_1001609C4(v0, qword_1004057A8);
  sub_10015ADAC(v0, (uint64_t)qword_1004057A8);
  id v1 = (id)*sub_100173F8C();
  return Logger.init(_:)(v1);
}

uint64_t type metadata accessor for GroupSessionUIManagerImplementation()
{
  return objc_opt_self(&OBJC_CLASS____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation);
}

uint64_t type metadata accessor for GroupSessionUIManager()
{
  return objc_opt_self(&OBJC_CLASS___MRDGroupSessionUIManager);
}

id sub_1002A8B38()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for GroupSessionUIManager();
  return objc_msgSendSuper2(&v2, "dealloc");
}

unint64_t sub_1002A8B6C()
{
  unint64_t result = qword_1003FD850;
  if (!qword_1003FD850)
  {
    unint64_t result = swift_getWitnessTable(&unk_100351910, &type metadata for GroupSessionUIInteraction);
    atomic_store(result, (unint64_t *)&qword_1003FD850);
  }

  return result;
}

ValueMetadata *type metadata accessor for GroupSessionUIInteraction()
{
  return &type metadata for GroupSessionUIInteraction;
}

id sub_1002A8BC0()
{
  uint64_t v1 = OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation____lazy_storage___uiController;
  uint64_t v2 = *(void *)(v0
                 + OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation____lazy_storage___uiController);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation____lazy_storage___uiController);
  }

  else
  {
    id v3 =  [(id)objc_opt_self(MRDUIControllerProvider) groupSessionUIControllerWithDelegate:v0];
    uint64_t v4 = *(void *)(v0 + v1);
    *(void *)(v0 + v1) = v3;
    swift_unknownObjectRetain(v3);
    swift_unknownObjectRelease(v4);
    uint64_t v2 = 0LL;
  }

  swift_unknownObjectRetain(v2);
  return v3;
}

char *sub_1002A8C40()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType(v0);
  uint64_t v2 = type metadata accessor for OS_dispatch_queue.Attributes(0LL);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for DispatchQoS(0LL);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)&v1[OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation____lazy_storage___uiController] = 0LL;
  uint64_t v12 = OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_bannerCenter;
  id v13 = objc_allocWithZone((Class)&OBJC_CLASS___MRDBannerCenter);
  unint64_t v14 = v1;
  *(void *)&v1[v12] = [v13 init];
  uint64_t v15 = OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_queue;
  sub_10016083C(0LL, (unint64_t *)&qword_1003F9F50, &OBJC_CLASS___OS_dispatch_queue_ptr);
  uint64_t v16 = (*(uint64_t (**)(char *, void, uint64_t))(v9 + 104))( v11,  enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:),  v8);
  static DispatchQoS.unspecified.getter(v16);
  uint64_t v50 = _swiftEmptyArrayStorage;
  uint64_t v17 = sub_100156FEC( (unint64_t *)&qword_1003FB950,  (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes,  (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  uint64_t v18 = sub_100156B68((uint64_t *)&unk_1003FA190);
  uint64_t v19 = sub_1001F3AE0((unint64_t *)&qword_1003FB960, (uint64_t *)&unk_1003FA190);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v50, v18, v19, v2, v17);
  *(void *)&v14[v15] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)( 0xD000000000000031LL,  0x8000000100341B10LL,  v7,  v4,  v11,  0LL);
  unsigned int v20 = &v14[OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_discoveredSessionContext];
  *(_OWORD *)unsigned int v20 = 0u;
  *((_OWORD *)v20 + 1) = 0u;
  v14[OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_shouldPresentBannerWhenAppropriate] = 1;
  v14[OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_suppressBanners] = 0;
  swift_unknownObjectWeakInit( &v14[OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_observedSession],  0LL);
  *(void *)&v14[OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_participants] = 0LL;
  *(void *)&v14[OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_ongoingNotifications] = _swiftEmptyArrayStorage;
  id v21 = objc_allocWithZone(&OBJC_CLASS___UNUserNotificationCenter);
  NSString v22 = String._bridgeToObjectiveC()();
  id v23 = [v21 initWithBundleIdentifier:v22];

  *(void *)&v14[OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_notificationCenter] = v23;
  id v24 = v23;
  [v24 setWantsNotificationResponsesDelivered];

  unint64_t v25 = (objc_class *)type metadata accessor for GroupSessionUIManagerImplementation();
  v49.receiver = v14;
  v49.super_class = v25;
  uint64_t v26 = (char *)objc_msgSendSuper2(&v49, "init");
  uint64_t v27 = *(void **)&v26[OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_notificationCenter];
  uint64_t v28 = v26;
  [v27 setDelegate:v28];
  [*(id *)&v28[OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_bannerCenter] setDelegate:v28];
  [v27 removeAllPendingNotificationRequests];
  [v27 removeAllDeliveredNotifications];
  uint64_t v29 = (void *)objc_opt_self(&OBJC_CLASS___NSNotificationCenter);
  id v30 = [v29 defaultCenter];
  __int128 v31 = (void *)objc_opt_self(&OBJC_CLASS___MRDDisplayMonitor);
  uint64_t v32 = v28;
  id v33 = [v31 sharedMonitor];
  [v30 addObserver:v32 selector:"handleDisplayMonitorChangeNotification:" name:@"MRDisplayMonitorLayoutDidChangeNotification" object:v33];

  id v34 = [v29 defaultCenter];
  uint64_t v35 = v32;
  id v36 = [v31 sharedMonitor];
  [v34 addObserver:v35 selector:"handleDisplayMonitorChangeNotification:" name:@"MRDisplayMonitorDisplayDidChangeNotification" object:v36];

  if (qword_1004057A0 != -1) {
    swift_once(&qword_1004057A0, sub_1002A8A40);
  }
  uint64_t v37 = type metadata accessor for Logger(0LL);
  uint64_t v38 = sub_10015ADAC(v37, (uint64_t)qword_1004057A8);
  uint64_t v39 = (os_log_s *)Logger.logObject.getter(v38);
  os_log_type_t v40 = static os_log_type_t.default.getter(v39);
  if (os_log_type_enabled(v39, v40))
  {
    objc_super v41 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v42 = (void *)swift_slowAlloc(32LL, -1LL);
    uint64_t v50 = v42;
    *(_DWORD *)objc_super v41 = 136315138;
    uint64_t v43 = _typeName(_:qualified:)(ObjectType, 0LL);
    uint64_t v48 = sub_10015ADC4(v43, v44, (uint64_t *)&v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, &v49, v41 + 4, v41 + 12);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v39, v40, "[%s] Initialized", v41, 0xCu);
    swift_arrayDestroy(v42, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v42, -1LL, -1LL);
    swift_slowDealloc(v41, -1LL, -1LL);
  }

  return v35;
}

id sub_1002A920C()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType(v0);
  if (qword_1004057A0 != -1) {
    swift_once(&qword_1004057A0, sub_1002A8A40);
  }
  uint64_t v3 = type metadata accessor for Logger(0LL);
  uint64_t v4 = sub_10015ADAC(v3, (uint64_t)qword_1004057A8);
  uint64_t v5 = (os_log_s *)Logger.logObject.getter(v4);
  os_log_type_t v6 = static os_log_type_t.default.getter(v5);
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v8 = swift_slowAlloc(32LL, -1LL);
    uint64_t v14 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    uint64_t v9 = _typeName(_:qualified:)(ObjectType, 0LL);
    uint64_t v13 = sub_10015ADC4(v9, v10, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v13, &v14, v7 + 4, v7 + 12);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "[%s] Deinit", v7, 0xCu);
    swift_arrayDestroy(v8, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1LL, -1LL);
    swift_slowDealloc(v7, -1LL, -1LL);
  }

  unint64_t v11 = (objc_class *)type metadata accessor for GroupSessionUIManagerImplementation();
  v15.receiver = v1;
  v15.super_class = v11;
  return objc_msgSendSuper2(&v15, "dealloc");
}

id sub_1002A9468(void *a1)
{
  uint64_t v3 = v1
     + OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_observedSession;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong( v1 + OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_observedSession);
  if (Strong)
  {
    uint64_t v5 = Strong;
    [Strong removeObserver:v1];
    os_log_type_t v6 = *(void **)(v1
                  + OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_notificationCenter);
    [v6 removeAllPendingNotificationRequests];
    [v6 removeAllDeliveredNotifications];
    swift_unknownObjectRelease(v5);
  }

  swift_unknownObjectWeakAssign(v3, a1);
  id v7 = [a1 participants];
  uint64_t v8 = sub_100156B68(&qword_1003FA150);
  uint64_t v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v8);

  *(void *)(v1
            + OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_participants) = v9;
  swift_bridgeObjectRelease();
  return [a1 addObserver:v1];
}

uint64_t sub_1002A9604(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t ObjectType = swift_getObjectType(v4);
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v28 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v27 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v12 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  objc_super v15 = *(void **)&v4[OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_queue];
  uint64_t v16 = (void *)swift_allocObject(&unk_1003AD820, 56LL, 7LL);
  v16[2] = a1;
  v16[3] = v4;
  void v16[4] = a2;
  v16[5] = a3;
  v16[6] = ObjectType;
  uint64_t aBlock[4] = sub_1002B16E8;
  __int128 v31 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_100157EA8;
  aBlock[3] = &unk_1003AD838;
  uint64_t v17 = _Block_copy(aBlock);
  id v18 = v15;
  id v19 = a1;
  unsigned int v20 = v4;
  uint64_t v21 = swift_retain(a3);
  static DispatchQoS.unspecified.getter(v21);
  uint64_t v29 = _swiftEmptyArrayStorage;
  uint64_t v22 = sub_100156FEC( (unint64_t *)&qword_1003FADB0,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v23 = sub_100156B68((uint64_t *)&unk_1003F9A70);
  uint64_t v24 = sub_1001F3AE0((unint64_t *)&qword_1003FADC0, (uint64_t *)&unk_1003F9A70);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v29, v23, v24, v9, v22);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v14, v11, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v28 + 8))(v11, v9);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v27);
  return swift_release(v31);
}

void sub_1002A9840()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType(v0);
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v114 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v113 = (char *)&v98 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v111 = *(void *)(v4 - 8);
  uint64_t v112 = v4;
  __chkstk_darwin(v4);
  uint64_t v110 = (char *)&v98 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for DispatchTimeInterval(0LL);
  uint64_t v106 = *(void *)(v6 - 8);
  uint64_t v107 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (uint8_t **)((char *)&v98 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v109 = type metadata accessor for DispatchTime(0LL);
  uint64_t v9 = *(void *)(v109 - 8);
  uint64_t v10 = __chkstk_darwin(v109);
  uint64_t v12 = (char *)&v98 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v108 = (char *)&v98 - v13;
  uint64_t v14 = type metadata accessor for DispatchPredicate(0LL);
  objc_super v15 = *(void ***)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (uint8_t **)((char *)&v98 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v18 = OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_queue;
  id v19 = *(void **)&v1[OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_queue];
  *uint64_t v17 = v19;
  ((void (*)(void *, void, uint64_t))v15[13])(v17, enum case for DispatchPredicate.onQueue(_:), v14);
  id v20 = v19;
  LOBYTE(v19) = _dispatchPreconditionTest(_:)(v17);
  ((void (*)(void *, uint64_t))v15[1])(v17, v14);
  if ((v19 & 1) == 0)
  {
    __break(1u);
    goto LABEL_31;
  }

  id v21 = [(id)objc_opt_self(MRUserSettings) currentSettings];
  if (!v21)
  {
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    return;
  }

  uint64_t v22 = v21;
  unsigned int v23 = [v21 groupSessionNearbyBanner];

  if (v23)
  {
    uint64_t v24 = &v1[OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_discoveredSessionContext];
    unint64_t v25 = *(void **)&v1[OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_discoveredSessionContext];
    if (v25)
    {
      uint64_t v27 = v24[2];
      uint64_t v26 = v24[3];
      uint64_t v17 = (void *)v24[1];
      id v28 = v25;
      uint64_t v29 = v17;
      uint64_t v105 = v2;
      id v30 = v29;
      swift_retain(v26);
      id v31 = v30;
      sub_1002B133C(v25, v17, v27, v26);
      if (v17)
      {
        if (v1[OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_suppressBanners] == 1)
        {

          return;
        }

        uint64_t v102 = OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_suppressBanners;
        unint64_t v103 = (void **)v31;
        id v32 = [(id)objc_opt_self(MRDDisplayMonitor) sharedMonitor];
        uint64_t v33 = MRMediaRemoteCopyLocalDeviceSystemMediaApplicationDisplayID(v32);
        if (!v33) {
          goto LABEL_36;
        }
        id v34 = (void *)v33;
        uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
        uint64_t v37 = v36;

        id v38 = [v32 presentedBundleIdentifiers];
        uint64_t v39 = static Set._unconditionallyBridgeFromObjectiveC(_:)( v38,  &type metadata for String,  &protocol witness table for String);
        id v104 = v32;
        uint64_t v40 = v39;

        char v41 = sub_100158DD4(v35, v37, v40);
        swift_bridgeObjectRelease();
        id v42 = v104;
        swift_bridgeObjectRelease();
        if (![v42 displayOn]
          || ([v42 lockScreenForegrounded] & 1) != 0
          || ([v42 controlCenterForegrounded] & 1) != 0)
        {

          if ((v41 & 1) != 0) {
            return;
          }
          goto LABEL_13;
        }

        objc_super v15 = v103;
        if ((v41 & 1) == 0)
        {

LABEL_13:
          v1[OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_shouldPresentBannerWhenAppropriate] = 1;
          return;
        }

        if (v1[OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_shouldPresentBannerWhenAppropriate] != 1)
        {

          return;
        }

        v1[OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_shouldPresentBannerWhenAppropriate] = 0;
        if (qword_1004057A0 == -1)
        {
LABEL_18:
          uint64_t v43 = type metadata accessor for Logger(0LL);
          uint64_t v44 = sub_10015ADAC(v43, (uint64_t)qword_1004057A8);
          char v45 = (os_log_s *)Logger.logObject.getter(v44);
          os_log_type_t v46 = static os_log_type_t.default.getter(v45);
          int v47 = v46;
          if (os_log_type_enabled(v45, v46))
          {
            uint64_t v48 = swift_slowAlloc(12LL, -1LL);
            LODWORD(v99) = v47;
            objc_super v49 = (uint8_t *)v48;
            id v100 = (void **)swift_slowAlloc(32LL, -1LL);
            Swift::String aBlock = v100;
            uint64_t v101 = v45;
            uint64_t v98 = v49;
            *(_DWORD *)objc_super v49 = 136315138;
            uint64_t v50 = _typeName(_:qualified:)(ObjectType, 0LL);
            uint64_t v116 = (void *)sub_10015ADC4(v50, v51, (uint64_t *)&aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v116, &aBlock, v49 + 4, v49 + 12);
            objc_super v15 = v103;
            swift_bridgeObjectRelease();
            uint64_t v52 = v98;
            _os_log_impl( (void *)&_mh_execute_header,  v101,  (os_log_type_t)v99,  "[%s] Begin banner suppression.",  v98,  0xCu);
            os_log_t v53 = (os_log_t)v100;
            swift_arrayDestroy(v100, 1LL, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v53, -1LL, -1LL);
            swift_slowDealloc(v52, -1LL, -1LL);
          }

          else
          {
          }

          v1[v102] = 1;
          uint64_t v54 = v15;
          os_log_type_t v55 = (os_log_s *)Logger.logObject.getter(v54);
          os_log_type_t v56 = static os_log_type_t.default.getter(v55);
          int v57 = v56;
          if (os_log_type_enabled(v55, v56))
          {
            uint64_t v58 = swift_slowAlloc(22LL, -1LL);
            LODWORD(v102) = v57;
            uint64_t v59 = v58;
            uint64_t v101 = (os_log_s *)swift_slowAlloc(8LL, -1LL);
            unint64_t v103 = (void **)swift_slowAlloc(32LL, -1LL);
            Swift::String aBlock = v103;
            *(_DWORD *)uint64_t v59 = 136315394;
            uint64_t v98 = (uint8_t *)(v59 + 4);
            uint64_t v60 = _typeName(_:qualified:)(ObjectType, 0LL);
            id v100 = (void **)v55;
            uint64_t v61 = v54;
            uint64_t v116 = (void *)sub_10015ADC4(v60, v62, (uint64_t *)&aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v116, &aBlock, v98, v59 + 12);
            swift_bridgeObjectRelease();
            id v99 = (uint8_t *)v59;
            *(_WORD *)(v59 + 12) = 2114;
            uint64_t v98 = (uint8_t *)(v59 + 14);
            uint64_t v63 = v59 + 22;
            uint64_t v116 = v61;
            uint64_t v64 = v61;
            uint64_t v65 = v63;
            uint64_t v54 = v61;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v116, &aBlock, v98, v65);
            uint64_t v66 = v101;
            *(void *)uint64_t v101 = v17;

            os_log_t v67 = (os_log_t)v100;
            unint64_t v68 = v99;
            _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v100,  (os_log_type_t)v102,  "[%s] Posting banner request: %{public}@",  v99,  0x16u);
            uint64_t v69 = sub_100156B68((uint64_t *)&unk_1003FB7E0);
            swift_arrayDestroy(v66, 1LL, v69);
            swift_slowDealloc(v66, -1LL, -1LL);
            uint64_t v70 = v103;
            swift_arrayDestroy(v103, 1LL, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v70, -1LL, -1LL);
            swift_slowDealloc(v68, -1LL, -1LL);
          }

          else
          {
          }

          [*(id *)&v1[OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_bannerCenter] postBannerRequest:v54];
          uint64_t v71 = (void **)*(id *)&v1[v18];
          static DispatchTime.now()(v71);
          id v72 = [(id)objc_opt_self(MRSharedSettings) currentSettings];
          [v72 oneTapSuggestionInactiveTimeout];
          double v74 = v73;

          if ((~*(void *)&v74 & 0x7FF0000000000000LL) != 0)
          {
            if (v74 > -9.22337204e18)
            {
              unint64_t v103 = v71;
              if (v74 < 9.22337204e18)
              {
                *uint64_t v8 = (uint64_t)v74;
                uint64_t v76 = v106;
                uint64_t v75 = v107;
                (*(void (**)(void *, void, uint64_t))(v106 + 104))( v8,  enum case for DispatchTimeInterval.seconds(_:),  v107);
                uint64_t v77 = v108;
                + infix(_:_:)(v12, v8);
                (*(void (**)(void *, uint64_t))(v76 + 8))(v8, v75);
                unint64_t v78 = *(void (**)(char *, uint64_t))(v9 + 8);
                uint64_t v79 = v109;
                v78(v12, v109);
                uint64_t v80 = (void *)swift_allocObject(&unk_1003AD780, 40LL, 7LL);
                void v80[2] = v1;
                uint64_t v80[3] = v54;
                v80[4] = ObjectType;
                uint64_t v121 = sub_1002B13E4;
                uint64_t v122 = v80;
                Swift::String aBlock = _NSConcreteStackBlock;
                uint64_t v118 = 1107296256LL;
                uint64_t v119 = sub_100157EA8;
                uint64_t v120 = &unk_1003AD798;
                os_log_t v81 = _Block_copy(&aBlock);
                uint64_t v82 = v54;
                uint64_t v83 = v1;
                uint64_t v84 = v110;
                static DispatchQoS.unspecified.getter(v83);
                uint64_t v116 = _swiftEmptyArrayStorage;
                uint64_t v85 = sub_100156FEC( (unint64_t *)&qword_1003FADB0,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
                uint64_t v86 = sub_100156B68((uint64_t *)&unk_1003F9A70);
                uint64_t v87 = sub_1001F3AE0((unint64_t *)&qword_1003FADC0, (uint64_t *)&unk_1003F9A70);
                uint64_t v88 = v113;
                uint64_t v89 = v86;
                uint64_t v90 = v105;
                dispatch thunk of SetAlgebra.init<A>(_:)(&v116, v89, v87, v105, v85);
                uint64_t v91 = v103;
                OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v77, v84, v88, v81);
                _Block_release(v81);

                (*(void (**)(char *, uint64_t))(v114 + 8))(v88, v90);
                (*(void (**)(char *, uint64_t))(v111 + 8))(v84, v112);
                v78(v77, v79);
                swift_release(v122);
                uint64_t v92 = (void *)kMREventGroupSessionNearbyNotificationDisplayed;
                uint64_t v93 = swift_allocObject(&unk_1003AD7D0, 24LL, 7LL);
                *(void *)(v93 + swift_unknownObjectWeakDestroy(v0 + 16) = v82;
                uint64_t v121 = sub_1002B15EC;
                uint64_t v122 = (void *)v93;
                Swift::String aBlock = _NSConcreteStackBlock;
                uint64_t v118 = 1107296256LL;
                uint64_t v119 = sub_100169A74;
                uint64_t v120 = &unk_1003AD7E8;
                uint64_t v94 = _Block_copy(&aBlock);
                uint64_t v95 = v122;
                uint64_t v96 = v82;
                id v97 = v92;
                swift_release(v95);
                MRAnalyticsSendEvent(v97, 0LL, v94);

                _Block_release(v94);
                return;
              }

              goto LABEL_34;
            }
          }

          else
          {
            __break(1u);
          }

          __break(1u);
LABEL_34:
          __break(1u);
          goto LABEL_35;
        }

uint64_t sub_1002AA2C8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v22 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = *(void **)&v2[OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_queue];
  uint64_t v13 = (void *)swift_allocObject(&unk_1003AD730, 40LL, 7LL);
  v13[2] = v2;
  v13[3] = a1;
  v13[4] = a2;
  uint64_t aBlock[4] = sub_1002B13BC;
  unint64_t v25 = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_100157EA8;
  aBlock[3] = &unk_1003AD748;
  uint64_t v14 = _Block_copy(aBlock);
  id v15 = v12;
  uint64_t v16 = v2;
  uint64_t v17 = swift_bridgeObjectRetain();
  static DispatchQoS.unspecified.getter(v17);
  unsigned int v23 = _swiftEmptyArrayStorage;
  uint64_t v18 = sub_100156FEC( (unint64_t *)&qword_1003FADB0,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v19 = sub_100156B68((uint64_t *)&unk_1003F9A70);
  uint64_t v20 = sub_1001F3AE0((unint64_t *)&qword_1003FADC0, (uint64_t *)&unk_1003F9A70);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v23, v19, v20, v5, v18);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v11, v7, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return swift_release(v25);
}

void sub_1002AA520(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = v2;
  uint64_t v86 = a1;
  uint64_t ObjectType = swift_getObjectType(v2);
  uint64_t v8 = (void *)type metadata accessor for DispatchPredicate(0LL);
  uint64_t v9 = *(v8 - 1);
  __chkstk_darwin(v8);
  uint64_t v11 = (uint64_t *)((char *)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v12 = *(void **)(v5
                 + OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_queue);
  *uint64_t v11 = v12;
  (*(void (**)(void *, void, void *))(v9 + 104))(v11, enum case for DispatchPredicate.onQueue(_:), v8);
  id v13 = v12;
  LOBYTE(v12) = _dispatchPreconditionTest(_:)(v11);
  (*(void (**)(void *, void *))(v9 + 8))(v11, v8);
  if ((v12 & 1) == 0)
  {
    __break(1u);
LABEL_35:
    swift_once(&qword_1004057A0, sub_1002A8A40);
LABEL_19:
    uint64_t v48 = type metadata accessor for Logger(0LL);
    sub_10015ADAC(v48, (uint64_t)qword_1004057A8);
    swift_bridgeObjectRetain_n(a2, 2LL);
    uint64_t v50 = (os_log_s *)Logger.logObject.getter(v49);
    os_log_type_t v51 = static os_log_type_t.default.getter(v50);
    BOOL v52 = os_log_type_enabled(v50, v51);
    uint64_t v82 = ObjectType;
    id v83 = v8;
    if (v52)
    {
      uint64_t v53 = swift_slowAlloc(22LL, -1LL);
      uint64_t v81 = v4;
      uint64_t v54 = v53;
      uint64_t v80 = swift_slowAlloc(64LL, -1LL);
      uint64_t v88 = v80;
      *(_DWORD *)uint64_t v54 = 136315394;
      uint64_t v55 = _typeName(_:qualified:)(ObjectType, 0LL);
      uint64_t v87 = sub_10015ADC4(v55, v56, &v88);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v87, &v88, v54 + 4, v54 + 12);
      swift_bridgeObjectRelease();
      *(_WORD *)(v54 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v87 = sub_10015ADC4(v86, a2, &v88);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v87, &v88, v54 + 14, v54 + 22);
      swift_bridgeObjectRelease_n(a2, 3LL);
      _os_log_impl( (void *)&_mh_execute_header,  v50,  v51,  "[%s] Dismissing for session: %{public}s",  (uint8_t *)v54,  0x16u);
      uint64_t v57 = v80;
      swift_arrayDestroy(v80, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v57, -1LL, -1LL);
      uint64_t v58 = v54;
      uint64_t v4 = v81;
      swift_slowDealloc(v58, -1LL, -1LL);
    }

    else
    {

      swift_bridgeObjectRelease_n(a2, 2LL);
    }

    uint64_t v59 = (void *)objc_opt_self(&OBJC_CLASS___MRUserSettings);
    id v60 = [v59 currentSettings];
    if (v60)
    {
      uint64_t v61 = v60;
      unsigned int v62 = [v60 groupSessionNearbyBanner];

      if (v62
        && v84
        && *(_BYTE *)(v5
                    + OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_suppressBanners) == 1)
      {
        id v63 = v85;
        sub_1002AE498(v63);
      }

      id v64 = [v59 currentSettings];
      if (v64)
      {
        uint64_t v65 = v64;
        unsigned int v66 = [v64 groupSessionNearbyLockscreen];

        if (v66)
        {
          unint64_t v68 = (os_log_s *)Logger.logObject.getter(v67);
          os_log_type_t v69 = static os_log_type_t.info.getter();
          if (os_log_type_enabled(v68, v69))
          {
            uint64_t v70 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
            uint64_t v71 = swift_slowAlloc(32LL, -1LL);
            uint64_t v88 = v71;
            *(_DWORD *)uint64_t v70 = 136315138;
            uint64_t v72 = _typeName(_:qualified:)(v82, 0LL);
            uint64_t v87 = sub_10015ADC4(v72, v73, &v88);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v87, &v88, v70 + 4, v70 + 12);
            swift_bridgeObjectRelease();
            _os_log_impl( (void *)&_mh_execute_header,  v68,  v69,  "[%s] Releasing GroupSessionNearby assertion",  v70,  0xCu);
            swift_arrayDestroy(v71, 1LL, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v71, -1LL, -1LL);
            swift_slowDealloc(v70, -1LL, -1LL);
          }

          id v74 = sub_1002A8BC0();
          [v74 releaseGroupSessionNearbyAssertion];
          swift_unknownObjectRelease(v74);
        }

        uint64_t v75 = *(void **)v3;
        uint64_t v76 = *(void **)(v3 + 8);
        uint64_t v77 = *(void *)(v3 + 16);
        uint64_t v78 = *(void *)(v3 + 24);
        *(_OWORD *)uint64_t v3 = 0u;
        *(_OWORD *)(v3 + swift_unknownObjectWeakDestroy(v0 + 16) = 0u;
        sub_1002B133C(v75, v76, v77, v78);
        swift_release(v4);

        return;
      }
    }

    else
    {
      __break(1u);
    }

    __break(1u);
    return;
  }

  uint64_t v3 = v5
     + OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_discoveredSessionContext;
  uint64_t v14 = *(void **)(v5
                 + OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_discoveredSessionContext);
  if (!v14)
  {
    if (qword_1004057A0 != -1) {
      swift_once(&qword_1004057A0, sub_1002A8A40);
    }
    uint64_t v41 = type metadata accessor for Logger(0LL);
    uint64_t v42 = sub_10015ADAC(v41, (uint64_t)qword_1004057A8);
    uint64_t v39 = (os_log_s *)Logger.logObject.getter(v42);
    os_log_type_t v43 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v39, v43))
    {
      uint64_t v44 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v45 = swift_slowAlloc(32LL, -1LL);
      uint64_t v88 = v45;
      *(_DWORD *)uint64_t v44 = 136315138;
      uint64_t v46 = _typeName(_:qualified:)(ObjectType, 0LL);
      uint64_t v87 = sub_10015ADC4(v46, v47, &v88);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v87, &v88, v44 + 4, v44 + 12);
      swift_bridgeObjectRelease();
      _os_log_impl( (void *)&_mh_execute_header,  v39,  v43,  "[%s] Attempted to dismiss while no discovered session is presented",  v44,  0xCu);
      swift_arrayDestroy(v45, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v45, -1LL, -1LL);
      swift_slowDealloc(v44, -1LL, -1LL);
    }

    goto LABEL_16;
  }

  uint64_t v4 = *(void *)(v3 + 24);
  id v84 = *(id *)(v3 + 8);
  id v85 = v84;
  swift_retain(v4);
  uint64_t v8 = v14;
  id v15 = [v8 identifier];
  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  uint64_t v18 = v17;

  if (v16 == v86 && v18 == a2)
  {
    swift_bridgeObjectRelease();
LABEL_18:
    if (qword_1004057A0 == -1) {
      goto LABEL_19;
    }
    goto LABEL_35;
  }

  char v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v18, v86, a2, 0LL);
  swift_bridgeObjectRelease();
  if ((v20 & 1) != 0) {
    goto LABEL_18;
  }
  if (qword_1004057A0 != -1) {
    swift_once(&qword_1004057A0, sub_1002A8A40);
  }
  uint64_t v21 = type metadata accessor for Logger(0LL);
  sub_10015ADAC(v21, (uint64_t)qword_1004057A8);
  swift_bridgeObjectRetain_n(a2, 2LL);
  uint64_t v22 = v8;
  id v23 = v85;
  swift_retain_n(v4, 2LL);
  uint64_t v24 = v22;
  id v25 = v23;
  uint64_t v26 = (void *)Logger.logObject.getter(v25);
  os_log_type_t v27 = static os_log_type_t.error.getter();
  int v28 = v27;
  id v85 = v26;
  if (os_log_type_enabled((os_log_t)v26, v27))
  {
    uint64_t v29 = swift_slowAlloc(32LL, -1LL);
    LODWORD(v84) = v28;
    uint64_t v30 = ObjectType;
    uint64_t v31 = v29;
    id v83 = (id)swift_slowAlloc(96LL, -1LL);
    uint64_t v88 = (uint64_t)v83;
    *(_DWORD *)uint64_t v31 = 136315650;
    uint64_t v32 = _typeName(_:qualified:)(v30, 0LL);
    uint64_t v33 = v4;
    uint64_t v87 = sub_10015ADC4(v32, v34, &v88);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v87, &v88, v31 + 4, v31 + 12);
    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 12) = 2082;
    id v35 = [v24 identifier];
    uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
    unint64_t v38 = v37;

    uint64_t v87 = sub_10015ADC4(v36, v38, &v88);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v87, &v88, v31 + 14, v31 + 22);
    swift_release_n(v33, 2LL);

    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 22) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v87 = sub_10015ADC4(v86, a2, &v88);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v87, &v88, v31 + 24, v31 + 32);
    swift_bridgeObjectRelease_n(a2, 3LL);
    uint64_t v39 = (os_log_s *)v85;
    _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v85,  (os_log_type_t)v84,  "[%s] Attempted to dismiss different discovered session. Current: %{public}s, requested: %{public}s",  (uint8_t *)v31,  0x20u);
    id v40 = v83;
    swift_arrayDestroy(v83, 3LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v40, -1LL, -1LL);
    swift_slowDealloc(v31, -1LL, -1LL);
    swift_release(v33);

LABEL_16:
    return;
  }

  swift_bridgeObjectRelease_n(a2, 2LL);
  swift_release_n(v4, 3LL);
}

void sub_1002AAE3C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t ObjectType = swift_getObjectType(v3);
  uint64_t v9 = type metadata accessor for UUID(0LL);
  uint64_t v123 = *(void **)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v118 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_100156B68(&qword_1003FC438);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v129 = (char *)&v118 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v13);
  uint64_t v130 = (char *)&v118 - v15;
  if (qword_1004057A0 != -1) {
    swift_once(&qword_1004057A0, sub_1002A8A40);
  }
  uint64_t v16 = type metadata accessor for Logger(0LL);
  uint64_t v17 = sub_10015ADAC(v16, (uint64_t)qword_1004057A8);
  id v18 = a1;
  id v122 = (id)v17;
  uint64_t v19 = (os_log_s *)Logger.logObject.getter(v18);
  os_log_type_t v20 = static os_log_type_t.info.getter();
  BOOL v21 = os_log_type_enabled(v19, v20);
  uint64_t v131 = ObjectType;
  uint64_t v127 = v4;
  uint64_t v128 = a3;
  id v125 = (id)v9;
  uint64_t v126 = a2;
  uint64_t v124 = v11;
  if (v21)
  {
    uint64_t v22 = swift_slowAlloc(22LL, -1LL);
    id v23 = (void *)swift_slowAlloc(8LL, -1LL);
    uint64_t v24 = (void **)swift_slowAlloc(32LL, -1LL);
    Swift::String aBlock = v24;
    *(_DWORD *)uint64_t v22 = 136315394;
    uint64_t v25 = _typeName(_:qualified:)(ObjectType, 0LL);
    uint64_t v138 = sub_10015ADC4(v25, v26, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v138, &v139, v22 + 4, v22 + 12);
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2112;
    uint64_t v138 = (uint64_t)v18;
    id v27 = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v138, &v139, v22 + 14, v22 + 22);
    void *v23 = v18;

    _os_log_impl((void *)&_mh_execute_header, v19, v20, "[%s] displayJoinRequest: %@", (uint8_t *)v22, 0x16u);
    uint64_t v28 = sub_100156B68((uint64_t *)&unk_1003FB7E0);
    swift_arrayDestroy(v23, 1LL, v28);
    swift_slowDealloc(v23, -1LL, -1LL);
    swift_arrayDestroy(v24, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v24, -1LL, -1LL);
    swift_slowDealloc(v22, -1LL, -1LL);
  }

  else
  {
  }

  id v29 = [v18 identity];
  id v30 = [v29 displayName];

  if (v30)
  {
    id v122 = v18;
    uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
    uint64_t v33 = v32;
    id v34 = [objc_allocWithZone(UNMutableNotificationContent) init];
    [v34 setTitle:v30];

    NSString v35 = String._bridgeToObjectiveC()();
    id v36 = (id)MRLocalizedString(v35, 0LL);

    if (v36)
    {
      uint64_t v120 = v33;
      uint64_t v121 = v31;
      [v34 setBody:v36];

      NSString v37 = String._bridgeToObjectiveC()();
      id v119 = (id)objc_opt_self(&OBJC_CLASS___UNNotificationIcon);
      id v38 = [v119 iconForApplicationIdentifier:v37];

      [v34 setIcon:v38];
      uint64_t v39 = v130;
      URL.init(string:)(0xD00000000000001DLL, 0x8000000100341A40LL);
      uint64_t v40 = type metadata accessor for URL(0LL);
      uint64_t v41 = *(void *)(v40 - 8);
      uint64_t v42 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48);
      if (v42(v39, 1LL, v40) == 1)
      {
LABEL_18:
        __break(1u);
        goto LABEL_19;
      }

      URL._bridgeToObjectiveC()(v43);
      uint64_t v45 = v44;
      uint64_t v46 = *(void (**)(char *, uint64_t))(v41 + 8);
      v46(v39, v40);
      [v34 setDefaultActionURL:v45];

      NSString v47 = String._bridgeToObjectiveC()();
      [v34 setCategoryIdentifier:v47];

      [v34 setShouldBackgroundDefaultAction:1];
      id v48 = [objc_allocWithZone(UNMutableNotificationContent) init];
      NSString v49 = String._bridgeToObjectiveC()();
      NSString v50 = String._bridgeToObjectiveC()();
      id v51 = (id)MRLocalizedStringWithFormat(v49, 0LL, v50);

      if (!v51)
      {
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }

      uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)(v51);
      uint64_t v54 = v53;

      uint64_t v55 = sub_100156B68(&qword_1003FADD0);
      uint64_t v56 = swift_allocObject(v55, 72LL, 7LL);
      *(_OWORD *)(v56 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_10034BE40;
      *(void *)(v56 + 56) = &type metadata for String;
      *(void *)(v56 + 64) = sub_1002157E0();
      uint64_t v57 = v120;
      *(void *)(v56 + 32) = v121;
      *(void *)(v56 + 40) = v57;
      String.init(format:_:)(v52, v54, v56);
      swift_bridgeObjectRelease();
      NSString v58 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v48 setTitle:v58];

      NSString v59 = String._bridgeToObjectiveC()();
      id v60 = [v119 iconForApplicationIdentifier:v59];

      [v48 setIcon:v60];
      uint64_t v61 = v129;
      URL.init(string:)(0xD00000000000001DLL, 0x8000000100341A40LL);
      if (v42(v61, 1LL, v40) == 1)
      {
LABEL_20:
        __break(1u);
        return;
      }

      URL._bridgeToObjectiveC()(v62);
      id v64 = v63;
      v46(v61, v40);
      [v48 setDefaultActionURL:v64];

      NSString v65 = String._bridgeToObjectiveC()();
      [v48 setCategoryIdentifier:v65];

      id v66 = [v48 setShouldBackgroundDefaultAction:1];
      uint64_t v67 = v124;
      uint64_t v68 = UUID.init()(v66);
      uint64_t v69 = UUID.uuidString.getter(v68);
      uint64_t v71 = v70;
      uint64_t v72 = (void (*)(char *, id))v123[1];
      id v73 = v125;
      v72(v67, v125);
      swift_bridgeObjectRetain();
      id v74 = (char *)v34;
      NSString v75 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      uint64_t v76 = (void *)objc_opt_self(&OBJC_CLASS___UNNotificationRequest);
      uint64_t v77 = [v76 requestWithIdentifier:v75 content:v74 trigger:0];

      uint64_t v130 = v74;
      uint64_t v123 = v77;
      uint64_t v78 = UUID.init()([v77 setDestinations:3]);
      uint64_t v79 = UUID.uuidString.getter(v78);
      uint64_t v81 = v80;
      v72(v67, v73);
      swift_bridgeObjectRetain();
      uint64_t v82 = (char *)v48;
      NSString v83 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v84 = [v76 requestWithIdentifier:v83 content:v82 trigger:0];

      uint64_t v129 = v82;
      id v125 = v84;
      [v84 setDestinations:8];
      id v85 = v127;
      uint64_t v86 = *(void **)&v127[OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_queue];
      uint64_t v87 = (void *)swift_allocObject(&unk_1003AD618, 80LL, 7LL);
      uint64_t v88 = v122;
      v87[2] = v85;
      v87[3] = v88;
      v87[4] = v69;
      v87[5] = v71;
      v87[6] = v79;
      v87[7] = v81;
      uint64_t v89 = v128;
      v87[8] = v126;
      v87[9] = v89;
      uint64_t v90 = swift_allocObject(&unk_1003AD640, 32LL, 7LL);
      *(void *)(v90 + swift_unknownObjectWeakDestroy(v0 + 16) = sub_1002B0DE8;
      *(void *)(v90 + 24) = v87;
      id v136 = sub_1001840B4;
      uint64_t v137 = v90;
      Swift::String aBlock = _NSConcreteStackBlock;
      uint64_t v133 = 1107296256LL;
      unint64_t v134 = sub_1001B2FA0;
      uint64_t v135 = &unk_1003AD658;
      uint64_t v91 = _Block_copy(&aBlock);
      uint64_t v92 = v137;
      id v93 = v88;
      uint64_t v94 = v86;
      uint64_t v95 = v85;
      swift_retain(v89);
      swift_retain(v90);
      swift_release(v92);
      dispatch_async_and_wait(v94, v91);

      _Block_release(v91);
      LOBYTE(v91) = swift_isEscapingClosureAtFileLocation(v90, "", 117LL, 253LL, 33LL, 1LL);
      swift_release(v90);
      if ((v91 & 1) == 0)
      {
        uint64_t v96 = *(void **)&v95[OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_notificationCenter];
        uint64_t v97 = swift_allocObject(&unk_1003AD690, 32LL, 7LL);
        uint64_t v98 = v123;
        uint64_t v99 = v131;
        *(void *)(v97 + swift_unknownObjectWeakDestroy(v0 + 16) = v123;
        *(void *)(v97 + 24) = v99;
        id v136 = sub_1002B0E9C;
        uint64_t v137 = v97;
        Swift::String aBlock = _NSConcreteStackBlock;
        uint64_t v133 = 1107296256LL;
        unint64_t v134 = sub_100157E54;
        uint64_t v135 = &unk_1003AD6A8;
        id v100 = _Block_copy(&aBlock);
        uint64_t v101 = v137;
        id v102 = v98;
        swift_release(v101);
        [v96 addNotificationRequest:v102 withCompletionHandler:v100];
        _Block_release(v100);
        uint64_t v103 = swift_allocObject(&unk_1003AD6E0, 32LL, 7LL);
        id v104 = v125;
        *(void *)(v103 + swift_unknownObjectWeakDestroy(v0 + 16) = v125;
        *(void *)(v103 + 24) = v99;
        id v136 = sub_1002B0EA8;
        uint64_t v137 = v103;
        Swift::String aBlock = _NSConcreteStackBlock;
        uint64_t v133 = 1107296256LL;
        unint64_t v134 = sub_100157E54;
        uint64_t v135 = &unk_1003AD6F8;
        uint64_t v105 = _Block_copy(&aBlock);
        uint64_t v106 = v137;
        id v107 = v104;
        swift_release(v106);
        [v96 addNotificationRequest:v107 withCompletionHandler:v105];
        _Block_release(v105);
        swift_release(v87);

        return;
      }

      __break(1u);
    }

    __break(1u);
    goto LABEL_18;
  }

  id v108 = v18;
  uint64_t v109 = (os_log_s *)Logger.logObject.getter(v108);
  os_log_type_t v110 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v109, v110))
  {
    uint64_t v111 = swift_slowAlloc(22LL, -1LL);
    uint64_t v112 = (void *)swift_slowAlloc(8LL, -1LL);
    uint64_t v113 = (void **)swift_slowAlloc(32LL, -1LL);
    Swift::String aBlock = v113;
    *(_DWORD *)uint64_t v111 = 136315394;
    uint64_t v114 = _typeName(_:qualified:)(v131, 0LL);
    uint64_t v138 = sub_10015ADC4(v114, v115, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v138, &v139, v111 + 4, v111 + 12);
    swift_bridgeObjectRelease();
    *(_WORD *)(v111 + 12) = 2112;
    id v116 = [v108 identity];
    uint64_t v138 = (uint64_t)v116;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v138, &v139, v111 + 14, v111 + 22);
    void *v112 = v116;

    _os_log_impl( (void *)&_mh_execute_header,  v109,  v110,  "[%s] Can't display join request for identity: %@ with no displayName",  (uint8_t *)v111,  0x16u);
    uint64_t v117 = sub_100156B68((uint64_t *)&unk_1003FB7E0);
    swift_arrayDestroy(v112, 1LL, v117);
    swift_slowDealloc(v112, -1LL, -1LL);
    swift_arrayDestroy(v113, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v113, -1LL, -1LL);
    swift_slowDealloc(v111, -1LL, -1LL);
  }

  else
  {
  }

uint64_t sub_1002ABAB4( void *a1, int a2, void *a3, void *aBlock, uint64_t a5, uint64_t a6, void (*a7)(id, uint64_t, uint64_t))
{
  uint64_t v12 = _Block_copy(aBlock);
  uint64_t v13 = swift_allocObject(a5, 24LL, 7LL);
  *(void *)(v13 + swift_unknownObjectWeakDestroy(v0 + 16) = v12;
  id v14 = a3;
  id v15 = a1;
  a7(v14, a6, v13);

  return swift_release(v13);
}

uint64_t sub_1002ABB44(void *a1)
{
  uint64_t ObjectType = swift_getObjectType(v1);
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v20 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = *(void **)&v1[OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_queue];
  uint64_t v12 = (void *)swift_allocObject(&unk_1003AD5C8, 40LL, 7LL);
  void v12[2] = a1;
  v12[3] = v1;
  v12[4] = ObjectType;
  uint64_t aBlock[4] = sub_1002B0B78;
  id v23 = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_100157EA8;
  aBlock[3] = &unk_1003AD5E0;
  uint64_t v13 = _Block_copy(aBlock);
  id v14 = v11;
  id v15 = a1;
  static DispatchQoS.unspecified.getter(v1);
  BOOL v21 = _swiftEmptyArrayStorage;
  uint64_t v16 = sub_100156FEC( (unint64_t *)&qword_1003FADB0,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v17 = sub_100156B68((uint64_t *)&unk_1003F9A70);
  uint64_t v18 = sub_1001F3AE0((unint64_t *)&qword_1003FADC0, (uint64_t *)&unk_1003F9A70);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v21, v17, v18, v4, v16);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v10, v6, v13);
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release(v23);
}

uint64_t sub_1002ABDA0(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_100156B68(&qword_1003FC438);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for URL(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  id v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v15 = [objc_allocWithZone(MRGroupSessionToken) initWithDiscoveredSession:a1];
  id v16 = [v15 joinURLString];

  uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  uint64_t v19 = v18;

  URL.init(string:)(v17, v19);
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1LL, v11);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    sub_1002AC114((uint64_t)v14, a2 & 1, a3, a4);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }

  return result;
}

uint64_t sub_1002AC114(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v36 = a3;
  uint64_t v37 = a4;
  int v34 = a2;
  uint64_t ObjectType = swift_getObjectType(v4);
  uint64_t v38 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v41 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v39 = *(void *)(v9 - 8);
  uint64_t v40 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for URL(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v12);
  id v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v33 = *(id *)&v4[OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_queue];
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, v12);
  uint64_t v16 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v17 = (v16 + 25) & ~v16;
  unint64_t v18 = (v14 + v17 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v19 = (v18 + 23) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v20 = swift_allocObject(&unk_1003AD4D8, v19 + 8, v16 | 7);
  *(void *)(v20 + swift_unknownObjectWeakDestroy(v0 + 16) = v5;
  *(_BYTE *)(v20 + 24) = v34;
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v20 + v17, v15, v12);
  uint64_t v21 = (uint64_t *)(v20 + v18);
  uint64_t v23 = v36;
  uint64_t v22 = v37;
  uint64_t *v21 = v36;
  v21[1] = v22;
  *(void *)(v20 + v19) = ObjectType;
  uint64_t aBlock[4] = sub_1002B0858;
  uint64_t v44 = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_100157EA8;
  aBlock[3] = &unk_1003AD4F0;
  uint64_t v24 = _Block_copy(aBlock);
  id v25 = v33;
  id v26 = v5;
  uint64_t v27 = sub_1001E80BC(v23, v22);
  static DispatchQoS.unspecified.getter(v27);
  uint64_t v42 = _swiftEmptyArrayStorage;
  uint64_t v28 = sub_100156FEC( (unint64_t *)&qword_1003FADB0,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v29 = sub_100156B68((uint64_t *)&unk_1003F9A70);
  uint64_t v30 = sub_1001F3AE0((unint64_t *)&qword_1003FADC0, (uint64_t *)&unk_1003F9A70);
  uint64_t v31 = v38;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v42, v29, v30, v38, v28);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v11, v8, v24);
  _Block_release(v24);

  (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v31);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v11, v40);
  return swift_release(v44);
}

void sub_1002AC3D8(char *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v80 = a5;
  uint64_t v94 = a3;
  int v93 = a2;
  uint64_t v97 = type metadata accessor for URL(0LL);
  uint64_t v9 = *(void *)(v97 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v97);
  uint64_t v11 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v91 = *(void *)(v11 - 8);
  uint64_t v92 = v11;
  __chkstk_darwin(v11);
  uint64_t v90 = (char *)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v88 = *(void *)(v13 - 8);
  uint64_t v89 = v13;
  __chkstk_darwin(v13);
  uint64_t v87 = (char *)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for DispatchTimeInterval(0LL);
  uint64_t v83 = *(void *)(v15 - 8);
  uint64_t v84 = v15;
  __chkstk_darwin(v15);
  uint64_t v17 = (uint64_t *)((char *)&v76 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v86 = type metadata accessor for DispatchTime(0LL);
  uint64_t v82 = *(void *)(v86 - 8);
  uint64_t v18 = __chkstk_darwin(v86);
  uint64_t v20 = (char *)&v76 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v18);
  id v85 = (char *)&v76 - v21;
  if (qword_1004057A0 != -1) {
    swift_once(&qword_1004057A0, sub_1002A8A40);
  }
  uint64_t v95 = v9;
  uint64_t v22 = type metadata accessor for Logger(0LL);
  uint64_t v23 = sub_10015ADAC(v22, (uint64_t)qword_1004057A8);
  uint64_t v24 = (os_log_s *)Logger.logObject.getter(v23);
  os_log_type_t v25 = static os_log_type_t.default.getter(v24);
  BOOL v26 = os_log_type_enabled(v24, v25);
  uint64_t v78 = (char *)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v79 = a4;
  uint64_t v77 = v10;
  uint64_t v96 = a6;
  if (v26)
  {
    uint64_t v81 = a1;
    uint64_t v27 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v28 = (void **)swift_slowAlloc(32LL, -1LL);
    Swift::String aBlock = v28;
    *(_DWORD *)uint64_t v27 = 136315138;
    uint64_t v29 = _typeName(_:qualified:)(a6, 0LL);
    uint64_t v99 = (void *)sub_10015ADC4(v29, v30, (uint64_t *)&aBlock);
    a1 = v81;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v99, &aBlock, v27 + 4, v27 + 12);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "[%s] Begin banner suppression.", v27, 0xCu);
    swift_arrayDestroy(v28, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v28, -1LL, -1LL);
    swift_slowDealloc(v27, -1LL, -1LL);
  }

  a1[OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_suppressBanners] = 1;
  uint64_t v81 = (char *)*(id *)&a1[OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_queue];
  static DispatchTime.now()(v81);
  *uint64_t v17 = 15LL;
  uint64_t v32 = v83;
  uint64_t v31 = v84;
  (*(void (**)(void *, void, uint64_t))(v83 + 104))( v17,  enum case for DispatchTimeInterval.seconds(_:),  v84);
  id v33 = v85;
  + infix(_:_:)(v20, v17);
  (*(void (**)(void *, uint64_t))(v32 + 8))(v17, v31);
  int v34 = *(void (**)(char *, uint64_t))(v82 + 8);
  NSString v35 = a1;
  uint64_t v36 = v86;
  v34(v20, v86);
  uint64_t v37 = swift_allocObject(&unk_1003AD528, 32LL, 7LL);
  uint64_t v38 = v96;
  *(void *)(v37 + swift_unknownObjectWeakDestroy(v0 + 16) = v35;
  *(void *)(v37 + 24) = v38;
  id v104 = sub_1002B08D4;
  uint64_t v105 = v37;
  Swift::String aBlock = _NSConcreteStackBlock;
  uint64_t v101 = 1107296256LL;
  id v102 = sub_100157EA8;
  uint64_t v103 = &unk_1003AD540;
  uint64_t v39 = _Block_copy(&aBlock);
  id v40 = v35;
  uint64_t v41 = v87;
  static DispatchQoS.unspecified.getter(v40);
  uint64_t v99 = _swiftEmptyArrayStorage;
  uint64_t v42 = sub_100156FEC( (unint64_t *)&qword_1003FADB0,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v43 = sub_100156B68((uint64_t *)&unk_1003F9A70);
  uint64_t v44 = sub_1001F3AE0((unint64_t *)&qword_1003FADC0, (uint64_t *)&unk_1003F9A70);
  uint64_t v45 = v90;
  uint64_t v46 = v43;
  uint64_t v47 = v92;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v99, v46, v44, v92, v42);
  id v48 = v81;
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v33, v41, v45, v39);
  _Block_release(v39);

  (*(void (**)(char *, uint64_t))(v91 + 8))(v45, v47);
  (*(void (**)(char *, uint64_t))(v88 + 8))(v41, v89);
  v34(v33, v36);
  swift_release(v105);
  uint64_t v49 = sub_100156B68((uint64_t *)&unk_1003F9E80);
  uint64_t inited = swift_initStackObject(v49, &v98);
  *(_OWORD *)(inited + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_10034E150;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(FBSOpenApplicationOptionKeyActivateSuspended);
  *(void *)(inited + 40) = v51;
  *(void *)(inited + 72) = &type metadata for Bool;
  *(_BYTE *)(inited + 48) = (v93 & 1) == 0;
  *(void *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)(FBSOpenApplicationOptionKeyPayloadURL);
  *(void *)(inited + 88) = v52;
  uint64_t v53 = v97;
  *(void *)(inited + 120) = v97;
  uint64_t v54 = (char *)sub_1001627AC((void *)(inited + 96));
  uint64_t v55 = v94;
  uint64_t v56 = v95;
  uint64_t v57 = *(void (**)(char *, uint64_t, uint64_t))(v95 + 16);
  v57(v54, v94, v53);
  *(void *)(inited + 128) = static String._unconditionallyBridgeFromObjectiveC(_:)(FBSOpenApplicationOptionKeyUnlockDevice);
  *(void *)(inited + 136) = v58;
  *(void *)(inited + 168) = &type metadata for Bool;
  *(_BYTE *)(inited + 144) = 1;
  *(void *)(inited + 176) = static String._unconditionallyBridgeFromObjectiveC(_:)(FBSOpenApplicationOptionKeyPromptUnlockDevice);
  *(void *)(inited + 184) = v59;
  *(void *)(inited + 2swift_unknownObjectWeakDestroy(v0 + 16) = &type metadata for Bool;
  *(_BYTE *)(inited + 192) = 1;
  unint64_t v60 = sub_1001B7BC8(inited);
  uint64_t v61 = MRMediaRemoteCopyLocalDeviceSystemMediaApplicationDisplayID(v60);
  if (v61)
  {
    unsigned int v62 = (void *)v61;
    sub_1002ACAC4(v60);
    swift_bridgeObjectRelease();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v64 = v78;
    uint64_t v65 = v97;
    v57(v78, v55, v97);
    uint64_t v66 = *(unsigned __int8 *)(v56 + 80);
    uint64_t v67 = (v66 + 16) & ~v66;
    unint64_t v68 = (v77 + v67 + 7) & 0xFFFFFFFFFFFFFFF8LL;
    unint64_t v69 = (v68 + 23) & 0xFFFFFFFFFFFFFFF8LL;
    uint64_t v70 = swift_allocObject(&unk_1003AD578, v69 + 8, v66 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v56 + 32))(v70 + v67, v64, v65);
    uint64_t v71 = (uint64_t *)(v70 + v68);
    uint64_t v72 = v79;
    uint64_t v73 = v80;
    uint64_t *v71 = v79;
    v71[1] = v73;
    *(void *)(v70 + v69) = v96;
    id v104 = sub_1002B0AEC;
    uint64_t v105 = v70;
    Swift::String aBlock = _NSConcreteStackBlock;
    uint64_t v101 = 1107296256LL;
    id v102 = sub_100157E54;
    uint64_t v103 = &unk_1003AD590;
    id v74 = _Block_copy(&aBlock);
    uint64_t v75 = v105;
    sub_1001E80BC(v72, v73);
    swift_release(v75);
    sub_10013B904(v62, (uint64_t)isa, v74);
    _Block_release(v74);
  }

  else
  {
    __break(1u);
  }

uint64_t sub_1002ACAC4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    sub_100156B68(&qword_1003F9F00);
    uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)(v2);
  }

  else
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
  }

  uint64_t v29 = a1 + 64;
  uint64_t v4 = -1LL << *(_BYTE *)(a1 + 32);
  if (-v4 < 64) {
    uint64_t v5 = ~(-1LL << -(char)v4);
  }
  else {
    uint64_t v5 = -1LL;
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v28 = (unint64_t)(63 - v4) >> 6;
  uint64_t v7 = (char *)(v3 + 8);
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain(v3);
  int64_t v9 = 0LL;
  while (1)
  {
    if (v6)
    {
      unint64_t v12 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v13 = v12 | (v9 << 6);
      goto LABEL_28;
    }

    int64_t v14 = v9 + 1;
    if (__OFADD__(v9, 1LL))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }

    if (v14 >= v28) {
      goto LABEL_37;
    }
    unint64_t v15 = *(void *)(v29 + 8 * v14);
    int64_t v16 = v9 + 1;
    if (!v15)
    {
      int64_t v16 = v9 + 2;
      if (v9 + 2 >= v28) {
        goto LABEL_37;
      }
      unint64_t v15 = *(void *)(v29 + 8 * v16);
      if (!v15)
      {
        int64_t v16 = v9 + 3;
        if (v9 + 3 >= v28) {
          goto LABEL_37;
        }
        unint64_t v15 = *(void *)(v29 + 8 * v16);
        if (!v15)
        {
          int64_t v16 = v9 + 4;
          if (v9 + 4 >= v28) {
            goto LABEL_37;
          }
          unint64_t v15 = *(void *)(v29 + 8 * v16);
          if (!v15) {
            break;
          }
        }
      }
    }

void sub_1002ACE88(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v39 = a3;
  uint64_t v9 = type metadata accessor for URL(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (a1)
  {
    swift_errorRetain(a1);
    if (qword_1004057A0 != -1) {
      swift_once(&qword_1004057A0, sub_1002A8A40);
    }
    uint64_t v13 = type metadata accessor for Logger(0LL);
    sub_10015ADAC(v13, (uint64_t)qword_1004057A8);
    swift_errorRetain(a1);
    uint64_t v14 = swift_errorRetain(a1);
    unint64_t v15 = (os_log_s *)Logger.logObject.getter(v14);
    os_log_type_t v16 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = swift_slowAlloc(22LL, -1LL);
      uint64_t v18 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
      uint64_t v19 = swift_slowAlloc(32LL, -1LL);
      uint64_t v41 = v19;
      *(_DWORD *)uint64_t v17 = 136315394;
      uint64_t v20 = _typeName(_:qualified:)(a5, 0LL);
      uint64_t v40 = sub_10015ADC4(v20, v21, &v41);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41, v17 + 4, v17 + 12);
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2114;
      swift_errorRetain(a1);
      uint64_t v22 = _swift_stdlib_bridgeErrorToNSError(a1);
      uint64_t v40 = v22;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41, v17 + 14, v17 + 22);
      *uint64_t v18 = v22;
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl( (void *)&_mh_execute_header,  v15,  v16,  "[%s] Failed to launch music with error: %{public}@",  (uint8_t *)v17,  0x16u);
      uint64_t v23 = sub_100156B68((uint64_t *)&unk_1003FB7E0);
      swift_arrayDestroy(v18, 1LL, v23);
      swift_slowDealloc(v18, -1LL, -1LL);
      swift_arrayDestroy(v19, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v19, -1LL, -1LL);
      swift_slowDealloc(v17, -1LL, -1LL);

      swift_errorRelease(a1);
      if (!v39) {
        return;
      }
LABEL_15:
      v39(a1);
      return;
    }

    swift_errorRelease(a1);
    swift_errorRelease(a1);
    swift_errorRelease(a1);

    if (v39) {
      goto LABEL_15;
    }
  }

  else
  {
    if (qword_1004057A0 != -1) {
      swift_once(&qword_1004057A0, sub_1002A8A40);
    }
    uint64_t v24 = type metadata accessor for Logger(0LL);
    sub_10015ADAC(v24, (uint64_t)qword_1004057A8);
    uint64_t v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, v9);
    BOOL v26 = (os_log_s *)Logger.logObject.getter(v25);
    os_log_type_t v27 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = swift_slowAlloc(22LL, -1LL);
      uint64_t v38 = a4;
      uint64_t v29 = v28;
      uint64_t v37 = swift_slowAlloc(64LL, -1LL);
      uint64_t v41 = v37;
      *(_DWORD *)uint64_t v29 = 136315394;
      uint64_t v30 = _typeName(_:qualified:)(a5, 0LL);
      uint64_t v40 = sub_10015ADC4(v30, v31, &v41);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41, v29 + 4, v29 + 12);
      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 12) = 2082;
      uint64_t v32 = sub_100156FEC( &qword_1003FD9C8,  (uint64_t (*)(uint64_t))&type metadata accessor for URL,  (uint64_t)&protocol conformance descriptor for URL);
      uint64_t v33 = dispatch thunk of CustomStringConvertible.description.getter(v9, v32);
      uint64_t v40 = sub_10015ADC4(v33, v34, &v41);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41, v29 + 14, v29 + 22);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      _os_log_impl( (void *)&_mh_execute_header,  v26,  v27,  "[%s] Launched music with URL: %{public}s",  (uint8_t *)v29,  0x16u);
      uint64_t v35 = v37;
      swift_arrayDestroy(v37, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v35, -1LL, -1LL);
      swift_slowDealloc(v29, -1LL, -1LL);
    }

    else
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }

    if (v39) {
      goto LABEL_15;
    }
  }

void sub_1002AD320(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t ObjectType = swift_getObjectType(v4);
  uint64_t v9 = sub_100156B68(&qword_1003FC438);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for URL(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  unint64_t v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (a3 == 1)
  {
    uint64_t v16 = v4
        + OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_discoveredSessionContext;
    uint64_t v17 = *(void **)(v4
                   + OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_discoveredSessionContext);
    if (v17)
    {
      uint64_t v47 = ObjectType;
      uint64_t v18 = *(void *)(v16 + 24);
      uint64_t v19 = *(void **)(v16 + 8);
      uint64_t v20 = qword_1004057A0;
      id v21 = v17;
      id v48 = v19;
      swift_retain(v18);
      if (v20 != -1) {
        swift_once(&qword_1004057A0, sub_1002A8A40);
      }
      uint64_t v22 = type metadata accessor for Logger(0LL);
      uint64_t v23 = sub_10015ADAC(v22, (uint64_t)qword_1004057A8);
      uint64_t v24 = (os_log_s *)Logger.logObject.getter(v23);
      os_log_type_t v25 = static os_log_type_t.default.getter(v24);
      if (os_log_type_enabled(v24, v25))
      {
        id v46 = v21;
        BOOL v26 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v44 = swift_slowAlloc(32LL, -1LL);
        uint64_t v50 = v44;
        uint64_t v45 = v18;
        *(_DWORD *)BOOL v26 = 136315138;
        uint64_t v43 = v26 + 4;
        uint64_t v27 = _typeName(_:qualified:)(v47, 0LL);
        uint64_t v49 = sub_10015ADC4(v27, v28, &v50);
        uint64_t v18 = v45;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, &v50, v43, v26 + 12);
        id v21 = v46;
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v24, v25, "[%s] Launch Music for banner tap.", v26, 0xCu);
        uint64_t v29 = v44;
        swift_arrayDestroy(v44, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v29, -1LL, -1LL);
        swift_slowDealloc(v26, -1LL, -1LL);
      }

      id v30 = [objc_allocWithZone(MRGroupSessionToken) initWithDiscoveredSession:v21];
      id v31 = [v30 joinURLString];

      uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
      uint64_t v34 = v33;

      URL.init(string:)(v32, v34);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1LL, v12) == 1)
      {
        __break(1u);
      }

      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
        sub_1002AC114((uint64_t)v15, 1, 0LL, 0LL);
        (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
        swift_release(v18);
      }
    }

    else
    {
      if (qword_1004057A0 != -1) {
        swift_once(&qword_1004057A0, sub_1002A8A40);
      }
      uint64_t v35 = type metadata accessor for Logger(0LL);
      sub_10015ADAC(v35, (uint64_t)qword_1004057A8);
      swift_bridgeObjectRetain_n(a2, 2LL);
      uint64_t v37 = (os_log_s *)Logger.logObject.getter(v36);
      os_log_type_t v38 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v37, v38))
      {
        uint64_t v39 = swift_slowAlloc(22LL, -1LL);
        uint64_t v40 = swift_slowAlloc(64LL, -1LL);
        uint64_t v50 = v40;
        *(_DWORD *)uint64_t v39 = 136315394;
        uint64_t v41 = _typeName(_:qualified:)(ObjectType, 0LL);
        uint64_t v49 = sub_10015ADC4(v41, v42, &v50);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, &v50, v39 + 4, v39 + 12);
        swift_bridgeObjectRelease();
        *(_WORD *)(v39 + 12) = 2082;
        swift_bridgeObjectRetain();
        uint64_t v49 = sub_10015ADC4(a1, a2, &v50);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, &v50, v39 + 14, v39 + 22);
        swift_bridgeObjectRelease_n(a2, 3LL);
        _os_log_impl( (void *)&_mh_execute_header,  v37,  v38,  "[%s] Got banner tap for request: %{public}s but have no context",  (uint8_t *)v39,  0x16u);
        swift_arrayDestroy(v40, 2LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v40, -1LL, -1LL);
        swift_slowDealloc(v39, -1LL, -1LL);
      }

      else
      {

        swift_bridgeObjectRelease_n(a2, 2LL);
      }
    }
  }

uint64_t sub_1002AD84C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType(v2);
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v21 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = *(void **)&v2[OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_queue];
  uint64_t v13 = (void *)swift_allocObject(&unk_1003AD488, 40LL, 7LL);
  v13[2] = v2;
  v13[3] = a1;
  v13[4] = ObjectType;
  uint64_t aBlock[4] = sub_1002B00F4;
  uint64_t v24 = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_100157EA8;
  aBlock[3] = &unk_1003AD4A0;
  uint64_t v14 = _Block_copy(aBlock);
  id v15 = v12;
  uint64_t v16 = v2;
  static DispatchQoS.unspecified.getter(a1);
  uint64_t v22 = _swiftEmptyArrayStorage;
  uint64_t v17 = sub_100156FEC( (unint64_t *)&qword_1003FADB0,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v18 = sub_100156B68((uint64_t *)&unk_1003F9A70);
  uint64_t v19 = sub_1001F3AE0((unint64_t *)&qword_1003FADC0, (uint64_t *)&unk_1003F9A70);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v22, v18, v19, v5, v17);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v11, v7, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return swift_release(v24);
}

uint64_t sub_1002ADB3C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType(v3);
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v44 = *(void *)(v12 - 8);
  uint64_t v45 = v12;
  __chkstk_darwin(v12);
  uint64_t v43 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_1004057A0 != -1) {
    swift_once(&qword_1004057A0, sub_1002A8A40);
  }
  uint64_t v14 = type metadata accessor for Logger(0LL);
  sub_10015ADAC(v14, (uint64_t)qword_1004057A8);
  swift_bridgeObjectRetain_n(a3, 2LL);
  uint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
  os_log_type_t v17 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc(32LL, -1LL);
    uint64_t v41 = v8;
    uint64_t v19 = v18;
    uint64_t v20 = swift_slowAlloc(96LL, -1LL);
    uint64_t v40 = v9;
    uint64_t v21 = v20;
    aBlock[0] = v20;
    *(_DWORD *)uint64_t v19 = 136315650;
    uint64_t v39 = v11;
    uint64_t v22 = _typeName(_:qualified:)(ObjectType, 0LL);
    id v46 = (void *)sub_10015ADC4(v22, v23, aBlock);
    uint64_t v38 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, aBlock, v19 + 4, v19 + 12);
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2080;
    id v46 = (void *)sub_10015ADC4(0xD00000000000002ELL, 0x80000001003419E0LL, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, aBlock, v19 + 14, v19 + 22);
    *(_WORD *)(v19 + 22) = 2080;
    uint64_t v11 = v39;
    swift_bridgeObjectRetain();
    id v46 = (void *)sub_10015ADC4(a2, a3, aBlock);
    a1 = v38;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, aBlock, v19 + 24, v19 + 32);
    swift_bridgeObjectRelease_n(a3, 3LL);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "[%s] %s - %s", (uint8_t *)v19, 0x20u);
    swift_arrayDestroy(v21, 3LL, (char *)&type metadata for Any + 8);
    uint64_t v24 = v21;
    uint64_t v9 = v40;
    swift_slowDealloc(v24, -1LL, -1LL);
    uint64_t v25 = v19;
    uint64_t v8 = v41;
    swift_slowDealloc(v25, -1LL, -1LL);
  }

  else
  {

    swift_bridgeObjectRelease_n(a3, 2LL);
  }

  BOOL v26 = v42;
  uint64_t v27 = *(void **)&v42[OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_queue];
  unint64_t v28 = (void *)swift_allocObject(&unk_1003AD438, 56LL, 7LL);
  v28[2] = v26;
  v28[3] = a2;
  v28[4] = a3;
  v28[5] = a1;
  v28[6] = ObjectType;
  uint64_t aBlock[4] = (uint64_t)sub_1002AFBC8;
  id v48 = v28;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = (uint64_t)sub_100157EA8;
  aBlock[3] = (uint64_t)&unk_1003AD450;
  uint64_t v29 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  id v30 = v27;
  id v31 = v26;
  uint64_t v32 = v43;
  static DispatchQoS.unspecified.getter(v31);
  id v46 = _swiftEmptyArrayStorage;
  uint64_t v33 = sub_100156FEC( (unint64_t *)&qword_1003FADB0,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v34 = sub_100156B68((uint64_t *)&unk_1003F9A70);
  uint64_t v35 = sub_1001F3AE0((unint64_t *)&qword_1003FADC0, (uint64_t *)&unk_1003F9A70);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v46, v34, v35, v8, v33);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v32, v11, v29);
  _Block_release(v29);

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v45);
  return swift_release(v48);
}

void sub_1002ADF58(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v50 = a5;
  uint64_t v11 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (uint64_t *)((char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v15 = *(void **)(a1
                 + OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_queue);
  void *v14 = v15;
  (*(void (**)(void *, void, uint64_t))(v12 + 104))(v14, enum case for DispatchPredicate.onQueue(_:), v11);
  id v16 = v15;
  uint64_t v17 = _dispatchPreconditionTest(_:)(v14);
  (*(void (**)(void *, uint64_t))(v12 + 8))(v14, v11);
  if ((v17 & 1) == 0)
  {
    __break(1u);
    goto LABEL_14;
  }

  uint64_t v18 = (uint64_t *)(a1
                  + OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_ongoingNotifications);
  swift_beginAccess( a1 + OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_ongoingNotifications,  v53,  0LL,  0LL);
  uint64_t v19 = sub_1002AFF94(*v18, a2, a3);
  if (v19)
  {
    uint64_t v6 = (void *)v19;
    uint64_t v17 = v20;
    uint64_t v5 = v21;
    if (qword_1004057A0 == -1)
    {
LABEL_4:
      uint64_t v22 = type metadata accessor for Logger(0LL);
      sub_10015ADAC(v22, (uint64_t)qword_1004057A8);
      id v23 = v6;
      swift_bridgeObjectRetain_n(v17, 2LL);
      swift_retain_n(v5, 2LL);
      id v24 = v23;
      uint64_t v25 = (os_log_s *)Logger.logObject.getter(v24);
      os_log_type_t v26 = static os_log_type_t.info.getter();
      int v27 = v26;
      if (os_log_type_enabled(v25, v26))
      {
        uint64_t v28 = swift_slowAlloc(32LL, -1LL);
        id v46 = (void *)swift_slowAlloc(8LL, -1LL);
        uint64_t v48 = swift_slowAlloc(32LL, -1LL);
        v52[0] = v48;
        *(_DWORD *)uint64_t v28 = 136315650;
        uint64_t v49 = v5;
        uint64_t v29 = _typeName(_:qualified:)(v50, 0LL);
        int v47 = v27;
        uint64_t v31 = sub_10015ADC4(v29, v30, v52);
        uint64_t v50 = v17;
        uint64_t v51 = v31;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, v52, v28 + 4, v28 + 12);
        swift_bridgeObjectRelease();
        *(_WORD *)(v28 + 12) = 2048;
        uint64_t v51 = a4;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, v52, v28 + 14, v28 + 22);
        *(_WORD *)(v28 + 22) = 2112;
        uint64_t v51 = (uint64_t)v24;
        id v32 = v24;
        uint64_t v5 = v49;
        uint64_t v33 = v50;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, v52, v28 + 24, v28 + 32);
        uint64_t v34 = v46;
        *id v46 = v6;
        swift_release_n(v5, 2LL);
        swift_bridgeObjectRelease_n(v33, 2LL);

        _os_log_impl( (void *)&_mh_execute_header,  v25,  (os_log_type_t)v47,  "[%s] Received notification response: %ld for join request: %@",  (uint8_t *)v28,  0x20u);
        uint64_t v35 = sub_100156B68((uint64_t *)&unk_1003FB7E0);
        swift_arrayDestroy(v34, 1LL, v35);
        swift_slowDealloc(v34, -1LL, -1LL);
        uint64_t v36 = v48;
        swift_arrayDestroy(v48, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v36, -1LL, -1LL);
        swift_slowDealloc(v28, -1LL, -1LL);
      }

      else
      {

        swift_release_n(v5, 2LL);
        swift_bridgeObjectRelease_n(v17, 2LL);
      }

      sub_1002AE8FC(v24);
      sub_1002AECB8(v24, a4);
      swift_release(v5);
      swift_bridgeObjectRelease();

      return;
    }

id sub_1002AE498(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType(v2);
  uint64_t v5 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (uint64_t *)((char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v9 = *(void **)(v2
                + OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_queue);
  *uint64_t v8 = v9;
  (*(void (**)(void *, void, uint64_t))(v6 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v5);
  id v10 = v9;
  LOBYTE(v9) = _dispatchPreconditionTest(_:)(v8);
  (*(void (**)(void *, uint64_t))(v6 + 8))(v8, v5);
  if ((v9 & 1) != 0)
  {
    if (qword_1004057A0 == -1) {
      goto LABEL_3;
    }
  }

  else
  {
    __break(1u);
  }

  swift_once(&qword_1004057A0, sub_1002A8A40);
LABEL_3:
  uint64_t v11 = type metadata accessor for Logger(0LL);
  sub_10015ADAC(v11, (uint64_t)qword_1004057A8);
  id v12 = a1;
  uint64_t v13 = (os_log_s *)Logger.logObject.getter(v12);
  os_log_type_t v14 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc(22LL, -1LL);
    uint64_t v16 = swift_slowAlloc(8LL, -1LL);
    uint64_t v26 = v2;
    uint64_t v17 = (void *)v16;
    uint64_t v18 = swift_slowAlloc(32LL, -1LL);
    uint64_t v28 = v18;
    *(_DWORD *)uint64_t v15 = 136315394;
    uint64_t v19 = _typeName(_:qualified:)(ObjectType, 0LL);
    uint64_t v27 = sub_10015ADC4(v19, v20, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, &v28, v15 + 4, v15 + 12);
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2114;
    uint64_t v27 = (uint64_t)v12;
    id v21 = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, &v28, v15 + 14, v15 + 22);
    *uint64_t v17 = v12;

    _os_log_impl((void *)&_mh_execute_header, v13, v14, "[%s] Dismissing banner: %{public}@", (uint8_t *)v15, 0x16u);
    uint64_t v22 = sub_100156B68((uint64_t *)&unk_1003FB7E0);
    swift_arrayDestroy(v17, 1LL, v22);
    id v23 = v17;
    uint64_t v2 = v26;
    swift_slowDealloc(v23, -1LL, -1LL);
    swift_arrayDestroy(v18, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1LL, -1LL);
    swift_slowDealloc(v15, -1LL, -1LL);
  }

  else
  {
  }

  return [*(id *)(v2 + OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_bannerCenter) dismissAllBannerRequests];
}

uint64_t sub_1002AE764(id a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void **)type metadata accessor for DispatchPredicate(0LL);
  uint64_t v10 = (uint64_t)*(v9 - 1);
  __chkstk_darwin(v9);
  id v12 = &v21[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = *(void **)(v4
                 + OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_queue);
  *id v12 = v13;
  (*(void (**)(void *, void, void **))(v10 + 104))( v12,  enum case for DispatchPredicate.onQueue(_:),  v9);
  id v14 = v13;
  LOBYTE(v13) = _dispatchPreconditionTest(_:)(v12);
  (*(void (**)(void *, void **))(v10 + 8))(v12, v9);
  if ((v13 & 1) != 0)
  {
    uint64_t v9 = (void **)(v4
                   + OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_ongoingNotifications);
    swift_beginAccess( v4 + OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_ongoingNotifications,  v21,  33LL,  0LL);
    id v12 = *v9;
    a1 = a1;
    swift_bridgeObjectRetain();
    swift_retain(a4);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v12);
    *uint64_t v9 = v12;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0) {
      goto LABEL_3;
    }
  }

  else
  {
    __break(1u);
  }

  id v12 = sub_1002AF498(0LL, v12[2] + 1LL, 1, v12);
  *uint64_t v9 = v12;
LABEL_3:
  unint64_t v17 = v12[2];
  unint64_t v16 = v12[3];
  if (v17 >= v16 >> 1)
  {
    id v12 = sub_1002AF498((void *)(v16 > 1), v17 + 1, 1, v12);
    *uint64_t v9 = v12;
  }

  void v12[2] = v17 + 1;
  uint64_t v18 = &v12[4 * v17];
  v18[4] = a1;
  v18[5] = a2;
  v18[6] = a3;
  v18[7] = a4;
  return swift_endAccess(v21);
}

void sub_1002AE8FC(void *a1)
{
  uint64_t ObjectType = swift_getObjectType(v1);
  uint64_t v4 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v36[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v8 = OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_queue;
  uint64_t v9 = *(void **)(v1
                + OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_queue);
  *uint64_t v7 = v9;
  uint64_t v10 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v11 = *(void (**)(void *, uint64_t, uint64_t))(v5 + 104);
  v11(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  id v12 = v9;
  LOBYTE(v9) = _dispatchPreconditionTest(_:)(v7);
  uint64_t v13 = *(void (**)(void *, uint64_t))(v5 + 8);
  v13(v7, v4);
  if ((v9 & 1) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }

  id v14 = *(void **)(v1 + v8);
  *uint64_t v7 = v14;
  v11(v7, v10, v4);
  id v15 = v14;
  char v16 = _dispatchPreconditionTest(_:)(v7);
  v13(v7, v4);
  if ((v16 & 1) == 0)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    swift_once(&qword_1004057A0, sub_1002A8A40);
    goto LABEL_6;
  }

  swift_beginAccess( v1 + OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_ongoingNotifications,  v37,  0LL,  0LL);
  uint64_t v7 = a1;
  uint64_t v17 = swift_bridgeObjectRetain();
  id v18 = sub_1002AF89C(v17, v7);
  uint64_t v20 = v19;
  swift_bridgeObjectRelease();

  if (v18)
  {
    id v21 = *(void **)(v1
                   + OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_notificationCenter);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    [v21 removePendingNotificationRequestsWithIdentifiers:isa];

    Class v23 = Array._bridgeToObjectiveC()().super.isa;
    [v21 removeDeliveredNotificationsWithIdentifiers:v23];
    swift_release(v20);
    swift_bridgeObjectRelease();

    return;
  }

  if (qword_1004057A0 != -1) {
    goto LABEL_11;
  }
LABEL_6:
  uint64_t v24 = type metadata accessor for Logger(0LL);
  sub_10015ADAC(v24, (uint64_t)qword_1004057A8);
  uint64_t v25 = v7;
  uint64_t v26 = (os_log_s *)Logger.logObject.getter(v25);
  os_log_type_t v27 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = swift_slowAlloc(22LL, -1LL);
    uint64_t v29 = (void *)swift_slowAlloc(8LL, -1LL);
    uint64_t v30 = swift_slowAlloc(32LL, -1LL);
    v36[0] = v30;
    *(_DWORD *)uint64_t v28 = 136315394;
    uint64_t v31 = _typeName(_:qualified:)(ObjectType, 0LL);
    uint64_t v35 = sub_10015ADC4(v31, v32, v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, v36, v28 + 4, v28 + 12);
    swift_bridgeObjectRelease();
    *(_WORD *)(v28 + 12) = 2112;
    uint64_t v35 = (uint64_t)v25;
    uint64_t v33 = v25;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, v36, v28 + 14, v28 + 22);
    *uint64_t v29 = v25;

    _os_log_impl( (void *)&_mh_execute_header,  v26,  v27,  "[%s] Received request to dismiss notifications for unknown request: %@",  (uint8_t *)v28,  0x16u);
    uint64_t v34 = sub_100156B68((uint64_t *)&unk_1003FB7E0);
    swift_arrayDestroy(v29, 1LL, v34);
    swift_slowDealloc(v29, -1LL, -1LL);
    swift_arrayDestroy(v30, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v30, -1LL, -1LL);
    swift_slowDealloc(v28, -1LL, -1LL);
  }

  else
  {
  }

void sub_1002AECB8(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t ObjectType = swift_getObjectType(v3);
  uint64_t v7 = (void *)type metadata accessor for DispatchPredicate(0LL);
  uint64_t v8 = *(v7 - 1);
  __chkstk_darwin(v7);
  uint64_t v10 = (uint64_t *)((char *)v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v11 = *(void **)(v3
                 + OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_queue);
  *uint64_t v10 = v11;
  (*(void (**)(void *, void, void *))(v8 + 104))(v10, enum case for DispatchPredicate.onQueue(_:), v7);
  id v12 = v11;
  LOBYTE(v11) = _dispatchPreconditionTest(_:)(v10);
  (*(void (**)(void *, void *))(v8 + 8))(v10, v7);
  if ((v11 & 1) != 0)
  {
    uint64_t v13 = v3
        + OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_ongoingNotifications;
    swift_beginAccess(v13, v39, 0LL, 0LL);
    uint64_t v7 = a1;
    uint64_t v14 = swift_bridgeObjectRetain();
    unint64_t v15 = sub_1002AFA30(v14, v7);
    char v17 = v16;
    swift_bridgeObjectRelease();

    if ((v17 & 1) != 0)
    {
      if (qword_1004057A0 == -1) {
        goto LABEL_7;
      }
      goto LABEL_13;
    }

    if ((v15 & 0x8000000000000000LL) == 0)
    {
      if (v15 < *(void *)(*(void *)v13 + 16LL))
      {
        uint64_t v18 = *(void *)v13 + 32 * v15;
        uint64_t v20 = *(void (**)(uint64_t))(v18 + 48);
        uint64_t v19 = *(void *)(v18 + 56);
        id v21 = *(id *)(v18 + 32);
        swift_bridgeObjectRetain();
        swift_retain(v19);
        v20(a2);
        swift_beginAccess(v13, v36, 33LL, 0LL);
        uint64_t v22 = (void *)sub_1002AF3A4(v15);
        uint64_t v24 = v23;
        swift_endAccess(v36);
        swift_release(v19);
        swift_bridgeObjectRelease();

        swift_release(v24);
        swift_bridgeObjectRelease();

        return;
      }

      goto LABEL_12;
    }
  }

  else
  {
    __break(1u);
  }

  __break(1u);
LABEL_12:
  __break(1u);
LABEL_13:
  swift_once(&qword_1004057A0, sub_1002A8A40);
LABEL_7:
  uint64_t v25 = type metadata accessor for Logger(0LL);
  sub_10015ADAC(v25, (uint64_t)qword_1004057A8);
  uint64_t v26 = v7;
  os_log_type_t v27 = (os_log_s *)Logger.logObject.getter(v26);
  os_log_type_t v28 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = swift_slowAlloc(22LL, -1LL);
    uint64_t v30 = (void *)swift_slowAlloc(8LL, -1LL);
    uint64_t v31 = swift_slowAlloc(32LL, -1LL);
    v36[0] = v31;
    *(_DWORD *)uint64_t v29 = 136315394;
    uint64_t v32 = _typeName(_:qualified:)(ObjectType, 0LL);
    uint64_t v37 = sub_10015ADC4(v32, v33, v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38, v29 + 4, v29 + 12);
    swift_bridgeObjectRelease();
    *(_WORD *)(v29 + 12) = 2112;
    uint64_t v37 = (uint64_t)v26;
    uint64_t v34 = v26;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38, v29 + 14, v29 + 22);
    *uint64_t v30 = v26;

    _os_log_impl( (void *)&_mh_execute_header,  v27,  v28,  "[%s] Received request to dismiss notifications for unknown request: %@",  (uint8_t *)v29,  0x16u);
    uint64_t v35 = sub_100156B68((uint64_t *)&unk_1003FB7E0);
    swift_arrayDestroy(v30, 1LL, v35);
    swift_slowDealloc(v30, -1LL, -1LL);
    swift_arrayDestroy(v31, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v31, -1LL, -1LL);
    swift_slowDealloc(v29, -1LL, -1LL);
  }

  else
  {
  }

uint64_t destroy for GroupSessionUIManagerImplementation.NotificationContext(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 24));
}

uint64_t initializeWithCopy for GroupSessionUIManagerImplementation.NotificationContext( uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 24);
  __int128 v7 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 8) = v7;
  *(void *)(a1 + 24) = v4;
  id v5 = v3;
  swift_bridgeObjectRetain(v7);
  swift_retain(v4);
  return a1;
}

uint64_t assignWithCopy for GroupSessionUIManagerImplementation.NotificationContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease(v8);
  uint64_t v10 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v10;
  *(void *)(a1 + 24) = v9;
  swift_retain(v9);
  swift_release(v11);
  return a1;
}

uint64_t assignWithTake for GroupSessionUIManagerImplementation.NotificationContext(uint64_t a1, _OWORD *a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease(v4);
  uint64_t v5 = *(void *)(a1 + 24);
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = a2[1];
  swift_release(v5);
  return a1;
}

ValueMetadata *type metadata accessor for GroupSessionUIManagerImplementation.NotificationContext()
{
  return &type metadata for GroupSessionUIManagerImplementation.NotificationContext;
}

uint64_t destroy for GroupSessionUIManagerImplementation.DiscoveredSessionContext(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 24));
}

uint64_t initializeWithCopy for GroupSessionUIManagerImplementation.DiscoveredSessionContext( uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 24);
  __int128 v8 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 8) = v8;
  *(void *)(a1 + 24) = v4;
  id v5 = v3;
  id v6 = (id)v8;
  swift_retain(v4);
  return a1;
}

uint64_t assignWithCopy for GroupSessionUIManagerImplementation.DiscoveredSessionContext( uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void **)(a1 + 8);
  __int128 v8 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v8;
  id v9 = v8;

  uint64_t v11 = *(void *)(a2 + 16);
  uint64_t v10 = *(void *)(a2 + 24);
  uint64_t v12 = *(void *)(a1 + 24);
  *(void *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v11;
  *(void *)(a1 + 24) = v10;
  swift_retain(v10);
  swift_release(v12);
  return a1;
}

uint64_t assignWithTake for GroupSessionUIManagerImplementation.DiscoveredSessionContext( uint64_t a1, _OWORD *a2)
{
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  uint64_t v5 = *(void *)(a1 + 24);
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = a2[1];
  swift_release(v5);
  return a1;
}

uint64_t _s12mediaremoted35GroupSessionUIManagerImplementationC24DiscoveredSessionContextVwet_0( uint64_t *a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *((_BYTE *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  return (v2 + 1);
}

uint64_t sub_1002AF354(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + swift_unknownObjectWeakDestroy(v0 + 16) = 0LL;
    *(void *)(result + 24) = 0LL;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0LL;
    if (a3 < 0) {
      *(_BYTE *)(result + 32) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for GroupSessionUIManagerImplementation.DiscoveredSessionContext()
{
  return &type metadata for GroupSessionUIManagerImplementation.DiscoveredSessionContext;
}

uint64_t sub_1002AF3A4(unint64_t a1)
{
  uint64_t v3 = (void *)*v1;
  if ((swift_isUniquelyReferenced_nonNull_native(*v1) & 1) == 0) {
    uint64_t v3 = sub_1002AF5A4(v3);
  }
  unint64_t v4 = v3[2];
  if (v4 <= a1)
  {
    __break(1u);
  }

  else
  {
    unint64_t v5 = v4 - 1;
    uint64_t v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      uint64_t v7 = &v3[4 * a1];
      uint64_t v8 = v7[4];
      memmove(v7 + 4, v7 + 8, 32 * v6);
      v3[2] = v5;
      *uint64_t v1 = v3;
      return v8;
    }
  }

  char v10 = 2;
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.moveInitialize with negative count",  55LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  v10,  1046LL,  0);
  __break(1u);
  return result;
}

void *sub_1002AF498(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }

  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if (v7 + 0x4000000000000000LL >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      uint64_t v10 = sub_100156B68(&qword_1003FD9C0);
      uint64_t v11 = (void *)swift_allocObject(v10, 32 * v9 + 32, 7LL);
      int64_t v12 = j__malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 1;
      }
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 5);
      uint64_t v14 = v11 + 4;
      if ((v5 & 1) != 0) {
        goto LABEL_15;
      }
    }

    else
    {
      uint64_t v11 = _swiftEmptyArrayStorage;
      uint64_t v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[4 * v8 + 4]) {
          memmove(v14, a4 + 4, 32 * v8);
        }
        a4[2] = 0LL;
        goto LABEL_24;
      }
    }

    sub_1002AF7AC(0LL, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }

  __break(1u);
  return result;
}

void *sub_1002AF5A4(void *a1)
{
  return sub_1002AF498(0LL, a1[2], 0, a1);
}

uint64_t sub_1002AF5B8()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v16 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = *(void **)&v0[OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_queue];
  uint64_t v9 = swift_allocObject(&unk_1003AD988, 24LL, 7LL);
  *(void *)(v9 + swift_unknownObjectWeakDestroy(v0 + 16) = v0;
  uint64_t aBlock[4] = sub_1002B20C4;
  uint64_t v19 = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_100157EA8;
  aBlock[3] = &unk_1003AD9A0;
  uint64_t v10 = _Block_copy(aBlock);
  id v11 = v8;
  static DispatchQoS.unspecified.getter(v0);
  char v17 = _swiftEmptyArrayStorage;
  uint64_t v12 = sub_100156FEC( (unint64_t *)&qword_1003FADB0,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v13 = sub_100156B68((uint64_t *)&unk_1003F9A70);
  uint64_t v14 = sub_1001F3AE0((unint64_t *)&qword_1003FADC0, (uint64_t *)&unk_1003F9A70);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v17, v13, v14, v1, v12);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v7, v3, v10);
  _Block_release(v10);

  (*(void (**)(char *, uint64_t))(v16 + 8))(v3, v1);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return swift_release(v19);
}

uint64_t sub_1002AF7AC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }

  else
  {
    if (v4 < 0)
    {
      uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize with negative count",  51LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1090LL,  0);
      goto LABEL_9;
    }

    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }

  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
LABEL_9:
  __break(1u);
  return result;
}

id sub_1002AF89C(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return 0LL;
  }
  uint64_t v18 = swift_bridgeObjectRetain(a1);
  for (uint64_t i = (uint64_t *)(v18 + 56); ; i += 4)
  {
    uint64_t v4 = *(i - 2);
    uint64_t v5 = *i;
    id v6 = (id)*(i - 3);
    uint64_t v20 = v4;
    swift_bridgeObjectRetain(v4);
    swift_retain(v5);
    id v7 = [v6 identifier];
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
    uint64_t v10 = v9;

    id v11 = [a2 identifier];
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    uint64_t v14 = v13;

    if (v8 == v12 && v10 == v14)
    {
      swift_bridgeObjectRelease(v18);
      swift_bridgeObjectRelease_n(v10, 2LL);
      return v6;
    }

    char v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v10, v12, v14, 0LL);
    swift_bridgeObjectRelease(v10);
    swift_bridgeObjectRelease(v14);
    if ((v16 & 1) != 0) {
      break;
    }
    swift_release(v5);
    swift_bridgeObjectRelease(v20);

    if (!--v2)
    {
      swift_bridgeObjectRelease(v18);
      return 0LL;
    }
  }

  swift_bridgeObjectRelease(v18);
  return v6;
}

uint64_t sub_1002AFA30(uint64_t a1, void *a2)
{
  uint64_t v18 = *(void *)(a1 + 16);
  if (!v18) {
    return 0LL;
  }
  uint64_t v2 = 0LL;
  for (uint64_t i = (uint64_t *)(a1 + 56); ; i += 4)
  {
    uint64_t v20 = v2;
    uint64_t v4 = *(i - 2);
    uint64_t v5 = *i;
    id v6 = (id)*(i - 3);
    swift_bridgeObjectRetain(v4);
    swift_retain(v5);
    id v7 = [v6 identifier];
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
    uint64_t v10 = v9;

    id v11 = [a2 identifier];
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    uint64_t v14 = v13;

    if (v8 == v12 && v10 == v14)
    {
      swift_release(v5);
      swift_bridgeObjectRelease(v4);

      swift_bridgeObjectRelease_n(v10, 2LL);
      return v20;
    }

    char v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v10, v12, v14, 0LL);
    swift_release(v5);
    swift_bridgeObjectRelease(v4);

    swift_bridgeObjectRelease(v10);
    swift_bridgeObjectRelease(v14);
    if ((v16 & 1) != 0) {
      break;
    }
    uint64_t v2 = v20 + 1;
    if (v18 == v20 + 1) {
      return 0LL;
    }
  }

  return v20;
}

uint64_t sub_1002AFBC0()
{
  return sub_1002B1384(56LL);
}

void sub_1002AFBC8()
{
}

uint64_t sub_1002AFBD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1002AFBE8(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_1002AFBF0(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t ObjectType = swift_getObjectType(v3);
  if (qword_1004057A0 != -1) {
    swift_once(&qword_1004057A0, sub_1002A8A40);
  }
  uint64_t v7 = type metadata accessor for Logger(0LL);
  sub_10015ADAC(v7, (uint64_t)qword_1004057A8);
  id v8 = a1;
  uint64_t v9 = (os_log_s *)Logger.logObject.getter(v8);
  os_log_type_t v10 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc(32LL, -1LL);
    uint64_t v35 = a2;
    uint64_t v12 = (void *)swift_slowAlloc(8LL, -1LL);
    uint64_t v13 = swift_slowAlloc(64LL, -1LL);
    uint64_t v37 = v13;
    *(_DWORD *)uint64_t v11 = 136315650;
    uint64_t v34 = v3;
    uint64_t v14 = _typeName(_:qualified:)(ObjectType, 0LL);
    uint64_t v36 = sub_10015ADC4(v14, v15, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37, v11 + 4, v11 + 12);
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2080;
    uint64_t v36 = sub_10015ADC4(0xD00000000000003BLL, 0x8000000100341AD0LL, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37, v11 + 14, v11 + 22);
    *(_WORD *)(v11 + 22) = 2112;
    uint64_t v36 = (uint64_t)v8;
    id v16 = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37, v11 + 24, v11 + 32);
    *uint64_t v12 = v8;

    _os_log_impl((void *)&_mh_execute_header, v9, v10, "[%s] %s - %@", (uint8_t *)v11, 0x20u);
    uint64_t v17 = sub_100156B68((uint64_t *)&unk_1003FB7E0);
    swift_arrayDestroy(v12, 1LL, v17);
    uint64_t v18 = v12;
    a2 = v35;
    swift_slowDealloc(v18, -1LL, -1LL);
    swift_arrayDestroy(v13, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1LL, -1LL);
    swift_slowDealloc(v11, -1LL, -1LL);
  }

  else
  {
  }

  id v19 = objc_msgSend(v8, "actionIdentifier", v34);
  uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  uint64_t v22 = v21;

  uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(UNNotificationDefaultActionIdentifier);
  if (v20 == v24 && v22 == v23)
  {
    swift_bridgeObjectRelease_n(v22, 2LL);
    uint64_t v25 = 0LL;
  }

  else
  {
    int v26 = _stringCompareWithSmolCheck(_:_:expecting:)(v20, v22, v24, v23, 0LL);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v25 = ~v26 & 1LL;
  }

  id v27 = [v8 notification];
  id v28 = [v27 request];

  id v29 = [v28 identifier];
  uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
  unint64_t v32 = v31;

  sub_1002ADB3C(v25, v30, v32);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(*(void *)(a2 + 16) + 16LL))();
}

uint64_t sub_1002AFF94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v23 = *(void *)(a1 + 16);
  if (v23)
  {
    uint64_t v5 = 0LL;
    uint64_t v24 = a1 + 32;
    while (1)
    {
      uint64_t v6 = v24 + 32 * v5;
      uint64_t v7 = *(void **)(v6 + 8);
      uint64_t v8 = v7[2];
      if (v8)
      {
        uint64_t v9 = *(void *)(v6 + 24);
        uint64_t v22 = *(void **)v6;
        uint64_t v10 = v7[4];
        uint64_t v11 = v7[5];
        BOOL v12 = v10 == a2 && v11 == a3;
        if (v12 || (uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v11, a2, a3, 0LL), (result & 1) != 0))
        {
LABEL_20:
          uint64_t v20 = v22;
          id v21 = v22;
          swift_bridgeObjectRetain(v7);
          swift_retain(v9);
          return (uint64_t)v20;
        }

        if (v8 != 1) {
          break;
        }
      }

void sub_1002B00F4()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[2]
     + OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_discoveredSessionContext;
  uint64_t v3 = *(void **)v2;
  if (!*(void *)v2)
  {
    if (qword_1004057A0 != -1) {
      swift_once(&qword_1004057A0, sub_1002A8A40);
    }
    uint64_t v36 = type metadata accessor for Logger(0LL);
    uint64_t v37 = sub_10015ADAC(v36, (uint64_t)qword_1004057A8);
    osloga = (os_log_s *)Logger.logObject.getter(v37);
    os_log_type_t v38 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(osloga, v38))
    {
      uint64_t v39 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v40 = swift_slowAlloc(32LL, -1LL);
      uint64_t v62 = v40;
      *(_DWORD *)uint64_t v39 = 136315138;
      uint64_t v41 = _typeName(_:qualified:)(v1, 0LL);
      uint64_t v61 = sub_10015ADC4(v41, v42, &v62);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, &v62, v39 + 4, v39 + 12);
      swift_bridgeObjectRelease();
      _os_log_impl( (void *)&_mh_execute_header,  osloga,  v38,  "[%s] Got dismiss event without discovered session context. Ignoring",  v39,  0xCu);
      swift_arrayDestroy(v40, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v40, -1LL, -1LL);
      swift_slowDealloc(v39, -1LL, -1LL);

      return;
    }

    goto LABEL_23;
  }

  uint64_t v4 = (void *)v0[3];
  uint64_t v5 = *(void *)(v2 + 24);
  uint64_t v57 = *(void (**)(uint64_t))(v2 + 16);
  os_log_t oslog = (os_log_t)*(id *)(v2 + 8);
  swift_retain(v5);
  id v6 = v3;
  id v7 = [v6 identifier];
  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  uint64_t v10 = v9;

  id v11 = [v4 identifier];
  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  uint64_t v14 = v13;

  if (v8 == v12 && v10 == v14)
  {
    swift_bridgeObjectRelease_n(v10, 2LL);
    goto LABEL_16;
  }

  char v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v10, v12, v14, 0LL);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v16 & 1) != 0)
  {
LABEL_16:
    if (qword_1004057A0 != -1) {
      swift_once(&qword_1004057A0, sub_1002A8A40);
    }
    uint64_t v43 = type metadata accessor for Logger(0LL);
    uint64_t v44 = sub_10015ADAC(v43, (uint64_t)qword_1004057A8);
    uint64_t v45 = (os_log_s *)Logger.logObject.getter(v44);
    os_log_type_t v46 = static os_log_type_t.default.getter(v45);
    if (os_log_type_enabled(v45, v46))
    {
      int v47 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v48 = swift_slowAlloc(32LL, -1LL);
      uint64_t v62 = v48;
      *(_DWORD *)int v47 = 136315138;
      uint64_t v49 = _typeName(_:qualified:)(v1, 0LL);
      uint64_t v61 = sub_10015ADC4(v49, v50, &v62);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, &v62, v47 + 4, v47 + 12);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v45, v46, "[%s] Got dismiss event from GroupSessionNearby", v47, 0xCu);
      swift_arrayDestroy(v48, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v48, -1LL, -1LL);
      swift_slowDealloc(v47, -1LL, -1LL);
    }

    id v51 = [v6 identifier];
    uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)(v51);
    unint64_t v54 = v53;

    sub_1002AA520(v52, v54);
    uint64_t v55 = swift_bridgeObjectRelease();
    v57(v55);

    goto LABEL_21;
  }

  if (qword_1004057A0 != -1) {
    swift_once(&qword_1004057A0, sub_1002A8A40);
  }
  uint64_t v17 = type metadata accessor for Logger(0LL);
  sub_10015ADAC(v17, (uint64_t)qword_1004057A8);
  id v18 = v6;
  id v19 = oslog;
  swift_retain_n(v5, 2LL);
  id v20 = v4;
  id v21 = v18;
  uint64_t v22 = v19;
  id v23 = v20;
  osloga = (os_log_s *)Logger.logObject.getter(v23);
  os_log_type_t v24 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(osloga, v24))
  {
    os_log_type_t type = v24;
    uint64_t v25 = swift_slowAlloc(32LL, -1LL);
    uint64_t v58 = swift_slowAlloc(96LL, -1LL);
    uint64_t v62 = v58;
    *(_DWORD *)uint64_t v25 = 136315650;
    uint64_t v26 = _typeName(_:qualified:)(v1, 0LL);
    uint64_t v61 = sub_10015ADC4(v26, v27, &v62);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, &v62, v25 + 4, v25 + 12);
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2082;
    id v28 = [v21 identifier];
    uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
    unint64_t v31 = v30;

    uint64_t v61 = sub_10015ADC4(v29, v31, &v62);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, &v62, v25 + 14, v25 + 22);
    swift_bridgeObjectRelease();

    swift_release_n(v5, 2LL);
    *(_WORD *)(v25 + 22) = 2082;
    id v32 = [v23 identifier];
    uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
    unint64_t v35 = v34;

    uint64_t v61 = sub_10015ADC4(v33, v35, &v62);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, &v62, v25 + 24, v25 + 32);
    swift_bridgeObjectRelease();

    _os_log_impl( (void *)&_mh_execute_header,  osloga,  type,  "[%s] Got dismiss event for different session. Current: %{public}s, received: %{public}s. Ignoring",  (uint8_t *)v25,  0x20u);
    swift_arrayDestroy(v58, 3LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v58, -1LL, -1LL);
    swift_slowDealloc(v25, -1LL, -1LL);

LABEL_21:
    swift_release(v5);
    return;
  }

  swift_release_n(v5, 3LL);
LABEL_23:
}

uint64_t sub_1002B07C4()
{
  uint64_t v1 = type metadata accessor for URL(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 25) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  if (*(void *)(v0 + v5)) {
    swift_release(*(void *)(v0 + v5 + 8));
  }
  return swift_deallocObject(v0, ((v5 + 23) & 0xFFFFFFFFFFFFFFF8LL) + 8, v3 | 7);
}

void sub_1002B0858()
{
  uint64_t v1 = *(void *)(type metadata accessor for URL(0LL) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 25LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  sub_1002AC3D8( *(char **)(v0 + 16),  *(unsigned __int8 *)(v0 + 24),  v0 + v2,  *(void *)(v0 + v3),  *(void *)(v0 + v3 + 8),  *(void *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFF8LL)));
}

uint64_t sub_1002B08B0()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

void sub_1002B08D4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_suppressBanners;
  if (*(_BYTE *)(v1
                + OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_suppressBanners) == 1)
  {
    uint64_t v3 = *(void *)(v0 + 24);
    if (qword_1004057A0 != -1) {
      swift_once(&qword_1004057A0, sub_1002A8A40);
    }
    uint64_t v4 = type metadata accessor for Logger(0LL);
    uint64_t v5 = sub_10015ADAC(v4, (uint64_t)qword_1004057A8);
    id v6 = (os_log_s *)Logger.logObject.getter(v5);
    os_log_type_t v7 = static os_log_type_t.default.getter(v6);
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v9 = swift_slowAlloc(32LL, -1LL);
      uint64_t v13 = v9;
      *(_DWORD *)uint64_t v8 = 136315138;
      uint64_t v10 = _typeName(_:qualified:)(v3, 0LL);
      uint64_t v12 = sub_10015ADC4(v10, v11, &v13);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v12, &v13, v8 + 4, v8 + 12);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "[%s] End banner suppression.", v8, 0xCu);
      swift_arrayDestroy(v9, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v9, -1LL, -1LL);
      swift_slowDealloc(v8, -1LL, -1LL);
    }

    *(_BYTE *)(v1 + v2) = 0;
  }

uint64_t sub_1002B0A6C()
{
  uint64_t v1 = type metadata accessor for URL(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  if (*(void *)(v0 + v5)) {
    swift_release(*(void *)(v0 + v5 + 8));
  }
  return swift_deallocObject(v0, ((v5 + 23) & 0xFFFFFFFFFFFFFFF8LL) + 8, v3 | 7);
}

void sub_1002B0AEC(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for URL(0LL) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  sub_1002ACE88( a1,  v1 + v4,  *(void (**)(uint64_t))(v1 + v5),  *(void *)(v1 + v5 + 8),  *(void *)(v1 + ((v5 + 23) & 0xFFFFFFFFFFFFF8LL)));
}

uint64_t sub_1002B0B4C()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

void sub_1002B0B78()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 32);
  if (qword_1004057A0 != -1) {
    swift_once(&qword_1004057A0, sub_1002A8A40);
  }
  uint64_t v3 = type metadata accessor for Logger(0LL);
  sub_10015ADAC(v3, (uint64_t)qword_1004057A8);
  id v4 = v1;
  unint64_t v5 = (os_log_s *)Logger.logObject.getter(v4);
  os_log_type_t v6 = static os_log_type_t.default.getter(v5);
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc(22LL, -1LL);
    uint64_t v8 = (void *)swift_slowAlloc(8LL, -1LL);
    uint64_t v9 = swift_slowAlloc(32LL, -1LL);
    uint64_t v15 = v9;
    *(_DWORD *)uint64_t v7 = 136315394;
    uint64_t v10 = _typeName(_:qualified:)(v2, 0LL);
    uint64_t v14 = sub_10015ADC4(v10, v11, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, &v15, v7 + 4, v7 + 12);
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2112;
    uint64_t v14 = (uint64_t)v4;
    id v12 = v4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, &v15, v7 + 14, v7 + 22);
    *uint64_t v8 = v4;

    _os_log_impl((void *)&_mh_execute_header, v5, v6, "[%s] Dismissing join request: %@", (uint8_t *)v7, 0x16u);
    uint64_t v13 = sub_100156B68((uint64_t *)&unk_1003FB7E0);
    swift_arrayDestroy(v8, 1LL, v13);
    swift_slowDealloc(v8, -1LL, -1LL);
    swift_arrayDestroy(v9, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1LL, -1LL);
    swift_slowDealloc(v7, -1LL, -1LL);
  }

  else
  {
  }

  sub_1002AE8FC(v4);
  sub_1002AECB8(v4, 1LL);
}

uint64_t sub_1002B0DA4()
{
  swift_bridgeObjectRelease(*(void *)(v0 + 40));
  swift_bridgeObjectRelease(*(void *)(v0 + 56));
  swift_release(*(void *)(v0 + 72));
  return swift_deallocObject(v0, 80LL, 7LL);
}

uint64_t sub_1002B0DE8()
{
  uint64_t v1 = (void *)v0[3];
  uint64_t v3 = v0[4];
  uint64_t v2 = v0[5];
  uint64_t v5 = v0[6];
  uint64_t v4 = v0[7];
  uint64_t v7 = v0[8];
  uint64_t v6 = v0[9];
  uint64_t v8 = sub_100156B68(&qword_1003F8620);
  uint64_t v9 = swift_allocObject(v8, 64LL, 7LL);
  *(_OWORD *)(v9 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_10034C140;
  *(void *)(v9 + 32) = v3;
  *(void *)(v9 + 40) = v2;
  *(void *)(v9 + 48) = v5;
  *(void *)(v9 + 56) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1002AE764(v1, v9, v7, v6);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1002B0E8C()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

void sub_1002B0E9C(uint64_t a1)
{
}

void sub_1002B0EA8(uint64_t a1)
{
}

void sub_1002B0EB4(uint64_t a1, char *a2)
{
  uint64_t v4 = *(void **)(v2 + 16);
  uint64_t v3 = *(void *)(v2 + 24);
  if (a1)
  {
    swift_errorRetain(a1);
    if (qword_1004057A0 != -1) {
      swift_once(&qword_1004057A0, sub_1002A8A40);
    }
    uint64_t v7 = type metadata accessor for Logger(0LL);
    sub_10015ADAC(v7, (uint64_t)qword_1004057A8);
    id v8 = v4;
    swift_errorRetain(a1);
    id v9 = v8;
    uint64_t v10 = swift_errorRetain(a1);
    os_log_t oslog = (os_log_s *)Logger.logObject.getter(v10);
    os_log_type_t v11 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v11))
    {
      uint64_t v12 = swift_slowAlloc(32LL, -1LL);
      format = a2;
      uint64_t v13 = (void *)swift_slowAlloc(16LL, -1LL);
      uint64_t v30 = swift_slowAlloc(32LL, -1LL);
      uint64_t v33 = v30;
      *(_DWORD *)uint64_t v12 = 136315650;
      uint64_t v14 = _typeName(_:qualified:)(v3, 0LL);
      uint64_t v32 = sub_10015ADC4(v14, v15, &v33);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33, v12 + 4, v12 + 12);
      swift_bridgeObjectRelease();
      *(_WORD *)(v12 + 12) = 2114;
      uint64_t v32 = (uint64_t)v9;
      id v16 = v9;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33, v12 + 14, v12 + 22);
      *uint64_t v13 = v9;

      *(_WORD *)(v12 + 22) = 2114;
      swift_errorRetain(a1);
      uint64_t v17 = _swift_stdlib_bridgeErrorToNSError(a1);
      uint64_t v32 = v17;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33, v12 + 24, v12 + 32);
      v13[1] = v17;
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl((void *)&_mh_execute_header, oslog, v11, format, (uint8_t *)v12, 0x20u);
      uint64_t v18 = sub_100156B68((uint64_t *)&unk_1003FB7E0);
      swift_arrayDestroy(v13, 2LL, v18);
      swift_slowDealloc(v13, -1LL, -1LL);
      swift_arrayDestroy(v30, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v30, -1LL, -1LL);
      swift_slowDealloc(v12, -1LL, -1LL);

      swift_errorRelease(a1);
      return;
    }

    swift_errorRelease(a1);

    swift_errorRelease(a1);
    swift_errorRelease(a1);
  }

  else
  {
    if (qword_1004057A0 != -1) {
      swift_once(&qword_1004057A0, sub_1002A8A40);
    }
    uint64_t v19 = type metadata accessor for Logger(0LL);
    sub_10015ADAC(v19, (uint64_t)qword_1004057A8);
    id v20 = v4;
    os_log_t oslog = (os_log_s *)Logger.logObject.getter(v20);
    os_log_type_t v21 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(oslog, v21))
    {
      uint64_t v22 = swift_slowAlloc(22LL, -1LL);
      id v23 = (void *)swift_slowAlloc(8LL, -1LL);
      uint64_t v24 = swift_slowAlloc(32LL, -1LL);
      uint64_t v33 = v24;
      *(_DWORD *)uint64_t v22 = 136315394;
      uint64_t v25 = _typeName(_:qualified:)(v3, 0LL);
      uint64_t v32 = sub_10015ADC4(v25, v26, &v33);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33, v22 + 4, v22 + 12);
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2114;
      uint64_t v32 = (uint64_t)v20;
      id v27 = v20;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33, v22 + 14, v22 + 22);
      void *v23 = v20;

      _os_log_impl( (void *)&_mh_execute_header,  oslog,  v21,  "[%s] Added notification with request: %{public}@",  (uint8_t *)v22,  0x16u);
      uint64_t v28 = sub_100156B68((uint64_t *)&unk_1003FB7E0);
      swift_arrayDestroy(v23, 1LL, v28);
      swift_slowDealloc(v23, -1LL, -1LL);
      swift_arrayDestroy(v24, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v24, -1LL, -1LL);
      swift_slowDealloc(v22, -1LL, -1LL);

      return;
    }
  }
}

void sub_1002B133C(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  if (a1)
  {

    swift_release(a4);
  }

uint64_t sub_1002B137C()
{
  return sub_1002B1384(40LL);
}

uint64_t sub_1002B1384(uint64_t a1)
{
  swift_bridgeObjectRelease(*(void *)(v1 + 32));
  return swift_deallocObject(v1, a1, 7LL);
}

void sub_1002B13BC()
{
}

uint64_t sub_1002B13E4(id a1)
{
  uint64_t v2 = v1[2];
  id v3 = (id)v1[3];
  uint64_t v4 = OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_suppressBanners;
  if (*(_BYTE *)(v2
                + OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_suppressBanners) == 1)
  {
    uint64_t v5 = v1[4];
    if (qword_1004057A0 != -1) {
      swift_once(&qword_1004057A0, sub_1002A8A40);
    }
    uint64_t v6 = type metadata accessor for Logger(0LL);
    uint64_t v7 = sub_10015ADAC(v6, (uint64_t)qword_1004057A8);
    id v8 = (os_log_s *)Logger.logObject.getter(v7);
    os_log_type_t v9 = static os_log_type_t.default.getter(v8);
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v11 = swift_slowAlloc(32LL, -1LL);
      uint64_t v24 = v11;
      *(_DWORD *)uint64_t v10 = 136315138;
      uint64_t v12 = _typeName(_:qualified:)(v5, 0LL);
      uint64_t v23 = sub_10015ADC4(v12, v13, &v24);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v10 + 4, v10 + 12);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "[%s] End banner suppression.", v10, 0xCu);
      swift_arrayDestroy(v11, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v11, -1LL, -1LL);
      swift_slowDealloc(v10, -1LL, -1LL);
    }

    *(_BYTE *)(v2 + v4) = 0;
  }

  uint64_t v14 = (void *)(v2
                 + OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_discoveredSessionContext);
  unint64_t v15 = *(void **)(v2
                 + OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_discoveredSessionContext);
  if (v15)
  {
    uint64_t v17 = v14[2];
    uint64_t v16 = v14[3];
    uint64_t v18 = (void *)v14[1];
    id v19 = v15;
    id v20 = v18;
    swift_retain(v16);
    id v21 = v20;
    sub_1002B133C(v15, v18, v17, v16);
    if (v18)
    {

      if (v3 == v21) {
        a1 = sub_1002AE498(v3);
      }
    }
  }

  return sub_1002A9840(a1);
}

unint64_t sub_1002B15EC()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = sub_100156B68(&qword_1003F8698);
  uint64_t inited = swift_initStackObject(v2, &v9);
  *(_OWORD *)(inited + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_10034C140;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(kMREventNearbyNotificationTypeKey);
  *(void *)(inited + 40) = v4;
  uint64_t v5 = (void *)kMREventNearbyNotificationTypeInAppBanner;
  *(void *)(inited + 48) = kMREventNearbyNotificationTypeInAppBanner;
  *(void *)(inited + 56) = static String._unconditionallyBridgeFromObjectiveC(_:)(kMREventSessionCreatedRouteKey);
  *(void *)(inited + 64) = v6;
  id v7 = v5;
  *(void *)(inited + 72) = objc_msgSend( objc_allocWithZone(NSNumber),  "initWithUnsignedChar:",  objc_msgSend(v1, "routeType"));
  return sub_10016995C(inited);
}

uint64_t sub_1002B16B4()
{
  swift_release(*(void *)(v0 + 40));
  return swift_deallocObject(v0, 56LL, 7LL);
}

void sub_1002B16E8()
{
  uint64_t v1 = (void *)v0[2];
  uint64_t v2 = v0[5];
  uint64_t v89 = v0[4];
  uint64_t v90 = v0[3];
  uint64_t v3 = v0[6];
  uint64_t v4 = &selRef_discoveryChannel;
  id v5 = [v1 hostInfo];
  unsigned int v6 = [v5 isInAppBannerAllowed];

  if (v6)
  {
    uint64_t v7 = v90
       + OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_discoveredSessionContext;
    id v8 = *(void **)(v90
                  + OBJC_IVAR____TtC12mediaremotedP33_1851BD08EF6F7A41CF08D64ADE37688B35GroupSessionUIManagerImplementation_discoveredSessionContext);
    uint64_t v88 = v2;
    if (v8)
    {
      *(void *)uint64_t v84 = v1;
      uint64_t v85 = v3;
      uint64_t v9 = *(void *)(v7 + 24);
      uint64_t v10 = *(void **)(v7 + 8);
      uint64_t v11 = qword_1004057A0;
      id v12 = v8;
      id v13 = v10;
      swift_retain(v9);
      if (v11 != -1) {
        swift_once(&qword_1004057A0, sub_1002A8A40);
      }
      uint64_t v14 = type metadata accessor for Logger(0LL);
      sub_10015ADAC(v14, (uint64_t)qword_1004057A8);
      id v15 = v12;
      id v16 = v13;
      swift_retain_n(v9, 2LL);
      id v17 = v15;
      id v18 = v16;
      id v19 = (os_log_s *)Logger.logObject.getter(v18);
      uint64_t v20 = v9;
      os_log_type_t v21 = static os_log_type_t.default.getter(v19);
      if (os_log_type_enabled(v19, v21))
      {
        uint64_t v22 = swift_slowAlloc(22LL, -1LL);
        uint64_t v83 = swift_slowAlloc(64LL, -1LL);
        aBlock[0] = v83;
        *(_DWORD *)uint64_t v22 = 136315394;
        uint64_t v23 = _typeName(_:qualified:)(v85, 0LL);
        uint64_t v91 = sub_10015ADC4(v23, v24, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v91, aBlock, v22 + 4, v22 + 12);
        swift_bridgeObjectRelease();
        *(_WORD *)(v22 + 12) = 2082;
        id v25 = [v17 identifier];
        uint64_t v82 = v9;
        uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
        uint64_t v27 = v7;
        unint64_t v29 = v28;

        uint64_t v91 = sub_10015ADC4(v26, v29, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v91, aBlock, v22 + 14, v22 + 22);
        uint64_t v7 = v27;
        swift_bridgeObjectRelease();

        uint64_t v30 = v18;
        uint64_t v20 = v82;
        swift_release_n(v82, 2LL);
        _os_log_impl( (void *)&_mh_execute_header,  v19,  v21,  "[%s] Cancelling sessionID: %{public}s because of new request",  (uint8_t *)v22,  0x16u);
        swift_arrayDestroy(v83, 2LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v83, -1LL, -1LL);
        swift_slowDealloc(v22, -1LL, -1LL);
      }

      else
      {

        uint64_t v30 = v18;
        swift_release_n(v20, 2LL);
      }

      uint64_t v1 = *(void **)v84;
      id v31 = [v17 identifier];
      uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
      unint64_t v34 = v33;

      sub_1002AA520(v32, v34);
      swift_bridgeObjectRelease();

      swift_release(v20);
      uint64_t v3 = v85;
      uint64_t v4 = &selRef_discoveryChannel;
    }

    uint64_t v87 = v7;
    if (qword_1004057A0 != -1) {
      swift_once(&qword_1004057A0, sub_1002A8A40);
    }
    uint64_t v35 = type metadata accessor for Logger(0LL);
    sub_10015ADAC(v35, (uint64_t)qword_1004057A8);
    id v36 = v1;
    uint64_t v37 = (os_log_s *)Logger.logObject.getter(v36);
    os_log_type_t v38 = static os_log_type_t.default.getter(v37);
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = swift_slowAlloc(22LL, -1LL);
      uint64_t v86 = swift_slowAlloc(64LL, -1LL);
      aBlock[0] = v86;
      *(_DWORD *)uint64_t v39 = 136315394;
      uint64_t v40 = _typeName(_:qualified:)(v3, 0LL);
      uint64_t v91 = sub_10015ADC4(v40, v41, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v91, aBlock, v39 + 4, v39 + 12);
      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 12) = 2082;
      id v42 = [v36 identifier];
      uint64_t v43 = v1;
      uint64_t v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
      uint64_t v45 = v3;
      unint64_t v47 = v46;

      uint64_t v48 = v44;
      uint64_t v1 = v43;
      uint64_t v91 = sub_10015ADC4(v48, v47, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v91, aBlock, v39 + 14, v39 + 22);
      uint64_t v3 = v45;
      swift_bridgeObjectRelease();

      _os_log_impl( (void *)&_mh_execute_header,  v37,  v38,  "[%s] Displaying for session: %{public}s",  (uint8_t *)v39,  0x16u);
      swift_arrayDestroy(v86, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v86, -1LL, -1LL);
      uint64_t v49 = v39;
      uint64_t v4 = &selRef_discoveryChannel;
      swift_slowDealloc(v49, -1LL, -1LL);
    }

    else
    {
    }

    id v50 = [v36 v4[320]];
    id v51 = [v50 displayName];

    static String._unconditionallyBridgeFromObjectiveC(_:)(v51);
    id v52 = [v36 v4[320]];
    id v53 = [v52 routeType];

    NSString v54 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v55 =  [(id)objc_opt_self(MRGroupSessionBannerRequest) requestWithBundleIdentifierAffinity:0 hostDisplayName:v54 routeType:v53];

    uint64_t v56 = *(void **)v87;
    uint64_t v57 = *(void **)(v87 + 8);
    uint64_t v58 = *(void *)(v87 + 16);
    uint64_t v59 = *(void *)(v87 + 24);
    *(void *)uint64_t v87 = v36;
    *(void *)(v87 + 8) = v55;
    *(void *)(v87 + swift_unknownObjectWeakDestroy(v0 + 16) = v89;
    *(void *)(v87 + 24) = v88;
    id v60 = v36;
    id v61 = v55;
    swift_retain(v88);
    sub_1002B133C(v56, v57, v58, v59);
    sub_1002A9840();
  }

  id v62 = [(id)objc_opt_self(MRUserSettings) currentSettings];
  if (v62)
  {
    id v63 = v62;
    unsigned int v64 = [v62 groupSessionNearbyLockscreen];

    if (v64)
    {
      id v65 = [v1 v4[320]];
      unsigned int v66 = [v65 isLockScreenAffordanceAllowed];

      if (v66)
      {
        if (qword_1004057A0 != -1) {
          swift_once(&qword_1004057A0, sub_1002A8A40);
        }
        uint64_t v67 = type metadata accessor for Logger(0LL);
        uint64_t v68 = sub_10015ADAC(v67, (uint64_t)qword_1004057A8);
        unint64_t v69 = (os_log_s *)Logger.logObject.getter(v68);
        os_log_type_t v70 = static os_log_type_t.default.getter(v69);
        if (os_log_type_enabled(v69, v70))
        {
          uint64_t v71 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          uint64_t v72 = swift_slowAlloc(32LL, -1LL);
          aBlock[0] = v72;
          *(_DWORD *)uint64_t v71 = 136315138;
          uint64_t v73 = _typeName(_:qualified:)(v3, 0LL);
          uint64_t v91 = sub_10015ADC4(v73, v74, aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v91, aBlock, v71 + 4, v71 + 12);
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v69, v70, "[%s] Acquiring GroupSessionNearby assertion", v71, 0xCu);
          swift_arrayDestroy(v72, 1LL, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v72, -1LL, -1LL);
          swift_slowDealloc(v71, -1LL, -1LL);
        }

        id v75 = sub_1002A8BC0();
        [v75 acquireGroupSessionNearbyAssertionForSession:v1];
        swift_unknownObjectRelease(v75);
        uint64_t v76 = (void *)kMREventGroupSessionNearbyNotificationDisplayed;
        uint64_t v77 = swift_allocObject(&unk_1003AD870, 24LL, 7LL);
        *(void *)(v77 + swift_unknownObjectWeakDestroy(v0 + 16) = v1;
        uint64_t aBlock[4] = (uint64_t)sub_1002B1F8C;
        uint64_t v93 = v77;
        aBlock[0] = (uint64_t)_NSConcreteStackBlock;
        aBlock[1] = 1107296256LL;
        aBlock[2] = (uint64_t)sub_100169A74;
        aBlock[3] = (uint64_t)&unk_1003AD888;
        uint64_t v78 = _Block_copy(aBlock);
        uint64_t v79 = v93;
        id v80 = v1;
        id v81 = v76;
        swift_release(v79);
        MRAnalyticsSendEvent(v81, 0LL, v78);
        _Block_release(v78);
      }
    }
  }

  else
  {
    __break(1u);
  }

unint64_t sub_1002B1F8C()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = sub_100156B68(&qword_1003F8698);
  uint64_t inited = swift_initStackObject(v2, &v11);
  *(_OWORD *)(inited + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_10034C140;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(kMREventNearbyNotificationTypeKey);
  *(void *)(inited + 40) = v4;
  id v5 = (void *)kMREventNearbyNotificationTypeLockScreen;
  *(void *)(inited + 48) = kMREventNearbyNotificationTypeLockScreen;
  *(void *)(inited + 56) = static String._unconditionallyBridgeFromObjectiveC(_:)(kMREventSessionCreatedRouteKey);
  *(void *)(inited + 64) = v6;
  id v7 = v5;
  id v8 = [v1 hostInfo];
  id v9 = [v8 routeType];

  *(void *)(inited + 72) = [objc_allocWithZone(NSNumber) initWithUnsignedChar:v9];
  return sub_10016995C(inited);
}

uint64_t sub_1002B2070()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1002B2094()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16LL))();
}

uint64_t sub_1002B20A0()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

void sub_1002B20C4()
{
}

uint64_t sub_1002B217C()
{
  return NWPathMonitor.start(queue:)();
}

void sub_1002B21FC()
{
}

uint64_t sub_1002B226C()
{
  return sub_1002B23AC(&enum case for NWInterface.InterfaceType.wifi(_:));
}

uint64_t sub_1002B2284(void *a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v5 = type metadata accessor for NWInterface.InterfaceType(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for NWPath(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v13 = a1;
  NWPathMonitor.currentPath.getter();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *a3, v5);
  LOBYTE(a3) = NWPath.usesInterfaceType(_:)(v8);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);

  return a3 & 1;
}

uint64_t sub_1002B23A0()
{
  return sub_1002B23AC(&enum case for NWInterface.InterfaceType.wiredEthernet(_:));
}

uint64_t sub_1002B23AC(unsigned int *a1)
{
  uint64_t v2 = type metadata accessor for NWInterface.InterfaceType(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for NWPath(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  NWPathMonitor.currentPath.getter(v8);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *a1, v2);
  LOBYTE(a1) = NWPath.usesInterfaceType(_:)(v5);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  return a1 & 1;
}

uint64_t type metadata accessor for NetworkMonitor()
{
  return objc_opt_self(&OBJC_CLASS___MRDNetworkMonitor);
}

id sub_1002B2548()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NetworkMonitor();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1002B258C(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  uint64_t v3 = *v1;
  uint64_t v4 = sub_100156B68(&qword_1003F86B0);
  v2[7] = swift_task_alloc((*(void *)(*(void *)(v4 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = *(void *)(v3 + 80);
  v2[8] = v5;
  uint64_t v6 = type metadata accessor for Optional(0LL, v5);
  void v2[9] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v2[10] = v7;
  v2[11] = swift_task_alloc((*(void *)(v7 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_1002B261C, v1, 0LL);
}

uint64_t sub_1002B261C()
{
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v4 = *(void *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v5 = *(void *)(v0 + 48) + *(void *)(**(void **)(v0 + 48) + 104LL);
  __n128 v6 = swift_beginAccess(v5, v0 + 16, 0LL, 0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v2 + 16))(v1, v5, v3, v6);
  uint64_t v7 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v1, 1LL, v4) == 1)
  {
    uint64_t v8 = *(void *)(v0 + 48);
    (*(void (**)(void, void))(*(void *)(v0 + 80) + 8LL))(*(void *)(v0 + 88), *(void *)(v0 + 72));
    uint64_t v9 = *(void *)(*(void *)v8 + 112LL);
    uint64_t v10 = *(void *)(v8 + v9);
    *(void *)(v0 + 96) = v10;
    if (v10)
    {
      uint64_t v11 = async function pointer to Task<>.value.getter[1];
      swift_retain(v10);
      uint64_t v12 = (void *)swift_task_alloc(v11);
      *(void *)(v0 + 104) = v12;
      id v13 = sub_1002B283C;
    }

    else
    {
      uint64_t v16 = *(void *)(v0 + 56);
      uint64_t v17 = *(void *)(v0 + 64);
      uint64_t v18 = *(void *)(v0 + 48);
      uint64_t v19 = type metadata accessor for TaskPriority(0LL);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56LL))(v16, 1LL, 1LL, v19);
      uint64_t v22 = type metadata accessor for LazyAsyncWrapper(255LL, v17, v20, v21);
      uint64_t WitnessTable = swift_getWitnessTable(&unk_100351A70, v22);
      unint64_t v24 = (void *)swift_allocObject(&unk_1003ADA30, 40LL, 7LL);
      v24[2] = v18;
      v24[3] = WitnessTable;
      void v24[4] = v18;
      swift_retain_n(v18, 2LL);
      uint64_t v10 = sub_1002B2D40(v16, (uint64_t)&unk_1003FDAD0, (uint64_t)v24, v17);
      *(void *)(v0 + 112) = v10;
      uint64_t v25 = *(void *)(v8 + v9);
      *(void *)(v8 + v9) = v10;
      swift_retain(v10);
      swift_release(v25);
      uint64_t v12 = (void *)swift_task_alloc(async function pointer to Task<>.value.getter[1]);
      *(void *)(v0 + 120) = v12;
      id v13 = sub_1002B28D8;
    }

    *uint64_t v12 = v0;
    v12[1] = v13;
    return Task<>.value.getter(*(void *)(v0 + 40), v10, *(void *)(v0 + 64));
  }

  else
  {
    (*(void (**)(void, void, void))(v7 + 32))( *(void *)(v0 + 40),  *(void *)(v0 + 88),  *(void *)(v0 + 64));
    uint64_t v14 = *(void *)(v0 + 56);
    swift_task_dealloc(*(void *)(v0 + 88));
    swift_task_dealloc(v14);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

uint64_t sub_1002B283C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 104LL));
  return swift_task_switch(sub_1002B2894, v1, 0LL);
}

uint64_t sub_1002B2894()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_task_dealloc(*(void *)(v0 + 88));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002B28D8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 120LL));
  return swift_task_switch(sub_1002B2930, v1, 0LL);
}

uint64_t sub_1002B2930()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_task_dealloc(*(void *)(v0 + 88));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002B2974(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a1;
  v4[6] = a4;
  uint64_t v6 = *(void *)(*(void *)a4 + 80LL);
  v4[7] = v6;
  uint64_t v7 = type metadata accessor for Optional(0LL, v6);
  v4[8] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v4[9] = v8;
  unint64_t v9 = (*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v4[10] = swift_task_alloc(v9);
  v4[11] = swift_task_alloc(v9);
  return swift_task_switch(sub_1002B29F4, a4, 0LL);
}

uint64_t sub_1002B29F4()
{
  uint64_t v1 = *(int **)(v0[6] + 112LL);
  uint64_t v4 = (uint64_t (*)(void))((char *)v1 + *v1);
  uint64_t v2 = (void *)swift_task_alloc(v1[1]);
  v0[12] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1002B2A54;
  return v4(v0[5]);
}

uint64_t sub_1002B2A54()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 96LL));
  return swift_task_switch(sub_1002B2AAC, v1, 0LL);
}

uint64_t sub_1002B2AAC()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 64);
  uint64_t v4 = *(void *)(v0 + 72);
  uint64_t v6 = *(void *)(v0 + 48);
  uint64_t v5 = *(void *)(v0 + 56);
  uint64_t v7 = *(void *)(v5 - 8);
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 16))(v2, *(void *)(v0 + 40), v5);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(v2, 0LL, 1LL, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v1, v2, v3);
  uint64_t v8 = v6 + *(void *)(*(void *)v6 + 104LL);
  swift_beginAccess(v8, v0 + 16, 33LL, 0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 40))(v8, v1, v3);
  swift_endAccess(v0 + 16);
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for LazyAsyncWrapper(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100173DC8(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LazyAsyncWrapper);
}

uint64_t sub_1002B2B9C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = (void *)swift_task_alloc(dword_1003FDACC);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10015FD10;
  return sub_1002B2974(a1, v6, v7, v4);
}

uint64_t sub_1002B2BF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TaskPriority(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1LL, v6);
  if ((_DWORD)v8 == 1)
  {
    sub_1001863AC(a1);
    uint64_t v9 = 7168LL;
    uint64_t v10 = *(void *)(a3 + 16);
    if (v10)
    {
LABEL_3:
      uint64_t v11 = *(void *)(a3 + 24);
      uint64_t ObjectType = swift_getObjectType(v10);
      swift_unknownObjectRetain(v10);
      uint64_t v13 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v11);
      uint64_t v15 = v14;
      swift_unknownObjectRelease(v10);
      goto LABEL_6;
    }
  }

  else
  {
    unsigned __int8 v16 = TaskPriority.rawValue.getter(v8);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    uint64_t v9 = v16 | 0x1C00LL;
    uint64_t v10 = *(void *)(a3 + 16);
    if (v10) {
      goto LABEL_3;
    }
  }

  uint64_t v13 = 0LL;
  uint64_t v15 = 0LL;
LABEL_6:
  uint64_t v17 = swift_allocObject(&unk_1003ADC90, 32LL, 7LL);
  *(void *)(v17 + swift_unknownObjectWeakDestroy(v0 + 16) = a2;
  *(void *)(v17 + 24) = a3;
  uint64_t v18 = sub_100156B68(&qword_1003FDB20);
  if (v15 | v13)
  {
    v21[0] = 0LL;
    v21[1] = 0LL;
    uint64_t v19 = v21;
    v21[2] = v13;
    v21[3] = v15;
  }

  else
  {
    uint64_t v19 = 0LL;
  }

  return swift_task_create(v9, v19, v18, &unk_1003FDB18, v17);
}

uint64_t sub_1002B2D40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for TaskPriority(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1, 1LL, v8);
  if ((_DWORD)v10 == 1)
  {
    sub_1001863AC(a1);
    uint64_t v11 = 7168LL;
    uint64_t v12 = *(void *)(a3 + 16);
    if (v12)
    {
LABEL_3:
      uint64_t v13 = *(void *)(a3 + 24);
      uint64_t ObjectType = swift_getObjectType(v12);
      swift_unknownObjectRetain(v12);
      uint64_t v15 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v13);
      uint64_t v17 = v16;
      swift_unknownObjectRelease(v12);
      goto LABEL_6;
    }
  }

  else
  {
    unsigned __int8 v18 = TaskPriority.rawValue.getter(v10);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
    uint64_t v11 = v18 | 0x1C00LL;
    uint64_t v12 = *(void *)(a3 + 16);
    if (v12) {
      goto LABEL_3;
    }
  }

  uint64_t v15 = 0LL;
  uint64_t v17 = 0LL;
LABEL_6:
  uint64_t v19 = (void *)swift_allocObject(&unk_1003ADCB8, 40LL, 7LL);
  v19[2] = a4;
  v19[3] = a2;
  v19[4] = a3;
  if (v17 | v15)
  {
    v22[0] = 0LL;
    v22[1] = 0LL;
    uint64_t v20 = v22;
    void v22[2] = v15;
    v22[3] = v17;
  }

  else
  {
    uint64_t v20 = 0LL;
  }

  return swift_task_create(v11, v20, a4, &unk_1003FDB30, v19);
}

uint64_t sub_1002B2E84()
{
  return swift_defaultActor_deallocate(v0);
}

uint64_t sub_1002B2E9C()
{
  return MediaControlActor.unownedExecutor.getter();
}

char *sub_1002B2EB4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (char *)swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  uint64_t v6 = *(void *)v5;
  swift_defaultActor_initialize();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(*(void *)(v6 + 80) - 8LL) + 56LL))( &v5[*(void *)(*(void *)v5 + 104LL)],  1LL,  1LL);
  *(void *)&v5[*(void *)(*(void *)v5 + 112LL)] = 0LL;
  *((void *)v5 + 14) = a1;
  *((void *)v5 + 15) = a2;
  return v5;
}

uint64_t sub_1002B2F30(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  sub_1002B2F7C(a1, a2);
  return v5;
}

char *sub_1002B2F7C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)v2;
  swift_defaultActor_initialize(v2);
  uint64_t v6 = *(void *)(v5 + 80);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56LL))( &v2[*(void *)(*(void *)v2 + 104LL)],  1LL,  1LL,  v6);
  *(void *)&v2[*(void *)(*(void *)v2 + 112LL)] = 0LL;
  uint64_t v7 = (void *)swift_allocObject(&unk_1003ADA58, 40LL, 7LL);
  v7[2] = v6;
  void v7[3] = a1;
  v7[4] = a2;
  *((void *)v2 + 14) = &unk_1003FDAE0;
  *((void *)v2 + 15) = v7;
  return v2;
}

uint64_t sub_1002B3010(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v8 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  uint64_t v6 = (void *)swift_task_alloc(a4[1]);
  *(void *)(v4 + swift_unknownObjectWeakDestroy(v0 + 16) = v6;
  *uint64_t v6 = v4;
  v6[1] = sub_10015FD10;
  return v8(a1);
}

uint64_t sub_1002B3074(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 24);
  uint64_t v5 = (void *)swift_task_alloc(dword_1003FDADC);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10015FD10;
  uint64_t v8 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  uint64_t v6 = (void *)swift_task_alloc(v4[1]);
  v5[2] = v6;
  *uint64_t v6 = v5;
  v6[1] = sub_10015FD10;
  return v8(a1);
}

uint64_t sub_1002B30FC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 80LL);
  uint64_t v2 = type metadata accessor for Optional(0LL, v1);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v11[-v4 - 8];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v1 - 8) + 56LL))(&v11[-v4 - 8], 1LL, 1LL, v1);
  uint64_t v6 = v0 + *(void *)(*(void *)v0 + 104LL);
  swift_beginAccess(v6, v11, 33LL, 0LL);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v3 + 40))(v6, v5, v2);
  swift_endAccess(v11);
  uint64_t v7 = *(void *)(*(void *)v0 + 112LL);
  uint64_t v8 = *(void *)(v0 + v7);
  *(void *)(v0 + v7) = 0LL;
  return swift_release(v8);
}

uint64_t sub_1002B31D8(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  uint64_t v3 = *v1;
  uint64_t v4 = sub_100156B68(&qword_1003F86B0);
  v2[7] = swift_task_alloc((*(void *)(*(void *)(v4 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = *(void *)(v3 + 80);
  v2[8] = v5;
  uint64_t v6 = type metadata accessor for Optional(0LL, v5);
  void v2[9] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v2[10] = v7;
  v2[11] = swift_task_alloc((*(void *)(v7 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = *(void *)(v5 - 8);
  v2[12] = v8;
  v2[13] = swift_task_alloc((*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_1002B3288, v1, 0LL);
}

uint64_t sub_1002B3288()
{
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v4 = *(void *)(v0 + 80);
  uint64_t v5 = *(void *)(v0 + 64);
  uint64_t v6 = *(void *)(v0 + 48) + *(void *)(**(void **)(v0 + 48) + 104LL);
  __n128 v7 = swift_beginAccess(v6, v0 + 16, 0LL, 0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v4 + 16))(v1, v6, v3, v7);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1LL, v5) == 1)
  {
    uint64_t v8 = *(void *)(v0 + 48);
    (*(void (**)(void, void))(*(void *)(v0 + 80) + 8LL))(*(void *)(v0 + 88), *(void *)(v0 + 72));
    uint64_t v9 = *(void *)(*(void *)v8 + 112LL);
    uint64_t v10 = *(void *)(v8 + v9);
    *(void *)(v0 + 112) = v10;
    if (v10)
    {
      uint64_t v11 = async function pointer to Task.value.getter[1];
      swift_retain(v10);
      uint64_t v12 = (void *)swift_task_alloc(v11);
      *(void *)(v0 + 120) = v12;
      uint64_t v13 = sub_100156B68(&qword_1003F86D0);
      uint64_t v14 = sub_1002B350C;
    }

    else
    {
      uint64_t v23 = *(void *)(v0 + 56);
      uint64_t v24 = *(void *)(v0 + 64);
      uint64_t v25 = *(void *)(v0 + 48);
      uint64_t v26 = type metadata accessor for TaskPriority(0LL);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56LL))(v23, 1LL, 1LL, v26);
      uint64_t v29 = type metadata accessor for LazyThrowingAsyncWrapper(255LL, v24, v27, v28);
      uint64_t WitnessTable = swift_getWitnessTable(&unk_100351A98, v29);
      id v31 = (void *)swift_allocObject(&unk_1003ADA80, 40LL, 7LL);
      void v31[2] = v25;
      v31[3] = WitnessTable;
      v31[4] = v25;
      swift_retain_n(v25, 2LL);
      uint64_t v10 = sub_1002B3DF0(v23, (uint64_t)&unk_1003FDAF8, (uint64_t)v31, v24);
      *(void *)(v0 + 128) = v10;
      uint64_t v32 = *(void *)(v8 + v9);
      *(void *)(v8 + v9) = v10;
      swift_retain(v10);
      swift_release(v32);
      uint64_t v12 = (void *)swift_task_alloc(async function pointer to Task.value.getter[1]);
      *(void *)(v0 + 136) = v12;
      uint64_t v13 = sub_100156B68(&qword_1003F86D0);
      uint64_t v14 = sub_1002B35E8;
    }

    *uint64_t v12 = v0;
    v12[1] = v14;
    return Task.value.getter( *(void *)(v0 + 40),  v10,  *(void *)(v0 + 64),  v13,  &protocol self-conformance witness table for Error);
  }

  else
  {
    uint64_t v15 = *(void *)(v0 + 104);
    uint64_t v16 = *(void *)(v0 + 64);
    uint64_t v17 = *(void *)(v0 + 40);
    unsigned __int8 v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 96) + 32LL);
    v18(v15, *(void *)(v0 + 88), v16);
    v18(v17, v15, v16);
    uint64_t v19 = *(void *)(v0 + 104);
    uint64_t v20 = *(void *)(v0 + 88);
    uint64_t v21 = *(void *)(v0 + 56);
    (*(void (**)(void, void, uint64_t, void))(*(void *)(v0 + 96) + 56LL))( *(void *)(v0 + 40),  0LL,  1LL,  *(void *)(v0 + 64));
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

uint64_t sub_1002B350C()
{
  uint64_t v2 = *v1;
  swift_task_dealloc(*(void *)(*v1 + 120));
  uint64_t v3 = *(void *)(v2 + 48);
  if (v0)
  {
    swift_errorRelease(v0);
    uint64_t v4 = sub_1002B36C4;
  }

  else
  {
    uint64_t v4 = sub_1002B3578;
  }

  return swift_task_switch(v4, v3, 0LL);
}

uint64_t sub_1002B3578()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 56);
  (*(void (**)(void, void, uint64_t, void))(*(void *)(v0 + 96) + 56LL))( *(void *)(v0 + 40),  0LL,  1LL,  *(void *)(v0 + 64));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002B35E8()
{
  uint64_t v2 = *v1;
  swift_task_dealloc(*(void *)(*v1 + 136));
  uint64_t v3 = *(void *)(v2 + 48);
  if (v0)
  {
    swift_errorRelease(v0);
    uint64_t v4 = sub_1002B3734;
  }

  else
  {
    uint64_t v4 = sub_1002B3654;
  }

  return swift_task_switch(v4, v3, 0LL);
}

uint64_t sub_1002B3654()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 56);
  (*(void (**)(void, void, uint64_t, void))(*(void *)(v0 + 96) + 56LL))( *(void *)(v0 + 40),  0LL,  1LL,  *(void *)(v0 + 64));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002B36C4()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 56);
  (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 96) + 56LL))( *(void *)(v0 + 40),  1LL,  1LL,  *(void *)(v0 + 64));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002B3734()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 56);
  (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 96) + 56LL))( *(void *)(v0 + 40),  1LL,  1LL,  *(void *)(v0 + 64));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002B37A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a1;
  v4[6] = a4;
  uint64_t v6 = *(void *)(*(void *)a4 + 80LL);
  v4[7] = v6;
  uint64_t v7 = type metadata accessor for Optional(0LL, v6);
  v4[8] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v4[9] = v8;
  unint64_t v9 = (*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v4[10] = swift_task_alloc(v9);
  v4[11] = swift_task_alloc(v9);
  uint64_t v10 = *(void *)(v6 - 8);
  v4[12] = v10;
  void v4[13] = swift_task_alloc((*(void *)(v10 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_1002B384C, a4, 0LL);
}

uint64_t sub_1002B384C()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[7];
  uint64_t v3 = *(int **)(v1 + 112);
  uint64_t v4 = swift_allocObject(&unk_1003ADC18, 24LL, 7LL);
  v0[14] = v4;
  swift_weakInit(v4 + 16, v1);
  uint64_t v5 = swift_allocObject(&unk_1003ADC40, 32LL, 7LL);
  v0[15] = v5;
  *(void *)(v5 + swift_unknownObjectWeakDestroy(v0 + 16) = v2;
  *(void *)(v5 + 24) = v4;
  uint64_t v6 = v3[1];
  unint64_t v9 = (int *)((char *)v3 + *v3);
  swift_retain(v4);
  uint64_t v7 = (void *)swift_task_alloc(v6);
  v0[16] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1002B391C;
  return ((uint64_t (*)(void, uint64_t (*)(), uint64_t))v9)(v0[13], sub_1002B4068, v5);
}

uint64_t sub_1002B391C()
{
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 128LL);
  *(void *)(*(void *)v1 + 136LL) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    uint64_t v4 = v2[6];
    uint64_t v5 = sub_1002B3AB8;
  }

  else
  {
    uint64_t v7 = v2[14];
    uint64_t v6 = v2[15];
    uint64_t v8 = v2[6];
    swift_release(v6);
    swift_release(v7);
    uint64_t v5 = sub_1002B3998;
    uint64_t v4 = v8;
  }

  return swift_task_switch(v5, v4, 0LL);
}

uint64_t sub_1002B3998()
{
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v5 = *(void *)(v0 + 64);
  uint64_t v4 = *(void *)(v0 + 72);
  uint64_t v7 = *(void *)(v0 + 48);
  uint64_t v6 = *(void *)(v0 + 56);
  uint64_t v12 = *(void *)(v0 + 104);
  uint64_t v13 = *(void *)(v0 + 40);
  (*(void (**)(uint64_t))(v1 + 16))(v2);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v1 + 56))(v2, 0LL, 1LL, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v3, v2, v5);
  uint64_t v8 = v7 + *(void *)(*(void *)v7 + 104LL);
  swift_beginAccess(v8, v0 + 16, 33LL, 0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 40))(v8, v3, v5);
  swift_endAccess(v0 + 16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32))(v13, v12, v6);
  uint64_t v9 = *(void *)(*(void *)v7 + 112LL);
  uint64_t v10 = *(void *)(v7 + v9);
  *(void *)(v7 + v9) = 0LL;
  swift_release(v10);
  swift_task_dealloc(v12);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002B3AB8()
{
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v4 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 88);
  uint64_t v5 = *(void *)(v0 + 48);
  swift_release(*(void *)(v0 + 120));
  swift_release(v1);
  uint64_t v6 = *(void *)(*(void *)v5 + 112LL);
  uint64_t v7 = *(void *)(v5 + v6);
  *(void *)(v5 + v6) = 0LL;
  swift_release(v7);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for LazyThrowingAsyncWrapper(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100173DC8(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LazyThrowingAsyncWrapper);
}

uint64_t sub_1002B3B4C()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_1002B3B78(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = (void *)swift_task_alloc(dword_1003FDAF4);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100160A04;
  return sub_1002B37A4(a1, v6, v7, v4);
}

uint64_t sub_1002B3BD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100156B68(&qword_1003F86B0);
  __chkstk_darwin(v4);
  uint64_t v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  a1 += 16LL;
  uint64_t v7 = type metadata accessor for TaskPriority(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56LL))(v6, 1LL, 1LL, v7);
  uint64_t v8 = swift_allocObject(&unk_1003ADC18, 24LL, 7LL);
  swift_beginAccess(a1, v14, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(a1);
  swift_weakInit(v8 + 16, Strong);
  swift_release(Strong);
  uint64_t v10 = (void *)swift_allocObject(&unk_1003ADC68, 48LL, 7LL);
  v10[2] = 0LL;
  v10[3] = 0LL;
  v10[4] = a2;
  v10[5] = v8;
  uint64_t v11 = sub_1002B2BF4((uint64_t)v6, (uint64_t)&unk_1003FDB08, (uint64_t)v10);
  return swift_release(v11);
}

uint64_t sub_1002B3CEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 40) = a1;
  *(void *)(v4 + 48) = a4;
  return swift_task_switch(sub_1002B3D04, 0LL, 0LL);
}

uint64_t sub_1002B3D04()
{
  uint64_t v1 = *(void *)(v0 + 48) + 16LL;
  swift_beginAccess(v1, v0 + 16, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(v1);
  *(void *)(v0 + 56) = Strong;
  if (Strong)
  {
    *(void *)(v0 + 64) = *(void *)(*(void *)Strong + 184LL);
    return swift_task_switch(sub_1002B3D90, Strong, 0LL);
  }

  else
  {
    **(_BYTE **)(v0 + 40) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

uint64_t sub_1002B3D90()
{
  uint64_t v1 = *(void *)(v0 + 56);
  (*(void (**)(void))(v0 + 64))();
  swift_release(v1);
  return swift_task_switch(sub_1002B3DD4, 0LL, 0LL);
}

uint64_t sub_1002B3DD4()
{
  **(_BYTE **)(v0 + 40) = *(void *)(v0 + 56) == 0LL;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002B3DF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for TaskPriority(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1, 1LL, v8);
  if ((_DWORD)v10 == 1)
  {
    sub_1001863AC(a1);
    uint64_t v11 = 7168LL;
    uint64_t v12 = *(void *)(a3 + 16);
    if (!v12)
    {
LABEL_6:
      unsigned __int8 v18 = 0LL;
      return swift_task_create(v11, v18, a4, a2, a3);
    }
  }

  else
  {
    unsigned __int8 v19 = TaskPriority.rawValue.getter(v10);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
    uint64_t v11 = v19 | 0x1C00LL;
    uint64_t v12 = *(void *)(a3 + 16);
    if (!v12) {
      goto LABEL_6;
    }
  }

  uint64_t v13 = *(void *)(a3 + 24);
  uint64_t ObjectType = swift_getObjectType(v12);
  swift_unknownObjectRetain(v12);
  uint64_t v15 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v13);
  uint64_t v17 = v16;
  swift_unknownObjectRelease(v12);
  if (!(v17 | v15)) {
    goto LABEL_6;
  }
  v21[0] = 0LL;
  v21[1] = 0LL;
  unsigned __int8 v18 = v21;
  v21[2] = v15;
  v21[3] = v17;
  return swift_task_create(v11, v18, a4, a2, a3);
}

void *sub_1002B3F18()
{
  uint64_t v1 = *v0;
  swift_release(v0[15]);
  uint64_t v2 = (char *)v0 + *(void *)(*v0 + 104LL);
  uint64_t v3 = type metadata accessor for Optional(0LL, *(void *)(v1 + 80));
  (*(void (**)(char *, uint64_t))(*(void *)(v3 - 8) + 8LL))(v2, v3);
  swift_release(*(void *)((char *)v0 + *(void *)(*v0 + 112LL)));
  swift_defaultActor_destroy(v0);
  return v0;
}

uint64_t sub_1002B3F90(uint64_t a1)
{
  v4[1] = (char *)&value witness table for () + 64;
  uint64_t result = type metadata accessor for Optional(319LL, *(void *)(a1 + 80));
  if (v3 <= 0x3F)
  {
    v4[2] = *(void *)(result - 8) + 64LL;
    void v4[3] = &unk_100351B00;
    uint64_t result = swift_initClassMetadata2(a1, 0LL, 4LL, v4, a1 + 88);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_1002B4020()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1002B4044()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_1002B4068()
{
  return sub_1002B3BD0(*(void *)(v0 + 24), *(void *)(v0 + 16));
}

uint64_t sub_1002B4070()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t sub_1002B409C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 40);
  uint64_t v5 = (void *)swift_task_alloc(dword_1003FDB04);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100160A04;
  v5[5] = a1;
  v5[6] = v4;
  return swift_task_switch(sub_1002B3D04, 0LL, 0LL);
}

uint64_t sub_1002B4100(uint64_t a1, int *a2)
{
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  unint64_t v3 = (void *)swift_task_alloc(a2[1]);
  *(void *)(v2 + 24) = v3;
  void *v3 = v2;
  v3[1] = sub_1002B4168;
  return v5(v2 + 32);
}

uint64_t sub_1002B4168()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(_BYTE **)(*v0 + 16);
  uint64_t v4 = *v0;
  swift_task_dealloc(*(void *)(*v0 + 24));
  *uint64_t v2 = *(_BYTE *)(v1 + 32);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_1002B41B8(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc(dword_1003FDB14);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100160A04;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1003FDB10 + dword_1003FDB10))(a1, v4);
}

uint64_t sub_1002B4228()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_1002B424C(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 24);
  uint64_t v5 = (void *)swift_task_alloc(dword_1003FDB2C);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100160A04;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1003FDB28 + dword_1003FDB28))(a1, v4);
}

uint64_t type metadata accessor for RouteRecommendationDisplayMonitorSuppressor()
{
  return objc_opt_self(&OBJC_CLASS____TtC12mediaremoted43RouteRecommendationDisplayMonitorSuppressor);
}

ValueMetadata *type metadata accessor for RuntimeUtils()
{
  return &type metadata for RuntimeUtils;
}

void sub_1002B43E4(uint64_t a1, uint64_t a2, os_log_s *a3)
{
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) name]);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) requestID]);
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
  [v8 timeIntervalSinceDate:*(void *)(a1 + 48)];
  int v10 = 138544130;
  uint64_t v11 = v6;
  __int16 v12 = 2114;
  uint64_t v13 = v7;
  __int16 v14 = 2114;
  uint64_t v15 = a2;
  __int16 v16 = 2048;
  uint64_t v17 = v9;
  _os_log_error_impl( (void *)&_mh_execute_header,  a3,  OS_LOG_TYPE_ERROR,  "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds",  (uint8_t *)&v10,  0x2Au);
}

void sub_1002B44E8(uint64_t a1, uint64_t a2, os_log_s *a3)
{
  char active = (void *)MRMediaRemoteActiveEndpointTypeCopyDescription();
  int v6 = 138543618;
  uint64_t v7 = active;
  __int16 v8 = 2114;
  uint64_t v9 = a2;
  _os_log_debug_impl( (void *)&_mh_execute_header,  a3,  OS_LOG_TYPE_DEBUG,  "[SystemEndpointController] Reevaluating %{public}@ActiveEndpoint because %{public}@",  (uint8_t *)&v6,  0x16u);
}

void sub_1002B4590(uint64_t a1, os_log_s *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  int v3 = 138412290;
  uint64_t v4 = v2;
  _os_log_debug_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_DEBUG,  "[SystemEndpointController] Updating activeEndpointInfo %@",  (uint8_t *)&v3,  0xCu);
}

void sub_1002B4608( os_log_s *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1002B463C(uint64_t *a1, os_log_s *a2, uint64_t a3)
{
  uint64_t v3 = *a1;
  int v4 = 138412290;
  uint64_t v5 = v3;
  sub_10000EC24( (void *)&_mh_execute_header,  a2,  a3,  "[MRDGroupSessionServer] Found active group session for device: %@, but operation had already timed out",  (uint8_t *)&v4);
}

void sub_1002B46AC(uint64_t a1, void *a2)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([a2 bundleIdentifier]);
  sub_10000EBFC();
  sub_10000EBD8( (void *)&_mh_execute_header,  v3,  v4,  "[MRDGroupSessionServer] Push eligibility state: %@ to new client: %@",  v5,  v6,  v7,  v8,  v9);

  sub_10000EBEC();
}

void sub_1002B4730(uint64_t a1, void *a2)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([a2 bundleIdentifier]);
  sub_10000EBFC();
  sub_10000EBD8( (void *)&_mh_execute_header,  v3,  v4,  "[MRDGroupSessionServer] Push session state: %@ to new client: %@",  v5,  v6,  v7,  v8,  v9);

  sub_10000EBEC();
}

void sub_1002B47B4(void *a1, os_log_s *a2)
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([a1 localizedFailureReason]);
  int v5 = 138412290;
  uint64_t v6 = v3;
  sub_10000EC24( (void *)&_mh_execute_header,  a2,  v4,  "[MRDGroupSessionServer] Cannot present proximity card: %@",  (uint8_t *)&v5);
}

void sub_1002B4840(uint64_t a1, os_log_s *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_debug_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_DEBUG,  "[MRDGroupSessionServer] Accepting connection from client %@",  (uint8_t *)&v2,  0xCu);
}

void sub_1002B48B4( os_log_s *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1002B48E8(uint64_t a1, void *a2, os_log_s *a3)
{
  int v5 = (void *)objc_claimAutoreleasedReturnValue([a2 connection]);
  int v7 = 138412546;
  uint64_t v8 = a1;
  sub_100011864();
  sub_100011858( (void *)&_mh_execute_header,  a3,  v6,  "[MRDGroupSessionClient] connectToSession - initial state %@ to connection: %@",  (uint8_t *)&v7);

  sub_10000EBEC();
}

void sub_1002B4980(uint64_t a1, void *a2, os_log_s *a3)
{
  int v5 = (void *)objc_claimAutoreleasedReturnValue([a2 connection]);
  int v7 = 138412546;
  uint64_t v8 = a1;
  sub_100011864();
  sub_100011858( (void *)&_mh_execute_header,  a3,  v6,  "[MRDGroupSessionClient] connectToSession - placeholder session. Empty state %@ to connection: %@",  (uint8_t *)&v7);

  sub_10000EBEC();
}

void sub_1002B4A18(void *a1, os_log_s *a2)
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([a1 sessionIdentifier]);
  int v5 = 138412290;
  uint64_t v6 = v3;
  sub_10000EC24( (void *)&_mh_execute_header,  a2,  v4,  "[MRDGroupSessionClient] Failed to find session for identifier: %@",  (uint8_t *)&v5);

  sub_100011874();
}

void sub_1002B4AA0(uint64_t a1, void *a2, uint64_t a3, os_log_s *a4)
{
  *(_DWORD *)a3 = 138412546;
  *(void *)(a3 + 4) = a1;
  *(_WORD *)(a3 + 12) = 2112;
  *(void *)(a3 + 14) = a2;
  sub_100011858( (void *)&_mh_execute_header,  a4,  a3,  "[MRDGroupSessionClient] connectToSession - pending session. Empty state %@ to connection: %@",  (uint8_t *)a3);
}

void sub_1002B4AFC(uint64_t a1, os_log_s *a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  int v4 = 138412290;
  uint64_t v5 = v3;
  sub_10000EC24( (void *)&_mh_execute_header,  a2,  a3,  "[MRDGroupSessionClient] Pending session timed out: %@",  (uint8_t *)&v4);
}

void sub_1002B4B6C(void *a1, os_log_s *a2)
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([a1 sessionIdentifier]);
  int v5 = 138412290;
  uint64_t v6 = v3;
  sub_10000EC24( (void *)&_mh_execute_header,  a2,  v4,  "[MRDGroupSessionClient] Pending session joined after timeout: %@",  (uint8_t *)&v5);

  sub_100011874();
}

void sub_1002B4BF0(uint64_t a1, void *a2, os_log_s *a3)
{
  int v5 = (void *)objc_claimAutoreleasedReturnValue([a2 sessionIdentifier]);
  int v6 = 138412546;
  uint64_t v7 = a1;
  sub_100011864();
  _os_log_error_impl( (void *)&_mh_execute_header,  a3,  OS_LOG_TYPE_ERROR,  "[MRDGroupSessionClient] Joined remote group session: %@ not matching pending session: %@",  (uint8_t *)&v6,  0x16u);

  sub_10000EBEC();
}

void sub_1002B4C8C( os_log_s *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1002B4CBC()
{
}

void sub_1002B4D28()
{
}

void sub_1002B4D8C(int a1, os_log_s *a2)
{
  v2[0] = 67109120;
  v2[1] = a1;
  _os_log_error_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_ERROR,  "Error for fade out state. Status = %u.",  (uint8_t *)v2,  8u);
  sub_10001C8F8();
}

void sub_1002B4DFC( os_log_s *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1002B4E2C(void *a1, uint64_t a2, os_log_s *a3)
{
  *(_DWORD *)a2 = 138412290;
  *(void *)(a2 + 4) = a1;
  sub_10000EC24( (void *)&_mh_execute_header,  a3,  (uint64_t)a3,  "[MRDRemoteControlServer] handleSendApplicationConnectionMessage - connection: %@ not found, it has likely just invalidated",  (uint8_t *)a2);
}

void sub_1002B4E78(id *a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([*a1 commandID]);
  sub_10001C8EC();
  sub_10001C8D8( (void *)&_mh_execute_header,  v2,  v3,  "Command <%{public}@> ignored because of pre-processing error %{public}@.",  v4,  v5,  v6,  v7,  v8);

  sub_10000EBEC();
}

void sub_1002B4F0C(uint64_t a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) displayName]);
  sub_10001C8EC();
  sub_10001C8D8( (void *)&_mh_execute_header,  v2,  v3,  "Client %{public}@ failed to reply to command (SendCommandErr = %@)",  v4,  v5,  v6,  v7,  v8);

  sub_10000EBEC();
}

void sub_1002B4F9C()
{
}

void sub_1002B5008(void *a1, uint64_t a2, os_log_s *a3)
{
  uint64_t v6 = a1[4];
  uint64_t v7 = a1[5];
  uint8_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
  [v8 timeIntervalSinceDate:a1[6]];
  int v10 = 138544130;
  uint64_t v11 = v6;
  __int16 v12 = 2114;
  uint64_t v13 = v7;
  __int16 v14 = 2114;
  uint64_t v15 = a2;
  __int16 v16 = 2048;
  uint64_t v17 = v9;
  _os_log_error_impl( (void *)&_mh_execute_header,  a3,  OS_LOG_TYPE_ERROR,  "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds",  (uint8_t *)&v10,  0x2Au);
}

void sub_1002B50E8(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) requestID]);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
  sub_10002154C(v3, v4);
  sub_1000214F8();
  sub_100021524( (void *)&_mh_execute_header,  v5,  v6,  "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds",  v7,  v8,  v9,  v10,  v11);

  sub_100021538();
}

void sub_1002B518C(uint64_t a1, os_log_s *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_ERROR,  "[MRDUIActivityServer] Error fetching active user: %@",  (uint8_t *)&v2,  0xCu);
}

void sub_1002B5200(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3 = 138412546;
  uint64_t v4 = a1;
  __int16 v5 = 2112;
  uint64_t v6 = a2;
  _os_log_debug_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_DEBUG,  "[MRDUIActivityServer] >>>+ clients: %@, routes: %@",  (uint8_t *)&v3,  0x16u);
}

void sub_1002B5284(void *a1, os_log_s *a2)
{
  int v3 = (void *)objc_claimAutoreleasedReturnValue([a1 nowPlayingActivityAssertionEndDate]);
  int v4 = 138412290;
  __int16 v5 = v3;
  _os_log_debug_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_DEBUG,  "[MRDUIActivityServer] Deferring end of now playing activity until: %@",  (uint8_t *)&v4,  0xCu);
}

void sub_1002B5318( os_log_s *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1002B5348( os_log_s *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1002B5378( os_log_s *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1002B53A8(void *a1, uint64_t a2, os_log_s *a3)
{
  uint64_t v6 = a1[5];
  uint64_t v7 = a1[6];
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
  [v8 timeIntervalSinceDate:a1[7]];
  int v10 = 138544130;
  uint64_t v11 = v6;
  __int16 v12 = 2114;
  uint64_t v13 = v7;
  __int16 v14 = 2114;
  uint64_t v15 = a2;
  __int16 v16 = 2048;
  uint64_t v17 = v9;
  _os_log_error_impl( (void *)&_mh_execute_header,  a3,  OS_LOG_TYPE_ERROR,  "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds",  (uint8_t *)&v10,  0x2Au);
}

void sub_1002B5488(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_ERROR,  "[MRDNowPlayingPlayerClient] Creating playerClient with unexpected pid",  v1,  2u);
}

void sub_1002B54C8(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3 = 138412546;
  uint64_t v4 = a1;
  __int16 v5 = 2112;
  uint64_t v6 = a2;
  _os_log_error_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_ERROR,  "[MRDIDSService] %@ Error %@ sending message",  (uint8_t *)&v3,  0x16u);
}

void sub_1002B554C(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_ERROR,  "[ODDSRouting] Route is not an output device-based route and a route UID is not available. Cannot pick route.",  v1,  2u);
}

void sub_1002B558C(uint64_t a1, uint64_t a2, os_log_t log)
{
  uint64_t v3 = *(void *)(a1 + 40);
  int v4 = 138543618;
  uint64_t v5 = v3;
  __int16 v6 = 2114;
  uint64_t v7 = a2;
  _os_log_error_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_ERROR,  "[ODDSRouting] Could not find output device for route %{public}@ - error = %{public}@",  (uint8_t *)&v4,  0x16u);
}

void sub_1002B5614(uint64_t a1, os_log_s *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_ERROR,  "[ProximityController] Now playing request failed: %@",  (uint8_t *)&v2,  0xCu);
}

void sub_1002B5688(uint64_t a1, os_log_s *a2)
{
  int v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) displayMonitor]);
  unsigned int v5 = [v4 displayOn];
  __int16 v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) displayMonitor]);
  unsigned int v7 = [v6 lockScreenVisible];
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) displayMonitor]);
  v9[0] = 67109632;
  v9[1] = v5;
  __int16 v10 = 1024;
  unsigned int v11 = v7;
  __int16 v12 = 1024;
  unsigned int v13 = [v8 controlCenterVisible];
  _os_log_debug_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_DEBUG,  "[ProximityController] display: %{BOOL}u, lockscreen: %{BOOL}u, controlcenter: %{BOOL}u",  (uint8_t *)v9,  0x14u);
}

void sub_1002B5784( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1002B57EC()
{
}

void sub_1002B584C(uint64_t a1, uint64_t *a2, os_log_s *a3)
{
  unsigned int v5 = *(void **)(*(void *)(*(void *)a1 + 8LL) + 40LL);
  __int16 v6 = (void *)objc_claimAutoreleasedReturnValue([v5 outputDevices]);
  uint64_t v7 = *a2;
  int v8 = 138412802;
  uint64_t v9 = v5;
  __int16 v10 = 2112;
  unsigned int v11 = v6;
  __int16 v12 = 2112;
  uint64_t v13 = v7;
  _os_log_debug_impl( (void *)&_mh_execute_header,  a3,  OS_LOG_TYPE_DEBUG,  "[MRDAVOutputContextManager] Returning active outputContext %@ with devices: %@ for: %@",  (uint8_t *)&v8,  0x20u);
}

void sub_1002B5914(uint64_t a1, uint64_t a2, os_log_s *a3)
{
  *(_DWORD *)uint64_t v3 = 138412546;
  *(void *)&v3[4] = a1;
  *(_WORD *)&v3[12] = 2112;
  *(void *)&v3[14] = *(void *)(a2 + 40);
  sub_1000446D8( (void *)&_mh_execute_header,  a2,  a3,  "[MRDAVOutputContextManager] Ignoring inactiveOutputContexts outputContext %@ because still in use for: %@",  *(void *)v3,  *(void *)&v3[8],  *(void *)&v3[16]);
  sub_10001C900();
}

void sub_1002B5988( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1002B59EC()
{
}

void sub_1002B5A4C(uint64_t a1, uint64_t a2, os_log_s *a3)
{
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
  [v7 timeIntervalSinceDate:*(void *)(a1 + 48)];
  int v9 = 138544130;
  __int16 v10 = @"MRDMRRelayConnectionManager.waitForConnection";
  __int16 v11 = 2114;
  uint64_t v12 = v6;
  __int16 v13 = 2114;
  uint64_t v14 = a2;
  __int16 v15 = 2048;
  uint64_t v16 = v8;
  _os_log_error_impl( (void *)&_mh_execute_header,  a3,  OS_LOG_TYPE_ERROR,  "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds",  (uint8_t *)&v9,  0x2Au);
}

void sub_1002B5B34(os_log_t log)
{
  *(_WORD *)os_log_t v1 = 0;
  _os_log_error_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_ERROR,  "[MRDRemoteControlGroupSessionCoordinator] Failed to start group session. Fast invalidation occurred.",  v1,  2u);
}

void sub_1002B5B74(uint64_t *a1, os_log_s *a2)
{
  uint64_t v2 = *a1;
  int v3 = 138543362;
  uint64_t v4 = v2;
  _os_log_error_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_ERROR,  "[MRDRemoteControlGroupSessionCoordinator] Failed to start group session with error: %{public}@.",  (uint8_t *)&v3,  0xCu);
}

void sub_1002B5BEC(uint64_t a1, os_log_s *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_ERROR,  "Attempted to enqueue disallowed background task %@",  (uint8_t *)&v2,  0xCu);
}

void sub_1002B5C60()
{
  uint64_t v1 = sub_100068224(v0);
  uint64_t Description = MRTransactionNameGetDescription(v1);
  int v9 = (void *)objc_claimAutoreleasedReturnValue(Description);
  sub_1000681CC( (void *)&_mh_execute_header,  v3,  v4,  "[MRDTransaction] Dealloc Transaction: %p %@ for playerPath %@",  v5,  v6,  v7,  v8,  2u);

  sub_1000681E0();
}

void sub_1002B5CF8()
{
  uint64_t v1 = sub_100068218(v0);
  uint64_t Description = MRTransactionNameGetDescription(v1);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(Description);
  sub_10001C8D8( (void *)&_mh_execute_header,  v4,  v5,  "[MRDTransaction] Canceling %@ transaction for playerPath %@",  v6,  v7,  v8,  v9,  2u);

  sub_10000EBEC();
}

void sub_1002B5D88()
{
  uint64_t v1 = sub_100068218(v0);
  uint64_t Description = MRTransactionNameGetDescription(v1);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(Description);
  sub_10000EBFC();
  sub_10001C8D8( (void *)&_mh_execute_header,  v4,  v5,  "[MRDTransaction] %@ %@ received interrupted/invalid connection",  v6,  v7,  v8,  v9,  v10);

  sub_10000EBEC();
}

void sub_1002B5E04(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_100068224(a1);
  uint64_t Description = MRTransactionNameGetDescription(v3);
  __int16 v11 = (void *)objc_claimAutoreleasedReturnValue(Description);
  [a2 length];
  sub_1000681CC((void *)&_mh_execute_header, v5, v6, "[MRDTransaction] %p %@ received bytes %ld", v7, v8, v9, v10, 2u);

  sub_1000681E0();
}

void sub_1002B5EAC()
{
  uint64_t v2 = sub_100068218(v1);
  uint64_t Description = MRTransactionNameGetDescription(v2);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(Description);
  sub_10000EBFC();
  _os_log_debug_impl( (void *)&_mh_execute_header,  v0,  OS_LOG_TYPE_DEBUG,  "[MRDTransaction] %p %@ received end signal received",  v5,  0x16u);

  sub_10000EBEC();
}

void sub_1002B5F38()
{
  uint64_t v1 = sub_100068218(v0);
  uint64_t Description = MRTransactionNameGetDescription(v1);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(Description);
  sub_10000EBFC();
  sub_10001C8D8( (void *)&_mh_execute_header,  v4,  v5,  "[MRDTransaction] %p %@ could not extract connection to query",  v6,  v7,  v8,  v9,  v10);

  sub_10000EBEC();
}

void sub_1002B5FB4()
{
  uint64_t v1 = sub_100068218(v0);
  uint64_t Description = MRTransactionNameGetDescription(v1);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(Description);
  sub_10000EBFC();
  sub_10001C8D8( (void *)&_mh_execute_header,  v4,  v5,  "[MRDTransaction] %p %@ could not create reply to qeury",  v6,  v7,  v8,  v9,  v10);

  sub_10000EBEC();
}

void sub_1002B6030(uint64_t a1)
{
  uint64_t v1 = sub_100068224(a1);
  uint64_t Description = MRTransactionNameGetDescription(v1);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(Description);
  sub_1000681FC();
  sub_1000681CC( (void *)&_mh_execute_header,  v4,  v5,  "[MRDTransaction] %p %@ querying for %ld bytes",  v6,  v7,  v8,  v9,  2u);

  sub_1000681E0();
}

void sub_1002B60C0()
{
  uint64_t v1 = sub_100068224(v0);
  uint64_t Description = MRTransactionNameGetDescription(v1);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(Description);
  sub_1000681FC();
  sub_1000681CC( (void *)&_mh_execute_header,  v4,  v5,  "[MRDTransaction] %p %@ ending with %ld bytes remaining",  v6,  v7,  v8,  v9,  2u);

  sub_1000681E0();
}

void sub_1002B6148(uint64_t a1, uint64_t a2, os_log_t log)
{
  uint64_t v3 = *(void *)(a1 + 16);
  int v4 = 134218496;
  uint64_t v5 = v3;
  __int16 v6 = 2048;
  uint64_t v7 = a2;
  __int16 v8 = 2048;
  uint64_t v9 = v3 + a2;
  _os_log_debug_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_DEBUG,  "[MRTransactionServer] Memory Usage: %ld + %ld -> %ld",  (uint8_t *)&v4,  0x20u);
}

void sub_1002B61DC(void *a1, uint64_t a2)
{
  uint64_t Description = MRTransactionNameGetDescription([a1 name]);
  int v4 = (void *)objc_claimAutoreleasedReturnValue(Description);
  uint64_t Keys = MRTransactionPacketsGetKeys(a2);
  __int16 v6 = (void *)objc_claimAutoreleasedReturnValue(Keys);
  sub_10006A550();
  sub_10000EBD8( (void *)&_mh_execute_header,  v7,  v8,  "[MRTransactionServer] %@ received keys %@",  v9,  v10,  v11,  v12,  v13);

  sub_10000EBEC();
}

void sub_1002B6274(uint64_t a1, os_log_s *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  int v3 = 138412290;
  uint64_t v4 = v2;
  _os_log_debug_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_DEBUG,  "[MRTransactionServer] %@ received ack",  (uint8_t *)&v3,  0xCu);
}

void sub_1002B62EC(void *a1, void *a2)
{
  uint64_t Description = MRTransactionNameGetDescription([a1 name]);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(Description);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([a2 allKeys]);
  sub_10006A550();
  sub_10000EBD8((void *)&_mh_execute_header, v6, v7, "[MRTransactionServer] %@ received keys %@", v8, v9, v10, v11, v12);

  sub_10000EBEC();
}

void sub_1002B6384(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
  [v2 timeIntervalSinceDate:*(void *)(a1 + 80)];
  sub_100021524( (void *)&_mh_execute_header,  v3,  v4,  "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds",  v5,  v6,  v7,  v8,  2u);

  sub_100021538();
}

void sub_1002B6444(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
  [v2 timeIntervalSinceDate:*(void *)(a1 + 56)];
  sub_100021524( (void *)&_mh_execute_header,  v3,  v4,  "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds",  v5,  v6,  v7,  v8,  2u);

  sub_100021538();
}

void sub_1002B6504()
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
  [v1 timeIntervalSinceDate:*(void *)(v0 + 56)];
  sub_100021524( (void *)&_mh_execute_header,  v2,  v3,  "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds",  v4,  v5,  v6,  v7,  2u);

  sub_100021538();
}

void sub_1002B65BC()
{
  id v2 = [(id)sub_10007164C(v1) requestID];
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
  sub_10002154C(v4, v5);
  sub_1000214F8();
  sub_100021524( (void *)&_mh_execute_header,  v6,  v7,  "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds",  v8,  v9,  v10,  v11,  v12);

  sub_100021538();
}

void sub_1002B6654(uint64_t a1, os_log_s *a2)
{
  int v2 = 138543362;
  uint64_t v3 = a1;
  _os_log_error_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_ERROR,  "Cluster requires primary but none was found. Members: %{public}@",  (uint8_t *)&v2,  0xCu);
}

void sub_1002B66C8(uint64_t a1, os_log_s *a2)
{
  int v2 = 134217984;
  uint64_t v3 = a1;
  _os_log_error_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_ERROR,  "[MRUIControllerConnection] <%p> No endpoint found. Please check that MediaRemoteUI is installed and registered with launchd.",  (uint8_t *)&v2,  0xCu);
}

void sub_1002B673C()
{
}

void sub_1002B6768( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1002B67D4()
{
}

void sub_1002B6800()
{
}

void sub_1002B682C()
{
}

void sub_1002B6858()
{
}

void sub_1002B68B8()
{
}

void sub_1002B68E4()
{
}

void sub_1002B6944()
{
}

void sub_1002B69A4()
{
}

void sub_1002B6A04()
{
}

void sub_1002B6A64()
{
}

void sub_1002B6A90()
{
}

void sub_1002B6AF0( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1002B6B58()
{
}

void sub_1002B6BB8()
{
}

void sub_1002B6BE4()
{
}

void sub_1002B6C10(uint64_t *a1, os_log_s *a2)
{
  uint64_t v2 = *a1;
  int v3 = 138543362;
  uint64_t v4 = v2;
  _os_log_fault_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_FAULT,  "[MRDGroupSessionManager] Invalidation received for untracked session: %{public}@.",  (uint8_t *)&v3,  0xCu);
  sub_10001C900();
}

void sub_1002B6C84()
{
}

void sub_1002B6CE4(uint64_t a1, uint64_t a2, os_log_s *a3)
{
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) identifier]);
  sub_10001C8EC();
  __int16 v7 = 2112;
  uint64_t v8 = v5;
  _os_log_error_impl( (void *)&_mh_execute_header,  a3,  OS_LOG_TYPE_ERROR,  "[MRDGroupSessionManager] %@ No equivalent WHA endpoint for session: %@",  v6,  0x16u);
}

void sub_1002B6D94()
{
}

void sub_1002B6DC0(uint64_t a1, uint64_t a2, os_log_s *a3)
{
  uint8_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) requestID]);
  __int16 v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)a2 + 8) error]);
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
  [v8 timeIntervalSinceDate:*(void *)(a1 + 48)];
  int v10 = 138544130;
  uint64_t v11 = @"MRDPauseOutputDevicesRequest.pauseOutputDeviceUIDs";
  __int16 v12 = 2114;
  uint8_t v13 = v6;
  __int16 v14 = 2114;
  __int16 v15 = v7;
  __int16 v16 = 2048;
  uint64_t v17 = v9;
  _os_log_error_impl( (void *)&_mh_execute_header,  a3,  OS_LOG_TYPE_ERROR,  "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds",  (uint8_t *)&v10,  0x2Au);
}

void sub_1002B6ED0()
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
  sub_100094428(v1, v2);
  sub_1000943D4();
  sub_100021524( (void *)&_mh_execute_header,  v3,  v4,  "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds",  v5,  v6,  v7,  v8,  2u);

  sub_100021538();
}

void sub_1002B6F68()
{
}

void sub_1002B6FC8()
{
  os_log_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
  sub_100094428(v1, v2);
  sub_1000943D4();
  sub_100021524( (void *)&_mh_execute_header,  v3,  v4,  "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds",  v5,  v6,  v7,  v8,  2u);

  sub_100021538();
}

void sub_1002B7060( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1002B70C4()
{
}

void sub_1002B7124( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1002B7188()
{
  os_log_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
  sub_100094428(v1, v2);
  sub_1000943D4();
  sub_100021524( (void *)&_mh_execute_header,  v3,  v4,  "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds",  v5,  v6,  v7,  v8,  2u);

  sub_100021538();
}

void sub_1002B7228()
{
  os_log_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
  sub_100094428(v1, v2);
  sub_1000943D4();
  sub_100021524( (void *)&_mh_execute_header,  v3,  v4,  "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds",  v5,  v6,  v7,  v8,  2u);

  sub_100021538();
}

void sub_1002B72C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_10009FE70(a1, a2);
  uint64_t v3 = (void *)MRPairedDeviceCopyDescription(v2);
  sub_10006A550();
  sub_10000EBD8( (void *)&_mh_execute_header,  v4,  v5,  "[MRDNowPlayingOriginClient] Set: deviceInfo for <%@>:\n %@",  v6,  v7,  v8,  v9,  v10);

  sub_10000EBEC();
}

void sub_1002B7340(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_10009FE70(a1, a2);
  uint64_t v4 = (void *)MRPairedDeviceCopyDeltaDescription(v2, *(void *)(v3 + 48));
  sub_10006A550();
  sub_10000EBD8( (void *)&_mh_execute_header,  v5,  v6,  "[MRDNowPlayingOriginClient] Set: deviceInfo for <%@>:\n %@",  v7,  v8,  v9,  v10,  v11);

  sub_10000EBEC();
}

void sub_1002B73BC( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1002B7424( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1002B748C( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1002B74F0(uint64_t a1, os_log_s *a2)
{
  uint64_t v3 = (objc_class *)objc_opt_class(a1);
  uint64_t v4 = NSStringFromClass(v3);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  sub_1000A33B0();
  _os_log_fault_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_FAULT,  "dropping event of unexpected type (%@): %@",  v6,  0x16u);

  sub_10000EBEC();
}

void sub_1002B7584(uint64_t a1, os_log_s *a2)
{
  uint64_t v3 = (objc_class *)objc_opt_class(a1);
  uint64_t v4 = NSStringFromClass(v3);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  sub_1000A33B0();
  sub_1000A33C8((void *)&_mh_execute_header, a2, v6, "[MRDRRC].IRD dropping event of unexpected type (%@): %@", v7);

  sub_10000EBEC();
}

void sub_1002B7610(uint64_t a1, uint64_t a2, os_log_s *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  int v4 = 138412546;
  uint64_t v5 = v3;
  __int16 v6 = 2112;
  uint64_t v7 = a2;
  sub_1000A33C8( (void *)&_mh_execute_header,  a3,  (uint64_t)a3,  "[MRDRRC].IRD couldn't get eligibility of %@: %@",  (uint8_t *)&v4);
}

void sub_1002B7690()
{
}

void sub_1002B76BC()
{
}

void sub_1002B76E8()
{
}

void sub_1002B7714()
{
}

void sub_1002B7740()
{
}

void sub_1002B776C()
{
}

void sub_1002B7798(uint64_t a1, os_log_s *a2)
{
  int v2 = 138543362;
  uint64_t v3 = a1;
  _os_log_error_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_ERROR,  "Error unpicking AirPlay routes. %{public}@",  (uint8_t *)&v2,  0xCu);
}

void sub_1002B780C(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_debug_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_DEBUG,  "[MRDLockScreenController] Delaying deactivation of lockScreen",  v1,  2u);
}

void sub_1002B784C(uint64_t a1, os_log_s *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_debug_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_DEBUG,  "[MRDLockScreenController] Reevaluating shouldShowLockScreen for reason %@",  (uint8_t *)&v2,  0xCu);
}

void sub_1002B78C0(uint64_t a1, os_log_s *a2)
{
  int v2 = 134217984;
  uint64_t v3 = a1;
  _os_log_debug_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_DEBUG,  "[MRDCLC] <%p> Cancelling playback timer.",  (uint8_t *)&v2,  0xCu);
  sub_10001C900();
}

void sub_1002B7930()
{
}

void sub_1002B7990()
{
}

void sub_1002B79F0()
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(v1 + 48) requestID]);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
  sub_1000B5EA4(v3, v4);
  sub_1000214F8();
  sub_100021524( (void *)&_mh_execute_header,  v5,  v6,  "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds",  v7,  v8,  v9,  v10,  v11);

  sub_100021538();
}

void sub_1002B7A8C( os_log_s *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1002B7AF4()
{
}

void sub_1002B7B54()
{
}

void sub_1002B7B80()
{
}

void sub_1002B7BAC()
{
}

void sub_1002B7C0C()
{
}

void sub_1002B7C6C()
{
}

void sub_1002B7CCC()
{
}

void sub_1002B7D2C(uint64_t a1, os_log_s *a2)
{
  uint64_t v3 = (void *)MRMediaRemotePickedRouteVolumeControlCapabilitiesCopyDescription(a1);
  sub_10001C8EC();
  _os_log_debug_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_DEBUG,  "[ExternalDeviceServer] didReceiveVolumeControlCapabilitiesChange %@",  v4,  0xCu);

  sub_100011874();
}

void sub_1002B7DB0()
{
}

void sub_1002B7E10()
{
}

void sub_1002B7E70()
{
  __int16 v3 = 1024;
  int v4 = v0;
  _os_log_debug_impl( (void *)&_mh_execute_header,  v1,  OS_LOG_TYPE_DEBUG,  "Device with managedConfigDeviceID, %{public}@, allowed: %d",  v2,  0x12u);
  sub_10001C900();
}

void sub_1002B7EF0()
{
}

void sub_1002B7F28()
{
}

void sub_1002B7F88(id *a1, os_log_s *a2)
{
  uint64_t v3 = (void *)MRMediaRemoteCopyCommandDescription([*a1 command]);
  sub_10001C8EC();
  _os_log_error_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_ERROR,  "[ExternalDeviceServer] Client not authorized to send command type: %@",  v4,  0xCu);

  sub_100011874();
}

void sub_1002B8014()
{
}

void sub_1002B8074()
{
}

void sub_1002B80A0()
{
}

void sub_1002B8100()
{
}

void sub_1002B8164()
{
}

void sub_1002B81C8()
{
}

void sub_1002B822C()
{
}

void sub_1002B828C(id *a1, int a2, os_log_s *a3)
{
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([*a1 displayName]);
  int v6 = 138543618;
  uint64_t v7 = v5;
  __int16 v8 = 1024;
  int v9 = a2;
  _os_log_error_impl( (void *)&_mh_execute_header,  a3,  OS_LOG_TYPE_ERROR,  "PID Mismatch: Client %{public}@ is trying to make a nowPlayingClient with a different pid %d",  (uint8_t *)&v6,  0x12u);
}

void sub_1002B833C(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3 = 138543618;
  uint64_t v4 = a1;
  __int16 v5 = 2114;
  uint64_t v6 = a2;
  _os_log_debug_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_DEBUG,  "Resolving Existing %{public}@ -> %{public}@",  (uint8_t *)&v3,  0x16u);
}

void sub_1002B83C0()
{
}

void sub_1002B83EC()
{
}

void sub_1002B8418()
{
}

void sub_1002B8444()
{
}

void sub_1002B8470(uint64_t a1, os_log_s *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_debug_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_DEBUG,  "[MRCompanionConnectionController] Skipping Attempt to discover and connect to companion because <%@>",  (uint8_t *)&v2,  0xCu);
  sub_10001C900();
}

void sub_1002B84E0( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1002B8544( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1002B85A8()
{
  *(_WORD *)os_log_t v0 = 0;
  _os_log_fault_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_FAULT,  "Failed to initialize temporary directory",  v0,  2u);
}

void sub_1002B85EC(int a1, os_log_s *a2)
{
  v2[0] = 67109120;
  v2[1] = a1;
  _os_log_error_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_ERROR,  "Failed to setup AppleLanguagePreferencesChangedNotification handler, status: %d",  (uint8_t *)v2,  8u);
  sub_10001C8F8();
}

void sub_1002B865C(uint8_t *a1, uint64_t a2, void *a3, os_log_s *a4)
{
  uint64_t v7 = (void *)MRMediaRemoteCopyReadableDictionaryDescription(a2);
  *(_DWORD *)a1 = 138412290;
  *a3 = v7;
  _os_log_debug_impl((void *)&_mh_execute_header, a4, OS_LOG_TYPE_DEBUG, "Custom UserInfo %@", a1, 0xCu);
}

void sub_1002B86CC(uint64_t a1, os_log_s *a2)
{
  uint64_t v3 = (void *)MRMediaRemoteCopyReadableDictionaryDescription(a1);
  int v5 = 138412290;
  uint8_t v6 = v3;
  sub_1000E7AA0((void *)&_mh_execute_header, a2, v4, "UserInfo %@", (uint8_t *)&v5);
}

void sub_1002B8754(uint64_t *a1, os_log_s *a2, uint64_t a3)
{
  uint64_t v3 = *a1;
  int v4 = 138412290;
  uint64_t v5 = v3;
  sub_1000E7AA0((void *)&_mh_execute_header, a2, a3, "Posting Notification %@", (uint8_t *)&v4);
  sub_10001C900();
}

void sub_1002B87C0()
{
}

void sub_1002B87EC()
{
}

void sub_1002B8818( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1002B887C()
{
}

void sub_1002B88A8()
{
}

void sub_1002B88D4( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1002B8938()
{
}

void sub_1002B8964()
{
}

void sub_1002B8990()
{
}

void sub_1002B89BC()
{
}

void sub_1002B89E8()
{
}

void sub_1002B8A14(uint64_t a1, os_log_s *a2, double a3)
{
  int v3 = 134218242;
  double v4 = a3;
  __int16 v5 = 2112;
  uint64_t v6 = a1;
  _os_log_error_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_ERROR,  "Requesting to aquire assertion for %lf > 30 seconds. Assertion will likely only be valid for 30 seconds %@",  (uint8_t *)&v3,  0x16u);
  sub_10001C900();
}

void sub_1002B8A90( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1002B8AF4( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1002B8B58(uint64_t a1, uint64_t a2, os_log_s *a3)
{
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
  [v7 timeIntervalSinceDate:*(void *)(a1 + 48)];
  int v9 = 138544130;
  uint64_t v10 = @"autoConnectToEndpoint";
  __int16 v11 = 2114;
  uint64_t v12 = v6;
  __int16 v13 = 2114;
  uint64_t v14 = a2;
  __int16 v15 = 2048;
  uint64_t v16 = v8;
  _os_log_error_impl( (void *)&_mh_execute_header,  a3,  OS_LOG_TYPE_ERROR,  "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds",  (uint8_t *)&v9,  0x2Au);
}

void sub_1002B8C40(unint64_t a1, uint64_t a2, os_log_t log)
{
  if (a1 > 5) {
    int v3 = 0LL;
  }
  else {
    int v3 = off_1003A0638[a1];
  }
  int v4 = 138543618;
  __int16 v5 = v3;
  __int16 v6 = 2114;
  uint64_t v7 = a2;
  _os_log_debug_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_DEBUG,  "[MRDElectedPlayerController] Reevaluating electedPlayer event = %{public}@, reason =  %{public}@",  (uint8_t *)&v4,  0x16u);
}

void sub_1002B8CE0()
{
}

void sub_1002B8D40(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_ERROR,  "[MRDUIServer] Rejecting connection from unknown client.",  v1,  2u);
}

void sub_1002B8D80()
{
}

void sub_1002B8DE0()
{
}

void sub_1002B8E4C()
{
}

void sub_1002B8EAC()
{
}

void sub_1002B8F0C()
{
}

void sub_1002B8F6C()
{
}

void sub_1002B8FCC()
{
}

void sub_1002B902C()
{
  uint64_t v0 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
  sub_100107514(v0, v1);
  sub_1001074FC();
  sub_100021524( (void *)&_mh_execute_header,  v2,  v3,  "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds",  v4,  v5,  v6,  v7,  2u);

  sub_100021538();
}

void sub_1002B90D0()
{
  os_log_t v1 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(v0 + 48) requestID]);
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
  sub_100107514(v2, v3);
  sub_1000214F8();
  sub_100021524( (void *)&_mh_execute_header,  v4,  v5,  "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds",  v6,  v7,  v8,  v9,  v10);

  sub_100021538();
}

void sub_1002B9170()
{
  uint64_t v0 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
  sub_100107514(v0, v1);
  sub_1001074FC();
  sub_100021524( (void *)&_mh_execute_header,  v2,  v3,  "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds",  v4,  v5,  v6,  v7,  2u);

  sub_100021538();
}

void sub_1002B9214(uint64_t a1, os_log_s *a2)
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) name]);
  sub_10001C8EC();
  __int16 v7 = 2112;
  uint64_t v8 = v4;
  sub_1000A33C8( (void *)&_mh_execute_header,  a2,  v5,  "[AVRoutingServer] Authorization token failed for %{public}@ : %@",  v6);
}

void sub_1002B92BC( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1002B9324()
{
}

void sub_1002B9350( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1002B93B8()
{
  v2[0] = 138543618;
  sub_100117034();
  uint64_t v3 = v0;
  sub_1000A33C8( (void *)&_mh_execute_header,  v1,  (uint64_t)v1,  "[AVRoutingServer] AV reconnaissance session failed to find route with UID %{public}@ -- %{public}@",  (uint8_t *)v2);
  sub_10001C900();
}

void sub_1002B942C( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1002B9494()
{
}

void sub_1002B94C0(id *a1, os_log_s *a2)
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([*a1 bundleIdentifier]);
  v4[0] = 138412546;
  sub_100117044();
  _os_log_fault_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_FAULT,  "Missing entitlement %@ for %@. Please file a radar for this process to obtain this entitlement",  (uint8_t *)v4,  0x16u);

  sub_100011874();
}

void sub_1002B9558(id *a1, os_log_s *a2)
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([*a1 bundleIdentifier]);
  v5[0] = 138412546;
  sub_100117044();
  sub_1000A33C8((void *)&_mh_execute_header, a2, v4, "[AVRoutingServer] Missing entitlement %@ for %@.", (uint8_t *)v5);

  sub_100011874();
}

void sub_1002B95E8()
{
  __int16 v3 = 2113;
  uint64_t v4 = v0;
  sub_1000A33C8( (void *)&_mh_execute_header,  v1,  (uint64_t)v1,  "[AVRoutingServer] Could not find endpoints for migration between %{private}@ and %{private}@.",  v2);
  sub_10001C900();
}

void sub_1002B965C()
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(v1 + 56) requestID]);
  __int16 v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
  [v3 timeIntervalSinceDate:*(void *)(v0 + 64)];
  sub_1000214F8();
  sub_100021524( (void *)&_mh_execute_header,  v4,  v5,  "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds",  v6,  v7,  v8,  v9,  v10);

  sub_100021538();
}

void sub_1002B9700()
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(v1 + 48) requestID]);
  __int16 v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
  [v3 timeIntervalSinceDate:*(void *)(v0 + 56)];
  sub_1000214F8();
  sub_100021524( (void *)&_mh_execute_header,  v4,  v5,  "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds",  v6,  v7,  v8,  v9,  v10);

  sub_100021538();
}

void sub_1002B97A4()
{
}

void sub_1002B9804()
{
}

void sub_1002B9830()
{
}

void sub_1002B985C()
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
  [v1 timeIntervalSinceDate:*(void *)(v0 + 48)];
  sub_100117034();
  sub_100021524( (void *)&_mh_execute_header,  v2,  v3,  "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds",  v4,  v5,  v6,  v7,  2u);

  sub_100021538();
}

void sub_1002B9914()
{
}

void sub_1002B9974(int *a1, os_log_s *a2)
{
  int v2 = *a1;
  v3[0] = 67109120;
  v3[1] = v2;
  _os_log_error_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_ERROR,  "[AVRoutingServer] Error getting AirPlay security settings dictionary (OSStatus = %d)",  (uint8_t *)v3,  8u);
  sub_10001C8F8();
}

void sub_1002B99E8(uint64_t a1, uint64_t a2, os_log_s *a3)
{
  uint8_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) requestID]);
  uint64_t v7 = *(void *)(*(void *)(*(void *)a2 + 8LL) + 40LL);
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
  [v8 timeIntervalSinceDate:*(void *)(a1 + 40)];
  v11[0] = 138544130;
  sub_100117034();
  uint64_t v12 = v6;
  __int16 v13 = v9;
  uint64_t v14 = v7;
  __int16 v15 = 2048;
  uint64_t v16 = v10;
  _os_log_error_impl( (void *)&_mh_execute_header,  a3,  OS_LOG_TYPE_ERROR,  "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds",  (uint8_t *)v11,  0x2Au);

  sub_100021538();
}

void sub_1002B9AD4(uint64_t a1, void *a2, os_log_s *a3)
{
  uint64_t v5 = *(void *)(a1 + 32);
  uint8_t v6 = (void *)objc_claimAutoreleasedReturnValue([a2 error]);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
  [v7 timeIntervalSinceDate:*(void *)(a1 + 40)];
  int v9 = 138544130;
  uint64_t v10 = @"proactivePrepareForSetQueue";
  __int16 v11 = 2114;
  uint64_t v12 = v5;
  __int16 v13 = 2114;
  uint64_t v14 = v6;
  __int16 v15 = 2048;
  uint64_t v16 = v8;
  _os_log_error_impl( (void *)&_mh_execute_header,  a3,  OS_LOG_TYPE_ERROR,  "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds",  (uint8_t *)&v9,  0x2Au);

  sub_100021538();
}

void sub_1002B9BBC(uint64_t a1, void *a2, os_log_s *a3)
{
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([a2 error]);
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([a2 playerPath]);
  int v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
  [v9 timeIntervalSinceDate:*(void *)(a1 + 40)];
  int v11 = 138544386;
  uint64_t v12 = @"proactivePrepareForSetQueue";
  __int16 v13 = 2114;
  uint64_t v14 = v6;
  __int16 v15 = 2114;
  uint64_t v16 = v7;
  __int16 v17 = 2114;
  unsigned __int8 v18 = v8;
  __int16 v19 = 2048;
  uint64_t v20 = v10;
  _os_log_error_impl( (void *)&_mh_execute_header,  a3,  OS_LOG_TYPE_ERROR,  "Response: %{public}@<%{public}@> returned with error <%{public}@> for %{public}@ in %.4lf seconds",  (uint8_t *)&v11,  0x34u);

  sub_100021538();
}

void sub_1002B9CC4()
{
}

void sub_1002B9D24()
{
}

void sub_1002B9D84()
{
}

void sub_1002B9DF0()
{
}

void sub_1002B9E50( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1002B9EB8( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1002B9F20(void *a1, uint64_t a2, os_log_s *a3)
{
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([a1 bundleIdentifier]);
  int v6 = 138543618;
  uint64_t v7 = v5;
  __int16 v8 = 2114;
  uint64_t v9 = a2;
  _os_log_error_impl( (void *)&_mh_execute_header,  a3,  OS_LOG_TYPE_ERROR,  "Error fetching %{public}@ process handle: %{public}@",  (uint8_t *)&v6,  0x16u);
}

void sub_1002B9FD0( os_log_s *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1002BA000(void *a1, os_log_s *a2)
{
  int v4 = 134349056;
  id v5 = [a1 count];
  sub_1000E7AA0( (void *)&_mh_execute_header,  a2,  v3,  "[VirtualAudioInputServer] Notifying %{public}llu endpoints of newly connected device",  (uint8_t *)&v4);
}

void sub_1002BA080(uint64_t a1, os_log_s *a2, uint64_t a3)
{
  int v3 = 138543362;
  uint64_t v4 = a1;
  sub_1000E7AA0( (void *)&_mh_execute_header,  a2,  a3,  "[VirtualAudioInputServer] Created new device with descriptor: %{public}@",  (uint8_t *)&v3);
}

void sub_1002BA0EC( os_log_s *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1002BA11C()
{
}

void sub_1002BA17C(uint64_t a1, uint64_t a2, os_log_s *a3)
{
  *(_DWORD *)a1 = 134349056;
  *(void *)(a1 + 4) = a2;
  sub_1000E7AA0( (void *)&_mh_execute_header,  a3,  (uint64_t)a3,  "[VirtualAudioInputServer] Notifying %{public}llu endpoints of disconnected device",  (uint8_t *)a1);
}

void sub_1002BA1B8()
{
}

void sub_1002BA218()
{
}

void sub_1002BA278()
{
}

void sub_1002BA2D8( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1002BA340( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1002BA3A8( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1002BA410(uint64_t a1, os_log_s *a2, uint64_t a3)
{
  int v3 = 138543362;
  uint64_t v4 = a1;
  sub_10000EC24((void *)&_mh_execute_header, a2, a3, "Unable to bless client [bless failed] %{public}@", (uint8_t *)&v3);
}

void sub_1002BA47C(uint64_t a1, os_log_s *a2, uint64_t a3)
{
  int v3 = 138543362;
  uint64_t v4 = a1;
  sub_10000EC24( (void *)&_mh_execute_header,  a2,  a3,  "Unable to bless client [sync task assertion acquisition failed] %{public}@",  (uint8_t *)&v3);
}

void sub_1002BA4E8(id *a1, os_log_s *a2)
{
  int v3 = (void *)objc_claimAutoreleasedReturnValue([*a1 UUIDString]);
  int v5 = 138412290;
  uint8_t v6 = v3;
  sub_10000EC24( (void *)&_mh_execute_header,  a2,  v4,  "Requested to invalidate a critical section assertion, but missing assertion for requestID: %@",  (uint8_t *)&v5);
}

void sub_1002BA578(uint64_t a1, void *a2, os_log_s *a3)
{
  uint8_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) commandID]);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([a2 error]);
  __int16 v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
  [v8 timeIntervalSinceDate:*(void *)(a1 + 40)];
  v10[0] = 138544130;
  sub_10012AB78();
  __int16 v11 = 2048;
  uint64_t v12 = v9;
  _os_log_error_impl( (void *)&_mh_execute_header,  a3,  OS_LOG_TYPE_ERROR,  "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds",  (uint8_t *)v10,  0x2Au);

  sub_100021538();
}

void sub_1002BA660(uint64_t a1, void *a2, os_log_s *a3)
{
  uint8_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) commandID]);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([a2 error]);
  __int16 v8 = (void *)objc_claimAutoreleasedReturnValue([a2 playerPath]);
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
  [v9 timeIntervalSinceDate:*(void *)(a1 + 40)];
  v12[0] = 138544386;
  sub_10012AB78();
  __int16 v13 = v10;
  uint64_t v14 = v8;
  __int16 v15 = 2048;
  uint64_t v16 = v11;
  _os_log_error_impl( (void *)&_mh_execute_header,  a3,  OS_LOG_TYPE_ERROR,  "Response: %{public}@<%{public}@> returned with error <%{public}@> for %{public}@ in %.4lf seconds",  (uint8_t *)v12,  0x34u);

  sub_100021538();
}

void sub_1002BA764(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_fault_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_FAULT, "Unable to create IOHIDUserDevice", v1, 2u);
}

void sub_1002BA7A4(uint64_t a1, uint64_t *a2, os_log_t log)
{
  uint64_t v3 = *a2;
  int v4 = 138412546;
  uint64_t v5 = a1;
  __int16 v6 = 2112;
  uint64_t v7 = v3;
  _os_log_debug_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_DEBUG,  "[MRDIDSServiceConnection] Remove handler for type=%@, %@",  (uint8_t *)&v4,  0x16u);
}

void sub_1002BA82C(uint64_t a1, uint64_t a2, os_log_s *a3)
{
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) requestID]);
  __int16 v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
  [v8 timeIntervalSinceDate:*(void *)(a1 + 48)];
  int v10 = 138544130;
  uint64_t v11 = v6;
  __int16 v12 = 2114;
  __int16 v13 = v7;
  __int16 v14 = 2114;
  uint64_t v15 = a2;
  __int16 v16 = 2048;
  uint64_t v17 = v9;
  _os_log_error_impl( (void *)&_mh_execute_header,  a3,  OS_LOG_TYPE_ERROR,  "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds",  (uint8_t *)&v10,  0x2Au);
}

void sub_1002BA91C()
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
  [v1 timeIntervalSinceDate:*(void *)(v0 + 56)];
  sub_1001362A0();
  sub_100021524( (void *)&_mh_execute_header,  v2,  v3,  "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds",  v4,  v5,  v6,  v7,  v8);

  sub_100021538();
}

void sub_1002BA9B0(uint64_t *a1, os_log_s *a2)
{
  uint64_t v2 = *a1;
  int v3 = 138543362;
  uint64_t v4 = v2;
  _os_log_error_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_ERROR,  "[OutputContextModification] Failed to discover all output devices involved in modification: %{public}@",  (uint8_t *)&v3,  0xCu);
}

void sub_1002BAA28()
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
  [v1 timeIntervalSinceDate:*(void *)(v0 + 48)];
  sub_100021524( (void *)&_mh_execute_header,  v2,  v3,  "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds",  v4,  v5,  v6,  v7,  2u);

  sub_100021538();
}

void sub_1002BAAE8()
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
  [v1 timeIntervalSinceDate:*(void *)(v0 + 72)];
  sub_1001362A0();
  sub_100021524( (void *)&_mh_execute_header,  v2,  v3,  "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds",  v4,  v5,  v6,  v7,  v8);

  sub_100021538();
}

void sub_1002BAB7C(id *a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([a1[1] reason]);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([a1[1] requestID]);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
  uint64_t v5 = objc_claimAutoreleasedReturnValue([a1[1] startDate]);
  sub_1001394E4(v5);
  sub_10013948C();
  sub_1001394D0( (void *)&_mh_execute_header,  v6,  v7,  "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds",  v8,  v9,  v10,  v11,  v12);

  sub_1001394B8();
}

void sub_1002BAC54(id *a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([a1[1] reason]);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([a1[1] requestID]);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
  uint64_t v5 = objc_claimAutoreleasedReturnValue([a1[1] startDate]);
  sub_1001394E4(v5);
  sub_10013948C();
  sub_1001394D0( (void *)&_mh_execute_header,  v6,  v7,  "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds",  v8,  v9,  v10,  v11,  v12);

  sub_1001394B8();
}

void sub_1002BAD2C()
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
  sub_10013DC4C(v1, v2);
  sub_1001362A0();
  sub_100021524( (void *)&_mh_execute_header,  v3,  v4,  "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds",  v5,  v6,  v7,  v8,  v9);

  sub_100021538();
}

void sub_1002BADBC()
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
  sub_10013DC4C(v1, v2);
  sub_1001362A0();
  sub_100021524( (void *)&_mh_execute_header,  v3,  v4,  "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds",  v5,  v6,  v7,  v8,  v9);

  sub_100021538();
}

void sub_1002BAE48(uint64_t a1, void *a2, os_log_s *a3)
{
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) requestID]);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([a2 error]);
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
  [v8 timeIntervalSinceDate:*(void *)(a1 + 48)];
  sub_10014293C();
  __int16 v13 = v6;
  __int16 v14 = v9;
  uint64_t v15 = v7;
  __int16 v16 = 2048;
  uint64_t v17 = v10;
  sub_100142930( (void *)&_mh_execute_header,  a3,  v11,  "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds",  v12);

  sub_100021538();
}

void sub_1002BAF28(uint64_t a1, uint64_t a2, os_log_s *a3)
{
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) requestID]);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
  [v7 timeIntervalSinceDate:*(void *)(a1 + 48)];
  sub_10014293C();
  uint8_t v12 = v6;
  __int16 v13 = v8;
  uint64_t v14 = a2;
  __int16 v15 = 2048;
  uint64_t v16 = v9;
  sub_100142930( (void *)&_mh_execute_header,  a3,  v10,  "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds",  v11);

  sub_100021538();
}

void sub_1002BAFF4()
{
}

void sub_1002BB058()
{
}

void sub_1002BB0BC()
{
}

void sub_1002BB120()
{
}

void sub_1002BB180()
{
}

void sub_1002BB1E0()
{
}

void sub_1002BB240()
{
}

void sub_1002BB2A0()
{
}

void sub_1002BB300(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
  [v2 timeIntervalSinceDate:*(void *)(a1 + 56)];
  sub_1001362A0();
  sub_100021524( (void *)&_mh_execute_header,  v3,  v4,  "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds",  v5,  v6,  v7,  v8,  v9);

  sub_100021538();
}

void sub_1002BB39C(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
  [v2 timeIntervalSinceDate:*(void *)(a1 + 64)];
  sub_1001362A0();
  sub_100021524( (void *)&_mh_execute_header,  v3,  v4,  "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds",  v5,  v6,  v7,  v8,  v9);

  sub_100021538();
}

void sub_1002BB438(uint64_t a1, uint64_t a2, os_log_s *a3)
{
  *(_DWORD *)uint64_t v3 = 134218242;
  *(void *)&v3[4] = *(void *)(a1 + 32);
  *(_WORD *)&v3[12] = 2114;
  *(void *)&v3[14] = a2;
  sub_1000943FC( (void *)&_mh_execute_header,  a2,  a3,  "[MRDGroupSession] <%p> Failed to send message with error: %{public}@",  *(void *)v3,  *(void *)&v3[8],  *(void *)&v3[16]);
  sub_10001C900();
}

void sub_1002BB4AC( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1002BB510( uint64_t a1, os_log_s *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1002BB574()
{
}

void sub_1002BB5D8()
{
}

void sub_1002BB63C(uint64_t a1, uint64_t a2, os_log_s *a3)
{
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 8) name]);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 8) requestID]);
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
  uint8_t v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 8) startDate]);
  [v8 timeIntervalSinceDate:v9];
  int v11 = 138544130;
  uint8_t v12 = v6;
  __int16 v13 = 2114;
  uint64_t v14 = v7;
  __int16 v15 = 2114;
  uint64_t v16 = a2;
  __int16 v17 = 2048;
  uint64_t v18 = v10;
  _os_log_error_impl( (void *)&_mh_execute_header,  a3,  OS_LOG_TYPE_ERROR,  "Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds",  (uint8_t *)&v11,  0x2Au);
}

id objc_msgSend_GroupSessionRecentParticipant(void *a1, const char *a2, ...)
{
  return _[a1 GroupSessionRecentParticipant];
}

id objc_msgSend_ID(void *a1, const char *a2, ...)
{
  return _[a1 ID];
}

id objc_msgSend_MACAddress(void *a1, const char *a2, ...)
{
  return _[a1 MACAddress];
}

id objc_msgSend_MRHIDTouchEventValue(void *a1, const char *a2, ...)
{
  return _[a1 MRHIDTouchEventValue];
}

id objc_msgSend_MRUIClient(void *a1, const char *a2, ...)
{
  return _[a1 MRUIClient];
}

id objc_msgSend_MediaRemote(void *a1, const char *a2, ...)
{
  return _[a1 MediaRemote];
}

id objc_msgSend_URLByAppendingPathComponent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLByAppendingPathComponent:");
}

id objc_msgSend_URLWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLWithString:");
}

id objc_msgSend_UTF8String(void *a1, const char *a2, ...)
{
  return _[a1 UTF8String];
}

id objc_msgSend_UUID(void *a1, const char *a2, ...)
{
  return _[a1 UUID];
}

id objc_msgSend_UUIDString(void *a1, const char *a2, ...)
{
  return _[a1 UUIDString];
}

id objc_msgSend_WHAIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 WHAIdentifier];
}

id objc_msgSend__acquire(void *a1, const char *a2, ...)
{
  return _[a1 _acquire];
}

id objc_msgSend__activateSiriWithContext_andBeginRecording_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_activateSiriWithContext:andBeginRecording:");
}

id objc_msgSend__activeSystemContext(void *a1, const char *a2, ...)
{
  return _[a1 _activeSystemContext];
}

id objc_msgSend__addAuthorizationCallbackForOutputDevice_destination_session_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addAuthorizationCallbackForOutputDevice:destination:session:");
}

id objc_msgSend__addEntry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addEntry:");
}

id objc_msgSend__addMessageHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addMessageHandler:");
}

id objc_msgSend__addMessageHandlerForDevice_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addMessageHandlerForDevice:handler:");
}

id objc_msgSend__addNowPlayingNotification_selector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addNowPlayingNotification:selector:");
}

id objc_msgSend__addNowPlayingStateToMessage_forClient_withEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addNowPlayingStateToMessage:forClient:withEndpoint:");
}

id objc_msgSend__addOrigin_withDeviceInfo_emitNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addOrigin:withDeviceInfo:emitNotification:");
}

id objc_msgSend__addOutputDevicesToMessage_forClient_withEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addOutputDevicesToMessage:forClient:withEndpoint:");
}

id objc_msgSend__addSubscribedStateToMessage_forClient_nowPlayingClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addSubscribedStateToMessage:forClient:nowPlayingClient:");
}

id objc_msgSend__addSubscribedStateToMessage_forClient_originClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addSubscribedStateToMessage:forClient:originClient:");
}

id objc_msgSend__addSubscribedStateToMessage_forClient_playerClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addSubscribedStateToMessage:forClient:playerClient:");
}

id objc_msgSend__addToMessage_withAllClusterDeviceMembers_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addToMessage:withAllClusterDeviceMembers:block:");
}

id objc_msgSend__addUndiscoverableGroupLeaderFromDeviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addUndiscoverableGroupLeaderFromDeviceInfo:");
}

id objc_msgSend__addUndiscoveredOutputContextOutputDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addUndiscoveredOutputContextOutputDevices:");
}

id objc_msgSend__addVolumeToMessage_forClient_outputDevice_withEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addVolumeToMessage:forClient:outputDevice:withEndpoint:");
}

id objc_msgSend__addVolumeToMessage_forClient_withEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addVolumeToMessage:forClient:withEndpoint:");
}

id objc_msgSend__addVolumeToMessage_forClient_withEndpoint_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addVolumeToMessage:forClient:withEndpoint:completion:");
}

id objc_msgSend__adjustContinuousPlaybackDetectionTimerIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _adjustContinuousPlaybackDetectionTimerIfNeeded];
}

id objc_msgSend__adjustPlaybackTimerIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _adjustPlaybackTimerIfNeeded];
}

id objc_msgSend__allExternalDeviceClients(void *a1, const char *a2, ...)
{
  return _[a1 _allExternalDeviceClients];
}

id objc_msgSend__appendDescribableArray_toString_withTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_appendDescribableArray:toString:withTitle:");
}

id objc_msgSend__appendDescribableArray_toString_withTitle_indentLevel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_appendDescribableArray:toString:withTitle:indentLevel:");
}

id objc_msgSend__appendDescribableArray_toString_withTitle_indentLevel_usingDebugDescription_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_appendDescribableArray:toString:withTitle:indentLevel:usingDebugDescription:");
}

id objc_msgSend__appendNullableObjectDescription_toString_withTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_appendNullableObjectDescription:toString:withTitle:");
}

id objc_msgSend__appendNullableObjectDescription_toString_withTitle_usingDebugDescription_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_appendNullableObjectDescription:toString:withTitle:usingDebugDescription:");
}

id objc_msgSend__appendSubheader_toString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_appendSubheader:toString:");
}

id objc_msgSend__applyDeviceInfoValuesToOutputDevices_withDeviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_applyDeviceInfoValuesToOutputDevices:withDeviceInfo:");
}

id objc_msgSend__applyLocalReservedOutputContextValuesToOutputDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_applyLocalReservedOutputContextValuesToOutputDevices:");
}

id objc_msgSend__applyLocallySourcedValuesToOutputDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_applyLocallySourcedValuesToOutputDevices:");
}

id objc_msgSend__applyOutputContextValuesToOutputDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_applyOutputContextValuesToOutputDevices:");
}

id objc_msgSend__assertionForType_pid_bundleID_name_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_assertionForType:pid:bundleID:name:");
}

id objc_msgSend__attributedCommand_forClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_attributedCommand:forClient:");
}

id objc_msgSend__bestRecommendationIn_primaryBundleIdentifier_activeSystemEndpoint_completion_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bestRecommendationIn:primaryBundleIdentifier:activeSystemEndpoint:completion:");
}

id objc_msgSend__broadcastKeyboardMessageWithState_text_attributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_broadcastKeyboardMessageWithState:text:attributes:");
}

id objc_msgSend__broadcastRemoteTextInputMessageWithPayload_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_broadcastRemoteTextInputMessageWithPayload:");
}

id objc_msgSend__cachingPolicyForRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cachingPolicyForRequest:");
}

id objc_msgSend__calculateDesiredPredictedRouteOutputDeviceUIDs(void *a1, const char *a2, ...)
{
  return _[a1 _calculateDesiredPredictedRouteOutputDeviceUIDs];
}

id objc_msgSend__calculateDevicesInGroup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_calculateDevicesInGroup:");
}

id objc_msgSend__calculateEffectiveDiscoveryMode(void *a1, const char *a2, ...)
{
  return _[a1 _calculateEffectiveDiscoveryMode];
}

id objc_msgSend__calculateHierarchy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_calculateHierarchy:");
}

id objc_msgSend__calculateMemory(void *a1, const char *a2, ...)
{
  return _[a1 _calculateMemory];
}

id objc_msgSend__calculateOperationForEndpoint_outputDeviceUIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_calculateOperationForEndpoint:outputDeviceUIDs:");
}

id objc_msgSend__calculateOperationTypeForEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_calculateOperationTypeForEndpoint:");
}

id objc_msgSend__calculateRelevantOutputDevicesInGroup_outputDeviceUIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_calculateRelevantOutputDevicesInGroup:outputDeviceUIDs:");
}

id objc_msgSend__calculateUndiscoverableGroupLeaderFromDeviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_calculateUndiscoverableGroupLeaderFromDeviceInfo:");
}

id objc_msgSend__callAllPendingCompletionsWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_callAllPendingCompletionsWithError:");
}

id objc_msgSend__callClientAllowsPairingCallback(void *a1, const char *a2, ...)
{
  return _[a1 _callClientAllowsPairingCallback];
}

id objc_msgSend__callClientConnectionStateCallback_previousConnectionState_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_callClientConnectionStateCallback:previousConnectionState:error:");
}

id objc_msgSend__callClientCustomDataCallback_name_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_callClientCustomDataCallback:name:");
}

id objc_msgSend__callClientNameCallback(void *a1, const char *a2, ...)
{
  return _[a1 _callClientNameCallback];
}

id objc_msgSend__callDeviceInfoCallback_oldDeviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_callDeviceInfoCallback:oldDeviceInfo:");
}

id objc_msgSend__callIsMutedCallback_outputDeviceUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_callIsMutedCallback:outputDeviceUID:");
}

id objc_msgSend__callOutputDevicesRemovedCallbackWithOutputDeviceUIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_callOutputDevicesRemovedCallbackWithOutputDeviceUIDs:");
}

id objc_msgSend__callOutputDevicesUpdatedCallbackWithOutputDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_callOutputDevicesUpdatedCallbackWithOutputDevices:");
}

id objc_msgSend__callPendingCompletions(void *a1, const char *a2, ...)
{
  return _[a1 _callPendingCompletions];
}

id objc_msgSend__callVolumeCallback_outputDeviceUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_callVolumeCallback:outputDeviceUID:");
}

id objc_msgSend__callVolumeControlCapabilitiesCallback_outputDeviceUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_callVolumeControlCapabilitiesCallback:outputDeviceUID:");
}

id objc_msgSend__canSendMessage(void *a1, const char *a2, ...)
{
  return _[a1 _canSendMessage];
}

id objc_msgSend__checkAndMaybeUpdateNowPlayingAppStackPopRateLimitingWithInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_checkAndMaybeUpdateNowPlayingAppStackPopRateLimitingWithInterval:");
}

id objc_msgSend__checkConnectionStatus(void *a1, const char *a2, ...)
{
  return _[a1 _checkConnectionStatus];
}

id objc_msgSend__cleanUpPersistedSessionForSessionPreloadCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cleanUpPersistedSessionForSessionPreloadCommand:");
}

id objc_msgSend__cleanUpStreamsWithReason_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cleanUpStreamsWithReason:error:");
}

id objc_msgSend__cleanUpWithReason_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cleanUpWithReason:error:");
}

id objc_msgSend__cleanup(void *a1, const char *a2, ...)
{
  return _[a1 _cleanup];
}

id objc_msgSend__clearAllQueuedCommandsForReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_clearAllQueuedCommandsForReason:");
}

id objc_msgSend__clearPasswordForOutputDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_clearPasswordForOutputDevice:");
}

id objc_msgSend__clearPendingClusterLeaderOperations(void *a1, const char *a2, ...)
{
  return _[a1 _clearPendingClusterLeaderOperations];
}

id objc_msgSend__clearPendingGroupLeaderOperations(void *a1, const char *a2, ...)
{
  return _[a1 _clearPendingGroupLeaderOperations];
}

id objc_msgSend__clearQueuedBeginLoadingMessagesForApp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_clearQueuedBeginLoadingMessagesForApp:");
}

id objc_msgSend__clearQueuedCommand_forUnavailableApplicationWithDisplayID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_clearQueuedCommand:forUnavailableApplicationWithDisplayID:");
}

id objc_msgSend__clearSecondaryConnectionsForDevicesNotInArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_clearSecondaryConnectionsForDevicesNotInArray:");
}

id objc_msgSend__clientDidOpenConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_clientDidOpenConnection:");
}

id objc_msgSend__clientForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_clientForIdentifier:");
}

id objc_msgSend__clientForPairingSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_clientForPairingSession:");
}

id objc_msgSend__clusterOutputDevicesFromUnclusteredDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_clusterOutputDevicesFromUnclusteredDevices:");
}

id objc_msgSend__collectDiagnosticFromClient_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_collectDiagnosticFromClient:completion:");
}

id objc_msgSend__commitLocalDeviceWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_commitLocalDeviceWithReason:");
}

id objc_msgSend__completeGroupSessionRequestsWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_completeGroupSessionRequestsWithIdentifier:");
}

id objc_msgSend__completionHandler(void *a1, const char *a2, ...)
{
  return _[a1 _completionHandler];
}

id objc_msgSend__concludeSearchWithRoute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_concludeSearchWithRoute:");
}

id objc_msgSend__configurationFromDestination_session_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configurationFromDestination:session:");
}

id objc_msgSend__configureNowPlayingController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureNowPlayingController:");
}

id objc_msgSend__connectToAllOutputDevicesForReason_comparator_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_connectToAllOutputDevicesForReason:comparator:queue:completion:");
}

id objc_msgSend__connectToGroup_reason_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_connectToGroup:reason:completion:");
}

id objc_msgSend__connectToOutputDevice_reason_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_connectToOutputDevice:reason:completion:");
}

id objc_msgSend__connectedExternalDeviceClients(void *a1, const char *a2, ...)
{
  return _[a1 _connectedExternalDeviceClients];
}

id objc_msgSend__connectingExternalDeviceClients(void *a1, const char *a2, ...)
{
  return _[a1 _connectingExternalDeviceClients];
}

id objc_msgSend__connection_canReceiveUpdatesForOrigin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_connection:canReceiveUpdatesForOrigin:");
}

id objc_msgSend__connection_canReceiveUpdatesForPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_connection:canReceiveUpdatesForPlayerPath:");
}

id objc_msgSend__connection_wasPreviouslySubscribedToPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_connection:wasPreviouslySubscribedToPlayerPath:");
}

id objc_msgSend__connectionForSource_destination_session_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_connectionForSource:destination:session:");
}

id objc_msgSend__contextuallyAwareDestinationAppDisplayIDForCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_contextuallyAwareDestinationAppDisplayIDForCommand:");
}

id objc_msgSend__copyWithZone_usingConcreteClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_copyWithZone:usingConcreteClass:");
}

id objc_msgSend__createAirPlaySecuritySettings(void *a1, const char *a2, ...)
{
  return _[a1 _createAirPlaySecuritySettings];
}

id objc_msgSend__createBroadcastCommandPlayerPathForClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createBroadcastCommandPlayerPathForClient:");
}

id objc_msgSend__createBroadcastCommandResponseFromStatuses_forClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createBroadcastCommandResponseFromStatuses:forClient:");
}

id objc_msgSend__createConnectionWith_groupID_connectionType_shouldUseSystemAuthenticationPrompt_userInfo_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createConnectionWith:groupID:connectionType:shouldUseSystemAuthenticationPrompt:userInfo:");
}

id objc_msgSend__createConnectionWithUserInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createConnectionWithUserInfo:");
}

id objc_msgSend__createDiscoveryChannelForIDSConnection_deviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createDiscoveryChannelForIDSConnection:deviceInfo:");
}

id objc_msgSend__createEndpointForOutputDeviceUIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createEndpointForOutputDeviceUIDs:");
}

id objc_msgSend__createEndpointWithCurrentTopologyWithTimeout_details_previewCallback_completion_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createEndpointWithCurrentTopologyWithTimeout:details:previewCallback:completion:");
}

id objc_msgSend__createGroupsFrom_availableOutputDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createGroupsFrom:availableOutputDevices:");
}

id objc_msgSend__createHostedEndpointWithOutputDeviceUIDs_timeout_details_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createHostedEndpointWithOutputDeviceUIDs:timeout:details:completion:");
}

id objc_msgSend__createLocalizedOutputDevice_redactVolume_forClient_endpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createLocalizedOutputDevice:redactVolume:forClient:endpoint:");
}

id objc_msgSend__createLocalizedOutputDevices_redactVolume_forClient_endpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createLocalizedOutputDevices:redactVolume:forClient:endpoint:");
}

id objc_msgSend__createLockScreenRoutingController(void *a1, const char *a2, ...)
{
  return _[a1 _createLockScreenRoutingController];
}

id objc_msgSend__createMediaServerController(void *a1, const char *a2, ...)
{
  return _[a1 _createMediaServerController];
}

id objc_msgSend__createNativeGroupForLocalDeviceFromNativeOutputDevice_availableOutputDevices_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createNativeGroupForLocalDeviceFromNativeOutputDevice:availableOutputDevices:");
}

id objc_msgSend__createOptimizedEndpointWithOutputDeviceUIDs_timeout_details_previewCallback_completion_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createOptimizedEndpointWithOutputDeviceUIDs:timeout:details:previewCallback:completion:");
}

id objc_msgSend__createPlayerAndWaitForCanBeNowPlaying_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createPlayerAndWaitForCanBeNowPlaying:completion:");
}

id objc_msgSend__createPlayerAndWaitForCanBeNowPlaying_deviceInfo_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createPlayerAndWaitForCanBeNowPlaying:deviceInfo:completion:");
}

id objc_msgSend__createPlayerAndWaitForConnection_command_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createPlayerAndWaitForConnection:command:completion:");
}

id objc_msgSend__createPlayerAndWaitForConnection_command_deviceInfo_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createPlayerAndWaitForConnection:command:deviceInfo:completion:");
}

id objc_msgSend__createPlayerForClient_playerPath_deviceInfo_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createPlayerForClient:playerPath:deviceInfo:completion:");
}

id objc_msgSend__createProvider(void *a1, const char *a2, ...)
{
  return _[a1 _createProvider];
}

id objc_msgSend__createRemoteControlChannelForIDSConnection_deviceInfo_destination_session_userInfo_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createRemoteControlChannelForIDSConnection:deviceInfo:destination:session:userInfo:");
}

id objc_msgSend__createRemoteHostedEndpointWithGroupLeaderOutputDeviceUID_withOutputDeviceUIDs_timeout_details_completion_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "_createRemoteHostedEndpointWithGroupLeaderOutputDeviceUID:withOutputDeviceUIDs:timeout:details:completion:");
}

id objc_msgSend__createResolvedPlayerPathFromPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createResolvedPlayerPathFromPlayerPath:");
}

id objc_msgSend__createStereoPairRepresentationFrom_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createStereoPairRepresentationFrom:");
}

id objc_msgSend__currentDeviceInfo(void *a1, const char *a2, ...)
{
  return _[a1 _currentDeviceInfo];
}

id objc_msgSend__descriptionForDiscoveryMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_descriptionForDiscoveryMode:");
}

id objc_msgSend__destinationClientForRemoteControlCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_destinationClientForRemoteControlCommand:");
}

id objc_msgSend__deviceInfoArchiveClasses(void *a1, const char *a2, ...)
{
  return _[a1 _deviceInfoArchiveClasses];
}

id objc_msgSend__deviceInfoDidChange(void *a1, const char *a2, ...)
{
  return _[a1 _deviceInfoDidChange];
}

id objc_msgSend__deviceInfoDidChangeWithDeviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deviceInfoDidChangeWithDeviceInfo:");
}

id objc_msgSend__deviceInfoFilePath(void *a1, const char *a2, ...)
{
  return _[a1 _deviceInfoFilePath];
}

id objc_msgSend__didCloseCommunicationChannel_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_didCloseCommunicationChannel:error:");
}

id objc_msgSend__didReceiveData_fromCommunicationChannel_connectionFactory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_didReceiveData:fromCommunicationChannel:connectionFactory:");
}

id objc_msgSend__disconnectClient_withError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_disconnectClient:withError:");
}

id objc_msgSend__discoverGroup_reason_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_discoverGroup:reason:completion:");
}

id objc_msgSend__discoverOutputDevice_reason_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_discoverOutputDevice:reason:completion:");
}

id objc_msgSend__discoverOutputDevices_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_discoverOutputDevices:completion:");
}

id objc_msgSend__doesRequestContainLocalDeviceUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_doesRequestContainLocalDeviceUID:");
}

id objc_msgSend__effectiveContextIDForCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_effectiveContextIDForCommand:");
}

id objc_msgSend__endSearch(void *a1, const char *a2, ...)
{
  return _[a1 _endSearch];
}

id objc_msgSend__endSiriRecordingWithContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_endSiriRecordingWithContext:");
}

id objc_msgSend__endpoint(void *a1, const char *a2, ...)
{
  return _[a1 _endpoint];
}

id objc_msgSend__endpointIsSolo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_endpointIsSolo:");
}

id objc_msgSend__endpointShouldNotifyClientsOfTopologyChanges_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_endpointShouldNotifyClientsOfTopologyChanges:");
}

id objc_msgSend__endpointShouldPostVolumeNotifications_outputDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_endpointShouldPostVolumeNotifications:outputDevice:");
}

id objc_msgSend__endpointSupportsVolumeControl_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_endpointSupportsVolumeControl:");
}

id objc_msgSend__enqueueCommand_forApplication_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_enqueueCommand:forApplication:withCompletion:");
}

id objc_msgSend__enqueueCommand_forUnavailableApplicationWithDisplayID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_enqueueCommand:forUnavailableApplicationWithDisplayID:");
}

id objc_msgSend__enqueueCompletion_forUnavailableDestinationApp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_enqueueCompletion:forUnavailableDestinationApp:");
}

id objc_msgSend__existingKeychainAccountForOutputDevice_password_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_existingKeychainAccountForOutputDevice:password:");
}

id objc_msgSend__expectedSuffixForNewEndpointWithGroupLeader_outputDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_expectedSuffixForNewEndpointWithGroupLeader:outputDevices:");
}

id objc_msgSend__exportDescriptorForOutputDevice_endpoint_remoteControl_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_exportDescriptorForOutputDevice:endpoint:remoteControl:");
}

id objc_msgSend__extendedInfo(void *a1, const char *a2, ...)
{
  return _[a1 _extendedInfo];
}

id objc_msgSend__externalDeviceClientDidInvalidate_withError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_externalDeviceClientDidInvalidate:withError:");
}

id objc_msgSend__externalDeviceClientForConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_externalDeviceClientForConnection:");
}

id objc_msgSend__fetchActiveSystemEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchActiveSystemEndpoint:");
}

id objc_msgSend__fetchActiveUserWithQueue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchActiveUserWithQueue:completion:");
}

id objc_msgSend__fetchAvailableOutputDevicesFromDiscoverySessions(void *a1, const char *a2, ...)
{
  return _[a1 _fetchAvailableOutputDevicesFromDiscoverySessions];
}

id objc_msgSend__findClientIf_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_findClientIf:");
}

id objc_msgSend__findEndpointContainingGroupID_andDeviceID_requestID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_findEndpointContainingGroupID:andDeviceID:requestID:completion:");
}

id objc_msgSend__forwardCommand_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_forwardCommand:completion:");
}

id objc_msgSend__generateDeviceInfoWithDesignatedGroupLeader_outputContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_generateDeviceInfoWithDesignatedGroupLeader:outputContext:");
}

id objc_msgSend__generateMessageID(void *a1, const char *a2, ...)
{
  return _[a1 _generateMessageID];
}

id objc_msgSend__generateSessionUID(void *a1, const char *a2, ...)
{
  return _[a1 _generateSessionUID];
}

id objc_msgSend__handleAddVirtualOutputDeviceMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleAddVirtualOutputDeviceMessage:fromClient:");
}

id objc_msgSend__handleAdjustSystemVolumeByStepMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleAdjustSystemVolumeByStepMessage:fromClient:");
}

id objc_msgSend__handleAdjustSystemVolumeMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleAdjustSystemVolumeMessage:fromClient:");
}

id objc_msgSend__handleAdjustVolumeMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleAdjustVolumeMessage:fromClient:");
}

id objc_msgSend__handleApplicationConnectionMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleApplicationConnectionMessage:fromClient:");
}

id objc_msgSend__handleApplicationConnectionProtocolMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleApplicationConnectionProtocolMessage:");
}

id objc_msgSend__handleAuthenticationFailureForRoute_withOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleAuthenticationFailureForRoute:withOptions:");
}

id objc_msgSend__handleAuthorizationRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleAuthorizationRequest:");
}

id objc_msgSend__handleBeginApplicationActivityMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleBeginApplicationActivityMessage:fromClient:");
}

id objc_msgSend__handleBeginLoadingBrowsableContentMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleBeginLoadingBrowsableContentMessage:fromClient:");
}

id objc_msgSend__handleBeginMusicHandoffSessionMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleBeginMusicHandoffSessionMessage:fromClient:");
}

id objc_msgSend__handleBroadcastCommandMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleBroadcastCommandMessage:fromClient:");
}

id objc_msgSend__handleBrowsableContentDidFinishLoadingFromClient_indexPath_withError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleBrowsableContentDidFinishLoadingFromClient:indexPath:withError:");
}

id objc_msgSend__handleClearAllAVRoutePasswordsMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleClearAllAVRoutePasswordsMessage:fromClient:");
}

id objc_msgSend__handleClientUpdatesConfigMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleClientUpdatesConfigMessage:fromClient:");
}

id objc_msgSend__handleCloseApplicationConnectionMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleCloseApplicationConnectionMessage:fromClient:");
}

id objc_msgSend__handleClusterErrorStatus_forRoute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleClusterErrorStatus:forRoute:");
}

id objc_msgSend__handleCollectClientDiagnosticsMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleCollectClientDiagnosticsMessage:fromClient:");
}

id objc_msgSend__handleCollectClientDiagnosticsMessageWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleCollectClientDiagnosticsMessageWithCompletion:");
}

id objc_msgSend__handleCollectDiagnosticMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleCollectDiagnosticMessage:fromClient:");
}

id objc_msgSend__handleCompletePairingHandlerMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleCompletePairingHandlerMessage:fromClient:");
}

id objc_msgSend__handleCompletedOperation_forOutputDeviceUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleCompletedOperation:forOutputDeviceUID:");
}

id objc_msgSend__handleContentItemArtworkChangedMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleContentItemArtworkChangedMessage:fromClient:");
}

id objc_msgSend__handleContentItemChangedMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleContentItemChangedMessage:fromClient:");
}

id objc_msgSend__handleCreateApplicationConnectionMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleCreateApplicationConnectionMessage:fromClient:");
}

id objc_msgSend__handleCreateDirectEndpointForDevices_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleCreateDirectEndpointForDevices:fromClient:");
}

id objc_msgSend__handleCreateEndpointWithDevices_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleCreateEndpointWithDevices:fromClient:");
}

id objc_msgSend__handleCreateGroupSessionTokenMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleCreateGroupSessionTokenMessage:fromClient:");
}

id objc_msgSend__handleCreateGroupWithDevices_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleCreateGroupWithDevices:fromClient:");
}

id objc_msgSend__handleCreateHostedEndpointForDevices_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleCreateHostedEndpointForDevices:fromClient:");
}

id objc_msgSend__handleCreateHostedEndpointRequestMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleCreateHostedEndpointRequestMessage:fromClient:");
}

id objc_msgSend__handleCriticalSectionTransition_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleCriticalSectionTransition:fromClient:");
}

id objc_msgSend__handleDeletePairedDeviceMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleDeletePairedDeviceMessage:fromClient:");
}

id objc_msgSend__handleDeletePairingIdentityMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleDeletePairingIdentityMessage:fromClient:");
}

id objc_msgSend__handleDeviceInfoChange_oldDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleDeviceInfoChange:oldDevice:");
}

id objc_msgSend__handleDeviceInfoRequest_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleDeviceInfoRequest:fromClient:");
}

id objc_msgSend__handleDeviceInfoUpdateMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleDeviceInfoUpdateMessage:");
}

id objc_msgSend__handleDeviceInfoUpdateMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleDeviceInfoUpdateMessage:fromClient:");
}

id objc_msgSend__handleDiscoveryUpdateOutputDevicesMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleDiscoveryUpdateOutputDevicesMessage:");
}

id objc_msgSend__handleDismissAllBannersMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleDismissAllBannersMessage:fromClient:");
}

id objc_msgSend__handleDismissMediaControlsCommandMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleDismissMediaControlsCommandMessage:fromClient:");
}

id objc_msgSend__handleEndApplicationActivityMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleEndApplicationActivityMessage:fromClient:");
}

id objc_msgSend__handleErrorStatus_forRoute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleErrorStatus:forRoute:");
}

id objc_msgSend__handleFetchPlaybackQueueParticipantsMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleFetchPlaybackQueueParticipantsMessage:fromClient:");
}

id objc_msgSend__handleGenericMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGenericMessage:");
}

id objc_msgSend__handleGenericMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGenericMessage:fromClient:");
}

id objc_msgSend__handleGetActiveOriginMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetActiveOriginMessage:fromClient:");
}

id objc_msgSend__handleGetActivePlayerPathsForLocalOriginMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetActivePlayerPathsForLocalOriginMessage:fromClient:");
}

id objc_msgSend__handleGetActiveSystemEndpointUIDsMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetActiveSystemEndpointUIDsMessage:fromClient:");
}

id objc_msgSend__handleGetAirPlaySecuritySettingsMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetAirPlaySecuritySettingsMessage:fromClient:");
}

id objc_msgSend__handleGetAirplayStatus_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetAirplayStatus:fromClient:");
}

id objc_msgSend__handleGetAnyAppIsPlayingMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetAnyAppIsPlayingMessage:fromClient:");
}

id objc_msgSend__handleGetApplicationActivityMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetApplicationActivityMessage:fromClient:");
}

id objc_msgSend__handleGetAppsSupportingBrowsableContentAPIsMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetAppsSupportingBrowsableContentAPIsMessage:fromClient:");
}

id objc_msgSend__handleGetAudioFormatContentInfoForOriginMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetAudioFormatContentInfoForOriginMessage:fromClient:");
}

id objc_msgSend__handleGetAvailableOriginsMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetAvailableOriginsMessage:fromClient:");
}

id objc_msgSend__handleGetClientPropertiesMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetClientPropertiesMessage:fromClient:");
}

id objc_msgSend__handleGetDeviceInfo_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetDeviceInfo:fromClient:");
}

id objc_msgSend__handleGetDeviceSupportsUIActivitiesMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetDeviceSupportsUIActivitiesMessage:fromClient:");
}

id objc_msgSend__handleGetDevicesMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetDevicesMessage:fromClient:");
}

id objc_msgSend__handleGetElectedPlayerPathMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetElectedPlayerPathMessage:fromClient:");
}

id objc_msgSend__handleGetExternalDeviceMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetExternalDeviceMessage:fromClient:");
}

id objc_msgSend__handleGetExternalScreenTypeMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetExternalScreenTypeMessage:fromClient:");
}

id objc_msgSend__handleGetHostedRoutingXPCEndpointMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetHostedRoutingXPCEndpointMessage:fromClient:");
}

id objc_msgSend__handleGetImageDimensionsForArtworkDataMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetImageDimensionsForArtworkDataMessage:fromClient:");
}

id objc_msgSend__handleGetInputModeMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetInputModeMessage:fromClient:");
}

id objc_msgSend__handleGetIsBooksAppInstalledMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetIsBooksAppInstalledMessage:fromClient:");
}

id objc_msgSend__handleGetIsMusicAppInstalledMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetIsMusicAppInstalledMessage:fromClient:");
}

id objc_msgSend__handleGetKeyboardSessionMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetKeyboardSessionMessage:fromClient:");
}

id objc_msgSend__handleGetLastPlayingDateMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetLastPlayingDateMessage:fromClient:");
}

id objc_msgSend__handleGetNowPlayingClientMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetNowPlayingClientMessage:fromClient:");
}

id objc_msgSend__handleGetNowPlayingClientsMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetNowPlayingClientsMessage:fromClient:");
}

id objc_msgSend__handleGetNowPlayingPlayerMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetNowPlayingPlayerMessage:fromClient:");
}

id objc_msgSend__handleGetNowPlayingPlayersMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetNowPlayingPlayersMessage:fromClient:");
}

id objc_msgSend__handleGetOutputContextUIDMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetOutputContextUIDMessage:fromClient:");
}

id objc_msgSend__handleGetPairedDevicesMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetPairedDevicesMessage:fromClient:");
}

id objc_msgSend__handleGetPendingCommandsMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetPendingCommandsMessage:fromClient:");
}

id objc_msgSend__handleGetPickableRoutesMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetPickableRoutesMessage:fromClient:");
}

id objc_msgSend__handleGetPickedRouteHasVolumeControlMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetPickedRouteHasVolumeControlMessage:fromClient:");
}

id objc_msgSend__handleGetPlaybackStateMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetPlaybackStateMessage:fromClient:");
}

id objc_msgSend__handleGetPlayerPictureInPictureEnabledMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetPlayerPictureInPictureEnabledMessage:fromClient:");
}

id objc_msgSend__handleGetPlayerPropertiesMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetPlayerPropertiesMessage:fromClient:");
}

id objc_msgSend__handleGetRecentAVOutputDeviceUIDsMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetRecentAVOutputDeviceUIDsMessage:fromClient:");
}

id objc_msgSend__handleGetRecommendRouteCandidatesMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetRecommendRouteCandidatesMessage:fromClient:");
}

id objc_msgSend__handleGetRemoteTextInputSessionMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetRemoteTextInputSessionMessage:fromClient:");
}

id objc_msgSend__handleGetSavedAVRoutePasswordMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetSavedAVRoutePasswordMessage:fromClient:");
}

id objc_msgSend__handleGetSupportedBrowsableContentAPIsMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetSupportedBrowsableContentAPIsMessage:fromClient:");
}

id objc_msgSend__handleGetSupportedCommandsMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetSupportedCommandsMessage:fromClient:");
}

id objc_msgSend__handleGetSupportsSystemPairingMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetSupportsSystemPairingMessage:fromClient:");
}

id objc_msgSend__handleGetSystemIsMutedMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetSystemIsMutedMessage:fromClient:");
}

id objc_msgSend__handleGetSystemVolumeMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetSystemVolumeMessage:fromClient:");
}

id objc_msgSend__handleGetUIServerEndpointMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetUIServerEndpointMessage:fromClient:");
}

id objc_msgSend__handleGetUIServiceRelayEndpointMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetUIServiceRelayEndpointMessage:fromClient:");
}

id objc_msgSend__handleGetUserIdentityForDSIDMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetUserIdentityForDSIDMessage:fromClient:");
}

id objc_msgSend__handleGetUserIdentityMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetUserIdentityMessage:fromClient:");
}

id objc_msgSend__handleGetVirtualOutputDevicesMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetVirtualOutputDevicesMessage:fromClient:");
}

id objc_msgSend__handleGetVolumeControlCapabilitiesMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetVolumeControlCapabilitiesMessage:fromClient:");
}

id objc_msgSend__handleGetVolumeMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetVolumeMessage:fromClient:");
}

id objc_msgSend__handleGetVolumeMutedMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGetVolumeMutedMessage:fromClient:");
}

id objc_msgSend__handleGroupDevicesAndSendCommand_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGroupDevicesAndSendCommand:fromClient:");
}

id objc_msgSend__handleGroupSessionEventMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGroupSessionEventMessage:fromClient:");
}

id objc_msgSend__handleInputDeviceConnectedMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleInputDeviceConnectedMessage:fromClient:");
}

id objc_msgSend__handleInputDeviceDisconnectedMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleInputDeviceDisconnectedMessage:fromClient:");
}

id objc_msgSend__handleInvalidateApplicationConnectionMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleInvalidateApplicationConnectionMessage:");
}

id objc_msgSend__handleInvalidateApplicationConnectionMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleInvalidateApplicationConnectionMessage:fromClient:");
}

id objc_msgSend__handleKeepAliveMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleKeepAliveMessage:fromClient:");
}

id objc_msgSend__handleLegacyVolumeControlCapabilitiesDidChangeMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleLegacyVolumeControlCapabilitiesDidChangeMessage:");
}

id objc_msgSend__handleLyricsEventMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleLyricsEventMessage:fromClient:");
}

id objc_msgSend__handleMaybeCanMigrateToLocalEndpointDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleMaybeCanMigrateToLocalEndpointDidChange:");
}

id objc_msgSend__handleMigrateFromEndpointToEndpointMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleMigrateFromEndpointToEndpointMessage:fromClient:");
}

id objc_msgSend__handleMigrateFromEndpointToOutputDevicesMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleMigrateFromEndpointToOutputDevicesMessage:fromClient:");
}

id objc_msgSend__handleModifyOutputContextMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleModifyOutputContextMessage:fromClient:");
}

id objc_msgSend__handleModifyOutputContextRequestMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleModifyOutputContextRequestMessage:fromClient:");
}

id objc_msgSend__handleMuteVolumeMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleMuteVolumeMessage:fromClient:");
}

id objc_msgSend__handleNewConnection_forServiceType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleNewConnection:forServiceType:");
}

id objc_msgSend__handleNotificationMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleNotificationMessage:");
}

id objc_msgSend__handleOutputDevicesRemovedMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleOutputDevicesRemovedMessage:");
}

id objc_msgSend__handleOutputDevicesUpdatedMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleOutputDevicesUpdatedMessage:");
}

id objc_msgSend__handlePauseOutputDeviceUIDsMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePauseOutputDeviceUIDsMessage:fromClient:");
}

id objc_msgSend__handlePing_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePing:fromClient:");
}

id objc_msgSend__handlePlaybackQueueRequest_forPlayerPath_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePlaybackQueueRequest:forPlayerPath:completion:");
}

id objc_msgSend__handlePlaybackQueueRequestMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePlaybackQueueRequestMessage:fromClient:");
}

id objc_msgSend__handlePlaybackSessionMigrateBeginMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePlaybackSessionMigrateBeginMessage:fromClient:");
}

id objc_msgSend__handlePlaybackSessionMigrateBeginRequest_forPlayerPath_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePlaybackSessionMigrateBeginRequest:forPlayerPath:completion:");
}

id objc_msgSend__handlePlaybackSessionMigrateEndMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePlaybackSessionMigrateEndMessage:fromClient:");
}

id objc_msgSend__handlePlaybackSessionMigrateEndRequest_error_forPlayerPath_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePlaybackSessionMigrateEndRequest:error:forPlayerPath:completion:");
}

id objc_msgSend__handlePlaybackSessionMigrateRequest_request_forPlayerPath_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePlaybackSessionMigrateRequest:request:forPlayerPath:completion:");
}

id objc_msgSend__handlePlaybackSessionMigrateRequestMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePlaybackSessionMigrateRequestMessage:fromClient:");
}

id objc_msgSend__handlePlaybackSessionRequest_forPlayerPath_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePlaybackSessionRequest:forPlayerPath:completion:");
}

id objc_msgSend__handlePlaybackSessionRequest_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePlaybackSessionRequest:fromClient:");
}

id objc_msgSend__handlePlaybackSessionRequestMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePlaybackSessionRequestMessage:fromClient:");
}

id objc_msgSend__handlePlayerClientParticipantsUpdateMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePlayerClientParticipantsUpdateMessage:");
}

id objc_msgSend__handlePostNotificationMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePostNotificationMessage:fromClient:");
}

id objc_msgSend__handlePredictGroupLeader_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePredictGroupLeader:fromClient:");
}

id objc_msgSend__handlePresentMediaControlsCommandMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePresentMediaControlsCommandMessage:fromClient:");
}

id objc_msgSend__handlePresentProximityCardMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePresentProximityCardMessage:fromClient:");
}

id objc_msgSend__handlePresentRouteAuthorizationStatusMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePresentRouteAuthorizationStatusMessage:");
}

id objc_msgSend__handlePresentRouteAuthorizationStatusMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePresentRouteAuthorizationStatusMessage:fromClient:");
}

id objc_msgSend__handlePrewarmMediaControlsCommandMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePrewarmMediaControlsCommandMessage:fromClient:");
}

id objc_msgSend__handlePromptForRouteAuthorizationMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePromptForRouteAuthorizationMessage:");
}

id objc_msgSend__handlePromptForRouteAuthorizationMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePromptForRouteAuthorizationMessage:fromClient:");
}

id objc_msgSend__handleReceivedButtonEvent_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleReceivedButtonEvent:fromClient:");
}

id objc_msgSend__handleReceivedCommand_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleReceivedCommand:fromClient:");
}

id objc_msgSend__handleReceivedVoiceInputMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleReceivedVoiceInputMessage:fromClient:");
}

id objc_msgSend__handleRecommendRouteCandidateMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleRecommendRouteCandidateMessage:fromClient:");
}

id objc_msgSend__handleRecordingEndpointAvailabilityMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleRecordingEndpointAvailabilityMessage:fromClient:");
}

id objc_msgSend__handleRecordingStateChangedMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleRecordingStateChangedMessage:fromClient:");
}

id objc_msgSend__handleRegisterForWakingNowPlayingNotifications_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleRegisterForWakingNowPlayingNotifications:fromClient:");
}

id objc_msgSend__handleRegisterGameControllerMessage_client_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleRegisterGameControllerMessage:client:");
}

id objc_msgSend__handleRegisterHIDDeviceMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleRegisterHIDDeviceMessage:fromClient:");
}

id objc_msgSend__handleRegisterPairingHandlerMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleRegisterPairingHandlerMessage:fromClient:");
}

id objc_msgSend__handleRegisterVoiceInputDeviceMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleRegisterVoiceInputDeviceMessage:fromClient:");
}

id objc_msgSend__handleRemoteCommand_withOptions_playerPath_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleRemoteCommand:withOptions:playerPath:completion:");
}

id objc_msgSend__handleRemoteDeviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleRemoteDeviceInfo:");
}

id objc_msgSend__handleRemoteTextInputMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleRemoteTextInputMessage:fromClient:");
}

id objc_msgSend__handleRemoveClientMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleRemoveClientMessage:");
}

id objc_msgSend__handleRemoveFromParentGroup_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleRemoveFromParentGroup:fromClient:");
}

id objc_msgSend__handleRemoveNowPlayingClientMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleRemoveNowPlayingClientMessage:fromClient:");
}

id objc_msgSend__handleRemoveNowPlayingPlayerMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleRemoveNowPlayingPlayerMessage:fromClient:");
}

id objc_msgSend__handleRemovePlayerMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleRemovePlayerMessage:");
}

id objc_msgSend__handleRequestAudioAmplitudeSamplesMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleRequestAudioAmplitudeSamplesMessage:fromClient:");
}

id objc_msgSend__handleRequestBlessMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleRequestBlessMessage:fromClient:");
}

id objc_msgSend__handleRequestGroupSessionMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleRequestGroupSessionMessage:fromClient:");
}

id objc_msgSend__handleRequestPlaybackInitializationMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleRequestPlaybackInitializationMessage:fromClient:");
}

id objc_msgSend__handleRequestPlaybackQueueCapabilities_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleRequestPlaybackQueueCapabilities:fromClient:");
}

id objc_msgSend__handleRequestVideoThumbnailsMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleRequestVideoThumbnailsMessage:fromClient:");
}

id objc_msgSend__handleResetOutputContextMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleResetOutputContextMessage:fromClient:");
}

id objc_msgSend__handleResetPlaybackQueueRequests_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleResetPlaybackQueueRequests:fromClient:");
}

id objc_msgSend__handleResolvePlayerPath_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleResolvePlayerPath:fromClient:");
}

id objc_msgSend__handleRestrictCommandClientsMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleRestrictCommandClientsMessage:fromClient:");
}

id objc_msgSend__handleResumeNowPlayingSession_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleResumeNowPlayingSession:fromClient:");
}

id objc_msgSend__handleSearchEndpointsForOutputDeviceUIDsMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSearchEndpointsForOutputDeviceUIDsMessage:fromClient:");
}

id objc_msgSend__handleSearchEndpointsForRoutingContextUIDMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSearchEndpointsForRoutingContextUIDMessage:fromClient:");
}

id objc_msgSend__handleSelectSourceMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSelectSourceMessage:fromClient:");
}

id objc_msgSend__handleSendApplicationConnectionMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSendApplicationConnectionMessage:fromClient:");
}

id objc_msgSend__handleSendCommandMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSendCommandMessage:fromClient:");
}

id objc_msgSend__handleSendCommandToEachEndpointContainingOutputDeviceUIDsMessage_fromClient_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSendCommandToEachEndpointContainingOutputDeviceUIDsMessage:fromClient:");
}

id objc_msgSend__handleSendCommandToNewGroupContainingOutputDeviceUIDsMessage_fromClient_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSendCommandToNewGroupContainingOutputDeviceUIDsMessage:fromClient:");
}

id objc_msgSend__handleSendLyricsEvent_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSendLyricsEvent:fromClient:");
}

id objc_msgSend__handleSendMusicHandoffEventMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSendMusicHandoffEventMessage:fromClient:");
}

id objc_msgSend__handleSendPlaybackSessionMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSendPlaybackSessionMessage:fromClient:");
}

id objc_msgSend__handleSendPlaybackSessionMigrateBeginMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSendPlaybackSessionMigrateBeginMessage:fromClient:");
}

id objc_msgSend__handleSendPlaybackSessionMigrateEndMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSendPlaybackSessionMigrateEndMessage:fromClient:");
}

id objc_msgSend__handleSendTelevisionCustomDataMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSendTelevisionCustomDataMessage:fromClient:");
}

id objc_msgSend__handleServerXPCMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleServerXPCMessage:fromClient:");
}

id objc_msgSend__handleSetActiveOriginMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetActiveOriginMessage:fromClient:");
}

id objc_msgSend__handleSetApplicationPickedRoutes_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetApplicationPickedRoutes:fromClient:");
}

id objc_msgSend__handleSetCanBeNowPlayingAppMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetCanBeNowPlayingAppMessage:fromClient:");
}

id objc_msgSend__handleSetCanBeNowPlayingPlayerMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetCanBeNowPlayingPlayerMessage:fromClient:");
}

id objc_msgSend__handleSetClientPropertiesMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetClientPropertiesMessage:fromClient:");
}

id objc_msgSend__handleSetConnectionStateMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetConnectionStateMessage:");
}

id objc_msgSend__handleSetConnectionStateMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetConnectionStateMessage:fromClient:");
}

id objc_msgSend__handleSetConversationDetectionEnabledMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetConversationDetectionEnabledMessage:fromClient:");
}

id objc_msgSend__handleSetDefaultSupportedCommandsMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetDefaultSupportedCommandsMessage:");
}

id objc_msgSend__handleSetDefaultSupportedCommandsMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetDefaultSupportedCommandsMessage:fromClient:");
}

id objc_msgSend__handleSetDiscoveryModeMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetDiscoveryModeMessage:fromClient:");
}

id objc_msgSend__handleSetHardwareRemoteBehaviorMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetHardwareRemoteBehaviorMessage:fromClient:");
}

id objc_msgSend__handleSetHiliteModeMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetHiliteModeMessage:fromClient:");
}

id objc_msgSend__handleSetInputModeMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetInputModeMessage:fromClient:");
}

id objc_msgSend__handleSetListeningModeMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetListeningModeMessage:fromClient:");
}

id objc_msgSend__handleSetMessageLogging_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetMessageLogging:fromClient:");
}

id objc_msgSend__handleSetNearbyDevice_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetNearbyDevice:fromClient:");
}

id objc_msgSend__handleSetNearbyDevicesToRemoteControlMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetNearbyDevicesToRemoteControlMessage:fromClient:");
}

id objc_msgSend__handleSetNowPlayingAppOverrideMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetNowPlayingAppOverrideMessage:fromClient:");
}

id objc_msgSend__handleSetNowPlayingClientMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetNowPlayingClientMessage:");
}

id objc_msgSend__handleSetNowPlayingClientMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetNowPlayingClientMessage:fromClient:");
}

id objc_msgSend__handleSetNowPlayingPlayerMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetNowPlayingPlayerMessage:");
}

id objc_msgSend__handleSetNowPlayingPlayerMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetNowPlayingPlayerMessage:fromClient:");
}

id objc_msgSend__handleSetOriginClientPropertiesMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetOriginClientPropertiesMessage:");
}

id objc_msgSend__handleSetOriginClientPropertiesMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetOriginClientPropertiesMessage:fromClient:");
}

id objc_msgSend__handleSetOverriddenNowPlayingAppMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetOverriddenNowPlayingAppMessage:fromClient:");
}

id objc_msgSend__handleSetPickedRouteHasVolumeControlMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetPickedRouteHasVolumeControlMessage:fromClient:");
}

id objc_msgSend__handleSetPickedRouteMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetPickedRouteMessage:fromClient:");
}

id objc_msgSend__handleSetPlaybackQueue_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetPlaybackQueue:fromClient:");
}

id objc_msgSend__handleSetPlaybackQueueCapabilities_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetPlaybackQueueCapabilities:fromClient:");
}

id objc_msgSend__handleSetPlaybackStateMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetPlaybackStateMessage:fromClient:");
}

id objc_msgSend__handleSetPlayerClientPropertiesMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetPlayerClientPropertiesMessage:");
}

id objc_msgSend__handleSetPlayerClientPropertiesMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetPlayerClientPropertiesMessage:fromClient:");
}

id objc_msgSend__handleSetPlayerPictureInPictureEnabledMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetPlayerPictureInPictureEnabledMessage:fromClient:");
}

id objc_msgSend__handleSetPlayerPropertiesMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetPlayerPropertiesMessage:fromClient:");
}

id objc_msgSend__handleSetRecentAVOutputDeviceUIDMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetRecentAVOutputDeviceUIDMessage:fromClient:");
}

id objc_msgSend__handleSetRouteDiscoveryModeMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetRouteDiscoveryModeMessage:fromClient:");
}

id objc_msgSend__handleSetSavedAVRoutePasswordMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetSavedAVRoutePasswordMessage:fromClient:");
}

id objc_msgSend__handleSetStateMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetStateMessage:");
}

id objc_msgSend__handleSetSupportedBrowsableContentAPIsMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetSupportedBrowsableContentAPIsMessage:fromClient:");
}

id objc_msgSend__handleSetSupportedCommandsMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetSupportedCommandsMessage:fromClient:");
}

id objc_msgSend__handleSetSystemIsMutedMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetSystemIsMutedMessage:fromClient:");
}

id objc_msgSend__handleSetSystemVolumeMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetSystemVolumeMessage:fromClient:");
}

id objc_msgSend__handleSetUIServiceRelayEndpointMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetUIServiceRelayEndpointMessage:fromClient:");
}

id objc_msgSend__handleSetVolumeMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSetVolumeMessage:fromClient:");
}

id objc_msgSend__handleStartNowPlayingSession_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleStartNowPlayingSession:fromClient:");
}

id objc_msgSend__handleStopNowPlayingSession_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleStopNowPlayingSession:fromClient:");
}

id objc_msgSend__handleSupportedAPIsDidChangeForClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSupportedAPIsDidChangeForClient:");
}

id objc_msgSend__handleSuspendDisconnectionPauseMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSuspendDisconnectionPauseMessage:fromClient:");
}

id objc_msgSend__handleTelevisionEndpointAvailableMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleTelevisionEndpointAvailableMessage:fromClient:");
}

id objc_msgSend__handleTextInputMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleTextInputMessage:fromClient:");
}

id objc_msgSend__handleTouchEvent_withDeviceID_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleTouchEvent:withDeviceID:fromClient:");
}

id objc_msgSend__handleTriggerAudioFadeMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleTriggerAudioFadeMessage:fromClient:");
}

id objc_msgSend__handleUnpickAirPlayRoutesMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleUnpickAirPlayRoutesMessage:fromClient:");
}

id objc_msgSend__handleUnregisterPairingHandler_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleUnregisterPairingHandler:fromClient:");
}

id objc_msgSend__handleUpdateActiveSystemEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleUpdateActiveSystemEndpoint:");
}

id objc_msgSend__handleUpdateActiveSystemEndpointMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleUpdateActiveSystemEndpointMessage:fromClient:");
}

id objc_msgSend__handleUpdateActiveSystemEndpointUIDMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleUpdateActiveSystemEndpointUIDMessage:fromClient:");
}

id objc_msgSend__handleUpdateClientMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleUpdateClientMessage:");
}

id objc_msgSend__handleUpdateClientPropertiesMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleUpdateClientPropertiesMessage:fromClient:");
}

id objc_msgSend__handleUpdateContentItemsMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleUpdateContentItemsMessage:");
}

id objc_msgSend__handleUpdatePlayerMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleUpdatePlayerMessage:");
}

id objc_msgSend__handleUpdatePlayerPropertiesMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleUpdatePlayerPropertiesMessage:fromClient:");
}

id objc_msgSend__handleVoiceDataReceivedMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleVoiceDataReceivedMessage:fromClient:");
}

id objc_msgSend__handleVolumeAvailabilityDidChangeNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleVolumeAvailabilityDidChangeNotification:");
}

id objc_msgSend__handleVolumeControlCapabilitiesDidChangeMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleVolumeControlCapabilitiesDidChangeMessage:");
}

id objc_msgSend__handleVolumeDidChangeMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleVolumeDidChangeMessage:");
}

id objc_msgSend__handleVolumeMutedDidChangeMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleVolumeMutedDidChangeMessage:");
}

id objc_msgSend__handleWakeMediaAppMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleWakeMediaAppMessage:fromClient:");
}

id objc_msgSend__handleWakePlayerServiceMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleWakePlayerServiceMessage:fromClient:");
}

id objc_msgSend__handleWillStartPlayingInterruptMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleWillStartPlayingInterruptMessage:fromClient:");
}

id objc_msgSend__handleXPCMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleXPCMessage:");
}

id objc_msgSend__hasForwarderForOrigin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_hasForwarderForOrigin:");
}

id objc_msgSend__hasPersonalDeviceForContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_hasPersonalDeviceForContext:");
}

id objc_msgSend__hostAssertionForType_pid_bundleID_name_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_hostAssertionForType:pid:bundleID:name:");
}

id objc_msgSend__idsPriorityFromPriority_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_idsPriorityFromPriority:");
}

id objc_msgSend__init(void *a1, const char *a2, ...)
{
  return _[a1 _init];
}

id objc_msgSend__initVolumeDataIfNeccessary(void *a1, const char *a2, ...)
{
  return _[a1 _initVolumeDataIfNeccessary];
}

id objc_msgSend__initWithLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initWithLabel:");
}

id objc_msgSend__initialize(void *a1, const char *a2, ...)
{
  return _[a1 _initialize];
}

id objc_msgSend__initializeBonjourServiceWithDeviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initializeBonjourServiceWithDeviceInfo:");
}

id objc_msgSend__initializeDatabaseSchema(void *a1, const char *a2, ...)
{
  return _[a1 _initializeDatabaseSchema];
}

id objc_msgSend__initializeDiscoverySessions(void *a1, const char *a2, ...)
{
  return _[a1 _initializeDiscoverySessions];
}

id objc_msgSend__initializeExternalDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initializeExternalDevice:");
}

id objc_msgSend__initializeSystemEndpointInfo(void *a1, const char *a2, ...)
{
  return _[a1 _initializeSystemEndpointInfo];
}

id objc_msgSend__initializeWithIdentity_nearbyGroup_isHosted_hostSigningKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initializeWithIdentity:nearbyGroup:isHosted:hostSigningKey:");
}

id objc_msgSend__intializeClient_forRemoteControlChannel_authCallback_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_intializeClient:forRemoteControlChannel:authCallback:completion:");
}

id objc_msgSend__invalidate(void *a1, const char *a2, ...)
{
  return _[a1 _invalidate];
}

id objc_msgSend__isACriticalSectionActive(void *a1, const char *a2, ...)
{
  return _[a1 _isACriticalSectionActive];
}

id objc_msgSend__isAllowedAccessToDataFromPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isAllowedAccessToDataFromPlayerPath:");
}

id objc_msgSend__isAllowedToUpdateRecommendationForOutputDevice_recentlyDismissed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isAllowedToUpdateRecommendationForOutputDevice:recentlyDismissed:");
}

id objc_msgSend__isCommandCacheCreating_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isCommandCacheCreating:");
}

id objc_msgSend__isCommandCacheable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isCommandCacheable:");
}

id objc_msgSend__isMediaAppInstalled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isMediaAppInstalled:");
}

id objc_msgSend__isRequestForCompanionOrigin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isRequestForCompanionOrigin:");
}

id objc_msgSend__isRequestForCurrentCongifuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isRequestForCurrentCongifuration:");
}

id objc_msgSend__isRequestForLocalOrigin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isRequestForLocalOrigin:");
}

id objc_msgSend__joinGroupSessionWithToken_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_joinGroupSessionWithToken:completion:");
}

id objc_msgSend__launch(void *a1, const char *a2, ...)
{
  return _[a1 _launch];
}

id objc_msgSend__launchTVClusterSettings(void *a1, const char *a2, ...)
{
  return _[a1 _launchTVClusterSettings];
}

id objc_msgSend__loadDefaults(void *a1, const char *a2, ...)
{
  return _[a1 _loadDefaults];
}

id objc_msgSend__loadMostRecentlyPicked(void *a1, const char *a2, ...)
{
  return _[a1 _loadMostRecentlyPicked];
}

id objc_msgSend__loadTokenRecords(void *a1, const char *a2, ...)
{
  return _[a1 _loadTokenRecords];
}

id objc_msgSend__logChangesInModifyingOutputDevice_toOutputDevice_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logChangesInModifyingOutputDevice:toOutputDevice:reason:");
}

id objc_msgSend__logEndpointsChanged_oldEndpoints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logEndpointsChanged:oldEndpoints:");
}

id objc_msgSend__maybeAddNativeGroupToGroups_availableOutputDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maybeAddNativeGroupToGroups:availableOutputDevices:");
}

id objc_msgSend__maybeAttemptToDiscoverAndConnectToCompanionWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maybeAttemptToDiscoverAndConnectToCompanionWithReason:");
}

id objc_msgSend__maybeBatchRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maybeBatchRequest:");
}

id objc_msgSend__maybePostEndpointDidAddOutputDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maybePostEndpointDidAddOutputDevice:");
}

id objc_msgSend__maybePostEndpointDidChangeOutputDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maybePostEndpointDidChangeOutputDevice:");
}

id objc_msgSend__maybePostEndpointDidRemoveOutputDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maybePostEndpointDidRemoveOutputDevice:");
}

id objc_msgSend__maybePostVolumeControlCapabilitiesDidChange_outputDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maybePostVolumeControlCapabilitiesDidChange:outputDevice:");
}

id objc_msgSend__maybePostVolumeDidChange_outputDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maybePostVolumeDidChange:outputDevice:");
}

id objc_msgSend__maybePostVolumeIsMutedDidChange_outputDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maybePostVolumeIsMutedDidChange:outputDevice:");
}

id objc_msgSend__maybeSendCommandPreviewForOutputDeviceUID_details_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maybeSendCommandPreviewForOutputDeviceUID:details:");
}

id objc_msgSend__maybeWakeClient(void *a1, const char *a2, ...)
{
  return _[a1 _maybeWakeClient];
}

id objc_msgSend__mediaServerController(void *a1, const char *a2, ...)
{
  return _[a1 _mediaServerController];
}

id objc_msgSend__mergeDeviceInfo_intoProtobuf_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mergeDeviceInfo:intoProtobuf:");
}

id objc_msgSend__mergeOutputDevice_intoProtobuf_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mergeOutputDevice:intoProtobuf:");
}

id objc_msgSend__messageCanLaunchApp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_messageCanLaunchApp:");
}

id objc_msgSend__messageRequiresMediaServerBlessing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_messageRequiresMediaServerBlessing:");
}

id objc_msgSend__modifyPredictedOutputDevicesWithRequest_outputContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_modifyPredictedOutputDevicesWithRequest:outputContext:");
}

id objc_msgSend__monitorForTermination_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_monitorForTermination:");
}

id objc_msgSend__mutableExternalDeviceClientsWithRegisteredCallbacks_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mutableExternalDeviceClientsWithRegisteredCallbacks:");
}

id objc_msgSend__mutableExternalDeviceClientsWithRegisteredNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mutableExternalDeviceClientsWithRegisteredNotification:");
}

id objc_msgSend__netServiceTXTRecordDataWithDeviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_netServiceTXTRecordDataWithDeviceInfo:");
}

id objc_msgSend__newIOKitDeviceProperties(void *a1, const char *a2, ...)
{
  return _[a1 _newIOKitDeviceProperties];
}

id objc_msgSend__normalizeOutputDeviceUIDs_fromDeviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_normalizeOutputDeviceUIDs:fromDeviceInfo:");
}

id objc_msgSend__notifyActiveSessionMaybeWillBeHijackedByNativePlaybackFromOutputContextModification_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notifyActiveSessionMaybeWillBeHijackedByNativePlaybackFromOutputContextModification:");
}

id objc_msgSend__notifyAndDisconnectClient_withError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notifyAndDisconnectClient:withError:");
}

id objc_msgSend__notifyAndDisconnectClients_withError_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notifyAndDisconnectClients:withError:completion:");
}

id objc_msgSend__notifyDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notifyDelegate:");
}

id objc_msgSend__notifyDelegateDidCloseWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notifyDelegateDidCloseWithError:");
}

id objc_msgSend__notifyDelegateDidReceiveData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notifyDelegateDidReceiveData:");
}

id objc_msgSend__notifyDelegateRoutesDidChange(void *a1, const char *a2, ...)
{
  return _[a1 _notifyDelegateRoutesDidChange];
}

id objc_msgSend__notifyDelegateWithConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notifyDelegateWithConnection:");
}

id objc_msgSend__notifyLocalDeviceDidChangeOutputContext(void *a1, const char *a2, ...)
{
  return _[a1 _notifyLocalDeviceDidChangeOutputContext];
}

id objc_msgSend__nowPlayingControllerConfigurationForUID_topologyIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_nowPlayingControllerConfigurationForUID:topologyIdentifier:");
}

id objc_msgSend__nowPlayingPlaybackStateDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_nowPlayingPlaybackStateDidChange:");
}

id objc_msgSend__oddsShimDataSource(void *a1, const char *a2, ...)
{
  return _[a1 _oddsShimDataSource];
}

id objc_msgSend__onCalloutQueue_notifyStatusDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onCalloutQueue_notifyStatusDidChange:");
}

id objc_msgSend__onIDSQueue_connectDiscoveryChannel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onIDSQueue_connectDiscoveryChannel:");
}

id objc_msgSend__onIDSQueue_disconnectDiscoveryChannel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onIDSQueue_disconnectDiscoveryChannel:");
}

id objc_msgSend__onIDSQueue_initializeDiscoveryChannel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onIDSQueue_initializeDiscoveryChannel");
}

id objc_msgSend__onQueue_activeOriginClient(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_activeOriginClient");
}

id objc_msgSend__onQueue_activePlayerClient(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_activePlayerClient");
}

id objc_msgSend__onQueue_addNowPlayingClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_addNowPlayingClient:");
}

id objc_msgSend__onQueue_addPlayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_addPlayer:");
}

id objc_msgSend__onQueue_adjustPlaybackTimerIfNeededForPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_adjustPlaybackTimerIfNeededForPlayerPath:");
}

id objc_msgSend__onQueue_allNowPlayingInfoClients(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_allNowPlayingInfoClients");
}

id objc_msgSend__onQueue_anyPlayerIsPlaying(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_anyPlayerIsPlaying");
}

id objc_msgSend__onQueue_beginTimerWithInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_beginTimerWithInterval:");
}

id objc_msgSend__onQueue_calculateActiveNowPlayingClient(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_calculateActiveNowPlayingClient");
}

id objc_msgSend__onQueue_calculateActiveNowPlayingPlayerClients(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_calculateActiveNowPlayingPlayerClients");
}

id objc_msgSend__onQueue_calculateComputedNowPlayingClient(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_calculateComputedNowPlayingClient");
}

id objc_msgSend__onQueue_calculateInferredNowPlayingClient(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_calculateInferredNowPlayingClient");
}

id objc_msgSend__onQueue_calculateInferredPlaybackStateForPlayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_calculateInferredPlaybackStateForPlayer:");
}

id objc_msgSend__onQueue_calculateShouldShowLockScreenForReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_calculateShouldShowLockScreenForReason:");
}

id objc_msgSend__onQueue_canBeNowPlayingDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_canBeNowPlayingDidChange:");
}

id objc_msgSend__onQueue_clearLocalOriginForwaderWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_clearLocalOriginForwaderWithReason:");
}

id objc_msgSend__onQueue_companionOriginClient(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_companionOriginClient");
}

id objc_msgSend__onQueue_createAndActivateConnection_forClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_createAndActivateConnection:forClient:");
}

id objc_msgSend__onQueue_createRunningSessionWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_createRunningSessionWithCompletion:");
}

id objc_msgSend__onQueue_createRunningSessionWithServiceToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_createRunningSessionWithServiceToken:");
}

id objc_msgSend__onQueue_destroyPlayerPathsForOrigin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_destroyPlayerPathsForOrigin:");
}

id objc_msgSend__onQueue_determineGroupLeaderForOutputDevices_availableOutputDevices_options_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_determineGroupLeaderForOutputDevices:availableOutputDevices:options:");
}

id objc_msgSend__onQueue_existingPlayerClientForPlayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_existingPlayerClientForPlayer:");
}

id objc_msgSend__onQueue_forwardOriginToLocalOrigin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_forwardOriginToLocalOrigin:");
}

id objc_msgSend__onQueue_initializeDisplayName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_initializeDisplayName");
}

id objc_msgSend__onQueue_initializeSessionWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_initializeSessionWithCompletion:");
}

id objc_msgSend__onQueue_invalidateSession(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_invalidateSession");
}

id objc_msgSend__onQueue_isLockScreenWidgetVisible(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_isLockScreenWidgetVisible");
}

id objc_msgSend__onQueue_isPlaying(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_isPlaying");
}

id objc_msgSend__onQueue_isPlayingDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_isPlayingDidChange:");
}

id objc_msgSend__onQueue_lastPlayingDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_lastPlayingDate");
}

id objc_msgSend__onQueue_makeExternalDeviceForEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_makeExternalDeviceForEndpoint:");
}

id objc_msgSend__onQueue_makeExternalDeviceTransportForEndpoint_designatedGroupLeader_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_makeExternalDeviceTransportForEndpoint:designatedGroupLeader:");
}

id objc_msgSend__onQueue_makeHostedExternalDeviceForEndpoint_didCreate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_makeHostedExternalDeviceForEndpoint:didCreate:");
}

id objc_msgSend__onQueue_makeHostedExternalDeviceForEndpoint_didCreate_factory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_makeHostedExternalDeviceForEndpoint:didCreate:factory:");
}

id objc_msgSend__onQueue_makeLocalHostedExternalDeviceForEndpoint_didCreate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_makeLocalHostedExternalDeviceForEndpoint:didCreate:");
}

id objc_msgSend__onQueue_notifyObservers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_notifyObservers:");
}

id objc_msgSend__onQueue_originClientForDeviceUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_originClientForDeviceUID:");
}

id objc_msgSend__onQueue_originClientForGroupLeaderOfDeviceUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_originClientForGroupLeaderOfDeviceUID:");
}

id objc_msgSend__onQueue_originClientForOrigin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_originClientForOrigin:");
}

id objc_msgSend__onQueue_pictureInPictureEnabledDidChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_pictureInPictureEnabledDidChanged:");
}

id objc_msgSend__onQueue_playbackQueueCapabilitiesDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_playbackQueueCapabilitiesDidChange:");
}

id objc_msgSend__onQueue_playbackQueueContentItemsArtworkDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_playbackQueueContentItemsArtworkDidChange:");
}

id objc_msgSend__onQueue_playbackQueueContentItemsDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_playbackQueueContentItemsDidChange:");
}

id objc_msgSend__onQueue_playbackQueueDidChange_nowPlayingItemChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_playbackQueueDidChange:nowPlayingItemChanged:");
}

id objc_msgSend__onQueue_playbackState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_playbackState");
}

id objc_msgSend__onQueue_playbackStateDidChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_playbackStateDidChanged:");
}

id objc_msgSend__onQueue_playerClientForPlayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_playerClientForPlayer:");
}

id objc_msgSend__onQueue_popState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_popState");
}

id objc_msgSend__onQueue_presentDialogWithTitle_message_defaultButtonTitle_alternateButtonTitle_completion_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "_onQueue_presentDialogWithTitle:message:defaultButtonTitle:alternateButtonTitle:completion:");
}

id objc_msgSend__onQueue_pushState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_pushState");
}

id objc_msgSend__onQueue_queryExistingPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_queryExistingPlayerPath:");
}

id objc_msgSend__onQueue_recalculateStateForReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_recalculateStateForReason:");
}

id objc_msgSend__onQueue_reevaluateRemoteControlState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_reevaluateRemoteControlState");
}

id objc_msgSend__onQueue_reevaluateShouldShowLockScreenForReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_reevaluateShouldShowLockScreenForReason:");
}

id objc_msgSend__onQueue_reevaluateStateWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_reevaluateStateWithReason:");
}

id objc_msgSend__onQueue_registerDisconnectionHandler_forClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_registerDisconnectionHandler:forClient:");
}

id objc_msgSend__onQueue_reloadEndpoints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_reloadEndpoints");
}

id objc_msgSend__onQueue_reloadInferredStateFromDataSource_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_reloadInferredStateFromDataSource:reason:");
}

id objc_msgSend__onQueue_reloadOutputDevices(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_reloadOutputDevices");
}

id objc_msgSend__onQueue_reloadWithOutputDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_reloadWithOutputDevices:");
}

id objc_msgSend__onQueue_removeNowPlayingClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_removeNowPlayingClient:");
}

id objc_msgSend__onQueue_savePersistentActiveOrigin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_savePersistentActiveOrigin:");
}

id objc_msgSend__onQueue_sendPrepareForSetQueueTo_reason_type_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_sendPrepareForSetQueueTo:reason:type:");
}

id objc_msgSend__onQueue_setActiveOrigin_saveState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_setActiveOrigin:saveState:");
}

id objc_msgSend__onQueue_setActivePlayerClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_setActivePlayerClient:");
}

id objc_msgSend__onQueue_simplifyToplogyOfPlayerPathIfNeeded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_simplifyToplogyOfPlayerPathIfNeeded:");
}

id objc_msgSend__onQueue_stateForPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_stateForPlayerPath:");
}

id objc_msgSend__onQueue_supportedCommandsDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_supportedCommandsDidChange:");
}

id objc_msgSend__onQueue_updateActivityStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onQueue_updateActivityStatus:");
}

id objc_msgSend__onSerialQueue_addConnectedEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onSerialQueue_addConnectedEndpoint:");
}

id objc_msgSend__onSerialQueue_calculateActiveEndpoint_event_reason_suppressPairedDeviceSync_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onSerialQueue_calculateActiveEndpoint:event:reason:suppressPairedDeviceSync:");
}

id objc_msgSend__onSerialQueue_calculateProactiveEndpointForEvent_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onSerialQueue_calculateProactiveEndpointForEvent:reason:");
}

id objc_msgSend__onSerialQueue_calculateProactiveRecommendedEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onSerialQueue_calculateProactiveRecommendedEndpoint:");
}

id objc_msgSend__onSerialQueue_calculateRecommendedEndpointForEvent_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onSerialQueue_calculateRecommendedEndpointForEvent:reason:");
}

id objc_msgSend__onSerialQueue_calculateUserSelectedEndpointForEvent_reason_suppressPairedDeviceSync_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onSerialQueue_calculateUserSelectedEndpointForEvent:reason:suppressPairedDeviceSync:");
}

id objc_msgSend__onSerialQueue_clearActiveEndpointType_outputDeviceUID_event_reason_clientBundleIdentifier_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "_onSerialQueue_clearActiveEndpointType:outputDeviceUID:event:reason:clientBundleIdentifier:");
}

id objc_msgSend__onSerialQueue_completeGroupSessionRequestsWithIdentifier_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onSerialQueue_completeGroupSessionRequestsWithIdentifier:error:");
}

id objc_msgSend__onSerialQueue_connectToEndpoint_reason_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onSerialQueue_connectToEndpoint:reason:queue:completion:");
}

id objc_msgSend__onSerialQueue_deviceInfo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onSerialQueue_deviceInfo");
}

id objc_msgSend__onSerialQueue_isEndpointsDesignatedGroupLeader_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onSerialQueue_isEndpointsDesignatedGroupLeader:");
}

id objc_msgSend__onSerialQueue_maybeSetupPlaybackTimerForEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onSerialQueue_maybeSetupPlaybackTimerForEvent:");
}

id objc_msgSend__onSerialQueue_maybeSetupUserSelectedTimerForEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onSerialQueue_maybeSetupUserSelectedTimerForEvent:");
}

id objc_msgSend__onSerialQueue_prepareToConnectWithOptions_userInfo_connectionAttemptDetails_connectionHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "_onSerialQueue_prepareToConnectWithOptions:userInfo:connectionAttemptDetails:connectionHandler:");
}

id objc_msgSend__onSerialQueue_reconnectToOutputDevice_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onSerialQueue_reconnectToOutputDevice:queue:completion:");
}

id objc_msgSend__onSerialQueue_reevaluateActiveEndpoint_event_changeType_eventReason_clientBundleIdentifier_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "_onSerialQueue_reevaluateActiveEndpoint:event:changeType:eventReason:clientBundleIdentifier:");
}

id objc_msgSend__onSerialQueue_reevaluateActiveEndpoint_event_eventReason_clientBundleIdentifier_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onSerialQueue_reevaluateActiveEndpoint:event:eventReason:clientBundleIdentifier:");
}

id objc_msgSend__onSerialQueue_reevaluateVolumeControlCapabilitiesForEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onSerialQueue_reevaluateVolumeControlCapabilitiesForEndpoint:");
}

id objc_msgSend__onSerialQueue_restoreElectedPlayer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onSerialQueue_restoreElectedPlayer");
}

id objc_msgSend__onSerialQueue_updateSystemEndpoint_event_eventReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onSerialQueue_updateSystemEndpoint:event:eventReason:");
}

id objc_msgSend__onSyncSelf_calculateElectedPlayerForOriginClient_event_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onSyncSelf_calculateElectedPlayerForOriginClient:event:reason:");
}

id objc_msgSend__onSyncSelf_maybeSetupPlaybackTimeoutTimerForEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onSyncSelf_maybeSetupPlaybackTimeoutTimerForEvent:");
}

id objc_msgSend__onSyncSelf_reevaluateElectedPlayerForEvent_withReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onSyncSelf_reevaluateElectedPlayerForEvent:withReason:");
}

id objc_msgSend__onWorkerQueue_connectRemoteControlChannelForDestination_session_userInfo_completion_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onWorkerQueue_connectRemoteControlChannelForDestination:session:userInfo:completion:");
}

id objc_msgSend__onWorkerQueue_connectRemoteControlChannelForSource_destination_destinationGroupUID_session_name_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "_onWorkerQueue_connectRemoteControlChannelForSource:destination:destinationGroupUID:session:name:");
}

id objc_msgSend__onWorkerQueue_connectWithOptions_isRetry_userInfo_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onWorkerQueue_connectWithOptions:isRetry:userInfo:completion:");
}

id objc_msgSend__onWorkerQueue_createClientConnectionWithTransport_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onWorkerQueue_createClientConnectionWithTransport:");
}

id objc_msgSend__onWorkerQueue_disconnect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onWorkerQueue_disconnect:");
}

id objc_msgSend__onWorkerQueue_disconnectAllRemoteControlChannelsWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onWorkerQueue_disconnectAllRemoteControlChannelsWithError:");
}

id objc_msgSend__onWorkerQueue_disconnectDiscoveryChannel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onWorkerQueue_disconnectDiscoveryChannel");
}

id objc_msgSend__onWorkerQueue_disconnectRemoteControlChannelsForDestination_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onWorkerQueue_disconnectRemoteControlChannelsForDestination:error:");
}

id objc_msgSend__onWorkerQueue_disconnectRemoteControlChannelsWithError_predicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onWorkerQueue_disconnectRemoteControlChannelsWithError:predicate:");
}

id objc_msgSend__onWorkerQueue_initializeConnectionWithOptions_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onWorkerQueue_initializeConnectionWithOptions:userInfo:");
}

id objc_msgSend__onWorkerQueue_loadDeviceInfoWithUserInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onWorkerQueue_loadDeviceInfoWithUserInfo:");
}

id objc_msgSend__onWorkerQueue_maybeRetargetActiveOutputDeviceUIDForNativeOrAirPlayback_fromCurrentActiveEndpoint_withLocalDeviceInfo_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "_onWorkerQueue_maybeRetargetActiveOutputDeviceUIDForNativeOrAirPlayback:fromCurrentActiveEndpoint:withLocalDeviceInfo:");
}

id objc_msgSend__onWorkerQueue_maybeRetargetActiveOutputDeviceUIDForRemoteEndpointChanges_fromCurrentActiveEndpoint_withDeviceInfo_previousDeviceInfo_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "_onWorkerQueue_maybeRetargetActiveOutputDeviceUIDForRemoteEndpointChanges:fromCurrentActiveEndpoint:withDevic eInfo:previousDeviceInfo:");
}

id objc_msgSend__onWorkerQueue_reRegisterCustomOriginWithUserInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onWorkerQueue_reRegisterCustomOriginWithUserInfo:");
}

id objc_msgSend__onWorkerQueue_registerCustomOriginWithUserInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onWorkerQueue_registerCustomOriginWithUserInfo:");
}

id objc_msgSend__onWorkerQueue_sendBatchedMessages(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onWorkerQueue_sendBatchedMessages");
}

id objc_msgSend__onWorkerQueue_sendEndpoint_toClient_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onWorkerQueue_sendEndpoint:toClient:options:");
}

id objc_msgSend__onWorkerQueue_syncClientStateWithUserInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onWorkerQueue_syncClientStateWithUserInfo:");
}

id objc_msgSend__openDatabase(void *a1, const char *a2, ...)
{
  return _[a1 _openDatabase];
}

id objc_msgSend__optionsDictionary(void *a1, const char *a2, ...)
{
  return _[a1 _optionsDictionary];
}

id objc_msgSend__origin_client_matchesSubscribedPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_origin:client:matchesSubscribedPlayerPath:");
}

id objc_msgSend__origin_client_player_matchesSubscribedPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_origin:client:player:matchesSubscribedPlayerPath:");
}

id objc_msgSend__origin_matchesSubscribedPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_origin:matchesSubscribedPlayerPath:");
}

id objc_msgSend__passwordDialogForRouteWithName_usingInputType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_passwordDialogForRouteWithName:usingInputType:");
}

id objc_msgSend__pauseOutputDeviceUIDs_details_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pauseOutputDeviceUIDs:details:queue:completion:");
}

id objc_msgSend__pausePredicatedRoutesSync(void *a1, const char *a2, ...)
{
  return _[a1 _pausePredicatedRoutesSync];
}

id objc_msgSend__performCommandProcessingAfterSend_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performCommandProcessingAfterSend:");
}

id objc_msgSend__performOperation_details_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performOperation:details:completion:");
}

id objc_msgSend__persistConnectionRecordsToDisk(void *a1, const char *a2, ...)
{
  return _[a1 _persistConnectionRecordsToDisk];
}

id objc_msgSend__persistPlaybackSessionAndUpdateOptionsForSessionPreloadCommand_forClient_error_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_persistPlaybackSessionAndUpdateOptionsForSessionPreloadCommand:forClient:error:");
}

id objc_msgSend__pineboardHangdogInterface(void *a1, const char *a2, ...)
{
  return _[a1 _pineboardHangdogInterface];
}

id objc_msgSend__pineboardInterface(void *a1, const char *a2, ...)
{
  return _[a1 _pineboardInterface];
}

id objc_msgSend__platformHasNativeMuteSupport(void *a1, const char *a2, ...)
{
  return _[a1 _platformHasNativeMuteSupport];
}

id objc_msgSend__playerPath_matchesSubscribedPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_playerPath:matchesSubscribedPlayerPath:");
}

id objc_msgSend__playerPathForNowPlayingClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_playerPathForNowPlayingClient:");
}

id objc_msgSend__popNowPlayingAppStack(void *a1, const char *a2, ...)
{
  return _[a1 _popNowPlayingAppStack];
}

id objc_msgSend__populateApplicationSpecificDataForPrepareForSetQueueCommand_forClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_populateApplicationSpecificDataForPrepareForSetQueueCommand:forClient:");
}

id objc_msgSend__postAppActivityNotificationNamed_withActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_postAppActivityNotificationNamed:withActivity:");
}

id objc_msgSend__postNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_postNotification:");
}

id objc_msgSend__postRouteStatusDidChangeNotificationForRoute_newStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_postRouteStatusDidChangeNotificationForRoute:newStatus:");
}

id objc_msgSend__predictGroupLeaderForOutputDeviceIDs_options_details_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_predictGroupLeaderForOutputDeviceIDs:options:details:");
}

id objc_msgSend__preferredIdentifierForMACAddress_identifier_name_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_preferredIdentifierForMACAddress:identifier:name:");
}

id objc_msgSend__presentDialogWithTitle_message_defaultButtonTitle_alternateButtonTitle_completion_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentDialogWithTitle:message:defaultButtonTitle:alternateButtonTitle:completion:");
}

id objc_msgSend__presentPasswordDialogForRoute_withOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentPasswordDialogForRoute:withOptions:");
}

id objc_msgSend__prewarmMediaApps(void *a1, const char *a2, ...)
{
  return _[a1 _prewarmMediaApps];
}

id objc_msgSend__processCanMigrateToLocalEndpointEvent_timestamp_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_processCanMigrateToLocalEndpointEvent:timestamp:error:");
}

id objc_msgSend__processDiscoveryObserverChanges(void *a1, const char *a2, ...)
{
  return _[a1 _processDiscoveryObserverChanges];
}

id objc_msgSend__pruneCache(void *a1, const char *a2, ...)
{
  return _[a1 _pruneCache];
}

id objc_msgSend__query_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_query:");
}

id objc_msgSend__readConnectionRecordsFromDisk(void *a1, const char *a2, ...)
{
  return _[a1 _readConnectionRecordsFromDisk];
}

id objc_msgSend__readDeviceInfo(void *a1, const char *a2, ...)
{
  return _[a1 _readDeviceInfo];
}

id objc_msgSend__readLegacyDeviceInfoIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 _readLegacyDeviceInfoIdentifier];
}

id objc_msgSend__reevaluateCanBeNowPlaying(void *a1, const char *a2, ...)
{
  return _[a1 _reevaluateCanBeNowPlaying];
}

id objc_msgSend__reevaluateClusterLeaderConnectionWithDeviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_reevaluateClusterLeaderConnectionWithDeviceInfo:");
}

id objc_msgSend__reevaluateDeviceInfo(void *a1, const char *a2, ...)
{
  return _[a1 _reevaluateDeviceInfo];
}

id objc_msgSend__reevaluateEffectiveDiscoveryMode(void *a1, const char *a2, ...)
{
  return _[a1 _reevaluateEffectiveDiscoveryMode];
}

id objc_msgSend__reevaluateGroupLeaderConnectionWithDeviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_reevaluateGroupLeaderConnectionWithDeviceInfo:");
}

id objc_msgSend__reevaluatePredictedRoutes(void *a1, const char *a2, ...)
{
  return _[a1 _reevaluatePredictedRoutes];
}

id objc_msgSend__reevaluateSecondaryConnectionWithDeviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_reevaluateSecondaryConnectionWithDeviceInfo:");
}

id objc_msgSend__reevaluateWithEndpoint_deviceInfo_previousDeviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_reevaluateWithEndpoint:deviceInfo:previousDeviceInfo:");
}

id objc_msgSend__reevaluateWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_reevaluateWithReason:");
}

id objc_msgSend__refreshActiveSystemEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_refreshActiveSystemEndpoint:");
}

id objc_msgSend__registerAVSystemControllerNotifications(void *a1, const char *a2, ...)
{
  return _[a1 _registerAVSystemControllerNotifications];
}

id objc_msgSend__registerCallbacks(void *a1, const char *a2, ...)
{
  return _[a1 _registerCallbacks];
}

id objc_msgSend__registerCompanionLinkHandlers(void *a1, const char *a2, ...)
{
  return _[a1 _registerCompanionLinkHandlers];
}

id objc_msgSend__registerNotifications(void *a1, const char *a2, ...)
{
  return _[a1 _registerNotifications];
}

id objc_msgSend__relaunch(void *a1, const char *a2, ...)
{
  return _[a1 _relaunch];
}

id objc_msgSend__relayMessage_toClientWithBundleIDAndReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_relayMessage:toClientWithBundleIDAndReply:");
}

id objc_msgSend__relayXPCMessage_andReply_resultCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_relayXPCMessage:andReply:resultCallback:");
}

id objc_msgSend__reloadEndpoint(void *a1, const char *a2, ...)
{
  return _[a1 _reloadEndpoint];
}

id objc_msgSend__reloadHostedExternalDeviceCallbacks(void *a1, const char *a2, ...)
{
  return _[a1 _reloadHostedExternalDeviceCallbacks];
}

id objc_msgSend__reloadHostedExternalDeviceNotifications(void *a1, const char *a2, ...)
{
  return _[a1 _reloadHostedExternalDeviceNotifications];
}

id objc_msgSend__reloadHostedExternalDeviceSubscribedPlayerPaths(void *a1, const char *a2, ...)
{
  return _[a1 _reloadHostedExternalDeviceSubscribedPlayerPaths];
}

id objc_msgSend__reloadOutputDevices(void *a1, const char *a2, ...)
{
  return _[a1 _reloadOutputDevices];
}

id objc_msgSend__reloadVolumeDataWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_reloadVolumeDataWithReason:");
}

id objc_msgSend__remoteControlContextForCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_remoteControlContextForCommand:");
}

id objc_msgSend__removeAuthorizationCallbackForOutputDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeAuthorizationCallbackForOutputDevice:");
}

id objc_msgSend__removeClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeClient:");
}

id objc_msgSend__removeExternalDeviceWithEndpointIdentifier_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeExternalDeviceWithEndpointIdentifier:error:");
}

id objc_msgSend__removeNowPlayingClient_forOrigin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeNowPlayingClient:forOrigin:");
}

id objc_msgSend__removeNowPlayingNotifications(void *a1, const char *a2, ...)
{
  return _[a1 _removeNowPlayingNotifications];
}

id objc_msgSend__reportStreamCountAnalytics(void *a1, const char *a2, ...)
{
  return _[a1 _reportStreamCountAnalytics];
}

id objc_msgSend__requiresConnectionToUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_requiresConnectionToUpdate:");
}

id objc_msgSend__requiresPlaybackToUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_requiresPlaybackToUpdate:");
}

id objc_msgSend__resetPersistedConnections(void *a1, const char *a2, ...)
{
  return _[a1 _resetPersistedConnections];
}

id objc_msgSend__resolveChangeTypeWithOriginClient_forEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resolveChangeTypeWithOriginClient:forEvent:");
}

id objc_msgSend__resolveCommandBeforeSend_toClient_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resolveCommandBeforeSend:toClient:error:");
}

id objc_msgSend__resolveOutputDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resolveOutputDevices:");
}

id objc_msgSend__resolveReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resolveReason:");
}

id objc_msgSend__resolveReason_uid_name_requestID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resolveReason:uid:name:requestID:");
}

id objc_msgSend__resolveRequest_withCapabilities_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resolveRequest:withCapabilities:");
}

id objc_msgSend__resolvedLocalDeviceDestinationAppDisplayIdentifierForCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resolvedLocalDeviceDestinationAppDisplayIdentifierForCommand:");
}

id objc_msgSend__restoreNowPlayingClientState(void *a1, const char *a2, ...)
{
  return _[a1 _restoreNowPlayingClientState];
}

id objc_msgSend__resumeConnectionWithState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resumeConnectionWithState:");
}

id objc_msgSend__saveMostRecentlyPicked(void *a1, const char *a2, ...)
{
  return _[a1 _saveMostRecentlyPicked];
}

id objc_msgSend__savedPasswordForOutputDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_savedPasswordForOutputDevice:");
}

id objc_msgSend__scheduleAvailableOutputDevicesReload(void *a1, const char *a2, ...)
{
  return _[a1 _scheduleAvailableOutputDevicesReload];
}

id objc_msgSend__scheduleEndProcessAssertionForClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_scheduleEndProcessAssertionForClient:");
}

id objc_msgSend__searchForBuddyLeaderWithTimeout_details_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_searchForBuddyLeaderWithTimeout:details:completion:");
}

id objc_msgSend__searchForContextUID_timeout_details_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_searchForContextUID:timeout:details:completion:");
}

id objc_msgSend__searchForGroupUID_timeout_details_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_searchForGroupUID:timeout:details:completion:");
}

id objc_msgSend__sendClientMessage_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendClientMessage:completion:");
}

id objc_msgSend__sendCommand_withOptions_toEachEndpointContainingOutputDeviceUIDs_timeout_details_completion_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "_sendCommand:withOptions:toEachEndpointContainingOutputDeviceUIDs:timeout:details:completion:");
}

id objc_msgSend__sendCommand_withOptions_toNewEndpointContainingOutputDeviceUIDs_playerPath_timeout_details_completion_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "_sendCommand:withOptions:toNewEndpointContainingOutputDeviceUIDs:playerPath:timeout:details:completion:");
}

id objc_msgSend__sendCommandPreview_options_playerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendCommandPreview:options:playerPath:");
}

id objc_msgSend__sendEndpoint_toClient_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendEndpoint:toClient:options:");
}

id objc_msgSend__sendExternalCommand_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendExternalCommand:withCompletionHandler:");
}

id objc_msgSend__sendInitiatePlaybackMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendInitiatePlaybackMessage:");
}

id objc_msgSend__sendLocalCommand_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendLocalCommand:withCompletionHandler:");
}

id objc_msgSend__sendMediaRemoteCommand_withOrigin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendMediaRemoteCommand:withOrigin:");
}

id objc_msgSend__sendMessage_device_type_destination_session_options_priority_replyID_response_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendMessage:device:type:destination:session:options:priority:replyID:response:");
}

id objc_msgSend__sendMessageForPlayerPath_timeout_reason_factory_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendMessageForPlayerPath:timeout:reason:factory:completion:");
}

id objc_msgSend__sendMessageFromEndpoint_outputDevice_withSource_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendMessageFromEndpoint:outputDevice:withSource:handler:");
}

id objc_msgSend__sendMessageFromEndpoint_withSource_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendMessageFromEndpoint:withSource:handler:");
}

id objc_msgSend__sendQueuedBeginLoadingMessagesForAvailableApp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendQueuedBeginLoadingMessagesForAvailableApp:");
}

id objc_msgSend__sendQueuedCommandsForDestinationClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendQueuedCommandsForDestinationClient:");
}

id objc_msgSend__sendRemoteControlCommand_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendRemoteControlCommand:completion:");
}

id objc_msgSend__sendRemoteControlCommand_toDestinationClient_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendRemoteControlCommand:toDestinationClient:withCompletion:");
}

id objc_msgSend__sendRemoteControlCommand_toDestinationClient_withLegacyCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendRemoteControlCommand:toDestinationClient:withLegacyCompletion:");
}

id objc_msgSend__sendStateUpdateMessageFromOrigin_source_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendStateUpdateMessageFromOrigin:source:handler:");
}

id objc_msgSend__sendStateUpdateMessageFromPlayerPath_source_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendStateUpdateMessageFromPlayerPath:source:handler:");
}

id objc_msgSend__setApplicationPickedRoutes_updateRoutes_forClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setApplicationPickedRoutes:updateRoutes:forClient:");
}

id objc_msgSend__setCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setCompletionHandler:");
}

id objc_msgSend__setEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setEndpoint:");
}

id objc_msgSend__setGameControllerInputMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setGameControllerInputMode:");
}

id objc_msgSend__setPickedRoute_withPassword_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setPickedRoute:withPassword:options:");
}

id objc_msgSend__setQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setQueue:");
}

id objc_msgSend__setupNotifications(void *a1, const char *a2, ...)
{
  return _[a1 _setupNotifications];
}

id objc_msgSend__setupStandaloneDiscovery(void *a1, const char *a2, ...)
{
  return _[a1 _setupStandaloneDiscovery];
}

id objc_msgSend__shouldAttemptToDiscoverAndConnectToCompanion(void *a1, const char *a2, ...)
{
  return _[a1 _shouldAttemptToDiscoverAndConnectToCompanion];
}

id objc_msgSend__shouldCommitLocalDeviceWithReason_deviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldCommitLocalDeviceWithReason:deviceInfo:");
}

id objc_msgSend__shouldCreateClusterOutputDevices(void *a1, const char *a2, ...)
{
  return _[a1 _shouldCreateClusterOutputDevices];
}

id objc_msgSend__shouldHandleNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldHandleNotification:");
}

id objc_msgSend__shouldIgnoreCommand_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldIgnoreCommand:completion:");
}

id objc_msgSend__shouldIgnorePortStatusFailureForRouteWithUID_previouslyCachedRouteUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldIgnorePortStatusFailureForRouteWithUID:previouslyCachedRouteUID:");
}

id objc_msgSend__shouldNotifyChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldNotifyChange:");
}

id objc_msgSend__shouldRemoveLocalDeviceWithReason_deviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldRemoveLocalDeviceWithReason:deviceInfo:");
}

id objc_msgSend__shouldSendCompanionLinkMessage(void *a1, const char *a2, ...)
{
  return _[a1 _shouldSendCompanionLinkMessage];
}

id objc_msgSend__shouldSendStateUpdateMessageFromSource_toClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldSendStateUpdateMessageFromSource:toClient:");
}

id objc_msgSend__shouldUseNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldUseNotification:");
}

id objc_msgSend__sortNativeGroupToEnd_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sortNativeGroupToEnd:");
}

id objc_msgSend__sortSnapshots_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sortSnapshots:");
}

id objc_msgSend__startObservingNotifications(void *a1, const char *a2, ...)
{
  return _[a1 _startObservingNotifications];
}

id objc_msgSend__stateFromDataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_stateFromDataSource:");
}

id objc_msgSend__stopObservingNotifications(void *a1, const char *a2, ...)
{
  return _[a1 _stopObservingNotifications];
}

id objc_msgSend__storePassword_forOutputDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_storePassword:forOutputDevice:");
}

id objc_msgSend__storePassword_forRoute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_storePassword:forRoute:");
}

id objc_msgSend__storeRecentlyDismissedRecommendationForOutputDeviceUID_disableDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_storeRecentlyDismissedRecommendationForOutputDeviceUID:disableDuration:");
}

id objc_msgSend__submitLaunchFailure(void *a1, const char *a2, ...)
{
  return _[a1 _submitLaunchFailure];
}

id objc_msgSend__submitRelaunchEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_submitRelaunchEvent:");
}

id objc_msgSend__submitTerminationEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_submitTerminationEvent:");
}

id objc_msgSend__syncClientStateToConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_syncClientStateToConnection:");
}

id objc_msgSend__syncStateToClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_syncStateToClient:");
}

id objc_msgSend__synchronized_setSessionUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_synchronized_setSessionUID:");
}

id objc_msgSend__takeProcessAssertionForClient_withReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_takeProcessAssertionForClient:withReason:");
}

id objc_msgSend__tearDownNotifications(void *a1, const char *a2, ...)
{
  return _[a1 _tearDownNotifications];
}

id objc_msgSend__textEditingDidEndForConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_textEditingDidEndForConnection:");
}

id objc_msgSend__tombstoneHostedExternalDevice_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_tombstoneHostedExternalDevice:error:");
}

id objc_msgSend__transactionEnded(void *a1, const char *a2, ...)
{
  return _[a1 _transactionEnded];
}

id objc_msgSend__txtDataChanged(void *a1, const char *a2, ...)
{
  return _[a1 _txtDataChanged];
}

id objc_msgSend__txtDataChangedWithDeviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_txtDataChangedWithDeviceInfo:");
}

id objc_msgSend__txtDataChangedWithUserInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_txtDataChangedWithUserInfo:");
}

id objc_msgSend__unpair_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_unpair:");
}

id objc_msgSend__unregisterAVSystemControllerNotifications(void *a1, const char *a2, ...)
{
  return _[a1 _unregisterAVSystemControllerNotifications];
}

id objc_msgSend__unregisterNotifications(void *a1, const char *a2, ...)
{
  return _[a1 _unregisterNotifications];
}

id objc_msgSend__updateAllowedDestinations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateAllowedDestinations:");
}

id objc_msgSend__updateCapabilitiesValueCache(void *a1, const char *a2, ...)
{
  return _[a1 _updateCapabilitiesValueCache];
}

id objc_msgSend__updateIsMutedValueCache(void *a1, const char *a2, ...)
{
  return _[a1 _updateIsMutedValueCache];
}

id objc_msgSend__updateNowPlayingAudioFormatContentInfo(void *a1, const char *a2, ...)
{
  return _[a1 _updateNowPlayingAudioFormatContentInfo];
}

id objc_msgSend__updateSystemRouteDiscoveryMode(void *a1, const char *a2, ...)
{
  return _[a1 _updateSystemRouteDiscoveryMode];
}

id objc_msgSend__updateTransaction(void *a1, const char *a2, ...)
{
  return _[a1 _updateTransaction];
}

id objc_msgSend__updateVolumeValueCache(void *a1, const char *a2, ...)
{
  return _[a1 _updateVolumeValueCache];
}

id objc_msgSend__validate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_validate:");
}

id objc_msgSend__validateAuditTokens_pids_auditTokens_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_validateAuditTokens:pids:auditTokens:");
}

id objc_msgSend__validateDatabase(void *a1, const char *a2, ...)
{
  return _[a1 _validateDatabase];
}

id objc_msgSend__verifyClientVersionCompatibility_withError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_verifyClientVersionCompatibility:withError:");
}

id objc_msgSend__volumeFromAVController(void *a1, const char *a2, ...)
{
  return _[a1 _volumeFromAVController];
}

id objc_msgSend__wantsLibraryCommands(void *a1, const char *a2, ...)
{
  return _[a1 _wantsLibraryCommands];
}

id objc_msgSend__willStartingPlaybackToOutputDevicesInterrupt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_willStartingPlaybackToOutputDevicesInterrupt:");
}

id objc_msgSend__workerQueue(void *a1, const char *a2, ...)
{
  return _[a1 _workerQueue];
}

id objc_msgSend__writeConnectionRecordsToDisk_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_writeConnectionRecordsToDisk:");
}

id objc_msgSend__writeDeviceInfo_toPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_writeDeviceInfo:toPath:");
}

id objc_msgSend__writeSystemEndpointInfo_recentlyDismissedRecommendationsInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_writeSystemEndpointInfo:recentlyDismissedRecommendationsInfo:");
}

id objc_msgSend_absoluteString(void *a1, const char *a2, ...)
{
  return _[a1 absoluteString];
}

id objc_msgSend_accountRegisteredURIs(void *a1, const char *a2, ...)
{
  return _[a1 accountRegisteredURIs];
}

id objc_msgSend_accountType(void *a1, const char *a2, ...)
{
  return _[a1 accountType];
}

id objc_msgSend_accounts(void *a1, const char *a2, ...)
{
  return _[a1 accounts];
}

id objc_msgSend_acknowledgeSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "acknowledgeSession:");
}

id objc_msgSend_acquireContentProviderAssertionForType_slot_identifier_errorHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "acquireContentProviderAssertionForType:slot:identifier:errorHandler:");
}

id objc_msgSend_acquireGroupSessionLowPowerPlatterAssertionWithReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "acquireGroupSessionLowPowerPlatterAssertionWithReply:");
}

id objc_msgSend_acquireGroupSessionNearbyAssertionForSession_withReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "acquireGroupSessionNearbyAssertionForSession:withReply:");
}

id objc_msgSend_acquireLockScreenControlsAssertion(void *a1, const char *a2, ...)
{
  return _[a1 acquireLockScreenControlsAssertion];
}

id objc_msgSend_acquireLockScreenControlsAssertionWithReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "acquireLockScreenControlsAssertionWithReply:");
}

id objc_msgSend_acquireQuickControlsAssertionWithReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "acquireQuickControlsAssertionWithReply:");
}

id objc_msgSend_acquireRouteRecommendationAssertionForIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "acquireRouteRecommendationAssertionForIdentifiers:");
}

id objc_msgSend_acquireRouteRecommendationAssertionForIdentifiers_withReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "acquireRouteRecommendationAssertionForIdentifiers:withReply:");
}

id objc_msgSend_acquireScreenMirroringQuickControlsAssertionWithReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "acquireScreenMirroringQuickControlsAssertionWithReply:");
}

id objc_msgSend_acquireWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "acquireWithError:");
}

id objc_msgSend_actionType(void *a1, const char *a2, ...)
{
  return _[a1 actionType];
}

id objc_msgSend_activate(void *a1, const char *a2, ...)
{
  return _[a1 activate];
}

id objc_msgSend_activateSiriWithContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activateSiriWithContext:");
}

id objc_msgSend_activateWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activateWithCompletion:");
}

id objc_msgSend_activateWithContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activateWithContext:");
}

id objc_msgSend_activeBannerState(void *a1, const char *a2, ...)
{
  return _[a1 activeBannerState];
}

id objc_msgSend_activeConnection(void *a1, const char *a2, ...)
{
  return _[a1 activeConnection];
}

id objc_msgSend_activeContent(void *a1, const char *a2, ...)
{
  return _[a1 activeContent];
}

id objc_msgSend_activeDialog(void *a1, const char *a2, ...)
{
  return _[a1 activeDialog];
}

id objc_msgSend_activeEndpoint(void *a1, const char *a2, ...)
{
  return _[a1 activeEndpoint];
}

id objc_msgSend_activeNowPlayingClient(void *a1, const char *a2, ...)
{
  return _[a1 activeNowPlayingClient];
}

id objc_msgSend_activeOriginClient(void *a1, const char *a2, ...)
{
  return _[a1 activeOriginClient];
}

id objc_msgSend_activeOutputContexts(void *a1, const char *a2, ...)
{
  return _[a1 activeOutputContexts];
}

id objc_msgSend_activeOutputDeviceUID(void *a1, const char *a2, ...)
{
  return _[a1 activeOutputDeviceUID];
}

id objc_msgSend_activeOutputDeviceUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activeOutputDeviceUID:");
}

id objc_msgSend_activePasswordDialog(void *a1, const char *a2, ...)
{
  return _[a1 activePasswordDialog];
}

id objc_msgSend_activePillBannerState(void *a1, const char *a2, ...)
{
  return _[a1 activePillBannerState];
}

id objc_msgSend_activePillRequest(void *a1, const char *a2, ...)
{
  return _[a1 activePillRequest];
}

id objc_msgSend_activePlayerClient(void *a1, const char *a2, ...)
{
  return _[a1 activePlayerClient];
}

id objc_msgSend_activePlayerClients(void *a1, const char *a2, ...)
{
  return _[a1 activePlayerClients];
}

id objc_msgSend_activePlayerIsPlaying(void *a1, const char *a2, ...)
{
  return _[a1 activePlayerIsPlaying];
}

id objc_msgSend_activePlayerPath(void *a1, const char *a2, ...)
{
  return _[a1 activePlayerPath];
}

id objc_msgSend_activeRecommendationActivities(void *a1, const char *a2, ...)
{
  return _[a1 activeRecommendationActivities];
}

id objc_msgSend_activeRequest(void *a1, const char *a2, ...)
{
  return _[a1 activeRequest];
}

id objc_msgSend_activeSessionDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activeSessionDidChange:");
}

id objc_msgSend_activeStreamCount(void *a1, const char *a2, ...)
{
  return _[a1 activeStreamCount];
}

id objc_msgSend_activeSystemEndpoint(void *a1, const char *a2, ...)
{
  return _[a1 activeSystemEndpoint];
}

id objc_msgSend_activeSystemEndpointLock(void *a1, const char *a2, ...)
{
  return _[a1 activeSystemEndpointLock];
}

id objc_msgSend_activeSystemEndpointOutputDeviceUID(void *a1, const char *a2, ...)
{
  return _[a1 activeSystemEndpointOutputDeviceUID];
}

id objc_msgSend_activeSystemEndpointStartupDelayToAllowAllPreviousClientsTimeToInitializeInterval( void *a1, const char *a2, ...)
{
  return _[a1 activeSystemEndpointStartupDelayToAllowAllPreviousClientsTimeToInitializeInterval];
}

id objc_msgSend_activeSystemEndpointUID(void *a1, const char *a2, ...)
{
  return _[a1 activeSystemEndpointUID];
}

id objc_msgSend_activeTelevisionRouteID(void *a1, const char *a2, ...)
{
  return _[a1 activeTelevisionRouteID];
}

id objc_msgSend_activeTopologyChangeIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 activeTopologyChangeIdentifiers];
}

id objc_msgSend_activeUserController(void *a1, const char *a2, ...)
{
  return _[a1 activeUserController];
}

id objc_msgSend_activeUserState(void *a1, const char *a2, ...)
{
  return _[a1 activeUserState];
}

id objc_msgSend_activeUserTimeoutInterval(void *a1, const char *a2, ...)
{
  return _[a1 activeUserTimeoutInterval];
}

id objc_msgSend_activity(void *a1, const char *a2, ...)
{
  return _[a1 activity];
}

id objc_msgSend_activityController(void *a1, const char *a2, ...)
{
  return _[a1 activityController];
}

id objc_msgSend_activityServer(void *a1, const char *a2, ...)
{
  return _[a1 activityServer];
}

id objc_msgSend_addArtworkFromItem_fromRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addArtworkFromItem:fromRequest:");
}

id objc_msgSend_addAuthorizationCallbackForOutputDevice_callback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAuthorizationCallbackForOutputDevice:callback:");
}

id objc_msgSend_addAuthorizationCallbackForOutputDevice_client_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAuthorizationCallbackForOutputDevice:client:");
}

id objc_msgSend_addAuthorizationCallbackForRouteID_requestCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAuthorizationCallbackForRouteID:requestCallback:");
}

id objc_msgSend_addCachedAudioSession_forID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addCachedAudioSession:forID:");
}

id objc_msgSend_addChannel_forDestination_session_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addChannel:forDestination:session:");
}

id objc_msgSend_addClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addClient:");
}

id objc_msgSend_addClientObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addClientObserver:");
}

id objc_msgSend_addDataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addDataSource:");
}

id objc_msgSend_addDelegate_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addDelegate:queue:");
}

id objc_msgSend_addDelegate_withDelegateProperties_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addDelegate:withDelegateProperties:queue:");
}

id objc_msgSend_addEndpointsAddedCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addEndpointsAddedCallback:");
}

id objc_msgSend_addEndpointsChangedCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addEndpointsChangedCallback:");
}

id objc_msgSend_addEndpointsModifiedCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addEndpointsModifiedCallback:");
}

id objc_msgSend_addEntriesFromDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addEntriesFromDictionary:");
}

id objc_msgSend_addEvent_forCandidate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addEvent:forCandidate:");
}

id objc_msgSend_addEvent_forRouteCandidate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addEvent:forRouteCandidate:");
}

id objc_msgSend_addGameController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addGameController:");
}

id objc_msgSend_addHandlerForRouteUID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addHandlerForRouteUID:completion:");
}

id objc_msgSend_addHandlerReturnStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addHandlerReturnStatus:");
}

id objc_msgSend_addHostedExternalDevice_endpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addHostedExternalDevice:endpoint:");
}

id objc_msgSend_addLocalDevice(void *a1, const char *a2, ...)
{
  return _[a1 addLocalDevice];
}

id objc_msgSend_addLyricsEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addLyricsEvent:");
}

id objc_msgSend_addMediaRemoteSeverStartedHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addMediaRemoteSeverStartedHandler:");
}

id objc_msgSend_addMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addMessage:");
}

id objc_msgSend_addMessageHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addMessageHandler:");
}

id objc_msgSend_addObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObject:");
}

id objc_msgSend_addObjectsFromArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObjectsFromArray:");
}

id objc_msgSend_addObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:");
}

id objc_msgSend_addObserver_forKeyPath_options_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:forKeyPath:options:context:");
}

id objc_msgSend_addObserver_selector_name_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:selector:name:object:");
}

id objc_msgSend_addObserver_selector_name_object_suspensionBehavior_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:selector:name:object:suspensionBehavior:");
}

id objc_msgSend_addObserverForName_object_queue_usingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserverForName:object:queue:usingBlock:");
}

id objc_msgSend_addOperation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addOperation:");
}

id objc_msgSend_addOperationWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addOperationWithBlock:");
}

id objc_msgSend_addOutputDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addOutputDevice:");
}

id objc_msgSend_addOutputDevice_options_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addOutputDevice:options:completionHandler:");
}

id objc_msgSend_addOutputDevices_initiator_withReplyQueue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addOutputDevices:initiator:withReplyQueue:completion:");
}

id objc_msgSend_addOutputDevicesChangedCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addOutputDevicesChangedCallback:");
}

id objc_msgSend_addPendingParticipant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addPendingParticipant:");
}

id objc_msgSend_addPendingPlaybackSessionMigrateEvent_playerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addPendingPlaybackSessionMigrateEvent:playerPath:");
}

id objc_msgSend_addRegisteredVirtualVoiceInputDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addRegisteredVirtualVoiceInputDevice:");
}

id objc_msgSend_addRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addRequest:");
}

id objc_msgSend_addRoutedCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addRoutedCommand:");
}

id objc_msgSend_addSharedAudioOutputContext(void *a1, const char *a2, ...)
{
  return _[a1 addSharedAudioOutputContext];
}

id objc_msgSend_addTextField_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addTextField:");
}

id objc_msgSend_addVirtualTouchDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addVirtualTouchDevice:");
}

id objc_msgSend_addVolumeEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addVolumeEvent:");
}

id objc_msgSend_addedOutputDevices(void *a1, const char *a2, ...)
{
  return _[a1 addedOutputDevices];
}

id objc_msgSend_addingOutputDeviceUIDs(void *a1, const char *a2, ...)
{
  return _[a1 addingOutputDeviceUIDs];
}

id objc_msgSend_adjustMemory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adjustMemory:");
}

id objc_msgSend_adjustOutputDeviceVolume_outputDevice_details_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adjustOutputDeviceVolume:outputDevice:details:queue:completion:");
}

id objc_msgSend_adjustOutputDeviceVolume_outputDeviceUID_details_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adjustOutputDeviceVolume:outputDeviceUID:details:queue:completion:");
}

id objc_msgSend_adjustRelativeVolumeLevel_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adjustRelativeVolumeLevel:error:");
}

id objc_msgSend_adjustVolume_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adjustVolume:error:");
}

id objc_msgSend_adjustVolume_outputDeviceUID_details_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adjustVolume:outputDeviceUID:details:");
}

id objc_msgSend_adjustVolumeWithStepAmount_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adjustVolumeWithStepAmount:error:");
}

id objc_msgSend_adjustment(void *a1, const char *a2, ...)
{
  return _[a1 adjustment];
}

id objc_msgSend_advertiser(void *a1, const char *a2, ...)
{
  return _[a1 advertiser];
}

id objc_msgSend_advertisingPreferenceEnabled(void *a1, const char *a2, ...)
{
  return _[a1 advertisingPreferenceEnabled];
}

id objc_msgSend_airPlayGroupID(void *a1, const char *a2, ...)
{
  return _[a1 airPlayGroupID];
}

id objc_msgSend_airPlayGroupUID(void *a1, const char *a2, ...)
{
  return _[a1 airPlayGroupUID];
}

id objc_msgSend_airPlayRemoteControlService_didAcceptConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "airPlayRemoteControlService:didAcceptConnection:");
}

id objc_msgSend_airPlayService(void *a1, const char *a2, ...)
{
  return _[a1 airPlayService];
}

id objc_msgSend_airPlayTo_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "airPlayTo:completion:");
}

id objc_msgSend_airplayActive(void *a1, const char *a2, ...)
{
  return _[a1 airplayActive];
}

id objc_msgSend_alertHeader(void *a1, const char *a2, ...)
{
  return _[a1 alertHeader];
}

id objc_msgSend_alertMessage(void *a1, const char *a2, ...)
{
  return _[a1 alertMessage];
}

id objc_msgSend_allClients(void *a1, const char *a2, ...)
{
  return _[a1 allClients];
}

id objc_msgSend_allClusterMembersOutputDevices(void *a1, const char *a2, ...)
{
  return _[a1 allClusterMembersOutputDevices];
}

id objc_msgSend_allClusteredDevices(void *a1, const char *a2, ...)
{
  return _[a1 allClusteredDevices];
}

id objc_msgSend_allKeys(void *a1, const char *a2, ...)
{
  return _[a1 allKeys];
}

id objc_msgSend_allObjects(void *a1, const char *a2, ...)
{
  return _[a1 allObjects];
}

id objc_msgSend_allSharedAudioOutputContexts(void *a1, const char *a2, ...)
{
  return _[a1 allSharedAudioOutputContexts];
}

id objc_msgSend_allStreams(void *a1, const char *a2, ...)
{
  return _[a1 allStreams];
}

id objc_msgSend_allStreamsExcludingLocal(void *a1, const char *a2, ...)
{
  return _[a1 allStreamsExcludingLocal];
}

id objc_msgSend_allUserStates(void *a1, const char *a2, ...)
{
  return _[a1 allUserStates];
}

id objc_msgSend_allValues(void *a1, const char *a2, ...)
{
  return _[a1 allValues];
}

id objc_msgSend_allocWithZone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allocWithZone:");
}

id objc_msgSend_allowAllClientUIConnections(void *a1, const char *a2, ...)
{
  return _[a1 allowAllClientUIConnections];
}

id objc_msgSend_allowList(void *a1, const char *a2, ...)
{
  return _[a1 allowList];
}

id objc_msgSend_allowedAuditTokens(void *a1, const char *a2, ...)
{
  return _[a1 allowedAuditTokens];
}

id objc_msgSend_allowedContextUpdates(void *a1, const char *a2, ...)
{
  return _[a1 allowedContextUpdates];
}

id objc_msgSend_allowedDestinations(void *a1, const char *a2, ...)
{
  return _[a1 allowedDestinations];
}

id objc_msgSend_alwaysAllowUpdates(void *a1, const char *a2, ...)
{
  return _[a1 alwaysAllowUpdates];
}

id objc_msgSend_alwaysIgnoreDuringCall(void *a1, const char *a2, ...)
{
  return _[a1 alwaysIgnoreDuringCall];
}

id objc_msgSend_alwaysIgnoreDuringSharePlay(void *a1, const char *a2, ...)
{
  return _[a1 alwaysIgnoreDuringSharePlay];
}

id objc_msgSend_ambientVisible(void *a1, const char *a2, ...)
{
  return _[a1 ambientVisible];
}

id objc_msgSend_anonymousListener(void *a1, const char *a2, ...)
{
  return _[a1 anonymousListener];
}

id objc_msgSend_anyClient(void *a1, const char *a2, ...)
{
  return _[a1 anyClient];
}

id objc_msgSend_anyObject(void *a1, const char *a2, ...)
{
  return _[a1 anyObject];
}

id objc_msgSend_anyOrigin(void *a1, const char *a2, ...)
{
  return _[a1 anyOrigin];
}

id objc_msgSend_anyPlayer(void *a1, const char *a2, ...)
{
  return _[a1 anyPlayer];
}

id objc_msgSend_anyPlayerIsPlaying(void *a1, const char *a2, ...)
{
  return _[a1 anyPlayerIsPlaying];
}

id objc_msgSend_anyPlayerPath(void *a1, const char *a2, ...)
{
  return _[a1 anyPlayerPath];
}

id objc_msgSend_appIcon(void *a1, const char *a2, ...)
{
  return _[a1 appIcon];
}

id objc_msgSend_appOptions(void *a1, const char *a2, ...)
{
  return _[a1 appOptions];
}

id objc_msgSend_appState(void *a1, const char *a2, ...)
{
  return _[a1 appState];
}

id objc_msgSend_appendFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendFormat:");
}

id objc_msgSend_appendString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendString:");
}

id objc_msgSend_appletvsEffected(void *a1, const char *a2, ...)
{
  return _[a1 appletvsEffected];
}

id objc_msgSend_applicationConnections(void *a1, const char *a2, ...)
{
  return _[a1 applicationConnections];
}

id objc_msgSend_applicationIsInstalled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applicationIsInstalled:");
}

id objc_msgSend_applicationPickedRoutes(void *a1, const char *a2, ...)
{
  return _[a1 applicationPickedRoutes];
}

id objc_msgSend_applicationProxyForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applicationProxyForIdentifier:");
}

id objc_msgSend_applicationsSupportingAPIs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applicationsSupportingAPIs:");
}

id objc_msgSend_approvePendingParticipant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "approvePendingParticipant:");
}

id objc_msgSend_archivedDataWithRootObject_requiringSecureCoding_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "archivedDataWithRootObject:requiringSecureCoding:error:");
}

id objc_msgSend_array(void *a1, const char *a2, ...)
{
  return _[a1 array];
}

id objc_msgSend_arrayByAddingObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayByAddingObject:");
}

id objc_msgSend_arrayByAddingObjectsFromArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayByAddingObjectsFromArray:");
}

id objc_msgSend_arrayWithArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithArray:");
}

id objc_msgSend_arrayWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithCapacity:");
}

id objc_msgSend_arrayWithObjects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObjects:count:");
}

id objc_msgSend_artwork(void *a1, const char *a2, ...)
{
  return _[a1 artwork];
}

id objc_msgSend_artworkCacheSize(void *a1, const char *a2, ...)
{
  return _[a1 artworkCacheSize];
}

id objc_msgSend_artworkHeight(void *a1, const char *a2, ...)
{
  return _[a1 artworkHeight];
}

id objc_msgSend_artworkWidth(void *a1, const char *a2, ...)
{
  return _[a1 artworkWidth];
}

id objc_msgSend_artworks(void *a1, const char *a2, ...)
{
  return _[a1 artworks];
}

id objc_msgSend_ase(void *a1, const char *a2, ...)
{
  return _[a1 ase];
}

id objc_msgSend_aseNowPlayingController(void *a1, const char *a2, ...)
{
  return _[a1 aseNowPlayingController];
}

id objc_msgSend_assertPublicAdvertisement(void *a1, const char *a2, ...)
{
  return _[a1 assertPublicAdvertisement];
}

id objc_msgSend_assertSessionManagementScreenVisible(void *a1, const char *a2, ...)
{
  return _[a1 assertSessionManagementScreenVisible];
}

id objc_msgSend_assertionManager(void *a1, const char *a2, ...)
{
  return _[a1 assertionManager];
}

id objc_msgSend_attemptLogicalDeviceRecovery(void *a1, const char *a2, ...)
{
  return _[a1 attemptLogicalDeviceRecovery];
}

id objc_msgSend_attributeForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attributeForKey:");
}

id objc_msgSend_attributeWithDomain_name_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attributeWithDomain:name:");
}

id objc_msgSend_attributes(void *a1, const char *a2, ...)
{
  return _[a1 attributes];
}

id objc_msgSend_audioFormat(void *a1, const char *a2, ...)
{
  return _[a1 audioFormat];
}

id objc_msgSend_audioFormatContentInfoForApplication_cachedAudioFormatContentInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioFormatContentInfoForApplication:cachedAudioFormatContentInfo:");
}

id objc_msgSend_audioSessionID(void *a1, const char *a2, ...)
{
  return _[a1 audioSessionID];
}

id objc_msgSend_audioSessionType(void *a1, const char *a2, ...)
{
  return _[a1 audioSessionType];
}

id objc_msgSend_auditToken(void *a1, const char *a2, ...)
{
  return _[a1 auditToken];
}

id objc_msgSend_augmentedUserInfoForPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "augmentedUserInfoForPlayerPath:");
}

id objc_msgSend_authorizationRequestCallbackForRouteID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "authorizationRequestCallbackForRouteID:");
}

id objc_msgSend_authorizationTokenType(void *a1, const char *a2, ...)
{
  return _[a1 authorizationTokenType];
}

id objc_msgSend_autoConnectedEndpoints(void *a1, const char *a2, ...)
{
  return _[a1 autoConnectedEndpoints];
}

id objc_msgSend_autoConnectingEndpoints(void *a1, const char *a2, ...)
{
  return _[a1 autoConnectingEndpoints];
}

id objc_msgSend_automaticSharePlayPreferenceEnabled(void *a1, const char *a2, ...)
{
  return _[a1 automaticSharePlayPreferenceEnabled];
}

id objc_msgSend_auxiliaryOutputContext(void *a1, const char *a2, ...)
{
  return _[a1 auxiliaryOutputContext];
}

id objc_msgSend_avOutputContext(void *a1, const char *a2, ...)
{
  return _[a1 avOutputContext];
}

id objc_msgSend_avOutputDevice(void *a1, const char *a2, ...)
{
  return _[a1 avOutputDevice];
}

id objc_msgSend_avOutputDeviceIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 avOutputDeviceIdentifier];
}

id objc_msgSend_availableArtworkFormats(void *a1, const char *a2, ...)
{
  return _[a1 availableArtworkFormats];
}

id objc_msgSend_availableDistantEndpoints(void *a1, const char *a2, ...)
{
  return _[a1 availableDistantEndpoints];
}

id objc_msgSend_availableDistantOutputDevices(void *a1, const char *a2, ...)
{
  return _[a1 availableDistantOutputDevices];
}

id objc_msgSend_availableEndpoints(void *a1, const char *a2, ...)
{
  return _[a1 availableEndpoints];
}

id objc_msgSend_availableEndpointsDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "availableEndpointsDidChange:");
}

id objc_msgSend_availableExternalDevices(void *a1, const char *a2, ...)
{
  return _[a1 availableExternalDevices];
}

id objc_msgSend_availableOutputDevices(void *a1, const char *a2, ...)
{
  return _[a1 availableOutputDevices];
}

id objc_msgSend_availableOutputDevicesDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "availableOutputDevicesDidChange:");
}

id objc_msgSend_background(void *a1, const char *a2, ...)
{
  return _[a1 background];
}

id objc_msgSend_bannerCenter(void *a1, const char *a2, ...)
{
  return _[a1 bannerCenter];
}

id objc_msgSend_bannerControllable(void *a1, const char *a2, ...)
{
  return _[a1 bannerControllable];
}

id objc_msgSend_bannerUIControllerWithDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bannerUIControllerWithDelegate:");
}

id objc_msgSend_bannerWithIdentifier_postedEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bannerWithIdentifier:postedEvent:");
}

id objc_msgSend_bannerWithRequestIdentifier_didReceiveEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bannerWithRequestIdentifier:didReceiveEvent:");
}

id objc_msgSend_baseGroupID(void *a1, const char *a2, ...)
{
  return _[a1 baseGroupID];
}

id objc_msgSend_baseParentGroupID(void *a1, const char *a2, ...)
{
  return _[a1 baseParentGroupID];
}

id objc_msgSend_basicIdentityWithIdentifier_displayName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "basicIdentityWithIdentifier:displayName:");
}

id objc_msgSend_beginAdvertising(void *a1, const char *a2, ...)
{
  return _[a1 beginAdvertising];
}

id objc_msgSend_beginLoadingUpdates(void *a1, const char *a2, ...)
{
  return _[a1 beginLoadingUpdates];
}

id objc_msgSend_beginMusicHandoffSessionWithSource_destination_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginMusicHandoffSessionWithSource:destination:completion:");
}

id objc_msgSend_beginObservingPrivacyAcknowledgementForIdentifier_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginObservingPrivacyAcknowledgementForIdentifier:handler:");
}

id objc_msgSend_beginObservingSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginObservingSession:");
}

id objc_msgSend_beginProxyAdvertisingWithToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginProxyAdvertisingWithToken:");
}

id objc_msgSend_beginReceivingUpdatesForSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginReceivingUpdatesForSource:");
}

id objc_msgSend_beginSearchWithTimeout_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginSearchWithTimeout:completion:");
}

id objc_msgSend_beginSearchWithTimeout_endpointsCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginSearchWithTimeout:endpointsCompletion:");
}

id objc_msgSend_beginSearchWithTimeout_mapCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginSearchWithTimeout:mapCompletion:");
}

id objc_msgSend_bestAvailableContent(void *a1, const char *a2, ...)
{
  return _[a1 bestAvailableContent];
}

id objc_msgSend_bestAvailableContentForConsolidatedSourceContentInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bestAvailableContentForConsolidatedSourceContentInfo:");
}

id objc_msgSend_bestHostingStateForUserStates_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bestHostingStateForUserStates:reason:");
}

id objc_msgSend_bestRecommendationIn_primaryBundleIdentifier_eligibleToShowRecommendationsOutsideApp_completion_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "bestRecommendationIn:primaryBundleIdentifier:eligibleToShowRecommendationsOutsideApp:completion:");
}

id objc_msgSend_bestStreamToInterrupt(void *a1, const char *a2, ...)
{
  return _[a1 bestStreamToInterrupt];
}

id objc_msgSend_bluetoothAddress(void *a1, const char *a2, ...)
{
  return _[a1 bluetoothAddress];
}

id objc_msgSend_bonjourRemoteControlService_didAcceptConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bonjourRemoteControlService:didAcceptConnection:");
}

id objc_msgSend_BOOLForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "BOOLForKey:");
}

id objc_msgSend_BOOLValue(void *a1, const char *a2, ...)
{
  return _[a1 BOOLValue];
}

id objc_msgSend_broadcastCommandWaitDuration(void *a1, const char *a2, ...)
{
  return _[a1 broadcastCommandWaitDuration];
}

id objc_msgSend_broadcastRemoteControlCommand_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "broadcastRemoteControlCommand:completion:");
}

id objc_msgSend_buffer(void *a1, const char *a2, ...)
{
  return _[a1 buffer];
}

id objc_msgSend_buildVersion(void *a1, const char *a2, ...)
{
  return _[a1 buildVersion];
}

id objc_msgSend_bundle(void *a1, const char *a2, ...)
{
  return _[a1 bundle];
}

id objc_msgSend_bundleID(void *a1, const char *a2, ...)
{
  return _[a1 bundleID];
}

id objc_msgSend_bundleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 bundleIdentifier];
}

id objc_msgSend_bundleIdentifierAffinity(void *a1, const char *a2, ...)
{
  return _[a1 bundleIdentifierAffinity];
}

id objc_msgSend_bundleIdentifierPendingUpdate(void *a1, const char *a2, ...)
{
  return _[a1 bundleIdentifierPendingUpdate];
}

id objc_msgSend_bundleType(void *a1, const char *a2, ...)
{
  return _[a1 bundleType];
}

id objc_msgSend_bundleVersion(void *a1, const char *a2, ...)
{
  return _[a1 bundleVersion];
}

id objc_msgSend_bundlesInFocus(void *a1, const char *a2, ...)
{
  return _[a1 bundlesInFocus];
}

id objc_msgSend_buttonEvent(void *a1, const char *a2, ...)
{
  return _[a1 buttonEvent];
}

id objc_msgSend_buttonIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 buttonIdentifier];
}

id objc_msgSend_bytes(void *a1, const char *a2, ...)
{
  return _[a1 bytes];
}

id objc_msgSend_cachedDeviceInfoForOrigin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cachedDeviceInfoForOrigin:");
}

id objc_msgSend_cachedEligibilityOf_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cachedEligibilityOf:");
}

id objc_msgSend_cachedStateLoaded(void *a1, const char *a2, ...)
{
  return _[a1 cachedStateLoaded];
}

id objc_msgSend_cachingPolicy(void *a1, const char *a2, ...)
{
  return _[a1 cachingPolicy];
}

id objc_msgSend_callControllerWillHandleCommandForBargeCalls_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callControllerWillHandleCommandForBargeCalls:");
}

id objc_msgSend_callInvalidationHandlerWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callInvalidationHandlerWithReason:");
}

id objc_msgSend_callback(void *a1, const char *a2, ...)
{
  return _[a1 callback];
}

id objc_msgSend_calloutQueue(void *a1, const char *a2, ...)
{
  return _[a1 calloutQueue];
}

id objc_msgSend_calls(void *a1, const char *a2, ...)
{
  return _[a1 calls];
}

id objc_msgSend_canAccessAppleMusic(void *a1, const char *a2, ...)
{
  return _[a1 canAccessAppleMusic];
}

id objc_msgSend_canAccessRemoteAssets(void *a1, const char *a2, ...)
{
  return _[a1 canAccessRemoteAssets];
}

id objc_msgSend_canAccessiCloudMusicLibrary(void *a1, const char *a2, ...)
{
  return _[a1 canAccessiCloudMusicLibrary];
}

id objc_msgSend_canActivateStreamWithPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canActivateStreamWithPlayerPath:");
}

id objc_msgSend_canBeClusterMember(void *a1, const char *a2, ...)
{
  return _[a1 canBeClusterMember];
}

id objc_msgSend_canBeGrouped(void *a1, const char *a2, ...)
{
  return _[a1 canBeGrouped];
}

id objc_msgSend_canBeNowPlaying(void *a1, const char *a2, ...)
{
  return _[a1 canBeNowPlaying];
}

id objc_msgSend_canBeNowPlayingClients(void *a1, const char *a2, ...)
{
  return _[a1 canBeNowPlayingClients];
}

id objc_msgSend_canBeNowPlayingForPlayerClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canBeNowPlayingForPlayerClient:");
}

id objc_msgSend_canBeNowPlayingPlayer(void *a1, const char *a2, ...)
{
  return _[a1 canBeNowPlayingPlayer];
}

id objc_msgSend_canBeNowPlayingPlayerTimestamp(void *a1, const char *a2, ...)
{
  return _[a1 canBeNowPlayingPlayerTimestamp];
}

id objc_msgSend_canDiscoverGroupSessions(void *a1, const char *a2, ...)
{
  return _[a1 canDiscoverGroupSessions];
}

id objc_msgSend_canMigrateToEndpoint_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canMigrateToEndpoint:queue:completion:");
}

id objc_msgSend_canRelayCommunicationChannel(void *a1, const char *a2, ...)
{
  return _[a1 canRelayCommunicationChannel];
}

id objc_msgSend_canSendMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canSendMessage:");
}

id objc_msgSend_canSetVolume(void *a1, const char *a2, ...)
{
  return _[a1 canSetVolume];
}

id objc_msgSend_cancel(void *a1, const char *a2, ...)
{
  return _[a1 cancel];
}

id objc_msgSend_cancelAcknowledgeResetTimerForSessionIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelAcknowledgeResetTimerForSessionIdentifier:");
}

id objc_msgSend_cancelAllOperations(void *a1, const char *a2, ...)
{
  return _[a1 cancelAllOperations];
}

id objc_msgSend_cancelPrewarmedIdentifier_forIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelPrewarmedIdentifier:forIdentity:");
}

id objc_msgSend_cancelSearch(void *a1, const char *a2, ...)
{
  return _[a1 cancelSearch];
}

id objc_msgSend_cancellationReason(void *a1, const char *a2, ...)
{
  return _[a1 cancellationReason];
}

id objc_msgSend_candidate(void *a1, const char *a2, ...)
{
  return _[a1 candidate];
}

id objc_msgSend_candidateIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 candidateIdentifier];
}

id objc_msgSend_candidateResults(void *a1, const char *a2, ...)
{
  return _[a1 candidateResults];
}

id objc_msgSend_capabilities(void *a1, const char *a2, ...)
{
  return _[a1 capabilities];
}

id objc_msgSend_changeActiveCategoryVolumeBy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "changeActiveCategoryVolumeBy:");
}

id objc_msgSend_changeDescriptionTo_keyBlock_isUpdatedBlock_descriptionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "changeDescriptionTo:keyBlock:isUpdatedBlock:descriptionBlock:");
}

id objc_msgSend_changeOutputDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "changeOutputDevice:");
}

id objc_msgSend_changeType(void *a1, const char *a2, ...)
{
  return _[a1 changeType];
}

id objc_msgSend_changedOutputDevices(void *a1, const char *a2, ...)
{
  return _[a1 changedOutputDevices];
}

id objc_msgSend_channelCount(void *a1, const char *a2, ...)
{
  return _[a1 channelCount];
}

id objc_msgSend_channelForDestination_session_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "channelForDestination:session:");
}

id objc_msgSend_characterCount(void *a1, const char *a2, ...)
{
  return _[a1 characterCount];
}

id objc_msgSend_checkCanJoinGroupSessionWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkCanJoinGroupSessionWithError:");
}

id objc_msgSend_checkXPCConnectionStatusDefaultInterval(void *a1, const char *a2, ...)
{
  return _[a1 checkXPCConnectionStatusDefaultInterval];
}

id objc_msgSend_checkXPCConnectionStatusDefaultResponseTimeout(void *a1, const char *a2, ...)
{
  return _[a1 checkXPCConnectionStatusDefaultResponseTimeout];
}

id objc_msgSend_classification(void *a1, const char *a2, ...)
{
  return _[a1 classification];
}

id objc_msgSend_cleanUp(void *a1, const char *a2, ...)
{
  return _[a1 cleanUp];
}

id objc_msgSend_cleanupExistingSessionIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 cleanupExistingSessionIfNeeded];
}

id objc_msgSend_cleanupForwarding(void *a1, const char *a2, ...)
{
  return _[a1 cleanupForwarding];
}

id objc_msgSend_clearArtworkForContentItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearArtworkForContentItems:");
}

id objc_msgSend_clearArtworkForItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearArtworkForItems:");
}

id objc_msgSend_clearContextsForClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearContextsForClient:");
}

id objc_msgSend_clearDefaultSupportedCommandsData(void *a1, const char *a2, ...)
{
  return _[a1 clearDefaultSupportedCommandsData];
}

id objc_msgSend_clearDiscoveredSessions(void *a1, const char *a2, ...)
{
  return _[a1 clearDiscoveredSessions];
}

id objc_msgSend_clearEndpointForClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearEndpointForClient:");
}

id objc_msgSend_clearExpiredTokenRecords(void *a1, const char *a2, ...)
{
  return _[a1 clearExpiredTokenRecords];
}

id objc_msgSend_clearHostedSessionState(void *a1, const char *a2, ...)
{
  return _[a1 clearHostedSessionState];
}

id objc_msgSend_clearNowPlayingClientForXPCClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearNowPlayingClientForXPCClient:");
}

id objc_msgSend_clearPendingCompletions(void *a1, const char *a2, ...)
{
  return _[a1 clearPendingCompletions];
}

id objc_msgSend_clearRecordingEndpointsForClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearRecordingEndpointsForClient:");
}

id objc_msgSend_clearRegisteredDevicesForClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearRegisteredDevicesForClient:");
}

id objc_msgSend_clearUnusedAutoRoute(void *a1, const char *a2, ...)
{
  return _[a1 clearUnusedAutoRoute];
}

id objc_msgSend_client(void *a1, const char *a2, ...)
{
  return _[a1 client];
}

id objc_msgSend_clientBoundMessageHandler(void *a1, const char *a2, ...)
{
  return _[a1 clientBoundMessageHandler];
}

id objc_msgSend_clientBundleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 clientBundleIdentifier];
}

id objc_msgSend_clientConnected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clientConnected:");
}

id objc_msgSend_clientConnection(void *a1, const char *a2, ...)
{
  return _[a1 clientConnection];
}

id objc_msgSend_clientConnection_didReceiveMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clientConnection:didReceiveMessage:");
}

id objc_msgSend_clientDisconnected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clientDisconnected:");
}

id objc_msgSend_clientForBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clientForBundleIdentifier:");
}

id objc_msgSend_clientForConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clientForConnection:");
}

id objc_msgSend_clientForPID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clientForPID:");
}

id objc_msgSend_clientForPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clientForPlayerPath:");
}

id objc_msgSend_clientIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 clientIdentifier];
}

id objc_msgSend_clientInterface(void *a1, const char *a2, ...)
{
  return _[a1 clientInterface];
}

id objc_msgSend_clientObservers(void *a1, const char *a2, ...)
{
  return _[a1 clientObservers];
}

id objc_msgSend_clientProperties(void *a1, const char *a2, ...)
{
  return _[a1 clientProperties];
}

id objc_msgSend_clientWithRegisteredCustomOrigin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clientWithRegisteredCustomOrigin:");
}

id objc_msgSend_clients(void *a1, const char *a2, ...)
{
  return _[a1 clients];
}

id objc_msgSend_close(void *a1, const char *a2, ...)
{
  return _[a1 close];
}

id objc_msgSend_closeAll(void *a1, const char *a2, ...)
{
  return _[a1 closeAll];
}

id objc_msgSend_closeForClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "closeForClient:");
}

id objc_msgSend_closeWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "closeWithError:");
}

id objc_msgSend_clusterComposition(void *a1, const char *a2, ...)
{
  return _[a1 clusterComposition];
}

id objc_msgSend_clusterCompositionMembers(void *a1, const char *a2, ...)
{
  return _[a1 clusterCompositionMembers];
}

id objc_msgSend_clusterCompositionOutputDevices(void *a1, const char *a2, ...)
{
  return _[a1 clusterCompositionOutputDevices];
}

id objc_msgSend_clusterID(void *a1, const char *a2, ...)
{
  return _[a1 clusterID];
}

id objc_msgSend_clusterLeaderID(void *a1, const char *a2, ...)
{
  return _[a1 clusterLeaderID];
}

id objc_msgSend_clusterLeaderOperations(void *a1, const char *a2, ...)
{
  return _[a1 clusterLeaderOperations];
}

id objc_msgSend_clusterLeaderUID(void *a1, const char *a2, ...)
{
  return _[a1 clusterLeaderUID];
}

id objc_msgSend_clusterStatus(void *a1, const char *a2, ...)
{
  return _[a1 clusterStatus];
}

id objc_msgSend_clusterType(void *a1, const char *a2, ...)
{
  return _[a1 clusterType];
}

id objc_msgSend_clusteredDevices(void *a1, const char *a2, ...)
{
  return _[a1 clusteredDevices];
}

id objc_msgSend_code(void *a1, const char *a2, ...)
{
  return _[a1 code];
}

id objc_msgSend_collaborationAllowed(void *a1, const char *a2, ...)
{
  return _[a1 collaborationAllowed];
}

id objc_msgSend_collectDiagnostic_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "collectDiagnostic:");
}

id objc_msgSend_color(void *a1, const char *a2, ...)
{
  return _[a1 color];
}

id objc_msgSend_combinedSuppressedBundleIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 combinedSuppressedBundleIdentifiers];
}

id objc_msgSend_command(void *a1, const char *a2, ...)
{
  return _[a1 command];
}

id objc_msgSend_commandClientsRestriction(void *a1, const char *a2, ...)
{
  return _[a1 commandClientsRestriction];
}

id objc_msgSend_commandDictionary(void *a1, const char *a2, ...)
{
  return _[a1 commandDictionary];
}

id objc_msgSend_commandID(void *a1, const char *a2, ...)
{
  return _[a1 commandID];
}

id objc_msgSend_commandInfosFromData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "commandInfosFromData:");
}

id objc_msgSend_commandResult(void *a1, const char *a2, ...)
{
  return _[a1 commandResult];
}

id objc_msgSend_commandResultWithSendError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "commandResultWithSendError:");
}

id objc_msgSend_commandResultWithSendError_description_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "commandResultWithSendError:description:");
}

id objc_msgSend_commandType(void *a1, const char *a2, ...)
{
  return _[a1 commandType];
}

id objc_msgSend_commitOutputDeviceToContextIfNeededWithReason_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "commitOutputDeviceToContextIfNeededWithReason:completion:");
}

id objc_msgSend_companionEndpoint(void *a1, const char *a2, ...)
{
  return _[a1 companionEndpoint];
}

id objc_msgSend_companionLinkDevices(void *a1, const char *a2, ...)
{
  return _[a1 companionLinkDevices];
}

id objc_msgSend_compare_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compare:");
}

id objc_msgSend_compare_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compare:options:");
}

id objc_msgSend_completion(void *a1, const char *a2, ...)
{
  return _[a1 completion];
}

id objc_msgSend_completionBlock(void *a1, const char *a2, ...)
{
  return _[a1 completionBlock];
}

id objc_msgSend_completionBlockDictionary(void *a1, const char *a2, ...)
{
  return _[a1 completionBlockDictionary];
}

id objc_msgSend_componentsJoinedByString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "componentsJoinedByString:");
}

id objc_msgSend_componentsSeparatedByString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "componentsSeparatedByString:");
}

id objc_msgSend_computeDevicePlaybackSessionID(void *a1, const char *a2, ...)
{
  return _[a1 computeDevicePlaybackSessionID];
}

id objc_msgSend_computeHostsByGroupIDForOutputDevices_unclusteredDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "computeHostsByGroupIDForOutputDevices:unclusteredDevices:");
}

id objc_msgSend_computeNowPlayingApplication(void *a1, const char *a2, ...)
{
  return _[a1 computeNowPlayingApplication];
}

id objc_msgSend_concreteEndpoint(void *a1, const char *a2, ...)
{
  return _[a1 concreteEndpoint];
}

id objc_msgSend_concreteOutputDevices(void *a1, const char *a2, ...)
{
  return _[a1 concreteOutputDevices];
}

id objc_msgSend_configuration(void *a1, const char *a2, ...)
{
  return _[a1 configuration];
}

id objc_msgSend_configurationForDefaultMainDisplayMonitor(void *a1, const char *a2, ...)
{
  return _[a1 configurationForDefaultMainDisplayMonitor];
}

id objc_msgSend_configurationWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationWithCompletion:");
}

id objc_msgSend_configurationWithEndpointFeatures_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationWithEndpointFeatures:");
}

id objc_msgSend_configureConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureConnection:");
}

id objc_msgSend_configuredClusterSize(void *a1, const char *a2, ...)
{
  return _[a1 configuredClusterSize];
}

id objc_msgSend_connect(void *a1, const char *a2, ...)
{
  return _[a1 connect];
}

id objc_msgSend_connectForBannerPresentation_reply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "connectForBannerPresentation:reply:");
}

id objc_msgSend_connectOptions(void *a1, const char *a2, ...)
{
  return _[a1 connectOptions];
}

id objc_msgSend_connectTimeoutGuard(void *a1, const char *a2, ...)
{
  return _[a1 connectTimeoutGuard];
}

id objc_msgSend_connectToAllEndpointsWhenAnyEndpointBeginsPlayback(void *a1, const char *a2, ...)
{
  return _[a1 connectToAllEndpointsWhenAnyEndpointBeginsPlayback];
}

id objc_msgSend_connectToAllOutputDevicesForReason_comparator_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "connectToAllOutputDevicesForReason:comparator:queue:completion:");
}

id objc_msgSend_connectToEndpointContainingOutputDeviceUID_options_details_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "connectToEndpointContainingOutputDeviceUID:options:details:completion:");
}

id objc_msgSend_connectToEndpointWhenBeginsPlayback(void *a1, const char *a2, ...)
{
  return _[a1 connectToEndpointWhenBeginsPlayback];
}

id objc_msgSend_connectToExternalDeviceWithOptions_details_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "connectToExternalDeviceWithOptions:details:completion:");
}

id objc_msgSend_connectToExternalDeviceWithOptions_userInfo_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "connectToExternalDeviceWithOptions:userInfo:completion:");
}

id objc_msgSend_connectToExternalDeviceWithUserInfo_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "connectToExternalDeviceWithUserInfo:completion:");
}

id objc_msgSend_connectToOutputDevice_reason_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "connectToOutputDevice:reason:queue:completion:");
}

id objc_msgSend_connectToTransientExternalDevice(void *a1, const char *a2, ...)
{
  return _[a1 connectToTransientExternalDevice];
}

id objc_msgSend_connectToUserSelectedEndpoint(void *a1, const char *a2, ...)
{
  return _[a1 connectToUserSelectedEndpoint];
}

id objc_msgSend_connectUserInfo(void *a1, const char *a2, ...)
{
  return _[a1 connectUserInfo];
}

id objc_msgSend_connectWithOptions_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "connectWithOptions:userInfo:");
}

id objc_msgSend_connectWithOptions_userInfo_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "connectWithOptions:userInfo:completion:");
}

id objc_msgSend_connected(void *a1, const char *a2, ...)
{
  return _[a1 connected];
}

id objc_msgSend_connectedClientAuditTokens(void *a1, const char *a2, ...)
{
  return _[a1 connectedClientAuditTokens];
}

id objc_msgSend_connection(void *a1, const char *a2, ...)
{
  return _[a1 connection];
}

id objc_msgSend_connectionDidInvalidate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "connectionDidInvalidate:");
}

id objc_msgSend_connectionDidResume_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "connectionDidResume:");
}

id objc_msgSend_connectionForOutputDeviceUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "connectionForOutputDeviceUID:");
}

id objc_msgSend_connectionHandler(void *a1, const char *a2, ...)
{
  return _[a1 connectionHandler];
}

id objc_msgSend_connectionState(void *a1, const char *a2, ...)
{
  return _[a1 connectionState];
}

id objc_msgSend_connectionStateCallbackQueue(void *a1, const char *a2, ...)
{
  return _[a1 connectionStateCallbackQueue];
}

id objc_msgSend_connectionStateError(void *a1, const char *a2, ...)
{
  return _[a1 connectionStateError];
}

id objc_msgSend_connectionType(void *a1, const char *a2, ...)
{
  return _[a1 connectionType];
}

id objc_msgSend_connectionWithEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "connectionWithEndpoint:");
}

id objc_msgSend_connections(void *a1, const char *a2, ...)
{
  return _[a1 connections];
}

id objc_msgSend_considerLocalOriginAsSeperateStream(void *a1, const char *a2, ...)
{
  return _[a1 considerLocalOriginAsSeperateStream];
}

id objc_msgSend_consolidatedSourceContentInfo(void *a1, const char *a2, ...)
{
  return _[a1 consolidatedSourceContentInfo];
}

id objc_msgSend_containsActiveStream(void *a1, const char *a2, ...)
{
  return _[a1 containsActiveStream];
}

id objc_msgSend_containsDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsDevice:");
}

id objc_msgSend_containsLocalDevice(void *a1, const char *a2, ...)
{
  return _[a1 containsLocalDevice];
}

id objc_msgSend_containsObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsObject:");
}

id objc_msgSend_containsOutputDeviceWithUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsOutputDeviceWithUID:");
}

id objc_msgSend_containsString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsString:");
}

id objc_msgSend_containsUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsUID:");
}

id objc_msgSend_contentController(void *a1, const char *a2, ...)
{
  return _[a1 contentController];
}

id objc_msgSend_contentInfoForConsolidatedSourceContentInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentInfoForConsolidatedSourceContentInfo:");
}

id objc_msgSend_contentItem(void *a1, const char *a2, ...)
{
  return _[a1 contentItem];
}

id objc_msgSend_contentItemForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentItemForIdentifier:");
}

id objc_msgSend_contentItemWithOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentItemWithOffset:");
}

id objc_msgSend_contentItems(void *a1, const char *a2, ...)
{
  return _[a1 contentItems];
}

id objc_msgSend_contentItemsArtwork(void *a1, const char *a2, ...)
{
  return _[a1 contentItemsArtwork];
}

id objc_msgSend_context(void *a1, const char *a2, ...)
{
  return _[a1 context];
}

id objc_msgSend_contextBeforeInput(void *a1, const char *a2, ...)
{
  return _[a1 contextBeforeInput];
}

id objc_msgSend_contextForActivityIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contextForActivityIdentifier:");
}

id objc_msgSend_contextID(void *a1, const char *a2, ...)
{
  return _[a1 contextID];
}

id objc_msgSend_contextIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 contextIdentifier];
}

id objc_msgSend_continuousPlaybackDetected(void *a1, const char *a2, ...)
{
  return _[a1 continuousPlaybackDetected];
}

id objc_msgSend_continuousPlaybackDetectionInterval(void *a1, const char *a2, ...)
{
  return _[a1 continuousPlaybackDetectionInterval];
}

id objc_msgSend_continuousPlaybackDetectionTimer(void *a1, const char *a2, ...)
{
  return _[a1 continuousPlaybackDetectionTimer];
}

id objc_msgSend_controlCenterForegrounded(void *a1, const char *a2, ...)
{
  return _[a1 controlCenterForegrounded];
}

id objc_msgSend_controlCenterVisible(void *a1, const char *a2, ...)
{
  return _[a1 controlCenterVisible];
}

id objc_msgSend_controller(void *a1, const char *a2, ...)
{
  return _[a1 controller];
}

id objc_msgSend_controller_didDiscoverCompanion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "controller:didDiscoverCompanion:");
}

id objc_msgSend_controllerDidUndiscoverCompanion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "controllerDidUndiscoverCompanion:");
}

id objc_msgSend_controllerID(void *a1, const char *a2, ...)
{
  return _[a1 controllerID];
}

id objc_msgSend_copy(void *a1, const char *a2, ...)
{
  return _[a1 copy];
}

id objc_msgSend_copyWithType_outputDeviceUIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyWithType:outputDeviceUIDs:");
}

id objc_msgSend_copyWithZone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyWithZone:");
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return _[a1 count];
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countByEnumeratingWithState:objects:count:");
}

id objc_msgSend_countryCode(void *a1, const char *a2, ...)
{
  return _[a1 countryCode];
}

id objc_msgSend_create(void *a1, const char *a2, ...)
{
  return _[a1 create];
}

id objc_msgSend_createAssertion(void *a1, const char *a2, ...)
{
  return _[a1 createAssertion];
}

id objc_msgSend_createAssertionWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createAssertionWithReason:");
}

id objc_msgSend_createConnectionWithUserInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createConnectionWithUserInfo:");
}

id objc_msgSend_createCustomOriginClientForOrigin_routingContextID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createCustomOriginClientForOrigin:routingContextID:");
}

id objc_msgSend_createDelocalizedPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createDelocalizedPlayerPath:");
}

id objc_msgSend_createDiagnosticInfo(void *a1, const char *a2, ...)
{
  return _[a1 createDiagnosticInfo];
}

id objc_msgSend_createDirectoryAtPath_withIntermediateDirectories_attributes_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createDirectoryAtPath:withIntermediateDirectories:attributes:error:");
}

id objc_msgSend_createDirectoryAtURL_withIntermediateDirectories_attributes_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createDirectoryAtURL:withIntermediateDirectories:attributes:error:");
}

id objc_msgSend_createEndpoint(void *a1, const char *a2, ...)
{
  return _[a1 createEndpoint];
}

id objc_msgSend_createEndpointForOutputDeviceIDs_details_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createEndpointForOutputDeviceIDs:details:completion:");
}

id objc_msgSend_createEndpointForOutputDeviceIDs_options_details_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createEndpointForOutputDeviceIDs:options:details:completion:");
}

id objc_msgSend_createEndpointWithCurrentTopology(void *a1, const char *a2, ...)
{
  return _[a1 createEndpointWithCurrentTopology];
}

id objc_msgSend_createEndpointWithCurrentTopologyWithTimeout_details_previewCallback_completion_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createEndpointWithCurrentTopologyWithTimeout:details:previewCallback:completion:");
}

id objc_msgSend_createEndpointWithOutputDeviceUIDs_options_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createEndpointWithOutputDeviceUIDs:options:queue:completion:");
}

id objc_msgSend_createEndpointWithOutputDeviceUIDs_timeout_details_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createEndpointWithOutputDeviceUIDs:timeout:details:completion:");
}

id objc_msgSend_createForHomePodWithDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createForHomePodWithDelegate:");
}

id objc_msgSend_createHostedEndpoint(void *a1, const char *a2, ...)
{
  return _[a1 createHostedEndpoint];
}

id objc_msgSend_createHostedEndpointWithOutputDeviceUIDs_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createHostedEndpointWithOutputDeviceUIDs:queue:completion:");
}

id objc_msgSend_createHostedEndpointWithOutputDeviceUIDs_timeout_details_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createHostedEndpointWithOutputDeviceUIDs:timeout:details:completion:");
}

id objc_msgSend_createLocalizedPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createLocalizedPlayerPath:");
}

id objc_msgSend_createNewApplicationConnectionCallback(void *a1, const char *a2, ...)
{
  return _[a1 createNewApplicationConnectionCallback];
}

id objc_msgSend_createNowPlayingClient(void *a1, const char *a2, ...)
{
  return _[a1 createNowPlayingClient];
}

id objc_msgSend_createOptimizedEndpoint(void *a1, const char *a2, ...)
{
  return _[a1 createOptimizedEndpoint];
}

id objc_msgSend_createOptimizedEndpointWithOutputDeviceUIDs_timeout_details_previewCallback_completion_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createOptimizedEndpointWithOutputDeviceUIDs:timeout:details:previewCallback:completion:");
}

id objc_msgSend_createOutputContextWithUniqueIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createOutputContextWithUniqueIdentifier:");
}

id objc_msgSend_createPartialEndpoint(void *a1, const char *a2, ...)
{
  return _[a1 createPartialEndpoint];
}

id objc_msgSend_createPlaybackQueueForRequest_cachingPolicy_playerPath_partiallyCachedItems_capabilities_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createPlaybackQueueForRequest:cachingPolicy:playerPath:partiallyCachedItems:capabilities:");
}

id objc_msgSend_createRemoteControlSessionWithNearbyGroup_nearbyInvitation_identity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createRemoteControlSessionWithNearbyGroup:nearbyInvitation:identity:");
}

id objc_msgSend_createRemoteHostedEndpoint(void *a1, const char *a2, ...)
{
  return _[a1 createRemoteHostedEndpoint];
}

id objc_msgSend_createRemoteHostedEndpointWithGroupLeaderOutputDeviceUID_withOutputDeviceUIDs_timeout_details_completion_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "createRemoteHostedEndpointWithGroupLeaderOutputDeviceUID:withOutputDeviceUIDs:timeout:details:completion:");
}

id objc_msgSend_createSessionWithNearbyGroup_asUser_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createSessionWithNearbyGroup:asUser:delegate:");
}

id objc_msgSend_createTransientEndpointForOutputDeviceUID_details_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createTransientEndpointForOutputDeviceUID:details:");
}

id objc_msgSend_createTransientExternalDevice(void *a1, const char *a2, ...)
{
  return _[a1 createTransientExternalDevice];
}

id objc_msgSend_createWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createWithCompletion:");
}

id objc_msgSend_createWithDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createWithDelegate:");
}

id objc_msgSend_createWithNearbyGroup_displayName_routeType_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createWithNearbyGroup:displayName:routeType:completion:");
}

id objc_msgSend_creatorProcessID(void *a1, const char *a2, ...)
{
  return _[a1 creatorProcessID];
}

id objc_msgSend_cryptoEnabled(void *a1, const char *a2, ...)
{
  return _[a1 cryptoEnabled];
}

id objc_msgSend_cryptoSession(void *a1, const char *a2, ...)
{
  return _[a1 cryptoSession];
}

id objc_msgSend_currentActivitiesInfo(void *a1, const char *a2, ...)
{
  return _[a1 currentActivitiesInfo];
}

id objc_msgSend_currentClientUpdatesConfigMessage(void *a1, const char *a2, ...)
{
  return _[a1 currentClientUpdatesConfigMessage];
}

id objc_msgSend_currentConnection(void *a1, const char *a2, ...)
{
  return _[a1 currentConnection];
}

id objc_msgSend_currentData(void *a1, const char *a2, ...)
{
  return _[a1 currentData];
}

id objc_msgSend_currentDataPayload(void *a1, const char *a2, ...)
{
  return _[a1 currentDataPayload];
}

id objc_msgSend_currentHandler(void *a1, const char *a2, ...)
{
  return _[a1 currentHandler];
}

id objc_msgSend_currentHomeUserIdentifiersWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentHomeUserIdentifiersWithCompletionHandler:");
}

id objc_msgSend_currentMediaUserState(void *a1, const char *a2, ...)
{
  return _[a1 currentMediaUserState];
}

id objc_msgSend_currentPersonalDeviceUIDs(void *a1, const char *a2, ...)
{
  return _[a1 currentPersonalDeviceUIDs];
}

id objc_msgSend_currentPlaybackSessionIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 currentPlaybackSessionIdentifier];
}

id objc_msgSend_currentPlaybackSessionTypes(void *a1, const char *a2, ...)
{
  return _[a1 currentPlaybackSessionTypes];
}

id objc_msgSend_currentProcess(void *a1, const char *a2, ...)
{
  return _[a1 currentProcess];
}

id objc_msgSend_currentProtocolVersion(void *a1, const char *a2, ...)
{
  return _[a1 currentProtocolVersion];
}

id objc_msgSend_currentRTISession(void *a1, const char *a2, ...)
{
  return _[a1 currentRTISession];
}

id objc_msgSend_currentRouteHasVolumeControl(void *a1, const char *a2, ...)
{
  return _[a1 currentRouteHasVolumeControl];
}

id objc_msgSend_currentRunLoop(void *a1, const char *a2, ...)
{
  return _[a1 currentRunLoop];
}

id objc_msgSend_currentSession(void *a1, const char *a2, ...)
{
  return _[a1 currentSession];
}

id objc_msgSend_currentSettings(void *a1, const char *a2, ...)
{
  return _[a1 currentSettings];
}

id objc_msgSend_currentState(void *a1, const char *a2, ...)
{
  return _[a1 currentState];
}

id objc_msgSend_currentTaskAssertion(void *a1, const char *a2, ...)
{
  return _[a1 currentTaskAssertion];
}

id objc_msgSend_currentTextEditingSession(void *a1, const char *a2, ...)
{
  return _[a1 currentTextEditingSession];
}

id objc_msgSend_currentUser(void *a1, const char *a2, ...)
{
  return _[a1 currentUser];
}

id objc_msgSend_customOrigin(void *a1, const char *a2, ...)
{
  return _[a1 customOrigin];
}

id objc_msgSend_daemonClient(void *a1, const char *a2, ...)
{
  return _[a1 daemonClient];
}

id objc_msgSend_data(void *a1, const char *a2, ...)
{
  return _[a1 data];
}

id objc_msgSend_dataForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataForKey:");
}

id objc_msgSend_dataFromDeviceInfos_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataFromDeviceInfos:");
}

id objc_msgSend_dataFromTXTRecordDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataFromTXTRecordDictionary:");
}

id objc_msgSend_dataSource(void *a1, const char *a2, ...)
{
  return _[a1 dataSource];
}

id objc_msgSend_dataSource_didUpdateParticipants_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataSource:didUpdateParticipants:");
}

id objc_msgSend_dataUsingEncoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataUsingEncoding:");
}

id objc_msgSend_dataWithBytes_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithBytes:length:");
}

id objc_msgSend_dataWithContentsOfFile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithContentsOfFile:");
}

id objc_msgSend_dataWithPropertyList_format_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithPropertyList:format:options:error:");
}

id objc_msgSend_date(void *a1, const char *a2, ...)
{
  return _[a1 date];
}

id objc_msgSend_dateByAddingTimeInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateByAddingTimeInterval:");
}

id objc_msgSend_dateCreated(void *a1, const char *a2, ...)
{
  return _[a1 dateCreated];
}

id objc_msgSend_dateWithTimeIntervalSince1970_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateWithTimeIntervalSince1970:");
}

id objc_msgSend_dateWithTimeIntervalSinceNow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateWithTimeIntervalSinceNow:");
}

id objc_msgSend_dateWithTimeIntervalSinceReferenceDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateWithTimeIntervalSinceReferenceDate:");
}

id objc_msgSend_deactivateScreenSaver(void *a1, const char *a2, ...)
{
  return _[a1 deactivateScreenSaver];
}

id objc_msgSend_debouncer(void *a1, const char *a2, ...)
{
  return _[a1 debouncer];
}

id objc_msgSend_debugDescription(void *a1, const char *a2, ...)
{
  return _[a1 debugDescription];
}

id objc_msgSend_debugName(void *a1, const char *a2, ...)
{
  return _[a1 debugName];
}

id objc_msgSend_debugRouteWithDebugIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "debugRouteWithDebugIdentifier:");
}

id objc_msgSend_decodeEntries(void *a1, const char *a2, ...)
{
  return _[a1 decodeEntries];
}

id objc_msgSend_decodeObjectOfClass_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeObjectOfClass:forKey:");
}

id objc_msgSend_defaultCenter(void *a1, const char *a2, ...)
{
  return _[a1 defaultCenter];
}

id objc_msgSend_defaultManager(void *a1, const char *a2, ...)
{
  return _[a1 defaultManager];
}

id objc_msgSend_defaultPlaybackQueueRequest(void *a1, const char *a2, ...)
{
  return _[a1 defaultPlaybackQueueRequest];
}

id objc_msgSend_defaultPlaybackQueueRequestWithRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultPlaybackQueueRequestWithRange:");
}

id objc_msgSend_defaultPlayer(void *a1, const char *a2, ...)
{
  return _[a1 defaultPlayer];
}

id objc_msgSend_defaultSize(void *a1, const char *a2, ...)
{
  return _[a1 defaultSize];
}

id objc_msgSend_defaultSupportedCommands(void *a1, const char *a2, ...)
{
  return _[a1 defaultSupportedCommands];
}

id objc_msgSend_defaultSupportedCommandsData(void *a1, const char *a2, ...)
{
  return _[a1 defaultSupportedCommandsData];
}

id objc_msgSend_defaultSupportedCommandsDataForClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultSupportedCommandsDataForClient:");
}

id objc_msgSend_defaultSupportedCommandsForClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultSupportedCommandsForClient:");
}

id objc_msgSend_defaultWorkspace(void *a1, const char *a2, ...)
{
  return _[a1 defaultWorkspace];
}

id objc_msgSend_defaultsContext(void *a1, const char *a2, ...)
{
  return _[a1 defaultsContext];
}

id objc_msgSend_delayCreateAssertion(void *a1, const char *a2, ...)
{
  return _[a1 delayCreateAssertion];
}

id objc_msgSend_delegate(void *a1, const char *a2, ...)
{
  return _[a1 delegate];
}

id objc_msgSend_delegateQueue(void *a1, const char *a2, ...)
{
  return _[a1 delegateQueue];
}

id objc_msgSend_deleteBackward(void *a1, const char *a2, ...)
{
  return _[a1 deleteBackward];
}

id objc_msgSend_deleteEventsPassingTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteEventsPassingTest:");
}

id objc_msgSend_deleteIdentityWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteIdentityWithError:");
}

id objc_msgSend_demoteWhenSyncingToCompanion(void *a1, const char *a2, ...)
{
  return _[a1 demoteWhenSyncingToCompanion];
}

id objc_msgSend_demotionController(void *a1, const char *a2, ...)
{
  return _[a1 demotionController];
}

id objc_msgSend_demotionPolicyWithContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "demotionPolicyWithContext:");
}

id objc_msgSend_denyPendingParticipant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "denyPendingParticipant:");
}

id objc_msgSend_dequeueNextPendingRequest(void *a1, const char *a2, ...)
{
  return _[a1 dequeueNextPendingRequest];
}

id objc_msgSend_description(void *a1, const char *a2, ...)
{
  return _[a1 description];
}

id objc_msgSend_descriptor(void *a1, const char *a2, ...)
{
  return _[a1 descriptor];
}

id objc_msgSend_designatedGroupLeader(void *a1, const char *a2, ...)
{
  return _[a1 designatedGroupLeader];
}

id objc_msgSend_designatedProxyGroupLeader(void *a1, const char *a2, ...)
{
  return _[a1 designatedProxyGroupLeader];
}

id objc_msgSend_destination(void *a1, const char *a2, ...)
{
  return _[a1 destination];
}

id objc_msgSend_destinationAppDisplayID(void *a1, const char *a2, ...)
{
  return _[a1 destinationAppDisplayID];
}

id objc_msgSend_destinationAppProcessID(void *a1, const char *a2, ...)
{
  return _[a1 destinationAppProcessID];
}

id objc_msgSend_destinationEndpoint(void *a1, const char *a2, ...)
{
  return _[a1 destinationEndpoint];
}

id objc_msgSend_destinationGroupUID(void *a1, const char *a2, ...)
{
  return _[a1 destinationGroupUID];
}

id objc_msgSend_destinationOrigin(void *a1, const char *a2, ...)
{
  return _[a1 destinationOrigin];
}

id objc_msgSend_destinationOutputDeviceUID(void *a1, const char *a2, ...)
{
  return _[a1 destinationOutputDeviceUID];
}

id objc_msgSend_destinationPlayerPath(void *a1, const char *a2, ...)
{
  return _[a1 destinationPlayerPath];
}

id objc_msgSend_destroyPlayersForClient_origin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "destroyPlayersForClient:origin:");
}

id objc_msgSend_details(void *a1, const char *a2, ...)
{
  return _[a1 details];
}

id objc_msgSend_determineGroupLeaderForOutputDevices_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "determineGroupLeaderForOutputDevices:options:");
}

id objc_msgSend_device(void *a1, const char *a2, ...)
{
  return _[a1 device];
}

id objc_msgSend_deviceClass(void *a1, const char *a2, ...)
{
  return _[a1 deviceClass];
}

id objc_msgSend_deviceDescriptor(void *a1, const char *a2, ...)
{
  return _[a1 deviceDescriptor];
}

id objc_msgSend_deviceEnclosureColor(void *a1, const char *a2, ...)
{
  return _[a1 deviceEnclosureColor];
}

id objc_msgSend_deviceForFromID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceForFromID:");
}

id objc_msgSend_deviceID(void *a1, const char *a2, ...)
{
  return _[a1 deviceID];
}

id objc_msgSend_deviceInfo(void *a1, const char *a2, ...)
{
  return _[a1 deviceInfo];
}

id objc_msgSend_deviceInfoDataSource(void *a1, const char *a2, ...)
{
  return _[a1 deviceInfoDataSource];
}

id objc_msgSend_deviceInfoForOrigin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceInfoForOrigin:");
}

id objc_msgSend_deviceInfoForOrigin_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceInfoForOrigin:queue:completion:");
}

id objc_msgSend_deviceIsActiveTelevision_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceIsActiveTelevision:");
}

id objc_msgSend_deviceName(void *a1, const char *a2, ...)
{
  return _[a1 deviceName];
}

id objc_msgSend_devicePlaybackSessionID(void *a1, const char *a2, ...)
{
  return _[a1 devicePlaybackSessionID];
}

id objc_msgSend_devicePresenceDetected(void *a1, const char *a2, ...)
{
  return _[a1 devicePresenceDetected];
}

id objc_msgSend_deviceProperties(void *a1, const char *a2, ...)
{
  return _[a1 deviceProperties];
}

id objc_msgSend_deviceState(void *a1, const char *a2, ...)
{
  return _[a1 deviceState];
}

id objc_msgSend_deviceSubtype(void *a1, const char *a2, ...)
{
  return _[a1 deviceSubtype];
}

id objc_msgSend_deviceType(void *a1, const char *a2, ...)
{
  return _[a1 deviceType];
}

id objc_msgSend_deviceUID(void *a1, const char *a2, ...)
{
  return _[a1 deviceUID];
}

id objc_msgSend_devices(void *a1, const char *a2, ...)
{
  return _[a1 devices];
}

id objc_msgSend_devicesForcedRemoved(void *a1, const char *a2, ...)
{
  return _[a1 devicesForcedRemoved];
}

id objc_msgSend_devicesInGroup(void *a1, const char *a2, ...)
{
  return _[a1 devicesInGroup];
}

id objc_msgSend_devicesPaused(void *a1, const char *a2, ...)
{
  return _[a1 devicesPaused];
}

id objc_msgSend_devicesRemoved(void *a1, const char *a2, ...)
{
  return _[a1 devicesRemoved];
}

id objc_msgSend_diagnosticDescription(void *a1, const char *a2, ...)
{
  return _[a1 diagnosticDescription];
}

id objc_msgSend_diagnosticInfo(void *a1, const char *a2, ...)
{
  return _[a1 diagnosticInfo];
}

id objc_msgSend_dictionary(void *a1, const char *a2, ...)
{
  return _[a1 dictionary];
}

id objc_msgSend_dictionaryForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryForKey:");
}

id objc_msgSend_dictionaryRepresentation(void *a1, const char *a2, ...)
{
  return _[a1 dictionaryRepresentation];
}

id objc_msgSend_dictionaryWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithCapacity:");
}

id objc_msgSend_dictionaryWithDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithDictionary:");
}

id objc_msgSend_dictionaryWithObjects_forKeys_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithObjects:forKeys:count:");
}

id objc_msgSend_didCancelRoutePicking_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didCancelRoutePicking:");
}

id objc_msgSend_didReceiveNewRecommendations_forBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didReceiveNewRecommendations:forBundleIdentifier:");
}

id objc_msgSend_didStartRecording(void *a1, const char *a2, ...)
{
  return _[a1 didStartRecording];
}

id objc_msgSend_differenceFrom_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "differenceFrom:");
}

id objc_msgSend_disableDuration(void *a1, const char *a2, ...)
{
  return _[a1 disableDuration];
}

id objc_msgSend_disablePairedDeviceActiveEndpointSync(void *a1, const char *a2, ...)
{
  return _[a1 disablePairedDeviceActiveEndpointSync];
}

id objc_msgSend_disarm(void *a1, const char *a2, ...)
{
  return _[a1 disarm];
}

id objc_msgSend_disconnect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disconnect:");
}

id objc_msgSend_disconnectInterval(void *a1, const char *a2, ...)
{
  return _[a1 disconnectInterval];
}

id objc_msgSend_disconnectOrigin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disconnectOrigin:");
}

id objc_msgSend_disconnectTimer(void *a1, const char *a2, ...)
{
  return _[a1 disconnectTimer];
}

id objc_msgSend_disconnectUndiscoverableEndpoints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disconnectUndiscoverableEndpoints:");
}

id objc_msgSend_disconnectWhenUndiscoverable(void *a1, const char *a2, ...)
{
  return _[a1 disconnectWhenUndiscoverable];
}

id objc_msgSend_disconnectWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disconnectWithError:");
}

id objc_msgSend_disconnected(void *a1, const char *a2, ...)
{
  return _[a1 disconnected];
}

id objc_msgSend_discoverCompanionDevices(void *a1, const char *a2, ...)
{
  return _[a1 discoverCompanionDevices];
}

id objc_msgSend_discoverEndpointTimeoutInterval(void *a1, const char *a2, ...)
{
  return _[a1 discoverEndpointTimeoutInterval];
}

id objc_msgSend_discoverGroup(void *a1, const char *a2, ...)
{
  return _[a1 discoverGroup];
}

id objc_msgSend_discoverGroup_reason_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "discoverGroup:reason:queue:completion:");
}

id objc_msgSend_discoverOutputDevice_reason_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "discoverOutputDevice:reason:queue:completion:");
}

id objc_msgSend_discoverOutputDevices(void *a1, const char *a2, ...)
{
  return _[a1 discoverOutputDevices];
}

id objc_msgSend_discoveredConcreteOutputDevices(void *a1, const char *a2, ...)
{
  return _[a1 discoveredConcreteOutputDevices];
}

id objc_msgSend_discoveredSession(void *a1, const char *a2, ...)
{
  return _[a1 discoveredSession];
}

id objc_msgSend_discoveredSessions(void *a1, const char *a2, ...)
{
  return _[a1 discoveredSessions];
}

id objc_msgSend_discoveredSessionsDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "discoveredSessionsDidChange:");
}

id objc_msgSend_discoveryChannel(void *a1, const char *a2, ...)
{
  return _[a1 discoveryChannel];
}

id objc_msgSend_discoveryDescription(void *a1, const char *a2, ...)
{
  return _[a1 discoveryDescription];
}

id objc_msgSend_discoveryMode(void *a1, const char *a2, ...)
{
  return _[a1 discoveryMode];
}

id objc_msgSend_discoveryModeForConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "discoveryModeForConfiguration:");
}

id objc_msgSend_discoveryOutputDevicesChanged_forConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "discoveryOutputDevicesChanged:forConfiguration:");
}

id objc_msgSend_discoverySession(void *a1, const char *a2, ...)
{
  return _[a1 discoverySession];
}

id objc_msgSend_discoverySessionConfigurationsResults(void *a1, const char *a2, ...)
{
  return _[a1 discoverySessionConfigurationsResults];
}

id objc_msgSend_discoverySessionWithConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "discoverySessionWithConfiguration:");
}

id objc_msgSend_discoverySessionWithEndpointFeatures_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "discoverySessionWithEndpointFeatures:");
}

id objc_msgSend_discoveryTokenForConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "discoveryTokenForConfiguration:");
}

id objc_msgSend_discoveryTokens(void *a1, const char *a2, ...)
{
  return _[a1 discoveryTokens];
}

id objc_msgSend_discoveryTransaction(void *a1, const char *a2, ...)
{
  return _[a1 discoveryTransaction];
}

id objc_msgSend_dismiss(void *a1, const char *a2, ...)
{
  return _[a1 dismiss];
}

id objc_msgSend_dismissAllBannerRequests(void *a1, const char *a2, ...)
{
  return _[a1 dismissAllBannerRequests];
}

id objc_msgSend_dismissAllBanners(void *a1, const char *a2, ...)
{
  return _[a1 dismissAllBanners];
}

id objc_msgSend_dismissAllDiscoveredSessions(void *a1, const char *a2, ...)
{
  return _[a1 dismissAllDiscoveredSessions];
}

id objc_msgSend_dismissBannerRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissBannerRequest:");
}

id objc_msgSend_dismissBannerWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissBannerWithIdentifier:");
}

id objc_msgSend_dismissDiscoveredSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissDiscoveredSession:");
}

id objc_msgSend_dismissJoinRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissJoinRequest:");
}

id objc_msgSend_dismissPillBannerRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissPillBannerRequest:");
}

id objc_msgSend_dismissPinDialogWithToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissPinDialogWithToken:");
}

id objc_msgSend_dismissProximityCard(void *a1, const char *a2, ...)
{
  return _[a1 dismissProximityCard];
}

id objc_msgSend_dispatchHIDEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dispatchHIDEvent:");
}

id objc_msgSend_displayBacklightLevel(void *a1, const char *a2, ...)
{
  return _[a1 displayBacklightLevel];
}

id objc_msgSend_displayDiscoveredSession_dismissalHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayDiscoveredSession:dismissalHandler:");
}

id objc_msgSend_displayJoinRequest_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayJoinRequest:handler:");
}

id objc_msgSend_displayMonitor(void *a1, const char *a2, ...)
{
  return _[a1 displayMonitor];
}

id objc_msgSend_displayName(void *a1, const char *a2, ...)
{
  return _[a1 displayName];
}

id objc_msgSend_displayNameAccepted(void *a1, const char *a2, ...)
{
  return _[a1 displayNameAccepted];
}

id objc_msgSend_displayOn(void *a1, const char *a2, ...)
{
  return _[a1 displayOn];
}

id objc_msgSend_distantEndpoint(void *a1, const char *a2, ...)
{
  return _[a1 distantEndpoint];
}

id objc_msgSend_distantFuture(void *a1, const char *a2, ...)
{
  return _[a1 distantFuture];
}

id objc_msgSend_distantPast(void *a1, const char *a2, ...)
{
  return _[a1 distantPast];
}

id objc_msgSend_documentState(void *a1, const char *a2, ...)
{
  return _[a1 documentState];
}

id objc_msgSend_domain(void *a1, const char *a2, ...)
{
  return _[a1 domain];
}

id objc_msgSend_donateActiveRoutesToBiome(void *a1, const char *a2, ...)
{
  return _[a1 donateActiveRoutesToBiome];
}

id objc_msgSend_donateApprovedIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "donateApprovedIdentity:");
}

id objc_msgSend_donateAsCandidate(void *a1, const char *a2, ...)
{
  return _[a1 donateAsCandidate];
}

id objc_msgSend_donateAttribution_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "donateAttribution:");
}

id objc_msgSend_donateRemovedIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "donateRemovedIdentity:");
}

id objc_msgSend_doubleValue(void *a1, const char *a2, ...)
{
  return _[a1 doubleValue];
}

id objc_msgSend_dsid(void *a1, const char *a2, ...)
{
  return _[a1 dsid];
}

id objc_msgSend_dsidToPendingCompletionMap(void *a1, const char *a2, ...)
{
  return _[a1 dsidToPendingCompletionMap];
}

id objc_msgSend_duration(void *a1, const char *a2, ...)
{
  return _[a1 duration];
}

id objc_msgSend_effectiveBoolValueForSetting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "effectiveBoolValueForSetting:");
}

id objc_msgSend_effectiveIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 effectiveIdentifier];
}

id objc_msgSend_effectiveParentGroupContainsDiscoverableGroupLeader(void *a1, const char *a2, ...)
{
  return _[a1 effectiveParentGroupContainsDiscoverableGroupLeader];
}

id objc_msgSend_effectiveValuesForUnionSetting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "effectiveValuesForUnionSetting:");
}

id objc_msgSend_elapsedTimeTimestamp(void *a1, const char *a2, ...)
{
  return _[a1 elapsedTimeTimestamp];
}

id objc_msgSend_electedPlayer(void *a1, const char *a2, ...)
{
  return _[a1 electedPlayer];
}

id objc_msgSend_electedPlayerController(void *a1, const char *a2, ...)
{
  return _[a1 electedPlayerController];
}

id objc_msgSend_electedPlayerInterval(void *a1, const char *a2, ...)
{
  return _[a1 electedPlayerInterval];
}

id objc_msgSend_electedPlayerPath(void *a1, const char *a2, ...)
{
  return _[a1 electedPlayerPath];
}

id objc_msgSend_elements(void *a1, const char *a2, ...)
{
  return _[a1 elements];
}

id objc_msgSend_eligibilityMonitor(void *a1, const char *a2, ...)
{
  return _[a1 eligibilityMonitor];
}

id objc_msgSend_eligibilityMonitor_eligibilityStatusDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "eligibilityMonitor:eligibilityStatusDidChange:");
}

id objc_msgSend_eligibilityStatus(void *a1, const char *a2, ...)
{
  return _[a1 eligibilityStatus];
}

id objc_msgSend_enableDeltaRouteRecommendations(void *a1, const char *a2, ...)
{
  return _[a1 enableDeltaRouteRecommendations];
}

id objc_msgSend_enableQueueHandOffForRouteRecommendations(void *a1, const char *a2, ...)
{
  return _[a1 enableQueueHandOffForRouteRecommendations];
}

id objc_msgSend_enableRouteRecommendations(void *a1, const char *a2, ...)
{
  return _[a1 enableRouteRecommendations];
}

id objc_msgSend_enabled(void *a1, const char *a2, ...)
{
  return _[a1 enabled];
}

id objc_msgSend_encodeEntries(void *a1, const char *a2, ...)
{
  return _[a1 encodeEntries];
}

id objc_msgSend_encodeObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeObject:forKey:");
}

id objc_msgSend_encryptedMessageWithState_text_attributes_usingCryptoSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encryptedMessageWithState:text:attributes:usingCryptoSession:");
}

id objc_msgSend_encryptionType(void *a1, const char *a2, ...)
{
  return _[a1 encryptionType];
}

id objc_msgSend_end(void *a1, const char *a2, ...)
{
  return _[a1 end];
}

id objc_msgSend_endAdvertising(void *a1, const char *a2, ...)
{
  return _[a1 endAdvertising];
}

id objc_msgSend_endEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endEvent:");
}

id objc_msgSend_endEvent_withError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endEvent:withError:");
}

id objc_msgSend_endGroupSessionLowPowerPlatterActivity(void *a1, const char *a2, ...)
{
  return _[a1 endGroupSessionLowPowerPlatterActivity];
}

id objc_msgSend_endGroupSessionNearbyActivity(void *a1, const char *a2, ...)
{
  return _[a1 endGroupSessionNearbyActivity];
}

id objc_msgSend_endMirroringActivity(void *a1, const char *a2, ...)
{
  return _[a1 endMirroringActivity];
}

id objc_msgSend_endNowPlayingActivity(void *a1, const char *a2, ...)
{
  return _[a1 endNowPlayingActivity];
}

id objc_msgSend_endProxyAdvertising(void *a1, const char *a2, ...)
{
  return _[a1 endProxyAdvertising];
}

id objc_msgSend_endRouteRecommendationActivityFor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endRouteRecommendationActivityFor:");
}

id objc_msgSend_endWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endWithError:");
}

id objc_msgSend_endpoint(void *a1, const char *a2, ...)
{
  return _[a1 endpoint];
}

id objc_msgSend_endpointFeatures(void *a1, const char *a2, ...)
{
  return _[a1 endpointFeatures];
}

id objc_msgSend_endpointForDeviceUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endpointForDeviceUID:");
}

id objc_msgSend_endpointForMachName_service_instance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endpointForMachName:service:instance:");
}

id objc_msgSend_endpointRecentlyUserSelectedInterval(void *a1, const char *a2, ...)
{
  return _[a1 endpointRecentlyUserSelectedInterval];
}

id objc_msgSend_endpoints(void *a1, const char *a2, ...)
{
  return _[a1 endpoints];
}

id objc_msgSend_endpointsForcedRemoved(void *a1, const char *a2, ...)
{
  return _[a1 endpointsForcedRemoved];
}

id objc_msgSend_endpointsPaused(void *a1, const char *a2, ...)
{
  return _[a1 endpointsPaused];
}

id objc_msgSend_endpointsRemoved(void *a1, const char *a2, ...)
{
  return _[a1 endpointsRemoved];
}

id objc_msgSend_endpointsSnapshot(void *a1, const char *a2, ...)
{
  return _[a1 endpointsSnapshot];
}

id objc_msgSend_enqueueRequest_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enqueueRequest:completion:");
}

id objc_msgSend_enterLowPowerModeWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enterLowPowerModeWithCompletion:");
}

id objc_msgSend_entitlements(void *a1, const char *a2, ...)
{
  return _[a1 entitlements];
}

id objc_msgSend_enumerateFilteredContentItemsBySubscriptionsForContentItems_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateFilteredContentItemsBySubscriptionsForContentItems:block:");
}

id objc_msgSend_enumerateKeysAndObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateKeysAndObjectsUsingBlock:");
}

id objc_msgSend_enumerateObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateObjectsUsingBlock:");
}

id objc_msgSend_equivalentMediaIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 equivalentMediaIdentifier];
}

id objc_msgSend_error(void *a1, const char *a2, ...)
{
  return _[a1 error];
}

id objc_msgSend_errorForCurrentState(void *a1, const char *a2, ...)
{
  return _[a1 errorForCurrentState];
}

id objc_msgSend_errorHandler(void *a1, const char *a2, ...)
{
  return _[a1 errorHandler];
}

id objc_msgSend_errorWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errorWithDomain:code:userInfo:");
}

id objc_msgSend_euid(void *a1, const char *a2, ...)
{
  return _[a1 euid];
}

id objc_msgSend_evaluateRecommendations_localOutputContextHasAirPlay_primaryBundleIdentifier_activeSystemEndpoint_completion_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "evaluateRecommendations:localOutputContextHasAirPlay:primaryBundleIdentifier:activeSystemEndpoint:completion:");
}

id objc_msgSend_evaluateShouldDisconnectWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "evaluateShouldDisconnectWithReason:");
}

id objc_msgSend_evaluateState(void *a1, const char *a2, ...)
{
  return _[a1 evaluateState];
}

id objc_msgSend_event(void *a1, const char *a2, ...)
{
  return _[a1 event];
}

id objc_msgSend_eventBody(void *a1, const char *a2, ...)
{
  return _[a1 eventBody];
}

id objc_msgSend_eventReason(void *a1, const char *a2, ...)
{
  return _[a1 eventReason];
}

id objc_msgSend_events(void *a1, const char *a2, ...)
{
  return _[a1 events];
}

id objc_msgSend_eventuallyCommitOutputDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "eventuallyCommitOutputDevice:");
}

id objc_msgSend_exceptionWithName_reason_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "exceptionWithName:reason:userInfo:");
}

id objc_msgSend_excessiveTaskAssertionsABC(void *a1, const char *a2, ...)
{
  return _[a1 excessiveTaskAssertionsABC];
}

id objc_msgSend_existingNowPlayingClientForClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "existingNowPlayingClientForClient:");
}

id objc_msgSend_existingNowPlayingClientForPid_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "existingNowPlayingClientForPid:");
}

id objc_msgSend_existingNowPlayingClientForPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "existingNowPlayingClientForPlayerPath:");
}

id objc_msgSend_existingOriginClientRequestsForPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "existingOriginClientRequestsForPlayerPath:");
}

id objc_msgSend_existingPlayerClientForPlayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "existingPlayerClientForPlayer:");
}

id objc_msgSend_existingPlayerClientForPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "existingPlayerClientForPlayerPath:");
}

id objc_msgSend_existingSubscriptionControllerForPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "existingSubscriptionControllerForPlayerPath:");
}

id objc_msgSend_exitEvent(void *a1, const char *a2, ...)
{
  return _[a1 exitEvent];
}

id objc_msgSend_exitLowPowerModeWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "exitLowPowerModeWithCompletion:");
}

id objc_msgSend_expanseSessionActive(void *a1, const char *a2, ...)
{
  return _[a1 expanseSessionActive];
}

id objc_msgSend_expanseSessionHasActiveActivity(void *a1, const char *a2, ...)
{
  return _[a1 expanseSessionHasActiveActivity];
}

id objc_msgSend_expectedClientAuditTokens(void *a1, const char *a2, ...)
{
  return _[a1 expectedClientAuditTokens];
}

id objc_msgSend_expectedIdentifierForUserIdentity_withRandomData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "expectedIdentifierForUserIdentity:withRandomData:");
}

id objc_msgSend_expirationDate(void *a1, const char *a2, ...)
{
  return _[a1 expirationDate];
}

id objc_msgSend_exportContentItemArtworkUpdates_forPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "exportContentItemArtworkUpdates:forPlayerPath:");
}

id objc_msgSend_exportContentItems_forPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "exportContentItems:forPlayerPath:");
}

id objc_msgSend_exportEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "exportEndpoint:");
}

id objc_msgSend_exportNowPlayingState_forPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "exportNowPlayingState:forPlayerPath:");
}

id objc_msgSend_exportOutputDevice_endpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "exportOutputDevice:endpoint:");
}

id objc_msgSend_exportOutputDevices_endpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "exportOutputDevices:endpoint:");
}

id objc_msgSend_exportPlaybackQueue_forPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "exportPlaybackQueue:forPlayerPath:");
}

id objc_msgSend_exportSupportedCommands_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "exportSupportedCommands:");
}

id objc_msgSend_exportedInterface(void *a1, const char *a2, ...)
{
  return _[a1 exportedInterface];
}

id objc_msgSend_extendedInfo(void *a1, const char *a2, ...)
{
  return _[a1 extendedInfo];
}

id objc_msgSend_externalDevice(void *a1, const char *a2, ...)
{
  return _[a1 externalDevice];
}

id objc_msgSend_externalDeviceArtificalConnectionDelay(void *a1, const char *a2, ...)
{
  return _[a1 externalDeviceArtificalConnectionDelay];
}

id objc_msgSend_externalDeviceClient_gameController_propertiesChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "externalDeviceClient:gameController:propertiesChanged:");
}

id objc_msgSend_externalDeviceDisconnectSleepDuration(void *a1, const char *a2, ...)
{
  return _[a1 externalDeviceDisconnectSleepDuration];
}

id objc_msgSend_externalDeviceDisconnectWaitDuration(void *a1, const char *a2, ...)
{
  return _[a1 externalDeviceDisconnectWaitDuration];
}

id objc_msgSend_externalDeviceForEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "externalDeviceForEndpoint:");
}

id objc_msgSend_externalDeviceListenerEndpoint(void *a1, const char *a2, ...)
{
  return _[a1 externalDeviceListenerEndpoint];
}

id objc_msgSend_externalDeviceServer(void *a1, const char *a2, ...)
{
  return _[a1 externalDeviceServer];
}

id objc_msgSend_externalDeviceSleepAssertionOnClientConnectDuration(void *a1, const char *a2, ...)
{
  return _[a1 externalDeviceSleepAssertionOnClientConnectDuration];
}

id objc_msgSend_externalDeviceTimeoutDuration(void *a1, const char *a2, ...)
{
  return _[a1 externalDeviceTimeoutDuration];
}

id objc_msgSend_externalOutputContext(void *a1, const char *a2, ...)
{
  return _[a1 externalOutputContext];
}

id objc_msgSend_externalScreenType(void *a1, const char *a2, ...)
{
  return _[a1 externalScreenType];
}

id objc_msgSend_fadeAudio(void *a1, const char *a2, ...)
{
  return _[a1 fadeAudio];
}

id objc_msgSend_fadeType(void *a1, const char *a2, ...)
{
  return _[a1 fadeType];
}

id objc_msgSend_fastSyncSession(void *a1, const char *a2, ...)
{
  return _[a1 fastSyncSession];
}

id objc_msgSend_features(void *a1, const char *a2, ...)
{
  return _[a1 features];
}

id objc_msgSend_fetchActiveEndpointOnQueue_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchActiveEndpointOnQueue:withCompletion:");
}

id objc_msgSend_fetchActiveUserWithQueue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchActiveUserWithQueue:completion:");
}

id objc_msgSend_fetchServiceTokenWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchServiceTokenWithCompletion:");
}

id objc_msgSend_fetchUserIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchUserIdentity:");
}

id objc_msgSend_fileExistsAtPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileExistsAtPath:");
}

id objc_msgSend_fileSystemRepresentation(void *a1, const char *a2, ...)
{
  return _[a1 fileSystemRepresentation];
}

id objc_msgSend_fileURLWithPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileURLWithPath:");
}

id objc_msgSend_filterOutputDevices_remoteControllableOnly_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filterOutputDevices:remoteControllableOnly:");
}

id objc_msgSend_filteredContentItemsBySubscriptionsForContentItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filteredContentItemsBySubscriptionsForContentItems:");
}

id objc_msgSend_findEndpoint(void *a1, const char *a2, ...)
{
  return _[a1 findEndpoint];
}

id objc_msgSend_findMyGroupLeader(void *a1, const char *a2, ...)
{
  return _[a1 findMyGroupLeader];
}

id objc_msgSend_finish(void *a1, const char *a2, ...)
{
  return _[a1 finish];
}

id objc_msgSend_finishRemoteControlGroupSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finishRemoteControlGroupSession:");
}

id objc_msgSend_finishWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finishWithError:");
}

id objc_msgSend_finishedWaitingForCloudStateDSIDs(void *a1, const char *a2, ...)
{
  return _[a1 finishedWaitingForCloudStateDSIDs];
}

id objc_msgSend_firewall(void *a1, const char *a2, ...)
{
  return _[a1 firewall];
}

id objc_msgSend_first(void *a1, const char *a2, ...)
{
  return _[a1 first];
}

id objc_msgSend_firstObject(void *a1, const char *a2, ...)
{
  return _[a1 firstObject];
}

id objc_msgSend_fittedArtworkDataForContentItem_withRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fittedArtworkDataForContentItem:withRequest:");
}

id objc_msgSend_floatValue(void *a1, const char *a2, ...)
{
  return _[a1 floatValue];
}

id objc_msgSend_flushLyricsEvents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "flushLyricsEvents:");
}

id objc_msgSend_flushOperations(void *a1, const char *a2, ...)
{
  return _[a1 flushOperations];
}

id objc_msgSend_flushPendingPlaybackSessionMigrateEvents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "flushPendingPlaybackSessionMigrateEvents:");
}

id objc_msgSend_flushVolumeEvents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "flushVolumeEvents:");
}

id objc_msgSend_focusMonitor(void *a1, const char *a2, ...)
{
  return _[a1 focusMonitor];
}

id objc_msgSend_followupOutputContextModification(void *a1, const char *a2, ...)
{
  return _[a1 followupOutputContextModification];
}

id objc_msgSend_forceDeviceInfoDiscovery(void *a1, const char *a2, ...)
{
  return _[a1 forceDeviceInfoDiscovery];
}

id objc_msgSend_forceEnableCECVolume(void *a1, const char *a2, ...)
{
  return _[a1 forceEnableCECVolume];
}

id objc_msgSend_forceNowPlayingSessionFailure(void *a1, const char *a2, ...)
{
  return _[a1 forceNowPlayingSessionFailure];
}

id objc_msgSend_forwardParticipantDataSourceIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 forwardParticipantDataSourceIfNeeded];
}

id objc_msgSend_frameworkState(void *a1, const char *a2, ...)
{
  return _[a1 frameworkState];
}

id objc_msgSend_fromObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fromObject:");
}

id objc_msgSend_frontmostClient(void *a1, const char *a2, ...)
{
  return _[a1 frontmostClient];
}

id objc_msgSend_gain(void *a1, const char *a2, ...)
{
  return _[a1 gain];
}

id objc_msgSend_gameControllerWithID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "gameControllerWithID:");
}

id objc_msgSend_getActivePairedDevice(void *a1, const char *a2, ...)
{
  return _[a1 getActivePairedDevice];
}

id objc_msgSend_getBytes_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getBytes:length:");
}

id objc_msgSend_getClusterStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getClusterStatus:");
}

id objc_msgSend_getSessionWithLatestConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSessionWithLatestConfiguration:");
}

id objc_msgSend_getVolume_forCategory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getVolume:forCategory:");
}

id objc_msgSend_groupContainsDiscoverableGroupLeader(void *a1, const char *a2, ...)
{
  return _[a1 groupContainsDiscoverableGroupLeader];
}

id objc_msgSend_groupContainsGroupLeader(void *a1, const char *a2, ...)
{
  return _[a1 groupContainsGroupLeader];
}

id objc_msgSend_groupContextID(void *a1, const char *a2, ...)
{
  return _[a1 groupContextID];
}

id objc_msgSend_groupID(void *a1, const char *a2, ...)
{
  return _[a1 groupID];
}

id objc_msgSend_groupLeader(void *a1, const char *a2, ...)
{
  return _[a1 groupLeader];
}

id objc_msgSend_groupLeaderOperations(void *a1, const char *a2, ...)
{
  return _[a1 groupLeaderOperations];
}

id objc_msgSend_groupName(void *a1, const char *a2, ...)
{
  return _[a1 groupName];
}

id objc_msgSend_groupSession(void *a1, const char *a2, ...)
{
  return _[a1 groupSession];
}

id objc_msgSend_groupSessionASEAssertionEnabled(void *a1, const char *a2, ...)
{
  return _[a1 groupSessionASEAssertionEnabled];
}

id objc_msgSend_groupSessionAttributionValidityDuration(void *a1, const char *a2, ...)
{
  return _[a1 groupSessionAttributionValidityDuration];
}

id objc_msgSend_groupSessionAutoApproveHomeParticipants(void *a1, const char *a2, ...)
{
  return _[a1 groupSessionAutoApproveHomeParticipants];
}

id objc_msgSend_groupSessionBoopAdvertisementEnabled(void *a1, const char *a2, ...)
{
  return _[a1 groupSessionBoopAdvertisementEnabled];
}

id objc_msgSend_groupSessionBoopAdvertisementEnabledDidChangeNotification(void *a1, const char *a2, ...)
{
  return _[a1 groupSessionBoopAdvertisementEnabledDidChangeNotification];
}

id objc_msgSend_groupSessionCapableStatus(void *a1, const char *a2, ...)
{
  return _[a1 groupSessionCapableStatus];
}

id objc_msgSend_groupSessionEndAfterPauseInterval(void *a1, const char *a2, ...)
{
  return _[a1 groupSessionEndAfterPauseInterval];
}

id objc_msgSend_groupSessionEndpointDiscoveryInterval(void *a1, const char *a2, ...)
{
  return _[a1 groupSessionEndpointDiscoveryInterval];
}

id objc_msgSend_groupSessionGenerateSharedSecret(void *a1, const char *a2, ...)
{
  return _[a1 groupSessionGenerateSharedSecret];
}

id objc_msgSend_groupSessionInfo(void *a1, const char *a2, ...)
{
  return _[a1 groupSessionInfo];
}

id objc_msgSend_groupSessionListenForProxyJoinRequests(void *a1, const char *a2, ...)
{
  return _[a1 groupSessionListenForProxyJoinRequests];
}

id objc_msgSend_groupSessionNearbyGroupCreateTimeout(void *a1, const char *a2, ...)
{
  return _[a1 groupSessionNearbyGroupCreateTimeout];
}

id objc_msgSend_groupSessionNearbyInvitationCreateTimeout(void *a1, const char *a2, ...)
{
  return _[a1 groupSessionNearbyInvitationCreateTimeout];
}

id objc_msgSend_groupSessionRemoteControlService_didAcceptConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "groupSessionRemoteControlService:didAcceptConnection:");
}

id objc_msgSend_groupSessionRotateAfterLastGuest(void *a1, const char *a2, ...)
{
  return _[a1 groupSessionRotateAfterLastGuest];
}

id objc_msgSend_groupSessionServer(void *a1, const char *a2, ...)
{
  return _[a1 groupSessionServer];
}

id objc_msgSend_groupSessionStartRequestAssertionDuration(void *a1, const char *a2, ...)
{
  return _[a1 groupSessionStartRequestAssertionDuration];
}

id objc_msgSend_groupSessionToken(void *a1, const char *a2, ...)
{
  return _[a1 groupSessionToken];
}

id objc_msgSend_groupSessionsSupportedForAccountRegion(void *a1, const char *a2, ...)
{
  return _[a1 groupSessionsSupportedForAccountRegion];
}

id objc_msgSend_groupUID(void *a1, const char *a2, ...)
{
  return _[a1 groupUID];
}

id objc_msgSend_groupedDevices(void *a1, const char *a2, ...)
{
  return _[a1 groupedDevices];
}

id objc_msgSend_guest(void *a1, const char *a2, ...)
{
  return _[a1 guest];
}

id objc_msgSend_h(void *a1, const char *a2, ...)
{
  return _[a1 h];
}

id objc_msgSend_handOffQueueOrAirPlay_sourceEndpoint_destinationEndpoint_playerPath_completion_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handOffQueueOrAirPlay:sourceEndpoint:destinationEndpoint:playerPath:completion:");
}

id objc_msgSend_handle(void *a1, const char *a2, ...)
{
  return _[a1 handle];
}

id objc_msgSend_handleApprovedJoinRequest_isGuest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleApprovedJoinRequest:isGuest:");
}

id objc_msgSend_handleAutoRouteResult_forRoute_primaryBundleIdentifier_isOutsideApp_contextIdentifier_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleAutoRouteResult:forRoute:primaryBundleIdentifier:isOutsideApp:contextIdentifier:");
}

id objc_msgSend_handleClientBoundApplicationConnectionMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleClientBoundApplicationConnectionMessage:");
}

id objc_msgSend_handleClientBoundMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleClientBoundMessage:");
}

id objc_msgSend_handleClientDisconnect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleClientDisconnect:");
}

id objc_msgSend_handleContentItemTransaction_packets_group_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleContentItemTransaction:packets:group:");
}

id objc_msgSend_handleDeltaResult_forRoute_devicesToAdd_sourceEndpoint_primaryBundleIdentifier_isOutsideApp_contextIdentifier_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "handleDeltaResult:forRoute:devicesToAdd:sourceEndpoint:primaryBundleIdentifier:isOutsideApp:contextIdentifier:");
}

id objc_msgSend_handleDidReceiveResetConnectionRequest(void *a1, const char *a2, ...)
{
  return _[a1 handleDidReceiveResetConnectionRequest];
}

id objc_msgSend_handleEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleEvent:");
}

id objc_msgSend_handleFailureInFunction_file_lineNumber_description_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleFailureInFunction:file:lineNumber:description:");
}

id objc_msgSend_handleFirstLaunchAfterBootIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 handleFirstLaunchAfterBootIfNeeded];
}

id objc_msgSend_handleForIdentifier_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleForIdentifier:error:");
}

id objc_msgSend_handleGetGroupSessionServerEndpointMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleGetGroupSessionServerEndpointMessage:fromClient:");
}

id objc_msgSend_handleGroupSessionEvent_withOptions_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleGroupSessionEvent:withOptions:completion:");
}

id objc_msgSend_handleGroupSessionSelectionEvent_forDiscoveredSession_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleGroupSessionSelectionEvent:forDiscoveredSession:completion:");
}

id objc_msgSend_handleHandoffEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleHandoffEvent:");
}

id objc_msgSend_handleIncomingMessage_type_destination_session_messageID_replyID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleIncomingMessage:type:destination:session:messageID:replyID:");
}

id objc_msgSend_handleInvalidateApplicationConnectionMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleInvalidateApplicationConnectionMessage:");
}

id objc_msgSend_handleJoinGroupSessionMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleJoinGroupSessionMessage:fromClient:");
}

id objc_msgSend_handleJoinRequest_isGuest_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleJoinRequest:isGuest:completion:");
}

id objc_msgSend_handleLeaveGroupSessionMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleLeaveGroupSessionMessage:fromClient:");
}

id objc_msgSend_handleMediaRemoteCommand_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleMediaRemoteCommand:completion:");
}

id objc_msgSend_handleMicrophoneButtonDownFromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleMicrophoneButtonDownFromClient:");
}

id objc_msgSend_handleMicrophoneButtonUpFromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleMicrophoneButtonUpFromClient:");
}

id objc_msgSend_handleNowPlayingOriginClient_deviceInfoDidChange_previousDeviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleNowPlayingOriginClient:deviceInfoDidChange:previousDeviceInfo:");
}

id objc_msgSend_handlePlaybackQueueRequest_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handlePlaybackQueueRequest:fromClient:");
}

id objc_msgSend_handlePlaybackQueueRequestTransaction_packets_group_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handlePlaybackQueueRequestTransaction:packets:group:");
}

id objc_msgSend_handlePlaybackStartForEndpoint_bundleIdentifier_eligibleForRecommendationsOutsideApp_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handlePlaybackStartForEndpoint:bundleIdentifier:eligibleForRecommendationsOutsideApp:");
}

id objc_msgSend_handleResult_forRoute_devices_endpoint_primaryBundleIdentifier_isOutsideApp_contextIdentifier_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "handleResult:forRoute:devices:endpoint:primaryBundleIdentifier:isOutsideApp:contextIdentifier:");
}

id objc_msgSend_handleServerBoundApplicationConnectionMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleServerBoundApplicationConnectionMessage:");
}

id objc_msgSend_handleServerBoundMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleServerBoundMessage:");
}

id objc_msgSend_handleSetConnectionStateMessage_forClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleSetConnectionStateMessage:forClient:");
}

id objc_msgSend_handleSetDiscoveryModeMessage_forClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleSetDiscoveryModeMessage:forClient:");
}

id objc_msgSend_handleTextActionPayload_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleTextActionPayload:");
}

id objc_msgSend_handleTextInputMessage_withError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleTextInputMessage:withError:");
}

id objc_msgSend_handleTouchEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleTouchEvent:");
}

id objc_msgSend_handleUpdateOutputDevicesMessage_forClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleUpdateOutputDevicesMessage:forClient:");
}

id objc_msgSend_handleXPCMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleXPCMessage:fromClient:");
}

id objc_msgSend_handlerReturnStatuses(void *a1, const char *a2, ...)
{
  return _[a1 handlerReturnStatuses];
}

id objc_msgSend_handoffSessions(void *a1, const char *a2, ...)
{
  return _[a1 handoffSessions];
}

id objc_msgSend_hasASmartDevice(void *a1, const char *a2, ...)
{
  return _[a1 hasASmartDevice];
}

id objc_msgSend_hasAcceptedDisplayNameAcknowledgement(void *a1, const char *a2, ...)
{
  return _[a1 hasAcceptedDisplayNameAcknowledgement];
}

id objc_msgSend_hasAcceptedPrivacyAcknowledgement(void *a1, const char *a2, ...)
{
  return _[a1 hasAcceptedPrivacyAcknowledgement];
}

id objc_msgSend_hasAccessToPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasAccessToPlayerPath:");
}

id objc_msgSend_hasArtworkAvailable(void *a1, const char *a2, ...)
{
  return _[a1 hasArtworkAvailable];
}

id objc_msgSend_hasAuxiliaryProperties(void *a1, const char *a2, ...)
{
  return _[a1 hasAuxiliaryProperties];
}

id objc_msgSend_hasCapability_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasCapability:");
}

id objc_msgSend_hasDeferredDisconnectionDueToDeviceState(void *a1, const char *a2, ...)
{
  return _[a1 hasDeferredDisconnectionDueToDeviceState];
}

id objc_msgSend_hasDiscoveredSessionForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasDiscoveredSessionForIdentifier:");
}

id objc_msgSend_hasElapsedTimeTimestamp(void *a1, const char *a2, ...)
{
  return _[a1 hasElapsedTimeTimestamp];
}

id objc_msgSend_hasElectedPlayer(void *a1, const char *a2, ...)
{
  return _[a1 hasElectedPlayer];
}

id objc_msgSend_hasEnded(void *a1, const char *a2, ...)
{
  return _[a1 hasEnded];
}

id objc_msgSend_hasGroupSessionLowPowerAssertion(void *a1, const char *a2, ...)
{
  return _[a1 hasGroupSessionLowPowerAssertion];
}

id objc_msgSend_hasGroupSessionLowPowerPlatterAssertion(void *a1, const char *a2, ...)
{
  return _[a1 hasGroupSessionLowPowerPlatterAssertion];
}

id objc_msgSend_hasGroupSessionNearbyAssertion(void *a1, const char *a2, ...)
{
  return _[a1 hasGroupSessionNearbyAssertion];
}

id objc_msgSend_hasGuestParticipants(void *a1, const char *a2, ...)
{
  return _[a1 hasGuestParticipants];
}

id objc_msgSend_hasLength(void *a1, const char *a2, ...)
{
  return _[a1 hasLength];
}

id objc_msgSend_hasLocation(void *a1, const char *a2, ...)
{
  return _[a1 hasLocation];
}

id objc_msgSend_hasLockScreenAssertion(void *a1, const char *a2, ...)
{
  return _[a1 hasLockScreenAssertion];
}

id objc_msgSend_hasLockScreenControlsAssertion(void *a1, const char *a2, ...)
{
  return _[a1 hasLockScreenControlsAssertion];
}

id objc_msgSend_hasNowPlayingActivityAssertion(void *a1, const char *a2, ...)
{
  return _[a1 hasNowPlayingActivityAssertion];
}

id objc_msgSend_hasNowPlayingAssertion(void *a1, const char *a2, ...)
{
  return _[a1 hasNowPlayingAssertion];
}

id objc_msgSend_hasNowPlayingData(void *a1, const char *a2, ...)
{
  return _[a1 hasNowPlayingData];
}

id objc_msgSend_hasPlaceholder(void *a1, const char *a2, ...)
{
  return _[a1 hasPlaceholder];
}

id objc_msgSend_hasPlaceholderGroupSession(void *a1, const char *a2, ...)
{
  return _[a1 hasPlaceholderGroupSession];
}

id objc_msgSend_hasPlaybackRate(void *a1, const char *a2, ...)
{
  return _[a1 hasPlaybackRate];
}

id objc_msgSend_hasPlaybackStateTimestamp(void *a1, const char *a2, ...)
{
  return _[a1 hasPlaybackStateTimestamp];
}

id objc_msgSend_hasPlayedRecently(void *a1, const char *a2, ...)
{
  return _[a1 hasPlayedRecently];
}

id objc_msgSend_hasPrefix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasPrefix:");
}

id objc_msgSend_hasPresentedForCurrentPersonalDevices(void *a1, const char *a2, ...)
{
  return _[a1 hasPresentedForCurrentPersonalDevices];
}

id objc_msgSend_hasQuickControlsAssertion(void *a1, const char *a2, ...)
{
  return _[a1 hasQuickControlsAssertion];
}

id objc_msgSend_hasRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasRequest:");
}

id objc_msgSend_hasRequestedLegacyNowPlayingInfo(void *a1, const char *a2, ...)
{
  return _[a1 hasRequestedLegacyNowPlayingInfo];
}

id objc_msgSend_hasRequestedSupportedCommands(void *a1, const char *a2, ...)
{
  return _[a1 hasRequestedSupportedCommands];
}

id objc_msgSend_hasRouteRecommendationAssertion(void *a1, const char *a2, ...)
{
  return _[a1 hasRouteRecommendationAssertion];
}

id objc_msgSend_hasScreenMirroringAssertion(void *a1, const char *a2, ...)
{
  return _[a1 hasScreenMirroringAssertion];
}

id objc_msgSend_hasScreenMirroringQuickControlsAssertion(void *a1, const char *a2, ...)
{
  return _[a1 hasScreenMirroringQuickControlsAssertion];
}

id objc_msgSend_hasSuffix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasSuffix:");
}

id objc_msgSend_hasTriggered(void *a1, const char *a2, ...)
{
  return _[a1 hasTriggered];
}

id objc_msgSend_hasUIAssertions(void *a1, const char *a2, ...)
{
  return _[a1 hasUIAssertions];
}

id objc_msgSend_hash(void *a1, const char *a2, ...)
{
  return _[a1 hash];
}

id objc_msgSend_hashForIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hashForIdentity:");
}

id objc_msgSend_hashedUserIdentityIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 hashedUserIdentityIdentifier];
}

id objc_msgSend_hidden(void *a1, const char *a2, ...)
{
  return _[a1 hidden];
}

id objc_msgSend_hiliteModeActive(void *a1, const char *a2, ...)
{
  return _[a1 hiliteModeActive];
}

id objc_msgSend_homeKitUserIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 homeKitUserIdentifiers];
}

id objc_msgSend_homePodListener(void *a1, const char *a2, ...)
{
  return _[a1 homePodListener];
}

id objc_msgSend_homeScreenVisible(void *a1, const char *a2, ...)
{
  return _[a1 homeScreenVisible];
}

id objc_msgSend_homeUserIDs(void *a1, const char *a2, ...)
{
  return _[a1 homeUserIDs];
}

id objc_msgSend_homepodDemoMode(void *a1, const char *a2, ...)
{
  return _[a1 homepodDemoMode];
}

id objc_msgSend_homepodsEffected(void *a1, const char *a2, ...)
{
  return _[a1 homepodsEffected];
}

id objc_msgSend_homes(void *a1, const char *a2, ...)
{
  return _[a1 homes];
}

id objc_msgSend_hostInfo(void *a1, const char *a2, ...)
{
  return _[a1 hostInfo];
}

id objc_msgSend_hostProcess(void *a1, const char *a2, ...)
{
  return _[a1 hostProcess];
}

id objc_msgSend_hostedDiscoverySessionDidInvalidate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hostedDiscoverySessionDidInvalidate:");
}

id objc_msgSend_hostedExternalDeviceConnectionStateDidChange_withError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hostedExternalDeviceConnectionStateDidChange:withError:");
}

id objc_msgSend_hostedExternalDeviceDeviceInfoDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hostedExternalDeviceDeviceInfoDidChange:");
}

id objc_msgSend_hostedExternalDeviceDidAddOutputDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hostedExternalDeviceDidAddOutputDevice:");
}

id objc_msgSend_hostedExternalDeviceDidChangeOutputDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hostedExternalDeviceDidChangeOutputDevice:");
}

id objc_msgSend_hostedExternalDeviceDidReceiveCustomData_withName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hostedExternalDeviceDidReceiveCustomData:withName:");
}

id objc_msgSend_hostedExternalDeviceDidRemoveOutputDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hostedExternalDeviceDidRemoveOutputDevice:");
}

id objc_msgSend_hostedExternalDeviceEndpointDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hostedExternalDeviceEndpointDidChange:");
}

id objc_msgSend_hostedExternalDeviceForEndpointIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hostedExternalDeviceForEndpointIdentifier:");
}

id objc_msgSend_hostedExternalDeviceIsMutedDidChange_forOutputDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hostedExternalDeviceIsMutedDidChange:forOutputDevice:");
}

id objc_msgSend_hostedExternalDeviceManagerDidUpdateExternalDeviceMapping_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hostedExternalDeviceManagerDidUpdateExternalDeviceMapping:");
}

id objc_msgSend_hostedExternalDeviceVolumeCapabilitiesDidChange_forOutputDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hostedExternalDeviceVolumeCapabilitiesDidChange:forOutputDevice:");
}

id objc_msgSend_hostedExternalDeviceVolumeDidChange_forOutputDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hostedExternalDeviceVolumeDidChange:forOutputDevice:");
}

id objc_msgSend_hostedRoutingController(void *a1, const char *a2, ...)
{
  return _[a1 hostedRoutingController];
}

id objc_msgSend_hostedRoutingController_availableEndpointsDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hostedRoutingController:availableEndpointsDidChange:");
}

id objc_msgSend_hostedRoutingController_endpointsDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hostedRoutingController:endpointsDidChange:");
}

id objc_msgSend_hostedRoutingController_outputDevicesDidChange_forFeature_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hostedRoutingController:outputDevicesDidChange:forFeature:");
}

id objc_msgSend_hostedRoutingService(void *a1, const char *a2, ...)
{
  return _[a1 hostedRoutingService];
}

id objc_msgSend_hostedSessionIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 hostedSessionIdentifier];
}

id objc_msgSend_hostingStateForEligibilityStatus_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hostingStateForEligibilityStatus:reason:");
}

id objc_msgSend_hostingStateForUserState_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hostingStateForUserState:reason:");
}

id objc_msgSend_iTunesAudioContext(void *a1, const char *a2, ...)
{
  return _[a1 iTunesAudioContext];
}

id objc_msgSend_identifier(void *a1, const char *a2, ...)
{
  return _[a1 identifier];
}

id objc_msgSend_identifierWithPid_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "identifierWithPid:");
}

id objc_msgSend_identifyingMACAddress(void *a1, const char *a2, ...)
{
  return _[a1 identifyingMACAddress];
}

id objc_msgSend_identity(void *a1, const char *a2, ...)
{
  return _[a1 identity];
}

id objc_msgSend_identityForAngelJobLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "identityForAngelJobLabel:");
}

id objc_msgSend_identityForApplicationJobLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "identityForApplicationJobLabel:");
}

id objc_msgSend_identityForHomeUserIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "identityForHomeUserIdentifier:");
}

id objc_msgSend_identityForUserState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "identityForUserState:");
}

id objc_msgSend_identitySupportsCollaboration(void *a1, const char *a2, ...)
{
  return _[a1 identitySupportsCollaboration];
}

id objc_msgSend_idsAccountIsValid(void *a1, const char *a2, ...)
{
  return _[a1 idsAccountIsValid];
}

id objc_msgSend_idsCompanionRemoteControlService_didAcceptConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "idsCompanionRemoteControlService:didAcceptConnection:");
}

id objc_msgSend_idsIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 idsIdentifier];
}

id objc_msgSend_idsRemoteControlService_didAcceptConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "idsRemoteControlService:didAcceptConnection:");
}

id objc_msgSend_idsService(void *a1, const char *a2, ...)
{
  return _[a1 idsService];
}

id objc_msgSend_imageData(void *a1, const char *a2, ...)
{
  return _[a1 imageData];
}

id objc_msgSend_imageDimensionsForImageData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageDimensionsForImageData:error:");
}

id objc_msgSend_inactiveOutputContexts(void *a1, const char *a2, ...)
{
  return _[a1 inactiveOutputContexts];
}

id objc_msgSend_includeArtwork(void *a1, const char *a2, ...)
{
  return _[a1 includeArtwork];
}

id objc_msgSend_inconsistentPlaybackQueueCacheABC(void *a1, const char *a2, ...)
{
  return _[a1 inconsistentPlaybackQueueCacheABC];
}

id objc_msgSend_indexOfObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexOfObject:");
}

id objc_msgSend_indexOfObject_inRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexOfObject:inRange:");
}

id objc_msgSend_indexOfObjectPassingTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexOfObjectPassingTest:");
}

id objc_msgSend_indexPathData(void *a1, const char *a2, ...)
{
  return _[a1 indexPathData];
}

id objc_msgSend_indexesOfObjectsPassingTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexesOfObjectsPassingTest:");
}

id objc_msgSend_inferredNowPlayingClient(void *a1, const char *a2, ...)
{
  return _[a1 inferredNowPlayingClient];
}

id objc_msgSend_info(void *a1, const char *a2, ...)
{
  return _[a1 info];
}

id objc_msgSend_infoDictionary(void *a1, const char *a2, ...)
{
  return _[a1 infoDictionary];
}

id objc_msgSend_infoFromGroupSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "infoFromGroupSession:");
}

id objc_msgSend_ingestConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ingestConnection:");
}

id objc_msgSend_ingestData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ingestData:");
}

id objc_msgSend_ingestMockedRecommendation_classification_isCallToAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ingestMockedRecommendation:classification:isCallToAction:");
}

id objc_msgSend_init(void *a1, const char *a2, ...)
{
  return _[a1 init];
}

id objc_msgSend_initFromTransactionName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initFromTransactionName:");
}

id objc_msgSend_initLazily(void *a1, const char *a2, ...)
{
  return _[a1 initLazily];
}

id objc_msgSend_initSiblingSession_auditToken_clientIdentifier_autoReconnect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initSiblingSession:auditToken:clientIdentifier:autoReconnect:");
}

id objc_msgSend_initWithAPCommunicationChannel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAPCommunicationChannel:");
}

id objc_msgSend_initWithAVOutputContext_type_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAVOutputContext:type:");
}

id objc_msgSend_initWithAVOutputDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAVOutputDevice:");
}

id objc_msgSend_initWithAVOutputDevice_sourceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAVOutputDevice:sourceInfo:");
}

id objc_msgSend_initWithAdjustment_outputDeviceUID_details_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAdjustment:outputDeviceUID:details:");
}

id objc_msgSend_initWithAllSupportedMessages(void *a1, const char *a2, ...)
{
  return _[a1 initWithAllSupportedMessages];
}

id objc_msgSend_initWithArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithArray:");
}

id objc_msgSend_initWithArray_copyItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithArray:copyItems:");
}

id objc_msgSend_initWithBundleID_audioSessionID_isPlaying_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBundleID:audioSessionID:isPlaying:");
}

id objc_msgSend_initWithBundleID_indexPathData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBundleID:indexPathData:");
}

id objc_msgSend_initWithBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBundleIdentifier:");
}

id objc_msgSend_initWithBundleIdentifier_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBundleIdentifier:options:");
}

id objc_msgSend_initWithButtonEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithButtonEvent:");
}

id objc_msgSend_initWithBytes_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBytes:length:");
}

id objc_msgSend_initWithBytes_length_encoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBytes:length:encoding:");
}

id objc_msgSend_initWithBytesNoCopy_length_encoding_freeWhenDone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBytesNoCopy:length:encoding:freeWhenDone:");
}

id objc_msgSend_initWithCString_encoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCString:encoding:");
}

id objc_msgSend_initWithCandidateIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCandidateIdentifier:");
}

id objc_msgSend_initWithCapabilities_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCapabilities:");
}

id objc_msgSend_initWithCapabilities_endpointUID_outputDeviceUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCapabilities:endpointUID:outputDeviceUID:");
}

id objc_msgSend_initWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCapacity:");
}

id objc_msgSend_initWithClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithClient:");
}

id objc_msgSend_initWithClientObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithClientObject:");
}

id objc_msgSend_initWithClientObject_invalidationHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithClientObject:invalidationHandler:");
}

id objc_msgSend_initWithClusterLeaderID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithClusterLeaderID:");
}

id objc_msgSend_initWithClusterType_modelID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithClusterType:modelID:");
}

id objc_msgSend_initWithCommand_options_playerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCommand:options:playerPath:");
}

id objc_msgSend_initWithCommand_routedApp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCommand:routedApp:");
}

id objc_msgSend_initWithCommandID_commandResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCommandID:commandResult:");
}

id objc_msgSend_initWithCommandType_playerPath_unresolvedPlayerPath_senderAppDisplayID_options_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCommandType:playerPath:unresolvedPlayerPath:senderAppDisplayID:options:");
}

id objc_msgSend_initWithCommandType_playerPath_unresolvedPlayerPath_senderAppDisplayID_optionsData_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCommandType:playerPath:unresolvedPlayerPath:senderAppDisplayID:optionsData:");
}

id objc_msgSend_initWithConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:");
}

id objc_msgSend_initWithConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConnection:");
}

id objc_msgSend_initWithConnection_bundleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConnection:bundleID:");
}

id objc_msgSend_initWithConnection_deviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConnection:deviceInfo:");
}

id objc_msgSend_initWithConnection_hostedRoutingController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConnection:hostedRoutingController:");
}

id objc_msgSend_initWithConnection_label_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConnection:label:");
}

id objc_msgSend_initWithConnection_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConnection:queue:");
}

id objc_msgSend_initWithConnection_queue_defaultReplyQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConnection:queue:defaultReplyQueue:");
}

id objc_msgSend_initWithConnection_type_destination_session_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConnection:type:destination:session:");
}

id objc_msgSend_initWithConnectionContext_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConnectionContext:error:");
}

id objc_msgSend_initWithConnectionContext_requestInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConnectionContext:requestInfo:");
}

id objc_msgSend_initWithConnectionState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConnectionState:");
}

id objc_msgSend_initWithContentItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContentItems:");
}

id objc_msgSend_initWithContentItems_forPlayerPath_encoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContentItems:forPlayerPath:encoding:");
}

id objc_msgSend_initWithContentItems_location_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContentItems:location:");
}

id objc_msgSend_initWithContentItems_location_withPropertiesFromPlaybackQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContentItems:location:withPropertiesFromPlaybackQueue:");
}

id objc_msgSend_initWithContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContext:");
}

id objc_msgSend_initWithContextID_originatingAppDisplayID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContextID:originatingAppDisplayID:");
}

id objc_msgSend_initWithControllerID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithControllerID:");
}

id objc_msgSend_initWithData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithData:");
}

id objc_msgSend_initWithData_encoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithData:encoding:");
}

id objc_msgSend_initWithData_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithData:forKey:");
}

id objc_msgSend_initWithDataSource_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDataSource:delegate:");
}

id objc_msgSend_initWithDeallocHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDeallocHandler:");
}

id objc_msgSend_initWithDefaultSupportedCommands_forPlayerPath_encoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDefaultSupportedCommands:forPlayerPath:encoding:");
}

id objc_msgSend_initWithDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDelegate:");
}

id objc_msgSend_initWithDelegate_queue_routeRecommender_routeRecommendationStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDelegate:queue:routeRecommender:routeRecommendationStore:");
}

id objc_msgSend_initWithDescriptor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDescriptor:");
}

id objc_msgSend_initWithDescriptor_xpcEndpointListener_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDescriptor:xpcEndpointListener:");
}

id objc_msgSend_initWithDesignatedGroupLeader_outputDevices_preferredSuffix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDesignatedGroupLeader:outputDevices:preferredSuffix:");
}

id objc_msgSend_initWithDesignatedGroupLeader_outputDevices_preferredSuffix_connectionType_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDesignatedGroupLeader:outputDevices:preferredSuffix:connectionType:");
}

id objc_msgSend_initWithDestination_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDestination:");
}

id objc_msgSend_initWithDetails_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDetails:");
}

id objc_msgSend_initWithDetails_deviceInfo_numberOfRequestedOutputDeviceUIDs_timeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDetails:deviceInfo:numberOfRequestedOutputDeviceUIDs:timeout:");
}

id objc_msgSend_initWithDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDevice:");
}

id objc_msgSend_initWithDeviceDescriptor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDeviceDescriptor:");
}

id objc_msgSend_initWithDeviceFeatures_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDeviceFeatures:");
}

id objc_msgSend_initWithDeviceID_errorCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDeviceID:errorCode:");
}

id objc_msgSend_initWithDeviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDeviceInfo:");
}

id objc_msgSend_initWithDeviceInfo_client_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDeviceInfo:client:");
}

id objc_msgSend_initWithDeviceInfoDataSource_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDeviceInfoDataSource:delegate:");
}

id objc_msgSend_initWithDeviceUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDeviceUID:");
}

id objc_msgSend_initWithDeviceUID_sessionUID_targetDevice_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDeviceUID:sessionUID:targetDevice:error:");
}

id objc_msgSend_initWithDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDevices:");
}

id objc_msgSend_initWithDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDictionary:");
}

id objc_msgSend_initWithDictionaryRepresentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDictionaryRepresentation:");
}

id objc_msgSend_initWithDiscoveredSession_autoConnect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDiscoveredSession:autoConnect:");
}

id objc_msgSend_initWithDispatchQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDispatchQueue:");
}

id objc_msgSend_initWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDomain:code:userInfo:");
}

id objc_msgSend_initWithDomain_type_name_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDomain:type:name:");
}

id objc_msgSend_initWithEligibilityMonitor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithEligibilityMonitor:");
}

id objc_msgSend_initWithEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithEndpoint:");
}

id objc_msgSend_initWithEndpoint_externalDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithEndpoint:externalDevice:");
}

id objc_msgSend_initWithEndpointFeatures_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithEndpointFeatures:");
}

id objc_msgSend_initWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithError:");
}

id objc_msgSend_initWithErrorCode_deviceIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithErrorCode:deviceIdentifier:");
}

id objc_msgSend_initWithEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithEvent:");
}

id objc_msgSend_initWithEventType_eventSubType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithEventType:eventSubType:");
}

id objc_msgSend_initWithExplanation_target_attributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithExplanation:target:attributes:");
}

id objc_msgSend_initWithExternalDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithExternalDevice:");
}

id objc_msgSend_initWithFadeDuration_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFadeDuration:error:");
}

id objc_msgSend_initWithFirst_second_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFirst:second:");
}

id objc_msgSend_initWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFormat:");
}

id objc_msgSend_initWithGameControllerProperties_controllerID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithGameControllerProperties:controllerID:");
}

id objc_msgSend_initWithGroupID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithGroupID:");
}

id objc_msgSend_initWithGroupSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithGroupSession:");
}

id objc_msgSend_initWithGroupSession_participant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithGroupSession:participant:");
}

id objc_msgSend_initWithGroupSessionManager_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithGroupSessionManager:delegate:");
}

id objc_msgSend_initWithGroupUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithGroupUID:");
}

id objc_msgSend_initWithHandlerStatuses_sendError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithHandlerStatuses:sendError:");
}

id objc_msgSend_initWithHashedUserIdentityIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithHashedUserIdentityIdentifier:");
}

id objc_msgSend_initWithHiliteMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithHiliteMode:");
}

id objc_msgSend_initWithID_data_device_service_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithID:data:device:service:");
}

id objc_msgSend_initWithIdentifier_hostInfo_isHosted_equivalentMediaIdentifier_isPlaceholder_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:hostInfo:isHosted:equivalentMediaIdentifier:isPlaceholder:");
}

id objc_msgSend_initWithIdentifier_identity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:identity:");
}

id objc_msgSend_initWithIdentifier_identity_connected_guest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:identity:connected:guest:");
}

id objc_msgSend_initWithIdentifier_identity_connected_guest_hidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:identity:connected:guest:hidden:");
}

id objc_msgSend_initWithIdentifier_identity_oobKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:identity:oobKeys:");
}

id objc_msgSend_initWithIdentifier_service_destinationPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:service:destinationPlayerPath:");
}

id objc_msgSend_initWithIdentifier_sourcePlayerPath_destinationPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:sourcePlayerPath:destinationPlayerPath:");
}

id objc_msgSend_initWithIdentifier_type_displayName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:type:displayName:");
}

id objc_msgSend_initWithIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifiers:");
}

id objc_msgSend_initWithImageData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithImageData:");
}

id objc_msgSend_initWithImageData_height_width_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithImageData:height:width:");
}

id objc_msgSend_initWithInitiator_requestID_reason_userInitiated_originatingBundleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithInitiator:requestID:reason:userInitiated:originatingBundleID:");
}

id objc_msgSend_initWithInputMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithInputMode:");
}

id objc_msgSend_initWithInputStream_outputStream_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithInputStream:outputStream:");
}

id objc_msgSend_initWithInterval_name_queue_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithInterval:name:queue:block:");
}

id objc_msgSend_initWithInterval_queue_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithInterval:queue:block:");
}

id objc_msgSend_initWithInterval_repeats_queue_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithInterval:repeats:queue:block:");
}

id objc_msgSend_initWithInvitationData_sharedSecret_sessionIdentifier_equivalentMediaIdentifier_version_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithInvitationData:sharedSecret:sessionIdentifier:equivalentMediaIdentifier:version:");
}

id objc_msgSend_initWithJoinMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithJoinMode:");
}

id objc_msgSend_initWithKey_ascending_selector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithKey:ascending:selector:");
}

id objc_msgSend_initWithKey_data_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithKey:data:");
}

id objc_msgSend_initWithKeyOptions_valueOptions_capacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithKeyOptions:valueOptions:capacity:");
}

id objc_msgSend_initWithLastPlayingDate_devicePlaybackSessionID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLastPlayingDate:devicePlaybackSessionID:");
}

id objc_msgSend_initWithLastSupportedMessageType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLastSupportedMessageType:");
}

id objc_msgSend_initWithListenerEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithListenerEndpoint:");
}

id objc_msgSend_initWithListeningMode_outputDeviceUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithListeningMode:outputDeviceUID:");
}

id objc_msgSend_initWithLocalEndpoint_activeSystemEndpoint_eligibleToShowRecommendationsOutsideApp_eligibleToShowDeltaBanners_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "initWithLocalEndpoint:activeSystemEndpoint:eligibleToShowRecommendationsOutsideApp:eligibleToShowDeltaBanners:");
}

id objc_msgSend_initWithMRError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMRError:");
}

id objc_msgSend_initWithMRError_description_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMRError:description:");
}

id objc_msgSend_initWithMRError_format_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMRError:format:");
}

id objc_msgSend_initWithMRError_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMRError:userInfo:");
}

id objc_msgSend_initWithMachName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMachName:");
}

id objc_msgSend_initWithMaximumCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMaximumCapacity:");
}

id objc_msgSend_initWithMessage_connectionContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMessage:connectionContext:");
}

id objc_msgSend_initWithMode_configuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMode:configuration:");
}

id objc_msgSend_initWithMode_features_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMode:features:");
}

id objc_msgSend_initWithMuted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMuted:");
}

id objc_msgSend_initWithMuted_outputDeviceUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMuted:outputDeviceUID:");
}

id objc_msgSend_initWithMuted_outputDeviceUID_details_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMuted:outputDeviceUID:details:");
}

id objc_msgSend_initWithName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithName:");
}

id objc_msgSend_initWithName_fromMessage_withDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithName:fromMessage:withDelegate:");
}

id objc_msgSend_initWithName_playerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithName:playerPath:");
}

id objc_msgSend_initWithName_requestID_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithName:requestID:reason:");
}

id objc_msgSend_initWithName_timeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithName:timeout:");
}

id objc_msgSend_initWithNearbyGroup_identity_hostSigningKey_joinToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithNearbyGroup:identity:hostSigningKey:joinToken:");
}

id objc_msgSend_initWithNearbyGroup_nearbyInvitation_identity_hostSigningKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithNearbyGroup:nearbyInvitation:identity:hostSigningKey:");
}

id objc_msgSend_initWithNetServiceType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithNetServiceType:");
}

id objc_msgSend_initWithNotification_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithNotification:userInfo:");
}

id objc_msgSend_initWithNowPlayingServer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithNowPlayingServer:");
}

id objc_msgSend_initWithNowPlayingState_encoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithNowPlayingState:encoding:");
}

id objc_msgSend_initWithNowPlayingUpdates_artworkUpdates_volumeUpdates_keyboardUpdates_outputDeviceUpdates_systemEndpointUpdates_subscribedPlayerPaths_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "initWithNowPlayingUpdates:artworkUpdates:volumeUpdates:keyboardUpdates:outputDeviceUpdates:systemEndpointUpda tes:subscribedPlayerPaths:");
}

id objc_msgSend_initWithObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithObjects:");
}

id objc_msgSend_initWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOptions:");
}

id objc_msgSend_initWithOrigin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOrigin:");
}

id objc_msgSend_initWithOrigin_bundleIdentifier_player_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOrigin:bundleIdentifier:player:");
}

id objc_msgSend_initWithOrigin_client_player_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOrigin:client:player:");
}

id objc_msgSend_initWithOrigin_destinationOrigin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOrigin:destinationOrigin:");
}

id objc_msgSend_initWithOrigin_deviceInfo_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOrigin:deviceInfo:delegate:");
}

id objc_msgSend_initWithOrigin_deviceInfo_deviceInfoDataSource_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOrigin:deviceInfo:deviceInfoDataSource:delegate:");
}

id objc_msgSend_initWithOrigin_outputContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOrigin:outputContext:");
}

id objc_msgSend_initWithOriginClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOriginClient:");
}

id objc_msgSend_initWithOutputContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOutputContext:");
}

id objc_msgSend_initWithOutputContextCommunicationChannel_outputContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOutputContextCommunicationChannel:outputContext:");
}

id objc_msgSend_initWithOutputDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOutputDevice:");
}

id objc_msgSend_initWithOutputDevice_date_disableDuration_devicePlaybackSessionID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOutputDevice:date:disableDuration:devicePlaybackSessionID:");
}

id objc_msgSend_initWithOutputDevice_groupID_connectionType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOutputDevice:groupID:connectionType:");
}

id objc_msgSend_initWithOutputDevice_proxyOutputDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOutputDevice:proxyOutputDevice:");
}

id objc_msgSend_initWithOutputDeviceUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOutputDeviceUID:");
}

id objc_msgSend_initWithOutputDeviceUID_enabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOutputDeviceUID:enabled:");
}

id objc_msgSend_initWithOutputDeviceUID_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOutputDeviceUID:reason:");
}

id objc_msgSend_initWithOutputDeviceUID_type_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOutputDeviceUID:type:reason:");
}

id objc_msgSend_initWithOutputDeviceUIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOutputDeviceUIDs:");
}

id objc_msgSend_initWithOutputDeviceUIDs_outputDeviceGroupID_features_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOutputDeviceUIDs:outputDeviceGroupID:features:");
}

id objc_msgSend_initWithOutputDeviceUIDs_outputDeviceGroupID_features_details_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOutputDeviceUIDs:outputDeviceGroupID:features:details:");
}

id objc_msgSend_initWithOutputDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOutputDevices:");
}

id objc_msgSend_initWithOutputDevices_configuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOutputDevices:configuration:");
}

id objc_msgSend_initWithOutputDevices_requestID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOutputDevices:requestID:");
}

id objc_msgSend_initWithOwningClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOwningClient:");
}

id objc_msgSend_initWithPID_audioSessionID_mxSessionIDs_isEligible_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPID:audioSessionID:mxSessionIDs:isEligible:");
}

id objc_msgSend_initWithPairingData_status_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPairingData:status:");
}

id objc_msgSend_initWithParentGroupID_isAirplayActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithParentGroupID:isAirplayActive:");
}

id objc_msgSend_initWithPid_bundleID_audioSessionID_audioFormat_channelCount_bestAvailableContent_isEligibleForSpatialization_isSpatialized_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "initWithPid:bundleID:audioSessionID:audioFormat:channelCount:bestAvailableContent:isEligibleForSpatialization:isSpatialized:");
}

id objc_msgSend_initWithPlaybackQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPlaybackQueue:");
}

id objc_msgSend_initWithPlaybackSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPlaybackSession:");
}

id objc_msgSend_initWithPlaybackSession_request_forPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPlaybackSession:request:forPlayerPath:");
}

id objc_msgSend_initWithPlaybackState_date_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPlaybackState:date:");
}

id objc_msgSend_initWithPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPlayerPath:");
}

id objc_msgSend_initWithPlayerPath_lastPlayingDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPlayerPath:lastPlayingDate:");
}

id objc_msgSend_initWithPlayerPath_participants_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPlayerPath:participants:");
}

id objc_msgSend_initWithPrefixedURI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPrefixedURI:");
}

id objc_msgSend_initWithPrimaryBundleIdentifier_recommendationType_isASELocal_localOutputContextHasAirPlay_isSourceEndpointPlaying_isTargetEndpointPlaying_targetNowPlayingBundleIdentifier_targetEndpointContainsDiscoverableGroupLeader_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "initWithPrimaryBundleIdentifier:recommendationType:isASELocal:localOutputContextHasAirPlay:isSourceEndpointPl aying:isTargetEndpointPlaying:targetNowPlayingBundleIdentifier:targetEndpointContainsDiscoverableGroupLeader:");
}

id objc_msgSend_initWithPrimaryOutputDevice_members_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPrimaryOutputDevice:members:");
}

id objc_msgSend_initWithProcessIdentifier_bundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithProcessIdentifier:bundleIdentifier:");
}

id objc_msgSend_initWithProperties_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithProperties:");
}

id objc_msgSend_initWithProtobuf_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithProtobuf:");
}

id objc_msgSend_initWithProtobufData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithProtobufData:");
}

id objc_msgSend_initWithQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithQueue:");
}

id objc_msgSend_initWithRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRange:");
}

id objc_msgSend_initWithRecordingState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRecordingState:");
}

id objc_msgSend_initWithRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRequest:");
}

id objc_msgSend_initWithRequest_error_playerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRequest:error:playerPath:");
}

id objc_msgSend_initWithRequest_forPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRequest:forPlayerPath:");
}

id objc_msgSend_initWithRequest_playerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRequest:playerPath:");
}

id objc_msgSend_initWithRequestDetails_type_outputDeviceUIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRequestDetails:type:outputDeviceUIDs:");
}

id objc_msgSend_initWithRequestDetails_type_outputDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRequestDetails:type:outputDevices:");
}

id objc_msgSend_initWithRequestID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRequestID:");
}

id objc_msgSend_initWithResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithResponse:");
}

id objc_msgSend_initWithResult_format_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithResult:format:");
}

id objc_msgSend_initWithResult_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithResult:reason:");
}

id objc_msgSend_initWithRole_device_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRole:device:");
}

id objc_msgSend_initWithRoute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRoute:");
}

id objc_msgSend_initWithRoute_inputType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRoute:inputType:");
}

id objc_msgSend_initWithRoute_inputType_responseCallback_cancelCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRoute:inputType:responseCallback:cancelCallback:");
}

id objc_msgSend_initWithRoute_status_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRoute:status:");
}

id objc_msgSend_initWithRouteType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRouteType:");
}

id objc_msgSend_initWithRouteType_displayName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRouteType:displayName:");
}

id objc_msgSend_initWithRouteUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRouteUID:");
}

id objc_msgSend_initWithRoutingContextUID_multipleBuiltInDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRoutingContextUID:multipleBuiltInDevices:");
}

id objc_msgSend_initWithRoutingController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRoutingController:");
}

id objc_msgSend_initWithRoutingDataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRoutingDataSource:");
}

id objc_msgSend_initWithRoutingDataSource_hostedRoutingService_systemEndpointController_autoConnectionController_homeServer_avOutputDeviceAuthorizationSession_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "initWithRoutingDataSource:hostedRoutingService:systemEndpointController:autoConnectionController:homeServer:a vOutputDeviceAuthorizationSession:");
}

id objc_msgSend_initWithSceneProvidingProcess_configurationIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSceneProvidingProcess:configurationIdentifier:");
}

id objc_msgSend_initWithService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithService:");
}

id objc_msgSend_initWithServiceToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithServiceToken:");
}

id objc_msgSend_initWithServiceType_sourceOutputDeviceUID_sourceOutputDeviceName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithServiceType:sourceOutputDeviceUID:sourceOutputDeviceName:");
}

id objc_msgSend_initWithSessionManager_eligibilityMonitor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSessionManager:eligibilityMonitor:");
}

id objc_msgSend_initWithSource_destination_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSource:destination:");
}

id objc_msgSend_initWithStartDate_endDate_maxEvents_lastN_reversed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStartDate:endDate:maxEvents:lastN:reversed:");
}

id objc_msgSend_initWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithString:");
}

id objc_msgSend_initWithSuiteName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSuiteName:");
}

id objc_msgSend_initWithSystemEndpointController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSystemEndpointController:");
}

id objc_msgSend_initWithTimeIntervalSinceReferenceDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTimeIntervalSinceReferenceDate:");
}

id objc_msgSend_initWithTimeout_interruptionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTimeout:interruptionHandler:");
}

id objc_msgSend_initWithTimeout_reason_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTimeout:reason:handler:");
}

id objc_msgSend_initWithTimeout_reason_queue_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTimeout:reason:queue:handler:");
}

id objc_msgSend_initWithTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTitle:");
}

id objc_msgSend_initWithTransport_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTransport:");
}

id objc_msgSend_initWithType_pid_bundleID_name_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithType:pid:bundleID:name:");
}

id objc_msgSend_initWithType_pid_bundleID_name_invalidationHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithType:pid:bundleID:name:invalidationHandler:");
}

id objc_msgSend_initWithURI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithURI:");
}

id objc_msgSend_initWithUTF8String_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUTF8String:");
}

id objc_msgSend_initWithUUIDString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUUIDString:");
}

id objc_msgSend_initWithUnderlyingCodableMessage_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUnderlyingCodableMessage:error:");
}

id objc_msgSend_initWithUniqueIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUniqueIdentifier:");
}

id objc_msgSend_initWithUnresolvedPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUnresolvedPlayerPath:");
}

id objc_msgSend_initWithUserState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUserState:");
}

id objc_msgSend_initWithVersion_data_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithVersion:data:");
}

id objc_msgSend_initWithVolume_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithVolume:");
}

id objc_msgSend_initWithVolume_endpointUID_outputDeviceUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithVolume:endpointUID:outputDeviceUID:");
}

id objc_msgSend_initWithVolume_outputDeviceUID_details_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithVolume:outputDeviceUID:details:");
}

id objc_msgSend_initWithW_h_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithW:h:");
}

id objc_msgSend_initWithWithSendError_description_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithWithSendError:description:");
}

id objc_msgSend_initWithXPCConnection_label_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithXPCConnection:label:");
}

id objc_msgSend_initialStateFromSession_token_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initialStateFromSession:token:");
}

id objc_msgSend_initializeBundleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 initializeBundleIdentifier];
}

id objc_msgSend_initializeDestinationOriginWithSourceOriginData(void *a1, const char *a2, ...)
{
  return _[a1 initializeDestinationOriginWithSourceOriginData];
}

id objc_msgSend_initializeDisplayName(void *a1, const char *a2, ...)
{
  return _[a1 initializeDisplayName];
}

id objc_msgSend_initializeObserversAndState(void *a1, const char *a2, ...)
{
  return _[a1 initializeObserversAndState];
}

id objc_msgSend_initializeServer(void *a1, const char *a2, ...)
{
  return _[a1 initializeServer];
}

id objc_msgSend_initializeSessionIfNeededWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initializeSessionIfNeededWithCompletion:");
}

id objc_msgSend_initiator(void *a1, const char *a2, ...)
{
  return _[a1 initiator];
}

id objc_msgSend_inputType(void *a1, const char *a2, ...)
{
  return _[a1 inputType];
}

id objc_msgSend_insertObject_atIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertObject:atIndex:");
}

id objc_msgSend_insertText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertText:");
}

id objc_msgSend_installInvalidationObserversAndCheckForPostActivationInvalidations(void *a1, const char *a2, ...)
{
  return _[a1 installInvalidationObserversAndCheckForPostActivationInvalidations];
}

id objc_msgSend_intValue(void *a1, const char *a2, ...)
{
  return _[a1 intValue];
}

id objc_msgSend_integerValue(void *a1, const char *a2, ...)
{
  return _[a1 integerValue];
}

id objc_msgSend_interfaceWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "interfaceWithIdentifier:");
}

id objc_msgSend_interfaceWithProtocol_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "interfaceWithProtocol:");
}

id objc_msgSend_internalClients(void *a1, const char *a2, ...)
{
  return _[a1 internalClients];
}

id objc_msgSend_interruptBestStreamIfNecessaryToActivateStreamWithPlayerPath_reason_completion_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "interruptBestStreamIfNecessaryToActivateStreamWithPlayerPath:reason:completion:");
}

id objc_msgSend_interruptions(void *a1, const char *a2, ...)
{
  return _[a1 interruptions];
}

id objc_msgSend_intersectSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "intersectSet:");
}

id objc_msgSend_intersectsSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "intersectsSet:");
}

id objc_msgSend_invalidate(void *a1, const char *a2, ...)
{
  return _[a1 invalidate];
}

id objc_msgSend_invalidate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidate:");
}

id objc_msgSend_invalidateCriticalSectionAssertionForRequestID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidateCriticalSectionAssertionForRequestID:");
}

id objc_msgSend_invalidateInDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidateInDuration:");
}

id objc_msgSend_invalidatePlaybackTimeoutTimerWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidatePlaybackTimeoutTimerWithReason:");
}

id objc_msgSend_invalidateWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidateWithError:");
}

id objc_msgSend_invalidateWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidateWithReason:");
}

id objc_msgSend_invalidated(void *a1, const char *a2, ...)
{
  return _[a1 invalidated];
}

id objc_msgSend_invalidationHandler(void *a1, const char *a2, ...)
{
  return _[a1 invalidationHandler];
}

id objc_msgSend_invitationData(void *a1, const char *a2, ...)
{
  return _[a1 invitationData];
}

id objc_msgSend_invokeWithTarget_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invokeWithTarget:");
}

id objc_msgSend_irCandidateFor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "irCandidateFor:");
}

id objc_msgSend_isAVRCPCommand(void *a1, const char *a2, ...)
{
  return _[a1 isAVRCPCommand];
}

id objc_msgSend_isActive(void *a1, const char *a2, ...)
{
  return _[a1 isActive];
}

id objc_msgSend_isActiveStream(void *a1, const char *a2, ...)
{
  return _[a1 isActiveStream];
}

id objc_msgSend_isActivityActive(void *a1, const char *a2, ...)
{
  return _[a1 isActivityActive];
}

id objc_msgSend_isAdvertising(void *a1, const char *a2, ...)
{
  return _[a1 isAdvertising];
}

id objc_msgSend_isAirPlayActive(void *a1, const char *a2, ...)
{
  return _[a1 isAirPlayActive];
}

id objc_msgSend_isAirPlayReceiverSessionActive(void *a1, const char *a2, ...)
{
  return _[a1 isAirPlayReceiverSessionActive];
}

id objc_msgSend_isAllowedAccessToDataFromPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAllowedAccessToDataFromPlayerPath:");
}

id objc_msgSend_isAllowedToSendCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAllowedToSendCommand:");
}

id objc_msgSend_isAllowedToSendMessageType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAllowedToSendMessageType:");
}

id objc_msgSend_isAsserting(void *a1, const char *a2, ...)
{
  return _[a1 isAsserting];
}

id objc_msgSend_isAuxiliary(void *a1, const char *a2, ...)
{
  return _[a1 isAuxiliary];
}

id objc_msgSend_isAwareOfCluster_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAwareOfCluster:");
}

id objc_msgSend_isB238Device(void *a1, const char *a2, ...)
{
  return _[a1 isB238Device];
}

id objc_msgSend_isB620Device(void *a1, const char *a2, ...)
{
  return _[a1 isB620Device];
}

id objc_msgSend_isCallToAction(void *a1, const char *a2, ...)
{
  return _[a1 isCallToAction];
}

id objc_msgSend_isCancelled(void *a1, const char *a2, ...)
{
  return _[a1 isCancelled];
}

id objc_msgSend_isClusterLeader(void *a1, const char *a2, ...)
{
  return _[a1 isClusterLeader];
}

id objc_msgSend_isCompanion(void *a1, const char *a2, ...)
{
  return _[a1 isCompanion];
}

id objc_msgSend_isConnected(void *a1, const char *a2, ...)
{
  return _[a1 isConnected];
}

id objc_msgSend_isConservativeFiltered(void *a1, const char *a2, ...)
{
  return _[a1 isConservativeFiltered];
}

id objc_msgSend_isConservativelyFiltered(void *a1, const char *a2, ...)
{
  return _[a1 isConservativelyFiltered];
}

id objc_msgSend_isContextSensitive(void *a1, const char *a2, ...)
{
  return _[a1 isContextSensitive];
}

id objc_msgSend_isCrash(void *a1, const char *a2, ...)
{
  return _[a1 isCrash];
}

id objc_msgSend_isDestinationLocal(void *a1, const char *a2, ...)
{
  return _[a1 isDestinationLocal];
}

id objc_msgSend_isDirectConnectedToOutputDeviceUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDirectConnectedToOutputDeviceUID:");
}

id objc_msgSend_isEditing(void *a1, const char *a2, ...)
{
  return _[a1 isEditing];
}

id objc_msgSend_isEligible(void *a1, const char *a2, ...)
{
  return _[a1 isEligible];
}

id objc_msgSend_isEligibleForCallToAction(void *a1, const char *a2, ...)
{
  return _[a1 isEligibleForCallToAction];
}

id objc_msgSend_isEligibleForHostingGroupSessionExcludingAcknowledgements(void *a1, const char *a2, ...)
{
  return _[a1 isEligibleForHostingGroupSessionExcludingAcknowledgements];
}

id objc_msgSend_isEligibleForSpatialization(void *a1, const char *a2, ...)
{
  return _[a1 isEligibleForSpatialization];
}

id objc_msgSend_isEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isEnabled];
}

id objc_msgSend_isEntitledFor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEntitledFor:");
}

id objc_msgSend_isEqual_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqual:");
}

id objc_msgSend_isEqualToArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToArray:");
}

id objc_msgSend_isEqualToData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToData:");
}

id objc_msgSend_isEqualToDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToDate:");
}

id objc_msgSend_isEqualToDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToDictionary:");
}

id objc_msgSend_isEqualToOrderedSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToOrderedSet:");
}

id objc_msgSend_isEqualToSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToSet:");
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToString:");
}

id objc_msgSend_isEqualToUserState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToUserState:");
}

id objc_msgSend_isFirstLaunchAfterBoot(void *a1, const char *a2, ...)
{
  return _[a1 isFirstLaunchAfterBoot];
}

id objc_msgSend_isForegrounded(void *a1, const char *a2, ...)
{
  return _[a1 isForegrounded];
}

id objc_msgSend_isFullSubscriber(void *a1, const char *a2, ...)
{
  return _[a1 isFullSubscriber];
}

id objc_msgSend_isGizmo(void *a1, const char *a2, ...)
{
  return _[a1 isGizmo];
}

id objc_msgSend_isGroupLeader(void *a1, const char *a2, ...)
{
  return _[a1 isGroupLeader];
}

id objc_msgSend_isGroupable(void *a1, const char *a2, ...)
{
  return _[a1 isGroupable];
}

id objc_msgSend_isHomepodDemoApplication(void *a1, const char *a2, ...)
{
  return _[a1 isHomepodDemoApplication];
}

id objc_msgSend_isHosted(void *a1, const char *a2, ...)
{
  return _[a1 isHosted];
}

id objc_msgSend_isInCriticalSection(void *a1, const char *a2, ...)
{
  return _[a1 isInCriticalSection];
}

id objc_msgSend_isInformational(void *a1, const char *a2, ...)
{
  return _[a1 isInformational];
}

id objc_msgSend_isIntegratedDisplay(void *a1, const char *a2, ...)
{
  return _[a1 isIntegratedDisplay];
}

id objc_msgSend_isJetsam(void *a1, const char *a2, ...)
{
  return _[a1 isJetsam];
}

id objc_msgSend_isJoiningSession(void *a1, const char *a2, ...)
{
  return _[a1 isJoiningSession];
}

id objc_msgSend_isLegacyNowPlayingInfoRequest(void *a1, const char *a2, ...)
{
  return _[a1 isLegacyNowPlayingInfoRequest];
}

id objc_msgSend_isLocal(void *a1, const char *a2, ...)
{
  return _[a1 isLocal];
}

id objc_msgSend_isLocalDevice(void *a1, const char *a2, ...)
{
  return _[a1 isLocalDevice];
}

id objc_msgSend_isLocalEndpoint(void *a1, const char *a2, ...)
{
  return _[a1 isLocalEndpoint];
}

id objc_msgSend_isLocalOrigin(void *a1, const char *a2, ...)
{
  return _[a1 isLocalOrigin];
}

id objc_msgSend_isLocallyHosted(void *a1, const char *a2, ...)
{
  return _[a1 isLocallyHosted];
}

id objc_msgSend_isLockScreenControl(void *a1, const char *a2, ...)
{
  return _[a1 isLockScreenControl];
}

id objc_msgSend_isLockScreenRecommendationActive(void *a1, const char *a2, ...)
{
  return _[a1 isLockScreenRecommendationActive];
}

id objc_msgSend_isLockScreenWidgetActive(void *a1, const char *a2, ...)
{
  return _[a1 isLockScreenWidgetActive];
}

id objc_msgSend_isLockScreenWidgetVisible(void *a1, const char *a2, ...)
{
  return _[a1 isLockScreenWidgetVisible];
}

id objc_msgSend_isLowPowerMode(void *a1, const char *a2, ...)
{
  return _[a1 isLowPowerMode];
}

id objc_msgSend_isManateeEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isManateeEnabled];
}

id objc_msgSend_isMediaRemoteDaemon(void *a1, const char *a2, ...)
{
  return _[a1 isMediaRemoteDaemon];
}

id objc_msgSend_isMemberOfActiveSystemEndpoint(void *a1, const char *a2, ...)
{
  return _[a1 isMemberOfActiveSystemEndpoint];
}

id objc_msgSend_isMinor(void *a1, const char *a2, ...)
{
  return _[a1 isMinor];
}

id objc_msgSend_isMinorAccountHolder(void *a1, const char *a2, ...)
{
  return _[a1 isMinorAccountHolder];
}

id objc_msgSend_isMultiplayerAware(void *a1, const char *a2, ...)
{
  return _[a1 isMultiplayerAware];
}

id objc_msgSend_isMultiplayerHost(void *a1, const char *a2, ...)
{
  return _[a1 isMultiplayerHost];
}

id objc_msgSend_isMuted(void *a1, const char *a2, ...)
{
  return _[a1 isMuted];
}

id objc_msgSend_isNavigational(void *a1, const char *a2, ...)
{
  return _[a1 isNavigational];
}

id objc_msgSend_isOutputContextInUse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isOutputContextInUse:");
}

id objc_msgSend_isPairedDeviceSync(void *a1, const char *a2, ...)
{
  return _[a1 isPairedDeviceSync];
}

id objc_msgSend_isPairingAllowed(void *a1, const char *a2, ...)
{
  return _[a1 isPairingAllowed];
}

id objc_msgSend_isPersonalRoute(void *a1, const char *a2, ...)
{
  return _[a1 isPersonalRoute];
}

id objc_msgSend_isPicked(void *a1, const char *a2, ...)
{
  return _[a1 isPicked];
}

id objc_msgSend_isPictureInPictureEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isPictureInPictureEnabled];
}

id objc_msgSend_isPlaying(void *a1, const char *a2, ...)
{
  return _[a1 isPlaying];
}

id objc_msgSend_isPresentingConnectedPill(void *a1, const char *a2, ...)
{
  return _[a1 isPresentingConnectedPill];
}

id objc_msgSend_isPresentingProximityCard(void *a1, const char *a2, ...)
{
  return _[a1 isPresentingProximityCard];
}

id objc_msgSend_isPrimaryLocalDevice(void *a1, const char *a2, ...)
{
  return _[a1 isPrimaryLocalDevice];
}

id objc_msgSend_isProxyAdvertising(void *a1, const char *a2, ...)
{
  return _[a1 isProxyAdvertising];
}

id objc_msgSend_isProxyGroupPlayer(void *a1, const char *a2, ...)
{
  return _[a1 isProxyGroupPlayer];
}

id objc_msgSend_isRemoteControllable(void *a1, const char *a2, ...)
{
  return _[a1 isRemoteControllable];
}

id objc_msgSend_isRemoteEndpoint(void *a1, const char *a2, ...)
{
  return _[a1 isRemoteEndpoint];
}

id objc_msgSend_isResolved(void *a1, const char *a2, ...)
{
  return _[a1 isResolved];
}

id objc_msgSend_isRoutePlaying_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isRoutePlaying:");
}

id objc_msgSend_isScreening(void *a1, const char *a2, ...)
{
  return _[a1 isScreening];
}

id objc_msgSend_isSilentPrimary(void *a1, const char *a2, ...)
{
  return _[a1 isSilentPrimary];
}

id objc_msgSend_isSmartDevice(void *a1, const char *a2, ...)
{
  return _[a1 isSmartDevice];
}

id objc_msgSend_isSpatialized(void *a1, const char *a2, ...)
{
  return _[a1 isSpatialized];
}

id objc_msgSend_isSpeakerRoute(void *a1, const char *a2, ...)
{
  return _[a1 isSpeakerRoute];
}

id objc_msgSend_isStartingNowPlayingSession(void *a1, const char *a2, ...)
{
  return _[a1 isStartingNowPlayingSession];
}

id objc_msgSend_isStartingSession(void *a1, const char *a2, ...)
{
  return _[a1 isStartingSession];
}

id objc_msgSend_isSubsetOfSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSubsetOfSet:");
}

id objc_msgSend_isSupported(void *a1, const char *a2, ...)
{
  return _[a1 isSupported];
}

id objc_msgSend_isSupported_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSupported:");
}

id objc_msgSend_isSystemMediaApplication(void *a1, const char *a2, ...)
{
  return _[a1 isSystemMediaApplication];
}

id objc_msgSend_isSystemPodcastsApplication(void *a1, const char *a2, ...)
{
  return _[a1 isSystemPodcastsApplication];
}

id objc_msgSend_isThrottled(void *a1, const char *a2, ...)
{
  return _[a1 isThrottled];
}

id objc_msgSend_isUIApplicationElement(void *a1, const char *a2, ...)
{
  return _[a1 isUIApplicationElement];
}

id objc_msgSend_isUpdatingLowPowerMode(void *a1, const char *a2, ...)
{
  return _[a1 isUpdatingLowPowerMode];
}

id objc_msgSend_isUsingJSONProtocol(void *a1, const char *a2, ...)
{
  return _[a1 isUsingJSONProtocol];
}

id objc_msgSend_isUsingWifi(void *a1, const char *a2, ...)
{
  return _[a1 isUsingWifi];
}

id objc_msgSend_isUsingWiredEthernet(void *a1, const char *a2, ...)
{
  return _[a1 isUsingWiredEthernet];
}

id objc_msgSend_isValid(void *a1, const char *a2, ...)
{
  return _[a1 isValid];
}

id objc_msgSend_isVideoApp(void *a1, const char *a2, ...)
{
  return _[a1 isVideoApp];
}

id objc_msgSend_isWaking(void *a1, const char *a2, ...)
{
  return _[a1 isWaking];
}

id objc_msgSend_joinGroupSessionViaEquivalentWHAEndpoint_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "joinGroupSessionViaEquivalentWHAEndpoint:completion:");
}

id objc_msgSend_joinGroupSessionWithNearbyGroup_hostSigningKey_joinToken_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "joinGroupSessionWithNearbyGroup:hostSigningKey:joinToken:completion:");
}

id objc_msgSend_joinGroupSessionWithToken_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "joinGroupSessionWithToken:completion:");
}

id objc_msgSend_joinSessionWithNearbyGroup_asUser_hostSigningKey_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "joinSessionWithNearbyGroup:asUser:hostSigningKey:delegate:");
}

id objc_msgSend_joinToken(void *a1, const char *a2, ...)
{
  return _[a1 joinToken];
}

id objc_msgSend_joinURLString(void *a1, const char *a2, ...)
{
  return _[a1 joinURLString];
}

id objc_msgSend_joiningStateForEligibilityStatus_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "joiningStateForEligibilityStatus:reason:");
}

id objc_msgSend_keepAlive(void *a1, const char *a2, ...)
{
  return _[a1 keepAlive];
}

id objc_msgSend_key(void *a1, const char *a2, ...)
{
  return _[a1 key];
}

id objc_msgSend_keyEnumerator(void *a1, const char *a2, ...)
{
  return _[a1 keyEnumerator];
}

id objc_msgSend_keyboardOutput(void *a1, const char *a2, ...)
{
  return _[a1 keyboardOutput];
}

id objc_msgSend_keyboardUpdates(void *a1, const char *a2, ...)
{
  return _[a1 keyboardUpdates];
}

id objc_msgSend_label(void *a1, const char *a2, ...)
{
  return _[a1 label];
}

id objc_msgSend_lastBootUUID(void *a1, const char *a2, ...)
{
  return _[a1 lastBootUUID];
}

id objc_msgSend_lastConnectionError(void *a1, const char *a2, ...)
{
  return _[a1 lastConnectionError];
}

id objc_msgSend_lastDonatedPickerChoice(void *a1, const char *a2, ...)
{
  return _[a1 lastDonatedPickerChoice];
}

id objc_msgSend_lastFetchAttemptToken(void *a1, const char *a2, ...)
{
  return _[a1 lastFetchAttemptToken];
}

id objc_msgSend_lastKnownBluetoothAddress(void *a1, const char *a2, ...)
{
  return _[a1 lastKnownBluetoothAddress];
}

id objc_msgSend_lastObject(void *a1, const char *a2, ...)
{
  return _[a1 lastObject];
}

id objc_msgSend_lastPathComponent(void *a1, const char *a2, ...)
{
  return _[a1 lastPathComponent];
}

id objc_msgSend_lastPlaybackStates(void *a1, const char *a2, ...)
{
  return _[a1 lastPlaybackStates];
}

id objc_msgSend_lastPlayingDate(void *a1, const char *a2, ...)
{
  return _[a1 lastPlayingDate];
}

id objc_msgSend_lastPlayingDateForPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastPlayingDateForPlayerPath:");
}

id objc_msgSend_lastPlayingDeviceThresholdInterval(void *a1, const char *a2, ...)
{
  return _[a1 lastPlayingDeviceThresholdInterval];
}

id objc_msgSend_lastReportedClientIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 lastReportedClientIdentifiers];
}

id objc_msgSend_lastSessionEventDate(void *a1, const char *a2, ...)
{
  return _[a1 lastSessionEventDate];
}

id objc_msgSend_lastSupportedMessageType(void *a1, const char *a2, ...)
{
  return _[a1 lastSupportedMessageType];
}

id objc_msgSend_lastUnusedAutoRoute(void *a1, const char *a2, ...)
{
  return _[a1 lastUnusedAutoRoute];
}

id objc_msgSend_lastUnusedAutoRouteBundleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 lastUnusedAutoRouteBundleIdentifier];
}

id objc_msgSend_laterDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "laterDate:");
}

id objc_msgSend_launch(void *a1, const char *a2, ...)
{
  return _[a1 launch];
}

id objc_msgSend_launchApplicationTimeoutInterval(void *a1, const char *a2, ...)
{
  return _[a1 launchApplicationTimeoutInterval];
}

id objc_msgSend_layoutMonitor_didUpdateDisplayLayout_withContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layoutMonitor:didUpdateDisplayLayout:withContext:");
}

id objc_msgSend_layoutRole(void *a1, const char *a2, ...)
{
  return _[a1 layoutRole];
}

id objc_msgSend_leader(void *a1, const char *a2, ...)
{
  return _[a1 leader];
}

id objc_msgSend_leaderDeviceInfo(void *a1, const char *a2, ...)
{
  return _[a1 leaderDeviceInfo];
}

id objc_msgSend_leaderParticipant(void *a1, const char *a2, ...)
{
  return _[a1 leaderParticipant];
}

id objc_msgSend_leaveRemoteControlGroupSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "leaveRemoteControlGroupSession:");
}

id objc_msgSend_leaveSessionIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 leaveSessionIfNeeded];
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return _[a1 length];
}

id objc_msgSend_lifetimeController(void *a1, const char *a2, ...)
{
  return _[a1 lifetimeController];
}

id objc_msgSend_listener(void *a1, const char *a2, ...)
{
  return _[a1 listener];
}

id objc_msgSend_listenerForSessionWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "listenerForSessionWithIdentifier:");
}

id objc_msgSend_listeningMode(void *a1, const char *a2, ...)
{
  return _[a1 listeningMode];
}

id objc_msgSend_loadFromStorage(void *a1, const char *a2, ...)
{
  return _[a1 loadFromStorage];
}

id objc_msgSend_loadLocalIdentities(void *a1, const char *a2, ...)
{
  return _[a1 loadLocalIdentities];
}

id objc_msgSend_loadMediaServerState(void *a1, const char *a2, ...)
{
  return _[a1 loadMediaServerState];
}

id objc_msgSend_loadMediaServerStateWithController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadMediaServerStateWithController:");
}

id objc_msgSend_localActiveClientBundleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 localActiveClientBundleIdentifier];
}

id objc_msgSend_localActiveIdentity(void *a1, const char *a2, ...)
{
  return _[a1 localActiveIdentity];
}

id objc_msgSend_localActivePlayerClient(void *a1, const char *a2, ...)
{
  return _[a1 localActivePlayerClient];
}

id objc_msgSend_localActivePlayerIsPlaying(void *a1, const char *a2, ...)
{
  return _[a1 localActivePlayerIsPlaying];
}

id objc_msgSend_localActivePlayerPath(void *a1, const char *a2, ...)
{
  return _[a1 localActivePlayerPath];
}

id objc_msgSend_localActiveUserState(void *a1, const char *a2, ...)
{
  return _[a1 localActiveUserState];
}

id objc_msgSend_localClient(void *a1, const char *a2, ...)
{
  return _[a1 localClient];
}

id objc_msgSend_localDeviceInfo(void *a1, const char *a2, ...)
{
  return _[a1 localDeviceInfo];
}

id objc_msgSend_localDeviceUID(void *a1, const char *a2, ...)
{
  return _[a1 localDeviceUID];
}

id objc_msgSend_localEndpoint(void *a1, const char *a2, ...)
{
  return _[a1 localEndpoint];
}

id objc_msgSend_localEndpointConnection(void *a1, const char *a2, ...)
{
  return _[a1 localEndpointConnection];
}

id objc_msgSend_localIdentity(void *a1, const char *a2, ...)
{
  return _[a1 localIdentity];
}

id objc_msgSend_localIdentityMap(void *a1, const char *a2, ...)
{
  return _[a1 localIdentityMap];
}

id objc_msgSend_localLastPlayingDate(void *a1, const char *a2, ...)
{
  return _[a1 localLastPlayingDate];
}

id objc_msgSend_localMusicIdentity(void *a1, const char *a2, ...)
{
  return _[a1 localMusicIdentity];
}

id objc_msgSend_localNowPlayingClient(void *a1, const char *a2, ...)
{
  return _[a1 localNowPlayingClient];
}

id objc_msgSend_localNowPlayingController(void *a1, const char *a2, ...)
{
  return _[a1 localNowPlayingController];
}

id objc_msgSend_localOrigin(void *a1, const char *a2, ...)
{
  return _[a1 localOrigin];
}

id objc_msgSend_localOriginClient(void *a1, const char *a2, ...)
{
  return _[a1 localOriginClient];
}

id objc_msgSend_localOutputContextHasDeviceOfType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localOutputContextHasDeviceOfType:");
}

id objc_msgSend_localParticipant(void *a1, const char *a2, ...)
{
  return _[a1 localParticipant];
}

id objc_msgSend_localPlaybackState(void *a1, const char *a2, ...)
{
  return _[a1 localPlaybackState];
}

id objc_msgSend_localPlayerPath(void *a1, const char *a2, ...)
{
  return _[a1 localPlayerPath];
}

id objc_msgSend_localPlayersForXpcClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localPlayersForXpcClient:");
}

id objc_msgSend_localRouteController(void *a1, const char *a2, ...)
{
  return _[a1 localRouteController];
}

id objc_msgSend_localSystemEndpoint(void *a1, const char *a2, ...)
{
  return _[a1 localSystemEndpoint];
}

id objc_msgSend_localUserIdentities(void *a1, const char *a2, ...)
{
  return _[a1 localUserIdentities];
}

id objc_msgSend_localUserStates(void *a1, const char *a2, ...)
{
  return _[a1 localUserStates];
}

id objc_msgSend_localizeDestinationOrigin_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizeDestinationOrigin:completion:");
}

id objc_msgSend_localizeDestinationPlayerPath_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizeDestinationPlayerPath:completion:");
}

id objc_msgSend_localizedDescription(void *a1, const char *a2, ...)
{
  return _[a1 localizedDescription];
}

id objc_msgSend_localizedFailureReason(void *a1, const char *a2, ...)
{
  return _[a1 localizedFailureReason];
}

id objc_msgSend_localizedModelName(void *a1, const char *a2, ...)
{
  return _[a1 localizedModelName];
}

id objc_msgSend_localizedName(void *a1, const char *a2, ...)
{
  return _[a1 localizedName];
}

id objc_msgSend_localizedSessionName(void *a1, const char *a2, ...)
{
  return _[a1 localizedSessionName];
}

id objc_msgSend_location(void *a1, const char *a2, ...)
{
  return _[a1 location];
}

id objc_msgSend_lock(void *a1, const char *a2, ...)
{
  return _[a1 lock];
}

id objc_msgSend_lockScreenController(void *a1, const char *a2, ...)
{
  return _[a1 lockScreenController];
}

id objc_msgSend_lockScreenForegrounded(void *a1, const char *a2, ...)
{
  return _[a1 lockScreenForegrounded];
}

id objc_msgSend_lockScreenPlatterActive(void *a1, const char *a2, ...)
{
  return _[a1 lockScreenPlatterActive];
}

id objc_msgSend_lockScreenPlatterHasContent(void *a1, const char *a2, ...)
{
  return _[a1 lockScreenPlatterHasContent];
}

id objc_msgSend_lockScreenRoutingController(void *a1, const char *a2, ...)
{
  return _[a1 lockScreenRoutingController];
}

id objc_msgSend_lockScreenUIControllerWithDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lockScreenUIControllerWithDelegate:");
}

id objc_msgSend_lockScreenVisible(void *a1, const char *a2, ...)
{
  return _[a1 lockScreenVisible];
}

id objc_msgSend_logEvent_withInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logEvent:withInfo:");
}

id objc_msgSend_logMessage_label_deviceInfo_protocolMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logMessage:label:deviceInfo:protocolMessage:");
}

id objc_msgSend_logOutputDevicesChanged_oldOutputDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logOutputDevicesChanged:oldOutputDevices:");
}

id objc_msgSend_logicalDeviceID(void *a1, const char *a2, ...)
{
  return _[a1 logicalDeviceID];
}

id objc_msgSend_logicalOutputDeviceCount(void *a1, const char *a2, ...)
{
  return _[a1 logicalOutputDeviceCount];
}

id objc_msgSend_loginID(void *a1, const char *a2, ...)
{
  return _[a1 loginID];
}

id objc_msgSend_longLongValue(void *a1, const char *a2, ...)
{
  return _[a1 longLongValue];
}

id objc_msgSend_lowPowerDeferralTimer(void *a1, const char *a2, ...)
{
  return _[a1 lowPowerDeferralTimer];
}

id objc_msgSend_lowPowerError(void *a1, const char *a2, ...)
{
  return _[a1 lowPowerError];
}

id objc_msgSend_lowercaseString(void *a1, const char *a2, ...)
{
  return _[a1 lowercaseString];
}

id objc_msgSend_mainBundle(void *a1, const char *a2, ...)
{
  return _[a1 mainBundle];
}

id objc_msgSend_maintainReason(void *a1, const char *a2, ...)
{
  return _[a1 maintainReason];
}

id objc_msgSend_makeEndpointWithOutputDeviceUIDs_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeEndpointWithOutputDeviceUIDs:options:");
}

id objc_msgSend_makeEndpointWithOutputDevices_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeEndpointWithOutputDevices:options:");
}

id objc_msgSend_makeTransientExternalDeviceToOutputDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeTransientExternalDeviceToOutputDevice:");
}

id objc_msgSend_managedConfigurationDeviceIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 managedConfigurationDeviceIdentifier];
}

id objc_msgSend_manager_activeSessionDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "manager:activeSessionDidChange:");
}

id objc_msgSend_manager_didEndHostedGroupSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "manager:didEndHostedGroupSession:");
}

id objc_msgSend_manager_didJoinRemoteGroupSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "manager:didJoinRemoteGroupSession:");
}

id objc_msgSend_manager_didLeaveRemoteGroupSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "manager:didLeaveRemoteGroupSession:");
}

id objc_msgSend_manager_didStartHostedGroupSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "manager:didStartHostedGroupSession:");
}

id objc_msgSend_manager_discoveredSessionsDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "manager:discoveredSessionsDidChange:");
}

id objc_msgSend_manateeAvailable(void *a1, const char *a2, ...)
{
  return _[a1 manateeAvailable];
}

id objc_msgSend_markAsUsed(void *a1, const char *a2, ...)
{
  return _[a1 markAsUsed];
}

id objc_msgSend_markParticipantAsGuestIfNeeded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "markParticipantAsGuestIfNeeded:");
}

id objc_msgSend_match_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "match:");
}

id objc_msgSend_matchesUniqueIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "matchesUniqueIdentifier:");
}

id objc_msgSend_maxStreamCapacity(void *a1, const char *a2, ...)
{
  return _[a1 maxStreamCapacity];
}

id objc_msgSend_maxTransactionMemorySize(void *a1, const char *a2, ...)
{
  return _[a1 maxTransactionMemorySize];
}

id objc_msgSend_maybeCommitLocalDeviceWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "maybeCommitLocalDeviceWithReason:");
}

id objc_msgSend_maybePostDistributedNotifications(void *a1, const char *a2, ...)
{
  return _[a1 maybePostDistributedNotifications];
}

id objc_msgSend_mediaAccountHostingState(void *a1, const char *a2, ...)
{
  return _[a1 mediaAccountHostingState];
}

id objc_msgSend_mediaAccountJoiningState(void *a1, const char *a2, ...)
{
  return _[a1 mediaAccountJoiningState];
}

id objc_msgSend_mediaActivityManager(void *a1, const char *a2, ...)
{
  return _[a1 mediaActivityManager];
}

id objc_msgSend_mediaApplicationsInFocus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mediaApplicationsInFocus:");
}

id objc_msgSend_mediaBundlesInFocus(void *a1, const char *a2, ...)
{
  return _[a1 mediaBundlesInFocus];
}

id objc_msgSend_mediaRecentlyPlayedInterval(void *a1, const char *a2, ...)
{
  return _[a1 mediaRecentlyPlayedInterval];
}

id objc_msgSend_mediaRemoteServiceProxy(void *a1, const char *a2, ...)
{
  return _[a1 mediaRemoteServiceProxy];
}

id objc_msgSend_mediaRouteIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 mediaRouteIdentifier];
}

id objc_msgSend_mediaServerController(void *a1, const char *a2, ...)
{
  return _[a1 mediaServerController];
}

id objc_msgSend_mediaType(void *a1, const char *a2, ...)
{
  return _[a1 mediaType];
}

id objc_msgSend_mediaUserStates(void *a1, const char *a2, ...)
{
  return _[a1 mediaUserStates];
}

id objc_msgSend_members(void *a1, const char *a2, ...)
{
  return _[a1 members];
}

id objc_msgSend_mergeFrom_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mergeFrom:");
}

id objc_msgSend_mergingVolumeFrom_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mergingVolumeFrom:");
}

id objc_msgSend_message(void *a1, const char *a2, ...)
{
  return _[a1 message];
}

id objc_msgSend_messageHandler(void *a1, const char *a2, ...)
{
  return _[a1 messageHandler];
}

id objc_msgSend_messageProxy(void *a1, const char *a2, ...)
{
  return _[a1 messageProxy];
}

id objc_msgSend_messageQueue(void *a1, const char *a2, ...)
{
  return _[a1 messageQueue];
}

id objc_msgSend_metadata(void *a1, const char *a2, ...)
{
  return _[a1 metadata];
}

id objc_msgSend_migrateToEndpointOrModifyTopology_migrationRequest_topologyModificationRequest_withReplyQueue_completion_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "migrateToEndpointOrModifyTopology:migrationRequest:topologyModificationRequest:withReplyQueue:completion:");
}

id objc_msgSend_minimalReadableDescription(void *a1, const char *a2, ...)
{
  return _[a1 minimalReadableDescription];
}

id objc_msgSend_minimumSupportedHangdogApplicationVersion(void *a1, const char *a2, ...)
{
  return _[a1 minimumSupportedHangdogApplicationVersion];
}

id objc_msgSend_minimumSupportedProtocolVersion(void *a1, const char *a2, ...)
{
  return _[a1 minimumSupportedProtocolVersion];
}

id objc_msgSend_minusSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "minusSet:");
}

id objc_msgSend_mode(void *a1, const char *a2, ...)
{
  return _[a1 mode];
}

id objc_msgSend_modelID(void *a1, const char *a2, ...)
{
  return _[a1 modelID];
}

id objc_msgSend_modelIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 modelIdentifier];
}

id objc_msgSend_modelName(void *a1, const char *a2, ...)
{
  return _[a1 modelName];
}

id objc_msgSend_modifyOutputContext(void *a1, const char *a2, ...)
{
  return _[a1 modifyOutputContext];
}

id objc_msgSend_modifyTopologyWithRequest_withReplyQueue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "modifyTopologyWithRequest:withReplyQueue:completion:");
}

id objc_msgSend_modifyWithOutputContext_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "modifyWithOutputContext:queue:completion:");
}

id objc_msgSend_monitorForDeath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "monitorForDeath:");
}

id objc_msgSend_monitorWithConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "monitorWithConfiguration:");
}

id objc_msgSend_mostRecentEvent(void *a1, const char *a2, ...)
{
  return _[a1 mostRecentEvent];
}

id objc_msgSend_mostRecentEventReason(void *a1, const char *a2, ...)
{
  return _[a1 mostRecentEventReason];
}

id objc_msgSend_mostRecentPlayers(void *a1, const char *a2, ...)
{
  return _[a1 mostRecentPlayers];
}

id objc_msgSend_mostRecentSelectionReason(void *a1, const char *a2, ...)
{
  return _[a1 mostRecentSelectionReason];
}

id objc_msgSend_mrRelayRemoteControlService_didAcceptConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mrRelayRemoteControlService:didAcceptConnection:");
}

id objc_msgSend_mr_activeGroupSessionAccount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mr_activeGroupSessionAccount");
}

id objc_msgSend_mr_all_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mr_all:");
}

id objc_msgSend_mr_allAirPlayDevices(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mr_allAirPlayDevices");
}

id objc_msgSend_mr_allOutputDevices(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mr_allOutputDevices");
}

id objc_msgSend_mr_any_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mr_any:");
}

id objc_msgSend_mr_compactMap_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mr_compactMap:");
}

id objc_msgSend_mr_containsVideoOutputDevice(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mr_containsVideoOutputDevice");
}

id objc_msgSend_mr_deviceInfo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mr_deviceInfo");
}

id objc_msgSend_mr_errorByEnvelopingWithMRError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mr_errorByEnvelopingWithMRError:");
}

id objc_msgSend_mr_filter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mr_filter:");
}

id objc_msgSend_mr_first_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mr_first:");
}

id objc_msgSend_mr_formattedDebugDescription(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mr_formattedDebugDescription");
}

id objc_msgSend_mr_map_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mr_map:");
}

id objc_msgSend_mr_origin(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mr_origin");
}

id objc_msgSend_mr_previousDeviceInfo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mr_previousDeviceInfo");
}

id objc_msgSend_mr_redactClusterMembers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mr_redactClusterMembers");
}

id objc_msgSend_mr_sharedGroupSessionService(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mr_sharedGroupSessionService");
}

id objc_msgSend_mr_sharedGroupSessionServiceName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mr_sharedGroupSessionServiceName");
}

id objc_msgSend_mr_sharedIDSService(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mr_sharedIDSService");
}

id objc_msgSend_msv_compactMap_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "msv_compactMap:");
}

id objc_msgSend_msv_errorWithDomain_code_debugDescription_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "msv_errorWithDomain:code:debugDescription:");
}

id objc_msgSend_msv_errorWithDomain_code_underlyingError_debugDescription_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "msv_errorWithDomain:code:underlyingError:debugDescription:");
}

id objc_msgSend_msv_filter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "msv_filter:");
}

id objc_msgSend_msv_firstWhere_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "msv_firstWhere:");
}

id objc_msgSend_msv_flatMap_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "msv_flatMap:");
}

id objc_msgSend_msv_map_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "msv_map:");
}

id objc_msgSend_msv_suffixFromIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "msv_suffixFromIndex:");
}

id objc_msgSend_multipleBuiltInDevices(void *a1, const char *a2, ...)
{
  return _[a1 multipleBuiltInDevices];
}

id objc_msgSend_music(void *a1, const char *a2, ...)
{
  return _[a1 music];
}

id objc_msgSend_musicApplicationBundleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 musicApplicationBundleIdentifier];
}

id objc_msgSend_mutableCopy(void *a1, const char *a2, ...)
{
  return _[a1 mutableCopy];
}

id objc_msgSend_muteOutputDeviceVolume_outputDevice_details_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "muteOutputDeviceVolume:outputDevice:details:queue:completion:");
}

id objc_msgSend_muteOutputDeviceVolume_outputDeviceUID_details_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "muteOutputDeviceVolume:outputDeviceUID:details:queue:completion:");
}

id objc_msgSend_muteUntilFinished(void *a1, const char *a2, ...)
{
  return _[a1 muteUntilFinished];
}

id objc_msgSend_muteVolume_outputDeviceUID_details_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "muteVolume:outputDeviceUID:details:");
}

id objc_msgSend_mxSessionIDs(void *a1, const char *a2, ...)
{
  return _[a1 mxSessionIDs];
}

id objc_msgSend_name(void *a1, const char *a2, ...)
{
  return _[a1 name];
}

id objc_msgSend_nativeOutputDevice(void *a1, const char *a2, ...)
{
  return _[a1 nativeOutputDevice];
}

id objc_msgSend_nearbyDeviceIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 nearbyDeviceIdentifiers];
}

id objc_msgSend_nearbyDevices(void *a1, const char *a2, ...)
{
  return _[a1 nearbyDevices];
}

id objc_msgSend_nearbyDevicesIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 nearbyDevicesIdentifiers];
}

id objc_msgSend_nearbyGroup(void *a1, const char *a2, ...)
{
  return _[a1 nearbyGroup];
}

id objc_msgSend_nearbyGroupSessionDismissed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nearbyGroupSessionDismissed:");
}

id objc_msgSend_nearbyInvitation(void *a1, const char *a2, ...)
{
  return _[a1 nearbyInvitation];
}

id objc_msgSend_needsAcknowledgement(void *a1, const char *a2, ...)
{
  return _[a1 needsAcknowledgement];
}

id objc_msgSend_needsCommandRedirection(void *a1, const char *a2, ...)
{
  return _[a1 needsCommandRedirection];
}

id objc_msgSend_needsMXApplications(void *a1, const char *a2, ...)
{
  return _[a1 needsMXApplications];
}

id objc_msgSend_networkIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 networkIdentifier];
}

id objc_msgSend_networkMonitor(void *a1, const char *a2, ...)
{
  return _[a1 networkMonitor];
}

id objc_msgSend_newHandleWithDefinition_configurationContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newHandleWithDefinition:configurationContext:");
}

id objc_msgSend_nodes(void *a1, const char *a2, ...)
{
  return _[a1 nodes];
}

id objc_msgSend_notAdvertisingReason(void *a1, const char *a2, ...)
{
  return _[a1 notAdvertisingReason];
}

id objc_msgSend_notProxyAdvertisingReason(void *a1, const char *a2, ...)
{
  return _[a1 notProxyAdvertisingReason];
}

id objc_msgSend_noteUserPresenceDetected(void *a1, const char *a2, ...)
{
  return _[a1 noteUserPresenceDetected];
}

id objc_msgSend_notification(void *a1, const char *a2, ...)
{
  return _[a1 notification];
}

id objc_msgSend_notificationClient(void *a1, const char *a2, ...)
{
  return _[a1 notificationClient];
}

id objc_msgSend_notificationOperationQueue(void *a1, const char *a2, ...)
{
  return _[a1 notificationOperationQueue];
}

id objc_msgSend_notificationQueue(void *a1, const char *a2, ...)
{
  return _[a1 notificationQueue];
}

id objc_msgSend_notificationRequiresTaskAssertionForPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notificationRequiresTaskAssertionForPlayerPath:");
}

id objc_msgSend_notificationToken(void *a1, const char *a2, ...)
{
  return _[a1 notificationToken];
}

id objc_msgSend_notifications(void *a1, const char *a2, ...)
{
  return _[a1 notifications];
}

id objc_msgSend_notifyActiveSessionStateChanged(void *a1, const char *a2, ...)
{
  return _[a1 notifyActiveSessionStateChanged];
}

id objc_msgSend_notifyArtworkChangedForContentItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyArtworkChangedForContentItems:");
}

id objc_msgSend_notifyDelegate(void *a1, const char *a2, ...)
{
  return _[a1 notifyDelegate];
}

id objc_msgSend_notifyDelegateOfSleepWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyDelegateOfSleepWithCompletion:");
}

id objc_msgSend_notifyDelegateOfWake(void *a1, const char *a2, ...)
{
  return _[a1 notifyDelegateOfWake];
}

id objc_msgSend_notifyDevicesInHomeThatPlaybackStarted(void *a1, const char *a2, ...)
{
  return _[a1 notifyDevicesInHomeThatPlaybackStarted];
}

id objc_msgSend_notifyDiscoveryOutputDevicesChanged_forConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyDiscoveryOutputDevicesChanged:forConfiguration:");
}

id objc_msgSend_notifyEndpointsChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyEndpointsChanged:");
}

id objc_msgSend_notifyObserversWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyObserversWithBlock:");
}

id objc_msgSend_notifyOutputDevicesChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyOutputDevicesChanged:");
}

id objc_msgSend_now(void *a1, const char *a2, ...)
{
  return _[a1 now];
}

id objc_msgSend_nowPlayingActivityAssertionEndDate(void *a1, const char *a2, ...)
{
  return _[a1 nowPlayingActivityAssertionEndDate];
}

id objc_msgSend_nowPlayingActivityIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 nowPlayingActivityIdentifier];
}

id objc_msgSend_nowPlayingActivityUserIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 nowPlayingActivityUserIdentifier];
}

id objc_msgSend_nowPlayingAirPlaySession(void *a1, const char *a2, ...)
{
  return _[a1 nowPlayingAirPlaySession];
}

id objc_msgSend_nowPlayingAppStackEligible(void *a1, const char *a2, ...)
{
  return _[a1 nowPlayingAppStackEligible];
}

id objc_msgSend_nowPlayingAppStackFailedPlayInterval(void *a1, const char *a2, ...)
{
  return _[a1 nowPlayingAppStackFailedPlayInterval];
}

id objc_msgSend_nowPlayingApplicationDisplayID(void *a1, const char *a2, ...)
{
  return _[a1 nowPlayingApplicationDisplayID];
}

id objc_msgSend_nowPlayingApplicationIsInterrupted(void *a1, const char *a2, ...)
{
  return _[a1 nowPlayingApplicationIsInterrupted];
}

id objc_msgSend_nowPlayingApplicationIsPlaying(void *a1, const char *a2, ...)
{
  return _[a1 nowPlayingApplicationIsPlaying];
}

id objc_msgSend_nowPlayingApplicationPID(void *a1, const char *a2, ...)
{
  return _[a1 nowPlayingApplicationPID];
}

id objc_msgSend_nowPlayingApplicationTimeout(void *a1, const char *a2, ...)
{
  return _[a1 nowPlayingApplicationTimeout];
}

id objc_msgSend_nowPlayingApplications(void *a1, const char *a2, ...)
{
  return _[a1 nowPlayingApplications];
}

id objc_msgSend_nowPlayingApplicationsFromSessionsArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingApplicationsFromSessionsArray:");
}

id objc_msgSend_nowPlayingAudioFormatContentInfos(void *a1, const char *a2, ...)
{
  return _[a1 nowPlayingAudioFormatContentInfos];
}

id objc_msgSend_nowPlayingAudioFormatContentInfosFromNowPlayingApplications_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingAudioFormatContentInfosFromNowPlayingApplications:");
}

id objc_msgSend_nowPlayingClient(void *a1, const char *a2, ...)
{
  return _[a1 nowPlayingClient];
}

id objc_msgSend_nowPlayingClient_activePlayerDidChangeFromPlayerClient_toPlayerClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingClient:activePlayerDidChangeFromPlayerClient:toPlayerClient:");
}

id objc_msgSend_nowPlayingClient_applicationDidForeground_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingClient:applicationDidForeground:");
}

id objc_msgSend_nowPlayingClient_clientStateDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingClient:clientStateDidChange:");
}

id objc_msgSend_nowPlayingClient_playerDidRegister_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingClient:playerDidRegister:");
}

id objc_msgSend_nowPlayingClient_playerDidUnregister_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingClient:playerDidUnregister:");
}

id objc_msgSend_nowPlayingClientForClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingClientForClient:");
}

id objc_msgSend_nowPlayingClientForPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingClientForPlayerPath:");
}

id objc_msgSend_nowPlayingClientRequests(void *a1, const char *a2, ...)
{
  return _[a1 nowPlayingClientRequests];
}

id objc_msgSend_nowPlayingClients(void *a1, const char *a2, ...)
{
  return _[a1 nowPlayingClients];
}

id objc_msgSend_nowPlayingContentItem(void *a1, const char *a2, ...)
{
  return _[a1 nowPlayingContentItem];
}

id objc_msgSend_nowPlayingDataSource(void *a1, const char *a2, ...)
{
  return _[a1 nowPlayingDataSource];
}

id objc_msgSend_nowPlayingDataSourceNowPlayingApplicationDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingDataSourceNowPlayingApplicationDidChange:");
}

id objc_msgSend_nowPlayingDataSourceNowPlayingApplicationPlaybackStateDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingDataSourceNowPlayingApplicationPlaybackStateDidChange:");
}

id objc_msgSend_nowPlayingDataSourceNowPlayingApplicationsPlaybackStateDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingDataSourceNowPlayingApplicationsPlaybackStateDidChange:");
}

id objc_msgSend_nowPlayingDataSourceNowPlayingAudioFormatContentInfosDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingDataSourceNowPlayingAudioFormatContentInfosDidChange:");
}

id objc_msgSend_nowPlayingDataSourceNowPlayingSessionsPlaybackStateDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingDataSourceNowPlayingSessionsPlaybackStateDidChange:");
}

id objc_msgSend_nowPlayingLauncher_shouldRelaunch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingLauncher:shouldRelaunch:");
}

id objc_msgSend_nowPlayingObserverCoalesceInterval(void *a1, const char *a2, ...)
{
  return _[a1 nowPlayingObserverCoalesceInterval];
}

id objc_msgSend_nowPlayingOriginClient_activePlayerClientsDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingOriginClient:activePlayerClientsDidChange:");
}

id objc_msgSend_nowPlayingOriginClient_activePlayerPathDidChange_withPlaybackState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingOriginClient:activePlayerPathDidChange:withPlaybackState:");
}

id objc_msgSend_nowPlayingOriginClient_applicationActivityDidBegin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingOriginClient:applicationActivityDidBegin:");
}

id objc_msgSend_nowPlayingOriginClient_applicationActivityDidEnd_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingOriginClient:applicationActivityDidEnd:");
}

id objc_msgSend_nowPlayingOriginClient_applicationActivityStatusDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingOriginClient:applicationActivityStatusDidChange:");
}

id objc_msgSend_nowPlayingOriginClient_clientDidRegister_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingOriginClient:clientDidRegister:");
}

id objc_msgSend_nowPlayingOriginClient_clientDidUnregister_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingOriginClient:clientDidUnregister:");
}

id objc_msgSend_nowPlayingOriginClient_currentRouteIsMutedDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingOriginClient:currentRouteIsMutedDidChange:");
}

id objc_msgSend_nowPlayingOriginClient_currentRouteVolumeControlCapabilitiesDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingOriginClient:currentRouteVolumeControlCapabilitiesDidChange:");
}

id objc_msgSend_nowPlayingOriginClient_currentRouteVolumeDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingOriginClient:currentRouteVolumeDidChange:");
}

id objc_msgSend_nowPlayingOriginClient_deviceInfoDidChange_previousDeviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingOriginClient:deviceInfoDidChange:previousDeviceInfo:");
}

id objc_msgSend_nowPlayingOriginClientDidChangeAudioFormatContentInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingOriginClientDidChangeAudioFormatContentInfo:");
}

id objc_msgSend_nowPlayingOriginClientPlaybackDidTimeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingOriginClientPlaybackDidTimeout:");
}

id objc_msgSend_nowPlayingPlayerClient_clientCanBeNowPlayingDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingPlayerClient:clientCanBeNowPlayingDidChange:");
}

id objc_msgSend_nowPlayingPlayerClient_isPlayingDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingPlayerClient:isPlayingDidChange:");
}

id objc_msgSend_nowPlayingPlayerClient_pictureInPictureEnabledDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingPlayerClient:pictureInPictureEnabledDidChange:");
}

id objc_msgSend_nowPlayingPlayerClient_playbackQueueArtworkContentItemsDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingPlayerClient:playbackQueueArtworkContentItemsDidChange:");
}

id objc_msgSend_nowPlayingPlayerClient_playbackQueueCapabilitiesDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingPlayerClient:playbackQueueCapabilitiesDidChange:");
}

id objc_msgSend_nowPlayingPlayerClient_playbackQueueContentItemsDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingPlayerClient:playbackQueueContentItemsDidChange:");
}

id objc_msgSend_nowPlayingPlayerClient_playbackQueueDidChange_nowPlayingItemDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingPlayerClient:playbackQueueDidChange:nowPlayingItemDidChange:");
}

id objc_msgSend_nowPlayingPlayerClient_playbackQueueParticipantsDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingPlayerClient:playbackQueueParticipantsDidChange:");
}

id objc_msgSend_nowPlayingPlayerClient_playbackStateDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingPlayerClient:playbackStateDidChange:");
}

id objc_msgSend_nowPlayingPlayerClient_playerCanBeNowPlayingDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingPlayerClient:playerCanBeNowPlayingDidChange:");
}

id objc_msgSend_nowPlayingPlayerClient_playerStateDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingPlayerClient:playerStateDidChange:");
}

id objc_msgSend_nowPlayingPlayerClient_supportedCommandsDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingPlayerClient:supportedCommandsDidChange:");
}

id objc_msgSend_nowPlayingServer(void *a1, const char *a2, ...)
{
  return _[a1 nowPlayingServer];
}

id objc_msgSend_nowPlayingServer_activeOriginDidChangeFromOriginClient_toOriginClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingServer:activeOriginDidChangeFromOriginClient:toOriginClient:");
}

id objc_msgSend_nowPlayingSessions(void *a1, const char *a2, ...)
{
  return _[a1 nowPlayingSessions];
}

id objc_msgSend_nowPlayingSessionsFromAVSessionsArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nowPlayingSessionsFromAVSessionsArray:");
}

id objc_msgSend_nowPlayingState(void *a1, const char *a2, ...)
{
  return _[a1 nowPlayingState];
}

id objc_msgSend_nowPlayingUIWakingPlayerEventAssertionDuration(void *a1, const char *a2, ...)
{
  return _[a1 nowPlayingUIWakingPlayerEventAssertionDuration];
}

id objc_msgSend_nowPlayingUpdates(void *a1, const char *a2, ...)
{
  return _[a1 nowPlayingUpdates];
}

id objc_msgSend_null(void *a1, const char *a2, ...)
{
  return _[a1 null];
}

id objc_msgSend_numberOfActivePhoneCalls_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfActivePhoneCalls:");
}

id objc_msgSend_numberOfEndpoints(void *a1, const char *a2, ...)
{
  return _[a1 numberOfEndpoints];
}

id objc_msgSend_numberWithBool_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithBool:");
}

id objc_msgSend_numberWithDouble_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithDouble:");
}

id objc_msgSend_numberWithFloat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithFloat:");
}

id objc_msgSend_numberWithInt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithInt:");
}

id objc_msgSend_numberWithInteger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithInteger:");
}

id objc_msgSend_numberWithLongLong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithLongLong:");
}

id objc_msgSend_numberWithUnsignedChar_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedChar:");
}

id objc_msgSend_numberWithUnsignedInt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedInt:");
}

id objc_msgSend_numberWithUnsignedInteger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedInteger:");
}

id objc_msgSend_numberWithUnsignedLong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedLong:");
}

id objc_msgSend_numberWithUnsignedLongLong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedLongLong:");
}

id objc_msgSend_objCType(void *a1, const char *a2, ...)
{
  return _[a1 objCType];
}

id objc_msgSend_object(void *a1, const char *a2, ...)
{
  return _[a1 object];
}

id objc_msgSend_objectEnumerator(void *a1, const char *a2, ...)
{
  return _[a1 objectEnumerator];
}

id objc_msgSend_objectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKey:");
}

id objc_msgSend_objectForKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKeyedSubscript:");
}

id objc_msgSend_objects(void *a1, const char *a2, ...)
{
  return _[a1 objects];
}

id objc_msgSend_objectsAtIndexes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectsAtIndexes:");
}

id objc_msgSend_objectsForKeys_notFoundMarker_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectsForKeys:notFoundMarker:");
}

id objc_msgSend_observeActiveUserWithQueue_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "observeActiveUserWithQueue:handler:");
}

id objc_msgSend_observers(void *a1, const char *a2, ...)
{
  return _[a1 observers];
}

id objc_msgSend_observersForSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "observersForSelector:");
}

id objc_msgSend_onQueue_controller_didLoadResponse_retry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "onQueue_controller:didLoadResponse:retry:");
}

id objc_msgSend_onQueue_lastPlaybackStateForEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "onQueue_lastPlaybackStateForEndpoint:");
}

id objc_msgSend_onQueue_resolveExistingPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "onQueue_resolveExistingPlayerPath:");
}

id objc_msgSend_onQueue_setLastPlaybackState_bundleIdentifier_forEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "onQueue_setLastPlaybackState:bundleIdentifier:forEndpoint:");
}

id objc_msgSend_oobKeys(void *a1, const char *a2, ...)
{
  return _[a1 oobKeys];
}

id objc_msgSend_open(void *a1, const char *a2, ...)
{
  return _[a1 open];
}

id objc_msgSend_openApplication_withOptions_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openApplication:withOptions:completion:");
}

id objc_msgSend_openMusicForDiscoveredSession_foreground_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openMusicForDiscoveredSession:foreground:completion:");
}

id objc_msgSend_openMusicParticipantManagementWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openMusicParticipantManagementWithCompletion:");
}

id objc_msgSend_openRoutePickerForRouteUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openRoutePickerForRouteUID:");
}

id objc_msgSend_operationCount(void *a1, const char *a2, ...)
{
  return _[a1 operationCount];
}

id objc_msgSend_operations(void *a1, const char *a2, ...)
{
  return _[a1 operations];
}

id objc_msgSend_optionValueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "optionValueForKey:");
}

id objc_msgSend_options(void *a1, const char *a2, ...)
{
  return _[a1 options];
}

id objc_msgSend_optionsData(void *a1, const char *a2, ...)
{
  return _[a1 optionsData];
}

id objc_msgSend_optionsWithDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "optionsWithDictionary:");
}

id objc_msgSend_origin(void *a1, const char *a2, ...)
{
  return _[a1 origin];
}

id objc_msgSend_originClient(void *a1, const char *a2, ...)
{
  return _[a1 originClient];
}

id objc_msgSend_originClientForDeviceUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "originClientForDeviceUID:");
}

id objc_msgSend_originClientForGroupLeaderOfDeviceUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "originClientForGroupLeaderOfDeviceUID:");
}

id objc_msgSend_originClientForOrigin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "originClientForOrigin:");
}

id objc_msgSend_originClientRequestsForPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "originClientRequestsForPlayerPath:");
}

id objc_msgSend_originClients(void *a1, const char *a2, ...)
{
  return _[a1 originClients];
}

id objc_msgSend_originForward(void *a1, const char *a2, ...)
{
  return _[a1 originForward];
}

id objc_msgSend_originatedFromAccessory(void *a1, const char *a2, ...)
{
  return _[a1 originatedFromAccessory];
}

id objc_msgSend_originatingAppDisplayID(void *a1, const char *a2, ...)
{
  return _[a1 originatingAppDisplayID];
}

id objc_msgSend_outOfMemoryWaitDuration(void *a1, const char *a2, ...)
{
  return _[a1 outOfMemoryWaitDuration];
}

id objc_msgSend_outputContext(void *a1, const char *a2, ...)
{
  return _[a1 outputContext];
}

id objc_msgSend_outputContextForOutputDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "outputContextForOutputDevice:");
}

id objc_msgSend_outputContextForOutputDeviceUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "outputContextForOutputDeviceUID:");
}

id objc_msgSend_outputContextForOutputDeviceUIDs_strict_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "outputContextForOutputDeviceUIDs:strict:");
}

id objc_msgSend_outputContextManagerForAllOutputContexts(void *a1, const char *a2, ...)
{
  return _[a1 outputContextManagerForAllOutputContexts];
}

id objc_msgSend_outputContexts(void *a1, const char *a2, ...)
{
  return _[a1 outputContexts];
}

id objc_msgSend_outputDevice(void *a1, const char *a2, ...)
{
  return _[a1 outputDevice];
}

id objc_msgSend_outputDeviceForGroupSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "outputDeviceForGroupSession:");
}

id objc_msgSend_outputDeviceModifications(void *a1, const char *a2, ...)
{
  return _[a1 outputDeviceModifications];
}

id objc_msgSend_outputDeviceMute(void *a1, const char *a2, ...)
{
  return _[a1 outputDeviceMute];
}

id objc_msgSend_outputDeviceUID(void *a1, const char *a2, ...)
{
  return _[a1 outputDeviceUID];
}

id objc_msgSend_outputDeviceUIDs(void *a1, const char *a2, ...)
{
  return _[a1 outputDeviceUIDs];
}

id objc_msgSend_outputDeviceUpdates(void *a1, const char *a2, ...)
{
  return _[a1 outputDeviceUpdates];
}

id objc_msgSend_outputDeviceVolume(void *a1, const char *a2, ...)
{
  return _[a1 outputDeviceVolume];
}

id objc_msgSend_outputDeviceVolume_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "outputDeviceVolume:queue:completion:");
}

id objc_msgSend_outputDeviceVolumeCapabilities(void *a1, const char *a2, ...)
{
  return _[a1 outputDeviceVolumeCapabilities];
}

id objc_msgSend_outputDeviceVolumeControlCapabilities_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "outputDeviceVolumeControlCapabilities:queue:completion:");
}

id objc_msgSend_outputDeviceVolumeMuted_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "outputDeviceVolumeMuted:queue:completion:");
}

id objc_msgSend_outputDeviceWithUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "outputDeviceWithUID:");
}

id objc_msgSend_outputDevices(void *a1, const char *a2, ...)
{
  return _[a1 outputDevices];
}

id objc_msgSend_outputDevicesChanged_forConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "outputDevicesChanged:forConfiguration:");
}

id objc_msgSend_outputDevicesForEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "outputDevicesForEndpoint:");
}

id objc_msgSend_outputDevicesMatchingPredicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "outputDevicesMatchingPredicate:");
}

id objc_msgSend_overrideClient(void *a1, const char *a2, ...)
{
  return _[a1 overrideClient];
}

id objc_msgSend_overrideTimer(void *a1, const char *a2, ...)
{
  return _[a1 overrideTimer];
}

id objc_msgSend_owningClient(void *a1, const char *a2, ...)
{
  return _[a1 owningClient];
}

id objc_msgSend_pairedDevices(void *a1, const char *a2, ...)
{
  return _[a1 pairedDevices];
}

id objc_msgSend_pairingHandler(void *a1, const char *a2, ...)
{
  return _[a1 pairingHandler];
}

id objc_msgSend_pairingManager(void *a1, const char *a2, ...)
{
  return _[a1 pairingManager];
}

id objc_msgSend_parentApplicationBundleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 parentApplicationBundleIdentifier];
}

id objc_msgSend_parentGroupContainsDiscoverableGroupLeader(void *a1, const char *a2, ...)
{
  return _[a1 parentGroupContainsDiscoverableGroupLeader];
}

id objc_msgSend_parentGroupContainsDiscoverableLeader(void *a1, const char *a2, ...)
{
  return _[a1 parentGroupContainsDiscoverableLeader];
}

id objc_msgSend_parentGroupID(void *a1, const char *a2, ...)
{
  return _[a1 parentGroupID];
}

id objc_msgSend_parentGroupIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 parentGroupIdentifier];
}

id objc_msgSend_parentUID(void *a1, const char *a2, ...)
{
  return _[a1 parentUID];
}

id objc_msgSend_participant(void *a1, const char *a2, ...)
{
  return _[a1 participant];
}

id objc_msgSend_participantDataSource(void *a1, const char *a2, ...)
{
  return _[a1 participantDataSource];
}

id objc_msgSend_participants(void *a1, const char *a2, ...)
{
  return _[a1 participants];
}

id objc_msgSend_password(void *a1, const char *a2, ...)
{
  return _[a1 password];
}

id objc_msgSend_path(void *a1, const char *a2, ...)
{
  return _[a1 path];
}

id objc_msgSend_pauseNotifications(void *a1, const char *a2, ...)
{
  return _[a1 pauseNotifications];
}

id objc_msgSend_pauseOperation(void *a1, const char *a2, ...)
{
  return _[a1 pauseOperation];
}

id objc_msgSend_pauseOutputDeviceUIDs_details_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pauseOutputDeviceUIDs:details:queue:completion:");
}

id objc_msgSend_pausePredictedRoutesTimer(void *a1, const char *a2, ...)
{
  return _[a1 pausePredictedRoutesTimer];
}

id objc_msgSend_payloadWithData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "payloadWithData:");
}

id objc_msgSend_pbsVolumeControlCapabilities(void *a1, const char *a2, ...)
{
  return _[a1 pbsVolumeControlCapabilities];
}

id objc_msgSend_pendingCompletions(void *a1, const char *a2, ...)
{
  return _[a1 pendingCompletions];
}

id objc_msgSend_pendingCompletionsPerOutputDeviceUID(void *a1, const char *a2, ...)
{
  return _[a1 pendingCompletionsPerOutputDeviceUID];
}

id objc_msgSend_pendingJoinCompletions(void *a1, const char *a2, ...)
{
  return _[a1 pendingJoinCompletions];
}

id objc_msgSend_pendingParticipants(void *a1, const char *a2, ...)
{
  return _[a1 pendingParticipants];
}

id objc_msgSend_pendingParticipantsMap(void *a1, const char *a2, ...)
{
  return _[a1 pendingParticipantsMap];
}

id objc_msgSend_pendingRelayEndpointReplies(void *a1, const char *a2, ...)
{
  return _[a1 pendingRelayEndpointReplies];
}

id objc_msgSend_pendingRequests(void *a1, const char *a2, ...)
{
  return _[a1 pendingRequests];
}

id objc_msgSend_pepper(void *a1, const char *a2, ...)
{
  return _[a1 pepper];
}

id objc_msgSend_pepperExpirationDate(void *a1, const char *a2, ...)
{
  return _[a1 pepperExpirationDate];
}

id objc_msgSend_perPlayerCanBeNowPlaying(void *a1, const char *a2, ...)
{
  return _[a1 perPlayerCanBeNowPlaying];
}

id objc_msgSend_perform_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "perform:completion:");
}

id objc_msgSend_performHandlerForRouteUID_passcode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performHandlerForRouteUID:passcode:");
}

id objc_msgSend_performMigrationToEndpoint_request_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performMigrationToEndpoint:request:queue:completion:");
}

id objc_msgSend_performMigrationToOutputDevices_request_initiator_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performMigrationToOutputDevices:request:initiator:queue:completion:");
}

id objc_msgSend_performRequestWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performRequestWithCompletion:");
}

id objc_msgSend_performTopologyModificationToRoute_devices_endpoint_requestName_completion_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performTopologyModificationToRoute:devices:endpoint:requestName:completion:");
}

id objc_msgSend_persistentDiscoveryABCDuration(void *a1, const char *a2, ...)
{
  return _[a1 persistentDiscoveryABCDuration];
}

id objc_msgSend_personalDeviceController(void *a1, const char *a2, ...)
{
  return _[a1 personalDeviceController];
}

id objc_msgSend_personalDeviceControllerStateDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "personalDeviceControllerStateDidChange:");
}

id objc_msgSend_personalDeviceLockScreenTimeout(void *a1, const char *a2, ...)
{
  return _[a1 personalDeviceLockScreenTimeout];
}

id objc_msgSend_personalDeviceState(void *a1, const char *a2, ...)
{
  return _[a1 personalDeviceState];
}

id objc_msgSend_personalDeviceUIDs(void *a1, const char *a2, ...)
{
  return _[a1 personalDeviceUIDs];
}

id objc_msgSend_personalDeviceWasRecentlyAttached(void *a1, const char *a2, ...)
{
  return _[a1 personalDeviceWasRecentlyAttached];
}

id objc_msgSend_personalOutputDevices(void *a1, const char *a2, ...)
{
  return _[a1 personalOutputDevices];
}

id objc_msgSend_phoneCallObserver_callDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "phoneCallObserver:callDidChange:");
}

id objc_msgSend_pickCachedRouteWithUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pickCachedRouteWithUID:");
}

id objc_msgSend_pickableRoutesForCategory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pickableRoutesForCategory:");
}

id objc_msgSend_pickableRoutesForCategory_source_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pickableRoutesForCategory:source:");
}

id objc_msgSend_pickedRoute(void *a1, const char *a2, ...)
{
  return _[a1 pickedRoute];
}

id objc_msgSend_pickedRouteForCategory_source_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pickedRouteForCategory:source:");
}

id objc_msgSend_pickedRouteType(void *a1, const char *a2, ...)
{
  return _[a1 pickedRouteType];
}

id objc_msgSend_pickedRoutes(void *a1, const char *a2, ...)
{
  return _[a1 pickedRoutes];
}

id objc_msgSend_pickedRoutesForCategory_source_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pickedRoutesForCategory:source:");
}

id objc_msgSend_pid(void *a1, const char *a2, ...)
{
  return _[a1 pid];
}

id objc_msgSend_pillCenter(void *a1, const char *a2, ...)
{
  return _[a1 pillCenter];
}

id objc_msgSend_pillCompletion(void *a1, const char *a2, ...)
{
  return _[a1 pillCompletion];
}

id objc_msgSend_pinPairingDialogDidClose_forClient_userCancelled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pinPairingDialogDidClose:forClient:userCancelled:");
}

id objc_msgSend_pinPairingDialogDidOpen_forClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pinPairingDialogDidOpen:forClient:");
}

id objc_msgSend_pinPairingToken(void *a1, const char *a2, ...)
{
  return _[a1 pinPairingToken];
}

id objc_msgSend_pineboardContext(void *a1, const char *a2, ...)
{
  return _[a1 pineboardContext];
}

id objc_msgSend_ping_callback_withQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ping:callback:withQueue:");
}

id objc_msgSend_playbackQueue(void *a1, const char *a2, ...)
{
  return _[a1 playbackQueue];
}

id objc_msgSend_playbackQueueCapabilities(void *a1, const char *a2, ...)
{
  return _[a1 playbackQueueCapabilities];
}

id objc_msgSend_playbackQueueForRequest_cachingPolicy_playerPath_partiallyCachedItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playbackQueueForRequest:cachingPolicy:playerPath:partiallyCachedItems:");
}

id objc_msgSend_playbackQueueRequests(void *a1, const char *a2, ...)
{
  return _[a1 playbackQueueRequests];
}

id objc_msgSend_playbackRate(void *a1, const char *a2, ...)
{
  return _[a1 playbackRate];
}

id objc_msgSend_playbackSession(void *a1, const char *a2, ...)
{
  return _[a1 playbackSession];
}

id objc_msgSend_playbackSessionData(void *a1, const char *a2, ...)
{
  return _[a1 playbackSessionData];
}

id objc_msgSend_playbackState(void *a1, const char *a2, ...)
{
  return _[a1 playbackState];
}

id objc_msgSend_playbackStateForPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playbackStateForPlayerPath:");
}

id objc_msgSend_playbackStateTimestamp(void *a1, const char *a2, ...)
{
  return _[a1 playbackStateTimestamp];
}

id objc_msgSend_playbackTimeoutTimer(void *a1, const char *a2, ...)
{
  return _[a1 playbackTimeoutTimer];
}

id objc_msgSend_playbackTimer(void *a1, const char *a2, ...)
{
  return _[a1 playbackTimer];
}

id objc_msgSend_playbackTimers(void *a1, const char *a2, ...)
{
  return _[a1 playbackTimers];
}

id objc_msgSend_player(void *a1, const char *a2, ...)
{
  return _[a1 player];
}

id objc_msgSend_playerClient(void *a1, const char *a2, ...)
{
  return _[a1 playerClient];
}

id objc_msgSend_playerClientForPlayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playerClientForPlayer:");
}

id objc_msgSend_playerClients(void *a1, const char *a2, ...)
{
  return _[a1 playerClients];
}

id objc_msgSend_playerPath(void *a1, const char *a2, ...)
{
  return _[a1 playerPath];
}

id objc_msgSend_playerPathByRedirectingToOrigin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playerPathByRedirectingToOrigin:");
}

id objc_msgSend_playerPlaybackState(void *a1, const char *a2, ...)
{
  return _[a1 playerPlaybackState];
}

id objc_msgSend_playerProperties(void *a1, const char *a2, ...)
{
  return _[a1 playerProperties];
}

id objc_msgSend_popNowPlayingAppStack(void *a1, const char *a2, ...)
{
  return _[a1 popNowPlayingAppStack];
}

id objc_msgSend_popNowPlayingAppStack_forReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "popNowPlayingAppStack:forReason:");
}

id objc_msgSend_populatedOutputContexts(void *a1, const char *a2, ...)
{
  return _[a1 populatedOutputContexts];
}

id objc_msgSend_postActiveOriginDidChange_withPlaybackState_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postActiveOriginDidChange:withPlaybackState:handler:");
}

id objc_msgSend_postActivePlayerDidChangeForPlayerPath_withPlaybackState_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postActivePlayerDidChangeForPlayerPath:withPlaybackState:handler:");
}

id objc_msgSend_postActivePlayerPathsDidChangeForOrigin_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postActivePlayerPathsDidChangeForOrigin:handler:");
}

id objc_msgSend_postAudioFormatContentInfoDidChangeForOrigin_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postAudioFormatContentInfoDidChangeForOrigin:handler:");
}

id objc_msgSend_postAutoRouteBannerRequestForRoute_devices_endpoint_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postAutoRouteBannerRequestForRoute:devices:endpoint:completion:");
}

id objc_msgSend_postBannerRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postBannerRequest:");
}

id objc_msgSend_postBannerRequest_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postBannerRequest:completion:");
}

id objc_msgSend_postClientDidRegisterCanBeNowPlayingForPlayerPath_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postClientDidRegisterCanBeNowPlayingForPlayerPath:handler:");
}

id objc_msgSend_postClientDidRegisterForPlayerPath_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postClientDidRegisterForPlayerPath:handler:");
}

id objc_msgSend_postClientDidUnregisterCanBeNowPlayingForPlayerPath_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postClientDidUnregisterCanBeNowPlayingForPlayerPath:handler:");
}

id objc_msgSend_postClientDidUnregisterForPlayerPath_hasDefaultSupportedCommands_canBeNowPlaying_handler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postClientDidUnregisterForPlayerPath:hasDefaultSupportedCommands:canBeNowPlaying:handler:");
}

id objc_msgSend_postClientNotificationNamed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postClientNotificationNamed:");
}

id objc_msgSend_postClientNotificationNamed_predicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postClientNotificationNamed:predicate:");
}

id objc_msgSend_postClientNotificationNamed_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postClientNotificationNamed:userInfo:");
}

id objc_msgSend_postClientNotificationNamed_userInfo_predicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postClientNotificationNamed:userInfo:predicate:");
}

id objc_msgSend_postClientNowPlayingNotificationNamed_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postClientNowPlayingNotificationNamed:userInfo:");
}

id objc_msgSend_postClientNowPlayingNotificationNamed_userInfo_predicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postClientNowPlayingNotificationNamed:userInfo:predicate:");
}

id objc_msgSend_postCloudStateChanged(void *a1, const char *a2, ...)
{
  return _[a1 postCloudStateChanged];
}

id objc_msgSend_postDeltaBannerRequestForRoute_devices_endpoint_activeSystemEndpoint_completion_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postDeltaBannerRequestForRoute:devices:endpoint:activeSystemEndpoint:completion:");
}

id objc_msgSend_postDeviceInfoDidChange_previousDeviceInfo_forOrigin_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postDeviceInfoDidChange:previousDeviceInfo:forOrigin:handler:");
}

id objc_msgSend_postIsMutedDidChange_isMuted_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postIsMutedDidChange:isMuted:handler:");
}

id objc_msgSend_postIsPlayingDidChange_lastPlayingTimestamp_forPlayerPath_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postIsPlayingDidChange:lastPlayingTimestamp:forPlayerPath:handler:");
}

id objc_msgSend_postLockScreenControlsDidChangeDistributedNotification(void *a1, const char *a2, ...)
{
  return _[a1 postLockScreenControlsDidChangeDistributedNotification];
}

id objc_msgSend_postNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postNotification:");
}

id objc_msgSend_postNotificationName_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postNotificationName:object:");
}

id objc_msgSend_postNotificationName_object_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postNotificationName:object:userInfo:");
}

id objc_msgSend_postNowPlayingApplicationDidChangeForPlayerPath_withPlaybackState_handler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postNowPlayingApplicationDidChangeForPlayerPath:withPlaybackState:handler:");
}

id objc_msgSend_postNowPlayingClientStateDidChange_forPlayerPath_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postNowPlayingClientStateDidChange:forPlayerPath:handler:");
}

id objc_msgSend_postNowPlayingPlayerStateDidChange_forPlayerPath_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postNowPlayingPlayerStateDidChange:forPlayerPath:handler:");
}

id objc_msgSend_postOneTapSuggestionBannerRequestForRoute_devices_endpoint_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postOneTapSuggestionBannerRequestForRoute:devices:endpoint:completion:");
}

id objc_msgSend_postOriginDidRegister_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postOriginDidRegister:handler:");
}

id objc_msgSend_postOriginDidUnRegister_deviceInfo_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postOriginDidUnRegister:deviceInfo:handler:");
}

id objc_msgSend_postPictureInPictureDidChange_forPlayerPath_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postPictureInPictureDidChange:forPlayerPath:handler:");
}

id objc_msgSend_postPillBannerRequest_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postPillBannerRequest:completion:");
}

id objc_msgSend_postPlaybackQueueCapabilitiesDidChange_forPlayerPath_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postPlaybackQueueCapabilitiesDidChange:forPlayerPath:handler:");
}

id objc_msgSend_postPlaybackQueueContentItemsArtworkDidChange_forPlayerPath_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postPlaybackQueueContentItemsArtworkDidChange:forPlayerPath:handler:");
}

id objc_msgSend_postPlaybackQueueContentItemsDidChange_forPlayerPath_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postPlaybackQueueContentItemsDidChange:forPlayerPath:handler:");
}

id objc_msgSend_postPlaybackQueueDidChange_nowPlayingItemDidChange_forPlayerPath_handler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postPlaybackQueueDidChange:nowPlayingItemDidChange:forPlayerPath:handler:");
}

id objc_msgSend_postPlaybackQueueParticipantsDidChange_forPlayerPath_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postPlaybackQueueParticipantsDidChange:forPlayerPath:handler:");
}

id objc_msgSend_postPlaybackStateDidChange_forPlayerPath_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postPlaybackStateDidChange:forPlayerPath:handler:");
}

id objc_msgSend_postPlayerDidRegisterCanBeNowPlayingForPlayerPath_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postPlayerDidRegisterCanBeNowPlayingForPlayerPath:handler:");
}

id objc_msgSend_postPlayerDidRegisterForPlayerPath_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postPlayerDidRegisterForPlayerPath:handler:");
}

id objc_msgSend_postPlayerDidUnregisterCanBeNowPlayingForPlayerPath_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postPlayerDidUnregisterCanBeNowPlayingForPlayerPath:handler:");
}

id objc_msgSend_postPlayerDidUnregisterWithPlaybackState_canBeNowPlaying_forPlayerPath_handler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postPlayerDidUnregisterWithPlaybackState:canBeNowPlaying:forPlayerPath:handler:");
}

id objc_msgSend_postSupportedCommandsDidChange_forPlayerPath_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postSupportedCommandsDidChange:forPlayerPath:handler:");
}

id objc_msgSend_postSystemEndpointDeviceChange_type_originClient_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postSystemEndpointDeviceChange:type:originClient:handler:");
}

id objc_msgSend_postVolumeCapabilitiesDidChange_capabilities_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postVolumeCapabilitiesDidChange:capabilities:handler:");
}

id objc_msgSend_postVolumeDidChange_volume_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postVolumeDidChange:volume:handler:");
}

id objc_msgSend_predicateMatchingHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateMatchingHandle:");
}

id objc_msgSend_predictedOutputDeviceUIDs(void *a1, const char *a2, ...)
{
  return _[a1 predictedOutputDeviceUIDs];
}

id objc_msgSend_preemptiveRemoteControlConnectionManager_didConnectToGroupLeader_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preemptiveRemoteControlConnectionManager:didConnectToGroupLeader:");
}

id objc_msgSend_preemptiveRemoteControlConnectionManager_didConnectToPreferredClusterLeader_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preemptiveRemoteControlConnectionManager:didConnectToPreferredClusterLeader:");
}

id objc_msgSend_preferRoutesMatchingMediaType(void *a1, const char *a2, ...)
{
  return _[a1 preferRoutesMatchingMediaType];
}

id objc_msgSend_preferredClusterLeader(void *a1, const char *a2, ...)
{
  return _[a1 preferredClusterLeader];
}

id objc_msgSend_preferredEncoding(void *a1, const char *a2, ...)
{
  return _[a1 preferredEncoding];
}

id objc_msgSend_preferredLanguages(void *a1, const char *a2, ...)
{
  return _[a1 preferredLanguages];
}

id objc_msgSend_prepareForAddedMember(void *a1, const char *a2, ...)
{
  return _[a1 prepareForAddedMember];
}

id objc_msgSend_presentControlCenterCallToActionVideo_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentControlCenterCallToActionVideo:completion:");
}

id objc_msgSend_presentProximityCardWithDeviceName_modelIdentifier_color_url_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentProximityCardWithDeviceName:modelIdentifier:color:url:error:");
}

id objc_msgSend_presentWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentWithCompletion:");
}

id objc_msgSend_presentedBundleIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 presentedBundleIdentifiers];
}

id objc_msgSend_previousClusterLeaderID(void *a1, const char *a2, ...)
{
  return _[a1 previousClusterLeaderID];
}

id objc_msgSend_previousGroupID(void *a1, const char *a2, ...)
{
  return _[a1 previousGroupID];
}

id objc_msgSend_previousMaintainReason(void *a1, const char *a2, ...)
{
  return _[a1 previousMaintainReason];
}

id objc_msgSend_previousPlayerPath(void *a1, const char *a2, ...)
{
  return _[a1 previousPlayerPath];
}

id objc_msgSend_prewarmApp_origin_deviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prewarmApp:origin:deviceInfo:");
}

id objc_msgSend_prewarmForIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prewarmForIdentity:");
}

id objc_msgSend_prewarmPodcasts(void *a1, const char *a2, ...)
{
  return _[a1 prewarmPodcasts];
}

id objc_msgSend_prewarmSoon(void *a1, const char *a2, ...)
{
  return _[a1 prewarmSoon];
}

id objc_msgSend_primaryID(void *a1, const char *a2, ...)
{
  return _[a1 primaryID];
}

id objc_msgSend_primaryUIApplicationBundleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 primaryUIApplicationBundleIdentifier];
}

id objc_msgSend_priority(void *a1, const char *a2, ...)
{
  return _[a1 priority];
}

id objc_msgSend_privacyAcknowledgementRequiredForMusic(void *a1, const char *a2, ...)
{
  return _[a1 privacyAcknowledgementRequiredForMusic];
}

id objc_msgSend_processHandle(void *a1, const char *a2, ...)
{
  return _[a1 processHandle];
}

id objc_msgSend_processIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 processIdentifier];
}

id objc_msgSend_processInfo(void *a1, const char *a2, ...)
{
  return _[a1 processInfo];
}

id objc_msgSend_processName(void *a1, const char *a2, ...)
{
  return _[a1 processName];
}

id objc_msgSend_processOutputContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processOutputContext:");
}

id objc_msgSend_properties(void *a1, const char *a2, ...)
{
  return _[a1 properties];
}

id objc_msgSend_propertyListWithData_options_format_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "propertyListWithData:options:format:error:");
}

id objc_msgSend_protobuf(void *a1, const char *a2, ...)
{
  return _[a1 protobuf];
}

id objc_msgSend_protobufData(void *a1, const char *a2, ...)
{
  return _[a1 protobufData];
}

id objc_msgSend_protocol(void *a1, const char *a2, ...)
{
  return _[a1 protocol];
}

id objc_msgSend_protocolForProtocol_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "protocolForProtocol:");
}

id objc_msgSend_protocolMessageWithProtobufData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "protocolMessageWithProtobufData:error:");
}

id objc_msgSend_protocolVersion(void *a1, const char *a2, ...)
{
  return _[a1 protocolVersion];
}

id objc_msgSend_provider(void *a1, const char *a2, ...)
{
  return _[a1 provider];
}

id objc_msgSend_proxyForObjects_protocol_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "proxyForObjects:protocol:");
}

id objc_msgSend_proxyWithObject_protocol_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "proxyWithObject:protocol:");
}

id objc_msgSend_pruner(void *a1, const char *a2, ...)
{
  return _[a1 pruner];
}

id objc_msgSend_publicSigningKeyData(void *a1, const char *a2, ...)
{
  return _[a1 publicSigningKeyData];
}

id objc_msgSend_publish(void *a1, const char *a2, ...)
{
  return _[a1 publish];
}

id objc_msgSend_publishToOutputDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "publishToOutputDevices:");
}

id objc_msgSend_publishWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "publishWithOptions:");
}

id objc_msgSend_publisherWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "publisherWithOptions:");
}

id objc_msgSend_purgeUnusedDiscoverySessions(void *a1, const char *a2, ...)
{
  return _[a1 purgeUnusedDiscoverySessions];
}

id objc_msgSend_pushStateCanBeNowPlayingPlayer(void *a1, const char *a2, ...)
{
  return _[a1 pushStateCanBeNowPlayingPlayer];
}

id objc_msgSend_pushStateHasNowPlayingData(void *a1, const char *a2, ...)
{
  return _[a1 pushStateHasNowPlayingData];
}

id objc_msgSend_pushStateIsPlaying(void *a1, const char *a2, ...)
{
  return _[a1 pushStateIsPlaying];
}

id objc_msgSend_pushStatePictureInPictureEnabled(void *a1, const char *a2, ...)
{
  return _[a1 pushStatePictureInPictureEnabled];
}

id objc_msgSend_pushStatePlaybackState(void *a1, const char *a2, ...)
{
  return _[a1 pushStatePlaybackState];
}

id objc_msgSend_pushStatePlayer(void *a1, const char *a2, ...)
{
  return _[a1 pushStatePlayer];
}

id objc_msgSend_queryEligibilityOf_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queryEligibilityOf:completionHandler:");
}

id objc_msgSend_queryEligibilityOfAll_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queryEligibilityOfAll:completionHandler:");
}

id objc_msgSend_queryExistingPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queryExistingPlayerPath:");
}

id objc_msgSend_queryExistingPlayerPathForXPCMessage_forClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queryExistingPlayerPathForXPCMessage:forClient:");
}

id objc_msgSend_queryPlayerPath_forClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queryPlayerPath:forClient:");
}

id objc_msgSend_queryPlayerPathForXPCMessage_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queryPlayerPathForXPCMessage:fromClient:");
}

id objc_msgSend_queue(void *a1, const char *a2, ...)
{
  return _[a1 queue];
}

id objc_msgSend_queuedCommandsTimeoutInterval(void *a1, const char *a2, ...)
{
  return _[a1 queuedCommandsTimeoutInterval];
}

id objc_msgSend_raise_format_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "raise:format:");
}

id objc_msgSend_range(void *a1, const char *a2, ...)
{
  return _[a1 range];
}

id objc_msgSend_rangeContainsNowPlayingItem(void *a1, const char *a2, ...)
{
  return _[a1 rangeContainsNowPlayingItem];
}

id objc_msgSend_rapportIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 rapportIdentifier];
}

id objc_msgSend_rapportRemoteControlService_didAcceptConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rapportRemoteControlService:didAcceptConnection:");
}

id objc_msgSend_realToken(void *a1, const char *a2, ...)
{
  return _[a1 realToken];
}

id objc_msgSend_reason(void *a1, const char *a2, ...)
{
  return _[a1 reason];
}

id objc_msgSend_reasonWithType_string_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reasonWithType:string:");
}

id objc_msgSend_rebuildParticipants(void *a1, const char *a2, ...)
{
  return _[a1 rebuildParticipants];
}

id objc_msgSend_recentGroupSessionParticipantsPepper(void *a1, const char *a2, ...)
{
  return _[a1 recentGroupSessionParticipantsPepper];
}

id objc_msgSend_recentlyDismissedRecommendationsInfo(void *a1, const char *a2, ...)
{
  return _[a1 recentlyDismissedRecommendationsInfo];
}

id objc_msgSend_recentlyPlayingInterval(void *a1, const char *a2, ...)
{
  return _[a1 recentlyPlayingInterval];
}

id objc_msgSend_recommendationController(void *a1, const char *a2, ...)
{
  return _[a1 recommendationController];
}

id objc_msgSend_recommendationType(void *a1, const char *a2, ...)
{
  return _[a1 recommendationType];
}

id objc_msgSend_recommender(void *a1, const char *a2, ...)
{
  return _[a1 recommender];
}

id objc_msgSend_recon(void *a1, const char *a2, ...)
{
  return _[a1 recon];
}

id objc_msgSend_recordingEndpointClients(void *a1, const char *a2, ...)
{
  return _[a1 recordingEndpointClients];
}

id objc_msgSend_reevaluateAdvertisement(void *a1, const char *a2, ...)
{
  return _[a1 reevaluateAdvertisement];
}

id objc_msgSend_reevaluateAfterInterval_withReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reevaluateAfterInterval:withReason:");
}

id objc_msgSend_reevaluateClientsForActiveCriticalSection(void *a1, const char *a2, ...)
{
  return _[a1 reevaluateClientsForActiveCriticalSection];
}

id objc_msgSend_reevaluateDiscoveryMode(void *a1, const char *a2, ...)
{
  return _[a1 reevaluateDiscoveryMode];
}

id objc_msgSend_reevaluateGroupSessionService(void *a1, const char *a2, ...)
{
  return _[a1 reevaluateGroupSessionService];
}

id objc_msgSend_reevaluateLowPowerMode(void *a1, const char *a2, ...)
{
  return _[a1 reevaluateLowPowerMode];
}

id objc_msgSend_reevaluatePlaybackState(void *a1, const char *a2, ...)
{
  return _[a1 reevaluatePlaybackState];
}

id objc_msgSend_reevaluateProxyAdvertisement(void *a1, const char *a2, ...)
{
  return _[a1 reevaluateProxyAdvertisement];
}

id objc_msgSend_reevaluateState(void *a1, const char *a2, ...)
{
  return _[a1 reevaluateState];
}

id objc_msgSend_reevaluateSystemStateWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reevaluateSystemStateWithReason:");
}

id objc_msgSend_registerCommunicationChannelForOutputContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerCommunicationChannelForOutputContext:");
}

id objc_msgSend_registerCommunicationsChannels(void *a1, const char *a2, ...)
{
  return _[a1 registerCommunicationsChannels];
}

id objc_msgSend_registerConnectionFailureForWHAIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerConnectionFailureForWHAIdentifier:");
}

id objc_msgSend_registerCreateNewApplicationConnectionCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerCreateNewApplicationConnectionCallback:");
}

id objc_msgSend_registerDestinationOriginCallbacksToRelayToSourceOrigin(void *a1, const char *a2, ...)
{
  return _[a1 registerDestinationOriginCallbacksToRelayToSourceOrigin];
}

id objc_msgSend_registerDiscoveryTokenForConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerDiscoveryTokenForConfiguration:");
}

id objc_msgSend_registerEvent_callback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerEvent:callback:");
}

id objc_msgSend_registerForChanges(void *a1, const char *a2, ...)
{
  return _[a1 registerForChanges];
}

id objc_msgSend_registerForNotifications(void *a1, const char *a2, ...)
{
  return _[a1 registerForNotifications];
}

id objc_msgSend_registerForOutputContextNotifications_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerForOutputContextNotifications:");
}

id objc_msgSend_registerHandoffSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerHandoffSession:");
}

id objc_msgSend_registerIncomingApplicationConnection_clientBoundMessageHandler_completion_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerIncomingApplicationConnection:clientBoundMessageHandler:completion:");
}

id objc_msgSend_registerNotifications(void *a1, const char *a2, ...)
{
  return _[a1 registerNotifications];
}

id objc_msgSend_registerObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerObserver:");
}

id objc_msgSend_registerOrigin_deviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerOrigin:deviceInfo:");
}

id objc_msgSend_registerOriginForwarder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerOriginForwarder:");
}

id objc_msgSend_registerOutputContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerOutputContext:");
}

id objc_msgSend_registerRequest_callback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerRequest:callback:");
}

id objc_msgSend_registerSourceOriginNotifications(void *a1, const char *a2, ...)
{
  return _[a1 registerSourceOriginNotifications];
}

id objc_msgSend_registeredCallbacks(void *a1, const char *a2, ...)
{
  return _[a1 registeredCallbacks];
}

id objc_msgSend_registeredDeviceWithID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registeredDeviceWithID:");
}

id objc_msgSend_registeredKeyboardUpdates(void *a1, const char *a2, ...)
{
  return _[a1 registeredKeyboardUpdates];
}

id objc_msgSend_registeredToNowPlayingUpdates(void *a1, const char *a2, ...)
{
  return _[a1 registeredToNowPlayingUpdates];
}

id objc_msgSend_registeredToOutputDeviceUpdates(void *a1, const char *a2, ...)
{
  return _[a1 registeredToOutputDeviceUpdates];
}

id objc_msgSend_registeredToSystemEndpointUpdates(void *a1, const char *a2, ...)
{
  return _[a1 registeredToSystemEndpointUpdates];
}

id objc_msgSend_registeredToVolumeUpdates(void *a1, const char *a2, ...)
{
  return _[a1 registeredToVolumeUpdates];
}

id objc_msgSend_registeredVirtualVoiceInputDevices(void *a1, const char *a2, ...)
{
  return _[a1 registeredVirtualVoiceInputDevices];
}

id objc_msgSend_registrationDate(void *a1, const char *a2, ...)
{
  return _[a1 registrationDate];
}

id objc_msgSend_relayArtworkRequest_forContentItems_withMessage_fromNowPlayingClient_andNotifyXPCClient_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "relayArtworkRequest:forContentItems:withMessage:fromNowPlayingClient:andNotifyXPCClient:");
}

id objc_msgSend_relayConnectionManager_didIngestNewConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "relayConnectionManager:didIngestNewConnection:");
}

id objc_msgSend_relayConnectionsToSecondaries(void *a1, const char *a2, ...)
{
  return _[a1 relayConnectionsToSecondaries];
}

id objc_msgSend_relayPlaybackQueueRequest_withMessage_toNowPlayingClient_backToXpcClient_completion_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "relayPlaybackQueueRequest:withMessage:toNowPlayingClient:backToXpcClient:completion:");
}

id objc_msgSend_relayXPCMessage_andReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "relayXPCMessage:andReply:");
}

id objc_msgSend_relayXPCMessage_andReply_resultCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "relayXPCMessage:andReply:resultCallback:");
}

id objc_msgSend_releaseGroupSessionLowPowerPlatterAssertionWithReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "releaseGroupSessionLowPowerPlatterAssertionWithReply:");
}

id objc_msgSend_releaseGroupSessionNearbyAssertionWithReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "releaseGroupSessionNearbyAssertionWithReply:");
}

id objc_msgSend_releaseLockScreenControlsAssertion(void *a1, const char *a2, ...)
{
  return _[a1 releaseLockScreenControlsAssertion];
}

id objc_msgSend_releaseLockScreenControlsAssertionWithReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "releaseLockScreenControlsAssertionWithReply:");
}

id objc_msgSend_releaseQuickControlsAssertionWithReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "releaseQuickControlsAssertionWithReply:");
}

id objc_msgSend_releaseRouteRecommendationAssertion(void *a1, const char *a2, ...)
{
  return _[a1 releaseRouteRecommendationAssertion];
}

id objc_msgSend_releaseRouteRecommendationAssertionWithReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "releaseRouteRecommendationAssertionWithReply:");
}

id objc_msgSend_releaseScreenMirroringQuickControlsAssertionWithReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "releaseScreenMirroringQuickControlsAssertionWithReply:");
}

id objc_msgSend_releaseSessionManagementScreenVisibleAssertion(void *a1, const char *a2, ...)
{
  return _[a1 releaseSessionManagementScreenVisibleAssertion];
}

id objc_msgSend_releaseTimeBasedNowPlayingActivityAssertions(void *a1, const char *a2, ...)
{
  return _[a1 releaseTimeBasedNowPlayingActivityAssertions];
}

id objc_msgSend_relevantOutputDeviceUIDs(void *a1, const char *a2, ...)
{
  return _[a1 relevantOutputDeviceUIDs];
}

id objc_msgSend_relevantOutputDevices(void *a1, const char *a2, ...)
{
  return _[a1 relevantOutputDevices];
}

id objc_msgSend_reloadDeviceInfo(void *a1, const char *a2, ...)
{
  return _[a1 reloadDeviceInfo];
}

id objc_msgSend_reloadDeviceInfoImmediately(void *a1, const char *a2, ...)
{
  return _[a1 reloadDeviceInfoImmediately];
}

id objc_msgSend_reloadOutputContextData(void *a1, const char *a2, ...)
{
  return _[a1 reloadOutputContextData];
}

id objc_msgSend_reloadOutputContexts(void *a1, const char *a2, ...)
{
  return _[a1 reloadOutputContexts];
}

id objc_msgSend_remainingDuration(void *a1, const char *a2, ...)
{
  return _[a1 remainingDuration];
}

id objc_msgSend_remainingStreamCapacity(void *a1, const char *a2, ...)
{
  return _[a1 remainingStreamCapacity];
}

id objc_msgSend_remoteApprovePendingParticipant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remoteApprovePendingParticipant:");
}

id objc_msgSend_remoteControl_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remoteControl:completion:");
}

id objc_msgSend_remoteControlClients(void *a1, const char *a2, ...)
{
  return _[a1 remoteControlClients];
}

id objc_msgSend_remoteControlInterfaceID(void *a1, const char *a2, ...)
{
  return _[a1 remoteControlInterfaceID];
}

id objc_msgSend_remoteControlServer(void *a1, const char *a2, ...)
{
  return _[a1 remoteControlServer];
}

id objc_msgSend_remoteControlService(void *a1, const char *a2, ...)
{
  return _[a1 remoteControlService];
}

id objc_msgSend_remoteControlService_didAcceptClientConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remoteControlService:didAcceptClientConnection:");
}

id objc_msgSend_remoteControlSessionForExistingSessionWithNearbyGroup_identity_hostSigningKey_joinToken_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remoteControlSessionForExistingSessionWithNearbyGroup:identity:hostSigningKey:joinToken:");
}

id objc_msgSend_remoteDeviceIdleDisconnection(void *a1, const char *a2, ...)
{
  return _[a1 remoteDeviceIdleDisconnection];
}

id objc_msgSend_remoteDeviceIdleDisconnectionInterval(void *a1, const char *a2, ...)
{
  return _[a1 remoteDeviceIdleDisconnectionInterval];
}

id objc_msgSend_remoteIdentityMap(void *a1, const char *a2, ...)
{
  return _[a1 remoteIdentityMap];
}

id objc_msgSend_remoteObjectProxy(void *a1, const char *a2, ...)
{
  return _[a1 remoteObjectProxy];
}

id objc_msgSend_remoteObjectProxyWithErrorHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remoteObjectProxyWithErrorHandler:");
}

id objc_msgSend_remoteParticipantDataSource(void *a1, const char *a2, ...)
{
  return _[a1 remoteParticipantDataSource];
}

id objc_msgSend_remotePendingParticipants(void *a1, const char *a2, ...)
{
  return _[a1 remotePendingParticipants];
}

id objc_msgSend_remoteRejectPendingParticipant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remoteRejectPendingParticipant:");
}

id objc_msgSend_remoteRemoveAllParticipants(void *a1, const char *a2, ...)
{
  return _[a1 remoteRemoveAllParticipants];
}

id objc_msgSend_remoteRemoveParticipantWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remoteRemoveParticipantWithIdentifier:");
}

id objc_msgSend_remoteTargetWithLaunchingAssertionAttributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remoteTargetWithLaunchingAssertionAttributes:");
}

id objc_msgSend_removeAllObjects(void *a1, const char *a2, ...)
{
  return _[a1 removeAllObjects];
}

id objc_msgSend_removeAllParticipants(void *a1, const char *a2, ...)
{
  return _[a1 removeAllParticipants];
}

id objc_msgSend_removeAuthorizationCallbackForRouteID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeAuthorizationCallbackForRouteID:");
}

id objc_msgSend_removeChannelForDestination_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeChannelForDestination:");
}

id objc_msgSend_removeClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeClient:");
}

id objc_msgSend_removeClientForPID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeClientForPID:");
}

id objc_msgSend_removeDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeDelegate:");
}

id objc_msgSend_removeEndpointsChangedCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeEndpointsChangedCallback:");
}

id objc_msgSend_removeFirstObject(void *a1, const char *a2, ...)
{
  return _[a1 removeFirstObject];
}

id objc_msgSend_removeGameController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeGameController:");
}

id objc_msgSend_removeHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeHandler:");
}

id objc_msgSend_removeItemAtURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeItemAtURL:error:");
}

id objc_msgSend_removeLocalDevice(void *a1, const char *a2, ...)
{
  return _[a1 removeLocalDevice];
}

id objc_msgSend_removeLyricsEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeLyricsEvent:");
}

id objc_msgSend_removeMessageHandlerForType_destination_session_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeMessageHandlerForType:destination:session:");
}

id objc_msgSend_removeNowPlayingClientForClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeNowPlayingClientForClient:");
}

id objc_msgSend_removeObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObject:");
}

id objc_msgSend_removeObjectAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectAtIndex:");
}

id objc_msgSend_removeObjectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectForKey:");
}

id objc_msgSend_removeObjectIdenticalTo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectIdenticalTo:");
}

id objc_msgSend_removeObjectsForKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectsForKeys:");
}

id objc_msgSend_removeObjectsInRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectsInRange:");
}

id objc_msgSend_removeObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:");
}

id objc_msgSend_removeObserver_name_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:name:object:");
}

id objc_msgSend_removeOrigin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeOrigin:");
}

id objc_msgSend_removeOriginRequests_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeOriginRequests:");
}

id objc_msgSend_removeOutputDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeOutputDevice:");
}

id objc_msgSend_removeOutputDevice_options_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeOutputDevice:options:completionHandler:");
}

id objc_msgSend_removeOutputDeviceFromParentGroup_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeOutputDeviceFromParentGroup:queue:completion:");
}

id objc_msgSend_removeOutputDeviceUIDsFromParentGroup_details_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeOutputDeviceUIDsFromParentGroup:details:completion:");
}

id objc_msgSend_removeOutputDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeOutputDevices:");
}

id objc_msgSend_removeOutputDevices_initiator_withCallbackQueue_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeOutputDevices:initiator:withCallbackQueue:block:");
}

id objc_msgSend_removeOutputDevices_initiator_withReplyQueue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeOutputDevices:initiator:withReplyQueue:completion:");
}

id objc_msgSend_removeOutputDevicesChangedCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeOutputDevicesChangedCallback:");
}

id objc_msgSend_removeParticipant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeParticipant:");
}

id objc_msgSend_removeParticipantWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeParticipantWithIdentifier:");
}

id objc_msgSend_removePeer(void *a1, const char *a2, ...)
{
  return _[a1 removePeer];
}

id objc_msgSend_removePendingParticipant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removePendingParticipant:");
}

id objc_msgSend_removePendingPlaybackSessionMigrateEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removePendingPlaybackSessionMigrateEvent:");
}

id objc_msgSend_removePlayerClientForPlayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removePlayerClientForPlayer:");
}

id objc_msgSend_removeRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeRequest:");
}

id objc_msgSend_removeUndesiredDevicesOutputContextModification(void *a1, const char *a2, ...)
{
  return _[a1 removeUndesiredDevicesOutputContextModification];
}

id objc_msgSend_removeVirtualOutputDevicesForClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeVirtualOutputDevicesForClient:");
}

id objc_msgSend_removedOutputDevices(void *a1, const char *a2, ...)
{
  return _[a1 removedOutputDevices];
}

id objc_msgSend_removingOutputDeviceUIDs(void *a1, const char *a2, ...)
{
  return _[a1 removingOutputDeviceUIDs];
}

id objc_msgSend_renderingMode(void *a1, const char *a2, ...)
{
  return _[a1 renderingMode];
}

id objc_msgSend_replaceDonatedEntriesWithEntries_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "replaceDonatedEntriesWithEntries:withCompletion:");
}

id objc_msgSend_replaceObjectAtIndex_withObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "replaceObjectAtIndex:withObject:");
}

id objc_msgSend_replyIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 replyIdentifier];
}

id objc_msgSend_replyWithData_priority_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "replyWithData:priority:");
}

id objc_msgSend_replyWithMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "replyWithMessage:");
}

id objc_msgSend_representedBundleID(void *a1, const char *a2, ...)
{
  return _[a1 representedBundleID];
}

id objc_msgSend_request(void *a1, const char *a2, ...)
{
  return _[a1 request];
}

id objc_msgSend_requestByRemovingArtwork(void *a1, const char *a2, ...)
{
  return _[a1 requestByRemovingArtwork];
}

id objc_msgSend_requestConnectedDestinationEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestConnectedDestinationEndpoint:");
}

id objc_msgSend_requestCurrentContext(void *a1, const char *a2, ...)
{
  return _[a1 requestCurrentContext];
}

id objc_msgSend_requestCurrentContextWithBundleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestCurrentContextWithBundleID:");
}

id objc_msgSend_requestDestinationEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestDestinationEndpoint:");
}

id objc_msgSend_requestDetails(void *a1, const char *a2, ...)
{
  return _[a1 requestDetails];
}

id objc_msgSend_requestEligibilityMonitoring(void *a1, const char *a2, ...)
{
  return _[a1 requestEligibilityMonitoring];
}

id objc_msgSend_requestForSubscribedContentItemIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestForSubscribedContentItemIdentifier:");
}

id objc_msgSend_requestGroupSessionWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestGroupSessionWithCompletion:");
}

id objc_msgSend_requestGroupSessionWithDetails_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestGroupSessionWithDetails:queue:completion:");
}

id objc_msgSend_requestID(void *a1, const char *a2, ...)
{
  return _[a1 requestID];
}

id objc_msgSend_requestIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 requestIdentifier];
}

id objc_msgSend_requestInfo(void *a1, const char *a2, ...)
{
  return _[a1 requestInfo];
}

id objc_msgSend_requestReasonID(void *a1, const char *a2, ...)
{
  return _[a1 requestReasonID];
}

id objc_msgSend_requestToJoinDiscoveredSession_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestToJoinDiscoveredSession:completion:");
}

id objc_msgSend_requestToJoinSession_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestToJoinSession:completion:");
}

id objc_msgSend_requestWithStaticRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestWithStaticRequest:");
}

id objc_msgSend_requestedArtworkFormats(void *a1, const char *a2, ...)
{
  return _[a1 requestedArtworkFormats];
}

id objc_msgSend_requester(void *a1, const char *a2, ...)
{
  return _[a1 requester];
}

id objc_msgSend_requiresAuthorization(void *a1, const char *a2, ...)
{
  return _[a1 requiresAuthorization];
}

id objc_msgSend_requiresCustomPairing(void *a1, const char *a2, ...)
{
  return _[a1 requiresCustomPairing];
}

id objc_msgSend_requiresPIN(void *a1, const char *a2, ...)
{
  return _[a1 requiresPIN];
}

id objc_msgSend_reregisterOrigin_deviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reregisterOrigin:deviceInfo:");
}

id objc_msgSend_reserveSlotForLocal(void *a1, const char *a2, ...)
{
  return _[a1 reserveSlotForLocal];
}

id objc_msgSend_reservedOutputContexts(void *a1, const char *a2, ...)
{
  return _[a1 reservedOutputContexts];
}

id objc_msgSend_resetAcknowledgementForSessionIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetAcknowledgementForSessionIdentifier:");
}

id objc_msgSend_resetConnection(void *a1, const char *a2, ...)
{
  return _[a1 resetConnection];
}

id objc_msgSend_resetMediaServerState(void *a1, const char *a2, ...)
{
  return _[a1 resetMediaServerState];
}

id objc_msgSend_resetWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetWithError:");
}

id objc_msgSend_resizeImageData_forFittingSize_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resizeImageData:forFittingSize:error:");
}

id objc_msgSend_resolvableIdentityWithIdentifier_displayName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resolvableIdentityWithIdentifier:displayName:");
}

id objc_msgSend_resolveExistingPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resolveExistingPlayerPath:");
}

id objc_msgSend_resolveOutputDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resolveOutputDevices:");
}

id objc_msgSend_resolvePlaceholdersForDeviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resolvePlaceholdersForDeviceInfo:");
}

id objc_msgSend_resolvePlayerPath_fromClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resolvePlayerPath:fromClient:");
}

id objc_msgSend_resolvePlayerPath_fromClient_useDefaultPlayerIfNoneSpecified_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resolvePlayerPath:fromClient:useDefaultPlayerIfNoneSpecified:");
}

id objc_msgSend_resolvedAvailableEndpoints(void *a1, const char *a2, ...)
{
  return _[a1 resolvedAvailableEndpoints];
}

id objc_msgSend_resolvedOutputDevices(void *a1, const char *a2, ...)
{
  return _[a1 resolvedOutputDevices];
}

id objc_msgSend_respondWithAuthorizationToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "respondWithAuthorizationToken:");
}

id objc_msgSend_respondWithAuthorizationToken_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "respondWithAuthorizationToken:completionHandler:");
}

id objc_msgSend_response(void *a1, const char *a2, ...)
{
  return _[a1 response];
}

id objc_msgSend_restoreClientDeviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "restoreClientDeviceInfo:");
}

id objc_msgSend_restoreClientState_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "restoreClientState:handler:");
}

id objc_msgSend_restoreClientSystemEndpointWithType_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "restoreClientSystemEndpointWithType:handler:");
}

id objc_msgSend_restoreDeviceInfoToClient_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "restoreDeviceInfoToClient:handler:");
}

id objc_msgSend_restoreStateFromController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "restoreStateFromController:");
}

id objc_msgSend_restrictedTo_by_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "restrictedTo:by:");
}

id objc_msgSend_result(void *a1, const char *a2, ...)
{
  return _[a1 result];
}

id objc_msgSend_resultStatuses(void *a1, const char *a2, ...)
{
  return _[a1 resultStatuses];
}

id objc_msgSend_resume(void *a1, const char *a2, ...)
{
  return _[a1 resume];
}

id objc_msgSend_resumeNotifications(void *a1, const char *a2, ...)
{
  return _[a1 resumeNotifications];
}

id objc_msgSend_resumeNowPlayingSesion(void *a1, const char *a2, ...)
{
  return _[a1 resumeNowPlayingSesion];
}

id objc_msgSend_retrieveFirewallWithQueue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "retrieveFirewallWithQueue:completion:");
}

id objc_msgSend_retrieveSessionWithID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "retrieveSessionWithID:");
}

id objc_msgSend_reverseObjectEnumerator(void *a1, const char *a2, ...)
{
  return _[a1 reverseObjectEnumerator];
}

id objc_msgSend_revision(void *a1, const char *a2, ...)
{
  return _[a1 revision];
}

id objc_msgSend_revokeAllBannersWithReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "revokeAllBannersWithReply:");
}

id objc_msgSend_revokeAutoApprovalForAllParticipants(void *a1, const char *a2, ...)
{
  return _[a1 revokeAutoApprovalForAllParticipants];
}

id objc_msgSend_revokeAutoApprovalForParticipant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "revokeAutoApprovalForParticipant:");
}

id objc_msgSend_revokeBannerWithIdentifier_withReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "revokeBannerWithIdentifier:withReply:");
}

id objc_msgSend_rotatingSessionIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 rotatingSessionIdentifier];
}

id objc_msgSend_route(void *a1, const char *a2, ...)
{
  return _[a1 route];
}

id objc_msgSend_route_endpoint_bundleIdentifier_emittedEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "route:endpoint:bundleIdentifier:emittedEvent:");
}

id objc_msgSend_routeDiscoveryMode(void *a1, const char *a2, ...)
{
  return _[a1 routeDiscoveryMode];
}

id objc_msgSend_routeIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 routeIdentifier];
}

id objc_msgSend_routeIsValidForHosting(void *a1, const char *a2, ...)
{
  return _[a1 routeIsValidForHosting];
}

id objc_msgSend_routeRecommendationActivities(void *a1, const char *a2, ...)
{
  return _[a1 routeRecommendationActivities];
}

id objc_msgSend_routeRecommendationDismissed(void *a1, const char *a2, ...)
{
  return _[a1 routeRecommendationDismissed];
}

id objc_msgSend_routeRecommendationIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 routeRecommendationIdentifiers];
}

id objc_msgSend_routeSymbolName(void *a1, const char *a2, ...)
{
  return _[a1 routeSymbolName];
}

id objc_msgSend_routeType(void *a1, const char *a2, ...)
{
  return _[a1 routeType];
}

id objc_msgSend_routeUID(void *a1, const char *a2, ...)
{
  return _[a1 routeUID];
}

id objc_msgSend_routeWithCandidate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "routeWithCandidate:");
}

id objc_msgSend_routeWithEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "routeWithEndpoint:");
}

id objc_msgSend_routeWithOutputDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "routeWithOutputDevices:");
}

id objc_msgSend_routedAppDisplayID(void *a1, const char *a2, ...)
{
  return _[a1 routedAppDisplayID];
}

id objc_msgSend_routedBackgroundActivityManager(void *a1, const char *a2, ...)
{
  return _[a1 routedBackgroundActivityManager];
}

id objc_msgSend_routedCommands(void *a1, const char *a2, ...)
{
  return _[a1 routedCommands];
}

id objc_msgSend_routingContextID(void *a1, const char *a2, ...)
{
  return _[a1 routingContextID];
}

id objc_msgSend_routingContextUID(void *a1, const char *a2, ...)
{
  return _[a1 routingContextUID];
}

id objc_msgSend_routingDataSource(void *a1, const char *a2, ...)
{
  return _[a1 routingDataSource];
}

id objc_msgSend_routingServer(void *a1, const char *a2, ...)
{
  return _[a1 routingServer];
}

id objc_msgSend_rtiService(void *a1, const char *a2, ...)
{
  return _[a1 rtiService];
}

id objc_msgSend_run(void *a1, const char *a2, ...)
{
  return _[a1 run];
}

id objc_msgSend_runSession_withMode_andServiceToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "runSession:withMode:andServiceToken:");
}

id objc_msgSend_runWithConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "runWithConfiguration:");
}

id objc_msgSend_saveToStorage(void *a1, const char *a2, ...)
{
  return _[a1 saveToStorage];
}

id objc_msgSend_scheduleLayoutChangeForReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scheduleLayoutChangeForReason:");
}

id objc_msgSend_scheduleSendBarrierBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scheduleSendBarrierBlock:");
}

id objc_msgSend_scheduledTimerWithTimeInterval_target_selector_userInfo_repeats_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:");
}

id objc_msgSend_screenSize(void *a1, const char *a2, ...)
{
  return _[a1 screenSize];
}

id objc_msgSend_searchEndpointsForCompanionWithTimeout_reason_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchEndpointsForCompanionWithTimeout:reason:queue:completion:");
}

id objc_msgSend_searchEndpointsForGroupUID_timeout_reason_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchEndpointsForGroupUID:timeout:reason:queue:completion:");
}

id objc_msgSend_searchEndpointsForLocalDevice(void *a1, const char *a2, ...)
{
  return _[a1 searchEndpointsForLocalDevice];
}

id objc_msgSend_searchEndpointsForLocalDeviceWithTimeout_details_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchEndpointsForLocalDeviceWithTimeout:details:completion:");
}

id objc_msgSend_searchEndpointsForMyGroupLeaderWithTimeout_details_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchEndpointsForMyGroupLeaderWithTimeout:details:completion:");
}

id objc_msgSend_searchEndpointsForOutputDeviceUID_timeout_details_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchEndpointsForOutputDeviceUID:timeout:details:completion:");
}

id objc_msgSend_searchEndpointsForOutputDeviceUID_timeout_details_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchEndpointsForOutputDeviceUID:timeout:details:queue:completion:");
}

id objc_msgSend_searchEndpointsForOutputDeviceUID_timeout_reason_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchEndpointsForOutputDeviceUID:timeout:reason:queue:completion:");
}

id objc_msgSend_searchEndpointsForRoutingContextUID_timeout_details_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchEndpointsForRoutingContextUID:timeout:details:completion:");
}

id objc_msgSend_searchEndpointsWithPredicate_timeout_reason_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchEndpointsWithPredicate:timeout:reason:queue:completion:");
}

id objc_msgSend_searchForBuddy(void *a1, const char *a2, ...)
{
  return _[a1 searchForBuddy];
}

id objc_msgSend_searchForGroupUID(void *a1, const char *a2, ...)
{
  return _[a1 searchForGroupUID];
}

id objc_msgSend_searchForOutputDevices_categories_timeout_reason_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchForOutputDevices:categories:timeout:reason:queue:completion:");
}

id objc_msgSend_searchOutputDevices_reason_timeout_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchOutputDevices:reason:timeout:queue:completion:");
}

id objc_msgSend_second(void *a1, const char *a2, ...)
{
  return _[a1 second];
}

id objc_msgSend_selectionReason(void *a1, const char *a2, ...)
{
  return _[a1 selectionReason];
}

id objc_msgSend_selector(void *a1, const char *a2, ...)
{
  return _[a1 selector];
}

id objc_msgSend_send_toConnection_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "send:toConnection:completion:");
}

id objc_msgSend_sendButtonEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendButtonEvent:");
}

id objc_msgSend_sendClientUpdatesConfigMessage(void *a1, const char *a2, ...)
{
  return _[a1 sendClientUpdatesConfigMessage];
}

id objc_msgSend_sendClientUpdatesConfigMessageWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendClientUpdatesConfigMessageWithCompletion:");
}

id objc_msgSend_sendCommand(void *a1, const char *a2, ...)
{
  return _[a1 sendCommand];
}

id objc_msgSend_sendCommand_options_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendCommand:options:queue:completion:");
}

id objc_msgSend_sendCommand_withOptions_toEachEndpointContainingOutputDeviceUIDs_timeout_details_completion_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "sendCommand:withOptions:toEachEndpointContainingOutputDeviceUIDs:timeout:details:completion:");
}

id objc_msgSend_sendCommand_withOptions_toNewEndpointContainingOutputDeviceUIDs_playerPath_timeout_details_completion_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "sendCommand:withOptions:toNewEndpointContainingOutputDeviceUIDs:playerPath:timeout:details:completion:");
}

id objc_msgSend_sendCommands(void *a1, const char *a2, ...)
{
  return _[a1 sendCommands];
}

id objc_msgSend_sendContentItemTransaction_request_playerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendContentItemTransaction:request:playerPath:");
}

id objc_msgSend_sendCustomData_withName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendCustomData:withName:");
}

id objc_msgSend_sendError(void *a1, const char *a2, ...)
{
  return _[a1 sendError];
}

id objc_msgSend_sendEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendEvent:");
}

id objc_msgSend_sendEvent_destination_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendEvent:destination:userInfo:");
}

id objc_msgSend_sendEvent_toDevicesOfHomeUser_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendEvent:toDevicesOfHomeUser:userInfo:");
}

id objc_msgSend_sendEventForAutoRouteBannerResult_routeCandidate_bundleIdentifier_isOutsideApp_contextIdentifier_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "sendEventForAutoRouteBannerResult:routeCandidate:bundleIdentifier:isOutsideApp:contextIdentifier:");
}

id objc_msgSend_sendEventForCallToActionForRouteCandidate_bundleIdentifier_isOutsideApp_contextIdentifier_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendEventForCallToActionForRouteCandidate:bundleIdentifier:isOutsideApp:contextIdentifier:");
}

id objc_msgSend_sendEventForOneTapSuggestionBannerResult_routeCandidate_bundleIdentifier_isOutsideApp_contextIdentifier_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "sendEventForOneTapSuggestionBannerResult:routeCandidate:bundleIdentifier:isOutsideApp:contextIdentifier:");
}

id objc_msgSend_sendEventToCompanion_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendEventToCompanion:userInfo:");
}

id objc_msgSend_sendEventToHome_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendEventToHome:userInfo:");
}

id objc_msgSend_sendGameControllerEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendGameControllerEvent:");
}

id objc_msgSend_sendLastPlayingDeviceToHome(void *a1, const char *a2, ...)
{
  return _[a1 sendLastPlayingDeviceToHome];
}

id objc_msgSend_sendMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendMessage:");
}

id objc_msgSend_sendMessage_queue_reply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendMessage:queue:reply:");
}

id objc_msgSend_sendMessage_reply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendMessage:reply:");
}

id objc_msgSend_sendMessage_timeout_reply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendMessage:timeout:reply:");
}

id objc_msgSend_sendMessage_toDestinations_priority_options_identifier_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendMessage:toDestinations:priority:options:identifier:error:");
}

id objc_msgSend_sendMessage_type_destination_session_options_priority_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendMessage:type:destination:session:options:priority:");
}

id objc_msgSend_sendMessage_type_destination_session_options_priority_response_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendMessage:type:destination:session:options:priority:response:");
}

id objc_msgSend_sendMessageData_toParticipants_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendMessageData:toParticipants:");
}

id objc_msgSend_sendMessageWithType_playerPath_timeout_reason_factory_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendMessageWithType:playerPath:timeout:reason:factory:completion:");
}

id objc_msgSend_sendPlaybackQueueResponse_forRequest_withMessage_fromNowPlayingClient_toXpcClient_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendPlaybackQueueResponse:forRequest:withMessage:fromNowPlayingClient:toXpcClient:");
}

id objc_msgSend_sendPlaybackSessionUpdateToCompanionCoalesceInterval(void *a1, const char *a2, ...)
{
  return _[a1 sendPlaybackSessionUpdateToCompanionCoalesceInterval];
}

id objc_msgSend_sendProactivePFSQAfterBoot(void *a1, const char *a2, ...)
{
  return _[a1 sendProactivePFSQAfterBoot];
}

id objc_msgSend_sendProactivePFSQOnProactiveASEChange(void *a1, const char *a2, ...)
{
  return _[a1 sendProactivePFSQOnProactiveASEChange];
}

id objc_msgSend_sendProactivePFSQOnUserSelectedASEChange(void *a1, const char *a2, ...)
{
  return _[a1 sendProactivePFSQOnUserSelectedASEChange];
}

id objc_msgSend_sendRemoteControlCommand_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendRemoteControlCommand:completion:");
}

id objc_msgSend_sendRemoteControlCommand_toClients_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendRemoteControlCommand:toClients:completion:");
}

id objc_msgSend_sendRemoteControlCommand_withCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendRemoteControlCommand:withCompletionBlock:");
}

id objc_msgSend_sendRemoteControlMessage_to_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendRemoteControlMessage:to:completion:");
}

id objc_msgSend_sendTransportData_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendTransportData:options:");
}

id objc_msgSend_senderAppDisplayID(void *a1, const char *a2, ...)
{
  return _[a1 senderAppDisplayID];
}

id objc_msgSend_senderDefaultGroupUID(void *a1, const char *a2, ...)
{
  return _[a1 senderDefaultGroupUID];
}

id objc_msgSend_senderID(void *a1, const char *a2, ...)
{
  return _[a1 senderID];
}

id objc_msgSend_serialQueue(void *a1, const char *a2, ...)
{
  return _[a1 serialQueue];
}

id objc_msgSend_server(void *a1, const char *a2, ...)
{
  return _[a1 server];
}

id objc_msgSend_serverBoundMessageHandler(void *a1, const char *a2, ...)
{
  return _[a1 serverBoundMessageHandler];
}

id objc_msgSend_serverDiscoveryModeForConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serverDiscoveryModeForConfiguration:");
}

id objc_msgSend_service(void *a1, const char *a2, ...)
{
  return _[a1 service];
}

id objc_msgSend_serviceConnection(void *a1, const char *a2, ...)
{
  return _[a1 serviceConnection];
}

id objc_msgSend_serviceEndpoint(void *a1, const char *a2, ...)
{
  return _[a1 serviceEndpoint];
}

id objc_msgSend_serviceInterface(void *a1, const char *a2, ...)
{
  return _[a1 serviceInterface];
}

id objc_msgSend_serviceToken(void *a1, const char *a2, ...)
{
  return _[a1 serviceToken];
}

id objc_msgSend_serviceTokenForServiceIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serviceTokenForServiceIdentifier:");
}

id objc_msgSend_serviceType(void *a1, const char *a2, ...)
{
  return _[a1 serviceType];
}

id objc_msgSend_serviceWithDefaultShellEndpoint(void *a1, const char *a2, ...)
{
  return _[a1 serviceWithDefaultShellEndpoint];
}

id objc_msgSend_session(void *a1, const char *a2, ...)
{
  return _[a1 session];
}

id objc_msgSend_session_didChangeState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "session:didChangeState:");
}

id objc_msgSend_session_didConnectWithInitialState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "session:didConnectWithInitialState:");
}

id objc_msgSend_session_didInvalidateWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "session:didInvalidateWithError:");
}

id objc_msgSend_session_didReceiveMessageData_fromParticipant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "session:didReceiveMessageData:fromParticipant:");
}

id objc_msgSend_session_didUpdateMembers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "session:didUpdateMembers:");
}

id objc_msgSend_session_didUpdateParticipants_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "session:didUpdateParticipants:");
}

id objc_msgSend_session_didUpdatePendingParticipants_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "session:didUpdatePendingParticipants:");
}

id objc_msgSend_session_didUpdateSynchronizedMetadata_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "session:didUpdateSynchronizedMetadata:");
}

id objc_msgSend_sessionDidRemoveAllParticipants_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sessionDidRemoveAllParticipants:");
}

id objc_msgSend_sessionIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 sessionIdentifier];
}

id objc_msgSend_sessionManagementScreenVisible(void *a1, const char *a2, ...)
{
  return _[a1 sessionManagementScreenVisible];
}

id objc_msgSend_sessionManager(void *a1, const char *a2, ...)
{
  return _[a1 sessionManager];
}

id objc_msgSend_sessionRemoteParticipantsAssertion(void *a1, const char *a2, ...)
{
  return _[a1 sessionRemoteParticipantsAssertion];
}

id objc_msgSend_sessionSecret(void *a1, const char *a2, ...)
{
  return _[a1 sessionSecret];
}

id objc_msgSend_sessionUID(void *a1, const char *a2, ...)
{
  return _[a1 sessionUID];
}

id objc_msgSend_set(void *a1, const char *a2, ...)
{
  return _[a1 set];
}

id objc_msgSend_setASEToLocal(void *a1, const char *a2, ...)
{
  return _[a1 setASEToLocal];
}

id objc_msgSend_setActionImageName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActionImageName:");
}

id objc_msgSend_setActivationHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivationHandler:");
}

id objc_msgSend_setActiveBannerState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActiveBannerState:");
}

id objc_msgSend_setActiveCategoryVolumeTo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActiveCategoryVolumeTo:");
}

id objc_msgSend_setActiveClients_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActiveClients:");
}

id objc_msgSend_setActiveConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActiveConnection:");
}

id objc_msgSend_setActiveDialog_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActiveDialog:");
}

id objc_msgSend_setActiveEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActiveEndpoint:");
}

id objc_msgSend_setActiveOrigin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActiveOrigin:");
}

id objc_msgSend_setActiveOriginClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActiveOriginClient:");
}

id objc_msgSend_setActivePasswordDialog_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivePasswordDialog:");
}

id objc_msgSend_setActivePillBannerState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivePillBannerState:");
}

id objc_msgSend_setActivePillRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivePillRequest:");
}

id objc_msgSend_setActivePlayerClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivePlayerClient:");
}

id objc_msgSend_setActiveRecommendationActivities_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActiveRecommendationActivities:");
}

id objc_msgSend_setActiveRecommendations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActiveRecommendations:");
}

id objc_msgSend_setActiveRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActiveRequest:");
}

id objc_msgSend_setActiveSession_identity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActiveSession:identity:");
}

id objc_msgSend_setActiveSessionDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActiveSessionDidChange:");
}

id objc_msgSend_setActiveSystemEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActiveSystemEndpoint:");
}

id objc_msgSend_setActiveSystemEndpointOutputDeviceUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActiveSystemEndpointOutputDeviceUID:");
}

id objc_msgSend_setActiveTransactions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActiveTransactions:");
}

id objc_msgSend_setActiveUserChangedTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActiveUserChangedTimer:");
}

id objc_msgSend_setActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivity:");
}

id objc_msgSend_setActivityServer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivityServer:");
}

id objc_msgSend_setAdvertisingPreferenceEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAdvertisingPreferenceEnabled:");
}

id objc_msgSend_setAirPlayActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAirPlayActive:");
}

id objc_msgSend_setAirPlayGroupID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAirPlayGroupID:");
}

id objc_msgSend_setAirPlayGroupUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAirPlayGroupUID:");
}

id objc_msgSend_setAirPlayReceivers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAirPlayReceivers:");
}

id objc_msgSend_setAirplayActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAirplayActive:");
}

id objc_msgSend_setAirplaySecuritySettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAirplaySecuritySettings:");
}

id objc_msgSend_setAlertHeader_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlertHeader:");
}

id objc_msgSend_setAlertMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlertMessage:");
}

id objc_msgSend_setAllClusterMembers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllClusterMembers:");
}

id objc_msgSend_setAllClusteredDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllClusteredDevices:");
}

id objc_msgSend_setAllowedAuditTokens_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowedAuditTokens:");
}

id objc_msgSend_setAllowedContextUpdates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowedContextUpdates:");
}

id objc_msgSend_setAllowedDestinations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowedDestinations:");
}

id objc_msgSend_setAllowedTransactionMemory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowedTransactionMemory:");
}

id objc_msgSend_setAlternateButtonTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlternateButtonTitle:");
}

id objc_msgSend_setAlwaysAllowUpdates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlwaysAllowUpdates:");
}

id objc_msgSend_setAlwaysLogUpdates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlwaysLogUpdates:");
}

id objc_msgSend_setAmbientForegrounded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAmbientForegrounded:");
}

id objc_msgSend_setAppOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAppOptions:");
}

id objc_msgSend_setArtwork_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setArtwork:");
}

id objc_msgSend_setArtworkHeight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setArtworkHeight:");
}

id objc_msgSend_setArtworkURLTemplates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setArtworkURLTemplates:");
}

id objc_msgSend_setArtworkWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setArtworkWidth:");
}

id objc_msgSend_setArtworks_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setArtworks:");
}

id objc_msgSend_setAse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAse:");
}

id objc_msgSend_setAseNowPlayingController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAseNowPlayingController:");
}

id objc_msgSend_setAssertion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssertion:");
}

id objc_msgSend_setAttribute_forKey_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttribute:forKey:error:");
}

id objc_msgSend_setAutoConnectedEndpoints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutoConnectedEndpoints:");
}

id objc_msgSend_setAutoConnectingEndpoints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutoConnectingEndpoints:");
}

id objc_msgSend_setAutomaticRemoteControlConnections_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutomaticRemoteControlConnections:");
}

id objc_msgSend_setAvOutpuDeviceIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAvOutpuDeviceIdentifier:");
}

id objc_msgSend_setAvailableOutputDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAvailableOutputDevices:");
}

id objc_msgSend_setBannerCenter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBannerCenter:");
}

id objc_msgSend_setBannerControllable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBannerControllable:");
}

id objc_msgSend_setBannerType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBannerType:");
}

id objc_msgSend_setBatchedNowPlayingState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBatchedNowPlayingState:");
}

id objc_msgSend_setBluetoothAddressChangedHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBluetoothAddressChangedHandler:");
}

id objc_msgSend_setBool_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBool:forKey:");
}

id objc_msgSend_setBuildVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBuildVersion:");
}

id objc_msgSend_setBundleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBundleID:");
}

id objc_msgSend_setBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBundleIdentifier:");
}

id objc_msgSend_setBundleIdentifierAffinity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBundleIdentifierAffinity:");
}

id objc_msgSend_setBundleIdentifierPendingUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBundleIdentifierPendingUpdate:");
}

id objc_msgSend_setBundleVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBundleVersion:");
}

id objc_msgSend_setBundles_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBundles:");
}

id objc_msgSend_setBundlesInFocus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBundlesInFocus:");
}

id objc_msgSend_setByAddingObjectsFromArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setByAddingObjectsFromArray:");
}

id objc_msgSend_setByAddingObjectsFromSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setByAddingObjectsFromSet:");
}

id objc_msgSend_setCallToAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCallToAction:");
}

id objc_msgSend_setCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCallback:");
}

id objc_msgSend_setCanAccessAppleMusic_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCanAccessAppleMusic:");
}

id objc_msgSend_setCanAccessRemoteAssets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCanAccessRemoteAssets:");
}

id objc_msgSend_setCanAccessiCloudMusicLibrary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCanAccessiCloudMusicLibrary:");
}

id objc_msgSend_setCanBeNowPlaying_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCanBeNowPlaying:");
}

id objc_msgSend_setCanBeNowPlayingPlayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCanBeNowPlayingPlayer:");
}

id objc_msgSend_setCanBeNowPlayingPlayerTimestamp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCanBeNowPlayingPlayerTimestamp:");
}

id objc_msgSend_setCanBeNowPlayingTimestamp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCanBeNowPlayingTimestamp:");
}

id objc_msgSend_setChangeType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setChangeType:");
}

id objc_msgSend_setClasses_forSelector_argumentIndex_ofReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClasses:forSelector:argumentIndex:ofReply:");
}

id objc_msgSend_setClassification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClassification:");
}

id objc_msgSend_setClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClient:");
}

id objc_msgSend_setClientBoundMessageHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClientBoundMessageHandler:");
}

id objc_msgSend_setClientBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClientBundleIdentifier:");
}

id objc_msgSend_setClientConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClientConnection:");
}

id objc_msgSend_setClientMessageCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClientMessageCallback:");
}

id objc_msgSend_setClientMessagingExpectation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClientMessagingExpectation:");
}

id objc_msgSend_setClientProperties_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClientProperties:");
}

id objc_msgSend_setClusterAware_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClusterAware:");
}

id objc_msgSend_setClusterID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClusterID:");
}

id objc_msgSend_setClusterLeader_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClusterLeader:");
}

id objc_msgSend_setClusterLeaderID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClusterLeaderID:");
}

id objc_msgSend_setClusterLeaderOperations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClusterLeaderOperations:");
}

id objc_msgSend_setClusterStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClusterStatus:");
}

id objc_msgSend_setClusterType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClusterType:");
}

id objc_msgSend_setClusteredDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClusteredDevices:");
}

id objc_msgSend_setCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCommand:");
}

id objc_msgSend_setCommandCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCommandCallback:");
}

id objc_msgSend_setCommandClientsRestriction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCommandClientsRestriction:");
}

id objc_msgSend_setCommandDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCommandDictionary:");
}

id objc_msgSend_setCommandString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCommandString:");
}

id objc_msgSend_setCommandType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCommandType:");
}

id objc_msgSend_setCommunicationChannelDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCommunicationChannelDelegate:");
}

id objc_msgSend_setCompanionEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompanionEndpoint:");
}

id objc_msgSend_setCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompletion:");
}

id objc_msgSend_setCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompletionBlock:");
}

id objc_msgSend_setCompletionBlockDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompletionBlockDictionary:");
}

id objc_msgSend_setComputedNowPlayingClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setComputedNowPlayingClient:");
}

id objc_msgSend_setComputerName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setComputerName:");
}

id objc_msgSend_setConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConfiguration:");
}

id objc_msgSend_setConfiguredClusterSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConfiguredClusterSize:");
}

id objc_msgSend_setConnectOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectOptions:");
}

id objc_msgSend_setConnectUserInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectUserInfo:");
}

id objc_msgSend_setConnected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnected:");
}

id objc_msgSend_setConnectedClientAuditTokens_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectedClientAuditTokens:");
}

id objc_msgSend_setConnectedExternalDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectedExternalDevices:");
}

id objc_msgSend_setConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnection:");
}

id objc_msgSend_setConnectionAttemptDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectionAttemptDate:");
}

id objc_msgSend_setConnectionError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectionError:");
}

id objc_msgSend_setConnectionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectionHandler:");
}

id objc_msgSend_setConnectionRecoveryBehavior_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectionRecoveryBehavior:");
}

id objc_msgSend_setConnectionState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectionState:");
}

id objc_msgSend_setConnectionState_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectionState:error:");
}

id objc_msgSend_setConnectionStateCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectionStateCallback:");
}

id objc_msgSend_setConnectionStateCallback_withQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectionStateCallback:withQueue:");
}

id objc_msgSend_setConnectionStateError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnectionStateError:");
}

id objc_msgSend_setConnections_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConnections:");
}

id objc_msgSend_setConservativelyFiltered_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConservativelyFiltered:");
}

id objc_msgSend_setContainsLeaderInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContainsLeaderInfo:");
}

id objc_msgSend_setContentItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentItem:");
}

id objc_msgSend_setContentItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentItems:");
}

id objc_msgSend_setContentItemsArtwork_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentItemsArtwork:");
}

id objc_msgSend_setContextIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContextIdentifier:");
}

id objc_msgSend_setContinuousPlaybackDetectionTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContinuousPlaybackDetectionTimer:");
}

id objc_msgSend_setControlCenterForegrounded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setControlCenterForegrounded:");
}

id objc_msgSend_setConversationDetectionEnabled_outputDeviceUID_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConversationDetectionEnabled:outputDeviceUID:queue:completion:");
}

id objc_msgSend_setCryptoEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCryptoEnabled:");
}

id objc_msgSend_setCurrentGroupSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentGroupSession:");
}

id objc_msgSend_setCurrentMediaUserState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentMediaUserState:");
}

id objc_msgSend_setCurrentPersonalDeviceUIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentPersonalDeviceUIDs:");
}

id objc_msgSend_setCurrentPlaybackSessionIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentPlaybackSessionIdentifier:");
}

id objc_msgSend_setCurrentPlaybackSessionTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentPlaybackSessionTypes:");
}

id objc_msgSend_setCurrentTaskAssertion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentTaskAssertion:");
}

id objc_msgSend_setCustomDataCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCustomDataCallback:");
}

id objc_msgSend_setCustomDataCallback_withQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCustomDataCallback:withQueue:");
}

id objc_msgSend_setCustomOrigin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCustomOrigin:");
}

id objc_msgSend_setDaemonClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDaemonClient:");
}

id objc_msgSend_setDataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDataSource:");
}

id objc_msgSend_setDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDate:");
}

id objc_msgSend_setDateCreated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDateCreated:");
}

id objc_msgSend_setDeclaringAirplayActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeclaringAirplayActive:");
}

id objc_msgSend_setDefaultButtonTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDefaultButtonTitle:");
}

id objc_msgSend_setDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDelegate:");
}

id objc_msgSend_setDelegate_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDelegate:queue:");
}

id objc_msgSend_setDelegateQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDelegateQueue:");
}

id objc_msgSend_setDemoteWhenSyncingToCompanion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDemoteWhenSyncingToCompanion:");
}

id objc_msgSend_setDescriptor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDescriptor:");
}

id objc_msgSend_setDesignatedGroupLeader_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDesignatedGroupLeader:");
}

id objc_msgSend_setDesignatedGroupLeaderWhenContextEmpty_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDesignatedGroupLeaderWhenContextEmpty:");
}

id objc_msgSend_setDestination_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDestination:");
}

id objc_msgSend_setDestinationAppDisplayID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDestinationAppDisplayID:");
}

id objc_msgSend_setDestinationAppProcessID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDestinationAppProcessID:");
}

id objc_msgSend_setDestinationEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDestinationEndpoint:");
}

id objc_msgSend_setDestinationGroupUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDestinationGroupUID:");
}

id objc_msgSend_setDestinationOutputDeviceUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDestinationOutputDeviceUID:");
}

id objc_msgSend_setDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDevice:");
}

id objc_msgSend_setDeviceClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceClass:");
}

id objc_msgSend_setDeviceID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceID:");
}

id objc_msgSend_setDeviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceInfo:");
}

id objc_msgSend_setDeviceInfoCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceInfoCallback:");
}

id objc_msgSend_setDeviceInfoChangedCallback_withQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceInfoChangedCallback:withQueue:");
}

id objc_msgSend_setDeviceName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceName:");
}

id objc_msgSend_setDevicePlaybackSessionID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDevicePlaybackSessionID:");
}

id objc_msgSend_setDeviceSpecificUserInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceSpecificUserInfo:");
}

id objc_msgSend_setDeviceState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceState:");
}

id objc_msgSend_setDeviceSubType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceSubType:");
}

id objc_msgSend_setDeviceType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceType:");
}

id objc_msgSend_setDeviceUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceUID:");
}

id objc_msgSend_setDevicesInGroup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDevicesInGroup:");
}

id objc_msgSend_setDiagnosticInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDiagnosticInfo:");
}

id objc_msgSend_setDidStartRecording_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDidStartRecording:");
}

id objc_msgSend_setDisableDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisableDuration:");
}

id objc_msgSend_setDisconnectTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisconnectTimer:");
}

id objc_msgSend_setDisconnected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisconnected:");
}

id objc_msgSend_setDiscoverableGroupLeader_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDiscoverableGroupLeader:");
}

id objc_msgSend_setDiscoveredSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDiscoveredSession:");
}

id objc_msgSend_setDiscoveryMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDiscoveryMode:");
}

id objc_msgSend_setDiscoveryMode_forClientIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDiscoveryMode:forClientIdentifiers:");
}

id objc_msgSend_setDiscoveryMode_forConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDiscoveryMode:forConfiguration:");
}

id objc_msgSend_setDiscoveryMode_forToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDiscoveryMode:forToken:");
}

id objc_msgSend_setDiscoveryOutputDevicesChangedCallback_forToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDiscoveryOutputDevicesChangedCallback:forToken:");
}

id objc_msgSend_setDiscoverySession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDiscoverySession:");
}

id objc_msgSend_setDiscoverySessionConfigurationsResults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDiscoverySessionConfigurationsResults:");
}

id objc_msgSend_setDiscoverySessions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDiscoverySessions:");
}

id objc_msgSend_setDiscoveryToken_forConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDiscoveryToken:forConfiguration:");
}

id objc_msgSend_setDiscoveryTransaction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDiscoveryTransaction:");
}

id objc_msgSend_setDismissOverlaysOnLockscreen_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDismissOverlaysOnLockscreen:");
}

id objc_msgSend_setDispatchQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDispatchQueue:");
}

id objc_msgSend_setDisplayName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisplayName:");
}

id objc_msgSend_setDisplayOn_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisplayOn:");
}

id objc_msgSend_setDistantPersonalOutputDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDistantPersonalOutputDevices:");
}

id objc_msgSend_setDsidToPendingCompletionMap_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDsidToPendingCompletionMap:");
}

id objc_msgSend_setElectedPlayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setElectedPlayer:");
}

id objc_msgSend_setElectedPlayerReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setElectedPlayerReason:");
}

id objc_msgSend_setEligibilityStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEligibilityStatus:");
}

id objc_msgSend_setEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnabled:");
}

id objc_msgSend_setEndDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEndDate:");
}

id objc_msgSend_setEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEndpoint:");
}

id objc_msgSend_setEndpoints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEndpoints:");
}

id objc_msgSend_setEnqueuedCommands_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnqueuedCommands:");
}

id objc_msgSend_setError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setError:");
}

id objc_msgSend_setEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEvent:");
}

id objc_msgSend_setEventReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEventReason:");
}

id objc_msgSend_setEvents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEvents:");
}

id objc_msgSend_setExpectedClientAuditTokens_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExpectedClientAuditTokens:");
}

id objc_msgSend_setExpirationDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExpirationDate:");
}

id objc_msgSend_setExplicitNowPlayingClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExplicitNowPlayingClient:");
}

id objc_msgSend_setExportedInterface_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExportedInterface:");
}

id objc_msgSend_setExportedObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExportedObject:");
}

id objc_msgSend_setExternalDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExternalDevice:");
}

id objc_msgSend_setExternalDeviceListenerEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExternalDeviceListenerEndpoint:");
}

id objc_msgSend_setFirewall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFirewall:");
}

id objc_msgSend_setFocusMonitor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFocusMonitor:");
}

id objc_msgSend_setForceModalAlertAppearance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setForceModalAlertAppearance:");
}

id objc_msgSend_setFrontmostClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFrontmostClient:");
}

id objc_msgSend_setGroupContainsDiscoverableGroupLeader_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGroupContainsDiscoverableGroupLeader:");
}

id objc_msgSend_setGroupContainsGroupLeader_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGroupContainsGroupLeader:");
}

id objc_msgSend_setGroupID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGroupID:");
}

id objc_msgSend_setGroupLeader_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGroupLeader:");
}

id objc_msgSend_setGroupLeaderOperations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGroupLeaderOperations:");
}

id objc_msgSend_setGroupLogicalDeviceCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGroupLogicalDeviceCount:");
}

id objc_msgSend_setGroupName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGroupName:");
}

id objc_msgSend_setGroupSessionCoordinatorState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGroupSessionCoordinatorState:");
}

id objc_msgSend_setGroupSessionDiscoveryEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGroupSessionDiscoveryEnabled:");
}

id objc_msgSend_setGroupSessionManagerAdvertiseReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGroupSessionManagerAdvertiseReason:");
}

id objc_msgSend_setGroupSessionToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGroupSessionToken:");
}

id objc_msgSend_setGroupSessionsSupportedForAccountRegion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGroupSessionsSupportedForAccountRegion:");
}

id objc_msgSend_setGroupUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGroupUID:");
}

id objc_msgSend_setGroupedDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGroupedDevices:");
}

id objc_msgSend_setHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHandle:");
}

id objc_msgSend_setHardwareRemoteBehavior_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHardwareRemoteBehavior:");
}

id objc_msgSend_setHasAcceptedDisplayNameAcknowledgement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasAcceptedDisplayNameAcknowledgement:");
}

id objc_msgSend_setHasAcceptedPrivacyAcknowledgement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasAcceptedPrivacyAcknowledgement:");
}

id objc_msgSend_setHasAttemptedToConnect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasAttemptedToConnect:");
}

id objc_msgSend_setHasConnectionAttemptCompleted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasConnectionAttemptCompleted:");
}

id objc_msgSend_setHasDeferredDisconnectionDueToDeviceState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasDeferredDisconnectionDueToDeviceState:");
}

id objc_msgSend_setHasGroupSessionLowPowerAssertion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasGroupSessionLowPowerAssertion:");
}

id objc_msgSend_setHasGroupSessionLowPowerPlatterAssertion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasGroupSessionLowPowerPlatterAssertion:");
}

id objc_msgSend_setHasGroupSessionNearbyAssertion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasGroupSessionNearbyAssertion:");
}

id objc_msgSend_setHasGuestParticipants_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasGuestParticipants:");
}

id objc_msgSend_setHasIsVolumeControlAvailable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasIsVolumeControlAvailable:");
}

id objc_msgSend_setHasLockScreenAssertion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasLockScreenAssertion:");
}

id objc_msgSend_setHasLockScreenControlsAssertion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasLockScreenControlsAssertion:");
}

id objc_msgSend_setHasLockScreenRecommendationAssertion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasLockScreenRecommendationAssertion:");
}

id objc_msgSend_setHasNowPlayingActivityAssertion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasNowPlayingActivityAssertion:");
}

id objc_msgSend_setHasPresentedForCurrentPersonalDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasPresentedForCurrentPersonalDevices:");
}

id objc_msgSend_setHasQuickControlsAssertion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasQuickControlsAssertion:");
}

id objc_msgSend_setHasRequestedLegacyNowPlayingInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasRequestedLegacyNowPlayingInfo:");
}

id objc_msgSend_setHasRequestedSupportedCommands_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasRequestedSupportedCommands:");
}

id objc_msgSend_setHasRouteRecommendationAssertion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasRouteRecommendationAssertion:");
}

id objc_msgSend_setHasScreenMirroringAssertion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasScreenMirroringAssertion:");
}

id objc_msgSend_setHasScreenMirroringQuickControlsAssertion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasScreenMirroringQuickControlsAssertion:");
}

id objc_msgSend_setHasTriggered_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasTriggered:");
}

id objc_msgSend_setHasVolume_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasVolume:");
}

id objc_msgSend_setHasVolumeCapabilities_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasVolumeCapabilities:");
}

id objc_msgSend_setHasVolumeMuted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasVolumeMuted:");
}

id objc_msgSend_setHomeScreenForegrounded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHomeScreenForegrounded:");
}

id objc_msgSend_setHomepodDemoMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHomepodDemoMode:");
}

id objc_msgSend_setHost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHost:");
}

id objc_msgSend_setHostDeviceClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHostDeviceClass:");
}

id objc_msgSend_setHostedDiscoverySessions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHostedDiscoverySessions:");
}

id objc_msgSend_setHostedExternalDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHostedExternalDevices:");
}

id objc_msgSend_setHostedRouteDiscoveryMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHostedRouteDiscoveryMode:");
}

id objc_msgSend_setHostedSessionIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHostedSessionIdentifier:");
}

id objc_msgSend_setIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdentifier:");
}

id objc_msgSend_setIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdentity:");
}

id objc_msgSend_setIdentityCreatedHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdentityCreatedHandler:");
}

id objc_msgSend_setIdentityDeletedHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdentityDeletedHandler:");
}

id objc_msgSend_setIdentitySupportsCollaboration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdentitySupportsCollaboration:");
}

id objc_msgSend_setIdsAccountIsValid_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdsAccountIsValid:");
}

id objc_msgSend_setIdsIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdsIdentifier:");
}

id objc_msgSend_setIncludeMetadata_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIncludeMetadata:");
}

id objc_msgSend_setIncludesPeerToPeer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIncludesPeerToPeer:");
}

id objc_msgSend_setInferredNowPlayingClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInferredNowPlayingClient:");
}

id objc_msgSend_setInferredPlaybackState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInferredPlaybackState:");
}

id objc_msgSend_setInterface_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInterface:");
}

id objc_msgSend_setInterfaceTarget_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInterfaceTarget:");
}

id objc_msgSend_setInterruptionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInterruptionHandler:");
}

id objc_msgSend_setInvalidationHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInvalidationHandler:");
}

id objc_msgSend_setIsAdvertising_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsAdvertising:");
}

id objc_msgSend_setIsAirPlayReceiverSessionActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsAirPlayReceiverSessionActive:");
}

id objc_msgSend_setIsCallingClientCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsCallingClientCallback:");
}

id objc_msgSend_setIsEligibleApp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsEligibleApp:");
}

id objc_msgSend_setIsEligibleForHostingGroupSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsEligibleForHostingGroupSession:");
}

id objc_msgSend_setIsEligibleForHostingGroupSessionExcludingAcknowledgements_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsEligibleForHostingGroupSessionExcludingAcknowledgements:");
}

id objc_msgSend_setIsEligibleForJoiningGroupSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsEligibleForJoiningGroupSession:");
}

id objc_msgSend_setIsFullSubscriber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsFullSubscriber:");
}

id objc_msgSend_setIsGroupLeader_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsGroupLeader:");
}

id objc_msgSend_setIsLocal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsLocal:");
}

id objc_msgSend_setIsLocalDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsLocalDevice:");
}

id objc_msgSend_setIsLowPowerMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsLowPowerMode:");
}

id objc_msgSend_setIsManateeEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsManateeEnabled:");
}

id objc_msgSend_setIsMinor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsMinor:");
}

id objc_msgSend_setIsMuted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsMuted:");
}

id objc_msgSend_setIsMuted_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsMuted:error:");
}

id objc_msgSend_setIsOutsideApp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsOutsideApp:");
}

id objc_msgSend_setIsPlaying_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsPlaying:");
}

id objc_msgSend_setIsProxyAdvertising_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsProxyAdvertising:");
}

id objc_msgSend_setIsProxyGroupPlayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsProxyGroupPlayer:");
}

id objc_msgSend_setIsRemoteControllable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsRemoteControllable:");
}

id objc_msgSend_setIsUpdatingLowPowerMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsUpdatingLowPowerMode:");
}

id objc_msgSend_setIsVolumeControlAvailable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsVolumeControlAvailable:");
}

id objc_msgSend_setKeyboardType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKeyboardType:");
}

id objc_msgSend_setLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLabel:");
}

id objc_msgSend_setLastBootUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastBootUUID:");
}

id objc_msgSend_setLastConnectionError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastConnectionError:");
}

id objc_msgSend_setLastDonatedPickerChoice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastDonatedPickerChoice:");
}

id objc_msgSend_setLastFetchAttemptToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastFetchAttemptToken:");
}

id objc_msgSend_setLastKnownBluetoothAddress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastKnownBluetoothAddress:");
}

id objc_msgSend_setLastNotPlayingDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastNotPlayingDate:");
}

id objc_msgSend_setLastPlaybackStates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastPlaybackStates:");
}

id objc_msgSend_setLastPlayingDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastPlayingDate:");
}

id objc_msgSend_setLastSessionEventDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastSessionEventDate:");
}

id objc_msgSend_setLastSupportedClusterType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastSupportedClusterType:");
}

id objc_msgSend_setLastSupportedProtocolMessageType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastSupportedProtocolMessageType:");
}

id objc_msgSend_setLastUnusedAutoRoute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastUnusedAutoRoute:");
}

id objc_msgSend_setLastUnusedAutoRouteBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastUnusedAutoRouteBundleIdentifier:");
}

id objc_msgSend_setLeader_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLeader:");
}

id objc_msgSend_setLeaderDeviceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLeaderDeviceInfo:");
}

id objc_msgSend_setLegacyAssertion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLegacyAssertion:");
}

id objc_msgSend_setLength_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLength:");
}

id objc_msgSend_setLinkAgent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLinkAgent:");
}

id objc_msgSend_setListeningMode_outputDeviceUID_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setListeningMode:outputDeviceUID:queue:completion:");
}

id objc_msgSend_setLocal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocal:");
}

id objc_msgSend_setLocalEndpointConnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalEndpointConnection:");
}

id objc_msgSend_setLocalHostedInvalidationPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalHostedInvalidationPlayerPath:");
}

id objc_msgSend_setLocalInvalidationXPCClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalInvalidationXPCClient:");
}

id objc_msgSend_setLocalLastPlayingDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalLastPlayingDate:");
}

id objc_msgSend_setLocalMusicIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalMusicIdentity:");
}

id objc_msgSend_setLocalNowPlayingClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalNowPlayingClient:");
}

id objc_msgSend_setLocalNowPlayingController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalNowPlayingController:");
}

id objc_msgSend_setLocalOriginClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalOriginClient:");
}

id objc_msgSend_setLocalPlaybackState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalPlaybackState:");
}

id objc_msgSend_setLocalReceiverPairingIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalReceiverPairingIdentity:");
}

id objc_msgSend_setLocalSystemEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalSystemEndpoint:");
}

id objc_msgSend_setLocalizedModelName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalizedModelName:");
}

id objc_msgSend_setLocallyHosted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocallyHosted:");
}

id objc_msgSend_setLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocation:");
}

id objc_msgSend_setLockScreenControl_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLockScreenControl:");
}

id objc_msgSend_setLockScreenForegrounded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLockScreenForegrounded:");
}

id objc_msgSend_setLockScreenPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLockScreenPlayerPath:");
}

id objc_msgSend_setLockScreenVisible_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLockScreenVisible:");
}

id objc_msgSend_setLockScreenWidgetActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLockScreenWidgetActive:");
}

id objc_msgSend_setLockScreenWidgetVisible_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLockScreenWidgetVisible:");
}

id objc_msgSend_setLowPowerDeferralTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLowPowerDeferralTimer:");
}

id objc_msgSend_setLowPowerError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLowPowerError:");
}

id objc_msgSend_setMaintainReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMaintainReason:");
}

id objc_msgSend_setManagedConfigurationDeviceIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setManagedConfigurationDeviceIdentifier:");
}

id objc_msgSend_setManateeChangedHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setManateeChangedHandler:");
}

id objc_msgSend_setMaxConcurrentOperationCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMaxConcurrentOperationCount:");
}

id objc_msgSend_setMediaAccountHostingState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMediaAccountHostingState:");
}

id objc_msgSend_setMediaAccountJoiningState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMediaAccountJoiningState:");
}

id objc_msgSend_setMediaBundlesInFocus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMediaBundlesInFocus:");
}

id objc_msgSend_setMediaRemoteData_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMediaRemoteData:completionHandler:");
}

id objc_msgSend_setMediaServerController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMediaServerController:");
}

id objc_msgSend_setMediaUserStates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMediaUserStates:");
}

id objc_msgSend_setMembers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMembers:");
}

id objc_msgSend_setMessageHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMessageHandler:");
}

id objc_msgSend_setMessageHandler_forType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMessageHandler:forType:");
}

id objc_msgSend_setMessageHandler_forType_destination_session_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMessageHandler:forType:destination:session:");
}

id objc_msgSend_setMessageProxy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMessageProxy:");
}

id objc_msgSend_setMetadata_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMetadata:");
}

id objc_msgSend_setMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMode:");
}

id objc_msgSend_setModelID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setModelID:");
}

id objc_msgSend_setModifyOutputContextImplementation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setModifyOutputContextImplementation:");
}

id objc_msgSend_setMrDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMrDelegate:");
}

id objc_msgSend_setMuteUntilFinished_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMuteUntilFinished:");
}

id objc_msgSend_setName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setName:");
}

id objc_msgSend_setNameCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNameCallback:");
}

id objc_msgSend_setNativeOutputDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNativeOutputDevice:");
}

id objc_msgSend_setNotAdvertisingReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNotAdvertisingReason:");
}

id objc_msgSend_setNotProxyAdvertisingReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNotProxyAdvertisingReason:");
}

id objc_msgSend_setNotificationQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNotificationQueue:");
}

id objc_msgSend_setNotificationToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNotificationToken:");
}

id objc_msgSend_setNotifications_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNotifications:");
}

id objc_msgSend_setNowPlayingActivityAssertionEndDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNowPlayingActivityAssertionEndDate:");
}

id objc_msgSend_setNowPlayingActivityAssertionEndTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNowPlayingActivityAssertionEndTimer:");
}

id objc_msgSend_setNowPlayingActivityUserIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNowPlayingActivityUserIdentifier:");
}

id objc_msgSend_setNowPlayingAirPlaySession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNowPlayingAirPlaySession:");
}

id objc_msgSend_setNowPlayingApplicationDisplayID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNowPlayingApplicationDisplayID:");
}

id objc_msgSend_setNowPlayingApplicationIsPlaying_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNowPlayingApplicationIsPlaying:");
}

id objc_msgSend_setNowPlayingApplicationPID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNowPlayingApplicationPID:");
}

id objc_msgSend_setNowPlayingApplications_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNowPlayingApplications:");
}

id objc_msgSend_setNowPlayingAudioFormatContentInfos_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNowPlayingAudioFormatContentInfos:");
}

id objc_msgSend_setNowPlayingClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNowPlayingClient:");
}

id objc_msgSend_setNowPlayingDataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNowPlayingDataSource:");
}

id objc_msgSend_setNowPlayingPlayerClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNowPlayingPlayerClient:");
}

id objc_msgSend_setNowPlayingSessions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNowPlayingSessions:");
}

id objc_msgSend_setNowPlayingStateMonitor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNowPlayingStateMonitor:");
}

id objc_msgSend_setNumberOfDevicesOnLocal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberOfDevicesOnLocal:");
}

id objc_msgSend_setNumberOfDiscoveredOutputDeviceUIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberOfDiscoveredOutputDeviceUIDs:");
}

id objc_msgSend_setNumberOfEndpoints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberOfEndpoints:");
}

id objc_msgSend_setNumberOfErrorsAtCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberOfErrorsAtCompletion:");
}

id objc_msgSend_setNumberOfErrorsAtTimeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberOfErrorsAtTimeout:");
}

id objc_msgSend_setNumberOfMissingOutputDeviceUIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberOfMissingOutputDeviceUIDs:");
}

id objc_msgSend_setNumberOfPendingAtTimeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberOfPendingAtTimeout:");
}

id objc_msgSend_setNumberOfSuccessAtCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberOfSuccessAtCompletion:");
}

id objc_msgSend_setNumberOfSuccessAtTimeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberOfSuccessAtTimeout:");
}

id objc_msgSend_setNumberOfUndesiredDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberOfUndesiredDevices:");
}

id objc_msgSend_setObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:forKey:");
}

id objc_msgSend_setObject_forKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:forKeyedSubscript:");
}

id objc_msgSend_setObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObjects:");
}

id objc_msgSend_setObservers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObservers:");
}

id objc_msgSend_setOobKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOobKeys:");
}

id objc_msgSend_setOperationType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOperationType:");
}

id objc_msgSend_setOperationTypeString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOperationTypeString:");
}

id objc_msgSend_setOperations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOperations:");
}

id objc_msgSend_setOptimisticDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOptimisticDevices:");
}

id objc_msgSend_setOptimisticRoute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOptimisticRoute:");
}

id objc_msgSend_setOptionValue_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOptionValue:forKey:");
}

id objc_msgSend_setOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOptions:");
}

id objc_msgSend_setOrigin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOrigin:");
}

id objc_msgSend_setOriginClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOriginClient:");
}

id objc_msgSend_setOriginClient_withChangeType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOriginClient:withChangeType:");
}

id objc_msgSend_setOriginClients_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOriginClients:");
}

id objc_msgSend_setOriginForwarders_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOriginForwarders:");
}

id objc_msgSend_setOriginUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOriginUID:");
}

id objc_msgSend_setOutputContextForLocalDeviceDataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOutputContextForLocalDeviceDataSource:");
}

id objc_msgSend_setOutputDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOutputDevice:");
}

id objc_msgSend_setOutputDevice_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOutputDevice:options:");
}

id objc_msgSend_setOutputDevice_options_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOutputDevice:options:completionHandler:");
}

id objc_msgSend_setOutputDeviceModifications_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOutputDeviceModifications:");
}

id objc_msgSend_setOutputDeviceMute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOutputDeviceMute:");
}

id objc_msgSend_setOutputDeviceNames_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOutputDeviceNames:");
}

id objc_msgSend_setOutputDeviceUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOutputDeviceUID:");
}

id objc_msgSend_setOutputDeviceVolume_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOutputDeviceVolume:");
}

id objc_msgSend_setOutputDeviceVolume_outputDevice_details_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOutputDeviceVolume:outputDevice:details:queue:completion:");
}

id objc_msgSend_setOutputDeviceVolume_outputDeviceUID_details_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOutputDeviceVolume:outputDeviceUID:details:queue:completion:");
}

id objc_msgSend_setOutputDeviceVolumeCapabilities_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOutputDeviceVolumeCapabilities:");
}

id objc_msgSend_setOutputDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOutputDevices:");
}

id objc_msgSend_setOutputDevices_initiator_withCallbackQueue_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOutputDevices:initiator:withCallbackQueue:block:");
}

id objc_msgSend_setOutputDevices_initiator_withReplyQueue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOutputDevices:initiator:withReplyQueue:completion:");
}

id objc_msgSend_setOutputDevices_options_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOutputDevices:options:completionHandler:");
}

id objc_msgSend_setOutputDevicesRemovedCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOutputDevicesRemovedCallback:");
}

id objc_msgSend_setOutputDevicesRemovedCallback_withQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOutputDevicesRemovedCallback:withQueue:");
}

id objc_msgSend_setOutputDevicesUpdatedCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOutputDevicesUpdatedCallback:");
}

id objc_msgSend_setOutputDevicesUpdatedCallback_withQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOutputDevicesUpdatedCallback:withQueue:");
}

id objc_msgSend_setOverrideClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOverrideClient:");
}

id objc_msgSend_setOverrideTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOverrideTimer:");
}

id objc_msgSend_setPairedDeviceSync_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPairedDeviceSync:");
}

id objc_msgSend_setPairedPeerRemovedHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPairedPeerRemovedHandler:");
}

id objc_msgSend_setPairingAllowed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPairingAllowed:");
}

id objc_msgSend_setPairingAllowedCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPairingAllowedCallback:");
}

id objc_msgSend_setPairingCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPairingCallback:");
}

id objc_msgSend_setParentGroupContainsDiscoverableGroupLeader_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setParentGroupContainsDiscoverableGroupLeader:");
}

id objc_msgSend_setParentGroupContainsDiscoverableLeader_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setParentGroupContainsDiscoverableLeader:");
}

id objc_msgSend_setParentGroupIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setParentGroupIdentifier:");
}

id objc_msgSend_setParticipantDataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setParticipantDataSource:");
}

id objc_msgSend_setParticipants_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setParticipants:");
}

id objc_msgSend_setPauseOperation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPauseOperation:");
}

id objc_msgSend_setPausePredictedRoutesTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPausePredictedRoutesTimer:");
}

id objc_msgSend_setPending_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPending:");
}

id objc_msgSend_setPendingCompletionsPerOutputDeviceUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPendingCompletionsPerOutputDeviceUID:");
}

id objc_msgSend_setPendingRelayEndpointReplies_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPendingRelayEndpointReplies:");
}

id objc_msgSend_setPepper_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPepper:");
}

id objc_msgSend_setPepperExpirationDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPepperExpirationDate:");
}

id objc_msgSend_setPepperExpirationTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPepperExpirationTimer:");
}

id objc_msgSend_setPerPlayerCanBeNowPlaying_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPerPlayerCanBeNowPlaying:");
}

id objc_msgSend_setPersonalDeviceState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPersonalDeviceState:");
}

id objc_msgSend_setPersonalDeviceWasRecentlyAttached_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPersonalDeviceWasRecentlyAttached:");
}

id objc_msgSend_setPickedRoute_withPassword_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPickedRoute:withPassword:");
}

id objc_msgSend_setPickedRoute_withPassword_forSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPickedRoute:withPassword:forSource:");
}

id objc_msgSend_setPickedRoute_withPassword_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPickedRoute:withPassword:options:");
}

id objc_msgSend_setPickedSystemRoute_withPassword_forSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPickedSystemRoute:withPassword:forSource:");
}

id objc_msgSend_setPictureInPictureEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPictureInPictureEnabled:");
}

id objc_msgSend_setPid_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPid:");
}

id objc_msgSend_setPillCenter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPillCenter:");
}

id objc_msgSend_setPillCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPillCompletion:");
}

id objc_msgSend_setPinPairingToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPinPairingToken:");
}

id objc_msgSend_setPlaybackQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPlaybackQueue:");
}

id objc_msgSend_setPlaybackQueueCapabilities_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPlaybackQueueCapabilities:");
}

id objc_msgSend_setPlaybackSessionMigrateRequestCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPlaybackSessionMigrateRequestCallback:");
}

id objc_msgSend_setPlaybackState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPlaybackState:");
}

id objc_msgSend_setPlaybackStateTimestamp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPlaybackStateTimestamp:");
}

id objc_msgSend_setPlaybackTimeoutTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPlaybackTimeoutTimer:");
}

id objc_msgSend_setPlaybackTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPlaybackTimer:");
}

id objc_msgSend_setPlayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPlayer:");
}

id objc_msgSend_setPlayerClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPlayerClient:");
}

id objc_msgSend_setPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPlayerPath:");
}

id objc_msgSend_setPlayerPlaybackState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPlayerPlaybackState:");
}

id objc_msgSend_setPlayerProperties_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPlayerProperties:");
}

id objc_msgSend_setPopulatesExternalDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPopulatesExternalDevice:");
}

id objc_msgSend_setPredicates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPredicates:");
}

id objc_msgSend_setPreferredClusterLeader_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferredClusterLeader:");
}

id objc_msgSend_setPresentedBundleIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPresentedBundleIdentifiers:");
}

id objc_msgSend_setPreviousClusterLeaderID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreviousClusterLeaderID:");
}

id objc_msgSend_setPreviousGroupID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreviousGroupID:");
}

id objc_msgSend_setPreviousMaintainReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreviousMaintainReason:");
}

id objc_msgSend_setPreviousPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreviousPlayerPath:");
}

id objc_msgSend_setPrimaryUIApplicationBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrimaryUIApplicationBundleIdentifier:");
}

id objc_msgSend_setPrimaryUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrimaryUID:");
}

id objc_msgSend_setPriority_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPriority:");
}

id objc_msgSend_setPrivacyObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrivacyObserver:");
}

id objc_msgSend_setProcessHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProcessHandle:");
}

id objc_msgSend_setProcessIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProcessIdentifier:");
}

id objc_msgSend_setProcessSuspended_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProcessSuspended:");
}

id objc_msgSend_setProcessUserIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProcessUserIdentifier:");
}

id objc_msgSend_setProtocol_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProtocol:");
}

id objc_msgSend_setProtocolVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProtocolVersion:");
}

id objc_msgSend_setProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProvider:");
}

id objc_msgSend_setProxyGroupPlayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProxyGroupPlayer:");
}

id objc_msgSend_setPushStateActivePlayerClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPushStateActivePlayerClient:");
}

id objc_msgSend_setPushStateClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPushStateClient:");
}

id objc_msgSend_setPushStateHasNowPlayingData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPushStateHasNowPlayingData:");
}

id objc_msgSend_setPushStateIsPlaying_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPushStateIsPlaying:");
}

id objc_msgSend_setPushStatePictureInPictureEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPushStatePictureInPictureEnabled:");
}

id objc_msgSend_setPushStatePlaybackState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPushStatePlaybackState:");
}

id objc_msgSend_setPushStatePlayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPushStatePlayer:");
}

id objc_msgSend_setQos_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setQos:");
}

id objc_msgSend_setQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setQueue:");
}

id objc_msgSend_setRapportIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRapportIdentifier:");
}

id objc_msgSend_setReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReason:");
}

id objc_msgSend_setRecentlyDismissedSystemEndpoints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRecentlyDismissedSystemEndpoints:");
}

id objc_msgSend_setRecommendationType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRecommendationType:");
}

id objc_msgSend_setRecommendedRoutes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRecommendedRoutes:");
}

id objc_msgSend_setRecordingEndpointClients_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRecordingEndpointClients:");
}

id objc_msgSend_setRecordingState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRecordingState:");
}

id objc_msgSend_setRegisteredCallbacks_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRegisteredCallbacks:");
}

id objc_msgSend_setRegisteredKeyboardUpdates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRegisteredKeyboardUpdates:");
}

id objc_msgSend_setRegisteredToNowPlayingUpdates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRegisteredToNowPlayingUpdates:");
}

id objc_msgSend_setRegisteredToOutputDeviceUpdates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRegisteredToOutputDeviceUpdates:");
}

id objc_msgSend_setRegisteredToSystemEndpointUpdates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRegisteredToSystemEndpointUpdates:");
}

id objc_msgSend_setRegisteredToVolumeUpdates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRegisteredToVolumeUpdates:");
}

id objc_msgSend_setRelayConnectionsToSecondaries_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRelayConnectionsToSecondaries:");
}

id objc_msgSend_setRelevantOutputDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRelevantOutputDevices:");
}

id objc_msgSend_setRemoteASEState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemoteASEState:");
}

id objc_msgSend_setRemoteArtworks_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemoteArtworks:");
}

id objc_msgSend_setRemoteControlContexts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemoteControlContexts:");
}

id objc_msgSend_setRemoteControlInterfaceID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemoteControlInterfaceID:");
}

id objc_msgSend_setRemoteControlService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemoteControlService:");
}

id objc_msgSend_setRemoteInvalidationExternalDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemoteInvalidationExternalDevice:");
}

id objc_msgSend_setRemoteObjectInterface_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemoteObjectInterface:");
}

id objc_msgSend_setRemotePendingParticipants_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemotePendingParticipants:");
}

id objc_msgSend_setRenderingMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRenderingMode:");
}

id objc_msgSend_setReplyIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReplyIdentifier:");
}

id objc_msgSend_setRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequest:");
}

id objc_msgSend_setRequestClientProperties_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequestClientProperties:");
}

id objc_msgSend_setRequestContainsLocal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequestContainsLocal:");
}

id objc_msgSend_setRequestContainsLocalDeviceUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequestContainsLocalDeviceUID:");
}

id objc_msgSend_setRequestForCompanionOrigin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequestForCompanionOrigin:");
}

id objc_msgSend_setRequestForCurrentConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequestForCurrentConfiguration:");
}

id objc_msgSend_setRequestForLocalOrigin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequestForLocalOrigin:");
}

id objc_msgSend_setRequestID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequestID:");
}

id objc_msgSend_setRequestIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequestIdentifier:");
}

id objc_msgSend_setRequestLastPlayingDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequestLastPlayingDate:");
}

id objc_msgSend_setRequestPlaybackQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequestPlaybackQueue:");
}

id objc_msgSend_setRequestPlaybackState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequestPlaybackState:");
}

id objc_msgSend_setRequestSupportedCommands_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequestSupportedCommands:");
}

id objc_msgSend_setRequester_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequester:");
}

id objc_msgSend_setReturnPartialResults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReturnPartialResults:");
}

id objc_msgSend_setRotatingSessionIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRotatingSessionIdentifier:");
}

id objc_msgSend_setRoute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRoute:");
}

id objc_msgSend_setRouteDiscoveryMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRouteDiscoveryMode:");
}

id objc_msgSend_setRouteIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRouteIdentifier:");
}

id objc_msgSend_setRouteIsValidForHosting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRouteIsValidForHosting:");
}

id objc_msgSend_setRoutePickerForegrounded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRoutePickerForegrounded:");
}

id objc_msgSend_setRouteRecommendationActivities_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRouteRecommendationActivities:");
}

id objc_msgSend_setRouteRecommendationIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRouteRecommendationIdentifiers:");
}

id objc_msgSend_setRouteRecommendationRelevanceScore_activityIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRouteRecommendationRelevanceScore:activityIdentifier:");
}

id objc_msgSend_setRouteSymbolName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRouteSymbolName:");
}

id objc_msgSend_setRouteType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRouteType:");
}

id objc_msgSend_setRoutingContextID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRoutingContextID:");
}

id objc_msgSend_setRoutingContextUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRoutingContextUID:");
}

id objc_msgSend_setRtiService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRtiService:");
}

id objc_msgSend_setSearchEndpointsForOutputDeviceUIDImplementation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSearchEndpointsForOutputDeviceUIDImplementation:");
}

id objc_msgSend_setSecure_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSecure:");
}

id objc_msgSend_setSelectionReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectionReason:");
}

id objc_msgSend_setSenderAppDisplayID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSenderAppDisplayID:");
}

id objc_msgSend_setSenderDefaultGroupUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSenderDefaultGroupUID:");
}

id objc_msgSend_setServer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setServer:");
}

id objc_msgSend_setServerBoundMessageHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setServerBoundMessageHandler:");
}

id objc_msgSend_setServerDiscoveryMode_forConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setServerDiscoveryMode:forConfiguration:");
}

id objc_msgSend_setServiceEndpoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setServiceEndpoint:");
}

id objc_msgSend_setServiceQuality_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setServiceQuality:");
}

id objc_msgSend_setSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSession:");
}

id objc_msgSend_setSessionIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSessionIdentifier:");
}

id objc_msgSend_setSessionRemoteParticipantsAssertion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSessionRemoteParticipantsAssertion:");
}

id objc_msgSend_setSessionUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSessionUID:");
}

id objc_msgSend_setSharedQueueVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSharedQueueVersion:");
}

id objc_msgSend_setShouldFinishPresentationForCurrentPersonalDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldFinishPresentationForCurrentPersonalDevices:");
}

id objc_msgSend_setShouldLog_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldLog:");
}

id objc_msgSend_setShouldModifyPredictedRoutes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldModifyPredictedRoutes:");
}

id objc_msgSend_setShouldNotPauseIfLastDeviceRemoved_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldNotPauseIfLastDeviceRemoved:");
}

id objc_msgSend_setShouldRun_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldRun:");
}

id objc_msgSend_setShouldUseSystemAuthenticationPrompt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldUseSystemAuthenticationPrompt:");
}

id objc_msgSend_setShouldVerboselyLog_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldVerboselyLog:");
}

id objc_msgSend_setShouldWaitForUnanimousEndpoints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldWaitForUnanimousEndpoints:");
}

id objc_msgSend_setShowAsTopmost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowAsTopmost:");
}

id objc_msgSend_setShowOnLockscreen_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowOnLockscreen:");
}

id objc_msgSend_setSignpostIds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSignpostIds:");
}

id objc_msgSend_setSiriForegrounded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSiriForegrounded:");
}

id objc_msgSend_setSoloDeviceEnclosureColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSoloDeviceEnclosureColor:");
}

id objc_msgSend_setSoloModelID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSoloModelID:");
}

id objc_msgSend_setSortingHint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSortingHint:");
}

id objc_msgSend_setSourceUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSourceUID:");
}

id objc_msgSend_setStartDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStartDate:");
}

id objc_msgSend_setStartingNowPlayingSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStartingNowPlayingSession:");
}

id objc_msgSend_setStartingSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStartingSession:");
}

id objc_msgSend_setState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setState:");
}

id objc_msgSend_setStateDescriptor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStateDescriptor:");
}

id objc_msgSend_setStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStatus:");
}

id objc_msgSend_setStorefrontCountryCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStorefrontCountryCode:");
}

id objc_msgSend_setString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setString:");
}

id objc_msgSend_setSubscribedPlayerPaths_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSubscribedPlayerPaths:");
}

id objc_msgSend_setSupportedAPIs_forApplication_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSupportedAPIs:forApplication:");
}

id objc_msgSend_setSupportedCommands_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSupportedCommands:");
}

id objc_msgSend_setSupportedMessages_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSupportedMessages:");
}

id objc_msgSend_setSupportedPlaybackSessionTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSupportedPlaybackSessionTypes:");
}

id objc_msgSend_setSupportedRemoteControlCommands_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSupportedRemoteControlCommands:");
}

id objc_msgSend_setSupportedRemoteControlCommandsData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSupportedRemoteControlCommandsData:");
}

id objc_msgSend_setSupportsACL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSupportsACL:");
}

id objc_msgSend_setSupportsExtendedMotion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSupportsExtendedMotion:");
}

id objc_msgSend_setSupportsIdleReset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSupportsIdleReset:");
}

id objc_msgSend_setSupportsMultiplayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSupportsMultiplayer:");
}

id objc_msgSend_setSupportsOutputContextSync_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSupportsOutputContextSync:");
}

id objc_msgSend_setSupportsSharedQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSupportsSharedQueue:");
}

id objc_msgSend_setSupportsSystemPairing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSupportsSystemPairing:");
}

id objc_msgSend_setSuppressErrorDialog_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSuppressErrorDialog:");
}

id objc_msgSend_setSuppressPairedDeviceSync_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSuppressPairedDeviceSync:");
}

id objc_msgSend_setSystemActiveEndpoints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSystemActiveEndpoints:");
}

id objc_msgSend_setSystemBooksApplication_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSystemBooksApplication:");
}

id objc_msgSend_setSystemDiscoveryMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSystemDiscoveryMode:");
}

id objc_msgSend_setSystemMediaApplication_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSystemMediaApplication:");
}

id objc_msgSend_setSystemMediaClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSystemMediaClient:");
}

id objc_msgSend_setSystemPodcastApplication_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSystemPodcastApplication:");
}

id objc_msgSend_setTXTRecordData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTXTRecordData:");
}

id objc_msgSend_setTarget_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTarget:");
}

id objc_msgSend_setTelevisionEndpoints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTelevisionEndpoints:");
}

id objc_msgSend_setTextToAssert_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTextToAssert:");
}

id objc_msgSend_setThrottled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setThrottled:");
}

id objc_msgSend_setTightSyncUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTightSyncUID:");
}

id objc_msgSend_setTimeoutTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeoutTimer:");
}

id objc_msgSend_setToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setToken:");
}

id objc_msgSend_setTracked_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTracked:");
}

id objc_msgSend_setTransaction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTransaction:");
}

id objc_msgSend_setTransactions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTransactions:");
}

id objc_msgSend_setTransitionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTransitionHandler:");
}

id objc_msgSend_setTransport_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTransport:");
}

id objc_msgSend_setTransportOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTransportOptions:");
}

id objc_msgSend_setTransportType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTransportType:");
}

id objc_msgSend_setType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setType:");
}

id objc_msgSend_setUiActivitiesInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUiActivitiesInfo:");
}

id objc_msgSend_setUnclusteredOutputDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUnclusteredOutputDevices:");
}

id objc_msgSend_setUnderlyingQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUnderlyingQueue:");
}

id objc_msgSend_setUndiscoverableGroupLeader_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUndiscoverableGroupLeader:");
}

id objc_msgSend_setUndiscoverableGroupLeaderHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUndiscoverableGroupLeaderHandle:");
}

id objc_msgSend_setUndoTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUndoTimer:");
}

id objc_msgSend_setUniqueIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUniqueIdentifier:");
}

id objc_msgSend_setUpdateHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUpdateHandler:");
}

id objc_msgSend_setUseOutputDeviceCache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUseOutputDeviceCache:");
}

id objc_msgSend_setUseWeakMatching_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUseWeakMatching:");
}

id objc_msgSend_setUsedTransactionMemory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUsedTransactionMemory:");
}

id objc_msgSend_setUserData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserData:");
}

id objc_msgSend_setUserDefaults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserDefaults:");
}

id objc_msgSend_setUserIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserIdentity:");
}

id objc_msgSend_setUserInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserInfo:");
}

id objc_msgSend_setUserSelectedDeviceNames_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserSelectedDeviceNames:");
}

id objc_msgSend_setValid_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValid:");
}

id objc_msgSend_setValue_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValue:forKey:");
}

id objc_msgSend_setValues_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValues:");
}

id objc_msgSend_setVisibleMediaApps_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVisibleMediaApps:");
}

id objc_msgSend_setVoiceRecordingState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceRecordingState:");
}

id objc_msgSend_setVolume_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVolume:");
}

id objc_msgSend_setVolume_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVolume:error:");
}

id objc_msgSend_setVolume_outputDeviceUID_details_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVolume:outputDeviceUID:details:");
}

id objc_msgSend_setVolumeCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVolumeCallback:");
}

id objc_msgSend_setVolumeCapabilities_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVolumeCapabilities:");
}

id objc_msgSend_setVolumeChangedCallback_withQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVolumeChangedCallback:withQueue:");
}

id objc_msgSend_setVolumeControlCapabilities_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVolumeControlCapabilities:");
}

id objc_msgSend_setVolumeControlCapabilitiesCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVolumeControlCapabilitiesCallback:");
}

id objc_msgSend_setVolumeControlCapabilitiesCallback_withQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVolumeControlCapabilitiesCallback:withQueue:");
}

id objc_msgSend_setVolumeController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVolumeController:");
}

id objc_msgSend_setVolumeMuted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVolumeMuted:");
}

id objc_msgSend_setVolumeMutedCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVolumeMutedCallback:");
}

id objc_msgSend_setVolumeMutedChangedCallback_withQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVolumeMutedChangedCallback:withQueue:");
}

id objc_msgSend_setVolumeTo_forCategory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVolumeTo:forCategory:");
}

id objc_msgSend_setWaitForCompleteClusters_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWaitForCompleteClusters:");
}

id objc_msgSend_setWaking_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWaking:");
}

id objc_msgSend_setWantsAssertionsForNotificationsWithPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWantsAssertionsForNotificationsWithPlayerPath:");
}

id objc_msgSend_setWantsCrossAccountMessaging_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWantsCrossAccountMessaging:");
}

id objc_msgSend_setWantsEndpointChangeNotifications_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWantsEndpointChangeNotifications:");
}

id objc_msgSend_setWantsNowPlayingNotifications_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWantsNowPlayingNotifications:");
}

id objc_msgSend_setWantsOutputDeviceNotifications_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWantsOutputDeviceNotifications:");
}

id objc_msgSend_setWantsSystemEndpointNotifications_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWantsSystemEndpointNotifications:");
}

id objc_msgSend_setWantsVolumeNotifications_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWantsVolumeNotifications:");
}

id objc_msgSend_setWithArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithArray:");
}

id objc_msgSend_setWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithCapacity:");
}

id objc_msgSend_setWithObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithObject:");
}

id objc_msgSend_setWithObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithObjects:");
}

id objc_msgSend_setWithSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithSet:");
}

id objc_msgSend_setXpcClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setXpcClient:");
}

id objc_msgSend_settingOutputDeviceUIDs(void *a1, const char *a2, ...)
{
  return _[a1 settingOutputDeviceUIDs];
}

id objc_msgSend_setup(void *a1, const char *a2, ...)
{
  return _[a1 setup];
}

id objc_msgSend_setupTimerForRoute_bundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupTimerForRoute:bundleIdentifier:");
}

id objc_msgSend_shared(void *a1, const char *a2, ...)
{
  return _[a1 shared];
}

id objc_msgSend_sharedAVSystemController(void *a1, const char *a2, ...)
{
  return _[a1 sharedAVSystemController];
}

id objc_msgSend_sharedAudioPresentationContext(void *a1, const char *a2, ...)
{
  return _[a1 sharedAudioPresentationContext];
}

id objc_msgSend_sharedAudioPresentationOutputContext(void *a1, const char *a2, ...)
{
  return _[a1 sharedAudioPresentationOutputContext];
}

id objc_msgSend_sharedAuthorizationSession(void *a1, const char *a2, ...)
{
  return _[a1 sharedAuthorizationSession];
}

id objc_msgSend_sharedCenter(void *a1, const char *a2, ...)
{
  return _[a1 sharedCenter];
}

id objc_msgSend_sharedCompanionLinkClient(void *a1, const char *a2, ...)
{
  return _[a1 sharedCompanionLinkClient];
}

id objc_msgSend_sharedConnection(void *a1, const char *a2, ...)
{
  return _[a1 sharedConnection];
}

id objc_msgSend_sharedConnectionController(void *a1, const char *a2, ...)
{
  return _[a1 sharedConnectionController];
}

id objc_msgSend_sharedController(void *a1, const char *a2, ...)
{
  return _[a1 sharedController];
}

id objc_msgSend_sharedDataSource(void *a1, const char *a2, ...)
{
  return _[a1 sharedDataSource];
}

id objc_msgSend_sharedIDSCompanionLinkClient(void *a1, const char *a2, ...)
{
  return _[a1 sharedIDSCompanionLinkClient];
}

id objc_msgSend_sharedInstance(void *a1, const char *a2, ...)
{
  return _[a1 sharedInstance];
}

id objc_msgSend_sharedLocalDevice(void *a1, const char *a2, ...)
{
  return _[a1 sharedLocalDevice];
}

id objc_msgSend_sharedLocalEndpoint(void *a1, const char *a2, ...)
{
  return _[a1 sharedLocalEndpoint];
}

id objc_msgSend_sharedLocalEndpointForRoutingContextWithUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedLocalEndpointForRoutingContextWithUID:");
}

id objc_msgSend_sharedLogger(void *a1, const char *a2, ...)
{
  return _[a1 sharedLogger];
}

id objc_msgSend_sharedManager(void *a1, const char *a2, ...)
{
  return _[a1 sharedManager];
}

id objc_msgSend_sharedMonitor(void *a1, const char *a2, ...)
{
  return _[a1 sharedMonitor];
}

id objc_msgSend_sharedPrivacyInfo(void *a1, const char *a2, ...)
{
  return _[a1 sharedPrivacyInfo];
}

id objc_msgSend_sharedPrivacyInfoForUserIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedPrivacyInfoForUserIdentity:");
}

id objc_msgSend_sharedQueueVersion(void *a1, const char *a2, ...)
{
  return _[a1 sharedQueueVersion];
}

id objc_msgSend_sharedSecret(void *a1, const char *a2, ...)
{
  return _[a1 sharedSecret];
}

id objc_msgSend_sharedServer(void *a1, const char *a2, ...)
{
  return _[a1 sharedServer];
}

id objc_msgSend_sharedService(void *a1, const char *a2, ...)
{
  return _[a1 sharedService];
}

id objc_msgSend_sharedServiceClient(void *a1, const char *a2, ...)
{
  return _[a1 sharedServiceClient];
}

id objc_msgSend_sharedSystemAudioContext(void *a1, const char *a2, ...)
{
  return _[a1 sharedSystemAudioContext];
}

id objc_msgSend_sharedSystemScreenContext(void *a1, const char *a2, ...)
{
  return _[a1 sharedSystemScreenContext];
}

id objc_msgSend_shortDescription(void *a1, const char *a2, ...)
{
  return _[a1 shortDescription];
}

id objc_msgSend_shortValue(void *a1, const char *a2, ...)
{
  return _[a1 shortValue];
}

id objc_msgSend_shouldAutoApproveIdentity_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldAutoApproveIdentity:completion:");
}

id objc_msgSend_shouldAutoApproveOOBKeys_withSession_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldAutoApproveOOBKeys:withSession:completion:");
}

id objc_msgSend_shouldAutoApproveRequest_withSession_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldAutoApproveRequest:withSession:completion:");
}

id objc_msgSend_shouldBeLocallyHosted(void *a1, const char *a2, ...)
{
  return _[a1 shouldBeLocallyHosted];
}

id objc_msgSend_shouldClearPredictedRoutes(void *a1, const char *a2, ...)
{
  return _[a1 shouldClearPredictedRoutes];
}

id objc_msgSend_shouldConnectToLocalEndpoint(void *a1, const char *a2, ...)
{
  return _[a1 shouldConnectToLocalEndpoint];
}

id objc_msgSend_shouldDemote(void *a1, const char *a2, ...)
{
  return _[a1 shouldDemote];
}

id objc_msgSend_shouldDonate(void *a1, const char *a2, ...)
{
  return _[a1 shouldDonate];
}

id objc_msgSend_shouldFinishPresentationForCurrentPersonalDevices(void *a1, const char *a2, ...)
{
  return _[a1 shouldFinishPresentationForCurrentPersonalDevices];
}

id objc_msgSend_shouldIgnorePredictedRoutesSync(void *a1, const char *a2, ...)
{
  return _[a1 shouldIgnorePredictedRoutesSync];
}

id objc_msgSend_shouldImplicitlyLaunchApplication(void *a1, const char *a2, ...)
{
  return _[a1 shouldImplicitlyLaunchApplication];
}

id objc_msgSend_shouldInitializeGenericBonjourService(void *a1, const char *a2, ...)
{
  return _[a1 shouldInitializeGenericBonjourService];
}

id objc_msgSend_shouldInitializeIDSService(void *a1, const char *a2, ...)
{
  return _[a1 shouldInitializeIDSService];
}

id objc_msgSend_shouldInitializeMRRelayService(void *a1, const char *a2, ...)
{
  return _[a1 shouldInitializeMRRelayService];
}

id objc_msgSend_shouldInitializeRapportService(void *a1, const char *a2, ...)
{
  return _[a1 shouldInitializeRapportService];
}

id objc_msgSend_shouldInitializeTelevisionBonjourService(void *a1, const char *a2, ...)
{
  return _[a1 shouldInitializeTelevisionBonjourService];
}

id objc_msgSend_shouldLogPairingSetupCode(void *a1, const char *a2, ...)
{
  return _[a1 shouldLogPairingSetupCode];
}

id objc_msgSend_shouldModifyPredictedRoutes(void *a1, const char *a2, ...)
{
  return _[a1 shouldModifyPredictedRoutes];
}

id objc_msgSend_shouldNotPauseIfLastDeviceRemoved(void *a1, const char *a2, ...)
{
  return _[a1 shouldNotPauseIfLastDeviceRemoved];
}

id objc_msgSend_shouldNotifyForSessionIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldNotifyForSessionIdentifier:");
}

id objc_msgSend_shouldRun(void *a1, const char *a2, ...)
{
  return _[a1 shouldRun];
}

id objc_msgSend_shouldSendCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldSendCommand:");
}

id objc_msgSend_shouldSendCommandsDuringPhoneCall(void *a1, const char *a2, ...)
{
  return _[a1 shouldSendCommandsDuringPhoneCall];
}

id objc_msgSend_shouldSuppress(void *a1, const char *a2, ...)
{
  return _[a1 shouldSuppress];
}

id objc_msgSend_shouldUseDeviceInfoForLocalDevice(void *a1, const char *a2, ...)
{
  return _[a1 shouldUseDeviceInfoForLocalDevice];
}

id objc_msgSend_shouldUseVideoSymbolForDevices_bundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldUseVideoSymbolForDevices:bundleIdentifier:");
}

id objc_msgSend_shouldWakeDeviceForRemoteControlCommands(void *a1, const char *a2, ...)
{
  return _[a1 shouldWakeDeviceForRemoteControlCommands];
}

id objc_msgSend_showBluePill(void *a1, const char *a2, ...)
{
  return _[a1 showBluePill];
}

id objc_msgSend_showPinDialogWithOptions_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showPinDialogWithOptions:completion:");
}

id objc_msgSend_showRouteRecommendationsOutsideApps(void *a1, const char *a2, ...)
{
  return _[a1 showRouteRecommendationsOutsideApps];
}

id objc_msgSend_showUncommitedDevices(void *a1, const char *a2, ...)
{
  return _[a1 showUncommitedDevices];
}

id objc_msgSend_showWithPin_forClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showWithPin:forClient:");
}

id objc_msgSend_signatureWithObjCTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "signatureWithObjCTypes:");
}

id objc_msgSend_signpostEndWillShowBanner_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "signpostEndWillShowBanner:");
}

id objc_msgSend_signpostIds(void *a1, const char *a2, ...)
{
  return _[a1 signpostIds];
}

id objc_msgSend_sinkWithCompletion_shouldContinue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sinkWithCompletion:shouldContinue:");
}

id objc_msgSend_siriVisible(void *a1, const char *a2, ...)
{
  return _[a1 siriVisible];
}

id objc_msgSend_skeleton(void *a1, const char *a2, ...)
{
  return _[a1 skeleton];
}

id objc_msgSend_sleepObserverSystemDidWake_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sleepObserverSystemDidWake:");
}

id objc_msgSend_sleepObserverSystemWillSleep_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sleepObserverSystemWillSleep:completion:");
}

id objc_msgSend_snapshotForIsPlaying_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "snapshotForIsPlaying:");
}

id objc_msgSend_snapshotWithDomain_type_subType_context_triggerThresholdValues_events_completion_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "snapshotWithDomain:type:subType:context:triggerThresholdValues:events:completion:");
}

id objc_msgSend_snapshotsForIsPlaying_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "snapshotsForIsPlaying:");
}

id objc_msgSend_socialProfile(void *a1, const char *a2, ...)
{
  return _[a1 socialProfile];
}

id objc_msgSend_socialProfileID(void *a1, const char *a2, ...)
{
  return _[a1 socialProfileID];
}

id objc_msgSend_sortCandidateResults_contextIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortCandidateResults:contextIdentifier:");
}

id objc_msgSend_sortDescriptorWithKey_ascending_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortDescriptorWithKey:ascending:");
}

id objc_msgSend_sortUsingComparator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortUsingComparator:");
}

id objc_msgSend_sortUsingDescriptors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortUsingDescriptors:");
}

id objc_msgSend_sortedArrayUsingComparator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortedArrayUsingComparator:");
}

id objc_msgSend_sortedArrayUsingDescriptors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortedArrayUsingDescriptors:");
}

id objc_msgSend_sortingHint(void *a1, const char *a2, ...)
{
  return _[a1 sortingHint];
}

id objc_msgSend_source(void *a1, const char *a2, ...)
{
  return _[a1 source];
}

id objc_msgSend_sourceInfo(void *a1, const char *a2, ...)
{
  return _[a1 sourceInfo];
}

id objc_msgSend_sourceOrigin(void *a1, const char *a2, ...)
{
  return _[a1 sourceOrigin];
}

id objc_msgSend_sourceOutputContext(void *a1, const char *a2, ...)
{
  return _[a1 sourceOutputContext];
}

id objc_msgSend_sourceOutputDeviceName(void *a1, const char *a2, ...)
{
  return _[a1 sourceOutputDeviceName];
}

id objc_msgSend_sourceOutputDeviceUID(void *a1, const char *a2, ...)
{
  return _[a1 sourceOutputDeviceUID];
}

id objc_msgSend_sourcePlayerPath(void *a1, const char *a2, ...)
{
  return _[a1 sourcePlayerPath];
}

id objc_msgSend_sourceRecommendationsPlattersFromIR(void *a1, const char *a2, ...)
{
  return _[a1 sourceRecommendationsPlattersFromIR];
}

id objc_msgSend_sourceUID(void *a1, const char *a2, ...)
{
  return _[a1 sourceUID];
}

id objc_msgSend_specificAccountWithDSID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "specificAccountWithDSID:");
}

id objc_msgSend_standardCredentials(void *a1, const char *a2, ...)
{
  return _[a1 standardCredentials];
}

id objc_msgSend_standardUserDefaults(void *a1, const char *a2, ...)
{
  return _[a1 standardUserDefaults];
}

id objc_msgSend_start(void *a1, const char *a2, ...)
{
  return _[a1 start];
}

id objc_msgSend_startAcknowledgeResetTimerForSessionIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startAcknowledgeResetTimerForSessionIdentifier:");
}

id objc_msgSend_startContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startContext:");
}

id objc_msgSend_startDate(void *a1, const char *a2, ...)
{
  return _[a1 startDate];
}

id objc_msgSend_startEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startEvent:");
}

id objc_msgSend_startGroupSessionLowPowerPlatterActivity(void *a1, const char *a2, ...)
{
  return _[a1 startGroupSessionLowPowerPlatterActivity];
}

id objc_msgSend_startGroupSessionNearbyActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startGroupSessionNearbyActivity:");
}

id objc_msgSend_startGroupSessionsForAllRoutes(void *a1, const char *a2, ...)
{
  return _[a1 startGroupSessionsForAllRoutes];
}

id objc_msgSend_startMirroringActivity(void *a1, const char *a2, ...)
{
  return _[a1 startMirroringActivity];
}

id objc_msgSend_startMonitoringWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startMonitoringWithOptions:");
}

id objc_msgSend_startNowPlayingActivityWithPreferredState_suppressedBundleIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startNowPlayingActivityWithPreferredState:suppressedBundleIdentifiers:");
}

id objc_msgSend_startNowPlayingSessionABC(void *a1, const char *a2, ...)
{
  return _[a1 startNowPlayingSessionABC];
}

id objc_msgSend_startNowPlayingSessionWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startNowPlayingSessionWithCompletion:");
}

id objc_msgSend_startObservationIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 startObservationIfNeeded];
}

id objc_msgSend_startRemoteControlGroupSessionWithRouteType_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startRemoteControlGroupSessionWithRouteType:completion:");
}

id objc_msgSend_startRouteRecommendationActivityFor_relevanceScore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startRouteRecommendationActivityFor:relevanceScore:");
}

id objc_msgSend_startSiriWithContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startSiriWithContext:");
}

id objc_msgSend_startWithQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startWithQueue:");
}

id objc_msgSend_state(void *a1, const char *a2, ...)
{
  return _[a1 state];
}

id objc_msgSend_stateCenter(void *a1, const char *a2, ...)
{
  return _[a1 stateCenter];
}

id objc_msgSend_stateMonitor(void *a1, const char *a2, ...)
{
  return _[a1 stateMonitor];
}

id objc_msgSend_stateObserver_didReceiveClientDidUnregister_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stateObserver:didReceiveClientDidUnregister:");
}

id objc_msgSend_stateObserver_didReceiveCoalescedNowPlayingStateChange_playerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stateObserver:didReceiveCoalescedNowPlayingStateChange:playerPath:");
}

id objc_msgSend_stateObserver_didReceiveDefaultSupportedCommandsChange_playerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stateObserver:didReceiveDefaultSupportedCommandsChange:playerPath:");
}

id objc_msgSend_stateObserver_didReceiveNowPlayingClientChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stateObserver:didReceiveNowPlayingClientChange:");
}

id objc_msgSend_stateObserver_didReceiveNowPlayingPlayerChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stateObserver:didReceiveNowPlayingPlayerChange:");
}

id objc_msgSend_stateObserver_didReceivePlayerDidUnregister_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stateObserver:didReceivePlayerDidUnregister:");
}

id objc_msgSend_stateObserver_didReceiveVolumeControlCapabilitiesChange_playerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stateObserver:didReceiveVolumeControlCapabilitiesChange:playerPath:");
}

id objc_msgSend_staticRequest(void *a1, const char *a2, ...)
{
  return _[a1 staticRequest];
}

id objc_msgSend_staticRequestForRoute_devices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "staticRequestForRoute:devices:");
}

id objc_msgSend_status(void *a1, const char *a2, ...)
{
  return _[a1 status];
}

id objc_msgSend_stop(void *a1, const char *a2, ...)
{
  return _[a1 stop];
}

id objc_msgSend_stopAirPlayingAndRemoteControlling(void *a1, const char *a2, ...)
{
  return _[a1 stopAirPlayingAndRemoteControlling];
}

id objc_msgSend_stopNowPlayingSesion(void *a1, const char *a2, ...)
{
  return _[a1 stopNowPlayingSesion];
}

id objc_msgSend_stopObserving(void *a1, const char *a2, ...)
{
  return _[a1 stopObserving];
}

id objc_msgSend_stopObservingNowPlayingInfo(void *a1, const char *a2, ...)
{
  return _[a1 stopObservingNowPlayingInfo];
}

id objc_msgSend_stopReceivingUpdatesForSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopReceivingUpdatesForSource:");
}

id objc_msgSend_stopSiriWithContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopSiriWithContext:");
}

id objc_msgSend_storage(void *a1, const char *a2, ...)
{
  return _[a1 storage];
}

id objc_msgSend_storefrontCountryCode(void *a1, const char *a2, ...)
{
  return _[a1 storefrontCountryCode];
}

id objc_msgSend_streamsActivelyUsingSlot(void *a1, const char *a2, ...)
{
  return _[a1 streamsActivelyUsingSlot];
}

id objc_msgSend_streamsThatCountTowardsCapacity(void *a1, const char *a2, ...)
{
  return _[a1 streamsThatCountTowardsCapacity];
}

id objc_msgSend_string(void *a1, const char *a2, ...)
{
  return _[a1 string];
}

id objc_msgSend_stringByAppendingFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingFormat:");
}

id objc_msgSend_stringByAppendingPathComponent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingPathComponent:");
}

id objc_msgSend_stringByAppendingString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingString:");
}

id objc_msgSend_stringByDeletingLastPathComponent(void *a1, const char *a2, ...)
{
  return _[a1 stringByDeletingLastPathComponent];
}

id objc_msgSend_stringByReplacingOccurrencesOfString_withString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByReplacingOccurrencesOfString:withString:");
}

id objc_msgSend_stringValue(void *a1, const char *a2, ...)
{
  return _[a1 stringValue];
}

id objc_msgSend_stringWithCString_encoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithCString:encoding:");
}

id objc_msgSend_stringWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithFormat:");
}

id objc_msgSend_stringWithUTF8String_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithUTF8String:");
}

id objc_msgSend_strongToStrongObjectsMapTable(void *a1, const char *a2, ...)
{
  return _[a1 strongToStrongObjectsMapTable];
}

id objc_msgSend_subscribeToNotifications_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subscribeToNotifications:error:");
}

id objc_msgSend_subscribeToPlaybackQueue_forRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subscribeToPlaybackQueue:forRequest:");
}

id objc_msgSend_subscribedPlayerPaths(void *a1, const char *a2, ...)
{
  return _[a1 subscribedPlayerPaths];
}

id objc_msgSend_subscriptionControllerForPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subscriptionControllerForPlayerPath:");
}

id objc_msgSend_subscriptionStatus(void *a1, const char *a2, ...)
{
  return _[a1 subscriptionStatus];
}

id objc_msgSend_substringToIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "substringToIndex:");
}

id objc_msgSend_supportASERetargetting(void *a1, const char *a2, ...)
{
  return _[a1 supportASERetargetting];
}

id objc_msgSend_supportAirPlayLeaderInfoSync(void *a1, const char *a2, ...)
{
  return _[a1 supportAirPlayLeaderInfoSync];
}

id objc_msgSend_supportAirplayStereoPairPersistentConnections(void *a1, const char *a2, ...)
{
  return _[a1 supportAirplayStereoPairPersistentConnections];
}

id objc_msgSend_supportCoordinatedVolume(void *a1, const char *a2, ...)
{
  return _[a1 supportCoordinatedVolume];
}

id objc_msgSend_supportElectedPlayer(void *a1, const char *a2, ...)
{
  return _[a1 supportElectedPlayer];
}

id objc_msgSend_supportExpanseMigration(void *a1, const char *a2, ...)
{
  return _[a1 supportExpanseMigration];
}

id objc_msgSend_supportGenericAudioGroup(void *a1, const char *a2, ...)
{
  return _[a1 supportGenericAudioGroup];
}

id objc_msgSend_supportGroupSession(void *a1, const char *a2, ...)
{
  return _[a1 supportGroupSession];
}

id objc_msgSend_supportGroupSessionAttribution(void *a1, const char *a2, ...)
{
  return _[a1 supportGroupSessionAttribution];
}

id objc_msgSend_supportGroupSessionAutoApproval(void *a1, const char *a2, ...)
{
  return _[a1 supportGroupSessionAutoApproval];
}

id objc_msgSend_supportGroupSessionHome(void *a1, const char *a2, ...)
{
  return _[a1 supportGroupSessionHome];
}

id objc_msgSend_supportGroupSessionHomePodBoop(void *a1, const char *a2, ...)
{
  return _[a1 supportGroupSessionHomePodBoop];
}

id objc_msgSend_supportGroupSessionLowPowerMode(void *a1, const char *a2, ...)
{
  return _[a1 supportGroupSessionLowPowerMode];
}

id objc_msgSend_supportGroupSessionOfframp(void *a1, const char *a2, ...)
{
  return _[a1 supportGroupSessionOfframp];
}

id objc_msgSend_supportIDSDiscovery(void *a1, const char *a2, ...)
{
  return _[a1 supportIDSDiscovery];
}

id objc_msgSend_supportLastPlayingDevice(void *a1, const char *a2, ...)
{
  return _[a1 supportLastPlayingDevice];
}

id objc_msgSend_supportLockscreenPlatterDisplayForPersonalDevice(void *a1, const char *a2, ...)
{
  return _[a1 supportLockscreenPlatterDisplayForPersonalDevice];
}

id objc_msgSend_supportMRRelay(void *a1, const char *a2, ...)
{
  return _[a1 supportMRRelay];
}

id objc_msgSend_supportManyRecommendationsPlatters(void *a1, const char *a2, ...)
{
  return _[a1 supportManyRecommendationsPlatters];
}

id objc_msgSend_supportMultiplayerHost(void *a1, const char *a2, ...)
{
  return _[a1 supportMultiplayerHost];
}

id objc_msgSend_supportNanoLinkAgent(void *a1, const char *a2, ...)
{
  return _[a1 supportNanoLinkAgent];
}

id objc_msgSend_supportNanoStandalone(void *a1, const char *a2, ...)
{
  return _[a1 supportNanoStandalone];
}

id objc_msgSend_supportNativeToAirPlayASERetargetting(void *a1, const char *a2, ...)
{
  return _[a1 supportNativeToAirPlayASERetargetting];
}

id objc_msgSend_supportNowPlayingPIP(void *a1, const char *a2, ...)
{
  return _[a1 supportNowPlayingPIP];
}

id objc_msgSend_supportNowPlayingSessionDataSource(void *a1, const char *a2, ...)
{
  return _[a1 supportNowPlayingSessionDataSource];
}

id objc_msgSend_supportOutputContextPrewarming(void *a1, const char *a2, ...)
{
  return _[a1 supportOutputContextPrewarming];
}

id objc_msgSend_supportOutputContextSync(void *a1, const char *a2, ...)
{
  return _[a1 supportOutputContextSync];
}

id objc_msgSend_supportPTOTRefactorPart1(void *a1, const char *a2, ...)
{
  return _[a1 supportPTOTRefactorPart1];
}

id objc_msgSend_supportPredictedRoutes(void *a1, const char *a2, ...)
{
  return _[a1 supportPredictedRoutes];
}

id objc_msgSend_supportRouteRecommendations(void *a1, const char *a2, ...)
{
  return _[a1 supportRouteRecommendations];
}

id objc_msgSend_supportRoutingContinuity(void *a1, const char *a2, ...)
{
  return _[a1 supportRoutingContinuity];
}

id objc_msgSend_supportSessionBasedLockScreenPlatter(void *a1, const char *a2, ...)
{
  return _[a1 supportSessionBasedLockScreenPlatter];
}

id objc_msgSend_supportSystemEndpoints(void *a1, const char *a2, ...)
{
  return _[a1 supportSystemEndpoints];
}

id objc_msgSend_supportTopologyHealing(void *a1, const char *a2, ...)
{
  return _[a1 supportTopologyHealing];
}

id objc_msgSend_supportedAPIsForApplication_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportedAPIsForApplication:");
}

id objc_msgSend_supportedCommands(void *a1, const char *a2, ...)
{
  return _[a1 supportedCommands];
}

id objc_msgSend_supportedMessages(void *a1, const char *a2, ...)
{
  return _[a1 supportedMessages];
}

id objc_msgSend_supportedPlaybackSessionTypes(void *a1, const char *a2, ...)
{
  return _[a1 supportedPlaybackSessionTypes];
}

id objc_msgSend_supportedProtocolMessages(void *a1, const char *a2, ...)
{
  return _[a1 supportedProtocolMessages];
}

id objc_msgSend_supportedRemoteControlCommands(void *a1, const char *a2, ...)
{
  return _[a1 supportedRemoteControlCommands];
}

id objc_msgSend_supportedRemoteControlCommandsData(void *a1, const char *a2, ...)
{
  return _[a1 supportedRemoteControlCommandsData];
}

id objc_msgSend_supportsBackgroundAudio(void *a1, const char *a2, ...)
{
  return _[a1 supportsBackgroundAudio];
}

id objc_msgSend_supportsBluetoothSharing(void *a1, const char *a2, ...)
{
  return _[a1 supportsBluetoothSharing];
}

id objc_msgSend_supportsDesignatedGroupLeaderUpdates(void *a1, const char *a2, ...)
{
  return _[a1 supportsDesignatedGroupLeaderUpdates];
}

id objc_msgSend_supportsIdleDisconnection(void *a1, const char *a2, ...)
{
  return _[a1 supportsIdleDisconnection];
}

id objc_msgSend_supportsIdleReset(void *a1, const char *a2, ...)
{
  return _[a1 supportsIdleReset];
}

id objc_msgSend_supportsImplicitChangeShuffleAndRepeatModeInSetPlaybackQueueCommandOptions( void *a1, const char *a2, ...)
{
  return _[a1 supportsImplicitChangeShuffleAndRepeatModeInSetPlaybackQueueCommandOptions];
}

id objc_msgSend_supportsMultiplayer(void *a1, const char *a2, ...)
{
  return _[a1 supportsMultiplayer];
}

id objc_msgSend_supportsMultipleOutputDevices(void *a1, const char *a2, ...)
{
  return _[a1 supportsMultipleOutputDevices];
}

id objc_msgSend_supportsNativeThirdPartyApps(void *a1, const char *a2, ...)
{
  return _[a1 supportsNativeThirdPartyApps];
}

id objc_msgSend_supportsOutputContextSync(void *a1, const char *a2, ...)
{
  return _[a1 supportsOutputContextSync];
}

id objc_msgSend_supportsReconnection(void *a1, const char *a2, ...)
{
  return _[a1 supportsReconnection];
}

id objc_msgSend_supportsSharedQueue(void *a1, const char *a2, ...)
{
  return _[a1 supportsSharedQueue];
}

id objc_msgSend_supportsTwoHop(void *a1, const char *a2, ...)
{
  return _[a1 supportsTwoHop];
}

id objc_msgSend_suppressErrorDialog(void *a1, const char *a2, ...)
{
  return _[a1 suppressErrorDialog];
}

id objc_msgSend_suppressPairedDeviceSync(void *a1, const char *a2, ...)
{
  return _[a1 suppressPairedDeviceSync];
}

id objc_msgSend_suppressionController(void *a1, const char *a2, ...)
{
  return _[a1 suppressionController];
}

id objc_msgSend_suppressionPolicyWithContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "suppressionPolicyWithContext:");
}

id objc_msgSend_symbolNameForOutputDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "symbolNameForOutputDevices:");
}

id objc_msgSend_synchronize(void *a1, const char *a2, ...)
{
  return _[a1 synchronize];
}

id objc_msgSend_synchronousRemoteObjectProxyWithErrorHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "synchronousRemoteObjectProxyWithErrorHandler:");
}

id objc_msgSend_synchronousServer(void *a1, const char *a2, ...)
{
  return _[a1 synchronousServer];
}

id objc_msgSend_systemBooksApplication(void *a1, const char *a2, ...)
{
  return _[a1 systemBooksApplication];
}

id objc_msgSend_systemEndpointController(void *a1, const char *a2, ...)
{
  return _[a1 systemEndpointController];
}

id objc_msgSend_systemEndpointController_activeSystemEndpointDidChangeForRequest_type_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemEndpointController:activeSystemEndpointDidChangeForRequest:type:");
}

id objc_msgSend_systemEndpointInfo(void *a1, const char *a2, ...)
{
  return _[a1 systemEndpointInfo];
}

id objc_msgSend_systemEndpointUpdates(void *a1, const char *a2, ...)
{
  return _[a1 systemEndpointUpdates];
}

id objc_msgSend_systemMediaAppPlayerPathForNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemMediaAppPlayerPathForNotification:");
}

id objc_msgSend_systemMediaApplication(void *a1, const char *a2, ...)
{
  return _[a1 systemMediaApplication];
}

id objc_msgSend_systemMediaBundleIDForBundle_type_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemMediaBundleIDForBundle:type:");
}

id objc_msgSend_systemMediaBundleIDForBundleID_type_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemMediaBundleIDForBundleID:type:");
}

id objc_msgSend_systemMediaClient(void *a1, const char *a2, ...)
{
  return _[a1 systemMediaClient];
}

id objc_msgSend_systemPodcastApplication(void *a1, const char *a2, ...)
{
  return _[a1 systemPodcastApplication];
}

id objc_msgSend_systemServiceProxy(void *a1, const char *a2, ...)
{
  return _[a1 systemServiceProxy];
}

id objc_msgSend_takeAssertion_forReason_duration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "takeAssertion:forReason:duration:");
}

id objc_msgSend_takeAssertionAndBlessForReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "takeAssertionAndBlessForReason:");
}

id objc_msgSend_takeCriticalSectionAssertionForRequestID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "takeCriticalSectionAssertionForRequestID:completion:");
}

id objc_msgSend_takelockScreenAssertion(void *a1, const char *a2, ...)
{
  return _[a1 takelockScreenAssertion];
}

id objc_msgSend_targetWithPid_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "targetWithPid:");
}

id objc_msgSend_targetWithProcessIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "targetWithProcessIdentity:");
}

id objc_msgSend_taskState(void *a1, const char *a2, ...)
{
  return _[a1 taskState];
}

id objc_msgSend_text(void *a1, const char *a2, ...)
{
  return _[a1 text];
}

id objc_msgSend_textEditingService_attributesDidChange_payload_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textEditingService:attributesDidChange:payload:");
}

id objc_msgSend_textEditingService_echoWithText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textEditingService:echoWithText:");
}

id objc_msgSend_textEditingService_textDidChange_payload_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textEditingService:textDidChange:payload:");
}

id objc_msgSend_textEditingService_textEditingDidBegin_withAttributes_payload_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textEditingService:textEditingDidBegin:withAttributes:payload:");
}

id objc_msgSend_textEditingServiceTextEditingDidEnd_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textEditingServiceTextEditingDidEnd:");
}

id objc_msgSend_textFieldValues(void *a1, const char *a2, ...)
{
  return _[a1 textFieldValues];
}

id objc_msgSend_textOperations(void *a1, const char *a2, ...)
{
  return _[a1 textOperations];
}

id objc_msgSend_tightSyncID(void *a1, const char *a2, ...)
{
  return _[a1 tightSyncID];
}

id objc_msgSend_tightSyncUID(void *a1, const char *a2, ...)
{
  return _[a1 tightSyncUID];
}

id objc_msgSend_time(void *a1, const char *a2, ...)
{
  return _[a1 time];
}

id objc_msgSend_timeIntervalSince1970(void *a1, const char *a2, ...)
{
  return _[a1 timeIntervalSince1970];
}

id objc_msgSend_timeIntervalSinceDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeIntervalSinceDate:");
}

id objc_msgSend_timeIntervalSinceNow(void *a1, const char *a2, ...)
{
  return _[a1 timeIntervalSinceNow];
}

id objc_msgSend_timeIntervalSinceReferenceDate(void *a1, const char *a2, ...)
{
  return _[a1 timeIntervalSinceReferenceDate];
}

id objc_msgSend_timeRemaining(void *a1, const char *a2, ...)
{
  return _[a1 timeRemaining];
}

id objc_msgSend_timeSincePlaybackStarted(void *a1, const char *a2, ...)
{
  return _[a1 timeSincePlaybackStarted];
}

id objc_msgSend_timeSincePlaying(void *a1, const char *a2, ...)
{
  return _[a1 timeSincePlaying];
}

id objc_msgSend_timeSincePlayingForPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeSincePlayingForPlayerPath:");
}

id objc_msgSend_timeoutTimer(void *a1, const char *a2, ...)
{
  return _[a1 timeoutTimer];
}

id objc_msgSend_timerWithInterval_queue_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timerWithInterval:queue:block:");
}

id objc_msgSend_timerWithInterval_repeats_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timerWithInterval:repeats:block:");
}

id objc_msgSend_timerWithInterval_repeats_queue_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timerWithInterval:repeats:queue:block:");
}

id objc_msgSend_tintColor(void *a1, const char *a2, ...)
{
  return _[a1 tintColor];
}

id objc_msgSend_title(void *a1, const char *a2, ...)
{
  return _[a1 title];
}

id objc_msgSend_toggleActiveCategoryMuted(void *a1, const char *a2, ...)
{
  return _[a1 toggleActiveCategoryMuted];
}

id objc_msgSend_token(void *a1, const char *a2, ...)
{
  return _[a1 token];
}

id objc_msgSend_tombstoneWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tombstoneWithError:");
}

id objc_msgSend_topOfNowPlayingAppStack(void *a1, const char *a2, ...)
{
  return _[a1 topOfNowPlayingAppStack];
}

id objc_msgSend_track(void *a1, const char *a2, ...)
{
  return _[a1 track];
}

id objc_msgSend_trackJoinResponseApproved_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trackJoinResponseApproved:");
}

id objc_msgSend_trackWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trackWithError:");
}

id objc_msgSend_tracked(void *a1, const char *a2, ...)
{
  return _[a1 tracked];
}

id objc_msgSend_transaction(void *a1, const char *a2, ...)
{
  return _[a1 transaction];
}

id objc_msgSend_transaction_didReceivePackets_receivedSize_requestedSize_queue_completion_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transaction:didReceivePackets:receivedSize:requestedSize:queue:completion:");
}

id objc_msgSend_transactionDidEnd_bytesRemaining_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transactionDidEnd:bytesRemaining:");
}

id objc_msgSend_transactionRequestingMemorySize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transactionRequestingMemorySize:");
}

id objc_msgSend_transactionWaitDurationOnNetworkSend(void *a1, const char *a2, ...)
{
  return _[a1 transactionWaitDurationOnNetworkSend];
}

id objc_msgSend_transactionWaitDurationOnOutOfMemory(void *a1, const char *a2, ...)
{
  return _[a1 transactionWaitDurationOnOutOfMemory];
}

id objc_msgSend_transactionWaitDurationOnXpcSend(void *a1, const char *a2, ...)
{
  return _[a1 transactionWaitDurationOnXpcSend];
}

id objc_msgSend_transitionToState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitionToState:");
}

id objc_msgSend_transport(void *a1, const char *a2, ...)
{
  return _[a1 transport];
}

id objc_msgSend_transportParticipants_forSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transportParticipants:forSession:");
}

id objc_msgSend_transportType(void *a1, const char *a2, ...)
{
  return _[a1 transportType];
}

id objc_msgSend_triggerAudioFadeInWithReplyQueue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "triggerAudioFadeInWithReplyQueue:completion:");
}

id objc_msgSend_triggerAudioFadeOutForNowPlayingApplicationWithReplyQueue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "triggerAudioFadeOutForNowPlayingApplicationWithReplyQueue:completion:");
}

id objc_msgSend_type(void *a1, const char *a2, ...)
{
  return _[a1 type];
}

id objc_msgSend_uiController(void *a1, const char *a2, ...)
{
  return _[a1 uiController];
}

id objc_msgSend_uiManager(void *a1, const char *a2, ...)
{
  return _[a1 uiManager];
}

id objc_msgSend_uiServer(void *a1, const char *a2, ...)
{
  return _[a1 uiServer];
}

id objc_msgSend_uid(void *a1, const char *a2, ...)
{
  return _[a1 uid];
}

id objc_msgSend_unarchivedDictionaryWithKeysOfClass_objectsOfClass_fromData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unarchivedDictionaryWithKeysOfClass:objectsOfClass:fromData:error:");
}

id objc_msgSend_unarchivedObjectOfClass_fromData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unarchivedObjectOfClass:fromData:error:");
}

id objc_msgSend_unarchivedObjectOfClasses_fromData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unarchivedObjectOfClasses:fromData:error:");
}

id objc_msgSend_unclusteredOutputDevices(void *a1, const char *a2, ...)
{
  return _[a1 unclusteredOutputDevices];
}

id objc_msgSend_undiscoverableGroupLeaderHandle(void *a1, const char *a2, ...)
{
  return _[a1 undiscoverableGroupLeaderHandle];
}

id objc_msgSend_undoTimer(void *a1, const char *a2, ...)
{
  return _[a1 undoTimer];
}

id objc_msgSend_undoUnusedAutoRouteTimerDuration(void *a1, const char *a2, ...)
{
  return _[a1 undoUnusedAutoRouteTimerDuration];
}

id objc_msgSend_undoUnusedAutoRoutes(void *a1, const char *a2, ...)
{
  return _[a1 undoUnusedAutoRoutes];
}

id objc_msgSend_unionSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unionSet:");
}

id objc_msgSend_uniqueIDOverride(void *a1, const char *a2, ...)
{
  return _[a1 uniqueIDOverride];
}

id objc_msgSend_uniqueIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 uniqueIdentifier];
}

id objc_msgSend_unlock(void *a1, const char *a2, ...)
{
  return _[a1 unlock];
}

id objc_msgSend_unpickAirPlayRoutes(void *a1, const char *a2, ...)
{
  return _[a1 unpickAirPlayRoutes];
}

id objc_msgSend_unregisterAllVirtualVoiceInputDevices(void *a1, const char *a2, ...)
{
  return _[a1 unregisterAllVirtualVoiceInputDevices];
}

id objc_msgSend_unregisterConnectionFailureForWHAIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unregisterConnectionFailureForWHAIdentifier:");
}

id objc_msgSend_unregisterDiscoveryToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unregisterDiscoveryToken:");
}

id objc_msgSend_unregisterForChanges(void *a1, const char *a2, ...)
{
  return _[a1 unregisterForChanges];
}

id objc_msgSend_unregisterObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unregisterObserver:");
}

id objc_msgSend_unregisterOrigin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unregisterOrigin:");
}

id objc_msgSend_unregisterOriginForwarder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unregisterOriginForwarder:");
}

id objc_msgSend_unresolvedPlayerPath(void *a1, const char *a2, ...)
{
  return _[a1 unresolvedPlayerPath];
}

id objc_msgSend_unsignedIntValue(void *a1, const char *a2, ...)
{
  return _[a1 unsignedIntValue];
}

id objc_msgSend_unsignedIntegerValue(void *a1, const char *a2, ...)
{
  return _[a1 unsignedIntegerValue];
}

id objc_msgSend_update(void *a1, const char *a2, ...)
{
  return _[a1 update];
}

id objc_msgSend_updateASEAssertionForRemoteDeviceID_isAsserting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateASEAssertionForRemoteDeviceID:isAsserting:");
}

id objc_msgSend_updateActiveUser(void *a1, const char *a2, ...)
{
  return _[a1 updateActiveUser];
}

id objc_msgSend_updateCandidate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateCandidate:");
}

id objc_msgSend_updateCandidates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateCandidates:");
}

id objc_msgSend_updateClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateClient:");
}

id objc_msgSend_updateDefaultSupportedCommandsData_forClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateDefaultSupportedCommandsData:forClient:");
}

id objc_msgSend_updateDesignatedGroupLeader_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateDesignatedGroupLeader:");
}

id objc_msgSend_updateDeviceInfo_origin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateDeviceInfo:origin:");
}

id objc_msgSend_updateIsMusicAppInstalled(void *a1, const char *a2, ...)
{
  return _[a1 updateIsMusicAppInstalled];
}

id objc_msgSend_updateLastPlayingDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateLastPlayingDate:");
}

id objc_msgSend_updateNodes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateNodes:");
}

id objc_msgSend_updateNowPlayingActivityState_suppressedBundleIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateNowPlayingActivityState:suppressedBundleIdentifiers:");
}

id objc_msgSend_updateOutputDevices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateOutputDevices:");
}

id objc_msgSend_updateParticipants_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateParticipants:");
}

id objc_msgSend_updatePeer(void *a1, const char *a2, ...)
{
  return _[a1 updatePeer];
}

id objc_msgSend_updatePepperIfNeededWithSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatePepperIfNeededWithSession:");
}

id objc_msgSend_updatePlaybackQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatePlaybackQueue:");
}

id objc_msgSend_updatePlaybackQueue_fromRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatePlaybackQueue:fromRequest:");
}

id objc_msgSend_updatePlaybackQueueWithContentItems_fromRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatePlaybackQueueWithContentItems:fromRequest:");
}

id objc_msgSend_updatePlaybackState_date_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatePlaybackState:date:");
}

id objc_msgSend_updatePlayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatePlayer:");
}

id objc_msgSend_updateRouteCandidate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateRouteCandidate:");
}

id objc_msgSend_updateRouteCandidates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateRouteCandidates:");
}

id objc_msgSend_updateSystemEndpointForRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSystemEndpointForRequest:");
}

id objc_msgSend_updateSystemEndpointForRequest_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSystemEndpointForRequest:completion:");
}

id objc_msgSend_updateSystemEndpointForRequest_event_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSystemEndpointForRequest:event:completion:");
}

id objc_msgSend_updateSystemEndpointForRequest_event_eventReason_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSystemEndpointForRequest:event:eventReason:completion:");
}

id objc_msgSend_updateVolume_outputDeviceUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateVolume:outputDeviceUID:");
}

id objc_msgSend_updateVolumeControlCapabilities_outputDeviceUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateVolumeControlCapabilities:outputDeviceUID:");
}

id objc_msgSend_updateVolumeMuted_outputDeviceUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateVolumeMuted:outputDeviceUID:");
}

id objc_msgSend_uppercaseString(void *a1, const char *a2, ...)
{
  return _[a1 uppercaseString];
}

id objc_msgSend_useAPSyncAPI(void *a1, const char *a2, ...)
{
  return _[a1 useAPSyncAPI];
}

id objc_msgSend_useClusterDevices(void *a1, const char *a2, ...)
{
  return _[a1 useClusterDevices];
}

id objc_msgSend_useExternalDeviceSystemPairing(void *a1, const char *a2, ...)
{
  return _[a1 useExternalDeviceSystemPairing];
}

id objc_msgSend_useOutputDeviceCache(void *a1, const char *a2, ...)
{
  return _[a1 useOutputDeviceCache];
}

id objc_msgSend_usePeerToPeerExternalDeviceConnections(void *a1, const char *a2, ...)
{
  return _[a1 usePeerToPeerExternalDeviceConnections];
}

id objc_msgSend_useProactivePFSQSender(void *a1, const char *a2, ...)
{
  return _[a1 useProactivePFSQSender];
}

id objc_msgSend_userCancelledPickingRoute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userCancelledPickingRoute:");
}

id objc_msgSend_userData(void *a1, const char *a2, ...)
{
  return _[a1 userData];
}

id objc_msgSend_userDefaults(void *a1, const char *a2, ...)
{
  return _[a1 userDefaults];
}

id objc_msgSend_userIdentity(void *a1, const char *a2, ...)
{
  return _[a1 userIdentity];
}

id objc_msgSend_userIdentityForDSID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userIdentityForDSID:completion:");
}

id objc_msgSend_userIdentityWithDisplayName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userIdentityWithDisplayName:");
}

id objc_msgSend_userInfo(void *a1, const char *a2, ...)
{
  return _[a1 userInfo];
}

id objc_msgSend_userInitiated(void *a1, const char *a2, ...)
{
  return _[a1 userInitiated];
}

id objc_msgSend_userProfile(void *a1, const char *a2, ...)
{
  return _[a1 userProfile];
}

id objc_msgSend_userSelectedEndpointController(void *a1, const char *a2, ...)
{
  return _[a1 userSelectedEndpointController];
}

id objc_msgSend_userState(void *a1, const char *a2, ...)
{
  return _[a1 userState];
}

id objc_msgSend_valid(void *a1, const char *a2, ...)
{
  return _[a1 valid];
}

id objc_msgSend_validateAirPlayConfigurationForReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validateAirPlayConfigurationForReason:");
}

id objc_msgSend_validator(void *a1, const char *a2, ...)
{
  return _[a1 validator];
}

id objc_msgSend_valueForEntitlement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueForEntitlement:");
}

id objc_msgSend_valueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueForKey:");
}

id objc_msgSend_valueForKeyPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueForKeyPath:");
}

id objc_msgSend_valueWithMRHIDTouchEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueWithMRHIDTouchEvent:");
}

id objc_msgSend_verboseConnectionMonitorLogging(void *a1, const char *a2, ...)
{
  return _[a1 verboseConnectionMonitorLogging];
}

id objc_msgSend_verboseHostedDiscoverySessionLogging(void *a1, const char *a2, ...)
{
  return _[a1 verboseHostedDiscoverySessionLogging];
}

id objc_msgSend_verboseHostedExternalDeviceClientLogging(void *a1, const char *a2, ...)
{
  return _[a1 verboseHostedExternalDeviceClientLogging];
}

id objc_msgSend_verboseMRDMediaRemoteClientLogging(void *a1, const char *a2, ...)
{
  return _[a1 verboseMRDMediaRemoteClientLogging];
}

id objc_msgSend_verboseNowPlayingStateObserver(void *a1, const char *a2, ...)
{
  return _[a1 verboseNowPlayingStateObserver];
}

id objc_msgSend_verboseOriginForwarderLogging(void *a1, const char *a2, ...)
{
  return _[a1 verboseOriginForwarderLogging];
}

id objc_msgSend_verboseRemoteControlDiscoveryLogging(void *a1, const char *a2, ...)
{
  return _[a1 verboseRemoteControlDiscoveryLogging];
}

id objc_msgSend_verifyConnectionStatusAndMaybeDisconnect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifyConnectionStatusAndMaybeDisconnect:");
}

id objc_msgSend_verifyCreatedPlayerPath_forClient_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verifyCreatedPlayerPath:forClient:error:");
}

id objc_msgSend_version(void *a1, const char *a2, ...)
{
  return _[a1 version];
}

id objc_msgSend_virtualAudioInputServer_didUpdateRecordingState_forDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "virtualAudioInputServer:didUpdateRecordingState:forDevice:");
}

id objc_msgSend_virtualDeviceID(void *a1, const char *a2, ...)
{
  return _[a1 virtualDeviceID];
}

id objc_msgSend_virtualOutputDeviceDictionary(void *a1, const char *a2, ...)
{
  return _[a1 virtualOutputDeviceDictionary];
}

id objc_msgSend_virtualTouchDeviceWithID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "virtualTouchDeviceWithID:");
}

id objc_msgSend_visibility(void *a1, const char *a2, ...)
{
  return _[a1 visibility];
}

id objc_msgSend_voiceRecordingState(void *a1, const char *a2, ...)
{
  return _[a1 voiceRecordingState];
}

id objc_msgSend_volume(void *a1, const char *a2, ...)
{
  return _[a1 volume];
}

id objc_msgSend_volumeCapabilities(void *a1, const char *a2, ...)
{
  return _[a1 volumeCapabilities];
}

id objc_msgSend_volumeCategoryForAudioCategory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "volumeCategoryForAudioCategory:");
}

id objc_msgSend_volumeControlAvailable(void *a1, const char *a2, ...)
{
  return _[a1 volumeControlAvailable];
}

id objc_msgSend_volumeControlCapabilities(void *a1, const char *a2, ...)
{
  return _[a1 volumeControlCapabilities];
}

id objc_msgSend_volumeControlCapabilitiesForOutputDeviceUID_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "volumeControlCapabilitiesForOutputDeviceUID:error:");
}

id objc_msgSend_volumeForOutputDeviceUID_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "volumeForOutputDeviceUID:error:");
}

id objc_msgSend_volumeUpdates(void *a1, const char *a2, ...)
{
  return _[a1 volumeUpdates];
}

id objc_msgSend_w(void *a1, const char *a2, ...)
{
  return _[a1 w];
}

id objc_msgSend_waitForCompletion(void *a1, const char *a2, ...)
{
  return _[a1 waitForCompletion];
}

id objc_msgSend_waitForConnectionWithOutputDeviceUID_timeout_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "waitForConnectionWithOutputDeviceUID:timeout:completion:");
}

id objc_msgSend_waitForPlaybackWithTimeout_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "waitForPlaybackWithTimeout:queue:completion:");
}

id objc_msgSend_waitUntilForwardingOperationsHaveFinished_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "waitUntilForwardingOperationsHaveFinished:");
}

id objc_msgSend_wakeDeviceIfNecessaryForNowPlayingPlayerClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wakeDeviceIfNecessaryForNowPlayingPlayerClient:");
}

id objc_msgSend_wakeSystemForReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wakeSystemForReason:");
}

id objc_msgSend_wakingPlayerPathAssertionDuration(void *a1, const char *a2, ...)
{
  return _[a1 wakingPlayerPathAssertionDuration];
}

id objc_msgSend_wantsNowPlayingArtworkNotifications(void *a1, const char *a2, ...)
{
  return _[a1 wantsNowPlayingArtworkNotifications];
}

id objc_msgSend_wantsNowPlayingNotifications(void *a1, const char *a2, ...)
{
  return _[a1 wantsNowPlayingNotifications];
}

id objc_msgSend_wantsOutputDeviceNotifications(void *a1, const char *a2, ...)
{
  return _[a1 wantsOutputDeviceNotifications];
}

id objc_msgSend_wantsSystemEndpointNotifications(void *a1, const char *a2, ...)
{
  return _[a1 wantsSystemEndpointNotifications];
}

id objc_msgSend_wantsVolumeNotifications(void *a1, const char *a2, ...)
{
  return _[a1 wantsVolumeNotifications];
}

id objc_msgSend_weakObjectsHashTable(void *a1, const char *a2, ...)
{
  return _[a1 weakObjectsHashTable];
}

id objc_msgSend_weakProxyWithObject_protocol_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "weakProxyWithObject:protocol:");
}

id objc_msgSend_weakToStrongObjectsMapTable(void *a1, const char *a2, ...)
{
  return _[a1 weakToStrongObjectsMapTable];
}

id objc_msgSend_weakToWeakObjectsMapTable(void *a1, const char *a2, ...)
{
  return _[a1 weakToWeakObjectsMapTable];
}

id objc_msgSend_whaConnect(void *a1, const char *a2, ...)
{
  return _[a1 whaConnect];
}

id objc_msgSend_willBeLocallyHosted(void *a1, const char *a2, ...)
{
  return _[a1 willBeLocallyHosted];
}

id objc_msgSend_willStartingPlaybackToOutputDevicesInterrupt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "willStartingPlaybackToOutputDevicesInterrupt:");
}

id objc_msgSend_workerQueue(void *a1, const char *a2, ...)
{
  return _[a1 workerQueue];
}

id objc_msgSend_writeToFile_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeToFile:options:error:");
}

id objc_msgSend_writeToURL_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeToURL:options:error:");
}

id objc_msgSend_xpcClient(void *a1, const char *a2, ...)
{
  return _[a1 xpcClient];
}

id objc_msgSend_xpcClientForPlayerPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "xpcClientForPlayerPath:");
}

id objc_msgSend_xpcConnection(void *a1, const char *a2, ...)
{
  return _[a1 xpcConnection];
}

id objc_msgSend_xpcEndpoint(void *a1, const char *a2, ...)
{
  return _[a1 xpcEndpoint];
}

id objc_msgSend_xpcMessage(void *a1, const char *a2, ...)
{
  return _[a1 xpcMessage];
}