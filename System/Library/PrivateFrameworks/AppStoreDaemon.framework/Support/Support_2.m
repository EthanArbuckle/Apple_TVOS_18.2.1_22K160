uint64_t sub_10017171C( int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  int v19;
  uint64_t v20;
  uint64_t v21;
  return ((uint64_t (*)(void))(*(void *)(v21
                                        + 8LL
                                        * (((~a19
                                           + v20
                                           - (unint64_t)(v19 - 1265008640 + ((a1 - 241240788) & 0xFFEF9E77)) > 0xF)
                                          * (a1 - 2717)) ^ a1))
                            - 12LL))();
}

uint64_t sub_100171778( int a1, int8x16_t a2, double a3, double a4, int8x16_t a5, uint64_t a6, uint64_t a7, int a8, int a9, int a10, unsigned int a11)
{
  int8x16_t *v12 = vaddq_s8( vsubq_s8( *(int8x16_t *)(v13 + (v11 + a8)),  vandq_s8( vaddq_s8(*(int8x16_t *)(v13 + (v11 + a8)), *(int8x16_t *)(v13 + (v11 + a8))),  a5)),  a2);
  return ((uint64_t (*)(void))(*(void *)(v14 + 8LL * (a1 + 443)) - ((a1 - a9 - 1249 + a10) & a11) + 203LL))();
}

uint64_t sub_1001717E0@<X0>(int a1@<W3>, int a2@<W4>, char a3@<W7>, uint64_t a4@<X8>)
{
  *(_BYTE *)(v7 + a4) = *(_BYTE *)(v8 + (v4 + a1))
  return ((uint64_t (*)(void))(*(void *)(v10 + 8LL * (((a4 == 63) * v9) ^ (a2 + v5 + 237))) - 12LL))();
}

uint64_t sub_100171834( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19)
{
  BOOL v22 = v19 + 1511057170 < (a19 - 1825692663);
  return ((uint64_t (*)(void))(*(void *)(v21 + 8LL * ((70 * (((v20 - 1) ^ v22) & 1)) ^ v20)) - 12LL))();
}

uint64_t sub_1001718A4( uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17, int a18, int a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, int a35, char a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, int a45)
{
  int v47 = (a2 - 259883172) | 0x10C1E01;
  int v48 = 375636451 * ((v46 - 160) ^ 0x533E5A8C);
  STACK[0x388] = a16;
  *(_DWORD *)(v46 - 160) = v48 + a2 + 980;
  *(_DWORD *)(v46 - 156) = v48 + a19 + 486761359;
  uint64_t v49 = sub_10012CC18(v46 - 160);
  uint64_t v50 = a45 & (v47 + 242311660);
  *(&a36 + (v50 ^ 0xA)) = -10;
}

uint64_t sub_10017199C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v8
                              + 8LL
                              * (int)((((v6 - a5 - 533) ^ (v7 - 1974) ^ (v6 + 1287890844) & 0xB33C57AF) * (v5 == 63)) ^ v6)))();
}

uint64_t sub_1001719E0()
{
  return (*(uint64_t (**)(void))(v3
                              + 8LL
                              * ((186 * ((v0 ^ (v2 + 19) ^ ((((2 * v1) ^ 0xBE4) - 787609447) | 0x20809000u)) < 8)) ^ v1)))();
}

uint64_t sub_100171A28@<X0>( uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, int a27, char a28)
{
  *(void *)(&a28 + a1 - 25980485) = 0x7676767676767676LL;
}

void sub_100171A84()
{
}

uint64_t sub_100171A8C@<X0>( int a1@<W0>, int a2@<W3>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, int a29, char a30)
{
  *(&a30 + (a3 - 597963387)) = *(_BYTE *)(v34 + (v30 + a2))
  unsigned int v37 = a1 + v30 + 1;
  int v38 = (v31 < v33) ^ (v37 < v33);
  BOOL v39 = v37 < v31;
  if (v38) {
    BOOL v39 = v31 < v33;
  }
  return ((uint64_t (*)(void))(*(void *)(v36 + 8LL * ((!v39 * v32) ^ v35)) - 12LL))();
}

uint64_t sub_100171B24@<X0>(int a1@<W4>, int a2@<W8>)
{
  return ((uint64_t (*)(void))(*(void *)(v3
                                        + 8LL
}

uint64_t sub_100171B68@<X0>(unsigned int a1@<W8>)
{
  uint64_t v4 = a1;
  else {
    uint64_t v5 = 56LL;
  }
  return (*(uint64_t (**)(void))(v3
                              + 8LL
}

uint64_t sub_100171BCC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, int a34, char a35)
{
  *(void *)(&a35 + v37 - 25980485) = 0x7676767676767676LL;
  return ((uint64_t (*)(void))(*(void *)(v38 + 8LL * ((305 * ((v35 & 0xFFFFFFFFFFFFFFF8LL) == 8)) ^ (v36 - 707)))
                            - ((v36 - 2883) | 0x404u)
                            + 1609LL))();
}

uint64_t sub_100171C28(double a1)
{
  *uint64_t v3 = a1;
  return ((uint64_t (*)(void))(*(void *)(v6 + 8LL * (((v5 == 0) * v4) ^ v1)) - v2 + 1609))();
}

uint64_t sub_100171C50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
}

void sub_100171C94()
{
}

uint64_t sub_1001720D4@<X0>(int a1@<W4>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8LL
                              * (int)((((a2 - a1 - 455) ^ (a2 - 204474554) & 0xFDBE9F77 ^ 0xF97) * (v3 == v2)) ^ a2)))();
}

void sub_100172128()
{
}

uint64_t sub_100172138@<X0>( int a1@<W4>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, int a28, char a29)
{
  *(&a29 + a2 - 25980485) = 118;
  return (*(uint64_t (**)(void))(v30 + 8LL * ((1769 * ((unint64_t)(a2 - 25980484) < 0x40)) | (a1 + v29 + 564))))();
}

uint64_t sub_1001721F8( uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, int a34, char a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, int a47)
{
  unsigned int v53 = *(_DWORD *)(&a35 + ((v51 + v48) & 0xFFFFFFFC) + 72);
  *(_BYTE *)(a7 + (v51 + v48)) = (HIBYTE(v53) ^ 0xC9) - ((2 * (HIBYTE(v53) ^ 0xC9)) & 0xEC) + 118;
  *(_BYTE *)(a7 + (v51 + v48 + 2)) = (BYTE1(v53) ^ 0x94) - ((2 * (BYTE1(v53) ^ 0x94)) & 0xEC) + 118;
  *(_BYTE *)(a7 + (v51 + v48 + 1)) = ((v53 >> (((v49 + 53) | 0x50) ^ (a4 - 16))) ^ 0xC0)
                                                 - 2
                                                 * (((v53 >> (((v49 + 53) | 0x50) ^ (a4 - 16))) ^ 0xC0) & 0x7E ^ (v53 >> (((v49 + 53) | 0x50) ^ (a4 - 16))) & 8)
                                                 + 118;
  *(_BYTE *)(a7 + (v51 + v48 + 3)) = v53 ^ 0x97;
  BOOL v54 = v51 + 1615367759 < (a47 + 1741701998);
  if (v51 + 1615367759 < v47 != a47 + 1741701998 < v47) {
    BOOL v54 = a47 + 1741701998 < v47;
  }
  return ((uint64_t (*)(void))(*(void *)(v52 + 8LL * ((v54 * v50) ^ v49)) - 4LL))();
}

void sub_1001723A4()
{
}

uint64_t sub_1001723AC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, char a47)
{
  *(_DWORD *)(&a47 + a29) = 583670133;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v48 + 8LL * (v47 - 1603)) - ((((v47 - 1603) ^ 0x4F5) - a5 + 1172) ^ 0xF18E9E57LL)))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25);
}

uint64_t sub_100172460()
{
  return ((uint64_t (*)(void))(*(void *)(v3
                                        + 8LL
                                        * ((120 * (v2 != ((v0 + 263) ^ (v1 - 577) ^ ((v0 + 263) | 0x420) ^ 0xD5AA6D5E))) ^ v0))
                            - 4LL))();
}

uint64_t sub_1001724C0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, int a28, int a29)
{
  int v33 = v29 ^ (v30 - 83);
  int v34 = v33 + 2894;
  int v35 = 18 * v33;
  int v36 = a5 + v29 + 1618;
  unsigned int v37 = a29 + 369364503 + v34;
  unsigned int v38 = v35 + v31 + 1224769245;
  int v39 = (v37 < 0x69BB2968) ^ (v38 < 0x69BB2968);
  BOOL v40 = v37 < v38;
  if (v39) {
    BOOL v40 = v38 < 0x69BB2968;
  }
  return (*(uint64_t (**)(void))(v32 + 8LL * (!v40 | (16 * !v40) | v36)))();
}

uint64_t sub_100172724()
{
  return (*(uint64_t (**)(void))(v2
                              + 8LL
                              * (((*(_DWORD *)(v3 + 48LL * (v1 - 606405100 + 3 * (v0 ^ 0xA53) + 1705) + 36) != v1)
                                * (v0 - 2967)) ^ v0)))();
}

uint64_t sub_100172774( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t a11, unint64_t a12, unint64_t a13, unint64_t a14)
{
  int v20 = 142545853 * ((((2 * (v19 - 160)) | 0xCD474E7C) - (v19 - 160) - 1722001214) ^ 0x4C5C0851);
  STACK[0x3B0] = a14;
  STACK[0x388] = v14;
  STACK[0x380] = a13;
  STACK[0x3A0] = a11;
  *(_DWORD *)(v19 - 120) = v15 - v20 + 2308;
  *(_DWORD *)(v19 - 116) = v16 - v20 + (((v15 + 1905004668) | 0x80028801) ^ 0xF876469);
  STACK[0x398] = a12;
  uint64_t v21 = ((uint64_t (*)(uint64_t))((char *)*(&off_1003E8E60 + v15 - 1229) - 4))(v19 - 160);
  return ((uint64_t (*)(uint64_t))(*(void *)(v17
                                                      + 8LL * (((*(_DWORD *)(v19 - 144) == v18) * (v15 + 1992)) ^ v15))
                                          - 4LL))(v21);
}

uint64_t sub_100172864(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  BOOL v10 = *(_DWORD *)(v9 + 48LL * (v7 - 606405100 + a5 + ((v6 + 2455) ^ (v5 - 3349)) + 1713)) == 1774741817;
  return ((uint64_t (*)(void))(*(void *)(v8 + 8LL * ((v10 | (2 * v10)) ^ (v6 + 2455))) - 4LL))();
}

uint64_t sub_1001728C0@<X0>(int a1@<W4>, int a2@<W8>)
{
  if ((a2 - 940263046) <= 0x18 && ((1 << (a2 + 122)) & 0x1094001) != 0)
  {
    BOOL v5 = ((498 * ((v3 - 3) ^ 0xF18E9E53) + 0xFFFFFFFFFFFFA29LL) & (unint64_t)v2) - 1 >= (((a1 - 242311721) | 0x84u) ^ 0x5D4uLL);
    __asm { BR              X10 }
  }

  return 4294925278LL;
}

void sub_100172CFC(_DWORD *a1)
{
  unsigned int v1 = *a1 - 366490169 * ((2 * (a1 & 0x2A540D67) - (_DWORD)a1 + 1437332120) ^ 0x4305A4DC);
  __asm { BR              X10 }

uint64_t sub_100172DB4(uint64_t a1)
{
  return ((uint64_t (*)(void))(*(void *)(v2
                                        + 8LL
                                        * (((*(_DWORD *)(*(void *)(a1 + 8) + v4) == ((v3 + 1403240839) & 0xAC5C3FED ^ (v1 + 2335)))
                                          * (((v3 - 2836) | 0x101) ^ 0x3F6)) ^ v3))
                            - 8LL))();
}

uint64_t sub_100172E0C@<X0>(uint64_t a1@<X8>)
{
  unsigned int v5 = v2
  v4[0] = v1;
  v4[1] = a1;
  return sub_10017F214((uint64_t)v4);
}

void sub_100172F94()
{
  v0[1] = 31090337 * ((((2 * v0) | 0xA898FAB4) - v0 + 733184678) ^ 0x13CD1D13) + 1655392376;
  sub_100180004(v0);
  __asm { BR              X8 }

uint64_t sub_100173068( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, int a16, unsigned int a17)
{
  a15 = &STACK[0x17731A7695F8FE75];
  a17 = 3673 - ((2089518665 - (&a15 | 0x7C8B8649) + (&a15 | 0x837479B6)) ^ 0x44F519FF) * v19;
  sub_10013E2D8((uint64_t)&a15);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 8LL * ((1582 * (a16 == 774154701)) ^ v17)))( v20,  v21,  v22,  v23,  v24,  v25,  v26,  v27);
}

uint64_t sub_1001730F8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unsigned int a15, uint64_t a16, unsigned int a17, uint64_t a18, unsigned int a19)
{
  unsigned int v27 = 366490169
      * (((&a15 | 0xB91D0FEA) - &a15 + (&a15 & 0x46E2F010)) ^ 0xAFB359AE);
  a17 = v27 + 1313;
  a16 = a12;
  a15 = ((2 * v24) & 0xF67DFFFC) + (v24 ^ 0x7B3EFFFE) - 1226850348 + v27;
  sub_100092B3C((uint64_t)&a15);
  unsigned int v28 = 366490169 * (((&a15 | 0xE22C1649) - (&a15 & 0xE22C1649)) ^ 0xF482400D);
  a16 = a12;
  a17 = v28 + 1313;
  a15 = (v23 ^ 0xBBDEFFDA) + ((2 * v23) & 0x77BDFFB4) + 1983889400 + v28;
  sub_100092B3C((uint64_t)&a15);
  unsigned int v29 = ((2043262673 - (&a15 | 0x79C9B6D1) + (&a15 | 0x8636492E)) ^ 0x41B72967) * v26;
  a18 = a12;
  a17 = v29 + 629;
  a19 = (v22 ^ 0xFDBF7DFE) + ((2 * v22) & 0xFB7EFBFC) - v29 + 862322616;
  a16 = v21;
  sub_100158508((uint64_t)&a15);
  unsigned int v30 = (&a15 ^ 0xC7816049) * v26;
  a17 = v30 + 629;
  a16 = a10;
  a18 = a12;
  a19 = (v20 ^ 0x7337FFFF) + ((2 * v20) & 0xE66FFFFE) - v30 - 1108509257;
  sub_100158508((uint64_t)&a15);
  unsigned int v31 = ((&a15 & 0x9DCC7779 | ~(&a15 | 0x9DCC7779)) ^ 0xA5B2E8CF) * v26;
  a16 = a11;
  a17 = v31 + 629;
  a19 = (v19 ^ 0x73A77FF6) + ((2 * v19) & 0xE74EFFEC) - v31 - 1115816512;
  a18 = a12;
  uint64_t v32 = ((uint64_t (*)(unsigned int *))sub_100158508)(&a15);
  return ((uint64_t (*)(uint64_t))(*(void *)(v25 + 8LL * ((1363 * (a15 == 774154701)) ^ 0x882u)) - 12LL))(v32);
}

uint64_t sub_1001733D4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, int a16, uint64_t a17, unsigned int a18, int a19, int a20)
{
  int v22 = v20 - 6;
  int v23 = v20 - 66;
  int v24 = v20 - 1669;
  unsigned int v25 = 1314530549 * (((&a15 | 0x3E66B7DD) + (~&a15 | 0xC1994822)) ^ 0x8F6F3112);
  a20 = v25 ^ 0x4A7654E7;
  a18 = 1012424377 - v25;
  a17 = a12;
  a15 = &STACK[0x26BE0E4707FD38C0];
  a16 = (v20 + 1780978901) ^ v25;
  uint64_t v26 = sub_1001804F8((uint64_t)&a15);
  return ((uint64_t (*)(uint64_t))(*(void *)(v21
                                                      + 8LL
                                                      * ((254 * (((v23 ^ (a19 == (v24 ^ 0x2E24A830))) & 1) == 0)) ^ v22))
                                          - 12LL))(v26);
}

uint64_t sub_1001734C0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, char a15, int a16, unsigned int a17, uint64_t a18, char *a19)
{
  a18 = a13;
  a19 = &a15;
  a17 = (v19 + 858) ^ (((((2 * &a16) | 0x4C75B816) - &a16 - 641391627) ^ 0x97335AC5) * v20);
  ((void (*)(int *))(*(void *)(v21 + 8LL * (v19 ^ 0x176)) - 8LL))(&a16);
  LODWORD(a19) = v19
  a18 = a13;
  uint64_t v23 = sub_1001228D8((uint64_t)&a16);
  return ((uint64_t (*)(uint64_t))(*(void *)(v22 + 8LL * ((3660 * (a16 == 774154701)) ^ v19))
}

uint64_t sub_1001735A0()
{
  int v3 = 198 * (v1 ^ 0x1F6);
  uint64_t v9 = v6;
  unsigned int v10 = v3 + ((&v8 & 0xB9DCDAC3 | ~(&v8 | 0xB9DCDAC3)) ^ 0x508D7378) * v2 + 22;
  v0(&v8);
  unsigned int v10 = ((v3 - 2178) | 0x852)
      + ((&v8 & 0xC38025E7 | ~(&v8 | 0xC38025E7)) ^ 0x2AD18C5C) * v2
      + 70;
  uint64_t v9 = v5;
  v0(&v8);
  return ((2 * v7) & 0xDC6BDF9A) - 1074873856 + (v7 ^ 0x6E35E74F ^ v3) - 774154701;
}

void sub_1001736C8()
{
  v0[1] = 31090337 * (v0 ^ 0xC7816049) + 1655392376;
  sub_100180004(v0);
  __asm { BR              X8 }

uint64_t sub_100173784( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t *a17, int a18, unsigned int a19, unsigned int a20)
{
  unsigned int v26 = 1434876433 * (&a17 ^ 0xF46234AD);
  a19 = 2164 - v26;
  a20 = v26 + 670369728;
  LODWORD(a17) = v26 + 1599870339;
  HIDWORD(a17) = v26 ^ 0x1FBEC151;
  ((void (*)(unint64_t **))(*(void *)(v24 + 144) - 8LL))(&a17);
  a17 = &STACK[0x17731A7695F8FE8D];
  a19 = 3673 - ((2 * (&a17 & 0x223DAA68) - &a17 - 574466666) ^ 0x1A4335DF) * v25;
  sub_10013E2D8((uint64_t)&a17);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 + 8LL * ((8 * (a18 == (v20 ^ 0x2E24ADE1))) | 0x432u)) - 12LL))( v27,  v28,  v29,  v30,  v31,  v32,  v33,  v34,  v21,  v23);
}

uint64_t sub_1001738A8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned int a17, uint64_t a18, unsigned int a19, uint64_t a20, unsigned int a21)
{
  unsigned int v28 = 366490169 * (((&a17 | 0x1E28B619) + (~&a17 | 0xE1D749E6)) ^ 0x886E05C);
  a17 = (v24 ^ 0x73FFBFDF) + ((2 * v24) & 0xE7FF7FBE) - 1105264653 + v28;
  a19 = v28 + 1313;
  a18 = a15;
  sub_100092B3C((uint64_t)&a17);
  unsigned int v29 = (&a17 ^ 0xC7816049) * v26;
  a19 = v29 + 629;
  a20 = a15;
  a18 = a12;
  a21 = (v23 ^ 0x7D7FFDF7) - v29 + ((2 * v23) & 0xFAFFFBEE) - 1280999489;
  uint64_t v30 = ((uint64_t (*)(unsigned int *))(*(void *)(v27 + 496) - 12LL))(&a17);
  return ((uint64_t (*)(uint64_t))(*(void *)(v22 + 8LL * ((3431 * (a17 == v25)) ^ v21)) - 12LL))(v30);
}

uint64_t sub_1001739BC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t *a17, int a18, uint64_t a19, unsigned int a20, int a21, int a22)
{
  if (v23) {
    int v25 = 1249268964;
  }
  else {
    int v25 = 1249268965;
  }
  unsigned int v26 = 1314530549 * (&a17 ^ 0xB10986CE);
  a18 = v26 ^ 0x6A279D57;
  a17 = &STACK[0x26BE0E4707FD38D8];
  a20 = 50811680 - v26;
  a22 = v25 ^ v26;
  a19 = a15;
  uint64_t v27 = sub_1001804F8((uint64_t)&a17);
  return (*(uint64_t (**)(uint64_t))(v22 + 8LL * ((437 * (a21 == ((v24 - 382) ^ 0x182))) ^ 0x4B6)))(v27);
}

uint64_t sub_100173A78()
{
  return (*(uint64_t (**)(void))(v1 + 8LL * ((((v0 ^ 0x18F) + 1193 + 31 * (v0 ^ 0x18F) - 1592) * v2) ^ v0)))();
}

void sub_100173AA4()
{
  v6[1] = (v0 + 161) ^ (((v6 + 435802267 - 2 * (v6 & 0x19F9D09B)) ^ 0xA8F05655) * v2);
  uint64_t v7 = v5;
  uint64_t v8 = &v4;
  ((void (*)(_DWORD *))(*(void *)(v3 + 8LL * (v0 - 1067)) - 8LL))(v6);
  LODWORD(v8) = v0
  uint64_t v7 = v5;
  sub_1001228D8((uint64_t)v6);
  __asm { BR              X8 }

uint64_t sub_100173C04( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14)
{
  return (*(uint64_t (**)(void))(v15 + 8LL * ((1013 * (a14 == 0)) ^ v14)))();
}

uint64_t sub_100173C60( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15)
{
  return (*(uint64_t (**)(void))(v16
                              + 8LL
                              * (((4 * ((a15 != (v15 ^ 0x84) - 1867849497) & ~v17)) | (8
                                                                                     * ((a15 != (v15 ^ 0x84)
                                                                                              - 1867849497) & ~v17))) ^ v15)))();
}

uint64_t sub_100173CA4@<X0>(int a1@<W8>, uint64_t a2, uint64_t *a3)
{
  uint64_t v6 = (*(uint64_t (**)(void))(v5 + 8LL * (v3 ^ 0x4AA)))(a1 ^ 0x90AAE519);
  *a3 = v6;
  return (*(uint64_t (**)(void))(v4 + 8LL * (((v6 != 0) * (((v3 + 2101) ^ 0x8D9) + 1292)) ^ v3)))();
}

uint64_t sub_100173CF8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15)
{
  unsigned int v17 = (a15 ^ 0x90AAE519) - ((2 * (a15 ^ 0x90AAE519)) & 0x4486BE) + 2245471;
  return ((uint64_t (*)(void))(*(void *)(v16
                                        + 8LL
                                        * ((740
                                          * (((v17 << ((v15 - 15) ^ 0xDD)) & 0xBDDF7ED8 ^ 0x440698)
                                           + (v17 ^ 0x5ECDFC33)
                                           - 134521152 != 1458249260)) ^ v15))
                            - 4LL))();
}

uint64_t sub_100173D8C(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5
                                                     + 8LL
                                                     * (int)((((((v2 + v1 - 1592770412) < 8) ^ (-89 * (v4 ^ 0xD8) + 1)) & 1)
                                                            * (((v4 - 69212125) & 0xE7A7BEF7) + 477645633)) ^ v4)))( a1,  v3);
}

uint64_t sub_100173E08(uint64_t a1)
{
  return ((uint64_t (*)(uint64_t, uint64_t, void))(*(void *)(v4
                                                                       + 8LL
                                                                       * ((1800
                                                                         * ((((unint64_t)(v1 - a1) < 0x20) ^ (v3 - 121)) & 1)) ^ v3))
                                                           - (v3 ^ 0xEA9u)
                                                           + 1073LL))( a1,  v2,  (v3 + 1090659719) | 0xA28584D4);
}

uint64_t sub_100173E5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return ((uint64_t (*)(void))(*(void *)(v7
                                        + 8LL
                                        * (int)(((v6 < (((a5 - 997) | 0x283) ^ 0x2F3u))
                                               * (((a5 - 403195710) & 0xFB8FF7FF) + v5)) | a5))
                            - 4LL))();
}

uint64_t sub_100173EB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v14 = v11 + v10 + v12;
  __int128 v15 = *(_OWORD *)(v7 + v14 - 31);
  uint64_t v16 = a1 + v14;
  *(_OWORD *)(v16 - 15) = *(_OWORD *)(v7 + v14 - 15);
  *(_OWORD *)(v16 - 31) = v15;
  LODWORD(v16) = v8 + a7 - (v9 & 0xFFFFFFE0) == -24;
  return (*(uint64_t (**)(void))(v13 + 8LL * (int)(v16 | (8 * v16) | (v8 + a7 + 1690))))();
}

void sub_100173F18()
{
}

void sub_100173F20( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int *a9, uint64_t a10, void (*a11)(char *), uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, unsigned int a19)
{
  int v21 = 537 * (v20 ^ 0xDDE);
  *a9 = (v19 >> ((25 * (v20 ^ 0xDE)) ^ 0x37)) ^ 0x4855728;
  a19 = v21
  a18 = a16;
  a11(&a17);
  a18 = a15;
  a19 = ((v21 - 1629310148) & 0x611D4CBD)
  a11(&a17);
  JUMPOUT(0x1001741CCLL);
}

void sub_100174214(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 32) - 1434876433 * ((-2 - ((a1 | 0xE0125E80) + (~(_DWORD)a1 | 0x1FEDA17F))) ^ 0xEB8F95D2);
  __asm { BR              X15 }

uint64_t sub_10017435C(uint64_t a1, uint64_t a2, int a3)
{
  return ((uint64_t (*)(void))(*(void *)(v4
                                        + 8LL
                                        * (a3 | (2
                                               * (((v3 << ((((a3 + 40) | 0xE) - 60) ^ 0x33)) & 0x5FFF1FE4 ^ 0x17B704A0)
                                                              + (v3 ^ 0xA4245DA6)
                                                              - 79726466 != 725551216))))
                            - 12LL))();
}

uint64_t sub_1001743C8(uint64_t a1, int a2, uint64_t a3, int a4)
{
  return ((uint64_t (*)(uint64_t))(*(void *)(v5
}

uint64_t sub_100174410(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  return ((uint64_t (*)(void))(*(void *)(v8
                                        + 8LL
                                        * ((636
                                          * (a8 + ((((a5 + 1702560015) & 0x9A84F5DA) - 542) ^ (a3 - 582)) > 0xFFFFFFEF)) ^ a5))
                            - 12LL))();
}

uint64_t sub_10017445C@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W3>, uint64_t a4@<X6>, uint64_t a5@<X8>)
{
  uint64_t v11 = (a1 + v9 + a2) + a5;
  uint64_t v12 = ((_BYTE)a1 + (_BYTE)v9 + (_BYTE)a2) & 0xF;
  unint64_t v13 = v12 + v7 - v11;
  unint64_t v14 = (v12 | v8) - v11;
  uint64_t v15 = (v12 | v6) - v11;
  BOOL v17 = (unint64_t)(v5 - a5) >= 0x10 && v13 >= (a4 ^ 0x22AuLL) && v14 >= 0x10;
  unint64_t v18 = v15 + 1;
  int v20 = !v17 || v18 < 0x10;
  return ((uint64_t (*)(void))(*(void *)(v10 + 8LL * ((v20 * ((a3 + 2768) ^ 0xF1E)) ^ a3)) - 4LL))();
}

uint64_t sub_1001744D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, void))(*(void *)(v5
                                                                                + 8LL
                                                                                * ((((((v4 - 356368685) & 0x153DBFF4)
                                                                                    - 2820) ^ 0x2FA)
                                                                                  * (v3 > 0xF)) | v4))
                                                                    - 8LL))( a1,  a2,  a3,  0LL);
}

uint64_t sub_100174514@<X0>( int a1@<W1>, int a2@<W2>, unsigned int a3@<W4>, uint64_t a4@<X8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56)
{
  *(_DWORD *)(v63 - 120) = v60 + 7;
  v70.val[1].i64[0] = ((_BYTE)v60 + 13) & 0xF;
  v70.val[1].i64[1] = ((_BYTE)v60 + 12) & 0xF;
  v70.val[2].i64[0] = ((_BYTE)v60 + 11) & 0xF;
  v70.val[2].i64[1] = ((_BYTE)v60 + 10) & 0xF;
  v70.val[3].i64[0] = ((_BYTE)v60 + 9) & 0xF;
  v70.val[3].i64[1] = ((_BYTE)v60 + 8) & 0xF;
  unsigned int v64 = a1 + v62 + a2;
  v65.i64[0] = 0x1717171717171717LL;
  v65.i64[1] = 0x1717171717171717LL;
  uint64_t v66 = (((a3 - 3312) | 0xC1) ^ 0x1CE) & v64;
  v70.val[0].i64[0] = v66;
  v70.val[0].i64[1] = ((_BYTE)v60 + 14) & 0xF;
  v67.i64[0] = vqtbl4q_s8(v70, (int8x16_t)xmmword_100374CD0).u64[0];
  v71.val[0].i64[1] = ((_BYTE)v60 + 6) & 0xF;
  v71.val[1].i64[1] = ((_BYTE)v60 + 4) & 0xF;
  v71.val[2].i64[1] = ((_BYTE)v60 + 2) & 0xF;
  v71.val[3].i64[1] = v60 & 0xF;
  v71.val[0].i64[0] = *(_DWORD *)(v63 - 120) & 0xF;
  v71.val[1].i64[0] = ((_BYTE)v60 + 5) & 0xF;
  v71.val[2].i64[0] = (v60 + 3) & 0xF;
  v71.val[3].i64[0] = ((_BYTE)v60 + 1) & 0xF;
  v67.i64[1] = vqtbl4q_s8(v71, (int8x16_t)xmmword_100374CD0).u64[0];
  int8x16_t v68 = vrev64q_s8(vmulq_s8(v67, v65));
  *(int8x16_t *)(a4 - 15 + v64) = veorq_s8( veorq_s8( veorq_s8(*(int8x16_t *)(v58 + v66 - 15), *(int8x16_t *)(v56 - 15 + v64)),  veorq_s8(*(int8x16_t *)(v59 + v66 - 15), *(int8x16_t *)(v66 + v57 - 14))),  vextq_s8(v68, v68, 8uLL));
  return (*(uint64_t (**)(uint64_t))(a56 + 8LL * ((953 * ((v61 & 0xFFFFFFF0) == 16)) ^ a3)))(v61);
}

void sub_10017467C()
{
}

uint64_t sub_100174688(uint64_t a1)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 8LL * (v1 ^ (169 * (v2 != 0x8BDBD254))))
                                                            - 12LL))( a1,  169LL,  1433938629LL);
}

uint64_t sub_1001746D8@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, int a4@<W4>, uint64_t a5@<X8>)
{
  BOOL v15 = v11 > v13;
  uint64_t v16 = (a4 + a3 - 1433939959);
  *(_BYTE *)(a5 + v16) = *(_BYTE *)(v7 + (v16 & 0xF)) ^ *(_BYTE *)(v5 + v16) ^ *(_BYTE *)(v8 + (v16 & 0xF)) ^ *(_BYTE *)((v16 & 0xF) + v6 + 1) ^ (23 * (v16 & 0xF));
  if (v15 == a3 - 951792345 < v10) {
    BOOL v15 = a3 - 951792345 < v12;
  }
  return ((uint64_t (*)(uint64_t))(*(void *)(v14 + 8LL * ((v15 * a2) ^ v9)) - 12LL))(a1);
}

uint64_t sub_100174764( int a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v27
                                                                        + 8LL
                                                                        * ((43
                                                                          * (((a1 == a4) ^ (v26 - 82)) & 1)) ^ v26))
                                                            - 4LL))( a26,  a2,  a3);
}

uint64_t sub_1001747A4()
{
}

uint64_t sub_1001747DC@<X0>( int a1@<W1>, int a2@<W2>, int a3@<W3>, int a4@<W7>, uint64_t a5@<X8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  *(_DWORD *)(v66 - 152) = v57;
  *(_DWORD *)(v66 - 136) = v63;
  unsigned int v67 = v63 & 0xFFFFFFF8;
  *(void *)(v66 - 128) = a5 - 7;
  *(void *)(v66 - 120) = v58 - 7;
  *(_DWORD *)(v66 - 140) = v67;
  *(_DWORD *)(v66 - 132) = 8 - v67;
  int v68 = -a3;
  char v69 = v64 + a1 + v65;
  uint64_t v70 = (a1 + v65 + a2 + v68);
  v72.val[0].i64[0] = ((_BYTE)a1 + (_BYTE)v65 + (_BYTE)a2 + (_BYTE)v68) & 0xF;
  v72.val[0].i64[1] = (v69 + 14 + (_BYTE)v68) & 0xF;
  v72.val[1].i64[0] = (v69 + 13 + (_BYTE)v68) & 0xF;
  v72.val[1].i64[1] = (v69 + 12 + (_BYTE)v68) & 0xF;
  v72.val[2].i64[0] = (v69 + 11 + (_BYTE)v68) & 0xF;
  v72.val[2].i64[1] = (v62 + (_BYTE)v68 + ((a4 - 43) ^ 0xFB)) & 0xF;
  v72.val[3].i64[0] = (v69 + 9 + (_BYTE)v68) & 0xF;
  v72.val[3].i64[1] = (v69 + 8 + (_BYTE)v68) & 0xF;
  *(int8x8_t *)(*(void *)(v66 - 128) + v70) = veor_s8( veor_s8( veor_s8( *(int8x8_t *)(v60 + (v70 & 0xF) - 7),  *(int8x8_t *)(*(void *)(v66 - 120) + v70)),  veor_s8( *(int8x8_t *)(v61 + (v70 & 0xF) - 7),  *(int8x8_t *)((v70 & 0xF) + v59 - 6))),  vrev64_s8( vmul_s8( (int8x8_t)*(_OWORD *)&vqtbl4q_s8( v72,  (int8x16_t)xmmword_100374CE0),  (int8x8_t)0x1717171717171717LL)));
  return (*(uint64_t (**)(__n128))(a57 + 8LL * ((3926 * (*(_DWORD *)(v66 - 132) == v68)) ^ a4)))((__n128)xmmword_100374CE0);
}

void sub_100174924()
{
}

uint64_t sub_10017492C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, void))(*(void *)(v28 + 8LL * ((((((v26 - 399) ^ (*(_DWORD *)(v27 - 136) == *(_DWORD *)(v27 - 140))) & 1) == 0) * (v26 ^ 0x46E)) ^ v26))
                                                                                              - 4LL))( a26,  a2,  a3,  a4,  (v26 - 399) | 0x500u,  a6,  v26 ^ 0x3FBu);
}

uint64_t sub_10017497C@<X0>(int a1@<W5>, int a2@<W6>, uint64_t a3@<X8>)
{
  uint64_t v9 = (a1 - 725551217);
  *(_BYTE *)(a3 + v9) = *(_BYTE *)(v5 + (v9 & ((a2 + 760) - 1315LL))) ^ *(_BYTE *)(v3 + v9) ^ *(_BYTE *)(v6 + (v9 & ((a2 + 760) - 1315LL))) ^ *(_BYTE *)((v9 & ((a2 + 760) - 1315LL)) + v4 + 1) ^ (23 * (v9 & (a2 - 43)));
  return ((uint64_t (*)(void))(*(void *)(v8 + 8LL * ((1837 * (a1 - 1 != v7)) ^ (a2 - 121))) - 4LL))();
}

uint64_t sub_1001749EC@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52)
{
  uint64_t v55 = *(void *)(a1 + 48);
  *(int8x16_t *)(v53 - 112) = veorq_s8(*(int8x16_t *)*(void *)(a1 + 40), (int8x16_t)xmmword_100374D30);
  if (a9) {
    BOOL v56 = v55 == 0x6165DC5C293494EBLL;
  }
  else {
    BOOL v56 = 1;
  }
  char v57 = v56;
  LODWORD(a28) = 2 * v52;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v54 + 8LL * (int)((109 * (((a5 - 107) ^ v57) & 1)) ^ a5)))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28,  a29,  a30,  a31,  a32,  a33,  a34,  a35,  a36,  a37,  a38,  a39,  a40,  a41,  a42,  a43,  a44,  a45,  a46,  a47,  a48,  a49,  a50,
           a51,
           a52);
}

uint64_t sub_100174A6C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51)
{
  BOOL v54 = ((((a5 + 43) ^ 0xC) + (a27 & 0xFE) + ~(_BYTE)v51) & 0xF) == 0
     && (a27 & 0xFBE36FFE) + (v51 ^ 0x7DF1B7FFu) != 2112993279;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 8LL * (int)((v54 * ((a5 - 79587123) & 0x4BE6AC7 ^ 0x5D1)) ^ a5)))( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  a16,  a17,  a18,  a19,  a20,  a21,  a22,  a23,  a24,  a25,  a26,  a27,  a28,  a29,  a30,  a31,  a32,  a33,  a34,  a35,  a36,  a37,  a38,  a39,  a40,  a41,  a42,  a43,  a44,  a45,  a46,  a47,  a48,  a49,
           a50,
           a51);
}

uint64_t sub_100174AE0@<X0>( unsigned __int8 *a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  int v58 = v56;
  int v59 = (v56 - 347) | 0x238;
  *(_DWORD *)(v57 - 120) = v59;
  uint64_t v60 = (char *)*(&off_1003E8E60 + (v58 ^ 0x165)) - 12;
  int v61 = v60[*(unsigned __int8 *)(v53 - 0x6165DC5C293494E9LL) ^ 0xD7LL];
  *(_DWORD *)(v57 - 216) = v55;
  int v62 = v61 ^ 0xFF;
  uint64_t v63 = (uint64_t)*(&off_1003E8E60 + v58 - 100);
  int v64 = (*(unsigned __int8 *)(v63 + (*v54 ^ 0xB1LL)) ^ 0xC5) << (v59 - 34);
  int v65 = (char *)*(&off_1003E8E60 + v58 - 60) - 12;
  int v66 = v65[*(unsigned __int8 *)(v53 - 0x6165DC5C293494DELL) ^ 0x49LL];
  int v67 = v64 | (v62 << 8);
  HIDWORD(v68) = v66 ^ 1;
  LODWORD(v68) = (v66 ^ 0xFFFFFF8F) << 24;
  LOBYTE(v64) = v68 >> 26;
  char v69 = (char *)*(&off_1003E8E60 + (v58 ^ 0x154)) - 4;
  int v70 = *(unsigned __int8 *)(v63 + (*(unsigned __int8 *)(v53 - 0x6165DC5C293494DFLL) ^ 0xB8LL));
  int v71 = v65[*(unsigned __int8 *)(v53 - 0x6165DC5C293494E2LL) ^ 0x6BLL];
  HIDWORD(v68) = v71 ^ 1;
  LODWORD(v68) = (v71 ^ 0xFFFFFF8F) << 24;
  LOBYTE(v66) = v60[*(unsigned __int8 *)(v53 - 0x6165DC5C293494DDLL) ^ 0x2ELL];
  int v72 = ((v68 >> 26) ^ 0x53) << 16;
  int v73 = v65[*(unsigned __int8 *)(v53 - 0x6165DC5C293494EALL) ^ 0x47LL];
  HIDWORD(v68) = v73 ^ 1;
  LODWORD(v68) = (v73 ^ 0xFFFFFF8F) << 24;
  unsigned int v74 = v67 & 0xFFFFFF00 | (v69[*(unsigned __int8 *)(v53 - 0x6165DC5C293494E8LL) ^ 0xECLL] + 83) ^ 9 | (((v68 >> 26) ^ 0x1E) << 16);
  int v75 = v72 | ((v60[*(unsigned __int8 *)(v53 - 0x6165DC5C293494E1LL) ^ 0x77LL] ^ 0x30) << 8);
  LODWORD(v65) = v65[*(unsigned __int8 *)(v53 - 0x6165DC5C293494E6LL) ^ 0xCBLL];
  unsigned __int8 v76 = v69[*(unsigned __int8 *)(v53 - 0x6165DC5C293494DCLL) ^ 0x36LL] + 83;
  HIDWORD(v68) = v65 ^ 1;
  LODWORD(v68) = (v65 ^ 0xFFFFFF8F) << 24;
  int v77 = v76 ^ 0x2A | ((v66 ^ 0x3A) << 8) | ((v64 ^ 0xFB) << 16) | ((v70 ^ 0x7D) << 24);
  LODWORD(v65) = v69[*(unsigned __int8 *)(v53 - 0x6165DC5C293494E0LL) ^ 0xB5LL];
  unsigned int v78 = ((v69[*(unsigned __int8 *)(v53 - 0x6165DC5C293494E4LL) ^ 0xA9LL] + 83) | ((v60[*(unsigned __int8 *)(v53 - 0x6165DC5C293494E5LL) ^ 0x30LL] ^ 0xCA) << 8)) & 0xFF00FFFF | (((v68 >> 26) ^ 0xBA) << 16) | ((*(unsigned __int8 *)(v63 + (*(unsigned __int8 *)(v53 - 0x6165DC5C293494E7LL) ^ 0x35LL)) ^ 0xA) << 24);
  LODWORD(v63) = v75 & 0xFFFFFF00 | ((*(unsigned __int8 *)(v63
                                                         + (*(unsigned __int8 *)(v53 - 0x6165DC5C293494E3LL) ^ 0xBFLL)) ^ 0x13) << 24) | ((_BYTE)v65 + 83) ^ 0xA8;
  int v79 = v63 - 2 * (v63 & 0x613C5ABF ^ (((_DWORD)v65 + 83) ^ 0xA8) & 0x13);
  uint64_t v80 = (uint64_t)*(&off_1003E8E60 + v58 - 300);
  LODWORD(v60) = *(_DWORD *)(v80 + 4LL * (v76 ^ 0xFDu));
  unsigned int v81 = v79 - 516138324;
  v82 = (char *)*(&off_1003E8E60 + (v58 ^ 0x118)) - 12;
  unsigned int v83 = *(_DWORD *)&v82[4 * (v64 ^ 0x61)] ^ v60;
  v84 = (char *)*(&off_1003E8E60 + v58 - 221) - 4;
  int v85 = ((v83 ^ 0x6B159982) - 2 * ((v83 ^ 0x6B159982) & 0x7F45537E ^ v83 & 0x14) + 2135249770) ^ *(_DWORD *)&v84[4 * (v70 ^ 0xE8)];
  uint64_t v86 = (uint64_t)*(&off_1003E8E60 + v58 - 131);
  unint64_t v524 = __PAIR64__(v74, v77);
  unsigned int v407 = *(_DWORD *)(v86 + 4LL * (v66 ^ 2u)) ^ v74 ^ (v85 - ((2 * v85) & 0xF703AB52) + 2072106409);
  unsigned int v87 = v407 ^ v78 ^ 0xE2400726;
  *(_DWORD *)(v57 - 200) = v87;
  *(_DWORD *)(v57 - 160) = v407 ^ v78;
  int v88 = v87 ^ v81;
  *(_DWORD *)(v57 - 168) = v88;
  unsigned int v89 = v88 ^ (v77 - ((2 * v77) & 0x7316E0DC) - 1182044050);
  int v449 = ((unsigned __int16)(v88 ^ (v77 - ((2 * v77) & 0xE0DC) + 28782)) >> 8);
  unsigned int v90 = *(_DWORD *)(v86 + 4LL * (v449 ^ 0xD7u)) ^ *(_DWORD *)&v82[4 * (BYTE2(v89) ^ 0x49)] ^ 0xE69112DA;
  int v441 = (v88 ^ (v77 - ((2 * v77) & 0xDC) + 110));
  int v444 = BYTE2(v89);
  unsigned int v91 = (v90 - ((2 * v90) & 0xEC0ABDE2) - 167420175) ^ *(_DWORD *)(v80 + 4LL * (v441 ^ 0x80u));
  unsigned int v435 = HIBYTE(v89);
  unsigned int v92 = v407 ^ *(_DWORD *)&v84[4 * (HIBYTE(v89) ^ 0x65)] ^ (v91 - ((2 * v91) & 0xFE8AA6D4) + 2135249770);
  unint64_t v523 = __PAIR64__(v78, v81);
  *(_DWORD *)(v57 - 152) = v92 ^ v81;
  int v93 = v92 ^ v81 ^ 0x163B0AC;
  int v468 = ((v93 ^ v89) >> 16);
  int v478 = ((unsigned __int16)(v93 ^ v88 ^ (v77 - ((2 * v77) & 0xE0DC) + 28782)) >> 8);
  int v94 = *(_DWORD *)(v86 + 4LL * (v478 ^ 0x71u)) ^ *(_DWORD *)&v82[4 * (v468 ^ 0x71)];
  int v95 = (v93 ^ v88 ^ (v77 - ((2 * v77) & 0xDC) + 110));
  *(_DWORD *)(v57 - 248) = v95;
  unsigned int v96 = ((v94 ^ 0xE69112DA) - 2 * ((v94 ^ 0xE69112DA) & 0x76055EF5 ^ v94 & 4) - 167420175) ^ *(_DWORD *)(v80 + 4LL * (v95 ^ 0xD2u));
  unsigned int v465 = (v93 ^ v89) >> 24;
  unsigned int v97 = (v96 - ((2 * v96) & 0xFE8AA6D4) + 2135249770) ^ *(_DWORD *)&v84[4 * (v465 ^ 0x89)];
  unsigned __int8 v409 = v407 ^ v78 ^ 0x4D;
  int v98 = v97 ^ v407 ^ v78 ^ 0x4D;
  unsigned int v99 = v98 ^ 0x97A84976;
  *(_DWORD *)(v57 - 140) = v98;
  unsigned int v526 = v98 ^ 0x97A84976 ^ v89;
  int v491 = ((v526 ^ 0xED71AE9C) >> 16);
  unsigned int v100 = *(_DWORD *)&v82[4 * (v491 ^ 0x36)] ^ *(_DWORD *)(v86 + 4LL * (BYTE1(v526) ^ 0xC9u)) ^ 0xE69112DA;
  unsigned int v101 = (v100 - ((2 * v100) & 0xEC0ABDE2) - 167420175) ^ *(_DWORD *)(v80 + 4LL * (v526 ^ 0x31u));
  unsigned int v474 = v97 ^ v92;
  unsigned int v102 = (v526 ^ 0xED71AE9C) >> 24;
  *(_DWORD *)(v57 - 224) = v102;
  unsigned int v103 = (v101 - ((2 * v101) & 0xFE8AA6D4) + 2135249770) ^ *(_DWORD *)&v84[4 * (v102 ^ 0x1C)] ^ v97 ^ v92;
  unsigned int v543 = v103 ^ v97 ^ v407 ^ v78 ^ 0x4D;
  unsigned int v104 = v103;
  unsigned int v531 = v103;
  LODWORD(v60) = v543 ^ 0xFD839AAA ^ v93 ^ v89;
  *(_DWORD *)(v57 - 232) = BYTE1(v60);
  int v105 = *(_DWORD *)(v86 + 4LL * (BYTE1(v60) ^ 0x73u));
  *(_DWORD *)(v57 - 240) = BYTE2(v60);
  int v106 = *(_DWORD *)&v82[4 * (BYTE2(v60) ^ 0xF6)] ^ v105;
  unsigned int v519 = v60 >> 24;
  LODWORD(v69) = ((v106 ^ 0xE69112DA) - 2 * ((v106 ^ 0xE69112DA) & 0x7F45536B ^ v106 & 1) + 2135249770) ^ *(_DWORD *)&v84[4 * ((v60 >> 24) ^ 0x12)];
  int v517 = v543 ^ 0xAA ^ (v93 ^ v88 ^ (v77 - ((2 * v77) & 0xDC) + 110));
  *(_DWORD *)(v57 - 256) = (_DWORD)v60;
  LODWORD(v69) = ((_DWORD)v69 - ((2 * (_DWORD)v69) & 0xEC0ABDE2) - 167420175) ^ *(_DWORD *)(v80 + 4LL * (v517 ^ 0xABu));
  *(_DWORD *)(v57 - 136) = v99 ^ v93;
  unsigned int v540 = v543 ^ 0xFD839AAA ^ v99 ^ v93;
  unsigned int v107 = ((_DWORD)v69 - ((2 * (_DWORD)v69) & 0x5ABEC9BE) + 761226463) ^ v99 ^ v540;
  *(_DWORD *)(v57 - 176) = v107;
  unsigned int v405 = ((_DWORD)v69 - ((2 * (_DWORD)v69) & 0x5ABEC9BE) + 761226463) ^ v99;
  int v108 = v107 ^ 0x1D6C2300;
  unsigned int v109 = v107 ^ 0x1D6C2300 ^ v60 ^ 0xBF6E75E0;
  int v110 = *(_DWORD *)&v84[4 * (HIBYTE(v109) ^ 0x2F)];
  int v420 = BYTE2(v109);
  int v111 = *(_DWORD *)&v82[4 * (BYTE2(v109) ^ 0x53)];
  unsigned int v430 = HIBYTE(v109) ^ 0x32;
  int v541 = BYTE1(v109);
  unsigned int v112 = ((v111 ^ v110 ^ 0xE2559419) - 2 * ((v111 ^ v110 ^ 0xE2559419) & 0x7B81D5AB ^ (v111 ^ v110) & 2) + 2072106409) ^ *(_DWORD *)(v86 + 4LL * (BYTE1(v109) ^ 0xF3u));
  *(_DWORD *)(v57 - 184) = v69 ^ v104;
  int v535 = (((_BYTE)v69 - ((2 * (_BYTE)v69) & 0xBE) - 33) ^ v99 ^ v540 ^ v60 ^ 0xE0);
  unsigned int v113 = v69 ^ v104 ^ *(_DWORD *)(v80 + 4LL * (v535 ^ 0xC0u)) ^ (v112
                                                                             - ((2 * v112) & 0xEC0ABDE2)
                                                                             - 167420175);
  int v507 = v113 ^ v405 ^ 0x7C166C11;
  unsigned int v486 = v113;
  LODWORD(v69) = v507 ^ 0xCD80F247;
  LODWORD(v60) = v69 ^ v60 ^ 0xBF6E75E0;
  unsigned int v499 = v60 >> 24;
  int v494 = v60;
  unsigned int v114 = *(_DWORD *)&v84[4 * ((v60 >> 24) ^ 0x7E)] ^ *(_DWORD *)(v80 + 4LL
                                                                                   * (v60 ^ 0x18u)) ^ 0x89400D9B;
  int v484 = BYTE1(v60);
  unsigned int v115 = (v114 - ((2 * v114) & 0xF703AB52) + 2072106409) ^ *(_DWORD *)(v86 + 4LL * (BYTE1(v60) ^ 0x3Bu));
  int v480 = BYTE2(v60);
  unsigned int v471 = v60;
  int v116 = (v115 - ((2 * v115) & 0x3A218EE6) - 1659844749) ^ *(_DWORD *)&v82[4 * (BYTE2(v60) ^ 0xBA)];
  unsigned int v117 = (v116 - ((2 * v116) & 0xC6793248) - 482567900) ^ v113;
  *(_DWORD *)(v57 - 132) = v507 ^ 0xCD80F247 ^ v108;
  *(_DWORD *)(v57 - 128) = v117;
  unsigned int v446 = v117 ^ 0x20FB16AB ^ v69;
  unsigned int v118 = v117 ^ 0x20FB16AB ^ v108;
  LODWORD(v69) = v60 ^ 0xD2B5E7FB;
  unsigned int v119 = v118 ^ 0xE22DE471 ^ v60 ^ 0xD2B5E7FB;
  int v538 = BYTE1(v119);
  int v525 = v118 ^ 0x71 ^ v60 ^ 0xFB;
  unsigned int v120 = *(_DWORD *)(v86 + 4LL * (BYTE1(v119) ^ 0x9Bu)) ^ *(_DWORD *)(v80 + 4LL * (v525 ^ 0xFDu)) ^ 0x8D848B58;
  LODWORD(v60) = BYTE2(v119);
  int v121 = (v120 - ((2 * v120) & 0x3A218EE6) - 1659844749) ^ *(_DWORD *)&v82[4 * (BYTE2(v119) ^ 0xCB)];
  unsigned int v122 = HIBYTE(v119);
  __int16 v438 = v117 ^ 0x38E;
  unsigned int v123 = (v121 - ((2 * v121) & 0xFE8AA6D4) + 2135249770) ^ *(_DWORD *)&v84[4 * (HIBYTE(v119) ^ 0x34)] ^ v117 ^ 0x1EBF038E;
  unsigned int v124 = v446 ^ v123 ^ 0xAE311DE0;
  unsigned int v125 = v124 ^ v69;
  LODWORD(v69) = (v124 ^ v69) >> 24;
  int v529 = BYTE1(v125);
  int v126 = *(_DWORD *)&v84[4 * (v69 ^ 0x4F)] ^ *(_DWORD *)(v86 + 4LL * (BYTE1(v125) ^ 0xFFu)) ^ 0x4C486C3;
  int v513 = v125;
  unsigned int v127 = (v126 - ((2 * v126) & 0xEC0ABDE2) - 167420175) ^ *(_DWORD *)(v80 + 4LL * (v125 ^ 0xAu));
  unsigned int v128 = v123 ^ *(_DWORD *)&v82[4 * (BYTE2(v125) ^ 0x1F)] ^ (v127 - ((2 * v127) & 0x3A218EE6) - 1659844749);
  unsigned int v129 = v124 ^ v118 ^ 0xE22DE471;
  unsigned int v401 = v128 ^ 0xC0B382F0 ^ v124;
  unsigned int v130 = v128 ^ 0xC0B382F0 ^ v118 ^ 0xE22DE471;
  *(_DWORD *)(v57 - 192) = v130;
  int v423 = ((unsigned __int16)(v130 ^ v125) >> 8);
  LODWORD(v84) = *(_DWORD *)&v84[4 * (((v130 ^ v125) >> 24) ^ 0x95)] ^ *(_DWORD *)(v86 + 4LL * (v423 ^ 0x79u));
  unsigned int v414 = (v130 ^ v125) >> 24;
  int v418 = (v130 ^ v125);
  LODWORD(v80) = ((v84 ^ 0x4C486C3)
  int v398 = ((v130 ^ v125) >> 16);
  LODWORD(v80) = (v80 - ((2 * v80) & 0x3A218EE6) - 1659844749) ^ *(_DWORD *)&v82[4 * (v398 ^ 0xE)];
  HIDWORD(v522) = v128 ^ 0x20918594 ^ (v80 - ((2 * v80) & 0x40CD507A) - 1603884995);
  LODWORD(v522) = (HIDWORD(v522) - ((2 * HIDWORD(v522)) & 0x73C96ECC) - 1176193178) ^ v401;
  HIDWORD(v521) = v130 ^ 0x9C732449 ^ v522;
  LODWORD(v521) = (HIDWORD(v521) - ((2 * HIDWORD(v521)) & 0x12F20ED0) + 158926696) ^ v130 ^ v125;
  uint64_t v131 = (uint64_t)*(&off_1003E8E60 + (v58 ^ 0x19F));
  LODWORD(v80) = (((v123 ^ 0x1B9155BD) >> 16)
                + 1686949318
                + ((2
                  * ((((v123 ^ 0x1B9155BD) >> 16) + 44) & 0x19B ^ (((v123 ^ 0x1B9155BD) >> 16) | 0xFFFFFFFD))) ^ 0x98C0405)) ^ *(_DWORD *)(v131 + 4LL * (((v123 ^ 0x1B9155BD) >> 16) ^ 0x2Du));
  unsigned int v132 = ((BYTE2(v125) ^ 0x3E) + 1686949318 + ((2 * (BYTE2(v125) ^ 0x3E) + 88) & 0x33333333 ^ 0xF673FBFF)) ^ *(_DWORD *)(v131 + 4LL * (BYTE2(v125) ^ 0x13u));
  uint64_t v133 = (uint64_t)*(&off_1003E8E60 + v58 - 164);
  int v134 = (v80 - ((2 * v80) & 0xA0511714) + 1344834442) ^ *(_DWORD *)(v133 + 4LL * (BYTE1(v123) ^ 0x47u));
  int v515 = v58;
  v135 = (char *)*(&off_1003E8E60 + (v58 ^ 0x191)) - 4;
  LODWORD(v69) = (v132 - ((2 * v132) & 0x9099DC9E) + 1213001295) ^ *(_DWORD *)&v135[4 * (v69 ^ 0x86)];
  unsigned __int8 v506 = BYTE1(v129);
  uint64_t v136 = (uint64_t)*(&off_1003E8E60 + v58 - 310);
  LODWORD(v80) = *(_DWORD *)(v136 + 4LL * (v129 ^ 0xFEu));
  LODWORD(v80) = *(_DWORD *)(v131 + 4LL * (BYTE2(v129) ^ 0x9Eu)) ^ *(_DWORD *)&v135[4 * (HIBYTE(v129) ^ 0x3B)] ^ ((BYTE2(v129) ^ 0xB3) + 1686949318 + ((2 * (((BYTE2(v129) ^ 0xB3) + 44) & 0x19B ^ (BYTE2(v129) ^ 0x72 | 0xFFFFFFFD))) ^ 0x98C0405)) ^ (181304767 * v80 - ((362609534 * v80 - 274950176) & 0x9099DC9E) - 1071957441);
  int v137 = *(_DWORD *)(v136 + 4LL * ((v446 ^ v123) ^ 0x16u));
  unsigned int v509 = v446 ^ v123;
  unsigned int v138 = (181304767 * v137 - ((362609534 * v137 - 274950176) & 0xA0511714) - 940124294) ^ *(_DWORD *)(v133 + 4LL * (((unsigned __int16)(v446 ^ v123) >> 8) ^ 0xBDu));
  unsigned int v512 = v138 - ((2 * v138) & 0x9099DC9E);
  unsigned int v489 = ((v446 ^ v123) >> 16) ^ 0xA5;
  unsigned int v533 = (BYTE2(v509) ^ 0x88) + 1686949318 + ((2 * (BYTE2(v509) ^ 0x88) + 88) & 0x33333333 ^ 0xF673FBFF);
  unsigned int v500 = (_DWORD)v69 - ((2 * (_DWORD)v69) & 0xA0511714);
  int v496 = v80 - ((2 * v80) & 0xA0511714);
  unsigned int v528 = (v134 - ((2 * v134) & 0x9099DC9E) + 1213001295) ^ *(_DWORD *)&v135[4 * ((v123 ^ 0x1B9155BD) >> 24)] ^ (181304767 * *(_DWORD *)(v136 + 4LL * (v123 ^ 0x7Du)) + 2010008560);
  int v462 = v92 ^ *(_DWORD *)(v57 - 200);
  unsigned int v139 = *(_DWORD *)(v131 + 4LL * (((v462 ^ 0xB10374AE) >> 16) ^ 0xF5u)) ^ ((((v462 ^ 0xB10374AE) >> 16) ^ 0xD8)
                                                                                           + 1686949318
                                                                                           + ((2
  int v140 = *(_DWORD *)(v57 - 152);
  LODWORD(v80) = ((v140 ^ 0xD05B35D4) >> 16);
  int v141 = *(_DWORD *)(v131 + 4LL * (v80 ^ 0x7B));
  *(_DWORD *)(v57 - 200) = 160171826;
  *(_DWORD *)(v57 - 208) = 1686949317;
  int v142 = v141 ^ ((v80 ^ 0x56) + 1686949317 - ((2 * (v80 ^ 0x56) + 160207960) & 0x98C0732));
  unsigned int v143 = (v142 - ((2 * v142) & 0x9099DC9E) + 1213001295) ^ *(_DWORD *)&v135[4 * ((v140 ^ 0xD05B35D4) >> 24)];
  unsigned int v144 = *(_DWORD *)(v131 + 4LL * (v468 ^ 0x6Bu)) ^ ((v468 ^ 0x46)
                                                   + 1686949318
                                                   + ((2 * (v468 ^ 0x46) + 88) & 0x33333333 ^ 0xF673FBFF));
  unsigned int v145 = (v144 - ((2 * v144) & 0xA0511714) + 1344834442) ^ *(_DWORD *)(v133 + 4LL * (v478 ^ 0xEFu));
  unsigned int v469 = v465 ^ 0xE7;
  unsigned int v466 = v143 - ((2 * v143) & 0xA0511714);
  unsigned int v479 = v145 - ((2 * v145) & 0x9099DC9E);
  int v146 = *(_DWORD *)(v136 + 4LL * (v92 ^ 0xDFu));
  unsigned int v147 = *(_DWORD *)&v135[4 * ((v92 ^ 0x5A18571F) >> 24)] ^ ((((v92 ^ 0x5A18571F) >> 16) ^ 0xC1)
                                                           + 1686949318
  unsigned int v461 = v147 - ((2 * v147) & 0xA0511714);
  unsigned int v148 = *(_DWORD *)&v135[4 * ((v462 ^ 0xB10374AE) >> 24)] ^ (v139 - ((2 * v139) & 0x9099DC9E) + 1213001295);
  int v451 = v148 + 1344834443 + (~(2 * v148) | 0x5FAEE8EB);
  LODWORD(v60) = *(_DWORD *)(v131 + 4LL * (v60 ^ 0x9C)) ^ ((v60 ^ 0xB1)
                                                                       + 1686949318
                                                                       + ((2 * (v60 ^ 0xB1) + 88) & 0x33333333 ^ 0xF673FBFF));
  unsigned int v149 = *(_DWORD *)(v131 + 4LL * (BYTE2(v446) ^ 0xFEu)) ^ ((BYTE2(v446) ^ 0xD3)
                                                          + 1686949318
                                                          + ((2
                                                            * (((BYTE2(v446) ^ 0xD3) + 44) & 0x19B ^ (BYTE2(v446) ^ 0xD3 | 0xFFFFFFFD))) ^ 0x98C0405));
  int v150 = *(_DWORD *)(v136 + 4LL * (v118 ^ 0x9Bu));
  LODWORD(v60) = ((_DWORD)v60 - ((2 * (_DWORD)v60) & 0x9099DC9E) + 1213001295) ^ *(_DWORD *)&v135[4 * (v122 ^ 0x1F)];
  int v151 = BYTE2(*(_DWORD *)(v57 - 128));
  unsigned int v152 = *(_DWORD *)(v131 + 4LL * (v151 ^ 0x93u)) ^ ((v151 ^ 0xBE)
                                                   + 1686949318
                                                   + ((2 * (v151 ^ 0xBE) + 88) & 0x33333333 ^ 0xF673FBFF));
  LODWORD(v69) = (v152 - ((2 * v152) & 0xA0511714) + 1344834442) ^ *(_DWORD *)(v133 + 4LL * (HIBYTE(v438) ^ 0x8Bu));
  unsigned int v453 = v118;
  unsigned int v454 = (_DWORD)v60 - ((2 * (_DWORD)v60) & 0xA0511714);
  unsigned int v457 = (_DWORD)v69 - ((2 * (_DWORD)v69) & 0x9099DC9E);
  unsigned int v153 = *(_DWORD *)(v133 + 4LL * (BYTE1(v118) ^ 0x33u)) ^ ((BYTE2(v118) ^ 0xA4)
                                                          + 1686949318
                                                          + ((2
                                                            * (((BYTE2(v118) ^ 0xA4) + 44) & 0x19B ^ (HIWORD(v118) | 0xFFFFFFFD))) ^ 0x98C0405)) ^ *(_DWORD *)(v131 + 4LL * (BYTE2(v118) ^ 0x89u)) ^ (181304767 * v150 - ((362609534 * v150 - 274950176) & 0xA0511714) - 940124294);
  unsigned int v154 = (v149 - ((2 * v149) & 0x9099DC9E) + 1213001295) ^ *(_DWORD *)&v135[4 * (HIBYTE(v446) ^ 0xC6)] ^ (181304767 * *(_DWORD *)(v136 + 4LL * (v446 ^ 0x5Fu)) + 2010008560);
  unsigned int v433 = ((unsigned __int16)(v446 ^ 0x69C6) >> 8) ^ 0x14;
  unsigned int v403 = v438 ^ 0xA3;
  unsigned int v439 = v154 - ((2 * v154) & 0xA0511714);
  unsigned int v447 = v153 - ((2 * v153) & 0x9099DC9E);
  int v155 = *(_DWORD *)(v57 - 168);
  unsigned int v412 = BYTE1(v155) ^ 0xA8;
  unsigned int v429 = v407 ^ 0x2BEAE26B;
  unsigned int v156 = *(_DWORD *)(v131 + 4LL * (((v407 ^ 0x2BEAE26B) >> 16) ^ 0xECu)) ^ ((((v407 ^ 0x2BEAE26B) >> 16) ^ 0xC1)
                                                                                           + 1686949318
                                                                                           + ((2
  unsigned int v157 = (v156 - ((2 * v156) & 0xA0511714) + 1344834442) ^ *(_DWORD *)(v133 + 4LL * (BYTE1(v407) ^ 8u));
  unsigned int v158 = *(_DWORD *)(v131 + 4LL * (v444 ^ 0xD7u)) ^ ((v444 ^ 0xFA)
                                                   + 1686949318
                                                   + ((2 * (((v444 ^ 0xFA) + 44) & 0x19B ^ (v444 ^ 0xFA | 0xFFFFFFFD))) ^ 0x98C0405));
  LODWORD(v60) = *(_DWORD *)(v136 + 4LL * (v409 ^ 0x55u));
  unsigned int v410 = v157 - ((2 * v157) & 0x9099DC9E);
  int v399 = BYTE2(v155) ^ 0x8B;
  unsigned int v445 = (BYTE2(v155) ^ 0xDB)
       + 1686949318
       + ((2 * (((BYTE2(v155) ^ 0xDB) + 44) & 0x19B ^ (v399 | 0xFFFFFFFD))) ^ 0x98C0405);
  unsigned int v408 = v435 ^ 0x4B;
  unsigned int v159 = (v158 - ((2 * v158) & 0xA0511714) + 1344834442) ^ *(_DWORD *)(v133 + 4LL * (v449 ^ 0xBDu)) ^ (181304767 * *(_DWORD *)(v136 + 4LL * (v441 ^ 0xF3u)) + 2010008560);
  unsigned int v436 = v159 - ((2 * v159) & 0x9099DC9E);
  LODWORD(v80) = *(_DWORD *)(v57 - 160);
  unsigned int v160 = (181304767 * (_DWORD)v60 - ((362609534 * (_DWORD)v60 - 274950176) & 0x9099DC9E) - 1071957441) ^ ((BYTE2(v80) ^ 0xBA) + 1686949318 + ((2 * (BYTE2(v80) ^ 0xBA) + 88) & 0x33333333 ^ 0xF673FBFF)) ^ *(_DWORD *)&v135[4 * (BYTE3(v80) ^ 0x2F)] ^ *(_DWORD *)(v131 + 4LL * (BYTE2(v80) ^ 0x97u));
  LODWORD(v402) = v160 - ((2 * v160) & 0xA0511714);
  LODWORD(v80) = *(_DWORD *)(v57 - 176);
  int v161 = *(_DWORD *)(v57 - 200);
  int v162 = *(_DWORD *)(v57 - 208);
  int v163 = *(_DWORD *)(v131 + 4LL * (BYTE2(v80) ^ 0x71u)) ^ ((BYTE2(v80) ^ 0x5C)
                                                         + v162
                                                         - ((2 * (BYTE2(v80) ^ 0x5C) + 160207960) & v161));
  LODWORD(v60) = *(_DWORD *)(v131 + 4LL * (BYTE2(*(_DWORD *)(v57 - 184)) ^ 0x56u)) ^ ((BYTE2(*(_DWORD *)(v57 - 184)) ^ 0x7B)
                                                                                    + 1686949318
                                                                                    + ((2
  int v164 = (v163 + 1344834443 + (~(2 * v163) | 0x5FAEE8EB)) ^ *(_DWORD *)(v133 + 4LL * (BYTE1(v80) ^ 0xC3u)) ^ (181304767 * *(_DWORD *)(v136 + 4LL * (v80 ^ 0x46u)) + 2010008560);
  LODWORD(v69) = 181304767 * *(_DWORD *)(v136 + 4LL * (v405 ^ 0xFBu));
  LODWORD(v69) = ((_DWORD)v69 - 2 * (((_DWORD)v69 + 2010008560) & 0x50288B8B ^ v69 & 1) - 940124294) ^ *(_DWORD *)(v133 + 4LL * (BYTE1(v405) ^ 0xEFu));
  LODWORD(v397) = v164 - ((2 * v164) & 0x9099DC9E);
  HIDWORD(v396) = (_DWORD)v69 - ((2 * (_DWORD)v69) & 0x9099DC9E);
  unsigned int v165 = ((_DWORD)v60 - ((2 * (_DWORD)v60) & 0x9099DC9E) + 1213001295) ^ *(_DWORD *)&v135[4
                                                                                        * (HIBYTE(*(_DWORD *)(v57 - 184)) ^ 0xD9)] ^ (181304767 * *(_DWORD *)(v136 + 4LL * (*(_DWORD *)(v57 - 184) ^ 0x79u)) + 2010008560);
  LODWORD(v60) = *(_DWORD *)(v131 + 4LL * (v420 ^ 0x5Cu)) ^ ((v420 ^ 0x71)
                                                           + v162
                                                           - ((2 * (v420 ^ 0x71) + 160207960) & v161));
  LODWORD(v60) = ((_DWORD)v60 - ((2 * (_DWORD)v60) & 0x9099DC9E) + 1213001295) ^ *(_DWORD *)&v135[4 * v430];
  unsigned int v421 = (_DWORD)v60 - ((2 * (_DWORD)v60) & 0xA0511714);
  int v450 = v165 + 1344834443 + (~(2 * v165) | 0x5FAEE8EB);
  LODWORD(v396) = ((v405 ^ 0x7C166C11) >> 16);
  int v442 = (v396 ^ 0x65) + 1686949318 + ((2 * (v396 ^ 0x65) + 88) & 0x33333333 ^ 0xF673FBFF);
  unsigned int v166 = *(_DWORD *)(v131 + 4LL * (v398 ^ 0x4Eu)) ^ ((v398 ^ 0x63)
                                                   + 1686949318
                                                   + ((2 * (((v398 ^ 0x63) + 44) & 0x19B ^ (v398 ^ 0x63 | 0xFFFFFFFD))) ^ 0x98C0405));
  unsigned int v167 = *(_DWORD *)(v57 - 192);
  HIDWORD(v397) = BYTE1(v167) ^ 0xDB;
  unsigned int v431 = (BYTE2(v167) ^ 0xFD) + 1686949318 + ((2 * (BYTE2(v167) ^ 0xFD) + 88) & 0x33333333 ^ 0xF673FBFF);
  unsigned int v426 = HIBYTE(v405) ^ 0xE8;
  unsigned int v168 = *(_DWORD *)(v131 + 4LL * (BYTE2(v128) ^ 0xE8u)) ^ ((BYTE2(v128) ^ 0xC5)
                                                          + 1686949318
                                                          + ((2
                                                            * (((BYTE2(v128) ^ 0xC5) + 44) & 0x19B ^ (HIWORD(v128) | 0xFFFFFFFD))) ^ 0x98C0405));
  unsigned int v169 = (181304767 * *(_DWORD *)(v136 + 4LL * (v128 ^ 0xCAu)) + 2010008560) ^ *(_DWORD *)&v135[4 * (HIBYTE(v128) ^ 0x8E)] ^ (v168 - ((2 * v168) & 0x9099DC9E) + 1213001295);
  unsigned int v406 = v401 ^ 0xD945E2D8;
  unsigned int v170 = (181304767 * *(_DWORD *)(v136 + 4LL * (v401 ^ 0xA9u)) + 2010008560) ^ (((v401 ^ 0xD945E2D8) >> 16)
                                                                                               + 1686949318
                                                                                               + ((2
  unsigned int v394 = BYTE1(v128) ^ 0x16;
  HIDWORD(v402) = v169 - ((2 * v169) & 0xA0511714);
  unsigned int v171 = (v170 - ((2 * v170) & 0xA0511714) + 1344834442) ^ *(_DWORD *)(v133 + 4LL * (BYTE1(v401) ^ 0xB8u));
  unsigned int v172 = *(_DWORD *)&v135[4 * (v414 ^ 0xF0)] ^ (181304767 * *(_DWORD *)(v136 + 4LL * (v418 ^ 0xEu)) + 2010008560) ^ (v166 - ((2 * v166) & 0x9099DC9E) + 1213001295);
  unsigned int v419 = v171 - ((2 * v171) & 0x9099DC9E);
  unsigned int v415 = v423 ^ 0x83;
  unsigned int v424 = v172 - ((2 * v172) & 0xA0511714);
  int v173 = *(_DWORD *)(v136 + 4LL * (v474 ^ 0xECu));
  unsigned int v174 = *(_DWORD *)(v131 + 4LL * (v491 ^ 0x8Du)) ^ ((v491 ^ 0xA0)
                                                   + 1686949318
                                                   + ((2 * (v491 ^ 0xA0) + 88) & 0x33333333 ^ 0xF673FBFF));
  int v175 = *(_DWORD *)(v136 + 4LL * (*(_DWORD *)(v57 - 140) ^ 0xE6u));
  unsigned int v176 = *(_DWORD *)&v135[4 * (HIBYTE(v474) ^ 0xCA)] ^ *(_DWORD *)(v131 + 4LL * (BYTE2(v474) ^ 2u)) ^ ((BYTE2(v474) ^ 0x2F) + 1686949318 + ((2 * (((BYTE2(v474) ^ 0x2F) + 44) & 0x19B ^ (BYTE2(v474) ^ 0x2F | 0xFFFFFFFD))) ^ 0x98C0405)) ^ (181304767 * v173 - ((362609534 * v173 - 274950176) & 0x9099DC9E) - 1071957441);
  unsigned int v177 = (v174 - ((2 * v174) & 0xA0511714) + 1344834442) ^ *(_DWORD *)(v133 + 4LL * (BYTE1(v526) ^ 0x7Fu)) ^ (181304767 * *(_DWORD *)(v136 + 4LL * (v526 ^ 0xCu)) + 2010008560);
  unsigned int v178 = *(_DWORD *)(v57 - 140) ^ 0x49A657C7;
  unsigned int v179 = *(_DWORD *)&v135[4 * HIBYTE(v178)] ^ ((BYTE2(v178) ^ 0x35)
                                             + 1686949318
                                             + ((2 * (BYTE2(v178) ^ 0x35) + 88) & 0x33333333 ^ 0xF673FBFF)) ^ *(_DWORD *)(v131 + 4LL * (BYTE2(v178) ^ 0x18u)) ^ (181304767 * v175 - ((362609534 * v175 - 274950176) & 0x9099DC9E) - 1071957441);
  LODWORD(v82) = *(_DWORD *)(v57 - 136);
  LODWORD(v60) = *(_DWORD *)(v131 + 4LL * (((v82 ^ 0xD38CB8E3) >> 16) ^ 0x2Du)) ^ (((v82 ^ 0xD38CB8E3) >> 16) + v162 - ((2 * ((v82 ^ 0xD38CB8E3) >> 16) + 160207960) & v161));
  unsigned int v527 = (v176 - ((2 * v176) & 0xA0511714) + 1344834442) ^ *(_DWORD *)(v133 + 4LL * (BYTE1(v474) ^ 0x2Eu));
  unsigned int v503 = v177 - ((2 * v177) & 0x9099DC9E);
  unsigned int v180 = ((_DWORD)v60 - ((2 * (_DWORD)v60) & 0x9099DC9E) + 1213001295) ^ *(_DWORD *)&v135[4
                                                                                        * ((v82 ^ 0xD38CB8E3) >> 24)] ^ (181304767 * *(_DWORD *)(v136 + 4LL * (v82 ^ 0x73u)) + 2010008560);
  unsigned int v475 = v179 - ((2 * v179) & 0xA0511714);
  HIDWORD(v400) = v180 - ((2 * v180) & 0xA0511714);
  int v181 = *(_DWORD *)(v131 + 4LL * (v480 ^ 0x71u)) ^ ((v480 ^ 0x5C) + v162 - ((2 * (v480 ^ 0x5C) + 160207960) & v161));
  unsigned int v182 = (v181 - ((2 * v181) & 0xA0511714) + 1344834442) ^ *(_DWORD *)(v133
                                                                     + 4LL
                                                                     * (((v484 ^ 1)
                                                                       + ((v471 >> 7) & 0x166 ^ 0xFFFFFFFD)
                                                                       + 180) ^ 0x54)) ^ (181304767
                                                                                        * *(_DWORD *)(v136 + 4LL * (v494 ^ 0xCBu))
                                                                                        + 2010008560);
  unsigned int v472 = BYTE1(v486) ^ 0x77;
  int v183 = *(_DWORD *)(v136 + 4LL * (*(_DWORD *)(v57 - 132) ^ 0x3Cu));
  unsigned int v184 = (181304767 * v183 - ((362609534 * v183 - 274950176) & 0x9099DC9E) - 1071957441) ^ *(_DWORD *)&v135[4 * (HIBYTE(*(_DWORD *)(v57 - 132)) ^ 0x84)];
  unsigned int v485 = v182 - ((2 * v182) & 0x9099DC9E);
  HIDWORD(v393) = v184 - ((2 * v184) & 0xA0511714);
  unsigned int v481 = v507 ^ 0xEEA2BFA8;
  unsigned int v185 = *(_DWORD *)(v131 + 4LL * (((v507 ^ 0xEEA2BFA8) >> 16) ^ 0x86u)) ^ ((((v507 ^ 0xEEA2BFA8) >> 16) ^ 0xAB)
                                                                                           + 1686949318
                                                                                           + ((2
  unsigned int v186 = (181304767 * *(_DWORD *)(v136 + 4LL * (v507 ^ 0x68u)) + 2010008560) ^ *(_DWORD *)(v133 + 4LL * (BYTE1(v507) ^ 0x55u)) ^ (v185 - ((2 * v185) & 0xA0511714) + 1344834442);
  unsigned int v508 = v486 ^ 0x231B9DB5;
  int v187 = ((v486 ^ 0x231B9DB5) >> 16);
  unsigned int v495 = (v187 ^ 0xC1) + 1686949318 + ((2 * (v187 ^ 0xC1) + 88) & 0x33333333 ^ 0xF673FBFF);
  LODWORD(v393) = v186 - ((2 * v186) & 0x9099DC9E);
  int v389 = BYTE2(*(_DWORD *)(v57 - 132));
  unsigned int v492 = (v389 ^ 0x2E) + 1686949318 + ((2 * (v389 ^ 0x2E) + 88) & 0x33333333 ^ 0xF673FBFF);
  unsigned int v387 = v187 ^ 0xEC;
  int v188 = *(_DWORD *)(v136 + 4LL * (v517 ^ 0xFAu));
  int v189 = *(_DWORD *)(v136 + 4LL * (*(_DWORD *)(v57 - 248) ^ 0xFBu));
  int v190 = *(_DWORD *)(v136 + 4LL * (v140 ^ 0x14u));
  int v191 = *(_DWORD *)(v136 + 4LL * (v462 ^ 0x6Eu));
  int v192 = *(_DWORD *)(v136 + 4LL * v403);
  int v193 = *(_DWORD *)(v136 + 4LL * (v525 ^ 0xA7u));
  unsigned int v194 = *(_DWORD *)(v57 - 168);
  int v195 = *(_DWORD *)(v136 + 4LL * (v194 ^ 0x90u));
  LODWORD(v82) = *(_DWORD *)(v136 + 4LL * (v535 ^ 0x66u));
  unsigned int v196 = v167;
  int v197 = *(_DWORD *)(v136 + 4LL * (v167 ^ 0xA7u));
  int v198 = *(_DWORD *)(v136 + 4LL * (v486 ^ 0x75u));
  LODWORD(v80) = *(_DWORD *)(v136 + 4LL * (v540 ^ 0x74u));
  int v199 = *(_DWORD *)(v136 + 4LL * (v543 ^ 0x2Au));
  LODWORD(v60) = *(_DWORD *)(v136 + 4LL * (v531 ^ 0x2Du));
  *(_DWORD *)(v57 - 248) = 181304767 * *(_DWORD *)(v136 + 4LL * (v513 ^ 0x4Fu)) + 2010008560;
  LODWORD(v404) = 181304767 * v191 + 2010008560;
  HIDWORD(v404) = 181304767 * v189 + 2010008560;
  LODWORD(v391) = 181304767 * v192 + 2010008560;
  HIDWORD(v390) = 181304767 * v193 + 2010008560;
  int v536 = 181304767 * v195 + 2010008560;
  LODWORD(v392) = 181304767 * (_DWORD)v82 + 2010008560;
  HIDWORD(v392) = 181304767 * v190 + 2010008560;
  LODWORD(v390) = 181304767 * v197 + 2010008560;
  int v487 = 181304767 * v198 + 2010008560;
  HIDWORD(v391) = 181304767 * (_DWORD)v60 + 2010008560;
  unsigned int v200 = (181304767 * v188 - ((362609534 * v188 - 274950176) & 0x9099DC9E) - 1071957441) ^ *(_DWORD *)&v135[4 * (v519 ^ 0xEC)];
  LODWORD(v80) = *(_DWORD *)(v131 + 4LL * (BYTE2(v540) ^ 0x2Fu)) ^ ((BYTE2(v540) ^ 2)
                                                                  + *(_DWORD *)(v57 - 208)
                                                                  - ((2 * (BYTE2(v540) ^ 2) + 160207960) & *(_DWORD *)(v57 - 200))) ^ (181304767 * v80 + 2010008560);
  LODWORD(v80) = (v80 - ((2 * v80) & 0xA0511714) + 1344834442) ^ *(_DWORD *)(v133 + 4LL * (BYTE1(v540) ^ 0x90u));
  LODWORD(v82) = *(_DWORD *)(v131 + 4LL * (BYTE2(v531) ^ 0x9Eu)) ^ ((BYTE2(v531) ^ 0xB3)
                                                                  + 1686949318
                                                                  + ((2 * (BYTE2(v531) ^ 0xB3) + 88) & 0x33333333 ^ 0xF673FBFF));
  unsigned int v201 = (181304767 * v199 + 2010008560) ^ ((BYTE2(v543) ^ 0x37)
                                          + 1686949318
                                          + ((2 * (BYTE2(v543) ^ 0x37) + 88) & 0x33333333 ^ 0xF673FBFF)) ^ *(_DWORD *)(v131 + 4LL * (BYTE2(v543) ^ 0x1Au));
  unsigned int v202 = v200 - ((2 * v200) & 0xA0511714);
  *(_DWORD *)(v57 - 200) = *(_DWORD *)(v131 + 4LL * v489);
  LODWORD(v400) = *(_DWORD *)(v131 + 4LL * (v399 ^ 0x7Du));
  LODWORD(v396) = *(_DWORD *)(v131 + 4LL * (v396 ^ 0x48));
  LODWORD(v388) = *(_DWORD *)(v131 + 4LL * (BYTE2(v167) ^ 0xD0u));
  BYTE1(v60) = BYTE1(v543);
  unsigned int v203 = (v201 - ((2 * v201) & 0x9099DC9E) + 1213001295) ^ *(_DWORD *)&v135[4 * (HIBYTE(v543) ^ 0xF9)];
  int v490 = *(_DWORD *)(v131 + 4LL * v387);
  int v204 = *(_DWORD *)(v57 - 240);
  HIDWORD(v395) = *(_DWORD *)(v131 + 4LL * (v389 ^ 3u));
  *(_DWORD *)(v57 - 240) = *(_DWORD *)(v131 + 4LL * (v204 ^ 0x44u));
  int v205 = ((*(_DWORD *)(v57 - 256) >> 15) & 0x58 ^ 0x50) + (v204 ^ 0x4C64A45);
  *(_DWORD *)(v57 - 208) = *(_DWORD *)(v133 + 4LL * (v529 ^ 0x20u));
  int v504 = *(_DWORD *)(v133 + 4LL * (v506 ^ 0x5Bu));
  *(_DWORD *)(v57 - 256) = *(_DWORD *)(v133 + 4LL * (BYTE1(*(_DWORD *)(v57 - 152)) ^ 0xDFu));
  int v530 = *(_DWORD *)(v133 + 4LL * (BYTE1(v92) ^ 0xBDu));
  int v459 = v205 + 1606845338 + ((2 * (v205 & 0x19D ^ (v204 ^ 0x4C64A45 | 0x7FFFFFFB))) ^ 0x98C0409);
  HIDWORD(v388) = *(_DWORD *)(v133 + 4LL * (BYTE1(v462) ^ 0x9Eu));
  int v206 = v80 - ((2 * v80) & 0x9099DC9E);
  int v463 = *(_DWORD *)(v133 + 4LL * (v538 ^ 0xBBu));
  HIDWORD(v386) = *(_DWORD *)(v133 + 4LL * v433);
  int v544 = *(_DWORD *)(v133 + 4LL * v412);
  int v539 = *(_DWORD *)(v133 + 4LL * (BYTE1(*(_DWORD *)(v57 - 160)) ^ 0xD6u));
  int v542 = *(_DWORD *)(v133 + 4LL * (v541 ^ 0x27u));
  int v413 = *(_DWORD *)(v133 + 4LL * (BYTE1(*(_DWORD *)(v57 - 184)) ^ 0xD7u));
  LODWORD(v385) = *(_DWORD *)(v133 + 4LL * HIDWORD(v397));
  int v207 = *(_DWORD *)(v133 + 4LL * v394);
  LODWORD(v384) = *(_DWORD *)(v133 + 4LL * v415);
  *(_DWORD *)(v57 - 184) = *(_DWORD *)(v133 + 4LL * (BYTE1(*(_DWORD *)(v57 - 140)) ^ 0xB9u));
  int v434 = *(_DWORD *)(v133 + 4LL * (BYTE1(*(_DWORD *)(v57 - 136)) ^ 0x38u));
  int v473 = *(_DWORD *)(v133 + 4LL * v472);
  HIDWORD(v384) = *(_DWORD *)(v133 + 4LL * (BYTE1(*(_DWORD *)(v57 - 132)) ^ 0x85u));
  *(_DWORD *)(v57 - 232) = *(_DWORD *)(v133 + 4LL * (*(_DWORD *)(v57 - 232) ^ 0x98u));
  HIDWORD(v397) = *(_DWORD *)(v133 + 4LL * (BYTE1(v60) ^ 0x2Eu));
  int v208 = *(_DWORD *)(v133 + 4LL * (BYTE1(v531) ^ 0xC8u));
  *(_DWORD *)(v57 - 152) = *(_DWORD *)&v135[4 * (HIBYTE(v509) ^ 0x41)];
  *(_DWORD *)(v57 - 160) = v500 + 1344834442;
  int v501 = v496 + 1344834442;
  int v416 = *(_DWORD *)&v135[4 * v469];
  LODWORD(v395) = v466 + 1344834442;
  LODWORD(v386) = v461 + 1344834442;
  int v497 = *(_DWORD *)&v135[4 * (HIBYTE(*(_DWORD *)(v57 - 128)) ^ 0xF2)];
  LODWORD(v383) = v454 + 1344834442;
  HIDWORD(a2) = v439 + 1344834442;
  HIDWORD(v383) = *(_DWORD *)&v135[4 * (HIBYTE(v453) ^ 0xAF)];
  HIDWORD(v385) = *(_DWORD *)&v135[4 * (HIBYTE(v194) ^ 0xBB)];
  int v440 = *(_DWORD *)&v135[4 * HIBYTE(v429)];
  LODWORD(v80) = HIDWORD(v402) + 1344834442;
  unsigned int v510 = v424 + 1344834442;
  unsigned int v455 = v475 + 1344834442;
  unsigned int v467 = v203 - ((2 * v203) & 0xA0511714) + 1344834442;
  int v425 = *(_DWORD *)&v135[4 * v408];
  int v476 = *(_DWORD *)&v135[4 * (HIBYTE(*(_DWORD *)(v57 - 176)) ^ 0x48)];
  int v427 = *(_DWORD *)&v135[4 * v426];
  int v209 = *(_DWORD *)&v135[4 * (HIBYTE(v196) ^ 0x3E)];
  int v210 = *(_DWORD *)&v135[4 * HIBYTE(v406)];
  *(_DWORD *)(v57 - 192) = *(_DWORD *)&v135[4 * (*(_DWORD *)(v57 - 224) ^ 0xAB)];
  unsigned int v211 = v208 ^ ((_DWORD)v82 - ((2 * (_DWORD)v82) & 0xA0511714) + 1344834442);
  *(_DWORD *)(v57 - 176) = *(_DWORD *)&v135[4 * HIBYTE(v508)];
  HIDWORD(v402) = *(_DWORD *)&v135[4 * (v499 ^ 0xDD)];
  int v482 = *(_DWORD *)&v135[4 * HIBYTE(v481)];
  HIDWORD(a20) = *(_DWORD *)&v135[4 * (HIBYTE(v540) ^ 0xBA)];
  LODWORD(a18) = *(_DWORD *)&v135[4 * (HIBYTE(v531) ^ 0x91)];
  *(_DWORD *)(v57 - 168) = v512 + 1213001295;
  unsigned int v532 = v479 + 1213001295;
  unsigned int v212 = v457 + 1213001295;
  *(_DWORD *)(v57 - 224) = v410 + 1213001295;
  unsigned int v458 = v503 + 1213001295;
  int v213 = v206 + 1213001295;
  int v214 = v528 ^ v527 ^ 0x6285F181;
  LODWORD(v84) = v80 ^ v207 ^ v214;
  v215 = (char *)*(&off_1003E8E60 + v515 - 114) - 4;
  v216 = (char *)*(&off_1003E8E60 + v515 - 267) - 8;
  v217 = (char *)*(&off_1003E8E60 + v515 - 253) - 8;
  v218 = (char *)*(&off_1003E8E60 + v515 - 260) - 4;
  v518 = v216;
  v520 = v215;
  v514 = v218;
  v516 = v217;
  unsigned int v220 = (v218[*(unsigned __int8 *)(v57 - 105) ^ 0xE4LL] ^ 0xE9) & 0xFF00FFFF | ((v215[*(unsigned __int8 *)(v57 - 108) ^ 0x3ELL] ^ (*(unsigned __int8 *)(v57 - 108) + (~(2 * *(unsigned __int8 *)(v57 - 108)) | 0x85) + 62) ^ 0xFFFFFFE1) << 24) | (((v217[*(unsigned __int8 *)(v57 - 107) ^ 0x27LL] + 100) ^ 0x96) << 16) | ((v216[*(unsigned __int8 *)(v57 - 106) ^ 9LL] ^ 0x61) << 8);
  unsigned int v221 = (v218[*(unsigned __int8 *)(v57 - 101) ^ 0xF2LL] ^ 0x50) & 0xFF00FFFF | ((v215[*(unsigned __int8 *)(v57 - 104) ^ 0xD3LL] ^ (*(unsigned __int8 *)(v57 - 104) - ((2 * *(unsigned __int8 *)(v57 - 104)) & 0x7A) + 61) ^ 0xE0) << 24) | ((v216[*(unsigned __int8 *)(v57 - 102) ^ 0xBELL] ^ 0xC6) << 8) & 0xFF00FFFF | (((v217[*(unsigned __int8 *)(v57 - 103) ^ 0xE9LL] + 100) ^ 0x8A) << 16);
  unsigned int v222 = v84 ^ 0x2497E332;
  else {
    int v223 = 128;
  }
  *(_DWORD *)(v57 - 132) = ((v218[*(unsigned __int8 *)(v57 - 109) ^ 0x41LL] ^ 0xDF) & 0xFF00FFFF | (((v217[*(unsigned __int8 *)(v57 - 111) ^ 0x40LL] + 100) ^ 0x5A) << 16) | ((v216[*(unsigned __int8 *)(v57 - 110) ^ 0xBBLL] ^ 0x64) << 8) | ((v215[*(unsigned __int8 *)(v57 - 112) ^ 0x1ELL] ^ (*(unsigned __int8 *)(v57 - 112) - ((2 * *(unsigned __int8 *)(v57 - 112)) & 0x7A) + 61) ^ 0x84) << 24)) ^ 0xC408FA8;
  *(_DWORD *)(v57 - 128) = v219 ^ 0xBE12EFD7;
  *(_DWORD *)(v57 - 136) = v220 ^ 0xBCE339CE;
  *(_DWORD *)(v57 - 140) = v221 ^ 0xFF1A8BF6;
  HIDWORD(v511) = v510 ^ v384;
  LODWORD(v511) = v209 ^ v431 ^ v385 ^ v388 ^ v390;
  HIDWORD(v505) = (v419 + 1213001295) ^ v210;
  LODWORD(v505) = v501 ^ v504;
  HIDWORD(v502) = HIDWORD(a2) ^ HIDWORD(v386);
  LODWORD(v502) = v383 ^ v463 ^ HIDWORD(v390);
  HIDWORD(v498) = v212 ^ v497 ^ v391;
  LODWORD(v498) = (v447 + 1213001295) ^ HIDWORD(v383);
  HIDWORD(v493) = v473 ^ *(_DWORD *)(v57 - 176) ^ v495 ^ v490 ^ v487;
  LODWORD(v493) = HIDWORD(v384) ^ v492 ^ HIDWORD(v395) ^ (HIDWORD(v393) + 1344834442);
  HIDWORD(v488) = (v393 + 1213001295) ^ v482;
  LODWORD(v488) = (v485 + 1213001295) ^ HIDWORD(v402);
  HIDWORD(v483) = v450 ^ v413;
  LODWORD(v483) = v427 ^ v442 ^ v396 ^ (HIDWORD(v396) + 1213001295);
  HIDWORD(v477) = (v397 + 1213001295) ^ v476;
  LODWORD(v477) = v392 ^ v542 ^ (v421 + 1344834442);
  HIDWORD(v470) = HIDWORD(v391) ^ a18 ^ (v211 - ((2 * v211) & 0x9099DC9E) + 1213001295);
  LODWORD(v470) = v467 ^ HIDWORD(v397);
  HIDWORD(v464) = v213 ^ HIDWORD(a20);
  LODWORD(v464) = *(_DWORD *)(v57 - 232) ^ v459 ^ *(_DWORD *)(v57 - 240) ^ (v202 + 1344834442);
  HIDWORD(v460) = v458 ^ *(_DWORD *)(v57 - 192);
  LODWORD(v460) = *(_DWORD *)(v57 - 184) ^ v455;
  HIDWORD(v456) = (HIDWORD(v400) + 1344834442) ^ v434;
  LODWORD(v456) = v386 ^ v530;
  HIDWORD(v452) = v395 ^ *(_DWORD *)(v57 - 256) ^ HIDWORD(v392);
  LODWORD(v452) = v404 ^ HIDWORD(v388) ^ v451;
  HIDWORD(v448) = HIDWORD(v404) ^ v416 ^ v532;
  LODWORD(v448) = (v402 + 1344834442) ^ v539;
  HIDWORD(v443) = v544 ^ HIDWORD(v385) ^ v400 ^ v445 ^ v536;
  LODWORD(v443) = (v436 + 1213001295) ^ v425;
  HIDWORD(v437) = *(_DWORD *)(v57 - 224) ^ v440;
  LODWORD(v437) = *(_DWORD *)(v57 - 216) - 2112993279;
  HIDWORD(v432) = (v223 + v222) ^ v214;
  LODWORD(v432) = *(_DWORD *)(v57 - 160) ^ *(_DWORD *)(v57 - 208) ^ *(_DWORD *)(v57 - 248);
  HIDWORD(v428) = *(_DWORD *)(v57 - 152) ^ v533 ^ *(_DWORD *)(v57 - 200) ^ *(_DWORD *)(v57 - 168);
  int v224 = *(_DWORD *)(v57 - 120);
  LODWORD(v428) = v224 - 789135987;
  HIDWORD(v422) = v224 ^ 0x27D;
  LODWORD(v422) = v224 ^ 0x2DC;
  HIDWORD(v417) = v224 ^ 0x32E;
  LODWORD(v417) = v224 & 0xE8919C3B;
  HIDWORD(v411) = v224 ^ 0x236;
  LODWORD(v411) = v224 ^ 0x2C0;
  HIDWORD(a20) = v224 ^ 0x28A;
  uint64_t v225 = (((v224 - 789135987) & 0x2F0948FF) - 2261) & 0x8FB1E1CE ^ 0x8FB1E1CF;
  *(void *)(v57 - 168) = v225;
  LOBYTE(v225) = v217[a1[v225] ^ 0xF3LL];
  *(void *)(v57 - 152) = 1LL;
  uint64_t v226 = a1[1] ^ 0x57LL;
  *(void *)(v57 - 160) = 10LL;
  uint64_t v227 = a1[10] ^ 0xB6LL;
  LODWORD(v226) = ((v217[v226] + 100) ^ 0xF6) << 16;
  *(void *)(v57 - 184) = 4LL;
  LODWORD(v227) = (v216[v227] ^ 0xEB) << 8;
  uint64_t v228 = a1[4];
  int v229 = v520[v228 ^ 0x9A];
  *(void *)(v57 - 224) = 7LL;
  LODWORD(v228) = v229 ^ (v228 - ((2 * v228) & 0x7A) + 61) ^ 0xFFFFFFCF;
  int v230 = v514[a1[7] ^ 0xD6LL];
  *(void *)(v57 - 216) = 2LL;
  LODWORD(v228) = v230 ^ 0xBA | ((_DWORD)v228 << 24);
  int v231 = v216[a1[2]] ^ 0xF9;
  *(void *)(v57 - 192) = 3LL;
  LODWORD(v226) = v226 | (v231 << 8);
  int v232 = v514[a1[3] ^ 0x74LL];
  *(void *)(v57 - 176) = 12LL;
  int v233 = v520[a1[12] ^ 0x6ELL] ^ (a1[12] - ((2 * a1[12]) & 0x7A) + 61) ^ 0x51;
  *(void *)(v57 - 208) = 0LL;
  LODWORD(v225) = (((v225 ^ 2) + 100) << 16) | (v233 << 24);
  unsigned int v234 = v226 | v232 ^ 0x78 | ((v520[*a1 ^ 0x15LL] ^ (*a1 - ((2 * *a1) & 0x7A) + 61) ^ 0xAE) << 24);
  LODWORD(v227) = v227 | ((v520[a1[8] ^ 0x46LL] ^ (a1[8] - ((2 * a1[8]) & 0x7A) + 61) ^ 0xFFFFFFE7) << 24);
  *(void *)(v57 - 200) = 14LL;
  int v235 = v216[a1[14] ^ 0xD5LL] ^ 0x71;
  int v236 = (v235 << 8) - 1486405035 - ((v235 << 9) & 0x8400);
  LODWORD(v225) = (v225 ^ 0xCF7AFEBF) + 814022977 + ((2 * v225) & 0x9EF40000);
  int v237 = (v225 - (v236 ^ 0xA7674255 | v225)) ^ ((v236 ^ 0x5898BDAA) + 1);
  int v238 = ((v237 - 1486405035 - ((2 * v237) & 0x4ECE84AA)) ^ v236) + v225;
  LOBYTE(v237) = v217[a1[5] ^ 0x9DLL];
  *(void *)(v57 - 248) = 11LL;
  *(void *)(v57 - 240) = 5LL;
  LODWORD(v228) = v228 & 0xFF00FFFF | (((v237 + 100) ^ 0xF7) << 16);
  int v239 = v514[a1[11] ^ 0xC2LL] ^ 0x5D | v227;
  *(void *)(v57 - 256) = 9LL;
  uint64_t v240 = a1[6] ^ 0xA4LL;
  unsigned int v241 = v239 & 0xFF00FFFF | (((v217[a1[9] ^ 0x3ELL] + 100) ^ 0xDF) << 16);
  *(void *)(v57 - 232) = 15LL;
  unsigned int v242 = v234 ^ HIDWORD(v522);
  int v537 = v228 | ((v518[v240] ^ 0x21) << 8);
  uint64_t v243 = (uint64_t)*(&off_1003E8E60 + *(_DWORD *)(v57 - 120) - 280);
  LODWORD(v227) = ((((unsigned __int16)(v537 ^ v522) >> 8) ^ 0x4C)
                 - 419056738
                 - 2 * ((((v537 ^ v522) >> 8) ^ 0xB71C4C) & 0x9F ^ ((v537 ^ v522) >> 8) & 1)) ^ *(_DWORD *)(v243 + 4LL * (((unsigned __int16)(v537 ^ v522) >> 8) ^ 0x21u));
  v244 = (char *)*(&off_1003E8E60 + SHIDWORD(v422)) - 4;
  int v245 = (v227 - 1785376815 - ((2 * v227) & 0x2B2A9FA2)) ^ *(_DWORD *)&v244[4
                                                                          * ((v234 ^ BYTE4(v522)) ^ 0xAA)];
  int v534 = v514[a1[15] ^ 0x47LL] ^ v238 ^ 0x78;
  unsigned int v246 = ((((unsigned __int16)(v521 ^ v534) >> 8) ^ 0x5B)
        - 419056738
        - ((2 * (((v521 ^ v534) >> 8) ^ 0x8D4C5B)) & 0x13C)) ^ *(_DWORD *)(v243
                                                                                       + 4LL
                                                                                       * (((unsigned __int16)(v521 ^ v534) >> 8) ^ 0x36u));
  unsigned int v247 = v241 ^ HIDWORD(v521);
  uint64_t v248 = (uint64_t)*(&off_1003E8E60 + SHIDWORD(v417));
  int v249 = *(_DWORD *)(v248 + 4LL * (((v241 ^ HIDWORD(v521)) >> 16) ^ 0x68u));
  HIDWORD(v251) = v249 ^ 0xAD4;
  LODWORD(v251) = v249 ^ 0xE9D91000;
  int v250 = v251 >> 12;
  int v252 = v246 + 502366661 - ((2 * v246) & 0x3BE3038A);
  int v253 = *(_DWORD *)(v248 + 4LL * ((v234 ^ HIDWORD(v522)) >> 16));
  HIDWORD(v251) = v253 ^ 0xAD4;
  LODWORD(v251) = v253 ^ 0xE9D91000;
  uint64_t v254 = (uint64_t)*(&off_1003E8E60 + (int)v422);
  int v255 = v252 ^ *(_DWORD *)(v254 + 4LL * (((v537 ^ v522) >> 24) ^ 0xB7)) ^ (v251 >> 12);
  int v256 = *(_DWORD *)(v248 + 4LL * (((v521 ^ v534) >> 16) ^ 0x4Cu));
  HIDWORD(v251) = v256 ^ 0xAD4;
  LODWORD(v251) = v256 ^ 0xE9D91000;
  int v257 = *(_DWORD *)&v244[4 * ((v537 ^ v522) ^ 0xFB)] ^ BYTE1(v247) ^ *(_DWORD *)(v243
                                                                                                 + 4LL
                                                                                                 * (BYTE1(v247) ^ 0x23u)) ^ 0x7290FC01 ^ (v251 >> 12);
  int v258 = *(_DWORD *)(v248 + 4LL * (((v537 ^ v522) >> 16) ^ 0x1Cu));
  HIDWORD(v251) = v258 ^ 0xAD4;
  LODWORD(v251) = v258 ^ 0xE9D91000;
  LODWORD(v226) = *(_DWORD *)(v254 + 4LL * (HIBYTE(v247) ^ 0xF6)) ^ ((BYTE1(v242) ^ 0x32)
                                                                   - 419056738
                                                                   - 2
                                                                   * (((v242 >> 8) ^ 0x730032) & 0x9F ^ (v242 >> 8) & 1)) ^ *(_DWORD *)(v243 + 4LL * (BYTE1(v242) ^ 0x5Fu)) ^ ((v251 >> 12) + 502366661 - ((2 * (v251 >> 12)) & 0x3BE3038A));
  unsigned int v259 = HIDWORD(v511) ^ v250 ^ (v245 + 502366661 - ((2 * v245) & 0x3BE3038A)) ^ *(_DWORD *)(v254
                                                                                           + 4LL
                                                                                           * (((v521 ^ v534) >> 24) ^ 0x8D));
  unsigned int v260 = v511 ^ (v226 - 1785376815 - ((2 * v226) & 0x2B2A9FA2)) ^ *(_DWORD *)&v244[4
                                                                                 * ((v521 ^ v534) ^ 0xD7)];
  unsigned int v261 = HIDWORD(v505) ^ *(_DWORD *)&v244[4 * (v247 ^ 0x5F)] ^ (v255
                                                                               - 1785376815
                                                                               - ((2 * v255) & 0x2B2A9FA2));
  unsigned int v262 = HIDWORD(v432) ^ *(_DWORD *)(v254 + 4LL * (((v234 ^ HIDWORD(v522)) >> 24) ^ 0x73)) ^ (v257
                                                                                            + 502366661
                                                                                            - ((2 * v257) & 0x3BE3038A));
  LODWORD(v226) = *(_DWORD *)(v248 + 4LL * (BYTE2(v259) ^ 0x38u));
  HIDWORD(v251) = v226 ^ 0xAD4;
  LODWORD(v251) = v226 ^ 0xE9D91000;
  LODWORD(v226) = v251 >> 12;
  LODWORD(v227) = *(_DWORD *)(v248 + 4LL * (BYTE2(v260) ^ 0x1Cu));
  HIDWORD(v251) = v227 ^ 0xAD4;
  LODWORD(v251) = v227 ^ 0xE9D91000;
  int v263 = v251 >> 12;
  LODWORD(v227) = *(_DWORD *)(v248 + 4LL * (BYTE2(v261) ^ 0x66u));
  HIDWORD(v251) = v227 ^ 0xAD4;
  LODWORD(v251) = v227 ^ 0xE9D91000;
  int v264 = (v251 >> 12) ^ *(_DWORD *)(v243 + 4LL * (BYTE1(v262) ^ 5u)) ^ ((BYTE1(v262) ^ 0x68)
                                                                      - 419056738
                                                                      - ((2 * ((v262 >> 8) ^ 0x42BD68)) & 0x13C));
  LODWORD(v226) = (v226 - 1785376815 - ((2 * v226) & 0x2B2A9FA2)) ^ *(_DWORD *)&v244[4 * (v261 ^ 0xB6)];
  int v265 = (v264 - 1785376815 - ((2 * v264) & 0x2B2A9FA2)) ^ *(_DWORD *)&v244[4 * (v259 ^ 0x61)];
  unsigned int v266 = ((BYTE1(v259) ^ 0x8C) - 419056738 - ((2 * ((v259 >> 8) ^ 0xF9388C)) & 0x13C)) ^ 0xD678EAEF ^ *(_DWORD *)(v243 + 4LL * (BYTE1(v259) ^ 0xE1u));
  unsigned int v267 = *(_DWORD *)(v254 + 4LL * (HIBYTE(v261) ^ 0x43)) ^ 0xBFEBDA7B;
  unsigned int v268 = v266 + v267;
  int v269 = v266 & v267;
  int v270 = *(_DWORD *)(v248 + 4LL * (BYTE2(v262) ^ 0xBDu));
  HIDWORD(v251) = v270 ^ 0xAD4;
  LODWORD(v251) = v270 ^ 0xE9D91000;
  int v271 = (v268 - 2 * v269) ^ (v251 >> 12);
  int v272 = *(_DWORD *)(v254 + 4LL * (HIBYTE(v259) ^ 0xF9)) ^ (v263 + 502366661 - ((2 * v263) & 0x3BE3038A));
  int v273 = (v272 - 1785376815 - ((2 * v272) & 0x2B2A9FA2)) ^ *(_DWORD *)&v244[4 * (v262 ^ 0xAB)];
  unsigned int v274 = *(_DWORD *)(v254 + 4LL * (HIBYTE(v262) ^ 0x42)) ^ v528 ^ *(_DWORD *)(v243 + 4LL * (BYTE1(v260) ^ 0x93u)) ^ ((BYTE1(v260) ^ 0xFE) - 419056738 - ((2 * ((v260 >> 8) ^ 0xCD1CFE)) & 0x13C)) ^ (v226 + 502366661 - ((2 * v226) & 0x3BE3038A));
  LOBYTE(v259) = BYTE1(v261) ^ 0x54;
  unsigned int v275 = v432 ^ *(_DWORD *)(v243 + 4LL * (BYTE1(v261) ^ 0x39u)) ^ (v273 - 419056738 - ((2 * v273) & 0xCE0B673C));
  unsigned int v276 = v505 ^ *(_DWORD *)(v254 + 4LL * (HIBYTE(v260) ^ 0xCD)) ^ (v265 + 502366661 - ((2 * v265) & 0x3BE3038A));
  LODWORD(v227) = HIDWORD(v428) ^ *(_DWORD *)&v244[4 * (v260 ^ 0xAD)] ^ (v271
                                                                                        - 1785376815
                                                                                        - ((2 * v271) & 0x2B2A9FA2));
  LODWORD(v226) = *(_DWORD *)(v248 + 4LL * (BYTE2(v227) ^ 0x79u));
  HIDWORD(v251) = v226 ^ 0xAD4;
  LODWORD(v251) = v226 ^ 0xE9D91000;
  int v277 = ((v251 >> 12) + 502366661 - ((2 * (v251 >> 12)) & 0x3BE3038A)) ^ *(_DWORD *)(v254 + 4LL * (HIBYTE(v276) ^ 0x22));
  LODWORD(v226) = ((BYTE1(v227) ^ 0xD0) - 419056738 - ((2 * ((v227 >> 8) ^ 0x679D0)) & 0x13C)) ^ *(_DWORD *)(v243 + 4LL * (BYTE1(v227) ^ 0xBDu));
  LODWORD(v226) = (v226 - 1785376815 - ((2 * v226) & 0x2B2A9FA2)) ^ *(_DWORD *)&v244[4 * (v274 ^ 0x76)];
  int v278 = ((BYTE1(v275) ^ 0xEC) - 419056738 - ((2 * ((v275 >> 8) ^ 0xE5FEC)) & 0x13C)) ^ *(_DWORD *)(v243
                                                                                                  + 4LL * (BYTE1(v275) ^ 0x81u));
  int v279 = *(_DWORD *)(v248 + 4LL * (BYTE2(v275) ^ 0x5Fu));
  HIDWORD(v251) = v279 ^ 0xAD4;
  LODWORD(v251) = v279 ^ 0xE9D91000;
  int v280 = v251 >> 12;
  HIDWORD(v251) = *(_DWORD *)&v244[4 * (v276 ^ 0x5E)] ^ 0x7C826859;
  LODWORD(v251) = HIDWORD(v251);
  int v281 = (v251 >> 28) ^ __ROR4__( *(_DWORD *)(v254 + 4LL * (BYTE3(v227) ^ 6)) ^ 0x7462B151 ^ (v278 + 502366661 - ((2 * v278) & 0x3BE3038A)),  28);
  int v282 = (v280 + 502366661 - ((2 * v280) & 0x3BE3038A)) ^ *(_DWORD *)(v254 + 4LL * (HIBYTE(v274) ^ 0xD2));
  LODWORD(v227) = (v282 - 1785376815 - ((2 * v282) & 0x2B2A9FA2)) ^ *(_DWORD *)&v244[4 * (v227 ^ 0x4C)];
  int v283 = *(_DWORD *)(v248 + 4LL * (BYTE2(v276) ^ 0x1Bu));
  HIDWORD(v251) = v283 ^ 0xAD4;
  LODWORD(v251) = v283 ^ 0xE9D91000;
  int v284 = v251 >> 12;
  int v285 = v277 - 1785376815 - ((2 * v277) & 0x2B2A9FA2);
  int v286 = ((v274 >> 8) ^ 0xD2CCC0) & 0x9F ^ (v274 >> 8) & 1;
  int v287 = BYTE1(v274) ^ 0xC0;
  int v288 = v227 - 419056738 - ((2 * v227) & 0xCE0B673C);
  LODWORD(v227) = *(_DWORD *)(v248 + 4LL * (BYTE2(v274) ^ 0xCCu));
  HIDWORD(v251) = v227 ^ 0xAD4;
  LODWORD(v251) = v227 ^ 0xE9D91000;
  unsigned int v289 = HIDWORD(a2) ^ HIDWORD(v386) ^ (v251 >> 12) ^ __ROR4__(v281 ^ 0x78071371, 4);
  LOBYTE(v281) = v275 ^ v259;
  LODWORD(v227) = v502 ^ *(_DWORD *)(v254 + 4LL * (HIBYTE(v275) ^ 0xE)) ^ v284 ^ (v226
                                                                                + 502366661
                                                                                - ((2 * v226) & 0x3BE3038A));
  unsigned int v290 = HIDWORD(v498) ^ *(_DWORD *)(v243 + 4LL * (BYTE1(v276) ^ 5u)) ^ v288;
  unsigned int v291 = v498 ^ (v287 - 419056738 - 2 * v286) ^ *(_DWORD *)&v244[4 * (v281 ^ 0xCA)] ^ *(_DWORD *)(v243 + 4LL * (v287 ^ 0x6Du)) ^ v285;
  LODWORD(v226) = *(_DWORD *)(v248 + 4LL * (BYTE2(v290) ^ 0x52u));
  HIDWORD(v251) = v226 ^ 0xAD4;
  LODWORD(v251) = v226 ^ 0xE9D91000;
  int v292 = v251 >> 12;
  LODWORD(v226) = *(_DWORD *)(v248 + 4LL * (BYTE2(v289) ^ 0xFEu));
  HIDWORD(v251) = v226 ^ 0xAD4;
  LODWORD(v251) = v226 ^ 0xE9D91000;
  int v293 = BYTE1(v227) ^ 0x29;
  unsigned int v294 = v293 - 419056738 - ((2 * ((v227 >> 8) ^ 0xA73B29)) & 0x13C);
  LODWORD(v226) = ((BYTE1(v290) ^ 0x95) - 419056738 - ((2 * ((v290 >> 8) ^ 0x455295)) & 0x13C)) ^ *(_DWORD *)&v244[4 * (v227 ^ 0x72)] ^ *(_DWORD *)(v243 + 4LL * (BYTE1(v290) ^ 0xF8u)) ^ ((v251 >> 12) - 1785376815 - ((2 * (v251 >> 12)) & 0x2B2A9FA2));
  int v295 = *(_DWORD *)(v254 + 4LL * (BYTE3(v227) ^ 0xA7)) ^ *(_DWORD *)&v244[4
                                                                         * ((v290 ^ BYTE1(v276)) ^ 0x54)];
  int v296 = *(_DWORD *)(v248 + 4LL * (BYTE2(v291) ^ 2u));
  HIDWORD(v251) = v296 ^ 0xAD4;
  LODWORD(v251) = v296 ^ 0xE9D91000;
  int v297 = v251 >> 12;
  LODWORD(v227) = *(_DWORD *)(v248 + 4LL * (BYTE2(v227) ^ 0x3Bu));
  HIDWORD(v251) = v227 ^ 0xAD4;
  LODWORD(v251) = v227 ^ 0xE9D91000;
  int v298 = v295 ^ v297;
  unsigned int v299 = HIDWORD(v493) ^ ((BYTE1(v291) ^ 0xD9) - 419056738 - ((2 * ((v291 >> 8) ^ 0x9802D9)) & 0x13C)) ^ *(_DWORD *)&v244[4 * (v289 ^ 0x1E)] ^ *(_DWORD *)(v254 + 4LL * (HIBYTE(v290) ^ 0x61)) ^ *(_DWORD *)(v243 + 4LL * (BYTE1(v291) ^ 0xB4u)) ^ (v251 >> 12);
  unsigned int v300 = v493 ^ *(_DWORD *)(v254 + 4LL * (HIBYTE(v291) ^ 0x98)) ^ (v226 + 502366661 - ((2 * v226) & 0x3BE3038A));
  int v301 = *(_DWORD *)(v248 + 4LL * (BYTE2(v299) ^ 0xE6u));
  HIDWORD(v251) = v301 ^ 0xAD4;
  LODWORD(v251) = v301 ^ 0xE9D91000;
  int v302 = v251 >> 12;
  unsigned int v303 = HIDWORD(v488) ^ v294 ^ *(_DWORD *)&v244[4 * (v291 ^ 0x3D)] ^ *(_DWORD *)(v254
                                                                                                 + 4LL
                                                                                                 * (HIBYTE(v289) ^ 0x99)) ^ *(_DWORD *)(v243 + 4LL * (v293 ^ 0x6Du)) ^ v292;
  unsigned int v304 = v488 ^ *(_DWORD *)(v243 + 4LL * (BYTE1(v289) ^ 0x8Au)) ^ ((v298 ^ 0x8864CE14)
                                                                 - 419056738
                                                                 - 2 * ((v298 ^ 0x8864CE14) & 0x6705B39F ^ v298 & 1));
  LODWORD(v226) = *(_DWORD *)(v248 + 4LL * (BYTE2(v303) ^ 0x8Cu));
  HIDWORD(v251) = v226 ^ 0xAD4;
  LODWORD(v251) = v226 ^ 0xE9D91000;
  LODWORD(v227) = BYTE1(v303) ^ 0x31;
  int v305 = v227 - 419056738 - ((2 * ((v303 >> 8) ^ 0x5D8C31)) & 0x13C);
  LODWORD(v226) = *(_DWORD *)&v244[4 * ((v304 ^ BYTE1(v289)) ^ 0xA6)] ^ ((BYTE1(v299) ^ 0x33)
                                                                                        - 419056738
                                                                                        + (~(2 * ((v299 >> 8) ^ 0x69C33)) | 0xFFFFFEC3)
                                                                                        + 1) ^ *(_DWORD *)(v243 + 4LL * (BYTE1(v299) ^ 0x5Eu)) ^ ((v251 >> 12) - 1785376815 - ((2 * (v251 >> 12)) & 0x2B2A9FA2));
  int v306 = *(_DWORD *)(v248 + 4LL * (BYTE2(v304) ^ 0x81u));
  HIDWORD(v251) = v306 ^ 0xAD4;
  LODWORD(v251) = v306 ^ 0xE9D91000;
  int v307 = ((v251 >> 12) + 502366661 - ((2 * (v251 >> 12)) & 0x3BE3038A)) ^ *(_DWORD *)(v254 + 4LL * (HIBYTE(v299) ^ 6));
  int v308 = (v307 - 1785376815 - ((2 * v307) & 0x2B2A9FA2)) ^ *(_DWORD *)&v244[4 * (v303 ^ 0x11)];
  int v309 = *(_DWORD *)&v244[4 * (v300 ^ 0xFC)] ^ (v302 - 1785376815 - ((2 * v302) & 0x2B2A9FA2)) ^ ((BYTE1(v304) ^ 0xA0) - 419056738 - ((2 * ((v304 >> 8) ^ 0x6881A0)) & 0x13C)) ^ *(_DWORD *)(v243 + 4LL * (BYTE1(v304) ^ 0xCDu));
  unsigned int v310 = *(_DWORD *)(v248 + 4LL * (BYTE2(v300) ^ 0xC6u));
  LODWORD(v251) = __ROR4__((v310 >> 12) ^ 0x26340B3, 17) ^ 0xEE910136;
  HIDWORD(v251) = v251;
  unsigned int v311 = HIDWORD(v483) ^ *(_DWORD *)(v243 + 4LL * (BYTE1(v300) ^ 0x75u)) ^ (v308 - 419056738 - ((2 * v308) & 0xCE0B673C));
  unsigned int v312 = v483 ^ *(_DWORD *)(v254 + 4LL * (HIBYTE(v303) ^ 0x5D)) ^ (v309 + 502366661 - ((2 * v309) & 0x3BE3038A));
  int v313 = *(_DWORD *)&v244[4 * (v299 ^ 0x71)];
  unsigned int v314 = HIDWORD(v477) ^ *(_DWORD *)(v254 + 4LL * (HIBYTE(v300) ^ 0x5A)) ^ (v226 + 502366661 - ((2 * v226) & 0x3BE3038A));
  unsigned int v315 = v477 ^ v305 ^ v313 ^ *(_DWORD *)(v243 + 4LL * (v227 ^ 0x6D)) ^ *(_DWORD *)(v254
                                                                                                + 4LL
                                                                                                * (HIBYTE(v304) ^ 0x68)) ^ ((v251 >> 15) + (v310 << 20));
  LODWORD(v226) = ((BYTE1(v311) ^ 0x9D) - 419056738 - ((2 * ((v311 >> 8) ^ 0xC2489D)) & 0x13C)) ^ *(_DWORD *)(v243 + 4LL * (BYTE1(v311) ^ 0xF0u));
  unsigned int v316 = *(_DWORD *)(v248 + 4LL * (BYTE2(v312) ^ 0x8Fu));
  LODWORD(v226) = *(_DWORD *)&v244[4 * (v315 ^ 0x9E)] ^ (v316 << 20) ^ (v316 >> 12) ^ 0xAD4E9D91 ^ (v226 - 1785376815 - ((2 * v226) & 0x2B2A9FA2));
  LODWORD(v227) = *(_DWORD *)(v248 + 4LL * (BYTE2(v314) ^ 0xB8u));
  HIDWORD(v251) = v227 ^ 0xAD4;
  LODWORD(v251) = v227 ^ 0xE9D91000;
  int v317 = ((v251 >> 12) - 1785376815 - ((2 * (v251 >> 12)) & 0x2B2A9FA2)) ^ *(_DWORD *)&v244[4
                                                                                          * ((v311 ^ BYTE1(v300)) ^ 0x3F)];
  LODWORD(v227) = v226 + 502366661 - ((2 * v226) & 0x3BE3038A);
  LODWORD(v226) = *(_DWORD *)(v248 + 4LL * (BYTE2(v311) ^ 0x48u));
  HIDWORD(v251) = v226 ^ 0xAD4;
  LODWORD(v251) = v226 ^ 0xE9D91000;
  LODWORD(v226) = ((BYTE1(v315) ^ 0xAE) - 419056738 - 2 * (((v315 >> 8) ^ 0x3AFAE) & 0x9F ^ (v315 >> 8) & 1)) ^ *(_DWORD *)&v244[4 * (v314 ^ 0xCC)] ^ *(_DWORD *)(v243 + 4LL * (BYTE1(v315) ^ 0xC3u)) ^ ((v251 >> 12) - 1785376815 - ((2 * (v251 >> 12)) & 0x2B2A9FA2));
  int v318 = *(_DWORD *)(v248 + 4LL * (BYTE2(v315) ^ 0xAFu));
  HIDWORD(v251) = v318 ^ 0xAD4;
  LODWORD(v251) = v318 ^ 0xE9D91000;
  unsigned int v319 = HIDWORD(v470) ^ ((BYTE1(v314) ^ 0xD7) - 419056738 - ((2 * ((v314 >> 8) ^ 0xCFB8D7)) & 0x13C)) ^ *(_DWORD *)&v244[4 * (v312 ^ 0x50)] ^ *(_DWORD *)(v243 + 4LL * (BYTE1(v314) ^ 0xBAu)) ^ (v251 >> 12) ^ *(_DWORD *)(v254 + 4LL * (HIBYTE(v311) ^ 0xC2));
  int v320 = *(_DWORD *)(v254 + 4LL * (HIBYTE(v314) ^ 0xCF));
  unsigned int v321 = v470 ^ *(_DWORD *)(v254 + 4LL * (HIBYTE(v312) ^ 0xC7)) ^ (v226 + 502366661 - ((2 * v226) & 0x3BE3038A));
  unsigned int v322 = HIDWORD(v464) ^ v320 ^ v227;
  unsigned int v323 = v464 ^ ((BYTE1(v312) ^ 0xD9) - 419056738 - ((2 * ((v312 >> 8) ^ 0xC78FD9)) & 0x13C)) ^ *(_DWORD *)(v243 + 4LL * (BYTE1(v312) ^ 0xB4u)) ^ *(_DWORD *)(v254 + 4LL * (HIBYTE(v315) ^ 3)) ^ (v317 + 502366661 - ((2 * v317) & 0x3BE3038A));
  int v324 = ((BYTE1(v323) ^ 0xCC) - 419056738 - 2 * (((v323 >> 8) ^ 0x33C8CC) & 0x9F ^ (v323 >> 8) & 1)) ^ *(_DWORD *)(v243 + 4LL * (BYTE1(v323) ^ 0xA1u));
  int v325 = *(_DWORD *)(v248 + 4LL * (BYTE2(v321) ^ 0xE6u));
  HIDWORD(v251) = v325 ^ 0xAD4;
  LODWORD(v251) = v325 ^ 0xE9D91000;
  int v326 = v251 >> 12;
  int v327 = *(_DWORD *)(v248 + 4LL * (BYTE2(v322) ^ 0x1Cu));
  HIDWORD(v251) = v327 ^ 0xAD4;
  LODWORD(v251) = v327 ^ 0xE9D91000;
  LODWORD(v226) = (v251 >> 12) ^ *(_DWORD *)(v243 + 4LL * (BYTE1(v321) ^ 0xD9u)) ^ ((BYTE1(v321) ^ 0xB4)
                                                                                  - 419056738
                                                                                  - 2
                                                                                  * (((v321 >> 8) ^ 0x4FE6B4) & 0x9F ^ (v321 >> 8) & 1));
  LODWORD(v226) = (v226 - 1785376815 - ((2 * v226) & 0x2B2A9FA2)) ^ *(_DWORD *)&v244[4 * (v319 ^ 0xFE)];
  LODWORD(v227) = (v324 - 1785376815 - ((2 * v324) & 0x2B2A9FA2)) ^ *(_DWORD *)&v244[4 * (v322 ^ 0x3A)];
  int v328 = *(_DWORD *)&v244[4 * (v321 ^ 0x96)];
  HIDWORD(v251) = v328 ^ 0x15954FD1;
  LODWORD(v251) = v328 ^ 0x80000000;
  HIDWORD(v251) = (v251 >> 29) ^ 0x6615DA09;
  LODWORD(v251) = HIDWORD(v251);
  int v329 = (v326 - 1785376815 - ((2 * v326) & 0x2B2A9FA2)) ^ *(_DWORD *)&v244[4 * (v323 ^ 0xA2)] ^ ((BYTE1(v319) ^ 0xDA) - 419056738 - 2 * (((v319 >> 8) ^ 0x9157DA) & 0x9F ^ (v319 >> 8) & 1)) ^ *(_DWORD *)(v243 + 4LL * (BYTE1(v319) ^ 0xB7u));
  int v330 = (v251 >> 3) - 419056738 - ((2 * (v251 >> 3)) & 0xCE0B673C);
  int v331 = *(_DWORD *)(v248 + 4LL * (BYTE2(v319) ^ 0x57u));
  HIDWORD(v251) = v331 ^ 0xAD4;
  LODWORD(v251) = v331 ^ 0xE9D91000;
  int v332 = v251 >> 12;
  int v333 = *(_DWORD *)(v248 + 4LL * (BYTE2(v323) ^ 0xC8u));
  HIDWORD(v251) = v333 ^ 0xAD4;
  LODWORD(v251) = v333 ^ 0xE9D91000;
  unsigned int v334 = HIDWORD(v460) ^ *(_DWORD *)(v254 + 4LL * (HIBYTE(v323) ^ 0x17)) ^ (v226 + 502366661 - ((2 * v226) & 0x3BE3038A));
  LODWORD(v226) = v330 ^ *(_DWORD *)(v243 + 4LL * (BYTE1(v322) ^ 0xD1u)) ^ (v251 >> 12);
  unsigned int v335 = *(_DWORD *)(v254 + 4LL * (HIBYTE(v319) ^ 0xB5)) ^ v527 ^ (v226 + 502366661 - ((2 * v226) & 0x3BE3038A));
  unsigned int v336 = HIDWORD(v456) ^ *(_DWORD *)(v254 + 4LL * (HIBYTE(v322) ^ 0x1B)) ^ (v329 + 502366661 - ((2 * v329) & 0x3BE3038A));
  int v337 = *(_DWORD *)(v248 + 4LL * (BYTE2(v336) ^ 0x7Eu));
  HIDWORD(v251) = v337 ^ 0xAD4;
  LODWORD(v251) = v337 ^ 0xE9D91000;
  int v338 = v251 >> 12;
  LODWORD(v227) = v460 ^ *(_DWORD *)(v254 + 4LL * (HIBYTE(v321) ^ 0x4F)) ^ v332 ^ (v227
                                                                                 + 502366661
                                                                                 - ((2 * v227) & 0x3BE3038A));
  LODWORD(v226) = *(_DWORD *)(v248 + 4LL * (BYTE2(v227) ^ 1u));
  HIDWORD(v251) = v226 ^ 0xAD4;
  LODWORD(v251) = v226 ^ 0xE9D91000;
  LODWORD(v226) = ((v251 >> 12) - 1785376815 - ((2 * (v251 >> 12)) & 0x2B2A9FA2)) ^ *(_DWORD *)&v244[4 * (v334 ^ 0xC6)];
  int v339 = ((BYTE1(v334) ^ 0x71) - 419056738 - ((2 * ((v334 >> 8) ^ 0xF25B71)) & 0x13C)) ^ *(_DWORD *)(v243 + 4LL * (BYTE1(v334) ^ 0x1Cu));
  int v340 = (v339 + 502366661 - ((2 * v339) & 0x3BE3038A)) ^ *(_DWORD *)(v254 + 4LL * (BYTE3(v227) ^ 0x1F));
  int v341 = *(_DWORD *)(v248 + 4LL * (BYTE2(v334) ^ 0x5Bu));
  HIDWORD(v251) = v341 ^ 0xAD4;
  LODWORD(v251) = v341 ^ 0xE9D91000;
  int v342 = v251 >> 12;
  int v343 = *(_DWORD *)(v248 + 4LL * (BYTE2(v335) ^ 0xF4u));
  HIDWORD(v251) = v343 ^ 0xAD4;
  LODWORD(v251) = v343 ^ 0xE9D91000;
  int v344 = v251 >> 12;
  HIDWORD(v251) = v338 ^ ((BYTE1(v227) ^ 0x81) - 419056738 - ((2 * ((v227 >> 8) ^ 0x1F0181)) & 0x13C)) ^ 0xD678EAEF ^ *(_DWORD *)(v243 + 4LL * (BYTE1(v227) ^ 0xECu));
  LODWORD(v251) = HIDWORD(v251);
  LODWORD(v251) = (v251 >> 11) ^ __ROR4__(*(_DWORD *)(v254 + 4LL * (HIBYTE(v334) ^ 0xF2)) ^ 0xBFEBDA7B, 11) ^ 0xD490839A;
  HIDWORD(v251) = v251;
  unsigned int v345 = v386 ^ v530 ^ *(_DWORD *)&v244[4 * (v227 ^ 0xB8)] ^ ((BYTE1(v336) ^ 0xAA)
                                                                             - 419056738
                                                                             - 2
                                                                             * (((v336 >> 8) ^ 0x967EAA) & 0x9F ^ (v336 >> 8) & 1)) ^ *(_DWORD *)(v254 + 4LL * (HIBYTE(v335) ^ 0x57)) ^ v342 ^ *(_DWORD *)(v243 + 4LL * (BYTE1(v336) ^ 0xC7u));
  LOBYTE(v227) = v335 ^ BYTE1(v322);
  int v346 = (v335 >> 8) ^ 0x73F4E0;
  LODWORD(v226) = HIDWORD(v452) ^ *(_DWORD *)(v254 + 4LL * (HIBYTE(v336) ^ 0x96)) ^ (v346
                                                                                   - 419056738
                                                                                   - 2 * (v346 & 0x9F ^ (v335 >> 8) & 1)) ^ (v226 + 502366661 - ((2 * v226) & 0x3BE3038A));
  int v347 = *(_DWORD *)&v244[4 * (v336 ^ 0x88)];
  unsigned int v348 = v226 ^ *(_DWORD *)(v243 + 4LL * (v346 ^ 0x6Du));
  unsigned int v349 = v452 ^ v347 ^ v344 ^ (v340 - 1785376815 - ((2 * v340) & 0x2B2A9FA2));
  LODWORD(v227) = HIDWORD(v448) ^ *(_DWORD *)&v244[4 * (v227 ^ 0xAF)] ^ ((v251 >> 21)
                                                                                        - 1785376815
                                                                                        - ((2 * (v251 >> 21)) & 0x2B2A9FA2));
  int v350 = *(_DWORD *)(v248 + 4LL * (BYTE2(v345) ^ 0x8Fu));
  HIDWORD(v251) = v350 ^ 0xAD4;
  LODWORD(v251) = v350 ^ 0xE9D91000;
  int v351 = v251 >> 12;
  int v352 = *(_DWORD *)(v243 + 4LL * (BYTE1(v348) ^ 0x96u)) ^ ((BYTE1(v348) ^ 0xFB)
                                                          - 419056738
                                                          - ((2 * ((v348 >> 8) ^ 0x3EA2FB)) & 0x13C));
  int v353 = (v352 - 1785376815 - ((2 * v352) & 0x2B2A9FA2)) ^ *(_DWORD *)&v244[4 * (v349 ^ 0x75)];
  int v354 = *(_DWORD *)(v248 + 4LL * (BYTE2(v348) ^ 0xA2u));
  HIDWORD(v251) = v354 ^ 0xAD4;
  LODWORD(v251) = v354 ^ 0xE9D91000;
  LODWORD(v226) = ((BYTE1(v349) ^ 0xF0) - 419056738 - 2 * (((v349 >> 8) ^ 0xB54AF0) & 0x9F ^ (v349 >> 8) & 1)) ^ (v251 >> 12) ^ *(_DWORD *)(v243 + 4LL * (BYTE1(v349) ^ 0x9Du));
  int v355 = *(_DWORD *)(v254 + 4LL * (HIBYTE(v348) ^ 0x3E));
  LODWORD(v226) = (v226 + 502366661 - ((2 * v226) & 0x3BE3038A)) ^ *(_DWORD *)(v254 + 4LL * (BYTE3(v227) ^ 0xED));
  int v356 = v353 + 502366661 - ((2 * v353) & 0x3BE3038A);
  int v357 = *(_DWORD *)&v244[4 * (v227 ^ 0x8F)];
  int v358 = BYTE1(v227) ^ 0x1D;
  unsigned int v359 = v358 - 419056738 - ((2 * ((v227 >> 8) ^ 0xC9AF1D)) & 0x13C);
  int v360 = *(_DWORD *)&v244[4 * (v348 ^ 0x9A)];
  int v361 = *(_DWORD *)&v244[4 * (v345 ^ 0x7B)];
  LODWORD(v227) = *(_DWORD *)(v248 + 4LL * (BYTE2(v227) ^ 0xAFu));
  LODWORD(v244) = *(_DWORD *)(v248 + 4LL * (BYTE2(v349) ^ 0x4Au));
  HIDWORD(v251) = v244 ^ 0xAD4;
  LODWORD(v251) = v244 ^ 0xE9D91000;
  LODWORD(v244) = v448 ^ v360 ^ v351 ^ *(_DWORD *)(v254 + 4LL * (HIBYTE(v349) ^ 0x91)) ^ v359 ^ *(_DWORD *)(v243 + 4LL * (v358 ^ 0x6Du));
  unsigned int v362 = HIDWORD(v443) ^ ((BYTE1(v345) ^ 0xE) - 419056738 - ((2 * ((v345 >> 8) ^ 0x4F8F0E)) & 0x13C)) ^ v355 ^ *(_DWORD *)(v243 + 4LL * (BYTE1(v345) ^ 0x63u)) ^ v357 ^ (v251 >> 12);
  unsigned int v363 = v443 ^ v361 ^ (v226 - 1785376815 - ((2 * v226) & 0x2B2A9FA2));
  LODWORD(v226) = HIDWORD(v437) ^ *(_DWORD *)(v254 + 4LL * (HIBYTE(v345) ^ 0x4F)) ^ (v227 >> 12) ^ ((_DWORD)v227 << 20);
  uint64_t v364 = *(unsigned int *)(v57 - 120);
  v365 = (char *)*(&off_1003E8E60 + (int)v364 - 473) - 8;
  v366 = (char *)*(&off_1003E8E60 + (int)v364 - 537) - 4;
  LODWORD(v254) = *(_DWORD *)&v366[4 * (BYTE1(v244) ^ 0xBF)];
  LODWORD(v227) = v226 ^ v356;
  LODWORD(v226) = *(_DWORD *)&v365[4 * (v363 ^ 7)] ^ *(_DWORD *)&v366[4
                                                                                     * (((unsigned __int16)(v226 ^ v356) >> 8) ^ 0xBE)] ^ 0x492279ED;
  int v367 = *(_DWORD *)&v366[4 * ((unsigned __int16)(v363 ^ 0x6F07) >> 8)];
  uint64_t v368 = *(unsigned int *)&v366[4 * (BYTE1(v362) ^ 0xEE)];
  v369 = (char *)*(&off_1003E8E60 + (int)v417) - 4;
  LODWORD(v243) = *(_DWORD *)&v369[4 * (HIBYTE(v363) ^ 0xEF)];
  LODWORD(v248) = *(_DWORD *)&v369[4 * (BYTE3(v227) ^ 0x30)];
  LODWORD(v226) = *(_DWORD *)&v369[4 * (HIBYTE(v362) ^ 0x6E)] ^ (v226 - 1893577692 - ((2 * v226) & 0x1E449848));
  LODWORD(v369) = *(_DWORD *)&v369[4 * ((v244 >> 24) ^ 0xB9)];
  v370 = (char *)*(&off_1003E8E60 + (int)v364 - 419) - 12;
  int v371 = *(_DWORD *)&v370[4 * (BYTE2(v227) ^ 0xF2)];
  int v372 = *(_DWORD *)&v370[4 * (BYTE2(v363) ^ 0x2A)];
  uint64_t v373 = *(unsigned int *)&v370[4 * (BYTE2(v362) ^ 0x8A)];
  LODWORD(v226) = *(_DWORD *)&v370[4 * (BYTE2(v244) ^ 0xEF)] ^ (v226 + 317653259 - ((2 * v226) & 0x25DE0216));
  LODWORD(v370) = *(_DWORD *)&v365[4 * (v244 ^ 0xC8)];
  int v374 = *(_DWORD *)&v365[4 * (v362 ^ 0xF6)];
  LODWORD(v227) = *(_DWORD *)&v365[4 * (v227 ^ 0x4A)];
  LODWORD(v365) = *(_DWORD *)(v57 - 140) ^ v523 ^ (v226 - ((2 * v226) & 0xFB3012E8) + 2107115892);
  v375 = (char *)*(&off_1003E8E60 + (int)v364 - 358) - 4;
  a1[8] = v375[(v365 >> 24) ^ 0x36LL] ^ 0xA;
  LODWORD(v226) = ((v371 ^ 0xC3F31976 ^ v367) - 1893577692 - ((2 * (v371 ^ 0xC3F31976 ^ v367)) & 0x1E449848)) ^ v369;
  LODWORD(v226) = (v226 - 1740742256 - ((2 * v226) & 0x307CC320)) ^ v374;
  LODWORD(v226) = *(_DWORD *)(v57 - 136) ^ HIDWORD(v523) ^ (v226 - ((2 * v226) & 0x7CC37698) + 1046592332);
  uint64_t v376 = (uint64_t)*(&off_1003E8E60 + SHIDWORD(v411));
  a1[*(void *)(v57 - 224)] = (*(_BYTE *)(v376 + (v226 ^ 0xC7LL)) - 116) ^ 0x5F;
  v377 = (char *)*(&off_1003E8E60 + (int)v411) - 8;
  LODWORD(v369) = v377[BYTE1(v226) ^ 0x13LL];
  HIDWORD(v251) = v369 ^ 0x2C;
  LODWORD(v251) = (v369 ^ 0x40) << 24;
  a1[6] = (v251 >> 30) ^ 0x40;
  LODWORD(v369) = ((v370 ^ 0x8AD1609B ^ v372)
                 - 1893577692
                 - ((2 * (v370 ^ 0x8AD1609B ^ v372)) & 0x1E449848)) ^ v248;
  LODWORD(v369) = ((_DWORD)v369 - ((2 * (_DWORD)v369) & 0xA23830FA) - 786687875) ^ v368;
  uint64_t v378 = *(_DWORD *)(v57 - 132) ^ HIDWORD(v524) ^ (v369 - ((2 * (_DWORD)v369) & 0x1D841A54) - 1899885270);
  LODWORD(v369) = v377[(unsigned __int16)(*(_WORD *)(v57 - 132) ^ WORD2(v524) ^ ((_WORD)v369
                                                                                                - ((2 * (_WORD)v369) & 0x1A54)
                                                                                                + 3370)) >> 8];
  HIDWORD(v251) = v369 ^ 0x2C;
  LODWORD(v251) = (v369 ^ 0x40) << 24;
  int v379 = v243 ^ v254;
  a1[*(void *)(v57 - 216)] = (v251 >> 30) ^ 0x7E;
  v380 = (char *)*(&off_1003E8E60 + SHIDWORD(a20)) - 8;
  a1[*(void *)(v57 - 256)] = v380[BYTE2(v365) ^ 0xC7LL] ^ 0xB7;
  LODWORD(v369) = ((v379 ^ 0x5E3E5459) + 317653259 - 2 * ((v379 ^ 0x5E3E5459) & 0x12EF012B ^ v379 & 0x20)) ^ v373;
  LODWORD(v227) = ((_DWORD)v369 - 1740742256 - ((2 * (_DWORD)v369) & 0x307CC320)) ^ v227;
  LODWORD(v227) = *(_DWORD *)(v57 - 128) ^ v524 ^ (v227 - ((2 * v227) & 0x7920DBEC) + 1016098294);
  a1[*(void *)(v57 - 168)] = v380[BYTE2(v227) ^ 0xB8LL] ^ 0x64;
  a1[*(void *)(v57 - 248)] = (*(_BYTE *)(v376 + (v365 ^ 0xB7LL)) - 116) ^ 0x7D;
  a1[*(void *)(v57 - 240)] = v380[BYTE2(v226) ^ 3LL] ^ 0x1A;
  a1[*(void *)(v57 - 184)] = v375[BYTE3(v226) ^ 0x6DLL] ^ 0xF2;
  LODWORD(v226) = v377[BYTE1(v365) ^ 0xC8LL];
  HIDWORD(v251) = v226 ^ 0x2C;
  LODWORD(v251) = (v226 ^ 0x40) << 24;
  a1[*(void *)(v57 - 160)] = (v251 >> 30) ^ 0xD2;
  uint64_t v381 = *(void *)(v57 - 208);
  a1[v381] = v375[BYTE3(v378) ^ 0x53LL] ^ 0x1E;
  a1[*(void *)(v57 - 192)] = (*(_BYTE *)(v376 + (v378 ^ 0x95LL)) - 116) ^ 0xAF;
  a1[*(void *)(v57 - 232)] = (*(_BYTE *)(v376 + (v227 ^ 0x64LL)) - 116) ^ 0x27;
  a1[*(void *)(v57 - 176)] = v375[BYTE3(v227) ^ 0x6ELL] ^ 0x88;
  LODWORD(v226) = v377[BYTE1(v227) ^ 0x1FLL];
  HIDWORD(v251) = v226 ^ 0x2C;
  LODWORD(v251) = (v226 ^ 0x40) << 24;
  a1[*(void *)(v57 - 200)] = (v251 >> 30) ^ 0x58;
  a1[*(void *)(v57 - 152)] = v380[BYTE2(v378) ^ 0xC8LL] ^ 0x35;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, char *, char *, char *, uint64_t, uint64_t, unint64_t, unint64_t))(a53 + 8LL * ((2274 * ((((_DWORD)v381 - 1884167730 - ((2 * (_DWORD)v381 + 32) & 0x1F63C39C) + 16) ^ 0x8FB1E1CE) < v437)) ^ ((int)v364 + 760))))( v377,  3875910558LL,  183LL,  v373,  507811912LL,  v364,  v378,  v368,  a2,  v383,  v384,  v385,  v386,  v388,  v390,  v391,  v392,  v393,  v395,  v396,  v397,  v400,  v402,  v404,  a18,  a19,  a20,  v411,  v417,  v422,  v428,  v432,  v437,  v443,  v448,  v452,  v456,  v460,  v464,  v470,  v477,  v483,  v488,  v493,  v498,  v502,  v505,  v511,  v514,
           v516,
           v518,
           v520,
           v521,
           v522,
           v523,
           v524);
}

void sub_100179270( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61,int a62,int a63)
{
  *(_DWORD *)(v64 - 128) = a61 ^ 0xE7A236DA;
  *(_DWORD *)(v64 - 140) = a63 ^ 0xC6C168DB;
  *(_DWORD *)(v64 - 132) = a64 ^ 0xFAD4C4D2;
  *(_DWORD *)(v64 - 136) = a62 ^ 0xC73D2450;
  JUMPOUT(0x100177518LL);
}

uint64_t sub_1001792C4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, int a25, int a26, uint64_t a27, int a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,int a60,int a61)
{
  unsigned int v62 = a26 + ~(((a61 - 1677) ^ 0x95C12AD0) & a28) + 421495909;
  return ((uint64_t (*)(void))(*(void *)(v61
                                        + 8LL
                                        * ((13
                                          * (((2 * v62) & 0x773EF9FE ^ 0x150028EA) + (v62 ^ 0x717FE88A) - 169214112 != 831093855)) ^ a61))
                            - 8LL))();
}

uint64_t sub_100179380(int a1)
{
  return ((uint64_t (*)(void))(*(void *)(v3
                                        + 8LL
                                        * (((((v1 + 513) ^ 0xABA) + 2825 + 5 * ((v1 + 513) ^ 0xABA) - 3030)
}

uint64_t sub_1001793F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v8 = (((((_DWORD)a3 - 2915) | 0x222) - 586) & a6) == 1000307968;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7
                                                                                 + 8LL
                                                                                 * (int)(((v8 << 7) | (v8 << 10)) ^ a3))
                                                                     - 4LL))( a1,  a2,  a3,  v6);
}

uint64_t sub_100179438@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, unint64_t a4@<X8>)
{
  int v9 = a3 - 1353;
  uint64_t v10 = (a1 + v7 + a2);
  unint64_t v11 = v10 + a4 + 1;
  uint64_t v12 = (((v9 ^ 0x408) + 2166) ^ v9 ^ 0xC8D) & (a1 + v7);
  uint64_t v13 = v12 - v10;
  unint64_t v14 = v6 + v13;
  ++v12;
  unint64_t v15 = v6 + v12;
  unint64_t v16 = v4 + v13;
  unint64_t v17 = v4 + v12;
  unint64_t v18 = v5 + v13;
  unint64_t v19 = v5 + v12;
  BOOL v21 = v15 > a4 && v14 < v11;
  if (v17 > a4 && v16 < v11) {
    BOOL v21 = 1;
  }
  int v24 = v19 > a4 && v18 < v11 || v21;
  return ((uint64_t (*)(void))(*(void *)(v8 + 8LL * (((32 * (v24 ^ 1)) | ((v24 ^ 1) << 6)) ^ v9)) - 12LL))();
}

uint64_t sub_1001794CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return ((uint64_t (*)(uint64_t, uint64_t, void))(*(void *)(v8
                                                                       + 8LL
                                                                       * (int)((((a7 + 1482323196) & 0xA7A587FF ^ 0x7CB)
                                                                              * (v7 < 0x10)) ^ a7))
                                                           - ((a7 - 2352) ^ 0x18BLL)))( a1,  a2,  0LL);
}

uint64_t sub_100179518@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W3>, uint64_t a4@<X8>)
{
  v18.val[1].i64[0] = ((_BYTE)v7 + 14) & 0xF;
  v18.val[1].i64[1] = ((_BYTE)v7 + 13) & 0xF;
  v18.val[2].i64[0] = ((_BYTE)v7 + 12) & 0xF;
  v18.val[2].i64[1] = (((a3 + 127) ^ 0x55) + (_BYTE)v7) & 0xF;
  v18.val[3].i64[0] = ((_BYTE)v7 + 10) & 0xF;
  v18.val[3].i64[1] = ((_BYTE)v7 + 9) & 0xF;
  v19.val[0].i64[0] = ((_BYTE)v7 + 8) & 0xF;
  v19.val[0].i64[1] = ((_BYTE)v7 + 7) & 0xF;
  v19.val[1].i64[0] = ((_BYTE)v7 + 6) & 0xF;
  v19.val[1].i64[1] = (v7 + 5) & 0xF;
  v19.val[2].i64[0] = ((_BYTE)v7 + 4) & 0xF;
  v19.val[2].i64[1] = ((_BYTE)v7 + 3) & 0xF;
  v19.val[3].i64[0] = ((_BYTE)v7 + 2) & 0xF;
  v19.val[3].i64[1] = (v7 + 1) & 0xF;
  v11.i64[0] = 0x505050505050505LL;
  v11.i64[1] = 0x505050505050505LL;
  unsigned int v12 = a1 + v9 + a2;
  v13.i64[0] = 0x7676767676767676LL;
  v13.i64[1] = 0x7676767676767676LL;
  v18.val[0].i64[0] = v12 & 0xF;
  v18.val[0].i64[1] = ((_BYTE)v7 - 1) & 0xF;
  v14.i64[0] = vqtbl4q_s8(v18, (int8x16_t)xmmword_100374CD0).u64[0];
  v14.i64[1] = vqtbl4q_s8(v19, (int8x16_t)xmmword_100374CD0).u64[0];
  int8x16_t v15 = vrev64q_s8( veorq_s8( veorq_s8(*(int8x16_t *)(a4 - 15 + v12), *(int8x16_t *)(v6 + v18.val[0].i64[0] - 15)),  veorq_s8(*(int8x16_t *)(v4 + v18.val[0].i64[0] - 15), *(int8x16_t *)(v5 + v18.val[0].i64[0] - 15))));
  int8x16_t v16 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v15, v15, 8uLL), v13), vmulq_s8(v14, v11)));
  *(int8x16_t *)(a4 - 15 + v12) = vextq_s8(v16, v16, 8uLL);
  return ((uint64_t (*)(void))(*(void *)(v10
                                        + 8LL
}

void sub_100179680()
{
}

uint64_t sub_10017968C(uint64_t a1, uint64_t a2, int a3)
{
}

uint64_t sub_1001796B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, void))(*(void *)(v9
                                                                                + 8LL
                                                                                * ((436
                                                                                  * (((((a7 - 2365) | 0x629) ^ 0x7B3) & v8) == ((a7 - 2197) ^ 0x23A))) ^ a7))
                                                                    - 4LL))( a1,  a2,  a3,  (v7 - a3));
}

uint64_t sub_100179700@<X0>( int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W5>, uint64_t a5@<X8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  *(_DWORD *)(v65 - 120) = v64;
  *(_DWORD *)(v65 - 132) = v61 & 0xFFFFFFF8;
  *(_DWORD *)(v65 - 128) = v61;
  int v66 = -a3;
  int v67 = a1 + v63;
  *(_DWORD *)(v65 - 136) = a4 ^ 0x189;
  uint64_t v68 = (v67 + a2 + v66);
  v70.val[0].i64[0] = ((_BYTE)v67 + (_BYTE)a2 + (_BYTE)v66) & 0xF;
  v70.val[0].i64[1] = (v62 + (_BYTE)v67 + 15 + (_BYTE)v66) & 0xF;
  v70.val[1].i64[0] = (v62 + (_BYTE)v67 + 14 + (_BYTE)v66) & 0xF;
  v70.val[1].i64[1] = (v62 + (_BYTE)v67 + 13 + (_BYTE)v66) & 0xF;
  v70.val[2].i64[0] = (v62 + (_BYTE)v67 + 12 + (_BYTE)v66) & 0xF;
  v70.val[2].i64[1] = (v62 + (_BYTE)v67 + 11 + (_BYTE)v66) & 0xF;
  v70.val[3].i64[0] = (v60 + (_BYTE)v66 + (a4 ^ 1)) & 0xF;
  v70.val[3].i64[1] = (v62 + (_BYTE)v67 + 9 + (_BYTE)v66) & 0xF;
  *(int8x8_t *)(a5 - 7 + v68) = vrev64_s8( veor_s8( veor_s8( vrev64_s8( veor_s8( veor_s8(*(int8x8_t *)(a5 - 7 + v68), *(int8x8_t *)(v59 + (v68 & 0xF) - 7)),  veor_s8( *(int8x8_t *)(v57 + (v68 & 0xF) - 7),  *(int8x8_t *)(v58 + (v68 & 0xF) - 7)))),  (int8x8_t)0x7676767676767676LL),  vmul_s8( (int8x8_t)*(_OWORD *)&vqtbl4q_s8(v70, (int8x16_t)xmmword_100374CE0),  (int8x8_t)0x505050505050505LL)));
  return ((uint64_t (*)(__n128))(*(void *)(a57 + 8LL * ((2942 * (8 - (v61 & 0xFFFFFFF8) == v66)) ^ a4)) - 4LL))((__n128)xmmword_100374CE0);
}

void sub_10017983C()
{
}

uint64_t sub_100179844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)(v5
                                                                                         + 8LL
                                                                                         * (((*(_DWORD *)(v4 - 136)
                                                                                            + 2354)
                                                                                           * (*(_DWORD *)(v4 - 128) == *(_DWORD *)(v4 - 132))) ^ *(_DWORD *)(v4 - 136)))
                                                                             - ((*(_DWORD *)(v4 - 136) - 241719927) & 0xE68567E ^ 0x236LL)))( a1,  a2,  a3,  a4,  (*(_DWORD *)(v4 - 136) - 1016));
}

uint64_t sub_100179894@<X0>(int a1@<W3>, int a2@<W4>, uint64_t a3@<X8>)
{
  uint64_t v8 = (a1 - 831093856);
  *(_BYTE *)(a3 + v8) ^= *(_BYTE *)(v6 + (v8 & 0xF)) ^ *(_BYTE *)(v4 + (v8 & 0xF)) ^ *(_BYTE *)(v5 + (v8 & 0xF)) ^ (5 * (v8 & 0xF)) ^ 0x76;
  return ((uint64_t (*)(void))(*(void *)(v7 + 8LL * ((3659 * (a1 - 1 == v3)) ^ (a2 + 1251))) - 12LL))();
}

void sub_1001798FC()
{
  if (v0 == 746807395) {
    int v1 = 774154701;
  }
  else {
    int v1 = 774112677;
  }
  *int v2 = v1;
}

void sub_100179960( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a5) {
    BOOL v8 = a6 == 0;
  }
  else {
    BOOL v8 = 1;
  }
  int v11 = !v8 && a7 != 0 && a8 != 0;
  __asm { BR              X9 }

uint64_t sub_1001799E0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, _DWORD *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, int a21, unsigned int a22)
{
  *a5 = 0LL;
  *a6 = 0;
  a22 = 31090337
  uint64_t v24 = sub_100180004(&a21);
  return (*(uint64_t (**)(uint64_t))(v23 + 8LL * ((3522 * (a21 == 774154701)) ^ v22)))(v24);
}

uint64_t sub_100179A74( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, unint64_t *a21, int a22, unsigned int a23)
{
  a21 = &STACK[0x17731A7695F8FE95];
  a23 = 3673 - ((&a21 + 910505281 - 2 * (&a21 & 0x36453541)) ^ 0xF1C45508) * v23;
  sub_10013E2D8((uint64_t)&a21);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 8LL * ((22 * ((((a22 == 774154701) ^ 0xD78CDAFE) & 1) == 0)) ^ 0x6E9u)))( v26,  v27,  v28,  v29,  v30,  v31,  v32,  v33,  a9,  v24,  v25,  a12,  a13,  a14);
}

uint64_t sub_100179B2C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, int a21, uint64_t a22, int a23, uint64_t a24)
{
  int v30 = 366490169 * ((((2 * v24) | 0xEB11DC1E) - v24 + 175575537) ^ 0xE326B84B);
  a23 = v29 + 774 + v30;
  a21 = (v28 ^ 0xBB5FFFD6) + ((2 * v28) & 0x76BFFFAC) + 1992212476 + v30;
  a22 = a16;
  sub_100092B3C((uint64_t)&a21);
  int v31 = 366490169 * ((v24 - 829222525 - 2 * (v24 & 0xCE931183)) ^ 0xD83D47C7);
  a23 = v29 + 774 + v31;
  a22 = a16;
  a21 = (v27 ^ 0xBBDFFFDE) + ((v29 + 2009071009) & (2 * v27)) + 1983823860 + v31;
  sub_100092B3C((uint64_t)&a21);
  a23 = v29 + 2520 - 366490169 * ((((2 * v24) | 0x22B93850) - v24 + 1856201688) ^ 0x87F2CA6C);
  a24 = a16;
  a22 = 0x17F1D366B5901A3BLL * v26
      - 366490169 * ((((2 * v24) | 0x727525BB22B93850LL) - v24 - 0x393A92DD915C9C28LL) ^ 0x13A427C987F2CA6CLL)
      + 0x31CE25EE95E3DA93LL;
  uint64_t v32 = (void (*)(int *))*(&off_1003E8E60 + v29 - 431);
  v32(&a21);
  uint64_t v33 = 366490169 * (((v24 | 0x765BB2A311A74DFELL) - (v24 & 0x765BB2A311A74DFELL)) ^ 0x5CC507B707091BBALL);
  a22 = 0x17F1D366B5901A3BLL * a14 - v33 + 0x31CE25EE95E3DA93LL;
  a23 = v29 + 2520 - v33;
  a24 = a16;
  uint64_t v34 = ((uint64_t (*)(int *))v32)(&a21);
  return ((uint64_t (*)(uint64_t))(*(void *)(v25 + 8LL * ((1302 * (a21 == 774154701)) ^ v29)) - 4LL))(v34);
}

uint64_t sub_100179D70( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, unint64_t *a21, int a22, uint64_t a23, unsigned int a24, int a25, int a26)
{
  unsigned int v28 = 1314530549 * ((((2 * &a21) | 0x90A6D65A) - &a21 - 1213426477) ^ 0xF95AEDE3);
  a23 = a16;
  a26 = v28 ^ 0x4A7654E4;
  a24 = 1782399395 - v28;
  a22 = (v27 + 1780980540) ^ v28;
  a21 = &STACK[0x26BE0E4707FD38D0];
  uint64_t v29 = sub_1001804F8((uint64_t)&a21);
  return ((uint64_t (*)(uint64_t))(*(void *)(v26
                                                      + 8LL
                                                      * (int)(((a25 == 774154701)
                                                             * ((v27 + 833335651) & 0xCE544FF1 ^ 0x66C)) ^ v27))
                                          - (((v27 + 553) | 0x2BBu) ^ 0x6FBLL)))(v29);
}

uint64_t sub_100179E64( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20, unint64_t *a21, unint64_t *a22, unint64_t *a23, unsigned int a24, unint64_t *a25)
{
  a24 = v26
  a21 = a15;
  a22 = &STACK[0xDA7C2EADEDFF505];
  a23 = &STACK[0x469B4FB993658D2C];
  sub_1001800A8((uint64_t)&a21);
  LODWORD(a22) = (v26 + 219) ^ (1401278017
                              * ((2 * (&a21 & 0x34871908) - &a21 - 881269003) ^ 0xCF5B9012));
  a21 = &STACK[0x3C06360CF86149C8];
  a23 = a15;
  a25 = &STACK[0x5DF7F15B2688CCAE];
  ((void (*)(unint64_t **))((char *)*(&off_1003E8E60 + (v26 ^ 0x398)) - 12))(&a21);
  HIDWORD(a21) = (v26 + 487) ^ ((&a21 ^ 0xB10986CE) * v27);
  a22 = a15;
  a23 = (unint64_t *)&a20;
  ((void (*)(unint64_t **))((char *)*(&off_1003E8E60 + (v26 ^ 0x3FB)) - 8))(&a21);
  a22 = a15;
  LODWORD(a23) = v26
  uint64_t v28 = sub_1001228D8((uint64_t)&a21);
  return ((uint64_t (*)(uint64_t))(*(void *)(v25 + 8LL * ((2766 * ((_DWORD)a21 == 774154701)) ^ v26))
                                          - ((v26 - 856) | 0x203u)
                                          + 535LL))(v28);
}

uint64_t sub_10017A05C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20)
{
}

uint64_t sub_10017A0E0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20, int a21)
{
  unsigned int v23 = (a21 ^ 0x90AAE519) - ((2 * (a21 ^ 0x90AAE519)) & 0x4486BE) + 2245471;
  BOOL v24 = (((3 * (v21 ^ 0xE3E)) ^ 0xBDDF74DD) & (2 * v23) ^ 0x440698) + (v23 ^ 0x5ECDFC33) - 134521152 != 1458249260;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 + 8LL * ((v24 | (16 * v24)) ^ v21)) - 12LL))( a1,  a2,  a3,  a4,  a5,  a6,  3616332006LL,  a12);
}

uint64_t sub_10017A17C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  BOOL v11 = v9 + v8 + (v7 ^ 0x25Du) - 1592774304 < ((((v7 ^ 0x25D) + 1082161612) | 0x970C5098) ^ (a7 + 170));
  return ((uint64_t (*)(void))(*(void *)(v10 + 8LL * (v11 | (2 * v11) | v7 ^ 0x25Du)) - 8LL))();
}

uint64_t sub_10017A1F0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8)
{
  return ((uint64_t (*)(void))(*(void *)(v10
                                        + 8LL
                                        * ((2543 * (v8 - a8 >= (unint64_t)((v9 - 678594160) & 0x28728FDF) - 3117)) ^ v9))
                            + 3616329893LL
}

uint64_t sub_10017A24C(uint64_t a1, unsigned int a2)
{
  return ((uint64_t (*)(void))(*(void *)(v3 + 8LL * ((41 * ((((a2 - 3019) ^ (v2 < 0x20)) & 1) == 0)) ^ a2)) - 12LL))();
}

uint64_t sub_10017A284( uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v16 = (v15 + v12);
  __int128 v17 = *(_OWORD *)(v11 + v16 - 15);
  __int128 v18 = *(_OWORD *)(v11 + v16 - 31);
  uint64_t v19 = a8 + v16;
  *(_OWORD *)(v19 - 15) = v17;
  *(_OWORD *)(v19 - 31) = v18;
  return (*(uint64_t (**)(uint64_t))(a11
                                            + 8LL
                                            * (int)((3647
                                                   * (((((a2 - 539112112) & 0xF7AEFFFA) + v13 + 1065) ^ 0xBFA) == (v14 & 0xFFFFFFE0))) ^ (((a2 - 539112112) & 0xF7AEFFFA) + v13))))(3066LL);
}

uint64_t sub_10017A2FC( uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return ((uint64_t (*)(void))(*(void *)(a11 + 8LL * ((((a2 ^ 0x1DF) - 564) * (v11 != v12)) ^ a2)) - 8LL))();
}

uint64_t sub_10017A328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return ((uint64_t (*)(void))(*(void *)(v9
                                        + 8LL
                                        * ((((v7 & 0x18) != ((v8 - 5386315) & 0xD7DEFFDD ^ (a7 + 178)))
                                          * ((v8 - 1832) ^ 0x2DE)) ^ (v8 - 1832)))
                            - 4LL))();
}

uint64_t sub_10017A37C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(a8 - 7 + (v11 + v9 - v12)) = *(void *)(v8 - 7 + (v11 + v9 - v12));
}

uint64_t sub_10017A3CC(uint64_t a1, int a2, int a3, uint64_t a4, int a5)
{
  *(void *)(a4 + (v5 - v6)) = *(void *)(a1 + (v5 - v6));
  return ((uint64_t (*)(void))(*(void *)(v8 + 8LL * (((a3 + v6 - 725 == a2) * a5) ^ v7)) - 4LL))();
}

uint64_t sub_10017A3FC(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return ((uint64_t (*)(void))(*(void *)(v8
}

uint64_t sub_10017A43C( int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8)
{
  *(_BYTE *)(a8 + (v12 + v10)) = *(_BYTE *)(v9 + (v12 + v10));
  return ((uint64_t (*)(void))(*(void *)(v13 + 8LL * ((253 * (v12 - 1 != v8)) ^ (v11 + a1 + 460)))
}

uint64_t sub_10017A480@<X0>( unsigned int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int *a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  *a6 = (((((4 * v11) ^ 0x2B64) - 349) | 8) + 606779179) ^ (a1 >> 2);
  return (*(uint64_t (**)(void))(v12 + 8LL * (((a11 == v13) | (2 * (a11 == v13))) ^ v11)))();
}

uint64_t sub_10017A4CC@<X0>(int a1@<W8>)
{
  BOOL v4 = ((uint64_t (*)(void))*(&off_1003E8E60 + (v1 ^ 0x36C)))(a1 ^ (v3 + 489) ^ (77 * (v1 ^ 0x377u))) != 0;
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * ((v4 * ((v1 + 1236) ^ 0xFB5)) ^ v1)) - 4LL))();
}

uint64_t sub_10017A530( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  unsigned int v21 = (a18 ^ v20) - ((2 * (a18 ^ v20)) & 0xF378537A) - 105109059;
  return ((uint64_t (*)(void))(*(void *)(v19
                                        + 8LL
                                        * ((25
                                          * (((2 * v21) & 0xEFF4B53C ^ 0xE3701138)
                                           + (((v18 - 2051) | 0x10A) ^ 0x8E467268 ^ v21)
                                           - 72355998 != 1940539904)) ^ v18))
                            - 8LL))();
}

uint64_t sub_10017A5C0(uint64_t a1, int a2)
{
  return ((uint64_t (*)(uint64_t, uint64_t))(*(void *)(v5
                                                               + 8LL
                                                               * (int)(((((a2 - 695433419) | 0x1005118)
                                                                       + 678632817
                                                                       + ((a2 + 1365199530) & 0xAEA0BD2F))
                                                                      * ((v3 + v2 - 2012895902) < 8)) ^ a2))
                                                   - 4LL))( a1,  v4);
}

uint64_t sub_10017A654(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5
                                                     + 8LL
                                                     * ((30
                                                       * (v3 - a1 >= ((a3 - 8) ^ a3 ^ (v6 - 2089) ^ 0xD78CD0A5uLL))) ^ a3)))( a1,  v4);
}

uint64_t sub_10017A694(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return ((uint64_t (*)(void))(*(void *)(v7 + 8LL * ((((v8 + a6 - 2155) ^ v8 ^ 0x140) * (v6 < 0x20)) ^ a6)) - 12LL))();
}

uint64_t sub_10017A6C8( uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  v16.i64[0] = 0x7676767676767676LL;
  v16.i64[1] = 0x7676767676767676LL;
  uint64_t v17 = (v15 + v12);
  int8x16_t v18 = *(int8x16_t *)(v11 + v17 - 15);
  int8x16_t v19 = *(int8x16_t *)(v11 + v17 - 31);
  uint64_t v20 = a1 + v17;
  *(int8x16_t *)(v20 - 15) = veorq_s8(v18, v16);
  *(int8x16_t *)(v20 - 31) = veorq_s8(v19, v16);
  return ((uint64_t (*)(void))(*(void *)(a11
                                        + 8LL
                                        * ((1190 * (((v13 + a4 + 1656) ^ 0xE09) == (v14 & 0xFFFFFFE0))) ^ (v13 + a4 + 823)))
                            - 12LL))();
}

uint64_t sub_10017A73C(uint64_t a1)
{
  int v4 = (v2 - 2092) | 0x203;
  *uint64_t v7 = a1;
  *unsigned int v6 = v1;
  uint64_t v11 = v8;
  unsigned int v12 = v4 + 366490169 * ((&v10 & 0xA055BB9D | ~(&v10 | 0xA055BB9D)) ^ 0x49041226) + 1661;
  v3(&v10);
  unsigned int v12 = v4
      + 1252
  uint64_t v11 = v9;
  v3(&v10);
  return 0LL;
}

void sub_10017A9FC(_DWORD *a1)
{
  unsigned int v1 = 1437274309 * ((a1 & 0x3868D84 | ~(a1 | 0x3868D84)) ^ 0xDE770F4E);
  int v2 = a1[1] ^ v1;
  unsigned int v3 = a1[2] + v1;
  unsigned int v4 = *a1 + v1;
  int v5 = a1[3] ^ v1;
  unsigned int v6 = a1[4] + v1;
  uint64_t v7 = (unsigned int *)*(&off_1003E8E60 + v2 - 862);
  *uint64_t v7 = v3;
  v7[1] = v4;
  v7[2] = v5;
  v7[3] = v6;
  __asm { BR              X8 }

uint64_t sub_10017AAC0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, unsigned int a11, unsigned int a12, int a13, unsigned int a14)
{
  unsigned int v16 = 1761959447 * ((-223139716 - (&a10 | 0xF2B3287C) + (&a10 | 0xD4CD783)) ^ 0xACEB1647);
  a13 = v14 - v16 + 1135;
  a14 = 102989021 - v16;
  a11 = 568455998 - v16;
  a12 = 726623028 - v16;
  uint64_t v17 = sub_10013F0A0((uint64_t)&a10);
  return ((uint64_t (*)(uint64_t))(*(void *)(v15 + 8LL * ((250 * (a10 != 359155368)) ^ v14)) - 8LL))(v17);
}

void sub_10017AB6C()
{
  *(_DWORD *)(v1 + 12) = (*(_DWORD *)(v1 + 12) & 0xFFFFFFF7 ^ (v0 + 8))
                       + v0
                       - 2 * ((*(_DWORD *)(v1 + 12) & 0xFFFFFFF7 ^ (v0 + 8)) & (v0 + 18) ^ *(_DWORD *)(v1 + 12) & 0x12);
}

void sub_10017ABD0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a2) {
    BOOL v8 = a3 == 0;
  }
  else {
    BOOL v8 = 1;
  }
  int v12 = !v8 && a6 != 0 && a7 != 0 && a8 != 0;
  __asm { BR              X9 }

uint64_t sub_10017AC54( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, _DWORD *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, unsigned int a20)
{
  *a6 = 0LL;
  *a7 = 0;
  a20 = 31090337 * (&a19 ^ 0xC7816049) + 1655392376;
  uint64_t v22 = sub_100180004(&a19);
  return ((uint64_t (*)(uint64_t))(*(void *)(v20 + 8LL * ((1686 * (a19 == 774154701)) ^ v21)) - 12LL))(v22);
}

uint64_t sub_10017ACD4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unint64_t *a19, unsigned int a20, unsigned int a21, unsigned int a22)
{
  unsigned int v23 = 1434876433
      * (((&a19 ^ 0x449E3CBB) - 933416565 - 2 * ((&a19 ^ 0x449E3CBB) & 0xC85D318B)) ^ 0x78A1399D);
  a21 = 2164 - v23;
  a22 = v23 + 670369722;
  LODWORD(a19) = v23 + 1599870343;
  HIDWORD(a19) = v23 ^ 0x1FBEC14F;
  sub_10012C8B0((uint64_t)&a19);
  if (a20 < 0x5F64C250) {
    int v24 = 1;
  }
  else {
    int v24 = 2;
  }
  unint64_t v34 = __PAIR64__(v24, a20);
  a21 = 3673 - 31090337 * (&a19 ^ 0xC7816049);
  a19 = &STACK[0x17731A7695F8FE85];
  sub_10013E2D8((uint64_t)&a19);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))(*(void *)(v22 + 8LL * ((2410 * (a20 == 774154701)) ^ 0x1E7)) - 12LL))( v25,  v26,  v27,  v28,  v29,  v30,  v31,  v32,  a9,  a10,  v34,  a12);
}

uint64_t sub_10017AE10( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, unsigned int a23)
{
  unsigned int v30 = 366490169
      * (((&a19 | 0x3D0BB769) - &a19 + (&a19 & 0xC2F44890)) ^ 0x2BA5E12D);
  a20 = a14;
  LODWORD(a21) = v30 + 1313;
  LODWORD(a19) = (v28 ^ 0xB77FFFF7) + ((2 * v28) & 0x6EFFFFEE) + 2057224155 + v30;
  sub_100092B3C((uint64_t)&a19);
  HIDWORD(a20) = (375636451 * (&a19 ^ 0x533E5A8C)) ^ 0xA1F;
  a19 = v27;
  a21 = a14;
  sub_100126D60((uint64_t)&a19);
  unsigned int v31 = 366490169 * (((&a19 | 0xB9EDBE2B) - (&a19 & 0xB9EDBE2B)) ^ 0xAF43E86F);
  LODWORD(a21) = v31 + 1313;
  LODWORD(a19) = (v26 ^ 0xB23EFFDA) + ((2 * v26) & 0x647DFFB5) + 2145370104 + v31;
  a20 = a14;
  sub_100092B3C((uint64_t)&a19);
  unsigned int v32 = 31090337 * (&a19 ^ 0xC7816049);
  a20 = v24;
  a22 = a14;
  a23 = (v25 ^ 0xF96F7FBF) + ((2 * v25) & 0xF2DEFF7E) - v32 + 934673911;
  LODWORD(a21) = v32 + 629;
  sub_100158508((uint64_t)&a19);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8LL * ((1009 * ((_DWORD)a19 == 774154701)) ^ 0x91Bu)))( v33,  v34,  v35,  v36,  v37,  v38,  v39,  v40,  a9,  v23,  a11,  a12,  a13,  a14);
}

uint64_t sub_10017B02C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unint64_t *a20, int a21, uint64_t a22, unsigned int a23, int a24, int a25)
{
  unsigned int v27 = 1314530549 * (((&a20 | 0xC247DB03) + (~&a20 | 0x3DB824FC)) ^ 0x734E5DCC);
  a21 = v27 ^ 0x6A279D57;
  a22 = a15;
  a25 = (a12 - ((2 * a12) & 4) + 1249268966) ^ v27;
  a23 = 1512395500 - v27;
  a20 = &STACK[0x26BE0E4707FD38D0];
  uint64_t v28 = sub_1001804F8((uint64_t)&a20);
  return (*(uint64_t (**)(uint64_t))(v26 + 8LL * ((1337 * (a24 == v25)) ^ 0x91Bu)))(v28);
}

uint64_t sub_10017B110( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unint64_t *a19, unsigned int a20, uint64_t a21, uint64_t a22, unint64_t *a23)
{
  a19 = &STACK[0x3C06360CF86149A4];
  a20 = (v23 + 244) ^ (1401278017 * (&a19 ^ 0x42376E7));
  a23 = &STACK[0x5DF7F15B2688CCAE];
  a21 = a15;
  uint64_t v25 = ((uint64_t (*)(unint64_t **))((char *)*(&off_1003E8E60 + v23 - 623) - 12))(&a19);
  return ((uint64_t (*)(uint64_t))(*(void *)(v24 + 8LL * (((v23 ^ 0xE1A) * (a11 < 0x5F64C250)) ^ v23)) - 8LL))(v25);
}

uint64_t sub_10017B1D0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, char a17, __int16 a18, char a19, __int16 a20, char a21, uint64_t a22, int a23, unsigned int a24, uint64_t a25, char *a26)
{
  a24 = (v28 + 512) ^ (((2 * (&a23 & 0x50D4BE28) - &a23 - 1356119598) ^ 0x1E22C71C) * v27);
  a25 = a15;
  a26 = &a19;
  v26(&a23);
  a24 = (v28 + 512) ^ ((((&a23 ^ 0xDDF4B9A3 | 0xBF18B354)
                       - (&a23 ^ 0xDDF4B9A3)
  a25 = a15;
  a26 = &a21;
  v26(&a23);
  a24 = (v28 + 512) ^ (((&a23 & 0x2D2B7496 | ~(&a23 | 0x2D2B7496)) ^ 0x63DD0DA7) * v27);
  a25 = a15;
  a26 = &a17;
  v26(&a23);
  LODWORD(a26) = v28
               + 599
               - 476588053
  a25 = a15;
  uint64_t v30 = sub_1001228D8((uint64_t)&a23);
  return ((uint64_t (*)(uint64_t))(*(void *)(v29
                                                      + 8LL
                                                      * (((a23 == 774154701) * (((v28 - 688129564) & 0x29040BDF) - 23)) ^ (v28 + 599)))
                                          - 12LL))(v30);
}

uint64_t sub_10017B37C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17)
{
  return ((uint64_t (*)(void))(*(void *)(v18 + 8LL * ((2964 * (a17 == 0)) ^ v17)) - 12LL))();
}

uint64_t sub_10017B3D8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17, int a18, char a19)
{
  *uint64_t v20 = a19;
  return ((uint64_t (*)(void))(*(void *)(v21 + 8LL * ((541 * (a16 != -1867848423)) ^ v19)) - 12LL))();
}

uint64_t sub_10017B424@<X0>(int a1@<W8>)
{
  BOOL v4 = ((uint64_t (*)(void))*(&off_1003E8E60 + (v2 ^ 0x5B2)))(a1 ^ v1) != 0;
  return ((uint64_t (*)(void))(*(void *)(v3 + 8LL * ((v4 * (((v2 ^ 0xEDE) - 597) ^ 0x961)) ^ v2)) - 12LL))();
}

uint64_t sub_10017B478( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16)
{
  int v19 = (((v16 ^ 0x868) + 662 + v17) ^ a16) - ((2 * (((v16 ^ 0x868) + 662 + v17) ^ a16)) & 0x4486BE) + 2245471;
  return ((uint64_t (*)(void))(*(void *)(v18
                                        + 8LL
                                        * ((182
                                          * (((2 * v19) & 0xBDDF7ED8 ^ 0x440698) + (v19 ^ 0x5ECDFC33) - 134521152 != 1458249260)) ^ v16))
                            - 12LL))();
}

uint64_t sub_10017B504(uint64_t a1, int a2)
{
  return ((uint64_t (*)(void))(*(void *)(v4
                                        + 8LL
                                        * ((112
                                          * (a2 + v3 - 1592770412 < 453 * (((v2 + 541068266) | 0x80C020) ^ 0x20C0CF24u)
                                                                  - 2710)) ^ v2))
                            - 8LL))();
}

uint64_t sub_10017B57C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
}

uint64_t sub_10017B5C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return ((uint64_t (*)(void))(*(void *)(v7 + 8LL * ((((a5 ^ 0xB4E) - 549507979 + a5 + v5) * (v6 < 0x20)) ^ a5)) - 8LL))();
}

uint64_t sub_10017B600(uint64_t a1, int a2, int a3, uint64_t a4, int a5)
{
  unsigned int v10 = a5 + a2 + v8 + a3;
  uint64_t v11 = v5 + v10;
  __int128 v12 = *(_OWORD *)(v11 - 31);
  uint64_t v13 = a1 + v10;
  *(_OWORD *)(v13 - 15) = *(_OWORD *)(v11 - 15);
  *(_OWORD *)(v13 - 31) = v12;
  return ((uint64_t (*)(void))(*(void *)(v9 + 8LL * ((1674 * ((v6 & 0xFFFFFFE0) == 32)) ^ (v7 - 549506040))) - 4LL))();
}

void sub_10017B668()
{
}

uint64_t sub_10017B674(uint64_t a1)
{
  *int v7 = a1;
  *int v8 = v2;
  int v5 = (v1 ^ 0xCB5) - 1844;
  uint64_t v12 = v10;
  unsigned int v13 = (v1 ^ 0xCB5)
      + (((&v11 | 0x3F4CA492) - &v11 + (&v11 & 0xC0B35B68)) ^ 0x29E2F2D6) * v4
      - 131;
  v3(&v11);
  uint64_t v12 = v9;
  unsigned int v13 = v5 + (&v11 ^ 0x16AE5644) * v4 + 1713;
  v3(&v11);
  return 0LL;
}

void sub_10017B918(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a3) {
    BOOL v7 = a7 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  int v9 = !v7 && a6 != 0;
  __asm { BR              X8 }

uint64_t sub_10017B98C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, _DWORD *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, unsigned int a20)
{
  *a6 = 0LL;
  *a7 = 0;
  a20 = 31090337 * (&a19 ^ 0xC7816049) + 1655392376;
  uint64_t v22 = sub_100180004(&a19);
  return (*(uint64_t (**)(uint64_t))(v20 + 8LL * ((81 * (a19 == 774154701)) ^ v21)))(v22);
}

uint64_t sub_10017BA04( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unint64_t *a19, int a20, unsigned int a21)
{
  a21 = 3673 - ((((2 * &a19) | 0x58668226) - &a19 + 1405927149) ^ 0x6BB2215A) * v21;
  a19 = &STACK[0x17731A7695F8FE9D];
  sub_10013E2D8((uint64_t)&a19);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 8LL * (((32 * (a20 == 774154701)) | ((a20 == 774154701) << 10)) ^ 0x3BBu)))( v23,  v24,  v25,  v26,  v27,  v28,  v29,  v30,  a9,  a10,  a11,  a12);
}

uint64_t sub_10017BAB8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22)
{
  unsigned int v30 = 366490169 * (((&a20 | 0xA80A886E) - (&a20 & 0xA80A886E)) ^ 0xBEA4DE2A);
  a21 = a18;
  LODWORD(a20) = (v27 ^ 0xBB7FFFF2) + ((2 * v27) & 0x76FFFFE4) + 1990115296 + v30;
  LODWORD(a22) = v28 + 673 + v30;
  sub_100092B3C((uint64_t)&a20);
  HIDWORD(a12) = v28 + 36;
  unsigned int v31 = 366490169
      * ((((&a20 | 0xCB9F0832) ^ 0xFFFFFFFE) - (~&a20 | 0x3460F7CD)) ^ 0x22CEA189);
  LODWORD(a22) = v28 + 673 + v31;
  a21 = a18;
  LODWORD(a20) = v31
               + ((v26 >> ((-65 * (v28 ^ 0x85)) ^ 0x9Bu)) ^ 0xFAFFFFD7)
               + (((v28 + 36) ^ 0xF5FFFD0A) & (2 * (v26 >> ((-65 * (v28 ^ 0x85)) ^ 0x9Bu))))
               + 924762107;
  sub_100092B3C((uint64_t)&a20);
  unsigned int v32 = 366490169 * (((&a20 | 0x587E20FB) + (~&a20 | 0xA781DF04)) ^ 0x4ED076BE);
  LODWORD(a20) = (v26 ^ 0xBA3FFFFF) + ((2 * v26) & 0x747FFFFE) + 2011086803 + v32;
  LODWORD(a22) = v28 + 673 + v32;
  a21 = a18;
  sub_100092B3C((uint64_t)&a20);
  a22 = a18;
  a20 = v25;
  HIDWORD(a21) = (v28 + 1951) ^ (375636451
                               * (((&a20 | 0x53252FD2) - (&a20 & 0x53252FD2)) ^ 0x1B755E));
  ((void (*)(uint64_t *))*(&off_1003E8E60 + (v28 ^ 0x27F)))(&a20);
  unsigned int v33 = 366490169
      * (((&a20 | 0x9609D5E4) - &a20 + (&a20 & 0x69F62A18)) ^ 0x80A783A0);
  LODWORD(a22) = v28 + 673 + v33;
  LODWORD(a20) = (v24 ^ 0x72DFFFD7) + ((2 * v24) & 0xE5BFFFAE) - 1086406661 + v33;
  a21 = a18;
  sub_100092B3C((uint64_t)&a20);
  unsigned int v34 = 366490169 * (((&a20 | 0x337CE9DE) - (&a20 & 0x337CE9DE)) ^ 0x25D2BF9A);
  LODWORD(a22) = v28 + 673 + v34;
  a21 = a18;
  LODWORD(a20) = (a15 ^ 0x3B9EFFFB) + ((2 * a15) & 0xFFFFFFF7) - 159399977 + v34;
  sub_100092B3C((uint64_t)&a20);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 8LL * (((4 * (HIDWORD(a22) != 774154701)) | (32 * (HIDWORD(a22) != 774154701))) ^ v28)))( v35,  v36,  v37,  v38,  v39,  v40,  v41,  v42,  a9,  v29,  v22,  a12,  a13);
}

uint64_t sub_10017BDE4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unint64_t *a20, int a21, uint64_t a22, unsigned int a23, int a24, int a25)
{
  unsigned int v26 = 1314530549 * ((((2 * &a20) | 0xDB90A438) - &a20 - 1841844764) ^ 0xDCC1D4D2);
  a22 = a18;
  a20 = &STACK[0x26BE0E4707FD38D8];
  a21 = (a13 + 1780980403) ^ v26;
  a23 = -546008682 - v26;
  a25 = v26 ^ 0x4A7654E7;
  uint64_t v27 = sub_1001804F8((uint64_t)&a20);
  return (*(uint64_t (**)(uint64_t))(v25
                                            + 8LL
                                            * (((a24 == 774154701) * (((a13 + 151) | 0x80) + (a13 ^ 0xC5A))) ^ a13)))(v27);
}

uint64_t sub_10017BEB8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, char *a17, uint64_t a18, int a19, char a20, unint64_t *a21, char *a22, char *a23, uint64_t a24, unint64_t *a25)
{
  LODWORD(a22) = ((a13 ^ 0x853) - 1708) ^ (1401278017 * (&a21 ^ 0x42376E7));
  a21 = &STACK[0x3C06360CF86149B4];
  a25 = &STACK[0x5DF7F15B2688CC96];
  a23 = a17;
  ((void (*)(unint64_t **))((char *)*(&off_1003E8E60 + (a13 ^ 0x853) - 2575) - 12))(&a21);
  a22 = a17;
  a23 = &a20;
  ((void (*)(unint64_t **))((char *)*(&off_1003E8E60 + (a13 ^ 0x22F)) - 8))(&a21);
  a22 = a17;
  LODWORD(a23) = (a13 ^ 0x853)
               - 476588053
               * (((&a21 ^ 0x37A4E9CF | 0x6A469A31)
                 - (&a21 ^ 0x37A4E9CF)
  uint64_t v27 = sub_1001228D8((uint64_t)&a21);
  return ((uint64_t (*)(uint64_t))(*(void *)(v26
                                                      + 8LL
                                                      * ((511 * ((_DWORD)a21 == (a13 ^ 0x28601865) + 96767756)) ^ a13 ^ 0x853))
                                          - (((a13 ^ 0x853u) - 2131) ^ 0x2A0LL)))(v27);
}

uint64_t sub_10017C04C()
{
  if (!v6 || v6 == -42052) {
    __asm { BR              X9 }
  }

  uint64_t v8 = v3;
  unsigned int v9 = 366490169 * ((((2 * &v7) | 0xBC69B594) - &v7 + 566961462) ^ 0xC89A8C8E) + 2200;
  v0(&v7);
  uint64_t v8 = v4;
  unsigned int v9 = 366490169 * ((2 * (&v7 & 0x291578C0) - &v7 + 1458210618) ^ 0x4044D17E) + 2200;
  v0(&v7);
  return ((2 * v6) & 0xFEC957DA) + 784334304 + (v6 ^ 0xFF64ABED) - 774154701;
}

void sub_10017C610(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 32) ^ (1697562443 * (a1 ^ 0xD7903884));
  __asm { BR              X8 }

uint64_t sub_10017C6AC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, unsigned int a16)
{
  a16 = v17
      + 31090337
  uint64_t v18 = sub_100180004(&a15);
  return ((uint64_t (*)(uint64_t))(*(void *)(v16 + 8LL * ((2387 * (a15 == 774154701)) ^ v17)) - 12LL))(v18);
}

uint64_t sub_10017C730( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, int a16, unsigned int a17)
{
  a15 = &STACK[0x17731A7695F8FE85];
  a17 = v19 - (((&a15 | 0xFDD2FA47) - (&a15 & 0xFDD2FA47)) ^ 0x3A539A0E) * v20 + 3087;
  sub_10013E2D8((uint64_t)&a15);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 + 8LL * ((3626 * (a16 == v17 + v19)) ^ v19)) - 12LL))( v21,  v22,  v23,  v24,  v25,  v26,  v27,  v28);
}

uint64_t sub_10017C7BC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned int a16, unsigned int a17, uint64_t a18, int a19)
{
  uint64_t v28 = v19[5];
  uint64_t v29 = *v19;
  a15 = v19[1];
  a18 = a14;
  a17 = (v23 + 1305) ^ (375636451
                      * (((&a15 | 0xB9FD897F) - (&a15 & 0xB9FD897F)) ^ 0xEAC3D3F3));
  uint64_t v24 = *(void (**)(uint64_t *))(v21 + 8LL * (v23 ^ 0x5F9));
  v24(&a15);
  a18 = a14;
  a15 = v28;
  a17 = (v23 + 1305) ^ (375636451 * (&a15 ^ 0x533E5A8C));
  v24(&a15);
  a15 = a14;
  a18 = v29;
  a16 = v23
      + ((2 * ((&a15 ^ 0x9292D997) & 0xEB0CB53) - (&a15 ^ 0x9292D997) + 1901016236) ^ 0x344DD5BF)
      * v22
      - 834;
  uint64_t v25 = ((uint64_t (*)(uint64_t *))(*(void *)(v21 + 8LL * (v23 ^ 0x5CC)) - 4LL))(&a15);
  BOOL v26 = a19 == 293 * (v23 ^ 0x504) + 774154115;
  return ((uint64_t (*)(uint64_t))(*(void *)(v20 + 8LL * (((4 * v26) | (8 * v26)) ^ v23)) - 4LL))(v25);
}

uint64_t sub_10017C924( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, int a16, uint64_t a17, unsigned int a18, int a19, int a20)
{
  unsigned int v23 = 1314530549
      * (((&a15 | 0x72721CB1) - &a15 + (&a15 & 0x8D8DE348)) ^ 0xC37B9A7F);
  a16 = (v22 + 1780979793) ^ v23;
  a20 = v23 ^ 0x4A7654E7;
  a18 = 937924302 - v23;
  a15 = &STACK[0x26BE0E4707FD38B8];
  a17 = a14;
  uint64_t v24 = sub_1001804F8((uint64_t)&a15);
  return ((uint64_t (*)(uint64_t))(*(void *)(v21
                                                      + 8LL
                                                      * ((3778 * (a19 == ((v22 - 700) ^ 0x3EC ^ (v20 + 232)))) ^ v22))
                                          - 4LL))(v24);
}

uint64_t sub_10017C9F8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, __int16 a14, char a15, uint64_t a16, int a17, unsigned int a18, uint64_t a19, char *a20)
{
  a19 = a12;
  a20 = &a13;
  a18 = (v21 + 945) ^ (1314530549
                     * ((422313790 - (&a17 | 0x192BFF3E) + (&a17 | 0xE6D400C1)) ^ 0x57DD860F));
  unsigned int v23 = (void (*)(int *))(*(void *)(v22 + 8LL * (v21 - 283)) - 8LL);
  v23(&a17);
  a19 = a12;
  a20 = &a15;
  a18 = (v21 + 945) ^ (1314530549
                     * ((1044234901 - (&a17 | 0x3E3DC295) + (&a17 | 0xC1C23D6A)) ^ 0x70CBBBA4));
  v23(&a17);
  LODWORD(a20) = v21
  a19 = a12;
  uint64_t v24 = sub_1001228D8((uint64_t)&a17);
  return ((uint64_t (*)(uint64_t))(*(void *)(v20
                                                      + 8LL * ((1271 * (a17 == ((2 * v21) ^ 0x106) + 774154115)) ^ v21))
                                          - 12LL))(v24);
}

uint64_t sub_10017CB44( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  return ((uint64_t (*)(void))(*(void *)(v14
}

uint64_t sub_10017CBC0@<X0>(int a1@<W8>)
{
  *int v2 = v8;
  uint64_t v11 = v7;
  unsigned int v12 = a1
      + 366490169
  v4(&v10);
  unsigned int v12 = a1 + 366490169 * (((&v10 | 0x3504551A) - (&v10 & 0x3504551A)) ^ 0x23AA035E) + 1614;
  uint64_t v11 = v9;
  uint64_t result = ((uint64_t (*)(uint64_t *))v4)(&v10);
  *(_DWORD *)(v1 + 16) = v3 + 586;
  return result;
}

uint64_t sub_10017CCB4(uint64_t a1)
{
  int v2 = *(_DWORD *)(*(void *)a1 - 0x6C4CF1741AD15CC1LL) + 552155094;
  int v3 = *(_DWORD *)(*(void *)(a1 + 16) - 0x6C4CF1741AD15CC1LL) + 552155094;
  int v4 = (v2 < -984855631) ^ (v3 < -984855631);
  BOOL v5 = v2 > v3;
  if (v4) {
    BOOL v6 = v2 < -984855631;
  }
  else {
    BOOL v6 = v5;
  }
  int v1 = *(_DWORD *)(a1 + 12) ^ (366490169 * ((2 * (a1 & 0x19FAA4E9) - a1 + 1711627030) ^ 0x70AB0D52));
  return (*((uint64_t (**)(void))*(&off_1003E8E60 + (v1 ^ 0x57C)) + ((v6 * (((v1 - 871) | 0xC44) - 3196)) ^ v1) - 1))();
}

uint64_t sub_10017CD94()
{
  int v4 = v1 - 941557980 + 311 * (v2 ^ 0xD5F);
  BOOL v5 = v4 < (((v2 ^ 0xD5F) + 1148) ^ 0x6C440ADB);
  BOOL v6 = v3 - 941557047 < v4;
  if (v3 - 941557047 < 1816399524 != v5) {
    BOOL v6 = v5;
  }
  return ((uint64_t (*)(void))(*(void *)(v0 + 8LL * ((198 * v6) ^ v2)) - 8LL))();
}

uint64_t sub_10017CE14()
{
  int v3 = 13 * (v1 ^ 0x3FE);
  else {
    int v4 = 1220945846 - v2;
  }
  return (*(uint64_t (**)(void))(v0 + 8LL * (((v4 - 610472924 >= 0) * ((v3 - 32) ^ 0x925)) ^ v3)))();
}

uint64_t sub_10017CEA8()
{
  return (*(uint64_t (**)(void))(v0
                              + 8LL
                              * ((3825
                                * ((*(_DWORD *)(*v3 + 4LL * v5) ^ v1) <= (((v2 - 1177) | 0x479) ^ (v1 + 1127) ^ *(_DWORD *)(*v4 + 4LL * v5)))) ^ v2)))();
}

uint64_t sub_10017CEF8(uint64_t a1, unsigned int a2)
{
}

uint64_t sub_10017CF38()
{
  return (*(uint64_t (**)(void))(v0 + 8LL * (((v2 - 610472924 >= 0) * ((v1 - 32) ^ 0x925)) ^ v1)))();
}

uint64_t sub_10017CF70(uint64_t result)
{
  *(_DWORD *)(result + 8) = ((v2 - 2331) ^ 0x361CBE53) - v1;
  return result;
}

void sub_10017CF8C()
{
  __asm { BR              X8 }

uint64_t sub_10017D05C()
{
  if (v1) {
    BOOL v4 = v2 == 0;
  }
  else {
    BOOL v4 = 1;
  }
  int v6 = !v4 && v0 != 0;
  return ((uint64_t (*)(void))(*(void *)(v3 + 8LL * ((4 * v6) | (32 * v6) | 0xDD3u)) - 8LL))();
}

uint64_t sub_10017D090()
{
  return ((uint64_t (*)(void))(*(void *)(v1 + 8LL * ((1946 * (v0 != 0)) ^ 0x301u)) - 12LL))();
}

uint64_t sub_10017D0E4()
{
  *(void *)(v4 - 136) = &STACK[0x34C186D67503D0E7];
  *(_DWORD *)(v4 - 128) = v0 + 673918253 * (((v4 - 136) & 0x3B9B032 | ~((v4 - 136) | 0x3B9B032)) ^ 0x660E5465) + 1591;
  sub_1001608C4(v4 - 136);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(v3
                                                            - ((v0 - 10494978) & 0xB64459D9)
                                                            + *(void *)(v1
                                                                        + 8LL
                                                                        * ((1429 * (*(_DWORD *)(v4 - 124) == v2)) ^ v0))))( v5,  v6,  v7);
}

uint64_t sub_10017D190( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  int v23 = v15 + 34;
  unsigned int v24 = (v19 ^ 0xB2BFBFFF) + ((2 * v19) & 0x657F7FFE);
  uint64_t v25 = v22 - 136;
  int v26 = 366490169 * (((v22 - 136) & 0x3AF9638 | ~((v22 - 136) | 0x3AF9638)) ^ 0xEAFE3F83);
  *(_DWORD *)(v22 - 120) = v15 + 544 + v26;
  *(_DWORD *)(v22 - 136) = v24 + 2136932307 + v26;
  *(void *)(v22 - 128) = a15;
  sub_100092B3C(v22 - 136);
  unint64_t v27 = 366490169 * (((v25 | 0xDE63BCD258BD7DBCLL) - (v25 & 0xDE63BCD258BD7DBCLL)) ^ 0xF4FD09C64E132BF8LL);
  uint64_t v28 = v22 - 136;
  *(void *)(v28 + 24) = a15;
  *(_DWORD *)(v22 - 120) = v15 + 2290 - v27;
  *(void *)(v28 + 8) = 0x17F1D366B5901A3BLL * v18 - v27 + 0x31CE25EE95E3DA93LL;
  uint64_t v29 = (void (*)(uint64_t))*(&off_1003E8E60 + v15 - 661);
  v29(v22 - 136);
  int v30 = 366490169 * ((v22 + 453375716 - 2 * ((v22 - 136) & 0x1B05F76C)) ^ 0xDABA128);
  int v31 = (v17 ^ 0xF3FEFFFE) + ((v17 << (((v15 - 97) | 0xA) + 87)) & 0xE7FDFFFC) + 1042268116 + v30;
  *(void *)(v22 - 128) = a15;
  int v32 = v15 + 544;
  *(_DWORD *)(v22 - 136) = v31;
  *(_DWORD *)(v22 - 120) = v15 + 544 + v30;
  sub_100092B3C(v22 - 136);
  unint64_t v33 = 366490169 * (((~v25 | 0xB7DB8BB6C0800924LL) + (v25 | 0x482474493F7FF6DBLL)) ^ 0x62BAC15D29D1A09ELL);
  *(_DWORD *)(v22 - 120) = v15 + 2290 - v33;
  uint64_t v34 = v22 - 136;
  *(void *)(v34 + 8) = 0x17F1D366B5901A3BLL * v16 - v33 + 0x31CE25EE95E3DA93LL;
  *(void *)(v34 + 24) = a15;
  v29(v22 - 136);
  BOOL v35 = v21 != 0;
  if (v21) {
    int v36 = 1998503925;
  }
  else {
    int v36 = 1998503923;
  }
  unsigned int v37 = (v35 ^ 0xBAFFFFDF) + v36;
  int v38 = 366490169 * ((-1748028931 - (v25 | 0x97CF31FD) + (v25 | 0x6830CE02)) ^ 0x7E9E9846);
  *(void *)(v22 - 128) = a15;
  *(_DWORD *)(v22 - 136) = v37 + v38;
  *(_DWORD *)(v22 - 120) = v32 + v38;
  sub_100092B3C(v22 - 136);
  return (*(uint64_t (**)(uint64_t))(v20 + 8LL * (v23 ^ (3515 * v35))))(v39);
}

uint64_t sub_10017D48C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  int v22 = (((v21 - 136) & 0x542F09CC | ~((v21 - 136) | 0x542F09CC)) ^ 0xBD7EA077) * v15;
  int v23 = v22 + v17 + 1159 + (*v18 ^ 0xBF3FFFF7) + ((2 * *v18) & 0x7E7FFFEE) + 1927198769;
  *(_DWORD *)(v21 - 120) = v22 + v17 + 510;
  *(_DWORD *)(v21 - 136) = v23;
  *(void *)(v20 + 8) = a15;
  sub_100092B3C(v21 - 136);
  return (*(uint64_t (**)(void))(v16
                              + 8LL
                              * (int)(((*(_DWORD *)(v21 - 116) == v19) * (((v17 + 1159) ^ 0xB6445F73) + 1237037140)) ^ (v17 + 1159))))();
}

uint64_t sub_10017D558( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
  return (*(uint64_t (**)(void))(v9
                              + 8LL * (int)(((*(_DWORD *)(v11 - 116) == v10) * ((a9 ^ 0xB6445F73) + 1237037140)) ^ a9)))();
}

uint64_t sub_10017D5A0()
{
  int v6 = v1 - v0;
  int v7 = 1697562443 * (((v5 - 136) & 0x23DC62B0 | ~((v5 - 136) | 0x23DC62B0)) ^ 0xBB3A5CB);
  *(void *)(v4 + 16) = v3;
  *(_DWORD *)(v5 - 112) = v7 + 1631421859;
  *(_DWORD *)(v5 - 136) = 1324392429 - v7;
  *(_DWORD *)(v5 - 128) = v1 - v7 - 656;
  uint64_t v8 = ((uint64_t (*)(uint64_t))((char *)*(&off_1003E8E60 + (v1 ^ 0x7CD)) - 4))(v5 - 136);
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8LL
                                            * (((*(_DWORD *)(v5 - 132) == v6 + 2011189492) * (4 * (v1 ^ 0x63E) + 1303)) ^ v1)))(v8);
}

uint64_t sub_10017D664( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return (*(uint64_t (**)(void))(v12 + 8LL * (((327 * (v11 ^ 0x656) - 1917) * (a11 != 0)) ^ v11)))();
}

uint64_t sub_10017D6B4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v24 = a17;
  *(_DWORD *)(v23 - 132) = (v19 - 249) ^ (((v23 + 931045209 - 2 * ((v23 - 136) & 0x377E9FE1)) ^ 0x8677192F) * v20);
  *(void *)(v22 + 8) = v24;
  *(void *)(v22 + 16) = v17;
  v18(v23 - 136);
  *(void *)(v22 + 8) = a17;
  *(void *)(v22 + 16) = &a13;
  *(_DWORD *)(v23 - 132) = (v19 - 249) ^ (((((v23 - 136) | 0xB4230611) + (~(v23 - 136) | 0x4BDCF9EE)) ^ 0x52A80DE) * v20);
  v18(v23 - 136);
  uint64_t v25 = a17;
  *(_DWORD *)(v23 - 120) = v19
                         + 346
                         - 476588053 * ((((v23 - 136) | 0x65827DB) + (~(v23 - 136) | 0xF9A7D824)) ^ 0xBBA52399)
                         - 1627;
  *(void *)(v22 + 8) = v25;
  uint64_t v26 = sub_1001228D8(v23 - 136);
  return (*(uint64_t (**)(uint64_t))(v21
                                            + 8LL
                                            * ((100
                                              * (*(_DWORD *)(v23 - 136) == (((v19 - 1539046991) | 0x120050D8) ^ 0x9860F114))) ^ (v19 + 346))))(v26);
}

uint64_t sub_10017D7E8()
{
  unsigned int v5 = (v0 + 541083934) | 0x96040811;
  *(_DWORD *)(v4 - 136) = v5 - ((v4 + 1645165216 - 2 * ((v4 - 136) & 0x620F3B28)) ^ 0x74A16D6C) * v1 + 1884205388;
  *(void *)(v3 + 8) = v2;
  sub_10017FEAC(v4 - 136);
  return v5 + (v7 ^ 0x7FF6BBED) + ((2 * v7) & 0xFFED77DA) - 135686905 - 774154701;
}

void sub_10017D8C4(uint64_t a1)
{
  int v2 = 366490169 * (((a1 | 0xF141D657) - (a1 | 0xEBE29A8) + 247343528) ^ 0xE7EF8013);
  int v3 = *(_DWORD *)(a1 + 8) + v2;
  unsigned int v4 = (1314530549 * ((&v4 & 0x9AF76D8D | ~(&v4 | 0x9AF76D8D)) ^ 0xD40114BC)) ^ (v3 - 2019207194);
  nullsub_20(&v4);
  __asm { BR              X4 }

uint64_t sub_10017DA70(uint64_t a1, int a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6 + 8LL * (((((((a4 + v4) & v5) + a1) & (a3 + 1)) == v7) * a2) ^ a4)))();
}

void sub_10017DA9C()
{
}

uint64_t sub_10017DAA8@<X0>(uint64_t a1@<X8>)
{
  BOOL v5 = (*(uint64_t (**)(void))(a1 + 8LL * (v4 - 593)))((v4
                                                                                - 549103394
                                                                                + *(_DWORD *)(v3 + 24 * v2 + 16))) == 0;
  return (*(uint64_t (**)(void))(v1 + 8LL * ((21 * ((v5 ^ (v4 + 2)) & 1)) ^ v4)))();
}

uint64_t sub_10017DAFC()
{
  unsigned int v3 = v1 - ((2 * v1 - 1098205546) & 0x865E7CC6) + 578066862;
  return ((uint64_t (*)(void))(*(void *)(v0
                                        + 8LL
                                        * (((v2 - 511) | 0x500) ^ (19
                                                                 * (((2 * v3) & 0x7BEB37FE ^ ((((v2 - 511) | 0x500)
                                                                                             - 1374) | 0x6A0) ^ 0x24A3276)
                                                                  + (v3 ^ 0xFEDAA59C)
                                                                  + 1610606460 == 502629243))))
                            - 8LL))();
}

uint64_t sub_10017DBA0()
{
  return ((uint64_t (*)(void))(*(void *)(v3 + 8LL * (v0 ^ (411 * ((v2 + v1 + 1107977217) > 7))))
                            - ((v0 + 684) ^ 0x15Au)
                            + 2046LL))();
}

uint64_t sub_10017DBFC(uint64_t a1)
{
  return ((uint64_t (*)(void))(*(void *)(v3
                                        + 8LL
                                        * ((((((unint64_t)(v1 - a1) < 0x20) ^ (v2 - 1)) & 1)
                                          * (v2 ^ 0xCBD)) ^ v2))
                            - 4LL))();
}

uint64_t sub_10017DC40()
{
  return ((uint64_t (*)(void))(*(void *)(v2
                                        + 8LL
                                        * (((v0 < (((v1 ^ 0xDE1) + 931695042) & 0xC877739D ^ 0x23D))
                                          * ((((v1 ^ 0xDE1) - 267) | 1) - 547)) ^ v1 ^ 0xDE1))
                            - 4LL))();
}

uint64_t sub_10017DC94(uint64_t a1, uint64_t a2, int a3)
{
  unsigned int v9 = v7 + v5 + a3;
  uint64_t v10 = v3 + v9;
  __int128 v11 = *(_OWORD *)(v10 - 31);
  uint64_t v12 = a1 + v9;
  *(_OWORD *)(v12 - 15) = *(_OWORD *)(v10 - 15);
  *(_OWORD *)(v12 - 31) = v11;
  return (*(uint64_t (**)(void))(v8
                              + 8LL
                              * (int)((((v4 & 0xFFFFFFE0) == 32) * (((v6 + 931007560) & 0xC881F1EC) + 3377)) ^ (v6 + 299))))();
}

void sub_10017DCF8()
{
}

uint64_t sub_10017DD04()
{
  return ((uint64_t (*)(void))(*(void *)(v3
                                        + 8LL
}

uint64_t sub_10017DD38()
{
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * ((((1027 * (v1 ^ 0x52F)) ^ 0x477) * ((v0 & 0x18) == 0)) ^ v1))
                            - ((v1 ^ 0x52Fu)
                             + 539)
                            + 537LL))();
}

uint64_t sub_10017DD78(uint64_t a1)
{
  *(void *)(a1 - 7 + (v3 + v2 - v5)) = *(void *)(v1 - 7 + (v3 + v2 - v5));
  return ((uint64_t (*)(void))(*(void *)(v7
                                        + 8LL
                                        * ((1557 * (((44 * (v6 ^ 0x216)) ^ 0x1EC) + v5 == (v4 & 0xFFFFFFF8))) ^ v6))
                            - 4LL))();
}

uint64_t sub_10017DDD8()
{
}

uint64_t sub_10017DE10@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W8>)
{
  *(_BYTE *)(a1 + (v5 + v4)) = *(_BYTE *)(v3 + (v5 + v4));
  return ((uint64_t (*)(void))(*(void *)(v6
                                        + 8LL
}

uint64_t sub_10017DE68@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  *(_BYTE *)(a1 + (v7 + v3)) = *(_BYTE *)(v2 + (v7 + v3));
  return ((uint64_t (*)(void))(*(void *)(v8 + 8LL * (((v5 + v7 != a2) * v6) ^ v4)) - 8LL))();
}

uint64_t sub_10017DE94()
{
  return ((uint64_t (*)(void))(*(void *)(v2
                                        + 8LL
                                        * (((*(void *)(v1 + 32) != 0x1666E5678D817527LL)
                                          * ((27 * (v0 ^ 0x15A)) ^ 0xC25)) ^ v0))
                            - 4LL))();
}

uint64_t sub_10017DEDC@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_BYTE *)(a2 - 0x1666E5678D817527LL) = 1;
  uint64_t v4 = *v2;
  *(void *)(v2[5] - 0x3753C1983AE7F2F5LL) = result;
  *(_DWORD *)(v4 - 0x6209C59847B5CC9ALL) = v3;
  *((_DWORD *)v2 + 4) = 774154701;
  return result;
}

void sub_10017DF70(_DWORD *a1)
{
  unsigned int v1 = *a1 ^ (31090337 * ((-2 - ((a1 | 0xA6D0CF48) + (~(_DWORD)a1 | 0x592F30B7))) ^ 0x9EAE50FE));
  __asm { BR              X9 }

uint64_t sub_10017E06C@<X0>( uint64_t a1@<X8>, uint64_t a2, uint64_t a3, char a4, uint64_t a5, unint64_t *a6, int a7, unsigned int a8, unint64_t *a9)
{
  unsigned int v12 = 673918253 * (&a4 ^ 0x9A481BA8);
  a9 = &STACK[0x469B4FB993658CE4];
  a7 = v12 + v11 - 297;
  a8 = v12 + 990170406;
  a5 = v10;
  a6 = &STACK[0xDA7C2EADEDFF4C5];
  uint64_t v13 = ((uint64_t (*)(char *))(*(void *)(a1 + 8LL * (v11 ^ 0x2A5)) - 12LL))(&a4);
  return ((uint64_t (*)(uint64_t))(*(void *)(v9
                                                      + 8LL
                                                      * ((2396 * (*(_DWORD *)(v10 - 0x7DE3BD1438CBE37ALL) == 774154701)) ^ v11))
                                          - ((((v11 - 2002804251) & 0x77605FEFu) + 1866) ^ 0xC19LL)))(v13);
}

uint64_t sub_10017E154( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  return (*(uint64_t (**)(void))(v11
                              + 8LL
                              * (((((((v12 + 154794608) & 0xF6C60CD9) + v10) ^ a10) < 0x15)
                                * (((v12 - 581965337) & 0x22B01FFB) - 3301)) ^ v12)))();
}

uint64_t sub_10017E1AC()
{
  *uint64_t v2 = v1;
  int v4 = v1 - ((58 * (((v0 - 3754) | 0x510) ^ 0x51D) + 1937264776) & (2 * v1)) - 105109059;
  return ((uint64_t (*)(void))(*(void *)(v3
                                        + 8LL
                                        * ((97
                                          * (((2 * v4) & 0xEFF4B53C ^ 0xE3701138) + (v4 ^ 0x8E467323) - 72355998 != 1940539904)) ^ v0))
                            - 12LL))();
}

uint64_t sub_10017E24C(int a1)
{
  return ((uint64_t (*)(void))(*(void *)(v3
                                        + 8LL
                                        * ((86 * (v2 + v1 + ((a1 + 1948) ^ 0x8805A056 ^ ((a1 - 888) | 0x800)) < 8)) ^ a1))
                            - 8LL))();
}

uint64_t sub_10017E29C(uint64_t a1, uint64_t a2, int a3)
{
  int v6 = v3 - v4 - 4 >= (unint64_t)(a3 ^ 0x534u) - 3212;
  return (*(uint64_t (**)(void))(v5 + 8LL * (((32 * v6) | (v6 << 6)) ^ a3)))();
}

uint64_t sub_10017E2D0(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4
                                           + 8LL
                                           * ((1014
                                             * (v3 < ((((((a3 - 2328) | 0x573) - 1220028090) & 0x48B82CD7) - 1385) ^ (((a3 - 2328) | 0x573u) + 149)))) ^ ((a3 - 2328) | 0x573))))(0LL);
}

uint64_t sub_10017E320(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  unsigned int v12 = v9 + v8 + v10;
  v13.i64[0] = 0x7676767676767676LL;
  v13.i64[1] = 0x7676767676767676LL;
  uint64_t v14 = v6 + v12;
  uint64_t v15 = v5 + v12;
  int8x16_t v16 = veorq_s8(*(int8x16_t *)(v14 - 31), v13);
  *(int8x16_t *)(v15 - 15) = veorq_s8(*(int8x16_t *)(v14 - 15), v13);
  *(int8x16_t *)(v15 - 31) = v16;
  return (*(uint64_t (**)(void))(v11 + 8LL * ((((v7 & 0xFFFFFFE0) == 32) * (328 * (a5 ^ 0xC13) - 617)) ^ (a5 - 2106))))();
}

void sub_10017E388()
{
}

void sub_10017E394()
{
  *(_DWORD *)(v0 + 16) = v1 | 0xA4;
}

void sub_10017E5F0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) - 673918253 * ((a1 & 0xD8AC91B6 | ~(a1 | 0xD8AC91B6)) ^ 0xBD1B75E1);
  __asm { BR              X12 }

uint64_t sub_10017E6CC@<X0>( int a1@<W8>, uint64_t a2, uint64_t a3, char a4, uint64_t a5, unint64_t *a6, int a7, unsigned int a8, unint64_t *a9)
{
  int v13 = v10 ^ 0xF4;
  int v14 = 231 * (v10 ^ 0x498);
  unsigned int v15 = ((2 * (&a4 & 0x6D8BEDE0) - &a4 - 1837886949) ^ 0x83C09B3) * a1;
  a7 = v15 + (v10 ^ 0xF4) - 672;
  a8 = v15 + 997650234;
  a9 = &STACK[0x469B4FB993658CDC];
  a5 = v12;
  a6 = &STACK[0xDA7C2EADEDFF4CD];
  uint64_t v16 = ((uint64_t (*)(char *))(*(void *)(v9 + 8LL * ((v10 ^ 0xF4) - 1042)) - 12LL))(&a4);
  return ((uint64_t (*)(uint64_t))(*(void *)(v11
                                                      + 8LL
                                                      * (((*(_DWORD *)(v12 - 0x7DE3BD1438CBE37ALL) != 774154701)
                                                        * (v14 - 911)) ^ v13))
}

uint64_t sub_10017E7C4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
}

void sub_10017E80C(_DWORD *a1@<X8>)
{
  unint64_t v2 = ((unint64_t)(*v3 ^ 0x76u) << 56) | ((unint64_t)(v3[1] ^ 0x76u) << 48) | ((unint64_t)(v3[2] ^ 0x76u) << 40) | ((unint64_t)(v3[3] ^ 0x76u) << 32) | ((v3[4] ^ 0x76LL) << 24) | ((v3[5] ^ 0x76LL) << 16) | ((v3[6] ^ 0x76LL) << 8) | v3[7] ^ 0x76LL;
  **(void **)uint64_t v1 = (v2 - ((2 * v2) & 0xB99ADFBE1818270ELL) + 0x5CCD6FDF0C0C1387LL) ^ 0x5CCD6FDF0C0C1387LL;
  *(_DWORD *)(v1 + 24) = *a1;
}

void sub_10017E8FC()
{
  v0[1] = 31090337 * ((2 * (v0 & 0x6A9AF4B8) - v0 + 358943557) ^ 0xD2E46B0C) + 1655392376;
  sub_100180004(v0);
  __asm { BR              X8 }

uint64_t sub_10017E9C8()
{
  if (v0) {
    BOOL v3 = v1 == 0;
  }
  else {
    BOOL v3 = 1;
  }
  int v4 = !v3;
  return (*(uint64_t (**)(void))(v2 + 8LL * ((43 * v4) ^ 0xD4Du)))();
}

uint64_t sub_10017E9F4()
{
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * ((33 * (v0 + 32LL * v1 > v0)) ^ 0x2DF)) - 8LL))();
}

uint64_t sub_10017EA3C@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W8>)
{
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7
                                                                                          + 8LL
                                                                                          * ((1683
                                                                                            * ((((*v6 == 0) ^ (((a6 - 73) | 0x61) + 34)) ^ (((a6 - 73) | 0x61) + 65)) & 1)) ^ ((a6 - 1353) | 0x361)))
                                                                              - 12LL))( a1,  a2,  a3,  a4,  a5);
}

uint64_t sub_10017EAE0()
{
  return (*(uint64_t (**)(void))(v4 + 8LL * (((v2 ^ (v0 + 223) ^ 0xB91) * (v1 + 32 < v3)) ^ (v2 - 961627737))))();
}

uint64_t sub_10017EB1C()
{
  return ((uint64_t (*)(void))(*(void *)(v2
                                        + 8LL
}

uint64_t sub_10017EB68@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(void *)(v2 + 8LL * ((2567 * (*(void *)(v1 + 8) != 0LL)) ^ a1))
                            + 961631134LL
                            - ((a1 + 4263587) | 0x39104224u)))();
}

uint64_t sub_10017EBB4@<X0>(int a1@<W8>)
{
  return ((uint64_t (*)(void))(*(void *)(v2
                                        + 8LL
                                        * (((*(void *)(v1 + 16) == 0LL) * ((((a1 - 667) | 0x9AB) + 359) ^ 0xB4A)) ^ ((a1 - 667) | 0x9AB)))
                            - 12LL))();
}

uint64_t sub_10017EBEC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v19 = (v14 - 1812) ^ v13;
  *(_DWORD *)(v18 - 128) = v14 + 673918253 * ((v18 - 136) ^ 0x9A481BA8) - 542;
  *uint64_t v16 = a13;
  sub_1001608C4(v18 - 136);
  return ((uint64_t (*)(void))(*(void *)(v15
                                        + 8LL
}

uint64_t sub_10017EC70( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, int a11, int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21)
{
  int v27 = 366490169 * (((v22 | 0x52C2828F) - v22 + (v22 & 0xAD3D7D70)) ^ 0x446CD4CB);
  *(void *)(v25 + 8) = a21;
  *(_DWORD *)(v26 - 136) = a11 + a10 + a12 + 1063171182 + v27;
  *(_DWORD *)(v26 - 120) = (v24 | 0x230) - 337 + v27;
  sub_100092B3C(v26 - 136);
  int v28 = 366490169 * (((v22 | 0x8E44D48F) + (~(_DWORD)v22 | 0x71BB2B70)) ^ 0x98EA82CA);
  *(_DWORD *)(v26 - 136) = v28
                         + (*(_DWORD *)v21 ^ ((((v24 | 0x230) - 2086428579) ^ 0xBAF2F569) + 19819573))
                         + (((((v24 | 0x230) - 2086428579) & 0x7C5C5FBC) + 1962899754) & (2 * *(_DWORD *)v21))
                         - 140574729;
  *(_DWORD *)(v26 - 120) = (v24 | 0x230) - 337 + v28;
  *(void *)(v25 + 8) = a21;
  sub_100092B3C(v26 - 136);
  uint64_t v29 = *(void *)(v21 + 8);
  uint64_t v30 = 366490169 * (((v22 | 0x172872437E7B60DBLL) - (v22 & 0x172872437E7B60DBLL)) ^ 0x3DB6C75768D5369FLL);
  *(void *)(v25 + 24) = a21;
  *(_DWORD *)(v26 - 120) = (v24 | 0x230) + 1409 - v30;
  *(void *)(v26 - 128) = 0x31CE25EE95E3DA93LL - v30 + 0x17F1D366B5901A3BLL * v29;
  int v31 = (void (*)(uint64_t))*(&off_1003E8E60 + (v24 | 0x230) - 1542);
  v31(v26 - 136);
  uint64_t v32 = *(void *)(v21 + 16);
  unint64_t v33 = 366490169 * ((-2LL - ((~v22 | 0x9F3A8B29B1EAD5B3LL) + (v22 | 0x60C574D64E152A4CLL))) ^ 0xB5A43E3DA74483F7LL);
  *(void *)(v26 - 112) = a21;
  *(void *)(v26 - 128) = 0x31CE25EE95E3DA93LL - v33 + 0x17F1D366B5901A3BLL * v32;
  *(_DWORD *)(v26 - 120) = (v24 | 0x230) + 1409 - v33;
  v31(v26 - 136);
  uint64_t v34 = *(void *)(v21 + 24);
  uint64_t v35 = 366490169 * (((v22 | 0x79B54AE25E1E5FE9LL) - (v22 & 0x79B54AE25E1E5FE9LL)) ^ 0x532BFFF648B009ADLL);
  *(_DWORD *)(v26 - 120) = (v24 | 0x230) + 1409 - v35;
  *(void *)(v26 - 112) = a21;
  *(void *)(v26 - 128) = 0x31CE25EE95E3DA93LL - v35 + 0x17F1D366B5901A3BLL * v34;
  uint64_t v36 = ((uint64_t (*)(uint64_t))v31)(v26 - 136);
  return ((uint64_t (*)(uint64_t))(*(void *)(v23
                                                      + 8LL
                                                      * ((254 * (*(_DWORD *)(v26 - 136) != 774154701)) ^ (v24 | 0x230)))
                                          - 8LL))(v36);
}

uint64_t sub_10017EF50( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, unsigned int a13, uint64_t a14)
{
  int v18 = 1697562443 * (((((v17 - 136) | 0x5348D5E) ^ 0xFFFFFFFE) - (~(v17 - 136) | 0xFACB72A1)) ^ 0x2D5B4A25);
  *(void *)(v15 + 16) = a14;
  *(_DWORD *)(v17 - 136) = 1324392428 - v18;
  *(_DWORD *)(v17 - 128) = a13 - v18 - 370;
  *(_DWORD *)(v17 - 112) = v18 + 1781426815;
  uint64_t v19 = ((uint64_t (*)(uint64_t))((char *)*(&off_1003E8E60 + (int)(a13 - 1573)) - 4))(v17 - 136);
  return ((uint64_t (*)(uint64_t))(961631134LL
                                          - (a13 ^ 0x3951552A)
                                          + *(void *)(v14 + 8LL * ((2476 * (*(_DWORD *)(v17 - 132) == v16)) ^ a13))))(v19);
}

uint64_t sub_10017F020( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14, int a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22)
{
  *(void *)(v23 + 8) = a22;
  *(void *)(v23 + 16) = &a16;
  *(_DWORD *)(v25 - 132) = (a13 - 309) ^ (1314530549
                                        * ((((v25 - 136) | 0x43F86378) - (v25 - 136) + ((v25 - 136) & 0xBC079C80)) ^ 0xF2F1E5B6));
  ((void (*)(uint64_t))((char *)*(&off_1003E8E60 + a13 - 1537) - 8))(v25 - 136);
  *(void *)(v23 + 8) = a22;
  *(_DWORD *)(v25 - 120) = a13
                         - 476588053 * (((v25 - 136) & 0xCD966701 | ~((v25 - 136) | 0xCD966701)) ^ 0x8F949CBD)
                         - 1341;
  uint64_t v26 = sub_1001228D8(v25 - 136);
  return ((uint64_t (*)(uint64_t))(*(void *)(v22
                                                      + 8LL
                                                      * (((*(_DWORD *)(v25 - 136) == v24)
                                                        * (((a13 - 1185845989) & 0x7FFFDFFE) - 961628472)) ^ a13))
                                          - 8LL))(v26);
}

uint64_t sub_10017F124( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14)
{
  *(_DWORD *)(v16 - 136) = a13
                         + 961629466
                         - ((((v16 - 136) | 0xE83C9187) - (v16 - 136) + ((v16 - 136) & 0x17C36E78)) ^ 0xFE92C7C3) * v14
                         - 314460545;
  *(void *)(v15 + 8) = a14;
  sub_10017FEAC(v16 - 136);
  return sub_10017EAE0();
}

uint64_t sub_10017F1CC()
{
  return (v0 - 774154701);
}

uint64_t sub_10017F214(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) - 476588053 * ((2 * (a1 & 0x438627AE) - a1 + 1014618193) ^ 0x8184DC12);
  return ((uint64_t (*)(void))(*((void *)*(&off_1003E8E60 + (v1 ^ 0x75C))
                              + (((*(void *)(a1 + 8) == *(void *)a1) * ((v1 - 1914578544) & 0x721E2DF5 ^ 0xD17)) ^ v1)
                              - 1)
                            - 12LL))();
}

uint64_t sub_10017F2A8@<X0>(uint64_t a1@<X8>)
{
  int v4 = *(_DWORD *)(v2 - 0x6C4CF1741AD15CC1LL);
  int v5 = v4 - 610472923;
  if (v4 - 610472923 < 0) {
    int v5 = 610472923 - v4;
  }
  *(_DWORD *)(v1 - 0x6C4CF1741AD15CC1LL) = v4;
  return ((uint64_t (*)(void))(*(void *)(a1
                                        + 8LL
                                        * ((((v5 ^ 0x9F37CBDC) + ((v3 - 1544) ^ 0x7CDF7965) + ((2 * v5) & 0x3E6F97B8) != 471288468)
                                          * (7 * (v3 ^ 0xD0C) - 733)) ^ v3))
                            - 8LL))();
}

uint64_t sub_10017F344@<X0>(uint64_t a1@<X8>)
{
  int v6 = (v4 - 1844) | 0x604;
  *(_DWORD *)(*(void *)(v2 - 0x6C4CF1741AD15CBDLL) + 4LL * (int)((v6 ^ 0xE3E8B3C6) + v5)) = *(_DWORD *)(*(void *)(v3 - 0x6C4CF1741AD15CBDLL) + 4LL * (int)((v6 ^ 0xE3E8B3C6) + v5));
  return ((uint64_t (*)(void))(*(void *)(a1 + 8LL * ((368 * (v5 - 1 != v1)) ^ v6)) - 12LL))();
}

uint64_t sub_10017F3B0@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)(*v2 + 4LL * (v5 + v7)) = *(_DWORD *)(*v3 + 4LL * (v5 + v7));
  return ((uint64_t (*)(void))(*(void *)(a1 + 8LL * (((v7 - 1 != v1) * v6) ^ v4)) - 12LL))();
}

void sub_10017F3EC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) ^ (1401278017 * ((-2 - ((a1 | 0xD1E13745) + (~(_DWORD)a1 | 0x2E1EC8BA))) ^ 0x2A3DBE5D));
  __asm { BR              X10 }

uint64_t sub_10017F4C8@<X0>( uint64_t a1@<X8>, uint64_t a2, uint64_t a3, char a4, uint64_t a5, unint64_t *a6, int a7, unsigned int a8, unint64_t *a9)
{
  unsigned int v12 = 673918253 * ((2 * (&a4 & 0x4D216088) - &a4 - 1294033036) ^ 0x289684DC);
  a5 = v11;
  a6 = &STACK[0xDA7C2EADEDFF4C5];
  a7 = v12 + v10 - 604;
  a8 = v12 + 987469418;
  a9 = &STACK[0x469B4FB993658CE4];
  uint64_t v13 = ((uint64_t (*)(char *))(*(void *)(a1 + 8LL * (v10 - 974)) - 12LL))(&a4);
  return ((uint64_t (*)(uint64_t))(*(void *)(v9
                                                      + 8LL
                                                      * ((110
                                                        * ((v10 ^ (*(_DWORD *)(v11
                                                                                              - 0x7DE3BD1438CBE37ALL) == 774154701)) & 1)) ^ v10))
                                          - ((v10 + 872) ^ 0x781LL)))(v13);
}

uint64_t sub_10017F5BC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
}

uint64_t sub_10017F614( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, uint64_t a11)
{
  *(_BYTE *)(v11 + (v13 + v12)) = *(_BYTE *)(a11 + (v13 + v12)) ^ 0x76;
  return ((uint64_t (*)(void))(*(void *)(v15
                                        + 8LL
}

void sub_10017F664(_DWORD *a1@<X8>)
{
  uint64_t v4 = *v3;
  *(void *)(v3[4] - 0x5DF7F15B2688CC66LL) = v1;
  *(_DWORD *)(v4 - 0x3C06360CF861496CLL) = v2;
  *((_DWORD *)v3 + 6) = *a1;
}

void sub_10017F6D0(uint64_t a1)
{
  __asm { BR              X9 }

uint64_t sub_10017F708@<X0>(uint64_t a1@<X8>)
{
  return 0LL;
}

uint64_t sub_10017F71C()
{
  return 4294925273LL;
}

uint64_t sub_10017F728(uint64_t result)
{
  unint64_t v1 = 673918253 * (((result | 0xF0C24170EE78F065LL) - result + (result & 0xF3DBE8F11870F9ALL)) ^ 0xBEAB6DB57430EBCDLL);
  uint64_t v2 = *(void *)(result + 16);
  unint64_t v3 = v2 + v1;
  int v4 = *(_DWORD *)(result + 36) ^ v1;
  unint64_t v5 = *(void *)result + v1;
  int v6 = *(_DWORD *)(result + 24) ^ v1;
  int v7 = *(_DWORD *)(result + 28) - v1;
  int v8 = *(_DWORD *)(result + 8) + v1;
  BOOL v9 = v3 > v5;
  BOOL v10 = v2 == *(void *)result;
  if ((v6 & 1) != 0) {
    BOOL v10 = v9;
  }
  if (!v10) {
    int v8 = v7;
  }
  *(_DWORD *)(result + 32) = v4 ^ v8;
  return result;
}

uint64_t sub_10017F7D0(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 8) ^ (375636451 * ((-2 - ((a1 | 0xB1ACC8E3) + (~(_DWORD)a1 | 0x4E53371C))) ^ 0x1D6D6D90));
  uint64_t v3 = *(void *)a1;
  uint64_t v4 = ((uint64_t (*)(void))*(&off_1003E8E60 + v2 + 1014252457))();
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))*(&off_1003E8E60 + (int)(v2 ^ 0xC38BBDA6)))( v4,  v3,  4096LL);
  else {
    int v6 = 774112652;
  }
  *(_DWORD *)(a1 + 12) = v6;
  return result;
}

void sub_10017F890(_DWORD *a1)
{
  unsigned int v1 = *a1 + 1697562443 * ((-2 - ((a1 | 0xD3B995B7) + (~(_DWORD)a1 | 0x2C466A48))) ^ 0xFBD652CC);
  uint64_t v2 = *(void *)((char *)*(&off_1003E8E60 + (int)(v1 ^ 0x6B96EEA7)) - 4);
  unsigned int v3 = v1
  sub_10013EF84((uint64_t)&v2);
}

uint64_t sub_10017F988(int a1)
{
  uint64_t v1 = (qword_10045AE80 ^ qword_10045AEC0) - (void)&v4;
  qword_10045AEC0 = (1437825391 * v1) ^ 0x35414C93324FFE73LL;
  qword_10045AE80 = 1437825391 * (v1 ^ 0x35414C93324FFE73LL);
  unsigned int v2 = 375636451 * ((v5 & 0xBAD4EC90 | ~(v5 | 0xBAD4EC90)) ^ 0x161549E3);
  v5[2] = v2 ^ (a1 - ((2 * a1) & 0xF743D912) + 2074209417);
  v5[0] = v2 + 1687;
  ((void (*)(_DWORD *))((char *)*(&off_1003E8E60
                                           + ((111 * ((111 * v1) ^ qword_10045AE80)) ^ byte_10037E6F0[byte_100379D80[(111 * ((111 * v1) ^ qword_10045AE80))] ^ 0x54])
                                           - 142)
                                 - 12))(v5);
  return (v5[1] - 774154701);
}

uint64_t sub_10017FAE0(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 32) = *(void *)(a2 + 8);
  return 0LL;
}

void sub_10017FAF8()
{
  unint64_t v0 = qword_10045AF28 ^ (unint64_t)&v2 ^ qword_10045AE80;
  qword_10045AF28 = 1437825391 * v0 - 0x35414C93324FFE73LL;
  qword_10045AE80 = 1437825391 * (v0 ^ 0x35414C93324FFE73LL);
  unsigned int v3 = 1404 - 1697562443 * ((2 * (&v3 & 0x2604B910) - &v3 + 1509639919) ^ 0x8E6B7E6B);
  unint64_t v5 = (char *)*(&off_1003E8E60
               + ((111 * ((qword_10045AE80 - qword_10045AF28) ^ 0x73)) ^ byte_100379C80[byte_10038A2C0[(111 * ((qword_10045AE80 - qword_10045AF28) ^ 0x73))] ^ 0x5E])
               + 85)
     - 4;
  sub_100158340(&v3);
  unint64_t v5 = (char *)*(&off_1003E8E60
  unsigned int v3 = 1404
     - 1697562443
     * (((&v3 | 0x28CF6007) - &v3 + (&v3 & 0xD7309FF8)) ^ 0xFF5F5883);
  sub_100158340(&v3);
  unsigned int v1 = 1401278017 * (&v3 ^ 0x42376E7);
  unsigned int v3 = 3960 - v1;
  char v4 = v1 + 24;
  sub_100093858((uint64_t)&v3);
}

uint64_t sub_10017FD00(uint64_t result)
{
  unint64_t v1 = 366490169 * ((((2 * result) | 0xB519E94AB63FBE24LL) - result + 0x25730B5AA4E020EELL) ^ 0xF01241B14DB18956LL);
  uint64_t v2 = (_DWORD *)(result + 16);
  unint64_t v3 = *(void *)(result + 8) + v1;
  unint64_t v4 = *(void *)(result + 32) + v1;
  BOOL v5 = (uint64_t)v3 < (uint64_t)v4;
  BOOL v6 = v3 < v4;
  int v7 = v5;
  if (((*(_DWORD *)(result + 40)
       - 366490169 * ((((2 * (_DWORD)result) | 0xB63FBE24) - (_DWORD)result - 1528815378) ^ 0x4DB18956)) & 1) != 0)
    BOOL v6 = v7;
  if (v6) {
    uint64_t v2 = (_DWORD *)result;
  }
  *(_DWORD *)(result + 24) = (*v2 + 366490169 * ((((2 * result) | 0xB63FBE24) - result - 1528815378) ^ 0x4DB18956)) ^ (*(_DWORD *)(result + 20) + 366490169 * ((((2 * result) | 0xB63FBE24) - result - 1528815378) ^ 0x4DB18956));
  return result;
}

_BYTE *sub_10017FDA0(_BYTE *result, char a2, unint64_t a3)
{
  unint64_t v3 = -(int)result & 7;
  if (v3 > a3) {
    LODWORD(v3) = a3;
  }
  switch((int)v3)
  {
    case 1:
      goto LABEL_10;
    case 2:
      goto LABEL_9;
    case 3:
      goto LABEL_8;
    case 4:
      goto LABEL_7;
    case 5:
      goto LABEL_6;
    case 6:
      goto LABEL_5;
    case 7:
      *result++ = a2;
LABEL_5:
      *result++ = a2;
LABEL_6:
      *result++ = a2;
LABEL_7:
      *result++ = a2;
LABEL_8:
      *result++ = a2;
LABEL_9:
      *result++ = a2;
LABEL_10:
      *result++ = a2;
      break;
    default:
      break;
  }

  unint64_t v4 = a3 - v3;
  unint64_t v6 = v4;
  unint64_t v5 = v4 & 7;
  switch(v6)
  {
    case 0uLL:
      return result;
    case 1uLL:
      goto LABEL_20;
    case 2uLL:
      goto LABEL_19;
    case 3uLL:
      goto LABEL_18;
    case 4uLL:
      goto LABEL_17;
    case 5uLL:
      goto LABEL_16;
    case 6uLL:
      goto LABEL_15;
    case 7uLL:
      *result++ = a2;
LABEL_15:
      *result++ = a2;
LABEL_16:
      *result++ = a2;
LABEL_17:
      *result++ = a2;
LABEL_18:
      *result++ = a2;
LABEL_19:
      *result++ = a2;
LABEL_20:
      *uint64_t result = a2;
      break;
    default:
      uint64_t result = (_BYTE *)((uint64_t (*)(void))((char *)&loc_10017FE30 + 4 * byte_100379F87[(v5 >> 3) & 7]))();
      break;
  }

  return result;
}

uint64_t sub_10017FE94(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 48) = *(void *)(a2 + 8);
  return 0LL;
}

uint64_t sub_10017FEAC(uint64_t a1)
{
  int v1 = *(_DWORD *)a1 + 366490169 * (a1 ^ 0x16AE5644);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(v2 - 0x34C186D67503D0AFLL);
  int v4 = v1 - 647168397;
  unsigned int v10 = v1
      - 647168397
      + 366490169
      * (((&v8 | 0x28EF4C45) - &v8 + (&v8 & 0xD710B3B8)) ^ 0x3E411A01);
  uint64_t v9 = v3;
  unint64_t v5 = (void (*)(uint64_t *))((char *)*(&off_1003E8E60 + (v1 ^ 0x26930A5B)) - 12);
  v5(&v8);
  uint64_t v6 = *(void *)(v2 - 0x34C186D67503D0B7LL);
  unsigned int v10 = v4
      + 366490169 * ((1747627979 - (&v8 | 0x682AAFCB) + (&v8 | 0x97D55034)) ^ 0x817B0670);
  uint64_t v9 = v6;
  return ((uint64_t (*)(uint64_t *))v5)(&v8);
}

uint64_t sub_100180004(int *a1)
{
  unsigned int v2 = a1[1] - 31090337 * (a1 ^ 0xC7816049);
  uint64_t result = ((uint64_t (*)(char *, char *))*(&off_1003E8E60 + (int)(v2 ^ 0x62AB483E)))( (char *)*(&off_1003E8E60 + (int)(v2 ^ 0x62AB48E6)) - 4,  (char *)*(&off_1003E8E60 + (int)(v2 - 1655392266)) - 12);
  int v4 = *(_DWORD *)*(&off_1003E8E60 + (int)(v2 ^ 0x62AB48A4));
  if ((_DWORD)result) {
    int v4 = 774112395;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1001800A8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)a1;
  unsigned int v4 = 673918253 * ((1136168693 - (&v7 | 0x43B88EF5) + (&v7 | 0xBC47710A)) ^ 0x260F6AA2);
  int v5 = *(_DWORD *)(a1 + 24) - 1761959447 * ((a1 + 1955828336 - 2 * (a1 & 0x74939270)) ^ 0xD53453B4) - 166308332;
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v8 = v3;
  uint64_t v9 = v2;
  int v10 = v5 + v4 + 370;
  unsigned int v11 = v4 + 987469418;
  uint64_t result = ((uint64_t (*)(int *))((char *)*(&off_1003E8E60 + v5) - 12))(&v7);
  *(_DWORD *)(a1 + 28) = v7;
  return result;
}

void sub_1001801C8()
{
  uint64_t v0 = (qword_10045AE80 ^ qword_10045AEC8) - (void)&v1;
  qword_10045AEC8 = 1437825391 * v0 + 0x5F228405B95CAEDDLL;
  qword_10045AE80 = 1437825391 * (v0 ^ 0x35414C93324FFE73LL);
  LOBYTE(v0) = 111 * ((qword_10045AE80 + 111 * v0 - 35) ^ 0x73);
  uint64_t v3 = (char *)*(&off_1003E8E60
               + (v0 ^ byte_100379E80[byte_10038A4C0[v0] ^ 0x8E])
               - 116)
     - 4;
  unsigned int v2 = 1404 - 1697562443 * (&v2 ^ 0xD7903884);
  sub_100158340(&v2);
}

uint64_t sub_1001802D4(uint64_t a1)
{
  uint64_t v1 = (qword_10045AE80 ^ qword_10045AF20) - (void)&v3;
  qword_10045AF20 = 1437825391 * v1 - 0x35414C93324FFE73LL;
  qword_10045AE80 = 1437825391 * (v1 ^ 0x35414C93324FFE73LL);
  uint64_t v4 = a1;
  unsigned int v6 = 1904 - 673918253 * ((&v4 & 0x416C1B0F | ~(&v4 | 0x416C1B0F)) ^ 0x24DBFF58);
  ((void (*)(uint64_t *))((char *)*(&off_1003E8E60
                                            + ((111 * (qword_10045AF20 ^ 0x73 ^ qword_10045AE80)) ^ byte_100383C60[byte_10037E5F0[(111 * (qword_10045AF20 ^ 0x73 ^ qword_10045AE80))] ^ 0x5E])
                                            - 52)
                                  - 12))(&v4);
  return (v5 - 774154701);
}

uint64_t sub_10018040C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = *(void *)a1;
  int v3 = *(_DWORD *)(a1 + 8) - 1314530549 * (a1 ^ 0xB10986CE) + 1676530973;
  int v6 = (375636451 * ((v5 + 1205184797 - 2 * ((unint64_t)v5 & 0x47D5A91D)) ^ 0x14EBF391)) ^ (*(_DWORD *)(a1 + 8) - 1314530549 * (a1 ^ 0xB10986CE) + 1676533732);
  v5[0] = v1;
  v5[1] = v2;
  return ((uint64_t (*)(void *))((char *)*(&off_1003E8E60 + v3) - 4))(v5);
}

uint64_t sub_1001804E0(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 64) = *(void *)(a2 + 8);
  return 0LL;
}

uint64_t sub_1001804F8(uint64_t a1)
{
  int v2 = 1314530549 * ((a1 & 0xFE5EE54A | ~(a1 | 0xFE5EE54A)) ^ 0xB0A89C7B);
  int v3 = *(_DWORD *)(a1 + 8) ^ v2;
  int v4 = *(_DWORD *)(a1 + 24) + v2;
  int v5 = *(_DWORD *)(a1 + 32) ^ v2;
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)a1;
  unsigned int v8 = 31090337 * (v10 ^ 0xC7816049);
  v3 -= 1780980901;
  int v13 = v3 + v8 + 2306;
  uint64_t v11 = v7;
  uint64_t v12 = v6;
  v10[0] = (v5 ^ 0x599BB1D) + v8 - 131826 + ((2 * v5) & 0x9FDFDFF6 ^ 0x94CC89C4);
  v10[1] = v4 - ((2 * v4 - 643511276) & 0xE41FBE82) + v8 - 555596469;
  uint64_t result = ((uint64_t (*)(_DWORD *))((char *)*(&off_1003E8E60 + v3) - 12))(v10);
  *(_DWORD *)(a1 + 28) = v14;
  return result;
}

uint64_t sub_100180658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4 = (unint64_t)&v6[qword_10045AE80 - qword_10045AE90];
  qword_10045AE90 = (1437825391 * v4) ^ 0x35414C93324FFE73LL;
  qword_10045AE80 = 1437825391 * (v4 ^ 0x35414C93324FFE73LL);
  unsigned int v10 = (1697562443 * ((v7 & 0xD687344F | ~(v7 | 0xD687344F)) ^ 0xFEE8F334)) ^ 0x24A;
  uint64_t v9 = a4;
  uint64_t v11 = a2;
  v7[0] = a3;
  v7[1] = a1;
  ((void (*)(void *))((char *)*(&off_1003E8E60
                                           + ((111
                                                                            * ((qword_10045AE80 + qword_10045AE90) ^ 0x73)) ^ byte_100379E80[byte_10038A4C0[(111 * ((qword_10045AE80 + qword_10045AE90) ^ 0x73))] ^ 0xC5])
                                           + 43)
                                 - 12))(v7);
  return (v8 - 774154701);
}

uint64_t sub_10018079C(uint64_t result)
{
  unint64_t v1 = 1314530549 * (((result | 0x7B0834BC1D5378BFLL) - (result & 0x7B0834BC1D5378BFLL)) ^ 0xDC2DB421AC5AFE71LL);
  int v2 = *(_DWORD *)(result + 20) + v1;
  int v3 = *(_DWORD *)(result + 32) - v1;
  unint64_t v4 = *(void *)(result + 40) ^ v1;
  int v5 = *(_DWORD *)(result + 24) ^ v1;
  int v6 = *(_DWORD *)(result + 28) ^ v1;
  unint64_t v7 = *(void *)(result + 8) - v1;
  BOOL v8 = v7 == v4;
  BOOL v9 = v7 > v4;
  int v10 = v8;
  if ((v3 & 1) == 0) {
    BOOL v9 = v10;
  }
  if (v9) {
    int v11 = v6;
  }
  else {
    int v11 = v2;
  }
  *(_DWORD *)(result + 16) = v5 ^ v11;
  return result;
}

uint64_t sub_100180828(uint64_t result)
{
  unint64_t v1 = 31090337 * ((-2LL - ((~result | 0x4C7FCC96781261BELL) + (result | 0xB380336987ED9E41LL))) ^ 0xEBDDE768BF9301F7LL);
  int v2 = *(_DWORD *)(result + 16) - v1;
  unint64_t v3 = *(void *)(result + 8) + v1;
  int v4 = *(_DWORD *)result - v1;
  unint64_t v5 = *(void *)(result + 24) - v1;
  int v6 = *(_DWORD *)(result + 40) + v1;
  int v7 = *(_DWORD *)(result + 20) - v1;
  BOOL v8 = v5 >= v3;
  BOOL v9 = v5 != v3;
  if ((v2 & 1) != 0) {
    BOOL v10 = v8;
  }
  else {
    BOOL v10 = v9;
  }
  if (v10) {
    int v11 = v6;
  }
  else {
    int v11 = v4;
  }
  *(_DWORD *)(result + 36) = v11 ^ v7;
  return result;
}

uint64_t sub_1001808D0(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 24);
  return 0LL;
}

uint64_t sub_1001808E8(uint64_t result)
{
  *(void *)(*(void *)(result + 8) - 0x132CF3C980285A2BLL) = 0x7DE3BD1438CBE392LL;
  *(_DWORD *)(result + 4) = -849666585;
  return result;
}

uint64_t sub_100180920(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)(a1 + 88) = 90;
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 80) = *(void *)(a2 + 8);
  return 0LL;
}

unint64_t sub_100180940(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) - 1314530549 * (a1 ^ 0xB10986CE);
  int v2 = (unsigned __int8 **)*(&off_1003E8E60 + v1 + 1318646907);
  unint64_t v3 = *v2;
  int v4 = *((_DWORD *)*v2 + 2);
  int v5 = v4 ^ 0x2C6BCB0E;
  int v6 = (2 * v4) & 0x58D7961C;
  int v480 = (unsigned __int8 **)*(&off_1003E8E60 + v1 + 1318647032);
  int v7 = (unsigned __int8 *)*(&off_1003E8E60 + v1 + 1318646764);
  BOOL v8 = *v480;
  HIDWORD(v9) = v7[12];
  LODWORD(v9) = (HIDWORD(v9) ^ 0x24) << 24;
  uint64_t v10 = (uint64_t)*(&off_1003E8E60 + (int)(v1 ^ 0xB1670C9C));
  unint64_t v11 = ((unint64_t)(*v480)[4] << 56)
  unint64_t v12 = (*v480)[10] | ((unint64_t)v3[7] << 8) | ((unint64_t)*v3 << 16) | ((unint64_t)v3[26] << 24);
  unint64_t v13 = ((unint64_t)v3[17] << 32) - (((unint64_t)v3[17] << 33) & 0xD400000000LL) + 0x2A41ED6A138BA2CDLL;
  unint64_t v14 = (((*(_BYTE *)(v10 + ((v9 >> 26) ^ 0xB4LL) - 1) - 116) ^ 0x82) - 75) | ((unint64_t)(*v2)[22] << 8) | ((unint64_t)(*v480)[16] << 16) | ((v7[13] ^ 0x24LL) << 24) | ((unint64_t)(*v480)[1] << 32);
  unint64_t v15 = (v12 ^ 0xFDFED7FECFF7ECBELL) + 0x201280130081342LL + ((2 * v12) & 0x19FEFD97CLL);
  unint64_t v16 = (v15 - (v15 | v13 ^ 0x2A41ED6A138BA2CDLL)) ^ ((v13 ^ 0xD5BE1295EC745D32LL) + 1);
  uint64_t v17 = v16 - ((2 * v16) & 0x5483DAD42717459ALL) + 0x2A41ED6A138BA2CDLL;
  uint64_t v18 = (*v2)[1];
  unint64_t v19 = ((unint64_t)(*v480)[2] << ((*v480)[2] & 0x28) << ((*v480)[2] & 0x28 ^ 0x28u)) ^ ((unint64_t)(v7[16] ^ 0x24u) << 48) ^ ((v17 ^ v13) + v15);
  unint64_t v20 = (v19 + (v11 ^ 0xC7E3D8D003A33D69LL ^ v19) + 1) ^ ((v11 ^ 0xC7E3D8D003A33D69LL) + 1);
  unint64_t v22 = ((v20 - ((2 * v20) & 0x70384E5FF8B9852CLL) + 0x381C272FFC5CC296LL) ^ v11) + v19;
  unint64_t v23 = ((unint64_t)v3[18] << 32) | ((unint64_t)v3[5] << 24) | ((unint64_t)(*v480)[27] << 40) | v18 | ((v7[9] ^ 0x24LL) << 8) | ((v7[1] ^ 0x24LL) << 16);
  unint64_t v25 = (((unint64_t)(*v480)[14] << 48) ^ 0x29FFEFBFF39EDF3FLL)
  uint64_t v26 = v23 - 2 * (v23 & 0xCA309F365BFDLL ^ v18 & 0x39) - 0x756435CF60C9A43CLL;
  unint64_t v27 = (v25 - (v26 ^ 0x8A9BCA309F365BC4LL | v25)) ^ ((v26 ^ 0x756435CF60C9A43BLL) + 1);
  uint64_t v28 = (v6 + v5 - 745261838);
  unint64_t v29 = ((unint64_t)v3[15] << 24) - ((v3[15] << 25) & 0xEC000000) - 0x41189C5889B3DB38LL;
  uint64_t v30 = (v27 - ((2 * v27) & 0x153794613E6CB788LL) - 0x756435CF60C9A43CLL) ^ v26;
  uint64_t v31 = 1912602624LL;
  if ((*v480)[7]) {
    uint64_t v31 = v29 ^ 0x27FB000000LL;
  }
  unint64_t v32 = (v30 + v25) ^ ((unint64_t)(*v480)[7] << 56);
  int v33 = v3[23];
  char v21 = *(_BYTE *)(v10 + 788 + ((((2 * (*v480)[28]) & 0x76) + ((*v480)[28] ^ 0x3B)) ^ 0x7FLL));
  int v24 = ((*v480)[8] + 59);
  unint64_t v34 = v3[21] | (unint64_t)(((((2 * (*v480)[28]) & 0x76) + ((*v480)[28] ^ 0x3B)) ^ 0x8Au ^ (((2 * (v21 & 0x8E)) ^ (v21 - 114)) - 4 * (v21 & 0x8E) + 2 * ((2 * (v21 & 0x8E)) & (v21 - 114)))) << 8) | ((unint64_t)(*v480)[5] << 24) | ((unint64_t)((((*v480)[8] + 59) ^ *(_BYTE *)(v10 + 788 + (((v24 ^ 0xFFFFFF80) + (v24 ^ 0x84) + 1) ^ 0xFFFFFFFE) + (v24 ^ 0x84))) ^ 4u) << 16) | ((unint64_t)(*v480)[18] << 32) | ((unint64_t)v3[2] << 56) | ((unint64_t)v3[14] << 40) | ((unint64_t)v3[4] << 48);
  int v35 = v33 | (v3[19] << 16) | (v8[13] << 8);
  uint64_t v36 = v34
      - ((2 * v34) & 0x366D3A3585B65836LL)
      - 0x64C962E53D24D3E5LL
      - ((2 * (v34 - ((2 * v34) & 0x366D3A3585B65836LL) - 0x64C962E53D24D3E5LL)) & 0x71254FF39C480658LL)
      + 0x3892A7F9CE24032CLL;
  unint64_t v37 = ((v31 & (v29 ^ 0xBEE763A7764C24C8LL) | *(void *)&v35 & 0x8E29EELL) ^ (v29 & 0x8D000000 | *(void *)&v35 & 0x71D611LL) | ((unint64_t)v3[6] << 32)) ^ (((unint64_t)v3[24] << 40) | ((unint64_t)v8[15] << 56) | ((unint64_t)*v8 << 48));
  *((void *)&v38 + 1) = v37 ^ 0x4000000;
  *(void *)&__int128 v38 = v37;
  uint64_t v39 = (v38 >> 63) - ((2 * (v38 >> 63)) & 0xBD083EFCEFD2BCFALL) + 0x5E841F7E77E95E7DLL;
  unint64_t v40 = (2 * v36) ^ 0x8EDAB00C63B7F9A7LL;
  uint64_t v41 = v36 ^ 0x3892A7F9CE24032CLL;
  unint64_t v42 = v36 ^ v37;
  unint64_t v43 = ((v39 ^ 0x6204E6812DD3B952LL) - 0x3C80F9FF5A3AE72FLL) ^ ((v39 ^ 0xA17BE0818816A182LL) + 1);
  unint64_t v44 = v22 ^ v28;
  uint64_t v45 = (v32 - 2 * (v32 & 0x98D8D050F06473FLL ^ v30 & 1) + 0x98D8D050F06473ELL) ^ v44;
  unint64_t v46 = (((v43 - ((2 * v43) & 0xBD083EFCEFD2BCFALL) + 0x5E841F7E77E95E7DLL) ^ v39) - 0x3C80F9FF5A3AE730LL) ^ __ROR8__((((unint64_t)(*v480)[26] << 48) | ((unint64_t)v8[6] << 56) | ((unint64_t)v3[12] << 40) | v14) ^ 0xF2B7463F7A3C2131LL, 63);
  unint64_t v47 = v41 & (v45 ^ 0x97D2FC8115F091A4LL);
  *(void *)&__int128 v38 = __ROR8__(v46, 1);
  unint64_t v48 = v44 ^ 0xD794350938DD5B3BLL;
  v44 ^= 0x286BCAF6C722A4C4uLL;
  unint64_t v49 = v42 ^ 0xCA25E1C6B018221DLL;
  unint64_t v50 = (v40 + v41) & (v42 ^ 0xCA25E1C6B018221DLL);
  v45 ^= 0x682D037EEA0F6E5BuLL;
  unint64_t v51 = v38
      - ((2 * v38) & 0xC37F0600A5C518D0LL)
      + 0x61BF830052E28C68LL
      - 2 * ((v38 - ((2 * v38) & 0xC37F0600A5C518D0LL) + 0x61BF830052E28C68LL) & 0x1685F457C8D3122FLL ^ v38 & 5)
      - 0x697A0BA8372CEDD6LL;
  uint64_t v52 = v51 ^ ((v45 & v48) - ((2 * (v45 & v48)) & 0x2D0BE8AF91A62454LL) - 0x697A0BA8372CEDD6LL);
  uint64_t v53 = (v51 ^ 0x7E456CDB4E16F3D5LL) & (v42 ^ 0x35DA1E394FE7DDE2LL);
  LOBYTE(v48) = (v38 - ((2 * v38) & 0xD0) + 104 - 2 * ((v38 - ((2 * v38) & 0xD0) + 104) & 0x2F ^ v38 & 5) + 42) & 0x27;
  unint64_t v54 = (v51 ^ 0x81BA9324B1E90C2ALL) & v44 ^ v49;
  unint64_t v55 = v50 ^ v45;
  unint64_t v56 = v54 ^ v52;
  unint64_t v57 = v47 ^ v44 ^ v52;
  uint64_t v58 = v53 + v41 - 2 * (v53 & v41);
  *((void *)&v38 + 1) = v56 ^ 0x697E3;
  *(void *)&__int128 v38 = v56 ^ 0xFFE2A0842DA00000LL;
  uint64_t v59 = (v38 >> 19) ^ (v56 >> 28) ^ 0xFFE2A0842LL;
  unint64_t v60 = v56 ^ 0xE44DD15DC94B5F1ELL ^ (v59 - ((2 * v59) & 0x375EE3B3C9DB91FALL) + 0x1BAF71D9E4EDC8FDLL);
  uint64_t v61 = v58 ^ v55;
  unint64_t v62 = (((8 * v57) ^ (v57 << 25)) & 0xFFFFFFFFFFFFFFF8LL | (v57 >> 61)) ^ v57 ^ ((v57 ^ 0x912FEFC4BAC1ECC6LL) >> (v48 ^ 5u) >> (v48 ^ 0x22u));
  *((void *)&v38 + 1) = v61 ^ 0x12A;
  *(void *)&__int128 v38 = v61;
  uint64_t v63 = (v55 << 58) ^ 0x3400000000000000LL;
  uint64_t v64 = (v55 >> 6) ^ __ROR8__( (((v55 & 1) << 38) | 0x6DAECE372B150E59LL) ^ __ROR8__( __ROR8__( v55 ^ 0x7FE773E8649BF709LL ^ (((v55 >> 1) ^ 0x3A1178CCBCA43386LL) - 2 * (((v55 >> 1) ^ 0x3A1178CCBCA43386LL) & 0xBC582711DD3900CLL ^ (v55 >> 1) & 8) + 0xBC582711DD39004LL),  19) ^ 0x9F023A8151C3D0C2LL,  6),  39) ^ 0x3B8C2FC4512A8411LL;
  uint64_t v65 = __ROR8__( ((v54 & 0x7F) << 37) ^ __ROR8__( v54 ^ 0x9D129CFAB41920F1LL ^ (((v54 >> 7) ^ 0x5B93901C4D14C5LL)
                                                               - ((2 * ((v54 >> 7) ^ 0x5B93901C4D14C5LL)) & 0x1B6A9E9252684D4LL)
                                                               - 0x4F24AB0B6D6CBD96LL),
                                   20) ^ 0x75C9533B766CABABLL,
          44) ^ __ROR8__(v54, 41);
  unint64_t v66 = v64 & 0xE8C1659D54841599LL ^ v63 & 0xE800000000000000LL | v64 & 0x173E9A62AB7BEA66LL ^ v63 & 0x1400000000000000LL;
  uint64_t v67 = v65 ^ __ROR8__(__ROR8__(v56, 12) & 0xFFF000000000FFFFLL ^ __ROR8__(v60, 48) ^ 0xC5139A8D3A0CA64LL, 16);
  uint64_t v68 = __ROR8__( __ROR8__(v61, 23) & 0xFC0001FFFFFFFFFFLL ^ __ROR8__( v61 ^ 0xEF797A464156BC27LL ^ ((v38 >> 10)
                                                                                   - ((2 * (v38 >> 10)) & 0x6384325739C4191ALL)
                                                                                   + 0x31C2192B9CE20C8DLL),
                                                       6) ^ 0x5F891B3DE7DA0724LL,
          58) ^ (v61 << 47);
  uint64_t v69 = v68 ^ v65;
  unint64_t v70 = v68 ^ 0xE2D3A03F96AF2C74LL;
  unint64_t v71 = (v68 ^ v65 ^ 0xE07783C4618E9405LL) & (v68 ^ 0x1D2C5FC06950D38BLL);
  unint64_t v72 = (((v62 ^ 0x6EDAEDC71F31750DLL) & v66)
       - ((2 * ((v62 ^ 0x6EDAEDC71F31750DLL) & v66)) & 0x359CE5850BEFF352LL)
       - 0x65318D3D7A080657LL) ^ v67 ^ 0x9DDD77F3C8611D4DLL;
  unint64_t v73 = v62 ^ v66;
  uint64_t v74 = v73 ^ 0x6EDAEDC71F31750DLL;
  v73 ^= 0x91251238E0CE8AF2LL;
  unint64_t v75 = (((v67 ^ 0xED56AE653176942ELL) & (v62 ^ 0x91251238E0CE8AF2LL))
       - ((2 * ((v67 ^ 0xED56AE653176942ELL) & (v62 ^ 0x91251238E0CE8AF2LL))) & 0xCEDB654CD8E44B32LL)
       + 0x676DB2A66C722599LL) ^ v69;
  LOBYTE(v57) = v18 & 1;
  unint64_t v76 = v72 ^ v62 ^ ((v70 & v74) - ((2 * (v70 & v74)) & 0xD952BE2F9EDAE692LL) - 0x1356A0E830928CB7LL);
  unint64_t v77 = v71 + v73;
  unint64_t v78 = v75 ^ v72;
  unint64_t v79 = v71 & v73;
  uint64_t v80 = v69 ^ 0x1F887C3B9E716BFALL;
  uint64_t v81 = v67 ^ 0x12A9519ACE896BD1LL;
  unint64_t v82 = v77 - (v79 << v57 << (v57 ^ 1u));
  unint64_t v83 = v82 + 0x5F75E7ABD3E81120LL;
  unint64_t v84 = v82 + 0x5F75E7ABD3E81120LL - ((2 * v82) & 0xBEEBCF57A7D02240LL);
  unint64_t v85 = v84 ^ ((v80 & (v67 ^ 0x12A9519ACE896BD1LL) ^ v70)
             - ((2 * (v80 & (v67 ^ 0x12A9519ACE896BD1LL) ^ v70)) & 0xBEEBCF57A7D02240LL)
             + 0x5F75E7ABD3E81120LL);
  *((void *)&v38 + 1) = v75 ^ v72 ^ 0x56A0C7C;
  *(void *)&__int128 v38 = v75 ^ v72 ^ 0x2B80EBCE90000000LL;
  uint64_t v86 = v38 >> 28;
  *((void *)&v38 + 1) = v82;
  *(void *)&__int128 v38 = v84 ^ 0x81AE052D79594E4ALL;
  uint64_t v87 = v38 >> 1;
  *((void *)&v38 + 1) = v85 ^ 0x2D1;
  *(void *)&__int128 v38 = v85 ^ 0xF15F74F258F9C00LL;
  uint64_t v88 = v38 >> 10;
  *((void *)&v38 + 1) = v75 ^ 0x49;
  *(void *)&__int128 v38 = v75 ^ 0x21AA63704715C780LL;
  unint64_t v89 = v85 ^ __ROR8__(v85, 17) ^ v88;
  uint64_t v90 = (8 * v76) ^ 0x11A4C5DA49F16918LL;
  unint64_t v91 = v76 & 0xFFFFFFFFF7FFFFFFLL ^ (v76 >> 39) ^ (v76 << 25) ^ (v76 & 0x8000000 | (v76 >> 61)) ^ v90;
  uint64_t v92 = ((v87 ^ (v84 >> 6) ^ (v83 << 58) ^ 0x2A06B814B5E56539LL)
       - 2 * ((v87 ^ (v84 >> 6) ^ (v83 << 58) ^ 0x2A06B814B5E56539LL) & 0x31798DD33EB8545ALL ^ (v87 ^ (v84 >> 6)) & 2)
       - 0x4E86722CC147ABA8LL) ^ v84;
  uint64_t v93 = v75 ^ (v75 << 23) ^ (v38 >> 7) ^ (((v75 >> 41) ^ 0x10D531 | 0x349C8FC38C59D7EFLL)
                                        - (((v75 >> 41) ^ 0x10D531 | 0x349C8FC38C59D7EFLL) ^ (v75 >> 41) ^ 0x10D531));
  unint64_t v94 = v86 ^ v78 ^ __ROR8__(v78 ^ 0x60EBB79721E4C17DLL, 19) ^ v93;
  unint64_t v95 = v94 ^ 0x2B80EBCE956A0C7CLL ^ (v92 ^ 0x30D788FE47E11A12LL) & (v91 ^ 0xEB591B1EF005BBEELL);
  unint64_t v96 = (v89 ^ v93 ^ 0xA60B66A982423420LL) & (v94 ^ 0x6BA92B305D74FD24LL);
  unint64_t v97 = (v89 ^ 0x3F828F3A21D7F3E9LL) & (v93 ^ 0x9989E993A395C7C9LL);
  unint64_t v98 = v91 ^ 0xC9D716BFD0E48D16LL;
  unint64_t v99 = v89 ^ v93 ^ (v94 ^ 0x9456D4CFA28B02DBLL) & (v91 ^ 0x14A6E4E10FFA4411LL);
  unint64_t v100 = v89 ^ 0xC07D70C5DE280C16LL;
  unint64_t v101 = (v96 - ((2 * v96) & 0x8C6CEFF86DAF60BALL) - 0x39C98803C9284FA3LL) ^ v89;
  uint64_t v102 = ((v92 ^ 0x30D788FE47E11A12LL)
        - 2 * ((v92 ^ 0x30D788FE47E11A12LL) & 0x5D71F25EDF1EC927LL ^ v92 & 0x20)
        - 0x228E0DA120E136F9LL) ^ v98;
  unint64_t v103 = v100 & ~v102;
  unint64_t v104 = v102 ^ v97;
  unint64_t v105 = v95 ^ ((v99 ^ 0x59F499567DBDCBDFLL)
              - ((2 * (v99 ^ 0x59F499567DBDCBDFLL)) & 0xB148A822E67B0E10LL)
              + 0x58A45411733D8708LL);
  unint64_t v106 = ((v95 ^ 0x4029C0FEC81EF158LL ^ v103)
        - ((2 * (v95 ^ 0x4029C0FEC81EF158LL ^ v103)) & 0xBAE3E4BDBE3D920ELL)
        - 0x228E0DA120E136F9LL) ^ v98;
  unint64_t v107 = v105 ^ ((v105 ^ 0x188D94EFBB237650LL) >> 19);
  unint64_t v108 = v107 ^ 0xFA4DA178911B9265LL;
  v107 ^= 0x115F6E94C38F4E62uLL;
  unint64_t v109 = (v106 ^ 0x92F095738C504AF7LL) << (v96 & 3) << (v96 & 3 ^ 3);
  unint64_t v110 = (((v105 ^ 0x188D94EFBB237650LL) << 45) ^ 0x8399400000000000LL)
       - ((2 * (((v105 ^ 0x188D94EFBB237650LL) << 45) ^ 0x8399400000000000LL)) & 0x29DA400000000000LL)
       + 0x14ED3013AD6B23F8LL;
  unint64_t v111 = (v107 + (v108 ^ v110) + 1) ^ ((v110 ^ 0xEB12CFEC5294DC07LL) + 1);
  unint64_t v112 = ((v111 - ((2 * v111) & 0x29DA60275AD647F0LL) + 0x14ED3013AD6B23F8LL) ^ v110) + v107;
  uint64_t v113 = v109 + ((v106 >> 39) ^ 0x125E12A) - 2 * (v109 & ((v106 >> 39) ^ 0x125E12A));
  unint64_t v114 = ((v106 ^ 0x92F095738C504AF7LL) >> (v76 & 0x3D ^ 0x21) >> (v76 & 0x3D ^ 0x1C)) ^ v106;
  uint64_t v115 = v113 - ((2 * v113) & 0x1F0C4679EC6139E4LL) - 0x7079DCC309CF630ELL;
  *((void *)&v38 + 1) = v99 ^ 0x52;
  *(void *)&__int128 v38 = v99 ^ 0x5048E5E64AA12280LL;
  unint64_t v116 = ((((((v114 ^ 0x92F095738C504AF7LL) + (v114 ^ 0xE28949B0859F29FALL ^ v115) + 1) ^ ((v115 ^ 0x7079DCC309CF630DLL)
                                                                                         + 1))
          - ((2
            * (((v114 ^ 0x92F095738C504AF7LL) + (v114 ^ 0xE28949B0859F29FALL ^ v115) + 1) ^ ((v115 ^ 0x7079DCC309CF630DLL)
                                                                                           + 1))) & 0x1F0C4679EC6139E4LL)
          - 0x7079DCC309CF630ELL) ^ v115)
        + (v114 ^ 0x92F095738C504AF7LL)) ^ ((v106 ^ 0x92F095738C504AF7LL) << (v33 & 0x19) << (v33 & 0x19 ^ 0x19u));
  uint64_t v117 = v99 ^ 0x6700611216C1E273LL ^ (((v38 >> 7) ^ (v99 >> 41) ^ 0x282472)
                                     - 2
                                     * (((v38 >> 7) ^ (v99 >> 41) ^ 0x282472) & 0x374884F45C60C0ADLL ^ ((v38 >> 7) ^ (v99 >> 41)) & 0xC)
                                     + 0x374884F45C60C0A1LL);
  unint64_t v118 = (v104 << 58) ^ (v104 >> 1) ^ ((v104 >> 6) | ((unint64_t)~(_DWORD)v104 << 63)) ^ 0xBD0FD3F85AB755D3LL;
  unint64_t v119 = v101 ^ v104;
  unint64_t v120 = v104 ^ 0x90D9DD052D760F7ELL ^ (v118 - ((2 * v118) & 0xE39D841BBF1EDFBALL) - 0xE313DF220709023LL);
  *((void *)&v38 + 1) = v101 ^ v104 ^ 0x37E;
  *(void *)&__int128 v38 = v101 ^ v104 ^ 0x64B0739E8FFBC00LL;
  uint64_t v121 = v38 >> 10;
  unint64_t v122 = v117 + ((v99 << 23) ^ 0xF325509169000000LL) - 2 * (v117 & ((v99 << 23) ^ 0xF325509169000000LL));
  *((void *)&v38 + 1) = v105 ^ 0x188D94EFBB237650LL;
  *(void *)&__int128 v38 = v105;
  uint64_t v123 = v122 ^ (v38 >> 28) ^ v112;
  unint64_t v124 = v119 ^ __ROR8__(v119, 17) ^ v121;
  unint64_t v125 = v124 ^ v122;
  unint64_t v126 = v124 ^ 0xA008C5C7A3130A13LL;
  unint64_t v127 = (v125 ^ 0xA008C5C7A3130A13LL) & (v124 ^ 0x5FF73A385CECF5ECLL);
  unint64_t v128 = v116 & (v123 ^ 0x83BE335EEA090516LL) ^ v125;
  unint64_t v129 = v120 - ((2 * v120) & 0xECE9DC6A6C12592ELL);
  unint64_t v130 = v120 & ~v116;
  v116 ^= 0xF674EE3536092C97LL;
  uint64_t v131 = v116 ^ (v129 - 0x98B11CAC9F6D369LL);
  unint64_t v132 = ((v126 & ~v131) - ((2 * (v126 & ~v131)) & 0xECE9DC6A6C12592ELL) - 0x98B11CAC9F6D369LL) ^ v116;
  unint64_t v133 = v130 ^ v123;
  *((void *)&v38 + 1) = (v128 >> 16) ^ 0xA008C5C7A313LL;
  *(void *)&__int128 v38 = (*((void *)&v38 + 1) | (v128 << 48)) ^ 0xA13000000000000LL;
  unint64_t v134 = v131 ^ v127;
  unint64_t v135 = v132 + (v133 ^ 0x7C41CCA115F6FAE9LL) - 2 * (v132 & (v133 ^ 0x7C41CCA115F6FAE9LL));
  unint64_t v136 = (v126 ^ (v123 ^ 0x7C41CCA115F6FAE9LL) & (v125 ^ 0x5FF73A385CECF5ECLL))
       - ((2 * (v126 ^ (v123 ^ 0x7C41CCA115F6FAE9LL) & (v125 ^ 0x5FF73A385CECF5ECLL))) & 0xB9B22F1FEAB6DA46LL)
       + 0x5CD9178FF55B6D23LL;
  unint64_t v137 = __ROR8__( __ROR8__( (v38 >> 40) ^ __ROR8__(__ROR8__(v133 ^ 0xA80D46FB2DC6AE55LL, 16) ^ 0x969F8A84B4EEFE54LL, 40) ^ 0xABF63CE0877C09ALL,  24) ^ 0x77C09A0ABF63CE08LL,  48);
  *((void *)&v38 + 1) = v137 ^ 0x6FE54969FLL;
  *(void *)&__int128 v38 = v137 ^ 0x8A84B4E800000000LL;
  uint64_t v138 = (v38 >> 35) ^ 0xDF4B0BC9233602F3LL ^ __ROR8__(v137 ^ 0x8A84B4EEFE500000LL, 54) & 0xFFFFFFFFE00003FFLL;
  unint64_t v139 = (8 * v135) ^ 0x9BEAFA9C2CD36788LL;
  uint64_t v140 = (v135 >> 39) & 0x800000;
  uint64_t v141 = v140 | 0x6F981078787CB97CLL;
  BOOL v142 = (v139 & v140) == 0;
  unint64_t v143 = 0xDF3020F0F0F972F8LL - (v140 | 0x6F981078787CB97CLL);
  if (v142) {
    unint64_t v143 = v141;
  }
  unint64_t v144 = (v139 - 0x6F981078787CB97CLL + v143) ^ (((v135 >> 39) ^ 0xA6FABE) + ((v135 >> 39) | 0xFFFFFFFFFF7FFFFFLL) + 1);
  uint64_t v145 = (v137 >> 28) ^ __ROR8__(v138, 29) ^ 0x19B01796521310A6LL;
  uint64_t v146 = __ROR8__(v135 ^ 0x7C742BC2695AA1E2LL ^ ((v135 >> 61) - ((v135 >> 60) & 6) - 0x10F68B6E133F32EDLL), 55);
  unint64_t v147 = (v145 & 0xC5A03FDF88AFF1D0LL ^ ((v137 << 45) ^ 0x92D3E00000000000LL) & 0xC5A0200000000000LL | v145 & 0x3A5FC02077500E2FLL ^ ((v137 << 45) ^ 0x92D3E00000000000LL) & 0x3A5FC00000000000LL) ^ (v137 << 36) ^ 0xE54969F000000000LL;
  *((void *)&v149 + 1) = v146 ^ 0x3BB8CA15 ^ (v144 >> 55);
  *(void *)&__int128 v149 = v146 ^ 0x262576DB3BB8CA15LL ^ (v144 << 9);
  uint64_t v148 = v149 >> 9;
  unint64_t v150 = v128 ^ (v128 << 23) ^ (v128 >> 7) ^ ((v128 >> 41) | (v128 << 57));
  unint64_t v151 = v134 ^ v136;
  *((void *)&v149 + 1) = v134 ^ v136 ^ 0x2C0;
  *(void *)&__int128 v149 = v134 ^ v136 ^ 0xE41E4BAF956BAC00LL;
  uint64_t v152 = v149 >> 10;
  unint64_t v153 = v134 ^ 0xCB5799B2204CEF13LL;
  if (v106) {
    unint64_t v153 = ~v134;
  }
  unint64_t v154 = (v153 << 63) & ~v134 ^ __ROR8__(v134, 6) ^ ((((v134 >> 1) ^ 0x48B432268DB06DE8LL)
                                                    - ((2 * ((v134 >> 1) ^ 0x48B432268DB06DE8LL)) & 0xB47FFBFE76586984LL)
                                                    + 0x5A3FFDFF3B2C34C2LL) ^ v134 ^ 0xCB5799B2204CEF13LL | (v153 << 63));
  unint64_t v155 = v151 ^ __ROR8__(v151, 17) ^ v152;
  uint64_t v156 = v150 ^ 0xAF664C297E45415LL;
  uint64_t v157 = v147 + (v150 ^ 0xAF664C297E45415LL) - 2 * (v147 & (v150 ^ 0xAF664C297E45415LL));
  unint64_t v158 = v148 ^ (v135 << 25);
  unint64_t v159 = v154 ^ v158;
  unint64_t v160 = (v154 ^ v158 ^ 0x9422780C440FA0F5LL) & (v155 ^ 0x337E39A0B0BC6475LL);
  unint64_t v161 = v157 - ((2 * v157) & 0xCD90AD756AD9A294LL) - 0x1937A9454A932EB6LL;
  unint64_t v162 = (((v159 ^ 0x6BDD87F3BBF05F0ALL) & (v158 ^ 0xD267D99D7062239ALL))
        - ((2 * ((v159 ^ 0x6BDD87F3BBF05F0ALL) & (v158 ^ 0xD267D99D7062239ALL))) & 0xCD90AD756AD9A294LL)
        - 0x1937A9454A932EB6LL) ^ v161;
  unint64_t v163 = v162 - ((2 * v162) & 0xACF6224AFC1AEF5ALL) + 0x567B11257E0D77ADLL;
  unint64_t v164 = v155 ^ v150;
  uint64_t v165 = (v161 ^ 0x1937A9454A932EB5LL) & (v158 ^ 0x2D9826628F9DDC65LL) ^ v164;
  unint64_t v166 = (v161 ^ 0xE6C856BAB56CD14ALL) & (v164 ^ 0xC677A29DD8A7CF9FLL);
  uint64_t v167 = 0xF1A0AA210F8F4394LL - (v160 & 0x10 | 0x78D0551087C7A1CALL);
  unint64_t v168 = v159 ^ (((v155 ^ 0xCC81C65F4F439B8ALL) & v156)
               - ((2 * ((v155 ^ 0xCC81C65F4F439B8ALL) & v156)) & 0x46DFD1AB7C692A06LL)
               + 0x236FE8D5BE349503LL);
  unint64_t v169 = v162 ^ v160 & 0xFFFFFFFFFFFFFFEFLL ^ ((v158 ^ 0x2D9826628F9DDC65LL) - 0x78D0551087C7A1CALL + v167);
  uint64_t v170 = v163 ^ v165 ^ 0x6FF34C47595547CDLL;
  unint64_t v171 = ((unint64_t)((v163 ^ v165 ^ 0x595547CD) & 0x7FFFF) << 8) ^ __ROR8__(v163 ^ v165 ^ 0x1C4EECDCFD148A05LL ^ ((((v163 ^ v165) >> 19) ^ 0x1EEDBBABC5D0LL) - ((2 * (((v163 ^ v165) >> 19) ^ 0x1EEDBBABC5D0LL)) & 0x2305A722C7D8LL) - 0x14DCCE7D2C6E9C14LL), 37) ^ 0x4DB7BCAC2A553FCCLL;
  uint64_t v172 = (v168 >> 6) ^ 0x2B876F2154D32B6LL;
  unint64_t v173 = v168 ^ v155 ^ (v166 - ((2 * v166) & 0x626B473A9830EE7ALL) + 0x3135A39D4C18773DLL);
  unsigned __int8 v174 = *(_BYTE *)(v10 + 268 + ((4 * (v169 >> 61)) ^ 0x28)) ^ 0xC3;
  unint64_t v175 = ((2 * v165) & 0x657E40CDEB44B768LL ^ 0x9EEFFF3BB5FFDFBFLL) + (v165 ^ 0x39885D6227583060LL);
  unint64_t v176 = v175 - ((2 * v175 + 0x657E40CDEB44B76ALL) & 0x72704A98ED1C3A36LL) - 0x1408BA4C93CF8730LL;
  uint64_t v177 = ((v168 ^ 0x535A3588B9FE60CBLL ^ (v168 >> 6)) + v172 + 1) ^ ((v168 ^ 0x51E2437AACB3527DLL) + 1);
  unint64_t v178 = ((16 * v174) | 0x60u) ^ v174 ^ (8 * v169) ^ (v169 >> 39) ^ 0xB2F7D070576B5DFCLL;
  unint64_t v179 = v169 ^ 0x426303CA33DF0E54LL ^ (v178 - ((2 * v178) & 0xA87BF388726FE4AALL) + 0x543DF9C43937F255LL);
  uint64_t v180 = v179 + ((v169 << 25) ^ 0x1C15D1F802000000LL) - 2 * (v179 & ((v169 << 25) ^ 0x1C15D1F802000000LL));
  unint64_t v181 = v180 - 2 * (v180 & 0x67CD44E7343D75EFLL ^ v179 & 0x26);
  *((void *)&v182 + 1) = v176 ^ 0x1B;
  *(void *)&__int128 v182 = v176 ^ 0xB938254C768E1D00LL;
  unint64_t v183 = (((v168 >> 1) ^ 0xA8F121BD5659A93ELL) + 1) ^ (v168 << 58) ^ ((v168 << 63)
                                                                    + (__ROR8__(v168, 1) ^ 0xA8F121BD5659A93ELL)
                                                                    + 1) ^ ((v168 ^ 0x600C87079CF0BE7FLL ^ (v177 - ((2 * v177) & 0x9C2277059F7827FALL) - 0x31EEC47D3043EC03LL))
                                                                          + v172);
  unint64_t v184 = (v168 >> 1) ^ 0xE62B6111FAA5B93ELL ^ ((v183 ^ 0x800000000000000LL)
                                             - ((2 * v183) & 0x624B7EA6A607DFFELL)
                                             - 0x4EDA40ACACFC1001LL);
  unint64_t v185 = (v184 - ((2 * v184) & 0xF357149DD0AE652LL) + 0x79AB8A4EE857329LL) ^ (((unint64_t)v168 << 63) | 0x79AB8A4EE857329LL);
  uint64_t v186 = ((v182 >> 7) - 0x46C7DAB38971E300LL - ((2 * (v182 >> 7)) & 0x72704A98ED1C3A36LL) + 27) ^ v176;
  uint64_t v187 = v186 & 0x3CBBB4AACB9B8D41LL;
  uint64_t v188 = (v176 >> 41) ^ 0x5C9C12;
  unint64_t v189 = v173 ^ (v173 << 47) ^ ((v173 >> 10) ^ (v173 >> 17) | (v173 << 54));
  unint64_t v190 = v186 & 0xC3444B55346472BELL ^ v188 & 0x6472BE;
  unint64_t v191 = (v187 ^ v188 & 0x1B8D41 | v190)
       + ((v176 << 23) ^ 0xA63B470E8D800000LL)
       - 2 * ((v187 ^ v188 & 0x1B8D41 | v190) & ((v176 << 23) ^ 0xA63B470E8D800000LL));
  unint64_t v192 = v191 - 2 * (v191 & 0x1884EB77A264E87FLL ^ v190 & 0x2A);
  v181 += 0x67CD44E7343D75C9LL;
  unint64_t v193 = v181 ^ (v185 - ((2 * v185) & 0xCF9A89CE687AEB92LL) + 0x67CD44E7343D75C9LL);
  uint64_t v194 = v193 ^ 0xDC;
  unint64_t v195 = (v193 ^ 0xFFFFFFFFFFFFFF23LL) & (v189 ^ 0xC4729D8D96273994LL);
  unint64_t v196 = v192 + 0x1884EB77A264E855LL;
  unint64_t v197 = __ROR8__(v171, 27) ^ __ROR8__(v170, 28) ^ v196;
  unint64_t v198 = ((v194 & (v181 ^ 0x9832BB18CBC28AEALL))
        - ((2 * (v194 & (v181 ^ 0x9832BB18CBC28AEALL))) & 0xA361467F99E93040LL)
        + 0x51B0A33FCCF49820LL) ^ v197 ^ 0x343EAA01E77961E2LL;
  uint64_t v199 = v181 ^ 0x67CD44E7343D7515LL;
  uint64_t v200 = v181 ^ 0x5D203450A9471952LL;
  if (!v81) {
    uint64_t v200 = 0xC5128F48628593B8LL;
  }
  uint64_t v201 = (v196 ^ 0x1884EB77A264E855LL) & (v189 ^ 0x3B8D627269D8C66BLL);
  unint64_t v202 = v196 ^ v189;
  unint64_t v203 = (v197 ^ v200) & v199 ^ v202;
  unint64_t v204 = v198 ^ __ROR8__(__ROR8__(v195 ^ v199, 17) ^ 0xFBA1AC310EE2F857LL, 47);
  unint64_t v205 = (v203 ^ v198 ^ 0x83950F7382B44444LL)
       + (v203 ^ v198 ^ 0x2F07DF8E584CD14BLL)
       + (v203 ^ v198 ^ 0x83950F7382B44444LL)
       + 1
       - (((v203 ^ v198 ^ 0x2F07DF8E584CD14BLL) + (v203 ^ v198 ^ 0x83950F7382B44444LL) + 1) >> 5 << 6)
       - 32;
  uint64_t v206 = v205 - ((2 * v205) & 0x1F3BEA4AE6D23CFELL) - 0x70620ADA8C96E181LL;
  unint64_t v207 = v201 ^ v194 ^ v189 ^ (((v197 ^ 0x3AED70B79D7A6C47LL) & (v202 ^ 0x23098905CBBC2E3ELL))
                             - ((2 * ((v197 ^ 0x3AED70B79D7A6C47LL) & (v202 ^ 0x23098905CBBC2E3ELL))) & 0x1373C28EDFA20C36LL)
                             + 0x9B9E1476FD1061BLL);
  *((void *)&v208 + 1) = v206 ^ 0x11E7F;
  *(void *)&__int128 v208 = v206 ^ 0x8F9DF52573680000LL;
  uint64_t v209 = v206 ^ __ROR8__(v206, 28) ^ (v208 >> 19);
  v7[12] = v209 ^ 0xC;
  *((void *)&v208 + 1) = ~(v201 ^ v194);
  *(void *)&__int128 v208 = v201 ^ v194 ^ 0xB6014E3F62F5C29ALL;
  unint64_t v210 = v204 ^ (v204 >> 61) ^ (v204 >> 39) ^ (8 * v204) ^ ((v204 ^ 0xCE7FA4163DC90F20LL) << (v90 & 0x18) << (v90 & 0x18 ^ 0x19));
  v8[16] = BYTE2(v209) ^ 0xB6;
  unint64_t v211 = v207 ^ (v207 << 47) ^ (v207 >> 10) ^ ((v207 >> 17) | (v207 << 54));
  v3[22] = BYTE1(v209) ^ 0x4C;
  v7[13] = (BYTE3(v209) ^ 0x8A) - ((2 * BYTE3(v209)) & 0x48) + 36;
  v3[12] = BYTE5(v209) ^ 0x12;
  uint64_t v212 = v201 ^ v194 ^ __ROR8__(v201 ^ v194, 6) ^ (v208 >> 1);
  v8[6] = HIBYTE(v209) ^ 0xB9;
  v8[1] = BYTE4(v209) ^ 0xDD;
  v8[26] = BYTE6(v209) ^ 0xC;
  LOBYTE(v202) = *(_BYTE *)(v10 + 268 + (((v210 >> 6) | (4 * (v210 & 0x3F))) ^ 0x91));
  v3[26] = BYTE3(v210) ^ 0xD2;
  v3[7] = BYTE1(v210) ^ 0x89;
  v3[17] = BYTE4(v210) ^ 0xA7;
  v8[10] = v202 ^ 0x6F ^ (16 * v202) & 0x9F;
  *unint64_t v3 = BYTE2(v210) ^ 0x1D;
  LOBYTE(v206) = (BYTE5(v210) ^ 0x84) + (~(2 * (BYTE5(v210) ^ 0x84) + 22) | 0xEF) - 60;
  LOBYTE(v201) = *(_BYTE *)(v10 + 788 + (v206 ^ 0xF7LL));
  v3[1] = v212 ^ 0x91;
  v8[4] = HIBYTE(v210) ^ 0xBD;
  v8[2] = v201 ^ v206 & 0xDF ^ (v206 & 0x20 | 0x1C) ^ 0x90;
  v7[9] = (BYTE1(v212) ^ 0x15) - ((2 * (BYTE1(v212) ^ 0x15)) & 0x48) + 36;
  v7[16] = BYTE6(v210) ^ 0xA6;
  v3[18] = BYTE4(v212) ^ 7;
  v8[27] = BYTE5(v212) ^ 0x4B;
  v8[14] = BYTE6(v212) ^ 0xD9;
  v8[5] = ((v207 ^ (v207 >> 10) ^ (v207 >> 17)) >> 24) ^ 0xFE;
  unint64_t v213 = __ROR8__( ((v203 & 0x7F) << 16) ^ __ROR8__( v203 ^ 0x6179EBDA361C84FLL ^ (((v203 >> 7) ^ 0x1F654F5EF447224LL)
                                                                 - 2
                                                                 * (((v203 >> 7) ^ 0x1F654F5EF447224LL) & 0x13DE44A0158DA32LL ^ (v203 >> 7) & 0x10)
                                                                 - 0x2C21BB5FEA725DELL),
                                     41) ^ 0xB4F231FF95F45408LL,
           23) ^ (v203 >> 41);
  v8[13] = BYTE1(v213) ^ 0x6A;
  v3[4] = BYTE6(v211) ^ 0xD2;
  v8[7] = HIBYTE(v212) ^ 0xD8;
  v7[1] = (BYTE2(v212) ^ 0x7E) - ((2 * (BYTE2(v212) ^ 0x7E)) & 0x48) + 36;
  v8[28] = ((unsigned __int16)(v207 ^ (v207 >> 10) ^ (v207 >> 17)) >> 8) ^ 0xA7;
  v8[8] = ((v207 ^ (v207 >> 10) ^ (v207 >> 17)) >> 16) ^ 0x65;
  v3[21] = v207 ^ (v207 >> 10) ^ (v207 >> 17) ^ 0x58;
  unint64_t v214 = v213 ^ (v203 << 23);
  v3[5] = BYTE3(v212) ^ 0x9F;
  v3[23] = v213 ^ 0x16;
  v3[14] = BYTE5(v211) ^ 0x25;
  v8[18] = BYTE4(v211) ^ 0x84;
  v3[2] = HIBYTE(v211) ^ 0xE3;
  v3[19] = (*(_BYTE *)(v10 + 526 + ((-85 * (BYTE2(v214) ^ 0x9E)) ^ 0x48LL)) ^ 0x1B) + 98;
  v3[15] = ((v213 ^ ((_DWORD)v203 << 23)) >> 24) ^ 0xD2;
  v3[6] = BYTE4(v214) ^ 0xE0;
  v3[24] = BYTE5(v214) ^ 0xD;
  *BOOL v8 = BYTE6(v214) ^ 0x79;
  unsigned int v215 = *(unsigned __int8 *)(v10 + 526 + ((-85 * (HIBYTE(v214) ^ 0x49)) ^ 0x48LL));
  unsigned int v216 = ~((v215 >> 7) | (2 * v215));
  LODWORD(v206) = ((2 * v216) & 0xFFFFFFFC | (v216 >> 7) & 1) ^ 0x62;
  v8[15] = (((v206 >> 2) | ((_BYTE)v206 << 6)) ^ (((_BYTE)v216 << 7) | 0x7C)) + 98;
  *((_DWORD *)*v2 + 2) = v28 + 1;
  v217 = *v480;
  int v218 = *((_DWORD *)*v480 + 5);
  int v219 = v218 ^ 0x2F0DE36E;
  int v220 = (2 * v218) & 0x5E1BC6DC;
  unsigned int v221 = *v2;
  unsigned int v222 = *(_BYTE **)((char *)*(&off_1003E8E60 + v1 + 1318646762) - 4);
  uint64_t v223 = (uint64_t)*(&off_1003E8E60 + (int)(v1 ^ 0xB1670D31));
  uint64_t v224 = v223 + 536;
  unint64_t v225 = ((unint64_t)(*v2)[25] << 24) | ((unint64_t)(*v2)[16] << 16);
  unsigned __int8 v226 = *(_BYTE *)(v223 + 536 + ((-103 * *v222) ^ 0x8ELL)) + 12;
  LOBYTE(v206) = *(_BYTE *)(v223 + 536 + ((-103 * (v7[15] ^ 0x24)) ^ 0x8ELL)) + 12;
  char v227 = (v206 ^ 2) - ((2 * v206) & 0xD0);
  uint64_t v228 = v7[2];
  unint64_t v229 = v225 | (*v480)[3] | ((unint64_t)(v226 ^ 0x6Au) << 32) | ((v228 ^ 0x24) << 8);
  int v230 = *(_BYTE **)((char *)*(&off_1003E8E60 + (int)(v1 ^ 0xB1670C81)) - 4);
  uint64_t v231 = v7[8] ^ 0x24LL;
  unint64_t v232 = ((unint64_t)v230[4] << 8) | ((*v7 ^ 0x24LL) << 24) | ((unint64_t)v230[2] << 16) | v231;
  uint64_t v233 = v232 - 2 * (v232 & 0xEBBC9D9 ^ v231 & 0x19) - 0x7AD2C4CEF1443640LL;
  BOOL v142 = (_DWORD)v228 == 36;
  uint64_t v234 = v233 ^ 0x5511595732274107LL;
  if (v142) {
    uint64_t v234 = 0xD03C62663C9C88C7LL;
  }
  unint64_t v235 = (v234 | v233 ^ 0x852D3B310EBBC9C0LL) - ((2 * (v234 | v233 ^ 0x852D3B310EBBC9C0LL)) & 0x245FB7AEE3DBC4A4LL);
  uint64_t v236 = (v7[6] ^ 0x7EE7EFDBDCFFFDC7LL) + ((2 * (v7[6] ^ 0x20u)) & 0x1C6LL) - 0x7EE7EFDBDCFFFDE3LL;
  uint64_t v237 = v221[13];
  unint64_t v238 = ((unint64_t)v221[3] << 8) - ((v221[3] << 9) & 0x9000LL) + 0x2F3BCD3125404813LL;
  unint64_t v239 = (v236 - (v236 | v238 ^ 0x2F3BCD3125404813LL)) ^ ((v238 ^ 0xD0C432CEDABFB7ECLL) + 1);
  unint64_t v240 = (v237 << 40) | ((unint64_t)(v227 + 104) << 48) | v229 | ((unint64_t)(v7[14] ^ 0x24u) << 56);
  unint64_t v241 = ((v235 - 0x6DD024288E121DAELL) ^ 0x6DD024288E121DADLL)
       - (v233 & 0xD03C62663C9C88C7LL ^ 0xAFEFBFB9CFFBFFF8LL)
       + ((v235 - 0x6DD024288E121DAELL) & 0xD03C62663C9C88C7LL ^ 0xBFEFDFDFF3EFF77ALL)
       + 2
       * (((v235 - 0x6DD024288E121DAELL) ^ 0x922FDBD771EDE252LL) & (v233 & 0xD03C62663C9C88C7LL ^ 0xAFEFBFB9CFFBFFF8LL));
  unint64_t v242 = ((v239 - ((2 * v239) & 0x5E779A624A809026LL) + 0x2F3BCD3125404813LL) ^ v238) + v236;
  uint64_t v243 = v223 + 266;
  uint64_t v244 = (*(unsigned __int8 *)(v223 + 266 + (((*v230 >> 7) | (2 * *v230)) ^ 0x59LL)) ^ 0x90LL) << 16;
  unint64_t v245 = v7[3] ^ 0x24LL | ((unint64_t)v230[1] << 8) | ((v7[7] ^ 0x24LL) << 16) | ((unint64_t)v230[3] << 24);
  uint64_t v246 = v223 + 8;
  LOBYTE(v235) = *(_BYTE *)(v223 + 8 + ((-27 * v217[29]) ^ 0x31LL));
  unint64_t v247 = (unint64_t)v7[20] >> 7;
  LOBYTE(v236) = v235 ^ -(char)v235 ^ ((v235 ^ 0xEB) + 21);
  unint64_t v248 = (((unint64_t)v217[12] << 48) | ((unint64_t)(v7[18] ^ 0x24u) << 56) | ((unint64_t)v222[1] << 40) | ((unint64_t)v217[24] << 32) | ((unint64_t)v217[17] << 24)) ^ (v242 + v244 - 2 * (v242 & v244));
  uint64_t v478 = (v220 + v219 - 789439342);
  *((void *)&v249 + 1) = v245;
  *(void *)&__int128 v249 = v245 | ((unint64_t)(v7[10] ^ 0x24u) << 32) | ((unint64_t)v217[25] << 56) | ((unint64_t)(v7[11] ^ 0x24u) << 48) | ((unint64_t)v217[11] << 40);
  unint64_t v250 = (v241 + 1) ^ (((unint64_t)v217[9] << 40) | ((unint64_t)v230[5] << 32) | v478 | ((unint64_t)v230[6] << 48) | ((unint64_t)v222[2] << 56));
  uint64_t v251 = (v249 >> 26) ^ 0x308174E32699F1F2LL;
  unint64_t v252 = (unint64_t)(v236 + 20) << 8;
  *((void *)&v249 + 1) = v252 | v217[19];
  *(void *)&__int128 v249 = v252 | ((*(unsigned __int8 *)(v243 + (((v7[20] >> 7) | (2 * v7[20])) ^ 0x11LL)) ^ 0x90LL) << 16);
  unint64_t v253 = ((v7[4] ^ 0x24LL) << (v237 & 0x20) << (v237 & 0x20 ^ 0x20)) | ((unint64_t)(v7[5] ^ 0x24u) << 48) | ((unint64_t)v221[20] << 40);
  uint64_t v254 = (v7[19] ^ 0x24LL) - ((2 * (v7[19] ^ 0x24u)) & 0x28LL) - 0x650DD07035558BECLL;
  unint64_t v255 = (v253 | (v254 << 56)) ^ __ROR8__(((v249 >> 9) | ((v7[17] ^ 0x24LL) << 15)) ^ 0xE03B086D69709BFDLL, 55);
  uint64_t v256 = (v248 - 2 * (v248 & 0x249CBC9203851C2DLL ^ v242 & 4) + 0x249CBC9203851C29LL) ^ v250 ^ 0x249CBC9203851C29LL;
  unint64_t v257 = v256 ^ 0xD801AE4F6C69C981LL;
  v256 ^= 0x27FE51B09396367EuLL;
  unint64_t v258 = v255 ^ (v245 | ((unint64_t)(v7[10] ^ 0x24u) << 32) | ((unint64_t)v217[25] << 56) | ((unint64_t)(v7[11] ^ 0x24u) << 48) | ((unint64_t)v217[11] << 40));
  unint64_t v259 = ((v255 ^ v240) & 0xFDFFFFFFFFFFFFFFLL ^ 0x6010DAD2E137FBC0LL)
       + ((v255 ^ v240) & 0x200000000000000LL ^ 0x3A77C3AC4389F8BCLL)
       + ((2 * (v255 ^ v240)) & 0x70EF87588713F178LL ^ 0xBFDE7AFF7DFC0EFFLL);
  *(void *)&__int128 v249 = __ROR8__(v251, 38);
  uint64_t v260 = v249 ^ 0x489B6450DB7B0A27LL;
  uint64_t v261 = (((v249 ^ 0x489B6450DB7B0A27LL) & v256)
        - ((2 * ((v249 ^ 0x489B6450DB7B0A27LL) & v256)) & 0x49397924070A3852LL)
        + 0x249CBC9203851C29LL) ^ v250 ^ 0x249CBC9203851C29LL;
  unint64_t v262 = ++v259 ^ v257 & (v250 ^ 0xE86EB7CD7E9B7546LL);
  unint64_t v263 = v262 ^ (v261 - ((2 * v261) & 0x940153FD974DAE10LL) + 0x4A00A9FECBA6D708LL);
  unint64_t v264 = (((v259 ^ 0xF5801825D3E28441LL) & (v250 ^ 0x1791483281648AB9LL))
        - ((2 * ((v259 ^ 0xF5801825D3E28441LL) & (v250 ^ 0x1791483281648AB9LL))) & 0x286B1F595A26F284LL)
        + 0x14358FACAD137942LL) ^ v258;
  unint64_t v265 = (v258 ^ 0x9E661AE9B1070C88LL) & (v249 ^ 0xB7649BAF2484F5D8LL);
  uint64_t v266 = (v259 ^ 0xA7FE7DA2C1D7BBELL) & (v258 ^ 0x6199E5164EF8F377LL);
  *((void *)&v249 + 1) = v264 ^ 0x1CA;
  *(void *)&__int128 v249 = v264 ^ 0x8A5395451C147400LL;
  unint64_t v267 = v265 ^ v257;
  uint64_t v268 = ((v249 >> 10) - ((2 * (v249 >> 10)) & 0x14E9A8F44DF3358LL) - 0x7F58B2B85D906654LL) ^ (((v262 ^ 0xA7FE7DA2C1D7BBELL) >> (v256 & 0xA) >> (v256 & 0xA ^ 0xA))
                                                                                             + ((v262 << 54) ^ 0xEF80000000000000LL));
  *((void *)&v249 + 1) = v263 ^ 0xE01715E5ADB2B36LL;
  *(void *)&__int128 v249 = v263 ^ 0x4000000000000000LL;
  uint64_t v269 = v249 >> 61;
  uint64_t v270 = __ROR8__(v268, 54);
  *((void *)&v249 + 1) = v270 ^ 0x5C41E;
  *(void *)&__int128 v249 = v270 ^ 0x8A17268115000000LL;
  uint64_t v271 = v249 >> 19;
  *((void *)&v249 + 1) = v264 ^ 0x95451C1475CALL;
  *(void *)&__int128 v249 = v264 ^ 0x8A53000000000000LL;
  uint64_t v272 = v267 ^ v260 ^ v266;
  uint64_t v273 = (v249 >> 48) ^ 0xF38655192B15930ELL;
  *(void *)&__int128 v249 = __ROR8__(v263, 39);
  unint64_t v274 = ((v269 ^ v249 ^ 0xBCB5B6566C5C02E2LL)
        - ((2 * (v269 ^ v249 ^ 0xBCB5B6566C5C02E2LL)) & 0x6C133672BDF6B73ELL)
        - 0x49F664C6A104A461LL) ^ v263;
  unint64_t v275 = (((v267 >> 1) ^ (v267 >> 6) ^ 0xFC1F30AD941121ALL ^ (v267 << 58) ^ ((unint64_t)~(_DWORD)v267 << 63))
        - ((2 * ((v267 >> 1) ^ (v267 >> 6) ^ 0xFC1F30AD941121ALL)) & 0x44AA1EDCAAB28EELL)
        - 0x7DDAAF091AAA6B89LL) ^ v267;
  *(void *)&__int128 v249 = __ROR8__(v268, 18);
  uint64_t v276 = ((v271 ^ v249 ^ 0x505C41E8A1726811LL)
        - ((2 * (v271 ^ v249 ^ 0x505C41E8A1726811LL)) & 0x25EE13B6EAD20442LL)
        + 0x12F709DB75690221LL) ^ v270;
  unint64_t v277 = __ROR8__(v273, 16);
  *((void *)&v249 + 1) = v277 ^ 0xE;
  *(void *)&__int128 v249 = v277 ^ 0xBEC73B8873934980LL;
  uint64_t v278 = v249 >> 7;
  *((void *)&v249 + 1) = v272 ^ 0x12A;
  *(void *)&__int128 v249 = v272 ^ 0xDE8CC05DCAC60000LL;
  uint64_t v279 = v249 >> 10;
  unint64_t v280 = (v277 << 23) ^ 0xC439C9A4C7000000LL;
  uint64_t v281 = v277 ^ 0x547B690908EBE46LL ^ ((v278 ^ (v277 >> 41) ^ 0x5F639D)
                                     - ((2 * (v278 ^ (v277 >> 41) ^ 0x5F639D)) & 0x77011A31C63BEF90LL)
                                     - 0x447F72E71CE20838LL);
  unint64_t v282 = v281 & v280;
  unint64_t v283 = v281 | v280;
  *((void *)&v249 + 1) = v274 ^ 0x55555555;
  *(void *)&__int128 v249 = v274 ^ 0x67F71598FBDF8E00LL;
  *(void *)&__int128 v249 = __ROR8__((v249 >> 9) ^ 0xE3884F4382330DFLL, 55);
  uint64_t v284 = v283 & 0x4CB7F4488FD33927LL;
  unint64_t v285 = v283 & 0xB3480BB7702CC6D8LL;
  uint64_t v286 = v282 & 0x4CB7F4488F800000LL;
  unint64_t v287 = v282 & 0xB3480BB770000000LL;
  uint64_t v288 = v286 ^ v284;
  unint64_t v289 = v275 ^ v274;
  unint64_t v290 = v275 ^ v274 ^ 0xE0F95C8721A3C233LL ^ (v249 + 0x675872FCF7521562LL + (~(2 * v249) | 0x314F1A06115BD53BLL) + 1);
  uint64_t v291 = v289 ^ 0x95739F46F6F96B2LL;
  if (v226) {
    uint64_t v291 = v290;
  }
  unint64_t v292 = (v288 | v287) ^ v285;
  uint64_t v293 = v272 ^ __ROR8__(v272, 17) ^ v279;
  *((void *)&v294 + 1) = v289 ^ 0xB08983D83D0LL;
  *(void *)&__int128 v294 = v289 ^ 0x6E0F400000000000LL;
  uint64_t v295 = ((v291 ^ 0x675872FCF7521562LL) & (v274 ^ 0x67F71598FBDF8F55LL))
       - ((2 * ((v291 ^ 0x675872FCF7521562LL) & (v274 ^ 0x67F71598FBDF8F55LL))) & 0x1750AD07A278F7F6LL)
       + 0xBA85683D13C7BFBLL;
  uint64_t v296 = v276 ^ v292;
  unint64_t v297 = (2 * v296) ^ 0xCE3FA14B3F267381LL;
  unint64_t v298 = v296 ^ 0x98E02F5A606CC63FLL;
  unint64_t v299 = v295 ^ v296 ^ 0x934879D9B150BDC4LL;
  *(void *)&__int128 v294 = __ROR8__( __ROR8__(__ROR8__((v294 >> 46) ^ 0x54A476B8DCB47526LL, 18) ^ 0xE2B66AD6E251C8D2LL, 38) ^ __ROR8__(v292, 38) ^ 0x64627C3933140D3ALL,  26);
  unint64_t v300 = (v297 + v298) & (v274 ^ 0x9808EA67042070AALL);
  unint64_t v301 = v292 ^ 0xC5EF78D9A2860B57LL ^ (v294 - ((2 * v294) & 0x1D86C8174320A36LL) + 0xEC3640BA19051BLL);
  uint64_t v302 = v292 & (v293 ^ 0x21E650E455171BB6LL) ^ v289;
  *((void *)&v294 + 1) = v302 ^ 0xF4B08983D83D0LL;
  *(void *)&__int128 v294 = v302 ^ 0x6E00000000000000LL;
  unint64_t v303 = v299 - ((2 * v299) & 0x8F96B436C8783F20LL) - 0x3834A5E49BC3E070LL;
  unint64_t v304 = v299 ^ v274 ^ ((v301 & (v293 ^ 0xDE19AF1BAAE8E449LL))
                      - ((2 * (v301 & (v293 ^ 0xDE19AF1BAAE8E449LL))) & 0x10B6CBF66C8D66E2LL)
                      - 0x77A49A04C9B94C8FLL);
  unint64_t v305 = v292 ^ v293;
  unint64_t v306 = v300 ^ v292 ^ v293;
  uint64_t v307 = v293 ^ 0x5E3A558429C9D408LL ^ ((v298 & (v305 ^ 0x21E650E455171BB6LL))
                                      - ((2 * (v298 & (v305 ^ 0x21E650E455171BB6LL))) & 0x47F53F06426082LL)
                                      - 0x7FDC05607CDECFBFLL);
  unint64_t v308 = (v307 - ((2 * v307) & 0xDF8ACBA8F9D09C0CLL) + 0x6FC565D47CE84E06LL) ^ v302;
  unint64_t v309 = __ROR8__((v294 >> 52) ^ 0x5C527B737A69B555LL, 12);
  *((void *)&v294 + 1) = ~(_DWORD)v309;
  *(void *)&__int128 v294 = v309 ^ 0x8B8E27A11D86F9F0LL;
  uint64_t v310 = v294 >> 1;
  unint64_t v311 = v303 ^ v306;
  *((void *)&v294 + 1) = v303 ^ v306 ^ 0x5C90C;
  *(void *)&__int128 v294 = v303 ^ v306 ^ 0xA0F27B07D5580000LL;
  uint64_t v312 = v294 >> 19;
  *((void *)&v294 + 1) = v306 ^ 0x2449;
  *(void *)&__int128 v294 = v306 ^ 0xDE19AF1BAAE8C000LL;
  uint64_t v313 = v294 >> 14;
  uint64_t v314 = ((v310 ^ (v309 >> 6) ^ 0x22E389E84761BE7LL)
        - ((2 * (v310 ^ (v309 >> 6) ^ 0x22E389E84761BE7LL)) & 0x7A8EDC227CACB79CLL)
        + 0x3D476E113E565BCELL) ^ v309;
  uint64_t v315 = v314 & 0x20000000000LL | (v309 << 58);
  unint64_t v316 = ((v312 ^ ((v311 ^ 0x19D2F500CED4FBD9LL) >> 28) ^ ((v311 ^ 0x19D2F500CED4FBD9LL) << 36) ^ 0xB8932D5B9208E071LL)
        - 2
        * ((v312 ^ ((v311 ^ 0x19D2F500CED4FBD9LL) >> 28) ^ ((v311 ^ 0x19D2F500CED4FBD9LL) << 36) ^ 0xB8932D5B9208E071LL) & 0x70EFC6E43F42C99FLL ^ (v312 ^ ((v311 ^ 0x19D2F500CED4FBD9LL) >> 28)) & 4)
        - 0xF10391BC0BD3665LL) ^ v311;
  *((void *)&v294 + 1) = v308 ^ 0xFFFFFF07;
  *(void *)&__int128 v294 = v308 ^ 0xEDFD993C15A5000LL;
  uint64_t v317 = v294 >> 10;
  *((void *)&v294 + 1) = v304 ^ 0x1A510EA3D7E49876LL;
  *(void *)&__int128 v294 = v304;
  uint64_t v318 = v304 ^ __ROR8__(v304, 39) ^ (v294 >> 61);
  unint64_t v319 = __ROR8__(v313 ^ 0xFB4BDF13B948AE0BLL, 50);
  unint64_t v320 = v308 ^ __ROR8__(v308, 17) ^ v317;
  unint64_t v321 = (((v319 >> 7) ^ 0xA2E97880C2D711LL) & 0x53B52AA68E5620LL ^ v319 & 0x8853B52AA68E5620LL | ((v319 >> 7) ^ 0xA2E97880C2D711LL) & 0x1AC4AD55971A9DFLL ^ v319 & 0x77AC4AD55971A9DFLL) ^ (v319 << 57) ^ 0x5F74BC40616B8887LL;
  unint64_t v322 = (v321 ^ (v319 >> 41) ^ 0x28BA5E | (v319 << 23) ^ 0x2030B5C443800000LL) & 0xB09B2D90042F5EA9LL ^ ((v319 << 23) ^ 0x2030B5C443800000LL) & 0xB09B2D9004000000LL & v321 | (v321 ^ (v319 >> 41) ^ 0x28BA5E) & 0x4F64D26FFBD0A156LL ^ ((v319 << 23) ^ 0x2030B5C443800000LL) & 0x4F64D26FFB800000LL;
  unint64_t v323 = v315 ^ v314 & 0xFFFFFDFFFFFFFFFFLL ^ v318;
  uint64_t v324 = v322 - ((2 * v322) & 0x37FAAA1BB2822D2CLL) + 0x1BFD550DD9411696LL;
  unint64_t v325 = v316 ^ v324;
  unint64_t v326 = (v316 ^ v324 ^ 0xB41F1711CCA1E9FELL) & (v318 ^ 0x5DFEC7933BD03A6BLL);
  unint64_t v327 = ((((v318 ^ 0xC5B6C5A4CA5F45BCLL) + (v318 & 0x98480237F18F7FD7LL ^ 0x7FFFFFDB3FF0BA6BLL) + 1) | v318 & 0x98480237F18F7FD7LL ^ 0x80000024C00F4594LL) ^ 0x67B7FDC80E708028LL) & (v323 ^ 0x2F378E2318009854LL);
  unint64_t v328 = (((v324 ^ 0x1BFD550DD9411696LL) & (v320 ^ 0xD8A3A103D26C4C55LL))
        - ((2 * ((v324 ^ 0x1BFD550DD9411696LL) & (v320 ^ 0xD8A3A103D26C4C55LL))) & 0xC24FC0AEE422339CLL)
        + 0x6127E057721119CELL) ^ v323;
  unint64_t v329 = v323 ^ 0xD0C871DCE7FF67ABLL;
  unint64_t v330 = v320 ^ 0x931042AFADA7A9E6LL;
  uint64_t v331 = ((v329 & (v320 ^ 0x275C5EFC2D93B3AALL))
        - ((2 * (v329 & (v320 ^ 0x275C5EFC2D93B3AALL))) & 0x4168FE3A60187CC6LL)
        + 0x20B47F1D300C3E63LL) ^ v318;
  unint64_t v332 = (v326 ^ 0x9AEF3EF1505CF201LL) & 0x190A96A67954D8C4LL ^ 0x43009C66D338034ALL ^ (((v326 ^ 0x9AEF3EF1505CF201LL) & 0x190A96A67914D8C4LL)
                                                                                      - ((v326 ^ 0x9AEF3EF1505CF201LL) & 0x190A82860104D040LL)
                                                                                      + ((v326 ^ 0x9AEF3EF1505CF201LL) & 0x190A82860104D040LL ^ 0x5B0A8AC6832CD34ALL));
  uint64_t v333 = v332 - ((2 * v332) & 0x412D328F7303FF88LL) - 0x5F6966B8467E0031LL;
  unint64_t v334 = v325 ^ (v327 - ((2 * v327) & 0x3FBA70555A493B5CLL) - 0x6022C7D552DB6252LL) ^ 0xD43DD0C49E7A8BAFLL;
  unint64_t v335 = v324 ^ v330;
  uint64_t v336 = (v325 ^ 0x4BE0E8EE335E1601LL) & (v324 ^ v330 ^ 0x504EB6A1A68AF325LL) ^ 0x4E106E746A11819ALL;
  *((void *)&v294 + 1) = ~(_DWORD)v328;
  *(void *)&__int128 v294 = v328 ^ 0x2F07717C98E8E138LL;
  uint64_t v337 = v328 ^ 0xE295F4BCD1C6587DLL ^ ((v294 >> 1) - ((2 * (v294 >> 1)) & 0x9B250B80925D7288LL) - 0x326D7A3FB6D146BCLL);
  unint64_t v338 = v331 ^ v334;
  uint64_t v339 = ((v331 ^ v334) >> 39) ^ 0x1DF745B;
  uint64_t v340 = v339 & 0x1F0549;
  uint64_t v341 = v339 & 0x1E0FAB6;
  unint64_t v342 = v335 ^ 0x8E0788C0C99EF379LL;
  unint64_t v343 = v335 ^ 0xAFB1495E59750CDALL;
  unint64_t v344 = v333 ^ 0xDE493E616F14005CLL;
  unint64_t v345 = v342 ^ v333;
  unint64_t v346 = (v333 ^ 0x47637018162AD030LL)
       + 0x66D5B18686C12F93LL
       - ((2 * (v333 ^ 0x47637018162AD030LL) + 2) & 0xCDAB630D0D825F26LL);
  if (!*v230) {
    unint64_t v345 = v344;
  }
  if (((v345 ^ 0x66D5B18686C12F93LL) & v343) != 0) {
    unint64_t v347 = v346 + 1;
  }
  else {
    unint64_t v347 = v344;
  }
  unint64_t v348 = ((v347 ^ 0x66D5B18686C12F93LL) + v343) ^ v326 & 0xFFFFFFFFFFBFFFFFLL;
  unint64_t v349 = ((v336 ^ v328) - ((2 * (v336 ^ v328)) & 0x689838A700683498LL) - 0x4BB3E3AC7FCBE5B4LL) ^ v330;
  unint64_t v350 = v338 ^ 0xD14EDD38F185AA8FLL ^ (((8 * v338) ^ 0x7DD16FEC3C6277F8LL)
                                      - ((2 * ((8 * v338) ^ 0x7DD16FEC3C6277F8LL)) & 0x7DE9E18AEC13C8E0LL)
                                      + 0x3EF4F0C57609E470LL);
  unint64_t v351 = v331 ^ ~v334;
  unint64_t v352 = v348 ^ v334;
  *((void *)&v354 + 1) = v348 ^ v334 ^ 0x41CCA;
  *(void *)&__int128 v354 = v348 ^ v334 ^ 0x9D2FB4127C00000LL;
  uint64_t v353 = v354 >> 19;
  unint64_t v355 = v350 & 0xDAE41DEA8C1F0549LL ^ v340 | v341;
  unint64_t v356 = v348 ^ (v348 << 23) ^ (v348 >> 7) ^ ((v348 >> 41) | (v348 << 57));
  *(void *)&__int128 v354 = __ROR8__(__ROR8__(v328, 48) & 0xFFFFFFFFFFC0FFFFLL ^ __ROR8__(v337, 42) ^ 0xF72D5404FE914936LL, 22);
  unint64_t v357 = v354 ^ (v328 << 58) ^ 0xE400000000000000LL;
  unint64_t v358 = ((v254 ^ 0x9AF22F8FCAAA7414LL)
        + ((2 * v254) ^ 0xCA1BA0E06AAB17D7LL)
        + ((v254 ^ 0x9AF22F8FCAAA7414LL | (v338 << 25)) ^ 0xFB0F189DFE000000LL)
        + 1) ^ (v351 >> 61) ^ v350 & 0x251BE21573E0FAB6LL ^ v355;
  uint64_t v359 = v357 - ((2 * v354) & 0x4421DEF4D66A8A6LL);
  unint64_t v360 = v356 ^ (v352 << 36) ^ (((v353 ^ v352) & 0x366C6BAAC00136BCLL ^ 0x406B0000001488LL | ((v352 >> 28) ^ 0x9D2FB412) & 0xAC00136BCLL) ^ (v353 ^ v352 ^ 0x1488) & ((v352 >> 28) ^ 0x9D2FB412) & 0xAC00136BCLL | (v353 ^ v352) & 0xC99394553FFEC943LL ^ ((v352 >> 28) ^ 0x9D2FB412) & 0x53FFEC943LL);
  unint64_t v361 = v349 ^ (v349 << 47) ^ (v349 >> 10) ^ ((v349 >> 17) | (v349 << 54));
  unint64_t v362 = v356 ^ v361;
  unint64_t v363 = (v360 ^ 0xC198292309CDF95CLL) & v358 ^ v356 ^ v361;
  uint64_t v364 = v363 ^ 0x2ADE41BC21B6187ALL;
  uint64_t v365 = ((v363 ^ 0x2ADE41BC21B6187ALL) & 0x4000000000000LL ^ 0x7EFFFFFF333EFC9BLL)
       + 2 * ((v363 ^ 0x2ADE41BC21B6187ALL) & 0x4000000000000LL);
  unint64_t v366 = (v359 - 0x7DDEF108594CABADLL) ^ v358 ^ 0x82210EF7A6B35453LL;
  uint64_t v367 = v360 ^ (v366 ^ 0x4598C6194733B07ELL) & ~v358;
  BOOL v142 = ((v365 - 0x7EFFFFFF333EFC9BLL) & (v367 ^ 0x3E64000000000000LL)) == 0;
  uint64_t v368 = v361 & 0x19D17CE9E271173ELL ^ 0x9C038C0A231133ALL ^ (v356 ^ 0x5265F6D4338719DFLL) & (v361 ^ 0x4AD9BE24378FBDD8LL);
  unint64_t v369 = ((2 * v368) | 0xFB3BDC64D8E46FCCLL) - v368 - 0x7D9DEE326C7237E6LL;
  unint64_t v370 = (((v366 ^ 0xBA6739E6B8CC4F81LL) & (v361 ^ 0xB52641DBC8704227LL))
        - ((2 * ((v366 ^ 0xBA6739E6B8CC4F81LL) & (v361 ^ 0xB52641DBC8704227LL))) & 0x4421DEF4D66A8A6LL)
        - 0x7DDEF108594CABADLL) ^ v358 ^ 0x82210EF7A6B35453LL;
  unint64_t v371 = v366 ^ 0xC6EBD334548E7E45LL ^ v369;
  uint64_t v372 = v369 ^ 0x7C8CEAD2EC4231C4LL;
  uint64_t v373 = (v360 ^ 0x3E67D6DCF63206A3LL) & (v362 ^ 0x16D3419E679B339LL);
  unint64_t v374 = (v371 + v372 + 1) ^ ((v366 ^ 0xBA6739E6B8CC4F81LL) + 1);
  unint64_t v375 = v366 ^ 0x30D92889B1398B39LL ^ (v374 - ((2 * v374) & 0xEA83DD21EC14768ELL) + 0x7541EE90F60A3B47LL);
  *((void *)&v354 + 1) = v367 ^ 0x27D6DCF63206A3LL;
  *(void *)&__int128 v354 = v367 ^ 0x3E40000000000000LL;
  uint64_t v376 = v354 >> 54;
  uint64_t v377 = (v373 - ((2 * v373) & 0x4B2032604A54E22CLL) - 0x5A6FE6CFDAD58EEALL) ^ v361;
  uint64_t v378 = v365 - 0x501806601010C808LL;
  unint64_t v379 = 0xADE7F99E566D312ELL - v365;
  if (!v142) {
    uint64_t v378 = v379;
  }
  unint64_t v380 = v376 ^ __ROR8__(v370, 54) ^ 0xB648E73E945CA90ALL;
  uint64_t v381 = __ROR8__(v380, 10);
  unint64_t v382 = v375 + v372;
  *((void *)&v384 + 1) = v381 ^ 0x11D0CD6A4A3F7BDBLL;
  *(void *)&__int128 v384 = v381 ^ 0x4000000000000000LL;
  uint64_t v383 = v384 >> 61;
  unint64_t v385 = v377 ^ v382;
  *((void *)&v384 + 1) = v385 ^ 0xD2;
  *(void *)&__int128 v384 = v385 ^ 0xA87104CB8D6AF000LL;
  uint64_t v386 = v384 >> 10;
  uint64_t v387 = v381 ^ __ROR8__(v380, 49);
  *((void *)&v384 + 1) = ~(_DWORD)v382;
  *(void *)&__int128 v384 = v382 ^ 0x9168644D1B60DBD0LL;
  uint64_t v388 = v384 >> 1;
  uint64_t v389 = v387 ^ v383;
  unint64_t v390 = v385 ^ 0xE590403C89162BC8LL ^ ((v386 ^ (v385 << 47) ^ 0x7869000000000000LL)
                                      - 2
                                      * ((v386 ^ (v385 << 47) ^ 0x7869000000000000LL) & 0x4DE144F7047CDB1BLL ^ v386 & 1)
                                      + 0x4DE144F7047CDB1ALL);
  *(void *)&__int128 v384 = __ROR8__(v382, 6);
  unint64_t v391 = v382 ^ 0xC82EA094FB83B4BDLL ^ ((v388 ^ v384 ^ 0x4645A191346D836FLL)
                                      - ((2 * (v388 ^ v384 ^ 0x4645A191346D836FLL)) & 0xB28D89B3C1C6DED8LL)
                                      + 0x5946C4D9E0E36F6CLL);
  *((void *)&v384 + 1) = v363 ^ 0x16;
  *(void *)&__int128 v384 = v363 ^ 0x45EEDF0ED22DD980LL;
  uint64_t v392 = v363 ^ 0x8F2C3E0D83E1E14CLL ^ ((v384 >> 7) - ((2 * (v384 >> 7)) & 0x9585C206A39871B4LL) - 0x353D1EFCAE33C726LL);
  uint64_t v393 = (v385 >> 17) ^ 0x54388265C6B5LL;
  unint64_t v394 = (v363 << 23) ^ 0x876916ECCB000000LL;
  unint64_t v395 = v392 & v394;
  uint64_t v396 = v392 + v394;
  unint64_t v397 = v390 + v393;
  unint64_t v398 = v390 & v393;
  uint64_t v399 = (v396 - 2 * v395) ^ (v363 >> 41);
  uint64_t v400 = v397 - 2 * v398 - ((2 * (v397 - 2 * v398)) & 0x4837A486AB463ADCLL) - 0x5BE42DBCAA5CE292LL;
  uint64_t v401 = (v400 ^ 0x5BE42DBCAA5CE291LL) & (v399 ^ 0x22F76F);
  unint64_t v402 = (v401 & 0x40000 ^ 0xF0FFFDADDF7F7BA9LL) + 2 * (v401 & 0x40000);
  BOOL v142 = ((v402 + 0xF00025220808457LL) & (v391 ^ v389 ^ 0x8544B39DFC9C0000LL)) == 0;
  unint64_t v403 = ((v367 ^ 0x3E67D6DCF63206A3LL) - 0x2EE7F99F232E3493LL + v378) ^ v364 & 0xFFFBFFFFFFFFFFFFLL;
  unint64_t v404 = (2 * (v391 ^ v389)) & 0xD3398F425FB99478LL ^ 0xFDF6F8FDA6C66BFFLL;
  unint64_t v405 = v391 ^ v389 ^ 0x8544B39DFC9CDA41LL;
  uint64_t v406 = v403 ^ v399 ^ (v403 << 36) ^ ((v403 >> 28) | (v403 << 45)) ^ ((v403 >> 19)
                                                                     - ((v403 >> 18) & 0x2E2C1C09088ALL)
                                                                     + 0x1F74F7160E048445LL);
  unint64_t v407 = ((v391 & (v389 ^ 0x7ABB4C62036325BELL))
        - ((2 * (v391 & (v389 ^ 0x7ABB4C62036325BELL))) & 0x6EB61B4F7F0810F4LL)
        - 0x48A4F258407BF786LL) ^ v406 ^ 0xA82FFAB1B1A27B50LL;
  unint64_t v408 = (v400 ^ 0xA41BD24355A31D6ELL) & ((v405 - 0x1663385ED02335C3LL + v404) ^ 0x1663385ED02335C3LL);
  unint64_t v409 = v407 ^ v389 ^ (v408 - ((2 * v408) & 0x2514FB198C21879CLL) + 0x128A7D8CC610C3CELL);
  uint64_t v410 = v400 ^ v399;
  unint64_t v411 = v410 ^ 0xF9DAAC053BC54A10LL ^ (((v406 ^ 0xE08B08E9F1D98CD5LL) & (v389 ^ 0x8544B39DFC9CDA41LL))
                                      - ((2 * ((v406 ^ 0xE08B08E9F1D98CD5LL) & (v389 ^ 0x8544B39DFC9CDA41LL))) & 0xBB82FC8CDC894022LL)
                                      + 0x5DC17E466E44A011LL);
  unint64_t v412 = (((2 * (v410 ^ 0xF9DAAC053BC54A10LL)) ^ 0x447D03732376BFDDLL) + (v410 ^ 0xA41BD2435581EA01LL)) & (v406 ^ 0x1F74F7160E26732ALL);
  unint64_t v413 = v402 + 0x4FDED37FEAE1D580LL;
  unint64_t v414 = 0x31DECEDBA9E0CCD2LL - v402;
  if (v142) {
    unint64_t v414 = v413;
  }
  unint64_t v415 = v405 - 0x40DED12DCA615129LL + v414;
  unint64_t v416 = v401 & 0xFFFFFFFFFFFBFFFFLL;
  unint64_t v417 = v415 ^ v401 & 0xFFFFFFFFFFFBFFFFLL;
  unint64_t v418 = v415 ^ ~v416;
  uint64_t v419 = v409 ^ (v409 >> 61) ^ (v409 >> 39) ^ (8 * v409) ^ (v409 << 25);
  uint64_t v420 = (v412 - ((2 * v412) & 0x4837A486AB463ADCLL) - 0x5BE42DBCAA5CE292LL) ^ v400;
  *((void *)&v421 + 1) = v411 ^ v407 ^ 0xAE24;
  *(void *)&__int128 v421 = v411 ^ v407 ^ 0x989E911977D00000LL;
  uint64_t v422 = v411 ^ v407 ^ __ROR8__(v411 ^ v407, 28) ^ (v421 >> 19);
  *((void *)&v421 + 1) = v411 ^ 0x34;
  *(void *)&__int128 v421 = v411 ^ 0x32BF2066F5A25B80LL;
  uint64_t v423 = v421 >> 7;
  *((void *)&v421 + 1) = v411 ^ 0x66F5A25BB4LL;
  *(void *)&__int128 v421 = v411 ^ 0x32BF200000000000LL;
  uint64_t v424 = v423 ^ v411 ^ (v421 >> 41);
  uint64_t v425 = ((v424 ^ 0x32BF2066F5A25BB4LL) + (v424 ^ v422 ^ 0x28D4ACC9F4641BF8LL) + 1) ^ ((v422 ^ 0x1A6B8CAF01C6404CLL) + 1);
  uint64_t v426 = (v425 - ((2 * v425) & 0x147A3EE773A60FBELL) - 0x75C2E08C462CF821LL) ^ v422;
  uint64_t v427 = (v426 ^ 0x6FA96C2347EAB86CLL)
       - 2 * ((v426 ^ 0x6FA96C2347EAB86CLL) & 0x594FD628202FE9FFLL ^ v426 & 2)
       - 0x26B029D7DFD01603LL;
  unint64_t v428 = (v418 << 63) & ~v417 ^ __ROR8__(v417, 6) ^ 0x1461A952CDE83B6DLL ^ ((((v417 >> 1) ^ 0x7357E9D1AB4433C5LL)
                                                                           - ((2 * ((v417 >> 1) ^ 0x7357E9D1AB4433C5LL)) & 0xBAA98B7E2C74FAF0LL)
                                                                           - 0x22AB3A40E9C58288LL) ^ v417 | (v418 << 63));
  *((void *)&v421 + 1) = v420 ^ v417;
  *(void *)&__int128 v421 = v420 ^ v417 ^ 0xF7AD6319A4D1A000LL;
  uint64_t v429 = v421 >> 10;
  *(void *)&__int128 v421 = __ROR8__(*((void *)&v421 + 1), 17);
  unint64_t v430 = ((v429 ^ v421 ^ 0xD129FBD6B18CD268LL)
        - ((2 * (v429 ^ v421 ^ 0xD129FBD6B18CD268LL)) & 0x4E7C5336800E642LL)
        + 0x273E299B4007321LL) ^ *((void *)&v421 + 1);
  unint64_t v431 = v424 ^ 0xEBF0F64ED58DB249LL;
  unint64_t v432 = (v427 ^ v424 ^ 0xEBF0F64ED58DB249LL)
       + 2 * ((v426 ^ 0x6FA96C2347EAB86CLL) & (v424 ^ 0x32BF2066F5A25BB4LL))
       - ((2
         * ((v427 ^ v424 ^ 0xEBF0F64ED58DB249LL) + 2 * ((v426 ^ 0x6FA96C2347EAB86CLL) & (v424 ^ 0x32BF2066F5A25BB4LL)))) & 0xE28CD4A3F6E56BC6LL)
       - 0xEB995AE048D4A1DLL;
  unint64_t v433 = v430 ^ 0x881985C745A4B3E2LL;
  char v434 = v424 & 0x3D;
  LOBYTE(v424) = 2 * v424;
  LOBYTE(v420) = v424 & 0x6A ^ 0x68;
  char v435 = v424 & 0x7A ^ 0x68;
  unint64_t v436 = (v428 - ((2 * v428) & 0xDDD561D606A962AELL) + 0x6EEAB0EB0354B157LL) ^ v419 ^ 0xDD9BEDC6AD1458C5LL;
  unint64_t v437 = v419 ^ 0xDD9BEDC6AD1458C5LL ^ (((v430 ^ 0x611E818010D1D172LL) & ~v436)
                                      - ((2 * ((v430 ^ 0x611E818010D1D172LL) & ~v436)) & 0xDDD561D606A962AELL)
                                      + 0x6EEAB0EB0354B157LL);
  unint64_t v438 = v430 ^ 0x881985C745A4B3E2LL ^ v431;
  unint64_t v439 = v436 ^ (v438 ^ 0x3048D26F755A8B6DLL) & (v430 ^ 0x9EE17E7FEF2E2E8DLL);
  unint64_t v440 = v432 ^ ((v428 & (v419 ^ 0x4C8EA2D251BF166DLL))
               - ((2 * (v428 & (v419 ^ 0x4C8EA2D251BF166DLL))) & 0xE28CD4A3F6E56BC6LL)
               - 0xEB995AE048D4A1DLL);
  unint64_t v441 = (((v432 ^ 0xEB995AE048D4A1CLL) & (v419 ^ 0xB3715D2DAE40E992LL))
        - ((2 * ((v432 ^ 0xEB995AE048D4A1CLL) & (v419 ^ 0xB3715D2DAE40E992LL))) & 0x6091A4DEEAB516DALL)
        + 0x3048D26F755A8B6DLL) ^ v438;
  unint64_t v442 = v440 ^ v437;
  unint64_t v443 = v441 ^ v440;
  unint64_t v444 = v441 ^ v440 ^ 0xACE9FAD6D2724F72LL;
  unint64_t v445 = (v441 ^ v440) >> 19;
  unint64_t v446 = ((v443 ^ 0x53160F4BEC64CD01LL) + (v444 ^ v445) + 1) ^ ((v445 ^ 0xFFFFF59D3E168273LL) + 1);
  unint64_t v447 = (v432 ^ 0xF1466A51FB72B5E3LL) & (((2 * v438) ^ 0x6091A4DEEAB516DALL)
                                        + (v438 ^ 0x3048D26F755A8B6DLL)
                                        + ((4 * v438) ^ 0x3EDCB6422A95D24BLL));
  unint64_t v448 = (v445 ^ 0x8926690FEAE376DDLL ^ (v446 - ((2 * v446) & 0x124CC6DA561416A2LL) - 0x76D99C92D4F5F4AFLL))
       + (v443 ^ 0x53160F4BEC64CD01LL);
  unint64_t v449 = (v447 - ((2 * v447) & 0xD20E088EAAEAC520LL) - 0x16F8FBB8AA8A9D70LL) ^ v433;
  unint64_t v450 = v439 ^ 0x66E7036BB79FBFDFLL ^ (v449 - ((2 * v449) & 0xCDCE06D76F3F7FBELL) + 0x66E7036BB79FBFDFLL);
  unsigned __int8 v451 = -27 * ((v442 ^ 0x1DB3027CD7398621LL) >> (v434 ^ 0x34u) >> ((v434 ^ 0x41) + v420 + ((v435 - 61) ^ 0xFE) - 117));
  unint64_t v452 = (v448 & 0x1000000000000000LL ^ 0xFF5FFD4CEFEFEFBELL) + 2 * (v448 & 0x1000000000000000LL);
  unint64_t v453 = v450
       - ((2 * v450) & 0xFE4449C2E00C079ELL)
       + 0x7F2224E1700603CFLL
       - ((2 * (v450 - ((2 * v450) & 0xFE4449C2E00C079ELL) + 0x7F2224E1700603CFLL)) & 0xDBC71726D0200DDALL)
       - 0x121C746C97EFF913LL;
  unint64_t v454 = v452 + 0x7EA9FFF37CF237EELL;
  unint64_t v455 = v452 + 0xA002B310101042LL;
  unint64_t v456 = 0x7D69FA8D5CD2176ALL - v452;
  unint64_t v457 = (v443 << 45) ^ 0x99A0200000000000LL;
  if ((v455 & v457) == 0) {
    unint64_t v456 = v454;
  }
  uint64_t v458 = *(unsigned __int8 *)(v246 + (v451 ^ 0x31LL));
  unint64_t v459 = v448 & 0xEFFFFFFFFFFFFFFFLL ^ (v443 >> 28);
  unint64_t v460 = v459 ^ 0xF257CC61093EF80FLL;
  v459 ^= 0x53160F4BEuLL;
  uint64_t v461 = v457
       - 0x7E09FD406CE227ACLL
       + v456
       - ((2 * (v457 - 0x7E09FD406CE227ACLL + v456)) & 0x1B5067378F43E69CLL)
       + 0xDA8339BC7A1F34ELL;
  unint64_t v462 = (v459 + (v460 ^ v461) + 1) ^ ((v461 ^ 0xF257CC64385E0CB1LL) + 1);
  unint64_t v463 = ((v462 - ((2 * v462) & 0x1B5067378F43E69CLL) + 0xDA8339BC7A1F34ELL) ^ v461) + v459;
  uint64_t v464 = v463 - ((2 * v463) & 0xF22368B2F3D25C8LL) + 0x7911B45979E92E4LL;
  *((void *)&v465 + 1) = v441 ^ 0x37;
  *(void *)&__int128 v465 = v441 ^ 0x507ED11A8C40BF80LL;
  void v7[2] = (BYTE1(v464) ^ 0x92) - ((2 * BYTE1(v464)) & 0x48) + 36;
  v217[3] = (v463 - ((2 * v463) & 0xC8) - 28) ^ 0xE4;
  unint64_t v466 = v464 ^ (v443 << 36);
  LODWORD(v464) = ((BYTE2(v464) ^ 0x9Eu) >> v247 >> (v247 ^ 7)) | (2 * ((BYTE2(v464) ^ 0x9E) & 0x7F));
  unsigned int v467 = (((2 * (((_BYTE)v464 - ((2 * (_BYTE)v464) & 0xA6) - 45) & 0x59 ^ 9)) | 0xECFC0810)
        - (((_BYTE)v464 - ((2 * (_BYTE)v464) & 0xA6) - 45) & 0x59 ^ 9)
        + 159513592) ^ 0x7E764404;
  unsigned int v468 = (v467 | 0xD93D31D4) - (v467 | 0x26C2CE2B) + 650300971;
  unint64_t v469 = v453 ^ (v453 << 47) ^ (v453 >> 10) ^ (__ROR8__( (((v453 << 54) ^ 0xBB40000000000000LL) >> 27) & 0x120000000LL ^ __ROR8__(__ROR8__(__ROR8__((v453 >> 17) ^ 0x9321D9AD1AEBA97LL, 44) ^ __ROR8__((v453 >> 17) & 0x1494EB98F160LL ^ 0x9327FFBD5EFBE9FLL, 44) ^ 0xB4623C56D4295067LL, 20) ^ 0x95067B4623C56D42LL, 27) ^ 0x88875A1A2109C4C0LL,  37) ^ 0xD1084E2604443AD0LL | (((v453 >> 17) ^ 0x9321D9AD1AEBA97LL)
                                                                             + ((v453 >> 17) & 0x6B6B14670E9FLL ^ 0xF6CDF6F5EFD9F568LL)
                                                                             + 1) ^ ((v453 << 54) ^ 0xBB40000000000000LL) & 0xF6C0000000000000LL);
  LODWORD(v462) = (v464 - ((2 * v464) & 0x1A6) + 1524808659) & 0xFFFFFFA6 ^ 0x5AE2BBDB ^ -((v464
                                                                                          - ((2 * v464) & 0x1A6)
                                                                                          + 1524808659) & 0xFFFFFFA6 ^ 0x5AE2BBDB) ^ (((v464 - ((2 * v464) & 0x1A6) + 1524808659) ^ 0xA51D4475) + (v468 ^ 0x51357180) + 1);
  unint64_t v470 = v439 ^ (v439 << 58) ^ (v439 >> 1) ^ ((v439 >> 6) | (v439 << 63));
  LOBYTE(v462) = *(_BYTE *)(v243
                          + (v468 ^ 0x614B050C ^ ((_DWORD)v462 - ((2 * (_DWORD)v462) & 0x60FCE918) + 813593740))
                          + 2 * (v462 & (v468 ^ 0x51357180)));
  v221[25] = ((v463 - ((2 * (_DWORD)v463) & 0x2F3D25C8) - 1751215388) >> 24) ^ 0x97;
  v221[16] = v462 ^ 0x90;
  uint64_t v471 = v441 ^ __ROR8__(v441, 41) ^ (v465 >> 7);
  LOBYTE(v463) = *(_BYTE *)(v243 + (((v466 >> 31) & 0xFE | (v466 >> 39) & 1) ^ 0xF3));
  v7[14] = (HIBYTE(v466) ^ 0xC1) - ((2 * HIBYTE(v466)) & 0x48) + 36;
  v221[13] = BYTE5(v466) ^ 0xCB;
  unint64_t v472 = v442 ^ v458 ^ (8 * v442) ^ (v442 >> 39);
  unint64_t v473 = v472 ^ (v442 << 25);
  v230[4] = BYTE1(v472) ^ 0xD1;
  v7[8] = v472 ^ 0x1D;
  *unsigned int v222 = v463 ^ 0x90;
  v7[15] = (BYTE6(v466) ^ 0xDD) - ((2 * (BYTE6(v466) ^ 0xDD)) & 0x48) + 36;
  char v474 = *(_BYTE *)(v243 + (((v472 >> 15) & 0xFE | (v472 >> 23) & 1) ^ 0xC4));
  v7[6] = v439 ^ (v439 >> 1) ^ (v439 >> 6) ^ 0x61;
  v222[2] = HIBYTE(v473) ^ 9;
  v230[5] = BYTE4(v473) ^ 0x96;
  v230[6] = BYTE6(v473) ^ 0x85;
  v230[2] = v474 ^ 0x90;
  *int v7 = (((v472 ^ ((_DWORD)v442 << 25)) >> 24) ^ 0x2C)
  v217[9] = BYTE5(v473) ^ 0x62;
  char v475 = *(_BYTE *)(v224
                  + ((-103 * (((unsigned __int16)(v439 ^ (v439 >> 1) ^ (v439 >> 6)) >> 8) ^ 0x3A)) ^ 0x8ELL));
  v230[1] = (v469 ^ 0xEEAE73718CCA02ECLL) >> (~(_BYTE)v358 & 8) >> (v358 & 8);
  v217[24] = BYTE4(v470) ^ 0xE8;
  v7[7] = (BYTE2(v469) ^ 0xCA) - ((2 * BYTE2(v469)) & 0x48) + 36;
  v217[17] = ((v470 ^ 0xE12A49C3) + (v470 & 0x87386 ^ 0xFFF7BE7D) + 1) >> 24;
  *int v230 = ((v439 ^ (v439 >> 1) ^ (v439 >> 6)) >> 16) ^ 0x22;
  v7[18] = (HIBYTE(v470) ^ 0x85) - 2 * ((HIBYTE(v470) ^ 0x85) & 0x26 ^ HIBYTE(v470) & 2) + 36;
  v222[1] = BYTE5(v470) ^ 0x4E;
  v7[3] = v469 ^ 0xC8;
  v230[3] = BYTE3(v469) ^ 0x8C;
  v221[3] = (v475 + 12) ^ 0x6A;
  v217[25] = HIBYTE(v469) ^ 0xEE;
  v7[10] = (BYTE4(v469) ^ 0x71) + ~(2 * ((BYTE4(v469) ^ 0x71) & 0x26 ^ BYTE4(v469) & 2)) + 37;
  v217[11] = BYTE5(v469) ^ 0x73;
  unint64_t result = (HIWORD(v469) ^ 0xFFFFFFAE) - ((2 * (HIWORD(v469) ^ 0xFFFFFFAE)) & 0x48);
  v217[12] = BYTE6(v470) ^ 0x82;
  v7[11] = (BYTE6(v469) ^ 0xAE) - ((2 * (BYTE6(v469) ^ 0xAE)) & 0x48) + 36;
  LOBYTE(v464) = *(_BYTE *)(v224 + ((-103 * (v471 ^ 0xDF)) ^ 0x8ELL));
  unint64_t v477 = (v471 ^ 0xDD38F14557E880DFLL) >> (v349 & 0x28 ^ 0x20) >> (v349 & 0x28 ^ 8);
  v7[20] = (BYTE2(v471) ^ 0xE8) - 2 * ((BYTE2(v471) ^ 0xE8) & 0x27 ^ BYTE2(v471) & 3) + 36;
  v7[4] = (BYTE4(v471) ^ 0x45) - 2 * ((BYTE4(v471) ^ 0x45) & 0x26 ^ BYTE4(v471) & 2) + 36;
  v217[29] = BYTE1(v471) ^ 0x80;
  v217[19] = (v464 + 12) ^ 0x6A;
  v7[17] = (BYTE3(v471) ^ 0x57) + ~(2 * ((BYTE3(v471) ^ 0x57) & 0x2C ^ BYTE3(v471) & 8)) + 37;
  LOBYTE(v463) = *(_BYTE *)(v243 + (((v477 >> 7) & 1 | (2 * (v477 & 0x7F))) ^ 0x59));
  v7[5] = (BYTE6(v471) ^ 0x38) + (~(2 * (BYTE6(v471) ^ 0x38)) | 0xB7) + 37;
  v7[19] = (HIBYTE(v471) ^ 0xDD) - ((2 * (HIBYTE(v471) ^ 0xDD)) & 0x48) + 36;
  v221[20] = v463 ^ 0x90;
  *((_DWORD *)*v480 + 5) = v478 + 1;
  *(void *)a1 = v466 ^ 0x14682F723FC9A7FBLL;
  return result;
}

uint64_t sub_100185690(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1001856A0(uint64_t a1)
{
}

void *sub_1001856A8(void *a1, void *a2)
{
  id v3 = a2;
  int v4 = v3;
  if (a1)
  {
    uint64_t v10 = 0LL;
    unint64_t v11 = &v10;
    uint64_t v12 = 0x3032000000LL;
    unint64_t v13 = sub_100185690;
    unint64_t v14 = sub_1001856A0;
    id v15 = 0LL;
    int v5 = (void *)a1[2];
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472LL;
    void v7[2] = sub_1001857A4;
    v7[3] = &unk_1003E9780;
    unint64_t v9 = &v10;
    v7[4] = a1;
    id v8 = v3;
    sub_1002C11C4(v5, v7);
    a1 = (id)v11[5];

    _Block_object_dispose(&v10, 8);
  }

  return a1;
}

void sub_10018578C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_1001857A4(void *a1)
{
  uint64_t v2 = objc_claimAutoreleasedReturnValue([*(id *)(a1[4] + 8) objectForKeyedSubscript:a1[5]]);
  uint64_t v3 = *(void *)(a1[6] + 8LL);
  int v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_1001857E0(uint64_t a1, void *a2, void *a3)
{
  id v8 = a2;
  id v5 = a3;
  int v6 = v5;
  if (a1)
  {
    int v7 = *(void **)(a1 + 16);
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472LL;
    v9[2] = sub_100185890;
    v9[3] = &unk_1003E97D0;
    v9[4] = a1;
    id v10 = v5;
    id v11 = v8;
    sub_1002C11C4(v7, v9);
  }
}

id sub_100185890(void *a1)
{
  return [*(id *)(a1[4] + 8) setObject:a1[6] forKeyedSubscript:a1[5]];
}

id sub_100185934(uint64_t a1)
{
  if (qword_1004620D8 != -1) {
    dispatch_once(&qword_1004620D8, &stru_1003E97F0);
  }
  return (id)qword_1004620D0;
}

void sub_100185978(id a1)
{
  int v1 = objc_alloc_init(&OBJC_CLASS___Environment);
  uint64_t v2 = (void *)qword_1004620D0;
  qword_1004620D0 = (uint64_t)v1;
}

os_unfair_lock_s *sub_1001859DC(os_unfair_lock_s *a1)
{
  int v1 = a1;
  if (a1)
  {
    uint64_t v2 = a1 + 2;
    os_unfair_lock_lock(a1 + 2);
    uint64_t v3 = *(void **)&v1[6]._os_unfair_lock_opaque;
    if (!v3)
    {
      uint64_t v4 = objc_opt_self(&OBJC_CLASS___Storage);
      id v5 = sub_1002213A0(v4);
      int v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
      int v7 = (void *)objc_claimAutoreleasedReturnValue([v6 stringByAppendingPathComponent:@"storeSystem.db"]);

      id v8 = sub_1001FF0EC(objc_alloc(&OBJC_CLASS___SQLiteConnectionOptions), v7);
      id v9 = sub_1001AF0A0(objc_alloc(&OBJC_CLASS___SQLiteDatabase), v8);
      id v10 = *(void **)&v1[6]._os_unfair_lock_opaque;
      *(void *)&v1[6]._os_unfair_lock_opaque = v9;

      uint64_t v3 = *(void **)&v1[6]._os_unfair_lock_opaque;
    }

    int v1 = v3;
    os_unfair_lock_unlock(v2);
  }

  return v1;
}

void sub_100185AA0(_Unwind_Exception *a1)
{
}

os_unfair_lock_s *sub_100185AB8(os_unfair_lock_s *a1)
{
  int v1 = a1;
  if (a1)
  {
    uint64_t v2 = a1 + 2;
    os_unfair_lock_lock(a1 + 2);
    uint64_t v3 = *(void **)&v1[4]._os_unfair_lock_opaque;
    if (!v3)
    {
      id v4 = sub_100220DDC((uint64_t)&OBJC_CLASS___Storage);
      id v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
      int v6 = (void *)objc_claimAutoreleasedReturnValue([v5 stringByAppendingPathComponent:@"storeUser.db"]);

      int v7 = sub_1001FF0EC(objc_alloc(&OBJC_CLASS___SQLiteConnectionOptions), v6);
      id v8 = sub_1001AF0A0(objc_alloc(&OBJC_CLASS___SQLiteDatabase), v7);
      id v9 = *(void **)&v1[4]._os_unfair_lock_opaque;
      *(void *)&v1[4]._os_unfair_lock_opaque = v8;

      uint64_t v3 = *(void **)&v1[4]._os_unfair_lock_opaque;
    }

    int v1 = v3;
    os_unfair_lock_unlock(v2);
  }

  return v1;
}

void sub_100185B78(_Unwind_Exception *a1)
{
}

id sub_100185E88(uint64_t a1)
{
  if (qword_1004620E8 != -1) {
    dispatch_once(&qword_1004620E8, &stru_1003E9830);
  }
  return (id)qword_1004620E0;
}

void sub_100185ECC(id a1)
{
  int v1 = objc_alloc_init(&OBJC_CLASS___ODRBackgroundMaintenance);
  uint64_t v2 = (void *)qword_1004620E0;
  qword_1004620E0 = (uint64_t)v1;
}

void sub_100185F6C(void *a1)
{
  if (a1)
  {
    int v1 = a1;
    objc_sync_enter(v1);
    uint64_t v2 = ASDLogHandleForCategory(19LL);
    uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_debug_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "Cancelling maintenance operations.",  buf,  2u);
    }

    uint64_t v4 = v1[1];
    if (v4)
    {
      [*(id *)(v4 + 8) cancelAllOperations];
      uint64_t v5 = v1[1];
      if (v5) {
        [*(id *)(v5 + 8) waitUntilAllOperationsAreFinished];
      }
    }

    uint64_t v6 = ASDLogHandleForCategory(19LL);
    int v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v8 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "All maintenance operations should now be complete.",  v8,  2u);
    }

    objc_sync_exit(v1);
  }

void sub_10018605C(_Unwind_Exception *a1)
{
}

void sub_100186078(uint64_t a1)
{
  if (a1)
  {
    uint64_t v2 = ASDLogHandleForCategory(19LL);
    uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
    {
      int v7 = 136446210;
      id v8 = "-[ODRBackgroundMaintenance startBackgroundMaintenanceOperations]";
      _os_log_debug_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "%{public}s", (uint8_t *)&v7, 0xCu);
    }

    uint64_t v4 = *(void *)(a1 + 8);
    uint64_t v5 = objc_opt_new(&OBJC_CLASS___ODRMaintenanceTask);
    if (v4) {
      [*(id *)(v4 + 8) addOperation:v5];
    }

    uint64_t v6 = *(void *)(a1 + 8);
    if (v6) {
      [*(id *)(v6 + 8) waitUntilAllOperationsAreFinished];
    }
  }

id sub_1001861DC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    NSErrorUserInfoKey v8 = NSUnderlyingErrorKey;
    uint64_t v3 = ASDErrorWithSafeUserInfo(a2);
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
    id v9 = v4;
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v9,  &v8,  1LL));
  }

  else
  {
    uint64_t v5 = 0LL;
  }

  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  @"IAPInfoItemsRequestOperationErrorDomain",  a1,  v5));

  return v6;
}

id *sub_1001862B4(id *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    v22.receiver = a1;
    v22.super_class = (Class)&OBJC_CLASS___SystemAppBootstrapTask;
    a1 = (id *)objc_msgSendSuper2(&v22, "init");
    if (a1)
    {
      uint64_t v4 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
      id v5 = a1[5];
      a1[5] = v4;

      __int128 v20 = 0u;
      __int128 v21 = 0u;
      __int128 v18 = 0u;
      __int128 v19 = 0u;
      id v16 = v3;
      id v6 = v3;
      id v7 = [v6 countByEnumeratingWithState:&v18 objects:v23 count:16];
      if (v7)
      {
        id v8 = v7;
        uint64_t v9 = *(void *)v19;
        do
        {
          for (i = 0LL; i != v8; i = (char *)i + 1)
          {
            if (*(void *)v19 != v9) {
              objc_enumerationMutation(v6);
            }
            id v11 = *(void **)(*((void *)&v18 + 1) + 8LL * (void)i);
            uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v11 valueForProperty:@"bundle_id"]);
            if (v12)
            {
              unint64_t v13 = (os_log_s *)[v11 copy];
              [a1[5] setObject:v13 forKeyedSubscript:v12];
            }

            else
            {
              uint64_t v14 = ASDLogHandleForCategory(2LL);
              unint64_t v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v14);
              if (os_log_type_enabled(v13, OS_LOG_TYPE_FAULT))
              {
                *(_WORD *)buf = 0;
                _os_log_fault_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_FAULT,  "Refusing to bootstrap system app with missing bundle identifier",  buf,  2u);
              }
            }
          }

          id v8 = [v6 countByEnumeratingWithState:&v18 objects:v23 count:16];
        }

        while (v8);
      }

      id v3 = v16;
    }
  }

  return a1;
}

void *sub_100186EC4(void *a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  if (a1)
  {
    v9.receiver = a1;
    v9.super_class = (Class)&OBJC_CLASS___ODRApplicationPurgeTask;
    a1 = objc_msgSendSuper2(&v9, "init");
    if (a1)
    {
      id v6 = [v5 copy];
      id v7 = (void *)a1[5];
      a1[5] = v6;

      a1[6] = a3;
    }
  }

  return a1;
}

void *sub_100186FC8(void *result)
{
  int v1 = (void *)result[4];
  if (v1)
  {
    id v2 = sub_1001B53D0((uint64_t)&OBJC_CLASS___ODRDatabaseStore);
    id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 3221225472LL;
    void v4[2] = sub_100187048;
    v4[3] = &unk_1003E9858;
    v4[4] = v1;
    [v3 modifyUsingTransaction:v4];

    return [v1 completeWithSuccess];
  }

  return result;
}

BOOL sub_100187048(uint64_t a1, uint64_t *a2)
{
  return sub_1001C5238(a2, *(void **)(*(void *)(a1 + 32) + 40LL), *(void *)(*(void *)(a1 + 32) + 48LL));
}

id sub_1001873E8(void *a1)
{
  if (a1)
  {
    id v1 = sub_100187408(a1, 0LL);
    a1 = (void *)objc_claimAutoreleasedReturnValue(v1);
  }

  return a1;
}

id sub_100187408(void *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    uint64_t v10 = 0LL;
    id v11 = &v10;
    uint64_t v12 = 0x3032000000LL;
    unint64_t v13 = sub_1001890BC;
    uint64_t v14 = sub_1001890CC;
    id v15 = objc_opt_new(&OBJC_CLASS___NSMutableArray);
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([a1 connection]);
    id v5 = sub_10024CBB0((uint64_t)&OBJC_CLASS___ODRAssetDownload, v4, v3);
    id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);

    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472LL;
    v9[2] = sub_1001890D4;
    v9[3] = &unk_1003E9920;
    v9[4] = &v10;
    [v6 enumerateMemoryEntitiesUsingBlock:v9];
    id v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithArray:](&OBJC_CLASS___NSArray, "arrayWithArray:", v11[5]));

    _Block_object_dispose(&v10, 8);
  }

  else
  {
    id v7 = 0LL;
  }

  return v7;
}

void sub_100187530( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

id sub_100187548(void *a1)
{
  if (!a1) {
    return 0LL;
  }
  id v2 = objc_opt_new(&OBJC_CLASS___NSMutableArray);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([a1 connection]);
  id v4 = sub_10024CBB0((uint64_t)&OBJC_CLASS___ODRManifest, v3, 0LL);
  id v5 = (void *)objc_claimAutoreleasedReturnValue(v4);

  uint64_t v12 = @"bundle_id";
  id v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v12, 1LL));
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  _DWORD v10[2] = sub_100187694;
  v10[3] = &unk_1003E98A8;
  id v11 = v2;
  id v7 = v2;
  [v5 enumerateMemoryEntitiesWithProperties:v6 usingBlock:v10];

  id v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithArray:](&OBJC_CLASS___NSArray, "arrayWithArray:", v7));
  return v8;
}

void sub_100187694(uint64_t a1, void *a2)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue([a2 valueForProperty:@"bundle_id"]);
  if (v3)
  {
    id v4 = v3;
    [*(id *)(a1 + 32) addObject:v3];
    id v3 = v4;
  }
}

uint64_t sub_1001876E8(void *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    id v4 = sub_10018786C(a1, (uint64_t)v3);
    id v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
    id v6 = sub_1001ACD2C((uint64_t)&OBJC_CLASS___ODRAssetPack, v3);
    id v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
    __int128 v16 = 0u;
    __int128 v17 = 0u;
    __int128 v18 = 0u;
    __int128 v19 = 0u;
    id v8 = v5;
    uint64_t v9 = (uint64_t)[v8 countByEnumeratingWithState:&v16 objects:v20 count:16];
    if (v9)
    {
      uint64_t v10 = *(void *)v17;
      while (2)
      {
        for (uint64_t i = 0LL; i != v9; ++i)
        {
          if (*(void *)v17 != v10) {
            objc_enumerationMutation(v8);
          }
          id v12 = sub_1001F7B20(*(void **)(*((void *)&v16 + 1) + 8 * i));
          unint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
          uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "absoluteString", (void)v16));

          if (v14 && [v14 hasPrefix:v7])
          {

            uint64_t v9 = 1LL;
            goto LABEL_13;
          }
        }

        uint64_t v9 = (uint64_t)[v8 countByEnumeratingWithState:&v16 objects:v20 count:16];
        if (v9) {
          continue;
        }
        break;
      }
    }

id sub_10018786C(id a1, uint64_t a2)
{
  id v2 = a1;
  if (a1)
  {
    id v3 = sub_1002D9D08(a2);
    id v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
    id v5 = sub_100187BA4(v2, v4, 0);
    id v2 = (id)objc_claimAutoreleasedReturnValue(v5);
  }

  return v2;
}

id sub_1001878BC(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  if (a1)
  {
    if (v3)
    {
      id v5 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"bundle_id",  v3));
      id v6 = sub_100187408(a1, v5);
      a1 = (void *)objc_claimAutoreleasedReturnValue(v6);
    }

    else
    {
      a1 = &__NSArray0__struct;
    }
  }

  return a1;
}

id sub_10018793C(id a1, uint64_t a2, void *a3)
{
  id v3 = a1;
  if (a1)
  {
    id v5 = a3;
    id v6 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"bundle_id",  a2));
    id v7 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"bundle_key",  v5));

    v13[0] = v6;
    v13[1] = v7;
    id v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v13, 2LL));
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v8));

    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v3 connection]);
    id v11 = sub_10024CAA4((uint64_t)&OBJC_CLASS___ODRAssetDownload, v10, v9);
    id v3 = (id)objc_claimAutoreleasedReturnValue(v11);
  }

  return v3;
}

id sub_100187A78(id a1, uint64_t a2, uint64_t a3)
{
  id v3 = a1;
  if (a1)
  {
    id v5 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"coordinator_id",  a2));
    id v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", a3));
    id v7 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"type",  v6));

    v12[0] = v5;
    v12[1] = v7;
    id v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v12, 2LL));
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v8));

    id v10 = sub_100187408(v3, v9);
    id v3 = (id)objc_claimAutoreleasedReturnValue(v10);
  }

  return v3;
}

id sub_100187BA4(void *a1, void *a2, int a3)
{
  id v5 = a2;
  id v6 = v5;
  if (a1)
  {
    if (v5)
    {
      id v7 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"bundle_id",  v5));
      id v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray arrayWithObjects:](&OBJC_CLASS___NSMutableArray, "arrayWithObjects:", v7, 0LL));
      if (a3)
      {
        uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteNullPredicate isNotNullPredicateWithProperty:]( &OBJC_CLASS___SQLiteNullPredicate,  "isNotNullPredicateWithProperty:",  @"local_url"));
        [v8 addObject:v9];
      }

      id v10 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v8));
      id v11 = sub_100187E14(a1, v10, 0);
      a1 = (void *)objc_claimAutoreleasedReturnValue(v11);
    }

    else
    {
      a1 = &__NSArray0__struct;
    }
  }

  return a1;
}

id sub_100187CA8(void *a1, void *a2, uint64_t a3, void *a4)
{
  if (a1)
  {
    id v4 = sub_100187CC4(a1, a2, a3, a4);
    a1 = (void *)objc_claimAutoreleasedReturnValue(v4);
  }

  return a1;
}

id sub_100187CC4(id a1, void *a2, uint64_t a3, void *a4)
{
  id v4 = a1;
  if (a1)
  {
    id v5 = sub_1001890E8(a2, a3, a4);
    id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
    v10[0] = @"effective_preservation_priority";
    v10[1] = @"last_used_date";
    id v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v10, 2LL));
    id v8 = sub_100189294(v4, v6, v7, 0);
    id v4 = (id)objc_claimAutoreleasedReturnValue(v8);
  }

  return v4;
}

id sub_100187D90(id a1, uint64_t a2)
{
  id v2 = a1;
  if (a1)
  {
    id v3 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"bundle_key",  a2));
    id v4 = (void *)objc_claimAutoreleasedReturnValue([v2 connection]);
    id v5 = sub_10024CAA4((uint64_t)&OBJC_CLASS___ODRAssetPack, v4, v3);
    id v2 = (id)objc_claimAutoreleasedReturnValue(v5);
  }

  return v2;
}

id sub_100187E14(void *a1, void *a2, char a3)
{
  id v3 = sub_100189294(a1, a2, 0LL, a3);
  return (id)objc_claimAutoreleasedReturnValue(v3);
}

id sub_100187E34(id a1, void *a2)
{
  id v2 = a1;
  if (a1)
  {
    id v3 = (void *)objc_claimAutoreleasedReturnValue([a2 absoluteString]);
    id v4 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"local_url",  v3));

    id v5 = (void *)objc_claimAutoreleasedReturnValue([v2 connection]);
    id v6 = sub_10024CAA4((uint64_t)&OBJC_CLASS___ODRAssetPack, v5, v4);
    id v2 = (id)objc_claimAutoreleasedReturnValue(v6);
  }

  return v2;
}

id sub_100187ED4(id a1, void *a2, uint64_t a3)
{
  id v3 = a1;
  if (a1)
  {
    id v5 = a2;
    id v6 = sub_1002D9D08(a3);
    id v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
    id v8 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"bundle_id",  v7));

    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v5 allObjects]);
    id v10 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteContainsPredicate containsPredicateWithProperty:values:]( &OBJC_CLASS___SQLiteContainsPredicate,  "containsPredicateWithProperty:values:",  @"name",  v9));

    v28[0] = v8;
    v28[1] = v10;
    id v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v28, 2LL));
    id v12 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v11));

    unint64_t v13 = objc_opt_new(&OBJC_CLASS___NSMutableSet);
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v3 connection]);
    id v15 = sub_10024C1D0((uint64_t)&OBJC_CLASS___ODRTagEntity, v14, v12);
    __int128 v16 = (void *)objc_claimAutoreleasedReturnValue(v15);

    unint64_t v27 = @"bundle_key";
    __int128 v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v27, 1LL));
    v24[0] = _NSConcreteStackBlock;
    v24[1] = 3221225472LL;
    v24[2] = sub_100188158;
    v24[3] = &unk_1003E98A8;
    unint64_t v25 = v13;
    __int128 v18 = v13;
    [v16 enumerateMemoryEntitiesWithProperties:v17 usingBlock:v24];

    __int128 v19 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteContainsPredicate containsPredicateWithProperty:values:]( &OBJC_CLASS___SQLiteContainsPredicate,  "containsPredicateWithProperty:values:",  @"bundle_key",  v18));
    v26[0] = v8;
    v26[1] = v19;
    __int128 v20 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v26, 2LL));
    __int128 v21 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v20));

    id v22 = sub_100187E14(v3, v21, 0);
    id v3 = (id)objc_claimAutoreleasedReturnValue(v22);
  }

  return v3;
}

void sub_100188158(uint64_t a1, void *a2)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue([a2 valueForProperty:@"bundle_key"]);
  if (v3)
  {
    id v4 = v3;
    [*(id *)(a1 + 32) addObject:v3];
    id v3 = v4;
  }
}

id sub_1001881AC(void *a1, void *a2)
{
  if (a1)
  {
    id v2 = sub_100187BA4(a1, a2, 1);
    a1 = (void *)objc_claimAutoreleasedReturnValue(v2);
  }

  return a1;
}

void sub_1001881CC(void *a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  if (a1)
  {
    id v9 = a5;
    id v10 = sub_1001890E8(a2, a3, a4);
    id v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
    v22[0] = @"effective_preservation_priority";
    v22[1] = @"last_used_date";
    id v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v22, 2LL));
    id v13 = v9;
    id v14 = v12;
    id v15 = v11;
    __int128 v16 = (void *)objc_claimAutoreleasedReturnValue([a1 connection]);
    id v17 = sub_10024CC48((uint64_t)&OBJC_CLASS___ODRAssetPack, v16, v15, v14);
    __int128 v18 = (void *)objc_claimAutoreleasedReturnValue(v17);

    v20[0] = _NSConcreteStackBlock;
    v20[1] = 3221225472LL;
    v20[2] = sub_100189450;
    v20[3] = &unk_1003E98F8;
    id v19 = v13;
    id v21 = v19;
    [v18 enumerateMemoryEntitiesUsingBlock:v20];
  }

id sub_100188344(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  if (a1 && (id v5 = sub_1002D9D08((uint64_t)v3), v6 = (void *)objc_claimAutoreleasedReturnValue(v5), v6, v6))
  {
    id v7 = objc_opt_new(&OBJC_CLASS___NSMutableArray);
    id v8 = sub_1002D9D08((uint64_t)v4);
    id v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
    id v10 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"bundle_id",  v9));
    -[NSMutableArray addObject:](v7, "addObject:", v10);

    id v11 = sub_1002DA4EC((uint64_t)v4);
    id v12 = (void *)objc_claimAutoreleasedReturnValue(v11);

    if (v12)
    {
      id v13 = sub_1002DA4EC((uint64_t)v4);
      id v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
      id v15 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"evid",  v14));
      -[NSMutableArray addObject:](v7, "addObject:", v15);
    }

    __int128 v16 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v7));
    id v17 = (void *)objc_claimAutoreleasedReturnValue([a1 connection]);
    id v18 = sub_10024CAA4((uint64_t)&OBJC_CLASS___ODRManifest, v17, v16);
    id v19 = (void *)objc_claimAutoreleasedReturnValue(v18);

    id v20 = sub_10018786C(a1, (uint64_t)v4);
    id v21 = (void *)objc_claimAutoreleasedReturnValue(v20);
    sub_10020CEC8((uint64_t)v19, v21);
  }

  else
  {
    id v19 = 0LL;
  }

  return v19;
}

id sub_1001884E0(id a1, uint64_t a2)
{
  id v2 = a1;
  if (a1)
  {
    id v3 = sub_1002D9D08(a2);
    id v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
    id v5 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"bundle_id",  v4));

    id v6 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"download_priority",  &off_10040BDB8));
    v11[0] = v5;
    v11[1] = v6;
    id v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v11, 2LL));
    id v8 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v7));

    id v9 = sub_100187E14(v2, v8, 1);
    id v2 = (id)objc_claimAutoreleasedReturnValue(v9);
  }

  return v2;
}

id sub_100188608(id a1, uint64_t a2)
{
  id v2 = a1;
  if (a1)
  {
    id v3 = sub_1002D9D08(a2);
    id v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
    id v5 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"bundle_id",  v4));

    id v6 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:value:comparisonType:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:value:comparisonType:",  @"download_priority",  &off_10040BDD0,  5LL));
    id v7 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:value:comparisonType:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:value:comparisonType:",  @"download_priority",  &off_10040BDB8,  3LL));
    v12[0] = v5;
    v12[1] = v6;
    void v12[2] = v7;
    id v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v12, 3LL));
    id v9 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v8));

    id v10 = sub_100187E14(v2, v9, 1);
    id v2 = (id)objc_claimAutoreleasedReturnValue(v10);
  }

  return v2;
}

id sub_100188760(void *a1)
{
  if (a1)
  {
    id v1 = sub_100187CC4(a1, 0LL, 0LL, 0LL);
    a1 = (void *)objc_claimAutoreleasedReturnValue(v1);
  }

  return a1;
}

uint64_t sub_100188788(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  if (a1)
  {
    if (sub_1002DA5E4((uint64_t)v3))
    {
      id v16 = 0LL;
      char v5 = sub_100188938((void *)a1, v4, &v16);
      id v6 = v16;
      id v7 = v6;
      if ((v5 & 1) != 0)
      {
        if ((sub_1001876E8((void *)a1, v4) & 1) != 0)
        {
          a1 = 4LL;
        }

        else
        {
          id v10 = sub_100188A28((id)a1, (uint64_t)v4);
          id v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
          id v12 = [v11 count];

          if (v12) {
            a1 = 5LL;
          }
          else {
            a1 = 3LL;
          }
        }
      }

      else if ((ASDErrorIsEqual(v6, @"_OnDemandResourcesErrorDomain", 100LL) & 1) != 0)
      {
        a1 = 2LL;
      }

      else
      {
        if ((ASDErrorIsEqual(v7, @"_OnDemandResourcesErrorDomain", 118LL) & 1) == 0)
        {
          uint64_t v13 = ASDLogHandleForCategory(19LL);
          id v14 = (os_log_s *)objc_claimAutoreleasedReturnValue(v13);
          if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 138543618;
            id v18 = v4;
            __int16 v19 = 2114;
            id v20 = v7;
            _os_log_error_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_ERROR,  "Forcing refresh after unexpected failure validating manifest during preflight for %{public}@ error: %{public}@",  buf,  0x16u);
          }
        }

        a1 = 3LL;
      }
    }

    else
    {
      id v8 = sub_100188344((void *)a1, v4);
      id v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
      a1 = v9 == 0LL;
    }
  }

  return a1;
}

uint64_t sub_100188938(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  if (a1)
  {
    id v6 = sub_100188344(a1, v5);
    id v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
    id v8 = v7;
    if (v7)
    {
      id v9 = sub_10020CB80(v7);
      id v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
      id v11 = sub_1002DAB14((uint64_t)v5);
      uint64_t v12 = objc_claimAutoreleasedReturnValue(v11);
      uint64_t v13 = (void *)v12;
      if (v10 && v12 && ([v10 isEqualToString:v12] & 1) != 0)
      {
        uint64_t v14 = 1LL;
      }

      else
      {
        uint64_t v14 = 0LL;
        if (a3) {
          *a3 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  @"_OnDemandResourcesErrorDomain",  118LL,  0LL));
        }
      }
    }

    else
    {
      uint64_t v14 = 0LL;
    }
  }

  else
  {
    uint64_t v14 = 0LL;
  }

  return v14;
}

id sub_100188A28(id a1, uint64_t a2)
{
  id v2 = a1;
  if (a1)
  {
    id v3 = sub_1002D9D08(a2);
    id v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
    id v5 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"bundle_id",  v4));

    id v6 = sub_100188CB4(v2, v5);
    id v2 = (id)objc_claimAutoreleasedReturnValue(v6);
  }

  return v2;
}

id sub_100188AA8(void *a1)
{
  if (a1)
  {
    id v1 = sub_100187CC4(a1, 0LL, 1LL, 0LL);
    a1 = (void *)objc_claimAutoreleasedReturnValue(v1);
  }

  return a1;
}

id sub_100188AD0(id a1, uint64_t a2, uint64_t a3)
{
  id v3 = a1;
  if (a1)
  {
    id v5 = sub_1002D9D08(a3);
    id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
    id v7 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"bundle_id",  v6));

    id v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", a2));
    id v9 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"purge_reason",  v8));

    v14[0] = v7;
    v14[1] = v9;
    id v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v14, 2LL));
    id v11 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v10));

    id v12 = sub_100187E14(v3, v11, 0);
    id v3 = (id)objc_claimAutoreleasedReturnValue(v12);
  }

  return v3;
}

id sub_100188C1C(id a1, uint64_t a2)
{
  id v2 = a1;
  if (a1)
  {
    id v3 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"bundle_id",  a2));
    id v4 = (void *)objc_claimAutoreleasedReturnValue([v2 connection]);
    id v5 = sub_10024CAA4((uint64_t)&OBJC_CLASS___ODRManifest, v4, v3);
    id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);

    id v7 = sub_10020CB38(v6);
    id v2 = (id)objc_claimAutoreleasedReturnValue(v7);
  }

  return v2;
}

id sub_100188CB4(void *a1, void *a2)
{
  id v3 = a2;
  uint64_t v10 = 0LL;
  id v11 = &v10;
  uint64_t v12 = 0x3032000000LL;
  uint64_t v13 = sub_1001890BC;
  uint64_t v14 = sub_1001890CC;
  id v15 = objc_opt_new(&OBJC_CLASS___NSMutableArray);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([a1 connection]);
  id v5 = sub_10024CBB0((uint64_t)&OBJC_CLASS___ODRTag, v4, v3);
  id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);

  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  v9[2] = sub_1001894B0;
  v9[3] = &unk_1003E9920;
  v9[4] = &v10;
  [v6 enumerateMemoryEntitiesUsingBlock:v9];
  id v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithArray:](&OBJC_CLASS___NSArray, "arrayWithArray:", v11[5]));

  _Block_object_dispose(&v10, 8);
  return v7;
}

void sub_100188DD0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

id sub_100188DE8(id a1, uint64_t a2)
{
  id v2 = a1;
  if (a1)
  {
    id v3 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"bundle_key",  a2));
    id v4 = sub_100188CB4(v2, v3);
    id v2 = (id)objc_claimAutoreleasedReturnValue(v4);
  }

  return v2;
}

id sub_100188E44(id a1, void *a2, uint64_t a3)
{
  id v3 = a1;
  if (a1)
  {
    id v5 = a2;
    id v6 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"bundle_id",  a3));
    id v7 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"name",  v5));

    v13[0] = v6;
    v13[1] = v7;
    id v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v13, 2LL));
    id v9 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v8));

    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v3 connection]);
    id v11 = sub_10024CAA4((uint64_t)&OBJC_CLASS___ODRTag, v10, v9);
    id v3 = (id)objc_claimAutoreleasedReturnValue(v11);
  }

  return v3;
}

void **sub_100188F80(void **a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  if (a1)
  {
    if (v3)
    {
      id v5 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"bundle_id",  v3));
      v11[0] = v5;
      id v6 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:value:comparisonType:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:value:comparisonType:",  @"pin_count",  &off_10040BDD0,  5LL));
      v11[1] = v6;
      id v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v11, 2LL));
      id v8 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v7));

      id v9 = sub_10024C5D8((uint64_t)&OBJC_CLASS___ODRAssetPackEntity, @"uncompressed_size", v8, a1[1]);
      a1 = (void **)objc_claimAutoreleasedReturnValue(v9);
    }

    else
    {
      a1 = (void **)&off_10040BDD0;
    }
  }

  return a1;
}

uint64_t sub_1001890BC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1001890CC(uint64_t a1)
{
}

id sub_1001890D4(uint64_t a1, uint64_t a2)
{
  return [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) addObject:a2];
}

id sub_1001890E8(void *a1, uint64_t a2, void *a3)
{
  id v5 = a1;
  id v6 = a3;
  if ((_DWORD)a2) {
    uint64_t v7 = 1LL;
  }
  else {
    uint64_t v7 = 5LL;
  }
  id v8 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:value:comparisonType:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:value:comparisonType:",  @"pin_count",  &off_10040BDD0,  v7));
  id v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", a2));
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"purgeable",  v9));

  id v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray arrayWithObjects:](&OBJC_CLASS___NSMutableArray, "arrayWithObjects:", v8, v10, 0LL));
  if (v5)
  {
    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"bundle_id",  v5));
    [v11 addObject:v12];
  }

  if (v6)
  {
    [v6 timeIntervalSinceReferenceDate];
    uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:"));
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:value:comparisonType:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:value:comparisonType:",  @"last_used_date",  v13,  3LL));

    [v11 addObject:v14];
  }

  objc_opt_self(&OBJC_CLASS___ODRPlatformPolicies);
  id v15 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v11));

  return v15;
}

id sub_100189294(void *a1, void *a2, void *a3, char a4)
{
  id v7 = a2;
  id v8 = a3;
  uint64_t v16 = 0LL;
  id v17 = &v16;
  uint64_t v18 = 0x3032000000LL;
  __int16 v19 = sub_1001890BC;
  id v20 = sub_1001890CC;
  id v21 = objc_opt_new(&OBJC_CLASS___NSMutableArray);
  id v9 = (void *)objc_claimAutoreleasedReturnValue([a1 connection]);
  id v10 = sub_10024CC48((uint64_t)&OBJC_CLASS___ODRAssetPack, v9, v7, v8);
  id v11 = (void *)objc_claimAutoreleasedReturnValue(v10);

  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472LL;
  void v14[2] = sub_1001893EC;
  v14[3] = &unk_1003E98D0;
  char v15 = a4;
  v14[4] = &v16;
  [v11 enumerateMemoryEntitiesUsingBlock:v14];
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithArray:](&OBJC_CLASS___NSArray, "arrayWithArray:", v17[5]));

  _Block_object_dispose(&v16, 8);
  return v12;
}

void sub_1001893D4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_1001893EC(uint64_t a1, void *a2)
{
  id v3 = a2;
}

void sub_100189450(uint64_t a1, void *a2)
{
  id v4 = a2;
  id v3 = objc_autoreleasePoolPush();
  (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();
  objc_autoreleasePoolPop(v3);
}

id sub_1001894B0(uint64_t a1, uint64_t a2)
{
  return [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) addObject:a2];
}

id *sub_1001894DC(id *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    v6.receiver = a1;
    v6.super_class = (Class)&OBJC_CLASS____ProtocolHandler;
    id v4 = (id *)objc_msgSendSuper2(&v6, "init");
    a1 = v4;
    if (v4) {
      objc_storeWeak(v4 + 1, v3);
    }
  }

  return a1;
}

void *sub_10018988C(void *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    v10.receiver = a1;
    v10.super_class = (Class)&OBJC_CLASS___StoreDRM;
    a1 = objc_msgSendSuper2(&v10, "init");
    if (a1)
    {
      id v4 = sub_1002D64A4(v3);
      id v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
      id v6 = sub_10031D77C(v5, &stru_1003E9960);
      uint64_t v7 = objc_claimAutoreleasedReturnValue(v6);
      id v8 = (void *)a1[1];
      a1[1] = v7;
    }
  }

  return a1;
}

id sub_100189920(id a1, NSDictionary *a2)
{
  id v2 = a2;
  id v3 = sub_10029170C(objc_alloc(&OBJC_CLASS___StoreSinf), v2);

  return v3;
}

id *sub_100189964(id *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    __int128 v16 = 0u;
    __int128 v17 = 0u;
    __int128 v14 = 0u;
    __int128 v15 = 0u;
    id v4 = a1[1];
    id v5 = [v4 countByEnumeratingWithState:&v14 objects:v18 count:16];
    if (v5)
    {
      id v6 = v5;
      uint64_t v7 = 0LL;
      uint64_t v8 = *(void *)v15;
LABEL_4:
      id v9 = 0LL;
      objc_super v10 = v7;
      while (1)
      {
        if (*(void *)v15 != v8) {
          objc_enumerationMutation(v4);
        }
        id v11 = sub_10029177C(*(void *)(*((void *)&v14 + 1) + 8LL * (void)v9), (uint64_t)v3);
        uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(v11);

        if (objc_msgSend(v7, "length", (void)v14)) {
          break;
        }
        id v9 = (char *)v9 + 1;
        objc_super v10 = v7;
        if (v6 == v9)
        {
          id v6 = [v4 countByEnumeratingWithState:&v14 objects:v18 count:16];
          if (v6) {
            goto LABEL_4;
          }
          break;
        }
      }
    }

    else
    {
      uint64_t v7 = 0LL;
    }

    if ([v7 length]) {
      uint64_t v12 = v7;
    }
    else {
      uint64_t v12 = 0LL;
    }
    a1 = v12;
  }

  return a1;
}

uint64_t sub_100189AC4(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  if (a1)
  {
    if ([v7 count])
    {
      id v9 = (void *)objc_claimAutoreleasedReturnValue( +[NSMutableArray arrayWithCapacity:]( NSMutableArray,  "arrayWithCapacity:",  [v7 count]));
      __int128 v25 = 0u;
      __int128 v26 = 0u;
      __int128 v27 = 0u;
      __int128 v28 = 0u;
      id v10 = v7;
      id v11 = [v10 countByEnumeratingWithState:&v25 objects:v29 count:16];
      if (v11)
      {
        id v12 = v11;
        uint64_t v13 = *(void *)v26;
        do
        {
          __int128 v14 = 0LL;
          do
          {
            if (*(void *)v26 != v13) {
              objc_enumerationMutation(v10);
            }
            if (v15) {
              [v9 addObject:v15];
            }

            __int128 v14 = (char *)v14 + 1;
          }

          while (v12 != v14);
          id v12 = [v10 countByEnumeratingWithState:&v25 objects:v29 count:16];
        }

        while (v12);
      }

      if ([v9 count])
      {
        __int128 v16 = sub_10031E148((uint64_t)[v9 count]);
        __int128 v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
        uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"DELETE FROM iap_info_iaps WHERE dsid = ? AND adam_id IN (%@);",
                          v17));

        uint64_t v19 = *(void *)(a1 + 8);
        v22[0] = _NSConcreteStackBlock;
        v22[1] = 3221225472LL;
        void v22[2] = sub_100189D00;
        v22[3] = &unk_1003E99B0;
        id v23 = v8;
        id v24 = v9;
        uint64_t v20 = sub_1001D68EC(v19, v18, a4, v22);
      }

      else
      {
        uint64_t v20 = 1LL;
      }
    }

    else
    {
      uint64_t v20 = 1LL;
    }
  }

  else
  {
    uint64_t v20 = 0LL;
  }

  return v20;
}

void sub_100189D00(uint64_t a1, void *a2)
{
  id v3 = a2;
  [v3 bindNumber:*(void *)(a1 + 32) atPosition:1];
  id v4 = *(void **)(a1 + 40);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  _DWORD v6[2] = sub_100189D8C;
  v6[3] = &unk_1003E9988;
  id v7 = v3;
  id v5 = v3;
  [v4 enumerateObjectsUsingBlock:v6];
}

id sub_100189D8C(uint64_t a1, uint64_t a2, int a3)
{
  return [*(id *)(a1 + 32) bindNumber:a2 atPosition:(a3 + 2)];
}

uint64_t sub_100189D9C(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  uint64_t v36 = a1;
  id v37 = a3;
  if (a1)
  {
    if ([v5 count])
    {
      __int128 v40 = 0u;
      __int128 v41 = 0u;
      __int128 v38 = 0u;
      __int128 v39 = 0u;
      id obj = v5;
      id v6 = [obj countByEnumeratingWithState:&v38 objects:v48 count:16];
      if (v6)
      {
        id v7 = v6;
        uint64_t v8 = *(void *)v39;
        do
        {
          for (uint64_t i = 0LL; i != v7; uint64_t i = (char *)i + 1)
          {
            if (*(void *)v39 != v8) {
              objc_enumerationMutation(obj);
            }
            id v10 = *(void **)(*((void *)&v38 + 1) + 8LL * (void)i);
            id v11 = (void *)objc_claimAutoreleasedReturnValue([v10 adamId]);

            if (v11)
            {
              id v12 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
              -[NSMutableDictionary setObject:forKeyedSubscript:]( v12,  "setObject:forKeyedSubscript:",  v37,  @"dsid");
              uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v10 adamId]);
              -[NSMutableDictionary setObject:forKeyedSubscript:]( v12,  "setObject:forKeyedSubscript:",  v13,  @"adam_id");

              __int128 v14 = (void *)objc_claimAutoreleasedReturnValue([v10 appAdamId]);
              -[NSMutableDictionary setObject:forKeyedSubscript:]( v12,  "setObject:forKeyedSubscript:",  v14,  @"app_adam_id");

              __int128 v15 = (void *)objc_claimAutoreleasedReturnValue([v10 purchaseDate]);
              -[NSMutableDictionary setObject:forKeyedSubscript:]( v12,  "setObject:forKeyedSubscript:",  v15,  @"purchase_date");

              __int128 v16 = (void *)objc_claimAutoreleasedReturnValue([v10 lastModifiedDate]);
              -[NSMutableDictionary setObject:forKeyedSubscript:]( v12,  "setObject:forKeyedSubscript:",  v16,  @"last_modified_date");

              __int128 v17 = (void *)objc_claimAutoreleasedReturnValue([v10 expirationDate]);
              -[NSMutableDictionary setObject:forKeyedSubscript:]( v12,  "setObject:forKeyedSubscript:",  v17,  @"expiration_date");

              uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedChar:]( NSNumber,  "numberWithUnsignedChar:",  [v10 type]));
              -[NSMutableDictionary setObject:forKeyedSubscript:]( v12,  "setObject:forKeyedSubscript:",  v18,  @"type");

              uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([v10 subscriptionFamilyId]);
              -[NSMutableDictionary setObject:forKeyedSubscript:]( v12,  "setObject:forKeyedSubscript:",  v19,  @"sub_family_id");

              uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( NSNumber,  "numberWithBool:",  [v10 autoRenewStatus]));
              -[NSMutableDictionary setObject:forKeyedSubscript:]( v12,  "setObject:forKeyedSubscript:",  v20,  @"auto_renew_status");

              unsigned int v21 = [v10 hasUsedFreeOffer];
              else {
                uint64_t v22 = v21;
              }
              id v23 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", v22));
              -[NSMutableDictionary setObject:forKeyedSubscript:]( v12,  "setObject:forKeyedSubscript:",  v23,  @"intro_offer_status");

              id v24 = objc_alloc(&OBJC_CLASS___IAPInfoIAPEntity);
              __int128 v25 = (void *)objc_claimAutoreleasedReturnValue([v36 connection]);
              __int128 v26 = -[SQLiteEntity initWithPropertyValues:onConnection:]( v24,  "initWithPropertyValues:onConnection:",  v12,  v25);

              LODWORD(v25) = -[SQLiteEntity existsInDatabase](v26, "existsInDatabase");
              if (!(_DWORD)v25)
              {
                uint64_t v32 = 0LL;
                goto LABEL_22;
              }
            }

            else
            {
              uint64_t v27 = ASDLogHandleForCategory(14LL);
              __int128 v28 = (os_log_s *)objc_claimAutoreleasedReturnValue(v27);
              if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
              {
                uint64_t v30 = (void *)objc_opt_class(v36, v29);
                id v34 = v30;
                uint64_t v31 = (void *)objc_claimAutoreleasedReturnValue([v10 appAdamId]);
                *(_DWORD *)buf = 138412802;
                unint64_t v43 = v30;
                __int16 v44 = 2114;
                uint64_t v45 = v31;
                __int16 v46 = 2112;
                id v47 = v37;
                _os_log_error_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_ERROR,  "[%@]: Trying to insert IAP with nil adamId. App adamId: %{public}@, accountID: %@",  buf,  0x20u);
              }
            }
          }

          id v7 = [obj countByEnumeratingWithState:&v38 objects:v48 count:16];
        }

        while (v7);
        uint64_t v32 = 1LL;
      }

      else
      {
        uint64_t v32 = 1LL;
      }

uint64_t sub_10018A214(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  if (a1)
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue([a1 connection]);
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472LL;
    v9[2] = sub_10018A2CC;
    v9[3] = &unk_1003E99D8;
    id v10 = v5;
    uint64_t v7 = sub_1001D68EC((uint64_t)v6, @"DELETE FROM iap_info_iaps WHERE dsid = ?;", a3, v9);
  }

  else
  {
    uint64_t v7 = 0LL;
  }

  return v7;
}

id sub_10018A2CC(uint64_t a1, void *a2)
{
  return [a2 bindNumber:*(void *)(a1 + 32) atPosition:1];
}

void *sub_10018A2DC(void *result, void *a2, void *a3, void *a4)
{
  if (result)
  {
    id v6 = result;
    id v7 = a3;
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( NSString,  "stringWithFormat:",  @"%i",  [a2 intValue]));
    id v9 = sub_10026E8B0((uint64_t)&OBJC_CLASS___IAPInfoDatabaseSession, v7);
    id v10 = (void *)objc_claimAutoreleasedReturnValue(v9);

    uint64_t v11 = sub_10018A390(v6, v8, v10, a4);
    return (void *)v11;
  }

  return result;
}

uint64_t sub_10018A390(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = (void *)objc_claimAutoreleasedReturnValue([a1 connection]);
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472LL;
  void v14[2] = sub_10018A504;
  v14[3] = &unk_1003E99B0;
  id v10 = v7;
  id v15 = v10;
  id v11 = v8;
  id v16 = v11;
  uint64_t v12 = sub_1001D68EC( (uint64_t)v9,  @"INSERT OR REPLACE INTO iap_info_db_properties (value, key) VALUES (?, ?);",
          a4,
          v14);

  return v12;
}

void *sub_10018A464(void *result, void *a2, void *a3, void *a4)
{
  if (result)
  {
    id v6 = result;
    id v7 = a3;
    [a2 timeIntervalSince1970];
    id v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:"));
    id v9 = sub_10026E6C8((uint64_t)&OBJC_CLASS___IAPInfoDatabaseSession, v7);
    id v10 = (void *)objc_claimAutoreleasedReturnValue(v9);

    uint64_t v11 = sub_10018A390(v6, v8, v10, a4);
    return (void *)v11;
  }

  return result;
}

void sub_10018A504(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  sub_10031DF0C(v4, 1LL, v3);
  [v4 bindString:*(void *)(a1 + 40) atPosition:2];
}

LABEL_51:
  if (v77)
  {
    unint64_t v56 = ASDErrorWithSafeUserInfo(v77);
    unint64_t v57 = (id)objc_claimAutoreleasedReturnValue(v56);
  }

  else
  {
    unint64_t v57 = 0LL;
  }

  uint64_t v58 = v57;
  *(void *)&unint64_t v82 = 0LL;
  *((void *)&v82 + 1) = &v82;
  *(void *)&unint64_t v83 = 0x3032000000LL;
  *((void *)&v83 + 1) = sub_10018AF8C;
  *(void *)&unint64_t v84 = sub_10018AF9C;
  *((void *)&v84 + 1) = 0LL;
  objc_initWeak(&location, self);
  uint64_t v59 = dispatch_semaphore_create(0LL);
  unint64_t v60 = (void *)objc_claimAutoreleasedReturnValue( +[VSIdentityProviderInfoCenter sharedCenter]( &OBJC_CLASS___VSIdentityProviderInfoCenter,  "sharedCenter"));
  v90[0] = _NSConcreteStackBlock;
  v90[1] = 3221225472LL;
  v90[2] = sub_10018AFA4;
  v90[3] = &unk_1003E9A00;
  objc_copyWeak(v93, &location);
  v90[4] = self;
  uint64_t v92 = &v82;
  uint64_t v61 = v59;
  unint64_t v91 = v61;
  [v60 enqueueIdentityProviderAppsQueryWithCompletion:v90];

  unint64_t v62 = dispatch_time(0LL, 5000000000LL);
  if (dispatch_semaphore_wait(v61, v62))
  {
    uint64_t v63 = ASDLogHandleForCategory(40LL);
    uint64_t v64 = (os_log_s *)objc_claimAutoreleasedReturnValue(v63);
    if (os_log_type_enabled(v64, OS_LOG_TYPE_ERROR))
    {
      uint64_t v68 = self->_headboardApps;
      *(_DWORD *)buf = 138412290;
      unint64_t v95 = v68;
      _os_log_error_impl( (void *)&_mh_execute_header,  v64,  OS_LOG_TYPE_ERROR,  "[%@] Timed out waiting for identity provider apps",  buf,  0xCu);
    }
  }

  uint64_t v65 = *(void **)(*((void *)&v82 + 1) + 40LL);
  if (v65) {
    unint64_t v66 = v65;
  }

  objc_destroyWeak(v93);
  objc_destroyWeak(&location);
  _Block_object_dispose(&v82, 8);

  uint64_t v67 = v65;
  if (!v58) {
    goto LABEL_63;
  }
  -[Task completeWithError:](self, "completeWithError:", v58);
LABEL_64:
}

  return v16;
}

    -[NSMutableArray addObject:](v2, "addObject:", v5);
  }

  while (!__CFADD__(v3++, 1LL));
  id v7 = (__CFString *)objc_claimAutoreleasedReturnValue(-[NSMutableArray componentsJoinedByString:](v2, "componentsJoinedByString:", @","));

  return v7;
}
}

void sub_10018AF44( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, char a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, id location)
{
}

uint64_t sub_10018AF8C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_10018AF9C(uint64_t a1)
{
}

void sub_10018AFA4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (v6)
  {
    uint64_t v8 = ASDLogHandleForCategory(40LL);
    id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      uint64_t v12 = *(void *)(*(void *)(a1 + 32) + 56LL);
      int v13 = 138412546;
      uint64_t v14 = v12;
      __int16 v15 = 2114;
      id v16 = v6;
      _os_log_error_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_ERROR,  "[%@] Error fetching identity provider apps: %{public}@",  (uint8_t *)&v13,  0x16u);
    }

    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 40LL), a3);
  }

  if ([v5 count]) {
    id v10 = (NSSet *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](&OBJC_CLASS___NSSet, "setWithArray:", v5));
  }
  else {
    id v10 = objc_opt_new(&OBJC_CLASS___NSSet);
  }
  uint64_t v11 = (void *)WeakRetained[6];
  WeakRetained[6] = v10;

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
}

id *sub_10018B158(id *a1, void *a2)
{
  id v4 = a2;
  if (a1)
  {
    v7.receiver = a1;
    v7.super_class = (Class)&OBJC_CLASS___UPPManifestAsset;
    id v5 = (id *)objc_msgSendSuper2(&v7, "init");
    a1 = v5;
    if (v5) {
      objc_storeStrong(v5 + 1, a2);
    }
  }

  return a1;
}

id *sub_10018B1CC(id *a1)
{
  if (a1)
  {
    id v1 = a1;
    id v2 = sub_10018B234(a1);
    id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
    unsigned int v4 = [v3 isEqualToString:@"software-receipt"];

    if (v4)
    {
      id v5 = sub_1001DEFF8(v1[1], @"data");
      a1 = (id *)objc_claimAutoreleasedReturnValue(v5);
    }

    else
    {
      a1 = 0LL;
    }
  }

  return a1;
}

id *sub_10018B234(id *a1)
{
  if (a1)
  {
    id v1 = sub_1001DF594(a1[1], @"kind");
    a1 = (id *)objc_claimAutoreleasedReturnValue(v1);
  }

  return a1;
}

id *sub_10018B25C(id *a1)
{
  if (a1)
  {
    id v1 = a1;
    id v2 = sub_10018B234(a1);
    id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
    unsigned int v4 = [v3 isEqualToString:@"software-SINF"];

    if (v4)
    {
      id v5 = sub_1001DEFF8(v1[1], @"data");
      a1 = (id *)objc_claimAutoreleasedReturnValue(v5);
    }

    else
    {
      a1 = 0LL;
    }
  }

  return a1;
}

id *sub_10018B2C4(id *a1)
{
  id v1 = a1;
  if (a1)
  {
    id v2 = sub_1001DEC94(a1[1], @"md5s");
    id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
    if (!v3)
    {
      id v4 = sub_1001DF594(v1[1], @"md5");
      uint64_t v5 = objc_claimAutoreleasedReturnValue(v4);
      id v6 = (void *)v5;
      if (v5)
      {
        uint64_t v10 = v5;
        id v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v10, 1LL));
      }

      else
      {
        id v3 = 0LL;
      }
    }

    id v7 = sub_1002D6554(v3);
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
    id v1 = (id *)objc_claimAutoreleasedReturnValue([v8 allObjects]);
  }

  return v1;
}

void **sub_10018B3AC(void **a1)
{
  if (a1)
  {
    id v1 = sub_1001DEDF8(a1[1], @"md5-size");
    a1 = (void **)objc_claimAutoreleasedReturnValue(v1);
  }

  return a1;
}

id *sub_10018B3D4(id *a1)
{
  id v1 = a1;
  if (a1)
  {
    id v2 = sub_1001DEC94(a1[1], @"sha256s");
    id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
    if (!v3)
    {
      id v4 = sub_1001DF594(v1[1], @"sha256");
      uint64_t v5 = objc_claimAutoreleasedReturnValue(v4);
      id v6 = (void *)v5;
      if (v5)
      {
        uint64_t v10 = v5;
        id v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v10, 1LL));
      }

      else
      {
        id v3 = 0LL;
      }
    }

    id v7 = sub_1002D6554(v3);
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
    id v1 = (id *)objc_claimAutoreleasedReturnValue([v8 allObjects]);
  }

  return v1;
}

void **sub_10018B4BC(void **a1)
{
  if (a1)
  {
    id v1 = sub_1001DEDF8(a1[1], @"sha256-size");
    a1 = (void **)objc_claimAutoreleasedReturnValue(v1);
  }

  return a1;
}

id sub_10018B4E4(uint64_t a1)
{
  if (a1)
  {
    id v1 = sub_1001DF594(*(id *)(a1 + 8), @"url");
    id v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
    if (v2) {
      id v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL URLWithString:](&OBJC_CLASS___NSURL, "URLWithString:", v2));
    }
    else {
      id v3 = 0LL;
    }
  }

  else
  {
    id v3 = 0LL;
  }

  return v3;
}

id sub_10018B54C(uint64_t a1)
{
  if (a1)
  {
    id v1 = sub_1001DEC94(*(id *)(a1 + 8), @"variantDescriptors");
    id v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
    id v3 = sub_1002D64A4(v2);
    id v4 = (void *)objc_claimAutoreleasedReturnValue(v3);

    id v5 = sub_10031D5B8(v4, &stru_1003E9A48);
    id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  }

  else
  {
    id v6 = 0LL;
  }

  return v6;
}

NSFastEnumeration *__cdecl sub_10018B5B8(id a1, NSDictionary *a2)
{
  return (NSFastEnumeration *)sub_1001D30C4((uint64_t)&OBJC_CLASS___VariantDescriptor, a2, 0LL);
}

id sub_10018B5C8(uint64_t a1)
{
  if (a1)
  {
    id v1 = sub_1001DEC94(*(id *)(a1 + 8), @"variantIds");
    id v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
    id v3 = sub_1002D6554(v2);
    id v4 = (void *)objc_claimAutoreleasedReturnValue(v3);

    id v5 = sub_10031D77C(v4, &stru_1003E9A88);
    id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  }

  else
  {
    id v6 = 0LL;
  }

  return v6;
}

id sub_10018B634(id a1, NSString *a2)
{
  id v2 = a2;
  id v3 = sub_1001D3520((id *)objc_alloc(&OBJC_CLASS___VariantDescriptor), v2);

  return v3;
}

IAPInfoItemsRequestContext *sub_10018B684(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a5;
  id v10 = a4;
  id v11 = a3;
  id v12 = a2;
  objc_opt_self(a1);
  int v13 = objc_alloc(&OBJC_CLASS___IAPInfoItemsRequestContext);
  __int16 v15 = (void *)objc_claimAutoreleasedReturnValue([v9 processInfo]);
  if (v9) {
    id Property = objc_getProperty(v9, v14, 32LL, 1);
  }
  else {
    id Property = 0LL;
  }
  id v17 = Property;

  id v18 = v12;
  id v19 = v11;
  id v20 = v10;
  id v21 = v15;
  id v22 = v17;
  if (v13)
  {
    v26.receiver = v13;
    v26.super_class = (Class)&OBJC_CLASS___IAPInfoItemsRequestContext;
    int v13 = (IAPInfoItemsRequestContext *)objc_msgSendSuper2(&v26, "init");
    if (v13)
    {
      id v23 = (NSArray *)[v18 copy];
      knownIAPs = v13->_knownIAPs;
      v13->_knownIAPs = v23;

      objc_storeStrong((id *)&v13->_revision, a3);
      objc_storeStrong((id *)&v13->_account, a4);
      objc_storeStrong((id *)&v13->_clientInfo, v15);
      objc_storeStrong((id *)&v13->_logKey, Property);
    }
  }

  return v13;
}

id sub_10018B85C(uint64_t a1)
{
  if (qword_1004620F8 != -1) {
    dispatch_once(&qword_1004620F8, &stru_1003E9AC8);
  }
  return (id)qword_1004620F0;
}

void sub_10018B8A0(id a1)
{
  id v1 = objc_alloc_init(&OBJC_CLASS___URLSessionManager);
  id v2 = (void *)qword_1004620F0;
  qword_1004620F0 = (uint64_t)v1;
}

id sub_10018B944(id a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (a1)
  {
    id v7 = objc_alloc(&OBJC_CLASS___AMSMutableLazyPromise);
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472LL;
    v9[2] = sub_10018BA04;
    v9[3] = &unk_1003E9B68;
    void v9[4] = a1;
    id v10 = v5;
    id v11 = v6;
    a1 = [v7 initWithBlock:v9];
  }

  return a1;
}

void sub_10018BA04(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 40);
  id v5 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 8LL);
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  v9[2] = sub_10018BAB4;
  v9[3] = &unk_1003E9B40;
  id v6 = v4;
  uint64_t v7 = *(void *)(a1 + 32);
  id v10 = v6;
  uint64_t v11 = v7;
  id v12 = *(id *)(a1 + 48);
  id v13 = v3;
  id v8 = v3;
  dispatch_async(v5, v9);
}

void sub_10018BAB4(uint64_t a1)
{
  id v2 = sub_100293D2C(*(void *)(a1 + 32));
  id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  if (!v3)
  {
    id v4 = sub_1001F4ADC((uint64_t)&OBJC_CLASS___AMSProcessInfo);
    id v3 = (void *)objc_claimAutoreleasedReturnValue(v4);
  }

  if (*(void *)(a1 + 40))
  {
    id v5 = sub_1001E65D4((uint64_t)&OBJC_CLASS___AMSURLSession, v3, 0LL);
    id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
    uint64_t v7 = objc_alloc_init(&OBJC_CLASS___URLResponseDecoder);
    [v6 setResponseDecoder:v7];
  }

  else
  {
    id v6 = 0LL;
  }

  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472LL;
  v17[2] = sub_10018BC40;
  v17[3] = &unk_1003E9AF0;
  uint64_t v8 = *(void *)(a1 + 48);
  id v18 = *(id *)(a1 + 56);
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v6 dataTaskWithRequest:v8 completionHandler:v17]);
  id v10 = (void *)objc_claimAutoreleasedReturnValue([v6 responseDecoder]);
  sub_1001BA4A8((uint64_t)v10, *(void **)(a1 + 32), v9);
  [v9 resume];
  uint64_t v11 = *(void **)(a1 + 56);
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472LL;
  void v14[2] = sub_10018BC54;
  v14[3] = &unk_1003E9B18;
  id v15 = v9;
  id v16 = v10;
  id v12 = v10;
  id v13 = v9;
  [v11 addErrorBlock:v14];
}

id sub_10018BC40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v3 = *(void **)(a1 + 32);
  if (a3) {
    return objc_msgSend(v3, "finishWithError:");
  }
  else {
    return [v3 finishWithResult:a2];
  }
}

void sub_10018BC54(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([v3 code] == (id)1 || objc_msgSend(v3, "code") == (id)3072) {
    [*(id *)(a1 + 32) cancel];
  }
  sub_1001BA3EC(*(void *)(a1 + 40), *(void **)(a1 + 32));
}

id sub_10018BCC8(void *a1)
{
  if (a1) {
    a1 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"bundle_id"]);
  }
  return a1;
}

id sub_10018BCEC(void *a1)
{
  if (a1) {
    a1 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"bundle_key"]);
  }
  return a1;
}

id sub_10018BD10(void *a1)
{
  if (a1) {
    a1 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"coordinator_id"]);
  }
  return a1;
}

id sub_10018BD34(id result)
{
  if (result)
  {
    id v1 = (void *)objc_claimAutoreleasedReturnValue([result valueForProperty:@"is_paused"]);
    id v2 = [v1 BOOLValue];

    return v2;
  }

  return result;
}

id sub_10018BD74(id result)
{
  if (result)
  {
    id v1 = (void *)objc_claimAutoreleasedReturnValue([result valueForProperty:@"type"]);
    id v2 = [v1 integerValue];

    return v2;
  }

  return result;
}

id sub_10018BDB4(void *a1)
{
  if (a1) {
    a1 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"unique_key"]);
  }
  return a1;
}

void sub_10018BE7C(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_self(a1);
  uint64_t v15 = 0LL;
  id v16 = &v15;
  uint64_t v17 = 0x2020000000LL;
  char v18 = 0;
  id v4 = sub_1001B53D0((uint64_t)&OBJC_CLASS___ODRDatabaseStore);
  id v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472LL;
  void v12[2] = sub_10018C028;
  void v12[3] = &unk_1003E9B90;
  uint64_t v14 = &v15;
  id v6 = v3;
  id v13 = v6;
  [v5 modifyUsingTransaction:v12];

  if (!*((_BYTE *)v16 + 24))
  {
    uint64_t v7 = ASDLogHandleForCategory(19LL);
    uint64_t v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      if (v6) {
        id Property = objc_getProperty(v6, v9, 184LL, 1);
      }
      else {
        id Property = 0LL;
      }
      id v11 = Property;
      *(_DWORD *)buf = 138412290;
      id v20 = v11;
      _os_log_error_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_ERROR,  "[%@] Error saving download to database",  buf,  0xCu);
    }
  }

  _Block_object_dispose(&v15, 8);
}

void sub_10018C000( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_10018C028(uint64_t a1, BOOL a2)
{
  *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = sub_1001C4E64(a2, *(void **)(a1 + 32));
  return *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL);
}

id sub_10018C06C(uint64_t a1)
{
  uint64_t v6 = 0LL;
  uint64_t v7 = &v6;
  uint64_t v8 = 0x3032000000LL;
  id v9 = sub_10018C14C;
  id v10 = sub_10018C15C;
  id v11 = 0LL;
  id v1 = sub_1001B53D0((uint64_t)&OBJC_CLASS___ODRDatabaseStore);
  id v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  void v5[2] = sub_10018C164;
  _DWORD v5[3] = &unk_1003E9BB8;
  v5[4] = &v6;
  [v2 readUsingSession:v5];

  id v3 = (id)v7[5];
  _Block_object_dispose(&v6, 8);

  return v3;
}

void sub_10018C134( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_10018C14C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_10018C15C(uint64_t a1)
{
}

void sub_10018C164(uint64_t a1, void *a2)
{
  id v3 = sub_1001873E8(a2);
  uint64_t v4 = objc_claimAutoreleasedReturnValue(v3);
  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8LL);
  uint64_t v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v4;
}

void sub_10018C19C(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_self(a1);
  id v4 = sub_1001B53D0((uint64_t)&OBJC_CLASS___ODRDatabaseStore);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  void v7[2] = sub_10018C238;
  v7[3] = &unk_1003E9858;
  id v8 = v3;
  id v6 = v3;
  [v5 modifyUsingTransaction:v7];
}

BOOL sub_10018C238(uint64_t a1, BOOL a2)
{
  return sub_1001C3F28(a2, *(void **)(a1 + 32));
}

void sub_10018C248(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_self(a1);
  id v4 = sub_1001B53D0((uint64_t)&OBJC_CLASS___ODRDatabaseStore);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  void v7[2] = sub_10018C2E4;
  v7[3] = &unk_1003E9858;
  id v8 = v3;
  id v6 = v3;
  [v5 modifyUsingTransaction:v7];
}

BOOL sub_10018C2E4(uint64_t a1, void *a2)
{
  id v4 = a2;
  id Property = *(id *)(a1 + 32);
  if (Property) {
    id Property = objc_getProperty(Property, v3, 104LL, 1);
  }
  id v7 = Property;
  id v8 = *(id *)(a1 + 32);
  if (v8) {
    id v8 = objc_getProperty(v8, v6, 112LL, 1);
  }
  id v9 = v8;
  id v10 = sub_10018793C(v4, (uint64_t)v7, v9);
  id v11 = (void *)objc_claimAutoreleasedReturnValue(v10);

  if (v11) {
    BOOL v12 = sub_1001C3F28((BOOL)v4, v11);
  }
  else {
    BOOL v12 = 0LL;
  }

  return v12;
}

void sub_10018C390(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_self(a1);
  id v4 = sub_1001B53D0((uint64_t)&OBJC_CLASS___ODRDatabaseStore);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  void v7[2] = sub_10018C42C;
  v7[3] = &unk_1003E9858;
  id v8 = v3;
  id v6 = v3;
  [v5 modifyUsingTransaction:v7];
}

uint64_t sub_10018C42C(uint64_t a1, void *a2)
{
  id v4 = a2;
  id Property = *(id *)(a1 + 32);
  if (Property) {
    id Property = objc_getProperty(Property, v3, 104LL, 1);
  }
  id v7 = Property;
  id v8 = *(id *)(a1 + 32);
  if (v8) {
    id v8 = objc_getProperty(v8, v6, 112LL, 1);
  }
  id v9 = v8;
  id v10 = sub_10018793C(v4, (uint64_t)v7, v9);
  id v11 = (void *)objc_claimAutoreleasedReturnValue(v10);

  if (v11)
  {
    id v13 = *(id *)(a1 + 32);
    if (v13) {
      id v13 = objc_getProperty(v13, v12, 216LL, 1);
    }
    id v14 = v13;
    uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v14 absoluteString]);
    [v11 setValue:v15 forProperty:@"source_url"];

    uint64_t v16 = sub_1001C517C((uint64_t)v4, v11);
  }

  else
  {
    uint64_t v16 = 0LL;
  }

  return v16;
}

id sub_10018C524(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  id v7 = [objc_alloc((Class)objc_opt_self(a1)) initOnScheduler:v6 withExecutor:v5];

  return v7;
}

id *sub_10018C584(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (id *)objc_alloc((Class)objc_opt_self(a1));
  id v5 = sub_10018C5C8(v4, v3);

  return v5;
}

id *sub_10018C5C8(id *a1, void *a2)
{
  id v2 = a1;
  if (a1)
  {
    id v3 = sub_1001922D8((uint64_t)&OBJC_CLASS___PromiseResult, a2);
    id v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
    id v2 = sub_10018C6C8(v2, (void *)1, v4);
  }

  return v2;
}

id *sub_10018C620(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (id *)objc_alloc((Class)objc_opt_self(a1));
  id v5 = sub_10018C664(v4, v3);

  return v5;
}

id *sub_10018C664(id *a1, void *a2)
{
  id v2 = a1;
  if (a1)
  {
    id v3 = sub_1001921C4((uint64_t)&OBJC_CLASS___PromiseResult, a2);
    id v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
    id v2 = sub_10018C6C8(v2, (void *)2, v4);
  }

  return v2;
}

id *sub_10018C6C8(id *a1, void *a2, void *a3)
{
  id v6 = a3;
  if (a1)
  {
    v12.receiver = a1;
    v12.super_class = (Class)&OBJC_CLASS___Promise;
    a1 = (id *)objc_msgSendSuper2(&v12, "init");
    if (a1)
    {
      id v7 = objc_alloc_init(&OBJC_CLASS___NSRecursiveLock);
      id v8 = a1[3];
      a1[3] = v7;

      a1[2] = a2;
      objc_storeStrong(a1 + 4, a3);
      id v9 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
      id v10 = a1[1];
      a1[1] = v9;
    }
  }

  return a1;
}

void sub_10018C7D8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = v5;
  if (a1)
  {
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472LL;
    void v7[2] = sub_10018D36C;
    v7[3] = &unk_1003E9D48;
    void v7[4] = a1;
    id v8 = v5;
    [a3 scheduleBlock:v7];
  }
}

void sub_10018C860(void *a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id v6 = v5;
  if (a1)
  {
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472LL;
    v9[2] = sub_10018C924;
    v9[3] = &unk_1003E9C08;
    id v10 = v5;
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472LL;
    void v7[2] = sub_10018C934;
    v7[3] = &unk_1003E9C30;
    id v8 = v10;
    [a1 thenPerform:v9 orCatchError:v7 onScheduler:a3];
  }
}

uint64_t sub_10018C924(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_10018C934(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_10018CA10(uint64_t a1)
{
  id v2 = sub_10028D580( (id *)objc_alloc(&OBJC_CLASS___PromiseObserver),  *(void **)(a1 + 48),  *(void **)(a1 + 56),  *(void **)(a1 + 32));
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(v3 + 16);
  switch(v4)
  {
    case 2LL:
      id v10 = v2;
      id Property = objc_getProperty((id)v3, (SEL)v2, 32LL, 1);
      if (Property) {
        id Property = objc_getProperty(Property, v6, 8LL, 1);
      }
      id v7 = Property;
      sub_10028D714(v10, (uint64_t)v7);
      goto LABEL_11;
    case 1LL:
      id v10 = v2;
      id v8 = objc_getProperty((id)v3, (SEL)v2, 32LL, 1);
      if (v8) {
        id v8 = objc_getProperty(v8, v9, 16LL, 1);
      }
      id v7 = v8;
      sub_10028D640(v10, v7);
LABEL_11:

      goto LABEL_12;
    case 0LL:
      id v10 = v2;
      [*(id *)(v3 + 8) addObject:v2];
LABEL_12:
      id v2 = v10;
      break;
  }
}

void sub_10018CAF4(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    uint64_t v4 = *(void **)(a1 + 24);
    v6[1] = 3221225472LL;
    _DWORD v6[2] = sub_10018D0B4;
    v6[3] = &unk_1003E9DC0;
    void v6[4] = a1;
    id v5 = v3;
    v6[0] = _NSConcreteStackBlock;
    id v7 = v3;
    sub_1002C11C4(v4, v6);

    id v3 = v5;
  }
}

void sub_10018CB74(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    uint64_t v4 = *(void **)(a1 + 24);
    v6[1] = 3221225472LL;
    _DWORD v6[2] = sub_10018D210;
    v6[3] = &unk_1003E9DC0;
    void v6[4] = a1;
    id v5 = v3;
    v6[0] = _NSConcreteStackBlock;
    id v7 = v3;
    sub_1002C11C4(v4, v6);

    id v3 = v5;
  }
}

Promise *sub_10018CBF4(Promise *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (a1)
  {
    id v7 = objc_alloc_init(&OBJC_CLASS___Promise);
    if (!v6) {
      id v6 = objc_alloc_init(&OBJC_CLASS___SyncTaskScheduler);
    }
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472LL;
    void v13[2] = sub_10018CD2C;
    v13[3] = &unk_1003E9CF8;
    id v16 = v5;
    id v14 = v7;
    id v6 = v6;
    uint64_t v15 = v6;
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472LL;
    void v11[2] = sub_10018CE0C;
    v11[3] = &unk_1003E9CA8;
    id v8 = v14;
    objc_super v12 = v8;
    -[Promise thenPerform:orCatchError:onScheduler:](a1, "thenPerform:orCatchError:onScheduler:", v13, v11, v6);
    id v9 = v12;
    a1 = v8;
  }

  return a1;
}

void sub_10018CD2C(uint64_t a1)
{
  uint64_t v2 = (*(uint64_t (**)(void))(*(void *)(a1 + 48) + 16LL))();
  id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  _DWORD v6[2] = sub_10018CDFC;
  v6[3] = &unk_1003E9CD0;
  id v7 = *(id *)(a1 + 32);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  void v4[2] = sub_10018CE04;
  v4[3] = &unk_1003E9CA8;
  id v5 = *(id *)(a1 + 32);
  [v3 thenPerform:v6 orCatchError:v4 onScheduler:*(void *)(a1 + 40)];
}

void sub_10018CDFC(uint64_t a1, void *a2)
{
}

void sub_10018CE04(uint64_t a1, void *a2)
{
}

void sub_10018CE0C(uint64_t a1, void *a2)
{
}

void sub_10018CF20(uint64_t a1, void *a2)
{
  id v3 = a2;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  v9[2] = sub_10018D00C;
  v9[3] = &unk_1003E9D20;
  uint64_t v4 = *(void **)(a1 + 32);
  id v10 = *(id *)(a1 + 40);
  id v11 = v3;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  void v7[2] = sub_10018D0A4;
  v7[3] = &unk_1003E9CA8;
  id v8 = *(id *)(a1 + 40);
  id v5 = v3;
  id v6 = objc_opt_new(&OBJC_CLASS___SyncTaskScheduler);
  [v4 thenPerform:v9 orCatchError:v7 onScheduler:v6];
}

void sub_10018D00C(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  v5[0] = *(void *)(a1 + 40);
  v5[1] = a2;
  id v3 = a2;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v5, 2LL));
  sub_10018CAF4(v2, v4);
}

void sub_10018D0A4(uint64_t a1, void *a2)
{
}

void sub_10018D0AC(uint64_t a1, void *a2)
{
}

id sub_10018D0B4(uint64_t a1)
{
  if (*(void *)(*(void *)(a1 + 32) + 16LL)) {
    +[NSException raise:format:]( &OBJC_CLASS___NSException,  "raise:format:",  NSInternalInconsistencyException,  @"Promises may only be resolved once!");
  }
  uint64_t v2 = sub_1001922D8((uint64_t)&OBJC_CLASS___PromiseResult, *(void **)(a1 + 40));
  uint64_t v3 = objc_claimAutoreleasedReturnValue(v2);
  uint64_t v4 = *(void *)(a1 + 32);
  id v5 = *(void **)(v4 + 32);
  *(void *)(v4 + 32) = v3;

  *(void *)(*(void *)(a1 + 32) + 16LL) = 1LL;
  __int128 v14 = 0u;
  __int128 v15 = 0u;
  __int128 v12 = 0u;
  __int128 v13 = 0u;
  id v6 = *(id *)(*(void *)(a1 + 32) + 8LL);
  id v7 = [v6 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v13;
    do
    {
      id v10 = 0LL;
      do
      {
        if (*(void *)v13 != v9) {
          objc_enumerationMutation(v6);
        }
        sub_10028D640(*(void **)(*((void *)&v12 + 1) + 8LL * (void)v10), *(void **)(a1 + 40));
        id v10 = (char *)v10 + 1;
      }

      while (v8 != v10);
      id v8 = [v6 countByEnumeratingWithState:&v12 objects:v16 count:16];
    }

    while (v8);
  }

  return objc_msgSend(*(id *)(*(void *)(a1 + 32) + 8), "removeAllObjects", (void)v12);
}

id sub_10018D210(uint64_t a1)
{
  if (*(void *)(*(void *)(a1 + 32) + 16LL)) {
    +[NSException raise:format:]( &OBJC_CLASS___NSException,  "raise:format:",  NSInternalInconsistencyException,  @"Promises may only be resolved once!");
  }
  uint64_t v2 = sub_1001921C4((uint64_t)&OBJC_CLASS___PromiseResult, *(void **)(a1 + 40));
  uint64_t v3 = objc_claimAutoreleasedReturnValue(v2);
  uint64_t v4 = *(void *)(a1 + 32);
  id v5 = *(void **)(v4 + 32);
  *(void *)(v4 + 32) = v3;

  *(void *)(*(void *)(a1 + 32) + 16LL) = 2LL;
  __int128 v14 = 0u;
  __int128 v15 = 0u;
  __int128 v12 = 0u;
  __int128 v13 = 0u;
  id v6 = *(id *)(*(void *)(a1 + 32) + 8LL);
  id v7 = [v6 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v13;
    do
    {
      id v10 = 0LL;
      do
      {
        if (*(void *)v13 != v9) {
          objc_enumerationMutation(v6);
        }
        sub_10028D714(*(void **)(*((void *)&v12 + 1) + 8LL * (void)v10), *(void *)(a1 + 40));
        id v10 = (char *)v10 + 1;
      }

      while (v8 != v10);
      id v8 = [v6 countByEnumeratingWithState:&v12 objects:v16 count:16];
    }

    while (v8);
  }

  return objc_msgSend(*(id *)(*(void *)(a1 + 32) + 8), "removeAllObjects", (void)v12);
}

uint64_t sub_10018D36C(uint64_t a1)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  void v4[2] = sub_10018D3EC;
  v4[3] = &unk_1003E9CD0;
  uint64_t v1 = *(void *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 32);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472LL;
  v3[2] = sub_10018D3F4;
  v3[3] = &unk_1003E9CA8;
  v3[4] = v5;
  return (*(uint64_t (**)(uint64_t, void *, void *))(v1 + 16))(v1, v4, v3);
}

void sub_10018D3EC(uint64_t a1, void *a2)
{
}

void sub_10018D3F4(uint64_t a1, void *a2)
{
}

void sub_10018D5AC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void **)(v2 + 40);
  if (v3)
  {
    sub_10018C7D8(v2, v3, *(void **)(v2 + 48));
    uint64_t v4 = *(void *)(a1 + 32);
    uint64_t v5 = *(void **)(v4 + 40);
    *(void *)(v4 + 40) = 0LL;
  }

void sub_10018D6C4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472LL;
  void v13[2] = sub_10018D7D8;
  v13[3] = &unk_1003E9D70;
  id v7 = *(void **)(a1 + 32);
  id v14 = *(id *)(a1 + 40);
  id v15 = v5;
  id v16 = v6;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472LL;
  void v11[2] = sub_10018D96C;
  v11[3] = &unk_1003E9C30;
  id v12 = v16;
  id v8 = v16;
  id v9 = v5;
  id v10 = objc_opt_new(&OBJC_CLASS___SyncTaskScheduler);
  [v7 thenPerform:v13 orCatchError:v11 onScheduler:v10];
}

void sub_10018D7D8(uint64_t a1, void *a2)
{
  id v3 = a2;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  void v10[2] = sub_10018D8C4;
  v10[3] = &unk_1003E9C80;
  uint64_t v4 = *(void **)(a1 + 32);
  id v5 = *(id *)(a1 + 40);
  id v11 = v3;
  id v12 = v5;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  v8[2] = sub_10018D960;
  v8[3] = &unk_1003E9C30;
  id v9 = *(id *)(a1 + 48);
  id v6 = v3;
  id v7 = objc_opt_new(&OBJC_CLASS___SyncTaskScheduler);
  [v4 thenPerform:v10 orCatchError:v8 onScheduler:v7];
}

void sub_10018D8C4(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 40);
  v5[0] = *(void *)(a1 + 32);
  v5[1] = a2;
  id v3 = a2;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v5, 2LL));
  (*(void (**)(uint64_t, void *))(v2 + 16))(v2, v4);
}

uint64_t sub_10018D960(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_10018D96C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_10018DB68(uint64_t result)
{
  *(_BYTE *)(*(void *)(*(void *)(result + 40) + 8LL) + 24LL) = *(void *)(*(void *)(result + 32) + 48LL) < *(void *)(*(void *)(result + 32) + 56LL);
  return result;
}

uint64_t sub_10018DB84(uint64_t result)
{
  *(_BYTE *)(*(void *)(*(void *)(result + 40) + 8LL) + 24LL) = *(void *)(*(void *)(result + 32) + 56LL) < *(void *)(*(void *)(result + 32) + 24LL);
  return result;
}

void sub_10018DBA4(uint64_t a1)
{
  unint64_t v2 = *(void *)(*(void *)(a1 + 32) + 56LL) - *(void *)(*(void *)(a1 + 32) + 48LL);
  if (v2 >= *(void *)(a1 + 48)) {
    unint64_t v2 = *(void *)(a1 + 48);
  }
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = v2;
  size_t v3 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL);
  if (v3)
  {
    memcpy( *(void **)(a1 + 56),  (const void *)(*(void *)(*(void *)(a1 + 32) + 16LL) + *(void *)(*(void *)(a1 + 32) + 48LL)),  v3);
    *(void *)(*(void *)(a1 + 32) + 48LL) += *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL);
  }

  uint64_t v4 = *(void *)(a1 + 32);
  if (*(void *)(v4 + 48) == *(void *)(v4 + 56))
  {
    *(void *)(v4 + 56) = 0LL;
    *(void *)(*(void *)(a1 + 32) + 48LL) = 0LL;
    uint64_t v5 = ASDLogHandleForCategory(7LL);
    id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG))
    {
      LOWORD(v1_Block_object_dispose(va, 8) = 0;
      _os_log_debug_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "(BufferedStream) Buffer is empty",  (uint8_t *)&v18,  2u);
    }

    id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 72LL));
    id v8 = [WeakRetained streamStatus];

    id v9 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 64LL));
    id v10 = [v9 streamStatus];

    if (v8 != (id)5)
    {
      id v11 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 64LL));

      if (!v11 || (unint64_t)v10 >= 6)
      {
        uint64_t v12 = ASDLogHandleForCategory(7LL);
        __int128 v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
        if (os_log_type_enabled(v13, OS_LOG_TYPE_DEBUG))
        {
          id v17 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 64LL));
          int v18 = 138412546;
          id v19 = v17;
          __int16 v20 = 2048;
          id v21 = v10;
          _os_log_debug_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEBUG,  "(BufferedStream) Signalling end: writer = %@; status = %lu",
            (uint8_t *)&v18,
            0x16u);
        }

        id v14 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 72LL));
        sub_100237C1C((uint64_t)v14, 5LL);

        id v15 = (dispatch_source_t *)objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 72LL));
        id v16 = v15;
        if (v15) {
          dispatch_source_merge_data(v15[2], 0x10uLL);
        }
      }
    }
  }

void sub_10018DDDC(uint64_t a1)
{
  if (*(void *)(a1 + 40) > *(void *)(*(void *)(a1 + 32) + 24LL))
  {
    unint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSUUID UUID](&OBJC_CLASS___NSUUID, "UUID"));
    size_t v3 = (void *)objc_claimAutoreleasedReturnValue([v2 UUIDString]);
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", @"Clip-%@", v3));

    id v5 = sub_100220C68((uint64_t)&OBJC_CLASS___Storage);
    id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
    uint64_t v7 = objc_claimAutoreleasedReturnValue([v6 stringByAppendingPathComponent:v4]);
    uint64_t v8 = *(void *)(a1 + 32);
    id v9 = *(void **)(v8 + 40);
    *(void *)(v8 + 40) = v7;

    uint64_t v10 = ASDLogHandleForCategory(7LL);
    id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v12 = *(char **)(a1 + 40);
      uint64_t v13 = *(void *)(*(void *)(a1 + 32) + 40LL);
      *(_DWORD *)buf = 134218242;
      int v35 = v12;
      __int16 v36 = 2112;
      uint64_t v37 = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "(BufferedStream) Size %zu is over the memory limit, switching to disk: %@",  buf,  0x16u);
    }

    *(_DWORD *)(*(void *)(a1 + 32) + 32) = open( (const char *)[*(id *)(*(void *)(a1 + 32) + 40) fileSystemRepresentation],  514,  384);
    int v14 = *(_DWORD *)(*(void *)(a1 + 32) + 32LL);
    if (v14 < 0)
    {
      uint64_t v23 = ASDLogHandleForCategory(7LL);
      id v24 = (os_log_s *)objc_claimAutoreleasedReturnValue(v23);
      if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
      {
        int v29 = *__error();
        *(_DWORD *)buf = 67109120;
        LODWORD(v35) = v29;
        _os_log_error_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_ERROR,  "(BufferedStream) Cannot create buffer file: %{darwin.errno}d",  buf,  8u);
      }
    }

    else
    {
      lseek(v14, *(void *)(a1 + 40) - 1LL, 0);
      write(*(_DWORD *)(*(void *)(a1 + 32) + 32LL), "", 1uLL);
      *(void *)(*(void *)(a1 + 32) + 24LL) = lseek(*(_DWORD *)(*(void *)(a1 + 32) + 32LL), 0LL, 1);
      uint64_t v15 = *(void *)(a1 + 32);
      size_t v16 = *(void *)(v15 + 24);
      if (v16 < *(void *)(a1 + 40))
      {
        uint64_t v17 = ASDLogHandleForCategory(7LL);
        int v18 = (os_log_s *)objc_claimAutoreleasedReturnValue(v17);
        if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
        {
          uint64_t v30 = *(char **)(*(void *)(a1 + 32) + 24LL);
          *(_DWORD *)buf = 134217984;
          int v35 = v30;
          _os_log_error_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_ERROR,  "(BufferedStream) Buffer length is shorter than requested, download will likely fail: %zu",  buf,  0xCu);
        }

        uint64_t v15 = *(void *)(a1 + 32);
        size_t v16 = *(void *)(v15 + 24);
      }

      id v19 = mmap(0LL, v16, 3, 1, *(_DWORD *)(v15 + 32), 0LL);
      if (v19 == (void *)-1LL)
      {
        uint64_t v25 = ASDLogHandleForCategory(7LL);
        objc_super v26 = (os_log_s *)objc_claimAutoreleasedReturnValue(v25);
        if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
        {
          uint64_t v31 = __error();
          uint64_t v32 = strerror(*v31);
          *(_DWORD *)buf = 136446210;
          int v35 = v32;
          _os_log_error_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_ERROR,  "(BufferedStream) Cannot map buffer file: %{public}s",  buf,  0xCu);
        }

        ftruncate(*(_DWORD *)(*(void *)(a1 + 32) + 32LL), 0LL);
        close(*(_DWORD *)(*(void *)(a1 + 32) + 32LL));
        if (unlink((const char *)[*(id *)(*(void *)(a1 + 32) + 40) fileSystemRepresentation]))
        {
          uint64_t v27 = ASDLogHandleForCategory(7LL);
          __int128 v28 = (os_log_s *)objc_claimAutoreleasedReturnValue(v27);
          if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
          {
            int v33 = *__error();
            *(_DWORD *)buf = 67109120;
            LODWORD(v35) = v33;
            _os_log_error_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_ERROR,  "(BufferedStream) Unable to unlink buffer file: %{darwin.errno}d",  buf,  8u);
          }
        }

        *(_DWORD *)(*(void *)(a1 + 32) + 32LL) = 0;
      }

      else
      {
        __int16 v20 = v19;
        uint64_t v21 = *(void *)(a1 + 32);
        id v22 = *(void **)(v21 + 16);
        if (v22)
        {
          free(v22);
          uint64_t v21 = *(void *)(a1 + 32);
        }

        *(void *)(v21 + 16) = v20;
      }
    }
  }

void sub_10018E1BC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 72LL));
  size_t v3 = (char *)[WeakRetained streamStatus];

  if ((unint64_t)(v3 - 2) <= 2)
  {
    uint64_t v4 = *(void *)(a1 + 32);
    uint64_t v6 = *(void *)(v4 + 48);
    uint64_t v5 = *(void *)(v4 + 56);
    uint64_t v7 = ASDLogHandleForCategory(7LL);
    uint64_t v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG);
    if (v5 == v6)
    {
      if (v9)
      {
        *(_WORD *)uint64_t v13 = 0;
        _os_log_debug_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "(BufferedStream) Writer ended, sending end encountered",  v13,  2u);
      }

      id v10 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 72LL));
      sub_100237C1C((uint64_t)v10, 5LL);

      id v11 = (dispatch_source_t *)objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 72LL));
      if (!v11) {
        goto LABEL_12;
      }
      unint64_t v12 = 16LL;
    }

    else
    {
      if (v9)
      {
        *(_WORD *)buf = 0;
        _os_log_debug_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "(BufferedStream) Writer ended, sending bytes available",  buf,  2u);
      }

      id v11 = (dispatch_source_t *)objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 72LL));
      if (!v11) {
        goto LABEL_12;
      }
      unint64_t v12 = 2LL;
    }

    dispatch_source_merge_data(v11[2], v12);
LABEL_12:
  }

void sub_10018E2FC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(v2 + 56);
  size_t v4 = *(void *)(a1 + 48);
  if (v4 + v3 <= *(void *)(v2 + 24))
  {
    memcpy((void *)(*(void *)(v2 + 16) + v3), *(const void **)(a1 + 56), v4);
    *(void *)(*(void *)(a1 + 32) + 56LL) += *(void *)(a1 + 48);
    *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = *(void *)(a1 + 48);
    id WeakRetained = (dispatch_source_t *)objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 72LL));
    if (WeakRetained)
    {
      uint64_t v13 = WeakRetained;
      dispatch_source_merge_data(WeakRetained[2], 2uLL);
      id WeakRetained = v13;
    }
  }

  else
  {
    id v5 = objc_loadWeakRetained((id *)(v2 + 72));
    sub_100237C1C((uint64_t)v5, 7LL);

    uint64_t v6 = ASDErrorWithUserInfoAndFormat(714LL, 0LL, @"Out of space in the buffer");
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
    id v8 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 72LL));
    sub_100237AD4((uint64_t)v8, v7);

    BOOL v9 = (dispatch_source_t *)objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 72LL));
    id v10 = v9;
    if (v9) {
      dispatch_source_merge_data(v9[2], 8uLL);
    }

    if (*(void *)(a1 + 64))
    {
      id v11 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 72LL));
      **(void **)(a1 + 64) = (id)objc_claimAutoreleasedReturnValue([v11 streamError]);
    }

    *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = -1LL;
  }

id sub_10018ECAC(uint64_t a1)
{
  if (a1)
  {
    uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSXPCConnection currentConnection](&OBJC_CLASS___NSXPCConnection, "currentConnection"));
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[XPCClient clientIDForConnection:](&OBJC_CLASS___XPCClient, "clientIDForConnection:", v1));
  }

  else
  {
    uint64_t v2 = 0LL;
  }

  return v2;
}

void sub_10018F39C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location, id a16)
{
}

void sub_10018F3E4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v4 = ASDLogHandleForCategory(9LL, v3);
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
  {
    uint64_t v7 = (void *)objc_opt_class(WeakRetained, v6);
    int v8 = *(_DWORD *)(a1 + 40);
    int v10 = 138543618;
    id v11 = v7;
    __int16 v12 = 1024;
    int v13 = v8;
    id v9 = v7;
    _os_log_error_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_ERROR,  "[%{public}@]: Connection interrupted for pid: %i",  (uint8_t *)&v10,  0x12u);
  }
}

void sub_10018F4C8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v5 = ASDLogHandleForCategory(9LL, v4);
  uint64_t v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    int v8 = (void *)objc_opt_class(WeakRetained, v7);
    int v9 = *(_DWORD *)(a1 + 48);
    int v18 = 138543618;
    id v19 = v8;
    __int16 v20 = 1024;
    LODWORD(v21) = v9;
    id v10 = v8;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_INFO,  "[%{public}@]: Connection invalidated from pid: %i",  (uint8_t *)&v18,  0x12u);
  }

  id v12 = v3;
  if (WeakRetained)
  {
    uint64_t v13 = ASDLogHandleForCategory(9LL, v11);
    int v14 = (os_log_s *)objc_claimAutoreleasedReturnValue(v13);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
    {
      size_t v16 = (void *)objc_opt_class(WeakRetained, v15);
      int v18 = 138543618;
      id v19 = v16;
      __int16 v20 = 2114;
      id v21 = v12;
      id v17 = v16;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_INFO,  "[%{public}@]: Client %{public}@ disconnected",  (uint8_t *)&v18,  0x16u);
    }
  }
}

id sub_10018F63C(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_10018F6B4;
  block[3] = &unk_1003E9EA8;
  block[4] = objc_opt_self(a1);
  if (qword_100462108 != -1) {
    dispatch_once(&qword_100462108, block);
  }
  return (id)qword_100462100;
}

void sub_10018F6B4(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  uint64_t v2 = (void *)qword_100462100;
  qword_100462100 = (uint64_t)v1;
}

void sub_10018F83C(uint64_t a1)
{
}

void sub_10018F848(uint64_t a1, char a2)
{
  if (a1)
  {
    id v4 = sub_100255630((uint64_t)&OBJC_CLASS___URLBag);
    uint64_t v5 = (id *)objc_claimAutoreleasedReturnValue(v4);
    else {
      int v6 = 0;
    }

    id v7 = sub_100255630((uint64_t)&OBJC_CLASS___URLBag);
    int v8 = (id *)objc_claimAutoreleasedReturnValue(v7);
    int v9 = sub_1002560B8(v8, (uint64_t)@"testflight-extension/sync-interval-minutes", 480LL);

    id v10 = sub_100255630((uint64_t)&OBJC_CLASS___URLBag);
    uint64_t v11 = (id *)objc_claimAutoreleasedReturnValue(v10);
    id v12 = sub_1002560B8(v11, (uint64_t)@"testflight-extension/sync-grace-period-minutes", 240LL);

    uint64_t v13 = *(void **)(a1 + 8);
    if (v13 && v6)
    {
      if (*(_BYTE *)(a1 + 32)
        && ([v13 syncIntervalMinutes] != v9
         || [*(id *)(a1 + 8) syncGracePeriodMinutes] != v12))
      {
        uint64_t v14 = ASDLogHandleForCategory(39LL);
        uint64_t v15 = (os_log_s *)objc_claimAutoreleasedReturnValue(v14);
        if (os_log_type_enabled(v15, OS_LOG_TYPE_DEBUG))
        {
          LOWORD(v24) = 0;
          _os_log_debug_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEBUG,  "Resetting activity for TestFlight extension due to changed intervals",  (uint8_t *)&v24,  2u);
        }

        id v16 = sub_100196040((uint64_t)&OBJC_CLASS___ActivityManager);
        id v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
        sub_100197EAC((uint64_t)v17, *(void **)(a1 + 8), @"Extension sync intervals changed");

        *(_BYTE *)(a1 + 32) = 0;
      }

      uint64_t v13 = *(void **)(a1 + 8);
    }

    if (v13 && ((a2 & 1) != 0 || *(unsigned __int8 *)(a1 + 32) != v6))
    {
      *(_BYTE *)(a1 + 32) = v6;
      uint64_t v18 = ASDLogHandleForCategory(39LL);
      id v19 = (os_log_s *)objc_claimAutoreleasedReturnValue(v18);
      BOOL v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEBUG);
      if (v6)
      {
        if (v20)
        {
          int v24 = 134218240;
          uint64_t v25 = v9;
          __int16 v26 = 2048;
          uint64_t v27 = v12;
          _os_log_debug_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEBUG,  "Registering activity for TestFlight extension with interval: %ld minutes and grace period: %ld minutes",  (uint8_t *)&v24,  0x16u);
        }

        [*(id *)(a1 + 8) setSyncIntervalMinutes:v9];
        [*(id *)(a1 + 8) setSyncGracePeriodMinutes:v12];
        id v21 = sub_100196040((uint64_t)&OBJC_CLASS___ActivityManager);
        id v22 = (void *)objc_claimAutoreleasedReturnValue(v21);
        sub_1001967B8((uint64_t)v22, *(void **)(a1 + 8), @"Extension available");
      }

      else
      {
        if (v20)
        {
          LOWORD(v24) = 0;
          _os_log_debug_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEBUG,  "Unregistering activity for TestFlight extension",  (uint8_t *)&v24,  2u);
        }

        id v23 = sub_100196040((uint64_t)&OBJC_CLASS___ActivityManager);
        id v22 = (void *)objc_claimAutoreleasedReturnValue(v23);
        sub_100197EAC((uint64_t)v22, *(void **)(a1 + 8), @"Extension not available");
      }
    }
  }

void sub_10018FBCC(uint64_t a1)
{
}

id sub_10018FC14(void *a1, void *a2, void *a3, void *a4)
{
  if (!a1) {
    return 0LL;
  }
  id v8 = a4;
  id v9 = a3;
  id v10 = a2;
  uint64_t v11 = -[APSConnection initWithEnvironmentName:namedDelegatePort:queue:]( objc_alloc(&OBJC_CLASS___APSConnection),  "initWithEnvironmentName:namedDelegatePort:queue:",  v10,  @"com.apple.aps.appstored",  v8);
  id v12 = v10;
  id v13 = v9;
  id v14 = v8;
  uint64_t v15 = v11;
  v24.receiver = a1;
  v24.super_class = (Class)&OBJC_CLASS___PushConnection;
  id v16 = (id *)objc_msgSendSuper2(&v24, "init");
  uint64_t v17 = (uint64_t)v16;
  if (v16)
  {
    objc_storeStrong(v16 + 4, a4);
    objc_storeStrong((id *)(v17 + 24), a2);
    objc_storeWeak((id *)(v17 + 72), v13);
    uint64_t v18 = objc_alloc_init(&OBJC_CLASS___TaskQueue);
    id v19 = *(void **)(v17 + 40);
    *(void *)(v17 + 40) = v18;

    uint64_t v20 = *(void *)(v17 + 40);
    if (v20) {
      [*(id *)(v20 + 8) setName:@"com.apple.appstored.PushConnectionTaskQueue"];
    }
    objc_storeStrong((id *)(v17 + 8), v11);
    id v21 = objc_alloc_init(&OBJC_CLASS____TtC9appstored6LogKey);
    sub_100190138(v17, 0LL, 0LL, *(void **)(v17 + 24), 0, v21);
    sub_100190138(v17, 0LL, 0LL, *(void **)(v17 + 24), 1, v21);
    sub_10018FDE4(v17, v15, v21);
    -[APSConnection setDelegate:](v15, "setDelegate:", v17);
  }

  id v22 = (id)v17;
  return v22;
}

void sub_10018FDE4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = sub_100298894((uint64_t)&OBJC_CLASS___PushRawMessage, 1LL);
  id v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
  int v29 = v8;
  id v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v29, 1LL));

  id v10 = sub_100298894((uint64_t)&OBJC_CLASS___PushRawMessage, 3LL);
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
  __int128 v28 = v11;
  id v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v28, 1LL));

  if (!*(void *)(a1 + 48))
  {
    id v13 = sub_1001E0518(objc_alloc(&OBJC_CLASS___PushConnectionMessageHistory), *(void **)(a1 + 24), (void *)1);
    id v14 = *(void **)(a1 + 48);
    *(void *)(a1 + 4_Block_object_dispose(va, 8) = v13;
  }

  if (!*(_BYTE *)(a1 + 64))
  {
    objc_super v24 = sub_100298894((uint64_t)&OBJC_CLASS___PushRawMessage, 2LL);
    uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue(v24);
    uint64_t v26 = objc_claimAutoreleasedReturnValue([v12 arrayByAddingObject:v25]);

    id v23 = *(void **)(a1 + 56);
    *(void *)(a1 + 56) = 0LL;
    id v12 = (void *)v26;
    id v21 = v9;
    goto LABEL_9;
  }

  uint64_t v15 = ASDLogHandleForCategory(26LL);
  id v16 = (os_log_s *)objc_claimAutoreleasedReturnValue(v15);
  if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)uint64_t v27 = 138543618;
    *(void *)&v27[4] = objc_opt_class(a1, v17);
    *(_WORD *)&v27[12] = 2112;
    *(void *)&v27[14] = v6;
    id v18 = *(id *)&v27[4];
    _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_INFO,  "[%{public}@] [%@] Activating TestFlight topic",  v27,  0x16u);
  }

  id v19 = sub_100298894((uint64_t)&OBJC_CLASS___PushRawMessage, 2LL);
  uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue(v19);
  id v21 = (void *)objc_claimAutoreleasedReturnValue([v9 arrayByAddingObject:v20]);

  if (!*(void *)(a1 + 56))
  {
    id v22 = sub_1001E0518(objc_alloc(&OBJC_CLASS___PushConnectionMessageHistory), *(void **)(a1 + 24), (void *)2);
    id v23 = *(void **)(a1 + 56);
    *(void *)(a1 + 56) = v22;
LABEL_9:
  }

  objc_msgSend(v5, "setEnabledTopics:ignoredTopics:", v21, v12, *(_OWORD *)v27, *(void *)&v27[16]);
}

void sub_100190038(uint64_t a1, int a2)
{
  if (a1)
  {
    if (*(unsigned __int8 *)(a1 + 64) != a2)
    {
      *(_BYTE *)(a1 + 64) = a2;
      id v3 = objc_alloc_init(&OBJC_CLASS____TtC9appstored6LogKey);
      sub_10018FDE4(a1, *(void **)(a1 + 8), v3);
    }
  }

void sub_1001900A4(uint64_t a1, void *a2, int a3)
{
  if (a1) {
    sub_100190138(a1, 0LL, 0LL, *(void **)(a1 + 24), a3, a2);
  }
}

void sub_1001900C4(uint64_t a1, void *a2)
{
  if (a1)
  {
    id v3 = a2;
    id v4 = objc_alloc_init(&OBJC_CLASS____TtC9appstored6LogKey);
    sub_100190138(a1, (void *)1, v3, *(void **)(a1 + 24), 0, v4);
  }

void sub_100190138(uint64_t a1, void *a2, void *a3, void *a4, int a5, void *a6)
{
  id v36 = a3;
  id v35 = a4;
  id v11 = a6;
  if (a1)
  {
    id v12 = @"Remove";
    if (!a2) {
      id v12 = @"Add";
    }
    id v34 = v12;
    if (v36)
    {
      if (a5) {
        id v13 = (void *)objc_claimAutoreleasedReturnValue( +[ACAccountStore ams_sharedAccountStoreForMediaType:]( &OBJC_CLASS___ACAccountStore,  "ams_sharedAccountStoreForMediaType:",  AMSAccountMediaTypeAppStoreSandbox));
      }
      else {
        id v13 = (void *)objc_claimAutoreleasedReturnValue(+[ACAccountStore ams_sharedAccountStore](&OBJC_CLASS___ACAccountStore, "ams_sharedAccountStore"));
      }
      uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "ams_iTunesAccountWithDSID:", v36));
    }

    else
    {
      if ((a5 & 1) != 0) {
        uint64_t v14 = objc_claimAutoreleasedReturnValue( +[ActiveAccountObserver activeSandboxAccount]( &OBJC_CLASS___ActiveAccountObserver,  "activeSandboxAccount"));
      }
      else {
        uint64_t v14 = objc_claimAutoreleasedReturnValue(+[ActiveAccountObserver activeAccount](&OBJC_CLASS___ActiveAccountObserver, "activeAccount"));
      }
      uint64_t v15 = (void *)v14;
    }

    id v16 = @"Active";
    if (a5) {
      id v16 = @"Sandbox";
    }
    int v33 = v16;
    uint64_t v17 = ASDLogHandleForCategory(26LL);
    id v18 = (os_log_s *)objc_claimAutoreleasedReturnValue(v17);
    id v19 = v18;
    if (v15)
    {
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
      {
        id v21 = (void *)objc_opt_class(a1, v20);
        id v32 = v21;
        id v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "ams_DSID"));
        id v23 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 8) publicToken]);
        id v24 = sub_1001D4008(v23);
        uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue(v24);
        *(_DWORD *)buf = 138544642;
        id v46 = v21;
        __int16 v47 = 2112;
        id v48 = v11;
        __int16 v49 = 2114;
        unint64_t v50 = v34;
        __int16 v51 = 2114;
        uint64_t v52 = v33;
        __int16 v53 = 2114;
        unint64_t v54 = v22;
        __int16 v55 = 2114;
        unint64_t v56 = v25;
        _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] [%@] [%{public}@] [%{public}@] Sending push request for accountID: %{public}@ token: %{public}@",  buf,  0x3Eu);
      }

      uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 8) publicToken]);
      uint64_t v27 = sub_10023A10C((id *)objc_alloc(&OBJC_CLASS___PushTypesTask), a2, v15, v35, v26, v11);
      objc_initWeak((id *)buf, v27);
      v37[0] = _NSConcreteStackBlock;
      v37[1] = 3221225472LL;
      v37[2] = sub_100190F60;
      v37[3] = &unk_1003E9ED0;
      objc_copyWeak(&v43, (id *)buf);
      v37[4] = a1;
      id v38 = v11;
      id v39 = v15;
      id v40 = v35;
      __int128 v41 = v34;
      id v19 = v26;
      unint64_t v42 = v19;
      [v27 setCompletionBlock:v37];
      uint64_t v28 = *(void *)(a1 + 40);
      __int16 v44 = v27;
      int v29 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v44, 1LL));
      if (v28) {
        [*(id *)(v28 + 8) addOperations:v29 waitUntilFinished:1];
      }

      objc_destroyWeak(&v43);
      objc_destroyWeak((id *)buf);
    }

    else if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138544130;
      id v46 = (id)objc_opt_class(a1, v30);
      __int16 v47 = 2112;
      id v48 = v11;
      __int16 v49 = 2114;
      unint64_t v50 = v34;
      __int16 v51 = 2114;
      uint64_t v52 = v33;
      id v31 = v46;
      _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_INFO,  "[%{public}@] [%@] [%{public}@] [%{public}@] Skipping push type lookup due to no account",  buf,  0x2Au);
    }
  }
}

void sub_100190574( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, id location)
{
}

void sub_10019059C(uint64_t a1, void *a2)
{
  if (a1)
  {
    id v3 = a2;
    id v4 = objc_alloc_init(&OBJC_CLASS____TtC9appstored6LogKey);
    sub_100190138(a1, (void *)1, v3, *(void **)(a1 + 24), 1, v4);
  }

void sub_100190610(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    uint64_t v2 = *(dispatch_queue_s **)(a1 + 32);
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472LL;
    v3[2] = sub_10019066C;
    v3[3] = &unk_1003E9E38;
    v3[4] = a1;
    void v3[5] = a2;
    dispatch_async(v2, v3);
  }

void sub_10019066C(uint64_t a1)
{
  if (*(void *)(a1 + 40) != 2LL)
  {
    uint64_t v11 = ASDLogHandleForCategory(26LL);
    id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
    if (!os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      goto LABEL_9;
    }
    id v13 = (void *)objc_opt_class(*(void *)(a1 + 32), v12);
    int v18 = 138543362;
    id v19 = v13;
    id v14 = v13;
    uint64_t v15 = "[%{public}@] Per-topic token can be requested only for TestFlight";
LABEL_11:
    _os_log_error_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, v15, (uint8_t *)&v18, 0xCu);

    goto LABEL_9;
  }

  int v2 = *(unsigned __int8 *)(*(void *)(a1 + 32) + 64LL);
  uint64_t v3 = ASDLogHandleForCategory(26LL);
  id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
  id v5 = v4;
  if (!v2)
  {
    if (!os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      goto LABEL_9;
    }
    uint64_t v17 = (void *)objc_opt_class(*(void *)(a1 + 32), v16);
    int v18 = 138543362;
    id v19 = v17;
    id v14 = v17;
    uint64_t v15 = "[%{public}@] Per-topic token can be requested only when TestFlight topic is enabled";
    goto LABEL_11;
  }

  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    id v7 = (void *)objc_opt_class(*(void *)(a1 + 32), v6);
    int v18 = 138543362;
    id v19 = v7;
    id v8 = v7;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_INFO,  "[%{public}@] Requesting token for TestFlight",  (uint8_t *)&v18,  0xCu);
  }

  id v9 = *(void **)(*(void *)(a1 + 32) + 8LL);
  id v10 = sub_100298894((uint64_t)&OBJC_CLASS___PushRawMessage, 2LL);
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
  [v9 requestTokenForTopic:v5 identifier:&stru_1003F3E40];
LABEL_9:
}

void sub_100190828(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    int v2 = *(dispatch_queue_s **)(a1 + 32);
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472LL;
    v3[2] = sub_100190884;
    v3[3] = &unk_1003E9E38;
    v3[4] = a1;
    void v3[5] = a2;
    dispatch_async(v2, v3);
  }

void sub_100190884(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = ASDLogHandleForCategory(26LL);
  id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
  id v5 = v4;
  if (v2 == 2)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      id v7 = (void *)objc_opt_class(*(void *)(a1 + 32), v6);
      int v14 = 138543362;
      uint64_t v15 = v7;
      id v8 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_INFO,  "[%{public}@] Invalidating token for TestFlight",  (uint8_t *)&v14,  0xCu);
    }

    id v9 = *(void **)(*(void *)(a1 + 32) + 8LL);
    id v10 = sub_100298894((uint64_t)&OBJC_CLASS___PushRawMessage, 2LL);
    id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
    [v9 invalidateTokenForTopic:v5 identifier:&stru_1003F3E40];
  }

  else if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    uint64_t v12 = (void *)objc_opt_class(*(void *)(a1 + 32), v11);
    int v14 = 138543362;
    uint64_t v15 = v12;
    id v13 = v12;
    _os_log_error_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_ERROR,  "[%{public}@] Per-topic token can be invalidated only for TestFlight",  (uint8_t *)&v14,  0xCu);
  }
}

void sub_100190F60(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 80));
  uint64_t v3 = WeakRetained;
  if (!WeakRetained)
  {
LABEL_11:
    uint64_t v22 = *(void *)(a1 + 32);
    id v23 = *(void **)(v22 + 16);
    *(void *)(v22 + 16) = 0LL;

    uint64_t v24 = ASDLogHandleForCategory(26LL);
    uint64_t v25 = (os_log_s *)objc_claimAutoreleasedReturnValue(v24);
    if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR))
    {
      id v34 = (void *)objc_opt_class(*(void *)(a1 + 32), v26);
      uint64_t v35 = *(void *)(a1 + 40);
      id v36 = *(void **)(a1 + 64);
      id v38 = v34;
      if (v3) {
        id Property = objc_getProperty(v3, v37, 32LL, 1);
      }
      else {
        id Property = 0LL;
      }
      id v40 = Property;
      *(_DWORD *)buf = 138544130;
      *(void *)&uint8_t buf[4] = v34;
      *(_WORD *)&buf[12] = 2112;
      *(void *)&buf[14] = v35;
      *(_WORD *)&buf[22] = 2114;
      __int16 v44 = v36;
      LOWORD(v45) = 2114;
      *(void *)((char *)&v45 + 2) = v40;
      _os_log_error_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_ERROR,  "[%{public}@] [%@] [%{public}@] Push types call failed with error: %{public}@",  buf,  0x2Au);
    }

    goto LABEL_16;
  }

  uint64_t v4 = *((void *)WeakRetained + 6);
  if (v4 != 2)
  {
    if (v4 == 3)
    {
      uint64_t v5 = ASDLogHandleForCategory(26LL);
      uint64_t v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      {
        id v8 = (void *)objc_opt_class(*(void *)(a1 + 32), v7);
        uint64_t v9 = *(void *)(a1 + 40);
        *(_DWORD *)buf = 138543618;
        *(void *)&uint8_t buf[4] = v8;
        *(_WORD *)&buf[12] = 2112;
        *(void *)&buf[14] = v9;
        id v10 = v8;
        _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] [%@] Retrying add push type call since push token had not been registered",  buf,  0x16u);
      }

      uint64_t v11 = *(void **)(a1 + 56);
      uint64_t v13 = *(void *)(a1 + 32);
      uint64_t v12 = *(void **)(a1 + 40);
      id v14 = *(id *)(a1 + 48);
      id v15 = v11;
      id v16 = v12;
      if (v13)
      {
        uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(v13 + 8) publicToken]);
        int v18 = sub_10023A10C((id *)objc_alloc(&OBJC_CLASS___PushTypesTask), 0LL, v14, v15, v17, v16);
        objc_initWeak(&v41, v18);
        *(void *)buf = _NSConcreteStackBlock;
        *(void *)&buf[8] = 3221225472LL;
        *(void *)&uint8_t buf[16] = sub_100191350;
        __int16 v44 = &unk_1003E9EF8;
        objc_copyWeak(v47, &v41);
        *(void *)&__int128 v45 = v13;
        *((void *)&v45 + 1) = v16;
        id v19 = v17;
        id v46 = v19;
        [v18 setCompletionBlock:buf];
        uint64_t v20 = *(void *)(v13 + 40);
        unint64_t v42 = v18;
        id v21 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v42, 1LL));
        if (v20) {
          [*(id *)(v20 + 8) addOperations:v21 waitUntilFinished:1];
        }

        objc_destroyWeak(v47);
        objc_destroyWeak(&v41);
      }

      goto LABEL_16;
    }

    goto LABEL_11;
  }

  uint64_t v27 = ASDLogHandleForCategory(26LL);
  uint64_t v28 = (os_log_s *)objc_claimAutoreleasedReturnValue(v27);
  if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v30 = (void *)objc_opt_class(*(void *)(a1 + 32), v29);
    uint64_t v31 = *(void *)(a1 + 40);
    id v32 = *(void **)(a1 + 64);
    *(_DWORD *)buf = 138543874;
    *(void *)&uint8_t buf[4] = v30;
    *(_WORD *)&buf[12] = 2112;
    *(void *)&buf[14] = v31;
    *(_WORD *)&buf[22] = 2114;
    __int16 v44 = v32;
    id v33 = v30;
    _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] [%@] [%{public}@] Push types call succeeded",  buf,  0x20u);
  }

  objc_storeStrong((id *)(*(void *)(a1 + 32) + 16LL), *(id *)(a1 + 72));
LABEL_16:
}

void sub_100191328( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, id a9)
{
}

void sub_100191350(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  uint64_t v4 = WeakRetained;
  if (WeakRetained && *((void *)WeakRetained + 6) == 2LL)
  {
    uint64_t v5 = ASDLogHandleForCategory(26LL, v3);
    uint64_t v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      id v8 = (void *)objc_opt_class(*(void *)(a1 + 32), v7);
      uint64_t v9 = *(void *)(a1 + 40);
      int v26 = 138543618;
      uint64_t v27 = v8;
      __int16 v28 = 2112;
      uint64_t v29 = v9;
      id v10 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] [%@] [Add] Retried push types call succeeded",  (uint8_t *)&v26,  0x16u);
    }

    uint64_t v11 = *(void **)(a1 + 48);
    uint64_t v12 = *(void *)(a1 + 32);
    id v13 = v11;
    id v14 = *(os_log_s **)(v12 + 16);
    *(void *)(v12 + 16) = v13;
  }

  else
  {
    uint64_t v15 = *(void *)(a1 + 32);
    id v16 = *(void **)(v15 + 16);
    *(void *)(v15 + 16) = 0LL;

    uint64_t v18 = ASDLogHandleForCategory(26LL, v17);
    id v14 = (os_log_s *)objc_claimAutoreleasedReturnValue(v18);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      uint64_t v20 = (void *)objc_opt_class(*(void *)(a1 + 32), v19);
      uint64_t v21 = *(void *)(a1 + 40);
      id v23 = v20;
      if (v4) {
        id Property = objc_getProperty(v4, v22, 32LL, 1);
      }
      else {
        id Property = 0LL;
      }
      id v25 = Property;
      int v26 = 138543874;
      uint64_t v27 = v20;
      __int16 v28 = 2112;
      uint64_t v29 = v21;
      __int16 v30 = 2114;
      id v31 = v25;
      _os_log_error_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_ERROR,  "[%{public}@] [%@] [Add] Retried push types call failed with error: %{public}@",  (uint8_t *)&v26,  0x20u);
    }
  }
}

id sub_1001915A4(id a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    v43.receiver = a1;
    v43.super_class = (Class)&OBJC_CLASS___AppPackage;
    a1 = objc_msgSendSuper2(&v43, "init");
    if (a1)
    {
      uint64_t v4 = (uint64_t *)v3;
      objc_opt_self(&OBJC_CLASS___AppPackage);
      uint64_t v5 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
      uint64_t v6 = v5;
      if (v4)
      {
        if (v4[3] == 3)
        {
          -[NSMutableDictionary setObject:forKeyedSubscript:]( v5,  "setObject:forKeyedSubscript:",  &off_10040BE00,  @"package_type");
          id v8 = objc_getProperty(v4, v7, 64LL, 1);
          -[NSMutableDictionary setObject:forKeyedSubscript:]( v6,  "setObject:forKeyedSubscript:",  v8,  @"delta_algorithm");
        }

        else
        {
          -[NSMutableDictionary setObject:forKeyedSubscript:]( v5,  "setObject:forKeyedSubscript:",  &off_10040BE18,  @"package_type");
        }

        uint64_t v9 = v4[2];
      }

      else
      {
        -[NSMutableDictionary setObject:forKeyedSubscript:]( v5,  "setObject:forKeyedSubscript:",  &off_10040BE18,  @"package_type");
        uint64_t v9 = 0LL;
      }

      id v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", v9));
      -[NSMutableDictionary setObject:forKeyedSubscript:]( v6,  "setObject:forKeyedSubscript:",  v10,  @"archive_type");

      if (v4)
      {
        id v12 = objc_getProperty(v4, v11, 32LL, 1);
        -[NSMutableDictionary setObject:forKeyedSubscript:]( v6,  "setObject:forKeyedSubscript:",  v12,  @"package_url");

        id Property = objc_getProperty(v4, v13, 48LL, 1);
      }

      else
      {
        -[NSMutableDictionary setObject:forKeyedSubscript:]( v6,  "setObject:forKeyedSubscript:",  0LL,  @"package_url");
        id Property = 0LL;
      }

      id v15 = Property;
      -[NSMutableDictionary setObject:forKeyedSubscript:](v6, "setObject:forKeyedSubscript:", v15, @"bytes_total");

      if (v4)
      {
        id v17 = objc_getProperty(v4, v16, 88LL, 1);
        -[NSMutableDictionary setObject:forKeyedSubscript:]( v6,  "setObject:forKeyedSubscript:",  v17,  @"hash_array");

        id v19 = objc_getProperty(v4, v18, 56LL, 1);
      }

      else
      {
        -[NSMutableDictionary setObject:forKeyedSubscript:]( v6,  "setObject:forKeyedSubscript:",  0LL,  @"hash_array");
        id v19 = 0LL;
      }

      id v20 = v19;
      -[NSMutableDictionary setObject:forKeyedSubscript:]( v6,  "setObject:forKeyedSubscript:",  v20,  @"clear_hash_array");

      if (v4) {
        id v22 = objc_getProperty(v4, v21, 120LL, 1);
      }
      else {
        id v22 = 0LL;
      }
      id v23 = v22;
      -[NSMutableDictionary setObject:forKeyedSubscript:](v6, "setObject:forKeyedSubscript:", v23, @"hash_size");

      -[NSMutableDictionary setObject:forKeyedSubscript:]( v6,  "setObject:forKeyedSubscript:",  &off_10040BE00,  @"hash_type");
      if (v4)
      {
        uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", *((_BYTE *)v4 + 9) & 1));
        -[NSMutableDictionary setObject:forKeyedSubscript:]( v6,  "setObject:forKeyedSubscript:",  v24,  @"streaming_zip");

        id v26 = objc_getProperty(v4, v25, 144LL, 1);
      }

      else
      {
        id v41 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", 0LL));
        -[NSMutableDictionary setObject:forKeyedSubscript:]( v6,  "setObject:forKeyedSubscript:",  v41,  @"streaming_zip");

        id v26 = 0LL;
      }

      id v27 = v26;
      -[NSMutableDictionary setObject:forKeyedSubscript:](v6, "setObject:forKeyedSubscript:", v27, @"sinf");

      if (v4)
      {
        id v29 = objc_getProperty(v4, v28, 72LL, 1);
        -[NSMutableDictionary setObject:forKeyedSubscript:](v6, "setObject:forKeyedSubscript:", v29, @"dp_info");

        id v31 = objc_getProperty(v4, v30, 80LL, 1);
      }

      else
      {
        -[NSMutableDictionary setObject:forKeyedSubscript:](v6, "setObject:forKeyedSubscript:", 0LL, @"dp_info");
        id v31 = 0LL;
      }

      id v32 = v31;
      -[NSMutableDictionary setObject:forKeyedSubscript:](v6, "setObject:forKeyedSubscript:", v32, @"disk_usage");

      if (v4) {
        id v34 = objc_getProperty(v4, v33, 104LL, 1);
      }
      else {
        id v34 = 0LL;
      }
      id v35 = v34;
      -[NSMutableDictionary setObject:forKeyedSubscript:]( v6,  "setObject:forKeyedSubscript:",  v35,  @"initial_odr_size");

      if (v4)
      {
        id v36 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", v4[1] & 1));
        -[NSMutableDictionary setObject:forKeyedSubscript:]( v6,  "setObject:forKeyedSubscript:",  v36,  @"locate_asset_cache");

        id v38 = objc_getProperty(v4, v37, 152LL, 1);
      }

      else
      {
        unint64_t v42 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", 0LL));
        -[NSMutableDictionary setObject:forKeyedSubscript:]( v6,  "setObject:forKeyedSubscript:",  v42,  @"locate_asset_cache");

        id v38 = 0LL;
      }

      id v39 = v38;
      -[NSMutableDictionary setObject:forKeyedSubscript:](v6, "setObject:forKeyedSubscript:", v39, @"variant_id");

      [a1 setValuesWithDictionary:v6];
    }
  }

  return a1;
}

id sub_100191A50(id a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    v24.receiver = a1;
    v24.super_class = (Class)&OBJC_CLASS___AppPackage;
    a1 = objc_msgSendSuper2(&v24, "init");
    if (a1)
    {
      uint64_t v4 = (id *)v3;
      objc_opt_self(&OBJC_CLASS___AppPackage);
      uint64_t v5 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
      uint64_t v6 = v5;
      if (v4)
      {
        id v7 = v4[3];
        -[NSMutableDictionary setObject:forKeyedSubscript:]( v6,  "setObject:forKeyedSubscript:",  v7,  @"bytes_offset");

        id v8 = v4[4];
      }

      else
      {
        -[NSMutableDictionary setObject:forKeyedSubscript:]( v5,  "setObject:forKeyedSubscript:",  0LL,  @"bytes_offset");
        id v8 = 0LL;
      }

      id v9 = v8;
      -[NSMutableDictionary setObject:forKeyedSubscript:](v6, "setObject:forKeyedSubscript:", v9, @"bytes_total");

      if (v4) {
        id v10 = v4[9];
      }
      else {
        id v10 = 0LL;
      }
      id v11 = v10;
      -[NSMutableDictionary setObject:forKeyedSubscript:](v6, "setObject:forKeyedSubscript:", v11, @"package_url");

      if (v4)
      {
        id v12 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  *((unsigned __int8 *)v4 + 8)));
        -[NSMutableDictionary setObject:forKeyedSubscript:]( v6,  "setObject:forKeyedSubscript:",  v12,  @"streaming_zip");

        id v13 = v4[7];
      }

      else
      {
        id v23 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", 0LL));
        -[NSMutableDictionary setObject:forKeyedSubscript:]( v6,  "setObject:forKeyedSubscript:",  v23,  @"streaming_zip");

        id v13 = 0LL;
      }

      id v14 = v13;
      -[NSMutableDictionary setObject:forKeyedSubscript:](v6, "setObject:forKeyedSubscript:", v14, @"hash_array");

      if (v4)
      {
        id v15 = v4[4];
        -[NSMutableDictionary setObject:forKeyedSubscript:](v6, "setObject:forKeyedSubscript:", v15, @"hash_size");

        id v16 = v4[6];
      }

      else
      {
        -[NSMutableDictionary setObject:forKeyedSubscript:](v6, "setObject:forKeyedSubscript:", 0LL, @"hash_size");
        id v16 = 0LL;
      }

      id v17 = v16;

      -[NSMutableDictionary setObject:forKeyedSubscript:](v6, "setObject:forKeyedSubscript:", v17, @"hash_type");
      id v18 = sub_100255630((uint64_t)&OBJC_CLASS___URLBag);
      id v19 = (void *)objc_claimAutoreleasedReturnValue(v18);
      if (!v19
        || (id v20 = v19,
            unsigned __int8 v21 = sub_100256DD0(v19, @"ignoreAssetCacheForSystemApps", 0LL, 1),
            v20,
            (v21 & 1) == 0))
      {
        -[NSMutableDictionary setObject:forKeyedSubscript:]( v6,  "setObject:forKeyedSubscript:",  &__kCFBooleanTrue,  @"locate_asset_cache");
      }

      [a1 setValuesWithDictionary:v6];
    }
  }

  return a1;
}

BOOL sub_100191DD8(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    while (1)
    {
      if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      char v4 = 0;
      unsigned int v5 = 0;
      unint64_t v6 = 0LL;
      while (1)
      {
        unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v7 == -1LL || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
          break;
        }
        char v8 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
        *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
        v6 |= (unint64_t)(v8 & 0x7F) << v4;
        if ((v8 & 0x80) == 0) {
          goto LABEL_11;
        }
        v4 += 7;
        if (v5++ >= 9)
        {
          unint64_t v6 = 0LL;
          int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
          goto LABEL_13;
        }
      }

      *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
      int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
      if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
        unint64_t v6 = 0LL;
      }
LABEL_13:
      if (v10 || (v6 & 7) == 4) {
        return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
      if ((v6 >> 3) == 1)
      {
        uint64_t String = PBReaderReadString(a2);
        uint64_t v13 = objc_claimAutoreleasedReturnValue(String);
        uint64_t v14 = 8LL;
LABEL_21:
        id v16 = *(void **)(a1 + v14);
        *(void *)(a1 + v14) = v13;

        goto LABEL_23;
      }

      if ((PBReaderSkipValueWithTag(a2) & 1) == 0) {
        return 0LL;
      }
LABEL_23:
      if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
      }
    }

    uint64_t v15 = PBReaderReadString(a2);
    uint64_t v13 = objc_claimAutoreleasedReturnValue(v15);
    uint64_t v14 = 16LL;
    goto LABEL_21;
  }

  return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_100191FF4(uint64_t a1, void *a2)
{
  if (a1) {
    objc_storeStrong((id *)(a1 + 8), a2);
  }
}

void sub_10019200C(uint64_t a1, void *a2)
{
  if (a1) {
    objc_storeStrong((id *)(a1 + 16), a2);
  }
}

id *sub_1001921C4(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_self(a1);
  char v4 = sub_100192214((id *)objc_alloc(&OBJC_CLASS___PromiseResult), 0LL, v3);

  return v4;
}

id *sub_100192214(id *a1, void *a2, void *a3)
{
  id v6 = a2;
  id v7 = a3;
  if (a1)
  {
    v12.receiver = a1;
    v12.super_class = (Class)&OBJC_CLASS___PromiseResult;
    char v8 = (id *)objc_msgSendSuper2(&v12, "init");
    a1 = v8;
    if (v8)
    {
      if (v6)
      {
        id v9 = v8 + 2;
        int v10 = a2;
      }

      else
      {
        if (!v7)
        {
          +[NSException raise:format:]( &OBJC_CLASS___NSException,  "raise:format:",  NSInternalInconsistencyException,  @"PromiseResult must represent either a value or an error");
          goto LABEL_8;
        }

        id v9 = v8 + 1;
        int v10 = a3;
      }

      objc_storeStrong(v9, v10);
    }
  }

id *sub_1001922D8(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_self(a1);
  char v4 = sub_100192214((id *)objc_alloc(&OBJC_CLASS___PromiseResult), v3, 0LL);

  return v4;
}

__CFString *sub_100192364(uint64_t a1)
{
  else {
    return off_1003E9F18[a1 - 1];
  }
}

id *sub_100192404(id *a1, void *a2, void *a3)
{
  id v6 = a2;
  id v7 = a3;
  if (a1)
  {
    char v8 = [a1 init];
    a1 = v8;
    if (v8)
    {
      objc_storeStrong(v8 + 1, a2);
      objc_storeStrong(a1 + 6, a3);
    }
  }

  return a1;
}

void sub_100192534( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_10019254C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_10019255C(uint64_t a1)
{
}

void sub_100192564(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 56LL));
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8LL);
  char v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = WeakRetained;
}

id sub_100192618(uint64_t a1)
{
  return objc_storeWeak((id *)(*(void *)(a1 + 32) + 56LL), *(id *)(a1 + 40));
}

void sub_1001926B4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_1001926CC(uint64_t result)
{
  *(_DWORD *)(*(void *)(*(void *)(result + 40) + 8LL) + 24LL) = *(_DWORD *)(*(void *)(result + 32) + 24LL);
  return result;
}

void sub_100192794( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_1001927AC(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 40) copy];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8LL);
  char v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_100192860(uint64_t a1)
{
  uint64_t v2 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) prependingCategory:@"FP"]);
  uint64_t v3 = *(void *)(a1 + 32);
  char v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_100192950( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_100192968(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 64) copy];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8LL);
  char v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_1001929A0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 40) copy];
  uint64_t v3 = *(void *)(a1 + 32);
  char v4 = *(void **)(v3 + 64);
  *(void *)(v3 + 64) = v2;
}

id sub_100192BC4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  objc_opt_self(a1);
  if (os_variant_has_internal_content("com.apple.appstored")
    && [v6 fairplayStatus])
  {
    id v7 = [v6 fairplayStatus];
LABEL_6:
    id v9 = v7;
    goto LABEL_7;
  }

  id v8 = objc_claimAutoreleasedReturnValue([v5 canonicalExecutablePath]);
  id v9 = [v8 fileSystemRepresentation];

  if (v9)
  {
    sub_1001242AC();
    goto LABEL_6;
  }

uint64_t sub_1001933E0(uint64_t result)
{
  *(_DWORD *)(*(void *)(result + 32) + 24LL) = *(_DWORD *)(result + 40);
  return result;
}

void sub_1001933F0(id *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    uint64_t v7 = ASDLogHandleForCategory(28LL);
    id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([a1[4] logKey]);
      *(_DWORD *)buf = 138412546;
      id v17 = v13;
      __int16 v18 = 2114;
      id v19 = v6;
      _os_log_error_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_ERROR,  "[%@] Wasn't able to display the family leave dialog: %{public}@",  buf,  0x16u);
    }
  }

  else if (a1[5])
  {
    id v9 = (void *)objc_claimAutoreleasedReturnValue([v5 selectedActionIdentifier]);
    int v10 = (void *)objc_claimAutoreleasedReturnValue([a1[5] identifier]);
    unsigned int v11 = [v9 isEqualToString:v10];

    if (v11)
    {
      if ((uint64_t)[a1[6] longLongValue] < 1)
      {
        v14[0] = _NSConcreteStackBlock;
        v14[1] = 3221225472LL;
        void v14[2] = sub_1001936AC;
        v14[3] = &unk_1003E9CA8;
        void v14[4] = a1[4];
        sub_100322630((uint64_t)&OBJC_CLASS___AppStore, v14);
      }

      else
      {
        id v12 = a1[6];
        v15[0] = _NSConcreteStackBlock;
        v15[1] = 3221225472LL;
        v15[2] = sub_1001935CC;
        v15[3] = &unk_1003E9CA8;
        v15[4] = a1[4];
        sub_100322540((uint64_t)&OBJC_CLASS___AppStore, v12, v15);
      }
    }
  }
}

void sub_1001935CC(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    uint64_t v4 = ASDLogHandleForCategory(28LL);
    id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) logKey]);
      int v7 = 138412546;
      id v8 = v6;
      __int16 v9 = 2114;
      id v10 = v3;
      _os_log_error_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_ERROR,  "[%@] Encountered error opening store. Error: %{public}@",  (uint8_t *)&v7,  0x16u);
    }
  }
}

void sub_1001936AC(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    uint64_t v4 = ASDLogHandleForCategory(28LL);
    id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) logKey]);
      int v7 = 138412546;
      id v8 = v6;
      __int16 v9 = 2114;
      id v10 = v3;
      _os_log_error_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_ERROR,  "[%@] Encountered error opening store. Error: %{public}@",  (uint8_t *)&v7,  0x16u);
    }
  }
}

void sub_100193B10(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  int v7 = v6;
  if (a1)
  {
    if (v5 && v6)
    {
      [*(id *)(a1 + 8) setValue:v5 forKey:v6];
    }

    else
    {
      uint64_t v8 = ASDLogHandleForCategory(14LL);
      __int16 v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      {
        int v12 = 138543874;
        id v13 = (id)objc_opt_class(a1, v10);
        __int16 v14 = 2112;
        id v15 = v5;
        __int16 v16 = 2112;
        id v17 = v7;
        id v11 = v13;
        _os_log_error_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_ERROR,  "[%{public}@]: Unable to set value: %@ for propery: %@",  (uint8_t *)&v12,  0x20u);
      }
    }
  }
}

id *sub_100193C24(id *a1, uint64_t a2)
{
  if (a1) {
    a1 = (id *)objc_claimAutoreleasedReturnValue([a1[1] valueForKey:a2]);
  }
  return a1;
}

id *sub_100193C54(id *a1, void *a2, unint64_t a3, void *a4, void *a5)
{
  id v10 = a4;
  id v11 = a5;
  if (a1)
  {
    v21.receiver = a1;
    v21.super_class = (Class)&OBJC_CLASS___CheckStoreQueueTask;
    int v12 = (id *)objc_msgSendSuper2(&v21, "init");
    a1 = v12;
    if (v12)
    {
      objc_storeStrong(v12 + 8, a5);
      objc_storeStrong(a1 + 9, a4);
      a1[6] = a2;
      a1[7] = (id)a3;
      if (a3 > 2) {
        id v13 = 0LL;
      }
      else {
        id v13 = off_1003E9FB0[a3];
      }
      if (a1[6]) {
        __int16 v14 = @"Pending";
      }
      else {
        __int16 v14 = @"Auto";
      }
      id v15 = v14;
      __int16 v16 = objc_alloc(&OBJC_CLASS____TtC9appstored6LogKey);
      id v17 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"%@/%@",  v15,  v13));

      __int16 v18 = -[LogKey initWithCategory:](v16, "initWithCategory:", v17);
      id v19 = a1[5];
      a1[5] = v18;
    }
  }

  return a1;
}

LABEL_63:
            objc_super v21 = (char *)v21 + 1;
          }

          while (v119 != v21);
          uint64_t v87 = [v18 countByEnumeratingWithState:&v121 objects:v127 count:16];
          unint64_t v119 = v87;
          if (!v87)
          {
            __int16 v16 = v20;

            __int16 v14 = v108;
            id v10 = v109;
            if ((v114 & 1) != 0) {
              goto LABEL_86;
            }
            goto LABEL_81;
          }
        }
      }

      uint64_t v115 = 0LL;
LABEL_81:
      if (v2->_queueType && v2->_reason)
      {
        uint64_t v92 = ASDLogHandleForCategory(25LL);
        uint64_t v93 = (os_log_s *)objc_claimAutoreleasedReturnValue(v92);
        if (os_log_type_enabled(v93, OS_LOG_TYPE_ERROR))
        {
          unint64_t v107 = (void *)objc_claimAutoreleasedReturnValue([(id)v2->_reason logKey]);
          *(_DWORD *)buf = 138412290;
          unint64_t v129 = v107;
          _os_log_error_impl( (void *)&_mh_execute_header,  v93,  OS_LOG_TYPE_ERROR,  "[%@] Server sent us to the queue to complete the purchase but the item was not there",  buf,  0xCu);
        }

        unint64_t v94 = ASDErrorWithDescription(ASDErrorDomain, 917LL, @"Purchase could not be found in the queue");
        unint64_t v95 = (void *)objc_claimAutoreleasedReturnValue(v94);
        sub_10020E8C8(v2->_queueType, v95, (void *)v2->_reason);
      }

    goto LABEL_64;
  }

  if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138543362;
    unint64_t v126 = v9;
    _os_log_error_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_ERROR,  "Untracked task: %{public}@ canceling after receiving response",  buf,  0xCu);
  }

  (*((void (**)(id, void))v11 + 2))(v11, 0LL);
LABEL_64:
}

LABEL_86:
      unint64_t v96 = ASDLogHandleForCategory(25LL);
      unint64_t v97 = (os_log_s *)objc_claimAutoreleasedReturnValue(v96);
      if (os_log_type_enabled(v97, OS_LOG_TYPE_DEFAULT))
      {
        unint64_t v99 = *(void **)&v2->super._success;
        if (v14) {
          unint64_t v100 = objc_getProperty(v14, v98, 80LL, 1);
        }
        else {
          unint64_t v100 = 0LL;
        }
        unint64_t v101 = v100;
        uint64_t v102 = [v101 count];
        *(_DWORD *)buf = 138412802;
        unint64_t v129 = v99;
        unint64_t v130 = 2048;
        uint64_t v131 = v115;
        unint64_t v132 = 2048;
        unint64_t v133 = v102;
        _os_log_impl( (void *)&_mh_execute_header,  v97,  OS_LOG_TYPE_DEFAULT,  "[%@] Completed queue check with %lu/%lu download(s) imported",  buf,  0x20u);
      }

      -[Task completeWithSuccess](v2, "completeWithSuccess");
    }

    else
    {
      uint64_t v88 = ASDLogHandleForCategory(25LL);
      unint64_t v89 = (os_log_s *)objc_claimAutoreleasedReturnValue(v88);
      if (os_log_type_enabled(v89, OS_LOG_TYPE_ERROR))
      {
        unint64_t v105 = *(void **)&v2->super._success;
        *(_DWORD *)buf = 138412546;
        unint64_t v129 = v105;
        unint64_t v130 = 2114;
        uint64_t v131 = v16;
        _os_log_error_impl( (void *)&_mh_execute_header,  v89,  OS_LOG_TYPE_ERROR,  "[%@] Failed to check queue: %{public}@",  buf,  0x16u);
      }

      queueType = v2->_queueType;
      if (queueType)
      {
        reason = (void *)v2->_reason;
        if (reason) {
          sub_10020E8C8(queueType, v16, reason);
        }
      }

      -[Task completeWithError:](v2, "completeWithError:", v16);
    }
  }

  else
  {
    unint64_t v103 = ASDLogHandleForCategory(25LL);
    unint64_t v104 = (os_log_s *)objc_claimAutoreleasedReturnValue(v103);
    if (os_log_type_enabled(v104, OS_LOG_TYPE_ERROR))
    {
      unint64_t v106 = *(void **)&v2->super._success;
      *(_DWORD *)buf = 138412290;
      unint64_t v129 = v106;
      _os_log_error_impl( (void *)&_mh_execute_header,  v104,  OS_LOG_TYPE_ERROR,  "[%@] Failed to check queue: No account available",  buf,  0xCu);
    }

    __int16 v16 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ASDErrorDomain,  509LL,  0LL));
    -[Task completeWithError:](v2, "completeWithError:", v16);
  }
}

id sub_100194AB4(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  id v10 = a2;
  id v11 = a3;
  id v12 = a4;
  if (a1)
  {
    v30.receiver = a1;
    v30.super_class = (Class)&OBJC_CLASS___CoordinatorPromiseDataConsumer;
    id v13 = objc_msgSendSuper2(&v30, "init");
    if (!v13) {
      goto LABEL_9;
    }
    dispatch_queue_attr_t v14 = dispatch_queue_attr_make_with_autorelease_frequency(0LL, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
    id v15 = (dispatch_queue_attr_s *)objc_claimAutoreleasedReturnValue(v14);
    dispatch_queue_t v16 = dispatch_queue_create("com.apple.appstored.DataPromiseDataConsumer", v15);
    id v17 = (void *)*((void *)v13 + 3);
    *((void *)v13 + 3) = v16;

    objc_storeStrong((id *)v13 + 5, a4);
    objc_storeStrong((id *)v13 + 4, a2);
    __int16 v18 = (void *)*((void *)v13 + 4);
    id v29 = 0LL;
    id v19 = sub_1002207CC(v18, v11, v12, &v29);
    uint64_t v20 = objc_claimAutoreleasedReturnValue(v19);
    id v21 = v29;
    id v22 = (void *)*((void *)v13 + 1);
    *((void *)v13 + 1) = v20;

    if (*((void *)v13 + 1))
    {
      id v28 = v21;
      sub_100194C68((uint64_t)v13, &v28);
      id v23 = v28;
    }

    else
    {
      uint64_t v24 = ASDErrorWithUnderlyingErrorAndDescription( v21,  ASDErrorDomain,  812LL,  @"Promise data consumer creation failed");
      id v23 = (id)objc_claimAutoreleasedReturnValue(v24);
    }

    id v25 = v23;

    if (v25)
    {
      if (a5)
      {
        id v25 = v25;
        id v26 = 0LL;
        *a5 = v25;
      }

      else
      {
        id v26 = 0LL;
      }
    }

    else
    {
LABEL_9:
      id v26 = v13;
      id v25 = 0LL;
    }
  }

  else
  {
    id v26 = 0LL;
  }

  return v26;
}

void sub_100194C68(uint64_t a1, void *a2)
{
  if (!a1) {
    return;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    uint64_t v5 = *(void *)(a1 + 40);
    if (v5)
    {
      uint64_t v6 = *(void *)(v5 + 40);
      if (v6)
      {
LABEL_12:
        id v17 = (void *)objc_claimAutoreleasedReturnValue(v7);
        uint64_t v18 = ASDErrorWithDescription(ASDErrorDomain, 703LL, v17);
        id v19 = (id)objc_claimAutoreleasedReturnValue(v18);

        goto LABEL_13;
      }
    }

    uint64_t v10 = objc_opt_class(&OBJC_CLASS___IXOwnedDataPromise, a2);
    if ((objc_opt_isKindOfClass(v4, v10) & 1) == 0)
    {
      goto LABEL_12;
    }

    id v12 = objc_alloc(&OBJC_CLASS___ZipDataStreamAdapter);
    uint64_t v13 = *(void *)(a1 + 40);
    if (v13) {
      int v14 = *(_BYTE *)(v13 + 8) & 1;
    }
    else {
      int v14 = 0;
    }
    id v15 = sub_1001A55F4((id *)&v12->super.isa, *(void **)(a1 + 8), 0LL, v14);
    dispatch_queue_t v16 = *(void **)(a1 + 48);
    *(void *)(a1 + 4_Block_object_dispose(va, 8) = v15;

    id v19 = 0LL;
  }

  else
  {
    uint64_t v8 = *(void **)(a1 + 48);
    *(void *)(a1 + 4_Block_object_dispose(va, 8) = 0LL;

    uint64_t v9 = ASDErrorWithDescription(ASDErrorDomain, 702LL, @"No data promise found to create stream adapter");
    id v19 = (id)objc_claimAutoreleasedReturnValue(v9);
  }

void sub_100194DD0(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = v3;
  if (a1)
  {
    uint64_t v5 = *(dispatch_queue_s **)(a1 + 24);
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472LL;
    _DWORD v6[2] = sub_100194E5C;
    v6[3] = &unk_1003E9DC0;
    void v6[4] = a1;
    id v7 = v3;
    dispatch_async(v5, v6);
  }
}

void sub_100194E5C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (*(void *)(v2 + 8)) {
    sub_100194E9C(v2);
  }
}

void sub_100194E9C(uint64_t a1)
{
  if (a1)
  {
    if (qword_100462118 != -1) {
      dispatch_once(&qword_100462118, &stru_1003EA040);
    }
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 16));
    if ((objc_opt_respondsToSelector( WeakRetained,  "coordinatorPromiseDataConsumer:willBeginUsingPromise:forReference:") & 1) != 0)
    {
      uint64_t v2 = (dispatch_queue_s *)qword_100462110;
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_100195AF4;
      block[3] = &unk_1003E9DC0;
      id v5 = WeakRetained;
      uint64_t v6 = a1;
      dispatch_sync(v2, block);
    }
  }

void sub_100195010(void *a1)
{
  if (*(void *)(a1[4] + 48LL))
  {
    [*(id *)(a1[4] + 48) consumeData:a1[5] andWaitWithCompletionHandler:a1[6]];
  }

  else
  {
    uint64_t v1 = a1[6];
    uint64_t v2 = ASDErrorWithDescription(ASDErrorDomain, 701LL, @"No processor was set when consuming data");
    id v3 = (id)objc_claimAutoreleasedReturnValue(v2);
    (*(void (**)(uint64_t, id, void))(v1 + 16))(v1, v3, 0LL);
  }

void sub_100195140(void *a1)
{
  if (*(void *)(a1[4] + 48LL))
  {
    [*(id *)(a1[4] + 48) consumeData:a1[5] withCompletionHandler:a1[6]];
  }

  else
  {
    uint64_t v1 = a1[6];
    uint64_t v2 = ASDErrorWithDescription(ASDErrorDomain, 701LL, @"No processor was set when consuming data");
    id v3 = (id)objc_claimAutoreleasedReturnValue(v2);
    (*(void (**)(uint64_t, id, void))(v1 + 16))(v1, v3, 0LL);
  }

void sub_100195240(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 48LL);
  if (v2)
  {
    [v2 finishWithCompletionHandler:v1];
  }

  else
  {
    uint64_t v3 = ASDErrorWithDescription(ASDErrorDomain, 701LL, @"No processor was set when finishing");
    id v4 = (id)objc_claimAutoreleasedReturnValue(v3);
    (*(void (**)(uint64_t, id))(v1 + 16))(v1, v4);
  }

void sub_100195334(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = *(void **)(v1 + 8);
  if (v2)
  {
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472LL;
    _DWORD v6[2] = sub_100195400;
    v6[3] = &unk_1003EA020;
    void v6[4] = v1;
    id v7 = *(id *)(a1 + 40);
    [v2 preflightWithCompletion:v6];
  }

  else
  {
    uint64_t v3 = *(void *)(a1 + 40);
    uint64_t v4 = ASDErrorWithDescription(ASDErrorDomain, 702LL, @"No data promise was set when preparing");
    id v5 = (id)objc_claimAutoreleasedReturnValue(v4);
    (*(void (**)(uint64_t, void, id))(v3 + 16))(v3, 0LL, v5);
  }

void sub_100195400(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void **)(a1 + 40);
  id v5 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 24LL);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1001954A0;
  block[3] = &unk_1003E9FD0;
  id v9 = v3;
  id v6 = v4;
  uint64_t v10 = *(void *)(a1 + 32);
  id v11 = v6;
  id v7 = v3;
  dispatch_async(v5, block);
}

void sub_1001954A0(void *a1)
{
  if (a1[4])
  {
    (*(void (**)(void))(a1[6] + 16LL))();
  }

  else
  {
    uint64_t v1 = a1[6];
    uint64_t v2 = *(void **)(a1[5] + 48LL);
    if (v2)
    {
      [v2 prepareWithCompletionHandler:v1];
    }

    else
    {
      uint64_t v3 = ASDErrorWithDescription(ASDErrorDomain, 701LL, @"No processor was set when preparing");
      id v4 = (id)objc_claimAutoreleasedReturnValue(v3);
      (*(void (**)(uint64_t, void, id))(v1 + 16))(v1, 0LL, v4);
    }
  }

void sub_1001955BC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (*(void *)(v2 + 48))
  {
    uint64_t v3 = *(void **)(v2 + 32);
    id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(v2 + 8) uniqueIdentifier]);
    id v24 = 0LL;
    id v5 = sub_100220AC8(v3, v4, &v24);
    id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
    id v7 = v24;

    if (!v6)
    {
      uint64_t v8 = ASDLogHandleForCategory(10LL);
      id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      {
        uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 8) uniqueIdentifier]);
        *(_DWORD *)buf = 138543618;
        id v26 = v20;
        __int16 v27 = 2114;
        id v28 = v7;
        _os_log_error_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_ERROR,  "Truncating promise after failure to reset promise %{public}@ with error: %{public}@",  buf,  0x16u);
      }

      uint64_t v10 = *(void *)(a1 + 32);
      id v11 = *(void **)(v10 + 32);
      id v12 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(v10 + 8) uniqueIdentifier]);
      uint64_t v13 = *(void **)(*(void *)(a1 + 32) + 40LL);
      id v23 = 0LL;
      id v14 = sub_100220AE4(v11, (uint64_t)v12, v13, &v23);
      id v6 = (void *)objc_claimAutoreleasedReturnValue(v14);
      id v7 = v23;
    }

    objc_storeStrong((id *)(*(void *)(a1 + 32) + 8LL), v6);
    uint64_t v15 = *(void *)(a1 + 32);
    if (*(void *)(v15 + 8))
    {
      sub_100194E9C(v15);
      uint64_t v16 = *(void *)(a1 + 32);
      id v22 = v7;
      sub_100194C68(v16, &v22);
      id v17 = v22;

      id v7 = v17;
    }

    (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
  }

  else
  {
    uint64_t v18 = *(void *)(a1 + 40);
    uint64_t v19 = ASDErrorWithDescription(ASDErrorDomain, 701LL, @"No processor was set when resetting");
    id v21 = (id)objc_claimAutoreleasedReturnValue(v19);
    (*(void (**)(uint64_t))(v18 + 16))(v18);
  }

void sub_100195870(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 48LL);
  if (v2)
  {
    [v2 suspendWithCompletionHandler:v1];
  }

  else
  {
    uint64_t v3 = ASDErrorWithDescription(ASDErrorDomain, 701LL, @"No processor was set when suspending");
    id v4 = (id)objc_claimAutoreleasedReturnValue(v3);
    (*(void (**)(uint64_t, id))(v1 + 16))(v1, v4);
  }

void sub_100195964(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void **)(v2 + 32);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(v2 + 8) uniqueIdentifier]);
  id v5 = *(void **)(*(void *)(a1 + 32) + 40LL);
  id v15 = 0LL;
  id v6 = sub_100220AE4(v3, (uint64_t)v4, v5, &v15);
  uint64_t v7 = objc_claimAutoreleasedReturnValue(v6);
  id v8 = v15;
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = *(void **)(v9 + 8);
  *(void *)(v9 + _Block_object_dispose(va, 8) = v7;

  uint64_t v11 = *(void *)(a1 + 32);
  if (*(void *)(v11 + 8))
  {
    sub_100194E9C(v11);
    uint64_t v12 = *(void *)(a1 + 32);
    id v14 = v8;
    sub_100194C68(v12, &v14);
    id v13 = v14;

    id v8 = v13;
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
}

void sub_100195A80(id a1)
{
  dispatch_queue_attr_t v1 = dispatch_queue_attr_make_with_autorelease_frequency(0LL, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  attr = (dispatch_queue_attr_s *)objc_claimAutoreleasedReturnValue(v1);
  dispatch_queue_global_t global_queue = dispatch_get_global_queue(21LL, 0LL);
  uint64_t v3 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
  dispatch_queue_t v4 = dispatch_queue_create_with_target_V2("com.apple.appstored.DataPromiseDataConsumer.delegate", attr, v3);
  id v5 = (void *)qword_100462110;
  qword_100462110 = (uint64_t)v4;
}

void sub_100195AF4(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  id v7 = (id)objc_claimAutoreleasedReturnValue([*(id *)(v3 + 8) uniqueIdentifier]);
  id Property = *(id *)(*(void *)(a1 + 40) + 40LL);
  if (Property) {
    id Property = objc_getProperty(Property, v4, 48LL, 1);
  }
  id v6 = Property;
  [v2 coordinatorPromiseDataConsumer:v3 willBeginUsingPromise:v7 forReference:v6];
}

void sub_100195BCC(void *a1)
{
  if (a1 && (sub_1001F8338(a1) & 1) == 0)
  {
    id v2 = sub_10030F240((uint64_t)&OBJC_CLASS___ODRDownloadManager);
    uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
    id v4 = sub_100313D6C((uint64_t)v3, a1);
    id v5 = (void *)objc_claimAutoreleasedReturnValue(v4);

    if (v5) {
      id Property = objc_getProperty(v5, v6, 200LL, 1);
    }
    else {
      id Property = 0LL;
    }
    id v8 = Property;
    [v8 fractionCompleted];
  }

__CFString *sub_100195C68(void *a1)
{
  if (a1)
  {
    unint64_t v1 = (unint64_t)sub_1001F7C4C(a1);
    if (v1 < 5) {
      return off_1003EA060[v1];
    }
    a1 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Unknown Purge Reason [%lu]",  v1));
  }

  return (__CFString *)a1;
}

uint64_t sub_100195CC0(void *a1)
{
  uint64_t v1 = (uint64_t)a1;
  if (a1)
  {
    id v2 = sub_1001F7BA8(a1);
    unsigned int v3 = sub_1001F8338((void *)v1);
    id v4 = sub_10030F240((uint64_t)&OBJC_CLASS___ODRDownloadManager);
    id v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
    id v6 = sub_100313D6C((uint64_t)v5, (void *)v1);
    id v7 = (void *)objc_claimAutoreleasedReturnValue(v6);

    if (v3 || !v7)
    {
      if ((uint64_t)v2 <= 0)
      {
        if (v2) {
          char v8 = 0;
        }
        else {
          char v8 = v3;
        }
        if ((v8 & 1) != 0)
        {
          uint64_t v1 = 4LL;
        }

        else
        {
          if (v7) {
            LOBYTE(v3) = 1;
          }
          uint64_t v9 = (uint64_t)sub_1001F7C4C((id)v1);
          uint64_t v10 = 6LL;
          if (v9 <= 0) {
            uint64_t v10 = 0LL;
          }
          uint64_t v11 = 6LL;
          if (v9 < 1) {
            uint64_t v11 = 1LL;
          }
          if ((v3 & 1) != 0) {
            uint64_t v1 = v10;
          }
          else {
            uint64_t v1 = v11;
          }
        }
      }

      else
      {
        uint64_t v1 = 5LL;
      }
    }

    else
    {
      uint64_t v1 = 3LL;
    }
  }

  return v1;
}

void sub_100195EC0(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  if (v1)
  {
    uint64_t v2 = ASDLogHandleForCategory(0LL);
    unsigned int v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      id v4 = (void *)objc_claimAutoreleasedReturnValue(+[AMSDevice buildVersion](&OBJC_CLASS___AMSDevice, "buildVersion"));
      int v6 = 138543362;
      id v7 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "Setting up activities with build: %{public}@",  (uint8_t *)&v6,  0xCu);
    }

    sub_100197680(v1, 9uLL, @"Startup", 0LL);
    sub_100197680(v1, 0xBuLL, @"Startup", 0LL);
    sub_100197680(v1, 5uLL, @"Startup", 0LL);
    sub_100197680(v1, 1uLL, @"Startup", 0LL);
    sub_100197680(v1, 2uLL, @"Startup", 0LL);
    sub_100197680(v1, 7uLL, @"Startup", 0LL);
    sub_100197680(v1, 3uLL, @"Startup", 0LL);
    id v5 = objc_opt_new(&OBJC_CLASS____TtC9appstored19CacheDeleteActivity);
    sub_1001967B8((uint64_t)v1, v5, @"Startup");
  }

id sub_100196040(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1001960B8;
  block[3] = &unk_1003E9EA8;
  void block[4] = objc_opt_self(a1);
  if (qword_100462128 != -1) {
    dispatch_once(&qword_100462128, block);
  }
  return (id)qword_100462120;
}

void sub_1001960B8(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  uint64_t v2 = (void *)qword_100462120;
  qword_100462120 = (uint64_t)v1;
}

CFStringRef sub_1001960DC(uint64_t a1, unint64_t a2)
{
  if (a2 > 0xC) {
    return @"CrossfirePost";
  }
  else {
    return off_1003EA1A0[a2];
  }
}

void sub_10019611C(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  id v2 = *(id *)(a1 + 40);
  unsigned int v3 = v2;
  if (v1)
  {
    id v4 = v2;
    objc_opt_self(&OBJC_CLASS___ActivityManager);
    if ([v4 isEqualToString:@"com.apple.appstored.PostAnalytics"])
    {
      unint64_t v5 = 3LL;
    }

    else if ([v4 isEqualToString:@"com.apple.appstored.ArcadePostSummary"])
    {
      unint64_t v5 = 1LL;
    }

    else if ([v4 isEqualToString:@"com.apple.appstored.ArcadePostPO"])
    {
      unint64_t v5 = 2LL;
    }

    else if ([v4 isEqualToString:@"com.apple.appstored.ArcadeResetPO"])
    {
      unint64_t v5 = 5LL;
    }

    else if ([v4 isEqualToString:@"com.apple.appstored.PostDnu"])
    {
      unint64_t v5 = 4LL;
    }

    else if ([v4 isEqualToString:@"com.apple.appstored.RestoreRetry"])
    {
      unint64_t v5 = 6LL;
    }

    else if ([v4 isEqualToString:@"com.apple.appstored.Sbsync"])
    {
      unint64_t v5 = 7LL;
    }

    else if ([v4 isEqualToString:@"com.apple.appstored.TestFlightFeedback"])
    {
      unint64_t v5 = 8LL;
    }

    else if ([v4 isEqualToString:@"com.apple.appstored.AutoUpdates"])
    {
      unint64_t v5 = 9LL;
    }

    else if ([v4 isEqualToString:@"com.apple.appstored.OptimalDownloadWindow"])
    {
      unint64_t v5 = 10LL;
    }

    else if ([v4 isEqualToString:@"com.apple.appstored.Daily"])
    {
      unint64_t v5 = 11LL;
    }

    else
    {
      if (([v4 isEqualToString:@"com.apple.appstored.skan.PostbackFetch"] & 1) == 0)
      {

        uint64_t v31 = ASDLogHandleForCategory(0LL);
        id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v31);
        if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
        {
          LODWORD(buf) = 138543362;
          *(void *)((char *)&buf + 4) = v4;
          _os_log_error_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_ERROR,  "Skipping unknown activity: %{public}@",  (uint8_t *)&buf,  0xCu);
        }

        goto LABEL_48;
      }

      unint64_t v5 = 12LL;
    }

    int v6 = sub_1001960DC((uint64_t)&OBJC_CLASS___ActivityManager, v5);
    id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (sub_100196674((uint64_t)v1, v5))
    {
      *(void *)&__int128 buf = _NSConcreteStackBlock;
      *((void *)&buf + 1) = 3221225472LL;
      id v35 = sub_10019883C;
      id v36 = &unk_1003EA180;
      char v8 = v7;
      SEL v37 = v8;
      uint64_t v9 = objc_retainBlock(&buf);
      uint64_t v10 = ASDLogHandleForCategory(0LL);
      uint64_t v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        int v32 = 138543362;
        id v33 = v8;
        _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] Handling activity wakeup",  (uint8_t *)&v32,  0xCu);
      }

      switch(v5)
      {
        case 1uLL:
          id v12 = sub_1002A4FE0((uint64_t)&OBJC_CLASS___OcelotManager);
          id v13 = (VerifyReceiptsTask *)objc_claimAutoreleasedReturnValue(v12);
          sub_1002A724C((uint64_t)v13, v9);
          goto LABEL_45;
        case 2uLL:
          id v16 = sub_1002A4FE0((uint64_t)&OBJC_CLASS___OcelotManager);
          id v13 = (VerifyReceiptsTask *)objc_claimAutoreleasedReturnValue(v16);
          sub_1002A6D10((uint64_t)v13, v9);
          goto LABEL_45;
        case 3uLL:
          id v17 = sub_1001A688C((uint64_t)&OBJC_CLASS___CrossfireManager);
          id v13 = (VerifyReceiptsTask *)objc_claimAutoreleasedReturnValue(v17);
          sub_1001A7074((uint64_t)v13, v9);
          goto LABEL_45;
        case 5uLL:
          id v18 = sub_1002A4FE0((uint64_t)&OBJC_CLASS___OcelotManager);
          id v13 = (VerifyReceiptsTask *)objc_claimAutoreleasedReturnValue(v18);
          sub_1002A7784((uint64_t)v13, v9);
          goto LABEL_45;
        case 7uLL:
          id v19 = sub_1002A4FE0((uint64_t)&OBJC_CLASS___OcelotManager);
          id v13 = (VerifyReceiptsTask *)objc_claimAutoreleasedReturnValue(v19);
          sub_1002A8504((uint64_t)v13, @"Duet", 0, v9);
          goto LABEL_45;
        case 9uLL:
          id v13 = (VerifyReceiptsTask *)objc_claimAutoreleasedReturnValue(+[UpdatesManager sharedManager](&OBJC_CLASS___UpdatesManager, "sharedManager"));
          -[VerifyReceiptsTask performBackgroundSoftwareUpdateCheck](v13, "performBackgroundSoftwareUpdateCheck");
          goto LABEL_45;
        case 0xAuLL:
          id v20 = sub_10023B9CC((uint64_t)&OBJC_CLASS___AppInstallScheduler);
          id v13 = (VerifyReceiptsTask *)objc_claimAutoreleasedReturnValue(v20);
          sub_10023C018((uint64_t)v13, 128LL);
          goto LABEL_45;
        case 0xBuLL:
          sub_10030ED70((uint64_t)&OBJC_CLASS___Analytics);
          sub_1001A3898((uint64_t)&OBJC_CLASS___AppPurgeCoordinator);
          id v13 = objc_alloc_init(&OBJC_CLASS___VerifyReceiptsTask);
          id v21 = sub_10020F1C0((uint64_t)&OBJC_CLASS___TaskQueue);
          uint64_t v22 = objc_claimAutoreleasedReturnValue(v21);
          id v23 = (void *)v22;
          if (v22) {
            [*(id *)(v22 + 8) addOperation:v13];
          }

          id v24 = sub_1002A4FE0((uint64_t)&OBJC_CLASS___OcelotManager);
          id v25 = (void *)objc_claimAutoreleasedReturnValue(v24);
          sub_1002AA99C((uint64_t)v25);

          id v26 = sub_1002A4FE0((uint64_t)&OBJC_CLASS___OcelotManager);
          __int16 v27 = (void *)objc_claimAutoreleasedReturnValue(v26);
          uint64_t v28 = sub_1002A507C((uint64_t)v27);

          if (v28 >= 1)
          {
            uint64_t v29 = ASDLogHandleForCategory(0LL);
            objc_super v30 = (os_log_s *)objc_claimAutoreleasedReturnValue(v29);
            if (os_log_type_enabled(v30, OS_LOG_TYPE_INFO))
            {
              LOWORD(v32) = 0;
              _os_log_impl( (void *)&_mh_execute_header,  v30,  OS_LOG_TYPE_INFO,  "Checking to see if sbsync needs scheduling",  (uint8_t *)&v32,  2u);
            }

            sub_100197680(v1, 7uLL, @"Daily sbsync scheduled check", 0LL);
          }

uint64_t sub_100196674(uint64_t a1, uint64_t a2)
{
  if (a1
    && (id v3 = sub_1002EB2A0((uint64_t)&OBJC_CLASS___Device),
        id v4 = (void *)objc_claimAutoreleasedReturnValue(v3),
        unsigned __int8 v5 = [v4 isHRNMode],
        v4,
        (v5 & 1) == 0))
  {
    BOOL v6 = 0LL;
    switch(a2)
    {
      case 1LL:
        id v10 = sub_1002A4FE0((uint64_t)&OBJC_CLASS___OcelotManager);
        char v8 = (void *)objc_claimAutoreleasedReturnValue(v10);
        uint64_t v9 = sub_1001A788C((uint64_t)v8);
        break;
      case 2LL:
      case 5LL:
        id v7 = sub_1002A4FE0((uint64_t)&OBJC_CLASS___OcelotManager);
        char v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
        uint64_t v9 = (uint64_t)sub_1002A5648((uint64_t)v8);
        break;
      case 3LL:
        id v11 = sub_1001A688C((uint64_t)&OBJC_CLASS___CrossfireManager);
        char v8 = (void *)objc_claimAutoreleasedReturnValue(v11);
        uint64_t v9 = sub_1001A788C((uint64_t)v8);
        break;
      case 7LL:
        id v14 = sub_1002A4FE0((uint64_t)&OBJC_CLASS___OcelotManager);
        uint64_t v15 = objc_claimAutoreleasedReturnValue(v14);
        id v16 = (void *)v15;
        if (v15 && sub_1002A62DC(v15, 0, 0LL, 0.0))
        {
          BOOL v6 = 1LL;
        }

        else
        {
          id v17 = sub_1002A4FE0((uint64_t)&OBJC_CLASS___OcelotManager);
          id v18 = (void *)objc_claimAutoreleasedReturnValue(v17);
          BOOL v6 = sub_1002A507C((uint64_t)v18) > 0;
        }

        return v6;
      case 9LL:
      case 10LL:
      case 11LL:
        return 1LL;
      default:
        return v6;
    }

    uint64_t v12 = v9;

    return v12;
  }

  else
  {
    return 0LL;
  }

void sub_1001967B8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (a1)
  {
    id v7 = *(dispatch_queue_s **)(a1 + 16);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_100196860;
    block[3] = &unk_1003E97D0;
    id v9 = v5;
    id v10 = v6;
    uint64_t v11 = a1;
    dispatch_async(v7, block);
  }
}

void sub_100196860(uint64_t a1)
{
  if ([*(id *)(a1 + 32) isEnabled])
  {
    id v2 = (const char *)[*(id *)(a1 + 32) rawRegisteredName];
    handler[0] = _NSConcreteStackBlock;
    handler[1] = 3221225472LL;
    handler[2] = sub_1001969AC;
    handler[3] = &unk_1003EA090;
    id v9 = (os_log_s *)*(id *)(a1 + 32);
    id v3 = *(id *)(a1 + 40);
    uint64_t v4 = *(void *)(a1 + 48);
    id v10 = v3;
    uint64_t v11 = v4;
    xpc_activity_register(v2, XPC_ACTIVITY_CHECK_IN, handler);

    id v5 = v9;
  }

  else
  {
    uint64_t v6 = ASDLogHandleForCategory(0LL);
    id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      id v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) descriptiveName]);
      *(_DWORD *)__int128 buf = 138543362;
      id v13 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "Skipping register of non-enabled activity: %{public}@",  buf,  0xCu);
    }
  }
}

void sub_1001969AC(uint64_t a1, void *a2)
{
  id v3 = a2;
  xpc_activity_state_t state = xpc_activity_get_state(v3);
  if (state == 2)
  {
    id v24 = *(void **)(a1 + 48);
    id v25 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) descriptiveName]);
    id v26 = sub_100196FB0(v24, v25, 0LL);
    xpc_object_t v5 = (xpc_object_t)objc_claimAutoreleasedReturnValue(v26);

    __int16 v27 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) descriptiveName]);
    sub_1002F8FB8((uint64_t)&OBJC_CLASS___AppDefaultsManager, 0LL, v27);

    uint64_t v28 = ASDLogHandleForCategory(0LL);
    uint64_t v29 = (os_log_s *)objc_claimAutoreleasedReturnValue(v28);
    if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
    {
      if (v5)
      {
        [v5 timeIntervalSince1970];
        uint64_t v31 = (uint64_t)v30;
      }

      else
      {
        uint64_t v31 = 0LL;
      }

      int v32 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) descriptiveName]);
      int v51 = 134218242;
      uint64_t v52 = v31;
      __int16 v53 = 2114;
      uint64_t v54 = (uint64_t)v32;
      _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_DEFAULT,  "Activity fired within deadline (%{time_t}ld), running now: %{public}@",  (uint8_t *)&v51,  0x16u);
    }

    [*(id *)(a1 + 32) run];
    goto LABEL_35;
  }

  if (!state)
  {
    xpc_object_t v5 = xpc_activity_copy_criteria(v3);
    uint64_t v6 = *(void **)(a1 + 32);
    if (v5)
    {
      if ((uint64_t)[v6 deadline] >= 1)
      {
        id v7 = *(void **)(a1 + 48);
        char v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) descriptiveName]);
        id v9 = sub_100196FB0(v7, v8, (uint64_t)[*(id *)(a1 + 32) deadline]);
        id v10 = (void *)objc_claimAutoreleasedReturnValue(v9);

        if (v10) {
          goto LABEL_11;
        }
        id v10 = (void *)objc_claimAutoreleasedReturnValue( +[NSDate dateWithTimeIntervalSinceNow:]( NSDate,  "dateWithTimeIntervalSinceNow:",  (double)(uint64_t)[*(id *)(a1 + 32) deadline]));
        uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) descriptiveName]);
        sub_1002F8FB8((uint64_t)&OBJC_CLASS___AppDefaultsManager, v10, v11);

        uint64_t v12 = ASDLogHandleForCategory(0LL);
        id v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
        if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
        {
          id v14 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) descriptiveName]);
          if (v10)
          {
            [v10 timeIntervalSince1970];
            uint64_t v16 = (uint64_t)v15;
          }

          else
          {
            uint64_t v16 = 0LL;
          }

          int v51 = 138543618;
          uint64_t v52 = (uint64_t)v14;
          __int16 v53 = 2048;
          uint64_t v54 = v16;
          _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_INFO,  "Activity check-in: %{public}@ found deadline was missing, now set for: %{time_t}ld",  (uint8_t *)&v51,  0x16u);
        }

        if (v10)
        {
LABEL_11:
          [v10 timeIntervalSinceNow];
          if (v17 <= 0.0)
          {
            xpc_activity_unregister((const char *)[*(id *)(a1 + 32) rawRegisteredName]);
            __int16 v44 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) descriptiveName]);
            sub_1002F8FB8((uint64_t)&OBJC_CLASS___AppDefaultsManager, 0LL, v44);

            uint64_t v45 = ASDLogHandleForCategory(0LL);
            id v46 = (os_log_s *)objc_claimAutoreleasedReturnValue(v45);
            if (os_log_type_enabled(v46, OS_LOG_TYPE_ERROR))
            {
              unint64_t v50 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) descriptiveName]);
              int v51 = 138543362;
              uint64_t v52 = (uint64_t)v50;
              _os_log_error_impl( (void *)&_mh_execute_header,  v46,  OS_LOG_TYPE_ERROR,  "Activity exceeded its deadline, forcing run now: %{public}@",  (uint8_t *)&v51,  0xCu);
            }

            [*(id *)(a1 + 32) run];
            goto LABEL_34;
          }

          uint64_t v18 = ASDLogHandleForCategory(0LL);
          id v19 = (os_log_s *)objc_claimAutoreleasedReturnValue(v18);
          if (!os_log_type_enabled(v19, OS_LOG_TYPE_INFO)) {
            goto LABEL_33;
          }
          id v20 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) descriptiveName]);
          [v10 timeIntervalSince1970];
          uint64_t v21 = *(void *)(a1 + 40);
          int v51 = 138543874;
          uint64_t v52 = (uint64_t)v20;
          __int16 v53 = 2048;
          uint64_t v54 = (uint64_t)v22;
          __int16 v55 = 2114;
          uint64_t v56 = v21;
          id v23 = "Activity check-in: %{public}@ with deadline: %{time_t}ld for reason: %{public}@";
          goto LABEL_24;
        }
      }

      uint64_t v41 = ASDLogHandleForCategory(0LL);
      id v10 = (void *)objc_claimAutoreleasedReturnValue(v41);
      if (os_log_type_enabled((os_log_t)v10, OS_LOG_TYPE_INFO))
      {
        id v19 = (os_log_s *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) descriptiveName]);
        uint64_t v42 = *(void *)(a1 + 40);
        int v51 = 138543618;
        uint64_t v52 = (uint64_t)v19;
        __int16 v53 = 2114;
        uint64_t v54 = v42;
        objc_super v43 = "Activity check-in: %{public}@ with no deadline for reason: %{public}@";
LABEL_32:
        _os_log_impl((void *)&_mh_execute_header, (os_log_t)v10, OS_LOG_TYPE_INFO, v43, (uint8_t *)&v51, 0x16u);
        goto LABEL_33;
      }
    }

    else
    {
      id v33 = (void *)objc_claimAutoreleasedReturnValue([v6 rawCriteria]);
      xpc_activity_set_criteria(v3, v33);

      uint64_t v34 = (uint64_t)[*(id *)(a1 + 32) deadline];
      id v35 = *(void **)(a1 + 32);
      if (v34 >= 1)
      {
        id v10 = (void *)objc_claimAutoreleasedReturnValue( +[NSDate dateWithTimeIntervalSinceNow:]( NSDate,  "dateWithTimeIntervalSinceNow:",  (double)(uint64_t)[v35 deadline]));
        id v36 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) descriptiveName]);
        sub_1002F8FB8((uint64_t)&OBJC_CLASS___AppDefaultsManager, v10, v36);

        uint64_t v37 = ASDLogHandleForCategory(0LL);
        id v19 = (os_log_s *)objc_claimAutoreleasedReturnValue(v37);
        if (!os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
        {
LABEL_33:

          goto LABEL_34;
        }

        id v20 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) descriptiveName]);
        if (v10)
        {
          [v10 timeIntervalSince1970];
          uint64_t v39 = (uint64_t)v38;
        }

        else
        {
          uint64_t v39 = 0LL;
        }

        uint64_t v40 = *(void *)(a1 + 40);
        int v51 = 138543874;
        uint64_t v52 = (uint64_t)v20;
        __int16 v53 = 2048;
        uint64_t v54 = v39;
        __int16 v55 = 2114;
        uint64_t v56 = v40;
        id v23 = "Activity registered: %{public}@ with deadline: %{time_t}ld for reason: %{public}@";
LABEL_24:
        _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_INFO, v23, (uint8_t *)&v51, 0x20u);

        goto LABEL_33;
      }

      __int16 v47 = (void *)objc_claimAutoreleasedReturnValue([v35 descriptiveName]);
      sub_1002F8FB8((uint64_t)&OBJC_CLASS___AppDefaultsManager, 0LL, v47);

      uint64_t v48 = ASDLogHandleForCategory(0LL);
      id v10 = (void *)objc_claimAutoreleasedReturnValue(v48);
      if (os_log_type_enabled((os_log_t)v10, OS_LOG_TYPE_INFO))
      {
        id v19 = (os_log_s *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) descriptiveName]);
        uint64_t v49 = *(void *)(a1 + 40);
        int v51 = 138543618;
        uint64_t v52 = (uint64_t)v19;
        __int16 v53 = 2114;
        uint64_t v54 = v49;
        objc_super v43 = "Activity registered: %{public}@ with no deadline for reason: %{public}@";
        goto LABEL_32;
      }
    }

id sub_100196FB0(void *a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  if (a1)
  {
    id v6 = sub_1002F8EC0((uint64_t)&OBJC_CLASS___AppDefaultsManager, v5);
    a1 = (void *)objc_claimAutoreleasedReturnValue(v6);
    if (a3 >= 1)
    {
      id v7 = (void *)objc_claimAutoreleasedReturnValue( +[NSDate dateWithTimeIntervalSinceNow:]( &OBJC_CLASS___NSDate,  "dateWithTimeIntervalSinceNow:",  (double)a3));
      char v8 = v7;
      if (a1)
      {
        if (v7)
        {
          [v7 timeIntervalSinceDate:a1];
          if (v9 < 0.0)
          {
            uint64_t v10 = ASDLogHandleForCategory(0LL);
            uint64_t v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
            if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
            {
              int v14 = 138543362;
              id v15 = v5;
              _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] Activity date too far in the future, using the current date",  (uint8_t *)&v14,  0xCu);
            }

            uint64_t v12 = objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
            a1 = (void *)v12;
          }
        }
      }
    }
  }

  return a1;
}

id sub_1001970EC(id result, uint64_t a2, void *a3, void *a4, void *a5)
{
  if (result) {
    return sub_100197118((uint64_t)result, a2, a3, a4, 5LL, 0, a5);
  }
  return result;
}

id sub_100197118(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, char a6, void *a7)
{
  id v13 = a3;
  id v14 = a4;
  id v15 = a7;
  if (!a1)
  {
    id v17 = 0LL;
    goto LABEL_17;
  }

  uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
  if ((a6 & 1) != 0 || [v14 compare:v16] != (id)1)
  {
    id v17 = (id)objc_claimAutoreleasedReturnValue([v16 dateByAddingTimeInterval:(double)a5]);
    uint64_t v23 = ASDLogHandleForCategory(0LL);
    id v19 = (os_log_s *)objc_claimAutoreleasedReturnValue(v23);
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      if (v17)
      {
        [v17 timeIntervalSince1970];
        uint64_t v25 = (uint64_t)v24;
      }

      else
      {
        uint64_t v25 = 0LL;
      }

      int v31 = 138544130;
      id v32 = v13;
      __int16 v33 = 2048;
      uint64_t v34 = v25;
      __int16 v35 = 2048;
      uint64_t v36 = a5;
      __int16 v37 = 2114;
      id v38 = v15;
      double v22 = "[%{public}@] Using new date: %{time_t}ld with interval: %lld reason: %{public}@";
      goto LABEL_12;
    }
  }

  else
  {
    id v17 = v14;
    uint64_t v18 = ASDLogHandleForCategory(0LL);
    id v19 = (os_log_s *)objc_claimAutoreleasedReturnValue(v18);
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      if (v17)
      {
        [v17 timeIntervalSince1970];
        uint64_t v21 = (uint64_t)v20;
      }

      else
      {
        uint64_t v21 = 0LL;
      }

      int v31 = 138544130;
      id v32 = v13;
      __int16 v33 = 2048;
      uint64_t v34 = v21;
      __int16 v35 = 2048;
      uint64_t v36 = a5;
      __int16 v37 = 2114;
      id v38 = v15;
      double v22 = "[%{public}@] Using previously scheduled date: %{time_t}ld with interval: %lld reason: %{public}@";
LABEL_12:
      _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, v22, (uint8_t *)&v31, 0x2Au);
    }
  }

  xpc_object_t v26 = xpc_dictionary_create(0LL, 0LL, 0LL);
  [v17 timeIntervalSinceNow];
  xpc_dictionary_set_int64(v26, XPC_ACTIVITY_DELAY, (uint64_t)v27);
  xpc_dictionary_set_BOOL(v26, XPC_ACTIVITY_REPEATING, 0);
  uint64_t v28 = (const char **)&XPC_ACTIVITY_PRIORITY_MAINTENANCE;
  if (a2 == 6)
  {
    uint64_t v28 = (const char **)&XPC_ACTIVITY_PRIORITY_UTILITY;
    uint64_t v29 = (int64_t *)&XPC_ACTIVITY_INTERVAL_1_MIN;
  }

  else
  {
    uint64_t v29 = (int64_t *)&XPC_ACTIVITY_INTERVAL_5_MIN;
  }

  xpc_dictionary_set_string(v26, XPC_ACTIVITY_PRIORITY, *v28);
  xpc_dictionary_set_int64(v26, XPC_ACTIVITY_GRACE_PERIOD, *v29);
  xpc_dictionary_set_BOOL(v26, XPC_ACTIVITY_REQUIRE_NETWORK_CONNECTIVITY, 1);
  xpc_dictionary_set_BOOL(v26, XPC_ACTIVITY_ALLOW_BATTERY, 1);
  sub_100198148(a1, a2, v13, v26, v15);

LABEL_17:
  return v17;
}

void sub_100197418(uint64_t a1, uint64_t a2, void *a3, char a4, void *a5)
{
  id v9 = a3;
  id v10 = a5;
  if (a1)
  {
    uint64_t v11 = *(dispatch_queue_s **)(a1 + 16);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1001974D8;
    block[3] = &unk_1003EA0B8;
    uint64_t v16 = a2;
    id v13 = v9;
    uint64_t v14 = a1;
    char v17 = a4;
    id v15 = v10;
    dispatch_async(v11, block);
  }
}

void sub_1001974D8(uint64_t a1)
{
  id v2 = sub_1001960DC((uint64_t)&OBJC_CLASS___ActivityManager, *(void *)(a1 + 56));
  id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  uint64_t v4 = ASDLogHandleForCategory(0LL);
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v6 = *(void *)(a1 + 32);
    *(_DWORD *)__int128 buf = 138543618;
    uint64_t v14 = v3;
    __int16 v15 = 2114;
    uint64_t v16 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] Reset with reason: %{public}@",  buf,  0x16u);
  }

  if (!sub_100196674(*(void *)(a1 + 40), *(void *)(a1 + 56)))
  {
    uint64_t v10 = ASDLogHandleForCategory(0LL);
    id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)__int128 buf = 138543362;
      uint64_t v14 = v3;
      _os_log_error_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_ERROR,  "[%{public}@] Skipping reset due to activity not enabled activity",  buf,  0xCu);
    }

    goto LABEL_8;
  }

  sub_100197680(*(void **)(a1 + 40), *(void *)(a1 + 56), *(void **)(a1 + 32), *(unsigned __int8 *)(a1 + 64));
  id v7 = *(void **)(a1 + 48);
  if (v7)
  {
    char v8 = *(dispatch_queue_s **)(*(void *)(a1 + 40) + 8LL);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_100197D1C;
    block[3] = &unk_1003EA158;
    uint64_t v12 = v7;
    dispatch_async(v8, block);
    id v9 = v12;
LABEL_8:
  }
}

void sub_100197680(void *a1, unint64_t a2, void *a3, uint64_t a4)
{
  id v7 = a3;
  if (a1)
  {
    if (a2 != 5)
    {
      if (a2 == 11)
      {
        uint64_t v8 = (uint64_t)a1;
        unint64_t v9 = 11LL;
        char v10 = 0;
        goto LABEL_19;
      }

      if (a2 == 9)
      {
        uint64_t v8 = (uint64_t)a1;
        unint64_t v9 = 9LL;
        char v10 = 1;
LABEL_19:
        sub_100198030(v8, v9, v10, v7);
        goto LABEL_47;
      }

uint64_t sub_100197D1C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_100197D28(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    id v2 = *(dispatch_queue_s **)(a1 + 16);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_100197D80;
    block[3] = &unk_1003E9EA8;
    void block[4] = a2;
    dispatch_async(v2, block);
  }

void sub_100197D80(uint64_t a1)
{
  id v2 = sub_1001960DC((uint64_t)&OBJC_CLASS___ActivityManager, *(void *)(a1 + 32));
  id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  uint64_t v4 = sub_100197E6C((uint64_t)&OBJC_CLASS___ActivityManager, *(void *)(a1 + 32));
  id v5 = objc_claimAutoreleasedReturnValue(v4);
  xpc_activity_unregister((const char *)[v5 UTF8String]);
  uint64_t v6 = ASDLogHandleForCategory(0LL);
  id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    int v8 = 138543362;
    unint64_t v9 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] Unregistered activity",  (uint8_t *)&v8,  0xCu);
  }
}

__CFString *sub_100197E6C(uint64_t a1, uint64_t a2)
{
  else {
    return off_1003EA208[a2 - 1];
  }
}

void sub_100197EAC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (a1)
  {
    id v7 = *(dispatch_queue_s **)(a1 + 16);
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472LL;
    v8[2] = sub_100197F54;
    v8[3] = &unk_1003E9DC0;
    id v9 = v5;
    id v10 = v6;
    dispatch_async(v7, v8);
  }
}

void sub_100197F54(uint64_t a1)
{
  uint64_t v2 = ASDLogHandleForCategory(0LL);
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) descriptiveName]);
    uint64_t v5 = *(void *)(a1 + 40);
    int v6 = 138543618;
    id v7 = v4;
    __int16 v8 = 2114;
    uint64_t v9 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] Unregistered activity for reason: %{public}@",  (uint8_t *)&v6,  0x16u);
  }
}

void sub_100198030(uint64_t a1, unint64_t a2, char a3, void *a4)
{
  id v7 = a4;
  __int16 v8 = sub_1001960DC((uint64_t)&OBJC_CLASS___ActivityManager, a2);
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
  id v10 = sub_100197E6C((uint64_t)&OBJC_CLASS___ActivityManager, a2);
  id v11 = objc_claimAutoreleasedReturnValue(v10);
  CFPropertyListRef v12 = (const char *)[v11 UTF8String];
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472LL;
  v16[2] = sub_1001985EC;
  v16[3] = &unk_1003EA108;
  id v17 = v9;
  id v13 = v7;
  char v22 = a3;
  id v18 = v13;
  uint64_t v19 = a1;
  id v20 = v11;
  unint64_t v21 = a2;
  id v14 = v11;
  id v15 = v9;
  xpc_activity_register(v12, XPC_ACTIVITY_CHECK_IN, v16);
}

void sub_100198148(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  id v9 = a3;
  id v10 = a4;
  id v11 = a5;
  if (a1)
  {
    CFPropertyListRef v12 = sub_100197E6C((uint64_t)&OBJC_CLASS___ActivityManager, a2);
    id v13 = objc_claimAutoreleasedReturnValue(v12);
    id v14 = (const char *)[v13 UTF8String];
    if (v10)
    {
      id v15 = v14;
      v21[0] = _NSConcreteStackBlock;
      v21[1] = 3221225472LL;
      v21[2] = sub_100198960;
      v21[3] = &unk_1003EA130;
      v21[4] = a1;
      id v16 = v13;
      id v22 = v16;
      xpc_activity_register(v15, v10, v21);
      uint64_t v17 = ASDLogHandleForCategory(0LL);
      id v18 = (os_log_s *)objc_claimAutoreleasedReturnValue(v17);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)__int128 buf = 138543874;
        id v24 = v9;
        __int16 v25 = 2114;
        id v26 = v16;
        __int16 v27 = 2114;
        id v28 = v11;
        _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] Registered activity with %{public}@ reason: %{public}@",  buf,  0x20u);
      }
    }

    else
    {
      uint64_t v19 = ASDLogHandleForCategory(0LL);
      id v20 = (os_log_s *)objc_claimAutoreleasedReturnValue(v19);
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)__int128 buf = 138543618;
        id v24 = v9;
        __int16 v25 = 2114;
        id v26 = v13;
        _os_log_error_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_ERROR,  "[%{public}@] No criteria for activity with name: %{public}@",  buf,  0x16u);
      }
    }
  }
}

void sub_100198334(uint64_t a1, void *a2)
{
  id v3 = a2;
  xpc_object_t v4 = xpc_activity_copy_criteria(v3);
  if (v4)
  {
    sub_1001984F0(*(void *)(a1 + 56), v3, @"com.apple.appstored.ArcadeResetPO");
  }

  else
  {
    uint64_t v5 = ASDLogHandleForCategory(0LL);
    int v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v7 = *(void *)(a1 + 32);
      uint64_t v8 = *(void *)(a1 + 40);
      int v12 = 138543618;
      uint64_t v13 = v7;
      __int16 v14 = 2114;
      uint64_t v15 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] Activity not scheduled, scheduling now for reason %{public}@",  (uint8_t *)&v12,  0x16u);
    }

    xpc_object_t v9 = xpc_dictionary_create(0LL, 0LL, 0LL);
    [*(id *)(a1 + 48) timeIntervalSinceNow];
    xpc_dictionary_set_int64(v9, XPC_ACTIVITY_DELAY, (uint64_t)v10);
    xpc_dictionary_set_string(v9, XPC_ACTIVITY_PRIORITY, XPC_ACTIVITY_PRIORITY_UTILITY);
    xpc_dictionary_set_BOOL(v9, XPC_ACTIVITY_REQUIRE_NETWORK_CONNECTIVITY, 0);
    xpc_dictionary_set_BOOL(v9, XPC_ACTIVITY_REQUIRE_INEXPENSIVE_NETWORK_CONNECTIVITY, 0);
    xpc_dictionary_set_BOOL(v9, XPC_ACTIVITY_ALLOW_BATTERY, 1);
    uint64_t v11 = *(void *)(a1 + 56);
    objc_opt_self(&OBJC_CLASS___ActivityManager);
    sub_100198148(v11, 5LL, @"ArcadePayoutReset", v9, *(void *)(a1 + 40));
    id v3 = (_xpc_activity_s *)v9;
  }
}

void sub_1001984F0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  if (a1)
  {
    id v14 = v5;
    int v6 = a2;
    uint64_t v7 = -[KeepAlive initWithName:](objc_alloc(&OBJC_CLASS___KeepAlive), "initWithName:", v14);
    xpc_activity_state_t state = xpc_activity_get_state(v6);

    if (state == 2)
    {
      id v9 = sub_100196040((uint64_t)&OBJC_CLASS___ActivityManager);
      double v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
      id v11 = v14;
      int v12 = v11;
      if (v10)
      {
        uint64_t v13 = (dispatch_queue_s *)v10[2];
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472LL;
        block[2] = sub_10019611C;
        block[3] = &unk_1003E9DC0;
        void block[4] = v10;
        id v16 = v11;
        dispatch_async(v13, block);
      }
    }

    id v5 = v14;
  }
}

void sub_1001985EC(uint64_t a1, void *a2)
{
  id v3 = a2;
  xpc_object_t v4 = xpc_activity_copy_criteria(v3);
  uint64_t v5 = ASDLogHandleForCategory(0LL);
  int v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
  BOOL v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);
  if (v4)
  {
    if (v7)
    {
      uint64_t v8 = *(void *)(a1 + 32);
      int v12 = 138543362;
      uint64_t v13 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] Activity already scheduled",  (uint8_t *)&v12,  0xCu);
    }

    sub_1001984F0(*(void *)(a1 + 48), v3, *(void *)(a1 + 56));
  }

  else
  {
    if (v7)
    {
      uint64_t v9 = *(void *)(a1 + 32);
      uint64_t v10 = *(void *)(a1 + 40);
      int v12 = 138543618;
      uint64_t v13 = v9;
      __int16 v14 = 2114;
      uint64_t v15 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] There is no updates activity scheduled, scheduling now for reason %{public}@",  (uint8_t *)&v12,  0x16u);
    }

    xpc_object_t v11 = xpc_dictionary_create(0LL, 0LL, 0LL);
    xpc_dictionary_set_string(v11, XPC_ACTIVITY_PRIORITY, XPC_ACTIVITY_PRIORITY_UTILITY);
    xpc_dictionary_set_int64(v11, XPC_ACTIVITY_INTERVAL, XPC_ACTIVITY_INTERVAL_1_DAY);
    xpc_dictionary_set_int64(v11, XPC_ACTIVITY_GRACE_PERIOD, XPC_ACTIVITY_INTERVAL_8_HOURS);
    xpc_dictionary_set_BOOL(v11, XPC_ACTIVITY_REPEATING, 1);
    xpc_dictionary_set_BOOL(v11, XPC_ACTIVITY_REQUIRE_NETWORK_CONNECTIVITY, *(_BYTE *)(a1 + 72));
    if (*(_BYTE *)(a1 + 72)) {
      xpc_dictionary_set_BOOL(v11, XPC_ACTIVITY_REQUIRE_INEXPENSIVE_NETWORK_CONNECTIVITY, 0);
    }
    xpc_dictionary_set_int64(v11, XPC_ACTIVITY_EXPECTED_DURATION, XPC_ACTIVITY_INTERVAL_1_HOUR);
    xpc_dictionary_set_BOOL(v11, XPC_ACTIVITY_REQUIRE_SCREEN_SLEEP, 1);
    xpc_dictionary_set_BOOL(v11, XPC_ACTIVITY_ALLOW_BATTERY, 1);
    sub_100198148(*(void *)(a1 + 48), *(void *)(a1 + 64), *(void *)(a1 + 32), v11, *(void *)(a1 + 40));
  }
}

void sub_10019883C(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  uint64_t v7 = ASDLogHandleForCategory(0LL, v6);
  uint64_t v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
  uint64_t v9 = v8;
  if (v5)
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      uint64_t v10 = *(void *)(a1 + 32);
      int v12 = 138543618;
      uint64_t v13 = v10;
      __int16 v14 = 2114;
      id v15 = v5;
      _os_log_error_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_ERROR,  "[%{public}@] Completed activity with error: %{public}@",  (uint8_t *)&v12,  0x16u);
    }
  }

  else if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v11 = *(void *)(a1 + 32);
    int v12 = 138543618;
    uint64_t v13 = v11;
    __int16 v14 = 1024;
    LODWORD(v15) = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] Completed activity with result: %d",  (uint8_t *)&v12,  0x12u);
  }
}

void sub_100198960(uint64_t a1, void *a2)
{
}

id sub_10019899C(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100198A14;
  block[3] = &unk_1003E9EA8;
  void block[4] = objc_opt_self(a1);
  if (qword_100462138 != -1) {
    dispatch_once(&qword_100462138, block);
  }
  return (id)qword_100462130;
}

void sub_100198A14(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  uint64_t v2 = (void *)qword_100462130;
  qword_100462130 = (uint64_t)v1;
}

void sub_100198B1C(uint64_t a1)
{
  uint64_t v2 = (const char *)kNSURLSessionLaunchOnDemandNotificationName;
  handler = _NSConcreteStackBlock;
  uint64_t v37 = 3221225472LL;
  id v38 = sub_100198F14;
  id v39 = &unk_1003EA270;
  id v40 = *(id *)(a1 + 32);
  xpc_set_event_stream_handler(v2, &_dispatch_main_q, &handler);
  id v3 = sub_1002EB2A0((uint64_t)&OBJC_CLASS___Device);
  xpc_object_t v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  unsigned __int8 v5 = [v4 isHRNMode];

  if ((v5 & 1) == 0)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      uint64_t v7 = @"com.apple.appstored.FavoritesApps";
      uint64_t v8 = &stru_1003EA348;
      uint64_t v9 = ASDLogHandleForCategory(14LL);
      uint64_t v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        int v12 = (void *)objc_opt_class(v6, v11);
        *(_DWORD *)__int128 buf = 138412546;
        *(void *)&uint8_t buf[4] = v12;
        *(_WORD *)&buf[12] = 2114;
        *(void *)&buf[14] = @"com.apple.appstored.FavoritesApps";
        id v13 = v12;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "[%@] Adding wakeup observer for activity: %{public}@",  buf,  0x16u);
      }

      id v14 = [&stru_1003EA348 copy];
      os_unfair_lock_lock((os_unfair_lock_t)(v6 + 24));
      uint64_t v15 = objc_claimAutoreleasedReturnValue([*(id *)(v6 + 8) objectForKey:@"com.apple.appstored.FavoritesApps"]);
      if (v15)
      {
        id v16 = (NSMutableSet *)v15;
        id v17 = objc_retainBlock(v14);
        -[NSMutableSet addObject:](v16, "addObject:", v17);
      }

      else
      {
        id v18 = objc_alloc(&OBJC_CLASS___NSMutableSet);
        id v19 = objc_retainBlock(v14);
        id v16 = -[NSMutableSet initWithObjects:](v18, "initWithObjects:", v19, 0LL, handler, v37, v38, v39);

        [*(id *)(v6 + 8) setObject:v16 forKey:@"com.apple.appstored.FavoritesApps"];
      }

      os_unfair_lock_unlock((os_unfair_lock_t)(v6 + 24));
      id v20 = objc_retainBlock(v14);

      id v21 = sub_1001F19C8((uint64_t)&OBJC_CLASS___BackgroundTaskRequest, @"com.apple.appstored.FavoritesApps");
      id v22 = (xpc_object_t *)(id)objc_claimAutoreleasedReturnValue(v21);
      id v23 = @"Startup";
      if (!v22 || (id v24 = v22[2]) == 0LL)
      {
        id v25 = 0LL;
        goto LABEL_18;
      }

      id v25 = v24;
      id v26 = (const char *)[v25 UTF8String];
      xpc_object_t v27 = xpc_copy(v22[1]);
      if (v27)
      {
        *(void *)__int128 buf = _NSConcreteStackBlock;
        *(void *)&buf[8] = 3221225472LL;
        *(void *)&uint8_t buf[16] = sub_1001993D8;
        uint64_t v48 = &unk_1003EA308;
        uint64_t v49 = v26;
        xpc_activity_register(v26, v27, buf);
        uint64_t v28 = ASDLogHandleForCategory(14LL);
        uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue(v28);
        if (!os_log_type_enabled((os_log_t)v29, OS_LOG_TYPE_DEFAULT))
        {
LABEL_15:

LABEL_18:
          goto LABEL_19;
        }

        int v31 = (void *)objc_opt_class(v6, v30);
        *(_DWORD *)id v41 = 138412802;
        id v42 = v31;
        __int16 v43 = 2114;
        id v44 = v25;
        __int16 v45 = 2114;
        uint64_t v46 = @"Startup";
        id v32 = v31;
        _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v29,  OS_LOG_TYPE_DEFAULT,  "[%@] Added background task: %{public}@ reason: %{public}@",  v41,  0x20u);
      }

      else
      {
        uint64_t v33 = ASDLogHandleForCategory(14LL);
        uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue(v33);
        if (!os_log_type_enabled((os_log_t)v29, OS_LOG_TYPE_ERROR)) {
          goto LABEL_15;
        }
        id v35 = (void *)objc_opt_class(v6, v34);
        *(_DWORD *)__int128 buf = 138412546;
        *(void *)&uint8_t buf[4] = v35;
        *(_WORD *)&buf[12] = 2114;
        *(void *)&buf[14] = v25;
        id v32 = v35;
        _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)v29,  OS_LOG_TYPE_ERROR,  "[%@] No criteria for background task: %{public}@",  buf,  0x16u);
      }

      goto LABEL_15;
    }
  }

void sub_100198F14(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v5 = ASDLogHandleForCategory(9LL, v4);
  uint64_t v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    uint64_t v8 = (void *)objc_opt_class(*(void *)(a1 + 32), v7);
    int v10 = 138543618;
    uint64_t v11 = v8;
    __int16 v12 = 2114;
    id v13 = v3;
    id v9 = v8;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_INFO,  "[%{public}@] Launched by nsurlsessiond: %{public}@",  (uint8_t *)&v10,  0x16u);
  }
}

void sub_100198FEC(uint64_t a1)
{
  uint64_t v2 = ASDLogHandleForCategory(9LL);
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = (void *)objc_opt_class(*(void *)(a1 + 32), v4);
    uint64_t v6 = *(void *)(a1 + 40);
    int v7 = *(unsigned __int8 *)(a1 + 48);
    *(_DWORD *)__int128 buf = 138543874;
    uint64_t v30 = v5;
    __int16 v31 = 2080;
    uint64_t v32 = v6;
    __int16 v33 = 1024;
    int v34 = v7;
    id v8 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "[%{public}@]: Handling wakeup for activity: %s status: %d",  buf,  0x1Cu);
  }

  id v9 = -[NSString initWithUTF8String:](objc_alloc(&OBJC_CLASS___NSString), "initWithUTF8String:", *(void *)(a1 + 40));
  int v10 = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
  os_unfair_lock_lock((os_unfair_lock_t)(*(void *)(a1 + 32) + 24LL));
  uint64_t v11 = *(void **)(*(void *)(a1 + 32) + 8LL);
  v26[0] = _NSConcreteStackBlock;
  v26[1] = 3221225472LL;
  void v26[2] = sub_100199290;
  v26[3] = &unk_1003EA298;
  __int16 v12 = v9;
  xpc_object_t v27 = v12;
  id v13 = v10;
  uint64_t v28 = v13;
  [v11 enumerateKeysAndObjectsUsingBlock:v26];
  os_unfair_lock_unlock((os_unfair_lock_t)(*(void *)(a1 + 32) + 24LL));
  if (-[NSMutableSet count](v13, "count"))
  {
    dispatch_queue_attr_t v14 = dispatch_queue_attr_make_with_autorelease_frequency(0LL, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
    uint64_t v15 = (dispatch_queue_attr_s *)objc_claimAutoreleasedReturnValue(v14);
    id v16 = dispatch_queue_create("com.apple.appsstored.Daemon.observers", v15);

    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1001992E0;
    block[3] = &unk_1003EA2C0;
    id v23 = v13;
    id v24 = v12;
    char v25 = *(_BYTE *)(a1 + 48);
    dispatch_async(v16, block);
  }

  else
  {
    uint64_t v17 = ASDLogHandleForCategory(9LL);
    id v16 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(v17);
    if (os_log_type_enabled((os_log_t)v16, OS_LOG_TYPE_DEFAULT))
    {
      id v19 = (void *)objc_opt_class(*(void *)(a1 + 32), v18);
      uint64_t v20 = *(void *)(a1 + 40);
      *(_DWORD *)__int128 buf = 138543618;
      uint64_t v30 = v19;
      __int16 v31 = 2080;
      uint64_t v32 = v20;
      id v21 = v19;
      _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v16,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] Could not find any wakeup observers for activity: %s",  buf,  0x16u);
    }
  }
}

void sub_100199290(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
}

void sub_1001992E0(uint64_t a1)
{
  __int128 v6 = 0u;
  __int128 v7 = 0u;
  __int128 v8 = 0u;
  __int128 v9 = 0u;
  id v1 = *(id *)(a1 + 32);
  id v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      id v5 = 0LL;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        (*(void (**)(void))(*(void *)(*((void *)&v6 + 1) + 8LL * (void)v5) + 16LL))(*(void *)(*((void *)&v6 + 1) + 8LL * (void)v5));
        id v5 = (char *)v5 + 1;
      }

      while (v3 != v5);
      id v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }

    while (v3);
  }
}

void sub_1001993D8(uint64_t a1, void *a2)
{
  id v3 = a2;
  int v10 = -[KeepAlive initWithName:](objc_alloc(&OBJC_CLASS___KeepAlive), "initWithName:", @"Add BackgroundTask");
  xpc_activity_state_t state = xpc_activity_get_state(v3);

  if (state == 2)
  {
    id v5 = sub_10019899C((uint64_t)&OBJC_CLASS___LegacyActivityManager);
    uint64_t v6 = objc_claimAutoreleasedReturnValue(v5);
    __int128 v7 = (void *)v6;
    if (v6)
    {
      uint64_t v8 = *(void *)(a1 + 32);
      __int128 v9 = *(dispatch_queue_s **)(v6 + 16);
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_100198FEC;
      block[3] = &unk_1003EA2E8;
      void block[4] = v7;
      void block[5] = v8;
      char v12 = 1;
      dispatch_async(v9, block);
    }
  }
}

void sub_1001994AC(id a1, NSString *a2, BOOL a3)
{
  uint64_t v3 = ASDLogHandleForCategory(16LL);
  uint64_t v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v8 = 138543618;
    id v9 = (id)objc_opt_class(&OBJC_CLASS___LegacyActivityManager, v5);
    __int16 v10 = 2114;
    uint64_t v11 = @"com.apple.appstored.FavoritesApps";
    id v6 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] %{public}@ xpc activity event",  (uint8_t *)&v8,  0x16u);
  }

  __int128 v7 = objc_opt_new(&OBJC_CLASS___AppUsageManager);
  sub_100221E34((uint64_t)v7);
}

id sub_1001995C0(uint64_t a1)
{
  if (qword_100462140 != -1) {
    dispatch_once(&qword_100462140, &stru_1003EA368);
  }
  return (id)qword_100462148;
}

void sub_100199604(id a1)
{
  id v1 = objc_alloc_init(&OBJC_CLASS___PurchaseManager);
  id v2 = (void *)qword_100462148;
  qword_100462148 = (uint64_t)v1;
}

void sub_1001997AC(uint64_t a1)
{
}

void sub_1001997C8(uint64_t a1, void *a2, unint64_t a3, void *a4, void *a5, void *a6)
{
  id v11 = a6;
  if (a1)
  {
    id v12 = a5;
    id v13 = a4;
    dispatch_queue_attr_t v14 = objc_opt_new(&OBJC_CLASS____TtC9appstored19AppDownloadDoneTask);
    uint64_t v15 = *(void *)(a1 + 24);
    if (v15) {
      [*(id *)(v15 + 8) addOperation:v14];
    }
    id v16 = sub_100193C54((id *)objc_alloc(&OBJC_CLASS___CheckStoreQueueTask), a2, a3, v13, v12);

    [v16 addDependency:v14];
    if (v11)
    {
      v18[0] = _NSConcreteStackBlock;
      v18[1] = 3221225472LL;
      v18[2] = sub_10019A908;
      v18[3] = &unk_1003EA3B8;
      id v19 = v11;
      uint64_t v20 = v16;
      [v16 setCompletionBlock:v18];
    }

    uint64_t v17 = *(void *)(a1 + 24);
    if (v17) {
      [*(id *)(v17 + 8) addOperation:v16];
    }
  }
}

uint64_t sub_1001998FC(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = v3;
  if (a1)
  {
    uint64_t v10 = 0LL;
    id v11 = &v10;
    uint64_t v12 = 0x2020000000LL;
    char v13 = 0;
    uint64_t v5 = *(dispatch_queue_s **)(a1 + 16);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1001999C0;
    block[3] = &unk_1003E97A8;
    void block[4] = a1;
    id v8 = v3;
    id v9 = &v10;
    dispatch_sync(v5, block);
    a1 = *((_BYTE *)v11 + 24) != 0;

    _Block_object_dispose(&v10, 8);
  }

  return a1;
}

void sub_1001999C0(void *a1)
{
  __int128 v21 = 0u;
  __int128 v22 = 0u;
  __int128 v23 = 0u;
  __int128 v24 = 0u;
  id v2 = *(id *)(a1[4] + 8LL);
  id v3 = [v2 countByEnumeratingWithState:&v21 objects:v26 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v22;
    uint64_t v16 = *(void *)v22;
    do
    {
      for (uint64_t i = 0LL; i != v4; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v22 != v5) {
          objc_enumerationMutation(v2);
        }
        __int128 v7 = *(id **)(*((void *)&v21 + 1) + 8LL * (void)i);
        __int128 v17 = 0u;
        __int128 v18 = 0u;
        __int128 v19 = 0u;
        __int128 v20 = 0u;
        id v8 = sub_10020DDEC(v7);
        id v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
        id v10 = [v9 countByEnumeratingWithState:&v17 objects:v25 count:16];
        if (v10)
        {
          id v11 = v10;
          uint64_t v12 = *(void *)v18;
          while (2)
          {
            for (j = 0LL; j != v11; j = (char *)j + 1)
            {
              if (*(void *)v18 != v12) {
                objc_enumerationMutation(v9);
              }
              unsigned int v15 = [v14 isEqualToString:a1[5]];

              if (v15)
              {
                *(_BYTE *)(*(void *)(a1[6] + 8LL) + 24LL) = 1;

                goto LABEL_18;
              }
            }

            id v11 = [v9 countByEnumeratingWithState:&v17 objects:v25 count:16];
            if (v11) {
              continue;
            }
            break;
          }
        }

        uint64_t v5 = v16;
      }

      id v4 = [v2 countByEnumeratingWithState:&v21 objects:v26 count:16];
    }

    while (v4);
  }

void sub_100199B84(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (a1)
  {
    __int128 v7 = *(dispatch_queue_s **)(a1 + 16);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_100199C30;
    block[3] = &unk_1003EA390;
    void block[4] = a1;
    id v9 = v5;
    id v10 = v6;
    dispatch_async(v7, block);
  }
}

void sub_100199C30(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = *(void **)(a1 + 40);
  id v3 = *(id *)(a1 + 48);
  if (v1)
  {
    id v4 = v2;
    id v5 = -[KeepAlive initWithName:]( objc_alloc(&OBJC_CLASS___KeepAlive),  "initWithName:",  @"com.apple.appstored.PurchaseManager");
    id v6 = [v4 copy];

    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472LL;
    void v7[2] = sub_10019B9BC;
    v7[3] = &unk_1003EA480;
    void v7[4] = v1;
    id v8 = v3;
    sub_10019B5F8(v1, v6, v7);
  }
}

void sub_100199D08(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  if (a1)
  {
    id v10 = *(dispatch_queue_s **)(a1 + 16);
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472LL;
    void v11[2] = sub_100199DDC;
    v11[3] = &unk_1003EA5C0;
    void v11[4] = a1;
    id v12 = v7;
    id v13 = v8;
    id v14 = v9;
    dispatch_async(v10, v11);
  }
}

void sub_100199DDC(uint64_t a1)
{
}

void sub_100199DF0(uint64_t a1, void *a2, char a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a4;
  id v11 = a5;
  if (a1)
  {
    __int128 v24 = -[KeepAlive initWithName:]( objc_alloc(&OBJC_CLASS___KeepAlive),  "initWithName:",  @"com.apple.appstored.PurchaseManager");
    id v12 = dispatch_group_create();
    id v13 = sub_10020DB24((id *)objc_alloc(&OBJC_CLASS___PurchaseBatch), v9, v10);
    id v14 = v13;
    if (v13) {
      *((_BYTE *)v13 + 24) = a3;
    }
    newValue[0] = _NSConcreteStackBlock;
    newValue[1] = 3221225472LL;
    newValue[2] = sub_10019C288;
    newValue[3] = &unk_1003EA3E0;
    id v25 = v11;
    id v37 = v11;
    if (v14) {
      objc_setProperty_atomic_copy(v14, v15, newValue, 32LL);
    }
    [*(id *)(a1 + 8) addObject:v14];
    __int128 v34 = 0u;
    __int128 v35 = 0u;
    __int128 v32 = 0u;
    __int128 v33 = 0u;
    id v26 = v9;
    id v16 = v9;
    id v17 = [v16 countByEnumeratingWithState:&v32 objects:v38 count:16];
    if (v17)
    {
      id v18 = v17;
      uint64_t v19 = *(void *)v33;
      do
      {
        for (uint64_t i = 0LL; i != v18; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v33 != v19) {
            objc_enumerationMutation(v16);
          }
          __int128 v21 = *(void **)(*((void *)&v32 + 1) + 8LL * (void)i);
          dispatch_group_enter(v12);
          v29[0] = _NSConcreteStackBlock;
          v29[1] = 3221225472LL;
          v29[2] = sub_10019C298;
          v29[3] = &unk_1003EA548;
          v29[4] = a1;
          uint64_t v30 = v14;
          __int16 v31 = v12;
          sub_10019B5F8(a1, v21, v29);
        }

        id v18 = [v16 countByEnumeratingWithState:&v32 objects:v38 count:16];
      }

      while (v18);
    }

    __int128 v22 = *(dispatch_queue_s **)(a1 + 16);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_10019C3B4;
    block[3] = &unk_1003E9DC0;
    void block[4] = a1;
    uint64_t v28 = v14;
    __int128 v23 = v14;
    dispatch_group_notify(v12, v22, block);

    id v9 = v26;
    id v11 = v25;
  }
}

void sub_10019A160(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) count];
  id v3 = *(void **)(a1 + 32);
  id v4 = *(void **)(a1 + 40);
  if (v2 == (id)1)
  {
    id v61 = (id)objc_claimAutoreleasedReturnValue([v3 firstObject]);
    id v5 = *(void **)(a1 + 56);
    id v6 = *(id *)(a1 + 48);
    id v7 = v5;
    if (v4)
    {
      id v8 = v61;
      id v9 = -[KeepAlive initWithName:]( objc_alloc(&OBJC_CLASS___KeepAlive),  "initWithName:",  @"com.apple.appstored.PurchaseManager");
      id v10 = sub_1001DF7D0(v8, v6);
      id v11 = (void *)objc_claimAutoreleasedReturnValue(v10);

      uint64_t v12 = ASDLogHandleForCategory(25LL);
      id v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        id v14 = (void *)objc_claimAutoreleasedReturnValue([v11 logKey]);
        unsigned int v15 = (void *)objc_claimAutoreleasedReturnValue([v6 processInfo]);
        id v16 = (void *)objc_claimAutoreleasedReturnValue([v15 bundleIdentifier]);
        *(_DWORD *)__int128 buf = 138543618;
        *(void *)&uint8_t buf[4] = v14;
        *(_WORD *)&buf[12] = 2114;
        *(void *)&buf[14] = v16;
        _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] Starting purchase for client: %{public}@",  buf,  0x16u);
      }

      uint64_t v17 = ASDLogHandleForCategory(25LL);
      id v18 = (os_log_s *)objc_claimAutoreleasedReturnValue(v17);
      uint64_t v19 = (char *)[v11 signpostID];
      if ((unint64_t)(v19 - 1) <= 0xFFFFFFFFFFFFFFFDLL)
      {
        os_signpost_id_t v20 = (os_signpost_id_t)v19;
        if (os_signpost_enabled(v18))
        {
          __int128 v21 = (void *)objc_claimAutoreleasedReturnValue([v11 logKey]);
          *(_DWORD *)__int128 buf = 138543362;
          *(void *)&uint8_t buf[4] = v21;
          _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v18,  OS_SIGNPOST_INTERVAL_BEGIN,  v20,  "Purchase",  " uuid=%{public, signpost.description:attribute}@ ",  buf,  0xCu);
        }
      }

      __int128 v22 = (void *)objc_claimAutoreleasedReturnValue([v11 itemID]);
      if (v22)
      {
        *(void *)__int128 buf = _NSConcreteStackBlock;
        *(void *)&buf[8] = 3221225472LL;
        *(void *)&uint8_t buf[16] = sub_10019BEA0;
        unint64_t v75 = &unk_1003EA4F8;
        id v76 = v4;
        id v77 = v6;
        id v78 = v7;
        sub_10019B5F8((uint64_t)v4, v11, buf);

        id v23 = v77;
      }

      else
      {
        uint64_t v54 = ASDLogHandleForCategory(25LL);
        uint64_t v55 = (os_log_s *)objc_claimAutoreleasedReturnValue(v54);
        if (os_log_type_enabled(v55, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)__int128 buf = 138543362;
          *(void *)&uint8_t buf[4] = v6;
          _os_log_impl( (void *)&_mh_execute_header,  v55,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] No item identifier for purchase. Processing as purchase only.",  buf,  0xCu);
        }

        [v11 setPurchaseOnly:1];
        uint64_t v56 = (dispatch_queue_s *)v4[2];
        *(void *)__int128 buf = _NSConcreteStackBlock;
        *(void *)&buf[8] = 3221225472LL;
        *(void *)&uint8_t buf[16] = sub_10019BCE8;
        unint64_t v75 = &unk_1003EA5E8;
        id v76 = v11;
        id v77 = v6;
        id v57 = v7;
        id v78 = v4;
        id v79 = v57;
        dispatch_async(v56, buf);

        id v23 = v76;
      }
    }
  }

  else
  {
    id v25 = *(void **)(a1 + 48);
    __int128 v24 = *(void **)(a1 + 56);
    id v26 = v3;
    id v27 = v25;
    id v28 = v24;
    uint64_t v29 = v28;
    if (v4)
    {
      uint64_t v59 = (void (**)(void, void, void))v28;
      uint64_t v30 = -[KeepAlive initWithName:]( objc_alloc(&OBJC_CLASS___KeepAlive),  "initWithName:",  @"com.apple.appstored.PurchaseManager");
      v68[0] = _NSConcreteStackBlock;
      v68[1] = 3221225472LL;
      v68[2] = sub_10019C278;
      v68[3] = &unk_1003EA520;
      id v60 = v27;
      id v58 = v27;
      id v69 = v58;
      id v31 = sub_1002B86C0(v26, v68);
      __int128 v32 = (void *)objc_claimAutoreleasedReturnValue(v31);
      uint64_t v33 = ASDLogHandleForCategory(25LL);
      __int128 v34 = (os_log_s *)objc_claimAutoreleasedReturnValue(v33);
      if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v36 = (void *)objc_opt_class(v4, v35);
        id v62 = v36;
        id v37 = [v26 count];
        id v38 = (void *)objc_claimAutoreleasedReturnValue([v58 processInfo]);
        id v39 = (void *)objc_claimAutoreleasedReturnValue([v38 bundleIdentifier]);
        *(_DWORD *)__int128 buf = 138543874;
        *(void *)&uint8_t buf[4] = v36;
        *(_WORD *)&buf[12] = 2048;
        *(void *)&buf[14] = v37;
        *(_WORD *)&buf[22] = 2114;
        unint64_t v75 = v39;
        _os_log_impl( (void *)&_mh_execute_header,  v34,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] Starting %ld purchase(s) for client: %{public}@",  buf,  0x20u);
      }

      id v63 = v26;

      __int128 v66 = 0u;
      __int128 v67 = 0u;
      __int128 v64 = 0u;
      __int128 v65 = 0u;
      id v40 = v32;
      id v41 = [v40 countByEnumeratingWithState:&v64 objects:buf count:16];
      if (v41)
      {
        id v42 = v41;
        uint64_t v43 = *(void *)v65;
        while (2)
        {
          for (uint64_t i = 0LL; i != v42; uint64_t i = (char *)i + 1)
          {
            if (*(void *)v65 != v43) {
              objc_enumerationMutation(v40);
            }
            __int16 v45 = *(void **)(*((void *)&v64 + 1) + 8LL * (void)i);
            uint64_t v46 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v45, "clientInfo", v58));
            uint64_t v47 = (void *)objc_claimAutoreleasedReturnValue([v46 bundleIdentifier]);

            if (!v47)
            {
              uint64_t v48 = (void *)objc_claimAutoreleasedReturnValue([v45 clientInfo]);
              [v48 setBundleIdentifier:&stru_1003F3E40];
            }

            uint64_t v49 = (void *)objc_claimAutoreleasedReturnValue([v45 itemID]);

            if (!v49)
            {
              uint64_t v50 = ASDErrorWithDescription(ASDErrorDomain, 740LL, @"No item identifier was provided");
              uint64_t v51 = (void *)objc_claimAutoreleasedReturnValue(v50);
              uint64_t v52 = ASDLogHandleForCategory(25LL);
              double v53 = (os_log_s *)objc_claimAutoreleasedReturnValue(v52);
              if (os_log_type_enabled(v53, OS_LOG_TYPE_ERROR))
              {
                *(_DWORD *)unint64_t v70 = 138543618;
                id v71 = v58;
                __int16 v72 = 2114;
                unint64_t v73 = v51;
                _os_log_error_impl( (void *)&_mh_execute_header,  v53,  OS_LOG_TYPE_ERROR,  "[%{public}@] Failed to process purchase: %{public}@",  v70,  0x16u);
              }

              uint64_t v29 = v59;
              ((void (**)(void, void, void *))v59)[2](v59, 0LL, v51);

              goto LABEL_27;
            }
          }

          id v42 = [v40 countByEnumeratingWithState:&v64 objects:buf count:16];
          if (v42) {
            continue;
          }
          break;
        }
      }

      uint64_t v29 = v59;
      sub_100199DF0((uint64_t)v4, v40, 1, v58, v59);
LABEL_27:
      id v27 = v60;
      id v26 = v63;
    }
  }

void sub_10019A878(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = v5;
  if (a1)
  {
    id v8 = v5;
    if (a2 == 2)
    {
      uint64_t v7 = 0LL;
    }

    else
    {
      if (a2 != 11)
      {
        (*((void (**)(id, void))v5 + 2))(v5, 0LL);
        goto LABEL_8;
      }

      uint64_t v7 = 1LL;
    }

    sub_1001997C8(a1, (void *)v7, 0LL, 0LL, 0LL, v5);
LABEL_8:
    id v6 = v8;
  }
}

void sub_10019A908(uint64_t a1, const char *a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  id Property = *(id *)(a1 + 40);
  if (Property) {
    id Property = objc_getProperty(Property, a2, 32LL, 1);
  }
  id v4 = Property;
  (*(void (**)(uint64_t, id))(v3 + 16))(v3, v4);
}

void sub_10019A95C(uint64_t a1, void *a2, void *a3, void *a4)
{
  if (a1)
  {
    id v7 = a4;
    id v8 = a3;
    id v9 = a2;
    id v11 = sub_1002B0224((id *)objc_alloc(&OBJC_CLASS___FailPurchaseTask), v8, v9);

    [v11 setCompletionBlock:v7];
    uint64_t v10 = *(void *)(a1 + 24);
    if (v10) {
      [*(id *)(v10 + 8) addOperation:v11];
    }
  }

void sub_10019AA08(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = v6;
  uint64_t v105 = a1;
  if (!a1) {
    goto LABEL_100;
  }
  if (!v6)
  {
    __int128 v111 = 0u;
    __int128 v112 = 0u;
    __int128 v109 = 0u;
    __int128 v110 = 0u;
    id v18 = sub_10020DDEC(v5);
    uint64_t v17 = (dispatch_group_s *)objc_claimAutoreleasedReturnValue(v18);
    id v19 = -[dispatch_group_s countByEnumeratingWithState:objects:count:]( v17,  "countByEnumeratingWithState:objects:count:",  &v109,  v128,  16LL);
    if (!v19) {
      goto LABEL_99;
    }
    uint64_t v104 = *(void *)v110;
    id v20 = v19;
    unint64_t v101 = v17;
    uint64_t v102 = v5;
    while (1)
    {
      __int128 v21 = 0LL;
      id v103 = v20;
      do
      {
        if (*(void *)v110 != v104) {
          objc_enumerationMutation(v17);
        }
        __int128 v22 = *(void **)(*((void *)&v109 + 1) + 8LL * (void)v21);
        id v23 = (id)objc_claimAutoreleasedReturnValue([v22 itemResponse]);
        unint64_t v106 = v5;
        id v24 = v22;
        unint64_t v107 = v24;
        unint64_t v108 = (void *)objc_claimAutoreleasedReturnValue([v24 logKey]);
        if (!v23)
        {
LABEL_25:
          if ([v24 discoveredUpdate])
          {
            id v33 = sub_100237D18((uint64_t)&OBJC_CLASS___AppUpdatesDatabaseStore);
            __int128 v34 = (void *)objc_claimAutoreleasedReturnValue(v33);
            sub_100238CE4((BOOL)v34, 4LL, v24);
          }

          if (([v24 isMachineBased] & 1) == 0
            && ([v24 isDiscretionary] & 1) == 0)
          {
            uint64_t v35 = (void *)objc_claimAutoreleasedReturnValue([v24 account]);
            uint64_t v36 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v35, "ams_DSID"));

            if (v23) {
              id Property = objc_getProperty(v23, v37, 56LL, 1);
            }
            else {
              id Property = 0LL;
            }
            id v39 = Property;
            if ([v39 count])
            {

              goto LABEL_34;
            }

            id v41 = [v107 purchaseType];

            if (!v41)
            {
              id v56 = sub_1001C66BC((uint64_t)&OBJC_CLASS___PurchaseHistoryManager);
              id v57 = (void *)objc_claimAutoreleasedReturnValue(v56);
              id v58 = [v36 longValue];
              *(void *)__int128 buf = _NSConcreteStackBlock;
              *(void *)&buf[8] = 3221225472LL;
              *(void *)&uint8_t buf[16] = sub_10019C530;
              unint64_t v135 = &unk_1003E9CA8;
              unint64_t v136 = v108;
              sub_1001C7C58((uint64_t)v57, (uint64_t)v58, 6LL, 0LL, buf);

              uint64_t v43 = v136;
              goto LABEL_56;
            }

LABEL_56:
              id v20 = v103;
              id v24 = v107;
            }
          }

          if ([v24 purchaseOnly])
          {
            uint64_t v59 = ASDLogHandleForCategory(25LL);
            id v60 = (os_log_s *)objc_claimAutoreleasedReturnValue(v59);
            if (os_log_type_enabled(v60, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)unint64_t v130 = 138412290;
              uint64_t v131 = v108;
              _os_log_impl((void *)&_mh_execute_header, v60, OS_LOG_TYPE_DEFAULT, "[%@] Nothing to install", v130, 0xCu);
            }

            sub_10020E6CC((uint64_t)v106, &__NSArray0__struct, v24);
            goto LABEL_82;
          }

          id v61 = (id)objc_claimAutoreleasedReturnValue([v24 itemResponse]);
          id v63 = v61;
          if (v61) {
            id v61 = objc_getProperty(v61, v62, 56LL, 1);
          }
          id v64 = v61;
          id v65 = [v64 count];

          if (v65 == (id)1)
          {
            uint64_t v66 = ASDLogHandleForCategory(25LL);
            __int128 v67 = (os_log_s *)objc_claimAutoreleasedReturnValue(v66);
            if (os_log_type_enabled(v67, OS_LOG_TYPE_DEFAULT))
            {
              uint64_t v68 = (void *)objc_claimAutoreleasedReturnValue([v107 logKey]);
              *(_DWORD *)unint64_t v130 = 138412290;
              uint64_t v131 = v68;
              id v69 = v67;
              unint64_t v70 = "[%@] Purchasing complete with 1 item in the response";
              goto LABEL_76;
            }
          }

          else
          {
            id v71 = (id)objc_claimAutoreleasedReturnValue([v107 itemResponse]);
            unint64_t v73 = v71;
            if (v71) {
              id v71 = objc_getProperty(v71, v72, 56LL, 1);
            }
            id v74 = v71;
            id v75 = [v74 count];

            uint64_t v76 = ASDLogHandleForCategory(25LL);
            __int128 v67 = (os_log_s *)objc_claimAutoreleasedReturnValue(v76);
            BOOL v77 = os_log_type_enabled(v67, OS_LOG_TYPE_DEFAULT);
            if (v75)
            {
              if (v77)
              {
                id v78 = (void *)objc_claimAutoreleasedReturnValue([v107 logKey]);
                id v79 = (id)objc_claimAutoreleasedReturnValue([v107 itemResponse]);
                uint64_t v81 = v79;
                if (v79) {
                  id v79 = objc_getProperty(v79, v80, 56LL, 1);
                }
                id v82 = v79;
                id v83 = [v82 count];
                *(_DWORD *)unint64_t v130 = 138412546;
                uint64_t v131 = v78;
                __int16 v132 = 2048;
                id v133 = v83;
                _os_log_impl( (void *)&_mh_execute_header,  v67,  OS_LOG_TYPE_DEFAULT,  "[%@] Purchasing complete with %ld item(s) in the response",  v130,  0x16u);

                id v20 = v103;
              }
            }

            else if (v77)
            {
              uint64_t v68 = (void *)objc_claimAutoreleasedReturnValue([v107 logKey]);
              *(_DWORD *)unint64_t v130 = 138412290;
              uint64_t v131 = v68;
              id v69 = v67;
              unint64_t v70 = "[%@] Purchasing complete with no items in the response";
LABEL_76:
              _os_log_impl((void *)&_mh_execute_header, v69, OS_LOG_TYPE_DEFAULT, v70, v130, 0xCu);
            }
          }

          uint64_t v84 = *(void *)(v105 + 24);
          uint64_t v86 = objc_alloc(&OBJC_CLASS___PurchaseImportTask);
          if (v23) {
            id v87 = objc_getProperty(v23, v85, 56LL, 1);
          }
          else {
            id v87 = 0LL;
          }
          id v88 = v87;
          unint64_t v89 = sub_1001CCCA4((id *)&v86->super.super.super.isa, v88, v107, v106);
          if (v84) {
            [*(id *)(v84 + 8) addOperation:v89];
          }

LABEL_82:
          id v27 = 0LL;
          uint64_t v90 = 0LL;
          id v91 = 0LL;
          if (!v23) {
            goto LABEL_84;
          }
          goto LABEL_83;
        }

        id v26 = objc_getProperty(v23, v25, 48LL, 1);
        id v27 = v26;
        if ((v23[18] & 1) != 0)
        {
          uint64_t v31 = ASDLogHandleForCategory(25LL);
          __int128 v32 = (os_log_s *)objc_claimAutoreleasedReturnValue(v31);
          if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)__int128 buf = 138412290;
            *(void *)&uint8_t buf[4] = v108;
            _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_DEFAULT,  "[%@] Purchase triggered queue check.",  buf,  0xCu);
          }

          sub_1001997C8(v105, (void *)1, 1uLL, v107, v106, 0LL);
        }

        else
        {
          if (!v26) {
            goto LABEL_25;
          }
          uint64_t v28 = ASDLogHandleForCategory(25LL);
          uint64_t v29 = (os_log_s *)objc_claimAutoreleasedReturnValue(v28);
          if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)__int128 buf = 138412546;
            *(void *)&uint8_t buf[4] = v108;
            *(_WORD *)&buf[12] = 2114;
            *(void *)&buf[14] = v27;
            _os_log_error_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_ERROR,  "[%@] Purchase failed with error: %{public}@",  buf,  0x16u);
          }

          *(void *)__int128 buf = _NSConcreteStackBlock;
          *(void *)&buf[8] = 3221225472LL;
          *(void *)&uint8_t buf[16] = sub_10019C520;
          unint64_t v135 = &unk_1003E97D0;
          unint64_t v136 = v106;
          id v27 = v27;
          id v137 = v27;
          id v138 = v107;
          sub_10019A95C(v105, v27, v138, buf);
        }

  if ((v7 & 1) != 0) {
    goto LABEL_67;
  }
  if (self)
  {
    if (self->_bootstrapBagMonitorAdded) {
      goto LABEL_67;
    }
    id v63 = 0;
    goto LABEL_60;
  }

    id v6 = v7 | 0x61650000;
    goto LABEL_60;
  }

  if ((int)a4 <= 1634354770)
  {
    if ((int)a4 > 1634037810)
    {
      if (a4 != 1634037811 && a4 != 1634038895)
      {
        id v5 = 18000;
        goto LABEL_43;
      }

      return result;
    }

    if (a4 == 1634035308) {
      return result;
    }
    id v7 = 27753;
    goto LABEL_56;
  }

  if ((int)a4 > 1634358082)
  {
    if (a4 != 1634358083 && a4 != 1634358114)
    {
      id v5 = 25442;
      goto LABEL_43;
    }
  }

  else if (a4 != 1634354771 && a4 != 1634355570)
  {
    id v5 = 20565;
    goto LABEL_43;
  }

  return result;
}

void sub_10019B4C4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (a1)
  {
    uint64_t v16 = 0LL;
    uint64_t v17 = &v16;
    uint64_t v18 = 0x3032000000LL;
    id v19 = sub_10019B7EC;
    id v20 = sub_10019B7FC;
    __int128 v21 = sub_10025A12C((char *)objc_alloc(&OBJC_CLASS___PerformPurchaseTask), v5);
    id v8 = _NSConcreteStackBlock;
    uint64_t v9 = 3221225472LL;
    uint64_t v10 = sub_10019C428;
    id v11 = &unk_1003EA598;
    unsigned int v15 = &v16;
    uint64_t v12 = a1;
    id v14 = v6;
    id v13 = v5;
    [(id)v17[5] setCompletionBlock:&v8];
    uint64_t v7 = *(void *)(a1 + 24);
    if (v7) {
      objc_msgSend(*(id *)(v7 + 8), "addOperation:", v17[5], v8, v9, v10, v11, v12);
    }

    _Block_object_dispose(&v16, 8);
  }
}

void sub_10019B5E0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_10019B5F8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = ASDLogHandleForCategory(25LL);
  id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
  uint64_t v9 = (char *)[v5 signpostID];
  if ((unint64_t)(v9 - 1) <= 0xFFFFFFFFFFFFFFFDLL)
  {
    os_signpost_id_t v10 = (os_signpost_id_t)v9;
    if (os_signpost_enabled(v8))
    {
      id v11 = (void *)objc_claimAutoreleasedReturnValue([v5 logKey]);
      LODWORD(buf) = 138543362;
      *(void *)((char *)&buf + 4) = v11;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v8,  OS_SIGNPOST_INTERVAL_BEGIN,  v10,  "Purchase/Prepare",  " uuid=%{public, signpost.description:attribute}@ ",  (uint8_t *)&buf,  0xCu);
    }
  }

  *(void *)&__int128 buf = 0LL;
  *((void *)&buf + 1) = &buf;
  uint64_t v21 = 0x3032000000LL;
  __int128 v22 = sub_10019B7EC;
  id v23 = sub_10019B7FC;
  id v24 = sub_10028C080((id *)objc_alloc(&OBJC_CLASS___PreparePurchaseTask), v5);
  id v14 = _NSConcreteStackBlock;
  uint64_t v15 = 3221225472LL;
  uint64_t v16 = sub_10019B804;
  uint64_t v17 = &unk_1003EA430;
  p___int128 buf = &buf;
  id v12 = v6;
  id v18 = v12;
  [*(id *)(*((void *)&buf + 1) + 40) setCompletionBlock:&v14];
  uint64_t v13 = *(void *)(a1 + 24);
  if (v13) {
    objc_msgSend(*(id *)(v13 + 8), "addOperation:", *(void *)(*((void *)&buf + 1) + 40), v14, v15, v16, v17);
  }

  _Block_object_dispose(&buf, 8);
}

void sub_10019B7CC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_10019B7EC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_10019B7FC(uint64_t a1)
{
}

void sub_10019B804(uint64_t a1, const char *a2)
{
  id Property = *(id *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL);
  if (Property) {
    id Property = objc_getProperty(Property, a2, 32LL, 1);
  }
  id v5 = Property;
  id v6 = *(id *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL);
  if (v6) {
    id v6 = objc_getProperty(v6, v4, 40LL, 1);
  }
  id v7 = v6;
  uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8LL);
  uint64_t v9 = *(void **)(v8 + 40);
  *(void *)(v8 + 40) = 0LL;

  uint64_t v10 = ASDLogHandleForCategory(25LL);
  id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
  id v12 = (char *)[v7 signpostID];
  os_signpost_id_t v13 = (os_signpost_id_t)v12;
  if (v5)
  {
    if ((unint64_t)(v12 - 1) <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v11))
    {
      id v14 = sub_100298F48(v5);
      uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
      int v16 = 138543362;
      uint64_t v17 = v15;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v11,  OS_SIGNPOST_INTERVAL_END,  v13,  "Purchase/Prepare",  " error=%{public, signpost.description:attribute}@ ",  (uint8_t *)&v16,  0xCu);
    }
  }

  else if ((unint64_t)(v12 - 1) <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v11))
  {
    LOWORD(v16) = 0;
    _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v11,  OS_SIGNPOST_INTERVAL_END,  v13,  "Purchase/Prepare",  "",  (uint8_t *)&v16,  2u);
  }

  (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_10019B9BC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = *(void **)(a1 + 40);
  uint64_t v8 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 16LL);
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472LL;
  void v11[2] = sub_10019BA80;
  v11[3] = &unk_1003EA458;
  id v12 = v5;
  id v14 = v6;
  id v15 = v7;
  uint64_t v13 = *(void *)(a1 + 32);
  id v9 = v6;
  id v10 = v5;
  dispatch_async(v8, v11);
}

void sub_10019BA80(uint64_t a1)
{
  id v2 = objc_alloc(&OBJC_CLASS___PurchaseBatch);
  uint64_t v3 = *(void **)(a1 + 32);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 requestToken]);
  id v5 = sub_10020DA60((id *)&v2->super.isa, v3, v4);

  newValue[0] = _NSConcreteStackBlock;
  newValue[1] = 3221225472LL;
  newValue[2] = sub_10019BCC0;
  newValue[3] = &unk_1003EA3E0;
  id v21 = *(id *)(a1 + 56);
  if (v5) {
    objc_setProperty_atomic_copy(v5, v6, newValue, 32LL);
  }
  [*(id *)(*(void *)(a1 + 40) + 8) addObject:v5];
  if (*(void *)(a1 + 48))
  {
    uint64_t v7 = ASDLogHandleForCategory(25LL);
    uint64_t v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) logKey]);
      uint64_t v14 = *(void *)(a1 + 48);
      *(_DWORD *)__int128 buf = 138412546;
      id v23 = v13;
      __int16 v24 = 2114;
      uint64_t v25 = v14;
      _os_log_error_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_ERROR,  "[%@] Failed to prepare purchase: %{public}@",  buf,  0x16u);
    }

    uint64_t v10 = *(void *)(a1 + 40);
    id v9 = *(void **)(a1 + 48);
    id v11 = *(void **)(a1 + 32);
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3221225472LL;
    v16[2] = sub_10019BCD0;
    v16[3] = &unk_1003E97D0;
    uint64_t v17 = v5;
    id v18 = *(id *)(a1 + 48);
    id v19 = *(id *)(a1 + 32);
    sub_10019A95C(v10, v9, v11, v16);
  }

  else
  {
    uint64_t v12 = *(void *)(a1 + 40);
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472LL;
    v15[2] = sub_10019BCE0;
    v15[3] = &unk_1003EA408;
    v15[4] = v12;
    sub_10019B4C4(v12, v5, v15);
  }
}

uint64_t sub_10019BCC0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_10019BCD0(uint64_t a1)
{
}

void sub_10019BCE0(uint64_t a1, void *a2, void *a3)
{
}

void sub_10019BCE8(uint64_t a1)
{
  id v2 = sub_10020DA60((id *)objc_alloc(&OBJC_CLASS___PurchaseBatch), *(void **)(a1 + 32), *(void **)(a1 + 40));
  newValue[0] = _NSConcreteStackBlock;
  newValue[1] = 3221225472LL;
  newValue[2] = sub_10019BDE0;
  newValue[3] = &unk_1003EA4A8;
  id v7 = *(id *)(a1 + 32);
  id v8 = *(id *)(a1 + 56);
  if (v2) {
    objc_setProperty_atomic_copy(v2, v3, newValue, 32LL);
  }
  [*(id *)(*(void *)(a1 + 48) + 8) addObject:v2];
  uint64_t v4 = *(void *)(a1 + 48);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  void v5[2] = sub_10019BE98;
  _DWORD v5[3] = &unk_1003EA408;
  v5[4] = v4;
  sub_10019B4C4(v4, v2, v5);
}

void sub_10019BDE0(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = ASDLogHandleForCategory(25LL);
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  id v6 = (char *)[*(id *)(a1 + 32) signpostID];
  if ((unint64_t)(v6 - 1) <= 0xFFFFFFFFFFFFFFFDLL)
  {
    os_signpost_id_t v7 = (os_signpost_id_t)v6;
    if (os_signpost_enabled(v5))
    {
      *(_WORD *)id v8 = 0;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v5,  OS_SIGNPOST_INTERVAL_END,  v7,  "Purchase",  "",  v8,  2u);
    }
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
}

void sub_10019BE98(uint64_t a1, void *a2, void *a3)
{
}

void sub_10019BEA0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  os_signpost_id_t v7 = *(void **)(a1 + 40);
  id v8 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 16LL);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_10019BF78;
  block[3] = &unk_1003EA4D0;
  id v13 = v5;
  id v14 = v7;
  id v9 = *(id *)(a1 + 48);
  id v16 = v6;
  id v17 = v9;
  uint64_t v15 = *(void *)(a1 + 32);
  id v10 = v6;
  id v11 = v5;
  dispatch_async(v8, block);
}

void sub_10019BF78(uint64_t a1)
{
  id v2 = sub_10020DA60((id *)objc_alloc(&OBJC_CLASS___PurchaseBatch), *(void **)(a1 + 32), *(void **)(a1 + 40));
  newValue[0] = _NSConcreteStackBlock;
  newValue[1] = 3221225472LL;
  newValue[2] = sub_10019C1A8;
  newValue[3] = &unk_1003EA4A8;
  id v18 = *(id *)(a1 + 32);
  id v19 = *(id *)(a1 + 64);
  if (v2) {
    objc_setProperty_atomic_copy(v2, v3, newValue, 32LL);
  }
  [*(id *)(*(void *)(a1 + 48) + 8) addObject:v2];
  if (*(void *)(a1 + 56))
  {
    uint64_t v4 = ASDLogHandleForCategory(25LL);
    id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      id v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) logKey]);
      uint64_t v11 = *(void *)(a1 + 56);
      *(_DWORD *)__int128 buf = 138412546;
      id v21 = v10;
      __int16 v22 = 2114;
      uint64_t v23 = v11;
      _os_log_error_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_ERROR,  "[%@] Failed to prepare purchase: %{public}@",  buf,  0x16u);
    }

    uint64_t v6 = *(void *)(a1 + 48);
    os_signpost_id_t v7 = *(void **)(a1 + 56);
    id v8 = *(void **)(a1 + 32);
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472LL;
    void v13[2] = sub_10019C260;
    v13[3] = &unk_1003E97D0;
    id v14 = v2;
    id v15 = *(id *)(a1 + 56);
    id v16 = *(id *)(a1 + 32);
    sub_10019A95C(v6, v7, v8, v13);
  }

  else
  {
    uint64_t v9 = *(void *)(a1 + 48);
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472LL;
    void v12[2] = sub_10019C270;
    void v12[3] = &unk_1003EA408;
    void v12[4] = v9;
    sub_10019B4C4(v9, v2, v12);
  }
}

void sub_10019C1A8(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = ASDLogHandleForCategory(25LL);
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  uint64_t v6 = (char *)[*(id *)(a1 + 32) signpostID];
  if ((unint64_t)(v6 - 1) <= 0xFFFFFFFFFFFFFFFDLL)
  {
    os_signpost_id_t v7 = (os_signpost_id_t)v6;
    if (os_signpost_enabled(v5))
    {
      *(_WORD *)id v8 = 0;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v5,  OS_SIGNPOST_INTERVAL_END,  v7,  "Purchase",  "",  v8,  2u);
    }
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
}

void sub_10019C260(uint64_t a1)
{
}

void sub_10019C270(uint64_t a1, void *a2, void *a3)
{
}

PurchaseInfo *sub_10019C278(uint64_t a1, void *a2)
{
  return sub_1001DF7D0(a2, *(void **)(a1 + 32));
}

uint64_t sub_10019C288(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_10019C298(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472LL;
    v8[2] = sub_10019C388;
    v8[3] = &unk_1003E9B40;
    uint64_t v7 = *(void *)(a1 + 32);
    id v9 = *(id *)(a1 + 40);
    id v10 = v6;
    id v11 = v5;
    id v12 = *(id *)(a1 + 48);
    sub_10019A95C(v7, v10, v11, v8);
  }

  else
  {
    dispatch_group_leave(*(dispatch_group_t *)(a1 + 48));
  }
}

void sub_10019C388(uint64_t a1)
{
}

void sub_10019C3B4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v1 = *(void **)(a1 + 40);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472LL;
  v3[2] = sub_10019C40C;
  v3[3] = &unk_1003EA408;
  v3[4] = v2;
  sub_10019B4C4(v2, v1, v3);
}

void sub_10019C40C(uint64_t a1, void *a2, void *a3)
{
}

void sub_10019C414(uint64_t a1)
{
}

void sub_10019C41C(uint64_t a1)
{
}

void sub_10019C428(uint64_t a1, const char *a2)
{
  id Property = *(id *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 40LL);
  if (Property) {
    id Property = objc_getProperty(Property, a2, 32LL, 1);
  }
  id v4 = Property;
  uint64_t v5 = *(void *)(*(void *)(a1 + 56) + 8LL);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = 0LL;

  uint64_t v7 = *(dispatch_queue_s **)(*(void *)(a1 + 32) + 16LL);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_10019C50C;
  block[3] = &unk_1003EA570;
  id v12 = *(id *)(a1 + 48);
  id v10 = *(id *)(a1 + 40);
  id v11 = v4;
  id v8 = v4;
  dispatch_async(v7, block);
}

uint64_t sub_10019C50C(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(a1[6] + 16LL))(a1[6], a1[4], a1[5]);
}

void sub_10019C520(uint64_t a1)
{
}

void sub_10019C530(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v5 = ASDLogHandleForCategory(25LL, v4);
  id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v7 = *(void *)(a1 + 32);
    int v8 = 138412546;
    uint64_t v9 = v7;
    __int16 v10 = 2114;
    id v11 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "[%@] Refreshed DAAP after purchase: %{public}@",  (uint8_t *)&v8,  0x16u);
  }
}

void sub_10019C5F8(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v5 = ASDLogHandleForCategory(25LL, v4);
  id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v7 = *(void *)(a1 + 32);
    int v8 = 138412546;
    uint64_t v9 = v7;
    __int16 v10 = 2114;
    id v11 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "[%@] Refreshed DAAP after purchase: %{public}@",  (uint8_t *)&v8,  0x16u);
  }
}

id sub_10019C708(uint64_t a1)
{
  if (qword_100462158 != -1) {
    dispatch_once(&qword_100462158, &stru_1003EA608);
  }
  return (id)qword_100462150;
}

void sub_10019C74C(id a1)
{
  uint64_t v1 = objc_alloc(&OBJC_CLASS___LaunchServicesProgress);
  id v2 = sub_1002B0944((uint64_t)&OBJC_CLASS___ProgressCache);
  id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  id v7 = v3;
  if (v1)
  {
    v8.receiver = v1;
    v8.super_class = (Class)&OBJC_CLASS___LaunchServicesProgress;
    uint64_t v4 = objc_msgSendSuper2(&v8, "init");
    uint64_t v1 = (LaunchServicesProgress *)v4;
    if (v4)
    {
      objc_storeStrong(v4 + 1, v3);
      uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue( +[LSApplicationWorkspace defaultWorkspace]( &OBJC_CLASS___LSApplicationWorkspace,  "defaultWorkspace"));
      [v5 addObserver:v1];
    }
  }

  id v6 = (void *)qword_100462150;
  qword_100462150 = (uint64_t)v1;
}

uint64_t sub_10019CCDC(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

id sub_10019CCF0(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  if (a1)
  {
    uint64_t v17 = 0LL;
    id v18 = &v17;
    uint64_t v19 = 0x2020000000LL;
    char v20 = 0;
    id v6 = sub_1002EEBC0((uint64_t)&OBJC_CLASS___AppInstallsDatabaseStore);
    id v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472LL;
    void v13[2] = sub_10019D1D8;
    v13[3] = &unk_1003EA658;
    void v13[4] = a1;
    id v8 = v5;
    id v15 = &v17;
    uint64_t v16 = a3;
    id v14 = v8;
    [v7 modifyUsingTransaction:v13];

    if (*((_BYTE *)v18 + 24))
    {
      uint64_t v9 = 0LL;
    }

    else
    {
      __int16 v10 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"No job found with bundle ID: %@",  v8));
      uint64_t v11 = ASDErrorWithDescription(ASDErrorDomain, 520LL, v10);
      uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(v11);
    }

    _Block_object_dispose(&v17, 8);
  }

  else
  {
    uint64_t v9 = 0LL;
  }

  return v9;
}

void sub_10019CE2C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
}

uint64_t sub_10019D1D8(void *a1, void *a2)
{
  id v3 = a2;
  if (!a1[4])
  {
    uint64_t v11 = 0LL;
    goto LABEL_12;
  }

  uint64_t v4 = a1[7];
  uint64_t v5 = objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"bundle_id",  a1[5]));
  id v6 = (void *)v5;
  if (v4 == 10)
  {
    uint64_t v8 = objc_claimAutoreleasedReturnValue( +[SQLiteContainsPredicate containsPredicateWithProperty:values:]( &OBJC_CLASS___SQLiteContainsPredicate,  "containsPredicateWithProperty:values:",  @"IFNULL(app_install.phase, 10)",  &off_10040DD08));
  }

  else
  {
    if (v4 == -10)
    {
      id v7 = &off_10040DCF0;
    }

    else
    {
      if (v4 != -30)
      {
        v23[0] = v5;
        uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v23, 1LL));
        uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v9));
        goto LABEL_11;
      }

      id v7 = &off_10040DCD8;
    }

    uint64_t v8 = objc_claimAutoreleasedReturnValue( +[SQLiteContainsPredicate doesNotContainPredicateWithProperty:values:]( &OBJC_CLASS___SQLiteContainsPredicate,  "doesNotContainPredicateWithProperty:values:",  @"IFNULL(app_install.phase, 10)",  v7));
  }

  uint64_t v9 = (void *)v8;
  v23[0] = v6;
  v23[1] = v8;
  __int16 v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v23, 2LL));
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v10));

LABEL_11:
LABEL_12:
  id v12 = (void *)objc_claimAutoreleasedReturnValue([v3 connection]);
  id v13 = sub_10024C1D0((uint64_t)&OBJC_CLASS___AppInstallEntity, v12, v11);
  id v14 = (void *)objc_claimAutoreleasedReturnValue(v13);

  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472LL;
  v19[2] = sub_10019D41C;
  v19[3] = &unk_1003EA630;
  uint64_t v15 = a1[7];
  uint64_t v21 = a1[6];
  uint64_t v22 = v15;
  id v20 = v3;
  id v16 = v3;
  [v14 enumerateMemoryEntitiesUsingBlock:v19];
  uint64_t v17 = *(unsigned __int8 *)(*(void *)(a1[6] + 8LL) + 24LL);

  return v17;
}

void sub_10019D41C(uint64_t a1, void *a2)
{
  id v3 = a2;
  *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = 1;
  uint64_t v4 = *(void *)(a1 + 48);
  switch(v4)
  {
    case 10LL:
      id v7 = v3;
      sub_1001B4D24(*(void **)(a1 + 32), [v3 databaseID]);
      goto LABEL_8;
    case -10LL:
      uint64_t v5 = *(id **)(a1 + 32);
      id v7 = v3;
      id v6 = [v3 databaseID];
      id v3 = v7;
      if (v5)
      {
        sub_1001B47BC(v5, v6, -10LL, 2uLL);
        goto LABEL_8;
      }

      break;
    case -30LL:
      id v7 = v3;
      sub_1001B345C(*(id **)(a1 + 32), (uint64_t)[v3 databaseID], (NSError *)0xFFFFFFFFFFFFFFE2);
LABEL_8:
      id v3 = v7;
      break;
  }
}

id sub_10019D5DC(uint64_t a1)
{
  if (!a1) {
    return 0LL;
  }
  uint64_t v1 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  id v2 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  id v3 = sub_1002B61EC((uint64_t)&OBJC_CLASS___AppUsageDatabaseStore);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  v71[0] = _NSConcreteStackBlock;
  v71[1] = 3221225472LL;
  v71[2] = sub_10019EB10;
  v71[3] = &unk_1003EA6A8;
  uint64_t v5 = v2;
  __int16 v72 = v5;
  [v4 readUsingSession:v71];

  -[NSMutableArray sortUsingComparator:](v5, "sortUsingComparator:", &stru_1003EA6E8);
  id v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](&OBJC_CLASS___NSMutableDictionary, "dictionary"));
  __int128 v67 = 0u;
  __int128 v68 = 0u;
  __int128 v69 = 0u;
  __int128 v70 = 0u;
  id v7 = v5;
  id v8 = -[NSMutableArray countByEnumeratingWithState:objects:count:]( v7,  "countByEnumeratingWithState:objects:count:",  &v67,  v79,  16LL);
  if (!v8) {
    goto LABEL_36;
  }
  id v9 = v8;
  uint64_t v10 = *(void *)v68;
  uint64_t v66 = v1;
  do
  {
    uint64_t v11 = 0LL;
    do
    {
      if (*(void *)v68 != v10) {
        objc_enumerationMutation(v7);
      }
      id v12 = *(AccountActiveTime **)(*((void *)&v67 + 1) + 8LL * (void)v11);
      id v13 = sub_1001A4800(v12);
      id v14 = (void *)objc_claimAutoreleasedReturnValue(v13);

      if (v14)
      {
        id v15 = sub_1001A4800(v12);
        id v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
        uint64_t v17 = (AccountActiveTime *)objc_claimAutoreleasedReturnValue([v6 objectForKeyedSubscript:v16]);

        if (sub_1001A486C(v12) == 3)
        {
          id v18 = sub_1001A4824(v12);
          uint64_t v19 = (os_log_s *)objc_claimAutoreleasedReturnValue(v18);
          id v20 = v19;
          if (v17)
          {
            -[os_log_s timeIntervalSinceReferenceDate](v19, "timeIntervalSinceReferenceDate");
            v17->_end = v21;
            -[NSMutableArray addObject:](v1, "addObject:", v17);
            uint64_t v22 = ASDLogHandleForCategory(3LL);
            uint64_t v23 = (os_log_s *)objc_claimAutoreleasedReturnValue(v22);
            if (os_log_type_enabled(v23, OS_LOG_TYPE_DEBUG))
            {
              *(_DWORD *)__int128 buf = 138543362;
              id v74 = v17;
              _os_log_debug_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEBUG,  "[AccountEventTimeline] Completed account event: %{public}@",  buf,  0xCu);
            }

            id v24 = sub_1001A4800(v12);
            uint64_t v25 = (AccountActiveTime *)objc_claimAutoreleasedReturnValue(v24);
            [v6 removeObjectForKey:v25];
            goto LABEL_30;
          }

          uint64_t v40 = ASDLogHandleForCategory(3LL);
          uint64_t v25 = (AccountActiveTime *)objc_claimAutoreleasedReturnValue(v40);
          if (!os_log_type_enabled((os_log_t)v25, OS_LOG_TYPE_DEBUG)) {
            goto LABEL_30;
          }
          *(_DWORD *)__int128 buf = 138543362;
          id v74 = v12;
          id v37 = (os_log_s *)v25;
          id v38 = "[AccountEventTimeline] Skipping activeEnd account event without a start event: %{public}@";
          uint32_t v39 = 12;
LABEL_21:
          _os_log_debug_impl((void *)&_mh_execute_header, v37, OS_LOG_TYPE_DEBUG, v38, buf, v39);
          goto LABEL_30;
        }

        if (v17)
        {
          unsigned int v29 = sub_1001A486C(v12);
          uint64_t v30 = ASDLogHandleForCategory(3LL);
          id v20 = (os_log_s *)objc_claimAutoreleasedReturnValue(v30);
          BOOL v31 = os_log_type_enabled(v20, OS_LOG_TYPE_DEBUG);
          if (v29)
          {
            if (v31)
            {
              __int128 v32 = (AccountActiveTime *)sub_1001A486C(v12);
              id v33 = sub_1001A4800(v12);
              uint64_t v25 = (AccountActiveTime *)objc_claimAutoreleasedReturnValue(v33);
              id Property = objc_getProperty(v17, v34, 8LL, 1);
              unsigned int v36 = sub_1001A486C(Property);
              *(_DWORD *)__int128 buf = 134218498;
              id v74 = v32;
              uint64_t v1 = v66;
              __int16 v75 = 2114;
              uint64_t v76 = v25;
              __int16 v77 = 2048;
              uint64_t v78 = v36;
              id v37 = v20;
              id v38 = "[AccountEventTimeline] Skipping event with type: %ld because it is the same account as the current e"
                    "vent: %{public}@ with type: %ld";
              uint32_t v39 = 32;
              goto LABEL_21;
            }

LABEL_31:
            goto LABEL_32;
          }

          if (v31)
          {
            *(_DWORD *)__int128 buf = 138543362;
            id v74 = v17;
            _os_log_debug_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEBUG,  "[AccountEventTimeline] Replacing orphan account event due to a new activeStart / initial event: %{public}@",  buf,  0xCu);
          }
        }

        id v41 = sub_1001A4848(v12);
        id v20 = (os_log_s *)objc_claimAutoreleasedReturnValue(v41);
        id v42 = objc_alloc_init(&OBJC_CLASS___AccountActiveTime);
        uint64_t v25 = v42;
        if (v42)
        {
          objc_setProperty_atomic_copy(v42, v43, v12, 8LL);
          -[os_log_s timeIntervalSinceReferenceDate](v20, "timeIntervalSinceReferenceDate");
          v25->_start = v44;
        }

        else
        {
          -[os_log_s timeIntervalSinceReferenceDate](v20, "timeIntervalSinceReferenceDate");
        }

        id v45 = sub_1001A4800(v12);
        id v46 = (void *)objc_claimAutoreleasedReturnValue(v45);
        [v6 setObject:v25 forKeyedSubscript:v46];

        uint64_t v47 = ASDLogHandleForCategory(3LL);
        uint64_t v48 = (os_log_s *)objc_claimAutoreleasedReturnValue(v47);
        if (os_log_type_enabled(v48, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)__int128 buf = 138543362;
          id v74 = v25;
          _os_log_debug_impl( (void *)&_mh_execute_header,  v48,  OS_LOG_TYPE_DEBUG,  "[AccountEventTimeline] Setting current account event to: %{public}@",  buf,  0xCu);
        }

LABEL_30:
        goto LABEL_31;
      }

      uint64_t v26 = ASDLogHandleForCategory(3LL);
      uint64_t v17 = (AccountActiveTime *)objc_claimAutoreleasedReturnValue(v26);
      if (os_log_type_enabled((os_log_t)v17, OS_LOG_TYPE_DEBUG))
      {
        id v27 = (AccountActiveTime *)-[AccountActiveTime databaseID](v12, "databaseID");
        unsigned int v28 = sub_1001A486C(v12);
        *(_DWORD *)__int128 buf = 134218240;
        id v74 = v27;
        __int16 v75 = 2048;
        uint64_t v76 = (AccountActiveTime *)v28;
        _os_log_debug_impl( (void *)&_mh_execute_header,  (os_log_t)v17,  OS_LOG_TYPE_DEBUG,  "[AccountEventTimeline] Skipping event without accountID with pid: %lld type: %ld",  buf,  0x16u);
      }

        a1 = 4LL;
LABEL_32:

        goto LABEL_33;
      }
    }

    id v13 = [*(id *)(a1 + 24) cellularDataPrompt];
    if ([*(id *)(a1 + 16) isRoaming])
    {
      id v14 = ASDLogHandleForCategory(10LL);
      id v15 = (os_log_s *)objc_claimAutoreleasedReturnValue(v14);
      if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
      {
        if (v3) {
          id Property = objc_getProperty(v3, v16, 32LL, 1);
        }
        else {
          id Property = 0LL;
        }
        id v18 = Property;
        *(_DWORD *)__int128 buf = 138412290;
        id v51 = v18;
        _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "[%@]: Overriding cellular prompt - network is roaming",  buf,  0xCu);
      }

LABEL_25:
      id v27 = ASDLogHandleForCategory(10LL);
      id v20 = (os_log_s *)objc_claimAutoreleasedReturnValue(v27);
      if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
      {
        if (v3) {
          unsigned int v29 = objc_getProperty(v3, v28, 32LL, 1);
        }
        else {
          unsigned int v29 = 0LL;
        }
        uint64_t v22 = v29;
        *(_DWORD *)__int128 buf = 138412290;
        id v51 = v22;
        uint64_t v23 = "[%@]: Implicitly denied - cellular prompt required";
        goto LABEL_29;
      }

      goto LABEL_31;
    }

    if (v13 == (id)1) {
      goto LABEL_25;
    }
    if (v13 == (id)2)
    {
      id v24 = ASDLogHandleForCategory(10LL);
      id v20 = (os_log_s *)objc_claimAutoreleasedReturnValue(v24);
      if (!os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
      {
LABEL_50:
        a1 = 3LL;
        goto LABEL_32;
      }

      if (v3) {
        uint64_t v26 = objc_getProperty(v3, v25, 32LL, 1);
      }
      else {
        uint64_t v26 = 0LL;
      }
      uint64_t v22 = v26;
      *(_DWORD *)__int128 buf = 138412290;
      id v51 = v22;
      _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEFAULT,  "[%@]: Implicitly allowed - cellular prompt disabled",  buf,  0xCu);
LABEL_49:

      goto LABEL_50;
    }

    if (!v3 || !v3[2])
    {
      __int128 v32 = ASDLogHandleForCategory(10LL);
      id v20 = (os_log_s *)objc_claimAutoreleasedReturnValue(v32);
      if (!os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_31;
      }
      if (v3) {
        SEL v34 = objc_getProperty(v3, v33, 32LL, 1);
      }
      else {
        SEL v34 = 0LL;
      }
      uint64_t v22 = v34;
      *(_DWORD *)__int128 buf = 138412290;
      id v51 = v22;
      uint64_t v23 = "[%@]: Implicitly denied - download size is unavailable";
      goto LABEL_29;
    }

    BOOL v31 = *(void **)(a1 + 8);
    if (v31)
    {
      id v20 = 0LL;
    }

    else
    {
      uint64_t v35 = sub_100255630((uint64_t)&OBJC_CLASS___URLBag);
      unsigned int v36 = (void *)objc_claimAutoreleasedReturnValue(v35);
      id v37 = (void *)objc_claimAutoreleasedReturnValue( +[AMSNetworkConstraints networkConstraintsForMediaType:withBag:]( &OBJC_CLASS___AMSNetworkConstraints,  "networkConstraintsForMediaType:withBag:",  @"software",  v36));

      id v49 = 0LL;
      id v38 = objc_claimAutoreleasedReturnValue([v37 resultWithError:&v49]);
      id v20 = (os_log_s *)v49;
      uint32_t v39 = *(void **)(a1 + 8);
      *(void *)(a1 + _Block_object_dispose(va, 8) = v38;

      BOOL v31 = *(void **)(a1 + 8);
      if (!v31)
      {
        uint64_t v47 = ASDLogHandleForCategory(10LL);
        uint64_t v22 = (id)objc_claimAutoreleasedReturnValue(v47);
        if (!os_log_type_enabled((os_log_t)v22, OS_LOG_TYPE_ERROR)) {
          goto LABEL_30;
        }
        id v45 = objc_getProperty(v3, v48, 32LL, 1);
        *(_DWORD *)__int128 buf = 138412546;
        id v51 = v45;
        unsigned int v52 = 2114;
        id v53 = v20;
        _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)v22,  OS_LOG_TYPE_ERROR,  "[%@]: Implicitly denied - failed to load constraints: %{public}@",  buf,  0x16u);
        goto LABEL_46;
      }
    }

    uint64_t v40 = [v31 sizeLimitForNetworkType:AMSNetworkTypeCellular];
    id v41 = v3[2];
    id v42 = ASDLogHandleForCategory(10LL);
    uint64_t v22 = (id)objc_claimAutoreleasedReturnValue(v42);
    uint64_t v43 = os_log_type_enabled((os_log_t)v22, OS_LOG_TYPE_DEFAULT);
    if (v41 <= (unint64_t)v40)
    {
      if (v43)
      {
        id v46 = objc_getProperty(v3, v44, 32LL, 1);
        *(_DWORD *)__int128 buf = 138412290;
        id v51 = v46;
        _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v22,  OS_LOG_TYPE_DEFAULT,  "[%@]: Implicitly allowed - cellular limit applies",  buf,  0xCu);
      }

      goto LABEL_49;
    }

    if (!v43) {
      goto LABEL_30;
    }
    id v45 = objc_getProperty(v3, v44, 32LL, 1);
    *(_DWORD *)__int128 buf = 138412290;
    id v51 = v45;
    _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v22,  OS_LOG_TYPE_DEFAULT,  "[%@]: Implicitly denied - exceeded cellular limit",  buf,  0xCu);
LABEL_46:

    goto LABEL_30;
  }
}

    id v56 = v35;
    goto LABEL_34;
  }

  id v74 = v2;
  unsigned int v36 = sub_100255630((uint64_t)&OBJC_CLASS___URLBag);
  id v37 = (void *)objc_claimAutoreleasedReturnValue(v36);
  id v38 = (void *)objc_claimAutoreleasedReturnValue([v37 URLForKey:@"onDemandResources"]);
  unint64_t v73 = v8;
  uint32_t v39 = (void *)objc_claimAutoreleasedReturnValue( -[AMSURLRequestEncoder requestWithMethod:bagURL:parameters:]( v8,  "requestWithMethod:bagURL:parameters:",  4LL,  v38,  v17));
  *(void *)__int128 buf = v35;
  uint64_t v40 = (void *)objc_claimAutoreleasedReturnValue([v39 resultWithError:buf]);
  id v41 = *(id *)buf;

  id v42 = (void *)objc_claimAutoreleasedReturnValue(+[AMSURLSession defaultSession](&OBJC_CLASS___AMSURLSession, "defaultSession"));
  uint64_t v43 = (void *)objc_claimAutoreleasedReturnValue([v42 dataTaskPromiseWithRequest:v40]);

  __int16 v75 = v41;
  double v44 = (void *)objc_claimAutoreleasedReturnValue([v43 resultWithError:&v75]);
  uint64_t v35 = v75;

  id v45 = (void *)objc_claimAutoreleasedReturnValue([v44 object]);
  uint64_t v47 = objc_opt_class(&OBJC_CLASS___NSDictionary, v46);
  if ((objc_opt_isKindOfClass(v45, v47) & 1) != 0)
  {
    uint64_t v48 = (void *)objc_claimAutoreleasedReturnValue([v45 objectForKeyedSubscript:@"error"]);
    id v49 = objc_claimAutoreleasedReturnValue([v45 objectForKeyedSubscript:@"message"]);
    id v50 = (void *)v49;
    if (v48 && v49)
    {
      __int16 v72 = v13;
      id v51 = (void *)objc_claimAutoreleasedReturnValue([v44 responseCorrelationId]);
      unsigned int v52 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Error message: %@, Correlation ID: %@",  v50,  v51));

      id v53 = ASDErrorWithDescription(@"_OnDemandResourcesErrorDomain", [v48 integerValue], v52);
      uint64_t v54 = objc_claimAutoreleasedReturnValue(v53);

      uint64_t v35 = (id)v54;
      id v13 = v72;
    }
  }

  else
  {
    uint64_t v48 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Error fetching manifest, invalid response received: %@",  v45));
    uint64_t v55 = ASDErrorWithDescription(@"_OnDemandResourcesErrorDomain", 2008LL, v48);
    id v50 = v35;
    uint64_t v35 = (id)objc_claimAutoreleasedReturnValue(v55);
  }

  id v2 = v74;
  id v8 = v73;
  if (v35) {
    goto LABEL_31;
  }
LABEL_33:
  id v56 = 0LL;
LABEL_34:

  id v58 = v56;
  uint64_t v59 = v58;
  if (!v45)
  {
    if (!v58)
    {
      id v71 = ASDErrorWithDescription(@"_OnDemandResourcesErrorDomain", 2008LL, @"Invalid response body");
      uint64_t v59 = (void *)objc_claimAutoreleasedReturnValue(v71);
      if (!v59) {
        goto LABEL_36;
      }
    }

  return v18;
}

LABEL_32:
  return v40;
}

          objc_msgSend(v33, "addObject:", v26, v50);

LABEL_32:
          uint64_t v23 = (char *)v23 + 1;
        }

        while (v21 != v23);
        id v41 = [obj countByEnumeratingWithState:&v60 objects:buf count:16];
        double v21 = v41;
      }

      while (v41);
    }

    id v7 = v53;
    if ([v55 count])
    {
      id v42 = sub_1002D5C28(v55, 6LL);
      uint64_t v43 = (void *)objc_claimAutoreleasedReturnValue(v42);
      if (v43) {
        [v56 addObject:v43];
      }
    }

    if (objc_msgSend(v57, "count", v50))
    {
      double v44 = sub_1002D5C28(v57, 8LL);
      id v45 = (void *)objc_claimAutoreleasedReturnValue(v44);
      if (v45) {
        [v56 addObject:v45];
      }
    }

    if ([v54 count])
    {
      id v46 = sub_1002D5C28(v54, 7LL);
      uint64_t v47 = (void *)objc_claimAutoreleasedReturnValue(v46);
      if (v47) {
        [v56 addObject:v47];
      }
    }
  }

  else if (a3)
  {
    uint64_t v48 = ASDErrorWithTitleAndMessage(ASDErrorDomain, 507LL, @"ODP supplemental start date not set", 0LL);
    id v56 = 0LL;
    *a3 = (id)objc_claimAutoreleasedReturnValue(v48);
  }

  else
  {
    id v56 = 0LL;
  }

  return v56;
}

        goto LABEL_32;
      }

id sub_10019DC98(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_10019DD10;
  block[3] = &unk_1003E9EA8;
  void block[4] = objc_opt_self(a1);
  if (qword_100462168 != -1) {
    dispatch_once(&qword_100462168, block);
  }
  return (id)qword_100462160;
}

void sub_10019DD10(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  id v2 = (void *)qword_100462160;
  qword_100462160 = (uint64_t)v1;
}

id sub_10019DD34(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_self(a1);
  if (v3)
  {
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue( +[NSTimeZone timeZoneWithName:]( &OBJC_CLASS___NSTimeZone,  "timeZoneWithName:",  @"America/Los_Angeles"));
    uint64_t v5 = [v4 secondsFromGMTForDate:v3];
    id v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSTimeZone localTimeZone](&OBJC_CLASS___NSTimeZone, "localTimeZone"));
    id v7 = [v6 secondsFromGMTForDate:v3];

    id v8 = (void *)objc_claimAutoreleasedReturnValue( +[NSDate dateWithTimeInterval:sinceDate:]( &OBJC_CLASS___NSDate,  "dateWithTimeInterval:sinceDate:",  v3,  (double)(v5 - v7)));
    id v9 = objc_alloc_init(&OBJC_CLASS___NSDateComponents);
    -[NSDateComponents setWeekOfYear:](v9, "setWeekOfYear:", 1LL);
    uint64_t v10 = -[NSCalendar initWithCalendarIdentifier:]( objc_alloc(&OBJC_CLASS___NSCalendar),  "initWithCalendarIdentifier:",  NSCalendarIdentifierGregorian);
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSTimeZone systemTimeZone](&OBJC_CLASS___NSTimeZone, "systemTimeZone"));
    -[NSCalendar setTimeZone:](v10, "setTimeZone:", v11);

    id v12 = (void *)objc_claimAutoreleasedReturnValue( -[NSCalendar dateByAddingComponents:toDate:options:]( v10,  "dateByAddingComponents:toDate:options:",  v9,  v8,  0LL));
    id v16 = 0LL;
    -[NSCalendar rangeOfUnit:startDate:interval:forDate:]( v10,  "rangeOfUnit:startDate:interval:forDate:",  4096LL,  &v16,  0LL,  v12);
    id v13 = v16;
    id v14 = (void *)objc_claimAutoreleasedReturnValue(-[NSCalendar startOfDayForDate:](v10, "startOfDayForDate:", v13));
  }

  else
  {
    id v14 = 0LL;
  }

  return v14;
}

id sub_10019DEC4(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_self(a1);
  id v4 = sub_10019DD34((uint64_t)&OBJC_CLASS___AccountEventCoordinator, v3);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(v4);

  id v6 = objc_alloc_init(&OBJC_CLASS___NSDateComponents);
  -[NSDateComponents setWeekOfYear:](v6, "setWeekOfYear:", -1LL);
  id v7 = -[NSCalendar initWithCalendarIdentifier:]( objc_alloc(&OBJC_CLASS___NSCalendar),  "initWithCalendarIdentifier:",  NSCalendarIdentifierGregorian);
  id v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSTimeZone systemTimeZone](&OBJC_CLASS___NSTimeZone, "systemTimeZone"));
  -[NSCalendar setTimeZone:](v7, "setTimeZone:", v8);

  id v9 = (void *)objc_claimAutoreleasedReturnValue( -[NSCalendar dateByAddingComponents:toDate:options:]( v7,  "dateByAddingComponents:toDate:options:",  v6,  v5,  0LL));
  return v9;
}

void *sub_10019DF9C(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  if (a1)
  {
    if (v3)
    {
      uint64_t v10 = 0LL;
      uint64_t v11 = &v10;
      uint64_t v12 = 0x3032000000LL;
      id v13 = sub_10019E08C;
      id v14 = sub_10019E09C;
      id v15 = 0LL;
      uint64_t v5 = (dispatch_queue_s *)a1[2];
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_10019E0A4;
      block[3] = &unk_1003E97A8;
      void block[4] = a1;
      id v8 = v3;
      id v9 = &v10;
      dispatch_sync(v5, block);
      a1 = (id)v11[5];

      _Block_object_dispose(&v10, 8);
    }

    else
    {
      a1 = &__NSArray0__struct;
    }
  }

  return a1;
}

uint64_t sub_10019E08C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_10019E09C(uint64_t a1)
{
}

void sub_10019E0A4(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
  [v2 timeIntervalSinceReferenceDate];
  double v4 = v3;

  if (v4 - *(double *)(*(void *)(a1 + 32) + 24LL) > 300.0)
  {
    uint64_t v5 = ASDLogHandleForCategory(3LL);
    id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      double v7 = v4 - *(double *)(*(void *)(a1 + 32) + 24LL);
      *(_DWORD *)__int128 buf = 134217984;
      double v42 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "[AccountEventTimeline]: Clearing internal cache which is %f seconds old",  buf,  0xCu);
    }

    sub_10019E3D0(*(void *)(a1 + 32));
  }

  id v8 = objc_opt_new(&OBJC_CLASS___NSMutableArray);
  id v9 = sub_10019D5DC(*(void *)(a1 + 32));
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
  uint64_t v11 = (NSMutableArray *)objc_claimAutoreleasedReturnValue( [*(id *)(*(void *)(a1 + 32) + 8) objectForKeyedSubscript:*(void *)(a1 + 40)]);
  uint64_t v12 = v11;
  if (!v11)
  {
    [*(id *)(a1 + 40) timeIntervalSinceReferenceDate];
    double v14 = v13;
    __int128 v37 = 0u;
    __int128 v38 = 0u;
    __int128 v39 = 0u;
    __int128 v40 = 0u;
    id v15 = v10;
    id v16 = [v15 countByEnumeratingWithState:&v37 objects:v45 count:16];
    if (!v16) {
      goto LABEL_36;
    }
    id v17 = v16;
    double v18 = v14 + 604800.0;
    uint64_t v19 = *(void *)v38;
    BOOL v20 = v14 + 604800.0 < 0.0 || v14 > 0.0;
    while (1)
    {
      double v21 = 0LL;
      do
      {
        if (*(void *)v38 != v19) {
          objc_enumerationMutation(v15);
        }
        uint64_t v22 = *(void *)(*((void *)&v37 + 1) + 8LL * (void)v21);
        if (v22)
        {
          double v23 = *(double *)(v22 + 24);
          if (v23 < v14 || v23 > v18)
          {
            double v25 = *(double *)(v22 + 16);
            BOOL v26 = v25 < v14 || v25 > v18;
            if (v26 || v23 <= v18)
            {
              if (v25 > v14) {
                goto LABEL_30;
              }
LABEL_28:
              if (v23 < v18) {
                goto LABEL_30;
              }
            }
          }

LABEL_29:
          -[NSMutableArray addObject:](v8, "addObject:", (void)v37);
          goto LABEL_30;
        }

        if (!v20) {
          goto LABEL_29;
        }
        double v23 = 0.0;
        if (v14 >= 0.0) {
          goto LABEL_28;
        }
LABEL_30:
        double v21 = (char *)v21 + 1;
      }

      while (v17 != v21);
      id v28 = [v15 countByEnumeratingWithState:&v37 objects:v45 count:16];
      id v17 = v28;
      if (!v28)
      {
LABEL_36:

        uint64_t v29 = ASDLogHandleForCategory(3LL);
        uint64_t v30 = (os_log_s *)objc_claimAutoreleasedReturnValue(v29);
        if (os_log_type_enabled(v30, OS_LOG_TYPE_DEBUG))
        {
          id v34 = sub_1001E84AC(*(void **)(a1 + 40));
          uint64_t v35 = (void *)objc_claimAutoreleasedReturnValue(v34);
          unsigned int v36 = (void *)objc_claimAutoreleasedReturnValue(-[NSMutableArray componentsJoinedByString:](v8, "componentsJoinedByString:", @", "));
          *(_DWORD *)__int128 buf = 138543618;
          double v42 = *(double *)&v35;
          __int16 v43 = 2114;
          double v44 = v36;
          _os_log_debug_impl( (void *)&_mh_execute_header,  v30,  OS_LOG_TYPE_DEBUG,  "[AccountEventTimeline]: Accounts for week: %{public}@ are: [%{public}@]",  buf,  0x16u);
        }

        [*(id *)(*(void *)(a1 + 32) + 8) setObject:v8 forKeyedSubscript:*(void *)(a1 + 40)];
        uint64_t v11 = v8;
        break;
      }
    }
  }

  id v31 = -[NSMutableArray copy](v11, "copy", (void)v37);
  uint64_t v32 = *(void *)(*(void *)(a1 + 48) + 8LL);
  id v33 = *(void **)(v32 + 40);
  *(void *)(v32 + 40) = v31;
}

          continue;
        }

        uint64_t v22 = ASDLogHandleForCategory(19LL);
        double v23 = (os_log_s *)objc_claimAutoreleasedReturnValue(v22);
        if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
        {
          id v27 = sub_1001F7970(v4);
          id v28 = (void *)objc_claimAutoreleasedReturnValue(v27);
          uint64_t v29 = *(void *)(a1 + 40);
          *(_DWORD *)__int128 buf = 138543618;
          *(void *)&uint8_t buf[4] = v28;
          *(_WORD *)&buf[12] = 2114;
          *(void *)&buf[14] = v29;
          _os_log_error_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_ERROR,  "Asset pack %{public}@ was not pinned when unpinning tags %{public}@",  buf,  0x16u);
        }
      }

      id v2 = [obj countByEnumeratingWithState:&v50 objects:v60 count:16];
      if (!v2)
      {
LABEL_32:

        (*(void (**)(void))(*(void *)(a1 + 56) + 16LL))();
        _Block_object_dispose(v54, 8);

        return;
      }
    }
  }

  id v34 = ASDLogHandleForCategory(19LL);
  uint64_t v35 = (os_log_s *)objc_claimAutoreleasedReturnValue(v34);
  if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR))
  {
    __int128 v40 = *(void *)(a1 + 40);
    id v41 = *(void *)(a1 + 48);
    *(_DWORD *)__int128 buf = 138543618;
    *(void *)&uint8_t buf[4] = v40;
    *(_WORD *)&buf[12] = 2114;
    *(void *)&buf[14] = v41;
    _os_log_error_impl( (void *)&_mh_execute_header,  v35,  OS_LOG_TYPE_ERROR,  "Unpin tags failed for invalid tag in set [%{public}@], bundleURL: %{public}@",  buf,  0x16u);
  }

  unsigned int v36 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Request could not be completed.  Invalid tag in set '%@.'",  *(void *)(a1 + 40)));
  id v61 = NSLocalizedFailureReasonErrorKey;
  id v62 = v36;
  __int128 v37 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v62,  &v61,  1LL));
  __int128 v38 = *(void *)(a1 + 56);
  __int128 v39 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  NSCocoaErrorDomain,  4994LL,  v37));
  (*(void (**)(uint64_t, void, void *))(v38 + 16))(v38, 0LL, v39);
}

    goto LABEL_30;
  }

  return 1LL;
}
}

void sub_10019E3D0(uint64_t a1)
{
  if (a1)
  {
    id v2 = objc_opt_new(&OBJC_CLASS___NSMutableDictionary);
    double v3 = *(void **)(a1 + 8);
    *(void *)(a1 + _Block_object_dispose(va, 8) = v2;

    id v5 = (id)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
    [v5 timeIntervalSinceReferenceDate];
    *(void *)(a1 + 24) = v4;
  }

id sub_10019E434(uint64_t a1)
{
  if (!a1) {
    return 0LL;
  }
  uint64_t v5 = 0LL;
  id v6 = &v5;
  uint64_t v7 = 0x3032000000LL;
  id v8 = sub_10019E08C;
  id v9 = sub_10019E09C;
  id v10 = 0LL;
  id v1 = *(dispatch_queue_s **)(a1 + 16);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  void v4[2] = sub_10019E4F4;
  v4[3] = &unk_1003E9BE0;
  void v4[4] = a1;
  void v4[5] = &v5;
  dispatch_sync(v1, v4);
  id v2 = (id)v6[5];
  _Block_object_dispose(&v5, 8);

  return v2;
}

void sub_10019E4F4(uint64_t a1)
{
  id v2 = sub_10019D5DC(*(void *)(a1 + 32));
  uint64_t v3 = objc_claimAutoreleasedReturnValue(v2);
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8LL);
  uint64_t v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;
}

void sub_10019E52C(uint64_t a1)
{
  if (a1)
  {
    id v1 = *(dispatch_queue_s **)(a1 + 16);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_10019E588;
    block[3] = &unk_1003E9880;
    void block[4] = a1;
    dispatch_sync(v1, block);
  }

void sub_10019E588(uint64_t a1)
{
}

void sub_10019E60C(uint64_t a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) userInfo]);
  id v2 = (void *)objc_claimAutoreleasedReturnValue([v1 objectForKeyedSubscript:@"DSID"]);

  if (v2)
  {
    id v3 = sub_1001DEDF8(v1, @"DSID");
    id v2 = (void *)objc_claimAutoreleasedReturnValue(v3);
  }

  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v1 objectForKeyedSubscript:@"active"]);

  if (v4)
  {
    id v5 = sub_1001DEDF8(v1, @"active");
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(v5);
  }

  id v6 = (void *)objc_claimAutoreleasedReturnValue([v1 objectForKeyedSubscript:@"signout"]);

  unsigned __int8 v7 = 0;
  if (v1 && v6) {
    unsigned __int8 v7 = sub_1001DEDAC(v1, @"signout", 0LL);
  }
  uint64_t v8 = ASDLogHandleForCategory(3LL);
  id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)__int128 buf = 138543618;
    id v27 = v2;
    __int16 v28 = 1024;
    unsigned int v29 = [v4 BOOLValue];
    _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "[AccountEvent] Active account changed notification accountID: %{public}@ active: %{BOOL}d",  buf,  0x12u);
  }

  id v10 = (void *)objc_claimAutoreleasedReturnValue(+[ACAccountStore ams_sharedAccountStore](&OBJC_CLASS___ACAccountStore, "ams_sharedAccountStore"));
  uint64_t v11 = v10;
  if (!v2)
  {
    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "ams_activeiTunesAccount"));

    if (!v12)
    {
      double v13 = 0LL;
      goto LABEL_22;
    }

    goto LABEL_15;
  }

  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "ams_iTunesAccountWithDSID:", v2));

  if (v12)
  {
LABEL_15:
    double v13 = (AccountEvent *)sub_1001A46B8(objc_alloc(&OBJC_CLASS___AccountEvent), v12);
    if (!v13) {
      goto LABEL_22;
    }
    goto LABEL_16;
  }

  double v13 = objc_alloc_init(&OBJC_CLASS___AccountEvent);
  -[SQLiteMemoryEntity setValue:forProperty:](v13, "setValue:forProperty:", v2, @"account_id");
  if (!v13)
  {
LABEL_22:
    uint64_t v20 = ASDLogHandleForCategory(3LL);
    double v14 = (os_log_s *)objc_claimAutoreleasedReturnValue(v20);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 138543362;
      id v27 = v1;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "[AccountEvent] No account found following active account change notification: %{public}@",  buf,  0xCu);
    }

    goto LABEL_24;
  }

uint64_t sub_10019E990(uint64_t a1, void *a2)
{
  id v3 = sub_10030D714(a2, *(void **)(a1 + 32));
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  if (v4)
  {
    int v5 = *(unsigned __int8 *)(a1 + 56);
    uint64_t v6 = ASDLogHandleForCategory(3LL);
    unsigned __int8 v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);
    if (v5)
    {
      if (v8)
      {
        uint64_t v9 = *(void *)(a1 + 40);
        unsigned int v10 = [*(id *)(a1 + 48) BOOLValue];
        int v17 = 138543618;
        uint64_t v18 = v9;
        __int16 v19 = 1024;
        unsigned int v20 = v10;
        uint64_t v11 = "[AccountEvent] Recorded account signout event for account: %{public}@ active: %{BOOL}d";
LABEL_9:
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, v11, (uint8_t *)&v17, 0x12u);
      }
    }

    else if (v8)
    {
      uint64_t v14 = *(void *)(a1 + 40);
      unsigned int v15 = [*(id *)(a1 + 48) BOOLValue];
      int v17 = 138543618;
      uint64_t v18 = v14;
      __int16 v19 = 1024;
      unsigned int v20 = v15;
      uint64_t v11 = "[AccountEvent] Recorded account event for account: %{public}@ active: %{BOOL}d";
      goto LABEL_9;
    }
  }

  else
  {
    uint64_t v12 = ASDLogHandleForCategory(3LL);
    unsigned __int8 v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      uint64_t v13 = *(void *)(a1 + 40);
      int v17 = 138543362;
      uint64_t v18 = v13;
      _os_log_error_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_ERROR,  "[AccountEvent] Unable to recorded active account event for account: %{public}@",  (uint8_t *)&v17,  0xCu);
    }
  }

  return 1LL;
}

void sub_10019EB10(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = objc_alloc(&OBJC_CLASS___SQLiteQueryDescriptor);
  uint64_t v6 = objc_opt_class(&OBJC_CLASS___AccountEventEntity, v5);
  uint64_t v8 = objc_opt_class(&OBJC_CLASS___AccountEvent, v7);
  uint64_t v14 = sub_10024BAF8(v4, v6, v8);
  uint64_t v9 = objc_alloc(&OBJC_CLASS___SQLiteQuery);
  unsigned int v10 = (void *)objc_claimAutoreleasedReturnValue([v3 connection]);

  id v11 = -[SQLiteQuery initOnConnection:descriptor:](v9, "initOnConnection:descriptor:", v10, v14);
  id v12 = sub_1001FF230((uint64_t)&OBJC_CLASS___AccountEventEntity);
  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472LL;
  v15[2] = sub_10019EC38;
  v15[3] = &unk_1003E98A8;
  id v16 = *(id *)(a1 + 32);
  [v11 enumerateMemoryEntitiesWithProperties:v13 usingBlock:v15];
}

id sub_10019EC38(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) addObject:a2];
}

int64_t sub_10019EC44(id a1, id a2, id a3)
{
  id v4 = a3;
  id v5 = a2;
  id v6 = sub_1001A4848(v5);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
  if (v7) {
    id v8 = sub_1001A4848(v5);
  }
  else {
    id v8 = sub_1001A4824(v5);
  }
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(v8);

  id v10 = sub_1001A4848(v4);
  id v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
  if (v11) {
    id v12 = sub_1001A4848(v4);
  }
  else {
    id v12 = sub_1001A4824(v4);
  }
  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(v12);

  id v14 = [v9 compare:v13];
  return (int64_t)v14;
}

id sub_10019ED88(id a1)
{
  id v1 = a1;
  if (a1)
  {
    id v27 = objc_opt_new(&OBJC_CLASS___NSMutableArray);
    __int128 v28 = 0u;
    __int128 v29 = 0u;
    __int128 v30 = 0u;
    __int128 v31 = 0u;
    id v2 = sub_10019E434((uint64_t)v1);
    id obj = (id)objc_claimAutoreleasedReturnValue(v2);
    id v3 = [obj countByEnumeratingWithState:&v28 objects:v34 count:16];
    if (v3)
    {
      id v4 = v3;
      uint64_t v26 = *(void *)v29;
      do
      {
        id v5 = 0LL;
        do
        {
          if (*(void *)v29 != v26) {
            objc_enumerationMutation(obj);
          }
          id v6 = *(double **)(*((void *)&v28 + 1) + 8LL * (void)v5);
          if (v6)
          {
            uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue( +[NSDate dateWithTimeIntervalSinceReferenceDate:]( &OBJC_CLASS___NSDate,  "dateWithTimeIntervalSinceReferenceDate:",  v6[2]));
            id v8 = (void *)objc_claimAutoreleasedReturnValue( +[NSDate dateWithTimeIntervalSinceReferenceDate:]( &OBJC_CLASS___NSDate,  "dateWithTimeIntervalSinceReferenceDate:",  v6[3]));
            uint64_t v9 = v8;
            if (v6[3] == 0.0)
            {
              id v11 = @"n/a";
            }

            else
            {
              id v10 = sub_1001E83D8(v8);
              id v11 = (__CFString *)objc_claimAutoreleasedReturnValue(v10);
            }

            v35[0] = @"Start Date";
            id v12 = sub_1001E83D8(v7);
            uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
            v36[0] = v13;
            v36[1] = v11;
            v35[1] = @"End Date";
            v35[2] = @"Account";
            id Property = objc_getProperty(v6, v14, 8LL, 1);
            id v16 = sub_1001A47DC(Property);
            int v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
            id v19 = objc_getProperty(v6, v18, 8LL, 1);
            id v20 = sub_1001A4800(v19);
            double v21 = (void *)objc_claimAutoreleasedReturnValue(v20);
            uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"%@/%@",  v17,  v21));
            v36[2] = v22;
            id v6 = (double *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v36,  v35,  3LL));
          }

          -[NSMutableArray addObject:](v27, "addObject:", v6);

          id v5 = (char *)v5 + 1;
        }

        while (v4 != v5);
        id v4 = [obj countByEnumeratingWithState:&v28 objects:v34 count:16];
      }

      while (v4);
    }

    uint64_t v32 = @"events";
    id v23 = -[NSMutableArray copy](v27, "copy");
    id v33 = v23;
    id v1 = (id)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v33,  &v32,  1LL));
  }

  return v1;
}

void sub_10019F028(uint64_t a1)
{
  uint64_t v1 = ASDLogHandleForCategory(3LL);
  id v2 = (os_log_s *)objc_claimAutoreleasedReturnValue(v1);
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)__int128 buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "[AccountEventTimeline]: Date diagnostics",  buf,  2u);
  }

  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
  id v4 = sub_10019DEC4((uint64_t)&OBJC_CLASS___AccountEventCoordinator, v3);
  id v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  id v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSTimeZone localTimeZone](&OBJC_CLASS___NSTimeZone, "localTimeZone"));
  uint64_t v7 = objc_claimAutoreleasedReturnValue([v6 name]);

  uint64_t v8 = ASDLogHandleForCategory(3LL);
  uint64_t v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    if (v3)
    {
      [v3 timeIntervalSince1970];
      uint64_t v11 = (uint64_t)v10;
    }

    else
    {
      uint64_t v11 = 0LL;
    }

    id v12 = sub_1001E84AC(v5);
    uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
    *(_DWORD *)__int128 buf = 138412802;
    uint64_t v30 = v7;
    __int16 v31 = 2048;
    uint64_t v32 = v11;
    __int16 v33 = 2112;
    id v34 = v13;
    _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "Starting timezone: %@ date: %{time_t}ld week: %@",  buf,  0x20u);
  }

  uint64_t v26 = (void *)v7;
  id v27 = v5;

  __int128 v28 = v3;
  [v3 timeIntervalSinceReferenceDate];
  double v15 = v14;
  uint64_t v16 = 365LL;
  do
  {
    double v15 = v15 + 86400.0;
    int v17 = (void *)objc_claimAutoreleasedReturnValue( +[NSDate dateWithTimeIntervalSinceReferenceDate:]( &OBJC_CLASS___NSDate,  "dateWithTimeIntervalSinceReferenceDate:",  v15));
    id v18 = sub_10019DEC4((uint64_t)&OBJC_CLASS___AccountEventCoordinator, v17);
    id v19 = (void *)objc_claimAutoreleasedReturnValue(v18);
    uint64_t v20 = ASDLogHandleForCategory(3LL);
    double v21 = (os_log_s *)objc_claimAutoreleasedReturnValue(v20);
    if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
    {
      if (v17)
      {
        [v17 timeIntervalSince1970];
        uint64_t v23 = (uint64_t)v22;
      }

      else
      {
        uint64_t v23 = 0LL;
      }

      id v24 = sub_1001E84AC(v19);
      unsigned __int8 v25 = (void *)objc_claimAutoreleasedReturnValue(v24);
      *(_DWORD *)__int128 buf = 134218242;
      uint64_t v30 = v23;
      __int16 v31 = 2112;
      uint64_t v32 = (uint64_t)v25;
      _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEFAULT,  "Date: %{time_t}ld payout week: %@",  buf,  0x16u);
    }

    --v16;
  }

  while (v16);
}

void sub_10019F528(uint64_t a1)
{
  uint64_t v1 = (void *)CFPreferencesCopyAppValue(@"OffloadingGracePeriodStartDate", @"com.apple.appstored");
  if (!v1)
  {
    CFPreferencesSetAppValue( @"OffloadingGracePeriodStartDate",  +[NSDate date](&OBJC_CLASS___NSDate, "date"),  @"com.apple.appstored");
    CFPreferencesAppSynchronize(@"com.apple.appstored");
    uint64_t v1 = 0LL;
  }
}

id sub_10019F59C(void *a1)
{
  if (!a1) {
    return 0LL;
  }
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](&OBJC_CLASS___NSMutableDictionary, "dictionary"));
  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
  id v4 = objc_alloc_init(&OBJC_CLASS____TtC9appstored6LogKey);
  id v5 = [[ASDPurgeableAppRequestOptions alloc] initWithVolume:@"/private/var" urgency:3];
  [v5 setPerformAvailablityCheck:0];
  id v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
  id v46 = v5;
  uint64_t v48 = v4;
  id v7 = sub_10019FA38(a1, v5, v4);
  __int128 v57 = 0u;
  __int128 v58 = 0u;
  __int128 v59 = 0u;
  __int128 v60 = 0u;
  id v45 = (void *)objc_claimAutoreleasedReturnValue(v7);
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v45 purgeableApps]);
  id v9 = [v8 countByEnumeratingWithState:&v57 objects:v63 count:16];
  if (v9)
  {
    id v10 = v9;
    uint64_t v11 = *(void *)v58;
    do
    {
      for (uint64_t i = 0LL; i != v10; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v58 != v11) {
          objc_enumerationMutation(v8);
        }
        uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&v57 + 1) + 8 * (void)i) diagnosticDescription]);
        [v6 addObject:v13];
      }

      id v10 = [v8 countByEnumeratingWithState:&v57 objects:v63 count:16];
    }

    while (v10);
  }

  id v14 = [v6 copy];
  uint64_t v47 = v2;
  [v2 setObject:v14 forKeyedSubscript:@"purgeableEvents"];

  double v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableSet set](&OBJC_CLASS___NSMutableSet, "set"));
  id v16 = sub_10028EBEC((uint64_t)&OBJC_CLASS___LSEnumerator);
  __int128 v53 = 0u;
  __int128 v54 = 0u;
  __int128 v55 = 0u;
  __int128 v56 = 0u;
  id v17 = (id)objc_claimAutoreleasedReturnValue(v16);
  id v18 = [v17 countByEnumeratingWithState:&v53 objects:v62 count:16];
  if (v18)
  {
    id v19 = v18;
    uint64_t v20 = *(void *)v54;
    do
    {
      for (j = 0LL; j != v19; j = (char *)j + 1)
      {
        if (*(void *)v54 != v20) {
          objc_enumerationMutation(v17);
        }
        double v22 = *(void **)(*((void *)&v53 + 1) + 8LL * (void)j);
        uint64_t v23 = objc_autoreleasePoolPush();
        if (sub_10019FCA8((uint64_t)a1, v22))
        {
          id v24 = (void *)objc_claimAutoreleasedReturnValue([v22 bundleIdentifier]);
          [v15 addObject:v24];
        }

        objc_autoreleasePoolPop(v23);
      }

      id v19 = [v17 countByEnumeratingWithState:&v53 objects:v62 count:16];
    }

    while (v19);
  }

  unsigned __int8 v25 = objc_alloc(&OBJC_CLASS___NSDateInterval);
  uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate distantPast](&OBJC_CLASS___NSDate, "distantPast"));
  id v27 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate distantFuture](&OBJC_CLASS___NSDate, "distantFuture"));
  __int128 v28 = -[NSDateInterval initWithStartDate:endDate:](v25, "initWithStartDate:endDate:", v26, v27);

  __int128 v29 = (void *)objc_claimAutoreleasedReturnValue(+[LaunchHistory shared](&OBJC_CLASS____TtC9appstored13LaunchHistory, "shared"));
  double v44 = v28;
  uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue([v29 getLaunchesWithLogKey:v48 dateInterval:v28]);

  __int128 v51 = 0u;
  __int128 v52 = 0u;
  __int128 v49 = 0u;
  __int128 v50 = 0u;
  id v31 = v30;
  id v32 = [v31 countByEnumeratingWithState:&v49 objects:v61 count:16];
  if (v32)
  {
    id v33 = v32;
    uint64_t v34 = *(void *)v50;
    do
    {
      for (k = 0LL; k != v33; k = (char *)k + 1)
      {
        if (*(void *)v50 != v34) {
          objc_enumerationMutation(v31);
        }
        unsigned int v36 = *(void **)(*((void *)&v49 + 1) + 8LL * (void)k);
        else {
          id v37 = sub_1002CFD24(v36);
        }
        __int128 v38 = (void *)objc_claimAutoreleasedReturnValue(v37);
        if ([v38 length])
        {
          if ([v15 containsObject:v38])
          {
            id v39 = sub_1002CFEEC(v36);
            __int128 v40 = (void *)objc_claimAutoreleasedReturnValue(v39);
            [v3 addObject:v40];
          }
        }
      }

      id v33 = [v31 countByEnumeratingWithState:&v49 objects:v61 count:16];
    }

    while (v33);
  }

  id v41 = [v3 copy];
  [v47 setObject:v41 forKeyedSubscript:@"launchEvents"];

  id v42 = [v47 copy];
  return v42;
}

id sub_10019FA38(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  __int128 v29 = v5;
  if (a1)
  {
    sub_10019FD84((uint64_t)a1, v6);
    id v7 = sub_10019FDE8(a1, v5, v6);
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
    id v9 = sub_1001A1AC0((uint64_t)a1, v8, &__NSArray0__struct, @"com.apple.appstored", v6);
    id v10 = (void *)objc_claimAutoreleasedReturnValue(v9);

    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
    __int128 v30 = 0u;
    __int128 v31 = 0u;
    __int128 v32 = 0u;
    __int128 v33 = 0u;
    id v12 = v10;
    id v13 = [v12 countByEnumeratingWithState:&v30 objects:v38 count:16];
    if (v13)
    {
      id v14 = v13;
      uint64_t v15 = 0LL;
      uint64_t v16 = *(void *)v31;
      do
      {
        id v17 = 0LL;
        do
        {
          if (*(void *)v31 != v16) {
            objc_enumerationMutation(v12);
          }
          uint64_t v18 = *(void *)(*((void *)&v30 + 1) + 8LL * (void)v17);
          if (v18) {
            id v19 = *(void **)(v18 + 16);
          }
          else {
            id v19 = 0LL;
          }
          id v20 = v19;
          id v21 = [v20 unsignedLongLongValue];

          id v22 = sub_1001BE66C(v18);
          uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue(v22);
          [v11 addObject:v23];

          uint64_t v24 = ASDLogHandleForCategory(20LL);
          unsigned __int8 v25 = (os_log_s *)objc_claimAutoreleasedReturnValue(v24);
          if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)__int128 buf = 138412546;
            id v35 = v6;
            __int16 v36 = 2114;
            uint64_t v37 = v18;
            _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_DEFAULT,  "[%@] [Offloadable] %{public}@",  buf,  0x16u);
          }

          v15 += (uint64_t)v21;

          id v17 = (char *)v17 + 1;
        }

        while (v14 != v17);
        id v26 = [v12 countByEnumeratingWithState:&v30 objects:v38 count:16];
        id v14 = v26;
      }

      while (v26);
    }

    else
    {
      uint64_t v15 = 0LL;
    }

    id v27 = [[ASDPurgeableAppResponse alloc] initWithPurgeableSize:v15 purgeableApps:v11];
  }

  else
  {
    id v27 = 0LL;
  }

  return v27;
}

uint64_t sub_10019FCA8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  if (a1 && ([v3 applicationDSID] || objc_msgSend(v4, "applicationDownloaderDSID")))
  {
    id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 iTunesMetadata]);
    if (![v5 storeItemIdentifier]
      || ([v4 isDeletableSystemApplication] & 1) != 0
      || ([v4 isPlaceholder] & 1) != 0
      || ![v4 isDeletable]
      || ([v4 isBeta] & 1) != 0
      || ([v4 isPlaceholder] & 1) != 0
      || ([v4 isProfileValidated] & 1) != 0
      || ([v4 applicationHasMIDBasedSINF] & 1) != 0)
    {
      uint64_t v6 = 0LL;
    }

    else
    {
      uint64_t v6 = [v4 isLaunchProhibited] ^ 1;
    }
  }

  else
  {
    uint64_t v6 = 0LL;
  }

  return v6;
}

void sub_10019FD84(uint64_t a1, void *a2)
{
  if (a1)
  {
    id v2 = a2;
    id v3 = (void *)objc_claimAutoreleasedReturnValue(+[LaunchHistory shared](&OBJC_CLASS____TtC9appstored13LaunchHistory, "shared"));
    id v4 = (id)objc_claimAutoreleasedReturnValue([v3 syncIfNeededWithLogKey:v2]);
  }

id sub_10019FDE8(void *a1, void *a2, void *a3)
{
  id v4 = a2;
  id v5 = a3;
  unint64_t v258 = v4;
  id v6 = [v4 urgency];
  id v7 = v5;
  id v8 = sub_1001A39B8((uint64_t)v6);
  id v279 = (id)objc_claimAutoreleasedReturnValue(v8);
  id newValue = v7;
  uint64_t v9 = ASDLogHandleForCategory(20LL);
  id v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    if (v279)
    {
      [v279 timeIntervalSince1970];
      uint64_t v12 = (uint64_t)v11;
    }

    else
    {
      uint64_t v12 = 0LL;
    }

    *(_DWORD *)__int128 buf = 138412802;
    *(void *)&uint8_t buf[4] = newValue;
    *(_WORD *)&buf[12] = 2048;
    *(void *)&buf[14] = v12;
    *(_WORD *)&buf[22] = 2048;
    unint64_t v292 = v6;
    _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "[%@] Getting app launch history from %{time_t}ld urgency: %ld",  buf,  0x20u);
  }

  id v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](&OBJC_CLASS___NSMutableDictionary, "dictionary"));
  id v14 = objc_alloc(&OBJC_CLASS___NSDateInterval);
  uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate distantPast](&OBJC_CLASS___NSDate, "distantPast"));
  uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate distantFuture](&OBJC_CLASS___NSDate, "distantFuture"));
  uint64_t v271 = -[NSDateInterval initWithStartDate:endDate:](v14, "initWithStartDate:endDate:", v15, v16);

  id v17 = (void *)objc_claimAutoreleasedReturnValue(+[LaunchHistory shared](&OBJC_CLASS____TtC9appstored13LaunchHistory, "shared"));
  uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue([v17 getLaunchesWithLogKey:newValue dateInterval:v271]);

  __int128 v296 = 0u;
  __int128 v297 = 0u;
  __int128 v294 = 0u;
  __int128 v295 = 0u;
  id obj = v18;
  id v19 = [obj countByEnumeratingWithState:&v294 objects:buf count:16];
  if (v19)
  {
    uint64_t v20 = *(void *)v295;
    do
    {
      id v21 = 0LL;
      do
      {
        if (*(void *)v295 != v20) {
          objc_enumerationMutation(obj);
        }
        id v22 = *(void **)(*((void *)&v294 + 1) + 8LL * (void)v21);
        else {
          id v23 = sub_1002CFD24(v22);
        }
        uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue(v23);
        if (v24)
        {
          unsigned __int8 v25 = (void *)objc_claimAutoreleasedReturnValue([v13 objectForKeyedSubscript:v24]);
          BOOL v26 = v25 == 0LL;

          if (v26)
          {
            id v27 = objc_alloc(&OBJC_CLASS___UsedApp);
            id v29 = v24;
            if (v27)
            {
              __int128 v30 = -[UsedApp init](v27, "init");
              id v27 = v30;
              if (v30) {
                objc_storeStrong((id *)&v30->_bundleID, v24);
              }
            }

            [v13 setObject:v27 forKeyedSubscript:v29];
          }

          else
          {
            id v27 = (UsedApp *)objc_claimAutoreleasedReturnValue([v13 objectForKeyedSubscript:v24]);
          }

          unsigned int v31 = sub_1002CFE64(v22);
          id v32 = sub_1002CFDA8(v22);
          __int128 v33 = (void *)objc_claimAutoreleasedReturnValue(v32);
          id v35 = v33;
          if (v27)
          {
            if (v31) {
              ptrdiff_t v36 = 24LL;
            }
            else {
              ptrdiff_t v36 = 32LL;
            }
            objc_setProperty_nonatomic_copy(v27, v34, v33, v36);

            v27->_launchEventSource = sub_1002D011C(v22);
          }

          else
          {

            sub_1002D011C(v22);
            id v27 = 0LL;
          }
        }

        else
        {
          uint64_t v28 = ASDLogHandleForCategory(20LL);
          id v27 = (UsedApp *)objc_claimAutoreleasedReturnValue(v28);
          if (os_log_type_enabled((os_log_t)v27, OS_LOG_TYPE_DEBUG))
          {
            *(_DWORD *)uint64_t v284 = 138412546;
            *(void *)&v284[4] = newValue;
            *(_WORD *)&v284[12] = 2114;
            *(void *)&v284[14] = v22;
            _os_log_debug_impl( (void *)&_mh_execute_header,  (os_log_t)v27,  OS_LOG_TYPE_DEBUG,  "[%@] Skipping entry with no bundleID: %{public}@",  v284,  0x16u);
          }
        }

        id v21 = (char *)v21 + 1;
      }

      while (v19 != v21);
      id v37 = [obj countByEnumeratingWithState:&v294 objects:buf count:16];
      id v19 = v37;
    }

    while (v37);
  }

  __int128 v289 = 0u;
  __int128 v290 = 0u;
  __int128 v287 = 0u;
  __int128 v288 = 0u;
  __int128 v38 = (void *)objc_claimAutoreleasedReturnValue([v13 objectEnumerator]);
  id v39 = [v38 countByEnumeratingWithState:&v287 objects:v284 count:16];
  if (v39)
  {
    uint64_t v40 = *(void *)v288;
    do
    {
      id v41 = 0LL;
      do
      {
        if (*(void *)v288 != v40) {
          objc_enumerationMutation(v38);
        }
        id v42 = *(void **)(*((void *)&v287 + 1) + 8LL * (void)v41);
        if (v42)
        {
          double v44 = (id *)(v42 + 3);
          __int16 v43 = (void *)v42[3];
          if (!v43) {
            goto LABEL_40;
          }
          id v45 = (void *)v42[4];
          if (v45)
          {
            if (objc_msgSend(v45, "compare:") == (id)1) {
LABEL_40:
            }
              double v44 = (id *)(v42 + 4);
            id v46 = *v44;
            if (!v46)
            {
LABEL_46:
              uint64_t v47 = 4LL;
              goto LABEL_47;
            }
          }

          else
          {
            id v46 = v43;
          }

          if ([v279 compare:v46] != (id)1) {
            goto LABEL_46;
          }
          uint64_t v47 = 2LL;
LABEL_47:
          v42[5] = v47;
          goto LABEL_48;
        }

        id v46 = 0LL;
LABEL_48:
        uint64_t v48 = ASDLogHandleForCategory(20LL);
        __int128 v49 = (os_log_s *)objc_claimAutoreleasedReturnValue(v48);
        if (os_log_type_enabled(v49, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)unint64_t v298 = 138412546;
          id v299 = newValue;
          __int16 v300 = 2114;
          unint64_t v301 = v42;
          _os_log_debug_impl((void *)&_mh_execute_header, v49, OS_LOG_TYPE_DEBUG, "[%@] %{public}@", v298, 0x16u);
        }

        id v41 = (char *)v41 + 1;
      }

      while (v39 != v41);
      id v50 = [v38 countByEnumeratingWithState:&v287 objects:v284 count:16];
      id v39 = v50;
    }

    while (v50);
  }

  id v253 = [v13 copy];
  id v255 = (id)objc_claimAutoreleasedReturnValue(+[NSDate dateWithTimeIntervalSinceNow:](&OBJC_CLASS___NSDate, "dateWithTimeIntervalSinceNow:", -604800.0));
  obja = objc_opt_new(&OBJC_CLASS___PurgeContext);
  id v51 = sub_10022D6AC((uint64_t)&OBJC_CLASS___AppLedger);
  __int128 v52 = (void *)objc_claimAutoreleasedReturnValue(v51);
  id v53 = sub_10022E158((uint64_t)v52);
  __int128 v55 = (void *)objc_claimAutoreleasedReturnValue(v53);
  if (obja) {
    objc_setProperty_nonatomic_copy(obja, v54, v55, 48LL);
  }

  unsigned __int8 v56 = [v258 skipLaunchCheck];
  if (obja)
  {
    obja->_skipLaunchCheck = v56;
    objc_setProperty_nonatomic_copy(obja, v57, newValue, 40LL);
    obja->_beyondGracePeriod = sub_1001A3D28(newValue);
  }

  else
  {
    sub_1001A3D28(newValue);
  }

  unint64_t v257 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableSet set](&OBJC_CLASS___NSMutableSet, "set"));
  uint64_t v254 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableSet set](&OBJC_CLASS___NSMutableSet, "set"));
  __int128 v58 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableSet set](&OBJC_CLASS___NSMutableSet, "set"));
  id v59 = sub_100255630((uint64_t)&OBJC_CLASS___URLBag);
  __int128 v60 = (void *)objc_claimAutoreleasedReturnValue(v59);
  id v61 = sub_100256C3C(v60, @"appPurgeBlacklist", &__NSArray0__struct);
  id v62 = (void *)objc_claimAutoreleasedReturnValue(v61);

  if (v62 && [v62 count]) {
    [v58 addObjectsFromArray:v62];
  }
  objc_opt_self(&OBJC_CLASS___AppPurgeCoordinator);
  id v63 = sub_1002F8B84((uint64_t)&OBJC_CLASS___AppDefaultsManager, @"OffloadDenyList");
  id v64 = (void *)objc_claimAutoreleasedReturnValue(v63);
  id v65 = v64;
  if (v64 && [v64 count]) {
    [v58 addObjectsFromArray:v65];
  }
  [v58 addObject:@"com.apple.facetime"];
  [v58 addObject:@"com.apple.Bridge"];
  [v58 addObject:@"com.apple.tv"];
  [v58 addObject:@"com.apple.Research"];
  uint64_t v66 = a1;
  objc_sync_enter(v66);
  unint64_t v262 = v66;
  if ([v66[2] count]) {
    [v58 addObjectsFromArray:v66[2]];
  }
  objc_sync_exit(v66);

  id v67 = [v58 copy];
  if ([v67 count]) {
    [v257 unionSet:v67];
  }
  unint64_t v252 = v67;
  if (obja)
  {
    objc_setProperty_nonatomic_copy(obja, v68, v255, 24LL);
    objc_setProperty_nonatomic_copy(obja, v69, &__NSArray0__struct, 32LL);
    __int128 v70 = (void *)objc_claimAutoreleasedReturnValue([v257 allObjects]);
    id v71 = obja;
    objc_setProperty_nonatomic_copy(obja, v72, v70, 16LL);
  }

  else
  {
    __int128 v70 = (void *)objc_claimAutoreleasedReturnValue([v257 allObjects]);
    id v71 = 0LL;
  }

  id v74 = (void *)objc_claimAutoreleasedReturnValue([v254 allObjects]);
  if (v71) {
    objc_setProperty_nonatomic_copy(obja, v73, v74, 64LL);
  }

  id v256 = newValue;
  __int16 v75 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableSet set](&OBJC_CLASS___NSMutableSet, "set"));
  id v76 = sub_100255630((uint64_t)&OBJC_CLASS___URLBag);
  __int16 v77 = (void *)objc_claimAutoreleasedReturnValue(v76);
  id v78 = sub_1002568AC(v77, @"appPurgePluginBlacklist", &__NSArray0__struct, 0);
  id v79 = (void *)objc_claimAutoreleasedReturnValue(v78);

  if (v79 && [v79 count]) {
    [v75 addObjectsFromArray:v79];
  }
  objc_opt_self(&OBJC_CLASS___AppPurgeCoordinator);
  id v80 = sub_1002F8B84((uint64_t)&OBJC_CLASS___AppDefaultsManager, @"OffloadPluginDenyList");
  uint64_t v81 = (void *)objc_claimAutoreleasedReturnValue(v80);
  id v82 = v81;
  if (v81 && [v81 count]) {
    [v75 addObjectsFromArray:v82];
  }
  [v75 addObject:@"com.apple.Safari.content-blocker"];
  [v75 addObject:@"com.apple.Safari.web-extension"];
  [v75 addObject:@"com.apple.networkextension.packet-tunnel"];
  [v75 addObject:@"com.apple.callkit.call-directory"];
  uint64_t v83 = ASDLogHandleForCategory(20LL);
  uint64_t v84 = (os_log_s *)objc_claimAutoreleasedReturnValue(v83);
  if (os_log_type_enabled(v84, OS_LOG_TYPE_INFO))
  {
    unint64_t v85 = (void *)objc_claimAutoreleasedReturnValue([v75 allObjects]);
    uint64_t v86 = (void *)objc_claimAutoreleasedReturnValue([v85 componentsJoinedByString:@","]);
    *(_DWORD *)__int128 buf = 138412546;
    *(void *)&uint8_t buf[4] = v256;
    *(_WORD *)&buf[12] = 2114;
    *(void *)&buf[14] = v86;
    _os_log_impl( (void *)&_mh_execute_header,  v84,  OS_LOG_TYPE_INFO,  "[%@] Updating plugin deny list to %{public}@",  buf,  0x16u);
  }

  id v87 = (void *)objc_claimAutoreleasedReturnValue([v75 allObjects]);
  if (obja)
  {
    unint64_t v89 = obja;
    objc_setProperty_nonatomic_copy(obja, v88, v87, 72LL);

    objc_setProperty_nonatomic_copy(obja, v90, v253, 88LL);
  }

  else
  {

    unint64_t v89 = 0LL;
  }

  BOOL v91 = v89 == 0LL;
  id v92 = sub_1001A39B8((uint64_t)[v258 urgency]);
  id v93 = (void *)objc_claimAutoreleasedReturnValue(v92);
  unint64_t v95 = v93;
  if (v91)
  {

    objc_sync_enter(v262);
    id v96 = obja;
  }

  else
  {
    id v96 = obja;
    objc_setProperty_nonatomic_copy(obja, v94, v93, 96LL);

    id v97 = v262;
    objc_sync_enter(v97);
    objc_setProperty_nonatomic_copy(obja, v98, v97[3], 56LL);
    objc_setProperty_nonatomic_copy(obja, v99, v97[4], 80LL);
  }

  objc_sync_exit(v262);

  [v258 urgency];
  unint64_t v280 = v96;
  uint64_t v100 = ASDLogHandleForCategory(20LL);
  unint64_t v101 = (os_log_s *)objc_claimAutoreleasedReturnValue(v100);
  if (os_log_type_enabled(v101, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v102 = (uint64_t)obja;
    if (obja)
    {
      id v103 = v280[5];
      id v104 = v280[3];
      if (v104)
      {
        [v104 timeIntervalSince1970];
        uint64_t v102 = (uint64_t)v105;
      }

      else
      {
        uint64_t v102 = 0LL;
      }

      id v106 = v103;
    }

    else
    {
      id v103 = 0LL;
      id v106 = 0LL;
    }

    *(_DWORD *)__int128 buf = 138412546;
    *(void *)&uint8_t buf[4] = v106;
    *(_WORD *)&buf[12] = 2048;
    *(void *)&buf[14] = v102;
    _os_log_impl( (void *)&_mh_execute_header,  v101,  OS_LOG_TYPE_DEFAULT,  "[%@] Checking for purgeable apps with last modified grace period date: %{time_t}ld",  buf,  0x16u);
  }

  unint64_t v259 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
  id v107 = sub_10028EBEC((uint64_t)&OBJC_CLASS___LSEnumerator);
  unint64_t v108 = (void *)objc_claimAutoreleasedReturnValue(v107);
  __int128 v289 = 0u;
  __int128 v290 = 0u;
  __int128 v287 = 0u;
  __int128 v288 = 0u;
  id v260 = v108;
  id v263 = [v260 countByEnumeratingWithState:&v287 objects:v284 count:16];
  if (v263)
  {
    uint64_t v261 = *(void *)v288;
    do
    {
      uint64_t v109 = 0LL;
      do
      {
        if (*(void *)v288 != v261)
        {
          uint64_t v110 = v109;
          objc_enumerationMutation(v260);
          uint64_t v109 = v110;
        }

        uint64_t v267 = v109;
        __int128 v111 = *(void **)(*((void *)&v287 + 1) + 8 * v109);
        context = objc_autoreleasePoolPush();
        if (sub_10019FCA8((uint64_t)v262, v111))
        {
          id v270 = v111;
          unint64_t v264 = v280;
          __int128 v112 = obja;
          if (obja) {
            __int128 v112 = (PurgeContext *)v280[11];
          }
          uint64_t v113 = v112;
          unint64_t v114 = (void *)objc_claimAutoreleasedReturnValue([v270 bundleIdentifier]);
          unint64_t v265 = (void *)objc_claimAutoreleasedReturnValue(-[PurgeContext objectForKey:](v113, "objectForKey:", v114));

          id v115 = v265;
          if (v265 && (!obja || !*((_BYTE *)v280 + 9)) && v265[5] == 4LL)
          {
            if (v265[3])
            {
              unint64_t v116 = (void *)v265[4];
              if (v116)
              {
                id v117 = objc_msgSend(v116, "compare:");
                __int128 v118 = @"Has extension usage in window";
                id v115 = v265;
                if (v117 == (id)1) {
                  goto LABEL_105;
                }
              }

              else
              {
                __int128 v118 = @"Has extension usage in window";
              }
            }

            else
            {
LABEL_105:
              __int128 v118 = @"Has usage in window";
              if (*((_BYTE *)v115 + 8) == 8) {
                __int128 v118 = @"Has siri execution usage in window";
              }
            }

            uint64_t v272 = v118;
            uint64_t v273 = (void *)objc_claimAutoreleasedReturnValue([v270 bundleIdentifier]);
            sub_1001A3F18(@"Skipping", v272, v264, v273);
            unint64_t v154 = 0LL;
            BOOL v142 = @"None";
LABEL_179:

            if (v154) {
              [v259 addObject:v154];
            }

            goto LABEL_182;
          }

          uint64_t v273 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
          uint64_t v272 = (__CFString *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
          uint64_t v266 = (void *)objc_claimAutoreleasedReturnValue([v270 applicationExtensionRecords]);
          if (![v266 count]) {
            goto LABEL_133;
          }
          __int128 v119 = obja;
          if (obja) {
            __int128 v119 = (PurgeContext *)v280[9];
          }
          __int128 v120 = v119;
          if (-[PurgeContext count](v120, "count"))
          {

LABEL_116:
            __int128 v296 = 0u;
            __int128 v297 = 0u;
            __int128 v294 = 0u;
            __int128 v295 = 0u;
            id newValuea = v266;
            id v123 = [newValuea countByEnumeratingWithState:&v294 objects:buf count:16];
            if (!v123) {
              goto LABEL_132;
            }
            uint64_t v124 = *(void *)v295;
            while (2)
            {
              uint64_t v125 = 0LL;
LABEL_119:
              if (*(void *)v295 != v124) {
                objc_enumerationMutation(newValuea);
              }
              __int128 v126 = *(void **)(*((void *)&v294 + 1) + 8 * v125);
              __int128 v127 = (void *)objc_claimAutoreleasedReturnValue([v126 extensionPointRecord]);
              unint64_t v128 = (void *)objc_claimAutoreleasedReturnValue([v127 name]);
              if (obja)
              {
                id v129 = v280[8];
                if (v129)
                {
                  unint64_t v130 = v129;
                  id v131 = v280[8];
                  __int16 v132 = (void *)objc_claimAutoreleasedReturnValue([v126 bundleIdentifier]);
                  unsigned int v133 = [v131 containsObject:v132];

                  if (v133)
                  {
                    unint64_t v134 = (void *)objc_claimAutoreleasedReturnValue([v126 bundleIdentifier]);
                    -[__CFString addObject:](v272, "addObject:", v134);
                  }
                }
              }

              else if ([0 containsObject:v128])
              {
LABEL_123:
                [v273 addObject:v128];
              }

              if (v123 == (id)++v125)
              {
                id v135 = [newValuea countByEnumeratingWithState:&v294 objects:buf count:16];
                id v123 = v135;
                if (!v135)
                {
LABEL_132:

                  goto LABEL_133;
                }

                continue;
              }

              goto LABEL_119;
            }
          }

          if (obja) {
            id v121 = v280[8];
          }
          else {
            id v121 = 0LL;
          }
          BOOL v122 = [v121 count] == 0;

          if (!v122) {
            goto LABEL_116;
          }
LABEL_133:
          unint64_t v136 = obja;
          if (obja) {
            unint64_t v136 = (PurgeContext *)v280[2];
          }
          id v137 = v136;
          if (-[PurgeContext count](v137, "count"))
          {
            id v138 = obja;
            if (obja) {
              id v138 = (PurgeContext *)v280[2];
            }
            unint64_t v139 = v138;
            uint64_t v140 = (void *)objc_claimAutoreleasedReturnValue([v270 bundleIdentifier]);
            unsigned __int8 v141 = -[PurgeContext containsObject:](v139, "containsObject:", v140);

            BOOL v142 = @"In app deny list";
            if ((v141 & 1) != 0) {
              goto LABEL_177;
            }
          }

          else
          {
          }

          unint64_t v143 = obja;
          if (obja) {
            unint64_t v143 = (PurgeContext *)v280[4];
          }
          unint64_t v144 = v143;
          if (-[PurgeContext count](v144, "count"))
          {
            uint64_t v145 = obja;
            if (obja) {
              uint64_t v145 = (PurgeContext *)v280[4];
            }
            uint64_t v146 = v145;
            unint64_t v147 = (void *)objc_claimAutoreleasedReturnValue([v270 bundleIdentifier]);
            unsigned __int8 v148 = -[PurgeContext containsObject:](v146, "containsObject:", v147);

            BOOL v142 = @"Is default for a category";
            if ((v148 & 1) != 0) {
              goto LABEL_177;
            }
          }

          else
          {
          }

          if (-[__CFString count](v272, "count"))
          {
            __int128 v149 = (void *)objc_claimAutoreleasedReturnValue(-[__CFString componentsJoinedByString:](v272, "componentsJoinedByString:", @", "));
            unint64_t v150 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Has deny list extension(s) [%@]",  v149));

            BOOL v142 = v150;
            if (!obja) {
              goto LABEL_177;
            }
LABEL_151:
            if (!*((_BYTE *)v280 + 9))
            {
              BOOL v142 = v150;
              goto LABEL_177;
            }

            uint64_t v151 = 5LL;
            BOOL v142 = @"Ignoring last launch attempt";
LABEL_153:

            uint64_t v152 = objc_alloc(&OBJC_CLASS___PurgeableApp);
            unint64_t v153 = (void *)objc_claimAutoreleasedReturnValue([v270 bundleIdentifier]);
            unint64_t v154 = sub_1001B64DC((id *)&v152->super.isa, v153);

            if ([v270 applicationDSID])
            {
              uint64_t v156 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedLongLong:]( NSNumber,  "numberWithUnsignedLongLong:",  [v270 applicationDSID]));
              if (v154) {
                objc_setProperty_nonatomic_copy(v154, v155, v156, 72LL);
              }
            }

            if ([v270 applicationDownloaderDSID])
            {
              unint64_t v158 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedLongLong:]( NSNumber,  "numberWithUnsignedLongLong:",  [v270 applicationDownloaderDSID]));
              if (v154) {
                objc_setProperty_nonatomic_copy(v154, v157, v158, 64LL);
              }
            }

            unint64_t v159 = (void *)objc_claimAutoreleasedReturnValue([v270 diskUsage]);
            unint64_t v160 = (void *)objc_claimAutoreleasedReturnValue([v159 staticUsage]);
            unint64_t v162 = v160;
            if (v154)
            {
              objc_setProperty_nonatomic_copy(v154, v161, v160, 16LL);

              objc_setProperty_nonatomic_copy(v154, v163, v142, 48LL);
              v154[5] = (id)v151;
            }

            else
            {
            }

            unint64_t v164 = (void *)objc_claimAutoreleasedReturnValue([v270 iTunesMetadata]);
            id v165 = [v164 storeItemIdentifier];

            if (v165)
            {
              unint64_t v166 = (void *)objc_claimAutoreleasedReturnValue([v270 iTunesMetadata]);
              unint64_t v168 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedLongLong:]( NSNumber,  "numberWithUnsignedLongLong:",  [v166 storeItemIdentifier]));
              if (v154) {
                objc_setProperty_nonatomic_copy(v154, v167, v168, 56LL);
              }
            }

            unint64_t v169 = (void *)objc_claimAutoreleasedReturnValue([v270 bundleIdentifier]);
            sub_1001A3F18(@"Adding", v142, v264, v169);
LABEL_178:

            goto LABEL_179;
          }

          if ([v273 count])
          {
            uint64_t v170 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v273, "componentsJoinedByString:", @", "));
            BOOL v142 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Has deny list protocol extension(s) [%@]",  v170));

            goto LABEL_177;
          }

          unint64_t v171 = obja;
          if (obja) {
            unint64_t v171 = (PurgeContext *)v280[7];
          }
          uint64_t v172 = v171;
          unint64_t v173 = (void *)objc_claimAutoreleasedReturnValue([v270 bundleIdentifier]);
          unsigned __int8 v174 = -[PurgeContext containsObject:](v172, "containsObject:", v173);

          BOOL v142 = @"App is managed";
          if ((v174 & 1) != 0) {
            goto LABEL_177;
          }
          unint64_t v175 = obja;
          if (obja) {
            unint64_t v175 = (PurgeContext *)v280[10];
          }
          unint64_t v176 = v175;
          uint64_t v177 = (void *)objc_claimAutoreleasedReturnValue([v270 bundleIdentifier]);
          unsigned __int8 v178 = -[PurgeContext containsObject:](v176, "containsObject:", v177);

          BOOL v142 = @"Has watch app";
          if ((v178 & 1) != 0)
          {
LABEL_177:
            unint64_t v169 = (void *)objc_claimAutoreleasedReturnValue([v270 bundleIdentifier]);
            sub_1001A3F18(@"Skipping", v142, v264, v169);
            unint64_t v154 = 0LL;
            goto LABEL_178;
          }

          unint64_t v179 = obja;
          uint64_t v180 = v280;
          if (!obja || !*((_BYTE *)v280 + 8))
          {
            id v204 = [v266 count];
            unint64_t v179 = obja;
            uint64_t v180 = v280;
            if (v204)
            {
              BOOL v142 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( NSString,  "stringWithFormat:",  @"Is within grace period with %ld extension(s)",  [v266 count]));
              goto LABEL_177;
            }
          }

          unint64_t v181 = v265;
          if (v265 && v265[5] == 2LL)
          {
            __int128 v182 = (void *)v265[3];
            if (!v182) {
              goto LABEL_193;
            }
            unint64_t v183 = (void *)v265[4];
            if (v183)
            {
              id v184 = objc_msgSend(v183, "compare:");
              unint64_t v179 = obja;
              unint64_t v181 = v265;
              if (v184 == (id)1)
              {
LABEL_193:
                BOOL v185 = v179 == 0LL;
                if (*((_BYTE *)v181 + 8) == 8) {
                  uint64_t v186 = @"Last siri execution launch";
                }
                else {
                  uint64_t v186 = @"Last Launch";
                }
                id v187 = (id)v181[4];
                uint64_t v188 = v186;
                id v189 = sub_1001E83D8(v187);
                unint64_t v150 = (__CFString *)objc_claimAutoreleasedReturnValue(v189);
                if (v185) {
                  id v190 = 0LL;
                }
                else {
                  id v190 = v280[12];
                }
                id v191 = sub_1001E83D8(v190);
                unint64_t v192 = (void *)objc_claimAutoreleasedReturnValue(v191);
                BOOL v142 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"%@ %@ outside window cutoff %@",  v188,  v150,  v192));

                uint64_t v151 = 4LL;
LABEL_235:

                goto LABEL_153;
              }

              __int128 v182 = (void *)v265[3];
            }

            BOOL v217 = v179 == 0LL;
            id v187 = v182;
            id v218 = sub_1001E83D8(v187);
            unint64_t v150 = (__CFString *)objc_claimAutoreleasedReturnValue(v218);
            if (v217) {
              id v219 = 0LL;
            }
            else {
              id v219 = v280[12];
            }
            id v220 = sub_1001E83D8(v219);
            unint64_t v192 = (void *)objc_claimAutoreleasedReturnValue(v220);
            BOOL v142 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Last extension launch %@ outside window cutoff %@",  v150,  v192));
            uint64_t v151 = 3LL;
            goto LABEL_235;
          }

          if (!v179)
          {
            BOOL v142 = @"Usage unknown within grace period";
            goto LABEL_177;
          }

          if (!*((_BYTE *)v180 + 8))
          {
            unint64_t v150 = @"Usage unknown within grace period";
            goto LABEL_151;
          }

          unint64_t v193 = (void *)objc_claimAutoreleasedReturnValue([v270 bundleIdentifier]);
          uint64_t v194 = (void *)objc_claimAutoreleasedReturnValue([v270 URL]);
          id v195 = v280[5];
          id v196 = v193;
          id v197 = v194;
          unint64_t v198 = v264;
          id v199 = v195;
          uint64_t v200 = (void *)objc_claimAutoreleasedReturnValue([v280[6] objectForKeyedSubscript:v196]);
          uint64_t v201 = v200;
          if (v200)
          {
            uint64_t v202 = objc_claimAutoreleasedReturnValue([v200 lastUserInitiatedInstall]);
            unint64_t v203 = (void *)v202;
            if (v202)
            {
              unint64_t v150 = (__CFString *)*(id *)(v202 + 8);
LABEL_231:

              id v187 = v280[3];
              objc_opt_self(&OBJC_CLASS___AppPurgeCoordinator);
              id v226 = sub_1002F8C58((uint64_t)&OBJC_CLASS___AppDefaultsManager, @"OffloadRecentInstallCutoffDate");
              char v227 = (void *)objc_claimAutoreleasedReturnValue(v226);

              if (v227)
              {
                objc_opt_self(&OBJC_CLASS___AppPurgeCoordinator);
                id v228 = sub_1002F8C58((uint64_t)&OBJC_CLASS___AppDefaultsManager, @"OffloadRecentInstallCutoffDate");
                uint64_t v229 = objc_claimAutoreleasedReturnValue(v228);

                id v187 = (id)v229;
              }

              BOOL v230 = [v187 compare:v150] == (id)-1;
              id v231 = sub_1001E83D8(v150);
              unint64_t v192 = (void *)objc_claimAutoreleasedReturnValue(v231);
              id v232 = sub_1001E83D8(v187);
              uint64_t v233 = objc_claimAutoreleasedReturnValue(v232);
              uint64_t v234 = (void *)v233;
              if (v230)
              {
                uint64_t v235 = objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Registered date %@ less than recent install cut off %@",  v192,  v233));

                unint64_t v150 = (__CFString *)v235;
                goto LABEL_151;
              }

              BOOL v142 = (__CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Registered date %@ greater than recent install cut off %@",  v192,  v233));

              uint64_t v151 = 2LL;
              goto LABEL_235;
            }
          }

          id v283 = 0LL;
          unint64_t v203 = (void *)objc_claimAutoreleasedReturnValue( +[LSBundleRecord bundleRecordWithApplicationIdentifier:error:]( &OBJC_CLASS___LSBundleRecord,  "bundleRecordWithApplicationIdentifier:error:",  v196,  &v283));
          id v205 = v283;
          if (v205)
          {
            uint64_t v206 = ASDLogHandleForCategory(20LL);
            unint64_t v207 = (os_log_s *)objc_claimAutoreleasedReturnValue(v206);
            if (os_log_type_enabled(v207, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)unint64_t v298 = 138412802;
              id v299 = v199;
              __int16 v300 = 2114;
              unint64_t v301 = v196;
              __int16 v302 = 2114;
              id v303 = v205;
              _os_log_error_impl( (void *)&_mh_execute_header,  v207,  OS_LOG_TYPE_ERROR,  "[%@] [%{public}@] Failed to find registered date with error: %{public}@",  v298,  0x20u);
            }
          }

          else
          {
            unint64_t v150 = (__CFString *)objc_claimAutoreleasedReturnValue([v203 registrationDate]);
            if (v150) {
              goto LABEL_231;
            }
          }

          uint64_t v208 = ASDLogHandleForCategory(20LL);
          uint64_t v209 = (os_log_s *)objc_claimAutoreleasedReturnValue(v208);
          if (os_log_type_enabled(v209, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)unint64_t v298 = 138412546;
            id v299 = v199;
            __int16 v300 = 2114;
            unint64_t v301 = v196;
            _os_log_impl( (void *)&_mh_execute_header,  v209,  OS_LOG_TYPE_DEFAULT,  "[%@] [%{public}@] Falling back to file system last modified date",  v298,  0x16u);
          }

          id v281 = 0LL;
          id v282 = 0LL;
          unsigned __int8 v210 = [v197 getResourceValue:&v282 forKey:NSURLAttributeModificationDateKey error:&v281];
          id v211 = v282;
          id newValueb = v281;

          uint64_t v212 = v211;
          if ((v210 & 1) != 0)
          {
            unint64_t v213 = (void *)objc_claimAutoreleasedReturnValue(+[NSTimeZone localTimeZone](&OBJC_CLASS___NSTimeZone, "localTimeZone"));
            id v214 = [v213 secondsFromGMT];

            unsigned int v216 = (void *)objc_claimAutoreleasedReturnValue([v212 dateByAddingTimeInterval:(double)(uint64_t)v214]);
          }

          else
          {
            uint64_t v221 = ASDLogHandleForCategory(20LL);
            unsigned int v222 = (os_log_s *)objc_claimAutoreleasedReturnValue(v221);
            if (os_log_type_enabled(v222, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)unint64_t v298 = 138412802;
              id v299 = v199;
              __int16 v300 = 2114;
              unint64_t v301 = v196;
              __int16 v302 = 2114;
              id v303 = newValueb;
              _os_log_impl( (void *)&_mh_execute_header,  v222,  OS_LOG_TYPE_DEFAULT,  "[%@] Error finding modified date for bundleID: %{public}@ error: %{public}@",  v298,  0x20u);
            }

            unsigned int v216 = 0LL;
          }

          uint64_t v223 = objc_opt_class(&OBJC_CLASS___NSDate, v215);
          id v224 = v216;
          if ((objc_opt_isKindOfClass(v224, v223) & 1) != 0) {
            id v225 = v224;
          }
          else {
            id v225 = 0LL;
          }

          if (v225) {
            unint64_t v150 = (__CFString *)v224;
          }
          else {
            unint64_t v150 = 0LL;
          }

          goto LABEL_231;
        }

LABEL_182:
        objc_autoreleasePoolPop(context);
        uint64_t v109 = v267 + 1;
      }

      while ((id)(v267 + 1) != v263);
      id v236 = [v260 countByEnumeratingWithState:&v287 objects:v284 count:16];
      id v263 = v236;
    }

    while (v236);
  }

  id v237 = [v259 copy];
  if (!obja)
  {
    unint64_t v239 = objc_alloc(&OBJC_CLASS___NSSortDescriptor);
    goto LABEL_251;
  }

  int v238 = *((unsigned __int8 *)v280 + 9);
  unint64_t v239 = objc_alloc(&OBJC_CLASS___NSSortDescriptor);
  if (!v238)
  {
LABEL_251:
    unint64_t v247 = -[NSSortDescriptor initWithKey:ascending:](v239, "initWithKey:ascending:", 0LL, 1LL);
    unint64_t v248 = objc_alloc(&OBJC_CLASS___NSSortDescriptor);
    *(void *)uint64_t v284 = _NSConcreteStackBlock;
    *(void *)&v284[8] = 3221225472LL;
    *(void *)&v284[16] = sub_1001A4200;
    unint64_t v285 = &unk_1003EA7C0;
    uint64_t v286 = v247;
    __int128 v249 = v247;
    unint64_t v240 = -[NSSortDescriptor initWithKey:ascending:comparator:]( v248,  "initWithKey:ascending:comparator:",  0LL,  0LL,  v284);

    *(void *)&__int128 v287 = v240;
    uint64_t v244 = -[NSSortDescriptor initWithKey:ascending:comparator:]( objc_alloc(&OBJC_CLASS___NSSortDescriptor),  "initWithKey:ascending:comparator:",  0LL,  0LL,  &stru_1003EA800);
    *((void *)&v287 + 1) = v244;
    uint64_t v246 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v287, 2LL));
    goto LABEL_252;
  }

  unint64_t v240 = -[NSSortDescriptor initWithKey:ascending:comparator:]( v239,  "initWithKey:ascending:comparator:",  0LL,  1LL,  &stru_1003EA798);
  *(void *)&__int128 v294 = v240;
  unint64_t v241 = -[NSSortDescriptor initWithKey:ascending:]( objc_alloc(&OBJC_CLASS___NSSortDescriptor),  "initWithKey:ascending:",  0LL,  1LL);
  unint64_t v242 = objc_alloc(&OBJC_CLASS___NSSortDescriptor);
  *(void *)__int128 buf = _NSConcreteStackBlock;
  *(void *)&buf[8] = 3221225472LL;
  *(void *)&uint8_t buf[16] = sub_1001A40F0;
  unint64_t v292 = &unk_1003EA7C0;
  uint64_t v293 = v241;
  uint64_t v243 = v241;
  uint64_t v244 = -[NSSortDescriptor initWithKey:ascending:comparator:](v242, "initWithKey:ascending:comparator:", 0LL, 0LL, buf);

  *((void *)&v294 + 1) = v244;
  unint64_t v245 = -[NSSortDescriptor initWithKey:ascending:comparator:]( objc_alloc(&OBJC_CLASS___NSSortDescriptor),  "initWithKey:ascending:comparator:",  0LL,  0LL,  &stru_1003EA7E0);
  *(void *)&__int128 v295 = v245;
  uint64_t v246 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v294, 3LL));

LABEL_252:
  unint64_t v250 = (void *)objc_claimAutoreleasedReturnValue([v237 sortedArrayUsingDescriptors:v246]);

  return v250;
}

void sub_1001A1AA0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, id obj)
{
}

id sub_1001A1AC0(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v8 = a2;
  id v53 = a3;
  id v52 = a4;
  id v54 = a5;
  unsigned __int8 v56 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
  __int128 v58 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
  __int128 v77 = 0u;
  __int128 v78 = 0u;
  __int128 v75 = 0u;
  __int128 v76 = 0u;
  id v9 = v8;
  id v10 = [v9 countByEnumeratingWithState:&v75 objects:v88 count:16];
  if (v10)
  {
    uint64_t v11 = *(void *)v76;
    do
    {
      for (uint64_t i = 0LL; i != v10; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v76 != v11) {
          objc_enumerationMutation(v9);
        }
        id v13 = *(void **)(*((void *)&v75 + 1) + 8LL * (void)i);
        if (v13) {
          id v13 = (void *)v13[1];
        }
        id v14 = v13;
        [v58 addObject:v14];
      }

      id v10 = [v9 countByEnumeratingWithState:&v75 objects:v88 count:16];
    }

    while (v10);
  }

  __int128 v55 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
  __int128 v73 = 0u;
  __int128 v74 = 0u;
  __int128 v71 = 0u;
  __int128 v72 = 0u;
  id obj = v9;
  id v15 = [obj countByEnumeratingWithState:&v71 objects:v87 count:16];
  if (v15)
  {
    uint64_t v16 = 0LL;
    uint64_t v17 = *(void *)v72;
    do
    {
      uint64_t v18 = 0LL;
      do
      {
        if (*(void *)v72 != v17) {
          objc_enumerationMutation(obj);
        }
        id v19 = *(void **)(*((void *)&v71 + 1) + 8LL * (void)v18);
        dispatch_semaphore_t v20 = dispatch_semaphore_create(0LL);
        uint64_t v68 = 0LL;
        SEL v69 = &v68;
        uint64_t v70 = 0x2020000000LL;
        id v21 = objc_alloc(&OBJC_CLASS___IXApplicationIdentity);
        if (v19) {
          id v22 = (void *)v19[1];
        }
        else {
          id v22 = 0LL;
        }
        id v23 = v22;
        uint64_t v24 = -[IXApplicationIdentity initWithBundleID:](v21, "initWithBundleID:", v23);

        v65[0] = _NSConcreteStackBlock;
        v65[1] = 3221225472LL;
        v65[2] = sub_1001A39FC;
        v65[3] = &unk_1003EA730;
        id v67 = &v68;
        unsigned __int8 v25 = v20;
        uint64_t v66 = v25;
        +[IXAppInstallCoordinator removabilityForAppWithIdentity:completion:]( &OBJC_CLASS___IXAppInstallCoordinator,  "removabilityForAppWithIdentity:completion:",  v24,  v65);
        dispatch_time_t v26 = dispatch_time(0LL, 5000000000LL);
        if (dispatch_semaphore_wait(v25, v26))
        {
          uint64_t v27 = ASDLogHandleForCategory(20LL);
          uint64_t v28 = (os_log_s *)objc_claimAutoreleasedReturnValue(v27);
          if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
          {
            if (v19) {
              double v44 = (void *)v19[1];
            }
            else {
              double v44 = 0LL;
            }
            id v45 = v44;
            *(_DWORD *)__int128 buf = 138412546;
            id v80 = v54;
            __int16 v81 = 2114;
            id v82 = v45;
            _os_log_error_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_ERROR,  "[%@] [%{public}@] Timeout waiting for removability call",  buf,  0x16u);
          }
        }

        if (v69[3] != 1)
        {
          uint64_t v42 = ASDLogHandleForCategory(20LL);
          id v41 = (os_log_s *)objc_claimAutoreleasedReturnValue(v42);
          if (os_log_type_enabled(v41, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v43 = v69[3];
            *(_DWORD *)__int128 buf = 138412802;
            id v80 = v54;
            __int16 v81 = 2114;
            id v82 = v19;
            __int16 v83 = 2048;
            uint64_t v84 = v43;
            _os_log_impl( (void *)&_mh_execute_header,  v41,  OS_LOG_TYPE_DEFAULT,  "[%@] Excluding candidate: %{public}@ because removability is not possible and allowed. Removability: %ld",  buf,  0x20u);
          }

          goto LABEL_34;
        }

        if (v19) {
          id v29 = (void *)v19[2];
        }
        else {
          id v29 = 0LL;
        }
        id v30 = v29;
        id v31 = [v30 unsignedLongLongValue];

        [v56 addObject:v19];
        uint64_t v32 = ASDLogHandleForCategory(20LL);
        __int128 v33 = (os_log_s *)objc_claimAutoreleasedReturnValue(v32);
        v16 += (uint64_t)v31;
        if (os_log_type_enabled(v33, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v46 = v69[3];
          *(_DWORD *)__int128 buf = 138413058;
          id v80 = v54;
          __int16 v81 = 2114;
          id v82 = v19;
          __int16 v83 = 2048;
          uint64_t v84 = v16;
          __int16 v85 = 2048;
          uint64_t v86 = v46;
          _os_log_debug_impl( (void *)&_mh_execute_header,  v33,  OS_LOG_TYPE_DEBUG,  "[%@] [Candidate] %{public}@ purged: %lld removability: %ld",  buf,  0x2Au);
        }

        if (v19) {
          uint64_t v34 = (void *)v19[7];
        }
        else {
          uint64_t v34 = 0LL;
        }
        id v35 = v34;
        uint64_t v37 = objc_opt_class(&OBJC_CLASS___NSNumber, v36);
        char isKindOfClass = objc_opt_isKindOfClass(v35, v37);

        if ((isKindOfClass & 1) != 0)
        {
          if (v19) {
            id v39 = (void *)v19[7];
          }
          else {
            id v39 = 0LL;
          }
          id v40 = v39;
          id v41 = (os_log_s *)objc_claimAutoreleasedReturnValue([v40 stringValue]);

LABEL_34:
        }

        _Block_object_dispose(&v68, 8);
        uint64_t v18 = (char *)v18 + 1;
      }

      while (v15 != v18);
      id v47 = [obj countByEnumeratingWithState:&v71 objects:v87 count:16];
      id v15 = v47;
    }

    while (v47);
  }

  if ([v53 count])
  {
    uint64_t v48 = (void *)objc_claimAutoreleasedReturnValue(+[LSDatabaseContext sharedDatabaseContext](&OBJC_CLASS___LSDatabaseContext, "sharedDatabaseContext"));
    v59[0] = _NSConcreteStackBlock;
    v59[1] = 3221225472LL;
    v59[2] = sub_1001A3A10;
    v59[3] = &unk_1003EA758;
    id v60 = v53;
    uint64_t v61 = a1;
    id v62 = v55;
    id v63 = v52;
    id v64 = v56;
    [v48 accessUsingBlock:v59];
  }

  id v49 = [v56 copy];

  return v49;
}

void sub_1001A2144( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, char a39)
{
}

id sub_1001A2178(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  if (a1)
  {
    sub_1001A28C4(v8);
    id v10 = objc_alloc(&OBJC_CLASS___ASDPurgeableAppRequestOptions);
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v7 volume]);
    id v12 = objc_msgSend(v10, "initWithVolume:urgency:", v11, objc_msgSend(v7, "urgency"));

    objc_msgSend(v12, "setSkipLaunchCheck:", objc_msgSend(v7, "skipLaunchCheck"));
    __int128 v71 = v12;
    id v13 = sub_10019FDE8(a1, v12, v8);
    id v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
    id v15 = (void *)objc_claimAutoreleasedReturnValue([v7 desiredPurgeAmount]);
    __int128 v74 = (char *)[v15 longLongValue];

    uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v7 apps]);
    id v17 = sub_1001A1AC0((uint64_t)a1, v14, v16, v9, v8);
    uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(v17);

    id v19 = v18;
    if ([v18 count])
    {
      id v70 = v7;
      unsigned int v20 = [v7 offloadOnly];
      id v67 = v19;
      id v21 = v19;
      id v69 = v8;
      id v72 = v8;
      id v68 = v9;
      id v22 = v9;
      __int128 v73 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
      __int128 v84 = 0u;
      __int128 v85 = 0u;
      __int128 v86 = 0u;
      __int128 v87 = 0u;
      id obj = v21;
      id v23 = [obj countByEnumeratingWithState:&v84 objects:v88 count:16];
      if (v23)
      {
        id v24 = v23;
        id v66 = v22;
        id v80 = 0LL;
        uint64_t v25 = *(void *)v85;
        if (v20) {
          uint64_t v26 = 1LL;
        }
        else {
          uint64_t v26 = 3LL;
        }
        uint64_t v75 = v26;
        unsigned int v78 = v20 ^ 1;
        uint64_t v27 = &OBJC_CLASS___NSRegularExpression_ptr;
        uint64_t v76 = *(void *)v85;
        while (1)
        {
          uint64_t v28 = 0LL;
          id v77 = v24;
          do
          {
            if (*(void *)v85 != v25) {
              objc_enumerationMutation(obj);
            }
            id v29 = *(void **)(*((void *)&v84 + 1) + 8LL * (void)v28);
            context = objc_autoreleasePoolPush();
            if (v29) {
              id v30 = (void *)v29[1];
            }
            else {
              id v30 = 0LL;
            }
            id v31 = v30;
            uint64_t v32 = (void *)objc_claimAutoreleasedReturnValue([v27[4] stringWithFormat:@"com.apple.appstored.purge.%@", v31]);
            id v33 = sub_1002701C0(objc_alloc(&OBJC_CLASS___ProcessTerminator), (uint64_t)v31, v32);
            id v83 = 0LL;
            int v34 = sub_10027033C((uint64_t)v33, &v83);
            id v35 = v83;
            if (v34)
            {
              uint64_t v36 = objc_alloc(&OBJC_CLASS___IXApplicationIdentity);
              if (v29) {
                uint64_t v37 = (void *)v29[1];
              }
              else {
                uint64_t v37 = 0LL;
              }
              id v38 = v37;
              id v39 = -[IXApplicationIdentity initWithBundleID:](v36, "initWithBundleID:", v38);

              id v82 = 0LL;
              unsigned int v40 = +[IXAppInstallCoordinator demoteAppToPlaceholderWithApplicationIdentity:forReason:waitForDeletion:ignoreRemovability:error:]( &OBJC_CLASS___IXAppInstallCoordinator,  "demoteAppToPlaceholderWithApplicationIdentity:forReason:waitForDeletion:ignoreRemovability:error:",  v39,  v75,  v78,  0LL,  &v82);
              id v41 = (os_log_s *)v82;
              uint64_t v42 = ASDLogHandleForCategory(20LL);
              uint64_t v43 = (os_log_s *)objc_claimAutoreleasedReturnValue(v42);
              double v44 = v43;
              if (v40)
              {
                if (os_log_type_enabled(v43, OS_LOG_TYPE_DEFAULT))
                {
                  *(_DWORD *)__int128 buf = 138413058;
                  *(void *)&uint8_t buf[4] = v72;
                  *(_WORD *)&buf[12] = 2114;
                  *(void *)&buf[14] = v31;
                  *(_WORD *)&buf[22] = 2114;
                  SEL v90 = v29;
                  LOWORD(v91) = 2048;
                  *(void *)((char *)&v91 + 2) = v80;
                  _os_log_impl( (void *)&_mh_execute_header,  v44,  OS_LOG_TYPE_DEFAULT,  "[%@] [%{public}@] Purged app: %{public}@ purged: %lld",  buf,  0x2Au);
                }

                id v45 = sub_1001BE66C((uint64_t)v29);
                uint64_t v46 = (void *)objc_claimAutoreleasedReturnValue(v45);
                [v73 addObject:v46];

                if (v29) {
                  id v47 = (void *)v29[2];
                }
                else {
                  id v47 = 0LL;
                }
                id v48 = v47;
                id v49 = &v80[(void)[v48 unsignedLongLongValue]];

                id v80 = v49;
                if (v49 < v74)
                {
                  id v24 = v77;
                  if (v29) {
                    id v50 = (void *)v29[6];
                  }
                  else {
                    id v50 = 0LL;
                  }
                  double v44 = v50;
                  ASDDebugLog(2LL, @"[Offloading] Offloaded bundleID: %@ reason: %@");
                  goto LABEL_31;
                }

                uint64_t v53 = ASDLogHandleForCategory(20LL);
                id v54 = (os_log_s *)objc_claimAutoreleasedReturnValue(v53);
                id v24 = v77;
                if (os_log_type_enabled(v54, OS_LOG_TYPE_INFO))
                {
                  *(_DWORD *)__int128 buf = 138413058;
                  *(void *)&uint8_t buf[4] = v72;
                  *(_WORD *)&buf[12] = 2114;
                  *(void *)&buf[14] = v29;
                  *(_WORD *)&buf[22] = 2048;
                  SEL v90 = v80;
                  LOWORD(v91) = 2048;
                  *(void *)((char *)&v91 + 2) = v74;
                  _os_log_impl( (void *)&_mh_execute_header,  v54,  OS_LOG_TYPE_INFO,  "[%@][%{public}@] Purge stopped purged: %lld desiredPurgeSize: %lld",  buf,  0x2Au);
                }

                int v52 = 0;
              }

              else
              {
                if (os_log_type_enabled(v43, OS_LOG_TYPE_ERROR))
                {
                  *(_DWORD *)__int128 buf = 138413314;
                  *(void *)&uint8_t buf[4] = v72;
                  *(_WORD *)&buf[12] = 2114;
                  *(void *)&buf[14] = v31;
                  *(_WORD *)&buf[22] = 2114;
                  SEL v90 = v29;
                  LOWORD(v91) = 1024;
                  *(_DWORD *)((char *)&v91 + 2) = 0;
                  WORD3(v91) = 2114;
                  *((void *)&v91 + 1) = v41;
                  _os_log_error_impl( (void *)&_mh_execute_header,  v44,  OS_LOG_TYPE_ERROR,  "[%@] [%{public}@] Unable to purged app: %{public}@ result: %d error: %{public}@",  buf,  0x30u);
                }

                id v24 = v77;
LABEL_31:

                int v52 = 1;
              }

              uint64_t v25 = v76;
              uint64_t v27 = &OBJC_CLASS___NSRegularExpression_ptr;
              goto LABEL_36;
            }

            uint64_t v51 = ASDLogHandleForCategory(20LL);
            id v41 = (os_log_s *)objc_claimAutoreleasedReturnValue(v51);
            if (os_log_type_enabled(v41, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)__int128 buf = 138543618;
              *(void *)&uint8_t buf[4] = v31;
              *(_WORD *)&buf[12] = 2114;
              *(void *)&buf[14] = v35;
              _os_log_error_impl( (void *)&_mh_execute_header,  v41,  OS_LOG_TYPE_ERROR,  "Could not purge bundleID: %{public}@ because we could not get a termination assertion: %{public}@",  buf,  0x16u);
            }

            int v52 = 1;
LABEL_36:

            objc_autoreleasePoolPop(context);
            if (!v52) {
              goto LABEL_44;
            }
            uint64_t v28 = (char *)v28 + 1;
          }

          while (v24 != v28);
          id v55 = [obj countByEnumeratingWithState:&v84 objects:v88 count:16];
          id v24 = v55;
          if (!v55)
          {
LABEL_44:
            unsigned __int8 v56 = v80;
            id v22 = v66;
            int v57 = v78;
            goto LABEL_47;
          }
        }
      }

      unsigned __int8 v56 = 0LL;
      int v57 = v20 ^ 1;
LABEL_47:

      id v60 = [v73 count];
      id v61 = v22;
      if (v57) {
        id v62 = @"com.apple.appstored.offloadRescue";
      }
      else {
        id v62 = @"com.apple.appstored.offloadEvent";
      }
      *(void *)__int128 buf = _NSConcreteStackBlock;
      *(void *)&buf[8] = 3221225472LL;
      *(void *)&uint8_t buf[16] = sub_1001A4310;
      SEL v90 = &unk_1003EA828;
      *((void *)&v91 + 1) = v60;
      id v63 = v61;
      *(void *)&__int128 v91 = v63;
      id v92 = v74;
      id v93 = v56;
      AnalyticsSendEventLazy(v62, buf);

      id v59 = [v73 copy];
      id v8 = v69;
      id v7 = v70;
      id v19 = v67;
      id v9 = v68;
      __int128 v58 = v56;
    }

    else
    {
      __int128 v58 = 0LL;
      id v59 = &__NSArray0__struct;
    }

    id v64 = [[ASDPurgeAppsResponse alloc] initWithPurgedSize:v58 purgedApps:v59];
  }

  else
  {
    id v64 = 0LL;
  }

  return v64;
}

void sub_1001A28C4(void *a1)
{
  id v1 = a1;
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[LaunchHistory shared](&OBJC_CLASS____TtC9appstored13LaunchHistory, "shared"));
  id v3 = (id)objc_claimAutoreleasedReturnValue([v2 syncLaunchesWithLogKey:v1]);
}

void sub_1001A2920(uint64_t a1)
{
  if (a1)
  {
    id v1 = objc_alloc_init(&OBJC_CLASS____TtC9appstored6LogKey);
    sub_1001A28C4(v1);
  }

char *sub_1001A2B50(char *a1, void *a2, char *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a4;
  id v12 = a5;
  if (a1)
  {
    uint64_t v13 = objc_opt_class(a1, v11);
    objc_opt_self(v13);
    if (sub_1002F8BE0((uint64_t)&OBJC_CLASS___AppDefaultsManager, @"OffloadUnusedApps", 0LL)
      && (id v14 = sub_1002EB2A0((uint64_t)&OBJC_CLASS___Device),
          id v15 = (void *)objc_claimAutoreleasedReturnValue(v14),
          unsigned __int8 v16 = [v15 isHRNMode],
          v15,
          (v16 & 1) == 0))
    {
      id v17 = objc_alloc_init(&OBJC_CLASS____TtC9appstored6LogKey);
      id v41 = -[KeepAlive initWithName:]( objc_alloc(&OBJC_CLASS___KeepAlive),  "initWithName:",  @"com.apple.appstored.offloadable");
      uint64_t v18 = ASDLogHandleForCategory(20LL);
      id v19 = (os_log_s *)objc_claimAutoreleasedReturnValue(v18);
      if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)__int128 buf = 138413058;
        uint64_t v51 = v17;
        __int16 v52 = 2048;
        uint64_t v53 = a3;
        __int16 v54 = 2114;
        id v55 = v10;
        __int16 v56 = 2114;
        int v57 = v12;
        _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEFAULT,  "[%@] Offloadable check with urgency: %ld reason: %{public}@ client: %{public}@",  buf,  0x2Au);
      }

      uint64_t v42 = v10;

      sub_10019FD84((uint64_t)a1, v17);
      id v43 = v9;
      id v39 = a3;
      id v40 = [[ASDPurgeableAppRequestOptions alloc] initWithVolume:v9 urgency:a3];
      id v45 = v17;
      id v20 = sub_10019FDE8(a1, v40, v17);
      __int128 v46 = 0u;
      __int128 v47 = 0u;
      __int128 v48 = 0u;
      __int128 v49 = 0u;
      id v21 = (id)objc_claimAutoreleasedReturnValue(v20);
      id v22 = (char *)[v21 countByEnumeratingWithState:&v46 objects:v60 count:16];
      if (v22)
      {
        id v23 = v22;
        a1 = 0LL;
        id v24 = 0LL;
        uint64_t v25 = *(void *)v47;
        do
        {
          double v44 = v24;
          uint64_t v26 = 0LL;
          do
          {
            if (*(void *)v47 != v25) {
              objc_enumerationMutation(v21);
            }
            uint64_t v27 = *(char **)(*((void *)&v46 + 1) + 8LL * (void)v26);
            if (v27) {
              uint64_t v28 = (void *)*((void *)v27 + 2);
            }
            else {
              uint64_t v28 = 0LL;
            }
            id v29 = v28;
            id v30 = [v29 unsignedLongLongValue];

            uint64_t v31 = ASDLogHandleForCategory(20LL);
            uint64_t v32 = (os_log_s *)objc_claimAutoreleasedReturnValue(v31);
            if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
            {
              if (v27) {
                id v33 = (void *)*((void *)v27 + 1);
              }
              else {
                id v33 = 0LL;
              }
              int v34 = v33;
              *(_DWORD *)__int128 buf = 138412802;
              uint64_t v51 = v45;
              __int16 v52 = 2114;
              uint64_t v53 = v34;
              __int16 v54 = 2114;
              id v55 = v27;
              _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_DEFAULT,  "[%@] [%{public}@] May purge %{public}@",  buf,  0x20u);
            }

            a1 = &a1[(void)v30];

            ++v26;
          }

          while (v23 != v26);
          id v24 = &v44[(void)v23];
          id v35 = (char *)[v21 countByEnumeratingWithState:&v46 objects:v60 count:16];
          id v23 = v35;
        }

        while (v35);
      }

      else
      {
        a1 = 0LL;
        id v24 = 0LL;
      }

      uint64_t v36 = ASDLogHandleForCategory(20LL);
      uint64_t v37 = (os_log_s *)objc_claimAutoreleasedReturnValue(v36);
      id v10 = v42;
      if (os_log_type_enabled(v37, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)__int128 buf = 138413314;
        uint64_t v51 = v45;
        __int16 v52 = 2048;
        uint64_t v53 = a1;
        __int16 v54 = 2048;
        id v55 = v24;
        __int16 v56 = 2048;
        int v57 = v39;
        __int16 v58 = 2114;
        id v59 = v12;
        _os_log_impl( (void *)&_mh_execute_header,  v37,  OS_LOG_TYPE_DEFAULT,  "[%@] Offloadable check complete with purgeable: %{bytes}lld purgeable apps: %ld for urgency: %ld for client: %{public}@",  buf,  0x34u);
      }

      id v9 = v43;
    }

    else
    {
      a1 = 0LL;
    }
  }

  return a1;
}

void sub_1001A357C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id obj)
{
}

uint64_t sub_1001A3898(uint64_t a1)
{
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472LL;
  v2[2] = sub_1001A38F4;
  v2[3] = &unk_1003EA708;
  v2[4] = objc_opt_self(a1);
  return AnalyticsSendEventLazy(@"com.apple.appstored.offloadStatus", v2);
}

id sub_1001A38F4(uint64_t a1, uint64_t a2)
{
  id v7 = @"OffloadingIsEnabled";
  uint64_t v2 = objc_opt_class(*(void *)(a1 + 32), a2);
  objc_opt_self(v2);
  id v3 = +[NSNumber numberWithBool:]( &OBJC_CLASS___NSNumber,  "numberWithBool:",  sub_1002F8BE0((uint64_t)&OBJC_CLASS___AppDefaultsManager, @"OffloadUnusedApps", 0LL));
  id v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  id v8 = v4;
  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v8,  &v7,  1LL));

  return v5;
}

id sub_1001A39B8(uint64_t a1)
{
  double v1 = dbl_10038A670[a1 == 2];
  if (a1 == 1) {
    double v1 = -31104000.0;
  }
  return (id)objc_claimAutoreleasedReturnValue( +[NSDate dateWithTimeIntervalSinceNow:]( &OBJC_CLASS___NSDate,  "dateWithTimeIntervalSinceNow:",  v1));
}

uint64_t sub_1001A39FC(uint64_t a1, uint64_t a2)
{
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = a2;
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_1001A3A10(uint64_t a1)
{
  uint64_t v1 = a1;
  __int128 v34 = 0u;
  __int128 v35 = 0u;
  __int128 v36 = 0u;
  __int128 v37 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v34 objects:v38 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v35;
    id v6 = &_ss28__ContiguousArrayStorageBaseCMa_ptr;
    uint64_t v32 = v1;
    id v33 = v2;
    do
    {
      id v7 = 0LL;
      do
      {
        if (*(void *)v35 != v5) {
          objc_enumerationMutation(v2);
        }
        id v8 = *(void **)(*((void *)&v34 + 1) + 8LL * (void)v7);
        id v9 = [objc_alloc((Class)v6[440]) initWithBundleIdentifier:v8 allowPlaceholder:0 error:0];
        id v10 = (void *)objc_claimAutoreleasedReturnValue([v9 iTunesMetadata]);
        id v11 = [v10 storeItemIdentifier];

        if (v11) {
          id v11 = (id)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedLongLong:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedLongLong:",  v11));
        }
        id v12 = (void *)objc_claimAutoreleasedReturnValue([v11 stringValue]);
        else {
          BOOL v13 = 1;
        }
        if (!v13 && ([*(id *)(v1 + 48) containsObject:v12] & 1) == 0)
        {
          id v14 = v4;
          uint64_t v15 = v5;
          unsigned __int8 v16 = v6;
          id v17 = objc_opt_new(&OBJC_CLASS___PurgeableApp);
          id v19 = v17;
          if (v17) {
            objc_setProperty_nonatomic_copy(v17, v18, v8, 8LL);
          }
          id v20 = (void *)objc_claimAutoreleasedReturnValue([v9 diskUsage]);
          id v21 = (void *)objc_claimAutoreleasedReturnValue([v20 staticUsage]);
          id v23 = v21;
          if (v19)
          {
            objc_setProperty_nonatomic_copy(v19, v22, v21, 16LL);

            objc_setProperty_nonatomic_copy(v19, v24, v11, 56LL);
          }

          else
          {
          }

          id v6 = v16;
          uint64_t v5 = v15;
          id v4 = v14;
          uint64_t v1 = v32;
          if ([v9 applicationDSID])
          {
            uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedLongLong:]( NSNumber,  "numberWithUnsignedLongLong:",  [v9 applicationDSID]));
            if (v19) {
              objc_setProperty_nonatomic_copy(v19, v25, v26, 72LL);
            }
          }

          if ([v9 applicationDownloaderDSID])
          {
            uint64_t v28 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedLongLong:]( NSNumber,  "numberWithUnsignedLongLong:",  [v9 applicationDownloaderDSID]));
            if (v19) {
              objc_setProperty_nonatomic_copy(v19, v27, v28, 64LL);
            }
          }

          if (v19) {
            v19->_purgeableReason = 1LL;
          }
          id v30 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Requested by %@",  *(void *)(v32 + 56)));
          if (v19) {
            objc_setProperty_nonatomic_copy(v19, v29, v30, 48LL);
          }

          [*(id *)(v32 + 64) addObject:v19];
          id v2 = v33;
        }

        id v7 = (char *)v7 + 1;
      }

      while (v4 != v7);
      id v31 = [v2 countByEnumeratingWithState:&v34 objects:v38 count:16];
      id v4 = v31;
    }

    while (v31);
  }
}

BOOL sub_1001A3D28(void *a1)
{
  id v1 = a1;
  id v2 = sub_100255630((uint64_t)&OBJC_CLASS___URLBag);
  id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  uint64_t v4 = (uint64_t)sub_10025730C((uint64_t)v3, @"appPurgeGracePeriod", (void *)0x76A700, 0);

  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSDate dateWithTimeIntervalSinceNow:]( &OBJC_CLASS___NSDate,  "dateWithTimeIntervalSinceNow:",  (double)-v4));
  objc_opt_self(&OBJC_CLASS___AppPurgeCoordinator);
  id v6 = sub_1002F8C58((uint64_t)&OBJC_CLASS___AppDefaultsManager, @"OffloadingGracePeriodStartDate");
  id v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
  if (v7)
  {
    id v8 = [v5 compare:v7];
    BOOL v9 = v8 != (id)-1LL;
    uint64_t v10 = ASDLogHandleForCategory(20LL);
    id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      [v7 timeIntervalSince1970];
      int v15 = 138413058;
      id v16 = v1;
      __int16 v17 = 2114;
      uint64_t v18 = v5;
      __int16 v19 = 2048;
      uint64_t v20 = (uint64_t)v12;
      __int16 v21 = 1024;
      BOOL v22 = v8 != (id)-1LL;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "[%@] Grace period start date: %{public}@ offloading grace period start date: %{time_t}ld beyondGracePeriod: %d",  (uint8_t *)&v15,  0x26u);
    }
  }

  else
  {
    uint64_t v13 = ASDLogHandleForCategory(20LL);
    id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v13);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
    {
      int v15 = 138412290;
      id v16 = v1;
      _os_log_error_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_ERROR,  "[%@] Offloading date not set",  (uint8_t *)&v15,  0xCu);
    }

    BOOL v9 = 0LL;
  }

  return v9;
}

void sub_1001A3F18(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a1;
  id v8 = a2;
  BOOL v9 = a3;
  id v11 = a4;
  if (v9 && *((_BYTE *)v9 + 9))
  {
    uint64_t v12 = ASDLogHandleForCategory(20LL, v10);
    uint64_t v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v14 = v9[5];
      int v19 = 138413058;
      uint64_t v20 = v14;
      __int16 v21 = 2114;
      id v22 = v11;
      __int16 v23 = 2114;
      id v24 = v7;
      __int16 v25 = 2114;
      id v26 = v8;
      int v15 = v13;
      os_log_type_t v16 = OS_LOG_TYPE_DEFAULT;
LABEL_9:
      _os_log_impl( (void *)&_mh_execute_header,  v15,  v16,  "[%@] [%{public}@] %{public}@ with reason: %{public}@",  (uint8_t *)&v19,  0x2Au);
    }
  }

  else
  {
    uint64_t v17 = ASDLogHandleForCategory(20LL, v10);
    uint64_t v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v17);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
    {
      if (v9) {
        uint64_t v18 = v9[5];
      }
      else {
        uint64_t v18 = 0LL;
      }
      int v19 = 138413058;
      uint64_t v20 = v18;
      __int16 v21 = 2114;
      id v22 = v11;
      __int16 v23 = 2114;
      id v24 = v7;
      __int16 v25 = 2114;
      id v26 = v8;
      int v15 = v13;
      os_log_type_t v16 = OS_LOG_TYPE_INFO;
      goto LABEL_9;
    }
  }
}

int64_t sub_1001A40A8(id a1, PurgeableApp *a2, PurgeableApp *a3)
{
  uint64_t v4 = a3;
  if (a2) {
    a2 = (PurgeableApp *)a2->_purgeableReason;
  }
  if (v4) {
    uint64_t purgeableReason = v4->_purgeableReason;
  }
  else {
    uint64_t purgeableReason = 0LL;
  }

  else {
    return (uint64_t)a2 > purgeableReason;
  }
}

id sub_1001A40F0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = a3;
  if (a2 && (id v6 = *(id *)(a2 + 16)) != 0LL)
  {
    id v7 = v6;
    id v8 = v7;
  }

  else
  {
    id v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSNull null](&OBJC_CLASS___NSNull, "null"));
    id v7 = 0LL;
  }

  if (v5) {
    BOOL v9 = (void *)v5[2];
  }
  else {
    BOOL v9 = 0LL;
  }
  id v10 = v9;

  if (v10) {
    id v11 = v10;
  }
  else {
    id v11 = (id)objc_claimAutoreleasedReturnValue(+[NSNull null](&OBJC_CLASS___NSNull, "null"));
  }
  uint64_t v12 = v11;

  id v13 = [*(id *)(a1 + 32) compareObject:v8 toObject:v12];
  return v13;
}

int64_t sub_1001A41B8(id a1, PurgeableApp *a2, PurgeableApp *a3)
{
  uint64_t v4 = a3;
  if (a2) {
    a2 = (PurgeableApp *)a2->_order;
  }
  if (v4) {
    uint64_t order = v4->_order;
  }
  else {
    uint64_t order = 0LL;
  }

  else {
    return (uint64_t)a2 > order;
  }
}

id sub_1001A4200(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = a3;
  if (a2 && (id v6 = *(id *)(a2 + 16)) != 0LL)
  {
    id v7 = v6;
    id v8 = v7;
  }

  else
  {
    id v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSNull null](&OBJC_CLASS___NSNull, "null"));
    id v7 = 0LL;
  }

  if (v5) {
    BOOL v9 = (void *)v5[2];
  }
  else {
    BOOL v9 = 0LL;
  }
  id v10 = v9;

  if (v10) {
    id v11 = v10;
  }
  else {
    id v11 = (id)objc_claimAutoreleasedReturnValue(+[NSNull null](&OBJC_CLASS___NSNull, "null"));
  }
  uint64_t v12 = v11;

  id v13 = [*(id *)(a1 + 32) compareObject:v8 toObject:v12];
  return v13;
}

int64_t sub_1001A42C8(id a1, PurgeableApp *a2, PurgeableApp *a3)
{
  uint64_t v4 = a3;
  if (a2) {
    a2 = (PurgeableApp *)a2->_order;
  }
  if (v4) {
    uint64_t order = v4->_order;
  }
  else {
    uint64_t order = 0LL;
  }

  else {
    return (uint64_t)a2 > order;
  }
}

id sub_1001A4310(void *a1)
{
  v9[0] = @"OffloadedAppCount";
  uint64_t v2 = objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", a1[5]));
  id v3 = (void *)v2;
  uint64_t v4 = (const __CFString *)a1[4];
  if (!v4) {
    uint64_t v4 = @"unknown";
  }
  v10[0] = v2;
  v10[1] = v4;
  v9[1] = @"Client";
  v9[2] = @"RequestedSpace";
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", a1[6]));
  void v10[2] = v5;
  v9[3] = @"FreedSpace";
  id v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", a1[7]));
  v10[3] = v6;
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v10,  v9,  4LL));

  return v7;
}

id sub_1001A46B8(id a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    v11.receiver = a1;
    v11.super_class = (Class)&OBJC_CLASS___AccountEvent;
    a1 = objc_msgSendSuper2(&v11, "init");
    if (a1)
    {
      uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "ams_DSID"));

      if (v4)
      {
        uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "ams_DSID"));
        [a1 setValue:v5 forProperty:@"account_id"];
      }

      id v6 = (void *)objc_claimAutoreleasedReturnValue([v3 username]);

      if (v6)
      {
        id v7 = (void *)objc_claimAutoreleasedReturnValue([v3 username]);
        [a1 setValue:v7 forProperty:@"apple_id"];
      }

      id v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "ams_altDSID"));

      if (v8)
      {
        BOOL v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "ams_altDSID"));
        [a1 setValue:v9 forProperty:@"alt_dsid"];
      }
    }
  }

  return a1;
}

id sub_1001A47DC(void *a1)
{
  if (a1) {
    a1 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"apple_id"]);
  }
  return a1;
}

id sub_1001A4800(void *a1)
{
  if (a1) {
    a1 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"account_id"]);
  }
  return a1;
}

id sub_1001A4824(void *a1)
{
  if (a1) {
    a1 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"active_end_time"]);
  }
  return a1;
}

id sub_1001A4848(void *a1)
{
  if (a1) {
    a1 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"active_start_time"]);
  }
  return a1;
}

id sub_1001A486C(id result)
{
  if (result)
  {
    id v1 = (void *)objc_claimAutoreleasedReturnValue([result valueForProperty:@"event_type"]);
    id v2 = [v1 unsignedCharValue];

    return v2;
  }

  return result;
}

id *sub_1001A49D0(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a4;
  id v8 = a3;
  id v9 = a2;
  objc_opt_self(a1);
  id v10 = sub_1001A4A54((id *)objc_alloc(&OBJC_CLASS___IAPInfoItemsRequestResponse), v9, 0LL, v8, 0, v7);

  return v10;
}

id *sub_1001A4A54(id *a1, void *a2, void *a3, void *a4, char a5, void *a6)
{
  id v11 = a2;
  id v12 = a3;
  id v13 = a4;
  id v14 = a6;
  if (a1)
  {
    v22.receiver = a1;
    v22.super_class = (Class)&OBJC_CLASS___IAPInfoItemsRequestResponse;
    a1 = (id *)objc_msgSendSuper2(&v22, "init");
    if (a1)
    {
      id v15 = [v11 copy];
      id v16 = a1[3];
      a1[3] = v15;

      id v17 = [v12 copy];
      id v18 = a1[4];
      a1[4] = v17;

      id v19 = [v13 copy];
      id v20 = a1[5];
      a1[5] = v19;

      *((_BYTE *)a1 + _Block_object_dispose(va, 8) = a5;
      objc_storeStrong(a1 + 2, a6);
    }
  }

  return a1;
}

id *sub_1001A4B48(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a5;
  id v10 = a4;
  id v11 = a3;
  id v12 = a2;
  objc_opt_self(a1);
  id v13 = sub_1001A4A54((id *)objc_alloc(&OBJC_CLASS___IAPInfoItemsRequestResponse), v12, v11, v10, 1, v9);

  return v13;
}

id *sub_1001A4C2C(uint64_t a1)
{
  return sub_1001A4C58((id *)objc_alloc(&OBJC_CLASS___ZipDataStreamStatus), 0LL, 0LL);
}

id *sub_1001A4C58(id *a1, void *a2, void *a3)
{
  id v6 = a3;
  if (a1)
  {
    v9.receiver = a1;
    v9.super_class = (Class)&OBJC_CLASS___ZipDataStreamStatus;
    id v7 = (id *)objc_msgSendSuper2(&v9, "init");
    a1 = v7;
    if (v7)
    {
      void v7[2] = a2;
      objc_storeStrong(v7 + 1, a3);
    }
  }

  return a1;
}

id *sub_1001A4CD4(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_self(a1);
  uint64_t v4 = sub_1001A4C58((id *)objc_alloc(&OBJC_CLASS___ZipDataStreamStatus), (void *)1, v3);

  return v4;
}

id *sub_1001A4D24(uint64_t a1)
{
  return sub_1001A4C58((id *)objc_alloc(&OBJC_CLASS___ZipDataStreamStatus), (void *)2, 0LL);
}

id sub_1001A54A8(uint64_t a1)
{
  v2[0] = @"last_duet_sync";
  v2[1] = @"spotlight_migrated_date";
  v2[2] = @"timestamp";
  return (id)objc_claimAutoreleasedReturnValue( +[NSArray arrayWithObjects:count:]( &OBJC_CLASS___NSArray,  "arrayWithObjects:count:",  v2,  3LL));
}

AMSURLSession *sub_1001A5534(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_self(a1);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue( +[NSURLSessionConfiguration ephemeralSessionConfiguration]( &OBJC_CLASS___NSURLSessionConfiguration,  "ephemeralSessionConfiguration"));
  id v5 = sub_100255630((uint64_t)&OBJC_CLASS___URLBag);
  id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  objc_msgSend(v4, "ams_configureWithProcessInfo:bag:", v3, v6);

  id v7 = (void *)objc_claimAutoreleasedReturnValue([v3 bundleIdentifier]);
  objc_msgSend(v4, "set_sourceApplicationBundleIdentifier:", v7);

  id v8 = -[AMSURLSession initWithConfiguration:](objc_alloc(&OBJC_CLASS___AMSURLSession), "initWithConfiguration:", v4);
  return v8;
}

id *sub_1001A55F4(id *a1, void *a2, void *a3, int a4)
{
  id v8 = a2;
  id v9 = a3;
  if (a1)
  {
    v20.receiver = a1;
    v20.super_class = (Class)&OBJC_CLASS___ZipDataStreamAdapter;
    id v10 = (id *)objc_msgSendSuper2(&v20, "init");
    a1 = v10;
    if (v10)
    {
      objc_storeStrong(v10 + 2, a2);
      objc_storeStrong(a1 + 4, a3);
      if (a4) {
        uint64_t v11 = 2LL;
      }
      else {
        uint64_t v11 = 0LL;
      }
      dispatch_semaphore_t v12 = dispatch_semaphore_create(v11);
      id v13 = a1[6];
      a1[6] = v12;

      dispatch_group_t v14 = dispatch_group_create();
      id v15 = a1[7];
      a1[7] = v14;

      *((_DWORD *)a1 + 16) = 0;
      id v16 = sub_1001A4D24((uint64_t)&OBJC_CLASS___ZipDataStreamStatus);
      uint64_t v17 = objc_claimAutoreleasedReturnValue(v16);
      id v18 = a1[9];
      a1[9] = (id)v17;
    }
  }

  return a1;
}

void sub_1001A56E8(uint64_t a1, void *a2, char a3, void *a4)
{
  id v7 = a2;
  id v8 = a4;
  if (a1)
  {
    id v9 = sub_1001A5ABC(a1);
    id v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
    dispatch_semaphore_t v12 = v10;
    if (v10)
    {
      uint64_t v13 = v10[2];
      if (v13 == 1)
      {
        id v30 = objc_getProperty(v10, v11, 8LL, 1);
        v8[2](v8, v30, 0LL);

        goto LABEL_27;
      }

      if (!v13)
      {
        v8[2](v8, 0LL, 1LL);
LABEL_27:

        goto LABEL_28;
      }
    }

    if (!*(void *)(a1 + 16))
    {
      uint64_t v31 = ASDErrorWithTitleAndMessage(ASDErrorDomain, 707LL, 0LL, 0LL);
      uint64_t v32 = (void *)objc_claimAutoreleasedReturnValue(v31);
      id v33 = sub_1001A4CD4((uint64_t)&OBJC_CLASS___ZipDataStreamStatus, v32);
      __int128 v34 = (void *)objc_claimAutoreleasedReturnValue(v33);
      sub_1001A5C48(a1, v34);

      v8[2](v8, v32, 0LL);
      goto LABEL_27;
    }

    uint64_t v14 = ASDLogHandleForCategory(31LL);
    id v15 = (os_log_s *)objc_claimAutoreleasedReturnValue(v14);
    os_signpost_id_t v16 = os_signpost_id_generate(v15);

    uint64_t v17 = ASDLogHandleForCategory(31LL);
    id v18 = (os_log_s *)objc_claimAutoreleasedReturnValue(v17);
    id v19 = v18;
    unint64_t v20 = v16 - 1;
    if (v16 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v18))
    {
      *(_DWORD *)__int128 buf = 134349056;
      id v43 = [v7 length];
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v19,  OS_SIGNPOST_INTERVAL_BEGIN,  v16,  "Download::Unzip/SupplyBytes",  " bytes=%{public, signpost.description:attribute}lu ",  buf,  0xCu);
    }

    dispatch_group_enter(*(dispatch_group_t *)(a1 + 56));
    __int16 v21 = *(void **)(a1 + 16);
    v39[0] = _NSConcreteStackBlock;
    v39[1] = 3221225472LL;
    v39[2] = sub_1001A5AFC;
    v39[3] = &unk_1003EA858;
    v39[4] = a1;
    objc_super v22 = v8;
    id v40 = v22;
    os_signpost_id_t v41 = v16;
    [v21 supplyBytes:v7 withCompletionBlock:v39];
    uint64_t v23 = ASDLogHandleForCategory(31LL);
    id v24 = (os_log_s *)objc_claimAutoreleasedReturnValue(v23);
    __int16 v25 = v24;
    if (v20 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v24))
    {
      *(_WORD *)__int128 buf = 0;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v25,  OS_SIGNPOST_INTERVAL_BEGIN,  v16,  "Download::Unzip/BackPressureWait",  "",  buf,  2u);
    }

    dispatch_semaphore_wait(*(dispatch_semaphore_t *)(a1 + 48), 0xFFFFFFFFFFFFFFFFLL);
    uint64_t v26 = ASDLogHandleForCategory(31LL);
    uint64_t v27 = (os_log_s *)objc_claimAutoreleasedReturnValue(v26);
    uint64_t v28 = v27;
    if (v20 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v27))
    {
      *(_WORD *)__int128 buf = 0;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v28,  OS_SIGNPOST_INTERVAL_END,  v16,  "Download::Unzip/BackPressureWait",  "",  buf,  2u);
    }

    if ((a3 & 1) != 0)
    {
      id v29 = v12;
    }

    else
    {
      id v35 = sub_1001A5ABC(a1);
      id v29 = (void *)objc_claimAutoreleasedReturnValue(v35);

      if (!v29) {
        goto LABEL_25;
      }
      uint64_t v37 = v29[2];
      if (!v37)
      {
        v22[2](v22, 0LL, 1LL);
        goto LABEL_26;
      }

      if (v37 != 1)
      {
LABEL_25:
        v22[2](v22, 0LL, 0LL);
        goto LABEL_26;
      }

      id v38 = objc_getProperty(v29, v36, 8LL, 1);
      v22[2](v22, v38, 0LL);
    }

id sub_1001A5ABC(uint64_t a1)
{
  id v2 = (os_unfair_lock_s *)(a1 + 64);
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v3 = *(id *)(a1 + 72);
  os_unfair_lock_unlock(v2);
  return v3;
}

void sub_1001A5AFC(void *a1, void *a2, int a3)
{
  id v5 = a2;
  *(_BYTE *)(a1[4] + 24LL) = 1;
  if (v5)
  {
    uint64_t v6 = a1[4];
    id v7 = sub_1001A4CD4((uint64_t)&OBJC_CLASS___ZipDataStreamStatus, v5);
    id v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
    sub_1001A5C48(v6, v8);
  }

  else if (a3)
  {
    uint64_t v9 = a1[4];
    id v10 = sub_1001A4C2C((uint64_t)&OBJC_CLASS___ZipDataStreamStatus);
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
    sub_1001A5C48(v9, v11);

    *(_BYTE *)(a1[4] + 8LL) = 1;
  }

  (*(void (**)(void))(a1[5] + 16LL))();
  uint64_t v12 = ASDLogHandleForCategory(31LL);
  uint64_t v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
  uint64_t v14 = v13;
  os_signpost_id_t v15 = a1[6];
  if (v15 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v13))
  {
    *(_WORD *)os_signpost_id_t v16 = 0;
    _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v14,  OS_SIGNPOST_INTERVAL_END,  v15,  "Download::Unzip/SupplyBytes",  "",  v16,  2u);
  }

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1[4] + 48LL));
  dispatch_group_leave(*(dispatch_group_t *)(a1[4] + 56LL));
}

void sub_1001A5C48(uint64_t a1, void *a2)
{
  id v4 = a2;
  if (a1)
  {
    os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
    objc_storeStrong((id *)(a1 + 72), a2);
    os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  }
}

void sub_1001A5D74(uint64_t a1, void *a2)
{
  id v4 = a2;
  if (ASDErrorIsEqual())
  {

    id v3 = 0LL;
  }

  else
  {
    id v3 = v4;
  }

  id v5 = v3;
  (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

uint64_t sub_1001A5F04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a3) {
    *(void *)(*(void *)(a1 + 32) + 40LL) = a2;
  }
  return (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16LL))();
}

uint64_t sub_1001A5FF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3) {
    *(void *)(*(void *)(a1 + 32) + 40LL) = a2;
  }
  return (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16LL))();
}

id *sub_1001A60D0(id *a1, void *a2)
{
  id v4 = a2;
  if (a1)
  {
    id v5 = [a1 init];
    a1 = v5;
    if (v5) {
      objc_storeStrong(v5 + 5, a2);
    }
  }

  return a1;
}

uint64_t sub_1001A6494(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

id sub_1001A688C(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1001A6904;
  block[3] = &unk_1003E9EA8;
  void block[4] = objc_opt_self(a1);
  if (qword_100462178 != -1) {
    dispatch_once(&qword_100462178, block);
  }
  return (id)qword_100462170;
}

void sub_1001A6904(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  id v2 = (void *)qword_100462170;
  qword_100462170 = (uint64_t)v1;
}

void sub_1001A6928(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (a1)
  {
    id v7 = *(dispatch_queue_s **)(a1 + 32);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1001A69DC;
    block[3] = &unk_1003EA390;
    void block[4] = a1;
    id v9 = v5;
    id v10 = v6;
    dispatch_async(v7, block);
  }
}

void sub_1001A69DC(uint64_t a1)
{
  id v2 = sub_1002CBF68((uint64_t)&OBJC_CLASS___MetricsContext, 1LL);
  id v3 = (id)objc_claimAutoreleasedReturnValue(v2);
  sub_1001A6A2C(*(void *)(a1 + 32), v3, *(void **)(a1 + 40), *(void **)(a1 + 48));
}

void sub_1001A6A2C(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  if (a1)
  {
    uint64_t v10 = ASDLogHandleForCategory(3LL);
    uint64_t v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      if (v7) {
        uint64_t v12 = (void *)v7[9];
      }
      else {
        uint64_t v12 = 0LL;
      }
      id v13 = v12;
      *(_DWORD *)__int128 buf = 138412546;
      id v19 = v13;
      __int16 v20 = 2114;
      id v21 = v8;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_INFO,  "[%@] Flushing metrics with reason: %{public}@",  buf,  0x16u);
    }

    uint64_t v14 = -[ASEMetrics initWithType:](objc_alloc(&OBJC_CLASS____TtC9appstored10ASEMetrics), "initWithType:", 2LL);
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472LL;
    v15[2] = sub_1001A7E74;
    v15[3] = &unk_1003EA020;
    os_signpost_id_t v16 = v7;
    id v17 = v9;
    -[ASEMetrics flushWithCompletionHandler:](v14, "flushWithCompletionHandler:", v15);
  }
}

void sub_1001A6BAC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  if (a1)
  {
    id v5 = *(dispatch_queue_s **)(a1 + 32);
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472LL;
    _DWORD v6[2] = sub_1001A6C40;
    v6[3] = &unk_1003E9FF8;
    void v6[4] = a1;
    id v7 = v3;
    dispatch_async(v5, v6);
  }
}

void sub_1001A6C40(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  id v2 = *(id *)(a1 + 40);
  if (v1)
  {
    id v3 = sub_1002CBF68((uint64_t)&OBJC_CLASS___MetricsContext, 1LL);
    uint64_t v4 = objc_claimAutoreleasedReturnValue(v3);
    id v5 = (void *)v4;
    if (v4) {
      *(_BYTE *)(v4 + _Block_object_dispose(va, 8) = 1;
    }
    id v6 = objc_opt_new(&OBJC_CLASS___NSMutableArray);
    id v7 = sub_1001A7B00(v1, v5);
    id v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
    __int128 v23 = 0u;
    __int128 v24 = 0u;
    __int128 v25 = 0u;
    __int128 v26 = 0u;
    id v9 = [v8 countByEnumeratingWithState:&v23 objects:v27 count:16];
    if (v9)
    {
      id v10 = v9;
      uint64_t v11 = *(void *)v24;
      do
      {
        uint64_t v12 = 0LL;
        do
        {
          if (*(void *)v24 != v11) {
            objc_enumerationMutation(v8);
          }
          id v13 = sub_1002FAAC4(*(void *)(*((void *)&v23 + 1) + 8LL * (void)v12));
          uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
          -[NSMutableArray addObject:](v6, "addObject:", v14);

          uint64_t v12 = (char *)v12 + 1;
        }

        while (v10 != v12);
        id v10 = [v8 countByEnumeratingWithState:&v23 objects:v27 count:16];
      }

      while (v10);
    }

    os_signpost_id_t v15 = (dispatch_queue_s *)v1[2];
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 3221225472LL;
    v18[2] = sub_1001A7F90;
    v18[3] = &unk_1003EA8A8;
    id v19 = v6;
    id v20 = 0LL;
    id v21 = v5;
    id v22 = v2;
    id v16 = v5;
    id v17 = v6;
    dispatch_async(v15, v18);
  }
}

void sub_1001A6E28(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = v3;
  if (a1)
  {
    id v5 = *(dispatch_queue_s **)(a1 + 32);
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472LL;
    _DWORD v6[2] = sub_1001A6EBC;
    v6[3] = &unk_1003E9FF8;
    void v6[4] = a1;
    id v7 = v3;
    dispatch_async(v5, v6);
  }
}

void sub_1001A6EBC(uint64_t a1)
{
  id v2 = objc_alloc_init(&OBJC_CLASS____TtC9appstored6LogKey);
  sub_1001A6F10(*(void *)(a1 + 32));
  (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
}

void sub_1001A6F10(uint64_t a1)
{
  if (a1)
  {
    dispatch_semaphore_t v2 = dispatch_semaphore_create(0LL);
    id v3 = sub_100233508((uint64_t)&OBJC_CLASS___MetricsCoordinator);
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472LL;
    void v12[2] = sub_1001A8168;
    void v12[3] = &unk_1003EA180;
    id v5 = v2;
    id v13 = v5;
    sub_100235E70((uint64_t)v4, 10LL, v12);

    dispatch_time_t v6 = dispatch_time(0LL, 15000000000LL);
    if (dispatch_semaphore_wait(v5, v6))
    {
      uint64_t v7 = ASDLogHandleForCategory(13LL);
      id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      {
        id v10 = (void *)objc_opt_class(a1, v9);
        *(_DWORD *)__int128 buf = 138543362;
        os_signpost_id_t v15 = v10;
        id v11 = v10;
        _os_log_error_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_ERROR,  "[%{public}@] Timed out waiting to sync launches",  buf,  0xCu);
      }
    }
  }

void sub_1001A7074(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = v3;
  if (a1)
  {
    id v5 = *(dispatch_queue_s **)(a1 + 32);
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472LL;
    _DWORD v6[2] = sub_1001A7108;
    v6[3] = &unk_1003E9FF8;
    void v6[4] = a1;
    id v7 = v3;
    dispatch_async(v5, v6);
  }
}

uint64_t sub_1001A7108(uint64_t a1)
{
  uint64_t v2 = ASDLogHandleForCategory(3LL);
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "[Crossfire] Posting crossfire metrics", v5, 2u);
  }

  sub_1001A7198(*(void **)(a1 + 32), @"Posting Metrics");
  return (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16LL))();
}

void sub_1001A7198(void *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    uint64_t v4 = sub_1002CBF68((uint64_t)&OBJC_CLASS___MetricsContext, 1LL);
    id v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
    id v6 = sub_100255630((uint64_t)&OBJC_CLASS___URLBag);
    id v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
    id v8 = sub_100256570(v7, @"metrics/sampling/custom/xp_amp_usage_analytics/percentage");
    uint64_t v9 = objc_claimAutoreleasedReturnValue(v8);
    id v39 = 0LL;
    id v10 = (void *)objc_claimAutoreleasedReturnValue([(id)v9 valueWithError:&v39]);
    id v11 = v39;

    uint64_t v13 = objc_opt_class(&OBJC_CLASS___NSNumber, v12);
    LOBYTE(v9) = objc_opt_isKindOfClass(v10, v13);
    uint64_t v14 = ASDLogHandleForCategory(3LL);
    os_signpost_id_t v15 = (os_log_s *)objc_claimAutoreleasedReturnValue(v14);
    BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_INFO);
    if ((v9 & 1) != 0)
    {
      if (v16)
      {
        *(_DWORD *)__int128 buf = 138543362;
        id v41 = v10;
        _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_INFO,  "[Crossfire] Crossfire post sampling bag key: %{public}@",  buf,  0xCu);
      }

      id v17 = v10;
    }

    else
    {
      if (v16)
      {
        *(_DWORD *)__int128 buf = 138543362;
        id v41 = v11;
        _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_INFO,  "[Crossfire] Failed to find bag value for crossfire post sampling key. Error: %{public}@",  buf,  0xCu);
      }

      id v17 = &off_10040BF80;
    }

    if ((os_variant_has_internal_content("com.apple.appstored") & 1) != 0)
    {
      CFPropertyListRef v18 = sub_1002F9054((uint64_t)&OBJC_CLASS___AppDefaultsManager);
      id v19 = (void *)objc_claimAutoreleasedReturnValue(v18);
      BOOL v20 = sub_10022D328((uint64_t)a1, v17, v19);
    }

    else
    {
      BOOL v20 = sub_10022D328((uint64_t)a1, v17, 0LL);
    }

    uint64_t v21 = ASDLogHandleForCategory(3LL);
    id v22 = (os_log_s *)objc_claimAutoreleasedReturnValue(v21);
    BOOL v23 = os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT);
    if (v20)
    {
      if (v23)
      {
        if (v5) {
          __int128 v24 = (void *)v5[9];
        }
        else {
          __int128 v24 = 0LL;
        }
        id v25 = v24;
        *(_DWORD *)__int128 buf = 138412290;
        id v41 = v25;
        _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "[%@] Sending crossfire metrics", buf, 0xCu);
      }

      id v26 = sub_1001A7B00(a1, v5);
      uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue(v26);
      if ([v27 count])
      {
        dispatch_semaphore_t v28 = dispatch_semaphore_create(0LL);
        id v29 = -[ASEMetrics initWithType:](objc_alloc(&OBJC_CLASS____TtC9appstored10ASEMetrics), "initWithType:", 2LL);
        v37[0] = _NSConcreteStackBlock;
        v37[1] = 3221225472LL;
        v37[2] = sub_1001A8160;
        v37[3] = &unk_1003E9880;
        dispatch_semaphore_t v38 = v28;
        id v30 = v28;
        -[ASEMetrics enqueueEvents:flushEvents:completionHandler:]( v29,  "enqueueEvents:flushEvents:completionHandler:",  v27,  0LL,  v37);

        dispatch_semaphore_wait(v30, 0xFFFFFFFFFFFFFFFFLL);
        sub_1001A7DBC((uint64_t)a1, v5, v3);
      }

      else
      {
        uint64_t v33 = ASDLogHandleForCategory(3LL);
        __int128 v34 = (os_log_s *)objc_claimAutoreleasedReturnValue(v33);
        if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
        {
          if (v5) {
            id v35 = (void *)v5[9];
          }
          else {
            id v35 = 0LL;
          }
          id v36 = v35;
          *(_DWORD *)__int128 buf = 138412290;
          id v41 = v36;
          _os_log_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_DEFAULT, "[%@] No events to report", buf, 0xCu);
        }

        sub_1001A7DBC((uint64_t)a1, v5, @"Nothing to Post");
      }
    }

    else
    {
      if (v23)
      {
        if (v5) {
          uint64_t v31 = (void *)v5[9];
        }
        else {
          uint64_t v31 = 0LL;
        }
        id v32 = v31;
        *(_DWORD *)__int128 buf = 138412290;
        id v41 = v32;
        _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEFAULT,  "[%@] Crossfire interval not in session",  buf,  0xCu);
      }

      sub_1001A7DBC((uint64_t)a1, v5, @"Post skipped for crossfire interval");
    }
  }
}

void sub_1001A75C8(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = v3;
  if (a1)
  {
    id v5 = *(dispatch_queue_s **)(a1 + 32);
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472LL;
    _DWORD v6[2] = sub_1001A765C;
    v6[3] = &unk_1003E9FF8;
    void v6[4] = a1;
    id v7 = v3;
    dispatch_async(v5, v6);
  }
}

uint64_t sub_1001A765C(uint64_t a1)
{
  uint64_t v2 = ASDLogHandleForCategory(3LL);
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v5 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "[Crossfire] Resetting crossfire metrics",  v5,  2u);
  }

  sub_1001A76F0(*(void *)(a1 + 32), @"External Request", 1);
  return (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16LL))();
}

void sub_1001A76F0(uint64_t a1, void *a2, int a3)
{
  id v12 = a2;
  if (a1)
  {
    id v5 = sub_1002CBF68((uint64_t)&OBJC_CLASS___MetricsContext, 1LL);
    id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
    sub_1002CBFEC((uint64_t)v6);
    id v7 = sub_1002B61EC((uint64_t)&OBJC_CLASS___AppUsageDatabaseStore);
    id v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
    [v8 modifyUsingTransaction:&stru_1003EA8C8];

    if (a3)
    {
      id v9 = sub_100196040((uint64_t)&OBJC_CLASS___ActivityManager);
      uint64_t v10 = objc_claimAutoreleasedReturnValue(v9);
      id v11 = (void *)v10;
      if (v10) {
        sub_100197418(v10, 3LL, v12, 1, 0LL);
      }
    }
  }
}

void sub_1001A77AC(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = v3;
  if (a1)
  {
    id v5 = *(dispatch_queue_s **)(a1 + 32);
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472LL;
    _DWORD v6[2] = sub_1001A7840;
    v6[3] = &unk_1003E9FF8;
    void v6[4] = a1;
    id v7 = v3;
    dispatch_async(v5, v6);
  }
}

uint64_t sub_1001A7840(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t, void))(result + 16))(result, 1LL, 0LL);
  }
  return result;
}

uint64_t sub_1001A788C(uint64_t a1)
{
  if (!a1) {
    return 0LL;
  }
  id v1 = sub_1002EB2A0((uint64_t)&OBJC_CLASS___Device);
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  uint64_t v3 = [v2 isHRNMode] ^ 1;

  return v3;
}

id sub_1001A7B00(void *a1, void *a2)
{
  uint64_t v3 = a2;
  uint64_t v4 = objc_opt_new(&OBJC_CLASS___NSMutableArray);
  id v5 = sub_10022CE24(a1, 1, v3);
  id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  id v7 = sub_10022CBCC(a1, 1LL, v6, v3);
  id v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
  -[NSMutableArray addObjectsFromArray:](v4, "addObjectsFromArray:", v8);
  if (v3) {
    id v9 = (void *)v3[9];
  }
  else {
    id v9 = 0LL;
  }
  id v10 = v9;
  sub_1001A6F10((uint64_t)a1);

  uint64_t v33 = @"launch_end_time";
  id v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v33, 1LL));
  id v12 = sub_10022CE44((uint64_t)a1, 2, v3, v11);
  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(v12);

  id v14 = sub_10022B880(a1, 2u, v13, v3);
  os_signpost_id_t v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
  -[NSMutableArray addObjectsFromArray:](v4, "addObjectsFromArray:", v15);
  dispatch_semaphore_t v16 = dispatch_semaphore_create(0LL);
  id v17 = sub_100233508((uint64_t)&OBJC_CLASS___MetricsCoordinator);
  CFPropertyListRef v18 = (void *)objc_claimAutoreleasedReturnValue(v17);
  v29[0] = _NSConcreteStackBlock;
  v29[1] = 3221225472LL;
  v29[2] = sub_1001A7DB4;
  v29[3] = &unk_1003EA180;
  id v19 = v16;
  id v30 = v19;
  sub_100235F84((uint64_t)v18, 10LL, v29);

  dispatch_time_t v20 = dispatch_time(0LL, 15000000000LL);
  if (dispatch_semaphore_wait(v19, v20))
  {
    uint64_t v21 = ASDLogHandleForCategory(13LL);
    id v22 = (os_log_s *)objc_claimAutoreleasedReturnValue(v21);
    if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
    {
      uint64_t v27 = (void *)objc_opt_class(a1, v23);
      *(_DWORD *)__int128 buf = 138543362;
      id v32 = v27;
      id v28 = v27;
      _os_log_error_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_ERROR,  "[%{public}@] Timed out waiting to sync installed apps with metadata",  buf,  0xCu);
    }
  }

  __int128 v24 = (void *)objc_claimAutoreleasedReturnValue([a1 createMetricsEventsForEventType:3 context:v3]);
  -[NSMutableArray addObjectsFromArray:](v4, "addObjectsFromArray:", v24);
  id v25 = -[NSMutableArray copy](v4, "copy");

  return v25;
}

uint64_t sub_1001A7DB4(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_1001A7DBC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  sub_1001A76F0(a1, v6, 1);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  v8[2] = sub_1001A7E68;
  v8[3] = &unk_1003EA180;
  id v7 = v5;
  id v9 = v7;
  sub_1001A6A2C(a1, v7, v6, v8);
}

void sub_1001A7E68(uint64_t a1)
{
}

void sub_1001A7E74(uint64_t a1, void *a2)
{
  id v4 = a2;
  if (v4)
  {
    uint64_t v5 = ASDLogHandleForCategory(3LL, v3);
    id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      id v10 = *(void **)(a1 + 32);
      if (v10) {
        id v10 = (void *)v10[9];
      }
      id v11 = v10;
      int v12 = 138412546;
      uint64_t v13 = v11;
      __int16 v14 = 2114;
      id v15 = v4;
      _os_log_error_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_ERROR,  "[%@] Error sending metrics events. Error: %{public}@",  (uint8_t *)&v12,  0x16u);
    }
  }

  uint64_t v7 = *(void *)(a1 + 40);
  if (v7)
  {
    uint64_t v8 = ASDErrorWithSafeUserInfo(v4);
    id v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
    (*(void (**)(uint64_t, BOOL, void *))(v7 + 16))(v7, v4 == 0LL, v9);
  }
}

void sub_1001A7F90(void *a1)
{
  uint64_t v2 = a1[7];
  if (v2) {
    (*(void (**)(uint64_t, void, void))(v2 + 16))(v2, a1[4], a1[5]);
  }
  sub_1002CC130(a1[6], 0LL);
}

void sub_1001A8028(uint64_t a1)
{
  uint64_t v2 = -[KeepAlive initWithName:]( objc_alloc(&OBJC_CLASS___KeepAlive),  "initWithName:",  @"com.apple.appstored.CrossfireManager.switchMetrics");
  unsigned int v3 = sub_10027356C((uint64_t)&OBJC_CLASS___Restrictions);
  uint64_t v4 = ASDLogHandleForCategory(3LL);
  uint64_t v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);
  if (v3)
  {
    if (!v6) {
      goto LABEL_7;
    }
    __int16 v13 = 0;
    uint64_t v7 = "[Crossfire] Analytics switched to on";
    uint64_t v8 = (uint8_t *)&v13;
  }

  else
  {
    if (!v6) {
      goto LABEL_7;
    }
    __int16 v12 = 0;
    uint64_t v7 = "[Crossfire] Analytics switched to off";
    uint64_t v8 = (uint8_t *)&v12;
  }

  _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, v7, v8, 2u);
LABEL_7:

  id v9 = objc_alloc_init(&OBJC_CLASS____TtC9appstored6LogKey);
  sub_1001A6F10(*(void *)(a1 + 32));
  if ((v3 & 1) == 0) {
    sub_1001A7198(*(void **)(a1 + 32), @"Analytics switched to off");
  }
  id v10 = *(unsigned __int8 **)(a1 + 32);
  if (v10[24] != v3)
  {
    id v11 = v10;
    objc_sync_enter(v11);
    *(_BYTE *)(*(void *)(a1 + 32) + 24LL) = v3;
    objc_sync_exit(v11);
  }
}

uint64_t sub_1001A8160(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

uint64_t sub_1001A8168(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

BOOL sub_1001A8170(id a1, AppUsageDatabaseTransaction *a2)
{
  uint64_t v2 = objc_claimAutoreleasedReturnValue(-[AppUsageDatabaseTransaction connection](a2, "connection"));
  unsigned int v3 = (void *)v2;
  if (v2) {
    sub_1001D68EC(v2, @"DELETE FROM app_events_crossfire;", 0LL, 0LL);
  }

  return 1;
}

void sub_1001A8434(uint64_t a1, void *a2)
{
  uint64_t v159 = 0LL;
  unint64_t v160 = &v159;
  uint64_t v161 = 0x3032000000LL;
  unint64_t v162 = sub_1001A946C;
  SEL v163 = sub_1001A947C;
  id v164 = 0LL;
  id v135 = a2;
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([v135 persistentID]);
  id v133 = [v2 longLongValue];

  unsigned int v3 = (id *)(v160 + 5);
  id obj = (id)v160[5];
  uint64_t v4 = sub_1003244D0((uint64_t)&OBJC_CLASS___AppInstall, v135, &obj);
  self = (void *)objc_claimAutoreleasedReturnValue(v4);
  objc_storeStrong(v3, obj);
  if (!self)
  {
    dispatch_semaphore_t v16 = *(void **)(a1 + 32);
    id v17 = (void *)objc_claimAutoreleasedReturnValue([v135 bundleID]);
    CFPropertyListRef v18 = (void *)objc_claimAutoreleasedReturnValue( +[ASDJobResult resultWithInvalidActivity:bundleID:]( &OBJC_CLASS___ASDJobResult,  "resultWithInvalidActivity:bundleID:",  v133,  v17));
    [v16 addObject:v18];

    uint64_t v19 = ASDLogHandleForCategory(2LL);
    dispatch_time_t v20 = (os_log_s *)objc_claimAutoreleasedReturnValue(v19);
    if (!os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
      goto LABEL_73;
    }
    uint64_t v21 = sub_100323C54(0LL);
    id v22 = (void *)objc_claimAutoreleasedReturnValue(v21);
    uint64_t v23 = v160[5];
    *(_DWORD *)__int128 buf = 138412546;
    *(void *)&uint8_t buf[4] = v22;
    *(_WORD *)&buf[12] = 2114;
    *(void *)&buf[14] = v23;
    __int128 v24 = v20;
    _os_log_error_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_ERROR,  "[%@] Import failed - error: %{public}@",  buf,  0x16u);

LABEL_14:
    dispatch_time_t v20 = v24;
    goto LABEL_73;
  }

  id v6 = objc_getProperty(self, v5, 40LL, 1);
  BOOL v7 = [v6 count] == 0;

  if (v7)
  {
    id v25 = *(void **)(a1 + 32);
    id v26 = (void *)objc_claimAutoreleasedReturnValue([v135 bundleID]);
    uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue( +[ASDJobResult resultWithInvalidActivity:bundleID:]( &OBJC_CLASS___ASDJobResult,  "resultWithInvalidActivity:bundleID:",  v133,  v26));
    [v25 addObject:v27];

    uint64_t v28 = ASDLogHandleForCategory(2LL);
    dispatch_time_t v20 = (os_log_s *)objc_claimAutoreleasedReturnValue(v28);
    if (!os_log_type_enabled(v20, OS_LOG_TYPE_ERROR)) {
      goto LABEL_73;
    }
    id v29 = sub_100323C54(self);
    id v30 = (void *)objc_claimAutoreleasedReturnValue(v29);
    *(_DWORD *)__int128 buf = 138412290;
    *(void *)&uint8_t buf[4] = v30;
    __int128 v24 = v20;
    _os_log_error_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_ERROR,  "[%@] Import failed - no packages",  buf,  0xCu);

    goto LABEL_14;
  }

  [self setValue:*(void *)(a1 + 40) forProperty:@"client_id"];
  uint64_t v8 = objc_autoreleasePoolPush();
  id v9 = objc_alloc(&OBJC_CLASS___LSApplicationRecord);
  id v10 = (void *)objc_claimAutoreleasedReturnValue([v135 bundleID]);
  id v11 = -[LSApplicationRecord initWithBundleIdentifier:allowPlaceholder:error:]( v9,  "initWithBundleIdentifier:allowPlaceholder:error:",  v10,  0LL,  0LL);

  __int16 v12 = @"coordinator_intent";
  if (v11) {
    __int16 v13 = &off_10040BF98;
  }
  else {
    __int16 v13 = &off_10040BFB0;
  }
  [self setValue:v13 forProperty:@"coordinator_intent"];

  objc_autoreleasePoolPop(v8);
  uint64_t v14 = *(void *)(a1 + 56);
  if (v14)
  {
    if (v14 == 2)
    {
      [self setValue:&off_10040C010 forProperty:@"priority"];
      id v15 = &off_10040C028;
    }

    else
    {
      if (v14 != 1) {
        goto LABEL_18;
      }
      [self setValue:&off_10040BFC8 forProperty:@"source_type"];
      __int16 v12 = @"priority";
      id v15 = &off_10040BFE0;
    }
  }

  else
  {
    __int16 v12 = @"priority";
    id v15 = &off_10040BFF8;
  }

  [self setValue:v15 forProperty:v12];
LABEL_18:
  id v32 = (id *)(v160 + 5);
  uint64_t v31 = (void *)v160[5];
  id v138 = self;
  objc_opt_self(&OBJC_CLASS___LegacyManifestRequestTask);
  uint64_t v148 = 0LL;
  uint64_t v33 = sub_1002DF434(v138);
  __int128 v34 = (void *)objc_claimAutoreleasedReturnValue(v33);
  id v35 = 0LL;
  id v36 = v35;
  if (v34)
  {
    *(void *)unint64_t v168 = v35;
    id v37 = sub_1002DF048(v34, v168);
    id v38 = (id)objc_claimAutoreleasedReturnValue(v37);
    id v39 = *(id *)v168;

    if (!v38)
    {
      uint64_t v42 = ASDLogHandleForCategory(2LL);
      id v43 = (os_log_s *)objc_claimAutoreleasedReturnValue(v42);
      if (os_log_type_enabled(v43, OS_LOG_TYPE_ERROR))
      {
        id v115 = sub_100323C54(v138);
        unint64_t v116 = (void *)objc_claimAutoreleasedReturnValue(v115);
        *(_DWORD *)__int128 buf = 138412546;
        *(void *)&uint8_t buf[4] = v116;
        *(_WORD *)&buf[12] = 2114;
        *(void *)&buf[14] = v39;
        _os_log_error_impl( (void *)&_mh_execute_header,  v43,  OS_LOG_TYPE_ERROR,  "[%@] Failed to create coordinator error: %{public}@",  buf,  0x16u);
      }

      id v38 = 0LL;
      __int16 v132 = 0LL;
      id v36 = v39;
      goto LABEL_31;
    }

    if (![v38 conformsToProtocol:&OBJC_PROTOCOL___IXCoordinatorWithPlaceholderPromise]
      || [v38 creatorIdentifier] != (id)1
      || (sub_1001E4DA0(v38) & 1) != 0)
    {
      id v36 = v39;
LABEL_24:
      id v38 = v38;
      __int16 v132 = v38;
      goto LABEL_31;
    }

    id v100 = objc_getProperty(v138, v40, 40LL, 1);
    unint64_t v101 = (void *)objc_claimAutoreleasedReturnValue([v100 firstObject]);
    id v167 = v39;
    uint64_t v102 = sub_10026D48C(v138, v101, &v167);
    id v103 = (void *)objc_claimAutoreleasedReturnValue(v102);
    id v36 = v167;

    if (v103)
    {
      id v166 = v36;
      id v104 = sub_10026C808((uint64_t)v103, &v166);
      double v105 = (void *)objc_claimAutoreleasedReturnValue(v104);
      id v106 = v166;

      if (v105)
      {
        id v165 = v106;
        unsigned __int8 v107 = sub_1001E606C(v38, v105, &v165);
        id v36 = v165;

        if ((v107 & 1) != 0)
        {

          goto LABEL_24;
        }

        uint64_t v124 = ASDLogHandleForCategory(25LL);
        uint64_t v125 = (os_log_s *)objc_claimAutoreleasedReturnValue(v124);
        if (os_log_type_enabled(v125, OS_LOG_TYPE_DEFAULT))
        {
          __int128 v126 = sub_100323C54(v138);
          __int128 v127 = (void *)objc_claimAutoreleasedReturnValue(v126);
          *(_DWORD *)__int128 buf = 138412546;
          *(void *)&uint8_t buf[4] = v127;
          *(_WORD *)&buf[12] = 2114;
          *(void *)&buf[14] = v36;
          _os_log_impl( (void *)&_mh_execute_header,  v125,  OS_LOG_TYPE_DEFAULT,  "[%@]: Failed to set placeholder: %{public}@",  buf,  0x16u);
        }

        [v105 cancelForReason:v36 client:1 error:0];
      }

      else
      {
        uint64_t v122 = ASDLogHandleForCategory(2LL);
        id v123 = (os_log_s *)objc_claimAutoreleasedReturnValue(v122);
        if (os_log_type_enabled(v123, OS_LOG_TYPE_ERROR))
        {
          unint64_t v130 = sub_100323C54(v138);
          id v131 = (void *)objc_claimAutoreleasedReturnValue(v130);
          *(_DWORD *)__int128 buf = 138412546;
          *(void *)&uint8_t buf[4] = v131;
          *(_WORD *)&buf[12] = 2114;
          *(void *)&buf[14] = v106;
          _os_log_error_impl( (void *)&_mh_execute_header,  v123,  OS_LOG_TYPE_ERROR,  "[%@] Failed to create placeholder error: %{public}@",  buf,  0x16u);
        }

        id v36 = v106;
      }
    }

    else
    {
      uint64_t v113 = ASDLogHandleForCategory(2LL);
      unint64_t v114 = (os_log_s *)objc_claimAutoreleasedReturnValue(v113);
      if (os_log_type_enabled(v114, OS_LOG_TYPE_ERROR))
      {
        unint64_t v128 = sub_100323C54(v138);
        id v129 = (void *)objc_claimAutoreleasedReturnValue(v128);
        *(_DWORD *)__int128 buf = 138412546;
        *(void *)&uint8_t buf[4] = v129;
        *(_WORD *)&buf[12] = 2114;
        *(void *)&buf[14] = v36;
        _os_log_error_impl( (void *)&_mh_execute_header,  v114,  OS_LOG_TYPE_ERROR,  "[%@] Failed to build placeholder error: %{public}@",  buf,  0x16u);
      }
    }
  }

  else
  {
    uint64_t v41 = ASDLogHandleForCategory(2LL);
    id v38 = (id)objc_claimAutoreleasedReturnValue(v41);
    if (os_log_type_enabled((os_log_t)v38, OS_LOG_TYPE_ERROR))
    {
      unint64_t v108 = sub_100323C54(v138);
      uint64_t v109 = (void *)objc_claimAutoreleasedReturnValue(v108);
      *(_DWORD *)__int128 buf = 138412546;
      *(void *)&uint8_t buf[4] = v109;
      *(_WORD *)&buf[12] = 2114;
      *(void *)&buf[14] = v36;
      _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)v38,  OS_LOG_TYPE_ERROR,  "[%@] Failed to build coordinator error: %{public}@",  buf,  0x16u);
    }
  }

  __int16 v132 = 0LL;
LABEL_31:

  objc_storeStrong(v32, v31);
  if (v132)
  {
    double v44 = (void *)objc_claimAutoreleasedReturnValue([v132 uniqueIdentifier]);
    [v138 setValue:v44 forProperty:@"coordinator_id"];

    __int128 v156 = 0u;
    __int128 v157 = 0u;
    __int128 v154 = 0u;
    __int128 v155 = 0u;
    id v46 = objc_getProperty(v138, v45, 40LL, 1);
    id v47 = [v46 countByEnumeratingWithState:&v154 objects:v173 count:16];
    if (v47)
    {
      uint64_t v48 = *(void *)v155;
      do
      {
        __int128 v49 = 0LL;
        do
        {
          if (*(void *)v155 != v48) {
            objc_enumerationMutation(v46);
          }
          id v50 = *(void **)(*((void *)&v154 + 1) + 8LL * (void)v49);
          id v51 = sub_1001E25D0(v50, (uint64_t)@"bytes_total");
          __int16 v52 = (void *)objc_claimAutoreleasedReturnValue(v51);
          BOOL v53 = v52 == 0LL;

          if (v53)
          {
            id v54 = sub_1001E2798(v50, (uint64_t)@"package_url");
            id v55 = (void *)objc_claimAutoreleasedReturnValue(v54);
            if (v55)
            {
              __int16 v56 = objc_alloc(&OBJC_CLASS___DetermineSizeForURLTask);
              int v57 = sub_100323C54(v138);
              __int16 v58 = (void *)objc_claimAutoreleasedReturnValue(v57);
              id v59 = sub_10025D76C((id *)&v56->super.super.super.isa, v55, v58);

              if ([*(id *)(a1 + 48) runSubTask:v59 returningError:0])
              {
                if (v59) {
                  id Property = objc_getProperty(v59, v60, 72LL, 1);
                }
                else {
                  id Property = 0LL;
                }
                id v62 = (os_log_s *)Property;
                [v50 setValue:v62 forProperty:@"bytes_total"];
              }

              else
              {
                uint64_t v63 = ASDLogHandleForCategory(2LL);
                id v62 = (os_log_s *)objc_claimAutoreleasedReturnValue(v63);
                if (os_log_type_enabled(v62, OS_LOG_TYPE_ERROR))
                {
                  id v64 = sub_100323C54(v138);
                  id v66 = (void *)objc_claimAutoreleasedReturnValue(v64);
                  if (v59) {
                    id v67 = objc_getProperty(v59, v65, 32LL, 1);
                  }
                  else {
                    id v67 = 0LL;
                  }
                  id v134 = v67;
                  *(_DWORD *)__int128 buf = 138412546;
                  *(void *)&uint8_t buf[4] = v66;
                  *(_WORD *)&buf[12] = 2114;
                  *(void *)&buf[14] = v134;
                  _os_log_error_impl( (void *)&_mh_execute_header,  v62,  OS_LOG_TYPE_ERROR,  "[%@] Unable to determine download size error: %{public}@",  buf,  0x16u);
                }
              }
            }
          }

          __int128 v49 = (char *)v49 + 1;
        }

        while (v47 != v49);
        id v68 = [v46 countByEnumeratingWithState:&v154 objects:v173 count:16];
        id v47 = v68;
      }

      while (v68);
    }

    *(void *)__int128 buf = 0LL;
    *(void *)&buf[8] = buf;
    *(void *)&uint8_t buf[16] = 0x4010000000LL;
    uint64_t v172 = &unk_10039135E;
    uint64_t v148 = 0LL;
    __int128 v149 = &v148;
    uint64_t v150 = 0x3032000000LL;
    uint64_t v151 = sub_1001A946C;
    uint64_t v152 = sub_1001A947C;
    id v153 = 0LL;
    id v69 = sub_1002EEBC0((uint64_t)&OBJC_CLASS___AppInstallsDatabaseStore);
    id v70 = (void *)objc_claimAutoreleasedReturnValue(v69);
    v143[0] = _NSConcreteStackBlock;
    v143[1] = 3221225472LL;
    v143[2] = sub_1001A9484;
    v143[3] = &unk_1003EA910;
    uint64_t v145 = buf;
    __int128 v71 = v138;
    id v144 = v71;
    uint64_t v146 = &v159;
    unint64_t v147 = &v148;
    [v70 modifyUsingTransaction:v143];

    if (*(void *)(*(void *)&buf[8] + 56LL))
    {
      id v72 = sub_1002E5EDC((uint64_t)&OBJC_CLASS___AppInstallPolicy);
      __int128 v73 = (void *)objc_claimAutoreleasedReturnValue(v72);
      __int128 v74 = objc_alloc(&OBJC_CLASS___ReviewNetworkPolicyTask);
      uint64_t v75 = sub_1002D883C((id *)&v74->super.super.super.isa, (void *)v149[5]);
      uint64_t v76 = *(void **)(a1 + 48);
      id v77 = (id *)(v160 + 5);
      id v142 = (id)v160[5];
      unsigned int v78 = [v76 runSubTask:v75 returningError:&v142];
      objc_storeStrong(v77, v142);
      if (v78)
      {
        sub_1002D8E5C(v75, v73);
      }

      else
      {
        sub_1002E60D4((uint64_t)v73, 4LL);
        sub_1002E6174((uint64_t)v73, 4LL);
        sub_1002E5F7C((uint64_t)v73, 60LL);
      }

      id v88 = sub_1002EEBC0((uint64_t)&OBJC_CLASS___AppInstallsDatabaseStore);
      unint64_t v89 = (void *)objc_claimAutoreleasedReturnValue(v88);
      v139[0] = _NSConcreteStackBlock;
      v139[1] = 3221225472LL;
      v139[2] = sub_1001A95FC;
      v139[3] = &unk_1003EA938;
      unsigned __int8 v141 = buf;
      id v87 = v73;
      id v140 = v87;
      [v89 modifyUsingTransaction:v139];

      if (*(void *)(*(void *)&buf[8] + 56LL) == 2LL)
      {
        uint64_t v90 = ASDLogHandleForCategory(2LL);
        __int128 v91 = (os_log_s *)objc_claimAutoreleasedReturnValue(v90);
        if (os_log_type_enabled(v91, OS_LOG_TYPE_ERROR))
        {
          __int128 v120 = sub_100323C54(v71);
          id v121 = (void *)objc_claimAutoreleasedReturnValue(v120);
          *(_DWORD *)unint64_t v168 = 138412290;
          *(void *)&v168[4] = v121;
          _os_log_error_impl( (void *)&_mh_execute_header,  v91,  OS_LOG_TYPE_ERROR,  "[%@] Import failed - already exists",  v168,  0xCu);
        }

        id v92 = *(void **)(a1 + 32);
        id v93 = (void *)objc_claimAutoreleasedReturnValue([v135 bundleID]);
        unint64_t v94 = (void *)objc_claimAutoreleasedReturnValue( +[ASDJobResult resultWithExistingActivity:bundleID:]( &OBJC_CLASS___ASDJobResult,  "resultWithExistingActivity:bundleID:",  v133,  v93));
        [v92 addObject:v94];
      }

      else
      {
        uint64_t v95 = ASDLogHandleForCategory(2LL);
        id v96 = (os_log_s *)objc_claimAutoreleasedReturnValue(v95);
        if (os_log_type_enabled(v96, OS_LOG_TYPE_DEFAULT))
        {
          id v97 = sub_100323C54(v71);
          SEL v98 = (void *)objc_claimAutoreleasedReturnValue(v97);
          *(_DWORD *)unint64_t v168 = 138412290;
          *(void *)&v168[4] = v98;
          _os_log_impl( (void *)&_mh_execute_header,  v96,  OS_LOG_TYPE_DEFAULT,  "[%@] Import completed successfully",  v168,  0xCu);
        }

        SEL v99 = *(void **)(a1 + 32);
        id v93 = (void *)objc_claimAutoreleasedReturnValue([v135 bundleID]);
        unint64_t v94 = (void *)objc_claimAutoreleasedReturnValue( +[ASDJobResult resultWithInvalidActivity:bundleID:]( &OBJC_CLASS___ASDJobResult,  "resultWithInvalidActivity:bundleID:",  v133,  v93));
        [v99 addObject:v94];
      }
    }

    else
    {
      uint64_t v84 = ASDLogHandleForCategory(2LL);
      __int128 v85 = (os_log_s *)objc_claimAutoreleasedReturnValue(v84);
      if (os_log_type_enabled(v85, OS_LOG_TYPE_ERROR))
      {
        id v117 = sub_100323C54(v71);
        __int128 v118 = (void *)objc_claimAutoreleasedReturnValue(v117);
        uint64_t v119 = v160[5];
        *(_DWORD *)unint64_t v168 = 138412546;
        *(void *)&v168[4] = v118;
        __int16 v169 = 2114;
        uint64_t v170 = v119;
        _os_log_error_impl( (void *)&_mh_execute_header,  v85,  OS_LOG_TYPE_ERROR,  "[%@] Import failed - error: %{public}@",  v168,  0x16u);
      }

      __int128 v86 = *(void **)(a1 + 32);
      id v87 = (id)objc_claimAutoreleasedReturnValue([v135 bundleID]);
      uint64_t v75 = (id *)objc_claimAutoreleasedReturnValue( +[ASDJobResult resultWithInvalidActivity:bundleID:]( &OBJC_CLASS___ASDJobResult,  "resultWithInvalidActivity:bundleID:",  v133,  v87));
      [v86 addObject:v75];
    }

    _Block_object_dispose(&v148, 8);
    _Block_object_dispose(buf, 8);
    dispatch_time_t v20 = (os_log_s *)v132;
  }

  else
  {
    uint64_t v79 = ASDLogHandleForCategory(2LL);
    id v80 = (os_log_s *)objc_claimAutoreleasedReturnValue(v79);
    if (os_log_type_enabled(v80, OS_LOG_TYPE_ERROR))
    {
      uint64_t v110 = sub_100323C54(v138);
      __int128 v111 = (void *)objc_claimAutoreleasedReturnValue(v110);
      uint64_t v112 = v160[5];
      *(_DWORD *)__int128 buf = 138412546;
      *(void *)&uint8_t buf[4] = v111;
      *(_WORD *)&buf[12] = 2114;
      *(void *)&buf[14] = v112;
      _os_log_error_impl( (void *)&_mh_execute_header,  v80,  OS_LOG_TYPE_ERROR,  "[%@] Failed to build coordinator error: %{public}@",  buf,  0x16u);
    }

    __int16 v81 = *(void **)(a1 + 32);
    id v82 = (void *)objc_claimAutoreleasedReturnValue([v135 bundleID]);
    id v83 = (void *)objc_claimAutoreleasedReturnValue( +[ASDJobResult resultWithInvalidActivity:bundleID:]( &OBJC_CLASS___ASDJobResult,  "resultWithInvalidActivity:bundleID:",  v133,  v82));
    [v81 addObject:v83];

    dispatch_time_t v20 = 0LL;
  }

LABEL_73:
  _Block_object_dispose(&v159, 8);
}

          id v61 = ASDLogHandleForCategory(2LL);
          id v62 = (os_log_s *)objc_claimAutoreleasedReturnValue(v61);
          if (os_log_type_enabled(v62, OS_LOG_TYPE_ERROR))
          {
            uint64_t v113 = sub_10021B614(v117);
            unint64_t v114 = (void *)objc_claimAutoreleasedReturnValue(v113);
            *(_DWORD *)__int128 buf = 138412546;
            *(void *)&uint8_t buf[4] = v114;
            *(_WORD *)&buf[12] = 2114;
            *(void *)&buf[14] = v24;
            _os_log_error_impl( (void *)&_mh_execute_header,  v62,  OS_LOG_TYPE_ERROR,  "[%@] Blocking delta and will retry as full update after encountering error: %{public}@",  buf,  0x16u);
          }

          uint64_t v33 = @"blocked";
          uint64_t v31 = &__kCFBooleanTrue;
          uint64_t v21 = v118;
          id v32 = v118;
LABEL_76:
          [v32 setValue:v31 forProperty:v33];
          sub_1001B2B88(a1, a2);
LABEL_77:
          uint64_t v63 = sub_10021B73C(v14);
          sub_1001B2CF8(a1, v14, (uint64_t)v63);
LABEL_109:

LABEL_110:
          id WeakRetained = objc_loadWeakRetained(a1 + 2);
          [WeakRetained stopInstallID:a2 withReason:0 transaction:a1];

          goto LABEL_111;
        }
      }
    }

    else if ([v25 isEqualToString:AMSErrorDomain])
    {
      if (v26 != 6) {
        goto LABEL_70;
      }
    }

    else if ([v25 isEqualToString:v10])
    {
      if (v26 != 11) {
        goto LABEL_70;
      }
    }

    else if ([v25 isEqualToString:IXErrorDomain])
    {
      if (v26 != 5 && v26 != 24) {
        goto LABEL_70;
      }
    }

    else if (![v25 isEqualToString:NSURLErrorDomain] || v26 != -1001)
    {
      goto LABEL_70;
    }

void sub_1001A93CC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, char a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, char a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,char a63)
{
}

uint64_t sub_1001A946C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1001A947C(uint64_t a1)
{
}

BOOL sub_1001A9484(void *a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = v3;
  uint64_t v5 = (void *)a1[4];
  uint64_t v6 = *(void *)(a1[6] + 8LL);
  id v9 = *(void **)(v6 + 40);
  uint64_t v8 = (id *)(v6 + 40);
  id v7 = v9;
  id obj = v9;
  if (v3)
  {
    sub_1001B3EA0(v3, v5, 0, &obj, &v24);
    id v7 = obj;
  }

  else
  {
    __int128 v24 = 0u;
    __int128 v25 = 0u;
  }

  objc_storeStrong(v8, v7);
  uint64_t v10 = *(void *)(a1[5] + 8LL);
  __int128 v11 = v25;
  *(_OWORD *)(v10 + 32) = v24;
  *(_OWORD *)(v10 + 4_Block_object_dispose(va, 8) = v11;
  uint64_t v12 = *(void *)(a1[5] + 8LL);
  uint64_t v13 = *(void *)(v12 + 56);
  if (v13 == 2)
  {
    sub_1001B510C((uint64_t)v4, *(void *)(v12 + 32));
    uint64_t v13 = *(void *)(*(void *)(a1[5] + 8LL) + 56LL);
  }

  if (v13)
  {
    uint64_t v14 = objc_alloc(&OBJC_CLASS___AppInstallEntity);
    uint64_t v15 = *(void *)(*(void *)(a1[5] + 8LL) + 32LL);
    dispatch_semaphore_t v16 = (void *)objc_claimAutoreleasedReturnValue([v4 connection]);
    id v17 = -[SQLiteEntity initWithPersistentID:onConnection:](v14, "initWithPersistentID:onConnection:", v15, v16);

    CFPropertyListRef v18 = sub_1002D68B4(v17);
    uint64_t v19 = *(void *)(a1[7] + 8LL);
    dispatch_time_t v20 = *(void **)(v19 + 40);
    *(void *)(v19 + 40) = v18;

    BOOL v21 = *(void *)(*(void *)(a1[5] + 8LL) + 56LL) != 0LL;
  }

  else
  {
    BOOL v21 = 0LL;
  }

  return v21;
}

uint64_t sub_1001A95FC(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = objc_alloc(&OBJC_CLASS___AppInstallEntity);
  uint64_t v5 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 32LL);
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v3 connection]);
  id v7 = -[SQLiteEntity initWithPersistentID:onConnection:](v4, "initWithPersistentID:onConnection:", v5, v6);

  sub_10021B828(v7, *(id **)(a1 + 32));
  if (sub_1002E6090(*(id **)(a1 + 32)) == (id *)2)
  {
    uint64_t v9 = ASDLogHandleForCategory(2LL);
    uint64_t v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      __int128 v11 = sub_10021B614(v7);
      uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
      int v20 = 138412290;
      BOOL v21 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "[%@] Explicitly denied for low data network - canceling installation",  (uint8_t *)&v20,  0xCu);
    }

    if (v3) {
      id Property = objc_getProperty(v3, v13, 24LL, 1);
    }
    else {
      id Property = 0LL;
    }
    id v15 = Property;
    dispatch_semaphore_t v16 = sub_10021C40C(v7, -30LL);
    id v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
    sub_1001EB714((uint64_t)v15, v17);
  }

  else
  {
    if (v3)
    {
      CFPropertyListRef v18 = objc_getProperty(v3, v8, 24LL, 1);
      if (v18) {
        v18[16] |= 0x40uLL;
      }
    }

    else
    {
      CFPropertyListRef v18 = 0LL;
    }
  }

  return 1LL;
}

id sub_1001A97C4(uint64_t a1)
{
  if (qword_100462188 != -1) {
    dispatch_once(&qword_100462188, &stru_1003EA980);
  }
  return (id)qword_100462180;
}

void sub_1001A9808(id a1)
{
  id v1 = objc_alloc_init(&OBJC_CLASS___InstallationService);
  uint64_t v2 = (void *)qword_100462180;
  qword_100462180 = (uint64_t)v1;
}

void sub_1001A9A20(uint64_t a1)
{
  uint64_t v2 = sub_1002A3908((uint64_t)&OBJC_CLASS___InstallAppReviewAppsTask, *(void **)(a1 + 32));
  id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  uint64_t v5 = _NSConcreteStackBlock;
  uint64_t v6 = 3221225472LL;
  id v7 = sub_1001A9AC4;
  uint64_t v8 = &unk_1003EA3B8;
  id v9 = *(id *)(a1 + 56);
  uint64_t v10 = v3;
  [v3 setCompletionBlock:&v5];
  uint64_t v4 = *(void *)(*(void *)(a1 + 48) + 40LL);
  if (v4) {
    objc_msgSend(*(id *)(v4 + 8), "addOperation:", v3, v5, v6, v7, v8);
  }
}

void sub_1001A9AC4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = sub_1002A3EB0(*(id **)(a1 + 40));
  id v7 = (id)objc_claimAutoreleasedReturnValue(v3);
  id Property = *(id *)(a1 + 40);
  if (Property) {
    id Property = objc_getProperty(Property, v4, 32LL, 1);
  }
  id v6 = Property;
  (*(void (**)(uint64_t, id, id))(v2 + 16))(v2, v7, v6);
}

void sub_1001A9C90(uint64_t a1)
{
  uint64_t v2 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  __int128 v30 = 0u;
  __int128 v31 = 0u;
  __int128 v32 = 0u;
  __int128 v33 = 0u;
  id v3 = *(id *)(a1 + 32);
  id v4 = [v3 countByEnumeratingWithState:&v30 objects:v36 count:16];
  if (v4)
  {
    uint64_t v5 = *(void *)v31;
    do
    {
      id v6 = 0LL;
      do
      {
        if (*(void *)v31 != v5) {
          objc_enumerationMutation(v3);
        }
        id v7 = sub_1002D71C4( objc_alloc(&OBJC_CLASS___RestoreAppInstall),  *(void **)(*((void *)&v30 + 1) + 8LL * (void)v6));
        -[NSMutableArray addObject:](v2, "addObject:", v7);

        id v6 = (char *)v6 + 1;
      }

      while (v4 != v6);
      id v4 = [v3 countByEnumeratingWithState:&v30 objects:v36 count:16];
    }

    while (v4);
  }

  if (-[NSMutableArray count](v2, "count"))
  {
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[ACAccountStore ams_sharedAccountStore](&OBJC_CLASS___ACAccountStore, "ams_sharedAccountStore"));
    id v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "ams_activeiTunesAccount"));

    uint64_t v10 = ASDLogHandleForCategory(14LL);
    __int128 v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "ams_DSID"));
      *(_DWORD *)__int128 buf = 138543362;
      id v35 = v12;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "Restoring app: %{public}@", buf, 0xCu);
    }

    uint64_t v13 = sub_1001FF38C((id *)objc_alloc(&OBJC_CLASS___RestoreBatchTask), v2);
    id v15 = v13;
    if (v13) {
      objc_setProperty_atomic_copy(v13, v14, v9, 40LL);
    }
    objc_initWeak((id *)buf, v15);
    id v22 = _NSConcreteStackBlock;
    uint64_t v23 = 3221225472LL;
    __int128 v24 = sub_1001A9F7C;
    __int128 v25 = &unk_1003EA9A8;
    objc_copyWeak(&v29, (id *)buf);
    id v16 = *(id *)(a1 + 48);
    uint64_t v17 = *(void *)(a1 + 40);
    id v28 = v16;
    uint64_t v26 = v17;
    id v18 = v9;
    id v27 = v18;
    [v15 setCompletionBlock:&v22];
    id v19 = sub_10020F1C0((uint64_t)&OBJC_CLASS___TaskQueue);
    uint64_t v20 = objc_claimAutoreleasedReturnValue(v19);
    BOOL v21 = (void *)v20;
    if (v20) {
      objc_msgSend(*(id *)(v20 + 8), "addOperation:", v15, v22, v23, v24, v25, v26);
    }

    objc_destroyWeak(&v29);
    objc_destroyWeak((id *)buf);
  }
}

void sub_1001A9F54( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, id location)
{
}

void sub_1001A9F7C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  id v4 = WeakRetained;
  if (WeakRetained) {
    id WeakRetained = objc_getProperty(WeakRetained, v3, 32LL, 1);
  }
  id v5 = WeakRetained;

  if (v5)
  {
    uint64_t v6 = ASDLogHandleForCategory(29LL);
    id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      if (v4) {
        id Property = objc_getProperty(v4, v8, 32LL, 1);
      }
      else {
        id Property = 0LL;
      }
      id v34 = Property;
      *(_DWORD *)__int128 buf = 138412290;
      id v43 = v34;
      _os_log_error_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_ERROR,  "Content restore lookup complete with error: %@",  buf,  0xCu);
    }

    uint64_t v10 = *(void *)(a1 + 48);
    if (v4) {
      id v11 = objc_getProperty(v4, v9, 32LL, 1);
    }
    else {
      id v11 = 0LL;
    }
    id v12 = v11;
    (*(void (**)(uint64_t, void, id))(v10 + 16))(v10, 0LL, v12);
  }

  else
  {
    id v12 = (id)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableOrderedSet orderedSet](&OBJC_CLASS___NSMutableOrderedSet, "orderedSet"));
    __int128 v38 = 0u;
    __int128 v39 = 0u;
    __int128 v40 = 0u;
    __int128 v41 = 0u;
    uint64_t v35 = a1;
    if (v4) {
      id v15 = objc_getProperty(v4, v13, 80LL, 1);
    }
    else {
      id v15 = 0LL;
    }
    id v16 = v15;
    id v17 = [v16 countByEnumeratingWithState:&v38 objects:v46 count:16];
    if (v17)
    {
      id v18 = v17;
      uint64_t v19 = *(void *)v39;
      do
      {
        for (uint64_t i = 0LL; i != v18; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v39 != v19) {
            objc_enumerationMutation(v16);
          }
          BOOL v21 = *(void **)(*((void *)&v38 + 1) + 8LL * (void)i);
          id v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "valueForProperty:", @"external_id", v35));
          [v12 addObject:v22];

          [v14 addObject:v21];
        }

        id v18 = [v16 countByEnumeratingWithState:&v38 objects:v46 count:16];
      }

      while (v18);
    }

    if ([v14 count])
    {
      uint64_t v23 = *(void **)(*(void *)(v35 + 32) + 16LL);
      v36[0] = _NSConcreteStackBlock;
      v36[1] = 3221225472LL;
      v36[2] = sub_1001AA32C;
      void v36[3] = &unk_1003EA9D8;
      id v37 = v14;
      [v23 modifyUsingTransaction:v36];
      id v24 = sub_10023B9CC((uint64_t)&OBJC_CLASS___AppInstallScheduler);
      __int128 v25 = (void *)objc_claimAutoreleasedReturnValue(v24);
      sub_10023C018((uint64_t)v25, 64LL);
    }

    uint64_t v26 = ASDLogHandleForCategory(29LL);
    id v27 = (os_log_s *)objc_claimAutoreleasedReturnValue(v26);
    if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
    {
      id v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v35 + 40), "ams_DSID"));
      if (v4) {
        id v30 = objc_getProperty(v4, v28, 80LL, 1);
      }
      else {
        id v30 = 0LL;
      }
      id v31 = v30;
      id v32 = [v31 count];
      *(_DWORD *)__int128 buf = 138412546;
      id v43 = v29;
      __int16 v44 = 2048;
      id v45 = v32;
      _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_DEFAULT,  "Content restore lookup complete for account: %@ with %ld item(s)",  buf,  0x16u);
    }

    (*(void (**)(void))(*(void *)(v35 + 48) + 16LL))();
  }
}

uint64_t sub_1001AA32C(uint64_t a1, void *a2)
{
  id v2 = sub_1001B4590(a2, *(void **)(a1 + 32));
  return 1LL;
}

void sub_1001AA44C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = sub_100251170(*(id **)(a1 + 40));
  id v7 = (id)objc_claimAutoreleasedReturnValue(v3);
  id Property = *(id *)(a1 + 40);
  if (Property) {
    id Property = objc_getProperty(Property, v4, 32LL, 1);
  }
  id v6 = Property;
  (*(void (**)(uint64_t, id, id))(v2 + 16))(v2, v7, v6);
}

id *sub_1001AA51C(id *a1, void *a2)
{
  id v4 = a2;
  if (a1)
  {
    v7.receiver = a1;
    v7.super_class = (Class)&OBJC_CLASS___PurchaseHistoryUpdateDAAPRequestEncoder;
    id v5 = (id *)objc_msgSendSuper2(&v7, "init");
    a1 = v5;
    if (v5) {
      objc_storeStrong(v5 + 1, a2);
    }
  }

  return a1;
}

void *sub_1001AA658(void *a1, _OWORD *a2, unsigned int a3)
{
  if (!a1) {
    return 0LL;
  }
  v25.receiver = a1;
  v25.super_class = (Class)&OBJC_CLASS___XPCServiceEntitlements;
  id v5 = objc_msgSendSuper2(&v25, "init");
  if (v5)
  {
    __int128 v6 = a2[1];
    *(_OWORD *)token.val = *a2;
    *(_OWORD *)&token.val[4] = v6;
    objc_super v7 = SecTaskCreateWithAuditToken(kCFAllocatorDefault, &token);
    void v5[2] = v7;
    *((_DWORD *)v5 + 6) = a3;
    uint64_t v8 = objc_opt_self(&OBJC_CLASS___XPCServiceEntitlements);
    if (v7)
    {
      uint64_t v9 = v8;
      CFErrorRef error = 0LL;
      objc_super v7 = (__SecTask *)SecTaskCopyValueForEntitlement(v7, @"com.apple.private.appstored", &error);
      if (error)
      {
        uint64_t v11 = ASDLogHandleForCategory(14LL, v10);
        id v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
        if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
        {
          BOOL v21 = (void *)objc_opt_class(v9, v13);
          token.val[0] = 138412802;
          *(void *)&token.val[1] = v21;
          LOWORD(token.val[3]) = 1024;
          *(unsigned int *)((char *)&token.val[3] + 2) = a3;
          HIWORD(token.val[4]) = 2112;
          *(void *)&token.val[5] = error;
          id v22 = v21;
          _os_log_error_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_ERROR,  "[%@]: Unable to get entitlements for pid: %i error: %@",  (uint8_t *)&token,  0x1Cu);
        }
      }

      if (v7)
      {
        CFTypeID TypeID = CFArrayGetTypeID();
        if (TypeID == CFGetTypeID(v7))
        {
          uint64_t v16 = ASDLogHandleForCategory(14LL, v15);
          id v17 = (os_log_s *)objc_claimAutoreleasedReturnValue(v16);
          if (os_log_type_enabled(v17, OS_LOG_TYPE_DEBUG))
          {
            uint64_t v23 = (void *)objc_opt_class(v9, v18);
            token.val[0] = 138412802;
            *(void *)&token.val[1] = v23;
            LOWORD(token.val[3]) = 1024;
            *(unsigned int *)((char *)&token.val[3] + 2) = a3;
            HIWORD(token.val[4]) = 2112;
            *(void *)&token.val[5] = v7;
            id v24 = v23;
            _os_log_debug_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEBUG,  "[%@]: Entitlements for pid: %i %@",  (uint8_t *)&token,  0x1Cu);
          }
        }

        else
        {
          CFRelease(v7);
          objc_super v7 = 0LL;
        }
      }
    }

    uint64_t v19 = (void *)v5[1];
    v5[1] = v7;
  }

  return v5;
}

uint64_t sub_1001AA8DC(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = a1;
  if (a1)
  {
    unsigned __int8 v6 = [*(id *)(a1 + 8) containsObject:a2];
    if (a3) {
      char v7 = v6;
    }
    else {
      char v7 = 1;
    }
    if ((v7 & 1) == 0) {
      unsigned __int8 v6 = sub_1001AA988( (uint64_t)&OBJC_CLASS___XPCServiceEntitlements,  a3,  *(__SecTask **)(v5 + 16),  *(_DWORD *)(v5 + 24));
    }
    uint64_t v5 = (v6 & 1) != 0
      || sub_1001AA988( (uint64_t)&OBJC_CLASS___XPCServiceEntitlements,  @"com.apple.itunesstored.private",  *(__SecTask **)(v5 + 16),  *(_DWORD *)(v5 + 24));
  }

  return v5;
}

void sub_1001AA974(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL sub_1001AA988(uint64_t a1, void *a2, __SecTask *a3, int a4)
{
  char v7 = a2;
  uint64_t v9 = objc_opt_self(a1);
  if (!a3)
  {
    uint64_t v18 = ASDLogHandleForCategory(14LL, v8);
    uint64_t v19 = (os_log_s *)objc_claimAutoreleasedReturnValue(v18);
    if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)__int128 buf = 138412802;
      id v32 = (id)objc_opt_class(v9, v20);
      __int16 v33 = 2112;
      id v34 = v7;
      __int16 v35 = 1024;
      int v36 = a4;
      id v29 = v32;
      _os_log_error_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_ERROR,  "[%@]: No task for entitlement: %@ pid: %i",  buf,  0x1Cu);
    }

    goto LABEL_12;
  }

  CFErrorRef error = 0LL;
  CFTypeRef v11 = SecTaskCopyValueForEntitlement(a3, v7, &error);
  if (error)
  {
    uint64_t v12 = ASDLogHandleForCategory(14LL, v10);
    uint64_t v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      id v27 = (void *)objc_opt_class(v9, v14);
      *(_DWORD *)__int128 buf = 138413058;
      id v32 = v27;
      __int16 v33 = 2112;
      id v34 = v7;
      __int16 v35 = 1024;
      int v36 = a4;
      __int16 v37 = 2112;
      CFErrorRef v38 = error;
      id v28 = v27;
      _os_log_error_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_ERROR,  "[%@]: Unable to get entitlements: %@ for pid: %i error: %@",  buf,  0x26u);
    }
  }

  if (!v11)
  {
LABEL_12:
    BOOL v17 = 0LL;
    goto LABEL_17;
  }

  CFTypeID TypeID = CFBooleanGetTypeID();
  BOOL v17 = TypeID == CFGetTypeID(v11) && CFBooleanGetValue((CFBooleanRef)v11) != 0;
  uint64_t v21 = ASDLogHandleForCategory(14LL, v16);
  id v22 = (os_log_s *)objc_claimAutoreleasedReturnValue(v21);
  if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
  {
    id v24 = (void *)objc_opt_class(v9, v23);
    *(_DWORD *)__int128 buf = 138413058;
    id v32 = v24;
    __int16 v33 = 2112;
    id v34 = v7;
    __int16 v35 = 1024;
    int v36 = a4;
    __int16 v37 = 1024;
    LODWORD(v3_Block_object_dispose(va, 8) = v17;
    id v25 = v24;
    _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEFAULT,  "[%@]: We have the entitlement: %@ for pid: %i result: %d",  buf,  0x22u);
  }

  CFRelease(v11);
LABEL_17:

  return v17;
}

id sub_1001AAC98(id a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    v31.receiver = a1;
    v31.super_class = (Class)&OBJC_CLASS___AppEvent;
    a1 = objc_msgSendSuper2(&v31, "init");
    if (a1)
    {
      id v4 = sub_1002C860C(v3);
      uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
      [a1 setValue:v5 forProperty:@"bundle_id"];

      id v6 = sub_1002C8BAC(v3);
      char v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
      [a1 setValue:v7 forProperty:@"bundle_version"];

      id v8 = sub_1002C8710(v3);
      uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
      [a1 setValue:v9 forProperty:@"cohort"];

      id v10 = sub_1002C8B88(v3);
      CFTypeRef v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
      [a1 setValue:v11 forProperty:@"device_vendor_id"];

      id v12 = sub_1002C8654(v3);
      uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
      [a1 setValue:v13 forProperty:@"evid"];

      if (v3) {
        id v14 = sub_1001E2698(v3, (uint64_t)@"app_platform");
      }
      else {
        id v14 = 0LL;
      }
      uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInteger:", v14));
      [a1 setValue:v15 forProperty:@"app_platform"];

      uint64_t v16 = +[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", sub_1002C8C34(v3));
      BOOL v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
      [a1 setValue:v17 forProperty:@"is_beta"];

      uint64_t v18 = +[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", sub_1002C8C74(v3));
      uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue(v18);
      [a1 setValue:v19 forProperty:@"is_clip"];

      uint64_t v20 = +[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", sub_1002C8CB4(v3));
      uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue(v20);
      [a1 setValue:v21 forProperty:@"is_system_app"];

      id v22 = sub_1002C8630(v3);
      uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue(v22);
      [a1 setValue:v23 forProperty:@"item_id"];

      id v24 = sub_1002C8BD0(v3);
      id v25 = (void *)objc_claimAutoreleasedReturnValue(v24);
      [a1 setValue:v25 forProperty:@"item_name"];

      id v26 = sub_1002C8CF4(v3);
      id v27 = (void *)objc_claimAutoreleasedReturnValue(v26);
      [a1 setValue:v27 forProperty:@"short_version"];

      id v28 = sub_1002C8D18(v3);
      id v29 = (void *)objc_claimAutoreleasedReturnValue(v28);
      [a1 setValue:v29 forProperty:@"storefront"];

      [a1 setValue:&off_10040C040 forProperty:@"count"];
    }
  }

  return a1;
}

id sub_1001AAF74(id a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    v49.receiver = a1;
    v49.super_class = (Class)&OBJC_CLASS___AppEvent;
    a1 = objc_msgSendSuper2(&v49, "init");
    if (a1)
    {
      id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 bundleID]);

      if (v4)
      {
        uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v3 bundleID]);
        [a1 setValue:v5 forProperty:@"bundle_id"];

        id v6 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInteger:]( NSNumber,  "numberWithInteger:",  [v3 count]));
        [a1 setValue:v6 forProperty:@"count"];

        switch((unint64_t)[v3 eventType])
        {
          case 1uLL:
            char v7 = &off_1003ED140;
            uint64_t v8 = 7LL;
            break;
          case 2uLL:
            char v7 = &off_1003ED140;
            uint64_t v8 = 8LL;
            break;
          case 3uLL:
            uint64_t v8 = 0LL;
            char v7 = &off_1003ED140;
            break;
          case 4uLL:
            uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedChar:](&OBJC_CLASS___NSNumber, "numberWithUnsignedChar:", 1LL));
            [a1 setValue:v13 forProperty:@"event_type"];

            unint64_t v14 = (unint64_t)[v3 eventSubtype];
            if (v14 >= 0xA)
            {
              char v7 = &off_1003ED148;
              goto LABEL_19;
            }

            uint64_t v8 = byte_10038A698[v14];
            char v7 = &off_1003ED148;
            break;
          case 5uLL:
            char v7 = &off_1003ED140;
            uint64_t v8 = 2LL;
            break;
          case 6uLL:
            char v7 = &off_1003ED140;
            uint64_t v8 = 3LL;
            break;
          case 7uLL:
            char v7 = &off_1003ED140;
            uint64_t v8 = 4LL;
            break;
          case 8uLL:
            char v7 = &off_1003ED140;
            uint64_t v8 = 5LL;
            break;
          default:
            char v7 = &off_1003ED140;
LABEL_19:
            uint64_t v8 = 6LL;
            break;
        }

        uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedChar:](&OBJC_CLASS___NSNumber, "numberWithUnsignedChar:", v8));
        [a1 setValue:v15 forProperty:*v7];

        uint64_t v16 = objc_alloc(&OBJC_CLASS___LSApplicationRecord);
        BOOL v17 = (void *)objc_claimAutoreleasedReturnValue([v3 bundleID]);
        id v12 = -[LSApplicationRecord initWithBundleIdentifier:allowPlaceholder:error:]( v16,  "initWithBundleIdentifier:allowPlaceholder:error:",  v17,  0LL,  0LL);

        if (v12)
        {
          uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(-[LSApplicationRecord exactBundleVersion](v12, "exactBundleVersion"));

          if (v18)
          {
            uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue(-[LSApplicationRecord exactBundleVersion](v12, "exactBundleVersion"));
            [a1 setValue:v19 forProperty:@"bundle_version"];
          }

          uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue(-[LSApplicationRecord iTunesMetadata](v12, "iTunesMetadata"));
          uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue([v20 storeCohort]);
          id v22 = [v21 length];

          if (v22)
          {
            uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue(-[LSApplicationRecord iTunesMetadata](v12, "iTunesMetadata"));
            id v24 = (void *)objc_claimAutoreleasedReturnValue([v23 storeCohort]);
            [a1 setValue:v24 forProperty:@"cohort"];
          }

          id v25 = (void *)objc_claimAutoreleasedReturnValue(-[LSApplicationRecord deviceIdentifierForVendor](v12, "deviceIdentifierForVendor"));

          if (v25)
          {
            id v26 = (void *)objc_claimAutoreleasedReturnValue(-[LSApplicationRecord deviceIdentifierForVendor](v12, "deviceIdentifierForVendor"));
            id v27 = (void *)objc_claimAutoreleasedReturnValue([v26 UUIDString]);

            if ([v27 length]) {
              [a1 setValue:v27 forProperty:@"device_vendor_id"];
            }
          }

          id v28 = (void *)objc_claimAutoreleasedReturnValue(-[LSApplicationRecord iTunesMetadata](v12, "iTunesMetadata"));
          id v29 = [v28 versionIdentifier];

          if (v29)
          {
            id v30 = (void *)objc_claimAutoreleasedReturnValue(-[LSApplicationRecord iTunesMetadata](v12, "iTunesMetadata"));
            objc_super v31 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedLongLong:]( NSNumber,  "numberWithUnsignedLongLong:",  [v30 versionIdentifier]));
            [a1 setValue:v31 forProperty:@"evid"];
          }

          id v32 = (void *)objc_claimAutoreleasedReturnValue(-[LSApplicationRecord iTunesMetadata](v12, "iTunesMetadata"));
          id v33 = [v32 storeItemIdentifier];

          if (v33)
          {
            id v34 = (void *)objc_claimAutoreleasedReturnValue(-[LSApplicationRecord iTunesMetadata](v12, "iTunesMetadata"));
            __int16 v35 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedLongLong:]( NSNumber,  "numberWithUnsignedLongLong:",  [v34 storeItemIdentifier]));
            [a1 setValue:v35 forProperty:@"item_id"];
          }

          int v36 = (void *)objc_claimAutoreleasedReturnValue(-[LSApplicationRecord iTunesMetadata](v12, "iTunesMetadata"));
          __int16 v37 = (void *)objc_claimAutoreleasedReturnValue([v36 itemName]);
          id v38 = [v37 length];

          if (v38)
          {
            __int128 v39 = (void *)objc_claimAutoreleasedReturnValue(-[LSApplicationRecord iTunesMetadata](v12, "iTunesMetadata"));
            __int128 v40 = (void *)objc_claimAutoreleasedReturnValue([v39 itemName]);
            [a1 setValue:v40 forProperty:@"item_name"];
          }

          __int128 v41 = (void *)objc_claimAutoreleasedReturnValue(-[LSApplicationRecord shortVersionString](v12, "shortVersionString"));

          if (v41)
          {
            uint64_t v42 = (void *)objc_claimAutoreleasedReturnValue(-[LSApplicationRecord shortVersionString](v12, "shortVersionString"));
            [a1 setValue:v42 forProperty:@"short_version"];
          }

          id v43 = (void *)objc_claimAutoreleasedReturnValue(-[LSApplicationRecord iTunesMetadata](v12, "iTunesMetadata"));
          id v44 = [v43 storeFront];

          if (!v44) {
            goto LABEL_44;
          }
          id v10 = (void *)objc_claimAutoreleasedReturnValue(-[LSApplicationRecord iTunesMetadata](v12, "iTunesMetadata"));
          id v45 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedLongLong:]( NSNumber,  "numberWithUnsignedLongLong:",  [v10 storeFront]));
          [a1 setValue:v45 forProperty:@"storefront"];
        }

        else
        {
          id v12 = (LSApplicationRecord *)objc_claimAutoreleasedReturnValue([v3 itemID]);

          if (!v12)
          {
LABEL_44:

            goto LABEL_45;
          }

          id v10 = (void *)objc_claimAutoreleasedReturnValue([v3 itemID]);
          [a1 setValue:v10 forProperty:@"item_id"];
          id v12 = 0LL;
        }
      }

      else
      {
        uint64_t v9 = ASDLogHandleForCategory(14LL);
        id v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
        if (os_log_type_enabled((os_log_t)v10, OS_LOG_TYPE_ERROR))
        {
          id v47 = (void *)objc_opt_class(a1, v11);
          *(_DWORD *)__int128 buf = 138543618;
          id v51 = v47;
          __int16 v52 = 2114;
          id v53 = v3;
          id v48 = v47;
          _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)v10,  OS_LOG_TYPE_ERROR,  "[%{public}@]: BundleID required for event: %{public}@",  buf,  0x16u);
        }

        id v12 = (LSApplicationRecord *)a1;
        a1 = 0LL;
      }

      goto LABEL_44;
    }
  }

CFStringRef sub_1001AB5CC(uint64_t a1, unsigned int a2)
{
  if (a2 > 8) {
    return @"Unknown";
  }
  else {
    return *(&off_1003EA9F8 + (char)a2);
  }
}

id sub_1001AB610(void *a1)
{
  if (a1)
  {
    id v1 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"account_id"]);
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([v1 stringValue]);
  }

  else
  {
    uint64_t v2 = 0LL;
  }

  return v2;
}

void sub_1001AB65C(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  id v12 = a5;
  if (!a1) {
    goto LABEL_15;
  }
  if (*(void *)(a1 + 32))
  {
    if (!v9) {
      goto LABEL_12;
    }
  }

  else
  {
    uint64_t v13 = objc_opt_new(&OBJC_CLASS___NSMutableArray);
    unint64_t v14 = *(void **)(a1 + 32);
    *(void *)(a1 + 32) = v13;

    if (!v9)
    {
LABEL_12:
      uint64_t v17 = ASDLogHandleForCategory(14LL);
      uint64_t v18 = (os_log_s *)objc_claimAutoreleasedReturnValue(v17);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
      {
        int v19 = 138543618;
        id v20 = v9;
        __int16 v21 = 2114;
        id v22 = v10;
        _os_log_error_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_ERROR,  "Skipping foreground event with timestamp: %{public}@ duration: %{public}@",  (uint8_t *)&v19,  0x16u);
      }

      goto LABEL_15;
    }
  }

  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](&OBJC_CLASS___NSMutableDictionary, "dictionary"));
  uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v9 stringValue]);
  [v15 setObject:v10 forKeyedSubscript:v16];

  if (v11) {
    [v15 setObject:v11 forKeyedSubscript:@"refType"];
  }
  if (v12) {
    [v15 setObject:v12 forKeyedSubscript:@"refSource"];
  }
  [*(id *)(a1 + 32) addObject:v15];

LABEL_15:
}

AppMetadata *sub_1001AB824(void *a1)
{
  if (a1)
  {
    uint64_t v2 = objc_opt_new(&OBJC_CLASS___AppMetadata);
    id v3 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"app_platform"]);
    uint64_t v5 = objc_opt_class(&OBJC_CLASS___NSNumber, v4);
    if ((objc_opt_isKindOfClass(v3, v5) & 1) != 0) {
      -[SQLiteMemoryEntity setValue:forProperty:](v2, "setValue:forProperty:", v3, @"app_platform");
    }
    id v6 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"bundle_id"]);

    uint64_t v8 = objc_opt_class(&OBJC_CLASS___NSString, v7);
    if ((objc_opt_isKindOfClass(v6, v8) & 1) != 0) {
      -[SQLiteMemoryEntity setValue:forProperty:](v2, "setValue:forProperty:", v6, @"bundle_id");
    }
    id v9 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"bundle_version"]);

    uint64_t v11 = objc_opt_class(&OBJC_CLASS___NSString, v10);
    if ((objc_opt_isKindOfClass(v9, v11) & 1) != 0) {
      -[SQLiteMemoryEntity setValue:forProperty:](v2, "setValue:forProperty:", v9, @"bundle_version");
    }
    id v12 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"cohort"]);

    uint64_t v14 = objc_opt_class(&OBJC_CLASS___NSString, v13);
    if ((objc_opt_isKindOfClass(v12, v14) & 1) != 0) {
      -[SQLiteMemoryEntity setValue:forProperty:](v2, "setValue:forProperty:", v12, @"cohort");
    }
    uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"device_vendor_id"]);

    uint64_t v17 = objc_opt_class(&OBJC_CLASS___NSString, v16);
    if ((objc_opt_isKindOfClass(v15, v17) & 1) != 0) {
      -[SQLiteMemoryEntity setValue:forProperty:](v2, "setValue:forProperty:", v15, @"device_vendor_id");
    }
    uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"evid"]);

    uint64_t v20 = objc_opt_class(&OBJC_CLASS___NSNumber, v19);
    if ((objc_opt_isKindOfClass(v18, v20) & 1) != 0) {
      -[SQLiteMemoryEntity setValue:forProperty:](v2, "setValue:forProperty:", v18, @"evid");
    }
    __int16 v21 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"is_beta"]);

    if ((objc_opt_respondsToSelector(v21, "BOOLValue") & 1) != 0) {
      -[SQLiteMemoryEntity setValue:forProperty:](v2, "setValue:forProperty:", v21, @"is_beta");
    }
    id v22 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"is_clip"]);

    if ((objc_opt_respondsToSelector(v22, "BOOLValue") & 1) != 0) {
      -[SQLiteMemoryEntity setValue:forProperty:](v2, "setValue:forProperty:", v22, @"is_clip");
    }
    uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"item_id"]);

    uint64_t v25 = objc_opt_class(&OBJC_CLASS___NSNumber, v24);
    if ((objc_opt_isKindOfClass(v23, v25) & 1) != 0) {
      -[SQLiteMemoryEntity setValue:forProperty:](v2, "setValue:forProperty:", v23, @"item_id");
    }
    id v26 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"item_name"]);

    uint64_t v28 = objc_opt_class(&OBJC_CLASS___NSString, v27);
    if ((objc_opt_isKindOfClass(v26, v28) & 1) != 0) {
      -[SQLiteMemoryEntity setValue:forProperty:](v2, "setValue:forProperty:", v26, @"item_name");
    }
    id v29 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"short_version"]);

    uint64_t v31 = objc_opt_class(&OBJC_CLASS___NSString, v30);
    if ((objc_opt_isKindOfClass(v29, v31) & 1) != 0) {
      -[SQLiteMemoryEntity setValue:forProperty:](v2, "setValue:forProperty:", v29, @"short_version");
    }
    id v32 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"storefront"]);

    uint64_t v34 = objc_opt_class(&OBJC_CLASS___NSNumber, v33);
    if ((objc_opt_isKindOfClass(v32, v34) & 1) != 0) {
      -[SQLiteMemoryEntity setValue:forProperty:](v2, "setValue:forProperty:", v32, @"storefront");
    }
    __int16 v35 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"timestamp"]);

    uint64_t v37 = objc_opt_class(&OBJC_CLASS___NSDate, v36);
    if ((objc_opt_isKindOfClass(v35, v37) & 1) != 0) {
      -[SQLiteMemoryEntity setValue:forProperty:](v2, "setValue:forProperty:", v35, @"timestamp");
    }
  }

  else
  {
    uint64_t v2 = 0LL;
  }

  return v2;
}

id sub_1001ABC24(void *a1)
{
  if (a1) {
    a1 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"bundle_id"]);
  }
  return a1;
}

id sub_1001ABC48(void *a1)
{
  if (a1) {
    a1 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"bundle_version"]);
  }
  return a1;
}

id sub_1001ABC6C(void *a1)
{
  if (a1) {
    a1 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"cohort"]);
  }
  return a1;
}

id sub_1001ABC90(void *a1)
{
  if (a1) {
    a1 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"device_vendor_id"]);
  }
  return a1;
}

id sub_1001ABCB4(void *a1)
{
  if (a1) {
    a1 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"evid"]);
  }
  return a1;
}

uint64_t sub_1001ABCD8(uint64_t a1, char a2)
{
  else {
    return qword_10038A6A8[(char)(a2 - 1)];
  }
}

uint64_t sub_1001ABD20(uint64_t a1, int a2)
{
  else {
    return qword_10038A6E8[(char)(a2 - 1)];
  }
}

id sub_1001ABD64(id a1)
{
  id v1 = a1;
  if (a1)
  {
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"bundle_id"]);
    id v3 = (void *)objc_claimAutoreleasedReturnValue([v1 valueForProperty:@"event_type"]);
    id v4 = [v3 integerValue];

    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v1 valueForProperty:@"event_subtype"]);
    id v6 = [v5 integerValue];

    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v1 valueForProperty:@"evid"]);
    id v8 = [v7 longLongValue];

    id v9 = (void *)objc_claimAutoreleasedReturnValue([v1 valueForProperty:@"device_vendor_id"]);
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v1 valueForProperty:@"cohort"]);
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v1 valueForProperty:@"bundle_version"]);
    id v1 = (id)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"%@:%ld:%ld:%lld:%@:%@:%@",  v2,  v4,  v6,  v8,  v9,  v10,  v11));
  }

  return v1;
}

id sub_1001ABEB0(id result)
{
  if (result)
  {
    id v1 = (void *)objc_claimAutoreleasedReturnValue([result valueForProperty:@"event_type"]);
    id v2 = [v1 unsignedCharValue];

    return v2;
  }

  return result;
}

id sub_1001ABEF0(id result)
{
  if (result)
  {
    id v1 = (void *)objc_claimAutoreleasedReturnValue([result valueForProperty:@"device_vendor_id_repaired"]);
    id v2 = [v1 BOOLValue];

    return v2;
  }

  return result;
}

id sub_1001ABF30(id result)
{
  if (result)
  {
    id v1 = (void *)objc_claimAutoreleasedReturnValue([result valueForProperty:@"is_beta"]);
    id v2 = [v1 BOOLValue];

    return v2;
  }

  return result;
}

id sub_1001ABF70(id result)
{
  if (result)
  {
    id v1 = (void *)objc_claimAutoreleasedReturnValue([result valueForProperty:@"is_clip"]);
    id v2 = [v1 BOOLValue];

    return v2;
  }

  return result;
}

id sub_1001ABFB0(id result)
{
  if (result)
  {
    id v1 = (void *)objc_claimAutoreleasedReturnValue([result valueForProperty:@"is_system_app"]);
    id v2 = [v1 BOOLValue];

    return v2;
  }

  return result;
}

id sub_1001ABFF0(void *a1)
{
  if (a1) {
    a1 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"item_id"]);
  }
  return a1;
}

id sub_1001AC014(void *a1)
{
  if (a1) {
    a1 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"item_name"]);
  }
  return a1;
}

id sub_1001AC038(void *a1)
{
  if (a1) {
    a1 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"short_version"]);
  }
  return a1;
}

id sub_1001AC05C(void *a1)
{
  if (a1) {
    a1 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"storefront"]);
  }
  return a1;
}

id sub_1001AC304(void *a1)
{
  if (a1)
  {
    id v1 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"primary_content_hash"]);
    id v2 = sub_1001E3A60((uint64_t)&OBJC_CLASS___ODRContentHash, v1);
    id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  }

  else
  {
    id v3 = 0LL;
  }

  return v3;
}

uint64_t sub_1001AC35C(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_self(a1);
  id v4 = objc_autoreleasePoolPush();
  if (v3)
  {
    id v5 = sub_1002FE4E0((uint64_t)&OBJC_CLASS___ODRServiceDelegate);
    uint64_t v6 = objc_claimAutoreleasedReturnValue(v5);
    uint64_t v7 = (void *)v6;
    if (v6) {
      id v8 = *(void **)(v6 + 32);
    }
    else {
      id v8 = 0LL;
    }
    id v9 = v8;

    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v3 path]);
    unsigned __int8 v11 = [v10 hasPrefix:v9];

    if ((v11 & 1) != 0)
    {
      id v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
      uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v3 path]);
      unsigned int v14 = [v12 fileExistsAtPath:v13];

      int v57 = v4;
      if (v14)
      {
        id v61 = 0LL;
        unsigned int v15 = [v12 removeItemAtURL:v3 error:&v61];
        id v16 = v61;
        uint64_t v17 = ASDLogHandleForCategory(19LL);
        uint64_t v18 = (os_log_s *)objc_claimAutoreleasedReturnValue(v17);
        uint64_t v19 = v18;
        if (v15)
        {
          if (os_log_type_enabled(v18, OS_LOG_TYPE_DEBUG))
          {
            *(_DWORD *)__int128 buf = 138543362;
            id v63 = v3;
            _os_log_debug_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEBUG, "Removed : %{public}@", buf, 0xCu);
          }
        }

        else if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)__int128 buf = 138543618;
          id v63 = v3;
          __int16 v64 = 2114;
          id v65 = v16;
          _os_log_error_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_ERROR,  "Error removing [%{public}@]: %{public}@",  buf,  0x16u);
        }
      }

      else
      {
        uint64_t v23 = ASDLogHandleForCategory(19LL);
        uint64_t v19 = (os_log_s *)objc_claimAutoreleasedReturnValue(v23);
        if (os_log_type_enabled(v19, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)__int128 buf = 0;
          _os_log_debug_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEBUG,  "Skipping deletion because the asset pack isn't on disk",  buf,  2u);
        }

        id v16 = 0LL;
      }

      uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue([v3 URLByDeletingPathExtension]);
      uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue([v24 URLByAppendingPathExtension:@"plist"]);

      id v26 = (void *)objc_claimAutoreleasedReturnValue([v25 path]);
      unsigned int v27 = [v12 fileExistsAtPath:v26];

      __int16 v56 = v25;
      if (v27)
      {
        id v60 = v16;
        unsigned int v28 = [v12 removeItemAtURL:v25 error:&v60];
        id v29 = v60;

        uint64_t v30 = ASDLogHandleForCategory(19LL);
        uint64_t v31 = (os_log_s *)objc_claimAutoreleasedReturnValue(v30);
        id v32 = v31;
        if (v28)
        {
          if (os_log_type_enabled(v31, OS_LOG_TYPE_DEBUG))
          {
            *(_DWORD *)__int128 buf = 138543362;
            id v63 = v3;
            _os_log_debug_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_DEBUG, "Removed : %{public}@", buf, 0xCu);
          }

          char v21 = 1;
        }

        else
        {
          if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)__int128 buf = 138543618;
            id v63 = v3;
            __int16 v64 = 2114;
            id v65 = v29;
            _os_log_error_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_ERROR,  "Error removing [%{public}@]: %{public}@",  buf,  0x16u);
          }

          char v21 = 0;
        }
      }

      else
      {
        uint64_t v33 = ASDLogHandleForCategory(19LL);
        id v32 = (os_log_s *)objc_claimAutoreleasedReturnValue(v33);
        if (os_log_type_enabled(v32, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)__int128 buf = 0;
          _os_log_debug_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_DEBUG,  "Skipping deletion because the manifest isn't on disk",  buf,  2u);
        }

        char v21 = 1;
        id v29 = v16;
      }

      uint64_t v34 = (void *)objc_claimAutoreleasedReturnValue([v3 URLByDeletingLastPathComponent]);
      __int16 v35 = (void *)objc_claimAutoreleasedReturnValue([v34 path]);
      unsigned __int8 v36 = [v9 isEqualToString:v35];

      if ((v36 & 1) != 0)
      {
        id v38 = v34;
      }

      else
      {
        *(void *)&__int128 v37 = 138543618LL;
        __int128 v55 = v37;
        do
        {
          uint64_t v40 = ASDLogHandleForCategory(19LL);
          __int128 v41 = (os_log_s *)objc_claimAutoreleasedReturnValue(v40);
          if (os_log_type_enabled(v41, OS_LOG_TYPE_DEBUG))
          {
            *(_DWORD *)__int128 buf = 138543362;
            id v63 = v34;
            _os_log_debug_impl( (void *)&_mh_execute_header,  v41,  OS_LOG_TYPE_DEBUG,  "Going to attempt to remove asset packs parent directory [%{public}@]",  buf,  0xCu);
          }

          if (v34)
          {
            uint64_t v42 = (void *)objc_claimAutoreleasedReturnValue([v34 path]);
            unsigned int v43 = [v12 fileExistsAtPath:v42];

            if (v43)
            {
              id v59 = v29;
              id v44 = (void *)objc_claimAutoreleasedReturnValue( [v12 contentsOfDirectoryAtURL:v34 includingPropertiesForKeys:&__NSArray0__struct options:0 error:&v59]);
              id v45 = v59;

              if (v44)
              {
                if ([v44 count])
                {
                  uint64_t v46 = ASDLogHandleForCategory(19LL);
                  id v47 = (os_log_s *)objc_claimAutoreleasedReturnValue(v46);
                  if (os_log_type_enabled(v47, OS_LOG_TYPE_DEBUG))
                  {
                    *(_DWORD *)__int128 buf = 138543362;
                    id v63 = v34;
                    _os_log_debug_impl( (void *)&_mh_execute_header,  v47,  OS_LOG_TYPE_DEBUG,  "Path has children, >>NOT<< removing: %{public}@",  buf,  0xCu);
                  }
                }

                else
                {
                  id v58 = v45;
                  unsigned int v49 = [v12 removeItemAtURL:v34 error:&v58];
                  id v50 = v58;

                  uint64_t v51 = ASDLogHandleForCategory(19LL);
                  __int16 v52 = (os_log_s *)objc_claimAutoreleasedReturnValue(v51);
                  id v47 = v52;
                  if (v49)
                  {
                    if (os_log_type_enabled(v52, OS_LOG_TYPE_DEBUG))
                    {
                      *(_DWORD *)__int128 buf = 138543362;
                      id v63 = v34;
                      _os_log_debug_impl( (void *)&_mh_execute_header,  v47,  OS_LOG_TYPE_DEBUG,  "Removed: %{public}@",  buf,  0xCu);
                    }

                    char v21 = 1;
                  }

                  else
                  {
                    if (os_log_type_enabled(v52, OS_LOG_TYPE_ERROR))
                    {
                      *(_DWORD *)__int128 buf = v55;
                      id v63 = v34;
                      __int16 v64 = 2114;
                      id v65 = v50;
                      _os_log_error_impl( (void *)&_mh_execute_header,  v47,  OS_LOG_TYPE_ERROR,  "AssetPack's parent directory could not be removed. [%{public}@].  Error: %{public}@",  buf,  0x16u);
                    }

                    char v21 = 0;
                  }

                  id v45 = v50;
                }
              }

              else
              {
                uint64_t v48 = ASDLogHandleForCategory(19LL);
                id v47 = (os_log_s *)objc_claimAutoreleasedReturnValue(v48);
                if (os_log_type_enabled(v47, OS_LOG_TYPE_ERROR))
                {
                  *(_DWORD *)__int128 buf = v55;
                  id v63 = v34;
                  __int16 v64 = 2114;
                  id v65 = v45;
                  _os_log_error_impl( (void *)&_mh_execute_header,  v47,  OS_LOG_TYPE_ERROR,  "Error removing [%{public}@].  Error: %{public}@",  buf,  0x16u);
                }

                char v21 = 0;
              }

              id v29 = v45;
            }
          }

          id v38 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v34, "URLByDeletingLastPathComponent", v55));

          id v53 = (void *)objc_claimAutoreleasedReturnValue([v38 path]);
          unsigned int v54 = [v9 isEqualToString:v53];

          uint64_t v34 = v38;
        }

        while (!v54);
      }

      id v4 = v57;
    }

    else
    {
      uint64_t v22 = ASDLogHandleForCategory(19LL);
      id v12 = (void *)objc_claimAutoreleasedReturnValue(v22);
      if (os_log_type_enabled((os_log_t)v12, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)__int128 buf = 138543618;
        id v63 = v3;
        __int16 v64 = 2114;
        id v65 = v9;
        _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)v12,  OS_LOG_TYPE_ERROR,  "The URL we are trying to delete is not in the usual asset pack storage location. [URL: %{public}@ AssetPacksPath: %{public}@]",  buf,  0x16u);
      }

      char v21 = 0;
    }
  }

  else
  {
    uint64_t v20 = ASDLogHandleForCategory(19LL);
    id v9 = (id)objc_claimAutoreleasedReturnValue(v20);
    if (os_log_type_enabled((os_log_t)v9, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)v9,  OS_LOG_TYPE_ERROR,  "No local URL provided.  Nothing will be removed.",  buf,  2u);
    }

    char v21 = 1;
  }

  objc_autoreleasePoolPop(v4);
  return v21 & 1;
}

uint64_t sub_1001ACAFC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = objc_opt_self(a1);
  if ([v5 isFileURL]
    && (id v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager")),
        id v9 = (void *)objc_claimAutoreleasedReturnValue([v5 path]),
        unsigned int v10 = [v8 fileExistsAtPath:v9],
        v9,
        v8,
        v10))
  {
    id v11 = sub_1001ACCCC(v7, v5);
    id v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
    uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
    id v21 = 0LL;
    unsigned int v14 = (void *)objc_claimAutoreleasedReturnValue( [v13 contentsOfDirectoryAtURL:v5 includingPropertiesForKeys:&__NSArray0__struct options:0 error:&v21]);
    id v15 = v21;

    if ([v14 count])
    {
      id v16 = v12;
      objc_opt_self(v7);
      uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSData dataWithContentsOfURL:](&OBJC_CLASS___NSData, "dataWithContentsOfURL:", v16));

      if (v17) {
        uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue( +[NSPropertyListSerialization propertyListWithData:options:format:error:]( &OBJC_CLASS___NSPropertyListSerialization,  "propertyListWithData:options:format:error:",  v17,  0LL,  0LL,  0LL));
      }
      else {
        uint64_t v18 = 0LL;
      }

      uint64_t v19 = 1LL;
      if (v6 && v18 && ([v18 isEqualToDictionary:v6] & 1) == 0)
      {
        sub_1001AC35C(v7, v5);
        uint64_t v19 = 0LL;
      }
    }

    else
    {
      sub_1001AC35C(v7, v5);
      uint64_t v19 = 0LL;
    }
  }

  else
  {
    uint64_t v19 = 0LL;
  }

  return v19;
}

id sub_1001ACCCC(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_self(a1);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 URLByDeletingPathExtension]);

  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 URLByAppendingPathExtension:@"plist"]);
  return v5;
}

id sub_1001ACD2C(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_self(a1);
  id v4 = sub_1002FE4E0((uint64_t)&OBJC_CLASS___ODRServiceDelegate);
  uint64_t v5 = objc_claimAutoreleasedReturnValue(v4);
  id v6 = (void *)v5;
  if (v5) {
    uint64_t v7 = *(void **)(v5 + 32);
  }
  else {
    uint64_t v7 = 0LL;
  }
  id v8 = v7;
  id v9 = sub_1002D9D08((uint64_t)v3);
  unsigned int v10 = (void *)objc_claimAutoreleasedReturnValue(v9);

  id v11 = (void *)objc_claimAutoreleasedReturnValue([v8 stringByAppendingPathComponent:v10]);
  id v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL fileURLWithPath:](&OBJC_CLASS___NSURL, "fileURLWithPath:", v11));
  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v12 absoluteString]);

  return v13;
}

uint64_t sub_1001ACDF0(void *a1, uint64_t a2)
{
  if (!a1) {
    return 0LL;
  }
  id v4 = sub_1001F7B20(a1);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  if (v5 && !sub_1001AC35C((uint64_t)&OBJC_CLASS___ODRAssetPack, v5))
  {
    uint64_t v11 = ASDLogHandleForCategory(19LL);
    id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"bundle_key"]);
      int v14 = 138543618;
      id v15 = v13;
      __int16 v16 = 2048;
      uint64_t v17 = a2;
      _os_log_error_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_ERROR,  "Failed to purge %{public}@ for reason %ld",  (uint8_t *)&v14,  0x16u);
    }

    uint64_t v10 = 0LL;
  }

  else
  {
    sub_1001F7DBC(a1, 0LL);
    sub_1001F7E10(a1, 0LL);
    id v6 = [&off_10040C058 copy];
    [a1 setValue:v6 forProperty:@"download_identifier"];

    sub_1001F8070(a1, a2);
    uint64_t v7 = ASDLogHandleForCategory(19LL);
    id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      id v9 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"bundle_key"]);
      int v14 = 138543618;
      id v15 = v9;
      __int16 v16 = 2048;
      uint64_t v17 = a2;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "Succesfully purged %{public}@ for reason %ld",  (uint8_t *)&v14,  0x16u);
    }

    uint64_t v10 = 1LL;
  }

  return v10;
}

id sub_1001ACFD4(void *a1, void *a2)
{
  if (!a1) {
    return 0LL;
  }
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"bundle_key"]);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"bundle_id"]);
  id v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", @"%@-%@", v5, v4));
  id v7 = [v6 hash];

  id v8 = sub_1002FE4E0((uint64_t)&OBJC_CLASS___ODRServiceDelegate);
  uint64_t v9 = objc_claimAutoreleasedReturnValue(v8);
  uint64_t v10 = (void *)v9;
  if (v9) {
    uint64_t v11 = *(void **)(v9 + 32);
  }
  else {
    uint64_t v11 = 0LL;
  }
  id v12 = v11;

  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v12 stringByAppendingPathComponent:v3]);
  int v14 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"bundle_key"]);
  id v15 = (void *)objc_claimAutoreleasedReturnValue([v14 stringByAppendingPathExtension:@"assetpack"]);

  __int16 v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInteger:", v7));
  uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([v16 stringValue]);

  uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue([v13 stringByAppendingPathComponent:v17]);
  v36[0] = NSFileOwnerAccountName;
  v36[1] = NSFileGroupOwnerAccountName;
  v37[0] = @"mobile";
  v37[1] = @"mobile";
  uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v37,  v36,  2LL));
  uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
  id v31 = 0LL;
  unsigned __int8 v21 = [v20 createDirectoryAtPath:v18 withIntermediateDirectories:1 attributes:v19 error:&v31];
  id v22 = v31;

  if ((v21 & 1) == 0)
  {
    uint64_t v24 = ASDLogHandleForCategory(19LL);
    uint64_t v25 = (os_log_s *)objc_claimAutoreleasedReturnValue(v24);
    BOOL v26 = os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT);
    if (v22)
    {
      if (v26)
      {
        *(_DWORD *)__int128 buf = 138543618;
        uint64_t v33 = v18;
        __int16 v34 = 2114;
        id v35 = v22;
        unsigned int v27 = "Failed to create destination path at %{public}@: %{public}@";
        unsigned int v28 = v25;
        uint32_t v29 = 22;
LABEL_11:
        _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEFAULT, v27, buf, v29);
      }
    }

    else if (v26)
    {
      *(_DWORD *)__int128 buf = 138543362;
      uint64_t v33 = v18;
      unsigned int v27 = "Failed to create destination path at %{public}@";
      unsigned int v28 = v25;
      uint32_t v29 = 12;
      goto LABEL_11;
    }

    uint64_t v23 = 0LL;
    goto LABEL_13;
  }

  uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue([v18 stringByAppendingPathComponent:v15]);
LABEL_13:

  return v23;
}

id sub_1001AD2D8(void *a1)
{
  if (!a1) {
    return 0LL;
  }
  id v2 = sub_1001F7B20(a1);
  id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  if (v3)
  {
    id v4 = sub_1001AC304(a1);
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
    id v6 = sub_1001E3B50(v5);
    id v7 = (id)objc_claimAutoreleasedReturnValue(v6);
    id v8 = v3;
    objc_opt_self(&OBJC_CLASS___ODRAssetPack);
    id v9 = sub_1001ACCCC((uint64_t)&OBJC_CLASS___ODRAssetPack, v8);
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(v9);

    if (v7
      && (uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue( +[NSPropertyListSerialization dataWithPropertyList:format:options:error:]( &OBJC_CLASS___NSPropertyListSerialization,  "dataWithPropertyList:format:options:error:",  v7,  200LL,  0LL,  0LL))) != 0LL)
    {
      id v12 = v11;
      id v13 = [v11 writeToURL:v10 atomically:1];
    }

    else
    {
      id v13 = 0LL;
    }
  }

  else
  {
    id v13 = 0LL;
  }

  return v13;
}

void *sub_1001AD3E0(void *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    v20.receiver = a1;
    v20.super_class = (Class)&OBJC_CLASS___MediaAppPlatformAttributes;
    a1 = objc_msgSendSuper2(&v20, "init");
    if (a1)
    {
      id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 objectForKeyedSubscript:@"externalVersionId"]);
      if ((objc_opt_respondsToSelector(v4, "longLongValue") & 1) != 0
        && (a1[3] = [v4 longLongValue],
            uint64_t v5 = objc_claimAutoreleasedReturnValue([v3 objectForKeyedSubscript:@"bundleId"]),
            id v6 = (void *)a1[4],
            a1[4] = v5,
            v6,
            uint64_t v7 = a1[4],
            uint64_t v9 = objc_opt_class(&OBJC_CLASS___NSString, v8),
            (objc_opt_isKindOfClass(v7, v9) & 1) != 0))
      {
        uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v3 objectForKeyedSubscript:@"artwork"]);
        uint64_t v12 = objc_opt_class(&OBJC_CLASS___NSDictionary, v11);
        id v13 = v10;
        if ((objc_opt_isKindOfClass(v13, v12) & 1) != 0) {
          id v14 = v13;
        }
        else {
          id v14 = 0LL;
        }

        if (v14)
        {
          id v15 = [v13 copy];
          __int16 v16 = (void *)a1[6];
          a1[6] = v15;
        }

        id v17 = [v3 copy];
        uint64_t v18 = (void *)a1[1];
        a1[1] = v17;
      }

      else
      {
        id v13 = v4;
        id v4 = a1;
        a1 = 0LL;
      }
    }
  }

  return a1;
}

id sub_1001AD558(uint64_t a1)
{
  if (!a1) {
    return 0LL;
  }
  uint64_t v1 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 8) objectForKeyedSubscript:@"is32bitOnly"]);
  id v2 = (void *)v1;
  if (!v1)
  {
    uint64_t v4 = ASDLogHandleForCategory(14LL);
    uint64_t v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      int v10 = 138543362;
      uint64_t v11 = @"is32bitOnly";
      _os_log_error_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_ERROR,  "Missing expected value: %{public}@",  (uint8_t *)&v10,  0xCu);
    }

    goto LABEL_9;
  }

  if ((objc_opt_respondsToSelector(v1, "BOOLValue") & 1) == 0)
  {
    uint64_t v6 = ASDLogHandleForCategory(14LL);
    uint64_t v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      int v10 = 138543618;
      uint64_t v11 = (__CFString *)objc_opt_class(v2, v7);
      __int16 v12 = 2114;
      id v13 = @"is32BitOnly";
      uint64_t v9 = v11;
      _os_log_error_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_ERROR,  "Unexpected type %{public}@ for %{public}@",  (uint8_t *)&v10,  0x16u);
    }

id sub_1001AD6DC(uint64_t a1)
{
  if (a1)
  {
    uint64_t v1 = a1;
    id v2 = *(void **)(a1 + 16);
    if (v2) {
      return v2;
    }
    id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 8) objectForKeyedSubscript:@"offers"]);
    uint64_t v5 = objc_opt_class(&OBJC_CLASS___NSArray, v4);
    if ((objc_opt_isKindOfClass(v3, v5) & 1) != 0)
    {
      uint64_t v6 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "ams_mapWithTransformIgnoresNil:", &stru_1003EAA40));
      uint64_t v7 = *(void **)(v1 + 16);
      *(void *)(v1 + 16) = v6;

      id v2 = *(void **)(v1 + 16);
      return v2;
    }

    a1 = 0LL;
  }

  return (id)a1;
}

id sub_1001AD770(id a1, NSDictionary *a2)
{
  id v2 = a2;
  id v3 = sub_1001AEB44(objc_alloc(&OBJC_CLASS___MediaAppOffer), v2);

  return v3;
}

id sub_1001AD7B4(uint64_t a1)
{
  if (a1)
  {
    id v1 = sub_1001AD6DC(a1);
    id v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
    id v3 = sub_1002B84E4(v2, &stru_1003EAA80);
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  }

  else
  {
    uint64_t v4 = 0LL;
  }

  return v4;
}

BOOL sub_1001AD800(id a1, MediaAppOffer *a2)
{
  return !a2 || a2->_price == 0.0;
}

uint64_t sub_1001AD81C(uint64_t result)
{
  if (result) {
    return *(void *)(result + 32);
  }
  return result;
}

uint64_t sub_1001AD828(uint64_t result)
{
  if (result) {
    return *(void *)(result + 48);
  }
  return result;
}

void sub_1001AD9CC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_1001AD9E4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1001AD9F4(uint64_t a1)
{
}

void sub_1001AD9FC(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 connection]);
  id v5 = sub_1002FD530((uint64_t)&OBJC_CLASS___AppInstallPredicates);
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  id v7 = sub_10024C1D0((uint64_t)&OBJC_CLASS___AppInstallEntity, v4, v6);
  id v10 = (id)objc_claimAutoreleasedReturnValue(v7);

  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472LL;
  void v11[2] = sub_1001ADAD8;
  v11[3] = &unk_1003EAAA8;
  uint64_t v8 = *(void *)(a1 + 32);
  id v12 = v3;
  uint64_t v13 = v8;
  id v9 = v3;
  [v10 enumeratePersistentIDsUsingBlock:v11];
}

void sub_1001ADAD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = objc_alloc(&OBJC_CLASS___AppInstallEntity);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) connection]);
  uint64_t v6 = -[SQLiteEntity initWithPersistentID:onConnection:](v4, "initWithPersistentID:onConnection:", a2, v5);

  if ((uint64_t)sub_10021B73C(v6) < -10)
  {
    uint64_t v17 = ASDLogHandleForCategory(41LL);
    uint64_t v18 = (os_log_s *)objc_claimAutoreleasedReturnValue(v17);
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
    {
      id v19 = sub_10021B73C(v6);
      objc_super v20 = sub_10021B614(v6);
      unsigned __int8 v21 = (void *)objc_claimAutoreleasedReturnValue(v20);
      int v22 = 134218242;
      id v23 = v19;
      __int16 v24 = 2114;
      uint64_t v25 = v21;
      _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEFAULT,  "Ignoring install of phase %ld in MDM status: %{public}@",  (uint8_t *)&v22,  0x16u);
    }
  }

  else
  {
    id v7 = objc_alloc_init(&OBJC_CLASS___ASDManagedRequestStatus);
    id v8 = sub_1001E2734(v6, (uint64_t)@"external_id");
    id v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
    [v7 setRequestIdentifier:v9];

    id v10 = sub_1001E26D0(v6, (uint64_t)@"bundle_id");
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
    [v7 setBundleIdentifier:v11];

    id v12 = sub_1001E26D0(v6, (uint64_t)@"bundle_version");
    uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
    [v7 setBundleVersion:v13];

    id v14 = sub_1001E26D0(v6, (uint64_t)@"bundle_name");
    id v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
    [v7 setTitle:v15];

    if (sub_10021B73C(v6) == (id)-10LL) {
      uint64_t v16 = 2LL;
    }
    else {
      uint64_t v16 = sub_10021B73C(v6) != (id)10;
    }
    [v7 setState:v16];
    [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) addObject:v7];
  }
}

void sub_1001ADD3C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    uint64_t v4 = *(void **)(a1 + 16);
    id v7 = v3;
    if (!v4)
    {
      id v5 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
      uint64_t v6 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v5;

      uint64_t v4 = *(void **)(a1 + 16);
    }

    [v4 addObject:v7];
    id v3 = v7;
  }
}

void sub_1001AE4DC(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1001AE54C;
  block[3] = &unk_1003E9EA8;
  void block[4] = objc_opt_self(a1);
  if (qword_100462190 != -1) {
    dispatch_once(&qword_100462190, block);
  }
}

void sub_1001AE54C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = ASDLogHandleForCategory(14LL, a2);
  uint64_t v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Registering event handlers", v13, 2u);
  }

  objc_opt_self(*(void *)(a1 + 32));
  dispatch_queue_global_t global_queue = dispatch_get_global_queue(21LL, 0LL);
  uint64_t v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
  xpc_set_event_stream_handler("com.apple.distnoted.matching", v6, &stru_1003EAB10);

  uint64_t v8 = ASDLogHandleForCategory(14LL, v7);
  id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)__int128 buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "Registered handler for distributed events",  buf,  2u);
  }

  objc_opt_self(*(void *)(a1 + 32));
  xpc_set_event_stream_handler("com.apple.notifyd.matching", v6, &stru_1003EAB30);

  uint64_t v11 = ASDLogHandleForCategory(14LL, v10);
  id v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
  if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v15 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "Registered handler for notification events",  v15,  2u);
  }
}

void sub_1001AE6AC(id a1, OS_xpc_object *a2)
{
  id v2 = a2;
  uint64_t v3 = v2;
  if (!v2 || xpc_get_type(v2) != (xpc_type_t)&_xpc_type_dictionary)
  {
    uint64_t v4 = ASDLogHandleForCategory(14LL);
    id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
    if (!os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      goto LABEL_4;
    }
    LOWORD(v21) = 0;
    uint64_t v16 = "Received distributed event with invalid type";
LABEL_14:
    _os_log_error_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, v16, (uint8_t *)&v21, 2u);
    goto LABEL_4;
  }

  string = xpc_dictionary_get_string(v3, _xpc_event_key_name);
  if (!string)
  {
    uint64_t v15 = ASDLogHandleForCategory(14LL);
    id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v15);
    if (!os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      goto LABEL_4;
    }
    LOWORD(v21) = 0;
    uint64_t v16 = "Received distributed event with invalid name";
    goto LABEL_14;
  }

  uint64_t v7 = string;
  xpc_object_t dictionary = xpc_dictionary_get_dictionary(v3, "UserInfo");
  id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(dictionary);
  id v5 = v9;
  if (v9 && xpc_get_type(v9) == (xpc_type_t)&_xpc_type_dictionary)
  {
    uint64_t v13 = (void *)_CFXPCCreateCFObjectFromXPCObject(v5);
    uint64_t v17 = ASDLogHandleForCategory(14LL);
    uint64_t v18 = (os_log_s *)objc_claimAutoreleasedReturnValue(v17);
    if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
    {
      id v19 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v7));
      int v21 = 138412546;
      int v22 = v19;
      __int16 v23 = 2112;
      __int16 v24 = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_INFO,  "Posting notification: %@ userInfo: %@",  (uint8_t *)&v21,  0x16u);
    }

    id v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter"));
    objc_super v20 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v7));
    [v14 postNotificationName:v20 object:0 userInfo:v13];
  }

  else
  {
    uint64_t v10 = ASDLogHandleForCategory(14LL);
    uint64_t v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      id v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v7));
      int v21 = 138412290;
      int v22 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_INFO,  "Posting notification: %@",  (uint8_t *)&v21,  0xCu);
    }

    uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter"));
    id v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v7));
    [v13 postNotificationName:v14 object:0];
  }

LABEL_4:
}

void sub_1001AE984(id a1, OS_xpc_object *a2)
{
  id v2 = a2;
  uint64_t v3 = v2;
  if (!v2 || xpc_get_type(v2) != (xpc_type_t)&_xpc_type_dictionary)
  {
    uint64_t v4 = ASDLogHandleForCategory(14LL);
    id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
    if (!os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      goto LABEL_4;
    }
    LOWORD(v12) = 0;
    uint64_t v11 = "Received notification event with invalid type";
LABEL_12:
    _os_log_error_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, v11, (uint8_t *)&v12, 2u);
    goto LABEL_4;
  }

  string = xpc_dictionary_get_string(v3, _xpc_event_key_name);
  uint64_t v7 = ASDLogHandleForCategory(14LL);
  uint64_t v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
  id v5 = v8;
  if (!string)
  {
    if (!os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      goto LABEL_4;
    }
    LOWORD(v12) = 0;
    uint64_t v11 = "Received notification event with invalid name";
    goto LABEL_12;
  }

  if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
  {
    id v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", string));
    int v12 = 138412290;
    uint64_t v13 = v9;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "Posting notification: %@", (uint8_t *)&v12, 0xCu);
  }

  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter"));
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", string));
  -[os_log_s postNotificationName:object:](v5, "postNotificationName:object:", v10, 0LL);

LABEL_4:
}

void *sub_1001AEB44(void *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    v22.receiver = a1;
    v22.super_class = (Class)&OBJC_CLASS___MediaAppOffer;
    a1 = objc_msgSendSuper2(&v22, "init");
    if (!a1)
    {
LABEL_16:
      a1 = a1;
      objc_super v20 = a1;
      goto LABEL_17;
    }

    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 objectForKeyedSubscript:@"buyParams"]);
    id v5 = [v4 copy];
    uint64_t v6 = (void *)a1[1];
    a1[1] = v5;

    uint64_t v7 = a1[1];
    uint64_t v9 = objc_opt_class(&OBJC_CLASS___NSString, v8);
    if ((objc_opt_isKindOfClass(v7, v9) & 1) != 0)
    {
      uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v3 objectForKeyedSubscript:@"price"]);
      if ((objc_opt_respondsToSelector(v10, "doubleValue") & 1) != 0)
      {
        [v10 doubleValue];
        a1[2] = v11;
        int v12 = (void *)objc_claimAutoreleasedReturnValue([v3 objectForKeyedSubscript:@"assets"]);
        uint64_t v14 = objc_opt_class(&OBJC_CLASS___NSArray, v13);
        if ((objc_opt_isKindOfClass(v12, v14) & 1) != 0)
        {
          uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v12 firstObject]);
          uint64_t v17 = objc_opt_class(&OBJC_CLASS___NSDictionary, v16);
          if ((objc_opt_isKindOfClass(v15, v17) & 1) != 0)
          {
            uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue([v15 objectForKeyedSubscript:@"size"]);
            if ((objc_opt_respondsToSelector(v18, "longLongValue") & 1) != 0)
            {
              int v19 = 0;
              a1[3] = [v18 longLongValue];
            }

            else
            {
              int v19 = 1;
            }
          }

          else
          {
            int v19 = 1;
          }

          if (!v19) {
            goto LABEL_16;
          }
          goto LABEL_11;
        }
      }
    }
  }

id sub_1001AED20(uint64_t a1)
{
  uint64_t v2 = objc_opt_class(&OBJC_CLASS___DiagnosticPublisher, v1);
  id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  objc_sync_enter(v3);
  id v4 = (id)qword_100462198;
  objc_sync_exit(v3);

  return v4;
}

void sub_1001AED74(uint64_t a1, void *a2)
{
  id v9 = a2;
  objc_opt_self(a1);
  uint64_t v4 = objc_opt_class(&OBJC_CLASS___DiagnosticPublisher, v3);
  id v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  objc_sync_enter(v5);
  id v6 = sub_1001AEE04((uint64_t)&OBJC_CLASS___DiagnosticPublisher, v9);
  uint64_t v7 = objc_claimAutoreleasedReturnValue(v6);
  uint64_t v8 = (void *)qword_100462198;
  qword_100462198 = v7;

  objc_sync_exit(v5);
}

void sub_1001AEDF0(_Unwind_Exception *a1)
{
}

id sub_1001AEE04(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  uint64_t v4 = (objc_class *)objc_opt_self(a1);
  else {
    id v5 = 0LL;
  }

  return v5;
}

id sub_1001AEE6C(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v5 = objc_opt_self(a1);
  if (v3) {
    id Property = objc_getProperty(v3, v4, 40LL, 1);
  }
  else {
    id Property = 0LL;
  }
  id v7 = Property;

  id v8 = sub_1001AEE04(v5, v7);
  id v9 = (void *)objc_claimAutoreleasedReturnValue(v8);

  return v9;
}

void sub_1001AEEE8(uint64_t a1, uint64_t a2, void *a3)
{
  if (a1)
  {
    uint64_t v4 = a3;
    id v7 = sub_100286794(objc_alloc(&OBJC_CLASS___DiagnosticMessage), a2);
    v4[2](v4, v7);

    id v5 = sub_100273D34((uint64_t)&OBJC_CLASS___DiagnosticService);
    id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
    sub_100273E18((uint64_t)v6, v7);
  }

id sub_1001AF0A0(void *a1, void *a2)
{
  if (!a1) {
    return 0LL;
  }
  id v3 = a2;
  uint64_t v4 = sub_1001D6258(objc_alloc(&OBJC_CLASS___SQLiteConnection), v3);

  id v5 = v4;
  v16.receiver = a1;
  v16.super_class = (Class)&OBJC_CLASS___SQLiteDatabase;
  id v6 = objc_msgSendSuper2(&v16, "init");
  if (v6)
  {
    dispatch_queue_attr_t v7 = dispatch_queue_attr_make_with_autorelease_frequency(0LL, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
    id v8 = (dispatch_queue_attr_s *)objc_claimAutoreleasedReturnValue(v7);
    dispatch_queue_t v9 = dispatch_queue_create("com.apple.appstored.SQLiteDatabase", v8);
    uint64_t v10 = (void *)*((void *)v6 + 2);
    *((void *)v6 + 2) = v9;

    dispatch_queue_set_specific(*((dispatch_queue_t *)v6 + 2), "_SQLiteDispatchQueueTag", v6, 0LL);
    uint64_t v11 = objc_claimAutoreleasedReturnValue(+[NSHashTable hashTableWithOptions:](&OBJC_CLASS___NSHashTable, "hashTableWithOptions:", 258LL));
    int v12 = (void *)*((void *)v6 + 3);
    *((void *)v6 + 3) = v11;

    objc_storeStrong((id *)v6 + 1, v4);
    uint64_t v13 = *((void *)v6 + 1);
    if (v13) {
      objc_storeWeak((id *)(v13 + 24), v6);
    }
  }

  id v14 = v6;
  return v14;
}

void sub_1001AF1D0(dispatch_queue_t *a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if (a1)
  {
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472LL;
    void v7[2] = sub_1001AF274;
    v7[3] = &unk_1003EA390;
    void v7[4] = a1;
    id v8 = v6;
    id v9 = v5;
    sub_1001AF394(a1, v7);
  }
}

void sub_1001AF274(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    sub_1001AFDD4(v3, *(void **)(a1 + 40), 0);
  }
  id v4 = objc_msgSend((id)objc_opt_class(*(void *)(a1 + 40), a2), "storeDescriptor");
  isa = (objc_class *)objc_claimAutoreleasedReturnValue(v4);
  id v6 = isa;
  if (isa) {
    isa = isa[4].isa;
  }
  sub_1001AF2DC(*(void *)(a1 + 32), isa, *(void **)(a1 + 48));
}

void sub_1001AF2DC(uint64_t a1, objc_class *a2, void *a3)
{
  id v8 = a3;
  if (a1)
  {
    dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 16));
    id v5 = [[a2 alloc] initWithConnection:*(void *)(a1 + 8)];
    uint64_t v6 = *(void *)(a1 + 8);
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472LL;
    v9[2] = sub_1001AFDC4;
    v9[3] = &unk_1003EABD0;
    id v10 = v5;
    id v11 = v8;
    id v7 = v5;
    sub_1001D6D30(v6, v9);
  }
}

void sub_1001AF394(dispatch_queue_t *a1, void *a2)
{
  block = a2;
  if (a1)
  {
    if (dispatch_get_specific("_SQLiteDispatchQueueTag") == a1) {
      block[2]();
    }
    else {
      dispatch_sync(a1[2], block);
    }
  }
}

void sub_1001AF3F8(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  if (a1)
  {
    id v10 = *(dispatch_queue_s **)(a1 + 16);
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472LL;
    void v11[2] = sub_1001AF4CC;
    v11[3] = &unk_1003EAB58;
    void v11[4] = a1;
    id v12 = v7;
    id v13 = v8;
    id v14 = v9;
    dispatch_async(v10, v11);
  }
}

void sub_1001AF4CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    sub_1001AFDD4(v3, *(void **)(a1 + 40), 0);
  }
  id v4 = objc_msgSend((id)objc_opt_class(*(void *)(a1 + 40), a2), "storeDescriptor");
  isa = (objc_class *)objc_claimAutoreleasedReturnValue(v4);
  id v8 = isa;
  if (isa) {
    isa = isa[4].isa;
  }
  sub_1001AF2DC(*(void *)(a1 + 32), isa, *(void **)(a1 + 48));
  dispatch_queue_global_t global_queue = dispatch_get_global_queue(21LL, 0LL);
  id v7 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
  dispatch_async(v7, *(dispatch_block_t *)(a1 + 56));
}

void sub_1001AF554(dispatch_queue_t *a1, void *a2, uint64_t a3, void *a4)
{
  id v8 = a2;
  id v7 = a4;
  if (a1)
  {
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472LL;
    v9[2] = sub_1001AF608;
    v9[3] = &unk_1003EAB80;
    void v9[4] = a1;
    id v10 = v8;
    uint64_t v12 = a3;
    id v11 = v7;
    sub_1001AF394(a1, v9);
  }
}

void sub_1001AF608(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2)
  {
    sub_1001AFDD4(v2, *(void **)(a1 + 40), 0);
    uint64_t v2 = *(void *)(a1 + 32);
  }

  sub_1001AF2DC(v2, *(objc_class **)(a1 + 56), *(void **)(a1 + 48));
}

void sub_1001AF640(dispatch_queue_t *a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if (a1)
  {
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472LL;
    void v7[2] = sub_1001AF6E4;
    v7[3] = &unk_1003EA390;
    void v7[4] = a1;
    id v8 = v6;
    id v9 = v5;
    sub_1001AF394(a1, v7);
  }
}

void sub_1001AF6E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    sub_1001AFDD4(v3, *(void **)(a1 + 40), 0);
  }
  id v4 = objc_msgSend((id)objc_opt_class(*(void *)(a1 + 40), a2), "storeDescriptor");
  isa = (objc_class *)objc_claimAutoreleasedReturnValue(v4);
  id v9 = isa;
  if (isa) {
    isa = isa[3].isa;
  }
  id v6 = [[isa alloc] initWithConnection:*(void *)(*(void *)(a1 + 32) + 8)];
  id v7 = *(void **)(a1 + 32);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  void v10[2] = sub_1001AF7B8;
  v10[3] = &unk_1003EABA8;
  id v11 = *(id *)(a1 + 48);
  id v8 = sub_1001AF7D8(v7, v6, v10);
}

uint64_t sub_1001AF7B8(uint64_t a1)
{
  return 0LL;
}

id sub_1001AF7D8(id a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (a1)
  {
    dispatch_assert_queue_V2(*((dispatch_queue_t *)a1 + 2));
    uint64_t v13 = 0LL;
    id v14 = &v13;
    uint64_t v15 = 0x3032000000LL;
    objc_super v16 = sub_1001B01D8;
    uint64_t v17 = sub_1001B01E8;
    id v18 = 0LL;
    uint64_t v7 = *((void *)a1 + 1);
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472LL;
    v9[2] = sub_1001B01F0;
    v9[3] = &unk_1003EAC20;
    uint64_t v12 = &v13;
    id v11 = v6;
    id v10 = v5;
    sub_1001D6D30(v7, v9);
    a1 = (id)v14[5];

    _Block_object_dispose(&v13, 8);
  }

  return a1;
}

void sub_1001AF8E0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_1001AF8F8(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  if (a1)
  {
    id v10 = *(dispatch_queue_s **)(a1 + 16);
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472LL;
    void v11[2] = sub_1001AF9CC;
    v11[3] = &unk_1003EAB58;
    void v11[4] = a1;
    id v12 = v7;
    id v13 = v8;
    id v14 = v9;
    dispatch_async(v10, v11);
  }
}

void sub_1001AF9CC(id *a1, uint64_t a2)
{
  uint64_t v3 = (uint64_t)a1[4];
  if (v3) {
    sub_1001AFDD4(v3, a1[5], 0);
  }
  id v4 = objc_msgSend((id)objc_opt_class(a1[5], a2), "storeDescriptor");
  isa = (objc_class *)objc_claimAutoreleasedReturnValue(v4);
  id v6 = isa;
  if (isa) {
    isa = isa[3].isa;
  }
  id v7 = [[isa alloc] initWithConnection:*((void *)a1[4] + 1)];
  id v8 = sub_1001AF7D8(a1[4], v7, a1[6]);
  id v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
  dispatch_queue_global_t global_queue = dispatch_get_global_queue(21LL, 0LL);
  id v11 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472LL;
  void v14[2] = sub_1001AFADC;
  v14[3] = &unk_1003E9D48;
  id v12 = a1[7];
  id v15 = v9;
  id v16 = v12;
  id v13 = v9;
  dispatch_async(v11, v14);
}

uint64_t sub_1001AFADC(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  *(void *)(a1 + 32));
}

uint64_t sub_1001AFDC4(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  *(void *)(a1 + 32));
}

BOOL sub_1001AFDD4(uint64_t a1, void *a2, char a3)
{
  id v5 = a2;
  if (a1)
  {
    BOOL v7 = 1LL;
    if (!NSHashGet(*(NSHashTable **)(a1 + 24), v5))
    {
      uint64_t v29 = 0LL;
      uint64_t v30 = &v29;
      uint64_t v31 = 0x2020000000LL;
      char v32 = 1;
      id v8 = objc_msgSend((id)objc_opt_class(v5, v6), "storeDescriptor");
      id v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
      id v11 = objc_alloc(&OBJC_CLASS___SQLiteDatabaseStoreSchema);
      id v12 = *(void **)(a1 + 8);
      if (v9)
      {
        id v13 = objc_getProperty(v9, v10, 8LL, 1);
        id Property = objc_getProperty(v9, v14, 16LL, 1);
      }

      else
      {
        id v13 = 0LL;
        id Property = 0LL;
      }

      id v16 = Property;
      uint64_t v17 = sub_1001E8580(v11, v12, v13, v16);

      uint64_t v18 = *(void *)(a1 + 8);
      v22[0] = _NSConcreteStackBlock;
      v22[1] = 3221225472LL;
      void v22[2] = sub_1001AFFA4;
      v22[3] = &unk_1003EABF8;
      unsigned int v27 = &v29;
      id v23 = v5;
      int v19 = v17;
      char v28 = a3;
      __int16 v24 = v19;
      uint64_t v25 = a1;
      id v20 = v9;
      id v26 = v20;
      sub_1001D6D30(v18, v22);
      BOOL v7 = *((_BYTE *)v30 + 24) != 0;

      _Block_object_dispose(&v29, 8);
    }
  }

  else
  {
    BOOL v7 = 0LL;
  }

  return v7;
}

void sub_1001AFF88( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
}

uint64_t sub_1001AFFA4(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = objc_msgSend( (id)objc_opt_class( *(void *)(a1 + 32),  a2),  "createOrMigrateStoreUsingSchema:",  *(void *)(a1 + 40));
  if (*(_BYTE *)(*(void *)(*(void *)(a1 + 64) + 8LL) + 24LL))
  {
    if (!*(_BYTE *)(a1 + 72))
    {
      uint64_t v3 = *(void *)(a1 + 48);
      uint64_t v4 = *(void *)(v3 + 8);
      v12[0] = _NSConcreteStackBlock;
      v12[1] = 3221225472LL;
      void v12[2] = sub_1001B0124;
      void v12[3] = &unk_1003E9DC0;
      void v12[4] = v3;
      id v13 = *(id *)(a1 + 32);
      sub_1001D6448(v4, v12);
    }
  }

  else
  {
    uint64_t v5 = ASDLogHandleForCategory(35LL);
    uint64_t v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_FAULT))
    {
      id Property = *(id *)(a1 + 56);
      if (Property) {
        id Property = objc_getProperty(Property, v7, 8LL, 1);
      }
      id v10 = Property;
      uint64_t v11 = sub_1001E86F4(*(void *)(a1 + 40));
      *(_DWORD *)__int128 buf = 138543618;
      id v15 = v10;
      __int16 v16 = 2048;
      uint64_t v17 = v11;
    }
  }

  return *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 64) + 8LL) + 24LL);
}

void sub_1001B0124(uint64_t a1)
{
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472LL;
  v2[2] = sub_1001B0194;
  void v2[3] = &unk_1003E9DC0;
  uint64_t v1 = *(void **)(a1 + 40);
  uint64_t v3 = *(dispatch_queue_t **)(a1 + 32);
  id v4 = v1;
  sub_1001AF394(v3, v2);
}

void sub_1001B0194(uint64_t a1)
{
}

uint64_t sub_1001B01D8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1001B01E8(uint64_t a1)
{
}

uint64_t sub_1001B01F0(uint64_t a1)
{
  uint64_t v2 = (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16LL))();
  uint64_t v3 = objc_claimAutoreleasedReturnValue(v2);
  uint64_t v4 = *(void *)(*(void *)(a1 + 48) + 8LL);
  uint64_t v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;

  return 1LL;
}

id sub_1001B0354(void *a1)
{
  if (a1) {
    a1 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"account_dsid"]);
  }
  return a1;
}

id sub_1001B0378(id result)
{
  if (result)
  {
    uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([result valueForProperty:@"attempt_count"]);
    id v2 = [v1 intValue];

    return v2;
  }

  return result;
}

id sub_1001B03B8(void *a1)
{
  if (a1)
  {
    id v1 = sub_1001E26D0(a1, (uint64_t)@"beta_build_group_id");
    a1 = (void *)objc_claimAutoreleasedReturnValue(v1);
  }

  return a1;
}

_TtC9appstored6LogKey *sub_1001B03DC(_TtC9appstored6LogKey *a1)
{
  id v1 = a1;
  if (a1)
  {
    id v2 = objc_alloc(&OBJC_CLASS____TtC9appstored6LogKey);
    uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(-[LogKey valueForProperty:](v1, "valueForProperty:", @"log_key"));
    id v1 = -[LogKey initWithBase:](v2, "initWithBase:", v3);
  }

  return v1;
}

id sub_1001B0444(_TtC9appstored6LogKey *a1, uint64_t a2)
{
  if (!a1) {
    return 0LL;
  }
  uint64_t v3 = (objc_class *)objc_opt_class(&OBJC_CLASS___TFImageUpload, a2);
  uint64_t v4 = @"successful_image_uploads";
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(-[LogKey valueForProperty:](a1, "valueForProperty:", v4));
  if (v6)
  {
    BOOL v7 = +[NSSet setWithObjects:]( &OBJC_CLASS___NSSet,  "setWithObjects:",  objc_opt_class(&OBJC_CLASS___NSArray, v5),  v3,  0LL);
    id v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
    id v18 = 0LL;
    id v9 = (void *)objc_claimAutoreleasedReturnValue( +[NSKeyedUnarchiver unarchivedObjectOfClasses:fromData:error:]( &OBJC_CLASS___NSKeyedUnarchiver,  "unarchivedObjectOfClasses:fromData:error:",  v8,  v6,  &v18));
    id v10 = v18;

    if (v10)
    {
      uint64_t v11 = ASDLogHandleForCategory(38LL);
      id v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
      {
        SEL v14 = sub_1001B03DC(a1);
        id v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
        __int16 v16 = NSStringFromClass(v3);
        uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
        *(_DWORD *)__int128 buf = 138413058;
        id v20 = v15;
        __int16 v21 = 2114;
        objc_super v22 = v4;
        __int16 v23 = 2114;
        __int16 v24 = v17;
        __int16 v25 = 2114;
        id v26 = v10;
        _os_log_error_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_ERROR,  "[%@]: Failed to convert data from property '%{public}@' to array of %{public}@: %{public}@",  buf,  0x2Au);
      }
    }
  }

  else
  {
    id v9 = 0LL;
  }

  return v9;
}

id sub_1001B060C(void *a1)
{
  if (a1) {
    a1 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"item_id"]);
  }
  return a1;
}

void *sub_1001B0670(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  if (a1)
  {
    v15.receiver = a1;
    v15.super_class = (Class)&OBJC_CLASS___DecryptDataConsumer;
    a1 = objc_msgSendSuper2(&v15, "init");
    if (a1)
    {
      dispatch_queue_attr_t v6 = dispatch_queue_attr_make_with_autorelease_frequency(0LL, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
      BOOL v7 = (dispatch_queue_attr_s *)objc_claimAutoreleasedReturnValue(v6);
      dispatch_queue_t v8 = dispatch_queue_create("com.apple.appstored.DecryptDataConsumer", v7);
      id v9 = (void *)a1[4];
      a1[4] = v8;

      a1[2] = malloc(0x8000uLL);
      a1[3] = 0LL;
      a1[6] = 0LL;
      a1[7] = 0LL;
      id v10 = v5;
      uint64_t v27 = 0LL;
      char v28 = &v27;
      uint64_t v29 = 0x2020000000LL;
      char v30 = 0;
      uint64_t v21 = 0LL;
      objc_super v22 = &v21;
      uint64_t v23 = 0x3032000000LL;
      __int16 v24 = sub_1001B0884;
      __int16 v25 = sub_1001B0894;
      id v26 = 0LL;
      uint64_t v11 = (dispatch_queue_s *)a1[4];
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472LL;
      block[2] = sub_1001B089C;
      block[3] = &unk_1003EAC48;
      int v19 = &v21;
      id v12 = v10;
      id v17 = v12;
      id v18 = a1;
      id v20 = &v27;
      dispatch_sync(v11, block);
      int v13 = *((unsigned __int8 *)v28 + 24);
      if (a3 && !*((_BYTE *)v28 + 24))
      {
        *a3 = (id) v22[5];
        int v13 = *((unsigned __int8 *)v28 + 24);
      }

      _Block_object_dispose(&v21, 8);
      _Block_object_dispose(&v27, 8);

      if (!v13)
      {

        a1 = 0LL;
      }
    }
  }

  return a1;
}

uint64_t sub_1001B0884(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1001B0894(uint64_t a1)
{
}

void sub_1001B089C(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[AMSKeybag sharedInstance](&OBJC_CLASS___AMSKeybag, "sharedInstance"));
  uint64_t v3 = *(void *)(*(void *)(a1 + 48) + 8LL);
  id obj = *(id *)(v3 + 40);
  unsigned int v4 = [v2 fairplayContextWithError:&obj];
  objc_storeStrong((id *)(v3 + 40), obj);

  if (v4)
  {
    [*(id *)(a1 + 32) bytes];
    [*(id *)(a1 + 32) length];
    sub_10013E3E4();
    if ((_DWORD)v5 && (uint64_t v6 = v5, (v7 = *(void *)(*(void *)(a1 + 40) + 8LL)) != 0))
    {
      sub_1001802D4(v7);
      *(void *)(*(void *)(a1 + 40) + 8LL) = 0LL;
      uint64_t v8 = ASDErrorDomain;
      NSErrorUserInfoKey v15 = NSDebugDescriptionErrorKey;
      id v9 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Session creation failed (error: %d)",  v6));
      __int16 v16 = v9;
      id v10 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v16,  &v15,  1LL));
      uint64_t v11 = objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  v8,  1133LL,  v10));
      uint64_t v12 = *(void *)(*(void *)(a1 + 48) + 8LL);
      int v13 = *(void **)(v12 + 40);
      *(void *)(v12 + 40) = v11;
    }

    else
    {
      *(_BYTE *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL) = 1;
    }
  }

void sub_1001B0AF0(uint64_t a1)
{
  uint64_t v2 = ASDLogHandleForCategory(31LL);
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  os_signpost_id_t v4 = os_signpost_id_generate(v3);

  uint64_t v5 = ASDLogHandleForCategory(31LL);
  uint64_t v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
  uint64_t v7 = v6;
  unint64_t v8 = v4 - 1;
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v6))
  {
    *(_WORD *)__int128 buf = 0;
    _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v7,  OS_SIGNPOST_INTERVAL_BEGIN,  v4,  "Download::Decrypt/Prepare",  "",  buf,  2u);
  }

  if (!*(void *)(*(void *)(a1 + 32) + 72LL))
  {
    uint64_t v15 = *(void *)(a1 + 48);
    uint64_t v16 = ASDErrorWithDescription(ASDErrorDomain, 701LL, @"No processor was set when consuming data");
    id v14 = (id)objc_claimAutoreleasedReturnValue(v16);
    id v17 = *(void (**)(uint64_t, id, void))(v15 + 16);
    uint64_t v18 = v15;
    goto LABEL_12;
  }

  id v9 = *(void **)(a1 + 40);
  if (!v9 || ![v9 length])
  {
    (*(void (**)(void))(*(void *)(a1 + 48) + 16LL))();
    return;
  }

  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v11 = *(void *)(v10 + 40);
  if (v11)
  {
    uint64_t v12 = *(void **)(a1 + 40);
    id v62 = 0LL;
    int v13 = sub_100239684(v11, v12, &v62);
    id v14 = v62;
    if (v13)
    {
      uint64_t v10 = *(void *)(a1 + 32);
      goto LABEL_16;
    }

    uint64_t v18 = *(void *)(a1 + 48);
    id v17 = *(void (**)(uint64_t, id, void))(v18 + 16);
LABEL_12:
    v17(v18, v14, 0LL);
    goto LABEL_13;
  }

  id v14 = 0LL;
LABEL_16:
  uint64_t v19 = *(void *)(v10 + 24);
  id v20 = [*(id *)(a1 + 40) length];
  uint64_t v21 = *(void *)(a1 + 32);
  if (((unint64_t)v20 + v19) >> 15)
  {
    uint64_t v22 = *(void *)(v21 + 24);
    size_t v23 = (size_t)[*(id *)(a1 + 40) length] + v22;
    __int16 v24 = (char *)malloc(v23);
    __int16 v25 = v24;
    uint64_t v26 = *(void *)(a1 + 32);
    uint64_t v27 = *(void *)(v26 + 24);
    if (v27)
    {
      memcpy(v24, *(const void **)(v26 + 16), *(void *)(v26 + 24));
      char v28 = *(void **)(a1 + 40);
      id v29 = [v28 length];
      char v30 = v28;
      uint64_t v31 = &v25[v27];
    }

    else
    {
      char v32 = *(void **)(a1 + 40);
      id v29 = [v32 length];
      char v30 = v32;
      uint64_t v31 = v25;
    }

    [v30 getBytes:v31 length:v29];
    uint64_t v33 = ASDLogHandleForCategory(31LL);
    __int16 v34 = (os_log_s *)objc_claimAutoreleasedReturnValue(v33);
    id v35 = v34;
    if (v8 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v34))
    {
      *(_DWORD *)__int128 buf = 134349056;
      v66[0] = v23;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v35,  OS_SIGNPOST_INTERVAL_END,  v4,  "Download::Decrypt/Prepare",  " bytes=%{public, signpost.description:attribute}lu ",  buf,  0xCu);
    }

    uint64_t v36 = ASDLogHandleForCategory(31LL);
    __int128 v37 = (os_log_s *)objc_claimAutoreleasedReturnValue(v36);
    id v38 = v37;
    if (v8 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v37))
    {
      *(_WORD *)__int128 buf = 0;
      _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v38,  OS_SIGNPOST_INTERVAL_BEGIN,  v4,  "Download::Decrypt/Process",  "",  buf,  2u);
    }

    uint64_t v39 = *(void *)(a1 + 32);
    unint64_t v40 = (v23 >> 15);
    if (*(void *)(v39 + 56) < v40)
    {
      __int128 v41 = (char *)realloc(*(void **)(v39 + 48), 4 * v40);
      *(void *)(v39 + 4_Block_object_dispose(va, 8) = v41;
      unint64_t v42 = *(void *)(v39 + 56);
      if (v42 < v40) {
        memset_pattern16(&v41[4 * v42], &unk_10038A790, 4 * v40 - 4 * v42);
      }
      *(void *)(v39 + 56) = v40;
      uint64_t v39 = *(void *)(a1 + 32);
    }

    *(_DWORD *)__int128 buf = v23 >> 15;
    *(void *)((char *)v66 + 4) = *(void *)(v39 + 48);
    *(void *)((char *)&v66[1] + 4) = v25;
    uint64_t v43 = v40 << 15;
    *(void *)((char *)&v66[2] + 4) = v40 << 15;
    sub_10017E8FC();
    if (!(_DWORD)v44)
    {
      uint64_t v48 = ASDLogHandleForCategory(31LL);
      unsigned int v49 = (os_log_s *)objc_claimAutoreleasedReturnValue(v48);
      id v50 = v49;
      if (v8 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v49))
      {
        *(_DWORD *)id v63 = 134349056;
        size_t v64 = (v23 >> 15);
        _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v50,  OS_SIGNPOST_INTERVAL_END,  v4,  "Download::Decrypt/Process",  " blocks=%{public, signpost.description:attribute}lu ",  v63,  0xCu);
      }

      uint64_t v51 = ASDLogHandleForCategory(31LL);
      __int16 v52 = (os_log_s *)objc_claimAutoreleasedReturnValue(v51);
      id v53 = v52;
      if (v8 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v52))
      {
        *(_WORD *)id v63 = 0;
        _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v53,  OS_SIGNPOST_INTERVAL_BEGIN,  v4,  "Download::Decrypt/Final",  "",  v63,  2u);
      }

      if (v23 == v43)
      {
        *(void *)(*(void *)(a1 + 32) + 24LL) = 0LL;
      }

      else
      {
        *(void *)(*(void *)(a1 + 32) + 24LL) = v23 - v43;
        uint64_t v54 = *(void *)(a1 + 32);
        size_t v55 = *(void *)(v54 + 24);
        if (v55 > 0x8000)
        {
          *(void *)(v54 + 24) = 0LL;
          uint64_t v56 = ASDErrorWithDescription(ASDErrorDomain, 711LL, @"Partial sample exceeded buffer size!");
          uint64_t v57 = objc_claimAutoreleasedReturnValue(v56);

          free(v25);
          (*(void (**)(void))(*(void *)(a1 + 48) + 16LL))();
          id v14 = (id)v57;
          goto LABEL_13;
        }

        memcpy(*(void **)(v54 + 16), &v25[v43], v55);
        size_t v23 = v40 << 15;
      }

      uint64_t v58 = ASDLogHandleForCategory(31LL);
      id v59 = (os_log_s *)objc_claimAutoreleasedReturnValue(v58);
      id v60 = v59;
      if (v8 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v59))
      {
        *(_DWORD *)id v63 = 134349056;
        size_t v64 = v23;
        _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v60,  OS_SIGNPOST_INTERVAL_END,  v4,  "Download::Decrypt/Final",  " bytes=%{public, signpost.description:attribute}lu ",  v63,  0xCu);
      }

      id v61 = -[NSData initWithBytesNoCopy:length:freeWhenDone:]( objc_alloc(&OBJC_CLASS___NSData),  "initWithBytesNoCopy:length:freeWhenDone:",  v25,  v23,  1LL);
      [*(id *)(*(void *)(a1 + 32) + 72) consumeData:v61 withCompletionHandler:*(void *)(a1 + 48)];

      goto LABEL_13;
    }

    id v45 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Decryption failed (error: %d)",  v44));
    uint64_t v46 = ASDErrorWithDescription(ASDErrorDomain, 711LL, v45);
    uint64_t v47 = objc_claimAutoreleasedReturnValue(v46);

    free(v25);
    (*(void (**)(void))(*(void *)(a1 + 48) + 16LL))();

    id v14 = (id)v47;
  }

  else
  {
    memcpy( (void *)(*(void *)(v21 + 16) + *(void *)(v21 + 24)), [*(id *)(a1 + 40) bytes], (size_t)objc_msgSend(*(id *)(a1 + 40), "length"));
    *(void *)(*(void *)(a1 + 32) + 24) += [*(id *)(a1 + 40) length];
    (*(void (**)(void, void, void))(*(void *)(a1 + 48) + 16LL))(*(void *)(a1 + 48), 0LL, 0LL);
  }

void sub_1001B11A0(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  if (!v2[9])
  {
    uint64_t v6 = *(void *)(a1 + 40);
    uint64_t v7 = ASDErrorWithDescription(ASDErrorDomain, 701LL, @"No processor was set when finishing");
    id v13 = (id)objc_claimAutoreleasedReturnValue(v7);
    (*(void (**)(uint64_t, id))(v6 + 16))(v6, v13);
    goto LABEL_6;
  }

  if (v2[3])
  {
    sub_10017CF8C();
    if ((_DWORD)v3)
    {
      id v13 = (id)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Decryption failed (error: %d)",  v3));
      uint64_t v4 = ASDErrorWithDescription(ASDErrorDomain, 711LL, v13);
      uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
      (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();

LABEL_6:
      return;
    }

    id v9 = -[NSData initWithBytes:length:]( objc_alloc(&OBJC_CLASS___NSData),  "initWithBytes:length:",  *(void *)(*(void *)(a1 + 32) + 16LL),  *(void *)(*(void *)(a1 + 32) + 24LL));
    *(void *)(*(void *)(a1 + 32) + 24LL) = 0LL;
    uint64_t v10 = *(void *)(a1 + 32);
    uint64_t v11 = *(void **)(a1 + 40);
    uint64_t v12 = *(void **)(v10 + 72);
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472LL;
    void v14[2] = sub_1001B133C;
    v14[3] = &unk_1003EAC98;
    void v14[4] = v10;
    id v15 = v11;
    [v12 consumeData:v9 andWaitWithCompletionHandler:v14];
  }

  else
  {
    void v2[3] = 0LL;
    unint64_t v8 = (void *)v2[5];
    void v2[5] = 0LL;

    [*(id *)(*(void *)(a1 + 32) + 72) finishWithCompletionHandler:*(void *)(a1 + 40)];
  }

void sub_1001B133C(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void **)(a1 + 32);
  if (v3)
  {
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472LL;
    void v5[2] = sub_1001B13E8;
    _DWORD v5[3] = &unk_1003EAC70;
    id v7 = *(id *)(a1 + 40);
    id v6 = v3;
    [v4 finishWithCompletionHandler:v5];
  }

  else
  {
    [*(id *)(a1 + 32) finishWithCompletionHandler:*(void *)(a1 + 40)];
  }
}

uint64_t sub_1001B13E8(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16LL))( *(void *)(a1 + 40),  *(void *)(a1 + 32));
}

void sub_1001B1474(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = *(void **)(v1 + 72);
  if (v2)
  {
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472LL;
    _DWORD v6[2] = sub_1001B1540;
    v6[3] = &unk_1003EA880;
    void v6[4] = v1;
    id v7 = *(id *)(a1 + 40);
    [v2 prepareWithCompletionHandler:v6];
  }

  else
  {
    uint64_t v3 = *(void *)(a1 + 40);
    uint64_t v4 = ASDErrorWithDescription(ASDErrorDomain, 701LL, @"No processor was set when preparing");
    id v5 = (id)objc_claimAutoreleasedReturnValue(v4);
    (*(void (**)(uint64_t, void, id))(v3 + 16))(v3, 0LL, v5);
  }

void sub_1001B1540(uint64_t a1, unint64_t a2, void *a3)
{
  id v8 = a3;
  if (*(void *)(*(void *)(a1 + 32) + 64LL))
  {
    id v5 = sub_100239190(objc_alloc(&OBJC_CLASS___DigestVerifier), *(void **)(*(void *)(a1 + 32) + 64LL), a2);
    uint64_t v6 = *(void *)(a1 + 32);
    id v7 = *(void **)(v6 + 40);
    *(void *)(v6 + 40) = v5;
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
}

void sub_1001B163C(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  if (v2[9])
  {
    void v2[3] = 0LL;
    uint64_t v3 = (void *)v2[5];
    void v2[5] = 0LL;

    [*(id *)(*(void *)(a1 + 32) + 72) resetWithCompletionHandler:*(void *)(a1 + 40)];
  }

  else
  {
    uint64_t v4 = *(void *)(a1 + 40);
    uint64_t v5 = ASDErrorWithDescription(ASDErrorDomain, 701LL, @"No processor was set when resetting");
    id v6 = (id)objc_claimAutoreleasedReturnValue(v5);
    (*(void (**)(uint64_t, id))(v4 + 16))(v4, v6);
  }

void sub_1001B174C(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  if (v2[9])
  {
    void v2[3] = 0LL;
    uint64_t v3 = (void *)v2[5];
    void v2[5] = 0LL;

    [*(id *)(*(void *)(a1 + 32) + 72) suspendWithCompletionHandler:*(void *)(a1 + 40)];
  }

  else
  {
    uint64_t v4 = *(void *)(a1 + 40);
    uint64_t v5 = ASDErrorWithDescription(ASDErrorDomain, 701LL, @"No processor was set when suspending");
    id v6 = (id)objc_claimAutoreleasedReturnValue(v5);
    (*(void (**)(uint64_t, id))(v4 + 16))(v4, v6);
  }

void sub_1001B185C(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  if (v2[9])
  {
    void v2[3] = 0LL;
    uint64_t v3 = (void *)v2[5];
    void v2[5] = 0LL;

    if ((objc_opt_respondsToSelector(*(void *)(*(void *)(a1 + 32) + 72LL), "truncateWithCompletionHandler:") & 1) != 0)
    {
      uint64_t v4 = *(void **)(a1 + 40);
      uint64_t v5 = *(void **)(*(void *)(a1 + 32) + 72LL);
      v9[0] = _NSConcreteStackBlock;
      v9[1] = 3221225472LL;
      v9[2] = sub_1001B196C;
      v9[3] = &unk_1003E9C30;
      id v10 = v4;
      [v5 truncateWithCompletionHandler:v9];
    }

    else
    {
      (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
    }
  }

  else
  {
    uint64_t v6 = *(void *)(a1 + 40);
    uint64_t v7 = ASDErrorWithDescription(ASDErrorDomain, 701LL, @"No processor was set when truncating");
    id v8 = (id)objc_claimAutoreleasedReturnValue(v7);
    (*(void (**)(uint64_t, id))(v6 + 16))(v6, v8);
  }

uint64_t sub_1001B196C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_1001B1A70(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 16));
    [WeakRetained finishInstallID:a2 transaction:a1];
  }

void sub_1001B1ABC(id *a1, uint64_t a2, void *a3, char a4)
{
  id v7 = a3;
  id v8 = v7;
  if (a1)
  {
    id v9 = (void *)objc_claimAutoreleasedReturnValue([v7 domain]);
    uint64_t v10 = IXUserPresentableErrorDomain;
    else {
      BOOL v11 = 0;
    }

    uint64_t v12 = objc_alloc(&OBJC_CLASS___AppInstallEntity);
    id v13 = (void *)objc_claimAutoreleasedReturnValue([a1 connection]);
    id v14 = -[SQLiteEntity initWithPersistentID:onConnection:](v12, "initWithPersistentID:onConnection:", a2, v13);

    if (!-[SQLiteEntity existsInDatabase](v14, "existsInDatabase"))
    {
      uint64_t v27 = ASDLogHandleForCategory(2LL);
      uint64_t v16 = (os_log_s *)objc_claimAutoreleasedReturnValue(v27);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)__int128 buf = 134217984;
        *(void *)&uint8_t buf[4] = a2;
      }

      goto LABEL_110;
    }

    BOOL v119 = v11;
    id v15 = sub_1001E2734(v14, (uint64_t)@"external_id");
    uint64_t v16 = (os_log_s *)objc_claimAutoreleasedReturnValue(v15);
    uint64_t v17 = ASDLogHandleForCategory(2LL);
    uint64_t v18 = (os_log_s *)objc_claimAutoreleasedReturnValue(v17);
    if (v16)
    {
      *(void *)__int128 buf = 0LL;
      *(void *)&buf[8] = 0LL;
      -[os_log_s getUUIDBytes:](v16, "getUUIDBytes:", buf);
      os_signpost_id_t v19 = *(void *)buf;
      if ((unint64_t)(*(void *)buf - 1LL) <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v18))
      {
        *(_DWORD *)__int128 buf = 138543362;
        *(void *)&uint8_t buf[4] = v8;
        _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v18,  OS_SIGNPOST_INTERVAL_END,  v19,  "Install",  " error=%{public, signpost.description:attribute}@ ",  buf,  0xCu);
      }
    }

    sub_1001B2880(a1, v14, v8);
    id v20 = sub_10021B984(v14);
    uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue(v20);
    __int128 v118 = v21;
    if (sub_1001E2698(v21, (uint64_t)@"package_type") != (id)1)
    {
LABEL_47:
      uint64_t v28 = SZExtractorErrorDomain;
      if (((ASDErrorSearch(v8, SZExtractorErrorDomain, 4LL) & 1) != 0 || ASDErrorSearch(v8, v28, 2LL))
        && (a4 & 1) == 0
        && sub_1001E2598(v21, (uint64_t)@"locate_asset_cache"))
      {
        uint64_t v29 = ASDLogHandleForCategory(2LL);
        char v30 = (os_log_s *)objc_claimAutoreleasedReturnValue(v29);
        if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR))
        {
          uint64_t v109 = sub_10021B614(v14);
          uint64_t v110 = (void *)objc_claimAutoreleasedReturnValue(v109);
          *(_DWORD *)__int128 buf = 138412290;
          *(void *)&uint8_t buf[4] = v110;
          _os_log_error_impl( (void *)&_mh_execute_header,  v30,  OS_LOG_TYPE_ERROR,  "[%@] Detected corrupt data on asset cache server; retrying with CDN.",
            buf,
            0xCu);

          uint64_t v21 = v118;
        }

        uint64_t v31 = &__kCFBooleanFalse;
        char v32 = v21;
        uint64_t v33 = @"locate_asset_cache";
        goto LABEL_76;
      }

      if (!ASDErrorSearch(v8, MIInstallerErrorDomain, 174LL)
        || (sub_10021B5EC(v14) & 1) != 0
        || sub_10021B8A4(v14))
      {
        if (!v119)
        {
          uint64_t v44 = 0LL;
LABEL_83:
          id v68 = sub_10021BD0C(v14, v8);
          uint64_t v69 = objc_claimAutoreleasedReturnValue(v68);
          id v70 = (void *)v69;
          if (v69) {
            *(void *)(v69 + 128) |= 0x10uLL;
          }
          if (!sub_1001E2698(v14, (uint64_t)@"source_type"))
          {
            id v72 = (void *)objc_claimAutoreleasedReturnValue(-[SQLiteEntity valueForProperty:](v14, "valueForProperty:", @"update_type"));
            id v73 = [v72 integerValue];

            if (v73
              || +[UpdatesManager isTVProviderApp:]( &OBJC_CLASS___UpdatesManager,  "isTVProviderApp:",  sub_1001E2698(v14, (uint64_t)@"item_id")))
            {
              __int128 v74 = (void *)objc_claimAutoreleasedReturnValue(-[SQLiteEntity valueForProperty:](v14, "valueForProperty:", @"bundle_id"));
              sub_1001EB250((uint64_t)v70, v74, v44);
            }
          }

          id Property = objc_getProperty(a1, v71, 24LL, 1);
          sub_1001EB714((uint64_t)Property, v70);
          uint64_t v76 = (void *)objc_claimAutoreleasedReturnValue(-[SQLiteEntity valueForProperty:](v14, "valueForProperty:", @"source_type"));
          id v77 = [v76 integerValue];

          if (v77 == (id)2)
          {
            unsigned int v78 = objc_alloc(&OBJC_CLASS___ASDBundle);
            id v79 = sub_10021B6D0(v14);
            id v80 = (void *)objc_claimAutoreleasedReturnValue(v79);
            __int16 v81 = -[ASDBundle initWithIdentifier:](v78, "initWithIdentifier:", v80);

            if (v81)
            {
              id v82 = objc_opt_new(&OBJC_CLASS___TaskQueue);
              p_isa = (id *)&v82->super.isa;
              if (v82) {
                -[NSOperationQueue setName:]( v82->_operationQueue,  "setName:",  @"com.apple.AppInstallsDatabaseTransaction.NotifyTestFlightClientTaskQueue");
              }
              uint64_t v84 = sub_1002C9750( (uint64_t)&OBJC_CLASS___NotifyTestFlightClientTask,  (NSError *)0xFFFFFFFFFFFFFFECLL,  v81,  v8);
              __int128 v85 = (void *)objc_claimAutoreleasedReturnValue(v84);
              if (p_isa) {
                [p_isa[1] addOperation:v85];
              }
            }
          }

          if (v119)
          {
            v121[0] = @"bundle_id";
            v121[1] = @"priority";
            __int128 v86 = (void *)objc_claimAutoreleasedReturnValue( +[NSArray arrayWithObjects:count:]( &OBJC_CLASS___NSArray,  "arrayWithObjects:count:",  v121,  2LL));
            id v87 = (void *)objc_claimAutoreleasedReturnValue(-[SQLiteEntity getValuesForProperties:](v14, "getValuesForProperties:", v86));

            id v88 = (void *)objc_claimAutoreleasedReturnValue([v87 objectForKeyedSubscript:@"priority"]);
            objc_opt_class(&OBJC_CLASS___NSNumber, v89);
            id v90 = sub_1001B2BD8(v88);
            __int128 v91 = (void *)objc_claimAutoreleasedReturnValue(v90);

            if (v91 && ((unint64_t)[v91 longValue] & 0x8000000000000000) == 0)
            {
              id v92 = (void *)objc_claimAutoreleasedReturnValue([v87 objectForKeyedSubscript:@"bundle_id"]);
              objc_opt_class(&OBJC_CLASS___NSString, v93);
              id v94 = sub_1001B2BD8(v92);
              uint64_t v95 = (void *)objc_claimAutoreleasedReturnValue(v94);

              if ([v95 length]) {
                IXDisplayUserPresentableErrorForApp(v95, 17LL);
              }
            }
          }

          id v96 = sub_1001B2C20(v14, v8);
          id v97 = (void *)objc_claimAutoreleasedReturnValue(v96);
          if (v97)
          {
            uint64_t v98 = ASDLogHandleForCategory(2LL);
            SEL v99 = (os_log_s *)objc_claimAutoreleasedReturnValue(v98);
            if (os_log_type_enabled(v99, OS_LOG_TYPE_DEFAULT))
            {
              id v100 = sub_10021B614(v14);
              unint64_t v101 = (void *)objc_claimAutoreleasedReturnValue(v100);
              *(_DWORD *)__int128 buf = 138412546;
              *(void *)&uint8_t buf[4] = v101;
              *(_WORD *)&buf[12] = 2114;
              *(void *)&buf[14] = v8;
              _os_log_impl( (void *)&_mh_execute_header,  v99,  OS_LOG_TYPE_DEFAULT,  "[%@] Notifying clients of the failed install with error: %{public}@",  buf,  0x16u);
            }

            __int128 v120 = v97;
            uint64_t v102 = (void *)objc_claimAutoreleasedReturnValue( +[NSArray arrayWithObjects:count:]( &OBJC_CLASS___NSArray,  "arrayWithObjects:count:",  &v120,  1LL));
            id v103 = sub_1002253D8((uint64_t)&OBJC_CLASS___ASDNotification, v102);
            id v104 = (void *)objc_claimAutoreleasedReturnValue(v103);

            id v105 = sub_1002E78A4((uint64_t)&OBJC_CLASS___XPCNotificationCenter);
            id v106 = (void *)objc_claimAutoreleasedReturnValue(v105);
            sub_1002E79EC((uint64_t)v106, v104);
          }

          id v107 = sub_10021B73C(v14);
          sub_1001B2CF8(a1, v14, (uint64_t)v107);
          -[AppInstallEntity deleteFromDatabase](v14, "deleteFromDatabase");

          uint64_t v21 = v118;
          goto LABEL_109;
        }

        v124[0] = @"bundle_id";
        v124[1] = @"evid";
        v124[2] = @"restore_type";
        __int16 v34 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v124, 3LL));
        id v35 = (void *)objc_claimAutoreleasedReturnValue(-[SQLiteEntity getValuesForProperties:](v14, "getValuesForProperties:", v34));

        uint64_t v36 = (void *)objc_claimAutoreleasedReturnValue([v35 objectForKeyedSubscript:@"restore_type"]);
        id v37 = [v36 integerValue];

        if (!v37)
        {
          uint64_t v44 = 0LL;
LABEL_82:

          goto LABEL_83;
        }

        id v38 = (id)objc_claimAutoreleasedReturnValue([v35 objectForKeyedSubscript:@"bundle_id"]);
        id v39 = sub_1002F9B60((uint64_t)&OBJC_CLASS___AppDefaultsManager);
        unint64_t v40 = (void *)objc_claimAutoreleasedReturnValue(v39);
        __int128 v41 = (void *)objc_claimAutoreleasedReturnValue([v40 objectForKeyedSubscript:v38]);

        if (!v41)
        {
          id v45 = (void *)objc_claimAutoreleasedReturnValue([v35 objectForKeyedSubscript:@"evid"]);
          uint64_t v46 = ASDLogHandleForCategory(2LL);
          uint64_t v47 = (os_log_s *)objc_claimAutoreleasedReturnValue(v46);
          if (os_log_type_enabled(v47, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v48 = sub_10021B614(v14);
            unsigned int v49 = (void *)objc_claimAutoreleasedReturnValue(v48);
            *(_DWORD *)__int128 buf = 138412546;
            *(void *)&uint8_t buf[4] = v49;
            *(_WORD *)&buf[12] = 2114;
            *(void *)&buf[14] = v8;
            _os_log_impl( (void *)&_mh_execute_header,  v47,  OS_LOG_TYPE_DEFAULT,  "[%@] Restore failed due to code signing, retrying with evid=0: %{public}@",  buf,  0x16u);
          }

          sub_1002F9CF8((uint64_t)&OBJC_CLASS___AppDefaultsManager, v38, v45);
          v123[0] = &off_10040C070;
          v122[0] = @"bootstrapped";
          v122[1] = @"coordinator_id";
          id v50 = (void *)objc_claimAutoreleasedReturnValue(+[NSNull null](&OBJC_CLASS___NSNull, "null"));
          v123[1] = v50;
          v123[2] = &off_10040C088;
          v122[2] = @"coordinator_intent";
          v122[3] = @"phase";
          v123[3] = &off_10040C0A0;
          uint64_t v51 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v123,  v122,  4LL));
          -[SQLiteEntity setValuesWithDictionary:](v14, "setValuesWithDictionary:", v51);

          id v53 = objc_getProperty(a1, v52, 24LL, 1);
          uint64_t v54 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", a2));
          sub_1001EB5D8((uint64_t)v53, v54);

          uint64_t v56 = objc_getProperty(a1, v55, 24LL, 1);
          if (v56) {
            v56[16] |= 0x20uLL;
          }

          uint64_t v21 = v118;
          goto LABEL_77;
        }

        uint64_t v42 = ASDLogHandleForCategory(2LL);
        uint64_t v43 = (os_log_s *)objc_claimAutoreleasedReturnValue(v42);
        if (os_log_type_enabled(v43, OS_LOG_TYPE_ERROR))
        {
          __int128 v111 = sub_10021B614(v14);
          uint64_t v112 = (void *)objc_claimAutoreleasedReturnValue(v111);
          *(_DWORD *)__int128 buf = 138412546;
          *(void *)&uint8_t buf[4] = v112;
          *(_WORD *)&buf[12] = 2114;
          *(void *)&buf[14] = v8;
          _os_log_error_impl( (void *)&_mh_execute_header,  v43,  OS_LOG_TYPE_ERROR,  "[%@] Restore failed due to code signing after retrying with evid=0: %{public}@",  buf,  0x16u);
        }

        sub_1002F9CF8((uint64_t)&OBJC_CLASS___AppDefaultsManager, v38, 0LL);
        uint64_t v44 = 5LL;
      }

      else
      {
        uint64_t v64 = ASDLogHandleForCategory(2LL);
        id v65 = (os_log_s *)objc_claimAutoreleasedReturnValue(v64);
        if (os_log_type_enabled(v65, OS_LOG_TYPE_ERROR))
        {
          id v115 = sub_10021B614(v14);
          unint64_t v116 = (void *)objc_claimAutoreleasedReturnValue(v115);
          *(_DWORD *)__int128 buf = 138412546;
          *(void *)&uint8_t buf[4] = v116;
          *(_WORD *)&buf[12] = 2114;
          *(void *)&buf[14] = v8;
          _os_log_error_impl( (void *)&_mh_execute_header,  v65,  OS_LOG_TYPE_ERROR,  "[%@] Retrying purchase due to missing SINF key: %{public}@",  buf,  0x16u);
        }

        id v38 = objc_getProperty(a1, v66, 24LL, 1);
        id v67 = sub_1001DE064((uint64_t)&OBJC_CLASS___RedownloadRecoveryTask, v14);
        id v35 = (void *)objc_claimAutoreleasedReturnValue(v67);
        sub_1001EB3C4((uint64_t)v38, v35);
        uint64_t v44 = 0LL;
      }

      goto LABEL_82;
    }

    uint64_t v22 = v14;
    id v23 = v8;
    __int16 v24 = v23;
    if (!v23)
    {
LABEL_46:

      goto LABEL_47;
    }

    id v117 = v22;
    __int16 v25 = (void *)objc_claimAutoreleasedReturnValue([v23 domain]);
    uint64_t v26 = (uint64_t)[v24 code];
    if ([v25 isEqualToString:ASDErrorDomain])
    {
      if (v26 != 506 && v26 != 515 && v26 != 1061) {
        goto LABEL_70;
      }
      goto LABEL_45;
    }

    if ([v25 isEqualToString:@"AssetErrorDomain"])
    {
      if (v26 < 1001)
      {
        if ((unint64_t)v26 >= 8 && (unint64_t)(v26 - 9) >= 2)
        {
          if (v26 != 8) {
            goto LABEL_70;
          }
          goto LABEL_73;
        }
      }

      else
      {
        if (v26 <= 1402)
        {
          if (v26 != 1206 && v26 != 1400) {
            goto LABEL_70;
          }
          goto LABEL_73;
        }

        if (v26 == 1403) {
          goto LABEL_73;
        }
        if (v26 != 1408)
        {
          if (v26 != 1416)
          {
LABEL_70:
            uint64_t v57 = ASDLogHandleForCategory(2LL);
            uint64_t v58 = (os_log_s *)objc_claimAutoreleasedReturnValue(v57);
            if (os_log_type_enabled(v58, OS_LOG_TYPE_DEFAULT))
            {
              id v59 = sub_10021B614(v117);
              id v60 = (void *)objc_claimAutoreleasedReturnValue(v59);
              *(_DWORD *)__int128 buf = 138412802;
              *(void *)&uint8_t buf[4] = v60;
              *(_WORD *)&buf[12] = 2114;
              *(void *)&buf[14] = v25;
              __int16 v126 = 2048;
              uint64_t v127 = v26;
              _os_log_impl( (void *)&_mh_execute_header,  v58,  OS_LOG_TYPE_DEFAULT,  "[%@] Defaulting to retrying with full update for error %{public}@:%ld",  buf,  0x20u);
            }
          }

void sub_1001B2880(void *a1, void *a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = a2;
  id v7 = sub_10021B984(v6);
  id v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
  id v9 = [v8 persistentID];
  v32[0] = @"archive_type";
  v32[1] = @"bytes_total";
  v32[2] = @"package_type";
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v32, 3LL));
  BOOL v11 = (void *)objc_claimAutoreleasedReturnValue([a1 connection]);
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteEntity memoryEntityForPersistentID:withProperties:usingConnection:]( &OBJC_CLASS___AppPackageEntity,  "memoryEntityForPersistentID:withProperties:usingConnection:",  v9,  v10,  v11));

  id v13 = objc_opt_new(&OBJC_CLASS___NSMutableDictionary);
  id v14 = v13;
  if (v5) {
    id v15 = &__kCFBooleanFalse;
  }
  else {
    id v15 = &__kCFBooleanTrue;
  }
  -[NSMutableDictionary setObject:forKeyedSubscript:](v13, "setObject:forKeyedSubscript:", v15, @"success");
  id v16 = sub_100298CBC(v5);
  uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(v16);

  -[NSMutableDictionary setObject:forKeyedSubscript:](v14, "setObject:forKeyedSubscript:", v17, @"error");
  uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
  os_signpost_id_t v19 = (void *)objc_claimAutoreleasedReturnValue([v6 valueForProperty:@"timestamp"]);
  [v18 timeIntervalSinceDate:v19];
  double v21 = v20;
  uint64_t v22 = (uint64_t)v20;

  id v23 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", v22));
  -[NSMutableDictionary setObject:forKeyedSubscript:](v14, "setObject:forKeyedSubscript:", v23, @"duration");

  __int16 v24 = +[NSNumber numberWithInteger:]( &OBJC_CLASS___NSNumber,  "numberWithInteger:",  vcvtpd_s64_f64((double)(uint64_t)sub_1001E2698(v12, (uint64_t)@"bytes_total") / 1000.0));
  __int16 v25 = (void *)objc_claimAutoreleasedReturnValue(v24);
  -[NSMutableDictionary setObject:forKeyedSubscript:](v14, "setObject:forKeyedSubscript:", v25, @"packageSize");

  uint64_t v26 = +[NSNumber numberWithInteger:]( &OBJC_CLASS___NSNumber,  "numberWithInteger:",  sub_1001E2698(v12, (uint64_t)@"package_type"));
  uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue(v26);
  -[NSMutableDictionary setObject:forKeyedSubscript:](v14, "setObject:forKeyedSubscript:", v27, @"packageType");

  uint64_t v28 = +[NSNumber numberWithInteger:]( &OBJC_CLASS___NSNumber,  "numberWithInteger:",  sub_1001E2698(v12, (uint64_t)@"archive_type"));
  uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue(v28);
  -[NSMutableDictionary setObject:forKeyedSubscript:](v14, "setObject:forKeyedSubscript:", v29, @"packageFormat");

  sub_10030F080((uint64_t)&OBJC_CLASS___Analytics, v14, 32LL);
  char v30 = sub_10021B614(v6);
  uint64_t v31 = (void *)objc_claimAutoreleasedReturnValue(v30);

  +[QALogger installWithDuration:logKey:]( &OBJC_CLASS____TtC9appstored8QALogger,  "installWithDuration:logKey:",  v31,  (double)(uint64_t)v21);
}

void *sub_1001B2B88(void *result, uint64_t a2)
{
  if (result)
  {
    uint64_t v2 = result;
    sub_1001B4B5C(result, 10LL, a2);
    uint64_t result = objc_getProperty(v2, v3, 24LL, 1);
    if (result) {
      result[16] |= 0x8000uLL;
    }
  }

  return result;
}

id sub_1001B2BD8(void *a1)
{
  id v1 = a1;
  if ((objc_opt_isKindOfClass() & 1) != 0) {
    id v2 = v1;
  }
  else {
    id v2 = 0LL;
  }

  return v2;
}

id sub_1001B2C20(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  id v5 = sub_1001E26D0(v3, (uint64_t)@"bundle_id");
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  if (v6)
  {
    id v7 = [[ASDApp alloc] initWithBundleID:v6];
    [v7 setInstallError:v4];
    id v8 = sub_1001E25D0(v3, (uint64_t)@"item_id");
    id v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
    objc_msgSend(v7, "setStoreItemID:", objc_msgSend(v9, "longLongValue"));
  }

  else
  {
    id v7 = 0LL;
  }

  return v7;
}

void sub_1001B2CF8(void *a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithLongLong:]( NSNumber,  "numberWithLongLong:",  [v5 persistentID]));
  id v7 = sub_10031DE10((uint64_t)&OBJC_CLASS___AppInstallInfo, v6);
  id v8 = (void *)objc_claimAutoreleasedReturnValue(v7);

  if (v8) {
    uint64_t v9 = v8[12];
  }
  else {
    uint64_t v9 = 0LL;
  }
  v54[0] = @"bytes_total";
  v54[1] = @"delta_algorithm";
  v54[2] = @"package_type";
  v54[3] = @"package_url";
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v54, 4LL));
  BOOL v11 = (void *)objc_claimAutoreleasedReturnValue([a1 connection]);
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteEntity memoryEntityForPersistentID:withProperties:usingConnection:]( &OBJC_CLASS___AppPackageEntity,  "memoryEntityForPersistentID:withProperties:usingConnection:",  v9,  v10,  v11));

  id v14 = -[AppInstallationEvent initWithEntity:package:finalPhase:]( objc_alloc(&OBJC_CLASS____TtC9appstored20AppInstallationEvent),  "initWithEntity:package:finalPhase:",  v5,  v12,  a3);
  if (v14)
  {
    id Property = objc_getProperty(a1, v13, 24LL, 1);
    sub_1001EB428((uint64_t)Property, v14);
  }

  if (a3 == -40)
  {
    uint64_t v17 = sub_1002EA684(objc_alloc(&OBJC_CLASS___AppLedgerEvent), v5, v12);
    if (v17)
    {
      id v18 = objc_getProperty(a1, v16, 24LL, 1);
      sub_1001EB494((uint64_t)v18, v17);
    }
  }

  self = a1;
  id v19 = v5;
  id v20 = v12;
  double v21 = objc_opt_new(&OBJC_CLASS___NSMutableDictionary);
  if (a3 == -40)
  {
    uint64_t v22 = 0LL;
  }

  else
  {
    id v23 = sub_1001E2798(v20, (uint64_t)@"package_url");
    __int16 v24 = (void *)objc_claimAutoreleasedReturnValue(v23);
    id v25 = sub_1001ED0B4(v24);
    uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue(v25);
    uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue([v26 absoluteString]);
    -[NSMutableDictionary setObject:forKeyedSubscript:](v21, "setObject:forKeyedSubscript:", v27, @"assetURL");

    id v28 = sub_1001E25D0(v19, (uint64_t)@"evid");
    uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue(v28);
    -[NSMutableDictionary setObject:forKeyedSubscript:]( v21,  "setObject:forKeyedSubscript:",  v29,  @"externalVersionID");

    char v30 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", a3));
    -[NSMutableDictionary setObject:forKeyedSubscript:](v21, "setObject:forKeyedSubscript:", v30, @"finalPhase");

    id v31 = sub_1001E26D0(v19, (uint64_t)@"log_code");
    char v32 = (void *)objc_claimAutoreleasedReturnValue(v31);
    -[NSMutableDictionary setObject:forKeyedSubscript:](v21, "setObject:forKeyedSubscript:", v32, @"installCode");

    uint64_t v33 = +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  sub_1001E2698(v20, (uint64_t)@"package_type") == (id)1);
    __int16 v34 = (void *)objc_claimAutoreleasedReturnValue(v33);
    -[NSMutableDictionary setObject:forKeyedSubscript:](v21, "setObject:forKeyedSubscript:", v34, @"isDelta");

    id v35 = +[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", sub_10021B578(v19) ^ 1);
    uint64_t v36 = (void *)objc_claimAutoreleasedReturnValue(v35);
    -[NSMutableDictionary setObject:forKeyedSubscript:]( v21,  "setObject:forKeyedSubscript:",  v36,  @"isUserInitiated");

    id v37 = sub_1001E25D0(v19, (uint64_t)@"item_id");
    id v38 = (void *)objc_claimAutoreleasedReturnValue(v37);
    -[NSMutableDictionary setObject:forKeyedSubscript:](v21, "setObject:forKeyedSubscript:", v38, @"itemID");

    id v39 = (void *)objc_claimAutoreleasedReturnValue([v20 valueForProperty:@"bytes_total"]);
    -[NSMutableDictionary setObject:forKeyedSubscript:](v21, "setObject:forKeyedSubscript:", v39, @"packageSize");

    id v40 = sub_1001E26D0(v19, (uint64_t)@"client_id");
    uint64_t v41 = objc_claimAutoreleasedReturnValue(v40);
    uint64_t v42 = (void *)v41;
    if (v41) {
      uint64_t v43 = (const __CFString *)v41;
    }
    else {
      uint64_t v43 = &stru_1003F3E40;
    }
    -[NSMutableDictionary setObject:forKeyedSubscript:]( v21,  "setObject:forKeyedSubscript:",  v43,  @"responsibleClientID");

    uint64_t v44 = +[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", sub_10021B914(v19));
    id v45 = (void *)objc_claimAutoreleasedReturnValue(v44);
    -[NSMutableDictionary setObject:forKeyedSubscript:]( v21,  "setObject:forKeyedSubscript:",  v45,  @"softwarePlatform");

    id v46 = sub_1001E26D0(v19, (uint64_t)@"storefront");
    uint64_t v47 = (void *)objc_claimAutoreleasedReturnValue(v46);
    -[NSMutableDictionary setObject:forKeyedSubscript:](v21, "setObject:forKeyedSubscript:", v47, @"storefront");

    id v48 = sub_1001E26D0(v19, (uint64_t)@"install_volume");
    unsigned int v49 = (void *)objc_claimAutoreleasedReturnValue(v48);
    id v50 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", v49 != 0LL));
    -[NSMutableDictionary setObject:forKeyedSubscript:]( v21,  "setObject:forKeyedSubscript:",  v50,  @"isExternalVolume");

    uint64_t v22 = v21;
  }

  if (v22)
  {
    id v52 = objc_getProperty(self, v51, 24LL, 1);
    sub_1001EB56C((uint64_t)v52, v22);
  }
}

void sub_1001B31F0(id *a1, void *a2)
{
  id obj = a2;
  if (a1)
  {
    __int128 v25 = 0u;
    __int128 v26 = 0u;
    __int128 v23 = 0u;
    __int128 v24 = 0u;
    id v22 = [obj countByEnumeratingWithState:&v23 objects:v35 count:16];
    if (v22)
    {
      uint64_t v3 = *(void *)v24;
      do
      {
        for (uint64_t i = 0LL; i != v22; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v24 != v3) {
            objc_enumerationMutation(obj);
          }
          id v5 = *(void **)(*((void *)&v23 + 1) + 8LL * (void)i);
          uint64_t v6 = (NSError *)sub_1001E2698(v5, (uint64_t)@"phase");
          sub_1001B345C(a1, (uint64_t)[v5 databaseID], v6);
          id v7 = (void *)objc_claimAutoreleasedReturnValue([v5 valueForProperty:@"coordinator_id"]);
          uint64_t v8 = ASDLogHandleForCategory(29LL);
          uint64_t v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
          if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v10 = sub_100323C54(v5);
            BOOL v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
            uint64_t v12 = v3;
            id v13 = a1;
            id v14 = [v5 databaseID];
            id v15 = sub_1002C9300((uint64_t)v6);
            id v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
            *(_DWORD *)__int128 buf = 138413058;
            id v28 = v11;
            __int16 v29 = 2048;
            id v30 = v14;
            a1 = v13;
            uint64_t v3 = v12;
            __int16 v31 = 2114;
            char v32 = v16;
            __int16 v33 = 2114;
            __int16 v34 = v7;
            _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "[%@] Finished hard fail install (pid = '%lld', phase = '%{public}@' cid = %{public}@)",  buf,  0x2Au);
          }

          uint64_t v17 = sub_100323C54(v5);
          id v18 = (void *)objc_claimAutoreleasedReturnValue(v17);
          [v5 databaseID];
          id v19 = sub_1002C9300((uint64_t)v6);
          id v20 = (void *)objc_claimAutoreleasedReturnValue(v19);
          ASDDebugLog(2LL, @"[Restore] [%@] Finished hard fail install (pid = '%lld', phase = '%@' cid=%@)");
        }

        id v22 = [obj countByEnumeratingWithState:&v23 objects:v35 count:16];
      }

      while (v22);
    }
  }
}

void sub_1001B345C(id *a1, uint64_t a2, NSError *a3)
{
  if (a1)
  {
    uint64_t v6 = objc_alloc(&OBJC_CLASS___AppInstallEntity);
    id v7 = (void *)objc_claimAutoreleasedReturnValue([a1 connection]);
    uint64_t v8 = -[SQLiteEntity initWithPersistentID:onConnection:](v6, "initWithPersistentID:onConnection:", a2, v7);

    if (-[SQLiteEntity existsInDatabase](v8, "existsInDatabase"))
    {
      uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
      -[SQLiteEntity setValue:forProperty:](v8, "setValue:forProperty:", v9, @"install_finished_timestamp");

      id v10 = sub_1001E2734(v8, (uint64_t)@"external_id");
      BOOL v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
      uint64_t v12 = ASDLogHandleForCategory(2LL);
      id v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
      if (v11)
      {
        *(void *)__int128 buf = 0LL;
        *(void *)&buf[8] = 0LL;
        [v11 getUUIDBytes:buf];
        os_signpost_id_t v14 = *(void *)buf;
        if ((unint64_t)(*(void *)buf - 1LL) <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v13))
        {
          *(_WORD *)__int128 buf = 0;
          _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v13,  OS_SIGNPOST_INTERVAL_END,  v14,  "Install",  "",  buf,  2u);
        }
      }

      sub_1001B2880(a1, v8, 0LL);
      sub_1001B2CF8(a1, v8, (uint64_t)a3);
      id v15 = sub_1001E2698(v8, (uint64_t)@"phase");
      uint64_t v16 = ASDLogHandleForCategory(2LL);
      uint64_t v17 = (os_log_s *)objc_claimAutoreleasedReturnValue(v16);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        id v18 = sub_10021B614(v8);
        id v19 = (void *)objc_claimAutoreleasedReturnValue(v18);
        id v20 = sub_1002C9300((uint64_t)a3);
        double v21 = (void *)objc_claimAutoreleasedReturnValue(v20);
        id v22 = sub_1002C9300((uint64_t)v15);
        __int128 v23 = (void *)objc_claimAutoreleasedReturnValue(v22);
        *(_DWORD *)__int128 buf = 138412802;
        *(void *)&uint8_t buf[4] = v19;
        *(_WORD *)&buf[12] = 2114;
        *(void *)&buf[14] = v21;
        *(_WORD *)&_BYTE buf[22] = 2114;
        id v96 = v23;
        _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "[%@] Finishing with final phase: %{public}@, current phase %{public}@",  buf,  0x20u);
      }

      id WeakRetained = objc_loadWeakRetained(a1 + 2);
      [WeakRetained stopInstallID:a2 withReason:0 transaction:a1];

      __int128 v25 = sub_10021C40C(v8, (uint64_t)a3);
      id v88 = (_BYTE *)objc_claimAutoreleasedReturnValue(v25);
      if (!sub_1001E2698(v8, (uint64_t)@"source_type"))
      {
        uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue(-[SQLiteEntity valueForProperty:](v8, "valueForProperty:", @"update_type"));
        BOOL v28 = [v27 integerValue] == 0;

        if (v28)
        {
          id v39 = (void *)objc_claimAutoreleasedReturnValue(-[SQLiteEntity valueForProperty:](v8, "valueForProperty:", @"restore_type"));
          BOOL v40 = [v39 integerValue] == (id)1;

          if (v40)
          {
            *(void *)__int128 buf = 0LL;
            *(void *)&buf[8] = buf;
            *(void *)&uint8_t buf[16] = 0x2020000000LL;
            LOBYTE(v96) = 0;
            uint64_t v41 = (void *)objc_claimAutoreleasedReturnValue(-[SQLiteEntity valueForProperty:](v8, "valueForProperty:", @"ROWID"));
            id v42 = [v41 longLongValue];

            id v92 = @"bundle_id";
            uint64_t v43 = (void *)objc_claimAutoreleasedReturnValue( +[NSArray arrayWithObjects:count:]( &OBJC_CLASS___NSArray,  "arrayWithObjects:count:",  &v92,  1LL));
            uint64_t v44 = (void *)objc_claimAutoreleasedReturnValue([a1 connection]);
            id v45 = sub_1002FD3C8((uint64_t)&OBJC_CLASS___AppInstallPredicates);
            id v46 = (void *)objc_claimAutoreleasedReturnValue(v45);
            id v47 = sub_10024C1D0((uint64_t)&OBJC_CLASS___AppInstallEntity, v44, v46);
            id v48 = (void *)objc_claimAutoreleasedReturnValue(v47);

            v89[0] = _NSConcreteStackBlock;
            v89[1] = 3221225472LL;
            v89[2] = sub_1001B3E7C;
            v89[3] = &unk_1003EACC0;
            v89[4] = buf;
            v89[5] = v42;
            [v48 enumeratePersistentIDsAndProperties:v43 usingBlock:v89];
            if (!*(_BYTE *)(*(void *)&buf[8] + 24LL) && v88) {
              v88[136] = 1;
            }

            _Block_object_dispose(buf, 8);
          }

          else if (+[UpdatesManager isTVProviderApp:]( &OBJC_CLASS___UpdatesManager,  "isTVProviderApp:",  sub_1001E2698(v8, (uint64_t)@"item_id")))
          {
            __int128 v86 = (void *)objc_claimAutoreleasedReturnValue(-[SQLiteEntity valueForProperty:](v8, "valueForProperty:", @"bundle_id"));
            sub_1001EB250((uint64_t)v88, v86, a3 == (NSError *)-40LL);
          }
        }

        else
        {
          if (sub_1001E2698(v8, (uint64_t)@"update_type") == (id)1)
          {
            *(void *)__int128 buf = 0LL;
            *(void *)&buf[8] = buf;
            *(void *)&uint8_t buf[16] = 0x2020000000LL;
            LOBYTE(v96) = 0;
            __int16 v29 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"update_type",  &off_10040C0B8));
            v94[0] = v29;
            id v30 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:value:comparisonType:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:value:comparisonType:",  @"IFNULL(app_install.phase, 10)",  &off_10040C0D0,  5LL));
            v94[1] = v30;
            __int16 v31 = (void *)objc_claimAutoreleasedReturnValue( +[NSArray arrayWithObjects:count:]( &OBJC_CLASS___NSArray,  "arrayWithObjects:count:",  v94,  2LL));
            char v32 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v31));

            __int16 v33 = (void *)objc_claimAutoreleasedReturnValue(-[SQLiteEntity valueForProperty:](v8, "valueForProperty:", @"ROWID"));
            id v87 = [v33 longLongValue];

            uint64_t v93 = @"bundle_id";
            __int16 v34 = (void *)objc_claimAutoreleasedReturnValue( +[NSArray arrayWithObjects:count:]( &OBJC_CLASS___NSArray,  "arrayWithObjects:count:",  &v93,  1LL));
            id v35 = (void *)objc_claimAutoreleasedReturnValue([a1 connection]);
            id v36 = sub_10024C1D0((uint64_t)&OBJC_CLASS___AppInstallEntity, v35, v32);
            id v37 = (void *)objc_claimAutoreleasedReturnValue(v36);

            v90[0] = _NSConcreteStackBlock;
            v90[1] = 3221225472LL;
            v90[2] = sub_1001B3E58;
            v90[3] = &unk_1003EACC0;
            v90[4] = buf;
            v90[5] = v87;
            [v37 enumeratePersistentIDsAndProperties:v34 usingBlock:v90];
            if (!*(_BYTE *)(*(void *)&buf[8] + 24LL) && v88) {
              v88[140] = 1;
            }

            _Block_object_dispose(buf, 8);
          }

          id v49 = sub_10021B984(v8);
          id v50 = (void *)objc_claimAutoreleasedReturnValue(v49);
          uint64_t v51 = (void *)objc_claimAutoreleasedReturnValue([v50 valueForProperty:@"package_type"]);
          id v52 = [v51 integerValue];

          id v53 = sub_10021B6D0(v8);
          uint64_t v54 = (void *)objc_claimAutoreleasedReturnValue(v53);
          sub_1001EB330((uint64_t)v88, v54, (uint64_t)v52);

          SEL v55 = (void *)objc_claimAutoreleasedReturnValue(-[SQLiteEntity valueForProperty:](v8, "valueForProperty:", @"bundle_id"));
          sub_1001EB250((uint64_t)v88, v55, a3 == (NSError *)-40LL);
        }
      }

      if (v88)
      {
        id Property = objc_getProperty(a1, v26, 24LL, 1);
        sub_1001EB714((uint64_t)Property, v88);
      }

      uint64_t v57 = (void *)objc_claimAutoreleasedReturnValue(-[SQLiteEntity valueForProperty:](v8, "valueForProperty:", @"source_type"));
      BOOL v58 = [v57 integerValue] == (id)2;

      if (v58)
      {
        id v59 = sub_100296DB0(v8, (uint64_t)@"failure_error");
        id v60 = (void *)objc_claimAutoreleasedReturnValue(v59);
        uint64_t v61 = objc_alloc(&OBJC_CLASS___ASDBundle);
        id v62 = sub_10021B6D0(v8);
        id v63 = (void *)objc_claimAutoreleasedReturnValue(v62);
        uint64_t v64 = -[ASDBundle initWithIdentifier:](v61, "initWithIdentifier:", v63);

        if (v64)
        {
          id v65 = objc_opt_new(&OBJC_CLASS___TaskQueue);
          p_isa = (id *)&v65->super.isa;
          if (v65) {
            -[NSOperationQueue setName:]( v65->_operationQueue,  "setName:",  @"com.apple.AppInstallsDatabaseTransaction.NotifyTestFlightClientTaskQueue");
          }
          id v67 = sub_1002C9750((uint64_t)&OBJC_CLASS___NotifyTestFlightClientTask, a3, v64, v60);
          id v68 = (void *)objc_claimAutoreleasedReturnValue(v67);
          if (p_isa) {
            [p_isa[1] addOperation:v68];
          }
        }
      }

      id v69 = sub_100296DB0(v8, (uint64_t)@"failure_error");
      uint64_t v70 = objc_claimAutoreleasedReturnValue(v69);
      __int128 v71 = (void *)v70;
      if (a3 == (NSError *)-30LL && !v70)
      {
        uint64_t v72 = ASDErrorWithTitleAndMessage(ASDErrorDomain, 908LL, @"Canceled", 0LL);
        __int128 v71 = (void *)objc_claimAutoreleasedReturnValue(v72);
      }

      if (v71)
      {
        id v73 = sub_1001B2C20(v8, v71);
        __int128 v74 = (void *)objc_claimAutoreleasedReturnValue(v73);
        if (v74)
        {
          uint64_t v75 = ASDLogHandleForCategory(2LL);
          uint64_t v76 = (os_log_s *)objc_claimAutoreleasedReturnValue(v75);
          if (os_log_type_enabled(v76, OS_LOG_TYPE_DEFAULT))
          {
            id v77 = sub_10021B614(v8);
            unsigned int v78 = (void *)objc_claimAutoreleasedReturnValue(v77);
            *(_DWORD *)__int128 buf = 138412546;
            *(void *)&uint8_t buf[4] = v78;
            *(_WORD *)&buf[12] = 2114;
            *(void *)&buf[14] = v71;
            _os_log_impl( (void *)&_mh_execute_header,  v76,  OS_LOG_TYPE_DEFAULT,  "[%@] Notifying clients of the completed with error: %{public}@",  buf,  0x16u);
          }

          __int128 v91 = v74;
          id v79 = (void *)objc_claimAutoreleasedReturnValue( +[NSArray arrayWithObjects:count:]( &OBJC_CLASS___NSArray,  "arrayWithObjects:count:",  &v91,  1LL));
          id v80 = sub_1002253D8((uint64_t)&OBJC_CLASS___ASDNotification, v79);
          __int16 v81 = (void *)objc_claimAutoreleasedReturnValue(v80);

          id v82 = sub_1002E78A4((uint64_t)&OBJC_CLASS___XPCNotificationCenter);
          id v83 = (void *)objc_claimAutoreleasedReturnValue(v82);
          sub_1002E79EC((uint64_t)v83, v81);
        }
      }

      -[AppInstallEntity deleteFromDatabase](v8, "deleteFromDatabase");
    }

    else
    {
      uint64_t v38 = ASDLogHandleForCategory(2LL);
      BOOL v11 = (void *)objc_claimAutoreleasedReturnValue(v38);
      if (os_log_type_enabled((os_log_t)v11, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)__int128 buf = 134217984;
        *(void *)&uint8_t buf[4] = a2;
      }
    }

    __int128 v85 = objc_getProperty(a1, v84, 24LL, 1);
    if (v85) {
      v85[16] |= 0x10uLL;
    }
  }

void sub_1001B3E20(_Unwind_Exception *a1)
{
}

uint64_t sub_1001B3E58(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _BYTE *a5)
{
  if (*(void *)(result + 40) != a2)
  {
    *(_BYTE *)(*(void *)(*(void *)(result + 32) + 8LL) + 24LL) = 1;
    *a5 = 1;
  }

  return result;
}

uint64_t sub_1001B3E7C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _BYTE *a5)
{
  if (*(void *)(result + 40) != a2)
  {
    *(_BYTE *)(*(void *)(*(void *)(result + 32) + 8LL) + 24LL) = 1;
    *a5 = 1;
  }

  return result;
}

void sub_1001B3EA0(void *a1@<X0>, void *a2@<X1>, int a3@<W2>, void *a4@<X3>, _OWORD *a5@<X8>)
{
  uint64_t v9 = a2;
  id v10 = v9;
  if (!a1)
  {
    *a5 = 0u;
    a5[1] = 0u;
    goto LABEL_40;
  }

  BOOL v11 = sub_100323C54(v9);
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
  id v13 = sub_1001E2698(v10, (uint64_t)@"source_type");
  id v14 = sub_1001E26D0(v10, (uint64_t)@"bundle_id");
  id v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
  id v16 = sub_1001E25D0(v10, (uint64_t)@"item_id");
  uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
  id v18 = sub_1002FE280((uint64_t)&OBJC_CLASS___AppInstallPredicates, (uint64_t)v13, v15, v17, a4);
  id v19 = (void *)objc_claimAutoreleasedReturnValue(v18);
  if (v19)
  {
    id v83 = a5;
    SEL v84 = v15;
    id v20 = (void *)objc_claimAutoreleasedReturnValue([a1 connection]);
    id v82 = v19;
    id v21 = sub_10024C088((uint64_t)&OBJC_CLASS___AppInstallEntity, v20, v19);
    id v22 = (AppInstallEntity *)objc_claimAutoreleasedReturnValue(v21);

    if (v22)
    {
      id v23 = sub_1001E25D0(v22, (uint64_t)@"order_index");
      __int128 v24 = (void *)objc_claimAutoreleasedReturnValue(v23);
      uint64_t v25 = objc_claimAutoreleasedReturnValue([v24 stringValue]);
      __int128 v26 = (void *)v25;
      uint64_t v27 = @"none";
      if (v25) {
        uint64_t v27 = (__CFString *)v25;
      }
      BOOL v28 = v27;

      id v29 = [v10 databaseID];
      id v30 = -[SQLiteEntity persistentID](v22, "persistentID");
      id v31 = sub_1001E2734(v22, (uint64_t)@"coordinator_id");
      char v32 = (void *)objc_claimAutoreleasedReturnValue(v31);
      uint64_t v33 = ASDLogHandleForCategory(2LL);
      __int16 v34 = (os_log_s *)objc_claimAutoreleasedReturnValue(v33);
      BOOL v35 = os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT);
      if (v29 != v30)
      {
        if (v35)
        {
          int64_t v50 = -[SQLiteEntity persistentID](v22, "persistentID");
          id v51 = sub_10021B73C(v22);
          id v52 = sub_1002C9300((uint64_t)v51);
          id v53 = (void *)objc_claimAutoreleasedReturnValue(v52);
          *(_DWORD *)__int128 buf = 138413314;
          *(void *)&uint8_t buf[4] = v12;
          *(_WORD *)&buf[12] = 2048;
          *(void *)&buf[14] = v50;
          __int16 v86 = 2114;
          id v87 = v28;
          __int16 v88 = 2114;
          uint64_t v89 = v53;
          __int16 v90 = 2114;
          __int128 v91 = v32;
          _os_log_impl( (void *)&_mh_execute_header,  v34,  OS_LOG_TYPE_DEFAULT,  "[%@] Skipping duplicate install (pid = '%lld', uint64_t order = '%{public}@', phase = '%{public}@' coordinatorID = '%{public}@')",  buf,  0x34u);
        }

        id v54 = sub_1001E2734(v22, (uint64_t)@"external_id");
        SEL v55 = (void *)objc_claimAutoreleasedReturnValue(v54);
        [v55 getUUIDBytes:(char *)v83 + 8];
        *((void *)v83 + 3) = 2LL;
        *(void *)id v83 = -[SQLiteEntity persistentID](v22, "persistentID");

        id v15 = v84;
        goto LABEL_38;
      }

      if (v35)
      {
        int64_t v36 = -[SQLiteEntity persistentID](v22, "persistentID");
        id v37 = sub_10021B73C(v22);
        uint64_t v38 = sub_1002C9300((uint64_t)v37);
        id v39 = (void *)objc_claimAutoreleasedReturnValue(v38);
        *(_DWORD *)__int128 buf = 138413314;
        *(void *)&uint8_t buf[4] = v12;
        *(_WORD *)&buf[12] = 2048;
        *(void *)&buf[14] = v36;
        __int16 v86 = 2114;
        id v87 = v28;
        __int16 v88 = 2114;
        uint64_t v89 = v39;
        __int16 v90 = 2114;
        __int128 v91 = v32;
        _os_log_impl( (void *)&_mh_execute_header,  v34,  OS_LOG_TYPE_DEFAULT,  "[%@] Refreshing existing installation (pid = '%lld', uint64_t order = '%{public}@', phase = '%{public}@', coordinatorID = '%{public}@')",  buf,  0x34u);
      }

      BOOL v40 = (void *)objc_claimAutoreleasedReturnValue([v10 propertyValues]);
      -[SQLiteEntity setValuesWithDictionary:](v22, "setValuesWithDictionary:", v40);
    }

    else
    {
      id v41 = sub_1001E25D0(v10, (uint64_t)@"order_index");
      id v42 = (void *)objc_claimAutoreleasedReturnValue(v41);
      uint64_t v43 = objc_claimAutoreleasedReturnValue([v42 stringValue]);
      uint64_t v44 = (void *)v43;
      id v45 = @"none";
      if (v43) {
        id v45 = (__CFString *)v43;
      }
      id v46 = v45;

      uint64_t v47 = ASDLogHandleForCategory(2LL);
      id v48 = (os_log_s *)objc_claimAutoreleasedReturnValue(v47);
      if (os_log_type_enabled(v48, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)__int128 buf = 138412546;
        *(void *)&uint8_t buf[4] = v12;
        *(_WORD *)&buf[12] = 2114;
        *(void *)&buf[14] = v46;
        _os_log_impl( (void *)&_mh_execute_header,  v48,  OS_LOG_TYPE_DEFAULT,  "[%@] Importing new installation (uint64_t order = '%{public}@')",  buf,  0x16u);
      }

      if (a3)
      {
        id v15 = v84;
        if (a4)
        {
          uint64_t v49 = ASDErrorWithUserInfoAndFormat(810LL, 0LL, @"Install did not exist");
          *a4 = (id)objc_claimAutoreleasedReturnValue(v49);
        }

        *id v83 = 0u;
        v83[1] = 0u;
        goto LABEL_38;
      }

      uint64_t v56 = objc_alloc(&OBJC_CLASS___AppInstallEntity);
      BOOL v40 = (void *)objc_claimAutoreleasedReturnValue([v10 propertyValues]);
      uint64_t v57 = (void *)objc_claimAutoreleasedReturnValue([a1 connection]);
      id v22 = -[SQLiteEntity initWithPropertyValues:onConnection:](v56, "initWithPropertyValues:onConnection:", v40, v57);
    }

    if (v10) {
      id Property = objc_getProperty(v10, v58, 40LL, 1);
    }
    else {
      id Property = 0LL;
    }
    id v60 = Property;
    uint64_t v61 = v60;
    if (v60) {
      id v62 = v60;
    }
    else {
      id v62 = &__NSArray0__struct;
    }
    sub_10021C9B0(v22, v62);

    id v63 = sub_10021B7AC(v22);
    uint64_t v64 = (id *)objc_claimAutoreleasedReturnValue(v63);
    id v65 = v64;
    if (v64 && sub_1002E6090(v64) == (id *)2)
    {
      uint64_t v66 = ASDLogHandleForCategory(2LL);
      id v67 = (os_log_s *)objc_claimAutoreleasedReturnValue(v66);
      if (os_log_type_enabled(v67, OS_LOG_TYPE_DEFAULT))
      {
        id v68 = sub_10021B614(v22);
        id v69 = (void *)objc_claimAutoreleasedReturnValue(v68);
        *(_DWORD *)__int128 buf = 138412290;
        *(void *)&uint8_t buf[4] = v69;
        _os_log_impl( (void *)&_mh_execute_header,  v67,  OS_LOG_TYPE_DEFAULT,  "[%@] Explicitly denied for low data network - canceling installation",  buf,  0xCu);
      }

      id v71 = objc_getProperty(a1, v70, 24LL, 1);
      uint64_t v72 = sub_10021C40C(v22, -30LL);
      id v73 = (void *)objc_claimAutoreleasedReturnValue(v72);
      sub_1001EB714((uint64_t)v71, v73);
    }

    id v74 = sub_1001E2734(v22, (uint64_t)@"external_id");
    uint64_t v76 = (void *)objc_claimAutoreleasedReturnValue(v74);
    if (v76)
    {
      id v77 = objc_getProperty(a1, v75, 24LL, 1);
      v92[0] = @"kind";
      v92[1] = @"identifier";
      *(void *)__int128 buf = @"import";
      *(void *)&buf[8] = v76;
      id v78 = v76;
      id v79 = v77;
      id v80 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  buf,  v92,  2LL));

      sub_1001EB500((uint64_t)v79, v80);
    }

    else
    {
      uint64_t v81 = ASDLogHandleForCategory(2LL);
      id v80 = (void *)objc_claimAutoreleasedReturnValue(v81);
      if (os_log_type_enabled((os_log_t)v80, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)__int128 buf = 0;
        _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)v80,  OS_LOG_TYPE_ERROR,  "Skipping legacy import notification because we don't have an identifier.",  buf,  2u);
      }
    }

    id v15 = v84;

    [v76 getUUIDBytes:(char *)v83 + 8];
    *((void *)v83 + 3) = 1LL;
    *(void *)id v83 = -[SQLiteEntity persistentID](v22, "persistentID");

LABEL_38:
    id v19 = v82;
    goto LABEL_39;
  }

  *a5 = 0u;
  a5[1] = 0u;
LABEL_39:

LABEL_40:
}

id sub_1001B4590(void *a1, void *a2)
{
  id v3 = a2;
  id v18 = v3;
  if (a1)
  {
    id v4 = v3;
    id v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
    __int128 v20 = 0u;
    __int128 v21 = 0u;
    __int128 v22 = 0u;
    __int128 v23 = 0u;
    id v6 = v4;
    id v7 = [v6 countByEnumeratingWithState:&v20 objects:v25 count:16];
    if (v7)
    {
      id v8 = v7;
      uint64_t v9 = *(void *)v21;
      do
      {
        id v10 = 0LL;
        do
        {
          if (*(void *)v21 != v9) {
            objc_enumerationMutation(v6);
          }
          BOOL v11 = *(id *)(*((void *)&v20 + 1) + 8LL * (void)v10);
          id v24 = 0LL;
          sub_1001B3EA0(a1, v11, 0, &v24, &v30);
          id v12 = v24;
          if (v31)
          {
            id v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", (void)v30));
          }

          else
          {
            uint64_t v14 = ASDLogHandleForCategory(2LL);
            id v15 = (os_log_s *)objc_claimAutoreleasedReturnValue(v14);
            if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
            {
              id v16 = sub_100323C54(v11);
              id v19 = (void *)objc_claimAutoreleasedReturnValue(v16);
              *(_DWORD *)__int128 buf = 138412546;
              uint64_t v27 = v19;
              __int16 v28 = 2114;
              id v29 = v12;
              _os_log_error_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_ERROR,  "[%@] Import failed silently with error: %{public}@",  buf,  0x16u);
            }

            id v13 = 0LL;
          }

          if (v13) {
            [v5 addObject:v13];
          }

          id v10 = (char *)v10 + 1;
        }

        while (v8 != v10);
        id v8 = [v6 countByEnumeratingWithState:&v20 objects:v25 count:16];
      }

      while (v8);
    }
  }

  else
  {
    id v5 = 0LL;
  }

  return v5;
}

void sub_1001B47BC(id *a1, void *a2, uint64_t a3, unint64_t a4)
{
  if (a1)
  {
    id v8 = objc_alloc(&OBJC_CLASS___AppInstallEntity);
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([a1 connection]);
    id v10 = -[SQLiteEntity initWithPersistentID:onConnection:](v8, "initWithPersistentID:onConnection:", a2, v9);

    if (-[SQLiteEntity existsInDatabase](v10, "existsInDatabase"))
    {
      BOOL v11 = (char *)sub_1001E2698(v10, (uint64_t)@"IFNULL(app_install.phase, 10)");
      if (v11 == (char *)-10LL || v11 + 15 == 0LL)
      {
        uint64_t v13 = (uint64_t)v11;
        uint64_t v14 = ASDLogHandleForCategory(2LL);
        id WeakRetained = (os_log_s *)objc_claimAutoreleasedReturnValue(v14);
        if (os_log_type_enabled(WeakRetained, OS_LOG_TYPE_DEFAULT))
        {
          id v16 = sub_10021B614(v10);
          uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
          id v18 = sub_1002C9300(v13);
          id v19 = (void *)objc_claimAutoreleasedReturnValue(v18);
          __int128 v20 = sub_1002C9440(a4);
          __int128 v21 = (void *)objc_claimAutoreleasedReturnValue(v20);
          int v39 = 138412802;
          BOOL v40 = v17;
          __int16 v41 = 2114;
          id v42 = v19;
          __int16 v43 = 2114;
          uint64_t v44 = v21;
          _os_log_impl( (void *)&_mh_execute_header,  WeakRetained,  OS_LOG_TYPE_DEFAULT,  "[%@] Already paused with phase: %{public}@, ignoring request for reason: %{public}@",  (uint8_t *)&v39,  0x20u);
        }
      }

      else
      {
        uint64_t v23 = ASDLogHandleForCategory(2LL);
        id v24 = (os_log_s *)objc_claimAutoreleasedReturnValue(v23);
        if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
        {
          __int128 v26 = sub_10021B614(v10);
          uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue(v26);
          __int16 v28 = sub_1002C9300(a3);
          id v29 = (void *)objc_claimAutoreleasedReturnValue(v28);
          __int128 v30 = sub_1002C9440(a4);
          uint64_t v31 = (void *)objc_claimAutoreleasedReturnValue(v30);
          int v39 = 138412802;
          BOOL v40 = v27;
          __int16 v41 = 2114;
          id v42 = v29;
          __int16 v43 = 2114;
          uint64_t v44 = v31;
          _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEFAULT,  "[%@] Pausing with phase: %{public}@ for reason: %{public}@",  (uint8_t *)&v39,  0x20u);
        }

        id v32 = sub_1002B0944((uint64_t)&OBJC_CLASS___ProgressCache);
        uint64_t v33 = (void *)objc_claimAutoreleasedReturnValue(v32);
        id v34 = sub_10021B6D0(v10);
        BOOL v35 = (void *)objc_claimAutoreleasedReturnValue(v34);
        sub_1002B1228((uint64_t)v33, v35);

        int64_t v36 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", a3));
        -[SQLiteEntity setValue:forProperty:](v10, "setValue:forProperty:", v36, @"phase");

        if (a4 == 2) {
          -[SQLiteEntity setValue:forProperty:](v10, "setValue:forProperty:", 0LL, @"last_start_date");
        }
        id WeakRetained = (os_log_s *)objc_loadWeakRetained(a1 + 2);
        -[os_log_s stopInstallID:withReason:transaction:]( WeakRetained,  "stopInstallID:withReason:transaction:",  a2,  1LL,  a1);
      }
    }

    else
    {
      uint64_t v22 = ASDLogHandleForCategory(2LL);
      id WeakRetained = (os_log_s *)objc_claimAutoreleasedReturnValue(v22);
      if (os_log_type_enabled(WeakRetained, OS_LOG_TYPE_ERROR))
      {
        int v39 = 134217984;
        BOOL v40 = a2;
      }
    }

    if (a4 != 1)
    {
      id Property = objc_getProperty(a1, v37, 24LL, 1);
      if (Property) {
        Property[16] |= 0x400uLL;
      }
    }
  }

void sub_1001B4B10(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 16));
    [WeakRetained startPostProcessingForID:a2 transaction:a1];
  }

void sub_1001B4B5C(void *a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    id v6 = objc_alloc(&OBJC_CLASS___AppInstallEntity);
    id v7 = (void *)objc_claimAutoreleasedReturnValue([a1 connection]);
    id v8 = -[SQLiteEntity initWithPersistentID:onConnection:](v6, "initWithPersistentID:onConnection:", a3, v7);

    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", a2));
    -[SQLiteEntity setValue:forProperty:](v8, "setValue:forProperty:", v9, @"phase");

    id v10 = sub_1001E2734(v8, (uint64_t)@"external_id");
    uint64_t v11 = objc_claimAutoreleasedReturnValue(v10);
    id v12 = (void *)v11;
    if (v11)
    {
      uint64_t v13 = a1[3];
      v17[0] = @"kind";
      v17[1] = @"identifier";
      *(void *)__int128 buf = @"state";
      uint64_t v19 = v11;
      v17[2] = @"phase";
      uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", a2));
      __int128 v20 = v14;
      id v15 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  buf,  v17,  3LL));

      sub_1001EB500(v13, v15);
    }

    else
    {
      uint64_t v16 = ASDLogHandleForCategory(2LL);
      id v15 = (void *)objc_claimAutoreleasedReturnValue(v16);
      if (os_log_type_enabled((os_log_t)v15, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)__int128 buf = 0;
        _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)v15,  OS_LOG_TYPE_ERROR,  "Skipping legacy state notification because we don't have an identifier.",  buf,  2u);
      }
    }
  }

void sub_1001B4D24(void *a1, void *a2)
{
  if (a1)
  {
    id v4 = objc_alloc(&OBJC_CLASS___AppInstallEntity);
    id v5 = (void *)objc_claimAutoreleasedReturnValue([a1 connection]);
    id v6 = -[SQLiteEntity initWithPersistentID:onConnection:](v4, "initWithPersistentID:onConnection:", a2, v5);

    unsigned int v7 = -[SQLiteEntity existsInDatabase](v6, "existsInDatabase");
    uint64_t v8 = ASDLogHandleForCategory(2LL);
    uint64_t v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
    id v10 = v9;
    if (v7)
    {
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v11 = sub_10021B614(v6);
        id v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
        int v19 = 138412290;
        __int128 v20 = v12;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "[%@] Resuming installation",  (uint8_t *)&v19,  0xCu);
      }

      id v13 = sub_1002B0944((uint64_t)&OBJC_CLASS___ProgressCache);
      uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
      id v15 = sub_10021B6D0(v6);
      uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
      sub_1002B15C0((uint64_t)v14, v16);

      -[SQLiteEntity setValue:forProperty:](v6, "setValue:forProperty:", &off_10040C0A0, @"phase");
      id Property = objc_getProperty(a1, v17, 24LL, 1);
      if (Property) {
        Property[16] |= 0x10000uLL;
      }
    }

    else
    {
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      {
        int v19 = 134217984;
        __int128 v20 = a2;
      }
    }
  }

id sub_1001B4F00(void *a1, void *a2)
{
  id v3 = a2;
  id v18 = v3;
  if (a1)
  {
    id v4 = v3;
    id v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
    __int128 v20 = 0u;
    __int128 v21 = 0u;
    __int128 v22 = 0u;
    __int128 v23 = 0u;
    id v6 = v4;
    id v7 = [v6 countByEnumeratingWithState:&v20 objects:v30 count:16];
    if (v7)
    {
      id v8 = v7;
      uint64_t v9 = *(void *)v21;
      do
      {
        id v10 = 0LL;
        do
        {
          if (*(void *)v21 != v9) {
            objc_enumerationMutation(v6);
          }
          uint64_t v11 = *(void **)(*((void *)&v20 + 1) + 8LL * (void)v10);
          id v19 = 0LL;
          sub_1001B3EA0(a1, v11, 1, &v19, &v28);
          id v12 = v19;
          if (v29)
          {
            id v13 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithLongLong:]( &OBJC_CLASS___NSNumber,  "numberWithLongLong:",  (void)v28));
            [v5 addObject:v13];
          }

          else
          {
            uint64_t v14 = ASDLogHandleForCategory(2LL);
            id v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v14);
            if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
            {
              id v15 = sub_100323C54(v11);
              uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
              *(_DWORD *)__int128 buf = 138412546;
              uint64_t v25 = v16;
              __int16 v26 = 2114;
              id v27 = v12;
              _os_log_error_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_ERROR,  "[%@] Update failed silently with error: %{public}@",  buf,  0x16u);
            }
          }

          id v10 = (char *)v10 + 1;
        }

        while (v8 != v10);
        id v8 = [v6 countByEnumeratingWithState:&v20 objects:v30 count:16];
      }

      while (v8);
    }
  }

  else
  {
    id v5 = 0LL;
  }

  return v5;
}

uint64_t sub_1001B510C(uint64_t a1, uint64_t a2)
{
  if (!a1) {
    return 0LL;
  }
  id v4 = objc_alloc(&OBJC_CLASS___AppInstallEntity);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([(id)a1 connection]);
  id v6 = -[SQLiteEntity initWithPersistentID:onConnection:](v4, "initWithPersistentID:onConnection:", a2, v5);

  sub_10021B8B8(v6, 0LL);
  id v7 = sub_1002E5EDC((uint64_t)&OBJC_CLASS___AppInstallPolicy);
  id v8 = (id *)objc_claimAutoreleasedReturnValue(v7);
  sub_10021B828(v6, v8);

  -[SQLiteEntity setValue:forProperty:](v6, "setValue:forProperty:", &__kCFBooleanTrue, @"approved");
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSNull null](&OBJC_CLASS___NSNull, "null"));
  -[SQLiteEntity setValue:forProperty:](v6, "setValue:forProperty:", v9, @"optimal_download_start");

  -[SQLiteEntity setValue:forProperty:](v6, "setValue:forProperty:", &off_10040C0E8, @"recovery_count");
  uint64_t v10 = (uint64_t)sub_10021B73C(v6);
  if ((unint64_t)(v10 + 40) <= 0x14 && ((1LL << (v10 + 40)) & 0x100401) != 0 || v10 > 39)
  {
    uint64_t v11 = 0LL;
  }

  else
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 16));
    uint64_t v11 = 1LL;
    [WeakRetained stopInstallID:a2 withReason:1 transaction:a1];

    sub_10021B750(v6, 10LL);
    uint64_t v14 = *(void *)(a1 + 24);
    if (v14)
    {
      *(void *)(v14 + 128) |= 0x80000uLL;
      uint64_t v11 = 1LL;
    }
  }

  return v11;
}

void sub_1001B52D0(void *a1, void *a2, uint64_t a3)
{
  if (a1)
  {
    id v5 = a2;
    id v6 = objc_alloc(&OBJC_CLASS___AppInstallEntity);
    id v7 = (void *)objc_claimAutoreleasedReturnValue([a1 connection]);
    id v12 = -[SQLiteEntity initWithPersistentID:onConnection:](v6, "initWithPersistentID:onConnection:", a3, v7);

    id v8 = (void *)objc_claimAutoreleasedReturnValue([v5 uniqueIdentifier]);
    -[SQLiteEntity setValue:forProperty:](v12, "setValue:forProperty:", v8, @"coordinator_id");

    uint64_t v10 = sub_1001E4C1C((uint64_t)v5, v9);
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInteger:", v10));
    -[SQLiteEntity setValue:forProperty:](v12, "setValue:forProperty:", v11, @"coordinator_intent");
  }

id sub_1001B53D0(uint64_t a1)
{
  if (qword_1004621A0 != -1) {
    dispatch_once(&qword_1004621A0, &stru_1003EACE0);
  }
  return (id)qword_1004621A8;
}

void sub_1001B5414(id a1)
{
  uint64_t v1 = objc_alloc(&OBJC_CLASS___ODRDatabaseStore);
  id v2 = sub_100185934((uint64_t)&OBJC_CLASS___Environment);
  id v7 = (os_unfair_lock_s *)objc_claimAutoreleasedReturnValue(v2);
  id v3 = sub_1001859DC(v7);
  id v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  id v5 = -[SQLiteDatabaseStore initWithDatabase:](v1, "initWithDatabase:", v4);
  id v6 = (void *)qword_1004621A8;
  qword_1004621A8 = (uint64_t)v5;
}

void sub_1001B5514(id a1, int64_t a2, int64_t *a3, id *a4)
{
  switch(a2)
  {
    case 13000LL:
      id v4 = &stru_1003EAD88;
      int64_t v5 = 13001LL;
      goto LABEL_10;
    case 13001LL:
      id v4 = &stru_1003EADA8;
      int64_t v5 = 13002LL;
      goto LABEL_10;
    case 13002LL:
      id v4 = &stru_1003EADC8;
      int64_t v5 = 13003LL;
      goto LABEL_10;
    case 13003LL:
      id v4 = &stru_1003EADE8;
      int64_t v5 = 13004LL;
      goto LABEL_10;
    case 13004LL:
      id v4 = &stru_1003EAE08;
      goto LABEL_9;
    default:
      if (a2) {
        return;
      }
      id v4 = &stru_1003EAD68;
LABEL_9:
      int64_t v5 = 14000LL;
LABEL_10:
      *a3 = v5;
      id v6 = *a4;
      *a4 = v4;

      return;
  }

uint64_t sub_1001B563C(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
  if ((_DWORD)v4) {
    sub_1003229A0((uint64_t)v3);
  }

  return v4;
}

void sub_1001B5688(id a1, SQLiteDatabaseStoreMigrator *a2)
{
  id v2 = a2;
  if (v2)
  {
    sub_1002E981C( (uint64_t)v2,  @"CREATE TABLE IF NOT EXISTS odr_asset_download (pid INTEGER, bundle_id TEXT, bundle_key TEXT, coordinator_id UUID, download_size INTEGER, is_paused INTEGER, source_url TEXT, type INTEGER, unique_key TEXT, PRIMARY KEY(pid), UNIQUE (unique_key) ON CONFLICT REPLACE);",
      1,
      0LL);
    sub_1002E981C( (uint64_t)v2,  @"CREATE TABLE IF NOT EXISTS odr_asset_pack (pid INTEGER, bundle_key TEXT, bundle_id TEXT, chunk_size INTEGER, download_identifier INTEGER DEFAULT 0, download_priority REAL, download_request_uuids JSON, effective_always_preserve INTEGER DEFAULT 0, effective_preservation_priority INTEGER DEFAULT 0, hash_array JSON, known_content_hashes JSON, file_size INTEGER, last_used_date DATETIME, local_url TEXT, manifest_id INTEGER, md5 TEXT, pin_count INTEGER DEFAULT 0, primary_content_hash JSON, purgeable INTEGER DEFAULT 1, purge_reason INTEGER, sha TEXT, streamable INTEGER DEFAULT 0, source_url TEXT, timestamp DATETIME DEFAULT (timestamp()), uncompressed_size INTEGER, PRIMARY KEY(pid), UNIQUE (bundle_key) ON CONFLICT REPLACE);",
      1,
      0LL);
    sub_1002E981C( (uint64_t)v2,  @"CREATE INDEX IF NOT EXISTS odr_asset_pack_bundle_key ON odr_asset_pack(bundle_key);",
      1,
      0LL);
    sub_1002E981C( (uint64_t)v2,  @"CREATE TABLE IF NOT EXISTS odr_manifest (pid INTEGER, bundle_id TEXT, evid INTEGER, is_store_based INTEGER, item_id TEXT, last_modification_date DATETIME DEFAULT (timestamp()), local_cache_allowed INTEGER, thinning_variant TEXT, storage_id TEXT, version TEXT, PRIMARY KEY(pid), UNIQUE(item_id) ON CONFLICT REPLACE);",
      1,
      0LL);
    sub_1002E981C( (uint64_t)v2,  @"CREATE TABLE IF NOT EXISTS odr_tag (pid INTEGER, always_preserved INTEGER DEFAULT 0, bundle_id TEXT, bundle_key TEXT, name TEXT, preservation_priority REAL DEFAULT 0, timestamp DATETIME DEFAULT (timestamp()), PRIMARY KEY(pid)); ",
      1,
      0LL);
  }
}

void sub_1001B5728(id a1, SQLiteDatabaseStoreMigrator *a2)
{
  if (a2) {
    sub_1002E981C( (uint64_t)a2,  @"CREATE TABLE IF NOT EXISTS odr_asset_download (pid INTEGER, bundle_id TEXT, bundle_key TEXT, coordinator_id UUID, download_size INTEGER, is_paused INTEGER, source_url TEXT, type INTEGER, unique_key TEXT, PRIMARY KEY(pid), UNIQUE (unique_key) ON CONFLICT REPLACE);",
  }
      1,
      0LL);
}

void sub_1001B574C(id a1, SQLiteDatabaseStoreMigrator *a2)
{
  id v2 = a2;
  if (v2)
  {
    sub_1002E981C((uint64_t)v2, @"ALTER TABLE odr_asset_download ADD COLUMN coordinator_id UUID;", 1, 0LL);
    sub_1002E981C((uint64_t)v2, @"ALTER TABLE odr_asset_download ADD COLUMN is_paused INTEGER;", 1, 0LL);
    sub_1002E981C((uint64_t)v2, @"ALTER TABLE odr_asset_download ADD COLUMN type INTEGER;", 1, 0LL);
  }
}

void sub_1001B57BC(id a1, SQLiteDatabaseStoreMigrator *a2)
{
  id v2 = a2;
  if (v2)
  {
    sub_1002E981C((uint64_t)v2, @"DROP TABLE odr_work;", 0, 0LL);
    sub_1002E981C((uint64_t)v2, @"DROP TABLE odr_fake_work;", 0, 0LL);
  }
}

void sub_1001B5814(id a1, SQLiteDatabaseStoreMigrator *a2)
{
  id v2 = a2;
  if (v2)
  {
    sub_1002E981C((uint64_t)v2, @"ALTER TABLE odr_asset_download ADD COLUMN download_size INTEGER;", 1, 0LL);
    sub_1002E981C((uint64_t)v2, @"DROP TABLE odr_download;", 0, 0LL);
  }
}

char *sub_1001B5878(char *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    v14.receiver = a1;
    v14.super_class = (Class)&OBJC_CLASS___LZMADecoder;
    a1 = (char *)objc_msgSendSuper2(&v14, "init");
    if (a1)
    {
      uint64_t v4 = os_transaction_create("com.apple.appstored.LZMADecoder");
      int64_t v5 = (void *)*((void *)a1 + 19);
      *((void *)a1 + 19) = v4;

      *((_OWORD *)a1 + 1) = 0u;
      *((void *)a1 + 1_Block_object_dispose((const void *)(v1 - 144), 8) = 0LL;
      *((_OWORD *)a1 + 7) = 0u;
      *((_OWORD *)a1 + _Block_object_dispose((const void *)(v1 - 144), 8) = 0u;
      *((_OWORD *)a1 + 5) = 0u;
      *((_OWORD *)a1 + 6) = 0u;
      *((_OWORD *)a1 + 3) = 0u;
      *((_OWORD *)a1 + 4) = 0u;
      *((_OWORD *)a1 + 2) = 0u;
      lzma_stream_decoder(a1 + 16, -1LL, 0LL);
      id v6 = objc_alloc_init(&OBJC_CLASS___NSMutableData);
      id v7 = (void *)*((void *)a1 + 1);
      *((void *)a1 + 1) = v6;

      if (v3)
      {
        id v8 = sub_100239190(objc_alloc(&OBJC_CLASS___DigestVerifier), v3, 0LL);
        uint64_t v9 = (void *)*((void *)a1 + 20);
        *((void *)a1 + 20) = v8;
      }

      uint64_t v10 = ASDLogHandleForCategory(7LL);
      uint64_t v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)id v13 = 0;
        _os_log_debug_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "(LZMADecoder) Decoder intialized",  v13,  2u);
      }
    }
  }

  return a1;
}

uint64_t sub_1001B5A88(uint64_t result, char *a2, unint64_t a3, uint64_t a4, id *a5, void *a6)
{
  if (result)
  {
    uint64_t v7 = result;
    uint64_t v8 = *(void *)(result + 184);
    if (v8 == 4)
    {
      if (a6)
      {
        id v9 = *(id *)(result + 176);
LABEL_5:
        id v10 = v9;
        uint64_t result = 0LL;
        *a6 = v10;
        return result;
      }

      return 0LL;
    }

    if (a3 && (uint64_t v15 = *(void *)(result + 160)) != 0)
    {
      id v52 = 0LL;
      int v16 = sub_1002395A8(v15, a2, a3, &v52);
      id v17 = v52;
      id v18 = v52;
      id v19 = v18;
      if (!v16)
      {
        objc_storeStrong((id *)(v7 + 176), v17);
        *(void *)(v7 + 184) = 4LL;
        if (a6) {
          *a6 = v19;
        }

        return 0LL;
      }
    }

    else if (!a3)
    {
      goto LABEL_12;
    }

    [*(id *)(v7 + 8) appendBytes:a2 length:a3];
    uint64_t v8 = *(void *)(v7 + 184);
LABEL_12:
    if (!v8)
    {
      int v24 = *(unsigned __int8 *)(v7 + 168);
      uint64_t v25 = ASDLogHandleForCategory(7LL);
      __int16 v26 = (os_log_s *)objc_claimAutoreleasedReturnValue(v25);
      BOOL v27 = os_log_type_enabled(v26, OS_LOG_TYPE_DEBUG);
      if (v24)
      {
        if (v27)
        {
          *(_WORD *)__int128 buf = 0;
          _os_log_debug_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_DEBUG,  "(LZMADecoder) Autodetection disabled, entering running state",  buf,  2u);
        }

        *(void *)(v7 + 184) = 1LL;
        goto LABEL_25;
      }

      if (v27)
      {
        *(_WORD *)__int128 buf = 0;
        _os_log_debug_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_DEBUG,  "(LZMADecoder) Inspecting input bytes",  buf,  2u);
      }

      int v33 = lzma_stream_header_decode(buf, [*(id *)(v7 + 8) bytes]);
      uint64_t v34 = ASDLogHandleForCategory(7LL);
      BOOL v35 = (os_log_s *)objc_claimAutoreleasedReturnValue(v34);
      BOOL v36 = os_log_type_enabled(v35, OS_LOG_TYPE_DEBUG);
      if (v33)
      {
        if (v36)
        {
          *(_DWORD *)id v53 = 67109120;
          int v54 = v33;
          uint64_t v8 = 2LL;
          _os_log_debug_impl( (void *)&_mh_execute_header,  v35,  OS_LOG_TYPE_DEBUG,  "(LZMADecoder) Entering passthrough state (%d)",  v53,  8u);
        }

        else
        {
          uint64_t v8 = 2LL;
        }
      }

      else
      {
        if (v36)
        {
          *(_DWORD *)id v53 = 67109120;
          int v54 = 0;
          _os_log_debug_impl( (void *)&_mh_execute_header,  v35,  OS_LOG_TYPE_DEBUG,  "(LZMADecoder) Entering running state (%d)",  v53,  8u);
        }

        uint64_t v8 = 1LL;
      }

      *(void *)(v7 + 184) = v8;
    }

    if (v8 != 1)
    {
      if (v8 != 2) {
        return 1LL;
      }
      if ([*(id *)(v7 + 8) length])
      {
        __int128 v20 = (char *)*a5;
        __int128 v21 = (char *)[*(id *)(v7 + 8) length];
        if (v20 >= v21) {
          __int128 v20 = v21;
        }
        [*(id *)(v7 + 8) getBytes:a4 length:v20];
        *a5 = v20;
        __int128 v22 = [*(id *)(v7 + 8) length];
        size_t v23 = v22 - v20;
        if (v22 != v20) {
          memmove( [*(id *)(v7 + 8) mutableBytes],  &v20[(void)objc_msgSend(*(id *)(v7 + 8), "bytes")],  v23);
        }
        [*(id *)(v7 + 8) setLength:v23];
      }

      else
      {
        *a5 = 0LL;
      }

      uint64_t v42 = ASDLogHandleForCategory(7LL);
      __int16 v43 = (void *)objc_claimAutoreleasedReturnValue(v42);
      if (!os_log_type_enabled((os_log_t)v43, OS_LOG_TYPE_DEBUG))
      {
LABEL_64:

        return 1LL;
      }

      id v44 = *a5;
      *(_DWORD *)__int128 buf = 134217984;
      id v56 = v44;
      id v45 = "(LZMADecoder) Passthrough for %{iec-bytes}lu bytes";
LABEL_68:
      _os_log_debug_impl((void *)&_mh_execute_header, (os_log_t)v43, OS_LOG_TYPE_DEBUG, v45, buf, 0xCu);
      goto LABEL_64;
    }

uint64_t sub_1001B60DC(uint64_t a1, unsigned int a2)
{
  if (a2 > 8) {
    return 0LL;
  }
  else {
    return qword_10038A7B0[(char)a2];
  }
}

void sub_1001B6140(void *a1, void *a2)
{
  if (a1)
  {
    id v3 = [a2 copy];
    [a1 setValue:v3 forProperty:@"bundle_id"];
  }

void sub_1001B6190(void *a1, uint64_t a2)
{
  if (a1)
  {
    id v3 = (id)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedChar:](&OBJC_CLASS___NSNumber, "numberWithUnsignedChar:", a2));
    [a1 setValue:v3 forProperty:@"event_subtype"];
  }

void sub_1001B61EC(void *a1, uint64_t a2)
{
  if (a1)
  {
    id v3 = (id)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedChar:](&OBJC_CLASS___NSNumber, "numberWithUnsignedChar:", a2));
    [a1 setValue:v3 forProperty:@"event_type"];
  }

void sub_1001B6248(void *a1, uint64_t a2)
{
  if (a1)
  {
    id v3 = (id)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", a2));
    [a1 setValue:v3 forProperty:@"metrics_type"];
  }

void sub_1001B62A4(void *a1, void *a2)
{
  if (a1)
  {
    id v3 = [a2 copy];
    [a1 setValue:v3 forProperty:@"payload"];
  }

void sub_1001B62F4(void *a1, uint64_t a2)
{
  if (a1)
  {
    id v3 = (id)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", a2));
    [a1 setValue:v3 forProperty:@"has_been_posted"];
  }

id *sub_1001B64DC(id *a1, void *a2)
{
  id v4 = a2;
  if (a1)
  {
    int64_t v5 = [a1 init];
    a1 = v5;
    if (v5) {
      objc_storeStrong(v5 + 1, a2);
    }
  }

  return a1;
}

id *sub_1001B6534(id *a1)
{
  uint64_t v1 = a1;
  if (a1)
  {
    id v2 = (void *)objc_claimAutoreleasedReturnValue([a1[1] downloaderDSID]);
    id v3 = v2;
    if (v2) {
      id v4 = v2;
    }
    else {
      id v4 = (id)objc_claimAutoreleasedReturnValue([v1[1] purchaserDSID]);
    }
    int64_t v5 = v4;

    uint64_t v6 = ASDLogHandleForCategory(28LL);
    uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      id Property = objc_getProperty(v1, v8, 32LL, 1);
      int v10 = *((unsigned __int8 *)v1 + 24);
      uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v1[1] bundleID]);
      *(_DWORD *)__int128 buf = 138413058;
      *(void *)&uint8_t buf[4] = Property;
      *(_WORD *)&buf[12] = 2114;
      *(void *)&buf[14] = v5;
      *(_WORD *)&_BYTE buf[22] = 1024;
      LODWORD(v79) = v10;
      WORD2(v79) = 2114;
      *(void *)((char *)&v79 + 6) = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "[%@] Performing authorization for accountID: %{public}@ userInitiated: %{BOOL}d bundleID: %{public}@",  buf,  0x26u);
    }

    if (v5)
    {
      id v12 = (void *)objc_claimAutoreleasedReturnValue(+[ACAccountStore ams_sharedAccountStore](&OBJC_CLASS___ACAccountStore, "ams_sharedAccountStore"));
      id v13 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "ams_iTunesAccountWithDSID:", v5));

      if (v13) {
        goto LABEL_21;
      }
    }

    uint64_t v14 = ASDLogHandleForCategory(28LL);
    uint64_t v15 = (os_log_s *)objc_claimAutoreleasedReturnValue(v14);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      id v17 = objc_getProperty(v1, v16, 32LL, 1);
      *(_DWORD *)__int128 buf = 138412290;
      *(void *)&uint8_t buf[4] = v17;
      _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "[%@] Could not find account, trying to make one from store metadata",  buf,  0xCu);
    }

    id v18 = (void *)objc_claimAutoreleasedReturnValue([v1[1] storeMetadata]);
    if (v18)
    {
      id v19 = sub_100270B2C((uint64_t)&OBJC_CLASS___ACAccount, v18);
      uint64_t v20 = objc_claimAutoreleasedReturnValue(v19);
      if (v20)
      {
        id v13 = (id)v20;
        uint64_t v21 = ASDLogHandleForCategory(28LL);
        __int128 v22 = (os_log_s *)objc_claimAutoreleasedReturnValue(v21);
        if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
        {
          id v24 = objc_getProperty(v1, v23, 32LL, 1);
          *(_DWORD *)__int128 buf = 138412546;
          *(void *)&uint8_t buf[4] = v24;
          *(_WORD *)&buf[12] = 2114;
          *(void *)&buf[14] = v13;
          _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEFAULT,  "[%@] Attempting to use account from store metadata: %{public}@",  buf,  0x16u);
        }

LABEL_30:
        uint64_t v44 = ASDLogHandleForCategory(28LL);
        id v45 = (os_log_s *)objc_claimAutoreleasedReturnValue(v44);
        if (os_log_type_enabled(v45, OS_LOG_TYPE_DEFAULT))
        {
          id v47 = objc_getProperty(v1, v46, 32LL, 1);
          *(_DWORD *)__int128 buf = 138412290;
          *(void *)&uint8_t buf[4] = v47;
          _os_log_impl( (void *)&_mh_execute_header,  v45,  OS_LOG_TYPE_DEFAULT,  "[%@] Authentication is required to perform authorization",  buf,  0xCu);
        }

        if (*((_BYTE *)v1 + 24))
        {
          id v48 = v13;
          uint64_t v49 = objc_alloc_init(&OBJC_CLASS___AMSMutablePromise);
          id v50 = objc_alloc_init(&OBJC_CLASS___InteractiveRequestPresenter);
          uint64_t v51 = ASDLocalizedString(@"AUTHORIZE_SIGN_IN_APPLE_ACCOUNT_TO_LAUNCH_MESSAGE_%@");
          id v52 = (void *)objc_claimAutoreleasedReturnValue(v51);
          id v53 = (void *)objc_claimAutoreleasedReturnValue([v1[1] localizedName]);
          int v54 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", v52, v53));

          SEL v55 = objc_alloc(&OBJC_CLASS___AMSDialogRequest);
          uint64_t v56 = ASDLocalizedString(@"AUTHORIZE_SIGN_IN_TITLE");
          uint64_t v57 = (void *)objc_claimAutoreleasedReturnValue(v56);
          BOOL v58 = -[AMSDialogRequest initWithTitle:message:](v55, "initWithTitle:message:", v57, v54);

          uint64_t v59 = ASDLocalizedString(@"CANCEL");
          id v60 = (void *)objc_claimAutoreleasedReturnValue(v59);
          uint64_t v61 = (void *)objc_claimAutoreleasedReturnValue( +[AMSDialogAction actionWithTitle:style:]( &OBJC_CLASS___AMSDialogAction,  "actionWithTitle:style:",  v60,  2LL));

          uint64_t v62 = ASDLocalizedString(@"AUTHORIZE_SIGN_IN_SIGN_IN_BUTTON");
          id v63 = (void *)objc_claimAutoreleasedReturnValue(v62);
          uint64_t v64 = (void *)objc_claimAutoreleasedReturnValue(+[AMSDialogAction actionWithTitle:](&OBJC_CLASS___AMSDialogAction, "actionWithTitle:", v63));

          *(void *)__int128 buf = v61;
          *(void *)&uint8_t buf[8] = v64;
          id v65 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", buf, 2LL));
          -[AMSDialogRequest setButtonActions:](v58, "setButtonActions:", v65);

          *(void *)__int128 buf = _NSConcreteStackBlock;
          *(void *)&uint8_t buf[8] = 3221225472LL;
          *(void *)&uint8_t buf[16] = sub_1001B6E40;
          *(void *)&__int128 v79 = &unk_1003EAEA0;
          uint64_t v66 = v49;
          *((void *)&v79 + 1) = v66;
          id v80 = v1;
          id v13 = v48;
          id v81 = v13;
          id v82 = v50;
          id v67 = v50;
          -[InteractiveRequestPresenter presentDialogRequest:resultHandler:]( v67,  "presentDialogRequest:resultHandler:",  v58,  buf);
          id v68 = v82;
          id v69 = v66;

          v77[0] = _NSConcreteStackBlock;
          v77[1] = 3221225472LL;
          v77[2] = sub_1001B6E04;
          v77[3] = &unk_1003EAE50;
          v77[4] = v1;
          SEL v70 = (void *)objc_claimAutoreleasedReturnValue(-[AMSMutablePromise thenWithBlock:](v69, "thenWithBlock:", v77));
          uint64_t v1 = (id *)objc_claimAutoreleasedReturnValue([v70 binaryPromiseAdapter]);
        }

        else
        {
          uint64_t v71 = ASDLogHandleForCategory(28LL);
          uint64_t v72 = (os_log_s *)objc_claimAutoreleasedReturnValue(v71);
          if (os_log_type_enabled(v72, OS_LOG_TYPE_ERROR))
          {
            id v76 = objc_getProperty(v1, v73, 32LL, 1);
            *(_DWORD *)__int128 buf = 138412546;
            *(void *)&uint8_t buf[4] = v76;
            *(_WORD *)&buf[12] = 2114;
            *(void *)&buf[14] = v5;
            _os_log_error_impl( (void *)&_mh_execute_header,  v72,  OS_LOG_TYPE_ERROR,  "[%@] Unable to perform loud authenticate for accountID: %{public}@",  buf,  0x16u);
          }

          uint64_t v74 = ASDErrorWithDescription( ASDErrorDomain,  507LL,  @"Unable to perform authentication in a non user initiated context");
          id v69 = (AMSMutablePromise *)objc_claimAutoreleasedReturnValue(v74);
          uint64_t v1 = (id *)objc_claimAutoreleasedReturnValue(+[AMSBinaryPromise promiseWithError:](&OBJC_CLASS___AMSBinaryPromise, "promiseWithError:", v69));
        }

LABEL_38:
        return v1;
      }
    }

    uint64_t v25 = ASDLogHandleForCategory(28LL);
    __int16 v26 = (os_log_s *)objc_claimAutoreleasedReturnValue(v25);
    if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
    {
      id v28 = objc_getProperty(v1, v27, 32LL, 1);
      *(_DWORD *)__int128 buf = 138412290;
      *(void *)&uint8_t buf[4] = v28;
      _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_DEFAULT,  "[%@] Could not find account, using the active account instead",  buf,  0xCu);
    }

    unsigned int v29 = (void *)objc_claimAutoreleasedReturnValue(+[ACAccountStore ams_sharedAccountStore](&OBJC_CLASS___ACAccountStore, "ams_sharedAccountStore"));
    id v13 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v29, "ams_activeiTunesAccount"));

    if (v5
      && (unsigned int v30 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "ams_DSID")),
          unsigned __int8 v31 = [v30 isEqualToNumber:v5],
          v30,
          (v31 & 1) == 0))
    {
      uint64_t v37 = ASDLogHandleForCategory(28LL);
      char v38 = (os_log_s *)objc_claimAutoreleasedReturnValue(v37);
      if (os_log_type_enabled(v38, OS_LOG_TYPE_DEFAULT))
      {
        id v40 = objc_getProperty(v1, v39, 32LL, 1);
        *(_DWORD *)__int128 buf = 138412290;
        *(void *)&uint8_t buf[4] = v40;
        _os_log_impl( (void *)&_mh_execute_header,  v38,  OS_LOG_TYPE_DEFAULT,  "[%@] Active account exists, but application does not belong to it",  buf,  0xCu);
      }
    }

    else if (v13)
    {
LABEL_21:
      uint64_t v32 = ASDLogHandleForCategory(28LL);
      int v33 = (os_log_s *)objc_claimAutoreleasedReturnValue(v32);
      if (os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT))
      {
        id v35 = objc_getProperty(v1, v34, 32LL, 1);
        *(_DWORD *)__int128 buf = 138412290;
        *(void *)&uint8_t buf[4] = v35;
        _os_log_impl( (void *)&_mh_execute_header,  v33,  OS_LOG_TYPE_DEFAULT,  "[%@] Authentication not required to perform authorization",  buf,  0xCu);
      }

      BOOL v36 = sub_1001B6D10(v1, v13);
      uint64_t v1 = (id *)objc_claimAutoreleasedReturnValue(v36);
      goto LABEL_38;
    }

    uint64_t v41 = ASDLogHandleForCategory(28LL);
    id v18 = (void *)objc_claimAutoreleasedReturnValue(v41);
    if (os_log_type_enabled((os_log_t)v18, OS_LOG_TYPE_DEFAULT))
    {
      id v43 = objc_getProperty(v1, v42, 32LL, 1);
      *(_DWORD *)__int128 buf = 138412290;
      *(void *)&uint8_t buf[4] = v43;
      _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v18,  OS_LOG_TYPE_DEFAULT,  "[%@] Could not find account, using the active account instead",  buf,  0xCu);
    }

    id v13 = 0LL;
    goto LABEL_30;
  }

  return v1;
}

id *sub_1001B6D10(id *a1, void *a2)
{
  id v2 = a1;
  if (a1)
  {
    id v3 = a2;
    id v4 = sub_1002FF088(objc_alloc(&OBJC_CLASS___AuthorizeMachine), v3, 2LL);

    uint64_t v5 = objc_claimAutoreleasedReturnValue([v2[1] downloaderDSID]);
    if (v5)
    {
      uint64_t v7 = (void *)v5;
      uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v2[1] purchaserDSID]);

      if (v8)
      {
        if (v4) {
          void v4[5] = 1LL;
        }
        int v10 = (void *)objc_claimAutoreleasedReturnValue([v2[1] purchaserDSID]);
        if (v4) {
          objc_setProperty_atomic_copy(v4, v9, v10, 48LL);
        }
      }
    }

    id Property = objc_getProperty(v2, v6, 32LL, 1);
    if (v4) {
      objc_setProperty_atomic_copy(v4, v12, Property, 56LL);
    }
    id v13 = sub_1002FF0E8((id *)v4);
    id v2 = (id *)objc_claimAutoreleasedReturnValue(v13);
  }

  return v2;
}

id sub_1001B6E04(uint64_t a1, void *a2)
{
  id v2 = sub_1001B6D10(*(id **)(a1 + 32), a2);
  id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 promiseAdapter]);

  return v4;
}

void sub_1001B6E40(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = v6;
  if (v5)
  {
    if (sub_10026ECBC(v5))
    {
      uint64_t v8 = *(void **)(a1 + 32);
      uint64_t v9 = ASDErrorWithUserInfoAndFormat(907LL, 0LL, @"User canceled dialog request");
      int v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
      [v8 finishWithError:v10];
    }

    else
    {
      id v12 = *(id **)(a1 + 40);
      if (v12)
      {
        id v13 = *(id *)(a1 + 48);
        uint64_t v14 = (void *)objc_opt_new(&OBJC_CLASS___AMSAuthenticateOptions);
        [v14 setAuthenticationType:0];
        id Property = objc_getProperty(v12, v15, 32LL, 1);
        if (v13) {
          id v17 = @"%@ - RefetchKeybag: New account from store metadata";
        }
        else {
          id v17 = @"%@ - RefetchKeybag: No iTunes account available";
        }
        id v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", v17, Property));
        [v14 setDebugReason:v18];

        [v14 setCanMakeAccountActive:0];
        [v14 setClientInfo:v12[2]];
        [v14 setDebugReason:@"Keybag"];
        id v19 = (void *)objc_claimAutoreleasedReturnValue([v12[2] localizedName]);
        [v14 setProxyAppName:v19];

        uint64_t v20 = -[AMSAuthenticateRequest initWithAccount:options:]( objc_alloc(&OBJC_CLASS___AMSAuthenticateRequest),  "initWithAccount:options:",  v13,  v14);
        id v22 = objc_msgSend(objc_getProperty(v12, v21, 32, 1), "description");
        size_t v23 = (void *)objc_claimAutoreleasedReturnValue(v22);
        -[AMSAuthenticateRequest setLogKey:](v20, "setLogKey:", v23);
      }

      else
      {
        uint64_t v20 = 0LL;
      }

      id v24 = *(void **)(a1 + 56);
      v25[0] = _NSConcreteStackBlock;
      v25[1] = 3221225472LL;
      v25[2] = sub_1001B7088;
      v25[3] = &unk_1003EAE78;
      id v26 = *(id *)(a1 + 32);
      [v24 presentAuthenticateRequest:v20 resultHandler:v25];
    }
  }

  else
  {
    if (!v6)
    {
      uint64_t v11 = ASDErrorWithUserInfoAndFormat(1000LL, 0LL, @"Dialog request failed without an error");
      uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(v11);
    }

    [*(id *)(a1 + 32) finishWithError:v7];
  }
}

void sub_1001B7088(uint64_t a1, void *a2, void *a3)
{
  id v11 = a2;
  id v5 = a3;
  if (v11)
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v11 account]);
    uint64_t v7 = *(void **)(a1 + 32);
    if (v6)
    {
      [v7 finishWithResult:v6];
    }

    else
    {
      uint64_t v9 = ASDErrorWithUserInfoAndFormat(530LL, 0LL, @"Authenticate result didn't contain an account");
      int v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
      [v7 finishWithError:v10];
    }
  }

  else
  {
    if (!v5)
    {
      uint64_t v8 = ASDErrorWithUserInfoAndFormat(1002LL, 0LL, @"Authenticate request failed without an error");
      id v5 = (id)objc_claimAutoreleasedReturnValue(v8);
    }

    [*(id *)(a1 + 32) finishWithError:v5];
  }
}

id sub_1001B71B0(uint64_t a1)
{
  if (qword_1004621B0 != -1) {
    dispatch_once(&qword_1004621B0, &stru_1003EAFD0);
  }
  return (id)qword_1004621B8;
}

void sub_1001B71F4(id a1)
{
  uint64_t v1 = objc_alloc_init(&OBJC_CLASS___SyncTaskScheduler);
  id v2 = (void *)qword_1004621B8;
  qword_1004621B8 = (uint64_t)v1;
}

void *sub_1001B7228(void *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    v56.receiver = a1;
    v56.super_class = (Class)&OBJC_CLASS___ClipAdditionalData;
    a1 = objc_msgSendSuper2(&v56, "init");
    if (a1)
    {
      v60[0] = @"asset-info";
      v60[1] = @"file-size";
      id v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v60, 2LL));
      id v5 = sub_1002D6480(v4);
      id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
      id v7 = sub_1001DEF10(v3, v6);
      uint64_t v8 = objc_claimAutoreleasedReturnValue(v7);
      uint64_t v9 = (void *)a1[1];
      a1[1] = v8;

      id v10 = sub_1001DEDF8(v3, @"uncompressedSize");
      uint64_t v11 = objc_claimAutoreleasedReturnValue(v10);
      id v12 = (void *)a1[7];
      a1[7] = v11;

      id v13 = sub_1001DF1DC(v3, @"chunks");
      uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
      SEL v15 = v14;
      if (v14)
      {
        id v16 = sub_1001DEDF8(v14, @"chunkSize");
        uint64_t v17 = objc_claimAutoreleasedReturnValue(v16);
        id v18 = (void *)a1[2];
        a1[2] = v17;

        id v19 = sub_1001DEC94(v15, @"clearHashes");
        uint64_t v20 = objc_claimAutoreleasedReturnValue(v19);
        SEL v21 = (void *)a1[3];
        a1[3] = v20;
      }

      id v22 = sub_1001DEC94(v3, @"sinfs");
      size_t v23 = (void *)objc_claimAutoreleasedReturnValue(v22);
      __int128 v52 = 0u;
      __int128 v53 = 0u;
      __int128 v54 = 0u;
      __int128 v55 = 0u;
      id v24 = [v23 countByEnumeratingWithState:&v52 objects:v59 count:16];
      if (v24)
      {
        id v25 = v24;
        uint64_t v26 = *(void *)v53;
        do
        {
          BOOL v27 = 0LL;
          do
          {
            if (*(void *)v53 != v26) {
              objc_enumerationMutation(v23);
            }
            id v28 = *(void **)(*((void *)&v52 + 1) + 8LL * (void)v27);
            unsigned int v29 = (void *)a1[6];
            if (!v29 || ![v29 length])
            {
              unsigned int v30 = sub_1001DEFF8(v28, @"sinf");
              uint64_t v31 = objc_claimAutoreleasedReturnValue(v30);
              uint64_t v32 = (void *)a1[6];
              a1[6] = v31;
            }

            int v33 = (void *)a1[4];
            if (!v33 || ![v33 length])
            {
              uint64_t v34 = sub_1001DEFF8(v28, @"dpInfo");
              uint64_t v35 = objc_claimAutoreleasedReturnValue(v34);
              BOOL v36 = (void *)a1[4];
              a1[4] = v35;
            }

            BOOL v27 = (char *)v27 + 1;
          }

          while (v25 != v27);
          id v25 = [v23 countByEnumeratingWithState:&v52 objects:v59 count:16];
        }

        while (v25);
      }

      id v37 = sub_1001DF1DC(v3, @"compressionInfo");
      char v38 = (void *)objc_claimAutoreleasedReturnValue(v37);
      uint64_t v39 = ASDLogHandleForCategory(7LL);
      id v40 = (os_log_s *)objc_claimAutoreleasedReturnValue(v39);
      BOOL v41 = os_log_type_enabled(v40, OS_LOG_TYPE_DEBUG);
      if (v38)
      {
        if (v41)
        {
          *(_DWORD *)__int128 buf = 138412290;
          BOOL v58 = v38;
          _os_log_debug_impl( (void *)&_mh_execute_header,  v40,  OS_LOG_TYPE_DEBUG,  "(ClipAdditionalData) Identified compression info from response: %@",  buf,  0xCu);
        }

        id v42 = sub_1001DF594(v38, @"compressionMethod");
        id v43 = (void *)objc_claimAutoreleasedReturnValue(v42);
        uint64_t v44 = (void *)objc_claimAutoreleasedReturnValue([v43 lowercaseString]);

        unsigned int v45 = sub_1001DEDAC(v38, @"isExternallyCompressed", 0LL);
        unsigned int v46 = [v44 isEqualToString:@"lzma"];
        uint64_t v47 = ASDLogHandleForCategory(7LL);
        id v48 = (os_log_s *)objc_claimAutoreleasedReturnValue(v47);
        BOOL v49 = os_log_type_enabled(v48, OS_LOG_TYPE_DEBUG);
        if (v46 && v45)
        {
          if (v49)
          {
            *(_WORD *)__int128 buf = 0;
            _os_log_debug_impl( (void *)&_mh_execute_header,  v48,  OS_LOG_TYPE_DEBUG,  "(ClipAdditionalData) Compression method is external LZMA",  buf,  2u);
          }

          uint64_t v50 = 1LL;
        }

        else
        {
          if (v49)
          {
            *(_WORD *)__int128 buf = 0;
            _os_log_debug_impl( (void *)&_mh_execute_header,  v48,  OS_LOG_TYPE_DEBUG,  "(ClipAdditionalData) Compression method is unknown, passing through to StreamingZip",  buf,  2u);
          }

          uint64_t v50 = 0LL;
        }

        a1[5] = v50;
      }

      else
      {
        if (v41)
        {
          *(_WORD *)__int128 buf = 0;
          _os_log_debug_impl( (void *)&_mh_execute_header,  v40,  OS_LOG_TYPE_DEBUG,  "(ClipAdditionalData) Could not identify compression info from response",  buf,  2u);
        }

        a1[5] = 0LL;
      }
    }
  }

  return a1;
}

id sub_1001B782C(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1001B78A4;
  block[3] = &unk_1003E9EA8;
  void block[4] = objc_opt_self(a1);
  if (qword_1004621C8 != -1) {
    dispatch_once(&qword_1004621C8, block);
  }
  return (id)qword_1004621C0;
}

void sub_1001B78A4(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  id v2 = (void *)qword_1004621C0;
  qword_1004621C0 = (uint64_t)v1;
}

void sub_1001B7B34(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    id v4 = objc_alloc_init(&OBJC_CLASS____TtC9appstored6LogKey);
    id v5 = *(void **)(a1 + 8);
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472LL;
    void v7[2] = sub_1001B7BE4;
    v7[3] = &unk_1003E97D0;
    id v8 = v3;
    uint64_t v9 = a1;
    id v10 = v4;
    id v6 = v4;
    sub_10022ED10(v5, v7);
  }
}

void sub_1001B7BE4(uint64_t a1)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) bundleIdentifier]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) badgeIdentifier]);
  uint64_t v4 = ASDLogHandleForCategory(14LL);
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    id v7 = (void *)objc_opt_class(*(void *)(a1 + 40), v6);
    id v8 = *(void **)(a1 + 48);
    uint64_t v9 = *(void **)(a1 + 32);
    id v10 = v7;
    *(_DWORD *)__int128 buf = 138544386;
    id v42 = v7;
    __int16 v43 = 2114;
    id v44 = v8;
    __int16 v45 = 2114;
    id v46 = v2;
    __int16 v47 = 2114;
    id v48 = v3;
    __int16 v49 = 1024;
    unsigned int v50 = [v9 enabled];
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] [%{public}@] Push for bundleID: %{public}@ badgeID: %{public}@ enabled: %{BOOL}d",  buf,  0x30u);
  }

  if (v2 && [v2 isEqualToString:@"com.apple.TVAppStore"] && v3)
  {
    unsigned int v11 = [*(id *)(a1 + 32) enabled];
    uint64_t v12 = *(void *)(a1 + 40);
    if (v11)
    {
      id v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) metrics]);
      uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) actionMetricsEvent]);
      SEL v15 = *(void **)(a1 + 48);
      id v16 = v13;
      id v39 = v14;
      id v17 = v3;
      id v18 = v15;
      id v19 = v17;
      id v20 = v18;
      if (v12)
      {
        dispatch_assert_queue_V2(*(dispatch_queue_t *)(v12 + 8));
        id v21 = sub_1001B86F4(v12, v20);
        id v22 = (void *)objc_claimAutoreleasedReturnValue(v21);
        id v23 = [v22 mutableCopy];

        id v24 = (void *)objc_claimAutoreleasedReturnValue([v23 objectForKeyedSubscript:v19]);
        id v25 = [v24 mutableCopy];

        if (!v25) {
          id v25 = (id)objc_claimAutoreleasedReturnValue( +[NSMutableDictionary dictionaryWithDictionary:]( &OBJC_CLASS___NSMutableDictionary,  "dictionaryWithDictionary:",  &off_10040E0B0));
        }
        if (v16) {
          [v25 setObject:v16 forKeyedSubscript:@"metrics"];
        }
        if (v39) {
          [v25 setObject:v39 forKeyedSubscript:@"actionMetrics"];
        }
        sub_1001B87B0(v12, v25, v19, v23);
        uint64_t v26 = ASDLogHandleForCategory(14LL);
        BOOL v27 = (os_log_s *)objc_claimAutoreleasedReturnValue(v26);
        if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
        {
          unsigned int v29 = (void *)objc_opt_class(v12, v28);
          *(_DWORD *)__int128 buf = 138543874;
          id v42 = v29;
          __int16 v43 = 2112;
          id v44 = v20;
          __int16 v45 = 2114;
          id v46 = v19;
          id v38 = v20;
          unsigned int v30 = v19;
          id v31 = v29;
          _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] [%@] Added badgeID: %{public}@",  buf,  0x20u);

          id v19 = v30;
          id v20 = v38;
        }

        sub_1001B883C(v12, v23, v20);
        uint64_t v32 = ASDLogHandleForCategory(14LL);
        int v33 = (os_log_s *)objc_claimAutoreleasedReturnValue(v32);
        if (os_log_type_enabled(v33, OS_LOG_TYPE_INFO))
        {
          uint64_t v35 = (void *)objc_opt_class(v12, v34);
          *(_DWORD *)__int128 buf = 138543874;
          id v42 = v35;
          __int16 v43 = 2112;
          id v44 = v20;
          __int16 v45 = 2114;
          id v46 = v23;
          BOOL v36 = v19;
          id v37 = v35;
          _os_log_impl( (void *)&_mh_execute_header,  v33,  OS_LOG_TYPE_INFO,  "[%{public}@] [%@] Badge metrics dictionary updated to: %{public}@",  buf,  0x20u);

          id v19 = v36;
        }
      }
    }

    else
    {
      id v40 = v3;
      id v16 = (id)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v40, 1LL));
      sub_1001B7FD4(v12, v16, 0, *(void **)(a1 + 48));
    }

    sub_1001B82B0(*(void *)(a1 + 40), *(void **)(a1 + 48));
  }
}

BOOL sub_1001B7FD4(uint64_t a1, void *a2, int a3, void *a4)
{
  id v7 = a2;
  id v8 = a4;
  if (a1)
  {
    dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 8));
    uint64_t v9 = ASDLogHandleForCategory(14LL);
    id v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v12 = (void *)objc_opt_class(a1, v11);
      id v13 = v12;
      uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "componentsJoinedByString:", @", "));
      *(_DWORD *)__int128 buf = 138543874;
      id v39 = v12;
      __int16 v40 = 2112;
      id v41 = v8;
      __int16 v42 = 2114;
      id v43 = v14;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] [%@] Removing badge metrics for badgeIDs: [%{public}@]",  buf,  0x20u);
    }

    id v31 = v8;
    id v15 = sub_1001B86F4(a1, v8);
    id v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
    id v17 = [v16 mutableCopy];

    __int128 v35 = 0u;
    __int128 v36 = 0u;
    __int128 v33 = 0u;
    __int128 v34 = 0u;
    id v32 = v7;
    id v18 = v7;
    id v19 = [v18 countByEnumeratingWithState:&v33 objects:v37 count:16];
    if (v19)
    {
      id v20 = v19;
      uint64_t v21 = *(void *)v34;
      do
      {
        for (uint64_t i = 0LL; i != v20; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v34 != v21) {
            objc_enumerationMutation(v18);
          }
          uint64_t v23 = *(void *)(*((void *)&v33 + 1) + 8LL * (void)i);
          id v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "objectForKeyedSubscript:", v23, v31));

          if (v24)
          {
            if (a3) {
              [v17 setObject:&__NSDictionary0__struct forKeyedSubscript:v23];
            }
            else {
              [v17 removeObjectForKey:v23];
            }
          }
        }

        id v20 = [v18 countByEnumeratingWithState:&v33 objects:v37 count:16];
      }

      while (v20);
    }

    id v8 = v31;
    sub_1001B883C(a1, v17, v31);
    uint64_t v25 = ASDLogHandleForCategory(14LL);
    uint64_t v26 = (os_log_s *)objc_claimAutoreleasedReturnValue(v25);
    if (os_log_type_enabled(v26, OS_LOG_TYPE_INFO))
    {
      uint64_t v28 = (void *)objc_opt_class(a1, v27);
      *(_DWORD *)__int128 buf = 138543874;
      id v39 = v28;
      __int16 v40 = 2112;
      id v41 = v31;
      __int16 v42 = 2114;
      id v43 = v17;
      id v29 = v28;
      _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_INFO,  "[%{public}@] [%@] Badge metrics dictionary updated to: [%{public}@]",  buf,  0x20u);
    }

    id v7 = v32;
  }

  return a1 != 0;
}

void sub_1001B82B0(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 8));
    notify_post("com.apple.appstored.ASDAppStoreServiceBadgesChanged");
    uint64_t v5 = ASDLogHandleForCategory(14LL, v4);
    uint64_t v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      int v9 = 138543618;
      id v10 = (id)objc_opt_class(a1, v7);
      __int16 v11 = 2112;
      id v12 = v3;
      id v8 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] [%@] Notifying badge changed",  (uint8_t *)&v9,  0x16u);
    }
  }
}

uint64_t sub_1001B83A0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = v6;
  if (a1)
  {
    uint64_t v14 = 0LL;
    id v15 = &v14;
    uint64_t v16 = 0x2020000000LL;
    char v17 = 1;
    id v8 = *(dispatch_queue_s **)(a1 + 8);
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472LL;
    void v10[2] = sub_1001B8490;
    v10[3] = &unk_1003EAFF8;
    void v10[4] = a1;
    id v11 = v6;
    id v12 = v5;
    id v13 = &v14;
    dispatch_sync(v8, v10);
    a1 = *((_BYTE *)v15 + 24) != 0;

    _Block_object_dispose(&v14, 8);
  }

  return a1;
}

void sub_1001B8490(uint64_t a1)
{
  id v2 = sub_1001B86F4(*(void *)(a1 + 32), *(void **)(a1 + 40));
  id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  id v4 = [v3 mutableCopy];

  __int128 v25 = 0u;
  __int128 v26 = 0u;
  __int128 v23 = 0u;
  __int128 v24 = 0u;
  id v5 = *(id *)(a1 + 48);
  id v6 = [v5 countByEnumeratingWithState:&v23 objects:v33 count:16];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)v24;
    do
    {
      for (uint64_t i = 0LL; i != v7; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v24 != v8) {
          objc_enumerationMutation(v5);
        }
        id v10 = *(void **)(*((void *)&v23 + 1) + 8LL * (void)i);
        uint64_t v11 = ASDLogHandleForCategory(14LL);
        id v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
        if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v14 = (void *)objc_opt_class(*(void *)(a1 + 32), v13);
          uint64_t v15 = *(void *)(a1 + 40);
          *(_DWORD *)__int128 buf = 138543874;
          uint64_t v28 = v14;
          __int16 v29 = 2112;
          uint64_t v30 = v15;
          __int16 v31 = 2114;
          id v32 = v10;
          id v16 = v14;
          _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] [%@] Added badgeID: %{public}@",  buf,  0x20u);
        }

        sub_1001B87B0(*(void *)(a1 + 32), 0LL, v10, v4);
      }

      id v7 = [v5 countByEnumeratingWithState:&v23 objects:v33 count:16];
    }

    while (v7);
  }

  *(_BYTE *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL) = sub_1001B883C( *(void *)(a1 + 32),  v4,  *(void **)(a1 + 40));
  uint64_t v17 = ASDLogHandleForCategory(14LL);
  id v18 = (os_log_s *)objc_claimAutoreleasedReturnValue(v17);
  if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
  {
    id v20 = (void *)objc_opt_class(*(void *)(a1 + 32), v19);
    uint64_t v21 = *(void *)(a1 + 40);
    *(_DWORD *)__int128 buf = 138543874;
    uint64_t v28 = v20;
    __int16 v29 = 2112;
    uint64_t v30 = v21;
    __int16 v31 = 2114;
    id v32 = v4;
    id v22 = v20;
    _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_INFO,  "[%{public}@] [%@] Badges dictionary updated to: %{public}@",  buf,  0x20u);
  }

  sub_1001B82B0(*(void *)(a1 + 32), *(void **)(a1 + 40));
}

id sub_1001B86F4(uint64_t a1, void *a2)
{
  if (a1)
  {
    id v2 = sub_1001B9A78(a1, a2);
    id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
    objc_opt_class(&OBJC_CLASS___NSDictionary, v4);
    id v5 = sub_1001B2BD8(v3);
    id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);

    id v7 = &__NSDictionary0__struct;
    if (v6)
    {
      uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKeyedSubscript:@"badges"]);
      objc_opt_class(&OBJC_CLASS___NSDictionary, v9);
      id v10 = sub_1001B2BD8(v8);
      uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(v10);

      if (v11) {
        id v12 = v11;
      }
      else {
        id v12 = &__NSDictionary0__struct;
      }
      id v7 = v12;
    }
  }

  else
  {
    id v7 = 0LL;
  }

  return v7;
}

void sub_1001B87B0(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v11 = a2;
  if (a1)
  {
    id v7 = *(dispatch_queue_s **)(a1 + 8);
    id v8 = a4;
    id v9 = a3;
    dispatch_assert_queue_V2(v7);
    id v10 = v11;
    if (!v11) {
      id v10 = &__NSDictionary0__struct;
    }
    id v11 = v10;
    objc_msgSend(v8, "setObject:forKeyedSubscript:");
  }
}

uint64_t sub_1001B883C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (a1)
  {
    id v7 = sub_1001B9D10();
    id v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
    if (v8)
    {
      v45[0] = @"badging-version";
      v45[1] = @"badges";
      v46[0] = &off_10040C100;
      v46[1] = v5;
      id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v46,  v45,  2LL));
      id v38 = 0LL;
      id v10 = (void *)objc_claimAutoreleasedReturnValue( +[NSPropertyListSerialization dataWithPropertyList:format:options:error:]( &OBJC_CLASS___NSPropertyListSerialization,  "dataWithPropertyList:format:options:error:",  v9,  200LL,  0LL,  &v38));
      id v11 = v38;
      id v12 = v11;
      if (v10)
      {
        id v37 = v11;
        unsigned __int8 v13 = [v10 writeToFile:v8 options:1 error:&v37];
        id v14 = v37;

        uint64_t v15 = ASDLogHandleForCategory(14LL);
        id v16 = (os_log_s *)objc_claimAutoreleasedReturnValue(v15);
        uint64_t v17 = v16;
        if ((v13 & 1) != 0)
        {
          if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v19 = (void *)objc_opt_class(a1, v18);
            *(_DWORD *)__int128 buf = 138543874;
            id v40 = v19;
            __int16 v41 = 2114;
            id v42 = v6;
            __int16 v43 = 2114;
            id v44 = v8;
            id v20 = v19;
            _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] [%{public}@] Wrote the serialized badging metadata to: %{public}@",  buf,  0x20u);
          }

          uint64_t v21 = 1LL;
        }

        else
        {
          if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
          {
            __int128 v33 = (void *)objc_opt_class(a1, v27);
            id v34 = v33;
            uint64_t v35 = AMSLogableError(v14);
            __int128 v36 = (void *)objc_claimAutoreleasedReturnValue(v35);
            *(_DWORD *)__int128 buf = 138543874;
            id v40 = v33;
            __int16 v41 = 2114;
            id v42 = v6;
            __int16 v43 = 2114;
            id v44 = v36;
            _os_log_error_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_ERROR,  "[%{public}@] [%{public}@] Failed to write the serialized badging metadata. Error: %{public}@",  buf,  0x20u);
          }

          uint64_t v21 = 0LL;
        }

        id v12 = v14;
      }

      else
      {
        uint64_t v25 = ASDLogHandleForCategory(14LL);
        uint64_t v17 = (os_log_s *)objc_claimAutoreleasedReturnValue(v25);
        if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
        {
          __int16 v29 = (void *)objc_opt_class(a1, v26);
          id v30 = v29;
          uint64_t v31 = AMSLogableError(v12);
          id v32 = (void *)objc_claimAutoreleasedReturnValue(v31);
          *(_DWORD *)__int128 buf = 138543874;
          id v40 = v29;
          __int16 v41 = 2114;
          id v42 = v6;
          __int16 v43 = 2114;
          id v44 = v32;
          _os_log_error_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_ERROR,  "[%{public}@] [%{public}@] Failed to serialize badging metadata. Error: %{public}@",  buf,  0x20u);
        }

        uint64_t v21 = 0LL;
      }
    }

    else
    {
      uint64_t v22 = ASDLogHandleForCategory(14LL);
      id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v22);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)__int128 buf = 138543618;
        id v40 = (id)objc_opt_class(a1, v23);
        __int16 v41 = 2114;
        id v42 = v6;
        id v24 = v40;
        _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] [%{public}@] Unable to generate the path in order to cache badging metadata",  buf,  0x16u);
      }

      uint64_t v21 = 0LL;
    }
  }

  else
  {
    uint64_t v21 = 0LL;
  }

  return v21;
}

void *sub_1001B8BC4(void *a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = v3;
  if (a1)
  {
    uint64_t v10 = 0LL;
    id v11 = &v10;
    uint64_t v12 = 0x3032000000LL;
    unsigned __int8 v13 = sub_1001B8CA8;
    id v14 = sub_1001B8CB8;
    id v15 = 0LL;
    id v5 = (dispatch_queue_s *)a1[1];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1001B8CC0;
    block[3] = &unk_1003E9780;
    id v9 = &v10;
    void block[4] = a1;
    id v8 = v3;
    dispatch_sync(v5, block);
    a1 = (id)v11[5];

    _Block_object_dispose(&v10, 8);
  }

  return a1;
}

uint64_t sub_1001B8CA8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1001B8CB8(uint64_t a1)
{
}

void sub_1001B8CC0(uint64_t a1)
{
  id v2 = sub_1001B8D00(*(void *)(a1 + 32), *(void **)(a1 + 40), 1);
  uint64_t v3 = objc_claimAutoreleasedReturnValue(v2);
  uint64_t v4 = *(void *)(*(void *)(a1 + 48) + 8LL);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;
}

id sub_1001B8D00(uint64_t a1, void *a2, int a3)
{
  id v5 = a2;
  if (a1)
  {
    dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 8));
    id v6 = sub_1001B86F4(a1, v5);
    id v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
    id v8 = (void *)objc_claimAutoreleasedReturnValue([v7 allKeys]);
    if (a3)
    {
      uint64_t v9 = ASDLogHandleForCategory(14LL);
      uint64_t v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v12 = (void *)objc_opt_class(a1, v11);
        id v13 = v12;
        id v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "componentsJoinedByString:", @", "));
        int v16 = 138543874;
        uint64_t v17 = v12;
        __int16 v18 = 2112;
        id v19 = v5;
        __int16 v20 = 2114;
        uint64_t v21 = v14;
        _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] [%@] Returning badgeIDs: [%{public}@]",  (uint8_t *)&v16,  0x20u);
      }
    }
  }

  else
  {
    id v8 = 0LL;
  }

  return v8;
}

void *sub_1001B8E58(void *a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = v3;
  if (a1)
  {
    uint64_t v10 = 0LL;
    uint64_t v11 = &v10;
    uint64_t v12 = 0x3032000000LL;
    id v13 = sub_1001B8CA8;
    id v14 = sub_1001B8CB8;
    id v15 = 0LL;
    id v5 = (dispatch_queue_s *)a1[1];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1001B8F3C;
    block[3] = &unk_1003E9780;
    uint64_t v9 = &v10;
    void block[4] = a1;
    id v8 = v3;
    dispatch_sync(v5, block);
    a1 = (id)v11[5];

    _Block_object_dispose(&v10, 8);
  }

  return a1;
}

void sub_1001B8F3C(uint64_t a1)
{
  id v2 = sub_1001B86F4(*(void *)(a1 + 32), *(void **)(a1 + 40));
  uint64_t v3 = objc_claimAutoreleasedReturnValue(v2);
  uint64_t v4 = *(void *)(*(void *)(a1 + 48) + 8LL);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;
}

uint64_t sub_1001B8F78(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = v3;
  if (a1)
  {
    uint64_t v10 = 0LL;
    uint64_t v11 = &v10;
    uint64_t v12 = 0x2020000000LL;
    uint64_t v13 = 0LL;
    id v5 = *(dispatch_queue_s **)(a1 + 8);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1001B9038;
    block[3] = &unk_1003E9780;
    uint64_t v9 = &v10;
    void block[4] = a1;
    id v8 = v3;
    dispatch_sync(v5, block);
    a1 = v11[3];

    _Block_object_dispose(&v10, 8);
  }

  return a1;
}

void sub_1001B9038(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(id *)(a1 + 40);
  if (v2)
  {
    dispatch_assert_queue_V2(*(dispatch_queue_t *)(v2 + 8));
    id v4 = sub_1001B8D00(v2, v3, 0);
    id v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
    id v6 = [v5 count];

    uint64_t v7 = ASDLogHandleForCategory(14LL);
    id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      int v11 = 138543874;
      id v12 = (id)objc_opt_class(v2, v9);
      __int16 v13 = 2112;
      id v14 = v3;
      __int16 v15 = 2048;
      id v16 = v6;
      id v10 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] [%@] Returning badge count: %ld",  (uint8_t *)&v11,  0x20u);
    }
  }

  else
  {
    id v6 = 0LL;
  }

  *(void *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = v6;
}

uint64_t sub_1001B916C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (a1)
  {
    uint64_t v13 = 0LL;
    id v14 = &v13;
    uint64_t v15 = 0x2020000000LL;
    char v16 = 1;
    uint64_t v7 = *(dispatch_queue_s **)(a1 + 8);
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472LL;
    v9[2] = sub_1001B9258;
    v9[3] = &unk_1003EB020;
    id v12 = &v13;
    void v9[4] = a1;
    id v10 = v5;
    id v11 = v6;
    dispatch_sync(v7, v9);
    a1 = *((_BYTE *)v14 + 24) != 0;

    _Block_object_dispose(&v13, 8);
  }

  return a1;
}

void sub_1001B9258(uint64_t a1)
{
  *(_BYTE *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL) = sub_1001B7FD4( *(void *)(a1 + 32),  *(void **)(a1 + 40),  1,  *(void **)(a1 + 48));
  sub_1001B82B0(*(void *)(a1 + 32), *(void **)(a1 + 48));
}

uint64_t sub_1001B9298(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  if (a1)
  {
    uint64_t v10 = 0LL;
    id v11 = &v10;
    uint64_t v12 = 0x2020000000LL;
    char v13 = 1;
    id v5 = *(dispatch_queue_s **)(a1 + 8);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1001B9364;
    block[3] = &unk_1003E9780;
    uint64_t v9 = &v10;
    void block[4] = a1;
    id v8 = v3;
    dispatch_sync(v5, block);
    a1 = *((_BYTE *)v11 + 24) != 0;

    _Block_object_dispose(&v10, 8);
  }

  return a1;
}

void sub_1001B9364(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(id *)(a1 + 40);
  if (v2)
  {
    dispatch_assert_queue_V2(*(dispatch_queue_t *)(v2 + 8));
    sub_1001B883C(v2, &__NSDictionary0__struct, v3);
    uint64_t v4 = ASDLogHandleForCategory(14LL);
    id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = 138543618;
      id v9 = (id)objc_opt_class(v2, v6);
      __int16 v10 = 2112;
      id v11 = v3;
      id v7 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] [%@] Removed all badges",  (uint8_t *)&v8,  0x16u);
    }
  }

  *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = v2 != 0;
  sub_1001B82B0(*(void *)(a1 + 32), *(void **)(a1 + 40));
}

uint64_t sub_1001B9480(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  if (a1)
  {
    uint64_t v17 = 0LL;
    __int16 v18 = &v17;
    uint64_t v19 = 0x2020000000LL;
    char v20 = 1;
    __int16 v10 = *(dispatch_queue_s **)(a1 + 8);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1001B9594;
    block[3] = &unk_1003EB048;
    char v16 = &v17;
    void block[4] = a1;
    id v13 = v7;
    id v14 = v9;
    id v15 = v8;
    dispatch_sync(v10, block);
    a1 = *((_BYTE *)v18 + 24) != 0;

    _Block_object_dispose(&v17, 8);
  }

  return a1;
}

void sub_1001B9594(uint64_t a1)
{
  *(_BYTE *)(*(void *)(*(void *)(a1 + 64) + 8LL) + 24LL) = sub_1001B7FD4( *(void *)(a1 + 32),  *(void **)(a1 + 40),  0,  *(void **)(a1 + 48));
  unsigned int v2 = [*(id *)(a1 + 56) isEqualToString:@"com.apple.TVAppStore"];
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void **)(a1 + 48);
  if (v2)
  {
    id v5 = v4;
    if (v3)
    {
      dispatch_assert_queue_V2(*(dispatch_queue_t *)(v3 + 8));
      notify_post("com.apple.appstored.ASDAppStoreServiceBadgeChangedWithActionResponse");
      uint64_t v6 = ASDLogHandleForCategory(14LL);
      id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        int v10 = 138543618;
        id v11 = (id)objc_opt_class(v3, v8);
        __int16 v12 = 2112;
        id v13 = v5;
        id v9 = v11;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] [%@] Notifying badge removed",  (uint8_t *)&v10,  0x16u);
      }
    }
  }

  else
  {
    sub_1001B82B0(*(void *)(a1 + 32), v4);
  }

uint64_t sub_1001B96EC(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = v3;
  if (a1)
  {
    uint64_t v10 = 0LL;
    id v11 = &v10;
    uint64_t v12 = 0x2020000000LL;
    char v13 = 1;
    id v5 = *(dispatch_queue_s **)(a1 + 8);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1001B97B8;
    block[3] = &unk_1003E9780;
    id v9 = &v10;
    void block[4] = a1;
    id v8 = v3;
    dispatch_sync(v5, block);
    a1 = *((_BYTE *)v11 + 24) != 0;

    _Block_object_dispose(&v10, 8);
  }

  return a1;
}

void sub_1001B97B8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(id *)(a1 + 40);
  if (v2)
  {
    dispatch_assert_queue_V2(*(dispatch_queue_t *)(v2 + 8));
    uint64_t v4 = ASDLogHandleForCategory(14LL);
    id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 138543618;
      *(void *)&uint8_t buf[4] = objc_opt_class(v2, v6);
      *(_WORD *)&buf[12] = 2112;
      *(void *)&buf[14] = v3;
      id v7 = *(id *)&buf[4];
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] [%@] Migrating badges",  buf,  0x16u);
    }

    id v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](&OBJC_CLASS___NSMutableDictionary, "dictionary"));
    id v9 = sub_1001B9A78(v2, v3);
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
    id v11 = (void *)objc_claimAutoreleasedReturnValue([v10 objectForKeyedSubscript:@"badging-version"]);
    uint64_t v12 = v11;
    if (v11 && (int)[v11 intValue] >= 1)
    {
      uint64_t v13 = ASDLogHandleForCategory(14LL);
      id v14 = (os_log_s *)objc_claimAutoreleasedReturnValue(v13);
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        char v16 = (void *)objc_opt_class(v2, v15);
        *(_DWORD *)__int128 buf = 138543618;
        *(void *)&uint8_t buf[4] = v16;
        *(_WORD *)&buf[12] = 2112;
        *(void *)&buf[14] = v3;
        id v17 = v16;
        _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] [%@] Migration not needed",  buf,  0x16u);
      }

      char v18 = 0;
    }

    else
    {
      *(void *)__int128 buf = _NSConcreteStackBlock;
      *(void *)&uint8_t buf[8] = 3221225472LL;
      *(void *)&uint8_t buf[16] = sub_1001B9D58;
      uint64_t v31 = &unk_1003EB070;
      uint64_t v19 = v8;
      id v32 = v19;
      [v10 enumerateKeysAndObjectsUsingBlock:buf];
      sub_1001B883C(v2, v19, v3);
      uint64_t v20 = ASDLogHandleForCategory(14LL);
      uint64_t v21 = (os_log_s *)objc_claimAutoreleasedReturnValue(v20);
      if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
      {
        int v24 = 138543874;
        id v25 = (id)objc_opt_class(v2, v22);
        __int16 v26 = 2112;
        id v27 = v3;
        __int16 v28 = 2114;
        __int16 v29 = v19;
        id v23 = v25;
        _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_INFO,  "[%{public}@] [%@] Badge metrics dictionary migrated to: [%{public}@]",  (uint8_t *)&v24,  0x20u);
      }

      char v18 = 1;
      id v14 = v32;
    }
  }

  else
  {
    char v18 = 0;
  }

  *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = v18;
}

_UNKNOWN **sub_1001B9A78(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_1001B9D10();
  id v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  if (v5)
  {
    uint64_t v6 = -[NSData initWithContentsOfFile:](objc_alloc(&OBJC_CLASS___NSData), "initWithContentsOfFile:", v5);
    if (v6)
    {
      uint64_t v7 = ASDLogHandleForCategory(14LL);
      id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)__int128 buf = 138543618;
        id v27 = (id)objc_opt_class(a1, v9);
        __int16 v28 = 2114;
        id v29 = v3;
        id v10 = v27;
        _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] [%{public}@] Load cached badge metadata",  buf,  0x16u);
      }

      id v25 = 0LL;
      id v11 = (void *)objc_claimAutoreleasedReturnValue( +[NSPropertyListSerialization propertyListWithData:options:format:error:]( &OBJC_CLASS___NSPropertyListSerialization,  "propertyListWithData:options:format:error:",  v6,  0LL,  0LL,  &v25));
      id v12 = v25;
      objc_opt_class(&OBJC_CLASS___NSDictionary, v13);
      id v14 = sub_1001B2BD8(v11);
      uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(v14);

      if (v12)
      {
        uint64_t v16 = ASDLogHandleForCategory(14LL);
        id v17 = (os_log_s *)objc_claimAutoreleasedReturnValue(v16);
        if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
        {
          id v23 = (void *)objc_opt_class(a1, v18);
          *(_DWORD *)__int128 buf = 138543874;
          id v27 = v23;
          __int16 v28 = 2114;
          id v29 = v3;
          __int16 v30 = 2114;
          id v31 = v12;
          id v24 = v23;
          _os_log_error_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_ERROR,  "[%{public}@] [%{public}@] Failed to deserialize the cached badging data. Error: %{public}@",  buf,  0x20u);
        }
      }

      if (v15) {
        uint64_t v19 = v15;
      }
      else {
        uint64_t v19 = &off_10040E0D8;
      }
    }

    else
    {
      uint64_t v19 = (_UNKNOWN **)&__NSDictionary0__struct;
    }
  }

  else
  {
    uint64_t v20 = ASDLogHandleForCategory(14LL);
    uint64_t v6 = (NSData *)objc_claimAutoreleasedReturnValue(v20);
    if (os_log_type_enabled((os_log_t)v6, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)__int128 buf = 138543618;
      id v27 = (id)objc_opt_class(a1, v21);
      __int16 v28 = 2114;
      id v29 = v3;
      _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)v6,  OS_LOG_TYPE_ERROR,  "[%{public}@] [%{public}@] Unable to generate the path for badge metadata",  buf,  0x16u);
    }

    uint64_t v19 = 0LL;
  }

  return v19;
}

id sub_1001B9D10()
{
  id v0 = sub_100220DDC((uint64_t)&OBJC_CLASS___Storage);
  id v1 = (void *)objc_claimAutoreleasedReturnValue(v0);
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([v1 stringByAppendingPathComponent:@"badging.plist"]);

  return v2;
}

void sub_1001B9D58(uint64_t a1, void *a2, void *a3, _BYTE *a4)
{
  id v7 = a2;
  id v8 = a3;
  objc_opt_class(&OBJC_CLASS___NSDictionary, v9);
  id v10 = sub_1001B2BD8(v8);
  id v11 = (void *)objc_claimAutoreleasedReturnValue(v10);

  if (v11)
  {
    id v12 = (void *)objc_claimAutoreleasedReturnValue([v11 objectForKeyedSubscript:@"metrics"]);

    if (v12)
    {
      *a4 = 1;
    }

    else
    {
      v15[0] = @"metrics";
      v15[1] = @"actionMetrics";
      v16[0] = v11;
      v16[1] = &__NSDictionary0__struct;
      uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v16,  v15,  2LL));
      id v14 = (void *)objc_claimAutoreleasedReturnValue( +[NSMutableDictionary dictionaryWithDictionary:]( &OBJC_CLASS___NSMutableDictionary,  "dictionaryWithDictionary:",  v13));
      [*(id *)(a1 + 32) setObject:v14 forKeyedSubscript:v7];
    }
  }
}

void *sub_1001B9EB0(void *result)
{
  if (result)
  {
    id v1 = result;
    uint64_t result = sub_1001B9EE4(result);
    if ((_DWORD)result) {
      return (void *)!sub_1001B9FB4(v1);
    }
  }

  return result;
}

void *sub_1001B9EE4(void *result)
{
  if (result)
  {
    id v1 = objc_claimAutoreleasedReturnValue([result host]);
    uint64_t v2 = SCNetworkReachabilityCreateWithName(kCFAllocatorDefault, (const char *)[v1 UTF8String]);

    if (v2)
    {
      if (!SCNetworkReachabilityGetFlags(v2, &flags))
      {
        uint64_t v3 = ASDLogHandleForCategory(19LL);
        id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
        if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)id v5 = 0;
          _os_log_debug_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "Failed to get host reachability flags.",  v5,  2u);
        }
      }

      CFRelease(v2);
      return (void *)((flags >> 1) & 1);
    }

    else
    {
      return 0LL;
    }
  }

  return result;
}

BOOL sub_1001B9FB4(void *a1)
{
  if (!a1) {
    return 0LL;
  }
  uint64_t v20 = 0LL;
  uint64_t v21 = &v20;
  uint64_t v22 = 0x2020000000LL;
  char v23 = 0;
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([a1 host]);
  unsigned __int8 v3 = [v2 isEqualToString:@"localhost"];

  if ((v3 & 1) != 0)
  {
    BOOL v4 = 1LL;
  }

  else
  {
    id v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableURLRequest requestWithURL:](&OBJC_CLASS___NSMutableURLRequest, "requestWithURL:", a1));
    [v5 setHTTPMethod:@"HEAD"];
    dispatch_semaphore_t v6 = dispatch_semaphore_create(0LL);
    v18[0] = 0LL;
    v18[1] = v18;
    v18[2] = 0x3032000000LL;
    v18[3] = sub_1001BA200;
    void v18[4] = sub_1001BA210;
    id v19 = 0LL;
    id v7 = (void *)objc_claimAutoreleasedReturnValue( +[NSURLSessionConfiguration defaultSessionConfiguration]( &OBJC_CLASS___NSURLSessionConfiguration,  "defaultSessionConfiguration"));
    id v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithObject:](&OBJC_CLASS___NSSet, "setWithObject:", @"Accept-Language"));
    objc_msgSend(v7, "set_suppressedAutoAddedHTTPHeaders:", v8);
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue( +[NSURLSession sessionWithConfiguration:]( &OBJC_CLASS___NSURLSession,  "sessionWithConfiguration:",  v7));
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472LL;
    void v14[2] = sub_1001BA218;
    v14[3] = &unk_1003EB098;
    uint64_t v16 = &v20;
    id v17 = v18;
    id v10 = v6;
    uint64_t v15 = v10;
    id v11 = (void *)objc_claimAutoreleasedReturnValue([v9 dataTaskWithRequest:v5 completionHandler:v14]);
    [v11 resume];
    dispatch_time_t v12 = dispatch_time(0LL, 120000000000LL);
    dispatch_semaphore_wait(v10, v12);
    BOOL v4 = *((_BYTE *)v21 + 24) != 0;

    _Block_object_dispose(v18, 8);
  }

  _Block_object_dispose(&v20, 8);
  return v4;
}

void sub_1001BA1C4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

uint64_t sub_1001BA200(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1001BA210(uint64_t a1)
{
}

void sub_1001BA218(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v14 = a3;
  id v6 = a4;
  uint64_t v8 = objc_opt_class(&OBJC_CLASS___NSHTTPURLResponse, v7);
  if ((objc_opt_isKindOfClass(v14, v8) & 1) != 0)
  {
    id v9 = v14;
    id v10 = v9;
    if (!v6)
    {
      if ([v9 expectedContentLength] && objc_msgSend(v10, "statusCode") == (id)200)
      {
        id v6 = 0LL;
        *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = 1;
      }

      else
      {
        id v6 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( NSError,  "errorWithDomain:code:userInfo:",  NSURLErrorDomain,  [v10 statusCode],  0));
      }
    }
  }

  else if (!v6)
  {
    id v6 = 0LL;
    if ([v14 expectedContentLength]) {
      *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = 1;
    }
  }

  uint64_t v11 = *(void *)(*(void *)(a1 + 48) + 8LL);
  dispatch_time_t v12 = *(void **)(v11 + 40);
  *(void *)(v11 + 40) = v6;
  id v13 = v6;

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_1001BA3EC(uint64_t a1, void *a2)
{
  id v3 = a2;
  BOOL v4 = v3;
  if (a1)
  {
    id v5 = *(dispatch_queue_s **)(a1 + 8);
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472LL;
    _DWORD v6[2] = sub_1001BA480;
    v6[3] = &unk_1003E9DC0;
    void v6[4] = a1;
    id v7 = v3;
    dispatch_async(v5, v6);
  }
}

void *sub_1001BA480(void *result)
{
  uint64_t v1 = result[4];
  if (v1) {
    BOOL v2 = result[5] == 0LL;
  }
  else {
    BOOL v2 = 1;
  }
  if (!v2) {
    return objc_msgSend(*(id *)(v1 + 16), "setObject:forKeyedSubscript:", 0);
  }
  return result;
}

void sub_1001BA4A8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = v6;
  if (a1)
  {
    uint64_t v8 = *(dispatch_queue_s **)(a1 + 8);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1001BA558;
    block[3] = &unk_1003E97D0;
    id v10 = v6;
    uint64_t v11 = a1;
    id v12 = v5;
    dispatch_async(v8, block);
  }
}

void sub_1001BA558(void *a1)
{
  if (a1[4])
  {
    objc_msgSend(*(id *)(a1[5] + 16), "setObject:forKeyedSubscript:", a1[6]);
  }

  else
  {
    uint64_t v1 = ASDLogHandleForCategory(14LL);
    BOOL v2 = (os_log_s *)objc_claimAutoreleasedReturnValue(v1);
    if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)id v3 = 0;
      _os_log_error_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_ERROR,  "(URLResponseDecoder) Dropping request properties registered for nil task",  v3,  2u);
    }
  }

void sub_1001BA698(uint64_t a1)
{
  id v20 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) object]);
  uint64_t v3 = objc_opt_class(&OBJC_CLASS___NSDictionary, v2);
  char isKindOfClass = objc_opt_isKindOfClass(v20, v3);
  uint64_t v5 = *(void *)(a1 + 40);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) task]);
  id v7 = v6;
  if ((isKindOfClass & 1) != 0)
  {
    id v8 = v6;
    id v9 = v8;
    id v7 = 0LL;
    if (v5 && v8)
    {
      id v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(v5 + 16) objectForKeyedSubscript:v8]);
      [*(id *)(v5 + 16) setObject:0 forKeyedSubscript:v9];
    }

    if (v7)
    {
      uint64_t v10 = *(void *)(a1 + 40);
      id v11 = v20;
      id v12 = v7;
      id v7 = v12;
      if (v10 && sub_100293F44((uint64_t)v12))
      {
        id v13 = v11;
        id v14 = sub_1001DF0AC(v13, @"keybag");
        uint64_t v15 = (NSData *)objc_claimAutoreleasedReturnValue(v14);
        if (v15
          || (id v17 = sub_1001DF5F4(v13, @"keybag"), (v18 = objc_claimAutoreleasedReturnValue(v17)) != 0)
          && (id v19 = (void *)v18,
              uint64_t v15 = -[NSData initWithBase64EncodedString:options:]( objc_alloc(&OBJC_CLASS___NSData),  "initWithBase64EncodedString:options:",  v18,  0LL),  v19,  v15))
        {
          uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue(+[AMSKeybag sharedInstance](&OBJC_CLASS___AMSKeybag, "sharedInstance"));
          [v16 importKeybagWithData:v15 error:0];
        }
      }
    }
  }

  else if (v5 && v6)
  {
    [*(id *)(v5 + 16) setObject:0 forKeyedSubscript:v6];
  }
}

id sub_1001BA92C(void *a1)
{
  if (a1)
  {
    uint64_t v1 = a1;
    objc_sync_enter(v1);
    uint64_t v3 = (void *)v1[5];
    if (!v3)
    {
      id v4 = objc_getProperty(v1, v2, 32LL, 1);
      if (v4) {
        uint64_t v5 = -[ASDRequestResponse initWithError:](objc_alloc(&OBJC_CLASS___ASDRequestResponse), "initWithError:", v4);
      }
      else {
        uint64_t v5 = objc_alloc_init(&OBJC_CLASS___ASDRequestResponse);
      }
      id v6 = (void *)v1[5];
      v1[5] = v5;

      uint64_t v3 = (void *)v1[5];
    }

    id v7 = [v3 copy];
    objc_sync_exit(v1);
  }

  else
  {
    id v7 = 0LL;
  }

  return v7;
}

void sub_1001BA9E4(_Unwind_Exception *a1)
{
}

void sub_1001BA9FC(void *a1, void *a2)
{
  id v6 = a2;
  if (a1)
  {
    uint64_t v3 = a1;
    objc_sync_enter(v3);
    id v4 = [v6 copy];
    uint64_t v5 = (void *)v3[5];
    void v3[5] = v4;

    objc_sync_exit(v3);
  }
}

void sub_1001BAA64(_Unwind_Exception *a1)
{
}

void sub_1001BAACC(uint64_t a1, void *a2, void *a3)
{
  self = a2;
  id v5 = a3;
  objc_opt_self(a1);
  os_unfair_lock_lock((os_unfair_lock_t)&unk_100463368);
  if (!qword_100463360)
  {
    uint64_t v6 = objc_claimAutoreleasedReturnValue(+[NSMapTable strongToStrongObjectsMapTable](&OBJC_CLASS___NSMapTable, "strongToStrongObjectsMapTable"));
    id v7 = (void *)qword_100463360;
    qword_100463360 = v6;
  }

  id v8 = self;
  if (self)
  {
    id Property = objc_getProperty(self, (SEL)self, 136LL, 1);
    id v8 = self;
    if (Property)
    {
      objc_msgSend((id)qword_100463360, "removeObjectForKey:", objc_getProperty(self, (SEL)self, 136, 1));
      id v8 = self;
    }
  }

  uint64_t v10 = (void *)v8[17];
  v8[17] = v5;
  id v11 = v5;

  objc_msgSend((id)qword_100463360, "setObject:forKey:", self, objc_getProperty(self, v12, 136, 1));
  os_unfair_lock_unlock((os_unfair_lock_t)&unk_100463368);
}

id sub_1001BABD8(id result, const char *a2)
{
  if (result) {
    return objc_getProperty(result, a2, 136LL, 1);
  }
  return result;
}

void sub_1001BABEC(uint64_t a1, void *a2)
{
  self = a2;
  objc_opt_self(a1);
  os_unfair_lock_lock((os_unfair_lock_t)&unk_100463368);
  id v4 = (void *)qword_100463360;
  if (qword_100463360)
  {
    if (self) {
      id Property = objc_getProperty(self, v3, 136LL, 1);
    }
    else {
      id Property = 0LL;
    }
    [v4 removeObjectForKey:Property];
  }

  os_unfair_lock_unlock((os_unfair_lock_t)&unk_100463368);
}

id sub_1001BAC70(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_self(a1);
  os_unfair_lock_lock((os_unfair_lock_t)&unk_100463368);
  if (qword_100463360) {
    id v4 = (void *)objc_claimAutoreleasedReturnValue([(id)qword_100463360 objectForKey:v3]);
  }
  else {
    id v4 = 0LL;
  }
  os_unfair_lock_unlock((os_unfair_lock_t)&unk_100463368);

  return v4;
}

id sub_1001BACE0(id result, const char *a2)
{
  if (result) {
    return objc_getProperty(result, a2, 40LL, 1);
  }
  return result;
}

uint64_t sub_1001BACF4(uint64_t result)
{
  if (result) {
    return *(_BYTE *)(result + 9) & 1;
  }
  return result;
}

id sub_1001BAD04(id result, const char *a2)
{
  if (result) {
    return objc_getProperty(result, a2, 64LL, 1);
  }
  return result;
}

id *sub_1001BADB8(id *a1, void *a2)
{
  id v4 = a2;
  if (a1)
  {
    v7.receiver = a1;
    v7.super_class = (Class)&OBJC_CLASS___UPPManifestItem;
    id v5 = (id *)objc_msgSendSuper2(&v7, "init");
    a1 = v5;
    if (v5) {
      objc_storeStrong(v5 + 1, a2);
    }
  }

  return a1;
}

id sub_1001BAE2C(uint64_t a1)
{
  if (a1)
  {
    id v1 = sub_1001DEC94(*(id *)(a1 + 8), @"assets");
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
    id v3 = sub_1002D64A4(v2);
    id v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
    id v5 = sub_10031D77C(v4, &stru_1003EB0B8);
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  }

  else
  {
    uint64_t v6 = 0LL;
  }

  return v6;
}

id sub_1001BAE9C(id a1, NSDictionary *a2)
{
  uint64_t v2 = a2;
  id v3 = sub_10018B158((id *)objc_alloc(&OBJC_CLASS___UPPManifestAsset), v2);

  return v3;
}

id sub_1001BAEE0(uint64_t a1)
{
  if (a1)
  {
    id v1 = sub_1001BAE2C(a1);
    uint64_t v2 = (NSDictionary *)objc_claimAutoreleasedReturnValue(v1);
    id v3 = sub_1002B8330(v2, &stru_1003EB0F8);
    id v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  }

  else
  {
    id v4 = 0LL;
  }

  return v4;
}

NSCopying *__cdecl sub_1001BAF2C(id a1, UPPManifestAsset *a2)
{
  return (NSCopying *)sub_10018B234((id *)&a2->super.isa);
}

id *sub_1001BAF34(id *a1)
{
  if (a1)
  {
    id v1 = sub_1001DF5F4(a1[1], @"metadata.bundle-identifier");
    a1 = (id *)objc_claimAutoreleasedReturnValue(v1);
  }

  return a1;
}

id *sub_1001BAF5C(id *a1)
{
  if (a1)
  {
    id v1 = sub_1001DF5F4(a1[1], @"metadata.bundle-version");
    a1 = (id *)objc_claimAutoreleasedReturnValue(v1);
  }

  return a1;
}

id sub_1001BAF84(uint64_t a1)
{
  else {
    return 0LL;
  }
}

id *sub_1001BAFA8(id *a1)
{
  if (a1)
  {
    id v1 = sub_1001DF5F4(a1[1], @"metadata.kind");
    a1 = (id *)objc_claimAutoreleasedReturnValue(v1);
  }

  return a1;
}

id sub_1001BAFD0(uint64_t a1)
{
  else {
    return 0LL;
  }
}

id *sub_1001BAFF4(id *a1)
{
  if (a1)
  {
    id v1 = sub_1001DF5F4(a1[1], @"metadata.platform-identifier");
    a1 = (id *)objc_claimAutoreleasedReturnValue(v1);
  }

  return a1;
}

id *sub_1001BB01C(id *a1)
{
  if (a1)
  {
    id v1 = sub_1001DF5F4(a1[1], @"metadata.subtitle");
    a1 = (id *)objc_claimAutoreleasedReturnValue(v1);
  }

  return a1;
}

id sub_1001BB044(uint64_t a1)
{
  if (a1)
  {
    id v1 = sub_1001DEC94(*(id *)(a1 + 8), @"thinned-assets");
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
    id v3 = sub_1002D64A4(v2);
    id v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
    id v5 = sub_10031D77C(v4, &stru_1003EB118);
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  }

  else
  {
    uint64_t v6 = 0LL;
  }

  return v6;
}

id sub_1001BB0B4(id a1, NSDictionary *a2)
{
  uint64_t v2 = a2;
  id v3 = sub_10018B158((id *)objc_alloc(&OBJC_CLASS___UPPManifestAsset), v2);

  return v3;
}

id sub_1001BB0F8(uint64_t a1)
{
  if (a1)
  {
    id v1 = sub_1001BB044(a1);
    uint64_t v2 = (NSDictionary *)objc_claimAutoreleasedReturnValue(v1);
    id v3 = sub_1002B8330(v2, &stru_1003EB138);
    id v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  }

  else
  {
    id v4 = 0LL;
  }

  return v4;
}

NSCopying *__cdecl sub_1001BB144(id a1, UPPManifestAsset *a2)
{
  return (NSCopying *)sub_10018B234((id *)&a2->super.isa);
}

id sub_1001BB14C(uint64_t a1)
{
  if (!a1) {
    return 0LL;
  }
  id v1 = sub_1001BAE2C(a1);
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  uint64_t v6 = 0LL;
  objc_super v7 = &v6;
  uint64_t v8 = 0x3032000000LL;
  id v9 = sub_1001BB22C;
  uint64_t v10 = sub_1001BB23C;
  id v11 = 0LL;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  void v5[2] = sub_1001BB244;
  _DWORD v5[3] = &unk_1003EB160;
  void v5[4] = &v6;
  [v2 enumerateObjectsUsingBlock:v5];
  id v3 = (id)v7[5];
  _Block_object_dispose(&v6, 8);

  return v3;
}

void sub_1001BB214( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_1001BB22C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1001BB23C(uint64_t a1)
{
}

void sub_1001BB244(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  id v13 = a2;
  uint64_t v6 = sub_10018B234(v13);
  objc_super v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
  unsigned int v8 = [v7 isEqualToString:@"software-receipt"];

  if (v8)
  {
    id v9 = sub_10018B1CC(v13);
    uint64_t v10 = objc_claimAutoreleasedReturnValue(v9);
    uint64_t v11 = *(void *)(*(void *)(a1 + 32) + 8LL);
    SEL v12 = *(void **)(v11 + 40);
    *(void *)(v11 + 40) = v10;

    *a4 = 1;
  }
}

id *sub_1001BB2CC(id *a1)
{
  if (a1)
  {
    id v1 = sub_1001DF5F4(a1[1], @"metadata.title");
    a1 = (id *)objc_claimAutoreleasedReturnValue(v1);
  }

  return a1;
}

void *sub_1001BB300(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc((Class)objc_opt_self(a1));
  id v5 = sub_1001BB344(v4, v3);

  return v5;
}

void *sub_1001BB344(void *a1, void *a2)
{
  id v4 = a2;
  if (a1)
  {
    v9.receiver = a1;
    v9.super_class = (Class)&OBJC_CLASS___ExpensiveNetworkEvaluator;
    id v5 = objc_msgSendSuper2(&v9, "init");
    a1 = v5;
    if (v5)
    {
      objc_storeStrong((id *)v5 + 2, a2);
      uint64_t v6 = objc_claimAutoreleasedReturnValue(+[ASDCellularSettings settingsForIdentity:](&OBJC_CLASS___ASDCellularSettings, "settingsForIdentity:", v4));
      objc_super v7 = (void *)a1[3];
      a1[3] = v6;
    }
  }

  return a1;
}

uint64_t sub_1001BB3D8(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    uint64_t v4 = ASDLogHandleForCategory(10LL);
    id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      if (v3)
      {
        id v7 = objc_getProperty(v3, v6, 32LL, 1);
        unsigned int v8 = (os_log_s *)v3[2];
        int v9 = v3[1] & 1;
        id v10 = v7;
      }

      else
      {
        unsigned int v8 = 0LL;
        id v7 = 0LL;
        id v10 = 0LL;
        int v9 = 0;
      }

      *(_DWORD *)__int128 buf = 138412802;
      id v51 = v10;
      __int16 v52 = 2048;
      __int128 v53 = v8;
      __int16 v54 = 1024;
      int v55 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "[%@]: Evaluating download, size = %{iec-bytes}llu automatic = %d",  buf,  0x1Cu);
    }

    unsigned __int8 v11 = [*(id *)(a1 + 24) allowAutomaticDownloads];
    if (v3)
    {
      char v12 = (v3[1] & 1) != 0 ? v11 : 1;
      if ((v12 & 1) == 0)
      {
        uint64_t v19 = ASDLogHandleForCategory(10LL);
        id v20 = (os_log_s *)objc_claimAutoreleasedReturnValue(v19);
        if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
        {
          id v22 = objc_getProperty(v3, v21, 32LL, 1);
          *(_DWORD *)__int128 buf = 138412290;
          id v51 = v22;
          char v23 = "[%@]: Implicitly denied - automatic downloads are disabled";
LABEL_29:
          _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, v23, buf, 0xCu);
LABEL_30:
        }

OSVersion *sub_1001BBA24(uint64_t a1)
{
  id v1 = objc_alloc(&OBJC_CLASS___OSVersion);
  if (v1)
  {
    v3.receiver = v1;
    v3.super_class = (Class)&OBJC_CLASS___OSVersion;
    id v1 = (OSVersion *)objc_msgSendSuper2(&v3, "init");
    if (v1)
    {
      v1->_version.major = 0LL;
      v1->_version.minor = 0LL;
      v1->_version.patch = 0LL;
    }
  }

  return v1;
}

char *sub_1001BBA78(char *a1, uint64_t a2)
{
  if (!a1) {
    return 0LL;
  }
  uint64_t v2 = a1;
  __int128 v9 = 0uLL;
  uint64_t v10 = 0LL;
  objc_super v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSScanner scannerWithString:](&OBJC_CLASS___NSScanner, "scannerWithString:", a2));
  if ([v3 scanInteger:&v9]
    && (([v3 scanString:@"." intoString:0] & 1) == 0
     || [v3 scanInteger:(char *)&v9 + 8]
     && (([v3 scanString:@"." intoString:0] & 1) == 0
      || [v3 scanInteger:&v10])))
  {
    v11.receiver = v2;
    v11.super_class = (Class)&OBJC_CLASS___OSVersion;
    uint64_t v4 = (char *)objc_msgSendSuper2(&v11, "init", v9, v10);
    if (v4)
    {
      *(_OWORD *)(v4 + _Block_object_dispose(va, 8) = v7;
      *((void *)v4 + 3) = v8;
    }

    uint64_t v2 = v4;
    id v5 = v2;
  }

  else
  {
    id v5 = 0LL;
  }

  return v5;
}

uint64_t sub_1001BBC40(uint64_t a1, void *a2)
{
  objc_super v3 = a2;
  if (a1)
  {
    uint64_t v4 = *(void *)(a1 + 8);
    uint64_t v5 = v3[1];
    if (v4 < v5)
    {
LABEL_5:
      a1 = -1LL;
      goto LABEL_8;
    }

    if (v4 > v5) {
      goto LABEL_7;
    }
    uint64_t v6 = *(void *)(a1 + 16);
    uint64_t v7 = v3[2];
    if (v6 < v7) {
      goto LABEL_5;
    }
    if (v6 > v7)
    {
LABEL_7:
      a1 = 1LL;
      goto LABEL_8;
    }

    uint64_t v9 = *(void *)(a1 + 24);
    uint64_t v10 = v3[3];
    BOOL v11 = v9 < v10;
    BOOL v12 = v9 > v10;
    if (v11) {
      a1 = -1LL;
    }
    else {
      a1 = v12;
    }
  }

id *sub_1001BBD78(id *a1, void *a2, void *a3)
{
  id v6 = a2;
  id v7 = a3;
  if (a1)
  {
    uint64_t v8 = [a1 init];
    a1 = v8;
    if (v8)
    {
      objc_storeStrong(v8 + 1, a2);
      objc_storeStrong(a1 + 4, a3);
      uint64_t v9 = objc_alloc_init(&OBJC_CLASS___TaskQueue);
      id v10 = a1[6];
      a1[6] = v9;
    }
  }

  return a1;
}

id sub_1001BC1E8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  objc_opt_self(a1);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 canonicalExecutablePath]);

  id v8 = v7;
  id v9 = [v8 fileSystemRepresentation];

  if (os_variant_has_internal_content("com.apple.appstored")
    && [v5 fairplayStatus])
  {
    id v9 = [v5 fairplayStatus];
  }

  else if (v9)
  {
    id v10 = (void *)objc_claimAutoreleasedReturnValue(+[ACAccountStore ams_sharedAccountStore](&OBJC_CLASS___ACAccountStore, "ams_sharedAccountStore"));
    BOOL v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "ams_activeiTunesAccount"));
    BOOL v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "ams_DSID"));

    [v12 longLongValue];
    sub_100128300();
    id v9 = v13;
  }

  return v9;
}

uint64_t sub_1001BC480(uint64_t a1)
{
  if (!a1) {
    return 0LL;
  }
  if (os_variant_has_internal_content("com.apple.appstored"))
  {
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) valueForKey:@"forceUpsell"]);
    unsigned int v3 = [v2 BOOLValue];

    uint64_t v4 = *(void **)(a1 + 32);
    if (v3)
    {
      if ([v4 isBackground])
      {
        uint64_t v5 = ASDLogHandleForCategory(28LL);
        id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
        if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
        {
          id v7 = (void *)objc_claimAutoreleasedReturnValue([(id)a1 logKey]);
          *(_DWORD *)__int128 buf = 138412290;
          unint64_t v130 = v7;
          id v8 = "[%@] Not displaying forced upsell dialog for background repair";
LABEL_43:
          _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, v8, buf, 0xCu);

          goto LABEL_44;
        }

        goto LABEL_44;
      }

      sub_1001BD3D8((id *)a1);
      return 0LL;
    }

    id v9 = (void *)objc_claimAutoreleasedReturnValue([v4 valueForKey:@"forceRevoke"]);
    unsigned int v10 = [v9 BOOLValue];

    if (v10)
    {
      if ([*(id *)(a1 + 32) isBackground])
      {
        uint64_t v11 = ASDLogHandleForCategory(28LL);
        id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
        if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
        {
          id v7 = (void *)objc_claimAutoreleasedReturnValue([(id)a1 logKey]);
          *(_DWORD *)__int128 buf = 138412290;
          unint64_t v130 = v7;
          id v8 = "[%@] Not displaying forced revoked dialog for background repair";
          goto LABEL_43;
        }

LABEL_75:
      sub_1001BDB7C((void *)a1);
      goto LABEL_76;
    }

LABEL_79:
    if (*(void *)&v48 == 1LL)
    {
      id v81 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
      [v81 timeIntervalSinceReferenceDate];
      double v83 = v82;
      double v84 = *(double *)(a1 + 40);

      uint64_t v85 = ASDLogHandleForCategory(28LL);
      __int16 v86 = (os_log_s *)objc_claimAutoreleasedReturnValue(v85);
      if (os_log_type_enabled(v86, OS_LOG_TYPE_DEFAULT))
      {
        id v87 = (void *)objc_claimAutoreleasedReturnValue([(id)a1 logKey]);
        *(_DWORD *)__int128 buf = 138412546;
        unint64_t v130 = v87;
        __int16 v131 = 2048;
        double v132 = v83 - v84;
        _os_log_impl( (void *)&_mh_execute_header,  v86,  OS_LOG_TYPE_DEFAULT,  "[%@] Subscription bag was repaired with elapsedTime: %f",  buf,  0x16u);
      }

      unsigned int v88 = sub_1001BC1E8((uint64_t)&OBJC_CLASS___ArcadeRepair, *(void **)(a1 + 8), 0LL);
      if (!v88) {
        goto LABEL_103;
      }
      signed int v89 = v88;
      __int16 v90 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 8) purchaserDSID]);
      unsigned __int8 v91 = [v90 isEqualToNumber:v25];

      uint64_t v92 = ASDLogHandleForCategory(28LL);
      uint64_t v93 = (os_log_s *)objc_claimAutoreleasedReturnValue(v92);
      id v94 = v93;
      if ((v91 & 1) != 0)
      {
        if (os_log_type_enabled(v93, OS_LOG_TYPE_ERROR))
        {
          uint64_t v122 = (void *)objc_claimAutoreleasedReturnValue([(id)a1 logKey]);
          double v123 = COERCE_DOUBLE(objc_claimAutoreleasedReturnValue([*(id *)(a1 + 8) purchaserDSID]));
          double v124 = COERCE_DOUBLE(objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "ams_DSID")));
          *(_DWORD *)__int128 buf = 138413058;
          unint64_t v130 = v122;
          __int16 v131 = 2114;
          double v132 = v123;
          __int16 v133 = 2114;
          double v134 = v124;
          __int16 v135 = 2048;
          uint64_t v136 = v89;
          _os_log_error_impl( (void *)&_mh_execute_header,  v94,  OS_LOG_TYPE_ERROR,  "[%@] App was not repaired following subscription repair with app accountID: %{public}@ currentAccountID: %{p ublic}@ status: %ld",  buf,  0x2Au);
        }

LABEL_103:
        unsigned __int8 v115 = [*(id *)(a1 + 32) isBackground];
        uint64_t v116 = ASDLogHandleForCategory(28LL);
        id v117 = (os_log_s *)objc_claimAutoreleasedReturnValue(v116);
        BOOL v118 = os_log_type_enabled(v117, OS_LOG_TYPE_DEFAULT);
        if ((v115 & 1) != 0)
        {
          if (v118)
          {
            BOOL v119 = (void *)objc_claimAutoreleasedReturnValue([(id)a1 logKey]);
            *(_DWORD *)__int128 buf = 138412290;
            unint64_t v130 = v119;
            _os_log_impl( (void *)&_mh_execute_header,  v117,  OS_LOG_TYPE_DEFAULT,  "[%@] Not attempting to relauch app following sucessful background repair",  buf,  0xCu);
          }
        }

        else
        {
          if (v118)
          {
            __int128 v120 = (void *)objc_claimAutoreleasedReturnValue([(id)a1 logKey]);
            *(_DWORD *)__int128 buf = 138412290;
            unint64_t v130 = v120;
            _os_log_impl( (void *)&_mh_execute_header,  v117,  OS_LOG_TYPE_DEFAULT,  "[%@] Attempting to relauch app following sucessful repair",  buf,  0xCu);
          }

          id v117 = (os_log_s *)objc_claimAutoreleasedReturnValue([(id)a1 delegate]);
          -[os_log_s repair:wantsToRelaunchApplication:]( v117,  "repair:wantsToRelaunchApplication:",  a1,  *(void *)(a1 + 8));
        }

        uint8_t v103 = 1;
        goto LABEL_95;
      }

      if (os_log_type_enabled(v93, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v110 = (void *)objc_claimAutoreleasedReturnValue([(id)a1 logKey]);
        double v111 = COERCE_DOUBLE(objc_claimAutoreleasedReturnValue([*(id *)(a1 + 8) purchaserDSID]));
        double v112 = COERCE_DOUBLE(objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "ams_DSID")));
        *(_DWORD *)__int128 buf = 138412802;
        unint64_t v130 = v110;
        __int16 v131 = 2114;
        double v132 = v111;
        __int16 v133 = 2114;
        double v134 = v112;
        _os_log_impl( (void *)&_mh_execute_header,  v94,  OS_LOG_TYPE_DEFAULT,  "[%@] Attempting to update SINF from account: %{public}@ to account: %{public}@",  buf,  0x20u);
      }

      uint64_t v113 = (void *)objc_claimAutoreleasedReturnValue([v22 username]);
      int v114 = sub_1001BDE88(a1, v113, v22);

      if (v114) {
        goto LABEL_103;
      }
LABEL_94:
      uint8_t v103 = 0;
LABEL_95:
      buf[0] = v103;
      goto LABEL_96;
    }

      if (![v21 conformsToProtocol:&OBJC_PROTOCOL___IXCoordinatorWithInitialODRAssetPromises]) {
        goto LABEL_111;
      }
      if ((uint64_t)sub_1001E2698(self->_install, (uint64_t)@"initial_odr_size") >= 1)
      {
        uint64_t v113 = self->super._error;
        unint64_t v183 = 0LL;
        int v114 = sub_100324100(v113, &v183);
        id v107 = (id)objc_claimAutoreleasedReturnValue(v114);
        unsigned __int8 v115 = (LSApplicationRecord *)v183;
        if (!v115)
        {
          unint64_t v128 = sub_1001FED8C((uint64_t)&OBJC_CLASS___ODRInstallContext, v107);
          id v129 = (_BYTE *)objc_claimAutoreleasedReturnValue(v128);
          unint64_t v130 = sub_1001E26D0(self->super._error, (uint64_t)@"log_code");
          __int16 v131 = (void *)objc_claimAutoreleasedReturnValue(v130);
          double v132 = [v131 isEqualToString:@"APR"];
          if (v129) {
            v129[16] = v132;
          }

          __int16 v133 = sub_1001E26D0(self->super._error, (uint64_t)@"client_id");
          __int16 v135 = (void *)objc_claimAutoreleasedReturnValue(v133);
          if (v129) {
            objc_setProperty_atomic_copy(v129, v134, v135, 80LL);
          }

          uint64_t v136 = (void *)objc_claimAutoreleasedReturnValue([v21 uniqueIdentifier]);
          id v138 = v136;
          if (v129)
          {
            objc_setProperty_atomic_copy(v129, v137, v136, 40LL);

            v129[19] = self->_package != 0LL;
          }

          else
          {
          }

          unint64_t v139 = sub_1001E26D0(self->_install, (uint64_t)@"variant_id");
          unsigned __int8 v141 = (void *)objc_claimAutoreleasedReturnValue(v139);
          if (v129) {
            objc_setProperty_atomic_copy(v129, v140, v141, 96LL);
          }

          id v142 = ASDLogHandleForCategory(2LL);
          unint64_t v143 = (os_log_s *)objc_claimAutoreleasedReturnValue(v142);
          if (os_log_type_enabled(v143, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v145 = (void *)self->_automaticType;
            uint64_t v146 = v14;
            if (v145) {
              uint64_t v145 = objc_getProperty(v145, v144, 80LL, 1);
            }
            unint64_t v147 = v22;
            __int128 v149 = v145;
            uint64_t v150 = v21;
            if (v129) {
              uint64_t v151 = objc_getProperty(v129, v148, 64LL, 1);
            }
            else {
              uint64_t v151 = 0LL;
            }
            uint64_t v152 = (LSApplicationRecord *)v151;
            *(_DWORD *)__int128 buf = 138412546;
            *(void *)&uint8_t buf[4] = v149;
            id v190 = 2114;
            id v191 = v152;
            _os_log_impl( (void *)&_mh_execute_header,  v143,  OS_LOG_TYPE_DEFAULT,  "[%@] Checking for initial/prefetch downloads with key %{public}@",  buf,  0x16u);

            uint64_t v21 = v150;
            id v22 = v147;
            unsigned int v14 = v146;
          }

          id v153 = sub_10030F240((uint64_t)&OBJC_CLASS___ODRDownloadManager);
          __int128 v154 = (void *)objc_claimAutoreleasedReturnValue(v153);
          sub_100313384((uint64_t)v154, v129);

LABEL_110:
LABEL_111:
          if ([v21 conformsToProtocol:&OBJC_PROTOCOL___IXCoordinatorWithDeviceSecurityPromise])
          {
            __int128 v182 = v22;
            __int128 v155 = sub_1001E5888(v21, &v182);
            uint64_t v56 = v182;

            if ((v155 & 1) == 0)
            {
              SEL v163 = sub_1002CD610( (uint64_t)&OBJC_CLASS___AppInstallPreambleResponse,  -[NSError databaseID](self->super._error, "databaseID"),  v21,  v56);
              BOOL v58 = objc_claimAutoreleasedReturnValue(v163);
              goto LABEL_32;
            }

            id v22 = v56;
          }

          goto LABEL_114;
        }

        uint64_t v116 = v115;
        id v117 = ASDLogHandleForCategory(2LL);
        BOOL v118 = (os_log_s *)objc_claimAutoreleasedReturnValue(v117);
        if (os_log_type_enabled(v118, OS_LOG_TYPE_ERROR))
        {
          uint64_t v177 = (void *)self->_automaticType;
          if (v177) {
            uint64_t v177 = objc_getProperty(v177, v119, 80LL, 1);
          }
          unsigned __int8 v178 = v177;
          *(_DWORD *)__int128 buf = 138412546;
          *(void *)&uint8_t buf[4] = v178;
          id v190 = 2114;
          id v191 = v116;
          _os_log_error_impl( (void *)&_mh_execute_header,  v118,  OS_LOG_TYPE_ERROR,  "[%@] Error getting store metadata: %{public}@",  buf,  0x16u);
        }
      }

      *(void *)__int128 buf = 0LL;
      __int128 v120 = sub_1001E56E8(v21, buf);
      id v107 = *(id *)buf;
      if ((v120 & 1) == 0)
      {
        id v121 = sub_1002CD5AC( (uint64_t)&OBJC_CLASS___AppInstallPreambleResponse,  -[NSError databaseID](self->super._error, "databaseID"),  v107);
        unsigned __int8 v41 = (id *)objc_claimAutoreleasedReturnValue(v121);
LABEL_137:

        goto LABEL_33;
      }

      goto LABEL_110;
    }

LABEL_87:
    uint64_t v95 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
    [v95 timeIntervalSinceReferenceDate];
    double v97 = v96;
    double v98 = *(double *)(a1 + 40);

    uint64_t v99 = ASDLogHandleForCategory(28LL);
    id v100 = (os_log_s *)objc_claimAutoreleasedReturnValue(v99);
    if (os_log_type_enabled(v100, OS_LOG_TYPE_ERROR))
    {
      uint64_t v109 = (void *)objc_claimAutoreleasedReturnValue([(id)a1 logKey]);
      *(_DWORD *)__int128 buf = 138412802;
      unint64_t v130 = v109;
      __int16 v131 = 2048;
      double v132 = v48;
      __int16 v133 = 2048;
      double v134 = v97 - v98;
      _os_log_error_impl( (void *)&_mh_execute_header,  v100,  OS_LOG_TYPE_ERROR,  "[%@] Failed to repair subscription. Launching app store. Status: %ld elapsedTime: %f",  buf,  0x20u);
    }

    if ([*(id *)(a1 + 32) isBackground])
    {
      uint64_t v101 = ASDLogHandleForCategory(28LL);
      uint64_t v102 = (os_log_s *)objc_claimAutoreleasedReturnValue(v101);
      if (os_log_type_enabled(v102, OS_LOG_TYPE_ERROR))
      {
        id v121 = (void *)objc_claimAutoreleasedReturnValue([(id)a1 logKey]);
        *(_DWORD *)__int128 buf = 138412290;
        unint64_t v130 = v121;
        _os_log_error_impl( (void *)&_mh_execute_header,  v102,  OS_LOG_TYPE_ERROR,  "[%@] Not showing upsell following failed background repair",  buf,  0xCu);
      }
    }

    else
    {
      sub_1001BD3D8((id *)a1);
    }

    goto LABEL_94;
  }

  uint64_t v65 = ASDLogHandleForCategory(28LL);
  uint64_t v66 = (os_log_s *)objc_claimAutoreleasedReturnValue(v65);
  if (os_log_type_enabled(v66, OS_LOG_TYPE_DEFAULT))
  {
    id v67 = (void *)objc_claimAutoreleasedReturnValue([(id)a1 logKey]);
    *(_DWORD *)__int128 buf = 138412546;
    unint64_t v130 = v67;
    __int16 v131 = 2114;
    double v132 = v29;
    _os_log_impl( (void *)&_mh_execute_header,  v66,  OS_LOG_TYPE_DEFAULT,  "[%@] Exiting due to non-recoverable sbsync error: %{public}@",  buf,  0x16u);
  }

  buf[0] = 0;
LABEL_96:

  if (buf[0] != 1) {
    return 0LL;
  }
  id v104 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 8) bundleID]);

  if (!v104) {
    return 1LL;
  }
  id v105 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 8) bundleID]);
  unint64_t v128 = v105;
  uint64_t v45 = 1LL;
  id v106 = (id)objc_claimAutoreleasedReturnValue( +[NSArray arrayWithObjects:count:]( &OBJC_CLASS___NSArray,  "arrayWithObjects:count:",  &v128,  1LL));
  os_unfair_lock_lock_with_options(a1 + 20, 0x10000LL);
  id v107 = [v106 copy];

  unint64_t v108 = *(void **)(a1 + 64);
  *(void *)(a1 + 64) = v107;

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 20));
  return v45;
}

void sub_1001BD3D8(id *a1)
{
  id v2 = sub_1002A4FE0((uint64_t)&OBJC_CLASS___OcelotManager);

  unsigned int v3 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithLongLong:]( NSNumber,  "numberWithLongLong:",  [a1[1] storeItemID]));
  uint64_t v4 = ASDLogHandleForCategory(28LL);
  uint64_t v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue([a1 logKey]);
    *(_DWORD *)__int128 buf = 138412290;
    id v18 = v6;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "[%@] Showing subscription offer", buf, 0xCu);
  }

  id v7 = (void *)objc_claimAutoreleasedReturnValue([a1[4] relaunchOptions]);
  id v8 = [v7 copy];

  dispatch_queue_global_t global_queue = dispatch_get_global_queue(21LL, 0LL);
  unsigned int v10 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1001BE594;
  block[3] = &unk_1003E97D0;
  id v14 = v3;
  id v15 = v8;
  unsigned int v16 = a1;
  id v11 = v8;
  id v12 = v3;
  dispatch_async(v10, block);
}

void sub_1001BD56C(id *a1)
{
  uint64_t v2 = ASDLogHandleForCategory(28LL);
  unsigned int v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([a1 logKey]);
    *(_DWORD *)__int128 buf = 138412290;
    uint64_t v37 = v4;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "[%@] Showing dialog for app removed from arcade",  buf,  0xCu);
  }

  uint64_t v5 = ASDLocalizedString(@"OCELOT_APP_NO_LONGER_AVAILABLE_%@");
  id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([a1[1] localizedName]);
  id v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", v6, v7));

  id v9 = objc_alloc(&OBJC_CLASS___AMSDialogRequest);
  uint64_t v10 = ASDLocalizedString(@"OCELOT_OPEN_APP_STORE");
  id v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
  id v12 = -[AMSDialogRequest initWithTitle:message:](v9, "initWithTitle:message:", v8, v11);

  uint64_t v13 = ASDLocalizedString(@"CANCEL");
  id v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
  id v15 = (void *)objc_claimAutoreleasedReturnValue( +[AMSDialogAction actionWithTitle:style:]( &OBJC_CLASS___AMSDialogAction,  "actionWithTitle:style:",  v14,  2LL));

  uint64_t v16 = ASDLocalizedString(@"OPEN");
  uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
  id v18 = (void *)objc_claimAutoreleasedReturnValue( +[AMSDialogAction actionWithTitle:style:]( &OBJC_CLASS___AMSDialogAction,  "actionWithTitle:style:",  v17,  0LL));

  v35[0] = v15;
  v35[1] = v18;
  uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v35, 2LL));
  -[AMSDialogRequest setButtonActions:](v12, "setButtonActions:", v19);

  -[AMSDialogRequest setDefaultAction:](v12, "setDefaultAction:", v18);
  id v20 = sub_100277E88((uint64_t)&OBJC_CLASS___InteractiveRequestPresenter, v12, 0LL);
  uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue(v20);
  id v22 = (void *)objc_claimAutoreleasedReturnValue([v21 selectedActionIdentifier]);
  char v23 = (void *)objc_claimAutoreleasedReturnValue([v18 identifier]);
  unsigned int v24 = [v22 isEqualToString:v23];

  if (v24)
  {
    uint64_t v25 = ASDLogHandleForCategory(28LL);
    id v26 = (os_log_s *)objc_claimAutoreleasedReturnValue(v25);
    if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue([a1 logKey]);
      *(_DWORD *)__int128 buf = 138412290;
      uint64_t v37 = v27;
      _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_DEFAULT,  "[%@] Launching App Store after app removed",  buf,  0xCu);
    }

    BOOL v28 = (void *)objc_claimAutoreleasedReturnValue([a1[4] relaunchOptions]);
    id v29 = [v28 copy];

    dispatch_queue_global_t global_queue = dispatch_get_global_queue(21LL, 0LL);
    double v31 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1001BDF88;
    block[3] = &unk_1003E9DC0;
    void block[4] = a1;
    id v34 = v29;
    id v32 = v29;
    dispatch_async(v31, block);
  }
}

void sub_1001BD8C8(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  if (v1)
  {
    uint64_t v2 = ASDLogHandleForCategory(28LL);
    unsigned int v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v1 logKey]);
      LODWORD(v22) = 138412290;
      *(void *)((char *)&v22 + 4) = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "[%@] Sign in required to play arcade games",  (uint8_t *)&v22,  0xCu);
    }

    uint64_t v5 = objc_alloc(&OBJC_CLASS___AMSDialogRequest);
    uint64_t v6 = ASDLocalizedString(@"SIGN_IN_TO_APP_STORE_TITLE");
    id v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
    uint64_t v8 = ASDLocalizedString(@"OCELOT_SIGN_IN_MESSAGE");
    id v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
    uint64_t v10 = -[AMSDialogRequest initWithTitle:message:](v5, "initWithTitle:message:", v7, v9);

    if (sub_10027362C((uint64_t)&OBJC_CLASS___Restrictions)
      || +[AMSDevice deviceIsMac](&OBJC_CLASS___AMSDevice, "deviceIsMac"))
    {
      uint64_t v11 = ASDLocalizedString(@"CANCEL");
      id v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
      uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue( +[AMSDialogAction actionWithTitle:style:]( &OBJC_CLASS___AMSDialogAction,  "actionWithTitle:style:",  v12,  2LL));

      uint64_t v14 = ASDLocalizedString(@"OCELOT_SIGN_IN_SIGN_IN_BUTTON");
      id v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
      uint64_t v16 = objc_claimAutoreleasedReturnValue( +[AMSDialogAction actionWithTitle:style:]( &OBJC_CLASS___AMSDialogAction,  "actionWithTitle:style:",  v15,  0LL));

      v27[0] = v13;
      v27[1] = v16;
      uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v27, 2LL));
      id v18 = (void *)v16;
    }

    else
    {
      uint64_t v19 = ASDLocalizedString(@"CANCEL");
      id v20 = (void *)objc_claimAutoreleasedReturnValue(v19);
      uint64_t v16 = objc_claimAutoreleasedReturnValue( +[AMSDialogAction actionWithTitle:style:]( &OBJC_CLASS___AMSDialogAction,  "actionWithTitle:style:",  v20,  2LL));

      v27[0] = v16;
      uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v27, 1LL));
      id v18 = 0LL;
      uint64_t v13 = (void *)v16;
    }

    -[AMSDialogRequest setButtonActions:](v10, "setButtonActions:", v17);

    -[AMSDialogRequest setDefaultAction:](v10, "setDefaultAction:", v16);
    *(void *)&__int128 v22 = _NSConcreteStackBlock;
    *((void *)&v22 + 1) = 3221225472LL;
    char v23 = sub_1001BE0E4;
    unsigned int v24 = &unk_1003EB190;
    id v25 = v18;
    id v26 = v1;
    id v21 = v18;
    sub_10027808C((uint64_t)&OBJC_CLASS___InteractiveRequestPresenter, v10, &v22);
  }

void sub_1001BDB7C(void *a1)
{
  uint64_t v2 = ASDLocalizedString(@"REPAIR_APP_TIMEOUT_DIALOG_TITLE");
  unsigned int v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSString localizedStringWithFormat:](&OBJC_CLASS___NSString, "localizedStringWithFormat:", v3));
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue( +[AMSDialogRequest requestWithTitle:message:]( &OBJC_CLASS___AMSDialogRequest,  "requestWithTitle:message:",  v4,  0LL));

  uint64_t v6 = ASDLocalizedString(@"CANCEL");
  id v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSString localizedStringWithFormat:](&OBJC_CLASS___NSString, "localizedStringWithFormat:", v7));
  id v9 = (void *)objc_claimAutoreleasedReturnValue( +[AMSDialogAction actionWithTitle:style:]( &OBJC_CLASS___AMSDialogAction,  "actionWithTitle:style:",  v8,  0LL));

  uint64_t v10 = ASDLocalizedString(@"TRY_AGAIN");
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
  id v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSString localizedStringWithFormat:](&OBJC_CLASS___NSString, "localizedStringWithFormat:", v11));
  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue( +[AMSDialogAction actionWithTitle:style:]( &OBJC_CLASS___AMSDialogAction,  "actionWithTitle:style:",  v12,  2LL));

  v32[0] = v9;
  v32[1] = v13;
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v32, 2LL));
  [v5 setButtonActions:v14];

  [v5 setDefaultAction:v9];
  id v15 = sub_100277E88((uint64_t)&OBJC_CLASS___InteractiveRequestPresenter, v5, 0LL);
  uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
  uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([v16 selectedActionIdentifier]);
  id v18 = (void *)objc_claimAutoreleasedReturnValue([v13 identifier]);
  unsigned int v19 = [v17 isEqualToString:v18];

  if (v19)
  {
    id v20 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
    [v20 timeIntervalSinceReferenceDate];
    a1[5] = v21;

    uint64_t v22 = ASDLogHandleForCategory(28LL);
    char v23 = (os_log_s *)objc_claimAutoreleasedReturnValue(v22);
    if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
    {
      unsigned int v24 = (void *)objc_claimAutoreleasedReturnValue([a1 logKey]);
      int v28 = 138412546;
      id v29 = v24;
      __int16 v30 = 2048;
      uint64_t v31 = 0LL;
      _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEFAULT,  "[%@] Retry following timeout attempting to repair with timeout: %f",  (uint8_t *)&v28,  0x16u);
    }

    sub_1001BC480(a1);
  }

  else
  {
    uint64_t v25 = ASDLogHandleForCategory(28LL);
    id v26 = (os_log_s *)objc_claimAutoreleasedReturnValue(v25);
    if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue([a1 logKey]);
      int v28 = 138412290;
      id v29 = v27;
      _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_DEFAULT,  "[%@] Canceling following timeout attempting to repair",  (uint8_t *)&v28,  0xCu);
    }
  }
}

uint64_t sub_1001BDE88(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  id v7 = sub_1002F2054((id *)objc_alloc(&OBJC_CLASS___SwitchAppOwnerTask), v5, v6, *(void **)(a1 + 8));

  uint64_t v8 = *(void *)(a1 + 48);
  id v12 = v7;
  id v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v12, 1LL));
  if (v8) {
    [*(id *)(v8 + 8) addOperations:v9 waitUntilFinished:1];
  }

  if (v7) {
    uint64_t v10 = (_BYTE)v7[3] & 1;
  }
  else {
    uint64_t v10 = 0LL;
  }

  return v10;
}

void sub_1001BDF88(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  if (v1)
  {
    id v2 = *(id *)(a1 + 40);
    unsigned int v3 = (void *)objc_claimAutoreleasedReturnValue( +[NSURL URLWithString:]( &OBJC_CLASS___NSURL,  "URLWithString:",  @"com.apple.Arcade://?action=arcade"));
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[LSApplicationWorkspace defaultWorkspace](&OBJC_CLASS___LSApplicationWorkspace, "defaultWorkspace"));
    id v9 = 0LL;
    [v4 openURL:v3 withOptions:v2 error:&v9];

    id v5 = v9;
    if (v5)
    {
      uint64_t v6 = ASDLogHandleForCategory(28LL);
      id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      {
        uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v1 logKey]);
        *(_DWORD *)__int128 buf = 138412802;
        uint64_t v11 = v8;
        __int16 v12 = 2114;
        uint64_t v13 = @"com.apple.Arcade://?action=arcade";
        __int16 v14 = 2114;
        id v15 = v5;
        _os_log_error_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_ERROR,  "[%@] Error launching App Store with url: %{public}@ error: %{public}@",  buf,  0x20u);
      }
    }
  }

void sub_1001BE0E4(uint64_t a1, void *a2, void *a3)
{
  id v24 = a2;
  id v5 = a3;
  if (*(void *)(a1 + 32))
  {
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v24 selectedActionIdentifier]);
    id v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) identifier]);
    unsigned int v8 = [v6 isEqualToString:v7];

    if (v8)
    {
      id v9 = *(void **)(a1 + 40);
      if (v9)
      {
        uint64_t v10 = (void *)objc_opt_new(&OBJC_CLASS___AMSAuthenticateOptions);
        [v10 setAuthenticationType:2];
        [v10 setCanMakeAccountActive:1];
        [v10 setDebugReason:@"Arcade"];
        id v11 = objc_alloc(&OBJC_CLASS___AMSAuthenticateTask);
        id v12 = sub_100255630((uint64_t)&OBJC_CLASS___URLBag);
        uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
        id v14 = [v11 initWithAccount:0 options:v10 bag:v13];

        id v15 = (void *)objc_claimAutoreleasedReturnValue([v14 performAuthentication]);
        id v25 = 0LL;
        uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v15 resultWithError:&v25]);
        id v17 = v25;

        if (v16)
        {
          id v18 = (void *)objc_claimAutoreleasedReturnValue([v16 account]);
          uint64_t v19 = ASDLogHandleForCategory(28LL);
          id v20 = (os_log_s *)objc_claimAutoreleasedReturnValue(v19);
          if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue([v9 logKey]);
            uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "ams_DSID"));
            *(_DWORD *)__int128 buf = 138412546;
            uint64_t v27 = v21;
            __int16 v28 = 2114;
            id v29 = v22;
            _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEFAULT,  "[%@] Logged into accountID: %{public}@",  buf,  0x16u);
          }

          char v23 = (void *)objc_claimAutoreleasedReturnValue([v9 delegate]);
          [v23 repair:v9 wantsToRelaunchApplication:v9[1]];
        }
      }
    }
  }
}

void sub_1001BE334(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = -[AMSDialogRequest initWithTitle:message:]( objc_alloc(&OBJC_CLASS___AMSDialogRequest),  "initWithTitle:message:",  v5,  v6);
  uint64_t v8 = ASDLocalizedString(@"OK");
  id v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue( +[AMSDialogAction actionWithTitle:style:]( &OBJC_CLASS___AMSDialogAction,  "actionWithTitle:style:",  v9,  0LL));
  id v17 = v10;
  id v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v17, 1LL));
  -[AMSDialogRequest setButtonActions:](v7, "setButtonActions:", v11);

  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472LL;
  void v14[2] = sub_1001BE4B4;
  v14[3] = &unk_1003E9F90;
  void v14[4] = a1;
  id v12 = v5;
  id v15 = v12;
  id v13 = v6;
  id v16 = v13;
  sub_10027808C((uint64_t)&OBJC_CLASS___InteractiveRequestPresenter, v7, v14);
}

void sub_1001BE4B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    uint64_t v4 = ASDLogHandleForCategory(28LL);
    id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) logKey]);
      uint64_t v7 = *(void *)(a1 + 40);
      uint64_t v8 = *(void *)(a1 + 48);
      int v9 = 138412802;
      uint64_t v10 = v6;
      __int16 v11 = 2114;
      uint64_t v12 = v7;
      __int16 v13 = 2114;
      uint64_t v14 = v8;
      _os_log_error_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_ERROR,  "[%@] Error showing dialog: %{public}@ message: %{public}@",  (uint8_t *)&v9,  0x20u);
    }
  }

void sub_1001BE594(uint64_t a1)
{
  id v2 = sub_1002A4FE0((uint64_t)&OBJC_CLASS___OcelotManager);
  id v6 = (id)objc_claimAutoreleasedReturnValue(v2);
  unsigned int v3 = *(void **)(a1 + 32);
  uint64_t v4 = *(void **)(a1 + 40);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 48) logKey]);
  sub_1002AA770((uint64_t)v6, v3, v4, v5);
}

id sub_1001BE66C(uint64_t a1)
{
  if (a1)
  {
    id v2 = (void *)objc_opt_new(&OBJC_CLASS___ASDPurgeableApp);
    [v2 setPurgeableReason:*(void *)(a1 + 48)];
    [v2 setBundleID:*(void *)(a1 + 8)];
    [v2 setPurgeableReason:*(void *)(a1 + 48)];
    [v2 setPurgeableType:*(void *)(a1 + 40)];
    objc_msgSend(v2, "setStaticDiskUsage:", objc_msgSend(*(id *)(a1 + 16), "unsignedLongLongValue"));
    [v2 setStoreItemID:*(void *)(a1 + 56)];
  }

  else
  {
    id v2 = 0LL;
  }

  return v2;
}

id *sub_1001BE868(id *a1, void *a2)
{
  id v4 = a2;
  if (a1)
  {
    v7.receiver = a1;
    v7.super_class = (Class)&OBJC_CLASS___LibraryExpressionClassifier;
    id v5 = (id *)objc_msgSendSuper2(&v7, "init");
    a1 = v5;
    if (v5) {
      objc_storeStrong(v5 + 1, a2);
    }
  }

  return a1;
}

id sub_1001BE8DC(uint64_t a1, void *a2, uint64_t a3)
{
  id v6 = a2;
  if (!a1)
  {
    __int16 v13 = 0LL;
    goto LABEL_24;
  }

  uint64_t v7 = objc_opt_class(&OBJC_CLASS___NSComparisonPredicate, v5);
  if ((objc_opt_isKindOfClass(v6, v7) & 1) != 0)
  {
    id v8 = v6;
    int v9 = (void *)objc_claimAutoreleasedReturnValue([v8 leftExpression]);
    id v10 = [v9 expressionType];

    if (v10 == (id)3)
    {
      __int16 v11 = (void *)objc_claimAutoreleasedReturnValue([v8 leftExpression]);
      uint64_t v12 = objc_claimAutoreleasedReturnValue([v8 rightExpression]);
    }

    else
    {
      uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v8 rightExpression]);
      id v15 = [v14 expressionType];

      if (v15 != (id)3)
      {
        __int16 v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 8) resultsMatchingPredicate:v8 error:a3]);
        id v16 = 0LL;
        __int16 v11 = 0LL;
        if (v13) {
          goto LABEL_23;
        }
LABEL_9:
        id v17 = sub_100298B00(v16);
        id v18 = (void *)objc_claimAutoreleasedReturnValue(v17);
        if (![v18 count]
          || (id v19 = [v8 predicateOperatorType], v19 != (id)4) && v19 != (id)10)
        {

LABEL_22:
          __int16 v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 8) resultsMatchingPredicate:v8 error:a3]);
          goto LABEL_23;
        }

        id v20 = sub_100298C7C(v11);
        id v21 = (id)objc_claimAutoreleasedReturnValue(v20);
        id v22 = v18;
        if ([v21 isEqualToString:@"bundleID"])
        {
          uint64_t v23 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 8) resultsWithBundleIDs:v22 error:a3]);
        }

        else
        {
          if (![v21 isEqualToString:@"storeItemID"])
          {
            __int16 v13 = 0LL;
LABEL_21:

            if (!v13) {
              goto LABEL_22;
            }
LABEL_23:

            goto LABEL_24;
          }

          uint64_t v23 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 8) resultsWithItemIDs:v22 error:a3]);
        }

        __int16 v13 = (void *)v23;
        goto LABEL_21;
      }

      __int16 v11 = (void *)objc_claimAutoreleasedReturnValue([v8 rightExpression]);
      uint64_t v12 = objc_claimAutoreleasedReturnValue([v8 leftExpression]);
    }

    id v16 = (void *)v12;
    goto LABEL_9;
  }

  __int16 v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 8) resultsMatchingPredicate:v6 error:a3]);
LABEL_24:

  return v13;
}

void sub_1001BEC38(void *a1, CFBundleRef bundle)
{
  CFURLRef v4 = CFBundleCopyBundleURL(bundle);
  uint64_t v5 = objc_claimAutoreleasedReturnValue(-[__CFURL path](v4, "path"));
  id v6 = (void *)a1[3];
  a1[3] = v5;

  CFStringRef Identifier = CFBundleGetIdentifier(bundle);
  uint64_t v8 = objc_claimAutoreleasedReturnValue(Identifier);
  int v9 = (void *)a1[1];
  a1[1] = v8;

  CFTypeRef ValueForInfoDictionaryKey = CFBundleGetValueForInfoDictionaryKey(bundle, _kCFBundleShortVersionStringKey);
  uint64_t v11 = objc_claimAutoreleasedReturnValue(ValueForInfoDictionaryKey);
  if (!v11)
  {
    CFTypeRef v12 = CFBundleGetValueForInfoDictionaryKey(bundle, kCFBundleVersionKey);
    uint64_t v11 = objc_claimAutoreleasedReturnValue(v12);
  }

  __int16 v13 = (void *)a1[4];
  a1[4] = v11;
}

void sub_1001BECD8(uint64_t a1)
{
  uint64_t v5 = -[AMSProcessInfo initWithBundleIdentifier:]( objc_alloc(&OBJC_CLASS___AMSProcessInfo),  "initWithBundleIdentifier:",  *(void *)(a1 + 8));
  id v2 = [*(id *)(a1 + 32) copy];
  -[AMSProcessInfo setClientVersion:](v5, "setClientVersion:", v2);

  uint64_t v3 = objc_claimAutoreleasedReturnValue(+[AMSUserAgent userAgentForProcessInfo:](&OBJC_CLASS___AMSUserAgent, "userAgentForProcessInfo:", v5));
  CFURLRef v4 = *(void **)(a1 + 48);
  *(void *)(a1 + 4_Block_object_dispose(va, 8) = v3;
}

id *sub_1001BF110(id *a1, void *a2)
{
  id v4 = a2;
  if (a1)
  {
    v7.receiver = a1;
    v7.super_class = (Class)&OBJC_CLASS___LibraryErrorResultEnumerator;
    uint64_t v5 = (id *)objc_msgSendSuper2(&v7, "init");
    a1 = v5;
    if (v5) {
      objc_storeStrong(v5 + 1, a2);
    }
  }

  return a1;
}

id *sub_1001BF1A0(id *a1, void *a2)
{
  id v4 = a2;
  if (a1)
  {
    v7.receiver = a1;
    v7.super_class = (Class)&OBJC_CLASS___SQLiteQueryResults;
    uint64_t v5 = (id *)objc_msgSendSuper2(&v7, "init");
    a1 = v5;
    if (v5) {
      objc_storeStrong(v5 + 1, a2);
    }
  }

  return a1;
}

void sub_1001BF214(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    id v4 = sub_1002E6F14((sqlite3_stmt **)objc_alloc(&OBJC_CLASS___SQLiteCursor), *(void **)(a1 + 8));
    uint64_t v5 = *(void **)(a1 + 8);
    if (v5)
    {
      objc_super v7 = v5 + 1;
      uint64_t v5 = (void *)v5[1];
      uint64_t v6 = v7[1];
    }

    else
    {
      uint64_t v6 = 0LL;
    }

    uint64_t v8 = v5;
    uint64_t v19 = v6;
    id v20 = 0LL;
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3221225472LL;
    void v16[2] = sub_1001BF35C;
    v16[3] = &unk_1003EB1B8;
    id v9 = v3;
    id v18 = v9;
    id v10 = v4;
    id v17 = v10;
    if (v8)
    {
      int v11 = sub_1001D6F7C((uint64_t)v8, &v20, v16);
      id v12 = v20;

      if (v11)
      {
        uint64_t v13 = *(void *)(a1 + 8);
        if (v13)
        {
          uint64_t v14 = *(sqlite3_stmt **)(v13 + 16);
          if (v14) {
            sqlite3_reset(v14);
          }
        }

        goto LABEL_12;
      }
    }

    else
    {

      id v12 = 0LL;
    }

    char v15 = 0;
    (*((void (**)(id, void, id, char *))v9 + 2))(v9, 0LL, v12, &v15);
LABEL_12:
  }
}

uint64_t sub_1001BF35C(uint64_t a1)
{
  uint64_t v2 = sqlite3_step(*(sqlite3_stmt **)(a1 + 48));
  return v2;
}

uint64_t sub_1001BF3B4(uint64_t a1)
{
  if (!a1) {
    return 0LL;
  }
  uint64_t v4 = 0LL;
  uint64_t v5 = &v4;
  uint64_t v6 = 0x2020000000LL;
  uint64_t v7 = 0LL;
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472LL;
  v3[2] = sub_1001BF460;
  v3[3] = &unk_1003EB1E0;
  v3[4] = &v4;
  sub_1001BF214(a1, v3);
  uint64_t v1 = v5[3];
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1001BF448( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

sqlite3_int64 sub_1001BF460(sqlite3_int64 result, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  if (a2)
  {
    sqlite3_int64 v5 = result;
    uint64_t result = sqlite3_column_int64(*(sqlite3_stmt **)(a2 + 48), 0);
    *(void *)(*(void *)(*(void *)(v5 + 32) + 8LL) + 24LL) = result;
  }

  *a4 = 1;
  return result;
}

BOOL sub_1001BF4A4(uint64_t a1)
{
  if (!a1) {
    return 0LL;
  }
  uint64_t v4 = 0LL;
  sqlite3_int64 v5 = &v4;
  uint64_t v6 = 0x2020000000LL;
  char v7 = 0;
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472LL;
  v3[2] = sub_1001BF558;
  v3[3] = &unk_1003EB1E0;
  v3[4] = &v4;
  sub_1001BF214(a1, v3);
  BOOL v1 = *((_BYTE *)v5 + 24) != 0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1001BF540( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_1001BF558(uint64_t result, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  if (a2) {
    *(_BYTE *)(*(void *)(*(void *)(result + 32) + 8LL) + 24LL) = 1;
  }
  *a4 = 1;
  return result;
}

uint64_t sub_1001BF610(void *a1, void *a2)
{
  id v5 = a2;
  if (a1)
  {
    uint64_t v6 = objc_opt_class(a1, v4);
    if (v6 == objc_opt_class(&OBJC_CLASS___ApplicationContext, v7))
    {
      uint64_t v9 = sub_1001BF610(objc_alloc(&OBJC_CLASS____ApplicationContext), v5);
    }

    else
    {
      v11.receiver = a1;
      v11.super_class = (Class)&OBJC_CLASS___ApplicationContext;
      id v8 = objc_msgSendSuper2(&v11, "init");
      uint64_t v9 = (uint64_t)v8;
      if (v8)
      {
        *((_DWORD *)v8 + 2) = 0;
        objc_storeStrong((id *)v8 + 2, a2);
      }
    }
  }

  else
  {
    uint64_t v9 = 0LL;
  }

  return v9;
}

id *sub_1001BF6D0(char *a1)
{
  BOOL v1 = (id *)a1;
  if (a1)
  {
    uint64_t v2 = (os_unfair_lock_s *)(a1 + 8);
    os_unfair_lock_lock_with_options(a1 + 8, 0x10000LL);
    BOOL v1 = (id *)v1[2];
    os_unfair_lock_unlock(v2);
  }

  return v1;
}

void sub_1001BFAF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3)
  {
    uint64_t v4 = ASDErrorWithSafeUserInfo(a3);
    id v5 = (id)objc_claimAutoreleasedReturnValue(v4);
    (*(void (**)(uint64_t, id))(v3 + 16))(v3, v5);
  }

void sub_1001BFB54(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = ASDErrorWithDescription(ASDErrorDomain, 506LL, @"Launching too fast, throttling request");
  id v3 = (id)objc_claimAutoreleasedReturnValue(v2);
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v3);
}

id sub_1001BFBBC(uint64_t a1)
{
  v2[0] = @"timestamp";
  v2[1] = @"bundle_id";
  v2[2] = @"current_version_release_date";
  void v2[3] = @"device_families";
  void v2[4] = @"install_date";
  void v2[5] = @"is_background";
  v2[6] = @"is_b2b_custom_app";
  v2[7] = @"is_code_signature_update";
  v2[8] = @"is_offloaded";
  v2[9] = @"is_per_device";
  v2[10] = @"metrics_data";
  v2[11] = @"package_type";
  v2[12] = @"purchase_id";
  v2[13] = @"release_date";
  v2[14] = @"software_platform";
  v2[15] = @"store_item_data";
  v2[16] = @"store_item_id";
  v2[17] = @"store_software_version_id";
  v2[18] = @"timestamp";
  v2[19] = @"update_state";
  return (id)objc_claimAutoreleasedReturnValue( +[NSArray arrayWithObjects:count:]( &OBJC_CLASS___NSArray,  "arrayWithObjects:count:",  v2,  20LL));
}

UpdateItemMetrics *sub_1001BFCE8(UpdateItemMetrics *a1)
{
  uint64_t v1 = a1;
  if (a1)
  {
    uint64_t v2 = objc_alloc(&OBJC_CLASS___UpdateItemMetrics);
    id v3 = (void *)objc_claimAutoreleasedReturnValue(-[UpdateItemMetrics valueForProperty:](v1, "valueForProperty:", @"metrics_data"));
    uint64_t v1 = -[UpdateItemMetrics initWithData:](v2, "initWithData:", v3);
  }

  return v1;
}

char *sub_1001BFD50(char *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    v10.receiver = a1;
    v10.super_class = (Class)&OBJC_CLASS___UPPManifestDownloadTask;
    a1 = (char *)objc_msgSendSuper2(&v10, "init");
    if (a1)
    {
      id v4 = [v3 copy];
      id v5 = *(void **)(a1 + 50);
      *(void *)(a1 + 50) = v4;

      uint64_t v6 = sub_100316A0C((uint64_t)&OBJC_CLASS___XPCRequestToken, 1);
      uint64_t v7 = objc_claimAutoreleasedReturnValue(v6);
      id v8 = *(void **)(a1 + 106);
      *(void *)(a1 + 106) = v7;
    }
  }

  return a1;
}

char *sub_1001BFDF0(char *a1, void *a2, void *a3, char a4)
{
  id v8 = a3;
  if (a1)
  {
    uint64_t v9 = sub_1001BFD50(a1, a2);
    objc_super v10 = v9;
    if (v9)
    {
      v9[74] = a4;
      if (v8) {
        objc_storeStrong((id *)(v9 + 106), a3);
      }
    }
  }

  else
  {
    objc_super v10 = 0LL;
  }

  return v10;
}

LABEL_21:
}

    *(void *)__int128 buf = 0LL;
    *(void *)&uint8_t buf[8] = buf;
    *(void *)&uint8_t buf[16] = 0x2020000000LL;
    __int16 v30 = v8 == a2;
    if (v8 != a2)
    {
      if (v23)
      {
        uint64_t v19 = ASDLogHandleForCategory(35LL);
        id v20 = (os_log_s *)objc_claimAutoreleasedReturnValue(v19);
        if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)__int16 v28 = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEFAULT,  "Not reattempting to reset schema",  v28,  2u);
        }
      }

      else
      {
        id v21 = *(void *)(a1 + 8);
        v24[0] = _NSConcreteStackBlock;
        v24[1] = 3221225472LL;
        v24[2] = sub_1001E8D90;
        v24[3] = &unk_1003EC298;
        void v24[4] = a1;
        id v26 = buf;
        id v25 = v7;
        sub_1001D6D30(v21, v24);
      }
    }

    a1 = *(_BYTE *)(*(void *)&buf[8] + 24LL) != 0;
    _Block_object_dispose(buf, 8);
  }

  return a1;
}

      uint64_t v27 = ASDLogHandleForCategory(14LL);
      __int16 v28 = (os_log_s *)objc_claimAutoreleasedReturnValue(v27);
      if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
      {
        __int16 v30 = (void *)objc_opt_class(*(void *)(a1 + 40), v29);
        *(_DWORD *)__int128 buf = 138543362;
        *(void *)&uint8_t buf[4] = v30;
        uint64_t v31 = v30;
        _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] Received account change notification but nothing has changed",  buf,  0xCu);
      }

      goto LABEL_33;
    }

    id v40 = ASDLogHandleForCategory(14LL);
    id v34 = (os_log_s *)objc_claimAutoreleasedReturnValue(v40);
    if (os_log_type_enabled(v34, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v72 = (void *)objc_opt_class(v32, v41);
      uint64_t v37 = v72;
      uint64_t v38 = (void *)objc_claimAutoreleasedReturnValue([(id)v24 hashedDescription]);
      *(_DWORD *)__int128 buf = 138412546;
      *(void *)&uint8_t buf[4] = v72;
      *(_WORD *)&buf[12] = 2114;
      *(void *)&buf[14] = v38;
      id v39 = "[%@]: Should notify after iTunes account became inactive: %{public}@";
      goto LABEL_41;
    }
  }

  else
  {
    double v33 = ASDLogHandleForCategory(14LL);
    id v34 = (os_log_s *)objc_claimAutoreleasedReturnValue(v33);
    if (os_log_type_enabled(v34, OS_LOG_TYPE_DEBUG))
    {
      __int128 v36 = (void *)objc_opt_class(v32, v35);
      uint64_t v37 = v36;
      uint64_t v38 = (void *)objc_claimAutoreleasedReturnValue([(id)v25 hashedDescription]);
      *(_DWORD *)__int128 buf = 138412546;
      *(void *)&uint8_t buf[4] = v36;
      *(_WORD *)&buf[12] = 2114;
      *(void *)&buf[14] = v38;
      id v39 = "[%@]: Should notify after iTunes account became active: %{public}@";
LABEL_41:
      _os_log_debug_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_DEBUG, v39, buf, 0x16u);
    }
  }

  __int16 v28 = ASDLogHandleForCategory(28LL);
  id v29 = (os_log_s *)objc_claimAutoreleasedReturnValue(v28);
  if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
  {
    __int16 v30 = (void *)objc_claimAutoreleasedReturnValue(-[FactoryApplicationRepair logKey](self, "logKey"));
    *(_DWORD *)__int128 buf = 138412290;
    *(void *)&uint8_t buf[4] = v30;
    _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_DEFAULT,  "[%@] Skipping claim, no active account",  buf,  0xCu);
  }

  uint64_t v31 = ASDErrorWithTitleAndMessage(ASDErrorDomain, 522LL, @"No active account to claim apps with", 0LL);
  unint64_t v203 = (id)objc_claimAutoreleasedReturnValue(v31);
  uint64_t v206 = 0LL;
  id v32 = 0;
  double v33 = v210;
LABEL_152:

  if (a4) {
    uint64_t v188 = v32;
  }
  else {
    uint64_t v188 = 1;
  }
  if ((v188 & 1) == 0) {
    *a4 = v203;
  }

  return v32;
}

  uint64_t v37 = ASDLogHandleForCategory(14LL);
  uint64_t v38 = (os_log_s *)objc_claimAutoreleasedReturnValue(v37);
  if (os_log_type_enabled(v38, OS_LOG_TYPE_ERROR))
  {
    uint64_t v42 = objc_getProperty(self, v39, 64LL, 1);
    BOOL v43 = (void *)v55[5];
    *(_DWORD *)__int128 buf = 138412546;
    uint64_t v61 = v42;
    uint64_t v62 = 2114;
    id v63 = v43;
    _os_log_error_impl( (void *)&_mh_execute_header,  v38,  OS_LOG_TYPE_ERROR,  "[%@] Error prompting for account: %{public}@",  buf,  0x16u);
  }

  -[Task completeWithError:](self, "completeWithError:", v55[5]);
LABEL_24:
  _Block_object_dispose(&v48, 8);

  _Block_object_dispose(&v54, 8);
}
}

  id v20 = 0;
LABEL_22:
  uint64_t v23 = objc_alloc_init(&OBJC_CLASS___MigratorMiscellaneousTask);
  sub_100255034(a1, v23, 1);
  id v24 = sub_10025D3E0(objc_alloc(&OBJC_CLASS___MigratorPromotionTask), &__NSArray0__struct, &__NSDictionary0__struct);
  sub_100255034(a1, v24, 1);
  if (v20)
  {
    id v25 = objc_alloc_init(&OBJC_CLASS___MigratorAutoUpdateTask);
    sub_100255034(a1, v25, 1);
    id v26 = objc_alloc_init(&OBJC_CLASS___MigratorODRTask);
    sub_100255034(a1, v26, 1);
    uint64_t v27 = objc_alloc_init(&OBJC_CLASS___MigratorUpdateHistoryTask);
    sub_100255034(a1, v27, 1);
    __int16 v28 = objc_opt_new(&OBJC_CLASS___MigratorValidateAppleIDsTask);
    sub_100255034(a1, v28, 1);
  }

  else
  {
    id v29 = ASDLogHandleForCategory(17LL);
    __int16 v30 = (os_log_s *)objc_claimAutoreleasedReturnValue(v29);
    if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEFAULT, "First time tvOS migration", buf, 2u);
    }

    id v25 = objc_alloc_init(&OBJC_CLASS___MigratorAutoUpdateTask);
    sub_100255034(a1, v25, 1);
  }

  uint64_t v31 = objc_alloc_init(&OBJC_CLASS___MigratorArcadeTask);
  sub_100255034(a1, v31, 1);
  sub_1001EA0AC(*(id **)(a1 + 8), 1);
  sub_100253F78(a1);
}

          uint64_t v27 = 0LL;
          goto LABEL_22;
        }

        uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue([v21 lowercaseString]);
        id v24 = [v23 isEqualToString:@"application/x-apple-plist"];

        if ((v24 & 1) != 0) {
          goto LABEL_21;
        }
        id v25 = (void *)objc_claimAutoreleasedReturnValue([v21 lowercaseString]);
        id v26 = [v25 isEqualToString:@"application/json"];

        if ((v26 & 1) == 0)
        {
          uint64_t v37 = ASDLogHandleForCategory(25LL);
          id v29 = (os_log_s *)objc_claimAutoreleasedReturnValue(v37);
          if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v38 = (void *)objc_claimAutoreleasedReturnValue([v17 logKey]);
            *(_DWORD *)__int128 buf = 138412290;
            *(void *)&uint8_t buf[4] = v38;
            _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_DEFAULT,  "[%@] Encountered unrecognized content type for updateProduct call from bag",  buf,  0xCu);
          }

          goto LABEL_20;
        }

        uint64_t v27 = 1LL;
LABEL_22:

LABEL_24:
        [v17 setUseJSONContentType:v27];
        if ([v17 purchaseType] == (id)2)
        {
          __int16 v30 = ASDLogHandleForCategory(25LL);
          uint64_t v31 = (os_log_s *)objc_claimAutoreleasedReturnValue(v30);
          if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
          {
            id v32 = (void *)objc_claimAutoreleasedReturnValue([v17 logKey]);
            *(_DWORD *)__int128 buf = 138412290;
            *(void *)&uint8_t buf[4] = v32;
            _os_log_impl( (void *)&_mh_execute_header,  v31,  OS_LOG_TYPE_DEFAULT,  "[%@] No account required for AMSPurchaseTypeDownloadProduct",  buf,  0xCu);
          }

          goto LABEL_41;
        }

        if ([v17 isMachineBased])
        {
          double v33 = ASDLogHandleForCategory(25LL);
          uint64_t v31 = (os_log_s *)objc_claimAutoreleasedReturnValue(v33);
          if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
          {
            id v34 = (void *)objc_claimAutoreleasedReturnValue([v17 logKey]);
            *(_DWORD *)__int128 buf = 138412290;
            *(void *)&uint8_t buf[4] = v34;
            _os_log_impl( (void *)&_mh_execute_header,  v31,  OS_LOG_TYPE_DEFAULT,  "[%@] No account required for machine based purchase",  buf,  0xCu);
          }

          goto LABEL_41;
        }

        if (v8)
        {
          id v35 = (void *)objc_claimAutoreleasedReturnValue( +[ACAccountStore ams_sharedAccountStore]( &OBJC_CLASS___ACAccountStore,  "ams_sharedAccountStore"));
          uint64_t v31 = (os_log_s *)objc_claimAutoreleasedReturnValue(objc_msgSend(v35, "ams_iTunesAccountWithDSID:", v8));

          if (v31)
          {
            [v17 setAccount:v31];
LABEL_41:

            uint64_t v47 = sub_1002F0AC0((uint64_t)&OBJC_CLASS___AMSPurchase, v17);
            uint64_t v13 = (id *)objc_claimAutoreleasedReturnValue(v47);
            double v48 = *(PurchaseBatch **)((char *)&self->_purchaseBatch + 2);
            id v49 = (void *)objc_claimAutoreleasedReturnValue([v13 uniqueIdentifier]);
            [v48 setObject:v17 forKeyedSubscript:v49];

            [v130 addObject:v13];
            BOOL v50 = ASDLogHandleForCategory(25LL);
            uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(v50);
            if (os_log_type_enabled((os_log_t)v14, OS_LOG_TYPE_DEFAULT))
            {
              id v51 = (void *)objc_claimAutoreleasedReturnValue([v17 logKey]);
              __int16 v52 = (void *)objc_claimAutoreleasedReturnValue([v17 buyParams]);
              double v53 = (void *)objc_claimAutoreleasedReturnValue([v52 stringValue]);
              *(_DWORD *)__int128 buf = 138412546;
              *(void *)&uint8_t buf[4] = v51;
              *(_WORD *)&buf[12] = 2114;
              *(void *)&buf[14] = v53;
              _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v14,  OS_LOG_TYPE_DEFAULT,  "[%@] Purchasing with parameters: %{public}@",  buf,  0x16u);
            }
}
}

void sub_1001C0280(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v5)
  {
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v5 selectedActionIdentifier]);
    unsigned __int8 v8 = [v7 isEqualToString:@"AuthenticationChallengeDialogActionOkay"];

    if ((v8 & 1) != 0)
    {
      uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v5 textfieldValues]);
      if ([v9 count] == (id)1)
      {
        objc_super v10 = (void *)objc_claimAutoreleasedReturnValue([v9 objectAtIndexedSubscript:0]);
        id v11 = sub_100291A4C(a1[5]);
        uint64_t v12 = objc_claimAutoreleasedReturnValue(v11);
      }

      else
      {
        if ([v9 count] != (id)2)
        {
          id v17 = 0LL;
          objc_super v10 = 0LL;
          goto LABEL_14;
        }

        objc_super v10 = (void *)objc_claimAutoreleasedReturnValue([v9 objectAtIndexedSubscript:1]);
        uint64_t v12 = objc_claimAutoreleasedReturnValue([v9 objectAtIndexedSubscript:0]);
      }

      id v17 = (void *)v12;
LABEL_14:
      uint64_t v18 = ASDLogHandleForCategory(41LL);
      uint64_t v19 = (os_log_s *)objc_claimAutoreleasedReturnValue(v18);
      if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
      {
        id Property = (id)a1[4];
        if (Property) {
          id Property = objc_getProperty(Property, v20, 90LL, 1);
        }
        int v23 = 138412290;
        id v24 = Property;
        _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEFAULT,  "[%@] Completed user authentication challenge",  (uint8_t *)&v23,  0xCu);
      }

      id v22 = (void *)objc_claimAutoreleasedReturnValue( +[NSURLCredential credentialWithUser:password:persistence:]( &OBJC_CLASS___NSURLCredential,  "credentialWithUser:password:persistence:",  v17,  v10,  1LL));
      (*(void (**)(void))(a1[6] + 16LL))();

      goto LABEL_19;
    }
  }

  uint64_t v13 = ASDLogHandleForCategory(41LL);
  uint64_t v14 = (os_log_s *)objc_claimAutoreleasedReturnValue(v13);
  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
  {
    id v16 = (id)a1[4];
    if (v16) {
      id v16 = objc_getProperty(v16, v15, 90LL, 1);
    }
    int v23 = 138412290;
    id v24 = v16;
    _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "[%@] Canceling user authentication challenge",  (uint8_t *)&v23,  0xCu);
  }

  (*(void (**)(void))(a1[6] + 16LL))();
LABEL_19:
}

void sub_1001C0AF8(uint64_t a1, void *a2)
{
  if (a1)
  {
    id v3 = *(void **)(a1 + 50);
    id v4 = a2;
    id Property = objc_getProperty((id)a1, v5, 90LL, 1);
    id v7 = sub_100240228((uint64_t)&OBJC_CLASS___UPPManifestDialogRequest, v4, v3, Property);
    unsigned __int8 v8 = (void *)objc_claimAutoreleasedReturnValue(v7);

    dispatch_semaphore_t v9 = dispatch_semaphore_create(0LL);
    objc_super v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 106) notificationClient]);
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472LL;
    void v12[2] = sub_1001C3E70;
    void v12[3] = &unk_1003EB450;
    dispatch_semaphore_t v13 = v9;
    id v11 = v9;
    [v10 deliverDialogRequest:v8 withResultHandler:v12];

    dispatch_semaphore_wait(v11, 0xFFFFFFFFFFFFFFFFLL);
  }

void sub_1001C0C10(uint64_t a1, void *a2, void *a3)
{
  id v8 = a2;
  id v5 = a3;
  if (([v8 isEqualToString:@"software-package"] & 1) == 0)
  {
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472LL;
    v9[2] = sub_1001C0CD8;
    v9[3] = &unk_1003EB328;
    id v10 = *(id *)(a1 + 32);
    id v6 = sub_1002B84E4(v5, v9);
    id v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
    if (v7) {
      [*(id *)(a1 + 40) setObject:v7 forKeyedSubscript:v8];
    }
  }
}

uint64_t sub_1001C0CD8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_10018B54C((uint64_t)v3);
  id v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  if ([v5 containsObject:*(void *)(a1 + 32)])
  {
    uint64_t v6 = 1LL;
  }

  else
  {
    id v7 = sub_10018B5C8((uint64_t)v3);
    id v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
    uint64_t v6 = (uint64_t)[v8 containsObject:*(void *)(a1 + 32)];
  }

  return v6;
}

void sub_1001C0D50(uint64_t a1, void *a2, void *a3)
{
  id v8 = a2;
  id v5 = a3;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) objectForKeyedSubscript:v8]);

  if (!v6)
  {
    id v7 = (void *)objc_claimAutoreleasedReturnValue([v5 firstObject]);
    [*(id *)(a1 + 32) setObject:v7 forKeyedSubscript:v8];
  }
}

AppInstall *sub_1001C0DD8(uint64_t a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7)
{
  uint64_t v12 = a2;
  id v13 = a3;
  id v14 = a4;
  id v15 = a5;
  id v243 = a6;
  uint64_t v242 = objc_opt_self(a1);
  id v16 = sub_1001BAF34(v12);
  id v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
  if (v17)
  {
    uint64_t v18 = sub_1001BAF34(v12);
    uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue(v18);
    id v20 = (void *)objc_claimAutoreleasedReturnValue( +[NSCharacterSet whitespaceAndNewlineCharacterSet]( &OBJC_CLASS___NSCharacterSet,  "whitespaceAndNewlineCharacterSet"));
    id v21 = (void *)objc_claimAutoreleasedReturnValue([v19 stringByTrimmingCharactersInSet:v20]);
  }

  else
  {
    id v21 = 0LL;
  }

  id v22 = sub_1001BB2CC(v12);
  int v23 = (void *)objc_claimAutoreleasedReturnValue(v22);
  if (v23)
  {
    id v24 = sub_1001BB2CC(v12);
    id v25 = (void *)objc_claimAutoreleasedReturnValue(v24);
    id v26 = (void *)objc_claimAutoreleasedReturnValue( +[NSCharacterSet whitespaceAndNewlineCharacterSet]( &OBJC_CLASS___NSCharacterSet,  "whitespaceAndNewlineCharacterSet"));
    uint64_t v244 = (void *)objc_claimAutoreleasedReturnValue([v25 stringByTrimmingCharactersInSet:v26]);
  }

  else
  {
    uint64_t v244 = 0LL;
  }

  uint64_t v27 = sub_1001BAFA8(v12);
  uint64_t v28 = objc_claimAutoreleasedReturnValue(v27);
  if (!v28) {
    goto LABEL_10;
  }
  id v29 = (void *)v28;
  __int16 v30 = sub_1001BAFA8(v12);
  uint64_t v31 = objc_claimAutoreleasedReturnValue(v30);
  if (!v31)
  {

    goto LABEL_15;
  }

  id v32 = (void *)v31;
  double v33 = sub_1001BAFA8(v12);
  id v34 = (void *)objc_claimAutoreleasedReturnValue(v33);
  unsigned __int8 v35 = [v34 isEqualToString:@"software"];

  if ((v35 & 1) != 0)
  {
LABEL_15:
    id v40 = v244;
    if (v244 && [v244 length])
    {
      if (v21 && [v21 length])
      {
        id v236 = v21;
        unsigned __int8 v41 = &_ss28__ContiguousArrayStorageBaseCMa_ptr;
        uint64_t v42 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](&OBJC_CLASS___NSMutableDictionary, "dictionary"));
        [v42 setObject:&off_10040C118 forKeyedSubscript:@"priority"];
        [v42 setObject:&off_10040C130 forKeyedSubscript:@"source_type"];
        [v42 setObject:&__kCFBooleanTrue forKeyedSubscript:@"approved"];
        [v42 setObject:@"UPP" forKeyedSubscript:@"log_code"];
        [v42 setObject:&off_10040C148 forKeyedSubscript:@"metrics_install_type"];
        BOOL v43 = (void *)objc_claimAutoreleasedReturnValue(+[NSUUID UUID](&OBJC_CLASS___NSUUID, "UUID"));
        [v42 setObject:v43 forKeyedSubscript:@"external_id"];

        uint64_t v44 = sub_1001BAF34(v12);
        uint64_t v45 = (void *)objc_claimAutoreleasedReturnValue(v44);
        [v42 setObject:v45 forKeyedSubscript:@"bundle_id"];

        id v46 = sub_1001BAF5C(v12);
        uint64_t v47 = (void *)objc_claimAutoreleasedReturnValue(v46);
        [v42 setObject:v47 forKeyedSubscript:@"bundle_version"];

        double v48 = sub_1001BB2CC(v12);
        id v49 = (void *)objc_claimAutoreleasedReturnValue(v48);
        unint64_t v241 = v42;
        [v42 setObject:v49 forKeyedSubscript:@"bundle_name"];

        BOOL v50 = objc_alloc_init(&OBJC_CLASS___MIStoreMetadata);
        id v51 = sub_1001BAF5C(v12);
        __int16 v52 = (void *)objc_claimAutoreleasedReturnValue(v51);
        -[MIStoreMetadata setBundleVersion:](v50, "setBundleVersion:", v52);

        double v53 = sub_1001BB01C(v12);
        double v54 = (void *)objc_claimAutoreleasedReturnValue(v53);
        -[MIStoreMetadata setArtistName:](v50, "setArtistName:", v54);

        double v55 = sub_1001BB2CC(v12);
        uint64_t v56 = (void *)objc_claimAutoreleasedReturnValue(v55);
        -[MIStoreMetadata setItemName:](v50, "setItemName:", v56);

        unint64_t v240 = v50;
        -[MIStoreMetadata setHasMessagesExtension:](v50, "setHasMessagesExtension:", sub_1001BAF84((uint64_t)v12));
        id v57 = v13;
        id v58 = v14;
        objc_opt_self(v242);
        id v237 = v15;
        if (v57)
        {
          uint64_t v59 = objc_alloc_init(&OBJC_CLASS___NSURLComponents);
          -[NSURLComponents setScheme:](v59, "setScheme:", @"itms-services");
          id v60 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
          uint64_t v61 = (void *)objc_claimAutoreleasedReturnValue( +[NSURLQueryItem queryItemWithName:value:]( &OBJC_CLASS___NSURLQueryItem,  "queryItemWithName:value:",  @"action",  @"download-manifest"));
          [v60 addObject:v61];

          uint64_t v62 = (void *)objc_claimAutoreleasedReturnValue([v57 absoluteString]);
          id v63 = (void *)objc_claimAutoreleasedReturnValue( +[NSURLQueryItem queryItemWithName:value:]( &OBJC_CLASS___NSURLQueryItem,  "queryItemWithName:value:",  @"url",  v62));
          [v60 addObject:v63];

          if (v58)
          {
            uint64_t v64 = (void *)objc_claimAutoreleasedReturnValue( +[NSURLQueryItem queryItemWithName:value:]( &OBJC_CLASS___NSURLQueryItem,  "queryItemWithName:value:",  @"digest",  v58));
            [v60 addObject:v64];
          }

          -[NSURLComponents setQueryItems:](v59, "setQueryItems:", v60);
          uint64_t v65 = (void *)objc_claimAutoreleasedReturnValue(-[NSURLComponents URL](v59, "URL"));
          uint64_t v66 = (void *)objc_claimAutoreleasedReturnValue([v65 absoluteString]);

          id v15 = v237;
          id v40 = v244;
          unsigned __int8 v41 = &_ss28__ContiguousArrayStorageBaseCMa_ptr;
        }

        else
        {
          uint64_t v66 = 0LL;
        }

        -[MIStoreMetadata setEnterpriseInstallURL:](v240, "setEnterpriseInstallURL:", v66);
        double v75 = +[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", sub_1001BAF84((uint64_t)v12));
        double v76 = (void *)objc_claimAutoreleasedReturnValue(v75);
        [v241 setObject:v76 forKeyedSubscript:@"has_messages_extension"];

        -[MIStoreMetadata setLaunchProhibited:](v240, "setLaunchProhibited:", sub_1001BAFD0((uint64_t)v12));
        uint64_t v77 = +[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", sub_1001BAFD0((uint64_t)v12));
        id v78 = (void *)objc_claimAutoreleasedReturnValue(v77);
        [v241 setObject:v78 forKeyedSubscript:@"launch_prohibited"];

        __int128 v79 = v12;
        objc_opt_self(v242);
        uint64_t v80 = (void *)objc_claimAutoreleasedReturnValue([v41[495] dictionary]);
        int v238 = v79;
        id v81 = sub_1001BB0F8((uint64_t)v79);
        double v82 = (void *)objc_claimAutoreleasedReturnValue(v81);
        id v232 = v13;
        uint64_t v233 = v12;
        id v231 = v14;
        unint64_t v250 = v82;
        if ([v82 count])
        {
          double v83 = (void *)objc_claimAutoreleasedReturnValue([v41[495] dictionary]);
          __int128 v260 = 0u;
          __int128 v261 = 0u;
          __int128 v262 = 0u;
          __int128 v263 = 0u;
          double v84 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v82, "objectForKeyedSubscript:"));
          uint64_t v85 = (void *)objc_claimAutoreleasedReturnValue([v84 reverseObjectEnumerator]);

          id v86 = [v85 countByEnumeratingWithState:&v260 objects:buf count:16];
          if (v86)
          {
            id v87 = v86;
            uint64_t v88 = *(void *)v261;
            do
            {
              for (uint64_t i = 0LL; i != v87; uint64_t i = (char *)i + 1)
              {
                if (*(void *)v261 != v88) {
                  objc_enumerationMutation(v85);
                }
                uint64_t v90 = *(void *)(*((void *)&v260 + 1) + 8LL * (void)i);
                id v91 = sub_10018B54C(v90);
                uint64_t v92 = (void *)objc_claimAutoreleasedReturnValue(v91);
                id v93 = sub_1001D38D0((uint64_t)&OBJC_CLASS___VariantDescriptor, v92);
                id v94 = (void *)objc_claimAutoreleasedReturnValue(v93);

                if (!v94)
                {
                  id v95 = sub_10018B5C8(v90);
                  double v96 = (void *)objc_claimAutoreleasedReturnValue(v95);
                  id v97 = sub_1001D38D0((uint64_t)&OBJC_CLASS___VariantDescriptor, v96);
                  id v94 = (void *)objc_claimAutoreleasedReturnValue(v97);

                  if (!v94) {
                    continue;
                  }
                }

                [v83 setObject:v90 forKeyedSubscript:v94];
              }

              id v87 = [v85 countByEnumeratingWithState:&v260 objects:buf count:16];
            }

            while (v87);
          }

          double v98 = (void *)objc_claimAutoreleasedReturnValue([v83 allKeys]);
          id v99 = sub_1001D38D0((uint64_t)&OBJC_CLASS___VariantDescriptor, v98);
          id v100 = (void *)objc_claimAutoreleasedReturnValue(v99);

          if (v100)
          {
            uint64_t v101 = (void *)objc_claimAutoreleasedReturnValue([v83 objectForKeyedSubscript:v100]);
            [v80 setObject:v101 forKeyedSubscript:@"software-package"];

            v254[0] = _NSConcreteStackBlock;
            v254[1] = 3221225472LL;
            v254[2] = sub_1001C0C10;
            v254[3] = &unk_1003EB350;
            id v102 = v100;
            id v255 = v102;
            id v256 = v80;
            [v250 enumerateKeysAndObjectsUsingBlock:v254];
            id v103 = v102;
          }

          id v13 = v232;
          uint64_t v12 = v233;
          id v15 = v237;
          id v40 = v244;
        }

        else
        {
          id v100 = 0LL;
        }

        id v104 = a7;
        id v105 = sub_1001BAEE0((uint64_t)v238);
        id v106 = (void *)objc_claimAutoreleasedReturnValue(v105);
        v252[0] = _NSConcreteStackBlock;
        v252[1] = 3221225472LL;
        v252[2] = sub_1001C0D50;
        v252[3] = &unk_1003EB378;
        id v253 = v80;
        id v107 = v80;
        [v106 enumerateKeysAndObjectsUsingBlock:v252];
        id v239 = [v107 copy];

        unint64_t v108 = v100;
        uint64_t v109 = v108;
        if (v108)
        {
          uint64_t v110 = sub_1001D36AC(v108);
          double v111 = (void *)objc_claimAutoreleasedReturnValue(v110);
          -[MIStoreMetadata setVariantID:](v240, "setVariantID:", v111);

          id v104 = a7;
        }

        uint64_t v246 = v109;
        id v21 = v236;
        uint64_t v235 = (void *)objc_claimAutoreleasedReturnValue([v239 objectForKeyedSubscript:@"display-image"]);
        if (v235)
        {
          id v112 = sub_10018B4E4((uint64_t)v235);
          uint64_t v113 = (void *)objc_claimAutoreleasedReturnValue(v112);
          int v114 = (void *)objc_claimAutoreleasedReturnValue([v113 host]);

          if (v114) {
            [v241 setObject:v113 forKeyedSubscript:@"artwork_url"];
          }

          id v104 = a7;
        }

        uint64_t v234 = (void *)objc_claimAutoreleasedReturnValue([v239 objectForKeyedSubscript:@"messages-display-image"]);
        if (v234)
        {
          id v115 = sub_10018B4E4((uint64_t)v234);
          uint64_t v116 = (void *)objc_claimAutoreleasedReturnValue(v115);
          id v117 = (void *)objc_claimAutoreleasedReturnValue([v116 host]);

          if (v117) {
            [v241 setObject:v116 forKeyedSubscript:@"messages_artwork_url"];
          }

          id v104 = a7;
        }

        id v118 = sub_100304244((uint64_t)v240, v104);
        uint64_t v119 = objc_claimAutoreleasedReturnValue(v118);
        BOOL v230 = (void *)v119;
        if (!v119)
        {
          uint64_t v128 = ASDLogHandleForCategory(41LL);
          id v129 = (os_log_s *)objc_claimAutoreleasedReturnValue(v128);
          if (os_log_type_enabled(v129, OS_LOG_TYPE_ERROR))
          {
            id v220 = sub_1001BAF34(v238);
            uint64_t v221 = (void *)objc_claimAutoreleasedReturnValue(v220);
            *(_DWORD *)__int128 buf = 138412546;
            *(void *)&uint8_t buf[4] = v243;
            *(_WORD *)&buf[12] = 2114;
            *(void *)&buf[14] = v221;
            _os_log_error_impl( (void *)&_mh_execute_header,  v129,  OS_LOG_TYPE_ERROR,  "[%@] [%{public}@] Failed to encode metadata from manifest",  buf,  0x16u);
          }

          if (a7)
          {
            uint64_t v130 = ASDErrorWithTitleAndMessage( ASDErrorDomain,  851LL,  @"Invalid manifest",  @"Failed to encode metadata from manifest");
            id v39 = 0LL;
            *a7 = (id)objc_claimAutoreleasedReturnValue(v130);
          }

          else
          {
            id v39 = 0LL;
          }

          goto LABEL_170;
        }

        [v241 setObject:v119 forKeyedSubscript:@"store_metadata"];
        __int128 v120 = sub_1002E5EDC((uint64_t)&OBJC_CLASS___AppInstallPolicy);
        uint64_t v121 = objc_claimAutoreleasedReturnValue(v120);
        uint64_t v122 = v121;
        if (v121) {
          id v123 = [*(id *)(v121 + 8) copy];
        }
        else {
          id v123 = 0LL;
        }
        [v241 setObject:v123 forKeyedSubscript:@"policy"];

        double v124 = -[SQLiteMemoryEntity initWithPropertyValues:]( objc_alloc(&OBJC_CLASS___AppInstall),  "initWithPropertyValues:",  v241);
        id v125 = sub_1002EB2A0((uint64_t)&OBJC_CLASS___Device);
        double v126 = (void *)objc_claimAutoreleasedReturnValue(v125);
        unsigned int v127 = [v126 isHRNMode];

        uint64_t v226 = v122;
        self = v124;
        if (v127)
        {
          if (objc_msgSend(@"dmd", "isEqualToString:", v15, v122))
          {
            unsigned int v228 = 1;
          }

          else if (os_variant_has_internal_content("com.apple.appstored"))
          {
            unsigned int v228 = [@"asclient" isEqualToString:v15];
          }

          else
          {
            unsigned int v228 = 0;
          }
        }

        else
        {
          unsigned int v228 = 0;
        }

        id v131 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v239, "allValues", v226));
        double v132 = v246;
        unint64_t v247 = v246;
        objc_opt_self(v242);
        __int16 v133 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](&OBJC_CLASS___NSMutableDictionary, "dictionary"));
        __int128 v260 = 0u;
        __int128 v261 = 0u;
        __int128 v262 = 0u;
        __int128 v263 = 0u;
        id obj = v131;
        id v134 = [obj countByEnumeratingWithState:&v260 objects:buf count:16];
        if (v134)
        {
          id v135 = v134;
          uint64_t v136 = *(void *)v261;
          uint64_t v248 = *(void *)v261;
          do
          {
            for (j = 0LL; j != v135; j = (char *)j + 1)
            {
              if (*(void *)v261 != v136) {
                objc_enumerationMutation(obj);
              }
              id v138 = *(id **)(*((void *)&v260 + 1) + 8LL * (void)j);
              unint64_t v139 = sub_10018B234(v138);
              id v140 = (void *)objc_claimAutoreleasedReturnValue(v139);
              if ([v140 isEqualToString:@"software-package"])
              {
                id v141 = sub_10018B4E4((uint64_t)v138);
                id v142 = (void *)objc_claimAutoreleasedReturnValue(v141);
                unint64_t v143 = (void *)objc_claimAutoreleasedReturnValue([v142 host]);
                id v144 = [v143 length];

                if (v144)
                {
                  [v133 setObject:v142 forKeyedSubscript:@"package_url"];
                  [v133 setObject:&off_10040C160 forKeyedSubscript:@"package_type"];
                  [v133 setObject:&off_10040C118 forKeyedSubscript:@"archive_type"];
                }

                if (v132)
                {
                  uint64_t v145 = sub_1001D36AC(v247);
                  uint64_t v146 = (void *)objc_claimAutoreleasedReturnValue(v145);
                  [v133 setObject:v146 forKeyedSubscript:@"variant_id"];
                }

                unint64_t v147 = sub_10018B3D4(v138);
                uint64_t v148 = (void *)objc_claimAutoreleasedReturnValue(v147);
                __int128 v149 = v148;
                if (v148)
                {
                  if ([v148 count] == (id)1)
                  {
                    id v150 = v149;
                    uint64_t v151 = 3LL;
                    uint64_t v152 = &off_10040C178;
                    if (!&off_10040C178) {
                      goto LABEL_112;
                    }
LABEL_110:
                    if (v150)
                    {
                      [v133 setObject:v150 forKeyedSubscript:@"hash_array"];
                      [v133 setObject:v152 forKeyedSubscript:@"hash_size"];
                      __int16 v169 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInteger:]( &OBJC_CLASS___NSNumber,  "numberWithInteger:",  v151));
                      [v133 setObject:v169 forKeyedSubscript:@"hash_type"];
                    }

                    goto LABEL_112;
                  }

                  if ((unint64_t)[v149 count] < 2)
                  {
                    id v150 = 0LL;
                    uint64_t v152 = 0LL;
                  }

                  else
                  {
                    id v165 = sub_10018B4BC(v138);
                    id v166 = (void *)objc_claimAutoreleasedReturnValue(v165);
                    if ((uint64_t)[v166 longLongValue] < 1)
                    {
                      uint64_t v152 = 0LL;
                      id v150 = 0LL;
                    }

                    else
                    {
                      id v150 = v149;
                      uint64_t v152 = v166;
                    }

                    uint64_t v151 = 3LL;
LABEL_109:
                    double v132 = v246;
                    if (v152) {
                      goto LABEL_110;
                    }
                  }

LABEL_113:
LABEL_114:
            }

            id v135 = [obj countByEnumeratingWithState:&v260 objects:buf count:16];
          }

          while (v135);
        }

        uint64_t v170 = (void *)objc_claimAutoreleasedReturnValue([v133 objectForKeyedSubscript:@"package_url"]);
        if (v170) {
          unint64_t v171 = -[SQLiteMemoryEntity initWithPropertyValues:]( objc_alloc(&OBJC_CLASS___AppPackage),  "initWithPropertyValues:",  v133);
        }
        else {
          unint64_t v171 = 0LL;
        }
        id v13 = v232;
        uint64_t v12 = v233;
        id v14 = v231;
        id v21 = v236;

        id v15 = v237;
        if (!v228
          || (id v172 = sub_1001BB14C((uint64_t)v238),
              unint64_t v173 = (void *)objc_claimAutoreleasedReturnValue(v172),
              v173,
              !v173))
        {
LABEL_123:
          unint64_t v176 = sub_1001BAF34(v238);
          uint64_t v177 = (void *)objc_claimAutoreleasedReturnValue(v176);
          unsigned __int8 v178 = sub_1001BB2CC(v238);
          unint64_t v179 = (void *)objc_claimAutoreleasedReturnValue(v178);
          id v180 = v177;
          unint64_t v181 = v179;
          objc_opt_self(v242);
          __int128 v182 = objc_autoreleasePoolPush();
          unint64_t v183 = (void *)objc_claimAutoreleasedReturnValue( +[ApplicationProxy proxyForBundleID:]( &OBJC_CLASS___ApplicationProxy,  "proxyForBundleID:",  v180));
          if ([v183 isInstalled]
            && ([v183 applicationType]
             || (![v183 isProfileValidated] || objc_msgSend(v183, "isBeta"))
             && (!v228 || ([v183 isBeta] & 1) != 0)))
          {
            *(void *)&__int128 v260 = NSLocalizedDescriptionKey;
            *((void *)&v260 + 1) = NSLocalizedFailureReasonErrorKey;
            *(void *)__int128 buf = @"Invalid state";
            *(void *)&uint8_t buf[8] = @"Must uninstall existing app";
            if (v181) {
              id v184 = v181;
            }
            else {
              id v184 = &stru_1003F3E40;
            }
            *(void *)&uint8_t buf[16] = v184;
            *(void *)&__int128 v261 = @"UPPManifestErrorUserInfoKeyManifestName";
            *((void *)&v261 + 1) = @"UPPManifestErrorUserInfoKeyExistingName";
            uint64_t v185 = objc_claimAutoreleasedReturnValue([v183 localizedName]);
            uint64_t v186 = (void *)v185;
            if (v185) {
              id v187 = (const __CFString *)v185;
            }
            else {
              id v187 = &stru_1003F3E40;
            }
            id v259 = (id)v187;
            uint64_t v188 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  buf,  &v260,  4LL));

            id v189 = objc_alloc(&OBJC_CLASS___NSError);
            id v190 = -[NSError initWithDomain:code:userInfo:]( v189,  "initWithDomain:code:userInfo:",  ASDErrorDomain,  855LL,  v188);

            id v15 = v237;
            objc_autoreleasePoolPop(v182);
            id v191 = v190;
            id v21 = v236;
            unint64_t v192 = v191;
            char v193 = 0;
          }

          else
          {

            objc_autoreleasePoolPop(v182);
            unint64_t v192 = 0LL;
            char v193 = 1;
          }

          uint64_t v194 = v192;
          if ((v193 & 1) != 0)
          {
            if (v171)
            {
              unint64_t v257 = v171;
              id v196 = (void *)objc_claimAutoreleasedReturnValue( +[NSArray arrayWithObjects:count:]( &OBJC_CLASS___NSArray,  "arrayWithObjects:count:",  &v257,  1LL));
              id v40 = v244;
              if (self) {
                objc_setProperty_atomic_copy(self, v195, v196, 40LL);
              }

              id v39 = self;
              goto LABEL_169;
            }

            uint64_t v201 = ASDLogHandleForCategory(41LL);
            uint64_t v202 = (os_log_s *)objc_claimAutoreleasedReturnValue(v201);
            id v40 = v244;
            if (os_log_type_enabled(v202, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)__int128 buf = 138412290;
              *(void *)&uint8_t buf[4] = v243;
              _os_log_error_impl( (void *)&_mh_execute_header,  v202,  OS_LOG_TYPE_ERROR,  "[%@] Manifest resulted in no assets imported",  buf,  0xCu);
            }

            id v199 = (NSError **)a7;
            if (a7)
            {
              uint64_t v203 = ASDErrorWithTitleAndMessage( ASDErrorDomain,  851LL,  @"Invalid manifest",  @"Manifest resulted in no assets imported");
              uint64_t v200 = (NSError *)(id)objc_claimAutoreleasedReturnValue(v203);
              goto LABEL_153;
            }
          }

          else
          {
            uint64_t v197 = ASDLogHandleForCategory(41LL);
            unint64_t v198 = (os_log_s *)objc_claimAutoreleasedReturnValue(v197);
            if (os_log_type_enabled(v198, OS_LOG_TYPE_ERROR))
            {
              unsigned int v222 = sub_1001BAF34(v238);
              uint64_t v223 = (void *)objc_claimAutoreleasedReturnValue(v222);
              *(_DWORD *)__int128 buf = 138412802;
              *(void *)&uint8_t buf[4] = v243;
              *(_WORD *)&buf[12] = 2114;
              *(void *)&buf[14] = v223;
              *(_WORD *)&_BYTE buf[22] = 2114;
              id v259 = v194;
              _os_log_error_impl( (void *)&_mh_execute_header,  v198,  OS_LOG_TYPE_ERROR,  "[%@] [%{public}@] Failed install alllowed check with error: %{public}@",  buf,  0x20u);
            }

            id v40 = v244;
            id v199 = (NSError **)a7;
            if (a7)
            {
              uint64_t v200 = v194;
              uint64_t v194 = v200;
LABEL_153:
              id v39 = 0LL;
              *id v199 = v200;
LABEL_169:

LABEL_170:
              goto LABEL_171;
            }
          }

  if (os_variant_has_internal_content("com.apple.appstored"))
  {
    __int16 v133 = sub_1002F936C((uint64_t)&OBJC_CLASS___AppDefaultsManager);
    id v134 = (void *)objc_claimAutoreleasedReturnValue(v133);

    if (v134)
    {
      id v135 = sub_1002F936C((uint64_t)&OBJC_CLASS___AppDefaultsManager);
      uint64_t v136 = (void *)objc_claimAutoreleasedReturnValue(v135);
      sub_1002FB794(v142, v136);
    }
  }
}

LABEL_168:
          id v39 = 0LL;
          goto LABEL_169;
        }

        if (v171)
        {
          id v174 = sub_1001BB14C((uint64_t)v238);
          unint64_t v175 = (void *)objc_claimAutoreleasedReturnValue(v174);
          -[SQLiteMemoryEntity setValue:forProperty:](self, "setValue:forProperty:", v175, @"receipt");

          goto LABEL_123;
        }

        id v204 = sub_1001BAF34(v238);
        id v205 = (void *)objc_claimAutoreleasedReturnValue(v204);
        uint64_t v194 = (NSError *)objc_claimAutoreleasedReturnValue( +[ApplicationProxy proxyForBundleID:]( &OBJC_CLASS___ApplicationProxy,  "proxyForBundleID:",  v205));

        unsigned int v206 = -[NSError isInstalled](v194, "isInstalled");
        uint64_t v207 = ASDLogHandleForCategory(41LL);
        uint64_t v208 = (os_log_s *)objc_claimAutoreleasedReturnValue(v207);
        uint64_t v209 = v208;
        if (v206)
        {
          id v40 = v244;
          if (os_log_type_enabled(v208, OS_LOG_TYPE_DEFAULT))
          {
            unsigned __int8 v210 = sub_1001BAF34(v238);
            id v211 = (void *)objc_claimAutoreleasedReturnValue(v210);
            *(_DWORD *)__int128 buf = 138412546;
            *(void *)&uint8_t buf[4] = v243;
            *(_WORD *)&buf[12] = 2114;
            *(void *)&buf[14] = v211;
            _os_log_impl( (void *)&_mh_execute_header,  v209,  OS_LOG_TYPE_DEFAULT,  "[%@] [%{public}@] Manifest only receipt update",  buf,  0x16u);
          }

          id v212 = sub_1001BB14C((uint64_t)v238);
          unint64_t v213 = (void *)objc_claimAutoreleasedReturnValue(v212);
          id v251 = 0LL;
          sub_1002E6898((uint64_t)&OBJC_CLASS___WriteReceipt, v213, v194, v243, &v251);
          uint64_t v209 = (os_log_s *)v251;

          uint64_t v214 = ASDLogHandleForCategory(41LL);
          uint64_t v215 = (os_log_s *)objc_claimAutoreleasedReturnValue(v214);
          unsigned int v216 = v215;
          if (v209)
          {
            if (os_log_type_enabled(v215, OS_LOG_TYPE_ERROR))
            {
              BOOL v217 = sub_1001BAF34(v238);
              id v218 = (void *)objc_claimAutoreleasedReturnValue(v217);
              *(_DWORD *)__int128 buf = 138412802;
              *(void *)&uint8_t buf[4] = v243;
              *(_WORD *)&buf[12] = 2114;
              *(void *)&buf[14] = v218;
              *(_WORD *)&_BYTE buf[22] = 2114;
              id v259 = v209;
              _os_log_error_impl( (void *)&_mh_execute_header,  v216,  OS_LOG_TYPE_ERROR,  "[%@] [%{public}@] Error writing receipt: %{public}@",  buf,  0x20u);
LABEL_165:

              id v40 = v244;
            }
          }

          else if (os_log_type_enabled(v215, OS_LOG_TYPE_DEFAULT))
          {
            id v224 = sub_1001BAF34(v238);
            id v218 = (void *)objc_claimAutoreleasedReturnValue(v224);
            *(_DWORD *)__int128 buf = 138412546;
            *(void *)&uint8_t buf[4] = v243;
            *(_WORD *)&buf[12] = 2114;
            *(void *)&buf[14] = v218;
            _os_log_impl( (void *)&_mh_execute_header,  v216,  OS_LOG_TYPE_DEFAULT,  "[%@] [%{public}@] Wrote receipt",  buf,  0x16u);
            goto LABEL_165;
          }
        }

        else
        {
          id v40 = v244;
          if (!os_log_type_enabled(v208, OS_LOG_TYPE_ERROR))
          {
LABEL_167:

            goto LABEL_168;
          }

          id v219 = sub_1001BAF34(v238);
          unsigned int v216 = (os_log_s *)objc_claimAutoreleasedReturnValue(v219);
          *(_DWORD *)__int128 buf = 138412546;
          *(void *)&uint8_t buf[4] = v243;
          *(_WORD *)&buf[12] = 2114;
          *(void *)&buf[14] = v216;
          _os_log_error_impl( (void *)&_mh_execute_header,  v209,  OS_LOG_TYPE_ERROR,  "[%@] [%{public}@] Failed up update receipt on app that is not installed",  buf,  0x16u);
        }

        goto LABEL_167;
      }

      uint64_t v72 = ASDLogHandleForCategory(41LL);
      id v73 = (os_log_s *)objc_claimAutoreleasedReturnValue(v72);
      if (os_log_type_enabled(v73, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)__int128 buf = 138412290;
        *(void *)&uint8_t buf[4] = v243;
        _os_log_error_impl( (void *)&_mh_execute_header,  v73,  OS_LOG_TYPE_ERROR,  "[%@] bundle-identifier required for iOS platform manifest",  buf,  0xCu);
      }

      id v69 = a7;
      if (a7)
      {
        uint64_t v70 = ASDErrorDomain;
        uint64_t v71 = @"bundle-identifier required for iOS platform manifest";
        goto LABEL_33;
      }
    }

    else
    {
      uint64_t v67 = ASDLogHandleForCategory(41LL);
      uint64_t v68 = (os_log_s *)objc_claimAutoreleasedReturnValue(v67);
      if (os_log_type_enabled(v68, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)__int128 buf = 138412290;
        *(void *)&uint8_t buf[4] = v243;
        _os_log_error_impl( (void *)&_mh_execute_header,  v68,  OS_LOG_TYPE_ERROR,  "[%@] title required for iOS platform manifest",  buf,  0xCu);
      }

      id v69 = a7;
      if (a7)
      {
        uint64_t v70 = ASDErrorDomain;
        uint64_t v71 = @"title required for iOS platform manifest";
LABEL_33:
        uint64_t v74 = ASDErrorWithTitleAndMessage(v70, 851LL, @"Invalid manifest", v71);
        id v39 = 0LL;
        *id v69 = (id)objc_claimAutoreleasedReturnValue(v74);
        goto LABEL_171;
      }
    }

    id v39 = 0LL;
    goto LABEL_171;
  }

uint64_t sub_1001C2634(uint64_t a1, void *a2)
{
  id v2 = sub_1001B4590(a2, *(void **)(a1 + 32));
  return 1LL;
}

void sub_1001C2660(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  if (v9)
  {
    uint64_t v10 = ASDLogHandleForCategory(41LL);
    id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      id Property = *(id *)(a1 + 32);
      if (Property) {
        id Property = objc_getProperty(Property, v12, 90LL, 1);
      }
      *(_DWORD *)__int128 buf = 138412546;
      id v28 = Property;
      __int16 v29 = 2112;
      id v30 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "[%@] Request failed with error: %@",  buf,  0x16u);
    }

    uint64_t v14 = *(void *)(a1 + 40);
    uint64_t v15 = ASDErrorWithSafeUserInfo(v9);
    id v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
    (*(void (**)(uint64_t, void *))(v14 + 16))(v14, v16);
  }

  else
  {
    dispatch_queue_global_t global_queue = dispatch_get_global_queue(*(unsigned int *)(a1 + 48), 0LL);
    uint64_t v18 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
    uint64_t v19 = _NSConcreteStackBlock;
    uint64_t v20 = 3221225472LL;
    id v21 = sub_1001C2834;
    id v22 = &unk_1003EA5C0;
    uint64_t v23 = *(void *)(a1 + 32);
    id v24 = v8;
    id v25 = v7;
    id v26 = *(id *)(a1 + 40);
    dispatch_async(v18, &v19);
  }

  objc_msgSend(*(id *)(*(void *)(a1 + 32) + 66), "finishTasksAndInvalidate", v19, v20, v21, v22, v23);
}

void sub_1001C2834(uint64_t a1)
{
  uint64_t v1 = *(char **)(a1 + 32);
  id v2 = *(void **)(a1 + 48);
  id v3 = *(void **)(a1 + 56);
  id v171 = *(id *)(a1 + 40);
  id v175 = v2;
  id v174 = v3;
  if (!v1) {
    goto LABEL_124;
  }
  self = v1;
  if (!v175 || ![v175 length])
  {
    uint64_t v46 = ASDLogHandleForCategory(41LL);
    uint64_t v47 = (os_log_s *)objc_claimAutoreleasedReturnValue(v46);
    if (os_log_type_enabled(v47, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)id v196 = 138412290;
      *(void *)&v196[4] = objc_getProperty(v1, v48, 90LL, 1);
      _os_log_error_impl( (void *)&_mh_execute_header,  v47,  OS_LOG_TYPE_ERROR,  "[%@] No manifest data was received",  v196,  0xCu);
    }

    uint64_t v49 = ASDErrorWithDescription(ASDErrorDomain, 854LL, @"No manifest data received");
    unint64_t v173 = (void *)objc_claimAutoreleasedReturnValue(v49);
    v174[2](v174, v173);

    goto LABEL_124;
  }

  id v4 = sub_1002C8E8C(objc_alloc(&OBJC_CLASS___HashDigest), 0LL);
  sub_1002C90C4(v4, v175);
  id v172 = v4;
  id v6 = sub_1002C8F1C((uint64_t)v4, v5);
  uint64_t v7 = objc_claimAutoreleasedReturnValue(v6);
  id v8 = *(void **)(v1 + 58);
  *(void *)(v1 + 5_Block_object_dispose(va, 8) = v7;

  if (*(void *)(v1 + 98) && (objc_msgSend(*(id *)(v1 + 58), "isEqualToString:") & 1) == 0)
  {
    uint64_t v54 = ASDLogHandleForCategory(41LL);
    double v55 = (os_log_s *)objc_claimAutoreleasedReturnValue(v54);
    if (os_log_type_enabled(v55, OS_LOG_TYPE_ERROR))
    {
      id Property = objc_getProperty(v1, v56, 90LL, 1);
      uint64_t v162 = *(void *)(v1 + 98);
      SEL v163 = *(void **)(v1 + 58);
      *(_DWORD *)id v196 = 138412802;
      *(void *)&v196[4] = Property;
      *(_WORD *)&v196[12] = 2114;
      *(void *)&v196[14] = v162;
      *(_WORD *)&v196[22] = 2114;
      uint64_t v197 = v163;
      _os_log_error_impl( (void *)&_mh_execute_header,  v55,  OS_LOG_TYPE_ERROR,  "[%@] Manifest has changed, original was: %{public}@ this request: %{public}@",  v196,  0x20u);
    }

    uint64_t v57 = ASDErrorWithDescription(ASDErrorDomain, 854LL, @"Provided hash did not match");
    uint64_t v170 = (void *)objc_claimAutoreleasedReturnValue(v57);
    v174[2](v174, v170);

    goto LABEL_123;
  }

  id v185 = 0LL;
  unint64_t v168 = (void *)objc_claimAutoreleasedReturnValue( +[NSPropertyListSerialization propertyListWithData:options:format:error:]( &OBJC_CLASS___NSPropertyListSerialization,  "propertyListWithData:options:format:error:",  v175,  0LL,  0LL,  &v185));
  id v169 = v185;
  uint64_t v10 = objc_opt_class(&OBJC_CLASS___NSDictionary, v9);
  if ((objc_opt_isKindOfClass(v168, v10) & 1) == 0)
  {
    uint64_t v50 = ASDLogHandleForCategory(41LL);
    id v51 = (os_log_s *)objc_claimAutoreleasedReturnValue(v50);
    if (os_log_type_enabled(v51, OS_LOG_TYPE_ERROR))
    {
      id v160 = objc_getProperty(v1, v52, 90LL, 1);
      *(_DWORD *)id v196 = 138412546;
      *(void *)&v196[4] = v160;
      *(_WORD *)&v196[12] = 2114;
      *(void *)&v196[14] = v169;
      _os_log_error_impl( (void *)&_mh_execute_header,  v51,  OS_LOG_TYPE_ERROR,  "[%@] Could not parse manifest data: %{public}@",  v196,  0x16u);
    }

    uint64_t v53 = ASDErrorWithUnderlyingErrorAndDescription(v169, ASDErrorDomain, 854LL, @"Manifest could not be parsed");
    id v167 = (id *)objc_claimAutoreleasedReturnValue(v53);
    v174[2](v174, v167);
    goto LABEL_122;
  }

  id v167 = sub_100208DA8((id *)objc_alloc(&OBJC_CLASS___UPPManifest), v168);
  unint64_t v179 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
  __int128 v188 = 0u;
  __int128 v189 = 0u;
  __int128 v186 = 0u;
  __int128 v187 = 0u;
  id v11 = sub_100208E1C((uint64_t)v167);
  id obj = (id)objc_claimAutoreleasedReturnValue(v11);
  uint64_t v12 = 0LL;
  id v13 = [obj countByEnumeratingWithState:&v186 objects:v196 count:16];
  if (v13)
  {
    uint64_t v14 = *(void *)v187;
    id v177 = (id)ASDErrorDomain;
    do
    {
      for (uint64_t i = 0LL; i != v13; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v187 != v14) {
          objc_enumerationMutation(obj);
        }
        id v16 = *(id **)(*((void *)&v186 + 1) + 8LL * (void)i);
        id v17 = sub_1001BAFF4(v16);
        uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(v17);
        uint64_t v20 = v18;
        if (v18
          && (id v21 = v18,
              objc_opt_self(&OBJC_CLASS___UPPManifestDownloadTask),
              unsigned __int8 v22 = -[NSString isEqualToString:](v21, "isEqualToString:", @"com.apple.platform.appletvos"),
              v21,
              (v22 & 1) == 0))
        {
          uint64_t v38 = ASDLogHandleForCategory(41LL);
          id v39 = (os_log_s *)objc_claimAutoreleasedReturnValue(v38);
          if (os_log_type_enabled(v39, OS_LOG_TYPE_ERROR))
          {
            id v41 = objc_getProperty(self, v40, 90LL, 1);
            uint64_t v42 = sub_1001BAF34(v16);
            BOOL v43 = (void *)objc_claimAutoreleasedReturnValue(v42);
            *(_DWORD *)__int128 buf = 138412802;
            *(void *)&uint8_t buf[4] = v41;
            *(_WORD *)&buf[12] = 2114;
            *(void *)&buf[14] = v43;
            *(_WORD *)&_BYTE buf[22] = 2114;
            uint64_t v194 = v21;
            _os_log_error_impl( (void *)&_mh_execute_header,  v39,  OS_LOG_TYPE_ERROR,  "[%@] [%{public}@] Skipping due to incompatible platform: %{public}@",  buf,  0x20u);
          }

          uint64_t v27 = (AppInstall *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Not compatible with this platform: %@",  v21));
          NSErrorUserInfoKey v202 = NSDebugDescriptionErrorKey;
          uint64_t v203 = v27;
          uint64_t v31 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v203,  &v202,  1LL));
          id v28 = (NSString *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  v177,  752LL,  v31));
        }

        else
        {
          uint64_t v23 = *(void **)(self + 50);
          id v24 = *(void **)(self + 58);
          id v25 = *(void **)(self + 82);
          id v26 = objc_getProperty(self, v19, 90LL, 1);
          unint64_t v192 = v12;
          uint64_t v27 = sub_1001C0DD8((uint64_t)&OBJC_CLASS___UPPManifestDownloadTask, v16, v23, v24, v25, v26, &v192);
          id v28 = v192;

          if (!v27) {
            goto LABEL_26;
          }
          __int16 v29 = sub_1001BAF34(v16);
          id v30 = (void *)objc_claimAutoreleasedReturnValue(v29);
          uint64_t v31 = (void *)objc_claimAutoreleasedReturnValue( +[ApplicationProxy proxyForBundleID:]( &OBJC_CLASS___ApplicationProxy,  "proxyForBundleID:",  v30));

          unsigned int v32 = [v31 isInstalled];
          double v33 = &off_10040C1A8;
          if (v32)
          {
            id v34 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v31, "bundleURL", &off_10040C1A8));
            BOOL v35 = v34 == 0LL;

            if (!v35)
            {
              uint64_t v36 = (void *)objc_claimAutoreleasedReturnValue([v31 bundleURL]);
              -[SQLiteMemoryEntity setValue:forProperty:](v27, "setValue:forProperty:", v36, @"bundle_url");
            }

            double v33 = &off_10040C190;
          }

          -[SQLiteMemoryEntity setValue:forProperty:](v27, "setValue:forProperty:", v33, @"coordinator_intent");
          uint64_t v37 = *(void *)(self + 82);
          if (v37) {
            -[SQLiteMemoryEntity setValue:forProperty:](v27, "setValue:forProperty:", v37, @"client_id");
          }
          [v179 addObject:v27];
        }

LABEL_26:
        uint64_t v12 = v28;
      }

      id v13 = [obj countByEnumeratingWithState:&v186 objects:v196 count:16];
    }

    while (v13);
  }

  if (![v179 count])
  {

    goto LABEL_41;
  }

  uint64_t v44 = v179;
  if (!v179)
  {
LABEL_41:
    uint64_t v45 = v12;
    uint64_t v44 = 0LL;
    goto LABEL_42;
  }

  uint64_t v45 = 0LL;
LABEL_42:
  id v58 = v44;
  id v166 = [v44 copy];

  id v165 = v45;
  if (![v166 count])
  {
    if (v165)
    {
      sub_1001C0AF8((uint64_t)self, v165);
      v174[2](v174, v165);
    }

    else
    {
      ((void (*)(void))v174[2])();
    }

    goto LABEL_121;
  }

  if ((self[74] & 1) == 0)
  {
    id v59 = v166;
    id v60 = v171;
    *(void *)&__int128 v186 = 0LL;
    *((void *)&v186 + 1) = &v186;
    *(void *)&__int128 v187 = 0x2020000000LL;
    BYTE8(v187) = 0;
    uint64_t v61 = (void *)objc_claimAutoreleasedReturnValue([v59 firstObject]);
    if (v61)
    {
      uint64_t v62 = (void *)objc_claimAutoreleasedReturnValue([v59 firstObject]);
      id v63 = (void *)objc_claimAutoreleasedReturnValue([v62 valueForProperty:@"bundle_name"]);

      uint64_t v64 = (void *)objc_claimAutoreleasedReturnValue([v60 URL]);
      id v65 = sub_10023FFB4( (uint64_t)UPPManifestDialogRequest,  v64,  v63,  (unint64_t)[v59 count]);
      uint64_t v66 = (void *)objc_claimAutoreleasedReturnValue(v65);

      dispatch_semaphore_t v67 = dispatch_semaphore_create(0LL);
      uint64_t v68 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(self + 106) notificationClient]);
      *(void *)id v196 = _NSConcreteStackBlock;
      *(void *)&v196[8] = 3221225472LL;
      *(void *)&v196[16] = sub_1001C3C80;
      uint64_t v197 = &unk_1003EB428;
      unint64_t v198 = self;
      id v69 = v66;
      id v199 = v69;
      uint64_t v201 = &v186;
      uint64_t v70 = v67;
      uint64_t v200 = v70;
      [v68 deliverDialogRequest:v69 withResultHandler:v196];

      dispatch_semaphore_wait(v70, 0xFFFFFFFFFFFFFFFFLL);
    }

    int v71 = *(unsigned __int8 *)(*((void *)&v186 + 1) + 24LL);

    _Block_object_dispose(&v186, 8);
    if (!v71)
    {
      uint64_t v154 = ASDLogHandleForCategory(41LL);
      unsigned int v155 = (os_log_s *)objc_claimAutoreleasedReturnValue(v154);
      if (os_log_type_enabled(v155, OS_LOG_TYPE_DEFAULT))
      {
        id v157 = objc_getProperty(self, v156, 90LL, 1);
        *(_DWORD *)id v196 = 138412290;
        *(void *)&v196[4] = v157;
        _os_log_impl( (void *)&_mh_execute_header,  v155,  OS_LOG_TYPE_DEFAULT,  "[%@] User cancelled manifest confirmation",  v196,  0xCu);
      }

      uint64_t v158 = ASDErrorWithDescription(ASDErrorDomain, 907LL, @"User canceled confirmation");
      uint64_t v159 = (void *)objc_claimAutoreleasedReturnValue(v158);

      v174[2](v174, v159);
      goto LABEL_121;
    }
  }

  id v164 = v166;
  if (![v164 count]) {
    goto LABEL_114;
  }
  __int128 v188 = 0u;
  __int128 v189 = 0u;
  __int128 v186 = 0u;
  __int128 v187 = 0u;
  id v178 = v164;
  id obja = [v178 countByEnumeratingWithState:&v186 objects:v196 count:16];
  if (!obja) {
    goto LABEL_113;
  }
  uint64_t v180 = *(void *)v187;
  do
  {
    uint64_t v72 = 0LL;
    do
    {
      if (*(void *)v187 != v180) {
        objc_enumerationMutation(v178);
      }
      id v73 = *(void **)(*((void *)&v186 + 1) + 8LL * (void)v72);
      uint64_t v74 = sub_1002E5EDC((uint64_t)&OBJC_CLASS___AppInstallPolicy);
      unint64_t v183 = (id *)objc_claimAutoreleasedReturnValue(v74);
      if (v73) {
        id v76 = objc_getProperty(v73, v75, 40LL, 1);
      }
      else {
        id v76 = 0LL;
      }
      id v77 = v76;
      id v78 = (void *)objc_claimAutoreleasedReturnValue([v77 firstObject]);

      if (v78)
      {
        __int128 v79 = (void *)objc_claimAutoreleasedReturnValue([v78 valueForProperty:@"package_url"]);
        if (v79)
        {
          uint64_t v80 = objc_alloc(&OBJC_CLASS___DetermineSizeForURLTask);
          id v81 = sub_100323C54(v73);
          double v82 = (void *)objc_claimAutoreleasedReturnValue(v81);
          double v83 = sub_10025D76C((id *)&v80->super.super.super.isa, v79, v82);

          if ([self runSubTask:v83 returningError:0])
          {
            if (v83) {
              id v85 = objc_getProperty(v83, v84, 72LL, 1);
            }
            else {
              id v85 = 0LL;
            }
            id v86 = (os_log_s *)v85;
            [v78 setValue:v86 forProperty:@"bytes_total"];
          }

          else
          {
            uint64_t v92 = ASDLogHandleForCategory(41LL);
            id v86 = (os_log_s *)objc_claimAutoreleasedReturnValue(v92);
            if (os_log_type_enabled(v86, OS_LOG_TYPE_ERROR))
            {
              id v143 = objc_getProperty(self, v93, 90LL, 1);
              id v144 = sub_100323C54(v73);
              uint64_t v146 = (void *)objc_claimAutoreleasedReturnValue(v144);
              if (v83) {
                id v147 = objc_getProperty(v83, v145, 32LL, 1);
              }
              else {
                id v147 = 0LL;
              }
              uint64_t v148 = (NSString *)v147;
              *(_DWORD *)__int128 buf = 138412802;
              *(void *)&uint8_t buf[4] = v143;
              *(_WORD *)&buf[12] = 2114;
              *(void *)&buf[14] = v146;
              *(_WORD *)&_BYTE buf[22] = 2114;
              uint64_t v194 = v148;
              _os_log_error_impl( (void *)&_mh_execute_header,  v86,  OS_LOG_TYPE_ERROR,  "[%@] [%{public}@] Unable to determine download size error: %{public}@",  buf,  0x20u);
            }
          }
        }

        id v94 = sub_1002D6750(v73, v78);
        id v95 = (uint64_t *)sub_1002D883C((id *)objc_alloc(&OBJC_CLASS___ReviewNetworkPolicyTask), v94);
        if ([self runSubTask:v95 returningError:0])
        {
          if (v95)
          {
            sub_1002E60D4((uint64_t)v183, v95[7]);
            sub_1002E6174((uint64_t)v183, v95[8]);
            uint64_t v96 = v95[9];
          }

          else
          {
            sub_1002E60D4((uint64_t)v183, 0LL);
            sub_1002E6174((uint64_t)v183, 0LL);
            uint64_t v96 = 0LL;
          }

          sub_1002E5F7C((uint64_t)v183, v96);
          sub_100323D30(v73, v183);
        }

        else
        {
          uint64_t v97 = ASDLogHandleForCategory(41LL);
          double v98 = (os_log_s *)objc_claimAutoreleasedReturnValue(v97);
          if (os_log_type_enabled(v98, OS_LOG_TYPE_ERROR))
          {
            id v129 = objc_getProperty(self, v99, 90LL, 1);
            uint64_t v130 = sub_100323C54(v73);
            double v132 = (void *)objc_claimAutoreleasedReturnValue(v130);
            if (v95) {
              id v133 = objc_getProperty(v95, v131, 32LL, 1);
            }
            else {
              id v133 = 0LL;
            }
            id v134 = (NSString *)v133;
            *(_DWORD *)__int128 buf = 138412802;
            *(void *)&uint8_t buf[4] = v129;
            *(_WORD *)&buf[12] = 2114;
            *(void *)&buf[14] = v132;
            *(_WORD *)&_BYTE buf[22] = 2114;
            uint64_t v194 = v134;
            _os_log_error_impl( (void *)&_mh_execute_header,  v98,  OS_LOG_TYPE_ERROR,  "[%@] [%{public}@] Unable to determine policy error: %{public}@",  buf,  0x20u);
          }
        }
      }

      else
      {
        uint64_t v87 = ASDLogHandleForCategory(41LL);
        __int128 v79 = (void *)objc_claimAutoreleasedReturnValue(v87);
        if (os_log_type_enabled((os_log_t)v79, OS_LOG_TYPE_FAULT))
        {
          id v89 = objc_getProperty(self, v88, 90LL, 1);
          uint64_t v90 = sub_100323C54(v73);
          id v91 = (void *)objc_claimAutoreleasedReturnValue(v90);
          *(_DWORD *)__int128 buf = 138412546;
          *(void *)&uint8_t buf[4] = v89;
          *(_WORD *)&buf[12] = 2114;
          *(void *)&buf[14] = v91;
          _os_log_fault_impl( (void *)&_mh_execute_header,  (os_log_t)v79,  OS_LOG_TYPE_FAULT,  "[%@] [%{public}@] Package for this installation is now missing",  buf,  0x16u);
        }
      }

      id v101 = objc_getProperty(self, v100, 90LL, 1);
      id v102 = v73;
      id v103 = v101;
      objc_opt_self(&OBJC_CLASS___UPPManifestDownloadTask);
      uint64_t v203 = 0LL;
      id v104 = sub_1002DF434(v102);
      id v105 = (void *)objc_claimAutoreleasedReturnValue(v104);
      id v106 = v203;
      p_isa = (NSString *)&v106->super.super.isa;
      if (!v105)
      {
        uint64_t v121 = ASDLogHandleForCategory(41LL);
        uint64_t v109 = (os_log_s *)objc_claimAutoreleasedReturnValue(v121);
        if (os_log_type_enabled(v109, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v122 = sub_100323C54(v102);
          id v123 = (void *)objc_claimAutoreleasedReturnValue(v122);
          *(_DWORD *)__int128 buf = 138412802;
          *(void *)&uint8_t buf[4] = v103;
          *(_WORD *)&buf[12] = 2114;
          *(void *)&buf[14] = v123;
          *(_WORD *)&_BYTE buf[22] = 2114;
          uint64_t v194 = p_isa;
          _os_log_impl( (void *)&_mh_execute_header,  v109,  OS_LOG_TYPE_DEFAULT,  "[%@]  [%{public}@] Failed to create coordinator builder: %{public}@",  buf,  0x20u);
        }

LABEL_85:
        __int128 v120 = 0LL;
        goto LABEL_89;
      }

      NSErrorUserInfoKey v202 = (NSErrorUserInfoKey)&v106->super.super.isa;
      id v108 = sub_1002DF048(v105, &v202);
      uint64_t v109 = (os_log_s *)objc_claimAutoreleasedReturnValue(v108);
      uint64_t v110 = v202;

      if (v109)
      {
        if (!-[os_log_s conformsToProtocol:]( v109,  "conformsToProtocol:",  &OBJC_PROTOCOL___IXCoordinatorWithPlaceholderPromise)
          || -[os_log_s creatorIdentifier](v109, "creatorIdentifier") != (id)1
          || (sub_1001E4DA0(v109) & 1) != 0)
        {
          goto LABEL_82;
        }

        if (v73) {
          id v112 = objc_getProperty(v102, v111, 40LL, 1);
        }
        else {
          id v112 = 0LL;
        }
        id v113 = v112;
        int v114 = (void *)objc_claimAutoreleasedReturnValue([v113 firstObject]);
        unint64_t v192 = v110;
        id v115 = sub_10026D48C(v102, v114, &v192);
        unint64_t v176 = (void *)objc_claimAutoreleasedReturnValue(v115);
        uint64_t v116 = v192;

        id v191 = v116;
        id v117 = sub_10026C808((uint64_t)v176, &v191);
        id v118 = (void *)objc_claimAutoreleasedReturnValue(v117);
        p_isa = v191;

        if (v118)
        {
          id v190 = p_isa;
          unsigned __int8 v119 = sub_1001E606C(v109, v118, &v190);
          uint64_t v110 = v190;

          if ((v119 & 1) != 0)
          {

LABEL_82:
            uint64_t v109 = v109;
            p_isa = v110;
            __int128 v120 = v109;
            goto LABEL_89;
          }

          uint64_t v139 = ASDLogHandleForCategory(41LL);
          id v140 = (os_log_s *)objc_claimAutoreleasedReturnValue(v139);
          if (os_log_type_enabled(v140, OS_LOG_TYPE_DEFAULT))
          {
            id v141 = sub_100323C54(v102);
            id v142 = (void *)objc_claimAutoreleasedReturnValue(v141);
            *(_DWORD *)__int128 buf = 138412802;
            *(void *)&uint8_t buf[4] = v103;
            *(_WORD *)&buf[12] = 2114;
            *(void *)&buf[14] = v142;
            *(_WORD *)&_BYTE buf[22] = 2114;
            uint64_t v194 = v110;
            _os_log_impl( (void *)&_mh_execute_header,  v140,  OS_LOG_TYPE_DEFAULT,  "[%@] [%{public}@] Failed to set placeholder: %{public}@",  buf,  0x20u);
          }

          [v118 cancelForReason:v110 client:1 error:0];
          p_isa = v110;
        }

        else
        {
          uint64_t v135 = ASDLogHandleForCategory(41LL);
          uint64_t v136 = (os_log_s *)objc_claimAutoreleasedReturnValue(v135);
          if (os_log_type_enabled(v136, OS_LOG_TYPE_DEFAULT))
          {
            id v137 = sub_100323C54(v102);
            id v138 = (void *)objc_claimAutoreleasedReturnValue(v137);
            *(_DWORD *)__int128 buf = 138412802;
            *(void *)&uint8_t buf[4] = v103;
            *(_WORD *)&buf[12] = 2114;
            *(void *)&buf[14] = v138;
            *(_WORD *)&_BYTE buf[22] = 2114;
            uint64_t v194 = p_isa;
            _os_log_impl( (void *)&_mh_execute_header,  v136,  OS_LOG_TYPE_DEFAULT,  "[%@] [%{public}@] Failed to create placeholder: %{public}@",  buf,  0x20u);
          }
        }

        goto LABEL_85;
      }

      uint64_t v124 = ASDLogHandleForCategory(41LL);
      id v125 = (os_log_s *)objc_claimAutoreleasedReturnValue(v124);
      if (os_log_type_enabled(v125, OS_LOG_TYPE_DEFAULT))
      {
        double v126 = sub_100323C54(v102);
        unsigned int v127 = (void *)objc_claimAutoreleasedReturnValue(v126);
        *(_DWORD *)__int128 buf = 138412802;
        *(void *)&uint8_t buf[4] = v103;
        *(_WORD *)&buf[12] = 2114;
        *(void *)&buf[14] = v127;
        *(_WORD *)&_BYTE buf[22] = 2114;
        uint64_t v194 = v110;
        _os_log_impl( (void *)&_mh_execute_header,  v125,  OS_LOG_TYPE_DEFAULT,  "[%@] [%{public}@] Failed to create coordinator: %{public}@",  buf,  0x20u);
      }

      uint64_t v109 = 0LL;
      __int128 v120 = 0LL;
      p_isa = v110;
LABEL_89:

      if (v120)
      {
        uint64_t v128 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s uniqueIdentifier](v120, "uniqueIdentifier"));
        [v102 setValue:v128 forProperty:@"coordinator_id"];
      }

      uint64_t v72 = (char *)v72 + 1;
    }

    while (obja != v72);
    id v149 = [v178 countByEnumeratingWithState:&v186 objects:v196 count:16];
    id obja = v149;
  }

  while (v149);
LABEL_113:

  id v150 = sub_1002EEBC0((uint64_t)&OBJC_CLASS___AppInstallsDatabaseStore);
  uint64_t v151 = (void *)objc_claimAutoreleasedReturnValue(v150);
  *(void *)__int128 buf = _NSConcreteStackBlock;
  *(void *)&uint8_t buf[8] = 3221225472LL;
  *(void *)&uint8_t buf[16] = sub_1001C2634;
  uint64_t v194 = (NSString *)&unk_1003EA9D8;
  id v195 = v178;
  [v151 modifyUsingTransaction:buf];

  id v152 = sub_10023B9CC((uint64_t)&OBJC_CLASS___AppInstallScheduler);
  id v153 = (void *)objc_claimAutoreleasedReturnValue(v152);
  sub_10023C018((uint64_t)v153, 64LL);

LABEL_114:
  v174[2](v174, 0LL);

LABEL_121:
LABEL_122:

LABEL_123:
LABEL_124:
}

void sub_1001C3C54( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, char a37)
{
}

void sub_1001C3C80(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  if (v5)
  {
    uint64_t v6 = ASDLogHandleForCategory(41LL);
    uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      id Property = *(id *)(a1 + 32);
      if (Property) {
        id Property = objc_getProperty(Property, v8, 90LL, 1);
      }
      *(_DWORD *)__int128 buf = 138412546;
      id v18 = Property;
      __int16 v19 = 2114;
      id v20 = v5;
      _os_log_error_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_ERROR,  "[%@] Failed to present dialog, trying system dialog error: %{public}@",  buf,  0x16u);
    }

    uint64_t v9 = -[AMSSystemAlertDialogTask initWithRequest:]( objc_alloc(&OBJC_CLASS___AMSSystemAlertDialogTask),  "initWithRequest:",  *(void *)(a1 + 40));
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(-[AMSSystemAlertDialogTask present](v9, "present"));
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472LL;
    void v15[2] = sub_1001C3E24;
    v15[3] = &unk_1003EB400;
    __int128 v14 = *(_OWORD *)(a1 + 48);
    id v11 = (id)v14;
    __int128 v16 = v14;
    [v10 addFinishBlock:v15];
  }

  else
  {
    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([a2 selectedActionIdentifier]);
    *(_BYTE *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = [v12 isEqualToString:@"UPPManifestDialogActionInstall"];

    dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 48));
  }
}

uint64_t sub_1001C3E24(uint64_t a1, void *a2)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue([a2 selectedActionIdentifier]);
  *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = [v3 isEqualToString:@"UPPManifestDialogActionInstall"];

  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

uint64_t sub_1001C3E70(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

BOOL sub_1001C3F28(BOOL a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  if (a1)
  {
    if ([v3 databaseID])
    {
      id v5 = objc_alloc(&OBJC_CLASS___ODRAssetDownloadEntity);
      id v6 = [v4 databaseID];
      uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([(id)a1 connection]);
      id v8 = -[SQLiteEntity initWithPersistentID:onConnection:](v5, "initWithPersistentID:onConnection:", v6, v7);

      a1 = -[SQLiteEntity deleteFromDatabase](v8, "deleteFromDatabase");
    }

    else
    {
      uint64_t v9 = ASDLogHandleForCategory(19LL);
      uint64_t v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      {
        int v12 = 138543362;
        id v13 = v4;
        _os_log_error_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_ERROR,  "Failed to delete ODRDownload %{public}@ ",  (uint8_t *)&v12,  0xCu);
      }

      a1 = 0LL;
    }
  }

  return a1;
}

uint64_t sub_1001C4054(uint64_t *a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  if (a1) {
    BOOL v5 = v3 == 0LL;
  }
  else {
    BOOL v5 = 1;
  }
  uint64_t v6 = !v5;
  if (!v5)
  {
    uint64_t v7 = objc_opt_new(&OBJC_CLASS___ODRDatabaseChangeset);
    id v8 = sub_1002D9D08((uint64_t)v4);
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"bundle_id",  v9));

    id v11 = (void *)objc_claimAutoreleasedReturnValue([a1 connection]);
    id v12 = sub_10024C1D0((uint64_t)&OBJC_CLASS___ODRManifestEntity, v11, v10);
    id v13 = (void *)objc_claimAutoreleasedReturnValue(v12);

    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3221225472LL;
    void v16[2] = sub_1001C41B4;
    v16[3] = &unk_1003EB478;
    void v16[4] = a1;
    id v17 = v7;
    __int128 v14 = v7;
    [v13 enumeratePersistentIDsUsingBlock:v16];
    sub_1001C4254(a1, v10);
    sub_1001C4348(a1, v10);
    sub_10029155C(a1[2], v14);
  }

  return v6;
}

void sub_1001C41B4(uint64_t a1, uint64_t a2)
{
  id v4 = objc_alloc(&OBJC_CLASS___ODRManifestEntity);
  BOOL v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) connection]);
  id v8 = -[SQLiteEntity initWithPersistentID:onConnection:](v4, "initWithPersistentID:onConnection:", a2, v5);

  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(-[SQLiteEntity objectForKeyedSubscript:](v8, "objectForKeyedSubscript:", @"storage_id"));
  sub_1002914EC(v6, v7);

  -[SQLiteEntity deleteFromDatabase](v8, "deleteFromDatabase");
}

void sub_1001C4254(uint64_t *a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc_init(&OBJC_CLASS___ODRDatabaseChangeset);
  BOOL v5 = (void *)objc_claimAutoreleasedReturnValue([a1 connection]);
  id v6 = sub_10024C1D0((uint64_t)&OBJC_CLASS___ODRAssetPackEntity, v5, v3);
  id v8 = (id)objc_claimAutoreleasedReturnValue(v6);

  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  v9[2] = sub_1001C625C;
  v9[3] = &unk_1003EB478;
  void v9[4] = a1;
  uint64_t v10 = v4;
  uint64_t v7 = v4;
  [v8 enumeratePersistentIDsUsingBlock:v9];
  if (a1) {
    sub_10029155C(a1[2], v7);
  }
}

void sub_1001C4348(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue([a1 connection]);
  id v5 = sub_10024C1D0((uint64_t)&OBJC_CLASS___ODRTagEntity, v4, v3);
  id v6 = (id)objc_claimAutoreleasedReturnValue(v5);

  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  void v7[2] = sub_1001C631C;
  v7[3] = &unk_1003EB4C8;
  void v7[4] = a1;
  [v6 enumeratePersistentIDsUsingBlock:v7];
}

BOOL sub_1001C43F4(BOOL a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a4;
  if (a1)
  {
    id v9 = a3;
    uint64_t v10 = sub_10020C9E0(objc_alloc(&OBJC_CLASS___ODRManifest), (uint64_t)v7, v9, 0LL);
    id v11 = sub_1002D9790((uint64_t)&OBJC_CLASS___ODRApplication, v9);
    id v12 = (void *)objc_claimAutoreleasedReturnValue(v11);

    id v13 = [v12 mutableCopy];
    id v14 = sub_10020CB14(v10);
    uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
    sub_1002DB674((uint64_t)v13, v15);

    id v16 = sub_10020CAA4(v10);
    id v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
    id v18 = (void *)objc_claimAutoreleasedReturnValue([v17 stringValue]);
    sub_1002DB7B8((uint64_t)v13, v18);

    uint64_t v19 = ASDLogHandleForCategory(19LL);
    id v20 = (os_log_s *)objc_claimAutoreleasedReturnValue(v19);
    if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
    {
      int v22 = 138412802;
      id v23 = v8;
      __int16 v24 = 2048;
      id v25 = [v7 length];
      __int16 v26 = 2114;
      id v27 = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEFAULT,  "[%@] Importing %{iec-bytes}lu App Review manifest for %{public}@",  (uint8_t *)&v22,  0x20u);
    }

    a1 = sub_1001C45C0((uint64_t *)a1, v10, v13, 0);
  }

  return a1;
}

BOOL sub_1001C45C0(uint64_t *a1, void *a2, void *a3, int a4)
{
  id v6 = a2;
  id v7 = a3;
  if (!a1) {
    goto LABEL_52;
  }
  uint64_t v88 = a1;
  id v8 = v6;
  id v85 = v8;
  if ([v8 databaseID])
  {
    id v9 = objc_alloc(&OBJC_CLASS___ODRManifestEntity);
    id v10 = [v8 databaseID];
    id v11 = (NSMutableArray *)objc_claimAutoreleasedReturnValue([a1 connection]);
    id v12 = -[SQLiteEntity initWithPersistentID:onConnection:](v9, "initWithPersistentID:onConnection:", v10, v11);
  }

  else
  {
    id v13 = sub_10020CA80(v8);
    id v14 = (void *)objc_claimAutoreleasedReturnValue(v13);

    if (!v14)
    {

LABEL_11:
      uint64_t v26 = ASDLogHandleForCategory(19LL);
      id v27 = (os_log_s *)objc_claimAutoreleasedReturnValue(v26);
      if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)__int128 buf = 138543362;
        id v96 = v7;
        _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_DEFAULT,  "Asked to update a manifest, but none found matching %{public}@",  buf,  0xCu);
      }

      id v28 = sub_10020CA80(v8);
      id v29 = (id)objc_claimAutoreleasedReturnValue(v28);
      if (v29)
      {
        unsigned int v32 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"bundle_id",  v29));
        uint64_t v31 = a1;
        double v33 = (void *)objc_claimAutoreleasedReturnValue([a1 connection]);
        id v34 = sub_10024C088((uint64_t)&OBJC_CLASS___ODRManifestEntity, v33, v32);
        BOOL v35 = (void *)objc_claimAutoreleasedReturnValue(v34);

        id v36 = sub_1001E26D0(v35, (uint64_t)@"storage_id");
        id v30 = (void *)objc_claimAutoreleasedReturnValue(v36);
      }

      else
      {
        id v30 = 0LL;
        uint64_t v31 = a1;
      }

      uint64_t v37 = objc_alloc(&OBJC_CLASS___ODRManifestEntity);
      id v8 = v85;
      uint64_t v38 = (void *)objc_claimAutoreleasedReturnValue([v85 propertyValues]);
      id v39 = (void *)objc_claimAutoreleasedReturnValue([v31 connection]);
      id v12 = -[SQLiteEntity initWithPropertyValues:onConnection:](v37, "initWithPropertyValues:onConnection:", v38, v39);

      if (v30)
      {
        -[SQLiteEntity setObject:forKeyedSubscript:](v12, "setObject:forKeyedSubscript:", v30, @"storage_id");
        [v85 setValue:v30 forProperty:@"storage_id"];
      }

      goto LABEL_19;
    }

    id v11 = objc_opt_new(&OBJC_CLASS___NSMutableArray);
    id v15 = sub_10020CA80(v8);
    id v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
    id v17 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"bundle_id",  v16));
    -[NSMutableArray addObject:](v11, "addObject:", v17);

    id v18 = sub_10020CAA4(v8);
    uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue(v18);

    if (v19)
    {
      id v20 = sub_10020CAA4(v8);
      id v21 = (void *)objc_claimAutoreleasedReturnValue(v20);
      int v22 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"evid",  v21));
      -[NSMutableArray addObject:](v11, "addObject:", v22);
    }

    id v23 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v11));
    __int16 v24 = (void *)objc_claimAutoreleasedReturnValue([a1 connection]);
    id v25 = sub_10024C088((uint64_t)&OBJC_CLASS___ODRManifestEntity, v24, v23);
    id v12 = (ODRManifestEntity *)objc_claimAutoreleasedReturnValue(v25);
  }

  if (!v12) {
    goto LABEL_11;
  }
LABEL_19:
  id v84 = v6;
  id v40 = +[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", sub_10020CAC8(v8));
  id v41 = (void *)objc_claimAutoreleasedReturnValue(v40);
  -[SQLiteEntity setObject:forKeyedSubscript:](v12, "setObject:forKeyedSubscript:", v41, @"local_cache_allowed");

  if (v8) {
    id v42 = sub_1001E2598(v8, (uint64_t)@"is_store_based");
  }
  else {
    id v42 = 0LL;
  }
  int v43 = a4;
  uint64_t v44 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", v42));
  -[SQLiteEntity setObject:forKeyedSubscript:](v12, "setObject:forKeyedSubscript:", v44, @"is_store_based");

  uint64_t v45 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
  -[SQLiteEntity setObject:forKeyedSubscript:]( v12,  "setObject:forKeyedSubscript:",  v45,  @"last_modification_date");

  uint64_t v83 = (uint64_t)v7;
  id v46 = sub_1002DAB14((uint64_t)v7);
  uint64_t v47 = (void *)objc_claimAutoreleasedReturnValue(v46);
  -[SQLiteEntity setObject:forKeyedSubscript:](v12, "setObject:forKeyedSubscript:", v47, @"version");

  id v86 = objc_alloc_init(&OBJC_CLASS___ODRDatabaseChangeset);
  __int128 v91 = 0u;
  __int128 v92 = 0u;
  __int128 v93 = 0u;
  __int128 v94 = 0u;
  double v48 = sub_10020CCEC((id *)v8);
  uint64_t v49 = (void *)objc_claimAutoreleasedReturnValue(v48);
  id v90 = [v49 countByEnumeratingWithState:&v91 objects:v99 count:16];
  if (v90)
  {
    uint64_t v50 = *(void *)v92;
    uint64_t v89 = *(void *)v92;
    do
    {
      for (uint64_t i = 0LL; i != v90; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v92 != v50) {
          objc_enumerationMutation(v49);
        }
        id v52 = *(id *)(*((void *)&v91 + 1) + 8LL * (void)i);
        if ([v52 databaseID])
        {
          uint64_t v53 = objc_alloc(&OBJC_CLASS___ODRAssetPackEntity);
          id v54 = [v52 databaseID];
          double v55 = (void *)objc_claimAutoreleasedReturnValue([a1 connection]);
          uint64_t v56 = -[SQLiteEntity initWithPersistentID:onConnection:](v53, "initWithPersistentID:onConnection:", v54, v55);
        }

        else
        {
          id v57 = sub_1001F794C(v52);
          double v55 = (void *)objc_claimAutoreleasedReturnValue(v57);
          id v58 = sub_1001F7970(v52);
          id v59 = (void *)objc_claimAutoreleasedReturnValue(v58);
          id v60 = sub_1001C5A20(a1, v55, v59);
          uint64_t v56 = (ODRAssetPackEntity *)objc_claimAutoreleasedReturnValue(v60);
        }

        if (!v56)
        {
          id v63 = sub_1001F794C(v52);
          uint64_t v62 = (void *)objc_claimAutoreleasedReturnValue(v63);
          id v64 = sub_1001F7970(v52);
          uint64_t v65 = objc_claimAutoreleasedReturnValue(v64);
          uint64_t v66 = (void *)v65;
          if (v62 && v65)
          {
            dispatch_semaphore_t v67 = v49;
            id v68 = sub_1001F7CB0(v52);
            id v69 = (void *)objc_claimAutoreleasedReturnValue(v68);
            if (v69)
            {

LABEL_40:
              uint64_t v74 = objc_alloc(&OBJC_CLASS___ODRAssetPackEntity);
              double v75 = (void *)objc_claimAutoreleasedReturnValue([v52 propertyValues]);
              id v76 = (void *)objc_claimAutoreleasedReturnValue([a1 connection]);
              int v71 = -[SQLiteEntity initWithPropertyValues:onConnection:]( v74,  "initWithPropertyValues:onConnection:",  v75,  v76);

              a1 = v88;
              int v43 = a4;
              uint64_t v49 = v67;
              uint64_t v50 = v89;
              if (!v71)
              {
                uint64_t v77 = ASDLogHandleForCategory(19LL);
                id v78 = (os_log_s *)objc_claimAutoreleasedReturnValue(v77);
                if (os_log_type_enabled(v78, OS_LOG_TYPE_ERROR))
                {
                  *(_DWORD *)__int128 buf = 138543618;
                  id v96 = v62;
                  __int16 v97 = 2114;
                  double v98 = v66;
                  _os_log_error_impl( (void *)&_mh_execute_header,  v78,  OS_LOG_TYPE_ERROR,  "Failed to create a new asset pack entity for bundleID: %{public}@ bundleKey: %{public}@",  buf,  0x16u);
                }

                int v71 = 0LL;
              }
            }

            else
            {
              id v72 = sub_1001E26D0(v52, (uint64_t)@"source_url");
              id v73 = (void *)objc_claimAutoreleasedReturnValue(v72);

              if (v73) {
                goto LABEL_40;
              }
              uint64_t v79 = ASDLogHandleForCategory(19LL);
              int v71 = (os_log_s *)objc_claimAutoreleasedReturnValue(v79);
              if (os_log_type_enabled(v71, OS_LOG_TYPE_ERROR))
              {
                *(_DWORD *)__int128 buf = 138543618;
                id v96 = v62;
                __int16 v97 = 2114;
                double v98 = v66;
                _os_log_error_impl( (void *)&_mh_execute_header,  v71,  OS_LOG_TYPE_ERROR,  "Skipping import due to lack of a source URL. bundleID: %{public}@ bundleKey: %{public}@",  buf,  0x16u);
              }

              uint64_t v49 = v67;
              uint64_t v50 = v89;
            }
          }

          else
          {
            uint64_t v70 = ASDLogHandleForCategory(19LL);
            int v71 = (os_log_s *)objc_claimAutoreleasedReturnValue(v70);
            if (os_log_type_enabled(v71, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)__int128 buf = 138543618;
              id v96 = v62;
              __int16 v97 = 2114;
              double v98 = v66;
              _os_log_error_impl( (void *)&_mh_execute_header,  v71,  OS_LOG_TYPE_ERROR,  "Skipping import due to lack of identifiers. bundleID: %{public}@ bundleKey: %{public}@",  buf,  0x16u);
            }
          }

          goto LABEL_48;
        }

        uint64_t v61 = (void *)objc_claimAutoreleasedReturnValue(-[SQLiteEntity objectForKeyedSubscript:](v56, "objectForKeyedSubscript:", @"local_url"));
        [v52 setValue:v61 forProperty:@"local_url"];

        sub_1001EA590(v56, v52, v43);
        if ((v43 & 1) == 0 && sub_1002C8DD4(v56))
        {
          uint64_t v62 = (void *)objc_claimAutoreleasedReturnValue(-[SQLiteEntity objectForKeyedSubscript:](v56, "objectForKeyedSubscript:", @"local_url"));
          sub_10029147C((uint64_t)v86, v62);
LABEL_48:
        }
      }

      id v90 = [v49 countByEnumeratingWithState:&v91 objects:v99 count:16];
    }

    while (v90);
  }

  id v7 = (id)v83;
  id v80 = sub_10018786C(a1, v83);
  id v81 = (void *)objc_claimAutoreleasedReturnValue(v80);
  sub_10020CEC8((uint64_t)v85, v81);

  sub_10029155C(a1[2], v86);
  id v6 = v84;
LABEL_52:

  return a1 != 0LL;
}

BOOL sub_1001C4E64(BOOL a1, void *a2)
{
  BOOL v2 = a1;
  if (a1)
  {
    id v3 = a2;
    id v4 = objc_opt_new(&OBJC_CLASS___NSMutableDictionary);
    id v6 = v4;
    if (v3)
    {
      id v7 = objc_getProperty(v3, v5, 104LL, 1);
      -[NSMutableDictionary setObject:forKeyedSubscript:](v6, "setObject:forKeyedSubscript:", v7, @"bundle_id");

      id Property = objc_getProperty(v3, v8, 112LL, 1);
    }

    else
    {
      -[NSMutableDictionary setObject:forKeyedSubscript:](v4, "setObject:forKeyedSubscript:", 0LL, @"bundle_id");
      id Property = 0LL;
    }

    id v10 = Property;
    -[NSMutableDictionary setObject:forKeyedSubscript:](v6, "setObject:forKeyedSubscript:", v10, @"bundle_key");

    if (v3) {
      id v12 = objc_getProperty(v3, v11, 128LL, 1);
    }
    else {
      id v12 = 0LL;
    }
    id v13 = v12;
    -[NSMutableDictionary setObject:forKeyedSubscript:]( v6,  "setObject:forKeyedSubscript:",  v13,  @"coordinator_id");

    if (v3)
    {
      id v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", v3[18]));
      -[NSMutableDictionary setObject:forKeyedSubscript:]( v6,  "setObject:forKeyedSubscript:",  v14,  @"download_size");

      id v16 = objc_getProperty(v3, v15, 216LL, 1);
    }

    else
    {
      id v27 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", 0LL));
      -[NSMutableDictionary setObject:forKeyedSubscript:]( v6,  "setObject:forKeyedSubscript:",  v27,  @"download_size");

      id v16 = 0LL;
    }

    id v17 = v16;
    id v18 = (void *)objc_claimAutoreleasedReturnValue([v17 absoluteString]);
    -[NSMutableDictionary setObject:forKeyedSubscript:](v6, "setObject:forKeyedSubscript:", v18, @"source_url");

    if (v3)
    {
      uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", v3[29]));
      -[NSMutableDictionary setObject:forKeyedSubscript:](v6, "setObject:forKeyedSubscript:", v19, @"type");

      id v21 = objc_getProperty(v3, v20, 240LL, 1);
    }

    else
    {
      id v28 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", 0LL));
      -[NSMutableDictionary setObject:forKeyedSubscript:](v6, "setObject:forKeyedSubscript:", v28, @"type");

      id v21 = 0LL;
    }

    id v22 = v21;

    -[NSMutableDictionary setObject:forKeyedSubscript:](v6, "setObject:forKeyedSubscript:", v22, @"unique_key");
    id v23 = objc_alloc(&OBJC_CLASS___ODRAssetDownloadEntity);
    __int16 v24 = (void *)objc_claimAutoreleasedReturnValue([(id)v2 connection]);
    id v25 = -[SQLiteEntity initWithPropertyValues:onConnection:](v23, "initWithPropertyValues:onConnection:", v6, v24);

    BOOL v2 = -[SQLiteEntity persistentID](v25, "persistentID") != 0;
  }

  return v2;
}

uint64_t sub_1001C50FC(uint64_t result, uint64_t a2, void *a3)
{
  if (result)
  {
    uint64_t v4 = result;
    id v5 = a3;
    id v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", a2));
    [v5 setValue:v6 forProperty:@"is_paused"];

    uint64_t v7 = sub_1001C517C(v4, v5);
    return v7;
  }

  return result;
}

uint64_t sub_1001C517C(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = v3;
  if (a1)
  {
    if ([v3 databaseID])
    {
      id v6 = objc_alloc((Class)objc_msgSend((id)objc_opt_class(v4, v5), "databaseEntityClass"));
      id v7 = [v4 databaseID];
      SEL v8 = (void *)objc_claimAutoreleasedReturnValue([(id)a1 connection]);
      id v9 = [v6 initWithPersistentID:v7 onConnection:v8];

      id v10 = (void *)objc_claimAutoreleasedReturnValue([v4 propertyValues]);
      [v9 setValuesWithDictionary:v10];

      a1 = 1LL;
    }

    else
    {
      a1 = 0LL;
    }
  }

  return a1;
}

BOOL sub_1001C5238(uint64_t *a1, void *a2, uint64_t a3)
{
  if (a1)
  {
    id v5 = a2;
    id v6 = objc_opt_new(&OBJC_CLASS___ODRDatabaseChangeset);
    id v7 = sub_1002D9D08((uint64_t)v5);
    SEL v8 = (void *)objc_claimAutoreleasedReturnValue(v7);

    id v9 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"bundle_id",  v8));
    id v10 = (void *)objc_claimAutoreleasedReturnValue([a1 connection]);
    id v11 = sub_10024C1D0((uint64_t)&OBJC_CLASS___ODRAssetPackEntity, v10, v9);
    id v12 = (void *)objc_claimAutoreleasedReturnValue(v11);

    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472LL;
    void v15[2] = sub_1001C5384;
    v15[3] = &unk_1003EB4A0;
    void v15[4] = a1;
    id v16 = v6;
    uint64_t v17 = a3;
    id v13 = v6;
    [v12 enumeratePersistentIDsUsingBlock:v15];
    sub_10029155C(a1[2], v13);
  }

  return a1 != 0LL;
}

void sub_1001C5384(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = objc_alloc(&OBJC_CLASS___ODRAssetPackEntity);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) connection]);
  id v12 = -[SQLiteEntity initWithPersistentID:onConnection:](v4, "initWithPersistentID:onConnection:", a2, v5);

  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[SQLiteEntity objectForKeyedSubscript:](v12, "objectForKeyedSubscript:", @"local_url"));
  if (v6)
  {
    uint64_t v7 = *(void *)(a1 + 40);
    SEL v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL URLWithString:](&OBJC_CLASS___NSURL, "URLWithString:", v6));
    sub_10029147C(v7, v8);

    -[SQLiteEntity setObject:forKeyedSubscript:](v12, "setObject:forKeyedSubscript:", 0LL, @"local_url");
    -[SQLiteEntity setObject:forKeyedSubscript:]( v12,  "setObject:forKeyedSubscript:",  &off_10040C1F0,  @"pin_count");
    id v9 = (void *)objc_claimAutoreleasedReturnValue(-[SQLiteEntity objectForKeyedSubscript:](v12, "objectForKeyedSubscript:", @"purgeable"));
    LODWORD(v7) = [v9 BOOLValue];

    uint64_t v10 = *(void *)(a1 + 48);
    if ((_DWORD)v7 && v10 == 4)
    {
      -[SQLiteEntity setObject:forKeyedSubscript:]( v12,  "setObject:forKeyedSubscript:",  &off_10040C208,  @"purge_reason");
    }

    else
    {
      id v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", v10));
      -[SQLiteEntity setObject:forKeyedSubscript:](v12, "setObject:forKeyedSubscript:", v11, @"purge_reason");
    }
  }
}

BOOL sub_1001C54EC(BOOL a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([(id)a1 connection]);
    id v14 = 0LL;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472LL;
    void v12[2] = sub_1001C5664;
    void v12[3] = &unk_1003E99D8;
    id v5 = v3;
    id v13 = v5;
    sub_1001D68EC((uint64_t)v4, @"DELETE FROM odr_tag WHERE bundle_id = ?", &v14, v12);
    id v6 = v14;

    a1 = v6 == 0LL;
    if (v6)
    {
      uint64_t v7 = ASDLogHandleForCategory(19LL);
      SEL v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      {
        id v10 = sub_1002D9D08((uint64_t)v5);
        id v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
        *(_DWORD *)__int128 buf = 138543618;
        id v16 = v11;
        __int16 v17 = 2114;
        id v18 = v6;
        _os_log_error_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_ERROR,  "Error removing tags for %{public}@: %{public}@",  buf,  0x16u);
      }
    }
  }

  return a1;
}

void sub_1001C5664(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = a2;
  id v4 = sub_1002D9D08(v2);
  id v5 = (id)objc_claimAutoreleasedReturnValue(v4);
  [v3 bindString:v5 atPosition:1];
}

BOOL sub_1001C56B8(BOOL a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue([(id)a1 connection]);
    id v14 = 0LL;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472LL;
    void v12[2] = sub_1001C5830;
    void v12[3] = &unk_1003E99D8;
    id v5 = v3;
    id v13 = v5;
    sub_1001D68EC( (uint64_t)v4,  @"UPDATE odr_asset_pack SET pin_count = 0, purgeable = 1 WHERE bundle_id = ?",  &v14,  v12);
    id v6 = v14;

    a1 = v6 == 0LL;
    if (v6)
    {
      uint64_t v7 = ASDLogHandleForCategory(19LL);
      SEL v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      {
        id v10 = sub_1002D9D08((uint64_t)v5);
        id v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
        *(_DWORD *)__int128 buf = 138543618;
        id v16 = v11;
        __int16 v17 = 2114;
        id v18 = v6;
        _os_log_error_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_ERROR,  "Error resetting state for %{public}@: %{public}@",  buf,  0x16u);
      }
    }
  }

  return a1;
}

void sub_1001C5830(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = a2;
  id v4 = sub_1002D9D08(v2);
  id v5 = (id)objc_claimAutoreleasedReturnValue(v4);
  [v3 bindString:v5 atPosition:1];
}

BOOL sub_1001C5884(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  if (a1 && [v3 databaseID])
  {
    id v5 = objc_alloc(&OBJC_CLASS___ODRAssetPackEntity);
    id v6 = [v4 databaseID];
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([a1 connection]);
    SEL v8 = -[SQLiteEntity initWithPersistentID:onConnection:](v5, "initWithPersistentID:onConnection:", v6, v7);

    sub_1001EA590(v8, v4, 0);
  }

  return a1 != 0LL;
}

BOOL sub_1001C5930(void *a1, void *a2)
{
  id v3 = a2;
  id v5 = v3;
  if (a1)
  {
    if (v3)
    {
      id v6 = objc_getProperty(v3, v4, 104LL, 1);
      id Property = objc_getProperty(v5, v7, 112LL, 1);
    }

    else
    {
      id v6 = 0LL;
      id Property = 0LL;
    }

    id v9 = Property;
    id v10 = sub_1001C5A20(a1, v6, v9);
    id v11 = (void *)objc_claimAutoreleasedReturnValue(v10);

    BOOL v12 = v11 != 0LL;
    if (v11)
    {
      if (v5) {
        uint64_t v13 = v5[18];
      }
      else {
        uint64_t v13 = 0LL;
      }
      id v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", v13));
      [v11 setObject:v14 forKeyedSubscript:@"file_size"];
    }
  }

  else
  {
    BOOL v12 = 0LL;
  }

  return v12;
}

id sub_1001C5A20(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  SEL v7 = v6;
  if (v5 && v6)
  {
    SEL v8 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"bundle_id",  v5));
    id v9 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"bundle_key",  v7));
    v21[0] = v8;
    v21[1] = v9;
    id v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v21, 2LL));
    id v11 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v10));

    BOOL v12 = (void *)objc_claimAutoreleasedReturnValue([a1 connection]);
    id v13 = sub_10024C088((uint64_t)&OBJC_CLASS___ODRAssetPackEntity, v12, v11);
    id v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
  }

  else
  {
    uint64_t v15 = ASDLogHandleForCategory(19LL);
    SEL v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v15);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      int v17 = 138543618;
      id v18 = v5;
      __int16 v19 = 2114;
      SEL v20 = v7;
      _os_log_error_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_ERROR,  "Unable to lookup asset pack with bundleID: %{public}@ and bundleKey: %{public}@",  (uint8_t *)&v17,  0x16u);
    }

    id v14 = 0LL;
  }

  return v14;
}

BOOL sub_1001C5BD4(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  int v43 = a1;
  if (a1)
  {
    id v31 = v6;
    id v7 = sub_1002D9D08((uint64_t)v6);
    id v39 = (void *)objc_claimAutoreleasedReturnValue(v7);
    id v41 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:"));
    __int128 v48 = 0u;
    __int128 v49 = 0u;
    __int128 v50 = 0u;
    __int128 v51 = 0u;
    SEL v8 = sub_1002EEAF8(v5);
    id obj = (id)objc_claimAutoreleasedReturnValue(v8);
    id v35 = [obj countByEnumeratingWithState:&v48 objects:v60 count:16];
    if (v35)
    {
      uint64_t v33 = *(void *)v49;
      id v34 = v5;
      do
      {
        uint64_t v9 = 0LL;
        do
        {
          if (*(void *)v49 != v33) {
            objc_enumerationMutation(obj);
          }
          uint64_t v37 = v9;
          uint64_t v10 = *(void *)(*((void *)&v48 + 1) + 8 * v9);
          context = objc_autoreleasePoolPush();
          id v42 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"name",  v10));
          uint64_t v38 = v10;
          id v11 = sub_10025F5F8(v5, v10);
          BOOL v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
          __int128 v44 = 0u;
          __int128 v45 = 0u;
          __int128 v46 = 0u;
          __int128 v47 = 0u;
          id v40 = v12;
          id v13 = [v12 countByEnumeratingWithState:&v44 objects:v59 count:16];
          if (v13)
          {
            id v14 = v13;
            uint64_t v15 = *(void *)v45;
            do
            {
              for (uint64_t i = 0LL; i != v14; uint64_t i = (char *)i + 1)
              {
                if (*(void *)v45 != v15) {
                  objc_enumerationMutation(v40);
                }
                uint64_t v17 = *(void *)(*((void *)&v44 + 1) + 8LL * (void)i);
                id v18 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"bundle_key",  v17));
                v58[0] = v41;
                v58[1] = v18;
                v58[2] = v42;
                __int16 v19 = (void *)objc_claimAutoreleasedReturnValue( +[NSArray arrayWithObjects:count:]( &OBJC_CLASS___NSArray,  "arrayWithObjects:count:",  v58,  3LL));
                SEL v20 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v19));

                id v21 = (void *)objc_claimAutoreleasedReturnValue([v43 connection]);
                id v22 = sub_10024C088((uint64_t)&OBJC_CLASS___ODRTagEntity, v21, v20);
                id v23 = (void *)objc_claimAutoreleasedReturnValue(v22);

                if (!v23)
                {
                  v56[0] = @"bundle_id";
                  v56[1] = @"bundle_key";
                  v57[0] = v39;
                  v57[1] = v17;
                  v56[2] = @"name";
                  v57[2] = v38;
                  __int16 v24 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v57,  v56,  3LL));
                  id v25 = objc_alloc(&OBJC_CLASS___ODRTagEntity);
                  uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue([v43 connection]);
                  id v27 = -[SQLiteEntity initWithPropertyValues:onConnection:]( v25,  "initWithPropertyValues:onConnection:",  v24,  v26);

                  if (!v27)
                  {
                    uint64_t v28 = ASDLogHandleForCategory(19LL);
                    id v29 = (os_log_s *)objc_claimAutoreleasedReturnValue(v28);
                    if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR))
                    {
                      *(_DWORD *)__int128 buf = 138543618;
                      uint64_t v53 = v24;
                      __int16 v54 = 2114;
                      double v55 = v39;
                      _os_log_error_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_ERROR,  "Error importing tag with properites %{public}@ for %{public}@",  buf,  0x16u);
                    }
                  }
                }
              }

              id v14 = [v40 countByEnumeratingWithState:&v44 objects:v59 count:16];
            }

            while (v14);
          }

          objc_autoreleasePoolPop(context);
          uint64_t v9 = v37 + 1;
          id v5 = v34;
        }

        while ((id)(v37 + 1) != v35);
        id v35 = [obj countByEnumeratingWithState:&v48 objects:v60 count:16];
      }

      while (v35);
    }

    id v6 = v31;
  }

  return v43 != 0LL;
}

BOOL sub_1001C5FEC(uint64_t *a1, void *a2, void *a3, void *a4, int a5)
{
  if (a1)
  {
    id v9 = a4;
    id v10 = a3;
    id v11 = a2;
    sub_1001C45C0(a1, v11, v9, a5);
    sub_1001C5BD4(a1, v10, v9);
    id v12 = sub_1002D9D08((uint64_t)v9);
    id v13 = (void *)objc_claimAutoreleasedReturnValue(v12);

    id v14 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"bundle_id",  v13));
    uint64_t v15 = sub_1002EEAF8((id *)v10);
    id v16 = (void *)objc_claimAutoreleasedReturnValue(v15);

    uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteContainsPredicate doesNotContainPredicateWithProperty:values:]( &OBJC_CLASS___SQLiteContainsPredicate,  "doesNotContainPredicateWithProperty:values:",  @"name",  v16));
    v30[0] = v14;
    v30[1] = v17;
    id v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v30, 2LL));
    __int16 v19 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v18));

    sub_1001C4348(a1, v19);
    SEL v20 = sub_10020CBA4((id *)v11);
    id v21 = (void *)objc_claimAutoreleasedReturnValue(v20);

    id v22 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteContainsPredicate doesNotContainPredicateWithProperty:values:]( &OBJC_CLASS___SQLiteContainsPredicate,  "doesNotContainPredicateWithProperty:values:",  @"bundle_key",  v21));
    v29[0] = v14;
    v29[1] = v22;
    id v23 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v29, 2LL));
    __int16 v24 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v23));

    sub_1001C4254(a1, v24);
    uint64_t v25 = ASDLogHandleForCategory(19LL);
    uint64_t v26 = (os_log_s *)objc_claimAutoreleasedReturnValue(v25);
    if (os_log_type_enabled(v26, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t v28 = 0;
      _os_log_debug_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEBUG, "Finished updating manifest.", v28, 2u);
    }
  }

  return a1 != 0LL;
}

void sub_1001C625C(uint64_t a1, uint64_t a2)
{
  id v4 = objc_alloc(&OBJC_CLASS___ODRAssetPackEntity);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) connection]);
  id v9 = -[SQLiteEntity initWithPersistentID:onConnection:](v4, "initWithPersistentID:onConnection:", a2, v5);

  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[SQLiteEntity objectForKeyedSubscript:](v9, "objectForKeyedSubscript:", @"local_url"));
  if (v6)
  {
    uint64_t v7 = *(void *)(a1 + 40);
    SEL v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL URLWithString:](&OBJC_CLASS___NSURL, "URLWithString:", v6));
    sub_10029147C(v7, v8);
  }

  -[SQLiteEntity deleteFromDatabase](v9, "deleteFromDatabase");
}

void sub_1001C631C(uint64_t a1, uint64_t a2)
{
  id v4 = objc_alloc(&OBJC_CLASS___ODRTagEntity);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) connection]);
  id v6 = -[SQLiteEntity initWithPersistentID:onConnection:](v4, "initWithPersistentID:onConnection:", a2, v5);

  -[SQLiteEntity deleteFromDatabase](v6, "deleteFromDatabase");
}

id *sub_1001C63A4(id *a1, void *a2)
{
  id v4 = a2;
  if (a1)
  {
    v12.receiver = a1;
    v12.super_class = (Class)&OBJC_CLASS___ODRTagsRequest;
    a1 = (id *)objc_msgSendSuper2(&v12, "init");
    if (a1)
    {
      id v5 = objc_alloc_init(&OBJC_CLASS____TtC9appstored6LogKey);
      id v6 = a1[4];
      a1[4] = v5;

      objc_storeStrong(a1 + 5, a2);
      uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
      [v7 timeIntervalSinceReferenceDate];
      a1[2] = v8;

      id v9 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
      id v10 = a1[3];
      a1[3] = v9;
    }
  }

  return a1;
}

id sub_1001C66BC(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1001C6734;
  block[3] = &unk_1003E9EA8;
  void block[4] = objc_opt_self(a1);
  if (qword_1004621E8 != -1) {
    dispatch_once(&qword_1004621E8, block);
  }
  return (id)qword_1004621E0;
}

void sub_1001C6734(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  uint64_t v2 = (void *)qword_1004621E0;
  qword_1004621E0 = (uint64_t)v1;
}

id sub_1001C69E0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = v5;
  if (a1)
  {
    uint64_t v21 = 0LL;
    id v22 = &v21;
    uint64_t v23 = 0x3032000000LL;
    __int16 v24 = sub_1001C6B20;
    uint64_t v25 = sub_1001C6B30;
    id v26 = 0LL;
    uint64_t v15 = 0LL;
    id v16 = &v15;
    uint64_t v17 = 0x3032000000LL;
    id v18 = sub_1001C6B20;
    __int16 v19 = sub_1001C6B30;
    id v20 = 0LL;
    uint64_t v7 = *(dispatch_queue_s **)(a1 + 40);
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472LL;
    void v11[2] = sub_1001C6B38;
    v11[3] = &unk_1003EB4F0;
    void v11[4] = a1;
    id v12 = v5;
    id v13 = &v15;
    id v14 = &v21;
    dispatch_sync(v7, v11);
    SEL v8 = (void *)v16[5];
    if (a3 && !v8)
    {
      *a3 = (id) v22[5];
      SEL v8 = (void *)v16[5];
    }

    id v9 = v8;

    _Block_object_dispose(&v15, 8);
    _Block_object_dispose(&v21, 8);
  }

  else
  {
    id v9 = 0LL;
  }

  return v9;
}

uint64_t sub_1001C6B20(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1001C6B30(uint64_t a1)
{
}

void sub_1001C6B38(void *a1)
{
  uint64_t v2 = ASDLogHandleForCategory(14LL);
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    id v5 = (void *)objc_opt_class(a1[4], v4);
    id v6 = (void *)a1[5];
    id v7 = v5;
    SEL v8 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithLongLong:]( NSNumber,  "numberWithLongLong:",  [v6 accountID]));
    uint64_t v9 = AMSHashIfNeeded(v8);
    id v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
    *(_DWORD *)__int128 buf = 138412546;
    id v18 = v5;
    __int16 v19 = 2114;
    id v20 = v10;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "[%@]: Querying purchase history for account: %{public}@",  buf,  0x16u);
  }

  id v11 = *(void **)(a1[4] + 32LL);
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472LL;
  void v14[2] = sub_1001C6CB4;
  v14[3] = &unk_1003EB668;
  __int128 v13 = *(_OWORD *)(a1 + 5);
  id v12 = (id)v13;
  __int128 v15 = v13;
  uint64_t v16 = a1[7];
  [v11 readUsingSession:v14];
}

void sub_1001C6CB4(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(*(void *)(a1 + 48) + 8LL);
  id obj = *(id *)(v3 + 40);
  id v4 = sub_1002ED354(a2, *(void **)(a1 + 32));
  uint64_t v5 = objc_claimAutoreleasedReturnValue(v4);
  objc_storeStrong((id *)(v3 + 40), obj);
  uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 8LL);
  id v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;
}

void sub_1001C6D2C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (a1)
  {
    id v7 = (void *)objc_claimAutoreleasedReturnValue( +[KeepAlive keepAliveWithName:]( &OBJC_CLASS___KeepAlive,  "keepAliveWithName:",  @"com.apple.appstoredaemon.PurchaseHistoryManager.query"));
    SEL v8 = *(void **)(a1 + 40);
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472LL;
    void v10[2] = sub_1001C6E10;
    v10[3] = &unk_1003EA5E8;
    void v10[4] = a1;
    id v11 = v5;
    id v12 = v7;
    id v13 = v6;
    id v9 = v7;
    sub_10022ED10(v8, v10);
  }
}

void sub_1001C6E10(uint64_t a1)
{
  v30[0] = 0LL;
  v30[1] = v30;
  void v30[2] = 0x3032000000LL;
  v30[3] = sub_1001C6B20;
  v30[4] = sub_1001C6B30;
  id v31 = 0LL;
  uint64_t v24 = 0LL;
  uint64_t v25 = &v24;
  uint64_t v26 = 0x3032000000LL;
  id v27 = sub_1001C6B20;
  uint64_t v28 = sub_1001C6B30;
  id v29 = 0LL;
  uint64_t v2 = ASDLogHandleForCategory(14LL);
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    id v5 = (id)objc_opt_class(*(void *)(a1 + 32), v4);
    id v6 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithLongLong:]( NSNumber,  "numberWithLongLong:",  [*(id *)(a1 + 40) accountID]));
    uint64_t v7 = AMSHashIfNeeded(v6);
    SEL v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
    *(_DWORD *)__int128 buf = 138412546;
    id v33 = v5;
    __int16 v34 = 2114;
    id v35 = v8;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "[%@]: Querying purchase history for account: %{public}@",  buf,  0x16u);
  }

  id v9 = *(void **)(a1 + 40);
  id v10 = *(void **)(*(void *)(a1 + 32) + 32LL);
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 3221225472LL;
  v20[2] = sub_1001C7124;
  v20[3] = &unk_1003EB668;
  id v22 = &v24;
  id v21 = v9;
  uint64_t v23 = v30;
  [v10 readUsingSession:v20];
  uint64_t v11 = ASDLogHandleForCategory(14LL);
  id v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
  if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
  {
    id v14 = (id)objc_opt_class(*(void *)(a1 + 32), v13);
    __int128 v15 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithLongLong:]( NSNumber,  "numberWithLongLong:",  [*(id *)(a1 + 40) accountID]));
    uint64_t v16 = AMSHashIfNeeded(v15);
    id v17 = (id)objc_claimAutoreleasedReturnValue(v16);
    id v18 = [(id)v25[5] count];
    uint64_t v19 = *(void *)(a1 + 40);
    *(_DWORD *)__int128 buf = 138413058;
    id v33 = v14;
    __int16 v34 = 2114;
    id v35 = v17;
    __int16 v36 = 2048;
    id v37 = v18;
    __int16 v38 = 2112;
    uint64_t v39 = v19;
    _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "[%@] Purchase History query for account: %{public}@ completed with %lu results from query: %@",  buf,  0x2Au);
  }

  (*(void (**)(void))(*(void *)(a1 + 56) + 16LL))();
  _Block_object_dispose(&v24, 8);

  _Block_object_dispose(v30, 8);
}

void sub_1001C70E8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_1001C7124(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(*(void *)(a1 + 48) + 8LL);
  id obj = *(id *)(v3 + 40);
  id v4 = sub_1002ED354(a2, *(void **)(a1 + 32));
  uint64_t v5 = objc_claimAutoreleasedReturnValue(v4);
  objc_storeStrong((id *)(v3 + 40), obj);
  uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 8LL);
  uint64_t v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;
}

void sub_1001C719C(uint64_t a1, char a2, uint64_t a3, void *a4, void *a5)
{
  id v9 = a4;
  uint64_t v10 = a5;
  if (a1)
  {
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(+[ActiveAccountObserver activeAccount](&OBJC_CLASS___ActiveAccountObserver, "activeAccount"));
    uint64_t v12 = v11;
    if (v11)
    {
      id v30 = 0LL;
      id v13 = v11;
      uint64_t v36 = 0LL;
      id v37 = &v36;
      uint64_t v38 = 0x3032000000LL;
      uint64_t v39 = sub_1001C6B20;
      id v40 = sub_1001C6B30;
      id v41 = 0LL;
      uint64_t v14 = *(void **)(a1 + 32);
      v31[0] = _NSConcreteStackBlock;
      v31[1] = 3221225472LL;
      v31[2] = sub_1001C862C;
      v31[3] = &unk_1003EB640;
      id v15 = v13;
      id v32 = v15;
      id v33 = &v36;
      uint64_t v34 = a3;
      id v35 = &v30;
      [v14 readUsingSession:v31];
      if ([(id)v37[5] count])
      {
        uint64_t v16 = objc_opt_new(&OBJC_CLASS___PurchaseHistoryHideShowRequestContextItem);
        id v17 = (void *)objc_claimAutoreleasedReturnValue([(id)v37[5] firstObject]);
        sub_1001E2910((uint64_t)v16, v17);

        if (v16) {
          v16->_show = a2 ^ 1;
        }
        id v42 = v16;
        id v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v42, 1LL));
        id v19 = sub_1001F4ADC((uint64_t)&OBJC_CLASS___AMSProcessInfo);
        id v20 = (void *)objc_claimAutoreleasedReturnValue(v19);
        id v21 = sub_1001E292C((uint64_t)&OBJC_CLASS___PurchaseHistoryHideShowRequestContext, v18, v15, v20);
      }

      else if (v30)
      {
        id v21 = 0LL;
      }

      else
      {
        id v24 = sub_1001DD4C8(1LL, 0LL);
        id v21 = 0LL;
        id v30 = (id)objc_claimAutoreleasedReturnValue(v24);
      }

      _Block_object_dispose(&v36, 8);
      id v25 = v30;
      if (v25)
      {
        v10[2](v10, v25);
      }

      else
      {
        uint64_t v26 = sub_10030AB0C((id *)objc_alloc(&OBJC_CLASS___PurchaseHistoryHideShowRequest), *(void **)(a1 + 8), v21);
        v27[0] = _NSConcreteStackBlock;
        v27[1] = 3221225472LL;
        void v27[2] = sub_1001C74D4;
        v27[3] = &unk_1003EB558;
        id v29 = v10;
        v27[4] = a1;
        id v28 = v9;
        sub_10030ABB4((uint64_t)v26, v27);
      }
    }

    else
    {
      id v22 = sub_1001DD4C8(4LL, 0LL);
      uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue(v22);
      v10[2](v10, v23);
    }
  }
}

void sub_1001C74B0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, char a26)
{
}

void sub_1001C74D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(void))(*(void *)(a1 + 48) + 16LL);
  if (a2)
  {
    v3();
  }

  else
  {
    v3();
    sub_1001C7520(*(void *)(a1 + 32), 2LL, *(void **)(a1 + 40), &stru_1003EB530);
  }

void sub_1001C7520(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  id v9 = v8;
  if (a1)
  {
    uint64_t v10 = *(void **)(a1 + 40);
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472LL;
    void v11[2] = sub_1001C7EB0;
    v11[3] = &unk_1003EB5F0;
    void v11[4] = a1;
    id v13 = v8;
    uint64_t v14 = a2;
    id v12 = v7;
    sub_10022ED10(v10, v11);
  }
}

void sub_1001C75D8(uint64_t a1, void *a2, void *a3)
{
  id v26 = a2;
  id v27 = a3;
  uint64_t v25 = a1;
  if (a1)
  {
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(+[ActiveAccountObserver activeAccount](&OBJC_CLASS___ActiveAccountObserver, "activeAccount"));
    uint64_t v6 = v5;
    if (v5)
    {
      id v31 = 0LL;
      id v7 = v5;
      uint64_t v40 = 0LL;
      id v41 = &v40;
      uint64_t v42 = 0x3032000000LL;
      int v43 = sub_1001C6B20;
      __int128 v44 = sub_1001C6B30;
      id v45 = 0LL;
      id v8 = *(void **)(a1 + 32);
      v36[0] = _NSConcreteStackBlock;
      v36[1] = 3221225472LL;
      void v36[2] = sub_1001C8770;
      void v36[3] = &unk_1003EB618;
      id v24 = v7;
      id v37 = v24;
      uint64_t v38 = &v40;
      uint64_t v39 = &v31;
      [v8 readUsingSession:v36];
      id v9 = objc_opt_new(&OBJC_CLASS___NSMutableArray);
      __int128 v34 = 0u;
      __int128 v35 = 0u;
      __int128 v32 = 0u;
      __int128 v33 = 0u;
      id v10 = (id)v41[5];
      id v11 = [v10 countByEnumeratingWithState:&v32 objects:v46 count:16];
      if (v11)
      {
        uint64_t v12 = *(void *)v33;
        do
        {
          for (uint64_t i = 0LL; i != v11; uint64_t i = (char *)i + 1)
          {
            if (*(void *)v33 != v12) {
              objc_enumerationMutation(v10);
            }
            uint64_t v14 = v6;
            id v15 = *(void **)(*((void *)&v32 + 1) + 8LL * (void)i);
            uint64_t v16 = objc_opt_new(&OBJC_CLASS___PurchaseHistoryHideShowRequestContextItem);
            sub_1001E2910((uint64_t)v16, v15);
            if (v16) {
              v16->_show = 1;
            }
            -[NSMutableArray addObject:](v9, "addObject:", v16);

            uint64_t v6 = v14;
          }

          id v11 = [v10 countByEnumeratingWithState:&v32 objects:v46 count:16];
        }

        while (v11);
      }

      id v17 = sub_1001F4ADC((uint64_t)&OBJC_CLASS___AMSProcessInfo);
      id v18 = (void *)objc_claimAutoreleasedReturnValue(v17);
      id v19 = sub_1001E292C((uint64_t)&OBJC_CLASS___PurchaseHistoryHideShowRequestContext, v9, v24, v18);

      _Block_object_dispose(&v40, 8);
      id v20 = v31;
      if (v20)
      {
        v27[2](v27, v20);
      }

      else
      {
        uint64_t v23 = sub_10030AB0C((id *)objc_alloc(&OBJC_CLASS___PurchaseHistoryHideShowRequest), *(void **)(v25 + 8), v19);
        v28[0] = _NSConcreteStackBlock;
        v28[1] = 3221225472LL;
        void v28[2] = sub_1001C7978;
        v28[3] = &unk_1003EB558;
        id v30 = v27;
        v28[4] = v25;
        id v29 = v26;
        sub_10030ABB4((uint64_t)v23, v28);
      }
    }

    else
    {
      id v21 = sub_1001DD4C8(4LL, 0LL);
      id v22 = (void *)objc_claimAutoreleasedReturnValue(v21);
      v27[2](v27, v22);
    }
  }
}

void sub_1001C7944( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, char a37)
{
}

void sub_1001C7978(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(void))(*(void *)(a1 + 48) + 16LL);
  if (a2)
  {
    v3();
  }

  else
  {
    v3();
    sub_1001C7520(*(void *)(a1 + 32), 2LL, *(void **)(a1 + 40), &stru_1003EB578);
  }

void sub_1001C79C4(uint64_t a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a5;
  uint64_t v12 = v11;
  if (a1)
  {
    id v13 = *(void **)(a1 + 40);
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472LL;
    void v14[2] = sub_1001C7AA0;
    v14[3] = &unk_1003EB5A0;
    void v14[4] = a1;
    id v17 = v11;
    id v15 = v9;
    uint64_t v18 = a4;
    id v16 = v10;
    sub_10022ED10(v13, v14);
  }
}

void sub_1001C7AA0(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[ActiveAccountObserver activeAccount](&OBJC_CLASS___ActiveAccountObserver, "activeAccount"));
  if (v2)
  {
    uint64_t v3 = sub_100202A30( (id *)objc_alloc(&OBJC_CLASS___PurchaseHistoryUpdateCommand),  *(void **)(a1 + 40),  *(void **)(a1 + 64));
    uint64_t v5 = v3;
    if (v3)
    {
      objc_setProperty_atomic(v3, v4, *(id *)(a1 + 48), 48LL);
      objc_setProperty_atomic_copy(v5, v6, *(id *)(a1 + 56), 72LL);
    }

    sub_1001C7BFC(*(void *)(a1 + 32), v5);
  }

  else
  {
    uint64_t v7 = ASDLogHandleForCategory(14LL);
    id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      uint64_t v12 = (void *)objc_opt_class(*(void *)(a1 + 32), v9);
      int v14 = 138412290;
      id v15 = v12;
      id v13 = v12;
      _os_log_error_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_ERROR,  "[%@]: Ignoring update request - there is no active account",  (uint8_t *)&v14,  0xCu);
    }

    uint64_t v10 = *(void *)(a1 + 56);
    id v11 = sub_1001DD5A0(4LL, 0LL);
    uint64_t v5 = (id *)objc_claimAutoreleasedReturnValue(v11);
    (*(void (**)(uint64_t, id *))(v10 + 16))(v10, v5);
  }
}

void sub_1001C7BFC(uint64_t a1, void *a2)
{
  id v4 = a2;
  if (a1)
  {
    dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 40));
    uint64_t v3 = *(void **)(a1 + 24);
    if (v3) {
      [v3 addObject:v4];
    }
    if (!*(_BYTE *)(a1 + 16)) {
      sub_1001C8B58(a1);
    }
  }
}

void sub_1001C7C58(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  id v9 = a4;
  id v10 = a5;
  if (a1)
  {
    id v11 = *(void **)(a1 + 40);
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472LL;
    void v12[2] = sub_1001C7D18;
    void v12[3] = &unk_1003EB5C8;
    void v12[4] = a1;
    uint64_t v15 = a2;
    uint64_t v16 = a3;
    id v13 = v9;
    id v14 = v10;
    sub_10022ED10(v11, v12);
  }
}

void sub_1001C7D18(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = (id)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", *(void *)(a1 + 56)));
  sub_1001C7D70(v2, v3, *(void **)(a1 + 64), *(void **)(a1 + 40), *(void **)(a1 + 48));
}

void sub_1001C7D70(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a4;
  id v11 = a5;
  if (a1)
  {
    dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 40));
    if (v9)
    {
      uint64_t v12 = sub_1002029DC((uint64_t)&OBJC_CLASS___PurchaseHistoryUpdateCommand, a3, v9);
      id v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
      uint64_t v15 = v13;
      if (v13)
      {
        objc_setProperty_atomic(v13, v14, v10, 64LL);
        objc_setProperty_atomic_copy(v15, v16, v11, 72LL);
      }

      sub_1001C7BFC(a1, v15);
    }

    else
    {
      uint64_t v17 = ASDLogHandleForCategory(8LL);
      uint64_t v18 = (os_log_s *)objc_claimAutoreleasedReturnValue(v17);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)id v21 = 0;
        _os_log_error_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_ERROR,  "[PurchaseHistoryManager] Refusing to perform update without an accountID!",  v21,  2u);
      }

      if (v11)
      {
        id v19 = sub_1001DD5A0(4LL, 0LL);
        id v20 = (void *)objc_claimAutoreleasedReturnValue(v19);
        (*((void (**)(id, void *))v11 + 2))(v11, v20);
      }
    }
  }
}

void sub_1001C7EB0(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[ActiveAccountObserver activeAccount](&OBJC_CLASS___ActiveAccountObserver, "activeAccount"));
  id v3 = v2;
  if (v2)
  {
    uint64_t v4 = *(void *)(a1 + 32);
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "ams_DSID"));
    sub_1001C7D70(v4, v5, *(void **)(a1 + 56), *(void **)(a1 + 40), *(void **)(a1 + 48));
  }

  else
  {
    uint64_t v6 = ASDLogHandleForCategory(14LL);
    uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      uint64_t v12 = (void *)objc_opt_class(*(void *)(a1 + 32), v8);
      int v14 = 138412290;
      uint64_t v15 = v12;
      id v13 = v12;
      _os_log_error_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_ERROR,  "[%@]: Ignoring update request - there is no active account",  (uint8_t *)&v14,  0xCu);
    }

    uint64_t v9 = *(void *)(a1 + 48);
    id v10 = sub_1001DD5A0(4LL, 0LL);
    id v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
    (*(void (**)(uint64_t, void *))(v9 + 16))(v9, v11);
  }
}

void sub_1001C8094(uint64_t a1)
{
  uint64_t v2 = sub_10025F578(*(void ***)(a1 + 32));
  id v3 = (id)objc_claimAutoreleasedReturnValue(v2);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[ActiveAccountObserver activeAccount](&OBJC_CLASS___ActiveAccountObserver, "activeAccount"));
  uint64_t v5 = v4;
  if (v4)
  {
    if (v3
      && (uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "ams_DSID")),
          unsigned int v7 = [v6 isEqualToNumber:v3],
          v6,
          v7))
    {
      uint64_t v8 = sub_10025F5D8(*(void ***)(a1 + 32), @"2");
      uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
      uint64_t v10 = ASDLogHandleForCategory(14LL);
      id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v12 = AMSHashIfNeeded(v3);
        id v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
        *(_DWORD *)__int128 buf = 138543618;
        id v31 = v13;
        __int16 v32 = 2114;
        __int128 v33 = v9;
        _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "[PurchaseHistoryManager] Checking for update after receiving notification for accountID: %{public}@ server rev ision: %{public}@",  buf,  0x16u);
      }

      if (v9)
      {
        id v14 = sub_100202AFC((uint64_t)&OBJC_CLASS___PurchaseHistoryUpdateCommand, v3, v9);
        uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
LABEL_14:
        v27[0] = _NSConcreteStackBlock;
        v27[1] = 3221225472LL;
        void v27[2] = sub_1001C83E8;
        v27[3] = &unk_1003EA020;
        id v3 = v3;
        id v28 = v3;
        id v29 = *(id *)(a1 + 48);
        if (v15) {
          objc_setProperty_atomic_copy(v15, v22, v27, 72LL);
        }
        sub_1001C7BFC(*(void *)(a1 + 40), v15);

        goto LABEL_20;
      }
    }

    else
    {
      uint64_t v16 = ASDLogHandleForCategory(14LL);
      uint64_t v17 = (os_log_s *)objc_claimAutoreleasedReturnValue(v16);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)__int128 buf = 138543618;
        id v31 = v3;
        __int16 v32 = 2114;
        __int128 v33 = v5;
        _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "[PurchaseHistoryManager] Received check for accountID: %{public}@ but falling back to active account: %{public}@",  buf,  0x16u);
      }

      uint64_t v18 = objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "ams_DSID"));
      id v3 = (id)v18;
    }

    uint64_t v19 = ASDLogHandleForCategory(14LL);
    id v20 = (os_log_s *)objc_claimAutoreleasedReturnValue(v19);
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)__int128 buf = 138543362;
      id v31 = v3;
      _os_log_error_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_ERROR,  "[PurchaseHistoryManager] Unable to reference server revision from message, performing default check for: %{public}@",  buf,  0xCu);
    }

    id v21 = sub_1002029DC((uint64_t)&OBJC_CLASS___PurchaseHistoryUpdateCommand, 0LL, v3);
    uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(v21);
    uint64_t v9 = 0LL;
    goto LABEL_14;
  }

  uint64_t v23 = ASDLogHandleForCategory(14LL);
  id v24 = (os_log_s *)objc_claimAutoreleasedReturnValue(v23);
  if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
  {
    uint64_t v25 = AMSHashIfNeeded(v3);
    id v26 = (void *)objc_claimAutoreleasedReturnValue(v25);
    *(_DWORD *)__int128 buf = 138543362;
    id v31 = v26;
    _os_log_error_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_ERROR,  "[PurchaseHistoryManager] Ignoring push notification for accountID: %{public}@ as there isn't any account active",  buf,  0xCu);
  }

  (*(void (**)(void))(*(void *)(a1 + 48) + 16LL))();
LABEL_20:
}

void sub_1001C83E8(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v5 = ASDLogHandleForCategory(14LL, v4);
  uint64_t v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
  unsigned int v7 = v6;
  if (v3)
  {
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      uint64_t v8 = *(void *)(a1 + 32);
      int v10 = 138543618;
      uint64_t v11 = v8;
      __int16 v12 = 2114;
      id v13 = v3;
      _os_log_error_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_ERROR,  "[PurchaseHistoryManager] Failed to complete update for accountID: %{public}@ error: %{public}@",  (uint8_t *)&v10,  0x16u);
    }
  }

  else if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v9 = *(void *)(a1 + 32);
    int v10 = 138543362;
    uint64_t v11 = v9;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "[PurchaseHistoryManager] Sucessfully completed update after notification for accountID: %{public}@",  (uint8_t *)&v10,  0xCu);
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
}

void sub_1001C8588(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[ActiveAccountObserver activeAccount](&OBJC_CLASS___ActiveAccountObserver, "activeAccount"));
  id v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "ams_DSID"));

  if (v7)
  {
    id v3 = sub_1002029DC((uint64_t)&OBJC_CLASS___PurchaseHistoryUpdateCommand, 0LL, v7);
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
    uint64_t v6 = v4;
    if (v4) {
      objc_setProperty_atomic_copy(v4, v5, *(id *)(a1 + 40), 72LL);
    }
    sub_1001C7BFC(*(void *)(a1 + 32), v6);
  }

  else
  {
    (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
  }
}

void sub_1001C862C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc_init(&OBJC_CLASS___ASDPurchaseHistoryQuery);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "ams_DSID"));
  objc_msgSend(v4, "setAccountID:", objc_msgSend(v5, "longLongValue"));

  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", *(void *)(a1 + 48)));
  __int16 v12 = v6;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v12, 1LL));
  [v4 setStoreIDs:v7];

  [v4 setIsFirstParty:0];
  [v4 setIsHidden:0];
  [v4 setIsPreorder:0];
  id v8 = sub_1002ED354(v3, v4);
  uint64_t v9 = objc_claimAutoreleasedReturnValue(v8);

  uint64_t v10 = *(void *)(*(void *)(a1 + 40) + 8LL);
  uint64_t v11 = *(void **)(v10 + 40);
  *(void *)(v10 + 40) = v9;
}

void sub_1001C8770(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v9 = objc_alloc_init(&OBJC_CLASS___ASDPurchaseHistoryQuery);
  id v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "ams_DSID"));
  objc_msgSend(v9, "setAccountID:", objc_msgSend(v4, "longLongValue"));

  [v9 setIsFirstParty:0];
  [v9 setIsHidden:0];
  [v9 setIsPreorder:0];
  id v5 = sub_1002ED354(v3, v9);
  uint64_t v6 = objc_claimAutoreleasedReturnValue(v5);

  uint64_t v7 = *(void *)(*(void *)(a1 + 40) + 8LL);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v6;
}

void sub_1001C8930(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[ActiveAccountObserver activeAccount](&OBJC_CLASS___ActiveAccountObserver, "activeAccount"));
  id v3 = v2;
  if (v2)
  {
    uint64_t v4 = *(void *)(a1 + 32);
    id v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "ams_DSID"));
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472LL;
    void v11[2] = sub_1001C8A78;
    v11[3] = &unk_1003E9CA8;
    void v11[4] = *(void *)(a1 + 32);
    sub_1001C7D70(v4, v5, (void *)3, 0LL, v11);
  }

  else
  {
    uint64_t v6 = ASDLogHandleForCategory(14LL);
    uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      id v9 = (void *)objc_opt_class(*(void *)(a1 + 32), v8);
      *(_DWORD *)__int128 buf = 138412290;
      id v13 = v9;
      id v10 = v9;
      _os_log_error_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_ERROR,  "[%@]: Ignoring update request - there is no active account",  buf,  0xCu);
    }
  }
}

void sub_1001C8A78(uint64_t a1, void *a2)
{
  id v4 = a2;
  if (v4)
  {
    uint64_t v5 = ASDLogHandleForCategory(14LL, v3);
    uint64_t v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      uint64_t v8 = (void *)objc_opt_class(*(void *)(a1 + 32), v7);
      int v10 = 138412546;
      uint64_t v11 = v8;
      __int16 v12 = 2114;
      id v13 = v4;
      id v9 = v8;
      _os_log_error_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_ERROR,  "[%@]: Failed to refresh after active account changed error: %{public}@",  (uint8_t *)&v10,  0x16u);
    }
  }
}

void sub_1001C8B58(uint64_t a1)
{
  if (a1)
  {
    dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 40));
    if (*(_BYTE *)(a1 + 16))
    {
      uint64_t v2 = ASDLogHandleForCategory(8LL);
      uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
      if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)__int128 buf = 0;
        id v4 = "[PurchaseHistoryManager] Update is already running, waiting for it to finish";
LABEL_5:
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, v4, buf, 2u);
      }
    }

    else
    {
      if ([*(id *)(a1 + 24) count])
      {
        uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(+[ActiveAccountObserver activeAccount](&OBJC_CLASS___ActiveAccountObserver, "activeAccount"));
        if (v3)
        {
          id v5 = sub_100206CB0(*(void **)(a1 + 24));
          uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
          if (v6)
          {
            while ((sub_100203BE8((uint64_t)v6, *(void **)(a1 + 32)) & 1) == 0)
            {
              sub_100202B70(v6, 0LL);
              id v7 = sub_100206CB0(*(void **)(a1 + 24));
              uint64_t v8 = objc_claimAutoreleasedReturnValue(v7);

              uint64_t v6 = (void *)v8;
              if (!v8) {
                goto LABEL_11;
              }
            }

            *(_BYTE *)(a1 + 16) = 1;
            id v18 = sub_100202E78(v6, v3, *(void **)(a1 + 32));
            uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue(v18);
            void v21[4] = a1;
            v22[0] = _NSConcreteStackBlock;
            v22[1] = 3221225472LL;
            void v22[2] = sub_1001C8E68;
            v22[3] = &unk_1003E9CD0;
            void v22[4] = a1;
            v21[0] = _NSConcreteStackBlock;
            v21[1] = 3221225472LL;
            void v21[2] = sub_1001C8EE4;
            v21[3] = &unk_1003E9CA8;
            id v20 = sub_100252094((id *)objc_alloc(&OBJC_CLASS___DispatchQueue), *(void **)(a1 + 40));
            [v19 thenPerform:v22 orCatchError:v21 onScheduler:v20];
          }

          else
          {
LABEL_11:
            uint64_t v9 = ASDLogHandleForCategory(8LL);
            int v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
            if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
            {
              *(_WORD *)__int128 buf = 0;
              _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "[PurchaseHistoryManager] No qualifying update requests remaining",  buf,  2u);
            }

            uint64_t v6 = 0LL;
          }
        }

        else
        {
          id v12 = sub_1001DD4C8(4LL, 0LL);
          uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(v12);
          __int128 v23 = 0u;
          __int128 v24 = 0u;
          __int128 v25 = 0u;
          __int128 v26 = 0u;
          id v13 = *(id *)(a1 + 24);
          id v14 = [v13 countByEnumeratingWithState:&v23 objects:v28 count:16];
          if (v14)
          {
            id v15 = v14;
            uint64_t v16 = *(void *)v24;
            do
            {
              for (uint64_t i = 0LL; i != v15; uint64_t i = (char *)i + 1)
              {
                if (*(void *)v24 != v16) {
                  objc_enumerationMutation(v13);
                }
                sub_100202B70(*(void **)(*((void *)&v23 + 1) + 8LL * (void)i), v6);
              }

              id v15 = [v13 countByEnumeratingWithState:&v23 objects:v28 count:16];
            }

            while (v15);
          }

          [*(id *)(a1 + 24) removeAllObjects];
        }

        goto LABEL_26;
      }

      uint64_t v11 = ASDLogHandleForCategory(8LL);
      uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
      if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)__int128 buf = 0;
        id v4 = "[PurchaseHistoryManager] No queued updates pending";
        goto LABEL_5;
      }
    }

uint64_t sub_1001C8E68(uint64_t a1)
{
  *(_BYTE *)(*(void *)(a1 + 32) + 16LL) = 0;
  uint64_t v2 = ASDLogHandleForCategory(8LL);
  uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v5 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "[PurchaseHistoryManager] Update command completed, checking for next command",  v5,  2u);
  }

  return sub_1001C8B58(*(void *)(a1 + 32));
}

void sub_1001C8EE4(uint64_t a1, void *a2)
{
  id v3 = a2;
  *(_BYTE *)(*(void *)(a1 + 32) + 16LL) = 0;
  uint64_t v4 = ASDLogHandleForCategory(8LL);
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    int v6 = 138543362;
    id v7 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "[PurchaseHistoryManager] Update command failed: %{public}@, checking for next command",  (uint8_t *)&v6,  0xCu);
  }

  sub_1001C8B58(*(void *)(a1 + 32));
}

id *sub_1001C904C(id *a1, void *a2, void *a3)
{
  id v6 = a2;
  id v7 = a3;
  if (a1)
  {
    v10.receiver = a1;
    v10.super_class = (Class)&OBJC_CLASS___PurchaseHistoryItemsDAAPRequestEncoder;
    uint64_t v8 = (id *)objc_msgSendSuper2(&v10, "init");
    a1 = v8;
    if (v8)
    {
      objc_storeStrong(v8 + 1, a2);
      objc_storeStrong(a1 + 2, a3);
    }
  }

  return a1;
}

uint64_t sub_1001C94A0(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (unint64_t *)v3;
  if (!a1)
  {
    uint64_t v13 = 0LL;
    goto LABEL_34;
  }

  if (v3) {
    int v5 = v3[8] & 1;
  }
  else {
    int v5 = 0;
  }
  uint64_t v6 = ASDLogHandleForCategory(10LL);
  id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);
  if (!v5)
  {
    if (v8)
    {
      if (v4)
      {
        id v14 = objc_getProperty(v4, v9, 32LL, 1);
        unint64_t v15 = v4[2];
        int v16 = v4[1] & 1;
        id v17 = v14;
      }

      else
      {
        unint64_t v15 = 0LL;
        id v14 = 0LL;
        id v17 = 0LL;
        int v16 = 0;
      }

      int v34 = 138412802;
      id v35 = v17;
      __int16 v36 = 2048;
      unint64_t v37 = v15;
      __int16 v38 = 1024;
      int v39 = v16;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "[%@]: Evaluating download, size = %{iec-bytes}llu automatic = %d",  (uint8_t *)&v34,  0x1Cu);
    }

    id v18 = sub_100255630((uint64_t)&OBJC_CLASS___URLBag);
    uint64_t v19 = (id *)objc_claimAutoreleasedReturnValue(v18);
    id v20 = sub_1002560B8(v19, (uint64_t)@"lowDataPromptThreshold", 0LL);

    if (((unint64_t)v20 & 0x8000000000000000LL) != 0)
    {
      uint64_t v25 = ASDLogHandleForCategory(10LL);
      id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v25);
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        if (v4) {
          id Property = objc_getProperty(v4, v26, 32LL, 1);
        }
        else {
          id Property = 0LL;
        }
        id v28 = Property;
        int v34 = 138412290;
        id v35 = v28;
        id v29 = "[%@]: Implicitly allowed low data - threshold disabled";
        goto LABEL_31;
      }
    }

    else
    {
      if (!v4 || (unint64_t v21 = v4[2]) == 0)
      {
        uint64_t v30 = ASDLogHandleForCategory(10LL);
        id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v30);
        if (!os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_10;
        }
        if (v4) {
          id v32 = objc_getProperty(v4, v31, 32LL, 1);
        }
        else {
          id v32 = 0LL;
        }
        id v11 = v32;
        int v34 = 138412290;
        id v35 = v11;
        id v12 = "[%@]: Implicitly denied low data - download size is unavailable";
        goto LABEL_9;
      }

      uint64_t v22 = ASDLogHandleForCategory(10LL);
      id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v22);
      BOOL v23 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);
      if (v21 > (unint64_t)v20)
      {
        if (!v23) {
          goto LABEL_10;
        }
        id v11 = objc_getProperty(v4, v24, 32LL, 1);
        int v34 = 138412290;
        id v35 = v11;
        id v12 = "[%@]: Implicitly denied low data - over threshold, or threshold unavailable";
        goto LABEL_9;
      }

      if (v23)
      {
        id v28 = objc_getProperty(v4, v24, 32LL, 1);
        int v34 = 138412290;
        id v35 = v28;
        id v29 = "[%@]: Implicitly allowed low data - threshold applies";
LABEL_31:
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, v29, (uint8_t *)&v34, 0xCu);
      }
    }

    uint64_t v13 = 3LL;
    goto LABEL_33;
  }

  if (v8)
  {
    if (v4) {
      id v10 = objc_getProperty(v4, v9, 32LL, 1);
    }
    else {
      id v10 = 0LL;
    }
    id v11 = v10;
    int v34 = 138412290;
    id v35 = v11;
    id v12 = "[%@]: Implicitly denied low data - automatic downloads are disabled";
LABEL_9:
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, v12, (uint8_t *)&v34, 0xCu);
  }

id sub_1001C9810(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1001C9888;
  block[3] = &unk_1003E9EA8;
  void block[4] = objc_opt_self(a1);
  if (qword_1004621F8 != -1) {
    dispatch_once(&qword_1004621F8, block);
  }
  return (id)qword_1004621F0;
}

void sub_1001C9888(uint64_t a1, uint64_t a2)
{
  id v2 = objc_alloc_init((Class)objc_opt_class(*(void *)(a1 + 32), a2));
  id v3 = (void *)qword_1004621F0;
  qword_1004621F0 = (uint64_t)v2;
}

id sub_1001C9A2C(uint64_t a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
  id v2 = (void *)objc_claimAutoreleasedReturnValue([v1 attributesOfFileSystemForPath:@"/private/var" error:0]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 objectForKey:NSFileSystemFreeSize]);
  id v4 = [v3 longLongValue];

  return v4;
}

id sub_1001C9AAC(uint64_t a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
  id v2 = [v1 integerForKey:@"ODRDeviceSpaceCushion"];

  return v2;
}

uint64_t sub_1001C9AF4(uint64_t result, uint64_t a2)
{
  if (result)
  {
    id v3 = (id *)result;
    id v4 = sub_1001C9A2C((uint64_t)&OBJC_CLASS___ODRManager);
    int64_t v5 = v4 - ((_BYTE *)sub_1001C9AAC((uint64_t)&OBJC_CLASS___ODRManager) + a2);
    uint64_t v6 = ASDLogHandleForCategory(19LL);
    id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)__int128 buf = 136447234;
      uint64_t v22 = "-[ODRManager checkAndRequestRequiredSpaceForRequest:]";
      __int16 v23 = 2048;
      id v24 = sub_1001C9A2C((uint64_t)&OBJC_CLASS___ODRManager);
      __int16 v25 = 2048;
      id v26 = sub_1001C9AAC((uint64_t)&OBJC_CLASS___ODRManager);
      __int16 v27 = 2048;
      uint64_t v28 = a2;
      __int16 v29 = 2048;
      int64_t v30 = v5;
      _os_log_debug_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEBUG,  "%{public}s avail: %lld cushion: %lld required: %lld delta: %lld",  buf,  0x34u);
    }

    if (v5 < 0 && (uint64_t)sub_1001C9CF8(v3, -v5, 0, 3) < -v5)
    {
      id v8 = sub_1001F8A80((uint64_t)&OBJC_CLASS___ODRClient);
      uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
      __int128 v16 = 0u;
      __int128 v17 = 0u;
      __int128 v18 = 0u;
      __int128 v19 = 0u;
      id v10 = [v9 countByEnumeratingWithState:&v16 objects:v20 count:16];
      if (v10)
      {
        id v11 = v10;
        uint64_t v12 = *(void *)v17;
        do
        {
          uint64_t v13 = 0LL;
          do
          {
            if (*(void *)v17 != v12) {
              objc_enumerationMutation(v9);
            }
            id v14 = *(void **)(*((void *)&v16 + 1) + 8LL * (void)v13);
            if (v14) {
              id v14 = (void *)v14[8];
            }
            unint64_t v15 = v14;
            [v15 sendLowDiskSpaceNotification];

            uint64_t v13 = (char *)v13 + 1;
          }

          while (v11 != v13);
          id v11 = [v9 countByEnumeratingWithState:&v16 objects:v20 count:16];
        }

        while (v11);
      }

      return 0LL;
    }

    else
    {
      return 1LL;
    }
  }

  return result;
}

id *sub_1001C9CF8(id *a1, uint64_t a2, int a3, int a4)
{
  id v4 = a1;
  if (a1)
  {
    uint64_t v8 = ASDLogHandleForCategory(19LL);
    uint64_t v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 134218240;
      *(void *)&uint8_t buf[4] = a2;
      *(_WORD *)&buf[12] = 1024;
      *(_DWORD *)&buf[14] = a4;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "PURGING SYSTEM : Requested %{iec-bytes}lld be purged at urgency %d",  buf,  0x12u);
    }

    *(void *)__int128 buf = 0LL;
    *(void *)&uint8_t buf[8] = buf;
    *(void *)&uint8_t buf[16] = 0x2020000000LL;
    uint64_t v29 = 0LL;
    if (a3)
    {
      id v4 = (id *)sub_1001CB004(v4, a2, a4);
      *(void *)(*(void *)&buf[8] + 24LL) = v4;
    }

    else
    {
      dispatch_semaphore_t v10 = dispatch_semaphore_create(0LL);
      id v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", a2));
      uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjectsAndKeys:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjectsAndKeys:",  @"/private/var",  @"CACHE_DELETE_VOLUME",  v11,  @"CACHE_DELETE_AMOUNT",  0LL));

      v22[0] = _NSConcreteStackBlock;
      v22[1] = 3221225472LL;
      void v22[2] = sub_1001CBD18;
      v22[3] = &unk_1003EB728;
      id v24 = buf;
      uint64_t v25 = a2;
      uint64_t v13 = v10;
      __int16 v23 = v13;
      CacheDeletePurgeSpaceWithInfo(v12, v22);
      dispatch_time_t v14 = dispatch_time(0LL, 10000000000LL);
      if (dispatch_semaphore_wait(v13, v14) >= 1)
      {
        uint64_t v15 = ASDLogHandleForCategory(19LL);
        __int128 v16 = (os_log_s *)objc_claimAutoreleasedReturnValue(v15);
        if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)id v26 = 136446210;
          __int16 v27 = "-[ODRManager purgeBytes:odrOnly:urgency:]";
          _os_log_error_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_ERROR,  "%{public}s cache-delete semaphore timed out.",  v26,  0xCu);
        }
      }

      if (a4 == 3)
      {
        uint64_t v17 = *(void *)(*(void *)&buf[8] + 24LL);
        if (a2 > v17)
        {
          __int128 v18 = sub_1001CB004(v4, a2 - v17, 3);
          *(void *)(*(void *)&buf[8] + 24LL) += v18;
          if ((uint64_t)v18 >= 1)
          {
            uint64_t v19 = ASDLogHandleForCategory(19LL);
            id v20 = (os_log_s *)objc_claimAutoreleasedReturnValue(v19);
            if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)id v26 = 134217984;
              __int16 v27 = v18;
              _os_log_error_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_ERROR,  "Secondary purging pass due to CacheDelete shortfall.  Additional bytes purged (%{iec-bytes}lld).",  v26,  0xCu);
            }
          }
        }
      }

      id v4 = *(id **)(*(void *)&buf[8] + 24LL);
    }

    _Block_object_dispose(buf, 8);
  }

  return v4;
}

void sub_1001C9FF8(_Unwind_Exception *a1)
{
}

uint64_t sub_1001CA028(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    uint64_t v13 = 0LL;
    dispatch_time_t v14 = &v13;
    uint64_t v15 = 0x2020000000LL;
    char v16 = 0;
    [*(id *)(a1 + 24) lock];
    id v4 = sub_1001B53D0((uint64_t)&OBJC_CLASS___ODRDatabaseStore);
    int64_t v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
    id v7 = _NSConcreteStackBlock;
    uint64_t v8 = 3221225472LL;
    uint64_t v9 = sub_1001CA128;
    dispatch_semaphore_t v10 = &unk_1003EB6B8;
    id v11 = v3;
    uint64_t v12 = &v13;
    [v5 modifyUsingTransaction:&v7];

    objc_msgSend(*(id *)(a1 + 24), "unlock", v7, v8, v9, v10);
    a1 = *((_BYTE *)v14 + 24) != 0;

    _Block_object_dispose(&v13, 8);
  }

  return a1;
}

void sub_1001CA110( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_1001CA128(uint64_t a1, void *a2)
{
  id v20 = a2;
  __int128 v27 = 0u;
  __int128 v28 = 0u;
  __int128 v29 = 0u;
  __int128 v30 = 0u;
  id obj = *(id *)(a1 + 32);
  id v21 = [obj countByEnumeratingWithState:&v27 objects:v32 count:16];
  if (v21)
  {
    uint64_t v19 = *(void *)v28;
    do
    {
      for (uint64_t i = 0LL; i != v21; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v28 != v19) {
          objc_enumerationMutation(obj);
        }
        id v4 = sub_1002D92D0((uint64_t)&OBJC_CLASS___ODRApplication, *(void **)(*((void *)&v27 + 1) + 8LL * (void)i));
        uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue(v4);
        id v5 = sub_10018786C(v20, (uint64_t)v22);
        uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
        __int128 v23 = 0u;
        __int128 v24 = 0u;
        __int128 v25 = 0u;
        __int128 v26 = 0u;
        id v7 = [v6 countByEnumeratingWithState:&v23 objects:v31 count:16];
        if (v7)
        {
          id v8 = v7;
          uint64_t v9 = *(void *)v24;
          do
          {
            for (j = 0LL; j != v8; j = (char *)j + 1)
            {
              if (*(void *)v24 != v9) {
                objc_enumerationMutation(v6);
              }
              id v11 = *(void **)(*((void *)&v23 + 1) + 8LL * (void)j);
              id v12 = sub_1001F7CB0(v11);
              uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
              if (v13)
              {
                id v14 = sub_1001ECB18(v13);
                uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
                sub_1001F80CC(v11, v15);

                *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = 1;
              }
            }

            id v8 = [v6 countByEnumeratingWithState:&v23 objects:v31 count:16];
          }

          while (v8);
        }
      }

      id v21 = [obj countByEnumeratingWithState:&v27 objects:v32 count:16];
    }

    while (v21);
  }

  uint64_t v16 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL);
  return v16;
}

void sub_1001CA35C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    id v4 = sub_1002D92D0((uint64_t)&OBJC_CLASS___ODRApplication, v3);
    id v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
    uint64_t v6 = ASDLogHandleForCategory(19LL);
    id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      LODWORD(buf) = 138543362;
      *(void *)((char *)&buf + 4) = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "Handling application installation: %{public}@",  (uint8_t *)&buf,  0xCu);
    }

    *(void *)&__int128 buf = 0LL;
    *((void *)&buf + 1) = &buf;
    uint64_t v27 = 0x2020000000LL;
    uint64_t v28 = 1LL;
    id v8 = sub_1001B53D0((uint64_t)&OBJC_CLASS___ODRDatabaseStore);
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
    v21[0] = _NSConcreteStackBlock;
    v21[1] = 3221225472LL;
    void v21[2] = sub_1001CA774;
    v21[3] = &unk_1003EB858;
    p___int128 buf = &buf;
    id v10 = v5;
    id v22 = v10;
    [v9 readUsingSession:v21];

    uint64_t v11 = *(void *)(*((void *)&buf + 1) + 24LL);
    switch(v11)
    {
      case 0LL:
        uint64_t v12 = ASDLogHandleForCategory(19LL);
        uint64_t v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
        if (!os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_18;
        }
        *(_DWORD *)__int128 v24 = 138543362;
        id v25 = v10;
        id v14 = "Cleaning up after installation for %{public}@ as ODR is no longer supported";
        break;
      case 1LL:
        uint64_t v15 = ASDLogHandleForCategory(19LL);
        uint64_t v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v15);
        if (!os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_18;
        }
        *(_DWORD *)__int128 v24 = 138543362;
        id v25 = v10;
        id v14 = "Ignoring installation for %{public}@ but it does not appear to support ODR";
        break;
      case 2LL:
        uint64_t v16 = ASDLogHandleForCategory(19LL);
        uint64_t v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v16);
        if (!os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_18;
        }
        *(_DWORD *)__int128 v24 = 138543362;
        id v25 = v10;
        id v14 = "Handling installation for %{public}@ as a new ODR application";
        break;
      case 3LL:
        uint64_t v17 = ASDLogHandleForCategory(19LL);
        uint64_t v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v17);
        if (!os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_18;
        }
        *(_DWORD *)__int128 v24 = 138543362;
        id v25 = v10;
        id v14 = "Handling installation for %{public}@ as an updated ODR application";
        break;
      case 4LL:
        uint64_t v18 = ASDLogHandleForCategory(19LL);
        uint64_t v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v18);
        if (!os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_18;
        }
        *(_DWORD *)__int128 v24 = 138543362;
        id v25 = v10;
        id v14 = "Handling installation for %{public}@ as an ODR application needing repair";
        break;
      case 5LL:
        uint64_t v19 = ASDLogHandleForCategory(19LL);
        uint64_t v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v19);
        if (!os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT)) {
          goto LABEL_18;
        }
        *(_DWORD *)__int128 v24 = 138543362;
        id v25 = v10;
        id v14 = "Ignoring installation for %{public}@ as it already up to date";
        break;
      default:
        goto LABEL_19;
    }

    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, v14, v24, 0xCu);
LABEL_18:

    uint64_t v11 = *(void *)(*((void *)&buf + 1) + 24LL);
LABEL_19:
    if ((unint64_t)(v11 - 2) < 2)
    {
      id v20 = sub_100290554(objc_alloc(&OBJC_CLASS___ODRApplicationImportTask), v10);
      sub_1001E2DEC((uint64_t)&OBJC_CLASS___ODRTaskQueue, v20, 17LL);
    }

    else if (v11 == 4)
    {
      id v20 = sub_1001E9630(objc_alloc(&OBJC_CLASS___ODRApplicationRepairTask), v10);
      sub_1001E2DEC((uint64_t)&OBJC_CLASS___ODRTaskQueue, v20, 17LL);
    }

    else
    {
      if (v11)
      {
LABEL_26:

        _Block_object_dispose(&buf, 8);
        goto LABEL_27;
      }

      id v20 = sub_1002B5024(objc_alloc(&OBJC_CLASS___ODRApplicationCleanTask), v10);
      sub_1001E2DEC((uint64_t)&OBJC_CLASS___ODRTaskQueue, v20, 17LL);
    }

    goto LABEL_26;
  }

void sub_1001CA730( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

uint64_t sub_1001CA774(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_100188788(a2, *(void **)(a1 + 32));
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = result;
  return result;
}

void sub_1001CA7AC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (a1)
  {
    [*(id *)(a1 + 24) lock];
    objc_opt_self(&OBJC_CLASS___ODRPlatformPolicies);
    else {
      unint64_t v7 = 0x80000000LL;
    }
    uint64_t v8 = ASDLogHandleForCategory(19LL);
    uint64_t v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 136446466;
      *(void *)&uint8_t buf[4] = "-[ODRManager performResourceAccessBlock:forApplicationBundleID:]";
      *(_WORD *)&buf[12] = 2048;
      *(void *)&buf[14] = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "%{public}s ODRManager.performResourceAccessBlock maxPinnedSizeAllowed %lul",  buf,  0x16u);
    }

    *(void *)__int128 buf = 0LL;
    *(void *)&uint8_t buf[8] = buf;
    *(void *)&uint8_t buf[16] = 0x2020000000LL;
    uint64_t v23 = 0LL;
    id v10 = sub_1001B53D0((uint64_t)&OBJC_CLASS___ODRDatabaseStore);
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
    uint64_t v16 = _NSConcreteStackBlock;
    uint64_t v17 = 3221225472LL;
    uint64_t v18 = sub_1001CA9E8;
    uint64_t v19 = &unk_1003EB858;
    id v21 = buf;
    id v20 = v6;
    [v11 readUsingSession:&v16];

    unint64_t v12 = *(void *)(*(void *)&buf[8] + 24LL);
    BOOL v13 = v7 >= v12;
    unint64_t v14 = v7 - v12;
    if (v13) {
      unint64_t v15 = v14;
    }
    else {
      unint64_t v15 = 0LL;
    }
    v5[2](v5, v15);

    _Block_object_dispose(buf, 8);
    objc_msgSend(*(id *)(a1 + 24), "unlock", v16, v17, v18, v19);
  }
}

void sub_1001CA984(_Unwind_Exception *a1)
{
}

void sub_1001CA9E8(uint64_t a1, void **a2)
{
  id v3 = sub_100188F80(a2, *(void **)(a1 + 32));
  id v4 = (id)objc_claimAutoreleasedReturnValue(v3);
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = [v4 unsignedIntegerValue];
}

void sub_1001CAA38(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    [*(id *)(a1 + 24) lock];
    v3[2]();
    [*(id *)(a1 + 24) unlock];
  }
}

void sub_1001CAA98(_Unwind_Exception *a1)
{
}

void sub_1001CAAB4()
{
}

void sub_1001CAAC4(uint64_t a1)
{
  unint64_t data = dispatch_source_get_data(*(dispatch_source_t *)(*(void *)(a1 + 32) + 32LL));
  if ((data & 0x200) != 0)
  {
    uint64_t v6 = ASDLogHandleForCategory(19LL);
    unint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v11 = 136446210;
      unint64_t v12 = "-[ODRManager _setupPurgingSupport]_block_invoke";
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "%{public}s received very low disk notification. Purging 2GB at urgency 3.",  (uint8_t *)&v11,  0xCu);
    }

    uint64_t v8 = *(id **)(a1 + 32);
    uint64_t v9 = 2000000000LL;
    int v10 = 3;
    goto LABEL_12;
  }

  uint64_t v3 = ASDLogHandleForCategory(19LL);
  id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);
  if ((data & 4) != 0)
  {
    if (v5)
    {
      int v11 = 136446210;
      unint64_t v12 = "-[ODRManager _setupPurgingSupport]_block_invoke";
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "%{public}s received low disk notification. Purging 1GB at urgency 2.",  (uint8_t *)&v11,  0xCu);
    }

    uint64_t v8 = *(id **)(a1 + 32);
    uint64_t v9 = 1000000000LL;
    int v10 = 2;
LABEL_12:
    sub_1001C9CF8(v8, v9, 1, v10);
    return;
  }

  if (v5)
  {
    int v11 = 136446466;
    unint64_t v12 = "-[ODRManager _setupPurgingSupport]_block_invoke";
    __int16 v13 = 2048;
    unint64_t v14 = data;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "%{public}s received unknown notification-- flags %lu -- doing nothing.",  (uint8_t *)&v11,  0x16u);
  }
}

uint64_t sub_1001CAE34(uint64_t a1, int a2)
{
  if (!a1) {
    return 0LL;
  }
  *(void *)uint64_t v8 = 0LL;
  id v3 = sub_1001CB7FC(a1, a2, 0x7FFFFFFFFFFFFFFFLL, v8, 0);
  uint64_t v4 = *(void *)v8;
  uint64_t v5 = ASDLogHandleForCategory(19LL);
  uint64_t v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t v8 = 134218240;
    *(void *)&void v8[4] = v4;
    __int16 v9 = 1024;
    int v10 = a2;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "PURGING : %{iec-bytes}lld available for purging urgency %d",  v8,  0x12u);
  }

  return v4;
}

const char *sub_1001CB004(id *a1, uint64_t a2, int a3)
{
  if (!a1) {
    return 0LL;
  }
  uint64_t v86 = 0LL;
  [a1[3] lock];
  uint64_t v6 = objc_autoreleasePoolPush();
  id v69 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
  uint64_t v70 = objc_claimAutoreleasedReturnValue(+[NSMutableSet set](&OBJC_CLASS___NSMutableSet, "set"));
  id v7 = sub_1001CB7CC(a1, a3, a2, &v86);
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
  uint64_t v66 = v6;
  dispatch_semaphore_t v67 = a1;
  int v65 = a3;
  uint64_t v64 = a2;
  if (a3 >= 2 && v86 < a2)
  {
    id v9 = sub_1001F8A80((uint64_t)&OBJC_CLASS___ODRClient);
    int v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
    __int128 v82 = 0u;
    __int128 v83 = 0u;
    __int128 v84 = 0u;
    __int128 v85 = 0u;
    id v11 = [v10 countByEnumeratingWithState:&v82 objects:v97 count:16];
    if (v11)
    {
      id v12 = v11;
      uint64_t v13 = *(void *)v83;
      do
      {
        for (uint64_t i = 0LL; i != v12; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v83 != v13) {
            objc_enumerationMutation(v10);
          }
          unint64_t v15 = *(void **)(*((void *)&v82 + 1) + 8LL * (void)i);
          if (v15) {
            unint64_t v15 = (void *)v15[8];
          }
          uint64_t v16 = v15;
          [v16 sendLowDiskSpaceNotification];
        }

        id v12 = [v10 countByEnumeratingWithState:&v82 objects:v97 count:16];
      }

      while (v12);
    }

    id v17 = sub_1001CB7CC(a1, a3, a2, &v86);
    uint64_t v18 = objc_claimAutoreleasedReturnValue(v17);

    uint64_t v8 = (void *)v18;
  }

  id v68 = [[RBSTerminateContext alloc] initWithExplanation:@"On-Demand Resource purge request from CacheDelete"];
  [v68 setMaximumTerminationResistance:30];
  __int128 v80 = 0u;
  __int128 v81 = 0u;
  __int128 v78 = 0u;
  __int128 v79 = 0u;
  id obj = v8;
  id v19 = [obj countByEnumeratingWithState:&v78 objects:v96 count:16];
  id v20 = (void *)v70;
  if (!v19)
  {
    id v22 = 0LL;
    goto LABEL_42;
  }

  id v21 = v19;
  id v22 = 0LL;
  uint64_t v23 = *(void *)v79;
  do
  {
    __int128 v24 = 0LL;
    do
    {
      if (*(void *)v79 != v23) {
        objc_enumerationMutation(obj);
      }
      id v25 = *(void **)(*((void *)&v78 + 1) + 8LL * (void)v24);
      id v26 = sub_1001F794C(v25);
      uint64_t v27 = (char *)objc_claimAutoreleasedReturnValue(v26);
      if (uint64_t)sub_1001F7BA8(v25) < 1 || ([v20 containsObject:v27])
      {
        uint64_t v28 = ASDLogHandleForCategory(19LL);
        __int128 v29 = (os_log_s *)objc_claimAutoreleasedReturnValue(v28);
        if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
        {
          id v30 = sub_1001F7970(v25);
          id v31 = (void *)objc_claimAutoreleasedReturnValue(v30);
          id v32 = sub_1001F7BA8(v25);
          *(_DWORD *)__int128 buf = 136446978;
          uint64_t v89 = "-[ODRManager _purgeBytes:forUrgency:]";
          __int16 v90 = 2114;
          __int128 v91 = v27;
          __int16 v92 = 2114;
          __int128 v93 = v31;
          __int16 v94 = 2048;
          id v95 = v32;
          _os_log_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_DEFAULT,  "%{public}s No need to assert %{public}@ for asset %{public}@ with pin count %lld",  buf,  0x2Au);
        }

        goto LABEL_29;
      }

      uint64_t v33 = ASDLogHandleForCategory(19LL);
      int v34 = (os_log_s *)objc_claimAutoreleasedReturnValue(v33);
      if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
      {
        id v35 = sub_1001F7970(v25);
        __int16 v36 = (void *)objc_claimAutoreleasedReturnValue(v35);
        id v37 = sub_1001F7BA8(v25);
        *(_DWORD *)__int128 buf = 136446978;
        uint64_t v89 = "-[ODRManager _purgeBytes:forUrgency:]";
        __int16 v90 = 2114;
        __int128 v91 = v27;
        __int16 v92 = 2114;
        __int128 v93 = v36;
        __int16 v94 = 2048;
        id v95 = v37;
        _os_log_impl( (void *)&_mh_execute_header,  v34,  OS_LOG_TYPE_DEFAULT,  "%{public}s Attempting to assert %{public}@ for asset %{public}@ with pin count %lld.",  buf,  0x2Au);
      }

      [v20 addObject:v27];
      __int16 v38 = objc_alloc(&OBJC_CLASS___RBSTerminationAssertion);
      int v39 = (void *)objc_claimAutoreleasedReturnValue( +[RBSProcessPredicate predicateMatchingBundleIdentifier:]( &OBJC_CLASS___RBSProcessPredicate,  "predicateMatchingBundleIdentifier:",  v27));
      __int128 v29 = -[RBSTerminationAssertion initWithPredicate:context:](v38, "initWithPredicate:context:", v39, v68);

      [v69 addObject:v29];
      id v77 = 0LL;
      unsigned __int8 v40 = -[os_log_s acquireWithError:](v29, "acquireWithError:", &v77);
      id v41 = (char *)v77;
      uint64_t v42 = v41;
      if ((v40 & 1) != 0)
      {

LABEL_28:
        id v20 = (void *)v70;
LABEL_29:

        if (sub_1001ACDF0(v25, 2LL))
        {
          id v43 = sub_1001F7C8C(v25);
          __int128 v44 = (void *)objc_claimAutoreleasedReturnValue(v43);
          id v22 = &v22[(void)[v44 integerValue]];

          id v45 = sub_1001B53D0((uint64_t)&OBJC_CLASS___ODRDatabaseStore);
          __int128 v46 = (void *)objc_claimAutoreleasedReturnValue(v45);
          v76[0] = _NSConcreteStackBlock;
          v76[1] = 3221225472LL;
          v76[2] = sub_1001CB7EC;
          v76[3] = &unk_1003E9858;
          v76[4] = v25;
          [v46 modifyUsingTransaction:v76];
        }

        else
        {
          uint64_t v47 = ASDLogHandleForCategory(19LL);
          __int128 v48 = (os_log_s *)objc_claimAutoreleasedReturnValue(v47);
          if (os_log_type_enabled(v48, OS_LOG_TYPE_ERROR))
          {
            id v51 = sub_1001F7970(v25);
            id v52 = (char *)objc_claimAutoreleasedReturnValue(v51);
            id v53 = sub_1001F7B20(v25);
            __int16 v54 = (char *)objc_claimAutoreleasedReturnValue(v53);
            *(_DWORD *)__int128 buf = 138543618;
            uint64_t v89 = v52;
            __int16 v90 = 2114;
            __int128 v91 = v54;
            _os_log_error_impl( (void *)&_mh_execute_header,  v48,  OS_LOG_TYPE_ERROR,  "PURGING ERROR : Attempting to delete asset %{public}@ at url %{public}@ failed.",  buf,  0x16u);
          }
        }

        goto LABEL_34;
      }

      uint64_t v49 = ASDLogHandleForCategory(19LL);
      __int128 v50 = (os_log_s *)objc_claimAutoreleasedReturnValue(v49);
      if (os_log_type_enabled(v50, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)__int128 buf = 138543618;
        uint64_t v89 = v27;
        __int16 v90 = 2114;
        __int128 v91 = v42;
        _os_log_error_impl( (void *)&_mh_execute_header,  v50,  OS_LOG_TYPE_ERROR,  "Error acquiring assertion for %{public}@: %{public}@",  buf,  0x16u);
      }

      id v20 = (void *)v70;
LABEL_34:

      __int128 v24 = (char *)v24 + 1;
    }

    while (v21 != v24);
    id v55 = [obj countByEnumeratingWithState:&v78 objects:v96 count:16];
    id v21 = v55;
  }

  while (v55);
LABEL_42:

  uint64_t v56 = ASDLogHandleForCategory(19LL);
  id v57 = (os_log_s *)objc_claimAutoreleasedReturnValue(v56);
  if (os_log_type_enabled(v57, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)__int128 buf = 134218496;
    uint64_t v89 = v22;
    __int16 v90 = 2048;
    __int128 v91 = (char *)v64;
    __int16 v92 = 1024;
    LODWORD(v93) = v65;
    _os_log_impl( (void *)&_mh_execute_header,  v57,  OS_LOG_TYPE_DEFAULT,  "PURGING : %{iec-bytes}lld purged (%lld requested) for purging urgency %d",  buf,  0x1Cu);
  }

  __int128 v74 = 0u;
  __int128 v75 = 0u;
  __int128 v72 = 0u;
  __int128 v73 = 0u;
  id v58 = v69;
  id v59 = [v58 countByEnumeratingWithState:&v72 objects:v87 count:16];
  if (v59)
  {
    id v60 = v59;
    uint64_t v61 = *(void *)v73;
    do
    {
      for (j = 0LL; j != v60; j = (char *)j + 1)
      {
        if (*(void *)v73 != v61) {
          objc_enumerationMutation(v58);
        }
        objc_msgSend(*(id *)(*((void *)&v72 + 1) + 8 * (void)j), "invalidate", v64);
      }

      id v60 = [v58 countByEnumeratingWithState:&v72 objects:v87 count:16];
    }

    while (v60);
  }

  objc_autoreleasePoolPop(v66);
  [v67[3] unlock];
  return v22;
}

id sub_1001CB7CC(void *a1, int a2, uint64_t a3, void *a4)
{
  if (a1)
  {
    id v4 = sub_1001CB7FC((uint64_t)a1, a2, a3, a4, 1);
    a1 = (void *)objc_claimAutoreleasedReturnValue(v4);
  }

  return a1;
}

BOOL sub_1001CB7EC(uint64_t a1, void *a2)
{
  return sub_1001C5884(a2, *(void **)(a1 + 32));
}

id sub_1001CB7FC(uint64_t a1, int a2, uint64_t a3, void *a4, char a5)
{
  if (a1)
  {
    uint64_t v35 = 0LL;
    __int16 v36 = &v35;
    uint64_t v37 = 0x3032000000LL;
    __int16 v38 = sub_1001CBAE4;
    int v39 = sub_1001CBAF4;
    unsigned __int8 v40 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    uint64_t v31 = 0LL;
    id v32 = &v31;
    uint64_t v33 = 0x2020000000LL;
    uint64_t v34 = 0LL;
    v29[0] = _NSConcreteStackBlock;
    v29[1] = 3221225472LL;
    void v29[2] = sub_1001CBAFC;
    v29[3] = &unk_1003EB6E0;
    char v30 = a5;
    void v29[4] = &v31;
    void v29[5] = &v35;
    v29[6] = a3;
    id v9 = objc_retainBlock(v29);
    int v10 = v9;
    switch(a2)
    {
      case 3:
        sub_1001CBBAC(0LL, v9);
        if (![(id)v36[5] count])
        {
          id v15 = sub_1001F8A80((uint64_t)&OBJC_CLASS___ODRClient);
          uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
          id v17 = [v16 count];

          if (!v17)
          {
            id v18 = sub_1002FE4E0((uint64_t)&OBJC_CLASS___ODRServiceDelegate);
            id v19 = (void *)objc_claimAutoreleasedReturnValue(v18);
            uint64_t v20 = sub_1002FEDB4((uint64_t)v19);

            if ((v20 & 1) == 0)
            {
              uint64_t v21 = ASDLogHandleForCategory(19LL);
              id v22 = (os_log_s *)objc_claimAutoreleasedReturnValue(v21);
              if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
              {
                *(_WORD *)__int128 buf = 0;
                _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEFAULT,  "ODR Purging requesting with high priority, kicking off maintenance operations.",  buf,  2u);
              }

              dispatch_queue_global_t global_queue = dispatch_get_global_queue(21LL, 0LL);
              __int128 v24 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
              dispatch_async(v24, &stru_1003EB700);
            }
          }
        }

        break;
      case 2:
        id v25 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](&OBJC_CLASS___NSUserDefaults, "standardUserDefaults"));
        id v26 = [v25 integerForKey:@"ODRPurgeAssetMediumUrgencyCutoff"];

        sub_1001CBBAC((uint64_t)v26, v10);
        break;
      case 1:
        id v11 = v9;
        id v12 = sub_1001B53D0((uint64_t)&OBJC_CLASS___ODRDatabaseStore);
        uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
        *(void *)__int128 buf = _NSConcreteStackBlock;
        uint64_t v42 = 3221225472LL;
        id v43 = sub_1001CCBF8;
        __int128 v44 = &unk_1003EB830;
        unint64_t v14 = v11;
        id v45 = v14;
        [v13 readUsingSession:buf];

        break;
    }

    if (a4) {
      *a4 = v32[3];
    }
    id v27 = (id)v36[5];

    _Block_object_dispose(&v31, 8);
    _Block_object_dispose(&v35, 8);
  }

  else
  {
    id v27 = 0LL;
  }

  return v27;
}

void sub_1001CBAB8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1001CBAE4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1001CBAF4(uint64_t a1)
{
}

void sub_1001CBAFC(uint64_t a1, void *a2, _BYTE *a3)
{
  id v9 = a2;
  unsigned int v5 = sub_1001F8338(v9);
  uint64_t v6 = v9;
  if (v5)
  {
    id v7 = sub_1001F7C8C(v9);
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) += [v8 unsignedLongLongValue];

    if (*(_BYTE *)(a1 + 56)) {
      [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) addObject:v9];
    }
    uint64_t v6 = v9;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 24LL) >= *(void *)(a1 + 48)) {
      *a3 = 1;
    }
  }
}

void sub_1001CBBAC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[NSDate dateWithTimeIntervalSinceNow:]( &OBJC_CLASS___NSDate,  "dateWithTimeIntervalSinceNow:",  (double)-a1));
  id v5 = sub_1001F8A80((uint64_t)&OBJC_CLASS___ODRClient);
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  id v7 = sub_1002B86C0(v6, &stru_1003EB790);
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
  id v9 = sub_1001B53D0((uint64_t)&OBJC_CLASS___ODRDatabaseStore);
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472LL;
  void v14[2] = sub_1001CC9C8;
  v14[3] = &unk_1003EB808;
  id v13 = v3;
  id v16 = v8;
  id v17 = v13;
  id v15 = v4;
  id v11 = v8;
  id v12 = v4;
  [v10 readUsingSession:v14];
}

void sub_1001CBCC4(id a1)
{
  id v1 = sub_100185E88((uint64_t)&OBJC_CLASS___ODRBackgroundMaintenance);
  id v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  sub_100185F6C(v2);

  id v3 = sub_100185E88((uint64_t)&OBJC_CLASS___ODRBackgroundMaintenance);
  id v4 = (id)objc_claimAutoreleasedReturnValue(v3);
  sub_100186078((uint64_t)v4);
}

void sub_1001CBD18(uint64_t a1, void *a2)
{
  id v4 = (void *)objc_claimAutoreleasedReturnValue([a2 objectForKeyedSubscript:@"CACHE_DELETE_AMOUNT"]);
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = [v4 longLongValue];

  uint64_t v5 = ASDLogHandleForCategory(19LL);
  uint64_t v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v7 = *(void *)(a1 + 48);
    uint64_t v8 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL);
    int v9 = 134218240;
    uint64_t v10 = v8;
    __int16 v11 = 2048;
    uint64_t v12 = v7;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "PURGING SYSTEM : %{iec-bytes}lld purged (requested %lld)",  (uint8_t *)&v9,  0x16u);
  }

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_1001CBE18(uint64_t a1, void *a2, uint64_t a3)
{
  id v7 = a2;
  if (a1)
  {
    [*(id *)(a1 + 24) lock];
    id v5 = sub_1001B53D0((uint64_t)&OBJC_CLASS___ODRDatabaseStore);
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472LL;
    v8[2] = sub_1001CBED0;
    v8[3] = &unk_1003EB750;
    uint64_t v10 = a3;
    id v9 = v7;
    [v6 modifyUsingTransaction:v8];

    [*(id *)(a1 + 24) unlock];
  }
}

uint64_t sub_1001CBED0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  id v5 = *(void **)(a1 + 32);
  if (*(void *)(a1 + 40) == 1LL)
  {
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
    id v7 = sub_100187CA8(v4, v5, 1LL, v6);
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
  }

  else
  {
    id v9 = sub_1001881AC(v3, *(void **)(a1 + 32));
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(v9);
  }

  __int128 v19 = 0u;
  __int128 v20 = 0u;
  __int128 v17 = 0u;
  __int128 v18 = 0u;
  id v10 = v8;
  id v11 = [v10 countByEnumeratingWithState:&v17 objects:v21 count:16];
  if (v11)
  {
    id v12 = v11;
    uint64_t v13 = *(void *)v18;
    do
    {
      for (uint64_t i = 0LL; i != v12; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v18 != v13) {
          objc_enumerationMutation(v10);
        }
        id v15 = *(void **)(*((void *)&v17 + 1) + 8LL * (void)i);
        sub_1001ACDF0(v15, *(void *)(a1 + 40));
        sub_1001C5884(v4, v15);
      }

      id v12 = [v10 countByEnumeratingWithState:&v17 objects:v21 count:16];
    }

    while (v12);
  }

  return 1LL;
}

void sub_1001CC040(uint64_t a1, void *a2, uint64_t a3)
{
  id v7 = a2;
  if (a1)
  {
    [*(id *)(a1 + 24) lock];
    id v5 = sub_1001B53D0((uint64_t)&OBJC_CLASS___ODRDatabaseStore);
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472LL;
    v8[2] = sub_1001CC0F4;
    v8[3] = &unk_1003EB750;
    id v9 = v7;
    uint64_t v10 = a3;
    [v6 modifyUsingTransaction:v8];

    [*(id *)(a1 + 24) unlock];
  }
}

uint64_t sub_1001CC0F4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_100187D90(v3, *(void *)(a1 + 32));
  id v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  uint64_t v6 = v5;
  if (!v5) {
    goto LABEL_14;
  }
  if (*(void *)(a1 + 40) != 1LL) {
    goto LABEL_13;
  }
  id v7 = (id)objc_claimAutoreleasedReturnValue([v5 valueForProperty:@"bundle_id"]);
  objc_opt_self(&OBJC_CLASS___ODRManager);
  id v8 = sub_1001F8AE0((uint64_t)&OBJC_CLASS___ODRClient, v7);
  id v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
  uint64_t v10 = ASDLogHandleForCategory(19LL);
  id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
  BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG);
  if (!v9)
  {
    if (v12)
    {
      int v19 = 136446466;
      __int128 v20 = "+[ODRManager isAppRunning:]";
      __int16 v21 = 2114;
      id v22 = v7;
      _os_log_debug_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "%{public}s %{public}@ is not being monitored; not running or connected.",
        (uint8_t *)&v19,
        0x16u);
    }

    goto LABEL_13;
  }

  if (v12)
  {
    int v19 = 136446466;
    __int128 v20 = "+[ODRManager isAppRunning:]";
    __int16 v21 = 2114;
    id v22 = v7;
    _os_log_debug_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "%{public}s App %{public}@ is running: YES",  (uint8_t *)&v19,  0x16u);
  }

  unsigned __int8 v13 = sub_1001F7C0C(v6);
  if ((v13 & 1) != 0)
  {
LABEL_13:
    sub_1001ACDF0(v6, *(void *)(a1 + 40));
    sub_1001C5884(v3, v6);
    goto LABEL_14;
  }

  uint64_t v14 = ASDLogHandleForCategory(19LL);
  id v15 = (os_log_s *)objc_claimAutoreleasedReturnValue(v14);
  if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
  {
    id v16 = *(const char **)(a1 + 32);
    __int128 v17 = (void *)objc_claimAutoreleasedReturnValue([v6 valueForProperty:@"bundle_id"]);
    int v19 = 138543618;
    __int128 v20 = v16;
    __int16 v21 = 2114;
    id v22 = v17;
    _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "Not removing asset pack with id %{public}@ because the app %{public}@ is running and the asset is not purgeable",  (uint8_t *)&v19,  0x16u);
  }

LABEL_14:
  return 1LL;
}

NSMutableString *sub_1001CC358(uint64_t a1)
{
  if (!a1) {
    return (NSMutableString *)0LL;
  }
  id v1 = objc_alloc_init(&OBJC_CLASS___NSMutableString);
  id v2 = +[NSByteCountFormatter stringFromByteCount:countStyle:]( &OBJC_CLASS___NSByteCountFormatter,  "stringFromByteCount:countStyle:",  sub_1001C9A2C((uint64_t)&OBJC_CLASS___ODRManager),  0LL);
  id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Available Space : %@\n\n",  v3));
  -[NSMutableString appendString:](v1, "appendString:", v4);

  id v5 = objc_alloc_init(&OBJC_CLASS___NSMutableString);
  id v6 = sub_1002FE4E0((uint64_t)&OBJC_CLASS___ODRServiceDelegate);
  id v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
  id v8 = sub_1002FE648(v7);
  id v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"ODR Library : %@\n",  v9));
  -[NSMutableString appendString:](v5, "appendString:", v10);

  id v11 = sub_1002FE4E0((uint64_t)&OBJC_CLASS___ODRServiceDelegate);
  uint64_t v12 = objc_claimAutoreleasedReturnValue(v11);
  unsigned __int8 v13 = (void *)v12;
  if (v12) {
    uint64_t v14 = *(void **)(v12 + 32);
  }
  else {
    uint64_t v14 = 0LL;
  }
  id v15 = v14;
  id v16 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Asset Packs : %@\n",  v15));
  -[NSMutableString appendString:](v5, "appendString:", v16);

  id v17 = sub_1002FE4E0((uint64_t)&OBJC_CLASS___ODRServiceDelegate);
  uint64_t v18 = objc_claimAutoreleasedReturnValue(v17);
  int v19 = (void *)v18;
  if (v18) {
    __int128 v20 = *(void **)(v18 + 16);
  }
  else {
    __int128 v20 = 0LL;
  }
  id v21 = v20;
  id v22 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Database    : %@\n",  v21));
  -[NSMutableString appendString:](v5, "appendString:", v22);

  id v23 = sub_10030F240((uint64_t)&OBJC_CLASS___ODRDownloadManager);
  __int128 v24 = (void *)objc_claimAutoreleasedReturnValue(v23);
  id v25 = sub_100313C3C((uint64_t)v24);
  id v26 = (void *)objc_claimAutoreleasedReturnValue(v25);

  if ([v26 count])
  {
    id v58 = v1;
    id v27 = objc_alloc_init(&OBJC_CLASS___NSNumberFormatter);
    -[NSNumberFormatter setNumberStyle:](v27, "setNumberStyle:", 3LL);
    -[NSNumberFormatter setMaximumFractionDigits:](v27, "setMaximumFractionDigits:", 0LL);
    id v60 = v27;
    -[NSNumberFormatter setMultiplier:](v27, "setMultiplier:", &off_10040C2B0);
    -[NSMutableString appendString:](v5, "appendString:", @"Active Download Requests\n");
    __int128 v63 = 0u;
    __int128 v64 = 0u;
    __int128 v61 = 0u;
    __int128 v62 = 0u;
    id obj = v26;
    id v28 = [obj countByEnumeratingWithState:&v61 objects:v65 count:16];
    if (v28)
    {
      id v30 = v28;
      uint64_t v31 = *(void *)v62;
      do
      {
        id v32 = 0LL;
        do
        {
          if (*(void *)v62 != v31) {
            objc_enumerationMutation(obj);
          }
          uint64_t v33 = *(void *)(*((void *)&v61 + 1) + 8LL * (void)v32);
          if (v33)
          {
            id v34 = objc_getProperty(*(id *)(*((void *)&v61 + 1) + 8LL * (void)v32), v29, 112LL, 1);
            -[NSMutableString appendFormat:](v5, "appendFormat:", @"\nDownload: %@\n", v34);

            id Property = objc_getProperty((id)v33, v35, 184LL, 1);
          }

          else
          {
            -[NSMutableString appendFormat:](v5, "appendFormat:", @"\nDownload: %@\n", 0LL);
            id Property = 0LL;
          }

          id v37 = Property;
          -[NSMutableString appendFormat:](v5, "appendFormat:", @"\tLog Key : %@\n", v37);

          if (v33)
          {
            id v39 = objc_getProperty((id)v33, v38, 104LL, 1);
            -[NSMutableString appendFormat:](v5, "appendFormat:", @"\tBundle ID : %@\n", v39);

            id v41 = objc_getProperty((id)v33, v40, 216LL, 1);
          }

          else
          {
            -[NSMutableString appendFormat:](v5, "appendFormat:", @"\tBundle ID : %@\n", 0LL);
            id v41 = 0LL;
          }

          id v42 = v41;
          -[NSMutableString appendFormat:](v5, "appendFormat:", @"\tSource URL : %@\n", v42);

          id v43 = sub_1002586C4((void *)v33);
          __int128 v44 = (void *)objc_claimAutoreleasedReturnValue(v43);
          -[NSMutableString appendFormat:](v5, "appendFormat:", @"\tDownload Path : %@\n", v44);

          if (v33)
          {
            id v46 = objc_getProperty((id)v33, v45, 136LL, 1);
            -[NSMutableString appendFormat:](v5, "appendFormat:", @"\tDestination Path : %@\n", v46);

            if ((*(_BYTE *)(v33 + 84) & 1) != 0) {
              uint64_t v47 = @"YES";
            }
            else {
              uint64_t v47 = @"NO";
            }
            -[NSMutableString appendFormat:](v5, "appendFormat:", @"\tIs Streamable: %@\n", v47);
            -[NSMutableString appendFormat:](v5, "appendFormat:", @"\tPriority : %f\n", *(void *)(v33 + 176));
            if ((*(_BYTE *)(v33 + 80) & 1) != 0) {
              __int128 v48 = @"YES";
            }
            else {
              __int128 v48 = @"NO";
            }
            -[NSMutableString appendFormat:](v5, "appendFormat:", @"\tIs Discretionary : %@\n", v48);
            [*(id *)(v33 + 40) lock];
            id v49 = [*(id *)(v33 + 16) count];
            [*(id *)(v33 + 40) unlock];
            -[NSMutableString appendFormat:](v5, "appendFormat:", @"\tDuplicate count : %ld\n", v49);
            id v51 = objc_getProperty((id)v33, v50, 200LL, 1);
          }

          else
          {
            -[NSMutableString appendFormat:](v5, "appendFormat:", @"\tDestination Path : %@\n", 0LL);
            -[NSMutableString appendFormat:](v5, "appendFormat:", @"\tIs Streamable: %@\n", @"NO");
            -[NSMutableString appendFormat:](v5, "appendFormat:", @"\tPriority : %f\n", 0LL);
            -[NSMutableString appendFormat:](v5, "appendFormat:", @"\tIs Discretionary : %@\n", @"NO");
            -[NSMutableString appendFormat:](v5, "appendFormat:", @"\tDuplicate count : %ld\n", 0LL);
            id v51 = 0LL;
          }

          id v52 = v51;
          [v52 fractionCompleted];
          id v53 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:"));
          __int16 v54 = (void *)objc_claimAutoreleasedReturnValue(-[NSNumberFormatter stringFromNumber:](v60, "stringFromNumber:", v53));
          id v55 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"%@ completed",  v54));

          -[NSMutableString appendFormat:](v5, "appendFormat:", @"\tProgress: %@\n\n", v55);
          id v32 = (char *)v32 + 1;
        }

        while (v30 != v32);
        id v56 = [obj countByEnumeratingWithState:&v61 objects:v65 count:16];
        id v30 = v56;
      }

      while (v56);
    }

    id v1 = v58;
  }

  else
  {
    -[NSMutableString appendString:](v5, "appendString:", @"No Download Requests Active\n");
  }

  -[NSMutableString appendString:](v1, "appendString:", v5);
  return v1;
}

id sub_1001CC9AC(id a1, ODRClient *a2)
{
  if (a2) {
    return objc_getProperty(a2, (SEL)a2, 72LL, 1);
  }
  else {
    return 0LL;
  }
}

void sub_1001CC9C8(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v14 = 0LL;
  id v15 = &v14;
  uint64_t v16 = 0x2020000000LL;
  char v17 = 0;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472LL;
  void v11[2] = sub_1001CCB14;
  v11[3] = &unk_1003EB7B8;
  id v12 = *(id *)(a1 + 48);
  unsigned __int8 v13 = &v14;
  if (!v3 || (sub_1001881CC(v3, 0LL, 1LL, 0LL, v11), !*((_BYTE *)v15 + 24)))
  {
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472LL;
    void v7[2] = sub_1001CCB64;
    v7[3] = &unk_1003EB7E0;
    id v4 = *(void **)(a1 + 32);
    id v5 = *(id *)(a1 + 40);
    id v8 = v5;
    id v6 = *(id *)(a1 + 48);
    id v9 = v6;
    uint64_t v10 = &v14;
    if (v3)
    {
      sub_1001881CC(v3, 0LL, 0LL, v4, v7);
      id v5 = v8;
      id v6 = v9;
    }
  }

  _Block_object_dispose(&v14, 8);
}

void sub_1001CCAFC(_Unwind_Exception *a1)
{
}

uint64_t sub_1001CCB14(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
  if (*(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL)) {
    *a3 = 1;
  }
  return result;
}

void sub_1001CCB64(void *a1, void *a2, _BYTE *a3)
{
  id v5 = a2;
  id v6 = (void *)a1[4];
  id v9 = v5;
  id v7 = sub_1001F794C(v5);
  id v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
  LOBYTE(v6) = [v6 containsObject:v8];

  if (*(_BYTE *)(*(void *)(a1[6] + 8LL) + 24LL)) {
    *a3 = 1;
  }
}

void sub_1001CCBF8(uint64_t a1, void *a2)
{
  if (a2) {
    sub_1001881CC(a2, 0LL, 1LL, 0LL, *(void **)(a1 + 32));
  }
}

id *sub_1001CCCA4(id *a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  if (a1)
  {
    a1 = [a1 init];
    if (a1)
    {
      id v10 = [v7 copy];
      id v11 = a1[8];
      a1[8] = v10;

      objc_storeStrong(a1 + 7, a3);
      objc_storeStrong(a1 + 6, a4);
      uint64_t v12 = ASDLogHandleForCategory(25LL);
      unsigned __int8 v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
      uint64_t v14 = (char *)[v8 signpostID];
      if ((unint64_t)(v14 - 1) <= 0xFFFFFFFFFFFFFFFDLL)
      {
        os_signpost_id_t v15 = (os_signpost_id_t)v14;
        if (os_signpost_enabled(v13))
        {
          uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v8 logKey]);
          int v18 = 138543362;
          int v19 = v16;
          _os_signpost_emit_with_name_impl( (void *)&_mh_execute_header,  v13,  OS_SIGNPOST_INTERVAL_BEGIN,  v15,  "Purchase/Import",  " uuid=%{public, signpost.description:attribute}@ ",  (uint8_t *)&v18,  0xCu);
        }
      }
    }
  }

  return a1;
}

void sub_1001CCE1C(uint64_t a1, char a2)
{
  if (a1)
  {
    os_unfair_lock_lock_with_options(a1 + 40, 0x10000LL);
    *(_BYTE *)(a1 + 72) = a2;
    os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  }

void sub_1001CD038( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
}

void sub_1001CD058(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = -[NSMutableArray initWithCapacity:](objc_alloc(&OBJC_CLASS___NSMutableArray), "initWithCapacity:", 2LL);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 56) installedExternalVersionID]);

  if (v5)
  {
    if (v3) {
      id Property = objc_getProperty(v3, v6, 64LL, 1);
    }
    else {
      id Property = 0LL;
    }
    id v8 = Property;
    id v9 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 56) installedExternalVersionID]);
    id v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 56) installedVariantID]);
    id v11 = sub_100259AEC((uint64_t)&OBJC_CLASS___StoreAsset, v8, v9, v10);
    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(v11);

    if (v12) {
      -[NSMutableArray addObject:](v4, "addObject:", v12);
    }
  }

  if (v3) {
    id v13 = objc_getProperty(v3, v6, 72LL, 1);
  }
  else {
    id v13 = 0LL;
  }
  id v14 = v13;

  if (v14)
  {
    if (v3) {
      id v16 = objc_getProperty(v3, v15, 72LL, 1);
    }
    else {
      id v16 = 0LL;
    }
    id v17 = v16;
    -[NSMutableArray addObject:](v4, "addObject:", v17);
  }

  if (*(_BYTE *)(a1 + 56)) {
    uint64_t v18 = objc_claimAutoreleasedReturnValue(+[NSUUID UUID](&OBJC_CLASS___NSUUID, "UUID"));
  }
  else {
    uint64_t v18 = objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 56) externalID]);
  }
  int v19 = (void *)v18;
  unsigned __int8 v193 = [*(id *)(*(void *)(a1 + 32) + 56) suppressDialogs];
  uint64_t v20 = *(void *)(a1 + 32);
  if (!v20)
  {
    uint64_t v34 = ASDLogHandleForCategory(2LL);
    SEL v35 = (os_log_s *)objc_claimAutoreleasedReturnValue(v34);
    if (os_log_type_enabled(v35, OS_LOG_TYPE_DEFAULT))
    {
      __int16 v36 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 56) logKey]);
      *(_DWORD *)__int128 buf = 138543362;
      *(void *)&uint8_t buf[4] = v36;
      _os_log_impl( (void *)&_mh_execute_header,  v35,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] App is ineligible for watch app install",  buf,  0xCu);
    }

    uint64_t v37 = ASDErrorWithDescription(ASDErrorDomain, 507LL, 0LL);
    id v38 = (id)objc_claimAutoreleasedReturnValue(v37);
    goto LABEL_59;
  }

  id v21 = v19;
  id v22 = (void *)objc_claimAutoreleasedReturnValue(-[NSMutableArray firstObject](v4, "firstObject"));
  id v23 = v3;
  self = v23;
  if (!v3)
  {
    id v32 = 0LL;
    id v27 = 0LL;
    goto LABEL_22;
  }

  id v25 = v23;
  id v27 = objc_getProperty(v23, v24, 128LL, 1);
  if (v27)
  {
    id v28 = objc_getProperty(v25, v26, 136LL, 1);
    __int128 v29 = v4;
    id v30 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(v20 + 56) logKey]);
    BOOL v31 = sub_10030334C((uint64_t)&OBJC_CLASS___AMSDevice, v27, v28, v30);

    id v4 = v29;
    id v25 = self;
    if (!v31)
    {
      uint64_t v42 = ASDLogHandleForCategory(25LL);
      SEL v40 = (os_log_s *)objc_claimAutoreleasedReturnValue(v42);
      if (os_log_type_enabled(v40, OS_LOG_TYPE_ERROR))
      {
        uint64_t v180 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(v20 + 56) logKey]);
        id v182 = objc_getProperty(self, v181, 136LL, 1);
        *(_DWORD *)__int128 buf = 138412802;
        *(void *)&uint8_t buf[4] = v180;
        *(_WORD *)&buf[12] = 2114;
        *(void *)&buf[14] = v27;
        __int16 v205 = 2114;
        id v206 = v182;
        _os_log_error_impl( (void *)&_mh_execute_header,  v40,  OS_LOG_TYPE_ERROR,  "[%@] Skipping incompatible purchase for required capabilities: %{public}@ options: %{public}@",  buf,  0x20u);

        id v4 = v29;
      }

      uint64_t v41 = 5LL;
      goto LABEL_32;
    }
  }

  if ((v25[19] & 1) != 0)
  {
    uint64_t v39 = ASDLogHandleForCategory(25LL);
    SEL v40 = (os_log_s *)objc_claimAutoreleasedReturnValue(v39);
    if (os_log_type_enabled(v40, OS_LOG_TYPE_ERROR))
    {
      unint64_t v179 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(v20 + 56) logKey]);
      *(_DWORD *)__int128 buf = 138412290;
      *(void *)&uint8_t buf[4] = v179;
      _os_log_error_impl( (void *)&_mh_execute_header,  v40,  OS_LOG_TYPE_ERROR,  "[%@] Unsupported 32-Bit application",  buf,  0xCu);
    }

    uint64_t v41 = 4LL;
LABEL_32:
    int v19 = v21;

    uint64_t v43 = IXCreateUserPresentableError(v41, [*(id *)(v20 + 56) isDiscretionary] ^ 1, 0);
    id v32 = (id)objc_claimAutoreleasedReturnValue(v43);
    int v33 = 0;
    goto LABEL_33;
  }

  id v32 = 0LL;
LABEL_22:
  int v33 = 1;
  int v19 = v21;
LABEL_33:

  id v38 = v32;
  if (v33 && !v38)
  {
    __int128 v44 = *(void **)(*(void *)(a1 + 32) + 56LL);
    id v203 = 0LL;
    id v45 = sub_1002E33DC((uint64_t)&OBJC_CLASS___AppInstall, self, v4, v44, &v203);
    id v46 = (void *)objc_claimAutoreleasedReturnValue(v45);
    id v38 = v203;
    if (*(_BYTE *)(a1 + 56)) {
      [v46 setValue:v19 forProperty:@"external_id"];
    }
    uint64_t v47 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 56) metricsType]);

    if (v47)
    {
      if (v46)
      {
LABEL_39:
        uint64_t v49 = *(void *)(a1 + 32);
        if (v49)
        {
          os_unfair_lock_lock_with_options(v49 + 40, 0x10000LL);
          int v50 = *(unsigned __int8 *)(v49 + 72);
          os_unfair_lock_unlock((os_unfair_lock_t)(v49 + 40));
          if (v50)
          {
            uint64_t v51 = ASDLogHandleForCategory(25LL);
            id v52 = (os_log_s *)objc_claimAutoreleasedReturnValue(v51);
            if (os_log_type_enabled(v52, OS_LOG_TYPE_DEFAULT))
            {
              id v53 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 56) logKey]);
              *(_DWORD *)__int128 buf = 138412290;
              *(void *)&uint8_t buf[4] = v53;
              _os_log_impl( (void *)&_mh_execute_header,  v52,  OS_LOG_TYPE_DEFAULT,  "[%@] Overriding automatic installation flag",  buf,  0xCu);
            }

            [v46 setValue:&off_10040C2C8 forProperty:@"automatic_type"];
          }
        }

        if (v3) {
          id v54 = objc_getProperty(self, v48, 200LL, 1);
        }
        else {
          id v54 = 0LL;
        }
        int v19 = v21;
        id v55 = v54;

        if (v55)
        {
          if (v3) {
            id v57 = objc_getProperty(self, v56, 200LL, 1);
          }
          else {
            id v57 = 0LL;
          }
          id v58 = v57;
          [v46 setValue:v58 forProperty:@"install_verification_token"];
        }

        if (!v21) {
          int v19 = (void *)objc_claimAutoreleasedReturnValue(+[NSUUID UUID](&OBJC_CLASS___NSUUID, "UUID"));
        }
        [v46 setValue:v19 forProperty:@"external_id"];
        id v59 = sub_10025E0B8(objc_alloc(&OBJC_CLASS___AppInstallImportAndPolicyTask), v46);
        __int128 v61 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 56) coordinator]);
        if (v59) {
          objc_setProperty_atomic(v59, v60, v61, 64LL);
        }

        __int128 v63 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 56) requestToken]);
        if (v59) {
          objc_setProperty_atomic(v59, v62, v63, 88LL);
        }

        else {
          unsigned __int8 v64 = [*(id *)(*(void *)(a1 + 32) + 56) suppressDialogs];
        }
        if (v59)
        {
          v59[48] = v64;
          v59[49] = [*(id *)(*(void *)(a1 + 32) + 56) isDiscretionary] ^ 1;
        }

        else
        {
          [*(id *)(*(void *)(a1 + 32) + 56) isDiscretionary];
        }

        newValue[0] = _NSConcreteStackBlock;
        newValue[1] = 3221225472LL;
        newValue[2] = sub_1001CE3A4;
        newValue[3] = &unk_1003EB880;
        __int16 v94 = v46;
        uint64_t v112 = *(void *)(a1 + 48);
        id v113 = *(void **)(a1 + 32);
        uint64_t v197 = v94;
        unint64_t v198 = v113;
        uint64_t v199 = v112;
        unint64_t v192 = v4;
        uint64_t v194 = v19;
        if (v59)
        {
          objc_setProperty_atomic_copy(v59, v111, newValue, 80LL);
          [*(id *)(a1 + 32) runSubTask:v59 returningError:0];
          int v114 = 1;
          id v116 = objc_getProperty(v59, v115, 96LL, 1);
          id v117 = v116;
          if (v116)
          {
            uint64_t v118 = *((void *)v116 + 4);
            if (v118)
            {
              if (v118 != 1)
              {
                if (v118 == 2)
                {
                  uint64_t v119 = ASDLogHandleForCategory(25LL);
                  __int128 v120 = (os_log_s *)objc_claimAutoreleasedReturnValue(v119);
                  if (os_log_type_enabled(v120, OS_LOG_TYPE_ERROR))
                  {
                    unint64_t v183 = sub_100323C54(v94);
                    id v184 = (void *)objc_claimAutoreleasedReturnValue(v183);
                    id v186 = objc_getProperty(v117, v185, 16LL, 1);
                    *(_DWORD *)__int128 buf = 138412546;
                    *(void *)&uint8_t buf[4] = v184;
                    *(_WORD *)&buf[12] = 2114;
                    *(void *)&buf[14] = v186;
                    _os_log_error_impl( (void *)&_mh_execute_header,  v120,  OS_LOG_TYPE_ERROR,  "[%@] Purchase import failed: %{public}@",  buf,  0x16u);
                  }

                  uint64_t v121 = *(void **)(a1 + 40);
                  id v123 = (id *)objc_getProperty(v117, v122, 24LL, 1);
                  id v125 = v123;
                  if (v123)
                  {
                    *(void *)__int128 buf = 0LL;
                    *(void *)&uint8_t buf[8] = 0LL;
                    [v123 getUUIDBytes:buf];
                    uint64_t v126 = *(void *)buf;
                  }

                  else
                  {
                    uint64_t v126 = 0LL;
                  }

                  id v189 = v117;
                  if (v3) {
                    id v127 = objc_getProperty(self, v124, 96LL, 1);
                  }
                  else {
                    id v127 = 0LL;
                  }
                  id v128 = v127;
                  id v129 = (void *)objc_claimAutoreleasedReturnValue( +[ASDJobResult resultWithInvalidActivity:bundleID:]( &OBJC_CLASS___ASDJobResult,  "resultWithInvalidActivity:bundleID:",  v126,  v128));
                  [v121 addObject:v129];

                  int v19 = v194;
                  goto LABEL_142;
                }

LABEL_132:
                if ([*(id *)(*(void *)(a1 + 32) + 56) isDiscretionary])
                {
LABEL_143:

                  id v107 = v197;
LABEL_144:

                  goto LABEL_145;
                }

                id v167 = objc_alloc(&OBJC_CLASS___ProgressInfo);
                id v189 = v117;
                if (v3) {
                  id v168 = objc_getProperty(self, v166, 96LL, 1);
                }
                else {
                  id v168 = 0LL;
                }
                id v169 = v168;
                uint64_t v170 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 56) logKey]);
                id v125 = sub_10031EDD4((id *)&v167->super.isa, v169, 0LL, v170);

                unsigned __int8 v171 = [*(id *)(*(void *)(a1 + 32) + 56) isRemoteInstall];
                if (v125) {
                  *((_BYTE *)v125 + 64) = v171;
                }
                if (v3) {
                  id v173 = objc_getProperty(self, v172, 208LL, 1);
                }
                else {
                  id v173 = 0LL;
                }
                int v19 = v194;
                id v174 = v173;
                unint64_t v176 = v174;
                if (v125)
                {
                  objc_setProperty_atomic(v125, v175, v174, 152LL);

                  v125[18] = (id)384;
                }

                else
                {
                }

                id v177 = sub_1002B0944((uint64_t)&OBJC_CLASS___ProgressCache);
                id v128 = (id)objc_claimAutoreleasedReturnValue(v177);
                sub_1002B0A98((uint64_t)v128, v125, @"Purchase");
LABEL_142:

                id v117 = v189;
                id v4 = v192;
                goto LABEL_143;
              }

              uint64_t v141 = ASDLogHandleForCategory(25LL);
              id v142 = (os_log_s *)objc_claimAutoreleasedReturnValue(v141);
              if (os_log_type_enabled(v142, OS_LOG_TYPE_DEFAULT))
              {
                id v143 = sub_100323C54(v94);
                id v144 = (void *)objc_claimAutoreleasedReturnValue(v143);
                *(_DWORD *)__int128 buf = 138412290;
                *(void *)&uint8_t buf[4] = v144;
                _os_log_impl( (void *)&_mh_execute_header,  v142,  OS_LOG_TYPE_DEFAULT,  "[%@] Purchase import succeeded (duplicate)",  buf,  0xCu);
              }

              uint64_t v145 = *(void **)(a1 + 40);
              id v147 = objc_getProperty(v117, v146, 24LL, 1);
              id v149 = v147;
              if (v147)
              {
                *(void *)__int128 buf = 0LL;
                *(void *)&uint8_t buf[8] = 0LL;
                [v147 getUUIDBytes:buf];
                uint64_t v150 = *(void *)buf;
              }

              else
              {
                uint64_t v150 = 0LL;
              }

              __int128 v188 = v145;
              if (v3) {
                id v151 = objc_getProperty(self, v148, 96LL, 1);
              }
              else {
                id v151 = 0LL;
              }
              id v152 = v151;
              id v153 = (void *)objc_claimAutoreleasedReturnValue( +[ASDJobResult resultWithExistingActivity:bundleID:]( &OBJC_CLASS___ASDJobResult,  "resultWithExistingActivity:bundleID:",  v150,  v152));
              uint64_t v154 = v188;
LABEL_131:
              objc_msgSend(v154, "addObject:", v153, v188);

              id v4 = v192;
              int v19 = v194;
              goto LABEL_132;
            }

            int v114 = 0;
          }
        }

        else
        {
          [v113 runSubTask:0 returningError:0];
          id v117 = 0LL;
          int v114 = 1;
        }

        uint64_t v130 = ASDLogHandleForCategory(25LL);
        id v131 = (os_log_s *)objc_claimAutoreleasedReturnValue(v130);
        if (os_log_type_enabled(v131, OS_LOG_TYPE_DEFAULT))
        {
          double v132 = sub_100323C54(v94);
          id v133 = (void *)objc_claimAutoreleasedReturnValue(v132);
          *(_DWORD *)__int128 buf = 138412290;
          *(void *)&uint8_t buf[4] = v133;
          _os_log_impl( (void *)&_mh_execute_header,  v131,  OS_LOG_TYPE_DEFAULT,  "[%@] Purchase import succeeded",  buf,  0xCu);
        }

        uint64_t v134 = *(void *)(a1 + 32);
        uint64_t v135 = v94;
        id v117 = v117;
        if (v134)
        {
          if ([*(id *)(v134 + 56) disableBoosting])
          {
            uint64_t v137 = ASDLogHandleForCategory(25LL);
            id v138 = (os_log_s *)objc_claimAutoreleasedReturnValue(v137);
            if (os_log_type_enabled(v138, OS_LOG_TYPE_DEBUG))
            {
              uint64_t v139 = sub_100323C54(v135);
              id v140 = (void *)objc_claimAutoreleasedReturnValue(v139);
              *(_DWORD *)__int128 buf = 138412290;
              *(void *)&uint8_t buf[4] = v140;
              _os_log_debug_impl( (void *)&_mh_execute_header,  v138,  OS_LOG_TYPE_DEBUG,  "[%@] Blocking voucher for purchase - boosting disabled",  buf,  0xCu);
            }
          }

          else
          {
            id v190 = v135;
            if ((v114 & 1) != 0) {
              id v155 = 0LL;
            }
            else {
              id v155 = objc_getProperty(v117, v136, 24LL, 1);
            }
            id v138 = (os_log_s *)v155;
            id v156 = (id)objc_claimAutoreleasedReturnValue([*(id *)(v134 + 56) requestToken]);
            uint64_t v158 = v156;
            if (v156) {
              id v156 = objc_getProperty(v156, v157, 64LL, 1);
            }
            id v159 = v156;

            if (v138 && v159)
            {
              id v160 = sub_1001D1304((uint64_t)&OBJC_CLASS___VoucherStore);
              uint64_t v161 = (void *)objc_claimAutoreleasedReturnValue(v160);
              sub_1001D13D0(v161, v159, v138);
            }

            uint64_t v135 = v190;
          }
        }

        id v191 = *(void **)(a1 + 40);
        if (v114)
        {
          id v149 = 0LL;
        }

        else
        {
          id v163 = objc_getProperty(v117, v162, 24LL, 1);
          id v149 = v163;
          if (v163)
          {
            *(void *)__int128 buf = 0LL;
            *(void *)&uint8_t buf[8] = 0LL;
            [v163 getUUIDBytes:buf];
            uint64_t v164 = *(void *)buf;
            if (v3)
            {
LABEL_129:
              id v165 = objc_getProperty(self, v162, 96LL, 1);
LABEL_130:
              id v152 = v165;
              id v153 = (void *)objc_claimAutoreleasedReturnValue( +[ASDJobResult resultWithValidActivity:bundleID:]( &OBJC_CLASS___ASDJobResult,  "resultWithValidActivity:bundleID:",  v164,  v152));
              uint64_t v154 = v191;
              goto LABEL_131;
            }

LABEL_165:
            id v165 = 0LL;
            goto LABEL_130;
          }
        }

        uint64_t v164 = 0LL;
        if (v3) {
          goto LABEL_129;
        }
        goto LABEL_165;
      }
    }

    else
    {
      id v65 = sub_1001E25D0(v46, (uint64_t)@"metrics_install_type");
      uint64_t v66 = (void *)objc_claimAutoreleasedReturnValue(v65);
      [*(id *)(*(void *)(a1 + 32) + 56) setMetricsType:v66];

      if (v46) {
        goto LABEL_39;
      }
    }
  }

LABEL_59:
  uint64_t v67 = ASDLogHandleForCategory(25LL);
  id v68 = (os_log_s *)objc_claimAutoreleasedReturnValue(v67);
  if (os_log_type_enabled(v68, OS_LOG_TYPE_DEFAULT))
  {
    id v69 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 56) logKey]);
    *(_DWORD *)__int128 buf = 138412546;
    *(void *)&uint8_t buf[4] = v69;
    *(_WORD *)&buf[12] = 2114;
    *(void *)&buf[14] = v38;
    _os_log_impl( (void *)&_mh_execute_header,  v68,  OS_LOG_TYPE_DEFAULT,  "[%@]: Dropping invalid purchase: %{public}@",  buf,  0x16u);
  }

  int v71 = *(void **)(a1 + 40);
  if (v19)
  {
    *(void *)__int128 buf = 0LL;
    *(void *)&uint8_t buf[8] = 0LL;
    [v19 getUUIDBytes:buf];
    uint64_t v72 = *(void *)buf;
    if (v3)
    {
LABEL_63:
      id v73 = objc_getProperty(v3, v70, 96LL, 1);
      __int128 v74 = (void *)objc_claimAutoreleasedReturnValue( +[ASDJobResult resultWithInvalidActivity:bundleID:]( &OBJC_CLASS___ASDJobResult,  "resultWithInvalidActivity:bundleID:",  v72,  v73));
      [v71 addObject:v74];

      id v76 = objc_getProperty(v3, v75, 120LL, 1);
      goto LABEL_64;
    }
  }

  else
  {
    uint64_t v72 = 0LL;
    if (v3) {
      goto LABEL_63;
    }
  }

  __int128 v187 = (void *)objc_claimAutoreleasedReturnValue( +[ASDJobResult resultWithInvalidActivity:bundleID:]( &OBJC_CLASS___ASDJobResult,  "resultWithInvalidActivity:bundleID:",  v72,  0LL));
  [v71 addObject:v187];

  id v76 = 0LL;
LABEL_64:
  id v77 = v76;

  if (v77)
  {
    __int128 v78 = objc_opt_new(&OBJC_CLASS___NSMutableDictionary);
    __int128 v79 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 56) account]);
    __int128 v80 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v79, "ams_DSID"));
    -[NSMutableDictionary setObject:forKeyedSubscript:](v78, "setObject:forKeyedSubscript:", v80, @"account_id");

    if (v3)
    {
      id v82 = objc_getProperty(v3, v81, 208LL, 1);
      -[NSMutableDictionary setObject:forKeyedSubscript:](v78, "setObject:forKeyedSubscript:", v82, @"item_id");

      id v84 = objc_getProperty(v3, v83, 120LL, 1);
    }

    else
    {
      -[NSMutableDictionary setObject:forKeyedSubscript:](v78, "setObject:forKeyedSubscript:", 0LL, @"item_id");
      id v84 = 0LL;
    }

    id v85 = v84;
    -[NSMutableDictionary setObject:forKeyedSubscript:](v78, "setObject:forKeyedSubscript:", v85, @"request_url");

    if (v3) {
      id v87 = objc_getProperty(v3, v86, 304LL, 1);
    }
    else {
      id v87 = 0LL;
    }
    id v88 = v87;
    -[NSMutableDictionary setObject:forKeyedSubscript:]( v78,  "setObject:forKeyedSubscript:",  v88,  @"transaction_id");

    id v89 = sub_1002EEBC0((uint64_t)&OBJC_CLASS___AppInstallsDatabaseStore);
    __int16 v90 = (void *)objc_claimAutoreleasedReturnValue(v89);
    v201[0] = _NSConcreteStackBlock;
    v201[1] = 3221225472LL;
    v201[2] = sub_1001CE2EC;
    v201[3] = &unk_1003EA9D8;
    NSErrorUserInfoKey v202 = v78;
    __int128 v91 = v78;
    [v90 modifyUsingTransaction:v201];
  }

  uint64_t v92 = objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 56) coordinator]);
  __int16 v94 = (void *)v92;
  if (v92)
  {
    if (sub_1001E4C1C(v92, v93) == 1)
    {
      id v95 = (void *)objc_claimAutoreleasedReturnValue([v38 domain]);
      unsigned int v96 = [v95 isEqualToString:IXUserPresentableErrorDomain];

      if (v96) {
        uint64_t v97 = (uint64_t)[v38 code];
      }
      else {
        uint64_t v97 = 2LL;
      }
      char v98 = v193;
      uint64_t v99 = IXCreateUserPresentableError(v97, 0LL, v38);
      id v59 = (_BYTE *)objc_claimAutoreleasedReturnValue(v99);
      if (v3) {
        id v101 = objc_getProperty(v3, v100, 216LL, 1);
      }
      else {
        id v101 = 0LL;
      }
      id v102 = v101;
      if (!v102) {
        char v98 = 1;
      }

      if ((v98 & 1) == 0)
      {
        if (v3) {
          id v104 = objc_getProperty(v3, v103, 216LL, 1);
        }
        else {
          id v104 = 0LL;
        }
        id v105 = v104;
        IXDisplayUserPresentableErrorForAppWithLocalizedName(v105, [v59 code]);
      }
    }

    else
    {
      id v59 = v38;
    }

    id v200 = 0LL;
    unsigned __int8 v106 = [v94 cancelForReason:v59 client:1 error:&v200];
    id v107 = v200;
    if ((v106 & 1) == 0)
    {
      id v108 = v19;
      uint64_t v109 = ASDLogHandleForCategory(25LL);
      uint64_t v110 = (os_log_s *)objc_claimAutoreleasedReturnValue(v109);
      if (os_log_type_enabled(v110, OS_LOG_TYPE_ERROR))
      {
        id v178 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 56) logKey]);
        *(_DWORD *)__int128 buf = 138412802;
        *(void *)&uint8_t buf[4] = v178;
        *(_WORD *)&buf[12] = 2114;
        *(void *)&buf[14] = v94;
        __int16 v205 = 2114;
        id v206 = v107;
        _os_log_error_impl( (void *)&_mh_execute_header,  v110,  OS_LOG_TYPE_ERROR,  "[%@]: Canceling redundant coordinator: %{public}@ failed with error: %{public}@",  buf,  0x20u);
      }

      int v19 = v108;
    }

    goto LABEL_144;
  }

LABEL_145:
}

BOOL sub_1001CE2EC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc(&OBJC_CLASS___AppDoneEntity);
  uint64_t v5 = *(void *)(a1 + 32);
  id v6 = (void *)objc_claimAutoreleasedReturnValue([v3 connection]);
  id v7 = -[SQLiteEntity initWithPropertyValues:onConnection:](v4, "initWithPropertyValues:onConnection:", v5, v6);

  if (v7)
  {
    if (v3)
    {
      id v9 = objc_getProperty(v3, v8, 24LL, 1);
      if (v9) {
        v9[137] = 1;
      }
    }

    else
    {
      id v9 = 0LL;
    }
  }

  return v7 != 0LL;
}

id sub_1001CE3A4(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  if ((a2 & 1) == 0)
  {
    id v6 = sub_100323CB4(*(void **)(a1 + 32));
    id v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
    id v8 = sub_1002E6214((uint64_t)v7);
    id v9 = (void *)objc_claimAutoreleasedReturnValue(v8);

    if (v9)
    {
      sub_1002E62D4((uint64_t)v5, v9);
    }
  }

  if ([*(id *)(*(void *)(a1 + 40) + 56) discoveredUpdate]
    && [*(id *)(*(void *)(a1 + 40) + 56) isDiscretionary])
  {
    sub_1002E6510((uint64_t)v5, 1LL);
  }

  return v5;
}

id *sub_1001CE4B0(id *a1, void *a2, void *a3)
{
  id v6 = a2;
  id v7 = a3;
  if (a1)
  {
    v10.receiver = a1;
    v10.super_class = (Class)&OBJC_CLASS___IAPInfoItemsRequest;
    id v8 = (id *)objc_msgSendSuper2(&v10, "init");
    a1 = v8;
    if (v8)
    {
      objc_storeStrong(v8 + 1, a2);
      objc_storeStrong(a1 + 2, a3);
    }
  }

  return a1;
}

void sub_1001CE558(uint64_t a1, void *a2)
{
  id v4 = a2;
  if (!a1) {
    goto LABEL_35;
  }
  id Property = *(id *)(a1 + 16);
  if (Property) {
    id Property = objc_getProperty(Property, v3, 8LL, 1);
  }
  id v6 = Property;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "ams_DSID"));

  if (!v7)
  {
    id v20 = sub_1001861DC(4LL, 0LL);
    id v21 = (void *)objc_claimAutoreleasedReturnValue(v20);
    v4[2](v4, 0LL, v21);

    goto LABEL_35;
  }

  uint64_t v8 = *(void *)(a1 + 8);
  id v54 = 0LL;
  id v9 = sub_100255E30(v8, (uint64_t)@"iap-daap/base-url", &v54);
  objc_super v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
  id v11 = v54;
  uint64_t v12 = v11;
  if (!v10)
  {
    id v16 = v11;
    goto LABEL_12;
  }

  uint64_t v13 = *(void *)(a1 + 8);
  id v53 = v12;
  id v14 = sub_10025621C(v13, (uint64_t)@"iap-daap/database-id", &off_10040C2E0, &v53);
  os_signpost_id_t v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
  id v16 = v53;

  if (!v15)
  {

    goto LABEL_12;
  }

  id v17 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( NSString,  "stringWithFormat:",  @"databases/%ld/items",  [v15 integerValue]));
  uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue([v10 URLByAppendingPathComponent:v17]);

  if (!v18)
  {
LABEL_12:
    uint64_t v22 = ASDLogHandleForCategory(14LL);
    id v23 = (os_log_s *)objc_claimAutoreleasedReturnValue(v22);
    if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
    {
      uint64_t v49 = (void *)objc_opt_class(a1, v24);
      *(_DWORD *)__int128 buf = 138412546;
      id v56 = v49;
      __int16 v57 = 2114;
      id v58 = v16;
      id v50 = v49;
      _os_log_error_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_ERROR,  "[%@]: Failed to construct request URL error: %{public}@",  buf,  0x16u);
    }

    id v25 = sub_1001861DC(2LL, (uint64_t)v16);
    id v19 = (id)objc_claimAutoreleasedReturnValue(v25);
    uint64_t v18 = 0LL;
    goto LABEL_15;
  }

  id v19 = 0LL;
LABEL_15:

  id v26 = v19;
  if (v18)
  {
    id v28 = objc_alloc(&OBJC_CLASS___IAPInfoDAAPRequestEncoder);
    id v29 = *(id *)(a1 + 16);
    if (v29) {
      id v29 = objc_getProperty(v29, v27, 32LL, 1);
    }
    id v31 = v29;
    id v32 = *(id *)(a1 + 16);
    if (v32) {
      id v32 = objc_getProperty(v32, v30, 40LL, 1);
    }
    id v33 = v32;
    uint64_t v34 = sub_1002534D8((id *)&v28->super.isa, v31, v33);

    __int16 v36 = sub_1002AF430((id *)objc_alloc(&OBJC_CLASS___DAAPURLRequest), v34, v18);
    id v37 = *(id *)(a1 + 16);
    if (v37) {
      id v37 = objc_getProperty(v37, v35, 8LL, 1);
    }
    id v39 = v37;
    if (v36) {
      objc_setProperty_atomic(v36, v38, v39, 24LL);
    }

    id v41 = *(id *)(a1 + 16);
    if (v41) {
      id v41 = objc_getProperty(v41, v40, 16LL, 1);
    }
    id v43 = v41;
    if (v36) {
      objc_setProperty_atomic(v36, v42, v43, 40LL);
    }

    id v45 = *(id *)(a1 + 16);
    if (v45) {
      id v45 = objc_getProperty(v45, v44, 24LL, 1);
    }
    id v47 = v45;
    if (v36) {
      objc_setProperty_atomic(v36, v46, v47, 48LL);
    }

    v51[0] = _NSConcreteStackBlock;
    v51[1] = 3221225472LL;
    v51[2] = sub_1001CE970;
    v51[3] = &unk_1003EB8D0;
    v51[4] = a1;
    id v52 = v4;
    sub_1002AF4C8((uint64_t)v36, v51);
  }

  else
  {
    id v48 = sub_1001861DC(2LL, (uint64_t)v26);
    uint64_t v34 = (id *)objc_claimAutoreleasedReturnValue(v48);
    v4[2](v4, 0LL, v34);
  }

LABEL_35:
}

void sub_1001CE970(uint64_t a1, void *a2, void *a3)
{
  id v33 = a2;
  id v5 = a3;
  uint64_t v6 = (uint64_t)v33;
  if (!v33)
  {
    uint64_t v7 = *(void *)(a1 + 40);
    uint64_t v8 = (uint64_t)v5;
    goto LABEL_5;
  }

  if ((char *)[v33 responseStatusCode] - 300 > (char *)0xFFFFFFFFFFFFFF9BLL)
  {
    id v11 = (void *)objc_claimAutoreleasedReturnValue([v33 data]);
    objc_super v10 = v11;
    if (!v11)
    {
      uint64_t v17 = *(void *)(a1 + 40);
      id v18 = sub_1001861DC(0LL, 0LL);
      id v19 = (id *)objc_claimAutoreleasedReturnValue(v18);
      (*(void (**)(uint64_t, void, id *))(v17 + 16))(v17, 0LL, v19);
LABEL_24:

      goto LABEL_25;
    }

    uint64_t v12 = *(void *)(a1 + 32);
    if (v12)
    {
      id v13 = v11;
      id v14 = sub_100299040(objc_alloc(&OBJC_CLASS___IAPInfoDAAPResponseDecoder), v13);

      if (v14 && (v14[49] & 1) != 0)
      {
        char v20 = v14[50];
        id v22 = objc_getProperty(v14, v15, 64LL, 1);
        if ((v20 & 1) != 0)
        {
          id v24 = objc_getProperty(v14, v21, 72LL, 1);
          id v26 = objc_getProperty(v14, v27, 56LL, 1);
          id Property = *(id *)(v12 + 16);
          if (Property) {
            id Property = objc_getProperty(Property, v28, 8LL, 1);
          }
          id v30 = Property;
          id v19 = sub_1001A4B48((uint64_t)&OBJC_CLASS___IAPInfoItemsRequestResponse, v22, v24, v26, v30);
        }

        else
        {
          id v24 = objc_getProperty(v14, v21, 56LL, 1);
          id v25 = *(id *)(v12 + 16);
          if (v25) {
            id v25 = objc_getProperty(v25, v23, 8LL, 1);
          }
          id v26 = v25;
          id v19 = sub_1001A49D0((uint64_t)&OBJC_CLASS___IAPInfoItemsRequestResponse, v22, v24, v26);
        }

        uint64_t v16 = *(void *)(a1 + 40);
        if (v19)
        {
          (*(void (**)(uint64_t, id *, void))(v16 + 16))(v16, v19, 0LL);
          goto LABEL_24;
        }

        goto LABEL_23;
      }
    }

    uint64_t v16 = *(void *)(a1 + 40);
LABEL_23:
    id v31 = sub_1001861DC(0LL, 0LL);
    id v32 = (void *)objc_claimAutoreleasedReturnValue(v31);
    (*(void (**)(uint64_t, void, void *))(v16 + 16))(v16, 0LL, v32);

    id v19 = 0LL;
    goto LABEL_24;
  }

  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t v6 = 1LL;
  uint64_t v8 = 0LL;
LABEL_5:
  id v9 = sub_1001861DC(v6, v8);
  objc_super v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
  (*(void (**)(uint64_t, void, void *))(v7 + 16))(v7, 0LL, v10);
LABEL_25:
}

void sub_1001CECEC(id a1, int64_t a2, int64_t *a3, id *a4)
{
  if (a2)
  {
    if (a2 == 13001)
    {
      id v4 = &stru_1003EB950;
      int64_t v5 = 13002LL;
    }

    else
    {
      if (a2 != 13000) {
        return;
      }
      id v4 = &stru_1003EB930;
      int64_t v5 = 13001LL;
    }
  }

  else
  {
    id v4 = &stru_1003EB910;
    int64_t v5 = 13003LL;
  }

  *a3 = v5;
  id v6 = *a4;
  *a4 = v4;
}

void sub_1001CED48(id a1, SQLiteDatabaseStoreMigrator *a2)
{
  id v2 = a2;
  if (v2)
  {
    sub_1002E981C( (uint64_t)v2,  @"CREATE TABLE IF NOT EXISTS iap_info_iaps (adam_id INTEGER, app_adam_id INTEGER, purchase_date DATETIME, last_modified_date DATETIME, expiration_date DATETIME, type INTEGER, dsid INTEGER, pid INTEGER PRIMARY KEY, intro_offer_status INTEGER, sub_family_id TEXT, auto_renew_status INTEGER, UNIQUE(dsid, adam_id) ON CONFLICT REPLACE);",
      1,
      0LL);
    sub_1002E981C( (uint64_t)v2,  @"CREATE TABLE IF NOT EXISTS iap_info_db_properties (key TEXT PRIMARY KEY, value TEXT)",  1,  0LL);
  }
}

void sub_1001CEDA4(id a1, SQLiteDatabaseStoreMigrator *a2)
{
  if (a2) {
    sub_1002E981C((uint64_t)a2, @"ALTER TABLE iap_info_iaps ADD COLUMN auto_renew_status INTEGER;", 1, 0LL);
  }
}

void sub_1001CEEC0(uint64_t a1, void *a2, void *a3, void *a4, void *a5, void *a6)
{
  id v10 = a2;
  id v11 = a3;
  id v35 = a4;
  id v33 = a5;
  uint64_t v32 = objc_opt_self(a1);
  uint64_t v12 = objc_opt_new(&OBJC_CLASS___NSMutableArray);
  id v13 = objc_opt_new(&OBJC_CLASS___NSMutableDictionary);
  __int128 v51 = 0u;
  __int128 v52 = 0u;
  __int128 v53 = 0u;
  __int128 v54 = 0u;
  id v14 = v10;
  id v15 = [v14 countByEnumeratingWithState:&v51 objects:v55 count:16];
  if (v15)
  {
    uint64_t v16 = *(void *)v52;
    do
    {
      for (uint64_t i = 0LL; i != v15; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v52 != v16) {
          objc_enumerationMutation(v14);
        }
        id v18 = *(void **)(*((void *)&v51 + 1) + 8LL * (void)i);
        id v19 = (void *)objc_claimAutoreleasedReturnValue([v18 bundleID]);

        if (v19)
        {
          char v20 = (void *)objc_claimAutoreleasedReturnValue([v18 bundleID]);
          -[NSMutableArray addObject:](v12, "addObject:", v20);

          id v21 = (void *)objc_claimAutoreleasedReturnValue([v18 itemID]);
          id v22 = (void *)objc_claimAutoreleasedReturnValue([v18 bundleID]);
          -[NSMutableDictionary setObject:forKeyedSubscript:](v13, "setObject:forKeyedSubscript:", v21, v22);
        }

        [v18 setBatchLogKey:v11];
        [v18 updateGeneratedProperties];
      }

      id v15 = [v14 countByEnumeratingWithState:&v51 objects:v55 count:16];
    }

    while (v15);
  }

  id v23 = sub_100237D18((uint64_t)&OBJC_CLASS___AppUpdatesDatabaseStore);
  id v24 = (void *)objc_claimAutoreleasedReturnValue(v23);
  sub_10023891C((BOOL)v24, 3LL, v12, v11);

  uint64_t v45 = 0LL;
  id v46 = &v45;
  uint64_t v47 = 0x3032000000LL;
  id v48 = sub_1001CF260;
  uint64_t v49 = sub_1001CF270;
  id v50 = 0LL;
  v44[0] = 0LL;
  v44[1] = v44;
  v44[2] = 0x2020000000LL;
  v44[3] = 0LL;
  dispatch_semaphore_t v25 = dispatch_semaphore_create(0LL);
  id v26 = sub_1001995C0((uint64_t)&OBJC_CLASS___PurchaseManager);
  SEL v27 = (void *)objc_claimAutoreleasedReturnValue(v26);
  v36[0] = _NSConcreteStackBlock;
  v36[1] = 3221225472LL;
  void v36[2] = sub_1001CF278;
  void v36[3] = &unk_1003EB978;
  id v41 = v44;
  id v28 = v11;
  id v37 = v28;
  uint64_t v43 = v32;
  id v29 = v13;
  id v38 = v29;
  id v30 = v33;
  id v39 = v30;
  uint64_t v42 = &v45;
  id v31 = v25;
  SEL v40 = v31;
  sub_100199D08((uint64_t)v27, v14, v35, v36);

  dispatch_semaphore_wait(v31, 0xFFFFFFFFFFFFFFFFLL);
  if (a6) {
    *a6 = (id) v46[5];
  }

  _Block_object_dispose(v44, 8);
  _Block_object_dispose(&v45, 8);
}

void sub_1001CF234( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, char a25, uint64_t a26, uint64_t a27, uint64_t a28, char a29)
{
}

uint64_t sub_1001CF260(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1001CF270(uint64_t a1)
{
}

void sub_1001CF278(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  __int128 v63 = 0u;
  __int128 v64 = 0u;
  __int128 v65 = 0u;
  __int128 v66 = 0u;
  id v50 = v5;
  id obj = (id)objc_claimAutoreleasedReturnValue([v5 items]);
  id v53 = [obj countByEnumeratingWithState:&v63 objects:v68 count:16];
  if (v53)
  {
    uint64_t v52 = *(void *)v64;
    do
    {
      uint64_t v7 = 0LL;
      do
      {
        if (*(void *)v64 != v52) {
          objc_enumerationMutation(obj);
        }
        uint64_t v8 = *(void **)(*((void *)&v63 + 1) + 8LL * (void)v7);
        id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 results]);
        if ([v9 count])
        {
          id v55 = v7;
          id v56 = v6;
          __int128 v61 = 0u;
          __int128 v62 = 0u;
          __int128 v59 = 0u;
          __int128 v60 = 0u;
          __int128 v54 = v9;
          id v10 = v9;
          id v11 = [v10 countByEnumeratingWithState:&v59 objects:v67 count:16];
          if (!v11) {
            goto LABEL_39;
          }
          id v12 = v11;
          uint64_t v13 = *(void *)v60;
          id v58 = v10;
          while (1)
          {
            for (uint64_t i = 0LL; i != v12; uint64_t i = (char *)i + 1)
            {
              if (*(void *)v60 != v13) {
                objc_enumerationMutation(v10);
              }
              id v15 = *(void **)(*((void *)&v59 + 1) + 8LL * (void)i);
              id v16 = [v15 status];
              if (v16)
              {
                if (v16 == (id)1)
                {
                  uint64_t v34 = ASDLogHandleForCategory(40LL);
                  uint64_t v17 = (os_log_s *)objc_claimAutoreleasedReturnValue(v34);
                  if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
                  {
                    uint64_t v35 = *(void *)(a1 + 32);
                    __int16 v36 = (os_log_s *)objc_claimAutoreleasedReturnValue([v15 bundleID]);
                    id v37 = (os_log_s *)objc_claimAutoreleasedReturnValue([v15 error]);
                    *(_DWORD *)__int128 buf = 138412802;
                    *(void *)&uint8_t buf[4] = v35;
                    __int16 v70 = 2114;
                    int v71 = v36;
                    __int16 v72 = 2114;
                    id v73 = v37;
                    _os_log_error_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_ERROR,  "[%@] Import failed for bundleID: %{public}@ error: %{public}@",  buf,  0x20u);
LABEL_27:
                  }
                }

                else
                {
                  if (v16 != (id)2) {
                    continue;
                  }
                  ++*(void *)(*(void *)(*(void *)(a1 + 64) + 8LL) + 24LL);
                  uint64_t v17 = (os_log_s *)objc_claimAutoreleasedReturnValue([v15 bundleID]);
                  uint64_t v18 = ASDLogHandleForCategory(40LL);
                  id v19 = (os_log_s *)objc_claimAutoreleasedReturnValue(v18);
                  if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
                  {
                    uint64_t v20 = *(void *)(a1 + 32);
                    id v21 = (os_log_s *)objc_claimAutoreleasedReturnValue([v15 persistentID]);
                    *(_DWORD *)__int128 buf = 138412802;
                    *(void *)&uint8_t buf[4] = v20;
                    __int16 v70 = 2114;
                    int v71 = v21;
                    __int16 v72 = 2114;
                    id v73 = v17;
                    _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEFAULT,  "[%@] Import success for job: %{public}@ / %{public}@",  buf,  0x20u);
                  }

                  if (v17)
                  {
                    uint64_t v22 = *(void *)(a1 + 80);
                    id v23 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) objectForKeyedSubscript:v17]);
                    id v24 = *(void **)(a1 + 32);
                    uint64_t v17 = v17;
                    id v25 = v23;
                    id v26 = v24;
                    uint64_t v27 = objc_opt_self(v22);
                    if (v25)
                    {
                      uint64_t v28 = v27;
                      if (+[UpdatesManager isTVProviderApp:]( UpdatesManager,  "isTVProviderApp:",  [v25 integerValue]))
                      {
                        CFPropertyListRef v29 = sub_1002FA180((uint64_t)&OBJC_CLASS___AppDefaultsManager);
                        id v30 = (void *)objc_claimAutoreleasedReturnValue(v29);
                        id v31 = v25;
                        id v32 = v30;
                        objc_opt_self(v28);
                        if (v32)
                        {
                          else {
                            id v33 = (id)objc_claimAutoreleasedReturnValue([v32 arrayByAddingObject:v31]);
                          }
                        }

                        else
                        {
                          *(void *)__int128 buf = v31;
                          id v33 = (id)objc_claimAutoreleasedReturnValue( +[NSArray arrayWithObjects:count:]( &OBJC_CLASS___NSArray,  "arrayWithObjects:count:",  buf,  1LL));
                        }

                        SEL v40 = v33;

                        id v41 = [v32 count];
                        if (v41 != [v40 count])
                        {
                          uint64_t v42 = ASDLogHandleForCategory(40LL);
                          uint64_t v43 = (os_log_s *)objc_claimAutoreleasedReturnValue(v42);
                          if (os_log_type_enabled(v43, OS_LOG_TYPE_DEFAULT))
                          {
                            __int16 v57 = (os_log_s *)objc_claimAutoreleasedReturnValue(objc_msgSend(v40, "componentsJoinedByString:", @", "));
                            *(_DWORD *)__int128 buf = 138412802;
                            *(void *)&uint8_t buf[4] = v26;
                            __int16 v70 = 2114;
                            int v71 = v17;
                            __int16 v72 = 2114;
                            id v73 = v57;
                            _os_log_impl( (void *)&_mh_execute_header,  v43,  OS_LOG_TYPE_DEFAULT,  "[%@] Added : %{public}@ to previously provisioned apps: [%{public}@]",  buf,  0x20u);
                          }

                          sub_1002FA3D0((uint64_t)&OBJC_CLASS___AppDefaultsManager, v40);
                        }
                      }
                    }

                    id v10 = v58;
                  }
                }
              }

              else
              {
                ++*(void *)(*(void *)(*(void *)(a1 + 64) + 8LL) + 24LL);
                uint64_t v38 = ASDLogHandleForCategory(40LL);
                uint64_t v17 = (os_log_s *)objc_claimAutoreleasedReturnValue(v38);
                if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
                {
                  uint64_t v39 = *(void *)(a1 + 32);
                  __int16 v36 = (os_log_s *)objc_claimAutoreleasedReturnValue([v15 persistentID]);
                  id v37 = (os_log_s *)objc_claimAutoreleasedReturnValue([v15 bundleID]);
                  *(_DWORD *)__int128 buf = 138412802;
                  *(void *)&uint8_t buf[4] = v39;
                  __int16 v70 = 2114;
                  int v71 = v36;
                  __int16 v72 = 2114;
                  id v73 = v37;
                  _os_log_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_DEFAULT,  "[%@] Skipped duplicate job: %{public}@ / %{public}@",  buf,  0x20u);
                  goto LABEL_27;
                }
              }
            }

            id v12 = [v10 countByEnumeratingWithState:&v59 objects:v67 count:16];
            if (!v12)
            {
LABEL_39:

              __int128 v44 = *(void **)(a1 + 48);
              if (v44) {
                [v44 addObjectsFromArray:v10];
              }
              uint64_t v7 = v55;
              id v6 = v56;
              id v9 = v54;
              if (v56) {
                goto LABEL_42;
              }
              goto LABEL_43;
            }
          }
        }

        if (!v6) {
          id v6 = (id)objc_claimAutoreleasedReturnValue([v8 error]);
        }
        uint64_t v45 = ASDLogHandleForCategory(40LL);
        id v46 = (os_log_s *)objc_claimAutoreleasedReturnValue(v45);
        if (os_log_type_enabled(v46, OS_LOG_TYPE_ERROR))
        {
          uint64_t v47 = *(void *)(a1 + 32);
          id v48 = (os_log_s *)objc_claimAutoreleasedReturnValue([v8 bundleID]);
          *(_DWORD *)__int128 buf = 138412802;
          *(void *)&uint8_t buf[4] = v47;
          __int16 v70 = 2114;
          int v71 = v48;
          __int16 v72 = 2114;
          id v73 = (os_log_s *)v6;
          _os_log_error_impl( (void *)&_mh_execute_header,  v46,  OS_LOG_TYPE_ERROR,  "[%@] Purchase failed for bundleID: %{public}@ error: %{public}@",  buf,  0x20u);
        }

        if (v6) {
LABEL_42:
        }
          objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 72) + 8LL) + 40LL), v6);
LABEL_43:

        uint64_t v7 = (char *)v7 + 1;
      }

      while (v7 != v53);
      id v49 = [obj countByEnumeratingWithState:&v63 objects:v68 count:16];
      id v53 = v49;
    }

    while (v49);
  }

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 56));
}

uint64_t sub_1001CF92C(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    if (*(_DWORD *)(result + 56))
    {
      uint64_t v2 = ASDLogHandleForCategory(40LL);
      id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
      if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
      {
        id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(v1 + 64) logKey]);
        int v5 = *(_DWORD *)(v1 + 56);
        int v6 = 138412546;
        uint64_t v7 = v4;
        __int16 v8 = 1024;
        int v9 = v5;
        _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "[%@] Releasing power assertion: %d",  (uint8_t *)&v6,  0x12u);
      }

      uint64_t result = IOPMAssertionRelease(*(_DWORD *)(v1 + 56));
      *(_DWORD *)(v1 + 56) = 0;
    }
  }

  return result;
}

void sub_1001D0718( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, char a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,char a51,uint64_t a52,uint64_t a53,uint64_t a54,char a55)
{
}

void sub_1001D0774(uint64_t a1, void *a2)
{
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  void v5[2] = sub_1001D0804;
  _DWORD v5[3] = &unk_1003EB9A0;
  id v6 = *(id *)(a1 + 32);
  id v4 = *(id *)(a1 + 40);
  id v7 = v4;
  if (a2)
  {
    sub_10031FE08(a2, 0LL, v5);
    id v4 = v7;
  }
}

void sub_1001D0804(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (id)objc_claimAutoreleasedReturnValue([v3 bundleID]);
  [*(id *)(a1 + 32) setObject:v3 forKeyedSubscript:v4];

  [*(id *)(a1 + 40) addObject:v4];
}

void sub_1001D0860(uint64_t a1, id a2)
{
  id v3 = sub_100304700(a2, *(void **)(a1 + 32));
  id v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  if (v4)
  {
    id v9 = v4;
    int v5 = sub_10021B614(v4);
    uint64_t v6 = objc_claimAutoreleasedReturnValue(v5);
    uint64_t v7 = *(void *)(*(void *)(a1 + 40) + 8LL);
    __int16 v8 = *(void **)(v7 + 40);
    *(void *)(v7 + 40) = v6;

    *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = 1;
    *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = [v9 persistentID];
    id v4 = v9;
  }
}

uint64_t sub_1001D08E4(uint64_t a1, uint64_t a2)
{
  return 1LL;
}

void sub_1001D0910(uint64_t a1, void *a2, void *a3)
{
  id v53 = a2;
  id v45 = a3;
  id v4 = sub_1002B8990(v45, 5uLL);
  __int128 v67 = 0u;
  __int128 v68 = 0u;
  __int128 v65 = 0u;
  __int128 v66 = 0u;
  id obj = (id)objc_claimAutoreleasedReturnValue(v4);
  id v50 = [obj countByEnumeratingWithState:&v65 objects:v75 count:16];
  id v5 = obj;
  if (v50)
  {
    id v5 = 0LL;
    uint64_t v48 = *(void *)v66;
    while (1)
    {
      uint64_t v52 = 0LL;
      do
      {
        if (*(void *)v66 != v48) {
          objc_enumerationMutation(obj);
        }
        uint64_t v6 = *(void **)(*((void *)&v65 + 1) + 8LL * (void)v52);
        if (!v5)
        {
          uint64_t v16 = *(void *)(a1 + 32);
          id v51 = v6;
          id v17 = v53;
          uint64_t v47 = v17;
          if (v16)
          {
            if ([v17 isEqualToNumber:&off_10040C2F8])
            {
              __int128 v72 = 0u;
              __int128 v73 = 0u;
              __int128 v70 = 0u;
              __int128 v71 = 0u;
              id v54 = v51;
              id v18 = [v54 countByEnumeratingWithState:&v70 objects:location count:16];
              if (v18)
              {
                uint64_t v19 = *(void *)v71;
                do
                {
                  for (uint64_t i = 0LL; i != v18; uint64_t i = (char *)i + 1)
                  {
                    if (*(void *)v71 != v19) {
                      objc_enumerationMutation(v54);
                    }
                    uint64_t v82 = *(void *)(*((void *)&v70 + 1) + 8LL * (void)i);
                    id v21 = (void *)objc_claimAutoreleasedReturnValue( +[NSArray arrayWithObjects:count:]( &OBJC_CLASS___NSArray,  "arrayWithObjects:count:",  &v82,  1LL));
                    uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue([(id)v16 context]);
                    id v23 = (void *)objc_claimAutoreleasedReturnValue([v22 logKey]);
                    [*(id *)(v16 + 64) isBackgroundRequest];
                    id v24 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(v16 + 64) requestToken]);
                    id v25 = *(void **)(v16 + 48);
                    id v69 = 0LL;
                    sub_1001CEEC0((uint64_t)&OBJC_CLASS___PerformUpdatesTask, v21, v23, v24, v25, &v69);
                    id v26 = v69;

                    if (v26)
                    {
                      uint64_t v27 = ASDLogHandleForCategory(40LL);
                      uint64_t v28 = (os_log_s *)objc_claimAutoreleasedReturnValue(v27);
                      if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
                      {
                        CFPropertyListRef v29 = (void *)objc_claimAutoreleasedReturnValue([(id)v16 context]);
                        id v30 = (void *)objc_claimAutoreleasedReturnValue([v29 logKey]);
                        *(_DWORD *)__int128 buf = 138412802;
                        id v77 = v30;
                        __int16 v78 = 2114;
                        id v79 = v53;
                        __int16 v80 = 2114;
                        id v81 = v26;
                        _os_log_error_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_ERROR,  "[%@] Error performing purchase for account: %{public}@ error: %{public}@",  buf,  0x20u);
                      }
                    }

                    sub_1001D114C((id *)v16);
                  }

                  id v18 = [v54 countByEnumeratingWithState:&v70 objects:location count:16];
                }

                while (v18);
              }

              goto LABEL_36;
            }

            uint64_t v31 = ASDLogHandleForCategory(40LL);
            id v32 = (os_log_s *)objc_claimAutoreleasedReturnValue(v31);
            if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
            {
              id v33 = (void *)objc_claimAutoreleasedReturnValue([(id)v16 context]);
              uint64_t v34 = (void *)objc_claimAutoreleasedReturnValue([v33 logKey]);
              id v35 = [v51 count];
              *(_DWORD *)location = 138412802;
              *(void *)&location[4] = v34;
              __int16 v84 = 2048;
              id v85 = v35;
              __int16 v86 = 2114;
              id v87 = v53;
              _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_DEFAULT,  "[%@] Performing %lu purchase(s) for account: %{public}@",  location,  0x20u);
            }

            __int16 v36 = (void *)objc_claimAutoreleasedReturnValue([(id)v16 context]);
            id v37 = (void *)objc_claimAutoreleasedReturnValue([v36 logKey]);
            [*(id *)(v16 + 64) isBackgroundRequest];
            uint64_t v38 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(v16 + 64) requestToken]);
            uint64_t v39 = *(void **)(v16 + 48);
            *(void *)&__int128 v70 = 0LL;
            sub_1001CEEC0((uint64_t)&OBJC_CLASS___PerformUpdatesTask, v51, v37, v38, v39, &v70);
            id v18 = (id)v70;

            if (v18)
            {
              uint64_t v40 = ASDLogHandleForCategory(40LL);
              id v54 = (id)objc_claimAutoreleasedReturnValue(v40);
              if (os_log_type_enabled((os_log_t)v54, OS_LOG_TYPE_ERROR))
              {
                uint64_t v42 = (void *)objc_claimAutoreleasedReturnValue([(id)v16 context]);
                uint64_t v43 = (void *)objc_claimAutoreleasedReturnValue([v42 logKey]);
                *(_DWORD *)location = 138412802;
                *(void *)&location[4] = v43;
                __int16 v84 = 2114;
                id v85 = v53;
                __int16 v86 = 2114;
                id v87 = v18;
                _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)v54,  OS_LOG_TYPE_ERROR,  "[%@] Error performing purchases for account: %{public}@ error: %{public}@",  location,  0x20u);
              }

void sub_1001D102C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id *location)
{
}

void sub_1001D105C(uint64_t a1)
{
  uint64_t v2 = ASDLogHandleForCategory(40LL);
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    id v5 = (void *)objc_claimAutoreleasedReturnValue([WeakRetained context]);
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v5 logKey]);
    int v7 = 138412290;
    __int16 v8 = v6;
    _os_log_debug_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEBUG,  "[%@] Finished failing purchase batch",  (uint8_t *)&v7,  0xCu);
  }
}

void sub_1001D113C(uint64_t a1)
{
}

id *sub_1001D114C(id *result)
{
  if (*((_DWORD *)result + 14))
  {
    uint64_t v1 = result;
    uint64_t result = (id *)[result[8] isBackgroundRequest];
  }

  return result;
}

id sub_1001D1304(uint64_t a1)
{
  if (qword_100462200 != -1) {
    dispatch_once(&qword_100462200, &stru_1003EBAD0);
  }
  return (id)qword_100462208;
}

void sub_1001D1348(id a1)
{
  uint64_t v1 = objc_alloc_init(&OBJC_CLASS___VoucherStore);
  uint64_t v2 = (void *)qword_100462208;
  qword_100462208 = (uint64_t)v1;
}

void sub_1001D13D0(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (a1)
  {
    uint64_t v7 = ASDLogHandleForCategory(14LL);
    __int16 v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
    {
      int v10 = 138412546;
      id v11 = v6;
      __int16 v12 = 2112;
      id v13 = v5;
      _os_log_debug_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEBUG,  "(VoucherStore) Inserting voucher externalID: %@, Voucher %@",  (uint8_t *)&v10,  0x16u);
    }

    id v9 = a1;
    objc_sync_enter(v9);
    [v9[1] setObject:v5 forKeyedSubscript:v6];
    objc_sync_exit(v9);
  }
}

void sub_1001D14D4(_Unwind_Exception *a1)
{
}

void sub_1001D14F0(void *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    uint64_t v4 = ASDLogHandleForCategory(14LL);
    id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
    {
      int v7 = 138412290;
      id v8 = v3;
      _os_log_debug_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "(VoucherStore) Removing voucher for externalID: %@",  (uint8_t *)&v7,  0xCu);
    }

    id v6 = a1;
    objc_sync_enter(v6);
    [v6[1] setObject:0 forKeyedSubscript:v3];
    objc_sync_exit(v6);
  }
}

void sub_1001D15D8(_Unwind_Exception *a1)
{
}

void sub_1001D15F4(void *a1, void *a2, uint64_t a3, void *a4)
{
  id v7 = a2;
  id v8 = a4;
  if (a1)
  {
    id v9 = a1;
    objc_sync_enter(v9);
    int v10 = (void *)objc_claimAutoreleasedReturnValue([v9[1] objectForKeyedSubscript:v7]);
    objc_sync_exit(v9);

    uint64_t v11 = ASDLogHandleForCategory(14LL);
    __int16 v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)__int128 buf = 138412802;
      id v17 = v7;
      __int16 v18 = 1024;
      int v19 = a3;
      __int16 v20 = 2112;
      id v21 = v10;
      _os_log_debug_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEBUG,  "(VoucherStore) Executing block for externalID: %@, QOS(0x%x) Voucher %@",  buf,  0x1Cu);
    }

    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472LL;
    void v14[2] = sub_1001D17A0;
    v14[3] = &unk_1003EA158;
    id v15 = v8;
    id v13 = (void (**)(void))dispatch_block_create_with_voucher_and_qos_class(0LL, v10, a3, 0LL, v14);
    v13[2]();
  }
}

void sub_1001D1784(_Unwind_Exception *a1)
{
}

uint64_t sub_1001D17A0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

id sub_1001D17B8(uint64_t a1)
{
  if (qword_100462218 != -1) {
    dispatch_once(&qword_100462218, &stru_1003EBAF0);
  }
  return (id)qword_100462210;
}

void sub_1001D17FC(id a1)
{
  uint64_t v1 = objc_alloc(&OBJC_CLASS___NetworkMonitor);
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[NWPathEvaluator sharedDefaultEvaluator](&OBJC_CLASS___NWPathEvaluator, "sharedDefaultEvaluator"));
  id v14 = v2;
  if (v1)
  {
    v18.receiver = v1;
    v18.super_class = (Class)&OBJC_CLASS___NetworkMonitor;
    uint64_t v1 = objc_msgSendSuper2(&v18, "init");
    if (v1)
    {
      dispatch_queue_attr_t v3 = dispatch_queue_attr_make_with_autorelease_frequency(0LL, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
      uint64_t v4 = (dispatch_queue_attr_s *)objc_claimAutoreleasedReturnValue(v3);
      dispatch_queue_global_t global_queue = dispatch_get_global_queue(17LL, 0LL);
      id v6 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
      dispatch_queue_t v7 = dispatch_queue_create_with_target_V2("com.apple.appstored.NetworkMonitor", v4, v6);
      dispatchQueue = v1->_dispatchQueue;
      v1->_dispatchQueue = (OS_dispatch_queue *)v7;

      objc_storeStrong((id *)&v1->_pathEvaluator, v2);
      -[NWPathEvaluator addObserver:forKeyPath:options:context:]( v1->_pathEvaluator,  "addObserver:forKeyPath:options:context:",  v1,  @"path",  5LL,  0LL);
      if (os_variant_has_internal_content("com.apple.appstored"))
      {
        objc_initWeak(&location, v1);
        dispatch_queue_global_t v9 = dispatch_get_global_queue(21LL, 0LL);
        int v10 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(v9);
        handler[0] = _NSConcreteStackBlock;
        handler[1] = 3221225472LL;
        handler[2] = sub_1001D1A0C;
        handler[3] = &unk_1003EBB18;
        objc_copyWeak(&v16, &location);
        notify_register_dispatch("com.apple.appstored.emulatenetwork", &v1->_emulationToken, v10, handler);

        uint64_t v11 = sub_10021D7D0((uint64_t)&OBJC_CLASS___NetworkEmulation);
        __int16 v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
        sub_1001D1A60((uint64_t)v1, v12);

        objc_destroyWeak(&v16);
        objc_destroyWeak(&location);
      }
    }
  }

  id v13 = (void *)qword_100462210;
  qword_100462210 = (uint64_t)v1;
}

void sub_1001D19D0( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

id sub_1001D19F0(uint64_t a1)
{
  return sub_1001D17B8((uint64_t)&OBJC_CLASS___NetworkMonitor);
}

void sub_1001D1A0C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v1 = sub_10021D7D0((uint64_t)&OBJC_CLASS___NetworkEmulation);
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  sub_1001D1A60((uint64_t)WeakRetained, v2);
}

void sub_1001D1A60(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = v3;
  if (a1)
  {
    id v5 = *(dispatch_queue_s **)(a1 + 8);
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472LL;
    _DWORD v6[2] = sub_1001D232C;
    v6[3] = &unk_1003E9DC0;
    void v6[4] = a1;
    id v7 = v3;
    dispatch_async(v5, v6);
  }
}

uint64_t sub_1001D1BE0(uint64_t result)
{
  *(_BYTE *)(*(void *)(*(void *)(result + 40) + 8LL) + 24LL) = *(_BYTE *)(*(void *)(result + 32) + 36LL);
  return result;
}

uint64_t sub_1001D1C84(uint64_t result)
{
  *(_BYTE *)(*(void *)(*(void *)(result + 40) + 8LL) + 24LL) = *(_BYTE *)(*(void *)(result + 32) + 37LL);
  if (*(void *)(*(void *)(result + 32) + 24LL))
  {
    uint64_t v1 = result;
    uint64_t result = os_variant_has_internal_content("com.apple.appstored");
    if ((_DWORD)result)
    {
      uint64_t v2 = *(void *)(*(void *)(v1 + 32) + 24LL);
      if (v2) {
        LOBYTE(v2) = *(_BYTE *)(v2 + 8) & 1;
      }
      *(_BYTE *)(*(void *)(*(void *)(v1 + 40) + 8LL) + 24LL) = v2;
    }
  }

  return result;
}

uint64_t sub_1001D1D7C(uint64_t result)
{
  *(_BYTE *)(*(void *)(*(void *)(result + 40) + 8LL) + 24LL) = *(_BYTE *)(*(void *)(result + 32) + 38LL);
  if (*(void *)(*(void *)(result + 32) + 24LL))
  {
    uint64_t v1 = result;
    uint64_t result = os_variant_has_internal_content("com.apple.appstored");
    if ((_DWORD)result)
    {
      uint64_t v2 = *(void *)(*(void *)(v1 + 32) + 24LL);
      if (v2) {
        LOBYTE(v2) = *(_BYTE *)(v2 + 9) & 1;
      }
      *(_BYTE *)(*(void *)(*(void *)(v1 + 40) + 8LL) + 24LL) = v2;
    }
  }

  return result;
}

uint64_t sub_1001D1E74(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(void *)(result + 32);
  if (*(_BYTE *)(v2 + 38)) {
    BOOL v3 = 1;
  }
  else {
    BOOL v3 = *(void *)(v2 + 40) == 2LL;
  }
  *(_BYTE *)(*(void *)(*(void *)(result + 40) + 8LL) + 24LL) = v3;
  if (*(void *)(*(void *)(result + 32) + 24LL))
  {
    uint64_t result = os_variant_has_internal_content("com.apple.appstored");
    if ((_DWORD)result)
    {
      uint64_t v4 = *(void *)(*(void *)(v1 + 32) + 24LL);
      if (v4) {
        LOBYTE(v4) = (*(_BYTE *)(v4 + 9) & 1) != 0 || *(void *)(v4 + 16) == 2LL;
      }
      *(_BYTE *)(*(void *)(*(void *)(v1 + 40) + 8LL) + 24LL) = v4;
    }
  }

  return result;
}

uint64_t sub_1001D1F9C(uint64_t result)
{
  *(void *)(*(void *)(*(void *)(result + 40) + 8LL) + 24LL) = *(void *)(*(void *)(result + 32) + 40LL);
  if (*(void *)(*(void *)(result + 32) + 24LL))
  {
    uint64_t v1 = result;
    uint64_t result = os_variant_has_internal_content("com.apple.appstored");
    if ((_DWORD)result)
    {
      uint64_t v2 = *(void *)(*(void *)(v1 + 32) + 24LL);
      if (v2) {
        uint64_t v2 = *(void *)(v2 + 16);
      }
      *(void *)(*(void *)(*(void *)(v1 + 40) + 8LL) + 24LL) = v2;
    }
  }

  return result;
}

void sub_1001D20C0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (v1)
  {
    id v18 = (id)objc_claimAutoreleasedReturnValue([*(id *)(v1 + 16) path]);
    dispatch_assert_queue_V2(*(dispatch_queue_t *)(v1 + 8));
    id v2 = sub_1001D2518((unsigned __int8 *)v1);
    BOOL v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
    if (((unint64_t)[v18 status] | 2) == 3)
    {
      *(_BYTE *)(v1 + 36) = 1;
      *(_BYTE *)(v1 + 3_Block_object_dispose(va, 8) = [v18 isExpensive];
      *(_BYTE *)(v1 + 37) = [v18 isConstrained];
      uint64_t v4 = sub_100231D68(v18);
    }

    else
    {
      uint64_t v4 = 0LL;
      *(_WORD *)(v1 + 36) = 0;
      *(_BYTE *)(v1 + 3_Block_object_dispose(va, 8) = 0;
    }

    *(void *)(v1 + 40) = v4;
    id v5 = sub_1001D2518((unsigned __int8 *)v1);
    id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
    unsigned int v7 = [v3 isEqual:v6];
    char v8 = v7;
    int v9 = v7 ^ 1;
    int v10 = *(unsigned __int8 *)(v1 + 36);
    uint64_t v11 = ASDLogHandleForCategory(14LL);
    __int16 v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);
    if (v10)
    {
      if (v13)
      {
        int v14 = *(unsigned __int8 *)(v1 + 38);
        int v15 = *(unsigned __int8 *)(v1 + 37);
        unint64_t v16 = *(void *)(v1 + 40);
        if (v16 >= 5) {
          id v17 = -[NSString initWithFormat:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithFormat:",  @"unknown (%ld)",  v16);
        }
        else {
          id v17 = off_1003EBB40[v16];
        }
        *(_DWORD *)__int128 buf = 67109890;
        int v20 = v14;
        __int16 v21 = 1024;
        int v22 = v15;
        __int16 v23 = 2114;
        id v24 = v17;
        __int16 v25 = 1024;
        int v26 = v9;
        _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "[Network] Network available (expensive = %{BOOL}d, constrained = %{BOOL}d, interface = %{public}@, significant = %{BOOL}d)",  buf,  0x1Eu);
      }
    }

    else if (v13)
    {
      *(_DWORD *)__int128 buf = 67109120;
      int v20 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "[Network] Network unavailable (significant = %{BOOL}d)",  buf,  8u);
    }

    if ((v8 & 1) == 0) {
      sub_1001D2454(v1);
    }
  }

void sub_1001D232C(uint64_t a1)
{
  if (os_variant_has_internal_content("com.apple.appstored"))
  {
    uint64_t v2 = *(void *)(a1 + 32);
    id v3 = *(id *)(a1 + 40);
    uint64_t v4 = *(void **)(v2 + 24);
    *(void *)(v2 + 24) = v3;
  }

  else
  {
    uint64_t v5 = *(void *)(a1 + 32);
    uint64_t v4 = *(void **)(v5 + 24);
    *(void *)(v5 + 24) = 0LL;
  }

  uint64_t v6 = *(void *)(*(void *)(a1 + 32) + 24LL);
  uint64_t v7 = ASDLogHandleForCategory(14LL);
  char v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
  BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);
  if (v6)
  {
    if (v9)
    {
      uint64_t v10 = *(void *)(*(void *)(a1 + 32) + 24LL);
      int v14 = 138543362;
      uint64_t v15 = v10;
      uint64_t v11 = "[Network] Applying emulated network configuration: %{public}@";
      __int16 v12 = v8;
      uint32_t v13 = 12;
LABEL_9:
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, v11, (uint8_t *)&v14, v13);
    }
  }

  else if (v9)
  {
    LOWORD(v14) = 0;
    uint64_t v11 = "[Network] Clearing emulated network configuration";
    __int16 v12 = v8;
    uint32_t v13 = 2;
    goto LABEL_9;
  }

  sub_1001D2454(*(void *)(a1 + 32));
}

void sub_1001D2454(uint64_t a1)
{
  if (a1)
  {
    dispatch_queue_global_t global_queue = dispatch_get_global_queue(17LL, 0LL);
    id v3 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1001D24CC;
    block[3] = &unk_1003E9880;
    void block[4] = a1;
    dispatch_async(v3, block);
  }

void sub_1001D24CC(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter"));
  [v2 postNotificationName:@"NetworkStateDidChangeNotification" object:*(void *)(a1 + 32)];
}

id sub_1001D2518(unsigned __int8 *a1)
{
  uint64_t v1 = a1[36];
  id v2 = a1;
  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", v1));
  v10[0] = v3;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", v2[38]));
  v10[1] = v4;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", v2[37]));
  void v10[2] = v5;
  uint64_t v6 = *((void *)v2 + 5);

  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", v6));
  v10[3] = v7;
  char v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v10, 4LL));

  return v8;
}

BOOL sub_1001D2660(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  uint64_t v6 = a3;
  if (a1)
  {
    unsigned int v7 = [v5 processIdentifier];
    if (v5)
    {
      [v5 auditToken];
    }

    else
    {
      __int128 v24 = 0u;
      __int128 v25 = 0u;
    }

    *(_OWORD *)audit_token_t token = v24;
    *(_OWORD *)&token[16] = v25;
    char v8 = SecTaskCreateWithAuditToken(0LL, (audit_token_t *)token);
    if (v8)
    {
      BOOL v9 = v8;
      CFErrorRef error = 0LL;
      CFTypeRef v10 = SecTaskCopyValueForEntitlement(v8, v6, &error);
      if (error && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        id v18 = (void *)objc_opt_class(a1, v11);
        *(_DWORD *)audit_token_t token = 138413058;
        *(void *)&token[4] = v18;
        *(_WORD *)&token[12] = 2112;
        *(void *)&token[14] = v6;
        *(_WORD *)&token[22] = 1024;
        *(_DWORD *)&token[24] = v7;
        *(_WORD *)&token[28] = 2112;
        *(void *)&token[30] = error;
        id v19 = v18;
        _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "[%@]: Unable to get entitlements: %@ for pid: %i error: %@",  token,  0x26u);

        if (v10) {
          goto LABEL_9;
        }
      }

      else if (v10)
      {
LABEL_9:
        CFTypeID TypeID = CFBooleanGetTypeID();
        BOOL v13 = TypeID == CFGetTypeID(v10) && CFBooleanGetValue((CFBooleanRef)v10) != 0;
        if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
        {
          unint64_t v16 = (void *)objc_opt_class(a1, v15);
          *(_DWORD *)audit_token_t token = 138413058;
          *(void *)&token[4] = v16;
          *(_WORD *)&token[12] = 2112;
          *(void *)&token[14] = v6;
          *(_WORD *)&token[22] = 1024;
          *(_DWORD *)&token[24] = v7;
          *(_WORD *)&token[28] = 1024;
          *(_DWORD *)&token[30] = v13;
          id v17 = v16;
          _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_DEFAULT,  "[%@]: We have the entitlement: %@ for pid: %i result: %d",  token,  0x22u);
        }

        CFRelease(v10);
        goto LABEL_20;
      }

      BOOL v13 = 0LL;
LABEL_20:
      CFRelease(v9);
      goto LABEL_21;
    }

    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      __int16 v21 = (void *)objc_opt_class(a1, v14);
      *(_DWORD *)audit_token_t token = 138412802;
      *(void *)&token[4] = v21;
      *(_WORD *)&token[12] = 2112;
      *(void *)&token[14] = v6;
      *(_WORD *)&token[22] = 1024;
      *(_DWORD *)&token[24] = v7;
      id v22 = v21;
      _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "[%@]: No task for entitlement: %@ pid: %i",  token,  0x1Cu);
    }
  }

  BOOL v13 = 0LL;
LABEL_21:

  return v13;
}

BOOL sub_1001D2924(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (a1)
  {
    unsigned int v7 = [v5 processIdentifier];
    if (v5)
    {
      [v5 auditToken];
    }

    else
    {
      __int128 v25 = 0u;
      __int128 v26 = 0u;
    }

    *(_OWORD *)audit_token_t token = v25;
    *(_OWORD *)&token[16] = v26;
    char v8 = SecTaskCreateWithAuditToken(0LL, (audit_token_t *)token);
    if (v8)
    {
      BOOL v9 = v8;
      CFErrorRef error = 0LL;
      CFTypeRef v10 = (void *)SecTaskCopyValueForEntitlement(v8, @"com.apple.private.appstored", &error);
      if (error && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      {
        id v19 = (void *)objc_opt_class(a1, v11);
        *(_DWORD *)audit_token_t token = 138413058;
        *(void *)&token[4] = v19;
        *(_WORD *)&token[12] = 2112;
        *(void *)&token[14] = v6;
        *(_WORD *)&token[22] = 1024;
        *(_DWORD *)&token[24] = v7;
        *(_WORD *)&token[28] = 2112;
        *(void *)&token[30] = error;
        id v20 = v19;
        _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "[%@]: Unable to get entitlements: %@ for pid: %i error: %@",  token,  0x26u);

        if (v10) {
          goto LABEL_9;
        }
      }

      else if (v10)
      {
LABEL_9:
        CFTypeID TypeID = CFArrayGetTypeID();
        if (TypeID == CFGetTypeID(v10)) {
          unsigned int v13 = [v10 containsObject:v6];
        }
        else {
          unsigned int v13 = 0;
        }
        if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
        {
          id v17 = (void *)objc_opt_class(a1, v16);
          *(_DWORD *)audit_token_t token = 138413058;
          *(void *)&token[4] = v17;
          *(_WORD *)&token[12] = 2112;
          *(void *)&token[14] = v6;
          *(_WORD *)&token[22] = 1024;
          *(_DWORD *)&token[24] = v7;
          *(_WORD *)&token[28] = 1024;
          *(_DWORD *)&token[30] = v13;
          id v18 = v17;
          _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_DEFAULT,  "[%@]: Results for entitlement: %@ for pid: %i result: %d",  token,  0x22u);
        }

        CFRelease(v10);
        goto LABEL_20;
      }

      unsigned int v13 = 0;
LABEL_20:
      CFRelease(v9);
      BOOL v15 = v13 != 0;
      goto LABEL_21;
    }

    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
    {
      id v22 = (void *)objc_opt_class(a1, v14);
      *(_DWORD *)audit_token_t token = 138412802;
      *(void *)&token[4] = v22;
      *(_WORD *)&token[12] = 2112;
      *(void *)&token[14] = v6;
      *(_WORD *)&token[22] = 1024;
      *(_DWORD *)&token[24] = v7;
      id v23 = v22;
      _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "[%@]: No task for entitlement: %@ pid: %i",  token,  0x1Cu);
    }
  }

  BOOL v15 = 0LL;
LABEL_21:

  return v15;
}

void *sub_1001D2C28(void *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    id v4 = [a1 init];
    a1 = v4;
    if (v4)
    {
      [v4 setValue:v3 forProperty:@"bundle_id"];
      id v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSUUID UUID](&OBJC_CLASS___NSUUID, "UUID"));
      id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 UUIDString]);
      [a1 setValue:v6 forProperty:@"session_reporter_key"];

      unsigned int v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
      [a1 setValue:v7 forProperty:@"last_refresh"];
    }
  }

  return a1;
}

id sub_1001D2DA0(void *a1)
{
  if (a1)
  {
    id v1 = sub_1001E26D0(a1, (uint64_t)@"bundle_id");
    a1 = (void *)objc_claimAutoreleasedReturnValue(v1);
  }

  return a1;
}

id sub_1001D2DC4(void *a1)
{
  if (a1)
  {
    id v1 = sub_1001E26D0(a1, (uint64_t)@"session_reporter_key");
    a1 = (void *)objc_claimAutoreleasedReturnValue(v1);
  }

  return a1;
}

id sub_1001D2DE8(void *a1)
{
  if (a1)
  {
    id v1 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"last_refresh"]);
    uint64_t v3 = objc_opt_class(&OBJC_CLASS___NSDate, v2);
    if ((objc_opt_isKindOfClass(v1, v3) & 1) != 0) {
      id v4 = v1;
    }
    else {
      id v4 = 0LL;
    }
  }

  else
  {
    id v4 = 0LL;
  }

  return v4;
}

uint64_t sub_1001D2E54(void *a1)
{
  BOOL v1 = (BOOL)a1;
  if (a1)
  {
    id v2 = sub_1001D2DE8(a1);
    uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);

    if (v3)
    {
      id v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
      id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 dateByAddingTimeInterval:-2592000.0]);

      id v6 = sub_1001D2DE8((void *)v1);
      unsigned int v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
      BOOL v1 = [v5 compare:v7] != (id)-1;
    }

    else
    {
      return 1LL;
    }
  }

  return v1;
}

PurchaseHistoryItemsRequestContext *sub_1001D2F38( uint64_t a1, void *a2, void *a3, int64_t a4, void *a5, void *a6, unint64_t a7)
{
  id v13 = a6;
  id v14 = a5;
  id v15 = a3;
  id v16 = a2;
  objc_opt_self(a1);
  id v17 = objc_alloc(&OBJC_CLASS___PurchaseHistoryItemsRequestContext);
  id v18 = v16;
  id v19 = v15;
  id v20 = v14;
  id v21 = v13;
  if (v17)
  {
    v26.receiver = v17;
    v26.super_class = (Class)&OBJC_CLASS___PurchaseHistoryItemsRequestContext;
    id v17 = (PurchaseHistoryItemsRequestContext *)objc_msgSendSuper2(&v26, "init");
    if (v17)
    {
      id v22 = (NSArray *)[v18 copy];
      knownApps = v17->_knownApps;
      v17->_knownApps = v22;

      objc_storeStrong((id *)&v17->_revision, a3);
      v17->_accountID = a4;
      objc_storeStrong((id *)&v17->_requestingAccount, a5);
      objc_storeStrong((id *)&v17->_clientInfo, a6);
      v17->_purchaseHistoryContext = a7;
    }
  }

  return v17;
}

id sub_1001D30C4(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  objc_opt_self(a1);
  uint64_t v48 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
  if ([v5 count] != (id)2) {
    goto LABEL_43;
  }
  if (!a3)
  {
    id v8 = sub_1001DF594(v5, @"os-version");
    unsigned int v7 = (__CFString *)objc_claimAutoreleasedReturnValue(v8);
LABEL_7:
    if (!v7) {
      goto LABEL_43;
    }
    goto LABEL_8;
  }

  if (a3 != 1) {
    goto LABEL_43;
  }
  id v6 = sub_1001DF594(v5, @"osVersion");
  unsigned int v7 = (__CFString *)objc_claimAutoreleasedReturnValue(v6);
  if (!sub_1001DF518((BOOL)v5, @"osVersion")) {
    goto LABEL_7;
  }

  unsigned int v7 = &stru_1003F3E40;
LABEL_8:
  if (!-[__CFString length](v7, "length"))
  {

    unsigned int v7 = 0LL;
  }

  id v9 = sub_1001DEC94(v5, @"devices");
  CFTypeRef v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
  if (!v10)
  {
    id v11 = sub_1001DEC94(v5, @"targets");
    CFTypeRef v10 = (void *)objc_claimAutoreleasedReturnValue(v11);
    if (!v10)
    {
      id v12 = sub_1001DF594(v5, @"device");
      uint64_t v13 = objc_claimAutoreleasedReturnValue(v12);
      id v14 = (void *)v13;
      if (v13)
      {
        uint64_t v57 = v13;
        CFTypeRef v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v57, 1LL));
      }

      else
      {
        CFTypeRef v10 = 0LL;
      }
    }
  }

  id v46 = v10;
  id v47 = v5;
  __int128 v53 = 0u;
  __int128 v54 = 0u;
  __int128 v51 = 0u;
  __int128 v52 = 0u;
  id v15 = sub_1002D6554(v10);
  id v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
  id v17 = [v16 countByEnumeratingWithState:&v51 objects:v56 count:16];
  if (v17)
  {
    id v18 = v17;
    uint64_t v19 = *(void *)v52;
    id v20 = &_ss28__ContiguousArrayStorageBaseCMa_ptr;
    p_cache = (objc_class *)&OBJC_METACLASS___BaseListener.cache;
    id v22 = &protocolRef_NSSecureCoding;
    uint64_t v49 = *(void *)v52;
    do
    {
      id v23 = 0LL;
      id v50 = v18;
      do
      {
        if (*(void *)v52 != v19) {
          objc_enumerationMutation(v16);
        }
        __int128 v24 = (void *)objc_claimAutoreleasedReturnValue( objc_msgSend( v20[461],  "arrayWithObjects:",  *(void *)(*((void *)&v51 + 1) + 8 * (void)v23),  v7,  0,  v46));
        id v25 = objc_alloc(p_cache + 28);
        id v26 = v24;
        if (!v25) {
          goto LABEL_32;
        }
        uint64_t v27 = (objc_class *)v22[108];
        v55.receiver = v25;
        v55.super_class = v27;
        id v28 = objc_msgSendSuper2(&v55, "init");
        if (!v28) {
          goto LABEL_32;
        }
        id v29 = v28;
        if ([v26 count] == (id)1)
        {
          *((void *)v29 + 3) = 0LL;
        }

        else
        {
          if ([v26 count] != (id)2) {
            goto LABEL_28;
          }
          *((void *)v29 + 3) = 1LL;
        }

        id v30 = [v26 copy];
        uint64_t v31 = (void *)*((void *)v29 + 1);
        *((void *)v29 + 1) = v30;

LABEL_28:
        id v32 = [*((id *)v29 + 1) count];
        uint64_t v33 = *((void *)v29 + 3);
        if (v33 == 1)
        {
          if (v32 != (id)2) {
            goto LABEL_31;
          }
        }

        else if (v33 || v32 != (id)1)
        {
LABEL_31:

LABEL_32:
          id v29 = 0LL;
          goto LABEL_40;
        }

        uint64_t v34 = v7;
        id v35 = p_cache;
        __int16 v36 = v20;
        id v37 = v34;
        uint64_t v38 = v16;
        uint64_t v39 = (void *)objc_claimAutoreleasedReturnValue([*((id *)v29 + 1) objectAtIndexedSubscript:0]);
        uint64_t v40 = (void *)objc_claimAutoreleasedReturnValue([v39 lowercaseString]);
        unsigned __int8 v41 = [v40 isEqualToString:@"universal"];

        if ((v41 & 1) != 0)
        {
          p_cache = v35;
          uint64_t v42 = sub_1001D34F8((uint64_t)&v35[28]);
          uint64_t v43 = objc_claimAutoreleasedReturnValue(v42);

          id v29 = (id)v43;
          id v20 = v36;
          if (!v43) {
            goto LABEL_39;
          }
        }

        else
        {

          id v20 = v36;
          p_cache = v35;
        }

        [v48 addObject:v29];
LABEL_39:
        id v16 = v38;
        unsigned int v7 = v37;
        uint64_t v19 = v49;
        id v18 = v50;
        id v22 = &protocolRef_NSSecureCoding;
LABEL_40:

        id v23 = (char *)v23 + 1;
      }

      while (v18 != v23);
      id v18 = [v16 countByEnumeratingWithState:&v51 objects:v56 count:16];
    }

    while (v18);
  }

  id v5 = v47;
LABEL_43:
  id v44 = [v48 copy];

  return v44;
}

id *sub_1001D34AC(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_self(a1);
  id v4 = sub_1001D3520((id *)objc_alloc(&OBJC_CLASS___VariantDescriptor), v3);

  return v4;
}

VariantDescriptor *sub_1001D34F8(uint64_t a1)
{
  BOOL v1 = objc_alloc_init(&OBJC_CLASS___VariantDescriptor);
  v1->_universal = 1;
  return v1;
}

id *sub_1001D3520(id *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    v16.receiver = a1;
    v16.super_class = (Class)&OBJC_CLASS___VariantDescriptor;
    a1 = (id *)objc_msgSendSuper2(&v16, "init");
    if (a1)
    {
      id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 componentsSeparatedByString:@":"]);
      if ([v4 count] == (id)1)
      {
        a1[3] = 0LL;
        id v5 = v4;
      }

      else
      {
        if ((unint64_t)[v4 count] < 2
          || (id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 objectAtIndexedSubscript:0]),
              a1[3] = [v6 integerValue],
              v6,
              a1[3] != (id)1))
        {
LABEL_9:
          id v8 = [a1[1] count];
          id v9 = a1[3];
          if (v9 == (id)1)
          {
            if (v8 != (id)2)
            {
LABEL_12:
              uint64_t v10 = 0LL;
              goto LABEL_13;
            }
          }

          else if (v9 || v8 != (id)1)
          {
            goto LABEL_12;
          }

          id v12 = (void *)objc_claimAutoreleasedReturnValue([a1[1] objectAtIndexedSubscript:0]);
          uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v12 lowercaseString]);
          unsigned int v14 = [v13 isEqualToString:@"universal"];

          if (!v14) {
            goto LABEL_14;
          }
          id v15 = sub_1001D34F8((uint64_t)&OBJC_CLASS___VariantDescriptor);
          uint64_t v10 = objc_claimAutoreleasedReturnValue(v15);
LABEL_13:

          a1 = (id *)v10;
LABEL_14:

          goto LABEL_15;
        }

        id v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "subarrayWithRange:", 1, (char *)objc_msgSend(v4, "count") - 1));
      }

      id v7 = a1[1];
      a1[1] = v5;

      goto LABEL_9;
    }
  }

id *sub_1001D36AC(id *a1)
{
  BOOL v1 = a1;
  if (a1)
  {
    id v2 = [a1[1] count];
    id v3 = v1[3];
    if (v3 == (id)1)
    {
      if (v2 == (id)2)
      {
        id v5 = sub_1001D37D4((uint64_t)v1);
        id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
        if (!v6 || v6[1] || v6[2])
        {
        }

        else
        {
          uint64_t v15 = v6[3];

          if (!v15)
          {
LABEL_5:
            id v4 = sub_1001D3844((uint64_t)v1, 0LL, 0LL);
            BOOL v1 = (id *)objc_claimAutoreleasedReturnValue(v4);
            return v1;
          }
        }

        id v7 = v1[3];
        id v8 = sub_1001D3844((uint64_t)v1, 0LL, 0LL);
        id v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
        uint64_t v10 = sub_1001D37D4((uint64_t)v1);
        id v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
        id v12 = -[OSVersion description]_0(v11);
        uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
        BOOL v1 = (id *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"%ld:%@:%@",  v7,  v9,  v13));

        return v1;
      }
    }

    else if (!v3 && v2 == (id)1)
    {
      goto LABEL_5;
    }

    BOOL v1 = 0LL;
  }

  return v1;
}

char *sub_1001D37D4(uint64_t a1)
{
  if (a1 && !*(_BYTE *)(a1 + 16))
  {
    id v2 = sub_1001D3844(a1, 1uLL, 1uLL);
    id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
    if (v3)
    {
      id v4 = sub_1001BBA78((char *)objc_alloc(&OBJC_CLASS___OSVersion), (uint64_t)v3);
    }

    else
    {
      id v5 = sub_1001BBA24((uint64_t)&OBJC_CLASS___OSVersion);
      id v4 = (char *)objc_claimAutoreleasedReturnValue(v5);
    }

    BOOL v1 = v4;
  }

  else
  {
    BOOL v1 = 0LL;
  }

  return v1;
}

id sub_1001D3844(uint64_t a1, unint64_t a2, unint64_t a3)
{
  else {
    id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 8) objectAtIndexedSubscript:a2]);
  }
  return v5;
}

__CFString *sub_1001D3898(_BYTE *a1)
{
  if (a1)
  {
    if (a1[16]) {
      return @"Universal";
    }
    id v2 = sub_1001D3844((uint64_t)a1, 0LL, 0LL);
    a1 = (_BYTE *)objc_claimAutoreleasedReturnValue(v2);
  }

  return (__CFString *)a1;
}

id sub_1001D38D0(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_self(a1);
  id v4 = v3;
  uint64_t v5 = objc_opt_self(&OBJC_CLASS___VariantDescriptor);
  id v6 = sub_1002EB2A0((uint64_t)&OBJC_CLASS___Device);
  id v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
  id v8 = sub_1001D39C4(v5, v7, v4);
  id v9 = (void *)objc_claimAutoreleasedReturnValue(v8);

  return v9;
}

id sub_1001D395C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  objc_opt_self(a1);
  id v7 = sub_1001D39C4((uint64_t)&OBJC_CLASS___VariantDescriptor, v6, v5);
  id v8 = (void *)objc_claimAutoreleasedReturnValue(v7);

  return v8;
}

_BYTE *sub_1001D39C4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = objc_opt_self(a1);
  if (v6)
  {
    uint64_t v8 = v7;
    id v9 = [v6 count];
    uint64_t v10 = 0LL;
    if (v5 && v9)
    {
      id v42 = v6;
      id v11 = v6;
      id v43 = v5;
      id v12 = v5;
      objc_opt_self(v8);
      uint64_t v13 = objc_alloc(&OBJC_CLASS___OSVersion);
      unsigned int v14 = (void *)objc_claimAutoreleasedReturnValue([v12 productVersion]);
      uint64_t v15 = sub_1001BBA78((char *)v13, (uint64_t)v14);

      v56[0] = _NSConcreteStackBlock;
      v56[1] = 3221225472LL;
      v56[2] = sub_1001D3EE0;
      void v56[3] = &unk_1003EBB70;
      id v16 = v12;
      id v57 = v16;
      id v58 = v15;
      id v17 = v15;
      id v18 = sub_1002B86C0(v11, v56);
      uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue(v18);
      id v20 = (void *)objc_claimAutoreleasedReturnValue([v19 sortedArrayUsingComparator:&stru_1003EBBB0]);

      uint64_t v39 = v11;
      __int128 v52 = 0u;
      __int128 v53 = 0u;
      __int128 v54 = 0u;
      __int128 v55 = 0u;
      id v21 = (id)objc_claimAutoreleasedReturnValue([v16 productVariants]);
      id v40 = [v21 countByEnumeratingWithState:&v52 objects:v61 count:16];
      if (v40)
      {
        uint64_t v22 = *(void *)v53;
        unsigned __int8 v41 = v20;
        uint64_t v38 = *(void *)v53;
        do
        {
          for (uint64_t i = 0LL; i != v40; uint64_t i = (char *)i + 1)
          {
            if (*(void *)v53 != v22) {
              objc_enumerationMutation(v21);
            }
            uint64_t v24 = *(void *)(*((void *)&v52 + 1) + 8LL * (void)i);
            __int128 v48 = 0u;
            __int128 v49 = 0u;
            __int128 v50 = 0u;
            __int128 v51 = 0u;
            id v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "reverseObjectEnumerator", v38, v39));
            id v26 = [v25 countByEnumeratingWithState:&v48 objects:v60 count:16];
            if (v26)
            {
              id v27 = v26;
              uint64_t v28 = *(void *)v49;
              while (2)
              {
                for (j = 0LL; j != v27; j = (char *)j + 1)
                {
                  if (*(void *)v49 != v28) {
                    objc_enumerationMutation(v25);
                  }
                  id v30 = *(_BYTE **)(*((void *)&v48 + 1) + 8LL * (void)j);
                  uint64_t v31 = sub_1001D3898(v30);
                  id v32 = (void *)objc_claimAutoreleasedReturnValue(v31);
                  unsigned __int8 v33 = [v32 isEqualToString:v24];

                  if ((v33 & 1) != 0)
                  {
                    uint64_t v10 = v30;

                    id v20 = v41;
                    goto LABEL_32;
                  }
                }

                id v27 = [v25 countByEnumeratingWithState:&v48 objects:v60 count:16];
                if (v27) {
                  continue;
                }
                break;
              }
            }

            id v20 = v41;
            uint64_t v22 = v38;
          }

          id v40 = [v21 countByEnumeratingWithState:&v52 objects:v61 count:16];
        }

        while (v40);
      }

      __int128 v46 = 0u;
      __int128 v47 = 0u;
      __int128 v44 = 0u;
      __int128 v45 = 0u;
      id v21 = v39;
      uint64_t v10 = [v21 countByEnumeratingWithState:&v44 objects:v59 count:16];
      if (v10)
      {
        uint64_t v34 = *(void *)v45;
        while (2)
        {
          for (k = 0LL; k != v10; k = (char *)k + 1)
          {
            if (*(void *)v45 != v34) {
              objc_enumerationMutation(v21);
            }
            __int16 v36 = *(_BYTE **)(*((void *)&v44 + 1) + 8LL * (void)k);
            if (v36 && (v36[16] & 1) != 0)
            {
              uint64_t v10 = v36;
              goto LABEL_32;
            }
          }

          uint64_t v10 = [v21 countByEnumeratingWithState:&v44 objects:v59 count:16];
          if (v10) {
            continue;
          }
          break;
        }
      }

uint64_t sub_1001D3D68(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  if (a1)
  {
    if (v3[16] == *(unsigned __int8 *)(a1 + 16) && *((void *)v3 + 3) == *(void *)(a1 + 24))
    {
      id v5 = (void *)*((void *)v3 + 1);
      else {
        a1 = (uint64_t)objc_msgSend(v5, "isEqual:");
      }
    }

    else
    {
      a1 = 0LL;
    }
  }

  return a1;
}

id sub_1001D3EE0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) productVariants]);
  id v5 = sub_1001D3898(v3);
  id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  unsigned int v7 = [v4 containsObject:v6];

  if (v7)
  {
    uint64_t v8 = sub_1001D37D4((uint64_t)v3);
    id v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
    uint64_t v10 = sub_1001BBC40((uint64_t)v9, *(void **)(a1 + 40));

    if (v10 == 1) {
      id v11 = 0LL;
    }
    else {
      id v11 = v3;
    }
  }

  else
  {
    id v11 = 0LL;
  }

  id v12 = v11;

  return v12;
}

int64_t sub_1001D3F90(id a1, VariantDescriptor *a2, VariantDescriptor *a3)
{
  id v4 = a3;
  id v5 = sub_1001D37D4((uint64_t)a2);
  id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  unsigned int v7 = sub_1001D37D4((uint64_t)v4);
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(v7);

  int64_t v9 = sub_1001BBC40((uint64_t)v6, v8);
  return v9;
}

id sub_1001D4008(void *a1)
{
  if (!a1) {
    return 0LL;
  }
  id v1 = a1;
  CC_SHA256([v1 bytes], (CC_LONG)objc_msgSend(v1, "length"), md);
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableString stringWithCapacity:](&OBJC_CLASS___NSMutableString, "stringWithCapacity:", 64LL));
  for (uint64_t i = 0LL; i != 32; ++i)
    objc_msgSend(v2, "appendFormat:", @"%02x", md[i]);
  id v4 = [v2 copy];

  return v4;
}

id sub_1001D40EC(void *a1)
{
  if (a1)
  {
    id v1 = sub_1001D4008(a1);
    id v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
    else {
      id v3 = (id)objc_claimAutoreleasedReturnValue([v2 substringToIndex:8]);
    }
    id v4 = v3;
  }

  else
  {
    id v4 = 0LL;
  }

  return v4;
}

NSMutableData *sub_1001D414C(void *a1)
{
  if (!a1) {
    return (NSMutableData *)0LL;
  }
  id v1 = a1;
  id v2 = (Bytef *)[v1 bytes];
  id v3 = [v1 length];
  id v4 = 0LL;
  if (v2)
  {
    id v5 = v3;
    if (v3)
    {
      memset(&v10.avail_in, 0, 104);
      v10.avail_in = v3;
      v10.avail_out = v3;
      v10.next_in = v2;
      id v6 = -[NSMutableData initWithLength:](objc_alloc(&OBJC_CLASS___NSMutableData), "initWithLength:", v3);
      v10.next_out = (Bytef *)-[NSMutableData mutableBytes](v6, "mutableBytes", v10.next_in, *(void *)&v10.avail_in);
      if (v6
        && !deflateInit2_(&v10, -1, 8, 31, 8, 0, "1.2.12", 112)
        && (int v7 = deflate(&v10, 4), v8 = deflateEnd(&v10), v7 == 1))
      {
        id v4 = 0LL;
        if (!v8 && v5 == (id)v10.total_in)
        {
          -[NSMutableData setLength:](v6, "setLength:", v10.total_out);
          id v4 = v6;
        }
      }

      else
      {
        id v4 = 0LL;
      }
    }
  }

  return v4;
}

id *sub_1001D42BC(id *a1, void *a2, void *a3)
{
  id v6 = a2;
  id v7 = a3;
  if (a1)
  {
    int v8 = [a1 init];
    a1 = v8;
    if (v8)
    {
      objc_storeStrong(v8 + 1, a2);
      objc_storeStrong(a1 + 4, a3);
      int64_t v9 = objc_alloc_init(&OBJC_CLASS___TaskQueue);
      id v10 = a1[5];
      a1[5] = v9;
    }
  }

  return a1;
}

void sub_1001D4474(uint64_t a1, void *a2)
{
  if (a1)
  {
    id v3 = (os_unfair_lock_s *)(a1 + 16);
    id v4 = a2;
    os_unfair_lock_lock_with_options(v3, 0x10000LL);
    id v5 = [v4 copy];

    id v6 = *(void **)(a1 + 56);
    *(void *)(a1 + 56) = v5;

    os_unfair_lock_unlock(v3);
  }

id *sub_1001D533C(id *a1, void *a2, void *a3)
{
  id v6 = a2;
  id v7 = a3;
  if (a1)
  {
    v10.receiver = a1;
    v10.super_class = (Class)&OBJC_CLASS___ContentRestoreTask;
    int v8 = (id *)objc_msgSendSuper2(&v10, "init");
    a1 = v8;
    if (v8)
    {
      objc_storeStrong(v8 + 5, a3);
      objc_storeStrong(a1 + 6, a2);
    }
  }

  return a1;
}

void *sub_1001D6258(void *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    v9.receiver = a1;
    v9.super_class = (Class)&OBJC_CLASS___SQLiteConnection;
    a1 = objc_msgSendSuper2(&v9, "init");
    if (a1)
    {
      id v4 = [v3 copy];
      id v5 = (void *)a1[7];
      a1[7] = v4;

      uint64_t v6 = objc_claimAutoreleasedReturnValue(+[NSMapTable strongToStrongObjectsMapTable](&OBJC_CLASS___NSMapTable, "strongToStrongObjectsMapTable"));
      id v7 = (void *)a1[4];
      a1[4] = v6;
    }
  }

  return a1;
}

uint64_t sub_1001D63E0(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    if (*(void *)(result + 16))
    {
      sub_1001D735C((sqlite3_stmt *)result);
      if (sqlite3_close(*(sqlite3 **)(v1 + 16)))
      {
        return 0LL;
      }

      else
      {
        id v2 = *(void **)(v1 + 8);
        *(void *)(v1 + _Block_object_dispose(va, 8) = 0LL;

        *(void *)(v1 + 16) = 0LL;
        *(void *)(v1 + 40) = 0LL;
        uint64_t result = 1LL;
        *(_BYTE *)(v1 + 4_Block_object_dispose(va, 8) = 0;
      }
    }

    else
    {
      return 1LL;
    }
  }

  return result;
}

void sub_1001D6448(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    id v9 = v3;
    if (*(void *)(a1 + 40))
    {
      if (!*(void *)(a1 + 8))
      {
        id v4 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
        id v5 = *(void **)(a1 + 8);
        *(void *)(a1 + _Block_object_dispose(va, 8) = v4;
      }

      id v6 = [v9 copy];
      id v7 = *(void **)(a1 + 8);
      id v8 = objc_retainBlock(v6);
      [v7 addObject:v8];
    }

    else
    {
      v3[2](v3);
    }

    id v3 = (void (**)(void))v9;
  }
}

void sub_1001D64E8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (a1)
  {
    v12[0] = 0LL;
    id v7 = sub_1001D6710(a1, v5, v12);
    id v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
    id v9 = v12[0];
    objc_super v10 = sub_10024A834(objc_alloc(&OBJC_CLASS___SQLitePreparedStatement), *(void *)(a1 + 16), v5);
    if (v10) {
      [*(id *)(a1 + 32) setObject:v8 forKey:v10];
    }
    if (v8) {
      id v11 = sub_1001BF1A0((id *)objc_alloc(&OBJC_CLASS___SQLiteQueryResults), v8);
    }
    else {
      id v11 = 0LL;
    }
    v6[2](v6, v11, v9);
    sub_10026EEC4((uint64_t)v8);
    if (v10) {
      [*(id *)(a1 + 32) removeObjectForKey:v10];
    }
  }
}

void sub_1001D6640(_Unwind_Exception *a1)
{
}

id sub_1001D6710(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  if (!sub_1001D6A98(a1))
  {
    id v8 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  @"SQLiteErrorDomain",  -7700LL,  0LL));
    id v10 = 0LL;
    if (!a3) {
      goto LABEL_14;
    }
    goto LABEL_12;
  }

  id v13 = 0LL;
  uint64_t v15 = 0LL;
  id v16 = &v15;
  uint64_t v17 = 0x3032000000LL;
  id v18 = sub_1001D77F4;
  uint64_t v19 = sub_1001D7804;
  id v20 = 0LL;
  id v6 = v5;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472LL;
  void v14[2] = sub_1001D780C;
  v14[3] = &unk_1003EBC28;
  void v14[5] = &v15;
  v14[6] = [v6 UTF8String];
  void v14[4] = a1;
  sub_1001D6F7C(a1, &v13, v14);
  id v7 = (id)v16[5];
  _Block_object_dispose(&v15, 8);

  id v8 = v13;
  if (v7)
  {
    uint64_t v9 = *(void *)(a1 + 56);
    if (v9 && *(_BYTE *)(v9 + 8) && (sub_10026EF0C((uint64_t)v7) & 1) == 0)
    {
      uint64_t v11 = objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  @"SQLiteErrorDomain",  -7701LL,  0LL));

      sub_10026EEC4((uint64_t)v7);
      id v10 = 0LL;
      id v8 = (id)v11;
    }

    else
    {
      id v10 = v7;
    }
  }

  else
  {
    id v10 = 0LL;
  }

  if (a3)
  {
LABEL_12:
    if (!v10) {
      *a3 = v8;
    }
  }

void sub_1001D68D4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

uint64_t sub_1001D68EC(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a4;
  if (!a1)
  {
    uint64_t v15 = 0LL;
    goto LABEL_18;
  }

  id v20 = 0LL;
  id v8 = a2;
  id v9 = sub_1001D6710(a1, v8, &v20);
  id v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
  id v11 = v20;
  id v12 = sub_10024A834(objc_alloc(&OBJC_CLASS___SQLitePreparedStatement), *(void *)(a1 + 16), v8);

  if (v12) {
    [*(id *)(a1 + 32) setObject:v10 forKey:v12];
  }
  if (v10)
  {
    if (v7) {
      v7[2](v7, v10);
    }
    id v19 = v11;
    id v13 = v10;
    v21[0] = _NSConcreteStackBlock;
    v21[1] = 3221225472LL;
    void v21[2] = sub_1001D7488;
    v21[3] = &unk_1003EBC00;
    unsigned int v14 = v13;
    id v22 = v14;
    uint64_t v15 = sub_1001D6F7C(a1, &v19, v21);
    if ((_DWORD)v15)
    {
      id v16 = (sqlite3_stmt *)v14[2];
      if (v16) {
        sqlite3_reset(v16);
      }
    }

    id v17 = v19;
    sub_10026EEC4((uint64_t)v14);
    if (v12) {
      [*(id *)(a1 + 32) removeObjectForKey:v12];
    }
    id v11 = v17;
    if (!a3) {
      goto LABEL_17;
    }
    goto LABEL_15;
  }

  uint64_t v15 = 0LL;
  if (a3)
  {
LABEL_15:
    if ((v15 & 1) == 0) {
      *a3 = v11;
    }
  }

BOOL sub_1001D6A98(uint64_t a1)
{
  if (!a1) {
    return 0LL;
  }
  BOOL v2 = 1LL;
  if (!*(void *)(a1 + 16))
  {
    db = 0LL;
    char v3 = 1;
    while (1)
    {
      int v4 = sub_10025281C(&db, *(void **)(a1 + 56));
      BOOL v2 = v4 == 0;
      if (!v4) {
        break;
      }
      if (v4 <= 0x1Au && ((1 << v4) & 0x4000C02) != 0)
      {
        char v6 = v3 & sub_1001D7490(a1);
        char v3 = 0;
        if ((v6 & 1) != 0) {
          continue;
        }
      }

      return v2;
    }

    id v7 = db;
    *(void *)(a1 + 16) = db;
    sqlite3_create_function( v7,  "timestamp",  0,  1,  0LL,  (void (__cdecl *)(sqlite3_context *, int, sqlite3_value **))sub_1001D77C4,  0LL,  0LL);
  }

  return v2;
}

uint64_t sub_1001D6B74(uint64_t a1, void *a2)
{
  char v3 = a2;
  if (a1)
  {
    int v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSUUID UUID](&OBJC_CLASS___NSUUID, "UUID"));
    id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 UUIDString]);
    char v6 = (void *)objc_claimAutoreleasedReturnValue([v5 stringByReplacingOccurrencesOfString:@"-" withString:&stru_1003F3E40]);
    id v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", @"SP_%@", v6));

    id v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", @"SAVEPOINT %@", v7));
    LODWORD(v5) = sub_1001D68EC(a1, v8, 0LL, 0LL);

    if ((_DWORD)v5)
    {
      if (v3[2](v3))
      {
        id v9 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"RELEASE SAVEPOINT %@",  v7));
        a1 = sub_1001D68EC(a1, v9, 0LL, 0LL);

LABEL_7:
        goto LABEL_8;
      }

      id v10 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"ROLLBACK TRANSACTION TO SAVEPOINT %@",  v7));
      sub_1001D68EC(a1, v10, 0LL, 0LL);
    }

    a1 = 0LL;
    goto LABEL_7;
  }

void sub_1001D6D04(_Unwind_Exception *a1)
{
}

void sub_1001D6D30(uint64_t a1, void *a2)
{
  char v3 = a2;
  if (a1)
  {
    uint64_t v4 = *(void *)(a1 + 40);
    if (v4 < 1)
    {
      *(void *)(a1 + 40) = 1LL;
      *(_BYTE *)(a1 + 4_Block_object_dispose(va, 8) = 0;
    }

    else
    {
      *(void *)(a1 + 40) = v4 + 1;
    }

    os_variant_has_internal_content("com.apple.appstored");
    int v5 = v3[2](v3);
    uint64_t v6 = *(void *)(a1 + 40);
    int v7 = v5 ^ 1;
    if (*(_BYTE *)(a1 + 48)) {
      int v7 = 1;
    }
    *(_BYTE *)(a1 + 4_Block_object_dispose(va, 8) = v7;
    uint64_t v8 = v6 - 1;
    *(void *)(a1 + 40) = v8;
    if (!v8)
    {
      if (v7) {
        id v9 = @"ROLLBACK TRANSACTION";
      }
      else {
        id v9 = @"COMMIT TRANSACTION";
      }
      sub_1001D68EC(a1, v9, 0LL, 0LL);
      id v10 = *(void **)(a1 + 8);
      if (v10)
      {
        id v11 = [v10 copy];
        id v12 = *(void **)(a1 + 8);
        *(void *)(a1 + _Block_object_dispose(va, 8) = 0LL;

        dispatch_queue_global_t global_queue = dispatch_get_global_queue(0LL, 0LL);
        unsigned int v14 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
        v16[0] = _NSConcreteStackBlock;
        v16[1] = 3221225472LL;
        void v16[2] = sub_1001D76D8;
        v16[3] = &unk_1003E9880;
        id v17 = v11;
        id v15 = v11;
        dispatch_async(v14, v16);
      }
    }
  }

uint64_t sub_1001D6F7C(uint64_t a1, void *a2, void *a3)
{
  int v5 = a3;
  if (!a1)
  {
    uint64_t v22 = 0LL;
    goto LABEL_30;
  }

  uint64_t v6 = 0LL;
  unsigned __int8 v7 = 0;
  do
  {
    uint64_t v8 = objc_autoreleasePoolPush();
    buf[0] = 0;
    int v9 = v5[2](v5, buf);
    if (v9 <= 0x19u)
    {
      switch((char)v9)
      {
        case 0:
          goto LABEL_13;
        case 5:
        case 6:
          if (v6 < 10)
          {
            usleep(0xF4240u);
            ++v6;
            goto LABEL_9;
          }

          uint64_t v13 = objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  @"SQLiteErrorDomain",  -7702LL,  0LL));
          break;
        case 10:
          unsigned int v14 = sub_1002523CC(v9);
          id v11 = (void *)objc_claimAutoreleasedReturnValue(v14);
          objc_autoreleasePoolPop(v8);
          uint64_t v15 = ASDLogHandleForCategory(14LL);
          id v16 = (os_log_s *)objc_claimAutoreleasedReturnValue(v15);
          if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
          {
            uint64_t v24 = (void *)objc_opt_class(a1, v17);
            id v25 = *(void **)(a1 + 56);
            id v27 = v24;
            if (v25) {
              id Property = objc_getProperty(v25, v26, 24LL, 1);
            }
            else {
              id Property = 0LL;
            }
            id v29 = Property;
            *(_DWORD *)__int128 buf = 138412546;
            id v43 = v24;
            __int16 v44 = 2114;
            id v45 = v29;
            _os_log_error_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_ERROR,  "[%@]: Reopening database after IO error: %{public}@",  buf,  0x16u);
          }

          id v18 = *(void **)(a1 + 8);
          id v19 = v18;
          uint64_t v20 = *(void *)(a1 + 40);
          if (!v20) {
            goto LABEL_35;
          }
          if (sqlite3_exec(*(sqlite3 **)(a1 + 16), "BEGIN DEFERRED TRANSACTION", 0LL, 0LL, 0LL))
          {
LABEL_21:
            sub_1001D7490(a1);
          }

          else
          {
            objc_storeStrong((id *)(a1 + 8), v18);
            *(void *)(a1 + 40) = v20;
            *(_BYTE *)(a1 + 4_Block_object_dispose(va, 8) = 1;
LABEL_35:
            id WeakRetained = objc_loadWeakRetained((id *)(a1 + 24));
            char v31 = objc_opt_respondsToSelector(WeakRetained, "connectionNeedsResetForReopen:");

            if ((v31 & 1) != 0)
            {
              uint64_t v32 = ASDLogHandleForCategory(14LL);
              unsigned __int8 v33 = (os_log_s *)objc_claimAutoreleasedReturnValue(v32);
              if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR))
              {
                __int16 v36 = (void *)objc_opt_class(a1, v34);
                id v37 = *(void **)(a1 + 56);
                id v41 = v36;
                if (v37) {
                  id v39 = objc_getProperty(v37, v38, 24LL, 1);
                }
                else {
                  id v39 = 0LL;
                }
                id v40 = v39;
                *(_DWORD *)__int128 buf = 138412546;
                id v43 = v36;
                __int16 v44 = 2114;
                id v45 = v40;
                _os_log_error_impl( (void *)&_mh_execute_header,  v33,  OS_LOG_TYPE_ERROR,  "[%@]: Asking delegate to reset database after reopen: %{public}@",  buf,  0x16u);
              }

              id v35 = objc_loadWeakRetained((id *)(a1 + 24));
              [v35 connectionNeedsResetForReopen:a1];
            }
          }

          goto LABEL_26;
        case 11:
          goto LABEL_14;
        default:
          goto LABEL_23;
      }

      goto LABEL_24;
    }

    if (v9 != 100)
    {
      if (v9 == 26)
      {
LABEL_14:
        id v12 = sub_1002523CC(v9);
        id v11 = (void *)objc_claimAutoreleasedReturnValue(v12);
        objc_autoreleasePoolPop(v8);
        sub_1001D7490(a1);
        goto LABEL_26;
      }

      if (v9 == 101)
      {
LABEL_13:
        id v11 = 0LL;
        unsigned __int8 v7 = 1;
LABEL_25:
        objc_autoreleasePoolPop(v8);
        goto LABEL_26;
      }

sqlite3_stmt *sub_1001D735C(sqlite3_stmt *result)
{
  if (result)
  {
    uint64_t v1 = result;
    __int128 v10 = 0u;
    __int128 v11 = 0u;
    __int128 v8 = 0u;
    __int128 v9 = 0u;
    BOOL v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*((id *)result + 4), "objectEnumerator", 0));
    id v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    if (v3)
    {
      id v4 = v3;
      uint64_t v5 = *(void *)v9;
      do
      {
        uint64_t v6 = 0LL;
        do
        {
          if (*(void *)v9 != v5) {
            objc_enumerationMutation(v2);
          }
          sub_10026EEC4(*(void *)(*((void *)&v8 + 1) + 8LL * (void)v6));
          uint64_t v6 = (char *)v6 + 1;
        }

        while (v4 != v6);
        id v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
      }

      while (v4);
    }

    [*((id *)v1 + 4) removeAllObjects];
    uint64_t result = sqlite3_next_stmt(*((sqlite3 **)v1 + 2), 0LL);
    if (result)
    {
      unsigned __int8 v7 = result;
      do
      {
        sqlite3_finalize(v7);
        uint64_t result = sqlite3_next_stmt(*((sqlite3 **)v1 + 2), v7);
        unsigned __int8 v7 = result;
      }

      while (result);
    }
  }

  return result;
}

uint64_t sub_1001D7488(uint64_t a1)
{
  return sub_10026EF5C(*(void *)(a1 + 32));
}

uint64_t sub_1001D7490(uint64_t a1)
{
  uint64_t v1 = a1;
  if (a1)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 24));
    char v3 = objc_opt_respondsToSelector(WeakRetained, "connectionNeedsResetForCorruption:");

    if ((v3 & 1) != 0)
    {
      uint64_t v4 = ASDLogHandleForCategory(14LL);
      uint64_t v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      {
        id v16 = (void *)objc_opt_class(v1, v6);
        uint64_t v17 = *(void **)(v1 + 56);
        id v19 = v16;
        if (v17) {
          id Property = objc_getProperty(v17, v18, 24LL, 1);
        }
        else {
          id Property = 0LL;
        }
        id v21 = Property;
        int v28 = 138412546;
        id v29 = v16;
        __int16 v30 = 2114;
        id v31 = v21;
        _os_log_error_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_ERROR,  "[%@]: Asking delegate to reset database after corruption: %{public}@",  (uint8_t *)&v28,  0x16u);
      }

      id v7 = objc_loadWeakRetained((id *)(v1 + 24));
      uint64_t v8 = (uint64_t)[v7 connectionNeedsResetForCorruption:v1];
LABEL_12:
      uint64_t v1 = v8;

      return v1;
    }

    uint64_t v9 = *(void *)(v1 + 56);
    if (!v9 || !*(_BYTE *)(v9 + 8))
    {
      uint64_t v10 = ASDLogHandleForCategory(14LL);
      __int128 v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      {
        uint64_t v22 = (void *)objc_opt_class(v1, v12);
        id v23 = *(void **)(v1 + 56);
        id v25 = v22;
        if (v23) {
          id v26 = objc_getProperty(v23, v24, 24LL, 1);
        }
        else {
          id v26 = 0LL;
        }
        id v27 = v26;
        int v28 = 138412546;
        id v29 = v22;
        __int16 v30 = 2114;
        id v31 = v27;
        _os_log_error_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_ERROR,  "[%@]: Deleting database after corruption: %{public}@",  (uint8_t *)&v28,  0x16u);
      }

      id v14 = *(id *)(v1 + 56);
      if (v14) {
        id v14 = objc_getProperty(v14, v13, 24LL, 1);
      }
      id v7 = v14;
      sub_1001D63E0(v1);
      uint64_t v8 = sub_10025270C(v7, 0LL);
      goto LABEL_12;
    }

    return 0LL;
  }

  return v1;
}

void sub_1001D76D8(uint64_t a1)
{
  __int128 v6 = 0u;
  __int128 v7 = 0u;
  __int128 v8 = 0u;
  __int128 v9 = 0u;
  id v1 = *(id *)(a1 + 32);
  id v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0LL;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        (*(void (**)(void))(*(void *)(*((void *)&v6 + 1) + 8LL * (void)v5) + 16LL))(*(void *)(*((void *)&v6 + 1) + 8LL * (void)v5));
        uint64_t v5 = (char *)v5 + 1;
      }

      while (v3 != v5);
      id v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }

    while (v3);
  }
}

void sub_1001D77C4(sqlite3_context *a1)
{
}

uint64_t sub_1001D77F4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1001D7804(uint64_t a1)
{
}

uint64_t sub_1001D780C(uint64_t a1)
{
  ppStmt = 0LL;
  uint64_t v2 = sqlite3_prepare_v2(*(sqlite3 **)(*(void *)(a1 + 32) + 16LL), *(const char **)(a1 + 48), -1, &ppStmt, 0LL);
  if (v2 - 100 < 2 || v2 == 0)
  {
    uint64_t v4 = objc_alloc(&OBJC_CLASS___SQLiteStatement);
    uint64_t v5 = sub_10026EE3C((id *)&v4->super.isa, ppStmt, *(void **)(a1 + 32));
    uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 8LL);
    __int128 v7 = *(void **)(v6 + 40);
    *(void *)(v6 + 40) = v5;
  }

  else
  {
    sqlite3_finalize(ppStmt);
  }

  return v2;
}

id sub_1001D78E8(void *a1)
{
  if (a1)
  {
    id v1 = sub_1001D7934(a1);
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
    id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 objectForKeyedSubscript:@"AnalyticsEventAction"]);
  }

  else
  {
    id v3 = 0LL;
  }

  return v3;
}

id sub_1001D7934(void *a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue([a1 userInfo]);
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([v1 objectForKeyedSubscript:@"com.apple.appstored.AnalyticsEvent"]);

  return v2;
}

void sub_1001D7974(void *a1, void *a2)
{
  id v11 = a2;
  if (a1)
  {
    id v3 = sub_1001D7934(a1);
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
    uint64_t v5 = (NSMutableDictionary *)[v4 mutableCopy];

    if (!v5) {
      uint64_t v5 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    }
    id v6 = [v11 copy];
    -[NSMutableDictionary setObject:forKeyedSubscript:]( v5,  "setObject:forKeyedSubscript:",  v6,  @"AnalyticsEventAction");

    __int128 v7 = v5;
    __int128 v8 = (void *)objc_claimAutoreleasedReturnValue([a1 userInfo]);
    __int128 v9 = (NSMutableDictionary *)[v8 mutableCopy];

    if (!v9) {
      __int128 v9 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    }
    id v10 = -[NSMutableDictionary copy](v7, "copy");
    -[NSMutableDictionary setObject:forKeyedSubscript:]( v9,  "setObject:forKeyedSubscript:",  v10,  @"com.apple.appstored.AnalyticsEvent");

    [a1 setUserInfo:v9];
  }
}

uint64_t sub_1001D7A78(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  if (a1)
  {
    if ([v7 count])
    {
      __int128 v9 = sub_10031E148((uint64_t)[v7 count]);
      id v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
      id v11 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"DELETE FROM purchase_history_apps WHERE purchaser_dsid = ? AND locker_item_id IN (%@);",
                        v10));

      uint64_t v12 = *(void *)(a1 + 8);
      v15[0] = _NSConcreteStackBlock;
      v15[1] = 3221225472LL;
      void v15[2] = sub_1001D7B98;
      v15[3] = &unk_1003E99B0;
      id v16 = v8;
      id v17 = v7;
      uint64_t v13 = sub_1001D68EC(v12, v11, a4, v15);
    }

    else
    {
      uint64_t v13 = 1LL;
    }
  }

  else
  {
    uint64_t v13 = 0LL;
  }

  return v13;
}

void sub_1001D7B98(uint64_t a1, void *a2)
{
  id v3 = a2;
  [v3 bindNumber:*(void *)(a1 + 32) atPosition:1];
  uint64_t v4 = *(void **)(a1 + 40);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  _DWORD v6[2] = sub_1001D7C24;
  v6[3] = &unk_1003E9988;
  id v7 = v3;
  id v5 = v3;
  [v4 enumerateObjectsUsingBlock:v6];
}

id sub_1001D7C24(uint64_t a1, uint64_t a2, int a3)
{
  return [*(id *)(a1 + 32) bindNumber:a2 atPosition:(a3 + 2)];
}

uint64_t sub_1001D7C34(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v58 = a1;
  id v59 = a3;
  if (a1)
  {
    if ([v5 count])
    {
      __int128 v62 = 0u;
      __int128 v63 = 0u;
      __int128 v60 = 0u;
      __int128 v61 = 0u;
      id obj = v5;
      id v6 = [obj countByEnumeratingWithState:&v60 objects:v64 count:16];
      if (v6)
      {
        id v7 = v6;
        id v55 = v5;
        uint64_t v57 = *(void *)v61;
        while (2)
        {
          for (uint64_t i = 0LL; i != v7; uint64_t i = (char *)i + 1)
          {
            if (*(void *)v61 != v57) {
              objc_enumerationMutation(obj);
            }
            __int128 v9 = *(void **)(*((void *)&v60 + 1) + 8LL * (void)i);
            id v10 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
            id v11 = (void *)objc_claimAutoreleasedReturnValue([v9 bundleID]);
            -[NSMutableDictionary setObject:forKeyedSubscript:]( v10,  "setObject:forKeyedSubscript:",  v11,  @"bundle_id");

            uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInteger:]( NSNumber,  "numberWithInteger:",  [v9 contentRatingFlags]));
            -[NSMutableDictionary setObject:forKeyedSubscript:]( v10,  "setObject:forKeyedSubscript:",  v12,  @"content_rating_flags");

            uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v9 circularIconURLString]);
            -[NSMutableDictionary setObject:forKeyedSubscript:]( v10,  "setObject:forKeyedSubscript:",  v13,  @"circular_icon_url");

            id v14 = (void *)objc_claimAutoreleasedReturnValue([v9 datePurchased]);
            -[NSMutableDictionary setObject:forKeyedSubscript:]( v10,  "setObject:forKeyedSubscript:",  v14,  @"date_purchased");

            uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v9 developerName]);
            -[NSMutableDictionary setObject:forKeyedSubscript:]( v10,  "setObject:forKeyedSubscript:",  v15,  @"developer_name");

            id v16 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( NSNumber,  "numberWithBool:",  [v9 isFamilyShared]));
            -[NSMutableDictionary setObject:forKeyedSubscript:]( v10,  "setObject:forKeyedSubscript:",  v16,  @"family_shared");

            id v17 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( NSNumber,  "numberWithBool:",  [v9 isFirstParty]));
            -[NSMutableDictionary setObject:forKeyedSubscript:]( v10,  "setObject:forKeyedSubscript:",  v17,  @"first_party");

            id v18 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( NSNumber,  "numberWithBool:",  [v9 currentlyOptedInForMacOSEligibility]));
            -[NSMutableDictionary setObject:forKeyedSubscript:]( v10,  "setObject:forKeyedSubscript:",  v18,  @"is_ios_binary_macos_available");

            id v19 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( NSNumber,  "numberWithBool:",  [v9 currentlyOptedInForXROSEligibility]));
            -[NSMutableDictionary setObject:forKeyedSubscript:]( v10,  "setObject:forKeyedSubscript:",  v19,  @"currently_opted_in_for_ros_eligibility");

            uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( NSNumber,  "numberWithBool:",  [v9 optedInForMacOSEligibility]));
            -[NSMutableDictionary setObject:forKeyedSubscript:]( v10,  "setObject:forKeyedSubscript:",  v20,  @"is_ios_binary_macos_compatible");

            id v21 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( NSNumber,  "numberWithBool:",  [v9 optedInForXROSEligibility]));
            -[NSMutableDictionary setObject:forKeyedSubscript:]( v10,  "setObject:forKeyedSubscript:",  v21,  @"opted_in_for_ros_eligibility");

            uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( NSNumber,  "numberWithBool:",  [v9 hasMessagesExtension]));
            -[NSMutableDictionary setObject:forKeyedSubscript:]( v10,  "setObject:forKeyedSubscript:",  v22,  @"has_messages_extension");

            id v23 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( NSNumber,  "numberWithBool:",  [v9 isHidden]));
            -[NSMutableDictionary setObject:forKeyedSubscript:]( v10,  "setObject:forKeyedSubscript:",  v23,  @"hidden");

            uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( NSNumber,  "numberWithBool:",  [v9 isHiddenFromSpringboard]));
            -[NSMutableDictionary setObject:forKeyedSubscript:]( v10,  "setObject:forKeyedSubscript:",  v24,  @"hidden_from_springboard");

            id v25 = (void *)objc_claimAutoreleasedReturnValue([v9 iconURLString]);
            -[NSMutableDictionary setObject:forKeyedSubscript:]( v10,  "setObject:forKeyedSubscript:",  v25,  @"icon_url_template");

            id v26 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( NSNumber,  "numberWithBool:",  [v9 is32BitOnly]));
            -[NSMutableDictionary setObject:forKeyedSubscript:]( v10,  "setObject:forKeyedSubscript:",  v26,  @"is_32_bit_only");

            id v27 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( NSNumber,  "numberWithBool:",  [v9 isPreorder]));
            -[NSMutableDictionary setObject:forKeyedSubscript:]( v10,  "setObject:forKeyedSubscript:",  v27,  @"is_preorder");

            int v28 = (void *)objc_claimAutoreleasedReturnValue([v9 longTitle]);
            -[NSMutableDictionary setObject:forKeyedSubscript:]( v10,  "setObject:forKeyedSubscript:",  v28,  @"long_title");

            id v29 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( NSNumber,  "numberWithUnsignedInt:",  [v9 mediaKind]));
            -[NSMutableDictionary setObject:forKeyedSubscript:]( v10,  "setObject:forKeyedSubscript:",  v29,  @"media_kind");

            __int16 v30 = (void *)objc_claimAutoreleasedReturnValue([v9 ovalIconURLString]);
            -[NSMutableDictionary setObject:forKeyedSubscript:]( v10,  "setObject:forKeyedSubscript:",  v30,  @"oval_icon_url_template");

            id v31 = (void *)objc_claimAutoreleasedReturnValue([v9 preflightPackageURL]);
            -[NSMutableDictionary setObject:forKeyedSubscript:]( v10,  "setObject:forKeyedSubscript:",  v31,  @"preflight_package_url");

            uint64_t v32 = (void *)objc_claimAutoreleasedReturnValue([v9 productURL]);
            -[NSMutableDictionary setObject:forKeyedSubscript:]( v10,  "setObject:forKeyedSubscript:",  v32,  @"product_url");

            -[NSMutableDictionary setObject:forKeyedSubscript:]( v10,  "setObject:forKeyedSubscript:",  v59,  @"purchaser_dsid");
            unsigned __int8 v33 = (void *)objc_claimAutoreleasedReturnValue([v9 redownloadParams]);
            -[NSMutableDictionary setObject:forKeyedSubscript:]( v10,  "setObject:forKeyedSubscript:",  v33,  @"redownload_params");

            uint64_t v34 = (void *)objc_claimAutoreleasedReturnValue([v9 requiredCapabilities]);
            -[NSMutableDictionary setObject:forKeyedSubscript:]( v10,  "setObject:forKeyedSubscript:",  v34,  @"required_capabilities");

            id v35 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithLongLong:]( NSNumber,  "numberWithLongLong:",  [v9 storeItemID]));
            -[NSMutableDictionary setObject:forKeyedSubscript:]( v10,  "setObject:forKeyedSubscript:",  v35,  @"store_item_id");

            __int16 v36 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( NSNumber,  "numberWithBool:",  [v9 supportsIPad]));
            -[NSMutableDictionary setObject:forKeyedSubscript:]( v10,  "setObject:forKeyedSubscript:",  v36,  @"supports_ipad");

            id v37 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( NSNumber,  "numberWithBool:",  [v9 supportsIPhone]));
            -[NSMutableDictionary setObject:forKeyedSubscript:]( v10,  "setObject:forKeyedSubscript:",  v37,  @"supports_iphone");

            uint64_t v38 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( NSNumber,  "numberWithBool:",  [v9 supportsMac]));
            -[NSMutableDictionary setObject:forKeyedSubscript:]( v10,  "setObject:forKeyedSubscript:",  v38,  @"supports_mac");

            id v39 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( NSNumber,  "numberWithBool:",  [v9 supportsRealityDevice]));
            -[NSMutableDictionary setObject:forKeyedSubscript:]( v10,  "setObject:forKeyedSubscript:",  v39,  @"supports_reality_device");

            id v40 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( NSNumber,  "numberWithUnsignedInt:",  [v9 purchaseToken]));
            -[NSMutableDictionary setObject:forKeyedSubscript:]( v10,  "setObject:forKeyedSubscript:",  v40,  @"purchase_token");

            id v41 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedLongLong:]( NSNumber,  "numberWithUnsignedLongLong:",  [v9 lockerItemID]));
            -[NSMutableDictionary setObject:forKeyedSubscript:]( v10,  "setObject:forKeyedSubscript:",  v41,  @"locker_item_id");

            id v42 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithLongLong:]( NSNumber,  "numberWithLongLong:",  [v9 genreID]));
            -[NSMutableDictionary setObject:forKeyedSubscript:]( v10,  "setObject:forKeyedSubscript:",  v42,  @"genre_id");

            id v43 = (void *)objc_claimAutoreleasedReturnValue([v9 genreName]);
            -[NSMutableDictionary setObject:forKeyedSubscript:]( v10,  "setObject:forKeyedSubscript:",  v43,  @"genre_name");

            __int16 v44 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( NSNumber,  "numberWithBool:",  [v9 watchAppDeliveredIniOSApp]));
            -[NSMutableDictionary setObject:forKeyedSubscript:]( v10,  "setObject:forKeyedSubscript:",  v44,  @"watch_app_delivered_in_ios_app");

            id v45 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( NSNumber,  "numberWithBool:",  [v9 watchAppRunsIndependently]));
            -[NSMutableDictionary setObject:forKeyedSubscript:]( v10,  "setObject:forKeyedSubscript:",  v45,  @"watch_app_runs_independently");

            __int128 v46 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( NSNumber,  "numberWithBool:",  [v9 watchOnly]));
            -[NSMutableDictionary setObject:forKeyedSubscript:]( v10,  "setObject:forKeyedSubscript:",  v46,  @"watch_app_watch_only");

            __int128 v47 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( NSNumber,  "numberWithBool:",  [v9 supportsLayeredImage]));
            -[NSMutableDictionary setObject:forKeyedSubscript:]( v10,  "setObject:forKeyedSubscript:",  v47,  @"supports_layered_image");

            __int128 v48 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( NSNumber,  "numberWithBool:",  [v9 hasP3]));
            -[NSMutableDictionary setObject:forKeyedSubscript:]( v10,  "setObject:forKeyedSubscript:",  v48,  @"has_p3");

            __int128 v49 = (void *)objc_claimAutoreleasedReturnValue([v9 title]);
            -[NSMutableDictionary setObject:forKeyedSubscript:]( v10,  "setObject:forKeyedSubscript:",  v49,  @"title");

            __int128 v50 = objc_alloc(&OBJC_CLASS___PurchaseHistoryAppEntity);
            __int128 v51 = (void *)objc_claimAutoreleasedReturnValue([v58 connection]);
            __int128 v52 = -[SQLiteEntity initWithPropertyValues:onConnection:]( v50,  "initWithPropertyValues:onConnection:",  v10,  v51);

            LODWORD(v51) = -[SQLiteEntity existsInDatabase](v52, "existsInDatabase");
            if (!(_DWORD)v51)
            {
              uint64_t v53 = 0LL;
              goto LABEL_13;
            }
          }

          id v7 = [obj countByEnumeratingWithState:&v60 objects:v64 count:16];
          if (v7) {
            continue;
          }
          break;
        }

        uint64_t v53 = 1LL;
LABEL_13:
        id v5 = v55;
      }

      else
      {
        uint64_t v53 = 1LL;
      }
    }

    else
    {
      uint64_t v53 = 1LL;
    }
  }

  else
  {
    uint64_t v53 = 0LL;
  }

  return v53;
}

uint64_t sub_1001D86AC(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  if (a1)
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue([a1 connection]);
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472LL;
    v9[2] = sub_1001D8764;
    v9[3] = &unk_1003E99D8;
    id v10 = v5;
    uint64_t v7 = sub_1001D68EC((uint64_t)v6, @"DELETE FROM purchase_history_apps WHERE purchaser_dsid = ?;", a3, v9);
  }

  else
  {
    uint64_t v7 = 0LL;
  }

  return v7;
}

id sub_1001D8764(uint64_t a1, void *a2)
{
  return [a2 bindNumber:*(void *)(a1 + 32) atPosition:1];
}

void *sub_1001D8774(void *result, void *a2, void *a3, void *a4)
{
  if (result)
  {
    id v6 = result;
    id v7 = a3;
    id v8 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( NSString,  "stringWithFormat:",  @"%i",  [a2 intValue]));
    id v9 = sub_10026E8B0((uint64_t)&OBJC_CLASS___PurchaseHistoryDatabaseSession, v7);
    id v10 = (void *)objc_claimAutoreleasedReturnValue(v9);

    uint64_t v11 = sub_1001D8828(v6, v8, v10, a4);
    return (void *)v11;
  }

  return result;
}

uint64_t sub_1001D8828(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = (void *)objc_claimAutoreleasedReturnValue([a1 connection]);
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472LL;
  void v14[2] = sub_1001D8A3C;
  v14[3] = &unk_1003E99B0;
  id v10 = v7;
  id v15 = v10;
  id v11 = v8;
  id v16 = v11;
  uint64_t v12 = sub_1001D68EC( (uint64_t)v9,  @"INSERT OR REPLACE INTO purchase_history_db_properties (value, key) VALUES (?, ?);",
          a4,
          v14);

  return v12;
}

void *sub_1001D88FC(void *result, void *a2, void *a3, void *a4)
{
  if (result)
  {
    id v6 = result;
    id v7 = a3;
    [a2 timeIntervalSince1970];
    id v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:"));
    id v9 = sub_1002EE2B0((uint64_t)&OBJC_CLASS___PurchaseHistoryDatabaseSession, v7);
    id v10 = (void *)objc_claimAutoreleasedReturnValue(v9);

    uint64_t v11 = sub_1001D8828(v6, v8, v10, a4);
    return (void *)v11;
  }

  return result;
}

void *sub_1001D899C(void *result, void *a2, void *a3, void *a4)
{
  if (result)
  {
    id v6 = result;
    id v7 = a3;
    [a2 timeIntervalSince1970];
    id v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:"));
    id v9 = sub_10026E6C8((uint64_t)&OBJC_CLASS___PurchaseHistoryDatabaseSession, v7);
    id v10 = (void *)objc_claimAutoreleasedReturnValue(v9);

    uint64_t v11 = sub_1001D8828(v6, v8, v10, a4);
    return (void *)v11;
  }

  return result;
}

void sub_1001D8A3C(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  sub_10031DF0C(v4, 1LL, v3);
  [v4 bindString:*(void *)(a1 + 40) atPosition:2];
}

ExpiredUpdateRecoveryTask *sub_1001D94D8(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_self(a1);
  id v4 = objc_alloc_init(&OBJC_CLASS___ExpiredUpdateRecoveryTask);
  v4->_externalID = (NSUUID *)[v3 persistentID];
  id v5 = sub_1001E26D0(v3, (uint64_t)@"bundle_id");
  uint64_t v6 = objc_claimAutoreleasedReturnValue(v5);
  id v7 = *(void **)&v4->super._success;
  *(void *)&v4->super._success = v6;

  LOBYTE(v4->_installID) = sub_1001E2698(v3, (uint64_t)@"update_type") != (id)1;
  id v8 = sub_1001E25D0(v3, (uint64_t)@"item_id");
  uint64_t v9 = objc_claimAutoreleasedReturnValue(v8);
  bundleID = v4->_bundleID;
  v4->_bundleID = (NSString *)v9;

  id v11 = sub_1001E2734(v3, (uint64_t)@"external_id");
  uint64_t v12 = objc_claimAutoreleasedReturnValue(v11);
  CFErrorRef error = v4->super._error;
  v4->super._CFErrorRef error = (NSError *)v12;

  id v14 = sub_1001E26D0(v3, (uint64_t)@"log_code");
  uint64_t v15 = objc_claimAutoreleasedReturnValue(v14);

  itemID = v4->_itemID;
  v4->_itemID = (NSNumber *)v15;

  return v4;
}

void sub_1001D9A7C( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, char a25)
{
}

uint64_t sub_1001D9ADC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1001D9AEC(uint64_t a1)
{
}

void sub_1001D9AF4(uint64_t a1, void *a2)
{
  id v3 = sub_100320260(a2, *(void **)(*(void *)(a1 + 32) + 40LL));
  uint64_t v4 = objc_claimAutoreleasedReturnValue(v3);
  uint64_t v5 = *(void *)(*(void *)(a1 + 40) + 8LL);
  uint64_t v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v4;
}

void sub_1001D9B40(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([a2 items]);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 firstObject]);

  unsigned int v8 = [v7 success];
  uint64_t v9 = ASDLogHandleForCategory(2LL);
  id v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
  id v11 = v10;
  if (v8)
  {
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) logKey]);
      *(_DWORD *)id v19 = 138412290;
      *(void *)&void v19[4] = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "[%@] Successfully re-purchased expired update",  v19,  0xCu);
    }

    uint64_t v13 = *(void *)(a1 + 40);
    id v14 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) logKey]);
    if (v13)
    {
      id v15 = sub_1002EEBC0((uint64_t)&OBJC_CLASS___AppInstallsDatabaseStore);
      id v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
      *(void *)id v19 = _NSConcreteStackBlock;
      *(void *)&v19[8] = 3221225472LL;
      *(void *)&v19[16] = sub_1001D9D6C;
      uint64_t v20 = &unk_1003EBCA0;
      uint64_t v21 = v13;
      id v22 = v14;
      [v16 modifyUsingTransaction:v19];
    }

    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
    [WeakRetained completeWithSuccess];
  }

  else
  {
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      id v18 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) logKey]);
      *(_DWORD *)id v19 = 138412546;
      *(void *)&void v19[4] = v18;
      *(_WORD *)&v19[12] = 2114;
      *(void *)&v19[14] = v5;
      _os_log_error_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_ERROR,  "[%@] Failed to re-purchase expired update error: %{public}@",  v19,  0x16u);
    }

    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
    [WeakRetained completeWithError:v5];
  }

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 48));
}

uint64_t sub_1001D9D6C(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = objc_alloc(&OBJC_CLASS___AppInstallEntity);
  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 64LL);
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v3 connection]);

  id v7 = -[SQLiteEntity initWithPersistentID:onConnection:](v4, "initWithPersistentID:onConnection:", v5, v6);
  unsigned int v8 = sub_10021B7AC(v7);
  uint64_t v9 = (id *)objc_claimAutoreleasedReturnValue(v8);
  id v10 = sub_1002E6214((uint64_t)v9);
  id v11 = (void *)objc_claimAutoreleasedReturnValue(v10);

  if (v11)
  {
    sub_1002E62D4((uint64_t)v9, 0LL);
    sub_10021B828(v7, v9);
    uint64_t v12 = ASDLogHandleForCategory(2LL);
    uint64_t v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v14 = *(void *)(a1 + 40);
      int v16 = 138412290;
      uint64_t v17 = v14;
      _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "[%@] Successfully cleared the optimal download window",  (uint8_t *)&v16,  0xCu);
    }
  }

  return 1LL;
}

void sub_1001DA188( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_1001DA1B4(uint64_t a1)
{
  __int128 v8 = 0u;
  __int128 v9 = 0u;
  __int128 v10 = 0u;
  __int128 v11 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      uint64_t v6 = 0LL;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        id v7 = (void *)objc_claimAutoreleasedReturnValue( +[ApplicationProxy proxyForBundleID:]( &OBJC_CLASS___ApplicationProxy,  "proxyForBundleID:",  *(void *)(*((void *)&v8 + 1) + 8LL * (void)v6),  (void)v8));

        uint64_t v6 = (char *)v6 + 1;
      }

      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }

    while (v4);
  }
}

void sub_1001DA518( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

id sub_1001DA530(uint64_t a1, uint64_t a2)
{
  id result = [*(id *)(a1 + 32) isCandidateAppProxy:a2 isMetadataLookup:0];
  if ((_DWORD)result) {
    ++*(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL);
  }
  return result;
}

void sub_1001DA588(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    id v4 = *(void **)(a1 + 32);
    id v7 = v3;
    if (!v4)
    {
      uint64_t v5 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
      uint64_t v6 = *(void **)(a1 + 32);
      *(void *)(a1 + 32) = v5;

      id v4 = *(void **)(a1 + 32);
    }

    [v4 addObject:v7];
    id v3 = v7;
  }
}

BOOL sub_1001DA86C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0LL;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1LL || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      if (v5++ >= 9)
      {
        unint64_t v6 = 0LL;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }

    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0LL;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t String = PBReaderReadString(a2);
        uint64_t v13 = objc_claimAutoreleasedReturnValue(String);
        uint64_t v14 = 16LL;
        goto LABEL_26;
      case 2u:
        id v15 = objc_alloc_init(&OBJC_CLASS___TFImageUpload);
        sub_1001DA588(a1, v15);
        if (PBReaderPlaceMark(a2, v19) && sub_100191DD8((uint64_t)v15, a2))
        {
          PBReaderRecallMark(a2, v19);
LABEL_27:

LABEL_28:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }

        return 0LL;
      case 3u:
        uint64_t v16 = PBReaderReadString(a2);
        uint64_t v13 = objc_claimAutoreleasedReturnValue(v16);
        uint64_t v14 = 8LL;
        goto LABEL_26;
      case 4u:
        uint64_t v17 = PBReaderReadString(a2);
        uint64_t v13 = objc_claimAutoreleasedReturnValue(v17);
        uint64_t v14 = 24LL;
LABEL_26:
        id v15 = *(TFImageUpload **)(a1 + v14);
        *(void *)(a1 + v14) = v13;
        goto LABEL_27;
      default:
        if ((PBReaderSkipValueWithTag(a2) & 1) == 0) {
          return 0LL;
        }
        goto LABEL_28;
    }
  }

void sub_1001DAC0C(uint64_t a1, void *a2)
{
  if (a1) {
    objc_storeStrong((id *)(a1 + 16), a2);
  }
}

void sub_1001DAC24(uint64_t a1, void *a2)
{
  if (a1) {
    objc_storeStrong((id *)(a1 + 8), a2);
  }
}

void sub_1001DAC3C(uint64_t a1, void *a2)
{
  if (a1) {
    objc_storeStrong((id *)(a1 + 24), a2);
  }
}

id *sub_1001DAFB8(id *a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  if (a1)
  {
    v12.receiver = a1;
    v12.super_class = (Class)&OBJC_CLASS___RequestProxy;
    int v10 = (id *)objc_msgSendSuper2(&v12, "init");
    a1 = v10;
    if (v10)
    {
      objc_storeWeak(v10 + 1, v7);
      objc_storeStrong(a1 + 2, a4);
      objc_storeStrong(a1 + 3, a3);
    }
  }

  return a1;
}

uint64_t sub_1001DB18C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_1001DB2C4(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

NSUUID *sub_1001DB464(uint64_t a1, uint64_t a2)
{
  v4[0] = a2;
  v4[1] = 0LL;
  return -[NSUUID initWithUUIDBytes:](objc_alloc(&OBJC_CLASS___NSUUID), "initWithUUIDBytes:", v4);
}

id sub_1001DB54C(uint64_t a1)
{
  if (qword_100462228 != -1) {
    dispatch_once(&qword_100462228, &stru_1003EBD50);
  }
  return (id)qword_100462220;
}

void sub_1001DB590(id a1)
{
  id v1 = objc_alloc_init(&OBJC_CLASS___AppStoreService);
  id v2 = (void *)qword_100462220;
  qword_100462220 = (uint64_t)v1;
}

id sub_1001DB80C(uint64_t a1)
{
  if (a1)
  {
    id v1 = sub_100316770((uint64_t)&OBJC_CLASS___XPCRequestToken);
    id v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
    id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 processInfo]);
    char v4 = (void *)objc_claimAutoreleasedReturnValue([v3 bundleIdentifier]);
  }

  else
  {
    char v4 = 0LL;
  }

  return v4;
}

uint64_t sub_1001DB870(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

id *sub_1001DC57C(id *a1, void *a2, void *a3, void *a4)
{
  id v8 = a2;
  id v9 = a3;
  id v10 = a4;
  if (a1)
  {
    v13.receiver = a1;
    v13.super_class = (Class)&OBJC_CLASS___PurchaseHistoryUpdateRequest;
    __int128 v11 = (id *)objc_msgSendSuper2(&v13, "init");
    a1 = v11;
    if (v11)
    {
      objc_storeStrong(v11 + 1, a2);
      objc_storeStrong(a1 + 2, a4);
      objc_storeWeak(a1 + 5, v9);
    }
  }

  return a1;
}

void sub_1001DC630(void *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    uint64_t v4 = a1[2];
    if (v4 && *(void *)(v4 + 8))
    {
      uint64_t v5 = a1[1];
      id v45 = 0LL;
      id v6 = sub_100255E30(v5, (uint64_t)@"purchase-daap/base-url", &v45);
      id v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
      id v8 = v45;
      id v9 = v8;
      if (v7)
      {
        uint64_t v10 = a1[1];
        id v44 = v9;
        id v11 = sub_10025621C(v10, (uint64_t)@"purchase-daap/database-id", &off_10040C370, &v44);
        objc_super v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
        id v13 = v44;

        if (v12)
        {
          uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( NSString,  "stringWithFormat:",  @"databases/%ld/update",  [v12 integerValue]));
          id v15 = (void *)objc_claimAutoreleasedReturnValue([v7 URLByAppendingPathComponent:v14]);

          if (v15)
          {
            id v16 = 0LL;
            goto LABEL_14;
          }
        }

        else
        {
        }
      }

      else
      {
        id v13 = v8;
      }

      uint64_t v19 = ASDLogHandleForCategory(14LL);
      uint64_t v20 = (os_log_s *)objc_claimAutoreleasedReturnValue(v19);
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
      {
        id v40 = (void *)objc_opt_class(a1, v21);
        *(_DWORD *)__int128 buf = 138412546;
        __int128 v47 = v40;
        __int16 v48 = 2114;
        id v49 = v13;
        id v41 = v40;
        _os_log_error_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_ERROR,  "[%@]: Failed to construct request URL error: %{public}@",  buf,  0x16u);
      }

      id v22 = sub_1001DD5A0(2LL, (uint64_t)v13);
      id v16 = (id)objc_claimAutoreleasedReturnValue(v22);
      id v15 = 0LL;
LABEL_14:

      id v23 = v16;
      if (!v15)
      {
        id v39 = sub_1001DD5A0(2LL, (uint64_t)v23);
        int v28 = (id *)objc_claimAutoreleasedReturnValue(v39);
        v3[2](v3, 0LL, v28);
LABEL_30:

        goto LABEL_31;
      }

      id v25 = objc_alloc(&OBJC_CLASS___PurchaseHistoryUpdateDAAPRequestEncoder);
      id Property = (id)a1[2];
      if (Property) {
        id Property = objc_getProperty(Property, v24, 32LL, 1);
      }
      id v27 = Property;
      int v28 = sub_1001AA51C((id *)&v25->super.isa, v27);

      __int16 v30 = sub_1002AF430((id *)objc_alloc(&OBJC_CLASS___DAAPURLRequest), v28, v15);
      id v31 = (id)a1[2];
      if (v31) {
        id v31 = objc_getProperty(v31, v29, 16LL, 1);
      }
      id v33 = v31;
      if (v30) {
        objc_setProperty_atomic(v30, v32, v33, 24LL);
      }

      id v35 = (void *)a1[2];
      if (v35)
      {
        __int16 v36 = (void *)v35[1];
        if (!v30)
        {
LABEL_24:
          if (v35) {
            id v35 = objc_getProperty(v35, v34, 24LL, 1);
          }
          uint64_t v38 = v35;
          if (v30) {
            objc_setProperty_atomic(v30, v37, v38, 40LL);
          }

          v42[0] = _NSConcreteStackBlock;
          v42[1] = 3221225472LL;
          v42[2] = sub_1001DC9C8;
          v42[3] = &unk_1003EB8D0;
          v42[4] = a1;
          id v43 = v3;
          sub_1002AF7B0((uint64_t)v30, a1, v42);

          goto LABEL_30;
        }
      }

      else
      {
        __int16 v36 = 0LL;
        if (!v30) {
          goto LABEL_24;
        }
      }

      v30[4] = v36;
      id v35 = (void *)a1[2];
      goto LABEL_24;
    }

    id v17 = sub_1001DD5A0(4LL, 0LL);
    id v18 = (id *)objc_claimAutoreleasedReturnValue(v17);
    v3[2](v3, 0LL, v18);
  }

void sub_1001DC9C8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = v6;
  if (!v5)
  {
    if (*(_BYTE *)(*(void *)(a1 + 32) + 36LL)
      || [v6 code] != (id)301
      || (uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v7 userInfo]),
          id v11 = (void *)objc_claimAutoreleasedReturnValue([v10 objectForKey:AMSErrorUserInfoKeyStatusCode]),
          id v12 = [v11 integerValue],
          v11,
          v10,
          v12 != (id)401))
    {
      uint64_t v20 = *(void *)(a1 + 40);
      id v21 = sub_1001DD5A0(0LL, (uint64_t)v7);
      id v8 = (id)objc_claimAutoreleasedReturnValue(v21);
      (*(void (**)(uint64_t, void, id))(v20 + 16))(v20, 0LL, v8);
      goto LABEL_17;
    }

    *(_BYTE *)(*(void *)(a1 + 32) + 36LL) = 1;
    id v8 = objc_alloc_init(&OBJC_CLASS___AMSAuthenticateOptions);
    [v8 setAuthenticationType:0];
    uint64_t v13 = *(void *)(*(void *)(a1 + 32) + 16LL);
    if (!v13 || *(void *)(v13 + 40) != 1LL) {
      [v8 setAuthenticationType:1];
    }
    id v15 = objc_alloc(&OBJC_CLASS___AMSAuthenticateRequest);
    id Property = *(id *)(*(void *)(a1 + 32) + 16LL);
    if (Property) {
      id Property = objc_getProperty(Property, v14, 16LL, 1);
    }
    id v17 = Property;
    id v18 = -[AMSAuthenticateRequest initWithAccount:options:](v15, "initWithAccount:options:", v17, v8);

    v23[0] = _NSConcreteStackBlock;
    v23[1] = 3221225472LL;
    void v23[2] = sub_1001DCBF0;
    v23[3] = &unk_1003EBD80;
    uint64_t v19 = *(void **)(a1 + 40);
    v23[4] = *(void *)(a1 + 32);
    id v24 = v19;
    sub_100278198((uint64_t)&OBJC_CLASS___InteractiveRequestPresenter, v18, v23);

    goto LABEL_16;
  }

  id v8 = (id)objc_claimAutoreleasedReturnValue([v5 data]);
  uint64_t v9 = *(void *)(a1 + 40);
  if (!v8)
  {
    id v22 = sub_1001DD5A0(0LL, 0LL);
    id v18 = (AMSAuthenticateRequest *)objc_claimAutoreleasedReturnValue(v22);
    (*(void (**)(uint64_t, void, AMSAuthenticateRequest *))(v9 + 16))(v9, 0LL, v18);
LABEL_16:

    goto LABEL_17;
  }

  (*(void (**)(uint64_t, id, void))(v9 + 16))(v9, v8, 0LL);
LABEL_17:
}

void sub_1001DCBF0(uint64_t a1, void *a2, void *a3)
{
  id v23 = a3;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([a2 account]);
  id v6 = v5;
  if (v5 && (id v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "ams_DSID")), v7, v7))
  {
    id Property = *(id *)(*(void *)(a1 + 32) + 16LL);
    if (Property) {
      id Property = objc_getProperty(Property, v8, 32LL, 1);
    }
    id v11 = Property;
    id v12 = *(void **)(*(void *)(a1 + 32) + 16LL);
    if (v12)
    {
      int64_t v13 = v12[1];
      id v12 = objc_getProperty(v12, v10, 24LL, 1);
    }

    else
    {
      int64_t v13 = 0LL;
    }

    uint64_t v14 = v12;
    uint64_t v15 = *(void *)(*(void *)(a1 + 32) + 16LL);
    if (v15) {
      unint64_t v16 = *(void *)(v15 + 40);
    }
    else {
      unint64_t v16 = 0LL;
    }
    id v17 = sub_1002C91B4((uint64_t)&OBJC_CLASS___PurchaseHistoryUpdateRequestContext, v11, v13, v6, v14, v16);

    uint64_t v18 = *(void *)(a1 + 32);
    uint64_t v19 = *(void **)(v18 + 16);
    *(void *)(v18 + 16) = v17;
    uint64_t v20 = v17;

    sub_1001DC630(*(void *)(a1 + 32), *(void *)(a1 + 40));
  }

  else
  {
    uint64_t v21 = *(void *)(a1 + 40);
    id v22 = sub_1001DD5A0(4LL, (uint64_t)v23);
    uint64_t v20 = (PurchaseHistoryUpdateRequestContext *)objc_claimAutoreleasedReturnValue(v22);
    (*(void (**)(uint64_t, void, PurchaseHistoryUpdateRequestContext *))(v21 + 16))(v21, 0LL, v20);
  }
}

void sub_1001DD094(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    uint64_t v7 = ASDLogHandleForCategory(8LL);
    id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      id Property = *(id *)(*(void *)(a1 + 32) + 16LL);
      if (Property) {
        id Property = objc_getProperty(Property, v9, 16LL, 1);
      }
      id v17 = Property;
      uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue([v17 hashedDescription]);
      int v19 = 138543618;
      uint64_t v20 = v18;
      __int16 v21 = 2112;
      id v22 = v6;
      _os_log_error_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_ERROR,  "Errored out for auth challenge to:%{public}@ with error:%@",  (uint8_t *)&v19,  0x16u);
    }
  }

  uint64_t v10 = ASDLogHandleForCategory(8LL);
  id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
  {
    id v13 = *(id *)(*(void *)(a1 + 32) + 16LL);
    if (v13) {
      id v13 = objc_getProperty(v13, v12, 16LL, 1);
    }
    id v14 = v13;
    uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v14 hashedDescription]);
    int v19 = 138543362;
    uint64_t v20 = v15;
    _os_log_debug_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEBUG,  "Received response to authentication challenge for %{public}@",  (uint8_t *)&v19,  0xCu);
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
}

void sub_1001DD390(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v7 = a3;
  if (v7)
  {
    uint64_t v8 = ASDLogHandleForCategory(8LL, v6);
    uint64_t v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      uint64_t v10 = *(void *)(a1 + 32);
      int v11 = 138543618;
      uint64_t v12 = v10;
      __int16 v13 = 2114;
      id v14 = v7;
      _os_log_error_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_ERROR,  "[%{public}@] Error in dialog task: %{public}@",  (uint8_t *)&v11,  0x16u);
    }
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
}

id sub_1001DD4C8(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    NSErrorUserInfoKey v8 = NSUnderlyingErrorKey;
    uint64_t v3 = ASDErrorWithSafeUserInfo(a2);
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
    uint64_t v9 = v4;
    id v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v9,  &v8,  1LL));
  }

  else
  {
    id v5 = 0LL;
  }

  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  @"PurchaseHistoryErrorDomain",  a1,  v5));

  return v6;
}

id sub_1001DD5A0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    NSErrorUserInfoKey v8 = NSUnderlyingErrorKey;
    uint64_t v3 = ASDErrorWithSafeUserInfo(a2);
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
    uint64_t v9 = v4;
    id v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v9,  &v8,  1LL));
  }

  else
  {
    id v5 = 0LL;
  }

  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  @"PurchaseHistoryRequestOperationErrorDomain",  a1,  v5));

  return v6;
}

void *sub_1001DD814(void *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    v10.receiver = a1;
    v10.super_class = (Class)&OBJC_CLASS___URLRequest;
    a1 = objc_msgSendSuper2(&v10, "init");
    if (a1)
    {
      id v4 = sub_100255630((uint64_t)&OBJC_CLASS___URLBag);
      uint64_t v5 = objc_claimAutoreleasedReturnValue(v4);
      uint64_t v6 = (void *)a1[1];
      a1[1] = v5;

      id v7 = [v3 copy];
      NSErrorUserInfoKey v8 = (void *)a1[2];
      a1[2] = v7;
    }
  }

  return a1;
}

void sub_1001DD8A0(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    uint64_t v5 = sub_1001DDB40((uint64_t *)objc_alloc(&OBJC_CLASS___URLRequestEncoder), *(void **)(a1 + 16));
    uint64_t v6 = *(void **)(a1 + 16);
    if (!v6 || (id v7 = objc_getProperty(v6, v4, 112LL, 1)) == 0LL)
    {
      id v8 = sub_10029426C(*(void *)(a1 + 16));
      id v7 = (id)objc_claimAutoreleasedReturnValue(v8);
    }

    id v9 = sub_100293BA4(*(void *)(a1 + 16));
    objc_super v10 = (void *)objc_claimAutoreleasedReturnValue(v9);

    uint64_t v11 = sub_100294414(*(void *)(a1 + 16));
    uint64_t v12 = *(void *)(a1 + 16);
    if (v10)
    {
      id v13 = sub_100293BA4(v12);
      id v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
      uint64_t v15 = objc_claimAutoreleasedReturnValue([v5 requestWithMethod:v11 bagURL:v14 parameters:v7]);
    }

    else
    {
      id v16 = sub_1002945E8(v12);
      id v14 = (void *)objc_claimAutoreleasedReturnValue(v16);
      uint64_t v15 = objc_claimAutoreleasedReturnValue([v5 requestWithMethod:v11 URL:v14 parameters:v7]);
    }

    id v17 = (void *)v15;

    v21[0] = _NSConcreteStackBlock;
    v21[1] = 3221225472LL;
    void v21[2] = sub_1001DDA44;
    v21[3] = &unk_1003EBDD0;
    void v21[4] = a1;
    uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue([v17 thenWithBlock:v21]);
    v19[0] = _NSConcreteStackBlock;
    v19[1] = 3221225472LL;
    v19[2] = sub_1001DDAAC;
    v19[3] = &unk_1003EBDF8;
    id v20 = v3;
    [v18 addFinishBlock:v19];
  }
}

id sub_1001DDA44(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_10018B85C((uint64_t)&OBJC_CLASS___URLSessionManager);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  id v6 = sub_10018B944(v5, *(void **)(*(void *)(a1 + 32) + 16LL), v3);
  id v7 = (void *)objc_claimAutoreleasedReturnValue(v6);

  return v7;
}

void sub_1001DDAAC(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a1 + 32);
  id v5 = a2;
  uint64_t v6 = ASDErrorWithSafeUserInfo(a3);
  id v7 = (id)objc_claimAutoreleasedReturnValue(v6);
  (*(void (**)(uint64_t, id, id))(v4 + 16))(v4, v5, v7);
}

uint64_t *sub_1001DDB40(uint64_t *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    id v4 = sub_100255630((uint64_t)&OBJC_CLASS___URLBag);
    id v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
    v24.receiver = a1;
    v24.super_class = (Class)&OBJC_CLASS___URLRequestEncoder;
    a1 = (uint64_t *)objc_msgSendSuper2(&v24, "initWithBag:", v5);

    if (a1)
    {
      id v6 = [v3 copy];
      id v7 = (void *)a1[1];
      a1[1] = (uint64_t)v6;

      [a1 setMescalType:1];
      id v8 = sub_100293A2C(a1[1]);
      id v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
      [a1 setAccount:v9];

      id v10 = sub_100293D2C(a1[1]);
      uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
      if (!v11)
      {
        id v12 = sub_1001F4ADC((uint64_t)&OBJC_CLASS___AMSProcessInfo);
        uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(v12);
      }

      [a1 setClientInfo:v11];
      id v13 = sub_1002945E8(a1[1]);
      id v14 = (void *)objc_claimAutoreleasedReturnValue(v13);

      if (v14) {
        [a1 setUrlKnownToBeTrusted:sub_100294790(a1[1])];
      }
      [a1 setCompressRequestBody:sub_100293E8C(a1[1])];
      id v15 = sub_10029426C(a1[1]);
      id v16 = (void *)objc_claimAutoreleasedReturnValue(v15);

      if (v16)
      {
        unint64_t v17 = a1[1];
        if (v17) {
          unint64_t v17 = *(void *)(v17 + 96);
        }
        if (v17 <= 1) {
          uint64_t v18 = 1LL;
        }
        else {
          uint64_t v18 = v17;
        }
        [a1 setRequestEncoding:v18];
      }

      id v19 = sub_100293FF4(a1[1]);
      id v20 = (void *)objc_claimAutoreleasedReturnValue(v19);
      __int16 v21 = v20;
      if (v20)
      {
        id v22 = (void *)objc_claimAutoreleasedReturnValue([v20 description]);
        [a1 setLogUUID:v22];
      }
    }
  }

  return a1;
}

id sub_1001DE044(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return [*(id *)(a1 + 32) setValue:a3 forHTTPHeaderField:a2];
}

RedownloadRecoveryTask *sub_1001DE064(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_self(a1);
  id v4 = objc_alloc_init(&OBJC_CLASS___RedownloadRecoveryTask);
  v4->_externalID = (NSUUID *)[v3 persistentID];
  id v5 = sub_1001E26D0(v3, (uint64_t)@"bundle_id");
  uint64_t v6 = objc_claimAutoreleasedReturnValue(v5);
  CFErrorRef error = v4->super._error;
  v4->super._CFErrorRef error = (NSError *)v6;

  id v8 = sub_1001E26D0(v3, (uint64_t)@"vendor_name");
  uint64_t v9 = objc_claimAutoreleasedReturnValue(v8);
  softwarePlatform = (void *)v4->_softwarePlatform;
  v4->_softwarePlatform = v9;

  LOBYTE(v4->_recoveryCount) = sub_10021B578(v3) ^ 1;
  id v11 = sub_1001E25D0(v3, (uint64_t)@"item_id");
  uint64_t v12 = objc_claimAutoreleasedReturnValue(v11);
  clientID = v4->_clientID;
  v4->_clientID = (NSString *)v12;

  id v14 = sub_1001E2734(v3, (uint64_t)@"external_id");
  uint64_t v15 = objc_claimAutoreleasedReturnValue(v14);
  bundleID = v4->_bundleID;
  v4->_bundleID = (NSString *)v15;

  id v17 = sub_1001E26D0(v3, (uint64_t)@"log_code");
  uint64_t v18 = objc_claimAutoreleasedReturnValue(v17);
  installID = (void *)v4->_installID;
  v4->_installID = v18;

  *(void *)&v4->super._success = sub_1001E2698(v3, (uint64_t)@"account_id");
  v4->_logCode = (NSString *)sub_1001E2698(v3, (uint64_t)@"software_platform");
  id v20 = sub_1001E26D0(v3, (uint64_t)@"client_id");
  uint64_t v21 = objc_claimAutoreleasedReturnValue(v20);
  accountID = (void *)v4->_accountID;
  v4->_accountID = v21;

  uint64_t v23 = (uint64_t)sub_1001E2698(v3, (uint64_t)@"recovery_count");
  v4->_logKey = (LogKey *)((v23 & ~(v23 >> 63)) + 1);
  return v4;
}

void sub_1001DE718(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([a2 items]);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 firstObject]);

  unsigned int v8 = [v7 success];
  uint64_t v9 = ASDLogHandleForCategory(2LL);
  id v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
  id v11 = v10;
  if (!v8)
  {
    if (!os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      goto LABEL_6;
    }
    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) logKey]);
    int v13 = 138412546;
    id v14 = v12;
    __int16 v15 = 2114;
    id v16 = v5;
    _os_log_error_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_ERROR,  "[%@] Failed to re-purchase failed install error: %{public}@",  (uint8_t *)&v13,  0x16u);
    goto LABEL_4;
  }

  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) logKey]);
    int v13 = 138412290;
    id v14 = v12;
    _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "[%@] Successfully to re-purchased failed install",  (uint8_t *)&v13,  0xCu);
LABEL_4:
  }

id sub_1001DE930(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = v5;
  if (!a1)
  {
    id v13 = 0LL;
    goto LABEL_25;
  }

  id v7 = (char *)[v5 rangeOfString:@"." options:4];
  if (v7 != (char *)0x7FFFFFFFFFFFFFFFLL)
  {
    id v14 = v7;
    id v11 = (void *)objc_claimAutoreleasedReturnValue([v6 substringToIndex:v7]);
    __int16 v15 = &selRef_refreshUpdateCountWithReplyHandler_;
    id WeakRetained = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 16) objectForKeyedSubscript:v11]);
    if (WeakRetained) {
      goto LABEL_8;
    }
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 8));
    __int128 v40 = 0u;
    __int128 v41 = 0u;
    __int128 v42 = 0u;
    __int128 v43 = 0u;
    id v18 = (id)objc_claimAutoreleasedReturnValue([v11 componentsSeparatedByString:@"."]);
    id v20 = [v18 countByEnumeratingWithState:&v40 objects:v44 count:16];
    if (v20)
    {
      id v22 = v20;
      id v37 = v14;
      uint64_t v38 = a1;
      uint64_t v39 = a2;
      uint64_t v23 = *(void *)v41;
      char v24 = 1;
      while (2)
      {
        id v25 = 0LL;
        id v26 = WeakRetained;
        do
        {
          if (*(void *)v41 != v23) {
            objc_enumerationMutation(v18);
          }
          uint64_t v27 = *(void *)(*((void *)&v40 + 1) + 8LL * (void)v25);
          uint64_t v28 = objc_opt_class(&OBJC_CLASS___NSMutableDictionary, v21);
          char isKindOfClass = objc_opt_isKindOfClass(v26, v28);
          id WeakRetained = (id)objc_claimAutoreleasedReturnValue([v26 objectForKeyedSubscript:v27]);

          uint64_t v31 = objc_opt_class(&OBJC_CLASS___NSDictionary, v30);
          if ((objc_opt_isKindOfClass(WeakRetained, v31) & 1) == 0)
          {

            id v13 = 0LL;
            goto LABEL_23;
          }

          v24 &= isKindOfClass ^ 1;
          id v25 = (char *)v25 + 1;
          id v26 = WeakRetained;
        }

        while (v22 != v25);
        id v22 = [v18 countByEnumeratingWithState:&v40 objects:v44 count:16];
        if (v22) {
          continue;
        }
        break;
      }

      a1 = v38;
      a2 = v39;
      id v14 = v37;
      __int16 v15 = &selRef_refreshUpdateCountWithReplyHandler_;
      if ((v24 & 1) == 0) {
        goto LABEL_30;
      }
    }

    else
    {
    }

    id v33 = *(void **)(a1 + *((int *)v15 + 746));
    if (!v33)
    {
      uint64_t v34 = -[NSMutableDictionary initWithCapacity:]( objc_alloc(&OBJC_CLASS___NSMutableDictionary),  "initWithCapacity:",  5LL);
      uint64_t v35 = *((int *)v15 + 746);
      __int16 v36 = *(void **)(a1 + v35);
      *(void *)(a1 + v35) = v34;

      id v33 = *(void **)(a1 + *((int *)v15 + 746));
    }

    [v33 setObject:WeakRetained forKeyedSubscript:v11];
LABEL_30:

LABEL_8:
    id v17 = (void *)objc_claimAutoreleasedReturnValue([v6 substringFromIndex:v14 + 1]);
    id v18 = (id)objc_claimAutoreleasedReturnValue([WeakRetained objectForKeyedSubscript:v17]);

    if ((objc_opt_isKindOfClass(v18, a2) & 1) != 0) {
      id v19 = v18;
    }
    else {
      id v19 = 0LL;
    }
    id v13 = v19;
LABEL_23:

    goto LABEL_24;
  }

  unsigned int v8 = (id *)(a1 + 8);
  id v9 = v6;
  id v10 = objc_loadWeakRetained(v8);
  id v11 = (void *)objc_claimAutoreleasedReturnValue([v10 objectForKeyedSubscript:v9]);

  if ((objc_opt_isKindOfClass(v11, a2) & 1) != 0) {
    uint64_t v12 = v11;
  }
  else {
    uint64_t v12 = 0LL;
  }
  id v13 = v12;
LABEL_24:

LABEL_25:
  return v13;
}

id sub_1001DEC94(id a1, void *a2)
{
  id v2 = a1;
  if (a1)
  {
    id v3 = a2;
    uint64_t v5 = objc_opt_class(&OBJC_CLASS___NSArray, v4);
    id v6 = sub_1001DECF4(v2, v5);
    id v2 = (id)objc_claimAutoreleasedReturnValue(v6);
  }

  return v2;
}

id sub_1001DECF4(void *a1, uint64_t a2)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "objectForKeyedSubscript:"));
  if ((objc_opt_isKindOfClass(v3, a2) & 1) != 0) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = 0LL;
  }
  id v5 = v4;

  return v5;
}

id sub_1001DED3C(id a1, void *a2)
{
  id v2 = a1;
  if (a1)
  {
    id v3 = a2;
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "_tcr_associatedReader"));
    uint64_t v6 = objc_opt_class(&OBJC_CLASS___NSArray, v5);
    id v7 = sub_1001DE930((uint64_t)v4, v6, v3);
    id v2 = (id)objc_claimAutoreleasedReturnValue(v7);
  }

  return v2;
}

id sub_1001DEDAC(void *a1, void *a2, id a3)
{
  if (!a1) {
    return 0LL;
  }
  id v4 = sub_1001DEDF8(a1, a2);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  uint64_t v6 = v5;
  if (v5) {
    a3 = [v5 BOOLValue];
  }

  return a3;
}

id sub_1001DEDF8(void *a1, void *a2)
{
  id v4 = a2;
  if (a1)
  {
    uint64_t v5 = objc_opt_class(&OBJC_CLASS___NSNumber, v3);
    id v6 = sub_1001DECF4(a1, v5);
    unsigned int v8 = (void *)objc_claimAutoreleasedReturnValue(v6);
    if (!v8)
    {
      uint64_t v9 = objc_opt_class(&OBJC_CLASS___NSString, v7);
      id v10 = sub_1001DECF4(a1, v9);
      id v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
      if (v11)
      {
        uint64_t v12 = objc_alloc_init(&OBJC_CLASS___NSNumberFormatter);
        -[NSNumberFormatter setNumberStyle:](v12, "setNumberStyle:", 1LL);
        unsigned int v8 = (void *)objc_claimAutoreleasedReturnValue(-[NSNumberFormatter numberFromString:](v12, "numberFromString:", v11));
      }

      else
      {
        unsigned int v8 = 0LL;
      }
    }
  }

  else
  {
    unsigned int v8 = 0LL;
  }

  return v8;
}

id sub_1001DEEC4(void *a1, void *a2, id a3)
{
  if (!a1) {
    return 0LL;
  }
  id v4 = sub_1001DEF10(a1, a2);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  id v6 = v5;
  if (v5) {
    a3 = [v5 BOOLValue];
  }

  return a3;
}

id sub_1001DEF10(void *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "_tcr_associatedReader"));
    uint64_t v6 = objc_opt_class(&OBJC_CLASS___NSNumber, v5);
    id v7 = sub_1001DE930((uint64_t)v4, v6, v3);
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(v7);
    if (!v9)
    {
      uint64_t v10 = objc_opt_class(&OBJC_CLASS___NSString, v8);
      id v11 = sub_1001DE930((uint64_t)v4, v10, v3);
      uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
      if (v12)
      {
        id v13 = objc_alloc_init(&OBJC_CLASS___NSNumberFormatter);
        -[NSNumberFormatter setNumberStyle:](v13, "setNumberStyle:", 1LL);
        uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(-[NSNumberFormatter numberFromString:](v13, "numberFromString:", v12));
      }

      else
      {
        uint64_t v9 = 0LL;
      }
    }
  }

  else
  {
    uint64_t v9 = 0LL;
  }

  return v9;
}

NSData *sub_1001DEFF8(void *a1, void *a2)
{
  id v4 = a2;
  if (a1)
  {
    uint64_t v5 = objc_opt_class(&OBJC_CLASS___NSData, v3);
    id v6 = sub_1001DECF4(a1, v5);
    uint64_t v8 = (NSData *)objc_claimAutoreleasedReturnValue(v6);
    if (!v8)
    {
      uint64_t v9 = objc_opt_class(&OBJC_CLASS___NSString, v7);
      id v10 = sub_1001DECF4(a1, v9);
      id v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
      if (v11) {
        uint64_t v8 = -[NSData initWithBase64EncodedString:options:]( objc_alloc(&OBJC_CLASS___NSData),  "initWithBase64EncodedString:options:",  v11,  0LL);
      }
      else {
        uint64_t v8 = 0LL;
      }
    }
  }

  else
  {
    uint64_t v8 = 0LL;
  }

  return v8;
}

NSData *sub_1001DF0AC(void *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "_tcr_associatedReader"));
    uint64_t v6 = objc_opt_class(&OBJC_CLASS___NSData, v5);
    id v7 = sub_1001DE930((uint64_t)v4, v6, v3);
    uint64_t v9 = (NSData *)objc_claimAutoreleasedReturnValue(v7);
    if (!v9)
    {
      uint64_t v10 = objc_opt_class(&OBJC_CLASS___NSString, v8);
      id v11 = sub_1001DE930((uint64_t)v4, v10, v3);
      uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
      if (v12) {
        uint64_t v9 = -[NSData initWithBase64EncodedString:options:]( objc_alloc(&OBJC_CLASS___NSData),  "initWithBase64EncodedString:options:",  v12,  0LL);
      }
      else {
        uint64_t v9 = 0LL;
      }
    }
  }

  else
  {
    uint64_t v9 = 0LL;
  }

  return v9;
}

id sub_1001DF17C(id a1, void *a2)
{
  id v2 = a1;
  if (a1)
  {
    id v3 = a2;
    uint64_t v5 = objc_opt_class(&OBJC_CLASS___NSDate, v4);
    id v6 = sub_1001DECF4(v2, v5);
    id v2 = (id)objc_claimAutoreleasedReturnValue(v6);
  }

  return v2;
}

id sub_1001DF1DC(id a1, void *a2)
{
  id v2 = a1;
  if (a1)
  {
    id v3 = a2;
    uint64_t v5 = objc_opt_class(&OBJC_CLASS___NSDictionary, v4);
    id v6 = sub_1001DECF4(v2, v5);
    id v2 = (id)objc_claimAutoreleasedReturnValue(v6);
  }

  return v2;
}

id sub_1001DF23C(id a1, void *a2)
{
  id v2 = a1;
  if (a1)
  {
    id v3 = a2;
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "_tcr_associatedReader"));
    uint64_t v6 = objc_opt_class(&OBJC_CLASS___NSDictionary, v5);
    id v7 = sub_1001DE930((uint64_t)v4, v6, v3);
    id v2 = (id)objc_claimAutoreleasedReturnValue(v7);
  }

  return v2;
}

id sub_1001DF2AC(void *a1, void *a2)
{
  id v4 = a2;
  if (a1)
  {
    uint64_t v5 = objc_opt_class(&OBJC_CLASS___NSNumber, v3);
    id v6 = sub_1001DECF4(a1, v5);
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(v6);
    if (!v8)
    {
      uint64_t v9 = objc_opt_class(&OBJC_CLASS___NSString, v7);
      id v10 = sub_1001DECF4(a1, v9);
      id v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
      if (v11)
      {
        uint64_t v14 = 0LL;
        uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSScanner scannerWithString:](&OBJC_CLASS___NSScanner, "scannerWithString:", v11));
        uint64_t v8 = 0LL;
      }

      else
      {
        uint64_t v8 = 0LL;
      }
    }
  }

  else
  {
    uint64_t v8 = 0LL;
  }

  return v8;
}

id sub_1001DF39C(void *a1, void *a2, id a3)
{
  id v6 = a2;
  if (a1)
  {
    uint64_t v7 = objc_opt_class(&OBJC_CLASS___NSNumber, v5);
    id v8 = sub_1001DECF4(a1, v7);
    id v10 = (void *)objc_claimAutoreleasedReturnValue(v8);
    if (!v10)
    {
      uint64_t v11 = objc_opt_class(&OBJC_CLASS___NSString, v9);
      id v12 = sub_1001DECF4(a1, v11);
      id v10 = (void *)objc_claimAutoreleasedReturnValue(v12);
    }
  }

  else
  {
    a3 = 0LL;
  }

  return a3;
}

id sub_1001DF450(void *a1, void *a2, id a3)
{
  id v5 = a2;
  if (a1)
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "_tcr_associatedReader"));
    uint64_t v8 = objc_opt_class(&OBJC_CLASS___NSNumber, v7);
    id v9 = sub_1001DE930((uint64_t)v6, v8, v5);
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(v9);
    if (!v11)
    {
      uint64_t v12 = objc_opt_class(&OBJC_CLASS___NSString, v10);
      id v13 = sub_1001DE930((uint64_t)v6, v12, v5);
      uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(v13);
    }
  }

  else
  {
    a3 = 0LL;
  }

  return a3;
}

BOOL sub_1001DF518(BOOL a1, void *a2)
{
  BOOL v2 = a1;
  if (a1)
  {
    id v3 = a2;
    uint64_t v5 = objc_opt_class(&OBJC_CLASS___NSNull, v4);
    id v6 = sub_1001DECF4((void *)v2, v5);
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(v6);

    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSNull null](&OBJC_CLASS___NSNull, "null"));
    BOOL v2 = v7 == v8;
  }

  return v2;
}

id sub_1001DF594(id a1, void *a2)
{
  id v2 = a1;
  if (a1)
  {
    id v3 = a2;
    uint64_t v5 = objc_opt_class(&OBJC_CLASS___NSString, v4);
    id v6 = sub_1001DECF4(v2, v5);
    id v2 = (id)objc_claimAutoreleasedReturnValue(v6);
  }

  return v2;
}

id sub_1001DF5F4(id a1, void *a2)
{
  id v2 = a1;
  if (a1)
  {
    id v3 = a2;
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "_tcr_associatedReader"));
    uint64_t v6 = objc_opt_class(&OBJC_CLASS___NSString, v5);
    id v7 = sub_1001DE930((uint64_t)v4, v6, v3);
    id v2 = (id)objc_claimAutoreleasedReturnValue(v7);
  }

  return v2;
}

id sub_1001DF664(id result, void *a2)
{
  if (result)
  {
    id v2 = sub_1001DEDF8(result, a2);
    id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
    id v4 = [v3 unsignedLongLongValue];

    return v4;
  }

  return result;
}

id sub_1001DF69C(void *a1, void *a2)
{
  if (a1)
  {
    id v2 = sub_1001DF594(a1, a2);
    id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
    if (v3) {
      id v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL URLWithString:](&OBJC_CLASS___NSURL, "URLWithString:", v3));
    }
    else {
      id v4 = 0LL;
    }
  }

  else
  {
    id v4 = 0LL;
  }

  return v4;
}

PurchaseInfo *sub_1001DF7D0(void *a1, void *a2)
{
  id v3 = a2;
  if (!a1)
  {
    id v4 = 0LL;
    goto LABEL_31;
  }

  id v4 = objc_alloc_init(&OBJC_CLASS___PurchaseInfo);
  -[PurchaseInfo setRequestToken:](v4, "setRequestToken:", v3);
  -[PurchaseInfo setPurchase:](v4, "setPurchase:", a1);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([a1 presentingSceneBundleIdentifier]);
  -[PurchaseInfo setPresentingSceneBundleIdentifier:](v4, "setPresentingSceneBundleIdentifier:", v5);

  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([a1 presentingSceneIdentifier]);
  -[PurchaseInfo setPresentingSceneIdentifier:](v4, "setPresentingSceneIdentifier:", v6);

  id v7 = objc_alloc(&OBJC_CLASS___AMSBuyParams);
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([a1 buyParameters]);
  id v9 = -[AMSBuyParams initWithString:](v7, "initWithString:", v8);
  -[PurchaseInfo setBuyParams:](v4, "setBuyParams:", v9);

  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([a1 metricsOverlay]);
  -[PurchaseInfo setMetricsOverlay:](v4, "setMetricsOverlay:", v10);

  if ([a1 isDSIDLess])
  {
    unsigned int v11 = 1;
  }

  else
  {
    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([a1 bagKey]);
    if (v12)
    {
      id v13 = (void *)objc_claimAutoreleasedReturnValue([a1 bagKey]);
      unsigned int v11 = [v13 isEqualToString:@"downloadProduct"];
    }

    else
    {
      unsigned int v11 = 0;
    }
  }

  -[PurchaseInfo setRequireUniversal:](v4, "setRequireUniversal:", [a1 installUniversalVariant]);
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([a1 bundleID]);
  -[PurchaseInfo setBundleID:](v4, "setBundleID:", v14);

  __int16 v15 = (void *)objc_claimAutoreleasedReturnValue([a1 vendorName]);
  -[PurchaseInfo setVendorName:](v4, "setVendorName:", v15);

  id v16 = (void *)objc_claimAutoreleasedReturnValue([a1 itemName]);
  -[PurchaseInfo setItemName:](v4, "setItemName:", v16);

  if ([a1 isUpdate])
  {
    -[PurchaseInfo setPurchaseType:](v4, "setPurchaseType:", 4LL);
    -[PurchaseInfo setLogCode:](v4, "setLogCode:", @"UPD");
    if ([a1 isBackgroundUpdate])
    {
      -[PurchaseInfo setDiscretionary:](v4, "setDiscretionary:", 1LL);
      -[PurchaseInfo setUpdateType:](v4, "setUpdateType:", 1LL);
      id v17 = &off_10040C3A0;
    }

    else
    {
      -[PurchaseInfo setUpdateType:](v4, "setUpdateType:", 2LL);
      id v17 = &off_10040C3B8;
    }
  }

  else
  {
    if (!v11)
    {
      -[PurchaseInfo setPurchaseType:](v4, "setPurchaseType:", 0LL);
      __int128 v46 = (void *)objc_claimAutoreleasedReturnValue(-[PurchaseInfo buyParams](v4, "buyParams"));
      __int128 v47 = (void *)objc_claimAutoreleasedReturnValue([v46 parameterForKey:AMSBuyParamPropertyPricingParameters]);
      unsigned int v48 = [v47 isEqualToString:@"GAME"];

      if (v48)
      {
        -[PurchaseInfo setArcade:](v4, "setArcade:", 1LL);
        id v49 = @"ABY";
      }

      else
      {
        id v49 = @"BUY";
      }

      -[PurchaseInfo setLogCode:](v4, "setLogCode:", v49);
      if (v3) {
        goto LABEL_15;
      }
LABEL_38:
      id Property = 0LL;
      goto LABEL_16;
    }

    -[PurchaseInfo setPurchaseType:](v4, "setPurchaseType:", 2LL);
    -[PurchaseInfo setLogCode:](v4, "setLogCode:", @"DIS");
    id v17 = &off_10040C3D0;
  }

  -[PurchaseInfo setMetricsType:](v4, "setMetricsType:", v17);
  if (!v3) {
    goto LABEL_38;
  }
LABEL_15:
  id Property = objc_getProperty(v3, v18, 24LL, 1);
LABEL_16:
  id v20 = Property;
  -[PurchaseInfo setExternalID:](v4, "setExternalID:", v20);

  uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue([a1 accountIdentifier]);
  id v22 = v21;
  if (v21 && ([v21 isEqualToNumber:&off_10040C3E8] & 1) == 0)
  {
    uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue(+[ACAccountStore ams_sharedAccountStore](&OBJC_CLASS___ACAccountStore, "ams_sharedAccountStore"));
    char v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v23, "ams_iTunesAccountWithDSID:", v22));
    -[PurchaseInfo setAccount:](v4, "setAccount:", v24);
  }

  id v25 = (void *)objc_claimAutoreleasedReturnValue([a1 affiliateIdentifier]);

  if (v25)
  {
    id v26 = (void *)objc_claimAutoreleasedReturnValue(-[PurchaseInfo buyParams](v4, "buyParams"));
    [v26 setParameter:AMSBuyParamPropertyAffiliateId forKey:AMSBuyParamPropertyAffiliateId];
  }

  uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue([a1 itemID]);
  -[PurchaseInfo setItemID:](v4, "setItemID:", v27);

  uint64_t v28 = (void *)objc_claimAutoreleasedReturnValue(-[PurchaseInfo itemID](v4, "itemID"));
  if (!v28)
  {
    id v29 = (void *)objc_claimAutoreleasedReturnValue(-[PurchaseInfo buyParams](v4, "buyParams"));
    id v30 = sub_1002E32B4(v29, AMSBuyParamPropertyItemId);
    uint64_t v31 = (void *)objc_claimAutoreleasedReturnValue(v30);
    -[PurchaseInfo setItemID:](v4, "setItemID:", v31);
  }

  id v32 = v3;
  id v33 = (void *)objc_claimAutoreleasedReturnValue([a1 clientID]);

  if (!v33)
  {
    __int16 v36 = (AMSProcessInfo *)objc_claimAutoreleasedReturnValue([v32 processInfo]);
    if (v36) {
      goto LABEL_26;
    }
    goto LABEL_25;
  }

  uint64_t v34 = objc_alloc(&OBJC_CLASS___AMSProcessInfo);
  uint64_t v35 = (void *)objc_claimAutoreleasedReturnValue([a1 clientID]);
  __int16 v36 = -[AMSProcessInfo initWithBundleIdentifier:](v34, "initWithBundleIdentifier:", v35);

  if (!v36)
  {
LABEL_25:
    id v37 = sub_1001F4ADC((uint64_t)&OBJC_CLASS___AMSProcessInfo);
    __int16 v36 = (AMSProcessInfo *)objc_claimAutoreleasedReturnValue(v37);
  }

id sub_1001E03D4(uint64_t a1, uint64_t a2)
{
  id v2 = *(void **)(a1 + 32);
  if (a2) {
    return [v2 completeWithError:a2];
  }
  else {
    return [v2 completeWithSuccess];
  }
}

_BYTE *sub_1001E0440(_BYTE *result)
{
  if (result)
  {
    id v1 = result;
    [result willChangeValueForKey:@"isFinished"];
    [v1 willChangeValueForKey:@"isExecuting"];
    [v1 lock];
    v1[40] = 0;
    v1[41] = 1;
    [v1 unlock];
    [v1 didChangeValueForKey:@"isExecuting"];
    return [v1 didChangeValueForKey:@"isFinished"];
  }

  return result;
}

void *sub_1001E0518(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  if (a1)
  {
    v17.receiver = a1;
    v17.super_class = (Class)&OBJC_CLASS___PushConnectionMessageHistory;
    a1 = objc_msgSendSuper2(&v17, "init");
    if (a1)
    {
      objc_initWeak(&location, a1);
      uint64_t v6 = objc_alloc_init(&OBJC_CLASS___UnfairLock);
      id v7 = (void *)a1[2];
      a1[2] = v6;

      uint64_t v8 = objc_claimAutoreleasedReturnValue(+[NSMutableArray arrayWithCapacity:](&OBJC_CLASS___NSMutableArray, "arrayWithCapacity:", 11LL));
      id v9 = (void *)a1[3];
      a1[3] = v8;

      dispatch_queue_global_t global_queue = dispatch_get_global_queue(21LL, 0LL);
      unsigned int v11 = (void *)objc_claimAutoreleasedReturnValue(global_queue);
      v13[0] = _NSConcreteStackBlock;
      v13[1] = 3221225472LL;
      void v13[2] = sub_1001E066C;
      v13[3] = &unk_1003EBE70;
      objc_copyWeak(v15, &location);
      id v14 = v5;
      v15[1] = a3;
      a1[1] = os_state_add_handler(v11, v13);

      objc_destroyWeak(v15);
      objc_destroyWeak(&location);
    }
  }

  return a1;
}

void sub_1001E0658( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

_DWORD *sub_1001E066C(uint64_t a1)
{
  id WeakRetained = (void **)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = sub_10020CF28((uint64_t)&OBJC_CLASS___LogPushConnection, *(void **)(a1 + 32), WeakRetained[4]);
    id v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
    id v5 = WeakRetained[2];
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472LL;
    void v11[2] = sub_1001E0774;
    v11[3] = &unk_1003E9DC0;
    uint64_t v12 = WeakRetained;
    id v6 = v4;
    id v13 = v6;
    sub_1002C11C4(v5, v11);
    uint64_t v7 = *(void *)(a1 + 48);
    if (v7 == 2)
    {
      uint64_t v8 = "Push Connection - TestFlight";
    }

    else
    {
      if (v7 != 1)
      {
        id v9 = 0LL;
        goto LABEL_9;
      }

      uint64_t v8 = "Push Connection - App Store";
    }

    id v9 = sub_1002D5F64(v6, (uint64_t)v8);
LABEL_9:

    goto LABEL_10;
  }

  id v9 = 0LL;
LABEL_10:

  return v9;
}

void sub_1001E0774(uint64_t a1)
{
  __int128 v11 = 0u;
  __int128 v12 = 0u;
  __int128 v9 = 0u;
  __int128 v10 = 0u;
  id v2 = *(id *)(*(void *)(a1 + 32) + 24LL);
  id v3 = [v2 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v10;
    do
    {
      id v6 = 0LL;
      do
      {
        if (*(void *)v10 != v5) {
          objc_enumerationMutation(v2);
        }
        uint64_t v7 = *(void *)(a1 + 40);
        uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*((void *)&v9 + 1) + 8 * (void)v6), "description", (void)v9));
        sub_10020F324(v7, v8);

        id v6 = (char *)v6 + 1;
      }

      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v9 objects:v13 count:16];
    }

    while (v4);
  }
}

void sub_1001E08D0(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    id v4 = *(void **)(a1 + 16);
    v6[1] = 3221225472LL;
    _DWORD v6[2] = sub_1001E0950;
    v6[3] = &unk_1003E9DC0;
    void v6[4] = a1;
    id v5 = v3;
    v6[0] = _NSConcreteStackBlock;
    id v7 = v3;
    sub_1002C11C4(v4, v6);

    id v3 = v5;
  }
}

id sub_1001E0950(uint64_t a1)
{
  id result = [*(id *)(*(void *)(a1 + 32) + 24) count];
  return result;
}

void sub_1001E0E8C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
}

uint64_t sub_1001E0EB0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1001E0EC0(uint64_t a1)
{
}

void sub_1001E0EC8(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v7 = a4;
  uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8LL);
  __int128 v9 = *(void **)(v8 + 40);
  *(void *)(v8 + 40) = v6;
  id v13 = v6;

  uint64_t v10 = *(void *)(*(void *)(a1 + 48) + 8LL);
  __int128 v11 = *(void **)(v10 + 40);
  *(void *)(v10 + 40) = v7;
  id v12 = v7;

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

id sub_1001E0FA4(void *a1, id *a2)
{
  *a1 = *a2;
  id result = a2[1];
  a1[1] = result;
  return result;
}

void sub_1001E0FDC(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *a2 = 0LL;
  id v5 = *(void **)a1;
  *(void *)a1 = v4;

  uint64_t v6 = a2[1];
  a2[1] = 0LL;
  id v7 = *(void **)(a1 + 8);
  *(void *)(a1 + _Block_object_dispose((const void *)(v14 - 136), 8) = v6;
}

void sub_1001E1020(uint64_t a1, void *a2, void *a3)
{
  src[0] = a2;
  src[1] = a3;
  if (a1)
  {
    objc_copyCppObjectAtomic((void *)(a1 + 128), src, (void (__cdecl *)(void *, const void *))sub_1001E0FDC);
  }

  else
  {
  }

void sub_1001E1078( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12)
{
}

void sub_1001E1094(uint64_t a1, void *a2, void *a3)
{
  src[0] = a2;
  src[1] = a3;
  if (a1)
  {
    objc_copyCppObjectAtomic((void *)(a1 + 144), src, (void (__cdecl *)(void *, const void *))sub_1001E0FDC);
  }

  else
  {
  }

void sub_1001E10EC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12)
{
}

void sub_1001E1108(uint64_t a1, void *a2, void *a3)
{
  src[0] = a2;
  src[1] = a3;
  if (a1)
  {
    objc_copyCppObjectAtomic((void *)(a1 + 160), src, (void (__cdecl *)(void *, const void *))sub_1001E0FDC);
  }

  else
  {
  }

void sub_1001E1160( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12)
{
}

void sub_1001E117C(uint64_t a1, void *a2, void *a3)
{
  src[0] = a2;
  src[1] = a3;
  if (a1)
  {
    objc_copyCppObjectAtomic((void *)(a1 + 176), src, (void (__cdecl *)(void *, const void *))sub_1001E0FDC);
  }

  else
  {
  }

void sub_1001E11D4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12)
{
}

void sub_1001E11F0(uint64_t a1, void *a2, void *a3)
{
  src[0] = a2;
  src[1] = a3;
  if (a1)
  {
    objc_copyCppObjectAtomic((void *)(a1 + 192), src, (void (__cdecl *)(void *, const void *))sub_1001E0FDC);
  }

  else
  {
  }

void sub_1001E1248( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12)
{
}

void sub_1001E1264(uint64_t a1, void *a2, void *a3)
{
  src[0] = a2;
  src[1] = a3;
  if (a1)
  {
    objc_copyCppObjectAtomic((void *)(a1 + 208), src, (void (__cdecl *)(void *, const void *))sub_1001E0FDC);
  }

  else
  {
  }

void sub_1001E12BC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12)
{
}

void sub_1001E12D8(uint64_t a1, void *a2, void *a3)
{
  src[0] = a2;
  src[1] = a3;
  if (a1)
  {
    objc_copyCppObjectAtomic((void *)(a1 + 224), src, (void (__cdecl *)(void *, const void *))sub_1001E0FDC);
  }

  else
  {
  }

void sub_1001E1330( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12)
{
}

void sub_1001E134C(uint64_t a1, void *a2, void *a3)
{
  src[0] = a2;
  src[1] = a3;
  if (a1)
  {
    objc_copyCppObjectAtomic((void *)(a1 + 240), src, (void (__cdecl *)(void *, const void *))sub_1001E0FDC);
  }

  else
  {
  }

void sub_1001E13A4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12)
{
}

void sub_1001E13C0(uint64_t a1, void *a2, void *a3)
{
  src[0] = a2;
  src[1] = a3;
  if (a1)
  {
    objc_copyCppObjectAtomic((void *)(a1 + 272), src, (void (__cdecl *)(void *, const void *))sub_1001E0FDC);
  }

  else
  {
  }

void sub_1001E1418( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12)
{
}

void sub_1001E1434(uint64_t a1, void *a2, void *a3)
{
  src[0] = a2;
  src[1] = a3;
  if (a1)
  {
    objc_copyCppObjectAtomic((void *)(a1 + 288), src, (void (__cdecl *)(void *, const void *))sub_1001E0FDC);
  }

  else
  {
  }

void sub_1001E148C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12)
{
}

void sub_1001E14A8(uint64_t a1, void *a2, void *a3)
{
  src[0] = a2;
  src[1] = a3;
  if (a1)
  {
    objc_copyCppObjectAtomic((void *)(a1 + 304), src, (void (__cdecl *)(void *, const void *))sub_1001E0FDC);
  }

  else
  {
  }

void sub_1001E1500( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12)
{
}

void sub_1001E151C(uint64_t a1, void *a2, void *a3)
{
  src[0] = a2;
  src[1] = a3;
  if (a1)
  {
    objc_copyCppObjectAtomic((void *)(a1 + 320), src, (void (__cdecl *)(void *, const void *))sub_1001E0FDC);
  }

  else
  {
  }

void sub_1001E1574( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12)
{
}

void sub_1001E1590(uint64_t a1, void *a2, void *a3)
{
  src[0] = a2;
  src[1] = a3;
  if (a1)
  {
    objc_copyCppObjectAtomic((void *)(a1 + 336), src, (void (__cdecl *)(void *, const void *))sub_1001E0FDC);
  }

  else
  {
  }

void sub_1001E15E8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12)
{
}

void sub_1001E1604(uint64_t a1, void *a2, void *a3)
{
  src[0] = a2;
  src[1] = a3;
  if (a1)
  {
    objc_copyCppObjectAtomic((void *)(a1 + 352), src, (void (__cdecl *)(void *, const void *))sub_1001E0FDC);
  }

  else
  {
  }

void sub_1001E165C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12)
{
}

id sub_1001E1834(uint64_t a1)
{
  if (qword_100462238 != -1) {
    dispatch_once(&qword_100462238, &stru_1003EBE90);
  }
  return (id)qword_100462230;
}

void sub_1001E1878(id a1)
{
  id v1 = objc_alloc_init(&OBJC_CLASS___DeviceStateMonitor);
  id v2 = (void *)qword_100462230;
  qword_100462230 = (uint64_t)v1;
}

BOOL sub_1001E1AD0(uint64_t a1)
{
  if (!a1) {
    return 0LL;
  }
  uint64_t v5 = 0LL;
  uint64_t v6 = &v5;
  uint64_t v7 = 0x2020000000LL;
  char v8 = 0;
  id v1 = *(dispatch_queue_s **)(a1 + 8);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  void v4[2] = sub_1001E1B74;
  v4[3] = &unk_1003E9BE0;
  void v4[4] = a1;
  void v4[5] = &v5;
  dispatch_sync(v1, v4);
  BOOL v2 = *((_BYTE *)v6 + 24) != 0;
  _Block_object_dispose(&v5, 8);
  return v2;
}

id sub_1001E1B74(uint64_t a1)
{
  id result = sub_1001E1BAC(*(id *)(a1 + 32), @"restoreFailures");
  *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = (_BYTE)result;
  return result;
}

id sub_1001E1BAC(id result, void *a2)
{
  if (result)
  {
    id v2 = a2;
    id v3 = sub_1002F9788((uint64_t)&OBJC_CLASS___AppDefaultsManager);
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([v4 objectForKeyedSubscript:v2]);

    id v6 = [v5 BOOLValue];
    return v6;
  }

  return result;
}

void sub_1001E1C1C(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = v3;
  if (a1)
  {
    uint64_t v5 = *(dispatch_queue_s **)(a1 + 8);
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472LL;
    _DWORD v6[2] = sub_1001E1CA4;
    v6[3] = &unk_1003E9D48;
    void v6[4] = a1;
    id v7 = v3;
    dispatch_async(v5, v6);
  }
}

uint64_t sub_1001E1CA4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  id v2 = sub_1001E1BAC(*(id *)(a1 + 32), @"fsEntitlements");
  return (*(uint64_t (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

void sub_1001E1CD8(uint64_t a1)
{
  if (a1)
  {
    uint64_t v1 = *(dispatch_queue_s **)(a1 + 8);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1001E1D34;
    block[3] = &unk_1003E9880;
    void block[4] = a1;
    dispatch_async(v1, block);
  }

void sub_1001E1D34(uint64_t a1)
{
  if ((sub_1001E1BAC(*(id *)(a1 + 32), @"fsEntitlements") & 1) == 0)
  {
    sub_1001E1E00(*(void *)(a1 + 32), @"fsEntitlements");
    uint64_t v2 = ASDLogHandleForCategory(14LL);
    id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      int v4 = 138543362;
      uint64_t v5 = @"fsEntitlements";
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "[Device] Marked once per boot complete for: %{public}@",  (uint8_t *)&v4,  0xCu);
    }
  }

void sub_1001E1E00(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    id v8 = v3;
    id v4 = sub_1002F9788((uint64_t)&OBJC_CLASS___AppDefaultsManager);
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
    id v6 = [v5 mutableCopy];

    id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKeyedSubscript:v8]);
    if (!v7) {
      [v6 setObject:&__kCFBooleanTrue forKeyedSubscript:v8];
    }
    sub_1002F97C0((uint64_t)&OBJC_CLASS___AppDefaultsManager, v6);

    id v3 = v8;
  }
}

void sub_1001E1E9C(uint64_t a1)
{
  if (a1)
  {
    uint64_t v1 = *(dispatch_queue_s **)(a1 + 8);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1001E1EF8;
    block[3] = &unk_1003E9880;
    void block[4] = a1;
    dispatch_async(v1, block);
  }

void sub_1001E1EF8(uint64_t a1)
{
  if ((sub_1001E1BAC(*(id *)(a1 + 32), @"restoreFailures") & 1) == 0)
  {
    sub_1001E1E00(*(void *)(a1 + 32), @"restoreFailures");
    uint64_t v2 = ASDLogHandleForCategory(14LL);
    id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      int v4 = 138543362;
      uint64_t v5 = @"restoreFailures";
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_INFO,  "[Device] Marked once per boot complete for: %{public}@",  (uint8_t *)&v4,  0xCu);
    }
  }

id sub_1001E21BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v3 = *(void **)(*(void *)(a1 + 32) + 16LL);
  if (a3) {
    return [v3 setObject:a3 forKey:a2];
  }
  else {
    return [v3 removeObjectForKey:a2];
  }
}

id sub_1001E2598(id result, uint64_t a2)
{
  if (result)
  {
    id v2 = sub_1001E25D0(result, a2);
    id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
    id v4 = [v3 BOOLValue];

    return v4;
  }

  return result;
}

id sub_1001E25D0(void *a1, uint64_t a2)
{
  if (a1)
  {
    id v2 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:a2]);
    uint64_t v4 = objc_opt_class(&OBJC_CLASS___NSNumber, v3);
    if ((objc_opt_isKindOfClass(v2, v4) & 1) != 0) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 0LL;
    }
    id v6 = v5;
  }

  else
  {
    id v6 = 0LL;
  }

  return v6;
}

id sub_1001E2634(void *a1, uint64_t a2)
{
  if (a1)
  {
    id v2 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:a2]);
    uint64_t v4 = objc_opt_class(&OBJC_CLASS___NSDate, v3);
    if ((objc_opt_isKindOfClass(v2, v4) & 1) != 0) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 0LL;
    }
    id v6 = v5;
  }

  else
  {
    id v6 = 0LL;
  }

  return v6;
}

id sub_1001E2698(id result, uint64_t a2)
{
  if (result)
  {
    id v2 = sub_1001E25D0(result, a2);
    uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
    id v4 = [v3 integerValue];

    return v4;
  }

  return result;
}

id sub_1001E26D0(void *a1, uint64_t a2)
{
  if (a1)
  {
    id v2 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:a2]);
    uint64_t v4 = objc_opt_class(&OBJC_CLASS___NSString, v3);
    if ((objc_opt_isKindOfClass(v2, v4) & 1) != 0) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 0LL;
    }
    id v6 = v5;
  }

  else
  {
    id v6 = 0LL;
  }

  return v6;
}

id sub_1001E2734(void *a1, uint64_t a2)
{
  if (a1)
  {
    id v2 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:a2]);
    uint64_t v4 = objc_opt_class(&OBJC_CLASS___NSUUID, v3);
    if ((objc_opt_isKindOfClass(v2, v4) & 1) != 0) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 0LL;
    }
    id v6 = v5;
  }

  else
  {
    id v6 = 0LL;
  }

  return v6;
}

id sub_1001E2798(void *a1, uint64_t a2)
{
  if (a1)
  {
    id v2 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:a2]);
    uint64_t v4 = objc_opt_class(&OBJC_CLASS___NSURL, v3);
    if ((objc_opt_isKindOfClass(v2, v4) & 1) != 0) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 0LL;
    }
    id v6 = v5;
  }

  else
  {
    id v6 = 0LL;
  }

  return v6;
}

id sub_1001E27FC(void *a1, uint64_t a2)
{
  if (a1)
  {
    id v2 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:a2]);
    uint64_t v4 = objc_opt_class(&OBJC_CLASS___NSDictionary, v3);
    if ((objc_opt_isKindOfClass(v2, v4) & 1) != 0) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 0LL;
    }
    id v6 = v5;
  }

  else
  {
    id v6 = 0LL;
  }

  return v6;
}

void sub_1001E2910(uint64_t a1, void *a2)
{
  if (a1) {
    objc_storeStrong((id *)(a1 + 16), a2);
  }
}

PurchaseHistoryHideShowRequestContext *sub_1001E292C(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v8 = a4;
  id v9 = a3;
  id v10 = a2;
  objc_opt_self(a1);
  __int128 v11 = objc_alloc(&OBJC_CLASS___PurchaseHistoryHideShowRequestContext);
  id v12 = v10;
  id v13 = v9;
  id v14 = v8;
  if (v11)
  {
    v18.receiver = v11;
    v18.super_class = (Class)&OBJC_CLASS___PurchaseHistoryHideShowRequestContext;
    __int128 v11 = (PurchaseHistoryHideShowRequestContext *)objc_msgSendSuper2(&v18, "init");
    if (v11)
    {
      __int16 v15 = (NSArray *)[v12 copy];
      items = v11->_items;
      v11->_items = v15;

      objc_storeStrong((id *)&v11->_account, a3);
      objc_storeStrong((id *)&v11->_clientInfo, a4);
    }
  }

  return v11;
}

id *sub_1001E2A68(id *a1, void *a2)
{
  id v2 = a1;
  if (a1)
  {
    uint64_t v4 = NSTemporaryDirectory();
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
    id v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSProcessInfo processInfo](&OBJC_CLASS___NSProcessInfo, "processInfo"));
    id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 globallyUniqueString]);

    id v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", @"%@%@", v5, v7));
    id v9 = v8;
    v16.receiver = v2;
    v16.super_class = (Class)&OBJC_CLASS___ODRPreallocatedFile;
    id v10 = (id *)objc_msgSendSuper2(&v16, "init");
    __int128 v11 = v10;
    if (v10)
    {
      objc_storeStrong(v10 + 6, v8);
      *(_OWORD *)(v11 + 1) = 0u;
      *(_OWORD *)(v11 + 3) = 0u;
      v11[1] = (id)0x300000002LL;
      void v11[2] = 0LL;
      v11[3] = a2;
      int v12 = open((const char *)[v9 UTF8String], 514, 0);
      *((_DWORD *)v11 + 10) = v12;
      if (!v12)
      {
        uint64_t v15 = *__error();
        id v13 = @"Failed to create preallocation file with error %d.";
        goto LABEL_7;
      }

      if (fcntl(v12, 42, v11 + 1) == -1)
      {
        close(*((_DWORD *)v11 + 10));
        id v13 = @"Failed to preallocate file.";
LABEL_7:
        +[NSException raise:format:]( &OBJC_CLASS___NSException,  "raise:format:",  @"ODRPreallocatedFileException",  v13,  v15);
      }
    }

    id v2 = v11;
  }

  return v2;
}

uint64_t start()
{
  dispatch_queue_global_t global_queue = dispatch_get_global_queue(25LL, 0LL);
  uint64_t v1 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
  id v2 = dispatch_source_create((dispatch_source_type_t)&_dispatch_source_type_signal, 0xFuLL, 0LL, v1);

  dispatch_source_set_event_handler(v2, &stru_1003EBED8);
  dispatch_activate(v2);
  dispatch_queue_global_t v3 = dispatch_get_global_queue(21LL, 0LL);
  uint64_t v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(v3);
  dispatch_async(v4, &stru_1003EBEF8);

  CFRunLoopRun();
  return 0LL;
}

void sub_1001E2CEC(id a1)
{
  uint64_t v1 = ASDLogHandleForCategory(14LL);
  id v2 = (os_log_s *)objc_claimAutoreleasedReturnValue(v1);
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)dispatch_queue_global_t v3 = 0;
    _os_log_error_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_ERROR,  "Received SIGTERM, stopping appstored",  v3,  2u);
  }

  exit(0);
}

void sub_1001E2D4C(id a1)
{
  uint64_t v1 = objc_autoreleasePoolPush();
  id v2 = sub_1002C61AC((uint64_t)&OBJC_CLASS___Daemon);
  dispatch_queue_global_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  sub_1002C6344((uint64_t)v3);

  objc_autoreleasePoolPop(v1);
}

void sub_1001E2DEC(uint64_t a1, void *a2, uint64_t a3)
{
  id v10 = a2;
  uint64_t v5 = objc_opt_self(a1);
  id v6 = sub_1001E2E54(v5, a3);
  uint64_t v7 = objc_claimAutoreleasedReturnValue(v6);
  id v8 = (void *)v7;
  if (v7)
  {
    uint64_t v9 = *(void *)(v7 + 8);
    if (v9) {
      [*(id *)(v9 + 8) addOperation:v10];
    }
  }
}

id sub_1001E2E54(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = objc_opt_self(a1);
  if (qword_100462250 != -1) {
    dispatch_once(&qword_100462250, &stru_1003EBF18);
  }
  uint64_t v7 = 0LL;
  id v8 = &v7;
  uint64_t v9 = 0x3032000000LL;
  id v10 = sub_1001E30C0;
  __int128 v11 = sub_1001E30D0;
  id v12 = 0LL;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_1001E30D8;
  block[3] = &unk_1003EBF40;
  void block[4] = &v7;
  void block[5] = a2;
  void block[6] = v3;
  dispatch_sync((dispatch_queue_t)qword_100462240, block);
  id v4 = (id)v8[5];
  _Block_object_dispose(&v7, 8);

  return v4;
}

void sub_1001E2F40(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v7 = a2;
  uint64_t v8 = objc_opt_self(a1);
  id v9 = sub_1001E2E54(v8, a3);
  id v10 = (id)objc_claimAutoreleasedReturnValue(v9);
  sub_1001E2FA8((uint64_t)v10, v7, a4);
}

void sub_1001E2FA8(uint64_t a1, void *a2, uint64_t a3)
{
  if (a1)
  {
    uint64_t v4 = *(void *)(a1 + 8);
    id v7 = a2;
    id v5 = a2;
    id v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v7, 1LL));
    if (v4) {
      objc_msgSend(*(id *)(v4 + 8), "addOperations:waitUntilFinished:", v6, a3, v7);
    }
  }

void sub_1001E3050(id a1)
{
  dispatch_queue_attr_t v1 = dispatch_queue_attr_make_with_autorelease_frequency(0LL, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  id v2 = (dispatch_queue_attr_s *)objc_claimAutoreleasedReturnValue(v1);
  dispatch_queue_t v3 = dispatch_queue_create("com.apple.ondemandresources.ODRTaskQueue.managementQueue", v2);
  uint64_t v4 = (void *)qword_100462240;
  qword_100462240 = (uint64_t)v3;

  id v5 = -[NSMutableDictionary initWithCapacity:](objc_alloc(&OBJC_CLASS___NSMutableDictionary), "initWithCapacity:", 5LL);
  id v6 = (void *)qword_100462248;
  qword_100462248 = (uint64_t)v5;
}

uint64_t sub_1001E30C0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1001E30D0(uint64_t a1)
{
}

void sub_1001E30D8(void *a1)
{
  id v2 = (void *)qword_100462248;
  dispatch_queue_t v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", a1[5]));
  uint64_t v4 = objc_claimAutoreleasedReturnValue([v2 objectForKeyedSubscript:v3]);
  uint64_t v5 = *(void *)(a1[4] + 8LL);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v4;

  if (!*(void *)(*(void *)(a1[4] + 8LL) + 40LL))
  {
    id v7 = objc_alloc_init(&OBJC_CLASS___ODRTaskQueue);
    uint64_t v8 = *(void *)(a1[4] + 8LL);
    id v9 = *(void **)(v8 + 40);
    *(void *)(v8 + 40) = v7;

    uint64_t v10 = a1[5];
    uint64_t v11 = *(void *)(*(void *)(a1[4] + 8LL) + 40LL);
    objc_opt_self(a1[6]);
    unint64_t v12 = __ROR8__(v10 - 9, 3);
    if (v12 > 3) {
      id v13 = "default";
    }
    else {
      id v13 = off_1003EBF60[v12];
    }
    id v14 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"com.apple.ondemandresources.ODRTaskQueue.%sQueue",  v13));
    if (v11)
    {
      uint64_t v15 = *(void *)(v11 + 8);
      if (v15) {
        [*(id *)(v15 + 8) setName:v14];
      }
    }

    uint64_t v16 = *(void *)(*(void *)(a1[4] + 8LL) + 40LL);
    if (v16)
    {
      uint64_t v17 = *(void *)(v16 + 8);
      if (v17)
      {
        [*(id *)(v17 + 8) setQualityOfService:a1[5]];
        uint64_t v16 = *(void *)(*(void *)(a1[4] + 8LL) + 40LL);
      }
    }

    objc_super v18 = (void *)qword_100462248;
    id v19 = (id)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", a1[5]));
    [v18 setObject:v16 forKeyedSubscript:v19];
  }

void sub_1001E33D4(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = ASDLogHandleForCategory(14LL);
  uint64_t v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
  {
    id v7 = (void *)objc_opt_class(*(void *)(a1 + 32), v6);
    uint64_t v8 = *(void *)(a1 + 40);
    int v10 = 138412802;
    uint64_t v11 = v7;
    __int16 v12 = 2114;
    uint64_t v13 = v8;
    __int16 v14 = 2114;
    id v15 = v3;
    id v9 = v7;
    _os_log_error_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_ERROR,  "[%@]: %{public}@ Legacy request completed with error: %{public}@",  (uint8_t *)&v10,  0x20u);
  }
}

XPCServiceBroker *sub_1001E34BC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  objc_opt_self(a1);
  id v7 = objc_alloc(&OBJC_CLASS___XPCServiceBroker);
  uint64_t v8 = -[NSXPCListener initWithMachServiceName:]( objc_alloc(&OBJC_CLASS___NSXPCListener),  "initWithMachServiceName:",  v5);

  id v9 = v6;
  int v10 = v8;
  if (v7)
  {
    v18.receiver = v7;
    v18.super_class = (Class)&OBJC_CLASS___XPCServiceBroker;
    id v7 = (XPCServiceBroker *)objc_msgSendSuper2(&v18, "init");
    if (v7)
    {
      dispatch_queue_attr_t v11 = dispatch_queue_attr_make_with_autorelease_frequency(0LL, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
      __int16 v12 = (dispatch_queue_attr_s *)objc_claimAutoreleasedReturnValue(v11);
      dispatch_queue_t v13 = dispatch_queue_create("com.apple.appstored.XPCServiceBroker", v12);
      dispatchQueue = v7->_dispatchQueue;
      v7->_dispatchQueue = (OS_dispatch_queue *)v13;

      id v15 = objc_opt_new(&OBJC_CLASS___NSMutableSet);
      activeClients = v7->_activeClients;
      v7->_activeClients = v15;

      objc_storeStrong((id *)&v7->_catalog, a2);
      objc_storeStrong((id *)&v7->_listener, v8);
      -[NSXPCListener setDelegate:](v7->_listener, "setDelegate:", v7);
      -[NSXPCListener resume](v7->_listener, "resume");
      notify_post(ASDServiceBrokerAvailableNotification);
    }
  }

  return v7;
}

id sub_1001E3798(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 8) addObject:*(void *)(a1 + 40)];
}

void sub_1001E37A4(uint64_t a1)
{
  id v2 = sub_1002E78A4((uint64_t)&OBJC_CLASS___XPCNotificationCenter);
  id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  sub_1002E7FD0((uint64_t)v3, *(void **)(a1 + 32));

  id v5 = *(void **)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  id v6 = *(dispatch_queue_s **)(v4 + 24);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  void v7[2] = sub_1001E3844;
  v7[3] = &unk_1003E9DC0;
  void v7[4] = v4;
  id v8 = v5;
  dispatch_async(v6, v7);
}

id sub_1001E3844(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 8) removeObject:*(void *)(a1 + 40)];
}

void sub_1001E3A18(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = ASDErrorWithSafeUserInfo(a2);
  id v4 = (id)objc_claimAutoreleasedReturnValue(v3);
  (*(void (**)(uint64_t, id))(v2 + 16))(v2, v4);
}

ODRContentHash *sub_1001E3A60(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_self(a1);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 objectForKeyedSubscript:@"strategy"]);
  id v5 = v4;
  if (v4) {
    id v6 = v4;
  }
  else {
    id v6 = (id)objc_claimAutoreleasedReturnValue([v3 objectForKeyedSubscript:@"label"]);
  }
  id v7 = v6;

  id v8 = (void *)objc_claimAutoreleasedReturnValue([v3 objectForKeyedSubscript:@"hash"]);
  if ([v7 length] && objc_msgSend(v8, "length"))
  {
    id v9 = objc_alloc_init(&OBJC_CLASS___ODRContentHash);
    dispatch_queue_attr_t v11 = v9;
    if (v9)
    {
      objc_setProperty_atomic_copy(v9, v10, v7, 16LL);
      objc_setProperty_atomic_copy(v11, v12, v8, 8LL);
    }
  }

  else
  {
    dispatch_queue_attr_t v11 = 0LL;
  }

  return v11;
}

void *sub_1001E3B50(void *a1)
{
  if (a1)
  {
    v3[0] = @"strategy";
    v3[1] = @"digest";
    uint64_t v1 = a1[1];
    v4[0] = a1[2];
    v4[1] = v1;
    a1 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v4,  v3,  2LL));
  }

  return a1;
}

id sub_1001E3CD0(void *a1)
{
  if (a1) {
    a1 = (void *)objc_claimAutoreleasedReturnValue( +[NSURLProtocol propertyForKey:inRequest:]( &OBJC_CLASS___NSURLProtocol,  "propertyForKey:inRequest:",  @"com.apple.appstored.RequestTag",  a1));
  }
  return a1;
}

void sub_1001E3D00(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    uint64_t v4 = ASDLogHandleForCategory(14LL);
    id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
    {
      int v6 = 138412546;
      id v7 = v3;
      __int16 v8 = 2112;
      uint64_t v9 = a1;
      _os_log_debug_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEBUG,  "Attached tag: %@ to request: %@",  (uint8_t *)&v6,  0x16u);
    }

    +[NSURLProtocol setProperty:forKey:inRequest:]( &OBJC_CLASS___NSURLProtocol,  "setProperty:forKey:inRequest:",  v3,  @"com.apple.appstored.RequestTag",  a1);
  }
}

void sub_1001E3DE8(void *a1, void *a2)
{
  if (a1)
  {
    id v3 = sub_1001E3E38(a1, a2);
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
    if (v4)
    {
      id v5 = v4;
      [a1 _adoptEffectiveConfiguration:v4];
      uint64_t v4 = v5;
    }
  }

id sub_1001E3E38(void *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([a1 _effectiveConfiguration]);
    id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 _sessionConfiguration]);

    id v7 = -[NSURLSessionConfiguration _initWithConfiguration:]( objc_alloc(&OBJC_CLASS___NSURLSessionConfiguration),  "_initWithConfiguration:",  v5);
    if (v3)
    {
      id v8 = objc_getProperty(v3, v6, 8LL, 1);
      if (v8)
      {
        uint64_t v9 = v8;
        int v10 = (void *)objc_claimAutoreleasedReturnValue([v8 bundleIdentifier]);
        objc_msgSend(v7, "set_sourceApplicationBundleIdentifier:", v10);
      }
    }
  }

  else
  {
    id v7 = 0LL;
  }

  return v7;
}

id sub_1001E3F00(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, void *a6)
{
  id v11 = a2;
  uint64_t v12 = objc_opt_self(a1);
  id v13 = sub_1001E3F78(v12, v11, a3, a4, (id)1, a5, a6);
  __int16 v14 = (void *)objc_claimAutoreleasedReturnValue(v13);

  return v14;
}

id sub_1001E3F78(uint64_t a1, void *a2, uint64_t a3, void *a4, id a5, uint64_t a6, void *a7)
{
  id v13 = a2;
  uint64_t v14 = objc_opt_self(a1);
  char v29 = 0;
  id v28 = 0LL;
  id v16 = sub_1001E4110(v14, v13, a3, v15, a6, (uint64_t)&v29, (uint64_t)&v28);
  uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
  id v18 = v28;
  id v19 = v18;
  if ((_DWORD)a6 && !v17)
  {
    id v27 = v18;
    BOOL v20 = sub_1001E42D0(v14, v13, &v27);
    id v21 = v27;

    if (!v20) {
      goto LABEL_9;
    }
    id v26 = v21;
    id v22 = sub_1001E43F8(v14, v13, a3, 1LL, (uint64_t)&v29, (uint64_t)&v26);
    uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(v22);
    id v19 = v26;
  }

  if (!v17)
  {
    id v21 = v19;
LABEL_9:
    if (!a7) {
      goto LABEL_13;
    }
    goto LABEL_10;
  }

  if ([v17 creatorIdentifier] != a5)
  {
    id v25 = v19;
    BOOL v23 = sub_1001E4634(v17, &v25);
    id v21 = v25;

    if (v23)
    {
LABEL_14:
      id v19 = v21;
      goto LABEL_15;
    }

    if (!a7)
    {
LABEL_13:
      uint64_t v17 = 0LL;
      goto LABEL_14;
    }

id sub_1001E4110(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v12 = a2;
  objc_opt_self(a1);
  switch(a3)
  {
    case 0LL:
      NSExceptionName v13 = NSInvalidArgumentException;
      uint64_t v14 = @"Passing an intent of 'lib_IXCoordinatorIntentAny' is not supported.";
      goto LABEL_4;
    case 1LL:
      id v16 = -[IXApplicationIdentity initWithBundleID:]( objc_alloc(&OBJC_CLASS___IXApplicationIdentity),  "initWithBundleID:",  v12);
      uint64_t v17 = &OBJC_CLASS___IXInitiatingAppInstallCoordinator;
      goto LABEL_11;
    case 2LL:
      id v16 = -[IXApplicationIdentity initWithBundleID:]( objc_alloc(&OBJC_CLASS___IXApplicationIdentity),  "initWithBundleID:",  v12);
      uint64_t v17 = &OBJC_CLASS___IXUpdatingAppInstallCoordinator;
      goto LABEL_11;
    case 3LL:
      id v16 = -[IXApplicationIdentity initWithBundleID:]( objc_alloc(&OBJC_CLASS___IXApplicationIdentity),  "initWithBundleID:",  v12);
      uint64_t v17 = &OBJC_CLASS___IXRestoringAppInstallCoordinator;
      goto LABEL_11;
    case 4LL:
      id v16 = -[IXApplicationIdentity initWithBundleID:]( objc_alloc(&OBJC_CLASS___IXApplicationIdentity),  "initWithBundleID:",  v12);
      uint64_t v17 = &OBJC_CLASS___IXRestoringDemotedAppInstallCoordinator;
      goto LABEL_11;
    case 5LL:
      id v16 = -[IXApplicationIdentity initWithBundleID:]( objc_alloc(&OBJC_CLASS___IXApplicationIdentity),  "initWithBundleID:",  v12);
      uint64_t v17 = &OBJC_CLASS___IXPromotingAppInstallCoordinator;
      goto LABEL_11;
    case 6LL:
      id v16 = -[IXApplicationIdentity initWithBundleID:]( objc_alloc(&OBJC_CLASS___IXApplicationIdentity),  "initWithBundleID:",  v12);
      uint64_t v17 = &OBJC_CLASS___IXGizmoInstallingAppInstallCoordinator;
LABEL_11:
      uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue( [v17 coordinatorForAppWithIdentity:v16 withClientID:1 createIfNotExisting:a5 created:a6 error:a7]);

      break;
    default:
      NSExceptionName v13 = NSInvalidArgumentException;
      id v19 = v12;
      uint64_t v20 = a3;
      uint64_t v14 = @"Don't know how to find coordinator for bundle ID: %@ with intent: %lu";
LABEL_4:
      +[NSException raise:format:](&OBJC_CLASS___NSException, "raise:format:", v13, v14, v19, v20);
      uint64_t v15 = 0LL;
      break;
  }

  return v15;
}

BOOL sub_1001E42D0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  objc_opt_self(a1);
  uint64_t v16 = 0LL;
  uint64_t v17 = &v16;
  uint64_t v18 = 0x2020000000LL;
  char v19 = 1;
  id v15 = 0LL;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472LL;
  void v12[2] = sub_1001E51CC;
  void v12[3] = &unk_1003EBF88;
  id v6 = v5;
  id v13 = v6;
  uint64_t v14 = &v16;
  +[IXAppInstallCoordinator enumerateCoordinatorsWithError:usingBlock:]( &OBJC_CLASS___IXAppInstallCoordinator,  "enumerateCoordinatorsWithError:usingBlock:",  &v15,  v12);
  id v7 = v15;
  id v8 = v7;
  int v9 = *((unsigned __int8 *)v17 + 24);
  if (a3 && !*((_BYTE *)v17 + 24))
  {
    *a3 = v7;
    int v9 = *((unsigned __int8 *)v17 + 24);
  }

  BOOL v10 = v9 != 0;

  _Block_object_dispose(&v16, 8);
  return v10;
}

void sub_1001E43E0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

id sub_1001E43F8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v11 = a2;
  uint64_t v12 = objc_opt_self(a1);
  id v14 = sub_1001E4110(v12, v11, a3, v13, a4, a5, a6);
  id v15 = (void *)objc_claimAutoreleasedReturnValue(v14);

  return v15;
}

uint64_t sub_1001E446C(void *a1, id a2, uint64_t a3)
{
  if (!a1) {
    return 0LL;
  }
  if (![a1 conformsToProtocol:&OBJC_PROTOCOL___IXCoordinatorWithImportance])
  {
    if (!a3) {
      return a3;
    }
    uint64_t v10 = ASDErrorWithDescription(ASDErrorDomain, 807LL, v9);
    *(void *)a3 = (id)objc_claimAutoreleasedReturnValue(v10);

    return 0LL;
  }

  id v6 = a1;
  id v7 = [v6 importanceWithError:a3];
  if (v7 == (id)4) {
    unint64_t v8 = 1LL;
  }
  else {
    unint64_t v8 = (unint64_t)v7;
  }
  if (v8 >= (unint64_t)a2)
  {
    id v11 = v7;
    if (v7 != a2)
    {
      uint64_t v12 = ASDLogHandleForCategory(14LL);
      uint64_t v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      {
        uint64_t v15 = IXStringForCoordinatorImportance(v11);
        uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
        uint64_t v17 = IXStringForCoordinatorImportance(a2);
        uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(v17);
        char v19 = (void *)objc_claimAutoreleasedReturnValue([v6 uniqueIdentifier]);
        *(_DWORD *)__int128 buf = 138543874;
        id v21 = v16;
        __int16 v22 = 2114;
        BOOL v23 = v18;
        __int16 v24 = 2114;
        id v25 = v19;
      }
    }

    a3 = 1LL;
  }

  else
  {
    a3 = (uint64_t)[v6 setImportance:a2 error:a3];
  }

  return a3;
}

BOOL sub_1001E4634(void *a1, void *a2)
{
  if (!a1) {
    return 0LL;
  }
  if ([a1 conformsToProtocol:&OBJC_PROTOCOL___IXCoordinatorWithAppAssetPromise])
  {
    id v11 = 0LL;
    id v4 = [a1 appAssetPromiseResponsibleClientWithError:&v11];
    id v5 = v11;
  }

  else
  {
    id v4 = 0LL;
    id v5 = 0LL;
  }

  BOOL v6 = v4 == (id)1;
  if (a2 && v4 != (id)1)
  {
    id v7 = (void *)objc_claimAutoreleasedReturnValue( +[NSMutableDictionary dictionaryWithCapacity:]( &OBJC_CLASS___NSMutableDictionary,  "dictionaryWithCapacity:",  2LL));
    [v7 setObject:v8 forKeyedSubscript:NSDebugDescriptionErrorKey];

    [v7 setObject:v5 forKeyedSubscript:NSUnderlyingErrorKey];
    int v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInteger:", v4));
    [v7 setObject:v9 forKeyedSubscript:@"coordinatorOwnerID"];

    *a2 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ASDErrorDomain,  803LL,  v7));
  }

  return v6;
}

id sub_1001E4798(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  objc_opt_self(a1);
  uint64_t v12 = 0LL;
  uint64_t v13 = &v12;
  uint64_t v14 = 0x3032000000LL;
  uint64_t v15 = sub_1001E48A8;
  uint64_t v16 = sub_1001E48B8;
  id v17 = 0LL;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  v9[2] = sub_1001E48C0;
  v9[3] = &unk_1003EBF88;
  id v6 = v5;
  id v10 = v6;
  id v11 = &v12;
  +[IXAppInstallCoordinator enumerateCoordinatorsWithError:usingBlock:]( &OBJC_CLASS___IXAppInstallCoordinator,  "enumerateCoordinatorsWithError:usingBlock:",  a3,  v9);
  id v7 = (id)v13[5];

  _Block_object_dispose(&v12, 8);
  return v7;
}

void sub_1001E4890( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_1001E48A8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1001E48B8(uint64_t a1)
{
}

BOOL sub_1001E48C0(uint64_t a1, void *a2)
{
  id v4 = a2;
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 uniqueIdentifier]);
  unsigned int v6 = [v5 isEqual:*(void *)(a1 + 32)];

  if (v6) {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL), a2);
  }
  BOOL v7 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL) == 0LL;

  return v7;
}

id sub_1001E4948(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  uint64_t v9 = objc_opt_self(a1);
  if (v7)
  {
    if (v8)
    {
      id v10 = -[IXApplicationIdentity initWithBundleID:]( objc_alloc(&OBJC_CLASS___IXApplicationIdentity),  "initWithBundleID:",  v8);
      id v11 = (void *)objc_claimAutoreleasedReturnValue( +[IXAppInstallCoordinator existingCoordinatorForAppWithIdentity:error:]( &OBJC_CLASS___IXAppInstallCoordinator,  "existingCoordinatorForAppWithIdentity:error:",  v10,  a4));
      uint64_t v12 = v11;
      if (v11)
      {
        uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v11 uniqueIdentifier]);
        unsigned __int8 v14 = [v13 isEqual:v7];

        if ((v14 & 1) == 0)
        {
          if (a4)
          {
            __int16 v22 = (void *)objc_claimAutoreleasedReturnValue([v12 uniqueIdentifier]);
            uint64_t v15 = ASDErrorWithUserInfoAndFormat(808LL, 0LL, @"Coordinator identifier was '%@' but expected '%@'");
            *a4 = (id)objc_claimAutoreleasedReturnValue(v15);
          }

          uint64_t v12 = 0LL;
        }
      }
    }

    else
    {
      uint64_t v17 = v9;
      uint64_t v18 = ASDLogHandleForCategory(14LL);
      char v19 = (os_log_s *)objc_claimAutoreleasedReturnValue(v18);
      if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)__int128 buf = 138543362;
        id v24 = v7;
        _os_log_error_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_ERROR,  "Using the slow path to locate coordinator: %{public}@",  buf,  0xCu);
      }

      id v20 = sub_1001E4798(v17, v7, (uint64_t)a4);
      uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(v20);
    }
  }

  else if (a4)
  {
    uint64_t v16 = ASDErrorWithUserInfoAndFormat(507LL, 0LL, @"Coordinator identifier was invalid");
    uint64_t v12 = 0LL;
    *a4 = (id)objc_claimAutoreleasedReturnValue(v16);
  }

  else
  {
    uint64_t v12 = 0LL;
  }

  return v12;
}

id sub_1001E4B34(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  uint64_t v7 = objc_opt_self(a1);
  if (v5)
  {
    id v8 = objc_getProperty(v5, v6, 16LL, 1);
    id Property = objc_getProperty(v5, v9, 8LL, 1);
  }

  else
  {
    id v8 = 0LL;
    id Property = 0LL;
  }

  id v11 = sub_1001E4948(v7, v8, Property, a3);
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(v11);

  return v12;
}

id sub_1001E4BD4(id result, const char *a2)
{
  if (result) {
    return objc_getProperty(result, a2, 16LL, 1);
  }
  return result;
}

id sub_1001E4BE8(id result, const char *a2)
{
  if (result) {
    return objc_getProperty(result, a2, 8LL, 1);
  }
  return result;
}

void *sub_1001E4BFC(void *result)
{
  if (result) {
    return (void *)([result creatorIdentifier] == (id)1);
  }
  return result;
}

uint64_t sub_1001E4C1C(uint64_t result, uint64_t a2)
{
  if (result)
  {
    uint64_t v2 = result;
    uint64_t v3 = objc_opt_class(&OBJC_CLASS___IXUpdatingAppInstallCoordinator, a2);
    if ((objc_opt_isKindOfClass(v2, v3) & 1) != 0) {
      return 2LL;
    }
    uint64_t v5 = objc_opt_class(&OBJC_CLASS___IXInitiatingAppInstallCoordinator, v4);
    if ((objc_opt_isKindOfClass(v2, v5) & 1) != 0) {
      return 1LL;
    }
    uint64_t v7 = objc_opt_class(&OBJC_CLASS___IXRestoringAppInstallCoordinator, v6);
    if ((objc_opt_isKindOfClass(v2, v7) & 1) != 0)
    {
      return 3LL;
    }

    else
    {
      uint64_t v9 = objc_opt_class(&OBJC_CLASS___IXPromotingAppInstallCoordinator, v8);
      if ((objc_opt_isKindOfClass(v2, v9) & 1) != 0)
      {
        return 5LL;
      }

      else
      {
        uint64_t v11 = objc_opt_class(&OBJC_CLASS___IXRestoringDemotedAppInstallCoordinator, v10);
        if ((objc_opt_isKindOfClass(v2, v11) & 1) != 0)
        {
          return 4LL;
        }

        else
        {
          uint64_t v13 = objc_opt_class(&OBJC_CLASS___IXGizmoInstallingAppInstallCoordinator, v12);
          if ((objc_opt_isKindOfClass(v2, v13) & 1) == 0)
          {
            uint64_t v14 = ASDLogHandleForCategory(2LL);
            uint64_t v15 = (os_log_s *)objc_claimAutoreleasedReturnValue(v14);
            if (os_log_type_enabled(v15, OS_LOG_TYPE_FAULT))
            {
              int v16 = 138543362;
              uint64_t v17 = v2;
              _os_log_fault_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_FAULT,  "Unable to determine intent for coordinator: %{public}@",  (uint8_t *)&v16,  0xCu);
            }

            return 1LL;
          }

          return 6LL;
        }
      }
    }
  }

  return result;
}

id sub_1001E4DA0(void *a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([a1 placeholderPromiseWithError:0]);
  id v3 = [v2 isComplete];

  return v3;
}

id sub_1001E4DF4(id a1)
{
  id v1 = a1;
  if (a1)
  {
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueIdentifier]);
    id v3 = (void *)objc_claimAutoreleasedReturnValue([v1 identity]);
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v3 bundleID]);
    uint64_t v5 = sub_1001E4E80((uint64_t)&OBJC_CLASS___lib_IXAppInstallCoordinatorTag, v2, v4);
    id v1 = (id)objc_claimAutoreleasedReturnValue(v5);
  }

  return v1;
}

lib_IXAppInstallCoordinatorTag *sub_1001E4E80(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  objc_opt_self(a1);
  uint64_t v7 = objc_alloc_init(&OBJC_CLASS___lib_IXAppInstallCoordinatorTag);
  uint64_t v8 = (NSString *)[v5 copy];

  bundleID = v7->_bundleID;
  v7->_bundleID = v8;

  uint64_t v10 = (NSUUID *)[v6 copy];
  coordinatorID = v7->_coordinatorID;
  v7->_coordinatorID = v10;

  return v7;
}

NSMutableDictionary *sub_1001E4F0C(uint64_t a1, void *a2)
{
  id v10 = 0LL;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  v8[2] = sub_1001E4FD0;
  v8[3] = &unk_1003EBFB0;
  id v3 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  uint64_t v9 = v3;
  unsigned __int8 v4 = +[IXAppInstallCoordinator enumerateCoordinatorsWithError:usingBlock:]( &OBJC_CLASS___IXAppInstallCoordinator,  "enumerateCoordinatorsWithError:usingBlock:",  &v10,  v8);
  id v5 = v10;
  id v6 = v5;
  if (a2 && (v4 & 1) == 0) {
    *a2 = v5;
  }

  return v3;
}

uint64_t sub_1001E4FD0(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (sub_1001E4634(v3, 0LL))
  {
    if (!v3
      || [v3 conformsToProtocol:&OBJC_PROTOCOL___IXCoordinatorWithPlaceholderPromise]
      && !sub_1001E4DA0(v3)
      || [v3 conformsToProtocol:&OBJC_PROTOCOL___IXCoordinatorWithInitialODRAssetPromises]
      && (![v3 conformsToProtocol:&OBJC_PROTOCOL___IXCoordinatorWithInitialODRAssetPromises]
       || ![v3 hasInitialODRAssetPromises]))
    {
      uint64_t v10 = 0LL;
      goto LABEL_25;
    }

    if ([v3 conformsToProtocol:&OBJC_PROTOCOL___IXCoordinatorWithAppAssetPromise])
    {
      if (![v3 conformsToProtocol:&OBJC_PROTOCOL___IXCoordinatorWithAppAssetPromise]
        || ![v3 hasAppAssetPromise]
        || (unsigned __int8 v4 = (void *)objc_claimAutoreleasedReturnValue([v3 appAssetPromiseWithError:0])) == 0
        || (id v5 = v4, v6 = [v4 isComplete], v5, !v6))
      {
        uint64_t v10 = 1LL;
        goto LABEL_25;
      }
    }

    if ([v3 conformsToProtocol:&OBJC_PROTOCOL___IXCoordinatorWithInstallOptions]
      && [v3 hasInstallOptions])
    {
      if (![v3 conformsToProtocol:&OBJC_PROTOCOL___IXCoordinatorWithDeviceSecurityPromise])
      {
LABEL_21:
        uint64_t v10 = 5LL;
LABEL_25:
        uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInteger:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInteger:",  v10));
        uint64_t v12 = *(void **)(a1 + 32);
        uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v3 uniqueIdentifier]);
        [v12 setObject:v11 forKeyedSubscript:v13];

        goto LABEL_26;
      }

      char v15 = 0;
      if ([v3 conformsToProtocol:&OBJC_PROTOCOL___IXCoordinatorWithDeviceSecurityPromise])
      {
        [v3 getHasDeviceSecurityPromise:&v15 error:0];
        if (v15)
        {
          if (![v3 conformsToProtocol:&OBJC_PROTOCOL___IXCoordinatorWithDeviceSecurityPromise]
            || (uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v3 deviceSecurityPromiseWithError:0])) == 0
            || (uint64_t v8 = v7, v9 = [v7 isComplete], v8, !v9))
          {
            uint64_t v10 = 3LL;
            goto LABEL_25;
          }

          goto LABEL_21;
        }
      }
    }

    uint64_t v10 = 2LL;
    goto LABEL_25;
  }

uint64_t sub_1001E51CC(uint64_t a1, void *a2)
{
  id v3 = a2;
  unsigned __int8 v4 = (void *)objc_claimAutoreleasedReturnValue([v3 identity]);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 bundleID]);
  unsigned int v6 = [v5 isEqualToString:*(void *)(a1 + 32)];

  if (v6)
  {
    if (v3 && [v3 creatorIdentifier] == (id)1)
    {
      uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ASDErrorDomain,  506LL,  0LL));
      *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = [v3 cancelForReason:v7 client:1 error:0];
    }

    else
    {
      *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = 0;
    }
  }

  uint64_t v8 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL);

  return v8;
}

id sub_1001E52B4(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5)
{
  id v8 = a4;
  id v9 = a2;
  objc_opt_self(a1);
  id v10 = +[IXAppInstallCoordinator updateSINFForAppWithIdentity:sinfData:options:error:]( &OBJC_CLASS___IXAppInstallCoordinator,  "updateSINFForAppWithIdentity:sinfData:options:error:",  v9,  v8,  0LL,  a5);

  return v10;
}

id sub_1001E5324(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v7 = a2;
  uint64_t v8 = objc_opt_self(a1);
  id v9 = sub_1001E5384(v8, v7, a3, a4, v7);
  id v10 = (void *)objc_claimAutoreleasedReturnValue(v9);

  return v10;
}

id sub_1001E5384(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v9 = a2;
  id v10 = a5;
  uint64_t v11 = objc_opt_self(a1);
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v10 domain]);
  unsigned int v13 = [v12 isEqualToString:ASDErrorDomain];

  if (v13)
  {
    uint64_t v14 = (uint64_t)[v10 code];
    if (v14 > 744)
    {
      if (v14 == 745)
      {
        uint64_t v18 = 7LL;
      }

      else
      {
        if (v14 != 751) {
          goto LABEL_18;
        }
        uint64_t v18 = 4LL;
      }

      goto LABEL_24;
    }

    if (v14 != 530 && v14 != 744) {
      goto LABEL_18;
    }
    goto LABEL_10;
  }

  char v15 = (void *)objc_claimAutoreleasedReturnValue([v10 domain]);
  unsigned int v16 = [v15 isEqualToString:ASDServerErrorDomain];

  if (v16)
  {
    id v17 = [v10 code];
    if (v17 == (id)3903)
    {
      uint64_t v18 = 17LL;
      goto LABEL_24;
    }

    if (v17 == (id)3604)
    {
      uint64_t v18 = 9LL;
      goto LABEL_24;
    }

    if (v17 != (id)3603) {
      goto LABEL_18;
    }
LABEL_10:
    uint64_t v18 = 10LL;
LABEL_24:
    uint64_t v25 = a3;
LABEL_25:
    uint64_t v26 = IXCreateUserPresentableError(v18, v25, v9);
    id v24 = (void *)objc_claimAutoreleasedReturnValue(v26);
    goto LABEL_26;
  }

  char v19 = (void *)objc_claimAutoreleasedReturnValue([v10 domain]);
  unsigned int v20 = [v19 isEqualToString:AKAppleIDAuthenticationErrorDomain];

  if (v20 && [v10 code] == (id)-7003)
  {
    if ((_DWORD)a4) {
      uint64_t v18 = 3LL;
    }
    else {
      uint64_t v18 = 1LL;
    }
    uint64_t v25 = 0LL;
    goto LABEL_25;
  }

id sub_1001E5584(void *a1, void *a2)
{
  id v2 = a1;
  if (a1)
  {
    if ((objc_opt_respondsToSelector(a1, "setPreparationPromise:withError:") & 1) != 0)
    {
      unsigned __int8 v4 = -[IXPromisedOutOfBandTransfer initWithName:client:diskSpaceNeeded:]( objc_alloc(&OBJC_CLASS___IXPromisedOutOfBandTransfer),  "initWithName:client:diskSpaceNeeded:",  @"Feedback",  1LL,  0LL);
      -[IXPromisedOutOfBandTransfer setPercentComplete:](v4, "setPercentComplete:", 1.0);
      -[IXPromisedOutOfBandTransfer setComplete:](v4, "setComplete:", 1LL);
      id v2 = [v2 setPreparationPromise:v4 withError:a2];
    }

    else
    {
      if (!a2) {
        return 0LL;
      }
      uint64_t v5 = ASDErrorWithDescription(ASDErrorDomain, 807LL, v4);
      id v2 = 0LL;
      *a2 = (id)objc_claimAutoreleasedReturnValue(v5);
    }
  }

  return v2;
}

BOOL sub_1001E5678(BOOL result, uint64_t a2)
{
  if (result)
  {
    id v2 = (void *)result;
    uint64_t v3 = objc_opt_class(&OBJC_CLASS___IXRestoringAppInstallCoordinator, a2);
    return (objc_opt_isKindOfClass(v2, v3) & 1) == 0
  }

  return result;
}

id sub_1001E56E8(void *a1, void *a2)
{
  if (a1)
  {
    if ([a1 conformsToProtocol:&OBJC_PROTOCOL___IXCoordinatorWithInitialODRAssetPromises]) {
      return [a1 setInitialODRAssetPromises:&__NSArray0__struct error:a2];
    }
    if (a2)
    {
      uint64_t v6 = ASDErrorWithDescription(ASDErrorDomain, 807LL, v5);
      *a2 = (id)objc_claimAutoreleasedReturnValue(v6);
    }
  }

  return 0LL;
}

id sub_1001E5794(void *a1, void *a2)
{
  id v2 = a1;
  if (a1)
  {
    if ([a1 conformsToProtocol:&OBJC_PROTOCOL___IXCoordinatorWithUserDataPromise])
    {
      unsigned __int8 v4 = -[IXPromisedOutOfBandTransfer initWithName:client:diskSpaceNeeded:]( objc_alloc(&OBJC_CLASS___IXPromisedOutOfBandTransfer),  "initWithName:client:diskSpaceNeeded:",  @"fake-promise",  1LL,  0LL);
      -[IXPromisedOutOfBandTransfer setPercentComplete:](v4, "setPercentComplete:", 1.0);
      -[IXPromisedOutOfBandTransfer setComplete:](v4, "setComplete:", 1LL);
      id v2 = [v2 setUserDataPromise:v4 error:a2];
    }

    else
    {
      if (!a2) {
        return 0LL;
      }
      uint64_t v5 = ASDErrorWithDescription(ASDErrorDomain, 807LL, v4);
      id v2 = 0LL;
      *a2 = (id)objc_claimAutoreleasedReturnValue(v5);
    }
  }

  return v2;
}

id sub_1001E5888(void *a1, void *a2)
{
  id v2 = a1;
  if (a1)
  {
    if ([a1 conformsToProtocol:&OBJC_PROTOCOL___IXCoordinatorWithDeviceSecurityPromise])
    {
      unsigned __int8 v4 = -[IXPromisedOutOfBandTransfer initWithName:client:diskSpaceNeeded:]( objc_alloc(&OBJC_CLASS___IXPromisedOutOfBandTransfer),  "initWithName:client:diskSpaceNeeded:",  @"security-promise",  1LL,  0LL);
      id v9 = 0LL;
      id v2 = [v2 setDeviceSecurityPromise:v4 error:&v9];
      id v5 = v9;
      if ((v2 & 1) == 0)
      {
        -[IXPromisedOutOfBandTransfer cancelForReason:client:error:](v4, "cancelForReason:client:error:", v5, 1LL, 0LL);
        if (a2) {
          *a2 = v5;
        }
      }
    }

    else
    {
      if (a2)
      {
        uint64_t v7 = ASDErrorWithDescription(ASDErrorDomain, 807LL, v6);
        *a2 = (id)objc_claimAutoreleasedReturnValue(v7);
      }

      return 0LL;
    }
  }

  return v2;
}

uint64_t sub_1001E59A0(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  uint64_t v6 = v5;
  if (!a1)
  {
    unsigned __int8 v19 = 0;
    goto LABEL_17;
  }

  if (!v5)
  {
    uint64_t v7 = ASDErrorWithDescription(ASDErrorDomain, 813LL, @"Failure reason was not specified");
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(v7);
  }

  if ([a1 conformsToProtocol:&OBJC_PROTOCOL___IXCoordinatorWithUserDataPromise]
    && (!+[AMSDevice deviceIsAppleTV](&OBJC_CLASS___AMSDevice, "deviceIsAppleTV")
     || sub_1001E4C1C((uint64_t)a1, v8) != 3)
    && [a1 conformsToProtocol:&OBJC_PROTOCOL___IXCoordinatorWithAppAssetPromise])
  {
    id v18 = 0LL;
    id v9 = (id)objc_claimAutoreleasedReturnValue([a1 appAssetPromiseWithError:&v18]);
    id v10 = v18;
    id v11 = v10;
    if (!v9)
    {

      id v9 = [[IXPromisedStreamingZipTransfer alloc] initWithName:@"fake-promise" client:1 streamingZipOptions:&__NSDictionary0__struct archiveSize:0 diskSpaceNeeded:0];
      id v17 = 0LL;
      unsigned __int8 v12 = [a1 setAppAssetPromise:v9 error:&v17];
      id v11 = v17;
      if ((v12 & 1) == 0) {
        [v9 cancelForReason:v11 client:1 error:0];
      }
    }

    if ([v9 isComplete])
    {
      unsigned __int8 v13 = 0;
    }

    else
    {
      id v16 = v11;
      unsigned __int8 v13 = [v9 cancelForReason:v6 client:1 error:&v16];
      id v15 = v16;

      id v11 = v15;
    }

    if (!a3) {
      goto LABEL_16;
    }
    goto LABEL_14;
  }

  unsigned __int8 v13 = [a1 cancelForReason:v6 client:1 error:a3];
  id v11 = 0LL;
  if (a3)
  {
LABEL_14:
    if ((v13 & 1) == 0) {
      *a3 = v11;
    }
  }

void *sub_1001E5B84(void *result, void *a2)
{
  if (result)
  {
    uint64_t v3 = result;
    if ([result conformsToProtocol:&OBJC_PROTOCOL___IXCoordinatorWithDeviceSecurityPromise])
    {
      id v10 = 0LL;
      unsigned __int8 v4 = (void *)objc_claimAutoreleasedReturnValue([v3 deviceSecurityPromiseWithError:&v10]);
      id v5 = v10;
      uint64_t v6 = v5;
      if (v4)
      {
        [v4 setPercentComplete:1.0];
        [v4 setComplete:1];
        unsigned __int8 v11 = 1;
LABEL_12:

        goto LABEL_13;
      }

      uint64_t v9 = IXErrorDomain;
      if (ASDErrorIsEqual(v5, IXErrorDomain, 3LL) || ASDErrorIsEqual(v6, v9, 23LL))
      {
        unsigned __int8 v11 = 1;
        goto LABEL_12;
      }

      if (a2)
      {
        *a2 = v6;
        unsigned __int8 v11 = 0;
        goto LABEL_12;
      }
    }

    else
    {
      if (a2)
      {
        uint64_t v8 = ASDErrorWithDescription(ASDErrorDomain, 807LL, v7);
        *a2 = (id)objc_claimAutoreleasedReturnValue(v8);
      }

      uint64_t v6 = 0LL;
    }

    unsigned __int8 v11 = 0;
LABEL_13:

    return (void *)v11;
  }

  return result;
}

void *sub_1001E5CCC(void *a1, void *a2, void *a3)
{
  id v6 = a2;
  if (!a1) {
    goto LABEL_6;
  }
  uint64_t v7 = objc_opt_class(&OBJC_CLASS___IXGizmoInstallingAppInstallCoordinator, v5);
  if ((objc_opt_isKindOfClass(a1, v7) & 1) == 0)
  {
    if (!a3) {
      goto LABEL_7;
    }
    uint64_t v9 = ASDErrorWithDescription(ASDErrorDomain, 807LL, v8);
    *a3 = (id)objc_claimAutoreleasedReturnValue(v9);

LABEL_6:
    a3 = 0LL;
    goto LABEL_7;
  }

  a3 = [a1 setTargetGizmoPairingID:v6 error:a3];
LABEL_7:

  return a3;
}

id sub_1001E5D94(void *a1, void *a2)
{
  if (a1)
  {
    if (a2)
    {
      uint64_t v6 = ASDErrorWithDescription(ASDErrorDomain, 807LL, v5);
      *a2 = (id)objc_claimAutoreleasedReturnValue(v6);
    }
  }

  return 0LL;
}

void *sub_1001E5E38(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  if (!a1) {
    goto LABEL_6;
  }
  if (![a1 conformsToProtocol:&OBJC_PROTOCOL___IXCoordinatorWithInitialODRAssetPromises])
  {
    if (!a3) {
      goto LABEL_7;
    }
    NSErrorUserInfoKey v9 = NSDebugDescriptionErrorKey;
    id v10 = v6;
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v10,  &v9,  1LL));
    *a3 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ASDErrorDomain,  807LL,  v7));

LABEL_6:
    a3 = 0LL;
    goto LABEL_7;
  }

  a3 = [a1 setInitialODRAssetPromises:v5 error:a3];
LABEL_7:

  return a3;
}

void *sub_1001E5F60(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  if (!a1) {
    goto LABEL_6;
  }
  if (![a1 conformsToProtocol:&OBJC_PROTOCOL___IXCoordinatorWithInstallOptions])
  {
    if (!a3) {
      goto LABEL_7;
    }
    NSErrorUserInfoKey v8 = NSDebugDescriptionErrorKey;
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v9,  &v8,  1LL));
    *a3 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ASDErrorDomain,  807LL,  v6));

LABEL_6:
    a3 = 0LL;
    goto LABEL_7;
  }

  a3 = [a1 setInstallOptions:v5 error:a3];
LABEL_7:

  return a3;
}

void *sub_1001E606C(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  if (!a1) {
    goto LABEL_6;
  }
  if (![a1 conformsToProtocol:&OBJC_PROTOCOL___IXCoordinatorWithPlaceholderPromise])
  {
    if (!a3) {
      goto LABEL_7;
    }
    NSErrorUserInfoKey v8 = NSDebugDescriptionErrorKey;
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v9,  &v8,  1LL));
    *a3 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ASDErrorDomain,  807LL,  v6));

LABEL_6:
    a3 = 0LL;
    goto LABEL_7;
  }

  a3 = [a1 setPlaceholderPromise:v5 error:a3];
LABEL_7:

  return a3;
}

__CFString *sub_1001E631C(unint64_t a1)
{
  if (a1 >= 7) {
    return (__CFString *)(id)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Unknown (%lu)",  a1));
  }
  else {
    return *(&off_1003EBFD0 + a1);
  }
}

id sub_1001E636C(uint64_t a1)
{
  if (qword_100462260 != -1) {
    dispatch_once(&qword_100462260, &stru_1003EC008);
  }
  return (id)qword_100462268;
}

void sub_1001E63B0(id a1)
{
  id v1 = (void *)objc_claimAutoreleasedReturnValue(+[AMSProcessInfo currentProcess](&OBJC_CLASS___AMSProcessInfo, "currentProcess"));
  id v2 = sub_100255630((uint64_t)&OBJC_CLASS___URLBag);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  id v9 = (id)objc_claimAutoreleasedReturnValue( +[NSURLSessionConfiguration ams_configurationWithProcessInfo:bag:]( &OBJC_CLASS___NSURLSessionConfiguration,  "ams_configurationWithProcessInfo:bag:",  v1,  v3));

  unsigned __int8 v4 = -[AMSURLSession initWithConfiguration:](objc_alloc(&OBJC_CLASS___AMSURLSession), "initWithConfiguration:", v9);
  id v5 = (void *)qword_100462268;
  qword_100462268 = (uint64_t)v4;

  uint64_t v6 = sub_1001E6498((void *)qword_100462268);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
  [(id)qword_100462268 setDelegate:v7];
  NSErrorUserInfoKey v8 = sub_1001894DC((id *)objc_alloc(&OBJC_CLASS____ProtocolHandler), v7);
  [(id)qword_100462268 setProtocolHandler:v8];
}

_ProtocolDelegate *sub_1001E6498(void *a1)
{
  if (a1)
  {
    os_unfair_lock_lock_with_options(&unk_100462258, 0x10000LL);
    id AssociatedObject = objc_getAssociatedObject(a1, &unk_10038A83F);
    uint64_t v3 = (_ProtocolDelegate *)objc_claimAutoreleasedReturnValue(AssociatedObject);
    if (!v3)
    {
      uint64_t v3 = objc_alloc_init(&OBJC_CLASS____ProtocolDelegate);
      objc_setAssociatedObject(a1, &unk_10038A83F, v3, (void *)0x301);
    }

    os_unfair_lock_unlock((os_unfair_lock_t)&unk_100462258);
  }

  else
  {
    uint64_t v3 = 0LL;
  }

  return v3;
}

AMSURLSession *sub_1001E6524(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_self(a1);
  unsigned __int8 v4 = (void *)objc_claimAutoreleasedReturnValue(+[AMSProcessInfo currentProcess](&OBJC_CLASS___AMSProcessInfo, "currentProcess"));
  id v5 = sub_100255630((uint64_t)&OBJC_CLASS___URLBag);
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue( +[NSURLSessionConfiguration ams_configurationWithProcessInfo:bag:]( &OBJC_CLASS___NSURLSessionConfiguration,  "ams_configurationWithProcessInfo:bag:",  v4,  v6));

  NSErrorUserInfoKey v8 = -[AMSURLSession initWithConfiguration:delegate:delegateQueue:]( objc_alloc(&OBJC_CLASS___AMSURLSession),  "initWithConfiguration:delegate:delegateQueue:",  v7,  v3,  0LL);
  return v8;
}

AMSURLSession *sub_1001E65D4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  objc_opt_self(a1);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue( +[NSURLSessionConfiguration ephemeralSessionConfiguration]( &OBJC_CLASS___NSURLSessionConfiguration,  "ephemeralSessionConfiguration"));
  id v8 = sub_100255630((uint64_t)&OBJC_CLASS___URLBag);
  id v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
  objc_msgSend(v7, "ams_configureWithProcessInfo:bag:", v6, v9);

  id v10 = (void *)objc_claimAutoreleasedReturnValue([v6 bundleIdentifier]);
  objc_msgSend(v7, "set_sourceApplicationBundleIdentifier:", v10);

  unsigned __int8 v11 = -[AMSURLSession initWithConfiguration:delegate:delegateQueue:]( objc_alloc(&OBJC_CLASS___AMSURLSession),  "initWithConfiguration:delegate:delegateQueue:",  v7,  v5,  0LL);
  return v11;
}

id sub_1001E66A0(id a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = v6;
  if (a1)
  {
    id v8 = [v6 copy];
    objc_initWeak(&location, a1);
    id v9 = objc_alloc(&OBJC_CLASS___AMSMutableLazyPromise);
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472LL;
    void v12[2] = sub_1001E67D0;
    void v12[3] = &unk_1003EC080;
    objc_copyWeak(&v15, &location);
    void v12[4] = a1;
    id v13 = v5;
    id v10 = v8;
    id v14 = v10;
    a1 = [v9 initWithBlock:v12];

    objc_destroyWeak(&v15);
    objc_destroyWeak(&location);
  }

  return a1;
}

void sub_1001E67AC(_Unwind_Exception *a1)
{
}

void sub_1001E67D0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  id v5 = sub_1001E6498(*(void **)(a1 + 32));
  id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t v9 = objc_opt_class(&OBJC_CLASS___NSMutableURLRequest, v8);
  char isKindOfClass = objc_opt_isKindOfClass(v7, v9);
  unsigned __int8 v11 = *(void **)(a1 + 40);
  if ((isKindOfClass & 1) != 0) {
    id v12 = v11;
  }
  else {
    id v12 = [v11 mutableCopy];
  }
  id v13 = v12;
  id v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSUUID UUID](&OBJC_CLASS___NSUUID, "UUID"));
  id v15 = (void *)objc_claimAutoreleasedReturnValue([v14 UUIDString]);

  sub_1001E3D00((uint64_t)v13, v15);
  uint64_t v30 = 0LL;
  uint64_t v31 = &v30;
  uint64_t v32 = 0x3032000000LL;
  id v33 = sub_1001E6A0C;
  uint64_t v34 = sub_1001E6A1C;
  uint64_t v16 = *(void *)(a1 + 40);
  v26[0] = _NSConcreteStackBlock;
  v26[1] = 3221225472LL;
  void v26[2] = sub_1001E6A24;
  v26[3] = &unk_1003EC030;
  id v17 = v6;
  id v27 = v17;
  id v18 = v15;
  id v28 = v18;
  id v19 = v3;
  id v29 = v19;
  id v35 = (id)objc_claimAutoreleasedReturnValue([WeakRetained dataTaskWithRequest:v16 completionHandler:v26]);
  if (v17 && v18) {
    sub_1001857E0(v17[1], *(void **)(a1 + 48), v18);
  }
  [(id)v31[5] resume];
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 3221225472LL;
  void v22[2] = sub_1001E6A9C;
  v22[3] = &unk_1003EC058;
  unsigned int v20 = v17;
  uint64_t v23 = v20;
  id v21 = v18;
  id v24 = v21;
  uint64_t v25 = &v30;
  [v19 addErrorBlock:v22];

  _Block_object_dispose(&v30, 8);
}

void sub_1001E69F4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
}

uint64_t sub_1001E6A0C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1001E6A1C(uint64_t a1)
{
}

void sub_1001E6A24(void *a1, void *a2, void *a3)
{
  id v10 = a2;
  id v5 = a3;
  uint64_t v7 = a1[4];
  id v6 = (void *)a1[5];
  if (v7) {
    BOOL v8 = v6 == 0LL;
  }
  else {
    BOOL v8 = 1;
  }
  if (!v8) {
    sub_1001857E0(*(void *)(v7 + 8), 0LL, v6);
  }
  uint64_t v9 = (void *)a1[6];
  if (v5) {
    [v9 finishWithError:v5];
  }
  else {
    [v9 finishWithResult:v10];
  }
}

void sub_1001E6A9C(void *a1, void *a2)
{
  id v6 = a2;
  uint64_t v4 = a1[4];
  id v3 = (void *)a1[5];
  if (v4) {
    BOOL v5 = v3 == 0LL;
  }
  else {
    BOOL v5 = 1;
  }
  if (!v5) {
    sub_1001857E0(*(void *)(v4 + 8), 0LL, v3);
  }
  if ([v6 code] == (id)1 || objc_msgSend(v6, "code") == (id)3072) {
    [*(id *)(*(void *)(a1[6] + 8) + 40) cancel];
  }
}

id sub_1001E6B18(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  objc_opt_self(a1);
  uint64_t v19 = 0LL;
  unsigned int v20 = &v19;
  uint64_t v21 = 0x3032000000LL;
  uint64_t v22 = sub_1001E6D38;
  uint64_t v23 = sub_1001E6D48;
  id v24 = 0LL;
  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToLongLong:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToLongLong:",  @"parent_id",  a2));
  v26[0] = v6;
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"blocked",  &__kCFBooleanFalse));
  v26[1] = v7;
  BOOL v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v26, 2LL));
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v8));

  id v10 = sub_10024C1D0((uint64_t)&OBJC_CLASS___AppPackageEntity, v5, v9);
  unsigned __int8 v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
  uint64_t v25 = @"package_type";
  id v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v25, 1LL));
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472LL;
  void v16[2] = sub_1001E6D50;
  v16[3] = &unk_1003EC0C0;
  id v18 = &v19;
  id v13 = v5;
  id v17 = v13;
  [v11 enumeratePersistentIDsAndProperties:v12 usingBlock:v16];

  id v14 = (id)v20[5];
  _Block_object_dispose(&v19, 8);

  return v14;
}

void sub_1001E6D14( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_1001E6D38(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1001E6D48(uint64_t a1)
{
}

void sub_1001E6D50(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, _BYTE *a5)
{
  id v8 = a3;
  uint64_t v9 = -[SQLiteEntity initWithPersistentID:onConnection:]( objc_alloc(&OBJC_CLASS___AppPackageEntity),  "initWithPersistentID:onConnection:",  a2,  *(void *)(a1 + 32));
  uint64_t v10 = *(void *)(*(void *)(a1 + 40) + 8LL);
  unsigned __int8 v11 = *(void **)(v10 + 40);
  *(void *)(v10 + 40) = v9;

  id v12 = sub_1001DF664(v8, @"package_type");
  if (v12 == (id)1) {
    *a5 = 1;
  }
}

void *sub_1001E6DFC(void *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    v7.receiver = a1;
    v7.super_class = (Class)&OBJC_CLASS___ODRManifestRequestTask;
    a1 = objc_msgSendSuper2(&v7, "init");
    if (a1)
    {
      id v4 = [v3 copy];
      id v5 = (void *)a1[5];
      a1[5] = v4;
    }
  }

  return a1;
}

id *sub_1001E75A8(id *a1, void *a2)
{
  id v4 = a2;
  if (a1)
  {
    v7.receiver = a1;
    v7.super_class = (Class)&OBJC_CLASS___ODRZipStreamDataConsumer;
    id v5 = (id *)objc_msgSendSuper2(&v7, "init");
    a1 = v5;
    if (v5) {
      objc_storeStrong(v5 + 2, a2);
    }
  }

  return a1;
}

uint64_t sub_1001E7720(uint64_t a1, uint64_t a2, char a3)
{
  *(_BYTE *)(*(void *)(a1 + 32) + 24LL) = 1;
  *(_BYTE *)(*(void *)(a1 + 32) + 8LL) = a3;
  return (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16LL))();
}

void sub_1001E77FC(uint64_t a1, void *a2)
{
  id v4 = a2;
  if (ASDErrorIsEqual())
  {

    id v3 = 0LL;
  }

  else
  {
    id v3 = v4;
  }

  id v5 = v3;
  (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_1001E7984(uint64_t a1, uint64_t a2, void *a3)
{
  if (!a3) {
    *(void *)(*(void *)(a1 + 32) + 32LL) = a2;
  }
  uint64_t v4 = *(void *)(a1 + 32);
  id v5 = *(void **)(v4 + 16);
  id v6 = (id *)(v4 + 40);
  id v8 = a3;
  id WeakRetained = objc_loadWeakRetained(v6);
  [v5 setExtractorDelegate:WeakRetained];

  (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
}

uint64_t sub_1001E7AD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3) {
    *(void *)(*(void *)(a1 + 32) + 32LL) = a2;
  }
  return (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16LL))();
}

void sub_1001E7F2C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    uint64_t v7 = ASDLogHandleForCategory(36LL);
    id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      uint64_t v9 = *(void *)(a1 + 32);
      int v10 = 138543618;
      uint64_t v11 = v9;
      __int16 v12 = 2114;
      id v13 = v6;
      _os_log_error_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_ERROR,  "[%{public}@] Failed authentication request with error %{public}@",  (uint8_t *)&v10,  0x16u);
    }
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
}

void sub_1001E8264(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    uint64_t v7 = ASDLogHandleForCategory(36LL);
    id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v9 = *(void *)(a1 + 32);
      int v10 = 138543618;
      uint64_t v11 = v9;
      __int16 v12 = 2114;
      id v13 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] Error in dialog task: %{public}@",  (uint8_t *)&v10,  0x16u);
    }
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
}

id sub_1001E8354(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    if (qword_100462278 != -1) {
      dispatch_once(&qword_100462278, &stru_1003EC198);
    }
    a1 = (void *)objc_claimAutoreleasedReturnValue([(id)qword_100462270 stringFromDate:v1]);
  }

  return a1;
}

void sub_1001E83B0(id a1)
{
  id v1 = objc_alloc_init(&OBJC_CLASS___NSISO8601DateFormatter);
  uint64_t v2 = (void *)qword_100462270;
  qword_100462270 = (uint64_t)v1;
}

id sub_1001E83D8(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    if (qword_100462288 != -1) {
      dispatch_once(&qword_100462288, &stru_1003EC1B8);
    }
    a1 = (void *)objc_claimAutoreleasedReturnValue([(id)qword_100462280 stringFromDate:v1]);
  }

  return a1;
}

void sub_1001E8434(id a1)
{
  id v1 = objc_alloc_init(&OBJC_CLASS___NSDateFormatter);
  uint64_t v2 = (void *)qword_100462280;
  qword_100462280 = (uint64_t)v1;

  id v3 = -[NSLocale initWithLocaleIdentifier:]( objc_alloc(&OBJC_CLASS___NSLocale),  "initWithLocaleIdentifier:",  @"en_US_POSIX");
  [(id)qword_100462280 setLocale:v3];
  [(id)qword_100462280 setDateFormat:@"yyyy-MM-dd HH:mm:ss"];
}

id sub_1001E84AC(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    if (qword_100462298 != -1) {
      dispatch_once(&qword_100462298, &stru_1003EC1D8);
    }
    a1 = (void *)objc_claimAutoreleasedReturnValue([(id)qword_100462290 stringFromDate:v1]);
  }

  return a1;
}

void sub_1001E8508(id a1)
{
  id v1 = objc_alloc_init(&OBJC_CLASS___NSDateFormatter);
  uint64_t v2 = (void *)qword_100462290;
  qword_100462290 = (uint64_t)v1;

  id v3 = -[NSLocale initWithLocaleIdentifier:]( objc_alloc(&OBJC_CLASS___NSLocale),  "initWithLocaleIdentifier:",  @"en_US_POSIX");
  [(id)qword_100462290 setLocale:v3];
  [(id)qword_100462290 setDateFormat:@"yyyy-MM-dd"];
}

id *sub_1001E8580(void *a1, void *a2, void *a3, void *a4)
{
  id v8 = a2;
  id v9 = a3;
  id v10 = a4;
  if (a1
    && (v20.receiver = a1,
        v20.super_class = (Class)&OBJC_CLASS___SQLiteDatabaseStoreSchema,
        (uint64_t v11 = (id *)objc_msgSendSuper2(&v20, "init")) != 0))
  {
    __int16 v12 = v11;
    objc_storeStrong(v11 + 1, a2);
    objc_storeStrong(v12 + 2, a3);
    id v13 = [v10 copy];
    id v14 = v12[3];
    void v12[3] = v13;

    uint64_t v15 = (uint64_t)v12[1];
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 3221225472LL;
    v18[2] = sub_1001E8694;
    v18[3] = &unk_1003EC200;
    uint64_t v16 = v12;
    uint64_t v19 = v16;
    sub_1001D6D30(v15, v18);
  }

  else
  {
    uint64_t v16 = 0LL;
  }

  return v16;
}

uint64_t sub_1001E8694(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)(a1 + 32) + 8LL);
  if (v2)
  {
    sub_1001D68EC(v2, @"PRAGMA user_version = 1;", 0LL, 0LL);
    uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 8LL);
    if (v3) {
      sub_1001D68EC( v3,  @"CREATE TABLE IF NOT EXISTS schema_version (schema_name TEXT, schema_version INTEGER DEFAULT 0, PRIMARY KEY(schema_name));",
    }
        0LL,
        0LL);
  }

  return 1LL;
}

uint64_t sub_1001E86F4(uint64_t a1)
{
  if (!a1) {
    return 0LL;
  }
  uint64_t v5 = 0LL;
  id v6 = &v5;
  uint64_t v7 = 0x2020000000LL;
  uint64_t v8 = 0LL;
  uint64_t v1 = *(void *)(a1 + 8);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  void v4[2] = sub_1001E87B0;
  v4[3] = &unk_1003EBBD8;
  void v4[4] = a1;
  void v4[5] = &v5;
  sub_1001D64E8(v1, @"SELECT schema_version FROM schema_version WHERE schema_name = ?", v4);
  uint64_t v2 = v6[3];
  _Block_object_dispose(&v5, 8);
  return v2;
}

void sub_1001E8798( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_1001E87B0(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 16LL);
  id v4 = a2;
  [v4 bindString:v3 atPosition:1];
  uint64_t v5 = sub_1001BF3B4((uint64_t)v4);

  *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = v5;
}

uint64_t sub_1001E880C(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = v5;
  if (a1)
  {
    uint64_t v7 = *(void *)(a1 + 8);
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472LL;
    void v10[2] = sub_1001E88AC;
    v10[3] = &unk_1003EC250;
    void v10[4] = a1;
    id v11 = v5;
    uint64_t v12 = a2;
    uint64_t v8 = sub_1001D6B74(v7, v10);
  }

  else
  {
    uint64_t v8 = 0LL;
  }

  return v8;
}

uint64_t sub_1001E88AC(void *a1)
{
  uint64_t v2 = sub_1002E977C( (id *)objc_alloc(&OBJC_CLASS___SQLiteDatabaseStoreMigrator),  *(void **)(a1[4] + 8LL),  *(void **)(a1[4] + 24LL));
  (*(void (**)(void))(a1[5] + 16LL))();
  if (v2 && ((_BYTE)v2[3] & 1) != 0)
  {
    uint64_t v4 = a1[4];
    uint64_t v5 = *(void *)(v4 + 8);
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472LL;
    v8[2] = sub_1001E8970;
    v8[3] = &unk_1003EC228;
    uint64_t v6 = a1[6];
    void v8[4] = v4;
    v8[5] = v6;
    uint64_t v3 = sub_1001D68EC( v5,  @"INSERT OR REPLACE INTO schema_version (schema_name, schema_version) VALUES (?, ?)",  0LL,  v8);
  }

  else
  {
    uint64_t v3 = 0LL;
  }

  return v3;
}

void sub_1001E8970(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 16LL);
  id v4 = a2;
  [v4 bindString:v3 atPosition:1];
  [v4 bindInt64:*(void *)(a1 + 40) atPosition:2];
}

uint64_t sub_1001E89C4(uint64_t a1, uint64_t a2, void *a3, int a4)
{
  uint64_t v7 = a3;
  if (a1)
  {
    int v23 = a4;
    uint64_t v8 = sub_1001E86F4(a1);
    if (v8 < a2)
    {
      while (1)
      {
        id v27 = 0LL;
        *(void *)id v28 = -1LL;
        v7[2](v7, v8, v28, &v27);
        if (!v27)
        {
          uint64_t v18 = ASDLogHandleForCategory(35LL);
          id v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v18);
          if (!os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
            goto LABEL_20;
          }
          *(_DWORD *)__int128 buf = 134218240;
          *(void *)&uint8_t buf[4] = v8;
          *(_WORD *)&_BYTE buf[12] = 2048;
          *(void *)&buf[14] = *(void *)v28;
          id v17 = "No migration block provided to migrate schema version %lli -> %lli";
          goto LABEL_32;
        }

        char v10 = sub_1001E880C(a1, *(uint64_t *)v28, v27);
        uint64_t v11 = ASDLogHandleForCategory(35LL);
        uint64_t v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
        id v13 = v12;
        if ((v10 & 1) == 0)
        {
          if (!os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
            goto LABEL_20;
          }
          *(_DWORD *)__int128 buf = 134218240;
          *(void *)&uint8_t buf[4] = v8;
          *(_WORD *)&_BYTE buf[12] = 2048;
          *(void *)&buf[14] = *(void *)v28;
          id v17 = "Database migration function failed for %lli => %lli";
          goto LABEL_32;
        }

        if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)__int128 buf = 134218240;
          *(void *)&uint8_t buf[4] = v8;
          *(_WORD *)&_BYTE buf[12] = 2048;
          *(void *)&buf[14] = *(void *)v28;
          _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "Database migration function succeeded for %lli => %lli",  buf,  0x16u);
        }

        uint64_t v8 = *(void *)v28;
        if (v8 >= a2) {
          goto LABEL_21;
        }
      }

      BOOL v14 = *(void *)v28 == -1LL;
      uint64_t v15 = ASDLogHandleForCategory(35LL);
      uint64_t v16 = (os_log_s *)objc_claimAutoreleasedReturnValue(v15);
      id v13 = v16;
      if (!v14)
      {
        if (!os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
          goto LABEL_20;
        }
        *(_DWORD *)__int128 buf = 134218240;
        *(void *)&uint8_t buf[4] = *(void *)v28;
        *(_WORD *)&_BYTE buf[12] = 2048;
        *(void *)&buf[14] = v8;
        id v17 = "Invalid version %lli provided; currentVersion: %lli";
LABEL_32:
        _os_log_error_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_ERROR, v17, buf, 0x16u);
        goto LABEL_20;
      }

      if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)__int128 buf = 134217984;
        *(void *)&uint8_t buf[4] = *(void *)v28;
        _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "Version mapping not provided for %lli",  buf,  0xCu);
      }

void sub_1001E8D6C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
}

BOOL sub_1001E8D90(uint64_t *a1)
{
  if ((sub_1001E880C(a1[4], 0LL, &stru_1003EC270) & 1) != 0)
  {
    __int128 v20 = 0u;
    __int128 v21 = 0u;
    __int128 v18 = 0u;
    __int128 v19 = 0u;
    id v2 = *(id *)(a1[4] + 24);
    id v3 = [v2 countByEnumeratingWithState:&v18 objects:v24 count:16];
    if (v3)
    {
      id v4 = v3;
      uint64_t v5 = *(void *)v19;
      while (2)
      {
        uint64_t v6 = 0LL;
        do
        {
          if (*(void *)v19 != v5) {
            objc_enumerationMutation(v2);
          }
          uint64_t v7 = *(void *)(*((void *)&v18 + 1) + 8LL * (void)v6);
          uint64_t v17 = 0LL;
          uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([@"DROP TABLE IF EXISTS " stringByAppendingString:v7]);
          uint64_t v9 = *(void *)(a1[4] + 8);
          if (!v9 || (sub_1001D68EC(v9, v8, &v17, 0LL) & 1) == 0)
          {
            uint64_t v15 = ASDLogHandleForCategory(35LL);
            uint64_t v16 = (os_log_s *)objc_claimAutoreleasedReturnValue(v15);
            if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)__int128 buf = 138543362;
              uint64_t v23 = v17;
              _os_log_error_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_ERROR,  "Failed to drop table: %{public}@",  buf,  0xCu);
            }

            *(_BYTE *)(*(void *)(a1[6] + 8) + 24LL) = 0;
            return 0LL;
          }

          uint64_t v6 = (char *)v6 + 1;
        }

        while (v4 != v6);
        id v4 = [v2 countByEnumeratingWithState:&v18 objects:v24 count:16];
        if (v4) {
          continue;
        }
        break;
      }
    }

    uint64_t v10 = ASDLogHandleForCategory(35LL);
    uint64_t v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "Successfully reset schema; requesting migration from version 0",
        buf,
        2u);
    }

    *(_BYTE *)(*(void *)(a1[6] + 8) + 24LL) = sub_1001E89C4(a1[4], 0LL, a1[5], 1LL);
    return *(_BYTE *)(*(void *)(a1[6] + 8) + 24LL) != 0;
  }

  else
  {
    uint64_t v13 = ASDLogHandleForCategory(35LL);
    BOOL v14 = (os_log_s *)objc_claimAutoreleasedReturnValue(v13);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_error_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_ERROR,  "Failed to set schema version back to 0; rolling back transaction",
        buf,
        2u);
    }

    BOOL result = 0LL;
    *(_BYTE *)(*(void *)(a1[6] + 8) + 24LL) = 0;
  }

  return result;
}

NSData *sub_1001E90D0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  uint64_t v6 = objc_opt_self(a1);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"%@.%@",  @"com.apple.appstored.encryption",  v5));

  id v8 = v7;
  uint64_t v9 = objc_opt_self(v6);
  Mutable = CFDictionaryCreateMutable(kCFAllocatorDefault, 3LL, 0LL, 0LL);
  CFDictionaryAddValue(Mutable, kSecAttrAccount, v8);

  CFDictionaryAddValue(Mutable, kSecAttrNoLegacy, kCFBooleanTrue);
  CFDictionaryAddValue(Mutable, kSecClass, kSecClassGenericPassword);
  CFDictionaryAddValue(Mutable, kSecReturnData, kCFBooleanTrue);
  CFTypeRef result = 0LL;
  OSStatus v11 = SecItemCopyMatching(Mutable, &result);
  if (v11) {
    BOOL v12 = 1;
  }
  else {
    BOOL v12 = result == 0LL;
  }
  if (!v12)
  {
    uint64_t v15 = objc_alloc(&OBJC_CLASS___NSData);
    uint64_t v16 = -[NSData initWithBase64EncodedData:options:](v15, "initWithBase64EncodedData:options:", result, 0LL);
    CFRelease(result);
    uint64_t v17 = 0LL;
    if (!a3) {
      goto LABEL_17;
    }
    goto LABEL_15;
  }

  if (v11 == -25300 || v11 == 0)
  {
    uint64_t v14 = ASDErrorWithUserInfoAndFormat(901LL, 0LL, @"SecItemCopyMatching succeeded with empty results");
    uint64_t v18 = objc_claimAutoreleasedReturnValue(v14);
  }

  else
  {
    uint64_t v18 = sub_1001E9480(v9, v11);
  }

  uint64_t v17 = (void *)v18;
  uint64_t v16 = 0LL;
  if (a3)
  {
LABEL_15:
    if (!v16) {
      *a3 = v17;
    }
  }

BOOL sub_1001E92A8(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a2;
  uint64_t v9 = objc_opt_self(a1);
  uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"%@.%@",  @"com.apple.appstored.encryption",  v7));

  id v11 = v10;
  id v12 = v8;
  uint64_t v13 = objc_opt_self(v9);
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v12 base64EncodedDataWithOptions:0]);

  Mutable = CFDictionaryCreateMutable(kCFAllocatorDefault, 7LL, 0LL, 0LL);
  CFDictionaryAddValue(Mutable, kSecAttrAccount, v11);

  CFDictionaryAddValue(Mutable, kSecAttrLabel, @"App Store User Data Encryption");
  CFDictionaryAddValue(Mutable, kSecAttrNoLegacy, kCFBooleanTrue);
  CFDictionaryAddValue(Mutable, kSecClass, kSecClassGenericPassword);
  CFDictionaryAddValue(Mutable, kSecValueData, v14);
  SecItemDelete(Mutable);
  OSStatus v16 = SecItemAdd(Mutable, 0LL);
  CFRelease(Mutable);
  if (v16)
  {
    uint64_t v17 = (void *)sub_1001E9480(v13, v16);
    id v18 = v17;
    if (a4)
    {
      id v18 = v17;
      *a4 = v18;
    }
  }

  else
  {
    id v18 = 0LL;
  }

  return v16 == 0;
}

uint64_t sub_1001E9480(uint64_t a1, OSStatus a2)
{
  id v3 = (__CFString *)SecCopyErrorMessageString(a2, 0LL);
  if (v3) {
    id v4 = @"Keychain failed to return value (error %d): %@";
  }
  else {
    id v4 = @"Keychain failed to return value (error %d)";
  }
  uint64_t v5 = ASDErrorWithUserInfoAndFormat(523LL, 0LL, v4);
  uint64_t v6 = objc_claimAutoreleasedReturnValue(v5);

  return v6;
}

void *sub_1001E9630(void *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    v7.receiver = a1;
    v7.super_class = (Class)&OBJC_CLASS___ODRApplicationRepairTask;
    a1 = objc_msgSendSuper2(&v7, "init");
    if (a1)
    {
      id v4 = [v3 copy];
      uint64_t v5 = (void *)a1[5];
      a1[5] = v4;
    }
  }

  return a1;
}

void sub_1001E971C(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  if (v1)
  {
    uint64_t v5 = 0LL;
    uint64_t v6 = &v5;
    uint64_t v7 = 0x3032000000LL;
    id v8 = sub_1001E9814;
    uint64_t v9 = sub_1001E9824;
    id v10 = 0LL;
    id v2 = sub_1001B53D0((uint64_t)&OBJC_CLASS___ODRDatabaseStore);
    id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 3221225472LL;
    void v4[2] = sub_1001E982C;
    v4[3] = &unk_1003EB6B8;
    void v4[4] = v1;
    void v4[5] = &v5;
    [v3 modifyUsingTransaction:v4];

    if (v6[5]) {
      objc_msgSend(v1, "completeWithError:");
    }
    else {
      [v1 completeWithSuccess];
    }
    _Block_object_dispose(&v5, 8);
  }

void sub_1001E97FC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_1001E9814(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1001E9824(uint64_t a1)
{
}

uint64_t sub_1001E982C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(*(void *)(a1 + 32) + 40LL);
  uint64_t v5 = *(void *)(*(void *)(a1 + 40) + 8LL);
  id obj = *(id *)(v5 + 40);
  uint64_t v6 = sub_1001876E8(v3, v4);
  objc_storeStrong((id *)(v5 + 40), obj);
  if ((v6 & 1) != 0)
  {
    unsigned int v60 = v6;
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
    id v8 = sub_1001ACD2C((uint64_t)&OBJC_CLASS___ODRAssetPack, *(void **)(*(void *)(a1 + 32) + 40LL));
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
    uint64_t v61 = a1;
    __int128 v63 = v3;
    id v10 = sub_100188344(v3, *(void **)(*(void *)(a1 + 32) + 40LL));
    __int128 v65 = (id *)objc_claimAutoreleasedReturnValue(v10);
    id v11 = sub_10020CCEC(v65);
    __int128 v68 = 0u;
    __int128 v69 = 0u;
    __int128 v70 = 0u;
    __int128 v71 = 0u;
    id v66 = (id)objc_claimAutoreleasedReturnValue(v11);
    id v12 = [v66 countByEnumeratingWithState:&v68 objects:v79 count:16];
    if (v12)
    {
      id v13 = v12;
      uint64_t v14 = *(void *)v69;
      __int128 v62 = v7;
      id v64 = v9;
      while (2)
      {
        for (uint64_t i = 0LL; i != v13; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v69 != v14) {
            objc_enumerationMutation(v66);
          }
          OSStatus v16 = *(void **)(*((void *)&v68 + 1) + 8LL * (void)i);
          id v17 = sub_1001F7B20(v16);
          id v18 = (void *)objc_claimAutoreleasedReturnValue(v17);
          __int128 v19 = (void *)objc_claimAutoreleasedReturnValue([v18 absoluteString]);

          if (v19 && [v19 hasPrefix:v9])
          {
            id v20 = sub_10020CB38(v65);
            __int128 v21 = (void *)objc_claimAutoreleasedReturnValue(v20);
            id v22 = sub_1001ACFD4(v16, v21);
            uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue(v22);
            id v24 = (void *)objc_claimAutoreleasedReturnValue( +[NSURL fileURLWithPath:isDirectory:]( &OBJC_CLASS___NSURL,  "fileURLWithPath:isDirectory:",  v23,  1LL));

            id v25 = sub_1001F7B20(v16);
            uint64_t v26 = (os_log_s *)objc_claimAutoreleasedReturnValue(v25);
            if (!-[os_log_s isFileURL](v26, "isFileURL")
              || [v24 isEqual:v26])
            {
              uint64_t v49 = ASDLogHandleForCategory(19LL);
              __int128 v50 = (os_log_s *)objc_claimAutoreleasedReturnValue(v49);
              if (os_log_type_enabled(v50, OS_LOG_TYPE_ERROR))
              {
                id v54 = sub_1001F7970(v16);
                id v55 = (void *)objc_claimAutoreleasedReturnValue(v54);
                uint64_t v56 = *(void *)(*(void *)(v61 + 32) + 40LL);
                *(_DWORD *)__int128 buf = 138543874;
                __int128 v74 = v55;
                __int16 v75 = 2114;
                uint64_t v76 = v56;
                __int16 v77 = 2114;
                __int16 v78 = v26;
                _os_log_error_impl( (void *)&_mh_execute_header,  v50,  OS_LOG_TYPE_ERROR,  "Asset %{public}@ for application %{public}@ does not need repair: %{public}@",  buf,  0x20u);
              }

              goto LABEL_35;
            }

            id v27 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s path](v26, "path"));
            unsigned __int8 v28 = [v7 fileExistsAtPath:v27];

            if ((v28 & 1) == 0)
            {
              uint64_t v51 = ASDLogHandleForCategory(19LL);
              __int128 v52 = (os_log_s *)objc_claimAutoreleasedReturnValue(v51);
              if (os_log_type_enabled(v52, OS_LOG_TYPE_ERROR))
              {
                id v57 = sub_1001F7970(v16);
                id v58 = (void *)objc_claimAutoreleasedReturnValue(v57);
                uint64_t v59 = *(void *)(*(void *)(v61 + 32) + 40LL);
                *(_DWORD *)__int128 buf = 138543874;
                __int128 v74 = v58;
                __int16 v75 = 2114;
                uint64_t v76 = v59;
                __int16 v77 = 2114;
                __int16 v78 = v26;
                _os_log_error_impl( (void *)&_mh_execute_header,  v52,  OS_LOG_TYPE_ERROR,  "Asset %{public}@ for application %{public}@ has gone: %{public}@",  buf,  0x20u);
              }

              sub_1001F7DBC(v16, 0LL);
              sub_1001C5884(v63, v16);
LABEL_35:

              uint64_t v9 = v64;
              goto LABEL_36;
            }

            id v29 = (void *)objc_claimAutoreleasedReturnValue([v24 path]);
            unsigned __int8 v30 = [v7 fileExistsAtPath:v29];

            if ((v30 & 1) != 0)
            {
              uint64_t v31 = ASDLogHandleForCategory(19LL);
              uint64_t v32 = (os_log_s *)objc_claimAutoreleasedReturnValue(v31);
              if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR))
              {
                id v33 = sub_1001F7970(v16);
                uint64_t v34 = (void *)objc_claimAutoreleasedReturnValue(v33);
                uint64_t v35 = *(void *)(*(void *)(v61 + 32) + 40LL);
                *(_DWORD *)__int128 buf = 138543618;
                __int128 v74 = v34;
                __int16 v75 = 2114;
                uint64_t v76 = v35;
                _os_log_error_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_ERROR,  "Asset %{public}@ for application %{public}@ already repaired",  buf,  0x16u);
              }
            }

            else
            {
              id v67 = 0LL;
              unsigned int v36 = [v7 moveItemAtURL:v26 toURL:v24 error:&v67];
              uint64_t v32 = (os_log_s *)v67;
              uint64_t v37 = ASDLogHandleForCategory(19LL);
              uint64_t v38 = (os_log_s *)objc_claimAutoreleasedReturnValue(v37);
              uint64_t v39 = v38;
              if (v36)
              {
                if (os_log_type_enabled(v38, OS_LOG_TYPE_DEFAULT))
                {
                  id v40 = sub_1001F7970(v16);
                  uint64_t v41 = (void *)objc_claimAutoreleasedReturnValue(v40);
                  uint64_t v42 = *(void *)(*(void *)(v61 + 32) + 40LL);
                  *(_DWORD *)__int128 buf = 138543618;
                  __int128 v74 = v41;
                  __int16 v75 = 2114;
                  uint64_t v76 = v42;
                  _os_log_impl( (void *)&_mh_execute_header,  v39,  OS_LOG_TYPE_DEFAULT,  "Asset %{public}@ for application %{public}@ moved successfully",  buf,  0x16u);
                }

                sub_1001F7DBC(v16, v24);
                sub_1001C5884(v63, v16);
              }

              else
              {
                if (os_log_type_enabled(v38, OS_LOG_TYPE_ERROR))
                {
                  id v43 = sub_1001F7970(v16);
                  id v44 = (void *)objc_claimAutoreleasedReturnValue(v43);
                  uint64_t v45 = *(void *)(*(void *)(v61 + 32) + 40LL);
                  *(_DWORD *)__int128 buf = 138543874;
                  __int128 v74 = v44;
                  __int16 v75 = 2114;
                  uint64_t v76 = v45;
                  __int16 v77 = 2114;
                  __int16 v78 = v32;
                  _os_log_error_impl( (void *)&_mh_execute_header,  v39,  OS_LOG_TYPE_ERROR,  "Asset %{public}@ for application %{public}@ could not be moved error: %{public}@",  buf,  0x20u);
                }
              }

              uint64_t v7 = v62;
            }

            uint64_t v9 = v64;
          }
        }

        id v13 = [v66 countByEnumeratingWithState:&v68 objects:v79 count:16];
        if (v13) {
          continue;
        }
        break;
      }
    }

uint64_t sub_1001EA098(uint64_t result)
{
  if (result) {
    return sub_1002FA604((uint64_t)&OBJC_CLASS___AppDefaultsManager);
  }
  return result;
}

void sub_1001EA0AC(id *a1, int a2)
{
  if (a1)
  {
    if (a2)
    {
      uint64_t v3 = ASDLogHandleForCategory(17LL);
      id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
      if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
      {
        id v5 = [a1[1] count];
        uint64_t v6 = sub_1001EA32C(a1);
        uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
        id v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "componentsJoinedByString:", @", "));
        *(_DWORD *)id v12 = 134218242;
        *(void *)&void v12[4] = v5;
        *(_WORD *)&v12[12] = 2114;
        *(void *)&v12[14] = v8;
        _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "Persisting %ld configuration(s): [%{public}@]",  v12,  0x16u);
      }
    }

    if ([a1[1] count])
    {
      id v9 = a1[1];
      id v10 = objc_opt_new(&OBJC_CLASS___NSMutableArray);
      *(void *)id v12 = _NSConcreteStackBlock;
      *(void *)&v12[8] = 3221225472LL;
      *(void *)&v12[16] = sub_1001EA51C;
      id v13 = &unk_1003EC310;
      id v11 = v10;
      uint64_t v14 = v11;
      [v9 enumerateKeysAndObjectsUsingBlock:v12];

      sub_1002FA954((uint64_t)&OBJC_CLASS___AppDefaultsManager, v11);
    }

    else
    {
      sub_1002FA604((uint64_t)&OBJC_CLASS___AppDefaultsManager);
    }
  }

void sub_1001EA248(uint64_t a1, void *a2)
{
  id v4 = a2;
  if (a1)
  {
    uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 8) allValues]);
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472LL;
    void v5[2] = sub_1001EA2DC;
    _DWORD v5[3] = &unk_1003EC2C0;
    id v6 = v4;
    [v3 enumerateObjectsUsingBlock:v5];
  }
}

void sub_1001EA2DC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  if (!v3 || *((void *)v3 + 3) <= 2uLL)
  {
    id v5 = v3;
    (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();
    id v4 = v5;
  }
}

id *sub_1001EA32C(id *a1)
{
  uint64_t v1 = a1;
  if (a1)
  {
    id v2 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    id v3 = (void *)objc_claimAutoreleasedReturnValue([v1[1] allValues]);
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472LL;
    _DWORD v6[2] = sub_1001EA3D8;
    v6[3] = &unk_1003EC2E8;
    uint64_t v7 = v2;
    id v4 = v2;
    [v3 enumerateObjectsUsingBlock:v6];

    uint64_t v1 = (id *)-[NSMutableArray copy](v4, "copy");
  }

  return v1;
}

void sub_1001EA3D8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v9 = v3;
  if (v3) {
    id v4 = (void *)v3[1];
  }
  else {
    id v4 = 0LL;
  }
  id v5 = v4;

  if (v5)
  {
    id v6 = *(void **)(a1 + 32);
    if (v9) {
      uint64_t v7 = (void *)v9[1];
    }
    else {
      uint64_t v7 = 0LL;
    }
    id v8 = v7;
    [v6 addObject:v8];
  }
}

void sub_1001EA458(id *a1, uint64_t a2)
{
  if (a1)
  {
    uint64_t v3 = objc_claimAutoreleasedReturnValue([a1[1] objectForKey:a2]);
    if (v3) {
      ++*(void *)(v3 + 24);
    }
    id v4 = (id)v3;
    sub_1001EA0AC(a1, 0);
  }

void sub_1001EA4B8(uint64_t a1, void *a2)
{
  if (a1)
  {
    id v2 = *(void **)(a1 + 8);
    id v3 = a2;
    id v4 = v3;
    if (v3) {
      id v5 = (void *)*((void *)v3 + 1);
    }
    else {
      id v5 = 0LL;
    }
    id v6 = v5;
    [v2 setObject:v4 forKey:v6];
  }

void sub_1001EA51C(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  if (!v4 || v4[3] <= 2uLL)
  {
    id v6 = v4;
    id v5 = sub_10023B818(v4);
    if (v5) {
      [*(id *)(a1 + 32) addObject:v5];
    }

    id v4 = v6;
  }
}

void sub_1001EA590(void *a1, void *a2, int a3)
{
  id v5 = a2;
  id v6 = v5;
  if (!a1) {
    goto LABEL_79;
  }
  id v7 = sub_1001F7AD8(v5);
  id v117 = (void *)objc_claimAutoreleasedReturnValue(v7);
  id v8 = sub_1001F7BE8(v6);
  id v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
  id v10 = (void *)objc_claimAutoreleasedReturnValue([v9 valueForKey:@"label"]);
  id v11 = v10;
  if (v10) {
    id v12 = v10;
  }
  else {
    id v12 = (id)objc_claimAutoreleasedReturnValue([v9 valueForKey:@"strategy"]);
  }
  id v13 = v12;

  uint64_t v14 = objc_claimAutoreleasedReturnValue([v9 valueForKey:@"hash"]);
  int v114 = (void *)v14;
  SEL v115 = v13;
  id v116 = v9;
  if (!a3) {
    goto LABEL_53;
  }
  uint64_t v15 = v14;
  id v16 = sub_1002C8D7C(a1);
  id v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
  __int128 v19 = v17;
  if (!v17)
  {
    BOOL v26 = 0;
    goto LABEL_43;
  }

  id v20 = objc_getProperty(v17, v18, 16LL, 1);
  id v22 = objc_getProperty(v19, v21, 8LL, 1);
  uint64_t v23 = v22;
  if (!v20)
  {
    unsigned int v24 = 0;
    if (v22) {
      goto LABEL_10;
    }
LABEL_13:
    unsigned int v25 = 0;
    goto LABEL_14;
  }

  unsigned int v24 = [v20 isEqualToString:v13];
  if (!v23) {
    goto LABEL_13;
  }
LABEL_10:
  unsigned int v25 = [v23 isEqualToString:v15];
LABEL_14:
  int v27 = v24 & v25;
  uint64_t v28 = ASDLogHandleForCategory(19LL);
  id v29 = (os_log_s *)objc_claimAutoreleasedReturnValue(v28);
  if (os_log_type_enabled(v29, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)__int128 buf = 67109120;
    LODWORD(v123) = v27;
    _os_log_debug_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_DEBUG,  "Primary content hash matched new primary content hash: %{BOOL}d",  buf,  8u);
  }

  if ((v27 & 1) != 0)
  {
    int v30 = 1;
    goto LABEL_42;
  }

  uint64_t v31 = ASDLogHandleForCategory(19LL);
  uint64_t v32 = (os_log_s *)objc_claimAutoreleasedReturnValue(v31);
  if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)__int128 buf = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v32,  OS_LOG_TYPE_DEFAULT,  "Primary hash wasn't a match.  Checking the known hashes.",  buf,  2u);
  }

  __int128 v120 = 0u;
  __int128 v121 = 0u;
  __int128 v118 = 0u;
  __int128 v119 = 0u;
  id obj = v117;
  id v33 = [obj countByEnumeratingWithState:&v118 objects:v128 count:16];
  if (!v33)
  {
    int v30 = 0;
    goto LABEL_41;
  }

  id v34 = v33;
  uint64_t v109 = v19;
  uint64_t v35 = *(void *)v119;
  while (2)
  {
    for (uint64_t i = 0LL; i != v34; uint64_t i = (char *)i + 1)
    {
      if (*(void *)v119 != v35) {
        objc_enumerationMutation(obj);
      }
      uint64_t v37 = *(void **)(*((void *)&v118 + 1) + 8LL * (void)i);
      uint64_t v38 = (void *)objc_claimAutoreleasedReturnValue([v37 objectForKey:@"label"]);
      uint64_t v39 = v38;
      if (v38) {
        id v40 = v38;
      }
      else {
        id v40 = (id)objc_claimAutoreleasedReturnValue([v37 objectForKey:@"strategy"]);
      }
      uint64_t v41 = v40;

      uint64_t v42 = (void *)objc_claimAutoreleasedReturnValue([v37 objectForKey:@"hash"]);
      if (v20)
      {
        unsigned int v43 = [v20 isEqualToString:v41];
        if (!v23) {
          goto LABEL_33;
        }
      }

      else
      {
        unsigned int v43 = 0;
        if (!v23) {
          goto LABEL_33;
        }
      }

      if ((v43 & [v23 isEqualToString:v42]) == 1)
      {
        uint64_t v44 = ASDLogHandleForCategory(19LL);
        uint64_t v45 = (os_log_s *)objc_claimAutoreleasedReturnValue(v44);
        if (os_log_type_enabled(v45, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)__int128 buf = 138543874;
          uint64_t v123 = (uint64_t)v41;
          __int16 v124 = 2114;
          id v125 = v42;
          __int16 v126 = 1024;
          int v127 = 1;
          _os_log_impl( (void *)&_mh_execute_header,  v45,  OS_LOG_TYPE_DEFAULT,  "Primary content hash matched known hash [%{public}@, %{public}@]: %{BOOL}d",  buf,  0x1Cu);
        }

        int v30 = 1;
        goto LABEL_39;
      }

void sub_1001EB088(uint64_t a1, void *a2, void *a3)
{
  unsigned int v24 = a2;
  id v5 = a3;
  objc_opt_self(a1);
  if ((sub_100323BE0(v24) & 1) == 0)
  {
    id v6 = objc_alloc(&OBJC_CLASS___ProgressInfo);
    id v7 = sub_100323D88(v24);
    id v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
    id v9 = sub_100323C54(v24);
    id v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
    id v11 = sub_10031EDD4((id *)&v6->super.isa, v8, 0LL, v10);

    id v12 = sub_100323DD0(v24);
    id v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
    uint64_t v15 = v13;
    if (v11)
    {
      objc_setProperty_atomic(v11, v14, v13, 152LL);

      id Property = objc_getProperty(v11, v16, 152LL, 1);
    }

    else
    {

      id Property = 0LL;
    }

    id v18 = Property;

    if (v18) {
      uint64_t v19 = 384LL;
    }
    else {
      uint64_t v19 = 128LL;
    }
    if (!v24) {
      goto LABEL_16;
    }
    id v20 = sub_1001E2698(v24, (uint64_t)@"source_type");
    uint64_t v21 = v19 | 1;
    if (v20 != (id)2) {
      uint64_t v21 = v19;
    }
    uint64_t v19 = v20 == (id)1 ? v19 | 0x200 : v21;
    if (sub_1001E2698(v24, (uint64_t)@"coordinator_intent") == (id)6)
    {
      if (v11)
      {
        uint64_t v19 = 0LL;
        *((_BYTE *)v11 + 64) = 1;
LABEL_17:
        v11[18] = (id)v19;
      }
    }

    else
    {
LABEL_16:
      if (v11) {
        goto LABEL_17;
      }
    }

    id v22 = sub_1002B0944((uint64_t)&OBJC_CLASS___ProgressCache);
    uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue(v22);
    sub_1002B0A98((uint64_t)v23, v11, v5);
  }
}

void sub_1001EB250(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id v6 = v5;
  if (a1)
  {
    if (v5)
    {
      id v7 = *(void **)(a1 + 8);
      if (!v7)
      {
        id v8 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
        id v9 = *(void **)(a1 + 8);
        *(void *)(a1 + _Block_object_dispose(va, 8) = v8;

        id v7 = *(void **)(a1 + 8);
      }

      id v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", a3));
      [v7 setValue:v10 forKey:v6];
    }

    else
    {
      uint64_t v11 = ASDLogHandleForCategory(14LL);
      id v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)id v12 = 0;
        _os_log_error_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_ERROR,  "Dropping update to finshing due to no bundleID",  v12,  2u);
      }
    }
  }
}

void sub_1001EB330(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  if (a1 && v5)
  {
    id v10 = v5;
    id v6 = *(void **)(a1 + 16);
    if (!v6)
    {
      id v7 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
      id v8 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v7;

      id v6 = *(void **)(a1 + 16);
    }

    id v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", a3));
    [v6 setValue:v9 forKey:v10];

    id v5 = v10;
  }
}

void sub_1001EB3C4(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    id v4 = *(void **)(a1 + 24);
    id v7 = v3;
    if (!v4)
    {
      id v5 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
      id v6 = *(void **)(a1 + 24);
      *(void *)(a1 + 24) = v5;

      id v4 = *(void **)(a1 + 24);
    }

    [v4 addObject:v7];
    id v3 = v7;
  }
}

void sub_1001EB428(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    id v4 = *(void **)(a1 + 80);
    id v7 = v3;
    if (v4)
    {
      [v4 addObject:v3];
    }

    else
    {
      uint64_t v5 = objc_claimAutoreleasedReturnValue(+[NSMutableSet setWithObject:](&OBJC_CLASS___NSMutableSet, "setWithObject:", v3));
      id v6 = *(void **)(a1 + 80);
      *(void *)(a1 + 80) = v5;
    }

    id v3 = v7;
  }
}

void sub_1001EB494(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    id v4 = *(void **)(a1 + 88);
    id v7 = v3;
    if (v4)
    {
      [v4 addObject:v3];
    }

    else
    {
      uint64_t v5 = objc_claimAutoreleasedReturnValue(+[NSMutableSet setWithObject:](&OBJC_CLASS___NSMutableSet, "setWithObject:", v3));
      id v6 = *(void **)(a1 + 88);
      *(void *)(a1 + 8_Block_object_dispose(va, 8) = v5;
    }

    id v3 = v7;
  }
}

void sub_1001EB500(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    id v4 = *(void **)(a1 + 96);
    id v7 = v3;
    if (v4)
    {
      [v4 addObject:v3];
    }

    else
    {
      uint64_t v5 = objc_claimAutoreleasedReturnValue(+[NSMutableSet setWithObject:](&OBJC_CLASS___NSMutableSet, "setWithObject:", v3));
      id v6 = *(void **)(a1 + 96);
      *(void *)(a1 + 96) = v5;
    }

    id v3 = v7;
  }
}

void sub_1001EB56C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    id v4 = *(void **)(a1 + 104);
    id v7 = v3;
    if (v4)
    {
      [v4 addObject:v3];
    }

    else
    {
      uint64_t v5 = objc_claimAutoreleasedReturnValue(+[NSMutableSet setWithObject:](&OBJC_CLASS___NSMutableSet, "setWithObject:", v3));
      id v6 = *(void **)(a1 + 104);
      *(void *)(a1 + 104) = v5;
    }

    id v3 = v7;
  }
}

void sub_1001EB5D8(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    id v4 = *(void **)(a1 + 112);
    id v7 = v3;
    if (!v4)
    {
      uint64_t v5 = objc_alloc_init(&OBJC_CLASS___NSMutableSet);
      id v6 = *(void **)(a1 + 112);
      *(void *)(a1 + 112) = v5;

      id v4 = *(void **)(a1 + 112);
    }

    [v4 addObject:v7];
    id v3 = v7;
  }
}

void sub_1001EB63C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    id v4 = *(void **)(a1 + 32);
    id v7 = v3;
    if (v4)
    {
      [v4 addObject:v3];
    }

    else
    {
      uint64_t v5 = objc_claimAutoreleasedReturnValue(+[NSMutableSet setWithObject:](&OBJC_CLASS___NSMutableSet, "setWithObject:", v3));
      id v6 = *(void **)(a1 + 32);
      *(void *)(a1 + 32) = v5;
    }

    id v3 = v7;
  }
}

void sub_1001EB6A8(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    id v4 = *(void **)(a1 + 72);
    id v7 = v3;
    if (v4)
    {
      [v4 addObject:v3];
    }

    else
    {
      uint64_t v5 = objc_claimAutoreleasedReturnValue(+[NSMutableSet setWithObject:](&OBJC_CLASS___NSMutableSet, "setWithObject:", v3));
      id v6 = *(void **)(a1 + 72);
      *(void *)(a1 + 72) = v5;
    }

    id v3 = v7;
  }
}

void sub_1001EB714(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    __int128 v71 = v3;
    if (v3)
    {
      id v4 = [v3[1] copy];
      if (v4)
      {
        uint64_t v5 = *(void **)(a1 + 8);
        if (v5)
        {
          [v5 addEntriesFromDictionary:v4];
        }

        else
        {
          id v6 = [v4 mutableCopy];
          id v7 = *(void **)(a1 + 8);
          *(void *)(a1 + _Block_object_dispose(va, 8) = v6;
        }
      }

      id v8 = [v71[2] copy];
      if (v8)
      {
        id v9 = *(void **)(a1 + 16);
        if (v9)
        {
          [v9 addEntriesFromDictionary:v8];
        }

        else
        {
          id v10 = [v8 mutableCopy];
          uint64_t v11 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v10;
        }
      }

      id v12 = [v71[3] copy];
      if (v12)
      {
        id v13 = *(void **)(a1 + 24);
        if (v13)
        {
          [v13 addObjectsFromArray:v12];
        }

        else
        {
          id v14 = [v12 mutableCopy];
          uint64_t v15 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v14;
        }
      }

      id v70 = [v71[4] copy];
      if (v70)
      {
        SEL v16 = *(void **)(a1 + 32);
        if (v16)
        {
          id v17 = (void *)objc_claimAutoreleasedReturnValue([v70 allObjects]);
          [v16 addObjectsFromArray:v17];
        }

        else
        {
          id v18 = [v70 mutableCopy];
          id v17 = *(void **)(a1 + 32);
          *(void *)(a1 + 32) = v18;
        }
      }

      id v69 = [v71[5] copy];
      if (v69)
      {
        uint64_t v19 = *(void **)(a1 + 40);
        if (v19)
        {
          id v20 = (void *)objc_claimAutoreleasedReturnValue([v69 allObjects]);
          [v19 addObjectsFromArray:v20];
        }

        else
        {
          id v21 = [v69 mutableCopy];
          id v20 = *(void **)(a1 + 40);
          *(void *)(a1 + 40) = v21;
        }
      }

      id v68 = [v71[6] copy];
      if (v68)
      {
        id v22 = *(void **)(a1 + 48);
        if (v22)
        {
          [v22 addEntriesFromDictionary:v68];
        }

        else
        {
          id v23 = [v68 mutableCopy];
          unsigned int v24 = *(void **)(a1 + 48);
          *(void *)(a1 + 4_Block_object_dispose(va, 8) = v23;
        }
      }

      id v67 = [v71[7] copy];
      if (v67)
      {
        unsigned int v25 = *(void **)(a1 + 56);
        if (v25)
        {
          BOOL v26 = (void *)objc_claimAutoreleasedReturnValue([v67 allObjects]);
          [v25 addObjectsFromArray:v26];
        }

        else
        {
          id v27 = [v67 mutableCopy];
          BOOL v26 = *(void **)(a1 + 56);
          *(void *)(a1 + 56) = v27;
        }
      }

      id v66 = [v71[8] copy];
      if (v66)
      {
        uint64_t v28 = *(void **)(a1 + 64);
        if (v28)
        {
          id v29 = (void *)objc_claimAutoreleasedReturnValue([v66 allObjects]);
          [v28 addObjectsFromArray:v29];
        }

        else
        {
          id v30 = [v66 mutableCopy];
          id v29 = *(void **)(a1 + 64);
          *(void *)(a1 + 64) = v30;
        }
      }

      id v31 = [v71[9] copy];
      uint64_t v32 = v31;
      id v63 = v31;
      if (v31)
      {
        id v33 = *(void **)(a1 + 72);
        if (v33)
        {
          id v34 = (void *)objc_claimAutoreleasedReturnValue([v31 allObjects]);
          [v33 addObjectsFromArray:v34];
        }

        else
        {
          id v35 = [v31 mutableCopy];
          id v34 = *(void **)(a1 + 72);
          *(void *)(a1 + 72) = v35;
        }

        uint64_t v32 = v63;
      }

      id v65 = objc_msgSend(v71[10], "copy", v63);
      if (v65)
      {
        unsigned int v36 = *(void **)(a1 + 80);
        if (v36)
        {
          uint64_t v37 = (void *)objc_claimAutoreleasedReturnValue([v65 allObjects]);
          [v36 addObjectsFromArray:v37];
        }

        else
        {
          id v38 = [v65 mutableCopy];
          uint64_t v37 = *(void **)(a1 + 80);
          *(void *)(a1 + 80) = v38;
        }
      }

      id v39 = [v71[11] copy];
      id v40 = v39;
      if (v39)
      {
        uint64_t v41 = *(void **)(a1 + 88);
        if (v41)
        {
          uint64_t v42 = (void *)objc_claimAutoreleasedReturnValue([v39 allObjects]);
          [v41 addObjectsFromArray:v42];
        }

        else
        {
          id v43 = [v39 mutableCopy];
          uint64_t v42 = *(void **)(a1 + 88);
          *(void *)(a1 + 8_Block_object_dispose(va, 8) = v43;
        }
      }

      id v44 = [v71[12] copy];
      uint64_t v45 = v44;
      if (v44)
      {
        uint64_t v46 = *(void **)(a1 + 96);
        if (v46)
        {
          id v47 = (void *)objc_claimAutoreleasedReturnValue([v44 allObjects]);
          [v46 addObjectsFromArray:v47];
        }

        else
        {
          id v48 = [v44 mutableCopy];
          id v47 = *(void **)(a1 + 96);
          *(void *)(a1 + 96) = v48;
        }
      }

      id v49 = [v71[13] copy];
      uint64_t v50 = v49;
      if (v49)
      {
        uint64_t v51 = *(void **)(a1 + 104);
        if (v51)
        {
          __int128 v52 = (void *)objc_claimAutoreleasedReturnValue([v49 allObjects]);
          [v51 addObjectsFromArray:v52];
        }

        else
        {
          id v53 = [v49 mutableCopy];
          __int128 v52 = *(void **)(a1 + 104);
          *(void *)(a1 + 104) = v53;
        }
      }

      id v54 = [v71[14] copy];
      uint64_t v55 = v54;
      if (v54)
      {
        id v56 = v12;
        id v57 = v8;
        id v58 = v4;
        uint64_t v59 = *(void **)(a1 + 112);
        if (v59)
        {
          uint64_t v60 = (void *)objc_claimAutoreleasedReturnValue([v54 allObjects]);
          [v59 addObjectsFromArray:v60];
        }

        else
        {
          id v61 = [v54 mutableCopy];
          uint64_t v60 = *(void **)(a1 + 112);
          *(void *)(a1 + 112) = v61;
        }

        id v4 = v58;
        id v8 = v57;
        id v12 = v56;
        uint64_t v32 = v64;
      }

      *(_BYTE *)(a1 + 136) |= *((_BYTE *)v71 + 136);
      *(void *)(a1 + 128) |= (unint64_t)v71[16];
      *(_BYTE *)(a1 + 137) |= *((_BYTE *)v71 + 137);
      *(_BYTE *)(a1 + 138) |= *((_BYTE *)v71 + 138);
      *(_BYTE *)(a1 + 139) |= *((_BYTE *)v71 + 139);
      BOOL v62 = *((_BYTE *)v71 + 140) != 0;
    }

    else
    {
      BOOL v62 = 0;
    }

    *(_BYTE *)(a1 + 140) |= v62;
    id v3 = v71;
  }
}

void sub_1001EBC60(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    id v4 = *(void **)(a1 + 48);
    v6[1] = 3221225472LL;
    _DWORD v6[2] = sub_1001EBCDC;
    v6[3] = &unk_1003EC3E8;
    id v5 = v3;
    v6[0] = _NSConcreteStackBlock;
    id v7 = v3;
    [v4 enumerateKeysAndObjectsUsingBlock:v6];

    id v3 = v5;
  }
}

uint64_t sub_1001EBCDC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_1001EBCE8(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    id v4 = *(void **)(a1 + 40);
    v6[1] = 3221225472LL;
    _DWORD v6[2] = sub_1001EBD64;
    v6[3] = &unk_1003EC410;
    id v5 = v3;
    v6[0] = _NSConcreteStackBlock;
    id v7 = v3;
    [v4 enumerateObjectsUsingBlock:v6];

    id v3 = v5;
  }
}

uint64_t sub_1001EBD64(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_1001EBD70(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    id v4 = *(void **)(a1 + 56);
    v6[1] = 3221225472LL;
    _DWORD v6[2] = sub_1001EBDEC;
    v6[3] = &unk_1003EC410;
    id v5 = v3;
    v6[0] = _NSConcreteStackBlock;
    id v7 = v3;
    [v4 enumerateObjectsUsingBlock:v6];

    id v3 = v5;
  }
}

uint64_t sub_1001EBDEC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16LL))();
}

void sub_1001EBDF8(uint64_t a1, void *a2, void *a3)
{
  id v9 = a2;
  id v5 = a3;
  if (a1)
  {
    id v6 = *(void **)(a1 + 48);
    if (!v6)
    {
      id v7 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
      id v8 = *(void **)(a1 + 48);
      *(void *)(a1 + 4_Block_object_dispose(va, 8) = v7;

      id v6 = *(void **)(a1 + 48);
    }

    [v6 setObject:v5 forKeyedSubscript:v9];
  }
}

void sub_1001EBE6C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    id v4 = *(void **)(a1 + 40);
    id v7 = v3;
    if (v4)
    {
      [v4 addObject:v3];
    }

    else
    {
      uint64_t v5 = objc_claimAutoreleasedReturnValue(+[NSMutableSet setWithObject:](&OBJC_CLASS___NSMutableSet, "setWithObject:", v3));
      id v6 = *(void **)(a1 + 40);
      *(void *)(a1 + 40) = v5;
    }

    id v3 = v7;
  }
}

void sub_1001EBED8(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    id v4 = *(void **)(a1 + 56);
    id v7 = v3;
    if (v4)
    {
      [v4 addObject:v3];
    }

    else
    {
      uint64_t v5 = objc_claimAutoreleasedReturnValue(+[NSMutableSet setWithObject:](&OBJC_CLASS___NSMutableSet, "setWithObject:", v3));
      id v6 = *(void **)(a1 + 56);
      *(void *)(a1 + 56) = v5;
    }

    id v3 = v7;
  }
}

void sub_1001EC6C4(uint64_t a1, void *a2)
{
  if (a1) {
    objc_storeStrong((id *)(a1 + 24), a2);
  }
}

id sub_1001EC990(uint64_t a1)
{
  if (!a1) {
    return 0LL;
  }
  id v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](&OBJC_CLASS___NSMutableDictionary, "dictionary"));
  id v3 = -[NSURLComponents initWithURL:resolvingAgainstBaseURL:]( objc_alloc(&OBJC_CLASS___NSURLComponents),  "initWithURL:resolvingAgainstBaseURL:",  a1,  0LL);
  __int128 v14 = 0u;
  __int128 v15 = 0u;
  __int128 v16 = 0u;
  __int128 v17 = 0u;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(-[NSURLComponents queryItems](v3, "queryItems", 0LL));
  id v5 = [v4 countByEnumeratingWithState:&v14 objects:v18 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v15;
    do
    {
      for (uint64_t i = 0LL; i != v6; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v15 != v7) {
          objc_enumerationMutation(v4);
        }
        id v9 = *(void **)(*((void *)&v14 + 1) + 8LL * (void)i);
        id v10 = (void *)objc_claimAutoreleasedReturnValue([v9 name]);
        uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v9 value]);
        if (v10) {
          [v2 setObject:v11 forKeyedSubscript:v10];
        }
      }

      id v6 = [v4 countByEnumeratingWithState:&v14 objects:v18 count:16];
    }

    while (v6);
  }

  id v12 = [v2 copy];
  return v12;
}

id sub_1001ECB18(void *a1)
{
  if (!a1) {
    return 0LL;
  }
  id v2 = (void *)objc_claimAutoreleasedReturnValue( +[NSURLComponents componentsWithURL:resolvingAgainstBaseURL:]( &OBJC_CLASS___NSURLComponents,  "componentsWithURL:resolvingAgainstBaseURL:",  a1,  1LL));
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 queryItems]);
  id v4 = sub_1002B84E4(v3, &stru_1003EC488);
  id v5 = (void *)objc_claimAutoreleasedReturnValue(v4);

  if (v5)
  {
    unsigned int v24 = v5;
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 value]);
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v6 componentsSeparatedByString:@"/"]);
    id v8 = [v7 mutableCopy];

    if ([v8 count]) {
      [v8 setObject:@"12345_54321" atIndexedSubscript:0];
    }
    id v23 = v8;
    id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 componentsJoinedByString:@"/"]);
    id v10 = (void *)objc_claimAutoreleasedReturnValue( +[NSURLQueryItem queryItemWithName:value:]( &OBJC_CLASS___NSURLQueryItem,  "queryItemWithName:value:",  @"accessKey",  v9));

    uint64_t v11 = objc_opt_new(&OBJC_CLASS___NSMutableArray);
    __int128 v26 = 0u;
    __int128 v27 = 0u;
    __int128 v28 = 0u;
    __int128 v29 = 0u;
    unsigned int v25 = v2;
    id v12 = (void *)objc_claimAutoreleasedReturnValue([v2 queryItems]);
    id v13 = [v12 countByEnumeratingWithState:&v26 objects:v30 count:16];
    if (v13)
    {
      id v14 = v13;
      uint64_t v15 = *(void *)v27;
      do
      {
        for (uint64_t i = 0LL; i != v14; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v27 != v15) {
            objc_enumerationMutation(v12);
          }
          __int128 v17 = *(void **)(*((void *)&v26 + 1) + 8LL * (void)i);
          id v18 = (void *)objc_claimAutoreleasedReturnValue([v17 name]);
          unsigned int v19 = [v18 isEqualToString:@"accessKey"];

          if (v19) {
            id v20 = v10;
          }
          else {
            id v20 = v17;
          }
          -[NSMutableArray addObject:](v11, "addObject:", v20);
        }

        id v14 = [v12 countByEnumeratingWithState:&v26 objects:v30 count:16];
      }

      while (v14);
    }

    id v2 = v25;
    [v25 setQueryItems:v11];
    id v21 = (id)objc_claimAutoreleasedReturnValue([v25 URL]);

    id v5 = v24;
  }

  else
  {
    id v21 = a1;
  }

  return v21;
}

BOOL sub_1001ECD98(id a1, NSURLQueryItem *a2)
{
  id v2 = (void *)objc_claimAutoreleasedReturnValue(-[NSURLQueryItem name](a2, "name"));
  unsigned __int8 v3 = [v2 isEqualToString:@"accessKey"];

  return v3;
}

id sub_1001ECDD8(void *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    id v4 = a1;
    if ([v3 count])
    {
      id v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableString string](&OBJC_CLASS___NSMutableString, "string"));
      id v28 = v4;
      id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 absoluteString]);
      uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v6 componentsSeparatedByString:@"?"]);

      __int128 v26 = (void *)objc_claimAutoreleasedReturnValue([v7 objectAtIndexedSubscript:0]);
      if ((unint64_t)[v7 count] >= 2)
      {
        id v8 = (void *)objc_claimAutoreleasedReturnValue([v7 objectAtIndexedSubscript:1]);
        [v5 appendString:v8];
      }

      __int128 v27 = v7;
      id v9 = (void *)objc_claimAutoreleasedReturnValue( +[NSCharacterSet URLQueryAllowedCharacterSet]( &OBJC_CLASS___NSCharacterSet,  "URLQueryAllowedCharacterSet"));
      id v10 = [v9 mutableCopy];

      [v10 removeCharactersInString:@"?&%+=;"];
      __int128 v32 = 0u;
      __int128 v33 = 0u;
      __int128 v30 = 0u;
      __int128 v31 = 0u;
      uint64_t v11 = v3;
      id obj = (id)objc_claimAutoreleasedReturnValue([v3 allKeys]);
      id v12 = [obj countByEnumeratingWithState:&v30 objects:v34 count:16];
      if (v12)
      {
        id v13 = v12;
        uint64_t v14 = *(void *)v31;
        do
        {
          for (uint64_t i = 0LL; i != v13; uint64_t i = (char *)i + 1)
          {
            if (*(void *)v31 != v14) {
              objc_enumerationMutation(obj);
            }
            __int128 v16 = *(void **)(*((void *)&v30 + 1) + 8LL * (void)i);
            __int128 v17 = (void *)objc_claimAutoreleasedReturnValue([v16 stringByAddingPercentEncodingWithAllowedCharacters:v10]);
            id v18 = (void *)objc_claimAutoreleasedReturnValue([v11 objectForKeyedSubscript:v16]);
            unsigned int v19 = (void *)objc_claimAutoreleasedReturnValue([v18 stringByAddingPercentEncodingWithAllowedCharacters:v10]);

            if ([v5 length]) {
              id v20 = @"&%@=%@";
            }
            else {
              id v20 = @"%@=%@";
            }
            objc_msgSend(v5, "appendFormat:", v20, v17, v19);
          }

          id v13 = [obj countByEnumeratingWithState:&v30 objects:v34 count:16];
        }

        while (v13);
      }

      if (v5)
      {
        id v22 = v27;
        id v21 = v28;
        id v23 = v26;
        if ([v5 length])
        {
          uint64_t v24 = objc_claimAutoreleasedReturnValue([v26 stringByAppendingFormat:@"?%@", v5]);

          id v23 = (void *)v24;
        }

        id v3 = v11;
      }

      else
      {
        id v3 = v11;
        id v22 = v27;
        id v21 = v28;
        id v23 = v26;
      }

      id v4 = (id)objc_claimAutoreleasedReturnValue(+[NSURL URLWithString:](&OBJC_CLASS___NSURL, "URLWithString:", v23));
    }
  }

  else
  {
    id v4 = 0LL;
  }

  return v4;
}

id sub_1001ED0B4(id a1)
{
  id v1 = a1;
  if (a1)
  {
    id v2 = -[NSURLComponents initWithURL:resolvingAgainstBaseURL:]( objc_alloc(&OBJC_CLASS___NSURLComponents),  "initWithURL:resolvingAgainstBaseURL:",  a1,  0LL);
    -[NSURLComponents setQueryItems:](v2, "setQueryItems:", 0LL);
    id v1 = (id)objc_claimAutoreleasedReturnValue(-[NSURLComponents URL](v2, "URL"));
  }

  return v1;
}

void sub_1001ED150(id a1)
{
  id v1 = objc_alloc_init(&OBJC_CLASS___ActiveAccountObserver);
  id v2 = (void *)qword_1004622A8;
  qword_1004622A8 = (uint64_t)v1;
}

void sub_1001ED688(_Unwind_Exception *a1)
{
}

uint64_t sub_1001ED6AC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1001ED6BC(uint64_t a1)
{
}

void sub_1001ED6C4(uint64_t a1)
{
}

void sub_1001ED6D8(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = ASDLogHandleForCategory(14LL);
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v6 = *(void *)(a1 + 32);
    int v10 = 138412546;
    uint64_t v11 = v6;
    __int16 v12 = 2112;
    id v13 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "[%@] oneAccountDSID returned: %@",  (uint8_t *)&v10,  0x16u);
  }

  uint64_t v7 = *(void *)(*(void *)(a1 + 48) + 8LL);
  id v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v3;
  id v9 = v3;

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
}

void sub_1001ED7C4(uint64_t a1)
{
}

void sub_1001ED8F4(uint64_t a1)
{
  id v6 = (id)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) userInfo]);
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKeyedSubscript:@"AccountDidChangePreviousActiveDSID"]);
  id v3 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  if (v1)
  {
    uint64_t v4 = objc_opt_class(&OBJC_CLASS___NSNumber, v2);
    if ((objc_opt_isKindOfClass(v1, v4) & 1) != 0) {
      -[NSMutableDictionary setObject:forKeyedSubscript:]( v3,  "setObject:forKeyedSubscript:",  v1,  @"AccountDidChangePreviousActiveDSID");
    }
  }

  id v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter"));
  [v5 postNotificationName:@"AccountStoreSandboxAccountDidChange" object:0 userInfo:v3];
}

void sub_1001EDA38(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) userInfo]);
  id v3 = (void *)objc_claimAutoreleasedReturnValue([v2 objectForKeyedSubscript:@"DSID"]);

  if (v3) {
    id v74 = (void *)objc_claimAutoreleasedReturnValue([v2 objectForKeyedSubscript:@"DSID"]);
  }
  else {
    id v74 = 0LL;
  }
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue([v2 objectForKeyedSubscript:@"active"]);

  if (v4)
  {
    id v5 = (void *)objc_claimAutoreleasedReturnValue([v2 objectForKeyedSubscript:@"active"]);
    LODWORD(v4) = [v5 BOOLValue];
  }

  id v6 = (void *)objc_claimAutoreleasedReturnValue([v2 objectForKeyedSubscript:@"signout"]);

  if (v6)
  {
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v2 objectForKeyedSubscript:@"signout"]);
    unsigned int v8 = [v7 BOOLValue];
  }

  else
  {
    unsigned int v8 = 0;
  }

  id v9 = (void *)objc_claimAutoreleasedReturnValue(+[ACAccountStore ams_sharedAccountStore](&OBJC_CLASS___ACAccountStore, "ams_sharedAccountStore"));
  int v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "ams_activeiTunesAccount"));

  if (v10)
  {
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "ams_DSID"));

    if (!v11)
    {
      uint64_t v12 = ASDLogHandleForCategory(14LL);
      id v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      {
        id v69 = (void *)objc_opt_class(*(void *)(a1 + 40), v14);
        id v70 = v69;
        __int128 v71 = (void *)objc_claimAutoreleasedReturnValue([v10 hashedDescription]);
        *(_DWORD *)__int128 buf = 138543618;
        *(void *)&uint8_t buf[4] = v69;
        *(_WORD *)&_BYTE buf[12] = 2114;
        *(void *)&buf[14] = v71;
        _os_log_error_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_ERROR,  "[%{public}@] Current iTunes account has no DSID: %{public}@",  buf,  0x16u);
      }

      int v10 = 0LL;
    }
  }

  uint64_t v15 = ASDLogHandleForCategory(14LL);
  __int128 v16 = (os_log_s *)objc_claimAutoreleasedReturnValue(v15);
  BOOL v17 = os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT);
  if (v8)
  {
    if (!v17) {
      goto LABEL_20;
    }
    unsigned int v19 = (void *)objc_opt_class(*(void *)(a1 + 40), v18);
    *(_DWORD *)__int128 buf = 138543874;
    *(void *)&uint8_t buf[4] = v19;
    *(_WORD *)&_BYTE buf[12] = 2114;
    *(void *)&buf[14] = v74;
    *(_WORD *)&_BYTE buf[22] = 1024;
    LODWORD(v77) = (_DWORD)v4;
    id v20 = v19;
    id v21 = "[%{public}@] Account signout notification accountID: %{public}@ active: %{BOOL}d";
  }

  else
  {
    if (!v17) {
      goto LABEL_20;
    }
    id v22 = (void *)objc_opt_class(*(void *)(a1 + 40), v18);
    *(_DWORD *)__int128 buf = 138543874;
    *(void *)&uint8_t buf[4] = v22;
    *(_WORD *)&_BYTE buf[12] = 2114;
    *(void *)&buf[14] = v74;
    *(_WORD *)&_BYTE buf[22] = 1024;
    LODWORD(v77) = (_DWORD)v4;
    id v20 = v22;
    id v21 = "[%{public}@] Account account changed notification accountID: %{public}@ active: %{BOOL}d";
  }

  _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, v21, buf, 0x1Cu);

LABEL_20:
  p_info = &OBJC_METACLASS___SQLiteKeychainHelper.info;
  unint64_t v24 = (unint64_t)*(id *)(*(void *)(a1 + 40) + 8LL);
  unint64_t v25 = v10;
  uint64_t v26 = objc_opt_self(&OBJC_CLASS___ActiveAccountObserver);
  if (!(v25 | v24)) {
    goto LABEL_21;
  }
  uint64_t v32 = v26;
  if (!v25 || v24)
  {
    if (v25 || !v24)
    {
      uint64_t v58 = objc_claimAutoreleasedReturnValue(objc_msgSend((id)v25, "ams_DSID"));
      if (v58)
      {
        uint64_t v59 = (void *)v58;
        uint64_t v60 = objc_claimAutoreleasedReturnValue(objc_msgSend((id)v24, "ams_DSID"));
        if (v60)
        {
          id v61 = (void *)v60;
          BOOL v62 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)v25, "ams_DSID"));
          id v63 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)v24, "ams_DSID"));
          unsigned __int8 v73 = [v62 isEqualToNumber:v63];

          p_info = (__objc2_class_ro **)(&OBJC_METACLASS___SQLiteKeychainHelper + 32);
          if ((v73 & 1) == 0)
          {
            uint64_t v64 = ASDLogHandleForCategory(14LL);
            id v34 = (os_log_s *)objc_claimAutoreleasedReturnValue(v64);
            if (os_log_type_enabled(v34, OS_LOG_TYPE_DEBUG))
            {
              id v66 = (void *)objc_opt_class(v32, v65);
              id v67 = v66;
              id v68 = (void *)objc_claimAutoreleasedReturnValue([(id)v25 hashedDescription]);
              *(_DWORD *)__int128 buf = 138412546;
              *(void *)&uint8_t buf[4] = v66;
              p_info = (__objc2_class_ro **)(&OBJC_METACLASS___SQLiteKeychainHelper + 32);
              *(_WORD *)&_BYTE buf[12] = 2114;
              *(void *)&buf[14] = v68;
              _os_log_debug_impl( (void *)&_mh_execute_header,  v34,  OS_LOG_TYPE_DEBUG,  "[%@]: Should notify after iTunes account changed: %{public}@",  buf,  0x16u);
            }

            goto LABEL_30;
          }
        }

        else
        {
        }
      }

void sub_1001EE19C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = *(void **)(v1 + 24);
  *(void *)(v1 + 24) = 0LL;
}

void sub_1001EE204(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[ACAccountStore ams_sharedAccountStore](&OBJC_CLASS___ACAccountStore, "ams_sharedAccountStore"));
  id v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "ams_activeiTunesAccount"));

  id v4 = *(id *)(*(void *)(a1 + 32) + 16LL);
  id v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "ams_storefront"));
  if (v4 && ([v4 isEqualToString:v5] & 1) != 0)
  {
    uint64_t v6 = ASDLogHandleForCategory(14LL);
    uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      id v9 = (void *)objc_opt_class(*(void *)(a1 + 32), v8);
      int v18 = 138543618;
      unsigned int v19 = v9;
      __int16 v20 = 2114;
      id v21 = v4;
      id v10 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] Storefront is the same as %{public}@",  (uint8_t *)&v18,  0x16u);
    }
  }

  else
  {
    uint64_t v11 = ASDLogHandleForCategory(14LL);
    uint64_t v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v14 = (void *)objc_opt_class(*(void *)(a1 + 32), v13);
      int v18 = 138543618;
      unsigned int v19 = v14;
      __int16 v20 = 2114;
      id v21 = v5;
      id v15 = v14;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] Storefront changed to %{public}@",  (uint8_t *)&v18,  0x16u);
    }

    uint64_t v16 = *(void *)(a1 + 32);
    id v17 = v5;
    uint64_t v7 = *(os_log_s **)(v16 + 16);
    *(void *)(v16 + 16) = v17;
  }
}

void sub_1001EE3C4(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](&OBJC_CLASS___NSMutableDictionary, "dictionary"));
  id v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "ams_DSID"));

  if (v3)
  {
    id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "ams_DSID"));
    [v2 setObject:v4 forKeyedSubscript:@"AccountDidChangePreviousActiveDSID"];
  }

  else
  {
    uint64_t v5 = ASDLogHandleForCategory(14LL);
    id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) hashedDescription]);
      int v8 = 138543362;
      id v9 = v6;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "Not posting account change due to no DSID on account: %{public}@",  (uint8_t *)&v8,  0xCu);
    }
  }

  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter"));
  [v7 postNotificationName:@"AccountStorePrimaryAccountDidChange" object:*(void *)(a1 + 40) userInfo:v2];
}

id sub_1001EEB58(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = a2;
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"bundle_id",  v3));
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v4 connection]);

  id v7 = sub_10024C088((uint64_t)&OBJC_CLASS___AppUsageSessionEntity, v6, v5);
  int v8 = (void *)objc_claimAutoreleasedReturnValue(v7);

  id v9 = [v8 existsInDatabase];
  if ((_DWORD)v9)
  {
    id v10 = (void *)objc_claimAutoreleasedReturnValue([v8 valueForProperty:@"session_reporter_key"]);
    [v8 deleteFromDatabase];
    uint64_t v11 = ASDLogHandleForCategory(3LL);
    uint64_t v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) logKey]);
      uint64_t v14 = *(void *)(a1 + 32);
      int v16 = 138412802;
      id v17 = v13;
      __int16 v18 = 2114;
      uint64_t v19 = v14;
      __int16 v20 = 2114;
      id v21 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "[%@] [%{public}@] Cleaned up app usage session: %{public}@",  (uint8_t *)&v16,  0x20u);
    }
  }

  return v9;
}

uint64_t sub_1001EED68(void *a1, void *a2)
{
  id v3 = a2;
  if (!a1)
  {
    uint64_t v18 = 0LL;
    goto LABEL_14;
  }

  id v4 = objc_alloc(&OBJC_CLASS___ASDManagedApplicationRequestOptions);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithLongLong:]( NSNumber,  "numberWithLongLong:",  [v3 storeItemID]));
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithLongLong:]( NSNumber,  "numberWithLongLong:",  [v3 storeExternalVersionID]));
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v3 bundleID]);
  int v8 = (void *)objc_claimAutoreleasedReturnValue([v3 bundleVersion]);
  id v9 = -[ASDManagedApplicationRequestOptions initWithItemIdentifer:externalVersionIdentifier:bundleIdentifier:bundleVersion:skipDownloads:]( v4,  "initWithItemIdentifer:externalVersionIdentifier:bundleIdentifier:bundleVersion:skipDownloads:",  v5,  v6,  v7,  v8,  0LL);

  id v10 = sub_100240B98((id *)objc_alloc(&OBJC_CLASS___ManagedApplicationTask), v9, 0LL);
  id v24 = 0LL;
  [a1 runSubTask:v10 returningError:&v24];
  id v11 = v24;
  uint64_t v12 = v11;
  if (v10 && ((_BYTE)v10[3] & 1) != 0 && v10[21])
  {
    uint64_t v13 = ASDLogHandleForCategory(41LL);
    uint64_t v14 = (os_log_s *)objc_claimAutoreleasedReturnValue(v13);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v15 = a1[5];
      int v16 = (void *)objc_claimAutoreleasedReturnValue([v3 bundleID]);
      id v17 = v10[21];
      *(_DWORD *)__int128 buf = 138412802;
      uint64_t v26 = v15;
      __int16 v27 = 2114;
      id v28 = v16;
      __int16 v29 = 2048;
      __int128 v30 = v17;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "[%@] [%{public}@] Managed application was refreshed with result: %ld",  buf,  0x20u);
    }

    uint64_t v18 = 1LL;
    if (!v12) {
      goto LABEL_13;
    }
    goto LABEL_10;
  }

  uint64_t v18 = 0LL;
  if (v11)
  {
LABEL_10:
    uint64_t v19 = ASDLogHandleForCategory(41LL);
    __int16 v20 = (os_log_s *)objc_claimAutoreleasedReturnValue(v19);
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
    {
      uint64_t v22 = a1[5];
      id v23 = (void *)objc_claimAutoreleasedReturnValue([v3 bundleID]);
      *(_DWORD *)__int128 buf = 138412802;
      uint64_t v26 = v22;
      __int16 v27 = 2114;
      id v28 = v23;
      __int16 v29 = 2114;
      __int128 v30 = v12;
      _os_log_error_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_ERROR,  "[%@] [%{public}@] Managed application failed with error: %{public}@",  buf,  0x20u);
    }
  }

void sub_1001EF0D4(uint64_t a1)
{
  __int128 v15 = 0u;
  __int128 v16 = 0u;
  __int128 v17 = 0u;
  __int128 v18 = 0u;
  uint64_t v2 = *(void **)(a1 + 32);
  if (v2) {
    uint64_t v2 = (void *)v2[10];
  }
  id v3 = v2;
  id v4 = [v3 countByEnumeratingWithState:&v15 objects:v23 count:16];
  if (v4)
  {
    id v6 = v4;
    uint64_t v7 = *(void *)v16;
    *(void *)&__int128 v5 = 138412546LL;
    __int128 v14 = v5;
    do
    {
      int v8 = 0LL;
      do
      {
        if (*(void *)v16 != v7) {
          objc_enumerationMutation(v3);
        }
        id v9 = (void *)objc_claimAutoreleasedReturnValue( +[ApplicationProxy proxyForBundleID:]( &OBJC_CLASS___ApplicationProxy,  "proxyForBundleID:",  *(void *)(*((void *)&v15 + 1) + 8LL * (void)v8),  v14,  (void)v15));
        if ([v9 isInstalled]
          && [v9 isStoreOriginated]
          && ([v9 hasMIDBasedSINF] & 1) == 0
          && [v9 missingRequiredSINF]
          && [v9 isConfiguratorInstall])
        {
          uint64_t v10 = ASDLogHandleForCategory(41LL);
          id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
          if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v12 = *(void *)(*(void *)(a1 + 32) + 40LL);
            uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v9 bundleID]);
            *(_DWORD *)__int128 buf = v14;
            uint64_t v20 = v12;
            __int16 v21 = 2114;
            uint64_t v22 = v13;
            _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "[%@] [%{public}@] Attempting to migrate Configurator app SINF",  buf,  0x16u);
          }

          sub_1001EED68(*(void **)(a1 + 32), v9);
        }

        int v8 = (char *)v8 + 1;
      }

      while (v6 != v8);
      id v6 = [v3 countByEnumeratingWithState:&v15 objects:v23 count:16];
    }

    while (v6);
  }
}

uint64_t sub_1001EFC5C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([*(id *)(a1 + 32) count])
  {
    id v4 = *(void **)(a1 + 32);
    __int128 v5 = (objc_class *)[*(id *)(a1 + 40) appEventEntityClass];
    id v13 = 0LL;
    id v6 = sub_10030D868(v3, v4, v5, &v13);
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
    id v8 = v13;

    if (v8)
    {
      uint64_t v9 = ASDLogHandleForCategory(3LL);
      uint64_t v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      {
        uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) logKey]);
        *(_DWORD *)__int128 buf = 138412546;
        __int128 v15 = v12;
        __int16 v16 = 2114;
        id v17 = v8;
        _os_log_error_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_ERROR,  "[%@] Importing crash events error: %{public}@",  buf,  0x16u);
      }
    }
  }

  return 1LL;
}

void sub_1001EFD9C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    id v4 = *(void **)(a1 + 16);
    id v7 = v3;
    if (!v4)
    {
      __int128 v5 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
      id v6 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v5;

      id v4 = *(void **)(a1 + 16);
    }

    [v4 addObject:v7];
    id v3 = v7;
  }
}

id sub_1001F053C(uint64_t a1)
{
  if (qword_1004622B8 != -1) {
    dispatch_once(&qword_1004622B8, &stru_1003EC558);
  }
  return (id)qword_1004622B0;
}

void sub_1001F0580(id a1)
{
  uint64_t v1 = objc_alloc_init(&OBJC_CLASS___AppInstallObserver);
  uint64_t v2 = (void *)qword_1004622B0;
  qword_1004622B0 = (uint64_t)v1;
}

void sub_1001F06D0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  if (a1)
  {
    if (v3)
    {
      __int128 v5 = *(void **)(a1 + 40);
      v8[0] = _NSConcreteStackBlock;
      v8[1] = 3221225472LL;
      v8[2] = sub_1001F07A8;
      v8[3] = &unk_1003E9DC0;
      id v9 = v3;
      uint64_t v10 = a1;
      sub_1002C11C4(v5, v8);
    }

    else
    {
      uint64_t v6 = ASDLogHandleForCategory(2LL);
      id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
      if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)__int128 buf = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_INFO,  "Ignoring attempt to begin observing a nil coordinator",  buf,  2u);
      }
    }
  }
}

void sub_1001F07A8(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) bundleID]);
  if (v2)
  {
    [*(id *)(*(void *)(a1 + 40) + 48) setObject:*(void *)(a1 + 32) forKeyedSubscript:v2];
    [*(id *)(a1 + 32) setObserver:*(void *)(a1 + 40)];
  }

  else
  {
    uint64_t v3 = ASDLogHandleForCategory(2LL);
    id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_FAULT))
    {
      uint64_t v5 = *(void *)(a1 + 32);
      int v6 = 138543362;
      uint64_t v7 = v5;
      _os_log_fault_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_FAULT,  "Coordinator had no bundle identifier set so was not able to begin observing: %{public}@",  (uint8_t *)&v6,  0xCu);
    }
  }
}

void sub_1001F0890(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  if (a1)
  {
    if (v3)
    {
      uint64_t v5 = *(void **)(a1 + 40);
      v8[0] = _NSConcreteStackBlock;
      v8[1] = 3221225472LL;
      v8[2] = sub_1001F096C;
      v8[3] = &unk_1003E9DC0;
      id v9 = v3;
      uint64_t v10 = a1;
      sub_1002C11C4(v5, v8);
    }

    else
    {
      uint64_t v6 = ASDLogHandleForCategory(2LL);
      uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)__int128 buf = 0;
        _os_log_error_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_ERROR,  "Ignoring attempt to end observing a nil coordinator!",  buf,  2u);
      }
    }
  }
}

void sub_1001F096C(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) bundleID]);
  if (v2)
  {
    [*(id *)(*(void *)(a1 + 40) + 48) setObject:0 forKeyedSubscript:v2];
    [*(id *)(a1 + 32) setObserver:0];
  }

  else
  {
    uint64_t v3 = ASDLogHandleForCategory(2LL);
    id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_FAULT))
    {
      uint64_t v5 = *(void *)(a1 + 32);
      int v6 = 138543362;
      uint64_t v7 = v5;
      _os_log_fault_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_FAULT,  "Coordinator had no bundle identifier set so was not able to end observing: %{public}@",  (uint8_t *)&v6,  0xCu);
    }
  }
}

uint64_t sub_1001F0BC4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) uniqueIdentifier]);
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) bundleID]);
  id v6 = sub_100304844(v3, v4, v5);
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(v6);

  if ([v7 existsInDatabase])
  {
    id v8 = sub_10021B614(v7);
    id v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
    uint64_t v10 = *(void *)(a1 + 40);
    uint64_t v11 = ASDLogHandleForCategory(2LL);
    uint64_t v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
    id v13 = v12;
    if (v10)
    {
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v14 = *(void *)(a1 + 40);
        int v16 = 138412546;
        id v17 = v9;
        __int16 v18 = 2114;
        uint64_t v19 = v14;
        _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "[%@] App is ready to proceed with post processing: %{public}@",  (uint8_t *)&v16,  0x16u);
      }

      [v7 setValue:*(void *)(a1 + 40) forProperty:@"bundle_url"];
    }

    else
    {
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
      {
        int v16 = 138412290;
        id v17 = v9;
        _os_log_error_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_ERROR,  "[%@] Received post processing callback but appURL is nil.",  (uint8_t *)&v16,  0xCu);
      }
    }

    sub_1001B4B10((uint64_t)v3, (uint64_t)[v7 persistentID]);
  }

  return 1LL;
}

void sub_1001F10D0( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_1001F10E8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(v2 + 72);
  if (v3)
  {
    uint64_t v4 = *(void *)(v3 + 184);
    if (v4 == 2)
    {
      *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = [*(id *)(v2 + 64) hasBytesAvailable];
      uint64_t v5 = ASDLogHandleForCategory(7LL);
      id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG))
      {
        int v7 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL);
        int v12 = 67109120;
        int v13 = v7;
        id v8 = "(LZMAStreamReader) Upstream has bytes available = %{BOOL}d";
LABEL_9:
        _os_log_debug_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, v8, (uint8_t *)&v12, 8u);
        goto LABEL_7;
      }

      goto LABEL_7;
    }

    BOOL v9 = v4 != 3;
  }

  else
  {
    BOOL v9 = 1;
  }

  *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = v9;
  uint64_t v10 = ASDLogHandleForCategory(7LL);
  id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG))
  {
    int v11 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL);
    int v12 = 67109120;
    int v13 = v11;
    id v8 = "(LZMAStreamReader) Decoder state finished = %{BOOL}d";
    goto LABEL_9;
  }

void sub_1001F14C4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_1001F14E8(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)(a1 + 32) + 72LL);
  if ((!v2 || *(void *)(v2 + 184) != 2LL) && (*(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) & 0x10) != 0)
  {
    uint64_t v3 = ASDLogHandleForCategory(7LL);
    uint64_t v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t v5 = 0;
      _os_log_debug_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "(LZMAStreamReader) Filtering stream end event",  v5,  2u);
    }

    *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) &= ~0x10uLL;
  }

void sub_1001F16A4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
}

uint64_t sub_1001F16C8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1001F16D8(uint64_t a1)
{
}

void sub_1001F16E0(uint64_t a1)
{
  if ([*(id *)(a1 + 32) streamStatus] == (id)7)
  {
    uint64_t v2 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) streamError]);
    uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8LL);
    uint64_t v4 = *(void **)(v3 + 40);
    *(void *)(v3 + 40) = v2;

    return;
  }

  uint64_t v5 = -[NSMutableData initWithLength:]( objc_alloc(&OBJC_CLASS___NSMutableData),  "initWithLength:",  *(void *)(a1 + 56));
  if (-[NSMutableData length](v5, "length"))
  {
    id v6 = *(void **)(*(void *)(a1 + 32) + 64LL);
    int v7 = v5;
    id v8 = -[NSMutableData mutableBytes](v7, "mutableBytes");
    id v9 = -[NSMutableData length](v7, "length");
    uint64_t v10 = *(void *)(*(void *)(a1 + 40) + 8LL);
    id obj = *(id *)(v10 + 40);
    unint64_t v11 = (unint64_t)[v6 readBytes:v8 length:v9 error:&obj];
    objc_storeStrong((id *)(v10 + 40), obj);
    if ((v11 & 0x8000000000000000LL) != 0)
    {
      uint64_t v12 = *(void *)(a1 + 32);
      goto LABEL_13;
    }
  }

  else
  {
    unint64_t v11 = 0LL;
  }

  id v21 = *(id *)(a1 + 56);
  uint64_t v13 = *(void *)(*(void *)(a1 + 32) + 72LL);
  uint64_t v14 = (char *)-[NSMutableData bytes](v5, "bytes");
  uint64_t v15 = *(void *)(a1 + 64);
  uint64_t v16 = *(void *)(*(void *)(a1 + 40) + 8LL);
  id v20 = *(id *)(v16 + 40);
  int v17 = sub_1001B5A88(v13, v14, v11, v15, &v21, &v20);
  objc_storeStrong((id *)(v16 + 40), v20);
  uint64_t v12 = *(void *)(a1 + 32);
  if (v17)
  {
    uint64_t v18 = *(void *)(v12 + 72);
    if (v18 && *(void *)(v18 + 184) == 3LL)
    {
      sub_100237C1C(v12, 5LL);
      uint64_t v19 = *(void *)(a1 + 32);
      if (v19) {
        dispatch_source_merge_data(*(dispatch_source_t *)(v19 + 16), 0x10uLL);
      }
    }

    *(void *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = v21;
    goto LABEL_14;
  }

void *sub_1001F1958(void *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    v7.receiver = a1;
    v7.super_class = (Class)&OBJC_CLASS___BackgroundTaskRequest;
    a1 = objc_msgSendSuper2(&v7, "init");
    if (a1)
    {
      xpc_object_t v4 = xpc_copy(v3);
      uint64_t v5 = (void *)a1[1];
      a1[1] = v4;
    }
  }

  return a1;
}

id sub_1001F19C8(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_self(a1);
  xpc_object_t v4 = sub_1001F1958(objc_alloc(&OBJC_CLASS___BackgroundTaskRequest), XPC_ACTIVITY_CHECK_IN);
  id v6 = v4;
  if (v4) {
    objc_setProperty_nonatomic_copy(v4, v5, v3, 16LL);
  }

  return v6;
}

uint64_t sub_1001F1AF0(uint64_t result)
{
  *(_BYTE *)(*(void *)(*(void *)(result + 40) + 8LL) + 24LL) = *(_BYTE *)(*(void *)(result + 32) + 48LL);
  return result;
}

uint64_t sub_1001F1B04(uint64_t result)
{
  *(_BYTE *)(*(void *)(*(void *)(result + 40) + 8LL) + 24LL) = *(_BYTE *)(*(void *)(result + 32) + 49LL);
  return result;
}

void sub_1001F1BCC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_1001F1BE4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1001F1BF4(uint64_t a1)
{
}

void sub_1001F1BFC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 56LL));
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8LL);
  xpc_object_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = WeakRetained;
}

id sub_1001F1CB0(uint64_t a1)
{
  return objc_storeWeak((id *)(*(void *)(a1 + 32) + 56LL), *(id *)(a1 + 40));
}

void sub_1001F1D78( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_1001F1D90(uint64_t a1)
{
}

void sub_1001F1E20(uint64_t a1)
{
  uint64_t v2 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) prependingCategory:@"Claim"]);
  uint64_t v3 = *(void *)(a1 + 32);
  xpc_object_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_1001F1F10( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_1001F1F28(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 64) copy];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8LL);
  xpc_object_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_1001F1F60(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    xpc_object_t v4 = *(void **)(a1 + 32);
    v6[1] = 3221225472LL;
    _DWORD v6[2] = sub_1001F1FE0;
    v6[3] = &unk_1003E9DC0;
    void v6[4] = a1;
    id v5 = v3;
    v6[0] = _NSConcreteStackBlock;
    id v7 = v3;
    sub_1002C11C4(v4, v6);

    id v3 = v5;
  }
}

void sub_1001F1FE0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 40) copy];
  uint64_t v3 = *(void *)(a1 + 32);
  xpc_object_t v4 = *(void **)(v3 + 64);
  *(void *)(v3 + 64) = v2;
}

uint64_t sub_1001F20CC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  objc_opt_self(a1);
  id v7 = sub_1003261E8(v5);
  id v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
  unsigned __int8 v9 = [v8 isFactoryInstall];

  if ((v9 & 1) == 0)
  {
    unint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v5 bundleIdentifier]);
    id v12 = [v11 rangeOfString:@"com.apple"];

    if (v12)
    {
      uint64_t v13 = ASDLogHandleForCategory(28LL);
      uint64_t v14 = (os_log_s *)objc_claimAutoreleasedReturnValue(v13);
      if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
      {
        uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v5 bundleIdentifier]);
        int v38 = 138412546;
        id v39 = v6;
        __int16 v40 = 2114;
        uint64_t v41 = v15;
        uint64_t v16 = "[%@] Skipping claim for %{public}@: Bundle ID not eligible";
LABEL_22:
        _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_INFO, v16, (uint8_t *)&v38, 0x16u);

        goto LABEL_23;
      }

      goto LABEL_23;
    }

    if ([v5 isPlaceholder])
    {
      uint64_t v17 = ASDLogHandleForCategory(28LL);
      uint64_t v14 = (os_log_s *)objc_claimAutoreleasedReturnValue(v17);
      if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
      {
        uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v5 bundleIdentifier]);
        int v38 = 138412546;
        id v39 = v6;
        __int16 v40 = 2114;
        uint64_t v41 = v15;
        uint64_t v16 = "[%@] Skipping claim for %{public}@: Not installed";
        goto LABEL_22;
      }

void sub_1001F3FB8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, char a37)
{
}

id sub_1001F3FDC(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  uint64_t v41 = v5;
  if (a1)
  {
    id v6 = v5;
    id v7 = objc_alloc(&OBJC_CLASS___AMSDialogRequest);
    uint64_t v8 = ASDLocalizedString(@"CLAIM_AUTHENTICATION_TITLE");
    unsigned __int8 v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
    uint64_t v10 = -[AMSDialogRequest initWithTitle:message:](v7, "initWithTitle:message:", v9, 0LL);

    unint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v6 account]);
    if (v11)
    {
      uint64_t v12 = ASDLocalizedString(@"CLAIM_AUTHENTICATION_MESSAGE_APPLE_ACCOUNT_FORMAT_%@");
      uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
      uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v6 account]);
      uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v14 username]);
      uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", v13, v15));
      -[AMSDialogRequest setMessage:](v10, "setMessage:", v16);
    }

    else
    {
      uint64_t v17 = ASDLocalizedString(@"CLAIM_AUTHENTICATION_MESSAGE_NO_APPLE_ACCOUNT");
      uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(v17);
      -[AMSDialogRequest setMessage:](v10, "setMessage:", v13);
    }

    uint64_t v18 = ASDLocalizedString(@"CLAIM_AUTHENTICATION_CANCEL_BUTTON");
    uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue(v18);
    id v20 = (void *)objc_claimAutoreleasedReturnValue(+[AMSDialogAction actionWithTitle:](&OBJC_CLASS___AMSDialogAction, "actionWithTitle:", v19));

    [v20 setStyle:2];
    -[AMSDialogRequest addButtonAction:](v10, "addButtonAction:", v20);
    uint64_t v21 = ASDLocalizedString(@"CLAIM_AUTHENTICATION_SIGN_IN_BUTTON");
    id v22 = (void *)objc_claimAutoreleasedReturnValue(v21);
    id v23 = (void *)objc_claimAutoreleasedReturnValue(+[AMSDialogAction actionWithTitle:](&OBJC_CLASS___AMSDialogAction, "actionWithTitle:", v22));

    -[AMSDialogRequest addButtonAction:](v10, "addButtonAction:", v23);
    id v24 = -[AMSSystemAlertDialogTask initWithRequest:]( objc_alloc(&OBJC_CLASS___AMSSystemAlertDialogTask),  "initWithRequest:",  v10);
    uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue(-[AMSSystemAlertDialogTask present](v24, "present"));
    uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue([v25 resultWithError:a3]);

    uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue([v26 selectedActionIdentifier]);
    id v28 = a3;
    id v29 = (void *)objc_claimAutoreleasedReturnValue([v23 identifier]);
    unsigned int v30 = [v27 isEqualToString:v29];

    if (v30)
    {
      uint64_t v31 = ASDErrorWithDescription(ASDErrorDomain, 540LL, @"Need to present authentication request");
      uint64_t v32 = (void *)objc_claimAutoreleasedReturnValue(v31);
      uint64_t v33 = (void *)objc_claimAutoreleasedReturnValue([a1 delegate]);
      [v33 repair:a1 needsToReleaseBlockingCallerWithReason:v32];

      id v34 = objc_alloc(&OBJC_CLASS___AMSAuthenticateTask);
      id v35 = sub_100255630((uint64_t)&OBJC_CLASS___URLBag);
      uint64_t v36 = (void *)objc_claimAutoreleasedReturnValue(v35);
      id v37 = [v34 initWithRequest:v41 bag:v36];

      [v37 setDelegate:a1];
      int v38 = (void *)objc_claimAutoreleasedReturnValue([v37 performAuthentication]);
      a1 = (void *)objc_claimAutoreleasedReturnValue([v38 resultWithError:v28]);
    }

    else if (v28)
    {
      uint64_t v39 = ASDErrorWithDescription(ASDErrorDomain, 907LL, @"User declined request to authenticate");
      a1 = 0LL;
      *id v28 = (id)objc_claimAutoreleasedReturnValue(v39);
    }

    else
    {
      a1 = 0LL;
    }
  }

  return a1;
}

void sub_1001F48BC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    uint64_t v7 = ASDLogHandleForCategory(28LL);
    uint64_t v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      uint64_t v9 = *(void *)(a1 + 32);
      int v10 = 138543618;
      uint64_t v11 = v9;
      __int16 v12 = 2114;
      id v13 = v6;
      _os_log_error_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_ERROR,  "[%{public}@] Error in dialog task: %{public}@",  (uint8_t *)&v10,  0x16u);
    }
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
}

id sub_1001F4ADC(uint64_t a1)
{
  if (qword_1004622C8 != -1) {
    dispatch_once(&qword_1004622C8, &stru_1003EC5E0);
  }
  return (id)qword_1004622C0;
}

void sub_1001F4B20(id a1)
{
  uint64_t v1 = -[AMSProcessInfo initWithBundleIdentifier:]( objc_alloc(&OBJC_CLASS___AMSProcessInfo),  "initWithBundleIdentifier:",  @"com.apple.TVAppStore");
  id v2 = (void *)qword_1004622C0;
  qword_1004622C0 = (uint64_t)v1;
}

id sub_1001F4B54(uint64_t a1)
{
  return sub_1001F4ADC((uint64_t)&OBJC_CLASS___AMSProcessInfo);
}

id sub_1001F4B70(uint64_t a1)
{
  if (qword_1004622D8 != -1) {
    dispatch_once(&qword_1004622D8, &stru_1003EC600);
  }
  return (id)qword_1004622D0;
}

void sub_1001F4BB4(id a1)
{
  uint64_t v1 = -[AMSProcessInfo initWithBundleIdentifier:]( objc_alloc(&OBJC_CLASS___AMSProcessInfo),  "initWithBundleIdentifier:",  @"com.apple.appstored");
  id v2 = (void *)qword_1004622D0;
  qword_1004622D0 = (uint64_t)v1;
}

AMSProcessInfo *sub_1001F4BE8(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_self(a1);
  xpc_object_t v4 = objc_alloc_init(&OBJC_CLASS___AMSProcessInfo);
  int v5 = [v3 processIdentifier];
  objc_opt_self(&OBJC_CLASS___AMSProcessInfo);
  int v6 = proc_pidpath(v5, v28, 0x1000u);
  if (v6 > 0)
  {
    uint64_t v7 = -[NSString initWithBytes:length:encoding:]( objc_alloc(&OBJC_CLASS___NSString),  "initWithBytes:length:encoding:",  v28,  v6,  4LL);
    if (v7)
    {
      uint64_t v8 = v7;
      objc_opt_self(&OBJC_CLASS___AMSProcessInfo);
      CFURLRef v9 = CFURLCreateWithFileSystemPath(kCFAllocatorDefault, v8, kCFURLPOSIXPathStyle, 0);

      if (v9)
      {
        int v10 = (const __CFURL *)_CFBundleCopyBundleURLForExecutableURL(v9);
        if (v10)
        {
          uint64_t v11 = v10;
          __int16 v12 = CFBundleCreate(kCFAllocatorDefault, v10);
          CFRelease(v11);
          CFRelease(v9);
          if (v12)
          {
            CFURLRef v13 = CFBundleCopyBundleURL(v12);
            if (v13)
            {
              CFURLRef v14 = v13;
              -[AMSProcessInfo setBundleURL:](v4, "setBundleURL:", v13);
            }

            CFURLRef v9 = (CFURLRef)-[__CFDictionary copy](CFBundleGetInfoDictionary(v12), "copy");
            CFRelease(v12);
            if (v9 && -[__CFURL count](v9, "count")) {
              goto LABEL_16;
            }
            goto LABEL_14;
          }
        }

        else
        {
          CFRelease(v9);
        }

        CFURLRef v9 = 0LL;
      }

id sub_1001F4F58(id a1, void *a2)
{
  id v3 = a2;
  xpc_object_t v4 = v3;
  if (!a1)
  {
    id v16 = 0LL;
    goto LABEL_33;
  }

  int v5 = (void *)objc_claimAutoreleasedReturnValue([v3 objectForKeyedSubscript:@"ITunesPreferredDsid"]);
  uint64_t v7 = objc_opt_class(&OBJC_CLASS___NSNumber, v6);
  if ((objc_opt_isKindOfClass(v5, v7) & 1) == 0)
  {

    goto LABEL_8;
  }

  id v8 = v5;

  if (!v8)
  {
LABEL_8:
    uint64_t v14 = ASDLogHandleForCategory(14LL);
    uint64_t v15 = (os_log_s *)objc_claimAutoreleasedReturnValue(v14);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)__int128 buf = 138412290;
      id v49 = v4;
      _os_log_error_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_ERROR,  "FamilyMember: Received an invalid server response for FamilyMember. serverResponse = %@",  buf,  0xCu);
    }

    id v8 = 0LL;
    id v16 = 0LL;
    goto LABEL_32;
  }

  v47.receiver = a1;
  v47.super_class = (Class)&OBJC_CLASS___FamilyMember;
  id v9 = objc_msgSendSuper2(&v47, "init");
  if (v9)
  {
    int v10 = (void *)objc_claimAutoreleasedReturnValue([v4 objectForKeyedSubscript:@"askToBuy"]);
    uint64_t v12 = objc_opt_class(&OBJC_CLASS___NSNumber, v11);
    if ((objc_opt_isKindOfClass(v10, v12) & 1) != 0) {
      id v13 = v10;
    }
    else {
      id v13 = 0LL;
    }

    *((_BYTE *)v9 + 9) = [v13 BOOLValue];
    CFDictionaryRef v17 = (void *)objc_claimAutoreleasedReturnValue([v4 objectForKeyedSubscript:@"firstName"]);
    uint64_t v19 = objc_opt_class(&OBJC_CLASS___NSString, v18);
    if ((objc_opt_isKindOfClass(v17, v19) & 1) != 0) {
      id v20 = v17;
    }
    else {
      id v20 = 0LL;
    }

    uint64_t v21 = (void *)*((void *)v9 + 2);
    *((void *)v9 + 2) = v20;

    id v22 = (void *)objc_claimAutoreleasedReturnValue([v4 objectForKeyedSubscript:@"ICloudDsid"]);
    uint64_t v24 = objc_opt_class(&OBJC_CLASS___NSNumber, v23);
    if ((objc_opt_isKindOfClass(v22, v24) & 1) != 0) {
      id v25 = v22;
    }
    else {
      id v25 = 0LL;
    }

    uint64_t v26 = (void *)*((void *)v9 + 3);
    *((void *)v9 + 3) = v25;

    uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue([v4 objectForKeyedSubscript:@"accountName"]);
    uint64_t v29 = objc_opt_class(&OBJC_CLASS___NSString, v28);
    if ((objc_opt_isKindOfClass(v27, v29) & 1) != 0) {
      id v30 = v27;
    }
    else {
      id v30 = 0LL;
    }

    uint64_t v31 = (void *)*((void *)v9 + 4);
    *((void *)v9 + 4) = v30;

    objc_storeStrong((id *)v9 + 5, v5);
    uint64_t v32 = (void *)objc_claimAutoreleasedReturnValue([v4 objectForKeyedSubscript:@"ITunesPreferredAccountName"]);
    uint64_t v34 = objc_opt_class(&OBJC_CLASS___NSString, v33);
    if ((objc_opt_isKindOfClass(v32, v34) & 1) != 0) {
      id v35 = v32;
    }
    else {
      id v35 = 0LL;
    }

    uint64_t v36 = (void *)*((void *)v9 + 6);
    *((void *)v9 + 6) = v35;

    id v37 = (void *)objc_claimAutoreleasedReturnValue([v4 objectForKeyedSubscript:@"lastName"]);
    uint64_t v39 = objc_opt_class(&OBJC_CLASS___NSString, v38);
    if ((objc_opt_isKindOfClass(v37, v39) & 1) != 0) {
      id v40 = v37;
    }
    else {
      id v40 = 0LL;
    }

    uint64_t v41 = (void *)*((void *)v9 + 7);
    *((void *)v9 + 7) = v40;

    id v42 = (void *)objc_claimAutoreleasedReturnValue([v4 objectForKeyedSubscript:@"sharingPurchases"]);
    uint64_t v44 = objc_opt_class(&OBJC_CLASS___NSNumber, v43);
    if ((objc_opt_isKindOfClass(v42, v44) & 1) != 0) {
      id v45 = v42;
    }
    else {
      id v45 = 0LL;
    }

    *((_BYTE *)v9 + 10) = [v45 BOOLValue];
  }

  a1 = v9;
  id v16 = a1;
LABEL_32:

LABEL_33:
  return v16;
}

void *sub_1001F5308(void *a1)
{
  uint64_t v1 = a1;
  if (a1)
  {
    id v2 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    id v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", *((unsigned __int8 *)v1 + 9)));
    -[NSMutableDictionary setObject:forKeyedSubscript:](v2, "setObject:forKeyedSubscript:", v3, @"askToBuy");

    -[NSMutableDictionary setObject:forKeyedSubscript:]( v2,  "setObject:forKeyedSubscript:",  v1[5],  @"ITunesPreferredDsid");
    xpc_object_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", *((unsigned __int8 *)v1 + 10)));
    -[NSMutableDictionary setObject:forKeyedSubscript:]( v2,  "setObject:forKeyedSubscript:",  v4,  @"sharingPurchases");

    -[NSMutableDictionary ams_setNullableObject:forKey:](v2, "ams_setNullableObject:forKey:", v1[2], @"firstName");
    -[NSMutableDictionary ams_setNullableObject:forKey:]( v2,  "ams_setNullableObject:forKey:",  v1[3],  @"ICloudDsid");
    -[NSMutableDictionary ams_setNullableObject:forKey:]( v2,  "ams_setNullableObject:forKey:",  v1[4],  @"accountName");
    -[NSMutableDictionary ams_setNullableObject:forKey:]( v2,  "ams_setNullableObject:forKey:",  v1[6],  @"ITunesPreferredAccountName");
    -[NSMutableDictionary ams_setNullableObject:forKey:](v2, "ams_setNullableObject:forKey:", v1[7], @"lastName");
    uint64_t v1 = -[NSMutableDictionary copy](v2, "copy");
  }

  return v1;
}

uint64_t sub_1001F56A8(uint64_t result)
{
  if (result)
  {
    uint64_t v2 = 0LL;
    uint64_t v1 = -[NSScanner initWithString:](objc_alloc(&OBJC_CLASS___NSScanner), "initWithString:", result);
    -[NSScanner scanUnsignedLongLong:](v1, "scanUnsignedLongLong:", &v2);

    return v2;
  }

  return result;
}

id sub_1001F56FC(void *a1)
{
  if (a1) {
    a1 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL URLWithString:](&OBJC_CLASS___NSURL, "URLWithString:", a1));
  }
  return a1;
}

void *sub_1001F5724(void *a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  if (a1)
  {
    v9.receiver = a1;
    v9.super_class = (Class)&OBJC_CLASS___LibraryLazyResultsEnumerator;
    a1 = objc_msgSendSuper2(&v9, "init");
    if (a1)
    {
      id v6 = [v5 copy];
      uint64_t v7 = (void *)a1[1];
      a1[1] = v6;

      a1[3] = a2;
    }
  }

  return a1;
}

id sub_1001F5C04(uint64_t a1)
{
  if (qword_1004622E8 != -1) {
    dispatch_once(&qword_1004622E8, &stru_1003EC620);
  }
  return (id)qword_1004622E0;
}

void sub_1001F5C48(id a1)
{
  uint64_t v1 = objc_alloc_init(&OBJC_CLASS___IAPHistoryService);
  uint64_t v2 = (void *)qword_1004622E0;
  qword_1004622E0 = (uint64_t)v1;
}

id *sub_1001F68BC(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_self(a1);
  xpc_object_t v4 = sub_1001F690C((id *)objc_alloc(&OBJC_CLASS___PurchaseOwner), 0LL, v3);

  return v4;
}

id *sub_1001F690C(id *a1, void *a2, void *a3)
{
  id v6 = a3;
  if (a1)
  {
    v9.receiver = a1;
    v9.super_class = (Class)&OBJC_CLASS___PurchaseOwner;
    uint64_t v7 = (id *)objc_msgSendSuper2(&v9, "init");
    a1 = v7;
    if (v7)
    {
      v7[1] = a2;
      objc_storeStrong(v7 + 2, a3);
    }
  }

  return a1;
}

id *sub_1001F6988(uint64_t a1)
{
  return sub_1001F690C((id *)objc_alloc(&OBJC_CLASS___PurchaseOwner), (void *)1, 0LL);
}

id *sub_1001F69B4(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_self(a1);
  xpc_object_t v4 = sub_1001F690C((id *)objc_alloc(&OBJC_CLASS___PurchaseOwner), (void *)2, v3);

  return v4;
}

id *sub_1001F6A04(uint64_t a1)
{
  return sub_1001F690C((id *)objc_alloc(&OBJC_CLASS___PurchaseOwner), (void *)3, 0LL);
}

id *sub_1001F6A30(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_self(a1);
  xpc_object_t v4 = sub_1001F690C((id *)objc_alloc(&OBJC_CLASS___PurchaseOwner), (void *)4, v3);

  return v4;
}

id *sub_1001F6A80(uint64_t a1)
{
  return sub_1001F690C((id *)objc_alloc(&OBJC_CLASS___PurchaseOwner), (void *)5, 0LL);
}

id *sub_1001F6C38(id *a1, void *a2)
{
  id v4 = a2;
  if (a1)
  {
    v7.receiver = a1;
    v7.super_class = (Class)&OBJC_CLASS___PurchaseHistoryUpdateDAAPResponseDecoder;
    id v5 = (id *)objc_msgSendSuper2(&v7, "init");
    a1 = v5;
    if (v5) {
      objc_storeStrong(v5 + 1, a2);
    }
  }

  return a1;
}

void sub_1001F6CAC(uint64_t a1)
{
  if (a1)
  {
    if (!*(_BYTE *)(a1 + 16))
    {
      id v2 = [[DKDAAPParser alloc] initWithData:*(void *)(a1 + 8)];
      [v2 setDelegate:a1];
      [v2 parse];
    }
  }

void *sub_1001F752C(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (a1)
  {
    v28.receiver = a1;
    v28.super_class = (Class)&OBJC_CLASS___ODRAssetPack;
    id v7 = objc_msgSendSuper2(&v28, "init");
    a1 = v7;
    if (v7)
    {
      [v7 setValue:v6 forProperty:@"bundle_id"];
      id v8 = (void *)objc_claimAutoreleasedReturnValue([v5 objectForKeyedSubscript:@"bundleKey"]);
      [a1 setValue:v8 forProperty:@"bundle_key"];

      objc_super v9 = (void *)objc_claimAutoreleasedReturnValue([v5 objectForKeyedSubscript:@"chunkSize"]);
      [a1 setValue:v9 forProperty:@"chunk_size"];

      int v10 = (void *)objc_claimAutoreleasedReturnValue([v5 objectForKeyedSubscript:@"downloadPriority"]);
      [a1 setValue:v10 forProperty:@"download_priority"];

      uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v5 objectForKeyedSubscript:@"fileSize"]);
      [a1 setValue:v11 forProperty:@"file_size"];

      uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v5 objectForKeyedSubscript:@"hashes"]);
      [a1 setValue:v12 forProperty:@"hash_array"];

      id v13 = (void *)objc_claimAutoreleasedReturnValue([v5 objectForKeyedSubscript:@"knownContentHashes"]);
      [a1 setValue:v13 forProperty:@"known_content_hashes"];

      uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v5 objectForKeyedSubscript:@"md5"]);
      [a1 setValue:v14 forProperty:@"md5"];

      uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v5 objectForKeyedSubscript:@"primaryContentHash"]);
      [a1 setValue:v15 forProperty:@"primary_content_hash"];

      id v16 = (void *)objc_claimAutoreleasedReturnValue([v5 objectForKeyedSubscript:@"sha"]);
      [a1 setValue:v16 forProperty:@"sha"];

      CFDictionaryRef v17 = (void *)objc_claimAutoreleasedReturnValue([v5 objectForKeyedSubscript:@"isStreamable"]);
      [a1 setValue:v17 forProperty:@"streamable"];

      uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue([v5 objectForKeyedSubscript:@"URL"]);
      [a1 setValue:v18 forProperty:@"source_url"];

      uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([v5 objectForKeyedSubscript:@"uncompressedSize"]);
      [a1 setValue:v19 forProperty:@"uncompressed_size"];

      id v20 = (void *)objc_claimAutoreleasedReturnValue([v5 objectForKeyedSubscript:@"local_url"]);
      [a1 setValue:v20 forProperty:@"local_url"];

      uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue([v5 objectForKeyedSubscript:@"pin_count"]);
      [a1 setValue:v21 forProperty:@"pin_count"];

      id v22 = (void *)objc_claimAutoreleasedReturnValue([v5 objectForKeyedSubscript:@"purgeable"]);
      [a1 setValue:v22 forProperty:@"purgeable"];

      uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue([v5 objectForKeyedSubscript:@"purge_reason"]);
      [a1 setValue:v23 forProperty:@"purge_reason"];

      uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue([v5 objectForKeyedSubscript:@"effective_always_preserve"]);
      [a1 setValue:v24 forProperty:@"effective_always_preserve"];

      id v25 = (void *)objc_claimAutoreleasedReturnValue([v5 objectForKeyedSubscript:@"effective_preservation_priority"]);
      [a1 setValue:v25 forProperty:@"effective_preservation_priority"];

      uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue([v5 objectForKeyedSubscript:@"last_used_date"]);
      [a1 setValue:v26 forProperty:@"last_used_date"];
    }
  }

  return a1;
}

id sub_1001F794C(void *a1)
{
  if (a1) {
    a1 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"bundle_id"]);
  }
  return a1;
}

id sub_1001F7970(void *a1)
{
  if (a1) {
    a1 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"bundle_key"]);
  }
  return a1;
}

id sub_1001F7994(void *a1)
{
  if (a1) {
    a1 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"chunk_size"]);
  }
  return a1;
}

id sub_1001F79B8(void *a1)
{
  if (a1) {
    a1 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"download_identifier"]);
  }
  return a1;
}

id sub_1001F79DC(void *a1)
{
  if (a1) {
    a1 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"download_priority"]);
  }
  return a1;
}

id sub_1001F7A00(id result)
{
  if (result)
  {
    uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([result valueForProperty:@"effective_always_preserve"]);
    id v2 = [v1 BOOLValue];

    return v2;
  }

  return result;
}

double sub_1001F7A40(void *a1)
{
  if (!a1) {
    return 0.0;
  }
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"effective_preservation_priority"]);
  [v1 doubleValue];
  double v3 = v2;

  return v3;
}

id sub_1001F7A90(void *a1)
{
  if (a1) {
    a1 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"file_size"]);
  }
  return a1;
}

id sub_1001F7AB4(void *a1)
{
  if (a1) {
    a1 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"hash_array"]);
  }
  return a1;
}

id sub_1001F7AD8(void *a1)
{
  if (a1) {
    a1 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"known_content_hashes"]);
  }
  return a1;
}

id sub_1001F7AFC(void *a1)
{
  if (a1) {
    a1 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"streamable"]);
  }
  return a1;
}

id sub_1001F7B20(void *a1)
{
  if (a1)
  {
    uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"local_url"]);
    if (v1) {
      double v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL URLWithString:](&OBJC_CLASS___NSURL, "URLWithString:", v1));
    }
    else {
      double v2 = 0LL;
    }
  }

  else
  {
    double v2 = 0LL;
  }

  return v2;
}

id sub_1001F7B84(void *a1)
{
  if (a1) {
    a1 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"md5"]);
  }
  return a1;
}

id sub_1001F7BA8(id result)
{
  if (result)
  {
    uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([result valueForProperty:@"pin_count"]);
    id v2 = [v1 longLongValue];

    return v2;
  }

  return result;
}

id sub_1001F7BE8(void *a1)
{
  if (a1) {
    a1 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"primary_content_hash"]);
  }
  return a1;
}

id sub_1001F7C0C(id result)
{
  if (result)
  {
    uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([result valueForProperty:@"purgeable"]);
    id v2 = [v1 BOOLValue];

    return v2;
  }

  return result;
}

id sub_1001F7C4C(id result)
{
  if (result)
  {
    uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([result valueForProperty:@"purge_reason"]);
    id v2 = [v1 integerValue];

    return v2;
  }

  return result;
}

id sub_1001F7C8C(void *a1)
{
  if (a1) {
    a1 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"uncompressed_size"]);
  }
  return a1;
}

id sub_1001F7CB0(void *a1)
{
  if (a1)
  {
    uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"source_url"]);
    id v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL URLWithString:](&OBJC_CLASS___NSURL, "URLWithString:", v1));
  }

  else
  {
    id v2 = 0LL;
  }

  return v2;
}

void sub_1001F7D08(void *a1, uint64_t a2)
{
  if (a1)
  {
    id v3 = (id)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", a2));
    [a1 setValue:v3 forProperty:@"effective_always_preserve"];
  }

void sub_1001F7D64(void *a1)
{
  if (a1)
  {
    id v2 = (id)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:"));
    [a1 setValue:v2 forProperty:@"effective_preservation_priority"];
  }

void sub_1001F7DBC(void *a1, void *a2)
{
  if (a1)
  {
    id v3 = (id)objc_claimAutoreleasedReturnValue([a2 absoluteString]);
    [a1 setValue:v3 forProperty:@"local_url"];
  }

void sub_1001F7E10(void *a1, uint64_t a2)
{
  if (a1)
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", a2 & ~(a2 >> 63)));
    [a1 setValue:v4 forProperty:@"pin_count"];

    if (a2 <= 0)
    {
      id v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
      [a1 setValue:v5 forProperty:@"last_used_date"];
    }

    sub_1001F7EB0(a1, a2 < 1);
  }

void sub_1001F7EB0(void *a1, uint64_t a2)
{
  if (a1)
  {
    int v2 = a2;
    id v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](&OBJC_CLASS___NSNumber, "numberWithBool:", a2));
    [a1 setValue:v4 forProperty:@"purgeable"];

    id v5 = sub_1001F7B20(a1);
    id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
    id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 path]);

    if (!v7) {
      goto LABEL_11;
    }
    id v8 = sub_10021E048((uint64_t)&OBJC_CLASS___CacheDeleteCoordinator);
    uint64_t v9 = objc_claimAutoreleasedReturnValue(v8);
    int v10 = (void *)v9;
    if (v2)
    {
      if (v9)
      {
        uint64_t v11 = 98308LL;
        int v12 = 1;
        goto LABEL_8;
      }
    }

    else if (v9)
    {
      uint64_t v11 = 0LL;
      int v12 = 0;
LABEL_8:
      int v13 = sub_10021F430(v9, v11, v12, v7);

      if (v13)
      {
        uint64_t v14 = ASDLogHandleForCategory(19LL);
        int v10 = (void *)objc_claimAutoreleasedReturnValue(v14);
        if (os_log_type_enabled((os_log_t)v10, OS_LOG_TYPE_ERROR))
        {
          uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"bundle_key"]);
          if (v2) {
            id v16 = @"purgeable";
          }
          else {
            id v16 = @"not purgeable";
          }
          int v17 = 138412802;
          uint64_t v18 = v15;
          __int16 v19 = 2114;
          id v20 = v16;
          __int16 v21 = 2082;
          id v22 = strerror(v13);
          _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)v10,  OS_LOG_TYPE_ERROR,  "[%@]: Failed to mark asset as %{public}@: %{public}s",  (uint8_t *)&v17,  0x20u);
        }

        goto LABEL_10;
      }

void sub_1001F8070(void *a1, uint64_t a2)
{
  if (a1)
  {
    id v3 = (id)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", a2));
    [a1 setValue:v3 forProperty:@"purge_reason"];
  }

void sub_1001F80CC(void *a1, void *a2)
{
  if (a1)
  {
    id v3 = (id)objc_claimAutoreleasedReturnValue([a2 absoluteString]);
    [a1 setValue:v3 forProperty:@"source_url"];
  }

id sub_1001F8198(void *a1)
{
  if (!a1) {
    return 0LL;
  }
  int v2 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"sha"]);

  if (v2)
  {
    id v3 = &off_10040C400;
    BOOL v4 = 1;
  }

  else
  {
    id v5 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"md5"]);

    BOOL v4 = v5 != 0LL;
    if (v5) {
      id v3 = &off_10040C418;
    }
    else {
      id v3 = 0LL;
    }
  }

  id v6 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"hash_array"]);
  id v13 = 0LL;
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[NSPropertyListSerialization dataWithPropertyList:format:options:error:]( &OBJC_CLASS___NSPropertyListSerialization,  "dataWithPropertyList:format:options:error:",  v6,  200LL,  0LL,  &v13));
  id v8 = v13;
  uint64_t v9 = objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"chunk_size"]);
  int v10 = (void *)v9;
  uint64_t v11 = 0LL;
  if (v4 && v9)
  {
    if (v7)
    {
      v14[0] = @"hash_type";
      v14[1] = @"bytes_to_hash";
      v15[0] = v3;
      v15[1] = v9;
      void v14[2] = @"hash_array";
      id v15[2] = v7;
      uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v15,  v14,  3LL));
    }
  }

  return v11;
}

void *sub_1001F8338(void *a1)
{
  uint64_t v1 = a1;
  if (a1)
  {
    id v2 = sub_1001F7B20(a1);
    id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
    if (v3)
    {
      id v4 = sub_1001AC304(v1);
      id v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
      id v6 = sub_1001E3B50(v5);
      id v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
      uint64_t v1 = (void *)sub_1001ACAFC((uint64_t)&OBJC_CLASS___ODRAssetPack, v3, v7);
    }

    else
    {
      uint64_t v1 = 0LL;
    }
  }

  return v1;
}

void sub_1001F83F4(id a1)
{
  uint64_t v1 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  id v2 = (void *)qword_100463370;
  qword_100463370 = (uint64_t)v1;
}

char *sub_1001F841C(char *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    v52.receiver = a1;
    v52.super_class = (Class)&OBJC_CLASS___ODRClient;
    a1 = (char *)objc_msgSendSuper2(&v52, "init");
    if (a1)
    {
      id v4 = objc_opt_new(&OBJC_CLASS___NSMutableDictionary);
      id v5 = (void *)*((void *)a1 + 1);
      *((void *)a1 + 1) = v4;

      id v6 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
      id v7 = (void *)*((void *)a1 + 10);
      *((void *)a1 + 10) = v6;

      id v8 = objc_alloc_init(&OBJC_CLASS___NSLock);
      uint64_t v9 = (void *)*((void *)a1 + 11);
      *((void *)a1 + 11) = v8;

      uint64_t v10 = _NSBundleResourceRequestServerInterface();
      uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
      [v3 setExportedInterface:v11];

      uint64_t v12 = _NSBundleResourceRequestClientInterface();
      id v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
      [v3 setRemoteObjectInterface:v13];

      [v3 setExportedObject:a1];
      uint64_t v14 = objc_claimAutoreleasedReturnValue([v3 remoteObjectProxy]);
      uint64_t v15 = (void *)*((void *)a1 + 8);
      *((void *)a1 + _Block_object_dispose(va, 8) = v14;

      if (v3) {
        [v3 auditToken];
      }
      else {
        memset(&error[1], 0, 32);
      }
      Default = CFAllocatorGetDefault();
      audit_token_t token = *(audit_token_t *)&error[1];
      int v17 = SecTaskCreateWithAuditToken(Default, &token);
      uint64_t v18 = v17;
      if (v17)
      {
        __int16 v19 = (void *)SecTaskCopyValueForEntitlement(v17, @"application-identifier", error);
        uint64_t v20 = ASDLogHandleForCategory(19LL);
        __int16 v21 = (os_log_s *)objc_claimAutoreleasedReturnValue(v20);
        if (os_log_type_enabled(v21, OS_LOG_TYPE_DEBUG))
        {
          token.val[0] = 138543362;
          *(void *)&token.val[1] = v19;
          _os_log_debug_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEBUG,  "Application Identifier is: %{public}@",  (uint8_t *)&token,  0xCu);
        }

        CFRelease(v18);
        *(void *)token.val = 0LL;
        CPCopyBundleIdentifierAndTeamFromApplicationIdentifier(v19, &token, 0LL);
        if (*(void *)token.val)
        {
          id v22 = (void *)*((void *)a1 + 9);
          *((void *)a1 + 9) = *(void *)token.val;
        }
      }

      uint64_t v23 = (void *)*((void *)a1 + 9);
      if (v23
        || (uint64_t v24 = objc_claimAutoreleasedReturnValue(+[XPCClient clientIDForConnection:](&OBJC_CLASS___XPCClient, "clientIDForConnection:", v3)),
            id v25 = (void *)*((void *)a1 + 9),
            *((void *)a1 + 9) = v24,
            v25,
            (uint64_t v23 = (void *)*((void *)a1 + 9)) != 0LL))
      {
        uint64_t v26 = sub_1002D92D0((uint64_t)&OBJC_CLASS___ODRApplication, v23);
        uint64_t v27 = objc_claimAutoreleasedReturnValue(v26);
        objc_super v28 = (void *)*((void *)a1 + 2);
        *((void *)a1 + 2) = v27;
      }

      uint64_t v29 = ASDLogHandleForCategory(19LL);
      id v30 = (os_log_s *)objc_claimAutoreleasedReturnValue(v29);
      if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v31 = *((void *)a1 + 9);
        token.val[0] = 138543362;
        *(void *)&token.val[1] = v31;
        _os_log_impl( (void *)&_mh_execute_header,  v30,  OS_LOG_TYPE_DEFAULT,  "Connected with [%{public}@]",  (uint8_t *)&token,  0xCu);
      }

      uint64_t v32 = ASDLogHandleForCategory(19LL);
      uint64_t v33 = (os_log_s *)objc_claimAutoreleasedReturnValue(v32);
      if (os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v34 = *((void *)a1 + 2);
        id v35 = sub_1002DAB14(v34);
        uint64_t v36 = (void *)objc_claimAutoreleasedReturnValue(v35);
        token.val[0] = 138543618;
        *(void *)&token.val[1] = v34;
        LOWORD(token.val[3]) = 2114;
        *(void *)((char *)&token.val[3] + 2) = v36;
        _os_log_impl( (void *)&_mh_execute_header,  v33,  OS_LOG_TYPE_DEFAULT,  "Application: %{public}@ Version: %{public}@",  (uint8_t *)&token,  0x16u);
      }

      uint64_t v46 = _NSConcreteStackBlock;
      uint64_t v47 = 3221225472LL;
      id v48 = sub_1001F88B0;
      id v49 = &unk_1003E9880;
      a1 = a1;
      id v50 = a1;
      [v3 setInvalidationHandler:&v46];
      id v37 = sub_100185E88((uint64_t)&OBJC_CLASS___ODRBackgroundMaintenance);
      uint64_t v38 = (void *)objc_claimAutoreleasedReturnValue(v37);
      sub_100185F6C(v38);

      if (v3) {
        objc_msgSend(v3, "auditToken", v46, v47, v48, v49);
      }
      else {
        memset(&token, 0, sizeof(token));
      }
      __int128 v39 = *(_OWORD *)&token.val[4];
      *(_OWORD *)(a1 + 2_Block_object_dispose(va, 8) = *(_OWORD *)token.val;
      *(_OWORD *)(a1 + 44) = v39;
      objc_msgSend(v3, "resume", v46, v47, v48, v49);
      id v40 = (id)qword_100463370;
      objc_sync_enter(v40);
      [(id)qword_100463370 addObject:a1];
      objc_sync_exit(v40);

      uint64_t v41 = ASDLogHandleForCategory(19LL);
      id v42 = (os_log_s *)objc_claimAutoreleasedReturnValue(v41);
      if (os_log_type_enabled(v42, OS_LOG_TYPE_DEBUG))
      {
        id v45 = objc_getProperty(a1, v43, 72LL, 1);
        token.val[0] = 138543362;
        *(void *)&token.val[1] = v45;
        _os_log_debug_impl( (void *)&_mh_execute_header,  v42,  OS_LOG_TYPE_DEBUG,  "Created ODRClient from %{public}@",  (uint8_t *)&token,  0xCu);
      }
    }
  }

  return a1;
}

void sub_1001F8894(_Unwind_Exception *a1)
{
}

void sub_1001F88B0(uint64_t a1)
{
  uint64_t v2 = ASDLogHandleForCategory(19LL);
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
  {
    id Property = *(__CFString **)(a1 + 32);
    if (Property) {
      id Property = (__CFString *)objc_getProperty(Property, v4, 72LL, 1);
    }
    id v13 = @"Unknown Client";
    if (Property) {
      id v13 = Property;
    }
    LODWORD(v14) = 138543362;
    *(void *)((char *)&v14 + 4) = v13;
    _os_log_error_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_ERROR,  "Lost connection to '%{public}@'.",  (uint8_t *)&v14,  0xCu);
  }

  id v5 = *(id *)(a1 + 32);
  objc_opt_self(&OBJC_CLASS___ODRClient);
  if (v5[2])
  {
    id v6 = sub_1001B53D0((uint64_t)&OBJC_CLASS___ODRDatabaseStore);
    id v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
    *(void *)&__int128 v14 = _NSConcreteStackBlock;
    *((void *)&v14 + 1) = 3221225472LL;
    uint64_t v15 = sub_1001FEA5C;
    id v16 = &unk_1003E9858;
    int v17 = v5;
    [v7 modifyUsingTransaction:&v14];
  }

  id v8 = (id)qword_100463370;
  objc_sync_enter(v8);
  [(id)qword_100463370 removeObject:v5];
  objc_sync_exit(v8);

  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = *(void **)(v9 + 96);
  *(void *)(v9 + 96) = 0LL;

  uint64_t v11 = *(void *)(a1 + 32);
  if (v11) {
    objc_storeStrong((id *)(v11 + 64), 0LL);
  }
}

void sub_1001F8A64(_Unwind_Exception *a1)
{
}

id sub_1001F8A80(uint64_t a1)
{
  id v1 = (id)qword_100463370;
  objc_sync_enter(v1);
  id v2 = [(id)qword_100463370 copy];
  objc_sync_exit(v1);

  return v2;
}

void sub_1001F8ACC(_Unwind_Exception *a1)
{
}

id sub_1001F8AE0(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_self(a1);
  id v4 = (id)qword_100463370;
  objc_sync_enter(v4);
  __int128 v16 = 0u;
  __int128 v17 = 0u;
  __int128 v18 = 0u;
  __int128 v19 = 0u;
  id v5 = (id)qword_100463370;
  id v7 = [v5 countByEnumeratingWithState:&v16 objects:v20 count:16];
  if (v7)
  {
    uint64_t v8 = *(void *)v17;
    do
    {
      uint64_t v9 = 0LL;
      do
      {
        if (*(void *)v17 != v8) {
          objc_enumerationMutation(v5);
        }
        uint64_t v10 = *(void **)(*((void *)&v16 + 1) + 8LL * (void)v9);
        if (v10) {
          id Property = objc_getProperty(*(id *)(*((void *)&v16 + 1) + 8LL * (void)v9), v6, 72LL, 1);
        }
        else {
          id Property = 0LL;
        }
        id v12 = Property;
        unsigned int v13 = objc_msgSend(v12, "isEqualToString:", v3, (void)v16);

        if (v13)
        {
          id v7 = v10;
          goto LABEL_15;
        }

        uint64_t v9 = (char *)v9 + 1;
      }

      while (v7 != v9);
      id v14 = [v5 countByEnumeratingWithState:&v16 objects:v20 count:16];
      id v7 = v14;
    }

    while (v14);
  }

void sub_1001F8C58(_Unwind_Exception *a1)
{
}

id sub_1001F8C7C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = (id)objc_opt_self(a1);
  objc_sync_enter(v7);
  uint64_t v29 = 0LL;
  id v30 = &v29;
  uint64_t v31 = 0x3032000000LL;
  uint64_t v32 = sub_1001F9094;
  uint64_t v33 = sub_1001F90A4;
  id v34 = 0LL;
  id v8 = sub_1001B53D0((uint64_t)&OBJC_CLASS___ODRDatabaseStore);
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
  v26[0] = _NSConcreteStackBlock;
  v26[1] = 3221225472LL;
  void v26[2] = sub_1001F90AC;
  v26[3] = &unk_1003EB858;
  objc_super v28 = &v29;
  id v10 = v5;
  id v27 = v10;
  [v9 readUsingSession:v26];

  uint64_t v11 = ASDLogHandleForCategory(19LL);
  id v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
  if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG))
  {
    LODWORD(buf) = 138543362;
    *(void *)((char *)&buf + 4) = v10;
    _os_log_debug_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEBUG,  "Asset Pack : %{public}@ has no localURLString.",  (uint8_t *)&buf,  0xCu);
  }

  id v13 = sub_1001F7CB0((void *)v30[5]);
  id v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
  if (sub_1001B9EB0(v14))
  {
    uint64_t v15 = ASDLogHandleForCategory(19LL);
    __int128 v16 = (os_log_s *)objc_claimAutoreleasedReturnValue(v15);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      LODWORD(buf) = 138543362;
      *(void *)((char *)&buf + 4) = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "This URL is invalid, we need to refresh the manifest. [%{public}@]",  (uint8_t *)&buf,  0xCu);
    }

    id v17 = v6;
    objc_opt_self(v7);
    uint64_t v36 = 0LL;
    id v37 = &v36;
    uint64_t v38 = 0x3032000000LL;
    __int128 v39 = sub_1001F9094;
    id v40 = sub_1001F90A4;
    id v41 = 0LL;
    uint64_t v18 = ASDLogHandleForCategory(19LL);
    __int128 v19 = (os_log_s *)objc_claimAutoreleasedReturnValue(v18);
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      LODWORD(buf) = 138543362;
      *(void *)((char *)&buf + 4) = v17;
      _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEFAULT,  "Refreshing manifest for application: %{public}@",  (uint8_t *)&buf,  0xCu);
    }

    dispatch_semaphore_t v20 = dispatch_semaphore_create(0LL);
    __int16 v21 = sub_1001E6DFC(objc_alloc(&OBJC_CLASS___ODRManifestRequestTask), v17);
    objc_initWeak(&location, v21);
    *(void *)&__int128 buf = _NSConcreteStackBlock;
    *((void *)&buf + 1) = 3221225472LL;
    uint64_t v43 = sub_1001F90EC;
    uint64_t v44 = &unk_1003EC6A0;
    objc_copyWeak(v48, &location);
    id v22 = v17;
    id v45 = v22;
    uint64_t v47 = &v36;
    uint64_t v23 = v20;
    uint64_t v46 = v23;
    [v21 setCompletionBlock:&buf];
    sub_1001E2DEC((uint64_t)&OBJC_CLASS___ODRTaskQueue, v21, -1LL);
    dispatch_semaphore_wait(v23, 0xFFFFFFFFFFFFFFFFLL);
    id v24 = (id)v37[5];

    objc_destroyWeak(v48);
    objc_destroyWeak(&location);

    _Block_object_dispose(&v36, 8);
  }

  else
  {
    id v24 = 0LL;
  }

  _Block_object_dispose(&v29, 8);
  objc_sync_exit(v7);

  return v24;
}

void sub_1001F9028( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, id location, char a23)
{
}

uint64_t sub_1001F9094(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1001F90A4(uint64_t a1)
{
}

void sub_1001F90AC(uint64_t a1, id a2)
{
  id v3 = sub_100187D90(a2, *(void *)(a1 + 32));
  uint64_t v4 = objc_claimAutoreleasedReturnValue(v3);
  uint64_t v5 = *(void *)(*(void *)(a1 + 40) + 8LL);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v4;
}

void sub_1001F90EC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  uint64_t v4 = WeakRetained;
  if (!WeakRetained) {
    goto LABEL_4;
  }
  if ((WeakRetained[24] & 1) == 0)
  {
    id WeakRetained = objc_getProperty(WeakRetained, v3, 32LL, 1);
LABEL_4:
    uint64_t v5 = WeakRetained;
    uint64_t v6 = ASDLogHandleForCategory(19LL);
    id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      uint64_t v15 = *(void *)(a1 + 32);
      *(_DWORD *)__int128 buf = 138543618;
      uint64_t v20 = v15;
      __int16 v21 = 2114;
      id v22 = v5;
      _os_log_error_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_ERROR,  "Manifest refresh failed for application: %{public}@ error: %{public}@",  buf,  0x16u);
    }

    uint64_t v8 = *(void *)(*(void *)(a1 + 48) + 8LL);
    uint64_t v9 = *(void **)(v8 + 40);
    *(void *)(v8 + 40) = v5;
    goto LABEL_10;
  }

  uint64_t v10 = ASDLogHandleForCategory(19LL);
  uint64_t v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v12 = *(void *)(a1 + 32);
    *(_DWORD *)__int128 buf = 138543362;
    uint64_t v20 = v12;
    _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "Completed manifest refresh for application: %{public}@",  buf,  0xCu);
  }

  id v13 = sub_1001B53D0((uint64_t)&OBJC_CLASS___ODRDatabaseStore);
  id v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472LL;
  void v16[2] = sub_1001F92D4;
  v16[3] = &unk_1003EC678;
  id v17 = v4;
  id v18 = *(id *)(a1 + 32);
  [v14 modifyUsingTransaction:v16];

  uint64_t v9 = v17;
LABEL_10:

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
}

BOOL sub_1001F92D4(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  uint64_t v5 = a2;
  if (v3) {
    id Property = objc_getProperty(v3, v4, 48LL, 1);
  }
  else {
    id Property = 0LL;
  }
  id v7 = Property;
  BOOL v8 = sub_1001C45C0(v5, v7, *(void **)(a1 + 40), 1);

  return v8;
}

void sub_1001F967C(_Unwind_Exception *a1)
{
}

uint64_t sub_1001F96A8(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_100188788(a2, *(void **)(*(void *)(a1 + 32) + 16LL));
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = result;
  return result;
}

void sub_1001F96E4(uint64_t a1)
{
  if (a1)
  {
    id v2 = sub_1002D9D08(*(void *)(a1 + 16));
    id v3 = (id)objc_claimAutoreleasedReturnValue(v2);
    objc_opt_self(&OBJC_CLASS___ODRClient);
    id v4 = (id)qword_100463370;
    objc_sync_enter(v4);
    __int128 v16 = 0u;
    __int128 v17 = 0u;
    __int128 v18 = 0u;
    __int128 v19 = 0u;
    id v5 = (id)qword_100463370;
    id v7 = [v5 countByEnumeratingWithState:&v16 objects:v20 count:16];
    if (v7)
    {
      int v8 = 0;
      uint64_t v9 = *(void *)v17;
      do
      {
        for (uint64_t i = 0LL; i != v7; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v17 != v9) {
            objc_enumerationMutation(v5);
          }
          id Property = *(id *)(*((void *)&v16 + 1) + 8LL * (void)i);
          if (Property) {
            id Property = objc_getProperty(Property, v6, 72LL, 1);
          }
          id v12 = Property;
          unsigned int v13 = [v12 isEqualToString:v3];

          v8 += v13;
        }

        id v7 = [v5 countByEnumeratingWithState:&v16 objects:v20 count:16];
      }

      while (v7);

      objc_sync_exit(v4);
      if (v8 != 1) {
        goto LABEL_15;
      }
      id v14 = sub_1001B53D0((uint64_t)&OBJC_CLASS___ODRDatabaseStore);
      id v3 = (id)objc_claimAutoreleasedReturnValue(v14);
      v15[0] = _NSConcreteStackBlock;
      v15[1] = 3221225472LL;
      id v15[2] = sub_1001FEBF8;
      void v15[3] = &unk_1003E9858;
      void v15[4] = a1;
      [v3 modifyUsingTransaction:v15];
    }

    else
    {

      objc_sync_exit(v4);
    }

LABEL_15:
    sub_1001F9940(a1);
  }

void sub_1001F990C(_Unwind_Exception *a1)
{
}

void sub_1001F9930(uint64_t a1)
{
}

void sub_1001F9938(uint64_t a1)
{
}

void sub_1001F9940(uint64_t a1)
{
  if (a1)
  {
    uint64_t v1 = *(void **)(a1 + 88);
    *(void *)(a1 + 8_Block_object_dispose((const void *)(v1 - 128), 8) = 0LL;
    id v2 = v1;

    [v2 unlock];
  }

void sub_1001F9D2C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
}

void sub_1001F9D64(uint64_t a1, void *a2)
{
  id v3 = sub_100188344(a2, *(void **)(*(void *)(a1 + 32) + 16LL));
  uint64_t v4 = objc_claimAutoreleasedReturnValue(v3);
  uint64_t v5 = *(void *)(*(void *)(a1 + 40) + 8LL);
  uint64_t v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v4;
}

id sub_1001F9DA8(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = v3;
  if (a1)
  {
    id v5 = v3;
    id v6 = sub_1001FCC04(a1, (uint64_t)[v5 UTF8String]);
    uint64_t v7 = objc_claimAutoreleasedReturnValue(v6);
    int v8 = (void *)v7;
    if (v7)
    {
      v11[0] = _NSODRSandboxExtensionKey;
      v11[1] = _NSODRSandboxRootPathKey;
      v12[0] = v7;
      v12[1] = v5;
      uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v12,  v11,  2LL));
    }

    else
    {
      uint64_t v9 = 0LL;
    }
  }

  else
  {
    uint64_t v9 = 0LL;
  }

  return v9;
}

void sub_1001FA450( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, char a27)
{
}

void sub_1001FA498(uint64_t a1, void *a2)
{
  id v3 = sub_100188344(a2, *(void **)(*(void *)(a1 + 32) + 16LL));
  uint64_t v4 = objc_claimAutoreleasedReturnValue(v3);
  uint64_t v5 = *(void *)(*(void *)(a1 + 40) + 8LL);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v4;
}

void sub_1001FAA24(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
  {
    _Block_object_dispose((const void *)(v2 - 192), 8);
    objc_begin_catch(exception_object);
    JUMPOUT(0x1001FA8FCLL);
  }

  _Unwind_Resume(exception_object);
}

void sub_1001FAA9C(uint64_t a1, id a2)
{
  id v3 = sub_100188A28(a2, *(void *)(*(void *)(a1 + 32) + 16LL));
  uint64_t v4 = objc_claimAutoreleasedReturnValue(v3);
  uint64_t v5 = *(void *)(*(void *)(a1 + 40) + 8LL);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v4;
}

void sub_1001FAD28(uint64_t a1)
{
  if ((sub_1001FB6D8(*(void *)(a1 + 32), *(void **)(a1 + 40)) & 1) != 0)
  {
    uint64_t v64 = (void *)objc_claimAutoreleasedReturnValue( +[NSProgress progressWithTotalUnitCount:]( &OBJC_CLASS___NSProgress,  "progressWithTotalUnitCount:",  -1LL));
    id v63 = sub_1001C63A4((id *)objc_alloc(&OBJC_CLASS___ODRTagsRequest), v64);
    id v2 = sub_1001FBA7C(*(id *)(a1 + 32), *(void **)(a1 + 40));
    uint64_t v60 = (void *)objc_claimAutoreleasedReturnValue(v2);
    id v61 = objc_opt_new(&OBJC_CLASS___NSLock);
    uint64_t v3 = ASDLogHandleForCategory(19LL);
    uint64_t v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)__int128 buf = 134217984;
      *(void *)&uint8_t buf[4] = [v60 count];
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Going to pin asset %lu pack ids.", buf, 0xCu);
    }

    uint64_t v5 = ASDLogHandleForCategory(19LL);
    id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)__int128 buf = 138543362;
      *(void *)&uint8_t buf[4] = v60;
      _os_log_debug_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEBUG,  "Going to pin asset packs: %{public}@",  buf,  0xCu);
    }

    if ([v64 isCancelled])
    {
      (*(void (**)(void))(*(void *)(a1 + 56) + 16LL))();
    }

    else if ([v60 count])
    {
      objc_msgSend(v64, "setTotalUnitCount:", objc_msgSend(v60, "count"));
      v84[0] = 0LL;
      v84[1] = v84;
      v84[2] = 0x3032000000LL;
      v84[3] = sub_1001F9094;
      v84[4] = sub_1001F90A4;
      id v85 = objc_opt_new(&OBJC_CLASS___NSMutableDictionary);
      v83[0] = 0LL;
      v83[1] = v83;
      v83[2] = 0x2020000000LL;
      v83[3] = 0LL;
      v81[0] = 0LL;
      v81[1] = v81;
      v81[2] = 0x2020000000LL;
      char v82 = 0;
      objc_msgSend(v64, "becomeCurrentWithPendingUnitCount:", objc_msgSend(v60, "count"));
      __int128 v79 = 0u;
      __int128 v80 = 0u;
      __int128 v77 = 0u;
      __int128 v78 = 0u;
      id obj = v60;
      id v10 = [obj countByEnumeratingWithState:&v77 objects:v97 count:16];
      if (v10)
      {
        uint64_t v59 = *(void *)v78;
        do
        {
          id v58 = v10;
          for (uint64_t i = 0LL; i != v58; uint64_t i = (char *)i + 1)
          {
            if (*(void *)v78 != v59) {
              objc_enumerationMutation(obj);
            }
            id v12 = *(void **)(*((void *)&v77 + 1) + 8LL * (void)i);
            uint64_t v13 = ASDLogHandleForCategory(19LL);
            id v14 = (os_log_s *)objc_claimAutoreleasedReturnValue(v13);
            if (os_log_type_enabled(v14, OS_LOG_TYPE_DEBUG))
            {
              id v52 = sub_1001F7970(v12);
              id v53 = (void *)objc_claimAutoreleasedReturnValue(v52);
              *(_DWORD *)__int128 buf = 138543362;
              *(void *)&uint8_t buf[4] = v53;
              _os_log_debug_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEBUG,  "Trying to pin asset pack with ID: %{public}@",  buf,  0xCu);
            }

            id v15 = sub_1001F7B20(v12);
            __int128 v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
            if (!v16
              || (id v17 = sub_1001F7B20(v12),
                  __int128 v18 = (void *)objc_claimAutoreleasedReturnValue(v17),
                  __int128 v19 = (void *)objc_claimAutoreleasedReturnValue([v18 absoluteString]),
                  BOOL v20 = [v19 length] == 0,
                  v19,
                  v18,
                  v16,
                  v20))
            {
              id v21 = sub_1001F7970(v12);
              id v22 = (void *)objc_claimAutoreleasedReturnValue(v21);
              id v23 = sub_1001F8C7C((uint64_t)&OBJC_CLASS___ODRClient, v22, *(void **)(*(void *)(a1 + 32) + 16LL));
            }

            if ([v64 isCancelled])
            {
              (*(void (**)(void))(*(void *)(a1 + 56) + 16LL))();

              _Block_object_dispose(v81, 8);
              _Block_object_dispose(v83, 8);
              _Block_object_dispose(v84, 8);

              goto LABEL_45;
            }

            uint64_t v24 = ASDLogHandleForCategory(19LL);
            id v25 = (os_log_s *)objc_claimAutoreleasedReturnValue(v24);
            if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
            {
              id v26 = sub_1001F7970(v12);
              id v27 = (void *)objc_claimAutoreleasedReturnValue(v26);
              *(_DWORD *)__int128 buf = 138543362;
              *(void *)&uint8_t buf[4] = v27;
              _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_DEFAULT,  "Pinning asset pack [%{public}@]",  buf,  0xCu);
            }

            uint64_t v28 = *(void *)(a1 + 32);
            id v29 = sub_1001F7970(v12);
            id v30 = (void *)objc_claimAutoreleasedReturnValue(v29);
            uint64_t v31 = *(void *)(a1 + 64);
            v65[0] = _NSConcreteStackBlock;
            v65[1] = 3221225472LL;
            id v66 = sub_1001FBB88;
            id v67 = &unk_1003EC6C8;
            id v68 = v61;
            id v74 = v81;
            id v69 = v64;
            id v73 = *(id *)(a1 + 56);
            uint64_t v75 = v83;
            uint64_t v70 = *(void *)(a1 + 32);
            __int128 v71 = v12;
            uint64_t v76 = v84;
            id v32 = obj;
            id v72 = v32;
            id v33 = v30;
            id v34 = v63;
            id v35 = v65;
            if (v28)
            {
              uint64_t v91 = 0LL;
              id v92 = &v91;
              uint64_t v93 = 0x3032000000LL;
              __int16 v94 = sub_1001F9094;
              id v95 = sub_1001F90A4;
              id v96 = 0LL;
              id v36 = sub_1001B53D0((uint64_t)&OBJC_CLASS___ODRDatabaseStore);
              id v37 = (void *)objc_claimAutoreleasedReturnValue(v36);
              *(void *)__int128 buf = _NSConcreteStackBlock;
              *(void *)&uint8_t buf[8] = 3221225472LL;
              *(void *)&uint8_t buf[16] = sub_1001FE804;
              id v101 = &unk_1003EC808;
              id v38 = v33;
              id v102 = v38;
              uint64_t v103 = v28;
              id v105 = &v91;
              __int128 v39 = v34;
              id v104 = v39;
              [v37 readUsingSession:buf];

              id v41 = v92;
              uint64_t v42 = v92[5];
              if (v42)
              {
                *(void *)(v42 + 176) = v31;
                uint64_t v43 = v41[5];
                if (v43
                  && (*(_BYTE *)(v43 + 82) = 1, (uint64_t v44 = (void *)v41[5]) != 0LL)
                  && (objc_setProperty_atomic(v44, v40, v39, 224LL), v41 = v92, (uint64_t v45 = v92[5]) != 0))
                {
                  *(_DWORD *)(v45 + 8_Block_object_dispose(va, 8) = 25;
                  uint64_t v46 = v41[5];
                }

                else
                {
                  uint64_t v46 = 0LL;
                }

                v88[0] = _NSConcreteStackBlock;
                v88[1] = 3221225472LL;
                v88[2] = sub_1001FE8DC;
                v88[3] = &unk_1003EA020;
                id v89 = v38;
                uint64_t v47 = v35;
                id v90 = v47;
                if (v46)
                {
                  [*(id *)(v46 + 256) addErrorBlock:v88];
                  id v41 = v92;
                }

                uint64_t v48 = v41[5];
                v86[0] = _NSConcreteStackBlock;
                v86[1] = 3221225472LL;
                v86[2] = sub_1001FE9E0;
                v86[3] = &unk_1003EC830;
                id v87 = v47;
                if (v48) {
                  [*(id *)(v48 + 256) addSuccessBlock:v86];
                }
                id v49 = sub_10030F240((uint64_t)&OBJC_CLASS___ODRDownloadManager);
                id v50 = (void *)objc_claimAutoreleasedReturnValue(v49);
                sub_10030F38C((uint64_t)v50, (void *)v92[5]);

                uint64_t v51 = v89;
              }

              else
              {
                uint64_t v51 = (void *)objc_claimAutoreleasedReturnValue( +[ODRPublicErrorMapping publicErrorForError:]( &OBJC_CLASS____TtC9appstored21ODRPublicErrorMapping,  "publicErrorForError:",  0LL));
                v66((uint64_t)v35, -1LL, 0LL, v51);
              }

              _Block_object_dispose(&v91, 8);
            }
          }

          id v10 = [v32 countByEnumeratingWithState:&v77 objects:v97 count:16];
        }

        while (v10);
      }

      [v64 resignCurrent];
      _Block_object_dispose(v81, 8);
      _Block_object_dispose(v83, 8);
      _Block_object_dispose(v84, 8);
    }

    else
    {
      uint64_t v54 = *(void *)(a1 + 56);
      uint64_t v55 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionary](&OBJC_CLASS___NSDictionary, "dictionary"));
      (*(void (**)(uint64_t, void *, void))(v54 + 16))(v54, v55, 0LL);
    }

void sub_1001FB668( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, char a42, uint64_t a43, uint64_t a44, uint64_t a45, char a46, uint64_t a47, uint64_t a48, uint64_t a49, char a50)
{
}

uint64_t sub_1001FB6D8(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    uint64_t v35 = 0LL;
    id v36 = &v35;
    uint64_t v37 = 0x3032000000LL;
    id v38 = sub_1001F9094;
    __int128 v39 = sub_1001F90A4;
    id v40 = 0LL;
    id v4 = sub_1001B53D0((uint64_t)&OBJC_CLASS___ODRDatabaseStore);
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
    v34[0] = _NSConcreteStackBlock;
    v34[1] = 3221225472LL;
    v34[2] = sub_1001FEC0C;
    v34[3] = &unk_1003EB858;
    v34[4] = a1;
    v34[5] = &v35;
    [v5 readUsingSession:v34];

    id v6 = objc_opt_new(&OBJC_CLASS___NSMutableArray);
    __int128 v32 = 0u;
    __int128 v33 = 0u;
    __int128 v30 = 0u;
    __int128 v31 = 0u;
    id v7 = (id)v36[5];
    id v8 = [v7 countByEnumeratingWithState:&v30 objects:v46 count:16];
    if (v8)
    {
      uint64_t v9 = *(void *)v31;
      do
      {
        for (uint64_t i = 0LL; i != v8; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v31 != v9) {
            objc_enumerationMutation(v7);
          }
          id v11 = sub_10023AC88(*(void **)(*((void *)&v30 + 1) + 8LL * (void)i));
          id v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
          -[NSMutableArray addObject:](v6, "addObject:", v12);
        }

        id v8 = [v7 countByEnumeratingWithState:&v30 objects:v46 count:16];
      }

      while (v8);
    }

    id v13 = -[NSMutableArray count](v6, "count");
    if (v13 >= [v3 count])
    {
      __int128 v28 = 0u;
      __int128 v29 = 0u;
      __int128 v26 = 0u;
      __int128 v27 = 0u;
      id v15 = v3;
      id v17 = [v15 countByEnumeratingWithState:&v26 objects:v45 count:16];
      if (v17)
      {
        uint64_t v18 = *(void *)v27;
        while (2)
        {
          for (j = 0LL; j != v17; j = (char *)j + 1)
          {
            if (*(void *)v27 != v18) {
              objc_enumerationMutation(v15);
            }
            uint64_t v20 = *(void *)(*((void *)&v26 + 1) + 8LL * (void)j);
            if ((-[NSMutableArray containsObject:](v6, "containsObject:", v20, (void)v26) & 1) == 0)
            {
              uint64_t v22 = ASDLogHandleForCategory(19LL);
              id v23 = (os_log_s *)objc_claimAutoreleasedReturnValue(v22);
              if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
              {
                uint64_t v25 = *(void *)(a1 + 72);
                *(_DWORD *)__int128 buf = 138543618;
                uint64_t v42 = v20;
                __int16 v43 = 2114;
                uint64_t v44 = v25;
                _os_log_error_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_ERROR,  "Tag %{public}@ isn't valid for [%{public}@].",  buf,  0x16u);
              }

              goto LABEL_24;
            }
          }

          id v17 = [v15 countByEnumeratingWithState:&v26 objects:v45 count:16];
          uint64_t v21 = 1LL;
          if (v17) {
            continue;
          }
          break;
        }
      }

      else
      {
        uint64_t v21 = 1LL;
      }
    }

    else
    {
      uint64_t v14 = ASDLogHandleForCategory(19LL);
      id v15 = (id)objc_claimAutoreleasedReturnValue(v14);
      if (os_log_type_enabled((os_log_t)v15, OS_LOG_TYPE_ERROR))
      {
        uint64_t v16 = *(void *)(a1 + 72);
        *(_DWORD *)__int128 buf = 138543362;
        uint64_t v42 = v16;
        _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)v15,  OS_LOG_TYPE_ERROR,  "Tags aren't valid for [%{public}@].",  buf,  0xCu);
      }

void sub_1001FBA38( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, char a31)
{
}

id sub_1001FBA7C(id a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    uint64_t v11 = 0LL;
    id v12 = &v11;
    uint64_t v13 = 0x3032000000LL;
    uint64_t v14 = sub_1001F9094;
    id v15 = sub_1001F90A4;
    id v16 = 0LL;
    id v4 = sub_1001B53D0((uint64_t)&OBJC_CLASS___ODRDatabaseStore);
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472LL;
    void v7[2] = sub_1001FE6A0;
    v7[3] = &unk_1003EC7E0;
    id v10 = &v11;
    id v8 = v3;
    id v9 = a1;
    [v5 readUsingSession:v7];

    a1 = (id)v12[5];
    _Block_object_dispose(&v11, 8);
  }

  return a1;
}

void sub_1001FBB70( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_1001FBB88(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  [*(id *)(a1 + 32) lock];
  if (*(_BYTE *)(*(void *)(*(void *)(a1 + 80) + 8LL) + 24LL)) {
    goto LABEL_21;
  }
  if ([*(id *)(a1 + 40) isCancelled])
  {
    uint64_t v9 = ASDLogHandleForCategory(19LL);
    id v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_error_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "Progress was cancelled...", buf, 2u);
    }

    if (v8) {
      goto LABEL_8;
    }
    NSErrorUserInfoKey v37 = NSLocalizedRecoverySuggestionErrorKey;
    id v38 = @"Request for resources was cancelled.";
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v38,  &v37,  1LL));
    id v8 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  NSCocoaErrorDomain,  3072LL,  v11));
  }

  if (v8)
  {
LABEL_8:
    uint64_t v12 = ASDLogHandleForCategory(19LL);
    uint64_t v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)__int128 buf = 138543362;
      id v34 = v8;
      _os_log_error_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_ERROR,  "Error pinning asset pack: %{public}@",  buf,  0xCu);
    }

    *(_BYTE *)(*(void *)(*(void *)(a1 + 80) + 8LL) + 24LL) = 1;
    uint64_t v14 = *(void *)(a1 + 72);
    id v15 = (void *)objc_claimAutoreleasedReturnValue( +[ODRPublicErrorMapping publicErrorForError:]( &OBJC_CLASS____TtC9appstored21ODRPublicErrorMapping,  "publicErrorForError:",  v8));
    (*(void (**)(uint64_t, void, void *))(v14 + 16))(v14, 0LL, v15);

    goto LABEL_21;
  }

  ++*(void *)(*(void *)(*(void *)(a1 + 88) + 8LL) + 24LL);
  if (a2 >= 1)
  {
    uint64_t v16 = *(void *)(a1 + 48);
    id v17 = sub_1001F7970(*(void **)(a1 + 56));
    uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(v17);
    sub_1001FBF50(v16, v18);

    uint64_t v19 = ASDLogHandleForCategory(19LL);
    uint64_t v20 = (os_log_s *)objc_claimAutoreleasedReturnValue(v19);
    if (os_log_type_enabled(v20, OS_LOG_TYPE_DEBUG))
    {
      id v29 = sub_1001F7970(*(void **)(a1 + 56));
      __int128 v30 = (void *)objc_claimAutoreleasedReturnValue(v29);
      *(_DWORD *)__int128 buf = 138543618;
      id v34 = v7;
      __int16 v35 = 2114;
      id v36 = v30;
      _os_log_debug_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEBUG,  "Creating Result [%{public}@] [%{public}@]",  buf,  0x16u);
    }

    if (v7)
    {
      uint64_t v31 = _NSODRURLKey;
      id v32 = v7;
      uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v32,  &v31,  1LL));
      uint64_t v22 = *(void **)(*(void *)(*(void *)(a1 + 96) + 8LL) + 40LL);
      id v23 = sub_1001F7970(*(void **)(a1 + 56));
      uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue(v23);
      [v22 setObject:v21 forKey:v24];
    }
  }

  id v25 = *(id *)(*(void *)(*(void *)(a1 + 88) + 8LL) + 24LL);
  if (v25 == [*(id *)(a1 + 64) count])
  {
    uint64_t v26 = ASDLogHandleForCategory(19LL);
    __int128 v27 = (os_log_s *)objc_claimAutoreleasedReturnValue(v26);
    if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
    {
      __int128 v28 = *(void **)(*(void *)(*(void *)(a1 + 96) + 8LL) + 40LL);
      *(_DWORD *)__int128 buf = 138543618;
      id v34 = v28;
      __int16 v35 = 2114;
      id v36 = 0LL;
      _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_DEFAULT,  "Calling the completion handler. Result [%{public}@] Error [%{public}@]",  buf,  0x16u);
    }

    (*(void (**)(void))(*(void *)(a1 + 72) + 16LL))();
  }

  id v8 = 0LL;
LABEL_21:
  [*(id *)(a1 + 32) unlock];
}

void sub_1001FBF50(uint64_t a1, void *a2)
{
  if (a1)
  {
    id v3 = *(void **)(a1 + 8);
    id v4 = a2;
    uint64_t v5 = objc_claimAutoreleasedReturnValue([v3 objectForKeyedSubscript:v4]);
    if (v5) {
      id v6 = (_UNKNOWN **)v5;
    }
    else {
      id v6 = &off_10040C430;
    }
    id v7 = (id)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInt:]( NSNumber,  "numberWithInt:",  [v6 intValue] + 1));

    [*(id *)(a1 + 8) setObject:v7 forKeyedSubscript:v4];
  }

void sub_1001FC30C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v13 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 144), 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_1001FC348(uint64_t a1, unint64_t a2)
{
  id v72 = objc_opt_new(&OBJC_CLASS___NSMutableArray);
  __int128 v86 = 0u;
  __int128 v87 = 0u;
  __int128 v88 = 0u;
  __int128 v89 = 0u;
  uint64_t v76 = (uint64_t *)a1;
  id v4 = *(id *)(a1 + 32);
  id v5 = [v4 countByEnumeratingWithState:&v86 objects:v104 count:16];
  if (!v5) {
    goto LABEL_18;
  }
  uint64_t v6 = *(void *)v87;
  while (2)
  {
    for (uint64_t i = 0LL; i != v5; uint64_t i = (char *)i + 1)
    {
      if (*(void *)v87 != v6) {
        objc_enumerationMutation(v4);
      }
      id v8 = *(void **)(*((void *)&v86 + 1) + 8LL * (void)i);
      id v9 = sub_1001F7C8C(v8);
      id v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
      uint64_t v11 = (uint64_t)[v10 integerValue];

      if (v11 > a2)
      {
        uint64_t v18 = ASDLogHandleForCategory(19LL);
        uint64_t v15 = (os_log_s *)objc_claimAutoreleasedReturnValue(v18);
        if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
        {
          id v19 = sub_1001F7970(v8);
          uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue(v19);
          *(_DWORD *)__int128 buf = 138543362;
          *(void *)&uint8_t buf[4] = v20;
          _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "Asset Pack [%{public}@] is on the device but due to space constraint it can not be pinned, not doing any con ditional pinning.",  buf,  0xCu);
        }

        goto LABEL_17;
      }

      unsigned __int8 v12 = sub_1001F8338(v8);
      uint64_t v13 = ASDLogHandleForCategory(19LL);
      uint64_t v14 = (os_log_s *)objc_claimAutoreleasedReturnValue(v13);
      uint64_t v15 = v14;
      if ((v12 & 1) == 0)
      {
        if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
        {
          id v21 = sub_1001F7970(v8);
          uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue(v21);
          *(_DWORD *)__int128 buf = 138543362;
          *(void *)&uint8_t buf[4] = v22;
          _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "Asset Pack [%{public}@] is NOT on the device, not doing any conditional pinning.",  buf,  0xCu);
        }

void sub_1001FCBDC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, uint64_t a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,char a55)
{
}

id sub_1001FCC04(uint64_t a1, uint64_t a2)
{
  if (!a1) {
    return 0LL;
  }
  __int128 v2 = *(_OWORD *)(a1 + 44);
  v6[0] = *(_OWORD *)(a1 + 28);
  v6[1] = v2;
  id v3 = (void *)sandbox_extension_issue_file_to_process("com.apple.odr-assets", a2, 0LL, v6);
  if (v3) {
    id v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", v3));
  }
  else {
    id v4 = 0LL;
  }
  free(v3);
  return v4;
}

uint64_t sub_1001FCC84(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 48);
  id v5 = a2;
  sub_1001F7E10(v3, v4);
  LOBYTE(v3) = sub_1001C5884(v5, *(void **)(a1 + 32));

  *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = (_BYTE)v3;
  return *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL);
}

void sub_1001FCE48(uint64_t a1)
{
  id v2 = sub_1001FBA7C(*(id *)(a1 + 32), *(void **)(a1 + 40));
  id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  id v4 = [v3 count];
  uint64_t v5 = ASDLogHandleForCategory(19LL);
  uint64_t v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
  BOOL v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);
  if (v4)
  {
    if (v7)
    {
      id v8 = [v3 count];
      uint64_t v9 = *(void *)(a1 + 40);
      uint64_t v10 = *(void *)(a1 + 48);
      *(_DWORD *)__int128 buf = 134218498;
      id v28 = v8;
      __int16 v29 = 2114;
      uint64_t v30 = v9;
      __int16 v31 = 2048;
      uint64_t v32 = v10;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Found %lu asset packs for tags %{public}@, set the loading priority to %f",  buf,  0x20u);
    }

    __int128 v24 = 0u;
    __int128 v25 = 0u;
    __int128 v22 = 0u;
    __int128 v23 = 0u;
    uint64_t v6 = v3;
    id v11 = -[os_log_s countByEnumeratingWithState:objects:count:]( v6,  "countByEnumeratingWithState:objects:count:",  &v22,  v26,  16LL);
    if (v11)
    {
      id v12 = v11;
      uint64_t v13 = *(void *)v23;
      do
      {
        for (uint64_t i = 0LL; i != v12; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v23 != v13) {
            objc_enumerationMutation(v6);
          }
          uint64_t v15 = *(void **)(*((void *)&v22 + 1) + 8LL * (void)i);
          id v16 = sub_10030F240((uint64_t)&OBJC_CLASS___ODRDownloadManager);
          uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
          id v18 = sub_100313D6C((uint64_t)v17, v15);
          id v19 = (void *)objc_claimAutoreleasedReturnValue(v18);

          if (v19) {
            v19[22] = *(void *)(a1 + 48);
          }
        }

        id v12 = -[os_log_s countByEnumeratingWithState:objects:count:]( v6,  "countByEnumeratingWithState:objects:count:",  &v22,  v26,  16LL);
      }

      while (v12);
    }
  }

  else if (v7)
  {
    uint64_t v20 = *(void **)(a1 + 40);
    uint64_t v21 = *(void *)(a1 + 48);
    *(_DWORD *)__int128 buf = 138543618;
    id v28 = v20;
    __int16 v29 = 2048;
    uint64_t v30 = v21;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "No asset packs found for tags %{public}@ when asked to set the loading priority to %f",  buf,  0x16u);
  }
}

void sub_1001FD298(uint64_t a1)
{
  if ((sub_1001FB6D8(*(void *)(a1 + 32), *(void **)(a1 + 40)) & 1) != 0)
  {
    v54[0] = 0LL;
    v54[1] = v54;
    v54[2] = 0x3032000000LL;
    v54[3] = sub_1001F9094;
    void v54[4] = sub_1001F90A4;
    uint64_t v55 = objc_opt_new(&OBJC_CLASS___NSMutableDictionary);
    id v1 = sub_1001FBA7C(*(id *)(a1 + 32), *(void **)(a1 + 40));
    __int128 v52 = 0u;
    __int128 v53 = 0u;
    __int128 v50 = 0u;
    __int128 v51 = 0u;
    id obj = (id)objc_claimAutoreleasedReturnValue(v1);
    id v2 = [obj countByEnumeratingWithState:&v50 objects:v60 count:16];
    if (!v2) {
      goto LABEL_32;
    }
    uint64_t v44 = *(void *)v51;
    while (1)
    {
      for (uint64_t i = 0LL; i != v2; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v51 != v44) {
          objc_enumerationMutation(obj);
        }
        id v4 = *(void **)(*((void *)&v50 + 1) + 8LL * (void)i);
        if ((uint64_t)sub_1001F7BA8(v4) >= 1)
        {
          uint64_t v5 = *(void *)(a1 + 32);
          v45[0] = _NSConcreteStackBlock;
          v45[1] = 3221225472LL;
          id v46 = sub_1001FD954;
          uint64_t v47 = &unk_1003EC768;
          uint64_t v48 = v4;
          id v49 = v54;
          id v6 = v4;
          BOOL v7 = v45;
          if (v5)
          {
            if (*(void *)(v5 + 72))
            {
              uint64_t v8 = (uint64_t)sub_1001F7BA8(v6);
              if (v8 >= 1)
              {
                uint64_t v56 = 0LL;
                id v57 = &v56;
                uint64_t v58 = 0x2020000000LL;
                char v59 = 0;
                id v9 = sub_1001B53D0((uint64_t)&OBJC_CLASS___ODRDatabaseStore);
                uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
                *(void *)__int128 buf = _NSConcreteStackBlock;
                *(void *)&uint8_t buf[8] = 3221225472LL;
                *(void *)&uint8_t buf[16] = sub_1001FEC50;
                uint64_t v70 = &unk_1003EC718;
                id v11 = v6;
                id v71 = v11;
                id v72 = &v56;
                uint64_t v73 = v8;
                [v10 modifyUsingTransaction:buf];

                if (*((_BYTE *)v57 + 24))
                {
                  id v12 = sub_1001F7970(v11);
                  id v13 = (id)objc_claimAutoreleasedReturnValue(v12);
                  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(v5 + 8) objectForKeyedSubscript:v13]);
                  uint64_t v15 = v14;
                  if (v14)
                  {
                    int v16 = [v14 intValue];
                    if (v16 <= 1) {
                      int v17 = 1;
                    }
                    else {
                      int v17 = v16;
                    }
                    id v18 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInt:]( &OBJC_CLASS___NSNumber,  "numberWithInt:",  (v17 - 1)));

                    [*(id *)(v5 + 8) setObject:v18 forKeyedSubscript:v13];
                  }
                }

                id v19 = sub_1001F7BA8(v11);
                uint64_t v20 = ASDLogHandleForCategory(19LL);
                uint64_t v21 = (os_log_s *)objc_claimAutoreleasedReturnValue(v20);
                if (os_log_type_enabled(v21, OS_LOG_TYPE_DEBUG))
                {
                  id v30 = sub_1001F7970(v11);
                  __int16 v31 = (void *)objc_claimAutoreleasedReturnValue(v30);
                  *(_DWORD *)id v63 = 134218498;
                  uint64_t v64 = v8;
                  __int16 v65 = 2048;
                  id v66 = v19;
                  __int16 v67 = 2114;
                  id v68 = v31;
                  _os_log_debug_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEBUG,  "Changed Pin Count from %lld to %lld for asset pack %{public}@",  v63,  0x20u);
                }

                v46((uint64_t)v7, (uint64_t)v19);
                _Block_object_dispose(&v56, 8);
                goto LABEL_29;
              }

              uint64_t v26 = ASDLogHandleForCategory(19LL);
              __int128 v25 = (os_log_s *)objc_claimAutoreleasedReturnValue(v26);
              if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR))
              {
                id v32 = sub_1001F7970(v6);
                __int128 v33 = (void *)objc_claimAutoreleasedReturnValue(v32);
                *(_DWORD *)__int128 buf = 138543618;
                *(void *)&uint8_t buf[4] = v33;
                *(_WORD *)&_BYTE buf[12] = 2048;
                *(void *)&buf[14] = v8;
                _os_log_error_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_ERROR,  "Pin count for asset pack with ID: %{public}@ was %lld when trying to unpin",  buf,  0x16u);
              }
            }

            else
            {
              uint64_t v24 = ASDLogHandleForCategory(19LL);
              __int128 v25 = (os_log_s *)objc_claimAutoreleasedReturnValue(v24);
              if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR))
              {
                *(_WORD *)__int128 buf = 0;
                _os_log_error_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_ERROR,  "Unable to unpin asset pack.  We cannot determine the calling app's bundleID.",  buf,  2u);
              }
            }

            v46((uint64_t)v7, -1LL);
          }

void sub_1001FD900( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, char a33)
{
}

void sub_1001FD954(uint64_t a1, uint64_t a2)
{
  if (!a2)
  {
    id v3 = sub_1001F7B20(*(void **)(a1 + 32));
    uint64_t v4 = objc_claimAutoreleasedReturnValue(v3);
    uint64_t v5 = (void *)v4;
    if (v4)
    {
      uint64_t v11 = _NSODRURLKey;
      uint64_t v12 = v4;
      id v6 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v12,  &v11,  1LL));
      BOOL v7 = *(void **)(a1 + 32);
      uint64_t v8 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL);
      id v9 = sub_1001F7970(v7);
      uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
      [v8 setObject:v6 forKeyedSubscript:v10];
    }
  }

void sub_1001FDB6C(uint64_t a1)
{
  __int128 v11 = 0u;
  __int128 v12 = 0u;
  __int128 v13 = 0u;
  __int128 v14 = 0u;
  id obj = *(id *)(a1 + 32);
  id v2 = [obj countByEnumeratingWithState:&v11 objects:v17 count:16];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = *(void *)v12;
    do
    {
      uint64_t v5 = 0LL;
      do
      {
        if (*(void *)v12 != v4) {
          objc_enumerationMutation(obj);
        }
        uint64_t v6 = *(void *)(a1 + 40);
        id v7 = *(id *)(*((void *)&v11 + 1) + 8LL * (void)v5);
        if (v6)
        {
          id v8 = sub_1001B53D0((uint64_t)&OBJC_CLASS___ODRDatabaseStore);
          id v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
          v15[0] = _NSConcreteStackBlock;
          v15[1] = 3221225472LL;
          id v15[2] = sub_1001FE6E4;
          void v15[3] = &unk_1003E9858;
          id v16 = v7;
          [v9 modifyUsingTransaction:v15];
        }

        uint64_t v5 = (char *)v5 + 1;
      }

      while (v3 != v5);
      id v3 = [obj countByEnumeratingWithState:&v11 objects:v17 count:16];
    }

    while (v3);
  }
}

uint64_t sub_1001FDE40(uint64_t a1, void *a2)
{
  id v3 = a2;
  __int128 v52 = 0u;
  __int128 v53 = 0u;
  __int128 v54 = 0u;
  __int128 v55 = 0u;
  id obj = *(id *)(a1 + 32);
  id v39 = [obj countByEnumeratingWithState:&v52 objects:v62 count:16];
  if (v39)
  {
    uint64_t v38 = *(void *)v53;
    *(void *)&__int128 v4 = 138543618LL;
    __int128 v36 = v4;
    do
    {
      uint64_t v5 = 0LL;
      do
      {
        if (*(void *)v53 != v38) {
          objc_enumerationMutation(obj);
        }
        uint64_t v6 = *(void **)(*((void *)&v52 + 1) + 8 * v5);
        id v7 = sub_100188E44(v3, v6, *(void *)(*(void *)(a1 + 40) + 72LL));
        id v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
        uint64_t v40 = v8;
        uint64_t v41 = v5;
        if (v8)
        {
          id v9 = v8;
          sub_10023AD58(v8);
          sub_1001C517C((uint64_t)v3, v9);
        }

        else
        {
          uint64_t v10 = ASDLogHandleForCategory(19LL);
          __int128 v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
          if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
          {
            uint64_t v34 = *(void *)(*(void *)(a1 + 40) + 72LL);
            *(_DWORD *)__int128 buf = v36;
            char v59 = v6;
            __int16 v60 = 2114;
            uint64_t v61 = v34;
            _os_log_error_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_ERROR,  "No tag found in database for %{public}@ for bundle ID %{public}@.",  buf,  0x16u);
          }
        }

        __int128 v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithObject:](&OBJC_CLASS___NSSet, "setWithObject:", v6, v36));
        id v13 = sub_100187ED4(v3, v12, *(void *)(*(void *)(a1 + 40) + 16LL));
        __int128 v14 = (void *)objc_claimAutoreleasedReturnValue(v13);

        __int128 v50 = 0u;
        __int128 v51 = 0u;
        __int128 v48 = 0u;
        __int128 v49 = 0u;
        id v43 = v14;
        id v15 = [v43 countByEnumeratingWithState:&v48 objects:v57 count:16];
        if (v15)
        {
          id v16 = v15;
          uint64_t v17 = *(void *)v49;
          do
          {
            id v18 = 0LL;
            id v42 = v16;
            do
            {
              if (*(void *)v49 != v17) {
                objc_enumerationMutation(v43);
              }
              id v19 = *(void **)(*((void *)&v48 + 1) + 8LL * (void)v18);
              double v20 = *(double *)(a1 + 48);
              if (v20 <= sub_1001F7A40(v19))
              {
                id v21 = sub_1001F7970(v19);
                uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue(v21);
                id v23 = v3;
                id v24 = sub_100188DE8(v3, (uint64_t)v22);
                __int128 v25 = (void *)objc_claimAutoreleasedReturnValue(v24);

                uint64_t v26 = a1;
                double v27 = *(double *)(a1 + 48);
                __int128 v44 = 0u;
                __int128 v45 = 0u;
                __int128 v46 = 0u;
                __int128 v47 = 0u;
                id v28 = v25;
                id v29 = [v28 countByEnumeratingWithState:&v44 objects:v56 count:16];
                if (v29)
                {
                  id v30 = v29;
                  uint64_t v31 = *(void *)v45;
                  do
                  {
                    for (uint64_t i = 0LL; i != v30; uint64_t i = (char *)i + 1)
                    {
                      if (*(void *)v45 != v31) {
                        objc_enumerationMutation(v28);
                      }
                      __int128 v33 = *(void **)(*((void *)&v44 + 1) + 8LL * (void)i);
                      if (sub_10023ACAC(v33) > v27) {
                        double v27 = sub_10023ACAC(v33);
                      }
                    }

                    id v30 = [v28 countByEnumeratingWithState:&v44 objects:v56 count:16];
                  }

                  while (v30);
                }

                sub_1001F7D64(v19);
                id v3 = v23;
                a1 = v26;
                id v16 = v42;
              }

              else
              {
                sub_1001F7D64(v19);
              }

              sub_1001C5884(v3, v19);
              id v18 = (char *)v18 + 1;
            }

            while (v18 != v16);
            id v16 = [v43 countByEnumeratingWithState:&v48 objects:v57 count:16];
          }

          while (v16);
        }

        uint64_t v5 = v41 + 1;
      }

      while ((id)(v41 + 1) != v39);
      id v39 = [obj countByEnumeratingWithState:&v52 objects:v62 count:16];
    }

    while (v39);
  }

  return 1LL;
}

uint64_t sub_1001FE368(uint64_t a1, void *a2)
{
  id v3 = a2;
  __int128 v44 = 0u;
  __int128 v45 = 0u;
  __int128 v46 = 0u;
  __int128 v47 = 0u;
  id obj = *(id *)(a1 + 32);
  id v32 = [obj countByEnumeratingWithState:&v44 objects:v50 count:16];
  if (v32)
  {
    uint64_t v31 = *(void *)v45;
    do
    {
      uint64_t v4 = 0LL;
      do
      {
        if (*(void *)v45 != v31) {
          objc_enumerationMutation(obj);
        }
        uint64_t v34 = v4;
        id v5 = sub_100188E44(v3, *(void **)(*((void *)&v44 + 1) + 8 * v4), *(void *)(*(void *)(a1 + 40) + 72LL));
        uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
        sub_10023ACFC(v6, *(unsigned __int8 *)(a1 + 48));
        sub_1001C517C((uint64_t)v3, v6);
        __int128 v33 = v6;
        id v7 = sub_10023AC88(v6);
        id v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
        id v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithObject:](&OBJC_CLASS___NSSet, "setWithObject:", v8));
        id v10 = sub_100187ED4(v3, v9, *(void *)(*(void *)(a1 + 40) + 16LL));
        __int128 v11 = (void *)objc_claimAutoreleasedReturnValue(v10);

        __int128 v42 = 0u;
        __int128 v43 = 0u;
        __int128 v40 = 0u;
        __int128 v41 = 0u;
        id v12 = v11;
        id v13 = [v12 countByEnumeratingWithState:&v40 objects:v49 count:16];
        if (v13)
        {
          id v14 = v13;
          uint64_t v15 = *(void *)v41;
          uint64_t v35 = *(void *)v41;
          do
          {
            for (uint64_t i = 0LL; i != v14; uint64_t i = (char *)i + 1)
            {
              if (*(void *)v41 != v15) {
                objc_enumerationMutation(v12);
              }
              uint64_t v17 = *(void **)(*((void *)&v40 + 1) + 8LL * (void)i);
              if (*(_BYTE *)(a1 + 48))
              {
                uint64_t v18 = 1LL;
              }

              else
              {
                id v19 = sub_1001F7970(*(void **)(*((void *)&v40 + 1) + 8LL * (void)i));
                double v20 = (void *)objc_claimAutoreleasedReturnValue(v19);
                id v21 = sub_100188DE8(v3, (uint64_t)v20);
                uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue(v21);

                __int128 v38 = 0u;
                __int128 v39 = 0u;
                __int128 v36 = 0u;
                __int128 v37 = 0u;
                id v23 = v22;
                uint64_t v18 = (uint64_t)[v23 countByEnumeratingWithState:&v36 objects:v48 count:16];
                if (v18)
                {
                  id v24 = v3;
                  uint64_t v25 = a1;
                  id v26 = v12;
                  uint64_t v27 = *(void *)v37;
                  while (2)
                  {
                    for (uint64_t j = 0LL; j != v18; ++j)
                    {
                      if (*(void *)v37 != v27) {
                        objc_enumerationMutation(v23);
                      }
                      if ((sub_10023AC48(*(id *)(*((void *)&v36 + 1) + 8 * j)) & 1) != 0)
                      {
                        uint64_t v18 = 1LL;
                        goto LABEL_23;
                      }
                    }

                    uint64_t v18 = (uint64_t)[v23 countByEnumeratingWithState:&v36 objects:v48 count:16];
                    if (v18) {
                      continue;
                    }
                    break;
                  }

void sub_1001FE6A0(uint64_t a1, id a2)
{
  id v3 = sub_100187ED4(a2, *(void **)(a1 + 32), *(void *)(*(void *)(a1 + 40) + 16LL));
  uint64_t v4 = objc_claimAutoreleasedReturnValue(v3);
  uint64_t v5 = *(void *)(*(void *)(a1 + 48) + 8LL);
  uint64_t v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v4;
}

BOOL sub_1001FE6E4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_100187D90(v3, *(void *)(a1 + 32));
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  id v6 = sub_1001F7BA8(v5);
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = ASDLogHandleForCategory(19LL);
    id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = *(void *)(a1 + 32);
      int v13 = 138543618;
      uint64_t v14 = v10;
      __int16 v15 = 2048;
      id v16 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "The asset pack we were cleared to purge [%{public}@] has a pin count [%lld]. AssetPack will not be marked as purgeable.",  (uint8_t *)&v13,  0x16u);
    }
  }

  else if ((sub_1001F7C0C(v5) & 1) == 0)
  {
    sub_1001F7EB0(v5, 1LL);
  }

  BOOL v11 = sub_1001C5884(v3, v5);

  return v11;
}

void sub_1001FE804(void *a1, void *a2)
{
  uint64_t v3 = a1[4];
  id v4 = a2;
  id v5 = sub_100187D90(v4, v3);
  id v16 = (id)objc_claimAutoreleasedReturnValue(v5);
  id v6 = sub_100188344(v4, *(void **)(a1[5] + 16LL));
  id v7 = (void *)objc_claimAutoreleasedReturnValue(v6);

  if (v16)
  {
    id Property = (id)a1[6];
    uint64_t v10 = *(void **)(a1[5] + 16LL);
    if (Property) {
      id Property = objc_getProperty(Property, v8, 32LL, 1);
    }
    id v11 = Property;
    id v12 = sub_1002578E0((uint64_t)&OBJC_CLASS___ODRAssetDownloadRequest, v16, v7, v10, v11);
    uint64_t v13 = objc_claimAutoreleasedReturnValue(v12);
    uint64_t v14 = *(void *)(a1[7] + 8LL);
    __int16 v15 = *(void **)(v14 + 40);
    *(void *)(v14 + 40) = v13;
  }
}

void sub_1001FE8DC(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = ASDLogHandleForCategory(19LL);
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    int v9 = 138543618;
    uint64_t v10 = v8;
    __int16 v11 = 2114;
    id v12 = v3;
    _os_log_error_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_ERROR,  "Error downloading asset %{public}@: %{public}@",  (uint8_t *)&v9,  0x16u);
  }

  uint64_t v6 = *(void *)(a1 + 40);
  id v7 = (void *)objc_claimAutoreleasedReturnValue( +[ODRPublicErrorMapping publicErrorForError:]( &OBJC_CLASS____TtC9appstored21ODRPublicErrorMapping,  "publicErrorForError:",  v3));
  (*(void (**)(uint64_t, uint64_t, void, void *))(v6 + 16))(v6, -1LL, 0LL, v7);
}

void sub_1001FE9E0(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id Property = a2;
  id v5 = Property;
  if (Property)
  {
    uint64_t v6 = Property[2];
    id Property = objc_getProperty(Property, v4, 8LL, 1);
  }

  else
  {
    uint64_t v6 = 0LL;
  }

  id v7 = Property;

  (*(void (**)(uint64_t, uint64_t, void *, void))(v2 + 16))(v2, v6, v7, 0LL);
}

uint64_t sub_1001FEA5C(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v11 = 0LL;
  id v12 = &v11;
  uint64_t v13 = 0x2020000000LL;
  char v14 = 0;
  uint64_t v4 = *(void **)(*(void *)(a1 + 32) + 8LL);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  v8[2] = sub_1001FEB2C;
  v8[3] = &unk_1003EC858;
  id v5 = v3;
  id v9 = v5;
  uint64_t v10 = &v11;
  [v4 enumerateKeysAndObjectsUsingBlock:v8];
  uint64_t v6 = *((unsigned __int8 *)v12 + 24);

  _Block_object_dispose(&v11, 8);
  return v6;
}

void sub_1001FEB14( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_1001FEB2C(uint64_t a1, void *a2, void *a3)
{
  id v15 = a2;
  id v5 = a3;
  uint64_t v6 = v5;
  if (v5 && (int)[v5 intValue] >= 1)
  {
    id v7 = sub_100187D90(*(id *)(a1 + 32), (uint64_t)v15);
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
    id v9 = v8;
    if (v8)
    {
      id v10 = sub_1001F7BA8(v8);
      signed int v11 = [v6 intValue];
      sub_1001F7E10(v9, ((uint64_t)v10 - v11) & ~(((uint64_t)v10 - v11) >> 63));
      BOOL v12 = sub_1001C5884(*(void **)(a1 + 32), v9);
      uint64_t v13 = *(void *)(*(void *)(a1 + 40) + 8LL);
      BOOL v14 = v12 || *(_BYTE *)(v13 + 24) != 0;
      *(_BYTE *)(v13 + 24) = v14;
    }
  }
}

BOOL sub_1001FEBF8(uint64_t a1, BOOL a2)
{
  return sub_1001C56B8(a2, *(void **)(*(void *)(a1 + 32) + 16LL));
}

void sub_1001FEC0C(uint64_t a1, id a2)
{
  id v3 = sub_100188A28(a2, *(void *)(*(void *)(a1 + 32) + 16LL));
  uint64_t v4 = objc_claimAutoreleasedReturnValue(v3);
  uint64_t v5 = *(void *)(*(void *)(a1 + 40) + 8LL);
  uint64_t v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v4;
}

uint64_t sub_1001FEC50(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 48) - 1LL;
  id v5 = a2;
  sub_1001F7E10(v3, v4);
  LOBYTE(v3) = sub_1001C5884(v5, *(void **)(a1 + 32));

  *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = (_BYTE)v3;
  return *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL);
}

ODRInstallContext *sub_1001FED8C(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_self(a1);
  uint64_t v4 = objc_opt_new(&OBJC_CLASS___ODRInstallContext);
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v3 softwareVersionBundleID]);
  if (v4) {
    objc_setProperty_atomic_copy(v4, v5, v6, 24LL);
  }

  id v7 = (void *)objc_claimAutoreleasedReturnValue([v3 bundleVersion]);
  id v9 = v7;
  if (v4)
  {
    objc_setProperty_atomic_copy(v4, v8, v7, 32LL);

    v4->_isDeviceBasedVPP = [v3 deviceBasedVPP];
    id v10 = (void *)objc_claimAutoreleasedReturnValue([v3 itemID]);
    objc_setProperty_atomic_copy(v4, v11, v10, 56LL);
  }

  else
  {

    [v3 deviceBasedVPP];
    id v10 = (void *)objc_claimAutoreleasedReturnValue([v3 itemID]);
  }

  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([v3 bundleShortVersionString]);
  if (v4) {
    objc_setProperty_atomic_copy(v4, v12, v13, 88LL);
  }

  id v15 = (void *)objc_claimAutoreleasedReturnValue([v3 variantID]);
  if (v4) {
    objc_setProperty_atomic_copy(v4, v14, v15, 96LL);
  }

  id v16 = (void *)objc_claimAutoreleasedReturnValue([v3 betaExternalVersionIdentifier]);
  uint64_t v17 = v16;
  if (v16 && [v16 integerValue])
  {
    if (!v4) {
      goto LABEL_23;
    }
    v4->_isBeta = 1;
  }

  else
  {
    uint64_t v19 = objc_claimAutoreleasedReturnValue([v3 softwareVersionExternalIdentifier]);

    uint64_t v17 = (void *)v19;
    if (!v4) {
      goto LABEL_23;
    }
  }

  objc_setProperty_atomic_copy(v4, v18, v17, 48LL);
  double v20 = -[LSApplicationRecord initWithBundleIdentifier:allowPlaceholder:error:]( objc_alloc(&OBJC_CLASS___LSApplicationRecord),  "initWithBundleIdentifier:allowPlaceholder:error:",  v4->_bundleID,  1LL,  0LL);
  id v21 = v20;
  if (v20)
  {
    if (v4->_isRestore)
    {
      id v22 = -[LSApplicationRecord installType](v20, "installType");
      uint64_t v23 = 3LL;
      if (v22 != (id)2) {
        uint64_t v23 = 1LL;
      }
    }

    else
    {
      unsigned int v24 = -[LSApplicationRecord isPlaceholder](v20, "isPlaceholder");
      uint64_t v23 = 2LL;
      if (v24) {
        uint64_t v23 = 0LL;
      }
    }
  }

  else
  {
    uint64_t v23 = 0LL;
  }

  v4->_reason = v23;

LABEL_23:
  return v4;
}

void **sub_1001FEF90(void **a1)
{
  if (a1)
  {
    id v1 = a1;
    uint64_t v2 = a1[1];
    if (!v2)
    {
      id v3 = sub_1002D941C(objc_alloc(&OBJC_CLASS___ODRMutableApplication), a1[3]);
      uint64_t v4 = v1[1];
      v1[1] = v3;

      id v5 = (void *)objc_claimAutoreleasedReturnValue([v1[7] stringValue]);
      sub_1002DB674((uint64_t)v1[1], v5);

      sub_1002DB758((uint64_t)v1[1], *((_BYTE *)v1 + 17));
      sub_1002DB56C((uint64_t)v1[1], v1[4]);
      sub_1002DB4E8((uint64_t)v1[1], v1[11]);
      uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v1[6] stringValue]);
      sub_1002DB7B8((uint64_t)v1[1], v6);

      sub_1002DB6F8((uint64_t)v1[1], *((_BYTE *)v1 + 18));
      sub_1002DB5F0((uint64_t)v1[1], v1[12]);
      uint64_t v2 = v1[1];
    }

    a1 = v2;
  }

  return a1;
}

void *sub_1001FF0EC(void *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    v7.receiver = a1;
    v7.super_class = (Class)&OBJC_CLASS___SQLiteConnectionOptions;
    a1 = objc_msgSendSuper2(&v7, "init");
    if (a1)
    {
      id v4 = [v3 copy];
      id v5 = (void *)a1[3];
      a1[3] = v4;

      a1[2] = -64LL;
    }
  }

  return a1;
}

id sub_1001FF230(uint64_t a1)
{
  v2[0] = @"account_id";
  v2[1] = @"alt_dsid";
  v2[2] = @"apple_id";
  void v2[3] = @"active_end_time";
  void v2[4] = @"active_start_time";
  void v2[5] = @"event_type";
  v2[6] = @"timestamp";
  return (id)objc_claimAutoreleasedReturnValue( +[NSArray arrayWithObjects:count:]( &OBJC_CLASS___NSArray,  "arrayWithObjects:count:",  v2,  7LL));
}

id sub_1001FF2E4(void *a1, uint64_t a2)
{
  if (a1)
  {
    uint64_t v2 = a1;
    uint64_t v3 = objc_opt_class(&OBJC_CLASS___NSHTTPURLResponse, a2);
    if ((objc_opt_isKindOfClass(v2, v3) & 1) != 0) {
      a1 = (void *)objc_claimAutoreleasedReturnValue([v2 valueForHTTPHeaderField:@"Content-Type"]);
    }
    else {
      a1 = 0LL;
    }
  }

  return a1;
}

uint64_t sub_1001FF33C(uint64_t result, uint64_t a2)
{
  if (result)
  {
    uint64_t v2 = (void *)result;
    uint64_t v3 = objc_opt_class(&OBJC_CLASS___NSHTTPURLResponse, a2);
    if ((objc_opt_isKindOfClass(v2, v3) & 1) != 0) {
      return (uint64_t)[v2 statusCode];
    }
    else {
      return -1LL;
    }
  }

  return result;
}

id *sub_1001FF38C(id *a1, void *a2)
{
  id v4 = a2;
  if (a1)
  {
    v7.receiver = a1;
    v7.super_class = (Class)&OBJC_CLASS___RestoreBatchTask;
    id v5 = (id *)objc_msgSendSuper2(&v7, "init");
    a1 = v5;
    if (v5) {
      objc_storeStrong(v5 + 6, a2);
    }
  }

  return a1;
}

void sub_100200504(uint64_t a1, void *a2, void *a3, void *a4)
{
  id obj = a2;
  id v32 = a3;
  id v7 = a4;
  if (a1)
  {
    uint64_t v8 = a1;
    __int128 v35 = 0u;
    __int128 v36 = 0u;
    __int128 v33 = 0u;
    __int128 v34 = 0u;
    id v9 = [obj countByEnumeratingWithState:&v33 objects:v41 count:16];
    if (v9)
    {
      id v10 = v9;
      uint64_t v11 = *(void *)v34;
      uint64_t v30 = AMSErrorDomain;
      uint64_t v26 = AMSErrorUserInfoKeyServerErrorCode;
      do
      {
        for (uint64_t i = 0LL; i != v10; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v34 != v11) {
            objc_enumerationMutation(obj);
          }
          uint64_t v13 = *(void **)(*((void *)&v33 + 1) + 8LL * (void)i);
          if ((*(_BYTE *)(v8 + 57) & 1) != 0) {
            goto LABEL_27;
          }
          id v14 = v32;
          id v15 = (void *)objc_claimAutoreleasedReturnValue([v14 userInfo]);
          id v16 = (void *)objc_claimAutoreleasedReturnValue([v15 objectForKeyedSubscript:NSUnderlyingErrorKey]);

          uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([v16 domain]);
          uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue([v14 domain]);
          if (([v17 isEqualToString:NSURLErrorDomain] & 1) != 0
            || ([v17 isEqualToString:kCFErrorDomainCFNetwork] & 1) != 0
            || ([v18 isEqualToString:NSURLErrorDomain] & 1) != 0
            || ([v18 isEqualToString:kCFErrorDomainCFNetwork] & 1) != 0
            || [v18 isEqualToString:v30] && objc_msgSend(v14, "code") == (id)203)
          {
          }

          else
          {
            if (!ASDErrorIsEqual(v14, v30, 305LL))
            {

LABEL_27:
              sub_100201554((uint64_t)v7, v13, v32);
              continue;
            }

            id v28 = (void *)objc_claimAutoreleasedReturnValue([v14 userInfo]);
            uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue([v28 objectForKeyedSubscript:v26]);
            id v29 = [v27 integerValue];

            if (v29 != (id)3004) {
              goto LABEL_27;
            }
          }

          uint64_t v19 = -[LogKey initWithAppInstallMemoryEntity:]( objc_alloc(&OBJC_CLASS____TtC9appstored6LogKey),  "initWithAppInstallMemoryEntity:",  v13);
          double v20 = (void *)objc_claimAutoreleasedReturnValue([v13 valueForProperty:@"restore_retry_count"]);
          uint64_t v21 = (uint64_t)[v20 integerValue];

          if (v21 < 5)
          {
            sub_1002015D0((uint64_t)v7, v13, v14);
            uint64_t v24 = ASDLogHandleForCategory(29LL);
            uint64_t v25 = (os_log_s *)objc_claimAutoreleasedReturnValue(v24);
            if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)__int128 buf = 138412546;
              __int128 v38 = v19;
              __int16 v39 = 2048;
              uint64_t v40 = v21;
              _os_log_error_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_ERROR,  "[%@] Soft failing with %ld attempts",  buf,  0x16u);
            }
          }

          else
          {
            uint64_t v22 = ASDLogHandleForCategory(29LL);
            uint64_t v23 = (os_log_s *)objc_claimAutoreleasedReturnValue(v22);
            if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)__int128 buf = 138412546;
              __int128 v38 = v19;
              __int16 v39 = 2048;
              uint64_t v40 = v21;
              _os_log_error_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_ERROR,  "[%@] Hard failing after %ld attempts",  buf,  0x16u);
            }

            sub_100201554((uint64_t)v7, v13, v14);
          }
        }

        id v10 = [obj countByEnumeratingWithState:&v33 objects:v41 count:16];
      }

      while (v10);
    }
  }
}

id sub_100200918(id a1, void *a2, void *a3)
{
  id v5 = a2;
  uint64_t v6 = a3;
  if (!a1) {
    goto LABEL_115;
  }
  id v7 = sub_1002F9B60((uint64_t)&OBJC_CLASS___AppDefaultsManager);
  __int16 v124 = (void *)objc_claimAutoreleasedReturnValue(v7);
  uint64_t v123 = -[NSMutableArray initWithCapacity:]( [NSMutableArray alloc],  "initWithCapacity:",  [v124 count]);
  __int128 v137 = 0u;
  __int128 v138 = 0u;
  __int128 v139 = 0u;
  __int128 v140 = 0u;
  if (v5) {
    id Property = objc_getProperty(v5, v8, 56LL, 1);
  }
  else {
    id Property = 0LL;
  }
  self = v5;
  id v10 = Property;
  id v11 = [v10 countByEnumeratingWithState:&v137 objects:v143 count:16];
  uint64_t v132 = (uint64_t)v6;
  if (!v11)
  {
    uint64_t v130 = 0LL;
    goto LABEL_91;
  }

  id v13 = v11;
  uint64_t v130 = 0LL;
  uint64_t v131 = *(void *)v138;
  uint64_t v129 = ASDErrorDomain;
  id v127 = v10;
  do
  {
    id v14 = 0LL;
    id v128 = v13;
    do
    {
      if (*(void *)v138 != v131) {
        objc_enumerationMutation(v10);
      }
      id v15 = *(_BYTE **)(*((void *)&v137 + 1) + 8LL * (void)v14);
      if (v15) {
        id v16 = objc_getProperty(*(id *)(*((void *)&v137 + 1) + 8LL * (void)v14), v12, 208LL, 1);
      }
      else {
        id v16 = 0LL;
      }
      id v17 = v16;

      if (v17)
      {
        if (v6) {
          id v19 = objc_getProperty(v6, v18, 24LL, 1);
        }
        else {
          id v19 = 0LL;
        }
        id v21 = v19;
        if (v15) {
          id v22 = objc_getProperty(v15, v20, 208LL, 1);
        }
        else {
          id v22 = 0LL;
        }
        id v23 = v22;
        uint64_t v24 = (_BYTE *)objc_claimAutoreleasedReturnValue([v21 objectForKeyedSubscript:v23]);

        if (v15) {
          id v26 = objc_getProperty(v15, v25, 128LL, 1);
        }
        else {
          id v26 = 0LL;
        }
        id v27 = v26;
        id v29 = -[LogKey initWithBase:]( objc_alloc(&OBJC_CLASS____TtC9appstored6LogKey),  "initWithBase:",  @"Restore Batch");
        if (v27
          && (!v15 ? (id v30 = 0LL) : (id v30 = objc_getProperty(v15, v28, 136LL, 1)),
              id v31 = v30,
              BOOL v32 = sub_10030334C((uint64_t)&OBJC_CLASS___AMSDevice, v27, v31, v29),
              v31,
              !v32))
        {
          uint64_t v84 = ASDErrorWithTitleAndMessage(v129, 752LL, @"Incompatible application", 0LL);
          __int128 v85 = (void *)objc_claimAutoreleasedReturnValue(v84);
          sub_100201554((uint64_t)v6, v24, v85);
        }

        else
        {
          if (v15)
          {
            if ((v15[19] & 1) == 0)
            {
              id v33 = objc_getProperty(v15, v28, 72LL, 1);
              goto LABEL_25;
            }

            if (v24 && (v24[56] & 1) != 0)
            {
              uint64_t v86 = ASDErrorWithTitleAndMessage(v129, 751LL, @"Unsupported 32-Bit application", 0LL);
              __int128 v87 = (void *)objc_claimAutoreleasedReturnValue(v86);
              sub_100201554((uint64_t)v6, v24, v87);
            }

            else
            {
              __int128 v83 = v130;
              if (!v130) {
                __int128 v83 = objc_opt_new(&OBJC_CLASS___NSMutableArray);
              }
              if (v24) {
                v24[56] = 1;
              }
              uint64_t v130 = v83;
              -[NSMutableArray addObject:](v83, "addObject:", v24, self);
              if (!v24)
              {
LABEL_78:
                uint64_t v99 = ASDLogHandleForCategory(29LL);
                SEL v100 = (os_log_s *)objc_claimAutoreleasedReturnValue(v99);
                if (os_log_type_enabled(v100, OS_LOG_TYPE_ERROR))
                {
                  if (v15) {
                    id v102 = objc_getProperty(v15, v101, 208LL, 1);
                  }
                  else {
                    id v102 = 0LL;
                  }
                  id v103 = v102;
                  *(_DWORD *)__int128 buf = 138543362;
                  *(void *)&uint8_t buf[4] = v103;
                  _os_log_error_impl( (void *)&_mh_execute_header,  v100,  OS_LOG_TYPE_ERROR,  "Skipping post processing of failed itemID: %{public}@ due to missing mapped item",  buf,  0xCu);
                }
              }
            }

LABEL_80:
            goto LABEL_81;
          }

          id v33 = 0LL;
LABEL_25:
          id v34 = v33;

          if (v34)
          {
            if (v15 && (id v36 = objc_getProperty(v15, v35, 72LL, 1)) != 0LL)
            {
              __int128 v38 = v36;
              id v39 = objc_getProperty(v36, v37, 144LL, 1);
              if (v39)
              {
                __int128 v41 = v39;
                id v42 = objc_getProperty(v15, v40, 72LL, 1);
                __int128 v44 = v42;
                if (v42) {
                  id v42 = objc_getProperty(v42, v43, 144LL, 1);
                }
                id v45 = v42;
                id v46 = [v45 length];

                uint64_t v6 = (void **)v132;
                id v10 = v127;
                if (v46)
                {
                  if (!v24)
                  {
                    id v13 = v128;
                    goto LABEL_78;
                  }

                  if ((v24[56] & 1) != 0)
                  {
                    id v48 = objc_getProperty(v15, v47, 96LL, 1);
                    __int128 v49 = (void *)objc_claimAutoreleasedReturnValue([v124 objectForKeyedSubscript:v48]);
                    id v50 = [v49 longLongValue];
                    id v52 = objc_getProperty(v15, v51, 144LL, 1);
                    id v53 = [v52 longLongValue];

                    BOOL v54 = (uint64_t)v50 < (uint64_t)v53;
                    id v10 = v127;
                    uint64_t v6 = (void **)v132;
                    if (!v54)
                    {
                      uint64_t v93 = ASDErrorWithTitleAndMessage(v129, 3903LL, @"Invalid code signature", 0LL);
                      __int16 v94 = (void *)objc_claimAutoreleasedReturnValue(v93);
                      sub_100201554(v132, v24, v94);

                      id v96 = objc_getProperty(v15, v95, 96LL, 1);
                      -[NSMutableArray addObject:](v123, "addObject:", v96);

                      id v13 = v128;
                      goto LABEL_80;
                    }
                  }

                  __int128 v55 = v24;
                  uint64_t v56 = v15;
                  id v13 = v128;
                  if (v6)
                  {
                    uint64_t v57 = ASDLogHandleForCategory(29LL);
                    uint64_t v58 = (os_log_s *)objc_claimAutoreleasedReturnValue(v57);
                    if (os_log_type_enabled(v58, OS_LOG_TYPE_DEFAULT))
                    {
                      char v59 = sub_100323C54(v55);
                      __int16 v60 = (void *)objc_claimAutoreleasedReturnValue(v59);
                      *(_DWORD *)__int128 buf = 138412290;
                      *(void *)&uint8_t buf[4] = v60;
                      _os_log_impl( (void *)&_mh_execute_header,  v58,  OS_LOG_TYPE_DEFAULT,  "[%@] Content lookup succeeded",  buf,  0xCu);
                    }

                    [v55 setValue:&off_10040C490 forProperty:@"bootstrapped"];
                    [v55 setValue:&off_10040C4A8 forProperty:@"restore_state"];
                    [v55 setValue:&off_10040C4C0 forProperty:@"phase"];
                    if ((v55[7] & 1) != 0)
                    {
                      unsigned __int8 v62 = sub_1001E2698(v55, (uint64_t)@"metrics_install_type");
                      id v63 = sub_1001E25D0(v55, (uint64_t)@"evid");
                      uint64_t v64 = (void *)objc_claimAutoreleasedReturnValue(v63);
                      __int16 v65 = v64;
                      if (v62 != 15LL)
                      {
                        id v66 = [v64 longLongValue];
                        id v68 = objc_getProperty(v56, v67, 144LL, 1);
                        id v69 = [v68 longLongValue];

                        BOOL v54 = (uint64_t)v66 < (uint64_t)v69;
                        uint64_t v6 = (void **)v132;
                        if (v54) {
                          [v55 setValue:&off_10040C4D8 forProperty:@"metrics_install_type"];
                        }
                      }
                    }

                    id v70 = objc_getProperty(v56, v61, 72LL, 1);
                    *(void *)__int128 buf = v70;
                    id v71 = (void *)objc_claimAutoreleasedReturnValue( +[NSArray arrayWithObjects:count:]( &OBJC_CLASS___NSArray,  "arrayWithObjects:count:",  buf,  1LL));
                    sub_100323428(v55, v56, v71);

                    id v73 = objc_getProperty(v56, v72, 200LL, 1);
                    if (v73)
                    {
                      id v75 = objc_getProperty(v56, v74, 200LL, 1);
                      [v55 setValue:v75 forProperty:@"install_verification_token"];
                    }

                    id v125 = v56;
                    uint64_t v76 = sub_100303B74((uint64_t)&OBJC_CLASS___MIStoreMetadata, v56);
                    __int128 v77 = (void *)objc_claimAutoreleasedReturnValue(v76);
                    sub_1003042C8(v77, v6[1]);
                    id v141 = 0LL;
                    id v78 = sub_100304244((uint64_t)v77, &v141);
                    uint64_t v79 = objc_claimAutoreleasedReturnValue(v78);
                    id v80 = v141;
                    __int16 v126 = (void *)v79;
                    if (v80)
                    {
                      sub_1002D7A84(v55, v80);
                      uint64_t v81 = 16LL;
                      goto LABEL_66;
                    }

                    uint64_t v6 = (void **)v132;
                    if (v79)
                    {
                      [v55 setValue:v79 forProperty:@"store_metadata"];
                      __int128 v89 = (void *)objc_claimAutoreleasedReturnValue(+[NSNull null](&OBJC_CLASS___NSNull, "null"));
                      [v55 setValue:v89 forProperty:@"failure_error"];

                      uint64_t v81 = 48LL;
LABEL_66:
                      uint64_t v6 = (void **)v132;
                      objc_msgSend(*(id *)(v132 + v81), "addObject:", v55, self);
                    }

                    id v90 = v6[4];
                    id v91 = sub_100323DD0(v55);
                    __int16 v92 = (void *)objc_claimAutoreleasedReturnValue(v91);
                    [v90 removeObject:v92];

                    id v13 = v128;
                    uint64_t v56 = v125;
                  }

                  id v10 = v127;
                  goto LABEL_80;
                }

        BOOL v12 = v18 + 1;
      }

      while (v12 != v11);
      id v101 = [obj countByEnumeratingWithState:&v134 objects:v148 count:16];
      id v11 = v101;
    }

    while (v101);
  }

  if ([v106 count])
  {
    id v102 = sub_1002B61EC((uint64_t)&OBJC_CLASS___AppUsageDatabaseStore);
    id v103 = (void *)objc_claimAutoreleasedReturnValue(v102);
    v123[0] = _NSConcreteStackBlock;
    v123[1] = 3221225472LL;
    v123[2] = sub_100229840;
    v123[3] = &unk_1003EC538;
    __int16 v124 = v106;
    id v125 = self;
    [v103 modifyUsingTransaction:v123];
  }
}

          __int128 v55 = v122;
          goto LABEL_81;
        }

        __int16 v65 = (os_log_s *)objc_claimAutoreleasedReturnValue([v41 downloaderDSID]);
        if (v65)
        {
          if (-[os_log_s isEqual:](v58, "isEqual:", v65))
          {
            __int128 v118 = v58;
            id v120 = v65;
            [v122 setAccount:v57];
            [v122 setOriginalPurchaserDSID:v121];
            id v66 = (void *)objc_claimAutoreleasedReturnValue([v122 buyParams]);
            [v66 setParameter:v121 forKey:AMSBuyParamPropertyOwnerDsid];

            SEL v67 = ASDLogHandleForCategory(25LL);
            id v68 = (os_log_s *)objc_claimAutoreleasedReturnValue(v67);
            if (os_log_type_enabled(v68, OS_LOG_TYPE_DEFAULT))
            {
              id v69 = (os_log_s *)objc_claimAutoreleasedReturnValue([v122 logKey]);
              *(_DWORD *)__int128 buf = 138412290;
              id v127 = v69;
              _os_log_impl( (void *)&_mh_execute_header,  v68,  OS_LOG_TYPE_DEFAULT,  "[%@] Using active account that matches the downloader.",  buf,  0xCu);
            }

            uint64_t v58 = v118;
            id v70 = v68;
            goto LABEL_68;
          }

          goto LABEL_70;
        }

        id v120 = 0LL;
        id v71 = sub_100320738((uint64_t)&OBJC_CLASS___FamilyManager);
        uint64_t v119 = v58;
        SEL v72 = (void *)objc_claimAutoreleasedReturnValue(v71);
        id v73 = sub_100320BFC((uint64_t)v72, (int)[v122 isDiscretionary]);
        id v70 = (os_log_s *)objc_claimAutoreleasedReturnValue(v73);

        if (-[os_log_s containsObject:](v70, "containsObject:", v119)
          && -[os_log_s containsObject:](v70, "containsObject:", v121))
        {
          [v122 setAccount:v57];
          [v122 setOriginalPurchaserDSID:v121];
          uint64_t v74 = (void *)objc_claimAutoreleasedReturnValue([v122 buyParams]);
          [v74 setParameter:v121 forKey:AMSBuyParamPropertyOwnerDsid];

          id v75 = ASDLogHandleForCategory(25LL);
          uint64_t v76 = (os_log_s *)objc_claimAutoreleasedReturnValue(v75);
          if (os_log_type_enabled(v76, OS_LOG_TYPE_DEFAULT))
          {
            __int128 v77 = (os_log_s *)objc_claimAutoreleasedReturnValue([v122 logKey]);
            *(_DWORD *)__int128 buf = 138412290;
            id v127 = v77;
            _os_log_impl( (void *)&_mh_execute_header,  v76,  OS_LOG_TYPE_DEFAULT,  "[%@] Using active account that has a qualifying family account.",  buf,  0xCu);
          }
        }

        else
        {
          id v78 = (void *)objc_claimAutoreleasedReturnValue( +[ACAccountStore ams_sharedAccountStore]( &OBJC_CLASS___ACAccountStore,  "ams_sharedAccountStore"));
          uint64_t v79 = objc_claimAutoreleasedReturnValue(objc_msgSend(v78, "ams_iTunesAccountWithDSID:", v121));

          if (!v79)
          {

            uint64_t v58 = v119;
            __int16 v65 = 0LL;
LABEL_70:

LABEL_71:
            id v117 = v58;
            __int128 v83 = (os_log_s *)objc_claimAutoreleasedReturnValue([v41 storeMetadata]);
            id v120 = v83;
            if (v83)
            {
              uint64_t v84 = sub_100270B2C((uint64_t)&OBJC_CLASS___ACAccount, v83);
              __int128 v85 = objc_claimAutoreleasedReturnValue(v84);
              if (v85)
              {
                uint64_t v86 = (void *)v85;
                __int128 v87 = ASDLogHandleForCategory(25LL);
                uint64_t v88 = (os_log_s *)objc_claimAutoreleasedReturnValue(v87);
                if (os_log_type_enabled(v88, OS_LOG_TYPE_DEFAULT))
                {
                  __int128 v89 = (os_log_s *)objc_claimAutoreleasedReturnValue([v122 logKey]);
                  *(_DWORD *)__int128 buf = 138412290;
                  id v127 = v89;
                  _os_log_impl( (void *)&_mh_execute_header,  v88,  OS_LOG_TYPE_DEFAULT,  "[%@] Using unknown account that matches the store metadata.",  buf,  0xCu);
                }

                [v122 setAccount:v86];
                goto LABEL_79;
              }
            }

            id v90 = ASDLogHandleForCategory(25LL);
            uint64_t v64 = (os_log_s *)objc_claimAutoreleasedReturnValue(v90);
            if (os_log_type_enabled(v64, OS_LOG_TYPE_ERROR))
            {
              id v115 = (os_log_s *)objc_claimAutoreleasedReturnValue([v122 logKey]);
              *(_DWORD *)__int128 buf = 138412290;
              id v127 = v115;
              _os_log_error_impl( (void *)&_mh_execute_header,  v64,  OS_LOG_TYPE_ERROR,  "[%@] No matching account found.",  buf,  0xCu);
            }

LABEL_81:
      id v14 = (char *)v14 + 1;
    }

    while (v13 != v14);
    id v104 = [v10 countByEnumeratingWithState:&v137 objects:v143 count:16];
    id v13 = v104;
  }

  while (v104);
LABEL_91:

  sub_1002F9DAC((uint64_t)&OBJC_CLASS___AppDefaultsManager, v123, 0LL);
  id v5 = self;
  if (self)
  {
    id v106 = objc_getProperty(self, v105, 64LL, 1);
    id v107 = v106;
    if (v106)
    {
      __int128 v135 = 0u;
      __int128 v136 = 0u;
      __int128 v133 = 0u;
      __int128 v134 = 0u;
      id v108 = (void *)objc_claimAutoreleasedReturnValue([v106 keyEnumerator]);
      id v109 = [v108 countByEnumeratingWithState:&v133 objects:v142 count:16];
      if (v109)
      {
        id v111 = v109;
        uint64_t v112 = *(void *)v134;
        do
        {
          id v113 = 0LL;
          do
          {
            if (*(void *)v134 != v112) {
              objc_enumerationMutation(v108);
            }
            uint64_t v114 = *(void *)(*((void *)&v133 + 1) + 8LL * (void)v113);
            if (v6) {
              id v115 = objc_getProperty(v6, v110, 24LL, 1);
            }
            else {
              id v115 = 0LL;
            }
            id v116 = (_BYTE *)objc_claimAutoreleasedReturnValue(objc_msgSend(v115, "objectForKeyedSubscript:", v114, self));
            if (v116)
            {
              id v117 = (void *)objc_claimAutoreleasedReturnValue([v107 objectForKeyedSubscript:v114]);
              if ([v117 code] != (id)3604 || (v116[56] & 1) != 0)
              {
                sub_100201554(v132, v116, v117);
              }

              else
              {
                v116[56] = 1;
                __int128 v118 = v130;
                if (!v130) {
                  __int128 v118 = objc_opt_new(&OBJC_CLASS___NSMutableArray);
                }
                uint64_t v130 = v118;
                -[NSMutableArray addObject:](v118, "addObject:", v116);
              }
            }

            else
            {
              uint64_t v119 = ASDLogHandleForCategory(29LL);
              id v117 = (void *)objc_claimAutoreleasedReturnValue(v119);
              if (os_log_type_enabled((os_log_t)v117, OS_LOG_TYPE_ERROR))
              {
                *(_DWORD *)__int128 buf = 138543362;
                *(void *)&uint8_t buf[4] = v114;
                _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)v117,  OS_LOG_TYPE_ERROR,  "Skipping post processing of failed itemID: %{public}@ due to missing mapped install item",  buf,  0xCu);
              }
            }

            id v113 = (char *)v113 + 1;
            uint64_t v6 = (void **)v132;
          }

          while (v111 != v113);
          id v120 = [v108 countByEnumeratingWithState:&v133 objects:v142 count:16];
          id v111 = v120;
        }

        while (v120);
      }

      id v5 = self;
    }
  }

  else
  {
    id v107 = 0LL;
  }

  a1 = -[NSMutableArray copy](v130, "copy", self);

LABEL_115:
  return a1;
}

        return 0LL;
      case 0xBu:
        id v29 = 0;
        id v30 = 0;
        id v26 = 0LL;
        *(_BYTE *)(a1 + 104) |= 1u;
        while (2)
        {
          id v31 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v31 == -1LL || v31 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            BOOL v32 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v31);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v31 + 1;
            v26 |= (unint64_t)(v32 & 0x7F) << v29;
            if (v32 < 0)
            {
              v29 += 7;
              id v9 = v30++ >= 9;
              if (v9)
              {
                LODWORD(v26) = 0;
                goto LABEL_69;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v26) = 0;
        }
LABEL_69:
        __int128 v41 = 16LL;
        goto LABEL_78;
      case 0xCu:
        id v33 = 0;
        id v34 = 0;
        id v26 = 0LL;
        *(_BYTE *)(a1 + 104) |= 4u;
        while (2)
        {
          __int128 v35 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v35 == -1LL || v35 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            id v36 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v35);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v35 + 1;
            v26 |= (unint64_t)(v36 & 0x7F) << v33;
            if (v36 < 0)
            {
              v33 += 7;
              id v9 = v34++ >= 9;
              if (v9)
              {
                LODWORD(v26) = 0;
                goto LABEL_73;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v26) = 0;
        }
LABEL_73:
        __int128 v41 = 44LL;
        goto LABEL_78;
      case 0xDu:
        __int128 v37 = 0;
        __int128 v38 = 0;
        id v26 = 0LL;
        *(_BYTE *)(a1 + 104) |= 8u;
        while (2)
        {
          id v39 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v39 == -1LL || v39 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }

          else
          {
            uint64_t v40 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v39);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v39 + 1;
            v26 |= (unint64_t)(v40 & 0x7F) << v37;
            if (v40 < 0)
            {
              v37 += 7;
              id v9 = v38++ >= 9;
              if (v9)
              {
                LODWORD(v26) = 0;
                goto LABEL_77;
              }

              continue;
            }
          }

          break;
        }

        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v26) = 0;
        }
LABEL_77:
        __int128 v41 = 48LL;
LABEL_78:
        *(_DWORD *)(a1 + v41) = v26;
        goto LABEL_79;
      default:
        uint64_t result = PBReaderSkipValueWithTag(a2);
        if (!(_DWORD)result) {
          return result;
        }
        goto LABEL_79;
    }
  }

void sub_100201554(uint64_t a1, void *a2, void *a3)
{
  if (a1)
  {
    id v5 = a2;
    sub_1002D7A84(v5, a3);
    [*(id *)(a1 + 16) addObject:v5];
    uint64_t v6 = *(void **)(a1 + 32);
    id v7 = sub_100323DD0(v5);
    id v8 = (id)objc_claimAutoreleasedReturnValue(v7);

    [v6 removeObject:v8];
  }

void sub_1002015D0(uint64_t a1, void *a2, void *a3)
{
  if (a1)
  {
    id v8 = a2;
    sub_1002D7C94(v8, a3);
    id v5 = *(void **)(a1 + 32);
    id v6 = sub_100323DD0(v8);
    id v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
    [v5 removeObject:v7];

    [*(id *)(a1 + 40) addObject:v8];
  }

id sub_1002021C4(uint64_t a1)
{
  if (qword_100462300 != -1) {
    dispatch_once(&qword_100462300, &stru_1003EC8D0);
  }
  return (id)qword_1004622F8;
}

void sub_100202208(id a1)
{
  id v1 = objc_alloc_init(&OBJC_CLASS___AppMetricsService);
  uint64_t v2 = (void *)qword_1004622F8;
  qword_1004622F8 = (uint64_t)v1;
}

void sub_1002023B8(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = a1[6];
  if (v7) {
    (*(void (**)(uint64_t, id, id))(v7 + 16))(v7, v5, v6);
  }
  uint64_t v8 = ASDLogHandleForCategory(14LL);
  id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v10 = a1[4];
    uint64_t v11 = a1[5];
    int v12 = 138412546;
    uint64_t v13 = v10;
    __int16 v14 = 2114;
    uint64_t v15 = v11;
    _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "[%@] getMetricsEventsForType complete for client: %{public}@",  (uint8_t *)&v12,  0x16u);
  }
}

uint64_t sub_10020260C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_100202784(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_1002028FC(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_10020291C(uint64_t a1, void *a2)
{
  if (a1)
  {
    id v3 = sub_1002B86C0(a2, &stru_1003EC920);
    uint64_t v4 = objc_claimAutoreleasedReturnValue(v3);
    id v5 = *(void **)(a1 + 16);
    *(void *)(a1 + 16) = v4;
  }

id sub_100202960(id a1, NSString *a2)
{
  return -[NSString lowercaseString](a2, "lowercaseString");
}

id *sub_1002029DC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = (id *)objc_alloc((Class)objc_opt_self(a1));
  uint64_t v7 = sub_100202A30(v6, v5, a2);

  return v7;
}

id *sub_100202A30(id *a1, void *a2, void *a3)
{
  id v6 = a2;
  uint64_t v7 = v6;
  if (a1)
  {
    if (v6)
    {
      v14.receiver = a1;
      v14.super_class = (Class)&OBJC_CLASS___PurchaseHistoryUpdateCommand;
      a1 = (id *)objc_msgSendSuper2(&v14, "init");
      if (a1)
      {
        uint64_t v8 = objc_claimAutoreleasedReturnValue( +[KeepAlive keepAliveWithName:]( &OBJC_CLASS___KeepAlive,  "keepAliveWithName:",  @"com.apple.appstoredaemon.PurchaseHistoryManager.update"));
        id v9 = a1[3];
        a1[3] = (id)v8;

        id v10 = sub_100255630((uint64_t)&OBJC_CLASS___URLBag);
        uint64_t v11 = objc_claimAutoreleasedReturnValue(v10);
        id v12 = a1[1];
        a1[1] = (id)v11;

        objc_storeStrong(a1 + 5, a2);
        a1[4] = a3;
      }
    }

    else
    {

      a1 = 0LL;
    }
  }

  return a1;
}

id sub_100202AFC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  uint64_t v7 = objc_opt_self(a1);
  uint64_t v8 = sub_1002029DC(v7, (void *)4, v6);
  id v9 = (void *)objc_claimAutoreleasedReturnValue(v8);

  if (v9) {
    objc_setProperty_atomic(v9, v10, v5, 56LL);
  }

  return v9;
}

void sub_100202B70(void *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    if (!a1[2])
    {
      uint64_t v4 = sub_100202D04((uint64_t)a1);
      uint64_t v5 = objc_claimAutoreleasedReturnValue(v4);
      id v6 = (void *)a1[2];
      a1[2] = v5;
    }

    uint64_t v7 = ASDLogHandleForCategory(8LL);
    uint64_t v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v9 = a1[2];
      uint64_t v10 = a1[5];
      unint64_t v11 = a1[4] - 1LL;
      if (v11 > 6) {
        id v12 = @"default";
      }
      else {
        id v12 = off_1003ECAD0[v11];
      }
      *(_DWORD *)__int128 buf = 138413058;
      uint64_t v18 = v9;
      __int16 v19 = 2114;
      uint64_t v20 = v10;
      __int16 v21 = 2114;
      id v22 = v12;
      __int16 v23 = 2114;
      id v24 = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "[%@] Cancelling purchase history reload for accountID: %{public}@ context: %{public}@ error: %{public}@",  buf,  0x2Au);
    }

    if (a1[9])
    {
      id v13 = sub_100252108((uint64_t)&OBJC_CLASS___DispatchQueue);
      objc_super v14 = (dispatch_queue_t *)objc_claimAutoreleasedReturnValue(v13);
      v15[0] = _NSConcreteStackBlock;
      v15[1] = 3221225472LL;
      id v15[2] = sub_100202E68;
      void v15[3] = &unk_1003E9DC0;
      void v15[4] = a1;
      id v16 = v3;
      if (v14) {
        dispatch_async(v14[1], v15);
      }
    }
  }
}

_TtC9appstored6LogKey *sub_100202D04(uint64_t a1)
{
  id v1 = @"PC";
  uint64_t v2 = 48LL;
  switch(*(void *)(a1 + 32))
  {
    case 0LL:
      id v3 = 0LL;
      id v1 = @"DE";
      goto LABEL_12;
    case 1LL:
      id v3 = 0LL;
      id v1 = @"PP";
      goto LABEL_12;
    case 2LL:
      id v3 = 0LL;
      id v1 = @"HS";
      goto LABEL_12;
    case 3LL:
      id v3 = 0LL;
      id v1 = @"AC";
      goto LABEL_12;
    case 4LL:
      id v1 = @"PN";
      uint64_t v2 = 56LL;
      goto LABEL_8;
    case 5LL:
      id v3 = 0LL;
      id v1 = @"PR";
      goto LABEL_12;
    case 6LL:
LABEL_8:
      uint64_t v4 = objc_claimAutoreleasedReturnValue([*(id *)(a1 + v2) stringValue]);
      id v3 = (void *)v4;
      if (!v4) {
        goto LABEL_12;
      }
      uint64_t v8 = v4;
      uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v8, 1LL));
      break;
    case 7LL:
      id v3 = 0LL;
      id v1 = @"RD";
      goto LABEL_12;
    default:
      id v3 = 0LL;
      id v1 = &stru_1003F3E40;
LABEL_12:
      uint64_t v5 = &__NSArray0__struct;
      break;
  }

  id v6 = -[LogKey initWithCode:IDs:](objc_alloc(&OBJC_CLASS____TtC9appstored6LogKey), "initWithCode:IDs:", v1, v5);

  return v6;
}

uint64_t sub_100202E68(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a1 + 32) + 72LL) + 16LL))();
}

id sub_100202E78(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (a1)
  {
    if (!a1[2])
    {
      uint64_t v7 = sub_100202D04((uint64_t)a1);
      uint64_t v8 = objc_claimAutoreleasedReturnValue(v7);
      uint64_t v9 = (void *)a1[2];
      a1[2] = v8;
    }

    uint64_t v10 = a1[4];
    if (v10 == 5)
    {
      id v29 = sub_10018C584((uint64_t)&OBJC_CLASS___Promise, &off_10040C4F0);
      id v13 = (Promise *)objc_claimAutoreleasedReturnValue(v29);
    }

    else if (v10 == 4 && (unint64_t v11 = (void *)a1[7]) != 0LL)
    {
      id v12 = sub_10018C584((uint64_t)&OBJC_CLASS___Promise, v11);
      id v13 = (Promise *)objc_claimAutoreleasedReturnValue(v12);
      uint64_t v14 = ASDLogHandleForCategory(8LL);
      uint64_t v15 = (os_log_s *)objc_claimAutoreleasedReturnValue(v14);
      if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v16 = a1[2];
        uint64_t v17 = a1[7];
        *(_DWORD *)__int128 buf = 138412546;
        *(void *)&uint8_t buf[4] = v16;
        *(_WORD *)&_BYTE buf[12] = 2112;
        *(void *)&buf[14] = v17;
        _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "[%@] Push notification provided server revision: %@",  buf,  0x16u);
      }
    }

    else
    {
      id v18 = v5;
      id v19 = v6;
      id v20 = sub_1001B71B0((uint64_t)&OBJC_CLASS___SyncTaskScheduler);
      __int16 v21 = (void *)objc_claimAutoreleasedReturnValue(v20);
      *(void *)__int128 buf = _NSConcreteStackBlock;
      *(void *)&uint8_t buf[8] = 3221225472LL;
      *(void *)&uint8_t buf[16] = sub_100205D54;
      id v42 = &unk_1003ECAB0;
      __int128 v43 = a1;
      id v22 = v18;
      id v44 = v22;
      id v23 = v19;
      id v45 = v23;
      id v24 = sub_10018C524((uint64_t)&OBJC_CLASS___Promise, v21, buf);
      uint64_t v25 = (Promise *)objc_claimAutoreleasedReturnValue(v24);

      *(void *)__int128 buf = _NSConcreteStackBlock;
      *(void *)&uint8_t buf[8] = 3221225472LL;
      *(void *)&uint8_t buf[16] = sub_100205628;
      id v42 = &unk_1003ECA60;
      __int128 v43 = a1;
      id v26 = sub_1001B71B0((uint64_t)&OBJC_CLASS___SyncTaskScheduler);
      id v27 = (void *)objc_claimAutoreleasedReturnValue(v26);
      id v28 = sub_10018CBF4(v25, buf, v27);
      id v13 = (Promise *)objc_claimAutoreleasedReturnValue(v28);
    }

    v38[0] = _NSConcreteStackBlock;
    v38[1] = 3221225472LL;
    v38[2] = sub_1002031AC;
    v38[3] = &unk_1003EC948;
    v38[4] = a1;
    id v39 = v5;
    id v40 = v6;
    id v30 = sub_1001B71B0((uint64_t)&OBJC_CLASS___SyncTaskScheduler);
    id v31 = (void *)objc_claimAutoreleasedReturnValue(v30);
    BOOL v32 = sub_10018CBF4(v13, v38, v31);
    id v33 = (void *)objc_claimAutoreleasedReturnValue(v32);

    v37[0] = _NSConcreteStackBlock;
    v37[1] = 3221225472LL;
    void v37[2] = sub_100203A08;
    v37[3] = &unk_1003EC970;
    void v37[4] = a1;
    id v34 = sub_100252108((uint64_t)&OBJC_CLASS___DispatchQueue);
    __int128 v35 = (void *)objc_claimAutoreleasedReturnValue(v34);
    sub_10018C860(v33, v37, (uint64_t)v35);
  }

  else
  {
    id v33 = 0LL;
  }

  return v33;
}

id sub_1002031AC(void **a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = a1[4];
  if (v4[4] != 5LL)
  {
    id v12 = (void *)v4[5];
    id v13 = a1[6];
    id v44 = 0LL;
    id v14 = sub_1002037E4((uint64_t)&OBJC_CLASS___PurchaseHistoryUpdateCommand, v12, v13, &v44);
    uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
    id v16 = v44;
    if (v15)
    {
      id v17 = v15;
      id v18 = v3;
      objc_opt_self(&OBJC_CLASS___PurchaseHistoryUpdateCommand);
      if (v18)
      {
        id v19 = [v17 compare:v18];
        uint64_t v20 = ASDLogHandleForCategory(8LL);
        __int16 v21 = (os_log_s *)objc_claimAutoreleasedReturnValue(v20);
        if (os_log_type_enabled(v21, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)__int128 buf = 138412802;
          *(void *)&uint8_t buf[4] = v17;
          *(_WORD *)&_BYTE buf[12] = 2112;
          *(void *)&buf[14] = v18;
          *(_WORD *)&_BYTE buf[22] = 1024;
          LODWORD(v5_Block_object_dispose(va, 8) = v19 == (id)-1LL;
          _os_log_debug_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEBUG,  "(PurchaseHistory) Local: %@ < Server: %@ => Needs update: %{BOOL}d",  buf,  0x1Cu);
        }

        if (v19 == (id)-1LL) {
          goto LABEL_10;
        }
      }

      else
      {
      }

      uint64_t v29 = ASDLogHandleForCategory(8LL);
      id v30 = (os_log_s *)objc_claimAutoreleasedReturnValue(v29);
      if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
      {
        id v31 = a1[4];
        uint64_t v32 = v31[2];
        uint64_t v33 = v31[5];
        *(_DWORD *)__int128 buf = 138412546;
        *(void *)&uint8_t buf[4] = v32;
        *(_WORD *)&_BYTE buf[12] = 2114;
        *(void *)&buf[14] = v33;
        _os_log_impl( (void *)&_mh_execute_header,  v30,  OS_LOG_TYPE_DEFAULT,  "[%@] Setting last reload timestamp for accountID: %{public}@",  buf,  0x16u);
      }

      id v34 = (void *)*((void *)a1[4] + 5);
      __int128 v35 = a1[6];
      id v36 = v34;
      id v37 = v35;
      objc_opt_self(&OBJC_CLASS___PurchaseHistoryUpdateCommand);
      v51[0] = 0LL;
      v51[1] = v51;
      v51[2] = 0x2020000000LL;
      char v52 = 1;
      uint64_t v45 = 0LL;
      id v46 = &v45;
      uint64_t v47 = 0x3032000000LL;
      id v48 = sub_100204520;
      __int128 v49 = sub_100204530;
      id v50 = 0LL;
      *(void *)__int128 buf = _NSConcreteStackBlock;
      *(void *)&uint8_t buf[8] = 3221225472LL;
      *(void *)&uint8_t buf[16] = sub_100204758;
      uint64_t v58 = &unk_1003EC9E8;
      __int16 v60 = v51;
      id v38 = v36;
      id v59 = v38;
      uint64_t v61 = &v45;
      [v37 modifyUsingTransaction:buf];
      if (v46[5])
      {
        uint64_t v39 = ASDLogHandleForCategory(8LL);
        id v40 = (os_log_s *)objc_claimAutoreleasedReturnValue(v39);
        if (os_log_type_enabled(v40, OS_LOG_TYPE_ERROR))
        {
          uint64_t v43 = v46[5];
          *(_DWORD *)id v53 = 138543618;
          id v54 = v38;
          __int16 v55 = 2114;
          uint64_t v56 = v43;
          _os_log_error_impl( (void *)&_mh_execute_header,  v40,  OS_LOG_TYPE_ERROR,  "(PurchaseHistory) Failed to set last update timestamp for accountID: %{public}@ error: %{public}@",  v53,  0x16u);
        }
      }

      _Block_object_dispose(&v45, 8);
      _Block_object_dispose(v51, 8);

      __int128 v41 = sub_10018C584((uint64_t)&OBJC_CLASS___Promise, &__kCFBooleanTrue);
      uint64_t v28 = objc_claimAutoreleasedReturnValue(v41);
      goto LABEL_21;
    }

void sub_10020362C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

id sub_10020365C(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (a1)
  {
    id v7 = v5;
    id v8 = v6;
    id v9 = sub_1001B71B0((uint64_t)&OBJC_CLASS___SyncTaskScheduler);
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
    v22[0] = _NSConcreteStackBlock;
    v22[1] = 3221225472LL;
    void v22[2] = sub_1002057EC;
    v22[3] = &unk_1003ECAB0;
    void v22[4] = a1;
    id v11 = v7;
    id v23 = v11;
    id v12 = v8;
    id v24 = v12;
    id v13 = sub_10018C524((uint64_t)&OBJC_CLASS___Promise, v10, v22);
    id v14 = (Promise *)objc_claimAutoreleasedReturnValue(v13);

    v19[0] = _NSConcreteStackBlock;
    v19[1] = 3221225472LL;
    v19[2] = sub_100204BD4;
    v19[3] = &unk_1003ECA38;
    void v19[4] = a1;
    id v20 = v12;
    id v21 = v11;
    id v15 = sub_1001B71B0((uint64_t)&OBJC_CLASS___SyncTaskScheduler);
    id v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
    id v17 = sub_10018CBF4(v14, v19, v16);
    a1 = (void *)objc_claimAutoreleasedReturnValue(v17);
  }

  return a1;
}

id sub_1002037E4(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  objc_opt_self(a1);
  uint64_t v26 = 0LL;
  id v27 = &v26;
  uint64_t v28 = 0x3032000000LL;
  uint64_t v29 = sub_100204520;
  id v30 = sub_100204530;
  id v31 = 0LL;
  uint64_t v20 = 0LL;
  id v21 = &v20;
  uint64_t v22 = 0x3032000000LL;
  id v23 = sub_100204520;
  id v24 = sub_100204530;
  id v25 = 0LL;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472LL;
  void v16[2] = sub_10020480C;
  v16[3] = &unk_1003EB668;
  id v18 = &v20;
  id v9 = v7;
  id v17 = v9;
  id v19 = &v26;
  [v8 readUsingSession:v16];
  if (a4 && !v21[5]) {
    *a4 = (id) v27[5];
  }
  uint64_t v10 = ASDLogHandleForCategory(8LL);
  id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v12 = v21[5];
    uint64_t v13 = v27[5];
    *(_DWORD *)__int128 buf = 138543874;
    uint64_t v33 = v12;
    __int16 v34 = 2114;
    id v35 = v9;
    __int16 v36 = 2114;
    uint64_t v37 = v13;
    _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "(PurchaseHistory) Local revision is %{public}@ for accountID: %{public}@ error: %{public}@",  buf,  0x20u);
  }

  id v14 = (id)v21[5];
  _Block_object_dispose(&v20, 8);

  _Block_object_dispose(&v26, 8);
  return v14;
}

void sub_1002039D8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_100203A08(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  unsigned int v6 = [a2 BOOLValue];
  uint64_t v7 = ASDLogHandleForCategory(8LL);
  id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
  BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);
  if (v5 || !v6)
  {
    if (v9)
    {
      uint64_t v15 = *(void **)(a1 + 32);
      uint64_t v16 = v15[2];
      uint64_t v17 = v15[5];
      unint64_t v18 = v15[4] - 1LL;
      if (v18 > 6) {
        id v19 = @"default";
      }
      else {
        id v19 = off_1003ECAD0[v18];
      }
      int v23 = 138413058;
      uint64_t v24 = v16;
      __int16 v25 = 2114;
      uint64_t v26 = v17;
      __int16 v27 = 2114;
      uint64_t v28 = v19;
      __int16 v29 = 2114;
      id v30 = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "[%@] Failed purchase history reload for accountID: %{public}@ context: %{public}@ error: %{public}@",  (uint8_t *)&v23,  0x2Au);
    }

    uint64_t v20 = *(void *)(*(void *)(a1 + 32) + 72LL);
    uint64_t v21 = ASDErrorWithSafeUserInfo(v5);
    uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue(v21);
    (*(void (**)(uint64_t, void *))(v20 + 16))(v20, v22);
  }

  else
  {
    if (v9)
    {
      uint64_t v10 = *(void **)(a1 + 32);
      uint64_t v11 = v10[2];
      uint64_t v12 = v10[5];
      unint64_t v13 = v10[4] - 1LL;
      if (v13 > 6) {
        uint64_t v14 = @"default";
      }
      else {
        uint64_t v14 = off_1003ECAD0[v13];
      }
      int v23 = 138412802;
      uint64_t v24 = v11;
      __int16 v25 = 2114;
      uint64_t v26 = v12;
      __int16 v27 = 2114;
      uint64_t v28 = v14;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "[%@] Completed purchase history reload for accountID: %{public}@ context: %{public}@",  (uint8_t *)&v23,  0x20u);
    }

    (*(void (**)(void))(*(void *)(*(void *)(a1 + 32) + 72LL) + 16LL))();
  }
}

uint64_t sub_100203BE8(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (!a1)
  {
    uint64_t v31 = 0LL;
    goto LABEL_58;
  }

  if (!*(void *)(a1 + 16))
  {
    uint64_t v4 = sub_100202D04(a1);
    uint64_t v5 = objc_claimAutoreleasedReturnValue(v4);
    unsigned int v6 = *(void **)(a1 + 16);
    *(void *)(a1 + 16) = v5;
  }

  id v70 = 0LL;
  id v71 = 0LL;
  id v7 = *(id *)(a1 + 40);
  id v8 = v3;
  objc_opt_self(&OBJC_CLASS___PurchaseHistoryUpdateCommand);
  SEL v72 = 0LL;
  uint64_t v73 = (uint64_t)&v72;
  uint64_t v74 = 0x3032000000LL;
  id v75 = sub_100204520;
  uint64_t v76 = sub_100204530;
  __int128 v77 = 0LL;
  *(void *)__int128 buf = _NSConcreteStackBlock;
  *(void *)&uint8_t buf[8] = 3221225472LL;
  *(void *)&uint8_t buf[16] = sub_1002046A0;
  id v80 = (uint64_t (*)(uint64_t, uint64_t))&unk_1003EB640;
  *(void *)&v81[16] = &v71;
  id v9 = v7;
  *(void *)uint64_t v81 = v9;
  *(void *)&v81[8] = &v72;
  uint64_t v82 = &v70;
  [v8 readUsingSession:buf];
  if (*(void *)(v73 + 40))
  {
    uint64_t v10 = ASDLogHandleForCategory(8LL);
    uint64_t v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
    {
      uint64_t v58 = *(void *)(v73 + 40);
      *(_DWORD *)id v78 = 138543362;
      *(void *)&v78[4] = v58;
      _os_log_error_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_ERROR,  "(PurchaseHistory) Error getting last updated date: %{public}@",  v78,  0xCu);
    }
  }

  _Block_object_dispose(&v72, 8);
  if (v71)
  {
    [v71 timeIntervalSinceNow];
    double v13 = -v12;
    switch(*(void *)(a1 + 32))
    {
      case 0LL:
      case 1LL:
      case 2LL:
      case 3LL:
        goto LABEL_10;
      case 4LL:
      case 7LL:
        goto LABEL_11;
      case 5LL:
        if (!v70) {
          goto LABEL_11;
        }
        [v70 timeIntervalSinceNow];
        if (!v70) {
          goto LABEL_11;
        }
        double v35 = v34;
        objc_opt_self(&OBJC_CLASS___PurchaseHistoryUpdateCommand);
        id v36 = sub_100255630((uint64_t)&OBJC_CLASS___URLBag);
        uint64_t v37 = (void *)objc_claimAutoreleasedReturnValue(v36);
        double v38 = sub_100256030((uint64_t)v37, (uint64_t)@"purchase-daap/forced-refresh-frequency-minutes", 10080.0);

        uint64_t v39 = ASDLogHandleForCategory(8LL);
        id v40 = (os_log_s *)objc_claimAutoreleasedReturnValue(v39);
        if (os_log_type_enabled(v40, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)__int128 buf = 134217984;
          *(double *)&uint8_t buf[4] = v38;
          _os_log_impl( (void *)&_mh_execute_header,  v40,  OS_LOG_TYPE_INFO,  "(PurchaseHistory) Force refresh interval: %.0f",  buf,  0xCu);
        }

        if (v38 * 60.0 < -v35) {
          goto LABEL_11;
        }
        __int16 v27 = @"time since last update is less than forced refresh interval";
        goto LABEL_49;
      case 6LL:
        objc_opt_self(&OBJC_CLASS___PurchaseHistoryUpdateCommand);
        id v41 = sub_100255630((uint64_t)&OBJC_CLASS___URLBag);
        id v42 = (void *)objc_claimAutoreleasedReturnValue(v41);
        SEL v72 = 0LL;
        id v43 = sub_100256138( (uint64_t)v42,  (uint64_t)@"purchase-daap/purchase-refresh-enabled",  &__kCFBooleanTrue,  &v72);
        id v44 = (void *)objc_claimAutoreleasedReturnValue(v43);
        id v69 = v72;

        uint64_t v45 = ASDLogHandleForCategory(8LL);
        id v46 = (os_log_s *)objc_claimAutoreleasedReturnValue(v45);
        uint64_t v47 = v46;
        if (v44)
        {
          if (os_log_type_enabled(v46, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)__int128 buf = 138543362;
            *(void *)&uint8_t buf[4] = v44;
            _os_log_impl( (void *)&_mh_execute_header,  v47,  OS_LOG_TYPE_INFO,  "(PurchaseHistory) Purchase refresh enabled: %{public}@",  buf,  0xCu);
          }

          unsigned int v48 = [v44 BOOLValue];
          if (v48)
          {
            __int128 v49 = *(void **)(a1 + 48);
            if (v49)
            {
              id v50 = *(id *)(a1 + 40);
              id v51 = v49;
              id v52 = v8;
              objc_opt_self(&OBJC_CLASS___PurchaseHistoryUpdateCommand);
              *(void *)__int128 buf = 0LL;
              *(void *)&uint8_t buf[8] = buf;
              *(void *)&uint8_t buf[16] = 0x3032000000LL;
              id v80 = sub_100204520;
              *(void *)uint64_t v81 = sub_100204530;
              *(void *)&v81[8] = 0LL;
              id v53 = objc_alloc_init(&OBJC_CLASS___ASDPurchaseHistoryQuery);
              objc_msgSend(v53, "setAccountID:", objc_msgSend(v50, "longLongValue"));
              *(void *)id v78 = v51;
              id v54 = (void *)objc_claimAutoreleasedReturnValue( +[NSArray arrayWithObjects:count:]( &OBJC_CLASS___NSArray,  "arrayWithObjects:count:",  v78,  1LL));
              [v53 setStoreIDs:v54];

              [v53 setIsFirstParty:0];
              [v53 setIsHidden:0];
              [v53 setIsPreorder:0];
              SEL v72 = _NSConcreteStackBlock;
              uint64_t v73 = 3221225472LL;
              uint64_t v74 = (uint64_t)sub_100204660;
              id v75 = (uint64_t (*)(uint64_t, uint64_t))&unk_1003EC9C0;
              __int128 v77 = buf;
              __int16 v55 = (void (*)(uint64_t))v53;
              uint64_t v76 = v55;
              [v52 readUsingSession:&v72];
              uint64_t v56 = *(void **)(*(void *)&buf[8] + 40LL);
              char v57 = v56 ? [v56 isEqualToNumber:&off_10040C4F0] : 1;

              _Block_object_dispose(buf, 8);
              if ((v57 & 1) == 0)
              {
                __int16 v27 = @"history for account already contains expected item";
                goto LABEL_49;
              }
            }

            goto LABEL_11;
          }
        }

        else
        {
          if (os_log_type_enabled(v46, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)__int128 buf = 138543362;
            *(void *)&uint8_t buf[4] = v69;
            _os_log_error_impl( (void *)&_mh_execute_header,  v47,  OS_LOG_TYPE_ERROR,  "(PurchaseHistory) Failed to receive purchase refresh enabled error: %{public}@",  buf,  0xCu);
          }
        }

void sub_100204410( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
}

double sub_100204440(uint64_t a1)
{
  id v1 = sub_100255630((uint64_t)&OBJC_CLASS___URLBag);
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  double v3 = sub_100256030((uint64_t)v2, (uint64_t)@"purchase-daap/update-polling-frequency-secs", 3600.0);

  uint64_t v4 = ASDLogHandleForCategory(8LL);
  uint64_t v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    int v7 = 134217984;
    double v8 = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_INFO,  "(PurchaseHistory) Update polling frequency interval: %.0f",  (uint8_t *)&v7,  0xCu);
  }

  return v3;
}

uint64_t sub_100204520(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_100204530(uint64_t a1)
{
}

void sub_100204538(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc_init(&OBJC_CLASS___ASDPurchaseHistoryQuery);
  objc_msgSend(v4, "setAccountID:", objc_msgSend(*(id *)(a1[4] + 40), "longLongValue"));
  [v4 setIsFirstParty:0];
  [v4 setIsHidden:0];
  [v4 setIsPreorder:0];
  uint64_t v5 = *(void *)(a1[6] + 8LL);
  id obj = *(id *)(v5 + 40);
  id v6 = sub_1002ED354(v3, v4);
  uint64_t v7 = objc_claimAutoreleasedReturnValue(v6);
  objc_storeStrong((id *)(v5 + 40), obj);
  uint64_t v8 = *(void *)(a1[5] + 8LL);
  id v9 = *(void **)(v8 + 40);
  *(void *)(v8 + 40) = v7;

  uint64_t v10 = *(void *)(a1[6] + 8LL);
  id v15 = *(id *)(v10 + 40);
  id v11 = sub_1002EDA54((uint64_t)v3, *(void **)(a1[4] + 40LL));
  uint64_t v12 = objc_claimAutoreleasedReturnValue(v11);

  objc_storeStrong((id *)(v10 + 40), v15);
  uint64_t v13 = *(void *)(a1[7] + 8LL);
  uint64_t v14 = *(void **)(v13 + 40);
  *(void *)(v13 + 40) = v12;
}

void sub_100204660(uint64_t a1, id a2)
{
  id v3 = sub_1002ECBE0(a2, *(void **)(a1 + 32));
  uint64_t v4 = objc_claimAutoreleasedReturnValue(v3);
  uint64_t v5 = *(void *)(*(void *)(a1 + 40) + 8LL);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v4;
}

void sub_1002046A0(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8LL);
  id obj = *(id *)(v4 + 40);
  id v5 = a2;
  id v6 = sub_1002EE40C((uint64_t)v5, v3);
  uint64_t v7 = objc_claimAutoreleasedReturnValue(v6);
  objc_storeStrong((id *)(v4 + 40), obj);
  uint64_t v8 = *(void ***)(a1 + 48);
  id v9 = *v8;
  *uint64_t v8 = (void *)v7;

  uint64_t v10 = *(void *)(*(void *)(a1 + 40) + 8LL);
  id v15 = *(id *)(v10 + 40);
  id v11 = sub_1002EE218((uint64_t)v5, *(void **)(a1 + 32));
  uint64_t v12 = objc_claimAutoreleasedReturnValue(v11);

  objc_storeStrong((id *)(v10 + 40), v15);
  uint64_t v13 = *(void ***)(a1 + 56);
  uint64_t v14 = *v13;
  *uint64_t v13 = (void *)v12;
}

uint64_t sub_100204758(void *a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
  id v5 = (void *)a1[4];
  uint64_t v6 = *(void *)(a1[6] + 8LL);
  id obj = *(id *)(v6 + 40);
  unsigned __int8 v7 = sub_1001D899C(v3, v4, v5, &obj);

  objc_storeStrong((id *)(v6 + 40), obj);
  uint64_t v8 = *(void *)(a1[5] + 8LL);
  if (*(_BYTE *)(v8 + 24)) {
    unsigned __int8 v9 = v7;
  }
  else {
    unsigned __int8 v9 = 0;
  }
  *(_BYTE *)(v8 + 24) = v9;

  return *(unsigned __int8 *)(*(void *)(a1[5] + 8LL) + 24LL);
}

void sub_10020480C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a1 + 48) + 8LL);
  id obj = *(id *)(v3 + 40);
  id v4 = sub_1002EDA54(a2, *(void **)(a1 + 32));
  uint64_t v5 = objc_claimAutoreleasedReturnValue(v4);
  objc_storeStrong((id *)(v3 + 40), obj);
  uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 8LL);
  unsigned __int8 v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;
}

uint64_t sub_100204884(void *a1, void *a2)
{
  id v4 = a2;
  id Property = (id)a1[4];
  if (Property) {
    id Property = objc_getProperty(Property, v3, 104LL, 1);
  }
  id v6 = Property;
  unsigned __int8 v7 = [v6 BOOLValue];

  if ((v7 & 1) == 0)
  {
    unsigned __int8 v9 = *(void **)(a1[5] + 40LL);
    uint64_t v10 = *(void *)(a1[7] + 8LL);
    id obj = *(id *)(v10 + 40);
    char v11 = sub_1001D86AC(v4, v9, &obj);
    objc_storeStrong((id *)(v10 + 40), obj);
    uint64_t v12 = *(void *)(a1[6] + 8LL);
    if (*(_BYTE *)(v12 + 24)) {
      char v13 = v11;
    }
    else {
      char v13 = 0;
    }
    *(_BYTE *)(v12 + 24) = v13;
  }

  id v14 = (id)a1[4];
  if (v14) {
    id v14 = objc_getProperty(v14, v8, 112LL, 1);
  }
  id v15 = v14;
  uint64_t v16 = *(void **)(a1[5] + 40LL);
  uint64_t v17 = *(void *)(a1[7] + 8LL);
  id v23 = *(id *)(v17 + 40);
  unsigned __int8 v18 = sub_1001D8774(v4, v15, v16, &v23);
  objc_storeStrong((id *)(v17 + 40), v23);
  uint64_t v19 = *(void *)(a1[6] + 8LL);
  if (*(_BYTE *)(v19 + 24)) {
    unsigned __int8 v20 = v18;
  }
  else {
    unsigned __int8 v20 = 0;
  }
  *(_BYTE *)(v19 + 24) = v20;

  uint64_t v21 = *(unsigned __int8 *)(*(void *)(a1[6] + 8LL) + 24LL);
  return v21;
}

BOOL sub_1002049BC(void *a1, void *a2)
{
  id v4 = a2;
  id Property = (id)a1[4];
  if (Property) {
    id Property = objc_getProperty(Property, v3, 16LL, 1);
  }
  id v6 = Property;
  unsigned __int8 v7 = v6;
  if (v6) {
    uint64_t v8 = v6;
  }
  else {
    uint64_t v8 = &__NSArray0__struct;
  }
  unsigned __int8 v9 = *(void **)(a1[5] + 40LL);
  uint64_t v10 = *(void *)(a1[7] + 8LL);
  id obj = *(id *)(v10 + 40);
  char v11 = sub_1001D7C34(v4, v8, v9);
  objc_storeStrong((id *)(v10 + 40), obj);
  uint64_t v12 = *(void *)(a1[6] + 8LL);
  if (*(_BYTE *)(v12 + 24)) {
    char v13 = v11;
  }
  else {
    char v13 = 0;
  }
  *(_BYTE *)(v12 + 24) = v13;

  id v15 = (id)a1[4];
  if (v15) {
    id v15 = objc_getProperty(v15, v14, 24LL, 1);
  }
  id v16 = v15;
  uint64_t v17 = v16;
  if (v16) {
    unsigned __int8 v18 = v16;
  }
  else {
    unsigned __int8 v18 = &__NSArray0__struct;
  }
  uint64_t v19 = *(void **)(a1[5] + 40LL);
  uint64_t v20 = *(void *)(a1[7] + 8LL);
  id v39 = *(id *)(v20 + 40);
  char v21 = sub_1001D7A78((uint64_t)v4, v18, v19, &v39);
  objc_storeStrong((id *)(v20 + 40), v39);
  uint64_t v22 = *(void *)(a1[6] + 8LL);
  if (*(_BYTE *)(v22 + 24)) {
    char v23 = v21;
  }
  else {
    char v23 = 0;
  }
  *(_BYTE *)(v22 + 24) = v23;

  if (*(_BYTE *)(*(void *)(a1[6] + 8LL) + 24LL))
  {
    uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate now](&OBJC_CLASS___NSDate, "now"));
    unint64_t v25 = *(void **)(a1[5] + 40LL);
    uint64_t v26 = *(void *)(a1[7] + 8LL);
    id v38 = *(id *)(v26 + 40);
    unsigned __int8 v27 = sub_1001D899C(v4, v24, v25, &v38);
    objc_storeStrong((id *)(v26 + 40), v38);
    uint64_t v28 = *(void *)(a1[6] + 8LL);
    if (*(_BYTE *)(v28 + 24)) {
      unsigned __int8 v29 = v27;
    }
    else {
      unsigned __int8 v29 = 0;
    }
    *(_BYTE *)(v28 + 24) = v29;
    uint32_t v30 = *(void **)(a1[5] + 40LL);
    uint64_t v31 = *(void *)(a1[7] + 8LL);
    id v37 = *(id *)(v31 + 40);
    unsigned __int8 v32 = sub_1001D88FC(v4, v24, v30, &v37);
    objc_storeStrong((id *)(v31 + 40), v37);
    uint64_t v33 = *(void *)(a1[6] + 8LL);
    if (*(_BYTE *)(v33 + 24)) {
      unsigned __int8 v34 = v32;
    }
    else {
      unsigned __int8 v34 = 0;
    }
    *(_BYTE *)(v33 + 24) = v34;

    BOOL v35 = *(_BYTE *)(*(void *)(a1[6] + 8LL) + 24LL) != 0;
  }

  else
  {
    BOOL v35 = 0LL;
  }

  return v35;
}

id sub_100204BD4(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v2 = *(void **)(a1 + 40);
  uint64_t v92 = a1;
  id v93 = a2;
  id v97 = v2;
  uint64_t v95 = v3;
  if (!v3)
  {
    id v54 = 0LL;
    BOOL v55 = 0;
    goto LABEL_70;
  }

  uint64_t v122 = 0LL;
  uint64_t v123 = &v122;
  uint64_t v124 = 0x2020000000LL;
  char v125 = 1;
  uint64_t v116 = 0LL;
  id v117 = &v116;
  uint64_t v118 = 0x3032000000LL;
  uint64_t v119 = sub_100204520;
  id v120 = sub_100204530;
  id v121 = 0LL;
  id v4 = sub_1002B3910((id *)objc_alloc(&OBJC_CLASS___PurchaseHistoryItemsDAAPResponseDecoder), v93);
  sub_1002B39E4(v4);
  self = v4;
  if (v4) {
    id Property = objc_getProperty(v4, v5, 104LL, 1);
  }
  else {
    id Property = 0LL;
  }
  id v7 = Property;
  BOOL v8 = v7 == 0LL;

  if (v8)
  {
    uint64_t v41 = ASDLogHandleForCategory(8LL);
    id v42 = (os_log_s *)objc_claimAutoreleasedReturnValue(v41);
    if (!os_log_type_enabled(v42, OS_LOG_TYPE_ERROR))
    {
LABEL_55:
      id v54 = 0LL;
      BOOL v55 = 0;
      goto LABEL_69;
    }

    uint64_t v43 = *(void *)(v3 + 16);
    *(_DWORD *)__int128 v137 = 138412290;
    uint64_t v138 = v43;
    id v44 = "[%@] Error decoding response metadata, isUpdate not parsed";
LABEL_79:
    _os_log_error_impl((void *)&_mh_execute_header, v42, OS_LOG_TYPE_ERROR, v44, v137, 0xCu);
    goto LABEL_55;
  }

  id v10 = self;
  if (self) {
    id v10 = objc_getProperty(self, v9, 112LL, 1);
  }
  id v11 = v10;
  BOOL v12 = v11 == 0LL;

  if (v12)
  {
    uint64_t v53 = ASDLogHandleForCategory(8LL);
    id v42 = (os_log_s *)objc_claimAutoreleasedReturnValue(v53);
    if (!os_log_type_enabled(v42, OS_LOG_TYPE_ERROR)) {
      goto LABEL_55;
    }
    uint64_t v87 = *(void *)(v3 + 16);
    *(_DWORD *)__int128 v137 = 138412290;
    uint64_t v138 = v87;
    id v44 = "[%@] Error decoding response metadata, revision not parsed";
    goto LABEL_79;
  }

  v111[0] = _NSConcreteStackBlock;
  v111[1] = 3221225472LL;
  v111[2] = sub_100204884;
  v111[3] = &unk_1003ECA10;
  id v96 = self;
  uint64_t v112 = (os_log_s *)v96;
  uint64_t v113 = v3;
  uint64_t v114 = &v122;
  id v115 = &v116;
  [v97 modifyUsingTransaction:v111];
  char v13 = objc_opt_new(&OBJC_CLASS___NSMutableArray);
  id v14 = objc_opt_new(&OBJC_CLASS___NSMutableArray);
  do
  {
    id v15 = objc_autoreleasePoolPush();
    id v16 = sub_1002B3AB0((uint64_t)v96);
    uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
    uint64_t v19 = v17;
    if (v17) {
      id v20 = objc_getProperty(v17, v18, 16LL, 1);
    }
    else {
      id v20 = 0LL;
    }
    id v21 = v20;
    if ([v21 count])
    {
    }

    else
    {
      if (v19) {
        id v24 = objc_getProperty(v19, v22, 24LL, 1);
      }
      else {
        id v24 = 0LL;
      }
      id v25 = v24;
      BOOL v26 = [v25 count] == 0;

      if (v26)
      {
        int v40 = 1;
        goto LABEL_37;
      }
    }

    __int128 v109 = 0u;
    __int128 v110 = 0u;
    __int128 v107 = 0u;
    __int128 v108 = 0u;
    if (v19) {
      id v27 = objc_getProperty(v19, v23, 16LL, 1);
    }
    else {
      id v27 = 0LL;
    }
    id v28 = v27;
    id v29 = [v28 countByEnumeratingWithState:&v107 objects:v137 count:16];
    if (v29)
    {
      uint64_t v30 = *(void *)v108;
      do
      {
        for (uint64_t i = 0LL; i != v29; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v108 != v30) {
            objc_enumerationMutation(v28);
          }
          unsigned __int8 v32 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithLongLong:]( NSNumber,  "numberWithLongLong:",  objc_msgSend(*(id *)(*((void *)&v107 + 1) + 8 * (void)i), "storeItemID", v92)));
          -[NSMutableArray addObject:](v13, "addObject:", v32);
        }

        id v29 = [v28 countByEnumeratingWithState:&v107 objects:v137 count:16];
      }

      while (v29);
    }

    __int128 v105 = 0u;
    __int128 v106 = 0u;
    __int128 v103 = 0u;
    __int128 v104 = 0u;
    if (v19) {
      id v34 = objc_getProperty(v19, v33, 24LL, 1);
    }
    else {
      id v34 = 0LL;
    }
    id v35 = v34;
    id v36 = [v35 countByEnumeratingWithState:&v103 objects:v136 count:16];
    if (v36)
    {
      uint64_t v37 = *(void *)v104;
      do
      {
        for (uint64_t j = 0LL; j != v36; uint64_t j = (char *)j + 1)
        {
          if (*(void *)v104 != v37) {
            objc_enumerationMutation(v35);
          }
          -[NSMutableArray addObject:](v14, "addObject:", *(void *)(*((void *)&v103 + 1) + 8LL * (void)j), v92);
        }

        id v36 = [v35 countByEnumeratingWithState:&v103 objects:v136 count:16];
      }

      while (v36);
    }

    v98[0] = _NSConcreteStackBlock;
    v98[1] = 3221225472LL;
    v98[2] = sub_1002049BC;
    v98[3] = &unk_1003ECA10;
    id v101 = &v122;
    id v39 = v19;
    id v99 = v39;
    uint64_t v100 = v3;
    id v102 = &v116;
    [v97 modifyUsingTransaction:v98];
    if (v19) {
      int v40 = v39[8] & 1;
    }
    else {
      int v40 = 0;
    }

LABEL_37:
    objc_autoreleasePoolPop(v15);
  }

  while (!v40);
  if (!*((_BYTE *)v123 + 24)) {
    goto LABEL_66;
  }
  id v45 = -[NSMutableArray count](v13, "count");
  uint64_t v46 = (uint64_t)v45 + (void)-[NSMutableArray count](v14, "count");
  if (v46 < 1)
  {
    uint64_t v56 = ASDLogHandleForCategory(8LL);
    unsigned int v48 = (os_log_s *)objc_claimAutoreleasedReturnValue(v56);
    if (os_log_type_enabled(v48, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v58 = *(void *)(v3 + 16);
      if (self) {
        id v59 = objc_getProperty(v96, v57, 112LL, 1);
      }
      else {
        id v59 = 0LL;
      }
      id v60 = v59;
      *(_DWORD *)__int128 buf = 138543618;
      uint64_t v127 = v58;
      __int16 v128 = 2112;
      id v129 = v60;
      _os_log_impl( (void *)&_mh_execute_header,  v48,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] Purchase History updated from server (revision %@) with 0 changes",  buf,  0x16u);
    }
  }

  else
  {
    notify_post("com.apple.appstored.PurchaseHistoryDatabaseUpdated");
    if ((unint64_t)v46 > 0xA)
    {
      uint64_t v61 = ASDLogHandleForCategory(8LL);
      unsigned int v48 = (os_log_s *)objc_claimAutoreleasedReturnValue(v61);
      if (os_log_type_enabled(v48, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v63 = *(void *)(v3 + 16);
        if (self) {
          id v64 = objc_getProperty(v96, v62, 112LL, 1);
        }
        else {
          id v64 = 0LL;
        }
        id v65 = v64;
        *(_DWORD *)__int128 buf = 138543874;
        uint64_t v127 = v63;
        __int16 v128 = 2112;
        id v129 = v65;
        __int16 v130 = 2048;
        uint64_t v131 = v46;
        _os_log_impl( (void *)&_mh_execute_header,  v48,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] Purchase History updated from server (revision %@) with %ld changes",  buf,  0x20u);
      }
    }

    else
    {
      uint64_t v47 = ASDLogHandleForCategory(8LL);
      unsigned int v48 = (os_log_s *)objc_claimAutoreleasedReturnValue(v47);
      if (os_log_type_enabled(v48, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v50 = *(void *)(v3 + 16);
        if (self) {
          id v51 = objc_getProperty(v96, v49, 112LL, 1);
        }
        else {
          id v51 = 0LL;
        }
        id v52 = v51;
        *(_DWORD *)__int128 buf = 138544386;
        uint64_t v127 = v50;
        __int16 v128 = 2112;
        id v129 = v52;
        __int16 v130 = 2048;
        uint64_t v131 = v46;
        __int16 v132 = 2112;
        __int128 v133 = v13;
        __int16 v134 = 2112;
        __int128 v135 = v14;
        _os_log_impl( (void *)&_mh_execute_header,  v48,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] Purchase History updated from server (revision %@) with %ld changes: added {%@}; removed {%@}",
          buf,
          0x34u);
      }
    }
  }

  if (*((_BYTE *)v123 + 24))
  {
    id v54 = 0LL;
    BOOL v55 = 1;
  }

  else
  {
LABEL_66:
    id v54 = (id) v117[5];
    uint64_t v66 = ASDLogHandleForCategory(8LL);
    uint64_t v67 = (os_log_s *)objc_claimAutoreleasedReturnValue(v66);
    if (os_log_type_enabled(v67, OS_LOG_TYPE_ERROR))
    {
      uint64_t v88 = *(void *)(v95 + 16);
      if (self) {
        id v89 = objc_getProperty(v96, v68, 112LL, 1);
      }
      else {
        id v89 = 0LL;
      }
      id v90 = v89;
      uint64_t v91 = v117[5];
      *(_DWORD *)__int128 buf = 138543874;
      uint64_t v127 = v88;
      __int16 v128 = 2112;
      id v129 = v90;
      __int16 v130 = 2112;
      uint64_t v131 = v91;
      _os_log_error_impl( (void *)&_mh_execute_header,  v67,  OS_LOG_TYPE_ERROR,  "[%{public}@] Purchase History updated from server (revision %@) with error %@",  buf,  0x20u);
    }

    BOOL v55 = *((_BYTE *)v123 + 24) != 0;
  }

  id v42 = v112;
LABEL_69:

  _Block_object_dispose(&v116, 8);
  _Block_object_dispose(&v122, 8);
LABEL_70:

  id v69 = v54;
  uint64_t v70 = ASDLogHandleForCategory(8LL);
  id v71 = (os_log_s *)objc_claimAutoreleasedReturnValue(v70);
  SEL v72 = v71;
  if (v55)
  {
    if (os_log_type_enabled(v71, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v73 = *(void *)(v92 + 32);
      uint64_t v74 = *(void *)(v73 + 16);
      uint64_t v75 = *(void *)(v73 + 40);
      uint64_t v76 = *(void *)(v92 + 48);
      *(_DWORD *)__int128 v137 = 138412802;
      uint64_t v138 = v74;
      __int16 v139 = 2114;
      uint64_t v140 = v75;
      __int16 v141 = 2114;
      uint64_t v142 = v76;
      _os_log_impl( (void *)&_mh_execute_header,  v72,  OS_LOG_TYPE_DEFAULT,  "[%@] Updated DB for account: %{public}@ authenticated account: %{public}@",  v137,  0x20u);
    }

    __int128 v77 = sub_10018C584((uint64_t)&OBJC_CLASS___Promise, &__kCFBooleanTrue);
    id v78 = (void *)objc_claimAutoreleasedReturnValue(v77);
  }

  else
  {
    if (os_log_type_enabled(v71, OS_LOG_TYPE_ERROR))
    {
      uint64_t v83 = *(void *)(v92 + 32);
      uint64_t v84 = *(void *)(v83 + 16);
      uint64_t v85 = *(void *)(v83 + 40);
      uint64_t v86 = *(void *)(v92 + 48);
      *(_DWORD *)__int128 v137 = 138413058;
      uint64_t v138 = v84;
      __int16 v139 = 2114;
      uint64_t v140 = v85;
      __int16 v141 = 2114;
      uint64_t v142 = v86;
      __int16 v143 = 2114;
      id v144 = v69;
      _os_log_error_impl( (void *)&_mh_execute_header,  v72,  OS_LOG_TYPE_ERROR,  "[%@] Error updating DB for account: %{public}@ authenticated account: %{public}@ error: %{public}@",  v137,  0x2Au);
    }

    id v79 = sub_1001DD5A0(0LL, (uint64_t)v69);
    id v80 = (void *)objc_claimAutoreleasedReturnValue(v79);
    uint64_t v81 = sub_10018C620((uint64_t)&OBJC_CLASS___Promise, v80);
    id v78 = (void *)objc_claimAutoreleasedReturnValue(v81);
  }

  return v78;
}

void sub_1002055A8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, uint64_t a35, uint64_t a36, uint64_t a37, uint64_t a38, uint64_t a39, uint64_t a40, uint64_t a41, uint64_t a42, uint64_t a43, uint64_t a44, uint64_t a45, uint64_t a46, char a47, uint64_t a48, uint64_t a49, uint64_t a50,uint64_t a51,uint64_t a52,char a53)
{
}

id sub_100205628(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_1001F6C38((id *)objc_alloc(&OBJC_CLASS___PurchaseHistoryUpdateDAAPResponseDecoder), v3);

  sub_1001F6CAC((uint64_t)v4);
  if (v4) {
    id Property = objc_getProperty(v4, v5, 24LL, 1);
  }
  else {
    id Property = 0LL;
  }
  id v7 = Property;
  uint64_t v8 = ASDLogHandleForCategory(8LL);
  unsigned __int8 v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
  id v10 = v9;
  if (v7)
  {
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v11 = *(void *)(*(void *)(a1 + 32) + 16LL);
      int v19 = 138412546;
      uint64_t v20 = v11;
      __int16 v21 = 2112;
      id v22 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_DEFAULT,  "[%@] Decoded server revision: %@",  (uint8_t *)&v19,  0x16u);
    }

    BOOL v12 = sub_10018C584((uint64_t)&OBJC_CLASS___Promise, v7);
    char v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
  }

  else
  {
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      uint64_t v18 = *(void *)(*(void *)(a1 + 32) + 16LL);
      int v19 = 138412290;
      uint64_t v20 = v18;
      _os_log_error_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_ERROR,  "[%@] Decoding server revision failed",  (uint8_t *)&v19,  0xCu);
    }

    id v14 = sub_1001DD4C8(0LL, 0LL);
    id v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
    id v16 = sub_10018C620((uint64_t)&OBJC_CLASS___Promise, v15);
    char v13 = (void *)objc_claimAutoreleasedReturnValue(v16);
  }

  return v13;
}

void sub_1002057EC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v8 = *(void **)(a1 + 48);
  id v27 = *(id *)(a1 + 40);
  id v9 = v8;
  id v10 = v9;
  if (v7)
  {
    id v11 = v6;
    id v12 = v5;
    uint64_t v43 = 0LL;
    id v44 = &v43;
    uint64_t v45 = 0x3032000000LL;
    uint64_t v46 = sub_100204520;
    uint64_t v47 = sub_100204530;
    id v48 = 0LL;
    uint64_t v37 = 0LL;
    id v38 = &v37;
    uint64_t v39 = 0x3032000000LL;
    int v40 = sub_100204520;
    uint64_t v41 = sub_100204530;
    id v42 = 0LL;
    uint64_t v31 = 0LL;
    unsigned __int8 v32 = &v31;
    uint64_t v33 = 0x3032000000LL;
    id v34 = sub_100204520;
    id v35 = sub_100204530;
    id v36 = 0LL;
    *(void *)__int128 buf = _NSConcreteStackBlock;
    *(void *)&uint8_t buf[8] = 3221225472LL;
    *(void *)&uint8_t buf[16] = sub_100204538;
    uint64_t v50 = &unk_1003EC998;
    uint64_t v51 = v7;
    id v52 = &v37;
    uint64_t v53 = &v43;
    id v54 = &v31;
    [v9 readUsingSession:buf];
    char v13 = (void *)v38[5];
    id v14 = (void *)v32[5];
    id v15 = [*(id *)(v7 + 40) longLongValue];
    id v16 = sub_1001F4ADC((uint64_t)&OBJC_CLASS___AMSProcessInfo);
    uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
    uint64_t v18 = sub_1001D2F38( (uint64_t)&OBJC_CLASS___PurchaseHistoryItemsRequestContext,  v13,  v14,  (int64_t)v15,  v27,  v17,  *(void *)(v7 + 32));

    id v5 = v12;
    id v6 = v11;
    if (v18) {
      id v19 = 0LL;
    }
    else {
      id v19 = (id) v44[5];
    }
    _Block_object_dispose(&v31, 8);

    _Block_object_dispose(&v37, 8);
    _Block_object_dispose(&v43, 8);
  }

  else
  {
    id v19 = 0LL;
    uint64_t v18 = 0LL;
  }

  id v20 = v19;
  uint64_t v21 = ASDLogHandleForCategory(8LL);
  id v22 = (os_log_s *)objc_claimAutoreleasedReturnValue(v21);
  char v23 = v22;
  if (v18)
  {
    if (os_log_type_enabled(v22, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v26 = *(void *)(*(void *)(a1 + 32) + 16LL);
      *(_DWORD *)__int128 buf = 138412290;
      *(void *)&uint8_t buf[4] = v26;
      _os_log_debug_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEBUG,  "[%@] Server items request started",  buf,  0xCu);
    }

    id v24 = sub_1002857EC( (id *)objc_alloc(&OBJC_CLASS___PurchaseHistoryItemsRequest),  *(void **)(*(void *)(a1 + 32) + 8LL),  *(void **)(*(void *)(a1 + 32) + 64LL),  v18);
    v28[0] = _NSConcreteStackBlock;
    v28[1] = 3221225472LL;
    void v28[2] = sub_100205BC4;
    v28[3] = &unk_1003ECA88;
    v28[4] = *(void *)(a1 + 32);
    id v29 = v5;
    id v30 = v6;
    sub_1002858A0(v24, v28);
  }

  else
  {
    if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
    {
      uint64_t v25 = *(void *)(*(void *)(a1 + 32) + 16LL);
      *(_DWORD *)__int128 buf = 138412546;
      *(void *)&uint8_t buf[4] = v25;
      *(_WORD *)&_BYTE buf[12] = 2112;
      *(void *)&buf[14] = v20;
      _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_INFO,  "[%@] Server items request failed, no request context: %@",  buf,  0x16u);
    }

    (*((void (**)(id, id))v6 + 2))(v6, v20);
  }
}

void sub_100205B88( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, char a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, char a29)
{
}

void sub_100205BC4(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = v6;
  if (!v5 || v6)
  {
    if (!v6)
    {
      id v11 = sub_1001DD4C8(0LL, 0LL);
      uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(v11);
    }

    uint64_t v12 = ASDLogHandleForCategory(8LL);
    char v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
    {
      uint64_t v14 = *(void *)(a1[4] + 16LL);
      int v15 = 138412546;
      uint64_t v16 = v14;
      __int16 v17 = 2112;
      id v18 = v7;
      _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_INFO,  "[%@] Server items request failed (%@)",  (uint8_t *)&v15,  0x16u);
    }

    (*(void (**)(void))(a1[6] + 16LL))();
  }

  else
  {
    uint64_t v8 = ASDLogHandleForCategory(8LL);
    id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      uint64_t v10 = *(void *)(a1[4] + 16LL);
      int v15 = 138412546;
      uint64_t v16 = v10;
      __int16 v17 = 2048;
      id v18 = [v5 length];
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_INFO,  "[%@] Server items request completed (%{iec-bytes}lu)",  (uint8_t *)&v15,  0x16u);
    }

    (*(void (**)(void))(a1[5] + 16LL))();
  }
}

void sub_100205D54(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = a1[4];
  if (v7)
  {
    uint64_t v8 = (void *)a1[5];
    id v9 = (void *)a1[6];
    uint64_t v10 = *(void **)(v7 + 40);
    *(void *)__int128 buf = 0LL;
    id v11 = v8;
    id v12 = sub_1002037E4((uint64_t)&OBJC_CLASS___PurchaseHistoryUpdateCommand, v10, v9, buf);
    char v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
    id v14 = *(id *)buf;
    id v15 = [*(id *)(v7 + 40) longLongValue];
    id v16 = sub_1001F4ADC((uint64_t)&OBJC_CLASS___AMSProcessInfo);
    __int16 v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
    id v18 = sub_1002C91B4( (uint64_t)&OBJC_CLASS___PurchaseHistoryUpdateRequestContext,  v13,  (int64_t)v15,  v11,  v17,  *(void *)(v7 + 32));

    id v19 = 0LL;
    if (!v18) {
      id v19 = v14;
    }
  }

  else
  {
    id v19 = 0LL;
    id v18 = 0LL;
  }

  id v20 = v19;
  uint64_t v21 = ASDLogHandleForCategory(8LL);
  id v22 = (os_log_s *)objc_claimAutoreleasedReturnValue(v21);
  BOOL v23 = os_log_type_enabled(v22, OS_LOG_TYPE_DEBUG);
  if (v18)
  {
    if (v23)
    {
      uint64_t v25 = *(void *)(a1[4] + 16LL);
      *(_DWORD *)__int128 buf = 138412290;
      *(void *)&uint8_t buf[4] = v25;
      _os_log_debug_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEBUG,  "[%@] Server revision request started",  buf,  0xCu);
    }

    id v24 = sub_1001DC57C( (id *)objc_alloc(&OBJC_CLASS___PurchaseHistoryUpdateRequest),  *(void **)(a1[4] + 8LL),  *(void **)(a1[4] + 64LL),  v18);
    v27[0] = _NSConcreteStackBlock;
    v27[1] = 3221225472LL;
    void v27[2] = sub_100206008;
    v27[3] = &unk_1003ECA88;
    void v27[4] = a1[4];
    id v28 = v5;
    id v29 = v6;
    sub_1001DC630(v24, v27);
  }

  else
  {
    if (v23)
    {
      uint64_t v26 = *(void *)(a1[4] + 16LL);
      *(_DWORD *)__int128 buf = 138412546;
      *(void *)&uint8_t buf[4] = v26;
      __int16 v31 = 2112;
      id v32 = v20;
      _os_log_debug_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEBUG,  "[%@] Server revision request failed, no request context: %@",  buf,  0x16u);
    }

    (*((void (**)(id, id))v6 + 2))(v6, v20);
  }
}

void sub_100206008(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = v6;
  if (!v5 || v6)
  {
    if (!v6)
    {
      id v10 = sub_1001DD4C8(0LL, 0LL);
      uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(v10);
    }

    uint64_t v11 = ASDLogHandleForCategory(8LL);
    id v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v14 = *(void *)(a1[4] + 16LL);
      int v15 = 138412546;
      uint64_t v16 = v14;
      __int16 v17 = 2112;
      id v18 = v7;
      _os_log_debug_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEBUG,  "[%@] Server revision request failed (%@)",  (uint8_t *)&v15,  0x16u);
    }

    (*(void (**)(void))(a1[6] + 16LL))();
  }

  else
  {
    uint64_t v8 = ASDLogHandleForCategory(8LL);
    id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v13 = *(void *)(a1[4] + 16LL);
      int v15 = 138412546;
      uint64_t v16 = v13;
      __int16 v17 = 2048;
      id v18 = [v5 length];
      _os_log_debug_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEBUG,  "[%@] Server revision request completed (%{iec-bytes}lu)",  (uint8_t *)&v15,  0x16u);
    }

    (*(void (**)(void))(a1[5] + 16LL))();
  }
}

id *sub_100206218(id *a1, void *a2, void *a3)
{
  id v6 = a2;
  id v7 = a3;
  if (a1)
  {
    v10.receiver = a1;
    v10.super_class = (Class)&OBJC_CLASS___RepairApplicationTask;
    uint64_t v8 = (id *)objc_msgSendSuper2(&v10, "init");
    a1 = v8;
    if (v8)
    {
      objc_storeStrong(v8 + 6, a2);
      objc_storeStrong(a1 + 7, a3);
    }
  }

  return a1;
}

id sub_1002069A0(uint64_t a1)
{
  return [*(id *)(a1 + 32) repair:*(void *)(*(void *)(a1 + 32) + 40) needsToReleaseBlockingCallerWithReason:0];
}

void sub_100206A6C(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = ASDLogHandleForCategory(28LL);
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  id v6 = v5;
  if (v3)
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      id v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 40) logKey]);
      int v8 = 138412546;
      id v9 = v7;
      __int16 v10 = 2114;
      id v11 = v3;
      _os_log_error_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_ERROR,  "[%@] Unable to relaunch due to error: %{public}@",  (uint8_t *)&v8,  0x16u);
LABEL_6:
    }
  }

  else if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    id v7 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 40) logKey]);
    int v8 = 138412290;
    id v9 = v7;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "[%@] Relaunched application after repair completed",  (uint8_t *)&v8,  0xCu);
    goto LABEL_6;
  }
}

id sub_100206CB0(void *a1)
{
  if (a1)
  {
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([a1 firstObject]);
    if (v2) {
      [a1 removeObjectAtIndex:0];
    }
  }

  else
  {
    uint64_t v2 = 0LL;
  }

  return v2;
}

id sub_100206CF8(void *a1)
{
  if (a1)
  {
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([a1 lastObject]);
    [a1 removeLastObject];
  }

  else
  {
    uint64_t v2 = 0LL;
  }

  return v2;
}

id sub_100206D38(void *a1, uint64_t a2)
{
  if (a1)
  {
    uint64_t v4 = (char *)[a1 count];
    id v5 = &v4[-a2];
    id v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "subarrayWithRange:", &v4[-a2], a2));
    objc_msgSend(a1, "removeObjectsInRange:", v5, a2);
  }

  else
  {
    id v6 = 0LL;
  }

  return v6;
}

id sub_100206DA0(id a1, uint64_t a2)
{
  if (a1)
  {
    id v2 = a1;
    uint64_t v3 = objc_opt_class(&OBJC_CLASS___NSDictionary, a2);
    if ((objc_opt_isKindOfClass(v2, v3) & 1) != 0) {
      uint64_t v4 = v2;
    }
    else {
      uint64_t v4 = 0LL;
    }
    a1 = v4;
  }

  return a1;
}

void sub_100206E90(double *a1, double a2)
{
  if (a1)
  {
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:"));
    [a1 setProperty:v4 forBodyKey:@"averageTimeBetweenPolls"];

    a1[1] = a2;
  }

void sub_100206EF4(id *a1, void *a2)
{
  id v4 = a2;
  if (a1)
  {
    id v7 = v4;
    [v4 timeIntervalSince1970];
    id v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", (uint64_t)(v5 * 1000.0)));
    [a1 setProperty:v6 forBodyKey:@"lastPollDate"];

    objc_storeStrong(a1 + 2, a2);
    id v4 = v7;
  }
}

void sub_100206F8C(double *a1, double a2)
{
  if (a1)
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:"));
    [a1 setProperty:v4 forBodyKey:@"meanTimeToDiscovery"];

    a1[3] = a2;
  }

void sub_100206FF0(double *a1, double a2)
{
  if (a1)
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:"));
    [a1 setProperty:v4 forBodyKey:@"meanTimeToDownload"];

    a1[4] = a2;
  }

void sub_100207054(double *a1, double a2)
{
  if (a1)
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:"));
    [a1 setProperty:v4 forBodyKey:@"meanTimeToInstall"];

    a1[5] = a2;
  }

void sub_1002070B8(double *a1, double a2)
{
  if (a1)
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](&OBJC_CLASS___NSNumber, "numberWithDouble:"));
    [a1 setProperty:v4 forBodyKey:@"meanTimeToTransaction"];

    a1[6] = a2;
  }

void sub_10020719C(id a1)
{
  id v7 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  -[NSMutableDictionary setObject:forKeyedSubscript:]( v7,  "setObject:forKeyedSubscript:",  &off_10040C508,  @"clientId");
  if (sub_1002FA5A8((uint64_t)&OBJC_CLASS___AppDefaultsManager)) {
    -[NSMutableDictionary setObject:forKeyedSubscript:]( v7,  "setObject:forKeyedSubscript:",  &__kCFBooleanTrue,  @"automationRunning");
  }
  id v1 = (void *)objc_claimAutoreleasedReturnValue(+[AMSDevice productType](&OBJC_CLASS___AMSDevice, "productType"));
  if ([v1 length]) {
    -[NSMutableDictionary setObject:forKeyedSubscript:](v7, "setObject:forKeyedSubscript:", v1, @"deviceModel");
  }
  id v2 = (void *)MGCopyAnswer(@"BuildVersion", 0LL);
  if ([v2 length]) {
    -[NSMutableDictionary setObject:forKeyedSubscript:](v7, "setObject:forKeyedSubscript:", v2, @"buildNumber");
  }
  if (os_variant_has_internal_content("com.apple.appstored"))
  {
    -[NSMutableDictionary setObject:forKeyedSubscript:]( v7,  "setObject:forKeyedSubscript:",  &off_10040C520,  @"updatesVersion");
    uint64_t v3 = v7;
    id v4 = @"internal";
  }

  else
  {
    id v4 = @"gold";
    uint64_t v3 = v7;
  }

  -[NSMutableDictionary setObject:forKeyedSubscript:](v3, "setObject:forKeyedSubscript:", v4, @"buildType");
  id v5 = -[NSMutableDictionary copy](v7, "copy");
  id v6 = (void *)qword_100462310;
  qword_100462310 = (uint64_t)v5;
}

id sub_1002072F0(uint64_t a1)
{
  if (qword_100462318 != -1) {
    dispatch_once(&qword_100462318, &stru_1003ECB50);
  }
  return (id)qword_100462320;
}

void sub_100207334(id a1)
{
  id v1 = objc_alloc_init(&OBJC_CLASS___ArtworkLoader);
  id v2 = (void *)qword_100462320;
  qword_100462320 = (uint64_t)v1;
}

void sub_10020735C(void *a1, void *a2, int a3, void *a4)
{
  id v36 = a2;
  id v7 = a4;
  if (a1)
  {
    if (v36)
    {
      if ([v36 isFileURL])
      {
        (*((void (**)(id, id, void, void))v7 + 2))(v7, v36, 0LL, 0LL);
      }

      else
      {
        id v10 = v36;
        uint64_t v37 = _NSConcreteStackBlock;
        uint64_t v38 = 3221225472LL;
        uint64_t v39 = sub_10020789C;
        int v40 = &unk_1003ECB78;
        id v11 = v7;
        id v41 = v11;
        id v12 = objc_retainBlock(&v37);
        uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue( +[NSMutableURLRequest requestWithURL:]( &OBJC_CLASS___NSMutableURLRequest,  "requestWithURL:",  v10,  v36,  v37,  v38,  v39,  v40));
        [v13 setCachePolicy:0];
        [v13 setTimeoutInterval:30.0];
        [v13 setHTTPShouldHandleCookies:0];
        id v14 = sub_10024E664((uint64_t)&OBJC_CLASS___AMSUserAgent);
        int v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
        [v13 setHTTPUserAgent:v15];

        uint64_t v16 = a1;
        objc_sync_enter(v16);
        uint64_t v17 = 2LL;
        if (a3) {
          uint64_t v17 = 1LL;
        }
        id v18 = (id *)&v16[v17];
        id v19 = v16[v17];
        if (v19)
        {
          id v20 = v19;
          uint64_t v21 = ASDLogHandleForCategory(14LL);
          id v22 = (os_log_s *)objc_claimAutoreleasedReturnValue(v21);
          if (os_log_type_enabled(v22, OS_LOG_TYPE_DEBUG))
          {
            *(_DWORD *)__int128 buf = 67109120;
            *(_DWORD *)&uint8_t buf[4] = a3;
            _os_log_debug_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEBUG,  "[ArtworkLoader] Cache hit, existing session (ATS = %{BOOL}d)",  buf,  8u);
          }
        }

        else
        {
          uint64_t v23 = ASDLogHandleForCategory(14LL);
          id v24 = (os_log_s *)objc_claimAutoreleasedReturnValue(v23);
          if (os_log_type_enabled(v24, OS_LOG_TYPE_DEBUG))
          {
            *(_DWORD *)__int128 buf = 67109120;
            *(_DWORD *)&uint8_t buf[4] = a3;
            _os_log_debug_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEBUG,  "[ArtworkLoader] Cache miss, creating session (ATS = %{BOOL}d)",  buf,  8u);
          }

          id v22 = (os_log_s *)objc_claimAutoreleasedReturnValue( +[NSURLSessionConfiguration ephemeralSessionConfiguration]( &OBJC_CLASS___NSURLSessionConfiguration,  "ephemeralSessionConfiguration"));
          if (a3)
          {
            uint64_t v47 = @"NSAllowsArbitraryLoads";
            id v48 = &__kCFBooleanFalse;
            uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v48,  &v47,  1LL));
            uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue( +[NSPropertyListSerialization dataWithPropertyList:format:options:error:]( &OBJC_CLASS___NSPropertyListSerialization,  "dataWithPropertyList:format:options:error:",  v25,  200LL,  0LL,  0LL));

            if (v26) {
              -[os_log_s set_atsContext:](v22, "set_atsContext:", v26);
            }
          }

          id v20 = (dispatch_object_s *)objc_claimAutoreleasedReturnValue( +[NSURLSession sessionWithConfiguration:delegate:delegateQueue:]( &OBJC_CLASS___NSURLSession,  "sessionWithConfiguration:delegate:delegateQueue:",  v22,  v16,  0LL));
          objc_storeStrong(v18, v20);
        }

        id v27 = (void *)objc_claimAutoreleasedReturnValue( -[dispatch_object_s downloadTaskWithRequest:completionHandler:]( v20,  "downloadTaskWithRequest:completionHandler:",  v13,  v12));
        [v27 resume];

        id v28 = (dispatch_source_s *)v16[3];
        if (v28) {
          dispatch_source_cancel(v28);
        }
        dispatch_queue_global_t global_queue = dispatch_get_global_queue(21LL, 0LL);
        id v30 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
        dispatch_source_t v31 = dispatch_source_create((dispatch_source_type_t)&_dispatch_source_type_timer, 0LL, 0LL, v30);
        dispatch_object_t v32 = v16[3];
        v16[3] = v31;

        uint64_t v33 = (dispatch_source_s *)v16[3];
        dispatch_time_t v34 = dispatch_time(0LL, 60000000000LL);
        dispatch_source_set_timer(v33, v34, 0xFFFFFFFFFFFFFFFFLL, 0LL);
        id v35 = (dispatch_source_s *)v16[3];
        *(void *)__int128 buf = _NSConcreteStackBlock;
        uint64_t v43 = 3221225472LL;
        id v44 = sub_1002079A4;
        uint64_t v45 = &unk_1003E9880;
        uint64_t v46 = v16;
        dispatch_source_set_event_handler(v35, buf);
        dispatch_resume(v16[3]);

        objc_sync_exit(v16);
      }
    }

    else
    {
      uint64_t v8 = ASDErrorWithUserInfoAndFormat(850LL, 0LL, @"Loading artwork failed, URL was nil");
      id v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
      (*((void (**)(id, void, void, void *))v7 + 2))(v7, 0LL, 0LL, v9);
    }
  }
}

void sub_1002077CC(_Unwind_Exception *a1)
{
}

void sub_100207888(_Unwind_Exception *a1)
{
}

void sub_10020789C(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v15 = a2;
  id v7 = a3;
  id v8 = a4;
  if ((unint64_t)(sub_1001FF33C((uint64_t)v7, v9) - 200) > 0x63)
  {
    if (!v8)
    {
      uint64_t v14 = ASDErrorWithUserInfoAndFormat(642LL, 0LL, @"Artwork download failed to complete (status = %ld)");
      id v8 = (id)objc_claimAutoreleasedReturnValue(v14);
    }

    (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))(*(void *)(a1 + 32));
  }

  else
  {
    id v11 = sub_1001FF2E4(v7, v10);
    id v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
    if (v12) {
      uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(+[UTType typeWithMIMEType:](&OBJC_CLASS___UTType, "typeWithMIMEType:", v12));
    }
    else {
      uint64_t v13 = 0LL;
    }
    (*(void (**)(void))(*(void *)(a1 + 32) + 16LL))();
  }
}

void sub_1002079A4(uint64_t a1)
{
  id v2 = *(id *)(a1 + 32);
  objc_sync_enter(v2);
  uint64_t v3 = ASDLogHandleForCategory(14LL);
  id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)uint64_t v9 = 0;
    _os_log_debug_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEBUG,  "[ArtworkLoader] Invalidating session cache",  v9,  2u);
  }

  [*(id *)(*(void *)(a1 + 32) + 8) finishTasksAndInvalidate];
  uint64_t v5 = *(void *)(a1 + 32);
  id v6 = *(void **)(v5 + 8);
  *(void *)(v5 + _Block_object_dispose(va, 8) = 0LL;

  [*(id *)(*(void *)(a1 + 32) + 16) finishTasksAndInvalidate];
  uint64_t v7 = *(void *)(a1 + 32);
  id v8 = *(void **)(v7 + 16);
  *(void *)(v7 + 16) = 0LL;

  objc_sync_exit(v2);
}

void sub_100207A70(_Unwind_Exception *a1)
{
}

id sub_100207C34(id a1)
{
  id v1 = a1;
  if (a1)
  {
    id v2 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([v1 clientID]);
    unsigned __int8 v4 = [v3 isEqualToString:@"asclient"];

    if ((v4 & 1) == 0)
    {
      uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:value:comparisonType:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:value:comparisonType:",  @"IFNULL(app_install.priority, 0)",  &off_10040C538,  6LL));
      -[NSMutableArray addObject:](v2, "addObject:", v5);
    }

    id v6 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteContainsPredicate doesNotContainPredicateWithProperty:values:]( &OBJC_CLASS___SQLiteContainsPredicate,  "doesNotContainPredicateWithProperty:values:",  @"IFNULL(app_install.phase, 10)",  &off_10040DD80));
    -[NSMutableArray addObject:](v2, "addObject:", v6);

    id v1 = (id)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v2));
  }

  return v1;
}

void sub_100207D20(uint64_t a1, void *a2)
{
  id v3 = a2;
  unsigned __int8 v4 = v3;
  if (a1)
  {
    uint64_t v5 = *(dispatch_queue_s **)(a1 + 72);
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472LL;
    _OWORD v6[2] = sub_100207DB4;
    v6[3] = &unk_1003E9DC0;
    void v6[4] = a1;
    id v7 = v3;
    dispatch_async(v5, v6);
  }
}

void sub_100207DB4(uint64_t a1)
{
}

void sub_100207DC0(uint64_t a1, void *a2)
{
  id v3 = a2;
  unsigned __int8 v4 = v3;
  if (a1 && [v3 count])
  {
    uint64_t v5 = *(void **)(a1 + 88);
    if (v5)
    {
      [v5 addObjectsFromArray:v4];
    }

    else
    {
      id v6 = objc_opt_new(&OBJC_CLASS___NSMutableOrderedSet);
      id v7 = *(void **)(a1 + 88);
      *(void *)(a1 + 8_Block_object_dispose(va, 8) = v6;

      id v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 64) remoteObjectProxy]);
      [v8 didChangeJobs:v4];

      objc_initWeak(&location, (id)a1);
      uint64_t v9 = *(void **)(a1 + 64);
      v10[0] = _NSConcreteStackBlock;
      v10[1] = 3221225472LL;
      void v10[2] = sub_100208854;
      v10[3] = &unk_1003ECBA0;
      objc_copyWeak(&v11, &location);
      [v9 addBarrierBlock:v10];
      objc_destroyWeak(&v11);
      objc_destroyWeak(&location);
    }
  }
}

void sub_100207ED8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_100207EF4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (a1)
  {
    id v7 = *(dispatch_queue_s **)(a1 + 72);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_100207FA8;
    block[3] = &unk_1003E97D0;
    void block[4] = a1;
    id v9 = v5;
    id v10 = v6;
    dispatch_async(v7, block);
  }
}

void sub_100207FA8(uint64_t a1)
{
  if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_INFO))
  {
    id v3 = (void *)objc_opt_class(*(void *)(a1 + 32), v2);
    unsigned __int8 v4 = *(void **)(a1 + 32);
    id v5 = v3;
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v4 clientID]);
    id v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "componentsJoinedByString:", @", "));
    uint64_t v8 = *(void *)(a1 + 48);
    int v9 = 138413058;
    id v10 = v3;
    __int16 v11 = 2112;
    id v12 = v6;
    __int16 v13 = 2112;
    uint64_t v14 = v7;
    __int16 v15 = 2112;
    uint64_t v16 = v8;
    _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_INFO,  "[%@]: sendJobsCompleted to client: %@ for jobs: [%@] with finalPhases: %@ ",  (uint8_t *)&v9,  0x2Au);
  }

  sub_1002080CC(*(void *)(a1 + 32), *(void **)(a1 + 40), *(void **)(a1 + 48));
}

void sub_1002080CC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (a1 && [v5 count])
  {
    id v7 = *(void **)(a1 + 96);
    if (v7)
    {
      [v7 addObjectsFromArray:v5];
      [*(id *)(a1 + 104) addEntriesFromDictionary:v6];
    }

    else
    {
      uint64_t v8 = objc_opt_new(&OBJC_CLASS___NSMutableOrderedSet);
      int v9 = *(void **)(a1 + 96);
      *(void *)(a1 + 96) = v8;

      id v10 = objc_opt_new(&OBJC_CLASS___NSMutableDictionary);
      __int16 v11 = *(void **)(a1 + 104);
      *(void *)(a1 + 104) = v10;

      id v12 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 64) remoteObjectProxy]);
      [v12 didCompleteJobs:v5 finalPhases:v6];

      objc_initWeak(&location, (id)a1);
      __int16 v13 = *(void **)(a1 + 64);
      v14[0] = _NSConcreteStackBlock;
      v14[1] = 3221225472LL;
      void v14[2] = sub_1002088C4;
      void v14[3] = &unk_1003ECBA0;
      objc_copyWeak(&v15, &location);
      [v13 addBarrierBlock:v14];
      objc_destroyWeak(&v15);
      objc_destroyWeak(&location);
    }
  }
}

void sub_100208230( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_10020824C(uint64_t a1, void *a2)
{
  id v3 = a2;
  unsigned __int8 v4 = v3;
  if (a1)
  {
    id v5 = *(dispatch_queue_s **)(a1 + 72);
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472LL;
    _OWORD v6[2] = sub_1002082E0;
    v6[3] = &unk_1003E9DC0;
    void v6[4] = a1;
    id v7 = v3;
    dispatch_async(v5, v6);
  }
}

void sub_1002082E0(uint64_t a1)
{
}

void sub_1002082EC(uint64_t a1, void *a2)
{
  id v3 = a2;
  unsigned __int8 v4 = v3;
  if (a1 && [v3 count])
  {
    id v5 = *(void **)(a1 + 120);
    if (v5)
    {
      [v5 addEntriesFromDictionary:v4];
    }

    else
    {
      id v6 = objc_opt_new(&OBJC_CLASS___NSMutableDictionary);
      id v7 = *(void **)(a1 + 120);
      *(void *)(a1 + 120) = v6;

      uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 64) remoteObjectProxy]);
      [v8 didUpdateStates:v4];

      objc_initWeak(&location, (id)a1);
      int v9 = *(void **)(a1 + 64);
      v10[0] = _NSConcreteStackBlock;
      v10[1] = 3221225472LL;
      void v10[2] = sub_100208934;
      v10[3] = &unk_1003ECBA0;
      objc_copyWeak(&v11, &location);
      [v9 addBarrierBlock:v10];
      objc_destroyWeak(&v11);
      objc_destroyWeak(&location);
    }
  }
}

void sub_100208404( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_100208420(uint64_t a1, void *a2)
{
  id v3 = a2;
  unsigned __int8 v4 = v3;
  if (a1)
  {
    id v5 = *(dispatch_queue_s **)(a1 + 72);
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472LL;
    _OWORD v6[2] = sub_1002084B4;
    v6[3] = &unk_1003E9DC0;
    void v6[4] = a1;
    id v7 = v3;
    dispatch_async(v5, v6);
  }
}

void sub_1002084B4(uint64_t a1)
{
}

void sub_1002084C0(uint64_t a1, void *a2)
{
  id v3 = a2;
  unsigned __int8 v4 = v3;
  if (a1 && [v3 count])
  {
    id v5 = *(void **)(a1 + 112);
    if (v5)
    {
      [v5 addEntriesFromDictionary:v4];
    }

    else
    {
      id v6 = objc_opt_new(&OBJC_CLASS___NSMutableDictionary);
      id v7 = *(void **)(a1 + 112);
      *(void *)(a1 + 112) = v6;

      uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 64) remoteObjectProxy]);
      [v8 didUpdateProgress:v4];

      objc_initWeak(&location, (id)a1);
      int v9 = *(void **)(a1 + 64);
      v10[0] = _NSConcreteStackBlock;
      v10[1] = 3221225472LL;
      void v10[2] = sub_1002089A4;
      v10[3] = &unk_1003ECBA0;
      objc_copyWeak(&v11, &location);
      [v9 addBarrierBlock:v10];
      objc_destroyWeak(&v11);
      objc_destroyWeak(&location);
    }
  }
}

void sub_1002085D8( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_1002085F4(uint64_t a1, void *a2)
{
  if (a1)
  {
    id v3 = a2;
    uint64_t v4 = objc_claimAutoreleasedReturnValue([v3 persistenceIdentifier]);
    id v5 = *(void **)(a1 + 80);
    *(void *)(a1 + 80) = v4;

    *(_BYTE *)(a1 + 12_Block_object_dispose(va, 8) = [v3 shouldFilterExternalOriginatedDownloads];
    unsigned __int8 v6 = [v3 shouldReportDownloadProgress];

    *(_BYTE *)(a1 + 129) = v6;
  }

void sub_100208670(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 88) array]);
  id v5 = [v2 copy];

  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void **)(v3 + 88);
  *(void *)(v3 + 8_Block_object_dispose(va, 8) = 0LL;

  sub_100207DC0(*(void *)(a1 + 32), v5);
}

void sub_1002086E8(uint64_t a1)
{
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*(void *)(a1 + 32) + 96) array]);
  id v8 = [v2 copy];

  id v3 = [*(id *)(*(void *)(a1 + 32) + 104) copy];
  uint64_t v4 = *(void *)(a1 + 32);
  id v5 = *(void **)(v4 + 96);
  *(void *)(v4 + 96) = 0LL;

  uint64_t v6 = *(void *)(a1 + 32);
  id v7 = *(void **)(v6 + 104);
  *(void *)(v6 + 104) = 0LL;

  sub_1002080CC(*(void *)(a1 + 32), v8, v3);
}

void sub_100208794(uint64_t a1)
{
  id v4 = [*(id *)(*(void *)(a1 + 32) + 112) copy];
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void **)(v2 + 112);
  *(void *)(v2 + 112) = 0LL;

  sub_1002084C0(*(void *)(a1 + 32), v4);
}

void sub_1002087F4(uint64_t a1)
{
  id v4 = [*(id *)(*(void *)(a1 + 32) + 120) copy];
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void **)(v2 + 120);
  *(void *)(v2 + 120) = 0LL;

  sub_1002082EC(*(void *)(a1 + 32), v4);
}

void sub_100208854(uint64_t a1)
{
  id WeakRetained = (dispatch_queue_s **)objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = WeakRetained;
  if (WeakRetained)
  {
    id v3 = WeakRetained[9];
    block[1] = 3221225472LL;
    block[2] = sub_100208670;
    block[3] = &unk_1003E9880;
    void block[4] = v2;
    id v4 = v2;
    block[0] = _NSConcreteStackBlock;
    dispatch_async(v3, block);
    uint64_t v2 = v4;
  }
}

void sub_1002088C4(uint64_t a1)
{
  id WeakRetained = (dispatch_queue_s **)objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = WeakRetained;
  if (WeakRetained)
  {
    id v3 = WeakRetained[9];
    block[1] = 3221225472LL;
    block[2] = sub_1002086E8;
    block[3] = &unk_1003E9880;
    void block[4] = v2;
    id v4 = v2;
    block[0] = _NSConcreteStackBlock;
    dispatch_async(v3, block);
    uint64_t v2 = v4;
  }
}

void sub_100208934(uint64_t a1)
{
  id WeakRetained = (dispatch_queue_s **)objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = WeakRetained;
  if (WeakRetained)
  {
    id v3 = WeakRetained[9];
    block[1] = 3221225472LL;
    block[2] = sub_1002087F4;
    block[3] = &unk_1003E9880;
    void block[4] = v2;
    id v4 = v2;
    block[0] = _NSConcreteStackBlock;
    dispatch_async(v3, block);
    uint64_t v2 = v4;
  }
}

void sub_1002089A4(uint64_t a1)
{
  id WeakRetained = (dispatch_queue_s **)objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = WeakRetained;
  if (WeakRetained)
  {
    id v3 = WeakRetained[9];
    block[1] = 3221225472LL;
    block[2] = sub_100208794;
    block[3] = &unk_1003E9880;
    void block[4] = v2;
    id v4 = v2;
    block[0] = _NSConcreteStackBlock;
    dispatch_async(v3, block);
    uint64_t v2 = v4;
  }
}

void *sub_100208ABC(void *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    v12.receiver = a1;
    v12.super_class = (Class)&OBJC_CLASS___StoreItemSubGenre;
    a1 = objc_msgSendSuper2(&v12, "init");
    if (a1)
    {
      id v4 = v3;
      id v5 = sub_1001DF594(v4, @"genre");
      uint64_t v6 = objc_claimAutoreleasedReturnValue(v5);
      id v7 = (void *)a1[1];
      a1[1] = v6;

      id v8 = sub_1001DEDF8(v4, @"genreId");
      uint64_t v9 = objc_claimAutoreleasedReturnValue(v8);

      id v10 = (void *)a1[2];
      a1[2] = v9;
    }
  }

  return a1;
}

id *sub_100208DA8(id *a1, void *a2)
{
  id v4 = a2;
  if (a1)
  {
    v7.receiver = a1;
    v7.super_class = (Class)&OBJC_CLASS___UPPManifest;
    id v5 = (id *)objc_msgSendSuper2(&v7, "init");
    a1 = v5;
    if (v5) {
      objc_storeStrong(v5 + 1, a2);
    }
  }

  return a1;
}

id sub_100208E1C(uint64_t a1)
{
  if (a1)
  {
    id v1 = sub_1001DEC94(*(id *)(a1 + 8), @"items");
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
    id v3 = sub_1002D64A4(v2);
    id v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
    id v5 = sub_10031D77C(v4, &stru_1003ECBC0);
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  }

  else
  {
    uint64_t v6 = 0LL;
  }

  return v6;
}

id sub_100208E8C(id a1, NSDictionary *a2)
{
  uint64_t v2 = a2;
  id v3 = sub_1001BADB8((id *)objc_alloc(&OBJC_CLASS___UPPManifestItem), v2);

  return v3;
}

AppInstallDownloadTask *sub_100208EDC(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v8 = a4;
  id v9 = a3;
  objc_opt_self(a1);
  v29[0] = @"automatic_type";
  v29[1] = @"bundle_id";
  void v29[2] = @"client_id";
  v29[3] = @"download_path";
  void v29[4] = @"download_volume";
  void v29[5] = @"evid";
  v29[6] = @"external_id";
  void v29[7] = @"item_id";
  v29[8] = @"log_code";
  v29[9] = @"metrics_fields";
  v29[10] = @"order_index";
  v29[11] = @"policy";
  v29[12] = @"priority";
  v29[13] = @"quarantine";
  v29[14] = @"redownload";
  v29[15] = @"restore_type";
  v29[16] = @"software_platform";
  v29[17] = @"source_type";
  v29[18] = @"update_type";
  id v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v29, 19LL));
  id v11 = (void *)objc_claimAutoreleasedReturnValue([v9 connection]);
  objc_super v12 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteEntity memoryEntityForPersistentID:withProperties:usingConnection:]( &OBJC_CLASS___AppInstallEntity,  "memoryEntityForPersistentID:withProperties:usingConnection:",  a2,  v10,  v11));

  v28[0] = @"bytes_offset";
  v28[1] = @"bytes_total";
  void v28[2] = @"clear_hash_array";
  v28[3] = @"compression";
  v28[4] = @"data_promise_id";
  void v28[5] = @"disk_usage";
  v28[6] = @"dp_info";
  v28[7] = @"hash_array";
  uint8_t v28[8] = @"hash_size";
  v28[9] = @"hash_type";
  v28[10] = @"locate_asset_cache";
  v28[11] = @"package_type";
  v28[12] = @"package_url";
  v28[13] = @"ranges_not_supported";
  v28[14] = @"request_count";
  v28[15] = @"variant_id";
  __int16 v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v28, 16LL));
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v9 connection]);

  id v15 = sub_100323E4C(v12, v14, v13);
  uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue(v15);

  uint64_t v17 = objc_alloc(&OBJC_CLASS___AppInstallDownloadTask);
  id v18 = v12;
  id v19 = v16;
  id v20 = v8;
  if (v17)
  {
    v27.receiver = v17;
    v27.super_class = (Class)&OBJC_CLASS___AppInstallDownloadTask;
    uint64_t v17 = (AppInstallDownloadTask *)objc_msgSendSuper2(&v27, "init");
    if (v17)
    {
      uint64_t v21 = (IXAppInstallCoordinator *)[v18 databaseID];
      v17->_coordinator = v21;
      id v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", v21));
      id v23 = sub_10031DE10((uint64_t)&OBJC_CLASS___AppInstallInfo, v22);
      uint64_t v24 = objc_claimAutoreleasedReturnValue(v23);
      installID = (void *)v17->_installID;
      v17->_installID = v24;

      objc_storeStrong((id *)&v17->_didLoadAssetSize, v12);
      objc_storeStrong((id *)&v17->_install, v16);
      objc_storeStrong((id *)&v17->super._success, a4);
    }
  }

  return v17;
}

__CFString *sub_100209270(uint64_t a1, void *a2, __CFString **a3)
{
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 80) valueForProperty:@"package_url"]);
  if (v6)
  {
    unsigned int v216 = a3;
    objc_super v7 = objc_alloc_init(&OBJC_CLASS___AssetRequestProperties);
    uint64_t v8 = (uint64_t)v7;
    if (v7) {
      v7->_connectionPool = 1LL;
    }
    id v9 = sub_100323C54(*(void **)(a1 + 64));
    id v11 = (void *)objc_claimAutoreleasedReturnValue(v9);
    if (v8) {
      objc_setProperty_atomic((id)v8, v10, v11, 128LL);
    }

    id Property = *(id *)(a1 + 72);
    if (Property) {
      id Property = objc_getProperty(Property, v12, 24LL, 1);
    }
    id v15 = Property;
    if (v8) {
      objc_setProperty_atomic((id)v8, v14, v15, 32LL);
    }

    id v16 = sub_1001E2734(*(void **)(a1 + 64), (uint64_t)@"external_id");
    id v18 = (void *)objc_claimAutoreleasedReturnValue(v16);
    if (v8) {
      objc_setProperty_atomic((id)v8, v17, v18, 104LL);
    }

    id v19 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 80) valueForProperty:@"dp_info"]);
    id v219 = v19;
    if (v19) {
      BOOL v218 = [v19 length] != 0;
    }
    else {
      BOOL v218 = 0;
    }
    id v25 = sub_1001E25D0(*(void **)(a1 + 80), (uint64_t)@"bytes_total");
    uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue(v25);
    objc_super v27 = v26;
    uint64_t v221 = a2;
    if (!v26 || [v26 isEqualToNumber:&off_10040C610])
    {
      id v28 = sub_1001E2798(*(void **)(a1 + 80), (uint64_t)@"package_url");
      id v29 = (void *)objc_claimAutoreleasedReturnValue(v28);
      if (v29)
      {
        id v30 = objc_alloc(&OBJC_CLASS___DetermineSizeForURLTask);
        dispatch_source_t v31 = sub_100323C54(*(void **)(a1 + 64));
        dispatch_object_t v32 = (void *)objc_claimAutoreleasedReturnValue(v31);
        uint64_t v33 = sub_10025D76C((id *)&v30->super.super.super.isa, v29, v32);

        if ([(id)a1 runSubTask:v33 returningError:0])
        {
          id v35 = *(void **)(a1 + 80);
          if (v33) {
            id v36 = objc_getProperty(v33, v34, 72LL, 1);
          }
          else {
            id v36 = 0LL;
          }
          id v37 = v36;
          [v35 setValue:v37 forProperty:@"bytes_total"];

          *(_BYTE *)(a1 + 4_Block_object_dispose(va, 8) = 1;
        }

        a2 = v221;
      }
    }

    id v38 = sub_1001E2698(*(id *)(a1 + 80), (uint64_t)@"compression");
    id v39 = sub_1001E25D0(*(void **)(a1 + 80), (uint64_t)@"hash_type");
    int v40 = (void *)objc_claimAutoreleasedReturnValue(v39);
    uint64_t v220 = (uint64_t)v6;
    BOOL v217 = v40;
    if (v40)
    {
      id v41 = [v40 integerValue];
      if (v41 == (id)2) {
        uint64_t v42 = 1LL;
      }
      else {
        uint64_t v42 = 2LL * (v41 == (id)3);
      }
      uint64_t v43 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 80) valueForProperty:@"hash_size"]);
      unsigned int v44 = [v43 unsignedIntValue];

      uint64_t v45 = objc_alloc_init(&OBJC_CLASS___ChunkedDigest);
      uint64_t v46 = v45;
      if (v45)
      {
        v45->_chunkSize = v44;
        v45->_unint64_t chunkType = v42;
      }

      uint64_t v47 = objc_alloc_init(&OBJC_CLASS___ChunkedDigest);
      id v48 = v47;
      if (v47)
      {
        v47->_chunkSize = v44;
        v47->_unint64_t chunkType = v42;
      }

      __int128 v49 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 80) valueForProperty:@"hash_array"]);
      if (v218)
      {
        sub_10020291C((uint64_t)v46, v49);

        uint64_t v50 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 80) valueForProperty:@"clear_hash_array"]);
        sub_10020291C((uint64_t)v48, v50);

        a2 = v221;
        if (v48) {
          chunkDigests = v48->_chunkDigests;
        }
        else {
          chunkDigests = 0LL;
        }
        id v52 = chunkDigests;
        NSUInteger v53 = -[NSArray count](v52, "count");

        if (!v53)
        {
          id v54 = sub_1001E26D0(*(void **)(a1 + 64), (uint64_t)@"log_code");
          BOOL v55 = (void *)objc_claimAutoreleasedReturnValue(v54);
          uint64_t v56 = v55;
          if (v55 && [v55 isEqualToString:@"LGY"])
          {
            uint64_t v57 = ASDLogHandleForCategory(2LL);
            uint64_t v58 = (os_log_s *)objc_claimAutoreleasedReturnValue(v57);
            if (os_log_type_enabled(v58, OS_LOG_TYPE_ERROR))
            {
              id v213 = *(id *)(a1 + 72);
              if (v213) {
                id v213 = objc_getProperty(v213, v59, 80LL, 1);
              }
              id v214 = v213;
              *(_DWORD *)__int128 buf = 138412290;
              id v223 = v214;
              _os_log_error_impl( (void *)&_mh_execute_header,  v58,  OS_LOG_TYPE_ERROR,  "[%@] Skipping cleartext validation for legacy purchase path",  buf,  0xCu);

              a2 = v221;
            }

            id v60 = (os_log_s *)v48;
            id v48 = 0LL;
          }

          else
          {
            uint64_t v61 = ASDLogHandleForCategory(2LL);
            id v60 = (os_log_s *)objc_claimAutoreleasedReturnValue(v61);
            if (os_log_type_enabled(v60, OS_LOG_TYPE_FAULT))
            {
              id v211 = *(id *)(a1 + 72);
              if (v211) {
                id v211 = objc_getProperty(v211, v62, 80LL, 1);
              }
              id v212 = v211;
              *(_DWORD *)__int128 buf = 138412290;
              id v223 = v212;
              _os_log_fault_impl( (void *)&_mh_execute_header,  v60,  OS_LOG_TYPE_FAULT,  "[%@] Cleartext hashes are missing, download will likely fail",  buf,  0xCu);

              a2 = v221;
            }
          }
        }
      }

      else
      {
        sub_10020291C((uint64_t)v48, v49);

        uint64_t v46 = 0LL;
        a2 = v221;
      }
    }

    else
    {
      id v48 = 0LL;
      uint64_t v46 = 0LL;
    }

    if (*(void *)(a1 + 40))
    {
      uint64_t v63 = ASDLogHandleForCategory(2LL);
      id v64 = (os_log_s *)objc_claimAutoreleasedReturnValue(v63);
      if (os_log_type_enabled(v64, OS_LOG_TYPE_DEFAULT))
      {
        id v66 = *(id *)(a1 + 72);
        if (v66) {
          id v66 = objc_getProperty(v66, v65, 80LL, 1);
        }
        id v67 = v66;
        *(_DWORD *)__int128 buf = 138412290;
        id v223 = v67;
        _os_log_impl( (void *)&_mh_execute_header,  v64,  OS_LOG_TYPE_DEFAULT,  "[%@] Establishing coordinator based data consumer",  buf,  0xCu);
      }

      if (v38 == (id)1) {
        uint64_t v68 = 0LL;
      }
      else {
        uint64_t v68 = v48;
      }
      id v69 = v68;
      uint64_t v70 = objc_alloc_init(&OBJC_CLASS___CoordinatorPromiseSpecification);
      id v71 = v70;
      if (v70) {
        v70->_promiseType = 0LL;
      }
      id v72 = sub_1001E25D0(*(void **)(a1 + 80), (uint64_t)@"bytes_total");
      uint64_t v73 = (void *)objc_claimAutoreleasedReturnValue(v72);
      id v74 = [v73 unsignedLongLongValue];
      if (v71) {
        v71->_archiveSize = (unint64_t)v74;
      }

      uint64_t v75 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 80) valueForProperty:@"disk_usage"]);
      id v76 = [v75 unsignedLongLongValue];
      if (v71) {
        v71->_diskSpaceNeeded = (unint64_t)v76;
      }

      id v78 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithLongLong:]( NSNumber,  "numberWithLongLong:",  [*(id *)(a1 + 80) databaseID]));
      if (v71) {
        objc_setProperty_atomic(v71, v77, v78, 48LL);
      }

      id v79 = v69;
      objc_opt_self(&OBJC_CLASS___AppInstallDownloadTask);
      id v80 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
      -[NSMutableDictionary setObject:forKeyedSubscript:]( v80,  "setObject:forKeyedSubscript:",  &__kCFBooleanTrue,  SZExtractorOptionsDenyInvalidSymlinks);
      if (v79)
      {
        uint64_t v81 = v79->_chunkDigests;
        -[NSMutableDictionary setObject:forKeyedSubscript:]( v80,  "setObject:forKeyedSubscript:",  v81,  SZExtractorOptionsHashesArray);

        uint64_t v82 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedInt:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedInt:",  v79->_chunkSize));
        -[NSMutableDictionary setObject:forKeyedSubscript:]( v80,  "setObject:forKeyedSubscript:",  v82,  SZExtractorOptionsHashedChunkSize);

        unint64_t chunkType = v79->_chunkType;
        if (chunkType <= 2) {
          -[NSMutableDictionary setObject:forKeyedSubscript:]( v80,  "setObject:forKeyedSubscript:",  *(void *)*(&off_1003ECBE0 + chunkType),  SZExtractorOptionsHashType);
        }
      }

      id v84 = -[NSMutableDictionary copy](v80, "copy");

      if (v71) {
        objc_setProperty_atomic_copy(v71, v85, v84, 56LL);
      }

      if ((uint64_t)sub_1001E2698(*(id *)(a1 + 64), (uint64_t)@"priority") >= 1)
      {
        uint64_t v86 = ASDLogHandleForCategory(2LL);
        uint64_t v87 = (os_log_s *)objc_claimAutoreleasedReturnValue(v86);
        if (os_log_type_enabled(v87, OS_LOG_TYPE_DEFAULT))
        {
          id v89 = *(id *)(a1 + 72);
          if (v89) {
            id v89 = objc_getProperty(v89, v88, 80LL, 1);
          }
          id v90 = v89;
          *(_DWORD *)__int128 buf = 138543362;
          id v223 = v90;
          _os_log_impl( (void *)&_mh_execute_header,  v87,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] Fast extraction enabled",  buf,  0xCu);
        }

        if (v71) {
          v71->_fastExtraction = 1;
        }
      }

      uint64_t v91 = sub_100323C54(*(void **)(a1 + 64));
      uint64_t v92 = (void *)objc_claimAutoreleasedReturnValue(v91);
      __int16 v94 = (void *)objc_claimAutoreleasedReturnValue([v92 description]);
      if (v71) {
        objc_setProperty_atomic_copy(v71, v93, v94, 32LL);
      }

      uint64_t v95 = sub_1002204FC(objc_alloc(&OBJC_CLASS___CoordinatorPromiseProvider), *(void **)(a1 + 40), v216);
      if (v95)
      {
        id v96 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 80) valueForProperty:@"data_promise_id"]);
        id v97 = sub_100194AB4(objc_alloc(&OBJC_CLASS___CoordinatorPromiseDataConsumer), v95, v96, v71, v216);
        NSErrorUserInfoKey v98 = v97;
        if (v97)
        {
          id v99 = v97;
        }

        else
        {
          uint64_t v102 = ASDLogHandleForCategory(2LL);
          __int128 v103 = (os_log_s *)objc_claimAutoreleasedReturnValue(v102);
          if (os_log_type_enabled(v103, OS_LOG_TYPE_ERROR))
          {
            id v206 = *(id *)(a1 + 72);
            if (v206) {
              id v206 = objc_getProperty(v206, v104, 80LL, 1);
            }
            id v215 = v206;
            uint64_t v207 = *v216;
            *(_DWORD *)__int128 buf = 138412546;
            id v223 = v215;
            __int16 v224 = 2114;
            id v225 = v207;
            _os_log_error_impl( (void *)&_mh_execute_header,  v103,  OS_LOG_TYPE_ERROR,  "[%@] Failed to establish promise error: %{public}@",  buf,  0x16u);
          }
        }
      }

      else
      {
        uint64_t v100 = ASDLogHandleForCategory(2LL);
        id v96 = (void *)objc_claimAutoreleasedReturnValue(v100);
        if (os_log_type_enabled((os_log_t)v96, OS_LOG_TYPE_ERROR))
        {
          id v203 = *(id *)(a1 + 72);
          if (v203) {
            id v203 = objc_getProperty(v203, v101, 80LL, 1);
          }
          id v204 = v203;
          __int16 v205 = *v216;
          *(_DWORD *)__int128 buf = 138412546;
          id v223 = v204;
          __int16 v224 = 2114;
          id v225 = v205;
          _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)v96,  OS_LOG_TYPE_ERROR,  "[%@] Failed to establish promise provider error: %{public}@",  buf,  0x16u);
        }

        NSErrorUserInfoKey v98 = 0LL;
      }

      a2 = v221;
      if (v221) {
        *uint64_t v221 = v98;
      }
      char v105 = !v218;
      if (!v98) {
        char v105 = 1;
      }
      if ((v105 & 1) == 0)
      {
        uint64_t v106 = ASDLogHandleForCategory(2LL);
        __int128 v107 = (os_log_s *)objc_claimAutoreleasedReturnValue(v106);
        if (os_log_type_enabled(v107, OS_LOG_TYPE_DEFAULT))
        {
          id v109 = *(id *)(a1 + 72);
          if (v109) {
            id v109 = objc_getProperty(v109, v108, 80LL, 1);
          }
          id v110 = v109;
          *(_DWORD *)__int128 buf = 138412290;
          id v223 = v110;
          _os_log_impl( (void *)&_mh_execute_header,  v107,  OS_LOG_TYPE_DEFAULT,  "[%@] Chaining FairPlay decryption",  buf,  0xCu);
        }

        id v111 = v98;
        id v112 = v219;
        NSErrorUserInfoKey v98 = sub_1001B0670(objc_alloc(&OBJC_CLASS___DecryptDataConsumer), v112, v216);

        if (v98)
        {
          objc_setProperty_atomic(v98, v113, v111, 72LL);
          uint64_t v114 = v98;
        }

        else
        {
          uint64_t v115 = ASDLogHandleForCategory(2LL);
          uint64_t v116 = (os_log_s *)objc_claimAutoreleasedReturnValue(v115);
          if (os_log_type_enabled(v116, OS_LOG_TYPE_ERROR))
          {
            id v208 = *(id *)(a1 + 72);
            if (v208) {
              id v208 = objc_getProperty(v208, v117, 80LL, 1);
            }
            id v209 = v208;
            unsigned __int8 v210 = *v216;
            *(_DWORD *)__int128 buf = 138412546;
            id v223 = v209;
            __int16 v224 = 2114;
            id v225 = v210;
            _os_log_error_impl( (void *)&_mh_execute_header,  v116,  OS_LOG_TYPE_ERROR,  "[%@] Failed to establish decryption consumer error: %{public}@",  buf,  0x16u);

            a2 = v221;
          }
        }
      }
    }

    else
    {
      NSErrorUserInfoKey v98 = 0LL;
    }

    if (v8)
    {
      objc_setProperty_atomic((id)v8, v118, v98, 64LL);

      id v120 = objc_getProperty((id)v8, v119, 64LL, 1);
    }

    else
    {

      id v120 = 0LL;
    }

    uint64_t v6 = (void *)v220;
    uint64_t v24 = (__CFString *)v120;

    if (v24)
    {
      if (!*a2)
      {
        if (v8) {
          id v122 = objc_getProperty((id)v8, v121, 64LL, 1);
        }
        else {
          id v122 = 0LL;
        }
        *a2 = v122;
      }

      uint64_t v123 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 80) valueForProperty:@"bytes_offset"]);
      uint64_t v124 = v123;
      if (v123)
      {
        id v125 = [v123 unsignedLongLongValue];
        if (v8) {
          *(void *)(v8 + 160) = v125;
        }
      }

      __int16 v126 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 80) valueForProperty:@"bytes_total"]);
      id v127 = [v126 unsignedLongLongValue];
      if (v8) {
        *(void *)(v8 + 8_Block_object_dispose(va, 8) = v127;
      }

      id v129 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 64) valueForProperty:@"client_id"]);
      if (!v129)
      {
        id v130 = sub_1001F4ADC((uint64_t)&OBJC_CLASS___AMSProcessInfo);
        uint64_t v131 = (void *)objc_claimAutoreleasedReturnValue(v130);
        id v129 = (void *)objc_claimAutoreleasedReturnValue([v131 bundleIdentifier]);
      }

      if (v8) {
        objc_setProperty_atomic((id)v8, v128, v129, 144LL);
      }
      unsigned __int8 v132 = sub_1001E2598(*(id *)(a1 + 80), (uint64_t)@"locate_asset_cache");
      if (v8) {
        *(_BYTE *)(v8 + 14) = v132;
      }
      switch((unint64_t)sub_1001E2698(*(id *)(a1 + 64), (uint64_t)@"priority"))
      {
        case 0xFFFFFFFFFFFFFFFELL:
          if (v8)
          {
            objc_setProperty_atomic((id)v8, v133, &off_10040C5F8, 184LL);
            *(_DWORD *)(v8 + 16) = 17;
            *(void *)(v8 + 72) = 2LL;
            *(_BYTE *)(v8 + 15) = 1;
          }

          break;
        case 0xFFFFFFFFFFFFFFFFLL:
          if (v8)
          {
            __int16 v134 = &off_10040C5E0;
            goto LABEL_126;
          }

          break;
        case 0uLL:
          if (v8)
          {
            __int16 v134 = &off_10040C5C8;
LABEL_126:
            objc_setProperty_atomic((id)v8, v133, v134, 184LL);
            int v135 = 17;
            goto LABEL_132;
          }

          break;
        case 1uLL:
          if (v8)
          {
            __int128 v136 = &off_10040C5B0;
            goto LABEL_131;
          }

          break;
        case 2uLL:
          if (v8)
          {
            __int128 v136 = &off_10040C598;
LABEL_131:
            objc_setProperty_atomic((id)v8, v133, v136, 184LL);
            int v135 = 25;
LABEL_132:
            *(_DWORD *)(v8 + 16) = v135;
          }

          break;
        default:
          break;
      }

      if (sub_1001E2698(*(id *)(a1 + 64), (uint64_t)@"update_type") == (id)1)
      {
        __int128 v137 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 64) valueForProperty:@"bundle_id"]);
        __int16 v139 = v137;
        if (v8 && v137) {
          objc_setProperty_atomic((id)v8, v138, v137, 80LL);
        }
      }

      id v140 = sub_1001E2698(*(id *)(a1 + 64), (uint64_t)@"source_type");
      uint64_t v141 = 1LL;
      switch((unint64_t)v140)
      {
        case 0uLL:
          goto LABEL_143;
        case 1uLL:
          uint64_t v141 = 2LL;
          goto LABEL_143;
        case 2uLL:
          uint64_t v141 = 3LL;
LABEL_143:
          if (!v8) {
            goto LABEL_229;
          }
          goto LABEL_153;
        case 3uLL:
          if (v8) {
            *(_BYTE *)(v8 + _Block_object_dispose(va, 8) = 1;
          }
          if (v8)
          {
            *(_BYTE *)(v8 + 13) = v143;
            uint64_t v141 = 4LL;
LABEL_153:
            *(void *)(v8 + 24) = v141;
            uint64_t v142 = sub_100324044(*(void *)(a1 + 64));
LABEL_154:
            *(void *)(v8 + 16_Block_object_dispose(va, 8) = v142;
          }

          else
          {
LABEL_229:
            sub_100324044(*(void *)(a1 + 64));
          }

LABEL_155:
          id v144 = sub_100323CB4(*(void **)(a1 + 64));
          uint64_t v145 = (id *)objc_claimAutoreleasedReturnValue(v144);
          SEL v146 = (__CFString *)sub_1002E6130(v145);

          uint64_t v147 = ASDLogHandleForCategory(2LL);
          uint64_t v148 = (os_log_s *)objc_claimAutoreleasedReturnValue(v147);
          BOOL v149 = os_log_type_enabled(v148, OS_LOG_TYPE_DEFAULT);
          if (((unint64_t)v146 & 0xFFFFFFFFFFFFFFFDLL) == 1)
          {
            if (!v149) {
              goto LABEL_165;
            }
            id v151 = *(id *)(a1 + 72);
            if (v151) {
              id v151 = objc_getProperty(v151, v150, 80LL, 1);
            }
            id v152 = v151;
            *(_DWORD *)__int128 buf = 138412546;
            id v223 = v152;
            __int16 v224 = 2048;
            id v225 = v146;
            id v153 = "[%@]: Allowing access to expensive network (result = %ld)";
          }

          else
          {
            if (!v149) {
              goto LABEL_165;
            }
            id v154 = *(id *)(a1 + 72);
            if (v154) {
              id v154 = objc_getProperty(v154, v150, 80LL, 1);
            }
            id v152 = v154;
            *(_DWORD *)__int128 buf = 138412546;
            id v223 = v152;
            __int16 v224 = 2048;
            id v225 = v146;
            id v153 = "[%@]: Denying access to expensive network (result = %ld)";
          }

          _os_log_impl((void *)&_mh_execute_header, v148, OS_LOG_TYPE_DEFAULT, v153, buf, 0x16u);

LABEL_165:
          if (v8) {
            *(_BYTE *)(v8 + 11) = ((unint64_t)v146 & 0xFFFFFFFFFFFFFFFDLL) == 1;
          }
          id v155 = sub_100323CB4(*(void **)(a1 + 64));
          id v156 = (id *)objc_claimAutoreleasedReturnValue(v155);
          id v157 = (__CFString *)sub_1002E6090(v156);

          uint64_t v158 = ASDLogHandleForCategory(2LL);
          id v159 = (os_log_s *)objc_claimAutoreleasedReturnValue(v158);
          BOOL v160 = os_log_type_enabled(v159, OS_LOG_TYPE_DEFAULT);
          if (((unint64_t)v157 & 0xFFFFFFFFFFFFFFFDLL) == 1)
          {
            if (!v160) {
              goto LABEL_177;
            }
            id v162 = *(id *)(a1 + 72);
            if (v162) {
              id v162 = objc_getProperty(v162, v161, 80LL, 1);
            }
            id v163 = v162;
            *(_DWORD *)__int128 buf = 138412546;
            id v223 = v163;
            __int16 v224 = 2048;
            id v225 = v157;
            uint64_t v164 = "[%@]: Allowing access to low data network (result = %ld)";
          }

          else
          {
            if (!v160) {
              goto LABEL_177;
            }
            id v165 = *(id *)(a1 + 72);
            if (v165) {
              id v165 = objc_getProperty(v165, v161, 80LL, 1);
            }
            id v163 = v165;
            *(_DWORD *)__int128 buf = 138412546;
            id v223 = v163;
            __int16 v224 = 2048;
            id v225 = v157;
            uint64_t v164 = "[%@]: Denying access to low data network (result = %ld)";
          }

          _os_log_impl((void *)&_mh_execute_header, v159, OS_LOG_TYPE_DEFAULT, v164, buf, 0x16u);

LABEL_177:
          if (v8) {
            *(_BYTE *)(v8 + 10) = ((unint64_t)v157 & 0xFFFFFFFFFFFFFFFDLL) == 1;
          }
          id v166 = sub_100323CB4(*(void **)(a1 + 64));
          id v167 = (id *)objc_claimAutoreleasedReturnValue(v166);
          id v168 = (__CFString *)sub_1002E61D0(v167);

          uint64_t v169 = ASDLogHandleForCategory(2LL);
          uint64_t v170 = (os_log_s *)objc_claimAutoreleasedReturnValue(v169);
          BOOL v171 = os_log_type_enabled(v170, OS_LOG_TYPE_DEFAULT);
          if ((v168 & 2) != 0)
          {
            if (!v171) {
              goto LABEL_189;
            }
            id v176 = *(id *)(a1 + 72);
            if (v176) {
              id v176 = objc_getProperty(v176, v172, 80LL, 1);
            }
            id v174 = v176;
            *(_DWORD *)__int128 buf = 138412546;
            id v223 = v174;
            __int16 v224 = 2048;
            id v225 = v168;
            id v175 = "[%@]: Allowing access to cellular (mask = %lx)";
          }

          else
          {
            if (!v171) {
              goto LABEL_189;
            }
            id v173 = *(id *)(a1 + 72);
            if (v173) {
              id v173 = objc_getProperty(v173, v172, 80LL, 1);
            }
            id v174 = v173;
            *(_DWORD *)__int128 buf = 138412546;
            id v223 = v174;
            __int16 v224 = 2048;
            id v225 = v168;
            id v175 = "[%@]: Denying access to cellular (mask = %lx)";
          }

          _os_log_impl((void *)&_mh_execute_header, v170, OS_LOG_TYPE_DEFAULT, v175, buf, 0x16u);

LABEL_189:
          if (v8) {
            *(_BYTE *)(v8 + 9) = (v168 & 2) >> 1;
          }
          id v178 = (void *)objc_claimAutoreleasedReturnValue( +[AppInstallationEvent downloadLoadURLEventMetricsOverlayWithInstall:]( &OBJC_CLASS____TtC9appstored20AppInstallationEvent,  "downloadLoadURLEventMetricsOverlayWithInstall:",  *(void *)(a1 + 64)));
          if (v8) {
            objc_setProperty_atomic((id)v8, v177, v178, 120LL);
          }

          uint64_t v24 = (__CFString *)sub_10027399C(objc_alloc(&OBJC_CLASS___AssetRequest), v220, (void *)v8);
          -[__CFString setCachePolicy:](v24, "setCachePolicy:", 1LL);
          id v179 = sub_1001E26D0(*(void **)(a1 + 80), (uint64_t)@"variant_id");
          uint64_t v180 = objc_claimAutoreleasedReturnValue(v179);
          SEL v181 = (void *)v180;
          id v182 = @"Universal";
          if (v180) {
            id v182 = (__CFString *)v180;
          }
          unint64_t v183 = v182;

          id v184 = sub_1001E2698(*(id *)(a1 + 80), (uint64_t)@"package_type");
          uint64_t v185 = ASDLogHandleForCategory(2LL);
          id v186 = (os_log_s *)objc_claimAutoreleasedReturnValue(v185);
          if (os_log_type_enabled(v186, OS_LOG_TYPE_DEFAULT))
          {
            id v188 = *(id *)(a1 + 72);
            if (v188) {
              id v188 = objc_getProperty(v188, v187, 80LL, 1);
            }
            id v189 = v188;
            *(_DWORD *)__int128 buf = 138412802;
            id v223 = v189;
            __int16 v224 = 2114;
            id v225 = v183;
            __int16 v226 = 1024;
            BOOL v227 = v184 == (id)1;
            _os_log_impl( (void *)&_mh_execute_header,  v186,  OS_LOG_TYPE_DEFAULT,  "[%@] Downloading package with variant: %{public}@, isDelta: %{BOOL}d",  buf,  0x1Cu);

            uint64_t v6 = (void *)v220;
          }

          uint64_t v190 = ASDLogHandleForCategory(2LL);
          id v191 = (os_log_s *)objc_claimAutoreleasedReturnValue(v190);
          if (os_log_type_enabled(v191, OS_LOG_TYPE_DEFAULT))
          {
            id v193 = *(id *)(a1 + 72);
            if (v193) {
              id v193 = objc_getProperty(v193, v192, 80LL, 1);
            }
            id v194 = v193;
            *(_DWORD *)__int128 buf = 138412546;
            id v223 = v194;
            __int16 v224 = 2114;
            id v225 = v24;
            _os_log_impl( (void *)&_mh_execute_header,  v191,  OS_LOG_TYPE_DEFAULT,  "[%@] Will download package using request: %{public}@",  buf,  0x16u);
          }

          id v196 = *(id *)(a1 + 72);
          if (v196) {
            id v196 = objc_getProperty(v196, v195, 80LL, 1);
          }
          BOOL v197 = v184 == (id)1;
          id v198 = v196;
          +[QALogger assetWithUrl:variant:isDelta:isParallel:logKey:]( &OBJC_CLASS____TtC9appstored8QALogger,  "assetWithUrl:variant:isDelta:isParallel:logKey:",  v6,  v183,  v197,  0LL,  v198);

          break;
        default:
          uint64_t v142 = sub_100324044(*(void *)(a1 + 64));
          if (!v8) {
            goto LABEL_155;
          }
          goto LABEL_154;
      }
    }
  }

  else
  {
    uint64_t v20 = ASDLogHandleForCategory(2LL);
    uint64_t v21 = (os_log_s *)objc_claimAutoreleasedReturnValue(v20);
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
    {
      id v200 = *(id *)(a1 + 72);
      if (v200) {
        id v200 = objc_getProperty(v200, v22, 80LL, 1);
      }
      id v201 = v200;
      NSErrorUserInfoKey v202 = (__CFString *)[*(id *)(a1 + 80) databaseID];
      *(_DWORD *)__int128 buf = 138412546;
      id v223 = v201;
      __int16 v224 = 2048;
      id v225 = v202;
    }

    if (a3)
    {
      uint64_t v23 = ASDErrorWithDescription(ASDErrorDomain, 302LL, v8);
      uint64_t v24 = 0LL;
      *a3 = (__CFString *)(id)objc_claimAutoreleasedReturnValue(v23);
    }

    else
    {
      uint64_t v24 = 0LL;
    }
  }

  return v24;
}

id *sub_10020A82C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  objc_opt_self(a1);
  uint64_t v6 = sub_10020AAD0((id *)objc_alloc(&OBJC_CLASS___AppInstallDownloadResponse), a2, (void *)1, 0LL, 0LL, v5);

  return v6;
}

id *sub_10020AAD0(id *a1, void *a2, void *a3, void *a4, void *a5, void *a6)
{
  id v12 = a4;
  id v13 = a5;
  id v14 = a6;
  if (a1)
  {
    v17.receiver = a1;
    v17.super_class = (Class)&OBJC_CLASS___AppInstallDownloadResponse;
    id v15 = (id *)objc_msgSendSuper2(&v17, "init");
    a1 = v15;
    if (v15)
    {
      objc_storeStrong(v15 + 1, a5);
      a1[3] = a2;
      a1[7] = a3;
      objc_storeStrong(a1 + 8, a4);
      objc_storeStrong(a1 + 4, a6);
    }
  }

  return a1;
}

id sub_10020ABEC(id a1, void *a2, char a3)
{
  id v5 = a2;
  if (a1)
  {
    v29.receiver = a1;
    v29.super_class = (Class)&OBJC_CLASS___RestoreInfo;
    a1 = objc_msgSendSuper2(&v29, "init");
    if (a1)
    {
      uint64_t v6 = objc_opt_new(&OBJC_CLASS___NSMutableDictionary);
      objc_super v7 = (void *)*((void *)a1 + 3);
      *((void *)a1 + 3) = v6;

      uint64_t v8 = objc_opt_new(&OBJC_CLASS___NSMutableDictionary);
      id v9 = (void *)*((void *)a1 + 4);
      *((void *)a1 + 4) = v8;

      *((void *)a1 + 5) = 0LL;
      *((void *)a1 + 6) = 0LL;
      *((_BYTE *)a1 + _Block_object_dispose(va, 8) = a3;
      id v10 = sub_100255630((uint64_t)&OBJC_CLASS___URLBag);
      id v11 = (id *)objc_claimAutoreleasedReturnValue(v10);
      *((void *)a1 + 2) = sub_1002560B8(v11, (uint64_t)@"p2-content-restore/max-item-count", 5LL);

      id v12 = v5;
      char v13 = sub_100212600((uint64_t)&OBJC_CLASS___RestoreManager);
      id v14 = objc_alloc_init(&OBJC_CLASS____TtC9appstored6LogKey);
      id v15 = (void *)objc_claimAutoreleasedReturnValue(+[ActiveAccountObserver sharedInstance](&OBJC_CLASS___ActiveAccountObserver, "sharedInstance"));
      id v16 = (void *)objc_claimAutoreleasedReturnValue([v15 oneAccountDSIDWithLogKey:v14]);
      objc_super v17 = objc_opt_new(&OBJC_CLASS___NSMutableArray);
      id v18 = objc_opt_new(&OBJC_CLASS___NSMutableArray);
      id v19 = sub_1002EEBC0((uint64_t)&OBJC_CLASS___AppInstallsDatabaseStore);
      uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue(v19);
      v30[0] = _NSConcreteStackBlock;
      v30[1] = 3221225472LL;
      void v30[2] = sub_10020AEB8;
      v30[3] = &unk_1003ECC28;
      v30[4] = a1;
      id v21 = v16;
      id v31 = v21;
      id v22 = v12;
      id v32 = v22;
      char v35 = v13;
      uint64_t v23 = v18;
      uint64_t v33 = v23;
      uint64_t v24 = v17;
      dispatch_time_t v34 = v24;
      [v20 modifyUsingTransaction:v30];

      if (-[NSMutableArray count](v24, "count"))
      {
        uint64_t v25 = ASDLogHandleForCategory(29LL);
        uint64_t v26 = (os_log_s *)objc_claimAutoreleasedReturnValue(v25);
        if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
        {
          id v28 = (void *)objc_claimAutoreleasedReturnValue(-[NSMutableArray componentsJoinedByString:](v24, "componentsJoinedByString:", @", "));
          *(_DWORD *)__int128 buf = 138543362;
          id v37 = v28;
          _os_log_error_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_ERROR,  "Hard failing coordinators for apps: [%{public}@]",  buf,  0xCu);
        }

        sub_100215A54((uint64_t)&OBJC_CLASS___RestoreManager, v24, @"Restore preflight accounts");
      }
    }
  }

  return a1;
}

uint64_t sub_10020AEB8(uint64_t a1, void *a2)
{
  id v32 = a2;
  uint64_t v33 = objc_opt_new(&OBJC_CLASS___NSMutableArray);
  id v31 = (void *)objc_claimAutoreleasedReturnValue(+[RestoreAppInstall defaultProperties](&OBJC_CLASS___RestoreAppInstall, "defaultProperties"));
  id v3 = sub_1002FD5B0((uint64_t)&OBJC_CLASS___AppInstallPredicates);
  id v30 = (void *)objc_claimAutoreleasedReturnValue(v3);
  v46[0] = v30;
  id v4 = sub_1002FD6E4((uint64_t)&OBJC_CLASS___AppInstallPredicates);
  id v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  v46[1] = v5;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v46, 2LL));
  objc_super v7 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAnyPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAnyPredicates:",  v6));
  v47[0] = v7;
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"restore_type",  &off_10040C628));
  v45[0] = v8;
  id v9 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"restore_type",  &off_10040C640));
  v45[1] = v9;
  id v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v45, 2LL));
  id v11 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAnyPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAnyPredicates:",  v10));
  v47[1] = v11;
  id v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v47, 2LL));
  char v13 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v12));

  id v14 = (void *)objc_claimAutoreleasedReturnValue([v32 connection]);
  id v15 = sub_10024C1D0((uint64_t)&OBJC_CLASS___AppInstallEntity, v14, v13);
  id v16 = (void *)objc_claimAutoreleasedReturnValue(v15);

  v34[0] = _NSConcreteStackBlock;
  v34[1] = 3221225472LL;
  v34[2] = sub_10020B2B4;
  v34[3] = &unk_1003ECC00;
  id v17 = v32;
  uint64_t v18 = *(void *)(a1 + 32);
  id v19 = *(void **)(a1 + 40);
  id v35 = v17;
  uint64_t v36 = v18;
  id v37 = v19;
  id v38 = *(id *)(a1 + 48);
  char v42 = *(_BYTE *)(a1 + 72);
  id v39 = *(id *)(a1 + 56);
  id v40 = *(id *)(a1 + 64);
  uint64_t v20 = v33;
  id v41 = v20;
  [v16 enumeratePersistentIDsAndProperties:v31 usingBlock:v34];
  if (-[NSMutableArray count](v20, "count"))
  {
    uint64_t v21 = ASDLogHandleForCategory(29LL);
    id v22 = (os_log_s *)objc_claimAutoreleasedReturnValue(v21);
    if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
    {
      id v29 = -[NSMutableArray count](v20, "count");
      *(_DWORD *)__int128 buf = 134217984;
      id v44 = v29;
      _os_log_error_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_ERROR,  "Failing %ld restores due to account failures",  buf,  0xCu);
    }

    id v23 = sub_1001B4590(v17, v20);
    if (*(void *)(a1 + 48)) {
      [*(id *)(a1 + 64) addObjectsFromArray:v20];
    }
  }

  if (objc_msgSend(*(id *)(a1 + 56), "count", v30))
  {
    uint64_t v24 = ASDLogHandleForCategory(29LL);
    uint64_t v25 = (os_log_s *)objc_claimAutoreleasedReturnValue(v24);
    if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
    {
      id v26 = [*(id *)(a1 + 56) count];
      *(_DWORD *)__int128 buf = 134217984;
      id v44 = v26;
      _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_DEFAULT,  "Importing %ld restores that are waiting to bootstrap later",  buf,  0xCu);
    }

    id v27 = sub_1001B4590(v17, *(void **)(a1 + 56));
  }

  return 1LL;
}

void sub_10020B2B4(uint64_t a1, uint64_t a2)
{
  id v4 = objc_alloc(&OBJC_CLASS___AppInstallEntity);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) connection]);
  uint64_t v6 = -[SQLiteEntity initWithPersistentID:onConnection:](v4, "initWithPersistentID:onConnection:", a2, v5);

  objc_super v7 = -[LogKey initWithAppInstallEntity:]( objc_alloc(&OBJC_CLASS____TtC9appstored6LogKey),  "initWithAppInstallEntity:",  v6);
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(-[SQLiteEntity valueForProperty:](v6, "valueForProperty:", @"bootstrapped"));
  id v9 = [v8 integerValue];
  id v10 = sub_1001E2698(v6, (uint64_t)@"priority");
  uint64_t v11 = *(void *)(a1 + 40);
  uint64_t v43 = v7;
  id v41 = v9;
  if (v10 || v11 && (*(_BYTE *)(v11 + 8) & 1) != 0)
  {
    uint64_t v12 = 40LL;
    uint64_t v13 = 24LL;
  }

  else
  {
    uint64_t v12 = 48LL;
    uint64_t v13 = 32LL;
  }

  char v42 = v8;
  id v44 = *(id *)(v11 + v13);
  id v14 = objc_alloc(&OBJC_CLASS___RestoreAppInstall);
  id v15 = (void *)objc_claimAutoreleasedReturnValue(+[RestoreAppInstall defaultProperties](&OBJC_CLASS___RestoreAppInstall, "defaultProperties"));
  id v16 = -[SQLiteMemoryEntity initWithDatabaseEntity:properties:](v14, "initWithDatabaseEntity:properties:", v6, v15);

  id v17 = *(void **)(a1 + 48);
  id v45 = 0LL;
  id v18 = sub_10021040C((uint64_t)&OBJC_CLASS___RestoreManager, v16, v17, &v45);
  id v19 = (void *)objc_claimAutoreleasedReturnValue(v18);
  id v20 = v45;
  if (*(void *)(a1 + 56)) {
    BOOL v21 = v19 == 0LL;
  }
  else {
    BOOL v21 = 1;
  }
  char v22 = !v21;
  if (v21)
  {
    if (!v19) {
      goto LABEL_30;
    }
LABEL_18:
    id v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "ams_DSID"));
    id v30 = (NSMutableArray *)objc_claimAutoreleasedReturnValue([v44 objectForKeyedSubscript:v29]);
    if (!v30)
    {
      id v30 = objc_opt_new(&OBJC_CLASS___NSMutableArray);
      [v44 setObject:v30 forKeyedSubscript:v29];
    }

    uint64_t v31 = *(void *)(a1 + 40);
    if (v31) {
      ++*(void *)(v31 + v12);
    }
    id v32 = v30;
    if (*(_BYTE *)(a1 + 88)) {
      id v32 = *(NSMutableArray **)(a1 + 64);
    }
    -[NSMutableArray addObject:](v32, "addObject:", v16);

    char v22 = 0;
    dispatch_time_t v34 = v42;
    uint64_t v33 = v43;
    goto LABEL_25;
  }

  id v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "ams_DSID"));
  unsigned __int8 v24 = [v23 isEqualToNumber:*(void *)(a1 + 56)];

  if ((v24 & 1) != 0) {
    goto LABEL_18;
  }
  uint64_t v25 = ASDLogHandleForCategory(29LL);
  id v26 = (os_log_s *)objc_claimAutoreleasedReturnValue(v25);
  if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
  {
    id v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "ams_DSID"));
    uint64_t v28 = *(void *)(a1 + 56);
    *(_DWORD *)__int128 buf = 138412802;
    uint64_t v47 = v43;
    __int16 v48 = 2114;
    __int128 v49 = v27;
    __int16 v50 = 2114;
    uint64_t v51 = v28;
    _os_log_impl( (void *)&_mh_execute_header,  v26,  OS_LOG_TYPE_DEFAULT,  "[%@] Skipping restore accountID: %{public}@ not matching accountID: %{public}@",  buf,  0x20u);
  }

LABEL_30:
  uint64_t v38 = ASDErrorDomain;
  if (ASDErrorIsEqual(v20, ASDErrorDomain, 745LL))
  {
    sub_1002D7A84(v16, v20);
    [*(id *)(a1 + 72) addObject:v16];
    [*(id *)(a1 + 80) addObject:v16];
    dispatch_time_t v34 = v42;
    uint64_t v33 = v43;
    goto LABEL_42;
  }

  if (v20) {
    char v39 = v22;
  }
  else {
    char v39 = 1;
  }
  dispatch_time_t v34 = v42;
  uint64_t v33 = v43;
  if ((v39 & 1) != 0)
  {
LABEL_25:
    if ((v22 & 1) != 0 || v41 == (id)2) {
      goto LABEL_42;
    }
    if (*(_BYTE *)(a1 + 88))
    {
      -[SQLiteMemoryEntity setValue:forProperty:](v16, "setValue:forProperty:", &off_10040C658, @"bootstrapped");
      -[SQLiteEntity setValue:forProperty:](v6, "setValue:forProperty:", &off_10040C658, @"bootstrapped");
      uint64_t v35 = ASDLogHandleForCategory(29LL);
      uint64_t v36 = (os_log_s *)objc_claimAutoreleasedReturnValue(v35);
      if (os_log_type_enabled(v36, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)__int128 buf = 138412290;
        uint64_t v47 = v33;
        id v37 = "[%@] Bootstrap has been set as needing distributor";
LABEL_40:
        _os_log_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_DEFAULT, v37, buf, 0xCu);
      }
    }

    else
    {
      -[SQLiteMemoryEntity setValue:forProperty:](v16, "setValue:forProperty:", &off_10040C628, @"bootstrapped");
      -[SQLiteEntity setValue:forProperty:](v6, "setValue:forProperty:", &off_10040C628, @"bootstrapped");
      uint64_t v40 = ASDLogHandleForCategory(29LL);
      uint64_t v36 = (os_log_s *)objc_claimAutoreleasedReturnValue(v40);
      if (os_log_type_enabled(v36, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)__int128 buf = 138412290;
        uint64_t v47 = v33;
        id v37 = "[%@] Bootstrap has been started";
        goto LABEL_40;
      }
    }

    goto LABEL_42;
  }

  sub_1002D7A84(v16, v20);
  [*(id *)(a1 + 80) addObject:v16];
LABEL_42:
}

id sub_10020B788(id a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    v7.receiver = a1;
    v7.super_class = (Class)&OBJC_CLASS___ImportJobsForDemotedAppsTask;
    a1 = objc_msgSendSuper2(&v7, "init");
    if (a1)
    {
      id v4 = [v3 copy];
      id v5 = (void *)*((void *)a1 + 5);
      *((void *)a1 + 5) = v4;

      *((_BYTE *)a1 + 4_Block_object_dispose(va, 8) = 1;
    }
  }

  return a1;
}

void sub_10020BB24(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc(&OBJC_CLASS___LSApplicationRecord);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([v3 bundleIdentifier]);
  uint64_t v6 = -[LSApplicationRecord initWithBundleIdentifierOfSystemPlaceholder:error:]( v4,  "initWithBundleIdentifierOfSystemPlaceholder:error:",  v5,  0LL);

  if (v6)
  {
  }

  else
  {
    objc_super v7 = sub_10028D1EC((id *)objc_alloc(&OBJC_CLASS___DemotedApplication), v3);
    uint64_t v8 = v7;
    if (!v7) {
      goto LABEL_7;
    }
    if (v7[10] != (id)4) {
      goto LABEL_7;
    }
    if (!*(void *)(a1 + 32)) {
      goto LABEL_17;
    }
    id v9 = v7;
    uint64_t v23 = 0LL;
    unsigned __int8 v24 = &v23;
    uint64_t v25 = 0x2020000000LL;
    uint64_t v26 = 0LL;
    id v10 = sub_100237D18((uint64_t)&OBJC_CLASS___AppUpdatesDatabaseStore);
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
    *(void *)&__int128 buf = _NSConcreteStackBlock;
    *((void *)&buf + 1) = 3221225472LL;
    uint64_t v28 = sub_10020C25C;
    id v29 = &unk_1003ECCC8;
    uint64_t v12 = v9;
    uint64_t v31 = &v23;
    uint64_t v32 = 0LL;
    id v30 = v12;
    [v11 readUsingSession:&buf];

    uint64_t v13 = v24[3];
    _Block_object_dispose(&v23, 8);

    if (!v13)
    {
LABEL_17:
      uint64_t v19 = ASDLogHandleForCategory(29LL);
      id v20 = (os_log_s *)objc_claimAutoreleasedReturnValue(v19);
      if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
      {
        BOOL v21 = (void *)objc_claimAutoreleasedReturnValue([v3 bundleIdentifier]);
        LODWORD(buf) = 138543362;
        *(void *)((char *)&buf + 4) = v21;
        _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEFAULT,  "No update available for 32-bit app: %{public}@",  (uint8_t *)&buf,  0xCu);
      }

      if (*(_BYTE *)(*(void *)(a1 + 32) + 48LL))
      {
        id v22 = v8[1];
        IXDisplayUserPresentableErrorForApp(v22, 4LL);
      }
    }

    else
    {
LABEL_7:
      id v14 = sub_10028D384((uint64_t)v8);
      id v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
      id v16 = v15;
      if (*(_BYTE *)(*(void *)(a1 + 32) + 48LL)) {
        id v17 = &off_10040C670;
      }
      else {
        id v17 = (_UNKNOWN **)&__kCFBooleanTrue;
      }
      id v18 = &off_1003ED2B0;
      if (*(_BYTE *)(*(void *)(a1 + 32) + 48LL)) {
        id v18 = &off_1003ED268;
      }
      [v15 setValue:v17 forProperty:*v18];
      if (v16) {
        [*(id *)(a1 + 40) addObject:v16];
      }
    }
  }
}

void sub_10020BDC4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_10020BDE4(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  if ([*(id *)(*(void *)(a1 + 32) + 40) count])
  {
    uint64_t v5 = ASDLogHandleForCategory(9LL);
    uint64_t v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = (void *)objc_opt_class(*(void *)(a1 + 32), v7);
      id v9 = *(void **)(*(void *)(a1 + 32) + 40LL);
      id v10 = v8;
      uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "componentsJoinedByString:", @", "));
      *(_DWORD *)__int128 buf = 138543618;
      uint64_t v40 = v8;
      __int16 v41 = 2114;
      char v42 = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "[%{public}@]: Checking if we can re-hydrate bundleIDs: [%{public}@]",  buf,  0x16u);
    }

    __int128 v35 = 0u;
    __int128 v36 = 0u;
    __int128 v33 = 0u;
    __int128 v34 = 0u;
    id v12 = *(id *)(*(void *)(a1 + 32) + 40LL);
    id v13 = [v12 countByEnumeratingWithState:&v33 objects:v38 count:16];
    if (v13)
    {
      id v14 = v13;
      uint64_t v15 = *(void *)v34;
      do
      {
        for (uint64_t i = 0LL; i != v14; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v34 != v15) {
            objc_enumerationMutation(v12);
          }
          uint64_t v17 = *(void *)(*((void *)&v33 + 1) + 8LL * (void)i);
          id v18 = objc_autoreleasePoolPush();
          uint64_t v19 = -[LSApplicationRecord initWithBundleIdentifier:allowPlaceholder:error:]( objc_alloc(&OBJC_CLASS___LSApplicationRecord),  "initWithBundleIdentifier:allowPlaceholder:error:",  v17,  1LL,  0LL);
          id v20 = v19;
          if (v19
            && ((-[LSApplicationRecord isPlaceholder](v19, "isPlaceholder") & 1) != 0
             || -[LSApplicationRecord installType](v20, "installType") == (id)7
             || -[LSApplicationRecord installType](v20, "installType") == (id)9))
          {
            BOOL v21 = objc_autoreleasePoolPush();
            (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
            objc_autoreleasePoolPop(v21);
          }

          objc_autoreleasePoolPop(v18);
        }

        id v14 = [v12 countByEnumeratingWithState:&v33 objects:v38 count:16];
      }

      while (v14);
    }
  }

  else
  {
    id v22 = (void *)objc_claimAutoreleasedReturnValue( +[LSApplicationRecord enumeratorWithOptions:]( &OBJC_CLASS___LSApplicationRecord,  "enumeratorWithOptions:",  64LL));
    v32[0] = _NSConcreteStackBlock;
    v32[1] = 3221225472LL;
    void v32[2] = sub_10020C12C;
    void v32[3] = &unk_1003ECC78;
    v32[4] = *(void *)(a1 + 32);
    [v22 setFilter:v32];
    __int128 v30 = 0u;
    __int128 v31 = 0u;
    __int128 v28 = 0u;
    __int128 v29 = 0u;
    id v12 = v22;
    uint64_t v23 = (char *)[v12 countByEnumeratingWithState:&v28 objects:v37 count:16];
    if (v23)
    {
      unsigned __int8 v24 = v23;
      uint64_t v25 = *(void *)v29;
      do
      {
        for (uint64_t j = 0LL; j != v24; ++j)
        {
          if (*(void *)v29 != v25) {
            objc_enumerationMutation(v12);
          }
          id v27 = objc_autoreleasePoolPush();
          (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))(*(void *)(a1 + 40));
          objc_autoreleasePoolPop(v27);
        }

        unsigned __int8 v24 = (char *)[v12 countByEnumeratingWithState:&v28 objects:v37 count:16];
      }

      while (v24);
    }
  }
}

BOOL sub_10020C12C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([v3 installType] == (id)10 && objc_msgSend(v3, "placeholderFailureReason") == (id)11)
  {
    uint64_t v4 = ASDLogHandleForCategory(2LL);
    uint64_t v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v7 = (void *)objc_opt_class(*(void *)(a1 + 32), v6);
      id v8 = v7;
      id v9 = (void *)objc_claimAutoreleasedReturnValue([v3 bundleIdentifier]);
      int v12 = 138543618;
      id v13 = v7;
      __int16 v14 = 2114;
      uint64_t v15 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] Promoting previously failed upgrade with bundleID: %{public}@",  (uint8_t *)&v12,  0x16u);
    }

    BOOL v10 = 1LL;
  }

  else
  {
    BOOL v10 = [v3 installType] == (id)9;
  }

  return v10;
}

void sub_10020C25C(void *a1, void *a2)
{
  uint64_t v3 = a1[4];
  id v4 = a2;
  if (v3) {
    uint64_t v5 = *(void **)(v3 + 8);
  }
  else {
    uint64_t v5 = 0LL;
  }
  id v6 = v5;
  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"bundle_id",  v6));
  v21[0] = v7;
  id v8 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"update_state",  &off_10040C670));
  v21[1] = v8;
  id v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedLongLong:](&OBJC_CLASS___NSNumber, "numberWithUnsignedLongLong:", a1[6]));
  BOOL v10 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:value:comparisonType:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:value:comparisonType:",  @"store_software_version_id",  v9,  5LL));
  void v21[2] = v10;
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v21, 3LL));
  int v12 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v11));

  id v13 = (void *)objc_claimAutoreleasedReturnValue([v4 connection]);
  id v14 = sub_10024C088((uint64_t)&OBJC_CLASS___AppUpdateEntity, v13, v12);
  uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(v14);

  if (a1[6])
  {
    id v16 = objc_alloc(&OBJC_CLASS___AppUpdateMemoryEntity);
    id v20 = @"store_software_version_id";
    uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v20, 1LL));
    id v18 = -[SQLiteMemoryEntity initWithDatabaseEntity:properties:](v16, "initWithDatabaseEntity:properties:", v15, v17);
    uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue(-[AppUpdateMemoryEntity evid](v18, "evid"));
    *(void *)(*(void *)(a1[5] + 8) + 24) = [v19 unsignedLongLongValue];
  }

  else
  {
    *(void *)(*(void *)(a1[5] + 8LL) + 24LL) = v15 != 0LL;
  }
}

void *sub_10020C578(void *a1, void *a2, void *a3, uint64_t a4)
{
  id v7 = a3;
  if (a1)
  {
    id v8 = a2;
    id v9 = -[NSDictionary initWithContentsOfURL:error:]( objc_alloc(&OBJC_CLASS___NSDictionary),  "initWithContentsOfURL:error:",  v8,  a4);

    if (v9)
    {
      BOOL v10 = sub_10020C620(a1, v9, v7, 0LL);
    }

    else
    {

      BOOL v10 = 0LL;
    }

    a1 = v10;
  }

  return a1;
}

void *sub_10020C620(void *a1, void *a2, void *a3, uint64_t a4)
{
  id v7 = a2;
  id v8 = a3;
  if (a1)
  {
    v38.receiver = a1;
    v38.super_class = (Class)&OBJC_CLASS___ODRManifest;
    a1 = objc_msgSendSuper2( &v38,  "initWithDatabaseID:propertyValues:externalPropertyValues:",  0,  &__NSDictionary0__struct,  &__NSDictionary0__struct);
    if (a1)
    {
      uint64_t v9 = objc_claimAutoreleasedReturnValue([v7 objectForKeyedSubscript:@"softwareVersionExternalIdentifier"]);
      if (!v9) {
        uint64_t v9 = objc_claimAutoreleasedReturnValue([v7 objectForKeyedSubscript:@"betaExternalVersionId"]);
      }
      [a1 setValue:v9 forProperty:@"evid"];
      [a1 setValue:v8 forProperty:@"bundle_id"];
      BOOL v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](&OBJC_CLASS___NSNumber, "numberWithInt:", a4 == 1));
      [a1 setValue:v10 forProperty:@"is_store_based"];

      uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v7 objectForKeyedSubscript:@"itemId"]);
      [a1 setValue:v11 forProperty:@"item_id"];

      int v12 = (void *)objc_claimAutoreleasedReturnValue([v7 objectForKeyedSubscript:@"last_modification_date"]);
      id v13 = v12;
      __int128 v33 = (void *)v9;
      if (v12) {
        id v14 = v12;
      }
      else {
        id v14 = (id)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
      }
      id v15 = v14;

      [a1 setValue:v15 forProperty:@"local_cache_allowed"];
      id v16 = (void *)objc_claimAutoreleasedReturnValue([v7 objectForKeyedSubscript:@"local-cache-allowed"]);
      [a1 setValue:v16 forProperty:@"local_cache_allowed"];

      uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([v7 objectForKeyedSubscript:@"storage_id"]);
      id v18 = v17;
      uint64_t v32 = v15;
      if (v17)
      {
        id v19 = v17;
      }

      else
      {
        id v20 = (void *)objc_claimAutoreleasedReturnValue(+[NSUUID UUID](&OBJC_CLASS___NSUUID, "UUID"));
        id v19 = (id)objc_claimAutoreleasedReturnValue([v20 UUIDString]);
      }

      [a1 setValue:v19 forProperty:@"storage_id"];
      BOOL v21 = (void *)objc_claimAutoreleasedReturnValue([v7 objectForKeyedSubscript:@"thinningVariant"]);
      [a1 setValue:v21 forProperty:@"thinning_variant"];

      id v22 = objc_opt_new(&OBJC_CLASS___NSMutableArray);
      uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue([v7 objectForKeyedSubscript:@"resources"]);
      __int128 v34 = 0u;
      __int128 v35 = 0u;
      __int128 v36 = 0u;
      __int128 v37 = 0u;
      id v24 = [v23 countByEnumeratingWithState:&v34 objects:v39 count:16];
      if (v24)
      {
        id v25 = v24;
        uint64_t v26 = *(void *)v35;
        do
        {
          for (uint64_t i = 0LL; i != v25; uint64_t i = (char *)i + 1)
          {
            if (*(void *)v35 != v26) {
              objc_enumerationMutation(v23);
            }
            __int128 v28 = sub_1001F752C( objc_alloc(&OBJC_CLASS___ODRAssetPack),  *(void **)(*((void *)&v34 + 1) + 8LL * (void)i),  v8);
            -[NSMutableArray addObject:](v22, "addObject:", v28);
          }

          id v25 = [v23 countByEnumeratingWithState:&v34 objects:v39 count:16];
        }

        while (v25);
      }

      uint64_t v29 = objc_claimAutoreleasedReturnValue(+[NSArray arrayWithArray:](&OBJC_CLASS___NSArray, "arrayWithArray:", v22));
      __int128 v30 = (void *)a1[4];
      a1[4] = v29;
    }
  }

  return a1;
}

void *sub_10020C9E0(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v7 = a3;
  if (a1)
  {
    id v8 = (void *)objc_claimAutoreleasedReturnValue( +[NSPropertyListSerialization propertyListWithData:options:format:error:]( &OBJC_CLASS___NSPropertyListSerialization,  "propertyListWithData:options:format:error:",  a2,  0LL,  0LL,  0LL));
    if (v8)
    {
      uint64_t v9 = sub_10020C620(a1, v8, v7, a4);
    }

    else
    {

      uint64_t v9 = 0LL;
    }

    BOOL v10 = v9;
  }

  else
  {
    BOOL v10 = 0LL;
  }

  return v10;
}

id sub_10020CA80(void *a1)
{
  if (a1)
  {
    id v1 = sub_1001E26D0(a1, (uint64_t)@"bundle_id");
    a1 = (void *)objc_claimAutoreleasedReturnValue(v1);
  }

  return a1;
}

id sub_10020CAA4(void *a1)
{
  if (a1)
  {
    id v1 = sub_1001E25D0(a1, (uint64_t)@"evid");
    a1 = (void *)objc_claimAutoreleasedReturnValue(v1);
  }

  return a1;
}

id sub_10020CAC8(void *a1)
{
  else {
    return 0LL;
  }
}

id sub_10020CB14(void *a1)
{
  if (a1)
  {
    id v1 = sub_1001E26D0(a1, (uint64_t)@"item_id");
    a1 = (void *)objc_claimAutoreleasedReturnValue(v1);
  }

  return a1;
}

id sub_10020CB38(void *a1)
{
  if (a1)
  {
    id v1 = sub_1001E26D0(a1, (uint64_t)@"storage_id");
    a1 = (void *)objc_claimAutoreleasedReturnValue(v1);
  }

  return a1;
}

id sub_10020CB5C(void *a1)
{
  if (a1)
  {
    id v1 = sub_1001E26D0(a1, (uint64_t)@"thinning_variant");
    a1 = (void *)objc_claimAutoreleasedReturnValue(v1);
  }

  return a1;
}

id sub_10020CB80(void *a1)
{
  if (a1)
  {
    id v1 = sub_1001E26D0(a1, (uint64_t)@"version");
    a1 = (void *)objc_claimAutoreleasedReturnValue(v1);
  }

  return a1;
}

id *sub_10020CBA4(id *a1)
{
  id v1 = a1;
  if (a1)
  {
    uint64_t v2 = objc_opt_new(&OBJC_CLASS___NSMutableArray);
    __int128 v11 = 0u;
    __int128 v12 = 0u;
    __int128 v13 = 0u;
    __int128 v14 = 0u;
    id v3 = v1[4];
    id v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      id v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        id v7 = 0LL;
        do
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          id v8 = sub_1001F7970(*(void **)(*((void *)&v11 + 1) + 8LL * (void)v7));
          uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
          -[NSMutableArray addObject:](v2, "addObject:", v9, (void)v11);

          id v7 = (char *)v7 + 1;
        }

        while (v5 != v7);
        id v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }

      while (v5);
    }

    id v1 = (id *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithArray:](&OBJC_CLASS___NSArray, "arrayWithArray:", v2));
  }

  return v1;
}

id *sub_10020CCEC(id *a1)
{
  if (a1) {
    a1 = (id *)a1[4];
  }
  return a1;
}

id sub_10020CD10(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    __int128 v15 = 0u;
    __int128 v16 = 0u;
    __int128 v13 = 0u;
    __int128 v14 = 0u;
    id v4 = *(id *)(a1 + 32);
    id v5 = [v4 countByEnumeratingWithState:&v13 objects:v17 count:16];
    if (v5)
    {
      uint64_t v6 = *(void *)v14;
      while (2)
      {
        for (uint64_t i = 0LL; i != v5; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v14 != v6) {
            objc_enumerationMutation(v4);
          }
          id v8 = *(void **)(*((void *)&v13 + 1) + 8LL * (void)i);
          id v9 = sub_1001F7970(v8);
          BOOL v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
          unsigned __int8 v11 = objc_msgSend(v10, "isEqualToString:", v3, (void)v13);

          if ((v11 & 1) != 0)
          {
            id v5 = v8;
            goto LABEL_12;
          }
        }

        id v5 = [v4 countByEnumeratingWithState:&v13 objects:v17 count:16];
        if (v5) {
          continue;
        }
        break;
      }
    }

uint64_t sub_10020CE5C(void *a1, uint64_t a2)
{
  if (!a1) {
    return 0LL;
  }
  id v3 = (void *)objc_claimAutoreleasedReturnValue([a1 propertyValues]);
  uint64_t v4 = objc_claimAutoreleasedReturnValue( +[NSPropertyListSerialization dataWithPropertyList:format:options:error:]( &OBJC_CLASS___NSPropertyListSerialization,  "dataWithPropertyList:format:options:error:",  v3,  100LL,  0LL,  a2));

  return v4;
}

void sub_10020CEC8(uint64_t a1, void *a2)
{
  id v4 = a2;
  if (a1) {
    objc_storeStrong((id *)(a1 + 32), a2);
  }
}

LogPushConnection *sub_10020CF28(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  objc_opt_self(a1);
  id v7 = objc_alloc_init(&OBJC_CLASS___LogPushConnection);
  sub_10020FA50((uint64_t)v7, v6);

  id v8 = sub_1001D4008(v5);
  id v9 = (void *)objc_claimAutoreleasedReturnValue(v8);

  sub_10020FA68((uint64_t)v7, v9);
  return v7;
}

id *sub_10020D194(id *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (!a1) {
    goto LABEL_29;
  }
  v52.receiver = a1;
  v52.super_class = (Class)&OBJC_CLASS___SystemAppLookupItem;
  a1 = (id *)objc_msgSendSuper2(&v52, "init");
  if (!a1) {
    goto LABEL_29;
  }
  id v7 = v5;
  uint64_t v9 = objc_opt_class(&OBJC_CLASS___NSURL, v8);
  if ((objc_opt_isKindOfClass(v7, v9) & 1) != 0)
  {
    id v10 = [v7 copy];
    id v11 = a1[9];
    a1[9] = v10;
  }

  __int128 v12 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKeyedSubscript:@"_IsZipStreamable"]);

  if ((objc_opt_respondsToSelector(v12, "BOOLValue") & 1) != 0) {
    *((_BYTE *)a1 + _Block_object_dispose(&a9, 8) = [v12 BOOLValue];
  }
  __int128 v13 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKeyedSubscript:@"_DownloadSize"]);

  __int128 v14 = &_ss28__ContiguousArrayStorageBaseCMa_ptr;
  uint64_t v16 = objc_opt_class(&OBJC_CLASS___NSNumber, v15);
  if ((objc_opt_isKindOfClass(v13, v16) & 1) != 0)
  {
    id v17 = [v13 copy];
    id v18 = a1[4];
    a1[4] = v17;
  }

  id v19 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKeyedSubscript:@"_MeasurementAlgorithm"]);

  uint64_t v21 = objc_opt_class(&OBJC_CLASS___NSString, v20);
  if ((objc_opt_isKindOfClass(v19, v21) & 1) != 0
    && [v19 isEqualToString:@"SHA-256"])
  {
    id v22 = a1[6];
    uint64_t v23 = &off_10040C688;
  }

  else
  {
    id v22 = a1[6];
    uint64_t v23 = &off_10040C6A0;
  }

  a1[6] = v23;

  id v24 = (id)objc_claimAutoreleasedReturnValue([v6 objectForKeyedSubscript:@"_Measurement"]);
  objc_opt_self(&OBJC_CLASS___SystemAppLookupItem);
  uint64_t v26 = objc_opt_class(&OBJC_CLASS___NSData, v25);
  if ((objc_opt_isKindOfClass(v24, v26) & 1) != 0)
  {
    id v27 = v24;
    id v28 = sub_1002C9004( (uint64_t)HashDigest,  (unsigned __int8 *)[v27 bytes],  (uint64_t)objc_msgSend(v27, "length"));
    uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue(v28);
    NSUInteger v53 = v29;
    __int128 v30 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v53, 1LL));

    __int128 v14 = &_ss28__ContiguousArrayStorageBaseCMa_ptr;
  }

  else
  {
    __int128 v30 = 0LL;
  }

  uint64_t v32 = objc_opt_class(&OBJC_CLASS___NSArray, v31);
  if ((objc_opt_isKindOfClass(v30, v32) & 1) != 0)
  {
    id v33 = [v30 copy];
    id v34 = a1[7];
    a1[7] = v33;
  }

  __int128 v35 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKeyedSubscript:@"_StartOfDataRange"]);

  uint64_t v37 = objc_opt_class(v14[502], v36);
  if ((objc_opt_isKindOfClass(v35, v37) & 1) != 0)
  {
    id v39 = [v35 copy];
    id v40 = a1[3];
    a1[3] = v39;
LABEL_23:

    goto LABEL_24;
  }

  uint64_t v41 = objc_opt_class(&OBJC_CLASS___NSString, v38);
  if ((objc_opt_isKindOfClass(v35, v41) & 1) != 0)
  {
    id v40 = (id)objc_claimAutoreleasedReturnValue(+[NSScanner scannerWithString:](&OBJC_CLASS___NSScanner, "scannerWithString:", v35));
    NSUInteger v53 = 0LL;
    if ([v40 scanUnsignedLongLong:&v53])
    {
      uint64_t v42 = objc_claimAutoreleasedReturnValue([v14[502] numberWithUnsignedLongLong:v53]);
      id v43 = a1[3];
      a1[3] = (id)v42;
    }

    goto LABEL_23;
  }

id sub_10020D614(id a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    v10.receiver = a1;
    v10.super_class = (Class)&OBJC_CLASS___ODRAppReviewClient;
    a1 = objc_msgSendSuper2(&v10, "init");
    if (a1)
    {
      id v4 = (void *)objc_claimAutoreleasedReturnValue( +[NSXPCInterface interfaceWithProtocol:]( &OBJC_CLASS___NSXPCInterface,  "interfaceWithProtocol:",  &OBJC_PROTOCOL___ODRAppReviewProtocol));
      [v3 setExportedInterface:v4];

      id v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSXPCInterface interfaceWithProtocol:]( &OBJC_CLASS___NSXPCInterface,  "interfaceWithProtocol:",  &OBJC_PROTOCOL___ODRAppReviewProtocol));
      [v3 setRemoteObjectInterface:v5];

      [v3 setExportedObject:a1];
      [v3 resume];
      uint64_t v6 = ASDLogHandleForCategory(19LL);
      id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)uint64_t v9 = 0;
        _os_log_debug_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "Created the app review client.", v9, 2u);
      }
    }
  }

  return a1;
}

BOOL sub_10020DA38(void *a1, uint64_t *a2)
{
  id v4 = (void *)a1[4];
  id v3 = (void *)a1[5];
  id v5 = (void *)a1[6];
  if (v4) {
    return sub_1001C5FEC(a2, v3, v4, v5, 0);
  }
  else {
    return sub_1001C45C0(a2, v3, v5, 0);
  }
}

id *sub_10020DA60(id *a1, void *a2, void *a3)
{
  id v3 = a1;
  if (a1)
  {
    objc_super v10 = a2;
    id v5 = a3;
    id v6 = a2;
    id v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v10, 1LL));

    uint64_t v8 = sub_10020DB24(v3, v7, v5);
    id v3 = v8;
  }

  return v3;
}

id *sub_10020DB24(id *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (a1)
  {
    v32.receiver = a1;
    v32.super_class = (Class)&OBJC_CLASS___PurchaseBatch;
    id v7 = (id *)objc_msgSendSuper2(&v32, "init");
    a1 = v7;
    if (v7)
    {
      objc_storeStrong(v7 + 5, a3);
      id v8 = [v5 copy];
      id v9 = a1[1];
      a1[1] = v8;

      objc_super v10 = -[NSMutableArray initWithCapacity:]( [NSMutableArray alloc],  "initWithCapacity:",  [a1[1] count]);
      id v11 = a1[2];
      a1[2] = v10;

      __int128 v12 = (void *)objc_claimAutoreleasedReturnValue([v5 firstObject]);
      unsigned int v13 = [v12 isMachineBased];
      if (v13)
      {
        uint64_t v14 = ASDLogHandleForCategory(25LL);
        uint64_t v15 = (os_log_s *)objc_claimAutoreleasedReturnValue(v14);
        if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v12 logKey]);
          *(_DWORD *)__int128 buf = 138412290;
          __int128 v35 = v16;
          _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_DEFAULT,  "[%@] Created batch for machine based purchases",  buf,  0xCu);
        }
      }

      __int128 v30 = 0u;
      __int128 v31 = 0u;
      __int128 v28 = 0u;
      __int128 v29 = 0u;
      id v17 = a1[1];
      id v18 = [v17 countByEnumeratingWithState:&v28 objects:v33 count:16];
      if (v18)
      {
        id v19 = v18;
        uint64_t v20 = *(void *)v29;
        do
        {
          for (uint64_t i = 0LL; i != v19; uint64_t i = (char *)i + 1)
          {
            if (*(void *)v29 != v20) {
              objc_enumerationMutation(v17);
            }
            id v22 = *(void **)(*((void *)&v28 + 1) + 8LL * (void)i);
            if (v13 != objc_msgSend(v22, "isMachineBased", (void)v28))
            {
              uint64_t v24 = ASDLogHandleForCategory(25LL);
              uint64_t v25 = (os_log_s *)objc_claimAutoreleasedReturnValue(v24);
              if (os_log_type_enabled(v25, OS_LOG_TYPE_FAULT))
              {
                uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue([v22 logKey]);
                *(_DWORD *)__int128 buf = 138412290;
                __int128 v35 = v26;
                _os_log_fault_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_FAULT,  "[%@] Cannot mix machine based and non-machine based purchases",  buf,  0xCu);
              }

              id v27 = (id)objc_claimAutoreleasedReturnValue( +[NSException exceptionWithName:reason:userInfo:]( &OBJC_CLASS___NSException,  "exceptionWithName:reason:userInfo:",  NSInternalInconsistencyException,  @"Cannot mix machine based and non-machine based purchases",  0LL));
              objc_exception_throw(v27);
            }
          }

          id v19 = [v17 countByEnumeratingWithState:&v28 objects:v33 count:16];
        }

        while (v19);
      }
    }
  }

  return a1;
}

id *sub_10020DDEC(id *a1)
{
  if (a1) {
    a1 = (id *)objc_claimAutoreleasedReturnValue([a1[1] objectEnumerator]);
  }
  return a1;
}

void sub_10020DE0C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  if (a1)
  {
    if (!v3)
    {
      uint64_t v5 = ASDErrorWithDescription(ASDErrorDomain, 925LL, @"An unknown failure occurred; canceling batch");
      id v4 = (void *)objc_claimAutoreleasedReturnValue(v5);
    }

    __int128 v19 = 0u;
    __int128 v20 = 0u;
    __int128 v17 = 0u;
    __int128 v18 = 0u;
    id v6 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 8) objectEnumerator]);
    id v7 = [v6 countByEnumeratingWithState:&v17 objects:v25 count:16];
    if (v7)
    {
      uint64_t v9 = *(void *)v18;
      *(void *)&__int128 v8 = 138412546LL;
      __int128 v16 = v8;
      do
      {
        for (uint64_t i = 0LL; i != v7; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v18 != v9) {
            objc_enumerationMutation(v6);
          }
          id v11 = *(void **)(*((void *)&v17 + 1) + 8LL * (void)i);
          if (objc_msgSend(v11, "purchaseState", v16) != (id)2)
          {
            uint64_t v12 = ASDLogHandleForCategory(25LL);
            unsigned int v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
            if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
            {
              uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v11 logKey]);
              *(_DWORD *)__int128 buf = v16;
              id v22 = v14;
              __int16 v23 = 2114;
              uint64_t v24 = v4;
              _os_log_error_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_ERROR,  "[%@] Canceling purchase due to error: %{public}@",  buf,  0x16u);
            }

            sub_10020E028(a1, v4, v11);
          }
        }

        id v7 = [v6 countByEnumeratingWithState:&v17 objects:v25 count:16];
      }

      while (v7);
    }

    id v15 = *(id *)(a1 + 16);
    objc_sync_enter(v15);
    sub_10020E620(a1);
    objc_sync_exit(v15);
  }
}

void sub_10020E00C(_Unwind_Exception *a1)
{
}

void sub_10020E028(uint64_t a1, void *a2, void *a3)
{
  id v4 = a2;
  id v5 = a3;
  [v5 setPurchaseState:2];
  uint64_t v6 = ASDLogHandleForCategory(25LL);
  id v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    __int128 v8 = (void *)objc_claimAutoreleasedReturnValue([v5 logKey]);
    *(_DWORD *)__int128 buf = 138412290;
    uint64_t v57 = v8;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "[%@] Canceling the install coordinator for the failed purchase…",  buf,  0xCu);
  }

  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v5 coordinator]);
  __int16 v48 = v9;
  if (v9 && ([v9 isComplete] & 1) == 0)
  {
    objc_super v10 = (void *)objc_claimAutoreleasedReturnValue([v4 domain]);
    id v11 = [v4 code];
    uint64_t v12 = ASDErrorWithSafeUserInfo(v4);
    unsigned int v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v13 userInfo]);
    id v15 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  v10,  v11,  v14));
    id v53 = 0LL;
    LOBYTE(v11) = [v48 cancelForReason:v15 client:1 error:&v53];
    id v47 = v53;
    if ((v11 & 1) == 0)
    {
      uint64_t v16 = ASDLogHandleForCategory(25LL);
      __int128 v17 = (os_log_s *)objc_claimAutoreleasedReturnValue(v16);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
      {
        uint64_t v45 = (void *)objc_claimAutoreleasedReturnValue([v5 logKey]);
        *(_DWORD *)__int128 buf = 138412546;
        uint64_t v57 = v45;
        __int16 v58 = 2114;
        id v59 = v47;
        _os_log_error_impl( (void *)&_mh_execute_header,  v17,  OS_LOG_TYPE_ERROR,  "[%@] Failed to cancel the install coordinator for the failed purchase: %{public}@",  buf,  0x16u);
      }
    }
  }

  else
  {
    id v47 = 0LL;
  }

  __int128 v18 = objc_opt_new(&OBJC_CLASS___NSMutableDictionary);
  id v19 = sub_100298CBC(v4);
  __int128 v20 = (void *)objc_claimAutoreleasedReturnValue(v19);
  -[NSMutableDictionary setObject:forKeyedSubscript:](v18, "setObject:forKeyedSubscript:", v20, @"error");

  -[NSMutableDictionary setObject:forKeyedSubscript:]( v18,  "setObject:forKeyedSubscript:",  &off_10040C6B8,  @"finalPhase");
  uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue([v5 logCode]);
  -[NSMutableDictionary setObject:forKeyedSubscript:](v18, "setObject:forKeyedSubscript:", v21, @"installCode");

  id v22 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithBool:]( NSNumber,  "numberWithBool:",  [v5 isUserInitiated]));
  -[NSMutableDictionary setObject:forKeyedSubscript:]( v18,  "setObject:forKeyedSubscript:",  v22,  @"isUserInitiated");

  __int16 v23 = (void *)objc_claimAutoreleasedReturnValue([v5 itemID]);
  -[NSMutableDictionary setObject:forKeyedSubscript:](v18, "setObject:forKeyedSubscript:", v23, @"itemID");

  uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue([v5 clientInfo]);
  uint64_t v25 = objc_claimAutoreleasedReturnValue([v24 bundleIdentifier]);
  uint64_t v26 = (void *)v25;
  if (v25) {
    id v27 = (const __CFString *)v25;
  }
  else {
    id v27 = &stru_1003F3E40;
  }
  -[NSMutableDictionary setObject:forKeyedSubscript:]( v18,  "setObject:forKeyedSubscript:",  v27,  @"responsibleClientID");

  id v28 = sub_100298FBC(v4);
  __int128 v29 = (void *)objc_claimAutoreleasedReturnValue(v28);
  -[NSMutableDictionary setObject:forKeyedSubscript:](v18, "setObject:forKeyedSubscript:", v29, @"serverDialogID");

  __int128 v30 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInteger:]( NSNumber,  "numberWithInteger:",  [v5 expectedSoftwarePlatform]));
  -[NSMutableDictionary setObject:forKeyedSubscript:]( v18,  "setObject:forKeyedSubscript:",  v30,  @"softwarePlatform");

  __int128 v31 = (void *)objc_claimAutoreleasedReturnValue([v5 account]);
  objc_super v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v31, "ams_storefront"));
  -[NSMutableDictionary setObject:forKeyedSubscript:](v18, "setObject:forKeyedSubscript:", v32, @"storefront");

  id v33 = (void *)objc_claimAutoreleasedReturnValue([v5 buyParams]);
  v55[0] = AMSBuyParamPropertyExternalVersionId;
  v55[1] = AMSBuyParamPropertyAppExtVrsId;
  v55[2] = AMSBuyParamPropertySoftwareExternalVersionId;
  __int128 v51 = 0u;
  __int128 v52 = 0u;
  __int128 v49 = 0u;
  __int128 v50 = 0u;
  id v34 = (id)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v55, 3LL));
  id v35 = [v34 countByEnumeratingWithState:&v49 objects:v54 count:16];
  if (v35)
  {
    uint64_t v36 = *(void *)v50;
    while (2)
    {
      for (uint64_t i = 0LL; i != v35; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v50 != v36) {
          objc_enumerationMutation(v34);
        }
        uint64_t v38 = *(void *)(*((void *)&v49 + 1) + 8LL * (void)i);
        id v39 = (void *)objc_claimAutoreleasedReturnValue([v33 parameterForKey:v38]);

        if (v39)
        {
          id v40 = (void *)objc_claimAutoreleasedReturnValue([v33 parameterForKey:v38]);
          -[NSMutableDictionary setObject:forKeyedSubscript:]( v18,  "setObject:forKeyedSubscript:",  v40,  @"externalVersionID");

          goto LABEL_24;
        }
      }

      id v35 = [v34 countByEnumeratingWithState:&v49 objects:v54 count:16];
      if (v35) {
        continue;
      }
      break;
    }
  }

void sub_10020E604(_Unwind_Exception *a1)
{
}

void sub_10020E620(uint64_t a1)
{
  uint64_t v2 = -[ASDPurchaseResponse initWithPurchaseResponseItems:]( objc_alloc(&OBJC_CLASS___ASDPurchaseResponse),  "initWithPurchaseResponseItems:",  *(void *)(a1 + 16));
  dispatch_queue_global_t global_queue = dispatch_get_global_queue(21LL, 0LL);
  id v4 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  _OWORD v6[2] = sub_10020EAD8;
  v6[3] = &unk_1003E9DC0;
  void v6[4] = a1;
  id v7 = v2;
  id v5 = v2;
  dispatch_async(v4, v6);
}

void sub_10020E6CC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = v6;
  if (a1)
  {
    if ([v6 purchaseState] == (id)2)
    {
      uint64_t v8 = ASDLogHandleForCategory(25LL);
      uint64_t v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_FAULT))
      {
        uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v7 logKey]);
        int v17 = 138412290;
        __int128 v18 = v16;
        _os_log_fault_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_FAULT,  "[%@] Refusing to re-complete purchase",  (uint8_t *)&v17,  0xCu);
      }
    }

    else
    {
      [v7 setPurchaseState:2];
      id v10 = [[ASDPurchaseResponseItem alloc] initWithResults:v5];
      id v11 = (void *)objc_claimAutoreleasedReturnValue([v7 bundleID]);
      [v10 _setBundleID:v11];

      uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v7 itemID]);
      [v10 _setItemID:v12];

      unsigned int v13 = (void *)objc_claimAutoreleasedReturnValue([v7 purchase]);
      [v10 _setPurchase:v13];

      [v10 _setSuccess:1];
      id v14 = *(id *)(a1 + 16);
      objc_sync_enter(v14);
      [*(id *)(a1 + 16) addObject:v10];
      id v15 = [*(id *)(a1 + 8) count];
      if (v15 == [*(id *)(a1 + 16) count]) {
        sub_10020E620(a1);
      }
      objc_sync_exit(v14);
    }
  }
}

void sub_10020E8AC(_Unwind_Exception *a1)
{
}

void sub_10020E8C8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = v6;
  if (a1)
  {
    if ([v6 purchaseState] == (id)2)
    {
      uint64_t v8 = ASDLogHandleForCategory(25LL);
      uint64_t v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_FAULT))
      {
        id v10 = (void *)objc_claimAutoreleasedReturnValue([v7 logKey]);
        int v16 = 138412546;
        int v17 = v10;
        __int16 v18 = 2114;
        id v19 = v5;
        _os_log_fault_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_FAULT,  "[%@] Refusing to fail completed purchase (error was: %{public}@)",  (uint8_t *)&v16,  0x16u);
      }
    }

    else
    {
      if (!v5)
      {
        uint64_t v11 = ASDErrorWithDescription(ASDErrorDomain, 925LL, @"An unknown failure occured, canceling purchase");
        id v5 = (id)objc_claimAutoreleasedReturnValue(v11);
      }

      uint64_t v12 = ASDLogHandleForCategory(25LL);
      unsigned int v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      {
        id v15 = (void *)objc_claimAutoreleasedReturnValue([v7 logKey]);
        int v16 = 138412546;
        int v17 = v15;
        __int16 v18 = 2114;
        id v19 = v5;
        _os_log_error_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_ERROR,  "[%@] Failing purchase with error: %{public}@",  (uint8_t *)&v16,  0x16u);
      }

      sub_10020E028(a1, v5, v7);
      uint64_t v9 = (os_log_s *)*(id *)(a1 + 16);
      objc_sync_enter(v9);
      id v14 = [*(id *)(a1 + 8) count];
      if (v14 == [*(id *)(a1 + 16) count]) {
        sub_10020E620(a1);
      }
      objc_sync_exit(v9);
    }
  }
}

void sub_10020EABC(_Unwind_Exception *a1)
{
}

uint64_t sub_10020EAD8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a1 + 32) + 32LL) + 16LL))();
}

void sub_10020EAE8(void *a1, char *newValue)
{
  if (a1) {
    objc_setProperty_atomic_copy(a1, newValue, newValue, 32LL);
  }
}

id sub_10020EB44(uint64_t a1)
{
  if (qword_100462328 != -1) {
    dispatch_once(&qword_100462328, &stru_1003ECD10);
  }
  return (id)qword_100462330;
}

void sub_10020EB88(id a1)
{
  id v1 = objc_alloc_init(&OBJC_CLASS___RestoreService);
  uint64_t v2 = (void *)qword_100462330;
  qword_100462330 = (uint64_t)v1;
}

uint64_t sub_10020ED50(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, void))(result + 16))(result, 0LL, 0LL);
  }
  return result;
}

void sub_10020EE18(uint64_t a1)
{
  uint64_t v2 = ASDLogHandleForCategory(29LL);
  id v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "componentsJoinedByString:", @", "));
    int v5 = *(unsigned __int8 *)(a1 + 48);
    *(_DWORD *)__int128 buf = 138412546;
    __int16 v18 = v4;
    __int16 v19 = 1024;
    int v20 = v5;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "(RestoreService) prioritizeBundleIDs: [%@] userInitiated: %d",  buf,  0x12u);
  }

  id v6 = sub_10020B788(objc_alloc(&OBJC_CLASS___ImportJobsForDemotedAppsTask), *(void **)(a1 + 32));
  id v7 = v6;
  if (v6) {
    v6[48] = *(_BYTE *)(a1 + 48);
  }
  id v8 = sub_10020F1C0((uint64_t)&OBJC_CLASS___TaskQueue);
  uint64_t v9 = (id *)objc_claimAutoreleasedReturnValue(v8);
  int v16 = v7;
  id v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v16, 1LL));
  if (v9) {
    [v9[1] addOperations:v10 waitUntilFinished:1];
  }

  uint64_t v12 = *(void *)(a1 + 40);
  if (v12)
  {
    if (v7)
    {
      uint64_t v13 = v7[24] & 1;
      id Property = objc_getProperty(v7, v11, 32LL, 1);
    }

    else
    {
      uint64_t v13 = 0LL;
      id Property = 0LL;
    }

    id v15 = Property;
    (*(void (**)(uint64_t, uint64_t, id))(v12 + 16))(v12, v13, v15);
  }
}

id sub_10020F15C(void *a1, uint64_t a2)
{
  if (a1)
  {
    uint64_t v2 = a1;
    uint64_t v3 = objc_opt_class(&OBJC_CLASS___NSHTTPURLResponse, a2);
    if ((objc_opt_isKindOfClass(v2, v3) & 1) != 0) {
      a1 = (void *)objc_claimAutoreleasedReturnValue([v2 valueForHTTPHeaderField:@"CDNUUID"]);
    }
    else {
      a1 = 0LL;
    }
  }

  return a1;
}

id sub_10020F1C0(uint64_t a1)
{
  if (qword_100462340 != -1) {
    dispatch_once(&qword_100462340, &stru_1003ECDD0);
  }
  return (id)qword_100462338;
}

void sub_10020F204(id a1)
{
  id v1 = sub_10020F238((id *)objc_alloc(&OBJC_CLASS___TaskQueue), @"com.apple.appstored.TaskQueue.networkQueue");
  uint64_t v2 = (void *)qword_100462338;
  qword_100462338 = (uint64_t)v1;
}

id *sub_10020F238(id *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    v7.receiver = a1;
    v7.super_class = (Class)&OBJC_CLASS___TaskQueue;
    a1 = (id *)objc_msgSendSuper2(&v7, "init");
    if (a1)
    {
      id v4 = objc_alloc_init(&OBJC_CLASS___NSOperationQueue);
      id v5 = a1[1];
      a1[1] = v4;

      [a1[1] setMaxConcurrentOperationCount:1];
      [a1[1] setName:v3];
    }
  }

  return a1;
}

id *sub_10020F2D0(id *a1)
{
  if (a1) {
    a1 = (id *)objc_claimAutoreleasedReturnValue([a1[1] operations]);
  }
  return a1;
}

id *sub_10020F2F0(id *result, uint64_t a2)
{
  if (result) {
    return (id *)[result[1] addOperation:a2];
  }
  return result;
}

id *sub_10020F304(id *result, uint64_t a2)
{
  if (result) {
    return (id *)[result[1] addBarrierBlock:a2];
  }
  return result;
}

void sub_10020F324(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    id v4 = *(void **)(a1 + 16);
    id v7 = v3;
    if (!v4)
    {
      id v5 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
      id v6 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v5;

      id v4 = *(void **)(a1 + 16);
    }

    [v4 addObject:v7];
    id v3 = v7;
  }
}

void sub_10020FA50(uint64_t a1, void *a2)
{
  if (a1) {
    objc_storeStrong((id *)(a1 + 8), a2);
  }
}

void sub_10020FA68(uint64_t a1, void *a2)
{
  if (a1) {
    objc_storeStrong((id *)(a1 + 24), a2);
  }
}

id sub_10020FAD4(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_10020FB4C;
  block[3] = &unk_1003E9EA8;
  void block[4] = objc_opt_self(a1);
  if (qword_100462350 != -1) {
    dispatch_once(&qword_100462350, block);
  }
  return (id)qword_100462348;
}

void sub_10020FB4C(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  uint64_t v2 = (void *)qword_100462348;
  qword_100462348 = (uint64_t)v1;
}

void sub_10020FC50(uint64_t a1)
{
  if (sub_10020FDF8(*(void *)(a1 + 32)) >= 1)
  {
    sub_10020FEBC(*(void *)(a1 + 32), 1);
    return;
  }

  sub_1002F9B04((uint64_t)&OBJC_CLASS___AppDefaultsManager, 0LL);
  uint64_t v2 = sub_100210138(*(void *)(a1 + 32));
  if (sub_1002101FC(*(void *)(a1 + 32)) < 1)
  {
    if (v2 < 1) {
      return;
    }
    goto LABEL_12;
  }

  id v3 = sub_1001E1834((uint64_t)&OBJC_CLASS___DeviceStateMonitor);
  id v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  if (sub_1001E1AD0((uint64_t)v4))
  {
    uint64_t v5 = ASDLogHandleForCategory(29LL);
    id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_DEFAULT,  "Startup with hard failures. Preflight already attempted for this boot.",  buf,  2u);
    }

    if (v2 <= 0) {
      return;
    }
LABEL_12:
    id v7 = objc_alloc_init(&OBJC_CLASS___RestoreBootstrapInfo);
    uint64_t v9 = v7;
    if (v7) {
      objc_setProperty_atomic_copy(v7, v8, @"Startup with Active Restores", 16LL);
    }
    [*(id *)(a1 + 32) _bootstrapWhenReadyWithInfo:v9];

    return;
  }

  sub_1001E1E9C((uint64_t)v4);

  if (v2 > 0) {
    goto LABEL_12;
  }
  self = objc_alloc_init(&OBJC_CLASS___RestoreBootstrapInfo);
  if (self)
  {
    objc_setProperty_atomic_copy(self, v10, @"Startup with hard failures that may need preflight", 16LL);
    self->_preflightOnly = 1;
  }

  [*(id *)(a1 + 32) _bootstrapWhenReadyWithInfo:self];
}

uint64_t sub_10020FDF8(uint64_t a1)
{
  if (!a1) {
    return 0LL;
  }
  uint64_t v6 = 0LL;
  id v7 = &v6;
  uint64_t v8 = 0x2020000000LL;
  uint64_t v9 = 0LL;
  id v1 = sub_1002EEBC0((uint64_t)&OBJC_CLASS___AppInstallsDatabaseStore);
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  void v5[2] = sub_1002137B8;
  _DWORD v5[3] = &unk_1003EAAD0;
  void v5[4] = &v6;
  [v2 readUsingSession:v5];

  uint64_t v3 = v7[3];
  _Block_object_dispose(&v6, 8);
  return v3;
}

void sub_10020FEA4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_10020FEBC(uint64_t a1, int a2)
{
  if (a1)
  {
    CFPropertyListRef v3 = sub_1002F9A28((uint64_t)&OBJC_CLASS___AppDefaultsManager);
    id v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
    uint64_t v6 = sub_1001960DC((uint64_t)&OBJC_CLASS___ActivityManager, 6uLL);
    id v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
    if ([v4 compare:v5] == (id)1)
    {
      id v8 = v4;
      uint64_t v9 = ASDLogHandleForCategory(29LL);
      id v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
      BOOL v11 = os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT);
      if (a2)
      {
        if (v11)
        {
          if (v8)
          {
            [v8 timeIntervalSince1970];
            uint64_t v13 = (uint64_t)v12;
          }

          else
          {
            uint64_t v13 = 0LL;
          }

          int v22 = 134218498;
          uint64_t v23 = v13;
          __int16 v24 = 2114;
          uint64_t v25 = v7;
          __int16 v26 = 2048;
          uint64_t v27 = 300LL;
          id v14 = "Using previously soft fail scheduled date: %{time_t}ld for activity: %{public}@ interval: %lld";
LABEL_16:
          _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, v14, (uint8_t *)&v22, 0x20u);
        }
      }

      else if (v11)
      {
        if (v8)
        {
          [v8 timeIntervalSince1970];
          uint64_t v19 = (uint64_t)v18;
        }

        else
        {
          uint64_t v19 = 0LL;
        }

        int v22 = 134218498;
        uint64_t v23 = v19;
        __int16 v24 = 2114;
        uint64_t v25 = v7;
        __int16 v26 = 2048;
        uint64_t v27 = 300LL;
        id v14 = "Keeping previously soft fail scheduled date: %{time_t}ld for activity: %{public}@ interval: %lld";
        goto LABEL_16;
      }
    }

    else
    {
      id v8 = (id)objc_claimAutoreleasedReturnValue([v5 dateByAddingTimeInterval:300.0]);
      uint64_t v15 = ASDLogHandleForCategory(29LL);
      id v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v15);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        if (v8)
        {
          [v8 timeIntervalSince1970];
          uint64_t v17 = (uint64_t)v16;
        }

        else
        {
          uint64_t v17 = 0LL;
        }

        int v22 = 134218498;
        uint64_t v23 = v17;
        __int16 v24 = 2114;
        uint64_t v25 = v7;
        __int16 v26 = 2048;
        uint64_t v27 = 300LL;
        id v14 = "Using new date: %{time_t}ld for activity: %{public}@ interval: %lld";
        goto LABEL_16;
      }
    }

    id v20 = sub_100196040((uint64_t)&OBJC_CLASS___ActivityManager);
    uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue(v20);
    sub_1001970EC(v21, 6LL, @"Restore", v8, @"Soft Failure");
  }

uint64_t sub_100210138(uint64_t a1)
{
  if (!a1) {
    return 0LL;
  }
  uint64_t v6 = 0LL;
  id v7 = &v6;
  uint64_t v8 = 0x2020000000LL;
  uint64_t v9 = 0LL;
  id v1 = sub_1002EEBC0((uint64_t)&OBJC_CLASS___AppInstallsDatabaseStore);
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  void v5[2] = sub_100213848;
  _DWORD v5[3] = &unk_1003EAAD0;
  void v5[4] = &v6;
  [v2 readUsingSession:v5];

  uint64_t v3 = v7[3];
  _Block_object_dispose(&v6, 8);
  return v3;
}

void sub_1002101E4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_1002101FC(uint64_t a1)
{
  if (!a1) {
    return 0LL;
  }
  uint64_t v6 = 0LL;
  id v7 = &v6;
  uint64_t v8 = 0x2020000000LL;
  uint64_t v9 = 0LL;
  id v1 = sub_1002EEBC0((uint64_t)&OBJC_CLASS___AppInstallsDatabaseStore);
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  void v5[2] = sub_100213728;
  _DWORD v5[3] = &unk_1003EAAD0;
  void v5[4] = &v6;
  [v2 readUsingSession:v5];

  uint64_t v3 = v7[3];
  _Block_object_dispose(&v6, 8);
  return v3;
}

void sub_1002102A8( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

id sub_1002102C0(uint64_t a1)
{
  if (!a1) {
    return 0LL;
  }
  uint64_t v5 = 0LL;
  uint64_t v6 = &v5;
  uint64_t v7 = 0x3032000000LL;
  uint64_t v8 = sub_10021037C;
  uint64_t v9 = sub_10021038C;
  id v10 = 0LL;
  id v1 = *(dispatch_queue_s **)(a1 + 8);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100210394;
  block[3] = &unk_1003ECDF8;
  void block[4] = &v5;
  dispatch_sync(v1, block);
  id v2 = (id)v6[5];
  _Block_object_dispose(&v5, 8);

  return v2;
}

uint64_t sub_10021037C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_10021038C(uint64_t a1)
{
}

void sub_100210394(uint64_t a1)
{
  id v2 = sub_1002E5EDC((uint64_t)&OBJC_CLASS___AppInstallPolicy);
  uint64_t v3 = objc_claimAutoreleasedReturnValue(v2);
  uint64_t v4 = *(void *)(*(void *)(a1 + 32) + 8LL);
  uint64_t v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;

  sub_1002E60D4(*(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 40LL), 3LL);
  sub_1002E6174(*(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 40LL), 4LL);
  sub_1002E5F7C(*(void *)(*(void *)(*(void *)(a1 + 32) + 8LL) + 40LL), 60LL);
}

id sub_10021040C(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  objc_opt_self(a1);
  uint64_t v9 = -[LogKey initWithAppInstallMemoryEntity:]( objc_alloc(&OBJC_CLASS____TtC9appstored6LogKey),  "initWithAppInstallMemoryEntity:",  v7);
  if (!v7 || !sub_1001E2598(v7, (uint64_t)@"device_based_vpp"))
  {
    uint64_t v12 = objc_claimAutoreleasedReturnValue([v7 valueForProperty:@"account_id"]);
    uint64_t v13 = objc_claimAutoreleasedReturnValue([v7 valueForProperty:@"downloader_id"]);
    id v14 = (void *)objc_claimAutoreleasedReturnValue([v7 valueForProperty:@"alt_dsid"]);
    if (v8 && v12 && [(id)v12 isEqualToNumber:v8])
    {
      uint64_t v15 = ASDLogHandleForCategory(29LL);
      double v16 = (os_log_s *)objc_claimAutoreleasedReturnValue(v15);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
      {
        id v17 = [v8 unsignedLongLongValue];
        double v18 = (void *)objc_claimAutoreleasedReturnValue(+[ActiveAccountObserver activeAccount](&OBJC_CLASS___ActiveAccountObserver, "activeAccount"));
        uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "ams_DSID"));
        *(_DWORD *)__int128 buf = 138412802;
        uint64_t v37 = v9;
        __int16 v38 = 2048;
        id v39 = v17;
        __int16 v40 = 2114;
        id v41 = v19;
        _os_log_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_DEFAULT,  "[%@] Migrating from accountID: %lld to active accountID: %{public}@",  buf,  0x20u);
      }

      BOOL v11 = (void *)objc_claimAutoreleasedReturnValue(+[ActiveAccountObserver activeAccount](&OBJC_CLASS___ActiveAccountObserver, "activeAccount"));
      goto LABEL_27;
    }

    if ((uint64_t)[(id)v13 longLongValue] < 1)
    {
      if ((uint64_t)[(id)v12 longLongValue] < 1)
      {
        if ([v14 length])
        {
          __int128 v30 = (void *)objc_claimAutoreleasedReturnValue( +[ACAccountStore ams_sharedAccountStore]( &OBJC_CLASS___ACAccountStore,  "ams_sharedAccountStore"));
          BOOL v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v30, "ams_iTunesAccountWithAltDSID:", v14));

          if (v11)
          {
            __int128 v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "ams_DSID"));

            if (!v31) {
              goto LABEL_27;
            }
            objc_super v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "ams_DSID"));
            [v7 setValue:v32 forProperty:@"account_id"];

            uint64_t v33 = ASDLogHandleForCategory(29LL);
            uint64_t v27 = (os_log_s *)objc_claimAutoreleasedReturnValue(v33);
            if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
            {
              id v34 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "ams_DSID"));
              *(_DWORD *)__int128 buf = 138412802;
              uint64_t v37 = v9;
              __int16 v38 = 2114;
              id v39 = v34;
              __int16 v40 = 2114;
              id v41 = v14;
              _os_log_impl( (void *)&_mh_execute_header,  v27,  OS_LOG_TYPE_DEFAULT,  "[%@] Setting accountID: %{public}@ discovered using alt-dsid: %{public}@",  buf,  0x20u);
            }

            goto LABEL_26;
          }
        }

id sub_1002108B4(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  uint64_t v6 = v5;
  if (a1)
  {
    if (v5)
    {
      id v7 = (void *)objc_claimAutoreleasedReturnValue( +[NSCharacterSet whitespaceAndNewlineCharacterSet]( &OBJC_CLASS___NSCharacterSet,  "whitespaceAndNewlineCharacterSet"));
      uint64_t v8 = objc_claimAutoreleasedReturnValue([v6 stringByTrimmingCharactersInSet:v7]);

      uint64_t v6 = (void *)v8;
    }

    if ([v6 length])
    {
      uint64_t v9 = (void *)objc_opt_new(&OBJC_CLASS___AMSAuthenticateOptions);
      [v9 setAuthenticationType:0];
      [v9 setDebugReason:@"Restore"];
      [v9 setCanMakeAccountActive:0];
      uint64_t v10 = ASDLocalizedString(@"RESTORE_SIGN_IN_AS_MESSAGE_%@");
      BOOL v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
      uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](&OBJC_CLASS___NSString, "stringWithFormat:", v11, v6));
      [v9 setReason:v12];

      id v13 = objc_alloc(&OBJC_CLASS___AMSAuthenticateTask);
      id v14 = sub_100255630((uint64_t)&OBJC_CLASS___URLBag);
      uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
      id v16 = [v13 initWithAccount:0 options:v9 bag:v15];

      [v16 setDelegate:a1];
      [v16 setUsername:v6];
      id v17 = (void *)objc_claimAutoreleasedReturnValue([v16 performAuthentication]);
      id v25 = 0LL;
      double v18 = (void *)objc_claimAutoreleasedReturnValue([v17 resultWithError:&v25]);
      id v19 = v25;

      if (v18)
      {
        a1 = (void *)objc_claimAutoreleasedReturnValue([v18 account]);
        uint64_t v20 = ASDLogHandleForCategory(29LL);
        uint64_t v21 = (os_log_s *)objc_claimAutoreleasedReturnValue(v20);
        if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
        {
          int v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "ams_DSID"));
          *(_DWORD *)__int128 buf = 138543619;
          uint64_t v27 = v22;
          __int16 v28 = 2113;
          __int128 v29 = v6;
          _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEFAULT,  "Logged into accountID: %{public}@ appleID: %{private}@",  buf,  0x16u);
        }
      }

      else
      {
        a1 = 0LL;
      }

      if (!a3) {
        goto LABEL_15;
      }
    }

    else
    {
      uint64_t v23 = ASDErrorWithTitleAndMessage(ASDErrorDomain, 530LL, @"appleID required", 0LL);
      id v19 = (id)objc_claimAutoreleasedReturnValue(v23);
      a1 = 0LL;
      if (!a3)
      {
LABEL_15:

        goto LABEL_16;
      }
    }

    if (v19) {
      *a3 = v19;
    }
    goto LABEL_15;
  }

void sub_100210B70(uint64_t a1, void *a2, void *a3, char a4)
{
  id v7 = a2;
  id v8 = a3;
  if (a1)
  {
    uint64_t v9 = *(dispatch_queue_s **)(a1 + 8);
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472LL;
    void v10[2] = sub_100210C2C;
    v10[3] = &unk_1003ECE20;
    char v13 = a4;
    void v10[4] = a1;
    id v11 = v7;
    id v12 = v8;
    dispatch_async(v9, v10);
  }
}

void sub_100210C2C(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 56))
  {
    sub_100210CC4(*(void **)(a1 + 32), *(void **)(a1 + 40), *(void **)(a1 + 48), 1);
  }

  else
  {
    self = objc_alloc_init(&OBJC_CLASS___RestoreBootstrapInfo);
    if (self)
    {
      objc_setProperty_atomic_copy(self, v2, *(id *)(a1 + 40), 16LL);
      objc_setProperty_atomic_copy(self, v3, *(id *)(a1 + 48), 24LL);
      self->_userInitiated = *(_BYTE *)(a1 + 56);
    }

    [*(id *)(a1 + 32) _bootstrapWhenReadyWithInfo:self];
  }

void sub_100210CC4(void *a1, void *a2, void *a3, int a4)
{
  id v7 = a2;
  id v8 = a3;
  if (a1)
  {
    uint64_t v9 = -[KeepAlive initWithName:]( objc_alloc(&OBJC_CLASS___KeepAlive),  "initWithName:",  @"com.apple.RestoreManager.bootstrap");
    uint64_t v10 = ASDLogHandleForCategory(29LL);
    id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
    BOOL v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);
    if (v8)
    {
      if (!v12) {
        goto LABEL_8;
      }
      int v36 = 138543874;
      uint64_t v37 = (uint64_t)v8;
      __int16 v38 = 2114;
      uint64_t v39 = (uint64_t)v7;
      __int16 v40 = 1024;
      LODWORD(v41) = a4;
      char v13 = "Bootstrapping restores for accountID: %{public}@ with reason: %{public}@ userInitiated: %d";
      id v14 = v11;
      uint32_t v15 = 28;
    }

    else
    {
      if (!v12) {
        goto LABEL_8;
      }
      int v36 = 138543362;
      uint64_t v37 = (uint64_t)v7;
      char v13 = "Bootstrapping all restores with reason: %{public}@";
      id v14 = v11;
      uint32_t v15 = 12;
    }

    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, v13, (uint8_t *)&v36, v15);
LABEL_8:

    id v16 = sub_10020ABEC(objc_alloc(&OBJC_CLASS___RestoreInfo), v8, a4);
    uint64_t v17 = ASDLogHandleForCategory(29LL);
    double v18 = (os_log_s *)objc_claimAutoreleasedReturnValue(v17);
    BOOL v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);
    if (v8)
    {
      if (!v19) {
        goto LABEL_18;
      }
      if (v16)
      {
        uint64_t v21 = v16[5];
        uint64_t v20 = v16[6];
      }

      else
      {
        uint64_t v20 = 0LL;
        uint64_t v21 = 0LL;
      }

      int v36 = 134218498;
      uint64_t v37 = v20;
      __int16 v38 = 2048;
      uint64_t v39 = v21;
      __int16 v40 = 2114;
      uint64_t v41 = (uint64_t)v8;
      int v22 = "Bootstrapped %ld ordered / %ld non-ordered restores for accountID: %{public}@";
      uint64_t v23 = v18;
      uint32_t v24 = 32;
    }

    else
    {
      if (!v19) {
        goto LABEL_18;
      }
      if (v16)
      {
        uint64_t v26 = v16[5];
        uint64_t v25 = v16[6];
      }

      else
      {
        uint64_t v25 = 0LL;
        uint64_t v26 = 0LL;
      }

      int v36 = 134218240;
      uint64_t v37 = v25;
      __int16 v38 = 2048;
      uint64_t v39 = v26;
      int v22 = "Bootstrapped %ld ordered / %ld non-ordered restores";
      uint64_t v23 = v18;
      uint32_t v24 = 22;
    }

    _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, v22, (uint8_t *)&v36, v24);
LABEL_18:

    sub_100213A2C((uint64_t)a1, 1LL, v16, v8);
    sub_100213A2C((uint64_t)a1, 0LL, v16, v8);
    uint64_t v27 = sub_100214FB8();
    uint64_t v28 = sub_10020FDF8((uint64_t)a1);
    uint64_t v29 = sub_1002101FC((uint64_t)a1);
    uint64_t v30 = ASDLogHandleForCategory(29LL);
    __int128 v31 = (os_log_s *)objc_claimAutoreleasedReturnValue(v30);
    if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
    {
      int v36 = 134218496;
      uint64_t v37 = v27;
      __int16 v38 = 2048;
      uint64_t v39 = v29;
      __int16 v40 = 2048;
      uint64_t v41 = v28;
      _os_log_impl( (void *)&_mh_execute_header,  v31,  OS_LOG_TYPE_DEFAULT,  "Bootstrap completed. Pending lookup: %ld hard failures: %ld soft failures: %ld",  (uint8_t *)&v36,  0x20u);
    }

    if (v28 < 1)
    {
      sub_1002F9B04((uint64_t)&OBJC_CLASS___AppDefaultsManager, 0LL);
      if ((a4 & 1) != 0) {
        goto LABEL_26;
      }
    }

    else
    {
      sub_10020FEBC((uint64_t)a1, 0);
      if ((a4 & 1) != 0) {
        goto LABEL_26;
      }
    }

    if (!v27 || v29 >= 1)
    {
      uint64_t v34 = ASDLogHandleForCategory(29LL);
      uint64_t v35 = (os_log_s *)objc_claimAutoreleasedReturnValue(v34);
      if (os_log_type_enabled(v35, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(v36) = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v35,  OS_LOG_TYPE_DEFAULT,  "Bootstrap completed. Will attempt to process failures if needed",  (uint8_t *)&v36,  2u);
      }

      sub_100215070(a1, 0);
      goto LABEL_32;
    }

void sub_1002110A8(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  if (a1)
  {
    uint64_t v10 = *(dispatch_queue_s **)(a1 + 8);
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472LL;
    void v11[2] = sub_10021117C;
    v11[3] = &unk_1003EA5C0;
    void v11[4] = a1;
    id v12 = v7;
    id v13 = v8;
    id v14 = v9;
    dispatch_async(v10, v11);
  }
}

uint64_t sub_10021117C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 56);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t, void))(result + 16))(result, 1LL, 0LL);
  }
  return result;
}

void sub_1002111C4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  if (a1)
  {
    id v12 = 0LL;
    int v6 = sub_100217BD0(a1, v5, a3, 1, &v12);
    id v7 = v12;
    uint64_t v8 = ASDLogHandleForCategory(29LL);
    id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
    BOOL v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);
    if (v6)
    {
      if (v10)
      {
        *(_DWORD *)__int128 buf = 138412290;
        id v14 = v5;
        _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "[%@] Dialog presentation completed successfully",  buf,  0xCu);
      }
    }

    else
    {
      if (v10)
      {
        *(_DWORD *)__int128 buf = 138412290;
        id v14 = v5;
        _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "[%@] Hard failing all apps that require distributor following dialog cancellation",  buf,  0xCu);
      }

      id v11 = sub_1002FD818((uint64_t)&OBJC_CLASS___AppInstallPredicates);
      id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
      sub_100217994(v9);
    }
  }
}

void sub_100211310(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = v3;
  if (a1)
  {
    id v5 = *(dispatch_queue_s **)(a1 + 8);
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472LL;
    _OWORD v6[2] = sub_100211398;
    v6[3] = &unk_1003E9DC0;
    id v7 = v3;
    uint64_t v8 = a1;
    dispatch_async(v5, v6);
  }
}

void sub_100211398(uint64_t a1)
{
  int v136 = sub_100212600((uint64_t)&OBJC_CLASS___RestoreManager);
  __int128 v144 = 0u;
  __int128 v145 = 0u;
  __int128 v146 = 0u;
  __int128 v147 = 0u;
  uint64_t v134 = a1;
  id obj = *(id *)(a1 + 32);
  id v135 = [obj countByEnumeratingWithState:&v144 objects:v159 count:16];
  if (v135)
  {
    uint64_t v133 = *(void *)v145;
    do
    {
      id v2 = 0LL;
      do
      {
        if (*(void *)v145 != v133) {
          objc_enumerationMutation(obj);
        }
        id v3 = *(void **)(v134 + 40);
        uint64_t v4 = *(id *)(*((void *)&v144 + 1) + 8LL * (void)v2);
        id v5 = v4;
        if (v3)
        {
          if (!v4)
          {
            uint64_t v17 = ASDLogHandleForCategory(29LL);
            double v18 = (os_log_s *)objc_claimAutoreleasedReturnValue(v17);
            if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
            {
              *(_WORD *)__int128 buf = 0;
              _os_log_error_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_ERROR,  "Restore attempted without metadata",  buf,  2u);
            }

            goto LABEL_99;
          }

          __int128 v137 = v3;
          int v6 = (void *)objc_claimAutoreleasedReturnValue([v4 valueForProperty:@"restore_type"]);
          id v7 = [v6 integerValue];

          uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v5 valueForProperty:@"priority"]);
          id v9 = [v8 integerValue];

          BOOL v10 = v7 == (id)2 || v9 == (id)2;
          unsigned int v141 = v10;
          id v140 = @"Promotion";
          uint64_t v11 = ASDLogHandleForCategory(29LL);
          id v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
          if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
          {
            id v13 = sub_100323C54(v5);
            id v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
            *(_DWORD *)__int128 buf = 138412546;
            *(void *)&uint8_t buf[4] = v14;
            *(_WORD *)&_BYTE buf[12] = 2114;
            *(void *)&buf[14] = v140;
            _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "[%@] %{public}@ start", buf, 0x16u);
          }

          BOOL v143 = (void *)objc_claimAutoreleasedReturnValue([v5 valueForProperty:@"coordinator_id"]);
          if (!v143)
          {
            sub_10021721C(v5, v141);
            BOOL v143 = (void *)objc_claimAutoreleasedReturnValue([v5 valueForProperty:@"coordinator_id"]);
          }

          if (v136)
          {
            if (v141) {
              uint64_t v15 = -1LL;
            }
            else {
              uint64_t v15 = -2LL;
            }
            id v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", v15));
            [v5 setValue:v16 forProperty:@"bootstrapped"];
          }

          else
          {
            [v5 setValue:&off_10040C6E8 forProperty:@"bootstrapped"];
          }

          uint64_t v19 = ASDLogHandleForCategory(2LL);
          uint64_t v20 = (os_log_s *)objc_claimAutoreleasedReturnValue(v19);
          if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v21 = sub_100323C54(v5);
            int v22 = (void *)objc_claimAutoreleasedReturnValue(v21);
            *(_DWORD *)__int128 buf = 138412546;
            *(void *)&uint8_t buf[4] = v22;
            *(_WORD *)&_BYTE buf[12] = 2114;
            *(void *)&buf[14] = v143;
            _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEFAULT,  "[%@] Importing restore with coordinatorID: %{public}@",  buf,  0x16u);
          }

          [v5 setValue:&off_10040C730 forProperty:@"restore_state"];
          uint64_t v142 = (void *)objc_claimAutoreleasedReturnValue( +[ActiveAccountObserver sharedInstance]( &OBJC_CLASS___ActiveAccountObserver,  "sharedInstance"));
          uint64_t v23 = sub_100323C54(v5);
          uint32_t v24 = (void *)objc_claimAutoreleasedReturnValue(v23);
          __int16 v139 = (void *)objc_claimAutoreleasedReturnValue([v142 oneAccountDSIDWithLogKey:v24]);

          *(void *)__int128 buf = 0LL;
          *(void *)&uint8_t buf[8] = buf;
          *(void *)&uint8_t buf[16] = 0x4010000000LL;
          id v173 = &unk_10039135E;
          id v25 = sub_1002EEBC0((uint64_t)&OBJC_CLASS___AppInstallsDatabaseStore);
          uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue(v25);
          v156[0] = _NSConcreteStackBlock;
          v156[1] = 3221225472LL;
          v156[2] = sub_100218D18;
          v156[3] = &unk_1003EA938;
          uint64_t v158 = buf;
          uint64_t v27 = v5;
          id v157 = v27;
          [v26 modifyUsingTransaction:v156];

          if (v9 != (id)2 && v7 == (id)2 && *(void *)(*(void *)&buf[8] + 56LL) == 2LL)
          {
            uint64_t v28 = ASDLogHandleForCategory(29LL);
            uint64_t v29 = (os_log_s *)objc_claimAutoreleasedReturnValue(v28);
            if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR))
            {
              uint64_t v30 = sub_100323C54(v27);
              __int128 v31 = (void *)objc_claimAutoreleasedReturnValue(v30);
              *(_DWORD *)id v165 = 138412290;
              *(void *)&v165[4] = v31;
              _os_log_error_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_ERROR,  "[%@] Restore import failed - already exists",  v165,  0xCu);
            }

            goto LABEL_53;
          }

          if (v136)
          {
            uint64_t v32 = sub_100323C54(v27);
            uint64_t v33 = (void *)objc_claimAutoreleasedReturnValue(v32);
            id v34 = sub_100323D88(v27);
            uint64_t v35 = (void *)objc_claimAutoreleasedReturnValue(v34);
            int v36 = sub_100217BD0((uint64_t)v137, v33, v35, 0, 0LL);

            if (v36)
            {
              uint64_t v37 = ASDLogHandleForCategory(29LL);
              uint64_t v29 = (os_log_s *)objc_claimAutoreleasedReturnValue(v37);
              if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR))
              {
                __int16 v38 = sub_100323C54(v27);
                uint64_t v39 = (void *)objc_claimAutoreleasedReturnValue(v38);
                *(_DWORD *)id v165 = 138412290;
                *(void *)&v165[4] = v39;
                _os_log_error_impl( (void *)&_mh_execute_header,  v29,  OS_LOG_TYPE_ERROR,  "[%@] Restore stopped due to needed missing distributor",  v165,  0xCu);
              }
            }

            else
            {
              uint64_t v50 = ASDLogHandleForCategory(29LL);
              __int128 v51 = (os_log_s *)objc_claimAutoreleasedReturnValue(v50);
              if (os_log_type_enabled(v51, OS_LOG_TYPE_ERROR))
              {
                id v112 = sub_100323C54(v27);
                uint64_t v113 = (void *)objc_claimAutoreleasedReturnValue(v112);
                *(_DWORD *)id v165 = 138412290;
                *(void *)&v165[4] = v113;
                _os_log_error_impl( (void *)&_mh_execute_header,  v51,  OS_LOG_TYPE_ERROR,  "[%@] Restore stopped due to needed missing distributor",  v165,  0xCu);
              }

              id v52 = sub_100323D88(v27);
              id v53 = (void *)objc_claimAutoreleasedReturnValue(v52);
              id v54 = sub_1002FE08C((uint64_t)&OBJC_CLASS___AppInstallPredicates, v53);
              uint64_t v29 = (os_log_s *)objc_claimAutoreleasedReturnValue(v54);

              BOOL v55 = sub_100323C54(v27);
              uint64_t v56 = (void *)objc_claimAutoreleasedReturnValue(v55);
              sub_100217994(v29);
            }

LABEL_89:
          uint64_t v104 = ASDLogHandleForCategory(29LL);
          char v105 = (os_log_s *)objc_claimAutoreleasedReturnValue(v104);
          if (os_log_type_enabled(v105, OS_LOG_TYPE_ERROR))
          {
            uint64_t v114 = sub_100323C54(v27);
            uint64_t v115 = (void *)objc_claimAutoreleasedReturnValue(v114);
            *(_DWORD *)id v165 = 138412546;
            *(void *)&v165[4] = v115;
            *(_WORD *)&v165[12] = 2114;
            *(void *)&v165[14] = v140;
            _os_log_error_impl( (void *)&_mh_execute_header,  v105,  OS_LOG_TYPE_ERROR,  "[%@][%{public}@] failed metadata lookup",  v165,  0x16u);
          }

          goto LABEL_92;
        }

LABEL_100:
        id v2 = (char *)v2 + 1;
      }

      while (v135 != v2);
      id v127 = [obj countByEnumeratingWithState:&v144 objects:v159 count:16];
      id v135 = v127;
    }

    while (v127);
  }
}

void sub_100212528(_Unwind_Exception *a1)
{
}

uint64_t sub_100212600(uint64_t a1)
{
  uint64_t v1 = (void *)objc_claimAutoreleasedReturnValue(+[LSApplicationWorkspace defaultWorkspace](&OBJC_CLASS___LSApplicationWorkspace, "defaultWorkspace"));
  uint64_t v2 = [v1 applicationIsInstalled:@"com.apple.TVAppStore"] ^ 1;

  return v2;
}

id sub_100212648(uint64_t a1)
{
  if (!a1) {
    return 0LL;
  }
  uint64_t v5 = 0LL;
  int v6 = &v5;
  uint64_t v7 = 0x3032000000LL;
  uint64_t v8 = sub_10021037C;
  id v9 = sub_10021038C;
  id v10 = 0LL;
  uint64_t v1 = *(dispatch_queue_s **)(a1 + 8);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  void v4[2] = sub_100212708;
  v4[3] = &unk_1003E9BE0;
  void v4[4] = a1;
  void v4[5] = &v5;
  dispatch_sync(v1, v4);
  id v2 = (id)v6[5];
  _Block_object_dispose(&v5, 8);

  return v2;
}

void sub_100212708(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    uint64_t v39 = *(void *)(a1 + 32);
    uint64_t v1 = objc_opt_new(&OBJC_CLASS___NSMutableDictionary);
    id v2 = sub_1002EEBC0((uint64_t)&OBJC_CLASS___AppInstallsDatabaseStore);
    id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
    v51[0] = _NSConcreteStackBlock;
    v51[1] = 3221225472LL;
    v51[2] = sub_100218538;
    void v51[3] = &unk_1003ED090;
    uint64_t v4 = v1;
    id v52 = v4;
    [v3 readUsingSession:v51];

    uint64_t v5 = -[NSSortDescriptor initWithKey:ascending:comparator:]( objc_alloc(&OBJC_CLASS___NSSortDescriptor),  "initWithKey:ascending:comparator:",  0LL,  0LL,  &stru_1003ECF00);
    uint64_t v42 = v4;
    int v6 = (void *)objc_claimAutoreleasedReturnValue(-[NSMutableDictionary keyEnumerator](v4, "keyEnumerator"));
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v6 allObjects]);
    __int16 v38 = v5;
    BOOL v55 = v5;
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v55, 1LL));
    id v9 = (void *)objc_claimAutoreleasedReturnValue([v7 sortedArrayUsingDescriptors:v8]);

    id v10 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    __int128 v47 = 0u;
    __int128 v48 = 0u;
    __int128 v49 = 0u;
    __int128 v50 = 0u;
    id obj = v9;
    id v11 = [obj countByEnumeratingWithState:&v47 objects:v54 count:16];
    if (v11)
    {
      id v12 = v11;
      uint64_t v13 = *(void *)v48;
      do
      {
        for (uint64_t i = 0LL; i != v12; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v48 != v13) {
            objc_enumerationMutation(obj);
          }
          uint64_t v15 = *(void **)(*((void *)&v47 + 1) + 8LL * (void)i);
          id v16 = (void *)objc_claimAutoreleasedReturnValue(-[NSMutableDictionary objectForKeyedSubscript:](v42, "objectForKeyedSubscript:", v15));
          uint64_t v17 = sub_1002C9300((uint64_t)[v15 integerValue]);
          double v18 = (void *)objc_claimAutoreleasedReturnValue(v17);
          uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( NSString,  "stringWithFormat:",  @"%@ (%ld) ----------------------",  v18,  [v16 count]));
          -[NSMutableArray addObject:](v10, "addObject:", v19);

          __int128 v45 = 0u;
          __int128 v46 = 0u;
          __int128 v43 = 0u;
          __int128 v44 = 0u;
          id v20 = v16;
          id v21 = [v20 countByEnumeratingWithState:&v43 objects:v53 count:16];
          if (v21)
          {
            id v22 = v21;
            uint64_t v23 = *(void *)v44;
            do
            {
              for (uint64_t j = 0LL; j != v22; uint64_t j = (char *)j + 1)
              {
                if (*(void *)v44 != v23) {
                  objc_enumerationMutation(v20);
                }
                -[NSMutableArray addObject:](v10, "addObject:", *(void *)(*((void *)&v43 + 1) + 8LL * (void)j));
              }

              id v22 = [v20 countByEnumeratingWithState:&v43 objects:v53 count:16];
            }

            while (v22);
          }
        }

        id v12 = [obj countByEnumeratingWithState:&v47 objects:v54 count:16];
      }

      while (v12);
    }

    id v25 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
    -[NSMutableDictionary setObject:forKeyedSubscript:](v25, "setObject:forKeyedSubscript:", v10, @"items");
    uint64_t v26 = +[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", sub_100214FB8());
    uint64_t v27 = (void *)objc_claimAutoreleasedReturnValue(v26);
    -[NSMutableDictionary setObject:forKeyedSubscript:]( v25,  "setObject:forKeyedSubscript:",  v27,  @"totalRemaining");

    uint64_t v28 = +[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", sub_100210138(v39));
    uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue(v28);
    -[NSMutableDictionary setObject:forKeyedSubscript:]( v25,  "setObject:forKeyedSubscript:",  v29,  @"activeRestoreCount");

    uint64_t v30 = +[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", sub_10020FDF8(v39));
    __int128 v31 = (void *)objc_claimAutoreleasedReturnValue(v30);
    -[NSMutableDictionary setObject:forKeyedSubscript:]( v25,  "setObject:forKeyedSubscript:",  v31,  @"totalSoftFailureCount");

    uint64_t v32 = +[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", sub_1002101FC(v39));
    uint64_t v33 = (void *)objc_claimAutoreleasedReturnValue(v32);
    -[NSMutableDictionary setObject:forKeyedSubscript:]( v25,  "setObject:forKeyedSubscript:",  v33,  @"totalHardFailureCount");

    CFPropertyListRef v34 = sub_1002F9A28((uint64_t)&OBJC_CLASS___AppDefaultsManager);
    uint64_t v35 = (void *)objc_claimAutoreleasedReturnValue(v34);
    -[NSMutableDictionary setObject:forKeyedSubscript:]( v25,  "setObject:forKeyedSubscript:",  v35,  @"softFailureRetryDate");
  }

  else
  {
    id v25 = 0LL;
  }

  uint64_t v36 = *(void *)(*(void *)(a1 + 40) + 8LL);
  uint64_t v37 = *(void **)(v36 + 40);
  *(void *)(v36 + 40) = v25;
}

void sub_100212B78(uint64_t a1, void *a2, char a3)
{
  id v5 = a2;
  int v6 = v5;
  if (a1)
  {
    uint64_t v7 = *(dispatch_queue_s **)(a1 + 8);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_100212C0C;
    block[3] = &unk_1003EA2C0;
    void block[4] = a1;
    id v9 = v5;
    char v10 = a3;
    dispatch_async(v7, block);
  }
}

void sub_100212C0C(uint64_t a1)
{
}

void sub_100212C1C(uint64_t a1, void *a2, unsigned int a3)
{
  id v4 = a2;
  if (a1)
  {
    id v32 = v4;
    id v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "ams_DSID"));
    int v6 = (void *)objc_claimAutoreleasedReturnValue([v32 username]);
    uint64_t v7 = ASDLogHandleForCategory(29LL);
    uint64_t v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      LODWORD(buf) = 138543362;
      *(void *)((char *)&buf + 4) = v5;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "Retrying restore of apps for account: %{public}@",  (uint8_t *)&buf,  0xCu);
    }

    *(void *)&__int128 buf = 0LL;
    *((void *)&buf + 1) = &buf;
    uint64_t v58 = 0x3032000000LL;
    id v59 = sub_10021037C;
    BOOL v60 = sub_10021038C;
    uint64_t v61 = objc_opt_new(&OBJC_CLASS___NSMutableSet);
    uint64_t v44 = 0LL;
    __int128 v45 = &v44;
    uint64_t v46 = 0x3032000000LL;
    __int128 v47 = sub_10021037C;
    __int128 v48 = sub_10021038C;
    __int128 v49 = objc_opt_new(&OBJC_CLASS___NSMutableSet);
    id v9 = sub_1002EEBC0((uint64_t)&OBJC_CLASS___AppInstallsDatabaseStore);
    char v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
    v39[0] = _NSConcreteStackBlock;
    v39[1] = 3221225472LL;
    v39[2] = sub_10021A038;
    v39[3] = &unk_1003ED068;
    v39[4] = a1;
    uint64_t v33 = v6;
    id v40 = v33;
    CFPropertyListRef v34 = v5;
    id v41 = v34;
    p___int128 buf = &buf;
    __int128 v43 = &v44;
    [v10 modifyUsingTransaction:v39];

    if ([*(id *)(*((void *)&buf + 1) + 40) count])
    {
      uint64_t v11 = ASDLogHandleForCategory(29LL);
      id v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(*((void *)&buf + 1) + 40) allObjects]);
        id v14 = (_TtC9appstored6LogKey *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "componentsJoinedByString:", @", "));
        *(_DWORD *)__int128 v51 = 138543874;
        id v52 = v34;
        __int16 v53 = 2114;
        id v54 = v33;
        __int16 v55 = 2114;
        uint64_t v56 = v14;
        _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "Re-bootstrapping account: %{public}@/%{public}@ apps: [%{public}@]",  v51,  0x20u);
      }

      __int128 v37 = 0u;
      __int128 v38 = 0u;
      __int128 v35 = 0u;
      __int128 v36 = 0u;
      id v15 = *(id *)(*((void *)&buf + 1) + 40LL);
      id v16 = [v15 countByEnumeratingWithState:&v35 objects:v50 count:16];
      if (v16)
      {
        uint64_t v17 = *(void *)v36;
        do
        {
          for (uint64_t i = 0LL; i != v16; uint64_t i = (char *)i + 1)
          {
            if (*(void *)v36 != v17) {
              objc_enumerationMutation(v15);
            }
            uint64_t v19 = *(void **)(*((void *)&v35 + 1) + 8LL * (void)i);
            id v20 = -[LogKey initWithAppInstallMemoryEntity:]( objc_alloc(&OBJC_CLASS____TtC9appstored6LogKey),  "initWithAppInstallMemoryEntity:",  v19);
            uint64_t v21 = ASDLogHandleForCategory(29LL);
            id v22 = (os_log_s *)objc_claimAutoreleasedReturnValue(v21);
            if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)__int128 v51 = 138412802;
              id v52 = v20;
              __int16 v53 = 2114;
              id v54 = v34;
              __int16 v55 = 2114;
              uint64_t v56 = v33;
              _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_DEFAULT,  "[%@] Retrying following authentication of account: %{public}@/%{public}@",  v51,  0x20u);
            }

            sub_10021721C(v19, 0);
          }

          id v16 = [v15 countByEnumeratingWithState:&v35 objects:v50 count:16];
        }

        while (v16);
      }

      id v23 = sub_10020FAD4((uint64_t)&OBJC_CLASS___RestoreManager);
      uint32_t v24 = (void *)objc_claimAutoreleasedReturnValue(v23);
      id v25 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Retry for account: %@/%@",  v33,  v34));
      uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v32, "ams_DSID"));
      sub_100210B70(v24, v25, v26, a3);
    }

    if ([(id)v45[5] count])
    {
      uint64_t v27 = ASDLogHandleForCategory(29LL);
      uint64_t v28 = (os_log_s *)objc_claimAutoreleasedReturnValue(v27);
      if (os_log_type_enabled(v28, OS_LOG_TYPE_INFO))
      {
        uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue([(id)v45[5] allObjects]);
        uint64_t v30 = (_TtC9appstored6LogKey *)objc_claimAutoreleasedReturnValue(objc_msgSend(v29, "componentsJoinedByString:", @", "));
        *(_DWORD *)__int128 v51 = 138543362;
        id v52 = v30;
        _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_INFO,  "Non-matched failed restore apps are: [%{public}@]",  v51,  0xCu);
      }
    }

    _Block_object_dispose(&v44, 8);
    _Block_object_dispose(&buf, 8);

    id v4 = v32;
  }
}

void sub_10021311C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33, uint64_t a34, char a35)
{
}

void sub_100213174(uint64_t a1)
{
  if (a1)
  {
    uint64_t v1 = *(dispatch_queue_s **)(a1 + 8);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472LL;
    block[2] = sub_1002131D0;
    block[3] = &unk_1003E9880;
    void block[4] = a1;
    dispatch_async(v1, block);
  }

void sub_1002131D0(uint64_t a1)
{
  id v2 = objc_alloc_init(&OBJC_CLASS____TtC9appstored6LogKey);
  uint64_t v3 = *(void *)(a1 + 32);
  __int128 v48 = v2;
  if (v3)
  {
    uint64_t v4 = ASDLogHandleForCategory(29LL);
    id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 138412290;
      __int128 v50 = v48;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_DEFAULT,  "[%@] Retrying restore of apps that need a distributor",  buf,  0xCu);
    }

    id v6 = sub_1002FDD80((uint64_t)&OBJC_CLASS___AppInstallPredicates);
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
    id v8 = sub_1002182C4(0LL, v7);
    id v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
    if ([v9 count])
    {
      uint64_t v10 = ASDLogHandleForCategory(29LL);
      uint64_t v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        id v12 = (void *)objc_claimAutoreleasedReturnValue([v9 array]);
        uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "componentsJoinedByString:", @", "));
        *(_DWORD *)__int128 buf = 138412546;
        __int128 v50 = v48;
        __int16 v51 = 2114;
        id v52 = v13;
        _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "[%@] Updated the bootstrap state of system apps: [%{public}@]",  buf,  0x16u);
      }
    }

    id v14 = sub_1002FDA54((uint64_t)&OBJC_CLASS___AppInstallPredicates);
    id v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
    id v16 = sub_1002182C4(0LL, v15);
    uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
    if ([v17 count] == (id)1)
    {
      uint64_t v18 = ASDLogHandleForCategory(29LL);
      uint64_t v19 = (os_log_s *)objc_claimAutoreleasedReturnValue(v18);
      if (!os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_17;
      }
      id v20 = (void *)objc_claimAutoreleasedReturnValue([v17 firstObject]);
      *(_DWORD *)__int128 buf = 138412546;
      __int128 v50 = v48;
      __int16 v51 = 2114;
      id v52 = v20;
      uint64_t v21 = "[%@] Updated the bootstrap state of %{public}@ to user initiated";
      id v22 = v19;
      uint32_t v23 = 22;
    }

    else
    {
      id v24 = [v17 count];
      uint64_t v25 = ASDLogHandleForCategory(29LL);
      uint64_t v19 = (os_log_s *)objc_claimAutoreleasedReturnValue(v25);
      BOOL v26 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);
      if ((unint64_t)v24 < 2)
      {
        if (v26)
        {
          *(_DWORD *)__int128 buf = 138412290;
          __int128 v50 = v48;
          _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEFAULT,  "[%@] No user initiated distributor dependent apps in found",  buf,  0xCu);
        }

void sub_100213728(uint64_t a1, void *a2)
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([a2 connection]);
  id v4 = sub_1002FDEB4((uint64_t)&OBJC_CLASS___AppInstallPredicates);
  id v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  id v6 = sub_10024C1D0((uint64_t)&OBJC_CLASS___AppInstallEntity, v3, v5);
  id v7 = (id)objc_claimAutoreleasedReturnValue(v6);

  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = [v7 countOfEntities];
}

void sub_1002137B8(uint64_t a1, void *a2)
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([a2 connection]);
  id v4 = sub_1002FDC1C((uint64_t)&OBJC_CLASS___AppInstallPredicates);
  id v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  id v6 = sub_10024C1D0((uint64_t)&OBJC_CLASS___AppInstallEntity, v3, v5);
  id v7 = (id)objc_claimAutoreleasedReturnValue(v6);

  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = [v7 countOfEntities];
}

void sub_100213848(uint64_t a1, void *a2)
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([a2 connection]);
  id v4 = sub_1002FD3C8((uint64_t)&OBJC_CLASS___AppInstallPredicates);
  id v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  id v6 = sub_10024C1D0((uint64_t)&OBJC_CLASS___AppInstallEntity, v3, v5);
  id v7 = (id)objc_claimAutoreleasedReturnValue(v6);

  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = [v7 countOfEntities];
}

uint64_t sub_1002138D8(uint64_t a1)
{
  if (!a1) {
    return 0LL;
  }
  uint64_t v6 = 0LL;
  id v7 = &v6;
  uint64_t v8 = 0x2020000000LL;
  uint64_t v9 = 0LL;
  id v1 = sub_1002EEBC0((uint64_t)&OBJC_CLASS___AppInstallsDatabaseStore);
  id v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472LL;
  void v5[2] = sub_10021399C;
  _DWORD v5[3] = &unk_1003EAAD0;
  void v5[4] = &v6;
  [v2 readUsingSession:v5];

  uint64_t v3 = v7[3];
  _Block_object_dispose(&v6, 8);
  return v3;
}

void sub_100213984( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_10021399C(uint64_t a1, void *a2)
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([a2 connection]);
  id v4 = sub_1002FD818((uint64_t)&OBJC_CLASS___AppInstallPredicates);
  id v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  id v6 = sub_10024C1D0((uint64_t)&OBJC_CLASS___AppInstallEntity, v3, v5);
  id v7 = (id)objc_claimAutoreleasedReturnValue(v6);

  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = [v7 countOfEntities];
}

void sub_100213A2C(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  self = a3;
  id v224 = a4;
  uint64_t v232 = a2;
  if (a2 == 1)
  {
    uint64_t v11 = -[LogKey initWithCategory:base:]( objc_alloc(&OBJC_CLASS____TtC9appstored6LogKey),  "initWithCategory:base:",  @"Ordered",  &stru_1003F3E40);
    uint64_t v7 = objc_claimAutoreleasedReturnValue(-[LogKey makeActivity](v11, "makeActivity"));

    id Property = self;
    if (self)
    {
      ptrdiff_t v10 = 32LL;
      goto LABEL_7;
    }

LABEL_108:
          uint64_t v113 = (char *)[v39 count];
          uint64_t v114 = ASDLogHandleForCategory(29LL);
          uint64_t v115 = (os_log_s *)objc_claimAutoreleasedReturnValue(v114);
          if (os_log_type_enabled(v115, OS_LOG_TYPE_DEFAULT))
          {
            if ((v38 & 1) != 0) {
              id v117 = 0LL;
            }
            else {
              id v117 = objc_getProperty(v56, v116, 16LL, 1);
            }
            SEL v119 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v117, "ams_DSID"));
            if ((v246 & 1) != 0) {
              id v120 = 0LL;
            }
            else {
              id v120 = objc_getProperty(v56, v118, 32LL, 1);
            }
            id v121 = [v120 count];
            *(_DWORD *)id v279 = 138544130;
            *(void *)&v279[4] = v119;
            *(_WORD *)&v279[12] = 2048;
            *(void *)&v279[14] = v241;
            *(_WORD *)&v279[22] = 2048;
            unint64_t v280 = v121;
            LOWORD(v281[0]) = 2048;
            *(id *)((char *)v281 + 2) = &v113[-v41];
            _os_log_impl( (void *)&_mh_execute_header,  v115,  OS_LOG_TYPE_DEFAULT,  "Batch complete for accountID: %{public}@ batch successes: %ld batch failures: %ld batch remaining: %ld",  v279,  0x2Au);

            int v38 = v246;
          }

          if ((v38 & 1) != 0) {
            id v123 = 0LL;
          }
          else {
            id v123 = objc_getProperty(v56, v122, 48LL, 1);
          }
          uint32_t v40 = v244;
          unint64_t v245 = v56;
          if ([v123 count])
          {
            __int128 v264 = 0u;
            __int128 v265 = 0u;
            __int128 v262 = 0u;
            __int128 v263 = 0u;
            if ((v38 & 1) != 0) {
              id v125 = 0LL;
            }
            else {
              id v125 = objc_getProperty(v56, v124, 48LL, 1);
            }
            id v126 = v125;
            id v127 = [v126 countByEnumeratingWithState:&v262 objects:v278 count:16];
            if (v127)
            {
              id v128 = v127;
              uint64_t v129 = *(void *)v263;
              do
              {
                id v130 = 0LL;
                do
                {
                  if (*(void *)v263 != v129) {
                    objc_enumerationMutation(v126);
                  }
                  uint64_t v131 = *(void **)(*((void *)&v262 + 1) + 8LL * (void)v130);
                  unsigned __int8 v132 = objc_alloc(&OBJC_CLASS___ProgressInfo);
                  id v133 = sub_100323D88(v131);
                  uint64_t v134 = (void *)objc_claimAutoreleasedReturnValue(v133);
                  id v135 = sub_100323C54(v131);
                  int v136 = (void *)objc_claimAutoreleasedReturnValue(v135);
                  __int128 v137 = sub_10031EDD4((id *)&v132->super.isa, v134, 0LL, v136);

                  id v138 = sub_100323DD0(v131);
                  __int16 v139 = (void *)objc_claimAutoreleasedReturnValue(v138);
                  unsigned int v141 = v139;
                  if (v137)
                  {
                    objc_setProperty_atomic(v137, v140, v139, 152LL);

                    v137[18] = (id)384;
                  }

                  else
                  {
                  }

                  id v142 = sub_1002B0944((uint64_t)&OBJC_CLASS___ProgressCache);
                  BOOL v143 = (void *)objc_claimAutoreleasedReturnValue(v142);
                  sub_1002B0A98((uint64_t)v143, v137, @"Restore bootstrap complete");

                  id v144 = sub_1002B0944((uint64_t)&OBJC_CLASS___ProgressCache);
                  __int128 v145 = (void *)objc_claimAutoreleasedReturnValue(v144);
                  id v146 = sub_100323D88(v131);
                  __int128 v147 = (void *)objc_claimAutoreleasedReturnValue(v146);
                  id v148 = sub_100323DD0(v131);
                  id v149 = (void *)objc_claimAutoreleasedReturnValue(v148);
                  sub_1002B1F5C((uint64_t)v145, v147, 0.0);

                  id v130 = (char *)v130 + 1;
                }

                while (v128 != v130);
                id v150 = [v126 countByEnumeratingWithState:&v262 objects:v278 count:16];
                id v128 = v150;
              }

              while (v150);
            }

            int v38 = v246;
            if ((v246 & 1) != 0)
            {
              id v151 = 0LL;
              p_superclass = (__objc2_class **)(&OBJC_METACLASS___SystemAppLookupItem + 8);
              id v39 = v239;
              uint32_t v40 = v244;
              uint64_t v56 = v245;
              unint64_t v41 = v242;
              goto LABEL_135;
            }

            uint32_t v40 = v244;
            uint64_t v56 = v245;
            p_superclass = (__objc2_class **)(&OBJC_METACLASS___SystemAppLookupItem + 8);
            id v39 = v239;
            unint64_t v41 = v242;
            if (v244->_autoFinish) {
              sub_1002163D4(v244->_userInitiated, 0);
            }
          }

          else if ((v38 & 1) != 0)
          {
            id v151 = 0LL;
            goto LABEL_135;
          }

          id v151 = objc_getProperty(v56, v124, 32LL, 1);
LABEL_135:
          if ([v151 count])
          {
            __int128 v260 = 0u;
            __int128 v261 = 0u;
            __int128 v258 = 0u;
            __int128 v259 = 0u;
            if ((v38 & 1) != 0) {
              id v153 = 0LL;
            }
            else {
              id v153 = objc_getProperty(v56, v152, 32LL, 1);
            }
            id v154 = v153;
            id v155 = [v154 countByEnumeratingWithState:&v258 objects:v277 count:16];
            if (v155)
            {
              id v156 = v155;
              uint64_t v157 = *(void *)v259;
              do
              {
                for (uint64_t i = 0LL; i != v156; uint64_t i = (char *)i + 1)
                {
                  if (*(void *)v259 != v157) {
                    objc_enumerationMutation(v154);
                  }
                  id v159 = *(void **)(*((void *)&v258 + 1) + 8LL * (void)i);
                  id v160 = sub_1002D79EC(v159);
                  __int16 v161 = (void *)objc_claimAutoreleasedReturnValue(v160);
                  if (!sub_100219110(v161))
                  {
                    uint64_t v276 = v159;
                    id v162 = (void *)objc_claimAutoreleasedReturnValue( +[NSArray arrayWithObjects:count:]( &OBJC_CLASS___NSArray,  "arrayWithObjects:count:",  &v276,  1LL));
                    uint64_t v56 = v245;
                    sub_100215A54((uint64_t)(p_superclass + 109), v162, @"Metadata lookup failure");
                  }
                }

                id v156 = [v154 countByEnumeratingWithState:&v258 objects:v277 count:16];
              }

              while (v156);
            }

            id v39 = v239;
            uint32_t v40 = v244;
            int v38 = v246;
            unint64_t v41 = v242;
          }

          if ((v38 & 1) != 0) {
            id v163 = 0LL;
          }
          else {
            id v163 = objc_getProperty(v56, v152, 48LL, 1);
          }
          v241 += (uint64_t)[v163 count];

LABEL_151:
          v41 += (unint64_t)v243;
        }

        while (v41 < (unint64_t)[v39 count]);
        if (v42) {
          id v42 = v42;
        }
LABEL_184:

        id v171 = v42;
        if ((v38 & 1) != 0) {
          id v172 = 0LL;
        }
        else {
          id v172 = objc_getProperty(v40, v170, 48LL, 1);
        }
        id v174 = [v172 count];
        if ((v38 & 1) != 0) {
          id v175 = 0LL;
        }
        else {
          id v175 = objc_getProperty(v244, v173, 32LL, 1);
        }
        id v177 = [v175 count];
        if (v232 == 1 && v171)
        {
          id v178 = self;
          if (self) {
            id v178 = objc_getProperty(self, v176, 24LL, 1);
          }
          id v179 = v178;
          uint64_t v180 = (void *)objc_claimAutoreleasedReturnValue([v179 objectForKeyedSubscript:v236]);

          __int128 v252 = 0u;
          __int128 v253 = 0u;
          __int128 v250 = 0u;
          __int128 v251 = 0u;
          id v181 = v180;
          id v182 = [v181 countByEnumeratingWithState:&v250 objects:v274 count:16];
          if (v182)
          {
            id v183 = v182;
            uint64_t v184 = *(void *)v251;
            do
            {
              uint64_t v185 = 0LL;
              do
              {
                if (*(void *)v251 != v184) {
                  objc_enumerationMutation(v181);
                }
                id v186 = *(void **)(*((void *)&v250 + 1) + 8LL * (void)v185);
                sub_1002D7A84(v186, v171);
                if ((v246 & 1) != 0) {
                  id v188 = 0LL;
                }
                else {
                  id v188 = objc_getProperty(v244, v187, 56LL, 1);
                }
                [v188 addObject:v186];
                uint64_t v185 = (char *)v185 + 1;
              }

              while (v183 != v185);
              id v189 = [v181 countByEnumeratingWithState:&v250 objects:v274 count:16];
              id v183 = v189;
            }

            while (v189);
          }

          uint64_t v190 = ASDLogHandleForCategory(29LL);
          id v191 = (os_log_s *)objc_claimAutoreleasedReturnValue(v190);
          if (os_log_type_enabled(v191, OS_LOG_TYPE_ERROR))
          {
            id v216 = [v181 count];
            *(_DWORD *)__int128 buf = 138412802;
            *(void *)&uint8_t buf[4] = v229;
            *(_WORD *)&_BYTE buf[12] = 2114;
            *(void *)&buf[14] = v236;
            __int16 v284 = 2048;
            uint64_t v285 = (uint64_t)v216;
            _os_log_error_impl( (void *)&_mh_execute_header,  v191,  OS_LOG_TYPE_ERROR,  "[%@][%{public}@] Hard failing %ld non ordered restores due to token failure",  buf,  0x20u);
          }

          id v193 = self;
          p_superclass = (__objc2_class **)(&OBJC_METACLASS___SystemAppLookupItem + 8);
          if (self) {
            id v193 = objc_getProperty(self, v192, 24LL, 1);
          }
          id v194 = v193;
          id v195 = (void *)objc_claimAutoreleasedReturnValue([v194 objectForKeyedSubscript:v236]);

          if (v195)
          {
            id v197 = self;
            if (self) {
              id v197 = objc_getProperty(self, v196, 24LL, 1);
            }
            id v198 = v197;
            [v198 removeObjectForKey:v236];
          }

          id v39 = v239;
          if ((v246 & 1) != 0)
          {
LABEL_212:
            id v199 = 0LL;
            int v200 = 1;
            goto LABEL_215;
          }
        }

        else if ((v38 & 1) != 0)
        {
          goto LABEL_212;
        }

        id v199 = objc_getProperty(v244, v176, 56LL, 1);
        int v200 = 0;
LABEL_215:
        if ([v199 count])
        {
          uint64_t v201 = ASDLogHandleForCategory(29LL);
          NSErrorUserInfoKey v202 = (os_log_s *)objc_claimAutoreleasedReturnValue(v201);
          if (os_log_type_enabled(v202, OS_LOG_TYPE_ERROR))
          {
            if (v200)
            {
              id v214 = [0 count];
              int failCoordinators = 0;
            }

            else
            {
              id v214 = objc_msgSend(objc_getProperty(v244, v203, 56, 1), "count");
              int failCoordinators = v244->_failCoordinators;
            }

            *(_DWORD *)__int128 buf = 138413058;
            *(void *)&uint8_t buf[4] = v229;
            *(_WORD *)&_BYTE buf[12] = 2114;
            *(void *)&buf[14] = v236;
            __int16 v284 = 2048;
            uint64_t v285 = (uint64_t)v214;
            __int16 v286 = 1024;
            LODWORD(v287) = failCoordinators;
            _os_log_error_impl( (void *)&_mh_execute_header,  v202,  OS_LOG_TYPE_ERROR,  "[%@][%{public}@] Failing %ld token failures. Failing coordinators: %d",  buf,  0x26u);
          }

          id v204 = sub_1002EEBC0((uint64_t)&OBJC_CLASS___AppInstallsDatabaseStore);
          __int16 v205 = (void *)objc_claimAutoreleasedReturnValue(v204);
          v248[0] = _NSConcreteStackBlock;
          v248[1] = 3221225472LL;
          v248[2] = sub_100215768;
          v248[3] = &unk_1003EA9D8;
          id v206 = v244;
          __int128 v249 = v206;
          [v205 modifyUsingTransaction:v248];

          if ((v200 & 1) == 0 && v206->_failCoordinators)
          {
            id v208 = objc_getProperty(v206, v207, 56LL, 1);
            sub_100215A54((uint64_t)(p_superclass + 109), v208, @"Batch Token failure");
          }
        }

        v233 += (uint64_t)v174;
        uint64_t v209 = ASDLogHandleForCategory(29LL);
        unsigned __int8 v210 = (os_log_s *)objc_claimAutoreleasedReturnValue(v209);
        if (os_log_type_enabled(v210, OS_LOG_TYPE_DEFAULT))
        {
          if ((v200 & 1) != 0) {
            id v212 = 0LL;
          }
          else {
            id v212 = objc_getProperty(v244, v211, 32LL, 1);
          }
          id v213 = [v212 count];
          *(_DWORD *)__int128 buf = 138413058;
          *(void *)&uint8_t buf[4] = v229;
          *(_WORD *)&_BYTE buf[12] = 2114;
          *(void *)&buf[14] = v236;
          __int16 v284 = 2048;
          uint64_t v285 = v233;
          __int16 v286 = 2048;
          id v287 = v213;
          _os_log_impl( (void *)&_mh_execute_header,  v210,  OS_LOG_TYPE_DEFAULT,  "[%@][%{public}@] Lookup complete with %ld successful lookups and %ld failures",  buf,  0x2Au);
        }

        id v231 = &v231[(void)v177];

        uint64_t v20 = v230 + 1;
        uint64_t v18 = v226;
      }

      while ((id)(v230 + 1) != v228);
      id v217 = [v226 countByEnumeratingWithState:&v254 objects:v275 count:16];
      id v228 = v217;
      if (!v217)
      {

        if (v232 == 1)
        {
          uint64_t v17 = v229;
          if (v233 >= 1)
          {
            uint64_t v218 = (uint64_t)v231;
            if (self) {
              int v219 = self[1] & 1;
            }
            else {
              int v219 = 0;
            }
            sub_1002163D4(v219, 1);
LABEL_251:
            uint64_t v223 = ASDLogHandleForCategory(29LL);
            id v15 = (os_log_s *)objc_claimAutoreleasedReturnValue(v223);
            if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)__int128 buf = 138412802;
              *(void *)&uint8_t buf[4] = v17;
              *(_WORD *)&_BYTE buf[12] = 2048;
              *(void *)&buf[14] = v233;
              __int16 v284 = 2048;
              uint64_t v285 = v218;
              uint64_t v220 = "[%@] Bootstrap completed with successful lookups: %ld hard failures: %ld";
              uint64_t v221 = v15;
              uint32_t v222 = 32;
LABEL_253:
              _os_log_impl((void *)&_mh_execute_header, v221, OS_LOG_TYPE_DEFAULT, v220, buf, v222);
            }

            goto LABEL_254;
          }
        }

        else
        {
          uint64_t v17 = v229;
        }

        uint64_t v218 = (uint64_t)v231;
        goto LABEL_251;
      }
    }
  }

  if (v16)
  {
    *(_DWORD *)__int128 buf = 138412290;
    uint64_t v17 = v229;
    *(void *)&uint8_t buf[4] = v229;
    uint64_t v220 = "[%@] No restores to bootstrap";
    uint64_t v221 = v15;
    uint32_t v222 = 12;
    goto LABEL_253;
  }

  uint64_t v17 = v229;
LABEL_254:
}

uint64_t sub_100214FB8()
{
  uint64_t v5 = 0LL;
  id v6 = &v5;
  uint64_t v7 = 0x2020000000LL;
  uint64_t v8 = 0LL;
  id v0 = sub_1002EEBC0((uint64_t)&OBJC_CLASS___AppInstallsDatabaseStore);
  id v1 = (void *)objc_claimAutoreleasedReturnValue(v0);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  void v4[2] = sub_100219590;
  v4[3] = &unk_1003EAAD0;
  void v4[4] = &v5;
  [v1 readUsingSession:v4];

  uint64_t v2 = v6[3];
  _Block_object_dispose(&v5, 8);
  return v2;
}

void sub_100215058( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_100215070(void *a1, unsigned int a2)
{
  if (a1)
  {
    if (+[AMSDevice deviceIsAppleTV](&OBJC_CLASS___AMSDevice, "deviceIsAppleTV"))
    {
      uint64_t v4 = ASDLogHandleForCategory(29LL);
      uint64_t v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
      if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)__int128 buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Screen sync not preflighting", buf, 2u);
      }
    }

    else
    {
      unsigned int v48 = a2;
      id v6 = objc_opt_new(&OBJC_CLASS___NSMutableDictionary);
      id v7 = sub_1002EEBC0((uint64_t)&OBJC_CLASS___AppInstallsDatabaseStore);
      uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
      v62[0] = _NSConcreteStackBlock;
      v62[1] = 3221225472LL;
      v62[2] = sub_100219788;
      v62[3] = &unk_1003ECFC8;
      v62[4] = a1;
      uint64_t v5 = v6;
      uint64_t v63 = v5;
      [v8 readUsingSession:v62];

      CFPropertyListRef v9 = sub_1002F98F4((uint64_t)&OBJC_CLASS___AppDefaultsManager);
      ptrdiff_t v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
      id v47 = v5;
      if ([v10 count])
      {
        uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
        __int128 v58 = 0u;
        __int128 v59 = 0u;
        __int128 v60 = 0u;
        __int128 v61 = 0u;
        id v12 = v5;
        id v13 = -[os_log_s countByEnumeratingWithState:objects:count:]( v12,  "countByEnumeratingWithState:objects:count:",  &v58,  v69,  16LL);
        if (v13)
        {
          id v14 = v13;
          uint64_t v15 = *(void *)v59;
          do
          {
            for (uint64_t i = 0LL; i != v14; uint64_t i = (char *)i + 1)
            {
              if (*(void *)v59 != v15) {
                objc_enumerationMutation(v12);
              }
              uint64_t v17 = *(void **)(*((void *)&v58 + 1) + 8LL * (void)i);
              uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s objectForKeyedSubscript:](v12, "objectForKeyedSubscript:", v17));
              if ([v10 containsObject:v17])
              {
                uint64_t v19 = ASDLogHandleForCategory(29LL);
                uint64_t v20 = (os_log_s *)objc_claimAutoreleasedReturnValue(v19);
                if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
                {
                  *(_DWORD *)__int128 buf = 138543618;
                  id v66 = v18;
                  __int16 v67 = 2114;
                  id v68 = v17;
                  _os_log_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEFAULT,  "Skipping previously attempted preflight of account: %{public}@/%{public}@",  buf,  0x16u);
                }

                [v11 addObject:v17];
                sub_100219B40((uint64_t)a1, v18, @"Preflight already attempted", 0LL);
              }
            }

            id v14 = -[os_log_s countByEnumeratingWithState:objects:count:]( v12,  "countByEnumeratingWithState:objects:count:",  &v58,  v69,  16LL);
          }

          while (v14);
        }

        if ([v11 count]) {
          -[os_log_s removeObjectsForKeys:](v12, "removeObjectsForKeys:", v11);
        }

        uint64_t v5 = v47;
      }

      if (-[os_log_s count](v5, "count") && !sub_1002FA468((uint64_t)&OBJC_CLASS___AppDefaultsManager))
      {
        id v46 = v10;
        uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
        __int128 v54 = 0u;
        __int128 v55 = 0u;
        __int128 v56 = 0u;
        __int128 v57 = 0u;
        id v22 = v5;
        unsigned int v23 = v48;
        id v52 = -[os_log_s countByEnumeratingWithState:objects:count:]( v22,  "countByEnumeratingWithState:objects:count:",  &v54,  v64,  16LL);
        if (v52)
        {
          uint64_t v51 = *(void *)v55;
          uint64_t v49 = (void *)AKAppleIDAuthenticationErrorDomain;
          __int128 v50 = v22;
          do
          {
            for (uint64_t j = 0LL; j != v52; uint64_t j = (char *)j + 1)
            {
              if (*(void *)v55 != v51) {
                objc_enumerationMutation(v22);
              }
              int64_t v25 = *(void **)(*((void *)&v54 + 1) + 8LL * (void)j);
              BOOL v26 = (void *)objc_claimAutoreleasedReturnValue(-[os_log_s objectForKeyedSubscript:](v22, "objectForKeyedSubscript:", v25));
              uint64_t v27 = ASDLogHandleForCategory(29LL);
              id v28 = (os_log_s *)objc_claimAutoreleasedReturnValue(v27);
              if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
              {
                *(_DWORD *)__int128 buf = 138543618;
                id v66 = v26;
                __int16 v67 = 2114;
                id v68 = v25;
                _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_DEFAULT,  "Preflighting account: %{public}@/%{public}@",  buf,  0x16u);
              }

              id v53 = 0LL;
              id v29 = sub_1002108B4(a1, v26, &v53);
              uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue(v29);
              id v31 = v53;
              id v32 = v31;
              if (v31)
              {
                uint64_t v33 = v21;
                id v34 = sub_1002174AC(v31, v49);
                uint64_t v35 = (void *)objc_claimAutoreleasedReturnValue(v34);
                if (v35)
                {
                  uint64_t v36 = ASDLogHandleForCategory(29LL);
                  __int128 v37 = (os_log_s *)objc_claimAutoreleasedReturnValue(v36);
                  if (os_log_type_enabled(v37, OS_LOG_TYPE_ERROR))
                  {
                    *(_DWORD *)__int128 buf = 138543618;
                    id v66 = v26;
                    __int16 v67 = 2114;
                    id v68 = v32;
                    _os_log_error_impl( (void *)&_mh_execute_header,  v37,  OS_LOG_TYPE_ERROR,  "Cancel error authenticating for appleID: %{public}@ error: %{public}@",  buf,  0x16u);
                  }

                  sub_100219B40((uint64_t)a1, v26, @"User canceled auth dialog", v35);
                  uint64_t v21 = v33;
                  [v33 addObject:v25];
                }

                else
                {
                  int v38 = sub_100217028(v32);
                  uint64_t v39 = ASDLogHandleForCategory(29LL);
                  uint32_t v40 = (os_log_s *)objc_claimAutoreleasedReturnValue(v39);
                  unint64_t v41 = v40;
                  if (v38)
                  {
                    if (os_log_type_enabled(v40, OS_LOG_TYPE_DEFAULT))
                    {
                      *(_DWORD *)__int128 buf = 138543618;
                      id v66 = v26;
                      __int16 v67 = 2114;
                      id v68 = v32;
                      _os_log_impl( (void *)&_mh_execute_header,  v41,  OS_LOG_TYPE_DEFAULT,  "Recoverable error authenticating for appleID: %{public}@ error: %{public}@",  buf,  0x16u);
                    }

                    unsigned int v23 = v48;
                    uint64_t v21 = v33;
                  }

                  else
                  {
                    if (os_log_type_enabled(v40, OS_LOG_TYPE_ERROR))
                    {
                      *(_DWORD *)__int128 buf = 138543618;
                      id v66 = v26;
                      __int16 v67 = 2114;
                      id v68 = v32;
                      _os_log_error_impl( (void *)&_mh_execute_header,  v41,  OS_LOG_TYPE_ERROR,  "Error authenticating for appleID: %{public}@ error: %{public}@",  buf,  0x16u);
                    }

                    uint64_t v21 = v33;
                    [v33 addObject:v25];
                    unsigned int v23 = v48;
                  }
                }

                id v22 = v50;
              }

              if (v30)
              {
                [v21 addObject:v25];
                sub_100212C1C((uint64_t)a1, v30, v23);
              }
            }

            id v52 = -[os_log_s countByEnumeratingWithState:objects:count:]( v22,  "countByEnumeratingWithState:objects:count:",  &v54,  v64,  16LL);
          }

          while (v52);
        }

        ptrdiff_t v10 = v46;
        if ([v21 count])
        {
          if (!v46) {
            ptrdiff_t v10 = &__NSArray0__struct;
          }
          id v42 = (void *)objc_claimAutoreleasedReturnValue([v10 arrayByAddingObjectsFromArray:v21]);
          sub_1002F9A50((uint64_t)&OBJC_CLASS___AppDefaultsManager, v42);
          uint64_t v43 = ASDLogHandleForCategory(29LL);
          id v44 = (os_log_s *)objc_claimAutoreleasedReturnValue(v43);
          if (os_log_type_enabled(v44, OS_LOG_TYPE_INFO))
          {
            id v45 = (void *)objc_claimAutoreleasedReturnValue([v21 componentsJoinedByString:@","]);
            *(_DWORD *)__int128 buf = 138543362;
            id v66 = v45;
            _os_log_impl( (void *)&_mh_execute_header,  v44,  OS_LOG_TYPE_INFO,  "Updated attempted preflight accountIDs to: [%{public}@]",  buf,  0xCu);
          }
        }

        uint64_t v5 = v47;
      }
    }
  }

uint64_t sub_100215768(uint64_t a1, void *a2)
{
  id v4 = a2;
  __int128 v42 = 0u;
  __int128 v43 = 0u;
  __int128 v44 = 0u;
  __int128 v45 = 0u;
  id Property = *(id *)(a1 + 32);
  if (Property) {
    id Property = objc_getProperty(Property, v3, 56LL, 1);
  }
  id v6 = Property;
  id v7 = [v6 countByEnumeratingWithState:&v42 objects:v54 count:16];
  if (v7)
  {
    id v9 = v7;
    uint64_t v10 = *(void *)v43;
    p_superclass = &OBJC_METACLASS___SystemAppLookupItem.superclass;
    *(void *)&__int128 v8 = 138413058LL;
    __int128 v39 = v8;
    id v40 = v4;
    do
    {
      id v12 = 0LL;
      id v41 = v9;
      do
      {
        if (*(void *)v43 != v10) {
          objc_enumerationMutation(v6);
        }
        id v13 = *(void **)(*((void *)&v42 + 1) + 8LL * (void)v12);
        if (objc_msgSend(v13, "databaseID", v39))
        {
          id v14 = objc_alloc((Class)p_superclass + 144);
          id v15 = [v13 databaseID];
          BOOL v16 = (void *)objc_claimAutoreleasedReturnValue([v4 connection]);
          uint64_t v17 = [v14 initWithPersistentID:v15 onConnection:v16];

          if (v17 && sub_10021B73C(v17) != (id)-20LL)
          {
            id v18 = sub_1001E2734(v17, (uint64_t)@"coordinator_id");
            uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue(v18);
            uint64_t v20 = ASDLogHandleForCategory(2LL);
            uint64_t v21 = (os_log_s *)objc_claimAutoreleasedReturnValue(v20);
            if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
            {
              id v22 = sub_10021B614(v17);
              unsigned int v23 = (void *)objc_claimAutoreleasedReturnValue(v22);
              uint64_t v24 = v10;
              int64_t v25 = v19;
              id v26 = v6;
              id v27 = [v17 persistentID];
              id v28 = sub_10021B73C(v17);
              id v29 = sub_1002C9300((uint64_t)v28);
              uint64_t v30 = (void *)objc_claimAutoreleasedReturnValue(v29);
              *(_DWORD *)__int128 buf = v39;
              id v47 = v23;
              __int16 v48 = 2048;
              id v49 = v27;
              id v6 = v26;
              uint64_t v19 = v25;
              uint64_t v10 = v24;
              id v9 = v41;
              __int16 v50 = 2114;
              uint64_t v51 = v30;
              __int16 v52 = 2114;
              id v53 = v19;
              _os_log_impl( (void *)&_mh_execute_header,  v21,  OS_LOG_TYPE_DEFAULT,  "[%@] Refreshing non-failed installation (pid = '%lld', phase = '%{public}@', coordinatorID = '%{public}@')",  buf,  0x2Au);

              id v4 = v40;
            }

            id v31 = (void *)objc_claimAutoreleasedReturnValue([v13 propertyValues]);
            [v17 setValuesWithDictionary:v31];

            if (v13) {
              id v33 = objc_getProperty(v13, v32, 40LL, 1);
            }
            else {
              id v33 = 0LL;
            }
            id v34 = v33;
            uint64_t v35 = v34;
            if (v34) {
              uint64_t v36 = v34;
            }
            else {
              uint64_t v36 = &__NSArray0__struct;
            }
            sub_10021C9B0(v17, v36);

            p_superclass = (__objc2_class **)(&OBJC_METACLASS___SystemAppLookupItem + 8);
          }
        }

        id v12 = (char *)v12 + 1;
      }

      while (v9 != v12);
      id v37 = [v6 countByEnumeratingWithState:&v42 objects:v54 count:16];
      id v9 = v37;
    }

    while (v37);
  }

  return 1LL;
}

void sub_100215A54(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v88 = a3;
  objc_opt_self(a1);
  __int128 v98 = 0u;
  __int128 v99 = 0u;
  __int128 v100 = 0u;
  __int128 v101 = 0u;
  id obj = v5;
  id v6 = [obj countByEnumeratingWithState:&v98 objects:v102 count:16];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)v99;
    uint64_t v89 = ASDErrorDomain;
    uint64_t v90 = *(void *)v99;
    do
    {
      id v9 = 0LL;
      id v91 = v7;
      do
      {
        if (*(void *)v99 != v8) {
          objc_enumerationMutation(obj);
        }
        uint64_t v10 = *(void **)(*((void *)&v98 + 1) + 8LL * (void)v9);
        uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "valueForProperty:", @"restore_type", v77, v78, v79, v80, v81));
        id v12 = (char *)[v11 integerValue];

        if ((unint64_t)(v12 - 1) <= 2)
        {
          id v13 = sub_1002D79EC(v10);
          id v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
          if (!v14)
          {
            uint64_t v15 = ASDErrorWithTitleAndMessage(v89, 743LL, @"Unknown hard failure", 0LL);
            id v14 = (void *)objc_claimAutoreleasedReturnValue(v15);
          }

          else {
            uint64_t v16 = 5LL;
          }
          uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue([v10 valueForProperty:@"coordinator_id"]);
          if (v17)
          {
            id v97 = 0LL;
            id v18 = sub_1001E4798((uint64_t)&OBJC_CLASS___IXAppInstallCoordinator, v17, (uint64_t)&v97);
            uint64_t v19 = (char *)objc_claimAutoreleasedReturnValue(v18);
            uint64_t v20 = (os_log_s *)v97;
            id v22 = v20;
            if (v19)
            {
              if (v20)
              {
LABEL_15:
                uint64_t v23 = ASDLogHandleForCategory(29LL);
                uint64_t v24 = (os_log_s *)objc_claimAutoreleasedReturnValue(v23);
                if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
                {
                  id v68 = sub_100323C54(v10);
                  id v69 = (void *)objc_claimAutoreleasedReturnValue(v68);
                  *(_DWORD *)__int128 buf = 138413058;
                  *(void *)&uint8_t buf[4] = v69;
                  *(_WORD *)&_BYTE buf[12] = 2048;
                  *(void *)&buf[14] = v12;
                  *(_WORD *)&_BYTE buf[22] = 2114;
                  uint64_t v104 = v88;
                  *(_WORD *)id v105 = 2114;
                  *(void *)&v105[2] = v22;
                  _os_log_error_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_ERROR,  "[%@] Coordinator lookup with restoreType: %ld reason: '%{public}@' resulted in error: %{public}@",  buf,  0x2Au);
                }

                goto LABEL_53;
              }

void sub_1002163D4(int a1, int a2)
{
  uint64_t v4 = ASDLogHandleForCategory(29LL);
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);
  if (a1)
  {
    if (!v6) {
      goto LABEL_10;
    }
    __int16 v15 = 0;
    id v7 = "Hydrate: Finishing completed content restore items";
    uint64_t v8 = (uint8_t *)&v15;
  }

  else if (a2)
  {
    if (!v6) {
      goto LABEL_10;
    }
    __int16 v14 = 0;
    id v7 = "Ordered: Finishing completed content restore items";
    uint64_t v8 = (uint8_t *)&v14;
  }

  else
  {
    if (!v6) {
      goto LABEL_10;
    }
    __int16 v13 = 0;
    id v7 = "Non Ordered: Finishing completed content restore items";
    uint64_t v8 = (uint8_t *)&v13;
  }

  _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, v7, v8, 2u);
LABEL_10:

  id v9 = sub_10023B9CC((uint64_t)&OBJC_CLASS___AppInstallScheduler);
  uint64_t v10 = objc_claimAutoreleasedReturnValue(v9);
  uint64_t v11 = (void *)v10;
  if (a2) {
    uint64_t v12 = 512LL;
  }
  else {
    uint64_t v12 = 256LL;
  }
  sub_10023C018(v10, v12);
}

uint64_t sub_1002164C0(uint64_t a1)
{
  if (!a1) {
    return 0LL;
  }
  id v2 = sub_100255630((uint64_t)&OBJC_CLASS___URLBag);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  id v4 = sub_1002567DC(v3, @"p2-content-restore/url");
  id v5 = (void *)objc_claimAutoreleasedReturnValue(v4);

  id v16 = 0LL;
  BOOL v6 = (void *)objc_claimAutoreleasedReturnValue([v5 valueWithError:&v16]);
  id v7 = v16;
  if (v7) {
    BOOL v8 = 1;
  }
  else {
    BOOL v8 = v6 == 0LL;
  }
  uint64_t v9 = !v8;
  if (v8)
  {
    uint64_t v10 = ASDLogHandleForCategory(29LL);
    uint64_t v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
    {
      __int16 v14 = (void *)objc_opt_class(a1, v12);
      *(_DWORD *)__int128 buf = 138543618;
      id v18 = v14;
      __int16 v19 = 2114;
      id v20 = v7;
      id v15 = v14;
      _os_log_error_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_ERROR,  "[%{public}@] Failed to get bag URL for contentRestore due to error: %{public}@",  buf,  0x16u);
    }
  }

  return v9;
}

LABEL_70:
      if ((v7 & 1) != 0) {
        goto LABEL_67;
      }
      goto LABEL_71;
    }

    goto LABEL_72;
  }

  int v86 = 0LL;
  id v4 = (id)objc_claimAutoreleasedReturnValue( +[IXPlaceholder placeholderForRemovableSystemAppWithBundleID:client:installType:error:]( &OBJC_CLASS___IXPlaceholder,  "placeholderForRemovableSystemAppWithBundleID:client:installType:error:",  *(void *)(a1 + 40),  1LL,  1LL,  &v86));
  id v5 = v86;
LABEL_38:
  uint64_t v41 = v5;
  id v85 = v41;
  char v42 = [v4 setConfigurationCompleteWithError:&v85];
  uint64_t v43 = v85;

  if ((v42 & 1) == 0)
  {
    __int128 v44 = ASDLogHandleForCategory(2LL);
    __int128 v45 = (os_log_s *)objc_claimAutoreleasedReturnValue(v44);
    if (os_log_type_enabled(v45, OS_LOG_TYPE_ERROR))
    {
      uint64_t v51 = *(void *)(a1 + 88);
      *(_DWORD *)__int128 buf = 138412546;
      *(void *)&uint8_t buf[4] = v51;
      *(_WORD *)&_BYTE buf[12] = 2114;
      *(void *)&buf[14] = v43;
      _os_log_error_impl( (void *)&_mh_execute_header,  v45,  OS_LOG_TYPE_ERROR,  "[%@] Placeholder configuration could not be completed: %{public}@",  buf,  0x16u);
    }

    id v84 = 0LL;
    id v46 = [v4 cancelForReason:v43 client:1 error:&v84];
    id v47 = v84;
    if ((v46 & 1) == 0)
    {
      __int16 v48 = ASDLogHandleForCategory(2LL);
      id v49 = (os_log_s *)objc_claimAutoreleasedReturnValue(v48);
      if (os_log_type_enabled(v49, OS_LOG_TYPE_ERROR))
      {
        __int16 v52 = *(void *)(a1 + 88);
        *(_DWORD *)__int128 buf = 138412546;
        *(void *)&uint8_t buf[4] = v52;
        *(_WORD *)&_BYTE buf[12] = 2114;
        *(void *)&buf[14] = v47;
        _os_log_error_impl( (void *)&_mh_execute_header,  v49,  OS_LOG_TYPE_ERROR,  "[%@] Error occurred when cancelling placeholder: %{public}@",  buf,  0x16u);
      }
    }

    id v4 = 0LL;
  }

  if (a2)
  {
    if (!v4) {
      *a2 = v43;
    }
  }

  return v4;
}

  return v27;
}

LABEL_72:
    id v34 = 1;
    goto LABEL_29;
  }

LABEL_71:
  uint64_t v63 = 1;
LABEL_60:
  id v64 = ASDLogHandleForCategory(29LL);
  id v65 = (os_log_s *)objc_claimAutoreleasedReturnValue(v64);
  if (os_log_type_enabled(v65, OS_LOG_TYPE_DEFAULT))
  {
    if (v4) {
      id v67 = objc_getProperty(v4, v66, 16LL, 1);
    }
    else {
      id v67 = 0LL;
    }
    *(_DWORD *)__int128 buf = 138544130;
    id v73 = (uint64_t)v67;
    id v74 = 1024;
    *(_DWORD *)uint64_t v75 = v6 != 0LL;
    *(_WORD *)&v75[4] = 1024;
    *(_DWORD *)&v75[6] = *(_DWORD *)v75;
    id v76 = 1024;
    __int128 v77 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v65,  OS_LOG_TYPE_DEFAULT,  "Creating bag monitor to bootstrap restore for reason: %{public}@. Setup complete: %d migrator complete: %d bag loaded: %d",  buf,  0x1Eu);
  }

  objc_initWeak((id *)buf, self);
  id v68 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter"));
  v70[0] = _NSConcreteStackBlock;
  v70[1] = 3221225472LL;
  v70[2] = sub_100216ED4;
  v70[3] = &unk_1003ECE48;
  objc_copyWeak(&v71, (id *)buf);
  id v69 = [v68 addObserverForName:AMSBagChangedNotification object:0 queue:0 usingBlock:v70];

  if ((v63 & 1) == 0) {
    self->_bootstrapBagMonitorAdded = 1;
  }
  objc_destroyWeak(&v71);
  objc_destroyWeak((id *)buf);
LABEL_67:
}

void sub_100216E98( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

void sub_100216EC4(uint64_t a1, void *a2)
{
  if (a1) {
    objc_storeStrong((id *)(a1 + 32), a2);
  }
}

void sub_100216ED4(uint64_t a1, void *a2)
{
  id v15 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue([v15 userInfo]);
    id v5 = (void *)objc_claimAutoreleasedReturnValue([v4 objectForKeyedSubscript:AMSBagChangedNotificationUserInfoProfile]);
    id v6 = sub_100255630((uint64_t)&OBJC_CLASS___URLBag);
    id v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
    BOOL v8 = (void *)objc_claimAutoreleasedReturnValue([v7 profile]);
    if ([v5 isEqualToString:v8])
    {
      uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v15 userInfo]);
      uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v9 objectForKeyedSubscript:AMSBagChangedNotificationUserInfoProfileVersion]);
      id v11 = sub_100255630((uint64_t)&OBJC_CLASS___URLBag);
      uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
      __int16 v13 = (void *)objc_claimAutoreleasedReturnValue([v12 profileVersion]);
      unsigned int v14 = [v10 isEqualToString:v13];

      if (v14) {
        [WeakRetained _handleMonitorStateDidChangeNotification:v15];
      }
    }

    else
    {
    }
  }
}

uint64_t sub_100217028(void *a1)
{
  id v1 = a1;
  id v2 = (void *)objc_claimAutoreleasedReturnValue([v1 domain]);
  if (([v2 isEqualToString:kCFErrorDomainCFNetwork] & 1) != 0
    || ([v2 isEqualToString:NSURLErrorDomain] & 1) != 0
    || (uint64_t v3 = AKAppleIDAuthenticationErrorDomain,
        (ASDErrorIsEqual(v1, AKAppleIDAuthenticationErrorDomain, -7005LL) & 1) != 0)
    || (ASDErrorIsEqual(v1, v3, -7019LL) & 1) != 0
    || (ASDErrorIsEqual(v1, v3, -7045LL) & 1) != 0
    || (ASDErrorIsEqual(v1, v3, -7075LL) & 1) != 0)
  {
    uint64_t v4 = 1LL;
  }

  else
  {
    id v6 = (void *)objc_claimAutoreleasedReturnValue([v1 underlyingErrors]);

    if (v6)
    {
      __int128 v12 = 0u;
      __int128 v13 = 0u;
      __int128 v10 = 0u;
      __int128 v11 = 0u;
      id v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "underlyingErrors", 0));
      uint64_t v4 = (uint64_t)[v7 countByEnumeratingWithState:&v10 objects:v14 count:16];
      if (v4)
      {
        uint64_t v8 = *(void *)v11;
        while (2)
        {
          for (uint64_t i = 0LL; i != v4; ++i)
          {
            if (*(void *)v11 != v8) {
              objc_enumerationMutation(v7);
            }
            if ((sub_100217028(*(void *)(*((void *)&v10 + 1) + 8 * i)) & 1) != 0)
            {
              uint64_t v4 = 1LL;
              goto LABEL_20;
            }
          }

          uint64_t v4 = (uint64_t)[v7 countByEnumeratingWithState:&v10 objects:v14 count:16];
          if (v4) {
            continue;
          }
          break;
        }
      }

uint64_t sub_1002171F8(uint64_t a1, id *a2)
{
  return 1LL;
}

void sub_10021721C(void *a1, int a2)
{
  uint64_t v3 = a1;
  uint64_t v4 = sub_100323C54(v3);
  id v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  v22[1] = 0LL;
  id v6 = sub_1002DF434(v3);
  id v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
  id v8 = 0LL;
  uint64_t v9 = v8;
  if (v7)
  {
    v22[0] = v8;
    id v10 = sub_1002DF048(v7, v22);
    __int128 v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
    id v12 = v22[0];

    if (v11)
    {
      if (a2)
      {
        id v21 = v12;
        sub_1001E5584(v11, &v21);
        id v13 = v21;

        id v12 = v13;
      }

      unsigned int v14 = (void *)objc_claimAutoreleasedReturnValue([v11 uniqueIdentifier]);
      [v3 setValue:v14 forProperty:@"coordinator_id"];

      uint64_t v15 = ASDLogHandleForCategory(29LL);
      id v16 = (os_log_s *)objc_claimAutoreleasedReturnValue(v15);
      uint64_t v17 = v16;
      if (!v12)
      {
        if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)__int128 buf = 138412290;
          uint64_t v24 = v5;
          _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "[%@] Added initial progress", buf, 0xCu);
        }

        id v12 = 0LL;
        goto LABEL_16;
      }

      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)__int128 buf = 138412546;
        uint64_t v24 = v5;
        __int16 v25 = 2114;
        id v26 = v12;
        id v18 = "[%@] Error adding initial progress. Error: %{public}@";
LABEL_12:
        _os_log_error_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_ERROR, v18, buf, 0x16u);
      }
    }

    else
    {
      uint64_t v20 = ASDLogHandleForCategory(29LL);
      uint64_t v17 = (os_log_s *)objc_claimAutoreleasedReturnValue(v20);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)__int128 buf = 138412546;
        uint64_t v24 = v5;
        __int16 v25 = 2114;
        id v26 = v12;
        id v18 = "[%@] Failed to create coordinator with error: %{public}@";
        goto LABEL_12;
      }
    }

id sub_1002174AC(void *a1, void *a2)
{
  id v3 = a2;
  __int128 v16 = 0u;
  __int128 v17 = 0u;
  __int128 v18 = 0u;
  __int128 v19 = 0u;
  id v4 = (id)objc_claimAutoreleasedReturnValue([a1 underlyingErrors]);
  id v5 = [v4 countByEnumeratingWithState:&v16 objects:v20 count:16];
  if (!v5) {
    goto LABEL_13;
  }
  id v6 = v5;
  uint64_t v7 = *(void *)v17;
  do
  {
    for (uint64_t i = 0LL; i != v6; uint64_t i = (char *)i + 1)
    {
      if (*(void *)v17 != v7) {
        objc_enumerationMutation(v4);
      }
      uint64_t v9 = *(void **)(*((void *)&v16 + 1) + 8LL * (void)i);
      if (ASDErrorIsEqual(v9, v3, -7003LL))
      {
        id v10 = v9;
      }

      else
      {
        __int128 v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "underlyingErrors", (void)v16));
        id v12 = [v11 count];

        if (!v12) {
          continue;
        }
        uint64_t v13 = sub_1002174AC(v9, v3);
        id v10 = (id)objc_claimAutoreleasedReturnValue(v13);
      }

      unsigned int v14 = v10;
      if (v10) {
        goto LABEL_14;
      }
    }

    id v6 = [v4 countByEnumeratingWithState:&v16 objects:v20 count:16];
  }

  while (v6);
LABEL_13:
  unsigned int v14 = 0LL;
LABEL_14:

  return v14;
}

void sub_100217618(id *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    uint64_t v7 = ASDLogHandleForCategory(28LL);
    id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      id v13 = a1[4];
      *(_DWORD *)__int128 buf = 138412546;
      id v19 = v13;
      __int16 v20 = 2114;
      id v21 = v6;
      _os_log_error_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_ERROR,  "[%@] Wasn't able to display restore must purchase dialog: %{public}@",  buf,  0x16u);
    }

    goto LABEL_4;
  }

  if (a1[5])
  {
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v5 selectedActionIdentifier]);
    id v10 = (void *)objc_claimAutoreleasedReturnValue([a1[5] identifier]);
    unsigned int v11 = [v9 isEqualToString:v10];

    if (v11)
    {
      if ((uint64_t)[a1[6] longLongValue] < 1)
      {
        v14[0] = _NSConcreteStackBlock;
        v14[1] = 3221225472LL;
        void v14[2] = sub_1002178C4;
        void v14[3] = &unk_1003E9CA8;
        uint64_t v15 = (os_log_s *)a1[4];
        sub_100322630((uint64_t)&OBJC_CLASS___AppStore, v14);
        id v8 = v15;
      }

      else
      {
        id v12 = a1[6];
        v16[0] = _NSConcreteStackBlock;
        v16[1] = 3221225472LL;
        void v16[2] = sub_1002177F4;
        v16[3] = &unk_1003E9CA8;
        __int128 v17 = (os_log_s *)a1[4];
        sub_100322540((uint64_t)&OBJC_CLASS___AppStore, v12, v16);
        id v8 = v17;
      }

LABEL_4:
    }
  }
}

  if (v5) {
    id v10 = v5;
  }
  else {
    id v10 = &__NSArray0__struct;
  }
  sub_1002FA048((uint64_t)&OBJC_CLASS___AppDefaultsManager, v10);
LABEL_10:
  id v66 = v7;
  id v68 = objc_opt_new(&OBJC_CLASS___NSMutableArray);
  id v71 = 0u;
  uint64_t v72 = 0u;
  id v73 = 0u;
  id v74 = 0u;
  id v65 = a1;
  id v13 = *(id *)(a1 + 32);
  unsigned int v14 = [v13 countByEnumeratingWithState:&v71 objects:v75 count:16];
  if (v14)
  {
    uint64_t v15 = v14;
    __int128 v16 = 0;
    id v69 = 0;
    id v67 = 0;
    __int128 v17 = *(void *)v72;
    do
    {
      for (uint64_t i = 0LL; i != v15; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v72 != v17) {
          objc_enumerationMutation(v13);
        }
        id v19 = *(void **)(*((void *)&v71 + 1) + 8LL * (void)i);
        if (([v5 containsObject:v19] & 1) == 0)
        {
          if ([v19 isEqualToString:@"com.apple.Music"])
          {
            __int128 v16 = 1;
          }

          else if ([v19 isEqualToString:@"com.apple.news"])
          {
            id v69 = 1;
          }

          else if ([v19 isEqualToString:@"com.apple.tv"])
          {
            id v67 = 1;
          }

          else
          {
            -[NSMutableArray addObject:](v68, "addObject:", v19);
          }
        }
      }

      uint64_t v15 = [v13 countByEnumeratingWithState:&v71 objects:v75 count:16];
    }

    while (v15);
  }

  else
  {
    __int128 v16 = 0;
    id v69 = 0;
    id v67 = 0;
  }

  __int16 v20 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithArray:](&OBJC_CLASS___NSArray, "arrayWithArray:", v68));
  if ((v16 & 1) != 0)
  {
    id v21 = *(_BYTE *)(v65 + 56);
    id v22 = (void *)objc_opt_self(*(void *)(v65 + 48));
    uint64_t v23 = ASDLogHandleForCategory(14LL);
    uint64_t v24 = (os_log_s *)objc_claimAutoreleasedReturnValue(v23);
    if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
    {
      id v26 = (void *)objc_opt_class(v22, v25);
      *(_DWORD *)__int128 buf = 138543618;
      *(void *)&uint8_t buf[4] = v26;
      *(_WORD *)&_BYTE buf[12] = 2114;
      *(void *)&buf[14] = @"com.apple.Music";
      id v27 = v26;
      _os_log_impl( (void *)&_mh_execute_header,  v24,  OS_LOG_TYPE_DEFAULT,  "[%{public}@]: Checking status for %{public}@",  buf,  0x16u);
    }

    id v28 = objc_alloc(&OBJC_CLASS___ICStoreRequestContext);
    id v29 = (void *)objc_claimAutoreleasedReturnValue(+[ICUserIdentity activeAccount](&OBJC_CLASS___ICUserIdentity, "activeAccount"));
    uint64_t v30 = [v28 initWithIdentity:v29];

    id v31 = [[ICMusicSubscriptionStatusRequest alloc] initWithStoreRequestContext:v30];
    [v31 setShouldReturnLastKnownStatusOnly:1];
    id v32 = (void *)objc_claimAutoreleasedReturnValue( +[ICMusicSubscriptionStatusController sharedStatusController]( &OBJC_CLASS___ICMusicSubscriptionStatusController,  "sharedStatusController"));
    *(void *)__int128 buf = _NSConcreteStackBlock;
    *(void *)&uint8_t buf[8] = 3221225472LL;
    *(void *)&uint8_t buf[16] = sub_1002F48D4;
    __int128 v77 = &unk_1003F25F8;
    id v78 = v22;
    LOBYTE(v79) = v21;
    [v32 performSubscriptionStatusRequest:v31 withCompletionHandler:buf];
  }

  if ((v69 & 1) != 0)
  {
    id v33 = *(_BYTE *)(v65 + 56);
    id v34 = (void *)objc_opt_self(*(void *)(v65 + 48));
    uint64_t v35 = ASDLogHandleForCategory(14LL);
    uint64_t v36 = (os_log_s *)objc_claimAutoreleasedReturnValue(v35);
    if (os_log_type_enabled(v36, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v38 = (void *)objc_opt_class(v34, v37);
      *(_DWORD *)__int128 buf = 138543618;
      *(void *)&uint8_t buf[4] = v38;
      *(_WORD *)&_BYTE buf[12] = 2114;
      *(void *)&buf[14] = @"com.apple.news";
      id v39 = v38;
      _os_log_impl( (void *)&_mh_execute_header,  v36,  OS_LOG_TYPE_DEFAULT,  "[%{public}@]: Checking status for %{public}@",  buf,  0x16u);
    }

    id v40 = (void *)objc_claimAutoreleasedReturnValue( +[SubscriptionEntitlementsCoordinator sharedInstance]( &OBJC_CLASS___SubscriptionEntitlementsCoordinator,  "sharedInstance"));
    uint64_t v41 = sub_100316A0C((uint64_t)&OBJC_CLASS___XPCRequestToken, 1);
    char v42 = (void *)objc_claimAutoreleasedReturnValue(v41);
    *(void *)__int128 buf = _NSConcreteStackBlock;
    *(void *)&uint8_t buf[8] = 3221225472LL;
    *(void *)&uint8_t buf[16] = sub_1002F4F04;
    __int128 v77 = &unk_1003F2618;
    id v78 = v34;
    LOBYTE(v79) = v33;
    sub_100265464(v40, 0LL, v42, 0, 0, 1LL, buf);
  }

  if ((v67 & 1) != 0)
  {
    uint64_t v43 = *(_BYTE *)(v65 + 56);
    __int128 v44 = objc_opt_self(*(void *)(v65 + 48));
    __int128 v45 = sub_1002F4708(v44, @"com.apple.tv");
    id v46 = (void *)objc_claimAutoreleasedReturnValue(v45);
    if (v46)
    {
      id v47 = sub_1002F4444(v44, @"com.apple.tv");
      if (v47)
      {
        __int16 v48 = v47;
        id v49 = sub_10029C090((uint64_t)&OBJC_CLASS___IAPInfoManager);
        uint64_t v70 = (void *)objc_claimAutoreleasedReturnValue(v49);
        __int16 v50 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", v48));
        id v82 = v50;
        uint64_t v51 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v82, 1LL));
        __int16 v52 = sub_100316A0C((uint64_t)&OBJC_CLASS___XPCRequestToken, 1);
        id v53 = (void *)objc_claimAutoreleasedReturnValue(v52);
        *(void *)__int128 buf = _NSConcreteStackBlock;
        *(void *)&uint8_t buf[8] = 3221225472LL;
        *(void *)&uint8_t buf[16] = sub_1002F5548;
        __int128 v77 = &unk_1003F2660;
        id v79 = v44;
        id v78 = v46;
        id v80 = v48;
        id v81 = v43;
        sub_10029C9D8((uint64_t)v70, v51, v53, buf);
      }
    }
  }

  if ([v20 count])
  {
    __int128 v55 = *(void **)(v65 + 40);
    uint64_t v54 = *(void *)(v65 + 48);
    uint64_t v56 = *(_BYTE *)(v65 + 56);
    __int128 v57 = v20;
    __int128 v58 = v55;
    uint64_t v59 = objc_opt_self(v54);
    __int128 v60 = sub_1001C66BC((uint64_t)&OBJC_CLASS___PurchaseHistoryManager);
    __int128 v61 = (void *)objc_claimAutoreleasedReturnValue(v60);
    id v62 = objc_alloc_init(&OBJC_CLASS___ASDPurchaseHistoryQuery);
    [v62 setBundleIDs:v57];
    uint64_t v63 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v58, "ams_DSID"));

    objc_msgSend(v62, "setAccountID:", objc_msgSend(v63, "longLongValue"));
    *(void *)__int128 buf = _NSConcreteStackBlock;
    *(void *)&uint8_t buf[8] = 3221225472LL;
    *(void *)&uint8_t buf[16] = sub_1002F57EC;
    __int128 v77 = &unk_1003F2688;
    id v78 = v57;
    id v79 = v59;
    LOBYTE(v80) = v56;
    id v64 = v57;
    sub_1001C6D2C((uint64_t)v61, v62, buf);
  }

  uint64_t v7 = v66;
LABEL_43:
}

  if (+[AMSDevice deviceIsAppleTV](&OBJC_CLASS___AMSDevice, "deviceIsAppleTV"))
  {
    id v5 = *(void *)&self->super._success;
    if (v5)
    {
      id v6 = objc_opt_class(&OBJC_CLASS___IXRestoringAppInstallCoordinator, v4);
      if ((objc_opt_isKindOfClass(v5, v6) & 1) != 0)
      {
        if ([*(id *)&self->super._success conformsToProtocol:&OBJC_PROTOCOL___IXCoordinatorWithUserDataPromise])
        {
          uint64_t v7 = ASDLogHandleForCategory(2LL);
          id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
          if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v9 = self->_coordinator;
            *(_DWORD *)__int128 buf = 138412290;
            *(void *)&uint8_t buf[4] = v9;
            _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "[%@] Completing screen sync data promise",  buf,  0xCu);
          }

          id v10 = *(void **)&self->super._success;
          uint64_t v124 = v3;
          sub_1001E5794(v10, &v124);
          unsigned int v11 = v124;

          id v3 = v11;
        }
      }
    }
  }

  id v12 = objc_alloc_init(&OBJC_CLASS___MIInstallOptions);
  [v12 setInstallTargetType:1];
  id v13 = &OBJC_IVAR___ODRApplication__variantID;
  unsigned int v14 = (void *)objc_claimAutoreleasedReturnValue(-[NSError valueForProperty:](self->super._error, "valueForProperty:", @"source_type"));
  uint64_t v15 = (unint64_t)[v14 integerValue];

  if (v15 == 1)
  {
    [v12 setSystemAppInstall:1];
    __int128 v16 = 0LL;
    goto LABEL_66;
  }

  CFErrorRef error = self->super._error;
  id v126 = 0LL;
  uint64_t v23 = sub_100324100(error, &v126);
  uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue(v23);
  __int128 v16 = v126;
  if ((v15 | 2) == 2)
  {
    if (!v24)
    {
      uint64_t v70 = 0LL;
LABEL_64:

      goto LABEL_65;
    }

    __int16 v25 = (void *)objc_claimAutoreleasedReturnValue(-[SQLiteMemoryEntity valueForProperty:](self->_install, "valueForProperty:", @"sinf"));
    id v26 = v25;
    if (v25 && [v25 length])
    {
      [v12 setSinfData:v26];
      id v27 = sub_1001E2698(self->super._error, (uint64_t)@"client_type") == (id)1;
      sub_100304410(v24, v26, v27);
    }

    else
    {
      id v62 = ASDLogHandleForCategory(2LL);
      uint64_t v63 = (os_log_s *)objc_claimAutoreleasedReturnValue(v62);
      if (os_log_type_enabled(v63, OS_LOG_TYPE_FAULT))
      {
        uint64_t v116 = self->_coordinator;
        *(_DWORD *)__int128 buf = 138412290;
        *(void *)&uint8_t buf[4] = v116;
        _os_log_fault_impl( (void *)&_mh_execute_header,  v63,  OS_LOG_TYPE_FAULT,  "[%@] Refusing to install without required SINF",  buf,  0xCu);
      }

      id v64 = ASDErrorWithDescription(ASDErrorDomain, 712LL, @"Missing required SINF");
      id v65 = objc_claimAutoreleasedReturnValue(v64);

      id v12 = 0LL;
      __int128 v16 = (id)v65;
    }

    id v66 = sub_1001E26D0(self->super._error, (uint64_t)@"alternate_icon_name");
    __int128 v61 = (void *)objc_claimAutoreleasedReturnValue(v66);
    if ([v61 length])
    {
      id v67 = ASDLogHandleForCategory(2LL);
      id v68 = (os_log_s *)objc_claimAutoreleasedReturnValue(v67);
      if (os_log_type_enabled(v68, OS_LOG_TYPE_DEFAULT))
      {
        id v69 = self->_coordinator;
        *(_DWORD *)__int128 buf = 138412546;
        *(void *)&uint8_t buf[4] = v69;
        id v128 = 2114;
        uint64_t v129 = v61;
        _os_log_impl( (void *)&_mh_execute_header,  v68,  OS_LOG_TYPE_DEFAULT,  "[%@] Setting alternate icon: %{public}@",  buf,  0x16u);
      }

      [v12 setAlternateIconName:v61];
    }
  }

  else
  {
    uint64_t v56 = sub_1002EB2A0((uint64_t)&OBJC_CLASS___Device);
    __int128 v57 = (void *)objc_claimAutoreleasedReturnValue(v56);
    __int128 v58 = [v57 isHRNMode];

    if (!v58) {
      goto LABEL_48;
    }
    uint64_t v59 = sub_1001E26D0(self->super._error, (uint64_t)@"client_id");
    id v26 = (void *)objc_claimAutoreleasedReturnValue(v59);
    if (sub_1001E2698(self->super._error, (uint64_t)@"source_type") == (id)3
      && (([@"dmd" isEqualToString:v26] & 1) != 0
       || os_variant_has_internal_content("com.apple.appstored")
       && [@"asclient" isEqualToString:v26]))
    {
      __int128 v60 = (void *)objc_claimAutoreleasedReturnValue(-[SQLiteMemoryEntity valueForProperty:](self->_install, "valueForProperty:", @"sinf"));
      __int128 v61 = v60;
      if (v60) {
        id v123 = [v60 length] != 0;
      }
      else {
        id v123 = 0;
      }
      uint64_t v113 = ASDLogHandleForCategory(2LL);
      uint64_t v114 = (os_log_s *)objc_claimAutoreleasedReturnValue(v113);
      if (os_log_type_enabled(v114, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v115 = self->_coordinator;
        *(_DWORD *)__int128 buf = 138412802;
        *(void *)&uint8_t buf[4] = v115;
        id v128 = 2114;
        uint64_t v129 = v26;
        id v130 = 1024;
        LODWORD(v131) = v123;
        _os_log_impl( (void *)&_mh_execute_header,  v114,  OS_LOG_TYPE_DEFAULT,  "[%@] Configuring VPP manifest install for clientID: %{public}@ hasSINF: %{BOOL}d",  buf,  0x1Cu);
      }

      if (v123)
      {
        [v12 setSinfData:v61];
        sub_100304410(v24, v61, 1);
      }
    }

    else
    {
      uint64_t v110 = ASDLogHandleForCategory(2LL);
      __int128 v61 = (void *)objc_claimAutoreleasedReturnValue(v110);
      if (os_log_type_enabled((os_log_t)v61, OS_LOG_TYPE_DEFAULT))
      {
        id v111 = self->_coordinator;
        *(_DWORD *)__int128 buf = 138412546;
        *(void *)&uint8_t buf[4] = v111;
        id v128 = 2114;
        uint64_t v129 = v26;
        _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v61,  OS_LOG_TYPE_DEFAULT,  "[%@] SKippping configuration of non-VPP install for clientID: %{public}@",  buf,  0x16u);
      }
    }
  }

LABEL_48:
  uint64_t v70 = v12;
  if (v12)
  {
    id v71 = sub_1001E26D0(self->_install, (uint64_t)@"variant_id");
    uint64_t v72 = (void *)objc_claimAutoreleasedReturnValue(v71);
    [v24 setVariantID:v72];

    id v13 = &OBJC_IVAR___ODRApplication__variantID;
    if (!v24)
    {
      id v73 = ASDLogHandleForCategory(2LL);
      id v74 = (os_log_s *)objc_claimAutoreleasedReturnValue(v73);
      if (os_log_type_enabled(v74, OS_LOG_TYPE_FAULT))
      {
        uint64_t v118 = self->_coordinator;
        *(_DWORD *)__int128 buf = 138412546;
        *(void *)&uint8_t buf[4] = v118;
        id v128 = 2114;
        uint64_t v129 = 0LL;
        _os_log_fault_impl( (void *)&_mh_execute_header,  v74,  OS_LOG_TYPE_FAULT,  "[%@] Failed to process store metadata: %{public}@",  buf,  0x16u);
      }
    }

    [v70 setITunesMetadata:v24];
    if (v15 == 2)
    {
      uint64_t v75 = (void *)objc_claimAutoreleasedReturnValue( -[SQLiteMemoryEntity valueForProperty:]( self->_install,  "valueForProperty:",  @"provisioning_profiles"));
      id v76 = [v75 count];
      __int128 v77 = ASDLogHandleForCategory(2LL);
      id v78 = (os_log_s *)objc_claimAutoreleasedReturnValue(v77);
      id v79 = v78;
      if (v76)
      {
        if (os_log_type_enabled(v78, OS_LOG_TYPE_DEFAULT))
        {
          id v80 = self->_coordinator;
          id v81 = [v75 count];
          *(_DWORD *)__int128 buf = 138412546;
          *(void *)&uint8_t buf[4] = v80;
          id v128 = 2048;
          uint64_t v129 = v81;
          _os_log_impl( (void *)&_mh_execute_header,  v79,  OS_LOG_TYPE_DEFAULT,  "[%@] Provided %lu provisioning profiles",  buf,  0x16u);
        }

        id v82 = sub_1002B86C0(v75, &stru_1003F2D68);
        id v79 = (os_log_s *)objc_claimAutoreleasedReturnValue(v82);
        [v70 setProvisioningProfiles:v79];
      }

      else if (os_log_type_enabled(v78, OS_LOG_TYPE_ERROR))
      {
        SEL v119 = self->_coordinator;
        *(_DWORD *)__int128 buf = 138412290;
        *(void *)&uint8_t buf[4] = v119;
        _os_log_error_impl( (void *)&_mh_execute_header,  v79,  OS_LOG_TYPE_ERROR,  "[%@] No provisioning profiles were provided",  buf,  0xCu);
      }
    }

    id v12 = 0LL;
    goto LABEL_64;
  }

  id v13 = &OBJC_IVAR___ODRApplication__variantID;
LABEL_65:

  id v12 = v70;
LABEL_66:
  uint64_t v83 = v3;
  if (!v12) {
    uint64_t v83 = v16;
  }

  uint64_t v54 = v83;
  if (v12)
  {
    id v84 = *(void **)&self->super._success;
    id v126 = v54;
    id v85 = sub_1001E5F60(v84, v12, &v126);
    int v86 = v126;

    if ((v85 & 1) == 0)
    {
      __int128 v99 = sub_1003082D4( (uint64_t)AppInstallInstallResponse,  [*(id *)((char *)&self->super.super.super.isa + v13[239]) databaseID],  v86);
      __int128 v100 = (id *)objc_claimAutoreleasedReturnValue(v99);
LABEL_84:
      __int16 v50 = (_TtC9appstored6LogKey *)v100;
      uint64_t v54 = v86;
      goto LABEL_85;
    }

    if (!sub_1001E2598( *(id *)((char *)&self->super.super.super.isa + v13[239]),  (uint64_t)@"approved"))
    {
      __int128 v101 = [*(id *)((char *)&self->super.super.super.isa + v13[239]) databaseID];
      objc_opt_self(&OBJC_CLASS___AppInstallInstallResponse);
      id v95 = objc_alloc(&OBJC_CLASS___AppInstallInstallResponse);
      id v96 = v101;
      id v97 = 0LL;
LABEL_83:
      __int128 v100 = sub_1003083F0((id *)&v95->super.isa, v96, (void *)v97, 0LL);
      goto LABEL_84;
    }

    id v87 = ASDLogHandleForCategory(2LL);
    id v88 = (os_log_s *)objc_claimAutoreleasedReturnValue(v87);
    if (os_log_type_enabled(v88, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v89 = self->_coordinator;
      *(_DWORD *)__int128 buf = 138412290;
      *(void *)&uint8_t buf[4] = v89;
      _os_log_impl( (void *)&_mh_execute_header,  v88,  OS_LOG_TYPE_DEFAULT,  "[%@] Completing device security promise",  buf,  0xCu);
    }

    uint64_t v90 = *(void **)&self->super._success;
    if (!v90
      || ![v90 conformsToProtocol:&OBJC_PROTOCOL___IXCoordinatorWithDeviceSecurityPromise])
    {
LABEL_77:
      id v93 = sub_1001E5D94(*(void **)&self->super._success, 0LL);
      id v94 = [*(id *)((char *)&self->super.super.super.isa + v13[239]) databaseID];
      objc_opt_self(&OBJC_CLASS___AppInstallInstallResponse);
      id v95 = objc_alloc(&OBJC_CLASS___AppInstallInstallResponse);
      id v96 = v94;
      if (v93 == (id)4) {
        id v97 = 6LL;
      }
      else {
        id v97 = 1LL;
      }
      goto LABEL_83;
    }

    id v91 = *(void **)&self->super._success;
    *(void *)__int128 buf = v86;
    id v92 = sub_1001E5B84(v91, buf);
    uint64_t v54 = *(id *)buf;

    if (v92)
    {
      int v86 = v54;
      goto LABEL_77;
    }
  }

  __int128 v98 = sub_1003082D4( (uint64_t)AppInstallInstallResponse,  [*(id *)((char *)&self->super.super.super.isa + v13[239]) databaseID],  v54);
  __int16 v50 = (_TtC9appstored6LogKey *)objc_claimAutoreleasedReturnValue(v98);
LABEL_85:

LABEL_86:
  uint64_t v102 = self->_logKey;
  self->_logKey = v50;
}

LABEL_5:
  return v3;
}

void sub_1002177F4(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    uint64_t v4 = ASDLogHandleForCategory(28LL);
    id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      uint64_t v6 = *(void *)(a1 + 32);
      int v7 = 138412546;
      uint64_t v8 = v6;
      __int16 v9 = 2114;
      id v10 = v3;
      _os_log_error_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_ERROR,  "[%@] Encountered error opening store. Error: %{public}@",  (uint8_t *)&v7,  0x16u);
    }
  }
}

void sub_1002178C4(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    uint64_t v4 = ASDLogHandleForCategory(28LL);
    id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      uint64_t v6 = *(void *)(a1 + 32);
      int v7 = 138412546;
      uint64_t v8 = v6;
      __int16 v9 = 2114;
      id v10 = v3;
      _os_log_error_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_ERROR,  "[%@] Encountered error opening store. Error: %{public}@",  (uint8_t *)&v7,  0x16u);
    }
  }
}

void sub_100217994(void *a1)
{
  id v1 = a1;
  uint64_t v2 = ASDErrorWithTitleAndMessage( ASDErrorDomain,  749LL,  @"Distributor required",  @"Distributor needs to be installed to proceed");
  id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
  id v5 = sub_1002EEBC0((uint64_t)&OBJC_CLASS___AppInstallsDatabaseStore);
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472LL;
  void v10[2] = sub_100217AC0;
  v10[3] = &unk_1003ECE98;
  id v9 = v1;
  id v11 = v9;
  id v7 = v3;
  id v12 = v7;
  id v8 = v4;
  id v13 = v8;
  [v6 modifyUsingTransaction:v10];

  if ([v8 count]) {
    sub_100215A54((uint64_t)&OBJC_CLASS___RestoreManager, v8, @"Distributor needs to be installed");
  }
}

uint64_t sub_100217AC0(void **a1, void *a2)
{
  id v3 = (void *)objc_claimAutoreleasedReturnValue([a2 connection]);
  id v4 = sub_10024C1D0((uint64_t)&OBJC_CLASS___AppInstallEntity, v3, a1[4]);
  id v5 = (void *)objc_claimAutoreleasedReturnValue(v4);

  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472LL;
  void v7[2] = sub_100217B88;
  v7[3] = &unk_1003ECE70;
  id v8 = a1[5];
  id v9 = a1[6];
  [v5 enumerateMemoryEntitiesUsingBlock:v7];

  return 1LL;
}

void sub_100217B88(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  sub_1002D7A84(v4, v3);
  [*(id *)(a1 + 40) addObject:v4];
}

uint64_t sub_100217BD0(uint64_t a1, void *a2, void *a3, int a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  uint64_t v11 = sub_1002138D8(a1);
  uint64_t v12 = ASDLogHandleForCategory(29LL);
  id v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)__int128 buf = 138412546;
    *(void *)&uint8_t buf[4] = v9;
    *(_WORD *)&_BYTE buf[12] = 2048;
    *(void *)&buf[14] = v11;
    _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "[%@] Found %ld app(s) needing to install a distributor",  buf,  0x16u);
  }

  if (!v11 && !a4)
  {
    uint64_t v14 = 1LL;
    goto LABEL_24;
  }

  *(void *)__int128 buf = 0LL;
  *(void *)&uint8_t buf[8] = buf;
  *(void *)&uint8_t buf[16] = 0x2020000000LL;
  char v61 = 0;
  uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([0 localizedName]);
  if (!v10)
  {
    __int128 v45 = 0LL;
LABEL_13:
    uint64_t v19 = ASDLocalizedString(@"RESTORE_NEEDS_APP_STORE_MESSAGE_GENERIC");
    __int128 v18 = (void *)objc_claimAutoreleasedReturnValue(v19);
    id v47 = (void *)objc_claimAutoreleasedReturnValue(+[NSString localizedStringWithFormat:](&OBJC_CLASS___NSString, "localizedStringWithFormat:", v18));
    __int16 v48 = v15;
    goto LABEL_14;
  }

  __int128 v16 = (void *)objc_claimAutoreleasedReturnValue(+[ApplicationProxy proxyForBundleID:](&OBJC_CLASS___ApplicationProxy, "proxyForBundleID:", v10));
  __int16 v48 = (void *)objc_claimAutoreleasedReturnValue([v16 localizedName]);
  __int128 v45 = v16;

  if (!v16)
  {
    __int128 v45 = 0LL;
    goto LABEL_12;
  }

  if (![v48 length])
  {
LABEL_12:
    uint64_t v15 = v48;
    goto LABEL_13;
  }

  uint64_t v17 = ASDLocalizedString(@"RESTORE_NEEDS_APP_STORE_MESSAGE");
  __int128 v18 = (void *)objc_claimAutoreleasedReturnValue(v17);
  id v47 = (void *)objc_claimAutoreleasedReturnValue(+[NSString localizedStringWithFormat:](&OBJC_CLASS___NSString, "localizedStringWithFormat:", v18));
LABEL_14:

  uint64_t v20 = ASDLocalizedString(@"RESTORE_NEEDS_APP_STORE_TITLE");
  id v21 = (void *)objc_claimAutoreleasedReturnValue(v20);
  id v22 = (void *)objc_claimAutoreleasedReturnValue( +[AMSDialogRequest requestWithTitle:message:]( &OBJC_CLASS___AMSDialogRequest,  "requestWithTitle:message:",  v21,  v47));

  uint64_t v23 = ASDLocalizedString(@"CANCEL");
  uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue(v23);
  id v46 = (void *)objc_claimAutoreleasedReturnValue( +[AMSDialogAction actionWithTitle:style:]( &OBJC_CLASS___AMSDialogAction,  "actionWithTitle:style:",  v24,  2LL));

  uint64_t v25 = ASDLocalizedString(@"INSTALL");
  id v26 = (void *)objc_claimAutoreleasedReturnValue(v25);
  id v27 = (void *)objc_claimAutoreleasedReturnValue(+[AMSDialogAction actionWithTitle:](&OBJC_CLASS___AMSDialogAction, "actionWithTitle:", v26));

  v59[0] = v46;
  v59[1] = v27;
  id v28 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v59, 2LL));
  [v22 setButtonActions:v28];

  dispatch_semaphore_t v29 = dispatch_semaphore_create(0LL);
  uint64_t v30 = objc_alloc_init(&OBJC_CLASS___InteractiveRequestPresenter);
  v49[0] = _NSConcreteStackBlock;
  v49[1] = 3221225472LL;
  v49[2] = sub_1002180E8;
  v49[3] = &unk_1003EB428;
  id v31 = v9;
  id v50 = v31;
  id v32 = v27;
  id v51 = v32;
  id v53 = buf;
  id v33 = v29;
  __int16 v52 = v33;
  -[InteractiveRequestPresenter presentDialogRequest:resultHandler:]( v30,  "presentDialogRequest:resultHandler:",  v22,  v49);
  dispatch_semaphore_wait(v33, 0xFFFFFFFFFFFFFFFFLL);
  if (*(_BYTE *)(*(void *)&buf[8] + 24LL))
  {
    if (v10)
    {
      id v34 = sub_1002FE08C((uint64_t)&OBJC_CLASS___AppInstallPredicates, v10);
      uint64_t v35 = (void *)objc_claimAutoreleasedReturnValue(v34);
      id v36 = sub_1002182C4(-1LL, v35);
      id v37 = (void *)objc_claimAutoreleasedReturnValue(v36);
      if ([v37 count])
      {
        uint64_t v38 = ASDLogHandleForCategory(29LL);
        id v39 = (os_log_s *)objc_claimAutoreleasedReturnValue(v38);
        if (os_log_type_enabled(v39, OS_LOG_TYPE_DEFAULT))
        {
          __int128 v44 = (void *)objc_claimAutoreleasedReturnValue([v37 array]);
          uint64_t v40 = objc_claimAutoreleasedReturnValue(objc_msgSend(v44, "componentsJoinedByString:", @", "));
          *(_DWORD *)__int128 v55 = 138412546;
          id v56 = v31;
          __int16 v57 = 2114;
          uint64_t v41 = (void *)v40;
          uint64_t v58 = v40;
          _os_log_impl( (void *)&_mh_execute_header,  v39,  OS_LOG_TYPE_DEFAULT,  "[%@] User selected to install distributor [%{public}@]",  v55,  0x16u);
        }
      }
    }
  }

  else if (a5)
  {
    uint64_t v42 = ASDErrorWithTitleAndMessage( ASDErrorDomain,  907LL,  @"User Canceled",  @"User canceled dialog request to install distributor");
    *a5 = (id)objc_claimAutoreleasedReturnValue(v42);
  }

  unsigned __int8 v54 = 0;

  _Block_object_dispose(buf, 8);
  uint64_t v14 = v54;
LABEL_24:

  return v14;
}

void sub_1002180A4(_Unwind_Exception *a1)
{
}

void sub_1002180E8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (!v6)
  {
    if (*(void *)(a1 + 40)
      && (id v10 = (void *)objc_claimAutoreleasedReturnValue([v5 selectedActionIdentifier]),
          uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) identifier]),
          unsigned int v12 = [v10 isEqualToString:v11],
          v11,
          v10,
          v12))
    {
      *(_BYTE *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL) = 1;
      uint64_t v13 = ASDLogHandleForCategory(29LL);
      id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v13);
      if (!os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_11;
      }
      uint64_t v14 = *(void *)(a1 + 32);
      int v18 = 138412290;
      uint64_t v19 = v14;
      uint64_t v15 = "[%@] User selected to install distributor";
    }

    else
    {
      uint64_t v16 = ASDLogHandleForCategory(29LL);
      id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v16);
      if (!os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_11;
      }
      uint64_t v17 = *(void *)(a1 + 32);
      int v18 = 138412290;
      uint64_t v19 = v17;
      uint64_t v15 = "[%@] User selected to not install distributor";
    }

    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, v15, (uint8_t *)&v18, 0xCu);
    goto LABEL_11;
  }

  uint64_t v7 = ASDLogHandleForCategory(29LL);
  id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
  {
    uint64_t v9 = *(void *)(a1 + 32);
    int v18 = 138412546;
    uint64_t v19 = v9;
    __int16 v20 = 2114;
    id v21 = v6;
    _os_log_error_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_ERROR,  "[%@] Wasn't able to display restore distributor dialog: %{public}@",  (uint8_t *)&v18,  0x16u);
  }

id sub_1002182C4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableOrderedSet orderedSet](&OBJC_CLASS___NSMutableOrderedSet, "orderedSet"));
  id v5 = sub_1002EEBC0((uint64_t)&OBJC_CLASS___AppInstallsDatabaseStore);
  id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472LL;
  void v11[2] = sub_10021839C;
  v11[3] = &unk_1003ECEC0;
  id v7 = v3;
  id v13 = v4;
  uint64_t v14 = a1;
  id v12 = v7;
  id v8 = v4;
  [v6 modifyUsingTransaction:v11];

  id v9 = [v8 copy];
  return v9;
}

uint64_t sub_10021839C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 connection]);
  id v5 = sub_10024C1D0((uint64_t)&OBJC_CLASS___AppInstallEntity, v4, *(void **)(a1 + 32));
  id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);

  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472LL;
  void v11[2] = sub_100218470;
  v11[3] = &unk_1003EB4A0;
  id v8 = *(void **)(a1 + 40);
  uint64_t v7 = *(void *)(a1 + 48);
  id v12 = v3;
  uint64_t v14 = v7;
  id v13 = v8;
  id v9 = v3;
  [v6 enumeratePersistentIDsUsingBlock:v11];

  return 1LL;
}

void sub_100218470(uint64_t a1, uint64_t a2)
{
  id v4 = objc_alloc(&OBJC_CLASS___AppInstallEntity);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) connection]);
  id v9 = -[SQLiteEntity initWithPersistentID:onConnection:](v4, "initWithPersistentID:onConnection:", a2, v5);

  id v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", *(void *)(a1 + 48)));
  -[SQLiteEntity setValue:forProperty:](v9, "setValue:forProperty:", v6, @"bootstrapped");

  id v7 = sub_1001E26D0(v9, (uint64_t)@"bundle_id");
  id v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
  if (v8) {
    [*(id *)(a1 + 40) addObject:v8];
  }
}

void sub_100218538(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"restore_type",  &off_10040C6D0));
  v16[0] = v4;
  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"restore_type",  &off_10040C6E8));
  v16[1] = v5;
  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"restore_type",  &off_10040C700));
  void v16[2] = v6;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v16, 3LL));
  id v8 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAnyPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAnyPredicates:",  v7));

  id v9 = (void *)objc_claimAutoreleasedReturnValue([v3 connection]);
  id v10 = sub_10024C1D0((uint64_t)&OBJC_CLASS___AppInstallEntity, v9, v8);
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(v10);

  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472LL;
  void v13[2] = sub_1002186FC;
  v13[3] = &unk_1003EB478;
  id v14 = v3;
  id v15 = *(id *)(a1 + 32);
  id v12 = v3;
  [v11 enumeratePersistentIDsUsingBlock:v13];
}

void sub_1002186FC(uint64_t a1, uint64_t a2)
{
  id v4 = objc_alloc(&OBJC_CLASS___AppInstallEntity);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) connection]);
  id v28 = -[SQLiteEntity initWithPersistentID:onConnection:](v4, "initWithPersistentID:onConnection:", a2, v5);

  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[SQLiteEntity valueForProperty:](v28, "valueForProperty:", @"restore_state"));
  id v7 = [v6 integerValue];

  id v8 = sub_1001E2698(v28, (uint64_t)@"bootstrapped");
  id v9 = (void *)objc_claimAutoreleasedReturnValue(-[SQLiteEntity valueForProperty:](v28, "valueForProperty:", @"order_index"));
  uint64_t v10 = objc_claimAutoreleasedReturnValue(-[SQLiteEntity valueForProperty:](v28, "valueForProperty:", @"phase"));
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(-[SQLiteEntity valueForProperty:](v28, "valueForProperty:", @"coordinator_id"));
  if (v10) {
    id v12 = (_UNKNOWN **)v10;
  }
  else {
    id v12 = &off_10040C718;
  }
  id v13 = -[LogKey initWithAppInstallEntity:]( objc_alloc(&OBJC_CLASS____TtC9appstored6LogKey),  "initWithAppInstallEntity:",  v28);
  id v14 = (NSMutableArray *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 40) objectForKeyedSubscript:v12]);
  if (!v14)
  {
    id v14 = objc_opt_new(&OBJC_CLASS___NSMutableArray);
    [*(id *)(a1 + 40) setObject:v14 forKeyedSubscript:v12];
  }

  id v15 = sub_100296DB0(v28, (uint64_t)@"failure_error");
  uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
  if (v9) {
    uint64_t v17 = (const __CFString *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"order: %@ ",  v9));
  }
  else {
    uint64_t v17 = &stru_1003F3E40;
  }
  id v27 = v14;
  int v18 = (__CFString *)v17;
  if (v16)
  {
    uint64_t v25 = v12;
    id v26 = v9;
    uint64_t v19 = v11;
    __int16 v20 = (void *)objc_claimAutoreleasedReturnValue([v16 domain]);
    id v21 = v7;
    id v22 = [v16 code];
    uint64_t v23 = (void *)objc_claimAutoreleasedReturnValue([v16 localizedDescription]);
    uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"[%@] cid: %@ restoreState: %ld bootstrapPhase: %ld %@error: %@ %ld %@",  v13,  v19,  v21,  v8,  v18,  v20,  v22,  v23));

    uint64_t v11 = v19;
    id v12 = v25;
    id v9 = v26;
  }

  else
  {
    uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"[%@] cid: %@ restoreState: %ld bootstrapPhase: %ld %@",  v13,  v11,  v7,  v8,  v17));
  }

  -[NSMutableArray addObject:](v27, "addObject:", v24);
}

int64_t sub_100218980(id a1, NSString *a2, NSString *a3)
{
  id v4 = a3;
  NSInteger v5 = -[NSString integerValue](a2, "integerValue");
  NSInteger v6 = -[NSString integerValue](v4, "integerValue");

  if (v5 < v6) {
    return -1LL;
  }
  else {
    return v5 > v6;
  }
}

void sub_100218A2C(uint64_t a1)
{
  id v2 = sub_1001E1834((uint64_t)&OBJC_CLASS___DeviceStateMonitor);
  id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  int v4 = sub_1002164C0(*(void *)(a1 + 32));
  if (v3
    && (id v5 = sub_1001D17B8((uint64_t)&OBJC_CLASS___NetworkMonitor),
        NSInteger v6 = (void *)objc_claimAutoreleasedReturnValue(v5),
        unsigned int v7 = [v6 isConnected] & v4,
        v6,
        v7 == 1))
  {
    uint64_t v8 = ASDLogHandleForCategory(29LL);
    id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v33) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "Device state changed and ready to restore",  (uint8_t *)&v33,  2u);
    }

    uint64_t v10 = *(void **)(a1 + 32);
    if (v10) {
      uint64_t v11 = v10[4];
    }
    else {
      uint64_t v11 = 0LL;
    }
    [v10 _bootstrapWhenReadyWithInfo:v11];
    id v12 = *(_BYTE **)(a1 + 32);
    if (v12)
    {
      if (!v12[24]) {
        goto LABEL_26;
      }
      id v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter"));
      uint64_t v14 = *(void *)(a1 + 32);
      id v15 = sub_1001E1834((uint64_t)&OBJC_CLASS___DeviceStateMonitor);
      uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
      [v13 removeObserver:v14 name:@"DeviceStateDidChangeNotification" object:v16];

      id v12 = *(_BYTE **)(a1 + 32);
      if (v12)
      {
LABEL_26:
        if (!v12[25]) {
          goto LABEL_25;
        }
        uint64_t v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter"));
        uint64_t v18 = *(void *)(a1 + 32);
        id v19 = sub_1001D17B8((uint64_t)&OBJC_CLASS___NetworkMonitor);
        __int16 v20 = (void *)objc_claimAutoreleasedReturnValue(v19);
        [v17 removeObserver:v18 name:@"NetworkStateDidChangeNotification" object:v20];

        id v12 = *(_BYTE **)(a1 + 32);
        if (v12)
        {
LABEL_25:
          if (v12[26])
          {
            id v21 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter"));
            uint64_t v22 = *(void *)(a1 + 32);
            uint64_t v23 = AMSBagChangedNotification;
            id v24 = sub_1001D17B8((uint64_t)&OBJC_CLASS___NetworkMonitor);
            uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue(v24);
            [v21 removeObserver:v22 name:v23 object:v25];

            id v12 = *(_BYTE **)(a1 + 32);
          }
        }
      }
    }

    sub_100216EC4((uint64_t)v12, 0LL);
    uint64_t v26 = *(void *)(a1 + 32);
    if (v26)
    {
      *(_BYTE *)(v26 + 24) = 0;
      uint64_t v27 = *(void *)(a1 + 32);
      if (v27)
      {
        *(_BYTE *)(v27 + 25) = 0;
        uint64_t v28 = *(void *)(a1 + 32);
        if (v28) {
          *(_BYTE *)(v28 + 26) = 0;
        }
      }
    }
  }

  else
  {
    uint64_t v29 = ASDLogHandleForCategory(29LL);
    uint64_t v30 = (os_log_s *)objc_claimAutoreleasedReturnValue(v29);
    if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
    {
      id v31 = sub_1001D17B8((uint64_t)&OBJC_CLASS___NetworkMonitor);
      id v32 = (void *)objc_claimAutoreleasedReturnValue(v31);
      int v33 = 67109888;
      BOOL v34 = v3 != 0LL;
      __int16 v35 = 1024;
      BOOL v36 = v34;
      __int16 v37 = 1024;
      unsigned int v38 = [v32 isConnected];
      __int16 v39 = 1024;
      int v40 = v4;
      _os_log_impl( (void *)&_mh_execute_header,  v30,  OS_LOG_TYPE_DEFAULT,  "Device state changed setup not ready for restore. Setup complete: %d migrator complete: %d network connected: %d bag loaded: %d",  (uint8_t *)&v33,  0x1Au);
    }
  }
}

uint64_t sub_100218D18(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v13 = 0LL;
  if (a2)
  {
    sub_1001B3EA0(a2, v3, 0, &v13, &v18);
    int v4 = v13;
  }

  else
  {
    int v4 = 0LL;
    __int128 v18 = 0u;
    __int128 v19 = 0u;
  }

  id v5 = v4;
  uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 8LL);
  __int128 v7 = v19;
  *(_OWORD *)(v6 + 32) = v18;
  *(_OWORD *)(v6 + 4_Block_object_dispose((const void *)(v1 - 128), 8) = v7;
  if (v5)
  {
    uint64_t v8 = ASDLogHandleForCategory(29LL);
    id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      uint64_t v11 = sub_100323C54(*(void **)(a1 + 32));
      id v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
      *(_DWORD *)__int128 buf = 138412546;
      id v15 = v12;
      __int16 v16 = 2114;
      id v17 = v5;
      _os_log_error_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_ERROR,  "[%@] Restore import failed with error: %{public}@",  buf,  0x16u);
    }
  }

  else
  {
    [*(id *)(a1 + 32) setDatabaseID:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 32)];
  }

  return 1LL;
}

uint64_t sub_100218E58(uint64_t a1, void *a2, void *a3, char a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  uint64_t v11 = objc_alloc(&OBJC_CLASS___RestoreBatchTask);
  id v41 = v9;
  id v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v41, 1LL));
  id v13 = sub_1001FF38C((id *)&v11->super.super.super.isa, v12);

  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v9 valueForProperty:@"restore_type"]);
  id v15 = [v14 integerValue];

  if (v15 == (id)3)
  {
    char v17 = 1;
    if (!v13) {
      goto LABEL_6;
    }
    *((_BYTE *)v13 + 56) = 1;
    goto LABEL_5;
  }

  if (v13)
  {
LABEL_5:
    objc_setProperty_atomic_copy(v13, v16, v10, 40LL);
    char v17 = 0;
    *((_BYTE *)v13 + 57) = a4;
    goto LABEL_6;
  }

  char v17 = 1;
LABEL_6:
  uint64_t v18 = *(void *)(a1 + 16);
  int v40 = v13;
  __int128 v19 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v40, 1LL));
  if (v18) {
    [*(id *)(v18 + 8) addOperations:v19 waitUntilFinished:1];
  }

  if ((v17 & 1) != 0) {
    id Property = 0LL;
  }
  else {
    id Property = objc_getProperty(v13, v20, 80LL, 1);
  }
  id v22 = Property;
  id v23 = [v22 count];

  if (v23)
  {
    id v25 = sub_1002EEBC0((uint64_t)&OBJC_CLASS___AppInstallsDatabaseStore);
    uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue(v25);
    v38[0] = _NSConcreteStackBlock;
    v38[1] = 3221225472LL;
    v38[2] = sub_100219FD4;
    v38[3] = &unk_1003EA9D8;
    __int16 v39 = v13;
    [v26 modifyUsingTransaction:v38];
  }

  if ((v17 & 1) != 0) {
    id v27 = 0LL;
  }
  else {
    id v27 = objc_getProperty(v13, v24, 32LL, 1);
  }
  id v28 = v27;

  if (a5 && v28)
  {
    if ((v17 & 1) != 0) {
      id v30 = 0LL;
    }
    else {
      id v30 = objc_getProperty(v13, v29, 32LL, 1);
    }
    uint64_t v31 = 0LL;
    *a5 = v30;
  }

  else
  {
    id v32 = sub_1002D79EC(v9);
    int v33 = (void *)objc_claimAutoreleasedReturnValue(v32);
    BOOL v34 = v33;
    if (a5) {
      BOOL v35 = v33 == 0LL;
    }
    else {
      BOOL v35 = 1;
    }
    int v36 = !v35;
    if (!v35) {
      *a5 = v33;
    }
    uint64_t v31 = v36 ^ 1u;
  }

  return v31;
}

BOOL sub_100219110(void *a1)
{
  id v1 = a1;
  id v2 = v1;
  BOOL v4 = 0;
  if (v1)
  {
    uint64_t v3 = ASDErrorDomain;
    if ((ASDErrorIsEqual(v1, ASDErrorDomain, 744LL) & 1) != 0
      || (ASDErrorIsEqual(v2, v3, 530LL) & 1) != 0
      || (ASDErrorIsEqual(v2, AKAppleIDAuthenticationErrorDomain, -7003LL) & 1) != 0)
    {
      BOOL v4 = 1;
    }
  }

  return v4;
}

uint64_t sub_100219198(uint64_t a1, void *a2)
{
  id v3 = a2;
  BOOL v4 = v3;
  if (v3)
  {
    sub_1001B3EA0(v3, *(void **)(a1 + 32), 0, 0LL, &v14);
    if (*(_BYTE *)(a1 + 48)) {
      BOOL v5 = v15 == 1;
    }
    else {
      BOOL v5 = 0;
    }
    if (v5)
    {
      uint64_t v6 = objc_alloc(&OBJC_CLASS___AppInstallEntity);
      uint64_t v7 = v14;
      uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v4 connection]);
      id v9 = -[SQLiteEntity initWithPersistentID:onConnection:](v6, "initWithPersistentID:onConnection:", v7, v8);

      id v10 = sub_1002D68B4(v9);
      uint64_t v11 = *(void *)(*(void *)(a1 + 40) + 8LL);
      id v12 = *(void **)(v11 + 40);
      *(void *)(v11 + 40) = v10;
    }
  }

  return 1LL;
}

void sub_100219294(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = sub_1002EEBC0((uint64_t)&OBJC_CLASS___AppInstallsDatabaseStore);
  BOOL v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472LL;
  _OWORD v6[2] = sub_100219350;
  v6[3] = &unk_1003ECEC0;
  uint64_t v9 = *(void *)(a1 + 48);
  id v7 = WeakRetained;
  id v8 = *(id *)(a1 + 32);
  id v5 = WeakRetained;
  [v4 modifyUsingTransaction:v6];
}

uint64_t sub_100219350(uint64_t a1, void *a2)
{
  id v3 = a2;
  BOOL v4 = objc_alloc(&OBJC_CLASS___AppInstallEntity);
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v3 connection]);
  id v7 = -[SQLiteEntity initWithPersistentID:onConnection:](v4, "initWithPersistentID:onConnection:", v5, v6);

  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472LL;
  void v14[2] = sub_100219494;
  void v14[3] = &unk_1003ECF50;
  id v15 = *(id *)(a1 + 32);
  sub_10021C8F4(v7, v14);
  uint64_t v9 = *(void *)(a1 + 32);
  if (v9)
  {
    char v10 = *(_BYTE *)(v9 + 48) & 1;
    if (v3)
    {
LABEL_3:
      id Property = objc_getProperty(v3, v8, 24LL, 1);
      goto LABEL_4;
    }
  }

  else
  {
    char v10 = 0;
    if (v3) {
      goto LABEL_3;
    }
  }

  id Property = 0LL;
LABEL_4:
  id v12 = Property;

  if ((v10 & 1) != 0)
  {
    if (v12) {
      v12[16] |= 0x1000uLL;
    }
  }

  else
  {
    sub_1001EBE6C((uint64_t)v12, *(void **)(a1 + 40));
  }

  return 1LL;
}

void sub_100219494(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  id v9 = a2;
  if (v3) {
    uint64_t v4 = *(void *)(v3 + 56);
  }
  else {
    uint64_t v4 = 0LL;
  }
  sub_1002E60D4((uint64_t)v9, v4);
  uint64_t v5 = *(void *)(a1 + 32);
  if (v5) {
    uint64_t v6 = *(void *)(v5 + 64);
  }
  else {
    uint64_t v6 = 0LL;
  }
  sub_1002E6174((uint64_t)v9, v6);
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    uint64_t v8 = *(void *)(v7 + 72);
  }
  else {
    uint64_t v8 = 0LL;
  }
  sub_1002E5F7C((uint64_t)v9, v8);
}

BOOL sub_100219530(uint64_t a1, void *a2)
{
  if (!a1) {
    return 0LL;
  }
  id v2 = sub_100296DB0(a2, (uint64_t)@"failure_error");
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  uint64_t v4 = v3;
  if (v3) {
    BOOL v5 = sub_100219110(v3);
  }
  else {
    BOOL v5 = 0LL;
  }

  return v5;
}

void sub_100219590(uint64_t a1, void *a2)
{
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([a2 connection]);
  id v4 = sub_1002FD5B0((uint64_t)&OBJC_CLASS___AppInstallPredicates);
  BOOL v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  id v6 = sub_10024C1D0((uint64_t)&OBJC_CLASS___AppInstallEntity, v3, v5);
  id v7 = (id)objc_claimAutoreleasedReturnValue(v6);

  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = [v7 countOfEntities];
}

uint64_t sub_100219620(uint64_t a1, void *a2)
{
  id v4 = a2;
  id Property = *(id *)(a1 + 32);
  if (Property) {
    id Property = objc_getProperty(Property, v3, 80LL, 1);
  }
  id v6 = Property;
  id v7 = [v6 count];

  if (v7)
  {
    id v9 = *(id *)(a1 + 32);
    if (v9) {
      id v9 = objc_getProperty(v9, v8, 80LL, 1);
    }
    id v10 = v9;
    id v11 = sub_1001B4590(v4, v10);
  }

  id v12 = *(id *)(a1 + 32);
  if (v12) {
    id v12 = objc_getProperty(v12, v8, 72LL, 1);
  }
  id v13 = v12;
  id v14 = [v13 count];

  if (v14)
  {
    id v16 = *(id *)(a1 + 32);
    if (v16) {
      id v16 = objc_getProperty(v16, v15, 72LL, 1);
    }
    id v17 = v16;
    id v18 = sub_1001B4590(v4, v17);
  }

  id v19 = *(id *)(a1 + 32);
  if (v19) {
    id v19 = objc_getProperty(v19, v15, 64LL, 1);
  }
  id v20 = v19;
  id v21 = [v20 count];

  if (v21)
  {
    id v23 = *(id *)(a1 + 32);
    if (v23) {
      id v23 = objc_getProperty(v23, v22, 64LL, 1);
    }
    id v24 = v23;
    id v25 = sub_1001B4590(v4, v24);
  }

  return 1LL;
}

void sub_100219788(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 connection]);
  id v5 = sub_1002FDEB4((uint64_t)&OBJC_CLASS___AppInstallPredicates);
  id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  id v7 = sub_10024C1D0((uint64_t)&OBJC_CLASS___AppInstallEntity, v4, v6);
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(v7);

  v17[0] = @"account_id";
  v17[1] = @"downloader_id";
  v17[2] = @"restore_state";
  id v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v17, 3LL));
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472LL;
  void v13[2] = sub_1002198E4;
  v13[3] = &unk_1003ECFA0;
  uint64_t v10 = *(void *)(a1 + 32);
  id v11 = *(void **)(a1 + 40);
  id v14 = v3;
  uint64_t v15 = v10;
  id v16 = v11;
  id v12 = v3;
  [v8 enumeratePersistentIDsAndProperties:v9 usingBlock:v13];
}

void sub_1002198E4(uint64_t a1, uint64_t a2)
{
  id v4 = objc_alloc(&OBJC_CLASS___AppInstallEntity);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) connection]);
  id v6 = -[SQLiteEntity initWithPersistentID:onConnection:](v4, "initWithPersistentID:onConnection:", a2, v5);

  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[SQLiteEntity valueForProperty:](v6, "valueForProperty:", @"restore_state"));
  id v8 = [v7 integerValue];

  if (v8 == (id)1 && sub_100219530(*(void *)(a1 + 40), v6))
  {
    id v9 = (void *)objc_claimAutoreleasedReturnValue(-[SQLiteEntity valueForProperty:](v6, "valueForProperty:", @"apple_id"));
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(-[SQLiteEntity valueForProperty:](v6, "valueForProperty:", @"account_id"));
    id v11 = (void *)objc_claimAutoreleasedReturnValue(-[SQLiteEntity valueForProperty:](v6, "valueForProperty:", @"downloader_id"));
    id v12 = v11;
    if (v9)
    {
      if (v11 && (uint64_t)[v11 longLongValue] >= 1)
      {
        id v13 = *(void **)(a1 + 48);
        id v14 = v12;
LABEL_10:
        uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v14 stringValue]);
        [v13 setObject:v9 forKeyedSubscript:v15];

LABEL_17:
        goto LABEL_18;
      }

      if (v10 && (uint64_t)[v10 longLongValue] >= 1)
      {
        id v13 = *(void **)(a1 + 48);
        id v14 = v10;
        goto LABEL_10;
      }

      id v16 = -[LogKey initWithAppInstallEntity:]( objc_alloc(&OBJC_CLASS____TtC9appstored6LogKey),  "initWithAppInstallEntity:",  v6);
      uint64_t v20 = ASDLogHandleForCategory(29LL);
      id v18 = (os_log_s *)objc_claimAutoreleasedReturnValue(v20);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
      {
        int v21 = 138412290;
        id v22 = v16;
        id v19 = "[%@] Couldn't find a downloaderID or purchaserID";
        goto LABEL_15;
      }
    }

    else
    {
      id v16 = -[LogKey initWithAppInstallEntity:]( objc_alloc(&OBJC_CLASS____TtC9appstored6LogKey),  "initWithAppInstallEntity:",  v6);
      uint64_t v17 = ASDLogHandleForCategory(29LL);
      id v18 = (os_log_s *)objc_claimAutoreleasedReturnValue(v17);
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
      {
        int v21 = 138412290;
        id v22 = v16;
        id v19 = "[%@] Couldn't find an appleID";
LABEL_15:
        _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, v19, (uint8_t *)&v21, 0xCu);
      }
    }

    goto LABEL_17;
  }

void sub_100219B40(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  uint64_t v10 = ASDLogHandleForCategory(29LL);
  id v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
  if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)__int128 buf = 138543874;
    id v27 = v7;
    __int16 v28 = 2114;
    id v29 = v9;
    __int16 v30 = 2114;
    id v31 = v8;
    _os_log_error_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_ERROR,  "Failing all coordinators for appleID: %{public}@ error: %{public}@ reason: %{public}@",  buf,  0x20u);
  }

  id v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
  id v13 = sub_1002EEBC0((uint64_t)&OBJC_CLASS___AppInstallsDatabaseStore);
  id v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
  id v18 = _NSConcreteStackBlock;
  uint64_t v19 = 3221225472LL;
  uint64_t v20 = sub_100219CFC;
  int v21 = &unk_1003ED018;
  id v15 = v7;
  id v22 = v15;
  uint64_t v23 = a1;
  id v16 = v9;
  id v24 = v16;
  id v17 = v12;
  id v25 = v17;
  [v14 readUsingSession:&v18];

  if (objc_msgSend(v17, "count", v18, v19, v20, v21)) {
    sub_100215A54((uint64_t)&OBJC_CLASS___RestoreManager, v17, v8);
  }
}

void sub_100219CFC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"restore_type",  &off_10040C6E8));
  v20[0] = v4;
  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"restore_state",  &off_10040C6E8));
  v20[1] = v5;
  id v6 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"apple_id",  *(void *)(a1 + 32)));
  v20[2] = v6;
  id v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v20, 3LL));
  id v8 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v7));

  id v9 = (void *)objc_claimAutoreleasedReturnValue([v3 connection]);
  id v10 = sub_10024C1D0((uint64_t)&OBJC_CLASS___AppInstallEntity, v9, v8);
  id v11 = (void *)objc_claimAutoreleasedReturnValue(v10);

  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472LL;
  id v15[2] = sub_100219ED4;
  void v15[3] = &unk_1003ECFF0;
  uint64_t v12 = *(void *)(a1 + 40);
  id v13 = *(void **)(a1 + 48);
  id v16 = v3;
  uint64_t v17 = v12;
  id v18 = v13;
  id v19 = *(id *)(a1 + 56);
  id v14 = v3;
  [v11 enumeratePersistentIDsUsingBlock:v15];
}

void sub_100219ED4(uint64_t a1, uint64_t a2)
{
  id v4 = objc_alloc(&OBJC_CLASS___AppInstallEntity);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) connection]);
  uint64_t v12 = -[SQLiteEntity initWithPersistentID:onConnection:](v4, "initWithPersistentID:onConnection:", a2, v5);

  id v6 = (void *)objc_claimAutoreleasedReturnValue(-[SQLiteEntity valueForProperty:](v12, "valueForProperty:", @"restore_state"));
  id v7 = [v6 integerValue];

  if (v7 == (id)1 && sub_100219530(*(void *)(a1 + 40), v12))
  {
    id v8 = objc_alloc(&OBJC_CLASS___RestoreAppInstall);
    id v9 = (void *)objc_claimAutoreleasedReturnValue(+[RestoreAppInstall defaultProperties](&OBJC_CLASS___RestoreAppInstall, "defaultProperties"));
    id v10 = -[SQLiteMemoryEntity initWithDatabaseEntity:properties:](v8, "initWithDatabaseEntity:properties:", v12, v9);

    id v11 = *(void **)(a1 + 48);
    if (v11) {
      sub_1002D7A84(v10, v11);
    }
    [*(id *)(a1 + 56) addObject:v10];
  }
}

uint64_t sub_100219FD4(uint64_t a1, void *a2)
{
  id v4 = a2;
  id Property = *(id *)(a1 + 32);
  if (Property) {
    id Property = objc_getProperty(Property, v3, 80LL, 1);
  }
  id v6 = Property;
  id v7 = sub_1001B4590(v4, v6);

  return 1LL;
}

uint64_t sub_10021A038(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 connection]);
  id v5 = sub_1002FDEB4((uint64_t)&OBJC_CLASS___AppInstallPredicates);
  id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  id v7 = sub_10024C1D0((uint64_t)&OBJC_CLASS___AppInstallEntity, v4, v6);
  id v8 = (void *)objc_claimAutoreleasedReturnValue(v7);

  id v9 = (void *)objc_claimAutoreleasedReturnValue(+[RestoreAppInstall defaultProperties](&OBJC_CLASS___RestoreAppInstall, "defaultProperties"));
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472LL;
  void v14[2] = sub_10021A160;
  void v14[3] = &unk_1003ED040;
  uint64_t v10 = *(void *)(a1 + 32);
  id v11 = *(void **)(a1 + 40);
  id v15 = v3;
  uint64_t v16 = v10;
  id v17 = v11;
  id v18 = *(id *)(a1 + 48);
  __int128 v19 = *(_OWORD *)(a1 + 56);
  id v12 = v3;
  [v8 enumeratePersistentIDsAndProperties:v9 usingBlock:v14];

  return 1LL;
}

void sub_10021A160(uint64_t a1, uint64_t a2)
{
  id v4 = objc_alloc(&OBJC_CLASS___AppInstallEntity);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) connection]);
  id v6 = -[SQLiteEntity initWithPersistentID:onConnection:](v4, "initWithPersistentID:onConnection:", a2, v5);

  id v7 = (void *)objc_claimAutoreleasedReturnValue(-[SQLiteEntity valueForProperty:](v6, "valueForProperty:", @"restore_state"));
  id v8 = [v7 integerValue];

  if (v8 && sub_100219530(*(void *)(a1 + 40), v6))
  {
    id v9 = (void *)objc_claimAutoreleasedReturnValue(-[SQLiteEntity valueForProperty:](v6, "valueForProperty:", @"apple_id"));
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(-[SQLiteEntity valueForProperty:](v6, "valueForProperty:", @"bundle_id"));
    id v11 = (void *)objc_claimAutoreleasedReturnValue(-[SQLiteEntity valueForProperty:](v6, "valueForProperty:", @"account_id"));
    id v12 = (void *)objc_claimAutoreleasedReturnValue(-[SQLiteEntity valueForProperty:](v6, "valueForProperty:", @"downloader_id"));
    if ((v9 && *(void *)(a1 + 48) && (objc_msgSend(v9, "isEqualToString:") & 1) != 0
       || (sub_10021A4AC(*(id *)(a1 + 40), *(void **)(a1 + 56), v11) & 1) != 0
       || sub_10021A4AC(*(id *)(a1 + 40), *(void **)(a1 + 56), v12))
      && v10)
    {
      uint64_t v20 = -[LogKey initWithAppInstallEntity:]( objc_alloc(&OBJC_CLASS____TtC9appstored6LogKey),  "initWithAppInstallEntity:",  v6);
      id v13 = objc_alloc(&OBJC_CLASS___RestoreAppInstall);
      id v14 = (void *)objc_claimAutoreleasedReturnValue(+[RestoreAppInstall defaultProperties](&OBJC_CLASS___RestoreAppInstall, "defaultProperties"));
      id v15 = -[SQLiteMemoryEntity initWithDatabaseEntity:properties:](v13, "initWithDatabaseEntity:properties:", v6, v14);

      [*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) addObject:v15];
      uint64_t v16 = -[LSApplicationRecord initWithBundleIdentifier:allowPlaceholder:error:]( objc_alloc(&OBJC_CLASS___LSApplicationRecord),  "initWithBundleIdentifier:allowPlaceholder:error:",  v10,  1LL,  0LL);
      if (-[LSApplicationRecord installType](v16, "installType") == (id)7)
      {
        -[SQLiteMemoryEntity setValue:forProperty:](v15, "setValue:forProperty:", &off_10040C6D0, @"restore_type");
        -[SQLiteEntity setValue:forProperty:](v6, "setValue:forProperty:", &off_10040C6D0, @"restore_type");
        uint64_t v17 = ASDLogHandleForCategory(29LL);
        id v18 = (os_log_s *)objc_claimAutoreleasedReturnValue(v17);
        if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)__int128 buf = 138412290;
          id v22 = v20;
          _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_DEFAULT,  "[%@] Making a promoting coordinator",  buf,  0xCu);
        }
      }

      -[SQLiteMemoryEntity setValue:forProperty:](v15, "setValue:forProperty:", &off_10040C748, @"phase", v12);
      -[SQLiteMemoryEntity setValue:forProperty:](v15, "setValue:forProperty:", &off_10040C730, @"restore_state");
      -[SQLiteEntity setValue:forProperty:](v6, "setValue:forProperty:", &off_10040C748, @"phase");
      -[SQLiteEntity setValue:forProperty:](v6, "setValue:forProperty:", &off_10040C730, @"restore_state");

      id v12 = v19;
    }

    else
    {
      [*(id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40) addObject:v10];
    }
  }
}

id sub_10021A4AC(id a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = v6;
  if (a1)
  {
    a1 = 0LL;
    if (v5)
    {
      if (v6)
      {
        else {
          a1 = 0LL;
        }
      }
    }
  }

  return a1;
}

void sub_10021A674(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    uint64_t v7 = ASDLogHandleForCategory(29LL);
    id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      uint64_t v9 = *(void *)(a1 + 32);
      int v10 = 138543618;
      uint64_t v11 = v9;
      __int16 v12 = 2114;
      id v13 = v6;
      _os_log_error_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_ERROR,  "[%{public}@] Error in dialog task: %{public}@",  (uint8_t *)&v10,  0x16u);
    }
  }

  (*(void (**)(void))(*(void *)(a1 + 40) + 16LL))();
}

id sub_10021AE84(uint64_t a1)
{
  if (qword_100462360 != -1) {
    dispatch_once(&qword_100462360, &stru_1003ED1D0);
  }
  return (id)qword_100462358;
}

void sub_10021AEC8(id a1)
{
  id v1 = objc_alloc_init(&OBJC_CLASS___PowerMonitor);
  id v2 = (void *)qword_100462358;
  qword_100462358 = (uint64_t)v1;
}

void sub_10021AFDC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (v1)
  {
    *(_DWORD *)(v1 + 16) = -1;
    objc_initWeak(&location, (id)v1);
    id v2 = *(dispatch_queue_s **)(v1 + 8);
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472LL;
    void v10[2] = sub_10021B3F8;
    v10[3] = &unk_1003EBB18;
    objc_copyWeak(&v11, &location);
    uint64_t v3 = notify_register_dispatch("com.apple.system.powermanagement.poweradapter", (int *)(v1 + 16), v2, v10);
    int v7 = v3;
    if ((_DWORD)v3)
    {
      uint64_t v8 = ASDLogHandleForCategory(14LL);
      uint64_t v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)__int128 buf = 67109120;
        int v14 = v7;
        _os_log_error_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_ERROR,  "[Power] Registration for power notification failed: %u",  buf,  8u);
      }
    }

    else if (*(_DWORD *)(v1 + 16) != -1)
    {
      *(_BYTE *)(v1 + 25) = IOPSDrawingUnlimitedPower(v3, v4, v5, v6);
    }

    objc_destroyWeak(&v11);
    objc_destroyWeak(&location);
  }

void sub_10021B134( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

BOOL sub_10021B1D0(uint64_t a1)
{
  if (!a1) {
    return 0LL;
  }
  uint64_t v5 = 0LL;
  uint64_t v6 = &v5;
  uint64_t v7 = 0x2020000000LL;
  char v8 = 0;
  uint64_t v1 = *(dispatch_queue_s **)(a1 + 8);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  void v4[2] = sub_10021B274;
  v4[3] = &unk_1003E9BE0;
  void v4[4] = a1;
  void v4[5] = &v5;
  dispatch_sync(v1, v4);
  BOOL v2 = *((_BYTE *)v6 + 24) != 0;
  _Block_object_dispose(&v5, 8);
  return v2;
}

uint64_t sub_10021B274(uint64_t result)
{
  *(_BYTE *)(*(void *)(*(void *)(result + 40) + 8LL) + 24LL) = *(_BYTE *)(*(void *)(result + 32) + 24LL);
  return result;
}

BOOL sub_10021B288(uint64_t a1)
{
  if (!a1) {
    return 0LL;
  }
  uint64_t v5 = 0LL;
  uint64_t v6 = &v5;
  uint64_t v7 = 0x2020000000LL;
  char v8 = 0;
  uint64_t v1 = *(dispatch_queue_s **)(a1 + 8);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472LL;
  void v4[2] = sub_10021B32C;
  v4[3] = &unk_1003E9BE0;
  void v4[4] = a1;
  void v4[5] = &v5;
  dispatch_sync(v1, v4);
  BOOL v2 = *((_BYTE *)v6 + 24) != 0;
  _Block_object_dispose(&v5, 8);
  return v2;
}

void sub_10021B32C(uint64_t a1)
{
  *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = *(_BYTE *)(*(void *)(a1 + 32) + 25LL);
  if (os_variant_has_internal_content("com.apple.appstored"))
  {
    id v2 = sub_1002F981C((uint64_t)&OBJC_CLASS___AppDefaultsManager);
    uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
    if (v3)
    {
      id v4 = v3;
      *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = [v3 BOOLValue];
      uint64_t v3 = v4;
    }
  }

void sub_10021B3AC(uint64_t a1)
{
  id v2 = (id)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](&OBJC_CLASS___NSNotificationCenter, "defaultCenter"));
  [v2 postNotificationName:@"PowerStateDidChangeNotification" object:*(void *)(a1 + 32)];
}

void sub_10021B3F8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v13 = WeakRetained;
    if (*((_DWORD *)WeakRetained + 4) != -1) {
      WeakRetained[25] = IOPSDrawingUnlimitedPower();
    }
    uint64_t v2 = ASDLogHandleForCategory(14LL);
    uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    BOOL v4 = os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG);

    if (!v4) {
      goto LABEL_15;
    }
    if (v13[24])
    {
      uint64_t v5 = ASDLogHandleForCategory(14LL);
      uint64_t v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)__int128 buf = 0;
        uint64_t v7 = "[Power] Low power mode is enabled";
LABEL_13:
        _os_log_debug_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, v7, buf, 2u);
      }
    }

    else
    {
      int v8 = v13[25];
      uint64_t v9 = ASDLogHandleForCategory(14LL);
      uint64_t v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
      BOOL v10 = os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG);
      if (v8)
      {
        if (v10)
        {
          *(_WORD *)__int128 buf = 0;
          uint64_t v7 = "[Power] Power source is plugged in";
          goto LABEL_13;
        }
      }

      else if (v10)
      {
        *(_WORD *)__int128 buf = 0;
        uint64_t v7 = "[Power] Power source is battery";
        goto LABEL_13;
      }
    }

LABEL_15:
    dispatch_queue_global_t global_queue = dispatch_get_global_queue(17LL, 0LL);
    __int16 v12 = (dispatch_queue_s *)objc_claimAutoreleasedReturnValue(global_queue);
    *(void *)__int128 buf = _NSConcreteStackBlock;
    uint64_t v15 = 3221225472LL;
    uint64_t v16 = sub_10021B3AC;
    uint64_t v17 = &unk_1003E9880;
    id v18 = v13;
    dispatch_async(v12, buf);

    id WeakRetained = v13;
  }
}

id sub_10021B578(id result)
{
  if (result)
  {
    uint64_t v1 = result;
    uint64_t result = sub_1001E2698(result, (uint64_t)@"update_type");
    if (result != (id)1) {
      return (id)(sub_1001E2698(v1, (uint64_t)@"automatic_type") != 0LL);
    }
  }

  return result;
}

void *sub_10021B5C4(void *result)
{
  if (result) {
    return (void *)(sub_1001E2698(result, (uint64_t)@"update_type") != 0LL);
  }
  return result;
}

void *sub_10021B5EC(void *result)
{
  if (result) {
    return (void *)(sub_1001E2698(result, (uint64_t)@"restore_type") != 0LL);
  }
  return result;
}

void *sub_10021B614(void *a1)
{
  if (a1)
  {
    uint64_t v1 = a1;
    uint64_t v2 = (void *)a1[3];
    if (!v2)
    {
      uint64_t v3 = -[LogKey initWithAppInstallEntity:]( objc_alloc(&OBJC_CLASS____TtC9appstored6LogKey),  "initWithAppInstallEntity:",  a1);
      BOOL v4 = (void *)v1[3];
      v1[3] = v3;

      uint64_t v2 = (void *)v1[3];
    }

    a1 = v2;
  }

  return a1;
}

void sub_10021B674(void *a1, uint64_t a2)
{
  if (a1)
  {
    id v3 = (id)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", a2));
    [a1 setValue:v3 forProperty:@"automatic_type"];
  }

id sub_10021B6D0(void *a1)
{
  if (a1)
  {
    id v1 = sub_1001E26D0(a1, (uint64_t)@"bundle_id");
    a1 = (void *)objc_claimAutoreleasedReturnValue(v1);
  }

  return a1;
}

id sub_10021B6F4(void *a1)
{
  if (a1)
  {
    id v1 = sub_1001E2734(a1, (uint64_t)@"coordinator_id");
    a1 = (void *)objc_claimAutoreleasedReturnValue(v1);
  }

  return a1;
}

id sub_10021B718(void *a1)
{
  if (a1)
  {
    id v1 = sub_1001E2734(a1, (uint64_t)@"external_id");
    a1 = (void *)objc_claimAutoreleasedReturnValue(v1);
  }

  return a1;
}

id sub_10021B73C(id result)
{
  if (result) {
    return sub_1001E2698(result, (uint64_t)@"IFNULL(app_install.phase, 10)");
  }
  return result;
}

void sub_10021B750(void *a1, uint64_t a2)
{
  if (a1)
  {
    id v3 = (id)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", a2));
    [a1 setValue:v3 forProperty:@"phase"];
  }

void *sub_10021B7AC(void *a1)
{
  if (a1)
  {
    id v1 = (void *)objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"policy"]);
    uint64_t v3 = objc_opt_class(&OBJC_CLASS___NSDictionary, v2);
    if ((objc_opt_isKindOfClass(v1, v3) & 1) != 0) {
      BOOL v4 = sub_1002E6020(objc_alloc(&OBJC_CLASS___AppInstallPolicy), v1);
    }
    else {
      BOOL v4 = 0LL;
    }
  }

  else
  {
    BOOL v4 = 0LL;
  }

  return v4;
}

void sub_10021B828(void *a1, id *a2)
{
  if (a1)
  {
    if (a2) {
      a2 = (id *)[a2[1] copy];
    }
    uint64_t v3 = a2;
    [a1 setValue:a2 forProperty:@"policy"];
  }

id sub_10021B880(void *a1)
{
  if (a1)
  {
    id v1 = sub_1001E25D0(a1, (uint64_t)@"item_id");
    a1 = (void *)objc_claimAutoreleasedReturnValue(v1);
  }

  return a1;
}

id sub_10021B8A4(id result)
{
  if (result) {
    return sub_1001E2698(result, (uint64_t)@"recovery_count");
  }
  return result;
}

void sub_10021B8B8(void *a1, uint64_t a2)
{
  if (a1)
  {
    id v3 = (id)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", a2));
    [a1 setValue:v3 forProperty:@"priority"];
  }

id sub_10021B914(id result)
{
  if (result) {
    return sub_1001E2698(result, (uint64_t)@"software_platform");
  }
  return result;
}

void sub_10021B928(void *a1, uint64_t a2)
{
  if (a1)
  {
    id v3 = (id)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", a2));
    [a1 setValue:v3 forProperty:@"update_type"];
  }

id sub_10021B984(id a1)
{
  id v1 = a1;
  if (a1)
  {
    uint64_t v12 = 0LL;
    id v13 = &v12;
    uint64_t v14 = 0x3032000000LL;
    uint64_t v15 = sub_10021BBA4;
    uint64_t v16 = sub_10021BBB4;
    id v17 = 0LL;
    uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToLongLong:]( SQLiteComparisonPredicate,  "predicateWithProperty:equalToLongLong:",  @"parent_id",  [a1 persistentID]));
    v19[0] = v2;
    id v3 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"blocked",  &__kCFBooleanFalse));
    v19[1] = v3;
    BOOL v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v19, 2LL));
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v4));

    id v18 = @"package_type";
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", &v18, 1LL));
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v1 connection]);
    id v8 = sub_10024C1D0((uint64_t)&OBJC_CLASS___AppPackageEntity, v7, v5);
    uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue(v8);

    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472LL;
    void v11[2] = sub_10021BBBC;
    v11[3] = &unk_1003EC0C0;
    void v11[4] = v1;
    void v11[5] = &v12;
    [v9 enumeratePersistentIDsAndProperties:v6 usingBlock:v11];
    id v1 = (id)v13[5];

    _Block_object_dispose(&v12, 8);
  }

  return v1;
}

void sub_10021BB7C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

uint64_t sub_10021BBA4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_10021BBB4(uint64_t a1)
{
}

void sub_10021BBBC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, _BYTE *a5)
{
  id v8 = a3;
  uint64_t v9 = objc_alloc(&OBJC_CLASS___AppPackageEntity);
  BOOL v10 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) connection]);
  id v11 = -[SQLiteEntity initWithPersistentID:onConnection:](v9, "initWithPersistentID:onConnection:", a2, v10);
  uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8LL);
  id v13 = *(void **)(v12 + 40);
  *(void *)(v12 + 40) = v11;

  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v8 objectForKeyedSubscript:@"package_type"]);
  id v15 = [v14 integerValue];

  if (v15 == (id)1) {
    *a5 = 1;
  }
}

AppInstallsDatabaseChangeset *sub_10021BD0C(void *a1, void *a2)
{
  id v3 = a2;
  if (!a1)
  {
    BOOL v4 = 0LL;
    goto LABEL_22;
  }

  BOOL v4 = objc_alloc_init(&OBJC_CLASS___AppInstallsDatabaseChangeset);
  v34[0] = @"account_id";
  v34[1] = @"bundle_id";
  v34[2] = @"cancel_download_url";
  v34[3] = @"coordinator_id";
  void v34[4] = @"external_id";
  v34[5] = @"gizmo_pairing_id";
  void v34[6] = @"item_id";
  v34[7] = @"remote_install";
  v34[8] = @"source_type";
  v34[9] = @"supress_dialogs";
  v34[10] = @"transaction_id";
  uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v34, 11LL));
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([a1 getValuesForProperties:v5]);

  uint64_t v7 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  -[NSMutableDictionary setObject:forKeyedSubscript:]( v7,  "setObject:forKeyedSubscript:",  &off_10040C760,  @"phase");
  if (!v3)
  {
    uint64_t v9 = objc_claimAutoreleasedReturnValue([a1 valueForProperty:@"failure_error"]);
    if (v9)
    {
      id v8 = (void *)v9;
      id v3 = 0LL;
      goto LABEL_6;
    }

    NSErrorUserInfoKey v32 = NSDebugDescriptionErrorKey;
    int v33 = @"Failure occurred but no error was provided";
    id v31 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v33,  &v32,  1LL));
    id v3 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ASDErrorDomain,  929LL,  v31));

    if (!v3) {
      goto LABEL_7;
    }
  }

  id v8 = (void *)objc_claimAutoreleasedReturnValue( +[NSKeyedArchiver archivedDataWithRootObject:requiringSecureCoding:error:]( &OBJC_CLASS___NSKeyedArchiver,  "archivedDataWithRootObject:requiringSecureCoding:error:",  v3,  1LL,  0LL));
  -[NSMutableDictionary setObject:forKeyedSubscript:](v7, "setObject:forKeyedSubscript:", v8, @"failure_error");
LABEL_6:

LABEL_7:
  [a1 setValuesWithDictionary:v7];
  BOOL v10 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKeyedSubscript:@"coordinator_id"]);
  if (v10)
  {
    id v11 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKeyedSubscript:@"bundle_id"]);
    uint64_t v12 = sub_1001E4E80((uint64_t)&OBJC_CLASS___lib_IXAppInstallCoordinatorTag, v10, v11);
    id v13 = (void *)objc_claimAutoreleasedReturnValue(v12);

    uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKeyedSubscript:@"supress_dialogs"]);
    uint64_t v15 = [v14 BOOLValue] ^ 1;

    uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v3 domain]);
    unsigned int v17 = [v16 isEqualToString:IXUserPresentableErrorDomain];

    if (v17) {
      uint64_t v18 = (uint64_t)[v3 code];
    }
    else {
      uint64_t v18 = 1LL;
    }
    uint64_t v19 = IXCreateUserPresentableError(v18, v15, v3);
    uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue(v19);
    sub_1001EBDF8((uint64_t)v4, v13, v20);
  }

  if (v4) {
    v4->_shouldPostUpdatesDone = 1;
  }
  int v21 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKeyedSubscript:@"source_type"]);
  id v22 = [v21 integerValue];

  int v23 = sub_10021C1A0(a1, (uint64_t)v22, -20LL, v6);
  if (v4 && v23) {
    v4->_shouldPostAppsDone = 1;
  }
  id v24 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKeyedSubscript:@"bundle_id"]);
  sub_1001EB63C((uint64_t)v4, v24);

  uint64_t v25 = objc_claimAutoreleasedReturnValue([v6 objectForKeyedSubscript:@"external_id"]);
  uint64_t v26 = (void *)v25;
  if (v25)
  {
    v35[0] = @"kind";
    v35[1] = @"identifier";
    *(void *)__int128 buf = @"finish";
    uint64_t v37 = v25;
    void v35[2] = @"phase";
    id v27 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", -20LL));
    unsigned int v38 = v27;
    __int16 v28 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  buf,  v35,  3LL));

    sub_1001EB500((uint64_t)v4, v28);
  }

  else
  {
    uint64_t v29 = ASDLogHandleForCategory(2LL);
    __int16 v28 = (void *)objc_claimAutoreleasedReturnValue(v29);
    if (os_log_type_enabled((os_log_t)v28, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)__int128 buf = 0;
      _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)v28,  OS_LOG_TYPE_ERROR,  "Skipping legacy finish notification because we don't have an identifier.",  buf,  2u);
    }
  }

LABEL_22:
  return v4;
}

uint64_t sub_10021C1A0(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v7 = a4;
  if (a2) {
    goto LABEL_14;
  }
  id v8 = objc_alloc_init(&OBJC_CLASS___NSMutableDictionary);
  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v7 objectForKeyedSubscript:@"account_id"]);
  id v10 = [v9 copy];
  -[NSMutableDictionary setObject:forKeyedSubscript:](v8, "setObject:forKeyedSubscript:", v10, @"account_id");

  if (a3 == -20 || a3 == -30)
  {
    id v11 = @"cancel_download_url";
    uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v7 objectForKeyedSubscript:@"cancel_download_url"]);

    if (!v12)
    {
LABEL_13:

LABEL_14:
      uint64_t v26 = 0LL;
      goto LABEL_15;
    }

    id v13 = &off_1003EEDF0;
  }

  else
  {
    uint64_t v14 = objc_claimAutoreleasedReturnValue([v7 objectForKeyedSubscript:@"item_id"]);
    if (!v14) {
      goto LABEL_13;
    }
    uint64_t v15 = (void *)v14;
    uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v7 objectForKeyedSubscript:@"transaction_id"]);

    if (!v16) {
      goto LABEL_13;
    }
    unsigned int v17 = (void *)objc_claimAutoreleasedReturnValue([v7 objectForKeyedSubscript:@"item_id"]);
    -[NSMutableDictionary setObject:forKeyedSubscript:](v8, "setObject:forKeyedSubscript:", v17, @"item_id");

    id v13 = &off_1003EEDF8;
    id v11 = @"transaction_id";
  }

  uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue([v7 objectForKeyedSubscript:v11]);
  -[NSMutableDictionary setObject:forKeyedSubscript:](v8, "setObject:forKeyedSubscript:", v18, *v13);

  uint64_t v19 = objc_alloc(&OBJC_CLASS___AppDoneEntity);
  uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue([a1 connection]);
  int v21 = -[SQLiteEntity initWithPropertyValues:onConnection:](v19, "initWithPropertyValues:onConnection:", v8, v20);

  if (!v21) {
    goto LABEL_13;
  }
  uint64_t v22 = ASDLogHandleForCategory(2LL);
  int v23 = (os_log_s *)objc_claimAutoreleasedReturnValue(v22);
  if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
  {
    id v24 = sub_10021B614(a1);
    uint64_t v25 = (void *)objc_claimAutoreleasedReturnValue(v24);
    int v28 = 138543362;
    uint64_t v29 = v25;
    _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] Clearing item from queue",  (uint8_t *)&v28,  0xCu);
  }

  uint64_t v26 = 1LL;
LABEL_15:

  return v26;
}

AppInstallsDatabaseChangeset *sub_10021C40C(void *a1, uint64_t a2)
{
  if (a1)
  {
    BOOL v4 = objc_alloc_init(&OBJC_CLASS___AppInstallsDatabaseChangeset);
    BOOL v34 = @"phase";
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", a2));
    BOOL v35 = v5;
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v35,  &v34,  1LL));
    [a1 setValuesWithDictionary:v6];

    v33[0] = @"account_id";
    v33[1] = @"bundle_id";
    v33[2] = @"cancel_download_url";
    v33[3] = @"coordinator_id";
    v33[4] = @"external_id";
    v33[5] = @"gizmo_pairing_id";
    v33[6] = @"item_id";
    v33[7] = @"remote_install";
    v33[8] = @"source_type";
    v33[9] = @"transaction_id";
    id v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v33, 10LL));
    id v8 = (void *)objc_claimAutoreleasedReturnValue([a1 getValuesForProperties:v7]);

    if (a2 == -30)
    {
      uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v8 objectForKeyedSubscript:@"coordinator_id"]);
      if (v9)
      {
        id v10 = (void *)objc_claimAutoreleasedReturnValue([v8 objectForKeyedSubscript:@"bundle_id"]);
        id v11 = sub_1001E4E80((uint64_t)&OBJC_CLASS___lib_IXAppInstallCoordinatorTag, v9, v10);
        uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(v11);

        uint64_t v13 = IXCreateUserPresentableError(3LL, 0LL, 0LL);
        uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
        sub_1001EBDF8((uint64_t)v4, v12, v14);
      }

      if (sub_1001E2698(a1, (uint64_t)@"update_type") && !sub_1001E2698(a1, (uint64_t)@"source_type"))
      {
        id v15 = sub_1001E26D0(a1, (uint64_t)@"bundle_id");
        uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
        if (v16)
        {
          id v17 = sub_100237D18((uint64_t)&OBJC_CLASS___AppUpdatesDatabaseStore);
          uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(v17);
          uint64_t v19 = sub_10021B614(a1);
          uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue(v19);
          sub_1002384B8(v18, v16, v20);

          if (v4) {
            v4->_shouldPostUpdatesDone = 1;
          }
        }
      }
    }

    int v21 = (void *)objc_claimAutoreleasedReturnValue([v8 objectForKeyedSubscript:@"source_type"]);
    id v22 = [v21 integerValue];

    if (v22 == (id)2)
    {
      if (a2 == -40) {
        goto LABEL_28;
      }
      if (a2 != -20 && a2 != -30) {
        goto LABEL_30;
      }
      id v23 = sub_100296DB0(a1, (uint64_t)@"failure_error");
      id v24 = (void *)objc_claimAutoreleasedReturnValue(v23);
      if (!v24)
      {
        if (a2 == -30)
        {
          uint64_t v25 = @"Installation Canceled";
          uint64_t v26 = 908LL;
        }

        else
        {
          uint64_t v25 = @"Failure occurred but no error was provided";
          uint64_t v26 = 1070LL;
        }

        uint64_t v27 = ASDErrorWithDescription(ASDErrorDomain, v26, v25);
        id v24 = (void *)objc_claimAutoreleasedReturnValue(v27);
      }
    }

    if (a2 == -30)
    {
      int v28 = (void *)objc_claimAutoreleasedReturnValue([v8 objectForKeyedSubscript:@"bundle_id"]);
      sub_1001EB63C((uint64_t)v4, v28);
LABEL_29:

      goto LABEL_30;
    }

    if (a2 != -40)
    {
LABEL_30:
      uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue([v8 objectForKeyedSubscript:@"external_id"]);
      v36[0] = @"kind";
      v36[1] = @"identifier";
      v37[0] = @"finish";
      v37[1] = v29;
      void v36[2] = @"phase";
      __int16 v30 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", a2));
      void v37[2] = v30;
      id v31 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v37,  v36,  3LL));

      sub_1001EB500((uint64_t)v4, v31);
      return v4;
    }

void sub_10021C8A8(id a1)
{
  id v1 = -[NSSet initWithObjects:](objc_alloc(&OBJC_CLASS___NSSet), "initWithObjects:", @"app_package", 0LL);
  uint64_t v2 = (void *)qword_100462368;
  qword_100462368 = (uint64_t)v1;
}

void sub_10021C8F4(void *a1, void *a2)
{
  if (a1)
  {
    id v3 = a2;
    BOOL v4 = sub_10021B7AC(a1);
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
    uint64_t v6 = v5;
    if (v5)
    {
      id v7 = v5;
    }

    else
    {
      id v8 = sub_1002E5EDC((uint64_t)&OBJC_CLASS___AppInstallPolicy);
      id v7 = (id *)objc_claimAutoreleasedReturnValue(v8);
    }

    id v10 = v7;

    v3[2](v3, v10);
    if (v10) {
      id v9 = [v10[1] copy];
    }
    else {
      id v9 = 0LL;
    }
    [a1 setValue:v9 forProperty:@"policy"];
  }

void sub_10021C9B0(void *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    BOOL v4 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToLongLong:]( SQLiteComparisonPredicate,  "predicateWithProperty:equalToLongLong:",  @"parent_id",  [a1 persistentID]));
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue([a1 connection]);
    uint64_t v18 = v4;
    id v6 = sub_10024C1D0((uint64_t)&OBJC_CLASS___AppPackageEntity, v5, v4);
    id v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
    [v7 deleteAllEntities];

    __int128 v22 = 0u;
    __int128 v23 = 0u;
    __int128 v20 = 0u;
    __int128 v21 = 0u;
    id v19 = v3;
    id v8 = v3;
    id v9 = [v8 countByEnumeratingWithState:&v20 objects:v24 count:16];
    if (v9)
    {
      id v10 = v9;
      uint64_t v11 = *(void *)v21;
      do
      {
        uint64_t v12 = 0LL;
        do
        {
          if (*(void *)v21 != v11) {
            objc_enumerationMutation(v8);
          }
          uint64_t v13 = *(void **)(*((void *)&v20 + 1) + 8LL * (void)v12);
          uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithLongLong:]( NSNumber,  "numberWithLongLong:",  objc_msgSend(a1, "persistentID", v18)));
          [v13 setValue:v14 forProperty:@"parent_id"];

          id v15 = objc_alloc(&OBJC_CLASS___AppPackageEntity);
          uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([v13 propertyValues]);
          id v17 = (void *)objc_claimAutoreleasedReturnValue([a1 connection]);

          uint64_t v12 = (char *)v12 + 1;
        }

        while (v10 != v12);
        id v10 = [v8 countByEnumeratingWithState:&v20 objects:v24 count:16];
      }

      while (v10);
    }

    id v3 = v19;
  }
}

id *sub_10021CD48(id *a1, void *a2)
{
  id v4 = a2;
  if (a1)
  {
    v7.receiver = a1;
    v7.super_class = (Class)&OBJC_CLASS___PurchaseHistoryItemsDAAPResponseMetadataParser;
    uint64_t v5 = (id *)objc_msgSendSuper2(&v7, "init");
    a1 = v5;
    if (v5) {
      objc_storeStrong(v5 + 1, a2);
    }
  }

  return a1;
}

uint64_t sub_10021D300(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0LL;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1LL || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0LL;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }

    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0LL;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    unint64_t v12 = v6 >> 3;
    if ((v6 >> 3) == 1)
    {
      uint64_t String = PBReaderReadString(a2);
      uint64_t v19 = objc_claimAutoreleasedReturnValue(String);
      __int128 v20 = *(void **)(a1 + 24);
      *(void *)(a1 + 24) = v19;
    }

    else
    {
      if ((_DWORD)v12 == 2)
      {
        char v21 = 0;
        unsigned int v22 = 0;
        uint64_t v15 = 0LL;
        while (1)
        {
          unint64_t v23 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v23 == -1LL || v23 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v24 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v23);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v23 + 1;
          v15 |= (unint64_t)(v24 & 0x7F) << v21;
          if ((v24 & 0x80) == 0) {
            goto LABEL_42;
          }
          v21 += 7;
          BOOL v9 = v22++ >= 9;
          if (v9)
          {
            uint64_t v15 = 0LL;
            goto LABEL_44;
          }
        }

        *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_42:
        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v15 = 0LL;
        }
LABEL_44:
        uint64_t v26 = 8LL;
      }

      else
      {
        if ((_DWORD)v12 != 3)
        {
          uint64_t result = PBReaderSkipValueWithTag(a2);
          if (!(_DWORD)result) {
            return result;
          }
          continue;
        }

        char v13 = 0;
        unsigned int v14 = 0;
        uint64_t v15 = 0LL;
        while (1)
        {
          unint64_t v16 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v16 == -1LL || v16 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v17 = *(_BYTE *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v16);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v16 + 1;
          v15 |= (unint64_t)(v17 & 0x7F) << v13;
          if ((v17 & 0x80) == 0) {
            goto LABEL_38;
          }
          v13 += 7;
          BOOL v9 = v14++ >= 9;
          if (v9)
          {
            uint64_t v15 = 0LL;
            goto LABEL_40;
          }
        }

        *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_38:
        if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v15 = 0LL;
        }
LABEL_40:
        uint64_t v26 = 16LL;
      }

      *(void *)(a1 + v26) = v15;
    }
  }

  return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

NetworkEmulation *sub_10021D7D0(uint64_t a1)
{
  id v1 = sub_1002F8CB4((uint64_t)&OBJC_CLASS___AppDefaultsManager, @"NetworkEmulation");
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  if (v2)
  {
    id v3 = objc_alloc(&OBJC_CLASS___NetworkEmulation);
    id v4 = v2;
    if (v3)
    {
      v6.receiver = v3;
      v6.super_class = (Class)&OBJC_CLASS___NetworkEmulation;
      id v3 = (NetworkEmulation *)objc_msgSendSuper2(&v6, "init");
      if (v3)
      {
        v3->_interfaceType = (int64_t)sub_1001DF39C(v4, @"ifce", 0LL);
        v3->_isConstrained = sub_1001DEDAC(v4, @"cnst", 0LL);
        v3->_isExpensive = sub_1001DEDAC(v4, @"expn", 0LL);
        v3->_isRoaming = sub_1001DEDAC(v4, @"roam", 0LL);
      }
    }
  }

  else
  {
    id v3 = 0LL;
  }

  return v3;
}

id sub_10021E048(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_10021E0C0;
  block[3] = &unk_1003E9EA8;
  void block[4] = objc_opt_self(a1);
  if (qword_100462380 != -1) {
    dispatch_once(&qword_100462380, block);
  }
  return (id)qword_100462378;
}

void sub_10021E0C0(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  uint64_t v2 = (void *)qword_100462378;
  qword_100462378 = (uint64_t)v1;
}

void sub_10021E3DC( _Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *a9, id *location)
{
}

uint64_t sub_10021E46C(uint64_t a1, int a2, void *a3)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v6 = a3;
  int v33 = v6;
  if (!WeakRetained)
  {
    uint64_t v30 = 0LL;
    goto LABEL_24;
  }

  unint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKeyedSubscript:@"CACHE_DELETE_VOLUME"]);
  NSErrorUserInfoKey v32 = (void *)objc_claimAutoreleasedReturnValue([v33 objectForKeyedSubscript:@"CACHE_DELETE_CALLING_PROCESS"]);
  uint64_t v8 = sub_10021F748(a2);
  uint64_t v9 = sub_10021F6E4(v7);
  uint64_t v10 = ASDLogHandleForCategory(9LL);
  uint64_t v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)__int128 buf = 138543874;
    *(void *)&uint8_t buf[4] = objc_opt_class(WeakRetained, v12);
    *(_WORD *)&_BYTE buf[12] = 2048;
    *(void *)&buf[14] = a2;
    __int16 v36 = 2114;
    uint64_t v37 = v7;
    id v13 = *(id *)&buf[4];
    _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] Purgeable request with urgency: %ld volume: %{public}@",  buf,  0x20u);
  }

  unsigned int v14 = (double *)WeakRetained;
  objc_sync_enter(v14);
  double Current = CFAbsoluteTimeGetCurrent();
  double v16 = v14[5];
  if (v16 != 0.0 && Current - v16 <= 3600.0)
  {
    if (v9 == 1)
    {
      if (*((void *)v14 + 2))
      {
LABEL_9:
        objc_sync_exit(v14);

        int v17 = 1;
        goto LABEL_12;
      }
    }

    else if (v9 != 2 || *((void *)v14 + 1))
    {
      goto LABEL_9;
    }
  }

  objc_sync_exit(v14);

  sub_10021F818((id *)v14, @"Purgeable Request", v32);
  int v17 = 0;
LABEL_12:
  uint64_t v18 = v14;
  objc_sync_enter(v18);
  if (v9 == 1)
  {
    uint64_t v19 = 2LL;
  }

  else
  {
    if (v9 != 2)
    {
      id v20 = 0LL;
      goto LABEL_18;
    }

    uint64_t v19 = 1LL;
  }

  id v20 = objc_msgSend(*(id *)&v18[v19], "copy", v32);
LABEL_18:
  objc_sync_exit(v18);

  char v21 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", v8));
  unsigned int v22 = (void *)objc_claimAutoreleasedReturnValue([v20 objectForKey:v21]);

  if (v22) {
    id v23 = [v22 longLongValue];
  }
  else {
    id v23 = 0LL;
  }
  uint64_t v24 = ASDLogHandleForCategory(9LL);
  uint64_t v25 = (os_log_s *)objc_claimAutoreleasedReturnValue(v24);
  if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v27 = (void *)objc_opt_class(v18, v26);
    *(_DWORD *)__int128 buf = 138544386;
    *(void *)&uint8_t buf[4] = v27;
    *(_WORD *)&_BYTE buf[12] = 2048;
    *(void *)&buf[14] = v23;
    __int16 v36 = 2048;
    uint64_t v37 = (void *)a2;
    __int16 v38 = 1024;
    int v39 = v17;
    __int16 v40 = 2114;
    id v41 = v7;
    id v28 = v27;
    _os_log_impl( (void *)&_mh_execute_header,  v25,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] Purgeable total: %{bytes}lld for urgency: %ld cached: %{BOOL}d volume: %{public}@",  buf,  0x30u);
  }

  v34[0] = @"CACHE_DELETE_VOLUME";
  v34[1] = @"CACHE_DELETE_AMOUNT";
  *(void *)__int128 buf = v7;
  uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", v23));
  *(void *)&uint8_t buf[8] = v29;
  uint64_t v30 = objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  buf,  v34,  2LL));

LABEL_24:
  return v30;
}

void sub_10021E7F4(_Unwind_Exception *a1)
{
}

uint64_t sub_10021E814(uint64_t a1, int a2, void *a3)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v6 = sub_10021E864(WeakRetained, a3, a2);
  uint64_t v7 = objc_claimAutoreleasedReturnValue(v6);

  return v7;
}

id sub_10021E864(void *a1, void *a2, int a3)
{
  id v5 = a2;
  id v6 = v5;
  if (!a1)
  {
    unsigned __int8 v54 = 0LL;
    goto LABEL_45;
  }

  uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue([v5 objectForKeyedSubscript:@"CACHE_DELETE_VOLUME"]);
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKeyedSubscript:@"CACHE_DELETE_AMOUNT"]);
  id v69 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKeyedSubscript:@"CACHE_DELETE_CALLING_PROCESS"]);
  uint64_t v9 = sub_10021F6E4(v7);
  uint64_t v10 = sub_10021F748(a3);
  uint64_t v11 = ASDLogHandleForCategory(9LL);
  uint64_t v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
  if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
  {
    unsigned int v14 = (void *)objc_opt_class(a1, v13);
    id v15 = v14;
    *(_DWORD *)__int128 buf = 138544130;
    id v73 = v14;
    __int16 v74 = 2048;
    uint64_t v75 = (uint64_t)[v8 longLongValue];
    __int16 v76 = 2048;
    __int128 v77 = (void *)a3;
    __int16 v78 = 2114;
    id v79 = v7;
    _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] Purge request with desired bytes: %{bytes}lld with urgency: %ld volume: %{public}@",  buf,  0x2Au);
  }

  id v16 = a1;
  objc_sync_enter(v16);
  double Current = CFAbsoluteTimeGetCurrent();
  double v18 = *((double *)v16 + 5);
  if (v18 == 0.0 || Current - v18 > 3600.0)
  {
    objc_sync_exit(v16);

    if (v9 == 2) {
      goto LABEL_16;
    }
    if (v9 != 1)
    {
      uint64_t v22 = 0LL;
LABEL_39:
      uint64_t v49 = ASDLogHandleForCategory(9LL);
      id v50 = (os_log_s *)objc_claimAutoreleasedReturnValue(v49);
      if (os_log_type_enabled(v50, OS_LOG_TYPE_DEFAULT))
      {
        __int16 v52 = (void *)objc_opt_class(v16, v51);
        *(_DWORD *)__int128 buf = 138544386;
        id v73 = v52;
        __int16 v74 = 2048;
        uint64_t v75 = v22;
        __int16 v76 = 2114;
        __int128 v77 = v8;
        __int16 v78 = 2048;
        id v79 = (void *)a3;
        __int16 v80 = 2114;
        id v81 = v7;
        id v53 = v52;
        _os_log_impl( (void *)&_mh_execute_header,  v50,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] Purged total: %{bytes}ld desiredPurge: %{public}@ urgency: %ld volume: %{public}@",  buf,  0x34u);
      }

      if (v22 >= 1)
      {
        +[NSThread sleepForTimeInterval:](&OBJC_CLASS___NSThread, "sleepForTimeInterval:", 5.0);
        sub_10021F818((id *)v16, @"Purge", v69);
        sub_10021F55C(v16, 0, 0, 1.0);
      }

      v70[0] = @"CACHE_DELETE_VOLUME";
      v70[1] = @"CACHE_DELETE_AMOUNT";
      v71[0] = v7;
      id v16 = (id)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](&OBJC_CLASS___NSNumber, "numberWithLongLong:", v22));
      v71[1] = v16;
      unsigned __int8 v54 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v71,  v70,  2LL));
      goto LABEL_44;
    }

    goto LABEL_28;
  }

  if (v9 == 1)
  {
    BOOL v34 = (void *)*((void *)v16 + 2);
    if (v34)
    {
      BOOL v35 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", v10));
      char v21 = (void *)objc_claimAutoreleasedReturnValue([v34 objectForKey:v35]);

      if (v21 && ![v21 longLongValue])
      {
        uint64_t v62 = ASDLogHandleForCategory(9LL);
        uint64_t v63 = (os_log_s *)objc_claimAutoreleasedReturnValue(v62);
        if (os_log_type_enabled(v63, OS_LOG_TYPE_DEFAULT))
        {
          id v65 = (void *)objc_opt_class(v16, v64);
          *(_DWORD *)__int128 buf = 138543618;
          id v73 = v65;
          __int16 v74 = 2048;
          uint64_t v75 = a3;
          id v66 = v65;
          _os_log_impl( (void *)&_mh_execute_header,  v63,  OS_LOG_TYPE_DEFAULT,  "[%{public}@][System] Nothing to purge for urgency %ld",  buf,  0x16u);
        }

        v82[0] = @"CACHE_DELETE_VOLUME";
        v82[1] = @"CACHE_DELETE_AMOUNT";
        v83[0] = v7;
        v83[1] = &off_10040C778;
        uint64_t v61 = objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v83,  v82,  2LL));
        goto LABEL_52;
      }
    }

    objc_sync_exit(v16);

LABEL_28:
    if ((objc_opt_respondsToSelector(*((void *)v16 + 6), "purgeForVolume:urgency:desiredPurge:client:") & 1) != 0)
    {
      uint64_t v22 = (uint64_t)[*((id *)v16 + 6) purgeForVolume:v7 urgency:v10 desiredPurge:v8 client:v69];
      uint64_t v36 = ASDLogHandleForCategory(9LL);
      uint64_t v37 = (os_log_s *)objc_claimAutoreleasedReturnValue(v36);
      if (os_log_type_enabled(v37, OS_LOG_TYPE_DEFAULT))
      {
        int v39 = (void *)objc_opt_class(v16, v38);
        *(_DWORD *)__int128 buf = 138543618;
        id v73 = v39;
        __int16 v74 = 2048;
        uint64_t v75 = v22;
        id v40 = v39;
        _os_log_impl( (void *)&_mh_execute_header,  v37,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] Purged %{bytes}ld for apps",  buf,  0x16u);
      }
    }

    else
    {
      uint64_t v22 = 0LL;
    }

    id v41 = *((id *)v16 + 8);
    if (!v41) {
      goto LABEL_39;
    }
    uint64_t v42 = v41;
    char v43 = objc_opt_respondsToSelector(*((void *)v16 + 8), "purgeForVolume:urgency:desiredPurge:client:");

    if ((v43 & 1) == 0) {
      goto LABEL_39;
    }
    uint64_t v44 = (uint64_t)[*((id *)v16 + 8) purgeForVolume:v7 urgency:v10 desiredPurge:v8 client:v69];
    uint64_t v45 = ASDLogHandleForCategory(9LL);
    id v28 = (os_log_s *)objc_claimAutoreleasedReturnValue(v45);
    v22 += v44;
    if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
    {
      id v47 = (void *)objc_opt_class(v16, v46);
      *(_DWORD *)__int128 buf = 138543618;
      id v73 = v47;
      __int16 v74 = 2048;
      uint64_t v75 = v44;
      id v48 = v47;
      _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] Purged %{bytes}ld bytes for partial downloads",  buf,  0x16u);
    }

    goto LABEL_38;
  }

  if (v9 != 2)
  {
    objc_sync_exit(v16);
    uint64_t v22 = 0LL;
    id v28 = (os_log_s *)v16;
LABEL_38:

    goto LABEL_39;
  }

  uint64_t v19 = (void *)*((void *)v16 + 1);
  if (!v19) {
    goto LABEL_12;
  }
  id v20 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", v10));
  char v21 = (void *)objc_claimAutoreleasedReturnValue([v19 objectForKey:v20]);

  if (!v21 || [v21 longLongValue])
  {

LABEL_12:
    objc_sync_exit(v16);

LABEL_16:
    id WeakRetained = objc_loadWeakRetained((id *)v16 + 7);
    if (WeakRetained
      && (id v24 = objc_loadWeakRetained((id *)v16 + 7),
          char v25 = objc_opt_respondsToSelector(v24, "purgeForVolume:urgency:desiredPurge:client:"),
          v24,
          WeakRetained,
          (v25 & 1) != 0))
    {
      id v26 = objc_loadWeakRetained((id *)v16 + 7);
      uint64_t v22 = (uint64_t)[v26 purgeForVolume:v7 urgency:v10 desiredPurge:v8 client:v69];

      uint64_t v27 = ASDLogHandleForCategory(9LL);
      id v28 = (os_log_s *)objc_claimAutoreleasedReturnValue(v27);
      if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v30 = (void *)objc_opt_class(v16, v29);
        *(_DWORD *)__int128 buf = 138543618;
        id v73 = v30;
        __int16 v74 = 2048;
        uint64_t v75 = v22;
        id v31 = v30;
        _os_log_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] Purged %{bytes}ld for odr",  buf,  0x16u);
      }
    }

    else
    {
      uint64_t v32 = ASDLogHandleForCategory(9LL);
      id v28 = (os_log_s *)objc_claimAutoreleasedReturnValue(v32);
      if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
      {
        id v67 = (void *)objc_opt_class(v16, v33);
        *(_DWORD *)__int128 buf = 138543362;
        id v73 = v67;
        id v68 = v67;
        _os_log_error_impl( (void *)&_mh_execute_header,  v28,  OS_LOG_TYPE_ERROR,  "[%{public}@] ODR has not been set please make sure everything is configured correctly.",  buf,  0xCu);
      }

      uint64_t v22 = 0LL;
    }

    goto LABEL_38;
  }

  uint64_t v56 = ASDLogHandleForCategory(9LL);
  __int16 v57 = (os_log_s *)objc_claimAutoreleasedReturnValue(v56);
  if (os_log_type_enabled(v57, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v59 = (void *)objc_opt_class(v16, v58);
    *(_DWORD *)__int128 buf = 138543618;
    id v73 = v59;
    __int16 v74 = 2048;
    uint64_t v75 = a3;
    id v60 = v59;
    _os_log_impl( (void *)&_mh_execute_header,  v57,  OS_LOG_TYPE_DEFAULT,  "[%{public}@][User] Nothing to purge for urgency %ld",  buf,  0x16u);
  }

  v84[0] = @"CACHE_DELETE_VOLUME";
  v84[1] = @"CACHE_DELETE_AMOUNT";
  v85[0] = v7;
  v85[1] = &off_10040C778;
  uint64_t v61 = objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v85,  v84,  2LL));
LABEL_52:
  unsigned __int8 v54 = (void *)v61;

  objc_sync_exit(v16);
LABEL_44:

LABEL_45:
  return v54;
}

void sub_10021F08C(_Unwind_Exception *a1)
{
}

void sub_10021F0C0(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v1 = ASDLogHandleForCategory(9LL);
    uint64_t v2 = (os_log_s *)objc_claimAutoreleasedReturnValue(v1);
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 138543362;
      id v17 = (id)objc_opt_class(WeakRetained, v3);
      id v4 = v17;
      _os_log_impl( (void *)&_mh_execute_header,  v2,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] Requested cancel purge for service",  buf,  0xCu);
    }

    id v5 = WeakRetained + 7;
    id v6 = objc_loadWeakRetained(WeakRetained + 7);
    if (v6
      && (uint64_t v7 = v6,
          id v8 = objc_loadWeakRetained(v5),
          char v9 = objc_opt_respondsToSelector(v8, "cancelPurge"),
          v8,
          v7,
          (v9 & 1) != 0))
    {
      id v10 = objc_loadWeakRetained(v5);
      [v10 cancelPurge];
    }

    else
    {
      uint64_t v11 = ASDLogHandleForCategory(9LL);
      id v10 = (id)objc_claimAutoreleasedReturnValue(v11);
      if (os_log_type_enabled((os_log_t)v10, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v13 = (void *)objc_opt_class(WeakRetained, v12);
        *(_DWORD *)__int128 buf = 138543362;
        id v17 = v13;
        id v14 = v13;
        _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v10,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] ODR has not been set please make sure everything is configured correctly.",  buf,  0xCu);
      }
    }
  }
}

uint64_t sub_10021F24C(uint64_t a1, int a2, void *a3)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v6 = sub_10021E864(WeakRetained, a3, a2);
  uint64_t v7 = objc_claimAutoreleasedReturnValue(v6);

  return v7;
}

void sub_10021F29C(id *a1)
{
  if (a1)
  {
    uint64_t v2 = ASDLogHandleForCategory(9LL);
    uint64_t v3 = (os_log_s *)objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      int v14 = 138543362;
      id v15 = (id)objc_opt_class(a1, v4);
      id v5 = v15;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] Invalidating caches",  (uint8_t *)&v14,  0xCu);
    }

    if ((objc_opt_respondsToSelector(a1[6], "cacheInvalidated") & 1) != 0) {
      [a1[6] cacheInvalidated];
    }
    id WeakRetained = objc_loadWeakRetained(a1 + 7);
    if (WeakRetained)
    {
      uint64_t v7 = WeakRetained;
      id v8 = objc_loadWeakRetained(a1 + 7);
      char v9 = objc_opt_respondsToSelector(v8, "cacheInvalidated");

      if ((v9 & 1) != 0)
      {
        id v10 = objc_loadWeakRetained(a1 + 7);
        [v10 cacheInvalidated];
      }
    }

    id v11 = a1[8];
    if (v11)
    {
      uint64_t v12 = v11;
      char v13 = objc_opt_respondsToSelector(a1[8], "cacheInvalidated");

      if ((v13 & 1) != 0) {
        [a1[8] cacheInvalidated];
      }
    }

    sub_10021F55C(a1, 1, 0, 10.0);
  }

void sub_10021F418(void *a1)
{
  if (a1) {
    sub_10021F55C(a1, 1, 0, 10.0);
  }
}

uint64_t sub_10021F430(uint64_t a1, uint64_t a2, int a3, void *a4)
{
  uint64_t v14 = a2;
  id v6 = a4;
  uint64_t v7 = v6;
  if (a1)
  {
    id v8 = (const char *)[v6 UTF8String];
    char v9 = v8;
    if (!a3 || (uint64_t v13 = 0LL, v10 = fsctl(v8, 0x80084A02uLL, &v13, 0), !(_DWORD)v10))
    {
      int v11 = open(v9, 0);
      uint64_t v10 = ffsctl(v11, 0xC0084A44uLL, &v14, 0);
      close(v11);
    }
  }

  else
  {
    uint64_t v10 = 0LL;
  }

  return v10;
}

void sub_10021F4E8(void *a1, void *a2)
{
  id v6 = a2;
  if (a1)
  {
    id v3 = sub_1002EB2A0((uint64_t)&OBJC_CLASS___Device);
    uint64_t v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
    unsigned __int8 v5 = [v4 isHRNMode];

    if ((v5 & 1) == 0) {
      sub_10021F55C(a1, 1, 0, 10.0);
    }
  }
}

void sub_10021F55C(void *a1, char a2, int a3, float a4)
{
  if (a1)
  {
    id v7 = a1;
    objc_sync_enter(v7);
    if (!*((void *)v7 + 4))
    {
      dispatch_source_t v8 = dispatch_source_create( (dispatch_source_type_t)&_dispatch_source_type_timer,  0LL,  0LL,  *((dispatch_queue_t *)v7 + 3));
      char v9 = (void *)*((void *)v7 + 4);
      *((void *)v7 + 4) = v8;

      uint64_t v10 = (dispatch_source_s *)*((void *)v7 + 4);
      dispatch_time_t v11 = dispatch_time(0LL, (uint64_t)(float)(a4 * 1000000000.0));
      dispatch_source_set_timer(v10, v11, 0xFFFFFFFFFFFFFFFFLL, 0LL);
      v14[0] = _NSConcreteStackBlock;
      v14[1] = 3221225472LL;
      void v14[2] = sub_1002200CC;
      void v14[3] = &unk_1003EC5C0;
      char v15 = a2;
      void v14[4] = v7;
      uint64_t v12 = objc_retainBlock(v14);
      if (a3)
      {
        uint64_t v13 = dispatch_block_create(DISPATCH_BLOCK_ENFORCE_QOS_CLASS|DISPATCH_BLOCK_ASSIGN_CURRENT, v12);

        uint64_t v12 = v13;
      }

      dispatch_source_set_event_handler(*((dispatch_source_t *)v7 + 4), v12);
      dispatch_resume(*((dispatch_object_t *)v7 + 4));
    }

    objc_sync_exit(v7);
  }

void sub_10021F684(void *a1)
{
  if (a1)
  {
    uint64_t v1 = a1;
    objc_sync_enter(v1);
    uint64_t v2 = (dispatch_source_s *)v1[4];
    if (v2)
    {
      dispatch_source_cancel(v2);
      id v3 = (void *)v1[4];
      v1[4] = 0LL;
    }

    objc_sync_exit(v1);

    sub_10021F55C(v1, 1, 1, 1.0);
  }

uint64_t sub_10021F6E4(void *a1)
{
  id v1 = a1;
  uint64_t v2 = v1;
  if (v1 && ([v1 isEqualToString:@"/private/var"] & 1) == 0)
  {
    else {
      uint64_t v3 = 1LL;
    }
  }

  else
  {
    uint64_t v3 = 1LL;
  }

  return v3;
}

uint64_t sub_10021F748(int a1)
{
  uint64_t v1 = (a1 - 1);
  uint64_t v3 = ASDLogHandleForCategory(9LL);
  uint64_t v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v7 = 138543362;
    id v8 = (id)objc_opt_class(&OBJC_CLASS___CacheDeleteCoordinator, v5);
    id v6 = v8;
    _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] Unknown urgency value, defaulting to low urgency",  (uint8_t *)&v7,  0xCu);
  }

  return 1LL;
}

void sub_10021F818(id *a1, void *a2, void *a3)
{
  id v63 = a2;
  id v62 = a3;
  if (!a1) {
    goto LABEL_33;
  }
  uint64_t v5 = ASDLogHandleForCategory(9LL);
  id v6 = (os_log_s *)objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)__int128 buf = 138543618;
    id v65 = (id)objc_opt_class(a1, v7);
    __int16 v66 = 2114;
    id v67 = v63;
    id v8 = v65;
    _os_log_impl( (void *)&_mh_execute_header,  v6,  OS_LOG_TYPE_INFO,  "[%{public}@] Refreshing purgeable storage with reason: %{public}@",  buf,  0x16u);
  }

  uint64_t v59 = -[KeepAlive initWithName:]( objc_alloc(&OBJC_CLASS___KeepAlive),  "initWithName:",  @"com.apple.CacheDeleteCoordinator.refresh");
  if ((objc_opt_respondsToSelector(a1[6], "allPurgeablesForVolume:reason:client:") & 1) != 0)
  {
    id v9 = a1[6];
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "allPurgeablesForVolume:reason:client:", @"/private/var", v63, v62, v59));

    uint64_t v11 = ASDLogHandleForCategory(9LL);
    uint64_t v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
    {
      uint64_t v14 = (void *)objc_opt_class(a1, v13);
      *(_DWORD *)__int128 buf = 138543874;
      id v65 = v14;
      __int16 v66 = 2114;
      id v67 = v10;
      __int16 v68 = 2114;
      id v69 = v62;
      id v15 = v14;
      _os_log_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_INFO,  "[%{public}@] Refreshed app purgeable: %{public}@ client: %{public}@",  buf,  0x20u);
    }
  }

  else
  {
    uint64_t v10 = 0LL;
  }

  id v16 = a1[8];
  if (v16
    && (id v17 = v16,
        char v18 = objc_opt_respondsToSelector(a1[8], "allPurgeablesForVolume:reason:client:"),
        v17,
        (v18 & 1) != 0))
  {
    id v19 = a1[8];
    id v20 = (void *)objc_claimAutoreleasedReturnValue([v19 allPurgeablesForVolume:@"/private/var" reason:v63 client:v62]);

    uint64_t v21 = ASDLogHandleForCategory(9LL);
    uint64_t v22 = (os_log_s *)objc_claimAutoreleasedReturnValue(v21);
    if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
    {
      id v24 = (void *)objc_opt_class(a1, v23);
      *(_DWORD *)__int128 buf = 138543618;
      id v65 = v24;
      __int16 v66 = 2114;
      id v67 = v20;
      id v25 = v24;
      _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_INFO,  "[%{public}@] Refreshed partial download purgeable: %{public}@",  buf,  0x16u);
    }
  }

  else
  {
    id v20 = 0LL;
  }

  id WeakRetained = objc_loadWeakRetained(a1 + 7);
  if (WeakRetained
    && (id v27 = objc_loadWeakRetained(a1 + 7),
        char v28 = objc_opt_respondsToSelector(v27, "allPurgeablesForVolume:reason:client:"),
        v27,
        WeakRetained,
        (v28 & 1) != 0))
  {
    id v29 = objc_loadWeakRetained(a1 + 7);
    uint64_t v61 = (void *)objc_claimAutoreleasedReturnValue([v29 allPurgeablesForVolume:@"/private/var/mobile" reason:v63 client:v62]);

    uint64_t v30 = a1;
    objc_sync_enter(v30);
    id v31 = [v61 copy];
    id v32 = v30[1];
    v30[1] = v31;

    objc_sync_exit(v30);
    uint64_t v33 = ASDLogHandleForCategory(9LL);
    BOOL v34 = (os_log_s *)objc_claimAutoreleasedReturnValue(v33);
    if (os_log_type_enabled(v34, OS_LOG_TYPE_INFO))
    {
      uint64_t v36 = (void *)objc_opt_class(v30, v35);
      *(_DWORD *)__int128 buf = 138543618;
      id v65 = v36;
      __int16 v66 = 2114;
      id v67 = v61;
      id v37 = v36;
      _os_log_impl( (void *)&_mh_execute_header,  v34,  OS_LOG_TYPE_INFO,  "[%{public}@] Refreshed odr purgeable: %{public}@",  buf,  0x16u);
    }
  }

  else
  {
    uint64_t v61 = 0LL;
  }

  uint64_t v38 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](&OBJC_CLASS___NSMutableDictionary, "dictionary", v59));
  for (uint64_t i = 1LL; i != 5; ++i)
  {
    if (v10)
    {
      id v40 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", i));
      id v41 = (void *)objc_claimAutoreleasedReturnValue([v10 objectForKey:v40]);
      uint64_t v42 = (char *)[v41 unsignedLongLongValue];

      if (v20) {
        goto LABEL_24;
      }
    }

    else
    {
      uint64_t v42 = 0LL;
      if (v20)
      {
LABEL_24:
        char v43 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", i));
        uint64_t v44 = (void *)objc_claimAutoreleasedReturnValue([v20 objectForKey:v43]);
        id v45 = [v44 unsignedLongLongValue];

        goto LABEL_27;
      }
    }

    id v45 = 0LL;
LABEL_27:
    uint64_t v46 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithUnsignedLongLong:]( &OBJC_CLASS___NSNumber,  "numberWithUnsignedLongLong:",  &v42[(void)v45]));
    id v47 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", i));
    [v38 setObject:v46 forKey:v47];
  }

  id v48 = a1;
  objc_sync_enter(v48);
  id v49 = [v38 copy];
  id v50 = v48[2];
  id v48[2] = v49;

  objc_sync_exit(v48);
  uint64_t v51 = ASDLogHandleForCategory(9LL);
  __int16 v52 = (os_log_s *)objc_claimAutoreleasedReturnValue(v51);
  if (os_log_type_enabled(v52, OS_LOG_TYPE_INFO))
  {
    unsigned __int8 v54 = (void *)objc_opt_class(v48, v53);
    *(_DWORD *)__int128 buf = 138543618;
    id v65 = v54;
    __int16 v66 = 2114;
    id v67 = v38;
    id v55 = v54;
    _os_log_impl( (void *)&_mh_execute_header,  v52,  OS_LOG_TYPE_INFO,  "[%{public}@] Refreshed combined system purgeable: %{public}@",  buf,  0x16u);
  }

  uint64_t v56 = v48;
  objc_sync_enter(v56);
  *((CFAbsoluteTime *)v56 + 5) = CFAbsoluteTimeGetCurrent();
  __int16 v57 = (dispatch_source_s *)v56[4];
  if (v57)
  {
    dispatch_source_cancel(v57);
    id v58 = v56[4];
    void v56[4] = 0LL;
  }

  objc_sync_exit(v56);

LABEL_33:
}

void sub_10021FDC8(_Unwind_Exception *a1)
{
}

void sub_10021FDF4(dispatch_queue_t *a1, uint64_t a2)
{
  if (a1)
  {
    dispatch_assert_queue_V2(a1[3]);
    uint64_t v4 = @"/private/var";
    if (a2 != 1) {
      uint64_t v4 = 0LL;
    }
    if (a2 == 2) {
      uint64_t v4 = @"/private/var/mobile";
    }
    uint64_t v5 = v4;
    if (!v5)
    {
      uint64_t v8 = ASDLogHandleForCategory(9LL);
      id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)__int128 buf = 138543874;
        id v25 = (id)objc_opt_class(a1, v10);
        __int16 v26 = 2114;
        id v27 = 0LL;
        __int16 v28 = 2114;
        id v29 = 0LL;
        id v11 = v25;
        _os_log_error_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_ERROR,  "[%{public}@] Unsupported targetVolume: %{public}@ volume: %{public}@",  buf,  0x20u);
      }

      goto LABEL_19;
    }

    if (a2 == 1)
    {
      uint64_t v12 = a1;
      objc_sync_enter(v12);
      uint64_t v7 = (os_log_s *)[v12[2] copy];
    }

    else
    {
      if (a2 != 2) {
        goto LABEL_17;
      }
      id v6 = a1;
      objc_sync_enter(v6);
      uint64_t v7 = (os_log_s *)[v6[1] copy];
    }

    id v9 = v7;
    objc_sync_exit(a1);

    if (v9)
    {
      v22[0] = @"CACHE_DELETE_ID";
      v22[1] = @"CACHE_DELETE_VOLUME";
      v23[0] = @"com.apple.appstored.CacheDelete";
      v23[1] = v5;
      id v22[2] = @"CACHE_DELETE_AMOUNT";
      void v23[2] = v9;
      uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v23,  v22,  3LL));
      CacheDeleteUpdatePurgeable();
      uint64_t v14 = ASDLogHandleForCategory(9LL);
      id v15 = (os_log_s *)objc_claimAutoreleasedReturnValue(v14);
      if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
      {
        id v17 = (void *)objc_opt_class(a1, v16);
        *(_DWORD *)__int128 buf = 138543874;
        id v25 = v17;
        __int16 v26 = 2114;
        id v27 = v9;
        __int16 v28 = 2114;
        id v29 = v5;
        id v18 = v17;
        _os_log_impl( (void *)&_mh_execute_header,  v15,  OS_LOG_TYPE_INFO,  "[%{public}@] Pushed purgeable amounts: %{public}@ for volume: %{public}@",  buf,  0x20u);
      }

LABEL_19:
      return;
    }

void sub_1002200AC(_Unwind_Exception *a1)
{
}

void sub_1002200CC(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 40)) {
    sub_10021F818(*(id **)(a1 + 32), @"Update Push", @"com.apple.appstored");
  }
  sub_10021FDF4(*(dispatch_queue_t **)(a1 + 32), 1LL);
  sub_10021FDF4(*(dispatch_queue_t **)(a1 + 32), 2LL);
}

void *sub_1002204FC(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  if (a1)
  {
    v9.receiver = a1;
    v9.super_class = (Class)&OBJC_CLASS___CoordinatorPromiseProvider;
    a1 = objc_msgSendSuper2(&v9, "init");
    if (a1)
    {
      if ([v5 conformsToProtocol:&OBJC_PROTOCOL___IXCoordinatorWithAppAssetPromise])
      {
        id v6 = v5;
        uint64_t v7 = (void *)a1[1];
        a1[1] = v6;
      }

      else
      {

        if (!a3)
        {
          a1 = 0LL;
          goto LABEL_8;
        }

        NSErrorUserInfoKey v10 = NSDebugDescriptionErrorKey;
        id v11 = @"Coordinator does not conform to IXCoordinatorWithAppAssetPromise";
        uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v11,  &v10,  1LL));
        a1 = 0LL;
        *a3 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ASDErrorDomain,  807LL,  v7));
      }
    }
  }

void *sub_100220630(void *a1, void *a2, void *a3)
{
  id v5 = a2;
  if (a1)
  {
    id v6 = (void *)a1[1];
    id v15 = 0LL;
    a1 = (void *)objc_claimAutoreleasedReturnValue([v6 appAssetPromiseWithError:&v15]);
    id v7 = v15;
    if (a1)
    {
      if (!v5) {
        goto LABEL_9;
      }
      uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueIdentifier]);
      unsigned __int8 v9 = [v8 isEqual:v5];

      if ((v9 & 1) != 0) {
        goto LABEL_9;
      }
      NSErrorUserInfoKey v16 = NSDebugDescriptionErrorKey;
      NSErrorUserInfoKey v10 = (void *)objc_claimAutoreleasedReturnValue([a1 uniqueIdentifier]);
      id v17 = v11;
      uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v17,  &v16,  1LL));

      uint64_t v13 = objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ASDErrorDomain,  801LL,  v12));
      id v7 = (id)v13;
    }

    if (a3)
    {
      id v7 = v7;
      a1 = 0LL;
      *a3 = v7;
    }

    else
    {
      a1 = 0LL;
    }

id sub_1002207CC(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  if (!a1)
  {
    NSErrorUserInfoKey v10 = 0LL;
    goto LABEL_9;
  }

  if (!v7) {
    goto LABEL_5;
  }
  id v15 = 0LL;
  unsigned __int8 v9 = sub_100220630(a1, v7, &v15);
  NSErrorUserInfoKey v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
  id v11 = v15;
  if (!v10)
  {

LABEL_5:
    id v14 = 0LL;
    id v12 = sub_100220898((uint64_t)a1, v8, &v14);
    NSErrorUserInfoKey v10 = (void *)objc_claimAutoreleasedReturnValue(v12);
    id v11 = v14;
    if (a4 && !v10)
    {
      id v11 = v11;
      *a4 = v11;
    }
  }

LABEL_9:
  return v10;
}

id sub_100220898(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = v5;
  if (!a1)
  {
    id v9 = 0LL;
    goto LABEL_14;
  }

  id v7 = v5;
  objc_opt_self(&OBJC_CLASS___CoordinatorPromiseProvider);
  if (v7)
  {
    if (v7[5])
    {

LABEL_5:
      NSErrorUserInfoKey v22 = NSDebugDescriptionErrorKey;
      id v8 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Could not create an app data promise using %@",  v7));
      uint64_t v23 = v8;
      id v9 = (id)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v23,  &v22,  1LL));

      id v10 = (id)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  ASDErrorDomain,  703LL,  v9));
      goto LABEL_6;
    }

    id v11 = objc_alloc(&OBJC_CLASS___IXPromisedStreamingZipTransfer);
    id v13 = objc_getProperty(v7, v12, 32LL, 1);
    id v15 = objc_getProperty(v7, v14, 56LL, 1);
    uint64_t v16 = v7[2];
    uint64_t v17 = v7[3];
  }

  else
  {
    id v11 = objc_alloc(&OBJC_CLASS___IXPromisedStreamingZipTransfer);
    uint64_t v16 = 0LL;
    id v13 = 0LL;
    id v15 = 0LL;
    uint64_t v17 = 0LL;
  }

  id v9 = [v11 initWithName:v13 client:1 streamingZipOptions:v15 archiveSize:v16 diskSpaceNeeded:v17];

  if (!v9) {
    goto LABEL_5;
  }
  id v18 = *(void **)(a1 + 8);
  id v21 = 0LL;
  unsigned __int8 v19 = [v18 setAppAssetPromise:v9 error:&v21];
  id v10 = v21;
  if ((v19 & 1) == 0)
  {
    [v9 cancelForReason:v10 client:1 error:0];
LABEL_6:

    if (a3)
    {
      id v10 = v10;
      id v9 = 0LL;
      *a3 = v10;
    }

    else
    {
      id v9 = 0LL;
    }
  }

LABEL_14:
  return v9;
}

void *sub_100220AC8(void *a1, void *a2, void *a3)
{
  if (a1)
  {
    uint64_t v3 = sub_100220630(a1, a2, a3);
    a1 = (void *)objc_claimAutoreleasedReturnValue(v3);
  }

  return a1;
}

id sub_100220AE4(void *a1, uint64_t a2, void *a3, void *a4)
{
  if (a1)
  {
    id v4 = sub_100220898((uint64_t)a1, a3, a4);
    a1 = (void *)objc_claimAutoreleasedReturnValue(v4);
  }

  return a1;
}

id sub_100220B14(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100220B8C;
  block[3] = &unk_1003E9EA8;
  void block[4] = objc_opt_self(a1);
  if (qword_100462390 != -1) {
    dispatch_once(&qword_100462390, block);
  }
  return (id)qword_100462388;
}

void sub_100220B8C(uint64_t a1)
{
  id v1 = sub_100220C24(*(void *)(a1 + 32));
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  if (v2)
  {
    id v7 = v2;
    uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([v2 URLByAppendingPathComponent:@"Library/"]);
    id v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
    [v4 createDirectoryAtURL:v3 withIntermediateDirectories:1 attributes:0 error:0];

    uint64_t v5 = objc_claimAutoreleasedReturnValue([v3 path]);
    id v6 = (void *)qword_100462388;
    qword_100462388 = v5;

    uint64_t v2 = v7;
  }
}

id sub_100220C24(uint64_t a1)
{
  if (qword_1004623B0 != -1) {
    dispatch_once(&qword_1004623B0, &stru_1003ED4E8);
  }
  return (id)qword_1004623A8;
}

id sub_100220C68(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472LL;
  block[2] = sub_100220CE0;
  block[3] = &unk_1003E9EA8;
  void block[4] = objc_opt_self(a1);
  if (qword_1004623A0 != -1) {
    dispatch_once(&qword_1004623A0, block);
  }
  return (id)qword_100462398;
}

void sub_100220CE0(uint64_t a1)
{
  id v1 = sub_100220C24(*(void *)(a1 + 32));
  uint64_t v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  if (v2)
  {
    id v8 = v2;
    uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue([v2 URLByAppendingPathComponent:@"Library/Caches/"]);
    id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 URLByAppendingPathComponent:@"Scratch"]);
    uint64_t v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
    [v5 createDirectoryAtURL:v4 withIntermediateDirectories:1 attributes:0 error:0];

    uint64_t v6 = objc_claimAutoreleasedReturnValue([v4 path]);
    id v7 = (void *)qword_100462398;
    qword_100462398 = v6;

    uint64_t v2 = v8;
  }
}

id sub_100220D98(uint64_t a1)
{
  uint64_t v1 = objc_opt_self(a1);
  id v2 = sub_100220C68(v1);
  uint64_t v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 stringByAppendingPathComponent:@"ODR"]);

  return v4;
}

id sub_100220DDC(uint64_t a1)
{
  uint64_t v1 = objc_opt_self(a1);
  return sub_100220DF8(v1, @"com.apple.appstored");
}

id sub_100220DF8(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = objc_opt_self(a1);
  id v5 = v3;
  uint64_t v6 = objc_opt_self(v4);
  id v7 = NSSearchPathForDirectoriesInDomains(NSCachesDirectory, 1uLL, 1);
  id v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 firstObject]);

  if (v9)
  {
    id v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL fileURLWithPath:](&OBJC_CLASS___NSURL, "fileURLWithPath:", v9));
    id v11 = sub_100221404(v6, v10, v5);
    SEL v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
  }

  else
  {
    uint64_t v13 = ASDLogHandleForCategory(14LL);
    SEL v14 = (os_log_s *)objc_claimAutoreleasedReturnValue(v13);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_FAULT))
    {
      int v17 = 134218498;
      uint64_t v18 = 13LL;
      __int16 v19 = 2048;
      uint64_t v20 = 1LL;
      __int16 v21 = 2114;
      id v22 = v5;
      _os_log_fault_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_FAULT,  "Unable to determine path for directory: %ld domain mask: %lu with path component: %{public}@",  (uint8_t *)&v17,  0x20u);
    }

    SEL v12 = 0LL;
  }

  id v15 = (void *)objc_claimAutoreleasedReturnValue([v12 path]);
  return v15;
}

void sub_100220F7C(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = objc_opt_self(a1);
  objc_opt_self(v4);
  id v5 = sub_100220DF8(v4, v3);
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(v5);

  id v7 = &off_10040DD98;
  id v32 = v6;
  objc_opt_self(v4);
  id v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
  id v42 = 0LL;
  id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 contentsOfDirectoryAtPath:v32 error:&v42]);
  id v10 = v42;

  if (v9)
  {
    __int128 v40 = 0u;
    __int128 v41 = 0u;
    __int128 v38 = 0u;
    __int128 v39 = 0u;
    id v11 = v9;
    id v12 = [v11 countByEnumeratingWithState:&v38 objects:v48 count:16];
    if (v12)
    {
      id v13 = v12;
      id v30 = v10;
      id v31 = v9;
      uint64_t v14 = *(void *)v39;
      do
      {
        for (uint64_t i = 0LL; i != v13; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v39 != v14) {
            objc_enumerationMutation(v11);
          }
          uint64_t v16 = *(void **)(*((void *)&v38 + 1) + 8LL * (void)i);
          __int128 v34 = 0u;
          __int128 v35 = 0u;
          __int128 v36 = 0u;
          __int128 v37 = 0u;
          int v17 = &off_10040DD98;
          id v18 = [&off_10040DD98 countByEnumeratingWithState:&v34 objects:v47 count:16];
          if (v18)
          {
            uint64_t v19 = *(void *)v35;
            while (2)
            {
              for (uint64_t j = 0LL; j != v18; uint64_t j = (char *)j + 1)
              {
                if (*(void *)v35 != v19) {
                  objc_enumerationMutation(&off_10040DD98);
                }
                if (objc_msgSend( v16,  "hasPrefix:",  *(void *)(*((void *)&v34 + 1) + 8 * (void)j),  v30,  v31))
                {
                  LOBYTE(v1_Block_object_dispose(va, 8) = 1;
                  goto LABEL_17;
                }
              }

              id v18 = [&off_10040DD98 countByEnumeratingWithState:&v34 objects:v47 count:16];
              if (v18) {
                continue;
              }
              break;
            }
          }

id sub_1002213A0(uint64_t a1)
{
  uint64_t v1 = objc_opt_self(a1);
  id v2 = sub_100220C24(v1);
  id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  id v4 = sub_100221404(v1, v3, @"Documents/Persistence");
  id v5 = (void *)objc_claimAutoreleasedReturnValue(v4);

  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v5 path]);
  return v6;
}

id sub_100221404(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  objc_opt_self(a1);
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 URLByAppendingPathComponent:v5]);

  if (v7)
  {
    id v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
    id v14 = 0LL;
    unsigned __int8 v9 = [v8 createDirectoryAtURL:v7 withIntermediateDirectories:1 attributes:0 error:&v14];
    id v10 = v14;

    if ((v9 & 1) == 0)
    {
      uint64_t v11 = ASDLogHandleForCategory(14LL);
      id v12 = (os_log_s *)objc_claimAutoreleasedReturnValue(v11);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)__int128 buf = 138543618;
        uint64_t v16 = v7;
        __int16 v17 = 2114;
        id v18 = v10;
        _os_log_error_impl( (void *)&_mh_execute_header,  v12,  OS_LOG_TYPE_ERROR,  "Failed to create directory: %{public}@ error: %{public}@",  buf,  0x16u);
      }

      id v7 = 0LL;
    }
  }

  else
  {
    id v10 = 0LL;
  }

  return v7;
}

void sub_100221558(id a1)
{
  unint64_t v15 = 0LL;
  uint64_t v1 = container_system_path_for_identifier("com.apple.appstored", &v15);
  if (v15 > 1 || v1 == 0)
  {
    uint64_t v3 = ASDLogHandleForCategory(14LL);
    id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)__int128 buf = 134217984;
      unint64_t v31 = v15;
      _os_log_fault_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_FAULT,  "Failed to determine container path error: %llu",  buf,  0xCu);
    }
  }

  else
  {
    id v5 = (void *)v1;
    uint64_t v6 = objc_claimAutoreleasedReturnValue( +[NSURL fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:]( &OBJC_CLASS___NSURL,  "fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:",  v1,  1LL,  0LL));
    id v7 = (void *)qword_1004623A8;
    qword_1004623A8 = v6;

    free(v5);
  }

  if (qword_1004623A8)
  {
    v28[0] = @".";
    v26[0] = NSURLIsExcludedFromBackupKey;
    v26[1] = NSURLFileProtectionKey;
    v27[0] = &__kCFBooleanFalse;
    v27[1] = NSURLFileProtectionNone;
    id v8 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v27,  v26,  2LL));
    v29[0] = v8;
    v28[1] = @"Documents";
    v24[0] = NSURLIsExcludedFromBackupKey;
    v24[1] = NSURLFileProtectionKey;
    v25[0] = &__kCFBooleanTrue;
    v25[1] = NSURLFileProtectionNone;
    unsigned __int8 v9 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v25,  v24,  2LL));
    v29[1] = v9;
    void v28[2] = @"Library";
    v22[0] = NSURLIsExcludedFromBackupKey;
    v22[1] = NSURLFileProtectionKey;
    v23[0] = &__kCFBooleanFalse;
    v23[1] = NSURLFileProtectionNone;
    id v10 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v23,  v22,  2LL));
    void v29[2] = v10;
    v28[3] = @"Library/Caches";
    v20[0] = NSURLIsExcludedFromBackupKey;
    v20[1] = NSURLFileProtectionKey;
    v21[0] = &__kCFBooleanTrue;
    v21[1] = NSURLFileProtectionNone;
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v21,  v20,  2LL));
    v29[3] = v11;
    v28[4] = @"Library/Preferences";
    v18[0] = NSURLIsExcludedFromBackupKey;
    v18[1] = NSURLFileProtectionKey;
    v19[0] = &__kCFBooleanTrue;
    v19[1] = NSURLFileProtectionCompleteUntilFirstUserAuthentication;
    id v12 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v19,  v18,  2LL));
    void v29[4] = v12;
    void v28[5] = @"tmp";
    v16[0] = NSURLIsExcludedFromBackupKey;
    v16[1] = NSURLFileProtectionKey;
    v17[0] = &__kCFBooleanTrue;
    v17[1] = NSURLFileProtectionNone;
    id v13 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v17,  v16,  2LL));
    void v29[5] = v13;
    id v14 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v29,  v28,  6LL));

    [v14 enumerateKeysAndObjectsUsingBlock:&stru_1003ED528];
  }

void sub_10022184C(id a1, NSString *a2, NSDictionary *a3, BOOL *a4)
{
  id v5 = (void *)qword_1004623A8;
  uint64_t v6 = a3;
  id v7 = (void *)objc_claimAutoreleasedReturnValue([v5 URLByAppendingPathComponent:a2]);
  id v12 = 0LL;
  unsigned __int8 v8 = [v7 setResourceValues:v6 error:&v12];

  id v9 = v12;
  if ((v8 & 1) == 0)
  {
    uint64_t v10 = ASDLogHandleForCategory(14LL);
    uint64_t v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)__int128 buf = 138543618;
      id v14 = v7;
      __int16 v15 = 2114;
      id v16 = v9;
      _os_log_fault_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_FAULT,  "Failed to set attributes for: %{public}@ error: %{public}@",  buf,  0x16u);
    }
  }
}

void *sub_10022195C(void *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    v7.receiver = a1;
    v7.super_class = (Class)&OBJC_CLASS___PurchaseHistoryHideShowRequestEncoder;
    a1 = objc_msgSendSuper2(&v7, "init");
    if (a1)
    {
      id v4 = [v3 copy];
      id v5 = (void *)a1[1];
      a1[1] = v4;
    }
  }

  return a1;
}

NSArray *sub_100221CC4(uint64_t a1)
{
  if (!a1) {
    return (NSArray *)0LL;
  }
  id v2 = sub_100220B14((uint64_t)&OBJC_CLASS___Storage);
  id v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 stringByAppendingPathComponent:@"apps.plist"]);
  id v5 = -[NSArray initWithContentsOfFile:](objc_alloc(&OBJC_CLASS___NSArray), "initWithContentsOfFile:", v4);
  if (v5)
  {
    uint64_t v6 = ASDLogHandleForCategory(14LL);
    objc_super v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      id v9 = (void *)objc_opt_class(a1, v8);
      id v10 = v9;
      uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(-[NSArray componentsJoinedByString:](v5, "componentsJoinedByString:", @", "));
      int v14 = 138543618;
      __int16 v15 = v9;
      __int16 v16 = 2114;
      __int16 v17 = v11;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] Found commonly used apps: [%{public}@]",  (uint8_t *)&v14,  0x16u);
    }

    id v12 = v5;
  }

  else
  {
    id v12 = (NSArray *)&__NSArray0__struct;
  }

  return v12;
}

void sub_100221E34(uint64_t a1)
{
  if (a1)
  {
    id v2 = objc_alloc_init(&OBJC_CLASS____TtC9appstored6LogKey);
    uint64_t v3 = ASDLogHandleForCategory(14LL);
    id v4 = (os_log_s *)objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)__int128 buf = 138543618;
      id v122 = (id)objc_opt_class(a1, v5);
      __int16 v123 = 2112;
      uint64_t v124 = v2;
      id v6 = v122;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] [%@] Persisting usage for restore prioritization",  buf,  0x16u);
    }

    objc_super v7 = v2;
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableSet set](&OBJC_CLASS___NSMutableSet, "set"));
    id v9 = sub_10028EB28((uint64_t)&OBJC_CLASS___LSEnumerator);
    __int128 v106 = 0u;
    __int128 v107 = 0u;
    __int128 v108 = 0u;
    __int128 v109 = 0u;
    id obj = (id)objc_claimAutoreleasedReturnValue(v9);
    id v10 = [obj countByEnumeratingWithState:&v106 objects:buf count:16];
    if (v10)
    {
      id v11 = v10;
      uint64_t v12 = *(void *)v107;
      uint64_t v13 = LSUserApplicationType;
      do
      {
        for (uint64_t i = 0LL; i != v11; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v107 != v12) {
            objc_enumerationMutation(obj);
          }
          __int16 v15 = *(void **)(*((void *)&v106 + 1) + 8LL * (void)i);
          __int16 v16 = (void *)objc_claimAutoreleasedReturnValue([v15 typeForInstallMachinery]);
          if ([v16 isEqualToString:v13])
          {
            __int16 v17 = (void *)objc_claimAutoreleasedReturnValue([v15 bundleIdentifier]);
            [v8 addObject:v17];
          }
        }

        id v11 = [obj countByEnumeratingWithState:&v106 objects:buf count:16];
      }

      while (v11);
    }

    id v18 = (void *)objc_claimAutoreleasedReturnValue(+[LaunchHistory shared](&OBJC_CLASS____TtC9appstored13LaunchHistory, "shared"));
    uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([v18 syncIfNeededWithLogKey:v7]);

    __int128 v98 = v19;
    uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue([v19 error]);

    if (v20)
    {
      uint64_t v21 = ASDLogHandleForCategory(3LL);
      uint64_t v22 = (os_log_s *)objc_claimAutoreleasedReturnValue(v21);
      if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
      {
        id v24 = (void *)objc_opt_class(a1, v23);
        *(_DWORD *)uint64_t v118 = 138543618;
        *(void *)&v118[4] = v24;
        __int16 v119 = 2112;
        id v120 = v7;
        id v25 = v24;
        _os_log_impl( (void *)&_mh_execute_header,  v22,  OS_LOG_TYPE_INFO,  "[%{public}@] [%@] History sync complete",  v118,  0x16u);
      }
    }

    uint64_t v100 = a1;
    uint64_t v26 = objc_claimAutoreleasedReturnValue(+[NSDate dateWithTimeIntervalSinceNow:](&OBJC_CLASS___NSDate, "dateWithTimeIntervalSinceNow:", -604800.0));
    id v27 = objc_alloc(&OBJC_CLASS___NSDateInterval);
    __int16 v28 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
    id v96 = (void *)v26;
    uint64_t v29 = -[NSDateInterval initWithStartDate:endDate:](v27, "initWithStartDate:endDate:", v26, v28);

    id v30 = (void *)objc_claimAutoreleasedReturnValue(+[LaunchHistory shared](&OBJC_CLASS____TtC9appstored13LaunchHistory, "shared"));
    __int128 v99 = v7;
    id v97 = v29;
    unint64_t v31 = (void *)objc_claimAutoreleasedReturnValue([v30 getBiomeLaunchesWithLogKey:v7 dateInterval:v29 latestLaunchOnly:0]);

    id v32 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](&OBJC_CLASS___NSMutableDictionary, "dictionary"));
    __int128 v102 = 0u;
    __int128 v103 = 0u;
    __int128 v104 = 0u;
    __int128 v105 = 0u;
    id v33 = v31;
    id v34 = [v33 countByEnumeratingWithState:&v102 objects:v118 count:16];
    if (v34)
    {
      id v35 = v34;
      uint64_t v36 = *(void *)v103;
      do
      {
        for (uint64_t j = 0LL; j != v35; uint64_t j = (char *)j + 1)
        {
          if (*(void *)v103 != v36) {
            objc_enumerationMutation(v33);
          }
          __int128 v38 = *(void **)(*((void *)&v102 + 1) + 8LL * (void)j);
          id v39 = sub_1002CFD24(v38);
          __int128 v40 = (void *)objc_claimAutoreleasedReturnValue(v39);
          unsigned int v41 = [v8 containsObject:v40];

          if (v41)
          {
            id v42 = sub_1002CFD24(v38);
            char v43 = (void *)objc_claimAutoreleasedReturnValue(v42);
            uint64_t v44 = (void *)objc_claimAutoreleasedReturnValue([v32 objectForKeyedSubscript:v43]);

            if (v44)
            {
              __int16 v45 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithInteger:]( NSNumber,  "numberWithInteger:",  (char *)[v44 integerValue] + 1));
              id v46 = sub_1002CFD24(v38);
              id v47 = (void *)objc_claimAutoreleasedReturnValue(v46);
              [v32 setObject:v45 forKeyedSubscript:v47];
            }

            else
            {
              id v48 = sub_1002CFD24(v38);
              __int16 v45 = (void *)objc_claimAutoreleasedReturnValue(v48);
              [v32 setObject:&off_10040C790 forKeyedSubscript:v45];
            }
          }
        }

        id v35 = [v33 countByEnumeratingWithState:&v102 objects:v118 count:16];
      }

      while (v35);
    }

    if ([v32 count])
    {
      id v49 = (void *)objc_claimAutoreleasedReturnValue([v32 keysSortedByValueUsingComparator:&stru_1003ED568]);
      uint64_t v50 = llround((double)(unint64_t)[v8 count] * 0.15);
      if (v50 >= 25) {
        unint64_t v51 = 25LL;
      }
      else {
        unint64_t v51 = v50;
      }
      id v52 = [v49 count];
      else {
        uint64_t v53 = (uint64_t)v52;
      }
      if (v53 < 1)
      {
        uint64_t v59 = &__NSArray0__struct;
        id v63 = v96;
      }

      else
      {
        uint64_t v54 = ASDLogHandleForCategory(14LL);
        id v55 = (os_log_s *)objc_claimAutoreleasedReturnValue(v54);
        if (os_log_type_enabled(v55, OS_LOG_TYPE_DEFAULT))
        {
          __int16 v57 = (void *)objc_opt_class(v100, v56);
          *(_DWORD *)uint64_t v110 = 138543618;
          id v111 = v57;
          __int16 v112 = 2114;
          id v113 = v32;
          id v58 = v57;
          _os_log_impl( (void *)&_mh_execute_header,  v55,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] All ranked apps: %{public}@",  v110,  0x16u);
        }

        uint64_t v59 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v49, "subarrayWithRange:", 0, v53));
        uint64_t v60 = ASDLogHandleForCategory(14LL);
        uint64_t v61 = (os_log_s *)objc_claimAutoreleasedReturnValue(v60);
        id v63 = v96;
        if (os_log_type_enabled(v61, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v64 = (void *)objc_opt_class(v100, v62);
          id v95 = v64;
          id v65 = [v59 count];
          id v66 = [v8 count];
          *(_DWORD *)uint64_t v110 = 138544130;
          id v111 = v64;
          __int16 v112 = 2048;
          id v113 = v65;
          __int16 v114 = 2048;
          id v115 = v66;
          __int16 v116 = 2114;
          id v117 = v59;
          _os_log_impl( (void *)&_mh_execute_header,  v61,  OS_LOG_TYPE_DEFAULT,  "[%{public}@] Ranked %ld apps out of %ld candidate(s). Ranked apps: %{public}@",  v110,  0x2Au);
        }
      }
    }

    else
    {
      uint64_t v59 = &__NSArray0__struct;
      id v63 = v96;
    }

    if (![v59 count])
    {
      uint64_t v75 = ASDLogHandleForCategory(14LL);
      __int16 v76 = (os_log_s *)objc_claimAutoreleasedReturnValue(v75);
      if (os_log_type_enabled(v76, OS_LOG_TYPE_DEFAULT))
      {
        __int16 v78 = (void *)objc_opt_class(v100, v77);
        *(_DWORD *)__int128 buf = 138543618;
        id v122 = v78;
        __int16 v123 = 2112;
        uint64_t v124 = v99;
        id v79 = v78;
        __int16 v80 = "[%{public}@] [%@] No app usage to save";
LABEL_59:
        _os_log_impl((void *)&_mh_execute_header, v76, OS_LOG_TYPE_DEFAULT, v80, buf, 0x16u);
      }

int64_t sub_1002227B8(id a1, NSNumber *a2, NSNumber *a3)
{
  id v4 = a3;
  NSInteger v5 = -[NSNumber integerValue](a2, "integerValue");
  NSInteger v6 = -[NSNumber integerValue](v4, "integerValue");

  if (v5 > v6) {
    return -1LL;
  }
  else {
    return v5 < v6;
  }
}

id sub_10022280C(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_opt_self(a1);
  if (v3)
  {
    id v4 = v3[3];
    id v5 = v3[2];
  }

  else
  {
    id v4 = 0LL;
    id v5 = 0LL;
  }

  id v6 = v5;
  objc_super v7 = (void *)objc_claimAutoreleasedReturnValue( +[AMSDialogRequest requestWithTitle:message:]( &OBJC_CLASS___AMSDialogRequest,  "requestWithTitle:message:",  v4,  v6));

  uint64_t v8 = ASDLocalizedString(@"CANCEL");
  id v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
  id v10 = (void *)objc_claimAutoreleasedReturnValue( +[AMSDialogAction actionWithTitle:style:]( &OBJC_CLASS___AMSDialogAction,  "actionWithTitle:style:",  v9,  2LL));

  [v10 setIdentifier:@"AuthenticationChallengeDialogActionCancel"];
  [v7 addButtonAction:v10];
  uint64_t v11 = ASDLocalizedString(@"OK");
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue( +[AMSDialogAction actionWithTitle:style:]( &OBJC_CLASS___AMSDialogAction,  "actionWithTitle:style:",  v12,  0LL));

  [v13 setIdentifier:@"AuthenticationChallengeDialogActionOkay"];
  [v7 addButtonAction:v13];
  uint64_t v14 = ASDLocalizedString(@"SERVER_AUTHENTICATION_USERNAME");
  __int16 v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
  __int16 v16 = (void *)objc_claimAutoreleasedReturnValue( +[AMSDialogTextField textFieldWithPlaceholder:secure:]( &OBJC_CLASS___AMSDialogTextField,  "textFieldWithPlaceholder:secure:",  v15,  0LL));

  [v16 setKeyboardType:0];
  id v17 = sub_100291A4C((uint64_t)v3);
  id v18 = (void *)objc_claimAutoreleasedReturnValue(v17);

  [v16 setText:v18];
  [v7 addTextField:v16];
  uint64_t v19 = ASDLocalizedString(@"SERVER_AUTHENTICATION_PASSWORD");
  uint64_t v20 = (void *)objc_claimAutoreleasedReturnValue(v19);
  uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue( +[AMSDialogTextField textFieldWithPlaceholder:secure:]( &OBJC_CLASS___AMSDialogTextField,  "textFieldWithPlaceholder:secure:",  v20,  1LL));

  [v21 setKeyboardType:0];
  [v7 addTextField:v21];

  return v7;
}

id *sub_100222A18(id *a1, void *a2, void *a3)
{
  id v6 = a2;
  id v7 = a3;
  if (a1)
  {
    uint64_t v8 = [a1 init];
    a1 = v8;
    if (v8)
    {
      objc_storeStrong(v8 + 4, a2);
      objc_storeStrong(a1 + 3, a3);
    }
  }

  return a1;
}

void sub_100222A94(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    id v4 = *(id *)(a1 + 8);
    if (v4
      || (v5 = (void *)objc_claimAutoreleasedReturnValue( +[ACAccountStore ams_sharedAccountStore]( ACAccountStore,  "ams_sharedAccountStore")),  id v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "ams_activeiTunesAccount")),  v5,  v4))
    {
      id v6 = objc_alloc_init(&OBJC_CLASS___URLRequestProperties);
      sub_100293B18((uint64_t)v6, v4);
      sub_100293E00((uint64_t)v6, *(void **)(a1 + 16));
      id v7 = sub_100255630((uint64_t)&OBJC_CLASS___URLBag);
      uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
      id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 URLForKey:@"fsEntitlementsSrv"]);
      sub_100293C78((uint64_t)v6, v9);

      switch(*(void *)(a1 + 48))
      {
        case 0LL:
          id v10 = @"News";
          goto LABEL_14;
        case 1LL:
          id v10 = @"AppStore";
          goto LABEL_14;
        case 2LL:
          id v10 = @"Activity";
          goto LABEL_14;
        case 3LL:
          id v10 = @"Music";
          goto LABEL_14;
        case 4LL:
          id v10 = @"TV";
          goto LABEL_14;
        case 5LL:
          id v10 = @"iCloud";
          goto LABEL_14;
        case 6LL:
          id v10 = @"Podcasts";
LABEL_14:
          sub_1002949E0((uint64_t)v6, v10, @"segment");
          goto LABEL_15;
        case 7LL:
          sub_1002949E0((uint64_t)v6, @"HWBundle", @"segment");
          id v17 = (void *)objc_claimAutoreleasedReturnValue(+[AMSDevice serialNumber](&OBJC_CLASS___AMSDevice, "serialNumber"));
          if ([v17 length]) {
            sub_1002949E0((uint64_t)v6, v17, @"serialNumber");
          }

LABEL_15:
          uint64_t v14 = *(void **)(a1 + 32);
          if (v14)
          {
            id v15 = objc_getProperty(v14, v13, 32LL, 1);
            sub_1002940C8((uint64_t)v6, v15);
          }

          __int16 v16 = sub_1001DD814(objc_alloc(&OBJC_CLASS___URLRequest), v6);
          v18[0] = _NSConcreteStackBlock;
          v18[1] = 3221225472LL;
          void v18[2] = sub_100222D6C;
          v18[3] = &unk_1003ED598;
          void v18[4] = a1;
          id v20 = v3;
          id v19 = v4;
          sub_1001DD8A0((uint64_t)v16, v18);

          break;
        default:
          uint64_t v11 = ASDErrorWithDescription(ASDErrorDomain, 507LL, @"Invalid segment");
          uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
          (*((void (**)(id, void, void *))v3 + 2))(v3, 0LL, v12);

          break;
      }
    }

    else
    {
      (*((void (**)(id, void, void))v3 + 2))(v3, 0LL, 0LL);
    }
  }
}

void sub_100222D6C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = v5;
  if (a2)
  {
    id v7 = a2;
    objc_opt_self(&OBJC_CLASS___SubscriptionEntitlementsRequest);
    if ([v7 responseStatusCode] == (id)200)
    {
      uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([v7 object]);

      uint64_t v10 = objc_opt_class(&OBJC_CLASS___NSDictionary, v9);
      if ((objc_opt_isKindOfClass(v8, v10) & 1) != 0)
      {
        uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue([v8 objectForKey:@"status"]);
        uint64_t v13 = objc_opt_class(&OBJC_CLASS___NSNumber, v12);
        if ((objc_opt_isKindOfClass(v11, v13) & 1) != 0 && [v11 integerValue])
        {
          uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v8 objectForKey:@"errorNumber"]);
          uint64_t v16 = objc_opt_class(&OBJC_CLASS___NSNumber, v15);
          if ((objc_opt_isKindOfClass(v14, v16) & 1) != 0) {
            id v17 = v14;
          }
          else {
            id v17 = v11;
          }
          id v18 = [v17 integerValue];
          uint64_t v19 = objc_claimAutoreleasedReturnValue([v8 objectForKey:@"errorMessage"]);
          id v20 = (void *)v19;
          uint64_t v21 = @"Unknown server error";
          if (v19) {
            uint64_t v21 = (__CFString *)v19;
          }
          uint64_t v22 = v21;

          uint64_t v23 = ASDServerErrorDomain;
          NSErrorUserInfoKey v54 = NSDebugDescriptionErrorKey;
          *(void *)id v49 = v22;
          id v24 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v49,  &v54,  1LL));
          id v25 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  v23,  v18,  v24));

          goto LABEL_17;
        }

        id v35 = (void *)objc_claimAutoreleasedReturnValue([v8 objectForKeyedSubscript:@"entitlements"]);
        uint64_t v36 = sub_1002D8060(objc_alloc(&OBJC_CLASS___SubscriptionEntitlementsResponse), v35);

        if (v36)
        {
          uint64_t v37 = ASDLogHandleForCategory(37LL);
          __int128 v38 = (os_log_s *)objc_claimAutoreleasedReturnValue(v37);
          if (os_log_type_enabled(v38, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v39 = *(void *)(*(void *)(a1 + 32) + 24LL);
            *(_DWORD *)id v49 = 138412290;
            *(void *)&void v49[4] = v39;
            _os_log_impl( (void *)&_mh_execute_header,  v38,  OS_LOG_TYPE_DEFAULT,  "[%@] Entitlement fetch succeeded",  v49,  0xCu);
          }

          (*(void (**)(void))(*(void *)(a1 + 48) + 16LL))();
          id v40 = 0LL;
          goto LABEL_35;
        }
      }

      else
      {
      }

      id v25 = 0LL;
      goto LABEL_27;
    }

    uint64_t v33 = ASDErrorDomain;
    uint64_t v52 = ASDErrorHTTPStatusCodeKey;
    id v34 = [v7 responseStatusCode];

    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", v34));
    uint64_t v53 = v8;
    uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  &v53,  &v52,  1LL));
    id v25 = (void *)objc_claimAutoreleasedReturnValue( +[NSError errorWithDomain:code:userInfo:]( &OBJC_CLASS___NSError,  "errorWithDomain:code:userInfo:",  v33,  521LL,  v11));
LABEL_17:

LABEL_27:
    id v41 = v25;

    id v40 = v41;
    int IsEqual = ASDErrorIsEqual(v40, ASDServerErrorDomain, 3027LL);
    uint64_t v43 = ASDLogHandleForCategory(37LL);
    uint64_t v44 = (os_log_s *)objc_claimAutoreleasedReturnValue(v43);
    BOOL v45 = os_log_type_enabled(v44, OS_LOG_TYPE_DEFAULT);
    if (IsEqual)
    {
      if (v45)
      {
        uint64_t v46 = *(void *)(*(void *)(a1 + 32) + 24LL);
        *(_DWORD *)id v49 = 138412290;
        *(void *)&void v49[4] = v46;
        _os_log_impl( (void *)&_mh_execute_header,  v44,  OS_LOG_TYPE_DEFAULT,  "[%@] Entitlement fetch failed with a no authorization error",  v49,  0xCu);
      }

      sub_100223300(*(void *)(a1 + 32), *(void **)(a1 + 40), v40, *(void **)(a1 + 48));
    }

    else
    {
      if (v45)
      {
        uint64_t v47 = *(void *)(*(void *)(a1 + 32) + 24LL);
        *(_DWORD *)id v49 = 138412546;
        *(void *)&void v49[4] = v47;
        __int16 v50 = 2114;
        id v51 = v40;
        _os_log_impl( (void *)&_mh_execute_header,  v44,  OS_LOG_TYPE_DEFAULT,  "[%@] Entitlement fetch failed due to error: %{public}@",  v49,  0x16u);
      }

      (*(void (**)(void))(*(void *)(a1 + 48) + 16LL))();
    }

    uint64_t v36 = 0LL;
LABEL_35:

    goto LABEL_36;
  }

  uint64_t v26 = (void *)objc_claimAutoreleasedReturnValue([v5 userInfo]);
  id v27 = (void *)objc_claimAutoreleasedReturnValue([v26 objectForKey:AMSErrorUserInfoKeyStatusCode]);
  id v28 = [v27 integerValue];

  uint64_t v29 = ASDLogHandleForCategory(37LL);
  id v30 = (os_log_s *)objc_claimAutoreleasedReturnValue(v29);
  unint64_t v31 = v30;
  if (v28 == (id)401)
  {
    if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v32 = *(void *)(*(void *)(a1 + 32) + 24LL);
      *(_DWORD *)id v49 = 138412290;
      *(void *)&void v49[4] = v32;
      _os_log_impl( (void *)&_mh_execute_header,  v31,  OS_LOG_TYPE_DEFAULT,  "[%@] Entitlement fetch failed with a HTTP status 401 error",  v49,  0xCu);
    }

    sub_100223300(*(void *)(a1 + 32), *(void **)(a1 + 40), v6, *(void **)(a1 + 48));
  }

  else
  {
    if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR))
    {
      uint64_t v48 = *(void *)(*(void *)(a1 + 32) + 24LL);
      *(_DWORD *)id v49 = 138412546;
      *(void *)&void v49[4] = v48;
      __int16 v50 = 2114;
      id v51 = v6;
      _os_log_error_impl( (void *)&_mh_execute_header,  v31,  OS_LOG_TYPE_ERROR,  "[%@] Entitlement fetch failed with error: %{public}@",  v49,  0x16u);
    }

    (*(void (**)(void))(*(void *)(a1 + 48) + 16LL))();
  }

void sub_100223300(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  if (a1)
  {
    uint64_t v10 = ASDLogHandleForCategory(37LL);
    uint64_t v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v12 = *(void *)(a1 + 24);
      if (*(_BYTE *)(a1 + 40)) {
        uint64_t v13 = @"loud";
      }
      else {
        uint64_t v13 = @"silent";
      }
      uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "ams_DSID"));
      *(_DWORD *)__int128 buf = 138412802;
      uint64_t v37 = v12;
      __int16 v38 = 2114;
      uint64_t v39 = v13;
      __int16 v40 = 2114;
      id v41 = v14;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_DEFAULT,  "[%@] Attempting to %{public}@ auth for accountID: %{public}@",  buf,  0x20u);
    }

    uint64_t v15 = *(void **)(a1 + 32);
    if (!v15) {
      goto LABEL_25;
    }
    uint64_t v16 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) notificationClient]);
    id v17 = (void *)objc_claimAutoreleasedReturnValue([v16 supportedDialogHandlers]);
    unsigned int v18 = [v17 handlesAuthentication];

    if (!v18) {
      goto LABEL_25;
    }
    uint64_t v19 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) notificationClient]);
    id v20 = sub_100277570((uint64_t)&OBJC_CLASS___CallerRequestPresenter, v19);
    uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue(v20);

    if (v21)
    {
      uint64_t v22 = ASDLogHandleForCategory(37LL);
      uint64_t v23 = (os_log_s *)objc_claimAutoreleasedReturnValue(v22);
      if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v24 = *(void *)(a1 + 24);
        *(_DWORD *)__int128 buf = 138412290;
        uint64_t v37 = v24;
        _os_log_impl( (void *)&_mh_execute_header,  v23,  OS_LOG_TYPE_DEFAULT,  "[%@] Delivering presentation requests to notification client",  buf,  0xCu);
      }
    }

    else
    {
LABEL_25:
      if (*(_BYTE *)(a1 + 40)) {
        id v25 = &OBJC_CLASS___InteractiveRequestPresenter;
      }
      else {
        id v25 = &OBJC_CLASS___SilentRequestPresenter;
      }
      uint64_t v21 = (void *)objc_opt_new(v25);
    }

    id v26 = objc_alloc_init(&OBJC_CLASS___AMSAuthenticateOptions);
    [v26 setCanMakeAccountActive:0];
    [v26 setAuthenticationType:*(_BYTE *)(a1 + 40) == 0];
    if (*(void *)(a1 + 32))
    {
      id v27 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"%@ - SubscriptionEntitlementsRequest",  *(void *)(a1 + 32)));
      [v26 setDebugReason:v27];

      id v28 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) processInfo]);
      [v26 setClientInfo:v28];
      uint64_t v29 = (void *)objc_claimAutoreleasedReturnValue([v28 bundleIdentifier]);
      [v26 setProxyAppBundleID:v29];
    }

    else
    {
      [v26 setDebugReason:@"SubscriptionEntitlementsRequest"];
    }

    id v30 = -[AMSAuthenticateRequest initWithAccount:options:]( objc_alloc(&OBJC_CLASS___AMSAuthenticateRequest),  "initWithAccount:options:",  *(void *)(a1 + 8),  v26);
    unint64_t v31 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 24) description]);
    -[AMSAuthenticateRequest setLogKey:](v30, "setLogKey:", v31);

    v32[0] = _NSConcreteStackBlock;
    v32[1] = 3221225472LL;
    void v32[2] = sub_100223698;
    void v32[3] = &unk_1003ED5C0;
    v32[4] = a1;
    id v35 = v9;
    id v33 = v7;
    id v34 = v8;
    [v21 presentAuthenticateRequest:v30 resultHandler:v32];
  }
}

void sub_100223698(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = (void *)objc_claimAutoreleasedReturnValue([a2 account]);
  if (v6)
  {
    objc_storeStrong((id *)(*(void *)(a1 + 32) + 8LL), v6);
    uint64_t v7 = ASDLogHandleForCategory(37LL);
    id v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v9 = *(void *)(a1 + 32);
      uint64_t v10 = *(void *)(v9 + 24);
      if (*(_BYTE *)(v9 + 40)) {
        uint64_t v11 = @"loud";
      }
      else {
        uint64_t v11 = @"silent";
      }
      uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "ams_DSID"));
      int v22 = 138412802;
      uint64_t v23 = v10;
      __int16 v24 = 2114;
      id v25 = v11;
      __int16 v26 = 2114;
      id v27 = v12;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  OS_LOG_TYPE_DEFAULT,  "[%@] Successfully completed %{public}@ auth accountID: %{public}@",  (uint8_t *)&v22,  0x20u);
    }

    sub_100222A94(*(void *)(a1 + 32), *(void *)(a1 + 56));
  }

  else
  {
    uint64_t v13 = ASDLogHandleForCategory(37LL);
    uint64_t v14 = (os_log_s *)objc_claimAutoreleasedReturnValue(v13);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v15 = *(void *)(a1 + 32);
      uint64_t v16 = *(void *)(v15 + 24);
      if (*(_BYTE *)(v15 + 40)) {
        id v17 = @"loud";
      }
      else {
        id v17 = @"silent";
      }
      unsigned int v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "ams_DSID"));
      int v22 = 138412802;
      uint64_t v23 = v16;
      __int16 v24 = 2114;
      id v25 = v17;
      __int16 v26 = 2114;
      id v27 = v18;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "[%@] Failed to %{public}@ auth accountID: %{public}@",  (uint8_t *)&v22,  0x20u);
    }

    uint64_t v19 = *(void *)(a1 + 56);
    uint64_t v20 = ASDErrorBySettingUserInfoValue(*(void *)(a1 + 48), NSUnderlyingErrorKey, v5);
    uint64_t v21 = (void *)objc_claimAutoreleasedReturnValue(v20);
    (*(void (**)(uint64_t, void, void *))(v19 + 16))(v19, 0LL, v21);
  }
}

void *sub_100223904(void *a1, uint64_t a2)
{
  if (!a1) {
    return 0LL;
  }
  v14.receiver = a1;
  v14.super_class = (Class)&OBJC_CLASS___SbsyncTask;
  id v3 = objc_msgSendSuper2(&v14, "init");
  if (v3)
  {
    id v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](&OBJC_CLASS___NSDate, "date"));
    [v4 timeIntervalSinceReferenceDate];
    v3[13] = v5;

    void v3[5] = a2;
    id v6 = (void *)objc_claimAutoreleasedReturnValue( +[NSURLSessionConfiguration defaultSessionConfiguration]( &OBJC_CLASS___NSURLSessionConfiguration,  "defaultSessionConfiguration"));
    objc_msgSend(v6, "set_sourceApplicationBundleIdentifier:", @"com.apple.TVAppStore");
    id v7 = sub_1001F4B70((uint64_t)&OBJC_CLASS___AMSProcessInfo);
    id v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
    id v9 = sub_100255630((uint64_t)&OBJC_CLASS___URLBag);
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
    objc_msgSend(v6, "ams_configureWithProcessInfo:bag:", v8, v10);

    uint64_t v11 = -[AMSURLSession initWithConfiguration:delegate:delegateQueue:]( objc_alloc(&OBJC_CLASS___AMSURLSession),  "initWithConfiguration:delegate:delegateQueue:",  v6,  v3,  0LL);
    uint64_t v12 = (void *)v3[14];
    v3[14] = v11;
  }

  return v3;
}

id sub_100224A74(uint64_t a1, void *a2)
{
  uint64_t v3 = objc_opt_self(a1);
  uint64_t v16 = 0LL;
  unsigned int v15 = 0;
  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[AMSKeybag sharedInstance](&OBJC_CLASS___AMSKeybag, "sharedInstance"));
  id v14 = 0LL;
  [v4 fairplayContextWithError:&v14];
  id v5 = v14;

  sub_100092DB8();
  if ((_DWORD)v6)
  {
    uint64_t v7 = ASDErrorDomain;
    id v8 = (void *)objc_claimAutoreleasedReturnValue( +[NSString stringWithFormat:]( &OBJC_CLASS___NSString,  "stringWithFormat:",  @"Failed to get sbsync info. Fairplay error status: %d",  v6));
    uint64_t v9 = ASDErrorWithTitleAndMessage(v7, 507LL, v8, 0LL);
    uint64_t v10 = objc_claimAutoreleasedReturnValue(v9);

    uint64_t v11 = 0LL;
    id v5 = (id)v10;
    if (!a2) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }

  if (!v16)
  {
    uint64_t v11 = 0LL;
    if (!a2) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }

  uint64_t v12 = sub_100224FD8(v3, v16, v15);
  uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(v12);
  sub_10017F6D0(v16);
  if (a2) {
LABEL_6:
  }
    *a2 = v5;
LABEL_7:

  return v11;
}

BOOL sub_100224BAC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  objc_opt_self(a1);
  BOOL v7 = 0LL;
  if (v5 && v6)
  {
    id v8 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKeyedSubscript:v5]);
    uint64_t v9 = v8;
    if (v8) {
      BOOL v7 = [v8 integerValue] == (id)2;
    }
    else {
      BOOL v7 = 0LL;
    }
  }

  return v7;
}

BOOL sub_100224C38(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  uint64_t v6 = objc_opt_self(a1);
  id v13 = 0LL;
  id v7 = sub_100224A74(v6, &v13);
  id v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
  id v9 = v13;
  uint64_t v10 = v9;
  if (v9)
  {
    BOOL v11 = 0LL;
    if (a3) {
      *a3 = v9;
    }
  }

  else
  {
    BOOL v11 = sub_100224BAC((uint64_t)&OBJC_CLASS___SbsyncTask, v5, v8);
  }

  return v11;
}

void sub_100224CEC(id a1, void *a2, unint64_t a3)
{
}

void sub_100224EA8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    *(_BYTE *)(v7 + 57) = 0;
  }
  if (!v5)
  {
    uint64_t v8 = ASDLogHandleForCategory(4LL);
    id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      uint64_t v13 = *(void *)(a1 + 32);
      if (v13) {
        uint64_t v13 = *(void *)(v13 + 72);
      }
      int v14 = 138412546;
      uint64_t v15 = v13;
      __int16 v16 = 2114;
      id v17 = v6;
      _os_log_error_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_ERROR,  "[%@] Error presenting dialog request: %{public}@",  (uint8_t *)&v14,  0x16u);
    }
  }

  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v11 = ASDErrorWithSafeUserInfo(v6);
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
  (*(void (**)(uint64_t, id, void *))(v10 + 16))(v10, v5, v12);
}

NSMutableDictionary *sub_100224FD8(uint64_t a1, uint64_t a2, unsigned int a3)
{
  id v5 = 0LL;
  if (a3)
  {
    id v6 = (unsigned int *)(a2 + 8);
    uint64_t v7 = a3;
    do
    {
      uint64_t v8 = *((void *)v6 - 1);
      uint64_t v9 = *v6;
      if (!v5) {
        id v5 = objc_opt_new(&OBJC_CLASS___NSMutableDictionary);
      }
      v6 += 4;
      uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInt:](&OBJC_CLASS___NSNumber, "numberWithUnsignedInt:", v9));
      uint64_t v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedLongLong:](&OBJC_CLASS___NSNumber, "numberWithUnsignedLongLong:", v8));
      -[NSMutableDictionary setObject:forKey:](v5, "setObject:forKey:", v10, v11);

      --v7;
    }

    while (v7);
  }

  return v5;
}

void sub_100225094(uint64_t a1, void *a2)
{
  if (a1) {
    objc_storeStrong((id *)(a1 + 72), a2);
  }
}

NSPredicate *sub_1002251F8(uint64_t a1, uint64_t a2)
{
  return +[NSPredicate predicateWithFormat:]( &OBJC_CLASS___NSPredicate,  "predicateWithFormat:",  @"self isKindOfClass: %@",  a2);
}

id sub_1002252F4(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_self(a1);
  v7[0] = ASDAppLibraryServiceNotificationKeyAction;
  v7[1] = ASDAppLibraryServiceNotificationKeyBundleIDs;
  v8[0] = ASDAppLibraryServiceNotificationActionRefresh;
  v8[1] = v3;
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v8,  v7,  2LL));
  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[ASDNotification notificationWithName:userInfo:]( &OBJC_CLASS___ASDNotification,  "notificationWithName:userInfo:",  ASDAppLibraryServiceNotificationName,  v4));

  return v5;
}

id sub_1002253D8(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_self(a1);
  v7[0] = ASDAppLibraryServiceNotificationKeyAction;
  v7[1] = ASDAppLibraryServiceNotificationKeyApps;
  v8[0] = ASDAppLibraryServiceNotificationActionError;
  v8[1] = v3;
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v8,  v7,  2LL));
  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[ASDNotification notificationWithName:userInfo:]( &OBJC_CLASS___ASDNotification,  "notificationWithName:userInfo:",  ASDAppLibraryServiceNotificationName,  v4));

  return v5;
}

id sub_1002254BC(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_self(a1);
  v7[0] = ASDAppLibraryServiceNotificationKeyAction;
  v7[1] = ASDAppLibraryServiceNotificationKeyApps;
  v8[0] = ASDAppLibraryServiceNotificationActionAppsRegistered;
  v8[1] = v3;
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v8,  v7,  2LL));
  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[ASDNotification notificationWithName:userInfo:]( &OBJC_CLASS___ASDNotification,  "notificationWithName:userInfo:",  ASDAppLibraryServiceNotificationName,  v4));

  return v5;
}

id sub_1002255A0(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_self(a1);
  v7[0] = ASDAppLibraryServiceNotificationKeyAction;
  v7[1] = ASDAppLibraryServiceNotificationKeyBundleIDs;
  v8[0] = ASDAppLibraryServiceNotificationActionAppsUnregistered;
  v8[1] = v3;
  id v4 = (void *)objc_claimAutoreleasedReturnValue( +[NSDictionary dictionaryWithObjects:forKeys:count:]( &OBJC_CLASS___NSDictionary,  "dictionaryWithObjects:forKeys:count:",  v8,  v7,  2LL));
  id v5 = (void *)objc_claimAutoreleasedReturnValue( +[ASDNotification notificationWithName:userInfo:]( &OBJC_CLASS___ASDNotification,  "notificationWithName:userInfo:",  ASDAppLibraryServiceNotificationName,  v4));

  return v5;
}

void sub_1002259F8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  objc_opt_self(a1);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472LL;
  void v8[2] = sub_100225A94;
  v8[3] = &unk_1003ED628;
  id v9 = v5;
  id v7 = v5;
  [v6 enumerateObjectsUsingBlock:v8];
}

void sub_100225A94(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(a1 + 32);
  id v6 = (id)objc_claimAutoreleasedReturnValue([a2 URLByResolvingSymlinksInPath]);
  (*(void (**)(uint64_t, id, uint64_t))(v5 + 16))(v5, v6, a4);
}

id sub_100225AE4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  objc_opt_self(a1);
  uint64_t v7 = ASDLogHandleForCategory(19LL);
  uint64_t v8 = (os_log_s *)objc_claimAutoreleasedReturnValue(v7);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)__int128 buf = 138543618;
    id v17 = v6;
    __int16 v18 = 2114;
    id v19 = v5;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Removing %{public}@ [%{public}@]", buf, 0x16u);
  }

  id v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
  id v15 = 0LL;
  id v10 = [v9 removeItemAtURL:v5 error:&v15];
  id v11 = v15;

  if ((v10 & 1) == 0)
  {
    uint64_t v12 = ASDLogHandleForCategory(19LL);
    uint64_t v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)__int128 buf = 138543874;
      id v17 = v6;
      __int16 v18 = 2114;
      id v19 = v5;
      __int16 v20 = 2114;
      id v21 = v11;
      _os_log_error_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_ERROR,  "Unable to remove %{public}@ [%{public}@] error: %{public}@",  buf,  0x20u);
    }
  }

  return v10;
}

void sub_100225C78(uint64_t a1, void *a2, _BYTE *a3)
{
  id v5 = a2;
  uint64_t v6 = ASDLogHandleForCategory(19LL);
  uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    LODWORD(buf) = 138543362;
    *(void *)((char *)&buf + 4) = v5;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "Examining %{public}@", (uint8_t *)&buf, 0xCu);
  }

  if ([*(id *)(a1 + 32) isCancelled])
  {
    uint64_t v8 = ASDLogHandleForCategory(19LL);
    id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(buf) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "Validate On Device Asset Packs operation has been cancelled.",  (uint8_t *)&buf,  2u);
    }

    *a3 = 1;
  }

  else
  {
    id v10 = (void *)objc_claimAutoreleasedReturnValue([v5 lastPathComponent]);
    unsigned int v11 = [v10 isEqualToString:@"StoreKit"];

    if (v11)
    {
      uint64_t v12 = ASDLogHandleForCategory(19LL);
      uint64_t v13 = (os_log_s *)objc_claimAutoreleasedReturnValue(v12);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(buf) = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v13,  OS_LOG_TYPE_DEFAULT,  "Skipping validation of StoreKit downloads directory",  (uint8_t *)&buf,  2u);
      }
    }

    else
    {
      int v14 = *(void **)(a1 + 40);
      id v20 = 0LL;
      id v15 = (void *)objc_claimAutoreleasedReturnValue( [v14 contentsOfDirectoryAtURL:v5 includingPropertiesForKeys:&__NSArray0__struct options:0 error:&v20]);
      id v16 = v20;
      if (v15)
      {
        *(void *)&__int128 buf = 0LL;
        *((void *)&buf + 1) = &buf;
        uint64_t v22 = 0x2020000000LL;
        id v23 = [v15 count];
        v19[0] = _NSConcreteStackBlock;
        v19[1] = 3221225472LL;
        void v19[2] = sub_100225F60;
        v19[3] = &unk_1003ED650;
        void v19[4] = *(void *)(a1 + 32);
        void v19[5] = &buf;
        sub_1002259F8((uint64_t)&OBJC_CLASS___ODRAssetPackValidationMaintenanceTask, v15, v19);
        if (!*(void *)(*((void *)&buf + 1) + 24LL)) {
          sub_100225AE4((uint64_t)&OBJC_CLASS___ODRAssetPackValidationMaintenanceTask, v5, @"empty directory");
        }
        _Block_object_dispose(&buf, 8);
      }

      else
      {
        uint64_t v17 = ASDLogHandleForCategory(19LL);
        __int16 v18 = (os_log_s *)objc_claimAutoreleasedReturnValue(v17);
        if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
        {
          LODWORD(buf) = 138543362;
          *(void *)((char *)&buf + 4) = v16;
          _os_log_impl( (void *)&_mh_execute_header,  v18,  OS_LOG_TYPE_INFO,  "Correctness checking the on-disk asset packs failed.  Error: %{public}@",  (uint8_t *)&buf,  0xCu);
        }
      }
    }
  }
}

void sub_100225F40( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
}

void sub_100225F60(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = ASDLogHandleForCategory(19LL);
  id v5 = (os_log_s *)objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    LODWORD(buf) = 138543362;
    *(void *)((char *)&buf + 4) = v3;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "Examining %{public}@", (uint8_t *)&buf, 0xCu);
  }

  if ([*(id *)(a1 + 32) isCancelled])
  {
    uint64_t v6 = ASDLogHandleForCategory(19LL);
    uint64_t v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      LOWORD(buf) = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_INFO,  "Validate On Device Asset Packs operation has been cancelled.",  (uint8_t *)&buf,  2u);
    }
  }

  else
  {
    uint64_t v8 = *(void *)(a1 + 32);
    id v9 = v3;
    id v10 = v9;
    if (v8)
    {
      unsigned int v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
      id v18 = 0LL;
      uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue( [v11 contentsOfDirectoryAtURL:v10 includingPropertiesForKeys:&__NSArray0__struct options:0 error:&v18]);
      id v13 = v18;

      if (v12)
      {
        *(void *)&__int128 v25 = 0LL;
        *((void *)&v25 + 1) = &v25;
        uint64_t v26 = 0x2020000000LL;
        id v27 = [v12 count];
        *(void *)&__int128 buf = _NSConcreteStackBlock;
        *((void *)&buf + 1) = 3221225472LL;
        id v20 = sub_1002264D0;
        id v21 = &unk_1003ED6A0;
        uint64_t v22 = v8;
        id v14 = v12;
        id v23 = v14;
        __int16 v24 = &v25;
        sub_1002259F8((uint64_t)&OBJC_CLASS___ODRAssetPackValidationMaintenanceTask, v14, &buf);
        if (*(void *)(*((void *)&v25 + 1) + 24LL))
        {

          _Block_object_dispose(&v25, 8);
        }

        else
        {
          unsigned int v17 = sub_100225AE4( (uint64_t)&OBJC_CLASS___ODRAssetPackValidationMaintenanceTask,  v10,  @"empty directory");

          _Block_object_dispose(&v25, 8);
          if (v17) {
            --*(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL);
          }
        }
      }

      else
      {
        uint64_t v15 = ASDLogHandleForCategory(19LL);
        id v16 = (os_log_s *)objc_claimAutoreleasedReturnValue(v15);
        if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
        {
          LODWORD(v25) = 138543362;
          *(void *)((char *)&v25 + 4) = v13;
          _os_log_error_impl( (void *)&_mh_execute_header,  v16,  OS_LOG_TYPE_ERROR,  "Correctness checking the on-disk asset packs failed.  Error: %{public}@",  (uint8_t *)&v25,  0xCu);
        }
      }
    }

    else
    {
    }
  }
}

void sub_100226248( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
}

BOOL sub_100226268(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_100187E34(v3, *(void **)(a1 + 32));
  uint64_t v5 = objc_claimAutoreleasedReturnValue(v4);
  if (v5)
  {
    uint64_t v6 = (void *)v5;
    BOOL v7 = 0LL;
  }

  else
  {
    *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = 0;
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) lastPathComponent]);
    id v9 = (void *)objc_claimAutoreleasedReturnValue([v8 stringByDeletingPathExtension]);

    uint64_t v10 = ASDLogHandleForCategory(19LL);
    unsigned int v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      int v21 = 138543362;
      uint64_t v22 = v9;
      _os_log_impl( (void *)&_mh_execute_header,  v11,  OS_LOG_TYPE_INFO,  "Asset Pack Name: %{public}@",  (uint8_t *)&v21,  0xCu);
    }

    id v12 = sub_100187D90(v3, (uint64_t)v9);
    uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue(v12);
    uint64_t v13 = ASDLogHandleForCategory(19LL);
    id v14 = (os_log_s *)objc_claimAutoreleasedReturnValue(v13);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v15 = *(void **)(a1 + 32);
      int v21 = 138543362;
      uint64_t v22 = v15;
      _os_log_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEFAULT,  "Asset pack at %{public}@ has no entry in the database, checking to see if it matches any entry",  (uint8_t *)&v21,  0xCu);
    }

    if (v6)
    {
      unsigned int v16 = sub_1001F8338(v6);
      uint64_t v17 = ASDLogHandleForCategory(19LL);
      id v18 = (os_log_s *)objc_claimAutoreleasedReturnValue(v17);
      id v19 = v18;
      if (v16)
      {
        if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
        {
          int v21 = 138543362;
          uint64_t v22 = v9;
          _os_log_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_DEFAULT,  "Entry for asset pack at %{public}@ found and has been updated in the database",  (uint8_t *)&v21,  0xCu);
        }

        sub_1001F7DBC(v6, *(void **)(a1 + 32));
        *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = 1;
      }

      else
      {
        if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
        {
          int v21 = 138543362;
          uint64_t v22 = v9;
          _os_log_error_impl( (void *)&_mh_execute_header,  v19,  OS_LOG_TYPE_ERROR,  "No entry found for asset pack %{public}@, it has been deleted",  (uint8_t *)&v21,  0xCu);
        }
      }

      BOOL v7 = sub_1001C5884(v3, v6);
    }

    else
    {
      BOOL v7 = 0LL;
    }
  }

  return v7;
}

void sub_1002264D0(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = (void *)objc_claimAutoreleasedReturnValue([v3 pathExtension]);
  unsigned int v5 = [v4 isEqualToString:@"plist"];
  uint64_t v6 = ASDLogHandleForCategory(19LL);
  BOOL v7 = (os_log_s *)objc_claimAutoreleasedReturnValue(v6);
  BOOL v8 = os_log_type_enabled(v7, OS_LOG_TYPE_INFO);
  if (!v5)
  {
    if (v8)
    {
      LODWORD(buf) = 138543362;
      *(void *)((char *)&buf + 4) = v3;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_INFO,  "Examining asset pack at URL: %{public}@",  (uint8_t *)&buf,  0xCu);
    }

    uint64_t v18 = a1[4];
    id v19 = v3;
    id v20 = v19;
    if (v18)
    {
      uint64_t v24 = 0LL;
      __int128 v25 = &v24;
      uint64_t v26 = 0x2020000000LL;
      char v27 = 1;
      id v21 = sub_1001B53D0((uint64_t)&OBJC_CLASS___ODRDatabaseStore);
      uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue(v21);
      *(void *)&__int128 buf = _NSConcreteStackBlock;
      *((void *)&buf + 1) = 3221225472LL;
      uint64_t v29 = sub_100226268;
      id v30 = &unk_1003EB6B8;
      id v23 = v20;
      id v31 = v23;
      uint64_t v32 = &v24;
      [v22 modifyUsingTransaction:&buf];

      LODWORD(v22) = *((_BYTE *)v25 + 24) == 0;
      _Block_object_dispose(&v24, 8);

      if (!(_DWORD)v22) {
        goto LABEL_16;
      }
    }

    else
    {
    }

    uint64_t v17 = @"asset pack";
    goto LABEL_14;
  }

  if (v8)
  {
    LODWORD(buf) = 138543362;
    *(void *)((char *)&buf + 4) = v3;
    _os_log_impl( (void *)&_mh_execute_header,  v7,  OS_LOG_TYPE_INFO,  "Examining metadata at URL: %{public}@",  (uint8_t *)&buf,  0xCu);
  }

  uint64_t v10 = a1[4];
  id v9 = (void *)a1[5];
  id v11 = v3;
  id v12 = v9;
  uint64_t v13 = v12;
  if (!v10)
  {

LABEL_8:
    uint64_t v17 = @"metadata";
LABEL_14:
    goto LABEL_16;
  }

  __int128 v25 = &v24;
  uint64_t v26 = 0x2020000000LL;
  char v27 = 0;
  id v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "lastPathComponent", 0));
  uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue([v14 stringByDeletingPathExtension]);

  if (v15)
  {
    *(void *)&__int128 buf = _NSConcreteStackBlock;
    *((void *)&buf + 1) = 3221225472LL;
    uint64_t v29 = sub_1002267F0;
    id v30 = &unk_1003ED6C8;
    uint64_t v32 = &v24;
    id v31 = v15;
    [v13 enumerateObjectsUsingBlock:&buf];
  }

  BOOL v16 = *((_BYTE *)v25 + 24) == 0;

  _Block_object_dispose(&v24, 8);
  if (v16) {
    goto LABEL_8;
  }
LABEL_16:
}

void sub_1002267CC( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1002267F0(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  id v11 = a2;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v11 pathExtension]);
  unsigned __int8 v7 = [v6 isEqualToString:@"plist"];

  BOOL v8 = v11;
  if ((v7 & 1) == 0)
  {
    id v9 = (void *)objc_claimAutoreleasedReturnValue([v11 lastPathComponent]);
    uint64_t v10 = (void *)objc_claimAutoreleasedReturnValue([v9 stringByDeletingPathExtension]);

    if (v10) {
      *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = [v10 isEqualToString:*(void *)(a1 + 32)];
    }
    *a4 = *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL);

    BOOL v8 = v11;
  }
}

id sub_1002269B4(os_unfair_lock_s *a1, void *a2)
{
  uint64_t v2 = (uint64_t)a1;
  if (a1)
  {
    id v3 = a1 + 4;
    id v4 = a2;
    os_unfair_lock_lock((os_unfair_lock_t)(v2 + 16));
    uint64_t v2 = objc_claimAutoreleasedReturnValue([*(id *)(v2 + 8) objectForKeyedSubscript:v4]);

    os_unfair_lock_unlock(v3);
  }

  return (id)v2;
}

void sub_100226A14(uint64_t a1, void *a2, void *a3)
{
  if (a1)
  {
    unsigned int v5 = (os_unfair_lock_s *)(a1 + 16);
    id v6 = a3;
    id v7 = a2;
    os_unfair_lock_lock(v5);
    [*(id *)(a1 + 8) setObject:v7 forKeyedSubscript:v6];

    os_unfair_lock_unlock(v5);
  }

void sub_100226A94(void *a1, uint64_t a2, void *a3)
{
  id v10 = a3;
  if (a1)
  {
    id v5 = sub_1002FE18C((uint64_t)&OBJC_CLASS___AppInstallPredicates, a2);
    id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
    id v7 = (void *)objc_claimAutoreleasedReturnValue([a1 connection]);
    id v8 = sub_10024C1D0((uint64_t)&OBJC_CLASS___AppInstallEntity, v7, v6);
    id v9 = (void *)objc_claimAutoreleasedReturnValue(v8);

    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472LL;
    void v11[2] = sub_100226B78;
    v11[3] = &unk_1003EB478;
    void v11[4] = a1;
    id v12 = v10;
    [v9 enumeratePersistentIDsUsingBlock:v11];
  }
}

void sub_100226B78(uint64_t a1, uint64_t a2)
{
  id v4 = objc_alloc(&OBJC_CLASS___AppInstallEntity);
  id v5 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) connection]);
  id v6 = -[SQLiteEntity initWithPersistentID:onConnection:](v4, "initWithPersistentID:onConnection:", a2, v5);

  -[SQLiteEntity setValue:forProperty:](v6, "setValue:forProperty:", &off_10040C7C0, @"bootstrapped");
  unint64_t v7 = (unint64_t)sub_1001E2698(v6, (uint64_t)@"IFNULL(app_install.priority, 0)");
  uint64_t v8 = ASDLogHandleForCategory(2LL);
  id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v8);
  BOOL v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);
  if ((v7 & 0x8000000000000000LL) != 0)
  {
    if (v10)
    {
      uint64_t v18 = sub_10021B614(v6);
      id v17 = (id)objc_claimAutoreleasedReturnValue(v18);
      int v19 = 138412290;
      id v20 = v17;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "[%@] Reset bootstrap phase, ready for next attempt",  (uint8_t *)&v19,  0xCu);
LABEL_10:
    }
  }

  else
  {
    if (v10)
    {
      id v11 = sub_10021B614(v6);
      id v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
      uint64_t v13 = *(void *)(a1 + 40);
      int v19 = 138412546;
      id v20 = v12;
      __int16 v21 = 2114;
      uint64_t v22 = v13;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  OS_LOG_TYPE_DEFAULT,  "[%@] Failing installation with bootstrap error: %{public}@",  (uint8_t *)&v19,  0x16u);
    }

    id v14 = sub_10021BD0C(v6, *(void **)(a1 + 40));
    id v9 = (os_log_s *)objc_claimAutoreleasedReturnValue(v14);
    if (v9)
    {
      id Property = *(id *)(a1 + 32);
      if (Property) {
        id Property = objc_getProperty(Property, v15, 24LL, 1);
      }
      id v17 = Property;
      sub_1001EB714((uint64_t)v17, v9);
      goto LABEL_10;
    }
  }
}

void sub_100226D4C(void *a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  if (a1)
  {
    id v6 = objc_alloc(&OBJC_CLASS___SQLiteQueryDescriptor);
    uint64_t v8 = objc_opt_class(&OBJC_CLASS___AppInstallEntity, v7);
    uint64_t v10 = objc_opt_class(&OBJC_CLASS___AppInstall, v9);
    id v11 = sub_10024BAF8(v6, v8, v10);
    id v12 = sub_1002FD6E4((uint64_t)&OBJC_CLASS___AppInstallPredicates);
    uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
    v30[0] = v13;
    id v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](&OBJC_CLASS___NSNumber, "numberWithInteger:", a2));
    uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToValue:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToValue:",  @"source_type",  v14));
    v30[1] = v15;
    BOOL v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v30, 2LL));
    uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v16));
    if (v11) {
      objc_setProperty_nonatomic_copy(v11, v17, v18, 56LL);
    }

    v29[0] = @"priority";
    v29[1] = @"order_index";
    id v20 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v29, 2LL));
    if (v11) {
      objc_setProperty_nonatomic_copy(v11, v19, v20, 48LL);
    }

    v28[0] = @"DESC";
    v28[1] = @"ASC";
    uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v28, 2LL));
    if (v11) {
      objc_setProperty_nonatomic_copy(v11, v21, v22, 40LL);
    }

    id v23 = objc_alloc(&OBJC_CLASS___SQLiteQuery);
    uint64_t v24 = (void *)objc_claimAutoreleasedReturnValue([a1 connection]);
    id v25 = -[SQLiteQuery initOnConnection:descriptor:](v23, "initOnConnection:descriptor:", v24, v11);

    v26[0] = _NSConcreteStackBlock;
    v26[1] = 3221225472LL;
    void v26[2] = sub_100226FDC;
    v26[3] = &unk_1003ED738;
    void v26[4] = a1;
    id v27 = v5;
    [v25 enumerateMemoryEntitiesUsingBlock:v26];
  }
}

void sub_100226FDC(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  id v10 = a2;
  if ((*(unsigned int (**)(void))(*(void *)(a1 + 40) + 16LL))())
  {
    id v6 = objc_alloc(&OBJC_CLASS___AppInstallEntity);
    id v7 = [v10 databaseID];
    uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue([*(id *)(a1 + 32) connection]);
    uint64_t v9 = -[SQLiteEntity initWithPersistentID:onConnection:](v6, "initWithPersistentID:onConnection:", v7, v8);

    -[SQLiteEntity setValue:forProperty:](v9, "setValue:forProperty:", &off_10040C7D8, @"bootstrapped");
  }

  else
  {
    *a4 = 1;
  }
}

id sub_100227098(void *a1, unint64_t a2, unint64_t a3)
{
  if (!a1) {
    return 0LL;
  }
  id v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](&OBJC_CLASS___NSMutableArray, "array"));
  id v6 = (void *)objc_claimAutoreleasedReturnValue([a1 connection]);
  id v7 = sub_10022729C((uint64_t)&OBJC_CLASS___AppSchedulerDatabaseTransaction, v6);
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(v7);

  uint64_t v9 = (void *)objc_claimAutoreleasedReturnValue([v8 objectForKeyedSubscript:@"COUNT(1)"]);
  id v10 = (char *)[v9 unsignedIntegerValue];

  if ((unint64_t)v10 > a2)
  {
    __int16 v21 = v8;
    id v11 = (void *)objc_claimAutoreleasedReturnValue([a1 connection]);
    id v12 = sub_100227440((uint64_t)&OBJC_CLASS___AppSchedulerDatabaseTransaction, v11);
    uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue(v12);

    __int128 v25 = 0u;
    __int128 v26 = 0u;
    __int128 v23 = 0u;
    __int128 v24 = 0u;
    id v14 = v13;
    id v15 = [v14 countByEnumeratingWithState:&v23 objects:v27 count:16];
    if (v15)
    {
      id v16 = v15;
      uint64_t v17 = *(void *)v24;
LABEL_5:
      uint64_t v18 = 0LL;
      while (1)
      {
        if (*(void *)v24 != v17) {
          objc_enumerationMutation(v14);
        }
        int v19 = *(void **)(*((void *)&v23 + 1) + 8 * v18);
        if (((unint64_t)sub_1001E2698(v19, (uint64_t)@"priority") & 0x8000000000000000LL) != 0)
        {
          sub_1001B47BC((id *)a1, [v19 databaseID], 10, a3);
          --v10;
          [v5 addObject:v19];
        }

        if (v16 == (id)++v18)
        {
          id v16 = [v14 countByEnumeratingWithState:&v23 objects:v27 count:16];
          if (v16) {
            goto LABEL_5;
          }
          break;
        }
      }
    }

    uint64_t v8 = v21;
  }

  return v5;
}

id sub_10022729C(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_self(a1);
  uint64_t v12 = 0LL;
  uint64_t v13 = &v12;
  uint64_t v14 = 0x3032000000LL;
  id v15 = sub_1002281E0;
  id v16 = sub_1002281F0;
  id v17 = 0LL;
  v18[0] = @"COUNT(1)";
  v18[1] = @"MAX(app_install.priority)";
  void v18[2] = @"MIN(app_install.priority)";
  id v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v18, 3LL));
  id v5 = sub_1002FD344((uint64_t)&OBJC_CLASS___AppInstallPredicates);
  id v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  id v7 = sub_10024C1D0((uint64_t)&OBJC_CLASS___AppInstallEntity, v3, v6);
  uint64_t v8 = (void *)objc_claimAutoreleasedReturnValue(v7);

  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472LL;
  void v11[2] = sub_1002281F8;
  v11[3] = &unk_1003ED788;
  void v11[4] = &v12;
  [v8 enumeratePersistentIDsAndProperties:v4 usingBlock:v11];
  id v9 = (id)v13[5];

  _Block_object_dispose(&v12, 8);
  return v9;
}

void sub_10022741C( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

NSMutableArray *sub_100227440(uint64_t a1, void *a2)
{
  id v24 = a2;
  objc_opt_self(a1);
  __int128 v25 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
  v31[0] = @"bundle_id";
  v31[1] = @"external_id";
  v31[2] = @"item_id";
  v31[3] = @"log_code";
  void v31[4] = @"phase";
  v31[5] = @"priority";
  id v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v31, 6LL));
  id v4 = objc_alloc(&OBJC_CLASS___SQLiteQueryDescriptor);
  uint64_t v6 = objc_opt_class(&OBJC_CLASS___AppInstallEntity, v5);
  uint64_t v8 = objc_opt_class(&OBJC_CLASS___AppInstall, v7);
  id v9 = sub_10024BAF8(v4, v6, v8);
  id v10 = sub_1002FD344((uint64_t)&OBJC_CLASS___AppInstallPredicates);
  id v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
  v30[0] = v11;
  uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:value:comparisonType:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:value:comparisonType:",  @"phase",  &off_10040C7F0,  3LL));
  v30[1] = v12;
  uint64_t v13 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:value:comparisonType:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:value:comparisonType:",  @"restore_type",  &off_10040C7D8,  2LL));
  void v30[2] = v13;
  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v30, 3LL));
  id v16 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteCompoundPredicate predicateMatchingAllPredicates:]( &OBJC_CLASS___SQLiteCompoundPredicate,  "predicateMatchingAllPredicates:",  v14));
  if (v9) {
    objc_setProperty_nonatomic_copy(v9, v15, v16, 56LL);
  }

  v29[0] = @"priority";
  v29[1] = @"phase";
  void v29[2] = @"order_index";
  uint64_t v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v29, 3LL));
  if (v9) {
    objc_setProperty_nonatomic_copy(v9, v17, v18, 48LL);
  }

  v28[0] = @"ASC";
  v28[1] = @"ASC";
  void v28[2] = @"DESC";
  id v20 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v28, 3LL));
  if (v9) {
    objc_setProperty_nonatomic_copy(v9, v19, v20, 40LL);
  }

  id v21 = -[SQLiteQuery initOnConnection:descriptor:]( objc_alloc(&OBJC_CLASS___SQLiteQuery),  "initOnConnection:descriptor:",  v24,  v9);
  v26[0] = _NSConcreteStackBlock;
  v26[1] = 3221225472LL;
  void v26[2] = sub_10022820C;
  v26[3] = &unk_1003ED7B0;
  uint64_t v22 = v25;
  id v27 = v22;
  [v21 enumerateMemoryEntitiesWithProperties:v3 usingBlock:v26];

  return v22;
}

AppSchedulerResult *sub_10022773C(AppSchedulerResult *a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  if (a1)
  {
    uint64_t v6 = objc_alloc_init(&OBJC_CLASS___NSMutableArray);
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(-[AppSchedulerResult connection](a1, "connection"));
    id v8 = sub_10022729C((uint64_t)&OBJC_CLASS___AppSchedulerDatabaseTransaction, v7);
    id v9 = (void *)objc_claimAutoreleasedReturnValue(v8);

    uint64_t v62 = 0LL;
    id v63 = &v62;
    uint64_t v64 = 0x2020000000LL;
    id v10 = (void *)objc_claimAutoreleasedReturnValue([v9 objectForKeyedSubscript:@"COUNT(1)"]);
    id v11 = [v10 unsignedIntegerValue];

    id v65 = v11;
    uint64_t v58 = 0LL;
    uint64_t v59 = &v58;
    uint64_t v60 = 0x2020000000LL;
    unint64_t v61 = 0x8000000000000000LL;
    uint64_t v54 = 0LL;
    id v55 = &v54;
    uint64_t v56 = 0x2020000000LL;
    unint64_t v57 = 0x8000000000000000LL;
    if (v9 && v63[3])
    {
      uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue([v9 objectForKeyedSubscript:@"MAX(app_install.priority)"]);
      id v13 = [v12 integerValue];
      v59[3] = (uint64_t)v13;

      uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue([v9 objectForKeyedSubscript:@"MIN(app_install.priority)"]);
      id v15 = [v14 integerValue];
      void v55[3] = (uint64_t)v15;
    }

    uint64_t v16 = ASDLogHandleForCategory(14LL);
    id v17 = (os_log_s *)objc_claimAutoreleasedReturnValue(v16);
    BOOL v18 = os_log_type_enabled(v17, OS_LOG_TYPE_DEBUG);

    if (v18)
    {
      uint64_t v19 = ASDLogHandleForCategory(14LL);
      id v20 = (os_log_s *)objc_claimAutoreleasedReturnValue(v19);
      if (os_log_type_enabled(v20, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v44 = v63[3];
        uint64_t v45 = v55[3];
        uint64_t v46 = v59[3];
        *(_DWORD *)__int128 buf = 134218752;
        uint64_t v69 = v44;
        __int16 v70 = 2048;
        uint64_t v71 = a2;
        __int16 v72 = 2048;
        uint64_t v73 = v45;
        __int16 v74 = 2048;
        uint64_t v75 = v46;
        _os_log_debug_impl( (void *)&_mh_execute_header,  v20,  OS_LOG_TYPE_DEBUG,  "Active installations: %lu/%lu Lowest Priority: %ld Highest Priority: %ld",  buf,  0x2Au);
      }
    }

    id v21 = objc_alloc(&OBJC_CLASS___SQLiteQueryDescriptor);
    uint64_t v23 = objc_opt_class(&OBJC_CLASS___AppInstallEntity, v22);
    uint64_t v25 = objc_opt_class(&OBJC_CLASS___AppInstall, v24);
    __int128 v26 = sub_10024BAF8(v21, v23, v25);
    id v28 = (void *)objc_claimAutoreleasedReturnValue( +[SQLiteComparisonPredicate predicateWithProperty:equalToLongLong:]( &OBJC_CLASS___SQLiteComparisonPredicate,  "predicateWithProperty:equalToLongLong:",  @"IFNULL(app_install.phase, 10)",  10LL));
    if (v26) {
      objc_setProperty_nonatomic_copy(v26, v27, v28, 56LL);
    }

    v67[0] = @"priority";
    v67[1] = @"order_index";
    id v30 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v67, 2LL));
    if (v26) {
      objc_setProperty_nonatomic_copy(v26, v29, v30, 48LL);
    }

    v66[0] = @"DESC";
    v66[1] = @"ASC";
    uint64_t v32 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](&OBJC_CLASS___NSArray, "arrayWithObjects:count:", v66, 2LL));
    if (v26) {
      objc_setProperty_nonatomic_copy(v26, v31, v32, 40LL);
    }

    id v33 = objc_alloc(&OBJC_CLASS___SQLiteQuery);
    id v34 = (void *)objc_claimAutoreleasedReturnValue(-[AppSchedulerResult connection](a1, "connection"));
    id v35 = -[SQLiteQuery initOnConnection:descriptor:](v33, "initOnConnection:descriptor:", v34, v26);

    v47[0] = _NSConcreteStackBlock;
    v47[1] = 3221225472LL;
    void v47[2] = sub_100227C5C;
    v47[3] = &unk_1003ED760;
    v47[4] = a1;
    __int16 v50 = &v62;
    uint64_t v53 = a2;
    id v49 = v5;
    id v51 = &v58;
    uint64_t v36 = v6;
    uint64_t v48 = v36;
    uint64_t v52 = &v54;
    [v35 enumerateMemoryEntitiesUsingBlock:v47];
    uint64_t v37 = ASDLogHandleForCategory(30LL);
    __int16 v38 = (os_log_s *)objc_claimAutoreleasedReturnValue(v37);
    if (os_log_type_enabled(v38, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v39 = v63[3];
      *(_DWORD *)__int128 buf = 134217984;
      uint64_t v69 = v39;
      _os_log_impl( (void *)&_mh_execute_header,  v38,  OS_LOG_TYPE_DEFAULT,  "Polling complete with %lu active installation(s)",  buf,  0xCu);
    }

    __int16 v40 = objc_opt_new(&OBJC_CLASS___AppSchedulerResult);
    a1 = v40;
    if (v40) {
      v40->_activeInstallsCount = v63[3];
    }
    id v42 = -[NSMutableArray copy](v36, "copy");
    if (a1) {
      objc_setProperty_atomic(a1, v41, v42, 16LL);
    }

    _Block_object_dispose(&v54, 8);
    _Block_object_dispose(&v58, 8);
    _Block_object_dispose(&v62, 8);
  }

  return a1;
}

void sub_100227C10( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, char a21, uint64_t a22, uint64_t a23, uint64_t a24, char a25, uint64_t a26, uint64_t a27, uint64_t a28, char a29)
{
}

void sub_100227C5C(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  id v6 = a2;
  uint64_t v7 = *(void **)(a1 + 32);
  id v8 = v6;
  id v9 = v8;
  if (!v7) {
    goto LABEL_31;
  }
  id v10 = sub_1001E25D0(v8, (uint64_t)@"bootstrapped");
  id v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
  uint64_t v12 = v11;
  if (sub_1001E2698(v9, (uint64_t)@"restore_type") || sub_1001E2698(v9, (uint64_t)@"source_type") == (id)1)
  {

LABEL_31:
    goto LABEL_35;
  }

  id v33 = objc_alloc(&OBJC_CLASS___AppInstallEntity);
  id v34 = [v9 databaseID];
  id v35 = (void *)objc_claimAutoreleasedReturnValue([v7 connection]);
  uint64_t v36 = -[SQLiteEntity initWithPersistentID:onConnection:](v33, "initWithPersistentID:onConnection:", v34, v35);

  -[SQLiteEntity setValue:forProperty:](v36, "setValue:forProperty:", &off_10040C808, @"bootstrapped");
  uint64_t v37 = ASDLogHandleForCategory(30LL);
  __int16 v38 = (os_log_s *)objc_claimAutoreleasedReturnValue(v37);
  if (os_log_type_enabled(v38, OS_LOG_TYPE_FAULT))
  {
    uint64_t v46 = sub_100323C54(v9);
    uint64_t v47 = (void *)objc_claimAutoreleasedReturnValue(v46);
    *(_DWORD *)id v51 = 138412290;
    *(void *)&uint8_t v51[4] = v47;
    _os_log_fault_impl( (void *)&_mh_execute_header,  v38,  OS_LOG_TYPE_FAULT,  "[%@] Correctness check failed - this installation doesn't appear need bootstrap, starting anyway",  v51,  0xCu);
  }

LABEL_4:
  if (*(void *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL) < *(void *)(a1 + 80))
  {
    uint64_t v13 = ASDLogHandleForCategory(30LL);
    uint64_t v14 = (os_log_s *)objc_claimAutoreleasedReturnValue(v13);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v44 = sub_100323C54(v9);
      uint64_t v45 = (void *)objc_claimAutoreleasedReturnValue(v44);
      *(_DWORD *)id v51 = 138543362;
      *(void *)&uint8_t v51[4] = v45;
      _os_log_debug_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEBUG,  "No contention, starting: %{public}@",  v51,  0xCu);
    }

    goto LABEL_8;
  }

  if ((uint64_t)sub_100323DF4(v9) <= *(void *)(*(void *)(*(void *)(a1 + 72) + 8LL) + 24LL))
  {
LABEL_34:
    *a4 = 1;
    goto LABEL_35;
  }

  if (*(void *)(*(void *)(*(void *)(a1 + 56) + 8LL) + 24LL) != *(void *)(a1 + 80)) {
    goto LABEL_33;
  }
  BOOL v18 = *(id **)(a1 + 32);
  id v19 = sub_100323DF4(v9);
  if (!v18) {
    goto LABEL_33;
  }
  uint64_t v20 = (uint64_t)v19;
  id v21 = v18[4];
  if (!v21)
  {
    uint64_t v22 = (void *)objc_claimAutoreleasedReturnValue([v18 connection]);
    uint64_t v23 = sub_100227440((uint64_t)&OBJC_CLASS___AppSchedulerDatabaseTransaction, v22);
    uint64_t v24 = objc_claimAutoreleasedReturnValue(v23);
    id v25 = v18[4];
    void v18[4] = (id)v24;

    id v26 = v18[4];
    *(void *)id v51 = _NSConcreteStackBlock;
    *(void *)&v51[8] = 3221225472LL;
    *(void *)&v51[16] = sub_100228218;
    uint64_t v52 = &unk_1003ED7D8;
    uint64_t v53 = v18;
    id v27 = (void *)objc_claimAutoreleasedReturnValue([v26 indexesOfObjectsPassingTest:v51]);
    if ([v27 count]) {
      [v18[4] removeObjectsAtIndexes:v27];
    }

    id v21 = v18[4];
  }

  id v28 = (void *)objc_claimAutoreleasedReturnValue([v21 firstObject]);
  uint64_t v29 = (uint64_t)sub_100323DF4(v28) >= v20 ? 0LL : v28;
  id v30 = v29;

  if (!v30)
  {
LABEL_33:
    if (((unint64_t)sub_100323DF4(v9) & 0x8000000000000000LL) == 0
      && (*(void *)(*(void *)(*(void *)(a1 + 64) + 8LL) + 24LL) & 0x8000000000000000LL) != 0)
    {
      uint64_t v39 = ASDLogHandleForCategory(30LL);
      uint64_t v14 = (os_log_s *)objc_claimAutoreleasedReturnValue(v39);
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEBUG))
      {
        id v40 = sub_100323DF4(v9);
        uint64_t v41 = *(void *)(*(void *)(*(void *)(a1 + 64) + 8LL) + 24LL);
        id v42 = sub_100323C54(v9);
        uint64_t v43 = (void *)objc_claimAutoreleasedReturnValue(v42);
        *(_DWORD *)id v51 = 134218498;
        *(void *)&uint8_t v51[4] = v40;
        *(_WORD *)&v51[12] = 2048;
        *(void *)&v51[14] = v41;
        *(_WORD *)&v51[22] = 2114;
        uint64_t v52 = v43;
        _os_log_debug_impl( (void *)&_mh_execute_header,  v14,  OS_LOG_TYPE_DEBUG,  "Prioritized (%ld >= %ld), starting: %{public}@",  v51,  0x20u);
      }

uint64_t sub_1002281E0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0LL;
  return result;
}

void sub_1002281F0(uint64_t a1)
{
}

void sub_1002281F8(uint64_t a1, int a2, id obj)
{
}

id sub_10022820C(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) addObject:a2];
}

BOOL sub_100228218(uint64_t a1, void *a2)
{
  uint64_t v2 = *(id **)(a1 + 32);
  id v3 = a2;
  id v4 = v3;
  if (v2)
  {
    id v5 = (void *)objc_claimAutoreleasedReturnValue( +[NSNumber numberWithLongLong:]( NSNumber,  "numberWithLongLong:",  [v3 databaseID]));
    id v6 = sub_10031DE10((uint64_t)&OBJC_CLASS___AppInstallInfo, v5);
    uint64_t v7 = (void *)objc_claimAutoreleasedReturnValue(v6);

    BOOL v8 = v7 == 0LL;
    if (!v7)
    {
      uint64_t v9 = ASDLogHandleForCategory(2LL);
      id v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_FAULT))
      {
        uint64_t v14 = sub_100323C54(v4);
        uint64_t v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
        int v16 = 138412290;
        uint64_t v17 = v15;
        _os_log_fault_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_FAULT,  "[%@] Encountered invalid installation which was not really running",  (uint8_t *)&v16,  0xCu);
      }

      uint64_t v11 = ASDErrorWithDescription( ASDErrorDomain,  809LL,  @"Encountered invalid installation which was not really running");
      uint64_t v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
      sub_1001B1ABC(v2, (uint64_t)[v4 databaseID], v12, 0);
    }
  }

  else
  {
    BOOL v8 = 1LL;
  }

  return v8;
}

id *sub_1002283B8(id *a1, void *a2)
{
  id v4 = a2;
  if (a1)
  {
    v7.receiver = a1;
    v7.super_class = (Class)&OBJC_CLASS___SQLiteTransporter;
    id v5 = (id *)objc_msgSendSuper2(&v7, "init");
    a1 = v5;
    if (v5) {
      objc_storeStrong(v5 + 2, a2);
    }
  }

  return a1;
}

uint64_t sub_10022842C(uint64_t a1)
{
  uint64_t v1 = a1;
  if (!a1) {
    return v1;
  }
  id v2 = *(id *)(a1 + 16);
  objc_opt_self(&OBJC_CLASS___SQLiteTransporter);
  os_unfair_lock_lock((os_unfair_lock_t)&unk_1004623B8);
  CFPropertyListRef v3 = sub_1002FA9CC((uint64_t)&OBJC_CLASS___AppDefaultsManager);
  id v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  id v5 = [v4 mutableCopy];

  if (v5
    && (id v6 = (void *)objc_claimAutoreleasedReturnValue([v5 objectForKeyedSubscript:@"knownPaths"]),
        id v7 = [v6 mutableCopy],
        v6,
        v7))
  {
    BOOL v8 = (void *)objc_claimAutoreleasedReturnValue([v7 indexesOfObjectsPassingTest:&stru_1003ED818]);
    if ([v8 count])
    {
      [v7 removeObjectsAtIndexes:v8];
      [v5 setObject:v7 forKeyedSubscript:@"knownPaths"];
      sub_1002FA904((uint64_t)&OBJC_CLASS___AppDefaultsManager, v5);
    }

    unsigned int v9 = [v7 containsObject:v2];

    os_unfair_lock_unlock((os_unfair_lock_t)&unk_1004623B8);
    if (v9)
    {
      uint64_t v10 = ASDLogHandleForCategory(35LL);
      uint64_t v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v10);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      {
        uint64_t v12 = *(void *)(v1 + 16);
        int v30 = 138543362;
        uint64_t v31 = v12;
        uint64_t v13 = "Refusing to begin transportation for known path: %{public}@";
LABEL_25:
        _os_log_error_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, v13, (uint8_t *)&v30, 0xCu);
        goto LABEL_15;
      }

      goto LABEL_15;
    }
  }

  else
  {
    os_unfair_lock_unlock((os_unfair_lock_t)&unk_1004623B8);
  }

  uint64_t v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager"));
  unsigned __int8 v15 = [v14 fileExistsAtPath:*(void *)(v1 + 16)];

  if ((v15 & 1) == 0)
  {
    uint64_t v22 = ASDLogHandleForCategory(35LL);
    uint64_t v11 = (os_log_s *)objc_claimAutoreleasedReturnValue(v22);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
    {
      uint64_t v29 = *(void *)(v1 + 16);
      int v30 = 138543362;
      uint64_t v31 = v29;
      uint64_t v13 = "Refusing to begin transportation as path does not exist: %{public}@";
      goto LABEL_25;
    }

uint64_t sub_1002287AC(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    uint64_t v2 = *(void *)(result + 8);
    if (v2 && sub_1001D63E0(v2) && sub_10025270C(*(void **)(v1 + 16), 0LL))
    {
      id v3 = *(id *)(v1 + 16);
      objc_opt_self(&OBJC_CLASS___SQLiteTransporter);
      os_unfair_lock_lock((os_unfair_lock_t)&unk_1004623B8);
      CFPropertyListRef v4 = sub_1002FA9CC((uint64_t)&OBJC_CLASS___AppDefaultsManager);
      id v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
      id v6 = [v5 mutableCopy];

      if (v6)
      {
        id v7 = (void *)objc_claimAutoreleasedReturnValue([v6 objectForKeyedSubscript:@"knownPaths"]);
        id v8 = [v7 mutableCopy];

        if (v8)
        {
          [v8 removeObject:v3];
          [v6 setObject:v8 forKeyedSubscript:@"knownPaths"];
          sub_1002FA904((uint64_t)&OBJC_CLASS___AppDefaultsManager, v6);
        }
      }

      os_unfair_lock_unlock((os_unfair_lock_t)&unk_1004623B8);

      return 1LL;
    }

    else
    {
      uint64_t v9 = ASDLogHandleForCategory(35LL);
      uint64_t v10 = (os_log_s *)objc_claimAutoreleasedReturnValue(v9);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      {
        uint64_t v11 = *(void *)(v1 + 16);
        int v12 = 138543362;
        uint64_t v13 = v11;
        _os_log_error_impl( (void *)&_mh_execute_header,  v10,  OS_LOG_TYPE_ERROR,  "Remembering path after ending transportation: %{public}@",  (uint8_t *)&v12,  0xCu);
      }

      return 0LL;
    }
  }

  return result;
}