uint64_t sub_10006C820(uint64_t result, unsigned int a2)
{
  uint64_t v2;
  unsigned int v4;
  uint64_t v5;
  unsigned int v6;
  char v7;
  if (!result || (v2 = result, (result & 7) != 0))
  {
LABEL_37:
    __break(0x5516u);
    goto LABEL_38;
  }

  if (a2 < 8)
  {
    if (a2 > 5) {
      return 4LL;
    }
    result = *(void *)(result + 1192);
    if (result && (result & 7) == 0)
    {
      v4 = (*(uint64_t (**)(uint64_t))(*(void *)result + 416LL))(result);
      switch(a2)
      {
        case 0u:
          result = sub_10004783C();
          if (!result || (result & 7) != 0) {
            goto LABEL_37;
          }
          result = (*(uint64_t (**)(uint64_t))(*(void *)result + 448LL))(result);
          if (v4 > 3) {
            goto LABEL_38;
          }
          if (v4)
          {
            sub_100064620(v2, 7u, 1);
            v5 = v2;
            v6 = 7;
            goto LABEL_34;
          }

          return 0LL;
        case 1u:
          result = sub_10004783C();
          if (!result || (result & 7) != 0) {
            goto LABEL_37;
          }
          result = (*(uint64_t (**)(uint64_t))(*(void *)result + 448LL))(result);
          if (v4 > 3) {
            goto LABEL_38;
          }
          if (v4 != 1)
          {
            sub_100064620(v2, 8u, 1);
            v5 = v2;
            v6 = 8;
            goto LABEL_34;
          }

          return 0LL;
        case 2u:
          result = sub_10004783C();
          if (!result || (result & 7) != 0) {
            goto LABEL_37;
          }
          result = (*(uint64_t (**)(uint64_t))(*(void *)result + 448LL))(result);
          if (v4 > 3) {
            goto LABEL_38;
          }
          if (v4 == 1)
          {
            sub_100064620(v2, 9u, 1);
            v5 = v2;
            v6 = 9;
            goto LABEL_34;
          }

          return 0LL;
        case 3u:
        case 4u:
        case 5u:
          result = sub_10004783C();
          if (!result || (result & 7) != 0) {
            goto LABEL_37;
          }
          result = (*(uint64_t (**)(uint64_t))(*(void *)result + 448LL))(result);
          if (v4 > 3) {
            goto LABEL_38;
          }
          if (!v4) {
            return 0LL;
          }
          if (a2 == 4)
          {
            v5 = v2;
            v6 = 21;
          }

          else
          {
            if (a2 != 3)
            {
              sub_100064620(v2, 0x14u, 0);
              v5 = v2;
              v6 = 21;
LABEL_34:
              v7 = 0;
              goto LABEL_35;
            }

            v5 = v2;
            v6 = 20;
          }

          v7 = 1;
LABEL_35:
          sub_100064620(v5, v6, v7);
          return 0LL;
        default:
          return 0LL;
      }
    }

    goto LABEL_37;
  }

uint64_t sub_10006CA04(uint64_t result, void *a2)
{
  if (result && (result & 7) == 0) {
    return sub_10006E1B0(result, a2) ^ 1;
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_10006CA2C(uint64_t result, int a2, unsigned int a3, int a4, uint64_t a5)
{
  if (!result) {
    goto LABEL_21;
  }
  uint64_t v5 = result;
  if ((result & 7) != 0) {
    goto LABEL_21;
  }
  result = sub_100042AC4();
  if (!result) {
    goto LABEL_21;
  }
  uint64_t v10 = result;
  if ((result & 7) != 0) {
    goto LABEL_21;
  }
  unsigned int v11 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 104LL))(result, a5);
  int v12 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v10 + 120LL))(v10, a5);
  result = sub_100061274();
  if (!result || (result & 7) != 0) {
    goto LABEL_21;
  }
  if (sub_10008D184(result, a5) != 56)
  {
    result = *(void *)(v5 + 8);
    if (result)
    {
      if ((result & 7) == 0)
      {
        result = sub_1000579D4(result);
        if (result)
        {
          if ((result & 7) == 0)
          {
            sub_10006C3D4(result, 1LL);
            goto LABEL_13;
          }
        }
      }
    }

uint64_t sub_10006CBA0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  if (!result) {
    goto LABEL_15;
  }
  uint64_t v4 = result;
  if ((result & 7) != 0) {
    goto LABEL_15;
  }
  if ((_DWORD)a2 == 3) {
    return 4LL;
  }
  if (!a3)
  {
    sub_10006D144(result, 7u);
    goto LABEL_12;
  }

  result = *(void *)(result + 1192);
  if (!result || (result & 7) != 0)
  {
LABEL_15:
    __break(0x5516u);
    goto LABEL_16;
  }

  result = (*(uint64_t (**)(uint64_t))(*(void *)result + 152LL))(result);
  if (result < 4)
  {
    sub_10006D06C(v4, 7u, a4, result, 0);
LABEL_12:
    result = *(void *)(v4 + 1192);
    if (result && (result & 7) == 0)
    {
      (*(void (**)(uint64_t, uint64_t))(*(void *)result + 144LL))(result, a2);
      return 0LL;
    }

    goto LABEL_15;
  }

uint64_t sub_10006CC6C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  if (!result) {
    goto LABEL_15;
  }
  uint64_t v4 = result;
  if ((result & 7) != 0) {
    goto LABEL_15;
  }
  if ((_DWORD)a2 == 3) {
    return 4LL;
  }
  if (!a3)
  {
    sub_10006D144(result, 8u);
    goto LABEL_12;
  }

  result = *(void *)(result + 1192);
  if (!result || (result & 7) != 0)
  {
LABEL_15:
    __break(0x5516u);
    goto LABEL_16;
  }

  result = (*(uint64_t (**)(uint64_t))(*(void *)result + 136LL))(result);
  if (result < 4)
  {
    sub_10006D06C(v4, 8u, a4, result, 0);
LABEL_12:
    result = *(void *)(v4 + 1192);
    if (result && (result & 7) == 0)
    {
      (*(void (**)(uint64_t, uint64_t))(*(void *)result + 128LL))(result, a2);
      return 0LL;
    }

    goto LABEL_15;
  }

uint64_t sub_10006CD38(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!result
    || (uint64_t v4 = result, (result & 7) != 0)
    || (result = sub_10004783C()) == 0
    || (uint64_t v7 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    int v8 = (*(__int16 (**)(uint64_t))(*(void *)result + 392LL))(result);
    sub_10006D06C(v4, 0xBu, a4, v8, 0);
    if (v8 != (_DWORD)a2) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)v7 + 384LL))(v7, a2);
    }
    return 0LL;
  }

  return result;
}

uint64_t sub_10006CDDC(uint64_t result, unsigned int a2, int a3, uint64_t a4)
{
  if (!result) {
    goto LABEL_23;
  }
  uint64_t v4 = result;
  if ((result & 7) != 0) {
    goto LABEL_23;
  }
  if (a2 >= 0x100) {
    goto LABEL_24;
  }
  if (a2 - 253 > 0xFFFFFF06) {
    return 4LL;
  }
  unsigned int v5 = a2 - 2 <= 1 ? 1 : a2;
  uint64_t v6 = a2 - 253 >= 2 ? v5 : 255LL;
  result = *(void *)(result + 1192);
  if (!result || (result & 7) != 0)
  {
LABEL_23:
    __break(0x5516u);
    goto LABEL_24;
  }

  result = (*(uint64_t (**)(uint64_t))(*(void *)result + 184LL))(result);
  unsigned int v9 = result;
  if (a3)
  {
    if (result <= 0xFF)
    {
      sub_10006D06C(v4, 0xEu, a4, result, 0);
LABEL_18:
      if (v9 == (_DWORD)v6) {
        return 0LL;
      }
      result = *(void *)(v4 + 1192);
      if (result && (result & 7) == 0)
      {
        (*(void (**)(uint64_t, uint64_t))(*(void *)result + 176LL))(result, v6);
        return 0LL;
      }

      goto LABEL_23;
    }
  }

  else
  {
    result = sub_10006D144(v4, 0xEu);
    if (v9 <= 0xFF) {
      goto LABEL_18;
    }
  }

uint64_t sub_10006CEE4(uint64_t result, int a2, unsigned int a3, unsigned int a4, int a5, uint64_t a6)
{
  if (!result) {
    goto LABEL_24;
  }
  uint64_t v6 = result;
  if ((result & 7) != 0) {
    goto LABEL_24;
  }
  result = sub_100042AC4();
  if (!result) {
    goto LABEL_24;
  }
  uint64_t v12 = result;
  if ((result & 7) != 0) {
    goto LABEL_24;
  }
  unsigned int v13 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 104LL))(result, a6);
  int v14 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v12 + 120LL))(v12, a6);
  result = sub_100061274();
  if (!result || (result & 7) != 0) {
    goto LABEL_24;
  }
  if (sub_10008D184(result, a6) != 56)
  {
    result = *(void *)(v6 + 8);
    if (result)
    {
      if ((result & 7) == 0)
      {
        result = sub_1000579D4(result);
        if (result)
        {
          if ((result & 7) == 0)
          {
            sub_10006C3D4(result, 1LL);
            goto LABEL_13;
          }
        }
      }
    }

uint64_t sub_10006D06C(uint64_t result, unsigned int a2, uint64_t a3, int a4, int a5)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_17;
  }
  if (a2 + 32 >= 0x40) {
    goto LABEL_18;
  }
  uint64_t v5 = 22LL;
  if (a2 >= 0x14) {
    goto LABEL_19;
  }
  if (!__CFADD__(result + 1800, 24LL * a2))
  {
    uint64_t v6 = result + 1800 + 24LL * a2;
    if ((v6 & 7) == 0)
    {
      if (*(unsigned __int8 *)v6 <= 1u)
      {
        if (*(_BYTE *)v6) {
          return 0LL;
        }
        uint64_t v7 = result + 24LL * a2 + 1808;
        if ((v7 & 7) == 0)
        {
          *(void *)uint64_t v7 = a3;
          uint64_t v8 = result + 24LL * a2 + 1816;
          if ((v8 & 7) == 0)
          {
            *(_DWORD *)uint64_t v8 = a4;
            uint64_t v9 = result + 24LL * a2 + 1820;
            if ((v9 & 3) == 0)
            {
              uint64_t v5 = 0LL;
              *(_DWORD *)uint64_t v9 = a5;
              *(_BYTE *)uint64_t v6 = 1;
              return v5;
            }
          }
        }

        goto LABEL_17;
      }

uint64_t sub_10006D144(uint64_t result, unsigned int a2)
{
  if (!result || (result & 7) != 0)
  {
LABEL_13:
    __break(0x5516u);
    goto LABEL_14;
  }

  if (a2 + 32 >= 0x40)
  {
LABEL_14:
    __break(0x550Au);
LABEL_15:
    __break(0x5512u);
    goto LABEL_16;
  }

  if (a2 >= 0x14) {
    goto LABEL_15;
  }
  if (!__CFADD__(result + 1800, 24LL * a2))
  {
    uint64_t v2 = result + 1800 + 24LL * a2;
    if ((v2 & 7) == 0)
    {
      uint64_t v3 = result + 24LL * a2 + 1808;
      if ((v3 & 7) == 0)
      {
        *(void *)uint64_t v3 = 0LL;
        uint64_t v4 = result + 24LL * a2 + 1816;
        if ((v4 & 7) == 0)
        {
          *(_DWORD *)uint64_t v4 = 0;
          uint64_t v5 = result + 24LL * a2 + 1820;
          if ((v5 & 3) == 0)
          {
            result = 0LL;
            *(_DWORD *)uint64_t v5 = 0;
            *(_BYTE *)uint64_t v2 = 0;
            return result;
          }
        }
      }
    }

    goto LABEL_13;
  }

uint64_t sub_10006D1FC(uint64_t a1, int a2)
{
  if (!a1 || (a1 & 7) != 0 || (uint64_t v4 = sub_100061274()) == 0 || (v4 & 7) != 0)
  {
LABEL_34:
    __break(0x5516u);
LABEL_35:
    __break(0x5513u);
LABEL_36:
    __break(0x5507u);
LABEL_37:
    __break(0x550Au);
  }

  uint64_t v5 = sub_10008E168(v4, *(void *)(a1 + 8));
  unint64_t v6 = 0LL;
  unint64_t v7 = 0LL;
  uint64_t v8 = (int *)(a1 + 1212);
  uint64_t v20 = (a1 + 1212) & 3;
  do
  {
    uint64_t result = 0LL;
    if (v5)
    {
      int v10 = 1 << v7;
      if (((1 << v7) & a2) != 0)
      {
        if (((a1 + 1208) & 7) != 0) {
          goto LABEL_34;
        }
        if ((*(_DWORD *)(a1 + 1208) & v10) == 0)
        {
          if (v20) {
            goto LABEL_34;
          }
          uint64_t result = 0LL;
          int v17 = *v8 | v10;
LABEL_30:
          *uint64_t v8 = v17;
          goto LABEL_31;
        }

        memset(v21, 170, 21);
        BYTE1(v21[0]) = v7;
        int v11 = *(unsigned __int8 *)(a1 + v6 + 1297);
        memcpy((char *)v21 + 2, *(const void **)(a1 + v6 + 1288), *(unsigned __int8 *)(a1 + v6 + 1297));
        if (v11 == 255) {
          goto LABEL_36;
        }
        LOBYTE(v21[0]) = v11 + 1;
        if ((v5 & 7) != 0) {
          goto LABEL_34;
        }
        int v12 = (*(uint64_t (**)(uint64_t, void))(*(void *)v5 + 16LL))(v5, 0LL);
        uint64_t v13 = sub_1000ABB10(v5, 0, 3LL, 9, v12, (char *)v21 + 1, LOBYTE(v21[0]));
        uint64_t v14 = v13;
        uint64_t v15 = *(void *)(a1 + 8);
        if (v15)
        {
          if (!v13 || (v13 & 7) != 0) {
            goto LABEL_34;
          }
          uint64_t v16 = *(void *)(v13 + 8);
          if (v16) {
            goto LABEL_28;
          }
        }

        else
        {
          uint64_t v16 = v13 & 7;
        }

        if (!v13) {
          goto LABEL_34;
        }
        if (v16) {
          goto LABEL_34;
        }
        uint64_t v18 = *(void *)(v13 + 8);
        if (!v18 || (v18 & 7) != 0) {
          goto LABEL_34;
        }
        v19 = (const char *)(*(uint64_t (**)(uint64_t))(*(void *)v18 + 208LL))(v18);
        sub_1000CEAEC( 0,  4,  "%s:%d handle=%hhx devPort=%s lingo=%d cmd=%d\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoDisplayRemote.cpp",  2292,  v15,  v19,  *(_DWORD *)(v14 + 64),  *(unsigned __int16 *)(v14 + 126));
        uint64_t v15 = *(void *)(a1 + 8);
LABEL_28:
        uint64_t result = sub_1000AB4C4(v15, v14, 0, 1u);
        if (v20) {
          goto LABEL_34;
        }
        int v17 = *v8 & ~v10;
        goto LABEL_30;
      }
    }

uint64_t sub_10006D48C(uint64_t a1, int a2)
{
  if (!a1 || (a1 & 7) != 0 || (uint64_t v4 = sub_100061274()) == 0 || (v4 & 7) != 0)
  {
LABEL_39:
    __break(0x5516u);
LABEL_40:
    __break(0x550Au);
LABEL_41:
    __break(0x5514u);
LABEL_42:
    __break(0x5513u);
LABEL_43:
    __break(0x5512u);
LABEL_44:
    __break(0x5507u);
  }

  uint64_t result = sub_10008E168(v4, *(void *)(a1 + 8));
  uint64_t v26 = 0x1000000004LL;
  if (result)
  {
    uint64_t v6 = result;
    uint64_t v7 = 0LL;
    uint64_t result = 0LL;
    uint64_t v8 = (int *)(a1 + 1212);
    uint64_t v9 = (a1 + 1212) & 3;
    for (char i = 1; ; char i = 0)
    {
      char v11 = i;
      uint64_t v12 = *((unsigned int *)&v26 + v7);
      int v13 = 1 << v12;
      if (((1 << v12) & a2) != 0) {
        break;
      }
LABEL_37:
      uint64_t v7 = 1LL;
      if ((v11 & 1) == 0) {
        return result;
      }
    }

    if (((a1 + 1208) & 7) != 0) {
      goto LABEL_39;
    }
    if ((*(_DWORD *)(a1 + 1208) & v13) == 0)
    {
      if (v9) {
        goto LABEL_39;
      }
      int v22 = *v8 | v13;
LABEL_36:
      *uint64_t v8 = v22;
      goto LABEL_37;
    }

    memset(v25, 170, 21);
    BYTE1(v25[0]) = v12;
    if ((a1 & 7) != 0) {
      goto LABEL_39;
    }
    uint64_t v14 = (const void **)(a1 + 24LL * v12 + 1288);
    uint64_t v15 = a1 + 24LL * v12 + 1296;
    if ((v15 & 7) != 0) {
      goto LABEL_39;
    }
    int v16 = *(unsigned __int8 *)v15;
    memcpy((char *)v25 + 2, *v14, *(unsigned __int8 *)v15);
    if (v16 == 255) {
      goto LABEL_44;
    }
    LOBYTE(v25[0]) = v16 + 1;
    if ((v6 & 7) != 0) {
      goto LABEL_39;
    }
    int v17 = (*(uint64_t (**)(uint64_t, void))(*(void *)v6 + 16LL))(v6, 0LL);
    uint64_t v18 = sub_1000ABB10(v6, 0, 3LL, 9, v17, (char *)v25 + 1, LOBYTE(v25[0]));
    uint64_t v19 = v18;
    uint64_t v20 = *(void *)(a1 + 8);
    if (v20)
    {
      if (!v18 || (v18 & 7) != 0) {
        goto LABEL_39;
      }
      uint64_t v21 = *(void *)(v18 + 8);
      if (v21) {
        goto LABEL_34;
      }
    }

    else
    {
      uint64_t v21 = v18 & 7;
    }

    if (!v18) {
      goto LABEL_39;
    }
    if (v21) {
      goto LABEL_39;
    }
    uint64_t v23 = *(void *)(v18 + 8);
    if (!v23 || (v23 & 7) != 0) {
      goto LABEL_39;
    }
    v24 = (const char *)(*(uint64_t (**)(uint64_t))(*(void *)v23 + 208LL))(v23);
    sub_1000CEAEC( 0,  4,  "%s:%d handle=%hhx devPort=%s lingo=%d cmd=%d\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoDisplayRemote.cpp",  2388,  v20,  v24,  *(_DWORD *)(v19 + 64),  *(unsigned __int16 *)(v19 + 126));
    uint64_t v20 = *(void *)(a1 + 8);
LABEL_34:
    uint64_t result = sub_1000AB4C4(v20, v19, 0, 1u);
    if (v9) {
      goto LABEL_39;
    }
    int v22 = *v8 & ~v13;
    goto LABEL_36;
  }

  return result;
}

void *sub_10006D778(void *result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    *uint64_t result = off_100105F38;
    return sub_1000CE94C(result);
  }

  return result;
}

uint64_t sub_10006D798(uint64_t result, unsigned int a2, int a3)
{
  if (!result || (uint64_t v3 = result, (result & 7) != 0))
  {
    __break(0x5516u);
LABEL_18:
    __break(0x5507u);
    goto LABEL_19;
  }

  uint64_t result = sub_1000679F8(result);
  unsigned int v6 = *(_DWORD *)(v3 + 1736);
  if (v6 == 255 || a3 != 0)
  {
    unsigned int v8 = *(_DWORD *)(v3 + 1740);
    BOOL v9 = a2 >= v8;
    unsigned int v6 = a2 - v8;
    if (v6 == 0 || !v9)
    {
LABEL_15:
      if (a2 < 0x100) {
        return a2;
      }
      goto LABEL_18;
    }

    a2 = v6;
    if (v6 < 0x100) {
      return a2;
    }
    __break(0x5518u);
  }

  if (!v6) {
    goto LABEL_15;
  }
  if (((255LL * a2) & 0xFFFFFFFF00000000LL) != 0)
  {
LABEL_19:
    __break(0x550Cu);
    goto LABEL_20;
  }

  if (!__CFADD__(255 * a2, v6 >> 1))
  {
    a2 = (255 * a2 + (v6 >> 1)) / v6;
    goto LABEL_15;
  }

uint64_t sub_10006D840(uint64_t result, unsigned int a2, int a3)
{
  if (!result) {
    goto LABEL_18;
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_18;
  }
  uint64_t result = sub_1000679F8(result);
  unsigned int v6 = *(_DWORD *)(v3 + 1736);
  if (v6 != 255 && a3 == 0)
  {
    unint64_t v10 = a2 * (unint64_t)v6;
    if ((v10 & 0xFFFFFFFF00000000LL) != 0)
    {
LABEL_19:
      __break(0x550Cu);
      goto LABEL_20;
    }

    BOOL v11 = __CFADD__((_DWORD)v10, 127);
    unsigned int v12 = v10 + 127;
    if (v11)
    {
LABEL_20:
      __break(0x5500u);
      return result;
    }

    unsigned int v9 = v12 / 0xFF;
  }

  else
  {
    unsigned int v8 = *(_DWORD *)(v3 + 1740);
    if (v8 > a2) {
      unsigned int v8 = 0;
    }
    unsigned int v9 = v8 + a2;
  }

  uint64_t result = sub_100042AC4();
  if (!result || (result & 7) != 0)
  {
LABEL_18:
    __break(0x5516u);
    goto LABEL_19;
  }

  LODWORD(result) = (*(uint64_t (**)(uint64_t))(*(void *)result + 136LL))(result);
  else {
    return v9;
  }
}

uint64_t sub_10006D8F8(uint64_t result)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_42;
  }
  uint64_t result = *(void *)(result + 1192);
  if (!result || (result & 7) != 0) {
    goto LABEL_42;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 400LL))(result);
  uint64_t v2 = result;
  uint64_t v17 = result;
  if (!result)
  {
LABEL_41:
    sub_100064D0C(&v17);
    return v2;
  }

  if ((result & 7) != 0) {
    goto LABEL_42;
  }
  if (!(*(unsigned int (**)(uint64_t))(*(void *)result + 16LL))(result))
  {
    uint64_t v2 = 0LL;
    goto LABEL_41;
  }

  int v3 = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 264LL))(v2);
  int v4 = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 368LL))(v2);
  int v5 = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 232LL))(v2);
  int v6 = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 256LL))(v2);
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 272LL))(v2);
  unint64_t v16 = 0xAAAAAAAAAAAAAAAALL;
  int v8 = (*(uint64_t (**)(uint64_t, unint64_t *))(*(void *)v2 + 224LL))(v2, &v16);
  __p = 0LL;
  uint64_t v14 = 0LL;
  uint64_t v15 = 0LL;
  int v9 = v3 | 2;
  if (!v4) {
    int v9 = v3;
  }
  if (v5) {
    v9 |= 4u;
  }
  if (v6) {
    v9 |= 8u;
  }
  if (v7) {
    v9 |= 0x10u;
  }
  if (v8) {
    unsigned int v10 = v9 | 0x20;
  }
  else {
    unsigned int v10 = v9;
  }
  (*(void (**)(uint64_t, void **))(*(void *)v2 + 72LL))(v2, &__p);
  uint64_t v11 = HIBYTE(v15);
  if (v15 < 0) {
    uint64_t v11 = v14;
  }
  if (v11) {
    v10 |= 0x40u;
  }
  uint64_t result = sub_1000438B8();
  if (result && (result & 7) == 0)
  {
    else {
      int v12 = 128;
    }
    v10 |= v12;
LABEL_33:
    else {
      uint64_t v2 = v10;
    }
    if (SHIBYTE(v15) < 0) {
      operator delete(__p);
    }
    goto LABEL_41;
  }

uint64_t sub_10006DB18(uint64_t result, int a2)
{
  if (!result || a2 != 9)
  {
    __break(0x5518u);
LABEL_10:
    __break(0x5516u);
    goto LABEL_11;
  }

  uint64_t v2 = result;
  uint64_t result = sub_1000438B8();
  if (!result || (result & 7) != 0) {
    goto LABEL_10;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 144LL))(result);
  *(_BYTE *)uint64_t v2 = 3;
  if (v2 == -1)
  {
LABEL_11:
    __break(0x5500u);
    return result;
  }

  uint64_t v3 = 0x100000000000000LL;
  if ((_DWORD)result) {
    uint64_t v3 = 0x500000000000000LL;
  }
  *(void *)(v2 + 1) = v3;
  return 0LL;
}

void sub_10006DB90(uint64_t a1, int a2)
{
  if (a1 && (a1 & 7) == 0)
  {
    if (!*(_BYTE *)(a1 + 1776)) {
      return;
    }
    pthread_mutex_lock(&stru_10011B660);
    int v4 = 0;
    if (a2 <= 0x80000)
    {
      switch(a2)
      {
        case 327689:
          int v4 = 4096;
          break;
        case 327706:
          int v4 = 2048;
          break;
        case 458753:
          int v5 = *(_DWORD *)(a1 + 1788);
          BOOL v6 = __CFADD__(v5, 1);
          int v7 = v5 + 1;
          if (v6) {
            goto LABEL_55;
          }
          *(_DWORD *)(a1 + 1788) = v7;
          int v4 = 65552;
          break;
      }
    }

    else
    {
      switch(a2)
      {
        case 524289:
        case 524290:
        case 524305:
          int v4 = 256;
          break;
        case 524291:
          *(_DWORD *)(a1 + 1784) |= 0x40000u;
          goto LABEL_21;
        case 524292:
        case 524304:
          *(_DWORD *)(a1 + 1784) |= 0x40000u;
LABEL_21:
          if ((((_BYTE)a1 - 80) & 7) != 0 || ((a1 + 1720) & 7) != 0) {
            goto LABEL_54;
          }
          uint64_t v8 = *(void *)(a1 + 1720);
          BOOL v6 = __CFADD__(v8, 4LL);
          int v9 = (_DWORD *)(v8 + 4);
          if (v6) {
            goto LABEL_55;
          }
          *v9 ^= 0x80000000;
          int v4 = 128;
          break;
        case 524293:
          int v4 = 0x4000;
          break;
        case 524294:
          int v4 = 64;
          break;
        case 524295:
          int v4 = 0x2000;
          break;
        case 524296:
        case 524303:
        case 524306:
        case 524310:
          break;
        case 524297:
          int v4 = 32769;
          break;
        case 524298:
        case 524311:
          int v4 = 131074;
          *(_DWORD *)(a1 + 1784) |= 2u;
          break;
        case 524299:
          *(_DWORD *)(a1 + 1784) |= 0x40000u;
          if ((((_BYTE)a1 - 80) & 7) != 0 || ((a1 + 1720) & 7) != 0) {
            goto LABEL_54;
          }
          uint64_t v10 = *(void *)(a1 + 1720);
          BOOL v6 = __CFADD__(v10, 4LL);
          uint64_t v11 = (_DWORD *)(v10 + 4);
          if (v6) {
            goto LABEL_55;
          }
          *v11 ^= 0x2000000u;
          int v4 = 2;
          break;
        case 524300:
        case 524308:
          int v4 = 4;
          break;
        case 524301:
          *(_DWORD *)(a1 + 1784) |= 8u;
          int v4 = 8;
          break;
        case 524302:
          *(_DWORD *)(a1 + 1784) |= 0x20002u;
          goto LABEL_36;
        case 524307:
        case 524309:
LABEL_36:
          int v4 = 0x20000;
          break;
        case 524312:
          *(_DWORD *)(a1 + 1784) |= 0x40002u;
          if ((((_BYTE)a1 - 80) & 7) != 0 || ((a1 + 1720) & 7) != 0) {
            goto LABEL_54;
          }
          unint64_t v12 = *(void *)(a1 + 1720);
          int v13 = (_DWORD *)(v12 + 4);
          if (v12 >= 0xFFFFFFFFFFFFFFFCLL) {
            goto LABEL_55;
          }
          int v4 = 0;
          *v13 ^= 0x400u;
          break;
        default:
          if (a2 == 1048579) {
            int v4 = 32;
          }
          else {
            int v4 = 0;
          }
          break;
      }
    }

    dword_10011B658 |= v4;
    *(_DWORD *)(a1 + 1780) |= v4;
    pthread_mutex_unlock(&stru_10011B660);
    if (*(unsigned __int8 *)(a1 + 2748) > 1u)
    {
LABEL_53:
      __break(0x550Au);
    }

    else
    {
      if (*(_BYTE *)(a1 + 2748)) {
        return;
      }
      if ((((_BYTE)a1 - 72) & 7) == 0)
      {
        if ((*(_DWORD *)(a1 + 1780) & *(_DWORD *)(a1 + 1208)) == 0) {
          return;
        }
        *(_BYTE *)(a1 + 2748) = 1;
        sub_1000612C4(*(void *)(a1 + 8));
        if (!v14) {
          return;
        }
        sub_1000612C4(*(void *)(a1 + 8));
        if (v15 && (v15 & 7) == 0)
        {
          sub_10005EA88(v15, *(_DWORD *)(a1 + 2744));
          return;
        }
      }
    }
  }

uint64_t sub_10006DE98(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, void))(*(void *)result + 40LL))( result,  a2,  a3,  0LL,  0LL);
  }
  __break(0x5516u);
  return result;
}

void sub_10006DEBC(uint64_t a1, unsigned int a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_12;
  }
  pthread_mutex_lock(&stru_10011B660);
  BOOL v4 = a2 >> 1 == 524291;
  dword_10011B658 |= 32 * v4;
  *(_DWORD *)(a1 + 1780) |= 32 * v4;
  pthread_mutex_unlock(&stru_10011B660);
  if (*(unsigned __int8 *)(a1 + 2748) >= 2u)
  {
LABEL_13:
    __break(0x550Au);
    return;
  }

  if (*(_BYTE *)(a1 + 2748)) {
    return;
  }
  if ((((_BYTE)a1 - 72) & 7) != 0)
  {
LABEL_12:
    __break(0x5516u);
    goto LABEL_13;
  }

  if ((*(_DWORD *)(a1 + 1780) & *(_DWORD *)(a1 + 1208)) != 0)
  {
    *(_BYTE *)(a1 + 2748) = 1;
    sub_1000612C4(*(void *)(a1 + 8));
    if (v5)
    {
      sub_1000612C4(*(void *)(a1 + 8));
      if (v6 && (v6 & 7) == 0)
      {
        sub_10005EA88(v6, *(_DWORD *)(a1 + 2744));
        return;
      }

      goto LABEL_12;
    }
  }

void sub_10006DFA4(uint64_t a1, int a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_13;
  }
  if (a2)
  {
    *(void *)&__int128 v3 = 0xAAAAAAAAAAAAAAAALL;
    *((void *)&v3 + 1) = 0xAAAAAAAAAAAAAAAALL;
    v4[0] = v3;
    v4[1] = v3;
    unint64_t v5 = 0xAAAAAAAAAAAAAAAALL;
    memset(&__p, 0, sizeof(__p));
    if (*(_DWORD *)(a1 + 2764) != -1)
    {
      LODWORD(v4[0]) = *(_DWORD *)(a1 + 2764);
      sub_100069268(a1, (unsigned int *)v4);
      if (((a1 + 2832) & 7) == 0)
      {
        std::string::operator=((std::string *)(a1 + 2832), &__p);
        sub_1000690E8(a1, (unsigned int *)v4);
        if (((a1 + 2784) & 7) == 0)
        {
          std::string::operator=((std::string *)(a1 + 2784), &__p);
          sub_100069328(a1, (unsigned int *)v4);
          if (((a1 + 2856) & 7) == 0)
          {
            std::string::operator=((std::string *)(a1 + 2856), &__p);
            sub_1000691A8(a1, (unsigned int *)v4);
            if (((a1 + 2808) & 7) == 0)
            {
              std::string::operator=((std::string *)(a1 + 2808), &__p);
              sub_1000693E8(a1, (unsigned int *)v4);
              if (((a1 + 2880) & 7) == 0)
              {
                std::string::operator=((std::string *)(a1 + 2880), &__p);
                return;
              }
            }
          }
        }
      }

void sub_10006E0E4(uint64_t a1, uint64_t a2)
{
  if (!a1
    || (a1 & 7) != 0
    || (((_BYTE)a1 - 72) & 7) != 0
    || (*(_DWORD *)(a1 + 1208) = 0, *(_BYTE *)(a1 + 2748) = 0, sub_1000612C4(a2), !v3)
    || (v3 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    sub_10005EB3C(v3, *(_DWORD *)(a1 + 2744));
  }

void *sub_10006E13C(void *result, void *a2)
{
  if (result && (result & 7) == 0)
  {
    uint64_t v2 = *result - *a2;
    if (!__OFSUB__(*result, *a2))
    {
      *uint64_t result = v2;
      uint64_t v3 = result[1];
      uint64_t v4 = a2[1];
      BOOL v5 = __OFSUB__(v3, v4);
      uint64_t v6 = v3 - v4;
      if (!v5)
      {
        if ((v6 & 0x8000000000000000LL) == 0)
        {
LABEL_8:
          result[1] = v6;
          return result;
        }

        while (1)
        {
          BOOL v5 = __OFSUB__(v2--, 1LL);
          if (v5) {
            break;
          }
          *uint64_t result = v2;
          v6 += 1000000000LL;
          if (v6 - 1000000000 >= -1000000000) {
            goto LABEL_8;
          }
        }

        result[1] = v6;
      }
    }

    __break(0x5515u);
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_10006E1B0(uint64_t result, void *a2)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else if (*(void *)result >= *a2)
  {
    return *(void *)result <= *a2 && *(void *)(result + 8) <= a2[1];
  }

  else
  {
    return 1LL;
  }

  return result;
}

void sub_10006E1F8(void *a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    *a1 = off_100105F38;
    v1 = sub_1000CE94C(a1);
    operator delete(v1);
  }

void *sub_10006E228(void *result, void *a2)
{
  if (result && (result & 7) == 0)
  {
    uint64_t v2 = *result + *a2;
    if (!__OFADD__(*result, *a2))
    {
      *uint64_t result = v2;
      uint64_t v3 = result[1];
      uint64_t v4 = a2[1];
      BOOL v5 = __OFADD__(v3, v4);
      uint64_t v6 = v3 + v4;
      if (!v5)
      {
        if (v6 <= 999999999)
        {
LABEL_8:
          result[1] = v6;
          return result;
        }

        while (!__OFADD__(v2, 1LL))
        {
          *uint64_t result = v2 + 1;
          v6 -= 1000000000LL;
          ++v2;
          if (v6 + 1000000000 <= 1999999999) {
            goto LABEL_8;
          }
        }

        result[1] = v6;
      }
    }

    __break(0x5500u);
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_10006E2B0(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    if ((result & 7) != 0) {
      goto LABEL_8;
    }
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 280LL))(result);
    if ((result & 1) == 0)
    {
      uint64_t v2 = *(void *)(v1 + 32);
      if (v2)
      {
        if ((v2 & 7) == 0)
        {
          *(_BYTE *)(v2 + 57) = 1;
          return result;
        }

uint64_t sub_10006E308(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    if ((result & 7) != 0) {
      goto LABEL_8;
    }
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 280LL))(result);
    if ((result & 1) == 0)
    {
      uint64_t v2 = *(void *)(v1 + 32);
      if (v2)
      {
        if ((v2 & 7) == 0)
        {
          *(_BYTE *)(v2 + 57) = 0;
          return result;
        }

void sub_10006E35C(uint64_t a1, uint64_t a2)
{
  if (!a1) {
    goto LABEL_55;
  }
  if ((a1 & 7) != 0) {
    goto LABEL_55;
  }
  sub_10006107C(a1, a2, 0);
  *(void *)a1 = off_100105F90;
  if (((a1 + 1200) & 7) != 0) {
    goto LABEL_55;
  }
  sub_100009E64((void *)(a1 + 1200));
  *(_DWORD *)(a1 + 1524) = 2;
  if (((a1 + 1992) & 7) != 0) {
    goto LABEL_55;
  }
  sub_1000854F4((void *)(a1 + 1992));
  *(_BYTE *)(a1 + 2212) = 0;
  sub_100010C30((void *)(a1 + 2232));
  uint64_t v4 = (void *)(a1 + 2320);
  if (((a1 + 2320) & 7) != 0) {
    goto LABEL_55;
  }
  *uint64_t v4 = 0LL;
  *(void *)(a1 + 2328) = 0LL;
  *(void *)(a1 + 2336) = 0LL;
  BOOL v5 = (void *)(a1 + 2344);
  if (((a1 + 2344) & 7) != 0) {
    goto LABEL_55;
  }
  *BOOL v5 = 0LL;
  *(void *)(a1 + 2352) = 0LL;
  *(void *)(a1 + 2360) = 0LL;
  *(_DWORD *)(a1 + 2372) = 0;
  if (((a1 + 2376) & 7) != 0) {
    goto LABEL_55;
  }
  sub_100009E64((void *)(a1 + 2376));
  sub_1000BD7A8((pthread_mutex_t *)(a1 + 2256));
  *(_WORD *)(a1 + 1520) = 0;
  uint64_t v6 = sub_10002ACC4();
  if (!v6) {
    goto LABEL_55;
  }
  if ((v6 & 7) != 0) {
    goto LABEL_55;
  }
  *(_BYTE *)(a1 + 2368) = (*(uint64_t (**)(uint64_t, const char *))(*(void *)v6 + 360LL))( v6,  "_IapAllowNonClassZeroForVPort");
  uint64_t v7 = sub_10002ACC4();
  if (!v7) {
    goto LABEL_55;
  }
  if ((v7 & 7) != 0) {
    goto LABEL_55;
  }
  *(_BYTE *)(a1 + 2369) = (*(uint64_t (**)(uint64_t, const char *))(*(void *)v7 + 360LL))( v7,  "_IapAllowFakeAuthV1ForVPort");
  *(_BYTE *)(a1 + 2204) = 0;
  *(_DWORD *)(a1 + 2208) = -1;
  *(_WORD *)(a1 + 2214) = 0;
  *(_DWORD *)(a1 + 2200) = 0;
  *(void *)(a1 + 1272) = 0LL;
  if (!a2) {
    goto LABEL_55;
  }
  if ((a2 & 7) != 0) {
    goto LABEL_55;
  }
  uint64_t v8 = sub_10001864C(a2);
  *(_OWORD *)(a1 + 1408) = 0u;
  *(_OWORD *)(a1 + 1424) = 0u;
  *(void *)(a1 + 1440) = 0LL;
  pthread_mutex_init((pthread_mutex_t *)(a1 + 1280), 0LL);
  pthread_mutex_init((pthread_mutex_t *)(a1 + 1344), 0LL);
  pthread_mutex_init((pthread_mutex_t *)(a1 + 1448), 0LL);
  uint64_t v9 = sub_100061274();
  if (!v9) {
    goto LABEL_55;
  }
  if ((v9 & 7) != 0) {
    goto LABEL_55;
  }
  sub_10008C5A8(v9, 0, 19885, a2);
  uint64_t v10 = sub_100061274();
  if (!v10 || (v10 & 7) != 0) {
    goto LABEL_55;
  }
  *(_DWORD *)(a1 + 1516) = dword_10011D098;
  if (v8)
  {
    if ((v8 & 7) != 0) {
      goto LABEL_55;
    }
  }

  sub_1000612C4(a2);
  if (!v11) {
    goto LABEL_55;
  }
  uint64_t v12 = v11;
  if ((v11 & 7) != 0) {
    goto LABEL_55;
  }
  unsigned int v13 = sub_10005E878(v11, 5000, a2, 0);
  if (((a1 + 1980) & 3) != 0) {
    goto LABEL_55;
  }
  *(_DWORD *)(a1 + 1980) = v13;
  if (v13 == -1)
  {
    __break(0x5518u);
    goto LABEL_55;
  }

  sub_10005EB3C(v12, v13);
  sub_10006E778(a1, 0);
  *(void *)(a1 + 1272) = 0LL;
  sub_10006E9E8(a1);
  sub_10006EA98(a1, 0LL, 1, 1);
  sub_10006EBD4(a1, 0LL);
  if ((((_BYTE)a1 - 8) & 7) != 0) {
    goto LABEL_55;
  }
  *(_DWORD *)(a1 + 1528) = 0;
  if ((((_BYTE)a1 - 4) & 3) != 0) {
    goto LABEL_55;
  }
  *(_BYTE *)(a1 + 1532) = 0;
  if ((((_BYTE)a1 + 52) & 3) != 0) {
    goto LABEL_55;
  }
  *(_DWORD *)(a1 + 1588) = 0;
  if ((((_BYTE)a1 - 24) & 7) != 0) {
    goto LABEL_55;
  }
  *(_WORD *)(a1 + 1512) = 0;
  if ((((_DWORD)a1 + 1514) & 1) != 0) {
    goto LABEL_55;
  }
  *(_WORD *)(a1 + 1514) = 0;
  *(void *)(a1 + 1192) = 0LL;
  sub_10006EC68(a1 + 1992);
  if (*(char *)(a1 + 2343) < 0)
  {
    if (!*v4) {
      goto LABEL_55;
    }
    *(_BYTE *)*uint64_t v4 = 0;
    *(void *)(a1 + 2328) = 0LL;
  }

  else
  {
    *(_BYTE *)(a1 + 2320) = 0;
    *(_BYTE *)(a1 + 2343) = 0;
  }

  if (*(char *)(a1 + 2367) < 0)
  {
    if (!*v5) {
      goto LABEL_55;
    }
    *(_BYTE *)*BOOL v5 = 0;
    *(void *)(a1 + 2352) = 0LL;
  }

  else
  {
    *(_BYTE *)(a1 + 2344) = 0;
    *(_BYTE *)(a1 + 2367) = 0;
  }

  uint64_t v14 = *(void *)(a1 + 8);
  if (v14)
  {
    if ((v14 & 7) == 0)
    {
      *(void *)(v14 + 1992) = 0LL;
      uint64_t v15 = sub_10004E34C();
      if (v15)
      {
        if ((v15 & 7) == 0)
        {
          (*(void (**)(uint64_t, uint64_t))(*(void *)v15 + 16LL))(v15, a1);
          uint64_t v16 = sub_1000451B0();
          if (v16)
          {
            if ((v16 & 7) == 0)
            {
              (*(void (**)(uint64_t, uint64_t))(*(void *)v16 + 16LL))(v16, a1);
              uint64_t v17 = sub_10004783C();
              if (v17)
              {
                if ((v17 & 7) == 0)
                {
                  (*(void (**)(uint64_t, uint64_t))(*(void *)v17 + 16LL))(v17, a1);
                  uint64_t v18 = sub_1000472A8();
                  if (v18)
                  {
                    if ((v18 & 7) == 0)
                    {
                      (*(void (**)(uint64_t, uint64_t))(*(void *)v18 + 16LL))(v18, a1);
                      uint64_t v19 = sub_1000C7788();
                      if (v19)
                      {
                        if ((v19 & 7) == 0)
                        {
                          (*(void (**)(uint64_t, uint64_t))(*(void *)v19 + 16LL))(v19, a1);
                          uint64_t v20 = sub_10002CD78();
                          if (v20)
                          {
                            if ((v20 & 7) == 0)
                            {
                              (*(void (**)(uint64_t, uint64_t))(*(void *)v20 + 16LL))(v20, a1);
                              return;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }

void sub_10006E778(uint64_t a1, int a2)
{
  if (a1)
  {
    if ((a1 & 7) == 0)
    {
      char v3 = a1 + 56;
      if ((((_BYTE)a1 - 80) & 7) == 0)
      {
        *(_DWORD *)(a1 + 1968) = 0;
        if ((((_BYTE)a1 - 76) & 3) == 0)
        {
          *(_DWORD *)(a1 + 1972) = 0;
          if ((((_BYTE)a1 - 72) & 7) == 0)
          {
            *(_WORD *)(a1 + 1976) = 0;
            if ((((_DWORD)a1 + 1978) & 1) == 0)
            {
              *(_BYTE *)(a1 + 1978) = 0;
              if ((((_BYTE)a1 - 64) & 7) == 0)
              {
                *(_DWORD *)(a1 + 1984) = 0;
                sub_1000612C4(*(void *)(a1 + 8));
                if (v5)
                {
                  if ((v5 & 7) != 0 || ((a1 + 1980) & 3) != 0) {
                    goto LABEL_45;
                  }
                  sub_10005EB3C(v5, *(_DWORD *)(a1 + 1980));
                }

                if ((v3 & 7) == 0 && (((_DWORD)a1 + 1662) & 1) == 0)
                {
                  *(_WORD *)(a1 + 1662) = -1;
                  if ((((_BYTE)a1 + 0x80) & 7) == 0)
                  {
                    unint64_t v6 = 0LL;
                    *(_BYTE *)(a1 + 1664) = -1;
                    do
                    {
                      if (v6 > ~(a1 + 1666))
                      {
                        __break(0x5513u);
                        goto LABEL_45;
                      }

                      *(_WORD *)(a1 + v6 + 1666) = -1;
                      v6 += 2LL;
                    }

                    while (v6 != 30);
                    if ((((_BYTE)a1 + 120) & 7) == 0)
                    {
                      *(_WORD *)(a1 + 1656) = -1;
                      if ((((_DWORD)a1 + 1658) & 1) == 0)
                      {
                        *(_WORD *)(a1 + 1658) = -1;
                        if ((((_BYTE)a1 + 124) & 3) == 0)
                        {
                          *(_WORD *)(a1 + 1660) = -1;
                          *(_BYTE *)(a1 + 1592) = 0;
                          if ((((_BYTE)a1 - 96) & 7) == 0)
                          {
                            *(_BYTE *)(a1 + 1696) = 0;
                            if ((((_BYTE)a1 - 32) & 7) == 0)
                            {
                              *(_BYTE *)(a1 + 1760) = 0;
                              if ((((_BYTE)a1 + 32) & 7) == 0)
                              {
                                *(_BYTE *)(a1 + 1824) = 0;
                                if ((((_BYTE)a1 + 96) & 7) == 0)
                                {
                                  *(_BYTE *)(a1 + 1888) = 0;
                                  if ((((_BYTE)a1 - 96) & 7) == 0)
                                  {
                                    *(_DWORD *)(a1 + 1952) = 0;
                                    if ((((_BYTE)a1 - 92) & 3) == 0)
                                    {
                                      *(_DWORD *)(a1 + 1956) = 1;
                                      if ((((_BYTE)a1 - 84) & 3) == 0)
                                      {
                                        *(_BYTE *)(a1 + 1964) = 0;
                                        if ((((_BYTE)a1 - 88) & 7) == 0)
                                        {
                                          *(_DWORD *)(a1 + 1960) = 0;
                                          *(_BYTE *)(a1 + 1965) = 0;
                                          uint64_t v7 = *(char **)(a1 + 8);
                                          if (v7)
                                          {
                                            if (!(*(void *)(a1 + 8) & 7LL | v3 & 3))
                                            {
                                              sub_100057CB8(v7, (const void *)(a1 + 1592));
                                              uint64_t v8 = *(void *)(a1 + 8);
                                              if (v8)
                                              {
                                                if ((v8 & 7) == 0)
                                                {
                                                  uint64_t v9 = sub_10001864C(v8);
                                                  if (!v9) {
                                                    return;
                                                  }
                                                  uint64_t v10 = v9;
                                                  if ((v9 & 7) == 0)
                                                  {
                                                    (*(void (**)(uint64_t, uint64_t))(*(void *)v9 + 152LL))( v9,  1024LL);
                                                    if (!a2) {
                                                      return;
                                                    }
                                                    uint64_t v11 = *(void *)(a1 + 8);
                                                    if (v11)
                                                    {
                                                      if ((v11 & 7) == 0)
                                                      {
                                                        int v12 = sub_100057B7C(v11);
                                                        if (v12 == -1) {
                                                          int v13 = 16;
                                                        }
                                                        else {
                                                          int v13 = v12;
                                                        }
                                                        sub_100061730(a1, v10, 7u, v13);
                                                        return;
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }

void sub_10006E9E8(uint64_t a1)
{
  if (!a1
    || (a1 & 7) != 0
    || (uint64_t v7 = 0xAAAAAAAAAAAAAAAALL, v1 = a1 + 1200, ((a1 + 1200) & 7) != 0)
    || (uint64_t v7 = *(void *)(a1 + 1200), v2 = a1 + 1208, ((a1 + 1208) & 7) != 0))
  {
LABEL_14:
    __break(0x5516u);
  }

  else
  {
    while (v7 != v2)
    {
      char v3 = sub_100003154(&v7);
      if (!v3) {
        goto LABEL_14;
      }
      uint64_t v4 = v3 + 1;
      uint64_t v5 = *v4;
      if (*v4)
      {
        if ((v5 & 7) != 0) {
          goto LABEL_14;
        }
        unint64_t v6 = (void *)sub_10008305C(v5);
        operator delete(v6);
      }

      sub_100008A4C(&v7);
    }

    sub_100008B2C(v1);
  }

uint64_t sub_10006EA98(uint64_t result, uint64_t a2, int a3, int a4)
{
  if (result)
  {
    uint64_t v4 = result;
    if ((result & 7) == 0)
    {
      uint64_t v8 = (_OWORD *)(result + 1408);
      uint64_t result = pthread_mutex_lock((pthread_mutex_t *)(result + 1448));
      if ((v8 & 7) == 0)
      {
        if (*(void *)v8 && a3)
        {
          *(void *)(v4 + 1440) = 0LL;
          *uint64_t v8 = 0u;
          *(_OWORD *)(v4 + 1424) = 0u;
        }

        pthread_mutex_unlock((pthread_mutex_t *)(v4 + 1448));
        __int16 v9 = 20;
        __int16 v9 = 23;
        if (!a2) {
          return sub_10006EF28(v4, 0, 0);
        }
        uint64_t result = sub_100061274();
        if (result)
        {
          if ((result & 7) == 0)
          {
            uint64_t result = sub_100054A7C(result, a2);
            if ((_DWORD)result == -2)
            {
              if (((v4 + 1416) & 7) == 0)
              {
                *(_DWORD *)(v4 + 1416) = -2;
                return sub_10006EF28(v4, 0, 0);
              }
            }

            else
            {
              if (!a4) {
                return sub_10006EF28(v4, 0, 0);
              }
              uint64_t result = sub_100061274();
              if (result && (result & 7) == 0)
              {
                sub_100054874(result, a2, 0);
                return sub_10006EF28(v4, 0, 0);
              }
            }
          }
        }
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_10006EBD4(uint64_t result, uint64_t a2)
{
  if (!result
    || (result & 7) != 0
    || (*(_BYTE *)(result + 1533) = 0, *(_DWORD *)(result + 1536) = 25, (((_BYTE)result + 4) & 3) != 0)
    || (*(_DWORD *)(result + 1540) = 100, (((_BYTE)result + 8) & 7) != 0)
    || (*(void *)(result + 1544) = a2, (((_BYTE)result + 16) & 7) != 0)
    || (*(_DWORD *)(result + 1552) = 0, (((_BYTE)result + 20) & 3) != 0)
    || (*(_DWORD *)(result + 1556) = 0, (((_BYTE)result + 24) & 7) != 0)
    || (*(void *)(result + 1560) = *(void *)(result + 8), ((result + 1584) & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    *(_DWORD *)(result + 1584) = 0;
  }

  return result;
}

uint64_t sub_10006EC68(uint64_t result)
{
  if (!result
    || (uint64_t v1 = result, (result & 7) != 0)
    || (sub_100085BC4(result), sub_100085CD4(v1), uint64_t result = v1 + 168, ((v1 + 168) & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t result = sub_100085DA4(result);
    *(_OWORD *)(v1 + 192) = xmmword_1000DEAF0;
    *(void *)(v1 + 64) = 0LL;
    *(void *)(v1 + 120) = 0LL;
  }

  return result;
}

void sub_10006ECC8(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    sub_10006E35C(a1, a2);
  }
}

void sub_10006ECDC(uint64_t a1)
{
  if (!a1) {
    goto LABEL_33;
  }
  if ((a1 & 7) != 0) {
    goto LABEL_33;
  }
  *(void *)a1 = off_100105F90;
  uint64_t v2 = sub_10004E34C();
  if (!v2) {
    goto LABEL_33;
  }
  if ((v2 & 7) != 0) {
    goto LABEL_33;
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)v2 + 24LL))(v2, a1);
  uint64_t v3 = sub_1000451B0();
  if (!v3) {
    goto LABEL_33;
  }
  if ((v3 & 7) != 0) {
    goto LABEL_33;
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)v3 + 24LL))(v3, a1);
  uint64_t v4 = sub_10004783C();
  if (!v4) {
    goto LABEL_33;
  }
  if ((v4 & 7) != 0) {
    goto LABEL_33;
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)v4 + 24LL))(v4, a1);
  uint64_t v5 = sub_1000472A8();
  if (!v5) {
    goto LABEL_33;
  }
  if ((v5 & 7) != 0) {
    goto LABEL_33;
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)v5 + 24LL))(v5, a1);
  uint64_t v6 = sub_1000C7788();
  if (!v6) {
    goto LABEL_33;
  }
  if ((v6 & 7) != 0) {
    goto LABEL_33;
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)v6 + 24LL))(v6, a1);
  uint64_t v7 = sub_10002CD78();
  if (!v7) {
    goto LABEL_33;
  }
  if ((v7 & 7) != 0) {
    goto LABEL_33;
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)v7 + 24LL))(v7, a1);
  uint64_t v8 = sub_100061274();
  if (!v8) {
    goto LABEL_33;
  }
  if ((v8 & 7) != 0) {
    goto LABEL_33;
  }
  sub_10008C5A8(v8, 0, 0, *(void *)(a1 + 8));
  sub_10006EF28(a1, 0, 1);
  sub_10006F0A8(a1, 0xFFFFu);
  pthread_mutex_destroy((pthread_mutex_t *)(a1 + 1448));
  pthread_mutex_destroy((pthread_mutex_t *)(a1 + 1344));
  pthread_mutex_destroy((pthread_mutex_t *)(a1 + 1280));
  sub_1000612C4(*(void *)(a1 + 8));
  if (!v9) {
    goto LABEL_33;
  }
  uint64_t v10 = v9;
  if ((v9 & 7) != 0) {
    goto LABEL_33;
  }
  if ((((_BYTE)a1 - 68) & 3) != 0) {
    goto LABEL_33;
  }
  sub_10005EB3C(v9, *(_DWORD *)(a1 + 1980));
  sub_10005D014(v10, *(_DWORD *)(a1 + 1980));
  *(_DWORD *)(a1 + 1980) = -1;
  sub_10006EA98(a1, 0LL, 1, 1);
  if ((((_BYTE)a1 - 8) & 7) != 0) {
    goto LABEL_33;
  }
  *(_DWORD *)(a1 + 1528) = 0;
  if ((((_BYTE)a1 - 4) & 3) != 0) {
    goto LABEL_33;
  }
  *(_BYTE *)(a1 + 1532) = 0;
  pthread_mutex_destroy((pthread_mutex_t *)(a1 + 2256));
  if (((a1 + 2376) & 7) != 0) {
    goto LABEL_33;
  }
  sub_100009E9C(a1 + 2376);
  if (((a1 + 2344) & 7) != 0) {
    goto LABEL_33;
  }
  if (((a1 + 2320) & 7) != 0) {
    goto LABEL_33;
  }
  if (((a1 + 2232) & 7) != 0
    || (sub_1000180FC(a1 + 2232), ((a1 + 1992) & 7) != 0)
    || (sub_100087420((uint64_t *)(a1 + 1992)), ((a1 + 1200) & 7) != 0))
  {
LABEL_33:
    __break(0x5516u);
  }

  else
  {
    sub_100009E9C(a1 + 1200);
    sub_100061324(a1);
  }

uint64_t sub_10006EF28(uint64_t result, int a2, int a3)
{
  if (!result
    || (uint64_t v3 = result, (result & 7) != 0)
    || (uint64_t result = pthread_mutex_lock((pthread_mutex_t *)(result + 2256)), ((v3 + 2232) & 7) != 0)
    || ((v3 + 2248) & 7) != 0)
  {
LABEL_31:
    __break(0x5516u);
    return result;
  }

  while (*(void *)(v3 + 2248))
  {
    uint64_t v8 = *(void *)sub_1000870A8(v3 + 2232);
    if (a2)
    {
      uint64_t result = sub_100061274();
      if (!result) {
        goto LABEL_31;
      }
      if ((result & 7) != 0) {
        goto LABEL_31;
      }
      if (!v8) {
        goto LABEL_31;
      }
      if ((v8 & 7) != 0) {
        goto LABEL_31;
      }
      uint64_t v9 = (uint64_t *)(v8 + 16);
      if (((v8 + 16) & 7) != 0) {
        goto LABEL_31;
      }
      if ((*v9 & 7) != 0) {
        goto LABEL_31;
      }
      uint64_t v10 = sub_10008E550(result, *v9, 0);
      uint64_t result = sub_100061274();
      if (!result || (result & 7) != 0 || (*v9 & 7) != 0) {
        goto LABEL_31;
      }
      uint64_t result = sub_10008D184(result, *v9);
      if (v10 && ((_DWORD)result == 56 || (_DWORD)result == 19))
      {
        if ((v10 & 7) != 0) {
          goto LABEL_31;
        }
        if (!sub_100057CEC(v10)) {
          sub_10007E614(v10, 2);
        }
      }

      uint64_t result = *v9;
      if (!*v9 || (result & 7) != 0) {
        goto LABEL_31;
      }
      sub_1000AE18C(result, 0);
    }

    sub_100086638((void *)v3, v8, v6, v7, a3);
  }

  uint64_t result = pthread_mutex_unlock((pthread_mutex_t *)(v3 + 2256));
  if (a3)
  {
    uint64_t result = *(void *)(v3 + 8);
    if (result && (result & 7) == 0) {
      return sub_100056D84(result);
    }
    goto LABEL_31;
  }

  return result;
}

void sub_10006F0A8(uint64_t a1, unsigned int a2)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    do
    {
      unsigned __int16 v9 = -1;
      std::string __p = 0LL;
      int v4 = sub_100062E78(a1, -1, &v9, &__p, a2);
      if (!v4 && __p)
      {
        unsigned int v5 = v9 - 93;
        BOOL v6 = v5 > 0x19;
        int v7 = (1 << v5) & 0x3000001;
        if (!v6 && v7 != 0) {
          operator delete[](__p);
        }
      }
    }

    while (!v4);
  }

void sub_10006F154(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    sub_10006ECDC(a1);
  }
}

void sub_10006F168(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    sub_10006ECDC(a1);
    operator delete(v1);
  }

uint64_t sub_10006F18C(uint64_t result, unsigned __int8 a2)
{
  if (result && (result & 7) == 0)
  {
    int v2 = a2 >> 4;
    if (v2 == 2)
    {
      uint64_t result = sub_100061274();
      if (result && (result & 7) == 0)
      {
        unsigned int v3 = 1;
        return sub_10008E880(result, v3);
      }
    }

    else
    {
      if (v2 != 1) {
        return 0LL;
      }
      uint64_t result = sub_100061274();
      if (result && (result & 7) == 0)
      {
        unsigned int v3 = 0;
        return sub_10008E880(result, v3);
      }
    }
  }

  __break(0x5516u);
  return result;
}

void sub_10006F1F8(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_203;
  }
  unsigned int v4 = *(unsigned __int16 *)(a2 + 128);
  if (!*(_WORD *)(a2 + 128)) {
    return;
  }
  unsigned int v5 = *(unsigned __int8 **)(a2 + 24);
  if (!v5) {
    goto LABEL_203;
  }
  uint64_t v6 = *v5;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = sub_100061274();
  if (!v8) {
    goto LABEL_203;
  }
  if ((v8 & 7) != 0) {
    goto LABEL_203;
  }
  unsigned int v9 = sub_10008C710(v8, v7);
  uint64_t v10 = sub_100061274();
  if (!v10) {
    goto LABEL_203;
  }
  if ((v10 & 7) != 0) {
    goto LABEL_203;
  }
  int v76 = sub_10008D184(v10, v7);
  uint64_t v11 = sub_100061274();
  if (!v11 || (v11 & 7) != 0) {
    goto LABEL_203;
  }
  uint64_t v12 = sub_100054F0C(v11, v7);
  __int16 v82 = -21846;
  int v13 = *(_DWORD *)(a1 + 1588);
  BOOL v72 = __CFADD__(v13, 1);
  int v14 = v13 + 1;
  if (!v72)
  {
    uint64_t v15 = (void *)v12;
    *(_DWORD *)(a1 + 1588) = v14;
    pthread_mutex_lock((pthread_mutex_t *)(a1 + 1280));
    if (sub_100063CE8(v7))
    {
      __int16 v82 = 112;
      sub_100062E78(a1, -1, &v82, 0LL, 0xFFFFu);
    }

    __int16 v82 = 115;
    sub_100062E78(a1, -1, &v82, 0LL, 0xFFFFu);
    pthread_mutex_unlock((pthread_mutex_t *)(a1 + 1280));
    *(_BYTE *)(a1 + 2200) = 0;
    if (((a1 + 1992) & 7) != 0) {
      goto LABEL_203;
    }
    sub_10006EC68(a1 + 1992);
    sub_10006E778(a1, 1);
    *(void *)(a1 + 1272) = 0LL;
    sub_10006E9E8(a1);
    uint64_t v16 = *(void *)(a1 + 8);
    if (!v16) {
      goto LABEL_203;
    }
    if ((v16 & 7) != 0) {
      goto LABEL_203;
    }
    sub_100057B04(v16);
    uint64_t v17 = sub_1000BE638();
    if (!v17) {
      goto LABEL_203;
    }
    uint64_t v18 = v17;
    if ((v17 & 7) != 0) {
      goto LABEL_203;
    }
    uint64_t v19 = sub_1000C0034(*(void *)(a1 + 8));
    (*(void (**)(uint64_t, uint64_t))(*(void *)v18 + 136LL))(v18, v19);
    __int16 v82 = 116;
    sub_100062E78(a1, -1, &v82, 0LL, 0xFFFFu);
    sub_10006FDA8(a1);
    __int16 v82 = 0;
    sub_100062E78(a1, -1, &v82, 0LL, 0xFFFFu);
    sub_10006FDE8(a1, 0LL, 0);
    uint64_t v20 = sub_100061274();
    if (!v20) {
      goto LABEL_203;
    }
    if ((v20 & 7) != 0) {
      goto LABEL_203;
    }
    sub_100054CE8((unsigned __int16 *)v20, (void *)v7);
    sub_10006EA98(a1, *(void *)(a2 + 8), 1, 1);
    if ((((_BYTE)a1 - 120) & 7) != 0) {
      goto LABEL_203;
    }
    *(_DWORD *)(a1 + 1416) = -1;
    sub_10006FED0(a1, v7, -1);
    sub_100070C38(a1, v21, 1LL);
    if (v15)
    {
      uint64_t v22 = sub_100061274();
      if (!v22) {
        goto LABEL_203;
      }
      if ((v22 & 7) != 0) {
        goto LABEL_203;
      }
      unsigned int v23 = sub_10008C710(v22, (uint64_t)v15);
      uint64_t v24 = sub_100061274();
      if (!v24) {
        goto LABEL_203;
      }
      if ((v24 & 7) != 0) {
        goto LABEL_203;
      }
      sub_10008C82C(v24, (uint64_t)v15);
      uint64_t v25 = sub_100061274();
      if (!v25 || (v25 & 7) != 0) {
        goto LABEL_203;
      }
      sub_100054CE8((unsigned __int16 *)v25, v15);
      sub_100070CB0(a1, *(void *)(a1 + 8), -1);
      if (v23)
      {
        LOWORD(v78) = 120;
        sub_100062E78(a1, -1, &v78, 0LL, 0xFFFFu);
        sub_100070D90(a1, *(void *)(a1 + 8), (uint64_t)v15, v23);
      }
    }

    uint64_t v26 = sub_100061274();
    if (!v26 || (v26 & 7) != 0)
    {
LABEL_203:
      __break(0x5516u);
      goto LABEL_204;
    }

    sub_10008D0F4(v26, v7, 1);
    else {
      unsigned int v27 = 0;
    }
    uint64_t v28 = (1 << v6);
    if (!*(_BYTE *)(a1 + 2368))
    {
      if (!v7 || (v7 & 7) != 0) {
        goto LABEL_203;
      }
      if ((*(unsigned int (**)(uint64_t))(*(void *)v7 + 280LL))(v7))
      {
        if ((v6 | 2) != 2)
        {
          uint64_t v45 = *(void *)(a1 + 8);
          if (!v45 || (v45 & 7) != 0) {
            goto LABEL_203;
          }
          if (!sub_100057D30(v45))
          {
            uint64_t v47 = *(void *)(a1 + 8);
            uint64_t v48 = (*(uint64_t (**)(void *))(*(void *)v46 + 384LL))(v46);
            sub_100070E84(1LL, v47, (void *)v7, v48);
          }

          sub_100070F1C(*(void *)(a1 + 8), v7, 0);
          return;
        }

        uint64_t v6 = 0LL;
        uint64_t v28 = 1LL;
      }
    }

    if (*(unsigned __int8 *)(a1 + 2212) > 1u)
    {
LABEL_204:
      __break(0x550Au);
      goto LABEL_205;
    }

    if (!*(_BYTE *)(a1 + 2212))
    {
      uint64_t v29 = *(void *)(a1 + 8);
      if (!v29 || (v29 & 7) != 0) {
        goto LABEL_203;
      }
      if (!*(_BYTE *)(a1 + 2368))
      {
        uint64_t v31 = *(void *)(a1 + 8);
        if (!v31 || (v31 & 7) != 0) {
          goto LABEL_203;
        }
        if (sub_100057A20(v31) && (v6 | 2) != 2)
        {
          uint64_t v59 = *(void *)(a1 + 8);
          if (!v59 || (v59 & 7) != 0) {
            goto LABEL_203;
          }
          if ((int)sub_100057B7C(v59) <= 31)
          {
            uint64_t v60 = *(void *)(a1 + 8);
            if (!v60 || (v60 & 7) != 0) {
              goto LABEL_203;
            }
            if ((sub_100057B7C(v60) & 0x80000000) == 0)
            {
              uint64_t v61 = *(void *)(a1 + 8);
              if (!v61 || (v61 & 7) != 0) {
                goto LABEL_203;
              }
              unsigned int v62 = sub_100057B7C(v61);
              if (v62 > 0x1F) {
                goto LABEL_206;
              }
              if (((1 << v62) & 0xC1) != 0) {
LABEL_51:
              }
                sub_1000710B8(a1, v30, 1);
            }
          }
        }
      }
    }

    int v81 = 0;
    if (!v7 || (v7 & 7) != 0) {
      goto LABEL_203;
    }
    char v32 = 1;
    if (((*(uint64_t (**)(uint64_t))(*(void *)v7 + 232LL))(v7) & 1) == 0
      && v6 <= v27
      && (*(_DWORD *)(a1 + 1516) & v28) != 0)
    {
      if (sub_100071124(a1, v7, v28, &v81))
      {
        *(void *)&__int128 v33 = 0xAAAAAAAAAAAAAAAALL;
        *((void *)&v33 + 1) = 0xAAAAAAAAAAAAAAAALL;
        __int128 v79 = v33;
        __int128 v80 = v33;
        __int128 v78 = v33;
        int v34 = ~(_DWORD)v28 | 0x2010;
        if (v76 != 1) {
          int v34 = -1;
        }
        sub_100071254(a1, v7, v34 & v9);
        uint64_t v35 = v28 | 1;
        if (*(unsigned __int8 *)(a1 + 2368) <= 1u)
        {
          if (*(_BYTE *)(a1 + 2368) || ((*(uint64_t (**)(uint64_t))(*(void *)v7 + 280LL))(v7) & 1) == 0)
          {
            uint64_t v35 = v28 | 5;
            if ((_DWORD)v6 == 4)
            {
              uint64_t v36 = sub_100061274();
              if (v36 && (v36 & 7) == 0)
              {
                v37 = sub_10008C468((uint64_t *)v36, 3);
                if (v37) {
                  BOOL v38 = v37 == (uint64_t *)v7;
                }
                else {
                  BOOL v38 = 1;
                }
                unsigned int v39 = v28 | 0xD;
                if (v38) {
                  uint64_t v28 = v28 | 0xC;
                }
                else {
                  uint64_t v28 = v28 | 4;
                }
                if (v38) {
                  uint64_t v35 = v39;
                }
                else {
                  uint64_t v35 = v35;
                }
                goto LABEL_108;
              }

              goto LABEL_203;
            }

            uint64_t v28 = v28 | 4;
          }

LABEL_108:
          uint64_t v49 = sub_100061274();
          if (v49 && (v49 & 7) == 0)
          {
            if ((*(unsigned int (**)(uint64_t, void, uint64_t))(*(void *)v49 + 144LL))( v49,  *(void *)(a1 + 8),  v28) != (_DWORD)v28)
            {
              sub_1000CEAEC(0, 4, "%s:%d setActiveLingoMaskReturn != lingoMask\n");
              return;
            }

            uint64_t v50 = sub_100061274();
            if (v50)
            {
              if ((v50 & 7) == 0)
              {
                if ((*(unsigned int (**)(uint64_t, void, uint64_t))(*(void *)v50 + 160LL))( v50,  *(void *)(a1 + 8),  v35) != (_DWORD)v35)
                {
                  sub_1000CEAEC(0, 4, "%s:%d setAllowedLingoMaskReturn != lingoAllow\n");
                  return;
                }

                uint64_t v51 = *(void *)(a1 + 8);
                if (v51)
                {
                  if ((v51 & 7) == 0)
                  {
                    sub_10005789C(v51, v6);
                    uint64_t v52 = sub_100061274();
                    if (v52)
                    {
                      if ((v52 & 7) == 0)
                      {
                        uint64_t v53 = sub_10008C2EC(v52, *(void *)(a1 + 8), v6);
                        if (v53)
                        {
                          uint64_t v54 = v53;
                          unsigned int v55 = 0;
                          int v56 = 0;
                          unsigned int v57 = 2;
                          int v58 = 1;
                          switch((int)v6)
                          {
                            case 0:
                            case 2:
                              goto LABEL_142;
                            case 1:
                              int v58 = 0;
                              int v56 = 1;
                              unsigned int v55 = 4;
                              goto LABEL_136;
                            case 3:
                              goto LABEL_140;
                            case 4:
                              sub_10007137C(a1, 1u);
                              int v56 = 1;
                              unsigned int v55 = 0;
                              int v58 = 0;
LABEL_136:
                              unsigned int v57 = 4;
                              goto LABEL_142;
                            case 5:
                              if (v4 < 4)
                              {
LABEL_140:
                                unsigned int v55 = 0;
                                int v58 = 0;
                              }

                              else
                              {
                                int v58 = 0;
                                unsigned int v55 = 4 * (v5[3] & 1);
                              }

                              unsigned int v57 = 4;
                              int v56 = 1;
LABEL_142:
                              int v77 = v56;
                              int v63 = v58;
                              uint64_t v64 = sub_100061274();
                              if (!v64 || (v64 & 7) != 0) {
                                goto LABEL_203;
                              }
                              sub_10008CB5C(v64, v7, v55);
                              if (!qword_10011C8F8) {
                                goto LABEL_147;
                              }
                              if ((qword_10011C8F8 & 7) != 0) {
                                goto LABEL_203;
                              }
                              (*(void (**)(void))(*(void *)qword_10011C8F8 + 8LL))();
                              qword_10011C8F8 = 0LL;
LABEL_147:
                              if ((v54 & 7) != 0) {
                                goto LABEL_203;
                              }
                              (*(void (**)(uint64_t, uint64_t, void, uint64_t))(*(void *)v54 + 80LL))( v54,  4LL,  0LL,  v7);
                              pthread_mutex_lock((pthread_mutex_t *)(a1 + 1280));
                              uint64_t v65 = *(void *)(a1 + 8);
                              if (!v65 || (v65 & 7) != 0) {
                                goto LABEL_203;
                              }
                              int v66 = sub_100057B7C(v65);
                              sub_10006EBD4(a1, v7);
                              if (v66 == -1) {
                                int v67 = 16;
                              }
                              else {
                                int v67 = v66;
                              }
                              DWORD1(v78) = v67;
                              if (sub_100063CE8(v7) && (v66 == 100 || v66 == -1))
                              {
                                *(_BYTE *)(a1 + 1533) = 1;
                                if (sub_100062D14((void *)a1, -1, 115, 0LL, 2000)) {
                                  sub_1000CEAEC( 0,  4,  "%s:%d SetCmdTimeout failed.\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp",  1138);
                                }
                              }

                              LODWORD(v78) = 1;
                              DWORD1(v78) = v67;
                              *((void *)&v78 + 1) = v7;
                              LODWORD(v79) = 0;
                              DWORD1(v79) = v28;
                              uint64_t v69 = *(void *)(a1 + 8);
                              *((void *)&v79 + 1) = v69;
                              if (*(_BYTE *)(a1 + 1533))
                              {
                                if ((a1 & 7) != 0) {
                                  goto LABEL_203;
                                }
                                *(_DWORD *)(a1 + 1536) = 1;
                                if ((((_BYTE)a1 + 4) & 3) != 0) {
                                  goto LABEL_203;
                                }
                                *(_DWORD *)(a1 + 1540) = 100;
                                if ((((_BYTE)a1 + 8) & 7) != 0) {
                                  goto LABEL_203;
                                }
                                *(void *)(a1 + 1544) = v7;
                                if ((((_BYTE)a1 + 16) & 7) != 0) {
                                  goto LABEL_203;
                                }
                                *(_DWORD *)(a1 + 1552) = 0;
                                if ((((_BYTE)a1 + 20) & 3) != 0) {
                                  goto LABEL_203;
                                }
                                *(_DWORD *)(a1 + 1556) = v28;
                                if (((a1 + 1560) & 7) != 0) {
                                  goto LABEL_203;
                                }
                                *(void *)(a1 + 1560) = v69;
                              }

                              else
                              {
                                sub_10007158C(a1, 0, 0LL, (uint64_t)&v78, 48);
                              }

                              v70 = (unsigned int *)(a1 + 1528);
                              if (((a1 + 1528) & 7) != 0) {
                                goto LABEL_203;
                              }
                              unsigned int v71 = *v70;
                              if (*v70 > 7) {
                                goto LABEL_204;
                              }
                              BOOL v72 = v57 < v71 || v71 >= 4;
                              if (v72) {
                                int v73 = v63;
                              }
                              else {
                                int v73 = 1;
                              }
                              if (v73 == 1)
                              {
                                if (v71 <= 3)
                                {
                                  unsigned int *v70 = v57;
                                  unsigned int v71 = v57;
                                }

                                if (v77)
                                {
                                  if (v71 == 4)
                                  {
                                    if (((a1 + 1532) & 3) != 0) {
                                      goto LABEL_203;
                                    }
                                    *(_BYTE *)(a1 + 1532) = 1;
                                  }

                                  if (v66 > 15 || v66 == -1)
                                  {
                                    if (((a1 + 1584) & 7) != 0) {
                                      goto LABEL_203;
                                    }
                                    *(_DWORD *)(a1 + 1584) = 1;
                                  }

                                  else if ((v66 & 0x80000000) == 0 && ((1 << v66) & 0xE400) != 0)
                                  {
                                    sub_1000710B8(a1, v68, 1);
                                  }

                                  LODWORD(v78) = 17;
                                  DWORD1(v78) = v67;
                                  sub_10007158C(a1, 0, 0LL, (uint64_t)&v78, 48);
                                }

                                else if (v63)
                                {
                                  if (((a1 + 1588) & 3) != 0) {
                                    goto LABEL_203;
                                  }
                                  if (*(_DWORD *)(a1 + 1588) > 0xCu) {
                                    int v74 = 1;
                                  }
                                  else {
                                    int v74 = 800;
                                  }
                                  if (sub_100062D14((void *)a1, -1, 113, 0LL, v74)) {
                                    sub_1000CEAEC( 0,  4,  "%s:%d SetCmdTimeout failed.\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp",  1236);
                                  }
                                }
                              }

                              uint64_t v75 = *(void *)(a1 + 8);
                              if (v75 && (v75 & 7) == 0)
                              {
                                sub_1000578E8(v75, v6);
                                pthread_mutex_unlock((pthread_mutex_t *)(a1 + 1280));
                                return;
                              }

                              break;
                            default:
                              sub_1000CEAEC( 0,  4,  "%s:%d CIapLingoGeneral::HandleGeneralIdentifyPkt invalid lingo: %d !\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp",  1093,  v6);
                              unsigned int v55 = 0;
                              int v58 = 0;
                              int v56 = 0;
                              unsigned int v57 = 0;
                              goto LABEL_142;
                          }
                        }

                        else
                        {
                          __break(0x5518u);
                        }
                      }
                    }
                  }
                }
              }
            }
          }

          goto LABEL_203;
        }

        goto LABEL_204;
      }

      char v32 = 0;
    }

    sub_100070F1C(*(void *)(a1 + 8), v7, v9);
    if (v81)
    {
      uint64_t v40 = sub_1000642A4(v6);
      sub_1000870E8(1LL, v7, v40);
      return;
    }

    *(_DWORD *)(a1 + 2372) = 0;
    *(void *)&__int128 v80 = 0xAAAAAAAAAAAAAAAALL;
    *((void *)&v80 + 1) = 0xAAAAAAAAAAAAAAAALL;
    LODWORD(v78) = 5;
    if ((v32 & 1) != 0)
    {
      if ((v6 > 0xE || (*(_DWORD *)(a1 + 1516) & v28) != 0)
        && !(*(unsigned int (**)(uint64_t))(*(void *)v7 + 232LL))(v7))
      {
LABEL_92:
        uint64_t v42 = *(void *)(a1 + 8);
        if (v42 && (v42 & 7) == 0)
        {
          int v43 = sub_100057B7C(v42);
          if (v43 == (char)v43)
          {
            if (v43 == -1) {
              int v44 = 16;
            }
            else {
              int v44 = v43;
            }
            DWORD1(v78) = v44;
            *((void *)&v78 + 1) = v7;
            LODWORD(v79) = 0;
            DWORD1(v79) = v28;
            *((void *)&v79 + 1) = *(void *)(a1 + 8);
            sub_10007158C(a1, 0, 0LL, (uint64_t)&v78, 48);
            sub_1000CEAEC(0, 4, "%s:%d Unsupported Lingo received retVal=%xh\n");
            return;
          }

          goto LABEL_204;
        }

        goto LABEL_203;
      }

      int v41 = 4;
    }

    else
    {
      int v41 = 6;
    }

    LODWORD(v78) = v41;
    goto LABEL_92;
  }

LABEL_205:
  __break(0x5500u);
LABEL_206:
  __break(0x5514u);
LABEL_207:
  __break(0x5513u);
}

void sub_10006FDA8(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_8;
  }

  if (*(unsigned __int8 *)(a1 + 2201) >= 2u)
  {
LABEL_8:
    __break(0x550Au);
    return;
  }

  if (*(_BYTE *)(a1 + 2201)) {
    *(_BYTE *)(a1 + 2201) = 0;
  }
  else {
    dispatch_async(&_dispatch_main_q, &stru_1001060A0);
  }
}

uint64_t sub_10006FDE8(uint64_t result, uint64_t a2, char a3)
{
  if (!result) {
    goto LABEL_20;
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_20;
  }
  uint64_t result = *(void *)(result + 8);
  if (!result || (result & 7) != 0) {
    goto LABEL_20;
  }
  uint64_t v7 = sub_1000579D4(result);
  uint64_t result = *(void *)(v3 + 8);
  if (!result) {
    goto LABEL_20;
  }
  if ((result & 7) != 0) {
    goto LABEL_20;
  }
  uint64_t result = sub_10001864C(result);
  if (!v7 || (v7 & 7) != 0) {
    goto LABEL_20;
  }
  uint64_t v8 = (const void *)result;
  uint64_t result = sub_1000873F0(v7, a2);
  if (!v8 || (a3 & 1) != 0) {
    return result;
  }
  if ((v8 & 7) != 0)
  {
LABEL_20:
    __break(0x5516u);
    return result;
  }

  uint64_t result = (*(uint64_t (**)(const void *))(*(void *)v8 + 280LL))(v8);
  if ((_DWORD)result)
  {
    if (result && (result & 7) == 0) {
      return sub_1000AE0CC(result, a2);
    }
    goto LABEL_20;
  }

  return result;
}

uint64_t sub_10006FED0(uint64_t a1, uint64_t a2, int a3)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_256;
  }
  uint64_t v4 = a2;
  if (!a2) {
    sub_1000D276C();
  }
  uint64_t v6 = sub_100061274();
  if (!v6) {
    goto LABEL_256;
  }
  if ((v6 & 7) != 0) {
    goto LABEL_256;
  }
  unsigned int v7 = sub_10008D0AC(v6, v4);
  uint64_t v8 = sub_100061274();
  if (!v8) {
    goto LABEL_256;
  }
  if ((v8 & 7) != 0) {
    goto LABEL_256;
  }
  int v77 = sub_10008C710(v8, v4);
  *(void *)&__int128 v9 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v9 + 1) = 0xAAAAAAAAAAAAAAAALL;
  __int128 v81 = v9;
  __int128 v82 = v9;
  __int128 v80 = v9;
  uint64_t v10 = *(void *)(a1 + 8);
  if (!v10) {
    goto LABEL_256;
  }
  if ((v10 & 7) != 0) {
    goto LABEL_256;
  }
  uint64_t v11 = sub_1000579D4(v10);
  unsigned int v75 = sub_100062E0C();
  uint64_t v12 = *(void *)(a1 + 8);
  if (!v12 || (v12 & 7) != 0) {
    goto LABEL_256;
  }
  unsigned int v13 = sub_100057B7C(v12);
  LODWORD(v80) = 25;
  unsigned int v76 = v13;
  if (v13 == -1) {
    int v14 = 16;
  }
  else {
    int v14 = v13;
  }
  DWORD1(v80) = v14;
  *((void *)&v80 + 1) = v4;
  *(void *)&__int128 v81 = __PAIR64__(v77, v7);
  *((void *)&v81 + 1) = *(void *)(a1 + 8);
  uint64_t v15 = (int *)(a1 + 1416);
  if (((a1 + 1416) & 7) != 0) {
    goto LABEL_256;
  }
  unsigned int v16 = *v15;
  __int128 v78 = (uint64_t *)(a1 + 1408);
  if (v16 != a3) {
    *(_BYTE *)(a1 + 1447) = 0;
  }
  if (!a3 || v16 <= 0xFFFFFFFD)
  {
    *uint64_t v15 = a3;
    uint64_t v18 = 0LL;
    int v19 = 0;
    char v20 = 0;
    int v17 = 7;
    switch(a3)
    {
      case 0:
        if (v16 - 6 > 0xFFFFFFFC)
        {
          a3 = 0;
          break;
        }

        pthread_mutex_lock((pthread_mutex_t *)(a1 + 1448));
        uint64_t v21 = *v78;
        if (*v78)
        {
          if ((v21 & 3) != 0) {
            goto LABEL_256;
          }
          uint64_t v22 = (void *)sub_100055CC4(v21);
          operator delete(v22);
          *__int128 v78 = 0LL;
        }

        pthread_mutex_unlock((pthread_mutex_t *)(a1 + 1448));
        if ((((_BYTE)a1 - 98) & 1) != 0) {
          goto LABEL_256;
        }
        *(_BYTE *)(a1 + 1438) = 0;
        if ((((_BYTE)a1 - 112) & 7) != 0) {
          goto LABEL_256;
        }
        *(_DWORD *)(a1 + 1424) = 0;
        if ((((_BYTE)a1 - 94) & 1) != 0) {
          goto LABEL_256;
        }
        *(_WORD *)(a1 + 1442) = 0;
        if ((((_BYTE)a1 - 92) & 3) != 0) {
          goto LABEL_256;
        }
        uint64_t v18 = 0LL;
        int v17 = 0;
        int v19 = 0;
        char v20 = 0;
        a3 = 0;
        *(_WORD *)(a1 + 1444) = 0;
        goto LABEL_188;
      case 2:
        goto LABEL_188;
      case 3:
        int v23 = *(unsigned __int8 *)(a1 + 1438);
        if (v23 == 255) {
          goto LABEL_259;
        }
        unsigned __int8 v24 = v23 + 1;
        *(_BYTE *)(a1 + 1438) = v24;
        if ((((_DWORD)a1 + 1438) & 1) != 0) {
          goto LABEL_256;
        }
        if (v24 <= *(unsigned __int8 *)(a1 + 1439))
        {
          unsigned int v27 = (int *)(a1 + 1424);
          if (((a1 + 1424) & 7) != 0) {
            goto LABEL_256;
          }
          if (!*v27)
          {
            if ((((_BYTE)a1 - 116) & 3) != 0) {
              goto LABEL_256;
            }
            *(_DWORD *)(a1 + 1420) = v75;
            if (((a1 + 1440) & 7) != 0) {
              goto LABEL_256;
            }
            if (*(_BYTE *)(a1 + 1440) == 1) {
              int v28 = 34000;
            }
            else {
              int v28 = 270000;
            }
            *unsigned int v27 = v28;
          }

          *(_BYTE *)(a1 + 1443) = 0;
          if ((((_BYTE)a1 - 92) & 3) != 0) {
            goto LABEL_256;
          }
          *(_WORD *)(a1 + 1444) = 0;
          int v19 = 1;
          int v17 = 7;
LABEL_118:
          if (((a1 + 1420) & 3) != 0) {
            goto LABEL_256;
          }
          unsigned int v48 = *(_DWORD *)(a1 + 1420);
          BOOL v49 = v75 >= v48;
          unsigned int v50 = v75 - v48;
          if (!v49)
          {
LABEL_258:
            __break(0x5515u);
LABEL_259:
            __break(0x5507u);
            goto LABEL_260;
          }

          if ((((_DWORD)a1 + 1438) & 1) != 0) {
            goto LABEL_256;
          }
          if (*(unsigned __int8 *)(a1 + 1438) <= *(unsigned __int8 *)(a1 + 1439))
          {
            if (((a1 + 1424) & 7) != 0) {
              goto LABEL_256;
            }
            if (v50 < *(_DWORD *)(a1 + 1424))
            {
              uint64_t v18 = 0LL;
              if (a3 == 3) {
                int v17 = 3;
              }
              char v20 = v19;
              goto LABEL_188;
            }
          }
        }

        else
        {
          int v17 = 7;
        }

        a3 = -2;
        goto LABEL_129;
      case 4:
        if (*(_BYTE *)(a1 + 1447))
        {
          int v17 = 7;
        }

        else
        {
          LODWORD(v80) = 11;
          int v17 = 4;
        }

        unsigned int v79 = 0x7FFFFFFF;
        uint64_t v29 = *v78;
        if (!*v78) {
          goto LABEL_63;
        }
        if ((v29 & 3) != 0) {
          goto LABEL_256;
        }
        sub_100056060(v29, &v79);
LABEL_63:
        if (*(_BYTE *)(a1 + 2212)) {
          goto LABEL_76;
        }
        uint64_t v30 = sub_100061274();
        if (!v30 || (v30 & 7) != 0) {
          goto LABEL_256;
        }
        int v31 = sub_10008D0AC(v30, v4);
        if (!sub_100072FE8(v31, v77)) {
          goto LABEL_76;
        }
        if ((v79 & 0x80000000) != 0) {
          goto LABEL_257;
        }
        if (v79)
        {
          uint64_t v32 = *(void *)(a1 + 8);
          if (!v32 || (v32 & 7) != 0) {
            goto LABEL_256;
          }
          if (sub_100057A20(v32))
          {
            if (*(_BYTE *)(a1 + 2368))
            {
              int v33 = 58561;
            }

            else
            {
              if ((v79 & 0x80000000) != 0) {
                goto LABEL_257;
              }
              if (v79) {
                int v33 = 0;
              }
              else {
                int v33 = 58561;
              }
            }
          }

          else
          {
            int v33 = 58368;
          }
        }

        else
        {
LABEL_76:
          int v33 = 0;
        }

        uint64_t v34 = *(void *)(a1 + 8);
        if (!v34 || (v34 & 7) != 0) {
          goto LABEL_256;
        }
        uint64_t v36 = *(void *)(a1 + 8);
        if (!v36 || (v36 & 7) != 0) {
          goto LABEL_256;
        }
        if ((sub_100057B7C(v36) & 0x80000000) != 0)
        {
LABEL_87:
          int v39 = 0;
        }

        else
        {
          uint64_t v37 = *(void *)(a1 + 8);
          if (!v37 || (v37 & 7) != 0) {
            goto LABEL_256;
          }
          uint64_t result = sub_100057B7C(v37);
          if (result > 0x1F)
          {
            __break(0x5514u);
            return result;
          }

          int v39 = 1 << result;
        }

        if ((v39 & v33) != 0) {
          sub_1000710B8(a1, v35, 1);
        }
        uint64_t v40 = sub_1000438B8();
        if (!v40 || (v40 & 7) != 0) {
          goto LABEL_256;
        }
        uint64_t v41 = sub_100061274();
        if (!v41 || (v41 & 7) != 0) {
          goto LABEL_256;
        }
        int v42 = sub_10008D0AC(v41, v4);
        if (v42 == 3) {
          goto LABEL_113;
        }
        int v43 = v42;
        if (v42 == 15 || v42 == 70) {
          goto LABEL_113;
        }
        uint64_t v44 = sub_100061274();
        if (!v44 || (v44 & 7) != 0) {
          goto LABEL_256;
        }
        uint64_t v45 = sub_100061274();
        if (!v45 || (v45 & 7) != 0) {
          goto LABEL_256;
        }
        if ((((_BYTE)a1 - 56) & 7) != 0) {
          goto LABEL_256;
        }
        if ((*(_DWORD *)(a1 + 2196) & 0x40100) == 0)
        {
LABEL_106:
          if (!v11 || (v11 & 7) != 0) {
            goto LABEL_256;
          }
          sub_1000775F4(v11, 1LL, 0LL);
        }

LABEL_117:
        int v19 = 0;
        goto LABEL_118;
      case 6:
        LODWORD(v80) = 12;
        uint64_t v25 = sub_100061274();
        if (!v25) {
          goto LABEL_256;
        }
        if ((v25 & 7) != 0) {
          goto LABEL_256;
        }
        int v26 = sub_10008CBE4(v25, v4);
        if (((a1 + 1532) & 3) != 0) {
          goto LABEL_256;
        }
        uint64_t v18 = 0LL;
        char v20 = (~v26 & 0xC) == 0;
        int v19 = 1;
        *(_BYTE *)(a1 + 1532) = 1;
        int v17 = 6;
        goto LABEL_188;
      default:
        int v17 = 7;
        goto LABEL_117;
    }
  }

  int v17 = 7;
LABEL_129:
  uint64_t v51 = sub_1000438B8();
  if (!v51 || (v51 & 7) != 0) {
    goto LABEL_256;
  }
  if ((*(unsigned int (**)(uint64_t))(*(void *)v51 + 176LL))(v51))
  {
    if (!v11 || (v11 & 7) != 0) {
      goto LABEL_256;
    }
    sub_10007F8B0(v11, 0LL);
  }

  pthread_mutex_lock((pthread_mutex_t *)(a1 + 1448));
  uint64_t v52 = *v78;
  if (*v78)
  {
    if ((v52 & 3) != 0) {
      goto LABEL_256;
    }
    uint64_t v53 = (void *)sub_100055CC4(v52);
    operator delete(v53);
    *__int128 v78 = 0LL;
  }

  pthread_mutex_unlock((pthread_mutex_t *)(a1 + 1448));
  sub_10006FDE8(a1, 0LL, 0);
  if (!v11) {
    goto LABEL_256;
  }
  if ((v11 & 7) != 0) {
    goto LABEL_256;
  }
  sub_100077724(v11, 0LL, 0LL);
  uint64_t v54 = sub_10004783C();
  if (!v54 || (v54 & 7) != 0) {
    goto LABEL_256;
  }
  uint64_t v55 = sub_10004783C();
  if (!v55 || (v55 & 7) != 0) {
    goto LABEL_256;
  }
  if ((v4 & 7) != 0) {
    goto LABEL_256;
  }
  if ((*(unsigned int (**)(uint64_t))(*(void *)v4 + 216LL))(v4) == 1)
  {
LABEL_144:
    char v20 = 0;
    if (v16 == 6)
    {
      a3 = 6;
      int v19 = 1;
      uint64_t v18 = 2LL;
    }

    else
    {
      LODWORD(v80) = 12;
      int v19 = 1;
      int v17 = 6;
      uint64_t v18 = 2LL;
      a3 = 6;
    }
  }

  else
  {
LABEL_151:
    if (a3 == -2) {
      int v57 = -2;
    }
    else {
      int v57 = -1;
    }
    if (v16 + 2 <= 8 && (int v19 = 1, ((1 << (v16 + 2)) & 0x103) != 0))
    {
      char v20 = 0;
    }

    else
    {
      if (a3 == -2)
      {
        if (((a1 + 1420) & 3) != 0) {
          goto LABEL_256;
        }
        *(_DWORD *)(a1 + 1420) = v75;
        unsigned int v79 = 0;
        unsigned int v58 = IapAuthRandomNumber(&v79);
        if (v79)
        {
LABEL_260:
          syslog(3, "%s:%d IapAuthRandomNumber returned %d, abort");
LABEL_261:
          sub_1000D251C();
        }

        if ((((_BYTE)a1 - 112) & 7) != 0) {
          goto LABEL_256;
        }
        *(_DWORD *)(a1 + 1424) = v58 % 0x1D4C0 + 180000;
        if (!*(_BYTE *)(a1 + 2368))
        {
          if ((v4 & 7) != 0) {
            goto LABEL_256;
          }
          if ((*(unsigned int (**)(uint64_t))(*(void *)v4 + 280LL))(v4))
          {
            uint64_t v59 = *(void *)(a1 + 8);
            if (!v59 || (v59 & 7) != 0) {
              goto LABEL_256;
            }
            if (!sub_100057D30(v59))
            {
              uint64_t v61 = *(void *)(a1 + 8);
              uint64_t v62 = (*(uint64_t (**)(void *))(*(void *)v60 + 384LL))(v60);
              sub_100070E84(1LL, v61, (void *)v4, v62);
            }
          }
        }
      }

      sub_100070C38(a1, v56, 1LL);
      if (((a1 + 1512) & 7) != 0) {
        goto LABEL_256;
      }
      if (!*(_BYTE *)(a1 + 1512) || *(unsigned __int8 *)(a1 + 1515) >= 0x40u)
      {
        if (((a1 + 1528) & 7) != 0) {
          goto LABEL_256;
        }
        unsigned int v63 = *(_DWORD *)(a1 + 1528);
        if (v63 > 7) {
          goto LABEL_257;
        }
        if (v63 == 5 || v63 == 3)
        {
          *(_DWORD *)(a1 + 1528) = 4;
          if (((a1 + 1532) & 3) != 0) {
            goto LABEL_256;
          }
          if (!*(_BYTE *)(a1 + 1532))
          {
            LODWORD(v80) = 17;
            sub_10007158C(a1, 0, 0LL, (uint64_t)&v80, 48);
            *(_BYTE *)(a1 + 1532) = 1;
          }
        }
      }

      LODWORD(v80) = 13;
      uint64_t v64 = sub_100061274();
      if (!v64 || (v64 & 7) != 0) {
        goto LABEL_256;
      }
      sub_10008D224(v64, v4);
      char v20 = 0;
      int v19 = 1;
      int v17 = -1;
    }

    uint64_t v18 = 2LL;
    a3 = v57;
  }

LABEL_188:
  *uint64_t v15 = a3;
  uint64_t v65 = sub_100061274();
  if (!v65 || (v65 & 7) != 0) {
    goto LABEL_256;
  }
  sub_100054874(v65, v4, a3);
  if (v19)
  {
    uint64_t v66 = sub_100061274();
    if (!v66 || (v66 & 7) != 0) {
      goto LABEL_256;
    }
    sub_10008CC64(v66, v4, 0, v20);
  }

  if (v17 != 7)
  {
    uint64_t v67 = sub_100061274();
    if (!v67 || (v67 & 7) != 0) {
      goto LABEL_256;
    }
    (*(void (**)(uint64_t, uint64_t, void, uint64_t, void, void))(*(void *)v67 + 176LL))( v67,  64LL,  v17,  v4,  *(void *)(a1 + 8),  0LL);
    if ((v77 & 0x400) != 0) {
      sub_100066AC4(64LL, v17, *(void *)(a1 + 8));
    }
  }

  if ((_DWORD)v80 == 25) {
    goto LABEL_222;
  }
  sub_10007158C(a1, 0, 0LL, (uint64_t)&v80, 48);
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 1448));
  *(_BYTE *)(a1 + 1447) = 1;
  if ((_DWORD)v80 != 11) {
    goto LABEL_211;
  }
  uint64_t v68 = (_DWORD *)(a1 + 1528);
  if (((a1 + 1528) & 7) != 0) {
    goto LABEL_256;
  }
  if (*v68 > 7u) {
    goto LABEL_257;
  }
  if (*v68 > 3u) {
    goto LABEL_211;
  }
  if (((a1 + 1440) & 7) != 0) {
    goto LABEL_256;
  }
  int v69 = *(unsigned __int8 *)(a1 + 1440);
  if (!*(_BYTE *)(a1 + 1440))
  {
LABEL_211:
    pthread_mutex_unlock((pthread_mutex_t *)(a1 + 1448));
    goto LABEL_212;
  }

  if (v69 != 2)
  {
    if (v69 != 1)
    {
      syslog(3, "CIapLingoGeneral::SetAuthenticationPhase invalid authen major version: %d\n");
      goto LABEL_261;
    }

    goto LABEL_240;
  }

  uint64_t v70 = *v78;
  if (!*v78)
  {
    sub_1000CEAEC( 0,  4,  "%s:%d CIapLingoGeneral::SetAuthenticationPhase m_PortAuthenState.pAuthenCert==NULL\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp",  9504);
    uint64_t v18 = 2LL;
    goto LABEL_233;
  }

  unsigned int v79 = 0x7FFFFFFF;
  if ((v70 & 3) != 0)
  {
LABEL_256:
    __break(0x5516u);
    goto LABEL_257;
  }

  uint64_t v71 = sub_100056060(v70, &v79);
  uint64_t v18 = v71;
  unsigned int v72 = v79;
  if ((_DWORD)v71)
  {
    if ((v79 & 0x80000000) != 0) {
      goto LABEL_257;
    }
LABEL_237:
    sub_1000CEAEC( 0,  4,  "%s:%d Status = %u, certClass = %x.\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp",  9456,  v71,  v79);
    unsigned int v72 = v79;
    if ((v79 & 0x80000000) == 0) {
      goto LABEL_238;
    }
LABEL_257:
    __break(0x550Au);
    goto LABEL_258;
  }

  if ((v79 & 0x80000000) != 0) {
    goto LABEL_257;
  }
  if (v79 > 0xA) {
    goto LABEL_237;
  }
LABEL_238:
  if (v72 <= 0xA && ((1 << v72) & 0x671) != 0)
  {
LABEL_240:
    pthread_mutex_unlock((pthread_mutex_t *)(a1 + 1448));
    *uint64_t v68 = 5;
    goto LABEL_241;
  }

  if (v76 < 0x20 && ((1 << v76) & 0xE400) != 0)
  {
    if ((v4 & 7) != 0) {
      goto LABEL_256;
    }
    if (((*(uint64_t (**)(uint64_t))(*(void *)v4 + 232LL))(v4) & 1) == 0)
    {
      uint64_t v73 = sub_100061274();
      if (!v73 || (v73 & 7) != 0) {
        goto LABEL_256;
      }
    }
  }

LABEL_233:
  pthread_mutex_unlock((pthread_mutex_t *)(a1 + 1448));
  *(_DWORD *)(a1 + 1528) = 4;
  if (((a1 + 1532) & 3) != 0) {
    goto LABEL_256;
  }
  *(_BYTE *)(a1 + 1532) = 1;
LABEL_241:
  LODWORD(v80) = 17;
  sub_10007158C(a1, 0, 0LL, (uint64_t)&v80, 48);
LABEL_212:
  if (a3 == -2)
  {
    LOWORD(v79) = 20;
    LOWORD(v79) = 23;
    LODWORD(v80) = 4;
    sub_10007158C(a1, 0, 0LL, (uint64_t)&v80, 48);
    if ((v4 & 7) == 0
      && (!(*(unsigned int (**)(uint64_t))(*(void *)v4 + 280LL))(v4)
       || (uint64_t v4 = *(void *)(v4 + 40)) != 0 && (v4 & 7) == 0))
    {
      (*(void (**)(uint64_t))(*(void *)v4 + 120LL))(v4);
      goto LABEL_222;
    }

    goto LABEL_256;
  }

uint64_t sub_100070C38(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result
    && (uint64_t v3 = result, (result & 7) == 0)
    && ((result = *(void *)(result + 8)) != 0 ? (BOOL v4 = (result & 7) == 0) : (BOOL v4 = 0),
        v4 && (result = sub_1000579D4(result)) != 0 && (uint64_t v6 = result, (result & 7) == 0)))
  {
    sub_1000AE9A8(result, a3);
    uint64_t result = sub_1000776C4(v6);
    *(_BYTE *)(v3 + 2203) = result;
  }

  else
  {
    __break(0x5516u);
  }

  return result;
}

uint64_t sub_100070CB0(uint64_t result, uint64_t a2, int a3)
{
  if (!result) {
    goto LABEL_18;
  }
  if ((result & 7) != 0) {
    goto LABEL_18;
  }
  uint64_t result = sub_100061274();
  if (!result || (result & 7) != 0) {
    goto LABEL_18;
  }
  uint64_t result = sub_10008E24C(result, a2);
  if (!result) {
    return 0LL;
  }
  uint64_t v5 = result;
  if ((result & 7) != 0) {
    goto LABEL_18;
  }
  sub_10005789C(result, 0);
  uint64_t result = sub_100061274();
  if (!result || (result & 7) != 0) {
    goto LABEL_18;
  }
  uint64_t result = sub_10008C2EC(result, v5, 0);
  BOOL v6 = result != 0;
  if (!result)
  {
LABEL_15:
    sub_1000578E8(v5, 0);
    return v6;
  }

  if ((result & 7) != 0) {
    goto LABEL_18;
  }
  if ((a3 + 8) < 0x10)
  {
    if ((((_BYTE)result + 0x80) & 7) == 0 && ((result + 1416) & 7) == 0)
    {
      *(_DWORD *)(result + 1416) = a3;
      goto LABEL_15;
    }

uint64_t sub_100070D90(uint64_t result, uint64_t a2, uint64_t a3, unsigned int a4)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_18;
  }
  if (!a2)
  {
    __break(0x5518u);
    goto LABEL_17;
  }

  uint64_t result = sub_100061274();
  if (!result || (result & 7) != 0) {
    goto LABEL_18;
  }
  uint64_t result = sub_10008E24C(result, a2);
  if (!result) {
    return result;
  }
  uint64_t v7 = result;
  if ((result & 7) != 0 || (sub_10005789C(result, 0), (uint64_t result = sub_100061274()) == 0) || (result & 7) != 0)
  {
LABEL_18:
    __break(0x5516u);
    return result;
  }

  uint64_t result = sub_10008C2EC(result, v7, 0);
  if (result)
  {
    uint64_t v8 = result;
    if ((result & 7) == 0)
    {
      LODWORD(result) = a4 & 0xFFFF8000;
      if ((a4 & 0xFFFF8000) == 0)
      {
        __int16 v9 = 120;
        sub_100062E78(v8, -1, &v9, 0LL, 0xFFFFu);
        sub_100071254(v8, a3, a4);
        return sub_1000578E8(v7, 0);
      }

uint64_t sub_100070E84(uint64_t result, uint64_t a2, void *a3, uint64_t a4)
{
  int v7 = result;
  if (a2)
  {
    if ((a2 & 7) != 0 || (sub_100057D18(a2, result), (uint64_t result = sub_1000579D4(a2)) == 0) || (result & 7) != 0)
    {
      __break(0x5516u);
      return result;
    }

    sub_10007F190(result, 0);
  }

  if (v7) {
    uint64_t v8 = 21LL;
  }
  else {
    uint64_t v8 = 22LL;
  }
  return sub_100087270(v8, a2, a3, a4);
}

uint64_t sub_100070F1C(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t result = sub_100061274();
  uint64_t v7 = result;
  if (a1) {
    goto LABEL_5;
  }
  if (!result || (result & 7) != 0) {
    goto LABEL_17;
  }
  uint64_t result = sub_10008E550(result, a2, 0);
  a1 = result;
  if (result)
  {
LABEL_5:
    if ((a1 & 7) == 0)
    {
      sub_10005789C(a1, 0);
      uint64_t result = sub_1000614B8(0LL, a1);
      if (result)
      {
        uint64_t v8 = result;
        if ((result & 7) != 0) {
          goto LABEL_17;
        }
        sub_100071254(result, a2, a3);
        sub_10006FED0(v8, a2, -1);
      }

      else
      {
        sub_1000CEAEC( 0,  4,  "%s:%d Cannot get GeneralLingo object pointer. Cannot SetPortIdentifyFail. handle=%hhx\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp",  9671,  a1);
      }

      uint64_t result = sub_1000578E8(a1, 0);
      char v9 = 0;
      BOOL v10 = (v7 & 7) != 0;
      if (v7) {
        goto LABEL_11;
      }
    }

uint64_t sub_1000710B8(uint64_t result, uint64_t a2, int a3)
{
  if (!result
    || (result & 7) != 0
    || ((result = *(void *)(result + 8)) != 0 ? (BOOL v3 = (result & 7) == 0) : (BOOL v3 = 0),
        !v3 || (uint64_t result = sub_1000579D4(result)) == 0 || (result & 7) != 0))
  {
    __break(0x5516u);
    goto LABEL_13;
  }

  uint64_t result = sub_10007F190(result, a3);
  if (result > 0x1F) {
LABEL_13:
  }
    __break(0x550Au);
  return result;
}

uint64_t sub_100071124(uint64_t result, uint64_t a2, int a3, _DWORD *a4)
{
  if (result)
  {
    uint64_t v4 = result;
    if ((result & 7) == 0)
    {
      if (!a2) {
        goto LABEL_28;
      }
      unsigned int v8 = 0;
      int v9 = 0;
      do
      {
        if (((1 << v8) & a3) != 0)
        {
          uint64_t result = sub_100061274();
          if (!result || (result & 7) != 0) {
            goto LABEL_29;
          }
          uint64_t result = (uint64_t)sub_10008C468((uint64_t *)result, v8);
          if (result)
          {
            if (result != a2)
            {
              uint64_t result = *(void *)(v4 + 8);
              if (!result) {
                goto LABEL_29;
              }
              if ((result & 7) != 0) {
                goto LABEL_29;
              }
              sub_10005789C(result, v8);
              uint64_t result = sub_100061274();
              if (!result || (result & 7) != 0) {
                goto LABEL_29;
              }
              uint64_t result = sub_10008C1FC(result, v8);
              if (!result)
              {
                __break(0x5518u);
LABEL_28:
                sub_1000D276C();
              }

              if ((result & 7) != 0) {
                goto LABEL_29;
              }
              int v10 = (*(uint64_t (**)(uint64_t))(*(void *)result + 96LL))(result);
              uint64_t result = *(void *)(v4 + 8);
              if (!result || (result & 7) != 0) {
                goto LABEL_29;
              }
              if (v10) {
                int v11 = 0;
              }
              else {
                int v11 = 1 << v8;
              }
              v9 |= v11;
              uint64_t result = sub_1000578E8(result, v8);
            }
          }
        }

        unsigned int v8 = (v8 + 1);
      }

      while (v8 < 0xF);
      if (!a4) {
        return v9 == 0;
      }
      if ((a4 & 3) == 0)
      {
        *a4 = v9;
        return v9 == 0;
      }
    }
  }

void sub_100071254(uint64_t a1, uint64_t a2, unsigned int a3)
{
  if (!a1 || (a1 & 7) != 0)
  {
LABEL_26:
    __break(0x5516u);
  }

  else
  {
    if ((a3 & 0xFFFF8000) != 0) {
      sub_1000D27F4(a3 & 0xFFFF8000);
    }
    if (a3)
    {
      if (*(void *)(a1 + 8))
      {
        unsigned int v6 = 1;
        while (1)
        {
          if (((a3 >> v6) & 1) != 0)
          {
            uint64_t v7 = *(void *)(a1 + 8);
            if (v7) {
              BOOL v8 = (*(void *)(a1 + 8) & 7LL) == 0;
            }
            else {
              BOOL v8 = 0;
            }
            if (!v8) {
              goto LABEL_26;
            }
            sub_10005789C(v7, v6);
            uint64_t v9 = sub_100061274();
            if (!v9 || (v9 & 7) != 0) {
              goto LABEL_26;
            }
            uint64_t v10 = sub_10008C2EC(v9, *(void *)(a1 + 8), v6);
            if (v10)
            {
              if ((v10 & 7) != 0) {
                goto LABEL_26;
              }
              (*(void (**)(uint64_t, uint64_t, void, uint64_t))(*(void *)v10 + 80LL))(v10, 8LL, 0LL, a2);
            }

            uint64_t v11 = *(void *)(a1 + 8);
            if (!v11 || (v11 & 7) != 0) {
              goto LABEL_26;
            }
            sub_1000578E8(v11, v6);
          }

          unsigned int v6 = (v6 + 1);
          if (v6 >= 0xF) {
            goto LABEL_24;
          }
        }
      }

      sub_1000CEAEC( 0,  4,  "%s:%d null handle, lingoesToDetachMask=%xh",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp",  9825,  a3);
    }

uint64_t sub_10007137C(uint64_t result, unsigned int a2)
{
  if (!result) {
    goto LABEL_52;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_52;
  }
  int v4 = sub_10007AC40(result);
  uint64_t result = sub_100061274();
  if (!result) {
    goto LABEL_52;
  }
  uint64_t v5 = result;
  if ((result & 7) != 0) {
    goto LABEL_52;
  }
  uint64_t result = *(void *)(v2 + 8);
  if (!result) {
    goto LABEL_52;
  }
  if ((result & 7) != 0) {
    goto LABEL_52;
  }
  uint64_t v6 = sub_10001864C(result);
  __int16 v7 = sub_10008C710(v5, v6);
  uint64_t result = *(void *)(v2 + 8);
  if (!result || (result & 7) != 0) {
    goto LABEL_52;
  }
  uint64_t result = sub_100057B7C(result);
  if (a2 >= 8) {
    goto LABEL_53;
  }
  if (v4 == a2) {
    return 0LL;
  }
  if (a2 > 3) {
    return 1LL;
  }
  int v8 = result;
  if (a2 == 1 && (v7 & 0x10) == 0 || (a2 & 0xFFFFFFFE) == 2 && (v7 & 0x2000) == 0) {
    return 16LL;
  }
  uint64_t result = *(void *)(v2 + 8);
  if (!result || (result & 7) != 0) {
    goto LABEL_52;
  }
  uint64_t v9 = sub_10001864C(result);
  uint64_t result = sub_100063CE8(v9);
  if ((_DWORD)result)
  {
    if (v8 == (char)v8)
    {
      uint64_t result = 17LL;
      if (v8 == -1 || v8 == 100) {
        return result;
      }
      goto LABEL_26;
    }

uint64_t sub_10007158C(uint64_t result, unsigned int a2, uint64_t a3, uint64_t a4, int a5)
{
  if (!result) {
    goto LABEL_28;
  }
  uint64_t v5 = result;
  if ((result & 7) != 0) {
    goto LABEL_28;
  }
  if (a2 + 32 < 0x40)
  {
    if (a2 || (_DWORD)a3) {
      goto LABEL_25;
    }
    uint64_t result = *(void *)(result + 8);
    if (!result || (result & 7) != 0) {
      goto LABEL_28;
    }
    uint64_t result = sub_100057A20(result);
    if (!(_DWORD)result) {
      goto LABEL_25;
    }
    if (!a4 || (a4 & 7) != 0) {
      goto LABEL_28;
    }
    int v10 = *(_DWORD *)a4;
    if (*(_DWORD *)a4 <= 0x1Fu)
    {
      if ((v10 - 2) >= 5)
      {
        if (v10 != 17) {
          goto LABEL_25;
        }
        uint64_t result = *(void *)(v5 + 8);
        if (!result || (result & 7) != 0) {
          goto LABEL_28;
        }
        uint64_t result = sub_100057D30(result);
        if ((result & 1) != 0) {
          return result;
        }
      }

      else
      {
        uint64_t result = *(void *)(v5 + 8);
        if (!result || (result & 7) != 0) {
          goto LABEL_28;
        }
        if (!sub_100057D30(result))
        {
          uint64_t result = *(void *)(v5 + 8);
          if (result)
          {
            if ((result & 7) == 0)
            {
              uint64_t result = sub_100056CF8(result);
              if (result)
              {
                unsigned int v11 = (void *)result;
                if ((result & 7) == 0)
                {
                  uint64_t v12 = *(void *)(v5 + 8);
                  uint64_t v13 = (*(uint64_t (**)(uint64_t))(*(void *)result + 384LL))(result);
                  sub_100070E84(1LL, v12, v11, v13);
                  goto LABEL_25;
                }
              }
            }
          }

void sub_1000716FC(uint64_t a1, uint64_t a2)
{
  if (!a1) {
    goto LABEL_412;
  }
  if ((a1 & 7) != 0) {
    goto LABEL_412;
  }
  if (!a2) {
    goto LABEL_412;
  }
  if ((a2 & 7) != 0) {
    goto LABEL_412;
  }
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = sub_100061274();
  if (!v5) {
    goto LABEL_412;
  }
  if ((v5 & 7) != 0) {
    goto LABEL_412;
  }
  unsigned int v154 = sub_10008C710(v5, v4);
  uint64_t v6 = sub_100061274();
  if (!v6) {
    goto LABEL_412;
  }
  if ((v6 & 7) != 0) {
    goto LABEL_412;
  }
  int v150 = sub_10008D184(v6, v4);
  uint64_t v7 = sub_100061274();
  if (!v7 || (v7 & 7) != 0) {
    goto LABEL_412;
  }
  uint64_t v8 = sub_100054F0C(v7, v4);
  *(void *)&__int128 v9 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v9 + 1) = 0xAAAAAAAAAAAAAAAALL;
  __int128 v167 = v9;
  __int128 v168 = v9;
  __int128 v166 = v9;
  __int16 v165 = -21846;
  unsigned int v164 = 0;
  int v10 = *(_DWORD *)(a1 + 1588);
  BOOL v11 = __CFADD__(v10, 1);
  int v12 = v10 + 1;
  if (v11) {
    goto LABEL_414;
  }
  uint64_t v13 = (void *)v8;
  *(_DWORD *)(a1 + 1588) = v12;
  uint64_t v14 = *(void *)(a1 + 8);
  if (!v14 || (v14 & 7) != 0) {
    goto LABEL_412;
  }
  unsigned int AccessoryID = sub_100057B7C(v14);
  unsigned int v15 = AccessoryID;
  if (AccessoryID != -1) {
    goto LABEL_16;
  }
  if (!v4 || (v4 & 7) != 0) {
    goto LABEL_412;
  }
  uint64_t v17 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 64LL))(v4);
  unsigned int AccessoryID = IOAccessoryManagerGetAccessoryID();
  unsigned int v15 = AccessoryID;
  if (AccessoryID < 0x10 || AccessoryID == 100)
  {
LABEL_16:
    LODWORD(v166) = 1;
    int v16 = v15;
  }

  else
  {
LABEL_24:
    LODWORD(v166) = 1;
    int v16 = 16;
    unsigned int AccessoryID = -1;
  }

  DWORD1(v166) = v16;
  *((void *)&v166 + 1) = v4;
  *(void *)&__int128 v167 = 0LL;
  *((void *)&v167 + 1) = *(void *)(a1 + 8);
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 1280));
  __int16 v165 = 112;
  sub_100062E78(a1, -1, &v165, 0LL, 0xFFFFu);
  __int16 v165 = 113;
  sub_100062E78(a1, -1, &v165, 0LL, 0xFFFFu);
  __int16 v165 = 115;
  sub_100062E78(a1, -1, &v165, 0LL, 0xFFFFu);
  v160 = (pthread_mutex_t *)(a1 + 1280);
  pthread_mutex_unlock((pthread_mutex_t *)(a1 + 1280));
  __int16 v165 = 20;
  sub_100062E78(a1, -1, &v165, 0LL, 0xFFFFu);
  __int16 v165 = 23;
  sub_100062E78(a1, -1, &v165, 0LL, 0xFFFFu);
  __int16 v165 = 116;
  sub_100062E78(a1, -1, &v165, 0LL, 0xFFFFu);
  sub_10006FDA8(a1);
  __int16 v165 = 0;
  sub_100062E78(a1, -1, &v165, 0LL, 0xFFFFu);
  uint64_t v18 = sub_1000BE638();
  if (!v18) {
    goto LABEL_412;
  }
  uint64_t v19 = v18;
  if ((v18 & 7) != 0) {
    goto LABEL_412;
  }
  uint64_t v20 = sub_1000C0034(*(void *)(a1 + 8));
  (*(void (**)(uint64_t, uint64_t))(*(void *)v19 + 136LL))(v19, v20);
  uint64_t v21 = sub_100061274();
  if (!v21 || (v21 & 7) != 0) {
    goto LABEL_412;
  }
  sub_100054CE8((unsigned __int16 *)v21, (void *)v4);
  if (v13)
  {
    uint64_t v22 = sub_100061274();
    if (!v22) {
      goto LABEL_412;
    }
    if ((v22 & 7) != 0) {
      goto LABEL_412;
    }
    unsigned int v23 = sub_10008C710(v22, (uint64_t)v13);
    uint64_t v24 = sub_100061274();
    if (!v24) {
      goto LABEL_412;
    }
    if ((v24 & 7) != 0) {
      goto LABEL_412;
    }
    sub_100054CE8((unsigned __int16 *)v24, v13);
    uint64_t v25 = sub_100061274();
    if (!v25) {
      goto LABEL_412;
    }
    if ((v25 & 7) != 0) {
      goto LABEL_412;
    }
    sub_10008C82C(v25, (uint64_t)v13);
    sub_100070CB0(a1, *(void *)(a1 + 8), -1);
    uint64_t v26 = sub_100061274();
    if (!v26 || (v26 & 7) != 0) {
      goto LABEL_412;
    }
    sub_100054874(v26, (uint64_t)v13, -1);
    if (v23)
    {
      LOWORD(v163) = 120;
      sub_100062E78(a1, -1, &v163, 0LL, 0xFFFFu);
      sub_100070D90(a1, *(void *)(a1 + 8), (uint64_t)v13, v23);
    }
  }

  if (*(unsigned __int8 *)(a1 + 2212) > 1u)
  {
LABEL_413:
    __break(0x550Au);
    goto LABEL_414;
  }

  if (!*(_BYTE *)(a1 + 2212))
  {
    uint64_t v27 = *(void *)(a1 + 8);
    if (!v27 || (v27 & 7) != 0) {
      goto LABEL_412;
    }
  }

  sub_10006FDE8(a1, 0LL, 0);
  int v157 = *(unsigned __int16 *)(a2 + 128);
  if (v157 != 12)
  {
    LODWORD(v33) = 0;
    BOOL v148 = 0;
    BOOL v155 = 0;
    int v156 = 0;
    char v153 = 0;
    v158 = 0LL;
    int v159 = 0;
    int v162 = -1;
    int v151 = 1;
    int v34 = 4;
    goto LABEL_277;
  }

  uint64_t v29 = *(unsigned int **)(a2 + 24);
  if ((unint64_t)v29 >= 0xFFFFFFFFFFFFFFF8LL)
  {
LABEL_414:
    __break(0x5500u);
    goto LABEL_415;
  }

  unsigned int v30 = v29[2];
  unsigned int v31 = bswap32(v30);
  BOOL v32 = v30 && v31 < 0x200 || (v31 & 0xF000) == 53248;
  unsigned int v152 = v31 & 0xFFFFFF00;
  if (!v29) {
    goto LABEL_412;
  }
  int v162 = v31;
  BOOL v148 = (v31 & 0xFFFFFF00) == 512;
  LODWORD(v33) = bswap32(*v29);
  unsigned int v35 = v29[1];
  char v36 = !v32;
  if ((v33 & 0x40) == 0) {
    char v36 = 1;
  }
  if ((v36 & 1) != 0) {
    goto LABEL_60;
  }
  uint64_t v37 = sub_10002ACC4();
  if (!v37) {
    goto LABEL_62;
  }
  if ((v37 & 7) != 0) {
    goto LABEL_412;
  }
  if (((*(uint64_t (**)(uint64_t))(*(void *)v37 + 344LL))(v37) & 1) != 0)
  {
LABEL_60:
    int v38 = 0;
    if (!v4) {
      goto LABEL_412;
    }
  }

  else
  {
LABEL_62:
    int v38 = 1;
    if (!v4) {
      goto LABEL_412;
    }
  }

  if ((v4 & 7) != 0) {
    goto LABEL_412;
  }
  if ((v33 & 0x40) != 0)
  {
    uint64_t v39 = *(void *)(v4 + 40);
    if (!v39 || (v39 & 7) != 0) {
      goto LABEL_412;
    }
  }

  if (v30 == 1174405120)
  {
    uint64_t v40 = sub_100061274();
    if (!v40 || (v40 & 7) != 0) {
      goto LABEL_412;
    }
    if ((dword_10011D098 & 0x200) != 0) {
      LODWORD(v33) = v33 & 1;
    }
  }

  unsigned int v41 = bswap32(v35);
  v158 = (void *)sub_10006F18C(a1, v41);
  if (*(_BYTE *)(a1 + 2368))
  {
    int v156 = 0;
    goto LABEL_89;
  }

  int v42 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 280LL))(v4);
  int v43 = 0;
  if (v152 == 512 || !v42) {
    goto LABEL_88;
  }
  if (!(v30 | v35 | v33 & 0xFFFFFFFA))
  {
    int v43 = 2;
LABEL_88:
    int v156 = v43;
    goto LABEL_89;
  }

  uint64_t v44 = *(void *)(a1 + 8);
  if (!v44 || (v44 & 7) != 0) {
    goto LABEL_412;
  }
  if (!sub_100057D30(v44))
  {
    uint64_t v46 = *(void *)(a1 + 8);
    uint64_t v47 = (*(uint64_t (**)(void *))(*(void *)v45 + 384LL))(v45);
    sub_100070E84(1LL, v46, (void *)v4, v47);
  }

  sub_100070F1C(*(void *)(a1 + 8), v4, 0);
  int v156 = 0;
  int v38 = 1;
LABEL_89:
  int v159 = v41 & 3;
  else {
    int v48 = 32766;
  }
  if (!v158)
  {
    if ((*(unsigned int (**)(uint64_t))(*(void *)v4 + 232LL))(v4))
    {
      int v147 = 0;
      char v153 = 0;
      if (v30) {
        BOOL v49 = v152 == 512;
      }
      else {
        BOOL v49 = 1;
      }
      if (!v49) {
        int v38 = 1;
      }
      goto LABEL_106;
    }

LABEL_277:
  sub_10006EA98(a1, v4, 1, 1);
  sub_100070C38(a1, v106, 1LL);
  int v107 = 0;
LABEL_278:
  sub_1000ABE78(a2, v4, 0, 0LL, 2, *(_DWORD *)(a2 + 68), v34, 0x13u, 0, 255, 0LL, 0, 0, 0);
  sub_1000AB4C4(*(void *)(a1 + 8), a2, 0, 1u);
  pthread_mutex_lock(v160);
  if (!v4 || (v4 & 7) != 0) {
    goto LABEL_412;
  }
  else {
    int v108 = AccessoryID;
  }
  sub_10006EBD4(a1, v4);
  if (v108 == -1) {
    int v109 = 16;
  }
  else {
    int v109 = v108;
  }
  DWORD1(v166) = v109;
  if (sub_100063CE8(v4) && (v108 == 100 || v108 == -1))
  {
    *(_BYTE *)(a1 + 1533) = 1;
    if (sub_100062D14((void *)a1, -1, 115, 0LL, 2000)) {
      sub_1000CEAEC( 0,  4,  "%s:%d SetCmdTimeout failed!\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp",  2188);
    }
  }

  if (v157 == 12)
  {
    if (*(_BYTE *)(a1 + 1533))
    {
      if ((a1 & 7) != 0) {
        goto LABEL_412;
      }
      *(_DWORD *)(a1 + 1536) = v166;
      if ((((_BYTE)a1 + 4) & 3) != 0) {
        goto LABEL_412;
      }
      *(_DWORD *)(a1 + 1540) = 100;
      if ((((_BYTE)a1 + 8) & 7) != 0) {
        goto LABEL_412;
      }
      *(void *)(a1 + 1544) = *((void *)&v166 + 1);
      if ((((_BYTE)a1 + 16) & 7) != 0) {
        goto LABEL_412;
      }
      *(_DWORD *)(a1 + 1552) = v167;
      if ((((_BYTE)a1 + 20) & 3) != 0) {
        goto LABEL_412;
      }
      *(_DWORD *)(a1 + 1556) = DWORD1(v167);
      if (((a1 + 1560) & 7) != 0) {
        goto LABEL_412;
      }
      *(void *)(a1 + 1560) = *((void *)&v167 + 1);
    }

    else if (v151)
    {
      sub_10007158C(a1, 0, 0LL, (uint64_t)&v166, 48);
    }
  }

  if (v107)
  {
    if (v158)
    {
      uint64_t v110 = sub_100061274();
      if (!v110 || (v110 & 7) != 0) {
        goto LABEL_412;
      }
      uint64_t v111 = sub_10008E550(v110, (uint64_t)v158, 0);
      if (v111)
      {
        uint64_t v112 = v111;
        uint64_t v113 = sub_100061274();
        if (!v113) {
          goto LABEL_412;
        }
        if ((v113 & 7) != 0) {
          goto LABEL_412;
        }
        sub_10008E1F0(v113, *(void *)(a1 + 8), v112);
        uint64_t v114 = sub_100061274();
        if (!v114 || (v114 & 7) != 0) {
          goto LABEL_412;
        }
        sub_10008E1F0(v114, v112, *(void *)(a1 + 8));
      }

      if (v159 == 2)
      {
        uint64_t v115 = sub_100061274();
        if (!v115 || (v115 & 7) != 0) {
          goto LABEL_412;
        }
        sub_100054F98(v115, v4, (uint64_t)v158);
      }
    }

    v116 = (unsigned int *)(a1 + 1528);
    if (((a1 + 1528) & 7) != 0) {
      goto LABEL_412;
    }
    if (*v116 > 7) {
      goto LABEL_413;
    }
    if (v156 != 2 && *v116 > 3) {
      goto LABEL_373;
    }
    int v117 = v162;
    int v118 = v162 | v33 & 0xFFFFFFFA;
    if (v118)
    {
      int v119 = sub_100072F8C(a1, v162);
      unsigned int v120 = *(_DWORD *)(a1 + 1528);
      if (v120 > 7) {
        goto LABEL_413;
      }
      if (v119) {
        unsigned int v121 = 3;
      }
      else {
        unsigned int v121 = 4;
      }
      if (v121 < v120) {
        goto LABEL_373;
      }
      int v122 = v119 ^ 1;
      int v117 = v162;
    }

    else
    {
      int v122 = 0;
      unsigned int v121 = 2;
    }

    __int16 v165 = 113;
    unint64_t v163 = 0xAAAAAAAAAAAAAAAALL;
    if (v108 > 15 || v108 == -1)
    {
      if (v108 == 100 || v108 == -1)
      {
        if (((a1 + 1584) & 7) != 0) {
          goto LABEL_412;
        }
        *(_DWORD *)(a1 + 1584) = 1;
      }
    }

    else if (v118 && (v108 & 0x80000000) == 0 && ((1 << v108) & 0xE400) != 0)
    {
      BOOL v125 = sub_100072FE8(v117, v33);
      if (!v148)
      {
        int v126 = v125;
      }

      unsigned int *v116 = v121;
LABEL_350:
      sub_100062E78(a1, -1, &v165, &v163, 0xFFFFu);
      if (v122)
      {
        if (*v116 <= 7)
        {
          if (*v116 == 4)
          {
            if (((a1 + 1532) & 3) != 0) {
              goto LABEL_412;
            }
            *(_BYTE *)(a1 + 1532) = 1;
          }

          LODWORD(v166) = 17;
          DWORD1(v166) = v109;
          sub_10007158C(a1, 0, 0LL, (uint64_t)&v166, 48);
          goto LABEL_373;
        }

        goto LABEL_413;
      }

LABEL_373:
      pthread_mutex_unlock(v160);
      if (v159 == 2)
      {
        sub_10007304C(a1, v4);
        return;
      }

      if ((v153 & 1) == 0)
      {
        if (v159 == 1) {
          int v134 = 2;
        }
        else {
          int v134 = -1;
        }
        sub_10006FED0(a1, v4, v134);
        goto LABEL_382;
      }

      if ((((_BYTE)a1 - 96) & 7) == 0)
      {
        *(_WORD *)(a1 + 1440) = 0;
        sub_10006FED0(a1, v4, 0);
        sub_10006FED0(a1, v4, 3);
        sub_10006FED0(a1, v4, 4);
        sub_100062D14((void *)a1, -1, 120, 0LL, 500);
LABEL_382:
        sub_1000732B0(a1);
        return;
      }

LABEL_412:
      __break(0x5516u);
      goto LABEL_413;
    }

    unsigned int *v116 = v121;
    if (!v118)
    {
      if (((a1 + 1588) & 3) != 0) {
        goto LABEL_412;
      }
      if (*(_DWORD *)(a1 + 1588) > 0xCu) {
        int v133 = 1;
      }
      else {
        int v133 = 800;
      }
      sub_100062D14((void *)a1, -1, v165, 0LL, v133);
      goto LABEL_373;
    }

    goto LABEL_350;
  }

  pthread_mutex_unlock(v160);
  uint64_t v123 = sub_100061274();
  if (!v123 || (v123 & 7) != 0) {
    goto LABEL_412;
  }
  if (v155) {
    int v124 = v162;
  }
  else {
    int v124 = 0;
  }
  sub_10008D008(v123, v4, v124);
  sub_100070F1C(*(void *)(a1 + 8), v4, 0);
}

uint64_t sub_100072CCC(uint64_t result, int a2)
{
  if (result)
  {
    uint64_t v2 = (void *)result;
    if ((result & 7) == 0)
    {
      uint64_t v3 = *(void *)(result + 32);
      if (!v3) {
        return 0LL;
      }
      if ((v3 & 7) != 0 || (((_DWORD)v3 + 58) & 1) != 0) {
        goto LABEL_26;
      }
      if (*(_BYTE *)(v3 + 58)) {
        return 0LL;
      }
      uint64_t v4 = (uint64_t *)(v3 + 40);
      if ((v4 & 7) == 0)
      {
        uint64_t v6 = *v4;
        uint64_t result = sub_1000B6CE0();
        if (result)
        {
          if ((result & 7) == 0)
          {
            sub_10008E0CC(result, (uint64_t)v2, 0);
            int v7 = (*(uint64_t (**)(void *, void))(*v2 + 16LL))(v2, 0LL);
            uint64_t result = sub_1000ABB10((uint64_t)v2, 0, 0LL, 0, v7, 0LL, 0);
            if (result)
            {
              uint64_t v8 = (_DWORD *)result;
              if (v6)
              {
                uint64_t result = sub_1000AB4C4(v6, result, a2, 1u);
                if (!(_DWORD)result)
                {
LABEL_21:
                  uint64_t v11 = v2[4];
                  if (v11)
                  {
                    if ((v11 & 7) == 0)
                    {
                      int v12 = (_BYTE *)(v11 + 58);
                      if ((v12 & 1) == 0)
                      {
                        uint64_t result = 1LL;
                        *int v12 = 1;
                        return result;
                      }
                    }
                  }

                  goto LABEL_26;
                }
              }

              uint64_t result = sub_10002ACC4();
              if (result && ((result | v8) & 7) == 0)
              {
                if ((v8[16] + 32) < 0x40)
                {
                  (*(void (**)(uint64_t))(*(void *)result + 280LL))(result);
                  sub_1000AC59C((uint64_t)v8);
                  sub_10005F130((uint64_t)v8, 1u, a2);
                  uint64_t v9 = (*(uint64_t (**)(_DWORD *))(*(void *)v8 + 32LL))(v8);
                  uint64_t result = (*(uint64_t (**)(void *, _DWORD *, uint64_t))(*v2 + 24LL))(v2, v8, v9);
                  if ((_DWORD)result)
                  {
                    int v10 = (const char *)(*(uint64_t (**)(void *))(*v2 + 208LL))(v2);
                    sub_1000CEAEC( 0,  4,  "%s:%d Could not send RequestIdentify to port %s\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp",  19374,  v10);
                    return 0LL;
                  }

                  goto LABEL_21;
                }

uint64_t sub_100072EAC(uint64_t result, uint64_t a2, uint64_t a3, int a4)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_19;
  }
  if (!a2)
  {
    __break(0x5518u);
LABEL_19:
    __break(0x5516u);
    goto LABEL_20;
  }

  uint64_t result = sub_100061274();
  if (!result || (result & 7) != 0) {
    goto LABEL_19;
  }
  uint64_t result = sub_10008E24C(result, a2);
  if (!result) {
    return 2LL;
  }
  uint64_t v7 = result;
  if ((result & 7) != 0) {
    goto LABEL_19;
  }
  sub_10005789C(result, 0);
  uint64_t result = sub_100061274();
  if (!result || (result & 7) != 0) {
    goto LABEL_19;
  }
  uint64_t result = sub_10008C2EC(result, v7, 0);
  if (!result)
  {
    uint64_t v8 = 2LL;
    goto LABEL_16;
  }

  if ((result & 7) != 0) {
    goto LABEL_19;
  }
  if ((a4 + 8) <= 0xF)
  {
    uint64_t v8 = sub_10006FED0(result, a3, a4);
LABEL_16:
    sub_1000578E8(v7, 0);
    return v8;
  }

uint64_t sub_100072F8C(uint64_t result, int a2)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    return result;
  }

  uint64_t result = 0LL;
  if (a2 <= 473)
  {
    if (a2 != 70 && a2 != 131 && a2 != 134) {
      return result;
    }
    return 1LL;
  }

  if (a2 == 474 || a2 == 53504 || a2 == 512) {
    return 1LL;
  }
  return result;
}

BOOL sub_100072FE8(int a1, int a2)
{
  BOOL result = 1LL;
  if (a1 <= 130)
  {
    return 0LL;
  }

  if (a1 == 131 || a1 == 134) {
    return 0LL;
  }
  return result;
}

uint64_t sub_10007304C(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_35;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_35;
  }
  BOOL result = sub_10004783C();
  if (!result || (result & 7) != 0) {
    goto LABEL_35;
  }
  if (((*(uint64_t (**)(uint64_t))(*(void *)result + 744LL))(result) & 1) != 0)
  {
LABEL_6:
    sub_10006FED0(v2, a2, 0);
    sub_10006FED0(v2, a2, 3);
    sub_10006FED0(v2, a2, 4);
    sub_10006FED0(v2, a2, 6);
    return 0LL;
  }

  BOOL result = sub_10004783C();
  if (!result || (result & 7) != 0) {
    goto LABEL_35;
  }
  BOOL result = (*(uint64_t (**)(uint64_t))(*(void *)result + 752LL))(result);
  if ((_DWORD)result)
  {
    if (!a2 || (a2 & 7) != 0) {
      goto LABEL_35;
    }
    BOOL result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 216LL))(a2);
    if ((_DWORD)result == 1) {
      goto LABEL_6;
    }
  }

  else if (!a2)
  {
LABEL_34:
    __break(0x5518u);
    goto LABEL_35;
  }

  if (((v2 + 1416) & 7) != 0)
  {
LABEL_35:
    __break(0x5516u);
    goto LABEL_36;
  }

  unsigned int v5 = *(_DWORD *)(v2 + 1416);
  if (v5 + 8 > 0xF) {
    goto LABEL_36;
  }
  if (v5 > 5 || ((1 << v5) & 0x39) == 0) {
    sub_10006FED0(v2, a2, 0);
  }
  BOOL result = sub_10006FED0(v2, a2, 3);
  if ((_DWORD)result)
  {
    char v9 = 7;
    if ((a2 & 7) == 0)
    {
      uint64_t v4 = result;
      int v6 = (*(uint64_t (**)(uint64_t, void))(*(void *)a2 + 16LL))(a2, 0LL);
      BOOL result = sub_1000ABB10(a2, 0, 0LL, 25, v6, &v9, 1u);
      if (result)
      {
        sub_1000AB4C4(*(void *)(v2 + 8), result, 0, 1u);
        return v4;
      }

      goto LABEL_34;
    }

    goto LABEL_35;
  }

  if ((a2 & 7) != 0) {
    goto LABEL_35;
  }
  int v7 = (*(uint64_t (**)(uint64_t, void))(*(void *)a2 + 16LL))(a2, 0LL);
  BOOL result = sub_1000ABB10(a2, 0, 0LL, 20, v7, 0LL, 0);
  if (((v2 + 1512) & 7) != 0) {
    goto LABEL_35;
  }
  if (*(unsigned __int8 *)(v2 + 1512) > 1u)
  {
LABEL_36:
    __break(0x550Au);
    goto LABEL_37;
  }

  if (!*(_BYTE *)(v2 + 1512))
  {
LABEL_31:
    if (result)
    {
      if ((((_BYTE)v2 - 108) & 3) == 0) {
        return sub_100062BF8(v2, result, *(_DWORD *)(v2 + 1428), 0, 0LL);
      }
      goto LABEL_35;
    }

    goto LABEL_34;
  }

  int v8 = *(unsigned __int8 *)(v2 + 1513);
  if (v8 != 255)
  {
    *(_BYTE *)(v2 + 1513) = v8 + 1;
    goto LABEL_31;
  }

void sub_1000732B0(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0 || ((a1 + 1976) & 7) != 0) {
    goto LABEL_20;
  }
  if (*(unsigned __int8 *)(a1 + 1976) >= 2u)
  {
LABEL_21:
    __break(0x550Au);
    return;
  }

  if (*(_BYTE *)(a1 + 1976)) {
    return;
  }
  if (((a1 + 1968) & 7) != 0) {
    goto LABEL_20;
  }
  if (*(_DWORD *)(a1 + 1968)) {
    return;
  }
  char v10 = 0;
  uint64_t v2 = *(void *)(a1 + 8);
  if (!v2) {
    goto LABEL_20;
  }
  if ((v2 & 7) != 0) {
    goto LABEL_20;
  }
  uint64_t v3 = sub_10001864C(v2);
  if (!v3) {
    goto LABEL_20;
  }
  uint64_t v4 = v3;
  if ((v3 & 7) != 0) {
    goto LABEL_20;
  }
  int v5 = (*(uint64_t (**)(uint64_t, void))(*(void *)v3 + 16LL))(v3, 0LL);
  uint64_t v6 = sub_1000ABB10(v4, 0, 0LL, 39, v5, &v10, 1u);
  if (!v6) {
    return;
  }
  uint64_t v7 = v6;
  sub_1000612C4(*(void *)(a1 + 8));
  if (!v8 || (uint64_t v9 = v8, (v8 & 7) != 0) || ((a1 + 1980) & 3) != 0)
  {
LABEL_20:
    __break(0x5516u);
    goto LABEL_21;
  }

  sub_10005EB3C(v8, *(_DWORD *)(a1 + 1980));
}

void sub_1000733E8(uint64_t a1, uint64_t a2)
{
  if (!a1) {
    goto LABEL_212;
  }
  uint64_t v2 = a1;
  if ((a1 & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_212;
  }
  unsigned int v6 = *(unsigned __int16 *)(a2 + 128);
  uint64_t v3 = *(void *)(a2 + 8);
  int v4 = *(unsigned __int16 *)(a2 + 68);
  unsigned __int8 v92 = 4;
  if (!v3) {
    sub_1000D276C();
  }
  uint64_t v7 = sub_100061274();
  if (!v7) {
    goto LABEL_212;
  }
  if ((v7 & 7) != 0) {
    goto LABEL_212;
  }
  int v8 = sub_10008D184(v7, v3);
  __int16 v91 = 5380;
  *(void *)&__int128 v9 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v9 + 1) = 0xAAAAAAAAAAAAAAAALL;
  __buf[14] = v9;
  __buf[15] = v9;
  __buf[12] = v9;
  __buf[13] = v9;
  __buf[10] = v9;
  __buf[11] = v9;
  __buf[8] = v9;
  __buf[9] = v9;
  __buf[6] = v9;
  __buf[7] = v9;
  __buf[4] = v9;
  __buf[5] = v9;
  __buf[2] = v9;
  __buf[3] = v9;
  __buf[0] = v9;
  __buf[1] = v9;
  LODWORD(v10) = kdebug_trace(731139640LL, 0LL, 0LL, 0LL, 0LL);
  if (((v2 + 1416) & 7) != 0) {
    goto LABEL_212;
  }
  int v11 = *(_DWORD *)(v2 + 1416);
  if (v11 != 3)
  {
    unsigned __int8 v92 = 7;
    if (((v2 + 1440) & 7) != 0) {
      goto LABEL_212;
    }
    if (*(_BYTE *)(v2 + 1440) == 2 && *(_BYTE *)(v2 + 1443) == 7)
    {
      if (((v2 + 1444) & 3) != 0) {
        goto LABEL_212;
      }
      if (*(_BYTE *)(v2 + 1444) == 7)
      {
        int v15 = *(unsigned __int8 *)(v2 + 1445);
        if (v15 == 255) {
          goto LABEL_219;
        }
        char v16 = v15 + 1;
        *(_BYTE *)(v2 + 1445) = v16;
        if ((v16 & 0xFC) == 0)
        {
          BOOL v17 = 0;
          unsigned __int8 v92 = 4;
          LOBYTE(v91) = 4;
          int v28 = 2;
          goto LABEL_79;
        }
      }
    }

    BOOL v17 = 0;
    LOBYTE(v91) = 7;
LABEL_46:
    unsigned int v27 = 1;
    int v28 = 22;
    goto LABEL_47;
  }

  int v12 = *(unsigned __int8 **)(a2 + 24);
  size_t __n = 0LL;
  __int16 v89 = 20;
  unsigned __int8 v92 = 8;
  if (v6 < 2)
  {
    int v13 = 255;
    int v14 = 255;
  }

  else
  {
    if (!v12) {
      goto LABEL_212;
    }
    int v13 = *v12;
    int v14 = v12[1];
  }

  if (((v2 + 1440) & 7) != 0) {
    goto LABEL_212;
  }
  int v18 = *(unsigned __int8 *)(v2 + 1440);
  if (v18 != v13 || *(unsigned __int8 *)(v2 + 1441) != v14)
  {
    syslog( 3,  "%s ERROR: Auth version mismatch, expected major.minor: %02X.%02X, received %02X.%02X\n",  "HandleRetDevAuthenticationInfo",  v18,  *(unsigned __int8 *)(v2 + 1441),  v13,  v14);
    int v26 = 0;
LABEL_44:
    BOOL v17 = v26 != 0;
LABEL_45:
    LOBYTE(v91) = v92;
    goto LABEL_46;
  }

  uint64_t v19 = sub_100061274();
  if (!v19 || (v19 & 7) != 0) {
    goto LABEL_212;
  }
  int v20 = sub_100054BE0(v19, v3, v13, v14, (uint64_t *)&__n);
  int v21 = v20;
  if (*(_BYTE *)(v2 + 2368)) {
    goto LABEL_51;
  }
  if ((v3 & 7) != 0) {
    goto LABEL_212;
  }
  if (!(*(unsigned int (**)(uint64_t))(*(void *)v3 + 280LL))(v3))
  {
LABEL_51:
    if (v21)
    {
LABEL_77:
      int v26 = 0;
      goto LABEL_44;
    }
  }

  else if (v13 != 2 || v14)
  {
    uint64_t v22 = *(void *)(v2 + 8);
    if (!v22 || (v22 & 7) != 0) {
      goto LABEL_212;
    }
    if (!sub_100057D30(v22))
    {
      uint64_t v24 = *(void *)(v2 + 8);
      uint64_t v25 = (*(uint64_t (**)(void *))(*(void *)v23 + 384LL))(v23);
      sub_100070E84(1LL, v24, (void *)v3, v25);
    }

    if ((((_DWORD)v2 + 1438) & 1) != 0)
    {
LABEL_212:
      while (1)
      {
        __break(0x5516u);
LABEL_213:
        __break(0x550Au);
LABEL_214:
        pthread_mutex_unlock(v78);
        sub_10006FED0(v2, v3, -1);
        pthread_mutex_lock(v78);
        int v75 = 0;
        uint64_t v33 = &v91;
        unsigned __int8 v34 = 2;
LABEL_216:
        _Block_object_dispose(&v83, 8);
        pthread_mutex_unlock(v78);
        if (!v75) {
          goto LABEL_50;
        }
LABEL_70:
        sub_10006FED0(v2, v3, 5);
        uint64_t v10 = sub_1000ABB10(v3, 0, 0LL, 23, v4, v33, v34);
        if (!v10) {
          goto LABEL_154;
        }
        if ((((_BYTE)v2 - 104) & 7) == 0)
        {
          sub_100062BF8(v2, v10, *(_DWORD *)(v2 + 1432), 0, 0LL);
          goto LABEL_50;
        }
      }
    }

    *(_BYTE *)(v2 + 1438) = 0;
    sub_10006FED0(v2, v3, 2);
    sub_10006FED0(v2, v3, 0);
    sub_100070F1C(*(void *)(v2 + 8), v3, 0);
    int v26 = 1;
    goto LABEL_44;
  }

  uint64_t v29 = sub_100061274();
  if (!v29 || (v29 & 7) != 0) {
    goto LABEL_212;
  }
  LODWORD(v10) = sub_10008CBE4(v29, v3);
  int v30 = v10 & 3;
  if (v6 == 2 && v13 == 1)
  {
    unsigned __int8 v92 = 0;
    sub_1000AC324(a2, v3, 0, 0LL, 22, v4, &v92, 1u);
    sub_1000AB4C4(*(void *)(v2 + 8), a2, 0, 1u);
    LODWORD(v10) = sub_10006FED0(v2, v3, 4);
    if (v30 == 2)
    {
      if ((((_DWORD)v2 + 1978) & 1) != 0) {
        goto LABEL_212;
      }
      if (v8 != 56 && !*(_BYTE *)(v2 + 1978)) {
        sub_1000732B0(v2);
      }
    }

    if (__n - 16 > 4)
    {
LABEL_154:
      __break(0x5518u);
    }

    else
    {
      if ((((_DWORD)v2 + 1446) & 1) != 0) {
        goto LABEL_212;
      }
      *(_BYTE *)(v2 + 1446) = __n;
      uint64_t v31 = sub_100061274();
      if (!v31 || (v31 & 7) != 0) {
        goto LABEL_212;
      }
      sub_100055AD0(v31, v3, __n, __buf);
      if (!(_DWORD)v10)
      {
        if ((((_DWORD)v2 + 1438) & 1) != 0) {
          goto LABEL_212;
        }
        char v32 = __n;
        if (__n >= 0x100) {
          goto LABEL_220;
        }
        uint64_t v33 = (__int16 *)__buf;
        if (!__CFADD__(__buf, __n))
        {
          *((_BYTE *)__buf + __n) = *(_BYTE *)(v2 + 1438);
          unsigned __int8 v34 = v32 + 1;
          goto LABEL_70;
        }

        goto LABEL_218;
      }
    }

    sub_1000D280C(v10);
  }

  if (v6 - 5 > 0x7FF || v13 != 2) {
    goto LABEL_77;
  }
  if ((unint64_t)v12 > 0xFFFFFFFFFFFFFFFCLL)
  {
LABEL_218:
    __break(0x5513u);
    goto LABEL_219;
  }

  unsigned int v35 = v12[2];
  unsigned int v36 = v12[3];
  if (v35 > v36) {
    goto LABEL_77;
  }
  unsigned int v77 = (uint64_t *)(v2 + 1408);
  uint64_t v78 = (pthread_mutex_t *)(v2 + 1448);
  pthread_mutex_lock((pthread_mutex_t *)(v2 + 1448));
  if (!v35 && !*(_BYTE *)(v2 + 1443))
  {
    int v76 = (_BYTE *)(v2 + 1444);
    if (((v2 + 1444) & 3) != 0) {
      goto LABEL_212;
    }
    if (!*v76)
    {
      uint64_t v10 = *v77;
      if (!*v77)
      {
        uint64_t v40 = (uint64_t)operator new(0x90CuLL);
        if ((v40 & 0xF) != 0) {
          goto LABEL_212;
        }
        uint64_t v10 = sub_100055CB0(v40);
        *unsigned int v77 = v10;
      }

      if ((v10 & 3) != 0) {
        goto LABEL_212;
      }
      if ((unint64_t)v12 <= 0xFFFFFFFFFFFFFFFBLL)
      {
        if ((v6 - 4) >> 16) {
          goto LABEL_219;
        }
        LODWORD(v10) = sub_100055DF4(v10, v12 + 4, (unsigned __int16)(v6 - 4));
        if ((_DWORD)v10)
        {
          int v39 = v92;
        }

        else
        {
          int v39 = 0;
          unsigned __int8 v92 = 0;
          *int v76 = v36;
        }

        goto LABEL_111;
      }

      goto LABEL_218;
    }
  }

  if (((v2 + 1444) & 3) != 0) {
    goto LABEL_212;
  }
  uint64_t v10 = *v77;
  if (!*v77)
  {
LABEL_94:
    char v37 = 7;
    goto LABEL_95;
  }

  if ((v10 & 3) != 0) {
    goto LABEL_212;
  }
  if ((v6 - 4) >> 16) {
    goto LABEL_219;
  }
  LODWORD(v10) = sub_100055E48(v10, v12 + 4, (unsigned __int16)(v6 - 4));
  if ((_DWORD)v10)
  {
    char v37 = 4;
LABEL_95:
    unsigned __int8 v92 = v37;
LABEL_96:
    int v28 = 22;
    int v38 = 1;
    goto LABEL_97;
  }

  int v39 = 0;
  unsigned __int8 v92 = 0;
LABEL_111:
  if (v39 || v35 != v36)
  {
    if (v39) {
      goto LABEL_96;
    }
    if (v35 != 255)
    {
      int v38 = 0;
      *(_BYTE *)(v2 + 1443) = v35 + 1;
      int v28 = 2;
LABEL_97:
      pthread_mutex_unlock(v78);
      BOOL v17 = 0;
      LOBYTE(v91) = v92;
      if (v38) {
        goto LABEL_46;
      }
LABEL_79:
      unsigned int v27 = 2;
LABEL_47:
      sub_1000AC324(a2, v3, 0, 0LL, v28, v4, &v91, v27);
      sub_1000AB4C4(*(void *)(v2 + 8), a2, 0, 1u);
      if (v28 != 2 && !v17) {
        sub_10007304C(v2, v3);
      }
LABEL_50:
      kdebug_trace(731139644LL, 0LL, 0LL, 0LL, 0LL);
      return;
    }

LABEL_219:
    __break(0x5507u);
LABEL_220:
    __break(0x5512u);
    goto LABEL_221;
  }

  int v88 = 0;
  uint64_t v41 = *v77;
  if (!*v77) {
    goto LABEL_151;
  }
  if ((v41 & 3) != 0) {
    goto LABEL_212;
  }
  uint64_t v42 = sub_100061274();
  if (!v42 || (v42 & 7) != 0) {
    goto LABEL_212;
  }
  int v43 = sub_10008C710(v42, v3);
  if ((v43 & ~v88) != 0)
  {
    char v52 = 11;
    goto LABEL_152;
  }

  uint64_t v44 = *v77;
  if (!*v77) {
    goto LABEL_151;
  }
  if ((v44 & 3) != 0) {
    goto LABEL_212;
  }
  uint64_t v45 = *v77;
  if (!*v77 || (v45 & 3) != 0) {
    goto LABEL_212;
  }
  if (sub_1000560E0(v45))
  {
LABEL_151:
    char v52 = 10;
LABEL_152:
    unsigned __int8 v92 = v52;
    pthread_mutex_unlock(v78);
    BOOL v17 = 0;
    goto LABEL_45;
  }

  sub_100062E78(v2, -1, &v89, 0LL, 0xFFFFu);
  int v87 = 0x7FFFFFFF;
  uint64_t v46 = *(void *)(v2 + 1408);
  if (!v46 || (v46 & 3) != 0) {
    goto LABEL_212;
  }
  if (!sub_100056060(v46, (unsigned int *)&v87))
  {
    uint64_t v47 = sub_100061274();
    if (!v47 || (v47 & 7) != 0) {
      goto LABEL_212;
    }
    if (v87 < 0) {
      goto LABEL_213;
    }
    sub_100054B34(v47, v3, v87);
  }

  if (!v92)
  {
    if (!*(_BYTE *)(v2 + 2368))
    {
      if ((v3 & 7) != 0) {
        goto LABEL_212;
      }
      if ((*(unsigned int (**)(uint64_t))(*(void *)v3 + 280LL))(v3))
      {
        if (v87 < 0) {
          goto LABEL_213;
        }
        if (v87)
        {
          pthread_mutex_unlock(v78);
          uint64_t v48 = *(void *)(v2 + 8);
          if (!v48 || (v48 & 7) != 0) {
            goto LABEL_212;
          }
          if (!sub_100057D30(v48))
          {
            uint64_t v50 = *(void *)(v2 + 8);
            uint64_t v51 = (*(uint64_t (**)(void *))(*(void *)v49 + 384LL))(v49);
            sub_100070E84(1LL, v50, (void *)v3, v51);
          }

          if ((((_DWORD)v2 + 1438) & 1) != 0) {
            goto LABEL_212;
          }
          *(_BYTE *)(v2 + 1438) = 0;
          sub_10006FED0(v2, v3, 2);
          sub_10006FED0(v2, v3, 0);
          sub_100070F1C(*(void *)(v2 + 8), v3, 0);
          pthread_mutex_lock(v78);
          unsigned __int8 v92 = 11;
          pthread_mutex_unlock(v78);
          BOOL v17 = 1;
          goto LABEL_45;
        }
      }
    }
  }

  uint64_t v83 = 0LL;
  unsigned int v84 = &v83;
  uint64_t v85 = 0x2000000000LL;
  char v86 = 0;
  sub_1000AC324(a2, v3, 0, 0LL, 22, v4, &v92, 1u);
  sub_1000AB4C4(*(void *)(v2 + 8), a2, 0, 1u);
  unsigned int v53 = sub_100036C08();
  uint64_t v54 = *(void *)(v2 + 8);
  if (!v54) {
    goto LABEL_212;
  }
  if ((v54 & 7) != 0) {
    goto LABEL_212;
  }
  uint64_t v55 = sub_10001864C(v54);
  if (!v55 || (v55 & 7) != 0) {
    goto LABEL_212;
  }
  if (((*(uint64_t (**)(uint64_t))(*(void *)v55 + 232LL))(v55) & 1) != 0)
  {
    *((_BYTE *)v84 + 24) = 1;
  }

  else
  {
    uint64_t v56 = *(void *)(v2 + 8);
    if (!v56) {
      goto LABEL_212;
    }
    if ((v56 & 7) != 0) {
      goto LABEL_212;
    }
    sub_100058900(v56, 1);
    uint64_t v82 = 0LL;
    uint64_t v57 = *v77;
    if (!*v77 || (v57 & 3) != 0) {
      goto LABEL_212;
    }
    uint64_t v58 = sub_100055ED0(v57, &v82);
    v93[0] = 0xAAAAAAAAAAAAAAAALL;
    v93[1] = 0xAAAAAAAAAAAAAAAALL;
    int v81 = v93;
    uint64_t v80 = 16LL;
    int v59 = IapAuthCertSerial(v58, v82, &v81, &v80);
    dispatch_semaphore_t v60 = dispatch_semaphore_create(0LL);
    if (v59)
    {
      if (v80 < 0)
      {
LABEL_223:
        __break(0x550Cu);
LABEL_224:
        __break(0x5510u);
LABEL_225:
        __break(0x5500u);
        return;
      }

      uint64_t v61 = v60;
      size_t v62 = (2 * v80) | 1;
      int v63 = (char *)calloc(v62, 1uLL);
      sub_100036AF4(v63, v62, (uint64_t)v81, v80, "%02X", 0);
      uint64_t v64 = sub_1000451B0();
      if (!v64 || (v64 & 7) != 0) {
        goto LABEL_212;
      }
      if ((*(unsigned int (**)(uint64_t))(*(void *)v64 + 208LL))(v64))
      {
        uint64_t v65 = *(void *)(v2 + 8);
        if (!v65) {
          goto LABEL_212;
        }
        if ((v65 & 7) != 0) {
          goto LABEL_212;
        }
        uint64_t v66 = sub_10001864C(v65);
        if (!v66 || (v66 & 7) != 0) {
          goto LABEL_212;
        }
        uint64_t v67 = (*(unsigned int (**)(uint64_t))(*(void *)v66 + 232LL))(v66) ^ 1;
      }

      else
      {
        uint64_t v67 = 0LL;
      }

      if (((v2 + 1592) & 7) != 0) {
        goto LABEL_212;
      }
      v79[0] = _NSConcreteStackBlock;
      v79[1] = 0x40000000LL;
      v79[2] = sub_100074178;
      v79[3] = &unk_100106020;
      v79[4] = &v83;
      v79[5] = v61;
      sub_100013F58((uint64_t)v63, v2 + 1592, v67, v79);
      syslog(4, "Waiting for user authorization...");
      if (!v61) {
        goto LABEL_224;
      }
      dispatch_semaphore_wait(v61, 0xFFFFFFFFFFFFFFFFLL);
      dispatch_release(v61);
      if (v63) {
        free(v63);
      }
      syslog(4, "Done waiting for user authorization!");
    }

    else
    {
      syslog(3, "Couldn't get cert serial for user authorization!\n");
    }

    if (!*((_BYTE *)v84 + 24)) {
      goto LABEL_214;
    }
  }

  unsigned int v68 = sub_100036C08();
  int v69 = v68 - v53;
  if (v68 < v53)
  {
    __break(0x5515u);
    goto LABEL_223;
  }

  syslog(3, "Authorization response time: %dms\n", v68 - v53);
  uint64_t v70 = *(void *)(v2 + 8);
  BOOL v72 = (v70 & 7) == 0 && v70 != 0;
  if (v69 < 751)
  {
    if (!v72) {
      goto LABEL_212;
    }
    sub_100058900(v70, 0);
    pthread_mutex_unlock(v78);
    sub_10006FED0(v2, v3, 4);
    pthread_mutex_lock(v78);
    if (v30 == 2)
    {
      if ((((_DWORD)v2 + 1978) & 1) != 0) {
        goto LABEL_212;
      }
      if (v8 != 56 && !*(_BYTE *)(v2 + 1978)) {
        sub_1000732B0(v2);
      }
    }

    uint64_t v73 = sub_100061274();
    if (!v73 || (v73 & 7) != 0) {
      goto LABEL_212;
    }
    sub_100055AD0(v73, v3, __n, __buf);
    uint64_t v74 = *v77;
    if (!*v77)
    {
      unsigned __int8 v92 = 10;
      unsigned __int8 v34 = 2;
      uint64_t v33 = &v91;
      int v75 = 1;
      goto LABEL_216;
    }

    if ((v74 & 3) != 0) {
      goto LABEL_212;
    }
    LODWORD(v10) = sub_100056134(v74, __buf, __n);
    if ((_DWORD)v10) {
LABEL_221:
    }
      sub_1000D280C(v10);
    unsigned __int8 v34 = __n + 1;
    if (__n != -1LL)
    {
      if ((((_DWORD)v2 + 1438) & 1) != 0) {
        goto LABEL_212;
      }
      if (__n > 0xFF) {
        goto LABEL_220;
      }
      uint64_t v33 = (__int16 *)__buf;
      if (!__CFADD__(__buf, __n))
      {
        *((_BYTE *)__buf + __n) = *(_BYTE *)(v2 + 1438);
        int v75 = 1;
        goto LABEL_216;
      }

      goto LABEL_218;
    }

    goto LABEL_225;
  }

  if (!v72) {
    goto LABEL_212;
  }
  sub_1000589A4(v70);
  pthread_mutex_unlock(v78);
  _Block_object_dispose(&v83, 8);
}

dispatch_semaphore_s *sub_100074178(uint64_t a1, char a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  BOOL result = *(dispatch_semaphore_s **)(a1 + 40);
  *(_BYTE *)(*(void *)(v3 + 8) + 24LL) = a2;
  if (result) {
    return (dispatch_semaphore_s *)dispatch_semaphore_signal(result);
  }
  __break(0x5510u);
  return result;
}

uint64_t sub_100074190(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_97;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_97;
  }
  unsigned int v32 = 4;
  if (!a2 || (a2 & 7) != 0 || ((result + 1416) & 7) != 0) {
    goto LABEL_97;
  }
  int v4 = *(_DWORD *)(result + 1416);
  if ((((_DWORD)result + 1446) & 1) != 0) {
    goto LABEL_97;
  }
  uint64_t v5 = *(unsigned __int16 *)(a2 + 128);
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v7 = (uint64_t *)(result + 1408);
  if (v5 >= *(unsigned __int8 *)(result + 1446))
  {
    if (((result + 1436) & 3) != 0) {
      goto LABEL_97;
    }
    if (v4 == 5 && v5 <= *(unsigned __int16 *)(result + 1436))
    {
      __int128 v9 = *(unsigned __int16 **)(a2 + 24);
      unsigned int v32 = 7;
      __int16 v31 = 23;
      BOOL result = sub_100062E78(result, -1, &v31, 0LL, 0xFFFFu);
      if ((byte_10011BEC8 & 1) == 0)
      {
        if (((v2 + 1440) & 7) != 0) {
          goto LABEL_97;
        }
        int v10 = *(unsigned __int8 *)(v2 + 1440);
        if (v10 != 2)
        {
          if (v10 == 1)
          {
            BOOL result = sub_100061274();
            if (!result || (result & 7) != 0) {
              goto LABEL_97;
            }
            BOOL result = sub_10008D0AC(result, v6);
            int v11 = result;
            if ((_DWORD)result == 53248 && *(_BYTE *)(v2 + 2369))
            {
              sub_1000CEAEC( 0,  4,  "%s:%d Debug DeviceID, pretend valid signature\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp",  3135);
            }

            else
            {
              int v30 = -1431655766;
              sched_param v29 = (sched_param)0xAAAAAAAAAAAAAAAALL;
              int v12 = pthread_self();
              pthread_getschedparam(v12, &v30, &v29);
              int sched_priority = v29.sched_priority;
              v29.int sched_priority = 31;
              int v14 = pthread_self();
              pthread_setschedparam(v14, v30, &v29);
              BOOL result = sub_100061274();
              if (!result || (result & 7) != 0) {
                goto LABEL_97;
              }
              uint64_t v8 = sub_100055B68(result, (void *)v6, v11, v9, v5);
              v29.int sched_priority = sched_priority;
              int v15 = pthread_self();
              pthread_setschedparam(v15, v30, &v29);
              if ((_DWORD)v8) {
                goto LABEL_42;
              }
            }

            if (sub_100063CE8(v6))
            {
              BOOL result = sub_100061274();
              if (!result || (result & 7) != 0) {
                goto LABEL_97;
              }
              if (sub_10008D0AC(result, v6) == 474)
              {
                BOOL result = sub_10004783C();
                if (!result || (result & 7) != 0) {
                  goto LABEL_97;
                }
                (*(void (**)(uint64_t, void, uint64_t))(*(void *)result + 176LL))( result,  *(void *)(v2 + 8),  v6);
              }
            }

            goto LABEL_41;
          }

          uint64_t v8 = 94LL;
LABEL_42:
          sub_1000AC324(a2, v6, 0, 0LL, 25, *(_DWORD *)(a2 + 68), &v32, 1u);
          goto LABEL_43;
        }

        BOOL result = pthread_mutex_lock((pthread_mutex_t *)(v2 + 1448));
        if (!v9) {
          goto LABEL_30;
        }
        BOOL result = *v7;
        if (!*v7)
        {
LABEL_30:
          pthread_mutex_unlock((pthread_mutex_t *)(v2 + 1448));
          uint64_t v8 = 2LL;
          goto LABEL_42;
        }

        if ((result & 3) != 0) {
          goto LABEL_97;
        }
        uint64_t v8 = sub_100056188(result, (uint64_t)v9, v5);
        pthread_mutex_unlock((pthread_mutex_t *)(v2 + 1448));
        if ((_DWORD)v8) {
          goto LABEL_42;
        }
      }

LABEL_98:
  __break(0x550Au);
  return result;
}

  __break(0x5516u);
LABEL_99:
  __break(0x5513u);
LABEL_100:
  __break(0x550Au);
LABEL_101:
  __break(0x5500u);
  return result;
}

uint64_t sub_100074760(uint64_t a1, uint64_t a2)
{
  if (!a1) {
    goto LABEL_36;
  }
  if ((a1 & 7) != 0) {
    goto LABEL_36;
  }
  bzero(v23, 0x803uLL);
  char v22 = 2;
  if (!a2 || (a2 & 7) != 0) {
    goto LABEL_36;
  }
  if (*(_WORD *)(a2 + 128)) {
    return 4LL;
  }
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = sub_100061274();
  if (!v6 || (v6 & 7) != 0) {
    goto LABEL_36;
  }
  if (((a1 + 1440) & 7) != 0) {
    goto LABEL_36;
  }
  if (*(_BYTE *)(a1 + 1440) != 2) {
    return 4LL;
  }
  memset(__b, 170, sizeof(__b));
  size_t __n = 2048LL;
  uint64_t result = sub_100055CD8((uint64_t)__b, (uint64_t *)&__n);
  if ((_DWORD)result || (size_t v7 = __n) == 0)
  {
    if ((_DWORD)result) {
      return 2LL;
    }
    unsigned __int16 v19 = 0;
    goto LABEL_33;
  }

  if (__n > 0x8000)
  {
LABEL_39:
    __break(0x5507u);
    return result;
  }

  size_t v8 = __n - 1;
  size_t v9 = (__n - 1) >> 7;
  int v10 = ((__n - 1) >> 7);
  if (((__n - 1) >> 7))
  {
    if (&v23[2] == 0LL || (unint64_t)&v22 < 0xFFFFFFFFFFFFFFFDLL)
    {
      int v11 = 0;
      int v12 = __b;
      while (1)
      {
        v23[1] = v11;
        v23[2] = v9;
        __int128 v13 = v12[5];
        v24[4] = v12[4];
        v24[5] = v13;
        __int128 v14 = v12[7];
        v24[6] = v12[6];
        v24[7] = v14;
        __int128 v15 = v12[1];
        v24[0] = *v12;
        v24[1] = v15;
        __int128 v16 = v12[3];
        v24[2] = v12[2];
        v24[3] = v16;
        if (__n < 0x80) {
          break;
        }
        __n -= 128LL;
        uint64_t v17 = sub_1000ABB10(v5, 0, 0LL, 27, *(_DWORD *)(a2 + 68), &v22, 0x84u);
        if (!v17) {
          goto LABEL_35;
        }
        v12 += 8;
        uint64_t result = sub_1000AB4C4(*(void *)(a1 + 8), v17, 0, 1u);
        if (v10 == ++v11)
        {
          size_t v7 = __n;
          size_t v8 = __n - 1;
          char v18 = v9;
          goto LABEL_28;
        }
      }

      __break(0x5515u);
      goto LABEL_39;
    }

uint64_t sub_100074A04(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_14;
  }
  if (*(_WORD *)(a2 + 128) != 1) {
    return 2LL;
  }
  uint64_t v3 = *(void *)(a2 + 8);
  uint64_t result = sub_100061274();
  if (!result || (result & 7) != 0) {
    goto LABEL_14;
  }
  uint64_t result = sub_100054A7C(result, v3);
  if ((_DWORD)result != 6) {
    return 2LL;
  }
  int v4 = *(_BYTE **)(a2 + 24);
  if (!v4)
  {
LABEL_14:
    __break(0x5516u);
    return result;
  }

  if (*v4) {
    sub_1000CEAEC( 0,  4,  "%s:%d authentication status failure.\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp",  3518);
  }
  return 0LL;
}

uint64_t sub_100074AB4(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_15;
  }
  unsigned int v4 = *(unsigned __int16 *)(a2 + 128);
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)&__int128 v7 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v7 + 1) = 0xAAAAAAAAAAAAAAAALL;
  *(_OWORD *)((char *)v12 + 15) = v7;
  v11[13] = v7;
  v12[0] = v7;
  v11[11] = v7;
  v11[12] = v7;
  v11[9] = v7;
  v11[10] = v7;
  v11[8] = v7;
  v11[6] = v7;
  v11[7] = v7;
  v11[4] = v7;
  v11[5] = v7;
  v11[2] = v7;
  v11[3] = v7;
  v11[0] = v7;
  v11[1] = v7;
  if (v4 < 4) {
    return 2LL;
  }
  uint64_t v8 = sub_100061274();
  if (!v8 || (v8 & 7) != 0) {
LABEL_15:
  }
    __break(0x5516u);
  if (((a1 + 1440) & 7) != 0) {
    goto LABEL_15;
  }
  if (*(_BYTE *)(a1 + 1440) != 2) {
    return 2LL;
  }
  uint64_t v10 = 255LL;
  uint64_t result = sub_100055D4C(v5, v6, (unsigned __int16)(v4 - 1), (uint64_t)v11, &v10);
  if (!(_DWORD)result)
  {
    sub_1000AC324(a2, *(void *)(a2 + 8), 0, 0LL, 30, *(_DWORD *)(a2 + 68), v11, (unsigned __int16)v10);
    return 0LL;
  }

  return result;
}

uint64_t sub_100074C04(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_14;
  }
  if (*(_WORD *)(a2 + 128) != 1) {
    return 2LL;
  }
  uint64_t v3 = *(void *)(a2 + 8);
  uint64_t result = sub_100061274();
  if (!result || (result & 7) != 0) {
    goto LABEL_14;
  }
  uint64_t result = sub_100054A7C(result, v3);
  if ((_DWORD)result != 6) {
    return 2LL;
  }
  unsigned int v4 = *(_BYTE **)(a2 + 24);
  if (!v4)
  {
LABEL_14:
    __break(0x5516u);
    return result;
  }

  if (*v4) {
    sub_1000CEAEC( 0,  4,  "%s:%d Authentication status failure!\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp",  3636);
  }
  return 0LL;
}

void sub_100074CB4(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_241;
  }
  uint64_t v4 = *(void *)(a2 + 8);
  if (!v4) {
    return;
  }
  uint64_t v5 = (_BYTE *)(a1 + 1976);
  if (((a1 + 1976) & 7) != 0) {
    goto LABEL_241;
  }
  unsigned int v6 = *(unsigned __int16 *)(a2 + 128);
  if (!*(_WORD *)(a2 + 128) || *v5) {
    return;
  }
  unint64_t v7 = *(void *)(a2 + 24);
  if (!v7) {
    goto LABEL_241;
  }
  char v8 = a1 + 56;
  switch(*(_BYTE *)v7)
  {
    case 0:
      if (v6 != 5) {
        goto LABEL_95;
      }
      __int128 v13 = (unsigned int *)(a1 + 1968);
      if (((a1 + 1968) & 7) != 0) {
        goto LABEL_241;
      }
      if (*v13) {
        goto LABEL_95;
      }
      if (v7 == -1LL) {
        goto LABEL_246;
      }
      unsigned int v14 = bswap32(*(_DWORD *)(v7 + 1));
      if ((v14 & 1) != 0)
      {
        *__int128 v13 = v14 & 0xFFFFCFFF;
        unsigned int v15 = 1;
      }

      else
      {
        unsigned int v15 = 0;
        *__int128 v13 = 0;
      }

      goto LABEL_96;
    case 1:
    case 6:
    case 7:
    case 8:
    case 0xE:
      LOBYTE(v9) = 1;
      break;
    case 2:
      if (v6 != 8) {
        goto LABEL_95;
      }
      if (v7 == -1LL) {
        goto LABEL_246;
      }
      unsigned int v16 = *(_DWORD *)(v7 + 1);
      uint64_t v17 = sub_10004783C();
      if (!v17 || (v17 & 7) != 0) {
        goto LABEL_241;
      }
      if (v7 > 0xFFFFFFFFFFFFFFFALL) {
        goto LABEL_242;
      }
      if ((v8 & 7) != 0 || (((_DWORD)a1 + 1662) & 1) != 0) {
        goto LABEL_241;
      }
      *(_BYTE *)(a1 + 1662) = *(_BYTE *)(v7 + 5);
      if (v7 > 0xFFFFFFFFFFFFFFF9LL) {
        goto LABEL_242;
      }
      *(_BYTE *)(a1 + 1663) = *(_BYTE *)(v7 + 6);
      if (v7 > 0xFFFFFFFFFFFFFFF8LL) {
        goto LABEL_242;
      }
      if ((((_BYTE)a1 + 0x80) & 7) != 0) {
        goto LABEL_241;
      }
      *(_BYTE *)(a1 + 1664) = *(_BYTE *)(v7 + 7);
      char v18 = *(char **)(a1 + 8);
      if (!v18 || *(void *)(a1 + 8) & 7LL | v8 & 3) {
        goto LABEL_241;
      }
      sub_100057CB8(v18, (const void *)(a1 + 1592));
      unsigned int v15 = 4;
      goto LABEL_96;
    case 3:
      if (v6 != 4) {
        goto LABEL_95;
      }
      if (v7 == -1LL) {
        goto LABEL_242;
      }
      unint64_t v19 = *(unsigned __int8 *)(v7 + 1);
      if (v19 > 0xE) {
        goto LABEL_95;
      }
      if (v7 >= 0xFFFFFFFFFFFFFFFDLL) {
        goto LABEL_242;
      }
      if ((((_BYTE)a1 + 56) & 7) != 0) {
        goto LABEL_241;
      }
      if (__CFADD__(a1 + 1666, 2 * v19)) {
        goto LABEL_242;
      }
      uint64_t v20 = a1 + 1666 + 2 * v19;
      if ((v20 & 1) != 0) {
        goto LABEL_241;
      }
      *(_WORD *)uint64_t v20 = bswap32(*(unsigned __int16 *)(v7 + 2)) >> 16;
      int v21 = *(char **)(a1 + 8);
      sub_100057CB8(v21, (const void *)(a1 + 1592));
      unsigned int v15 = 8;
      goto LABEL_96;
    case 4:
      if (v6 != 4) {
        goto LABEL_95;
      }
      if (v7 == -1LL) {
        goto LABEL_242;
      }
      if ((((_BYTE)a1 + 56) & 7) != 0 || ((a1 + 1656) & 7) != 0) {
        goto LABEL_241;
      }
      *(_BYTE *)(a1 + 1656) = *(_BYTE *)(v7 + 1);
      if (v7 > 0xFFFFFFFFFFFFFFFDLL) {
        goto LABEL_242;
      }
      *(_BYTE *)(a1 + 1657) = *(_BYTE *)(v7 + 2);
      if (v7 > 0xFFFFFFFFFFFFFFFCLL) {
        goto LABEL_242;
      }
      if ((((_DWORD)a1 + 1658) & 1) != 0) {
        goto LABEL_241;
      }
      *(_BYTE *)(a1 + 1658) = *(_BYTE *)(v7 + 3);
      char v22 = *(char **)(a1 + 8);
      sub_100057CB8(v22, (const void *)(a1 + 1592));
      unsigned int v15 = 16;
      goto LABEL_96;
    case 5:
      if (v6 != 4) {
        goto LABEL_95;
      }
      if (v7 == -1LL) {
        goto LABEL_242;
      }
      if ((((_BYTE)a1 + 56) & 7) != 0) {
        goto LABEL_241;
      }
      *(_BYTE *)(a1 + 1659) = *(_BYTE *)(v7 + 1);
      if (v7 > 0xFFFFFFFFFFFFFFFDLL) {
        goto LABEL_242;
      }
      if (((a1 + 1660) & 3) != 0) {
        goto LABEL_241;
      }
      *(_BYTE *)(a1 + 1660) = *(_BYTE *)(v7 + 2);
      if (v7 > 0xFFFFFFFFFFFFFFFCLL) {
        goto LABEL_242;
      }
      *(_BYTE *)(a1 + 1661) = *(_BYTE *)(v7 + 3);
      uint64_t v23 = *(char **)(a1 + 8);
      sub_100057CB8(v23, (const void *)(a1 + 1592));
      unsigned int v15 = 32;
      goto LABEL_96;
    case 9:
      if (v6 != 3) {
        goto LABEL_95;
      }
      if (v7 == -1LL) {
        goto LABEL_246;
      }
      if ((v4 & 7) != 0) {
        goto LABEL_241;
      }
      (*(void (**)(void))(*(void *)v4 + 152LL))(*(void *)(a2 + 8));
      unsigned int v15 = 512;
      goto LABEL_96;
    case 0xA:
      if (v6 != 2) {
        goto LABEL_95;
      }
      if (v7 == -1LL) {
        goto LABEL_242;
      }
      unsigned int v15 = (*(unsigned __int8 *)(v7 + 1) > 7u) << 10;
      goto LABEL_96;
    case 0xB:
      if (v6 != 5) {
        goto LABEL_95;
      }
      if (v7 == -1LL) {
        goto LABEL_246;
      }
      if ((((_BYTE)a1 + 56) & 7) != 0 || ((a1 + 1952) & 7) != 0) {
        goto LABEL_241;
      }
      unsigned int v24 = bswap32(*(_DWORD *)(v7 + 1));
      *(_DWORD *)(a1 + 1952) = v24;
      uint64_t v25 = *(void *)(a1 + 8);
      BOOL v26 = (v25 & 7) != 0 || v25 == 0;
      int v27 = !v26;
      if ((v24 & 0xF) != 0)
      {
        if (!v27) {
          goto LABEL_241;
        }
        sub_100057A9C(v25, 0LL, 2u);
      }

      else
      {
        if (!v27) {
          goto LABEL_241;
        }
        sub_100057AD0(v25, 0LL, 2u);
      }

      unsigned int v69 = *(_DWORD *)(a1 + 1952) & 0xF;
      if (v69) {
        sub_1000757D4(*(void *)(a1 + 8), v69);
      }
      uint64_t v70 = *(char **)(a1 + 8);
      if (!v70 || *(void *)(a1 + 8) & 7LL | v8 & 3) {
        goto LABEL_241;
      }
      sub_100057CB8(v70, (const void *)(a1 + 1592));
      unsigned int v15 = 2048;
      goto LABEL_96;
    case 0xC:
      sub_1000CEAEC( 0,  4,  "%s:%d Accessory returned OTA data - should never be here\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp",  3864);
      unsigned int v15 = 4096;
      goto LABEL_96;
    case 0xD:
      sub_1000CEAEC( 0,  4,  "%s:%d Accessory returned OTA waiver data - should never be here\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp",  3870);
      unsigned int v15 = 0x2000;
      goto LABEL_96;
    default:
      return;
  }

  do
  {
    unsigned int v10 = v9;
    __int16 v9 = v9 + 1;
    if ((v9 & 0x100) != 0)
    {
      __break(0x5507u);
LABEL_244:
      __break(0x550Au);
LABEL_245:
      __break(0x5514u);
LABEL_246:
      __break(0x5500u);
      return;
    }
  }

  while (v10 < v6);
  LOBYTE(v9) = v6 + 1;
LABEL_19:
  if (v6 <= v9)
  {
LABEL_95:
    unsigned int v15 = 0;
  }

  else
  {
    switch(*(_BYTE *)v7)
    {
      case 6:
        if ((((_BYTE)a1 + 56) & 7) != 0) {
          goto LABEL_241;
        }
        if (v7 == -1LL) {
          goto LABEL_242;
        }
        int v11 = (const void *)(v7 + 1);
        int v12 = (void *)(a1 + 1696);
        goto LABEL_205;
      case 7:
        if ((((_BYTE)a1 + 56) & 7) != 0) {
          goto LABEL_241;
        }
        if (v7 == -1LL) {
          goto LABEL_242;
        }
        int v11 = (const void *)(v7 + 1);
        int v12 = (void *)(a1 + 1760);
        goto LABEL_205;
      case 8:
        if ((((_BYTE)a1 + 56) & 7) != 0) {
          goto LABEL_241;
        }
        if (v7 == -1LL) {
          goto LABEL_242;
        }
        int v11 = (const void *)(v7 + 1);
        int v12 = (void *)(a1 + 1824);
        goto LABEL_205;
      case 9:
      case 0xA:
      case 0xB:
      case 0xC:
      case 0xD:
        goto LABEL_207;
      case 0xE:
        if ((((_BYTE)a1 + 56) & 7) != 0) {
          goto LABEL_241;
        }
        if (v7 == -1LL) {
          goto LABEL_242;
        }
        int v11 = (const void *)(v7 + 1);
        int v12 = (void *)(a1 + 1888);
LABEL_205:
        size_t v48 = v6 - 1;
        goto LABEL_206;
      default:
        if (*(_BYTE *)v7 != 1) {
          goto LABEL_207;
        }
        if ((((_BYTE)a1 + 56) & 7) != 0) {
          goto LABEL_241;
        }
        if (v7 == -1LL) {
          goto LABEL_242;
        }
        int v11 = (const void *)(v7 + 1);
        size_t v48 = v6 - 1;
        int v12 = (void *)(a1 + 1592);
LABEL_206:
        memcpy(v12, v11, v48);
LABEL_207:
        unsigned int v59 = *(unsigned __int8 *)v7;
        if (v59 > 0x1F) {
          goto LABEL_245;
        }
        dispatch_semaphore_t v60 = *(char **)(a1 + 8);
        unsigned int v15 = 1 << v59;
        sub_100057CB8(v60, (const void *)(a1 + 1592));
        break;
    }
  }

LABEL_241:
      __break(0x5516u);
LABEL_242:
      __break(0x5513u);
    }
  }

uint64_t sub_1000757D4(uint64_t result, unsigned int a2)
{
  if (!result)
  {
LABEL_20:
    __break(0x5518u);
    goto LABEL_21;
  }

  if ((result & 7) == 0)
  {
    uint64_t result = sub_100057A88(result);
    if (result)
    {
      uint64_t v3 = result;
      if ((result & 7) == 0)
      {
        uint64_t v4 = sub_10001864C(result);
        if (!v4) {
          return 2LL;
        }
        uint64_t v5 = v4;
        sub_10005789C(v3, 0);
        uint64_t result = sub_1000614B8(0LL, v3);
        if (!result)
        {
          uint64_t v7 = 2LL;
          goto LABEL_18;
        }

        if ((result & 7) == 0 && (((_BYTE)result + 56) & 7) == 0 && ((result + 1952) & 7) == 0)
        {
          if ((*(_DWORD *)(result + 1952) & a2 & 0xF) == 0)
          {
            uint64_t v7 = 22LL;
            goto LABEL_18;
          }

          if (((result + 1984) & 7) == 0)
          {
            *(_DWORD *)(result + 1984) = a2 & 0xF;
            unsigned int v8 = bswap32(a2);
            if ((v5 & 7) == 0)
            {
              int v6 = (*(uint64_t (**)(uint64_t, void))(*(void *)v5 + 16LL))(v5, 0LL);
              uint64_t result = sub_1000ABB10(v5, 0, 0LL, 70, v6, &v8, 4u);
              if (result)
              {
                uint64_t v7 = sub_1000AB4C4(v3, result, 0, 1u);
LABEL_18:
                sub_1000578E8(v3, 0);
                return v7;
              }

              goto LABEL_20;
            }
          }
        }
      }
    }
  }

BOOL sub_10007592C(BOOL result, uint64_t a2, uint64_t a3, unsigned int a4)
{
  if (!result || (result & 7) != 0 || !a2 || (a2 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    unsigned int v6 = *(_DWORD *)(result + 1516);
    int v7 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 232LL))(a2);
    unsigned int v8 = v6 & 0x721D;
    if (!v7) {
      unsigned int v8 = v6;
    }
    if (((v8 >> a3) & 1) != 0)
    {
      unsigned __int8 v10 = -1;
      unsigned __int8 v9 = -1;
      sub_100061274();
      sub_1000BBBAC(a3, &v10, (char *)&v9);
      uint64_t result = 0LL;
      if (v10 != 255 && v9 != 255) {
        return (v9 | (v10 << 8)) >= a4;
      }
    }

    else
    {
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_1000759FC(uint64_t result, int a2, int a3, unsigned int a4)
{
  if (!result
    || (result & 7) != 0
    || (v9 = -86, v8 = -86, unsigned __int8 v7 = -86, (result = sub_10004783C()) == 0)
    || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    (*(void (**)(uint64_t, unsigned __int8 *, unsigned __int8 *, unsigned __int8 *))(*(void *)result + 160LL))( result,  &v9,  &v8,  &v7);
    return ((a2 << 16) | (a3 << 8) | a4) <= ((v9 << 16) | (v8 << 8) | v7);
  }

  return result;
}

uint64_t sub_100075AA4(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_144;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_144;
  }
  if (!a2) {
    goto LABEL_144;
  }
  if ((a2 & 7) != 0) {
    goto LABEL_144;
  }
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(_BYTE **)(a2 + 24);
  int v6 = *(unsigned __int16 *)(a2 + 128);
  __int16 v16 = -21846;
  uint64_t v7 = sub_1000438B8();
  uint64_t result = *(void *)(v2 + 8);
  if (!result) {
    goto LABEL_144;
  }
  if ((result & 7) != 0) {
    goto LABEL_144;
  }
  uint64_t v8 = sub_1000579D4(result);
  uint64_t result = sub_100061274();
  if (!result) {
    goto LABEL_144;
  }
  BOOL v9 = result;
  if ((result & 7) != 0) {
    goto LABEL_144;
  }
  char v10 = sub_10008CBE4(result, v4);
  uint64_t result = sub_100054B88(v9, v4);
  if (v6 && (v10 & 3) == 1 && !(_DWORD)result)
  {
    if (!v5) {
      goto LABEL_144;
    }
    unsigned int v11 = *v5;
    if (v11 != 3 && v11 <= 0x16)
    {
      sub_1000ABE78(a2, v4, 0, 0LL, 2, *(_DWORD *)(a2 + 68), 7, 0x29u, 0, 255, 0LL, 0, 0, 0);
      sub_1000AB4C4(*(void *)(v2 + 8), a2, 0, 1u);
      sub_10007304C(v2, v4);
      return 25LL;
    }
  }

  uint64_t v12 = 4LL;
  if (!v5) {
    return v12;
  }
  if (v6 != 1) {
    return v12;
  }
  unsigned int v13 = *v5;
  if (v13 > 0x16) {
    return v12;
  }
  LOBYTE(v16) = *v5;
  switch(v13)
  {
    case 0u:
      uint64_t result = sub_100076174(v4);
      if (!(_DWORD)result) {
        goto LABEL_111;
      }
      if (!v8 || (v8 & 7) != 0) {
        break;
      }
      uint64_t result = sub_100076200(v8);
      if ((_DWORD)result == 1) {
        goto LABEL_131;
      }
      if ((_DWORD)result != 2) {
        goto LABEL_104;
      }
      goto LABEL_133;
    case 1u:
      uint64_t result = sub_100076174(v4);
      if (!(_DWORD)result) {
        goto LABEL_111;
      }
      if (!v8 || (v8 & 7) != 0) {
        break;
      }
      uint64_t result = sub_100076220(v8);
      goto LABEL_69;
    case 2u:
      uint64_t result = sub_100076174(v4);
      if (!(_DWORD)result) {
        goto LABEL_111;
      }
      if (!v8 || (v8 & 7) != 0) {
        break;
      }
      uint64_t result = sub_100076260(v8);
      goto LABEL_70;
    case 3u:
      if (!v7 || (v7 & 7) != 0) {
        break;
      }
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v7 + 192LL))(v7, v4);
      if (!(_DWORD)result) {
        goto LABEL_104;
      }
      uint64_t result = sub_100063E8C(v4);
      if (!(_DWORD)result) {
        return 7LL;
      }
      if (!v8 || (v8 & 7) != 0) {
        break;
      }
      uint64_t result = sub_100076154(v8);
      goto LABEL_71;
    case 4u:
    case 5u:
    case 6u:
    case 7u:
      else {
        return 7LL;
      }
    case 8u:
      uint64_t result = sub_100076174(v4);
      if (!(_DWORD)result) {
        goto LABEL_111;
      }
      if (!v8 || (v8 & 7) != 0) {
        break;
      }
      uint64_t result = sub_100076280(v8);
      switch((int)result)
      {
        case 0:
          goto LABEL_104;
        case 1:
          goto LABEL_133;
        case 2:
          goto LABEL_131;
        case 3:
          uint64_t result = 3LL;
          break;
        case 4:
          uint64_t result = 4LL;
          break;
        default:
          return 7LL;
      }

      goto LABEL_72;
    case 9u:
      uint64_t result = sub_100076174(v4);
      if (!(_DWORD)result) {
        goto LABEL_111;
      }
      if (!v8 || (v8 & 7) != 0) {
        break;
      }
      uint64_t result = sub_1000762A0(v8);
      goto LABEL_69;
    case 0xAu:
      uint64_t result = sub_100076174(v4);
      if (!(_DWORD)result) {
        goto LABEL_111;
      }
      if (!v8 || (v8 & 7) != 0) {
        break;
      }
      uint64_t result = sub_100076240(v8);
      goto LABEL_69;
    case 0xCu:
      uint64_t result = sub_100076174(v4);
      if (!(_DWORD)result) {
        goto LABEL_111;
      }
      if (!v8 || (v8 & 7) != 0) {
        break;
      }
      uint64_t result = sub_1000762C0(v8);
      goto LABEL_69;
    case 0xDu:
      uint64_t result = sub_100076174(v4);
      if (!(_DWORD)result) {
        goto LABEL_111;
      }
      if (!v8 || (v8 & 7) != 0) {
        break;
      }
      uint64_t result = sub_1000762E0(v8);
LABEL_69:
LABEL_70:
      uint64_t result = (_DWORD)result != 0;
      goto LABEL_71;
    case 0xEu:
      if (!v7 || (v7 & 7) != 0) {
        break;
      }
      uint64_t result = sub_100076174(v4);
      if (!(_DWORD)result) {
        return 7LL;
      }
      if (!v8 || (v8 & 7) != 0) {
        break;
      }
      uint64_t result = sub_100076300(v8);
      goto LABEL_71;
    case 0xFu:
      uint64_t result = *(unsigned __int8 *)(v2 + 2203);
      goto LABEL_71;
    case 0x10u:
      if (!v7 || (v7 & 7) != 0) {
        break;
      }
      uint64_t result = sub_100076174(v4);
      if (!(_DWORD)result) {
        return 7LL;
      }
      if (!v8 || (v8 & 7) != 0) {
        break;
      }
      uint64_t result = sub_100076320(v8);
      goto LABEL_71;
    case 0x11u:
      uint64_t result = sub_100076174(v4);
      if (!(_DWORD)result) {
        return 7LL;
      }
      if (!v7 || (v7 & 7) != 0) {
        break;
      }
      if (((*(uint64_t (**)(uint64_t))(*(void *)v7 + 184LL))(v7) & 1) == 0
        && !(*(unsigned int (**)(uint64_t))(*(void *)v7 + 200LL))(v7))
      {
        return v12;
      }

      uint64_t result = sub_100063F38(v4);
      if (!(_DWORD)result) {
        return 7LL;
      }
      if (!v8 || (v8 & 7) != 0) {
        break;
      }
      uint64_t result = sub_1000761E0(v8);
      switch((_DWORD)result)
      {
        case 2:
LABEL_131:
          uint64_t result = 2LL;
          goto LABEL_72;
        case 1:
LABEL_133:
          uint64_t result = 1LL;
          goto LABEL_72;
        case 0:
LABEL_104:
          uint64_t result = 0LL;
LABEL_72:
          HIBYTE(v16) = result;
          break;
      }

      uint64_t v14 = *(void *)(a2 + 8);
      if (v14)
      {
        sub_1000AC324(a2, v14, 0, 0LL, 42, *(_DWORD *)(a2 + 68), &v16, 2u);
        return 0LL;
      }

      __break(0x5518u);
      break;
    case 0x12u:
      if (!v7 || (v7 & 7) != 0) {
        break;
      }
      if (!(*(unsigned int (**)(uint64_t))(*(void *)v7 + 176LL))(v7)
        || ((*(uint64_t (**)(uint64_t))(*(void *)v7 + 160LL))(v7) & 1) != 0
        || ((*(uint64_t (**)(uint64_t))(*(void *)v7 + 168LL))(v7) & 1) != 0)
      {
        goto LABEL_111;
      }

      uint64_t result = sub_100076174(v4);
      if (!(_DWORD)result) {
        return 7LL;
      }
      if (!v8 || (v8 & 7) != 0) {
        break;
      }
      uint64_t result = sub_100076340(v8);
      goto LABEL_71;
    case 0x15u:
      uint64_t result = sub_100076174(v4);
      if (!(_DWORD)result) {
        return 7LL;
      }
      if (!v8 || (v8 & 7) != 0) {
        break;
      }
      uint64_t result = sub_100076360(v8);
      goto LABEL_71;
    case 0x16u:
      uint64_t result = sub_100076174(v4);
      if (!(_DWORD)result) {
        return 7LL;
      }
      if (!v7 || (v7 & 7) != 0) {
        break;
      }
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 112LL))(v7);
      if (!(_DWORD)result) {
        return 7LL;
      }
      if (!v8 || (v8 & 7) != 0) {
        break;
      }
      uint64_t result = sub_100076380(v8);
LABEL_71:
      goto LABEL_146;
    default:
LABEL_111:
      sub_1000CEAEC(0, 4, "%s:%d Bad parameter!\n");
      return v12;
  }

LABEL_144:
  __break(0x5516u);
LABEL_145:
  __break(0x550Au);
LABEL_146:
  __break(0x5513u);
  return result;
}

    __break(0x5500u);
    goto LABEL_145;
  }

  unsigned int v13 = *(_DWORD *)(a2 + 133);
  if (!v13) {
    return;
  }
  uint64_t v14 = *(unsigned __int16 *)(a2 + 115);
  uint64_t v15 = *(_DWORD *)(a2 + 137);
  __int16 v16 = *(void *)(a2 + 117);
  uint64_t v17 = *(_DWORD *)(a2 + 125);
  char v18 = *(_DWORD *)(a2 + 129);
LABEL_48:
  int v28 = *(char **)(a2 + 141);
  if (!v28) {
    return;
  }
  if (__CFADD__(v28, v15)) {
    goto LABEL_141;
  }
  uint64_t v29 = v6;
  int v30 = *(void *)(a2 + 141);
  if ((v3 & 1) == 0)
  {
    if (((a2 + 8) & 7) != 0) {
      goto LABEL_139;
    }
    uint64_t v31 = *(_DWORD *)(a2 + 8);
    if (HIWORD(v31)) {
      goto LABEL_142;
    }
    *(_WORD *)int v28 = bswap32(v31) >> 16;
    int v30 = (unint64_t)(v28 + 2);
  }

  *(_BYTE *)int v30 = v8;
  if (v30 == -1LL) {
    goto LABEL_141;
  }
  *(_BYTE *)(v30 + 1) = v9;
  if (v30 > 0xFFFFFFFFFFFFFFFDLL) {
    goto LABEL_141;
  }
  *(_WORD *)(v30 + 2) = __rev16(v10);
  if (v30 + 2 > 0xFFFFFFFFFFFFFFFDLL) {
    goto LABEL_141;
  }
  *(_WORD *)(v30 + 4) = bswap32(v14) >> 16;
  if (v30 + 4 > 0xFFFFFFFFFFFFFFFDLL) {
    goto LABEL_141;
  }
  int v32 = (char *)(v30 + 6);
  if (!v10)
  {
    *(_DWORD *)int v32 = bswap32(v13);
    if ((unint64_t)v32 <= 0xFFFFFFFFFFFFFFFBLL)
    {
      int v32 = (char *)(v30 + 10);
      goto LABEL_62;
    }

uint64_t sub_100076154(uint64_t result)
{
  if (result)
  {
    if ((result & 7) == 0)
    {
      result += 112LL;
      if ((result & 7) == 0) {
        return sub_100087580(result);
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_100076174(uint64_t a1)
{
  uint64_t result = sub_100061274();
  if (!result)
  {
    __break(0x5518u);
LABEL_8:
    sub_1000D276C();
  }

  if (!a1) {
    goto LABEL_8;
  }
  BOOL v3 = result;
  if ((result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    int v4 = sub_10008C710(result, a1);
    LODWORD(result) = sub_100054B88(v3, a1);
    if (v4) {
      return result;
    }
    else {
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_1000761E0(uint64_t result)
{
  if (result)
  {
    if ((result & 7) == 0)
    {
      result += 208LL;
      if ((result & 7) == 0) {
        return sub_1000875C0(result);
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_100076200(uint64_t result)
{
  if (result)
  {
    if ((result & 7) == 0)
    {
      result += 16LL;
      if ((result & 7) == 0) {
        return sub_1000B21D8(result);
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_100076220(uint64_t result)
{
  if (result)
  {
    if ((result & 7) == 0)
    {
      result += 16LL;
      if ((result & 7) == 0) {
        return sub_1000B2A70(result);
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_100076240(uint64_t result)
{
  if (result)
  {
    if ((result & 7) == 0)
    {
      result += 16LL;
      if ((result & 7) == 0) {
        return sub_1000B2A30(result);
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_100076260(uint64_t result)
{
  if (result)
  {
    if ((result & 7) == 0)
    {
      result += 16LL;
      if ((result & 7) == 0) {
        return sub_1000B2A50(result);
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_100076280(uint64_t result)
{
  if (result)
  {
    if ((result & 7) == 0)
    {
      result += 16LL;
      if ((result & 7) == 0) {
        return sub_1000B2A90(result);
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000762A0(uint64_t result)
{
  if (result)
  {
    if ((result & 7) == 0)
    {
      result += 16LL;
      if ((result & 7) == 0) {
        return sub_1000B2AB0(result);
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000762C0(uint64_t result)
{
  if (result)
  {
    if ((result & 7) == 0)
    {
      result += 16LL;
      if ((result & 7) == 0) {
        return sub_1000B2AD0(result);
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000762E0(uint64_t result)
{
  if (result)
  {
    if ((result & 7) == 0)
    {
      result += 16LL;
      if ((result & 7) == 0) {
        return sub_1000B2AF0(result);
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_100076300(uint64_t result)
{
  if (result)
  {
    if ((result & 7) == 0)
    {
      result += 624LL;
      if ((result & 7) == 0) {
        return sub_100087580(result);
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_100076320(uint64_t result)
{
  if (result)
  {
    if ((result & 7) == 0)
    {
      result += 720LL;
      if ((result & 7) == 0) {
        return sub_100087580(result);
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_100076340(uint64_t result)
{
  if (result)
  {
    if ((result & 7) == 0)
    {
      result += 816LL;
      if ((result & 7) == 0) {
        return sub_100087580(result);
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_100076360(uint64_t result)
{
  if (result)
  {
    if ((result & 7) == 0)
    {
      result += 1200LL;
      if ((result & 7) == 0) {
        return sub_100087580(result);
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_100076380(uint64_t result)
{
  if (result)
  {
    if ((result & 7) == 0)
    {
      result += 1296LL;
      if ((result & 7) == 0) {
        return (*(uint64_t (**)(uint64_t, void))(*(void *)result + 112LL))(result, 0LL);
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000763AC(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = (void *)result;
    if ((result & 7) == 0)
    {
      result += 1592LL;
      if (((unint64_t)(v1 + 199) & 7) == 0)
      {
        uint64_t result = strcmp((const char *)result, "Drive Kit Plus");
        if ((_DWORD)result) {
          return 0LL;
        }
        if ((((_BYTE)v1 + 40) & 7) == 0 && ((unint64_t)(v1 + 263) & 7) == 0)
        {
          if (!v1[263]) {
            return 0LL;
          }
          uint64_t v23 = (void *)v1[261];
          uint64_t v2 = v1 + 262;
          if (((unint64_t)(v1 + 262) & 7) == 0)
          {
            if (v23 == v2) {
              return 0LL;
            }
            char v3 = 0;
            while (1)
            {
              uint64_t result = (uint64_t)sub_100003154((uint64_t *)&v23);
              if (!result || (result & 7) != 0 || ((result + 8) & 7) != 0) {
                break;
              }
              uint64_t v4 = *(void *)(result + 8);
              if (v4)
              {
                uint64_t v5 = (const char **)(v4 + 24);
                if (!strcmp(*v5, "com.mbrdna.drivestyle")) {
                  char v3 = 1;
                }
              }

              sub_100008A4C((uint64_t *)&v23);
              if (v23 == v2 || (v3 & 1) != 0)
              {
                if ((v3 & 1) == 0) {
                  return 0LL;
                }
                uint64_t v7 = sub_10000CEF8();
                pthread_mutex_lock(&stru_10011B978);
                uint64_t v23 = *(void **)(v7 + 8);
                if (v23 != (void *)v7)
                {
                  char v8 = 0;
                  while (1)
                  {
                    if (*sub_10000D014((uint64_t *)&v23))
                    {
                      uint64_t result = v1[1];
                      if (result) {
                        BOOL v9 = (v1[1] & 7LL) == 0;
                      }
                      else {
                        BOOL v9 = 0;
                      }
                      if (!v9) {
                        goto LABEL_64;
                      }
                      uint64_t result = sub_10001864C(result);
                      if (!result || (result & 7) != 0) {
                        goto LABEL_64;
                      }
                      uint64_t v11 = result;
                      uint64_t v12 = sub_10000D014((uint64_t *)&v23);
                      if ((*(unsigned int (**)(uint64_t, uint64_t))(*(void *)v11 + 104LL))(v11, *v12))
                      {
                        uint64_t result = (uint64_t)sub_10000D014((uint64_t *)&v23);
                        uint64_t v13 = *(void *)result;
                        if (!*(void *)result || (v13 & 7) != 0) {
                          goto LABEL_64;
                        }
                        if (*(void *)(v13 + 32))
                        {
                          uint64_t result = sub_1000BE638();
                          if (!result) {
                            goto LABEL_64;
                          }
                          uint64_t v14 = result;
                          if ((result & 7) != 0) {
                            goto LABEL_64;
                          }
                          uint64_t v15 = sub_10000D014((uint64_t *)&v23);
                          uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v14 + 104LL))(v14, *v15);
                          if (v16)
                          {
                            uint64_t v17 = v16;
                            char v18 = sub_10000D014((uint64_t *)&v23);
                            uint64_t result = v1[1];
                            if (!result || (result & 7) != 0) {
                              goto LABEL_64;
                            }
                            uint64_t v19 = *v18;
                            uint64_t result = sub_10001864C(result);
                            if (v19 != result)
                            {
                              if ((v17 & 7) != 0) {
                                goto LABEL_64;
                              }
                              if (((*(uint64_t (**)(uint64_t))(*(void *)v17 + 48LL))(v17) & 0x1000) != 0)
                              {
                                uint64_t result = *sub_10000D014((uint64_t *)&v23);
                                if (!result) {
                                  goto LABEL_64;
                                }
                                if ((result & 7) != 0) {
                                  goto LABEL_64;
                                }
                                uint64_t v20 = (const char *)(*(uint64_t (**)(uint64_t))(*(void *)result + 208LL))(result);
                                uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v17 + 104LL))(v17);
                                if (!result) {
                                  goto LABEL_64;
                                }
                                int v21 = (const char *)result;
                                if ((result & 3) != 0) {
                                  goto LABEL_64;
                                }
                                uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v17 + 104LL))(v17);
                                if (!result) {
                                  goto LABEL_64;
                                }
                                uint64_t v22 = result;
                                if ((result & 3) != 0) {
                                  goto LABEL_64;
                                }
                                uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v17 + 104LL))(v17);
                                if (!result || (result & 3) != 0) {
                                  goto LABEL_64;
                                }
                                syslog( 4,  "%s:%s-%d found another port %s that supports Display Port on same connector, with acc details %s, %s, %s",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp",  "CheckForVideoResourceOverride",  4796,  v20,  v21,  (const char *)(v22 + 104),  (const char *)(result + 168));
                                char v8 = 1;
                              }
                            }
                          }
                        }
                      }
                    }

                    sub_10000D048(&v23);
                    if (v23 == (void *)v7) {
                      goto LABEL_63;
                    }
                  }
                }

                char v8 = 0;
LABEL_63:
                pthread_mutex_unlock(&stru_10011B978);
                return v8 & 1;
              }
            }
          }
        }
      }
    }
  }

LABEL_64:
  __break(0x5516u);
  return result;
}

          __break(0x5516u);
          return;
        }
      }
    }
  }

  if (!v6 || (v6 & 7) != 0) {
    goto LABEL_64;
  }
  uint64_t v17 = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 384LL))(v6);
  uint64_t v29 = v17;
  if (!v17) {
    goto LABEL_42;
  }
  char v18 = v17;
  if ((v17 & 7) != 0) {
    goto LABEL_64;
  }
  if (!(*(unsigned int (**)(uint64_t))(*(void *)v17 + 16LL))(v17))
  {
LABEL_42:
    BOOL v26 = 9334LL;
    uint64_t v19 = "%s:%d no trackAccessor! ignore doing pause";
    goto LABEL_43;
  }

  if ((*(unsigned int (**)(uint64_t))(*(void *)v18 + 288LL))(v18)
    && (*(unsigned int (**)(uint64_t))(*(void *)v6 + 528LL))(v6) == 1)
  {
    goto LABEL_44;
  }

  if (!(*(unsigned int (**)(uint64_t))(*(void *)v6 + 424LL))(v6))
  {
    sub_1000CEAEC(0, 4, "%s:%d not playing! ignore doing pause");
    goto LABEL_44;
  }

  if (!a2 || (a2 & 7) != 0) {
    goto LABEL_64;
  }
  uint64_t v20 = sub_10001864C(a2);
  int v21 = v20;
  if (!a3)
  {
    if (!v20 || (v20 & 7) != 0) {
      goto LABEL_64;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)v20 + 216LL))(v20) != 2)
    {
      uint64_t v22 = 1;
      if (!v21) {
        goto LABEL_64;
      }
      goto LABEL_60;
    }

    int v27 = 0LL;
    int v28 = (*(uint64_t (**)(uint64_t))(*(void *)v21 + 216LL))(v21);
    BOOL v26 = 9322LL;
    uint64_t v19 = "%s:%d ignore doing Pause for fromCommand=%d portType=%d";
LABEL_43:
    sub_1000CEAEC(0, 4, v19, "HandleMediaOnRemoteUIAttachedOrRemoved", v26, v27, v28, v29);
    goto LABEL_44;
  }

  uint64_t v22 = (v20 & 7) == 0;
  if (!v20) {
    goto LABEL_64;
  }
LABEL_60:
  if (!v22) {
    goto LABEL_64;
  }
  uint64_t v23 = (*(uint64_t (**)(uint64_t))(*(void *)v21 + 216LL))(v21);
  sub_1000CEAEC( 0,  4,  "%s:%d Pause for fromCommand=%d portType=%d",  "HandleMediaOnRemoteUIAttachedOrRemoved",  9313,  a3,  v23);
  unsigned int v24 = sub_1000614B8(4LL, a2);
  if (!v24) {
    goto LABEL_64;
  }
  uint64_t v25 = v24;
  if ((v24 & 7) != 0) {
    goto LABEL_64;
  }
  sub_100064620(v24, 9u, 1);
  sub_100064620(v25, 9u, 0);
LABEL_44:
  sub_100064D0C(&v29);
LABEL_45:
  if (SHIBYTE(v32) < 0) {
    operator delete(__p);
  }
}

  if ((v9 & 1) == 0) {
    goto LABEL_80;
  }
LABEL_65:
  int v27 = a1 + 152LL * v7;
  int v28 = *(unsigned __int8 *)(v27 + 2505);
  if (*(_BYTE *)(v27 + 2505))
  {
    uint64_t v29 = (const void *)(v27 + 2506);
    if (fwrite((const void *)(v27 + 2506), 1uLL, *(unsigned __int8 *)(v27 + 2505), *v4) != v28) {
      sub_1000CEAEC( 0,  4,  "%s:%d dataLen != writeLen\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoStorage.cpp",  1147);
    }
    if ((v9 & 8) != 0)
    {
      int v30 = (uint64_t *)(a1 + 80LL * a3 + 1216);
      if ((((_BYTE)a1 + 80 * (_BYTE)a3 - 64) & 7) != 0) {
        goto LABEL_131;
      }
      uint64_t v31 = *v30;
      if (!*v30) {
        goto LABEL_130;
      }
      if ((v31 & 7) != 0) {
        goto LABEL_131;
      }
      if (sub_1000CD340(v31, v29, v28)) {
        sub_1000CEAEC( 0,  4,  "%s:%d 0 != xmlStatus\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoStorage.cpp",  1159);
      }
    }

    if ((v9 & 0x10) != 0)
    {
      if ((((_BYTE)a1 + 80 * (_BYTE)a3 - 48) & 7) != 0) {
        goto LABEL_131;
      }
      if ((UpdateSigningContext(*(void *)(a1 + 80LL * a3 + 1232), v29, v28) & 1) == 0) {
        sub_1000CEAEC(0, 4, "%s:%d !secStatus\n");
      }
    }
  }

  else
  {
    sub_1000CEAEC(0, 4, "%s:%d dataLen == 0\n");
  }

uint64_t sub_1000766F8(uint64_t result)
{
  if (!result) {
    goto LABEL_20;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_20;
  }
  if (qword_10011BED0 != -1) {
    dispatch_once(&qword_10011BED0, &stru_100106060);
  }
  int v2 = byte_10011B6A8;
  int v3 = byte_10011BEC9;
  uint64_t result = sub_100076884(*(void *)(v1 + 8));
  if (((v1 + 1976) & 7) != 0)
  {
LABEL_20:
    __break(0x5516u);
    goto LABEL_21;
  }

  uint64_t v4 = result;
  if (*(_BYTE *)(v1 + 1976)) {
    goto LABEL_10;
  }
  if (*(unsigned __int8 *)(v1 + 1977) > 1u)
  {
LABEL_21:
    __break(0x550Au);
    return result;
  }

  if (!*(_BYTE *)(v1 + 1977))
  {
    sub_1000CEAEC(0, 4, "AccInfo Pending, skip sending Database Changed Notification until ready(%d) or timeout(%d)");
    return 0LL;
  }

void sub_10007681C(id a1)
{
  byte_10011BEC9 = CFPreferencesGetAppBooleanValue(@"SendDBChangeForAll", @"com.apple.iapd", 0LL) != 0;
  byte_10011B6A8 = CFPreferencesGetAppBooleanValue(@"DontSendDBChange", @"com.apple.iapd", 0LL) == 0;
}

uint64_t sub_100076884(uint64_t a1)
{
  if (!a1) {
    return 0LL;
  }
  uint64_t result = sub_100056728(a1);
  if (!(_DWORD)result) {
    return 0LL;
  }
  if ((a1 & 7) == 0)
  {
    uint64_t result = sub_100057A88(a1);
    if (result)
    {
      if ((result & 7) == 0) {
        return sub_100057CA0(result);
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000768EC(uint64_t result, int a2)
{
  if (!result) {
    goto LABEL_33;
  }
  int v2 = (unsigned __int8 *)result;
  if ((result & 7) != 0) {
    goto LABEL_33;
  }
  uint64_t result = *(void *)(result + 8);
  if (!result || (result & 7) != 0) {
    goto LABEL_33;
  }
  uint64_t result = sub_10001864C(result);
  if (!result)
  {
    __break(0x5518u);
LABEL_33:
    __break(0x5516u);
    goto LABEL_34;
  }

  uint64_t v5 = result;
  uint64_t result = sub_100061274();
  if (!result || (result & 7) != 0) {
    goto LABEL_33;
  }
  uint64_t result = sub_10008D184(result, v5);
  if ((_DWORD)result != 56) {
    return 1LL;
  }
  if (v2[2200] > 1u)
  {
LABEL_34:
    __break(0x550Au);
    return result;
  }

  if (v2[2200]) {
    return 1LL;
  }
  uint64_t result = 1LL;
  switch(a2)
  {
    case 0:
    case 1:
    case 2:
    case 8:
    case 10:
      uint64_t result = (v2[2056] >> 2) & 1;
      break;
    case 3:
      uint64_t result = v2[2056] & 1;
      break;
    case 14:
      uint64_t result = (v2[2057] >> 6) & 1;
      break;
    case 17:
      uint64_t result = (v2[2056] >> 1) & 1;
      break;
    case 18:
      uint64_t result = (v2[2057] >> 4) & 1;
      break;
    case 22:
      if ((v2[2058] & 0x80) != 0)
      {
        uint64_t result = sub_1000438B8();
        if (!result || (result & 7) != 0) {
          goto LABEL_33;
        }
        uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 112LL))(result);
      }

      else
      {
        uint64_t result = 0LL;
      }

      break;
    default:
      return result;
  }

  return result;
}

void sub_100076A64(uint64_t a1, uint64_t a2, int a3)
{
  if (a1)
  {
    if ((a1 & 7) == 0)
    {
      if (a2)
      {
        if ((a2 & 7) == 0)
        {
          uint64_t v6 = *(void *)(a2 + 8);
          uint64_t v7 = *(unsigned __int8 **)(a2 + 24);
          unsigned int v8 = *(unsigned __int16 *)(a2 + 128);
          uint64_t v9 = sub_1000438B8();
          uint64_t v10 = *(void *)(a1 + 8);
          if (v10)
          {
            if ((v10 & 7) == 0)
            {
              uint64_t v11 = sub_1000579D4(v10);
              uint64_t v12 = sub_100061274();
              if (v12)
              {
                BOOL v13 = v12;
                if ((v12 & 7) == 0)
                {
                  char v14 = sub_10008CBE4(v12, v6);
                  BOOL v15 = sub_100054B88(v13, v6);
                  if (v8 && (v14 & 3) == 1 && !v15)
                  {
                    if (!v7) {
                      goto LABEL_227;
                    }
                    unsigned int v16 = *v7;
                    if (v16 != 3 && v16 <= 0x16)
                    {
                      sub_1000ABE78(a2, v6, 0, 0LL, 2, *(_DWORD *)(a2 + 68), 7, 0x2Bu, 0, 255, 0LL, 0, 0, 0);
                      sub_1000AB4C4(*(void *)(a1 + 8), a2, 0, 1u);
                      sub_10007304C(a1, v6);
LABEL_21:
                      sub_1000CEAEC(0, 4, "%s:%d invalid payload!\n");
                      return;
                    }
                  }

                  else if (!v7)
                  {
                    goto LABEL_21;
                  }

                  if (v8 < 3) {
                    return;
                  }
                  unsigned int v17 = *v7;
                  switch(v17)
                  {
                    case 0u:
                      if (((sub_100076174(v6) & 1) != 0 || a3) && v8 == 3)
                      {
                        unsigned int v18 = v7[1];
                        if (v18 <= 2)
                        {
                          if (v7[2] <= 1u)
                          {
                            if (v11 && (v11 & 7) == 0)
                            {
                              unsigned int v21 = sub_100077544(v11, dword_1000DEDF8[(char)v18], v7[2] != 0);
                              goto LABEL_224;
                            }

                            break;
                          }
                        }
                      }

                      return;
                    case 1u:
                      if (((sub_100076174(v6) & 1) != 0 || a3) && v8 == 3)
                      {
                        uint64_t v19 = v7[1];
                        if (!v7[1] || (_DWORD)v19 == 1)
                        {
                          unsigned int v20 = v7[2];
                          if (v20 <= 1)
                          {
                            if (v11 && (v11 & 7) == 0)
                            {
                              unsigned int v21 = sub_1000775C8(v11, v19, v20 == 1);
                              goto LABEL_224;
                            }

                            break;
                          }
                        }
                      }

                      return;
                    case 2u:
                      if (((sub_100076174(v6) & 1) != 0 || a3) && v8 == 3)
                      {
                        uint64_t v22 = v7[1];
                        if (v22 <= 1)
                        {
                          unsigned int v23 = v7[2];
                          if (v23 <= 1)
                          {
                            if (v11 && (v11 & 7) == 0)
                            {
                              unsigned int v21 = sub_10007759C(v11, v22, v23 == 1);
                              goto LABEL_224;
                            }

                            break;
                          }
                        }
                      }

                      return;
                    case 3u:
                      if (v8 == 3)
                      {
                        if (!v6 || (v6 & 7) != 0) {
                          break;
                        }
                        if (((*(uint64_t (**)(uint64_t))(*(void *)v6 + 232LL))(v6) & 1) == 0)
                        {
                          if (!v9 || (v9 & 7) != 0) {
                            break;
                          }
                          if ((*(unsigned int (**)(uint64_t, uint64_t))(*(void *)v9 + 192LL))(v9, v6))
                          {
                            uint64_t v24 = sub_100061274();
                            if (!v24 || (v24 & 7) != 0) {
                              break;
                            }
                            __int16 v25 = sub_10008C710(v24, v6);
                            int v26 = sub_1000774F8(*(void *)(a1 + 8));
                            *(_BYTE *)(a1 + 2212) = 1;
                            if ((v25 & 0x400) == 0
                              || (int v57 = v26, v58 = sub_1000651CC(v6), (v57 & 0x200000) != 0)
                              || (v58 & 1) == 0)
                            {
                              unsigned int v28 = v7[1];
                              if (v28 <= 1) {
                                sub_1000710B8(a1, v27, v28 != 0);
                              }
                            }
                          }

                          else if (v7 == (unsigned __int8 *)-1LL)
                          {
                            goto LABEL_228;
                          }
                        }
                      }

                      return;
                    case 4u:
                    case 5u:
                    case 6u:
                    case 7u:
                    case 0x11u:
                      sub_100076174(v6);
                      return;
                    case 8u:
                      if (((sub_100076174(v6) & 1) != 0 || a3) && v8 == 3)
                      {
                        if (v7[1] <= 4u)
                        {
                          if (!v11 || (v11 & 7) != 0) {
                            break;
                          }
                          uint64_t v29 = sub_100076280(v11);
                          unsigned int v30 = (v7[1] - 1);
                          if (v30 >= 4)
                          {
                            uint64_t v31 = v29;
                          }

                          else
                          {
                            uint64_t v31 = v30 + 1;
                          }

                          unsigned int v21 = sub_1000775F4(v11, v31, 0LL);
                          goto LABEL_224;
                        }
                      }

                      return;
                    case 9u:
                      if (((sub_100076174(v6) & 1) != 0 || a3) && v8 == 3)
                      {
                        unsigned int v32 = v7[1];
                        if (v32 <= 1)
                        {
                          unsigned int v33 = v7[2];
                          if (v33 <= 1)
                          {
                            if (v11 && (v11 & 7) == 0)
                            {
                              unsigned int v21 = sub_100077620(v11, v32 != 0, v33 != 0);
                              goto LABEL_224;
                            }

                            break;
                          }
                        }
                      }

                      return;
                    case 0xAu:
                      if (((sub_100076174(v6) & 1) != 0 || a3) && v8 == 3)
                      {
                        uint64_t v34 = v7[1];
                        if (!v7[1] || (_DWORD)v34 == 1)
                        {
                          unsigned int v35 = v7[2];
                          if (v35 <= 1)
                          {
                            if (v11 && (v11 & 7) == 0)
                            {
                              unsigned int v21 = sub_100077570(v11, v34, v35 == 1);
                              goto LABEL_224;
                            }

                            break;
                          }
                        }
                      }

                      return;
                    case 0xCu:
                      if (((sub_100076174(v6) & 1) != 0 || a3) && v8 == 3)
                      {
                        unsigned int v36 = v7[1];
                        if (v36 <= 1)
                        {
                          unsigned int v37 = v7[2];
                          if (v37 <= 1)
                          {
                            if (v11 && (v11 & 7) == 0)
                            {
                              unsigned int v21 = sub_10007764C(v11, v36 != 0, v37 != 0);
                              goto LABEL_224;
                            }

                            break;
                          }
                        }
                      }

                      return;
                    case 0xDu:
                      if (((sub_100076174(v6) & 1) != 0 || a3) && v8 == 3)
                      {
                        unsigned int v38 = v7[1];
                        if (v38 <= 1)
                        {
                          unsigned int v39 = v7[2];
                          if (v39 <= 1)
                          {
                            if (v11 && (v11 & 7) == 0)
                            {
                              unsigned int v21 = sub_100077678(v11, v38 != 0, v39 != 0);
                              goto LABEL_224;
                            }

                            break;
                          }
                        }
                      }

                      return;
                    case 0xEu:
                      if (!v9 || (v9 & 7) != 0) {
                        break;
                      }
                      if ((sub_100076174(v6) & 1) != 0)
                      {
                        if (v8 != 3)
                        {
                          BOOL v40 = 0LL;
                          goto LABEL_191;
                        }
                      }

                      else
                      {
                        BOOL v40 = 0LL;
                        if (v8 != 3 || (a3 & 1) == 0) {
                          goto LABEL_191;
                        }
                      }

                      BOOL v40 = v7[1] == 1;
LABEL_191:
                      sub_10006FDE8(a1, v40, 0);
                      return;
                    case 0xFu:
                      if (((sub_100076174(v6) & 1) != 0 || a3) && v8 == 3)
                      {
                        unsigned int v41 = v7[1];
                        if (v41 <= 1)
                        {
                          unsigned int v42 = v7[2];
                          if (v42 <= 1)
                          {
                            if (v11 && (v11 & 7) == 0)
                            {
                              unsigned int v43 = sub_1000776A4(v11, v41 != 0, v42 != 0);
                              *(_BYTE *)(a1 + 2203) = sub_1000776C4(v11);
                              goto LABEL_225;
                            }

                            break;
                          }
                        }
                      }

                      return;
                    case 0x10u:
                      if (!v9 || (v9 & 7) != 0) {
                        break;
                      }
                      if ((*(unsigned int (**)(uint64_t, uint64_t))(*(void *)v9 + 248LL))(v9, v6)
                        && ((a3 & 1) != 0 || sub_100076174(v6))
                        && v8 == 3)
                      {
                        unsigned int v44 = v7[1];
                        if (v44 <= 1)
                        {
                          if (!v11 || (v11 & 7) != 0) {
                            break;
                          }
                          sub_100077724(v11, v44 == 1, 0LL);
                        }
                      }

                      return;
                    case 0x12u:
                      if ((sub_100076174(v6) & 1) == 0 && !a3 || v8 != 3) {
                        return;
                      }
                      unsigned int v45 = v7[1];
                      if (v45 > 1) {
                        return;
                      }
                      uint64_t v46 = *(void *)(a1 + 8);
                      BOOL v48 = (v46 & 7) == 0 && v46 != 0;
                      if (v45 == 1)
                      {
                        if (!v48) {
                          break;
                        }
                        sub_100057A9C(v46, 0LL, 3u);
                      }

                      else
                      {
                        if (!v48) {
                          break;
                        }
                        sub_100057AD0(v46, 0LL, 3u);
                      }

                      if (!*(_BYTE *)(a1 + 2200) && (*(_BYTE *)(a1 + 1273) & 0x10) == 0)
                      {
                        unsigned int v43 = 4;
LABEL_219:
                        if ((*(_BYTE *)(a1 + 1273) & 0x10) != 0) {
                          sub_100077764(*(void *)(a1 + 8), v45 == 1);
                        }
                        goto LABEL_225;
                      }

                      if (!v11 || (v11 & 7) != 0) {
                        break;
                      }
                      unsigned int v59 = sub_100077744(v11, v45 == 1, 0LL);
                      unsigned int v43 = v59;
                      if (!*(_BYTE *)(a1 + 2200)) {
                        goto LABEL_219;
                      }
LABEL_225:
                      if (v43 <= 0x1F) {
                        return;
                      }
LABEL_226:
                      __break(0x550Au);
                      break;
                    case 0x13u:
                      if ((sub_100076174(v6) & 1) != 0)
                      {
                        if (v8 != 3) {
                          return;
                        }
                      }

                      else if (v8 != 3 || (a3 & 1) == 0)
                      {
                        return;
                      }

                      unsigned int v52 = v7[1];
                      if (v52 > 1) {
                        return;
                      }
                      unsigned int v53 = v7[2];
                      if (v53 > 1) {
                        return;
                      }
                      if (v11 && (v11 & 7) == 0)
                      {
                        unsigned int v43 = sub_1000776E4(v11, v52 != 0, v53 != 0);
                        *(_BYTE *)(a1 + 2213) = sub_100077704(v11);
                        goto LABEL_225;
                      }

                      break;
                    case 0x15u:
                      if ((sub_100076174(v6) & 1) == 0 && !a3 || v8 != 3) {
                        return;
                      }
                      unsigned int v49 = v7[1];
                      if (v49 > 1) {
                        return;
                      }
                      if (v7[2] > 1u) {
                        return;
                      }
                      if (!v11 || (v11 & 7) != 0) {
                        break;
                      }
                      unsigned int v50 = *(unsigned __int8 *)(a1 + 2200);
                      if (v50 > 1) {
                        goto LABEL_226;
                      }
                      unsigned int v21 = sub_100077858(v11, v49 == 1, 1LL, v50 == 0);
                      goto LABEL_224;
                    case 0x16u:
                      uint64_t v51 = sub_1000438B8();
                      if (!v51 || (v51 & 7) != 0) {
                        break;
                      }
                      if (!(*(unsigned int (**)(uint64_t))(*(void *)v51 + 112LL))(v51)
                        || (sub_100076174(v6) & 1) == 0 && !a3
                        || v8 != 3)
                      {
                        return;
                      }

                      unsigned int v54 = v7[1];
                      if (v54 > 1) {
                        return;
                      }
                      unsigned int v55 = v7[2];
                      if (v55 > 1) {
                        return;
                      }
                      if (!v11 || (v11 & 7) != 0) {
                        break;
                      }
                      unsigned int v56 = *(unsigned __int8 *)(a1 + 2200);
                      if (v56 > 1) {
                        goto LABEL_226;
                      }
                      unsigned int v21 = sub_100077878(v11, v54 != 0, v55 != 0, v56 == 0);
LABEL_224:
                      unsigned int v43 = v21;
                      goto LABEL_225;
                    default:
                      sub_1000CEAEC(0, 4, "CIapLingoGeneral::HandleSetiPodPreferences invalid preference: 0x%02X\n");
                      return;
                  }
                }
              }
            }
          }
        }
      }
    }
  }

LABEL_227:
  __break(0x5516u);
LABEL_228:
  __break(0x5513u);
}

uint64_t sub_1000774F8(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    uint64_t result = sub_100056728(result);
    if (!(_DWORD)result) {
      return 0LL;
    }
    if ((v1 & 7) == 0) {
      return sub_100057C70(v1);
    }
  }

  else
  {
    __break(0x5518u);
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_100077544(uint64_t result, unsigned int a2, uint64_t a3)
{
  if (!result || (result & 7) != 0 || (result += 16LL, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else if (a2 < 4)
  {
    return sub_1000B2B58(result, a2, a3);
  }

  __break(0x550Au);
  return result;
}

uint64_t sub_100077570(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result || (result & 7) != 0 || (result += 16LL, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else if (a2 < 2)
  {
    return sub_1000B2D14(result, a2, a3);
  }

  __break(0x550Au);
  return result;
}

uint64_t sub_10007759C(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result || (result & 7) != 0 || (result += 16LL, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else if (a2 < 4)
  {
    return sub_1000B2D64(result, a2, a3);
  }

  __break(0x550Au);
  return result;
}

uint64_t sub_1000775C8(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result || (result & 7) != 0 || (result += 16LL, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else if (a2 < 2)
  {
    return sub_1000B2DB4(result, a2, a3);
  }

  __break(0x550Au);
  return result;
}

uint64_t sub_1000775F4(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result || (result & 7) != 0 || (result += 16LL, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else if (a2 < 8)
  {
    return sub_1000B2E04(result, a2, a3);
  }

  __break(0x550Au);
  return result;
}

uint64_t sub_100077620(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result || (result & 7) != 0 || (result += 16LL, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else if (a2 < 2)
  {
    return sub_1000B2854(result, a2, a3);
  }

  __break(0x550Au);
  return result;
}

uint64_t sub_10007764C(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result || (result & 7) != 0 || (result += 16LL, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else if (a2 < 2)
  {
    return sub_1000B2804(result, a2, a3);
  }

  __break(0x550Au);
  return result;
}

uint64_t sub_100077678(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result || (result & 7) != 0 || (result += 16LL, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else if (a2 < 2)
  {
    return sub_1000B2E54(result, a2, a3);
  }

  __break(0x550Au);
  return result;
}

uint64_t sub_1000776A4(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result)
  {
    if ((result & 7) == 0)
    {
      result += 432LL;
      if ((result & 7) == 0) {
        return sub_1000B3924(result, a2, a3);
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000776C4(uint64_t result)
{
  if (result)
  {
    if ((result & 7) == 0)
    {
      result += 432LL;
      if ((result & 7) == 0) {
        return sub_100087580(result);
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000776E4(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result)
  {
    if ((result & 7) == 0)
    {
      result += 528LL;
      if ((result & 7) == 0) {
        return sub_1000B3924(result, a2, a3);
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_100077704(uint64_t result)
{
  if (result)
  {
    if ((result & 7) == 0)
    {
      result += 528LL;
      if ((result & 7) == 0) {
        return sub_100087580(result);
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_100077724(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result)
  {
    if ((result & 7) == 0)
    {
      result += 720LL;
      if ((result & 7) == 0) {
        return sub_1000B3924(result, a2, a3);
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_100077744(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result)
  {
    if ((result & 7) == 0)
    {
      result += 816LL;
      if ((result & 7) == 0) {
        return sub_1000B3924(result, a2, a3);
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_100077764(uint64_t result, char a2)
{
  if (!result)
  {
    sub_1000CEAEC( 0,  4,  "%s:%d SetDisplayPort:  no handle!..",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp",  13295);
    return 22LL;
  }

  if ((result & 7) != 0) {
    goto LABEL_13;
  }
  uint64_t result = sub_100057A88(result);
  if (!result) {
    goto LABEL_13;
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_13;
  }
  uint64_t result = sub_10001864C(result);
  if (!result) {
    return 22LL;
  }
  uint64_t v4 = result;
  char v7 = a2;
  if ((result & 7) != 0)
  {
LABEL_13:
    __break(0x5516u);
    return result;
  }

  int v5 = (*(uint64_t (**)(uint64_t, void))(*(void *)result + 16LL))(result, 0LL);
  uint64_t v6 = sub_1000ABB10(v4, 0, 0LL, 96, v5, &v7, 1u);
  if (!v6) {
    sub_1000D276C();
  }
  return sub_1000822F0(v6, 1, 200, 0LL, v3);
}

uint64_t sub_100077858(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (result)
  {
    if ((result & 7) == 0)
    {
      result += 1200LL;
      if ((result & 7) == 0) {
        return sub_1000B57B4(result, a2, a3, a4);
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_100077878(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (result)
  {
    if ((result & 7) == 0)
    {
      result += 1296LL;
      if ((result & 7) == 0) {
        return sub_1000B0EEC(result, a2, a3, a4);
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_100077898(uint64_t a1, uint64_t a2)
{
  if (!a1) {
    goto LABEL_100;
  }
  if ((a1 & 7) != 0) {
    goto LABEL_100;
  }
  *(void *)&__int128 v4 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v4 + 1) = 0xAAAAAAAAAAAAAAAALL;
  __int128 v38 = v4;
  __int128 v39 = v4;
  __int128 v36 = v4;
  __int128 v37 = v4;
  __int128 v34 = v4;
  __int128 v35 = v4;
  if (!a2) {
    goto LABEL_100;
  }
  if ((a2 & 7) != 0) {
    goto LABEL_100;
  }
  uint64_t v5 = *(void *)(a2 + 8);
  unint64_t v6 = *(void *)(a2 + 24);
  unsigned int v7 = *(unsigned __int16 *)(a2 + 128);
  __int128 v34 = 0u;
  __int128 v35 = 0u;
  __int128 v36 = 0u;
  __int128 v37 = 0u;
  __int128 v38 = 0u;
  __int128 v39 = 0u;
  uint64_t v8 = sub_1000B6CE0();
  if (!v8 || (v8 & 7) != 0) {
    goto LABEL_100;
  }
  unsigned int v9 = 0;
  if (sub_10008E10C(v8, v5))
  {
    unsigned int v10 = *(_DWORD *)(a2 + 68);
LABEL_12:
    WORD5(v34) = v10;
    goto LABEL_13;
  }

  if (v6 && v7 >= 2)
  {
    unsigned int v10 = bswap32(*(unsigned __int16 *)v6) >> 16;
    unsigned int v9 = 2;
    goto LABEL_12;
  }

LABEL_101:
          __break(0x5513u);
        }

LABEL_100:
        __break(0x5516u);
        goto LABEL_101;
      }
    }

  if ((v9 & 0x10) == 0) {
    goto LABEL_114;
  }
LABEL_101:
  if (!st_size) {
    goto LABEL_111;
  }
  *(void *)&v55.tm_sec = 0LL;
  *(void *)&v54.tm_sec = 0xAAAAAAAAAAAAAAAALL;
  if ((((_BYTE)a1 + 80 * (_BYTE)a3 - 48) & 7) != 0) {
    goto LABEL_131;
  }
  if (!FinalizeSigningContext(*(void *)(a1 + 80LL * a3 + 1232), &v55, &v54))
  {
    sub_1000CEAEC( 0,  4,  "%s:%d !secStatus\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoStorage.cpp",  1247);
    goto LABEL_111;
  }

  BOOL v40 = (const char *)(a1 + 80LL * a3 + 1264);
  if ((((_BYTE)a1 + 80 * (_BYTE)a3 - 16) & 7) != 0)
  {
LABEL_131:
    __break(0x5516u);
    goto LABEL_132;
  }

  unsigned int v41 = fopen(v40, "w+");
  fwrite(*(const void **)&v55.tm_sec, 1uLL, *(size_t *)&v54.tm_sec, v41);
  fclose(v41);
  free(*(void **)&v55.tm_sec);
LABEL_111:
  unsigned int v42 = (void *)(a1 + 80LL * a3 + 1232);
  if ((((_BYTE)a1 + 80 * (_BYTE)a3 - 48) & 7) != 0) {
    goto LABEL_131;
  }
  if (!*v42)
  {
    sub_1000CEAEC( 0,  4,  "%s:%d NULL == pOpenFile->fData\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoStorage.cpp",  1260);
    if (st_size) {
      goto LABEL_120;
    }
    goto LABEL_115;
  }

  EraseSigningContext();
  *unsigned int v42 = 0LL;
LABEL_114:
  if (st_size) {
    goto LABEL_120;
  }
LABEL_115:
  unsigned int v43 = (const char *)(a1 + 80LL * a3 + 1240);
  syslog(4, "Deleting zero-length feature file %s\n", v43);
  unlink(v33);
LABEL_120:
  *uint64_t v8 = 0;
  unsigned int v44 = a1 + 152LL * v7;
  unsigned int v45 = *(unsigned __int8 *)(v44 + 2504) - 1;
  if (v45 > 0xFF) {
    goto LABEL_135;
  }
  *(_BYTE *)(v44 + 2504) = v45;
  *(_BYTE *)(a1 + 152LL * v7 + 2505) = 0;
  if (v7 == 2)
  {
    uint64_t v46 = sub_1000C0AEC();
    if (v46)
    {
      if ((v46 & 7) == 0)
      {
        (*(void (**)(uint64_t))(*(void *)v46 + 184LL))(v46);
        uint64_t v47 = sub_10004783C();
        if (v47)
        {
          if ((v47 & 7) == 0)
          {
            (*(void (**)(uint64_t))(*(void *)v47 + 720LL))(v47);
            return 0LL;
          }
        }
      }
    }

    goto LABEL_131;
  }

  return 0LL;
}

    __break(0x5516u);
    goto LABEL_101;
  }

LABEL_102:
    __break(0x550Au);
  }

  __break(0x5515u);
LABEL_104:
  __break(0x5507u);
LABEL_105:
  __break(0x5500u);
  return result;
}

  __break(0x550Au);
  return result;
}

            __break(0x5516u);
LABEL_103:
            __break(0x550Au);
          }

          unsigned int v29 = __s;
          if (!__s)
          {
            LOBYTE(v12) = 0;
            unsigned int v9 = 34;
            goto LABEL_94;
          }

          uint64_t v30 = strlen(__s);
          unsigned int v12 = v30 + 1;
          if (v30 != -1LL)
          {
            if (v12 <= 0xFF)
            {
              if ((v30 + 1) > 0xDDu)
              {
                sub_1000CEAEC( 0,  4,  "%s:%d lengthOfSSIDString + lengthOfPassphraseString are too large\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp",  14375);
                unsigned int v9 = 0;
                unsigned int v10 = (_BYTE *)0xAAAAAAAAAAAAAAAALL;
                goto LABEL_77;
              }

              unsigned int v9 = v30 + 35;
LABEL_94:
              __int128 v35 = (char *)operator new[](v9);
              *__int128 v35 = 0;
              if (v35 != (char *)-1LL)
              {
                __int128 v36 = v45;
                v35[1] = v45;
                if (v35 != (char *)-2LL)
                {
                  unsigned int v10 = v35;
                  __int128 v37 = v43;
                  *(_OWORD *)(v35 + 2) = *(_OWORD *)&v42[4];
                  *(_OWORD *)(v35 + 18) = v37;
                  if ((unint64_t)(v35 + 2) <= 0xFFFFFFFFFFFFFFDFLL)
                  {
                    if (v36) {
                      memcpy(v35 + 34, v29, v12);
                    }
LABEL_77:
                    if (__s)
                    {
                      bzero(__s, v12);
                      if (__s) {
                        operator delete[](__s);
                      }
                    }

                    if ((a2 & 7) == 0)
                    {
                      uint64_t v31 = (*(uint64_t (**)(uint64_t, void))(*(void *)a2 + 16LL))(a2, 0LL);
                      __int16 v32 = sub_1000ABB10(a2, 0, 0LL, 106, v31, v10, v9);
                      char v33 = v32;
                      if ((_DWORD)v45)
                      {
                        if (v32 && (v32 & 7) == 0)
                        {
                          *(_BYTE *)(v32 + 132) |= 8u;
                          operator delete[](v10);
LABEL_87:
                          sub_1000AB4C4(*(void *)(a1 + 8), v33, 0, 2u);
                          return;
                        }
                      }

                      else
                      {
                        operator delete[](v10);
                        if (v33) {
                          goto LABEL_87;
                        }
                        __break(0x5518u);
                      }
                    }

                    goto LABEL_102;
                  }
                }
              }

              goto LABEL_106;
            }

            goto LABEL_104;
          }

          goto LABEL_105;
        }

        if ((sub_1000785F0(a1) & 0x400) != 0) {
          sub_100078268(a1, 0, a2);
        }
        if ((sub_1000785F0(a1) & 0x80000) != 0) {
          sub_10007861C(a1, 0, a2);
        }
      }

      return;
    case 3:
      if (((a3 + 4) & 3) == 0)
      {
        switch(*(_DWORD *)(a3 + 4))
        {
          case 0x140001:
            if (((a3 + 24) & 7) != 0) {
              goto LABEL_102;
            }
            unint64_t v13 = *(void *)(a3 + 24);
            if ((v13 & 1) != 0 || !v13 || (((_DWORD)v13 + 2) & 1) != 0) {
              goto LABEL_102;
            }
            sub_100080A40(a1, *(_WORD *)(v13 + 2), *(_BYTE *)v13, -1);
            return;
          case 0x140002:
            if (((a3 + 24) & 7) != 0) {
              goto LABEL_102;
            }
            if (*(void *)(a3 + 24) >> 16) {
              goto LABEL_104;
            }
            sub_100080D38(a1, *(void *)(a3 + 24), 0xFFFFFFFF);
            return;
          case 0x140003:
            if (((a3 + 24) & 7) != 0) {
              goto LABEL_102;
            }
            if (*(void *)(a3 + 24) >> 16) {
              goto LABEL_104;
            }
            *(_WORD *)unsigned int v42 = *(void *)(a3 + 24);
            unsigned int v14 = *(void *)(a1 + 8);
            uint64_t v16 = v42;
            unint64_t v15 = 11;
            unsigned int v17 = 2;
            goto LABEL_61;
          case 0x140004:
            if (((a3 + 24) & 7) != 0) {
              goto LABEL_102;
            }
            if (*(void *)(a3 + 24) >> 16) {
              goto LABEL_104;
            }
            sub_100082750(a1, *(void *)(a3 + 24), -1);
            return;
          default:
            return;
        }
      }

      goto LABEL_102;
    case 4:
      if (((a3 + 4) & 3) != 0) {
        goto LABEL_102;
      }
      if (*(_DWORD *)(a3 + 4) == 524310 && (sub_1000785F0(a1) & 0x200) != 0)
      {
        sub_1000CEAEC( 0,  4,  "%s:%d Received iPod Database Changed notification.\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp",  14504);
        if (sub_1000766F8(a1))
        {
          unsigned int v14 = *(void *)(a1 + 8);
          unint64_t v15 = 9;
          uint64_t v16 = 0LL;
          unsigned int v17 = 0;
LABEL_61:
          sub_100081790(v14, v15, v16, v17, 1u, 0LL, -1);
        }
      }

      return;
    case 6:
      if (((a3 + 4) & 3) != 0) {
        goto LABEL_102;
      }
      if (*(_DWORD *)(a3 + 4) != 196613) {
        return;
      }
      v42[0] = -86;
      if (((a3 + 8) & 7) != 0) {
        goto LABEL_102;
      }
      v42[0] = *(_DWORD *)(a3 + 8);
      sub_100081790(*(void *)(a1 + 8), 0xFu, v42, 1u, 1u, 0LL, -1);
      uint64_t v18 = sub_100061274();
      if (!v18 || (v18 & 7) != 0) {
        goto LABEL_102;
      }
      int v19 = sub_10008C2EC(v18, *(void *)(a1 + 8), 3u);
      if (!v19) {
        return;
      }
      if ((v19 & 7) != 0) {
        goto LABEL_102;
      }
      sub_10006DFA4(v19, v42[0] != 0);
      return;
    default:
      return;
  }

uint64_t sub_100077E7C(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0 || !a2 || (a2 & 7) != 0) {
LABEL_24:
  }
    __break(0x5516u);
  __int128 v4 = *(unsigned __int16 **)(a2 + 24);
  if (!v4)
  {
    __break(0x5518u);
    goto LABEL_24;
  }

  int v5 = *(unsigned __int16 *)(a2 + 128);
  uint64_t v6 = *(void *)(a2 + 8);
  if (v5 != 3) {
    return 4LL;
  }
  HIWORD(v11) = -1;
  LODWORD(v11) = 0;
  uint64_t v7 = sub_1000B6CE0();
  if (!v7 || (v7 & 7) != 0) {
    goto LABEL_24;
  }
  uint64_t result = sub_10008E10C(v7, v6);
  if ((_DWORD)result)
  {
    unsigned int v9 = *(_DWORD *)(a2 + 68);
  }

  else
  {
    if ((unint64_t)v4 >= 0xFFFFFFFFFFFFFFFELL)
    {
LABEL_26:
      __break(0x5513u);
      goto LABEL_27;
    }

    unsigned int v9 = bswap32(*v4++) >> 16;
  }

  uint64_t v10 = *(unsigned __int8 *)v4;
  if (v10 > 0x1F)
  {
    __break(0x550Au);
    goto LABEL_26;
  }

  if (!(_DWORD)v10) {
    return v10;
  }
  uint64_t result = sub_100062E78(a1, *(_DWORD *)(a2 + 68), (_WORD *)&v11 + 3, &v11, 0xFFFFu);
  if ((_DWORD)result)
  {
    sub_1000CEAEC( 0,  4,  "%s:%d CIapLingoGeneral::HandleAckTunnelDataToDev timeout before response received !\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp",  6137);
    return v10;
  }

  __int128 v13 = 0u;
  __int128 v14 = 0u;
  uint64_t v18 = 0LL;
  __int128 v16 = 0u;
  __int128 v17 = 0u;
  __int128 v15 = 0u;
  uint64_t v12 = v6;
  LOWORD(v13) = HIWORD(v11);
  if (!HIWORD(v9))
  {
    WORD1(v13) = v9;
    DWORD1(v14) = v11;
    BYTE8(v14) = 4;
    sub_10007158C(a1, 0, 1LL, (uint64_t)&v12, 96);
    return v10;
  }

uint64_t sub_100078038(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_35;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_35;
  }
  unint64_t v4 = *(void *)(a2 + 24);
  if (!v4) {
    goto LABEL_34;
  }
  uint64_t v5 = *(void *)(a2 + 8);
  unsigned int v6 = *(unsigned __int16 *)(a2 + 128);
  uint64_t result = sub_100076174(v5);
  if (!(_DWORD)result) {
    return 7LL;
  }
  if (v6 < 4) {
    return 4LL;
  }
  if (!v5)
  {
LABEL_34:
    __break(0x5518u);
    goto LABEL_35;
  }

  uint64_t v19 = 0LL;
  uint64_t v20 = 0LL;
  uint64_t v17 = v5;
  uint64_t v18 = 49LL;
  uint64_t result = sub_1000B6CE0();
  if (!result || (result & 7) != 0) {
    goto LABEL_35;
  }
  uint64_t result = sub_10008E10C(result, v5);
  if ((_DWORD)result)
  {
    unsigned int v7 = 0;
    unsigned int v8 = *(_DWORD *)(a2 + 68);
  }

  else
  {
    unsigned int v8 = bswap32(*(unsigned __int16 *)v4) >> 16;
    unsigned int v7 = 2;
  }

  WORD1(v18) = v8;
  if (~v4 < v7) {
    goto LABEL_36;
  }
  unsigned int v10 = *(unsigned __int8 *)(v4 + v7);
  LODWORD(v19) = v10;
  if (v10 <= 1)
  {
    if (v10)
    {
      uint64_t v9 = 4LL;
      sub_1000CEAEC( 0,  4,  "%s:%d CIapLingoGeneral::HandleTxdTunnelControlToiPod invalid control type: 0x%02X\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp",  6223,  1);
      int v11 = 0;
    }

    else
    {
      if (v7 + 2 != v6) {
        goto LABEL_24;
      }
      unint64_t v12 = v7 | 1LL;
      if (~v4 < v12)
      {
LABEL_36:
        __break(0x5513u);
        goto LABEL_37;
      }

      unsigned int v13 = *(unsigned __int8 *)(v4 + v12);
      if (v13 <= 3)
      {
        uint64_t v9 = 0LL;
        HIDWORD(v19) = v13;
        LOBYTE(v20) = 0;
        int v11 = 1;
      }

      else
      {
LABEL_24:
        int v11 = 0;
        uint64_t v9 = 4LL;
      }
    }

    __int16 v15 = -21846;
    char v16 = -86;
    uint64_t result = sub_1000B6CE0();
    if (result && (result & 7) == 0)
    {
      uint64_t result = sub_10008E10C(result, v5);
      if ((result & 1) != 0)
      {
        unsigned int v14 = 0;
      }

      else
      {
        __int16 v15 = bswap32(v8) >> 16;
        unsigned int v14 = 2;
      }

      if (!__CFADD__(&v15, v14))
      {
        *((_BYTE *)&v15 + v14) = v9;
        sub_1000AC324(a2, v5, 0, 0LL, 50, *(_DWORD *)(a2 + 68), &v15, v14 | 1);
        sub_1000AB4C4(*(void *)(v2 + 8), a2, 0, 1u);
        if (v11) {
          sub_10007158C(v2, 0, 2LL, (uint64_t)&v17, 32);
        }
        return v9;
      }

      goto LABEL_36;
    }

unint64_t sub_100078268(unint64_t result, int a2, uint64_t a3)
{
  if (!result) {
    goto LABEL_55;
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_55;
  }
  memset(&__str, 0, sizeof(__str));
  uint64_t result = sub_100061274();
  if (!result) {
    goto LABEL_55;
  }
  if ((result & 7) != 0) {
    goto LABEL_55;
  }
  uint64_t v6 = sub_10008E550(result, a3, 0);
  uint64_t result = sub_10004783C();
  if (!result || (result & 7) != 0) {
    goto LABEL_55;
  }
  uint64_t result = (*(uint64_t (**)(unint64_t, std::string *, uint64_t))(*(void *)result + 344LL))( result,  &__str,  v6);
  if (!(_DWORD)result) {
    goto LABEL_52;
  }
  unsigned int v7 = (const void **)(v3 + 2320);
  if (((v3 + 2320) & 7) != 0)
  {
LABEL_55:
    __break(0x5516u);
LABEL_56:
    __break(0x5513u);
    goto LABEL_57;
  }

  else {
    size_t v8 = *(unsigned __int8 *)(v3 + 2343);
  }
  std::string::size_type size = __str.__r_.__value_.__s.__size_;
  if ((__str.__r_.__value_.__s.__size_ & 0x80u) != 0) {
    std::string::size_type size = __str.__r_.__value_.__l.__size_;
  }
  if (v8 == size)
  {
    if ((__str.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_str = &__str;
    }
    else {
      p_str = (std::string *)__str.__r_.__value_.__r.__words[0];
    }
    if ((*(_BYTE *)(v3 + 2343) & 0x80) != 0)
    {
      unsigned int v13 = (const char *)*v7;
      uint64_t result = memcmp(*v7, p_str, v8);
      if ((_DWORD)result || (a2 & 1) != 0) {
        goto LABEL_32;
      }
    }

    else
    {
      if (v8)
      {
        int v11 = p_str;
        unint64_t v12 = (unsigned __int8 *)(v3 + 2320);
        while (v11)
        {
          ++v12;
          int v11 = (std::string *)((char *)v11 + 1);
          if (!--v8)
          {
            if ((a2 & 1) != 0) {
              goto LABEL_32;
            }
            goto LABEL_50;
          }
        }

        goto LABEL_55;
      }

      if (a2) {
        goto LABEL_32;
      }
LABEL_50:
      unsigned int v13 = (const char *)(v3 + 2320);
    }

    sub_1000CEAEC( 0,  4,  "%s:%d REPEAT NOTIFICATION: notification %d m_LastAppFocus is %s and audioFocusAppBundleID = %s\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp",  6345,  10,  v13,  (const char *)p_str);
    goto LABEL_52;
  }

void sub_10007852C( uint64_t a1, unsigned int a2, char *a3, unsigned int a4, unsigned int a5, uint64_t a6, int a7)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else if (a2 <= 0x1F && a5 < 4)
  {
    sub_100081790(*(void *)(a1 + 8), a2, a3, a4, a5, a6, a7);
    return;
  }

  __break(0x550Au);
}

uint64_t sub_100078558(uint64_t result)
{
  if (!result) {
    goto LABEL_8;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_8;
  }
  if ((sub_1000785F0(result) & 0x100000) == 0) {
    return 2LL;
  }
  BOOL v2 = 0;
  uint64_t result = sub_10004783C();
  if (!result || (result & 7) != 0)
  {
LABEL_8:
    __break(0x5516u);
  }

  else
  {
    BOOL v2 = (*(unsigned int (**)(uint64_t))(*(void *)result + 200LL))(result) != 0;
    sub_100081790(*(void *)(v1 + 8), 0x14u, (char *)&v2, 1u, 1u, 0LL, -1);
    return 0LL;
  }

  return result;
}

uint64_t sub_1000785F0(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    uint64_t v1 = *(void *)(result + 8);
    if (v1 && (*(void *)(result + 8) & 7LL) == 0) {
      return *(void *)(v1 + 1992);
    }
  }

  __break(0x5516u);
  return result;
}

unint64_t sub_10007861C(unint64_t result, int a2, uint64_t a3)
{
  if (!result
    || (uint64_t v3 = result, (result & 7) != 0)
    || (memset(&__str, 0, sizeof(__str)), (uint64_t result = sub_10004783C()) == 0)
    || (result & 7) != 0)
  {
LABEL_55:
    __break(0x5516u);
LABEL_56:
    __break(0x5513u);
    goto LABEL_57;
  }

  uint64_t result = (*(uint64_t (**)(unint64_t, std::string *))(*(void *)result + 312LL))(result, &__str);
  if (!(_DWORD)result)
  {
    syslog(4, "GetNowPlayingAppName() failed to return now playing app display name\n");
    goto LABEL_10;
  }

  uint64_t v6 = (const void **)(v3 + 2344);
  if (((v3 + 2344) & 7) != 0) {
    goto LABEL_55;
  }
  else {
    size_t v7 = *(unsigned __int8 *)(v3 + 2367);
  }
  std::string::size_type size = __str.__r_.__value_.__s.__size_;
  if ((__str.__r_.__value_.__s.__size_ & 0x80u) != 0) {
    std::string::size_type size = __str.__r_.__value_.__l.__size_;
  }
  if (v7 == size)
  {
    if ((__str.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      p_str = &__str;
    }
    else {
      p_str = (std::string *)__str.__r_.__value_.__r.__words[0];
    }
    if ((*(_BYTE *)(v3 + 2367) & 0x80) != 0)
    {
      unsigned int v13 = (const char *)*v6;
      uint64_t result = memcmp(*v6, p_str, v7);
      if ((_DWORD)result || (a2 & 1) != 0) {
        goto LABEL_32;
      }
    }

    else
    {
      if (v7)
      {
        int v11 = p_str;
        unint64_t v12 = (unsigned __int8 *)(v3 + 2344);
        while (v11)
        {
          ++v12;
          int v11 = (std::string *)((char *)v11 + 1);
          if (!--v7)
          {
            if ((a2 & 1) != 0) {
              goto LABEL_32;
            }
            goto LABEL_53;
          }
        }

        goto LABEL_55;
      }

      if (a2) {
        goto LABEL_32;
      }
LABEL_53:
      unsigned int v13 = (const char *)(v3 + 2344);
    }

    sub_1000CEAEC( 0,  4,  "%s:%d REPEAT NOTIFICATION: notification %d m_LastAppFocusAppName is %s and audioFocusAppName = %s\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp",  6451,  19,  v13,  (const char *)p_str);
LABEL_10:
    uint64_t v8 = 2LL;
    goto LABEL_50;
  }

void sub_1000788D8(unint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_560;
  }
  if (!*(void *)(a1 + 8)) {
    return;
  }
  uint64_t v5 = sub_100061274();
  if (!v5 || (v5 & 7) != 0) {
    goto LABEL_560;
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if (!v6 || (v6 & 7) != 0) {
    goto LABEL_560;
  }
  if ((sub_1000569F0(v6) & 1) != 0) {
    return;
  }
  if (!a2) {
    goto LABEL_560;
  }
  if ((a2 & 7) != 0) {
    goto LABEL_560;
  }
  uint64_t v7 = *(void *)(a2 + 8);
  unsigned int v8 = *(__int16 *)(a2 + 126);
  uint64_t v9 = sub_100061274();
  if (!v9) {
    goto LABEL_560;
  }
  if ((v9 & 7) != 0) {
    goto LABEL_560;
  }
  char v10 = sub_10008C710(v9, v7);
  if (((a1 + 1416) & 7) != 0) {
    goto LABEL_560;
  }
  int v11 = *(_DWORD *)(a1 + 1416);
  if ((v11 + 8) >= 0x10)
  {
LABEL_561:
    __break(0x550Au);
LABEL_562:
    __break(0x5513u);
LABEL_563:
    __break(0x5500u);
LABEL_564:
    __break(0x5507u);
LABEL_565:
    __break(0x5515u);
  }

  else
  {
    char v12 = v10;
    unint64_t v13 = *(unsigned __int16 *)(a2 + 128);
    unint64_t v14 = *(void *)(a2 + 24);
    if (v11 == -2)
    {
      sub_10006EA98(a1, v7, 1, 1);
      sub_100070F1C(*(void *)(a1 + 8), v7, 0);
    }

    if (v8 <= 0x38 && ((1LL << v8) & 0x100000000080002LL) != 0)
    {
      strcpy(v219, "y");
      sub_100062E78(a1, -1, v219, 0LL, 0xFFFFu);
    }

    switch(v8)
    {
      case 1u:
        sub_10006F1F8(a1, a2);
        goto LABEL_322;
      case 3u:
        if ((v12 & 0x10) == 0) {
          goto LABEL_459;
        }
        v219[0] = -86;
        LOBYTE(v15) = 4;
        sub_1000AC324(a2, v7, 0, 0LL, 4, *(_DWORD *)(a2 + 68), v219, 1u);
        goto LABEL_531;
      case 5u:
        if ((v12 & 0x10) == 0) {
          goto LABEL_459;
        }
        kdebug_trace(731139656LL, 0LL, 0LL, 0LL, 0LL);
        int v16 = sub_10007137C(a1, 1u);
        if (v16) {
          goto LABEL_274;
        }
        LOBYTE(v15) = 2;
        uint64_t v17 = sub_1000ABD94(v7, 0, 0LL, 2, *(_DWORD *)(a2 + 68), 6, (unsigned __int16)v8, 0xBB8u, 0, 0);
        if (v17)
        {
          sub_1000AB4C4(*(void *)(a1 + 8), v17, 0, 1u);
          LOBYTE(v15) = 0;
        }

        uint64_t v18 = 731139660LL;
        goto LABEL_410;
      case 6u:
        if ((v12 & 0x10) == 0) {
          goto LABEL_459;
        }
        v219[0] = 0;
        if (v219[0] > 1u) {
          goto LABEL_561;
        }
        if (!v219[0]) {
          goto LABEL_407;
        }
        sub_100090D74(*(void *)(a1 + 8), 1);
        if (v168)
        {
LABEL_34:
          LOBYTE(v15) = 2;
          goto LABEL_531;
        }

        LOBYTE(v15) = 2;
        uint64_t v169 = sub_1000ABD94(v7, 0, 0LL, 2, *(_DWORD *)(a2 + 68), 6, (unsigned __int16)v8, 0xBB8u, 0, 0);
        if (!v169) {
          goto LABEL_531;
        }
        sub_1000AB4C4(*(void *)(a1 + 8), v169, 0, 1u);
        goto LABEL_407;
      case 7u:
        memset(v219, 170, 24);
        uint64_t v19 = sub_10004783C();
        if (!v19 || (v19 & 7) != 0) {
          goto LABEL_560;
        }
        (*(void (**)(_BYTE *__return_ptr))(*(void *)v19 + 88LL))(v219);
        uint64_t v20 = v219[23];
        if (v219[23] >= 0) {
          unsigned int v21 = v219;
        }
        else {
          unsigned int v21 = *(_BYTE **)v219;
        }
        if (v219[23] < 0) {
          uint64_t v20 = *(void *)&v219[8];
        }
        BOOL v22 = __CFADD__(v20, 1LL);
        unint64_t v23 = v20 + 1;
        if (v22) {
          goto LABEL_563;
        }
        if (v23 >> 16) {
          goto LABEL_564;
        }
        int v24 = *(_DWORD *)(a2 + 68);
        unsigned int v25 = (unsigned __int16)v23;
        uint64_t v26 = a2;
        uint64_t v27 = v7;
        __int16 v28 = 8;
        goto LABEL_58;
      case 9u:
        unsigned __int8 v218 = -86;
        unsigned __int8 v217 = -86;
        char v216 = -86;
        uint64_t v29 = sub_10004783C();
        if (!v29 || (v29 & 7) != 0) {
          goto LABEL_560;
        }
        (*(void (**)(uint64_t, unsigned __int8 *, unsigned __int8 *, char *))(*(void *)v29 + 160LL))( v29,  &v218,  &v217,  &v216);
        v219[0] = v218;
        v219[1] = v217;
        v219[2] = v216;
        int v30 = *(_DWORD *)(a2 + 68);
        uint64_t v31 = v219;
        uint64_t v32 = a2;
        uint64_t v33 = v7;
        __int16 v34 = 10;
        goto LABEL_457;
      case 0xBu:
        memset(v219, 170, 24);
        uint64_t v35 = sub_10004783C();
        if (!v35 || (v35 & 7) != 0) {
          goto LABEL_560;
        }
        (*(void (**)(_BYTE *__return_ptr))(*(void *)v35 + 96LL))(v219);
        uint64_t v36 = v219[23];
        if (v219[23] >= 0) {
          unsigned int v21 = v219;
        }
        else {
          unsigned int v21 = *(_BYTE **)v219;
        }
        if (v219[23] < 0) {
          uint64_t v36 = *(void *)&v219[8];
        }
        BOOL v22 = __CFADD__(v36, 1LL);
        unint64_t v37 = v36 + 1;
        if (v22) {
          goto LABEL_563;
        }
        if (v37 >> 16) {
          goto LABEL_564;
        }
        int v24 = *(_DWORD *)(a2 + 68);
        unsigned int v25 = (unsigned __int16)v37;
        uint64_t v26 = a2;
        uint64_t v27 = v7;
        __int16 v28 = 12;
LABEL_58:
        sub_1000AC324(v26, v27, 0, 0LL, v28, v24, v21, v25);
        goto LABEL_59;
      case 0xDu:
        uint64_t v38 = sub_10004783C();
        if (!v38) {
          goto LABEL_560;
        }
        if ((v38 & 7) != 0) {
          goto LABEL_560;
        }
        unsigned int v39 = (*(uint64_t (**)(uint64_t))(*(void *)v38 + 112LL))(v38);
        memset(v219, 170, 24);
        uint64_t v40 = sub_10004783C();
        if (!v40 || (v40 & 7) != 0) {
          goto LABEL_560;
        }
        (*(void (**)(_BYTE *__return_ptr))(*(void *)v40 + 104LL))(v219);
        int v41 = v219[23];
        if (v219[23] >= 0) {
          unint64_t v42 = v219[23];
        }
        else {
          unint64_t v42 = *(void *)&v219[8];
        }
        if (v42 > 0xFFFFFFFFFFFFFFFALL) {
          goto LABEL_563;
        }
        unsigned int v43 = operator new[]((v42 + 5));
        *unsigned int v43 = bswap32(v39);
        unsigned int v44 = v43;
        unsigned int v45 = v43 + 1;
        if (v41 >= 0) {
          uint64_t v46 = v219;
        }
        else {
          uint64_t v46 = *(_BYTE **)v219;
        }
        memcpy(v45, v46, v42 + 1);
        if ((((_DWORD)v42 + 5) & 0xFFFF0000) != 0) {
          goto LABEL_564;
        }
        sub_1000AC324(a2, v7, 0, 0LL, 14, *(_DWORD *)(a2 + 68), v44, (unsigned __int16)(v42 + 5));
        operator delete[](v44);
        std::string::~string((std::string *)v219);
        goto LABEL_320;
      case 0xFu:
        if (*(_WORD *)(a2 + 128) != 1) {
          goto LABEL_459;
        }
        unsigned __int8 v218 = -1;
        unsigned __int8 v217 = -1;
        uint64_t v47 = *(unsigned __int8 **)(a2 + 24);
        if (!v47) {
          goto LABEL_560;
        }
        uint64_t v48 = *v47;
        if (!v7 || (v7 & 7) != 0) {
          goto LABEL_560;
        }
        unsigned int v49 = *(_DWORD *)(a1 + 1516);
        int v50 = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 232LL))(v7);
        unsigned int v51 = v49 & 0x721D;
        if (!v50) {
          unsigned int v51 = v49;
        }
        if (((v51 >> v48) & 1) != 0)
        {
          sub_100061274();
          sub_1000BBBAC(v48, &v218, (char *)&v217);
        }

LABEL_83:
        if (v218 == 255 && v217 == 255) {
          goto LABEL_459;
        }
        v219[0] = v48;
        v219[1] = v218;
        v219[2] = v217;
        int v30 = *(_DWORD *)(a2 + 68);
        uint64_t v31 = v219;
        uint64_t v32 = a2;
        uint64_t v33 = v7;
        __int16 v34 = 16;
        goto LABEL_457;
      case 0x11u:
        if (*(_WORD *)(a2 + 128)) {
          goto LABEL_459;
        }
        if (!v7 || (v7 & 7) != 0) {
          goto LABEL_560;
        }
        *(_WORD *)v219 = __rev16((*(uint64_t (**)(uint64_t))(*(void *)v7 + 176LL))(v7));
        int v30 = *(_DWORD *)(a2 + 68);
        uint64_t v31 = v219;
        uint64_t v32 = a2;
        uint64_t v33 = v7;
        __int16 v34 = 18;
        goto LABEL_263;
      case 0x13u:
        sub_1000716FC(a1, a2);
        return;
      case 0x15u:
        if (((a1 + 1512) & 7) != 0) {
          goto LABEL_560;
        }
        if (!*(_BYTE *)(a1 + 1512)) {
          goto LABEL_98;
        }
        int v52 = *(unsigned __int8 *)(a1 + 1514);
        if (v52 == 255) {
          goto LABEL_564;
        }
        unsigned __int8 v53 = v52 + 1;
        *(_BYTE *)(a1 + 1514) = v53;
        if ((((_DWORD)a1 + 1514) & 1) != 0) {
          goto LABEL_560;
        }
        if (v53 >= 2u && v53 <= *(unsigned __int8 *)(a1 + 1513))
        {
          sub_1000AD43C(a2);
        }

        else
        {
LABEL_98:
          sub_1000733E8(a1, a2);
        }

        return;
      case 0x18u:
        sub_100074190(a1, a2);
        return;
      case 0x1Au:
        LOBYTE(v16) = sub_100074760(a1, a2);
        goto LABEL_274;
      case 0x1Cu:
        goto LABEL_459;
      case 0x1Du:
        sub_100074AB4(a1, a2);
        goto LABEL_459;
      case 0x1Fu:
        goto LABEL_459;
      case 0x20u:
        unsigned __int8 v218 = 0;
        uint64_t v54 = sub_10000CEF8();
        pthread_mutex_lock(&stru_10011B978);
        uint64_t v55 = *(void *)(v54 + 8);
        *(void *)v219 = v55;
        while (2)
        {
          if (v55 == v54) {
            goto LABEL_429;
          }
          unsigned int v56 = sub_10000D014((uint64_t *)v219);
          if (*v56) {
            BOOL v57 = (*v56 & 7) == 0;
          }
          else {
            BOOL v57 = 0;
          }
          if (!v57) {
            goto LABEL_560;
          }
          if (!*(void *)(*v56 + 32)) {
            goto LABEL_117;
          }
          uint64_t v58 = sub_100061274();
          if (!v58) {
            goto LABEL_560;
          }
          uint64_t v59 = v58;
          if ((v58 & 7) != 0) {
            goto LABEL_560;
          }
          dispatch_semaphore_t v60 = sub_10000D014((uint64_t *)v219);
          if (!sub_10008CD68(v59, *v60))
          {
LABEL_117:
            sub_10000D048(v219);
            uint64_t v55 = *(void *)v219;
            continue;
          }

          break;
        }

        unsigned __int8 v218 = 1;
LABEL_429:
        pthread_mutex_unlock(&stru_10011B978);
        int v30 = *(_DWORD *)(a2 + 68);
        uint64_t v31 = &v218;
        uint64_t v32 = a2;
        uint64_t v33 = v7;
        __int16 v34 = 33;
LABEL_430:
        unsigned int v90 = 1;
        goto LABEL_458;
      case 0x22u:
        if (*(_WORD *)(a2 + 128) != 1) {
          goto LABEL_459;
        }
        uint64_t v121 = sub_100061274();
        if (!v121 || (v121 & 7) != 0) {
          goto LABEL_560;
        }
        if ((sub_10008CBE4(v121, v7) & 0xC) != 8) {
          goto LABEL_320;
        }
        int v122 = *(unsigned __int8 **)(a2 + 24);
        if (!v122) {
          goto LABEL_560;
        }
        int v123 = *v122;
        uint64_t v124 = sub_100061274();
        if (!v124 || (v124 & 7) != 0) {
          goto LABEL_560;
        }
        sub_10008CC64(v124, v7, 0, v123 != 0);
        goto LABEL_407;
      case 0x24u:
        if (*(_WORD *)(a2 + 128)) {
          goto LABEL_459;
        }
        *(void *)v219 = 0xAAAAAAAAAAAAAAAALL;
        uint64_t v61 = sub_1000438B8();
        uint64_t v62 = sub_100042AC4();
        if (!v62) {
          goto LABEL_560;
        }
        if ((v62 & 7) != 0) {
          goto LABEL_560;
        }
        int v63 = (*(uint64_t (**)(uint64_t))(*(void *)v62 + 128LL))(v62);
        if (!v61 || (v61 & 7) != 0) {
          goto LABEL_560;
        }
        if (v63) {
          uint64_t v64 = 0x100000000000041LL;
        }
        else {
          uint64_t v64 = 65LL;
        }
        int v65 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v61 + 240LL))(v61, v7);
        unint64_t v66 = v64 | 0x20;
        if (!v65) {
          unint64_t v66 = v64;
        }
        *(void *)v219 = _byteswap_uint64(v66);
        int v30 = *(_DWORD *)(a2 + 68);
        uint64_t v31 = v219;
        uint64_t v32 = a2;
        uint64_t v33 = v7;
        __int16 v34 = 37;
LABEL_217:
        unsigned int v90 = 8;
        goto LABEL_458;
      case 0x26u:
        if ((_DWORD)v13 != 1) {
          goto LABEL_459;
        }
        uint64_t v67 = *(void *)(a1 + 1192);
        if (v67 == v7 || !v67)
        {
          *(void *)(a1 + 1192) = v7;
          if (!v14) {
            goto LABEL_560;
          }
          char v164 = *(_BYTE *)v14;
          uint64_t v165 = sub_1000451B0();
          if (!v165 || (v165 & 7) != 0) {
            goto LABEL_560;
          }
          int v166 = (*(uint64_t (**)(uint64_t, BOOL))(*(void *)v165 + 256LL))(v165, (v164 & 1) == 0);
          uint64_t v68 = 0LL;
          if (v166 == 45) {
            char v167 = 4;
          }
          else {
            char v167 = 2;
          }
          if (v166) {
            LOBYTE(v15) = v167;
          }
          else {
            LOBYTE(v15) = 0;
          }
        }

        else
        {
          uint64_t v68 = 0LL;
          LOBYTE(v15) = 9;
        }

        goto LABEL_532;
      case 0x28u:
        sub_100074CB4(a1, a2);
        if (!v69) {
          goto LABEL_322;
        }
        goto LABEL_459;
      case 0x29u:
        int v16 = sub_100075AA4(a1, a2);
        if (v16 == 25) {
          return;
        }
        goto LABEL_274;
      case 0x2Bu:
        pthread_mutex_lock((pthread_mutex_t *)(a1 + 1280));
        uint64_t v70 = *(void *)(a1 + 8);
        if (!v70) {
          goto LABEL_560;
        }
        if ((v70 & 7) != 0) {
          goto LABEL_560;
        }
        int v71 = sub_100057B7C(v70);
        if (!v7 || (v7 & 7) != 0) {
          goto LABEL_560;
        }
        int v72 = v71;
        if ((*(unsigned int (**)(uint64_t))(*(void *)v7 + 216LL))(v7) == 1
          || ((*(uint64_t (**)(uint64_t))(*(void *)v7 + 232LL))(v7) & 1) != 0
          || !sub_100063CE8(v7))
        {
          goto LABEL_156;
        }

        if (sub_100063CE8(v7))
        {
          LOBYTE(v15) = 4;
          if (v72 != -1 && v72 <= 15)
          {
LABEL_156:
            sub_100076A64(a1, a2, 0);
            LOBYTE(v15) = v73;
            if (v73 == 25) {
              a2 = 0LL;
            }
          }
        }

        else
        {
          LOBYTE(v15) = 4;
        }

        pthread_mutex_unlock((pthread_mutex_t *)(a1 + 1280));
        goto LABEL_417;
      case 0x2Cu:
        sub_100077898(a1, a2);
        return;
      case 0x2Fu:
        sub_100077E7C(a1, a2);
        goto LABEL_512;
      case 0x31u:
        sub_100078038(a1, a2);
        return;
      case 0x34u:
        if ((_DWORD)v13 != 1) {
          goto LABEL_459;
        }
        uint64_t v125 = sub_10004783C();
        if (!v125 || (v125 & 7) != 0 || !v14) {
          goto LABEL_560;
        }
        int v94 = (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v125 + 632LL))( v125,  2LL,  *(unsigned __int8 *)v14);
        goto LABEL_316;
      case 0x35u:
        *(_DWORD *)v219 = sub_10007AC40(a1);
        int v30 = *(_DWORD *)(a2 + 68);
        uint64_t v31 = v219;
        uint64_t v32 = a2;
        uint64_t v33 = v7;
        __int16 v34 = 54;
        goto LABEL_430;
      case 0x37u:
        kdebug_trace(731139648LL, 0LL, 0LL, 0LL, 0LL);
        if ((_DWORD)v13 != 1)
        {
          LOBYTE(v15) = 4;
LABEL_409:
          uint64_t v18 = 731139652LL;
LABEL_410:
          kdebug_trace(v18, 0LL, 0LL, 0LL, 0LL);
          goto LABEL_531;
        }

        if (!v14) {
          goto LABEL_560;
        }
        unsigned int v74 = *(unsigned __int8 *)v14;
        if (v74 <= 7)
        {
          LOBYTE(v15) = sub_10007137C(a1, v74);
          goto LABEL_409;
        }

        goto LABEL_561;
      case 0x38u:
        LOBYTE(v16) = sub_10007AD64(a1);
        goto LABEL_274;
      case 0x39u:
        sub_10007B448(a1, a2);
        uint64_t v68 = 0LL;
        LOBYTE(v15) = 2 * (v75 != 0);
        goto LABEL_532;
      case 0x3Bu:
        goto LABEL_322;
      case 0x3Eu:
        if ((_DWORD)v13 != 8) {
          goto LABEL_322;
        }
        if (!v14) {
          goto LABEL_560;
        }
        unint64_t v76 = bswap64(*(void *)v14);
        if (v76 >> 25) {
          goto LABEL_322;
        }
        *(void *)(a1 + 1272) = v76;
        uint64_t v77 = *(void *)(a1 + 8);
        if (!v77 || (v77 & 7) != 0) {
          goto LABEL_560;
        }
        int v78 = sub_100057B7C(v77);
        if (v78 == -1) {
          int v79 = 16;
        }
        else {
          int v79 = v78;
        }
        sub_100061730(a1, v7, 0xEu, v79);
LABEL_322:
        sub_1000AD43C(a2);
        return;
      case 0x41u:
        sub_10007CA40(a1, a2);
        return;
      case 0x42u:
        sub_10007CD88(a1, a2);
        goto LABEL_322;
      case 0x47u:
        if ((_DWORD)v13 != 4) {
          goto LABEL_512;
        }
        if (!v14) {
          goto LABEL_560;
        }
        uint64_t v80 = (unsigned int *)(a1 + 1984);
        unsigned int v81 = bswap32(*(_DWORD *)v14);
        if (v81 != *v80) {
          sub_1000CEAEC( 0,  4,  "%s:%d CIapLingoGeneral::ProcessCmd: RetAccStatusNotification 0x%08X != 0x%08X\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp",  7286,  v81,  *v80);
        }
        *uint64_t v80 = v81;
        goto LABEL_512;
      case 0x48u:
        *(void *)&__int128 v82 = 0xAAAAAAAAAAAAAAAALL;
        *((void *)&v82 + 1) = 0xAAAAAAAAAAAAAAAALL;
        *(_OWORD *)&v219[28] = v82;
        *(_OWORD *)v219 = v82;
        *(_OWORD *)&v219[16] = v82;
        if (!v14) {
          goto LABEL_560;
        }
        switch(*(_BYTE *)v14)
        {
          case 0:
            if ((_DWORD)v13 != 3) {
              goto LABEL_512;
            }
            *(_DWORD *)&v219[4] = 0;
            *(_DWORD *)v219 = sub_1000C0034(*(void *)(a1 + 8));
            if (v14 == -1LL) {
              goto LABEL_562;
            }
            unsigned int v83 = *(unsigned __int8 *)(v14 + 1);
            *(_DWORD *)&v219[8] = v83;
            if (v14 > 0xFFFFFFFFFFFFFFFDLL) {
              goto LABEL_562;
            }
            int v84 = *(unsigned __int8 *)(v14 + 2);
            v219[12] = *(_BYTE *)(v14 + 2);
            if (v83 > 7) {
              goto LABEL_561;
            }
            sub_1000CEAEC( 0,  4,  "%s:%d Ret/AccStatus/Notification Power %02xh %02xh\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp",  7321,  v83,  v84);
            if (((a1 + 1984) & 7) != 0) {
              goto LABEL_560;
            }
            if ((*(_BYTE *)(a1 + 1984) & 1) == 0) {
              goto LABEL_512;
            }
            uint64_t v85 = *(void *)(a1 + 8);
            if (!v85) {
              goto LABEL_560;
            }
            goto LABEL_510;
          case 1:
            if (((a1 + 2376) & 7) != 0) {
              goto LABEL_560;
            }
            sub_100008B2C(a1 + 2376);
            if (!v7 || (v7 & 7) != 0) {
              goto LABEL_560;
            }
            sub_10007AD20(v7);
            HIDWORD(v178) = 954437177 * (v13 - 1);
            LODWORD(v178) = HIDWORD(v178);
            unsigned int v179 = 0;
            unint64_t v180 = ~v14;
            v208 = (_BYTE *)(a1 + 1984);
            uint64_t v209 = (a1 + 1984) & 7;
            v210 = &v219[22];
            LODWORD(v181) = 36;
            break;
          case 2:
            if ((_DWORD)v13 != 3) {
              goto LABEL_512;
            }
            *(_DWORD *)&v219[4] = 2;
            *(_DWORD *)v219 = sub_1000C0034(*(void *)(a1 + 8));
            if (v14 == -1LL) {
              goto LABEL_562;
            }
            unsigned int v195 = *(unsigned __int8 *)(v14 + 1);
            *(_DWORD *)&v219[8] = v195;
            if (v14 > 0xFFFFFFFFFFFFFFFDLL) {
              goto LABEL_562;
            }
            unsigned int v196 = *(unsigned __int8 *)(v14 + 2);
            *(_DWORD *)&v219[12] = v196;
            if (v195 > 3 || v196 > 3) {
              goto LABEL_561;
            }
            sub_1000CEAEC( 0,  4,  "%s:%d Ret/AccStatus/Notification Fault %02xh %02xh\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp",  7421,  v195,  v196);
            if (((a1 + 1984) & 7) != 0) {
              goto LABEL_560;
            }
            if ((*(_BYTE *)(a1 + 1984) & 4) == 0) {
              goto LABEL_512;
            }
            uint64_t v85 = *(void *)(a1 + 8);
            if (!v85) {
              goto LABEL_560;
            }
            goto LABEL_510;
          case 3:
            if ((_DWORD)v13 != 2) {
              goto LABEL_512;
            }
            *(_DWORD *)&v219[4] = 3;
            *(_DWORD *)v219 = sub_1000C0034(*(void *)(a1 + 8));
            if (v14 == -1LL) {
              goto LABEL_562;
            }
            unsigned int v197 = *(unsigned __int8 *)(v14 + 1);
            *(_DWORD *)&v219[8] = v197;
            if (v197 > 1) {
              goto LABEL_561;
            }
            sub_1000CEAEC( 0,  4,  "%s:%d Ret/AccStatus/Notification Unreliable Accessory %02xh\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp",  7450,  v197);
            if (((a1 + 1984) & 7) != 0) {
              goto LABEL_560;
            }
            if ((*(_BYTE *)(a1 + 1984) & 8) == 0) {
              goto LABEL_512;
            }
            uint64_t v85 = *(void *)(a1 + 8);
            if (!v85) {
              goto LABEL_560;
            }
LABEL_510:
            if ((v85 & 7) != 0) {
              goto LABEL_560;
            }
            sub_100057A4C(v85, 0, 5LL, (uint64_t)v219, 44);
            goto LABEL_512;
          default:
            if (v14 >= 0xFFFFFFFFFFFFFFFELL) {
              goto LABEL_562;
            }
            sub_1000CEAEC( 0,  4,  "%s:%d Ret/AccStatus/Notification Unknown type=%xh data=%02xh %02xh\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp",  7467,  *(unsigned __int8 *)v14,  *(unsigned __int8 *)(v14 + 1),  *(unsigned __int8 *)(v14 + 2));
            goto LABEL_512;
        }

        while (1)
        {
          *(_DWORD *)&v219[4] = 1;
          *(_DWORD *)v219 = sub_1000C0034(*(void *)(a1 + 8));
          unsigned int v182 = v179 + 1;
          if (v179 == -1) {
            goto LABEL_563;
          }
          BOOL v22 = __CFADD__(v14, v182);
          v183 = (unsigned int *)(v14 + v182);
          if (v22) {
            goto LABEL_563;
          }
          if (!v183) {
            goto LABEL_560;
          }
          *(_DWORD *)&v219[8] = bswap32(*v183);
          unsigned int v184 = v179 + 5;
          if (v179 >= 0xFFFFFFFB) {
            goto LABEL_563;
          }
          BOOL v22 = __CFADD__(v14, v184);
          v185 = (unsigned int *)(v14 + v184);
          if (v22) {
            goto LABEL_563;
          }
          if (!v185) {
            goto LABEL_560;
          }
          *(_DWORD *)&v219[12] = bswap32(*v185);
          unsigned int v186 = v179 + 9;
          if (v179 >= 0xFFFFFFF7) {
            goto LABEL_563;
          }
          BOOL v22 = __CFADD__(v14, v186);
          v187 = (unsigned int *)(v14 + v186);
          if (v22) {
            goto LABEL_563;
          }
          if (!v187) {
            goto LABEL_560;
          }
          *(_DWORD *)&v219[16] = bswap32(*v187);
          uint64_t v188 = v179 + 13;
          if (v179 >= 0xFFFFFFF3) {
            goto LABEL_563;
          }
          v219[20] = *(_BYTE *)(v14 + v188);
          uint64_t v189 = v179 + 14;
          if (v179 >= 0xFFFFFFF2) {
            goto LABEL_563;
          }
          v219[21] = *(_BYTE *)(v14 + v189);
          uint64_t v190 = v179 + 15;
          if (v179 >= 0xFFFFFFF1) {
            goto LABEL_563;
          }
          strlcpy(v210, (const char *)(v14 + v190), 0x10uLL);
          uint64_t v191 = v179 + 31;
          if (v179 >= 0xFFFFFFE1) {
            goto LABEL_563;
          }
          v192 = (int *)(v14 + v191);
          int v193 = *v192;
          *(_WORD *)&v219[42] = *((_WORD *)v192 + 2);
          *(_DWORD *)&v219[38] = v193;
          sub_1000CEAEC( 0,  4,  "%s:%s:%d Ret/AccStatus/Notification BT %08xh %08xh %08xh %02xh %02xh %02xh:%02xh:%02xh:%02xh:%02xh:%02xh\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp",  "ProcessCmd",  7369,  *(_DWORD *)&v219[8],  *(_DWORD *)&v219[12],  *(_DWORD *)&v219[16],  v219[20],  v219[21],  v219[38],  v219[39],  v219[40],  v219[41],  v219[42],  v219[43]);
          if (v219[21]) {
            goto LABEL_512;
          }
          if (v209) {
            goto LABEL_560;
          }
          if ((*v208 & 2) != 0)
          {
            int v214 = *(_DWORD *)&v219[38];
            __int16 v215 = *(_WORD *)&v219[42];
            sub_10007AD40(v7, (uint64_t)&v214);
            uint64_t v194 = *(void *)(a1 + 8);
            if (!v194 || (v194 & 7) != 0) {
              goto LABEL_560;
            }
            sub_100057A4C(v194, 0, 5LL, (uint64_t)v219, 44);
          }

          if (v179 >= 0xFFFFFFDC) {
            goto LABEL_564;
          }
          unsigned int v179 = v181;
          unint64_t v181 = v181 + 36LL;
          if (v181 >= v13)
          {
LABEL_512:
            sub_1000AD43C(a2);
            return;
          }
        }

      case 0x49u:
        if ((_DWORD)v13 != 8) {
          goto LABEL_459;
        }
        if (!v14) {
          goto LABEL_560;
        }
        uint64_t v86 = bswap64(*(void *)v14);
        int v87 = sub_10007CF80(a1, v86);
        if (v87) {
          uint64_t v68 = 0LL;
        }
        else {
          uint64_t v68 = v86;
        }
        LOBYTE(v15) = 4 * (v87 != 0);
        goto LABEL_532;
      case 0x4Bu:
        uint64_t v88 = kdebug_trace(731139624LL, 0LL, 0LL, 0LL, 0LL);
        if (*(_WORD *)(a2 + 128) != 1) {
          goto LABEL_459;
        }
        if (!v14) {
          goto LABEL_560;
        }
        uint64_t v89 = *(unsigned __int8 *)v14;
        __chkstk_darwin(v88);
        LOBYTE(v207) = -86;
        unint64_t v206 = 0xAAAAAAAAAAAAAAAALL;
        if (!v7) {
          goto LABEL_530;
        }
        if ((v7 & 7) != 0) {
          goto LABEL_560;
        }
        if ((!(*(unsigned int (**)(uint64_t))(*(void *)v7 + 232LL))(v7) || ((1 << v89) & 0x7FFF8DE2) == 0)
          && sub_100064240(v89))
        {
          switch((int)v89)
          {
            case 0:
              sub_10007A9EC(v7, (uint64_t)&v206, 9);
              goto LABEL_529;
            case 1:
              int v198 = sub_10008C044((uint64_t)&v206, 9);
              goto LABEL_528;
            case 2:
              int v198 = sub_1000A2AF8(v7, (uint64_t)&v206, 9);
              goto LABEL_528;
            case 3:
              int v198 = sub_10006DB18((uint64_t)&v206, 9);
              goto LABEL_528;
            case 4:
              int v198 = sub_10009D7E8((uint64_t)&v206, 9);
              goto LABEL_528;
            case 5:
              int v198 = sub_10009FC7C((uint64_t)&v206, 9);
              goto LABEL_528;
            case 6:
              int v198 = sub_1000AA0E4((uint64_t)&v206, 9);
              goto LABEL_528;
            case 8:
              int v198 = sub_100060ED0((uint64_t)&v206, 9);
              goto LABEL_528;
            case 9:
              int v198 = sub_1000A5888((uint64_t)&v206, 9);
              goto LABEL_528;
            case 10:
              int v198 = sub_100066C44((uint64_t)&v206, 9);
              goto LABEL_528;
            case 12:
              int v198 = sub_1000A7D34((uint64_t)&v206, 9);
              goto LABEL_528;
            case 13:
              int v198 = sub_10009070C((uint64_t)&v206, 9);
              goto LABEL_528;
            case 14:
              int v198 = sub_10008B34C((uint64_t)&v206, 9);
LABEL_528:
              if (!v198) {
LABEL_529:
              }
                sub_1000AC324(a2, v7, 0, 0LL, 76, *(_DWORD *)(a2 + 68), &v206, 9u);
              break;
            default:
              break;
          }
        }

      __break(0x5507u);
LABEL_84:
      __break(0x550Au);
LABEL_85:
      __break(0x5500u);
      goto LABEL_86;
    }

    int v16 = 1;
    if (a2) {
      goto LABEL_79;
    }
LABEL_81:
    __break(0x5516u);
LABEL_82:
    __break(0x5513u);
    goto LABEL_83;
  }

LABEL_530:
        kdebug_trace(731139628LL, 0LL, 0LL, 0LL, 0LL);
        LOBYTE(v15) = 4;
        goto LABEL_531;
      case 0x4Du:
        if ((_DWORD)v13) {
          goto LABEL_459;
        }
        *(void *)v219 = bswap64(sub_1000785F0(a1));
        int v30 = *(_DWORD *)(a2 + 68);
        uint64_t v31 = v219;
        uint64_t v32 = a2;
        uint64_t v33 = v7;
        __int16 v34 = 78;
        goto LABEL_217;
      case 0x4Fu:
        if ((_DWORD)v13) {
          goto LABEL_459;
        }
        *(void *)v219 = bswap64(sub_10007D014(a1));
        int v30 = *(_DWORD *)(a2 + 68);
        uint64_t v31 = v219;
        uint64_t v32 = a2;
        uint64_t v33 = v7;
        __int16 v34 = 81;
        goto LABEL_217;
      case 0x50u:
        if (v14 >= 0xFFFFFFFFFFFFFFFDLL) {
          goto LABEL_563;
        }
        unsigned int v91 = *(unsigned __int16 *)(v14 + 3);
        uint64_t v92 = sub_1000B6CE0();
        if (!v92 || (v92 & 7) != 0) {
          goto LABEL_560;
        }
        if (!sub_10008E10C(v92, v7)) {
          goto LABEL_459;
        }
        unint64_t v93 = *(void *)(a1 + 8);
        if (!v93 || (v93 & 7) != 0) {
          goto LABEL_560;
        }
        int v94 = sub_10005831C(v93, bswap32(v91) >> 16);
LABEL_316:
        uint64_t v68 = 0LL;
        if (v94) {
          LOBYTE(v15) = 0;
        }
        else {
          LOBYTE(v15) = 4;
        }
        goto LABEL_532;
      case 0x52u:
        if (!v7 || (v7 & 7) != 0) {
          goto LABEL_560;
        }
        char v126 = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 232LL))(v7);
        uint64_t v68 = 0LL;
        LOBYTE(v15) = 4;
        if ((_DWORD)v13 != 4 || (v126 & 1) != 0) {
          goto LABEL_532;
        }
        if (!v14) {
          goto LABEL_560;
        }
        unsigned int v127 = *(unsigned __int16 *)v14;
        if (v14 >= 0xFFFFFFFFFFFFFFFELL) {
          goto LABEL_563;
        }
        unsigned int v128 = *(unsigned __int16 *)(v14 + 2);
        v219[0] = -86;
        uint64_t v129 = sub_1000451B0();
        if (!v129 || (v129 & 7) != 0) {
          goto LABEL_560;
        }
        unsigned int v130 = (*(uint64_t (**)(uint64_t, uint64_t, void, void))(*(void *)v129 + 272LL))( v129,  v7,  bswap32(v127) >> 16,  __rev16(v128));
        if (v130 > 3) {
          goto LABEL_561;
        }
        v219[0] = v130;
        int v30 = *(_DWORD *)(a2 + 68);
        uint64_t v31 = v219;
        uint64_t v32 = a2;
        uint64_t v33 = v7;
        __int16 v34 = 83;
        goto LABEL_430;
      case 0x54u:
        if (!v7 || (v7 & 7) != 0) {
          goto LABEL_560;
        }
        char v95 = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 232LL))(v7);
        uint64_t v68 = 0LL;
        LOBYTE(v15) = 4;
        if ((_DWORD)v13 != 2 || (v95 & 1) != 0) {
          goto LABEL_532;
        }
        if (!v14) {
          goto LABEL_560;
        }
        unsigned int v96 = bswap32(*(unsigned __int16 *)v14) >> 16;
        *(_DWORD *)(a1 + 2208) = v96;
        uint64_t v15 = sub_10007D0AC(a1, v7, v96);
        uint64_t v97 = sub_1000451B0();
        if (!v97 || (v97 & 7) != 0) {
          goto LABEL_560;
        }
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)v97 + 288LL))(v97, v7, v15);
        LOBYTE(v15) = 0;
        uint64_t v68 = 0LL;
        *(_BYTE *)(a1 + 2204) = 1;
        goto LABEL_532;
      case 0x55u:
        if (!v7 || (v7 & 7) != 0) {
          goto LABEL_560;
        }
        char v98 = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 232LL))(v7);
        uint64_t v68 = 0LL;
        LOBYTE(v15) = 4;
        if ((_DWORD)v13 != 2 || (v98 & 1) != 0) {
          goto LABEL_532;
        }
        if (!v14) {
          goto LABEL_560;
        }
        uint64_t v99 = sub_1000451B0();
        if (!v99 || (v99 & 7) != 0) {
          goto LABEL_560;
        }
        uint64_t v100 = *(void (**)(void))(*(void *)v99 + 320LL);
        goto LABEL_406;
      case 0x56u:
        if (!v7 || (v7 & 7) != 0) {
          goto LABEL_560;
        }
        char v101 = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 232LL))(v7);
        uint64_t v68 = 0LL;
        LOBYTE(v15) = 4;
        if ((_DWORD)v13 != 1 || (v101 & 1) != 0) {
          goto LABEL_532;
        }
        if (!v14) {
          goto LABEL_560;
        }
        uint64_t v102 = sub_1000451B0();
        if (!v102 || (v102 & 7) != 0) {
          goto LABEL_560;
        }
        uint64_t v100 = *(void (**)(void))(*(void *)v102 + 336LL);
        goto LABEL_406;
      case 0x58u:
        if (!v7 || (v7 & 7) != 0) {
          goto LABEL_560;
        }
        char v131 = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 232LL))(v7);
        uint64_t v68 = 0LL;
        LOBYTE(v15) = 4;
        if ((_DWORD)v13 != 1 || (v131 & 1) != 0) {
          goto LABEL_532;
        }
        if (!v14) {
          goto LABEL_560;
        }
        unsigned int v132 = *(unsigned __int8 *)v14;
        if (v132 > 3) {
          goto LABEL_561;
        }
        if (v132 == 2)
        {
          uint64_t v175 = sub_1000451B0();
          if (!v175 || (v175 & 7) != 0) {
            goto LABEL_560;
          }
          int v134 = *(uint64_t (**)(void))(*(void *)v175 + 344LL);
        }

        else if (v132 == 1)
        {
          uint64_t v176 = sub_1000451B0();
          if (!v176 || (v176 & 7) != 0) {
            goto LABEL_560;
          }
          int v134 = *(uint64_t (**)(void))(*(void *)v176 + 328LL);
        }

        else
        {
          if (*(_BYTE *)v14) {
            goto LABEL_459;
          }
          uint64_t v133 = sub_1000451B0();
          if (!v133 || (v133 & 7) != 0) {
            goto LABEL_560;
          }
          int v134 = *(uint64_t (**)(void))(*(void *)v133 + 296LL);
        }

        unsigned int v177 = v134();
        *(_WORD *)&v219[1] = -21846;
        v219[0] = v132;
        *(_WORD *)&v219[1] = __rev16(v177);
        int v30 = *(_DWORD *)(a2 + 68);
        uint64_t v31 = v219;
        uint64_t v32 = a2;
        uint64_t v33 = v7;
        __int16 v34 = 89;
LABEL_457:
        unsigned int v90 = 3;
LABEL_458:
        sub_1000AC324(v32, v33, 0, 0LL, v34, v30, v31, v90);
LABEL_459:
        uint64_t v68 = 0LL;
        LOBYTE(v15) = 4;
        goto LABEL_532;
      case 0x5Au:
        if (!v7 || (v7 & 7) != 0) {
          goto LABEL_560;
        }
        char v103 = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 232LL))(v7);
        uint64_t v68 = 0LL;
        LOBYTE(v15) = 4;
        if ((_DWORD)v13 || (v103 & 1) != 0) {
          goto LABEL_532;
        }
        *(_WORD *)v219 = -21846;
        uint64_t v104 = sub_1000451B0();
        if (!v104 || (v104 & 7) != 0) {
          goto LABEL_560;
        }
        unsigned int v105 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v104 + 280LL))(v104, v7);
        if (v105 >= v106[94]) {
          unsigned int v105 = v106[94];
        }
LABEL_262:
        *(_WORD *)v219 = __rev16(v105);
        int v30 = *(_DWORD *)(a2 + 68);
        uint64_t v31 = v219;
        uint64_t v32 = a2;
        uint64_t v33 = v7;
        __int16 v34 = 91;
LABEL_263:
        unsigned int v90 = 2;
        goto LABEL_458;
      case 0x5Cu:
        uint64_t v107 = sub_100061274();
        if (!v107 || (v107 & 7) != 0) {
          goto LABEL_560;
        }
        LOBYTE(v16) = sub_10007D23C(a1, a2);
LABEL_274:
        LOBYTE(v15) = v16;
        goto LABEL_531;
      case 0x5Eu:
        uint64_t v108 = sub_100061274();
        if (!v108 || (v108 & 7) != 0) {
          goto LABEL_560;
        }
        LODWORD(v15) = sub_10007D300(a1, a2);
        if (!(_DWORD)v15) {
          goto LABEL_512;
        }
        goto LABEL_531;
      case 0x61u:
        if ((_DWORD)v13 != 1) {
          goto LABEL_459;
        }
        if (!v14) {
          goto LABEL_560;
        }
        int v135 = *(unsigned __int8 *)v14;
        *(void *)&__int128 v136 = 0xAAAAAAAAAAAAAAAALL;
        *((void *)&v136 + 1) = 0xAAAAAAAAAAAAAAAALL;
        *(_OWORD *)&v219[16] = v136;
        *(_OWORD *)&v219[32] = v136;
        *(_OWORD *)v219 = v136;
        int v137 = v135 == 1 ? 0 : 9;
        *(_DWORD *)v219 = v137;
        *(void *)&v219[8] = v7;
        uint64_t v138 = sub_100061274();
        if (!v138) {
          goto LABEL_560;
        }
        if ((v138 & 7) != 0) {
          goto LABEL_560;
        }
        *(_DWORD *)&v219[16] = sub_10008D0AC(v138, v7);
        uint64_t v139 = sub_100061274();
        if (!v139 || (v139 & 7) != 0) {
          goto LABEL_560;
        }
        *(_DWORD *)&v219[20] = sub_10008C710(v139, v7);
        *(void *)&v219[24] = *(void *)(a1 + 8);
        sub_10007158C(a1, 0, 4LL, (uint64_t)v219, 48);
        goto LABEL_407;
      case 0x62u:
        if (!(_DWORD)v13) {
          goto LABEL_459;
        }
        if (!v14) {
          goto LABEL_560;
        }
        uint64_t v15 = *(unsigned __int8 *)v14;
        int v140 = operator new[](4 * v15);
        unint64_t v141 = (unint64_t)v140;
        if ((_DWORD)v15 + 1 != (_DWORD)v13) {
          sub_1000CEAEC( 0,  4,  "%s:%d dataLen != (numAudioConnections + 1)\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp",  7854);
        }
        if (!(_DWORD)v15) {
          goto LABEL_367;
        }
        unint64_t v142 = 0LL;
        int v143 = (unsigned __int8 *)(v14 + 1);
        unint64_t v144 = v14 + 1;
        do
        {
          if (!v144 || v142 > ~v141) {
            goto LABEL_562;
          }
          int v145 = *v143++;
          *(_DWORD *)(v141 + v142) = v145;
          v142 += 4LL;
          ++v144;
        }

        while (4 * v15 != v142);
LABEL_367:
        uint64_t v146 = sub_1000BE638();
        if (!v146) {
          goto LABEL_560;
        }
        uint64_t v147 = v146;
        if ((v146 & 7) != 0) {
          goto LABEL_560;
        }
        uint64_t v148 = sub_1000C0034(*(void *)(a1 + 8));
        (*(void (**)(uint64_t, uint64_t, uint64_t, unint64_t))(*(void *)v147 + 160LL))( v147,  v148,  v15,  v141);
        LOBYTE(v15) = 0;
        goto LABEL_417;
      case 0x64u:
        sub_10007D3AC((uint64_t *)a1, a2);
        goto LABEL_274;
      case 0x65u:
        memset(v219, 0, 24);
        uint64_t v109 = sub_100061274();
        if (!v109) {
          goto LABEL_560;
        }
        if ((v109 & 7) != 0) {
          goto LABEL_560;
        }
        uint64_t v110 = sub_10008E550(v109, v7, 0);
        uint64_t v111 = sub_10004783C();
        if (!v111 || (v111 & 7) != 0) {
          goto LABEL_560;
        }
        if ((*(unsigned int (**)(uint64_t, _BYTE *, uint64_t))(*(void *)v111 + 344LL))(v111, v219, v110))
        {
          if (!v7 || (v7 & 7) != 0) {
            goto LABEL_560;
          }
          unsigned int v112 = (*(uint64_t (**)(uint64_t, void))(*(void *)v7 + 136LL))(v7, 0LL);
          if (HIWORD(v112)) {
            goto LABEL_564;
          }
          unsigned __int16 v113 = v112;
          unsigned int v114 = (unsigned __int16)v112;
          uint64_t v115 = operator new[]((unsigned __int16)v112);
          uint64_t v116 = v219[23];
          if (v219[23] < 0) {
            uint64_t v116 = *(void *)&v219[8];
          }
          BOOL v22 = __CFADD__(v116, 1LL);
          unint64_t v117 = v116 + 1;
          if (v22) {
            goto LABEL_563;
          }
          if (v117 >> 16) {
            goto LABEL_564;
          }
          uint64_t v15 = (uint64_t)v115;
          if (v219[23] >= 0) {
            int v118 = v219;
          }
          else {
            int v118 = *(_BYTE **)v219;
          }
          memcpy(v115, v118, v113);
          sub_1000616D4(a1, v15, v113);
          sub_1000AC324(a2, v7, 0, 0LL, 102, *(_DWORD *)(a2 + 68), (const void *)v15, v113);
          sub_1000AB4C4(*(void *)(a1 + 8), a2, 0, 1u);
          operator delete[]((void *)v15);
          a2 = 0LL;
          LOBYTE(v15) = 25;
        }

        else
        {
          LOBYTE(v15) = 4;
        }

        std::string::~string((std::string *)v219);
LABEL_417:
        if (!a2) {
          return;
        }
        goto LABEL_531;
      case 0x67u:
        if ((_DWORD)v13 != 1) {
          goto LABEL_459;
        }
        if (!v14) {
          goto LABEL_560;
        }
        uint64_t v149 = *(unsigned __int8 *)v14;
        memset(v219, 0, 24);
        uint64_t v150 = sub_10002CD78();
        if (!v150 || (v150 & 7) != 0) {
          goto LABEL_560;
        }
        (*(void (**)(uint64_t, uint64_t, _BYTE *))(*(void *)v150 + 96LL))(v150, v149, v219);
        unint64_t v151 = v219[23];
        if (v219[23] < 0) {
          unint64_t v151 = *(void *)&v219[8];
        }
        unint64_t v152 = v151 + 2;
        if (v151 >= 0xFFFFFFFFFFFFFFFELL) {
          goto LABEL_563;
        }
        if (!v7 || (v7 & 7) != 0) {
          goto LABEL_560;
        }
        unsigned int v153 = (*(uint64_t (**)(uint64_t, void))(*(void *)v7 + 136LL))(v7, 0LL);
        if (v152 >= v153) {
          size_t v154 = v153;
        }
        else {
          size_t v154 = v152;
        }
        BOOL v155 = (char *)operator new[](v154);
        *BOOL v155 = v149;
        if (!v154) {
          goto LABEL_565;
        }
        if (v219[23] >= 0) {
          int v156 = v219;
        }
        else {
          int v156 = *(const char **)v219;
        }
        strlcpy(v155 + 1, v156, v154 - 1);
        if (v154 >> 16) {
          goto LABEL_564;
        }
        sub_1000AC324(a2, v7, 0, 0LL, 104, *(_DWORD *)(a2 + 68), v155, (unsigned __int16)v154);
        operator delete[](v155);
LABEL_59:
        std::string::~string((std::string *)v219);
        goto LABEL_459;
      case 0x69u:
        if ((_DWORD)v13) {
          goto LABEL_320;
        }
        uint64_t v119 = sub_10004783C();
        if (!v119 || (v119 & 7) != 0) {
          goto LABEL_560;
        }
        if ((*(unsigned int (**)(uint64_t))(*(void *)v119 + 192LL))(v119))
        {
          uint64_t v120 = sub_100015744();
          if (!v120 || (v120 & 7) != 0) {
            goto LABEL_560;
          }
          sub_100017B30(v120);
          goto LABEL_320;
        }

        uint64_t v170 = sub_10004783C();
        if (!v170 || (v170 & 7) != 0) {
          goto LABEL_560;
        }
        char v171 = (*(uint64_t (**)(uint64_t))(*(void *)v170 + 184LL))(v170);
        uint64_t v172 = sub_100015744();
        BOOL v174 = (v172 & 7) == 0 && v172 != 0;
        if ((v171 & 1) == 0)
        {
          if (!v174) {
            goto LABEL_560;
          }
          sub_100017A50(v172);
LABEL_320:
          uint64_t v68 = 0LL;
          LOBYTE(v15) = 2;
          goto LABEL_532;
        }

        if (!v174) {
          goto LABEL_560;
        }
        sub_100017C14(v172);
LABEL_407:
        LOBYTE(v15) = 0;
LABEL_531:
        uint64_t v68 = 0LL;
LABEL_532:
        if ((a2 & 7) != 0) {
          goto LABEL_560;
        }
        if (*(unsigned __int16 *)(a2 + 126) == v8) {
          sub_1000ABE78( a2,  v7,  0,  0LL,  2,  *(_DWORD *)(a2 + 68),  v15,  (unsigned __int16)v8,  0,  255,  0LL,  0,  0,  0);
        }
        uint64_t v199 = *(void *)(a1 + 8);
        if (v8 == 80)
        {
          sub_1000AB4C4(v199, a2, 1, 0);
          return;
        }

        sub_1000AB4C4(v199, a2, 0, 1u);
        if (v8 == 73 && v68)
        {
          if ((v68 & 1) != 0)
          {
            *(_DWORD *)v219 = -1431655766;
            uint64_t v200 = sub_10004E34C();
            if (!v200 || (v200 & 7) != 0) {
              goto LABEL_560;
            }
            *(_DWORD *)v219 = (*(uint64_t (**)(uint64_t))(*(void *)v200 + 88LL))(v200);
            sub_10007852C(a1, 0, v219, 4u, 2u, 0LL, -1);
          }

          if ((v68 & 0x400) != 0) {
            sub_100078268(a1, 1, v7);
          }
          if ((v68 & 0x4000) != 0)
          {
            *(_DWORD *)v219 = -1431655766;
            uint64_t v201 = sub_10004E34C();
            if (!v201 || (v201 & 7) != 0) {
              goto LABEL_560;
            }
            *(_DWORD *)v219 = (*(uint64_t (**)(uint64_t))(*(void *)v201 + 96LL))(v201);
            sub_10007852C(a1, 0xEu, v219, 4u, 2u, 0LL, -1);
          }

          if ((v68 & 0x8000) != 0)
          {
            *(_DWORD *)v219 = -1431655766;
            uint64_t v202 = sub_1000C7788();
            if (!v202 || (v202 & 7) != 0) {
              goto LABEL_560;
            }
            *(_DWORD *)v219 = (*(uint64_t (**)(uint64_t))(*(void *)v202 + 104LL))(v202);
            sub_10007852C(a1, 0xFu, v219, 1u, 2u, 0LL, -1);
          }

          if ((v68 & 0x20000) == 0) {
            goto LABEL_558;
          }
          uint64_t v203 = sub_10004783C();
          if (v203 && (v203 & 7) == 0)
          {
            (*(void (**)(uint64_t, void))(*(void *)v203 + 664LL))(v203, 0LL);
LABEL_558:
            if ((v68 & 0x80000) != 0) {
              sub_10007861C(a1, 1, v7);
            }
            return;
          }

LABEL_560:
          __break(0x5516u);
        }

        return;
      case 0x6Cu:
        if (*(_WORD *)(a2 + 128) != 7)
        {
          LOBYTE(v15) = 4;
          sub_1000CEAEC( 0,  4,  "%s:%d CIapLingoGeneral::ProcessCmd error handling kIapGeneralRequestSiriMode\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp",  8033);
          goto LABEL_531;
        }

        if (v14 > 0xFFFFFFFFFFFFFFF9LL) {
          goto LABEL_562;
        }
        v2.i32[0] = *(_DWORD *)v14;
        char v157 = *(_BYTE *)(v14 + 4);
        char v158 = *(_BYTE *)(v14 + 5);
        unsigned int v159 = *(unsigned __int8 *)(v14 + 6);
        uint64_t v160 = sub_10004783C();
        if (!v160 || (v160 & 7) != 0) {
          goto LABEL_560;
        }
        unsigned __int32 v211 = vmovn_s16((int16x8_t)vmovl_u8(v2)).u32[0];
        char v212 = v157;
        char v213 = v158;
        if (v159 > 3) {
          goto LABEL_561;
        }
        uint64_t v100 = *(void (**)(void))(*(void *)v160 + 704LL);
LABEL_406:
        v100();
        goto LABEL_407;
      case 0x6Du:
        if (!*(_WORD *)(a2 + 128) || !*(void *)(a2 + 24))
        {
          uint64_t v205 = *(unsigned __int16 *)(a2 + 128);
          unint64_t v206 = *(void *)(a2 + 24);
          uint64_t v204 = 8049LL;
          unint64_t v163 = "%s:%s-%d kIapGeneralAccessoryUserLog error, tmpDataLen=%u and dataPtr=%hhx";
          goto LABEL_414;
        }

        uint64_t v161 = sub_10004783C();
        if (!v161 || (v161 & 7) != 0) {
          goto LABEL_560;
        }
        uint64_t v100 = *(void (**)(void))(*(void *)v161 + 728LL);
        goto LABEL_406;
      case 0x6Eu:
        if (!*(_WORD *)(a2 + 128) || !*(void *)(a2 + 24))
        {
          uint64_t v205 = *(unsigned __int16 *)(a2 + 128);
          unint64_t v206 = *(void *)(a2 + 24);
          uint64_t v204 = 8064LL;
          unint64_t v163 = "%s:%s-%d kIapGeneralAccessoryKernelLog error, tmpDataLen=%u and dataPtr=%hhx";
LABEL_414:
          LOBYTE(v15) = 4;
          syslog( 4,  v163,  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp",  "ProcessCmd",  v204,  v205,  v206);
          goto LABEL_531;
        }

        uint64_t v162 = sub_10004783C();
        if (!v162 || (v162 & 7) != 0) {
          goto LABEL_560;
        }
        uint64_t v100 = *(void (**)(void))(*(void *)v162 + 736LL);
        goto LABEL_406;
      default:
        LOBYTE(v15) = 4;
        sub_1000CEAEC( 0,  4,  "%s:%d CIapLingoGeneral::ProcessCmd: Invalid CmdID: 0x%04X\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp",  8073,  v8);
        goto LABEL_531;
    }
  }

uint64_t sub_10007A9EC(uint64_t result, uint64_t a2, int a3)
{
  if (!a2 || a3 != 9)
  {
    __break(0x5518u);
    goto LABEL_41;
  }

  uint64_t v4 = result;
  uint64_t v5 = sub_1000438B8();
  uint64_t result = sub_100061274();
  if (!result) {
    goto LABEL_41;
  }
  if ((result & 7) != 0) {
    goto LABEL_41;
  }
  uint64_t result = sub_10008E550(result, v4, 0);
  if (!v5 || (v5 & 7) != 0) {
    goto LABEL_41;
  }
  uint64_t v6 = result;
  uint64_t v7 = (*(unsigned int (**)(uint64_t, uint64_t))(*(void *)v5 + 192LL))(v5, v4);
  int v8 = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 256LL))(v5);
  uint64_t v9 = 0x404A853FELL;
  if (v8) {
    uint64_t v9 = 0x604A853FELL;
  }
  unint64_t v10 = v9 | v7;
  if (v4)
  {
  }

  else {
    unint64_t v11 = v10;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 136LL))(v5);
  if ((_DWORD)result) {
    v11 |= 0x20000000uLL;
  }
  if (v6)
  {
    if ((v6 & 7) != 0) {
      goto LABEL_41;
    }
  }

  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 88LL))(v5);
  if (v6 && (_DWORD)result)
  {
    if ((v6 & 7) == 0)
    {
      uint64_t result = sub_100057B4C(v6);
      if ((_DWORD)result) {
        v11 |= 0x100100000uLL;
      }
      goto LABEL_38;
    }

uint64_t sub_10007AC40(uint64_t result)
{
  if (!result) {
    goto LABEL_15;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_15;
  }
  unsigned __int8 v3 = 0;
  uint64_t result = sub_100061274();
  if (!result) {
    goto LABEL_15;
  }
  if ((result & 7) != 0) {
    goto LABEL_15;
  }
  uint64_t result = sub_10008C2EC(result, *(void *)(v1 + 8), 0xDu);
  if ((result & 7) != 0) {
    goto LABEL_15;
  }
  uint64_t v2 = result;
  uint64_t result = sub_100090F38((uint64_t)&v3, *(void *)(v1 + 8));
  if (v3 >= 2u) {
    goto LABEL_16;
  }
  uint64_t result = v3 != 0;
  if (v2 && !v3)
  {
    if ((v2 & 7) == 0)
    {
      uint64_t result = sub_10008F550(v2);
      if (result <= 3)
      {
        if ((_DWORD)result != 3) {
          return dword_1000DEE04[(int)result];
        }
        sub_1000CEAEC( 0,  4,  "%s:%d Got an unknown iPod Out Mode!\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp",  18272);
        return 0LL;
      }

void sub_10007AD20(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0 || (uint64_t v1 = a1 + 48, (v1 & 7) != 0)) {
    __break(0x5516u);
  }
  else {
    sub_10004D254(v1);
  }
}

void sub_10007AD40(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0 || (uint64_t v2 = a1 + 48, (v2 & 7) != 0) || !a2) {
    __break(0x5516u);
  }
  else {
    sub_10004C360(v2, a2);
  }
}

uint64_t sub_10007AD64(uint64_t result)
{
  if (!result) {
    goto LABEL_100;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_100;
  }
  uint64_t result = kdebug_trace(731139616LL, 0LL, 0LL, 0LL, 0LL);
  *(_BYTE *)(v1 + 2212) = 1;
  if (!*(void *)(v1 + 8))
  {
    __break(0x5518u);
    goto LABEL_100;
  }

  uint64_t v2 = sub_100061274();
  uint64_t result = *(void *)(v1 + 8);
  if (!result) {
    goto LABEL_100;
  }
  if ((result & 7) != 0) {
    goto LABEL_100;
  }
  uint64_t result = sub_10001864C(result);
  if (!v2 || (v2 & 7) != 0) {
    goto LABEL_100;
  }
  uint64_t v3 = result;
  uint64_t result = sub_100054F0C(v2, result);
  __int16 v23 = -21846;
  int v4 = *(_DWORD *)(v1 + 1588);
  BOOL v9 = __CFADD__(v4, 1);
  int v5 = v4 + 1;
  if (v9)
  {
LABEL_101:
    __break(0x5500u);
    goto LABEL_102;
  }

  uint64_t v6 = (void *)result;
  *(_DWORD *)(v1 + 1588) = v5;
  uint64_t result = *(void *)(v1 + 8);
  if (!result || (result & 7) != 0)
  {
LABEL_100:
    __break(0x5516u);
    goto LABEL_101;
  }

  sub_10005789C(result, 3u);
  uint64_t result = sub_10008C2EC(v2, *(void *)(v1 + 8), 3u);
  if (result)
  {
    if ((result & 7) != 0) {
      goto LABEL_100;
    }
    (*(void (**)(uint64_t, void))(*(void *)result + 88LL))(result, *(void *)(v1 + 8));
  }

  uint64_t result = *(void *)(v1 + 8);
  if (!result) {
    goto LABEL_100;
  }
  if ((result & 7) != 0) {
    goto LABEL_100;
  }
  sub_1000578E8(result, 3u);
  uint64_t result = *(void *)(v1 + 8);
  if (!result || (result & 7) != 0) {
    goto LABEL_100;
  }
  sub_10005789C(result, 4u);
  uint64_t result = sub_10008C2EC(v2, *(void *)(v1 + 8), 4u);
  if (result)
  {
    if ((result & 7) != 0) {
      goto LABEL_100;
    }
    (*(void (**)(uint64_t, void))(*(void *)result + 88LL))(result, *(void *)(v1 + 8));
  }

  uint64_t result = *(void *)(v1 + 8);
  if (!result) {
    goto LABEL_100;
  }
  if ((result & 7) != 0) {
    goto LABEL_100;
  }
  sub_1000578E8(result, 4u);
  uint64_t result = *(void *)(v1 + 8);
  if (!result || (result & 7) != 0) {
    goto LABEL_100;
  }
  uint64_t result = sub_100057B7C(result);
  if ((_DWORD)result == (char)result)
  {
    int v7 = result;
    if ((_DWORD)result != -1) {
      goto LABEL_39;
    }
    if (!v3 || (v3 & 7) != 0) {
      goto LABEL_100;
    }
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 232LL))(v3);
    if ((result & 1) != 0
      || (uint64_t v8 = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 64LL))(v3),
          uint64_t result = IOAccessoryManagerGetServiceWithPrimaryPort(v8),
          !(_DWORD)result))
    {
      int v7 = -1;
      goto LABEL_39;
    }

    uint64_t result = IOAccessoryManagerGetAccessoryID();
    if ((_DWORD)result == (char)result)
    {
      BOOL v9 = (_DWORD)result != 100 && result >= 0x10;
      if (v9) {
        int v7 = -1;
      }
      else {
        int v7 = result;
      }
LABEL_39:
      if ((((_BYTE)v1 - 56) & 7) == 0)
      {
        *(_DWORD *)(v1 + 1224) = 1;
        if ((((_BYTE)v1 - 52) & 3) == 0)
        {
          int v10 = v7 == -1 ? 16 : v7;
          *(_DWORD *)(v1 + 1228) = v10;
          if ((((_BYTE)v1 - 48) & 7) == 0)
          {
            *(void *)(v1 + 1232) = v3;
            if ((((_BYTE)v1 - 40) & 7) == 0)
            {
              *(_DWORD *)(v1 + 1240) = 0;
              if ((((_BYTE)v1 - 36) & 3) == 0)
              {
                *(_DWORD *)(v1 + 1244) = 0;
                if ((((_BYTE)v1 - 32) & 7) == 0)
                {
                  *(void *)(v1 + 1248) = *(void *)(v1 + 8);
                  pthread_mutex_lock((pthread_mutex_t *)(v1 + 1280));
                  __int16 v23 = 112;
                  sub_100062E78(v1, -1, &v23, 0LL, 0xFFFFu);
                  __int16 v23 = 113;
                  sub_100062E78(v1, -1, &v23, 0LL, 0xFFFFu);
                  __int16 v23 = 115;
                  sub_100062E78(v1, -1, &v23, 0LL, 0xFFFFu);
                  pthread_mutex_unlock((pthread_mutex_t *)(v1 + 1280));
                  sub_10006FDA8(v1);
                  __int16 v23 = 0;
                  sub_100062E78(v1, -1, &v23, 0LL, 0xFFFFu);
                  __int16 v23 = 20;
                  sub_100062E78(v1, -1, &v23, 0LL, 0xFFFFu);
                  __int16 v23 = 23;
                  sub_100062E78(v1, -1, &v23, 0LL, 0xFFFFu);
                  uint64_t result = sub_100061274();
                  if (result)
                  {
                    if ((result & 7) == 0)
                    {
                      sub_100054CE8((unsigned __int16 *)result, (void *)v3);
                      if (!v6) {
                        goto LABEL_61;
                      }
                      uint64_t result = sub_100061274();
                      if (result)
                      {
                        if ((result & 7) == 0)
                        {
                          unsigned int v11 = sub_10008C710(result, (uint64_t)v6);
                          uint64_t result = sub_100061274();
                          if (result)
                          {
                            if ((result & 7) == 0)
                            {
                              sub_100054CE8((unsigned __int16 *)result, v6);
                              uint64_t result = sub_100061274();
                              if (result)
                              {
                                if ((result & 7) == 0)
                                {
                                  sub_10008C82C(result, (uint64_t)v6);
                                  sub_100070CB0(v1, *(void *)(v1 + 8), -1);
                                  uint64_t result = sub_100061274();
                                  if (result)
                                  {
                                    if ((result & 7) == 0)
                                    {
                                      sub_100054874(result, (uint64_t)v6, -1);
                                      if (v11)
                                      {
                                        LOWORD(v19[0]) = 120;
                                        sub_100062E78(v1, -1, v19, 0LL, 0xFFFFu);
                                        sub_100070D90(v1, *(void *)(v1 + 8), (uint64_t)v6, v11);
                                      }

void sub_10007B448(uint64_t a1, uint64_t a2)
{
  if (!a1) {
    goto LABEL_289;
  }
  if ((a1 & 7) != 0) {
    goto LABEL_289;
  }
  kdebug_trace(731139632LL, 0LL, 0LL, 0LL, 0LL);
  if (!a2 || (a2 & 7) != 0) {
    goto LABEL_289;
  }
  unsigned int v130 = *(unsigned __int16 *)(a2 + 128);
  if (!*(_WORD *)(a2 + 128))
  {
LABEL_9:
    kdebug_trace(731139636LL, 0LL, 0LL, 0LL, 0LL);
    return;
  }

  if (*(unsigned __int8 *)(a1 + 2200) < 2u)
  {
    if (!*(_BYTE *)(a1 + 2200) || *(_BYTE *)(a1 + 2202)) {
      goto LABEL_9;
    }
    unint64_t v131 = *(void *)(a2 + 24);
    if (!v131) {
      goto LABEL_289;
    }
    char v3 = 0;
    uint64_t v4 = *(void *)(a2 + 8);
    unsigned int v128 = *(unsigned __int8 *)v131;
    if (*(_BYTE *)v131 && v130 >= 2)
    {
      char v3 = 0;
      unint64_t v129 = ~v131;
      uint64_t v126 = a1 + 1992;
      uint64_t v127 = (a1 + 1992) & 7;
      BOOL v6 = (v4 & 7) == 0 && v4 != 0;
      BOOL v122 = v6;
      uint64_t v125 = *(void *)(a2 + 8);
      LODWORD(v7) = 1;
      while (2)
      {
        uint64_t v8 = operator new(0x20uLL);
        if ((v8 & 0xF) == 0 && ((unint64_t)(v8 + 12) & 3) == 0)
        {
          v8[12] = 0;
          unsigned int v10 = *(unsigned __int8 *)(v131 + v7);
          if (v10 < 3) {
            goto LABEL_287;
          }
          unint64_t v11 = v7 + 1LL;
          if (v130 - ((_DWORD)v7 + 1) < v10) {
            goto LABEL_287;
          }
          if (v129 < v11) {
            goto LABEL_290;
          }
          uint64_t v12 = (v7 + 2);
          if (v10 - 2 > 0xFF) {
            goto LABEL_291;
          }
          uint64_t v13 = (uint64_t)v8;
          unsigned int v14 = *(unsigned __int8 *)(v131 + v12) | (*(unsigned __int8 *)(v131 + v11) << 8);
          if (v14 >= 9 && v14 - 14 >= 3 && v14 != 256) {
            goto LABEL_287;
          }
          uint64_t v15 = (v7 + 3);
          size_t v16 = (v10 - 2);
          *((_DWORD *)v8 + 1) = v14;
          switch(v14)
          {
            case 0u:
              uint64_t v17 = (char *)operator new(0x20uLL);
              uint64_t v18 = (uint64_t)v17;
              *(_OWORD *)uint64_t v17 = 0u;
              *((_OWORD *)v17 + 1) = 0u;
              if ((((_BYTE)v17 + 16) & 7) != 0) {
                goto LABEL_289;
              }
              unsigned int v19 = *(unsigned __int8 *)(v131 + v15);
              v17[16] = v19;
              *((_DWORD *)v17 + 5) = 0;
              *((_DWORD *)v17 + 6) = 0;
              uint64_t v20 = v17 + 28;
              unint64_t v7 = (v7 + 4);
              *uint64_t v20 = 0;
              if (v19)
              {
                int v21 = 0;
                unsigned int v22 = 0;
                char v23 = 0;
                do
                {
                  if (v7 > v129) {
                    goto LABEL_290;
                  }
                  unsigned int v24 = *(unsigned __int8 *)(v131 + v7);
                  if (v24 > 0xE)
                  {
                    char v23 = 1;
                  }

                  else
                  {
                    v21 |= 1 << v24;
                    *((_DWORD *)v17 + 5) = v21;
                  }

                  int v25 = v7 + 1;
                  if ((_DWORD)v7 == -1) {
                    goto LABEL_293;
                  }
                  if (v22 == 255) {
                    goto LABEL_291;
                  }
                  unsigned int v22 = (v22 + 1);
                  ++v7;
                }

                while (v22 < v19);
                LODWORD(v7) = v25;
              }

              else
              {
                char v23 = 0;
              }

              unint64_t v117 = (unsigned int *)(v131 + v7);
              if (!v117) {
                goto LABEL_289;
              }
              *((_DWORD *)v17 + 6) = bswap32(*v117);
              unsigned int v118 = v7 + 4;
              if (v7 < 0xFFFFFFFC)
              {
                uint64_t v119 = (unsigned int *)(v131 + v118);
                if (!__CFADD__(v131, v118))
                {
                  if (!v119) {
                    goto LABEL_289;
                  }
                  *uint64_t v20 = bswap32(*v119);
                  LODWORD(v7) = v7 + 8;
                  if (v118 < 0xFFFFFFFC)
                  {
                    sub_100083290(a1, v17, v13, 0);
                    else {
                      unsigned int v29 = v120;
                    }
                    goto LABEL_271;
                  }
                }
              }

              goto LABEL_293;
            case 1u:
              if ((_DWORD)v16 == 8)
              {
                uint64_t v31 = (unint64_t *)(v131 + v15);
                if (!v31) {
                  goto LABEL_289;
                }
                unint64_t v32 = *v31;
                if (!v122) {
                  goto LABEL_289;
                }
                unint64_t v33 = bswap64(v32);
                int v34 = (*(uint64_t (**)(uint64_t))(*(void *)v125 + 232LL))(v125);
                uint64_t v35 = -33554432LL;
                if (v34) {
                  uint64_t v35 = -31434241LL;
                }
                if ((v35 & v33) != 0)
                {
                  uint64_t v123 = 0LL;
                  unint64_t v124 = v33;
                  unsigned int v29 = 1;
                }

                else
                {
                  unsigned int v29 = (v33 & 0x600) == 1024;
                  uint64_t v110 = *(void *)(a1 + 8);
                  if (!v110 || (v110 & 7) != 0) {
                    goto LABEL_289;
                  }
                  int v111 = sub_100057B4C(v110);
                  if (v111) {
                    unint64_t v112 = v33;
                  }
                  else {
                    unint64_t v112 = v33 & 0xFFFFFFFFFFFFF9FFLL;
                  }
                  uint64_t v113 = 1536LL;
                  if (v111) {
                    uint64_t v113 = 0LL;
                  }
                  uint64_t v123 = v113;
                  unint64_t v124 = v112;
                  uint64_t v114 = *(void *)(a1 + 8);
                  if (!v114 || (v114 & 7) != 0) {
                    goto LABEL_289;
                  }
                  if ((sub_100057B4C(v114) & 1) == 0)
                  {
                    v123 |= 0x1000uLL;
                    unint64_t v124 = v112 & 0xFFFFFFFFFFFFEFFFLL;
                  }
                }

                int v56 = 0;
                LODWORD(v7) = v7 + 11;
              }

              else
              {
                unsigned int v29 = 0;
                uint64_t v123 = 0LL;
                unint64_t v124 = 0LL;
                int v56 = 2;
                LODWORD(v7) = v7 + 3;
              }

              uint64_t v115 = operator new(0x20uLL);
              uint64_t v18 = (uint64_t)v115;
              *uint64_t v115 = 0u;
              v115[1] = 0u;
              if ((((_BYTE)v115 + 16) & 7) != 0) {
                goto LABEL_289;
              }
              *((void *)v115 + 2) = v124;
              if ((((_BYTE)v115 + 24) & 7) != 0) {
                goto LABEL_289;
              }
              *((void *)v115 + 3) = v123;
              if ((_DWORD)v16 != 8) {
                goto LABEL_251;
              }
              goto LABEL_271;
            case 2u:
              uint64_t v36 = operator new(0x20uLL);
              uint64_t v18 = (uint64_t)v36;
              *uint64_t v36 = 0u;
              v36[1] = 0u;
              *((_BYTE *)v36 + 16) = *(_BYTE *)(v131 + v15);
              unint64_t v37 = operator new[]((v10 - 3));
              if ((((_BYTE)v18 + 24) & 7) != 0) {
                goto LABEL_289;
              }
              unint64_t v7 = (v7 + 4);
              *(void *)(v18 + 24) = v37;
              *(_BYTE *)(v18 + 17) = v10 - 3;
              memcpy(v37, (const void *)(v131 + v7), (v10 - 3));
              LODWORD(v7) = (v10 - 3) + (_DWORD)v7;
              unsigned int v38 = sub_100083D84(a1, v18, v13);
              goto LABEL_83;
            case 3u:
              if ((_DWORD)v16 != 3) {
                goto LABEL_202;
              }
              uint64_t v39 = (uint64_t)operator new(0x18uLL);
              if ((v39 & 0xF) != 0) {
                goto LABEL_289;
              }
              uint64_t v18 = v39;
              *(void *)uint64_t v39 = 0LL;
              *(void *)(v39 + 8) = 0LL;
              *(void *)(v39 + 16) = 0LL;
              if ((v39 & 7) != 0) {
                goto LABEL_289;
              }
              uint64_t v40 = (_BYTE *)(v39 + 16);
              if (((v39 + 16) & 7) != 0) {
                goto LABEL_289;
              }
              uint64_t v41 = (v7 + 4);
              char v42 = *(_BYTE *)(v131 + v15);
              *uint64_t v40 = v42;
              unint64_t v43 = (v7 + 5);
              *(_BYTE *)(v39 + 17) = *(_BYTE *)(v131 + v41);
              if (v129 < v43) {
                goto LABEL_290;
              }
              if ((((_DWORD)v39 + 18) & 1) != 0) {
                goto LABEL_289;
              }
              *(_BYTE *)(v39 + 18) = *(_BYTE *)(v131 + v43);
              *(_BYTE *)(v13 + 13) = v42;
              *(_BYTE *)(v13 + 12) = 1;
              uint64_t v44 = sub_1000843D0(v39, *(void *)(a1 + 8));
              sub_100076A64(a1, v44, 1);
              if (v45)
              {
                unsigned int v29 = 2;
              }

              else
              {
                if (v127) {
                  goto LABEL_289;
                }
                unsigned int v116 = *v40;
                if (v116 >= 0x20) {
                  goto LABEL_295;
                }
                unsigned int v29 = 0;
                *(_DWORD *)(a1 + 2196) |= 1 << v116;
              }

              LODWORD(v7) = v7 + 6;
              if (v44)
              {
                if ((v44 & 7) != 0) {
                  goto LABEL_289;
                }
                (*(void (**)(uint64_t))(*(void *)v44 + 8LL))(v44);
              }

              goto LABEL_271;
            case 4u:
              unint64_t v46 = (v12 + v16);
              if (v129 < v46) {
                goto LABEL_290;
              }
              if (*(_BYTE *)(v131 + v46)) {
                goto LABEL_202;
              }
              uint64_t v47 = operator new(0x28uLL);
              uint64_t v18 = (uint64_t)v47;
              v47[4] = 0LL;
              *(_OWORD *)uint64_t v47 = 0u;
              *((_OWORD *)v47 + 1) = 0u;
              if ((((_BYTE)v47 + 16) & 7) != 0) {
                goto LABEL_289;
              }
              char v48 = *(_BYTE *)(v131 + v15);
              *((_BYTE *)v47 + 16) = v48;
              unsigned int v49 = operator new[]((v16 - 1));
              if (((v18 + 24) & 7) != 0) {
                goto LABEL_289;
              }
              unint64_t v7 = (v7 + 4);
              *(void *)(v18 + 24) = v49;
              memcpy(v49, (const void *)(v131 + v7), (v16 - 1));
              if ((((_BYTE)v18 + 32) & 7) != 0) {
                goto LABEL_289;
              }
              *(_DWORD *)(v18 + 32) = 1;
              if ((((_BYTE)v18 + 36) & 3) != 0) {
                goto LABEL_289;
              }
              unsigned int v29 = 0;
              *(_BYTE *)(v18 + 36) = 0;
              LODWORD(v7) = v16 - 1 + v7;
              *(_BYTE *)(v13 + 13) = v48;
              goto LABEL_138;
            case 5u:
              LODWORD(v7) = v16 + v15;
              unint64_t v50 = (v16 + v15 - 1);
              if (v129 < v50) {
                goto LABEL_290;
              }
              if (*(_BYTE *)(v131 + v50)) {
                goto LABEL_202;
              }
              unsigned int v51 = operator new(0x18uLL);
              uint64_t v18 = (uint64_t)v51;
              *unsigned int v51 = 0LL;
              v51[1] = 0LL;
              v51[2] = 0LL;
              int v52 = operator new[](v16);
              if (((v18 + 16) & 7) != 0) {
                goto LABEL_289;
              }
              *(void *)(v18 + 16) = v52;
              memcpy(v52, (const void *)(v131 + v15), v16);
              goto LABEL_201;
            case 6u:
              uint64_t v53 = (uint64_t)operator new(0x20uLL);
              if ((v53 & 0xF) != 0) {
                goto LABEL_289;
              }
              uint64_t v18 = v53;
              *(_OWORD *)uint64_t v53 = 0u;
              *(_OWORD *)(v53 + 16) = 0u;
              if ((v53 & 7) != 0) {
                goto LABEL_289;
              }
              if ((((_BYTE)v53 + 16) & 7) != 0) {
                goto LABEL_289;
              }
              unsigned int v54 = *(unsigned __int8 *)(v131 + v15);
              *(_BYTE *)(v53 + 16) = v54;
              if (((v53 + 20) & 3) != 0) {
                goto LABEL_289;
              }
              *(_DWORD *)(v53 + 20) = 0;
              uint64_t v55 = (_DWORD *)(v53 + 24);
              if (((v53 + 24) & 7) != 0) {
                goto LABEL_289;
              }
              unint64_t v7 = (v7 + 4);
              *uint64_t v55 = 0;
              if (v130 - v7 < v54 + 4)
              {
LABEL_123:
                int v56 = 2;
LABEL_251:
                if ((v18 & 7) != 0) {
                  goto LABEL_289;
                }
                operator delete((void *)v18);
                LODWORD(v15) = v7;
                goto LABEL_203;
              }

              if (v54)
              {
                uint64_t v104 = 0LL;
                int v105 = 0;
                unsigned int v106 = 0;
                do
                {
                  if (v7 + v104 > v129) {
                    goto LABEL_290;
                  }
                  unsigned int v107 = *(unsigned __int8 *)(v131 + v7 + v104);
                  if (v107 >= 0x20) {
                    int v108 = 0;
                  }
                  else {
                    int v108 = 1 << v107;
                  }
                  v105 |= v108;
                  *(_DWORD *)(v53 + 20) = v105;
                  if ((_DWORD)v7 + (_DWORD)v104 == -1) {
                    goto LABEL_293;
                  }
                  if (v106 == 255) {
                    goto LABEL_291;
                  }
                  unsigned int v106 = (v106 + 1);
                  ++v104;
                }

                while (v106 < v54);
                LODWORD(v7) = v7 + v104;
              }

              uint64_t v109 = (unsigned int *)(v131 + v7);
              if (!v109) {
                goto LABEL_289;
              }
              *uint64_t v55 = bswap32(*v109);
              BOOL v82 = __CFADD__((_DWORD)v7, 4);
              LODWORD(v7) = v7 + 4;
              if (v82) {
                goto LABEL_293;
              }
              unsigned int v38 = sub_100084494(a1, v53);
LABEL_83:
              unsigned int v29 = v38;
              goto LABEL_271;
            case 7u:
              unsigned int v29 = 0;
              LODWORD(v7) = v16 + v15;
              goto LABEL_207;
            case 8u:
              if (v16 < 2)
              {
                LODWORD(v7) = v7 + 4;
LABEL_206:
                unsigned int v29 = 2;
LABEL_207:
                uint64_t v100 = operator new(0x10uLL);
                uint64_t v18 = (uint64_t)v100;
                *uint64_t v100 = 0LL;
                v100[1] = 0LL;
              }

              else
              {
                BOOL v57 = operator new(0x20uLL);
                uint64_t v18 = (uint64_t)v57;
                *BOOL v57 = 0u;
                v57[1] = 0u;
                uint64_t v58 = (v7 + 4);
                char v59 = *(_BYTE *)(v131 + v15);
                *((_BYTE *)v57 + 16) = v59;
                unsigned int v60 = *(unsigned __int8 *)(v131 + v58);
                if (v60 > 7) {
                  goto LABEL_292;
                }
                int v61 = (v10 - 3);
                if (v60 == 2) {
                  unsigned int v60 = 1;
                }
                *((_DWORD *)v57 + 5) = v60;
                if ((((_BYTE)v57 + 24) & 7) != 0) {
                  goto LABEL_289;
                }
                BOOL v62 = v61 != 1;
                unsigned int v29 = 2 * v62;
                *((_BYTE *)v57 + 24) = 2 * v62;
                LODWORD(v7) = v7 + 5 + v61 - 1;
                *(_BYTE *)(v13 + 13) = v59;
LABEL_138:
                *(_BYTE *)(v13 + 12) = 1;
              }

LABEL_271:
              if ((v18 & 7) != 0) {
                goto LABEL_289;
              }
              *(_DWORD *)uint64_t v18 = v14;
              if (v29 > 0xF) {
                goto LABEL_292;
              }
              if (((v13 + 8) & 7) != 0) {
                goto LABEL_289;
              }
              *(_DWORD *)(v13 + 8) = v29;
              if (v127) {
                goto LABEL_289;
              }
              sub_10008483C(v126, v18, v13);
              if (*(_DWORD *)v18 == 1)
              {
                uint64_t v121 = *(void *)(a1 + 8);
                if (!v121 || (v121 & 7) != 0 || ((a1 + 2056) & 7) != 0) {
                  goto LABEL_289;
                }
                sub_100057C88(v121, *(void *)(a1 + 2056));
              }

              int v56 = 0;
LABEL_281:
              uint64_t v4 = v125;
              if (!v56) {
                goto LABEL_285;
              }
LABEL_287:
              if (v127) {
                goto LABEL_289;
              }
              sub_10006EC68(v126);
              break;
            case 9u:
            case 0xAu:
            case 0xBu:
            case 0xCu:
            case 0xDu:
              goto LABEL_65;
            case 0xEu:
              if ((v16 & 3) != 0) {
                goto LABEL_202;
              }
              int v63 = operator new(0x110uLL);
              uint64_t v18 = (uint64_t)v63;
              uint64_t v64 = sub_100061274();
              if (!v64) {
                goto LABEL_289;
              }
              uint64_t v65 = v64;
              if ((v64 & 7) != 0) {
                goto LABEL_289;
              }
              __int16 v66 = (*(uint64_t (**)(uint64_t, void))(*(void *)v64 + 152LL))(v64, *(void *)(a1 + 8));
              if ((v18 & 7) != 0) {
                goto LABEL_289;
              }
              __int16 v67 = v66;
              uint64_t v68 = sub_10008C2EC(v65, *(void *)(a1 + 8), 0xAu);
              if (!v68) {
                goto LABEL_209;
              }
              if ((v68 & 7) != 0) {
                goto LABEL_289;
              }
              if (v69 && (size_t v70 = v16 >> 2, (v16 >> 2) >= 3) && (v67 & 0x400) != 0)
              {
                uint64_t v71 = 0LL;
                *(_OWORD *)(v18 + 16) = 0u;
                *(_OWORD *)(v18 + 252) = 0u;
                *(_OWORD *)(v18 + 224) = 0u;
                *(_OWORD *)(v18 + 240) = 0u;
                *(_OWORD *)(v18 + 192) = 0u;
                *(_OWORD *)(v18 + 208) = 0u;
                *(_OWORD *)(v18 + 160) = 0u;
                *(_OWORD *)(v18 + 176) = 0u;
                *(_OWORD *)(v18 + 128) = 0u;
                *(_OWORD *)(v18 + 144) = 0u;
                *(_OWORD *)(v18 + 96) = 0u;
                *(_OWORD *)(v18 + 112) = 0u;
                *(_OWORD *)(v18 + 64) = 0u;
                *(_OWORD *)(v18 + 80) = 0u;
                *(_OWORD *)(v18 + 32) = 0u;
                *(_OWORD *)(v18 + 48) = 0u;
                do
                {
                  int v72 = (unsigned int *)(v131 + v15 + v71);
                  if (__CFADD__(v131, v15 + v71)) {
                    goto LABEL_293;
                  }
                  if (!v72) {
                    goto LABEL_289;
                  }
                  unsigned int v73 = *v72;
                  if ((v18 & 3) != 0) {
                    goto LABEL_289;
                  }
                  *(_DWORD *)(v18 + v71 + 16) = bswap32(v73);
                  v71 += 4LL;
                }

                while (4 * v70 != v71);
                if ((v69 & 7) != 0) {
                  goto LABEL_289;
                }
                LODWORD(v7) = v71 + v15;
                else {
                  unsigned int v29 = 2;
                }
              }

              else
              {
LABEL_209:
                LODWORD(v7) = v16 + v15;
                unsigned int v29 = 2;
              }

              goto LABEL_271;
            case 0xFu:
              if ((_DWORD)v16 != 4) {
                goto LABEL_202;
              }
              uint64_t v74 = sub_100061274();
              if (!v74) {
                goto LABEL_289;
              }
              uint64_t v75 = v74;
              if ((v74 & 7) != 0) {
                goto LABEL_289;
              }
              __int16 v76 = (*(uint64_t (**)(uint64_t, void))(*(void *)v74 + 152LL))(v74, *(void *)(a1 + 8));
              uint64_t v77 = operator new(0x18uLL);
              uint64_t v18 = (uint64_t)v77;
              *uint64_t v77 = 0LL;
              v77[1] = 0LL;
              v77[2] = 0LL;
              if ((v76 & 0x400) != 0)
              {
                uint64_t v101 = sub_10008C2EC(v75, *(void *)(a1 + 8), 0xAu);
                if (!v101) {
                  goto LABEL_259;
                }
                if ((v101 & 7) != 0) {
                  goto LABEL_289;
                }
                if (v102)
                {
                  char v103 = (unsigned int *)(v131 + v15);
                  if (!v103) {
                    goto LABEL_289;
                  }
                  if (((v18 + 16) & 7) != 0) {
                    goto LABEL_289;
                  }
                  *(_DWORD *)(v18 + 16) = bswap32(*v103);
                  if ((v102 & 7) != 0) {
                    goto LABEL_289;
                  }
                  else {
                    unsigned int v29 = 2;
                  }
                }

                else
                {
LABEL_259:
                  unsigned int v29 = 0;
                }
              }

              else
              {
                unsigned int v29 = 2;
              }

              goto LABEL_260;
            case 0x10u:
              if ((_DWORD)v16 != 36) {
                goto LABEL_202;
              }
              int v78 = operator new(0x38uLL);
              uint64_t v18 = (uint64_t)v78;
              v78[6] = 0LL;
              *((_OWORD *)v78 + 1) = 0u;
              *((_OWORD *)v78 + 2) = 0u;
              *(_OWORD *)int v78 = 0u;
              int v79 = (unsigned __int16 *)(v131 + v15);
              if (!v79) {
                goto LABEL_289;
              }
              unsigned int v80 = *v79;
              *((_DWORD *)v78 + 4) = __rev16(v80);
              uint64_t v81 = (v7 + 5);
              BOOL v82 = __CFADD__(v131, v81);
              unsigned int v83 = (unsigned int *)(v131 + v81);
              if (v82) {
                goto LABEL_293;
              }
              *((_DWORD *)v78 + 5) = bswap32(*v83);
              uint64_t v84 = (v7 + 9);
              BOOL v82 = __CFADD__(v131, v84);
              uint64_t v85 = (unsigned int *)(v131 + v84);
              if (v82) {
                goto LABEL_293;
              }
              *((_DWORD *)v78 + 6) = bswap32(*v85);
              uint64_t v86 = (v7 + 13);
              BOOL v82 = __CFADD__(v131, v86);
              int v87 = (unsigned int *)(v131 + v86);
              if (v82) {
                goto LABEL_293;
              }
              *((_DWORD *)v78 + 7) = bswap32(*v87);
              uint64_t v88 = (v7 + 17);
              BOOL v82 = __CFADD__(v131, v88);
              uint64_t v89 = (unsigned int *)(v131 + v88);
              if (v82) {
                goto LABEL_293;
              }
              *((_DWORD *)v78 + 8) = bswap32(*v89);
              uint64_t v90 = (v7 + 21);
              BOOL v82 = __CFADD__(v131, v90);
              unsigned int v91 = (unsigned int *)(v131 + v90);
              if (v82) {
                goto LABEL_293;
              }
              *((_DWORD *)v78 + 9) = bswap32(*v91);
              uint64_t v92 = (v7 + 25);
              BOOL v82 = __CFADD__(v131, v92);
              unint64_t v93 = (unsigned int *)(v131 + v92);
              if (v82) {
                goto LABEL_293;
              }
              *((_DWORD *)v78 + 10) = bswap32(*v93);
              uint64_t v94 = (v7 + 29);
              BOOL v82 = __CFADD__(v131, v94);
              char v95 = (unsigned int *)(v131 + v94);
              if (v82) {
                goto LABEL_293;
              }
              *((_DWORD *)v78 + 11) = bswap32(*v95);
              uint64_t v96 = (v7 + 33);
              BOOL v82 = __CFADD__(v131, v96);
              uint64_t v97 = (unsigned int *)(v131 + v96);
              if (v82) {
                goto LABEL_293;
              }
              if (!v97) {
                goto LABEL_289;
              }
              *((_DWORD *)v78 + 12) = bswap32(*v97);
              uint64_t v98 = sub_100061274();
              if (!v98 || (v98 & 7) != 0) {
                goto LABEL_289;
              }
              LODWORD(v7) = v7 + 37;
              uint64_t v99 = sub_10008C2EC(v98, *(void *)(a1 + 8), 0xDu);
              if (!v99) {
                goto LABEL_201;
              }
              if ((v99 & 7) != 0) {
                goto LABEL_289;
              }
              sub_10008F7E4(v99, (_DWORD *)(v18 + 16));
LABEL_201:
              unsigned int v29 = 0;
              goto LABEL_271;
            default:
              if (v14 != 256)
              {
LABEL_65:
                int v30 = operator new(0x10uLL);
                uint64_t v18 = (uint64_t)v30;
                *int v30 = 0LL;
                v30[1] = 0LL;
                LODWORD(v7) = v16 + v15;
                unsigned int v29 = 3;
                goto LABEL_271;
              }

              if ((_DWORD)v16 == 4)
              {
                uint64_t v26 = operator new(0x18uLL);
                uint64_t v18 = (uint64_t)v26;
                *uint64_t v26 = 0LL;
                v26[1] = 0LL;
                v26[2] = 0LL;
                uint64_t v27 = (unsigned int *)(v131 + v15);
                if (!v27) {
                  goto LABEL_289;
                }
                unsigned int v28 = *v27;
                if ((((_BYTE)v26 + 16) & 7) != 0) {
                  goto LABEL_289;
                }
                unsigned int v29 = 0;
                *((_DWORD *)v26 + 4) = bswap32(v28);
LABEL_260:
                LODWORD(v7) = v7 + 7;
                goto LABEL_271;
              }

LABEL_202:
              int v56 = 2;
LABEL_203:
              operator delete((void *)v13);
              LODWORD(v7) = v15;
              goto LABEL_281;
          }

          goto LABEL_9;
        }

        goto LABEL_289;
      }
    }

LABEL_285:
    if (((a1 + 1992) & 7) == 0)
    {
      sub_1000849C0(a1 + 1992, v3);
      sub_100084A44(a1, a2, v4);
      goto LABEL_9;
    }

LABEL_289:
    __break(0x5516u);
LABEL_290:
    __break(0x5513u);
LABEL_291:
    __break(0x5507u);
  }

LABEL_292:
  __break(0x550Au);
LABEL_293:
  __break(0x5500u);
LABEL_294:
  __break(0x5515u);
LABEL_295:
  __break(0x5514u);
}

uint64_t sub_10007C46C(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_113;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_113;
  }
  unsigned int v25 = 8;
  uint64_t result = *(void *)(result + 8);
  if (!result || (result & 7) != 0) {
    goto LABEL_113;
  }
  uint64_t result = sub_10001864C(result);
  if (!a2 || (a2 & 7) != 0) {
    goto LABEL_113;
  }
  int v5 = *(unsigned __int16 *)(a2 + 128);
  BOOL v6 = *(unsigned __int8 **)(a2 + 24);
  int v7 = *(_DWORD *)(a2 + 68);
  __int16 v24 = 116;
  if (v5 != 1) {
    return 2LL;
  }
  if (!v6) {
    goto LABEL_113;
  }
  uint64_t v8 = result;
  unsigned int v9 = *v6;
  if (!*(_BYTE *)(v2 + 2200) && !*(_BYTE *)(v2 + 2202)) {
    return 4LL;
  }
  if (*(_BYTE *)(v2 + 2202))
  {
    unsigned int v25 = 5;
    __int16 v24 = 116;
    sub_100062E78(v2, -1, &v24, 0LL, 0xFFFFu);
    goto LABEL_17;
  }

  if (!*(_BYTE *)(v2 + 2200)) {
    return 4LL;
  }
  if (v9 > 7) {
    goto LABEL_114;
  }
  switch(v9)
  {
    case 0u:
      uint64_t result = v2 + 1992;
      if (((v2 + 1992) & 7) != 0) {
        goto LABEL_113;
      }
      uint64_t result = sub_100084F10(result);
      unsigned int v25 = result;
      if ((_DWORD)result) {
        break;
      }
      if ((((_BYTE)v2 + 56) & 7) != 0) {
        goto LABEL_113;
      }
      if (!*(_BYTE *)(v2 + 1965)) {
        break;
      }
      if (((v2 + 1964) & 3) != 0) {
        goto LABEL_113;
      }
      if (!*(_BYTE *)(v2 + 1964))
      {
        int v13 = 2;
LABEL_109:
        unsigned int v25 = v13;
      }

      break;
    case 1u:
      int v13 = 4;
      goto LABEL_109;
    case 2u:
      unsigned int v25 = 6;
      __int16 v24 = 116;
      sub_100062E78(v2, -1, &v24, 0LL, 0xFFFFu);
      uint64_t result = pthread_mutex_lock((pthread_mutex_t *)(v2 + 1344));
      int v23 = *(unsigned __int8 *)(v2 + 2202);
      if (v23 == 255) {
        goto LABEL_115;
      }
      *(_BYTE *)(v2 + 2202) = v23 + 1;
      pthread_mutex_unlock((pthread_mutex_t *)(v2 + 1344));
      sub_1000807C0(v2, 0);
      break;
    case 3u:
      unsigned int v25 = 4;
      __int16 v24 = 116;
      sub_100062E78(v2, -1, &v24, 0LL, 0xFFFFu);
      *(_BYTE *)(v2 + 2201) = 1;
      sub_100062D14((void *)v2, -1, 114, 0LL, 3000);
      break;
    default:
      uint64_t v12 = 4LL;
      sub_1000CEAEC( 0,  4,  "%s:%d accEndIDPSStatus %X is not supported\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp",  16147,  v9);
      return v12;
  }

LABEL_113:
  __break(0x5516u);
LABEL_114:
  __break(0x550Au);
LABEL_115:
  __break(0x5507u);
  return result;
}

uint64_t sub_10007CA40(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_60;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_60;
  }
  if (*(_WORD *)(a2 + 128) != 2) {
    return sub_1000AD43C(a2);
  }
  uint64_t v4 = *(unsigned __int8 **)(a2 + 24);
  if (!v4) {
    goto LABEL_60;
  }
  if (v4 == (unsigned __int8 *)-1LL)
  {
LABEL_61:
    __break(0x5513u);
    goto LABEL_62;
  }

  unsigned int v5 = *(_DWORD *)(a2 + 68);
  int v6 = *v4;
  int v7 = v4[1];
  if (v7 <= 66)
  {
    if (v7 != 63)
    {
      if (v7 == 64) {
        return sub_1000AD43C(a2);
      }
      goto LABEL_15;
    }

    std::string __p = 0LL;
    __int16 v19 = 117;
    BOOL v11 = __p;
    if (!__p) {
      return sub_1000AD43C(a2);
    }
    unsigned __int16 v17 = bswap32(*(unsigned __int16 *)__p) >> 16;
    if (v6) {
      goto LABEL_55;
    }
    uint64_t v16 = 0xAAAAAAAAAAAAAAAALL;
    uint64_t result = v2 + 1200;
    if (((v2 + 1200) & 7) != 0) {
      goto LABEL_60;
    }
    uint64_t result = sub_100013C90(result, &v17);
    uint64_t v16 = result;
    if (((v2 + 1208) & 7) != 0) {
      goto LABEL_60;
    }
    if (v2 + 1208 != result)
    {
      uint64_t result = (uint64_t)sub_100003154(&v16);
      if (!result) {
        goto LABEL_60;
      }
      if ((result & 7) != 0) {
        goto LABEL_60;
      }
      if (((result + 8) & 7) != 0) {
        goto LABEL_60;
      }
      uint64_t v12 = *(void *)(result + 8);
      if (!v12) {
        goto LABEL_60;
      }
      if ((v12 & 7) != 0) {
        goto LABEL_60;
      }
      *(_BYTE *)(v12 + 32) = 1;
      uint64_t result = (uint64_t)sub_100003154(&v16);
      if (!result) {
        goto LABEL_60;
      }
      if ((result & 7) != 0) {
        goto LABEL_60;
      }
      if (((result + 8) & 7) != 0) {
        goto LABEL_60;
      }
      uint64_t v13 = *(void *)(result + 8);
      if (!v13 || (v13 & 7) != 0) {
        goto LABEL_60;
      }
      *(_BYTE *)(v13 + 33) = 0;
    }

    BOOL v11 = __p;
    if (__p) {
LABEL_55:
    }
      operator delete[](v11);
    uint64_t result = sub_1000472A8();
    if (result)
    {
      uint64_t v14 = result;
      if ((result & 7) == 0)
      {
        uint64_t v15 = sub_1000C0034(*(void *)(v2 + 8));
        (*(void (**)(uint64_t, uint64_t, void, BOOL))(*(void *)v14 + 128LL))(v14, v15, v17, v6 == 0);
        return sub_1000AD43C(a2);
      }
    }

    goto LABEL_60;
  }

  if (v7 != 67)
  {
    if (v7 != 93)
    {
      if (v7 == 96)
      {
        __int16 v19 = 96;
        sub_100062E78(result, v5, &v19, 0LL, 0xFFFFu);
        return sub_1000AD43C(a2);
      }

LABEL_62:
  __break(0x5507u);
  return result;
}

  unint64_t v33 = v18 - v17;
  if (v18 < v17)
  {
LABEL_143:
    __break(0x5515u);
    goto LABEL_144;
  }

  int v34 = &v28[v15] - v32;
  if (v8 == 2)
  {
    switch(v9)
    {
      case 0u:
        if (v10 != (unsigned __int16)v14)
        {
          uint64_t v53 = v16;
          unsigned int v54 = v17;
          uint64_t v55 = v34;
          sub_1000CEAEC( 0,  4,  "%s:%d sectCur != sectMax\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoLocation.cpp",  2129);
          int v34 = v55;
          unsigned __int16 v17 = v54;
          uint64_t v16 = v53;
        }

        int v56 = (unsigned __int16 *)(a2 + 26);
        if ((((_DWORD)a2 + 26) & 1) != 0) {
          goto LABEL_139;
        }
        if (*v56 >= 0x2000u)
        {
          BOOL v57 = v16;
          uint64_t v58 = v17;
          char v59 = v34;
          sub_1000CEAEC( 0,  4,  "%s:%d pLocMsg->msg.locData.data.locPoint.gpsWeekNum > IAP_LOCATION_MAX_WEEKNUM\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoLocation.cpp",  2134);
          int v34 = v59;
          unsigned __int16 v17 = v58;
          uint64_t v16 = v57;
        }

        if ((((_DWORD)a2 + 28) & 1) != 0) {
          goto LABEL_139;
        }
        if (*(_DWORD *)(a2 + 28) > 0x240C83FFu)
        {
          unsigned int v60 = v16;
          int v61 = v17;
          BOOL v62 = v34;
          sub_1000CEAEC( 0,  4,  "%s:%d pLocMsg->msg.locData.data.locPoint.gpsWeekNum > IAP_LOCATION_MAX_WEEKNUM\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoLocation.cpp",  2139);
          int v34 = v62;
          unsigned __int16 v17 = v61;
          uint64_t v16 = v60;
        }

        if (v34 <= 0xF) {
          goto LABEL_138;
        }
        *(_WORD *)unint64_t v32 = bswap32(*v56) >> 16;
        *(_DWORD *)(v32 + 2) = bswap32(*(_DWORD *)(a2 + 28));
        if ((((_DWORD)a2 + 32) & 1) != 0) {
          goto LABEL_139;
        }
        *(_DWORD *)(v32 + 6) = bswap32(*(_DWORD *)(a2 + 32));
        if ((((_DWORD)a2 + 36) & 1) != 0) {
          goto LABEL_139;
        }
        *(_DWORD *)(v32 + 10) = bswap32(*(_DWORD *)(a2 + 36));
        if ((((_DWORD)a2 + 40) & 1) != 0) {
          goto LABEL_139;
        }
        *((_WORD *)v32 + 7) = bswap32(*(unsigned __int16 *)(a2 + 40)) >> 16;
        v32 += 16;
        goto LABEL_79;
      case 1u:
        if (v10 || !(_WORD)v14) {
          goto LABEL_79;
        }
        if ((((_DWORD)a2 + 26) & 1) != 0) {
          goto LABEL_139;
        }
        goto LABEL_69;
      case 2u:
        goto LABEL_66;
      case 3u:
      case 4u:
        if (v34 <= 3)
        {
          uint64_t v41 = v16;
          char v42 = v17;
          unint64_t v43 = v34;
          sub_1000CEAEC( 0,  4,  "%s:%d buffLen < sizeof (pLocMsg->msg.locData.data.ephRefresh)\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoLocation.cpp",  2247);
          int v34 = v43;
          unsigned __int16 v17 = v42;
          uint64_t v16 = v41;
        }

        if ((((_DWORD)a2 + 26) & 1) != 0) {
          goto LABEL_139;
        }
        *(_DWORD *)unint64_t v32 = bswap32(*(_DWORD *)(a2 + 26));
        v32 += 4;
        goto LABEL_79;
      case 5u:
        if (v10 != (unsigned __int16)v14)
        {
          int v63 = v16;
          uint64_t v64 = v17;
          uint64_t v65 = v34;
          sub_1000CEAEC( 0,  4,  "%s:%d sectCur != sectMax\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoLocation.cpp",  2263);
          int v34 = v65;
          unsigned __int16 v17 = v64;
          uint64_t v16 = v63;
        }

        __int16 v66 = (unsigned __int16 *)(a2 + 26);
        if ((((_DWORD)a2 + 26) & 1) != 0) {
          goto LABEL_139;
        }
        if (*v66 >= 0x2000u)
        {
          __int16 v67 = v16;
          uint64_t v68 = v17;
          uint64_t v69 = v34;
          sub_1000CEAEC( 0,  4,  "%s:%d pLocMsg->msg.locData.data.gpsWeekTime.gpsWeekNum > IAP_LOCATION_MAX_WEEKNUM\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoLocation.cpp",  2268);
          int v34 = v69;
          unsigned __int16 v17 = v68;
          uint64_t v16 = v67;
        }

        size_t v70 = (unsigned int *)(a2 + 28);
        if ((((_DWORD)a2 + 28) & 1) != 0) {
          goto LABEL_139;
        }
        if (*v70 > 0x240C83FF)
        {
          uint64_t v71 = v16;
          int v72 = v17;
          unsigned int v73 = v34;
          sub_1000CEAEC( 0,  4,  "%s:%d pLocMsg->msg.locData.data.gpsWeekTime.gpsWeekTimeMs > IAP_LOCATION_MAX_WEEKTIME\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoLocation.cpp",  2273);
          int v34 = v73;
          unsigned __int16 v17 = v72;
          uint64_t v16 = v71;
        }

        if (v34 < 6)
        {
LABEL_138:
          __break(0x5518u);
          goto LABEL_139;
        }

        *(_WORD *)unint64_t v32 = bswap32(*v66) >> 16;
        *(_DWORD *)(v32 + 2) = bswap32(*v70);
        if ((unint64_t)v32 <= 0xFFFFFFFFFFFFFFF9LL)
        {
          v32 += 6;
          goto LABEL_79;
        }

        break;
      default:
        uint64_t v74 = 2294LL;
        uint64_t v44 = "%s:%d Should never have unhandled case!\n";
        goto LABEL_78;
    }

    goto LABEL_141;
  }

  if (v8 == 1)
  {
    if (!v9)
    {
LABEL_66:
      if (!v10)
      {
        uint64_t v35 = (void *)(a2 + 26);
        if ((_WORD)v14)
        {
LABEL_69:
          if ((((_DWORD)a2 + 34) & 1) != 0) {
            goto LABEL_139;
          }
          uint64_t v36 = *(unsigned int *)(a2 + 34);
          unint64_t v37 = v16;
          unsigned int v38 = v17;
          uint64_t v39 = v34;
          uint64_t v40 = operator new[](v36);
          memcpy(v40, *(const void **)(a2 + 26), v36);
          int v34 = v39;
          unsigned __int16 v17 = v38;
          uint64_t v16 = v37;
          *(void *)(a2 + 26) = v40;
          *(void *)(a2 + 117) = v40;
        }

        else
        {
          *uint64_t v35 = 0LL;
        }
      }
    }
  }

  else
  {
    uint64_t v74 = 2302LL;
    uint64_t v44 = "%s:%d Should never reach unhandled case!\n";
LABEL_78:
    int v45 = v16;
    unint64_t v46 = v17;
    uint64_t v47 = v34;
    sub_1000CEAEC(0, 4, v44, "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoLocation.cpp", v74);
    int v34 = v47;
    unsigned __int16 v17 = v46;
    uint64_t v16 = v45;
  }

      memset(v108, 170, 9);
      int v34 = sub_100061274();
      if (!v34 || (v34 & 7) != 0) {
        goto LABEL_262;
      }
      uint64_t result = sub_10008E168(v34, *(void *)(a1 + 8));
      if (!result) {
        goto LABEL_261;
      }
      uint64_t v35 = v6[304];
      if (!v35 || (v35 & 7) != 0 || (((_BYTE)v35 + 100) & 3) != 0) {
        goto LABEL_262;
      }
      uint64_t v36 = result;
      if ((*(_BYTE *)(v35 + 1380) & 1) == 0) {
        goto LABEL_69;
      }
      LOBYTE(v108[0]) = 17;
      if (*v14 > 7) {
        goto LABEL_263;
      }
      if (*v14)
      {
        if (!v12 || *(_BYTE *)(a1 + 1332))
        {
          unint64_t v33 = 0LL;
          if (!v13 || *(_BYTE *)(a1 + 1333)) {
            goto LABEL_98;
          }
          uint64_t v40 = 3;
        }

        else
        {
          uint64_t v40 = 2;
        }

        LOBYTE(v108[0]) = v40;
      }

      else
      {
        if (!v10)
        {
LABEL_69:
          unint64_t v33 = 0LL;
          goto LABEL_98;
        }

        LOBYTE(v108[0]) = 0;
      }

      if ((result & 7) != 0) {
        goto LABEL_262;
      }
      uint64_t v41 = (*(uint64_t (**)(uint64_t, void))(*(void *)result + 16LL))(result, 0LL);
      char v42 = sub_1000ABB10(v36, 0, 4LL, 39, v41, v108, 1u);
      if (!v42) {
        goto LABEL_261;
      }
      uint64_t result = sub_10009703C(a1, v42, 0, 1u);
      unint64_t v33 = result;
      uint64_t v35 = v6[304];
LABEL_98:
      if (!v35) {
        goto LABEL_262;
      }
      if ((v35 & 7) != 0) {
        goto LABEL_262;
      }
      unint64_t v43 = (_BYTE *)(v35 + 1380);
      if (((v35 + 1380) & 3) != 0) {
        goto LABEL_262;
      }
      uint64_t v44 = *v14;
      if ((*v43 & 2) != 0)
      {
        if (v44 > 7) {
          goto LABEL_263;
        }
        if (v44 == v10)
        {
LABEL_140:
          if (!v10) {
            goto LABEL_254;
          }
LABEL_141:
          uint64_t v53 = v6[304];
          if (!v53 || (v53 & 7) != 0 || ((v53 + 1380) & 3) != 0) {
            goto LABEL_262;
          }
          if ((*(_BYTE *)(v53 + 1380) & 4) != 0 && (v107 & 0x104) != 0)
          {
            LOBYTE(v108[0]) = 1;
            *(_DWORD *)((char *)v108 + 1) = bswap32(*(_DWORD *)(a1 + 1304));
            if ((v36 & 7) != 0) {
              goto LABEL_262;
            }
            unsigned int v54 = (*(uint64_t (**)(uint64_t, void))(*(void *)v36 + 16LL))(v36, 0LL);
            uint64_t v55 = sub_1000ABB10(v36, 0, 4LL, 39, v54, v108, 5u);
            if (!v55) {
              goto LABEL_261;
            }
            uint64_t result = sub_10009703C(a1, v55, 0, 1u);
            unint64_t v33 = result;
            uint64_t v104 = ~*(_DWORD *)(a1 + 1320);
            uint64_t v53 = v6[304];
          }

          int v56 = *(_DWORD *)(a1 + 1308);
          if (v56 != v106)
          {
            if (!v53 || (v53 & 7) != 0 || (((_BYTE)v53 + 100) & 3) != 0) {
              goto LABEL_262;
            }
            if ((*(_BYTE *)(v53 + 1380) & 8) != 0)
            {
              LOBYTE(v108[0]) = 4;
              *(_DWORD *)((char *)v108 + 1) = bswap32(v56);
              if ((v36 & 7) != 0) {
                goto LABEL_262;
              }
              BOOL v57 = (*(uint64_t (**)(uint64_t, void))(*(void *)v36 + 16LL))(v36, 0LL);
              uint64_t v58 = sub_1000ABB10(v36, 0, 4LL, 39, v57, v108, 5u);
              if (!v58) {
                goto LABEL_261;
              }
              uint64_t result = sub_10009703C(a1, v58, 0, 1u);
              unint64_t v33 = result;
              uint64_t v53 = v6[304];
            }

            if (!v53 || (v53 & 7) != 0 || ((v53 + 1380) & 3) != 0) {
              goto LABEL_262;
            }
            if ((*(_BYTE *)(v53 + 1380) & 0x10) != 0)
            {
              char v59 = *(_DWORD *)(a1 + 1312);
              if (v59 != v94)
              {
                LOBYTE(v108[0]) = 7;
                *(_DWORD *)((char *)v108 + 1) = bswap32(v59);
                if ((v36 & 7) != 0) {
                  goto LABEL_262;
                }
                unsigned int v60 = (*(uint64_t (**)(uint64_t, void))(*(void *)v36 + 16LL))(v36, 0LL);
                int v61 = sub_1000ABB10(v36, 0, 4LL, 39, v60, v108, 5u);
                if (!v61) {
                  goto LABEL_261;
                }
                uint64_t result = sub_10009703C(a1, v61, 0, 1u);
                unint64_t v33 = result;
                uint64_t v53 = v6[304];
              }
            }
          }

          BOOL v62 = *(_DWORD *)(a1 + 1320);
          if (v62 != -1)
          {
            if (!v53 || (v53 & 7) != 0 || (((_BYTE)v53 + 100) & 3) != 0) {
              goto LABEL_262;
            }
            if ((*(_BYTE *)(v53 + 1380) & 0x20) != 0 && v62 != v104)
            {
              LOBYTE(v108[0]) = 5;
              *(_DWORD *)((char *)v108 + 1) = bswap32(v62);
              if ((v36 & 7) != 0) {
                goto LABEL_262;
              }
              int v63 = (*(uint64_t (**)(uint64_t, void))(*(void *)v36 + 16LL))(v36, 0LL);
              uint64_t v64 = sub_1000ABB10(v36, 0, 4LL, 39, v63, v108, 5u);
              if (!v64) {
                goto LABEL_261;
              }
              uint64_t result = sub_10009703C(a1, v64, 0, 1u);
              unint64_t v33 = result;
              uint64_t v53 = v6[304];
            }

            if (!v53 || (v53 & 7) != 0 || ((v53 + 1380) & 3) != 0) {
              goto LABEL_262;
            }
            if ((*(_BYTE *)(v53 + 1380) & 0x40) != 0)
            {
              uint64_t v65 = *(_DWORD *)(a1 + 1324);
              if (v65 != v96)
              {
                LOBYTE(v108[0]) = 8;
                *(_DWORD *)((char *)v108 + 1) = bswap32(v65);
                if ((v36 & 7) != 0) {
                  goto LABEL_262;
                }
                __int16 v66 = (*(uint64_t (**)(uint64_t, void))(*(void *)v36 + 16LL))(v36, 0LL);
                __int16 v67 = sub_1000ABB10(v36, 0, 4LL, 39, v66, v108, 5u);
                if (!v67) {
                  goto LABEL_261;
                }
                uint64_t result = sub_10009703C(a1, v67, 0, 1u);
                unint64_t v33 = result;
                uint64_t v53 = v6[304];
              }
            }

            if (!v53 || (v53 & 7) != 0 || ((v53 + 1380) & 3) != 0) {
              goto LABEL_262;
            }
            if ((*(_BYTE *)(v53 + 1380) & 0x80) != 0)
            {
              uint64_t v68 = *(_DWORD *)(a1 + 1328);
              if (v68 != v95)
              {
                LOBYTE(v108[0]) = 9;
                *(_DWORD *)((char *)v108 + 1) = bswap32(v68);
                if ((v36 & 7) != 0) {
                  goto LABEL_262;
                }
                uint64_t v69 = (*(uint64_t (**)(uint64_t, void))(*(void *)v36 + 16LL))(v36, 0LL);
                size_t v70 = sub_1000ABB10(v36, 0, 4LL, 39, v69, v108, 5u);
                if (!v70) {
                  goto LABEL_261;
                }
                uint64_t result = sub_10009703C(a1, v70, 0, 1u);
                unint64_t v33 = result;
                uint64_t v53 = v6[304];
              }
            }
          }

          if (!v53 || (v53 & 7) != 0 || (((_BYTE)v53 + 100) & 3) != 0) {
            goto LABEL_262;
          }
          if ((*(_BYTE *)(v53 + 1381) & 1) != 0)
          {
            uint64_t v71 = *(void *)(a1 + 1288);
            if (v71 != v103)
            {
              LOBYTE(v108[0]) = 10;
              *(void *)((char *)v108 + 1) = bswap64(v71);
              if ((v36 & 7) != 0) {
                goto LABEL_262;
              }
              int v72 = (*(uint64_t (**)(uint64_t, void))(*(void *)v36 + 16LL))(v36, 0LL);
              unsigned int v73 = sub_1000ABB10(v36, 0, 4LL, 39, v72, v108, 9u);
              if (!v73) {
                goto LABEL_261;
              }
              uint64_t result = sub_10009703C(a1, v73, 0, 1u);
              unint64_t v33 = result;
              uint64_t v53 = v6[304];
            }
          }

          if (!v53 || (v53 & 7) != 0 || ((v53 + 1380) & 3) != 0) {
            goto LABEL_262;
          }
          if ((*(_BYTE *)(v53 + 1381) & 2) != 0)
          {
            uint64_t v74 = *(_DWORD *)v11;
            if (*(_DWORD *)v11 > 3u) {
              goto LABEL_263;
            }
            if (v74 != v102)
            {
              LOBYTE(v108[0]) = 11;
              BYTE1(v108[0]) = v74;
              if ((v36 & 7) != 0) {
                goto LABEL_262;
              }
              uint64_t v75 = (*(uint64_t (**)(uint64_t, void))(*(void *)v36 + 16LL))(v36, 0LL);
              __int16 v76 = sub_1000ABB10(v36, 0, 4LL, 39, v75, v108, 2u);
              if (!v76) {
                goto LABEL_261;
              }
              uint64_t result = sub_10009703C(a1, v76, 0, 1u);
              unint64_t v33 = result;
              uint64_t v53 = v6[304];
            }
          }

          if (!v53 || (v53 & 7) != 0 || ((v53 + 1380) & 3) != 0) {
            goto LABEL_262;
          }
          if ((*(_BYTE *)(v53 + 1381) & 4) != 0)
          {
            if (!v101 && *(_BYTE *)(a1 + 1334))
            {
              LOBYTE(v108[0]) = 12;
              if ((v36 & 7) != 0) {
                goto LABEL_262;
              }
              uint64_t v77 = (*(uint64_t (**)(uint64_t, void))(*(void *)v36 + 16LL))(v36, 0LL);
              int v78 = sub_1000ABB10(v36, 0, 4LL, 39, v77, v108, 1u);
              if (!v78) {
                goto LABEL_261;
              }
              uint64_t result = sub_10009703C(a1, v78, 0, 1u);
              unint64_t v33 = result;
              uint64_t v53 = v6[304];
            }
          }

          if (!v53 || (v53 & 7) != 0 || ((v53 + 1380) & 3) != 0) {
            goto LABEL_262;
          }
          if ((*(_BYTE *)(v53 + 1381) & 8) != 0)
          {
            int v79 = *(_DWORD *)(a1 + 1336);
            if ((v107 & 0x104) != 0 || v79 != v97)
            {
              LOBYTE(v108[0]) = 13;
              *(_DWORD *)((char *)v108 + 1) = bswap32(v79);
              if ((v36 & 7) != 0) {
                goto LABEL_262;
              }
              unsigned int v80 = (*(uint64_t (**)(uint64_t, void))(*(void *)v36 + 16LL))(v36, 0LL);
              uint64_t v81 = sub_1000ABB10(v36, 0, 4LL, 39, v80, v108, 5u);
              if (!v81) {
                goto LABEL_261;
              }
              uint64_t result = sub_10009703C(a1, v81, 0, 1u);
              unint64_t v33 = result;
              uint64_t v53 = v6[304];
            }
          }

          if (!v53 || (v53 & 7) != 0 || ((v53 + 1380) & 3) != 0) {
            goto LABEL_262;
          }
          if ((*(_BYTE *)(v53 + 1381) & 0x10) != 0)
          {
            BOOL v82 = *(_DWORD *)(a1 + 1340);
            if (v82 != v100 || (v107 & 0x1000) != 0)
            {
              LOBYTE(v108[0]) = 14;
              *(_DWORD *)((char *)v108 + 1) = bswap32(v82);
              if ((v36 & 7) != 0) {
                goto LABEL_262;
              }
              unsigned int v83 = (*(uint64_t (**)(uint64_t, void))(*(void *)v36 + 16LL))(v36, 0LL);
              uint64_t v84 = sub_1000ABB10(v36, 0, 4LL, 39, v83, v108, 5u);
              if (!v84) {
                goto LABEL_261;
              }
              uint64_t result = sub_10009703C(a1, v84, 0, 1u);
              unint64_t v33 = result;
              uint64_t v53 = v6[304];
            }
          }

          if (!v53 || (v53 & 7) != 0 || ((v53 + 1380) & 3) != 0) {
            goto LABEL_262;
          }
          if ((*(_BYTE *)(v53 + 1381) & 0x20) == 0 || (uint64_t v85 = *(unsigned __int8 *)(a1 + 1348), v85 == v99))
          {
LABEL_245:
            if (!v53) {
              goto LABEL_262;
            }
            if ((v53 & 7) != 0) {
              goto LABEL_262;
            }
            uint64_t v88 = v53 + 1380;
            if ((v88 & 3) != 0) {
              goto LABEL_262;
            }
            if ((*(_BYTE *)(v88 + 1) & 0x40) == 0) {
              goto LABEL_254;
            }
            uint64_t v89 = *(unsigned __int8 *)(a1 + 1349);
            if (v89 == v98) {
              goto LABEL_254;
            }
            LOBYTE(v108[0]) = 16;
            if (&vars0 != (uint64_t *)103)
            {
              BYTE1(v108[0]) = v89;
              if ((v36 & 7) == 0)
              {
                uint64_t v90 = (*(uint64_t (**)(uint64_t, void))(*(void *)v36 + 16LL))(v36, 0LL);
                unsigned int v91 = sub_1000ABB10(v36, 0, 4LL, 39, v90, v108, 2u);
                if (v91)
                {
                  unint64_t v33 = sub_10009703C(a1, v91, 0, 1u);
                  goto LABEL_254;
                }

                goto LABEL_261;
              }

        __break(0x5516u);
        goto LABEL_63;
      }

    __break(0x5516u);
  }

  (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
  (*(void (**)(uint64_t))(*(void *)v8 + 8LL))(v8);
  if (sub_1000CE6C4(v6))
  {
    syslog(4, "data->CompleteSignedFile() failed\n");
    int v8 = 0LL;
    goto LABEL_20;
  }

  (*(void (**)(uint64_t))(*(void *)v6 + 8LL))(v6);
  else {
    __int16 v19 = *(const char **)a2;
  }
  if (unlink(v19))
  {
    int v20 = __error();
    if (v20 && (v20 & 3) == 0)
    {
      strerror(*v20);
      syslog(4, "Unlinking %s failed: %s\n");
      goto LABEL_24;
    }

    goto LABEL_62;
  }

  if ((v25.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    uint64_t v21 = &v25;
  }
  else {
    uint64_t v21 = (std::string *)v25.__r_.__value_.__r.__words[0];
  }
  else {
    uint64_t v22 = *(const char **)a2;
  }
  if (rename((const char *)v21, v22))
  {
    int v23 = __error();
    if (v23 && (v23 & 3) == 0)
    {
      strerror(*v23);
      syslog(4, "Renaming %s to %s failed: %s\n");
      goto LABEL_24;
    }

    goto LABEL_62;
  }

  unsigned __int16 v17 = 0LL;
LABEL_38:
  return v17;
}

void sub_10007CD88(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_30;
  }
  uint64_t v4 = *(unsigned __int16 **)(a2 + 24);
  unsigned int v5 = *(unsigned __int16 *)(a2 + 128);
  unsigned __int16 v21 = 0;
  if (v5 < 3)
  {
    LODWORD(v13) = 0;
    unsigned int v15 = 0;
    int v16 = 4;
  }

  else
  {
    if (!v4) {
      goto LABEL_30;
    }
    unsigned __int16 v21 = bswap32(*v4) >> 16;
    uint64_t v20 = 0xAAAAAAAAAAAAAAAALL;
    uint64_t v6 = a1 + 1200;
    if (((a1 + 1200) & 7) != 0) {
      goto LABEL_30;
    }
    uint64_t v7 = sub_100013C90(v6, &v21);
    uint64_t v20 = v7;
    if (((a1 + 1208) & 7) != 0) {
      goto LABEL_30;
    }
    if (a1 + 1208 == v7)
    {
      unsigned int v15 = 0;
      LODWORD(v13) = 0;
      int v16 = 1;
    }

    else
    {
      int v8 = sub_100003154(&v20);
      if (!v8) {
        goto LABEL_30;
      }
      uint64_t v9 = v8[1];
      uint64_t v10 = sub_1000472A8();
      if (!v10) {
        goto LABEL_30;
      }
      uint64_t v11 = v10;
      if ((v10 & 7) != 0) {
        goto LABEL_30;
      }
      uint64_t v12 = sub_1000C0034(*(void *)(a1 + 8));
      if ((unint64_t)v4 >= 0xFFFFFFFFFFFFFFFELL)
      {
LABEL_32:
        __break(0x5513u);
        return;
      }

      uint64_t v13 = v5 - 2;
      unsigned int v14 = (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, unsigned __int16 *))(*(void *)v11 + 120LL))( v11,  v12,  v21,  v13,  v4 + 1);
      unsigned int v15 = v14;
      if (v14 == (_DWORD)v13)
      {
        int v16 = 0;
      }

      else
      {
        sub_1000CEAEC( 0,  4,  "%s:%d ERROR: acceptedBytes=%d, sentBytes=%d\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp",  14086,  v14,  v13);
        int v16 = 23;
      }

      if (!v9 || (v9 & 7) != 0) {
        goto LABEL_30;
      }
      *(_DWORD *)(v9 + 36) = v13;
      *(_DWORD *)(v9 + 40) = v15;
    }
  }

  uint64_t v17 = *(void *)(a1 + 8);
  if (!v17 || (v17 & 7) != 0)
  {
LABEL_30:
    __break(0x5516u);
    goto LABEL_31;
  }

  uint64_t v18 = sub_10001864C(v17);
  if (v13 < v15)
  {
LABEL_31:
    __break(0x5515u);
    goto LABEL_32;
  }

  uint64_t v19 = sub_1000ABD94(v18, 0, 0LL, 2, *(_DWORD *)(a2 + 68), v16, 0x42u, 0, v21, v13 - v15);
  if (v19) {
    sub_1000AB4C4(*(void *)(a1 + 8), v19, 0, 1u);
  }
}

uint64_t sub_10007CF80(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_10;
  }
  uint64_t v2 = (void *)result;
  if ((result & 7) != 0) {
    goto LABEL_10;
  }
  uint64_t result = sub_10007D014(result);
  if ((a2 & ~result) != 0) {
    return 22LL;
  }
  uint64_t v4 = v2[1];
  if (!v4 || (v4 & 7) != 0)
  {
LABEL_10:
    __break(0x5516u);
  }

  else
  {
    *(void *)(v4 + 1992) = a2 | 0x84;
    return 0LL;
  }

  return result;
}

uint64_t sub_10007D014(uint64_t result)
{
  if (!result || (result & 7) != 0 || (uint64_t result = sub_1000438B8()) == 0 || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    else {
      uint64_t v1 = 1769124LL;
    }
    unsigned __int8 v4 = -1;
    unsigned __int8 v3 = -1;
    sub_100061274();
    sub_1000BBBAC(7LL, &v4, (char *)&v3);
    if (v3 == 255 || v4 == 255) {
      return v1;
    }
    else {
      return v1 | 8;
    }
  }

  return result;
}

uint64_t sub_10007D0AC(uint64_t result, uint64_t a2, unsigned int a3)
{
  if (!result) {
    goto LABEL_27;
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_27;
  }
  int v6 = sub_1000443F4();
  unsigned __int16 v7 = a3;
  if (v6 == 1)
  {
LABEL_26:
    uint64_t v18 = v7;
    syslog(4, "MapAvailableCurrent: %d -> %d", a3, v7);
    return v18;
  }

  uint64_t v8 = sub_100043F9C();
  uint64_t result = sub_1000B6CE0();
  if (!result || (result & 7) != 0) {
    goto LABEL_27;
  }
  uint64_t result = sub_1000561D8(result, a2);
  if (v8 >= 8)
  {
LABEL_28:
    __break(0x550Au);
    goto LABEL_29;
  }

  uint64_t v9 = result;
  BOOL v10 = a3 < 0x5DD || (_DWORD)v8 == 3;
  int v11 = v10 ? 1 : result;
  uint64_t v12 = v11 ? a3 : 1500LL;
  uint64_t result = sub_1000451B0();
  unsigned __int16 v19 = v12;
  if (!result || (uint64_t v13 = result, (result & 7) != 0))
  {
LABEL_27:
    __break(0x5516u);
    goto LABEL_28;
  }

  unsigned int v14 = (*(uint64_t (**)(uint64_t))(*(void *)result + 232LL))(result);
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v13 + 240LL))(v13);
  uint64_t v15 = 100LL * v14;
  if ((v15 & 0xFFFFFFFF00000000LL) != 0)
  {
LABEL_29:
    __break(0x550Cu);
    goto LABEL_30;
  }

  if (!(_DWORD)result)
  {
LABEL_30:
    __break(0x5503u);
    goto LABEL_31;
  }

  unsigned int v16 = v15 / result;
  if (v15 / result <= 0xFF)
  {
    if (a2)
    {
      if ((a2 & 7) == 0)
      {
        uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 232LL))(a2);
        if (((v3 + 1592) & 7) == 0)
        {
          sub_100044444(result, v3 + 1592, v3 + 1760, v3 + 1696, v9, v8, v12, v16, &v19);
          unsigned __int16 v7 = v19;
          if (!v17) {
            unsigned __int16 v7 = v12;
          }
          goto LABEL_26;
        }
      }
    }

    goto LABEL_27;
  }

uint64_t sub_10007D23C(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_16;
  }
  if (!a2) {
    return 4LL;
  }
  if ((a2 & 7) != 0) {
    goto LABEL_16;
  }
  unsigned int v2 = *(unsigned __int16 *)(a2 + 128);
  int v3 = v2 - 2;
  if (v2 < 2) {
    return 4LL;
  }
  unsigned __int8 v4 = *(unsigned __int8 **)(a2 + 24);
  if (!v4)
  {
LABEL_16:
    __break(0x5516u);
  }

  else if (v4 != (unsigned __int8 *)-1LL)
  {
    int v5 = *v4;
    if (v4[1] == 1)
    {
      goto LABEL_17;
    }

    if (!v4[1])
    {
      goto LABEL_17;
    }

    sub_1000CEAEC( 0,  4,  "%s:%d Unknown VPortType(%d) Id=%d\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp",  18604,  v4[1],  v5);
    return 4LL;
  }

uint64_t sub_10007D300(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_19;
  }
  if (!a2) {
    return 4LL;
  }
  if ((a2 & 7) != 0)
  {
LABEL_19:
    __break(0x5516u);
    goto LABEL_20;
  }

  int v2 = *(unsigned __int16 *)(a2 + 128);
  uint64_t v3 = 4LL;
  if (!*(_WORD *)(a2 + 128)) {
    return v3;
  }
  unsigned __int8 v4 = *(unsigned __int8 **)(a2 + 24);
  if (!v4) {
    return v3;
  }
  uint64_t result = (uint64_t)sub_1000864F8((uint64_t *)result, *v4);
  if (!result) {
    return 4LL;
  }
  int v5 = (uint64_t *)(result + 16);
  if ((result & 7) != 0 || ((result + 16) & 7) != 0) {
    goto LABEL_19;
  }
  uint64_t result = *v5;
  if (!*v5) {
    return 4LL;
  }
  if ((result & 7) != 0) {
    goto LABEL_19;
  }
  if (v4 != (unsigned __int8 *)-1LL)
  {
    (*(void (**)(uint64_t, unsigned __int8 *, void))(*(void *)result + 352LL))( result,  v4 + 1,  (v2 - 1));
    return 0LL;
  }

void sub_10007D3AC(uint64_t *a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a2 + 24);
  unint64_t v3 = *(unsigned __int16 *)(a2 + 128);
  memset(v23, 170, sizeof(v23));
  sub_100009E64(v23);
  if (v3 <= 1) {
    goto LABEL_36;
  }
  if (!v2)
  {
LABEL_44:
    __break(0x5516u);
    goto LABEL_45;
  }

  if (v2 == -1LL) {
    goto LABEL_45;
  }
  unsigned int v4 = *(unsigned __int8 *)(v2 + 1);
  if (v4 >= 4) {
    goto LABEL_47;
  }
  if (v4 - 1 < 2)
  {
    if (v3 >= 3)
    {
      unsigned int v20 = *(unsigned __int8 *)v2;
      unsigned int v21 = *(unsigned __int8 *)(v2 + 1);
      if (v2 > 0xFFFFFFFFFFFFFFFDLL) {
        goto LABEL_45;
      }
      if (v3 >= 4)
      {
        unsigned int v5 = *(unsigned __int8 *)(v2 + 2);
        if (*(_BYTE *)(v2 + 2))
        {
          unsigned int v6 = 0;
          uint64_t v7 = (uint64_t)(a1 + 261);
          unsigned __int8 v8 = 3;
          while (1)
          {
            unsigned __int8 v24 = -86;
            unsigned __int8 v9 = v8 + 1;
            if (((v8 + 1) & 0x100) != 0) {
              goto LABEL_46;
            }
            if (~v2 < v8) {
              goto LABEL_45;
            }
            unsigned __int8 v24 = *(_BYTE *)(v2 + v8);
            if (a1 + 262 != (uint64_t *)sub_100088300(v7, &v24))
            {
              sub_1000824BC(v7, &v24);
              uint64_t v11 = *v10;
              sub_1000824BC((uint64_t)v23, &v24);
              *uint64_t v12 = v11;
              ++v6;
            }

            if (v3 > v9)
            {
              unsigned __int8 v8 = v9;
              if (v6 < v5) {
                continue;
              }
            }

            unint64_t v13 = v9;
            goto LABEL_34;
          }
        }
      }

      if (v3 >= 4)
      {
        unint64_t v13 = 3LL;
LABEL_34:
        unint64_t v15 = (v3 - 1);
        if (v15 <= ~v2)
        {
          if (*(_BYTE *)(v2 + v15)) {
            goto LABEL_36;
          }
          if (v13 <= ~v2)
          {
            unsigned int v16 = (const char *)(v2 + v13);
            if (v21 == 2)
            {
              uint64_t v17 = sub_100015744();
              if (v17)
              {
                uint64_t v18 = v17;
                if ((v17 & 7) == 0)
                {
                  uint64_t v19 = sub_1000C0034(a1[1]);
                  sub_1000174B4(v18, v16, v19);
                  goto LABEL_36;
                }
              }

              goto LABEL_44;
            }

            goto LABEL_28;
          }
        }

uint64_t sub_10007D650(unint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_321;
  }
  unsigned int v108 = 0;
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5 || (v5 & 7) != 0) {
    goto LABEL_321;
  }
  uint64_t result = sub_1000579D4(v5);
  uint64_t v11 = result;
  if (a2 > 127)
  {
    if (a2 > 1023)
    {
      if (a2 == 1024)
      {
        if (a3)
        {
          sub_10007F1B0(a1, a4, a3);
          return v27;
        }

        return v108;
      }

      if (a2 != 2048 && a2 != 0x4000) {
        return v108;
      }
      if (result && (result & 7) == 0)
      {
        sub_1000AF6E0((unsigned __int8 *)result, a2, a3);
        return v108;
      }

      goto LABEL_321;
    }

    if (a2 == 128)
    {
      sub_10007ED28(128, a3);
      if (a4)
      {
        if ((a4 & 7) != 0) {
          goto LABEL_321;
        }
      }

      pthread_mutex_lock((pthread_mutex_t *)(a1 + 1280));
      if ((int)a3 > 15 || (_DWORD)a3 == -1)
      {
        if ((_DWORD)a3 == 100)
        {
          if ((((_BYTE)a1 - 8) & 7) != 0) {
            goto LABEL_321;
          }
          *(_DWORD *)(a1 + 1528) = 0;
          if ((((_BYTE)a1 - 4) & 3) != 0) {
            goto LABEL_321;
          }
          *(_BYTE *)(a1 + 1532) = 0;
          if (((a1 + 1588) & 3) != 0) {
            goto LABEL_321;
          }
          *(_DWORD *)(a1 + 1588) = 0;
        }

        else
        {
          sub_1000CEAEC( 0,  4,  "%s:%d CIapLingoGeneral::NotifyEvent invalid accessory resistor ID: %d !\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp",  8617,  a3);
        }
      }

      else
      {
        LOWORD(v107) = 112;
        *(void *)&__int128 v109 = 0LL;
        else {
          __int16 v39 = 0;
        }
        sub_100062E78(a1, -1, &v107, &v109, 0xFFFFu);
        if ((v39 & 0x18CB) != 0)
        {
          if ((v39 & 0xC1) == 0) {
            goto LABEL_117;
          }
          if (*(_BYTE *)(a1 + 2368)) {
            goto LABEL_174;
          }
          uint64_t v41 = *(void *)(a1 + 8);
          if (!v41 || (v41 & 7) != 0) {
            goto LABEL_321;
          }
          if (!sub_100057A20(v41)) {
LABEL_174:
          }
            int v42 = 1;
          else {
LABEL_117:
          }
            int v42 = 0;
          sub_1000710B8(a1, v40, v42);
        }

        if (((a1 + 1528) & 7) != 0) {
          goto LABEL_321;
        }
        unsigned int v63 = *(_DWORD *)(a1 + 1528);
        if (v63 > 7) {
          goto LABEL_322;
        }
        if (v63 <= 1)
        {
          *(_DWORD *)(a1 + 1528) = 1;
          uint64_t v64 = *(void *)(a1 + 8);
          if (!v64 || (v64 & 7) != 0) {
            goto LABEL_321;
          }
          int v65 = sub_100057B7C(v64);
          unsigned int v108 = sub_100062D14((void *)a1, -1, 112, v65, 3000);
        }

        if (*(_BYTE *)(a1 + 1533))
        {
          LOWORD(v107) = 115;
          unsigned int v108 = sub_100062E78(a1, -1, &v107, 0LL, 0xFFFFu);
          if (v108) {
            sub_1000CEAEC( 0,  4,  "%s:%d ClrCmdTimeout failed!\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp",  8631);
          }
          __int16 v66 = (_DWORD *)(a1 + 1536);
          if (((a1 + 1536) & 7) != 0) {
            goto LABEL_321;
          }
          if (*v66 > 0x1Fu) {
            goto LABEL_322;
          }
          if (*v66 != 25)
          {
            if ((((_BYTE)a1 + 4) & 3) != 0) {
              goto LABEL_321;
            }
            *(_DWORD *)(a1 + 1540) = a3;
            sub_10007158C(a1, 0, 0LL, (uint64_t)v66, 48);
          }

          if ((a3 & 0x80000000) == 0 && ((1 << a3) & 0xE400) != 0)
          {
            if (!*(_BYTE *)(a1 + 2212))
            {
              if ((((_BYTE)a1 + 8) & 7) != 0) {
                goto LABEL_321;
              }
              if ((((_BYTE)a1 + 16) & 7) != 0) {
                goto LABEL_321;
              }
              int v67 = *(_DWORD *)(a1 + 1552);
              LODWORD(v109) = 0x7FFFFFFF;
              uint64_t v68 = (uint64_t *)(a1 + 1408);
              if (((a1 + 1408) & 7) != 0) {
                goto LABEL_321;
              }
              uint64_t v69 = *v68;
              if (*v68)
              {
                if ((v69 & 3) != 0) {
                  goto LABEL_321;
                }
                sub_100056060(v69, (unsigned int *)&v109);
              }

              uint64_t v70 = sub_100061274();
              if (!v70) {
                goto LABEL_321;
              }
              if ((v70 & 7) != 0) {
                goto LABEL_321;
              }
              int v71 = sub_10008C710(v70, a4);
              unsigned int v73 = (int *)(a1 + 1584);
              if (((a1 + 1584) & 7) != 0) {
                goto LABEL_321;
              }
              int v74 = *v73;
              if (v74)
              {
                if (v74 == 2) {
                  goto LABEL_211;
                }
                if (sub_100072FE8(v67, v71))
                {
                  if ((v109 & 0x80000000) != 0) {
                    goto LABEL_322;
                  }
                  if ((_DWORD)v109) {
LABEL_211:
                  }
                    sub_1000710B8(a1, v72, v74 == 1);
                }
              }
            }
          }
        }

        sub_10006EBD4(a1, a4);
      }

      pthread_mutex_unlock((pthread_mutex_t *)(a1 + 1280));
      return v108;
    }

    if (a2 != 256) {
      return v108;
    }
    sub_10007ED28(256, a3);
    unsigned int v12 = *(_DWORD *)(a1 + 1524);
    if (v12 <= 3)
    {
      *(_DWORD *)(a1 + 1524) = a3;
      if (a3 <= 3)
      {
        if (a3 >= 2)
        {
          __break(0x5518u);
          goto LABEL_321;
        }

        uint64_t v13 = sub_1000451B0();
        if (!v13 || (v13 & 7) != 0) {
          goto LABEL_321;
        }
        if (*(_DWORD *)(a1 + 1524) <= 3u)
        {
          (*(void (**)(uint64_t, uint64_t))(*(void *)v13 + 264LL))(v13, a4);
          unsigned int v14 = *(_DWORD *)(a1 + 1524);
          if (v14 <= 3)
          {
            if (v14 == v12) {
              return v108;
            }
            if (((a1 + 1528) & 7) == 0)
            {
              unsigned int v15 = *(_DWORD *)(a1 + 1528);
              if (v15 > 7) {
                goto LABEL_322;
              }
              if (v15 < 4) {
                return v108;
              }
              uint64_t v16 = *(void *)(a1 + 8);
              if (v16)
              {
                if ((v16 & 7) == 0)
                {
                  int v17 = sub_100057B7C(v16);
                  unsigned int v18 = *(_DWORD *)(a1 + 1524);
                  if (v18 > 3) {
                    goto LABEL_322;
                  }
                  if (v18 == 1)
                  {
                    if (!v11 || (v11 & 7) != 0) {
                      goto LABEL_321;
                    }
                    if (sub_100076360(v11))
                    {
                      uint64_t v75 = sub_10004783C();
                      if (!v75 || (v75 & 7) != 0) {
                        goto LABEL_321;
                      }
                      (*(void (**)(uint64_t))(*(void *)v75 + 456LL))(v75);
                    }

                    uint64_t v76 = sub_1000C2140();
                    if (v76 && (v76 & 7) == 0)
                    {
                      if ((*(unsigned int (**)(uint64_t))(*(void *)v76 + 120LL))(v76))
                      {
                        uint64_t v77 = sub_1000C2140();
                        if (!v77 || (v77 & 7) != 0) {
                          goto LABEL_321;
                        }
                        if (((*(uint64_t (**)(uint64_t))(*(void *)v77 + 176LL))(v77) & 1) != 0)
                        {
                          *(void *)&__int128 v78 = 0xAAAAAAAAAAAAAAAALL;
                          *((void *)&v78 + 1) = 0xAAAAAAAAAAAAAAAALL;
                          __int128 v113 = v78;
                          __int128 v114 = v78;
                          __int128 v111 = v78;
                          __int128 v112 = v78;
                          __int128 v109 = v78;
                          __int128 v110 = v78;
                          uint64_t v79 = sub_1000C2140();
                          if (!v79 || (v79 & 7) != 0) {
                            goto LABEL_321;
                          }
                          *(void *)&__int128 v109 = (*(uint64_t (**)(uint64_t))(*(void *)v79 + 104LL))(v79);
                          WORD5(v109) = 0;
                          *(void *)&__int128 v110 = 0x1200000000LL;
                          HIDWORD(v110) = 0;
                          LOBYTE(v111) = 1;
                          sub_10007EE34((uint64_t)&v109);
                        }
                      }

                      if (v17 == 14) {
                        goto LABEL_234;
                      }
                      if (*(_BYTE *)(a1 + 2203)) {
LABEL_234:
                      }
                        sub_10007F190(v11, 1);
                      return v108;
                    }
                  }

                  else
                  {
                    if (v18) {
                      sub_1000D2820(v18);
                    }
                    uint64_t v19 = sub_10004783C();
                    if (!v19) {
                      goto LABEL_321;
                    }
                    if ((v19 & 7) != 0) {
                      goto LABEL_321;
                    }
                    (*(void (**)(uint64_t))(*(void *)v19 + 464LL))(v19);
                    uint64_t v20 = sub_1000C2140();
                    if (!v20 || (v20 & 7) != 0) {
                      goto LABEL_321;
                    }
                    if ((*(unsigned int (**)(uint64_t))(*(void *)v20 + 120LL))(v20))
                    {
                      uint64_t v21 = sub_1000C2140();
                      if (!v21 || (v21 & 7) != 0) {
                        goto LABEL_321;
                      }
                      if (((*(uint64_t (**)(uint64_t))(*(void *)v21 + 176LL))(v21) & 1) != 0)
                      {
                        *(void *)&__int128 v22 = 0xAAAAAAAAAAAAAAAALL;
                        *((void *)&v22 + 1) = 0xAAAAAAAAAAAAAAAALL;
                        __int128 v113 = v22;
                        __int128 v114 = v22;
                        __int128 v111 = v22;
                        __int128 v112 = v22;
                        __int128 v109 = v22;
                        __int128 v110 = v22;
                        uint64_t v23 = sub_1000C2140();
                        if (!v23 || (v23 & 7) != 0) {
                          goto LABEL_321;
                        }
                        *(void *)&__int128 v109 = (*(uint64_t (**)(uint64_t))(*(void *)v23 + 104LL))(v23);
                        WORD5(v109) = 0;
                        *(void *)&__int128 v110 = 0x1200000000LL;
                        HIDWORD(v110) = 0;
                        LOBYTE(v111) = 0;
                        sub_10007EE34((uint64_t)&v109);
                      }
                    }

                    if (v17 != 14)
                    {
                      if (!*(_BYTE *)(a1 + 2203)) {
                        return v108;
                      }
                    }

                    uint64_t v24 = *(void *)(a1 + 8);
                    if (v24)
                    {
                      if ((v24 & 7) == 0)
                      {
                        uint64_t v25 = sub_1000569D8(v24);
                        if (v11)
                        {
                          if ((v11 & 7) == 0)
                          {
                            if (a4) {
                              uint64_t v26 = a4;
                            }
                            else {
                              uint64_t v26 = v25;
                            }
                            sub_10007EDF4(v11, v26, 0);
                            return v108;
                          }
                        }
                      }
                    }
                  }
                }
              }
            }

LABEL_321:
            __break(0x5516u);
          }
        }
      }
    }

LABEL_322:
    __break(0x550Au);
  }

  if (a2 <= 7)
  {
    if (a2 != 1)
    {
      if (a2 != 4) {
        return v108;
      }
      sub_10007ED28(4, a3);
      if (a4 && (a4 & 7) == 0)
      {
        if ((*(unsigned int (**)(uint64_t))(*(void *)a4 + 216LL))(a4) && !sub_1000C8320(a4))
        {
          LOWORD(v109) = 121;
          sub_100062E78(a1, -1, &v109, 0LL, 0xFFFFu);
          sub_100062D14((void *)a1, -1, v109, 0LL, 3000);
        }

        return v108;
      }

      goto LABEL_321;
    }

    int v106 = -1;
    int v107 = -1;
    uint64_t v28 = sub_100061274();
    if (!v28 || (v28 & 7) != 0) {
      goto LABEL_321;
    }
    sub_1000BA3A8(v28, &v107, &v106);
    if (v106 == v107) {
      return v108;
    }
    uint64_t v29 = *(void *)(a1 + 8);
    if (!v29 || (v29 & 7) != 0) {
      goto LABEL_321;
    }
    uint64_t v30 = sub_10001864C(v29);
    if (!v30)
    {
      uint64_t v31 = sub_100061274();
      if (!v31 || (v31 & 7) != 0) {
        goto LABEL_321;
      }
      uint64_t v30 = sub_10008E880(v31, 0);
    }

    uint64_t v32 = sub_100061274();
    if (!v32 || (v32 & 7) != 0) {
      goto LABEL_321;
    }
    int v33 = sub_10008D184(v32, v30);
    if (v33 != 56 && v33 != 19) {
      goto LABEL_299;
    }
    uint64_t v34 = *(void *)(a1 + 8);
    if (!v34 || (v34 & 7) != 0) {
      goto LABEL_321;
    }
    if (sub_100057CEC(v34))
    {
LABEL_299:
      int v98 = v107;
      if (v106 == 2)
      {
        if (v107 == 4)
        {
          uint64_t v99 = sub_1000B6CE0();
          if (!v99 || (v99 & 7) != 0) {
            goto LABEL_321;
          }
          sub_10008E0CC(v99, a4, 0);
          int v98 = v107;
        }
      }

      uint64_t v100 = sub_100061274();
      if (v100)
      {
        if ((v100 & 7) == 0)
        {
          int v101 = sub_10008C710(v100, a4);
          uint64_t v102 = sub_100061274();
          if (v102)
          {
            if ((v102 & 7) == 0)
            {
              uint64_t v103 = sub_100054F0C(v102, a4);
              *(_BYTE *)(a1 + 2200) = 0;
              *(_BYTE *)(a1 + 2202) = 0;
              sub_1000870E8(0LL, a4, 0LL);
              sub_10007E6B4(a1, a4, 9u, v101);
              if (!v103) {
                return v108;
              }
              uint64_t v104 = sub_100061274();
              if (v104 && (v104 & 7) == 0)
              {
                int v105 = sub_10008C710(v104, v103);
                sub_10007EC3C(a1, *(void *)(a1 + 8), 9u, v105);
                return v108;
              }
            }
          }
        }
      }

      goto LABEL_321;
    }

    if (!v30 || (v30 & 7) != 0) {
      goto LABEL_321;
    }
    if (((*(uint64_t (**)(uint64_t))(*(void *)v30 + 280LL))(v30) & 1) == 0)
    {
      uint64_t v35 = sub_100061274();
      if (!v35 || (v35 & 7) != 0) {
        goto LABEL_321;
      }
      int v36 = sub_10008D0AC(v35, v30);
      char v37 = v107;
      unsigned int v38 = v107 + 8;
      if (v36 == 70)
      {
        if (v38 > 0xF) {
          goto LABEL_322;
        }
        if (v107 == 3) {
          goto LABEL_270;
        }
      }

      else if (v38 > 0xF)
      {
        goto LABEL_322;
      }

      if (v107 == 2)
      {
        sub_10006EF28(a1, 1, 1);
      }

      else
      {
        pthread_mutex_lock((pthread_mutex_t *)(a1 + 2256));
        *(void *)&__int128 v109 = 0xAAAAAAAAAAAAAAAALL;
        if (((a1 + 2232) & 7) != 0 || ((a1 + 2240) & 7) != 0) {
          goto LABEL_321;
        }
        uint64_t v80 = *(void *)(a1 + 2240);
        *(void *)&__int128 v109 = v80;
        while (v80 != a1 + 2232)
        {
          uint64_t v81 = *sub_10000D014((uint64_t *)&v109);
          uint64_t v82 = sub_100061274();
          if (!v82 || (v82 & 7) != 0) {
            goto LABEL_321;
          }
          BOOL v83 = v81 && (v81 & 7) == 0;
          uint64_t v84 = (uint64_t *)(v81 + 16);
          if (!v83 || ((v81 + 16) & 7) != 0) {
            goto LABEL_321;
          }
          if ((*v84 & 7) != 0) {
            goto LABEL_321;
          }
          uint64_t v86 = sub_10008E550(v82, *v84, 0);
          uint64_t v87 = sub_100061274();
          if (!v87 || (v87 & 7) != 0 || (*v84 & 7) != 0) {
            goto LABEL_321;
          }
          int v88 = sub_10008D184(v87, *v84);
          if (v86)
          {
            if (v88 == 56 || v88 == 19)
            {
              if ((v86 & 7) != 0) {
                goto LABEL_321;
              }
              if (!sub_100057CEC(v86)) {
                sub_10007E614(v86, v37);
              }
            }
          }

          sub_10000D048(&v109);
          uint64_t v80 = v109;
        }

        pthread_mutex_unlock((pthread_mutex_t *)(a1 + 2256));
      }

      unsigned int v108 = sub_10007E614(*(void *)(a1 + 8), v37);
    }

LABEL_270:
    if (v106 == 3)
    {
      int v90 = v107;
      if (v107 != 4) {
        goto LABEL_280;
      }
      *(_BYTE *)(a1 + 2200) = 0;
      *(_BYTE *)(a1 + 2202) = 0;
      if ((sub_100063CE8(a4) & 1) == 0) {
        goto LABEL_278;
      }
      uint64_t v91 = sub_100061274();
      if (!v91 || (v91 & 7) != 0) {
        goto LABEL_321;
      }
      if (((a1 + 1592) & 7) != 0) {
        goto LABEL_321;
      }
      if (strcmp((const char *)(a1 + 1592), "Apple Component AV Cable")
        && strcmp((const char *)(a1 + 1592), "Apple Composite AV Cable"))
      {
LABEL_278:
        sub_100072CCC(v30, 1);
      }
    }

LABEL_279:
    int v90 = v107;
LABEL_280:
    if (v90 == 4)
    {
      LOWORD(v109) = -21846;
      sub_10006FED0(a1, a4, 0);
      *(_BYTE *)(a1 + 2200) = 0;
      *(_BYTE *)(a1 + 2202) = 0;
      if ((((_BYTE)a1 - 8) & 7) != 0) {
        goto LABEL_321;
      }
      *(_DWORD *)(a1 + 1528) = 0;
      if ((((_BYTE)a1 - 4) & 3) != 0) {
        goto LABEL_321;
      }
      *(_BYTE *)(a1 + 1532) = 0;
      if (((a1 + 1588) & 3) != 0) {
        goto LABEL_321;
      }
      *(_DWORD *)(a1 + 1588) = 0;
      uint64_t v92 = sub_100061274();
      if (!v92) {
        goto LABEL_321;
      }
      if ((v92 & 7) != 0) {
        goto LABEL_321;
      }
      unint64_t v93 = (void *)sub_100054F0C(v92, a4);
      uint64_t v94 = sub_100061274();
      if (!v94 || (v94 & 7) != 0) {
        goto LABEL_321;
      }
      sub_100054CE8((unsigned __int16 *)v94, (void *)a4);
      if (v93)
      {
        uint64_t v95 = sub_100061274();
        if (!v95 || (v95 & 7) != 0) {
          goto LABEL_321;
        }
        sub_100054CE8((unsigned __int16 *)v95, v93);
      }

      LOWORD(v109) = 20;
      sub_100062E78(a1, -1, &v109, 0LL, 0xFFFFu);
      LOWORD(v109) = 23;
      sub_100062E78(a1, -1, &v109, 0LL, 0xFFFFu);
      int v90 = v107;
    }

    if (v90 == 3)
    {
      uint64_t v96 = sub_100061274();
      if (!v96) {
        goto LABEL_321;
      }
      if ((v96 & 7) != 0) {
        goto LABEL_321;
      }
      sub_10008D224(v96, a4);
      uint64_t v97 = sub_100061274();
      if (!v97 || (v97 & 7) != 0) {
        goto LABEL_321;
      }
      sub_10008CC64(v97, a4, 0, 0);
    }

    goto LABEL_299;
  }

  if (a2 == 8)
  {
    sub_10007ED28(8, a3);
    uint64_t v43 = *(void *)(a1 + 8);
    if (!v43 || (v43 & 7) != 0) {
      goto LABEL_321;
    }
    int v44 = sub_100057B7C(v43);
    if (v44 == 14) {
      goto LABEL_125;
    }
    if (*(_BYTE *)(a1 + 2203))
    {
LABEL_125:
      if (!v11 || (v11 & 7) != 0) {
        goto LABEL_321;
      }
      sub_10007EDF4(v11, a4, 0);
    }

    uint64_t v45 = *(void *)(a1 + 8);
    if (v45 && (v45 & 7) == 0)
    {
      if (sub_100056A48(v45))
      {
        uint64_t v46 = *(void *)(a1 + 8);
        if (!v46 || (v46 & 7) != 0) {
          goto LABEL_321;
        }
        int v47 = sub_100057BDC(v46);
      }

      else
      {
        uint64_t v51 = sub_100061274();
        if (!v51 || (v51 & 7) != 0) {
          goto LABEL_321;
        }
        int v47 = sub_10008C710(v51, a4);
      }

      int v52 = v47;
      uint64_t v53 = sub_100061274();
      if (v53)
      {
        if ((v53 & 7) == 0)
        {
          uint64_t v54 = sub_100054F0C(v53, a4);
          *(_BYTE *)(a1 + 2200) = 0;
          *(_BYTE *)(a1 + 2202) = 0;
          if (v11)
          {
            if ((v11 & 7) == 0)
            {
              uint64_t v55 = v54;
              if (a4) {
                sub_1000870E8(0LL, a4, 0LL);
              }
              sub_10007EE14(v11, 0LL);
              sub_10007E6B4(a1, a4, 9u, v52);
              if (v55)
              {
                uint64_t v56 = sub_100061274();
                if (!v56 || (v56 & 7) != 0) {
                  goto LABEL_321;
                }
                unsigned int v57 = sub_10008C710(v56, v55);
                sub_100071254(a1, v55, v57);
                sub_10007EC3C(a1, *(void *)(a1 + 8), 9u, v57);
              }

              if (*(_BYTE *)(a1 + 2368)) {
                return v108;
              }
              uint64_t v58 = *(void *)(a1 + 8);
              if (v58 && (v58 & 7) == 0)
              {
                BOOL v59 = sub_100057D30(v58);
                if (!a4 || !v59) {
                  return v108;
                }
                if ((a4 & 7) == 0)
                {
                  if (v60 && (v60 & 7) == 0)
                  {
                    uint64_t v61 = *(void *)(a1 + 8);
                    uint64_t v62 = (*(uint64_t (**)(void *))(*(void *)v60 + 384LL))(v60);
                    sub_100070E84(0LL, v61, (void *)a4, v62);
                    return v108;
                  }
                }
              }
            }
          }
        }
      }
    }

    goto LABEL_321;
  }

  if (a2 != 32) {
    return v108;
  }
  if (*(_DWORD *)(a1 + 1176) == a3)
  {
    sub_10006329C(a1, (uint64_t)&v108);
    return 0;
  }

  if (((a1 + 1980) & 3) != 0) {
    goto LABEL_321;
  }
  if (*(_DWORD *)(a1 + 1980) != a3) {
    return v108;
  }
  if (((a1 + 1976) & 7) != 0) {
    goto LABEL_321;
  }
  if (*(_BYTE *)(a1 + 1976)) {
    return v108;
  }
  char v48 = (_BYTE *)(a1 + 1978);
  if ((((_DWORD)a1 + 1978) & 1) != 0) {
    goto LABEL_321;
  }
  int v49 = *v48;
  if (v49 != 255)
  {
    char v50 = v49 + 1;
    if ((v49 + 1) > 2u)
    {
      *(_BYTE *)(a1 + 1977) = 1;
    }

    else
    {
      sub_10006E778(a1, 0);
      sub_1000732B0(a1);
    }

    *char v48 = v50;
    return v108;
  }

  __break(0x5507u);
  return result;
}

uint64_t sub_10007E614(uint64_t result, char a2)
{
  char v5 = a2;
  if (result)
  {
    uint64_t v2 = result;
    if ((result & 7) == 0)
    {
      uint64_t result = sub_10001864C(result);
      if (result)
      {
        uint64_t v3 = result;
        if ((result & 7) == 0)
        {
          int v4 = (*(uint64_t (**)(uint64_t, void))(*(void *)result + 16LL))(result, 0LL);
          uint64_t result = sub_1000ABB10(v3, 0, 0LL, 35, v4, &v5, 1u);
          if (result) {
            return sub_1000AB4C4(v2, result, 1, 1u);
          }
          __break(0x5518u);
        }
      }
    }
  }

  __break(0x5516u);
  return result;
}

void sub_10007E6B4(uint64_t a1, uint64_t a2, unsigned int a3, int a4)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_89;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = sub_100061274();
  uint64_t v10 = v9;
  if (!v8 || !a2 || !v9)
  {
    sub_1000CEAEC( 0,  4,  "%s:%d One or more of handle(%d), pProtoMgr(%d), devPort(%d) is NULL!\n",  "HandlePortDetach",  10890,  v8 == 0,  v9 == 0,  a2 != 0);
    return;
  }

  if (((a1 + 2376) & 7) != 0) {
    goto LABEL_89;
  }
  sub_100008B2C(a1 + 2376);
  if ((a2 & 7) != 0) {
    goto LABEL_89;
  }
  sub_10007AD20(a2);
  *(void *)&__int128 v11 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v11 + 1) = 0xAAAAAAAAAAAAAAAALL;
  __int128 v35 = v11;
  __int128 v36 = v11;
  __int128 v34 = v11;
  if (a3 >= 0x20) {
    goto LABEL_90;
  }
  if (a3 == 9)
  {
    LOBYTE(v33) = -86;
    if ((v8 & 7) != 0) {
      goto LABEL_89;
    }
    if (sub_1000573E0(v8, 4u) && !sub_100090F38((uint64_t)&v33, v8))
    {
      if ((_BYTE)v33) {
        sub_100090D74(v8, 0);
      }
    }

    sub_10006EF28(a1, 0, 1);
    if ((((_BYTE)a1 - 24) & 7) != 0) {
      goto LABEL_89;
    }
    *(_WORD *)(a1 + 1512) = 0;
    if ((((_DWORD)a1 + 1514) & 1) != 0) {
      goto LABEL_89;
    }
    *(_WORD *)(a1 + 1514) = 0;
    *(_BYTE *)(a1 + 2200) = 0;
    if (((a1 + 1992) & 7) != 0) {
      goto LABEL_89;
    }
    sub_10006EC68(a1 + 1992);
    *(void *)(a1 + 1272) = 0LL;
    sub_10006E9E8(a1);
    uint64_t v12 = *(void *)(a1 + 8);
    if (!v12) {
      goto LABEL_89;
    }
    if ((v12 & 7) != 0) {
      goto LABEL_89;
    }
    sub_100057B04(v12);
    if (((a1 + 2320) & 7) != 0) {
      goto LABEL_89;
    }
    if (*(char *)(a1 + 2343) < 0)
    {
      unsigned int v14 = *(_BYTE **)(a1 + 2320);
      if (!v14) {
        goto LABEL_89;
      }
      *unsigned int v14 = 0;
      *(void *)(a1 + 2328) = 0LL;
    }

    else
    {
      *(_BYTE *)(a1 + 2320) = 0;
      *(_BYTE *)(a1 + 2343) = 0;
    }

    sub_10006FDE8(a1, 0LL, 1);
    pthread_mutex_lock((pthread_mutex_t *)(a1 + 1448));
    unsigned int v15 = (uint64_t *)(a1 + 1408);
    if (((a1 + 1408) & 7) != 0) {
      goto LABEL_89;
    }
    uint64_t v16 = *v15;
    if (*v15)
    {
      if ((v16 & 3) != 0) {
        goto LABEL_89;
      }
      int v17 = (void *)sub_100055CC4(v16);
      operator delete(v17);
      *unsigned int v15 = 0LL;
    }

    pthread_mutex_unlock((pthread_mutex_t *)(a1 + 1448));
    sub_100070C38(a1, v18, 0LL);
    if ((((_BYTE)a1 - 8) & 7) != 0) {
      goto LABEL_89;
    }
    *(_DWORD *)(a1 + 1528) = 0;
    if ((((_BYTE)a1 - 4) & 3) != 0) {
      goto LABEL_89;
    }
    *(_BYTE *)(a1 + 1532) = 0;
    if (((a1 + 1588) & 3) != 0) {
      goto LABEL_89;
    }
    *(_DWORD *)(a1 + 1588) = 0;
    if ((v10 & 7) != 0) {
      goto LABEL_89;
    }
    sub_100054CE8((unsigned __int16 *)v10, (void *)a2);
    sub_10008E0CC(v10, a2, 0);
    sub_10006EBD4(a1, a2);
    if (*(unsigned __int8 *)(a1 + 2204) > 1u)
    {
LABEL_90:
      __break(0x550Au);
      return;
    }

    if (*(_BYTE *)(a1 + 2204))
    {
      uint64_t v19 = sub_1000451B0();
      if (!v19 || (v19 & 7) != 0) {
        goto LABEL_89;
      }
      (*(void (**)(uint64_t, uint64_t, void))(*(void *)v19 + 304LL))(v19, a2, 0LL);
    }

    uint64_t v13 = 0LL;
  }

  else
  {
    uint64_t v13 = v8 & 7;
  }

  if (v13) {
    goto LABEL_89;
  }
  sub_1000584B8(v8);
  uint64_t v20 = *(void *)(a1 + 8);
  if (!v20 || (v20 & 7) != 0) {
    goto LABEL_89;
  }
  if (sub_100056A48(v20)) {
    goto LABEL_49;
  }
  if ((v10 & 7) != 0) {
    goto LABEL_89;
  }
  if (sub_10008D184(v10, a2) == 19 || sub_10008D184(v10, a2) == 56)
  {
LABEL_49:
    sub_1000CEAEC( 0,  4,  "%s:%d CIapGeneralLingo::NotifyEvent kAccessoryEventDeviceLeft port: %hhx\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp",  10986,  a2);
    sub_10006E778(a1, 0);
  }

  uint64_t v21 = *(void *)(a1 + 8);
  if (!v21 || (v21 & 7) != 0) {
    goto LABEL_89;
  }
  int v22 = sub_100057B7C(v21);
  if (v22 == -1) {
    int v23 = 16;
  }
  else {
    int v23 = v22;
  }
  DWORD1(v34) = v23;
  if (a3 != 10) {
    goto LABEL_60;
  }
  uint64_t v24 = sub_100061274();
  if (!v24 || (v24 & 7) != 0) {
    goto LABEL_89;
  }
  if (sub_10008D1CC(v24, a2) != -1)
  {
LABEL_60:
    *(void *)&__int128 v34 = __PAIR64__(v23, a3);
    *((void *)&v34 + 1) = a2;
    if ((v10 & 7) != 0) {
      goto LABEL_89;
    }
    LODWORD(v35) = sub_10008D0AC(v10, a2);
    DWORD1(v35) = a4;
    *((void *)&v35 + 1) = *(void *)(a1 + 8);
    sub_10007158C(a1, 0, 0LL, (uint64_t)&v34, 48);
  }

  if (a3 == 9) {
    unsigned int v25 = 0xFFFF;
  }
  else {
    unsigned int v25 = 111;
  }
  sub_10006F0A8(a1, v25);
  if (*(void *)(a1 + 1192) == a2)
  {
    *(void *)(a1 + 1192) = 0LL;
    if (DWORD1(v34) != 11)
    {
      uint64_t v26 = sub_1000451B0();
      if (!v26 || (v26 & 7) != 0) {
        goto LABEL_89;
      }
      (*(void (**)(uint64_t, uint64_t))(*(void *)v26 + 256LL))(v26, 1LL);
    }
  }

  uint64_t v27 = *(void *)(a1 + 8);
  if (!v27 || (v27 & 7) != 0) {
    goto LABEL_89;
  }
  if (sub_100056A48(v27) || (a3 | 2) == 0xA) {
    goto LABEL_77;
  }
  if ((v10 & 7) != 0)
  {
LABEL_89:
    __break(0x5516u);
    goto LABEL_90;
  }

  int v28 = sub_100054A7C(v10, a2);
  sub_10006EA98(a1, a2, 1, v28 != -2);
LABEL_77:
  sub_1000584B8(v8);
  if ((v10 & 7) != 0) {
    goto LABEL_89;
  }
  uint64_t v29 = sub_10008C710(v10, a2) & ~a4;
  if (a3 != 9) {
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)v10 + 144LL))(v10, *(void *)(a1 + 8), v29);
  }
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)v10 + 160LL))(v10, *(void *)(a1 + 8), v29);
  sub_10008D224(v10, a2);
  sub_10008CC64(v10, a2, 0, 0);
  int v32 = -1;
  int v33 = -1;
  uint64_t v30 = sub_100061274();
  if (!v30 || (v30 & 7) != 0) {
    goto LABEL_89;
  }
  sub_1000BA3A8(v30, &v33, &v32);
  if ((v33 - 1) >= 2 && sub_100063FC8((const void *)a2))
  {
    uint64_t v31 = sub_1000B6CE0();
    if (v31 && (v31 & 7) == 0)
    {
      sub_1000B8E48(v31, 2048, 2LL, 0LL, 1u);
      return;
    }

    goto LABEL_89;
  }

uint64_t sub_10007EC3C(uint64_t result, uint64_t a2, unsigned int a3, int a4)
{
  if (!result) {
    goto LABEL_17;
  }
  if ((result & 7) != 0) {
    goto LABEL_17;
  }
  uint64_t result = sub_100061274();
  if (!result || (result & 7) != 0) {
    goto LABEL_17;
  }
  uint64_t result = sub_10008E24C(result, a2);
  if (result)
  {
    uint64_t v7 = result;
    if ((result & 7) == 0)
    {
      sub_10005789C(result, 0);
      uint64_t result = sub_100061274();
      if (result)
      {
        if ((result & 7) == 0)
        {
          uint64_t result = sub_10008C2EC(result, v7, 0);
          if (!result)
          {
            sub_10001864C(v7);
            return sub_1000578E8(v7, 0);
          }

          uint64_t v8 = result;
          if ((result & 7) == 0)
          {
            uint64_t result = sub_10001864C(v7);
            if (!result) {
              return sub_1000578E8(v7, 0);
            }
            if (a3 < 0x20)
            {
              sub_10007E6B4(v8, result, a3, a4);
              return sub_1000578E8(v7, 0);
            }

            goto LABEL_18;
          }
        }
      }
    }

uint64_t *sub_10007ED28(int a1, uint64_t a2)
{
  v9[0] = 0xAAAAAAAAAAAAAAAALL;
  v9[1] = 0xAAAAAAAAAAAAAAAALL;
  sub_1000CE91C((uint64_t)v9, 1u);
  v8[1] = 0xAAAAAAAAAAAAAAAALL;
  v9[0] = off_100103838;
  v8[0] = 0xAAAAAAAAAAAAAAAALL;
  sub_1000CE9E8((uint64_t)v9, v8);
  uint64_t result = sub_100027C8C(v8);
  char v5 = byte_10011C078;
  if (byte_10011C078 >= 0x10uLL)
  {
    __break(0x5512u);
    goto LABEL_8;
  }

  if (24 * (unint64_t)byte_10011C078 > ~(unint64_t)&unk_10011BEF8)
  {
LABEL_8:
    __break(0x5513u);
    return result;
  }

  unsigned int v6 = (char *)&unk_10011BEF8 + 24 * byte_10011C078;
  *(void *)unsigned int v6 = result;
  *((_DWORD *)v6 + 2) = a1;
  *((void *)v6 + 2) = a2;
  if (((v5 + 1) & 0xF0) != 0) {
    char v7 = 0;
  }
  else {
    char v7 = v5 + 1;
  }
  byte_10011C078 = v7;
  v9[0] = off_100103838;
  return sub_1000CE94C(v9);
}

uint64_t sub_10007EDF4(uint64_t result, uint64_t a2, char a3)
{
  if (result)
  {
    if ((result & 7) == 0)
    {
      result += 112LL;
      if ((result & 7) == 0) {
        return sub_1000B161C(result, a2, a3);
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_10007EE14(uint64_t result, uint64_t a2)
{
  if (result)
  {
    if ((result & 7) == 0)
    {
      result += 1104LL;
      if ((result & 7) == 0) {
        return sub_1000B4FE0(result, a2);
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_10007EE34(uint64_t a1)
{
  if (!a1)
  {
LABEL_48:
    __break(0x5518u);
    goto LABEL_49;
  }

  if ((a1 & 7) != 0) {
    goto LABEL_50;
  }
  if (!*(void *)a1) {
LABEL_49:
  }
    sub_1000D276C();
  uint64_t v2 = (_DWORD *)(a1 + 20);
  if (((a1 + 20) & 3) != 0) {
    goto LABEL_50;
  }
  if (*v2 > 0x1Fu) {
    goto LABEL_51;
  }
  if (*v2 >= 0x15u) {
    sub_1000CEAEC( 0,  4,  "%s:%d kItpHeadsetCmdCount < pHeadsetData->cmdID\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp",  11229);
  }
  uint64_t v3 = sub_100061274();
  if (!v3 || (v3 & 7) != 0) {
    goto LABEL_50;
  }
  uint64_t v4 = sub_10008E550(v3, *(void *)a1, 0);
  if (!v4) {
    return 2LL;
  }
  uint64_t v5 = v4;
  if ((v4 & 7) != 0) {
    goto LABEL_50;
  }
  sub_10005789C(v4, 0);
  uint64_t v6 = sub_1000614B8(0LL, v5);
  if (!v6)
  {
    sub_1000CEAEC( 0,  4,  "%s:%d Cannot get GeneralLingo object pointer. Cannot TxdTunnelDataToDev.\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp",  11317);
LABEL_21:
    uint64_t v12 = 2LL;
    goto LABEL_46;
  }

  uint64_t v7 = v6;
  if ((v6 & 7) != 0) {
    goto LABEL_50;
  }
  char v28 = -86;
  *(void *)&__int128 v8 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v8 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v27[14] = v8;
  v27[15] = v8;
  v27[12] = v8;
  v27[13] = v8;
  v27[10] = v8;
  v27[11] = v8;
  v27[8] = v8;
  v27[9] = v8;
  v27[6] = v8;
  v27[7] = v8;
  v27[4] = v8;
  v27[5] = v8;
  v27[2] = v8;
  v27[3] = v8;
  v27[0] = v8;
  v27[1] = v8;
  unsigned __int16 v26 = 257;
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = sub_1000B6CE0();
  if (!v10 || (v10 & 7) != 0) {
    goto LABEL_50;
  }
  if (sub_10008E10C(v10, *(void *)a1))
  {
    unsigned int v11 = 0;
  }

  else
  {
    if (((v7 + 1520) & 7) != 0) {
      goto LABEL_50;
    }
    unsigned int v13 = *(unsigned __int16 *)(v7 + 1520);
    LOWORD(v27[0]) = __rev16(v13);
    unsigned __int16 v26 = 255;
    if ((((_DWORD)a1 + 10) & 1) != 0) {
      goto LABEL_50;
    }
    *(_WORD *)(a1 + 10) = v13;
    unsigned int v11 = 2;
  }

  unsigned int v14 = v11;
  sub_10007F8D0(v7, a1, (unint64_t)v27 | v11, &v26);
  uint64_t v12 = v15;
  if ((_DWORD)v15)
  {
LABEL_46:
    sub_1000578E8(v5, 0);
    return v12;
  }

  if (!v9 || !v26) {
    goto LABEL_48;
  }
  if ((v9 & 7) != 0) {
    goto LABEL_50;
  }
  unsigned int v16 = v14 + v26;
  uint64_t result = (*(uint64_t (**)(uint64_t, void))(*(void *)v9 + 16LL))(v9, 0LL);
  if (HIWORD(v16)) {
    goto LABEL_52;
  }
  uint64_t v18 = sub_1000ABB10(v9, 0, 0LL, 46, result, v27, (unsigned __int16)v16);
  if (!v18) {
    goto LABEL_48;
  }
  uint64_t v19 = v18;
  uint64_t v20 = sub_1000B6CE0();
  if (!v20 || (v20 & 7) != 0) {
    goto LABEL_50;
  }
  uint64_t result = sub_10008E10C(v20, *(void *)a1);
  if ((_DWORD)result)
  {
    if ((v19 & 7) != 0) {
      goto LABEL_50;
    }
    unsigned int v21 = *(_DWORD *)(v19 + 68);
    if (HIWORD(v21)) {
      goto LABEL_52;
    }
    if ((((_DWORD)a1 + 10) & 1) != 0) {
      goto LABEL_50;
    }
    *(_WORD *)(a1 + 10) = v21;
  }

  sub_1000AB4C4(v5, v19, 0, 1u);
  if ((((_DWORD)a1 + 10) & 1) != 0) {
    goto LABEL_50;
  }
  uint64_t v22 = *v2;
  uint64_t v12 = (uint64_t)sub_100062D14((void *)v7, *(unsigned __int16 *)(a1 + 10), 46, v22, 500);
  uint64_t v23 = sub_1000B6CE0();
  if (!v23 || (v23 & 7) != 0)
  {
LABEL_50:
    __break(0x5516u);
LABEL_51:
    __break(0x550Au);
  }

  uint64_t result = sub_10008E10C(v23, *(void *)a1);
  if ((result & 1) != 0) {
    goto LABEL_46;
  }
  int v24 = *(unsigned __int16 *)(v7 + 1520);
  if (v24 == 0xFFFF) {
    goto LABEL_52;
  }
  unsigned __int16 v25 = v24 + 1;
  *(_WORD *)(v7 + 1520) = v25;
  if (((v7 + 1520) & 7) != 0) {
    goto LABEL_50;
  }
  if (v25 != 0xFFFF) {
    goto LABEL_46;
  }
LABEL_52:
  __break(0x5507u);
  return result;
}

uint64_t sub_10007F190(uint64_t result, int a2)
{
  if (result)
  {
    if ((result & 7) == 0)
    {
      result += 112LL;
      if ((result & 7) == 0) {
        return sub_1000B1130(result, a2);
      }
    }
  }

  __break(0x5516u);
  return result;
}

void sub_10007F1B0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a1 || (a1 & 7) != 0 || !a3 || (a3 & 7) != 0) {
    goto LABEL_102;
  }
  if (*(_DWORD *)a3 >= 8u) {
    goto LABEL_103;
  }
  switch(*(_DWORD *)a3)
  {
    case 2:
      if (!a2) {
        return;
      }
      if (((a3 + 4) & 3) != 0) {
        goto LABEL_102;
      }
      int v6 = *(_DWORD *)(a3 + 4);
      if (v6 > 327687)
      {
        if (v6 == 327688)
        {
          sub_100078558(a1);
          return;
        }

        if (v6 == 327708)
        {
          uint64_t v20 = (int **)(a3 + 16);
          if (((a3 + 16) & 7) != 0) {
            goto LABEL_102;
          }
          unsigned int v21 = *v20;
          int v22 = **v20;
          __int16 v41 = *((_WORD *)v21 + 2);
          int v40 = v22;
          if ((a2 & 7) != 0) {
            goto LABEL_102;
          }
          int v23 = *v21;
          __int16 v39 = *((_WORD *)v21 + 2);
          int v38 = v23;
          if (sub_1000830FC(a2, (uint64_t)&v38))
          {
            if ((unint64_t)v21 < 0xFFFFFFFFFFFFFFFALL)
            {
              unint64_t v24 = *(void *)((char *)v21 + 6);
              *(void *)int v42 = 0xAAAAAAAAAAAAAAAALL;
              if (((a1 + 2376) & 7) != 0) {
                goto LABEL_102;
              }
              uint64_t v25 = sub_100087ADC(a1 + 2376, (uint64_t)&v40);
              *(void *)int v42 = v25;
              if (((a1 + 2384) & 7) != 0) {
                goto LABEL_102;
              }
              unint64_t v26 = bswap64(v24);
              if (a1 + 2384 == v25)
              {
                sub_100083150(a1 + 2376, (uint64_t)&v40);
                *__int128 v34 = v26;
              }

              else
              {
                uint64_t v27 = sub_100003154((uint64_t *)v42)[1];
                sub_100083150(a1 + 2376, (uint64_t)&v40);
                *char v28 = v26;
                if (v27 == v26) {
                  return;
                }
              }

              if (((a3 + 24) & 7) != 0) {
                goto LABEL_102;
              }
              if (!(*(void *)(a3 + 24) >> 16))
              {
                sub_10007852C(a1, 0x11u, *(char **)(a3 + 16), (unsigned __int16)*(void *)(a3 + 24), 2u, 0LL, -1);
                return;
              }

uint64_t sub_10007F8B0(uint64_t result, uint64_t a2)
{
  if (result)
  {
    if ((result & 7) == 0)
    {
      result += 16LL;
      if ((result & 7) == 0) {
        return sub_1000B2B10(result, a2);
      }
    }
  }

  __break(0x5516u);
  return result;
}

void sub_10007F8D0(uint64_t a1, uint64_t a2, unint64_t a3, _WORD *a4)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_62;
  }
  if (!a2 || !a3 || !a4) {
    goto LABEL_61;
  }
  if ((a4 & 1) != 0)
  {
LABEL_62:
    __break(0x5516u);
    goto LABEL_63;
  }

  if (!*a4) {
    goto LABEL_61;
  }
  if ((a2 & 7) != 0) {
    goto LABEL_62;
  }
  int v6 = (unsigned int *)(a2 + 20);
  if (((a2 + 20) & 3) != 0) {
    goto LABEL_62;
  }
  if (*v6 > 0x1F) {
    goto LABEL_63;
  }
  if (*v6 >= 0x15)
  {
LABEL_61:
    __break(0x5518u);
    goto LABEL_62;
  }

  *(_BYTE *)a3 = 0;
  if (*v6 > 0x1F) {
    goto LABEL_63;
  }
  if (a3 == -1LL) {
    goto LABEL_64;
  }
  *(_BYTE *)(a3 + 1) = *v6;
  unsigned int v7 = *v6;
  if (v7 > 0x1F)
  {
LABEL_63:
    __break(0x550Au);
LABEL_64:
    __break(0x5513u);
LABEL_65:
    __break(0x5500u);
LABEL_66:
    __break(0x5507u);
    return;
  }

  unsigned int v8 = v7 - 1;
  unsigned int v9 = 2;
  switch(v8)
  {
    case 0u:
      if (((a2 + 28) & 3) != 0 || ((a2 + 32) & 3) != 0) {
        goto LABEL_62;
      }
      if (a3 > 0xFFFFFFFFFFFFFFFDLL) {
        goto LABEL_64;
      }
      *(_BYTE *)(a3 + 2) = *(_BYTE *)(a2 + 32);
      unsigned int v11 = *(_DWORD *)(a2 + 28);
      if (v11 > 0x1F) {
        goto LABEL_63;
      }
      if (a3 > 0xFFFFFFFFFFFFFFFCLL) {
        goto LABEL_64;
      }
      goto LABEL_57;
    case 1u:
    case 9u:
    case 0xCu:
    case 0xDu:
      goto LABEL_58;
    case 4u:
      if (((a2 + 24) & 7) != 0) {
        goto LABEL_62;
      }
      unsigned int v12 = *(_DWORD *)(a2 + 24);
      if (v12 > 7) {
        goto LABEL_63;
      }
      if (v12 == 7) {
        goto LABEL_61;
      }
      if (a3 > 0xFFFFFFFFFFFFFFFDLL) {
        goto LABEL_64;
      }
      goto LABEL_34;
    case 6u:
      if ((((_BYTE)a2 + 28) & 3) != 0) {
        goto LABEL_62;
      }
      if (a3 > 0xFFFFFFFFFFFFFFFDLL) {
        goto LABEL_64;
      }
      LOBYTE(v12) = *(_BYTE *)(a2 + 35);
LABEL_34:
      *(_BYTE *)(a3 + 2) = v12;
      unsigned int v9 = 3;
      goto LABEL_58;
    case 8u:
      if ((((_BYTE)a2 + 28) & 3) != 0) {
        goto LABEL_62;
      }
      if (a3 > 0xFFFFFFFFFFFFFFFDLL) {
        goto LABEL_64;
      }
      *(_BYTE *)(a3 + 2) = *(_BYTE *)(a2 + 35);
      if (((a2 + 32) & 3) != 0) {
        goto LABEL_62;
      }
      if (a3 >= 0xFFFFFFFFFFFFFFFDLL) {
        goto LABEL_65;
      }
      *(_WORD *)(a3 + 3) = bswap32(*(unsigned __int16 *)(a2 + 32)) >> 16;
      if (a3 >= 0xFFFFFFFFFFFFFFFBLL) {
        goto LABEL_65;
      }
      *(_DWORD *)(a3 + 5) = bswap32(*(_DWORD *)(a2 + 28));
      if ((((_DWORD)a2 + 34) & 1) != 0) {
        goto LABEL_62;
      }
      *(_BYTE *)(a3 + 5) = *(_BYTE *)(a2 + 34);
      if (a3 > 0xFFFFFFFFFFFFFFF6LL) {
        goto LABEL_64;
      }
      *(_OWORD *)(a3 + 9) = *(_OWORD *)(a2 + 36);
      unsigned int v9 = 25;
      goto LABEL_58;
    case 0xBu:
      if (((a2 + 28) & 3) != 0) {
        goto LABEL_62;
      }
      if (a3 >= 0xFFFFFFFFFFFFFFFELL) {
        goto LABEL_65;
      }
      *(_DWORD *)(a3 + 2) = bswap32(*(_DWORD *)(a2 + 28));
      unsigned int v9 = 6;
      goto LABEL_58;
    case 0xFu:
      uint64_t v13 = (const void *)(a2 + 28);
      if (((a2 + 28) & 3) != 0) {
        goto LABEL_62;
      }
      size_t v14 = strlen((const char *)(a2 + 28));
      unint64_t v15 = v14 + 1;
      if (v14 == -1LL) {
        goto LABEL_65;
      }
      if (v15 > 0xFF) {
        goto LABEL_66;
      }
      if (a3 > 0xFFFFFFFFFFFFFFFDLL) {
        goto LABEL_64;
      }
      memcpy((void *)(a3 + 2), v13, (v14 + 1));
      unsigned int v9 = (unsigned __int16)v15 + 2;
      goto LABEL_58;
    case 0x11u:
    case 0x13u:
      if (((a2 + 28) & 3) != 0) {
        goto LABEL_62;
      }
      unsigned int v10 = *(_DWORD *)(a2 + 28);
      if (v10 > 1) {
        goto LABEL_63;
      }
      if (v10)
      {
        sub_1000CEAEC( 0,  4,  "%s:%d invalid event %d\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp",  10125,  1);
        unsigned int v9 = 2;
      }

      else
      {
        if (a3 > 0xFFFFFFFFFFFFFFFDLL) {
          goto LABEL_64;
        }
        *(_BYTE *)(a3 + 2) = 0;
        if (((a2 + 32) & 3) != 0) {
          goto LABEL_62;
        }
        if (a3 > 0xFFFFFFFFFFFFFFFCLL) {
          goto LABEL_64;
        }
        LOBYTE(v11) = *(_BYTE *)(a2 + 32);
LABEL_57:
        *(_BYTE *)(a3 + 3) = v11;
        unsigned int v9 = 4;
      }

void sub_10007FBF8(id a1)
{
  uint64_t v1 = sub_100061274();
  if (!v1 || (v1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    sub_10008E450(v1, (void (*)(uint64_t, uint64_t))sub_10007FC2C, 0LL, 0LL);
  }
}

uint64_t sub_10007FC2C(uint64_t a1)
{
  uint64_t result = sub_100061274();
  if (!result || (result & 7) != 0) {
    goto LABEL_11;
  }
  uint64_t result = sub_10008C2EC(result, a1, 0);
  if (!result) {
    return result;
  }
  if ((result & 7) != 0) {
    goto LABEL_11;
  }
  if (!result) {
    return result;
  }
  if ((result & 7) != 0)
  {
LABEL_11:
    __break(0x5516u);
    goto LABEL_12;
  }

  if (*(unsigned __int8 *)(result + 2201) >= 2u)
  {
LABEL_12:
    __break(0x550Au);
    return result;
  }

  if (*(_BYTE *)(result + 2201)) {
    *(_BYTE *)(result + 2201) = 0;
  }
  return result;
}

void sub_10007FCB0(uint64_t a1, unsigned int a2, int a3, unint64_t a4)
{
  if (!a1) {
    goto LABEL_170;
  }
  if ((a1 & 7) != 0) {
    goto LABEL_170;
  }
  *(void *)&__int128 v5 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v5 + 1) = 0xAAAAAAAAAAAAAAAALL;
  __int128 v51 = v5;
  __int128 v52 = v5;
  v53[4] = v5;
  v53[5] = v5;
  v53[2] = v5;
  v53[3] = v5;
  v53[0] = v5;
  v53[1] = v5;
  __int128 v49 = v5;
  __int128 v50 = v5;
  __int128 v48 = v5;
  uint64_t v6 = *(void *)(a1 + 8);
  if (!v6) {
    goto LABEL_170;
  }
  if ((v6 & 7) != 0) {
    goto LABEL_170;
  }
  uint64_t v10 = sub_10001864C(v6);
  uint64_t v11 = *(void *)(a1 + 8);
  if (!v11 || (v11 & 7) != 0) {
    goto LABEL_170;
  }
  int v12 = sub_100057B7C(v11);
  LODWORD(v48) = 17;
  int v13 = v12;
  int v14 = v12 == -1 ? 16 : v12;
  DWORD1(v48) = v14;
  *((void *)&v48 + 1) = v10;
  uint64_t v15 = sub_100061274();
  if (!v15) {
    goto LABEL_170;
  }
  if ((v15 & 7) != 0) {
    goto LABEL_170;
  }
  LODWORD(v49) = sub_10008D0AC(v15, v10);
  uint64_t v16 = sub_100061274();
  if (!v16 || (v16 & 7) != 0) {
    goto LABEL_170;
  }
  int v18 = sub_10008C710(v16, v10);
  DWORD1(v49) = v18;
  uint64_t v19 = *(void *)(a1 + 8);
  *((void *)&v49 + 1) = v19;
  if (a3 <= 45)
  {
    if (a3)
    {
      if (a3 == 20 || a3 == 23) {
        sub_10007304C(a1, v10);
      }
      else {
LABEL_40:
      }
        sub_1000CEAEC( 0,  4,  "%s:%d CIapLingoGeneral::HandleCmdTimeout invalid timeout cmd ID: 0x%02X\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp",  10854,  a3);
    }

    else if (v10)
    {
      uint64_t v26 = sub_100061274();
      if (v26 && (v26 & 7) == 0)
      {
        (*(void (**)(uint64_t, uint64_t, void, uint64_t, void))(*(void *)v26 + 48LL))( v26,  8LL,  0LL,  v10,  0LL);
        return;
      }

      goto LABEL_170;
    }
  }

  else
  {
    switch(a3)
    {
      case ']':
        if (!a4 || (a4 & 7) != 0 || (((_BYTE)a4 + 28) & 3) != 0) {
          goto LABEL_170;
        }
        unsigned int v20 = *(unsigned __int8 *)(a4 + 28);
        uint64_t v21 = *(void *)a4;
        if (v20 > 2)
        {
          if (!(((_BYTE)a4 + 8) & 7 | (unint64_t)(((_BYTE)a4 + 12) & 3)))
          {
            sub_1000812D8(v19, v21);
            goto LABEL_122;
          }
        }

        else if ((((_BYTE)a4 + 8) & 7) == 0 && (((_BYTE)a4 + 12) & 3) == 0 && (((_BYTE)a4 + 24) & 7) == 0)
        {
          sub_100081010( v19,  v21,  *(_BYTE *)(a4 + 8),  *(_DWORD *)(a4 + 12),  (const void *)(a4 + 16),  *(_DWORD *)(a4 + 24),  0,  v20);
LABEL_122:
          operator delete((void *)a4);
          return;
        }

        goto LABEL_170;
      case '^':
      case '_':
      case 'a':
      case 'b':
      case 'c':
      case 'd':
      case 'e':
      case 'f':
      case 'g':
      case 'h':
      case 'i':
      case 'j':
      case 'k':
      case 'l':
      case 'm':
      case 'n':
      case 'o':
        goto LABEL_40;
      case 'w':
        return;
      case 'p':
        uint64_t v27 = (int *)(a1 + 1528);
        if (((a1 + 1528) & 7) != 0) {
          goto LABEL_170;
        }
        if (*v27 != 1) {
          return;
        }
        if (*(_BYTE *)(a1 + 2368)) {
          goto LABEL_141;
        }
        if (!v19 || (v19 & 7) != 0) {
          goto LABEL_170;
        }
        if (sub_100057A20(v19))
        {
          if (!v10)
          {
            uint64_t v28 = *(void *)(a1 + 8);
            if (!v28) {
              goto LABEL_170;
            }
            if ((v28 & 7) != 0) {
              goto LABEL_170;
            }
            uint64_t v29 = sub_100056CF8(v28);
            uint64_t v10 = v29;
            if (v29)
            {
              if ((v29 & 7) != 0) {
                goto LABEL_170;
              }
            }
          }

          if (v13 != 12)
          {
            uint64_t v30 = *(void *)(a1 + 8);
            if (!v30 || (v30 & 7) != 0) {
              goto LABEL_170;
            }
            if (!sub_100057D30(v30))
            {
              if (!v10 || (v10 & 7) != 0) {
                goto LABEL_170;
              }
LABEL_72:
              if (v33 && (v33 & 7) == 0)
              {
                uint64_t v34 = *(void *)(a1 + 8);
                uint64_t v35 = (*(uint64_t (**)(void *))(*(void *)v33 + 384LL))(v33);
                sub_100070E84(1LL, v34, (void *)v10, v35);
                goto LABEL_75;
              }

LABEL_141:
        LODWORD(v48) = 1;
        DWORD1(v48) = v13;
        if (!v10)
        {
          uint64_t v43 = *(void *)(a1 + 8);
          if (!v43 || (v43 & 7) != 0) {
            goto LABEL_170;
          }
          uint64_t v10 = sub_1000569D8(v43);
        }

        *((void *)&v48 + 1) = v10;
        *(void *)&__int128 v49 = 0LL;
        sub_10007158C(a1, 0, 0LL, (uint64_t)&v48, 48);
        if (v13 <= 15 && v13 != -1 && (v13 & 0x80000000) == 0 && ((1 << v13) & 0xE400) != 0) {
          sub_1000710B8(a1, v44, 1);
        }
        if (a4 != v13) {
          sub_1000CEAEC( 0,  4,  "%s:%d cmdData != accResistorID\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp",  10553);
        }
        if (a4 >= 0x10) {
          sub_1000CEAEC( 0,  4,  "%s:%d kIapAccIDSerialBase <= cmdData\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp",  10557);
        }
        LODWORD(v48) = 17;
        uint64_t v45 = sub_1000451B0();
        if (!v45 || (v45 & 7) != 0) {
          goto LABEL_170;
        }
        int v46 = (*(uint64_t (**)(uint64_t))(*(void *)v45 + 224LL))(v45);
        if (v13 == 12 || v13 == 6)
        {
          *uint64_t v27 = 5;
        }

        else
        {
          if (v46) {
            int v47 = 5;
          }
          else {
            int v47 = 4;
          }
          *uint64_t v27 = v47;
          if ((v46 & 1) == 0)
          {
            if (((a1 + 1532) & 3) != 0) {
              goto LABEL_170;
            }
            *(_BYTE *)(a1 + 1532) = 1;
          }
        }

        goto LABEL_159;
      case 'q':
        if (((a1 + 1528) & 7) != 0) {
          goto LABEL_170;
        }
        unsigned int v31 = *(_DWORD *)(a1 + 1528);
        if (v31 > 7) {
          goto LABEL_171;
        }
        if (v31 < 4) {
          goto LABEL_64;
        }
        if (*(_BYTE *)(a1 + 2368)) {
          return;
        }
        if (!v10 || (v10 & 7) != 0) {
          goto LABEL_170;
        }
LABEL_64:
        if (*(_BYTE *)(a1 + 2368)) {
          goto LABEL_129;
        }
        if (!v10 || (v10 & 7) != 0) {
          goto LABEL_170;
        }
        if ((*(unsigned int (**)(uint64_t))(*(void *)v10 + 280LL))(v10))
        {
          uint64_t v32 = *(void *)(a1 + 8);
          if (!v32 || (v32 & 7) != 0) {
            goto LABEL_170;
          }
          if (!sub_100057D30(v32)) {
            goto LABEL_72;
          }
          goto LABEL_75;
        }

    __break(0x5513u);
    goto LABEL_142;
  }

LABEL_169:
        pthread_mutex_unlock((pthread_mutex_t *)(a1 + 1280));
        return;
      case 't':
        pthread_mutex_lock((pthread_mutex_t *)(a1 + 1344));
        int v42 = *(unsigned __int8 *)(a1 + 2202);
        if (v42 == 255) {
          goto LABEL_172;
        }
        *(_BYTE *)(a1 + 2202) = v42 + 1;
        pthread_mutex_unlock((pthread_mutex_t *)(a1 + 1344));
        *(_BYTE *)(a1 + 2200) = 0;
        sub_1000807C0(a1, 1);
        return;
      case 'u':
        if (!a4) {
          return;
        }
        if (a4 >= 0xFFFFFFFFFFFFFFFELL) {
          goto LABEL_173;
        }
        sub_100080A40(a1, __rev16(*(unsigned __int16 *)a4), *(_BYTE *)(a4 + 2), a2);
LABEL_111:
        operator delete[]((void *)a4);
        return;
      case 'v':
        if (!a4) {
          return;
        }
        sub_100080D38(a1, bswap32(*(unsigned __int16 *)a4) >> 16, a2);
        goto LABEL_111;
      case 'x':
        sub_10006FED0(a1, v10, 6);
        return;
      case 'y':
        if (!v10 || (v10 & 7) != 0) {
          goto LABEL_170;
        }
        return;
      default:
        if (a3 == 46)
        {
          memset((char *)v53 + 8, 0, 88);
          HIDWORD(v53[1]) = a4;
          LOBYTE(v53[2]) = 15;
          *(void *)&v53[0] = v10;
          if (!HIWORD(a2))
          {
            WORD5(v53[0]) = a2;
            strcpy((char *)v53 + 8, ",");
            int v22 = v53;
            uint64_t v23 = a1;
            uint64_t v24 = 1LL;
            int v25 = 96;
            goto LABEL_160;
          }

          goto LABEL_172;
        }

        if (a3 != 48) {
          goto LABEL_40;
        }
        if (sub_100076174(v10))
        {
          *((void *)&v51 + 1) = 0LL;
          __int128 v52 = a4;
          if (!a4)
          {
            DWORD1(v52) = 3;
            BYTE8(v52) = 15;
          }

          *(void *)&__int128 v51 = v10;
          if (!HIWORD(a2))
          {
            WORD5(v51) = a2;
            WORD4(v51) = 49;
            int v22 = &v51;
            uint64_t v23 = a1;
            uint64_t v24 = 2LL;
            int v25 = 32;
            goto LABEL_160;
          }

LABEL_172:
          __break(0x5507u);
LABEL_173:
          __break(0x5513u);
          return;
        }

        break;
    }
  }

uint64_t sub_1000807C0(uint64_t result, int a2)
{
  if (!result) {
    goto LABEL_38;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_38;
  }
  uint64_t v4 = sub_100061274();
  uint64_t result = *(void *)(v2 + 8);
  if (!result) {
    goto LABEL_37;
  }
  if ((result & 7) != 0) {
    goto LABEL_38;
  }
  uint64_t result = sub_10001864C(result);
  if (!v4) {
    goto LABEL_38;
  }
  if ((v4 & 7) != 0) {
    goto LABEL_38;
  }
  uint64_t v5 = result;
  int v6 = (*(uint64_t (**)(uint64_t, void))(*(void *)v4 + 152LL))(v4, *(void *)(v2 + 8));
  int v7 = (*(uint64_t (**)(uint64_t, void))(*(void *)v4 + 168LL))(v4, *(void *)(v2 + 8));
  sub_100071254(v2, v5, v7 | v6);
  sub_10006EA98(v2, v5, 1, 1);
  sub_100070C38(v2, v8, 1LL);
  uint64_t result = sub_1000BE638();
  if (!result) {
    goto LABEL_38;
  }
  uint64_t v9 = result;
  if ((result & 7) != 0) {
    goto LABEL_38;
  }
  uint64_t v10 = sub_1000C0034(*(void *)(v2 + 8));
  (*(void (**)(uint64_t, uint64_t))(*(void *)v9 + 136LL))(v9, v10);
  __int16 v21 = 117;
  std::string __p = 0LL;
  while (!sub_100062E78(v2, -1, &v21, &__p, 0xFFFFu))
  {
    if (__p) {
      operator delete[](__p);
    }
  }

  __int16 v21 = 118;
  while (!sub_100062E78(v2, -1, &v21, &__p, 0xFFFFu))
  {
    if (__p) {
      operator delete[](__p);
    }
  }

  uint64_t result = sub_10006FDE8(v2, 0LL, 0);
  unsigned int v11 = *(_DWORD *)(v2 + 2372);
  if (!v11)
  {
    if (!a2) {
      goto LABEL_33;
    }
    *(void *)&__int128 v15 = 0xAAAAAAAAAAAAAAAALL;
    *((void *)&v15 + 1) = 0xAAAAAAAAAAAAAAAALL;
    __int128 v18 = v15;
    __int128 v19 = v15;
    __int128 v17 = v15;
    if (v5)
    {
      if ((v5 & 7) != 0) {
        goto LABEL_38;
      }
      uint64_t v16 = *(void *)(v5 + 32);
      if (v16)
      {
        LODWORD(v17) = 4;
        uint64_t result = *(void *)(v2 + 8);
        if (!result) {
          goto LABEL_38;
        }
        if ((result & 7) != 0) {
          goto LABEL_38;
        }
        uint64_t result = sub_100057B7C(result);
        DWORD1(v17) = result;
        *((void *)&v18 + 1) = *(void *)(v2 + 8);
        *((void *)&v17 + 1) = v5;
        if ((v16 & 7) != 0 || ((v16 + 36) & 3) != 0) {
          goto LABEL_38;
        }
        *(void *)&__int128 v18 = *(unsigned int *)(v16 + 36);
        sub_10007158C(v2, 0, 0LL, (uint64_t)&v17, 48);
        goto LABEL_33;
      }
    }

void sub_100080A40(uint64_t a1, unsigned __int16 a2, std::string::value_type a3, int a4)
{
  v28[0] = a2;
  std::string::value_type v27 = a3;
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_52;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5 || (v5 & 7) != 0) {
    goto LABEL_52;
  }
  uint64_t v8 = sub_10001864C(v5);
  if (!v8) {
    goto LABEL_51;
  }
  uint64_t v9 = v8;
  uint64_t v26 = 0xAAAAAAAAAAAAAAAALL;
  if (((a1 + 1200) & 7) != 0) {
    goto LABEL_52;
  }
  uint64_t v10 = sub_100013C90(a1 + 1200, v28);
  uint64_t v26 = v10;
  if (((a1 + 1208) & 7) != 0) {
    goto LABEL_52;
  }
  if (a1 + 1208 == v10)
  {
    if (a4 != -1) {
      return;
    }
    if (((a1 + 2088) & 7) != 0) {
      goto LABEL_52;
    }
    sub_1000824BC(a1 + 2088, (unsigned __int8 *)&v27);
    uint64_t v15 = *v14;
    if (!*v14)
    {
      uint64_t v13 = 0LL;
      goto LABEL_41;
    }

    uint64_t v16 = (std::string *)operator new(0x40uLL);
    if ((v15 & 7) != 0) {
      goto LABEL_52;
    }
    if ((((_BYTE)v15 + 24) & 7) != 0) {
      goto LABEL_52;
    }
    uint64_t v13 = v16;
    sub_100082FF8(v16, v27, v28[0], *(std::string::value_type **)(v15 + 24));
    sub_10008259C(a1 + 1200, v28);
    *__int128 v17 = v13;
    if (((v15 + 36) & 3) != 0) {
      goto LABEL_52;
    }
    if (*(unsigned __int8 *)(v15 + 36) <= 1u)
    {
      if (*(_BYTE *)(v15 + 36))
      {
        v13[2].__r_.__value_.__s.__data_[8] = 1;
        uint64_t v18 = sub_1000472A8();
        if (v18)
        {
          uint64_t v19 = v18;
          if ((v18 & 7) == 0)
          {
            uint64_t v20 = sub_1000C0034(*(void *)(a1 + 8));
            (*(void (**)(uint64_t, uint64_t, void, uint64_t))(*(void *)v19 + 128LL))(v19, v20, v28[0], 1LL);
            sub_10008267C(a1, v13);
            return;
          }
        }

        goto LABEL_52;
      }

      goto LABEL_41;
    }

uint64_t sub_100080D38(uint64_t result, unsigned __int16 a2, unsigned int a3)
{
  unsigned __int16 v20 = a2;
  if (!result) {
    goto LABEL_51;
  }
  uint64_t v3 = (void *)result;
  if ((result & 7) != 0) {
    goto LABEL_51;
  }
  uint64_t result = *(void *)(result + 8);
  if (!result || (result & 7) != 0) {
    goto LABEL_51;
  }
  uint64_t v6 = sub_10001864C(result);
  uint64_t result = sub_1000472A8();
  if (!result)
  {
    __break(0x5518u);
    goto LABEL_51;
  }

  uint64_t v7 = result;
  uint64_t v19 = 0xAAAAAAAAAAAAAAAALL;
  uint64_t result = (uint64_t)(v3 + 150);
  uint64_t result = sub_100013C90(result, &v20);
  uint64_t v19 = result;
  if (v3 + 151 == (void *)result)
  {
    uint64_t v9 = 0LL;
    goto LABEL_21;
  }

  uint64_t result = (uint64_t)sub_100003154(&v19);
  if (!result) {
    goto LABEL_51;
  }
  if ((result & 7) != 0) {
    goto LABEL_51;
  }
  uint64_t v8 = (uint64_t *)(result + 8);
  if (((result + 8) & 7) != 0) {
    goto LABEL_51;
  }
  uint64_t v9 = *v8;
  if (!*v8 || (v9 & 7) != 0) {
    goto LABEL_51;
  }
  if (*(unsigned __int8 *)(v9 + 56) >= 2u)
  {
LABEL_52:
    __break(0x550Au);
    goto LABEL_53;
  }

  if (*(_BYTE *)(v9 + 56))
  {
    sub_100082914((uint64_t)v3, (std::string *)v9);
LABEL_21:
    BOOL v10 = 0;
    goto LABEL_22;
  }

  BOOL v10 = a3 != -1 || sub_100082A5C(v9);
LABEL_22:
  int v11 = sub_100076174(v6);
  if (!v10 || !v9 || !v11) {
    return 0LL;
  }
  sub_100082A94(v3[1]);
  uint64_t v18 = 0LL;
  char v17 = 0;
  uint64_t result = (uint64_t)operator new[](2uLL);
  unsigned int v12 = (void *)result;
  *(_WORD *)uint64_t result = bswap32(v20) >> 16;
  if (a3 == -1)
  {
    uint64_t result = sub_1000C0034(v3[1]);
    if ((v7 & 7) == 0)
    {
      uint64_t v13 = result;
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v7 + 96LL))(v7, v13, v20);
      if (!result) {
        goto LABEL_47;
      }
      uint64_t v14 = result;
      if ((result & 7) == 0)
      {
        uint64_t v18 = result;
        if (!*(_WORD *)(result + 128)) {
          goto LABEL_47;
        }
        if (v6)
        {
          if ((v6 & 7) == 0)
          {
            uint64_t result = (*(uint64_t (**)(uint64_t, void))(*(void *)v6 + 16LL))(v6, 0LL);
            *(_WORD *)(v14 + 126) = 67;
            *(_DWORD *)(v14 + 64) = 0;
            *(_DWORD *)(v14 + 68) = result;
            if ((v9 & 7) == 0)
            {
              a3 = result;
              if (WORD1(result)) {
                goto LABEL_53;
              }
              sub_100082B18(v9, result, v14);
              goto LABEL_43;
            }
          }
        }
      }
    }

uint64_t sub_100081010( uint64_t a1, uint64_t a2, char a3, int a4, const void *a5, unsigned int a6, int a7, unsigned int a8)
{
  uint64_t result = sub_1000B6CE0();
  if (!result || (result & 7) != 0) {
    goto LABEL_40;
  }
  uint64_t result = sub_10008F004(result, a1);
  if (!a5 || a6 - 1 > 0xFFFD || a8 > 2 || !(_DWORD)result)
  {
    sub_1000CEAEC( 0,  4,  "%s:%d Invalid connection(%hhx)(bValidHandle:%d), data(%hhx)=NULL, size(%d), or resentCount:%d",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp",  18403,  a1,  result,  (_DWORD)a5,  a6,  a8);
    return 0LL;
  }

  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_40;
  }
  uint64_t v15 = sub_10001864C(a1);
  uint64_t result = (uint64_t)operator new[](a6 + 2);
  *(_BYTE *)uint64_t result = a3;
  if (result == -1)
  {
LABEL_41:
    __break(0x5513u);
    goto LABEL_42;
  }

  int v16 = (void *)result;
  uint64_t result = (uint64_t)memcpy((void *)(result + 1), a5, a6);
  if (!v15 || (v15 & 7) != 0)
  {
LABEL_40:
    __break(0x5516u);
    goto LABEL_41;
  }

  int v17 = (*(uint64_t (**)(uint64_t, void))(*(void *)v15 + 16LL))(v15, 0LL);
  uint64_t result = sub_1000ABB10(v15, 0, 0LL, 93, v17, v16, (unsigned __int16)(a6 + 1));
  if (!result)
  {
    __break(0x5518u);
    goto LABEL_40;
  }

  uint64_t v18 = result;
  std::string __p = 0LL;
  __int16 v24 = 93;
  if (!a8 && !sub_100057DB8(a1))
  {
    do
    {
      int v19 = sub_10008242C(a1, -1, &v24, &__p);
      if (!v19)
      {
        uint64_t result = (uint64_t)__p;
        if (__p)
        {
          operator delete(__p);
        }
      }
    }

    while (!v19);
  }

  if (sub_100057DB8(a1))
  {
    BOOL v20 = sub_1000AB4C4(a1, v18, a7, 1u) == 0;
LABEL_36:
    operator delete[](v16);
    return v20;
  }

  if (a6 > 5)
  {
LABEL_35:
    BOOL v20 = 0LL;
    goto LABEL_36;
  }

  uint64_t result = (uint64_t)operator new(0x20uLL);
  if ((result & 0xF) != 0) {
    goto LABEL_40;
  }
  uint64_t v21 = result;
  std::string __p = (void *)result;
  if ((result & 7) != 0) {
    goto LABEL_40;
  }
  *(void *)uint64_t result = a2;
  if ((((_BYTE)result + 8) & 7) != 0) {
    goto LABEL_40;
  }
  *(_BYTE *)(result + 8) = a3;
  if ((((_BYTE)result + 12) & 3) != 0) {
    goto LABEL_40;
  }
  *(_DWORD *)(result + 12) = a4;
  uint64_t result = (uint64_t)memcpy((void *)(result + 16), a5, a6);
  if (((v21 + 24) & 7) != 0) {
    goto LABEL_40;
  }
  *(_DWORD *)(v21 + 24) = a6;
  if (((a8 + 1) & 0x100) == 0)
  {
    if ((((_BYTE)v21 + 28) & 3) == 0)
    {
      *(_BYTE *)(v21 + 28) = a8 + 1;
      if (!sub_1000822F0(v18, a7, 500, v21, a1))
      {
        BOOL v20 = 1LL;
        goto LABEL_36;
      }

      uint64_t result = (uint64_t)__p;
      if (!__p) {
        goto LABEL_35;
      }
      if ((__p & 7) == 0)
      {
        operator delete(__p);
        goto LABEL_35;
      }
    }

    goto LABEL_40;
  }

uint64_t sub_1000812D8(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1000B6CE0();
  if (!result || (result & 7) != 0) {
    goto LABEL_8;
  }
  uint64_t result = sub_10008F004(result, a1);
  if (a2 && (_DWORD)result)
  {
    if ((a2 & 7) == 0)
    {
      *(_DWORD *)(a2 + 196) = *(_DWORD *)(a2 + 200);
      return result;
    }

uint64_t sub_10008132C(uint64_t a1)
{
  uint64_t result = sub_100061274();
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t v3 = sub_10008E550(result, a1, 0);
    return sub_100076884(v3);
  }

  return result;
}

uint64_t sub_100081368(uint64_t result)
{
  uint64_t v1 = result;
  if (!result) {
    goto LABEL_16;
  }
  uint64_t result = sub_100061274();
  if (result && (result & 7) == 0)
  {
    uint64_t result = sub_10008E550(result, v1, 0);
    if (!result)
    {
      uint64_t result = sub_100061274();
      if (!result || (result & 7) != 0) {
        goto LABEL_21;
      }
      uint64_t result = (uint64_t)sub_10008EA78((uint64_t *)result, v1);
      if (!result) {
        return 0LL;
      }
    }

    if ((result & 7) == 0)
    {
      uint64_t result = sub_100057A88(result);
      if (result)
      {
        uint64_t v2 = result;
        if ((result & 7) == 0)
        {
          sub_10005789C(result, 0);
          uint64_t result = sub_1000614B8(0LL, v2);
          if (!result)
          {
            sub_1000CEAEC( 0,  4,  "%s:%d Cannot get GeneralLingo object pointer. Cannot GetDeviceWWiState. port=%hhx handle=%hhx\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp",  11481,  v1,  v2);
            uint64_t v1 = 0LL;
            goto LABEL_18;
          }

          if ((result & 7) == 0 && ((result + 1528) & 7) == 0)
          {
            uint64_t v1 = *(unsigned int *)(result + 1528);
            if (v1 >= 8)
            {
              __break(0x550Au);
LABEL_16:
              sub_1000CEAEC( result,  4,  "%s:%d NULL devPort\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp",  11494);
              return v1;
            }

uint64_t sub_1000814A0()
{
  return 1LL;
}

uint64_t sub_1000814A8(uint64_t result, void *a2)
{
  uint64_t v6 = 0LL;
  if (result)
  {
    if ((result & 7) != 0) {
      goto LABEL_19;
    }
    uint64_t result = sub_100057A88(result);
    if (!result) {
      goto LABEL_19;
    }
    uint64_t v3 = result;
    if ((result & 7) != 0) {
      goto LABEL_19;
    }
    sub_10005789C(result, 0);
    uint64_t result = sub_1000614B8(0LL, v3);
    if (result)
    {
      if ((result & 7) != 0) {
        goto LABEL_19;
      }
      uint64_t v4 = (uint64_t *)(result + 1408);
      if (((result + 1408) & 7) != 0) {
        goto LABEL_19;
      }
      uint64_t result = *v4;
      if (*v4)
      {
        if ((result & 3) != 0) {
          goto LABEL_19;
        }
        uint64_t v5 = sub_100055ED0(result, &v6);
        goto LABEL_15;
      }
    }

    else
    {
      sub_1000CEAEC( 0,  4,  "%s:%d Cannot get GeneralLingo object pointer. handle=%hhx\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp",  11547,  v3);
    }

    uint64_t v5 = 0LL;
LABEL_15:
    uint64_t result = sub_1000578E8(v3, 0);
    if (!a2) {
      return v5;
    }
    goto LABEL_16;
  }

  uint64_t v5 = 0LL;
  if (!a2) {
    return v5;
  }
LABEL_16:
  if ((a2 & 7) == 0)
  {
    *a2 = v6;
    return v5;
  }

void sub_1000815B4(uint64_t a1, unsigned int a2, uint64_t *a3)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_35;
  }
  if (a3)
  {
    uint64_t v5 = *a3;
  }

  else
  {
    syslog( 3,  "%s:%s-%d sizeof(uintptr_t) = %ld bytes, pHintData=%hhx",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp",  "SendChargingInfoNotification",  11822,  8LL,  0);
    uint64_t v5 = 0LL;
  }

  uint64_t v6 = *(void *)(a1 + 8);
  if (!v6 || (v6 & 7) != 0) {
    goto LABEL_35;
  }
  if (sub_10001864C(v6) == v5) {
    goto LABEL_17;
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if (!v7 || (v7 & 7) != 0) {
    goto LABEL_35;
  }
  BOOL v8 = sub_100057A20(v7);
  if (!v5 || !v8) {
    return;
  }
  if ((v5 & 7) != 0 || (uint64_t v9 = *(void *)(a1 + 8)) == 0 || (v9 & 7) != 0)
  {
LABEL_35:
    __break(0x5516u);
LABEL_36:
    __break(0x550Au);
LABEL_37:
    __break(0x5500u);
    return;
  }

  uint64_t v10 = *(void *)(v5 + 40);
  if (v10 != sub_1000569D8(v9)) {
    return;
  }
LABEL_17:
  if (a2 >= 4) {
    goto LABEL_36;
  }
  switch(a2)
  {
    case 0u:
      uint64_t v11 = sub_1000451B0();
      if (!v11 || (v11 & 7) != 0) {
        goto LABEL_35;
      }
      unsigned int v12 = *(uint64_t (**)(void))(*(void *)v11 + 296LL);
      goto LABEL_32;
    case 1u:
      uint64_t v15 = sub_1000451B0();
      if (!v15 || (v15 & 7) != 0) {
        goto LABEL_35;
      }
      unsigned int v12 = *(uint64_t (**)(void))(*(void *)v15 + 328LL);
      goto LABEL_32;
    case 2u:
      uint64_t v13 = sub_1000451B0();
      if (!v13 || (v13 & 7) != 0) {
        goto LABEL_35;
      }
      unsigned int v12 = *(uint64_t (**)(void))(*(void *)v13 + 344LL);
      goto LABEL_32;
    case 3u:
      uint64_t v14 = sub_1000451B0();
      if (!v14 || (v14 & 7) != 0) {
        goto LABEL_35;
      }
      unsigned int v12 = *(uint64_t (**)(void))(*(void *)v14 + 360LL);
LABEL_32:
      unsigned int v16 = v12();
      __int16 v18 = -21846;
      char v17 = a2;
      __int16 v18 = __rev16(v16);
      sub_100081790(*(void *)(a1 + 8), 5u, &v17, 3u, 2u, 0LL, -1);
      break;
    default:
      return;
  }

void sub_100081790( uint64_t a1, unsigned int a2, char *a3, unsigned int a4, unsigned int a5, uint64_t a6, int a7)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_66;
  }
  uint64_t v13 = sub_10001864C(a1);
  if (!v13) {
    return;
  }
  if (a2 >= 0x20)
  {
LABEL_71:
    __break(0x550Au);
LABEL_72:
    __break(0x5507u);
LABEL_73:
    __break(0x5513u);
LABEL_74:
    __break(0x5500u);
    return;
  }

  uint64_t v14 = v13;
  if ((*(void *)(a1 + 1992) & (1LL << a2)) == 0)
  {
    uint64_t v15 = sub_1000B6CE0();
    if (v15 && (v15 & 7) == 0)
    {
      if (!sub_10008E10C(v15, v14) || ((1LL << a2) & 0x84) == 0) {
        return;
      }
      goto LABEL_10;
    }

void sub_100081BA8(uint64_t a1, int a2, unint64_t a3, uint64_t *a4, unsigned int a5)
{
  if (!a1 || (a1 & 7) != 0 || ((v6 = *(void *)(a1 + 8)) != 0 ? (BOOL v7 = (v6 & 7) == 0) : (BOOL v7 = 0), !v7))
  {
LABEL_45:
    __break(0x5516u);
    goto LABEL_46;
  }

  uint64_t v12 = sub_10001864C(v6);
  if (v12)
  {
    uint64_t v13 = v12;
    if (a2 > 917506)
    {
      switch(a2)
      {
        case 1048577:
          uint64_t v16 = a1;
          unsigned int v17 = 0;
          goto LABEL_41;
        case 1048578:
          uint64_t v16 = a1;
          unsigned int v17 = 1;
          goto LABEL_41;
        case 1048579:
          sub_1000815B4(a1, 2u, a4);
          unsigned int v22 = *(_DWORD *)(a1 + 2208);
          if ((v22 & 0x80000000) != 0) {
            return;
          }
          if (HIWORD(v22)) {
            goto LABEL_46;
          }
          uint64_t v23 = sub_10007D0AC(a1, v13, (unsigned __int16)*(_DWORD *)(a1 + 2208));
          uint64_t v24 = sub_1000451B0();
          if (!v24 || (v24 & 7) != 0) {
            goto LABEL_45;
          }
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)v24 + 288LL))(v24, v13, v23);
          return;
        case 1048580:
          uint64_t v16 = a1;
          unsigned int v17 = 3;
LABEL_41:
          sub_1000815B4(v16, v17, a4);
          return;
        default:
          if (a2 != 917507)
          {
            if (a2 != 1376277) {
              return;
            }
            if (!HIWORD(a5))
            {
              uint64_t v18 = *(void *)(a1 + 8);
              unsigned int v19 = (unsigned __int16)a5;
              unsigned int v20 = 16;
              goto LABEL_44;
            }

            goto LABEL_46;
          }

          if (HIWORD(a5)) {
            goto LABEL_46;
          }
          uint64_t v18 = *(void *)(a1 + 8);
          unsigned int v19 = (unsigned __int16)a5;
          unsigned int v20 = 1;
          break;
      }

      goto LABEL_44;
    }

    if (a2 <= 917504)
    {
      if (a2 == 196613)
      {
        if (HIDWORD(a3)) {
          syslog( 3,  "%s:%s-%d losing integer precision for index value 0x08%lx",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp",  "SendISLPropertyChangeWithHints",  12305,  a3);
        }
        uint64_t v21 = sub_1000B6CE0();
        if (!v21 || (v21 & 7) != 0) {
          goto LABEL_45;
        }
        (*(void (**)(uint64_t, uint64_t))(*(void *)v21 + 128LL))(v21, 6LL);
      }

      else if (a2 == 327708 && a5 == 14)
      {
        uint64_t v14 = operator new[](0xEuLL);
        *uint64_t v14 = *a4;
        *(void *)((char *)v14 + 6) = *(uint64_t *)((char *)a4 + 6);
        uint64_t v15 = sub_1000B6CE0();
        if (v15 && (v15 & 7) == 0)
        {
          (*(void (**)(uint64_t, uint64_t))(*(void *)v15 + 128LL))(v15, 2LL);
          return;
        }

        goto LABEL_45;
      }

      return;
    }

    if (a2 == 917505)
    {
      if (a5 < 0x10000)
      {
        uint64_t v18 = *(void *)(a1 + 8);
        unsigned int v19 = (unsigned __int16)a5;
        unsigned int v20 = 0;
        goto LABEL_44;
      }
    }

    else if (!HIWORD(a5))
    {
      uint64_t v18 = *(void *)(a1 + 8);
      unsigned int v19 = (unsigned __int16)a5;
      unsigned int v20 = 14;
LABEL_44:
      sub_100081790(v18, v20, (char *)a4, v19, 2u, 0LL, -1);
      return;
    }

void sub_100081ED0(unsigned int a1, int a2, int a3, void *__p)
{
  if (a1 >= 8) {
    goto LABEL_8;
  }
  if (a1 != 2 || a2 != 327708)
  {
    __break(0x5518u);
LABEL_8:
    __break(0x550Au);
    return;
  }

  if (__p) {
    operator delete[](__p);
  }
}

void sub_100081F08(uint64_t a1, int a2, int a3, _DWORD *a4)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_35;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5 || (v5 & 7) != 0) {
    goto LABEL_35;
  }
  sub_10001864C(v5);
  if (a2 <= 1310720)
  {
    if (a2 == 327687)
    {
      uint64_t v13 = sub_1000B6CE0();
      if (v13 && (v13 & 7) == 0)
      {
        uint64_t v14 = *(void (**)(uint64_t, uint64_t))(*(void *)v13 + 128LL);
        goto LABEL_28;
      }
    }

    else
    {
      if (a2 != 327688) {
        return;
      }
      uint64_t v13 = sub_1000B6CE0();
      if (v13 && (v13 & 7) == 0)
      {
        uint64_t v14 = *(void (**)(uint64_t, uint64_t))(*(void *)v13 + 128LL);
LABEL_28:
        v14(v13, 2LL);
        return;
      }
    }

void sub_100082154(unsigned int a1, int a2, int a3, int a4, void *__p)
{
  if (a1 >= 8) {
    goto LABEL_9;
  }
  if (a1 != 3 || a2 != 1310721)
  {
    __break(0x5518u);
LABEL_9:
    __break(0x550Au);
LABEL_10:
    __break(0x5516u);
    return;
  }

  if (__p)
  {
    if ((__p & 1) == 0)
    {
      operator delete(__p);
      return;
    }

    goto LABEL_10;
  }

BOOL sub_100082194(BOOL result, int a2)
{
  if (result)
  {
    uint64_t v2 = result;
    if (!(result & 7))
    {
      uint64_t result = sub_1000830C4(result, a2);
      BOOL v3 = result;
      if (result) {
        return !v3;
      }
      if ((((_BYTE)v2 + 44) & 3) == 0 && (((_DWORD)v2 + 54) & 1) == 0)
      {
        *(_WORD *)(v2 + 54) = 0;
        uint64_t v4 = *(void *)(v2 + 45);
        if (v4)
        {
          sub_1000AD43C(v4);
          *(void *)(v2 + 45) = 0LL;
        }

        *(_BYTE *)(v2 + 53) = 0;
        *(_BYTE *)(v2 + 44) = 0;
        return !v3;
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_100082208(uint64_t result)
{
  if (result)
  {
    if ((result & 7) == 0)
    {
      uint64_t result = sub_100057A88(result);
      if (result)
      {
        uint64_t v1 = result;
        if ((result & 7) == 0)
        {
          if (!sub_10001864C(result)) {
            return 0LL;
          }
          sub_10005789C(v1, 0);
          uint64_t result = sub_1000614B8(0LL, v1);
          if (!result)
          {
            uint64_t v2 = 0LL;
            goto LABEL_13;
          }

          if ((result & 7) == 0 && (((_BYTE)result + 56) & 7) == 0 && ((result + 1952) & 7) == 0)
          {
            uint64_t v2 = *(unsigned int *)(result + 1952);
LABEL_13:
            sub_1000578E8(v1, 0);
            return v2;
          }
        }
      }
    }
  }

  else
  {
    __break(0x5518u);
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000822C4(uint64_t result)
{
  if (result
    && (result & 7) == 0
    && ((v1 = *(void *)(result + 8)) != 0 ? (BOOL v2 = (*(void *)(result + 8) & 7LL) == 0) : (BOOL v2 = 0), v2))
  {
    *(void *)(v1 + 1992) = 0LL;
  }

  else
  {
    __break(0x5516u);
  }

  return result;
}

uint64_t sub_1000822F0(uint64_t result, int a2, int a3, uint64_t a4, uint64_t a5)
{
  if (!result) {
    goto LABEL_13;
  }
  uint64_t v5 = (int *)result;
  if ((result & 7) != 0) {
    goto LABEL_13;
  }
  __int16 v7 = *(_WORD *)(result + 126);
  __int16 v16 = v7;
  if (!a5) {
    goto LABEL_12;
  }
  if ((a5 & 7) != 0)
  {
LABEL_13:
    __break(0x5516u);
    return result;
  }

  int v11 = *(_DWORD *)(result + 68);
  sub_10005789C(a5, 0);
  uint64_t result = sub_1000614B8(0LL, a5);
  if (!result)
  {
LABEL_12:
    __break(0x5518u);
    goto LABEL_13;
  }

  uint64_t v12 = result;
  if ((result & 7) != 0) {
    goto LABEL_13;
  }
  uint64_t v13 = sub_100062D14((void *)result, v5[17], v7, a4, a3);
  if ((_DWORD)v13)
  {
    uint64_t v14 = (uint64_t)v13;
    (*(void (**)(int *))(*(void *)v5 + 8LL))(v5);
  }

  else
  {
    sub_10005758C(a5, 0, 1);
    int v15 = sub_100062E0C();
    sub_100057538(a5, 0, v15);
    uint64_t v14 = sub_1000AB4C4(a5, (uint64_t)v5, a2, 1u);
    if ((_DWORD)v14) {
      sub_100062E78(v12, v11, &v16, 0LL, 0xFFFFu);
    }
  }

  sub_1000578E8(a5, 0);
  return v14;
}

uint64_t sub_10008242C(uint64_t result, int a2, _WORD *a3, void *a4)
{
  if (!result) {
    goto LABEL_6;
  }
  uint64_t v4 = result;
  if ((result & 7) != 0) {
    goto LABEL_7;
  }
  sub_10005789C(result, 0);
  uint64_t result = sub_1000614B8(0LL, v4);
  if (!result)
  {
LABEL_6:
    __break(0x5518u);
    goto LABEL_7;
  }

  if ((result & 7) == 0)
  {
    uint64_t v8 = sub_100062E78(result, a2, a3, a4, 0xFFFFu);
    sub_1000578E8(v4, 0);
    return v8;
  }

void sub_1000824BC(uint64_t a1, unsigned __int8 *a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_11;
  }
  uint64_t v8 = 0xAAAAAAAAAAAAAAAALL;
  uint64_t v4 = (uint64_t *)sub_1000877C4(a1, &v8, a2);
  uint64_t v5 = (void *)*v4;
  if (*v4)
  {
  }

  else
  {
    uint64_t v6 = v4;
    memset(v7, 170, sizeof(v7));
    sub_1000878C0((void *)a1, a2, (uint64_t)v7);
    sub_100008FEC(a1, v8, v6, (void *)v7[0]);
    uint64_t v5 = v7[0];
    v7[0] = 0LL;
    sub_100009500(v7, 0LL);
    if (!v5) {
      goto LABEL_11;
    }
  }

  if ((v5 & 7) != 0 || (((_BYTE)v5 + 32) & 7) != 0) {
LABEL_11:
  }
    __break(0x5516u);
}

void sub_10008259C(uint64_t a1, unsigned __int16 *a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_11;
  }
  uint64_t v8 = 0xAAAAAAAAAAAAAAAALL;
  uint64_t v4 = (uint64_t *)sub_100013DC4(a1, &v8, a2);
  uint64_t v5 = (void *)*v4;
  if (*v4)
  {
  }

  else
  {
    uint64_t v6 = v4;
    memset(v7, 170, sizeof(v7));
    sub_100087950((void *)a1, a2, (uint64_t)v7);
    sub_100008FEC(a1, v8, v6, (void *)v7[0]);
    uint64_t v5 = v7[0];
    v7[0] = 0LL;
    sub_100009500(v7, 0LL);
    if (!v5) {
      goto LABEL_11;
    }
  }

  if ((v5 & 7) != 0 || (((_BYTE)v5 + 32) & 7) != 0) {
LABEL_11:
  }
    __break(0x5516u);
}

void sub_10008267C(uint64_t a1, std::string *a2)
{
  int size = (char)v11.__r_.__value_.__s.__size_;
  uint64_t v5 = (void *)v11.__r_.__value_.__r.__words[0];
  uint64_t v6 = (v11.__r_.__value_.__s.__size_ & 0x80u) == 0 ? &v11 : (std::string *)v11.__r_.__value_.__r.__words[0];
  int v7 = strcmp((const char *)v6, off_10011B6A0);
  int v8 = v7;
  if (size < 0)
  {
    operator delete(v5);
    if (v8) {
      return;
    }
  }

  else if (v7)
  {
    return;
  }

  uint64_t v9 = sub_100061274();
  if (!v9 || (v9 & 7) != 0) {
    goto LABEL_18;
  }
  uint64_t v10 = sub_10008C2EC(v9, *(void *)(a1 + 8), 0xDu);
  if (!v10) {
    return;
  }
  if ((v10 & 7) != 0)
  {
LABEL_18:
    __break(0x5516u);
    return;
  }

  (*(void (**)(uint64_t, std::string *))(*(void *)v10 + 112LL))(v10, a2);
}

uint64_t sub_100082750(uint64_t result, unsigned __int16 a2, int a3)
{
  unsigned __int16 v15 = a2;
  if (!result) {
    goto LABEL_30;
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_30;
  }
  uint64_t result = *(void *)(result + 8);
  if (!result || (result & 7) != 0) {
    goto LABEL_30;
  }
  uint64_t result = sub_10001864C(result);
  if (!result) {
    goto LABEL_29;
  }
  uint64_t v14 = 0xAAAAAAAAAAAAAAAALL;
  if (((v3 + 1200) & 7) != 0) {
    goto LABEL_30;
  }
  uint64_t v6 = result;
  uint64_t result = sub_100013C90(v3 + 1200, &v15);
  uint64_t v14 = result;
  if (((v3 + 1208) & 7) != 0) {
    goto LABEL_30;
  }
  if (v3 + 1208 == result)
  {
    BOOL v9 = 0;
    uint64_t v11 = 2LL;
LABEL_20:
    int v12 = sub_100076174(v6);
    if (v9 || !v12) {
      return v11;
    }
    uint64_t result = (uint64_t)operator new[](2uLL);
    uint64_t v13 = (void *)result;
    *(_WORD *)uint64_t result = bswap32(v15) >> 16;
    if (a3 == -1)
    {
      if ((v6 & 7) != 0) {
        goto LABEL_30;
      }
      a3 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v6 + 16LL))(v6, 1LL);
    }

    uint64_t result = sub_1000ABB10(v6, 0, 0LL, 64, a3, v13, 2u);
    if (result)
    {
      if ((result & 7) == 0)
      {
        *(_BYTE *)(result + 132) |= 2u;
        uint64_t v11 = sub_1000AB4C4(*(void *)(v3 + 8), result, 0, 1u);
        operator delete[](v13);
        return v11;
      }

void sub_100082914(uint64_t a1, std::string *a2)
{
  if (!a1) {
    goto LABEL_25;
  }
  if ((a1 & 7) != 0) {
    goto LABEL_25;
  }
  uint64_t v4 = sub_1000472A8();
  uint64_t v5 = sub_1000C0034(*(void *)(a1 + 8));
  uint64_t v6 = v5;
  uint64_t data_low = LOWORD(a2->__r_.__value_.__l.__data_);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)v4 + 88LL))(v4, v5, data_low))
  {
    uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v4 + 96LL))(v4, v6, data_low);
    uint64_t v9 = v8;
    if (v8 && (v8 & 7) != 0) {
      goto LABEL_25;
    }
  }

  else
  {
    uint64_t v9 = 0LL;
  }

  sub_10008542C(a2, &v17);
  int size = (char)v17.__r_.__value_.__s.__size_;
  uint64_t v11 = (void *)v17.__r_.__value_.__r.__words[0];
  if ((v17.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    int v12 = &v17;
  }
  else {
    int v12 = (std::string *)v17.__r_.__value_.__r.__words[0];
  }
  int v13 = strcmp((const char *)v12, off_10011B6A0);
  int v14 = v13;
  if (size < 0)
  {
    operator delete(v11);
    if (v14) {
      return;
    }
  }

  else if (v13)
  {
    return;
  }

  uint64_t v15 = sub_100061274();
  if (!v15 || (v15 & 7) != 0) {
    goto LABEL_25;
  }
  uint64_t v16 = sub_10008C2EC(v15, *(void *)(a1 + 8), 0xDu);
  if (!v16) {
    return;
  }
  if ((v16 & 7) != 0)
  {
LABEL_25:
    __break(0x5516u);
    return;
  }

  (*(void (**)(uint64_t, std::string *, uint64_t))(*(void *)v16 + 144LL))(v16, a2, v9);
}

BOOL sub_100082A5C(BOOL result)
{
  if (!result || (result & 7) != 0 || (((_BYTE)result + 44) & 3) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    unsigned int v1 = *(unsigned __int8 *)(result + 53);
    if (v1 <= 1) {
      return v1 == 0;
    }
  }

  __break(0x550Au);
  return result;
}

uint64_t sub_100082A94(uint64_t result)
{
  if (!result) {
    goto LABEL_11;
  }
  if ((result & 7) != 0) {
    goto LABEL_12;
  }
  uint64_t result = sub_100057A88(result);
  if (!result || (result & 7) != 0) {
    goto LABEL_12;
  }
  uint64_t result = sub_10001864C(result);
  if (!result)
  {
LABEL_11:
    __break(0x5518u);
    goto LABEL_12;
  }

  if ((result & 7) != 0)
  {
LABEL_12:
    __break(0x5516u);
    goto LABEL_13;
  }

  uint64_t result = (*(uint64_t (**)(uint64_t, void))(*(void *)result + 136LL))(result, 0LL);
  if (result >= 0x10000)
  {
LABEL_13:
    __break(0x5507u);
    return result;
  }

  unsigned __int16 v1 = result - 2;
  return v1;
}

uint64_t sub_100082B18(uint64_t result, __int16 a2, uint64_t a3)
{
  if (!result || (result & 7) != 0 || (((_BYTE)result + 44) & 3) != 0)
  {
LABEL_9:
    __break(0x5516u);
    goto LABEL_10;
  }

  unsigned int v3 = *(unsigned __int8 *)(result + 53);
  if (v3 <= 1)
  {
    if (*(_BYTE *)(result + 53)) {
      return v3 == 0;
    }
    if ((((_DWORD)result + 54) & 1) == 0)
    {
      *(_WORD *)(result + 54) = a2;
      *(void *)(result + 45) = a3;
      *(_BYTE *)(result + 53) = 1;
      return v3 == 0;
    }

    goto LABEL_9;
  }

BOOL sub_100082B6C(BOOL result, int a2, void *a3, _BYTE *a4)
{
  if (result)
  {
    uint64_t v4 = result;
    if (!(result & 7))
    {
      uint64_t result = sub_1000830C4(result, a2);
      if (result) {
        return !result;
      }
      if ((((_BYTE)v4 + 44) & 3) == 0)
      {
        *a3 = *(void *)(v4 + 45);
        *a4 = *(_BYTE *)(v4 + 44);
        return !result;
      }
    }
  }

  __break(0x5516u);
  return result;
}

BOOL sub_100082BD8(BOOL result, int a2)
{
  if (!result) {
    goto LABEL_8;
  }
  BOOL v2 = result;
  if (result & 7) {
    goto LABEL_8;
  }
  uint64_t result = sub_1000830C4(result, a2);
  if (result) {
    return !result;
  }
  unsigned int v3 = (_BYTE *)(v2 + 44);
  if ((v2 + 44) & 3)
  {
LABEL_8:
    __break(0x5516u);
  }

  else
  {
    int v4 = *v3;
    if (v4 != 255)
    {
      *unsigned int v3 = v4 + 1;
      return !result;
    }
  }

  __break(0x5507u);
  return result;
}

uint64_t *sub_100082C3C(uint64_t a1)
{
  unsigned __int8 v2 = atomic_load((unsigned __int8 *)&qword_10011BEF0);
  if ((v2 & 1) == 0) {
    goto LABEL_17;
  }
  while (1)
  {
    if (!a1)
    {
      __break(0x5518u);
      goto LABEL_16;
    }

    if ((a1 & 7) != 0) {
      goto LABEL_16;
    }
    uint64_t v3 = sub_100057A88(a1);
    if (!v3) {
      goto LABEL_16;
    }
    a1 = v3;
    if ((v3 & 7) != 0) {
      goto LABEL_16;
    }
    sub_10005789C(v3, 0);
    uint64_t v4 = sub_100061274();
    if (!v4 || (v4 & 7) != 0) {
      goto LABEL_16;
    }
    uint64_t v5 = sub_10008C2EC(v4, a1, 0);
    if (v5)
    {
      if ((v5 & 7) != 0 || (((_BYTE)v5 - 56) & 7) != 0) {
        goto LABEL_16;
      }
      uint64_t v6 = (uint64_t *)(v5 + 2088);
    }

    else
    {
      uint64_t v6 = &qword_10011BED8;
    }

uint64_t sub_100082D58(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_100009E9C(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_100082D6C(uint64_t result, unsigned int a2, uint64_t *a3)
{
  if (!result) {
    goto LABEL_38;
  }
  if ((result & 7) != 0) {
    goto LABEL_39;
  }
  uint64_t result = sub_100057A88(result);
  if (!result) {
    goto LABEL_39;
  }
  uint64_t v5 = result;
  if ((result & 7) != 0) {
    goto LABEL_39;
  }
  sub_10005789C(result, 0);
  uint64_t result = sub_100061274();
  if (!result || (result & 7) != 0) {
    goto LABEL_39;
  }
  uint64_t result = sub_10008C2EC(result, v5, 0);
  if (result)
  {
    uint64_t v6 = result;
    if ((result & 7) == 0 && (((_BYTE)result - 56) & 7) == 0)
    {
      int v7 = *(_DWORD ***)(result + 1992);
      if (v7 == *(_DWORD ***)(result + 2000))
      {
LABEL_37:
        sub_1000578E8(v5, 0);
        return 1LL;
      }

      uint64_t v8 = *(void *)(result + 1992) & 7LL;
      while (1)
      {
        unint64_t v17 = 0xAAAAAAAAAAAAAAAALL;
        if (!v7 || v8) {
          break;
        }
        uint64_t v9 = *v7;
        unint64_t v17 = (unint64_t)v9;
        BOOL v10 = v9 && (v9 & 7) == 0LL;
        if (!v10) {
          break;
        }
        if (a2 > 0xF) {
          goto LABEL_40;
        }
        if (*v9 == a2)
        {
          uint64_t v11 = (uint64_t *)(v9 + 2);
          uint64_t v12 = *v11;
          if (v12)
          {
            BOOL v10 = (v12 & 7) == 0;
            int v13 = (unsigned int *)(v12 + 8);
            unsigned int v15 = *v13;
            if (v15 > 0xF) {
              goto LABEL_40;
            }
            if (!v15)
            {
              unint64_t v16 = a3[1];
              if (v16 >= a3[2])
              {
                uint64_t result = sub_1000879E4(a3, &v17);
              }

              else
              {
                uint64_t result = (uint64_t)sub_100024F94(a3, &v17);
                if (v16 >= 0xFFFFFFFFFFFFFFF8LL) {
                  goto LABEL_41;
                }
                uint64_t result = v16 + 8;
              }

              a3[1] = result;
            }
          }
        }

        if (++v7 == *(_DWORD ***)(v6 + 2000)) {
          goto LABEL_37;
        }
      }
    }
  }

  else
  {
LABEL_38:
    __break(0x5518u);
  }

uint64_t sub_100082F14(uint64_t result)
{
  if (result)
  {
    if ((result & 7) == 0)
    {
      uint64_t result = sub_100057A88(result);
      if (result)
      {
        uint64_t v1 = result;
        if ((result & 7) == 0)
        {
          sub_10005789C(result, 0);
          uint64_t result = sub_100061274();
          if (result)
          {
            if ((result & 7) == 0)
            {
              uint64_t result = sub_10008C2EC(result, v1, 0);
              if (!result)
              {
                sub_1000CEAEC( 0,  4,  "%s:%d GetPreferredBundleSeedID handle=%hhx\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp",  14040,  v1);
                uint64_t v2 = 0LL;
                goto LABEL_13;
              }

              if ((result & 7) == 0 && (((_BYTE)result - 56) & 7) == 0 && ((result + 2112) & 7) == 0)
              {
                uint64_t v2 = *(void *)(result + 2112);
LABEL_13:
                sub_1000578E8(v1, 0);
                return v2;
              }
            }
          }
        }
      }
    }
  }

  else
  {
    __break(0x5518u);
  }

  __break(0x5516u);
  return result;
}

std::string *sub_100082FF8( std::string *result, std::string::value_type a2, __int16 a3, std::string::value_type *__s)
{
  if (!result
    || (uint64_t v4 = result, (result & 7) != 0)
    || (uint64_t result = (std::string *)((char *)result + 8), ((unint64_t)&v4->__r_.__value_.__l.__size_ & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    result->__r_.__value_.__r.__words[0] = 0LL;
    v4->__r_.__value_.__l.__cap_ = 0LL;
    v4[1].__r_.__value_.__r.__words[0] = 0LL;
    v4->__r_.__value_.__s.__data_[2] = a2;
    LOWORD(v4->__r_.__value_.__l.__data_) = a3;
    LOWORD(v4[1].__r_.__value_.__r.__words[1]) = 0;
    v4[2].__r_.__value_.__s.__data_[8] = 0;
    std::string::assign(result, __s);
    *(std::string::size_type *)((char *)&v4[1].__r_.__value_.__r.__words[2] + 4) = 0LL;
    HIDWORD(v4[2].__r_.__value_.__r.__words[0]) = 0;
    return v4;
  }

  return result;
}

uint64_t sub_10008305C(uint64_t result)
{
  if (!result) {
    goto LABEL_10;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0 || (((_BYTE)result + 44) & 3) != 0) {
    goto LABEL_10;
  }
  uint64_t result = *(void *)(result + 45);
  if (result)
  {
    uint64_t result = sub_1000AD43C(result);
    *(void *)(v1 + 45) = 0LL;
  }

  if (((v1 + 8) & 7) != 0)
  {
LABEL_10:
    __break(0x5516u);
  }

  else
  {
    return v1;
  }

  return result;
}

BOOL sub_1000830C4(BOOL result, int a2)
{
  if (result && (result & 7) == 0 && !(((_BYTE)result + 44) & 3 | (result + 54) & 1)) {
    return *(unsigned __int16 *)(result + 54) != a2;
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000830FC(uint64_t result, uint64_t a2)
{
  if (result)
  {
    uint64_t v2 = result;
    if ((result & 7) == 0)
    {
      result += 48LL;
      if (((v2 + 48) & 7) == 0 && ((v2 + 56) & 7) == 0 && a2) {
        return v2 + 56 != sub_1000875F0(result, a2);
      }
    }
  }

  __break(0x5516u);
  return result;
}

void sub_100083150(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_11;
  }
  uint64_t v8 = 0xAAAAAAAAAAAAAAAALL;
  uint64_t v4 = (uint64_t *)sub_100087C94(a1, &v8, a2);
  uint64_t v5 = (void *)*v4;
  if (*v4)
  {
  }

  else
  {
    uint64_t v6 = v4;
    memset(v7, 170, sizeof(v7));
    sub_100087E18((void *)a1, a2, (uint64_t)v7);
    sub_100008FEC(a1, v8, v6, (void *)v7[0]);
    uint64_t v5 = v7[0];
    v7[0] = 0LL;
    sub_100009500(v7, 0LL);
    if (!v5) {
      goto LABEL_11;
    }
  }

  if ((v5 & 7) != 0 || (((_BYTE)v5 + 32) & 7) != 0) {
LABEL_11:
  }
    __break(0x5516u);
}

void sub_100083230(uint64_t a1, uint64_t *a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_7;
  }
  sub_100008B2C(a1);
  if ((((_BYTE)a1 + 16) & 7) != 0)
  {
LABEL_7:
    __break(0x5516u);
    return;
  }

  sub_100087EB0((uint64_t *)a1, *a2, (uint64_t)(a2 + 1));
}

void sub_100083290(uint64_t a1, _DWORD *a2, uint64_t a3, int a4)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_225;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5 || (v5 & 7) != 0) {
    goto LABEL_225;
  }
  uint64_t v8 = sub_10001864C(v5);
  unsigned int v105 = 0;
  uint64_t v9 = sub_100061274();
  if (!v9) {
    goto LABEL_225;
  }
  if ((v9 & 7) != 0) {
    goto LABEL_225;
  }
  unsigned int v102 = sub_10008C710(v9, v8);
  uint64_t v10 = sub_100061274();
  if (!v10) {
    goto LABEL_225;
  }
  if ((v10 & 7) != 0) {
    goto LABEL_225;
  }
  int v99 = sub_10008D184(v10, v8);
  if ((((_BYTE)a1 - 56) & 7) != 0) {
    goto LABEL_225;
  }
  if ((*(_BYTE *)(a1 + 2185) & 1) != 0 && (*(_BYTE *)(a1 + 2193) & 1) != 0 && (a4 & 1) == 0) {
    return;
  }
  if (*a2)
  {
    uint64_t v11 = 0LL;
    int v12 = 2;
    unsigned int v13 = 5;
    goto LABEL_206;
  }

  uint64_t v97 = (int *)(a1 + 1224);
  if (((a1 + 1224) & 7) != 0) {
    goto LABEL_225;
  }
  int v103 = a2[7];
  *uint64_t v97 = 1;
  int v14 = a2[5];
  unsigned int v15 = a2[6];
  if (*(_BYTE *)(a1 + 2369)) {
    BOOL v16 = v103 == 53248;
  }
  else {
    BOOL v16 = 0;
  }
  int v18 = v16 || (v103 & 0xFFFFFF00) == 512;
  uint64_t v19 = sub_10006F18C(a1, a2[6]);
  unsigned int v100 = v15;
  int v20 = v15 >> 4;
  if (v20 == 2) {
    int v21 = 1;
  }
  else {
    int v21 = 5;
  }
  if (v20 == 1) {
    int v21 = 0;
  }
  int v98 = v15 & 3;
  uint64_t v96 = v19;
  if (*(_BYTE *)(a1 + 2368))
  {
    int v22 = 0;
    goto LABEL_58;
  }

  if (!v8 || (v8 & 7) != 0) {
    goto LABEL_225;
  }
  int v23 = v21;
  int v24 = (*(uint64_t (**)(uint64_t))(*(void *)v8 + 280LL))(v8);
  int v22 = 0;
  if ((v15 & 3) != 0) {
    char v25 = v18;
  }
  else {
    char v25 = 0;
  }
  if (v24)
  {
    uint64_t v19 = v96;
    int v21 = v23;
    if ((v25 & 1) != 0) {
      goto LABEL_58;
    }
    uint64_t v26 = *(void *)(a1 + 8);
    if (!v26 || (v26 & 7) != 0) {
      goto LABEL_225;
    }
    if (!sub_100057D30(v26))
    {
      uint64_t v28 = *(void *)(a1 + 8);
      uint64_t v29 = (*(uint64_t (**)(void *))(*(void *)v27 + 384LL))(v27);
      sub_100070E84(1LL, v28, (void *)v8, v29);
    }

    sub_100070F1C(*(void *)(a1 + 8), v8, 0);
    int v22 = 1;
  }

  uint64_t v19 = v96;
  int v21 = v23;
LABEL_58:
  BOOL v30 = v8 != 0;
  if ((v8 & 7) != 0) {
    BOOL v30 = 0;
  }
  unsigned int v95 = v21;
  if (v21 != 5 || v19)
  {
    if (!v30) {
      goto LABEL_225;
    }
    if (v21 == (*(unsigned int (**)(uint64_t))(*(void *)v8 + 216LL))(v8))
    {
      int v34 = 1;
      goto LABEL_74;
    }

    int v35 = a4;
    if (v98 == 2) {
      int v35 = 1;
    }
    int v33 = v18 & v35 ^ 1;
  }

  else
  {
    if (!v30) {
      goto LABEL_225;
    }
    int v31 = (*(uint64_t (**)(uint64_t))(*(void *)v8 + 232LL))(v8);
    if (v103) {
      int v32 = v31;
    }
    else {
      int v32 = 0;
    }
    int v33 = v32 & (v18 ^ 1);
  }

  int v34 = v22 | v33;
LABEL_74:
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 1448));
  unsigned int v36 = (uint64_t *)(a1 + 1408);
  if (((a1 + 1408) & 7) != 0) {
    goto LABEL_225;
  }
  uint64_t v37 = *v36;
  if (*v36)
  {
    if ((v37 & 3) != 0) {
      goto LABEL_225;
    }
    uint64_t v38 = (void *)sub_100055CC4(v37);
    operator delete(v38);
    *unsigned int v36 = 0LL;
  }

  pthread_mutex_unlock((pthread_mutex_t *)(a1 + 1448));
  if ((((_BYTE)a1 - 48) & 7) != 0) {
    goto LABEL_225;
  }
  if ((((_BYTE)a1 - 40) & 7) != 0) {
    goto LABEL_225;
  }
  *(_DWORD *)(a1 + 1240) = v103;
  if ((((_BYTE)a1 - 36) & 3) != 0) {
    goto LABEL_225;
  }
  *(_DWORD *)(a1 + 1244) = v14;
  int v39 = sub_100071124(a1, v8, v14, &v105);
  uint64_t v40 = sub_100061274();
  if (!v40 || (v40 & 7) != 0) {
    goto LABEL_225;
  }
  unsigned int v94 = sub_100054660((unsigned __int16 *)v40, (const void *)v8, v103);
  if (v94) {
    int v41 = v18;
  }
  else {
    int v41 = 0;
  }
  if ((v14 & 1) == 0) {
    sub_1000CEAEC( 0,  4,  "%s:%d General lingo missing from mask!\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp",  16593);
  }
  if ((v8 & 7) != 0)
  {
LABEL_225:
    __break(0x5516u);
LABEL_226:
    __break(0x5507u);
LABEL_227:
    __break(0x5500u);
LABEL_228:
    __break(0x5513u);
    goto LABEL_229;
  }

  int v42 = v15 & 0xC;
  BOOL v43 = !(v14 & 1);
  if (v15 > 0xFF) {
    BOOL v43 = 1;
  }
  if (v98 == 3) {
    BOOL v43 = 1;
  }
  int v44 = v43 | v34;
  int v45 = v44 != 0;
  if ((v14 & 2) != 0)
  {
    uint64_t v47 = sub_1000438B8();
    if (!v47) {
      goto LABEL_225;
    }
    uint64_t v48 = v47;
    if ((v47 & 7) != 0) {
      goto LABEL_225;
    }
    int v93 = (*(uint64_t (**)(uint64_t))(*(void *)v47 + 200LL))(v47);
    uint64_t v46 = v8;
    int v49 = (*(uint64_t (**)(uint64_t))(*(void *)v8 + 248LL))(v8);
    int v50 = v42;
    int v51 = v49;
    int v52 = (*(uint64_t (**)(uint64_t))(*(void *)v48 + 184LL))(v48);
    int v53 = v93 & v51;
    int v42 = v50;
    int v54 = (v53 | v52) ^ 1;
    if (v44) {
      int v45 = 1;
    }
    else {
      int v45 = v54;
    }
    if ((v14 & 0x400) == 0)
    {
LABEL_98:
      uint64_t v8 = v46;
      if ((v14 & 0x40) == 0) {
        goto LABEL_111;
      }
      goto LABEL_107;
    }
  }

  else
  {
    uint64_t v46 = v8;
    if ((v14 & 0x400) == 0) {
      goto LABEL_98;
    }
  }

  uint64_t v8 = v46;
  v45 |= (*(uint64_t (**)(uint64_t))(*(void *)v46 + 256LL))(v46) ^ 1;
  if ((v14 & 0x40) == 0) {
    goto LABEL_111;
  }
LABEL_107:
  uint64_t v55 = *(void *)(v8 + 40);
  if (!v55 || (v55 & 7) != 0) {
    goto LABEL_225;
  }
LABEL_111:
  char v56 = a4 ^ 1 | v45;
  if (v98 == 2) {
    char v56 = v45;
  }
  if ((v56 & 1) == 0 && ((v39 ^ 1) & 1) == 0 && ((v41 ^ 1) & 1) == 0 && (v14 & *(_DWORD *)(a1 + 1516) & v94) == v14)
  {
    unsigned int v57 = v102;
    if (v99 == 56 || v99 == 19) {
      unsigned int v57 = (~v14 | 0x2010) & v102;
    }
    sub_100071254(a1, v8, v57);
    uint64_t v58 = sub_100061274();
    if (!v58 || (v58 & 7) != 0) {
      goto LABEL_225;
    }
    int v59 = sub_100054630(v58, v103, (char *)(a1 + 1440), (_BYTE *)(a1 + 1441));
    if (v59) {
      sub_1000D280C(v59);
    }
    if ((((_BYTE)a1 - 96) & 7) != 0) {
      goto LABEL_225;
    }
    int v60 = *(unsigned __int8 *)(a1 + 1440);
    if (v60 != 1)
    {
      if (v60 == 2)
      {
        if ((((_BYTE)a1 - 108) & 3) != 0) {
          goto LABEL_225;
        }
        *(_DWORD *)(a1 + 1428) = 15000;
        if ((((_BYTE)a1 - 104) & 7) != 0) {
          goto LABEL_225;
        }
        *(_DWORD *)(a1 + 1432) = 75000;
        *(_BYTE *)(a1 + 1439) = 3;
        uint64_t v61 = (__int16 *)(a1 + 1436);
        if (((a1 + 1436) & 3) != 0) {
          goto LABEL_225;
        }
        __int16 v62 = 255;
LABEL_163:
        *uint64_t v61 = v62;
LABEL_168:
        uint64_t v73 = sub_100061274();
        if (v73)
        {
          if ((v73 & 7) == 0)
          {
            sub_10008D008(v73, v8, v103);
            uint64_t v74 = sub_100061274();
            if (v74)
            {
              if ((v74 & 7) == 0)
              {
                sub_10008CB5C(v74, v8, v100);
                uint64_t v75 = sub_100061274();
                if (v75)
                {
                  if ((v75 & 7) == 0)
                  {
                    sub_10008CC64(v75, v8, 0, v42 == 12);
                    uint64_t v76 = sub_100061274();
                    if (v76)
                    {
                      if ((v76 & 7) == 0)
                      {
                        unsigned int v77 = v14 & 0x7FFF;
                        if ((*(unsigned int (**)(uint64_t, void, void))(*(void *)v76 + 144LL))( v76,  *(void *)(a1 + 8),  v14 & 0x7FFF) == v77)
                        {
                          int v12 = 0;
                        }

                        else
                        {
                          sub_1000CEAEC( 0,  4,  "%s:%d setActiveLingoMaskReturn != devLingoes\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp",  16760);
                          int v12 = 2;
                        }

                        uint64_t v78 = sub_100061274();
                        if (v78)
                        {
                          if ((v78 & 7) == 0)
                          {
                            if ((*(unsigned int (**)(uint64_t, void, void))(*(void *)v78 + 160LL))( v78,  *(void *)(a1 + 8),  v14 & 0x7FFF) != v77)
                            {
                              sub_1000CEAEC( 0,  4,  "%s:%d setAllowedLingoMaskReturn != devLingoes\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp",  16770);
                              int v12 = 2;
                            }

                            if (!qword_10011C8F8) {
                              goto LABEL_186;
                            }
                            if ((qword_10011C8F8 & 7) == 0)
                            {
                              (*(void (**)(void))(*(void *)qword_10011C8F8 + 8LL))();
                              qword_10011C8F8 = 0LL;
LABEL_186:
                              unsigned int v79 = 0;
                              while (1)
                              {
                                if (((v77 >> v79) & 1) != 0)
                                {
                                  uint64_t v80 = *(void *)(a1 + 8);
                                  if (v80) {
                                    BOOL v81 = (*(void *)(a1 + 8) & 7LL) == 0;
                                  }
                                  else {
                                    BOOL v81 = 0;
                                  }
                                  if (!v81) {
                                    goto LABEL_225;
                                  }
                                  sub_10005789C(v80, v79);
                                  uint64_t v82 = sub_100061274();
                                  if (!v82 || (v82 & 7) != 0) {
                                    goto LABEL_225;
                                  }
                                  uint64_t v83 = sub_10008C2EC(v82, *(void *)(a1 + 8), v79);
                                  if (v83)
                                  {
                                    if ((v83 & 7) != 0) {
                                      goto LABEL_225;
                                    }
                                    (*(void (**)(uint64_t, uint64_t, void, uint64_t))(*(void *)v83 + 80LL))( v83,  4LL,  0LL,  v8);
                                  }

                                  else
                                  {
                                    sub_1000CEAEC( 0,  4,  "%s:%d No lingo object! lingo=%d\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp",  16800,  v79);
                                  }

                                  uint64_t v84 = *(void *)(a1 + 8);
                                  if (!v84 || (v84 & 7) != 0) {
                                    goto LABEL_225;
                                  }
                                  sub_1000578E8(v84, v79);
                                }

                                if (++v79 == 15) {
                                  goto LABEL_205;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }

        goto LABEL_225;
      }

      goto LABEL_164;
    }

    if (*(unsigned __int8 *)(a1 + 2369) <= 1u)
    {
      if (*(_BYTE *)(a1 + 2369))
      {
        if ((((_BYTE)a1 - 108) & 3) != 0) {
          goto LABEL_225;
        }
        *(_DWORD *)(a1 + 1428) = 1000;
        if ((((_BYTE)a1 - 104) & 7) != 0) {
          goto LABEL_225;
        }
        *(_DWORD *)(a1 + 1432) = 7500;
        *(_BYTE *)(a1 + 1439) = 4;
        uint64_t v61 = (__int16 *)(a1 + 1436);
        if (((a1 + 1436) & 3) != 0) {
          goto LABEL_225;
        }
        __int16 v62 = 70;
        goto LABEL_163;
      }

LABEL_164:
      if ((((_BYTE)a1 - 108) & 3) != 0) {
        goto LABEL_225;
      }
      *(_DWORD *)(a1 + 1428) = 0;
      if ((((_BYTE)a1 - 104) & 7) != 0) {
        goto LABEL_225;
      }
      *(_DWORD *)(a1 + 1432) = 0;
      *(_BYTE *)(a1 + 1439) = 0;
      if (((a1 + 1436) & 3) != 0) {
        goto LABEL_225;
      }
      *(_WORD *)(a1 + 1436) = 0;
      goto LABEL_168;
    }

LABEL_229:
    __break(0x550Au);
    return;
  }

  uint64_t v63 = sub_100061274();
  if (!v63 || (v63 & 7) != 0) {
    goto LABEL_225;
  }
  sub_100054CE8((unsigned __int16 *)v63, (void *)v8);
  sub_100071254(a1, v8, v102);
  if (((*(uint64_t (**)(uint64_t))(*(void *)v8 + 232LL))(v8) & 1) != 0)
  {
    int v64 = 4;
LABEL_139:
    uint64_t v11 = v96;
    unsigned int v13 = v95;
    *uint64_t v97 = v64;
    int v12 = 2;
    goto LABEL_206;
  }

  if ((v39 & 1) == 0)
  {
    LOBYTE(v65) = 0;
    unsigned int v66 = 0;
    *uint64_t v97 = 6;
    while (((v105 >> v65) & 1) == 0 || !__CFADD__(v66++, 1))
    {
      unsigned int v65 = (v65 + 1);
      if (v65 >= 0xF)
      {
        if (v66 > 0xFF) {
          goto LABEL_226;
        }
        if (a3)
        {
          if ((a3 & 7) == 0 && (((_BYTE)a3 + 24) & 7) == 0)
          {
            *(_BYTE *)(a3 + 24) = v66;
            uint64_t v68 = operator new[](v66);
            uint64_t v69 = (void *)(a3 + 16);
            if (((a3 + 16) & 7) == 0)
            {
              int v70 = 0;
              uint64_t v71 = 0LL;
              *uint64_t v69 = v68;
              do
              {
                if (((v105 >> v70) & 1) != 0)
                {
                  uint64_t v72 = *v69;
                  if (__CFADD__(*v69, v71)) {
                    goto LABEL_228;
                  }
                  if (!v72) {
                    goto LABEL_225;
                  }
                  *(_BYTE *)(v72 + v71) = v70;
                  if (v71 == 255) {
                    goto LABEL_226;
                  }
                  ++v71;
                }

                ++v70;
              }

              while (v70 != 15);
              int v12 = 20;
              goto LABEL_205;
            }
          }
        }

        goto LABEL_225;
      }
    }

    goto LABEL_227;
  }

  *uint64_t v97 = 5;
  if ((v14 & 0x7FFF) != 0)
  {
    if ((*(_DWORD *)(a1 + 1516) & v14 & 0x7FFF) != 0) {
      int v64 = 3;
    }
    else {
      int v64 = 4;
    }
    goto LABEL_139;
  }

  int v12 = 2;
LABEL_205:
  uint64_t v11 = v96;
  unsigned int v13 = v95;
LABEL_206:
  *(_DWORD *)(a1 + 2372) = 0;
  if (v12)
  {
    sub_10006EA98(a1, v8, 1, 1);
    sub_100070C38(a1, v85, 1LL);
    if (v12 == 20) {
      *(_DWORD *)(a1 + 2372) = v105;
    }
    return;
  }

  if (v11 || v13 != 5)
  {
    uint64_t v86 = sub_100061274();
    if (v86)
    {
      if ((v86 & 7) == 0)
      {
        sub_100054F98(v86, v8, v11);
        uint64_t v87 = sub_100061274();
        if (v87)
        {
          if ((v87 & 7) == 0)
          {
            sub_100054FDC(v87, v8, v13);
            uint64_t v88 = sub_100061274();
            if (v88)
            {
              if ((v88 & 7) == 0)
              {
                uint64_t v89 = sub_10008E550(v88, v11, 0);
                if (!v89) {
                  return;
                }
                uint64_t v90 = v89;
                uint64_t v91 = sub_100061274();
                if (v91)
                {
                  if ((v91 & 7) == 0)
                  {
                    sub_10008E1F0(v91, *(void *)(a1 + 8), v90);
                    uint64_t v92 = sub_100061274();
                    if (v92)
                    {
                      if ((v92 & 7) == 0)
                      {
                        sub_10008E1F0(v92, v90, *(void *)(a1 + 8));
                        return;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

    goto LABEL_225;
  }

uint64_t sub_100083D84(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result)
  {
    uint64_t v3 = result;
    if ((result & 7) == 0)
    {
      uint64_t result = *(void *)(result + 8);
      if (result && (result & 7) == 0)
      {
        uint64_t result = sub_10001864C(result);
        if (a2)
        {
          if ((a2 & 7) == 0)
          {
            int v7 = (_BYTE *)(a2 + 16);
            if (((a2 + 16) & 7) == 0)
            {
              int v8 = *v7;
              size_t v9 = *(unsigned __int8 *)(a2 + 17);
              switch(*v7)
              {
                case 0:
                  if ((_DWORD)v9 != 4) {
                    goto LABEL_112;
                  }
                  if (((a2 + 24) & 7) != 0) {
                    goto LABEL_140;
                  }
                  unint64_t v17 = *(unsigned int **)(a2 + 24);
                  if (!v17) {
                    goto LABEL_140;
                  }
                  unsigned int v18 = bswap32(*v17);
                  uint64_t v19 = (unsigned int *)(v3 + 1968);
                  uint64_t v20 = (v3 + 1968) & 7;
                  if ((v18 & 1) == 0)
                  {
                    if (v20) {
                      goto LABEL_140;
                    }
                    int v15 = 0;
                    unsigned int *v19 = 0;
                    goto LABEL_113;
                  }

                  if (v20) {
                    goto LABEL_140;
                  }
                  int v15 = 0;
                  uint64_t v16 = 0LL;
                  unsigned int *v19 = v18;
                  goto LABEL_132;
                case 1:
                case 6:
                case 7:
                case 8:
                case 0xE:
                  uint64_t v10 = (const void **)(a2 + 24);
                  else {
                    char v11 = *(_BYTE *)(a2 + 17);
                  }
                  unsigned __int8 v12 = v11 + 1;
                  unsigned __int8 v13 = 1;
                  break;
                case 2:
                  if ((_DWORD)v9 != 7) {
                    goto LABEL_112;
                  }
                  int v21 = (unsigned int **)(a2 + 24);
                  if (!*v21) {
                    goto LABEL_140;
                  }
                  unsigned int v22 = **v21;
                  uint64_t result = sub_10004783C();
                  if (!result || (result & 7) != 0) {
                    goto LABEL_140;
                  }
                  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 112LL))(result);
                  if (bswap32(v22) != (_DWORD)result) {
                    goto LABEL_111;
                  }
                  int v23 = *v21;
                  int v24 = (const void *)(v3 + 1592);
                  if (((v3 + 1592) & 7) != 0 || (((_DWORD)v3 + 1662) & 1) != 0) {
                    goto LABEL_140;
                  }
                  *(_BYTE *)(v3 + 1662) = *((_BYTE *)v23 + 4);
                  *(_BYTE *)(v3 + 1663) = *((_BYTE *)v23 + 5);
                  if ((((_BYTE)v3 + 0x80) & 7) != 0) {
                    goto LABEL_140;
                  }
                  *(_BYTE *)(v3 + 1664) = *((_BYTE *)v23 + 6);
                  goto LABEL_108;
                case 3:
                  if ((_DWORD)v9 != 3) {
                    goto LABEL_112;
                  }
                  if (((a2 + 24) & 7) != 0) {
                    goto LABEL_140;
                  }
                  char v25 = *(unsigned __int8 **)(a2 + 24);
                  if (!v25) {
                    goto LABEL_140;
                  }
                  unint64_t v26 = *v25;
                  if (v26 > 0xE)
                  {
LABEL_112:
                    int v15 = 0;
LABEL_113:
                    uint64_t v16 = 2LL;
                    goto LABEL_132;
                  }

                  int v24 = (const void *)(v3 + 1592);
                  if (((v3 + 1592) & 7) != 0) {
                    goto LABEL_140;
                  }
                  if (__CFADD__(v3 + 1666, 2 * v26)) {
                    goto LABEL_141;
                  }
                  uint64_t v27 = v3 + 1666 + 2 * v26;
                  if ((v27 & 1) != 0) {
                    goto LABEL_140;
                  }
                  *(_WORD *)uint64_t v27 = bswap32(*(unsigned __int16 *)(v25 + 1)) >> 16;
LABEL_108:
                  uint64_t result = *(void *)(v3 + 8);
                  uint64_t result = (uint64_t)sub_100057CB8((char *)result, v24);
LABEL_111:
                  int v15 = 0;
                  goto LABEL_131;
                case 4:
                  if ((_DWORD)v9 != 3) {
                    goto LABEL_114;
                  }
                  if (((a2 + 24) & 7) != 0) {
                    goto LABEL_140;
                  }
                  uint64_t v28 = *(_BYTE **)(a2 + 24);
                  if (!v28) {
                    goto LABEL_140;
                  }
                  uint64_t v29 = (const void *)(v3 + 1592);
                  if (((v3 + 1592) & 7) != 0 || ((v3 + 1656) & 7) != 0) {
                    goto LABEL_140;
                  }
                  *(_BYTE *)(v3 + 1656) = *v28;
                  if (v28 == (_BYTE *)-1LL) {
                    goto LABEL_141;
                  }
                  *(_BYTE *)(v3 + 1657) = v28[1];
                  if ((((_DWORD)v3 + 1658) & 1) != 0) {
                    goto LABEL_140;
                  }
                  *(_BYTE *)(v3 + 1658) = v28[2];
                  uint64_t result = *(void *)(v3 + 8);
                  uint64_t result = (uint64_t)sub_100057CB8((char *)result, v29);
                  uint64_t v16 = 0LL;
                  int v15 = 8;
                  goto LABEL_132;
                case 5:
                  if ((_DWORD)v9 != 3)
                  {
LABEL_114:
                    int v15 = 0;
                    uint64_t v16 = 1LL;
                    goto LABEL_132;
                  }

                  if (((a2 + 24) & 7) == 0)
                  {
                    BOOL v30 = *(_BYTE **)(a2 + 24);
                    if (v30)
                    {
                      int v31 = (const void *)(v3 + 1592);
                      if (((v3 + 1592) & 7) == 0)
                      {
                        *(_BYTE *)(v3 + 1659) = *v30;
                        if (v30 == (_BYTE *)-1LL) {
                          goto LABEL_141;
                        }
                        if (((v3 + 1660) & 3) == 0)
                        {
                          *(_BYTE *)(v3 + 1660) = v30[1];
                          *(_BYTE *)(v3 + 1661) = v30[2];
                          uint64_t result = *(void *)(v3 + 8);
                          if (result)
                          {
                            if (!(*(void *)(v3 + 8) & 7LL | v31 & 3))
                            {
                              uint64_t result = (uint64_t)sub_100057CB8((char *)result, v31);
                              uint64_t v16 = 0LL;
                              int v15 = 16;
                              goto LABEL_132;
                            }
                          }
                        }
                      }
                    }
                  }

                  goto LABEL_140;
                case 9:
                  if ((_DWORD)v9 != 2) {
                    goto LABEL_112;
                  }
                  if (((a2 + 24) & 7) != 0) {
                    goto LABEL_140;
                  }
                  int v32 = *(unsigned __int16 **)(a2 + 24);
                  if (!v32) {
                    goto LABEL_140;
                  }
                  unsigned int v33 = *v32;
                  if (!result || (result & 7) != 0) {
                    goto LABEL_140;
                  }
                  uint64_t result = (*(uint64_t (**)(uint64_t, void))(*(void *)result + 152LL))( result,  __rev16(v33));
                  goto LABEL_111;
                case 0xA:
                  int v15 = 0;
                  uint64_t v16 = 2 * ((_DWORD)v9 != 1);
                  goto LABEL_132;
                case 0xB:
                  if ((_DWORD)v9 != 4) {
                    goto LABEL_112;
                  }
                  if (((a2 + 24) & 7) != 0) {
                    goto LABEL_140;
                  }
                  int v34 = *(unsigned int **)(a2 + 24);
                  if (!v34) {
                    goto LABEL_140;
                  }
                  unsigned int v35 = *v34;
                  unsigned int v36 = (const void *)(v3 + 1592);
                  if (((v3 + 1592) & 7) != 0) {
                    goto LABEL_140;
                  }
                  if ((((_BYTE)v3 - 96) & 7) != 0) {
                    goto LABEL_140;
                  }
                  unsigned int v37 = bswap32(v35);
                  *(_DWORD *)(v3 + 1952) = v37;
                  uint64_t result = *(void *)(v3 + 8);
                  uint64_t v16 = 2 * ((v37 & 0xF) == 0);
                  uint64_t result = (uint64_t)sub_100057CB8((char *)result, v36);
                  int v15 = 0;
                  goto LABEL_132;
                case 0xC:
                  if ((_DWORD)v9 != 4) {
                    goto LABEL_112;
                  }
                  if (((a2 + 24) & 7) != 0) {
                    goto LABEL_140;
                  }
                  uint64_t v38 = *(unsigned int **)(a2 + 24);
                  if (!v38) {
                    goto LABEL_140;
                  }
                  unsigned int v39 = *v38;
                  int v24 = (const void *)(v3 + 1592);
                  if (((v3 + 1592) & 7) != 0) {
                    goto LABEL_140;
                  }
                  if ((((_BYTE)v3 - 92) & 3) != 0) {
                    goto LABEL_140;
                  }
                  *(_DWORD *)(v3 + 1956) = bswap32(v39);
                  if ((((_BYTE)v3 - 84) & 3) != 0) {
                    goto LABEL_140;
                  }
                  *(_BYTE *)(v3 + 1964) = 1;
                  goto LABEL_108;
                case 0xD:
                  if ((_DWORD)v9 != 4) {
                    goto LABEL_112;
                  }
                  if (((a2 + 24) & 7) != 0) {
                    goto LABEL_140;
                  }
                  uint64_t v40 = *(unsigned int **)(a2 + 24);
                  if (!v40) {
                    goto LABEL_140;
                  }
                  unsigned int v41 = *v40;
                  int v24 = (const void *)(v3 + 1592);
                  if (((v3 + 1592) & 7) != 0 || (((_BYTE)v3 - 88) & 7) != 0) {
                    goto LABEL_140;
                  }
                  *(_DWORD *)(v3 + 1960) = bswap32(v41);
                  *(_BYTE *)(v3 + 1965) = 1;
                  goto LABEL_108;
                default:
                  goto LABEL_112;
              }

              do
              {
                if (((a2 + 24) & 7) != 0) {
                  goto LABEL_140;
                }
                int v14 = *v10;
                if (__CFADD__(*v10, v13)) {
                  goto LABEL_141;
                }
                if (!v14) {
                  goto LABEL_140;
                }
                if (!v14[v13]) {
                  goto LABEL_24;
                }
                ++v13;
              }

              while (v9 >= v13);
              unsigned __int8 v13 = v12;
LABEL_24:
              if (v9 <= v13)
              {
LABEL_28:
                int v15 = 0;
                if (v8 == 8) {
                  uint64_t v16 = 2LL;
                }
                else {
                  uint64_t v16 = 1LL;
                }
                goto LABEL_132;
              }

              int v15 = 0;
              switch(v8)
              {
                case 6:
                  if ((((_BYTE)v3 + 56) & 7) != 0) {
                    goto LABEL_140;
                  }
                  uint64_t result = v3 + 1696;
                  int v15 = 32;
                  goto LABEL_126;
                case 7:
                  if ((((_BYTE)v3 + 56) & 7) != 0) {
                    goto LABEL_140;
                  }
                  uint64_t result = v3 + 1760;
                  int v15 = 64;
                  goto LABEL_126;
                case 8:
                  if ((((_BYTE)v3 + 56) & 7) != 0) {
                    goto LABEL_140;
                  }
                  int v15 = 0;
                  uint64_t result = v3 + 1824;
                  goto LABEL_126;
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                  goto LABEL_127;
                case 14:
                  if ((((_BYTE)v3 + 56) & 7) != 0) {
                    goto LABEL_140;
                  }
                  int v15 = 0;
                  uint64_t result = v3 + 1888;
                  goto LABEL_126;
                default:
                  if (v8 != 1) {
                    goto LABEL_127;
                  }
                  uint64_t result = v3 + 1592;
                  if (((v3 + 1592) & 7) != 0) {
                    goto LABEL_140;
                  }
                  int v15 = 4;
LABEL_126:
                  memcpy((void *)result, *v10, v9);
LABEL_127:
                  uint64_t result = *(void *)(v3 + 8);
                  if (!result || (result & 7) != 0 || ((v3 + 1592) & 3) != 0) {
                    goto LABEL_140;
                  }
                  uint64_t result = (uint64_t)sub_100057CB8((char *)result, (const void *)(v3 + 1592));
                  break;
              }

LABEL_140:
  __break(0x5516u);
LABEL_141:
  __break(0x5513u);
  return result;
}

    __break(0x550Au);
    goto LABEL_141;
  }

uint64_t sub_1000843D0(uint64_t result, uint64_t a2)
{
  if (!a2) {
    goto LABEL_11;
  }
  __int16 v4 = -21846;
  char v5 = -86;
  if ((a2 & 7) != 0) {
    goto LABEL_12;
  }
  uint64_t v2 = (_BYTE *)result;
  uint64_t result = sub_10001864C(a2);
  if (!result)
  {
LABEL_11:
    __break(0x5518u);
    goto LABEL_12;
  }

  LOBYTE(v4) = v2[16];
  HIBYTE(v4) = v2[17];
  if ((((_DWORD)v2 + 18) & 1) != 0)
  {
LABEL_12:
    __break(0x5516u);
    goto LABEL_13;
  }

  if (&v6 == 0LL || (unint64_t)&v4 < 0xFFFFFFFFFFFFFFFDLL)
  {
    char v5 = v2[18];
    return sub_1000ABB10(result, 0, 0LL, 43, 0, &v4, 3u);
  }

uint64_t sub_100084494(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_70;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_70;
  }
  if (!a2) {
    goto LABEL_70;
  }
  if ((a2 & 7) != 0) {
    goto LABEL_70;
  }
  __int16 v4 = (_DWORD *)(a2 + 20);
  if (((a2 + 20) & 3) != 0) {
    goto LABEL_70;
  }
  if (((a2 + 24) & 7) != 0) {
    goto LABEL_70;
  }
  uint64_t result = *(void *)(result + 8);
  if (!result || (result & 7) != 0) {
    goto LABEL_70;
  }
  int v5 = *(_DWORD *)(a2 + 20);
  int v6 = *(_DWORD *)(a2 + 24);
  uint64_t result = sub_10001864C(result);
  if (!result)
  {
    __break(0x5518u);
    goto LABEL_70;
  }

  if ((((_BYTE)v2 - 56) & 7) != 0) {
    goto LABEL_70;
  }
  uint64_t v7 = result;
  if ((*(_BYTE *)(v2 + 2184) & 1) != 0 && (*(_BYTE *)(v2 + 2192) & 1) != 0) {
    return 6LL;
  }
  int v8 = v6 >> 4;
  int v9 = v8 == 2 ? 1 : 5;
  unsigned int v10 = v8 - 1;
  unsigned int v11 = v8 == 1 ? 0 : v9;
  __int16 v27 = 116;
  uint64_t result = sub_100062E78(v2, -1, &v27, 0LL, 0xFFFFu);
  if ((v7 & 7) != 0) {
    goto LABEL_70;
  }
  uint64_t v12 = 1LL;
  if (v10 > 1 || (v6 & 3) != 0)
  {
LABEL_22:
    uint64_t result = sub_100061274();
    if (result)
    {
      if ((result & 7) == 0)
      {
        (*(void (**)(uint64_t, void, uint64_t))(*(void *)result + 144LL))(result, *(void *)(v2 + 8), 1LL);
        uint64_t result = sub_100061274();
        if (result)
        {
          if ((result & 7) == 0)
          {
            (*(void (**)(uint64_t, void, uint64_t))(*(void *)result + 160LL))( result,  *(void *)(v2 + 8),  1LL);
            uint64_t result = sub_100061274();
            if (result)
            {
              if ((result & 7) == 0)
              {
                sub_100054CE8((unsigned __int16 *)result, (void *)v7);
                return v12;
              }
            }
          }
        }
      }
    }

    goto LABEL_70;
  }

  uint64_t result = sub_100061274();
  if (!result || (result & 7) != 0) {
    goto LABEL_70;
  }
  uint64_t v13 = sub_10008E880(result, v11);
  if (!v13) {
    goto LABEL_22;
  }
  int v14 = (void *)v13;
  uint64_t result = sub_100061274();
  if (!result
    || (result & 7) != 0
    || (int v15 = sub_100054A7C(result, (uint64_t)v14), (result = sub_100061274()) == 0)
    || (result & 7) != 0)
  {
LABEL_70:
    __break(0x5516u);
    goto LABEL_71;
  }

  uint64_t result = sub_100054F4C(result, (uint64_t)v14);
  if (result <= 7)
  {
    int v16 = result;
    if ((_DWORD)result == (*(unsigned int (**)(uint64_t))(*(void *)v7 + 216LL))(v7))
    {
      uint64_t result = sub_100061274();
      if (!result || (result & 7) != 0) {
        goto LABEL_70;
      }
      uint64_t v17 = sub_10008E550(result, (uint64_t)v14, 0);
      if (v17)
      {
        uint64_t v18 = v17;
        uint64_t result = sub_100061274();
        if (!result) {
          goto LABEL_70;
        }
        if ((result & 7) != 0) {
          goto LABEL_70;
        }
        sub_10008E1F0(result, *(void *)(v2 + 8), v18);
        uint64_t result = sub_100061274();
        if (!result || (result & 7) != 0) {
          goto LABEL_70;
        }
        sub_10008E1F0(result, v18, *(void *)(v2 + 8));
      }
    }

    if (!v5) {
      goto LABEL_21;
    }
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 216LL))(v7);
    if (v16 != (_DWORD)result) {
      goto LABEL_21;
    }
    if ((v15 + 8) <= 0xF)
    {
      if (v15 != 6) {
        goto LABEL_21;
      }
      *(void *)&__int128 v19 = 0xAAAAAAAAAAAAAAAALL;
      *((void *)&v19 + 1) = 0xAAAAAAAAAAAAAAAALL;
      __int128 v25 = v19;
      __int128 v26 = v19;
      v24[0] = v19;
      v24[1] = v19;
      LODWORD(v25) = 0;
      DWORD1(v24[0]) = 0;
      if (((a2 + 16) & 7) == 0)
      {
        LOBYTE(v26) = *(_BYTE *)(a2 + 16);
        DWORD1(v26) = *v4;
        uint64_t result = sub_100061274();
        if (result)
        {
          if ((result & 7) == 0)
          {
            DWORD2(v26) = v6 & 0xC | 2;
            HIDWORD(v26) = sub_10008D0AC(result, (uint64_t)v14);
            sub_100083290(v2, &v25, (uint64_t)v24, 1);
            uint64_t v12 = v20;
            if ((_DWORD)v20) {
              goto LABEL_22;
            }
            uint64_t result = sub_100061274();
            if (result)
            {
              if ((result & 7) == 0)
              {
                sub_100054D7C(result, v14, (void *)v7);
                if (!v21)
                {
                  uint64_t result = sub_100061274();
                  if (result)
                  {
                    if ((result & 7) == 0)
                    {
                      int v22 = sub_10008D0AC(result, (uint64_t)v14);
                      uint64_t result = sub_100061274();
                      if (result)
                      {
                        if ((result & 7) == 0)
                        {
                          sub_10008D008(result, v7, v22);
                          else {
                            int v23 = 3100;
                          }
                          sub_100062D14((void *)v2, -1, 116, 0LL, v23);
                          return 0LL;
                        }
                      }
                    }
                  }

                  goto LABEL_70;
                }

void sub_10008483C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_38;
  }
  if (!a2 || !a3) {
    return;
  }
  if ((a2 & 7) != 0 || (((_BYTE)a2 + 8) & 7) != 0) {
    goto LABEL_38;
  }
  *(void *)(a2 + 8) = a3;
  if (!*(_DWORD *)a2)
  {
    if ((a3 & 7) != 0 || ((a3 + 4) & 3) != 0) {
      goto LABEL_38;
    }
    unsigned int v9 = *(_DWORD *)(a3 + 4);
    if (v9 >= 0x200) {
      goto LABEL_39;
    }
    if (v9) {
      goto LABEL_33;
    }
    if (((a2 + 20) & 3) == 0)
    {
      if ((*(_BYTE *)(a2 + 20) & 2) == 0) {
        goto LABEL_33;
      }
      if (((a3 + 8) & 7) == 0)
      {
        unsigned int v10 = *(_DWORD *)(a3 + 8);
        if (v10 <= 0xF)
        {
          if (v10) {
            goto LABEL_33;
          }
          int v8 = *(_DWORD *)(a1 + 192) | 0x80;
          goto LABEL_31;
        }

        goto LABEL_39;
      }
    }

uint64_t sub_1000849C0(uint64_t result, char a2)
{
  char v4 = a2;
  if (!result || (uint64_t v2 = result, (result & 7) != 0) || (result += 168LL, ((v2 + 168) & 7) != 0) || ((v2 + 184) & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    unint64_t v3 = *(void *)(v2 + 176);
    if (v3 >= *(void *)(v2 + 184))
    {
      uint64_t result = sub_10008849C((uint64_t *)result, &v4);
      goto LABEL_9;
    }

    uint64_t result = (uint64_t)sub_100088434((void *)result, &v4);
    if (v3 != -1LL)
    {
      uint64_t result = v3 + 1;
LABEL_9:
      *(void *)(v2 + 176) = result;
      return result;
    }
  }

  __break(0x5513u);
  return result;
}

uint64_t sub_100084A44(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result) {
    goto LABEL_81;
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_81;
  }
  uint64_t v4 = result + 1992;
  if (((result + 1992) & 7) != 0) {
    goto LABEL_81;
  }
  unsigned int v6 = sub_100084E08(result + 1992);
  uint64_t result = sub_100084E34(v3 + 1992);
  unsigned int v7 = v6 - result;
  if (v6 >= result)
  {
    unsigned int v8 = result;
    if (result < v6)
    {
      LODWORD(v9) = 0;
      else {
        int v10 = result;
      }
      int v11 = result;
      while (v10 != v11)
      {
        uint64_t result = sub_100084EB8(v3 + 1992, (unsigned __int16)v11);
        BOOL v12 = __CFADD__((_DWORD)v9, result + 2);
        size_t v9 = (v9 + result + 2);
        if (v12) {
          goto LABEL_85;
        }
        if (v6 == ++v11)
        {
          if (!v7) {
            goto LABEL_75;
          }
          goto LABEL_14;
        }
      }

      goto LABEL_83;
    }

    size_t v9 = 0LL;
    if (!v7)
    {
LABEL_75:
      unsigned __int16 v16 = 1;
      uint64_t result = (uint64_t)operator new[](1uLL);
      uint64_t v13 = (void *)result;
      *(_BYTE *)uint64_t result = 0;
LABEL_76:
      if (!a2) {
        goto LABEL_81;
      }
LABEL_79:
      if ((a2 & 7) == 0)
      {
        sub_1000AC324(a2, a3, 0, 0LL, 58, *(_DWORD *)(a2 + 68), v13, v16);
        *(_BYTE *)(a2 + 132) |= 2u;
        operator delete[](v13);
        return 0LL;
      }

      goto LABEL_81;
    }

uint64_t sub_100084E08(uint64_t result)
{
  if (result && (result & 7) == 0 && (((_BYTE)result + 24) & 7) == 0) {
    return (*(void *)(result + 32) - *(void *)(result + 24)) >> 3;
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_100084E34(uint64_t result)
{
  if (!result || (result & 7) != 0 || (((_BYTE)result - 88) & 7) != 0)
  {
LABEL_16:
    __break(0x5516u);
LABEL_17:
    __break(0x5513u);
    goto LABEL_18;
  }

  uint64_t v1 = *(void *)(result + 168);
  unint64_t v2 = *(void *)(result + 176) - v1 - 1;
  if (*(void *)(result + 176) - v1 == 1) {
    return 0LL;
  }
  if (*(void *)(result + 176) != v1)
  {
    if (*(void *)(result + 176) - v1 != 1)
    {
      unint64_t v3 = 0LL;
      uint64_t result = 0LL;
      while (v3 <= ~v1)
      {
        if (!v1) {
          goto LABEL_16;
        }
        int v4 = *(unsigned __int8 *)(v1 + v3);
        BOOL v5 = __CFADD__((_DWORD)result, v4);
        uint64_t result = (result + v4);
        if (v5 || (unsigned int v6 = v3 + 1, (_DWORD)v3 == -1))
        {
          __break(0x5500u);
          goto LABEL_16;
        }

        ++v3;
        if (v2 <= v6) {
          return result;
        }
      }

      goto LABEL_17;
    }

    return 0LL;
  }

uint64_t sub_100084EB8(uint64_t result, unsigned int a2)
{
  if (!result || (result & 7) != 0 || ((result + 24) & 7) != 0)
  {
LABEL_13:
    __break(0x5516u);
    goto LABEL_14;
  }

  uint64_t v2 = *(void *)(result + 24);
  if (!__CFADD__(v2, 8LL * a2))
  {
    if (v2)
    {
      unint64_t v3 = (unsigned __int8 **)(v2 + 8LL * a2);
      if ((v3 & 7) == 0)
      {
        int v4 = *v3;
      }
    }

    goto LABEL_13;
  }

uint64_t sub_100084F10(uint64_t result)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_105;
  }
  int v1 = *(_DWORD *)(result + 192);
  int v2 = *(_DWORD *)(result + 196);
  if ((v1 & ~v2) != 0)
  {
    int v5 = *(_DWORD *)(result + 200);
    if (v5 == v2) {
      unsigned int v6 = 2;
    }
    else {
      unsigned int v6 = 3;
    }
    if ((v1 & ~v5) != 0) {
      return v6;
    }
    else {
      return 1LL;
    }
  }

  int v3 = *(_DWORD *)(result + 204);
  if ((v3 & 8) != 0)
  {
    uint64_t v7 = *(void *)(result + 56);
    if (!v7) {
      goto LABEL_105;
    }
    if ((v7 & 7) != 0) {
      goto LABEL_105;
    }
    unsigned int v8 = (_BYTE *)(v7 + 16);
    if ((*v8 & 1) != 0) {
      int v4 = 8;
    }
    else {
      int v4 = 7;
    }
  }

  else
  {
    int v4 = 8;
  }

  if ((v3 & 0x507) == 0) {
    goto LABEL_23;
  }
  uint64_t v9 = *(void *)(result + 56);
  if (!v9 || (v9 & 7) != 0 || ((v9 + 16) & 7) != 0) {
    goto LABEL_105;
  }
  if ((*(_WORD *)(v9 + 16) & 0x1004) == 0)
  {
    BOOL v12 = (_WORD *)(v9 + 24);
    if ((*v12 & 0x1004) == 0) {
      int v4 = 7;
    }
    if ((v3 & 0x40000) == 0) {
      goto LABEL_36;
    }
  }

  else
  {
LABEL_23:
    if ((v3 & 0x40000) == 0) {
      goto LABEL_36;
    }
  }

  uint64_t v10 = *(void *)(result + 56);
  if (!v10 || (v10 & 7) != 0 || ((v10 + 16) & 7) != 0) {
    goto LABEL_105;
  }
  if ((*(_BYTE *)(v10 + 17) & 0x10) == 0)
  {
    uint64_t v11 = v10 + 24;
    if ((v11 & 7) != 0) {
      goto LABEL_105;
    }
    if ((*(_BYTE *)(v11 + 1) & 0x10) == 0) {
      int v4 = 7;
    }
  }

void sub_100085294(void *a1)
{
  if (!a1) {
    goto LABEL_29;
  }
  unsigned __int8 v17 = 0;
  if (!a1[263])
  {
    char v4 = 0;
    goto LABEL_12;
  }

  if (((unint64_t)(a1 + 262) & 7) != 0
    || (uint64_t v16 = a1 + 262, sub_100088264(&v16), (v2 = sub_100003154((uint64_t *)&v16)) == 0LL)
    || (v2 & 7) != 0)
  {
LABEL_29:
    __break(0x5516u);
    goto LABEL_30;
  }

  int v3 = *(unsigned __int8 *)v2;
  if (v3 == 255)
  {
LABEL_30:
    __break(0x5507u);
    return;
  }

  char v4 = v3 + 1;
  unsigned __int8 v17 = v3 + 1;
LABEL_12:
  uint64_t v5 = sub_100061274();
  if (!v5) {
    goto LABEL_29;
  }
  uint64_t v6 = v5;
  if ((v5 & 7) != 0) {
    goto LABEL_29;
  }
  uint64_t v7 = a1[1];
  if (!v7 || (v7 & 7) != 0) {
    goto LABEL_29;
  }
  uint64_t v8 = sub_10001864C(v7);
  if ((sub_10008C710(v6, v8) & 0x2000) == 0) {
    return;
  }
  uint64_t v9 = operator new(0x28uLL);
  uint64_t v10 = v9;
  if ((((_BYTE)v9 + 24) & 7) != 0) {
    goto LABEL_29;
  }
  v9[3] = off_10011B6A0;
  if ((((_BYTE)v9 + 16) & 7) != 0) {
    goto LABEL_29;
  }
  *((_BYTE *)v9 + 16) = v4;
  if ((((_BYTE)v9 + 32) & 7) != 0) {
    goto LABEL_29;
  }
  *((_DWORD *)v9 + 8) = 0;
  if ((((_BYTE)v9 + 36) & 3) != 0) {
    goto LABEL_29;
  }
  *((_BYTE *)v9 + 36) = 1;
  sub_1000824BC((uint64_t)(a1 + 261), &v17);
  *uint64_t v11 = v10;
  uint64_t v12 = a1[159];
  if ((v12 & 0x200) != 0) {
    return;
  }
  uint64_t v13 = v12 | 0x200;
  a1[159] = v13;
  if ((((_BYTE)a1 + 8) & 7) != 0) {
    goto LABEL_29;
  }
  uint64_t v14 = a1[257] | v13;
  a1[257] = v14;
  uint64_t v15 = a1[1];
  if (!v15 || (v15 & 7) != 0) {
    goto LABEL_29;
  }
  sub_100057C88(v15, v14);
}

std::string *sub_10008542C@<X0>(std::string *result@<X0>, std::string *a2@<X8>)
{
  if (result
    && (result & 7) == 0
    && ((unint64_t)&result->__r_.__value_.__l.__size_ & 7) == 0
    && a2)
  {
    return std::string::basic_string(a2, (const std::string *)&result->__r_.__value_.__r.__words[1]);
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_100085454(uint64_t result)
{
  if (!result)
  {
    __break(0x5518u);
LABEL_13:
    __break(0x5516u);
    goto LABEL_14;
  }

  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_13;
  }
  sub_10005789C(result, 0);
  uint64_t result = sub_100061274();
  if (!result || (result & 7) != 0) {
    goto LABEL_13;
  }
  uint64_t result = sub_10008C2EC(result, v1, 0);
  if (!result)
  {
    BOOL v3 = 0LL;
    goto LABEL_11;
  }

  if ((result & 7) != 0 || ((result + 2200) & 7) != 0) {
    goto LABEL_13;
  }
  unsigned int v2 = *(unsigned __int8 *)(result + 2200);
  if (v2 <= 1)
  {
    BOOL v3 = v2 != 0;
LABEL_11:
    sub_1000578E8(v1, 0);
    return v3;
  }

void *sub_1000854F4(void *result)
{
  if (!result) {
    goto LABEL_13;
  }
  uint64_t v1 = result;
  *uint64_t result = 0LL;
  result[1] = 0LL;
  if ((((_BYTE)result + 16) & 7) != 0) {
    goto LABEL_13;
  }
  result[2] = 0LL;
  result[3] = 0LL;
  result[4] = 0LL;
  if ((((_BYTE)result + 40) & 7) != 0) {
    goto LABEL_13;
  }
  result[5] = 0LL;
  result[9] = 0LL;
  result[10] = 0LL;
  if ((((_BYTE)result + 88) & 7) != 0
    || (result[11] = 0LL, result += 12, ((unint64_t)(v1 + 12) & 7) != 0)
    || (sub_100009E64(result), uint64_t result = v1 + 17, ((unint64_t)(v1 + 17) & 7) != 0)
    || (uint64_t result = sub_100009E64(result), ((unint64_t)(v1 + 21) & 7) != 0)
    || (v1[21] = 0LL, v1[22] = 0LL, (((_BYTE)v1 - 72) & 7) != 0))
  {
LABEL_13:
    __break(0x5516u);
  }

  else
  {
    v1[23] = 0LL;
    sub_10006EC68((uint64_t)v1);
    return v1;
  }

  return result;
}

void sub_1000855D0(uint64_t *a1, uint64_t a2)
{
  uint64_t v15 = a2;
  unint64_t v3 = a1[1];
  if (v3 >= a1[2])
  {
    uint64_t v4 = sub_1000879E4(a1, &v15);
  }

  else
  {
    sub_100024F94(a1, &v15);
    if (v3 >= 0xFFFFFFFFFFFFFFF8LL) {
      goto LABEL_43;
    }
    uint64_t v4 = v3 + 8;
  }

  a1[1] = v4;
  uint64_t v5 = v15;
  if (!v15 || (v15 & 7) != 0)
  {
LABEL_42:
    __break(0x5516u);
LABEL_43:
    __break(0x5513u);
LABEL_44:
    __break(0x550Au);
    return;
  }

  switch(*(_DWORD *)v15)
  {
    case 0:
      a1[6] = v15;
      return;
    case 1:
      a1[7] = v15;
      if (((v5 + 16) & 7) != 0) {
        goto LABEL_42;
      }
      a1[8] = *(void *)(v5 + 16);
      return;
    case 2:
    case 3:
    case 7:
      return;
    case 4:
      uint64_t v6 = a1 + 9;
      unint64_t v7 = a1[10];
      if (v7 >= a1[11])
      {
        uint64_t v8 = sub_1000879E4(v6, &v15);
      }

      else
      {
        sub_100024F94(v6, &v15);
        if (v7 >= 0xFFFFFFFFFFFFFFF8LL) {
          goto LABEL_43;
        }
        uint64_t v8 = v7 + 8;
      }

      a1[10] = v8;
      unsigned __int8 v14 = -86;
      uint64_t v5 = v15;
      if (!v15) {
        goto LABEL_42;
      }
      if ((v15 & 7) != 0) {
        goto LABEL_42;
      }
      if (((v15 + 16) & 7) != 0) {
        goto LABEL_42;
      }
      unsigned __int8 v14 = *(_BYTE *)(v15 + 16);
      sub_1000824BC((uint64_t)(a1 + 12), &v14);
      goto LABEL_38;
    case 5:
      if (((v15 + 8) & 7) != 0) {
        goto LABEL_42;
      }
      uint64_t v9 = *(void *)(v15 + 8);
      if (!v9) {
        goto LABEL_25;
      }
      if ((v9 & 7) != 0) {
        goto LABEL_42;
      }
      uint64_t v10 = (unsigned int *)(v9 + 8);
      unsigned int v11 = *v10;
      if (v11 >= 0x10) {
        goto LABEL_44;
      }
      if (v11)
      {
LABEL_25:
        a1[15] = 0LL;
        return;
      }

      if (((v15 + 16) & 7) != 0) {
        goto LABEL_42;
      }
      a1[15] = *(void *)(v15 + 16);
      break;
    case 6:
      a1[16] = v15;
      return;
    case 8:
      unsigned __int8 v13 = -86;
      if (((v15 + 16) & 7) != 0) {
        goto LABEL_42;
      }
      unsigned __int8 v13 = *(_BYTE *)(v15 + 16);
      sub_1000824BC((uint64_t)(a1 + 17), &v13);
LABEL_38:
      *uint64_t v12 = v5;
      return;
    case 0x10:
      a1[20] = v15;
      return;
    default:
      sub_1000CEAEC( 0,  4,  "%s:%d Unknown ACK type %X in AddFIDTokenValue\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp",  17712,  *(_DWORD *)v15);
      return;
  }

void sub_1000857FC(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v15 = a2;
  if (!a1) {
    goto LABEL_41;
  }
  if ((a1 & 7) != 0) {
    goto LABEL_41;
  }
  unint64_t v3 = (uint64_t *)(a1 + 24);
  if (((a1 + 24) & 7) != 0 || ((a1 + 40) & 7) != 0) {
    goto LABEL_41;
  }
  unint64_t v4 = *(void *)(a1 + 32);
  if (v4 >= *(void *)(a1 + 40))
  {
    uint64_t v5 = sub_1000879E4(v3, &v15);
  }

  else
  {
    sub_100024F94(v3, &v15);
    if (v4 >= 0xFFFFFFFFFFFFFFF8LL) {
      goto LABEL_43;
    }
    uint64_t v5 = v4 + 8;
  }

  *(void *)(a1 + 32) = v5;
  uint64_t v6 = v15;
  unsigned int v7 = v15[12];
  if (v7 >= 2)
  {
LABEL_42:
    __break(0x550Au);
LABEL_43:
    __break(0x5513u);
LABEL_44:
    __break(0x5507u);
    return;
  }

  unsigned __int8 v8 = v15[12] ? 4 : 3;
  *uint64_t v15 = v8;
  if (((unint64_t)(v6 + 4) & 3) != 0)
  {
LABEL_41:
    __break(0x5516u);
    goto LABEL_42;
  }

  unsigned int v9 = *((_DWORD *)v6 + 1);
  if (v9 > 0x1FF) {
    goto LABEL_42;
  }
  switch(v9)
  {
    case 0u:
      unsigned int v10 = *((_DWORD *)v6 + 2);
      if (v10 > 0xF) {
        goto LABEL_42;
      }
      if (v10 != 4)
      {
        LOBYTE(v9) = 0;
        goto LABEL_35;
      }

      unsigned int v11 = v6[24] + v8;
      if (v11 <= 0xFF)
      {
        LOBYTE(v9) = 0;
        *uint64_t v6 = v11;
        goto LABEL_35;
      }

      goto LABEL_44;
    case 1u:
      goto LABEL_35;
    case 2u:
      if (!v7) {
        return;
      }
      unsigned int v12 = v6[13] - 1;
      if (v12 >= 7 || ((0x79u >> v12) & 1) == 0) {
        return;
      }
      unsigned int v9 = dword_1000DEE10[(char)v12];
      goto LABEL_35;
    case 3u:
    case 4u:
    case 5u:
    case 7u:
    case 8u:
      return;
    case 6u:
      LOBYTE(v9) = 8;
      goto LABEL_35;
    default:
      if (v9 != 256)
      {
        sub_1000CEAEC( 0,  4,  "%s:%d Unknown ACK type %X in AddFIDTokenAck\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp",  17828,  v9);
        return;
      }

      if ((*(_BYTE *)(a1 + 192) & 0x80) == 0) {
        return;
      }
      LOBYTE(v9) = 7;
LABEL_35:
      *(_DWORD *)(a1 + 200) |= 1 << v9;
      unsigned __int8 v13 = (unsigned int *)(v6 + 8);
      unsigned int v14 = *v13;
      if (v14 > 0xF) {
        goto LABEL_42;
      }
      if (v14) {
        *(_DWORD *)(a1 + 196) = 0;
      }
      else {
        *(_DWORD *)(a1 + 196) |= 1 << v9;
      }
      break;
  }

uint64_t sub_100085A08(uint64_t result)
{
  if (result)
  {
    if ((result & 7) == 0)
    {
      unsigned __int8 v16 = -86;
      uint64_t v15 = 0xAAAAAAAAAAAAAAAALL;
      if ((((_BYTE)result - 120) & 7) == 0)
      {
        uint64_t v15 = *(void *)(result + 136);
        uint64_t v1 = result + 144;
        if (((result + 144) & 7) == 0)
        {
          if (v15 == v1) {
            return result;
          }
          uint64_t v2 = result + 96;
          uint64_t v3 = (result + 96) & 7;
          uint64_t v4 = result + 104;
          uint64_t v5 = (result + 104) & 7;
          while (1)
          {
            uint64_t result = (uint64_t)sub_100003154(&v15);
            if (!result) {
              break;
            }
            if ((result & 7) != 0) {
              break;
            }
            unsigned __int8 v16 = *(_BYTE *)result;
            uint64_t result = (uint64_t)sub_100003154(&v15);
            if (!result) {
              break;
            }
            if ((result & 7) != 0) {
              break;
            }
            if (((result + 8) & 7) != 0) {
              break;
            }
            uint64_t v6 = *(void *)(result + 8);
            if (!v6) {
              break;
            }
            if ((v6 & 7) != 0) {
              break;
            }
            unsigned int v7 = (int *)(v6 + 20);
            int v8 = *v7;
            uint64_t result = (uint64_t)sub_100003154(&v15);
            if (!result) {
              break;
            }
            if ((result & 7) != 0) {
              break;
            }
            if (((result + 8) & 7) != 0) {
              break;
            }
            uint64_t v9 = *(void *)(result + 8);
            if (!v9) {
              break;
            }
            if ((v9 & 7) != 0) {
              break;
            }
            unsigned int v10 = (unsigned __int8 *)(v9 + 24);
            int v11 = *v10;
            uint64_t v14 = 0xAAAAAAAAAAAAAAAALL;
            if (v3) {
              break;
            }
            uint64_t result = sub_100088300(v2, &v16);
            uint64_t v14 = result;
            if (v5) {
              break;
            }
            if (v4 != result && !v11)
            {
              uint64_t result = (uint64_t)sub_100003154(&v14);
              if (!result) {
                break;
              }
              if ((result & 7) != 0) {
                break;
              }
              if (((result + 8) & 7) != 0) {
                break;
              }
              uint64_t v12 = *(void *)(result + 8);
              if (!v12) {
                break;
              }
              if ((v12 & 7) != 0) {
                break;
              }
              unsigned __int8 v13 = (_DWORD *)(v12 + 32);
              *unsigned __int8 v13 = v8;
            }

            uint64_t result = (uint64_t)sub_100008A4C(&v15);
            if (v15 == v1) {
              return result;
            }
          }
        }
      }
    }
  }

  __break(0x5516u);
LABEL_36:
  __break(0x550Au);
  return result;
}

void sub_100085BC4(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_29;
  }
  uint64_t v2 = *(void **)a1;
  if (*(void *)a1 != *(void *)(a1 + 8))
  {
    uint64_t v3 = *(void *)a1 & 7LL;
    do
    {
      if (!v2 || v3) {
        goto LABEL_29;
      }
      uint64_t v4 = (_DWORD *)*v2;
      if (!*v2 || (*v2 & 7LL) != 0) {
        goto LABEL_29;
      }
      int v6 = *v4;
      if (*v4 == 5)
      {
        unsigned int v7 = (void **)(v4 + 4);
      }

      else
      {
        if (v6 != 4 && v6 != 2) {
          goto LABEL_20;
        }
        unsigned int v7 = (void **)(v4 + 6);
      }

      if (*v7) {
        operator delete[](*v7);
      }
LABEL_20:
      int v8 = (_DWORD *)*v2;
      if (*v2)
      {
        operator delete(v8);
      }

      ++v2;
    }

    while (v2 != *(void **)(a1 + 8));
  }

  sub_10005C778(a1);
  *(void *)(a1 + 48) = 0LL;
  *(void *)(a1 + 56) = 0LL;
  if (((a1 + 72) & 7) != 0
    || (sub_10005C778(a1 + 72), ((a1 + 96) & 7) != 0)
    || (sub_100008B2C(a1 + 96), ((a1 + 136) & 7) != 0))
  {
LABEL_29:
    __break(0x5516u);
LABEL_30:
    __break(0x5513u);
  }

  else
  {
    sub_100008B2C(a1 + 136);
    *(void *)(a1 + 128) = 0LL;
    *(void *)(a1 + 160) = 0LL;
  }

void sub_100085CD4(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0 && ((a1 + 24) & 7) == 0)
  {
    uint64_t v2 = *(void **)(a1 + 24);
    if (v2 == *(void **)(a1 + 32))
    {
LABEL_23:
      sub_10005C778(a1 + 24);
      return;
    }

    uint64_t v3 = *(void *)(a1 + 24) & 7LL;
    while (v2 && !v3)
    {
      uint64_t v4 = (char *)*v2;
      if (!*v2 || (*v2 & 7LL) != 0) {
        break;
      }
      unsigned int v6 = *((_DWORD *)v4 + 2);
      if (v6 >= 0x10) {
        goto LABEL_25;
      }
      if (v6 == 4)
      {
        unsigned int v7 = (void **)(v4 + 16);
        if (*v7) {
          operator delete[](*v7);
        }
      }

      int v8 = (char *)*v2;
      if (*v2)
      {
        operator delete(v8);
      }

      if (++v2 == *(void **)(a1 + 32)) {
        goto LABEL_23;
      }
    }
  }

  __break(0x5516u);
LABEL_25:
  __break(0x550Au);
LABEL_26:
  __break(0x5513u);
}

uint64_t sub_100085DA4(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_100087544(result, *(void *)result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_100085DBC(uint64_t a1, char a2, const void *a3, unsigned int a4, int a5)
{
  uint64_t result = sub_1000B6CE0();
  if (!result || (result & 7) != 0) {
    goto LABEL_20;
  }
  uint64_t result = sub_10008F004(result, a1);
  if (!a4 || !a3 || !(_DWORD)result)
  {
    uint64_t result = sub_1000B6CE0();
    if (result && (result & 7) == 0)
    {
      int v14 = sub_10008F004(result, a1);
      sub_1000CEAEC( 0,  4,  "%s:%d invalid connection(%hhx)(%d) or data(%hhx)=NULL or size(%d)<=0",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp",  18496,  a1,  v14,  (_DWORD)a3,  a4);
      return 0LL;
    }

    goto LABEL_20;
  }

  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_20;
  }
  uint64_t result = sub_10001864C(a1);
  if (a4 == -1)
  {
LABEL_21:
    __break(0x5500u);
    goto LABEL_22;
  }

  uint64_t v11 = result;
  uint64_t result = (uint64_t)operator new[](a4 + 1);
  *(_BYTE *)uint64_t result = a2;
  if (result == -1)
  {
LABEL_22:
    __break(0x5513u);
    goto LABEL_23;
  }

  uint64_t v12 = (void *)result;
  uint64_t result = (uint64_t)memcpy((void *)(result + 1), a3, a4);
  if (!v11 || (v11 & 7) != 0)
  {
LABEL_20:
    __break(0x5516u);
    goto LABEL_21;
  }

  uint64_t result = (*(uint64_t (**)(uint64_t, void))(*(void *)v11 + 16LL))(v11, 0LL);
  if (!((a4 + 1) >> 16))
  {
    uint64_t result = sub_1000ABB10(v11, 0, 0LL, 95, result, v12, (unsigned __int16)(a4 + 1));
    if (result)
    {
      BOOL v13 = sub_1000AB4C4(a1, result, a5, 1u) == 0;
      operator delete[](v12);
      return v13;
    }

    __break(0x5518u);
    goto LABEL_20;
  }

uint64_t sub_100085F4C(uint64_t a1, uint64_t a2, char a3, unsigned int a4, __int16 a5)
{
  uint64_t result = sub_1000B6CE0();
  if (!result || (result & 7) != 0) {
    goto LABEL_12;
  }
  int v11 = sub_10008F004(result, a1);
  uint64_t result = 0LL;
  if (a2 && v11)
  {
    if ((a2 & 7) == 0)
    {
      unsigned int v12 = (unsigned __int16)(*(_WORD *)(a2 + 184) & a5);
      uint64_t result = sub_100086050(a1, a2, 0LL, a4, v12);
      __int16 v14 = -21846;
      __int16 v13 = __rev16(a4);
      if ((unint64_t)&v13 < 0xFFFFFFFFFFFFFFFELL)
      {
        __int16 v14 = __rev16(v12);
        return sub_100081010(a1, a2, a3, 1, &v13, 4u, 0, 0);
      }

uint64_t sub_100086050(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4, __int16 a5)
{
  uint64_t result = sub_1000B6CE0();
  if (!result || (result & 7) != 0) {
    goto LABEL_8;
  }
  uint64_t result = sub_10008F004(result, a1);
  if (a2 && (_DWORD)result)
  {
    if ((a2 & 7) == 0)
    {
      *(_DWORD *)(a2 + 200) = *(_DWORD *)(a2 + 196);
      *(_WORD *)(a2 + 196) = a4;
      *(_WORD *)(a2 + 198) = a5;
      return result;
    }

uint64_t sub_1000860BC(uint64_t result, int a2)
{
  if (!result) {
    goto LABEL_12;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_12;
  }
  uint64_t result = (uint64_t)sub_1000864F8((uint64_t *)result, a2);
  if (!result) {
    goto LABEL_11;
  }
  if ((result & 7) != 0 || ((result + 12) & 3) != 0)
  {
LABEL_12:
    __break(0x5516u);
    goto LABEL_13;
  }

  unsigned int v4 = *(_DWORD *)(result + 12);
  if (v4 < 4)
  {
    if (v4)
    {
      if (((result + 16) & 7) == 0)
      {
        if (*(void *)(result + 16)) {
          return sub_1000865D4(v2, result);
        }
        goto LABEL_11;
      }

      goto LABEL_12;
    }

uint64_t sub_1000861A0(uint64_t result, int a2, unsigned __int8 *a3, int a4)
{
  if (!result) {
    goto LABEL_62;
  }
  uint64_t v4 = result;
  if ((result & 7) != 0) {
    goto LABEL_62;
  }
  if (!a3)
  {
    __break(0x5518u);
    goto LABEL_62;
  }

  char v7 = a2;
  unsigned int v8 = *a3;
  uint64_t result = (uint64_t)sub_1000864F8((uint64_t *)result, a2);
  uint64_t v9 = result;
  uint64_t v24 = result;
  if (!result)
  {
    if (v8 > 3) {
      goto LABEL_63;
    }
    if (v8 != 1) {
      return 4LL;
    }
    uint64_t result = *(void *)(v4 + 8);
    if (!result) {
      goto LABEL_62;
    }
    if ((result & 7) != 0) {
      goto LABEL_62;
    }
    uint64_t v13 = sub_10001864C(result);
    uint64_t result = (uint64_t)operator new(0x118uLL);
    if ((result & 0xF) != 0) {
      goto LABEL_62;
    }
    if (!v13) {
      goto LABEL_62;
    }
    if ((v13 & 7) != 0) {
      goto LABEL_62;
    }
    uint64_t v14 = result;
    int v15 = (*(uint64_t (**)(uint64_t))(*(void *)v13 + 56LL))(v13);
    int v16 = (*(uint64_t (**)(uint64_t))(*(void *)v13 + 64LL))(v13);
    unsigned int v17 = (*(uint64_t (**)(uint64_t))(*(void *)v13 + 216LL))(v13);
    uint64_t v18 = (*(uint64_t (**)(uint64_t))(*(void *)v13 + 224LL))(v13);
    uint64_t result = sub_1000AD9BC(v14, v15, v16, v17, v18, v7, 1u, *(void *)(v4 + 8));
    if ((v14 & 7) != 0) {
      goto LABEL_62;
    }
    uint64_t result = *(void *)(v4 + 8);
    if (!result) {
      goto LABEL_62;
    }
    if ((result & 7) != 0) {
      goto LABEL_62;
    }
    uint64_t result = sub_10001864C(result);
    if (!result || (result & 7) != 0) {
      goto LABEL_62;
    }
    int v19 = (*(uint64_t (**)(uint64_t))(*(void *)result + 216LL))(result);
    uint64_t result = *(void *)(v4 + 8);
    BOOL v21 = (result & 7) == 0 && result != 0;
    if (v19 == 3)
    {
      if (!v21) {
        goto LABEL_62;
      }
      uint64_t result = sub_10001864C(result);
      if (!result || (result & 7) != 0) {
        goto LABEL_62;
      }
      uint64_t v22 = *(void *)(result + 40);
    }

    else
    {
      if (!v21) {
        goto LABEL_62;
      }
      uint64_t v22 = sub_10001864C(result);
    }

    *(void *)(v14 + 40) = v22;
    uint64_t result = (uint64_t)operator new(0x20uLL);
    if ((result & 0xF) != 0) {
      goto LABEL_62;
    }
    if ((result & 7) != 0) {
      goto LABEL_62;
    }
    *(void *)uint64_t result = off_1001060E8;
    *(_BYTE *)(result + 8) = v7;
    *(_DWORD *)(result + 12) = 1;
    *(void *)(result + 16) = v14;
    *(_DWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 28) = -1;
    uint64_t v24 = result;
    *(void *)(v14 + 208) = result;
    uint64_t result = sub_100061274();
    if (!result) {
      goto LABEL_62;
    }
    if ((result & 7) != 0) {
      goto LABEL_62;
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)result + 96LL))(result, v14);
    pthread_mutex_lock((pthread_mutex_t *)(v4 + 2256));
    uint64_t result = v4 + 2232;
    if (((v4 + 2232) & 7) != 0) {
      goto LABEL_62;
    }
    sub_100020DF4(result, &v24);
    uint64_t result = *(void *)(v4 + 8);
    if (!result || (result & 7) != 0) {
      goto LABEL_62;
    }
    uint64_t v12 = 4LL;
    sub_100057A9C(result, 0LL, 4u);
    uint64_t result = pthread_mutex_unlock((pthread_mutex_t *)(v4 + 2256));
    uint64_t v9 = v24;
    if (!v24) {
      return v12;
    }
  }

  if ((v9 & 7) != 0 || ((v9 + 12) & 3) != 0) {
    goto LABEL_62;
  }
  unsigned int v10 = *(_DWORD *)(v9 + 12);
  if (v10 > 3)
  {
LABEL_63:
    __break(0x550Au);
    goto LABEL_64;
  }

  if (v10 != 1) {
    return 4LL;
  }
  if (((v9 + 16) & 7) != 0)
  {
LABEL_62:
    __break(0x5516u);
    goto LABEL_63;
  }

  if (!*(void *)(v9 + 16)) {
    return 4LL;
  }
  if (v8 > 3) {
    goto LABEL_63;
  }
  if (v8 == 1)
  {
    if (!a4) {
      goto LABEL_65;
    }
    uint64_t result = sub_100086E4C(v4, v9, (unsigned __int16 *)(a3 + 1), a4 - 1);
    if (v24)
    {
      if ((v24 & 7) == 0)
      {
        int v23 = (uint64_t *)(v24 + 16);
        if (((v24 + 16) & 7) == 0)
        {
          uint64_t v12 = result;
          uint64_t result = *v23;
          if (*v23)
          {
            if ((result & 7) == 0)
            {
              sub_1000AE02C(result, 1);
              return v12;
            }
          }
        }
      }
    }

    goto LABEL_62;
  }

  if (v8) {
    return 4LL;
  }
  if (a3 == (unsigned __int8 *)-1LL)
  {
LABEL_64:
    __break(0x5513u);
    goto LABEL_65;
  }

  if (a4)
  {
    sub_100086A38(v4, v9, a3 + 1, a4 - 1);
    return v11;
  }

uint64_t *sub_1000864F8(uint64_t *result, int a2)
{
  if (!result
    || (uint64_t v2 = result, (result & 7) != 0)
    || (uint64_t result = (uint64_t *)pthread_mutex_lock((pthread_mutex_t *)(result + 282)),
        uint64_t i = 0xAAAAAAAAAAAAAAAALL,
        ((unint64_t)(v2 + 279) & 7) != 0)
    || ((unint64_t)(v2 + 280) & 7) != 0)
  {
LABEL_20:
    __break(0x5516u);
  }

  else
  {
    uint64_t v4 = v2[280];
    for (i = v4; ; uint64_t v4 = i)
    {
      if ((uint64_t *)v4 == v2 + 279)
      {
        uint64_t v8 = 0LL;
        goto LABEL_19;
      }

      uint64_t result = sub_10000D014(&i);
      if (*result) {
        BOOL v5 = (*result & 7) == 0;
      }
      else {
        BOOL v5 = 0;
      }
      uint64_t v6 = *result + 8;
      if (!v5 || (v6 & 7) != 0) {
        goto LABEL_20;
      }
      sub_10000D048(&i);
    }

    uint64_t v8 = *sub_10000D014(&i);
LABEL_19:
    pthread_mutex_unlock((pthread_mutex_t *)(v2 + 282));
    return (uint64_t *)v8;
  }

  return result;
}

uint64_t sub_1000865D4(uint64_t result, uint64_t a2)
{
  if (!result || (uint64_t v2 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    pthread_mutex_lock((pthread_mutex_t *)(result + 2256));
    sub_100086638((void *)v2, a2, v4, v5, 0);
    uint64_t v7 = v6;
    pthread_mutex_unlock((pthread_mutex_t *)(v2 + 2256));
    return v7;
  }

  return result;
}

void sub_100086638(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v32 = (void *)a2;
  if (!a2) {
    goto LABEL_20;
  }
  if ((a2 & 7) != 0 || ((a2 + 12) & 3) != 0) {
    goto LABEL_78;
  }
  unsigned int v7 = *(_DWORD *)(a2 + 12);
  if (v7 >= 4)
  {
LABEL_79:
    __break(0x550Au);
    return;
  }

  if (!v7) {
    goto LABEL_20;
  }
  uint64_t v8 = (uint64_t *)(a2 + 16);
  if (((a2 + 16) & 7) != 0) {
    goto LABEL_78;
  }
  if (!*v8)
  {
LABEL_20:
    sub_1000CEAEC( 0,  4,  "%s:%d Invalid VPort(%hhx) for VPort DETACH\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp",  18791,  a2);
    return;
  }

  uint64_t v10 = sub_100061274();
  if (!v10 || (v10 & 7) != 0 || (*v8 & 7) != 0) {
    goto LABEL_78;
  }
  uint64_t v11 = sub_10008E550(v10, *v8, 0);
  if (!v11)
  {
    uint64_t v16 = sub_100061274();
    if (!v16 || (v16 & 7) != 0 || (*v8 & 7) != 0) {
      goto LABEL_78;
    }
    if (sub_1000BA184(v16, *v8))
    {
      uint64_t v12 = 0LL;
      uint64_t v11 = 0LL;
      goto LABEL_30;
    }

    uint64_t v17 = *v8;
    if (!*v8 || (v17 & 7) != 0) {
      goto LABEL_78;
    }
    uint64_t v11 = (*(uint64_t (**)(uint64_t))(*(void *)v17 + 400LL))(v17);
    if (!v11)
    {
      uint64_t v12 = 0LL;
      goto LABEL_30;
    }
  }

  if ((v11 & 7) != 0) {
    goto LABEL_78;
  }
  uint64_t v12 = sub_10005794C(v11);
  if (sub_100057D30(v11))
  {
    uint64_t v13 = (void *)*v8;
    if ((*v8 & 7) != 0) {
      goto LABEL_78;
    }
    uint64_t v14 = a1[1];
    if (!v14 || (v14 & 7) != 0) {
      goto LABEL_78;
    }
    uint64_t v15 = sub_10001864C(v14);
    sub_100070E84(0LL, v11, v13, v15);
  }

LABEL_78:
    __break(0x5516u);
    goto LABEL_79;
  }

  uint64_t v26 = a1[1];
  if (!v26) {
    goto LABEL_78;
  }
  if ((v26 & 7) != 0) {
    goto LABEL_78;
  }
  if (!v32) {
    goto LABEL_78;
  }
  sub_100056DEC(v26, v32[2]);
  if ((v12 & 7) != 0) {
    goto LABEL_78;
  }
  if (!v32) {
    goto LABEL_78;
  }
  uint64_t v27 = v32 + 2;
  sub_10005EE10(v12, 8, 0LL, *v27, 0, 2u, a5);
LABEL_72:
  uint64_t v32 = 0LL;
  if (a1[281]) {
    return;
  }
  uint64_t v31 = a1[1];
  if (!v31 || (v31 & 7) != 0) {
    goto LABEL_78;
  }
  sub_100057AD0(v31, 0LL, 4u);
}

void sub_100086A38(uint64_t a1, uint64_t a2, unsigned __int8 *a3, unsigned int a4)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_96;
  }
  if (!a3) {
    goto LABEL_95;
  }
  if (!a2) {
    return;
  }
  if ((a2 & 7) != 0 || ((a2 + 12) & 3) != 0) {
    goto LABEL_96;
  }
  unsigned int v7 = *(_DWORD *)(a2 + 12);
  if (v7 > 3)
  {
LABEL_97:
    __break(0x550Au);
    goto LABEL_98;
  }

  if (!v7)
  {
LABEL_95:
    __break(0x5518u);
    goto LABEL_96;
  }

  if (!a4 || v7 != 1) {
    return;
  }
  uint64_t v9 = (uint64_t *)(a2 + 16);
  if (((a2 + 16) & 7) != 0) {
    goto LABEL_96;
  }
  if (!*v9) {
    return;
  }
  uint64_t v10 = (_DWORD *)(a2 + 24);
  if (((a2 + 24) & 7) != 0) {
    goto LABEL_96;
  }
  int v11 = *a3;
  int v12 = *v10 ^ v11;
  if ((v12 & 4) != 0)
  {
    if ((v11 & 4) != 0) {
      uint64_t v13 = "detected";
    }
    else {
      uint64_t v13 = "cleared";
    }
    if (((a2 + 8) & 7) != 0) {
      goto LABEL_96;
    }
    uint64_t v14 = *(void *)(a1 + 8);
    if (!v14) {
      goto LABEL_96;
    }
    if ((v14 & 7) != 0) {
      goto LABEL_96;
    }
    int v15 = *(unsigned __int8 *)(a2 + 8);
    uint64_t v16 = sub_10001864C(v14);
    if (!v16) {
      goto LABEL_96;
    }
    if ((v16 & 7) != 0) {
      goto LABEL_96;
    }
    uint64_t v17 = (const char *)(*(uint64_t (**)(uint64_t))(*(void *)v16 + 208LL))(v16);
    sub_1000CEAEC( 0,  4,  "%s:%d Load fault %s for VPort ID %d on port %s\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoGeneral.cpp",  18925,  v13,  v15,  v17);
    uint64_t v18 = (void *)*v9;
    if ((*v9 & 7) != 0) {
      goto LABEL_96;
    }
    uint64_t v19 = *(void *)(a1 + 8);
    if (!v19 || (v19 & 7) != 0) {
      goto LABEL_96;
    }
    uint64_t v20 = sub_10001864C(v19);
    if ((v11 & 4) != 0) {
      uint64_t v21 = 23LL;
    }
    else {
      uint64_t v21 = 24LL;
    }
    sub_100087270(v21, 0LL, v18, v20);
  }

  unsigned int v22 = -1;
  if (a4 >= 2 && (v11 & 2) != 0)
  {
    if (a3 == (unsigned __int8 *)-1LL)
    {
LABEL_98:
      __break(0x5513u);
      return;
    }

    unsigned int v23 = a3[1];
    if (v23 == 255) {
      unsigned int v22 = 100;
    }
    else {
      unsigned int v22 = v23 >> 4;
    }
  }

  if ((v11 & 1) == 0)
  {
    uint64_t v24 = (void *)*v9;
    if (!(*(uint64_t (**)(void *))(*v24 + 376LL))(v24))
    {
      uint64_t v25 = (void *)*v9;
      (*(void (**)(void *, void))(*v25 + 368LL))(v25, *(void *)(a1 + 8));
    }
  }

  uint64_t v26 = (_BYTE *)(a2 + 28);
  if ((v26 & 3) != 0)
  {
LABEL_96:
    __break(0x5516u);
    goto LABEL_97;
  }

  if (v22 == *v26)
  {
LABEL_57:
    if ((v12 & 1) != 0) {
      goto LABEL_77;
    }
LABEL_58:
    if (v22 == -1) {
      goto LABEL_84;
    }
    int v30 = *v26;
    if (v22 == v30 || v30 == 100 || v30 == 255) {
      goto LABEL_81;
    }
    uint64_t v31 = *v9;
    if (*v9 && (v31 & 7) == 0)
    {
      sub_1000ADF50(v31, 8LL, 0);
      goto LABEL_81;
    }

    goto LABEL_96;
  }

  switch(v22)
  {
    case 0xBu:
      uint64_t v29 = sub_1000451B0();
      if (!v29 || (v29 & 7) != 0 || (*v9 & 7) != 0) {
        goto LABEL_96;
      }
      (*(void (**)(uint64_t))(*(void *)v29 + 336LL))(v29);
      goto LABEL_57;
    case 0xAu:
      uint64_t v32 = sub_10004783C();
      if (!v32 || (v32 & 7) != 0 || (*v9 & 7) != 0) {
        goto LABEL_96;
      }
      uint64_t v28 = *(void (**)(void))(*(void *)v32 + 280LL);
      break;
    case 3u:
      uint64_t v27 = sub_10004783C();
      if (!v27 || (v27 & 7) != 0 || (*v9 & 7) != 0) {
        goto LABEL_96;
      }
      uint64_t v28 = *(void (**)(void))(*(void *)v27 + 280LL);
      break;
    default:
      uint64_t v33 = sub_1000451B0();
      if (!v33) {
        goto LABEL_96;
      }
      if ((v33 & 7) != 0) {
        goto LABEL_96;
      }
      if ((*v9 & 7) != 0) {
        goto LABEL_96;
      }
      (*(void (**)(uint64_t))(*(void *)v33 + 336LL))(v33);
      uint64_t v34 = sub_10004783C();
      if (!v34 || (v34 & 7) != 0 || (*v9 & 7) != 0) {
        goto LABEL_96;
      }
      uint64_t v28 = *(void (**)(void))(*(void *)v34 + 280LL);
      break;
  }

  v28();
  if ((v12 & 1) == 0) {
    goto LABEL_58;
  }
LABEL_77:
  if ((v11 & 1) == 0)
  {
    if (v22 == 100) {
      unsigned int v22 = 15;
    }
    if (v22 != -1)
    {
LABEL_81:
      uint64_t v35 = *v9;
      if (*v9 && (v35 & 7) == 0)
      {
        sub_1000ADF50(v35, 128LL, v22);
        *uint64_t v10 = v11;
LABEL_92:
        *uint64_t v26 = v22;
        return;
      }

      goto LABEL_96;
    }

uint64_t sub_100086E4C(uint64_t result, uint64_t a2, unsigned __int16 *a3, unsigned int a4)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_41;
  }
  if (a3)
  {
    if (!a2) {
      return 4LL;
    }
    if ((a2 & 7) != 0 || ((a2 + 12) & 3) != 0) {
      goto LABEL_41;
    }
    unsigned int v4 = *(_DWORD *)(a2 + 12);
    if (v4 > 3)
    {
LABEL_42:
      __break(0x550Au);
      goto LABEL_43;
    }

    if (v4 == 1) {
      goto LABEL_11;
    }
    if (v4) {
      return 4LL;
    }
  }

  __break(0x5518u);
LABEL_11:
  uint64_t v5 = (uint64_t *)(a2 + 16);
  if (((a2 + 16) & 7) != 0)
  {
LABEL_41:
    __break(0x5516u);
    goto LABEL_42;
  }

  uint64_t v6 = *v5;
  if (!*v5) {
    return 4LL;
  }
  if (a4 < 2)
  {
    LOWORD(v8) = 0;
    LOWORD(v7) = 0;
  }

  else
  {
    unsigned int v7 = bswap32(*a3) >> 16;
    if (a4 < 4)
    {
      LOWORD(v8) = 0;
    }

    else
    {
      unsigned int v8 = bswap32(a3[1]) >> 16;
      if (a4 >= 6)
      {
        if ((unint64_t)a3 < 0xFFFFFFFFFFFFFFFCLL)
        {
          unsigned int v9 = bswap32(a3[2]) >> 16;
          goto LABEL_23;
        }

uint64_t sub_100087018(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    if ((result & 7) == 0)
    {
      uint64_t v2 = *(void *)(result + 208);
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 376LL))(result);
      if (!v2) {
        sub_1000D276C();
      }
      if (!result) {
        sub_1000D276C();
      }
      if ((result & 7) == 0)
      {
        uint64_t result = sub_100056EE8(result, v1);
        uint64_t v3 = result;
        if (!(_DWORD)result) {
          return v3;
        }
        *(void *)(v1 + 208) = 0LL;
        if ((v2 & 7) == 0)
        {
          (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
          return v3;
        }
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000870A8(uint64_t result)
{
  if (!result
    || (result & 7) != 0
    || ((result + 8) & 7) != 0
    || ((v1 = *(void *)(result + 8)) != 0 ? (BOOL v2 = (*(void *)(result + 8) & 7LL) == 0) : (BOOL v2 = 0),
        !v2 || (uint64_t result = v1 + 16, ((v1 + 16) & 7) != 0)))
  {
    __break(0x5516u);
  }

  return result;
}

uint64_t sub_1000870E8(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!a2) {
    return result;
  }
  if ((a2 & 7) != 0) {
    goto LABEL_34;
  }
  uint64_t v4 = *(void *)(a2 + 32);
  if (!v4) {
    return result;
  }
  uint64_t v5 = (uint64_t *)(v4 + 40);
  if ((v4 & 7) != 0 || ((v4 + 40) & 7) != 0) {
    goto LABEL_34;
  }
  char v8 = result;
  uint64_t v9 = *v5;
  if (*v5)
  {
    if ((_DWORD)result)
    {
      if ((v9 & 7) == 0)
      {
        uint64_t result = sub_100057D74(v9);
        if ((result & 1) != 0) {
          return result;
        }
        int v10 = 19;
LABEL_25:
        unint64_t v19 = 0xAAAAAAAAAAAAAAAALL;
        v13[0] = v10;
        else {
          uint64_t result = sub_100057B7C(v9);
        }
        goto LABEL_28;
      }
    }

    else if ((v9 & 7) == 0)
    {
      uint64_t result = sub_100057D74(v9);
      if ((result & 1) == 0) {
        return result;
      }
      int v10 = 20;
      goto LABEL_25;
    }

uint64_t sub_100087270(uint64_t result, uint64_t a2, void *a3, uint64_t a4)
{
  if (!a3)
  {
    __break(0x5518u);
    goto LABEL_31;
  }

  unsigned int v7 = result;
  uint64_t result = (*(uint64_t (**)(void *))(*a3 + 280LL))(a3);
  if ((result & 1) == 0) {
LABEL_31:
  }
    sub_1000D276C();
  uint64_t v8 = a3[4];
  if (!a2)
  {
    if (!v8 || (v8 & 7) != 0 || ((v8 + 40) & 7) != 0) {
      goto LABEL_32;
    }
    a2 = *(void *)(v8 + 40);
  }

  unint64_t v15 = 0xAAAAAAAAAAAAAAAALL;
  if (v7 > 0x1F) {
    goto LABEL_33;
  }
  v10[0] = v7;
  if (a2)
  {
    if ((a2 & 7) == 0)
    {
      else {
        uint64_t result = sub_100057B7C(a2);
      }
      goto LABEL_22;
    }

uint64_t sub_1000873F0(uint64_t result, uint64_t a2)
{
  if (result)
  {
    if ((result & 7) == 0)
    {
      result += 624LL;
      if ((result & 7) == 0) {
        return sub_1000B3924(result, a2, 0LL);
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_100087414(uint64_t result)
{
  byte_10011BEC8 = result;
  return result;
}

void sub_100087420(uint64_t *a1)
{
  if (!a1
    || (a1 & 7) != 0
    || ((unint64_t)(a1 + 21) & 7) != 0
    || (BOOL v2 = a1 + 21, sub_1000874CC((unint64_t **)&v2), ((unint64_t)(a1 + 17) & 7) != 0)
    || (sub_100009E9C((uint64_t)(a1 + 17)), ((unint64_t)(a1 + 12) & 7) != 0)
    || (sub_100009E9C((uint64_t)(a1 + 12)), ((unint64_t)(a1 + 9) & 7) != 0)
    || (BOOL v2 = a1 + 9, sub_100008D84(&v2), ((unint64_t)(a1 + 3) & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    BOOL v2 = a1 + 3;
    sub_100008D84(&v2);
    BOOL v2 = a1;
    sub_100008D84(&v2);
  }

void sub_1000874CC(unint64_t **a1)
{
  if (!a1
    || (a1 & 7) != 0
    || ((BOOL v2 = *a1) != 0LL ? (v3 = ((unint64_t)*a1 & 7) == 0) : (v3 = 0), !v3))
  {
LABEL_14:
    __break(0x5516u);
    return;
  }

  if (*v2)
  {
    sub_100087544((uint64_t)v2, *v2);
    uint64_t v4 = (void **)*a1;
    if (*a1 && (v4 & 7) == 0 && (((_BYTE)v4 + 16) & 7) == 0)
    {
      operator delete(*v4);
      return;
    }

    goto LABEL_14;
  }

uint64_t sub_100087544(uint64_t result, unint64_t a2)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_7;
  }
  unint64_t v2 = *(void *)(result + 8);
  if (v2 == a2)
  {
LABEL_6:
    *(void *)(result + 8) = a2;
    return result;
  }

  if ((((_BYTE)result + 16) & 7) != 0)
  {
LABEL_7:
    __break(0x5516u);
  }

  else if (v2 > a2)
  {
    goto LABEL_6;
  }

  __break(0x5513u);
  return result;
}

BOOL sub_100087580(BOOL result)
{
  if (result && (result & 7) == 0)
  {
    uint64_t v1 = *(void *)(result + 56);
    BOOL v2 = v1 && (*(void *)(result + 56) & 7LL) == 0;
    BOOL v3 = (_DWORD *)(v1 + 16);
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000875C0(uint64_t result)
{
  if (!result || (result & 7) != 0 || ((result + 120) & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_7;
  }

  uint64_t result = *(unsigned int *)(result + 120);
  if (result >= 4) {
LABEL_7:
  }
    __break(0x550Au);
  return result;
}

uint64_t sub_1000875F0(uint64_t result, uint64_t a2)
{
  if (result)
  {
    uint64_t v2 = result;
    if ((result & 7) == 0)
    {
      uint64_t v10 = 0xAAAAAAAAAAAAAAAALL;
      uint64_t result = sub_100008C24(result);
      uint64_t v4 = v2 + 8;
      if (((v2 + 8) & 7) == 0)
      {
        uint64_t result = sub_1000876DC(v2, a2, result, v2 + 8);
        uint64_t v10 = result;
        if (v4 == result) {
          return v4;
        }
        if ((((_BYTE)v2 + 16) & 7) == 0)
        {
          uint64_t v5 = sub_10004BE24(&v10);
          unsigned int v6 = bswap32(*(_DWORD *)a2);
          unsigned int v7 = bswap32(*(_DWORD *)v5);
          if (v6 == v7)
          {
            unsigned int v6 = bswap32(*(unsigned __int16 *)(a2 + 4)) >> 16;
            unsigned int v8 = bswap32(*((unsigned __int16 *)v5 + 2));
            if (v6 == HIWORD(v8)) {
              return v10;
            }
            unsigned int v7 = HIWORD(v8);
          }

          if (v6 < v7) {
            int v9 = -1;
          }
          else {
            int v9 = 1;
          }
          if (v9 < 0) {
            return v4;
          }
          return v10;
        }
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000876DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 && (a1 & 7) == 0)
  {
    if (!a3) {
      return a4;
    }
    if ((((_BYTE)a1 + 16) & 7) == 0 && (a3 & 7) == 0)
    {
      while (1)
      {
        unsigned int v4 = bswap32(*(_DWORD *)(a3 + 25));
        unsigned int v5 = bswap32(*(_DWORD *)a2);
        if (v4 == v5)
        {
          unsigned int v4 = bswap32(*(unsigned __int16 *)(a3 + 29)) >> 16;
          unsigned int v6 = bswap32(*(unsigned __int16 *)(a2 + 4));
          if (v4 == HIWORD(v6)) {
            goto LABEL_17;
          }
          unsigned int v5 = HIWORD(v6);
        }

        if (v4 < v5) {
          int v8 = -1;
        }
        else {
          int v8 = 1;
        }
        if ((v8 & 0x80000000) == 0)
        {
LABEL_17:
          uint64_t v7 = *(void *)a3;
          if (!*(void *)a3) {
            return a3;
          }
          goto LABEL_18;
        }

        if (((a3 + 8) & 7) != 0) {
          break;
        }
        uint64_t v7 = *(void *)(a3 + 8);
        if (!v7) {
          return a4;
        }
        a3 = a4;
LABEL_18:
        if ((v7 & 7) != 0) {
          break;
        }
        a4 = a3;
        a3 = v7;
      }
    }
  }

  __break(0x5516u);
  return a3;
}

uint64_t sub_10008779C(uint64_t result)
{
  if (!result || (result & 7) != 0) {
    __break(0x5516u);
  }
  return result;
}

void sub_1000877B0(void *__p)
{
  else {
    operator delete(__p);
  }
}

uint64_t sub_1000877C4(uint64_t a1, uint64_t *a2, unsigned __int8 *a3)
{
  if (!a1 || (uint64_t v5 = a1, (a1 & 7) != 0) || (v4 = a2, a1 = sub_100008C24(a1), v7 = v5 + 8, ((v5 + 8) & 7) != 0))
  {
LABEL_20:
    __break(0x5516u);
LABEL_21:
    uint64_t v7 = a1;
    a1 = (uint64_t)v3;
    goto LABEL_22;
  }

  if (a1)
  {
    if ((((_BYTE)v5 + 16) & 7) == 0 && (a1 & 7) == 0)
    {
      unsigned int v8 = *a3;
      while (((a1 + 32) & 7) == 0)
      {
        unsigned int v9 = *(unsigned __int8 *)(a1 + 32);
        if (v8 >= v9)
        {
          if (v9 >= v8)
          {
            *unsigned int v4 = a1;
            if ((v7 & 7) == 0) {
              return v7;
            }
            goto LABEL_20;
          }

          BOOL v3 = (uint64_t *)(a1 + 8);
          if (((a1 + 8) & 7) != 0) {
            goto LABEL_20;
          }
          uint64_t v10 = *v3;
          if (!*v3) {
            goto LABEL_21;
          }
          a1 += 8LL;
        }

        else
        {
          uint64_t v10 = *(void *)a1;
          if (!*(void *)a1)
          {
            uint64_t v7 = a1;
            goto LABEL_22;
          }
        }

        if ((v10 & 7) != 0) {
          goto LABEL_20;
        }
        uint64_t v7 = a1;
        a1 = v10;
      }
    }

    goto LABEL_20;
  }

  a1 = v5 + 8;
LABEL_22:
  *unsigned int v4 = v7;
  return a1;
}

void *sub_1000878C0@<X0>(void *result@<X0>, _BYTE *a2@<X1>, uint64_t a3@<X8>)
{
  if (!result
    || (result & 7) != 0
    || (unsigned int v4 = (char *)(result + 1), ((unint64_t)(result + 1) & 7) != 0)
    || (*(void *)(a3 + 16) = 0xAAAAAAAAAAAAAAAALL,
        uint64_t result = operator new(0x30uLL),
        *(void *)a3 = result,
        *(void *)(a3 + 8) = v4,
        (result & 7) != 0)
    || (((_BYTE)result + 32) & 7) != 0
    || (*((_BYTE *)result + 32) = *a2, *(_BYTE *)(a3 + 16) = 1, ((unint64_t)(result + 5) & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    result[5] = 0LL;
    *(_BYTE *)(a3 + 17) = 1;
  }

  return result;
}

void *sub_100087950@<X0>(void *result@<X0>, _WORD *a2@<X1>, uint64_t a3@<X8>)
{
  if (!result
    || (result & 7) != 0
    || (unsigned int v4 = (char *)(result + 1), ((unint64_t)(result + 1) & 7) != 0)
    || (*(void *)(a3 + 16) = 0xAAAAAAAAAAAAAAAALL,
        uint64_t result = operator new(0x30uLL),
        *(void *)a3 = result,
        *(void *)(a3 + 8) = v4,
        (result & 7) != 0)
    || ((unint64_t)(result + 4) & 7) != 0
    || (((_BYTE)result + 32) & 1) != 0
    || (*((_WORD *)result + 16) = *a2, *(_BYTE *)(a3 + 16) = 1, ((unint64_t)(result + 5) & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    result[5] = 0LL;
    *(_BYTE *)(a3 + 17) = 1;
  }

  return result;
}

uint64_t sub_1000879E4(uint64_t *a1, void *a2)
{
  if (!a1) {
    goto LABEL_15;
  }
  uint64_t v2 = a1;
  BOOL v3 = a1 + 2;
  unint64_t v14 = 0xAAAAAAAAAAAAAAAALL;
  *(void *)&__int128 v4 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v4 + 1) = 0xAAAAAAAAAAAAAAAALL;
  __int128 v12 = v4;
  __int128 v13 = v4;
  uint64_t v5 = (a1[1] - *a1) >> 3;
  unint64_t v6 = v5 + 1;
  if (v5 == -1)
  {
LABEL_16:
    __break(0x5500u);
LABEL_17:
    sub_100024868((uint64_t)v2);
  }

  if (v6 >> 61) {
    goto LABEL_17;
  }
  unint64_t v8 = *v3 - *a1;
  if (v8 >> 2 > v6) {
    unint64_t v6 = v8 >> 2;
  }
  unint64_t v9 = v8 >= 0x7FFFFFFFFFFFFFF8LL ? 0x1FFFFFFFFFFFFFFFLL : v6;
  uint64_t result = sub_1000251DC((uint64_t)&v12, v9, v5, (uint64_t)v3);
  if (!(void)v13 || (v13 & 7) != 0)
  {
LABEL_15:
    __break(0x5516u);
    goto LABEL_16;
  }

  *(void *)__int128 v13 = *a2;
  if ((unint64_t)v13 >= 0xFFFFFFFFFFFFFFF8LL)
  {
    __break(0x5513u);
  }

  else
  {
    *(void *)&__int128 v13 = v13 + 8;
    sub_10002511C(v2, &v12);
    uint64_t v11 = v2[1];
    sub_1000253A0((uint64_t)&v12);
    return v11;
  }

  return result;
}

uint64_t sub_100087ADC(uint64_t result, uint64_t a2)
{
  if (result)
  {
    uint64_t v2 = result;
    if ((result & 7) == 0)
    {
      uint64_t v10 = 0xAAAAAAAAAAAAAAAALL;
      uint64_t result = sub_100008C24(result);
      uint64_t v4 = v2 + 8;
      if (((v2 + 8) & 7) == 0)
      {
        uint64_t result = sub_100087BC8(v2, a2, result, v2 + 8);
        uint64_t v10 = result;
        if (v4 == result) {
          return v4;
        }
        if ((((_BYTE)v2 + 16) & 7) == 0)
        {
          uint64_t v5 = sub_100008AFC(&v10);
          unsigned int v6 = bswap32(*(_DWORD *)a2);
          unsigned int v7 = bswap32(*(_DWORD *)v5);
          if (v6 == v7)
          {
            unsigned int v6 = bswap32(*(unsigned __int16 *)(a2 + 4)) >> 16;
            unsigned int v8 = bswap32(*((unsigned __int16 *)v5 + 2));
            if (v6 == HIWORD(v8)) {
              return v10;
            }
            unsigned int v7 = HIWORD(v8);
          }

          if (v6 < v7) {
            int v9 = -1;
          }
          else {
            int v9 = 1;
          }
          if (v9 < 0) {
            return v4;
          }
          return v10;
        }
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_100087BC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 && (a1 & 7) == 0)
  {
    if (!a3) {
      return a4;
    }
    if ((((_BYTE)a1 + 16) & 7) == 0 && (a3 & 7) == 0)
    {
      while (((a3 + 32) & 7) == 0)
      {
        unsigned int v4 = bswap32(*(_DWORD *)(a3 + 32));
        unsigned int v5 = bswap32(*(_DWORD *)a2);
        if (v4 == v5)
        {
          unsigned int v4 = bswap32(*(unsigned __int16 *)(a3 + 36)) >> 16;
          unsigned int v6 = bswap32(*(unsigned __int16 *)(a2 + 4));
          if (v4 == HIWORD(v6)) {
            goto LABEL_18;
          }
          unsigned int v5 = HIWORD(v6);
        }

        if (v4 < v5) {
          int v8 = -1;
        }
        else {
          int v8 = 1;
        }
        if ((v8 & 0x80000000) == 0)
        {
LABEL_18:
          uint64_t v7 = *(void *)a3;
          if (!*(void *)a3) {
            return a3;
          }
          goto LABEL_19;
        }

        if (((a3 + 8) & 7) != 0) {
          break;
        }
        uint64_t v7 = *(void *)(a3 + 8);
        if (!v7) {
          return a4;
        }
        a3 = a4;
LABEL_19:
        if ((v7 & 7) != 0) {
          break;
        }
        a4 = a3;
        a3 = v7;
      }
    }
  }

  __break(0x5516u);
  return a3;
}

uint64_t sub_100087C94(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  if (!a1 || (uint64_t v5 = a1, (a1 & 7) != 0) || (v4 = a2, a1 = sub_100008C24(a1), v7 = v5 + 8, ((v5 + 8) & 7) != 0))
  {
LABEL_32:
    __break(0x5516u);
LABEL_33:
    uint64_t v7 = a1;
    a1 = v3;
    goto LABEL_34;
  }

  if (a1)
  {
    if ((((_BYTE)v5 + 16) & 7) == 0 && (a1 & 7) == 0)
    {
      while (1)
      {
        int v8 = (unsigned int *)(a1 + 32);
        if (((a1 + 32) & 7) != 0) {
          goto LABEL_32;
        }
        unsigned int v9 = bswap32(*(_DWORD *)a3);
        unsigned int v10 = bswap32(*v8);
        if (v9 == v10)
        {
          unsigned int v9 = bswap32(*(unsigned __int16 *)(a3 + 4)) >> 16;
          unsigned int v11 = bswap32(*(unsigned __int16 *)(a1 + 36));
          if (v9 == HIWORD(v11)) {
            goto LABEL_18;
          }
          unsigned int v10 = HIWORD(v11);
        }

        if (v9 < v10) {
          uint64_t v3 = 0xFFFFFFFFLL;
        }
        else {
          uint64_t v3 = 1LL;
        }
        if ((v3 & 0x80000000) != 0)
        {
          uint64_t v12 = *(void *)a1;
          if (!*(void *)a1)
          {
            uint64_t v7 = a1;
            goto LABEL_34;
          }

          goto LABEL_28;
        }

void *sub_100087E18@<X0>(void *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (!result) {
    goto LABEL_8;
  }
  unsigned int v4 = (char *)(result + 1);
  if (((unint64_t)(result + 1) & 7) != 0
    || (*(void *)(a3 + 16) = 0xAAAAAAAAAAAAAAAALL,
        uint64_t result = operator new(0x30uLL),
        *(void *)a3 = result,
        *(void *)(a3 + 8) = v4,
        (result & 7) != 0)
    || ((unint64_t)(result + 4) & 7) != 0
    || (*((_DWORD *)result + 8) = *(_DWORD *)a2,
        *((_WORD *)result + 18) = *(_WORD *)(a2 + 4),
        *(_BYTE *)(a3 + 16) = 1,
        ((unint64_t)(result + 5) & 7) != 0))
  {
LABEL_8:
    __break(0x5516u);
  }

  else
  {
    result[5] = 0LL;
    *(_BYTE *)(a3 + 17) = 1;
  }

  return result;
}

uint64_t *sub_100087EB0(uint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = a2;
  if (!result
    || (uint64_t v3 = (uint64_t)result, (result & 7) != 0)
    || ((unint64_t)(result + 1) & 7) != 0)
  {
    __break(0x5516u);
  }

  else if (a2 != a3)
  {
    do
    {
      uint64_t v5 = sub_100003154(&v6);
      sub_100087F38(v3, (void *)(v3 + 8), (unsigned __int8 *)v5, v5);
      uint64_t result = sub_100008A4C(&v6);
    }

    while (v6 != a3);
  }

  return result;
}

void sub_100087F38(uint64_t a1, void *a2, unsigned __int8 *a3, _OWORD *a4)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_10;
  }
  unint64_t v10 = 0xAAAAAAAAAAAAAAAALL;
  uint64_t v11 = 0xAAAAAAAAAAAAAAAALL;
  uint64_t v6 = (uint64_t *)sub_100088014(a1, a2, &v11, (uint64_t)&v10, a3);
  uint64_t v7 = (void *)*v6;
  if (*v6)
  {
LABEL_10:
    __break(0x5516u);
    return;
  }

  int v8 = v6;
  memset(v9, 170, sizeof(v9));
  sub_1000881E8((_OWORD *)a1, a4, (uint64_t)v9);
  sub_100008FEC(a1, v11, v8, (void *)v9[0]);
  uint64_t v7 = v9[0];
  v9[0] = 0LL;
  sub_10001BB68(v9, 0LL);
  if (!v7) {
    return;
  }
LABEL_8:
}

uint64_t sub_100088014(uint64_t result, void *a2, uint64_t *a3, uint64_t a4, unsigned __int8 *a5)
{
  uint64_t v13 = (uint64_t)a2;
  if (!result) {
    goto LABEL_36;
  }
  uint64_t v5 = (void *)result;
  if ((result & 7) != 0) {
    goto LABEL_36;
  }
  uint64_t v6 = (void *)(result + 8);
  if (((result + 8) & 7) != 0) {
    goto LABEL_36;
  }
  if (v6 == a2)
  {
    a4 = (uint64_t)a2;
LABEL_9:
    unsigned int v14 = a2;
    if (*v5 == a4) {
      goto LABEL_13;
    }
    if ((((_BYTE)v5 + 16) & 7) == 0)
    {
      unint64_t v10 = (uint64_t *)sub_100088264(&v14);
      uint64_t result = (uint64_t)sub_100008AFC(v10);
      if (*(unsigned __int8 *)result < *a5)
      {
        a4 = v13;
LABEL_13:
        if (!a4 || (a4 & 7) != 0) {
          goto LABEL_36;
        }
        if (!*(void *)a4)
        {
          *a3 = a4;
          return a4;
        }

        uint64_t v11 = v14;
        *a3 = (uint64_t)v14;
        a4 = (uint64_t)(v11 + 1);
        goto LABEL_19;
      }

      return sub_1000877C4((uint64_t)v5, a3, a5);
    }

    goto LABEL_36;
  }

  if ((((_BYTE)result + 16) & 7) != 0) {
    goto LABEL_36;
  }
  uint64_t result = (uint64_t)sub_100008AFC(&v13);
  if (*a5 < *(unsigned __int8 *)result)
  {
    a4 = v13;
    a2 = (void *)v13;
    goto LABEL_9;
  }

  uint64_t result = (uint64_t)sub_100008AFC(&v13);
  if (*(unsigned __int8 *)result < *a5)
  {
    unsigned int v14 = (void *)v13;
    uint64_t result = (uint64_t)sub_100008A4C((uint64_t *)&v14);
    if (v14 == v6 || (uint64_t result = (uint64_t)sub_100008AFC((uint64_t *)&v14), *a5 < *(unsigned __int8 *)result))
    {
      if (!v13) {
        goto LABEL_36;
      }
      if ((v13 & 7) != 0) {
        goto LABEL_36;
      }
      a4 = v13 + 8;
      if (((v13 + 8) & 7) != 0) {
        goto LABEL_36;
      }
      if (!*(void *)a4)
      {
        *a3 = v13;
        return a4;
      }

      a4 = (uint64_t)v14;
      *a3 = (uint64_t)v14;
      if (!a4) {
        goto LABEL_36;
      }
LABEL_19:
      if ((a4 & 7) != 0) {
        goto LABEL_36;
      }
      return a4;
    }

    return sub_1000877C4((uint64_t)v5, a3, a5);
  }

  uint64_t v12 = v13;
  *a3 = v13;
  if ((v12 & 7) == 0)
  {
    *(void *)a4 = v12;
    return a4;
  }

_OWORD *sub_1000881E8@<X0>(_OWORD *result@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X8>)
{
  if (!result
    || (result & 7) != 0
    || (unsigned int v4 = (char *)result + 8, (((unint64_t)result + 8) & 7) != 0)
    || (*(void *)(a3 + 16) = 0xAAAAAAAAAAAAAAAALL,
        uint64_t result = operator new(0x30uLL),
        *(void *)a3 = result,
        *(void *)(a3 + 8) = v4,
        (result & 7) != 0)
    || ((unint64_t)(result + 2) & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    result[2] = *a2;
    *(_BYTE *)(a3 + 16) = 1;
  }

  return result;
}

void **sub_100088264(void **result)
{
  if (result && (result & 7) == 0)
  {
    uint64_t v1 = *result;
    if (*result && ((unint64_t)*result & 7) == 0)
    {
      uint64_t v3 = (void *)*v1;
      if (*v1)
      {
        while ((v3 & 7) == 0)
        {
          unsigned int v4 = v3;
          if ((((_BYTE)v3 + 8) & 7) != 0) {
            break;
          }
          uint64_t v3 = (void *)v3[1];
          if (!v3) {
            goto LABEL_12;
          }
        }
      }

      else if ((v1 & 7) == 0)
      {
        do
        {
          unsigned int v4 = (void *)v1[2];
          if (!v4 || (v1[2] & 7LL) != 0) {
            break;
          }
          if ((void *)*v4 != v1)
          {
LABEL_12:
            *uint64_t result = v4;
            return result;
          }

          uint64_t v1 = (void *)v1[2];
        }

        while ((v4 & 7) == 0);
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_100088300(uint64_t result, unsigned __int8 *a2)
{
  if (result)
  {
    uint64_t v2 = result;
    if ((result & 7) == 0)
    {
      uint64_t v5 = 0xAAAAAAAAAAAAAAAALL;
      uint64_t result = sub_100008C24(result);
      uint64_t v4 = v2 + 8;
      if (((v2 + 8) & 7) == 0)
      {
        uint64_t result = sub_1000883A8(v2, a2, result, v2 + 8);
        uint64_t v5 = result;
        if (v4 == result) {
          return v4;
        }
        if ((((_BYTE)v2 + 16) & 7) == 0)
        {
          return v4;
        }
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000883A8(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  if (a1 && (a1 & 7) == 0)
  {
    if (!a3) {
      return a4;
    }
    if ((((_BYTE)a1 + 16) & 7) == 0 && (a3 & 7) == 0)
    {
      while (((a3 + 32) & 7) == 0)
      {
        if (*(unsigned __int8 *)(a3 + 32) >= *a2)
        {
          uint64_t v4 = *(void *)a3;
          if (!*(void *)a3) {
            return a3;
          }
        }

        else
        {
          if (((a3 + 8) & 7) != 0) {
            break;
          }
          uint64_t v4 = *(void *)(a3 + 8);
          if (!v4) {
            return a4;
          }
          a3 = a4;
        }

        if ((v4 & 7) != 0) {
          break;
        }
        a4 = a3;
        a3 = v4;
      }
    }
  }

  __break(0x5516u);
  return a3;
}

void *sub_100088434(void *result, _BYTE *a2)
{
  if (!result || (result & 7) != 0)
  {
LABEL_7:
    __break(0x5516u);
    goto LABEL_8;
  }

  v3[0] = result;
  uint64_t v2 = (_BYTE *)result[1];
  if (v2 != (_BYTE *)-1LL)
  {
    v3[2] = v2 + 1;
    if ((((_BYTE)result + 16) & 7) == 0 && v2)
    {
      *uint64_t v2 = *a2;
      v3[1] = v2 + 1;
      return sub_100024794(v3);
    }

    goto LABEL_7;
  }

uint64_t sub_10008849C(uint64_t *a1, _BYTE *a2)
{
  if (!a1) {
    goto LABEL_14;
  }
  uint64_t v2 = a1;
  uint64_t v3 = a1 + 2;
  unint64_t v14 = 0xAAAAAAAAAAAAAAAALL;
  *(void *)&__int128 v4 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v4 + 1) = 0xAAAAAAAAAAAAAAAALL;
  __int128 v12 = v4;
  __int128 v13 = v4;
  unint64_t v5 = a1[1] - *a1;
  unint64_t v6 = v5 + 1;
  if (v5 == -1LL)
  {
LABEL_15:
    __break(0x5500u);
LABEL_16:
    sub_100024868((uint64_t)v2);
  }

  if ((v6 & 0x8000000000000000LL) != 0) {
    goto LABEL_16;
  }
  unint64_t v8 = *v3 - *a1;
  if (2 * v8 > v6) {
    unint64_t v6 = 2 * v8;
  }
  size_t v9 = v8 >= 0x3FFFFFFFFFFFFFFFLL ? 0x7FFFFFFFFFFFFFFFLL : v6;
  uint64_t result = sub_100088614((uint64_t)&v12, v9, v5, (uint64_t)v3);
  if (!(void)v13)
  {
LABEL_14:
    __break(0x5516u);
    goto LABEL_15;
  }

  *(_BYTE *)__int128 v13 = *a2;
  if ((void)v13 == -1LL)
  {
    __break(0x5513u);
  }

  else
  {
    *(void *)&__int128 v13 = v13 + 1;
    sub_100088584(v2, &v12);
    uint64_t v11 = v2[1];
    sub_1000886BC((uint64_t)&v12);
    return v11;
  }

  return result;
}

uint64_t *sub_100088584(uint64_t *result, void *a2)
{
  if (!result || (result & 7) != 0 || (uint64_t v2 = result + 2, ((unint64_t)(result + 2) & 7) != 0))
  {
LABEL_12:
    __break(0x5516u);
  }

  else
  {
    uint64_t v3 = result + 1;
    uint64_t v4 = result[1];
    uint64_t v5 = *result;
    uint64_t v6 = a2[1];
    while (v4 != v5)
    {
      if (!v4 || !v6)
      {
        __break(0x5513u);
        goto LABEL_12;
      }

      char v7 = *(_BYTE *)--v4;
      *(_BYTE *)--uint64_t v6 = v7;
    }

    a2[1] = v6;
    uint64_t v8 = *result;
    *uint64_t result = v6;
    a2[1] = v8;
    uint64_t v9 = *v3;
    *uint64_t v3 = a2[2];
    a2[2] = v9;
    uint64_t v10 = *v2;
    *uint64_t v2 = a2[3];
    a2[3] = v10;
    *a2 = a2[1];
  }

  return result;
}

uint64_t sub_100088614(uint64_t result, size_t a2, unint64_t a3, uint64_t a4)
{
  if (!result
    || (uint64_t v4 = (void *)result, (result & 7) != 0)
    || (((_BYTE)result + 24) & 7) != 0
    || (*(void *)(result + 24) = 0LL, ((result + 32) & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    *(void *)(result + 32) = a4;
    if (a2)
    {
      sub_100024960(result);
      uint64_t result = (uint64_t)operator new(a2);
    }

    else
    {
      uint64_t result = 0LL;
    }

    *uint64_t v4 = result;
    if (~result >= a3)
    {
      v4[1] = result + a3;
      _OWORD v4[2] = result + a3;
      if (~result >= a2)
      {
        v4[3] = result + a2;
        return (uint64_t)v4;
      }
    }
  }

  __break(0x5513u);
  return result;
}

uint64_t sub_1000886BC(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = (void **)result;
    if ((result & 7) == 0)
    {
      sub_100088718(result);
      if (!*v1) {
        return (uint64_t)v1;
      }
      uint64_t result = sub_100024960((uint64_t)v1);
      if ((((_BYTE)v1 + 24) & 7) == 0)
      {
        operator delete(*v1);
        return (uint64_t)v1;
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_100088718(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_100088730(result, *(void *)(result + 8));
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_100088730(uint64_t result, uint64_t a2)
{
  if (!result || (uint64_t v2 = result, (result & 7) != 0))
  {
LABEL_9:
    __break(0x5516u);
  }

  else
  {
    for (uint64_t i = *(void *)(result + 16); i != a2; *(void *)(v2 + 16) = i)
    {
      uint64_t result = sub_100024960(v2);
      uint64_t v5 = *(void *)(v2 + 16);
      if (!v5)
      {
        __break(0x5513u);
        goto LABEL_9;
      }

      uint64_t i = v5 - 1;
    }
  }

  return result;
}

uint64_t sub_10008878C(int a1)
{
  return _os_assert_log(a1);
}

uint64_t sub_100088794(uint64_t result, uint64_t a2)
{
  if (result)
  {
    uint64_t v2 = result;
    if ((result & 7) == 0)
    {
      sub_10006107C(result, a2, 14);
      *(void *)uint64_t v2 = off_100106118;
      *(_DWORD *)(v2 + 1208) = 0;
      uint64_t v4 = sub_10002D40C();
      *(void *)(v2 + 1192) = v4;
      if (!v4) {
        return v2;
      }
      uint64_t v5 = sub_1000C0034(a2);
      *(void *)(v2 + 1200) = sub_1000C3B18(v5, 1LL);
      uint64_t result = sub_100061274();
      if (result && (result & 7) == 0)
      {
        sub_10008C5A8(result, 14, 32, a2);
        return v2;
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_100088824(uint64_t result, uint64_t a2)
{
  if (result && (result & 7) == 0) {
    return sub_100088794(result, a2);
  }
  __break(0x5516u);
  return result;
}

void sub_100088838(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0 || (*(void *)a1 = off_100106118, (uint64_t v2 = sub_100061274()) == 0) || (v2 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    sub_10008C5A8(v2, 14, 0, *(void *)(a1 + 8));
    sub_1000888A0(a1);
    *(void *)(a1 + 1192) = 0LL;
    sub_100061324(a1);
  }

void sub_1000888A0(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
LABEL_10:
    __break(0x5516u);
  }

  else
  {
    do
    {
      __int16 v3 = -1;
      std::string __p = 0LL;
      int v2 = sub_100062E78(a1, -1, &v3, &__p, 0xFFFFu);
      if (!v2)
      {
        if (__p)
        {
          sub_10008B264(a1, (uint64_t)__p);
          if (__p)
          {
            operator delete(__p);
          }
        }
      }
    }

    while (!v2);
  }

void sub_100088930(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    sub_100088838(a1);
  }
}

void sub_100088944(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    sub_100088838(a1);
    operator delete(v1);
  }

uint64_t sub_100088968(uint64_t a1, unsigned int a2)
{
  if (!a1) {
    goto LABEL_13;
  }
  uint64_t result = sub_100061274();
  if (!result || (result & 7) != 0) {
    goto LABEL_31;
  }
  uint64_t result = sub_10008F004(result, a1);
  if (!(_DWORD)result)
  {
LABEL_13:
    uint64_t result = sub_100061274();
    if (result && (result & 7) == 0)
    {
      int v8 = sub_10008F004(result, a1);
      sub_1000CEAEC( 0,  4,  "CIapLingoLocation::%s:%d invalid connection handle! pConnHandle=%hhx IsValidHandle=%d\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoLocation.cpp",  185,  a1,  v8);
      return 2LL;
    }

    goto LABEL_31;
  }

  if ((a1 & 7) != 0) {
    goto LABEL_31;
  }
  uint64_t result = sub_100057A88(a1);
  if (!result) {
    goto LABEL_31;
  }
  uint64_t v5 = result;
  if ((result & 7) != 0) {
    goto LABEL_31;
  }
  sub_10005789C(result, 0xEu);
  uint64_t result = sub_100088B88(v5);
  if (!result)
  {
    uint64_t v7 = 2LL;
    goto LABEL_29;
  }

  uint64_t v6 = result;
  if ((result & 7) != 0) {
    goto LABEL_31;
  }
  uint64_t result = sub_100063C84(result, v5);
  if (a2 >= 4)
  {
LABEL_32:
    __break(0x550Au);
LABEL_33:
    __break(0x5513u);
    goto LABEL_34;
  }

  if (a2 == 3)
  {
    uint64_t v7 = 22LL;
LABEL_29:
    sub_1000578E8(v5, 0xEu);
    return v7;
  }

  char v9 = result;
  uint64_t result = sub_100061274();
  if (!result || (result & 7) != 0 || (result = sub_10008E168(result, v5)) == 0 || (uint64_t v10 = result, (result & 7) != 0))
  {
LABEL_31:
    __break(0x5516u);
    goto LABEL_32;
  }

  uint64_t result = (*(uint64_t (**)(uint64_t, void))(*(void *)result + 16LL))(result, 0LL);
  __int16 v17 = -21846;
  char v18 = -86;
  if ((v9 & 1) != 0)
  {
    int v11 = result;
    unsigned int v12 = 0;
    goto LABEL_25;
  }

  int v13 = *(_DWORD *)(v6 + 1208);
  BOOL v14 = __CFADD__(v13, 1);
  unsigned int v15 = v13 + 1;
  if (!v14)
  {
    int v11 = (unsigned __int16)v15;
    *(_DWORD *)(v6 + 1208) = (unsigned __int16)v15;
    __int16 v17 = bswap32(v15) >> 16;
    unsigned int v12 = 2;
LABEL_25:
    if (!__CFADD__(&v17, v12))
    {
      *((_BYTE *)&v17 + v12) = a2;
      uint64_t v16 = sub_1000ABB10(v10, 0, 14LL, 1, v11, &v17, v12 | 1);
      if (v16) {
        uint64_t v7 = sub_100062BF8(v6, v16, 500, 0, 0LL);
      }
      else {
        uint64_t v7 = 12LL;
      }
      goto LABEL_29;
    }

    goto LABEL_33;
  }

uint64_t sub_100088B88(uint64_t a1)
{
  uint64_t result = sub_1000B6CE0();
  if (!result) {
    goto LABEL_13;
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_13;
  }
  uint64_t result = sub_10008C2EC(v3, a1, 0xEu);
  if (!result)
  {
    sub_10008E168(v3, a1);
    return 0LL;
  }

  uint64_t v4 = result;
  if ((result & 7) != 0)
  {
LABEL_13:
    __break(0x5516u);
    return result;
  }

  uint64_t result = sub_10008E168(v3, a1);
  if (result)
  {
    if (sub_100054B88(v3, result)) {
      return v4;
    }
    else {
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_100088C2C(uint64_t a1, unsigned int a2)
{
  if (!a1) {
    goto LABEL_13;
  }
  uint64_t result = sub_100061274();
  if (!result || (result & 7) != 0) {
    goto LABEL_31;
  }
  uint64_t result = sub_10008F004(result, a1);
  if (!(_DWORD)result)
  {
LABEL_13:
    uint64_t result = sub_100061274();
    if (result && (result & 7) == 0)
    {
      int v8 = sub_10008F004(result, a1);
      sub_1000CEAEC( 0,  4,  "CIapLingoLocation::%s:%d invalid connection handle! pConnHandle=%hhx IsValidHandle=%d\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoLocation.cpp",  268,  a1,  v8);
      return 2LL;
    }

    goto LABEL_31;
  }

  if ((a1 & 7) != 0) {
    goto LABEL_31;
  }
  uint64_t result = sub_100057A88(a1);
  if (!result) {
    goto LABEL_31;
  }
  uint64_t v5 = result;
  if ((result & 7) != 0) {
    goto LABEL_31;
  }
  sub_10005789C(result, 0xEu);
  uint64_t result = sub_100088B88(v5);
  if (!result)
  {
    uint64_t v7 = 2LL;
    goto LABEL_29;
  }

  uint64_t v6 = result;
  if ((result & 7) != 0) {
    goto LABEL_31;
  }
  uint64_t result = sub_100063C84(result, v5);
  if (a2 >= 4)
  {
LABEL_32:
    __break(0x550Au);
LABEL_33:
    __break(0x5513u);
    goto LABEL_34;
  }

  if (a2 == 3)
  {
    uint64_t v7 = 22LL;
LABEL_29:
    sub_1000578E8(v5, 0xEu);
    return v7;
  }

  char v9 = result;
  uint64_t result = sub_100061274();
  if (!result || (result & 7) != 0 || (result = sub_10008E168(result, v5)) == 0 || (uint64_t v10 = result, (result & 7) != 0))
  {
LABEL_31:
    __break(0x5516u);
    goto LABEL_32;
  }

  uint64_t result = (*(uint64_t (**)(uint64_t, void))(*(void *)result + 16LL))(result, 0LL);
  __int16 v17 = -21846;
  char v18 = -86;
  if ((v9 & 1) != 0)
  {
    int v11 = result;
    unsigned int v12 = 0;
    goto LABEL_25;
  }

  int v13 = *(_DWORD *)(v6 + 1208);
  BOOL v14 = __CFADD__(v13, 1);
  unsigned int v15 = v13 + 1;
  if (!v14)
  {
    int v11 = (unsigned __int16)v15;
    *(_DWORD *)(v6 + 1208) = (unsigned __int16)v15;
    __int16 v17 = bswap32(v15) >> 16;
    unsigned int v12 = 2;
LABEL_25:
    if (!__CFADD__(&v17, v12))
    {
      *((_BYTE *)&v17 + v12) = a2;
      uint64_t v16 = sub_1000ABB10(v10, 0, 14LL, 3, v11, &v17, v12 | 1);
      if (v16) {
        uint64_t v7 = sub_100062BF8(v6, v16, 500, 0, 0LL);
      }
      else {
        uint64_t v7 = 12LL;
      }
      goto LABEL_29;
    }

    goto LABEL_33;
  }

uint64_t sub_100088E4C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  if (!a1) {
    goto LABEL_13;
  }
  uint64_t v6 = sub_100061274();
  if (!v6 || (v6 & 7) != 0) {
    goto LABEL_33;
  }
  if (!sub_10008F004(v6, a1))
  {
LABEL_13:
    uint64_t v13 = sub_100061274();
    if (v13 && (v13 & 7) == 0)
    {
      int v14 = sub_10008F004(v13, a1);
      sub_1000CEAEC( 0,  4,  "CIapLingoLocation::%s:%d invalid connection handle! pConnHandle=%hhx IsValidHandle=%d\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoLocation.cpp",  382,  a1,  v14);
      return 2LL;
    }

    goto LABEL_33;
  }

  if ((a1 & 7) != 0) {
    goto LABEL_33;
  }
  uint64_t v7 = sub_100057A88(a1);
  if (!v7) {
    goto LABEL_33;
  }
  uint64_t v8 = v7;
  if ((v7 & 7) != 0) {
    goto LABEL_33;
  }
  sub_10005789C(v7, 0xEu);
  uint64_t v9 = sub_100088B88(v8);
  if (!v9)
  {
    uint64_t v12 = 2LL;
    goto LABEL_31;
  }

  uint64_t v10 = v9;
  if ((v9 & 7) != 0) {
    goto LABEL_33;
  }
  uint64_t result = sub_100063C84(v9, v8);
  if (a2 >= 4)
  {
    __break(0x550Au);
    goto LABEL_35;
  }

  if (a2 == 3)
  {
    uint64_t v12 = 22LL;
LABEL_31:
    sub_1000578E8(v8, 0xEu);
    return v12;
  }

  char v15 = result;
  uint64_t v16 = sub_100061274();
  if (!v16 || (v16 & 7) != 0 || (uint64_t v17 = sub_10008E168(v16, v8)) == 0 || (v18 = v17, (v17 & 7) != 0)) {
LABEL_33:
  }
    __break(0x5516u);
  uint64_t result = (*(uint64_t (**)(uint64_t, void))(*(void *)v17 + 16LL))(v17, 0LL);
  memset(v25, 170, 19);
  if ((v15 & 1) != 0)
  {
    int v19 = result;
    unsigned int v20 = 0;
LABEL_25:
    *(_BYTE *)((unint64_t)v25 | v20) = a2;
    if (a3 && (a3 & 7) == 0 && ((a3 + 8) & 7) == 0)
    {
      *(void *)((unint64_t)v25 | v20 | 1) = bswap64(*(void *)(a3 + 8));
      uint64_t v24 = sub_1000ABB10(v18, 0, 14LL, 5, v19, v25, v20 | 9);
      if (v24) {
        uint64_t v12 = sub_100062BF8(v10, v24, 500, 0, 0LL);
      }
      else {
        uint64_t v12 = 12LL;
      }
      goto LABEL_31;
    }

    goto LABEL_33;
  }

  int v21 = *(_DWORD *)(v10 + 1208);
  BOOL v22 = __CFADD__(v21, 1);
  unsigned int v23 = v21 + 1;
  if (!v22)
  {
    int v19 = (unsigned __int16)v23;
    *(_DWORD *)(v10 + 1208) = (unsigned __int16)v23;
    LOWORD(v25[0]) = bswap32(v23) >> 16;
    unsigned int v20 = 2;
    goto LABEL_25;
  }

uint64_t sub_100089124(uint64_t a1, unsigned int a2, unsigned int a3, const char *a4)
{
  if (!a1) {
    goto LABEL_15;
  }
  uint64_t v8 = sub_100061274();
  if (!v8 || (v8 & 7) != 0) {
    goto LABEL_52;
  }
  if (!sub_10008F004(v8, a1))
  {
LABEL_15:
    uint64_t v16 = sub_100061274();
    if (v16 && (v16 & 7) == 0)
    {
      int v17 = sub_10008F004(v16, a1);
      sub_1000CEAEC( 0,  4,  "CIapLingoLocation::%s:%d invalid connection handle! pConnHandle=%hhx IsValidHandle=%d\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoLocation.cpp",  531,  a1,  v17);
      return 2LL;
    }

    goto LABEL_52;
  }

  if ((a1 & 7) != 0) {
    goto LABEL_52;
  }
  uint64_t v9 = sub_100057A88(a1);
  if (!v9) {
    goto LABEL_52;
  }
  uint64_t v10 = v9;
  if ((v9 & 7) != 0) {
    goto LABEL_52;
  }
  sub_10005789C(v9, 0xEu);
  uint64_t v11 = sub_100088B88(v10);
  if (!v11)
  {
    uint64_t v18 = 2LL;
LABEL_43:
    sub_1000578E8(v10, 0xEu);
    return v18;
  }

  uint64_t v12 = v11;
  if ((v11 & 7) != 0) {
LABEL_52:
  }
    __break(0x5516u);
  uint64_t result = sub_100063C84(v11, v10);
  if (a2 >= 4) {
    goto LABEL_53;
  }
  char v14 = result;
  if (a2 != 1)
  {
    if (a2 == 2)
    {
      unsigned int v15 = 6;
    }

    else
    {
      if (a2 == 3) {
        goto LABEL_42;
      }
      unsigned int v15 = 0;
    }

    if (a3 <= 0xFF)
    {
      LOBYTE(v19) = 0;
      goto LABEL_30;
    }

uint64_t sub_100089474(uint64_t a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  if (!a1) {
    goto LABEL_16;
  }
  uint64_t result = sub_100061274();
  if (!result || (result & 7) != 0) {
    goto LABEL_50;
  }
  uint64_t result = sub_10008F004(result, a1);
  if (!(_DWORD)result)
  {
LABEL_16:
    uint64_t result = sub_100061274();
    if (!result || (result & 7) != 0) {
      goto LABEL_50;
    }
    int v11 = sub_10008F004(result, a1);
    sub_1000CEAEC( 0,  4,  "CIapLingoLocation::%s:%d invalid connection handle! pConnHandle=%hhx IsValidHandle=%d\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoLocation.cpp",  697,  a1,  v11);
    return 2LL;
  }

  if ((a1 & 7) != 0) {
    goto LABEL_50;
  }
  uint64_t result = sub_100057A88(a1);
  if (!result) {
    goto LABEL_50;
  }
  uint64_t v9 = result;
  if ((result & 7) != 0) {
    goto LABEL_50;
  }
  sub_10005789C(result, 0xEu);
  uint64_t result = sub_100088B88(v9);
  if (!result)
  {
    uint64_t v12 = 2LL;
LABEL_30:
    sub_1000578E8(v9, 0xEu);
    return v12;
  }

  if (!a4) {
    goto LABEL_29;
  }
  if (a2 >= 4) {
    goto LABEL_51;
  }
  uint64_t v10 = result;
  if (a2 != 2)
  {
    if (a2 == 1)
    {
      if (a3 <= 0xFF)
      {
        if ((a3 & 0xFFFFFF7F) == 0) {
          goto LABEL_32;
        }
        goto LABEL_29;
      }

uint64_t sub_100089794(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0 || !a2 || (a2 & 7) != 0 || ((a2 + 16) & 7) != 0) {
    goto LABEL_18;
  }
  if (*(_WORD *)(a2 + 16) != 8) {
    return 0LL;
  }
  if (((a2 + 24) & 7) != 0)
  {
LABEL_18:
    __break(0x5516u);
    goto LABEL_19;
  }

  uint64_t v2 = *(void *)(a2 + 24);
  if (!v2) {
    return 0LL;
  }
  unsigned int v3 = *(_DWORD *)(v2 + 18);
  if (v3 >= 4) {
    goto LABEL_19;
  }
  if (v3 != 2) {
    return 0LL;
  }
  uint64_t v4 = (unsigned int *)(v2 + 22);
  unsigned int v5 = *v4;
  if (v5 <= 0xFF)
  {
    if (v5 == 1)
    {
      *(_BYTE *)(result + 1212) = 1;
      return 37LL;
    }

    return 0LL;
  }

void sub_10008983C(uint64_t a1, uint64_t a2)
{
  if (!a1) {
    goto LABEL_139;
  }
  if ((a1 & 7) != 0) {
    goto LABEL_139;
  }
  if (!a2) {
    goto LABEL_139;
  }
  if ((a2 & 7) != 0) {
    goto LABEL_139;
  }
  unsigned int v3 = sub_100063C84(a1, *(void *)a2);
  uint64_t v4 = sub_100061274();
  if (!v4) {
    goto LABEL_139;
  }
  if ((v4 & 7) != 0) {
    goto LABEL_139;
  }
  uint64_t v5 = sub_10008E168(v4, *(void *)(a1 + 8));
  if (!v5) {
    goto LABEL_139;
  }
  uint64_t v6 = v5;
  if ((v5 & 7) != 0) {
    goto LABEL_139;
  }
  unsigned int v7 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v5 + 136LL))(v5, 14LL);
  if ((((_BYTE)a2 + 16) & 7) != 0 || (((_DWORD)a2 + 18) & 1) != 0) {
    goto LABEL_139;
  }
  unsigned int v8 = *(_DWORD *)(a2 + 18);
  if (v8 >= 4) {
    goto LABEL_140;
  }
  if ((((_DWORD)a2 + 22) & 1) != 0)
  {
LABEL_139:
    __break(0x5516u);
    goto LABEL_140;
  }

  unsigned int v9 = *(_DWORD *)(a2 + 22);
  if (v9 > 0xFF) {
    goto LABEL_140;
  }
  unsigned int v10 = *(unsigned __int16 *)(a2 + 113);
  if (v3) {
    int v11 = 10;
  }
  else {
    int v11 = 12;
  }
  if (v3) {
    unsigned int v12 = 6;
  }
  else {
    unsigned int v12 = 8;
  }
  if (!*(_WORD *)(a2 + 113))
  {
    if (v8 == 2)
    {
      uint64_t v20 = 0LL;
      unsigned int v13 = 16;
      unsigned int v21 = *(_DWORD *)(a2 + 22);
      switch(v9)
      {
        case 0u:
          goto LABEL_38;
        case 1u:
        case 2u:
          goto LABEL_33;
        case 3u:
        case 4u:
          unsigned int v21 = 0;
          uint64_t v20 = 0LL;
          unsigned int v13 = 4;
          goto LABEL_38;
        case 5u:
          unsigned int v21 = 0;
          uint64_t v20 = 0LL;
          unsigned int v13 = 6;
          goto LABEL_38;
        default:
          int v19 = 1977;
          goto LABEL_31;
      }
    }

    if (v8 != 1)
    {
      int v19 = 1986;
      goto LABEL_31;
    }

    if (v9 == 128)
    {
      uint64_t v20 = a2 + 26;
      if ((((_DWORD)a2 + 26) & 1) != 0) {
        goto LABEL_139;
      }
      uint64_t v22 = (unsigned int *)(a2 + 109);
    }

    else
    {
      if (v9)
      {
        int v19 = 1928;
LABEL_31:
        sub_1000CEAEC( 0,  4,  "%s:%d Unsupported type!\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoLocation.cpp",  v19);
        return;
      }

LABEL_142:
    __break(0x5507u);
    goto LABEL_143;
  }

LABEL_88:
  int v50 = (_DWORD *)(a2 + 12);
  if (((a2 + 12) & 3) != 0) {
    goto LABEL_139;
  }
  if (*v50 > 0xFFu) {
    goto LABEL_140;
  }
  if (((a2 + 8) & 7) != 0) {
    goto LABEL_139;
  }
  uint64_t v51 = sub_1000ABB10(v29, 0, 14LL, *v50, *(_DWORD *)(a2 + 8), v28, (unsigned __int16)((_WORD)v32 - (_WORD)v28));
  if (v51)
  {
    if (*v50 <= 0xFFu)
    {
      uint64_t v52 = v51;
      if (!sub_100062D14((void *)a1, *(_DWORD *)(a2 + 8), *v50, a2, 500))
      {
        sub_1000AB4C4(*(void *)(a1 + 8), v52, 0, 1u);
        return;
      }

      if ((v52 & 7) == 0)
      {
        (*(void (**)(uint64_t))(*(void *)v52 + 8LL))(v52);
        return;
      }

      goto LABEL_139;
    }

      __break(0x5513u);
      return;
    }

    unsigned int v21 = sub_1000B6CE0();
    if (!v21 || (v21 & 7) != 0) {
      goto LABEL_86;
    }
    uint64_t v22 = sub_10008C2EC(v21, *(void *)(a1 + 8), 0);
    if (v22)
    {
      if ((v22 & 7) != 0) {
        goto LABEL_86;
      }
      goto LABEL_41;
    }

              __break(0x5513u);
              goto LABEL_89;
            }

void sub_10008A0DC(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_39;
  }
  if (!a2)
  {
    __break(0x5518u);
LABEL_39:
    __break(0x5516u);
    goto LABEL_40;
  }

  if (!*(void *)(a1 + 8)) {
    return;
  }
  uint64_t v4 = sub_100061274();
  if (!v4 || (v4 & 7) != 0) {
    goto LABEL_39;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5 || (v5 & 7) != 0) {
    goto LABEL_39;
  }
  if ((sub_1000569F0(v5) & 1) != 0 || !sub_100088B88(*(void *)(a1 + 8))) {
    return;
  }
  if ((a2 & 7) != 0) {
    goto LABEL_39;
  }
  unsigned int v6 = *(unsigned __int16 *)(a2 + 126);
  if (v6 >= 0x100)
  {
LABEL_40:
    __break(0x5507u);
    goto LABEL_41;
  }

  unsigned int v7 = *(unsigned __int16 **)(a2 + 24);
  unsigned int v8 = *(unsigned __int16 *)(a2 + 128);
  if ((sub_100063C84(a1, *(void *)(a1 + 8)) & 1) == 0)
  {
    if (!v7) {
      return;
    }
    BOOL v10 = v8 >= 2;
    v8 -= 2;
    if (!v10) {
      return;
    }
    unsigned int v11 = *v7;
    if ((unint64_t)v7 < 0xFFFFFFFFFFFFFFFELL)
    {
      ++v7;
      int v9 = __rev16(v11);
      goto LABEL_23;
    }

void sub_10008A288(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a1 || (a1 & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_244;
  }
  int v6 = *(unsigned __int16 *)(a2 + 126);
  unsigned int v7 = *(unsigned __int16 **)(a2 + 24);
  unsigned int v8 = *(unsigned __int16 *)(a2 + 128);
  char v9 = sub_100063C84(a1, *(void *)(a1 + 8));
  if ((v9 & 1) != 0)
  {
    unsigned int v10 = *(_DWORD *)(a2 + 68);
    unsigned int v11 = v8;
  }

  else
  {
    unsigned int v11 = 0;
    unsigned int v10 = -1;
    if (v7 && v8 >= 2)
    {
      unsigned int v12 = *v7;
      ++v7;
      unsigned int v10 = __rev16(v12);
      unsigned int v11 = v8 - 2;
      goto LABEL_13;
    }
  }

  if (v7)
  {
LABEL_13:
    unsigned int v13 = *(unsigned __int8 *)v7;
    __int128 v92 = 0u;
    __int128 v93 = 0u;
    __int128 v94 = 0u;
    __int128 v95 = 0u;
    __int128 v96 = 0u;
    __int128 v97 = 0u;
    __int128 v98 = 0u;
    __int128 v99 = 0u;
    uint64_t v100 = 0LL;
    uint64_t v14 = *(void *)(a1 + 8);
    unint64_t v88 = 0xAAAAAAAAAAAAAAAALL;
    uint64_t v89 = v14;
    unsigned int v90 = v10;
    int v91 = v6;
    switch(v6)
    {
      case 0:
        int v15 = *(unsigned __int8 *)v7;
        if (v15 != 19)
        {
          if (v11 < 2) {
            goto LABEL_176;
          }
          size_t v33 = &v89;
          if (a3) {
            unint64_t v34 = (uint64_t *)a3;
          }
          else {
            unint64_t v34 = &v89;
          }
          char v35 = a3 + 16;
          if (a3) {
            size_t v33 = (uint64_t *)a3;
          }
          else {
            char v35 = 16;
          }
          if ((v35 & 7) != 0) {
            goto LABEL_244;
          }
          *((_BYTE *)v33 + 16) = v15;
          unsigned int v18 = 0;
          unsigned int v19 = 0;
          size_t v36 = &v89;
          if (a3) {
            size_t v36 = (uint64_t *)a3;
          }
          *((_BYTE *)v36 + 17) = *((_BYTE *)v7 + 1);
          a3 = (uint64_t)v34;
          goto LABEL_170;
        }

        if (!a3 || v11 < 4) {
          goto LABEL_176;
        }
        unsigned int v16 = v7[1];
        if ((a3 & 7) != 0 || ((a3 + 12) & 3) != 0) {
          goto LABEL_244;
        }
        unsigned int v17 = *(_DWORD *)(a3 + 12);
        if (v17 > 0xFF) {
          goto LABEL_246;
        }
        if ((((_BYTE)a3 + 16) & 7) != 0) {
          goto LABEL_244;
        }
        unsigned int v18 = __rev16(v16);
        if (v16 != 0xFFFF)
        {
          *(_WORD *)(a3 + 113) = v18 + 1;
          sub_10008983C(a1, a3);
          unsigned int v19 = 0;
          if (v20) {
            goto LABEL_176;
          }
          a3 = 0LL;
LABEL_170:
          if (v18 >= v19)
          {
            uint64_t v62 = *(void *)(a1 + 8);
            if (v62 && (v62 & 7) == 0)
            {
              if (!a3) {
                a3 = (uint64_t)&v89;
              }
              sub_100057A4C(v62, 0xEu, 0LL, a3, 152);
LABEL_177:
              sub_10008B264(a1, a3);
              if ((uint64_t *)a3 != &v89)
              {
                if ((a3 & 7) == 0)
                {
                  operator delete((void *)a3);
                  goto LABEL_180;
                }

                goto LABEL_244;
              }

LABEL_180:
              sub_1000AD43C(a2);
              return;
            }

            goto LABEL_244;
          }

LABEL_176:
          if (!a3) {
            goto LABEL_180;
          }
          goto LABEL_177;
        }

        goto LABEL_248;
      case 2:
        if (v13 > 3) {
          goto LABEL_246;
        }
        DWORD1(v92) = v13;
        if (v13 == 2 || v13 == 1) {
          goto LABEL_42;
        }
        if (v13)
        {
          sub_1000CEAEC(0, 4, "%s:%d Invalid Location type!\n");
          goto LABEL_176;
        }

        if (v11 < 0x13) {
          goto LABEL_176;
        }
        BYTE8(v92) = *((_BYTE *)v7 + 1);
        BYTE9(v92) = *((_BYTE *)v7 + 2);
        unint64_t v88 = *(void *)((char *)v7 + 3);
        *(void *)&__int128 v93 = bswap64(v88);
        unsigned int v18 = 0;
        unsigned int v19 = 0;
        unint64_t v88 = *(void *)((char *)v7 + 11);
        *((void *)&v93 + 1) = bswap64(v88);
        goto LABEL_45;
      case 4:
        if (v13 > 3) {
          goto LABEL_246;
        }
        DWORD1(v92) = v13;
        if (v13 > 2)
        {
          sub_1000CEAEC(0, 4, "%s:%d Unsupported type!\n");
          goto LABEL_176;
        }

LABEL_248:
          __break(0x5507u);
          return;
        }

LABEL_244:
                    __break(0x5516u);
                    goto LABEL_245;
                  }

                  uint64_t v64 = 1539LL;
LABEL_195:
                  uint64_t v78 = v64;
                  uint64_t v53 = "%s:%d Unsupported data!\n";
                }

                else
                {
                  uint64_t v78 = 1691LL;
                  uint64_t v53 = "%s:%d Unsupported location type!\n";
                }

                int v51 = 4;
                sub_1000CEAEC( 0,  4,  v53,  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoLocation.cpp",  v78);
LABEL_147:
                uint64_t v54 = sub_100061274();
                if (!v54 || (v54 & 7) != 0) {
                  goto LABEL_244;
                }
                uint64_t v55 = sub_10008E168(v54, *(void *)(a1 + 8));
                __int16 v86 = -21846;
                int v85 = -1431655766;
                if ((v9 & 1) != 0)
                {
                  unsigned int v56 = 0;
                }

                else
                {
                  if (HIWORD(v10)) {
                    goto LABEL_248;
                  }
                  LOWORD(v85) = bswap32(v10) >> 16;
                  unsigned int v56 = 2;
                }

                if (~(unint64_t)&v85 < v56
                  || (*(_BYTE *)((unint64_t)&v85 | v56) = v51, unint64_t v57 = v56 | 1LL, ~(unint64_t)&v85 < v57))
                {
LABEL_245:
                  __break(0x5513u);
                }

                *(_BYTE *)((unint64_t)&v85 | v57) = v6;
                unsigned int v58 = v56 + 2;
                if (v51 != 19) {
                  goto LABEL_166;
                }
                unint64_t v59 = (_WORD *)((char *)&v85 + v58);
                if (!__CFADD__(&v85, v58))
                {
                  if (!v59) {
                    goto LABEL_244;
                  }
                  *unint64_t v59 = __rev16(v18);
                  if (!a3 || (a3 & 7) != 0 || (((_BYTE)a3 + 16) & 7) != 0) {
                    goto LABEL_244;
                  }
                  int v60 = *(unsigned __int16 *)(a3 + 113);
                  if (v60 == 0xFFFF) {
                    goto LABEL_248;
                  }
                  unsigned int v58 = v56 | 4;
                  *(_WORD *)(a3 + 113) = v60 + 1;
                  if (!sub_100062D14((void *)a1, v10, 6, a3, 500))
                  {
                    if ((uint64_t *)a3 == &v89) {
                      sub_1000CEAEC( 0,  4,  "%s:%d pLocMsg == &locMsg\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoLocation.cpp",  1772);
                    }
                    a3 = 0LL;
                  }

LABEL_166:
                  unsigned int v19 = v84;
                  uint64_t v61 = sub_1000ABB10(v55, 0, 14LL, 128, v10, &v85, v58);
                  goto LABEL_170;
                }

      __break(0x5513u);
LABEL_167:
      __break(0x5512u);
LABEL_168:
      __break(0x550Au);
      return;
    case 3u:
      memset(&v80, 0, 24);
      (*(void (**)(uint64_t, void **))(*(void *)v16 + 72LL))(v16, &__p);
      unsigned int v23 = BYTE6(__n[0]);
      if (BYTE6(__n[0]) == 255) {
        goto LABEL_165;
      }
      int v24 = BYTE6(__n[0]) + 1LL;
      ++BYTE6(__n[0]);
      unsigned int v25 = ~((unint64_t)__n + 7);
      *((_BYTE *)__n + v23 + 7) = 0;
      unsigned int v26 = v23 + 2;
      BYTE6(__n[0]) = v23 + 2;
      if (v25 < v24) {
        goto LABEL_166;
      }
      *((_BYTE *)__n + v24 + 7) = 0;
      BOOL v27 = v23 + 3;
      BYTE6(__n[0]) = v23 + 3;
      if (v25 < v26) {
        goto LABEL_166;
      }
      *((_BYTE *)__n + v26 + 7) = 0;
      unsigned int v28 = HIBYTE(v88);
      if (v88 < 0) {
        unsigned int v28 = v87;
      }
      if (v28) {
        goto LABEL_41;
      }
      BYTE6(__n[0]) = v23 + 4;
      if (v25 < v27) {
        goto LABEL_166;
      }
      *((_BYTE *)__n + v27 + 7) = 0;
LABEL_41:
      std::string::~string((std::string *)&v80);
      goto LABEL_103;
    case 4u:
      unsigned int v29 = *(void *)(a1 + 1200);
      if (!v29 || (v29 & 7) != 0) {
        goto LABEL_163;
      }
      unsigned int v30 = (*(uint64_t (**)(uint64_t))(*(void *)v29 + 376LL))(v29);
      BYTE6(__n[0]) = 2;
      LOWORD(__n[1]) = 0;
      BYTE6(__n[0]) = 4;
      BYTE2(__n[1]) = 0;
      if (v30 == (_DWORD)v10)
      {
        if ((*(unsigned int (**)(uint64_t))(*(void *)v16 + 256LL))(v16))
        {
          (*(void (**)(uint64_t, void **))(*(void *)v16 + 96LL))(v16, &__p);
          goto LABEL_103;
        }

        uint64_t v44 = BYTE6(__n[0]);
        if (BYTE6(__n[0]) == 255) {
          goto LABEL_165;
        }
        ++BYTE6(__n[0]);
      }

      else
      {
        BYTE6(__n[0]) = 5;
        uint64_t v44 = 4;
      }

      *((_BYTE *)__n + v44 + 7) = 0;
      sub_100097318((uint64_t)&__p);
      goto LABEL_103;
    case 5u:
      (*(void (**)(uint64_t, void **))(*(void *)v16 + 56LL))(v16, &__p);
      goto LABEL_57;
    case 6u:
      (*(void (**)(uint64_t, void **))(*(void *)v16 + 64LL))(v16, &__p);
      goto LABEL_57;
    case 7u:
      sub_100062984(a1, v16, (uint64_t)__n + 7, 0x21u, (_BYTE *)__n + 6);
      if (v32 >= 0x20) {
        goto LABEL_168;
      }
      if (!v32) {
        goto LABEL_103;
      }
      goto LABEL_158;
    case 8u:
      unsigned int v31 = (*(uint64_t (**)(uint64_t))(*(void *)v16 + 280LL))(v16);
LABEL_55:
      if (!v31) {
        goto LABEL_158;
      }
      (*(void (**)(uint64_t, void **))(*(void *)v16 + 40LL))(v16, &__p);
LABEL_57:
      size_t v33 = HIBYTE(v88);
      if (v88 < 0) {
        size_t v33 = v87;
      }
      if (v33) {
        goto LABEL_103;
      }
      unint64_t v34 = BYTE6(__n[0]);
      if (BYTE6(__n[0]) == 255) {
        goto LABEL_165;
      }
      ++BYTE6(__n[0]);
      *((_BYTE *)__n + v34 + 7) = 0;
      goto LABEL_103;
    default:
      goto LABEL_158;
  }

LABEL_247:
                __break(0x5500u);
                goto LABEL_248;
              }
            }
          }
        }

        else
        {
          if (v23 >= 4)
          {
            unsigned int v37 = *(_DWORD *)(v7 + 3);
            int __src = *((unsigned __int8 *)v7 + 1);
            unsigned int v83 = v7[2];
            if (a3)
            {
              unsigned int v79 = *(_DWORD *)(v7 + 3);
              sub_10008B264(a1, a3);
              if ((a3 & 7) != 0) {
                goto LABEL_244;
              }
              operator delete((void *)a3);
              unsigned int v37 = v79;
              unsigned int v25 = 0;
              unsigned int v26 = v83;
            }

            unsigned int v32 = bswap32(v37);
            unsigned int v23 = v11 - 10;
            if (v26)
            {
              unsigned int v38 = v25;
              unsigned int v39 = v11 - 10;
              unsigned int v80 = v32;
              uint64_t v40 = operator new(0x98uLL);
              unsigned int v32 = v80;
              int v24 = __src;
              unsigned int v23 = v39;
              unsigned int v25 = v38;
              a3 = (uint64_t)v40;
            }

            else
            {
              if (v32 != v23)
              {
                a3 = 0LL;
LABEL_145:
                unsigned int v18 = 0;
                unsigned int v84 = 0;
                goto LABEL_146;
              }

              a3 = (uint64_t)&v89;
              int v24 = __src;
            }

            *(void *)(a3 + 144) = 0LL;
            *(_OWORD *)(a3 + 112) = 0u;
            *(_OWORD *)(a3 + 128) = 0u;
            *(_OWORD *)(a3 + 80) = 0u;
            *(_OWORD *)(a3 + 96) = 0u;
            *(_OWORD *)(a3 + 48) = 0u;
            *(_OWORD *)(a3 + 64) = 0u;
            *(_OWORD *)(a3 + 16) = 0u;
            *(_OWORD *)(a3 + 32) = 0u;
            *(_OWORD *)a3 = 0u;
            if ((a3 & 7) != 0) {
              goto LABEL_244;
            }
            *(void *)a3 = *(void *)(a1 + 8);
            if ((((_BYTE)a3 + 8) & 7) != 0) {
              goto LABEL_244;
            }
            *(_DWORD *)(a3 + 8) = v10;
            if ((((_BYTE)a3 + 12) & 3) != 0) {
              goto LABEL_244;
            }
            *(_DWORD *)(a3 + 12) = v6;
            if ((((_BYTE)a3 + 16) & 7) != 0) {
              goto LABEL_244;
            }
            if ((((_DWORD)a3 + 18) & 1) != 0) {
              goto LABEL_244;
            }
            *(_DWORD *)(a3 + 18) = v13;
            if ((((_DWORD)a3 + 22) & 1) != 0) {
              goto LABEL_244;
            }
            BOOL v27 = v7 + 5;
            *(_DWORD *)(a3 + 22) = v24;
            *(_WORD *)(a3 + 113) = v18;
            unsigned int v31 = v84;
            *(_WORD *)(a3 + 115) = v84;
            *(_DWORD *)(a3 + 133) = v32;
            goto LABEL_125;
          }

          unsigned int v18 = 0;
        }

uint64_t sub_10008AF70(uint64_t result, int a2)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    unsigned int v2 = 0;
    if (a2 != 4)
    {
      if (a2 == 8)
      {
        sub_1000888A0(result);
      }

      else
      {
        if (a2 == 32)
        {
          sub_10006329C(result, (uint64_t)&v2);
          return v2;
        }

        sub_1000CEAEC( 0,  4,  "%s:%d CIapLingoLocation::NotifyEvent unknown event class: 0x%04X\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoLocation.cpp",  892,  a2);
      }
    }

    return 0LL;
  }

  return result;
}

void sub_10008AFF8(uint64_t a1, unsigned int a2, unsigned int a3, uint64_t a4, int *a5)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_31;
  }
  char v6 = a3;
  __int128 v19 = 0u;
  __int128 v20 = 0u;
  uint64_t v28 = 0LL;
  __int128 v27 = 0u;
  __int128 v25 = 0u;
  __int128 v26 = 0u;
  __int128 v23 = 0u;
  __int128 v24 = 0u;
  __int128 v21 = 0u;
  __int128 v22 = 0u;
  uint64_t v8 = *(void *)(a1 + 8);
  *(void *)&__int128 v19 = *(void *)(a1 + 8);
  *((void *)&v19 + 1) = a2 | 0xA00000000LL;
  LOBYTE(v20) = 15;
  if (a3 >= 0x100) {
    goto LABEL_32;
  }
  BYTE1(v20) = a3;
  if (a3 > 9) {
    goto LABEL_23;
  }
  char v11 = 1;
  if (((1 << a3) & 0x16A) != 0)
  {
    HIDWORD(v19) = 0;
    if (!v8) {
      goto LABEL_31;
    }
LABEL_7:
    if ((v8 & 7) != 0) {
      goto LABEL_31;
    }
    sub_100057A4C(v8, 0xEu, 0LL, (uint64_t)&v19, 152);
    goto LABEL_9;
  }

  if (a3 != 7)
  {
    if (a3 == 9)
    {
      if (a4) {
        goto LABEL_16;
      }
LABEL_21:
      sub_1000CEAEC( 0,  4,  "%s:%d NULL pLocMsg\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoLocation.cpp",  996);
      if ((v11 & 1) == 0) {
        goto LABEL_30;
      }
      goto LABEL_9;
    }

void sub_10008B264(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_27;
  }
  if (!a2)
  {
    __break(0x5518u);
    goto LABEL_27;
  }

  if ((a2 & 7) != 0 || ((a2 + 12) & 3) != 0) {
    goto LABEL_27;
  }
  unsigned int v3 = *(_DWORD *)(a2 + 12);
  if (v3 > 0xFF) {
    goto LABEL_28;
  }
  if (v3 - 6 > 3) {
    return;
  }
  if ((((_BYTE)a2 + 16) & 7) != 0 || (((_DWORD)a2 + 18) & 1) != 0) {
    goto LABEL_27;
  }
  unsigned int v4 = *(_DWORD *)(a2 + 18);
  if (v4 > 3)
  {
LABEL_28:
    __break(0x550Au);
    return;
  }

  if ((((_DWORD)a2 + 22) & 1) != 0)
  {
LABEL_27:
    __break(0x5516u);
    goto LABEL_28;
  }

  unsigned int v5 = *(_DWORD *)(a2 + 22);
  if (v5 > 0xFF) {
    goto LABEL_28;
  }
  if (v4 == 2)
  {
    if (v5 == 2 || v5 == 1)
    {
LABEL_19:
      char v6 = (void **)(a2 + 26);
      if ((((_DWORD)a2 + 26) & 1) == 0)
      {
        if (*v6) {
          operator delete[](*v6);
        }
        *char v6 = 0LL;
        goto LABEL_23;
      }

      goto LABEL_27;
    }
  }

  else if (v4 == 1 && !v5)
  {
    goto LABEL_19;
  }

uint64_t sub_10008B34C(uint64_t result, int a2)
{
  if (result && a2 == 9)
  {
    *(_BYTE *)uint64_t result = 14;
    if (result != -1)
    {
      *(void *)(result + 1) = 0x300000000000000LL;
      return 0LL;
    }
  }

  else
  {
    __break(0x5518u);
  }

  __break(0x5500u);
  return result;
}

uint64_t sub_10008B380(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_10;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_10;
  }
  sub_10006107C(result, a2, 1);
  *(void *)uint64_t v2 = off_1001061C8;
  *(void *)(v2 + 1264) = 0x400000004LL;
  pthread_mutex_init((pthread_mutex_t *)(v2 + 1200), 0LL);
  *(void *)(v2 + 1192) = 0LL;
  uint64_t result = *(void *)(v2 + 8);
  if (!result
    || (result & 7) != 0
    || (sub_10005758C(result, 1u, 0), (uint64_t result = *(void *)(v2 + 8)) == 0)
    || (result & 7) != 0
    || (sub_100057538(result, 1u, 0), (uint64_t result = sub_100061274()) == 0)
    || (result & 7) != 0)
  {
LABEL_10:
    __break(0x5516u);
  }

  else
  {
    sub_10008C5A8(result, 1, 109, a2);
    return v2;
  }

  return result;
}

uint64_t sub_10008B43C(uint64_t result, uint64_t a2)
{
  if (result && (result & 7) == 0) {
    return sub_10008B380(result, a2);
  }
  __break(0x5516u);
  return result;
}

void sub_10008B450(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0 || (*(void *)a1 = off_1001061C8, (uint64_t v2 = sub_100061274()) == 0) || (v2 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    sub_10008C5A8(v2, 1, 0, *(void *)(a1 + 8));
    *(void *)(a1 + 1192) = 0LL;
    pthread_mutex_destroy((pthread_mutex_t *)(a1 + 1200));
    sub_100061324(a1);
  }

void sub_10008B4B8(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    sub_10008B450(a1);
  }
}

void sub_10008B4CC(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    sub_10008B450(a1);
    operator delete(v1);
  }

uint64_t sub_10008B4F0(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_40;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_40;
  }
  if (!*(void *)(result + 8)) {
    goto LABEL_10;
  }
  uint64_t result = sub_100061274();
  if (!result || (result & 7) != 0) {
    goto LABEL_40;
  }
  if (!sub_10008E7AC(result, *(void *)(v2 + 8)))
  {
LABEL_10:
    uint64_t v4 = 89LL;
LABEL_11:
    sub_1000AD43C(a2);
    return v4;
  }

  uint64_t result = *(void *)(v2 + 8);
  if (!result || (result & 7) != 0) {
    goto LABEL_40;
  }
  uint64_t result = sub_1000569F0(result);
  if ((result & 1) != 0) {
    goto LABEL_10;
  }
  if (!a2 || (a2 & 7) != 0) {
    goto LABEL_40;
  }
  int v5 = *(unsigned __int16 *)(a2 + 126);
  uint64_t v6 = *(void *)(a2 + 24);
  int v7 = *(unsigned __int16 *)(a2 + 128);
  uint64_t v8 = *(void *)(a2 + 8);
  __int16 v12 = *(_WORD *)(a2 + 126);
  uint64_t v11 = 0LL;
  uint64_t v14 = 0LL;
  if (*(void *)(v2 + 1192) != v8) {
    goto LABEL_38;
  }
  uint64_t result = sub_100061274();
  if (!result || (result & 7) != 0)
  {
LABEL_40:
    __break(0x5516u);
    goto LABEL_41;
  }

  uint64_t result = sub_100054B88(result, *(void *)(v2 + 1192));
  if (!(_DWORD)result) {
    goto LABEL_38;
  }
  if (!v6)
  {
    __break(0x5518u);
    goto LABEL_40;
  }

  LOWORD(v14) = v5;
  uint64_t v13 = v8;
  if (v5 != 10)
  {
    if (v5 != 8)
    {
      if (v5 == 4 && v7 == 2)
      {
        if (v6 != -1)
        {
          __int16 v12 = *(unsigned __int8 *)(v6 + 1);
          BYTE5(v14) = *(_BYTE *)v6;
          BYTE4(v14) = v12;
LABEL_34:
          uint64_t v4 = sub_100062E78(v2, *(_DWORD *)(a2 + 68), &v12, &v11, 0xFFFFu);
          if ((_DWORD)v4) {
            goto LABEL_11;
          }
          pthread_mutex_lock((pthread_mutex_t *)(v2 + 1200));
          uint64_t result = *(void *)(v2 + 8);
          if (result && (result & 7) == 0)
          {
            sub_100057A4C(result, 1u, 0LL, (uint64_t)&v13, 16);
            pthread_mutex_unlock((pthread_mutex_t *)(v2 + 1200));
            uint64_t v4 = 0LL;
            goto LABEL_11;
          }

          goto LABEL_40;
        }

        goto LABEL_41;
      }

uint64_t sub_10008B70C(uint64_t result, uint64_t a2, unsigned int a3)
{
  if (!result) {
    goto LABEL_11;
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_11;
  }
  if (a3 == 6) {
    return result;
  }
  uint64_t v6 = 4LL;
  uint64_t result = *(void *)(result + 8);
  if (!result || (result & 7) != 0) {
    goto LABEL_11;
  }
  uint64_t result = sub_10001864C(result);
  uint64_t v5 = result;
  if (a3 > 0xFF)
  {
LABEL_12:
    __break(0x5507u);
    return result;
  }

  BYTE4(v6) = a3;
  BYTE5(v6) = 15;
  pthread_mutex_lock((pthread_mutex_t *)(v3 + 1200));
  uint64_t result = *(void *)(v3 + 8);
  if (!result || (result & 7) != 0)
  {
LABEL_11:
    __break(0x5516u);
    goto LABEL_12;
  }

  sub_100057A4C(result, 1u, 0LL, (uint64_t)&v5, 16);
  return pthread_mutex_unlock((pthread_mutex_t *)(v3 + 1200));
}

void sub_10008B7C4(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_95;
  }
  int v43 = 0;
  if (a2 <= 7)
  {
    if (a2 != 1)
    {
      if (a2 != 4) {
        return;
      }
      *(void *)(a1 + 1192) = a4;
      if (!a4) {
        sub_1000D2500();
      }
      uint64_t v8 = sub_100061274();
      if (!v8 || (v8 & 7) != 0) {
        goto LABEL_95;
      }
      if (sub_10008D184(v8, *(void *)(a1 + 1192)) == 1)
      {
        v42[4] = 0xAAAAAAAAAAAAAAAALL;
        v42[5] = 0xAAAAAAAAAAAAAAAALL;
        v42[0] = 0x1100000004LL;
        v42[1] = *(void *)(a1 + 1192);
        v42[2] = 0x300000000LL;
        uint64_t v9 = *(void *)(a1 + 8);
        v42[3] = v9;
        if (!v9 || (v9 & 7) != 0) {
          goto LABEL_95;
        }
        sub_100057A4C(v9, 0, 0LL, (uint64_t)v42, 48);
        *(void *)(a1 + 1192) = 0LL;
      }

      uint64_t v10 = sub_1000C60C4();
      if (v10)
      {
        if ((v10 & 7) == 0)
        {
          (*(void (**)(uint64_t, void))(*(void *)v10 + 88LL))(v10, *(void *)(a1 + 1192));
          uint64_t v11 = sub_1000C60C4();
          if (v11)
          {
            if ((v11 & 7) == 0)
            {
              (*(void (**)(uint64_t, void, uint64_t))(*(void *)v11 + 144LL))( v11,  *(void *)(a1 + 1192),  2LL);
              return;
            }
          }
        }
      }

      goto LABEL_95;
    }

    if (!*(void *)(a1 + 1192)) {
      return;
    }
    LOBYTE(v42[0]) = 4;
    int v19 = sub_10008BCAC(*(void *)(a1 + 8));
    uint64_t v20 = sub_100061274();
    if (!v20) {
      goto LABEL_95;
    }
    if ((v20 & 7) != 0) {
      goto LABEL_95;
    }
    char v21 = sub_10008CBE4(v20, *(void *)(a1 + 1192));
    uint64_t v22 = sub_100061274();
    if (!v22 || (v22 & 7) != 0) {
      goto LABEL_95;
    }
    int v23 = sub_10008CD68(v22, *(void *)(a1 + 1192));
    int v24 = v23;
    int v25 = v21 & 0xC;
    switch(a3)
    {
      case 1LL:
        LOBYTE(v42[0]) = 2;
        unsigned int v26 = *(_DWORD *)(a1 + 1264);
        if (v26 > 7) {
          goto LABEL_96;
        }
        if (v26 != 2)
        {
          int v27 = 0;
          *(_DWORD *)(a1 + 1264) = 2;
          if (v25 == 4) {
            int v28 = 1;
          }
          else {
            int v28 = v23;
          }
          goto LABEL_80;
        }

        break;
      case 2LL:
        LOBYTE(v42[0]) = 3;
        unsigned int v31 = *(_DWORD *)(a1 + 1264);
        if (v31 > 7) {
          goto LABEL_96;
        }
        if (v31 != 3)
        {
          int v27 = 0;
          *(_DWORD *)(a1 + 1264) = 3;
          goto LABEL_77;
        }

        break;
      case 3LL:
        LOBYTE(v42[0]) = 0;
        unsigned int v32 = *(_DWORD *)(a1 + 1268);
        if (v32 > 7) {
          goto LABEL_96;
        }
        if (v32)
        {
          *(_DWORD *)(a1 + 1268) = 0;
          if (v25 == 4) {
            int v28 = 1;
          }
          else {
            int v28 = v23;
          }
          int v27 = 1;
          goto LABEL_80;
        }

        break;
      case 4LL:
        LOBYTE(v42[0]) = 1;
        unsigned int v33 = *(_DWORD *)(a1 + 1268);
        if (v33 > 7) {
          goto LABEL_96;
        }
        if (v33 != 1)
        {
          int v27 = 0;
          *(_DWORD *)(a1 + 1268) = 1;
LABEL_77:
          int v28 = v25 == 4 ? 0 : v23;
LABEL_80:
          if (v19)
          {
            uint64_t v34 = sub_100061274();
            if (!v34 || (v34 & 7) != 0) {
              goto LABEL_95;
            }
            sub_10008CC64(v34, *(void *)(a1 + 1192), 1, v24 | v28);
            if (v27) {
              usleep(0x3D090u);
            }
            uint64_t v35 = *(void *)(a1 + 1192);
            if (!v35 || (v35 & 7) != 0) {
              goto LABEL_95;
            }
            int v36 = (*(uint64_t (**)(void, void))(*(void *)v35 + 16LL))(*(void *)(a1 + 1192), 0LL);
            uint64_t v37 = sub_1000ABB10(v35, 0, 1LL, 6, v36, v42, 1u);
            if (!v37
              || (uint64_t v38 = v37,
                  uint64_t v39 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 48LL))(a1),
                  (int v43 = sub_10008BDB0(v38, 1, v39, 200)) == 0))
            {
              if (((v28 | v24 ^ 1) & 1) == 0) {
                usleep(0x186A0u);
              }
              uint64_t v40 = sub_100061274();
              if (!v40 || (v40 & 7) != 0) {
                goto LABEL_95;
              }
              sub_10008CC64(v40, *(void *)(a1 + 1192), 1, v28);
            }
          }
        }

        break;
      default:
        return;
    }
  }

  else
  {
    if (a2 != 8)
    {
      if (a2 == 32)
      {
        sub_10006329C(a1, (uint64_t)&v43);
        int v43 = 0;
        uint64_t v13 = *(void *)(a1 + 8);
        if (v13 && (v13 & 7) == 0)
        {
          if (!sub_100057644(v13, 1u)) {
            return;
          }
          unsigned int v14 = sub_100062E0C();
          uint64_t v15 = *(void *)(a1 + 8);
          if (v15)
          {
            if ((v15 & 7) == 0)
            {
              unsigned int v16 = sub_1000575F0(v15, 1u);
              if (v14 < v16)
              {
LABEL_97:
                __break(0x5515u);
                return;
              }

              if (v14 - v16 < 0x1F4) {
                return;
              }
              uint64_t v17 = *(void *)(a1 + 8);
              if (v17)
              {
                if ((v17 & 7) == 0)
                {
                  sub_10005758C(v17, 1u, 0);
                  uint64_t v18 = *(void *)(a1 + 8);
                  if (v18)
                  {
                    if ((v18 & 7) == 0)
                    {
                      sub_100057538(v18, 1u, 0);
                      return;
                    }
                  }
                }
              }
            }
          }
        }
      }

      else
      {
        if (a2 != 64) {
          return;
        }
        switch(a3)
        {
          case -1LL:
            uint64_t v30 = sub_1000C60C4();
            if (v30 && (v30 & 7) == 0)
            {
              int v7 = *(void (**)(void))(*(void *)v30 + 136LL);
              goto LABEL_62;
            }

            break;
          case 6LL:
            uint64_t v29 = sub_1000C60C4();
            if (v29 && (v29 & 7) == 0)
            {
              int v7 = *(void (**)(void))(*(void *)v29 + 128LL);
              goto LABEL_62;
            }

            break;
          case 4LL:
            uint64_t v6 = sub_1000C60C4();
            if (v6 && (v6 & 7) == 0)
            {
              int v7 = *(void (**)(void))(*(void *)v6 + 120LL);
LABEL_62:
              v7();
              return;
            }

            break;
          default:
            return;
        }
      }

uint64_t sub_10008BCAC(uint64_t result)
{
  if (!result) {
    return 0LL;
  }
  if ((result & 7) == 0)
  {
    uint64_t result = sub_100057A88(result);
    if (result)
    {
      uint64_t v1 = result;
      if ((result & 7) == 0)
      {
        sub_10005789C(result, 1u);
        uint64_t result = sub_1000614B8(1LL, v1);
        int v2 = result;
        if (!result) {
          goto LABEL_13;
        }
        if ((result & 7) == 0)
        {
          uint64_t v3 = (uint64_t *)(result + 1192);
          if (((result + 1192) & 7) == 0)
          {
            if (!*v3) {
              goto LABEL_13;
            }
            uint64_t result = sub_100061274();
            if (result)
            {
              if ((result & 7) == 0)
              {
                if (sub_100054B88(result, *v3))
                {
                  uint64_t v4 = 1LL;
LABEL_14:
                  sub_1000578E8(v1, 1u);
                  return v4;
                }

uint64_t sub_10008BDB0(uint64_t result, int a2, uint64_t a3, int a4)
{
  if (!result) {
    goto LABEL_17;
  }
  uint64_t v4 = a3;
  if ((result & 7) != 0) {
    goto LABEL_17;
  }
  __int16 v6 = *(_WORD *)(result + 126);
  int v7 = *(_DWORD *)(result + 68);
  uint64_t result = sub_1000AB4C4(a3, result, a2, 1u);
  uint64_t v8 = (void *)result;
  if ((_DWORD)result) {
    return (uint64_t)v8;
  }
  if (!v4)
  {
    uint64_t result = sub_100061274();
    if (!result || (result & 7) != 0) {
      goto LABEL_17;
    }
    uint64_t result = sub_10008C35C(result, 1);
    uint64_t v4 = result;
    if (!result) {
      return 0LL;
    }
  }

  if ((v4 & 7) == 0)
  {
    sub_10005789C(v4, 1u);
    uint64_t result = sub_1000614B8(1LL, v4);
    if (!result)
    {
      uint64_t v8 = 0LL;
LABEL_14:
      sub_1000578E8(v4, 1u);
      return (uint64_t)v8;
    }

    if ((result & 7) == 0)
    {
      uint64_t v8 = sub_100062D14((void *)result, v7, v6, 0LL, a4);
      if (!(_DWORD)v8)
      {
        sub_10005758C(v4, 1u, 1);
        int v9 = sub_100062E0C();
        sub_100057538(v4, 1u, v9);
      }

      goto LABEL_14;
    }
  }

uint64_t sub_10008BEC4(int a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t result = sub_10008BCAC(a2);
  if (!(_DWORD)result) {
    return 19LL;
  }
  if (!v2)
  {
    uint64_t result = sub_100061274();
    if (!result || (result & 7) != 0) {
      goto LABEL_22;
    }
    uint64_t result = sub_10008C35C(result, 1);
    uint64_t v2 = result;
    if (!result) {
      return 19LL;
    }
  }

  if ((v2 & 7) == 0)
  {
    uint64_t result = sub_100057A88(v2);
    if (result)
    {
      uint64_t v5 = result;
      if ((result & 7) == 0)
      {
        sub_10005789C(result, 1u);
        uint64_t result = sub_1000614B8(1LL, v5);
        if (!result)
        {
          sub_1000CEAEC( 0,  4,  "%s:%d No Object Pointer, cannot GetDevCapabilities\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoMicrophone.cpp",  720);
          uint64_t v12 = 19LL;
LABEL_20:
          sub_1000578E8(v5, 1u);
          return v12;
        }

        uint64_t v6 = result;
        if ((result & 7) == 0)
        {
          int v7 = (pthread_mutex_t *)(result + 1200);
          uint64_t result = pthread_mutex_lock((pthread_mutex_t *)(result + 1200));
          uint64_t v8 = (uint64_t *)(v6 + 1192);
          if (((v6 + 1192) & 7) == 0)
          {
            uint64_t v9 = *v8;
            if (*v8)
            {
              if ((v9 & 7) == 0)
              {
                int v10 = (*(uint64_t (**)(uint64_t, void))(*(void *)v9 + 16LL))(v9, 0LL);
                uint64_t v11 = sub_1000ABB10(v9, 0, 1LL, 7, v10, 0LL, 0);
                if (v11) {
                  uint64_t v12 = sub_10008BDB0(v11, 0, v5, a1);
                }
                else {
                  uint64_t v12 = 12LL;
                }
                pthread_mutex_unlock(v7);
                goto LABEL_20;
              }
            }
          }
        }
      }
    }
  }

uint64_t sub_10008C044(uint64_t result, int a2)
{
  if (!result || a2 != 9)
  {
    __break(0x5518u);
LABEL_12:
    __break(0x5516u);
    goto LABEL_13;
  }

  uint64_t v2 = result;
  uint64_t result = sub_1000438B8();
  if (!result) {
    goto LABEL_12;
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_12;
  }
  int v4 = (*(uint64_t (**)(uint64_t))(*(void *)result + 184LL))(result);
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 200LL))(v3);
  *(_BYTE *)uint64_t v2 = 1;
  if (v2 == -1)
  {
LABEL_13:
    __break(0x5500u);
    return result;
  }

  uint64_t v5 = 0x100000000000000LL;
  if (v4) {
    uint64_t v5 = 0x900000000000000LL;
  }
  if ((_DWORD)result) {
    v5 |= 0x1000000000000000uLL;
  }
  *(void *)(v2 + 1) = v5;
  return 0LL;
}

void *sub_10008C0EC(void *result)
{
  if (!result
    || (uint64_t v1 = result, (result & 7) != 0)
    || (*uint64_t result = off_100106278,
        char v2 = (_BYTE)result + 8,
        sub_100010C30(result + 1),
        *((_BYTE *)v1 + 168) = 0,
        pthread_mutex_init((pthread_mutex_t *)(v1 + 4), 0LL),
        uint64_t result = (void *)pthread_mutex_init((pthread_mutex_t *)(v1 + 12), 0LL),
        (v2 & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    sub_1000180FC((uint64_t)(v1 + 1));
    v1[20] = 0LL;
    return v1;
  }

  return result;
}

uint64_t sub_10008C164(uint64_t result)
{
  if (!result
    || (uint64_t v1 = result, (result & 7) != 0)
    || (*(void *)uint64_t result = off_100106278,
        char v2 = result + 8,
        pthread_mutex_destroy((pthread_mutex_t *)(result + 32)),
        uint64_t result = pthread_mutex_destroy((pthread_mutex_t *)(v1 + 96)),
        (v2 & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    sub_1000180FC(v1 + 8);
    return v1;
  }

  return result;
}

uint64_t sub_10008C1C4(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_10008C164(result);
  }
  __break(0x5516u);
  return result;
}

void sub_10008C1D8(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t v1 = (void *)sub_10008C164(a1);
    operator delete(v1);
  }

uint64_t sub_10008C1FC(uint64_t result, signed int a2)
{
  if (!result) {
    goto LABEL_16;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_16;
  }
  if ((a2 + 32) >= 0x40)
  {
LABEL_17:
    __break(0x550Au);
    return result;
  }

  if (a2 >= 15)
  {
    __break(0x5518u);
LABEL_16:
    __break(0x5516u);
    goto LABEL_17;
  }

  uint64_t v6 = 0LL;
  uint64_t result = pthread_mutex_lock((pthread_mutex_t *)(result + 32));
  if (((v2 + 8) & 7) != 0 || ((v2 + 24) & 7) != 0) {
    goto LABEL_16;
  }
  if (*(void *)(v2 + 24))
  {
    if (((v2 + 16) & 7) == 0)
    {
      uint64_t v6 = *(void *)(v2 + 16);
      while (v6 != v2 + 8)
      {
        int v4 = sub_10000D014(&v6);
        uint64_t v5 = sub_10008C2EC(v2, *v4, a2);
        sub_10000D048(&v6);
        if (v5) {
          goto LABEL_14;
        }
      }

      goto LABEL_13;
    }

    goto LABEL_16;
  }

uint64_t sub_10008C2EC(uint64_t result, uint64_t a2, unsigned int a3)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_9;
  }
  uint64_t result = sub_100056728(a2);
  if (!a2 || !(_DWORD)result) {
    return 0LL;
  }
  if ((a2 & 7) != 0)
  {
LABEL_9:
    __break(0x5516u);
  }

  else if (a3 + 32 < 0x40)
  {
    return sub_1000573E0(a2, a3);
  }

  __break(0x550Au);
  return result;
}

uint64_t sub_10008C35C(uint64_t result, signed int a2)
{
  if (!result || (uint64_t v2 = result, (result & 7) != 0))
  {
LABEL_22:
    __break(0x5516u);
    goto LABEL_23;
  }

  if ((a2 + 32) < 0x40)
  {
    if (a2 >= 15)
    {
      __break(0x5518u);
    }

    else
    {
      uint64_t v9 = 0LL;
      uint64_t result = pthread_mutex_lock((pthread_mutex_t *)(result + 32));
      uint64_t v4 = v2 + 8;
      if (((v2 + 8) & 7) == 0 && ((v2 + 24) & 7) == 0)
      {
        if (!*(void *)(v2 + 24)) {
          goto LABEL_19;
        }
        if (((v2 + 16) & 7) == 0)
        {
          uint64_t v9 = *(void *)(v2 + 16);
          if (v9 != v4)
          {
            uint64_t v5 = 0LL;
            do
            {
              uint64_t v6 = sub_10000D014(&v9);
              uint64_t v7 = sub_10008C2EC(v2, *v6, a2);
              if (v7) {
                uint64_t v5 = *sub_10000D014(&v9);
              }
              sub_10000D048(&v9);
              if (v7) {
                BOOL v8 = 1;
              }
              else {
                BOOL v8 = v9 == v4;
              }
            }

            while (!v8);
            goto LABEL_20;
          }

uint64_t *sub_10008C468(uint64_t *result, int a2)
{
  if (!result || (result & 7) != 0)
  {
LABEL_37:
    __break(0x5516u);
LABEL_38:
    __break(0x5514u);
    goto LABEL_39;
  }

  if ((a2 + 32) >= 0x40)
  {
LABEL_39:
    __break(0x550Au);
    return result;
  }

  if (a2 >= 15)
  {
    __break(0x5518u);
    goto LABEL_37;
  }

  uint64_t v3 = sub_10000CEF8();
  pthread_mutex_lock(&stru_10011B978);
  uint64_t v12 = *(void *)(v3 + 8);
  if (v12 != v3)
  {
    while (1)
    {
      uint64_t result = sub_10000D014(&v12);
      if (!*result || (*result & 7) != 0) {
        goto LABEL_37;
      }
      if (!*(void *)(*result + 32)) {
        goto LABEL_28;
      }
      uint64_t result = sub_10000D014(&v12);
      if (*result) {
        BOOL v5 = (*result & 7) == 0;
      }
      else {
        BOOL v5 = 0;
      }
      if (!v5) {
        goto LABEL_37;
      }
      uint64_t v6 = *(void *)(*result + 32);
      BOOL v7 = v6 && (*(void *)(*result + 32) & 7LL) == 0;
      BOOL v8 = (_DWORD *)(v6 + 8);
      if ((*v8 & (1 << a2)) != 0) {
        uint64_t v10 = *sub_10000D014(&v12);
      }
      else {
LABEL_28:
      }
        uint64_t v10 = 0LL;
      sub_10000D048(&v12);
      if (v12 == v3 || v10 != 0) {
        goto LABEL_35;
      }
    }
  }

  uint64_t v10 = 0LL;
LABEL_35:
  pthread_mutex_unlock(&stru_10011B978);
  return (uint64_t *)v10;
}

uint64_t sub_10008C5A8(uint64_t result, signed int a2, int a3, uint64_t a4)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_14;
  }
  if ((a2 + 32) >= 0x40)
  {
LABEL_15:
    __break(0x550Au);
    return result;
  }

  if (a2 >= 15 || a2 != 7 && a2 != 9 && !a4)
  {
    __break(0x5518u);
LABEL_14:
    __break(0x5516u);
    goto LABEL_15;
  }

  uint64_t result = sub_100056728(a4);
  if (a4 && (_DWORD)result)
  {
    if ((a4 & 7) == 0) {
      return sub_100057208(a4, a2, a3);
    }
    goto LABEL_14;
  }

  return result;
}

uint64_t sub_10008C648(uint64_t result, signed int a2, uint64_t a3)
{
  if (!result || (result & 7) != 0)
  {
LABEL_11:
    __break(0x5516u);
    goto LABEL_12;
  }

  if ((a2 + 32) < 0x40)
  {
    if (a2 >= 15)
    {
      __break(0x5518u);
    }

    else
    {
      uint64_t result = sub_100056728(a3);
      if (!a3 || !(_DWORD)result) {
        return 0LL;
      }
      if ((a3 & 7) == 0) {
        return sub_100057348(a3, a2);
      }
    }

    goto LABEL_11;
  }

uint64_t sub_10008C6C4(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_11;
  }
  if (!a2) {
    return 0LL;
  }
  if ((a2 & 7) != 0) {
    goto LABEL_11;
  }
  uint64_t v3 = *(void *)(a2 + 32);
  if (!v3) {
    return 0LL;
  }
  if ((v3 & 7) == 0)
  {
    uint64_t v4 = (_DWORD *)(v3 + 8);
    if ((v4 & 7) == 0)
    {
      *uint64_t v4 = a3;
      return a3;
    }
  }

uint64_t sub_10008C710(uint64_t result, uint64_t a2)
{
  if (result && (result & 7) == 0)
  {
    if (!a2) {
      return 0LL;
    }
    if ((a2 & 7) == 0)
    {
      uint64_t v2 = *(void *)(a2 + 32);
      if (v2)
      {
        if ((v2 & 7) == 0)
        {
          uint64_t v3 = (unsigned int *)(v2 + 8);
        }

        goto LABEL_10;
      }

      return 0LL;
    }
  }

uint64_t sub_10008C758(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_10;
  }
  if (!a2) {
    return result;
  }
  if ((a2 & 7) != 0) {
    goto LABEL_10;
  }
  uint64_t v2 = *(void *)(a2 + 32);
  if (!v2) {
    return result;
  }
  if ((v2 & 7) != 0 || (uint64_t v3 = (_DWORD *)(v2 + 8), (v3 & 7) != 0))
  {
LABEL_10:
    __break(0x5516u);
    return result;
  }

  *uint64_t v3 = 0;
  return result;
}

uint64_t sub_10008C798(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_11;
  }
  if (!a2) {
    return 0LL;
  }
  if ((a2 & 7) != 0) {
    goto LABEL_11;
  }
  uint64_t v3 = *(void *)(a2 + 32);
  if (!v3) {
    return 0LL;
  }
  if ((v3 & 7) == 0)
  {
    uint64_t v4 = (_DWORD *)(v3 + 12);
    if ((v4 & 3) == 0)
    {
      *uint64_t v4 = a3;
      return a3;
    }
  }

uint64_t sub_10008C7E4(uint64_t result, uint64_t a2)
{
  if (result && (result & 7) == 0)
  {
    if (!a2) {
      return 0LL;
    }
    if ((a2 & 7) == 0)
    {
      uint64_t v2 = *(void *)(a2 + 32);
      if (v2)
      {
        if ((v2 & 7) == 0)
        {
          uint64_t v3 = (unsigned int *)(v2 + 12);
        }

        goto LABEL_10;
      }

      return 0LL;
    }
  }

uint64_t sub_10008C82C(uint64_t result, uint64_t a2)
{
  if (result && (result & 7) == 0)
  {
    if (!a2) {
      sub_1000D276C();
    }
    if ((a2 & 7) == 0)
    {
      uint64_t v2 = *(void *)(a2 + 32);
      if (!v2) {
        return sub_10008C904(result, a2);
      }
      if ((v2 & 7) == 0 && (((_BYTE)v2 + 8) & 7) == 0)
      {
        *(_DWORD *)(v2 + 8) = 0;
        if ((((_BYTE)v2 + 12) & 3) == 0)
        {
          *(_DWORD *)(v2 + 12) = 0;
          if ((((_BYTE)v2 + 16) & 7) == 0)
          {
            *(_DWORD *)(v2 + 16) = 0;
            if ((((_BYTE)v2 + 20) & 3) == 0)
            {
              *(_DWORD *)(v2 + 20) = 0;
              if ((((_BYTE)v2 + 28) & 3) == 0)
              {
                *(_DWORD *)(v2 + 28) = -1;
                if ((((_BYTE)v2 + 32) & 7) == 0)
                {
                  *(_DWORD *)(v2 + 32) = 0;
                  if ((((_BYTE)v2 + 36) & 3) == 0)
                  {
                    *(_DWORD *)(v2 + 36) = 0;
                    if ((((_BYTE)v2 + 48) & 7) == 0)
                    {
                      *(_BYTE *)(v2 + 48) = 0;
                      uint64_t v3 = (_DWORD *)(v2 + 24);
                      if ((v3 & 7) == 0)
                      {
                        *uint64_t v3 = -1;
                        return sub_10008C904(result, a2);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_10008C904(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_52;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_52;
  }
  int v19 = -1431655766;
  int v20 = 4;
  uint64_t result = sub_1000B6CE0();
  if (!result || (result & 7) != 0) {
    goto LABEL_52;
  }
  sub_1000BA3A8(result, &v19, &v20);
  uint64_t v4 = sub_10000CEF8();
  uint64_t result = pthread_mutex_lock(&stru_10011B978);
  unsigned int v5 = v20 - 3;
  if ((v20 - 3) < 0xFFFFFFFE)
  {
    uint64_t v18 = *(void *)(v4 + 8);
    if (v18 != v4)
    {
      if (a2 && (a2 & 7) == 0)
      {
        while (1)
        {
          uint64_t v6 = sub_10000D014(&v18);
          if ((*(unsigned int (**)(uint64_t, uint64_t))(*(void *)a2 + 104LL))(a2, *v6))
          {
            uint64_t result = (uint64_t)sub_10000D014(&v18);
            if (!*(void *)result || (*(void *)result & 7LL) != 0) {
              break;
            }
            if (*(void *)(*(void *)result + 32LL))
            {
              uint64_t result = (uint64_t)sub_10000D014(&v18);
              uint64_t v8 = *(void *)result;
              if (!*(void *)result || (v8 & 7) != 0) {
                break;
              }
              uint64_t v9 = *(void *)(v8 + 32);
              BOOL v10 = v9 && (v9 & 7) == 0;
              if (!v10 || (((_BYTE)v9 + 16) & 7) != 0LL) {
                break;
              }
            }
          }

          sub_10000D048(&v18);
          if (v18 == v4) {
            goto LABEL_28;
          }
        }
      }

      goto LABEL_52;
    }

void sub_10008CB5C(uint64_t a1, uint64_t a2, unsigned int a3)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_13;
  }
  if (a3 >= 0x100)
  {
    __break(0x5518u);
    goto LABEL_13;
  }

  if (!a2) {
    goto LABEL_10;
  }
  if ((a2 & 7) != 0)
  {
LABEL_13:
    __break(0x5516u);
    return;
  }

  uint64_t v3 = *(void *)(a2 + 32);
  if (v3)
  {
    if ((v3 & 7) == 0)
    {
      uint64_t v4 = (unsigned int *)(v3 + 20);
      if ((v4 & 3) == 0)
      {
        *uint64_t v4 = a3;
        return;
      }
    }

    goto LABEL_13;
  }

uint64_t sub_10008CBE4(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_11;
  }
  if (!a2) {
    goto LABEL_9;
  }
  if ((a2 & 7) != 0)
  {
LABEL_11:
    __break(0x5516u);
    return result;
  }

  uint64_t v2 = *(void *)(a2 + 32);
  if (v2)
  {
    if ((v2 & 7) == 0)
    {
      uint64_t v3 = (unsigned int *)(v2 + 20);
    }

    goto LABEL_11;
  }

void sub_10008CC64(uint64_t a1, uint64_t a2, int a3, char a4)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_24;
  }
  if (!a2) {
    goto LABEL_14;
  }
  if ((a2 & 7) != 0) {
    goto LABEL_24;
  }
  uint64_t v4 = *(void *)(a2 + 32);
  if (!v4)
  {
LABEL_14:
    sub_1000CEAEC( 0,  4,  "%s:%d NULL devPort.\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoPortMap.cpp",  753);
    return;
  }

  if ((v4 & 7) != 0) {
    goto LABEL_24;
  }
  unsigned int v5 = (int *)(v4 + 16);
  if (((v4 + 16) & 7) != 0) {
    goto LABEL_24;
  }
  int v6 = *v5;
  *v5 &= ~1u;
  unsigned int v7 = a3 + 32;
  if ((a4 & 1) != 0)
  {
    if (v7 <= 0x3F)
    {
      uint64_t v8 = (int *)(v4 + 32);
      if ((v8 & 7) == 0)
      {
        int v9 = 1 << a3;
        if (a3 < 0) {
          int v9 = 0;
        }
        int v10 = *v8 | v9;
        goto LABEL_21;
      }

      goto LABEL_24;
    }

uint64_t sub_10008CD68(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_12;
  }
  if (!a2) {
    sub_1000D276C();
  }
  if ((a2 & 7) != 0)
  {
LABEL_12:
    __break(0x5516u);
    return result;
  }

  uint64_t v2 = *(void *)(a2 + 32);
  if (v2)
  {
    if ((v2 & 7) == 0)
    {
      uint64_t v3 = (_BYTE *)(v2 + 16);
    }

    goto LABEL_12;
  }

  return 0LL;
}

uint64_t sub_10008CDC4(uint64_t result, uint64_t a2, int a3)
{
  if (!result) {
    goto LABEL_22;
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_22;
  }
  if (!a2) {
    sub_1000D276C();
  }
  if ((a2 & 7) != 0) {
    goto LABEL_22;
  }
  if (!*(void *)(a2 + 32)) {
    return result;
  }
  uint64_t result = sub_10008CEA8(result, a2);
  if (a3)
  {
    if ((result & 1) != 0) {
      return result;
    }
    uint64_t v6 = *(void *)(a2 + 32);
    if (v6)
    {
      if ((v6 & 7) == 0)
      {
        unsigned int v7 = (_DWORD *)(v6 + 16);
        if ((v7 & 7) == 0)
        {
          *v7 |= 2u;
          int v8 = *(unsigned __int8 *)(v3 + 168);
          if (v8 != 255)
          {
            char v9 = v8 + 1;
            goto LABEL_19;
          }

uint64_t sub_10008CEA8(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_12;
  }
  if (!a2) {
    sub_1000D276C();
  }
  if ((a2 & 7) != 0)
  {
LABEL_12:
    __break(0x5516u);
    return result;
  }

  uint64_t v2 = *(void *)(a2 + 32);
  if (v2)
  {
    if ((v2 & 7) == 0)
    {
      uint64_t v3 = (unsigned __int8 *)(v2 + 16);
    }

    goto LABEL_12;
  }

  return 0LL;
}

uint64_t *sub_10008CF04(uint64_t *result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
LABEL_31:
    __break(0x5516u);
    return result;
  }

  uint64_t v2 = sub_10000CEF8();
  pthread_mutex_lock(&stru_10011B978);
  if (*((_BYTE *)v1 + 168))
  {
    uint64_t v10 = *(void *)(v2 + 8);
    if (v10 != v2)
    {
      uint64_t v3 = 0LL;
      while (1)
      {
        uint64_t result = sub_10000D014(&v10);
        if (!*result || (*result & 7) != 0) {
          goto LABEL_31;
        }
        if (*(void *)(*result + 32))
        {
          uint64_t result = sub_10000D014(&v10);
          if (*result) {
            BOOL v5 = (*result & 7) == 0;
          }
          else {
            BOOL v5 = 0;
          }
          if (!v5) {
            goto LABEL_31;
          }
          uint64_t v6 = *(void *)(*result + 32);
          BOOL v7 = v6 && (*(void *)(*result + 32) & 7LL) == 0;
          int v8 = (_BYTE *)(v6 + 16);
          if ((*v8 & 2) != 0) {
            uint64_t v3 = *sub_10000D014(&v10);
          }
        }

        sub_10000D048(&v10);
        if (v10 == v2) {
          goto LABEL_30;
        }
      }
    }
  }

  uint64_t v3 = 0LL;
LABEL_30:
  pthread_mutex_unlock(&stru_10011B978);
  return (uint64_t *)v3;
}

void sub_10008D008(uint64_t a1, uint64_t a2, int a3)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_14;
  }
  if (!a2) {
    goto LABEL_12;
  }
  if ((a2 & 7) != 0)
  {
LABEL_14:
    __break(0x5516u);
    return;
  }

  uint64_t v3 = *(void *)(a2 + 32);
  if (!v3)
  {
LABEL_12:
    sub_1000CEAEC( 0,  4,  "%s:%d NULL devPort.\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoPortMap.cpp",  926);
    return;
  }

  if ((v3 & 7) != 0) {
    goto LABEL_14;
  }
  if ((((_BYTE)v3 + 36) & 3) != 0) {
    goto LABEL_14;
  }
  *(_DWORD *)(v3 + 36) = a3;
  uint64_t v4 = (uint64_t *)(v3 + 40);
  uint64_t v5 = *v4;
  if (*v4)
  {
    if ((v5 & 7) == 0)
    {
      sub_100057BF4(v5, a3);
      return;
    }

    goto LABEL_14;
  }

uint64_t sub_10008D0AC(uint64_t result, uint64_t a2)
{
  if (result && (result & 7) == 0)
  {
    if (!a2) {
      return 0LL;
    }
    if ((a2 & 7) == 0)
    {
      uint64_t v2 = *(void *)(a2 + 32);
      if (v2)
      {
        if ((v2 & 7) == 0)
        {
          uint64_t v3 = (unsigned int *)(v2 + 36);
        }

        goto LABEL_10;
      }

      return 0LL;
    }
  }

void sub_10008D0F4(uint64_t a1, uint64_t a2, int a3)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_12;
  }
  if (!a2) {
    goto LABEL_10;
  }
  if ((a2 & 7) != 0)
  {
LABEL_12:
    __break(0x5516u);
    return;
  }

  uint64_t v3 = *(void *)(a2 + 32);
  if (v3)
  {
    if ((v3 & 7) == 0)
    {
      uint64_t v4 = (_DWORD *)(v3 + 28);
      if (((v3 + 28) & 3) == 0)
      {
        uint64_t v5 = (_DWORD *)(v3 + 24);
        if ((v5 & 7) == 0)
        {
          *uint64_t v5 = *v4;
          *uint64_t v4 = a3;
          return;
        }
      }
    }

    goto LABEL_12;
  }

uint64_t sub_10008D184(uint64_t result, uint64_t a2)
{
  if (result && (result & 7) == 0)
  {
    if (!a2) {
      return 0xFFFFFFFFLL;
    }
    if ((a2 & 7) == 0)
    {
      uint64_t v2 = *(void *)(a2 + 32);
      if (v2)
      {
        if ((v2 & 7) == 0)
        {
          uint64_t v3 = (unsigned int *)(v2 + 28);
        }

        goto LABEL_10;
      }

      return 0xFFFFFFFFLL;
    }
  }

uint64_t sub_10008D1CC(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_12;
  }
  if (!a2) {
    sub_1000D276C();
  }
  if ((a2 & 7) != 0)
  {
LABEL_12:
    __break(0x5516u);
    return result;
  }

  uint64_t v2 = *(void *)(a2 + 32);
  if (v2)
  {
    if ((v2 & 7) == 0)
    {
      uint64_t v3 = (unsigned int *)(v2 + 24);
    }

    goto LABEL_12;
  }

  return 0xFFFFFFFFLL;
}

uint64_t sub_10008D224(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_10;
  }
  if (!a2) {
    return result;
  }
  if ((a2 & 7) != 0) {
    goto LABEL_10;
  }
  uint64_t v2 = *(void *)(a2 + 32);
  if (!v2) {
    return result;
  }
  if ((v2 & 7) != 0 || (uint64_t v3 = (_DWORD *)(v2 + 32), (v3 & 7) != 0))
  {
LABEL_10:
    __break(0x5516u);
    return result;
  }

  *uint64_t v3 = 0;
  return result;
}

uint64_t sub_10008D264(uint64_t result, int a2, char a3)
{
  if (!result) {
    goto LABEL_27;
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_27;
  }
  if ((*(unsigned int (**)(uint64_t))(*(void *)result + 216LL))(result) == 3)
  {
    if ((a3 & 1) != 0) {
      return 0LL;
    }
    if (a2) {
      BOOL v6 = (*(_WORD *)(v3 + 196) & 1) == 0;
    }
    else {
      BOOL v6 = 0LL;
    }
    sub_1000AE02C(v3, a2);
    return v6;
  }

  if (a2)
  {
    uint64_t result = sub_1000451B0();
    if (!result || (result & 7) != 0) {
      goto LABEL_27;
    }
    BOOL v6 = (*(unsigned int (**)(uint64_t, uint64_t))(*(void *)result + 152LL))(result, v3) != 2;
  }

  else
  {
    BOOL v6 = 0LL;
  }

  uint64_t result = sub_1000451B0();
  if (result)
  {
    if ((result & 7) == 0)
    {
      int v7 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 152LL))(result, v3);
      uint64_t result = sub_1000451B0();
      if (result)
      {
        if ((result & 7) == 0)
        {
          if (v7 == 3) {
            unsigned int v8 = 3;
          }
          else {
            unsigned int v8 = 2;
          }
          if (a2) {
            uint64_t v9 = v8;
          }
          else {
            uint64_t v9 = 1LL;
          }
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)result + 144LL))(result, v3, v9);
          return v6;
        }
      }
    }
  }

dispatch_source_s *sub_10008D37C(dispatch_source_s *result, uint64_t a2)
{
  if (!a2) {
    sub_1000D276C();
  }
  if ((a2 & 7) != 0
    || (uint64_t result = (dispatch_source_s *)operator new(0x58uLL), (result & 0xF) != 0)
    || (result & 7) != 0)
  {
LABEL_9:
    __break(0x5516u);
  }

  else
  {
    uint64_t result = sub_10008F0FC(result);
    *(void *)(a2 + 32) = result;
  }

  return result;
}

uint64_t sub_10008D3D8(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_10;
  }
  if (!a2) {
    sub_1000D276C();
  }
  if ((a2 & 7) != 0)
  {
LABEL_10:
    __break(0x5516u);
    return result;
  }

  uint64_t result = *(void *)(a2 + 32);
  *(void *)(a2 + 32) = 0LL;
  if (result)
  {
    if ((result & 7) == 0) {
      return (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
    }
    goto LABEL_10;
  }

  return result;
}

uint64_t sub_10008D42C(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_11;
  }
  if (!a2) {
    sub_1000D276C();
  }
  if ((a2 & 7) != 0) {
    goto LABEL_11;
  }
  uint64_t v3 = *(void *)(a2 + 32);
  if (!v3) {
    sub_1000D276C();
  }
  if ((v3 & 7) != 0 || (uint64_t v4 = (void *)(v3 + 64), (v4 & 7) != 0)) {
LABEL_11:
  }
    __break(0x5516u);
  else {
    *uint64_t v4 = a3;
  }
  return result;
}

void sub_10008D480(uint64_t a1, void *a2, uint64_t a3)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_23;
  }
  if (!a2) {
    goto LABEL_20;
  }
  if ((a2 & 7) != 0)
  {
LABEL_23:
    __break(0x5516u);
    return;
  }

  uint64_t v5 = a2[4];
  if (!v5) {
    goto LABEL_21;
  }
  if (!a3)
  {
LABEL_20:
    __break(0x5518u);
LABEL_21:
    sub_1000D276C();
  }

  if ((v5 & 7) != 0) {
    goto LABEL_23;
  }
  int v7 = (uint64_t *)(v5 + 40);
  uint64_t v8 = *v7;
  if (!v8)
  {
    if (sub_100056728(a3))
    {
      if ((a3 & 7) == 0)
      {
        uint64_t v9 = sub_10001864C(a3);
        if (v9) {
          sub_10008D56C(a1, v9, a3);
        }
        uint64_t v10 = a2[4];
        if (v10)
        {
          if ((v10 & 7) == 0)
          {
            int v11 = (uint64_t *)(v10 + 40);
            if ((v11 & 7) == 0)
            {
              *int v11 = a3;
              sub_100056ABC(a3, a2);
              return;
            }
          }
        }
      }

      goto LABEL_23;
    }

    goto LABEL_20;
  }

  if (v8 != a3) {
    sub_1000D276C();
  }
}

void sub_10008D56C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_34;
  }
  if (!a3)
  {
    __break(0x5518u);
    goto LABEL_34;
  }

  int v6 = sub_100056728(a3);
  if (v6) {
    uint64_t v7 = a3;
  }
  else {
    uint64_t v7 = 0LL;
  }
  if (!v6) {
    goto LABEL_14;
  }
  if ((a3 & 7) != 0) {
    goto LABEL_34;
  }
  char v8 = v6;
  uint64_t v9 = sub_10001864C(a3);
  if (!v9)
  {
LABEL_14:
    sub_1000CEAEC( 0,  4,  "%s:%d Handle not associated with a portObj! handle=%hhx\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoPortMap.cpp",  1352,  v7);
    if (!a2) {
      return;
    }
    int v10 = 0;
    int v11 = "Unknown";
LABEL_16:
    if ((a2 & 7) == 0)
    {
      int v12 = (const char *)(*(uint64_t (**)(uint64_t))(*(void *)a2 + 208LL))(a2);
      goto LABEL_18;
    }

uint64_t sub_10008D750(uint64_t result, signed int a2, uint64_t a3, uint64_t a4)
{
  if (!result || (result & 7) != 0)
  {
LABEL_17:
    __break(0x5516u);
    goto LABEL_18;
  }

  if (!a4)
  {
LABEL_15:
    __break(0x5518u);
    goto LABEL_16;
  }

  uint64_t result = sub_100056728(a4);
  if ((a2 + 32) <= 0x3F)
  {
    char v7 = result ^ 1;
    if (a2 > 14) {
      char v7 = 1;
    }
    if ((v7 & 1) == 0)
    {
      if ((a4 & 7) == 0)
      {
        if (sub_1000573E0(a4, a2) && sub_1000573E0(a4, a2) != a3) {
          sub_1000565F4(a4, a2);
        }
        if (!sub_1000573E0(a4, a2) || sub_1000573E0(a4, a2) == a3) {
          return sub_10005709C(a4, a2, a3);
        }
LABEL_16:
        sub_1000D276C();
      }

      goto LABEL_17;
    }

    goto LABEL_15;
  }

uint64_t sub_10008D828(uint64_t result, signed int a2, uint64_t a3)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_12;
  }
  if ((a2 + 32) >= 0x40)
  {
LABEL_13:
    __break(0x550Au);
    return result;
  }

  if (a2 >= 15 || (uint64_t result = sub_100056728(a3), !a3) || !(_DWORD)result)
  {
    __break(0x5518u);
    goto LABEL_12;
  }

  if ((a3 & 7) != 0)
  {
LABEL_12:
    __break(0x5516u);
    goto LABEL_13;
  }

  uint64_t result = sub_1000573E0(a3, a2);
  if (result)
  {
    sub_1000565F4(a3, a2);
    return sub_100057008(a3, a2, 0);
  }

  return result;
}

void sub_10008D8C0(uint64_t a1, uint64_t a2, char a3)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else if ((a3 & 1) != 0)
  {
    sub_10008D93C(a1, a2);
  }

  else
  {
    v5[6] = v3;
    v5[7] = v4;
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 0x40000000LL;
    v5[2] = sub_10008D930;
    v5[3] = &unk_1001062A0;
    v5[4] = a1;
    v5[5] = a2;
    dispatch_async(&_dispatch_main_q, v5);
  }

void sub_10008D930(uint64_t a1)
{
}

void sub_10008D93C(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_53;
  }
  int v4 = sub_100056728(a2);
  if (!a2 || !v4)
  {
    sub_1000CEAEC( 0,  4,  "%s:%d No Handle! Cannot delete registered Objects!\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoPortMap.cpp",  1552);
    return;
  }

  uint64_t v5 = sub_1000B6CE0();
  if (!v5) {
    goto LABEL_53;
  }
  if ((v5 & 7) != 0) {
    goto LABEL_53;
  }
  sub_1000BC08C(v5);
  if ((a2 & 7) != 0) {
    goto LABEL_53;
  }
  if (sub_10005794C(a2))
  {
    uint64_t v6 = sub_10005794C(a2);
    if (!v6 || (v6 & 7) != 0) {
      goto LABEL_53;
    }
    sub_10005ED08(v6);
  }

  if (sub_10005799C(a2))
  {
    uint64_t v7 = sub_10005799C(a2);
    if (!v7 || (v7 & 7) != 0) {
      goto LABEL_53;
    }
    sub_1000AB690(v7);
  }

  for (signed int i = 0; i != 15; ++i)
    sub_10008D828(a1, i, a2);
  uint64_t v9 = sub_10001864C(a2);
  uint64_t v22 = v9;
  if (v9) {
    sub_10008D56C(a1, v9, a2);
  }
  sub_100056D10(a2);
  uint64_t v10 = sub_100056FF0(a2);
  if (v10)
  {
    uint64_t v11 = v10;
    if ((v10 & 7) != 0) {
      goto LABEL_53;
    }
    if (sub_100056FF0(v10) == a2)
    {
      sub_100056FD8(v11, 0LL);
      sub_100056FD8(a2, 0LL);
    }
  }

  sub_10008DBFC(a1, a2);
  sub_10008DC90(a1, a2);
  sub_100056714(a2);
  operator delete(v12);
  if (!v9) {
    goto LABEL_48;
  }
  if ((v9 & 7) != 0) {
    goto LABEL_53;
  }
  uint64_t v13 = *(void *)(v9 + 32);
  if (!v13) {
    goto LABEL_48;
  }
  if ((v13 & 7) != 0)
  {
LABEL_53:
    __break(0x5516u);
    goto LABEL_54;
  }

  unsigned int v14 = *(unsigned __int8 *)(v13 + 59);
  if (v14 >= 2) {
    goto LABEL_54;
  }
  if (v14) {
    sub_10006E308(v9);
  }
  if ((*(unsigned int (**)(uint64_t))(*(void *)v9 + 216LL))(v9) != 3)
  {
    uint64_t v18 = *(void *)(v9 + 32);
    if (!v18 || (v18 & 7) != 0) {
      goto LABEL_53;
    }
    if (*(_BYTE *)(v18 + 57)) {
      goto LABEL_48;
    }
    int v19 = (void (**)(uint64_t *))(v18 + 64);
    if ((v19 & 7) == 0)
    {
      int v20 = *v19;
      if (v20) {
        v20(&v22);
      }
      goto LABEL_48;
    }

    goto LABEL_53;
  }

  sub_100087018(v15);
  if (!v15 || (v15 & 7) != 0) {
    goto LABEL_53;
  }
  if (*(unsigned __int8 *)(v15 + 190) >= 2u)
  {
LABEL_54:
    __break(0x550Au);
    return;
  }

  if (*(_BYTE *)(v15 + 190))
  {
    uint64_t v16 = sub_1000B6CE0();
    if (!v16 || (v16 & 7) != 0) {
      goto LABEL_53;
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)v16 + 104LL))(v16, v9);
    uint64_t v17 = *(void *)(v15 + 208);
    if (v17) {
      sub_1000D27A0(v17);
    }
    (*(void (**)(uint64_t, void))(*(void *)v15 + 368LL))(v15, 0LL);
    *(void *)(v15 + 208) = 0LL;
    (*(void (**)(uint64_t))(*(void *)v15 + 8LL))(v15);
  }

void sub_10008DBFC(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_11;
  }
  int v3 = sub_100056728(a2);
  if (!a2 || !v3)
  {
    sub_1000CEAEC( 0,  4,  "%s:%d No Handle, cannot delete IncomingProcess\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoPortMap.cpp",  1718);
    return;
  }

  if ((a2 & 7) != 0)
  {
LABEL_11:
    __break(0x5516u);
    return;
  }

  uint64_t v4 = sub_100057964(a2);
  if (v4)
  {
    if ((v4 & 7) == 0)
    {
      sub_10005EF38(v4);
      return;
    }

    goto LABEL_11;
  }

void sub_10008DC90(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_11;
  }
  int v3 = sub_100056728(a2);
  if (!a2 || !v3)
  {
    sub_1000CEAEC( 0,  4,  "%s:%d No Handle, cannot delete OugoingProcess\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoPortMap.cpp",  1757);
    return;
  }

  if ((a2 & 7) != 0)
  {
LABEL_11:
    __break(0x5516u);
    return;
  }

  uint64_t v4 = sub_1000579B4(a2);
  if (v4)
  {
    if ((v4 & 7) == 0)
    {
      sub_1000AB6C4(v4);
      return;
    }

    goto LABEL_11;
  }

void sub_10008DD24(uint64_t a1)
{
  if (a1)
  {
    if ((a1 & 7) == 0)
    {
      uint64_t v3 = 0LL;
      pthread_mutex_lock((pthread_mutex_t *)(a1 + 32));
      if ((((_BYTE)a1 + 8) & 7) == 0 && ((a1 + 24) & 7) == 0)
      {
        if (!*(void *)(a1 + 24))
        {
LABEL_8:
          pthread_mutex_unlock((pthread_mutex_t *)(a1 + 32));
          return;
        }

        while ((((int)a1 + 16) & 7LL) == 0)
        {
          uint64_t v3 = *(void *)(a1 + 16);
          uint64_t v2 = sub_10000D014(&v3);
          sub_10008DDC8(a1, *v2);
          if (!*(void *)(a1 + 24)) {
            goto LABEL_8;
          }
        }
      }
    }
  }

  __break(0x5516u);
}

void sub_10008DDC8(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_29;
  }
  if (!a2) {
    return;
  }
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 32));
  if (((a1 + 8) & 7) != 0 || ((a1 + 24) & 7) != 0) {
    goto LABEL_29;
  }
  if (*(void *)(a1 + 24))
  {
    if (((a1 + 16) & 7) != 0) {
      goto LABEL_29;
    }
    uint64_t v4 = *(uint64_t **)(a1 + 16);
    uint64_t v9 = v4;
    while (v4 != (uint64_t *)(a1 + 8))
    {
      if (*sub_10000D014((uint64_t *)&v9) == a2)
      {
        if (*(void *)(a1 + 160) == a2) {
          *(void *)(a1 + 160) = 0LL;
        }
        if ((a2 & 7) == 0)
        {
          sub_100056A74(a2);
          sub_100020944(a1 + 8, v9);
          break;
        }

        goto LABEL_29;
      }

      sub_10000D048(&v9);
      uint64_t v4 = v9;
    }
  }

  pthread_mutex_unlock((pthread_mutex_t *)(a1 + 32));
  if ((a2 & 7) != 0) {
    goto LABEL_29;
  }
  uint64_t v5 = sub_10005794C(a2);
  uint64_t v6 = sub_10005799C(a2);
  if (v6)
  {
    if ((v6 & 7) != 0) {
      goto LABEL_29;
    }
    sub_1000AB690(v6);
  }

  if (v5)
  {
    if ((v5 & 7) == 0)
    {
      sub_10005ED08(v5);
      sub_10005F020(v5, a2);
      return;
    }

    goto LABEL_29;
  }

  uint64_t v7 = sub_10001864C(a2);
  if (!v7)
  {
    char v8 = 0;
    goto LABEL_27;
  }

  if ((v7 & 7) != 0)
  {
LABEL_29:
    __break(0x5516u);
    return;
  }

  char v8 = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 280LL))(v7);
LABEL_27:
  sub_10008D8C0(a1, a2, v8);
}

void sub_10008DF34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_10;
  }
  int v5 = sub_100056728(a2);
  if (!a2 || !v5)
  {
    sub_1000CEAEC( 0,  4,  "%s:%d No Handle, cannot register IncomingProcess, obj=%hhx\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoPortMap.cpp",  1616,  a3);
    return;
  }

  if ((a2 & 7) != 0)
  {
LABEL_10:
    __break(0x5516u);
  }

  else
  {
    uint64_t v6 = sub_10005794C(a2);
    if (v6) {
      sub_1000D27A0(v6);
    }
    sub_100057934(a2, a3);
  }

void sub_10008DFD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_10;
  }
  int v5 = sub_100056728(a2);
  if (!a2 || !v5)
  {
    sub_1000CEAEC( 0,  4,  "%s:%d No Handle, cannot register OugoingProcess, obj=%hhx\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoPortMap.cpp",  1680,  a3);
    return;
  }

  if ((a2 & 7) != 0)
  {
LABEL_10:
    __break(0x5516u);
  }

  else
  {
    uint64_t v6 = sub_10005799C(a2);
    if (v6) {
      sub_1000D27A0(v6);
    }
    sub_100057984(a2, a3);
  }

uint64_t sub_10008E074(uint64_t result, uint64_t a2, int a3, int a4)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_18;
  }

  if ((a3 + 32) >= 0x40)
  {
LABEL_18:
    __break(0x550Au);
    return result;
  }

  if (a3) {
    BOOL v4 = 0;
  }
  else {
    BOOL v4 = a4 == 56;
  }
  char v5 = v4;
  if (v4 || !a3 && (a4 == 19 || a4 == 1)) {
    return sub_10008E0CC(result, a2, v5);
  }
  return result;
}

uint64_t sub_10008E0CC(uint64_t result, uint64_t a2, char a3)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_10;
  }
  if (!a2) {
    return result;
  }
  if ((a2 & 7) != 0) {
    goto LABEL_10;
  }
  uint64_t v3 = *(void *)(a2 + 32);
  if (!v3) {
    return result;
  }
  if ((v3 & 7) != 0 || (BOOL v4 = (_BYTE *)(v3 + 48), (v4 & 7) != 0))
  {
LABEL_10:
    __break(0x5516u);
    return result;
  }

  *BOOL v4 = a3;
  return result;
}

BOOL sub_10008E10C(BOOL result, uint64_t a2)
{
  if (!result || result & 7) {
    goto LABEL_11;
  }
  if (!a2) {
    return 0LL;
  }
  if ((a2 & 7) != 0) {
    goto LABEL_11;
  }
  uint64_t v2 = *(void *)(a2 + 32);
  if (!v2) {
    return 0LL;
  }
  if ((v2 & 7) == 0)
  {
    uint64_t v3 = (unsigned __int8 *)(v2 + 48);
    if ((v3 & 7) == 0)
    {
      unsigned int v4 = *v3;
      if (v4 < 2) {
        return v4 != 0;
      }
      goto LABEL_12;
    }
  }

uint64_t sub_10008E168(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_11;
  }
  uint64_t v2 = a2;
  int v3 = sub_100056728(a2);
  uint64_t result = 0LL;
  if (v2)
  {
    if (v3)
    {
      if ((v2 & 7) != 0) {
        goto LABEL_11;
      }
      uint64_t result = sub_10001864C(v2);
      if (result) {
        return result;
      }
      if (!sub_100057A20(v2)) {
        return sub_1000569D8(v2);
      }
      uint64_t result = sub_100056CF8(v2);
      if (!result) {
        return sub_1000569D8(v2);
      }
      if ((result & 7) != 0)
      {
LABEL_11:
        __break(0x5516u);
        return sub_1000569D8(v2);
      }
    }
  }

  return result;
}

uint64_t sub_10008E1F0(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result || (result & 7) != 0)
  {
LABEL_8:
    __break(0x5516u);
    return result;
  }

  uint64_t result = sub_100056728(a2);
  if ((_DWORD)result)
  {
    if (a2 && (a2 & 7) == 0) {
      return sub_100056FD8(a2, a3);
    }
    goto LABEL_8;
  }

  return result;
}

uint64_t sub_10008E24C(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_10;
  }
  uint64_t result = sub_100056728(a2);
  if (!(_DWORD)result) {
    return 0LL;
  }
  if (!a2 || (a2 & 7) != 0)
  {
LABEL_10:
    __break(0x5516u);
  }

  else
  {
    if (!sub_100056FF0(a2)) {
      sub_1000CEAEC( 0,  4,  "%s:%d No ctaHandle handle=%hhx\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoPortMap.cpp",  2065,  a2);
    }
    return sub_100056FF0(a2);
  }

  return result;
}

uint64_t sub_10008E2E0(uint64_t result)
{
  if (!result) {
    goto LABEL_7;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0
    || (uint64_t v2 = 0LL,
        pthread_mutex_lock((pthread_mutex_t *)(result + 32)),
        uint64_t result = (uint64_t)operator new(0x8F0uLL),
        (result & 0xF) != 0)
    || (result = sub_100056498(result), uint64_t v2 = result, (result & 7) != 0)
    || (sub_100056800(result, 1), uint64_t result = v1 + 8, ((v1 + 8) & 7) != 0))
  {
LABEL_7:
    __break(0x5516u);
  }

  else
  {
    sub_100020DF4(result, &v2);
    *(void *)(v1 + 160) = v2;
    pthread_mutex_unlock((pthread_mutex_t *)(v1 + 32));
    return v2;
  }

  return result;
}

uint64_t sub_10008E374(uint64_t result)
{
  if (!result
    || (uint64_t v1 = result, (result & 7) != 0)
    || (uint64_t v2 = (pthread_mutex_t *)(result + 32),
        uint64_t result = pthread_mutex_lock((pthread_mutex_t *)(result + 32)),
        (((_BYTE)v1 + 8) & 7) != 0)
    || ((v1 + 24) & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t v3 = *(unsigned int *)(v1 + 24);
    pthread_mutex_unlock(v2);
    return v3;
  }

  return result;
}

void sub_10008E3D4(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0)
  {
LABEL_11:
    __break(0x5516u);
    return;
  }

  if (a2)
  {
    if ((a2 & 7) == 0)
    {
      uint64_t v4 = sub_10001864C(a2);
      if (!v4)
      {
        char v5 = 0;
        goto LABEL_10;
      }

      if ((v4 & 7) == 0)
      {
        char v5 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 280LL))(v4);
LABEL_10:
        sub_10008D8C0(a1, a2, v5);
        return;
      }
    }

    goto LABEL_11;
  }

uint64_t sub_10008E450(uint64_t result, void (*a2)(uint64_t, uint64_t), uint64_t a3, _DWORD *a4)
{
  if (!result) {
    goto LABEL_20;
  }
  uint64_t v4 = result;
  if ((result & 7) != 0) {
    goto LABEL_20;
  }
  if (a2)
  {
    uint64_t v10 = 0LL;
    uint64_t result = pthread_mutex_lock((pthread_mutex_t *)(result + 32));
    if (a4)
    {
      *a4 = *(void *)(v4 + 24);
    }

    if (((v4 + 8) & 7) == 0 && ((v4 + 24) & 7) == 0)
    {
      if (!*(void *)(v4 + 24)) {
        return pthread_mutex_unlock((pthread_mutex_t *)(v4 + 32));
      }
      if (((v4 + 16) & 7) == 0)
      {
        uint64_t v8 = *(void *)(v4 + 16);
        uint64_t v10 = v8;
        while (v8 != v4 + 8)
        {
          uint64_t v9 = *sub_10000D014(&v10);
          if (v9) {
            a2(v9, a3);
          }
          sub_10000D048(&v10);
          uint64_t v8 = v10;
        }

        return pthread_mutex_unlock((pthread_mutex_t *)(v4 + 32));
      }
    }
  }

  else
  {
    __break(0x5518u);
  }

uint64_t sub_10008E550(uint64_t result, uint64_t a2, int a3)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_11;
  }
  if (!a2) {
    goto LABEL_9;
  }
  if ((a2 & 7) != 0)
  {
LABEL_11:
    __break(0x5516u);
    return result;
  }

  uint64_t v3 = *(void *)(a2 + 32);
  if (v3)
  {
    if ((v3 & 7) == 0)
    {
      uint64_t v4 = v3 + 40;
      if ((v4 & 7) == 0) {
        return *(void *)v4;
      }
    }

    goto LABEL_11;
  }

uint64_t sub_10008E5D4(uint64_t result, unsigned int a2)
{
  if (result)
  {
    uint64_t v2 = result;
    if ((result & 7) == 0)
    {
      uint64_t v4 = (pthread_mutex_t *)(result + 32);
      uint64_t result = pthread_mutex_lock((pthread_mutex_t *)(result + 32));
      uint64_t v5 = v2 + 8;
      if (((v2 + 8) & 7) == 0 && ((v2 + 24) & 7) == 0)
      {
        if (!*(void *)(v2 + 24))
        {
LABEL_19:
          uint64_t v7 = 0LL;
LABEL_20:
          pthread_mutex_unlock(v4);
          return v7;
        }

        if (((v2 + 16) & 7) == 0)
        {
          uint64_t v6 = *(void *)(v2 + 16);
          uint64_t v9 = v6;
          while (v6 != v5)
          {
            uint64_t result = (uint64_t)sub_10000D014(&v9);
            uint64_t v7 = *(void *)result;
            if (*(void *)result) {
              BOOL v8 = (*(void *)result & 7LL) == 0;
            }
            else {
              BOOL v8 = 0;
            }
            if (!v8) {
              goto LABEL_21;
            }
            uint64_t result = sub_10001864C(*(void *)result);
            if (result)
            {
              if ((result & 7) != 0) {
                goto LABEL_21;
              }
              uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 216LL))(result);
              if (a2 >= 8) {
                goto LABEL_22;
              }
              if ((_DWORD)result == a2) {
                goto LABEL_20;
              }
            }

            sub_10000D048(&v9);
            uint64_t v6 = v9;
          }

          goto LABEL_19;
        }
      }
    }
  }

uint64_t sub_10008E6CC(uint64_t result, int a2)
{
  if (!result) {
    goto LABEL_19;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_19;
  }
  uint64_t v4 = (pthread_mutex_t *)(result + 32);
  uint64_t result = pthread_mutex_lock((pthread_mutex_t *)(result + 32));
  uint64_t v5 = v2 + 8;
  if (((v2 + 8) & 7) != 0 || ((v2 + 24) & 7) != 0) {
    goto LABEL_19;
  }
  if (*(void *)(v2 + 24))
  {
    if (((v2 + 16) & 7) == 0)
    {
      uint64_t v6 = *(void *)(v2 + 16);
      uint64_t v9 = v6;
      while (v6 != v5)
      {
        uint64_t v7 = *sub_10000D014(&v9);
        uint64_t result = sub_100056728(v7);
        if ((_DWORD)result)
        {
          if (v7) {
            BOOL v8 = (v7 & 7) == 0;
          }
          else {
            BOOL v8 = 0;
          }
          if (!v8) {
            goto LABEL_19;
          }
        }

        sub_10000D048(&v9);
        uint64_t v6 = v9;
      }

      goto LABEL_17;
    }

uint64_t sub_10008E7AC(uint64_t result, uint64_t a2)
{
  if (result)
  {
    uint64_t v2 = result;
    if ((result & 7) == 0)
    {
      if (!a2) {
        return 0LL;
      }
      uint64_t v4 = (pthread_mutex_t *)(result + 32);
      uint64_t result = pthread_mutex_lock((pthread_mutex_t *)(result + 32));
      uint64_t v5 = v2 + 8;
      if (((v2 + 8) & 7) == 0 && ((v2 + 24) & 7) == 0)
      {
        if (!*(void *)(v2 + 24)) {
          goto LABEL_12;
        }
        if (((v2 + 16) & 7) == 0)
        {
          uint64_t v8 = *(void *)(v2 + 16);
          if (v8 != v5)
          {
            do
            {
              uint64_t v6 = sub_10000D014(&v8);
              BOOL v7 = *v6 == a2;
              if (*v6 == a2) {
                break;
              }
              sub_10000D048(&v8);
            }

            while (v8 != v5);
            goto LABEL_13;
          }

uint64_t sub_10008E880(uint64_t result, unsigned int a2)
{
  if (!result || (result & 7) != 0)
  {
LABEL_22:
    __break(0x5516u);
LABEL_23:
    __break(0x550Au);
  }

  else
  {
    uint64_t v3 = sub_10000CEF8();
    pthread_mutex_lock(&stru_10011B978);
    uint64_t v4 = *(void *)(v3 + 8);
    for (i = v4; ; uint64_t v4 = i)
    {
      if (v4 == v3)
      {
        pthread_mutex_unlock(&stru_10011B978);
        return 0LL;
      }

      uint64_t result = (uint64_t)sub_10000D014(&i);
      if (*(void *)result) {
        BOOL v5 = (*(void *)result & 7LL) == 0;
      }
      else {
        BOOL v5 = 0;
      }
      if (!v5) {
        goto LABEL_22;
      }
      if (*(void *)(*(void *)result + 32LL))
      {
        uint64_t result = *sub_10000D014(&i);
        if (result) {
          BOOL v6 = (result & 7) == 0;
        }
        else {
          BOOL v6 = 0;
        }
        if (!v6) {
          goto LABEL_22;
        }
        uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 216LL))(result);
        if (a2 >= 8) {
          goto LABEL_23;
        }
        if ((_DWORD)result == a2) {
          break;
        }
      }

      sub_10000D048(&i);
    }

    pthread_mutex_unlock(&stru_10011B978);
    return *sub_10000D014(&i);
  }

  return result;
}

uint64_t sub_10008E974(uint64_t result, uint64_t a2, void *a3)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_19;
  }
  if (!a2) {
    return 0LL;
  }
  if ((a2 & 7) != 0) {
    goto LABEL_19;
  }
  uint64_t result = sub_1000568BC(a2);
  if (!(_DWORD)result) {
    return result;
  }
  if (!a3) {
    return 1LL;
  }
  uint64_t v5 = sub_1000569D8(a2);
  uint64_t result = sub_100056CF8(a2);
  if ((result & 7) != 0) {
    goto LABEL_19;
  }
  if (!v5) {
    return 1LL;
  }
  BOOL v6 = (void *)result;
  uint64_t result = 1LL;
  if (v6 == a3) {
    return result;
  }
  uint64_t v7 = a3[5];
  if (v5 == v7) {
    return result;
  }
  if ((v5 & 7) != 0)
  {
LABEL_19:
    __break(0x5516u);
    return result;
  }

  int v8 = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 216LL))(v5);
  int v9 = (*(uint64_t (**)(void *))(*a3 + 216LL))(a3);
  uint64_t result = (v8 == 1) == (v9 != 1);
  if (v8 == 1 && v9 != 1)
  {
    sub_1000568E8(a2, v7);
    return 1LL;
  }

  return result;
}

uint64_t *sub_10008EA78(uint64_t *result, uint64_t a2)
{
  if (!result) {
    goto LABEL_30;
  }
  uint64_t v2 = (uint64_t)result;
  if (a2)
  {
    if ((a2 & 7) != 0) {
      goto LABEL_30;
    }
  }

  uint64_t v9 = 0LL;
  uint64_t result = (uint64_t *)pthread_mutex_lock((pthread_mutex_t *)(v2 + 32));
  uint64_t v4 = v2 + 8;
  if (((v2 + 8) & 7) == 0 && ((v2 + 24) & 7) == 0)
  {
    if (!*(void *)(v2 + 24))
    {
LABEL_26:
      uint64_t v5 = 0LL;
LABEL_27:
      pthread_mutex_unlock((pthread_mutex_t *)(v2 + 32));
      return (uint64_t *)v5;
    }

    if (((v2 + 16) & 7) == 0)
    {
      uint64_t v9 = *(void *)(v2 + 16);
      if (v9 != v4)
      {
        while (1)
        {
          uint64_t result = sub_10000D014(&v9);
          uint64_t v5 = *result;
          if (!*result || (*result & 7) != 0) {
            goto LABEL_30;
          }
          uint64_t v7 = sub_10001864C(*result);
          if (sub_1000568BC(v5) && v7 == 0)
          {
          }

          else
          {
            uint64_t v5 = 0LL;
          }

          sub_10000D048(&v9);
          if (v5 || v9 == v4) {
            goto LABEL_27;
          }
        }
      }

      goto LABEL_26;
    }
  }

uint64_t *sub_10008EBB4(uint64_t *result, uint64_t a2)
{
  if (!result) {
    goto LABEL_30;
  }
  uint64_t v2 = (uint64_t)result;
  if (a2)
  {
    if ((a2 & 7) != 0) {
      goto LABEL_30;
    }
  }

  uint64_t v8 = 0LL;
  uint64_t result = (uint64_t *)pthread_mutex_lock((pthread_mutex_t *)(v2 + 32));
  uint64_t v4 = v2 + 8;
  if (((v2 + 8) & 7) == 0 && ((v2 + 24) & 7) == 0)
  {
    if (!*(void *)(v2 + 24))
    {
LABEL_26:
      uint64_t v5 = 0LL;
LABEL_27:
      pthread_mutex_unlock((pthread_mutex_t *)(v2 + 32));
      return (uint64_t *)v5;
    }

    if (((v2 + 16) & 7) == 0)
    {
      uint64_t v8 = *(void *)(v2 + 16);
      if (v8 != v4)
      {
        while (1)
        {
          uint64_t result = sub_10000D014(&v8);
          uint64_t v5 = *result;
          if (!*result || (*result & 7) != 0) {
            goto LABEL_30;
          }
          uint64_t v7 = sub_10001864C(*result);
          uint64_t result = (uint64_t *)sub_1000568BC(v5);
          if (!(_DWORD)result) {
            goto LABEL_20;
          }
          if (!v7) {
            goto LABEL_33;
          }
          if ((v7 & 7) != 0) {
            goto LABEL_30;
          }
          if (sub_1000C8320(v7))
          {
LABEL_20:
            uint64_t v5 = 0LL;
          }

          else
          {
LABEL_33:
          }

          sub_10000D048(&v8);
          if (v5 || v8 == v4) {
            goto LABEL_27;
          }
        }
      }

      goto LABEL_26;
    }
  }

void sub_10008ED00(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_26;
  }
  int v4 = sub_100056728(a2);
  if (!a2 || !v4)
  {
    sub_1000CEAEC( 0,  4,  "%s:%d Failed to get pIncomingProcess object! handle=%hhx\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoPortMap.cpp",  2833,  0);
    sub_1000CEAEC( 0,  4,  "%s:%d Failed to get pPort object! handle=%hhx\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoPortMap.cpp",  2850,  0);
    return;
  }

  pthread_mutex_lock((pthread_mutex_t *)(a1 + 96));
  if ((a2 & 7) != 0) {
    goto LABEL_26;
  }
  uint64_t v5 = sub_10005794C(a2);
  if (!v5)
  {
    uint64_t v6 = sub_1000B6CE0();
    uint64_t v7 = sub_10005CB64(a2, v6);
    if (!v7)
    {
      __break(0x5518u);
      goto LABEL_26;
    }

    uint64_t v5 = v7;
    sub_10008DF34(a1, a2, v7);
  }

  pthread_mutex_unlock((pthread_mutex_t *)(a1 + 96));
  uint64_t v8 = sub_10001864C(a2);
  if (v8 || (uint64_t v8 = sub_1000569D8(a2)) != 0)
  {
    if (!sub_1000C8254(v8)) {
      return;
    }
    if ((v8 & 7) != 0)
    {
LABEL_26:
      __break(0x5516u);
      return;
    }

    if ((*(unsigned int (**)(uint64_t))(*(void *)v8 + 240LL))(v8)
      && ((*(uint64_t (**)(uint64_t))(*(void *)v8 + 280LL))(v8) & 1) == 0
      && (*(unsigned int (**)(uint64_t))(*(void *)v8 + 216LL))(v8) != 1)
    {
      uint64_t v9 = sub_1000451B0();
      if (!v9 || (v9 & 7) != 0) {
        goto LABEL_26;
      }
    }
  }

  else
  {
    sub_1000CEAEC( 0,  4,  "%s:%d Failed to get pPort object! handle=%hhx\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoPortMap.cpp",  2850,  a2);
  }

  if ((v5 & 7) != 0) {
    goto LABEL_26;
  }
  sub_10005ECA0(v5);
}

uint64_t sub_10008EED0(uint64_t result, uint64_t a2)
{
  if (result)
  {
    uint64_t v2 = result;
    if ((result & 7) == 0)
    {
      int v4 = sub_100056728(a2);
      if (!a2 || !v4)
      {
        sub_1000CEAEC( 0,  4,  "%s:%d Failed to get pOutgoingProcess object! handle=%hhx\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoPortMap.cpp",  2920,  0);
        return 0LL;
      }

      uint64_t result = pthread_mutex_lock((pthread_mutex_t *)(v2 + 96));
      if ((a2 & 7) == 0)
      {
        uint64_t v5 = sub_10005799C(a2);
        if (v5)
        {
LABEL_9:
          pthread_mutex_unlock((pthread_mutex_t *)(v2 + 96));
          return v5;
        }

        uint64_t result = sub_1000AA61C(a2, v2);
        if (result)
        {
          uint64_t v5 = result;
          sub_10008DFD4(v2, a2, result);
          goto LABEL_9;
        }

        __break(0x5518u);
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_10008EFA8(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (!result || (result & 7) != 0)
  {
LABEL_7:
    __break(0x5516u);
    return result;
  }

  if (a2)
  {
    if ((a2 & 7) == 0)
    {
      sub_1000568A4(a2, a3);
      return sub_1000568E8(a2, a4);
    }

    goto LABEL_7;
  }

  return result;
}

uint64_t sub_10008F004(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_16;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_16;
  }
  if (a2)
  {
    uint64_t result = pthread_mutex_lock((pthread_mutex_t *)(result + 32));
    if (((v2 + 8) & 7) == 0 && ((v2 + 24) & 7) == 0)
    {
      if (!*(void *)(v2 + 24))
      {
LABEL_12:
        pthread_mutex_unlock((pthread_mutex_t *)(v2 + 32));
        goto LABEL_13;
      }

      if (((v2 + 16) & 7) == 0)
      {
        uint64_t v4 = *(void *)(v2 + 16);
        uint64_t v5 = v4;
        while (v4 != v2 + 8)
        {
          if (*sub_10000D014(&v5) == a2)
          {
            pthread_mutex_unlock((pthread_mutex_t *)(v2 + 32));
            return sub_100056728(a2);
          }

          sub_10000D048(&v5);
          uint64_t v4 = v5;
        }

        goto LABEL_12;
      }
    }

dispatch_source_t sub_10008F0FC(dispatch_source_t result)
{
  if (result)
  {
    dispatch_source_t v1 = result;
    if ((result & 7) == 0)
    {
      *(void *)uint64_t result = &off_1001062E0;
      *(_OWORD *)((char *)result + 8) = 0u;
      *(_OWORD *)((char *)result + 24) = 0u;
      *(_OWORD *)((char *)result + 33) = 0u;
      *((void *)result + 8) = 0LL;
      *((_DWORD *)result + 20) = 0;
      *(void *)((char *)result + 52) = 0xFFFFFFFFLL;
      dispatch_queue_global_t global_queue = dispatch_get_global_queue(2LL, 0LL);
      uint64_t result = dispatch_source_create((dispatch_source_type_t)&_dispatch_source_type_timer, 0LL, 0LL, global_queue);
      *((void *)v1 + 9) = result;
      if (result)
      {
        dispatch_source_set_event_handler(result, &stru_100106310);
        uint64_t result = (dispatch_source_t)*((void *)v1 + 9);
        if (result)
        {
          dispatch_source_set_timer(result, 0xFFFFFFFFFFFFFFFFLL, 0xFFFFFFFFFFFFFFFFLL, 0LL);
          uint64_t result = (dispatch_source_t)*((void *)v1 + 9);
          if (result)
          {
            dispatch_resume(result);
            return v1;
          }
        }
      }

      __break(0x5510u);
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_10008F1BC(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_10008F1F4(result);
  }
  __break(0x5516u);
  return result;
}

void sub_10008F1D0(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    dispatch_source_t v1 = (void *)sub_10008F1F4(a1);
    operator delete(v1);
  }

uint64_t sub_10008F1F4(uint64_t result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    *(void *)uint64_t result = &off_1001062E0;
    uint64_t result = *(void *)(result + 72);
    if (result)
    {
      dispatch_release((dispatch_object_t)result);
      return v1;
    }
  }

  __break(0x5510u);
  return result;
}

uint64_t sub_10008F240(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_6;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_6;
  }
  sub_10006107C(result, a2, 13);
  *(void *)uint64_t v2 = off_100106350;
  *(_OWORD *)(v2 + 1202) = 0u;
  *(_OWORD *)(v2 + 1218) = 0u;
  *(_DWORD *)(v2 + 1234) = 0;
  *(_WORD *)(v2 + 1200) = 0;
  *(void *)(v2 + 1192) = 0LL;
  *(void *)(v2 + 1240) = 0LL;
  *(_BYTE *)(v2 + 1248) = 0;
  sub_10008F2D0(v4);
  uint64_t result = sub_100061274();
  if (!result || (result & 7) != 0)
  {
LABEL_6:
    __break(0x5516u);
  }

  else
  {
    sub_10008C5A8(result, 13, 44, a2);
    return v2;
  }

  return result;
}

uint64_t sub_10008F2D0(uint64_t result)
{
  if (!result) {
    goto LABEL_13;
  }
  if ((result & 7) != 0) {
    goto LABEL_13;
  }
  if ((((_DWORD)result + 1202) & 1) != 0) {
    goto LABEL_13;
  }
  *(_DWORD *)(result + 1202) = 5;
  if ((((_DWORD)result + 1206) & 1) != 0
    || (*(_DWORD *)(result + 1206) = 107, (((_DWORD)result + 1210) & 1) != 0)
    || (*(_DWORD *)(result + 1210) = 80, (((_DWORD)result + 1214) & 1) != 0)
    || (*(_DWORD *)(result + 1214) = 640, (((_DWORD)result + 1218) & 1) != 0)
    || (*(_DWORD *)(result + 1218) = 480, (((_DWORD)result + 1222) & 1) != 0)
    || (*(_DWORD *)(result + 1222) = 0, (((_DWORD)result + 1226) & 1) != 0)
    || (*(_DWORD *)(result + 1226) = 0, (((_DWORD)result + 1230) & 1) != 0)
    || (*(_DWORD *)(result + 1230) = 0, (((_DWORD)result + 1234) & 1) != 0))
  {
LABEL_13:
    __break(0x5516u);
  }

  else
  {
    *(_DWORD *)(result + 1234) = 0;
  }

  return result;
}

uint64_t sub_10008F364(uint64_t result, uint64_t a2)
{
  if (result && (result & 7) == 0) {
    return sub_10008F240(result, a2);
  }
  __break(0x5516u);
  return result;
}

void sub_10008F378(uint64_t a1)
{
  if (!a1
    || (a1 & 7) != 0
    || (*(void *)a1 = off_100106350, (uint64_t v2 = sub_100061274()) == 0)
    || (v2 & 7) != 0
    || (sub_10008C5A8(v2, 13, 0, *(void *)(a1 + 8)), sub_10008F408(a1), (uint64_t v3 = sub_1000C7788()) == 0)
    || (v3 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    dword_10011C97C = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 144LL))(v3);
    *(void *)(a1 + 1240) = 0LL;
    *(_BYTE *)(a1 + 1248) = 0;
    sub_100061324(a1);
  }

uint64_t sub_10008F408(uint64_t result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
LABEL_12:
    __break(0x5516u);
    goto LABEL_13;
  }

  __int128 v4 = 0uLL;
  *(void *)((char *)&v4 + 4) = *(void *)(result + 8);
  uint64_t result = sub_1000C7788();
  unsigned int v2 = *(_DWORD *)(v1 + 1192);
  if (v2 < 4)
  {
    if (!v2) {
      return 0LL;
    }
    uint64_t v3 = result;
    *(void *)(v1 + 1192) = 0LL;
    *(_WORD *)(v1 + 1200) = 0;
    if (result && (result & 7) == 0)
    {
      if ((*(unsigned int (**)(uint64_t))(*(void *)result + 128LL))(result))
      {
        LODWORD(v4) = 3;
        HIDWORD(v4) = 0;
        sub_10005BEC8(0xDu, 0LL, (uint64_t)&v4, 16, *(void *)(v1 + 8));
      }

      LODWORD(v4) = 1;
      sub_10005BEC8(0xDu, 0LL, (uint64_t)&v4, 16, *(void *)(v1 + 8));
      if ((*(unsigned int (**)(uint64_t))(*(void *)v3 + 120LL))(v3) != 1000)
      {
        LODWORD(v4) = 2;
        WORD6(v4) = 1000;
        sub_10005BEC8(0xDu, 0LL, (uint64_t)&v4, 16, *(void *)(v1 + 8));
      }

      return 0LL;
    }

    goto LABEL_12;
  }

void sub_10008F518(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    sub_10008F378(a1);
  }
}

void sub_10008F52C(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    sub_10008F378(a1);
    operator delete(v1);
  }

uint64_t sub_10008F550(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_6;
  }

  uint64_t result = *(unsigned int *)(result + 1192);
  if (result >= 4) {
LABEL_6:
  }
    __break(0x550Au);
  return result;
}

void sub_10008F574(uint64_t a1, unsigned int a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_34;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  if (!v3 || (v3 & 7) != 0) {
    goto LABEL_34;
  }
  uint64_t v6 = sub_1000579D4(v3);
  if (a2 >= 4) {
    goto LABEL_35;
  }
  uint64_t v7 = v6;
  if (a2 == 1)
  {
    if (!*(_BYTE *)(a1 + 1248)) {
      sub_10008F2D0(a1);
    }
  }

  else if (a2 == 2 && sub_10008F720(a1))
  {
    if (!*(_BYTE *)(a1 + 1248))
    {
      if ((((_DWORD)a1 + 1230) & 1) != 0) {
        goto LABEL_34;
      }
      *(_DWORD *)(a1 + 1230) = 32;
      if ((((_DWORD)a1 + 1234) & 1) != 0) {
        goto LABEL_34;
      }
      *(_DWORD *)(a1 + 1234) = 32;
      if ((((_DWORD)a1 + 1222) & 1) != 0) {
        goto LABEL_34;
      }
      *(_DWORD *)(a1 + 1222) = 24;
      if ((((_DWORD)a1 + 1226) & 1) != 0) {
        goto LABEL_34;
      }
      *(_DWORD *)(a1 + 1226) = 24;
      syslog( 4,  "%s:%d Sending Actionsafe parameters!\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoPushUI.cpp",  260);
    }
  }

  if ((((_BYTE)a1 - 66) & 1) != 0) {
    goto LABEL_34;
  }
  if (*(_DWORD *)(a1 + 1214) != 640) {
    goto LABEL_33;
  }
  if ((((_DWORD)a1 + 1218) & 1) != 0) {
    goto LABEL_34;
  }
  if (!v7 || *(_DWORD *)(a1 + 1218) != 480) {
    goto LABEL_33;
  }
  if ((v7 & 7) != 0)
  {
LABEL_34:
    __break(0x5516u);
    goto LABEL_35;
  }

  unsigned int v8 = sub_100076280(v7);
  unsigned int v9 = sub_100076240(v7);
  if (v9 > 1) {
    goto LABEL_35;
  }
  if (!v9)
  {
LABEL_33:
    uint64_t v12 = *(void *)(a1 + 8);
    uint64_t v10 = v12;
    *(_DWORD *)(a1 + 1192) = a2;
    int v11 = 0;
    unsigned int v13 = a2;
    sub_10005BEC8(0xDu, 0LL, (uint64_t)&v11, 16, v10);
    return;
  }

  if (v8 <= 7)
  {
    if (v8 - 1 <= 2) {
      sub_100077570(v7, 0LL, 1LL);
    }
    goto LABEL_33;
  }

BOOL sub_10008F720(BOOL result)
{
  if (!result || (result & 7) != 0 || (((_DWORD)result + 1202) & 1) != 0) {
    goto LABEL_22;
  }
  if (*(_DWORD *)(result + 1202) != 5) {
    return 0LL;
  }
  if ((((_DWORD)result + 1206) & 1) != 0) {
    goto LABEL_22;
  }
  if (*(_DWORD *)(result + 1206) != 107) {
    return 0LL;
  }
  if ((((_DWORD)result + 1210) & 1) != 0) {
    goto LABEL_22;
  }
  if (*(_DWORD *)(result + 1210) != 80) {
    return 0LL;
  }
  if ((((_DWORD)result + 1214) & 1) != 0) {
    goto LABEL_22;
  }
  if (*(_DWORD *)(result + 1214) != 640) {
    return 0LL;
  }
  if ((((_DWORD)result + 1218) & 1) != 0) {
    goto LABEL_22;
  }
  if (*(_DWORD *)(result + 1218) != 480) {
    return 0LL;
  }
  if ((((_DWORD)result + 1222) & 1) != 0) {
    goto LABEL_22;
  }
  if (*(_DWORD *)(result + 1222)) {
    return 0LL;
  }
  if ((((_DWORD)result + 1226) & 1) != 0) {
    goto LABEL_22;
  }
  if (*(_DWORD *)(result + 1226)) {
    return 0LL;
  }
  if ((((_DWORD)result + 1230) & 1) == 0)
  {
    if (*(_DWORD *)(result + 1230)) {
      return 0LL;
    }
    if ((((_DWORD)result + 1234) & 1) == 0) {
      return *(_DWORD *)(result + 1234) == 0;
    }
  }

uint64_t sub_10008F7E4(uint64_t result, _DWORD *a2)
{
  if (result && (result & 7) == 0)
  {
    if (!a2)
    {
      uint64_t v2 = 4LL;
      sub_1000CEAEC( 0,  4,  "%s:%d NULL videoScreenInfo\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoPushUI.cpp",  401);
      return v2;
    }

    if ((((_DWORD)result + 1202) & 1) == 0)
    {
      *(_DWORD *)(result + 1202) = *a2;
      if ((((_DWORD)result + 1206) & 1) == 0)
      {
        *(_DWORD *)(result + 1206) = a2[1];
        if ((((_DWORD)result + 1210) & 1) == 0)
        {
          *(_DWORD *)(result + 1210) = a2[2];
          if ((((_DWORD)result + 1214) & 1) == 0)
          {
            *(_DWORD *)(result + 1214) = a2[3];
            if ((((_DWORD)result + 1218) & 1) == 0)
            {
              *(_DWORD *)(result + 1218) = a2[4];
              if ((((_DWORD)result + 1222) & 1) == 0)
              {
                *(_DWORD *)(result + 1222) = a2[5];
                if ((((_DWORD)result + 1226) & 1) == 0)
                {
                  *(_DWORD *)(result + 1226) = a2[6];
                  if ((((_DWORD)result + 1230) & 1) == 0)
                  {
                    *(_DWORD *)(result + 1230) = a2[7];
                    if ((((_DWORD)result + 1234) & 1) == 0)
                    {
                      uint64_t v2 = 0LL;
                      *(_DWORD *)(result + 1234) = a2[8];
                      *(_BYTE *)(result + 1248) = 1;
                      return v2;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_10008F8E4(uint64_t result)
{
  if (!result) {
    goto LABEL_19;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_19;
  }
  if (!*(void *)(result + 1240)) {
    return result;
  }
  __int128 v4 = xmmword_1000DEEE0;
  if ((((_DWORD)result + 1202) & 1) != 0) {
    goto LABEL_19;
  }
  int v5 = *(_DWORD *)(result + 1202);
  if ((((_DWORD)result + 1206) & 1) != 0) {
    goto LABEL_19;
  }
  int v6 = *(_DWORD *)(result + 1206);
  if ((((_DWORD)result + 1210) & 1) != 0) {
    goto LABEL_19;
  }
  int v7 = *(_DWORD *)(result + 1210);
  if ((((_DWORD)result + 1214) & 1) != 0) {
    goto LABEL_19;
  }
  int v8 = *(_DWORD *)(result + 1214);
  if ((((_DWORD)result + 1218) & 1) != 0) {
    goto LABEL_19;
  }
  int v9 = *(_DWORD *)(result + 1218);
  if ((((_DWORD)result + 1222) & 1) != 0) {
    goto LABEL_19;
  }
  int v10 = *(_DWORD *)(result + 1222);
  if ((((_DWORD)result + 1226) & 1) != 0) {
    goto LABEL_19;
  }
  int v12 = *(_DWORD *)(result + 1226);
  if ((((_DWORD)result + 1230) & 1) != 0
    || (int v11 = *(_DWORD *)(result + 1230), (((_DWORD)result + 1234) & 1) != 0)
    || (int v13 = *(_DWORD *)(result + 1234), v14 = 1515870810, (result = sub_1000472A8()) == 0)
    || (uint64_t v2 = result, (result & 7) != 0)
    || (result = sub_1000C0034(*(void *)(v1 + 8)), (uint64_t v3 = *(unsigned __int16 **)(v1 + 1240)) == 0LL)
    || (v3 & 7) != 0)
  {
LABEL_19:
    __break(0x5516u);
    return result;
  }

  return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, __int128 *))(*(void *)v2 + 120LL))( v2,  result,  *v3,  56LL,  &v4);
}

uint64_t sub_10008FA10(uint64_t result, int a2)
{
  if (!result) {
    goto LABEL_13;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_13;
  }
  unsigned int v4 = 0;
  switch(a2)
  {
    case 32:
      sub_10006329C(result, (uint64_t)&v4);
      return v4;
    case 8:
      sub_10008F2D0(result);
      *(_BYTE *)(v2 + 1248) = 0;
      sub_10008F408(v2);
      break;
    case 4:
      break;
    default:
      sub_1000D2848();
  }

  uint64_t result = sub_1000C7788();
  if (!result || (result & 7) != 0)
  {
LABEL_13:
    __break(0x5516u);
  }

  else
  {
    int v3 = (*(uint64_t (**)(uint64_t))(*(void *)result + 144LL))(result);
    uint64_t result = 0LL;
    dword_10011C97C = v3;
  }

  return result;
}

unint64_t sub_10008FAB8(unint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_99;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_99;
  }
  if (*(void *)(result + 8))
  {
    uint64_t result = sub_100061274();
    if (!result || (result & 7) != 0) {
      goto LABEL_99;
    }
    if (sub_10008E7AC(result, *(void *)(v2 + 8)))
    {
      uint64_t result = *(void *)(v2 + 8);
      if (result && (result & 7) == 0)
      {
        uint64_t result = sub_1000569F0(result);
        if ((result & 1) != 0) {
          goto LABEL_10;
        }
        if (a2 && (a2 & 7) == 0)
        {
          unsigned int v4 = *(_DWORD *)(a2 + 68);
          if (v4 >= 0x10000)
          {
LABEL_100:
            __break(0x5507u);
LABEL_101:
            __break(0x5500u);
LABEL_102:
            __break(0x5513u);
LABEL_103:
            __break(0x550Au);
LABEL_104:
            __break(0x5515u);
LABEL_105:
            __break(0x5503u);
LABEL_106:
            __break(0x5512u);
            return result;
          }

          int v5 = *(unsigned __int8 **)(a2 + 24);
          unsigned int v6 = *(unsigned __int16 *)(a2 + 128);
          unsigned int v7 = *(unsigned __int16 *)(a2 + 126);
          uint64_t result = sub_100061274();
          if (result && (result & 7) == 0)
          {
            uint64_t v8 = sub_10008E168(result, *(void *)(v2 + 8));
            uint64_t result = sub_1000C7788();
            __int128 v35 = 0uLL;
            uint64_t v9 = *(void *)(v2 + 8);
            *(void *)((char *)&v35 + 4) = v9;
            if (v7 <= 0xF)
            {
              unsigned __int8 v10 = 4;
              switch(v7)
              {
                case 1u:
                  if (v6 != 1) {
                    goto LABEL_74;
                  }
                  if (!v5) {
                    goto LABEL_99;
                  }
                  unsigned __int8 v11 = sub_1000900C8(v2, a2, *v5);
LABEL_25:
                  unsigned __int8 v10 = v11;
                  goto LABEL_74;
                case 3u:
                  if (v6 - 1 > 3) {
                    goto LABEL_74;
                  }
                  unsigned __int8 v11 = sub_1000901C0(v2, a2);
                  goto LABEL_25;
                case 4u:
                  if (v6 != 1) {
                    goto LABEL_74;
                  }
                  if (!v5) {
                    goto LABEL_99;
                  }
                  unsigned int v12 = *v5;
                  if (v12 > 5) {
                    goto LABEL_74;
                  }
                  syslog( 4,  "%s:%s-%d pData[0] == 0x%x\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoPushUI.cpp",  "ProcessCmd",  573,  v12);
                  sub_100090268(v2, *v5);
                  goto LABEL_90;
                case 5u:
                  if (v6 != 2) {
                    goto LABEL_74;
                  }
                  if (!v5) {
                    goto LABEL_99;
                  }
                  unsigned int v13 = bswap32(*(unsigned __int16 *)v5) >> 16;
                  if (v13 > 0x7CF) {
                    goto LABEL_74;
                  }
                  *(_WORD *)(v2 + 1200) = v13;
                  WORD6(v35) = v13;
                  LODWORD(v35) = 2;
                  sub_10005BEC8(0xDu, 0LL, (uint64_t)&v35, 16, v9);
LABEL_90:
                  unsigned __int8 v10 = 0;
                  goto LABEL_74;
                case 6u:
                  unsigned __int8 v10 = 4 * (v6 != 14);
                  goto LABEL_74;
                case 7u:
                  if (!result || (result & 7) != 0) {
                    goto LABEL_99;
                  }
                  int v14 = *(uint64_t (**)(void))(*(void *)result + 152LL);
                  goto LABEL_97;
                case 9u:
                  if (!v6) {
                    goto LABEL_74;
                  }
                  if (!v5) {
                    goto LABEL_99;
                  }
                  if (*v5) {
                    goto LABEL_74;
                  }
                  if (!v8 || (v8 & 7) != 0) {
                    goto LABEL_99;
                  }
                  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v8 + 136LL))(v8, 13LL);
                  if ((_WORD)result == 3) {
                    goto LABEL_105;
                  }
                  LOWORD(v34[0]) = -22016;
                  BYTE1(v34[0]) = 0x9A8u / (unsigned __int16)(result - 3);
                  uint64_t v15 = a2;
                  uint64_t v16 = v8;
                  __int16 v17 = 10;
                  int v18 = (unsigned __int16)v4;
                  unsigned int v19 = 2;
LABEL_98:
                  sub_1000AC324(v15, v16, 0, 13LL, v17, v18, v34, v19);
                  goto LABEL_74;
                case 0xBu:
                  if (v6 < 2) {
                    goto LABEL_74;
                  }
                  if (!v5) {
                    goto LABEL_99;
                  }
                  if (*v5) {
                    goto LABEL_74;
                  }
                  if (!v8 || (v8 & 7) != 0) {
                    goto LABEL_99;
                  }
                  unsigned int v20 = v5[1];
                  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v8 + 136LL))(v8, 13LL);
                  unsigned int v21 = result - 3;
                  if (HIWORD(v21)) {
                    goto LABEL_100;
                  }
                  unsigned int v22 = (unsigned __int16)(result - 3);
                  if ((_WORD)result == 3) {
                    goto LABEL_105;
                  }
                  if (v22 < 0xA) {
                    goto LABEL_100;
                  }
                  unsigned int v23 = 0x9A8u / (unsigned __int16)(result - 3);
                  unsigned int v24 = (v23 + 1);
                  if (v24 <= v20) {
                    goto LABEL_74;
                  }
                  unint64_t v25 = v22 * v20;
                  if (WORD1(v25)) {
                    goto LABEL_100;
                  }
                  unsigned int v26 = v24 - 1;
                  int v27 = 2472 - v23 * v21;
                  unsigned int v28 = (unsigned __int16)v27;
                  if (v26 != v20) {
                    int v27 = result - 3;
                  }
                  int v33 = v27;
                  size_t v29 = v26 == v20 ? v28 : v21;
                  size_t v32 = (v29 + 3);
                  uint64_t result = (unint64_t)operator new[](v32);
                  *(_BYTE *)uint64_t result = 0;
                  if (result == -1LL) {
                    goto LABEL_102;
                  }
                  uint64_t v30 = (void *)result;
                  *(_BYTE *)(result + 1) = v20;
                  if (result > 0xFFFFFFFFFFFFFFFDLL) {
                    goto LABEL_102;
                  }
                  *(_BYTE *)(result + 2) = v26;
                  if (result > 0xFFFFFFFFFFFFFFFCLL) {
                    goto LABEL_102;
                  }
                  uint64_t result = (unint64_t)memcpy( (void *)(result + 3),  (char *)&unk_1000DEF2E + v25,  v29);
                  sub_1000AC324(a2, v8, 0, 13LL, 12, (unsigned __int16)v4, v30, (unsigned __int16)v32);
                  operator delete[](v30);
                  break;
                case 0xDu:
                  if (v6 != 1) {
                    goto LABEL_74;
                  }
                  sub_100090314(v2, a2);
                  goto LABEL_90;
                case 0xEu:
                  if (v6 != 1) {
                    goto LABEL_74;
                  }
                  if (!v5 || !result || (result & 7) != 0) {
                    goto LABEL_99;
                  }
                  if (*v5 > 1u) {
                    goto LABEL_103;
                  }
                  int v14 = *(uint64_t (**)(void))(*(void *)result + 152LL);
LABEL_97:
                  v34[0] = bswap32(v14());
                  uint64_t v15 = a2;
                  uint64_t v16 = v8;
                  __int16 v17 = 8;
                  int v18 = (unsigned __int16)v4;
                  unsigned int v19 = 4;
                  goto LABEL_98;
                case 0xFu:
                  if (v6 != 36) {
                    goto LABEL_87;
                  }
                  if (!v5) {
                    goto LABEL_99;
                  }
                  v34[0] = bswap32(*(unsigned __int16 *)v5) >> 16;
                  v34[1] = bswap32(*(_DWORD *)(v5 + 2));
                  v34[2] = bswap32(*(_DWORD *)(v5 + 6));
                  v34[3] = bswap32(*(_DWORD *)(v5 + 10));
                  v34[4] = bswap32(*(_DWORD *)(v5 + 14));
                  v34[5] = bswap32(*(_DWORD *)(v5 + 18));
                  v34[6] = bswap32(*(_DWORD *)(v5 + 22));
                  v34[7] = bswap32(*(_DWORD *)(v5 + 26));
                  v34[8] = bswap32(*(_DWORD *)(v5 + 30));
                  unsigned __int8 v10 = sub_10008F7E4(v2, v34);
                  sub_10008F8E4(v2);
LABEL_87:
                  sub_1000CEAEC( 0,  4,  "%s:%d ERROR: CIapLingoPushUI::ProcessCmd Unknown CmdID: 0x%02X",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoPushUI.cpp",  754,  v7);
                  goto LABEL_74;
                default:
                  goto LABEL_87;
              }
            }

            unsigned __int8 v10 = 4;
LABEL_74:
            return sub_10009042C(v2, a2, 0);
          }
        }
      }

uint64_t sub_1000900C8(uint64_t result, uint64_t a2, int a3)
{
  if (!result) {
    goto LABEL_17;
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_17;
  }
  unsigned int v9 = -1431655766;
  uint64_t result = sub_100061274();
  if (!result) {
    goto LABEL_17;
  }
  if ((result & 7) != 0) {
    goto LABEL_17;
  }
  uint64_t result = sub_10008E168(result, *(void *)(v3 + 8));
  if (!a2 || (a2 & 7) != 0) {
    goto LABEL_17;
  }
  uint64_t v6 = result;
  int v7 = *(unsigned __int16 *)(a2 + 68);
  uint64_t result = sub_1000C7788();
  char v8 = a3;
  if (a3 == 1)
  {
    uint64_t result = dword_10011C97C;
LABEL_13:
    if (&v8 != (char *)-1LL)
    {
      unsigned int v9 = bswap32(result);
      sub_1000AC324(a2, v6, 0, 13LL, 2, v7, &v8, 5u);
      return 0LL;
    }

    goto LABEL_18;
  }

  if (!a3)
  {
    if (result && (result & 7) == 0)
    {
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 136LL))(result);
      goto LABEL_13;
    }

uint64_t sub_1000901C0(uint64_t result, uint64_t a2)
{
  if (!result
    || (uint64_t v2 = result, (result & 7) != 0)
    || !a2
    || (a2 & 7) != 0
    || (v3 = *(unsigned int **)(a2 + 24), int v4 = *(unsigned __int16 *)(a2 + 128), (result = sub_1000C7788()) == 0)
    || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    int v5 = (*(uint64_t (**)(uint64_t))(*(void *)result + 136LL))(result);
    uint64_t result = 4LL;
    if (v3 && v4 == 4)
    {
      unsigned int v6 = bswap32(*v3);
      if ((v6 & ~v5) == 0 && (v6 & 1) != 0)
      {
        dword_10011C97C = v6;
        sub_1000904D0(v2);
        return 0LL;
      }
    }
  }

  return result;
}

uint64_t sub_100090268(uint64_t result, unsigned int a2)
{
  if (!result) {
    goto LABEL_11;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_11;
  }
  if (!*(void *)(result + 1240)) {
    return result;
  }
  __int128 v5 = xmmword_1000DEEF0;
  if (a2 >= 8)
  {
LABEL_12:
    __break(0x550Au);
    return result;
  }

  unsigned int v6 = a2;
  int v7 = 1515870810;
  uint64_t result = sub_1000472A8();
  if (!result
    || (uint64_t v3 = result, (result & 7) != 0)
    || (result = sub_1000C0034(*(void *)(v2 + 8)), (int v4 = *(unsigned __int16 **)(v2 + 1240)) == 0LL)
    || (v4 & 7) != 0)
  {
LABEL_11:
    __break(0x5516u);
    goto LABEL_12;
  }

  return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, __int128 *))(*(void *)v3 + 120LL))( v3,  result,  *v4,  24LL,  &v5);
}

uint64_t sub_100090314(uint64_t result, uint64_t a2)
{
  if (result
    && (result & 7) == 0
    && a2
    && (a2 & 7) == 0
    && (v2 = *(unsigned __int8 **)(a2 + 24), v16 = -1431655766, v3 = *(void *)(result + 8), v15 = v3, int v14 = 3, v2))
  {
    LOBYTE(v4) = 0;
    int v5 = 0;
    unsigned int v6 = *v2;
    unsigned int v7 = v6 >> 5;
    int v8 = (8 * v6) & 0x700;
    int v9 = 2 * (v6 & 0x1F);
    do
    {
      if ((((((v7 & 7) << 8) | 0x1000) >> v4) & 1) != 0)
      {
        if (v5 == 0xFFFF)
        {
LABEL_22:
          __break(0x5507u);
          goto LABEL_23;
        }

        ++v5;
      }

      unsigned int v4 = (v4 + 1);
    }

    while (v4 < 0x20);
    LOBYTE(v10) = 0;
    int v11 = 0;
    do
    {
      if ((((v9 | 0x40u) >> v10) & 1) != 0)
      {
        if (v11 == 0xFFFF) {
          goto LABEL_22;
        }
        ++v11;
      }

      unsigned int v10 = (v10 + 1);
    }

    while (v10 < 0x20);
    if ((v5 & 1) != 0) {
      int v12 = 4160;
    }
    else {
      int v12 = 36928;
    }
    int v13 = v9 | v8 | v12;
    if ((v11 & 1) == 0) {
      v13 |= 0x80u;
    }
    int v16 = v13;
    sub_10005BEC8(0xDu, 0LL, (uint64_t)&v14, 16, v3);
    return 0LL;
  }

  else
  {
LABEL_23:
    __break(0x5516u);
  }

  return result;
}

uint64_t sub_10009042C(uint64_t result, uint64_t a2, int a3)
{
  if (!result || (uint64_t v3 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    sub_100062E0C();
    return sub_1000AB4C4(*(void *)(v3 + 8), a2, a3, 1u);
  }

  return result;
}

void sub_10009047C(uint64_t a1, uint64_t a2, int a3)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    sub_1000CEAEC( 0,  4,  "%s:%d CIapLingoPushUI::HandleCmdTimeout invalid timeout cmd ID: 0x%02X",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoPushUI.cpp",  843,  a3);
  }
}

uint64_t sub_1000904D0(uint64_t result)
{
  if (!result) {
    goto LABEL_16;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_16;
  }
  if (!*(void *)(result + 1240)) {
    return result;
  }
  v2.i64[1] = 0x206F707473LL;
  __int128 v7 = xmmword_1000DEF00;
  v2.i64[0] = *(void *)&vshl_u16( (uint16x4_t)(*(void *)&vdup_n_s16(dword_10011C97C) & 0xFF00FF00FF00FFLL),  (uint16x4_t)0xFFFCFFFDFFFEFFFFLL) & 0xFF01FF01FF01FF01LL;
  unsigned __int32 v8 = vmovn_s16(v2).u32[0];
  BOOL v9 = (dword_10011C97C & 0x20) != 0;
  BOOL v10 = (dword_10011C97C & 0x40) != 0;
  BOOL v11 = (dword_10011C97C & 0x80) != 0;
  char v12 = BYTE1(dword_10011C97C) & 1;
  int v3 = (dword_10011C97C & 0x400) != 0 ? 2 : 1;
  int v4 = (dword_10011C97C & 0x200) != 0 ? 0 : v3;
  int v14 = 1515870810;
  int v13 = v4;
  uint64_t result = sub_1000472A8();
  if (!result
    || (uint64_t v5 = result, (result & 7) != 0)
    || (result = sub_1000C0034(*(void *)(v1 + 8)), (unsigned int v6 = *(unsigned __int16 **)(v1 + 1240)) == 0LL)
    || (v6 & 7) != 0)
  {
LABEL_16:
    __break(0x5516u);
    return result;
  }

  return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, __int128 *))(*(void *)v5 + 120LL))( v5,  result,  *v6,  32LL,  &v7);
}

void sub_1000905D0(uint64_t a1, std::string *a2)
{
  if (!a1 || (a1 & 7) != 0 || !a2 || (a2 & 7) != 0)
  {
    __break(0x5516u);
    return;
  }

  sub_10008542C(a2, &v9);
  int size = (char)v9.__r_.__value_.__s.__size_;
  uint64_t v5 = (void *)v9.__r_.__value_.__r.__words[0];
  if ((v9.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    unsigned int v6 = &v9;
  }
  else {
    unsigned int v6 = (std::string *)v9.__r_.__value_.__r.__words[0];
  }
  int v7 = strcmp((const char *)v6, off_10011B6A0);
  int v8 = v7;
  if ((size & 0x80000000) == 0)
  {
    if (v7) {
      return;
    }
LABEL_12:
    *(void *)(a1 + 1240) = a2;
    return;
  }

  operator delete(v5);
  if (!v8) {
    goto LABEL_12;
  }
}

void sub_100090674(uint64_t a1, std::string *a2)
{
  if (!a1 || (a1 & 7) != 0 || !a2 || (a2 & 7) != 0)
  {
    __break(0x5516u);
    return;
  }

  sub_10008542C(a2, &v8);
  int size = (char)v8.__r_.__value_.__s.__size_;
  int v4 = (void *)v8.__r_.__value_.__r.__words[0];
  if ((v8.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    uint64_t v5 = &v8;
  }
  else {
    uint64_t v5 = (std::string *)v8.__r_.__value_.__r.__words[0];
  }
  int v6 = strcmp((const char *)v5, off_10011B6A0);
  int v7 = v6;
  if ((size & 0x80000000) == 0)
  {
    if (v6) {
      return;
    }
LABEL_12:
    *(void *)(a1 + 1240) = 0LL;
    return;
  }

  operator delete(v4);
  if (!v7) {
    goto LABEL_12;
  }
}

uint64_t sub_10009070C(uint64_t result, int a2)
{
  if (!result || a2 != 9)
  {
    __break(0x5518u);
LABEL_14:
    __break(0x5516u);
    goto LABEL_15;
  }

  uint64_t v2 = result;
  uint64_t result = sub_1000C7788();
  if (!result) {
    goto LABEL_14;
  }
  if ((result & 7) != 0) {
    goto LABEL_14;
  }
  int v3 = (*(uint64_t (**)(uint64_t))(*(void *)result + 88LL))(result);
  uint64_t result = sub_1000C7788();
  if (!result || (result & 7) != 0) {
    goto LABEL_14;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 96LL))(result);
  *(_BYTE *)uint64_t v2 = 13;
  if (v2 == -1)
  {
LABEL_15:
    __break(0x5500u);
    return result;
  }

  uint64_t v4 = 0x100000000000000LL;
  if (!v3) {
    uint64_t v4 = 0LL;
  }
  if ((_DWORD)result) {
    v4 |= 0x200000000000000uLL;
  }
  *(void *)(v2 + 1) = v4 | 0x3800000000000000LL;
  return 0LL;
}

uint64_t sub_1000907B0(uint64_t result)
{
  if (!result || (result & 7) != 0) {
    __break(0x5516u);
  }
  return result;
}

uint64_t sub_1000907C4(uint64_t result, uint64_t a2)
{
  if (!result || (uint64_t v2 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else if (*(void *)(result + 1240) == a2)
  {
    sub_1000904D0(result);
    return sub_10008F8E4(v2);
  }

  return result;
}

uint64_t sub_100090814(uint64_t result, _BYTE *a2, _BYTE *a3)
{
  if (result && (result & 7) == 0 && a2 && (*a2 = 1, a3)) {
    *a3 = 0;
  }
  else {
    __break(0x5516u);
  }
  return result;
}

void sub_10009083C(uint64_t a1, uint64_t a2)
{
  if (!a1) {
    goto LABEL_52;
  }
  if ((a1 & 7) != 0) {
    goto LABEL_52;
  }
  sub_10006107C(a1, a2, 4);
  *(void *)a1 = off_100106410;
  *(_OWORD *)(a1 + 1200) = 0u;
  *(_DWORD *)(a1 + 1216) = 1;
  *(_WORD *)(a1 + 1220) = 256;
  *(void *)(a1 + 1288) = -1LL;
  *(void *)(a1 + 1296) = 0x200000000LL;
  *(void *)(a1 + 1304) = -1LL;
  *(void *)(a1 + 1312) = -1LL;
  *(void *)(a1 + 1320) = -1LL;
  *(_DWORD *)(a1 + 1328) = -1;
  *(_WORD *)(a1 + 1332) = 0;
  *(_BYTE *)(a1 + 1334) = 0;
  *(void *)(a1 + 1336) = 0LL;
  *(void *)(a1 + 1343) = 0LL;
  if ((((_BYTE)a1 + 72) & 7) != 0) {
    goto LABEL_52;
  }
  *(_OWORD *)(a1 + 1352) = 0uLL;
  *(_DWORD *)(a1 + 1380) = 0;
  *(_BYTE *)(a1 + 1384) = 0;
  *(_DWORD *)(a1 + 1388) = 0;
  *(_WORD *)(a1 + 1392) = 0;
  *(_BYTE *)(a1 + 1395) = 0;
  *(_BYTE *)(a1 + 1398) = 0;
  *(void *)(a1 + 1368) = 0LL;
  if (((a1 + 1416) & 7) != 0) {
    goto LABEL_52;
  }
  *(void *)(a1 + 1416) = 0LL;
  *(void *)(a1 + 1424) = 0LL;
  pthread_mutex_init((pthread_mutex_t *)(a1 + 1224), 0LL);
  if (dword_10011B6B0 == -1)
  {
    uint64_t v4 = sub_10002ACC4();
    if (!v4 || (v4 & 7) != 0) {
      goto LABEL_52;
    }
    dword_10011B6B0 = (*(uint64_t (**)(uint64_t, const char *))(*(void *)v4 + 360LL))( v4,  "SetDurationToZeroOnInvalid");
  }

  if (dword_10011B6B4 == -1)
  {
    uint64_t v5 = sub_10002ACC4();
    if (!v5 || (v5 & 7) != 0) {
      goto LABEL_52;
    }
    dword_10011B6B4 = (*(uint64_t (**)(uint64_t, const char *))(*(void *)v5 + 360LL))( v5,  "SetDurationToLargeOnInvalid");
  }

  if (dword_10011B6B8 == -1)
  {
    uint64_t v6 = sub_10002ACC4();
    if (!v6 || (v6 & 7) != 0) {
      goto LABEL_52;
    }
    dword_10011B6B8 = (*(uint64_t (**)(uint64_t, const char *))(*(void *)v6 + 360LL))( v6,  "SetDurationTo5MinOnInvalid");
  }

  if (dword_10011B6BC == -1)
  {
    uint64_t v7 = sub_10002ACC4();
    if (!v7 || (v7 & 7) != 0) {
      goto LABEL_52;
    }
    dword_10011B6BC = (*(uint64_t (**)(uint64_t, const char *))(*(void *)v7 + 360LL))( v7,  "SetDurationTo24HrsOnInvalid");
  }

  if (dword_10011B6C0 == -1)
  {
    uint64_t v8 = sub_10002ACC4();
    if (!v8 || (v8 & 7) != 0) {
      goto LABEL_52;
    }
    dword_10011B6C0 = (*(uint64_t (**)(uint64_t, const char *))(*(void *)v8 + 360LL))( v8,  "SetDurationTo1HrOnInvalid");
  }

  if (dword_10011B6C4 == -1)
  {
    uint64_t v9 = sub_10002ACC4();
    if (!v9 || (v9 & 7) != 0) {
      goto LABEL_52;
    }
    dword_10011B6C4 = (*(uint64_t (**)(uint64_t, char *))(*(void *)v9 + 360LL))(v9, off_10011B6C8);
  }

  uint64_t v10 = sub_100036FF0();
  *(void *)(a1 + 1200) = v10;
  if (!v10) {
LABEL_51:
  }
    sub_1000D276C();
  *(void *)(a1 + 1404) = 0xFFFFFFFFLL;
  *(_BYTE *)(a1 + 1412) = 0;
  uint64_t v11 = sub_1000256D8();
  *(void *)(a1 + 1192) = v11;
  if (!v11) {
    goto LABEL_50;
  }
  sub_1000612C4(a2);
  if (!v12 || (v12 & 7) != 0) {
    goto LABEL_52;
  }
  int v13 = sub_10005E878(v12, 495, a2, 4);
  *(_DWORD *)(a1 + 1376) = v13;
  if (v13 == -1)
  {
LABEL_50:
    __break(0x5518u);
    goto LABEL_51;
  }

  sub_1000612C4(a2);
  if (!v14
    || (v14 & 7) != 0
    || (sub_10005EB3C(v14, *(_DWORD *)(a1 + 1376)), (uint64_t v15 = *(void *)(a1 + 1192)) == 0)
    || (v15 & 7) != 0)
  {
LABEL_52:
    __break(0x5516u);
    goto LABEL_53;
  }

  unsigned int v16 = (*(uint64_t (**)(uint64_t))(*(void *)v15 + 112LL))(v15);
  if (v16 <= 7)
  {
    if ((v16 & 0xFFFFFFFE) == 2) {
      *(_BYTE *)(a1 + 1392) = 1;
    }
    uint64_t v17 = sub_100061274();
    if (v17)
    {
      if ((v17 & 7) == 0)
      {
        sub_10008C5A8(v17, 4, 365, *(void *)(a1 + 8));
        uint64_t v18 = *(void *)(a1 + 1200);
        if (v18)
        {
          if ((v18 & 7) == 0)
          {
            (*(void (**)(uint64_t, uint64_t))(*(void *)v18 + 16LL))(v18, a1);
            uint64_t v19 = *(void *)(a1 + 8);
            if (v19)
            {
              if ((v19 & 7) == 0)
              {
                sub_10005758C(v19, 4u, 0);
                uint64_t v20 = *(void *)(a1 + 8);
                if (v20)
                {
                  if ((v20 & 7) == 0)
                  {
                    sub_100057538(v20, 4u, 0);
                    return;
                  }
                }
              }
            }
          }
        }
      }
    }

    goto LABEL_52;
  }

void sub_100090BB4(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_17;
  }
  *(void *)a1 = off_100106410;
  uint64_t v2 = *(void *)(a1 + 1200);
  if (!v2 || (v2 & 7) != 0) {
    goto LABEL_17;
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)v2 + 24LL))(v2, a1);
  sub_1000612C4(*(void *)(a1 + 8));
  if (!v4) {
    goto LABEL_17;
  }
  if ((v4 & 7) != 0) {
    goto LABEL_17;
  }
  sub_10005EB3C(v4, *(_DWORD *)(a1 + 1376));
  *(_BYTE *)(a1 + 1384) = 0;
  *(_DWORD *)(a1 + 1388) = 0;
  uint64_t v5 = sub_100061274();
  if (!v5) {
    goto LABEL_17;
  }
  if ((v5 & 7) != 0) {
    goto LABEL_17;
  }
  sub_10008C5A8(v5, 4, 0, *(void *)(a1 + 8));
  sub_100090CC0(a1);
  sub_100090D74(*(void *)(a1 + 8), 0);
  sub_1000612C4(*(void *)(a1 + 8));
  if (!v6
    || (v6 & 7) != 0
    || (sub_10005D014(v6, *(_DWORD *)(a1 + 1376)),
        *(_DWORD *)(a1 + 1376) = -1,
        *(void *)(a1 + 1192) = 0LL,
        qword_10011C980 = 0LL,
        pthread_mutex_destroy((pthread_mutex_t *)(a1 + 1224)),
        ((a1 + 1416) & 7) != 0)
    || (sub_100064D0C((void *)(a1 + 1416)), (((_BYTE)a1 + 72) & 7) != 0))
  {
LABEL_17:
    __break(0x5516u);
  }

  else
  {
    sub_100061324(a1);
  }

uint64_t sub_100090CC0(uint64_t result)
{
  if (!result) {
    goto LABEL_16;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_16;
  }
  if (*(_BYTE *)(result + 1395))
  {
    uint64_t result = *(void *)(result + 1200);
    if (!result || (result & 7) != 0) {
      goto LABEL_16;
    }
    uint64_t result = (*(uint64_t (**)(uint64_t, void))(*(void *)result + 160LL))( result,  *(__int16 *)(v1 + 1396));
    *(_BYTE *)(v1 + 1395) = 0;
  }

  if (*(_BYTE *)(v1 + 1398))
  {
    uint64_t result = *(void *)(v1 + 1200);
    if (!result || (result & 7) != 0) {
      goto LABEL_16;
    }
    uint64_t result = (*(uint64_t (**)(uint64_t, void))(*(void *)result + 128LL))( result,  *(__int16 *)(v1 + 1400));
    *(_BYTE *)(v1 + 1398) = 0;
  }

  if (!*(_BYTE *)(v1 + 1393)) {
    return result;
  }
  uint64_t result = *(void *)(v1 + 1200);
  if (!result || (result & 7) != 0)
  {
LABEL_16:
    __break(0x5516u);
    return result;
  }

  uint64_t result = (*(uint64_t (**)(uint64_t, void))(*(void *)result + 192LL))( result,  *(char *)(v1 + 1394));
  *(_WORD *)(v1 + 1393) = 0;
  return result;
}

void sub_100090D74(uint64_t a1, int a2)
{
  if (!a1)
  {
    __break(0x5518u);
    goto LABEL_17;
  }

  if ((a1 & 7) != 0) {
    goto LABEL_17;
  }
  sub_10005789C(a1, 4u);
  uint64_t v4 = sub_100061274();
  if (!v4 || (v4 & 7) != 0) {
    goto LABEL_17;
  }
  uint64_t v5 = sub_10008C2EC(v4, a1, 4u);
  if (v5)
  {
    if ((v5 & 7) != 0) {
      goto LABEL_17;
    }
    uint64_t v6 = qword_10011C980;
    if (!qword_10011C980)
    {
      qword_10011C980 = v5;
      uint64_t v6 = v5;
    }
  }

  else
  {
    uint64_t v6 = qword_10011C980;
    if (!qword_10011C980)
    {
      qword_10011C980 = 0LL;
      sub_1000CEAEC( 0,  4,  "%s:%d No RemoteUI Object, cannot get RemoteUI mode!\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoRemoteUI.cpp",  894);
      goto LABEL_14;
    }
  }

  if ((v6 & 7) == 0)
  {
    pthread_mutex_lock((pthread_mutex_t *)(v6 + 1224));
    sub_100091864(a1, a2);
    if (qword_10011C980)
    {
      if ((qword_10011C980 & 7) == 0)
      {
        pthread_mutex_unlock((pthread_mutex_t *)(qword_10011C980 + 1224));
LABEL_14:
        sub_1000578E8(a1, 4u);
        return;
      }
    }
  }

void sub_100090E84(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    sub_100090BB4(a1);
  }
}

void sub_100090E98(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    sub_100090BB4(a1);
    operator delete(v1);
  }

void sub_100090EBC(uint64_t a1)
{
  if (!a1)
  {
    __break(0x5518u);
    goto LABEL_13;
  }

  uint64_t v1 = a1;
  LOBYTE(a1) = qword_10011C980;
  if (qword_10011C980) {
    goto LABEL_6;
  }
  uint64_t v2 = (uint64_t)operator new(0x598uLL);
  if ((v2 & 0xF) != 0 || (v2 & 7) != 0)
  {
LABEL_13:
    __break(0x5516u);
    return;
  }

  sub_10009083C(v2, v1);
  qword_10011C980 = a1;
LABEL_6:
  if ((a1 & 7) != 0 || (((_BYTE)a1 + 8) & 7) != 0LL) {
    goto LABEL_13;
  }
}

uint64_t sub_100090F38(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_18;
  }
  int v3 = (_BYTE *)result;
  *(_BYTE *)uint64_t result = 0;
  uint64_t result = sub_100061274();
  if (!result) {
    goto LABEL_18;
  }
  if ((result & 7) != 0) {
    goto LABEL_18;
  }
  char v4 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 152LL))(result, a2);
  uint64_t result = sub_100061274();
  if (!result || (result & 7) != 0) {
    goto LABEL_18;
  }
  uint64_t result = sub_10008C2EC(result, a2, 4u);
  if (!result)
  {
    if ((v4 & 0x10) != 0) {
      sub_1000CEAEC(0, 4, "No RemoteUI Object but device identified for RemoteUI, cannot handle GetRemoteUIMode!\n");
    }
    return 2LL;
  }

  if ((result & 7) != 0) {
    goto LABEL_18;
  }
  if (result != qword_10011C980)
  {
    if ((v4 & 0x10) != 0) {
      sub_1000CEAEC( 0,  4,  "RemoteUI Object does not match but device identified for RemoteUI, cannot handle GetRemoteUIMode!\n");
    }
    return 2LL;
  }

  uint64_t result = sub_1000256D8();
  if (!result)
  {
    sub_1000CEAEC(0, 4, "%s:%d No ExtendedModeMgr handle, cannot get ExtendedMode state!\n");
    return 2LL;
  }

  if ((result & 7) != 0)
  {
LABEL_18:
    __break(0x5516u);
  }

  else
  {
    char v5 = (*(uint64_t (**)(uint64_t))(*(void *)result + 96LL))(result);
    uint64_t result = 0LL;
    *int v3 = v5;
  }

  return result;
}

void sub_100091044(uint64_t a1)
{
  if (!a1)
  {
    __break(0x5518u);
    goto LABEL_86;
  }

  if ((a1 & 7) != 0) {
    goto LABEL_87;
  }
  sub_10005789C(a1, 4u);
  uint64_t v2 = sub_100061274();
  if (!v2 || (v2 & 7) != 0) {
    goto LABEL_87;
  }
  uint64_t v3 = sub_10008C2EC(v2, a1, 4u);
  uint64_t v4 = v3;
  if (!v3)
  {
    uint64_t v5 = qword_10011C980;
    if (!qword_10011C980)
    {
      qword_10011C980 = 0LL;
      sub_1000CEAEC( 0,  4,  "%s:%d No RemoteUI Object, cannot handle EnterRemoteUIMode!\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoRemoteUI.cpp",  680);
      uint64_t v5 = qword_10011C980;
    }

uint64_t sub_100091470(uint64_t result, uint64_t a2)
{
  if (result)
  {
    uint64_t v2 = (void *)result;
    if ((result & 7) == 0)
    {
      uint64_t result = *(void *)result;
      if (*v2 == a2 || result == 0) {
        goto LABEL_9;
      }
      if ((result & 7) == 0)
      {
        uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
LABEL_9:
        *uint64_t v2 = a2;
        return result;
      }
    }
  }

  __break(0x5516u);
  return result;
}

void sub_1000914C8(char a1, uint64_t a2, int a3)
{
  uint64_t v6 = sub_100036FF0();
  std::string __p = 0LL;
  uint64_t v31 = 0LL;
  uint64_t v32 = 0LL;
  if ((a1 & 1) != 0)
  {
    uint64_t v7 = sub_10004783C();
    if (!v7 || (v7 & 7) != 0) {
      goto LABEL_64;
    }
    if ((*(unsigned int (**)(uint64_t, void **))(*(void *)v7 + 304LL))(v7, &__p))
    {
      uint64_t v8 = byte_10011C097 >= 0 ? &qword_10011C080 : (uint64_t *)qword_10011C080;
      unint64_t v9 = byte_10011C097 >= 0 ? byte_10011C097 : unk_10011C088;
      unint64_t v10 = v32 >= 0 ? HIBYTE(v32) : v31;
      uint64_t v11 = v32 >= 0 ? &__p : (void **)__p;
      size_t v12 = v9 >= v10 ? v10 : v9;
      if (!memcmp(v11, v8, v12) && v9 == v10)
      {
        uint64_t v14 = sub_100036FF0();
        if (!v14 || (v14 & 7) != 0) {
          goto LABEL_64;
        }
        if ((*(unsigned int (**)(uint64_t))(*(void *)v14 + 416LL))(v14))
        {
          uint64_t v15 = sub_1000614B8(4LL, a2);
          if (v15)
          {
            uint64_t v16 = v15;
            if ((v15 & 7) == 0)
            {
              sub_100064620(v15, 7u, 1);
              sub_100064620(v16, 7u, 0);
              goto LABEL_45;
            }
          }

uint64_t sub_100091824(uint64_t result)
{
  if (result)
  {
    if ((result & 7) == 0)
    {
      result += 16LL;
      if ((result & 7) == 0) {
        return sub_1000B21B8(result);
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_100091844(uint64_t result)
{
  if (result)
  {
    if ((result & 7) == 0)
    {
      result += 16LL;
      if ((result & 7) == 0) {
        return sub_1000B2C78(result);
      }
    }
  }

  __break(0x5516u);
  return result;
}

void sub_100091864(uint64_t a1, int a2)
{
  if (!a1)
  {
    __break(0x5518u);
    goto LABEL_71;
  }

  if ((a1 & 7) != 0) {
    goto LABEL_71;
  }
  sub_10005789C(a1, 4u);
  uint64_t v4 = sub_100061274();
  if (!v4 || (v4 & 7) != 0) {
    goto LABEL_71;
  }
  uint64_t v5 = sub_10008C2EC(v4, a1, 4u);
  int v6 = v5;
  if (v5)
  {
    if ((v5 & 7) != 0) {
      goto LABEL_71;
    }
    uint64_t v7 = qword_10011C980;
    if (!qword_10011C980)
    {
      qword_10011C980 = v5;
      uint64_t v7 = v5;
    }
  }

  else
  {
    uint64_t v7 = qword_10011C980;
    if (!qword_10011C980)
    {
      qword_10011C980 = 0LL;
      sub_1000CEAEC( 0,  4,  "%s:%d No RemoteUI Object, cannot handle EnterRemoteUIMode!\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoRemoteUI.cpp",  790);
      uint64_t v7 = qword_10011C980;
      if (!qword_10011C980)
      {
LABEL_14:
        sub_1000CEAEC( 0,  4,  "%s:%d RemoteUI Object does not match, cannot handle EnterRemoteUIMode! %hhx != %hhx\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoRemoteUI.cpp",  795,  v7,  v6);
        uint64_t v7 = qword_10011C980;
        if (!qword_10011C980)
        {
LABEL_18:
          sub_1000578E8(a1, 4u);
          return;
        }

        goto LABEL_15;
      }
    }
  }

  if ((v7 & 7) != 0 || ((v7 + 8) & 7) != 0) {
    goto LABEL_71;
  }
  if (*(void *)(v7 + 8) != a1) {
    goto LABEL_14;
  }
LABEL_15:
  if ((v7 & 7) == 0 && ((v7 + 8) & 7) == 0)
  {
    if (*(void *)(v7 + 8) != a1) {
      goto LABEL_18;
    }
    uint64_t v8 = (uint64_t *)(v7 + 1192);
    if ((v8 & 7) == 0)
    {
      uint64_t v9 = *v8;
      if (!*v8) {
        goto LABEL_18;
      }
      if ((v9 & 7) == 0)
      {
        sub_1000612C4(a1);
        if (v10)
        {
          sub_1000612C4(a1);
          if (!v11) {
            goto LABEL_71;
          }
          if ((v11 & 7) != 0) {
            goto LABEL_71;
          }
          if (!qword_10011C980) {
            goto LABEL_71;
          }
          if ((qword_10011C980 & 7) != 0) {
            goto LABEL_71;
          }
          if (((qword_10011C980 + 1376) & 7) != 0) {
            goto LABEL_71;
          }
          sub_10005EB3C(v11, *(_DWORD *)(qword_10011C980 + 1376));
          uint64_t v12 = qword_10011C980;
          if (!qword_10011C980) {
            goto LABEL_71;
          }
          if ((qword_10011C980 & 7) != 0) {
            goto LABEL_71;
          }
          if ((((_BYTE)qword_10011C980 + 104) & 7) != 0) {
            goto LABEL_71;
          }
          *(_BYTE *)(qword_10011C980 + 1384) = 0;
          if (!v12) {
            goto LABEL_71;
          }
        }

        else
        {
          uint64_t v12 = qword_10011C980;
          if (!qword_10011C980) {
            goto LABEL_71;
          }
        }

        if ((v12 & 7) != 0) {
          goto LABEL_71;
        }
        if ((((_BYTE)v12 + 100) & 3) != 0) {
          goto LABEL_71;
        }
        *(_DWORD *)(v12 + 1380) = 0;
        unsigned int v13 = (_DWORD *)(v12 + 1388);
        *unsigned int v13 = 0;
        sub_10005758C(a1, 4u, 0);
        sub_100057538(a1, 4u, 0);
        if (!qword_10011C980) {
          goto LABEL_71;
        }
        if ((qword_10011C980 & 7) != 0) {
          goto LABEL_71;
        }
        if (((qword_10011C980 + 1416) & 7) != 0) {
          goto LABEL_71;
        }
        sub_100091470(qword_10011C980 + 1416, 0LL);
        if (!qword_10011C980) {
          goto LABEL_71;
        }
        if ((qword_10011C980 & 7) != 0) {
          goto LABEL_71;
        }
        if (((qword_10011C980 + 1220) & 3) != 0) {
          goto LABEL_71;
        }
        *(_BYTE *)(qword_10011C980 + 1220) = 0;
        uint64_t v14 = sub_100036FF0();
        if (!v14) {
          goto LABEL_71;
        }
        if ((v14 & 7) != 0) {
          goto LABEL_71;
        }
        (*(void (**)(uint64_t, void))(*(void *)v14 + 632LL))(v14, 0LL);
        if (!qword_10011C980) {
          goto LABEL_71;
        }
        if ((qword_10011C980 & 7) != 0) {
          goto LABEL_71;
        }
        uint64_t v15 = (uint64_t *)(qword_10011C980 + 1192);
        if (((qword_10011C980 + 1192) & 7) != 0) {
          goto LABEL_71;
        }
        uint64_t v16 = *v15;
        if (!*v15) {
          goto LABEL_71;
        }
        if ((v16 & 7) != 0) {
          goto LABEL_71;
        }
        (*(void (**)(uint64_t, void))(*(void *)v16 + 88LL))(v16, 0LL);
        sub_1000914C8(0, a1, a2);
        uint64_t v17 = sub_1000438B8();
        if (!v17 || (v17 & 7) != 0) {
          goto LABEL_71;
        }
        if ((*(unsigned int (**)(uint64_t))(*(void *)v17 + 80LL))(v17))
        {
          uint64_t v18 = sub_1000579D4(a1);
          if (!v18 || (v18 & 7) != 0) {
            goto LABEL_71;
          }
          sub_100091C04(v18);
        }

        if (qword_10011C980)
        {
          if ((qword_10011C980 & 7) == 0)
          {
            uint64_t v19 = (uint64_t *)(qword_10011C980 + 1424);
            if (((qword_10011C980 + 1424) & 7) == 0)
            {
              uint64_t v20 = *v19;
              if (*v19)
              {
                if ((v20 & 7) != 0) {
                  goto LABEL_71;
                }
                uint64_t v21 = (void *)sub_10009E280(v20);
                operator delete(v21);
                if (!qword_10011C980 || (qword_10011C980 & 7) != 0 || ((qword_10011C980 + 1424) & 7) != 0) {
                  goto LABEL_71;
                }
                *(void *)(qword_10011C980 + 1424) = 0LL;
              }

              uint64_t v22 = sub_10004783C();
              if (v22 && (v22 & 7) == 0)
              {
                (*(void (**)(uint64_t, void, void))(*(void *)v22 + 600LL))(v22, 0LL, 0LL);
                goto LABEL_18;
              }
            }
          }
        }
      }
    }
  }

uint64_t sub_100091C04(uint64_t result)
{
  if (result)
  {
    if ((result & 7) == 0)
    {
      result += 16LL;
      if ((result & 7) == 0) {
        return sub_1000B3084(result);
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_100091C24(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_113;
  }
  int v5 = a3;
  if (a2 > 31)
  {
    if (a2 == 32) {
      return sub_10009325C(a1, 1);
    }
    if (a2 != 64)
    {
      if (a2 != 256) {
        goto LABEL_116;
      }
      if (a3 <= 3)
      {
        if (a3 >= 2)
        {
LABEL_114:
          __break(0x5518u);
          goto LABEL_115;
        }

        if (!qword_10011C980 || (qword_10011C980 & 7) != 0) {
          goto LABEL_113;
        }
        pthread_mutex_lock((pthread_mutex_t *)(qword_10011C980 + 1224));
        if (v5) {
          goto LABEL_49;
        }
        if (*(unsigned __int8 *)(a1 + 1220) <= 1u)
        {
          if (*(_BYTE *)(a1 + 1220))
          {
            uint64_t v13 = sub_1000451B0();
            if (!v13) {
              goto LABEL_113;
            }
            if ((v13 & 7) != 0) {
              goto LABEL_113;
            }
            (*(void (**)(uint64_t, uint64_t))(*(void *)v13 + 160LL))(v13, 3600000LL);
            uint64_t v14 = sub_1000451B0();
            if (!v14 || (v14 & 7) != 0) {
              goto LABEL_113;
            }
            (*(void (**)(uint64_t))(*(void *)v14 + 168LL))(v14);
          }

uint64_t sub_100092154(uint64_t a1, int a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_262;
  }
  sub_1000612C4(*(void *)(a1 + 8));
  if (v4)
  {
    sub_1000612C4(*(void *)(a1 + 8));
    if (!v5 || (v5 & 7) != 0) {
      goto LABEL_262;
    }
    sub_10005EB3C(v5, *(_DWORD *)(a1 + 1376));
    *(_BYTE *)(a1 + 1384) = 0;
  }

  uint64_t v6 = &unk_10011C000;
  if (!qword_10011C980 || (qword_10011C980 & 7) != 0 || ((qword_10011C980 + 1380) & 3) != 0) {
    goto LABEL_262;
  }
  int v7 = *(_DWORD *)(qword_10011C980 + 1380);
  pthread_mutex_lock(&stru_10011B6D8);
  int v8 = *(_DWORD *)(a1 + 1344);
  *(_DWORD *)(a1 + 1344) = 0;
  __int16 v107 = v8;
  unsigned int v9 = v7 & ~dword_10011B6D0 | v8;
  pthread_mutex_unlock(&stru_10011B6D8);
  if (!v9) {
    return 0LL;
  }
  unsigned int v10 = *(_DWORD *)(a1 + 1296);
  if (v10 >= 8) {
    goto LABEL_263;
  }
  uint64_t v11 = (_OWORD *)(a1 + 1300);
  unsigned int v102 = *(_DWORD *)(a1 + 1300);
  if (v102 > 3) {
    goto LABEL_263;
  }
  unsigned int v12 = *(unsigned __int8 *)(a1 + 1332);
  if (v12 > 1) {
    goto LABEL_263;
  }
  unsigned int v13 = *(unsigned __int8 *)(a1 + 1333);
  if (v13 > 1) {
    goto LABEL_263;
  }
  unsigned int v101 = *(unsigned __int8 *)(a1 + 1334);
  if (v101 > 1) {
    goto LABEL_263;
  }
  uint64_t v103 = *(void *)(a1 + 1288);
  uint64_t v14 = (unsigned int *)(a1 + 1296);
  int v106 = *(_DWORD *)(a1 + 1308);
  int v104 = *(_DWORD *)(a1 + 1320);
  int v96 = *(_DWORD *)(a1 + 1324);
  int v97 = *(_DWORD *)(a1 + 1336);
  int v94 = *(_DWORD *)(a1 + 1312);
  int v95 = *(_DWORD *)(a1 + 1328);
  int v99 = *(unsigned __int8 *)(a1 + 1348);
  int v100 = *(_DWORD *)(a1 + 1340);
  int v98 = *(unsigned __int8 *)(a1 + 1349);
  unsigned int v15 = sub_100061534((_DWORD *)(a1 + 1300), (int *)(a1 + 1296));
  if (v15 > 0x1F) {
LABEL_263:
  }
    __break(0x550Au);
  if (v15) {
    goto LABEL_261;
  }
  if (*v14 > 7) {
    goto LABEL_263;
  }
  int v105 = v107 & 0x104;
  if (!*v14)
  {
    *(void *)(a1 + 1288) = -1LL;
    *uint64_t v11 = xmmword_1000DF900;
    *(void *)(a1 + 1320) = -1LL;
    *(_DWORD *)(a1 + 1328) = -1;
    *(_WORD *)(a1 + 1332) = 0;
    *(_BYTE *)(a1 + 1334) = 0;
    *(_BYTE *)(a1 + 1350) = 0;
    *(void *)(a1 + 1336) = 0LL;
    goto LABEL_59;
  }

  if ((v9 & 0xDE4) != 0)
  {
    uint64_t v16 = *(void *)(a1 + 1200);
    if (!v16 || (v16 & 7) != 0) {
      goto LABEL_262;
    }
    *(_DWORD *)(a1 + 1304) = (*(uint64_t (**)(uint64_t))(*(void *)v16 + 376LL))(v16);
    v9 |= 0x100u;
  }

  if ((v9 & 0x1000) != 0)
  {
    uint64_t v17 = *(void *)(a1 + 1200);
    if (!v17 || (v17 & 7) != 0) {
      goto LABEL_262;
    }
    *(_DWORD *)(a1 + 1340) = (*(uint64_t (**)(uint64_t))(*(void *)v17 + 392LL))(v17);
  }

  if ((v9 & 0xF8) != 0)
  {
    uint64_t v18 = *(void *)(a1 + 1200);
    if (!v18 || (v18 & 7) != 0) {
      goto LABEL_262;
    }
    int v19 = (*(uint64_t (**)(uint64_t))(*(void *)v18 + 408LL))(v18);
    *(_DWORD *)(a1 + 1308) = v19;
    unsigned int v20 = v106;
    if (v106 != v19)
    {
      sub_1000CEAEC( 6u,  4,  "%s:%s-%d oldTrackTimeMs=%d, m_TrackTimeMs=%d",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoRemoteUI.cpp",  "PlayStatusUpdateNoLock",  5952,  v106,  v19);
      unsigned int v20 = *(_DWORD *)(a1 + 1308);
    }

    *(_DWORD *)(a1 + 1312) = v20 / 0x3E8;
  }

  if ((v9 & 3) != 0)
  {
    uint64_t v21 = *(void *)(a1 + 1200);
    if (!v21) {
      goto LABEL_262;
    }
    if ((v21 & 7) != 0) {
      goto LABEL_262;
    }
    *(_BYTE *)(a1 + 1332) = (*(uint64_t (**)(uint64_t))(*(void *)v21 + 440LL))(v21);
    uint64_t v22 = *(void *)(a1 + 1200);
    if (!v22 || (v22 & 7) != 0) {
      goto LABEL_262;
    }
    *(_BYTE *)(a1 + 1333) = (*(uint64_t (**)(uint64_t))(*(void *)v22 + 448LL))(v22);
  }

  if ((v9 & 0xDE0) == 0)
  {
LABEL_59:
    if ((v9 & 0x2000) != 0)
    {
LABEL_73:
      uint64_t v38 = *(void *)(a1 + 1200);
      if (!v38 || (v38 & 7) != 0) {
        goto LABEL_262;
      }
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v38 + 168LL))(v38);
      *(_BYTE *)(a1 + 1348) = result;
      if ((v9 & 0x4000) != 0)
      {
LABEL_77:
        uint64_t v39 = *(void *)(a1 + 1200);
        if (!v39 || (v39 & 7) != 0) {
          goto LABEL_262;
        }
        uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v39 + 136LL))(v39);
        if (result <= 0xFF)
        {
          *(_BYTE *)(a1 + 1349) = result;
          if (!a2) {
            goto LABEL_81;
          }
          goto LABEL_62;
        }

LABEL_264:
        __break(0x5507u);
        __break(0x5500u);
        goto LABEL_265;
      }

LABEL_262:
              __break(0x5516u);
              goto LABEL_263;
            }

            goto LABEL_265;
          }

          LOBYTE(v108[0]) = 15;
          if (&vars0 != (uint64_t *)103)
          {
            BYTE1(v108[0]) = v85;
            if ((v36 & 7) != 0) {
              goto LABEL_262;
            }
            int v86 = (*(uint64_t (**)(uint64_t, void))(*(void *)v36 + 16LL))(v36, 0LL);
            uint64_t v87 = sub_1000ABB10(v36, 0, 4LL, 39, v86, v108, 2u);
            if (v87)
            {
              uint64_t result = sub_10009703C(a1, v87, 0, 1u);
              uint64_t v33 = result;
              uint64_t v53 = v6[304];
              goto LABEL_245;
            }

LABEL_261:
            __break(0x5518u);
            goto LABEL_262;
          }

LABEL_265:
          __break(0x5513u);
          goto LABEL_266;
        }

        BYTE1(v108[0]) = 17;
        char v45 = 2;
        switch(v44)
        {
          case 0u:
            goto LABEL_127;
          case 1u:
            char v45 = 10;
            goto LABEL_127;
          case 2u:
            char v45 = 11;
            goto LABEL_127;
          case 3u:
            char v45 = 5;
            goto LABEL_127;
          case 4u:
            char v45 = 6;
LABEL_127:
            BYTE1(v108[0]) = v45;
            LOBYTE(v108[0]) = 6;
            unsigned int v48 = *(unsigned __int8 *)(a1 + 1332);
            if (v48 > 1) {
              goto LABEL_263;
            }
            if (*(_BYTE *)(a1 + 1332))
            {
              unsigned int v48 = *(unsigned __int8 *)(a1 + 1333);
              if (v48 > 1) {
                goto LABEL_263;
              }
            }

            if (!(v13 | v12) || v48) {
              goto LABEL_136;
            }
            if ((v36 & 7) != 0) {
              goto LABEL_262;
            }
            int v49 = (*(uint64_t (**)(uint64_t, void))(*(void *)v36 + 16LL))(v36, 0LL);
            uint64_t v50 = sub_1000ABB10(v36, 0, 4LL, 39, v49, &unk_1000DFAB5, 2u);
            if (!v50) {
              goto LABEL_261;
            }
            sub_10009703C(a1, v50, 0, 1u);
LABEL_136:
            if ((v36 & 7) != 0) {
              goto LABEL_262;
            }
            int v51 = (*(uint64_t (**)(uint64_t, void))(*(void *)v36 + 16LL))(v36, 0LL);
            uint64_t v52 = sub_1000ABB10(v36, 0, 4LL, 39, v51, v108, 2u);
            if (!v52) {
              goto LABEL_261;
            }
            uint64_t result = sub_10009703C(a1, v52, 0, 1u);
            uint64_t v33 = result;
            unsigned int v44 = *(_DWORD *)(a1 + 1296);
            break;
          case 5u:
            LOWORD(v108[0]) = 1798;
            goto LABEL_136;
          default:
            goto LABEL_141;
        }
      }

      unsigned int v10 = v44;
      if (v44 > 7) {
        goto LABEL_263;
      }
      goto LABEL_140;
    }

LABEL_266:
  __break(0x5515u);
  return result;
}

      __break(0x5513u);
      goto LABEL_267;
    case 19:
      uint64_t v22 = *(uint64_t (**)(void))(*(void *)a2 + 152LL);
LABEL_130:
      a1 = v22();
      LOWORD(v52) = __rev16(a1);
      goto LABEL_134;
    case 20:
      a1 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 160LL))(a2, v18);
      *(_BYTE *)uint64_t v21 = a1;
      goto LABEL_144;
    case 21:
      uint64_t v24 = *(uint64_t (**)(void))(*(void *)a2 + 80LL);
LABEL_120:
      a1 = v24();
      unsigned int v20 = 0;
      int v26 = 1;
      goto LABEL_221;
    case 22:
      a1 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 88LL))(a2, v18);
      if (WORD1(a1)) {
        goto LABEL_264;
      }
LABEL_132:
      int v51 = bswap32(a1);
      goto LABEL_133;
    case 23:
      uint64_t v53 = (float)((*(float (**)(uint64_t, uint64_t))(*(void *)a2 + 216LL))(a2, v18) * 100.0) + -100.0;
      if (v53 <= -129.0 || v53 >= 128.0) {
        goto LABEL_273;
      }
      *(_BYTE *)uint64_t v21 = (int)v53;
LABEL_144:
      if (v19 == -2) {
        goto LABEL_266;
      }
      int v26 = 0;
      unsigned int v20 = 0;
      uint64_t v21 = v19 + 2;
      goto LABEL_221;
    case 24:
      a1 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 208LL))(a2, v18);
      if (WORD1(a1)) {
        goto LABEL_267;
      }
      else {
        uint64_t v50 = a1 - 99;
      }
      int v51 = bswap32(v50);
LABEL_133:
      uint64_t v52 = HIWORD(v51);
LABEL_134:
      *(_WORD *)uint64_t v21 = v52;
      if (v21 > 0xFFFFFFFFFFFFFFFDLL) {
        goto LABEL_266;
      }
      int v26 = 0;
      unsigned int v20 = 0;
      uint64_t v21 = v19 + 3;
      goto LABEL_221;
    case 25:
      uint64_t v23 = *(uint64_t (**)(void))(*(void *)a2 + 144LL);
      goto LABEL_147;
    case 26:
      uint64_t v23 = *(uint64_t (**)(void))(*(void *)a2 + 104LL);
LABEL_147:
      a1 = v23();
LABEL_148:
      *(_DWORD *)uint64_t v21 = bswap32(a1);
      if (v21 > 0xFFFFFFFFFFFFFFFBLL) {
        goto LABEL_266;
      }
      int v26 = 0;
      unsigned int v20 = 0;
      uint64_t v21 = v19 + 5;
      goto LABEL_221;
    case 27:
      *(_DWORD *)uint64_t v21 = bswap32((*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 112LL))(a2, v18));
      if (v21 > 0xFFFFFFFFFFFFFFFBLL) {
        goto LABEL_266;
      }
      a1 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 120LL))(a2);
      *(_DWORD *)(v19 + 5) = bswap32(a1);
LABEL_53:
      int v26 = 0;
      unsigned int v20 = 0;
      uint64_t v21 = v19 + 9;
      goto LABEL_221;
    case 28:
      v100.__r_.__value_.__s.__data_[0] = 0;
      if (v92 < v99) {
        goto LABEL_266;
      }
      if (v93 - v21 > 0xFF) {
        goto LABEL_267;
      }
      sub_100062984(v95, a2, v19, (v93 - v21), &v100);
      if (!v100.__r_.__value_.__s.__data_[0]) {
        goto LABEL_155;
      }
      uint64_t v55 = v100.__r_.__value_.__s.__data_[0] - 1;
      if (__CFADD__(v21, v55)) {
        goto LABEL_266;
      }
      v21 += v55;
LABEL_155:
      if (v21 > v93) {
        goto LABEL_264;
      }
      int v26 = 0;
      goto LABEL_224;
    default:
      int v26 = 0;
      unsigned int v20 = 4;
      goto LABEL_221;
  }

uint64_t sub_10009325C(uint64_t result, int a2)
{
  if (result
    && (uint64_t v2 = result, (result & 7) == 0)
    && (qword_10011C980 ? (BOOL v3 = (qword_10011C980 & 7) == 0) : (BOOL v3 = 0),
        v3
     && (pthread_mutex_lock((pthread_mutex_t *)(qword_10011C980 + 1224)), uint64_t result = sub_100092154(v2, a2),
                                                                          qword_10011C980)
     && (qword_10011C980 & 7) == 0))
  {
    uint64_t v5 = result;
    pthread_mutex_unlock((pthread_mutex_t *)(qword_10011C980 + 1224));
    return v5;
  }

  else
  {
    __break(0x5516u);
  }

  return result;
}

void sub_1000932E0(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_80;
  }
  if (!*(void *)(a1 + 8)) {
    return;
  }
  uint64_t v4 = sub_100061274();
  if (!v4 || (v4 & 7) != 0) {
    goto LABEL_80;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5 || (v5 & 7) != 0) {
    goto LABEL_80;
  }
  if ((sub_1000569F0(v5) & 1) != 0) {
    return;
  }
  if (!a2 || (a2 & 7) != 0) {
    goto LABEL_80;
  }
  unsigned int v6 = *(unsigned __int16 *)(a2 + 126);
  unsigned __int8 v15 = 0;
  if (v15 >= 2u) {
    goto LABEL_81;
  }
  if (!v15)
  {
LABEL_14:
    unsigned int v7 = 4;
LABEL_15:
    if (v7 <= 0x1F)
    {
      sub_1000ABE78( a2,  *(void *)(a2 + 8),  0,  4LL,  1,  *(_DWORD *)(a2 + 68),  v7,  v6,  0,  255,  0LL,  0,  0,  0);
LABEL_18:
      sub_10009703C(a1, a2, 0, 1u);
      return;
    }

uint64_t sub_1000938D4(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_22;
  }
  if (*(_WORD *)(a2 + 128)) {
    return 4LL;
  }
  uint64_t v5 = *(void *)(a1 + 1200);
  if (!v5 || (v5 & 7) != 0) {
    goto LABEL_22;
  }
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 384LL))(v5);
  uint64_t v12 = v6;
  if (!v6) {
    goto LABEL_16;
  }
  uint64_t v7 = v6;
  if ((v6 & 7) != 0) {
    goto LABEL_22;
  }
  if (!(*(unsigned int (**)(uint64_t))(*(void *)v6 + 16LL))(v6))
  {
LABEL_16:
    uint64_t v4 = 2LL;
LABEL_20:
    sub_100064D0C(&v12);
    return v4;
  }

  unsigned int v8 = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 368LL))(v7);
  if (v8)
  {
    uint64_t v9 = *(void *)(a1 + 1200);
    if (v9 && (v9 & 7) == 0)
    {
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v9 + 208LL))(v9);
      goto LABEL_18;
    }

uint64_t sub_100093A40(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_26;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_26;
  }
  if (*(_WORD *)(a2 + 128) != 4) {
    return 4LL;
  }
  uint64_t result = *(void *)(result + 1200);
  if (!result || (result & 7) != 0) {
    goto LABEL_26;
  }
  uint64_t result = *(void *)(v2 + 1200);
  if (!result || (result & 7) != 0) {
    goto LABEL_26;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 384LL))(result);
  uint64_t v8 = result;
  if (!result) {
    goto LABEL_23;
  }
  uint64_t v5 = result;
  if ((result & 7) != 0) {
    goto LABEL_26;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 368LL))(v5);
  if (!(_DWORD)result) {
    goto LABEL_23;
  }
  uint64_t v6 = *(unsigned int **)(a2 + 24);
  if (!v6)
  {
LABEL_26:
    __break(0x5516u);
    goto LABEL_27;
  }

  if (bswap32(*v6) >= result)
  {
LABEL_23:
    uint64_t v4 = 2LL;
    goto LABEL_24;
  }

  unsigned int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 376LL))(v5);
  uint64_t result = *(void *)(v2 + 1200);
  if (!result || (result & 7) != 0) {
    goto LABEL_26;
  }
  if (v7 < 0xFFFFFC18)
  {
    (*(void (**)(uint64_t, void))(*(void *)result + 344LL))(result, v7 + 1000);
    uint64_t v4 = 0LL;
LABEL_24:
    sub_100064D0C(&v8);
    return v4;
  }

uint64_t sub_100093B8C(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_37;
  }
  if (*(_WORD *)(a2 + 128) != 4) {
    return 4LL;
  }
  uint64_t v4 = *(void *)(a1 + 1200);
  if (!v4 || (v4 & 7) != 0) {
    goto LABEL_37;
  }
  uint64_t v6 = *(unsigned int **)(a2 + 24);
  if (!v6) {
    goto LABEL_37;
  }
  unsigned int v7 = *v6;
  uint64_t v8 = *(void *)(a1 + 1200);
  if (!v8 || (v8 & 7) != 0) {
    goto LABEL_37;
  }
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(*(void *)v8 + 384LL))(v8);
  uint64_t v23 = v9;
  if (!v9)
  {
LABEL_22:
    uint64_t v5 = 2LL;
LABEL_23:
    sub_100064D0C(&v23);
    return v5;
  }

  uint64_t v10 = v9;
  if ((v9 & 7) != 0) {
    goto LABEL_37;
  }
  uint64_t v11 = bswap32(v7);
  unsigned int v12 = (*(uint64_t (**)(uint64_t))(*(void *)v10 + 368LL))(v10);
  unsigned int v13 = v12;
  unsigned int v14 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v10 + 376LL))(v10, v11);
  uint64_t v15 = *(void *)v10;
  unsigned int v16 = (int)v11 + 1 >= v13
  unsigned int v17 = v16;
  if (v14 > v16) {
    goto LABEL_22;
  }
  uint64_t v19 = *(void *)(a1 + 1200);
  if (!v19 || (v19 & 7) != 0) {
LABEL_37:
  }
    __break(0x5516u);
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v19 + 408LL))(v19);
  unsigned int v20 = result - v14;
  unsigned int v25 = -1431655766;
  if (v17 < v14)
  {
    __break(0x5515u);
  }

  else
  {
    unsigned int v24 = bswap32(v17 - v14);
    if ((unint64_t)&v24 < 0xFFFFFFFFFFFFFFFCLL)
    {
      unsigned int v25 = bswap32(v20);
      uint64_t v22 = *(void *)(a2 + 8);
      if (v22)
      {
        sub_1000AC324(a2, v22, 0, 4LL, 6, *(_DWORD *)(a2 + 68), &v24, 8u);
        uint64_t v5 = 0LL;
        goto LABEL_23;
      }

      __break(0x5518u);
      goto LABEL_37;
    }
  }

  __break(0x5500u);
  return result;
}

uint64_t sub_100093DAC(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_35;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_35;
  }
  if (*(_WORD *)(a2 + 128) != 4) {
    return 4LL;
  }
  uint64_t result = *(void *)(result + 1200);
  if (!result || (result & 7) != 0) {
    goto LABEL_35;
  }
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 384LL))(result);
  uint64_t v19 = result;
  if (!result)
  {
    uint64_t v6 = 2LL;
LABEL_33:
    sub_100064D0C(&v19);
    return v6;
  }

  uint64_t v5 = result;
  if ((result & 7) != 0) {
    goto LABEL_35;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 16LL))(result);
  uint64_t v6 = 2LL;
  if (!v4 || !(_DWORD)result) {
    goto LABEL_33;
  }
  unsigned int v7 = *(unsigned int **)(a2 + 24);
  if (!v7)
  {
LABEL_35:
    __break(0x5516u);
    goto LABEL_36;
  }

  uint64_t v8 = bswap32(*v7);
  if (v8 >= (*(unsigned int (**)(uint64_t))(*(void *)v5 + 368LL))(v5))
  {
    uint64_t v6 = 4LL;
    goto LABEL_33;
  }

  std::string __p = 0LL;
  uint64_t v17 = 0LL;
  uint64_t v18 = 0LL;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, void **))(*(void *)v5 + 384LL))(v5, v8, &__p);
  if (!(_DWORD)result)
  {
    uint64_t v6 = 2LL;
LABEL_31:
    if (SHIBYTE(v18) < 0) {
      operator delete(__p);
    }
    goto LABEL_33;
  }

  if ((v4 & 7) != 0) {
    goto LABEL_35;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 136LL))(v4, 4LL);
  if (result < 0x10000)
  {
    unsigned __int16 v9 = result;
    unsigned int v10 = (unsigned __int16)result;
    uint64_t result = (uint64_t)operator new[]((unsigned __int16)result);
    uint64_t v11 = HIBYTE(v18);
    if (v18 < 0) {
      uint64_t v11 = v17;
    }
    BOOL v12 = __CFADD__(v11, 1LL);
    unint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_37;
    }
    if (!(v13 >> 16))
    {
      unsigned int v14 = (void *)result;
      if (v18 >= 0) {
        p_p = &__p;
      }
      else {
        p_p = __p;
      }
      memcpy((void *)result, p_p, v9);
      sub_1000616D4(v2, (uint64_t)v14, v9);
      sub_1000AC324(a2, v4, 0, 4LL, 8, *(_DWORD *)(a2 + 68), v14, v9);
      operator delete[](v14);
      uint64_t v6 = 0LL;
      goto LABEL_31;
    }
  }

uint64_t sub_100093FAC(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_12;
  }
  if (*(_WORD *)(a2 + 128)) {
    return 4LL;
  }
  uint64_t result = *(void *)(result + 1200);
  if (!result || (result & 7) != 0)
  {
LABEL_12:
    __break(0x5516u);
    goto LABEL_13;
  }

  uint64_t v3 = *(void *)(a2 + 8);
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 200LL))(result);
  if (result >= 0x100)
  {
LABEL_13:
    __break(0x5507u);
    return result;
  }

  char v4 = result;
  sub_1000AC324(a2, v3, 0, 4LL, 10, *(_DWORD *)(a2 + 68), &v4, 1u);
  return 0LL;
}

uint64_t sub_100094054(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_24;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_24;
  }
  int v3 = *(unsigned __int16 *)(a2 + 128);
  char v4 = *(_BYTE **)(a2 + 24);
  if (v3 != 2)
  {
    if (v3 != 1) {
      return 4LL;
    }
    if (v4)
    {
      if ((*v4 + 1) <= 2u)
      {
        uint64_t result = *(void *)(result + 1200);
        if (result && (result & 7) == 0)
        {
          uint64_t v5 = *(void (**)(void))(*(void *)result + 192LL);
LABEL_21:
          v5();
          return 0LL;
        }

        goto LABEL_24;
      }

      return 4LL;
    }

void sub_100094154(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_163;
  }
  if (*(_WORD *)(a2 + 128) != 7) {
    return;
  }
  char v4 = *(unsigned __int8 **)(a2 + 24);
  if (!v4) {
    goto LABEL_163;
  }
  if (v4 == (unsigned __int8 *)-1LL)
  {
LABEL_164:
    __break(0x5500u);
    goto LABEL_165;
  }

  uint64_t v5 = *(void *)(a2 + 8);
  unsigned int v6 = *v4;
  unsigned int v7 = *(_DWORD *)(v4 + 1);
  uint64_t v8 = *(void *)(a1 + 1200);
  if (!v8 || (v8 & 7) != 0) {
    goto LABEL_163;
  }
  unsigned int v9 = (*(uint64_t (**)(uint64_t))(*(void *)v8 + 392LL))(v8);
  if (v6 > 8) {
    return;
  }
  uint64_t v10 = bswap32(v7);
  uint64_t v11 = *(void *)(a1 + 1200);
  if (!v11 || (v11 & 7) != 0) {
    goto LABEL_163;
  }
  char v12 = (*(uint64_t (**)(uint64_t))(*(void *)v11 + 464LL))(v11);
  if (!v5 || (v12 & 1) != 0) {
    return;
  }
  *(void *)&__int128 v13 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v13 + 1) = 0xAAAAAAAAAAAAAAAALL;
  *(_OWORD *)size_t __n = v13;
  __int128 v84 = v13;
  unint64_t v85 = 0xAAAAAAAAAAAAAAAALL;
  std::string __p = 0LL;
  uint64_t v87 = 0LL;
  uint64_t v88 = 0LL;
  uint64_t v14 = *(void *)(a1 + 1200);
  if (!v14 || (v14 & 7) != 0) {
    goto LABEL_163;
  }
  uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v14 + 400LL))(v14, v10);
  uint64_t v82 = v15;
  if (!v15) {
    goto LABEL_158;
  }
  uint64_t v16 = v15;
  if ((v15 & 7) != 0) {
LABEL_163:
  }
    __break(0x5516u);
  if (!(*(unsigned int (**)(uint64_t))(*(void *)v15 + 16LL))(v15))
  {
LABEL_158:
    sub_100064D0C(&v82);
    if (SHIBYTE(v88) < 0) {
      operator delete(__p);
    }
    return;
  }

  HIBYTE(__n[0]) = v6;
  BYTE6(__n[0]) = 1;
  switch(v6)
  {
    case 0u:
      unsigned int v17 = sub_100097130(a1, 0xCu, v16);
      LODWORD(__n[1]) = bswap32(v17);
      BYTE6(__n[0]) = 5;
      unsigned int v18 = (*(uint64_t (**)(uint64_t))(*(void *)v16 + 128LL))(v16);
      if (v18 == -1)
      {
        if (dword_10011B6B0)
        {
          unsigned int v18 = 0;
        }

        else if (dword_10011B6B4)
        {
          unsigned int v18 = 0x7FFFFFFF;
        }

        else if (dword_10011B6B8)
        {
          unsigned int v18 = 300000;
        }

        else if (dword_10011B6BC)
        {
          unsigned int v18 = 86400000;
        }

        else if (dword_10011B6C0)
        {
          unsigned int v18 = 3600000;
        }

        else
        {
          unsigned int v18 = -1;
        }
      }

      char v45 = BYTE6(__n[0]);
      BOOL v46 = (_DWORD *)((char *)__n + BYTE6(__n[0]) + 7);
      if (!v46) {
        goto LABEL_163;
      }
      _DWORD *v46 = bswap32(v18);
      BYTE6(__n[0]) = v45 + 4;
      unsigned int v47 = (*(uint64_t (**)(uint64_t))(*(void *)v16 + 368LL))(v16);
      if (HIWORD(v47)) {
        goto LABEL_165;
      }
      unsigned int v48 = BYTE6(__n[0]);
      int v49 = (_WORD *)((char *)__n + BYTE6(__n[0]) + 7);
      if (!v49) {
        goto LABEL_163;
      }
      *int v49 = bswap32(v47) >> 16;
      if (v48 > 0xFD) {
        goto LABEL_165;
      }
      BYTE6(__n[0]) = v48 + 2;
      goto LABEL_103;
    case 1u:
      int v31 = (*(uint64_t (**)(uint64_t))(*(void *)v16 + 272LL))(v16);
      goto LABEL_55;
    case 2u:
      time_t v81 = 0xAAAAAAAAAAAAAAAALL;
      v80.tm_zone = (char *)0xAAAAAAAAAAAAAAAALL;
      *(void *)&__int128 v19 = 0xAAAAAAAAAAAAAAAALL;
      *((void *)&v19 + 1) = 0xAAAAAAAAAAAAAAAALL;
      *(_OWORD *)&v80.tm_mon = v19;
      *(_OWORD *)&v80.tm_isdst = v19;
      *(_OWORD *)&v80.tm_sec = v19;
      if (((*(uint64_t (**)(uint64_t, time_t *))(*(void *)v16 + 224LL))(v16, &v81) & 1) != 0)
      {
        localtime_r(&v81, &v80);
        char v20 = LOBYTE(v80.tm_mon) + 1;
        if (__OFADD__(v80.tm_mon, 1)) {
          goto LABEL_164;
        }
        ++v80.tm_mon;
        unsigned int v21 = v80.tm_year + 1900;
        if (__OFADD__(v80.tm_year, 1900)) {
          goto LABEL_164;
        }
        v80.tm_year += 1900;
        unsigned int tm_wday = v80.tm_wday;
        if (!v80.tm_wday)
        {
          unsigned int tm_wday = 7;
          v80.unsigned int tm_wday = 7;
        }
      }

      else
      {
        unsigned int tm_wday = 0;
        unsigned int v21 = 0;
        char v20 = 0;
        memset(&v80, 0, sizeof(v80));
      }

      unint64_t v35 = BYTE6(__n[0]);
      if (BYTE6(__n[0]) == 255) {
        goto LABEL_165;
      }
      unint64_t v36 = BYTE6(__n[0]) + 1LL;
      ++BYTE6(__n[0]);
      unint64_t v37 = ~((unint64_t)__n + 7);
      *((_BYTE *)__n + v35 + 7) = v80.tm_sec;
      unint64_t v38 = v35 + 2;
      BYTE6(__n[0]) = v35 + 2;
      if (v37 < v36) {
        goto LABEL_166;
      }
      *((_BYTE *)__n + v36 + 7) = v80.tm_min;
      unint64_t v39 = v35 + 3;
      BYTE6(__n[0]) = v35 + 3;
      if (v37 < v38) {
        goto LABEL_166;
      }
      *((_BYTE *)__n + v38 + 7) = v80.tm_hour;
      unint64_t v40 = v35 + 4;
      BYTE6(__n[0]) = v35 + 4;
      if (v37 < v39) {
        goto LABEL_166;
      }
      *((_BYTE *)__n + v39 + 7) = v80.tm_mday;
      unint64_t v41 = v35 + 5;
      BYTE6(__n[0]) = v35 + 5;
      if (v37 < v40) {
        goto LABEL_166;
      }
      *((_BYTE *)__n + v40 + 7) = v20;
      if (HIWORD(v21)) {
        goto LABEL_165;
      }
      uint64_t v42 = (_WORD *)((char *)__n + v41 + 7);
      if (!v42) {
        goto LABEL_163;
      }
      *uint64_t v42 = bswap32(v21) >> 16;
      unint64_t v43 = v35 + 7;
      BYTE6(__n[0]) = v35 + 7;
      if (tm_wday > 0xFF) {
        goto LABEL_165;
      }
      BYTE6(__n[0]) = v35 + 8;
      if (v43 > v37) {
        goto LABEL_166;
      }
      *((_BYTE *)__n + v43 + 7) = tm_wday;
LABEL_103:
      if ((v5 & 7) != 0) {
        goto LABEL_163;
      }
      unsigned int v50 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v5 + 136LL))(v5, 4LL);
      if (HIWORD(v50)) {
        goto LABEL_165;
      }
      unsigned int v51 = (unsigned __int16)v50;
      unint64_t v52 = (unint64_t)operator new[]((unsigned __int16)v50);
      uint64_t v53 = (char *)v52;
      uint64_t v54 = HIBYTE(v88);
      if ((SHIBYTE(v88) & 0x80000000) == 0)
      {
        if (HIBYTE(v88))
        {
          uint64_t v55 = HIBYTE(v88);
          goto LABEL_109;
        }

LABEL_161:
        __break(0x5518u);
        goto LABEL_162;
      }

      memcpy((void *)v52, (char *)__n + 7, BYTE6(__n[0]));
      uint64_t v76 = v87;
      if ((v54 & 0x80u) == 0LL) {
        uint64_t v76 = v54;
      }
      if (!v76)
      {
LABEL_155:
        int v69 = *(_DWORD *)(a2 + 68);
        unsigned int v75 = (unsigned __int16)v57;
        uint64_t v70 = a2;
        uint64_t v71 = v5;
        uint64_t v72 = 4LL;
        __int16 v73 = 13;
        int v74 = v53;
LABEL_156:
        sub_1000AC324(v70, v71, 0, v72, v73, v69, v74, v75);
LABEL_157:
        operator delete[](v53);
        goto LABEL_158;
      }

      if (v57 + (unsigned __int16)v56 > v51)
      {
        LODWORD(v56) = v51 - v57;
        if (WORD1(v56))
        {
LABEL_165:
          __break(0x5507u);
          goto LABEL_166;
        }
      }

      if (!__CFADD__(v53, v57))
      {
        if ((v54 & 0x80u) == 0LL) {
          int v77 = &__p;
        }
        else {
          int v77 = __p;
        }
        memcpy(&v53[v57], v77, (unsigned __int16)v56);
        sub_1000616D4(a1, (uint64_t)&v53[v57], (unsigned __int16)v56);
        LODWORD(v57) = v57 + (unsigned __int16)v56;
        if (WORD1(v57)) {
          goto LABEL_165;
        }
        goto LABEL_155;
      }

uint64_t sub_100094BB4(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_14;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_14;
  }
  if (*(_WORD *)(a2 + 128) != 10) {
    return 4LL;
  }
  uint64_t result = *(void *)(result + 1200);
  if (!result || (result & 7) != 0) {
    goto LABEL_14;
  }
  unint64_t v4 = *(void *)(a2 + 24);
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 464LL))(result);
  if ((result & 1) != 0) {
    return 4LL;
  }
  if (!v4)
  {
LABEL_14:
    __break(0x5516u);
    goto LABEL_15;
  }

  if (v4 > 0xFFFFFFFFFFFFFFF9LL)
  {
LABEL_15:
    __break(0x5500u);
    goto LABEL_16;
  }

  uint64_t result = sub_100062820( v2,  a2,  1u,  bswap32(*(_DWORD *)v4),  __rev16(*(unsigned __int16 *)(v4 + 4)),  bswap32(*(_DWORD *)(v4 + 6)));
  if (result >= 0x20) {
LABEL_16:
  }
    __break(0x550Au);
  return result;
}

uint64_t sub_100094C7C(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_11;
  }
  __int16 v2 = 3585;
  if (dword_10011B6C4) {
    HIBYTE(v2) = 12;
  }
  if (!a2 || (a2 & 7) != 0)
  {
LABEL_11:
    __break(0x5516u);
  }

  else if (*(_WORD *)(a2 + 128))
  {
    return 4LL;
  }

  else
  {
    sub_1000AC324(a2, *(void *)(a2 + 8), 0, 4LL, 19, *(_DWORD *)(a2 + 68), &v2, 2u);
    return 0LL;
  }

  return result;
}

uint64_t sub_100094D08(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_22;
  }
  if (*(_WORD *)(a2 + 128)) {
    return 4LL;
  }
  memset(__p, 170, sizeof(__p));
  uint64_t result = sub_10004783C();
  if (!result || (result & 7) != 0)
  {
LABEL_22:
    __break(0x5516u);
LABEL_23:
    __break(0x5500u);
    goto LABEL_24;
  }

  uint64_t result = (uint64_t)(*(void *(**)(void **__return_ptr))(*(void *)result + 88LL))(__p);
  unint64_t v4 = (void *)HIBYTE(__p[2]);
  if (SHIBYTE(__p[2]) < 0) {
    unint64_t v4 = __p[1];
  }
  if (!v4)
  {
    uint64_t v3 = 2LL;
    if ((HIBYTE(__p[2]) & 0x80) == 0) {
      return v3;
    }
    goto LABEL_18;
  }

  if (SHIBYTE(__p[2]) >= 0) {
    uint64_t v5 = __p;
  }
  else {
    uint64_t v5 = (void **)__p[0];
  }
  if (!(((unint64_t)v4 + 1) >> 16))
  {
    sub_1000AC324(a2, *(void *)(a2 + 8), 0, 4LL, 21, *(_DWORD *)(a2 + 68), v5, (unsigned __int16)((_WORD)v4 + 1));
    uint64_t v3 = 0LL;
    if ((HIBYTE(__p[2]) & 0x80) == 0) {
      return v3;
    }
LABEL_18:
    operator delete(__p[0]);
    return v3;
  }

uint64_t sub_100094E08(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_36;
  }
  if (*(_WORD *)(a2 + 128)) {
    return 4LL;
  }
  uint64_t v5 = *(void *)(a1 + 1200);
  if (!v5 || (v5 & 7) != 0) {
    goto LABEL_36;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 416LL))(v5);
  if (result >= 4)
  {
    __break(0x550Au);
    goto LABEL_38;
  }

  char v6 = result;
  if ((_DWORD)result)
  {
    uint64_t v7 = *(void *)(a1 + 1200);
    if (v7)
    {
      if ((v7 & 7) == 0)
      {
        unsigned int v8 = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 408LL))(v7);
        uint64_t v9 = *(void *)(a1 + 1200);
        if (v9)
        {
          if ((v9 & 7) == 0)
          {
            uint64_t v10 = (*(uint64_t (**)(uint64_t))(*(void *)v9 + 384LL))(v9);
            uint64_t v11 = v10;
            unint64_t v13 = v10;
            if (!v10) {
              goto LABEL_21;
            }
            if ((v10 & 7) == 0)
            {
              if (!(*(unsigned int (**)(uint64_t))(*(void *)v10 + 16LL))(v10))
              {
LABEL_20:
                LODWORD(v11) = 0;
                goto LABEL_21;
              }

              LODWORD(v11) = (*(uint64_t (**)(uint64_t))(*(void *)v11 + 128LL))(v11);
              if ((_DWORD)v11 == -1)
              {
                if (!dword_10011B6B0)
                {
                  if (dword_10011B6B4)
                  {
                    LODWORD(v11) = 0x7FFFFFFF;
                  }

                  else if (dword_10011B6B8)
                  {
                    LODWORD(v11) = 300000;
                  }

                  else if (dword_10011B6BC)
                  {
                    LODWORD(v11) = 86400000;
                  }

                  else if (dword_10011B6C0)
                  {
                    LODWORD(v11) = 3600000;
                  }

                  else
                  {
                    LODWORD(v11) = -1;
                  }

                  goto LABEL_21;
                }

                goto LABEL_20;
              }

uint64_t sub_100095028(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_11;
  }
  if (*(_WORD *)(a2 + 128)) {
    return 4LL;
  }
  uint64_t result = *(void *)(result + 1200);
  if (!result || (result & 7) != 0)
  {
LABEL_11:
    __break(0x5516u);
  }

  else
  {
    unsigned int v3 = (*(uint64_t (**)(uint64_t))(*(void *)result + 376LL))(result);
    uint64_t v4 = *(void *)(a2 + 8);
    unsigned int v5 = bswap32(v3);
    sub_1000AC324(a2, v4, 0, 4LL, 31, *(_DWORD *)(a2 + 68), &v5, 4u);
    return 0LL;
  }

  return result;
}

uint64_t sub_1000950C4(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_35;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_35;
  }
  if (*(_WORD *)(a2 + 128) != 4) {
    return 4LL;
  }
  uint64_t v4 = *(unsigned int **)(a2 + 24);
  if (!v4) {
    goto LABEL_35;
  }
  unsigned int v5 = *v4;
  uint64_t v6 = *(void *)(a2 + 8);
  if (!v6) {
    sub_1000D276C();
  }
  uint64_t result = *(void *)(result + 1200);
  if (!result || (result & 7) != 0) {
    goto LABEL_35;
  }
  uint64_t result = *(void *)(v2 + 1200);
  if (!result || (result & 7) != 0) {
    goto LABEL_35;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t, void))(*(void *)result + 400LL))(result, bswap32(v5));
  uint64_t v20 = result;
  if (!result) {
    goto LABEL_31;
  }
  uint64_t v8 = result;
  if ((result & 7) != 0)
  {
LABEL_35:
    __break(0x5516u);
    goto LABEL_36;
  }

  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 16LL))(result);
  if (!(_DWORD)result)
  {
LABEL_31:
    uint64_t v7 = 4LL;
LABEL_32:
    sub_100064D0C(&v20);
    return v7;
  }

  if ((v6 & 7) != 0) {
    goto LABEL_35;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v6 + 136LL))(v6, 4LL);
  if (result >= 0x10000)
  {
LABEL_36:
    __break(0x5507u);
    goto LABEL_37;
  }

  unsigned __int16 v9 = result;
  unint64_t v10 = result;
  uint64_t v11 = operator new[](result);
  std::string __p = 0LL;
  uint64_t v18 = 0LL;
  uint64_t v19 = 0LL;
  uint64_t result = (*(uint64_t (**)(uint64_t, void **))(*(void *)v8 + 32LL))(v8, &__p);
  uint64_t v12 = HIBYTE(v19);
  if (v19 < 0) {
    uint64_t v12 = v18;
  }
  BOOL v13 = __CFADD__(v12, 1LL);
  unint64_t v14 = v12 + 1;
  if (!v13)
  {
    if (v14 <= v10) {
      unsigned __int16 v15 = v14;
    }
    else {
      unsigned __int16 v15 = v9;
    }
    if (v19 >= 0) {
      p_p = &__p;
    }
    else {
      p_p = __p;
    }
    memcpy(v11, p_p, v15);
    sub_1000616D4(v2, (uint64_t)v11, v15);
    sub_1000AC324(a2, v6, 0, 4LL, 33, *(_DWORD *)(a2 + 68), v11, v15);
    operator delete[](v11);
    if (SHIBYTE(v19) < 0) {
      operator delete(__p);
    }
    uint64_t v7 = 0LL;
    goto LABEL_32;
  }

uint64_t sub_1000952B8(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_35;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_35;
  }
  if (*(_WORD *)(a2 + 128) != 4) {
    return 4LL;
  }
  uint64_t v4 = *(unsigned int **)(a2 + 24);
  if (!v4) {
    goto LABEL_35;
  }
  unsigned int v5 = *v4;
  uint64_t v6 = *(void *)(a2 + 8);
  if (!v6) {
    sub_1000D276C();
  }
  uint64_t result = *(void *)(result + 1200);
  if (!result || (result & 7) != 0) {
    goto LABEL_35;
  }
  uint64_t result = *(void *)(v2 + 1200);
  if (!result || (result & 7) != 0) {
    goto LABEL_35;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t, void))(*(void *)result + 400LL))(result, bswap32(v5));
  uint64_t v20 = result;
  if (!result) {
    goto LABEL_31;
  }
  uint64_t v8 = result;
  if ((result & 7) != 0)
  {
LABEL_35:
    __break(0x5516u);
    goto LABEL_36;
  }

  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 16LL))(result);
  if (!(_DWORD)result)
  {
LABEL_31:
    uint64_t v7 = 4LL;
LABEL_32:
    sub_100064D0C(&v20);
    return v7;
  }

  if ((v6 & 7) != 0) {
    goto LABEL_35;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v6 + 136LL))(v6, 4LL);
  if (result >= 0x10000)
  {
LABEL_36:
    __break(0x5507u);
    goto LABEL_37;
  }

  unsigned __int16 v9 = result;
  unint64_t v10 = result;
  uint64_t v11 = operator new[](result);
  std::string __p = 0LL;
  uint64_t v18 = 0LL;
  uint64_t v19 = 0LL;
  uint64_t result = (*(uint64_t (**)(uint64_t, void **))(*(void *)v8 + 48LL))(v8, &__p);
  uint64_t v12 = HIBYTE(v19);
  if (v19 < 0) {
    uint64_t v12 = v18;
  }
  BOOL v13 = __CFADD__(v12, 1LL);
  unint64_t v14 = v12 + 1;
  if (!v13)
  {
    if (v14 <= v10) {
      unsigned __int16 v15 = v14;
    }
    else {
      unsigned __int16 v15 = v9;
    }
    if (v19 >= 0) {
      p_p = &__p;
    }
    else {
      p_p = __p;
    }
    memcpy(v11, p_p, v15);
    sub_1000616D4(v2, (uint64_t)v11, v15);
    sub_1000AC324(a2, v6, 0, 4LL, 35, *(_DWORD *)(a2 + 68), v11, v15);
    operator delete[](v11);
    if (SHIBYTE(v19) < 0) {
      operator delete(__p);
    }
    uint64_t v7 = 0LL;
    goto LABEL_32;
  }

uint64_t sub_1000954AC(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_35;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_35;
  }
  if (*(_WORD *)(a2 + 128) != 4) {
    return 4LL;
  }
  uint64_t v4 = *(unsigned int **)(a2 + 24);
  if (!v4) {
    goto LABEL_35;
  }
  unsigned int v5 = *v4;
  uint64_t v6 = *(void *)(a2 + 8);
  if (!v6) {
    sub_1000D276C();
  }
  uint64_t result = *(void *)(result + 1200);
  if (!result || (result & 7) != 0) {
    goto LABEL_35;
  }
  uint64_t result = *(void *)(v2 + 1200);
  if (!result || (result & 7) != 0) {
    goto LABEL_35;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t, void))(*(void *)result + 400LL))(result, bswap32(v5));
  uint64_t v20 = result;
  if (!result) {
    goto LABEL_31;
  }
  uint64_t v8 = result;
  if ((result & 7) != 0)
  {
LABEL_35:
    __break(0x5516u);
    goto LABEL_36;
  }

  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 16LL))(result);
  if (!(_DWORD)result)
  {
LABEL_31:
    uint64_t v7 = 4LL;
LABEL_32:
    sub_100064D0C(&v20);
    return v7;
  }

  if ((v6 & 7) != 0) {
    goto LABEL_35;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v6 + 136LL))(v6, 4LL);
  if (result >= 0x10000)
  {
LABEL_36:
    __break(0x5507u);
    goto LABEL_37;
  }

  unsigned __int16 v9 = result;
  unint64_t v10 = result;
  uint64_t v11 = operator new[](result);
  std::string __p = 0LL;
  uint64_t v18 = 0LL;
  uint64_t v19 = 0LL;
  uint64_t result = (*(uint64_t (**)(uint64_t, void **))(*(void *)v8 + 40LL))(v8, &__p);
  uint64_t v12 = HIBYTE(v19);
  if (v19 < 0) {
    uint64_t v12 = v18;
  }
  BOOL v13 = __CFADD__(v12, 1LL);
  unint64_t v14 = v12 + 1;
  if (!v13)
  {
    if (v14 <= v10) {
      unsigned __int16 v15 = v14;
    }
    else {
      unsigned __int16 v15 = v9;
    }
    if (v19 >= 0) {
      p_p = &__p;
    }
    else {
      p_p = __p;
    }
    memcpy(v11, p_p, v15);
    sub_1000616D4(v2, (uint64_t)v11, v15);
    sub_1000AC324(a2, v6, 0, 4LL, 37, *(_DWORD *)(a2 + 68), v11, v15);
    operator delete[](v11);
    if (SHIBYTE(v19) < 0) {
      operator delete(__p);
    }
    uint64_t v7 = 0LL;
    goto LABEL_32;
  }

uint64_t sub_1000956A0(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_18;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_18;
  }
  int v3 = *(unsigned __int16 *)(a2 + 128);
  if (v3 != 4 && v3 != 1) {
    return 4LL;
  }
  uint64_t v4 = *(unsigned int **)(a2 + 24);
  if (v3 == 1)
  {
    if (v4)
    {
      if (*(_BYTE *)v4) {
        unsigned int v5 = 45;
      }
      else {
        unsigned int v5 = 0;
      }
      goto LABEL_14;
    }

uint64_t sub_100095770(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_16;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_16;
  }
  if (!a2) {
    goto LABEL_16;
  }
  if ((a2 & 7) != 0) {
    goto LABEL_16;
  }
  int v4 = *(unsigned __int16 *)(a2 + 128);
  uint64_t result = sub_100063A78(result);
  if (!result || (result & 7) != 0) {
    goto LABEL_16;
  }
  if (v4 != 4) {
    return 4LL;
  }
  int v6 = *(unsigned int **)(a2 + 24);
  if (v6)
  {
    int v7 = sub_100098500(v2, v5, bswap32(*v6));
    if (v7 == 22) {
      unsigned int v8 = 4;
    }
    else {
      unsigned int v8 = 2;
    }
    if (v7) {
      return v8;
    }
    else {
      return 0LL;
    }
  }

  else
  {
LABEL_16:
    __break(0x5516u);
  }

  return result;
}

uint64_t sub_10009580C(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_81;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_81;
  }
  if (!a2) {
    goto LABEL_81;
  }
  if ((a2 & 7) != 0) {
    goto LABEL_81;
  }
  uint64_t result = *(void *)(result + 1200);
  if (!result || (result & 7) != 0) {
    goto LABEL_81;
  }
  int v4 = *(unsigned __int16 *)(a2 + 128);
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(*(void *)result + 384LL))(result);
  uint64_t v18 = v5;
  if (v4 != 1)
  {
    uint64_t v9 = 4LL;
LABEL_57:
    sub_100064D0C(&v18);
    return v9;
  }

  uint64_t v6 = v5;
  uint64_t result = *(void *)(v2 + 1200);
  if (!result || (result & 7) != 0) {
    goto LABEL_81;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 416LL))(result);
  int v7 = *(_BYTE **)(a2 + 24);
  if (!v7)
  {
    __break(0x5518u);
LABEL_81:
    __break(0x5516u);
    goto LABEL_82;
  }

  unsigned int v8 = *v7;
  if (v8 <= 0xF)
  {
    switch(*v7)
    {
      case 1:
        uint64_t result = *(void *)(v2 + 1200);
        if (!result || (result & 7) != 0) {
          goto LABEL_81;
        }
        uint64_t v9 = 0LL;
        if (!(*(unsigned int (**)(uint64_t, uint64_t, void, void))(*(void *)result + 296LL))( result,  1LL,  *(void *)(a2 + 8),  0LL)) {
          goto LABEL_56;
        }
        sub_100064620(v2, 0, 1);
        uint64_t v10 = v2;
        unsigned int v11 = 0;
        goto LABEL_53;
      case 2:
        sub_100064620(v2, 7u, 1);
        uint64_t v10 = v2;
        unsigned int v11 = 7;
        goto LABEL_53;
      case 3:
        goto LABEL_42;
      case 4:
        goto LABEL_51;
      case 5:
        if (!(_DWORD)result) {
          goto LABEL_72;
        }
        if (*(_BYTE *)(v2 + 1412) == 5) {
          goto LABEL_55;
        }
        uint64_t v10 = v2;
        unsigned int v11 = 20;
        goto LABEL_31;
      case 6:
        if (!(_DWORD)result)
        {
LABEL_72:
          uint64_t v9 = 4LL;
          goto LABEL_56;
        }

        if (*(_BYTE *)(v2 + 1412) != 6)
        {
          uint64_t v10 = v2;
          unsigned int v11 = 21;
LABEL_31:
          char v12 = 1;
LABEL_54:
          sub_100064620(v10, v11, v12);
        }

        goto LABEL_55;
      case 7:
        sub_100064620(v2, 0x14u, 0);
        uint64_t v10 = v2;
        unsigned int v11 = 21;
        goto LABEL_53;
      case 8:
        if (!v6) {
          goto LABEL_42;
        }
        if ((v6 & 7) != 0) {
          goto LABEL_81;
        }
        if (!(*(unsigned int (**)(uint64_t))(*(void *)v6 + 16LL))(v6)
          || !(*(unsigned int (**)(uint64_t))(*(void *)v6 + 368LL))(v6))
        {
          goto LABEL_42;
        }

        uint64_t result = *(void *)(v2 + 1200);
        if (!result || (result & 7) != 0) {
          goto LABEL_81;
        }
        unsigned int v13 = (*(uint64_t (**)(uint64_t))(*(void *)result + 208LL))(result);
        uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 368LL))(v6);
        if (!(_DWORD)result) {
          goto LABEL_83;
        }
        if (v13 >= (int)result - 1)
        {
LABEL_42:
          sub_100064620(v2, 3u, 1);
          uint64_t v10 = v2;
          unsigned int v11 = 3;
        }

        else
        {
LABEL_41:
          sub_100064620(v2, 0xBu, 1);
          uint64_t v10 = v2;
          unsigned int v11 = 11;
        }

LABEL_82:
  __break(0x550Au);
LABEL_83:
  __break(0x5515u);
  return result;
}

  __break(0x5516u);
LABEL_83:
  __break(0x5513u);
  return result;
}

uint64_t sub_100095D0C(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_23;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_23;
  }
  if (*(_WORD *)(a2 + 128) != 10) {
    return 4LL;
  }
  uint64_t result = *(void *)(result + 1200);
  if (!result || (result & 7) != 0) {
    goto LABEL_23;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 464LL))(result);
  if ((result & 1) != 0) {
    return 4LL;
  }
  unint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    unsigned int v5 = *(_DWORD *)v4;
    if (v4 >= 0xFFFFFFFFFFFFFFFCLL) {
      goto LABEL_24;
    }
    unsigned int v6 = *(unsigned __int16 *)(v4 + 4);
    if (v4 >= 0xFFFFFFFFFFFFFFFALL) {
      goto LABEL_24;
    }
    unsigned int v7 = *(unsigned __int16 *)(v4 + 6);
    BOOL v8 = __CFADD__(v4, 8LL);
    uint64_t v9 = (unsigned __int16 *)(v4 + 8);
    if (v8) {
      goto LABEL_24;
    }
    unsigned int v10 = *v9;
    uint64_t result = *(void *)(v2 + 1200);
    if (result && (result & 7) == 0)
    {
      unint64_t v11 = bswap32(v5);
      uint64_t result = (*(uint64_t (**)(uint64_t, unint64_t))(*(void *)result + 400LL))(result, v11);
      uint64_t v14 = result;
      if (!result)
      {
LABEL_20:
        sub_100064D0C(&v14);
        return 4LL;
      }

      uint64_t v12 = result;
      if ((result & 7) == 0)
      {
        if (((*(uint64_t (**)(uint64_t))(*(void *)result + 16LL))(result) & 1) != 0)
        {
          uint64_t v13 = sub_100061A84(v2, a2, 1u, v11, v12, bswap32(v6) >> 16, bswap32(v7) >> 16, bswap32(v10) >> 16);
          sub_100064D0C(&v14);
          __break(0x550Au);
        }

        goto LABEL_20;
      }
    }
  }

uint64_t sub_100095E6C(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_12;
  }
  if (*(_WORD *)(a2 + 128)) {
    return 4LL;
  }
  uint64_t result = *(void *)(result + 1200);
  if (!result || (result & 7) != 0)
  {
LABEL_12:
    __break(0x5516u);
    goto LABEL_13;
  }

  uint64_t v3 = *(void *)(a2 + 8);
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 168LL))(result);
  if (result >= 0x100)
  {
LABEL_13:
    __break(0x5507u);
    return result;
  }

  char v4 = result;
  sub_1000AC324(a2, v3, 0, 4LL, 45, *(_DWORD *)(a2 + 68), &v4, 1u);
  return 0LL;
}

uint64_t sub_100095F14(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_22;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_22;
  }
  int v3 = *(unsigned __int16 *)(a2 + 128);
  char v4 = *(unsigned __int8 **)(a2 + 24);
  if (!v4) {
    goto LABEL_22;
  }
  uint64_t v5 = *v4;
  if (v3 != 2)
  {
    LOWORD(result) = 0;
    unsigned __int8 v6 = 0;
    goto LABEL_19;
  }

  if (v4 == (unsigned __int8 *)-1LL)
  {
LABEL_23:
    __break(0x5513u);
    goto LABEL_24;
  }

  unsigned __int8 v6 = v4[1];
  if (!v6)
  {
    LOWORD(result) = 0;
    goto LABEL_19;
  }

  if (*(_BYTE *)(result + 1395))
  {
    LOWORD(result) = *(_WORD *)(result + 1396);
LABEL_19:
    *(_WORD *)(v2 + 1396) = result;
    *(_BYTE *)(v2 + 1395) = v6;
    uint64_t result = *(void *)(v2 + 1200);
    if (result && (result & 7) == 0)
    {
      (*(void (**)(uint64_t, uint64_t))(*(void *)result + 160LL))(result, v5);
      return 0LL;
    }

    goto LABEL_22;
  }

  uint64_t result = *(void *)(result + 1200);
  if (!result || (result & 7) != 0)
  {
LABEL_22:
    __break(0x5516u);
    goto LABEL_23;
  }

  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 168LL))(result);
LABEL_24:
  __break(0x5507u);
  return result;
}

uint64_t sub_100096014(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_12;
  }
  if (*(_WORD *)(a2 + 128)) {
    return 4LL;
  }
  uint64_t result = *(void *)(result + 1200);
  if (!result || (result & 7) != 0)
  {
LABEL_12:
    __break(0x5516u);
    goto LABEL_13;
  }

  uint64_t v3 = *(void *)(a2 + 8);
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 136LL))(result);
  if (result >= 0x100)
  {
LABEL_13:
    __break(0x5507u);
    return result;
  }

  char v4 = result;
  sub_1000AC324(a2, v3, 0, 4LL, 48, *(_DWORD *)(a2 + 68), &v4, 1u);
  return 0LL;
}

uint64_t sub_1000960BC(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_22;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_22;
  }
  int v3 = *(unsigned __int16 *)(a2 + 128);
  char v4 = *(unsigned __int8 **)(a2 + 24);
  if (!v4) {
    goto LABEL_22;
  }
  uint64_t v5 = *v4;
  if (v3 != 2)
  {
    LOWORD(result) = 0;
    unsigned __int8 v6 = 0;
    goto LABEL_19;
  }

  if (v4 == (unsigned __int8 *)-1LL)
  {
LABEL_23:
    __break(0x5513u);
    goto LABEL_24;
  }

  unsigned __int8 v6 = v4[1];
  if (!v6)
  {
    LOWORD(result) = 0;
    goto LABEL_19;
  }

  if (*(_BYTE *)(result + 1398))
  {
    LOWORD(result) = *(_WORD *)(result + 1400);
LABEL_19:
    *(_WORD *)(v2 + 1400) = result;
    *(_BYTE *)(v2 + 1398) = v6;
    uint64_t result = *(void *)(v2 + 1200);
    if (result && (result & 7) == 0)
    {
      (*(void (**)(uint64_t, uint64_t))(*(void *)result + 128LL))(result, v5);
      return 0LL;
    }

    goto LABEL_22;
  }

  uint64_t result = *(void *)(result + 1200);
  if (!result || (result & 7) != 0)
  {
LABEL_22:
    __break(0x5516u);
    goto LABEL_23;
  }

  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 136LL))(result);
LABEL_24:
  __break(0x5507u);
  return result;
}

uint64_t sub_1000961BC(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_40;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_40;
  }
  unsigned int v3 = *(unsigned __int16 *)(a2 + 128);
  if (v3 < 3) {
    return 4LL;
  }
  unint64_t v4 = *(void *)(a2 + 24);
  if (!v4)
  {
LABEL_40:
    __break(0x5516u);
    goto LABEL_41;
  }

  if (v3 < 0xB || *(_WORD *)v4)
  {
    if (*(_DWORD *)(result + 1368) < *(_DWORD *)(result + 1372)) {
      return sub_1000986E0(result, v3 - 2);
    }
    return 4LL;
  }

  if (v4 >= 0xFFFFFFFFFFFFFFFELL)
  {
LABEL_42:
    __break(0x5513u);
    goto LABEL_43;
  }

  if (v4 >= 0xFFFFFFFFFFFFFFFDLL
    || (int v5 = *(unsigned __int8 *)(v4 + 2), v6 = *(unsigned __int16 *)(v4 + 3), v4 >= 0xFFFFFFFFFFFFFFFBLL)
    || (unsigned int v7 = *(unsigned __int16 *)(v4 + 5), v8 = __CFADD__(v4, 7LL), v9 = (unsigned int *)(v4 + 7), v8))
  {
LABEL_41:
    __break(0x5500u);
    goto LABEL_42;
  }

  unsigned int v10 = *v9;
  if (v5 == 3)
  {
    unsigned int v13 = *(unsigned __int8 *)(result + 1392);
    if (v13 > 1)
    {
LABEL_24:
      __break(0x550Au);
      goto LABEL_25;
    }

uint64_t sub_1000963B4(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_13;
  }
  if (*(_WORD *)(a2 + 128)) {
    return 4LL;
  }
  memset(v7, 170, 20);
  unsigned int v5 = -1431655766;
  unsigned int v6 = -1431655766;
  uint64_t v4 = *(void *)(a1 + 1192);
  if (!v4 || (v4 & 7) != 0) {
LABEL_13:
  }
    __break(0x5516u);
  uint64_t result = (*(uint64_t (**)(uint64_t, unsigned int *, unsigned int *))(*(void *)v4 + 104LL))(v4, &v6, &v5);
  if (HIWORD(v6) || (LOWORD(v7[0]) = bswap32(v6) >> 16, HIWORD(v5)))
  {
    __break(0x5507u);
  }

  else
  {
    WORD1(v7[0]) = bswap32(v5) >> 16;
    BYTE4(v7[0]) = 1;
    sub_1000AC324(a2, *(void *)(a2 + 8), 0, 4LL, 52, *(_DWORD *)(a2 + 68), v7, 5u);
    return 0LL;
  }

  return result;
}

uint64_t sub_1000964CC(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_11;
  }
  if (*(_WORD *)(a2 + 128)) {
    return 4LL;
  }
  uint64_t result = *(void *)(result + 1200);
  if (!result || (result & 7) != 0)
  {
LABEL_11:
    __break(0x5516u);
  }

  else
  {
    uint64_t v3 = *(void *)(a2 + 8);
    unsigned int v4 = bswap32((*(uint64_t (**)(uint64_t))(*(void *)result + 392LL))(result));
    sub_1000AC324(a2, v3, 0, 4LL, 54, *(_DWORD *)(a2 + 68), &v4, 4u);
    return 0LL;
  }

  return result;
}

uint64_t sub_10009656C(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_56;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_56;
  }
  if (*(_WORD *)(a2 + 128) != 4) {
    return 4LL;
  }
  unsigned int v4 = *(unsigned int **)(a2 + 24);
  if (!v4) {
    goto LABEL_56;
  }
  unsigned int v5 = *v4;
  uint64_t result = *(void *)(result + 1200);
  if (!result) {
    goto LABEL_56;
  }
  if ((result & 7) != 0) {
    goto LABEL_56;
  }
  unsigned int v6 = (*(uint64_t (**)(uint64_t))(*(void *)result + 392LL))(result);
  uint64_t result = *(void *)(v2 + 1200);
  if (!result || (result & 7) != 0) {
    goto LABEL_56;
  }
  uint64_t v7 = bswap32(v5);
  int v8 = (*(uint64_t (**)(uint64_t))(*(void *)result + 512LL))(result);
  uint64_t result = *(void *)(v2 + 1200);
  BOOL v10 = (result & 7) == 0 && result != 0;
  if (v8)
  {
    if (v10)
    {
      (*(void (**)(uint64_t, uint64_t, void))(*(void *)result + 664LL))(result, v7, 0LL);
      goto LABEL_20;
    }

    goto LABEL_56;
  }

  if (!v10) {
    goto LABEL_56;
  }
  if (!(*(unsigned int (**)(uint64_t))(*(void *)result + 592LL))(result))
  {
    uint64_t result = *(void *)(v2 + 1200);
    if (result)
    {
      if ((result & 7) == 0)
      {
        unsigned int v11 = (*(uint64_t (**)(uint64_t))(*(void *)result + 376LL))(result);
        uint64_t result = *(void *)(v2 + 1200);
        if (result)
        {
          if ((result & 7) == 0)
          {
            unsigned int v12 = (*(uint64_t (**)(uint64_t))(*(void *)result + 392LL))(result);
            uint64_t result = *(void *)(v2 + 1200);
            if (result)
            {
              if ((result & 7) == 0)
              {
                (*(void (**)(uint64_t, uint64_t))(*(void *)result + 672LL))(result, v7);
                uint64_t result = *(void *)(v2 + 1200);
                if (result)
                {
                  if ((result & 7) == 0)
                  {
                    if (((*(uint64_t (**)(uint64_t))(*(void *)result + 608LL))(result) & 1) != 0)
                    {
                      if (v12 < 3) {
                        goto LABEL_20;
                      }
                      goto LABEL_49;
                    }

                    uint64_t result = *(void *)(v2 + 1200);
                    if (result && (result & 7) == 0)
                    {
                      char v13 = (*(uint64_t (**)(uint64_t))(*(void *)result + 616LL))(result);
                      if (v12 < 3 || (v13 & 1) == 0) {
                        goto LABEL_20;
                      }
LABEL_49:
                      unsigned int v14 = v12 - 1;
                      if (v5 && v11 == v14 || v7 <= v11 && v11 < v14 || !v11 && (_DWORD)v7 == v14)
                      {
                        sub_1000647C0(v2);
                        return 0LL;
                      }

uint64_t sub_1000967CC(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_16;
  }
  if (*(_WORD *)(a2 + 128)) {
    return 4LL;
  }
  if (!*(_BYTE *)(result + 1392)) {
    return 4LL;
  }
  memset(v8, 170, 20);
  unsigned int v6 = -1431655766;
  unsigned int v7 = -1431655766;
  uint64_t v3 = *(void *)(result + 1192);
  if (!v3 || (v3 & 7) != 0) {
LABEL_16:
  }
    __break(0x5516u);
  uint64_t result = (*(uint64_t (**)(uint64_t, unsigned int *, unsigned int *))(*(void *)v3 + 104LL))(v3, &v7, &v6);
  if (HIWORD(v7) || (unsigned int v4 = bswap32(v7) >> 16, LOWORD(v8[0]) = v4, HIWORD(v6)))
  {
    __break(0x5507u);
LABEL_18:
    __break(0x550Au);
    goto LABEL_19;
  }

  unsigned int v5 = bswap32(v6) >> 16;
  WORD1(v8[0]) = v5;
  BYTE4(v8[0]) = 2;
  if ((unint64_t)v8 >= 0xFFFFFFFFFFFFFFFBLL)
  {
LABEL_19:
    __break(0x5513u);
    return result;
  }

  *(_WORD *)((char *)v8 + 5) = v4;
  *(_WORD *)((char *)v8 + 7) = v5;
  BYTE1(v8[1]) = 3;
  sub_1000AC324(a2, *(void *)(a2 + 8), 0, 4LL, 58, *(_DWORD *)(a2 + 68), v8, 0xAu);
  return 0LL;
}

uint64_t sub_100096918(uint64_t result, uint64_t a2)
{
  if (result && (result & 7) == 0) {
    return sub_10009A46C(result, a2, 73);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_100096930(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_65;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_65;
  }
  unsigned int v4 = *(unsigned __int16 *)(a2 + 128);
  if (v4 < 4 || (((_BYTE)v4 - 4) & 7) != 0) {
    return 4LL;
  }
  unsigned int v5 = *(unsigned __int16 **)(a2 + 24);
  if (!v5) {
    goto LABEL_65;
  }
  unsigned int v6 = *v5;
  if ((unint64_t)v5 >= 0xFFFFFFFFFFFFFFFELL)
  {
LABEL_67:
    __break(0x5500u);
    goto LABEL_68;
  }

  unsigned int v7 = v5[1];
  if ((unint64_t)v5 >= 0xFFFFFFFFFFFFFFFCLL)
  {
LABEL_66:
    __break(0x5513u);
    goto LABEL_67;
  }

  unsigned int v8 = __rev16(v6);
  unsigned int v9 = __rev16(v7);
  if (v8 > v9) {
    return 4LL;
  }
  if (*v5)
  {
    int v11 = 0;
  }

  else
  {
    uint64_t result = *(void *)(result + 1424);
    if (result)
    {
      if ((result & 7) != 0) {
        goto LABEL_65;
      }
      unsigned int v12 = (void *)sub_10009E280(result);
      operator delete(v12);
      *(void *)(v2 + 1424) = 0LL;
    }

    if (v4 == 4)
    {
      uint64_t v10 = 0LL;
      int v11 = 1;
      goto LABEL_23;
    }

    uint64_t result = (uint64_t)operator new(0x20uLL);
    if ((result & 0xF) != 0 || (result & 7) != 0) {
      goto LABEL_65;
    }
    uint64_t v13 = sub_10009EBE8(result, v9, *(_DWORD *)(a2 + 68));
    int v11 = 0;
    *(void *)(v2 + 1424) = v13;
  }

  uint64_t v10 = 4LL;
LABEL_23:
  uint64_t result = *(void *)(v2 + 1424);
  if (!result)
  {
    if (v11) {
      return 0LL;
    }
    else {
      return 2LL;
    }
  }

  if ((result & 7) != 0) {
    goto LABEL_65;
  }
  if ((((_DWORD)result + 2) & 1) != 0) {
    goto LABEL_65;
  }
  if (((result + 4) & 3) != 0) {
    goto LABEL_65;
  }
  if (*(_DWORD *)(a2 + 68) != *(_DWORD *)(result + 4))
  {
LABEL_54:
    if ((v11 & 1) == 0)
    {
      uint64_t v22 = (void *)sub_10009E280(result);
      operator delete(v22);
      *(void *)(v2 + 1424) = 0LL;
      return 2LL;
    }

    return 0LL;
  }

  if (v4 != 4)
  {
    unsigned int v14 = (unint64_t *)(v5 + 2);
    unsigned int v15 = v4 - 12;
    do
    {
      unsigned int v16 = *(void **)(v2 + 1424);
      if (!v16 || (*(void *)(v2 + 1424) & 7LL) != 0) {
        goto LABEL_65;
      }
      unint64_t v18 = v16 + 1;
      unint64_t v24 = bswap64(*v14);
      unint64_t v19 = v16[2];
      if (v19 >= v16[3])
      {
        uint64_t result = sub_10009EC88(v18, &v24);
      }

      else
      {
        uint64_t result = (uint64_t)sub_100024F94(v18, &v24);
        if (v19 >= 0xFFFFFFFFFFFFFFF8LL) {
          goto LABEL_66;
        }
        uint64_t result = v19 + 8;
      }

      v16[2] = result;
      if (HIWORD(v15)) {
        goto LABEL_68;
      }
      ++v14;
      v15 -= 8;
    }

    while (v15 != -8);
  }

  if (v6 == v7)
  {
    uint64_t result = sub_100063A78(v2);
    if (!result) {
      goto LABEL_65;
    }
    if ((result & 7) != 0) {
      goto LABEL_65;
    }
    uint64_t v20 = *(void *)(v2 + 1424);
    if (!v20 || (v20 & 7) != 0) {
      goto LABEL_65;
    }
    if (((*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 672LL))(result, v20 + 8) & 1) == 0)
    {
      uint64_t result = *(void *)(v2 + 1424);
      if (!result)
      {
LABEL_53:
        *(void *)(v2 + 1424) = 0LL;
        return v10;
      }

      if ((result & 7) == 0)
      {
        unsigned int v21 = (void *)sub_10009E280(result);
        operator delete(v21);
        goto LABEL_53;
      }

LABEL_68:
  __break(0x5507u);
  return result;
}

  if ((a2 & 0x1000) != 0)
  {
    sub_10008DDC8(a1, a5);
    if ((a2 & 0x400) == 0)
    {
LABEL_70:
      if ((a2 & 0x2000) == 0) {
        return;
      }
LABEL_74:
      sub_1000B80D4(a3);
      return;
    }
  }

  else if ((a2 & 0x400) == 0)
  {
    goto LABEL_70;
  }

  sub_1000B8024(a3);
  if ((a2 & 0x2000) != 0) {
    goto LABEL_74;
  }
}

uint64_t sub_100096BD8(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_38;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_38;
  }
  if (*(_WORD *)(a2 + 128) != 9) {
    return 4LL;
  }
  uint64_t v3 = *(void *)(result + 1424);
  if (!v3) {
    return 2LL;
  }
  unsigned int v4 = *(unsigned __int8 **)(a2 + 24);
  if (!v4) {
    goto LABEL_38;
  }
  if (v4 != (unsigned __int8 *)-1LL)
  {
    uint64_t v5 = *v4;
    unint64_t v6 = *(void *)(v4 + 1);
    uint64_t v7 = *(void *)(result + 1200);
    if (!v7 || (v7 & 7) != 0) {
      goto LABEL_38;
    }
    if ((v3 & 7) != 0) {
      goto LABEL_38;
    }
    uint64_t result = sub_100061274();
    if (!result || (result & 7) != 0) {
      goto LABEL_38;
    }
    uint64_t v8 = sub_10008E168(result, *(void *)(v2 + 8));
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))(*(void *)v7 + 104LL))( v7,  v5,  v3 + 8,  bswap64(v6),  v8))
    {
      uint64_t result = sub_1000438B8();
      if (!result || (result & 7) != 0) {
        goto LABEL_38;
      }
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 80LL))(result);
      if (!(_DWORD)result) {
        goto LABEL_30;
      }
      unsigned int v9 = *(_DWORD *)(v2 + 1216);
      if (v9 <= 3)
      {
        if (v9 == 2)
        {
          uint64_t result = *(void *)(v2 + 1200);
          if (result)
          {
            if ((result & 7) == 0)
            {
              (*(void (**)(uint64_t, uint64_t))(*(void *)result + 112LL))(result, 1LL);
              uint64_t result = *(void *)(v2 + 8);
              if (result)
              {
                if ((result & 7) == 0)
                {
                  uint64_t result = sub_1000579D4(result);
                  if (result)
                  {
                    if ((result & 7) == 0)
                    {
                      uint64_t result = sub_100091844(result);
LABEL_33:
                      uint64_t v10 = *(void *)(v2 + 1200);
                      if (v10)
                      {
                        if ((v10 & 7) == 0)
                        {
                          uint64_t result = sub_100061274();
                          if (result)
                          {
                            if ((result & 7) == 0)
                            {
                              uint64_t v11 = sub_10008E168(result, *(void *)(v2 + 8));
                              (*(void (**)(uint64_t, uint64_t, void, void, void, uint64_t, uint64_t, void))(*(void *)v10 + 304LL))( v10,  0xFFFFFFFFLL,  0LL,  0LL,  0LL,  v11,  0xFFFFFFFFLL,  0LL);
                              return 0LL;
                            }
                          }
                        }
                      }

                      goto LABEL_38;
                    }
                  }
                }
              }
            }
          }

          goto LABEL_38;
        }

uint64_t sub_100096DBC(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_25;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_25;
  }
  unsigned int v4 = *(unsigned __int16 *)(a2 + 128);
  uint64_t v5 = 4LL;
  if (v4 < 2) {
    return v5;
  }
  unint64_t v6 = *(unsigned __int8 **)(a2 + 24);
  if (!v6) {
    return v5;
  }
  unsigned int v7 = *v6;
  if (v7 >= 4)
  {
LABEL_22:
    __break(0x550Au);
    return 2LL;
  }

  if ((v4 != 11 || !*v6) && (v4 != 15 || *v6)) {
    return v5;
  }
  unsigned int v16 = 0;
  if (v6 != (unsigned __int8 *)-1LL)
  {
    uint64_t v8 = v6 + 1;
    uint64_t result = sub_1000642F8(result, v7, (unsigned int *)(v6 + 1), (int *)&v16);
    uint64_t v9 = result;
    uint64_t v10 = (unsigned int *)(v6 + 1);
    unint64_t v11 = v7 ? bswap32(*v10) : bswap64(*(void *)v10);
    if (!__CFADD__(v8, v16))
    {
      if (!result) {
        return 2LL;
      }
      unint64_t v12 = (unint64_t)&v8[v16];
      if (v12 >= 0xFFFFFFFFFFFFFFFELL) {
        goto LABEL_26;
      }
      unsigned int v13 = *(unsigned __int16 *)(v12 + 2);
      BOOL v14 = __CFADD__(v12, 4LL);
      unsigned int v15 = (unsigned __int16 *)(v12 + 4);
      if (v14) {
        goto LABEL_26;
      }
      uint64_t result = sub_100061A84( v2,  a2,  v7,  v11,  result,  bswap32(*(unsigned __int16 *)&v8[v16]) >> 16,  __rev16(v13),  bswap32(*v15) >> 16);
      if ((v9 & 7) == 0)
      {
        uint64_t v5 = result;
        (*(void (**)(uint64_t))(*(void *)v9 + 8LL))(v9);
        goto LABEL_22;
      }

uint64_t sub_100096F2C(uint64_t result, uint64_t a2)
{
  if (!result || (uint64_t v2 = result, (result & 7) != 0) || !a2 || (a2 & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_20;
  }

  unsigned int v4 = *(unsigned __int16 *)(a2 + 128);
  uint64_t result = 4LL;
  if (v4 >= 2)
  {
    uint64_t v5 = *(unsigned __int8 **)(a2 + 24);
    if (v5)
    {
      unsigned int v6 = *v5;
      if (v6 >= 4) {
        goto LABEL_21;
      }
      if (v4 == 11 && *v5 || v4 == 15 && !*v5)
      {
        unsigned int v11 = 0;
        if (v5 != (unsigned __int8 *)-1LL)
        {
          unsigned int v7 = v5 + 1;
          uint64_t result = sub_10006447C(v2, v6, (unsigned int *)(v5 + 1), (int *)&v11);
          if (!__CFADD__(v7, v11))
          {
            if (result == 0xFFFFFFFFLL) {
              return 2LL;
            }
            uint64_t v8 = &v7[v11];
            BOOL v9 = __CFADD__(v8, 2LL);
            uint64_t v10 = (unsigned int *)(v8 + 2);
            if (v9) {
              goto LABEL_22;
            }
            uint64_t result = sub_100062820(v2, a2, v6, result, __rev16(*(unsigned __int16 *)&v7[v11]), bswap32(*v10));
LABEL_21:
            __break(0x550Au);
LABEL_22:
            __break(0x5500u);
            return result;
          }
        }

uint64_t sub_10009703C(uint64_t result, uint64_t a2, int a3, unsigned int a4)
{
  if (result
    && (uint64_t v4 = result, (result & 7) == 0)
    && ((result = *(void *)(result + 8)) != 0 ? (BOOL v5 = (result & 7) == 0) : (BOOL v5 = 0),
        v5 && (result = sub_10005758C(result, 4u, 1), (uint64_t v9 = *(void *)(v4 + 8)) != 0) && (v9 & 7) == 0))
  {
    int v10 = sub_100062E0C();
    uint64_t result = sub_100057538(v9, 4u, v10);
    if (a4 < 4) {
      return sub_1000AB4C4(*(void *)(v4 + 8), a2, a3, a4);
    }
  }

  else
  {
    __break(0x5516u);
  }

  __break(0x550Au);
  return result;
}

void sub_1000970E4(_DWORD *a1, uint64_t a2)
{
  else {
    sub_10005EB3C(v3, a1[344]);
  }
}

uint64_t sub_100097130(uint64_t result, unsigned int a2, uint64_t a3)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_36;
  }
  unint64_t v15 = 0xAAAAAAAAAAAAAAAALL;
  if (!a3)
  {
    __break(0x5518u);
    goto LABEL_36;
  }

  if ((a3 & 7) != 0)
  {
LABEL_36:
    __break(0x5516u);
    goto LABEL_37;
  }

  int v5 = (*(uint64_t (**)(uint64_t))(*(void *)a3 + 264LL))(a3);
  std::string __p = 0LL;
  uint64_t v13 = 0LL;
  uint64_t v14 = 0LL;
  (*(void (**)(uint64_t, void **))(*(void *)a3 + 72LL))(a3, &__p);
  uint64_t v6 = HIBYTE(v14);
  if (v14 < 0) {
    uint64_t v6 = v13;
  }
  if (v6) {
    int v7 = v5 | 0x40;
  }
  else {
    int v7 = v5;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a3 + 288LL))(a3);
  int v8 = v7;
  if (!(_DWORD)result) {
    goto LABEL_28;
  }
  if (a2 > 0x7F)
  {
LABEL_37:
    __break(0x550Au);
    return result;
  }

  int v8 = v7 | 0x80;
  if (a2 == 66 || a2 == 12)
  {
    uint64_t result = sub_1000438B8();
    if (result && (result & 7) == 0)
    {
      goto LABEL_28;
    }

    goto LABEL_36;
  }

uint64_t sub_100097318(uint64_t result)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_7;
  }
  if ((*(char *)(result + 23) & 0x80000000) == 0)
  {
    *(_BYTE *)uint64_t result = 0;
    *(_BYTE *)(result + 23) = 0;
    return result;
  }

  if (*(void *)result)
  {
    **(_BYTE **)uint64_t result = 0;
    *(void *)(result + 8) = 0LL;
  }

  else
  {
LABEL_7:
    __break(0x5516u);
  }

  return result;
}

uint64_t sub_100097350(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0 || !a2 || (a2 & 7) != 0)
  {
    __break(0x5516u);
  }

  else if (*(_WORD *)(a2 + 128))
  {
    return 4LL;
  }

  else
  {
    sub_100097398(result, 1u);
    return 0LL;
  }

  return result;
}

uint64_t sub_100097398(uint64_t result, unsigned int a2)
{
  if (!result) {
    goto LABEL_27;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_27;
  }
  *(_BYTE *)(result + 1221) = 1;
  uint64_t result = sub_100063A78(result);
  if (!result || (result & 7) != 0) {
    goto LABEL_27;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 104LL))(result);
  if (a2 >= 4) {
    goto LABEL_28;
  }
  *(_DWORD *)(v2 + 1216) = a2;
  if (a2 != 1)
  {
    uint64_t result = sub_1000438B8();
    if (result && (result & 7) == 0)
    {
      int v5 = (*(uint64_t (**)(uint64_t))(*(void *)result + 80LL))(result);
      uint64_t result = sub_100063A78(v2);
      BOOL v7 = (result & 7) == 0 && result != 0;
      if (v5)
      {
        if (v7)
        {
          uint64_t v4 = *(void (**)(void))(*(void *)result + 208LL);
          goto LABEL_26;
        }
      }

      else if (v7)
      {
        uint64_t v4 = *(void (**)(void))(*(void *)result + 208LL);
        goto LABEL_26;
      }
    }

    goto LABEL_27;
  }

  uint64_t result = sub_100063A78(v2);
  if (!result
    || (result & 7) != 0
    || ((*(void (**)(uint64_t, uint64_t, void))(*(void *)result + 208LL))(result, 2097501LL, 0LL),
        (uint64_t result = sub_100063A78(v2)) == 0)
    || (result & 7) != 0)
  {
LABEL_27:
    __break(0x5516u);
    goto LABEL_28;
  }

  if (*(_DWORD *)(v2 + 1216) <= 3u)
  {
    uint64_t v4 = *(void (**)(void))(*(void *)result + 112LL);
LABEL_26:
    v4();
    *(void *)(v2 + 1404) = 0xFFFFFFFFLL;
    return 0LL;
  }

uint64_t sub_1000974F0(uint64_t result, uint64_t a2)
{
  if (result && (result & 7) == 0 && a2 && (a2 & 7) == 0)
  {
    if (*(_WORD *)(a2 + 128) != 1) {
      return 4LL;
    }
    uint64_t v2 = *(unsigned __int8 **)(a2 + 24);
    if (v2)
    {
      unsigned int v3 = *v2;
      if (v3 == 2 || v3 == 1)
      {
        sub_100097398(result, v3);
        return 0LL;
      }

      return 4LL;
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_100097554(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_10;
  }
  if (*(_WORD *)(a2 + 128) != 5) {
    return 4LL;
  }
  uint64_t v2 = *(unsigned __int8 **)(a2 + 24);
  if (v2)
  {
  }

  else
  {
LABEL_10:
    __break(0x5516u);
  }

  __break(0x5500u);
  return result;
}

uint64_t sub_1000975AC(uint64_t a1, unsigned int a2, int a3, unsigned int a4)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_97;
  }
  unsigned int v6 = a2 - 1;
  if (a2 - 1 > 0xA) {
    return 4LL;
  }
  LODWORD(v8) = a3;
  uint64_t v9 = sub_100063A78(a1);
  if (!v9 || (uint64_t v10 = v9, (v9 & 7) != 0))
  {
LABEL_97:
    __break(0x5516u);
LABEL_98:
    __break(0x550Au);
LABEL_99:
    sub_1000D2888();
  }

  switch(v6)
  {
    case 0u:
      if (a4 == -1) {
        a4 = 0;
      }
      if (a4) {
        char v11 = 5;
      }
      else {
        char v11 = 4;
      }
      if ((_DWORD)v8 == 255) {
        LOBYTE(v8) = v11;
      }
      uint64_t result = sub_10009A710(a1, v9, a4);
      goto LABEL_93;
    case 1u:
      if ((_DWORD)v8 != 255)
      {
        uint64_t result = sub_10009A8D4(a1, v9, (int)a4);
        goto LABEL_93;
      }

      unsigned int v19 = *(_DWORD *)(a1 + 1216);
      if (v19 >= 4) {
        goto LABEL_98;
      }
      if (v19 == 2)
      {
        switch(*(_DWORD *)(a1 + 1404))
        {
          case 0:
          case 4:
            uint64_t v20 = sub_10009A8D4;
            goto LABEL_74;
          case 1:
            uint64_t v20 = sub_10009A8D4;
            goto LABEL_90;
          case 2:
            LOBYTE(v8) = 8;
            uint64_t result = sub_10009A8D4(a1, v9, (int)a4);
            break;
          case 3:
          case 5:
            uint64_t v20 = sub_10009A8D4;
            goto LABEL_83;
          default:
            uint64_t v20 = sub_10009A8D4;
            goto LABEL_88;
        }

        goto LABEL_93;
      }

      uint64_t v20 = sub_10009A8D4;
      goto LABEL_79;
    case 2u:
      if ((_DWORD)v8 != 255)
      {
        uint64_t result = sub_10009AAFC(a1, v9, (int)a4);
        goto LABEL_93;
      }

      unsigned int v21 = *(_DWORD *)(a1 + 1216);
      if (v21 > 3) {
        goto LABEL_98;
      }
      if (v21 == 2)
      {
        switch(*(_DWORD *)(a1 + 1404))
        {
          case 0:
          case 4:
            uint64_t v20 = sub_10009AAFC;
LABEL_74:
            LOBYTE(v8) = 4;
            break;
          case 1:
            uint64_t v20 = sub_10009AAFC;
LABEL_90:
            LOBYTE(v8) = 1;
            break;
          case 2:
            uint64_t v20 = sub_10009AAFC;
            LOBYTE(v8) = 9;
            break;
          case 3:
          case 5:
            uint64_t v20 = sub_10009AAFC;
LABEL_83:
            LOBYTE(v8) = 6;
            break;
          default:
            uint64_t v20 = sub_10009AAFC;
            goto LABEL_88;
        }
      }

      else
      {
        uint64_t v20 = sub_10009AAFC;
LABEL_79:
        LOBYTE(v8) = 3;
      }

      goto LABEL_92;
    case 3u:
      if ((_DWORD)v8 != 255) {
        goto LABEL_76;
      }
      unsigned int v13 = *(_DWORD *)(a1 + 1216);
      if (v13 > 3) {
        goto LABEL_98;
      }
      if (v13 != 2)
      {
        LOBYTE(v8) = 0;
        goto LABEL_76;
      }

      if (a4 < 6)
      {
        unint64_t v8 = 0x60404070104uLL >> (8 * a4);
LABEL_76:
        uint64_t result = sub_10009ACC0(a1, v9, (int)a4);
        goto LABEL_93;
      }

      uint64_t v20 = sub_10009ACC0;
LABEL_88:
      LOBYTE(v8) = -1;
LABEL_92:
      uint64_t result = v20(a1, v9, (int)a4);
LABEL_93:
      if ((_DWORD)result) {
        return 2LL;
      }
      *(_BYTE *)(a1 + 1221) = 0;
      if ((a2 & 0xFFFFFFFD) != 5)
      {
        sub_10009B548(a1, v10, v8);
        return 0LL;
      }

      return result;
    case 4u:
      if ((_DWORD)v8 == 255)
      {
        int v22 = 1;
        int v23 = 1;
        (*(void (**)(uint64_t, int *, int *))(*(void *)v9 + 264LL))(v9, &v23, &v22);
        if ((v23 & 0x200004) != 0) {
          LOBYTE(v8) = 6;
        }
        else {
          LOBYTE(v8) = 4;
        }
      }

      uint64_t result = sub_10009AEE4(a1, v10, (int)a4);
      goto LABEL_93;
    case 5u:
      if ((_DWORD)v8 == 255) {
        LOBYTE(v8) = 3;
      }
      uint64_t result = sub_10009AF58(a1, v9, (int)a4);
      goto LABEL_93;
    case 6u:
      if ((_DWORD)v8 == 255) {
        LOBYTE(v8) = 5;
      }
      uint64_t result = sub_10009B01C(a1, v9, (int)a4);
      goto LABEL_93;
    case 7u:
      if ((_DWORD)v8 == 255) {
        LOBYTE(v8) = 6;
      }
      unsigned int v14 = *(_DWORD *)(a1 + 1216);
      if (v14 > 3) {
        goto LABEL_98;
      }
      if (v14 != 2) {
        goto LABEL_45;
      }
      *(_DWORD *)(a1 + 1404) = 3;
      uint64_t v15 = sub_1000438B8();
      if (!v15 || (v15 & 7) != 0) {
        goto LABEL_97;
      }
LABEL_45:
      uint64_t result = sub_10009B164(a1, v10, (int)a4);
      goto LABEL_93;
    case 8u:
      uint64_t v16 = sub_1000438B8();
      if (!v16 || (v16 & 7) != 0) {
        goto LABEL_97;
      }
      if ((_DWORD)v8 == 255) {
        LOBYTE(v8) = 5;
      }
      uint64_t result = sub_10009B298(a1, v10, (int)a4);
      goto LABEL_93;
    case 9u:
      if ((_DWORD)v8 == 255) {
        LOBYTE(v8) = 5;
      }
      uint64_t result = sub_10009B364(a1, v9, (int)a4);
      goto LABEL_93;
    case 0xAu:
      if ((_DWORD)v8 == 255) {
        LOBYTE(v8) = 6;
      }
      unsigned int v17 = *(_DWORD *)(a1 + 1216);
      if (v17 > 3) {
        goto LABEL_98;
      }
      if (v17 != 2) {
        goto LABEL_65;
      }
      *(_DWORD *)(a1 + 1404) = 5;
      uint64_t v18 = sub_1000438B8();
      if (!v18 || (v18 & 7) != 0) {
        goto LABEL_97;
      }
LABEL_65:
      uint64_t result = sub_10009B474(a1, v10, (int)a4);
      goto LABEL_93;
    default:
      goto LABEL_99;
  }

uint64_t sub_100097A08(uint64_t result, uint64_t a2)
{
  if (result && (result & 7) == 0 && a2 && (a2 & 7) == 0)
  {
    if (*(_WORD *)(a2 + 128) != 1) {
      return 4LL;
    }
    unsigned int v3 = *(unsigned __int8 **)(a2 + 24);
    if (v3)
    {
      int v4 = *v3;
      unsigned int v8 = 0;
      uint64_t v5 = sub_100097AB0(result, v4, &v8);
      if (!(_DWORD)v5)
      {
        uint64_t v6 = *(void *)(a2 + 8);
        unsigned int v7 = bswap32(v8);
        sub_1000AC324(a2, v6, 0, 4LL, 25, *(_DWORD *)(a2 + 68), &v7, 4u);
      }

      return v5;
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_100097AB0(uint64_t result, int a2, _DWORD *a3)
{
  if (result)
  {
    uint64_t v3 = result;
    if ((result & 7) == 0)
    {
      uint64_t result = sub_100063A78(result);
      if (result)
      {
        uint64_t v6 = result;
        if ((result & 7) == 0)
        {
          switch(a2)
          {
            case 0:
              LODWORD(result) = 12;
              goto LABEL_74;
            case 1:
              if (*(_BYTE *)(v3 + 1221)) {
                (*(void (**)(uint64_t))(*(void *)result + 320LL))(result);
              }
              uint64_t result = sub_10009B64C(v3, v6);
              if (!a3) {
                break;
              }
              goto LABEL_73;
            case 2:
              if (*(_BYTE *)(v3 + 1221)) {
                (*(void (**)(uint64_t))(*(void *)result + 272LL))(result);
              }
              uint64_t result = sub_10009B798(v3, v6);
              if (!a3) {
                break;
              }
              goto LABEL_73;
            case 3:
              if (*(_BYTE *)(v3 + 1221)) {
                (*(void (**)(uint64_t))(*(void *)result + 280LL))(result);
              }
              uint64_t result = sub_10009B8D4(v3, v6);
              if (!a3) {
                break;
              }
              goto LABEL_73;
            case 4:
              if (*(_BYTE *)(v3 + 1221)) {
                (*(void (**)(uint64_t))(*(void *)result + 288LL))(result);
              }
              uint64_t result = sub_10009BA0C(v3, v6);
              if (!a3) {
                break;
              }
              goto LABEL_73;
            case 5:
              if (*(_BYTE *)(v3 + 1221)) {
                (*(void (**)(uint64_t))(*(void *)result + 312LL))(result);
              }
              uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 352LL))(v6);
              goto LABEL_56;
            case 6:
              if (*(_BYTE *)(v3 + 1221)) {
                (*(void (**)(uint64_t))(*(void *)result + 296LL))(result);
              }
              uint64_t result = sub_10009BAD8(v3, v6);
              if (!a3) {
                break;
              }
              goto LABEL_73;
            case 7:
              if (*(_BYTE *)(v3 + 1221)) {
                (*(void (**)(uint64_t))(*(void *)result + 320LL))(result);
              }
              uint64_t result = sub_10009BBAC(v3, v6);
              if (!a3) {
                break;
              }
              goto LABEL_73;
            case 8:
              if (*(_BYTE *)(v3 + 1221)) {
                (*(void (**)(uint64_t))(*(void *)result + 344LL))(result);
              }
              uint64_t result = sub_10009BC80(v3, v6);
              if (!a3) {
                break;
              }
              goto LABEL_73;
            case 9:
              uint64_t result = sub_1000438B8();
              if (!result || (result & 7) != 0) {
                break;
              }
              uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 56LL))(result);
              if (!(_DWORD)result) {
                return 4LL;
              }
              if (*(_BYTE *)(v3 + 1221)) {
                (*(void (**)(uint64_t))(*(void *)v6 + 320LL))(v6);
              }
              uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 576LL))(v6);
LABEL_56:
              if (!a3) {
                break;
              }
              goto LABEL_73;
            case 10:
              uint64_t result = sub_1000438B8();
              if (!result || (result & 7) != 0) {
                break;
              }
              uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 64LL))(result);
              if (!(_DWORD)result) {
                return 4LL;
              }
              if (*(_BYTE *)(v3 + 1221)) {
                (*(void (**)(uint64_t))(*(void *)v6 + 320LL))(v6);
              }
              uint64_t result = sub_10009BD2C(v3, v6);
              if (!a3) {
                break;
              }
              goto LABEL_73;
            case 11:
              uint64_t result = sub_1000438B8();
              if (!result || (result & 7) != 0) {
                break;
              }
              uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 72LL))(result);
              if (!(_DWORD)result) {
                return 4LL;
              }
              if (*(_BYTE *)(v3 + 1221)) {
                (*(void (**)(uint64_t))(*(void *)v6 + 344LL))(v6);
              }
              uint64_t result = sub_10009BD6C(v3, v6);
              if (a3)
              {
LABEL_73:
LABEL_74:
                uint64_t v7 = 0LL;
                *a3 = result;
                return v7;
              }

              break;
            default:
              return 1LL;
          }
        }
      }
    }
  }

  __break(0x5516u);
LABEL_78:
  __break(0x550Au);
  return result;
}

void sub_100097DF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a1 || (a1 & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_29;
  }
  if (*(_WORD *)(a2 + 128) != 9) {
    return;
  }
  int v4 = *(unsigned __int8 **)(a2 + 24);
  if (!v4)
  {
LABEL_29:
    __break(0x5516u);
    goto LABEL_30;
  }

  unsigned int v5 = *v4;
  unsigned int v6 = *(_DWORD *)(v4 + 1);
  BOOL v7 = __CFADD__(v4, 5LL);
  unsigned int v8 = (unsigned int *)(v4 + 5);
  if (v7) {
    goto LABEL_30;
  }
  unsigned int v10 = *v8;
  unsigned int v18 = 0;
  unsigned int v11 = bswap32(v6);
  unsigned int v12 = bswap32(v10);
  int v13 = v18 - v11;
  if (v18 <= v11) {
    int v13 = -1;
  }
  unsigned int v14 = v10 == -1 ? v13 : v12;
  if (__CFADD__(v11, v14))
  {
LABEL_30:
    __break(0x5500u);
    return;
  }

  if (v18 > v11 && v14 && v11 + v14 <= v18 && v5 <= 0xB)
  {
    if (v5 != 9)
    {
LABEL_26:
      sub_100097F34(a1, a3, v11, v5, v14, 0, 0, 0LL);
      if (v17 > 0x1F) {
        __break(0x550Au);
      }
      return;
    }

    uint64_t v16 = sub_1000438B8();
    if (v16 && (v16 & 7) == 0)
    {
      goto LABEL_26;
    }

    goto LABEL_29;
  }

void sub_100097F34( uint64_t a1, uint64_t a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6, int a7, uint64_t a8)
{
  LODWORD(v46) = a7;
  if (!a1) {
    goto LABEL_31;
  }
  uint64_t v17 = a1;
  if ((a1 & 7) != 0) {
    goto LABEL_31;
  }
  uint64_t v15 = a2;
  if (!a2 || (a2 & 7) != 0 || (((_BYTE)a2 + 24) & 7) != 0) {
    goto LABEL_31;
  }
  uint64_t v8 = a8;
  unsigned int v14 = a6;
  int v16 = *(unsigned __int16 *)(a2 + 24);
  unsigned int v43 = (sub_1000774F8(*(void *)(a1 + 8)) & 0x80000) == 0;
  uint64_t v12 = *(void *)(v15 + 104);
  if (v12)
  {
    if (v8) {
      goto LABEL_24;
    }
  }

  else
  {
    unsigned int v18 = operator new(0x20uLL);
    uint64_t v12 = (uint64_t)v18;
    v18[4] = 12;
    *((void *)v18 + 1) = 0LL;
    *((void *)v18 + 2) = 0LL;
    *((void *)v18 + 3) = 0LL;
    *(_DWORD *)unsigned int v18 = v16;
    v18[4] = a4;
    if ((((_BYTE)v18 + 8) & 7) != 0) {
      goto LABEL_31;
    }
    *((_DWORD *)v18 + 2) = a3;
    if ((((_BYTE)v18 + 12) & 3) != 0) {
      goto LABEL_31;
    }
    *((_DWORD *)v18 + 3) = a5;
    if ((((_BYTE)v18 + 16) & 7) != 0) {
      goto LABEL_31;
    }
    *((_DWORD *)v18 + 4) = v14;
    if ((((_BYTE)v18 + 20) & 3) != 0) {
      goto LABEL_31;
    }
    *((_DWORD *)v18 + 5) = (_DWORD)v46;
    if ((((_BYTE)v18 + 24) & 7) != 0) {
      goto LABEL_31;
    }
    *((void *)v18 + 3) = v8;
    *(void *)(v15 + 104) = v18;
    if (v8) {
      goto LABEL_24;
    }
  }

  unsigned int v19 = operator new(0x18uLL);
  uint64_t v8 = (uint64_t)v19;
  void *v19 = 0LL;
  v19[1] = 0LL;
  v19[2] = 0LL;
  if ((v12 & 7) != 0 || ((v12 + 24) & 7) != 0) {
    goto LABEL_31;
  }
  *(void *)(v12 + 24) = v19;
LABEL_24:
  uint64_t v20 = *(void *)(v17 + 8);
  if (!v20 || (v20 & 7) != 0 || (v21 = sub_10001864C(v20)) == 0 || (uint64_t v10 = v21, (v21 & 7) != 0))
  {
    while (1)
    {
LABEL_31:
      __break(0x5516u);
LABEL_32:
      if (a4 >= 0xC) {
        goto LABEL_106;
      }
      if (!a5)
      {
        uint64_t v10 = 0LL;
        a5 = 0;
        goto LABEL_93;
      }

      if (a5 >= 0x64) {
        uint64_t v24 = 100LL;
      }
      else {
        uint64_t v24 = a5;
      }
      if ((_DWORD)v46)
      {
        if (__CFADD__(v14, (_DWORD)v46)) {
          goto LABEL_107;
        }
      }

      BOOL v46 = off_100106570[(char)a4];
      if ((v8 & 7) == 0)
      {
        uint64_t v25 = v24;
        sub_1000340CC(v8);
        uint64_t v26 = v13;
        uint64_t v13 = a3;
        ((void (*)(uint64_t, uint64_t, void, uint64_t, uint64_t))v46)(v17, v26, a3, v25, v8);
        int v27 = v25;
        if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(v8 + 8) - *(void *)v8) >> 3) != v25)
        {
          uint64_t v10 = 2LL;
          LODWORD(v46) = v25;
          unsigned int v14 = a3;
          goto LABEL_93;
        }

        unsigned int v14 = a3;
        LODWORD(v46) = v27;
LABEL_43:
        unint64_t v28 = a3 - v14;
        if (a3 < v14) {
          goto LABEL_108;
        }
        if (v28 >= v46)
        {
          uint64_t v10 = 0LL;
LABEL_93:
          operator delete[](v9);
          if ((_DWORD)v10 || !a5)
          {
            *(void *)(v15 + 104) = 0LL;
            if ((v12 & 7) == 0)
            {
              uint64_t v42 = (void *)sub_10009EC28(v12);
              operator delete(v42);
              return;
            }
          }

          else if ((v12 & 7) == 0)
          {
            *(_DWORD *)uint64_t v12 = v16;
            if ((((_BYTE)v12 + 4) & 3) == 0)
            {
              *(_BYTE *)(v12 + 4) = a4;
              if ((((_BYTE)v12 + 8) & 7) == 0)
              {
                *(_DWORD *)(v12 + 8) = a3;
                if ((((_BYTE)v12 + 12) & 3) == 0)
                {
                  *(_DWORD *)(v12 + 12) = a5;
                  if ((((_BYTE)v12 + 16) & 7) == 0)
                  {
                    *(_DWORD *)(v12 + 16) = v14;
                    if ((((_BYTE)v12 + 20) & 3) == 0)
                    {
                      *(_DWORD *)(v12 + 20) = (_DWORD)v46;
                      if (((v12 + 24) & 7) == 0)
                      {
                        *(void *)(v12 + 24) = v8;
                        return;
                      }
                    }
                  }
                }
              }
            }
          }
        }

        else
        {
          memset(&v48, 170, sizeof(v48));
          if ((v8 & 7) == 0)
          {
            uint64_t v29 = (const std::string *)sub_10009DDE4(v8, v28);
            std::string::basic_string(&v48, v29);
            if (!a4) {
              goto LABEL_61;
            }
            std::string::size_type size = v48.__r_.__value_.__s.__size_;
            signed __int8 v31 = v48.__r_.__value_.__s.__size_;
            std::string::size_type v32 = v48.__r_.__value_.__l.__size_;
            if ((v48.__r_.__value_.__s.__size_ & 0x80u) == 0) {
              std::string::size_type v33 = v48.__r_.__value_.__s.__size_;
            }
            else {
              std::string::size_type v33 = v48.__r_.__value_.__l.__size_;
            }
            if (v33)
            {
LABEL_58:
              if (v31 < 0) {
                std::string::size_type size = v32;
              }
              if (!size)
              {
                uint64_t v10 = 2LL;
                goto LABEL_91;
              }

uint64_t sub_100098500(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result
    && (uint64_t v3 = result, (result & 7) == 0)
    && ((result = *(void *)(result + 1200)) != 0 ? (BOOL v4 = (result & 7) == 0) : (BOOL v4 = 0), v4))
  {
    (*(void (**)(uint64_t))(*(void *)result + 312LL))(result);
    return sub_100098558(v3, a3);
  }

  else
  {
    __break(0x5516u);
  }

  return result;
}

uint64_t sub_100098558(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_32;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_32;
  }
  uint64_t v3 = *(void *)(result + 1200);
  if (!v3 || (*(void *)(result + 1200) & 7LL) != 0) {
    goto LABEL_32;
  }
  BOOL v6 = *(_DWORD *)(result + 1404) == 4;
  uint64_t v7 = sub_100063A78(result);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, BOOL, uint64_t, uint64_t, uint64_t))(*(void *)v3 + 88LL))( v3,  a2,  v6,  3LL,  3LL,  v7);
  if (!(_DWORD)result)
  {
    uint64_t result = sub_1000438B8();
    if (!result || (result & 7) != 0) {
      goto LABEL_32;
    }
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 80LL))(result);
    if (!(_DWORD)result) {
      goto LABEL_21;
    }
    unsigned int v8 = *(_DWORD *)(v2 + 1216);
    if (v8 > 3)
    {
LABEL_33:
      __break(0x550Au);
      return result;
    }

    if (v8 == 2)
    {
      uint64_t result = *(void *)(v2 + 1200);
      if (!result) {
        goto LABEL_32;
      }
      if ((result & 7) != 0) {
        goto LABEL_32;
      }
      (*(void (**)(uint64_t, uint64_t))(*(void *)result + 112LL))(result, 1LL);
      uint64_t result = *(void *)(v2 + 8);
      if (!result) {
        goto LABEL_32;
      }
      if ((result & 7) != 0) {
        goto LABEL_32;
      }
      uint64_t result = sub_1000579D4(result);
      if (!result || (result & 7) != 0) {
        goto LABEL_32;
      }
      uint64_t result = sub_100091844(result);
    }

    else
    {
LABEL_21:
      uint64_t result = *(void *)(v2 + 1200);
      if (!result || (result & 7) != 0) {
        goto LABEL_32;
      }
      uint64_t result = (*(uint64_t (**)(uint64_t, void))(*(void *)result + 112LL))(result, 0LL);
    }

    uint64_t v9 = *(void *)(v2 + 1200);
    if (v9)
    {
      if ((v9 & 7) == 0)
      {
        uint64_t result = sub_100061274();
        if (result)
        {
          if ((result & 7) == 0)
          {
            uint64_t v10 = sub_10008E168(result, *(void *)(v2 + 8));
            if ((*(unsigned int (**)(uint64_t, uint64_t, void, void, void, uint64_t, uint64_t, void))(*(void *)v9 + 304LL))( v9,  0xFFFFFFFFLL,  0LL,  0LL,  0LL,  v10,  a2,  0LL))
            {
              return 0LL;
            }

            else
            {
              return 2LL;
            }
          }
        }
      }
    }

uint64_t sub_1000986E0(uint64_t result, int a2)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_12;
  }

  unsigned int v2 = *(_DWORD *)(result + 1372);
  unsigned int v3 = *(_DWORD *)(result + 1368);
  if (v2 < v3)
  {
LABEL_12:
    __break(0x5515u);
    goto LABEL_13;
  }

  if (a2 - 1 >= v2 - v3) {
    return 4LL;
  }
  BOOL v4 = __CFADD__(v3, a2);
  unsigned int v5 = v3 + a2;
  if (!v4)
  {
    *(_DWORD *)(result + 1368) = v5;
    if (v5 < v2) {
      return 0LL;
    }
    uint64_t v6 = 0LL;
    *(void *)(result + 1368) = 0LL;
    return v6;
  }

uint64_t sub_10009874C(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_11;
  }
  if (*(_WORD *)(a2 + 128) != 6) {
    return 4LL;
  }
  unsigned int v2 = *(unsigned __int8 **)(a2 + 24);
  if (v2)
  {
    if (v2 != (unsigned __int8 *)-1LL)
    {
      goto LABEL_13;
    }
  }

  else
  {
LABEL_11:
    __break(0x5516u);
  }

  __break(0x5500u);
LABEL_13:
  __break(0x5513u);
  return result;
}

tm *sub_1000987B0(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0 || !a2 || (a2 & 7) != 0) {
LABEL_49:
  }
    __break(0x5516u);
  unsigned int v3 = *(_BYTE **)(a2 + 24);
  int v4 = *(unsigned __int16 *)(a2 + 128);
  *(void *)&__int128 v16 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v16 + 1) = 0xAAAAAAAAAAAAAAAALL;
  if (v3)
  {
    uint64_t v5 = 4LL;
    if (v4 == 1 && !dword_10011B6C4 && *v3 <= 5u)
    {
      uint64_t v6 = sub_100063A78(a1);
      LOBYTE(v16) = *v3;
      switch(*v3)
      {
        case 0:
          if (!v6 || (v6 & 7) != 0) {
            goto LABEL_49;
          }
          *(void *)((char *)&v16 + 1) = bswap64((*(uint64_t (**)(uint64_t))(*(void *)v6 + 88LL))(v6));
          unsigned int v7 = 9;
          goto LABEL_35;
        case 1:
          time_t v15 = 0xAAAAAAAAAAAAAAAALL;
          v14.tm_zone = (char *)0xAAAAAAAAAAAAAAAALL;
          *(void *)&__int128 v8 = 0xAAAAAAAAAAAAAAAALL;
          *((void *)&v8 + 1) = 0xAAAAAAAAAAAAAAAALL;
          *(_OWORD *)&v14.tm_mon = v8;
          *(_OWORD *)&v14.tm_isdst = v8;
          *(_OWORD *)&v14.char tm_sec = v8;
          if (!v6 || (v6 & 7) != 0) {
            goto LABEL_49;
          }
          uint64_t result = (tm *)(*(uint64_t (**)(uint64_t, time_t *))(*(void *)v6 + 96LL))(v6, &v15);
          if ((result & 1) != 0)
          {
            uint64_t result = localtime_r(&v15, &v14);
            unsigned int v10 = v14.tm_mon + 1;
            if (__OFADD__(v14.tm_mon, 1) || (++v14.tm_mon, unsigned int v11 = v14.tm_year + 1900, __OFADD__(v14.tm_year, 1900)))
            {
              __break(0x5500u);
              goto LABEL_51;
            }

            v14.tm_year += 1900;
            char tm_sec = v14.tm_sec;
            if (v14.tm_sec > 0xFFu) {
              goto LABEL_51;
            }
          }

          else
          {
            unsigned int v11 = 0;
            unsigned int v10 = 0;
            char tm_sec = 0;
            memset(&v14, 0, sizeof(v14));
          }

          BYTE1(v16) = tm_sec;
          if (v14.tm_min > 0xFFu) {
            goto LABEL_51;
          }
          BYTE2(v16) = v14.tm_min;
          if (v14.tm_hour > 0xFFu) {
            goto LABEL_51;
          }
          BYTE3(v16) = v14.tm_hour;
          if (v14.tm_mday > 0xFFu) {
            goto LABEL_51;
          }
          BYTE4(v16) = v14.tm_mday;
          if (v10 <= 0xFF)
          {
            if ((unint64_t)&v16 > 0xFFFFFFFFFFFFFFFALL)
            {
LABEL_52:
              __break(0x5513u);
              return result;
            }

            BYTE5(v16) = v10;
            if (!HIWORD(v11))
            {
              WORD3(v16) = bswap32(v11) >> 16;
              unsigned int v7 = 8;
LABEL_35:
              sub_1000AC324(a2, *(void *)(a2 + 8), 0, 4LL, 61, *(_DWORD *)(a2 + 68), &v16, v7);
              return 0LL;
            }
          }

uint64_t sub_100098AEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a1 || (a1 & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_30;
  }
  unint64_t v5 = *(void *)(a2 + 24);
  int v6 = *(unsigned __int16 *)(a2 + 128);
  if (!v5) {
    sub_1000CEAEC( 0,  4,  "%s:%d No data!\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoRemoteUI.cpp",  4462);
  }
  unsigned int v7 = v6 - 9;
  uint64_t v8 = 4LL;
  if (v7 <= 3 && v5 && !dword_10011B6C4)
  {
    unint64_t v9 = *(void *)v5;
    unint64_t v10 = 0LL;
    unint64_t v11 = 0LL;
    unint64_t v12 = 0LL;
    switch(v7)
    {
      case 0u:
        goto LABEL_17;
      case 1u:
        goto LABEL_15;
      case 2u:
        goto LABEL_13;
      case 3u:
        if (v5 > 0xFFFFFFFFFFFFFFF4LL) {
          goto LABEL_31;
        }
        unint64_t v10 = (unint64_t)*(unsigned __int8 *)(v5 + 11) << 24;
LABEL_13:
        if (v5 > 0xFFFFFFFFFFFFFFF5LL) {
          goto LABEL_31;
        }
        unint64_t v11 = v10 | ((unint64_t)*(unsigned __int8 *)(v5 + 10) << 16);
LABEL_15:
        if (v5 > 0xFFFFFFFFFFFFFFF6LL) {
          goto LABEL_31;
        }
        unint64_t v12 = v11 | ((unint64_t)*(unsigned __int8 *)(v5 + 9) << 8);
LABEL_17:
        if (v5 > 0xFFFFFFFFFFFFFFF7LL) {
          goto LABEL_31;
        }
        if ((v12 & 0xE0000000) != 0) {
          return v8;
        }
        uint64_t v13 = v12 | *(unsigned __int8 *)(v5 + 8);
        if (!v13) {
          return v8;
        }
        uint64_t v14 = bswap64(v9);
        uint64_t v15 = sub_100061FA8(a1, 0, v14);
        uint64_t v19 = v15;
        if (!v15) {
          goto LABEL_27;
        }
        uint64_t v16 = v15;
        if ((v15 & 7) != 0) {
          break;
        }
        if (!(*(unsigned int (**)(uint64_t))(*(void *)v15 + 16LL))(v15))
        {
LABEL_27:
          sub_1000CEAEC( 0,  4,  "%s:%d Invalid TrackAccessor uid=%08x%08x\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoRemoteUI.cpp",  4540,  HIDWORD(v14),  v14);
          uint64_t v8 = 2LL;
          goto LABEL_28;
        }

        if (a3 && (a3 & 7) == 0 && (((_BYTE)a3 + 24) & 7) == 0)
        {
          sub_100098CCC(a1, v16, 0x3Fu, 0, v13, *(unsigned __int16 *)(a3 + 24), a3);
          uint64_t v8 = v17;
LABEL_28:
          sub_100064D0C(&v19);
          return v8;
        }

        break;
      default:
        goto LABEL_32;
    }

void sub_100098CCC(uint64_t a1, uint64_t a2, unsigned int a3, unsigned int a4, uint64_t a5, int a6, uint64_t a7)
{
  uint64_t v95 = a1;
  int v96 = a5;
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_268;
  }
  if (!a2) {
    goto LABEL_264;
  }
  if (a3 > 0x7F)
  {
    __break(0x550Au);
LABEL_273:
    __break(0x5505u);
    goto LABEL_274;
  }

  if (a3 > 0x4F || !a5)
  {
LABEL_264:
    __break(0x5518u);
LABEL_265:
    sub_1000D27A0(a1);
  }

  a1 = a5 & 0xE0000000;
  if ((a5 & 0xE0000000) != 0) {
    goto LABEL_265;
  }
  uint64_t v8 = sub_100061274();
  if (!v8) {
    goto LABEL_268;
  }
  if ((v8 & 7) != 0) {
    goto LABEL_268;
  }
  uint64_t v91 = sub_10008E168(v8, *(void *)(v95 + 8));
  if (!v91 || (v91 & 7) != 0) {
    goto LABEL_268;
  }
  unsigned int v9 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v91 + 136LL))(v91, 4LL);
  if (v9 >= 0x10000) {
    goto LABEL_267;
  }
  size_t v99 = (unsigned __int16)v9;
  unint64_t v10 = operator new[]((unsigned __int16)v9);
  if ((a2 & 7) != 0) {
    goto LABEL_268;
  }
  unint64_t v11 = (unint64_t)v10;
  unint64_t v12 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 24LL))(a2);
  int v13 = 0;
  unsigned int v14 = bswap32(a4);
  unint64_t v83 = v12;
  unint64_t v86 = bswap64(v12);
  size_t v92 = ~v11;
  unint64_t v93 = v11 + v99;
  BOOL v16 = (a7 & 7) == 0 && a7 != 0;
  unsigned int v88 = v14;
  BOOL v89 = v16;
  while (1)
  {
    memset(&v103, 0, sizeof(v103));
    v102.tm_zone = (char *)0xAAAAAAAAAAAAAAAALL;
    *(void *)&__int128 v17 = 0xAAAAAAAAAAAAAAAALL;
    *((void *)&v17 + 1) = 0xAAAAAAAAAAAAAAAALL;
    *(_OWORD *)&v102.tm_mon = v17;
    *(_OWORD *)&v102.tm_isdst = v17;
    *(_OWORD *)&v102.char tm_sec = v17;
    if (((1 << v13) & v96) != 0) {
      break;
    }
    int v20 = 0;
LABEL_246:
    if (!v20 && ++v13 != 29) {
      continue;
    }
    operator delete[]((void *)v11);
    return;
  }

  bzero((void *)v11, v99);
  switch(a3)
  {
    case 'C':
      uint64_t v18 = 66LL;
      break;
    case 'A':
      uint64_t v18 = 80LL;
      break;
    case '?':
      *(void *)unint64_t v11 = v86;
      if (v11 >= 0xFFFFFFFFFFFFFFF8LL) {
        goto LABEL_266;
      }
      uint64_t v18 = 80LL;
      uint64_t v19 = v11 + 8;
      goto LABEL_31;
    default:
      goto LABEL_271;
  }

  *(_DWORD *)unint64_t v11 = v88;
  uint64_t v19 = v11 + 4;
  if (v11 > 0xFFFFFFFFFFFFFFFBLL) {
    goto LABEL_266;
  }
LABEL_31:
  *(_BYTE *)uint64_t v19 = v13;
  unint64_t v21 = v19 + 1;
  if (v19 == -1) {
    goto LABEL_266;
  }
  switch((char)v13)
  {
    case 0:
      a1 = sub_100097130(v95, v18, a2);
      goto LABEL_148;
    case 1:
      uint64_t v24 = *(uint64_t (**)(void))(*(void *)a2 + 32LL);
      goto LABEL_120;
    case 2:
      uint64_t v24 = *(uint64_t (**)(void))(*(void *)a2 + 48LL);
      goto LABEL_120;
    case 3:
      uint64_t v24 = *(uint64_t (**)(void))(*(void *)a2 + 40LL);
      goto LABEL_120;
    case 4:
      uint64_t v24 = *(uint64_t (**)(void))(*(void *)a2 + 56LL);
      goto LABEL_120;
    case 5:
      uint64_t v24 = *(uint64_t (**)(void))(*(void *)a2 + 64LL);
      goto LABEL_120;
    case 6:
      a1 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 128LL))(a2, v18);
      if ((_DWORD)a1 == -1)
      {
        if (dword_10011B6B0)
        {
          a1 = 0LL;
        }

        else if (dword_10011B6B4)
        {
          a1 = 0x7FFFFFFFLL;
        }

        else if (dword_10011B6B8)
        {
          a1 = 300000LL;
        }

        else if (dword_10011B6BC)
        {
          a1 = 86400000LL;
        }

        else if (dword_10011B6C0)
        {
          a1 = 3600000LL;
        }

        else
        {
          a1 = 0xFFFFFFFFLL;
        }
      }

      goto LABEL_148;
    case 7:
      *(void *)unint64_t v21 = v86;
      if (v21 <= 0xFFFFFFFFFFFFFFF7LL) {
        goto LABEL_53;
      }
      goto LABEL_266;
    case 8:
      a1 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 368LL))(a2, v18);
      if (WORD1(a1)) {
        goto LABEL_267;
      }
      goto LABEL_132;
    case 9:
      a1 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 368LL))(a2, v18);
      if (WORD1(a1)) {
        goto LABEL_267;
      }
      unsigned int v27 = (unsigned __int16)a1;
      if (!(_WORD)a1) {
        goto LABEL_170;
      }
      if (v21 - v11 >= 0xFFFFFFFFFFFFFFFELL) {
        goto LABEL_269;
      }
      unint64_t v28 = v21 - v11 + 6;
      if (v21 - v11 + 2 >= 0xFFFFFFFFFFFFFFFCLL) {
        goto LABEL_269;
      }
      if (v28 >> 16) {
        goto LABEL_267;
      }
      uint64_t v29 = 0LL;
      while (1)
      {
        unsigned int v30 = bswap32(v29);
        unsigned int v31 = HIWORD(v30);
        *(_WORD *)unint64_t v21 = HIWORD(v30);
        unsigned int v32 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 376LL))(a2, v29);
        if (v21 >= 0xFFFFFFFFFFFFFFFELL) {
          goto LABEL_269;
        }
        *(_DWORD *)(v21 + 2) = bswap32(v32);
        if ((int)(v27 - 1) <= (int)v29)
        {
          *(_WORD *)unint64_t v21 = v31;
          a1 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 376LL))(a2, v29);
          *(_DWORD *)(v21 + 2) = bswap32(a1);
          if (v21 + 2 > 0xFFFFFFFFFFFFFFFBLL) {
            goto LABEL_266;
          }
          int v20 = 0;
          v21 += 6LL;
        }

        else
        {
          a1 = sub_1000ABB10(v91, 0, 4LL, a3, a6, (const void *)v11, (unsigned __int16)v28);
          if (!a1) {
            goto LABEL_171;
          }
          if (!v89) {
            goto LABEL_268;
          }
          uint64_t v33 = a1;
          uint64_t v34 = *(void *)(a7 + 48);
          if (!v34 || (v34 & 7) != 0) {
            goto LABEL_268;
          }
          sub_10005BDD0(v34, a7, v33);
          a1 = sub_10009703C(v95, v33, 0, 1u);
          int v20 = 2 * ((_DWORD)a1 != 0);
        }

        int v26 = 0;
        uint64_t v29 = (v29 + 1);
      }

    case 10:
      a1 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 368LL))(a2, v18);
      if (WORD1(a1)) {
        goto LABEL_267;
      }
      unsigned int v35 = (unsigned __int16)a1;
      if (!(_WORD)a1)
      {
LABEL_170:
        int v26 = 0;
        int v20 = 0;
        goto LABEL_221;
      }

      unint64_t v84 = v21 - v11 + 2;
      if (v21 - v11 >= 0xFFFFFFFFFFFFFFFELL) {
        goto LABEL_269;
      }
      uint64_t v36 = 0LL;
      while (2)
      {
        *(_WORD *)unint64_t v21 = bswap32(v36) >> 16;
        char v37 = (*(uint64_t (**)(uint64_t, uint64_t, std::string *))(*(void *)a2 + 384LL))(a2, v36, &v103);
        std::string::size_type size = v103.__r_.__value_.__s.__size_;
        if ((v37 & 1) == 0)
        {
          if ((v103.__r_.__value_.__s.__size_ & 0x80) != 0)
          {
            if (!v103.__r_.__value_.__r.__words[0]) {
              goto LABEL_268;
            }
            *v103.__r_.__value_.__l.__data_ = 0;
            v103.__r_.__value_.__l.__size_ = 0LL;
            std::string::size_type size = v103.__r_.__value_.__s.__size_;
          }

          else
          {
            std::string::size_type size = 0LL;
            v103.__r_.__value_.__s.__data_[0] = 0;
            v103.__r_.__value_.__s.__size_ = 0;
          }
        }

        int v39 = (char)size;
        if ((size & 0x80u) != 0LL) {
          std::string::size_type size = v103.__r_.__value_.__l.__size_;
        }
        BOOL v40 = __CFADD__(size, 1LL);
        std::string::size_type v41 = size + 1;
        if (v40) {
          goto LABEL_269;
        }
        if (v41 >> 16) {
          goto LABEL_267;
        }
        else {
          unsigned __int16 v42 = v99 - v84;
        }
        if (v21 > 0xFFFFFFFFFFFFFFFDLL) {
          goto LABEL_266;
        }
        if (v39 >= 0) {
          unsigned int v43 = &v103;
        }
        else {
          unsigned int v43 = (std::string *)v103.__r_.__value_.__r.__words[0];
        }
        memcpy((void *)(v21 + 2), v43, v42);
        a1 = sub_1000616D4(v95, v21 + 2, v42);
        if ((int)(v35 - 1) <= (int)v36)
        {
          if (__CFADD__(v21, v42 + 2LL)) {
            goto LABEL_266;
          }
          int v20 = 0;
          v21 += v42 + 2LL;
LABEL_105:
          int v26 = 0;
          uint64_t v36 = (v36 + 1);
          continue;
        }

        break;
      }

      a1 = sub_1000ABB10(v91, 0, 4LL, a3, a6, (const void *)v11, (unsigned __int16)(v84 + v42));
      if (a1)
      {
        if (!v89) {
          goto LABEL_268;
        }
        uint64_t v44 = a1;
        uint64_t v45 = *(void *)(a7 + 48);
        if (!v45 || (v45 & 7) != 0) {
          goto LABEL_268;
        }
        sub_10005BDD0(v45, a7, v44);
        a1 = sub_10009703C(v95, v44, 0, 1u);
        int v20 = 2 * ((_DWORD)a1 != 0);
        goto LABEL_105;
      }

LABEL_171:
      int v26 = 0;
      int v20 = 3;
      goto LABEL_221;
    case 11:
      *(_WORD *)unint64_t v21 = 0;
      uint64_t v25 = (_WORD *)(v19 + 3);
      if (v21 >= 0xFFFFFFFFFFFFFFFELL) {
        goto LABEL_269;
      }
      *uint64_t v25 = 0;
      if (v21 > 0xFFFFFFFFFFFFFFFBLL) {
        goto LABEL_266;
      }
      if ((char)v103.__r_.__value_.__s.__size_ < 0)
      {
        if (!v103.__r_.__value_.__r.__words[0]) {
          goto LABEL_268;
        }
        *v103.__r_.__value_.__l.__data_ = 0;
        v103.__r_.__value_.__l.__size_ = 0LL;
      }

      else
      {
        v103.__r_.__value_.__s.__data_[0] = 0;
        v103.__r_.__value_.__s.__size_ = 0;
      }

      unint64_t v56 = v19 + 5;
      a1 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 256LL))(a2, v18);
      if (!(_DWORD)a1)
      {
        int v20 = 0;
        int v26 = 1;
        unint64_t v21 = v19 + 5;
        goto LABEL_221;
      }

      unint64_t v101 = 0xAAAAAAAAAAAAAAAALL;
      uint64_t v57 = *(void *)(v95 + 1200);
      if (!v57 || (v57 & 7) != 0) {
        goto LABEL_268;
      }
      uint64_t v58 = (*(uint64_t (**)(uint64_t))(*(void *)v57 + 384LL))(v57);
      unint64_t v101 = v58;
      if (!v58) {
        goto LABEL_219;
      }
      if ((v58 & 7) != 0) {
        goto LABEL_268;
      }
      if (!v101 || (v101 & 7) != 0) {
        goto LABEL_268;
      }
      if (!v101 || (v101 & 7) != 0) {
        goto LABEL_268;
      }
      if ((*(uint64_t (**)(void))(*(void *)v101 + 24LL))() != v83)
      {
LABEL_219:
        int v20 = 0;
        unint64_t v71 = v19 + 5;
LABEL_220:
        a1 = (uint64_t)sub_100064D0C(&v101);
        int v26 = 1;
        unint64_t v21 = v71;
LABEL_221:
        if (v92 < v99) {
          goto LABEL_266;
        }
        if (v21 > v93) {
          goto LABEL_264;
        }
        if (!v20)
        {
LABEL_224:
          unint64_t v72 = v21 - v11;
          size_t v73 = v99 - (v21 - v11);
          if (__OFSUB__(v99, v21 - v11)) {
            goto LABEL_270;
          }
          if (v73 >> 16) {
            goto LABEL_267;
          }
          if (v26)
          {
            std::string::size_type v74 = v103.__r_.__value_.__s.__size_;
            if ((v103.__r_.__value_.__s.__size_ & 0x80u) != 0) {
              std::string::size_type v74 = v103.__r_.__value_.__l.__size_;
            }
            BOOL v40 = __CFADD__(v74, 1LL);
            size_t v75 = v74 + 1;
            if (v40) {
              goto LABEL_269;
            }
            if (v75 >> 16) {
              goto LABEL_267;
            }
            else {
              size_t v76 = v99 - (v21 - v11);
            }
            if ((v103.__r_.__value_.__s.__size_ & 0x80u) == 0) {
              int v77 = &v103;
            }
            else {
              int v77 = (std::string *)v103.__r_.__value_.__r.__words[0];
            }
            memcpy((void *)v21, v77, v76);
            sub_1000616D4(v95, v21, (unsigned __int16)v76);
            if (__CFADD__(v21, v76)) {
              goto LABEL_266;
            }
            unint64_t v72 = v21 + v76 - v11;
          }

          if (v72 >> 16) {
            goto LABEL_267;
          }
          uint64_t v78 = sub_1000ABB10(v91, 0, 4LL, a3, a6, (const void *)v11, (unsigned __int16)v72);
          if (v78)
          {
            if (!v89) {
              goto LABEL_268;
            }
            uint64_t v79 = v78;
            uint64_t v80 = *(void *)(a7 + 48);
            if (!v80 || (v80 & 7) != 0) {
              goto LABEL_268;
            }
            sub_10005BDD0(v80, a7, v79);
            int v20 = 2 * (sub_10009703C(v95, v79, 0, 1u) != 0);
          }

          else
          {
            int v20 = 3;
          }
        }

        goto LABEL_246;
      }

      memset(&v100, 0, sizeof(v100));
      size_t v59 = v99 - (v56 - v11);
      if (__OFSUB__(v99, v56 - v11)) {
        goto LABEL_270;
      }
      if (v59 >> 16) {
        goto LABEL_267;
      }
      if (!v101 || (v101 & 7) != 0) {
        goto LABEL_268;
      }
      (*(void (**)(void))(*(void *)v101 + 96LL))();
      int v60 = v100.__r_.__value_.__s.__size_;
      if ((v100.__r_.__value_.__s.__size_ & 0x80u) != 0) {
        int v60 = v100.__r_.__value_.__r.__words[1];
      }
      BOOL v40 = __CFADD__(v60, 1);
      unsigned int v61 = v60 + 1;
      if (v40) {
        goto LABEL_269;
      }
      if (v61 <= (unsigned __int16)v59)
      {
        std::string::operator=(&v103, &v100);
        int v20 = 0;
        unint64_t v71 = v56;
LABEL_258:
        goto LABEL_220;
      }

      if ((_WORD)v99 != (_WORD)v56 - (_WORD)v11)
      {
        int v20 = 0;
        unsigned int v62 = 0;
        uint64_t v63 = (unsigned __int16)(v99 - (v56 - v11));
        unsigned int v64 = v61 / (unsigned __int16)(v99 - (v56 - v11));
        if ((v100.__r_.__value_.__s.__size_ & 0x80u) == 0) {
          int v65 = &v100;
        }
        else {
          int v65 = (std::string *)v100.__r_.__value_.__r.__words[0];
        }
        unsigned int v85 = bswap32(v64) >> 16;
        size_t __n = (unsigned __int16)(v99 - (v56 - v11));
        time_t v81 = (char *)(v56 + v63);
        unint64_t v82 = v56 + v63 - v11;
        while (v62 != 0x10000)
        {
          *(_WORD *)unint64_t v21 = bswap32(v62) >> 16;
          if (HIWORD(v64)) {
            break;
          }
          *uint64_t v25 = v85;
          if (v62 >= v64)
          {
            uint64_t v67 = v65;
            std::string::assign(&v103, (const std::string::value_type *)v65);
            unint64_t v71 = v56;
          }

          else
          {
            uint64_t v66 = v65;
            memcpy((void *)v56, v65, __n);
            if (__n > ~v56 || __CFADD__(v66, __n)) {
              goto LABEL_266;
            }
            if (v82 >> 16) {
              break;
            }
            uint64_t v67 = (std::string *)((char *)v66 + __n);
            uint64_t v68 = sub_1000ABB10(v91, 0, 4LL, a3, a6, (const void *)v11, (unsigned __int16)v82);
            if (v68)
            {
              if (!v89) {
                goto LABEL_268;
              }
              uint64_t v69 = v68;
              uint64_t v70 = *(void *)(a7 + 48);
              if (!v70 || (v70 & 7) != 0) {
                goto LABEL_268;
              }
              sub_10005BDD0(v70, a7, v69);
            }

            else
            {
              int v20 = 3;
            }

            unint64_t v71 = (unint64_t)v81;
          }

          ++v62;
          int v65 = v67;
          if (v64 + 1 == v62) {
            goto LABEL_258;
          }
        }

LABEL_267:
        __break(0x5507u);
LABEL_268:
        __break(0x5516u);
LABEL_269:
        __break(0x5500u);
LABEL_270:
        __break(0x5515u);
LABEL_271:
        sub_1000D251C();
      }

LABEL_274:
      __break(0x5503u);
      return;
    case 12:
      uint64_t v24 = *(uint64_t (**)(void))(*(void *)a2 + 72LL);
      goto LABEL_120;
    case 13:
      unsigned int v22 = *(uint64_t (**)(void))(*(void *)a2 + 168LL);
      goto LABEL_130;
    case 14:
      unsigned int v22 = *(uint64_t (**)(void))(*(void *)a2 + 176LL);
      goto LABEL_130;
    case 15:
      uint64_t v23 = *(uint64_t (**)(void))(*(void *)a2 + 184LL);
      goto LABEL_147;
    case 16:
      uint64_t v23 = *(uint64_t (**)(void))(*(void *)a2 + 200LL);
      goto LABEL_147;
    case 17:
      v100.__r_.__value_.__r.__words[0] = 0xAAAAAAAAAAAAAAAALL;
      BOOL v46 = *(uint64_t (**)(void))(*(void *)a2 + 224LL);
      goto LABEL_113;
    case 18:
      a1 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 184LL))(a2, v18);
      if ((_DWORD)a1)
      {
        v100.__r_.__value_.__r.__words[0] = 0xAAAAAAAAAAAAAAAALL;
        BOOL v46 = *(uint64_t (**)(void))(*(void *)a2 + 192LL);
LABEL_113:
        a1 = v46();
        if ((a1 & 1) != 0)
        {
          a1 = (uint64_t)localtime_r((const time_t *)&v100, &v102);
          unsigned int v47 = v102.tm_mon + 1;
          if (__OFADD__(v102.tm_mon, 1)) {
            goto LABEL_269;
          }
          ++v102.tm_mon;
          unsigned int v48 = v102.tm_year + 1900;
          if (__OFADD__(v102.tm_year, 1900)) {
            goto LABEL_269;
          }
          v102.tm_year += 1900;
          char tm_sec = v102.tm_sec;
          if (v102.tm_sec > 0xFFu) {
            goto LABEL_267;
          }
        }

        else
        {
          unsigned int v48 = 0;
          unsigned int v47 = 0;
          char tm_sec = 0;
          memset(&v102, 0, sizeof(v102));
        }

        if (v19 != -2)
        {
          *(_BYTE *)unint64_t v21 = tm_sec;
          if (v102.tm_min > 0xFFu) {
            goto LABEL_267;
          }
          if (v19 != -3)
          {
            *(_BYTE *)(v19 + 2) = v102.tm_min;
            if (v102.tm_hour > 0xFFu) {
              goto LABEL_267;
            }
            if (v19 != -4)
            {
              *(_BYTE *)(v19 + 3) = v102.tm_hour;
              if (v102.tm_mday > 0xFFu) {
                goto LABEL_267;
              }
              if (v19 != -5)
              {
                *(_BYTE *)(v19 + 4) = v102.tm_mday;
                if (v47 > 0xFF) {
                  goto LABEL_267;
                }
                if (v19 != -6)
                {
                  *(_BYTE *)(v19 + 5) = v47;
                  if (HIWORD(v48)) {
                    goto LABEL_267;
                  }
                  *(_WORD *)(v19 + 6) = bswap32(v48) >> 16;
                  if ((unint64_t)(v19 + 6) <= 0xFFFFFFFFFFFFFFFDLL)
                  {
LABEL_169:
                    int v26 = 0;
                    int v20 = 0;
                    unint64_t v21 = v19 + 8;
                    goto LABEL_221;
                  }
                }
              }
            }
          }
        }
      }

      else
      {
        *(_DWORD *)(v19 + 4) = 0;
        *(_DWORD *)unint64_t v21 = 0;
        if (v21 <= 0xFFFFFFFFFFFFFFF8LL) {
          goto LABEL_169;
        }
      }

uint64_t sub_100099BCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a1 || (a1 & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_66;
  }
  if (!a3) {
    sub_1000D276C();
  }
  unint64_t v5 = *(void *)(a2 + 24);
  int v6 = *(unsigned __int16 *)(a2 + 128);
  if (!v5) {
    sub_1000CEAEC( 0,  4,  "%s:%d No data!\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoRemoteUI.cpp",  4580);
  }
  int v7 = v6 - 9;
  uint64_t v8 = 4LL;
  uint64_t v9 = sub_100063A78(a1);
  if (!v9 || (v9 & 7) != 0 || (unsigned int v10 = (*(uint64_t (**)(uint64_t))(*(void *)v9 + 352LL))(v9), (a3 & 7) != 0))
  {
LABEL_66:
    __break(0x5516u);
    goto LABEL_67;
  }

  unsigned int v11 = v10;
  unint64_t v12 = *(void **)(a3 + 104);
  if (!v12)
  {
    if (v5 >= 0xFFFFFFFFFFFFFFFCLL) {
      goto LABEL_67;
    }
    unsigned int v13 = bswap32(*(_DWORD *)v5);
    unsigned int v14 = *(_DWORD *)(v5 + 4);
    unsigned int v15 = bswap32(v14);
    unsigned int v16 = v10 - v13;
    if (v10 < v13) {
      unsigned int v16 = 0;
    }
    if (v14 == -1) {
      unsigned int v17 = v16;
    }
    else {
      unsigned int v17 = v15;
    }
    unint64_t v18 = 0LL;
    unint64_t v19 = 0LL;
    unint64_t v20 = 0LL;
    switch(v7)
    {
      case 0:
        goto LABEL_28;
      case 1:
        goto LABEL_26;
      case 2:
        goto LABEL_24;
      case 3:
        if (v5 > 0xFFFFFFFFFFFFFFF4LL) {
          goto LABEL_68;
        }
        unint64_t v18 = (unint64_t)*(unsigned __int8 *)(v5 + 11) << 24;
LABEL_24:
        if (v5 > 0xFFFFFFFFFFFFFFF5LL) {
          goto LABEL_68;
        }
        unint64_t v19 = v18 | ((unint64_t)*(unsigned __int8 *)(v5 + 10) << 16);
LABEL_26:
        if (v5 > 0xFFFFFFFFFFFFFFF6LL) {
          goto LABEL_68;
        }
        unint64_t v20 = v19 | ((unint64_t)*(unsigned __int8 *)(v5 + 9) << 8);
LABEL_28:
        if (v5 > 0xFFFFFFFFFFFFFFF7LL) {
          goto LABEL_68;
        }
        uint64_t v21 = *(unsigned __int8 *)(v5 + 8);
        unsigned int v22 = operator new(0x18uLL);
        unint64_t v12 = v22;
        *(_OWORD *)unsigned int v22 = xmmword_1000DF910;
        v22[2] = 0xFFFFFFFFLL;
        v22[2] = v20 | v21;
        *((_DWORD *)v22 + 1) = v13;
        if (__CFADD__(v13, v17)) {
          goto LABEL_67;
        }
        *((_DWORD *)v22 + 2) = v13 + v17;
        if ((((_BYTE)v22 + 12) & 3) != 0) {
          goto LABEL_66;
        }
        *((_DWORD *)v22 + 3) = v17;
        *(void *)(a3 + 104) = v22;
        break;
      default:
        goto LABEL_69;
    }
  }

  uint64_t v24 = (_DWORD *)v12 + 1;
  uint64_t v23 = *((unsigned int *)v12 + 1);
  if ((_DWORD)v23 == -1)
  {
LABEL_67:
    __break(0x5500u);
LABEL_68:
    __break(0x5513u);
LABEL_69:
    sub_1000D251C();
  }

  uint64_t v25 = v12[2];
  *((_DWORD *)v12 + 1) = v23 + 1;
  int v26 = *((_DWORD *)v12 + 3);
  if (v26) {
    unsigned int v27 = v23 + 1;
  }
  else {
    unsigned int v27 = v23;
  }
  uint64_t v8 = 4LL;
  if (v25 && (v25 & 0xE0000000) == 0 && v27 <= v11 && v26)
  {
    do
    {
      uint64_t v32 = 0xAAAAAAAAAAAAAAAALL;
      uint64_t v28 = sub_100063A78(a1);
      if (!v28 || (v28 & 7) != 0) {
        goto LABEL_66;
      }
      uint64_t v29 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v28 + 448LL))(v28, v23);
      uint64_t v32 = v29;
      if (!v29) {
        goto LABEL_55;
      }
      if ((v29 & 7) != 0) {
        goto LABEL_66;
      }
      if ((*(unsigned int (**)(uint64_t))(*(void *)v29 + 16LL))(v29))
      {
        sub_100098CCC(a1, v32, 0x41u, v23, v25, *(unsigned __int16 *)(a3 + 24), a3);
        uint64_t v8 = v30;
      }

      else
      {
LABEL_55:
        uint64_t v8 = 2LL;
      }

      sub_100064D0C(&v32);
      uint64_t v23 = (v23 + 1);
    }

    while (v23 < v27 && !(_DWORD)v8);
    if (!(_DWORD)v8)
    {
      if ((v24 & 3) == 0 && ((unint64_t)(v12 + 1) & 7) == 0)
      {
        if (*v24 >= *((_DWORD *)v12 + 2)) {
          return 0LL;
        }
        else {
          return 6LL;
        }
      }

      goto LABEL_66;
    }
  }

  return v8;
}

uint64_t sub_100099F04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a1 || (a1 & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_90;
  }
  if (!*(void *)(a2 + 24))
  {
    uint64_t v5 = 4LL;
    sub_1000CEAEC( 0,  4,  "%s:%d No data!\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoRemoteUI.cpp",  4742);
    return v5;
  }

  uint64_t v5 = 4LL;
  uint64_t v6 = *(void *)(a1 + 1200);
  if (!v6) {
    goto LABEL_90;
  }
  if ((v6 & 7) != 0) {
    goto LABEL_90;
  }
  unsigned int v8 = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 392LL))(v6);
  if (!a3 || (a3 & 7) != 0) {
    goto LABEL_90;
  }
  unsigned int v9 = v8;
  unsigned int v10 = *(void **)(a3 + 104);
  if (v10) {
    goto LABEL_59;
  }
  unint64_t v11 = *(void *)(a2 + 24);
  if (!v11)
  {
LABEL_90:
    __break(0x5516u);
    goto LABEL_91;
  }

  unsigned int v12 = *(_DWORD *)v11;
  if (v11 >= 0xFFFFFFFFFFFFFFFCLL) {
    goto LABEL_91;
  }
  unsigned int v13 = bswap32(v12);
  unsigned int v14 = bswap32(*(_DWORD *)(v11 + 4));
  BOOL v16 = v12 == -1 || v13 > v8;
  if (v16) {
    unsigned int v17 = 0;
  }
  else {
    unsigned int v17 = v13;
  }
  if (v16) {
    int v18 = 0;
  }
  else {
    int v18 = v14;
  }
  if (__CFADD__(v17, v18)) {
    int v18 = -1;
  }
  int v19 = v8 - v17;
  if (v8 < v17) {
    int v19 = 0;
  }
  if (v18 == -1) {
    int v20 = v19;
  }
  else {
    int v20 = v18;
  }
  unint64_t v21 = 0LL;
  unint64_t v22 = 0LL;
  unint64_t v23 = 0LL;
  unint64_t v24 = 0LL;
  unint64_t v25 = 0LL;
  unint64_t v26 = 0LL;
  unint64_t v27 = 0LL;
  switch(*(_WORD *)(a2 + 128))
  {
    case 9:
      goto LABEL_50;
    case 0xA:
      goto LABEL_48;
    case 0xB:
      goto LABEL_46;
    case 0xC:
      goto LABEL_44;
    case 0xD:
      goto LABEL_42;
    case 0xE:
      goto LABEL_40;
    case 0xF:
      goto LABEL_38;
    case 0x10:
      if (v11 >= 0xFFFFFFFFFFFFFFF1LL) {
        goto LABEL_92;
      }
      unint64_t v21 = (unint64_t)*(unsigned __int8 *)(v11 + 15) << 56;
LABEL_38:
      if (v11 > 0xFFFFFFFFFFFFFFF1LL) {
        goto LABEL_92;
      }
      unint64_t v22 = v21 | ((unint64_t)*(unsigned __int8 *)(v11 + 14) << 48);
LABEL_40:
      if (v11 > 0xFFFFFFFFFFFFFFF2LL) {
        goto LABEL_92;
      }
      unint64_t v23 = v22 | ((unint64_t)*(unsigned __int8 *)(v11 + 13) << 40);
LABEL_42:
      if (v11 > 0xFFFFFFFFFFFFFFF3LL) {
        goto LABEL_92;
      }
      unint64_t v24 = v23 | ((unint64_t)*(unsigned __int8 *)(v11 + 12) << 32);
LABEL_44:
      if (v11 > 0xFFFFFFFFFFFFFFF4LL) {
        goto LABEL_92;
      }
      unint64_t v25 = v24 | ((unint64_t)*(unsigned __int8 *)(v11 + 11) << 24);
LABEL_46:
      if (v11 > 0xFFFFFFFFFFFFFFF5LL) {
        goto LABEL_92;
      }
      unint64_t v26 = v25 | ((unint64_t)*(unsigned __int8 *)(v11 + 10) << 16);
LABEL_48:
      if (v11 > 0xFFFFFFFFFFFFFFF6LL) {
        goto LABEL_92;
      }
      unint64_t v27 = v26 | ((unint64_t)*(unsigned __int8 *)(v11 + 9) << 8);
LABEL_50:
      if (v11 > 0xFFFFFFFFFFFFFFF7LL) {
        goto LABEL_92;
      }
      uint64_t v28 = *(unsigned __int8 *)(v11 + 8);
      uint64_t v29 = operator new(0x18uLL);
      unsigned int v10 = v29;
      *(_OWORD *)uint64_t v29 = xmmword_1000DF910;
      v29[2] = 0xFFFFFFFFLL;
      v29[2] = v27 | v28;
      *((_DWORD *)v29 + 1) = v17;
      if (__CFADD__(v17, v20)) {
        goto LABEL_91;
      }
      *((_DWORD *)v29 + 2) = v17 + v20;
      if ((((_BYTE)v29 + 12) & 3) != 0) {
        goto LABEL_90;
      }
      *((_DWORD *)v29 + 3) = v20;
      *(void *)(a3 + 104) = v29;
      break;
    default:
      goto LABEL_93;
  }

uint64_t sub_10009A2B0(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_28;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_28;
  }
  if (*(_WORD *)(a2 + 128) != 4) {
    return 4LL;
  }
  int v4 = *(unsigned int **)(a2 + 24);
  if (!v4) {
    goto LABEL_28;
  }
  unsigned int v5 = *v4;
  if (!*v4) {
    return 18LL;
  }
  uint64_t result = sub_100063A78(result);
  if (!result || (result & 7) != 0) {
    goto LABEL_28;
  }
  unsigned int v6 = sub_10009A408(v2, result, bswap32(v5));
  if (v6 == -1) {
    return 4LL;
  }
  uint64_t result = sub_100044D4C(v6);
  if (!result) {
    return 2LL;
  }
  uint64_t v7 = result;
  if ((result & 7) != 0) {
    goto LABEL_28;
  }
  if (!(*(unsigned int (**)(uint64_t))(*(void *)result + 16LL))(result))
  {
    uint64_t v9 = 2LL;
LABEL_26:
    (*(void (**)(uint64_t))(*(void *)v7 + 8LL))(v7);
    return v9;
  }

  if (v5 != -1 && !(*(unsigned int (**)(uint64_t))(*(void *)v7 + 64LL))(v7))
  {
    uint64_t v9 = 18LL;
    goto LABEL_26;
  }

  uint64_t result = (uint64_t)operator new(0x78uLL);
  if ((result & 0xF) == 0)
  {
    uint64_t v8 = result;
    if ((result & 7) == 0)
    {
      sub_10009EA04((dispatch_semaphore_t)result, *(void *)(v2 + 8), a2, v7);
      uint64_t result = *(void *)(v8 + 48);
      if (result)
      {
        if ((result & 7) == 0)
        {
          sub_10005BC28(result, v8);
          return 0LL;
        }
      }
    }
  }

uint64_t sub_10009A408(uint64_t result, uint64_t a2, int a3)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
LABEL_13:
    __break(0x5500u);
    return result;
  }

  if (a3 < 0) {
    return 0xFFFFFFFFLL;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 568LL))(a2);
  if ((_DWORD)result == -1) {
    goto LABEL_13;
  }
  else {
    return (a3 - 1);
  }
}

uint64_t sub_10009A46C(uint64_t a1, uint64_t a2, __int16 a3)
{
  if (!a1 || (a1 & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_29;
  }
  if (*(_WORD *)(a2 + 128) != 5) {
    return 4LL;
  }
  unsigned int v5 = *(unsigned __int8 **)(a2 + 24);
  if (!v5) {
    goto LABEL_29;
  }
  int v7 = *v5;
  unsigned int v8 = *(_DWORD *)(v5 + 1);
  uint64_t v9 = sub_100063A78(a1);
  if (!v9 || (v9 & 7) != 0) {
    goto LABEL_29;
  }
  int v10 = (*(uint64_t (**)(uint64_t))(*(void *)v9 + 568LL))(v9);
  int v11 = v10 + 1;
  if (v10 == -1) {
    goto LABEL_30;
  }
  uint64_t result = 4LL;
  if (!v7)
  {
    int v13 = bswap32(v8);
    if ((v13 & 0x80000000) == 0 && v13 < v11)
    {
      uint64_t v14 = sub_100063A78(a1);
      if (v14 && (v14 & 7) == 0)
      {
        unsigned int v15 = sub_10009A408(a1, v14, v13);
        *(void *)&__int128 v16 = 0xAAAAAAAAAAAAAAAALL;
        *((void *)&v16 + 1) = 0xAAAAAAAAAAAAAAAALL;
        __int128 v24 = v16;
        *(_OWORD *)&v23[2] = v16;
        *(_WORD *)unint64_t v23 = 1;
        if (v15 == -1)
        {
          int v19 = 0;
          goto LABEL_24;
        }

        uint64_t v17 = sub_100044D4C(v15);
        uint64_t v22 = v17;
        if (!v17) {
          sub_1000D276C();
        }
        if ((v17 & 7) == 0)
        {
          int v18 = (*(uint64_t (**)(uint64_t))(*(void *)v17 + 64LL))(v17);
          sub_100064D0C(&v22);
          if (v18) {
            int v19 = 0x1000000;
          }
          else {
            int v19 = 0;
          }
LABEL_24:
          if (&v23[1] != (_BYTE *)-1LL)
          {
            *(_DWORD *)&v23[2] = v19;
            v23[0] = 5;
            uint64_t result = (uint64_t)operator new[](5uLL);
            *(_DWORD *)uint64_t result = *(_DWORD *)&v23[1];
            *(_BYTE *)(result + 4) = v23[5];
            uint64_t v20 = *(unsigned int *)(a2 + 64);
            if ((v20 + 32) >= 0x40)
            {
              __break(0x550Au);
            }

            else
            {
              unint64_t v21 = (void *)result;
              sub_1000AC324(a2, *(void *)(a2 + 8), 0, v20, a3, *(_DWORD *)(a2 + 68), (const void *)result, 5u);
              operator delete[](v21);
              return 0LL;
            }

            return result;
          }

uint64_t sub_10009A65C(uint64_t result, unsigned int a2)
{
  if (!result || (result & 7) != 0)
  {
LABEL_21:
    __break(0x5516u);
    goto LABEL_22;
  }

  if (a2 >= 0x10)
  {
LABEL_22:
    __break(0x550Au);
    return result;
  }

  if (a2 - 1 >= 8)
  {
    switch(a2)
    {
      case 9u:
        uint64_t result = sub_1000438B8();
        if (result && (result & 7) == 0)
        {
          uint64_t v2 = *(uint64_t (**)(void))(*(void *)result + 56LL);
          return v2();
        }

        break;
      case 0xAu:
        uint64_t result = sub_1000438B8();
        if (result && (result & 7) == 0)
        {
          uint64_t v2 = *(uint64_t (**)(void))(*(void *)result + 64LL);
          return v2();
        }

        break;
      case 0xBu:
        uint64_t result = sub_1000438B8();
        if (result && (result & 7) == 0)
        {
          uint64_t v2 = *(uint64_t (**)(void))(*(void *)result + 72LL);
          return v2();
        }

        break;
      default:
        return 0LL;
    }

    goto LABEL_21;
  }

  return 1LL;
}

uint64_t sub_10009A710(uint64_t result, uint64_t a2, int a3)
{
  if (!result) {
    goto LABEL_35;
  }
  unsigned int v3 = (_DWORD *)result;
  if ((result & 7) != 0) {
    goto LABEL_35;
  }
  if (a3 == -1) {
    goto LABEL_16;
  }
  unsigned int v6 = *(_DWORD *)(result + 1216);
  if (v6 >= 4) {
    goto LABEL_36;
  }
  if (v6 == 2)
  {
    uint64_t result = sub_1000438B8();
    if (!result || (result & 7) != 0) {
      goto LABEL_35;
    }
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 80LL))(result);
    if (!(_DWORD)result)
    {
      int v7 = 1;
      goto LABEL_15;
    }

    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 584LL))(a2);
  }

  else
  {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 568LL))(a2);
  }

  int v7 = result + 1;
  if ((_DWORD)result == -1)
  {
LABEL_37:
    __break(0x5500u);
    return result;
  }

  if (v7 < 0) {
    sub_1000D28A8(v7 & 0x80000000);
  }
LABEL_15:
  if (v7 <= a3) {
    return 22LL;
  }
LABEL_16:
  unsigned int v8 = v3[304];
  if (v8 > 3) {
    goto LABEL_36;
  }
  if (v8 != 2)
  {
    if (!a3)
    {
      (*(void (**)(uint64_t))(*(void *)a2 + 104LL))(a2);
      uint64_t result = sub_100063A78((uint64_t)v3);
      if (!result || (result & 7) != 0) {
        goto LABEL_35;
      }
      unsigned int v11 = v3[304];
      if (v11 <= 3)
      {
        (*(void (**)(uint64_t, void, BOOL))(*(void *)result + 112LL))(result, 0LL, v11 == 2);
        return 0LL;
      }

uint64_t sub_10009A8D4(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result) {
    goto LABEL_45;
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_45;
  }
  uint64_t result = sub_1000438B8();
  if (!result || (result & 7) != 0) {
    goto LABEL_45;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 80LL))(result);
  if ((_DWORD)result)
  {
    unsigned int v6 = *(_DWORD *)(v3 + 1216);
    if (v6 >= 4) {
      goto LABEL_46;
    }
    if (v6 == 2)
    {
      switch(*(_DWORD *)(v3 + 1404))
      {
        case 0:
        case 4:
          else {
            return 22LL;
          }
        case 1:
          int v10 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 360LL))(a2);
          if (v10 < 0) {
            sub_1000D28A8(v10 & 0x80000000);
          }
          goto LABEL_27;
        case 2:
          int v11 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 392LL))(a2);
          if (v11 < 0) {
            sub_1000D28A8(v11 & 0x80000000);
          }
          (*(void (**)(uint64_t, uint64_t))(*(void *)a2 + 176LL))(a2, a3);
          return 0LL;
        case 3:
          int v12 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 432LL))(a2);
          if (v12 < 0) {
            sub_1000D28A8(v12 & 0x80000000);
          }
          (*(void (**)(uint64_t, uint64_t))(*(void *)a2 + 184LL))(a2, a3);
          return 0LL;
        case 5:
          int v13 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 440LL))(a2);
          (*(void (**)(uint64_t, uint64_t))(*(void *)a2 + 192LL))(a2, a3);
          return 0LL;
        default:
          int v10 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 360LL))(a2);
          if (v10 < 0) {
            sub_1000D28A8(v10 & 0x80000000);
          }
LABEL_27:
          return 22LL;
      }
    }
  }

  unsigned int v7 = *(_DWORD *)(v3 + 1216);
  if (v7 > 3) {
    goto LABEL_46;
  }
  if (v7 == 2) {
    return 0LL;
  }
  int v8 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 360LL))(a2);
  if (v8 < 0) {
    sub_1000D28A8(v8 & 0x80000000);
  }
  uint64_t result = sub_100063A78(v3);
  if (!result || (result & 7) != 0)
  {
LABEL_45:
    __break(0x5516u);
    goto LABEL_46;
  }

  unsigned int v9 = *(_DWORD *)(v3 + 1216);
  if (v9 <= 3)
  {
    (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)result + 112LL))(result, 1LL, v9 == 2);
LABEL_22:
    (*(void (**)(uint64_t, uint64_t))(*(void *)a2 + 144LL))(a2, a3);
    return 0LL;
  }

uint64_t sub_10009AAFC(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result) {
    goto LABEL_35;
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_35;
  }
  uint64_t result = sub_1000438B8();
  if (!result || (result & 7) != 0) {
    goto LABEL_35;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 80LL))(result);
  if ((_DWORD)result)
  {
    unsigned int v6 = *(_DWORD *)(v3 + 1216);
    if (v6 >= 4) {
      goto LABEL_36;
    }
    if (v6 == 2)
    {
      switch(*(_DWORD *)(v3 + 1404))
      {
        case 0:
        case 1:
        case 3:
        case 4:
        case 5:
          if ((_DWORD)a3 == -1
            || ((*(unsigned int (**)(uint64_t))(*(void *)a2 + 352LL))(a2) != 0) > (int)a3)
          {
            return 0LL;
          }

          return 22LL;
        case 2:
          int v11 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 400LL))(a2);
          if (v11 < 0) {
            sub_1000D28A8(v11 & 0x80000000);
          }
          (*(void (**)(uint64_t, uint64_t))(*(void *)a2 + 200LL))(a2, a3);
          break;
        default:
          int v10 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 368LL))(a2);
          if (v10 < 0) {
            sub_1000D28A8(v10 & 0x80000000);
          }
          return 22LL;
      }

      return 0LL;
    }
  }

  unsigned int v7 = *(_DWORD *)(v3 + 1216);
  if (v7 > 3) {
    goto LABEL_36;
  }
  if (v7 == 2) {
    return 0LL;
  }
  int v8 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 368LL))(a2);
  if (v8 < 0) {
    sub_1000D28A8(v8 & 0x80000000);
  }
  uint64_t result = sub_100063A78(v3);
  if (!result || (result & 7) != 0)
  {
LABEL_35:
    __break(0x5516u);
    goto LABEL_36;
  }

  unsigned int v9 = *(_DWORD *)(v3 + 1216);
  if (v9 <= 3)
  {
    (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)result + 112LL))(result, 1LL, v9 == 2);
LABEL_22:
    (*(void (**)(uint64_t, uint64_t))(*(void *)a2 + 152LL))(a2, a3);
    return 0LL;
  }

uint64_t sub_10009ACC0(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result || (uint64_t v3 = (_DWORD *)result, (result & 7) != 0) || (result = sub_1000438B8()) == 0 || (result & 7) != 0)
  {
LABEL_33:
    __break(0x5516u);
    goto LABEL_34;
  }

  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 80LL))(result);
  if (!(_DWORD)result) {
    goto LABEL_10;
  }
  unsigned int v6 = v3[304];
  if (v6 >= 4) {
    goto LABEL_34;
  }
  if (v6 != 2)
  {
LABEL_10:
    unsigned int v7 = v3[304];
    if (v7 <= 3)
    {
      if (v7 == 2)
      {
        uint64_t result = 0LL;
        v3[351] = a3;
        return result;
      }

      int v8 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 376LL))(a2);
      if (v8 < 0) {
        sub_1000D28A8(v8 & 0x80000000);
      }
      uint64_t result = sub_100063A78((uint64_t)v3);
      if (result && (result & 7) == 0)
      {
        unsigned int v9 = v3[304];
        if (v9 <= 3)
        {
          (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)result + 112LL))(result, 1LL, v9 == 2);
          (*(void (**)(uint64_t, uint64_t))(*(void *)a2 + 160LL))(a2, a3);
          return 0LL;
        }

        goto LABEL_34;
      }

      goto LABEL_33;
    }

uint64_t sub_10009AEE4(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result || (uint64_t v3 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    int v5 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 352LL))(a2);
    if (v5 < 0) {
      sub_1000D28A8(v5 & 0x80000000);
    }
    else {
      return sub_100098500(v3, v6, a3);
    }
  }

  return result;
}

uint64_t sub_10009AF58(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result) {
    goto LABEL_12;
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_12;
  }
  int v6 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 384LL))(a2);
  if (v6 < 0) {
    sub_1000D28A8(v6 & 0x80000000);
  }
  uint64_t result = sub_100063A78(v3);
  if (!result || (result & 7) != 0)
  {
LABEL_12:
    __break(0x5516u);
  }

  else
  {
    unsigned int v7 = *(_DWORD *)(v3 + 1216);
    if (v7 < 4)
    {
      (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)result + 112LL))(result, 1LL, v7 == 2);
      (*(void (**)(uint64_t, uint64_t))(*(void *)a2 + 168LL))(a2, a3);
      return 0LL;
    }
  }

  __break(0x550Au);
  return result;
}

uint64_t sub_10009B01C(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result) {
    goto LABEL_23;
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_23;
  }
  if ((_DWORD)a3 == -1) {
    return 22LL;
  }
  unsigned int v5 = *(_DWORD *)(result + 1216);
  if (v5 >= 4) {
    goto LABEL_24;
  }
  if (v5 == 2) {
    return 22LL;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 408LL))(a2);
  if ((result & 0x80000000) != 0) {
    sub_1000D28A8(result & 0x80000000);
  }
  unsigned int v6 = *(_DWORD *)(v3 + 1216);
  if (v6 > 3) {
    goto LABEL_24;
  }
  sub_100097398(v3, v6);
  uint64_t result = sub_100063A78(v3);
  if (!result || (result & 7) != 0) {
    goto LABEL_23;
  }
  unsigned int v7 = *(_DWORD *)(v3 + 1216);
  if (v7 > 3)
  {
LABEL_24:
    __break(0x550Au);
    return result;
  }

  (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)result + 112LL))(result, 1LL, v7 == 2);
  uint64_t result = *(void *)(v3 + 1200);
  if (!result
    || (result & 7) != 0
    || (uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 96LL))(result, a3),
        (uint64_t v8 = *(void *)(v3 + 1200)) == 0)
    || (v8 & 7) != 0
    || (uint64_t result = sub_100061274()) == 0
    || (result & 7) != 0)
  {
LABEL_23:
    __break(0x5516u);
    goto LABEL_24;
  }

  uint64_t v9 = sub_10008E168(result, *(void *)(v3 + 8));
  if ((*(unsigned int (**)(uint64_t, uint64_t, void, void, void, uint64_t, uint64_t, void))(*(void *)v8 + 304LL))( v8,  0xFFFFFFFFLL,  0LL,  0LL,  0LL,  v9,  0xFFFFFFFFLL,  0LL))
  {
    return 0LL;
  }

  else
  {
    return 2LL;
  }

uint64_t sub_10009B164(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result) {
    goto LABEL_23;
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_23;
  }
  if ((_DWORD)a3 == -1) {
    goto LABEL_16;
  }
  uint64_t result = sub_1000438B8();
  if (!result || (result & 7) != 0)
  {
LABEL_23:
    __break(0x5516u);
    goto LABEL_24;
  }

  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 80LL))(result);
  if (!(_DWORD)result) {
    goto LABEL_10;
  }
  unsigned int v6 = *(_DWORD *)(v3 + 1216);
  if (v6 >= 4) {
    goto LABEL_24;
  }
  if (v6 == 2)
  {
    uint64_t v7 = 54LL;
  }

  else
  {
LABEL_10:
    unsigned int v8 = *(_DWORD *)(v3 + 1216);
    if (v8 > 3) {
      goto LABEL_24;
    }
    if (v8 == 2)
    {
      uint64_t result = 0LL;
      goto LABEL_15;
    }

    uint64_t v7 = 52LL;
  }

  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 8 * v7))(a2);
  if ((result & 0x80000000) != 0) {
    sub_1000D28A8(result & 0x80000000);
  }
LABEL_15:
LABEL_16:
  unsigned int v9 = *(_DWORD *)(v3 + 1216);
  if (v9 <= 3)
  {
    sub_100097398(v3, v9);
    uint64_t result = sub_100063A78(v3);
    if (result && (result & 7) == 0)
    {
      unsigned int v10 = *(_DWORD *)(v3 + 1216);
      if (v10 <= 3)
      {
        (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)result + 112LL))(result, 1LL, v10 == 2);
        (*(void (**)(uint64_t, uint64_t))(*(void *)a2 + 184LL))(a2, a3);
        return 0LL;
      }

      goto LABEL_24;
    }

    goto LABEL_23;
  }

uint64_t sub_10009B298(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result || (uint64_t v3 = result, (result & 7) != 0))
  {
LABEL_12:
    __break(0x5516u);
    goto LABEL_13;
  }

  unsigned int v4 = *(_DWORD *)(result + 1216);
  if (v4 < 4)
  {
    uint64_t result = sub_100063A78(v3);
    if (result && (result & 7) == 0)
    {
      unsigned int v7 = *(_DWORD *)(v3 + 1216);
      if (v7 <= 3)
      {
        (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)result + 112LL))(result, 1LL, v7 == 2);
        (*(void (**)(uint64_t, uint64_t))(*(void *)a2 + 136LL))(a2, a3);
        return 0LL;
      }

      goto LABEL_13;
    }

    goto LABEL_12;
  }

uint64_t sub_10009B364(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result) {
    goto LABEL_19;
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_19;
  }
  if ((_DWORD)a3 == -1) {
    return 22LL;
  }
  unsigned int v5 = *(_DWORD *)(result + 1216);
  if (v5 >= 4) {
    goto LABEL_20;
  }
  if (v5 == 2) {
    return 22LL;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 632LL))(a2);
  if ((result & 0x80000000) != 0) {
    sub_1000D28A8(result & 0x80000000);
  }
  unsigned int v7 = *(_DWORD *)(v3 + 1216);
  if (v7 > 3) {
    goto LABEL_20;
  }
  sub_100097398(v3, v7);
  uint64_t result = sub_100063A78(v3);
  if (!result || (result & 7) != 0) {
    goto LABEL_19;
  }
  unsigned int v8 = *(_DWORD *)(v3 + 1216);
  if (v8 > 3)
  {
LABEL_20:
    __break(0x550Au);
    return result;
  }

  (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)result + 112LL))(result, 1LL, v8 == 2);
  uint64_t result = sub_100061274();
  if (!result || (result & 7) != 0)
  {
LABEL_19:
    __break(0x5516u);
    goto LABEL_20;
  }

  uint64_t v9 = sub_10008E168(result, *(void *)(v3 + 8));
  else {
    return 22LL;
  }
}

uint64_t sub_10009B474(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result || (uint64_t v3 = result, (result & 7) != 0))
  {
LABEL_13:
    __break(0x5516u);
    goto LABEL_14;
  }

  if ((_DWORD)a3 != -1)
  {
    uint64_t result = sub_10009BD6C(result, a2);
    if ((result & 0x80000000) != 0) {
      sub_1000D28A8(result & 0x80000000);
    }
  }

  unsigned int v6 = *(_DWORD *)(v3 + 1216);
  if (v6 < 4)
  {
    sub_100097398(v3, v6);
    uint64_t result = sub_100063A78(v3);
    if (result && (result & 7) == 0)
    {
      unsigned int v7 = *(_DWORD *)(v3 + 1216);
      if (v7 <= 3)
      {
        (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)result + 112LL))(result, 1LL, v7 == 2);
        (*(void (**)(uint64_t, uint64_t))(*(void *)a2 + 192LL))(a2, a3);
        return 0LL;
      }

      goto LABEL_14;
    }

    goto LABEL_13;
  }

void sub_10009B548(uint64_t a1, uint64_t a2, unsigned int a3)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_18;
  }

  if (a3 >= 0x100)
  {
LABEL_18:
    __break(0x550Au);
    return;
  }

  switch(a3)
  {
    case 0u:
      (*(void (**)(uint64_t))(*(void *)a2 + 288LL))(a2);
      break;
    case 1u:
      (*(void (**)(uint64_t))(*(void *)a2 + 272LL))(a2);
      break;
    case 2u:
      (*(void (**)(uint64_t))(*(void *)a2 + 296LL))(a2);
      break;
    case 3u:
      (*(void (**)(uint64_t))(*(void *)a2 + 280LL))(a2);
      break;
    case 4u:
      (*(void (**)(uint64_t))(*(void *)a2 + 312LL))(a2);
      break;
    case 5u:
      (*(void (**)(uint64_t))(*(void *)a2 + 320LL))(a2);
      break;
    case 6u:
      (*(void (**)(uint64_t))(*(void *)a2 + 344LL))(a2);
      break;
    case 7u:
      (*(void (**)(uint64_t))(*(void *)a2 + 336LL))(a2);
      break;
    case 8u:
      (*(void (**)(uint64_t))(*(void *)a2 + 328LL))(a2);
      break;
    case 9u:
      (*(void (**)(uint64_t))(*(void *)a2 + 304LL))(a2);
      break;
    default:
      sub_1000CEAEC( 0,  4,  "%s:%d ERROR: Unknown sort type: 0x%08X !\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoRemoteUI.cpp",  9247,  a3);
      break;
  }

uint64_t sub_10009B64C(uint64_t result, uint64_t a2)
{
  if (!result || (uint64_t v2 = result, (result & 7) != 0) || (result = sub_1000438B8()) == 0 || (result & 7) != 0)
  {
LABEL_22:
    __break(0x5516u);
    goto LABEL_23;
  }

  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 80LL))(result);
  if ((_DWORD)result)
  {
    unsigned int v4 = *(_DWORD *)(v2 + 1216);
    if (v4 >= 4)
    {
LABEL_23:
      __break(0x550Au);
      goto LABEL_24;
    }

    if (v4 == 2)
    {
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 584LL))(a2);
      uint64_t v5 = (result + 1);
      if ((_DWORD)result == -1) {
        goto LABEL_24;
      }
      return v5;
    }
  }

  unsigned int v6 = *(_DWORD *)(v2 + 1216);
  if (v6 > 3) {
    goto LABEL_23;
  }
  if (v6 == 2) {
    return 1LL;
  }
  uint64_t result = sub_100063A78(v2);
  if (!result || (result & 7) != 0) {
    goto LABEL_22;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 120LL))(result);
  unsigned int v7 = *(_DWORD *)(v2 + 1216);
  if (v7 > 3) {
    goto LABEL_23;
  }
  uint64_t v8 = result;
  (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)a2 + 112LL))(a2, 1LL, v7 == 2);
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 568LL))(a2);
  uint64_t v5 = (result + 1);
  if ((_DWORD)result != -1)
  {
    uint64_t result = sub_100063A78(v2);
    if (result && (result & 7) == 0)
    {
      unsigned int v9 = *(_DWORD *)(v2 + 1216);
      if (v9 <= 3)
      {
        (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)result + 112LL))(result, v8, v9 == 2);
        return v5;
      }

      goto LABEL_23;
    }

    goto LABEL_22;
  }

uint64_t sub_10009B798(uint64_t result, uint64_t a2)
{
  if (!result || (uint64_t v2 = result, (result & 7) != 0) || (result = sub_1000438B8()) == 0 || (result & 7) != 0)
  {
LABEL_24:
    __break(0x5516u);
    goto LABEL_25;
  }

  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 80LL))(result);
  if (!(_DWORD)result) {
    goto LABEL_10;
  }
  unsigned int v4 = *(_DWORD *)(v2 + 1216);
  if (v4 >= 4) {
    goto LABEL_25;
  }
  if (v4 != 2)
  {
LABEL_10:
    unsigned int v6 = *(_DWORD *)(v2 + 1216);
    if (v6 <= 3)
    {
      if (v6 == 2) {
        return (*(_DWORD *)(v2 + 1404) & 0xFFFFFFFB) == 0;
      }
      uint64_t result = *(void *)(v2 + 1200);
      if (result && (result & 7) == 0)
      {
        uint64_t result = *(void *)(v2 + 1200);
        if (result && (result & 7) == 0)
        {
          return 0LL;
        }
      }

      goto LABEL_24;
    }

uint64_t sub_10009B8D4(uint64_t result, uint64_t a2)
{
  if (!result || (uint64_t v2 = result, (result & 7) != 0) || (result = sub_1000438B8()) == 0 || (result & 7) != 0)
  {
LABEL_24:
    __break(0x5516u);
    goto LABEL_25;
  }

  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 80LL))(result);
  if (!(_DWORD)result) {
    goto LABEL_11;
  }
  unsigned int v4 = *(_DWORD *)(v2 + 1216);
  if (v4 >= 4) {
    goto LABEL_25;
  }
  if (v4 != 2)
  {
LABEL_11:
    unsigned int v6 = *(_DWORD *)(v2 + 1216);
    if (v6 <= 3)
    {
      if (v6 == 2)
      {
        uint64_t v7 = *(int *)(v2 + 1404);
        return 0LL;
      }

      uint64_t result = *(void *)(v2 + 1200);
      if (result && (result & 7) == 0)
      {
        uint64_t result = *(void *)(v2 + 1200);
        if (result && (result & 7) == 0)
        {
          return 0LL;
        }
      }

      goto LABEL_24;
    }

uint64_t sub_10009BA0C(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_18;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_18;
  }
  unsigned int v3 = *(_DWORD *)(result + 1216);
  if (v3 >= 4)
  {
LABEL_19:
    __break(0x550Au);
    return result;
  }

  if (v3 != 2)
  {
    uint64_t result = *(void *)(result + 1200);
    if (!result || (result & 7) != 0) {
      goto LABEL_18;
    }
    if (((*(uint64_t (**)(uint64_t))(*(void *)result + 472LL))(result) & 1) == 0)
    {
      uint64_t result = *(void *)(v2 + 1200);
      if (!result || (result & 7) != 0) {
        goto LABEL_18;
      }
    }

    return 0LL;
  }

  uint64_t result = sub_1000438B8();
  if (!result || (result & 7) != 0)
  {
LABEL_18:
    __break(0x5516u);
    goto LABEL_19;
  }

  else {
    return 5LL;
  }
}

uint64_t sub_10009BAD8(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_18;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_18;
  }
  uint64_t result = sub_1000438B8();
  if (!result || (result & 7) != 0) {
    goto LABEL_18;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 80LL))(result);
  if ((_DWORD)result)
  {
    unsigned int v4 = *(_DWORD *)(v2 + 1216);
    if (v4 >= 4) {
      goto LABEL_19;
    }
    if (v4 == 2) {
      return sub_10009D5C0(v2, a2);
    }
  }

  unsigned int v5 = *(_DWORD *)(v2 + 1216);
  if (v5 <= 3)
  {
    if (v5 == 2) {
      return 0LL;
    }
    uint64_t result = *(void *)(v2 + 1200);
    if (result && (result & 7) == 0)
    {
      if (((*(uint64_t (**)(uint64_t))(*(void *)result + 472LL))(result) & 1) == 0)
      {
        uint64_t result = *(void *)(v2 + 1200);
        if (result && (result & 7) == 0)
        {
          return sub_10009D5C0(v2, a2);
        }

        goto LABEL_18;
      }

      return 0LL;
    }

uint64_t sub_10009BBAC(uint64_t result, uint64_t a2)
{
  if (result)
  {
    uint64_t v2 = result;
    if ((result & 7) == 0)
    {
      unsigned int v3 = *(_DWORD *)(result + 1216);
      if (v3 < 4)
      {
        if (v3 == 2) {
          return 0LL;
        }
        uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 120LL))(a2);
        unsigned int v6 = *(_DWORD *)(v2 + 1216);
        if (v6 <= 3)
        {
          uint64_t v7 = result;
          (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)a2 + 112LL))(a2, 1LL, v6 == 2);
          uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 408LL))(a2);
          unsigned int v8 = *(_DWORD *)(v2 + 1216);
          if (v8 <= 3)
          {
            uint64_t v4 = result;
            (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)a2 + 112LL))(a2, v7, v8 == 2);
            return v4;
          }
        }
      }

      __break(0x550Au);
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_10009BC80(uint64_t result, uint64_t a2)
{
  if (!result || (uint64_t v2 = result, (result & 7) != 0) || (result = sub_1000438B8()) == 0 || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_14;
  }

  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 80LL))(result);
  if ((_DWORD)result)
  {
    unsigned int v4 = *(_DWORD *)(v2 + 1216);
    if (v4 >= 4)
    {
LABEL_14:
      __break(0x550Au);
      return result;
    }

    if (v4 == 2) {
      return (*(uint64_t (**)(uint64_t))(*(void *)a2 + 432LL))(a2);
    }
  }

  unsigned int v5 = *(_DWORD *)(v2 + 1216);
  if (v5 > 3) {
    goto LABEL_14;
  }
  if (v5 == 2) {
    return 0LL;
  }
  else {
    return sub_10009D678(v2, a2);
  }
}

uint64_t sub_10009BD2C(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_8;
  }

  unsigned int v2 = *(_DWORD *)(result + 1216);
  if (v2 >= 4)
  {
LABEL_8:
    __break(0x550Au);
    return result;
  }

  if (v2 == 2) {
    return 0LL;
  }
  else {
    return (*(uint64_t (**)(uint64_t))(*(void *)a2 + 632LL))(a2);
  }
}

uint64_t sub_10009BD6C(uint64_t result, uint64_t a2)
{
  if (!result || (uint64_t v2 = result, (result & 7) != 0) || (result = sub_1000438B8()) == 0 || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_14;
  }

  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 80LL))(result);
  if ((_DWORD)result)
  {
    unsigned int v4 = *(_DWORD *)(v2 + 1216);
    if (v4 >= 4)
    {
LABEL_14:
      __break(0x550Au);
      return result;
    }

    if (v4 == 2) {
      return (*(uint64_t (**)(uint64_t))(*(void *)a2 + 440LL))(a2);
    }
  }

  unsigned int v5 = *(_DWORD *)(v2 + 1216);
  if (v5 > 3) {
    goto LABEL_14;
  }
  if (v5 == 2) {
    return 0LL;
  }
  else {
    return sub_10009D730(v2, a2);
  }
}

void sub_10009BE18(uint64_t a1, uint64_t a2, int a3, int a4, std::string *a5)
{
  if (!a1 || (a1 & 7) != 0)
  {
LABEL_81:
    __break(0x5516u);
LABEL_82:
    __break(0x5513u);
  }

  else
  {
    uint64_t v9 = sub_10002CD78();
    memset(&__str, 0, sizeof(__str));
    if (a4 >= 1)
    {
      uint64_t v10 = v9;
      int v11 = 0;
      BOOL v13 = (v9 & 7) == 0 && v9 != 0;
      do
      {
        int v14 = a3 + v11;
        if (__OFADD__(a3, v11))
        {
          __break(0x5500u);
          goto LABEL_81;
        }

        if (v14 <= 11)
        {
          int v15 = sub_10009A65C(a1, a3 + v11);
          __int128 v16 = "";
          if (v15)
          {
            switch(v14)
            {
              case 1:
                if (!v13) {
                  goto LABEL_81;
                }
                (*(void (**)(uint64_t, uint64_t, std::string *))(*(void *)v10 + 88LL))( v10,  1376267LL,  &__str);
                std::string::size_type size = __str.__r_.__value_.__s.__size_;
                if ((__str.__r_.__value_.__s.__size_ & 0x80u) != 0) {
                  std::string::size_type size = __str.__r_.__value_.__l.__size_;
                }
                if (size) {
                  goto LABEL_71;
                }
                __int128 v16 = "Playlists";
                break;
              case 2:
                if (!v13) {
                  goto LABEL_81;
                }
                (*(void (**)(uint64_t, uint64_t, std::string *))(*(void *)v10 + 88LL))( v10,  1376268LL,  &__str);
                std::string::size_type v18 = __str.__r_.__value_.__s.__size_;
                if ((__str.__r_.__value_.__s.__size_ & 0x80u) != 0) {
                  std::string::size_type v18 = __str.__r_.__value_.__l.__size_;
                }
                if (v18) {
                  goto LABEL_71;
                }
                __int128 v16 = "Artists";
                break;
              case 3:
                if (!v13) {
                  goto LABEL_81;
                }
                (*(void (**)(uint64_t, uint64_t, std::string *))(*(void *)v10 + 88LL))( v10,  1376269LL,  &__str);
                std::string::size_type v19 = __str.__r_.__value_.__s.__size_;
                if ((__str.__r_.__value_.__s.__size_ & 0x80u) != 0) {
                  std::string::size_type v19 = __str.__r_.__value_.__l.__size_;
                }
                if (v19) {
                  goto LABEL_71;
                }
                __int128 v16 = "Albums";
                break;
              case 4:
                if (!v13) {
                  goto LABEL_81;
                }
                (*(void (**)(uint64_t, uint64_t, std::string *))(*(void *)v10 + 88LL))( v10,  1376271LL,  &__str);
                std::string::size_type v20 = __str.__r_.__value_.__s.__size_;
                if ((__str.__r_.__value_.__s.__size_ & 0x80u) != 0) {
                  std::string::size_type v20 = __str.__r_.__value_.__l.__size_;
                }
                if (v20) {
                  goto LABEL_71;
                }
                __int128 v16 = "Genres";
                break;
              case 5:
                if (!v13) {
                  goto LABEL_81;
                }
                (*(void (**)(uint64_t, uint64_t, std::string *))(*(void *)v10 + 88LL))( v10,  1376270LL,  &__str);
                std::string::size_type v21 = __str.__r_.__value_.__s.__size_;
                if ((__str.__r_.__value_.__s.__size_ & 0x80u) != 0) {
                  std::string::size_type v21 = __str.__r_.__value_.__l.__size_;
                }
                if (v21) {
                  goto LABEL_71;
                }
                __int128 v16 = "Songs";
                break;
              case 6:
                if (!v13) {
                  goto LABEL_81;
                }
                (*(void (**)(uint64_t, uint64_t, std::string *))(*(void *)v10 + 88LL))( v10,  1376272LL,  &__str);
                std::string::size_type v22 = __str.__r_.__value_.__s.__size_;
                if ((__str.__r_.__value_.__s.__size_ & 0x80u) != 0) {
                  std::string::size_type v22 = __str.__r_.__value_.__l.__size_;
                }
                if (v22) {
                  goto LABEL_71;
                }
                __int128 v16 = "Composers";
                break;
              case 7:
                if (!v13) {
                  goto LABEL_81;
                }
                (*(void (**)(uint64_t, uint64_t, std::string *))(*(void *)v10 + 88LL))( v10,  1376273LL,  &__str);
                std::string::size_type v23 = __str.__r_.__value_.__s.__size_;
                if ((__str.__r_.__value_.__s.__size_ & 0x80u) != 0) {
                  std::string::size_type v23 = __str.__r_.__value_.__l.__size_;
                }
                if (v23) {
                  goto LABEL_71;
                }
                __int128 v16 = "Audiobooks";
                break;
              case 8:
                if (!v13) {
                  goto LABEL_81;
                }
                (*(void (**)(uint64_t, uint64_t, std::string *))(*(void *)v10 + 88LL))( v10,  1376274LL,  &__str);
                std::string::size_type v24 = __str.__r_.__value_.__s.__size_;
                if ((__str.__r_.__value_.__s.__size_ & 0x80u) != 0) {
                  std::string::size_type v24 = __str.__r_.__value_.__l.__size_;
                }
                if (v24) {
                  goto LABEL_71;
                }
                __int128 v16 = "Podcasts";
                break;
              case 9:
                if (!v13) {
                  goto LABEL_81;
                }
                (*(void (**)(uint64_t, uint64_t, std::string *))(*(void *)v10 + 88LL))( v10,  1376275LL,  &__str);
                std::string::size_type v25 = __str.__r_.__value_.__s.__size_;
                if ((__str.__r_.__value_.__s.__size_ & 0x80u) != 0) {
                  std::string::size_type v25 = __str.__r_.__value_.__l.__size_;
                }
                if (v25) {
                  goto LABEL_71;
                }
                __int128 v16 = "Nested Playlists";
                break;
              case 10:
                if (!v13) {
                  goto LABEL_81;
                }
                (*(void (**)(uint64_t, uint64_t, std::string *))(*(void *)v10 + 88LL))( v10,  1376266LL,  &__str);
                std::string::size_type v26 = __str.__r_.__value_.__s.__size_;
                if ((__str.__r_.__value_.__s.__size_ & 0x80u) != 0) {
                  std::string::size_type v26 = __str.__r_.__value_.__l.__size_;
                }
                if (v26) {
                  goto LABEL_71;
                }
                __int128 v16 = "Genius Mix";
                break;
              case 11:
                if (!v13) {
                  goto LABEL_81;
                }
                (*(void (**)(uint64_t, uint64_t, std::string *))(*(void *)v10 + 88LL))( v10,  1376276LL,  &__str);
                std::string::size_type v27 = __str.__r_.__value_.__s.__size_;
                if ((__str.__r_.__value_.__s.__size_ & 0x80u) != 0) {
                  std::string::size_type v27 = __str.__r_.__value_.__l.__size_;
                }
                if (v27) {
                  goto LABEL_71;
                }
                __int128 v16 = "iTunesU";
                break;
              default:
                __int128 v16 = "";
                break;
            }
          }

          std::string::assign(&__str, v16);
LABEL_71:
          unint64_t v28 = a5->__r_.__value_.__l.__size_;
          if (v28 >= a5->__r_.__value_.__l.__cap_)
          {
            uint64_t v29 = sub_10009EDE8(a5, &__str);
          }

          else
          {
            sub_10009ED7C((uint64_t)a5, &__str);
            if (v28 >= 0xFFFFFFFFFFFFFFE8LL) {
              goto LABEL_82;
            }
            uint64_t v29 = (std::string *)(v28 + 24);
          }

          a5->__r_.__value_.__l.__size_ = (std::string::size_type)v29;
        }

        ++v11;
      }

      while (a4 != v11);
    }
  }

void sub_10009C264(uint64_t a1, uint64_t a2, unsigned int a3, signed int a4, std::string *a5)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_34;
  }
  unsigned int v5 = *(_DWORD *)(a1 + 1216);
  if (v5 >= 4)
  {
LABEL_35:
    __break(0x550Au);
    goto LABEL_36;
  }

  if (v5 == 1)
  {
    sub_10009C400(a1, a2, a3, a4, a5);
    return;
  }

  uint64_t v9 = sub_1000438B8();
  if (!v9 || (v9 & 7) != 0) {
    goto LABEL_34;
  }
  if (!(*(unsigned int (**)(uint64_t))(*(void *)v9 + 80LL))(v9))
  {
    if (a3) {
      return;
    }
    uint64_t v14 = sub_10004783C();
    if (v14 && (v14 & 7) == 0)
    {
      (*(void (**)(std::string *__return_ptr))(*(void *)v14 + 88LL))(&__p);
      unint64_t size = a5->__r_.__value_.__l.__size_;
      if (size >= a5->__r_.__value_.__l.__cap_)
      {
        __int128 v16 = sub_100024640(a5, &__p);
      }

      else
      {
        sub_1000245B0(a5, &__p);
        if (size >= 0xFFFFFFFFFFFFFFE8LL)
        {
LABEL_36:
          __break(0x5513u);
          return;
        }

        __int128 v16 = (std::string *)(size + 24);
      }

      a5->__r_.__value_.__l.__size_ = (std::string::size_type)v16;
      return;
    }

void sub_10009C400(uint64_t a1, uint64_t a2, unsigned int a3, unsigned int a4, std::string *a5)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_17;
  }
  if ((a3 & 0x80000000) != 0 || !a4)
  {
    sub_1000CEAEC( 0,  4,  "%s:%d Invalid startIndex(%d) or count(%d)!\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoRemoteUI.cpp",  9569,  a3,  a4);
    return;
  }

  unint64_t v8 = (__PAIR64__(a4, a3) - 1) >> 32;
  sub_1000340CC((uint64_t)a5);
  if ((_DWORD)v8)
  {
    if (a3) {
      uint64_t v9 = a3 - 1;
    }
    else {
      uint64_t v9 = 0LL;
    }
    (*(void (**)(uint64_t, uint64_t, unint64_t, std::string *))(*(void *)a2 + 472LL))(a2, v9, v8, a5);
  }

  if (!a3)
  {
    int v10 = (const std::string *)a5->__r_.__value_.__r.__words[0];
    uint64_t v11 = sub_10004783C();
    if (v11 && (v11 & 7) == 0)
    {
      (*(void (**)(std::string *__return_ptr))(*(void *)v11 + 88LL))(&__p);
      sub_10009D8A8(a5, v10, &__p);
      return;
    }

void sub_10009C4F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_8;
  }

  unsigned int v5 = *(_DWORD *)(a1 + 1216);
  if (v5 >= 4)
  {
LABEL_8:
    __break(0x550Au);
    return;
  }

  if (v5 == 1) {
    sub_10009C528(a1, a2, a3, a4, a5);
  }
}

void sub_10009C528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    sub_1000340CC(a5);
    if ((a3 & 0x80000000) != 0 || !(_DWORD)a4) {
      sub_1000CEAEC( 0,  4,  "%s:%d Invalid startIndex(%d) or count(%d)!\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoRemoteUI.cpp",  9606,  a3,  a4);
    }
    else {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a2 + 480LL))(a2, a3, a4, a5);
    }
  }

void sub_10009C5D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, std::string *a5)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_21;
  }
  unsigned int v6 = *(_DWORD *)(a1 + 1216);
  if (v6 >= 4) {
    goto LABEL_20;
  }
  if (v6 == 1)
  {
    uint64_t v11 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 120LL))(a2);
    unsigned int v12 = *(_DWORD *)(a1 + 1216);
    if (v12 <= 3)
    {
      uint64_t v13 = v11;
      (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)a2 + 112LL))(a2, 1LL, v12 == 2);
      (*(void (**)(uint64_t, uint64_t, uint64_t, std::string *))(*(void *)a2 + 496LL))(a2, a3, a4, a5);
      unsigned int v14 = *(_DWORD *)(a1 + 1216);
      if (v14 <= 3)
      {
        (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)a2 + 112LL))(a2, v13, v14 == 2);
        return;
      }
    }

void sub_10009C7BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, std::string *a5)
{
  if (!a1 || (a1 & 7) != 0 || (uint64_t v6 = sub_10002CD78(), memset(&__str, 0, sizeof(__str)), !v6) || (v6 & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_17;
  }

  (*(void (**)(uint64_t, uint64_t, std::string *))(*(void *)v6 + 88LL))(v6, 1376258LL, &__str);
  std::string::size_type size = __str.__r_.__value_.__s.__size_;
  if ((__str.__r_.__value_.__s.__size_ & 0x80u) != 0) {
    std::string::size_type size = __str.__r_.__value_.__l.__size_;
  }
  if (!size) {
    std::string::assign(&__str, "All");
  }
  unint64_t v8 = a5->__r_.__value_.__l.__size_;
  if (v8 < a5->__r_.__value_.__l.__cap_)
  {
    sub_10009ED7C((uint64_t)a5, &__str);
    if (v8 < 0xFFFFFFFFFFFFFFE8LL)
    {
      uint64_t v9 = (std::string *)(v8 + 24);
      goto LABEL_13;
    }

uint64_t sub_10009C88C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (result)
  {
    uint64_t v5 = result;
    if ((result & 7) == 0)
    {
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 120LL))(a2);
      unsigned int v10 = *(_DWORD *)(v5 + 1216);
      if (v10 < 4)
      {
        uint64_t v11 = result;
        (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)a2 + 112LL))(a2, 1LL, v10 == 2);
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a2 + 544LL))(a2, a3, a4, a5);
        unsigned int v12 = *(_DWORD *)(v5 + 1216);
        if (v12 <= 3) {
          return (*(uint64_t (**)(uint64_t, uint64_t, BOOL))(*(void *)a2 + 112LL))(a2, v11, v12 == 2);
        }
      }

      __break(0x550Au);
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_10009C958(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!result || (uint64_t v5 = result, (result & 7) != 0) || (result = sub_1000438B8()) == 0 || (result & 7) != 0)
  {
    __break(0x5516u);
LABEL_11:
    __break(0x550Au);
    return result;
  }

  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 72LL))(result);
  if ((_DWORD)result)
  {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 120LL))(a2);
    unsigned int v10 = *(_DWORD *)(v5 + 1216);
    if (v10 < 4)
    {
      uint64_t v11 = result;
      (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)a2 + 112LL))(a2, 1LL, v10 == 2);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a2 + 552LL))(a2, a3, a4, a5);
      unsigned int v12 = *(_DWORD *)(v5 + 1216);
      if (v12 <= 3) {
        return (*(uint64_t (**)(uint64_t, uint64_t, BOOL))(*(void *)a2 + 112LL))(a2, v11, v12 == 2);
      }
    }

    goto LABEL_11;
  }

  return result;
}

void sub_10009CA58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, std::string *a5)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_37;
  }
  unsigned int v6 = *(_DWORD *)(a1 + 1216);
  if (v6 >= 4)
  {
LABEL_36:
    __break(0x550Au);
    goto LABEL_37;
  }

  if (v6 == 1)
  {
    uint64_t v11 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 120LL))(a2);
    unsigned int v12 = *(_DWORD *)(a1 + 1216);
    if (v12 <= 3)
    {
      uint64_t v13 = v11;
      (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)a2 + 112LL))(a2, 1LL, v12 == 2);
      (*(void (**)(uint64_t, uint64_t, uint64_t, std::string *))(*(void *)a2 + 504LL))(a2, a3, a4, a5);
      unsigned int v14 = *(_DWORD *)(a1 + 1216);
      if (v14 <= 3)
      {
        (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)a2 + 112LL))(a2, v13, v14 == 2);
        return;
      }
    }

    goto LABEL_36;
  }

  uint64_t v15 = sub_1000438B8();
  if (!v15 || (v15 & 7) != 0) {
LABEL_37:
  }
    __break(0x5516u);
  int v16 = (*(uint64_t (**)(uint64_t))(*(void *)v15 + 80LL))(v15);
  unsigned int v20 = *(_DWORD *)(a1 + 1404);
  if (!v16)
  {
    if (v20 > 5 || v20 == 2) {
      return;
    }
LABEL_33:
    sub_10009C7BC(a1, v17, v18, v19, a5);
    return;
  }

  if (v20 > 5)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, std::string *))(*(void *)a2 + 504LL))(a2, a3, a4, a5);
    return;
  }

  if (v20 != 2) {
    goto LABEL_33;
  }
  memset(&__str, 0, sizeof(__str));
  uint64_t v21 = sub_10002CD78();
  if (!v21 || (v21 & 7) != 0) {
    goto LABEL_37;
  }
  (*(void (**)(uint64_t, uint64_t, std::string *))(*(void *)v21 + 88LL))(v21, 1376265LL, &__str);
  std::string::size_type size = __str.__r_.__value_.__s.__size_;
  if ((__str.__r_.__value_.__s.__size_ & 0x80u) != 0) {
    std::string::size_type size = __str.__r_.__value_.__l.__size_;
  }
  if (!size) {
    std::string::assign(&__str, "Season");
  }
  if ((int)a4 < 1)
  {
LABEL_29:
  }

  else
  {
    int v23 = 0;
    while (1)
    {
      memset(__s, 170, 20);
      memset(&v27, 170, sizeof(v27));
      std::string::basic_string(&v27, &__str);
      if (__OFADD__((_DWORD)a3, v23)) {
        break;
      }
      int v24 = (*(uint64_t (**)(uint64_t, void))(*(void *)a2 + 464LL))(a2, (a3 + v23));
      snprintf(__s, 0x14uLL, " %d", v24);
      std::string::append(&v27, __s);
      unint64_t v25 = a5->__r_.__value_.__l.__size_;
      if (v25 >= a5->__r_.__value_.__l.__cap_)
      {
        std::string::size_type v26 = sub_10009EDE8(a5, &v27);
      }

      else
      {
        sub_10009ED7C((uint64_t)a5, &v27);
        if (v25 >= 0xFFFFFFFFFFFFFFE8LL) {
          goto LABEL_39;
        }
        std::string::size_type v26 = (std::string *)(v25 + 24);
      }

      a5->__r_.__value_.__l.__size_ = (std::string::size_type)v26;
      if ((_DWORD)a4 == ++v23) {
        goto LABEL_29;
      }
    }

    __break(0x5500u);
LABEL_39:
    __break(0x5513u);
  }

void sub_10009CD9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, std::string *a5)
{
  if (!a1 || (a1 & 7) != 0)
  {
LABEL_63:
    __break(0x5516u);
LABEL_64:
    __break(0x5500u);
LABEL_65:
    __break(0x5513u);
    goto LABEL_66;
  }

  unsigned int v6 = *(_DWORD *)(a1 + 1216);
  if (v6 >= 4)
  {
LABEL_66:
    __break(0x550Au);
    return;
  }

  if (v6 == 1)
  {
    uint64_t v11 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 120LL))(a2);
    unsigned int v12 = *(_DWORD *)(a1 + 1216);
    if (v12 <= 3)
    {
      uint64_t v13 = v11;
      (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)a2 + 112LL))(a2, 1LL, v12 == 2);
      (*(void (**)(uint64_t, uint64_t, uint64_t, std::string *))(*(void *)a2 + 512LL))(a2, a3, a4, a5);
      unsigned int v14 = *(_DWORD *)(a1 + 1216);
      if (v14 <= 3)
      {
        (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)a2 + 112LL))(a2, v13, v14 == 2);
        return;
      }
    }

    goto LABEL_66;
  }

  uint64_t v15 = sub_10002CD78();
  if ((int)a4 >= 1)
  {
    uint64_t v16 = v15;
    int v17 = 0;
    BOOL v19 = (v15 & 7) == 0 && v15 != 0;
    while (2)
    {
      memset(&__str, 0, sizeof(__str));
      if (!__OFADD__((_DWORD)a3, v17))
      {
        switch((_DWORD)a3 + v17)
        {
          case 0:
            if (!v19) {
              goto LABEL_63;
            }
            (*(void (**)(uint64_t, uint64_t, std::string *))(*(void *)v16 + 88LL))(v16, 1376259LL, &__str);
            std::string::size_type size = __str.__r_.__value_.__s.__size_;
            if ((__str.__r_.__value_.__s.__size_ & 0x80u) != 0) {
              std::string::size_type size = __str.__r_.__value_.__l.__size_;
            }
            if (size) {
              goto LABEL_51;
            }
            uint64_t v21 = "Movies";
            goto LABEL_50;
          case 1:
            if (!v19) {
              goto LABEL_63;
            }
            (*(void (**)(uint64_t, uint64_t, std::string *))(*(void *)v16 + 88LL))(v16, 1376261LL, &__str);
            std::string::size_type v22 = __str.__r_.__value_.__s.__size_;
            if ((__str.__r_.__value_.__s.__size_ & 0x80u) != 0) {
              std::string::size_type v22 = __str.__r_.__value_.__l.__size_;
            }
            if (v22) {
              goto LABEL_51;
            }
            uint64_t v21 = "Music Videos";
            goto LABEL_50;
          case 2:
            if (!v19) {
              goto LABEL_63;
            }
            (*(void (**)(uint64_t, uint64_t, std::string *))(*(void *)v16 + 88LL))(v16, 1376260LL, &__str);
            std::string::size_type v23 = __str.__r_.__value_.__s.__size_;
            if ((__str.__r_.__value_.__s.__size_ & 0x80u) != 0) {
              std::string::size_type v23 = __str.__r_.__value_.__l.__size_;
            }
            if (v23) {
              goto LABEL_51;
            }
            uint64_t v21 = "TV Shows";
            goto LABEL_50;
          case 3:
            if (!v19) {
              goto LABEL_63;
            }
            (*(void (**)(uint64_t, uint64_t, std::string *))(*(void *)v16 + 88LL))(v16, 1376262LL, &__str);
            std::string::size_type v24 = __str.__r_.__value_.__s.__size_;
            if ((__str.__r_.__value_.__s.__size_ & 0x80u) != 0) {
              std::string::size_type v24 = __str.__r_.__value_.__l.__size_;
            }
            if (v24) {
              goto LABEL_51;
            }
            uint64_t v21 = "Video Podcasts";
            goto LABEL_50;
          case 4:
            if (!v19) {
              goto LABEL_63;
            }
            (*(void (**)(uint64_t, uint64_t, std::string *))(*(void *)v16 + 88LL))(v16, 1376264LL, &__str);
            std::string::size_type v25 = __str.__r_.__value_.__s.__size_;
            if ((__str.__r_.__value_.__s.__size_ & 0x80u) != 0) {
              std::string::size_type v25 = __str.__r_.__value_.__l.__size_;
            }
            if (v25) {
              goto LABEL_51;
            }
            uint64_t v21 = "Rentals";
            goto LABEL_50;
          case 5:
            uint64_t v26 = sub_1000438B8();
            if (!v26 || (v26 & 7) != 0) {
              goto LABEL_63;
            }
            if (!v19) {
              goto LABEL_63;
            }
            (*(void (**)(uint64_t, uint64_t, std::string *))(*(void *)v16 + 88LL))(v16, 1376263LL, &__str);
            std::string::size_type v27 = __str.__r_.__value_.__s.__size_;
            if ((__str.__r_.__value_.__s.__size_ & 0x80u) != 0) {
              std::string::size_type v27 = __str.__r_.__value_.__l.__size_;
            }
            if (!v27)
            {
              uint64_t v21 = "Video ITunesU";
LABEL_50:
              std::string::assign(&__str, v21);
            }

uint64_t sub_10009D124(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a2 + 488LL))(a2, a3, a4, a5);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_10009D150(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (result)
  {
    uint64_t v5 = result;
    if ((result & 7) == 0)
    {
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 120LL))(a2);
      unsigned int v10 = *(_DWORD *)(v5 + 1216);
      if (v10 < 4)
      {
        uint64_t v11 = result;
        (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)a2 + 112LL))(a2, 1LL, v10 == 2);
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a2 + 520LL))(a2, a3, a4, a5);
        unsigned int v12 = *(_DWORD *)(v5 + 1216);
        if (v12 <= 3) {
          return (*(uint64_t (**)(uint64_t, uint64_t, BOOL))(*(void *)a2 + 112LL))(a2, v11, v12 == 2);
        }
      }

      __break(0x550Au);
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_10009D21C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (result)
  {
    uint64_t v5 = result;
    if ((result & 7) == 0)
    {
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 120LL))(a2);
      unsigned int v10 = *(_DWORD *)(v5 + 1216);
      if (v10 < 4)
      {
        uint64_t v11 = result;
        (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)a2 + 112LL))(a2, 1LL, v10 == 2);
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a2 + 536LL))(a2, a3, a4, a5);
        unsigned int v12 = *(_DWORD *)(v5 + 1216);
        if (v12 <= 3) {
          return (*(uint64_t (**)(uint64_t, uint64_t, BOOL))(*(void *)a2 + 112LL))(a2, v11, v12 == 2);
        }
      }

      __break(0x550Au);
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_10009D2E8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!result || (uint64_t v5 = result, (result & 7) != 0) || (result = sub_1000438B8()) == 0 || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_11;
  }

  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 64LL))(result);
  if (!(_DWORD)result) {
    return result;
  }
  unsigned int v10 = *(_DWORD *)(v5 + 1216);
  if (v10 >= 4)
  {
LABEL_11:
    __break(0x550Au);
    return result;
  }

  if (v10 == 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a2 + 560LL))(a2, a3, a4, a5);
  }
  return result;
}

uint64_t sub_10009D398(uint64_t result, uint64_t a2)
{
  if (result)
  {
    uint64_t v2 = result;
    if ((result & 7) == 0)
    {
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 120LL))(a2);
      unsigned int v4 = *(_DWORD *)(v2 + 1216);
      if (v4 < 4)
      {
        uint64_t v5 = result;
        (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)a2 + 112LL))(a2, 1LL, v4 == 2);
        uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 360LL))(a2);
        unsigned int v6 = *(_DWORD *)(v2 + 1216);
        if (v6 <= 3)
        {
          uint64_t v7 = result;
          (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)a2 + 112LL))(a2, v5, v6 == 2);
          return v7;
        }
      }

      __break(0x550Au);
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_10009D450(uint64_t result, uint64_t a2)
{
  if (result)
  {
    uint64_t v2 = result;
    if ((result & 7) == 0)
    {
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 120LL))(a2);
      unsigned int v4 = *(_DWORD *)(v2 + 1216);
      if (v4 < 4)
      {
        uint64_t v5 = result;
        (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)a2 + 112LL))(a2, 1LL, v4 == 2);
        uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 368LL))(a2);
        unsigned int v6 = *(_DWORD *)(v2 + 1216);
        if (v6 <= 3)
        {
          uint64_t v7 = result;
          (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)a2 + 112LL))(a2, v5, v6 == 2);
          return v7;
        }
      }

      __break(0x550Au);
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_10009D508(uint64_t result, uint64_t a2)
{
  if (result)
  {
    uint64_t v2 = result;
    if ((result & 7) == 0)
    {
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 120LL))(a2);
      unsigned int v4 = *(_DWORD *)(v2 + 1216);
      if (v4 < 4)
      {
        uint64_t v5 = result;
        (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)a2 + 112LL))(a2, 1LL, v4 == 2);
        uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 376LL))(a2);
        unsigned int v6 = *(_DWORD *)(v2 + 1216);
        if (v6 <= 3)
        {
          uint64_t v7 = result;
          (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)a2 + 112LL))(a2, v5, v6 == 2);
          return v7;
        }
      }

      __break(0x550Au);
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_10009D5C0(uint64_t result, uint64_t a2)
{
  if (result)
  {
    uint64_t v2 = result;
    if ((result & 7) == 0)
    {
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 120LL))(a2);
      unsigned int v4 = *(_DWORD *)(v2 + 1216);
      if (v4 < 4)
      {
        uint64_t v5 = result;
        (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)a2 + 112LL))(a2, 1LL, v4 == 2);
        uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 384LL))(a2);
        unsigned int v6 = *(_DWORD *)(v2 + 1216);
        if (v6 <= 3)
        {
          uint64_t v7 = result;
          (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)a2 + 112LL))(a2, v5, v6 == 2);
          return v7;
        }
      }

      __break(0x550Au);
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_10009D678(uint64_t result, uint64_t a2)
{
  if (result)
  {
    uint64_t v2 = result;
    if ((result & 7) == 0)
    {
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 120LL))(a2);
      unsigned int v4 = *(_DWORD *)(v2 + 1216);
      if (v4 < 4)
      {
        uint64_t v5 = result;
        (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)a2 + 112LL))(a2, 1LL, v4 == 2);
        uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 416LL))(a2);
        unsigned int v6 = *(_DWORD *)(v2 + 1216);
        if (v6 <= 3)
        {
          uint64_t v7 = result;
          (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)a2 + 112LL))(a2, v5, v6 == 2);
          return v7;
        }
      }

      __break(0x550Au);
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_10009D730(uint64_t result, uint64_t a2)
{
  if (result)
  {
    uint64_t v2 = result;
    if ((result & 7) == 0)
    {
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 120LL))(a2);
      unsigned int v4 = *(_DWORD *)(v2 + 1216);
      if (v4 < 4)
      {
        uint64_t v5 = result;
        (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)a2 + 112LL))(a2, 1LL, v4 == 2);
        uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 424LL))(a2);
        unsigned int v6 = *(_DWORD *)(v2 + 1216);
        if (v6 <= 3)
        {
          uint64_t v7 = result;
          (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)a2 + 112LL))(a2, v5, v6 == 2);
          return v7;
        }
      }

      __break(0x550Au);
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_10009D7E8(uint64_t result, int a2)
{
  if (!result || a2 != 9)
  {
    __break(0x5518u);
LABEL_16:
    __break(0x5516u);
    goto LABEL_17;
  }

  uint64_t v2 = result;
  uint64_t result = sub_1000438B8();
  if (!result) {
    goto LABEL_16;
  }
  if ((result & 7) != 0) {
    goto LABEL_16;
  }
  int v3 = (*(uint64_t (**)(uint64_t))(*(void *)result + 80LL))(result);
  int v4 = dword_10011B6C4;
  uint64_t result = sub_1000438B8();
  if (!result || (result & 7) != 0) {
    goto LABEL_16;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 144LL))(result);
  *(_BYTE *)uint64_t v2 = 4;
  if (v2 == -1)
  {
LABEL_17:
    __break(0x5500u);
    return result;
  }

  uint64_t v5 = 0x100000000000000LL;
  if (!v3) {
    uint64_t v5 = 0LL;
  }
  if (!v4) {
    v5 |= 0x600000000000000uLL;
  }
  if ((_DWORD)result) {
    v5 |= 0x800000000000000uLL;
  }
  *(void *)(v2 + 1) = v5 | 0xE000000000000000LL;
  return 0LL;
}

std::string *sub_10009D8A8(std::string *a1, const std::string *a2, std::string *__str)
{
  if (!a1) {
    goto LABEL_23;
  }
  int v3 = a1;
  int v4 = (std::string *)a2;
  std::string::size_type v5 = a1->__r_.__value_.__r.__words[0];
  uint64_t v6 = (uint64_t)a2 - a1->__r_.__value_.__r.__words[0];
  BOOL v7 = (unint64_t)a2 >= a1->__r_.__value_.__r.__words[0];
  if (v6 < 0) {
    BOOL v7 = (unint64_t)a2 < a1->__r_.__value_.__r.__words[0];
  }
  if (!v7) {
    goto LABEL_24;
  }
  p_cap = &a1->__r_.__value_.__l.__cap_;
  if (((unint64_t)&a1->__r_.__value_.__l.__cap_ & 7) != 0)
  {
LABEL_23:
    __break(0x5516u);
LABEL_24:
    __break(0x5513u);
    goto LABEL_25;
  }

  unint64_t size = a1->__r_.__value_.__l.__size_;
  unint64_t v11 = *p_cap;
  if (size < *p_cap)
  {
    if (a2 == (const std::string *)size)
    {
      sub_1000245B0(a1, __str);
      return v4;
    }

    sub_10009EF08(a1, a2, size, (uint64_t)&a2[1]);
    if (v5 && (v4 & 7) == 0)
    {
      std::string::operator=(v4, __str);
      return v4;
    }

    goto LABEL_23;
  }

  unint64_t v12 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(size - v5) >> 3);
  unint64_t v22 = 0xAAAAAAAAAAAAAAAALL;
  *(void *)&__int128 v13 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v13 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v21[0] = v13;
  v21[1] = v13;
  BOOL v14 = __CFADD__(v12, 1LL);
  unint64_t v15 = v12 + 1;
  if (v14)
  {
LABEL_25:
    __break(0x5500u);
LABEL_26:
    sub_100024868((uint64_t)v3);
  }

  if (v15 > 0xAAAAAAAAAAAAAAALL) {
    goto LABEL_26;
  }
  uint64_t v16 = 0xAAAAAAAAAAAAAAABLL * (v6 >> 3);
  unint64_t v17 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v11 - v5) >> 3);
  unint64_t v18 = 0x5555555555555556LL * ((uint64_t)(v11 - v5) >> 3);
  if (v18 <= v15) {
    unint64_t v18 = v15;
  }
  if (v17 >= 0x555555555555555LL) {
    int64_t v19 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    int64_t v19 = v18;
  }
  sub_100024884((uint64_t)v21, v19, v16, (uint64_t)p_cap);
  sub_10009F028((unint64_t)v21, __str);
  int v4 = sub_10009F218(v3, (uint64_t)v21, v4);
  sub_100024AB0((uint64_t)v21);
  return v4;
}

void sub_10009DA34(uint64_t a1, uint64_t a2)
{
  if (!a1
    || (a1 & 7) != 0
    || !a2
    || (a2 & 7) != 0
    || (int v4 = (uint64_t *)(a2 + 32), ((a2 + 32) & 7) != 0)
    || (uint64_t v5 = *v4) == 0
    || (v5 & 7) != 0)
  {
LABEL_35:
    __break(0x5516u);
    goto LABEL_36;
  }

  unsigned int v6 = *(unsigned __int16 *)(v5 + 126);
  unsigned __int8 v10 = 0;
  if (v10 >= 2u) {
    goto LABEL_36;
  }
  if (!v10)
  {
LABEL_9:
    unsigned __int8 v7 = 2;
  }

  else if (v6 > 0x4F)
  {
    unsigned __int8 v7 = 4;
  }

  else
  {
    switch(v6)
    {
      case 0x16u:
        unsigned __int8 v8 = sub_100097350(a1, v5);
        goto LABEL_34;
      case 0x17u:
        unsigned __int8 v8 = sub_100097554(a1, v5);
        goto LABEL_34;
      case 0x18u:
        unsigned __int8 v8 = sub_100097A08(a1, v5);
        goto LABEL_34;
      case 0x19u:
        goto LABEL_27;
      case 0x1Au:
        sub_100097DF8(a1, v5, a2);
        unsigned __int8 v7 = v9;
        if (v9 == 6 || !v9) {
          uint64_t v5 = 0LL;
        }
        break;
      default:
        if (v6 == 56)
        {
          unsigned __int8 v8 = sub_10009874C(a1, v5);
        }

        else
        {
          if (v6 != 59)
          {
LABEL_27:
            unsigned __int8 v7 = 4;
            sub_1000CEAEC( 0,  4,  "%s:%d ERROR: CIapLingoRemoteUI::StartProcessRemoteUICmd Unknown CmdID: 0x%04X\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoRemoteUI.cpp",  9712,  v6);
            break;
          }

          unsigned __int8 v8 = sub_1000974F0(a1, v5);
        }

void sub_10009DC50(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0 || !a2 || (a2 & 7) != 0 || ((a2 + 20) & 3) != 0) {
    goto LABEL_28;
  }
  if (*(_WORD *)(a2 + 20) != 26)
  {
    unsigned __int8 v6 = 2;
    goto LABEL_20;
  }

  uint64_t v4 = *(void *)(a2 + 104);
  if (!v4
    || (v4 & 7) != 0
    || (((_BYTE)v4 + 8) & 7) != 0
    || (((_BYTE)v4 + 4) & 3) != 0
    || (((_BYTE)v4 + 12) & 3) != 0
    || (((_BYTE)v4 + 16) & 7) != 0
    || ((v4 + 20) & 3) != 0
    || ((v4 + 24) & 7) != 0)
  {
LABEL_28:
    __break(0x5516u);
    goto LABEL_29;
  }

  sub_100097F34( a1,  a2,  *(_DWORD *)(v4 + 8),  *(unsigned __int8 *)(v4 + 4),  *(_DWORD *)(v4 + 12),  *(_DWORD *)(v4 + 16),  *(_DWORD *)(v4 + 20),  *(void *)(v4 + 24));
  if (v5 >= 0x20) {
    goto LABEL_29;
  }
  unsigned __int8 v6 = v5;
  if (v5 && v5 != 6)
  {
LABEL_20:
    if (*(unsigned __int8 *)(a2 + 60) < 2u)
    {
      if (*(_BYTE *)(a2 + 60)) {
        return;
      }
      unsigned __int8 v7 = (uint64_t *)(a2 + 32);
      if (((a2 + 32) & 7) == 0)
      {
        uint64_t v8 = *v7;
        if (!*v7) {
          return;
        }
        if ((v8 & 7) == 0)
        {
          sub_1000ABE78( v8,  *(void *)(v8 + 8),  0,  4LL,  1,  *(_DWORD *)(v8 + 68),  v6,  *(unsigned __int16 *)(v8 + 126),  0,  255,  0LL,  0,  0,  0);
          return;
        }
      }

      goto LABEL_28;
    }

uint64_t sub_10009DDE4(uint64_t result, unint64_t a2)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_11;
  }
  uint64_t v2 = *(void *)result;
  BOOL v3 = __CFADD__(v2, 24 * a2);
  if ((unsigned __int128)((uint64_t)a2 * (__int128)24LL) >> 64 != (uint64_t)(24 * a2) >> 63 || v3)
  {
    __break(0x5513u);
  }

  else if (!v2 || (uint64_t result = v2 + 24 * a2, (result & 7) != 0))
  {
LABEL_11:
    __break(0x5516u);
LABEL_12:
    sub_10002A484(result);
  }

  return result;
}

void sub_10009DE68(uint64_t a1, int a2, uint64_t a3, void *a4, unsigned int a5)
{
  if (!a1 || (a1 & 7) != 0)
  {
LABEL_40:
    __break(0x5516u);
LABEL_41:
    __break(0x550Au);
  }

  else
  {
    int v6 = 0;
    switch(a2)
    {
      case 524289:
      case 524290:
        int v6 = 0x4000;
        goto LABEL_31;
      case 524291:
      case 524292:
        int v6 = 12288;
        goto LABEL_31;
      case 524298:
      case 524311:
        int v6 = 2308;
        goto LABEL_31;
      case 524299:
      case 524304:
        int v6 = 4096;
        goto LABEL_31;
      case 524300:
        int v6 = 224;
        goto LABEL_31;
      case 524301:
        int v6 = 3;
        goto LABEL_31;
      case 524302:
        int v6 = 2052;
        goto LABEL_31;
      case 524309:
        int v6 = 1024;
        goto LABEL_31;
      case 524312:
        int v6 = 4100;
        goto LABEL_31;
      case 524313:
        int v6 = 0;
        if (!a4 || a5 < 8) {
          goto LABEL_31;
        }
        uint64_t v7 = *(void *)(a1 + 1200);
        BOOL v9 = (v7 & 7) == 0 && v7 != 0;
        if (a3)
        {
          if (!v9) {
            goto LABEL_40;
          }
          if (!(*(unsigned int (**)(uint64_t, uint64_t, void, uint64_t))(*(void *)v7 + 296LL))( v7,  1LL,  *a4,  1LL)) {
            goto LABEL_30;
          }
          sub_100064620(a1, 0, 1);
          uint64_t v10 = a1;
          unsigned int v11 = 0;
LABEL_29:
          sub_100064620(v10, v11, 0);
LABEL_30:
          int v6 = 0;
          goto LABEL_31;
        }

        if (!v9) {
          goto LABEL_40;
        }
        int v6 = 0;
        if ((*(unsigned int (**)(uint64_t, void, void, uint64_t))(*(void *)v7 + 296LL))( v7,  0LL,  *a4,  1LL))
        {
          sub_100064620(a1, 8u, 1);
          uint64_t v10 = a1;
          unsigned int v11 = 8;
          goto LABEL_29;
        }

uint64_t sub_10009E058(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, void))(*(void *)result + 40LL))( result,  a2,  a3,  0LL,  0LL);
  }
  __break(0x5516u);
  return result;
}

void sub_10009E07C(uint64_t a1, uint64_t a2)
{
  if (!a1
    || (a1 & 7) != 0
    || !a2
    || (a2 & 7) != 0
    || (uint64_t v4 = (uint64_t *)(a2 + 32), ((a2 + 32) & 7) != 0)
    || (uint64_t v5 = *v4) == 0
    || (v5 & 7) != 0)
  {
LABEL_31:
    __break(0x5516u);
    goto LABEL_32;
  }

  unsigned int v6 = *(unsigned __int16 *)(v5 + 126);
  unsigned __int8 v9 = 0;
  if (v9 >= 2u) {
    goto LABEL_32;
  }
  if (!v9)
  {
LABEL_9:
    unsigned __int8 v7 = 2;
  }

  else if (v6 > 0x4F)
  {
    unsigned __int8 v7 = 4;
  }

  else
  {
    switch(v6)
    {
      case '<':
        unsigned __int8 v7 = sub_1000987B0(a1, v5);
        goto LABEL_10;
      case '>':
        unsigned int v8 = sub_100098AEC(a1, v5, a2);
        break;
      case '@':
        unsigned int v8 = sub_100099BCC(a1, v5, a2);
        break;
      case 'B':
        unsigned int v8 = sub_100099F04(a1, v5, a2);
        if (v8 > 0x1F) {
          goto LABEL_32;
        }
        break;
      default:
        unsigned __int8 v7 = 4;
        sub_1000CEAEC( 0,  4,  "%s:%d ERROR: CIapLingoRemoteUI::%s Unknown CmdID: 0x%04X\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoRemoteUI.cpp",  10516,  "ProcessEnhancedDBCmd",  v6);
        goto LABEL_10;
    }

    unsigned __int8 v7 = v8;
    if (v8 == 6 || !v8) {
      uint64_t v5 = 0LL;
    }
  }

uint64_t sub_10009E280(uint64_t result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0) || ((result + 8) & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t v2 = (uint64_t *)(result + 8);
    sub_100008D84(&v2);
    return v1;
  }

  return result;
}

uint64_t sub_10009E2D0(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result
    || (uint64_t v3 = result, (result & 7) != 0)
    || !a3
    || (a3 & 7) != 0
    || (result = (uint64_t)sub_10005B1F4( (dispatch_semaphore_t)result,  a2,  4,  *(_WORD *)(a3 + 126),  *(_DWORD *)(a3 + 68),  a3,  5,  0LL),  *(void *)uint64_t v3 = off_1001064C0,  !a2)
    || (a2 & 7) != 0
    || (uint64_t result = sub_1000573E0(a2, 4u), (result & 7) != 0))
  {
    __break(0x5516u);
    goto LABEL_13;
  }

  *(void *)(v3 + 96) = result;
  *(void *)(v3 + 104) = 0LL;
  *(_DWORD *)(v3 + 112) = 0;
  uint64_t result = pthread_once(&stru_10011B908, sub_1000BC260);
  if ((unint64_t)dword_10011B8F8 >= 0xFFFFFFFFFFFFFFF8LL)
  {
LABEL_13:
    __break(0x5513u);
    return result;
  }

  if (dword_10011B900) {
    *(_DWORD *)(v3 + 112) = sub_1000BC5A4();
  }
  return v3;
}

uint64_t *sub_10009E39C(uint64_t *result)
{
  return result;
}

void sub_10009E3B0(uint64_t *a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t v1 = sub_10009E5D0(a1);
    operator delete(v1);
  }

void sub_10009E3D4(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_44;
  }
  uint64_t v2 = *(void *)(a1 + 96);
  BOOL v4 = (v2 & 7) == 0 && v2 != 0;
  if (*(void *)(a1 + 104))
  {
    if (v4)
    {
      sub_10009DC50(v2, a1);
      goto LABEL_14;
    }

uint64_t *sub_10009E5D0(uint64_t *result)
{
  if (result)
  {
    uint64_t v1 = result;
    if ((result & 7) == 0)
    {
      *uint64_t result = (uint64_t)off_1001064C0;
      uint64_t result = (uint64_t *)result[13];
      if (!result) {
        return sub_10005B360(v1);
      }
      if ((result & 7) == 0)
      {
        uint64_t v2 = (void *)sub_10009EC28((uint64_t)result);
        operator delete(v2);
        v1[13] = 0LL;
        return sub_10005B360(v1);
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_10009E628()
{
  qword_10011C098 = sub_1000BC2D4(0LL, 2u, 0, "EI.ResetDBUs");
  qword_10011C0A0 = sub_1000BC2D4(0LL, 2u, 0, "EI.SelectDBUs");
  qword_10011C0A8 = sub_1000BC2D4(0LL, 2u, 0, "EI.NumberDBUs");
  qword_10011C0B0 = sub_1000BC2D4(0LL, 2u, 0, "EI.RetrieveDBUs");
  qword_10011C0B8 = sub_1000BC2D4(0LL, 2u, 0, "EI.GetDBiTunesUs");
  qword_10011C0C0 = sub_1000BC2D4(0LL, 2u, 0, "EI.GetUIDTrackUs");
  qword_10011C0C8 = sub_1000BC2D4(0LL, 2u, 0, "EI.GetDBTrackUs");
  uint64_t result = sub_1000BC2D4(0LL, 2u, 0, "EI.GetPBTrackUs");
  qword_10011C0D0 = result;
  return result;
}

uint64_t sub_10009E738(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result
    || (uint64_t v3 = result, (result & 7) != 0)
    || !a3
    || (a3 & 7) != 0
    || (result = (uint64_t)sub_10005B1F4( (dispatch_semaphore_t)result,  a2,  4,  *(_WORD *)(a3 + 126),  *(_DWORD *)(a3 + 68),  a3,  5,  0LL),  *(void *)uint64_t v3 = off_100106500,  !a2)
    || (a2 & 7) != 0
    || (uint64_t result = sub_1000573E0(a2, 4u), (result & 7) != 0))
  {
    __break(0x5516u);
    goto LABEL_13;
  }

  *(void *)(v3 + 96) = result;
  *(void *)(v3 + 104) = 0LL;
  *(_DWORD *)(v3 + 112) = 0;
  uint64_t result = pthread_once(&stru_10011B908, sub_1000BC260);
  if ((unint64_t)dword_10011B8F8 >= 0xFFFFFFFFFFFFFFF8LL)
  {
LABEL_13:
    __break(0x5513u);
    return result;
  }

  if (dword_10011B900) {
    *(_DWORD *)(v3 + 112) = sub_1000BC5A4();
  }
  return v3;
}

uint64_t *sub_10009E804(uint64_t *result)
{
  return result;
}

void sub_10009E818(uint64_t *a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t v1 = sub_10009E9B0(a1);
    operator delete(v1);
  }

uint64_t sub_10009E83C(uint64_t result)
{
  if (!result
    || (uint64_t v1 = result, (result & 7) != 0)
    || ((result = *(void *)(result + 96)) != 0 ? (BOOL v2 = (result & 7) == 0) : (BOOL v2 = 0), !v2))
  {
LABEL_28:
    __break(0x5516u);
    goto LABEL_29;
  }

  sub_10009E07C(result, v1);
  int v4 = v3;
  if (v3 == 6) {
    return v4 == 6;
  }
  uint64_t result = pthread_once(&stru_10011B908, sub_1000BC260);
  if ((unint64_t)dword_10011B8F8 >= 0xFFFFFFFFFFFFFFF8LL)
  {
LABEL_29:
    __break(0x5513u);
    goto LABEL_30;
  }

  if (!dword_10011B900) {
    return v4 == 6;
  }
  pthread_once(&stru_10011B718, (void (*)(void))sub_10009E628);
  uint64_t result = (uint64_t)sub_1000BC5A4();
  unsigned int v5 = *(_DWORD *)(v1 + 112);
  if (!v5) {
    return v4 == 6;
  }
  switch(*(_WORD *)(v1 + 20))
  {
    case '<':
      uint64_t v6 = qword_10011C0B8;
      if (!qword_10011C0B8) {
        goto LABEL_28;
      }
      break;
    case '>':
      uint64_t v6 = qword_10011C0C0;
      if (!qword_10011C0C0) {
        goto LABEL_28;
      }
      break;
    case '@':
      uint64_t v6 = qword_10011C0C8;
      if (!qword_10011C0C8) {
        goto LABEL_28;
      }
      break;
    case 'B':
      uint64_t v6 = qword_10011C0D0;
      if (!qword_10011C0D0) {
        goto LABEL_28;
      }
      break;
    default:
      return v4 == 6;
  }

  if ((v6 & 7) != 0) {
    goto LABEL_28;
  }
  uint64_t v7 = result - v5;
  if (result < v5)
  {
LABEL_30:
    __break(0x5515u);
    goto LABEL_31;
  }

  uint64_t v8 = *(unsigned int *)(v6 + 76);
  if (v8 >= 8)
  {
LABEL_31:
    __break(0x550Au);
    goto LABEL_32;
  }

  if (v8 < 4)
  {
    if (~(unint64_t)dword_10011B8F8 >= 4 * v8)
    {
      if (dword_10011B8F8[v8]) {
        (*(void (**)(uint64_t, uint64_t, void, void))(*(void *)v6 + 104LL))(v6, v7, 0LL, 0LL);
      }
      return v4 == 6;
    }

    goto LABEL_29;
  }

uint64_t *sub_10009E9B0(uint64_t *result)
{
  if (result)
  {
    uint64_t v1 = result;
    if ((result & 7) == 0)
    {
      *uint64_t result = (uint64_t)off_100106500;
      uint64_t result = (uint64_t *)result[13];
      if (!result) {
        return sub_10005B360(v1);
      }
      if ((result & 7) == 0)
      {
        operator delete(result);
        v1[13] = 0LL;
        return sub_10005B360(v1);
      }
    }
  }

  __break(0x5516u);
  return result;
}

dispatch_semaphore_t sub_10009EA04(dispatch_semaphore_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!result) {
    goto LABEL_10;
  }
  int v4 = result;
  int v6 = *(_DWORD *)(a3 + 64);
  uint64_t result = sub_10005B1F4(result, a2, v6, *(_WORD *)(a3 + 126), *(_DWORD *)(a3 + 68), a3, 5, 0LL);
  *int v4 = off_100106540;
  if (!a2 || (a2 & 7) != 0)
  {
LABEL_10:
    __break(0x5516u);
    goto LABEL_11;
  }

  unsigned int v9 = *(_DWORD *)(a3 + 64);
  if (v9 + 32 < 0x40)
  {
    v4[12] = sub_1000573E0(a2, v9);
    v4[14] = a4;
    return (dispatch_semaphore_t)v4;
  }

uint64_t *sub_10009EABC(uint64_t *result)
{
  return result;
}

void sub_10009EAD0(uint64_t *a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t v1 = sub_10009EB90(a1);
    operator delete(v1);
  }

uint64_t sub_10009EAF4(uint64_t result)
{
  if (result
    && (uint64_t v1 = result, (result & 7) == 0)
    && ((result = *(void *)(result + 96)) != 0 ? (BOOL v2 = (result & 7) == 0) : (BOOL v2 = 0),
        v2
     && (uint64_t result = sub_100063A78(result)) != 0
     && (result & 7) == 0
     && (char v3 = (*(uint64_t (**)(uint64_t, void))(*(void *)result + 624LL))(result, *(void *)(v1 + 112)),
         (uint64_t result = *(void *)(v1 + 96)) != 0)
     && (result & 7) == 0))
  {
    int v4 = *(_DWORD *)(v1 + 16);
    if ((v4 + 32) < 0x40)
    {
      sub_10006455C(result, v4, *(unsigned __int16 *)(v1 + 20), *(_DWORD *)(v1 + 24), v3 ^ 1);
      return 0LL;
    }
  }

  else
  {
    __break(0x5516u);
  }

  __break(0x550Au);
  return result;
}

uint64_t *sub_10009EB90(uint64_t *result)
{
  if (result)
  {
    uint64_t v1 = result;
    if ((result & 7) == 0)
    {
      *uint64_t result = (uint64_t)off_100106540;
      uint64_t result = (uint64_t *)result[14];
      if (!result) {
        return sub_10005B360(v1);
      }
      if ((result & 7) == 0)
      {
        (*(void (**)(uint64_t *))(*result + 8))(result);
        return sub_10005B360(v1);
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_10009EBE8(uint64_t result, __int16 a2, int a3)
{
  if (!result
    || (result & 7) != 0
    || (*(_WORD *)uint64_t result = 0, *(_WORD *)(result + 2) = a2, *(_DWORD *)(result + 4) = a3, ((result + 8) & 7) != 0)
    || (*(void *)(result + 8) = 0LL, *(void *)(result + 16) = 0LL, (((_BYTE)result + 24) & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    *(void *)(result + 24) = 0LL;
  }

  return result;
}

uint64_t sub_10009EC28(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    if ((result & 7) == 0)
    {
      BOOL v2 = *(void **)(result + 24);
      if (!v2) {
        return v1;
      }
      if ((v2 & 7) == 0)
      {
        char v3 = *(uint64_t **)(result + 24);
        sub_100025484(&v3);
        operator delete(v2);
        *(void *)(v1 + 24) = 0LL;
        return v1;
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_10009EC88(uint64_t *a1, void *a2)
{
  if (!a1) {
    goto LABEL_15;
  }
  BOOL v2 = a1;
  char v3 = a1 + 2;
  unint64_t v15 = 0xAAAAAAAAAAAAAAAALL;
  *(void *)&__int128 v4 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v4 + 1) = 0xAAAAAAAAAAAAAAAALL;
  __int128 v13 = v4;
  __int128 v14 = v4;
  uint64_t v5 = (a1[1] - *a1) >> 3;
  unint64_t v6 = v5 + 1;
  if (v5 == -1)
  {
LABEL_16:
    __break(0x5500u);
LABEL_17:
    sub_100024868((uint64_t)v2);
  }

  if (v6 >> 61) {
    goto LABEL_17;
  }
  unint64_t v8 = *v3 - *a1;
  if (v8 >> 2 > v6) {
    unint64_t v6 = v8 >> 2;
  }
  unint64_t v9 = v8 >= 0x7FFFFFFFFFFFFFF8LL ? 0x1FFFFFFFFFFFFFFFLL : v6;
  uint64_t result = sub_1000251DC((uint64_t)&v13, v9, v5, (uint64_t)v3);
  unint64_t v11 = v14;
  if (!(void)v14 || (v14 & 7) != 0)
  {
LABEL_15:
    __break(0x5516u);
    goto LABEL_16;
  }

  *(void *)__int128 v14 = *a2;
  if (v11 >= 0xFFFFFFFFFFFFFFF8LL)
  {
    __break(0x5513u);
  }

  else
  {
    *(void *)&__int128 v14 = v11 + 8;
    sub_10002511C(v2, &v13);
    uint64_t v12 = v2[1];
    sub_1000253A0((uint64_t)&v13);
    return v12;
  }

  return result;
}

uint64_t sub_10009ED7C(uint64_t result, std::string *__str)
{
  if (!result || (result & 7) != 0)
  {
LABEL_6:
    __break(0x5516u);
    goto LABEL_7;
  }

  v5[0] = result;
  char v3 = *(std::string **)(result + 8);
  if ((unint64_t)v3 < 0xFFFFFFFFFFFFFFE8LL)
  {
    __int128 v4 = v3 + 1;
    v5[2] = v3 + 1;
    result += 16LL;
    if ((result & 7) == 0)
    {
      sub_100024778(result, v3, __str);
      v5[1] = v4;
      return (uint64_t)sub_100024794(v5);
    }

    goto LABEL_6;
  }

std::string *sub_10009EDE8(std::string *a1, std::string *a2)
{
  if (!a1 || (BOOL v2 = a1, (a1 & 7) != 0) || ((unint64_t)&a1->__r_.__value_.__l.__cap_ & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_14;
  }

  unint64_t v12 = 0xAAAAAAAAAAAAAAAALL;
  *(void *)&__int128 v3 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v3 + 1) = 0xAAAAAAAAAAAAAAAALL;
  __int128 v10 = v3;
  *(_OWORD *)unint64_t v11 = v3;
  uint64_t v4 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a1->__r_.__value_.__l.__size_ - a1->__r_.__value_.__r.__words[0]) >> 3);
  unint64_t v5 = v4 + 1;
  if (v4 == -1)
  {
LABEL_14:
    __break(0x5500u);
LABEL_15:
    sub_100024868((uint64_t)v2);
  }

  if (v5 > 0xAAAAAAAAAAAAAAALL) {
    goto LABEL_15;
  }
  else {
    int64_t v7 = v5;
  }
  sub_100024884((uint64_t)&v10, v7, v4, (uint64_t)&a1->__r_.__value_.__l.__cap_);
  uint64_t result = sub_100024778((int)v2 + 16, v11[0], a2);
  if (v11[0] >= (std::string *)0xFFFFFFFFFFFFFFE8LL)
  {
    __break(0x5513u);
  }

  else
  {
    ++v11[0];
    sub_1000247C0(v2, &v10);
    std::string::size_type size = v2->__r_.__value_.__l.__size_;
    sub_100024AB0((uint64_t)&v10);
    return (std::string *)size;
  }

  return result;
}

std::string *sub_10009EF08(std::string *result, const std::string *a2, unint64_t a3, uint64_t a4)
{
  if (result)
  {
    int v4 = (int)result;
    if ((result & 7) == 0)
    {
      std::string::size_type size = (std::string *)result->__r_.__value_.__l.__size_;
      uint64_t v7 = (uint64_t)size - a4;
      BOOL v8 = __CFADD__((char *)size - a4, a2);
      BOOL v9 = (char *)a2 + (unint64_t)size - a4 >= (char *)a2;
      if (v7 < 0) {
        BOOL v9 = v8;
      }
      if (!v9) {
        goto LABEL_19;
      }
      unint64_t v11 = (const std::string *)((char *)a2 + v7);
      memset(v15, 170, sizeof(v15));
      uint64_t result = (std::string *)sub_10005F850( v15,  (uint64_t)result,  0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a3 - ((void)a2 + v7)) >> 3));
      if (a3 <= (unint64_t)v11)
      {
LABEL_17:
        sub_100024794(v15);
        return sub_10009F2EC(a2, v11, size);
      }

      int v12 = v4 + 16;
      if ((v12 & 7) == 0)
      {
        __int128 v13 = v15[1];
        __int128 v14 = (std::string *)v11;
        while (v14 && (a2 & 7) == 0)
        {
          uint64_t result = sub_100024778(v12, v13, v14);
          ++v14;
          v15[1] = ++v13;
        }
      }
    }
  }

  __break(0x5516u);
LABEL_19:
  __break(0x5513u);
  return result;
}

unint64_t sub_10009F028(unint64_t result, std::string *a2)
{
  if (!result
    || (uint64_t v2 = result, (result & 7) != 0)
    || (int v4 = (void *)(result + 16), v3 = *(void *)(result + 16), ((result + 24) & 7) != 0))
  {
LABEL_31:
    __break(0x5516u);
    goto LABEL_32;
  }

  if (v3 != *(void *)(result + 24)) {
    goto LABEL_29;
  }
  unint64_t v6 = (unint64_t *)(result + 8);
  uint64_t result = *(void *)(result + 8);
  uint64_t v7 = *(void *)v2;
  uint64_t v8 = result - *(void *)v2;
  if (result > *(void *)v2)
  {
    int64_t v9 = 0xAAAAAAAAAAAAAAABLL * (v8 >> 3);
    if (v9 >= -1) {
      uint64_t v10 = v9 + 1;
    }
    else {
      uint64_t v10 = v9 + 2;
    }
    uint64_t v11 = -(v10 >> 1);
    uint64_t v12 = -3 * (v10 >> 1);
    BOOL v13 = __CFADD__(result, 8 * v12);
    BOOL v14 = result + 8 * v12 >= result;
    if (v8 >= 24) {
      BOOL v14 = v13;
    }
    if (v14)
    {
      uint64_t v15 = 8 * v12;
      uint64_t result = (unint64_t)sub_10009F408( (std::string *)result,  *(std::string **)(v2 + 16),  (std::string *)(result + 24 * v11));
      *int v4 = v16;
      unint64_t v17 = *v6;
      BOOL v18 = __CFADD__(v15, *v6);
      BOOL v19 = v15 + *v6 >= v17;
      if (v8 >= 24) {
        BOOL v19 = v18;
      }
      if (v19)
      {
        *unint64_t v6 = v17 + 24 * v11;
        goto LABEL_29;
      }
    }

std::string *sub_10009F218(std::string *result, uint64_t a2, std::string *a3)
{
  if (!result) {
    goto LABEL_6;
  }
  uint64_t v3 = result;
  p_cap = &result->__r_.__value_.__l.__cap_;
  unint64_t v7 = *(void *)(a2 + 8);
  sub_1000249DC( (_DWORD)result + 16,  (uint64_t)a3,  (unint64_t)a3,  result->__r_.__value_.__r.__words[0],  result->__r_.__value_.__r.__words[0],  v7,  v7);
  *(void *)(a2 + 8) = v8;
  p_std::string::size_type size = &v3->__r_.__value_.__l.__size_;
  uint64_t result = sub_10009F5E4( (std::string *)&v3->__r_.__value_.__r.__words[2],  a3,  (std::string *)v3->__r_.__value_.__l.__size_,  *(std::string **)(a2 + 16));
  *(void *)(a2 + 16) = result;
  std::string::size_type v10 = v3->__r_.__value_.__r.__words[0];
  v3->__r_.__value_.__r.__words[0] = *(void *)(a2 + 8);
  *(void *)(a2 + 8) = v10;
  if (((unint64_t)&v3->__r_.__value_.__l.__size_ & 7) != 0)
  {
LABEL_6:
    __break(0x5516u);
  }

  else
  {
    std::string::size_type v11 = *p_size;
    *p_std::string::size_type size = *(void *)(a2 + 16);
    *(void *)(a2 + 16) = v11;
    std::string::size_type v12 = *p_cap;
    std::string::size_type *p_cap = *(void *)(a2 + 24);
    *(void *)(a2 + 24) = v12;
    *(void *)a2 = *(void *)(a2 + 8);
    return (std::string *)v7;
  }

  return result;
}

std::string *sub_10009F2EC(const std::string *a1, const std::string *a2, std::string *a3)
{
  uint64_t result = sub_10009F364(&var11, a1, a2, a3);
  BOOL v7 = result >= a1;
  if (!v7) {
    goto LABEL_7;
  }
  BOOL v8 = v6 >= (unint64_t)a3;
  if (!v8) {
LABEL_7:
  }
    __break(0x5513u);
  return result;
}

std::string *sub_10009F364( std::string *result, const std::string *a2, const std::string *a3, std::string *a4)
{
  if (result)
  {
    int v4 = a4;
    if (a3 == a2) {
      return (std::string *)a3;
    }
    uint64_t v7 = a4 & 7;
    BOOL v8 = a4;
    int64_t v9 = a3;
    while ((unint64_t)v9 > 0x17)
    {
      if (v7) {
        goto LABEL_12;
      }
      uint64_t result = std::string::operator=(v4, --v9);
      --v8;
      if (v9 == a2) {
        return (std::string *)a3;
      }
    }

    __break(0x5513u);
  }

std::string *sub_10009F408(std::string *__str, std::string *a2, std::string *this)
{
  uint64_t result = sub_10009F480(&var11, __str, a2, this);
  BOOL v7 = result >= __str;
  if (!v7) {
    goto LABEL_7;
  }
  BOOL v8 = v6 >= (unint64_t)this;
  if (!v8) {
LABEL_7:
  }
    __break(0x5513u);
  return result;
}

std::string *sub_10009F480(std::string *result, std::string *__str, std::string *a3, std::string *this)
{
  if (result)
  {
    int v4 = this;
    unint64_t v6 = __str;
    if (__str == a3) {
      return (std::string *)v6;
    }
    uint64_t v7 = this & 7;
    uint64_t v8 = __str & 7;
    int64_t v9 = this;
    while (v6 && !v8 && v4 && !v7)
    {
      uint64_t result = std::string::operator=(v4, v6);
      ++v6;
      ++v4;
      ++v9;
      if (v6 == a3) {
        return a3;
      }
    }
  }

  __break(0x5516u);
LABEL_14:
  __break(0x5513u);
  return result;
}

uint64_t sub_10009F528(uint64_t result, std::string *a2, uint64_t a3)
{
  if (result)
  {
    uint64_t v3 = result;
    if ((result & 7) == 0)
    {
      memset(v7, 170, sizeof(v7));
      sub_10005F8A8(v7, (void *)(result + 16), a3);
      if (v7[0] == v7[1]) {
        return (uint64_t)sub_10005A9CC(v7);
      }
      uint64_t v5 = a2 & 7;
      while (1)
      {
        uint64_t result = sub_100024960(v3);
        if (!a2 || v5) {
          break;
        }
        uint64_t result = (uint64_t)sub_100024778(result, v7[0], a2);
        if (v7[0] >= (std::string *)0xFFFFFFFFFFFFFFE8LL
          || (unint64_t v6 = v7[0] + 1, ++v7[0], (unint64_t)a2 >= 0xFFFFFFFFFFFFFFE8LL))
        {
          __break(0x5513u);
          break;
        }

        ++a2;
        if (v6 == v7[1]) {
          return (uint64_t)sub_10005A9CC(v7);
        }
      }
    }
  }

  __break(0x5516u);
  return result;
}

std::string *sub_10009F5E4(std::string *result, std::string *__str, std::string *a3, std::string *this)
{
  if (__str == a3) {
    return this;
  }
  unint64_t v6 = __str;
  int v7 = (int)result;
  uint64_t v8 = __str & 7;
  while (v6 && !v8)
  {
    uint64_t result = sub_100024778(v7, this, v6);
    ++v6;
    ++this;
    if (v6 == a3) {
      return this;
    }
  }

  __break(0x5516u);
LABEL_10:
  __break(0x5513u);
  return result;
}

uint64_t sub_10009F66C(unsigned int a1)
{
  return _os_assert_log(a1);
}

uint64_t sub_10009F674()
{
  return __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10011C080, (void *)&_mh_execute_header);
}

void sub_10009F6B8(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    if ((a1 & 7) == 0)
    {
      sub_10006107C(a1, a2, 5);
      *(void *)a1 = off_1001065E0;
      *(_DWORD *)(a1 + 1192) = -1;
      uint64_t v4 = *(void *)(a1 + 8);
      if (v4)
      {
        if ((v4 & 7) == 0)
        {
          sub_10005758C(v4, 5u, 0);
          uint64_t v5 = *(void *)(a1 + 8);
          if (v5)
          {
            if ((v5 & 7) == 0)
            {
              sub_100057538(v5, 5u, 0);
              uint64_t v6 = sub_100061274();
              if (v6)
              {
                if ((v6 & 7) == 0)
                {
                  sub_10008C5A8(v6, 5, 37, *(void *)(a1 + 8));
                  sub_1000612C4(a2);
                  if (v7)
                  {
                    if ((v7 & 7) == 0)
                    {
                      int v8 = sub_10005E878(v7, 500, a2, 5);
                      *(_DWORD *)(a1 + 1192) = v8;
                      if (v8 == -1)
                      {
                        __break(0x5518u);
                      }

                      else
                      {
                        sub_1000612C4(a2);
                        if (v9 && (v9 & 7) == 0)
                        {
                          sub_10005EB3C(v9, *(_DWORD *)(a1 + 1192));
                          return;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }

  __break(0x5516u);
}

void sub_10009F7B8(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    sub_10009F6B8(a1, a2);
  }
}

void sub_10009F7CC(uint64_t a1)
{
  if (a1
    && (a1 & 7) == 0
    && ((*(void *)a1 = off_1001065E0, sub_1000612C4(*(void *)(a1 + 8)), v2) ? (BOOL v3 = (v2 & 7) == 0) : (BOOL v3 = 0),
        v3
     && (sub_10005D014(v2, *(_DWORD *)(a1 + 1192)), *(_DWORD *)(a1 + 1192) = -1, (uint64_t v4 = sub_100061274()) != 0)
     && (v4 & 7) == 0))
  {
    sub_10008C5A8(v4, 5, 0, *(void *)(a1 + 8));
    sub_100061324(a1);
  }

  else
  {
    __break(0x5516u);
  }

void sub_10009F850(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    sub_10009F7CC(a1);
  }
}

void sub_10009F864(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    sub_10009F7CC(a1);
    operator delete(v1);
  }

void sub_10009F888(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    abort();
  }
  __break(0x5516u);
}

void sub_10009F8A8(uint64_t a1, int a2, uint64_t a3)
{
  if (!a1) {
    goto LABEL_42;
  }
  if ((a1 & 7) != 0) {
    goto LABEL_42;
  }
  uint64_t v6 = sub_100061274();
  if (!v6 || (v6 & 7) != 0) {
    goto LABEL_42;
  }
  uint64_t v7 = sub_10008C468((uint64_t *)v6, 5);
  if (!v7) {
    return;
  }
  uint64_t v8 = (uint64_t)v7;
  if (a2 == 1)
  {
    uint64_t v13 = sub_100061274();
    if (!v13 || (v13 & 7) != 0) {
      goto LABEL_42;
    }
    unsigned int v14 = sub_10008CD68(v13, v8);
    if (a3 == 5)
    {
      sub_1000612C4(*(void *)(a1 + 8));
      if (v26)
      {
        sub_1000612C4(*(void *)(a1 + 8));
        if (!v27 || (v27 & 7) != 0) {
          goto LABEL_42;
        }
        sub_10005EB3C(v27, *(_DWORD *)(a1 + 1192));
      }

      uint64_t v18 = a1;
      uint64_t v19 = v8;
      int v20 = v14;
      char v17 = 0;
      int v21 = 1;
      unsigned int v25 = 3;
LABEL_40:
      sub_10009FB28(v18, v19, v20, v17, v21, v25);
      return;
    }

    if (a3 != 1) {
      return;
    }
    sub_1000612C4(*(void *)(a1 + 8));
    if (v15)
    {
      sub_1000612C4(*(void *)(a1 + 8));
      if (!v16 || (v16 & 7) != 0) {
        goto LABEL_42;
      }
      sub_10005EB3C(v16, *(_DWORD *)(a1 + 1192));
    }

    char v17 = sub_10009FAC8(a1, v8, v14);
    uint64_t v18 = a1;
    uint64_t v19 = v8;
    int v20 = v14;
    int v21 = 0;
LABEL_34:
    unsigned int v25 = 2;
    goto LABEL_40;
  }

  if (a2 == 32)
  {
    uint64_t v22 = sub_100036FF0();
    if (*(_DWORD *)(a1 + 1192) != a3) {
      return;
    }
    if (!v22 || (v22 & 7) != 0) {
      goto LABEL_42;
    }
    uint64_t v23 = sub_100061274();
    if (!v23 || (v23 & 7) != 0)
    {
LABEL_42:
      __break(0x5516u);
      return;
    }

    unsigned int v24 = sub_10008CD68(v23, v8);
    char v17 = sub_10009FAC8(a1, v8, v24);
    uint64_t v18 = a1;
    uint64_t v19 = v8;
    int v20 = v24;
    int v21 = 1;
    goto LABEL_34;
  }

  if (a2 != 4) {
    return;
  }
  uint64_t v9 = sub_100036FF0();
  if (!v9 || (v9 & 7) != 0) {
    goto LABEL_42;
  }
  if ((*(unsigned int (**)(uint64_t))(*(void *)v9 + 416LL))(v9) == 1)
  {
    sub_1000612C4(*(void *)(a1 + 8));
    if (v10)
    {
      sub_1000612C4(*(void *)(a1 + 8));
      if (v11)
      {
        if ((v11 & 7) == 0)
        {
          sub_10005E9CC(v11, *(_DWORD *)(a1 + 1192), 500);
          sub_1000612C4(*(void *)(a1 + 8));
          if (v12)
          {
            if ((v12 & 7) == 0)
            {
              sub_10005EA88(v12, *(_DWORD *)(a1 + 1192));
              return;
            }
          }
        }
      }

      goto LABEL_42;
    }
  }

uint64_t sub_10009FAC8(uint64_t result, uint64_t a2, unsigned int a3)
{
  if (!result || (result & 7) != 0 || (uint64_t result = sub_100061274()) == 0 || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    unsigned int v5 = sub_10008CBE4(result, a2) & 0xC;
    if (v5 > 7) {
      unsigned int v6 = a3;
    }
    else {
      unsigned int v6 = 0;
    }
    if (v5 == 4) {
      return 1LL;
    }
    else {
      return v6;
    }
  }

  return result;
}

void sub_10009FB28(uint64_t a1, uint64_t a2, int a3, char a4, int a5, unsigned int a6)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_21;
  }
  if (!a2)
  {
    __break(0x5518u);
    goto LABEL_21;
  }

  uint64_t v12 = sub_100061274();
  if (!v12 || (v12 & 7) != 0) {
    goto LABEL_21;
  }
  sub_10008CC64(v12, a2, 5, a3 | a4);
  if (a6 <= 7)
  {
    if ((a2 & 7) == 0)
    {
      int v13 = (*(uint64_t (**)(uint64_t, void))(*(void *)a2 + 16LL))(a2, 0LL);
      uint64_t v14 = sub_1000ABB10(a2, 0, 5LL, a6, v13, 0LL, 0);
      if (sub_1000AB4C4(*(void *)(a1 + 8), v14, a5, 1u))
      {
LABEL_14:
        if (a3 && (a4 & 1) == 0) {
          usleep(0x186A0u);
        }
        uint64_t v18 = sub_100061274();
        if (v18 && (v18 & 7) == 0)
        {
          sub_10008CC64(v18, a2, 5, a4);
          return;
        }

        goto LABEL_21;
      }

      uint64_t v15 = *(void *)(a1 + 8);
      if (v15)
      {
        if ((v15 & 7) == 0)
        {
          sub_10005758C(v15, 5u, 1);
          uint64_t v16 = *(void *)(a1 + 8);
          if (v16)
          {
            if ((v16 & 7) == 0)
            {
              int v17 = sub_100062E0C();
              sub_100057538(v16, 5u, v17);
              goto LABEL_14;
            }
          }
        }
      }
    }

uint64_t sub_10009FC7C(uint64_t result, int a2)
{
  if (result && a2 == 9)
  {
    *(_BYTE *)uint64_t result = 5;
    if (result != -1)
    {
      *(void *)(result + 1) = 0LL;
      return 0LL;
    }
  }

  else
  {
    __break(0x5518u);
  }

  __break(0x5500u);
  return result;
}

void sub_10009FCAC(void *a1)
{
  if (a1)
  {
    uint64_t v2 = (_DWORD *)*a1;
    if (!*a1) {
      return;
    }
    unsigned int v3 = *v2;
    if (*v2 >= 8u)
    {
LABEL_22:
      __break(0x550Au);
      return;
    }

    if (v3 < 3) {
      goto LABEL_9;
    }
    if (v3 == 3)
    {
      unsigned int v6 = (void **)(v2 + 2);
      uint64_t v7 = *v6;
      if (*v6)
      {
        operator delete(v7);
      }
    }

    else if (v3 == 4)
    {
LABEL_9:
      uint64_t v4 = (void **)(v2 + 2);
      if ((v4 & 7) == 0)
      {
        if (*v4) {
          operator delete[](*v4);
        }
        goto LABEL_12;
      }

void sub_10009FD60(uint64_t a1, uint64_t a2)
{
  if (!a1) {
    goto LABEL_22;
  }
  if ((a1 & 7) != 0) {
    goto LABEL_22;
  }
  uint64_t v4 = (_BYTE *)(a1 + 4432);
  sub_10006107C(a1, a2, 2);
  *(void *)a1 = off_100106690;
  *(_BYTE *)(a1 + 4456) = 0;
  bzero((void *)(a1 + 1192), 0xCA8uLL);
  sub_1000612C4(a2);
  if (!v5 || (v5 & 7) != 0) {
    goto LABEL_22;
  }
  int v6 = sub_10005E878(v5, 50, a2, 2);
  *(_DWORD *)(a1 + 4444) = v6;
  if (v6 == -1)
  {
    __break(0x5518u);
    goto LABEL_22;
  }

  sub_1000612C4(a2);
  if (!v7) {
    goto LABEL_22;
  }
  if ((v7 & 7) != 0) {
    goto LABEL_22;
  }
  sub_10005EB3C(v7, *(_DWORD *)(a1 + 4444));
  uint64_t v8 = sub_100061274();
  if (!v8 || (v8 & 7) != 0) {
    goto LABEL_22;
  }
  sub_10008C5A8(v8, 2, 1068, *(void *)(a1 + 8));
  uint64_t v9 = sub_100025BE8();
  if (v9)
  {
    if ((v9 & 7) == 0)
    {
      (*(void (**)(uint64_t, uint64_t))(*(void *)v9 + 16LL))(v9, a1);
      goto LABEL_13;
    }

void sub_10009FEFC(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    sub_10009FD60(a1, a2);
  }
}

void sub_10009FF10(uint64_t a1)
{
  if (!a1) {
    goto LABEL_33;
  }
  if ((a1 & 7) != 0) {
    goto LABEL_33;
  }
  *(void *)a1 = off_100106690;
  std::string __p = (void *)0xAAAAAAAAAAAAAAAALL;
  __int16 v14 = -21846;
  uint64_t v2 = sub_100061274();
  if (!v2) {
    goto LABEL_33;
  }
  if ((v2 & 7) != 0) {
    goto LABEL_33;
  }
  sub_10008C5A8(v2, 2, 0, *(void *)(a1 + 8));
  sub_1000612C4(*(void *)(a1 + 8));
  if (!v3) {
    goto LABEL_33;
  }
  if ((v3 & 7) != 0) {
    goto LABEL_33;
  }
  sub_10005EB3C(v3, *(_DWORD *)(a1 + 4444));
  sub_1000612C4(*(void *)(a1 + 8));
  if (!v4 || (v4 & 7) != 0) {
    goto LABEL_33;
  }
  sub_10005D014(v4, *(_DWORD *)(a1 + 4444));
  *(_DWORD *)(a1 + 4444) = -1;
  uint64_t v5 = sub_100025BE8();
  if (v5)
  {
    if ((v5 & 7) != 0) {
      goto LABEL_33;
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)v5 + 24LL))(v5, a1);
  }

  uint64_t v6 = sub_100019C6C();
  if (!v6 || (v6 & 7) != 0) {
    goto LABEL_33;
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)v6 + 24LL))(v6, a1);
  do
  {
    __int16 v14 = -1;
    std::string __p = 0LL;
    int v7 = sub_100062E78(a1, -1, &v14, &__p, 0xFFFFu);
    if (!v7 && __p) {
      operator delete[](__p);
    }
  }

  while (!v7);
  uint64_t v8 = *(void *)(a1 + 8);
  if (!v8) {
    goto LABEL_33;
  }
  if ((v8 & 7) != 0) {
    goto LABEL_33;
  }
  uint64_t v9 = sub_10001864C(v8);
  uint64_t v10 = *(void *)(a1 + 8);
  if (!v10 || (v10 & 7) != 0) {
    goto LABEL_33;
  }
  if (sub_100057B4C(v10))
  {
    uint64_t v11 = sub_100025BE8();
    if (!v11 || (v11 & 7) != 0) {
      goto LABEL_33;
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)v11 + 104LL))(v11, v9);
  }

  uint64_t v12 = (void **)(a1 + 4528);
  if (((a1 + 4528) & 7) != 0)
  {
LABEL_33:
    __break(0x5516u);
    return;
  }

  if (*v12) {
    operator delete[](*v12);
  }
  uint64_t v13 = -3240LL;
  do
    v13 += 24LL;
  while (v13);
  sub_100061324(a1);
}

void sub_1000A00CC(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    sub_10009FF10(a1);
  }
}

void sub_1000A00E0(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    sub_10009FF10(a1);
    operator delete(v1);
  }

uint64_t sub_1000A0104(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (!result)
  {
    __break(0x5518u);
LABEL_11:
    __break(0x5516u);
    goto LABEL_12;
  }

  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_11;
  }
  sub_10005789C(result, 2u);
  uint64_t result = sub_100061274();
  if (!result || (result & 7) != 0) {
    goto LABEL_11;
  }
  uint64_t v6 = 2LL;
  uint64_t result = sub_10008C2EC(result, v3, 2u);
  if (!result)
  {
LABEL_9:
    sub_1000578E8(v3, 2u);
    return v6;
  }

  if ((result & 7) != 0) {
    goto LABEL_11;
  }
  if (a2 <= 0xFF)
  {
    sub_1000A01A8(result, a2, a3);
    uint64_t v6 = v7;
    goto LABEL_9;
  }

void sub_1000A01A8(uint64_t a1, unsigned int a2, unsigned int a3)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_86;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (!v4 || (v4 & 7) != 0) {
    goto LABEL_86;
  }
  uint64_t v8 = sub_10001864C(v4);
  if (!v8) {
    goto LABEL_85;
  }
  uint64_t v9 = v8;
  uint64_t v10 = sub_1000B6CE0();
  if (!v10 || (v10 & 7) != 0) {
    goto LABEL_86;
  }
  int v11 = sub_10008D184(v10, v9);
  if (a2 > 0xFF)
  {
LABEL_87:
    __break(0x550Au);
    goto LABEL_88;
  }

  if (a2 <= 0x86)
  {
    if ((v9 & 7) != 0) {
      goto LABEL_86;
    }
    int v12 = v11;
    int v13 = (*(uint64_t (**)(uint64_t))(*(void *)v9 + 232LL))(v9);
    int v14 = 0;
    int v15 = -1;
    unsigned int v16 = a2;
    unsigned int v17 = 0;
    int v18 = -1;
    switch(a2)
    {
      case 0u:
        int v18 = 0;
        if (v13) {
          int v15 = -134216698;
        }
        else {
          int v15 = -134217728;
        }
        unsigned int v17 = 27;
        goto LABEL_25;
      case 1u:
      case 6u:
      case 7u:
      case 8u:
      case 9u:
      case 0xAu:
      case 0xBu:
      case 0xCu:
        break;
      case 2u:
        int v14 = 1;
        unsigned int v17 = 8;
        int v15 = -256;
        int v18 = 1;
        break;
      case 3u:
        int v18 = 2;
        unsigned int v17 = 13;
        int v14 = 1;
        int v15 = -8192;
        break;
      case 4u:
        if (v13) {
          int v15 = -1047546;
        }
        else {
          int v15 = -1048576;
        }
        int v18 = 3;
        unsigned int v17 = 20;
LABEL_25:
        int v14 = 1;
        break;
      case 5u:
        int v18 = 4;
        int v14 = 1;
        int v15 = -2;
        unsigned int v17 = 1;
        break;
      case 0xDu:
        int v18 = 6;
        unsigned int v17 = 2;
        int v14 = 1;
        int v15 = -3;
        break;
      default:
        unsigned int v17 = 0;
        int v18 = -1;
        break;
    }

    if ((v15 & a3) != 0) {
      return;
    }
    v40[0] = 0xAAAAAAAAAAAAAAAALL;
    v40[1] = 0xAAAAAAAAAAAAAAAALL;
    sub_1000CE91C((uint64_t)v40, 1u);
    v40[0] = off_100103838;
    uint64_t v19 = *(void *)(a1 + 8);
    if (!v19 || (v19 & 7) != 0) {
      goto LABEL_86;
    }
    __int16 v20 = sub_100057BDC(v19);
    if (a2 || (v20 & 0x2000) == 0)
    {
LABEL_41:
      if (a2) {
        BOOL v23 = 0;
      }
      else {
        BOOL v23 = v12 == 1;
      }
      int v24 = v23;
      if (v23)
      {
        uint64_t v25 = *(void *)(a1 + 8);
        if (!v25 || (v25 & 7) != 0) {
          goto LABEL_86;
        }
        int v26 = sub_10005748C(v25, 2u);
        uint64_t v27 = 0LL;
        unsigned int v16 = 0;
      }

      else
      {
        if (__CFADD__(a1 + 1192, 24LL * a2)) {
          goto LABEL_88;
        }
        if ((((_BYTE)a1 - 88) & 7) != 0 || (((_BYTE)a1 + 24 * (_BYTE)a2 - 72) & 7) != 0) {
          goto LABEL_86;
        }
        uint64_t v27 = 24LL * a2;
        int v26 = *(_DWORD *)(a1 + v27 + 1208);
      }

      if (!__CFADD__(a1 + 1192, v27))
      {
        if ((((_BYTE)a1 - 88 + 24 * (_BYTE)v16) & 7) == 0)
        {
          unsigned int v28 = v26 ^ a3;
          sub_1000CE9E8((uint64_t)v40, (__darwin_time_t *)(a1 + 1192 + 24LL * v16));
          if (v28)
          {
            if ((((_BYTE)a1 + 24 * (_BYTE)v16 - 72) & 7) != 0) {
              goto LABEL_86;
            }
            *(_DWORD *)(a1 + 24LL * v16 + 1208) = a3;
            if (v24)
            {
              uint64_t v29 = *(void *)(a1 + 8);
              if (!v29 || (v29 & 7) != 0) {
                goto LABEL_86;
              }
              sub_100057160(v29, 2u, a3);
            }

            if (v14)
            {
              int v30 = 0;
              if (v17 <= 1) {
                int v31 = 1;
              }
              else {
                int v31 = v17;
              }
              while (1)
              {
                if ((v28 & 1) != 0)
                {
                  unint64_t v38 = 0xAAAAAAAAAAAAAAAALL;
                  uint64_t v39 = 0xAAAAAAAAAAAAAAAALL;
                  v37[0] = v18;
                  v37[1] = v30;
                  LOBYTE(v38) = a3 & 1;
                  uint64_t v32 = *(void *)(a1 + 8);
                  if (v32) {
                    BOOL v33 = (*(void *)(a1 + 8) & 7LL) == 0;
                  }
                  else {
                    BOOL v33 = 0;
                  }
                  if (!v33) {
                    goto LABEL_86;
                  }
                  uint64_t v39 = sub_10001864C(v32);
                  uint64_t v34 = *(void *)(a1 + 8);
                  if (!v34 || (v34 & 7) != 0) {
                    goto LABEL_86;
                  }
                  sub_100057A4C(v34, 2u, 0LL, (uint64_t)v37, 24);
                }

                if (v28 >= 2)
                {
                  v28 >>= 1;
                  a3 >>= 1;
                  if (v31 != ++v30) {
                    continue;
                  }
                }

                break;
              }
            }
          }

          v40[0] = off_100103838;
          sub_1000CE94C(v40);
          if (*(_DWORD *)(a1 + 4444) == -1) {
            return;
          }
          sub_1000612C4(*(void *)(a1 + 8));
          if (!v35) {
            return;
          }
          sub_1000612C4(*(void *)(a1 + 8));
          if (v36 && (v36 & 7) == 0)
          {
            sub_10005EA88(v36, *(_DWORD *)(a1 + 4444));
            return;
          }
        }

uint64_t sub_1000A0578(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_207;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_207;
  }
  if (!*(void *)(result + 8)) {
    return 89LL;
  }
  uint64_t result = sub_100061274();
  if (!result || (result & 7) != 0) {
    goto LABEL_207;
  }
  uint64_t result = *(void *)(v2 + 8);
  if (!result || (result & 7) != 0) {
    goto LABEL_207;
  }
  uint64_t result = sub_1000569F0(result);
  if ((result & 1) != 0) {
    return 89LL;
  }
  if (!a2) {
    goto LABEL_207;
  }
  if ((a2 & 7) != 0) {
    goto LABEL_207;
  }
  signed int v5 = *(unsigned __int16 *)(a2 + 126);
  uint64_t v6 = *(unsigned __int8 **)(a2 + 24);
  unsigned int v7 = *(unsigned __int16 *)(a2 + 128);
  uint64_t v41 = *(void *)(a2 + 8);
  uint64_t result = sub_1000C7D20();
  if (!result || (result & 7) != 0) {
    goto LABEL_207;
  }
  int v8 = (*(uint64_t (**)(uint64_t))(*(void *)result + 88LL))(result);
  __int16 v47 = 135;
  uint64_t result = sub_1000438B8();
  if (!v41)
  {
    __break(0x5518u);
    goto LABEL_207;
  }

  unsigned __int8 v9 = 4;
  uint64_t v4 = 2LL;
  if (v5 <= 128)
  {
    switch(v5)
    {
      case 0:
      case 2:
      case 3:
      case 4:
      case 5:
      case 13:
        if (v6)
        {
          int v10 = 0;
          int v11 = 0;
          int v12 = 0;
          switch(v7)
          {
            case 1u:
              goto LABEL_27;
            case 2u:
              goto LABEL_25;
            case 3u:
              goto LABEL_23;
            case 4u:
              int v10 = v6[3] << 24;
LABEL_23:
              int v11 = v10 | (v6[2] << 16);
LABEL_25:
              int v12 = v11 | (v6[1] << 8);
LABEL_27:
              unsigned int v13 = *v6;
              uint64_t result = sub_1000451B0();
              if (!result || (result & 7) != 0) {
                goto LABEL_207;
              }
              (*(void (**)(uint64_t, uint64_t))(*(void *)result + 160LL))(result, 3600000LL);
              LOBYTE(v14) = sub_1000A0104(*(void *)(v2 + 8), v5, v12 | v13);
              if (!v5) {
                goto LABEL_30;
              }
              goto LABEL_62;
            default:
              goto LABEL_182;
          }
        }

        goto LABEL_182;
      case 6:
        if (v7) {
          goto LABEL_182;
        }
        if (v8) {
          int v18 = 0x1000000;
        }
        else {
          int v18 = 0;
        }
        LODWORD(v42) = v18;
        sub_1000AC324(a2, v41, 0, 2LL, 7, *(_DWORD *)(a2 + 68), &v42, 4u);
        sub_1000AB4C4(*(void *)(v2 + 8), a2, 0, 1u);
        sub_1000A10A8(*(void *)(v2 + 8));
        return 0LL;
      case 8:
        char v19 = v8 ^ 1;
        if (v7 != 4) {
          char v19 = 1;
        }
        if ((v19 & 1) != 0) {
          goto LABEL_182;
        }
        if (!v6) {
          goto LABEL_207;
        }
        unsigned int v20 = *(_DWORD *)v6;
        uint64_t result = sub_1000451B0();
        if (!result || (result & 7) != 0) {
          goto LABEL_207;
        }
        (*(void (**)(uint64_t, uint64_t))(*(void *)result + 160LL))(result, 3600000LL);
        int v14 = sub_1000A1220(*(void *)(v2 + 8), 8u, bswap32(v20), 0);
        if (v14 != 25) {
          goto LABEL_62;
        }
LABEL_30:
        sub_1000AD43C(a2);
        return 0LL;
      case 9:
        char v21 = v8 ^ 1;
        if (v7) {
          char v21 = 1;
        }
        if ((v21 & 1) != 0) {
          goto LABEL_182;
        }
        uint64_t result = sub_1000451B0();
        if (!result || (result & 7) != 0) {
          goto LABEL_207;
        }
        (*(void (**)(uint64_t, uint64_t))(*(void *)result + 160LL))(result, 3600000LL);
        LOBYTE(v14) = sub_1000A1484(*(void *)(v2 + 8));
LABEL_62:
        unsigned __int8 v9 = v14;
        goto LABEL_63;
      case 10:
        if (v7 - 1 > 4) {
          goto LABEL_182;
        }
        if (!v6) {
          goto LABEL_207;
        }
        int v22 = *v6;
        uint64_t result = sub_1000451B0();
        if (!result || (result & 7) != 0) {
          goto LABEL_207;
        }
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 160LL))(result, 3600000LL);
        unsigned int v23 = 0;
        switch(v7)
        {
          case 2u:
            goto LABEL_75;
          case 3u:
            goto LABEL_73;
          case 4u:
            goto LABEL_71;
          case 5u:
            unsigned int v23 = v6[4] << 24;
LABEL_71:
            v23 |= v6[3] << 16;
LABEL_73:
            v23 |= v6[2] << 8;
LABEL_75:
            uint64_t v4 = 0LL;
            v23 |= v6[1];
LABEL_77:
            unsigned __int8 v24 = sub_1000A15E8(*(void *)(v2 + 8), v22, v23, 0);
            break;
          default:
            goto LABEL_77;
        }

        goto LABEL_166;
      case 11:
        if (v7 - 2 > 3) {
          goto LABEL_182;
        }
        if (!v6) {
          goto LABEL_207;
        }
        unsigned int v25 = 0;
        switch(v7)
        {
          case 2u:
            goto LABEL_87;
          case 3u:
            goto LABEL_85;
          case 4u:
            goto LABEL_83;
          case 5u:
            unsigned int v25 = v6[4] << 24;
LABEL_83:
            v25 |= v6[3] << 16;
LABEL_85:
            v25 |= v6[2] << 8;
LABEL_87:
            uint64_t v4 = 0LL;
            v25 |= v6[1];
LABEL_89:
            unsigned __int8 v24 = sub_1000A17CC(v2, *v6, v25, 0);
            break;
          default:
            goto LABEL_89;
        }

        goto LABEL_166;
      case 12:
        memset(v44, 170, 24);
        if (v7 != 13) {
          goto LABEL_182;
        }
        if (!v6) {
          goto LABEL_207;
        }
        LODWORD(v42) = bswap32(*(_DWORD *)v6);
        HIDWORD(v42) = v6[4];
        LODWORD(v43) = v6[5];
        HIDWORD(v43) = v6[6];
        unsigned int v26 = v6[7];
        *(_DWORD *)uint64_t v44 = v26;
        if (v26 > 3) {
          goto LABEL_210;
        }
        if (v26 != 1)
        {
          LOWORD(v27) = 0;
          *(_DWORD *)&v44[4] = 2;
          *(_WORD *)&v44[8] = 0;
LABEL_165:
          *(_WORD *)&v44[10] = v27;
          unsigned __int8 v24 = sub_1000A1930(v2, (uint64_t)&v42, 0);
LABEL_166:
          unsigned __int8 v9 = v24;
          goto LABEL_182;
        }

        *(_DWORD *)&v44[4] = v6[8];
        if ((unint64_t)v6 < 0xFFFFFFFFFFFFFFF7LL)
        {
          *(_WORD *)&v44[8] = bswap32(*(unsigned __int16 *)(v6 + 9)) >> 16;
          if ((unint64_t)v6 < 0xFFFFFFFFFFFFFFF5LL)
          {
            unsigned int v27 = bswap32(*(unsigned __int16 *)(v6 + 11)) >> 16;
            goto LABEL_165;
          }
        }

        goto LABEL_209;
      case 15:
        uint64_t result = *(void *)(v2 + 8);
        if (!result || (result & 7) != 0) {
          goto LABEL_207;
        }
        uint64_t result = sub_100057B4C(result);
        unsigned __int8 v9 = 2;
        if (!(_DWORD)result) {
          goto LABEL_182;
        }
        if (v7 < 6) {
          goto LABEL_161;
        }
        LODWORD(v42) = 0;
        unsigned int v28 = *(unsigned __int16 *)(v6 + 1);
        unsigned int v29 = *(unsigned __int16 *)(v6 + 3);
        if (v7 - 6 > 0xFF) {
          goto LABEL_211;
        }
        uint64_t v30 = v6[5];
        uint64_t result = sub_100025BE8();
        if (!result || (result & 7) != 0) {
          goto LABEL_207;
        }
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, void, void, void, uint64_t, unsigned __int8 *, void, uint64_t *))(*(void *)result + 88LL))( result,  v41,  *v6,  bswap32(v28) >> 16,  bswap32(v29) >> 16,  v30,  v6 + 6,  (v7 - 6),  &v42);
        if ((result & 1) == 0)
        {
          if ((_DWORD)v42 == 1) {
            unsigned __int8 v9 = 22;
          }
          else {
            unsigned __int8 v9 = 2;
          }
          goto LABEL_181;
        }

        uint64_t result = *(void *)(v2 + 8);
        if (result && (result & 7) == 0)
        {
          sub_100057A9C(result, 2LL, 5u);
          unsigned __int8 v9 = 0;
LABEL_181:
          uint64_t v4 = 2LL;
          goto LABEL_182;
        }

        break;
      case 16:
        uint64_t result = *(void *)(v2 + 8);
        if (!result || (result & 7) != 0) {
          goto LABEL_207;
        }
        unsigned __int8 v9 = 2;
        if (v7 < 2) {
          goto LABEL_161;
        }
        uint64_t result = sub_1000451B0();
        if (!result) {
          goto LABEL_207;
        }
        if ((result & 7) != 0) {
          goto LABEL_207;
        }
        (*(void (**)(uint64_t, uint64_t))(*(void *)result + 160LL))(result, 3600000LL);
        uint64_t result = sub_100025BE8();
        if (!result || (result & 7) != 0 || !v6) {
          goto LABEL_207;
        }
        if ((*(unsigned int (**)(uint64_t, uint64_t, void, void, unsigned __int8 *, void))(*(void *)result + 112LL))( result,  v41,  *v6,  v6[1],  v6 + 2,  v7 - 2))
        {
          unsigned __int8 v9 = 0;
        }

        else
        {
          unsigned __int8 v9 = 2;
        }

        goto LABEL_182;
      case 18:
        uint64_t result = *(void *)(v2 + 8);
        if (!result || (result & 7) != 0) {
          goto LABEL_207;
        }
        unsigned __int8 v9 = 2;
        if (v7 != 1)
        {
LABEL_161:
          unsigned __int8 v9 = 4;
          goto LABEL_182;
        }

        uint64_t result = sub_100025BE8();
        if (!result) {
          goto LABEL_207;
        }
        if ((result & 7) != 0) {
          goto LABEL_207;
        }
        if (!v6) {
          goto LABEL_207;
        }
        int v31 = (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)result + 96LL))(result, v41, *v6);
        uint64_t result = *(void *)(v2 + 8);
        if (!result || (result & 7) != 0) {
          goto LABEL_207;
        }
        if (v31) {
          unsigned __int8 v9 = 0;
        }
        else {
          unsigned __int8 v9 = 2;
        }
        sub_100057AD0(result, 2LL, 5u);
        goto LABEL_182;
      default:
        goto LABEL_182;
    }

    goto LABEL_207;
  }

  int v15 = (_BYTE *)(v2 + 4432);
  if (v5 != 129)
  {
    if (v5 == 131)
    {
      int v17 = 1;
      if (v7 == 6)
      {
        *(_BYTE *)(v2 + 4437) = 1;
        if (!v6) {
          goto LABEL_207;
        }
        *(_BYTE *)(v2 + 4433) = *v6;
        if ((((_DWORD)v2 + 4434) & 1) != 0) {
          goto LABEL_207;
        }
        *(_BYTE *)(v2 + 4434) = v6[1];
        uint64_t v34 = (_BYTE *)(v2 + 4438);
        if ((*(_DWORD *)(v6 + 2) & 0x1000000) == 0
          || bswap32(*(unsigned __int16 *)v6) >> 16 > 0x103
          || ((v8 ^ 1) & 1) != 0)
        {
          *uint64_t v34 = 0;
        }

        else
        {
          *uint64_t v34 = 1;
          sub_1000A1A80(*(void *)(v2 + 8));
        }

        int v17 = 0;
        uint64_t v4 = 0LL;
        *(_BYTE *)(v2 + 4440) = 0;
        unsigned __int8 v9 = 25;
      }

      __int16 v35 = 130;
LABEL_175:
      __int16 v47 = v35;
      sub_100062E78(v2, *(_DWORD *)(a2 + 68), &v47, 0LL, 0xFFFFu);
      if (!v17) {
        goto LABEL_205;
      }
LABEL_182:
      sub_1000ABE78(a2, v41, 0, 2LL, 1, *(_DWORD *)(a2 + 68), v9, v5, 0, 255, 0LL, 0, 0, 0);
      sub_1000AB4C4(*(void *)(v2 + 8), a2, 0, 1u);
      return v4;
    }

    if (v5 != 133) {
      goto LABEL_182;
    }
    char v16 = v8 ^ 1;
    if (v7 != 4) {
      char v16 = 1;
    }
    if ((v16 & 1) != 0)
    {
      int v17 = 1;
      goto LABEL_163;
    }

    if (!v6) {
      goto LABEL_207;
    }
    *(_BYTE *)(v2 + 4439) = *v6 & 1;
    if (v6 != (unsigned __int8 *)-1LL)
    {
      if ((v15 & 7) == 0)
      {
        *int v15 = v6[1];
        if ((unint64_t)v6 < 0xFFFFFFFFFFFFFFFELL)
        {
          int v17 = 0;
          uint64_t v4 = 0LL;
          *(_WORD *)(v2 + 4435) = bswap32(*((unsigned __int16 *)v6 + 1)) >> 16;
          *(_BYTE *)(v2 + 4442) = 0;
          unsigned __int8 v9 = 25;
LABEL_163:
          __int16 v35 = 132;
          goto LABEL_175;
        }

LABEL_209:
        __break(0x5500u);
        goto LABEL_210;
      }

LABEL_207:
      __break(0x5516u);
    }

LABEL_208:
    __break(0x5513u);
    goto LABEL_209;
  }

  if (v7 != 2)
  {
LABEL_63:
    uint64_t v4 = 0LL;
    goto LABEL_182;
  }

  if (!v6) {
    goto LABEL_207;
  }
  int v32 = *v6;
  __int16 v46 = -21846;
  int v33 = v6[1];
  __int16 v46 = v6[1];
  if (v33 > 131)
  {
    if (v33 != 134)
    {
      if (v33 == 132)
      {
        sub_100062E78(v2, *(_DWORD *)(a2 + 68), &v46, 0LL, 0xFFFFu);
        if (v32) {
          sub_1000A1A80(*(void *)(v2 + 8));
        }
        goto LABEL_204;
      }

LABEL_210:
    __break(0x550Au);
    goto LABEL_211;
  }

  if (v33 != 17)
  {
    if (v33 == 130)
    {
      sub_100062E78(v2, *(_DWORD *)(a2 + 68), &v46, 0LL, 0xFFFFu);
      if (v32) {
        sub_1000A10A8(*(void *)(v2 + 8));
      }
      goto LABEL_204;
    }

    goto LABEL_198;
  }

  std::string __p = 0LL;
  uint64_t result = (uint64_t)__p;
  if (!__p) {
    goto LABEL_204;
  }
  uint64_t v36 = (char *)__p + 4;
  int v37 = *((unsigned __int8 *)__p + 4);
  if (v37 != 255)
  {
    unsigned int v38 = v37 + 1;
    *uint64_t v36 = v38;
    if (v32)
    {
      if (v38 < *(unsigned __int8 *)(result + 5))
      {
        if ((v41 & 7) == 0)
        {
          uint64_t result = (*(uint64_t (**)(uint64_t, void))(*(void *)v41 + 16LL))(v41, 0LL);
          if (__p)
          {
            if ((__p & 1) == 0 && (((_DWORD)__p + 2) & 1) == 0)
            {
              sub_1000AC324(a2, v41, 0, 2LL, 17, result, (char *)__p + 6, *((unsigned __int16 *)__p + 1));
              sub_100062BF8(v2, a2, 300, 0, (uint64_t)__p);
              return 0LL;
            }
          }
        }

        goto LABEL_207;
      }
    }

    uint64_t v43 = 0LL;
    memset(&v44[8], 0, 24);
    uint64_t v42 = 0x12000100000001LL;
    *(void *)uint64_t v44 = v41;
    if ((((_DWORD)result + 6) & 1) != 0) {
      goto LABEL_207;
    }
    *(void *)&v44[8] = *(unsigned __int8 *)(result + 6);
    operator delete[]((void *)result);
    sub_1000A1DBC(v2, v41, (uint64_t)&v42);
LABEL_204:
    uint64_t v4 = 0LL;
LABEL_205:
    sub_1000AD43C(a2);
    return v4;
  }

uint64_t sub_1000A10A8(uint64_t result)
{
  if (!result) {
    goto LABEL_19;
  }
  uint64_t v1 = result;
  uint64_t result = sub_100061274();
  if (!result || (result & 7) != 0) {
    goto LABEL_20;
  }
  uint64_t result = sub_10008E168(result, v1);
  if (!result) {
    goto LABEL_19;
  }
  if ((v1 & 7) != 0) {
    goto LABEL_20;
  }
  uint64_t v2 = result;
  sub_10005789C(v1, 2u);
  uint64_t result = sub_100061274();
  if (!result || (result & 7) != 0) {
    goto LABEL_20;
  }
  uint64_t result = sub_10008C2EC(result, v1, 2u);
  if (!result) {
    goto LABEL_17;
  }
  uint64_t v3 = (void *)result;
  if ((result & 7) != 0) {
    goto LABEL_20;
  }
  uint64_t v4 = (_BYTE *)(result + 4440);
  if (((result + 4440) & 7) != 0) {
    goto LABEL_20;
  }
  unsigned int v5 = *v4;
  if (v5 > 2)
  {
LABEL_17:
    uint64_t v8 = 16LL;
LABEL_18:
    sub_1000578E8(v1, 2u);
    return v8;
  }

  *uint64_t v4 = v5 + 1;
  if ((v2 & 7) == 0)
  {
    int v6 = (*(uint64_t (**)(uint64_t, void))(*(void *)v2 + 16LL))(v2, 0LL);
    uint64_t result = sub_1000ABB10(v2, 0, 2LL, 130, v6, 0LL, 0);
    if (result)
    {
      if ((result & 7) == 0)
      {
        int v7 = *(_DWORD *)(result + 68);
        sub_1000AB4C4(v1, result, 0, 1u);
        uint64_t v8 = (uint64_t)sub_100062D14(v3, v7, 130, 0LL, 300);
        if ((_DWORD)v8) {
          sub_1000CEAEC( 0,  4,  "%s:%d 0 != status\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoSimpleRemote.cpp",  1532);
        }
        goto LABEL_18;
      }

      goto LABEL_20;
    }

uint64_t sub_1000A1220(uint64_t a1, unsigned int a2, unsigned int a3, char a4)
{
  uint64_t result = sub_1000CE91C((uint64_t)v17, 1u);
  v17[0] = off_100103838;
  if (!a1)
  {
    __break(0x5518u);
LABEL_32:
    __break(0x5516u);
    goto LABEL_33;
  }

  if (a3)
  {
    uint64_t result = (uint64_t)sub_1000A2514((unsigned __int8 *)a1, a3);
    uint64_t v9 = result;
    if ((_DWORD)result) {
      goto LABEL_30;
    }
  }

  if ((a1 & 7) != 0) {
    goto LABEL_32;
  }
  sub_10005789C(a1, 2u);
  uint64_t result = sub_100061274();
  if (!result || (result & 7) != 0) {
    goto LABEL_32;
  }
  uint64_t result = sub_10008C2EC(result, a1, 2u);
  if (!result)
  {
    uint64_t v9 = 0LL;
LABEL_29:
    sub_1000578E8(a1, 2u);
LABEL_30:
    v17[0] = off_100103838;
    sub_1000CE94C(v17);
    return v9;
  }

  int v10 = (void *)result;
  if ((result & 7) != 0) {
    goto LABEL_32;
  }
  if (a2 > 0xFF)
  {
LABEL_33:
    __break(0x550Au);
    goto LABEL_34;
  }

  if (a2 >= 0x87)
  {
LABEL_34:
    __break(0x5512u);
    goto LABEL_35;
  }

  if (!__CFADD__(result + 1192, 24LL * a2))
  {
    unsigned int v11 = a2;
    int v12 = (__darwin_time_t *)(result + 24LL * a2 + 1192);
    if ((v12 & 7) == 0)
    {
      unsigned int v13 = (int *)(result + 24LL * v11 + 1208);
      if ((((_BYTE)result + 24 * (_BYTE)v11 - 72) & 7) == 0)
      {
        int v14 = *v13;
        if (*v13)
        {
          LODWORD(v17[2]) = 5;
          HIDWORD(v17[2]) = v14;
          LOBYTE(v17[3]) = 0;
          v17[4] = sub_10001864C(a1);
          if (HIDWORD(v17[2]) < 3)
          {
            uint64_t v9 = 25LL;
          }

          else
          {
            sub_100057A4C(a1, 2u, 0LL, (uint64_t)&v17[2], 24);
            uint64_t v9 = 0LL;
          }

          *unsigned int v13 = 0;
          if ((a4 & 1) == 0)
          {
            __int16 v16 = 136;
            sub_100062E78((uint64_t)v10, -1, &v16, 0LL, 0xFFFFu);
          }
        }

        else
        {
          uint64_t v9 = 0LL;
        }

        if (a3)
        {
          int v15 = sub_1000A26C8(a3);
          *unsigned int v13 = v15;
          LODWORD(v17[2]) = 5;
          HIDWORD(v17[2]) = v15;
          LOBYTE(v17[3]) = 1;
          v17[4] = sub_10001864C(a1);
          sub_1000CE9E8((uint64_t)v17, v12);
          if (HIDWORD(v17[2]) < 3) {
            LODWORD(v9) = 25;
          }
          else {
            sub_100057A4C(a1, 2u, 0LL, (uint64_t)&v17[2], 24);
          }
          else {
            uint64_t v9 = v9;
          }
        }

        goto LABEL_29;
      }
    }

    goto LABEL_32;
  }

uint64_t sub_1000A1484(uint64_t a1)
{
  v7[0] = 0xAAAAAAAAAAAAAAAALL;
  v7[1] = 0xAAAAAAAAAAAAAAAALL;
  uint64_t result = sub_1000CE91C((uint64_t)v7, 1u);
  v7[0] = off_100103838;
  if (!a1)
  {
    __break(0x5518u);
LABEL_19:
    __break(0x5516u);
    goto LABEL_20;
  }

  if ((a1 & 7) != 0) {
    goto LABEL_19;
  }
  sub_10005789C(a1, 2u);
  uint64_t result = sub_100061274();
  if (!result || (result & 7) != 0) {
    goto LABEL_19;
  }
  uint64_t v3 = 2LL;
  uint64_t result = sub_10008C2EC(result, a1, 2u);
  if (!result) {
    goto LABEL_16;
  }
  uint64_t v4 = (void *)result;
  if ((result & 7) != 0) {
    goto LABEL_19;
  }
  if ((unint64_t)(result + 1192) < 0xFFFFFFFFFFFFFF40LL)
  {
    if (((result + 1384) & 7) == 0 && ((result + 1400) & 7) == 0)
    {
      if (*(_DWORD *)(result + 1400))
      {
        sub_1000CE9E8((uint64_t)v7, (__darwin_time_t *)(result + 1384));
        __int16 v6 = 136;
        if (sub_100062E78((uint64_t)v4, -1, &v6, 0LL, 0xFFFFu))
        {
          int v5 = 1784;
        }

        else
        {
          if (!sub_100062D14(v4, -1, 136, 0LL, 400))
          {
            uint64_t v3 = 0LL;
            goto LABEL_16;
          }

          int v5 = 1779;
        }

        sub_1000CEAEC( 0,  4,  "%s:%d 0 != status\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoSimpleRemote.cpp",  v5);
      }

uint64_t sub_1000A15E8(uint64_t result, int a2, unsigned int a3, char a4)
{
  if (!result)
  {
    __break(0x5518u);
    goto LABEL_28;
  }

  uint64_t v4 = result;
  if ((result & 7) != 0) {
    goto LABEL_28;
  }
  sub_10005789C(result, 2u);
  uint64_t result = sub_100061274();
  if (!result || (result & 7) != 0) {
    goto LABEL_28;
  }
  uint64_t result = sub_10008C2EC(result, v4, 2u);
  if (!result) {
    goto LABEL_25;
  }
  uint64_t v8 = result;
  if ((result & 7) != 0) {
    goto LABEL_28;
  }
  uint64_t result = sub_10004783C();
  if (!result || (result & 7) != 0) {
    goto LABEL_28;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 616LL))(result, 2LL);
  if ((_DWORD)result != a2)
  {
LABEL_25:
    uint64_t v12 = 4LL;
LABEL_26:
    sub_1000578E8(v4, 2u);
    return v12;
  }

  if (((v8 + 4456) & 7) != 0)
  {
LABEL_28:
    __break(0x5516u);
    goto LABEL_29;
  }

  *(_BYTE *)(v8 + 4456) = a2;
  if (a3 > 0x1F) {
    goto LABEL_25;
  }
  if ((unint64_t)(v8 + 1192) < 0xFFFFFFFFFFFFFF10LL)
  {
    if ((((_BYTE)v8 - 104) & 7) == 0)
    {
      uint64_t v9 = (unsigned int *)(v8 + 1448);
      if (((v8 + 1448) & 7) == 0)
      {
        unsigned int v10 = *v9 ^ a3;
        if (v10)
        {
          int v11 = 0;
          *uint64_t v9 = a3;
          do
          {
            if ((v10 & 1) != 0)
            {
              unint64_t v14 = 0xAAAAAAAAAAAAAAAALL;
              uint64_t v15 = 0xAAAAAAAAAAAAAAAALL;
              v13[0] = 2;
              v13[1] = v11;
              LOBYTE(v14) = a3 & 1;
              uint64_t v15 = sub_10001864C(v4);
              sub_100057A4C(v4, 2u, 1LL, (uint64_t)v13, 24);
            }

            if (v10 < 2) {
              break;
            }
            v10 >>= 1;
            a3 >>= 1;
            ++v11;
          }

          while (v11 != 5);
          if ((a4 & 1) == 0)
          {
            LOWORD(v13[0]) = 137;
            sub_100062E78(v8, -1, v13, 0LL, 0xFFFFu);
            if (*(_DWORD *)(v8 + 1448)) {
              sub_100062D14((void *)v8, -1, 137, 0LL, 400);
            }
          }
        }

        uint64_t v12 = 0LL;
        goto LABEL_26;
      }
    }

    goto LABEL_28;
  }

uint64_t sub_1000A17CC(uint64_t result, int a2, unsigned int a3, char a4)
{
  if (!result) {
    goto LABEL_23;
  }
  uint64_t v4 = result;
  if ((result & 7) != 0) {
    goto LABEL_23;
  }
  unsigned int v5 = a3;
  *(_BYTE *)(result + 4457) = a2;
  if (a3 > 0x3F) {
    return 4LL;
  }
  if ((((_BYTE)result - 80) & 7) != 0 || ((result + 1472) & 7) != 0)
  {
LABEL_23:
    __break(0x5516u);
LABEL_24:
    __break(0x5513u);
    return result;
  }

  unsigned int v8 = *(_DWORD *)(result + 1472) ^ a3;
  if (v8)
  {
    int v9 = 0;
    *(_DWORD *)(result + 1472) = a3;
    while (1)
    {
      if ((v8 & 1) != 0)
      {
        unint64_t v12 = 0xAAAAAAAAAAAAAAAALL;
        uint64_t v13 = 0xAAAAAAAAAAAAAAAALL;
        v11[0] = a2;
        v11[1] = v9;
        LOBYTE(v12) = v5 & 1;
        uint64_t result = *(void *)(v4 + 8);
        if (result) {
          BOOL v10 = (*(void *)(v4 + 8) & 7LL) == 0;
        }
        else {
          BOOL v10 = 0;
        }
        if (!v10) {
          goto LABEL_23;
        }
        uint64_t v13 = sub_10001864C(result);
        sub_10005BEC8(2u, 2LL, (uint64_t)v11, 24, *(void *)(v4 + 8));
      }

      if (v8 >= 2)
      {
        v8 >>= 1;
        v5 >>= 1;
        if (++v9 != 6) {
          continue;
        }
      }

      break;
    }
  }

  if ((a4 & 1) == 0)
  {
    LOWORD(v11[0]) = 138;
    sub_100062E78(v4, -1, v11, 0LL, 0xFFFFu);
    if (*(_DWORD *)(v4 + 1472)) {
      sub_100062D14((void *)v4, -1, 138, 0LL, 400);
    }
  }

  return 0LL;
}

uint64_t sub_1000A1930(uint64_t result, uint64_t a2, char a3)
{
  if (!result) {
    goto LABEL_25;
  }
  uint64_t v3 = (void *)result;
  if ((result & 7) != 0 || !a2 || (a2 & 7) != 0 || ((a2 + 4) & 3) != 0) {
    goto LABEL_25;
  }
  unsigned int v5 = *(_DWORD *)(a2 + 4);
  if (v5 >= 4) {
    goto LABEL_26;
  }
  if (v5 == 3) {
    return 4LL;
  }
  if (((a2 + 8) & 7) != 0) {
    goto LABEL_25;
  }
  unsigned int v6 = *(_DWORD *)(a2 + 8);
  if (v6 > 3) {
    goto LABEL_26;
  }
  if (v6 > 1) {
    return 4LL;
  }
  if (((a2 + 12) & 3) != 0) {
    goto LABEL_25;
  }
  unsigned int v7 = *(_DWORD *)(a2 + 12);
  if (v7 > 3)
  {
LABEL_26:
    __break(0x550Au);
    return result;
  }

  if (v7 > 1) {
    return 4LL;
  }
  unsigned int v8 = (_DWORD *)(a2 + 16);
  if (((a2 + 16) & 7) != 0)
  {
LABEL_25:
    __break(0x5516u);
    goto LABEL_26;
  }

  if (*v8 > 3u) {
    goto LABEL_26;
  }
  if (*v8 != 3)
  {
    __int128 v9 = *(_OWORD *)a2;
    __int128 v10 = *(_OWORD *)(a2 + 16);
    *(void *)(result + 4496) = *(void *)(a2 + 32);
    *(_OWORD *)(result + 4480) = v10;
    *(_OWORD *)(result + 4464) = v9;
    sub_10005BEC8(2u, 3LL, a2, 40, *(void *)(result + 8));
    if ((a3 & 1) != 0) {
      return 0LL;
    }
    __int16 v11 = 139;
    uint64_t result = sub_100062E78((uint64_t)v3, -1, &v11, 0LL, 0xFFFFu);
    if (*v8 <= 3u)
    {
      if (*v8) {
        sub_100062D14(v3, -1, 139, 0LL, 400);
      }
      return 0LL;
    }

    goto LABEL_26;
  }

  return 4LL;
}

uint64_t sub_1000A1A80(uint64_t result)
{
  if (!result) {
    goto LABEL_18;
  }
  uint64_t v1 = result;
  uint64_t result = sub_100061274();
  if (!result || (result & 7) != 0) {
    goto LABEL_19;
  }
  uint64_t result = sub_10008E168(result, v1);
  if (!result) {
    goto LABEL_18;
  }
  if ((v1 & 7) != 0) {
    goto LABEL_19;
  }
  uint64_t v2 = result;
  sub_10005789C(v1, 2u);
  uint64_t result = sub_100061274();
  if (!result || (result & 7) != 0) {
    goto LABEL_19;
  }
  uint64_t v3 = 2LL;
  uint64_t result = sub_10008C2EC(result, v1, 2u);
  if (!result) {
    goto LABEL_17;
  }
  uint64_t v4 = (void *)result;
  if ((result & 7) != 0) {
    goto LABEL_19;
  }
  unsigned int v5 = (_BYTE *)(result + 4442);
  if ((((_DWORD)result + 4442) & 1) != 0) {
    goto LABEL_19;
  }
  unsigned int v6 = *v5;
  if (v6 > 2)
  {
LABEL_17:
    sub_1000578E8(v1, 2u);
    return v3;
  }

  *unsigned int v5 = v6 + 1;
  if ((v2 & 7) == 0)
  {
    int v7 = (*(uint64_t (**)(uint64_t, void))(*(void *)v2 + 16LL))(v2, 0LL);
    uint64_t result = sub_1000ABB10(v2, 0, 2LL, 132, v7, 0LL, 0);
    if (result)
    {
      if ((result & 7) == 0)
      {
        int v8 = *(_DWORD *)(result + 68);
        sub_1000AB4C4(v1, result, 0, 1u);
        uint64_t v3 = (uint64_t)sub_100062D14(v4, v8, 132, 0LL, 300);
        if ((_DWORD)v3) {
          sub_1000CEAEC( 0,  4,  "%s:%d 0 != status\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoSimpleRemote.cpp",  1597);
        }
        goto LABEL_17;
      }

      goto LABEL_19;
    }

uint64_t sub_1000A1BF0(uint64_t result, int a2, char a3)
{
  int v12 = -1431655766;
  if (!result) {
    goto LABEL_23;
  }
  uint64_t v5 = result;
  uint64_t result = sub_100061274();
  if (!result || (result & 7) != 0) {
    goto LABEL_24;
  }
  uint64_t result = sub_10008E168(result, v5);
  if (!result) {
    goto LABEL_23;
  }
  if ((v5 & 7) != 0) {
    goto LABEL_24;
  }
  uint64_t v6 = result;
  sub_10005789C(v5, 2u);
  uint64_t result = sub_100061274();
  if (!result || (result & 7) != 0) {
    goto LABEL_24;
  }
  uint64_t v7 = 2LL;
  uint64_t result = sub_10008C2EC(result, v5, 2u);
  if (!result) {
    goto LABEL_22;
  }
  int v8 = (void *)result;
  if (((result | (result + 80)) & 7) != 0)
  {
LABEL_24:
    __break(0x5516u);
    goto LABEL_25;
  }

  if (!*(_BYTE *)(result + 4437))
  {
LABEL_22:
    sub_1000578E8(v5, 2u);
    return v7;
  }

  if ((((_DWORD)result + 4438) & 1) != 0) {
    goto LABEL_24;
  }
  if (*(unsigned __int8 *)(result + 4438) <= 1u)
  {
    if (!*(_BYTE *)(result + 4438)) {
      goto LABEL_22;
    }
    unsigned int v9 = *(unsigned __int8 *)(result + 4441);
    if (v9 > 2) {
      goto LABEL_22;
    }
    *(_BYTE *)(result + 4441) = v9 + 1;
    LOBYTE(v12) = a3;
    if ((((_BYTE)result + 100) & 3) != 0) {
      goto LABEL_24;
    }
    *(_DWORD *)(result + 4452) = a2;
    if ((((_BYTE)result + 96) & 7) != 0) {
      goto LABEL_24;
    }
    *(_BYTE *)(result + 4448) = a3;
    *(_BYTE *)(result + 4449) = HIBYTE(a2);
    BYTE1(v12) = HIBYTE(a2);
    HIWORD(v12) = 0;
    if ((v6 & 7) != 0) {
      goto LABEL_24;
    }
    int v10 = (*(uint64_t (**)(uint64_t, void))(*(void *)v6 + 16LL))(v6, 0LL);
    uint64_t result = sub_1000ABB10(v6, 0, 2LL, 134, v10, &v12, 4u);
    if (result)
    {
      if ((result & 7) == 0)
      {
        int v11 = *(_DWORD *)(result + 68);
        sub_1000AB4C4(v5, result, 0, 1u);
        uint64_t v7 = (uint64_t)sub_100062D14(v8, v11, 134, 0LL, 300);
        goto LABEL_22;
      }

      goto LABEL_24;
    }

uint64_t sub_1000A1DBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a1 || (a1 & 7) != 0 || !a3 || (a3 & 7) != 0 || ((a3 + 4) & 3) != 0) {
    goto LABEL_40;
  }
  if (*(_DWORD *)(a3 + 4) != 1179649) {
    return 2LL;
  }
  uint64_t v6 = sub_100025BE8();
  *(void *)&__int128 v7 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v7 + 1) = 0xAAAAAAAAAAAAAAAALL;
  *(_OWORD *)&__n[1] = v7;
  __int128 v22 = v7;
  LOWORD(v22) = 17;
  __n[4] = -1;
  *(_BYTE *)(a1 + 4504) = 0;
  uint64_t result = sub_1000635F4(a1, (uint64_t)&__n[1], (unsigned int (*)(void *, __int128 *))sub_1000A3020, 0LL);
  uint64_t v9 = 0LL;
  if (!a2 || !v6 || *(_BYTE *)(a1 + 4504)) {
    return v9;
  }
  if (((a3 + 24) & 7) != 0) {
    goto LABEL_40;
  }
  unsigned __int8 v10 = *(_BYTE *)(a3 + 24);
  *(void *)&__int128 v11 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v11 + 1) = 0xAAAAAAAAAAAAAAAALL;
  __src[30] = v11;
  __src[31] = v11;
  __src[28] = v11;
  __src[29] = v11;
  __src[26] = v11;
  __src[27] = v11;
  __src[24] = v11;
  __src[25] = v11;
  __src[22] = v11;
  __src[23] = v11;
  __src[20] = v11;
  __src[21] = v11;
  __src[18] = v11;
  __src[19] = v11;
  __src[16] = v11;
  __src[17] = v11;
  __src[14] = v11;
  __src[15] = v11;
  __src[12] = v11;
  __src[13] = v11;
  __src[10] = v11;
  __src[11] = v11;
  __src[8] = v11;
  __src[9] = v11;
  __src[6] = v11;
  __src[7] = v11;
  __src[4] = v11;
  __src[5] = v11;
  __src[2] = v11;
  __src[3] = v11;
  __src[0] = v11;
  __src[1] = v11;
  if ((v6 & 7) != 0) {
    goto LABEL_40;
  }
  unsigned int v20 = -1;
  __n[0] = 512;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, void, unsigned int *, _OWORD *, _DWORD *))(*(void *)v6 + 128LL))( v6,  a2,  v10,  &v20,  __src,  __n);
  if ((result & 1) == 0) {
    return 0LL;
  }
  if (__n[0] > 0xFFF7u) {
    goto LABEL_42;
  }
  size_t v12 = (unsigned __int16)(LOWORD(__n[0]) + 8);
  uint64_t v13 = (uint64_t)operator new[](v12);
  bzero((void *)v13, v12);
  if ((a2 & 7) != 0) {
    goto LABEL_40;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t, void))(*(void *)a2 + 16LL))(a2, 0LL);
  if (WORD1(result)) {
    goto LABEL_42;
  }
  if ((v13 & 1) != 0) {
    goto LABEL_40;
  }
  *(_WORD *)uint64_t v13 = result;
  size_t v14 = __n[0];
  unsigned int v15 = __n[0] + 2;
  if (__n[0] < 0xFFFFFFFE)
  {
    if (HIWORD(v15)) {
      goto LABEL_42;
    }
    if ((((_DWORD)v13 + 2) & 1) != 0) {
      goto LABEL_40;
    }
    *(_WORD *)(v13 + 2) = v15;
    if ((((_DWORD)v13 + 4) & 1) != 0) {
      goto LABEL_40;
    }
    *(_WORD *)(v13 + 4) = 768;
    __int16 v16 = (unsigned __int8 *)(v13 + 6);
    if ((((_DWORD)v13 + 6) & 1) != 0) {
      goto LABEL_40;
    }
    *__int16 v16 = v10;
    if (v20 + 4 <= 7)
    {
      if (v20 <= 0xFF)
      {
        if (v13 != -7)
        {
          *(_BYTE *)(v13 + 7) = v20;
          if ((unint64_t)v16 <= 0xFFFFFFFFFFFFFFFDLL)
          {
            int v17 = (_BYTE *)(v13 + 8);
            memcpy((void *)(v13 + 8), __src, v14);
            uint64_t v18 = sub_10008132C(a2);
            if (v18)
            {
              if ((v18 & 3) != 0) {
                goto LABEL_40;
              }
              if (!strcmp((const char *)v18, "Apple iPad Keyboard Dock"))
              {
                *v17 &= 2u;
              }
            }

            uint64_t v19 = sub_1000ABB10( a2,  0,  2LL,  17,  *(unsigned __int16 *)v13,  (const void *)(v13 + 6),  *(unsigned __int16 *)(v13 + 2));
            if (v19)
            {
              uint64_t v9 = sub_100062BF8(a1, v19, 300, 0, v13);
              if ((_DWORD)v9)
              {
                operator delete[]((void *)v13);
                sub_1000CEAEC( 0,  4,  "%s:%d 0 != status\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoSimpleRemote.cpp",  2818);
              }

              return v9;
            }

            __break(0x5518u);
LABEL_40:
            __break(0x5516u);
          }
        }

        goto LABEL_43;
      }

uint64_t sub_1000A2108(uint64_t a1, int a2, uint64_t a3)
{
  if (!a1) {
    goto LABEL_67;
  }
  if ((a1 & 7) != 0) {
    goto LABEL_67;
  }
  int v30 = 0;
  uint64_t v6 = sub_1000B6CE0();
  if (!v6) {
    goto LABEL_67;
  }
  uint64_t v7 = v6;
  if ((v6 & 7) != 0) {
    goto LABEL_67;
  }
  uint64_t v8 = sub_10008E168(v6, *(void *)(a1 + 8));
  uint64_t v9 = v8;
  if (a2 > 31)
  {
    if (a2 == 32)
    {
      if (*(_DWORD *)(a1 + 4444) == a3)
      {
        memset(v29, 170, sizeof(v29));
        sub_1000CE91C((uint64_t)v29, 1u);
        *(void *)&v29[0] = off_100103838;
        sub_1000CE9E8((uint64_t)v29, (__darwin_time_t *)&v29[1]);
        int v17 = sub_10008D184(v7, v9);
        char v18 = 0;
        uint64_t v19 = v17 == 1;
        unint64_t v20 = (8 * v19) | (16 * v19);
        do
        {
          if (v19 < 6 || (_DWORD)v19 == 13)
          {
            if (v20 > ~(a1 + 1192)) {
              goto LABEL_68;
            }
            if (*(_DWORD *)(a1 + v20 + 1208))
            {
              __int128 v21 = *(_OWORD *)(a1 + v20 + 1192);
              __int128 v27 = xmmword_1000DFC00;
              __int128 v28 = v21;
              __int128 v31 = v29[1];
              __int128 v26 = *(_OWORD *)sub_10006E13C(&v31, &v28);
              else {
                char v18 = 1;
              }
            }
          }

          ++v19;
          v20 += 24LL;
        }

        while (v19 != 27);
        sub_1000612C4(*(void *)(a1 + 8));
        if (v22)
        {
          sub_1000612C4(*(void *)(a1 + 8));
          BOOL v25 = (v23 & 7) == 0 && v23 != 0;
          if ((v18 & 1) != 0)
          {
            if (!v25) {
              goto LABEL_67;
            }
            sub_10005EA88(v23, *(_DWORD *)(a1 + 4444));
          }

          else
          {
            if (!v25) {
              goto LABEL_67;
            }
            sub_10005EB3C(v23, *(_DWORD *)(a1 + 4444));
          }
        }

        *(void *)&v29[0] = off_100103838;
        sub_1000CE94C(v29);
      }

      else
      {
        if (*(_DWORD *)(a1 + 1176) != a3) {
          goto LABEL_69;
        }
        sub_10006329C(a1, (uint64_t)&v30);
      }
    }

    else if (a2 == 1024 && a3)
    {
      return sub_1000A1DBC(a1, v8, a3);
    }
  }

  else
  {
    if (a2 == 4)
    {
      uint64_t v11 = sub_1000451B0();
      if (!v11 || (v11 & 7) != 0) {
        goto LABEL_67;
      }
      (*(void (**)(uint64_t, uint64_t))(*(void *)v11 + 160LL))(v11, 600000LL);
      if (!v9) {
        goto LABEL_32;
      }
LABEL_17:
      LOWORD(v29[1]) = -21846;
      LODWORD(v31) = -1431655766;
      size_t v12 = (_BYTE *)(a1 + 4432);
      *(_WORD *)(a1 + 4440) = 0;
      *(_BYTE *)(a1 + 4442) = 0;
      do
        LOWORD(v29[1]) = -1;
      while (!sub_100062E78(a1, -1, &v29[1], &v31, 0xFFFFu));
      unsigned int v13 = sub_10008D184(v7, v9) == 1;
      *(_BYTE *)(a1 + 4437) = 0;
      *(_BYTE *)(a1 + 4439) = 0;
      *(_BYTE *)(a1 + 4433) = 0;
      if ((((_DWORD)a1 + 4434) & 1) != 0) {
        goto LABEL_67;
      }
      *(_BYTE *)(a1 + 4434) = 0;
      *size_t v12 = 0;
      *(_WORD *)(a1 + 4435) = 0;
      if ((((_DWORD)a1 + 4438) & 1) != 0) {
        goto LABEL_67;
      }
      *(_BYTE *)(a1 + 4438) = 0;
      while (v13 <= 0x12)
      {
        if (((1 << v13) & 0x78202) == 0)
        {
          if (v13 == 8)
          {
            sub_1000A1220(*(void *)(a1 + 8), 8u, 0, 0);
          }

          else
          {
            if (v13 != 10) {
              break;
            }
            sub_1000A15E8(*(void *)(a1 + 8), *(unsigned __int8 *)(a1 + 4456), 0, 0);
            *(_BYTE *)(a1 + 4456) = 0;
          }
        }

uint64_t sub_1000A24CC(uint64_t result, void *a2)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else if (*(void *)result <= *a2)
  {
    return *(void *)result >= *a2 && *(void *)(result + 8) >= a2[1];
  }

  else
  {
    return 1LL;
  }

  return result;
}

unsigned __int8 *sub_1000A2514(unsigned __int8 *result, unsigned int a2)
{
  if (!result) {
    goto LABEL_38;
  }
  uint64_t v3 = (uint64_t)result;
  uint64_t result = (unsigned __int8 *)sub_100061274();
  uint64_t result = (unsigned __int8 *)sub_10008E168((uint64_t)result, v3);
  if (!result)
  {
LABEL_38:
    __break(0x5518u);
    goto LABEL_39;
  }

  if ((v3 & 7) != 0) {
    goto LABEL_39;
  }
  sub_10005789C(v3, 2u);
  uint64_t result = (unsigned __int8 *)sub_100061274();
  if (!result) {
    goto LABEL_39;
  }
  uint64_t result = (unsigned __int8 *)sub_10008C2EC((uint64_t)result, v3, 2u);
  if ((a2 & 0x1F) == 0)
  {
    if ((a2 & 0xFFE0) == 0x87E0LL)
    {
      uint64_t v5 = a2 & 0xFE0000;
      if (v5 == 393216)
      {
        uint64_t v4 = 0LL;
      }

      else
      {
        if (v5 == 0x40000)
        {
          uint64_t v6 = v3;
          int v7 = a2;
          char v8 = 0;
        }

        else
        {
          if (v5 != 0x20000)
          {
            uint64_t v4 = 1LL;
            goto LABEL_37;
          }

          uint64_t v6 = v3;
          int v7 = a2;
          char v8 = 1;
        }

        uint64_t v4 = 4 * (sub_1000A1BF0(v6, v7, v8) != 0);
      }
    }

    else
    {
      uint64_t v4 = 5LL;
    }

uint64_t sub_1000A26C8(int a1)
{
  if ((a1 & 0x1F) != 0)
  {
    if ((a1 & 0x1F) == 0xELL && (unint64_t v1 = (a1 & 0xFE0000) - 0x20000LL, v1 < 0xC0000)) {
      return *(unsigned int *)((char *)&unk_1000DFBD4 + (v1 >> 15));
    }
    else {
      return 9LL;
    }
  }

  else
  {
    uint64_t v3 = a1 & 0xFE0000;
    if (v3 == 0x40000) {
      int v4 = 1;
    }
    else {
      int v4 = 9;
    }
    if (v3 == 393216) {
      unsigned int v5 = 2;
    }
    else {
      unsigned int v5 = v4;
    }
    if (v3 == 0x20000) {
      return 0LL;
    }
    else {
      return v5;
    }
  }

uint64_t sub_1000A2734(BOOL a1)
{
  uint64_t result = sub_100061274();
  if (result && (result & 7) == 0)
  {
    uint64_t result = sub_10008E550(result, a1, 0);
    if (!result) {
      return 0LL;
    }
    uint64_t v3 = result;
    if ((result & 7) == 0)
    {
      sub_10005789C(result, 2u);
      uint64_t result = sub_100061274();
      if (result)
      {
        if ((result & 7) == 0)
        {
          uint64_t result = sub_10008C2EC(result, v3, 2u);
          if (!result)
          {
            a1 = 0LL;
            goto LABEL_15;
          }

          if ((result & 7) == 0)
          {
            if (!a1)
            {
LABEL_15:
              sub_1000578E8(v3, 2u);
              return a1;
            }

            uint64_t result = sub_100061274();
            if (result && (result & 7) == 0)
            {
              a1 = sub_100054B88(result, a1);
              goto LABEL_15;
            }
          }
        }
      }
    }
  }

  __break(0x5516u);
  return result;
}

void sub_1000A27F4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, _DWORD *a5)
{
  if (!a1 || (a1 & 7) != 0 || (uint64_t v8 = sub_100061274()) == 0 || (v8 & 7) != 0)
  {
LABEL_42:
    __break(0x5516u);
LABEL_43:
    __break(0x5507u);
LABEL_44:
    __break(0x550Au);
  }

  else
  {
    uint64_t v9 = sub_10008E168(v8, *(void *)(a1 + 8));
    uint64_t v10 = v9;
    *a5 = 2;
    uint64_t v11 = (unsigned __int8 *)(a1 + 4448);
    switch(a3)
    {
      case 130:
        if (sub_1000A2734(v9))
        {
          sub_1000A10A8(*(void *)(a1 + 8));
          goto LABEL_37;
        }

        break;
      case 131:
      case 133:
      case 135:
        return;
      case 132:
        if (sub_1000A2734(v9))
        {
          sub_1000A1A80(*(void *)(a1 + 8));
          goto LABEL_37;
        }

        break;
      case 134:
        if (sub_1000A2734(v9))
        {
          unsigned int v18 = *v11;
          if (v18 >= 2) {
            goto LABEL_44;
          }
          sub_1000A1BF0(*(void *)(a1 + 8), *(_DWORD *)(a1 + 4452), v18 != 0);
          goto LABEL_37;
        }

        break;
      case 136:
        if (sub_1000A2734(v9))
        {
          sub_1000A1220(*(void *)(a1 + 8), 8u, 0, 1);
          goto LABEL_37;
        }

        break;
      case 137:
        if (sub_1000A2734(v9))
        {
          sub_1000A15E8(*(void *)(a1 + 8), *(unsigned __int8 *)(a1 + 4456), 0, 1);
          goto LABEL_37;
        }

        break;
      case 138:
        if (sub_1000A2734(v9))
        {
          sub_1000A17CC(a1, *(unsigned __int8 *)(a1 + 4457), 0, 1);
          goto LABEL_37;
        }

        break;
      case 139:
        if (sub_1000A2734(v9))
        {
          if ((((_BYTE)a1 + 0x80) & 7) != 0) {
            goto LABEL_42;
          }
          *(_DWORD *)(a1 + 4480) = 0;
          if ((((_BYTE)a1 - 124) & 3) != 0) {
            goto LABEL_42;
          }
          *(_DWORD *)(a1 + 4484) = 2;
          if ((((_BYTE)a1 - 120) & 7) != 0) {
            goto LABEL_42;
          }
          *(_WORD *)(a1 + 4488) = 0;
          if ((((_DWORD)a1 + 4490) & 1) != 0) {
            goto LABEL_42;
          }
          *(_WORD *)(a1 + 4490) = 0;
          sub_1000A1930(a1, a1 + 4464, 1);
LABEL_37:
          *a5 = 0;
        }

        break;
      default:
        if (a3 == 17 && a1 != -4448)
        {
          size_t v12 = (unsigned __int8 *)(a1 + 4452);
          int v13 = *(unsigned __int8 *)(a1 + 4452);
          if (v13 == 255) {
            goto LABEL_43;
          }
          unsigned __int8 v14 = v13 + 1;
          *size_t v12 = v14;
          if (v14 >= *(unsigned __int8 *)(a1 + 4453))
          {
            if ((((_DWORD)a1 + 4454) & 1) != 0) {
              goto LABEL_42;
            }
            unint64_t v19 = *(unsigned __int8 *)(a1 + 4454);
            operator delete[]((void *)(a1 + 4448));
            v20[1] = 0LL;
            v20[0] = 0x12000100000001LL;
            v20[2] = v10;
            __int128 v21 = v19;
            uint64_t v22 = 0LL;
            *a5 = sub_1000A1DBC(a1, v10, (uint64_t)v20);
          }

          else
          {
            if (!v9) {
              goto LABEL_42;
            }
            if ((v9 & 7) != 0) {
              goto LABEL_42;
            }
            int v15 = (*(uint64_t (**)(uint64_t, void))(*(void *)v9 + 16LL))(v9, 0LL);
            if ((((_DWORD)a1 + 4450) & 1) != 0) {
              goto LABEL_42;
            }
            uint64_t v16 = sub_1000ABB10(v10, 0, 2LL, 17, v15, (const void *)(a1 + 4454), *(unsigned __int16 *)(a1 + 4450));
            if (!v16)
            {
              __break(0x5518u);
              goto LABEL_42;
            }

            int v17 = sub_100062BF8(a1, v16, 300, 0, a1 + 4448);
            *a5 = v17;
            if (v17) {
              sub_1000CEAEC( 0,  4,  "%s:%d 0 != status\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoSimpleRemote.cpp",  2282);
            }
          }
        }

        break;
    }
  }

uint64_t sub_1000A2AF8(uint64_t result, uint64_t a2, int a3)
{
  if (!a2 || a3 != 9)
  {
    __break(0x5518u);
    goto LABEL_25;
  }

  uint64_t v4 = result;
  uint64_t v5 = sub_1000438B8();
  uint64_t result = sub_100064240(9LL);
  if ((_DWORD)result) {
    unint64_t v6 = 55LL;
  }
  else {
    unint64_t v6 = 39LL;
  }
  if (!v5 || (v5 & 7) != 0) {
    goto LABEL_25;
  }
  if ((*(unsigned int (**)(uint64_t))(*(void *)v5 + 96LL))(v5))
  {
    int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 104LL))(v5);
    uint64_t v8 = 1024LL;
    if (v7) {
      uint64_t v8 = 3072LL;
    }
    v6 |= v8;
  }

  uint64_t result = sub_1000B6CE0();
  if (!result) {
    goto LABEL_25;
  }
  if ((result & 7) != 0) {
    goto LABEL_25;
  }
  uint64_t v9 = sub_10008E550(result, v4, 0);
  uint64_t result = sub_100025BE8();
  if (!result || (result & 7) != 0) {
    goto LABEL_25;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 136LL))(result);
  if (v9 && (_DWORD)result)
  {
    if ((v9 & 7) == 0)
    {
      uint64_t result = sub_100057B4C(v9);
      if ((_DWORD)result) {
        v6 |= 0x200uLL;
      }
      goto LABEL_22;
    }

uint64_t sub_1000A2C3C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!result) {
    goto LABEL_70;
  }
  uint64_t v4 = result;
  if ((result & 7) != 0) {
    goto LABEL_70;
  }
  uint64_t v5 = a4;
  if ((_DWORD)a2 == 1179649)
  {
    unsigned __int8 v14 = 0LL;
    uint64_t v15 = 1LL;
    if (!a3) {
      return result;
    }
    goto LABEL_63;
  }

  if ((_DWORD)a2 == 1245186)
  {
    if (a4)
    {
      uint64_t result = (uint64_t)operator new(0x10uLL);
      if ((result & 0xF) != 0) {
        goto LABEL_70;
      }
      *(_OWORD *)uint64_t result = *(_OWORD *)v5;
      uint64_t v15 = 5LL;
      unsigned __int8 v14 = sub_1000A2FAC;
      uint64_t v5 = result;
      if (!a3) {
        return result;
      }
LABEL_63:
      uint64_t result = sub_1000B6CE0();
      if (result)
      {
        uint64_t v30 = result;
        if ((result & 7) == 0)
        {
          uint64_t result = *(void *)(v4 + 8);
          if (result)
          {
            if ((result & 7) == 0)
            {
              uint64_t v31 = sub_10001864C(result);
              return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, void, void (*)(unsigned int, int, int, int, void *), uint64_t, void))(*(void *)v30 + 128LL))( v30,  v15,  a2,  0LL,  a3,  v5,  0LL,  v14,  v31,  *(void *)(v4 + 8));
            }
          }
        }
      }

      goto LABEL_70;
    }

LABEL_70:
  __break(0x5516u);
LABEL_71:
  __break(0x5513u);
LABEL_72:
  __break(0x550Au);
LABEL_73:
  __break(0x5500u);
  return result;
}

    __break(0x5516u);
    goto LABEL_71;
  }

void sub_1000A2FAC(unsigned int a1, int a2, int a3, int a4, void *__p)
{
  if (a1 >= 8) {
    goto LABEL_11;
  }
  if (a1 != 5)
  {
    __break(0x5518u);
LABEL_11:
    __break(0x550Au);
LABEL_12:
    __break(0x5516u);
    return;
  }

  if (a2 == 1245185)
  {
    v7[1] = v5;
    void v7[2] = v6;
    v7[0] = __p;
    sub_10009FCAC(v7);
  }

  else if (a2 == 1245186 && __p)
  {
    if ((__p & 3) == 0)
    {
      operator delete(__p);
      return;
    }

    goto LABEL_12;
  }

uint64_t sub_1000A3020(uint64_t result, uint64_t a2)
{
  if (result && (result & 7) == 0 && a2 && (a2 & 7) == 0 && ((a2 + 16) & 7) == 0)
  {
    if (*(_WORD *)(a2 + 16) != 17) {
      return 0LL;
    }
    if (((a2 + 24) & 7) == 0)
    {
      if (*(void *)(a2 + 24)) {
        *(_BYTE *)(result + 4504) = 1;
      }
      return 0LL;
    }
  }

  __break(0x5516u);
  return result;
}

_OWORD *sub_1000A307C(_OWORD *result, _OWORD *a2)
{
  else {
    *uint64_t result = *a2;
  }
  return result;
}

BOOL sub_1000A33E4(const __CFString *a1, _OWORD *a2)
{
  __int128 v3 = a2[1];
  *(_OWORD *)token.val = *a2;
  *(_OWORD *)&token.val[4] = v3;
  uint64_t v4 = SecTaskCreateWithAuditToken(0LL, &token);
  if (v4)
  {
    uint64_t v5 = v4;
    *(void *)token.val = 0LL;
    uint64_t v6 = (const __CFBoolean *)SecTaskCopyValueForEntitlement(v4, a1, (CFErrorRef *)&token);
    if (v6)
    {
      int v7 = v6;
      CFTypeID v8 = CFGetTypeID(v6);
      if (v8 == CFBooleanGetTypeID())
      {
        int Value = CFBooleanGetValue(v7);
        BOOL v10 = Value != 0;
        CFRelease(v7);
        uint64_t v11 = *(const void **)token.val;
        if (!*(void *)token.val)
        {
LABEL_13:
          CFRelease(v5);
          return v10;
        }

        if (Value)
        {
          BOOL v10 = 1LL;
LABEL_11:
          CFRelease(v11);
          goto LABEL_13;
        }

void sub_1000A34E4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (((v2 + 88) & 7) != 0) {
    goto LABEL_11;
  }
  if (*(void *)(v2 + 88))
  {
    NSLog( @"releasing process assertion - %s:%s - %d clientID=%d pid=%d",  "/Library/Caches/com.apple.xbs/Sources/iapd/common/IAPEAClient.m",  "-[IAPEAClient initWithCapabilities:auditToken:xpcConnection:eaProtocols:andBundleId:]_block_invoke",  121,  *(unsigned int *)(v2 + 8),  [(id)v2 _getProcessId]);
    __int128 v3 = (CFTypeRef *)(*(void *)(a1 + 32) + 88LL);
    CFRelease(*v3);
    uint64_t v4 = *(void *)(a1 + 32) + 88LL;
    if ((v4 & 7) != 0) {
      goto LABEL_11;
    }
    *(void *)uint64_t v4 = 0LL;
    uint64_t v2 = *(void *)(a1 + 32);
  }

  uint64_t v5 = (dispatch_source_t *)(v2 + 112);
  if (((v2 + 112) & 7) != 0)
  {
LABEL_11:
    __break(0x5516u);
    goto LABEL_12;
  }

  if (*v5)
  {
    dispatch_source_set_timer(*v5, 0xFFFFFFFFFFFFFFFFLL, 0xFFFFFFFFFFFFFFFFLL, 0LL);
    uint64_t v6 = *(void *)(a1 + 32) + 104LL;
    if ((v6 & 7) == 0)
    {
      *(void *)uint64_t v6 = 0LL;
      return;
    }

    goto LABEL_11;
  }

void sub_1000A3780(uint64_t a1)
{
  unint64_t v1 = (CFTypeRef *)(*(void *)(a1 + 32) + 88LL);
  if (!*v1) {
    return;
  }
  CFRelease(*v1);
  uint64_t v3 = *(void *)(a1 + 32) + 88LL;
  if ((v3 & 7) != 0)
  {
LABEL_6:
    __break(0x5516u);
    return;
  }

  *(void *)uint64_t v3 = 0LL;
}

void sub_1000A38BC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (((v2 + 88) & 7) != 0) {
    goto LABEL_24;
  }
  if (!*(void *)(v2 + 88)) {
    goto LABEL_6;
  }
  time_t v3 = time(0LL);
  uint64_t v2 = *(void *)(a1 + 32);
  if (((v2 + 104) & 7) != 0) {
    goto LABEL_24;
  }
  uint64_t v4 = *(void *)(v2 + 104);
  BOOL v5 = __OFSUB__(v3, v4);
  uint64_t v6 = v3 - v4;
  if (!v5)
  {
    if (v6 < 3)
    {
      NSLog(@"using ea process hysteresis");
      return;
    }

void sub_1000A3D14(_Unwind_Exception *a1)
{
}

void sub_1000A3D2C(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  uint64_t v4 = (void **)(*(void *)(a1 + 32) + 72LL);
  uint64_t v8 = *v4;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472LL;
  void v9[2] = sub_1000A3DE4;
  v9[3] = &unk_100106758;
  v9[4] = a2;
  if ([v8 indexOfObjectPassingTest:v9] == (id)0x7FFFFFFFFFFFFFFFLL) {
    return;
  }
  NSLog(@"protocol %@ found from accessory", a2);
  *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = 1;
  if (!a4)
  {
LABEL_6:
    __break(0x5516u);
    return;
  }

  *a4 = 1;
}

BOOL sub_1000A3DE4(uint64_t a1, void *a2)
{
  return [a2 caseInsensitiveCompare:*(void *)(a1 + 32)] == 0;
}

uint64_t sub_1000A4640(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_10;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_10;
  }
  sub_10006107C(result, a2, 9);
  *(void *)uint64_t v2 = off_1001067B0;
  *(void *)(v2 + 1192) = 0LL;
  sub_1000BD7A8((pthread_mutex_t *)(v2 + 1200));
  qword_10011C0E0 = v2;
  uint64_t result = *(void *)(v2 + 8);
  if (!result
    || (result & 7) != 0
    || (sub_10005758C(result, 9u, 0), (uint64_t result = *(void *)(v2 + 8)) == 0)
    || (result & 7) != 0
    || (sub_100057538(result, 9u, 0), *(_DWORD *)(v2 + 1268) = 0, (uint64_t result = sub_100061274()) == 0)
    || (result & 7) != 0)
  {
LABEL_10:
    __break(0x5516u);
  }

  else
  {
    sub_10008C5A8(result, 9, 109, *(void *)(v2 + 8));
    return v2;
  }

  return result;
}

void sub_1000A46F8(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0 || (*(void *)a1 = off_1001067B0, (uint64_t v2 = sub_100061274()) == 0) || (v2 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    sub_10008C5A8(v2, 9, 0, *(void *)(a1 + 8));
    *(void *)(a1 + 1192) = 0LL;
    *(_BYTE *)(a1 + 1271) = 0;
    qword_10011C0E0 = 0LL;
    pthread_mutex_destroy((pthread_mutex_t *)(a1 + 1200));
    sub_100061324(a1);
  }

void sub_1000A476C(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    sub_1000A46F8(a1);
  }
}

void sub_1000A4780(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    sub_1000A46F8(a1);
    operator delete(v1);
  }

uint64_t *sub_1000A47A4(uint64_t a1)
{
  unsigned __int8 v2 = atomic_load((unsigned __int8 *)&qword_10011C5E0);
  if ((v2 & 1) == 0) {
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t result = (uint64_t *)qword_10011C0E0;
    if (qword_10011C0E0)
    {
      if (!a1) {
        return result;
      }
    }

    else
    {
      uint64_t result = &qword_10011C0E8;
      qword_10011C0E0 = (uint64_t)&qword_10011C0E8;
      if (!a1) {
        return result;
      }
    }

    BOOL v4 = result && (result & 7) == 0LL;
    if (v4 && (((_BYTE)result + 8) & 7) == 0LL)
    {
      if (!result[1])
      {
        (*(void (**)(uint64_t *, uint64_t))(*result + 56))(result, a1);
        uint64_t result = (uint64_t *)qword_10011C0E0;
      }
    }

    __break(0x5516u);
LABEL_23:
    if (__cxa_guard_acquire(&qword_10011C5E0))
    {
      sub_1000A4640((uint64_t)&qword_10011C0E8, a1);
      __cxa_atexit((void (*)(void *))sub_1000A476C, &qword_10011C0E8, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_10011C5E0);
    }
  }

  if (result[1] != a1) {
    return 0LL;
  }
  return result;
}

void sub_1000A48A4()
{
  if (v0)
  {
    __int16 v15 = -21846;
    char v16 = -86;
    if (qword_10011C0E0) {
      BOOL v1 = (qword_10011C0E0 & 7) == 0;
    }
    else {
      BOOL v1 = 0;
    }
    if (!v1) {
      goto LABEL_44;
    }
    pthread_mutex_lock((pthread_mutex_t *)(qword_10011C0E0 + 1200));
    if (!qword_10011C0E0 || (qword_10011C0E0 & 7) != 0) {
      goto LABEL_44;
    }
    if (*(_BYTE *)(qword_10011C0E0 + 1271))
    {
      if ((((_BYTE)qword_10011C0E0 - 12) & 3) != 0) {
        goto LABEL_44;
      }
      __int16 v15 = bswap32(*(unsigned __int16 *)(qword_10011C0E0 + 1268)) >> 16;
      if ((((_DWORD)qword_10011C0E0 + 1270) & 1) != 0) {
        goto LABEL_44;
      }
      if ((unint64_t)&v15 >= 0xFFFFFFFFFFFFFFFELL)
      {
LABEL_45:
        __break(0x5513u);
        return;
      }

      char v16 = *(_BYTE *)(qword_10011C0E0 + 1270);
      __int16 v3 = 4;
      unsigned int v4 = 3;
      BOOL v5 = &v15;
    }

    else
    {
      BOOL v5 = 0LL;
      unsigned int v4 = 0;
      __int16 v3 = 3;
    }

    if ((((_BYTE)qword_10011C0E0 - 88) & 7) != 0) {
      goto LABEL_44;
    }
    uint64_t v6 = (uint64_t *)(qword_10011C0E0 + 8);
    if (((qword_10011C0E0 + 8) & 7) != 0) {
      goto LABEL_44;
    }
    uint64_t v7 = *v6;
    uint64_t v8 = *v6 & 7;
    if (!v7 || v8 != 0) {
      goto LABEL_44;
    }
    uint64_t v10 = *(void *)(qword_10011C0E0 + 1192);
    if (sub_100056A48(v7))
    {
      int v11 = 0;
    }

    else
    {
      if (!qword_10011C0E0) {
        goto LABEL_44;
      }
      if ((qword_10011C0E0 & 7) != 0) {
        goto LABEL_44;
      }
      size_t v12 = (uint64_t *)(qword_10011C0E0 + 1192);
      if (((qword_10011C0E0 + 1192) & 7) != 0) {
        goto LABEL_44;
      }
      uint64_t v13 = *v12;
      if (!*v12 || (v13 & 7) != 0) {
        goto LABEL_44;
      }
      int v11 = (*(uint64_t (**)(uint64_t, void))(*(void *)v13 + 16LL))(v13, 0LL);
    }

    uint64_t v14 = sub_1000ABB10(v10, 0, 9LL, v3, v11, v5, v4);
    if (!v14) {
      goto LABEL_41;
    }
    if (qword_10011C0E0 && (qword_10011C0E0 & 7) == 0)
    {
      if (*(_BYTE *)(qword_10011C0E0 + 1271)) {
        (*(void (**)(void))(*(void *)qword_10011C0E0 + 72LL))();
      }
      else {
        sub_1000A4B68(v14, 0, 500);
      }
LABEL_41:
      if (qword_10011C0E0 && (qword_10011C0E0 & 7) == 0)
      {
        pthread_mutex_unlock((pthread_mutex_t *)(qword_10011C0E0 + 1200));
        return;
      }
    }

void sub_1000A4A90()
{
  uint64_t v0 = qword_10011C0E0;
  if (!qword_10011C0E0)
  {
    sub_1000A47A4(0LL);
    uint64_t v0 = qword_10011C0E0;
    if (!qword_10011C0E0) {
      return;
    }
  }

  if ((v0 & 7) != 0 || (((_BYTE)v0 + 8) & 7) != 0LL) {
    goto LABEL_28;
  }
  uint64_t v2 = *(void *)(v0 + 8);
  if (!v2) {
    goto LABEL_12;
  }
  if ((v2 & 7) != 0)
  {
LABEL_28:
    __break(0x5516u);
    return;
  }

  if (!sub_100056A48(v2))
  {
    uint64_t v0 = qword_10011C0E0;
LABEL_12:
    if (v0) {
      BOOL v3 = (v0 & 7) == 0;
    }
    else {
      BOOL v3 = 0;
    }
    unsigned int v4 = (void *)(v0 + 1192);
    if (*v4)
    {
      uint64_t v6 = sub_100061274();
      if (v6 && (v6 & 7) == 0 && qword_10011C0E0 && (qword_10011C0E0 & 7) == 0 && ((qword_10011C0E0 + 1192) & 7) == 0)
      {
        sub_100054B88(v6, *(void *)(qword_10011C0E0 + 1192));
        return;
      }

      goto LABEL_28;
    }
  }

uint64_t sub_1000A4B68(uint64_t result, int a2, int a3)
{
  if (!result) {
    goto LABEL_28;
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_28;
  }
  __int16 v5 = *(_WORD *)(result + 126);
  __int16 v14 = v5;
  uint64_t result = qword_10011C0E0;
  if (!qword_10011C0E0 || (qword_10011C0E0 & 7) != 0) {
    goto LABEL_28;
  }
  int v8 = *(_DWORD *)(v3 + 68);
  uint64_t result = (uint64_t)sub_100062D14((void *)qword_10011C0E0, v8, v5, 0LL, a3);
  if (!(_DWORD)result)
  {
    if (!qword_10011C0E0 || (qword_10011C0E0 & 7) != 0 || ((qword_10011C0E0 + 8) & 7) != 0) {
      goto LABEL_28;
    }
    uint64_t result = sub_1000AB4C4(*(void *)(qword_10011C0E0 + 8), v3, a2, 1u);
    if ((_DWORD)result)
    {
      uint64_t v13 = 0LL;
      uint64_t result = qword_10011C0E0;
      if (qword_10011C0E0 && (qword_10011C0E0 & 7) == 0) {
        return sub_100062E78(qword_10011C0E0, v8, &v14, &v13, 0xFFFFu);
      }
      goto LABEL_28;
    }

    if (!qword_10011C0E0
      || (qword_10011C0E0 & 7) != 0
      || (uint64_t v9 = (uint64_t *)(qword_10011C0E0 + 8), ((qword_10011C0E0 + 8) & 7) != 0)
      || (uint64_t result = *v9) == 0
      || (result & 7) != 0
      || (uint64_t result = sub_10005758C(result, 9u, 1), !qword_10011C0E0)
      || (qword_10011C0E0 & 7) != 0
      || (uint64_t v10 = (uint64_t *)(qword_10011C0E0 + 8), ((qword_10011C0E0 + 8) & 7) != 0)
      || (uint64_t v11 = *v10) == 0
      || (v11 & 7) != 0)
    {
LABEL_28:
      __break(0x5516u);
      return result;
    }

    int v12 = sub_100062E0C();
    sub_100057538(v11, 9u, v12);
    return 0LL;
  }

  return result;
}

uint64_t sub_1000A4CBC(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_147;
  }
  if (!*(void *)(a1 + 8)) {
    goto LABEL_10;
  }
  uint64_t v5 = sub_100061274();
  if (!v5 || (v5 & 7) != 0) {
    goto LABEL_147;
  }
  if (!sub_10008E7AC(v5, *(void *)(a1 + 8)))
  {
LABEL_10:
    uint64_t v7 = 89LL;
LABEL_11:
    sub_1000AD43C(a2);
    return v7;
  }

  uint64_t v6 = *(void *)(a1 + 8);
  if (!v6 || (v6 & 7) != 0) {
    goto LABEL_147;
  }
  if ((sub_1000569F0(v6) & 1) != 0) {
    goto LABEL_10;
  }
  if (!a2 || (a2 & 7) != 0 || (uint64_t v9 = *(void *)(a1 + 8)) == 0 || (v9 & 7) != 0) {
LABEL_147:
  }
    __break(0x5516u);
  uint64_t v10 = *(unsigned __int16 **)(a2 + 24);
  unsigned int v11 = *(unsigned __int16 *)(a2 + 126);
  unsigned int v12 = *(unsigned __int16 *)(a2 + 128);
  uint64_t v13 = *(void *)(a2 + 8);
  if (sub_100056A48(v9))
  {
    uint64_t v14 = 474LL;
  }

  else
  {
    uint64_t v15 = sub_100061274();
    if (!v15 || (v15 & 7) != 0) {
      goto LABEL_147;
    }
    uint64_t v14 = sub_10008D0AC(v15, v13);
  }

  uint64_t v16 = *(void *)(a1 + 8);
  if (!v16 || (v16 & 7) != 0) {
    goto LABEL_147;
  }
  if (sub_100056A48(v16))
  {
    int v17 = 0;
  }

  else
  {
    uint64_t v18 = sub_100061274();
    if (!v18 || (v18 & 7) != 0) {
      goto LABEL_147;
    }
    int v17 = sub_100054AC0(v18, v13);
  }

  if (qword_10011C0E0 && v13 == *(void *)(a1 + 1192))
  {
    if ((_DWORD)v14 == 70 || (_DWORD)v14 == 474 || (_DWORD)v14 == 53248) {
      goto LABEL_37;
    }
    if (v17 < 0) {
      goto LABEL_149;
    }
    if (!v17)
    {
LABEL_37:
      uint64_t v2 = 25LL;
      char v19 = 1;
    }

    else
    {
      char v19 = 0;
      uint64_t v2 = 5LL;
    }

    sub_1000A4A90();
    if (v20 && v13 == *(void *)(a1 + 1192) && v10 && v2 > v11)
    {
      __int16 v42 = 25;
      bzero((char *)v43 + 4, 0x7FCuLL);
      LODWORD(v43[0]) = v11;
      if (v11 == 4)
      {
        if (v12 != 3) {
          goto LABEL_41;
        }
        unsigned int v29 = bswap32(*v10);
        unsigned int v30 = HIWORD(v29);
        WORD2(v43[0]) = HIWORD(v29);
        if ((unint64_t)v10 <= 0xFFFFFFFFFFFFFFFDLL)
        {
          char v31 = *((_BYTE *)v10 + 2);
          BYTE6(v43[0]) = v31;
          if ((v19 & 1) == 0)
          {
            char v31 = 0;
            LOWORD(v30) = HIWORD(v29) & 0x200;
            WORD2(v43[0]) = HIWORD(v29) & 0x200;
            BYTE6(v43[0]) = 0;
          }

          __int16 v42 = 3;
          pthread_mutex_lock((pthread_mutex_t *)(a1 + 1200));
          *(_WORD *)(a1 + 126_Block_object_dispose((const void *)(v1 - 120), 8) = v30;
          *(_BYTE *)(a1 + 1270) = v31;
          *(_BYTE *)(a1 + 1271) = 1;
          pthread_mutex_unlock((pthread_mutex_t *)(a1 + 1200));
          goto LABEL_106;
        }
      }

      else
      {
        if (v11 != 2)
        {
          if (!v11)
          {
            if (v12 == 2)
            {
              unsigned int v27 = 0;
LABEL_104:
              BYTE5(v43[0]) = *(_BYTE *)v10;
              if (v10 != (unsigned __int16 *)-1LL)
              {
                BYTE4(v43[0]) = *((_BYTE *)v10 + 1);
                DWORD2(v43[0]) = v27;
                __int16 v42 = BYTE4(v43[0]);
                if (BYTE4(v43[0]) > 0x18u) {
                  goto LABEL_110;
                }
                goto LABEL_106;
              }

              goto LABEL_150;
            }

            if (v12 == 6 && *(_BYTE *)v10 == 6)
            {
              if ((unint64_t)v10 >= 0xFFFFFFFFFFFFFFFELL)
              {
LABEL_151:
                __break(0x5500u);
LABEL_152:
                sub_1000D251C();
              }

              unsigned int v27 = bswap32(*(_DWORD *)(v10 + 1));
              goto LABEL_104;
            }
          }

LABEL_150:
      __break(0x5513u);
      goto LABEL_151;
    }

    if ((v11 & 0x80) == 0) {
      goto LABEL_41;
    }
    uint64_t v14 = *(void *)(a2 + 8);
    uint64_t v21 = sub_1000C0AEC();
    if (v21)
    {
      uint64_t v2 = v21;
      char v44 = -86;
      *(void *)&__int128 v22 = 0xAAAAAAAAAAAAAAAALL;
      *((void *)&v22 + 1) = 0xAAAAAAAAAAAAAAAALL;
      v43[6] = v22;
      v43[7] = v22;
      v43[4] = v22;
      v43[5] = v22;
      v43[2] = v22;
      v43[3] = v22;
      v43[0] = v22;
      v43[1] = v22;
      if ((v21 & 7) != 0) {
        goto LABEL_147;
      }
      unsigned int v23 = (*(uint64_t (**)(uint64_t))(*(void *)v21 + 40LL))(v21);
      if (!v23) {
        sub_1000CEAEC( 0,  4,  "%s:%d userCount == 0\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoSports.cpp",  414);
      }
      sub_1000A4A90();
      if (v24 && v13 == *(void *)(a1 + 1192))
      {
        switch(v11)
        {
          case 0x83u:
            if (v12) {
              goto LABEL_127;
            }
            if (!v23)
            {
              (*(void (**)(uint64_t))(*(void *)v2 + 24LL))(v2);
              unsigned int v23 = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 40LL))(v2);
            }

            if (v23) {
              __int16 v28 = 768;
            }
            else {
              __int16 v28 = 256;
            }
            LOWORD(v43[0]) = v28;
            BYTE2(v43[0]) = v23;
            unsigned __int8 v25 = 3;
            __int16 v26 = 132;
            goto LABEL_50;
          case 0x85u:
            char v32 = 4;
            if (v12 || !v23) {
              goto LABEL_128;
            }
            LOBYTE(v43[0]) = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 56LL))(v2);
            unsigned __int8 v25 = 1;
            __int16 v26 = 134;
            goto LABEL_50;
          case 0x87u:
            char v32 = 4;
            if (v12 != 1 || !v23) {
              goto LABEL_128;
            }
            if (!v10) {
              goto LABEL_147;
            }
            if (*(unsigned __int8 *)v10 < v23)
            {
              else {
                char v32 = 4;
              }
            }

            goto LABEL_128;
          case 0x88u:
            if (v12 != 1) {
              goto LABEL_127;
            }
            if (!v10) {
              goto LABEL_147;
            }
            char v32 = 4;
            LOBYTE(v43[0]) = *(_BYTE *)v10;
            switch(*(_BYTE *)v10)
            {
              case 0:
                unsigned int v33 = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 96LL))(v2);
                goto LABEL_144;
              case 1:
                memset(&v41, 170, sizeof(v41));
                (*(void (**)(std::string *__return_ptr, uint64_t))(*(void *)v2 + 88LL))(&v41, v2);
                std::string::size_type size = v41.__r_.__value_.__s.__size_;
                if ((v41.__r_.__value_.__s.__size_ & 0x80u) != 0) {
                  std::string::size_type size = v41.__r_.__value_.__l.__size_;
                }
                BOOL v37 = __CFADD__(size, 1LL);
                unint64_t v38 = size + 1;
                if (v37) {
                  goto LABEL_151;
                }
                if (v38 >> 16) {
                  goto LABEL_148;
                }
                if (v38 >= 0x80) {
                  size_t v39 = 128LL;
                }
                else {
                  size_t v39 = v38;
                }
                if ((v41.__r_.__value_.__s.__size_ & 0x80u) == 0) {
                  unsigned int v40 = &v41;
                }
                else {
                  unsigned int v40 = (std::string *)v41.__r_.__value_.__r.__words[0];
                }
                memcpy((char *)v43 + 1, v40, v39);
                unsigned __int8 v25 = v39 + 1;
                sub_1000616D4(a1, (uint64_t)v43 + 1, v39);
                std::string::~string(&v41);
                break;
              case 2:
                unsigned int v33 = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 112LL))(v2);
                goto LABEL_144;
              case 3:
                *(_WORD *)((char *)v43 + 1) = __rev16((*(uint64_t (**)(uint64_t))(*(void *)v2 + 128LL))(v2));
                unsigned __int8 v25 = 3;
                break;
              case 4:
                LOBYTE(v33) = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 144LL))(v2);
                goto LABEL_145;
              case 5:
                unsigned int v33 = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 160LL))(v2);
LABEL_144:
                if (v33 > 0xFF) {
                  goto LABEL_148;
                }
LABEL_145:
                BYTE1(v43[0]) = v33;
                unsigned __int8 v25 = 2;
                break;
              default:
                goto LABEL_152;
            }

            __int16 v26 = 137;
            goto LABEL_50;
          case 0x8Au:
            if (v12 < 2) {
              goto LABEL_127;
            }
            if (!v10) {
              goto LABEL_147;
            }
            char v32 = 4;
            char v32 = 2;
            switch(*(_BYTE *)v10)
            {
              case 0:
                if (v12 != 2) {
                  goto LABEL_127;
                }
                (*(void (**)(uint64_t))(*(void *)v2 + 104LL))(v2);
                break;
              case 2:
                goto LABEL_114;
              case 3:
                if (v12 != 3) {
                  goto LABEL_127;
                }
                (*(void (**)(uint64_t))(*(void *)v2 + 136LL))(v2);
                break;
              case 4:
                if (v12 != 2) {
                  goto LABEL_127;
                }
                (*(void (**)(uint64_t))(*(void *)v2 + 152LL))(v2);
                break;
              default:
                goto LABEL_128;
            }

            goto LABEL_126;
          default:
            break;
        }
      }

      LOBYTE(v43[0]) = 4;
      if (v11 <= 0xFF) {
        goto LABEL_49;
      }
LABEL_148:
      __break(0x5507u);
LABEL_149:
      __break(0x550Au);
      goto LABEL_150;
    }
  }

  __break(0x5518u);
  if (v12 != 2) {
    goto LABEL_127;
  }
LABEL_114:
  if (*((unsigned __int8 *)v10 + 1) <= 2u)
  {
    (*(void (**)(uint64_t))(*(void *)v2 + 120LL))(v2);
LABEL_126:
    char v32 = 0;
  }

  else
  {
LABEL_127:
    char v32 = 4;
  }

LABEL_128:
  LOBYTE(v43[0]) = v32;
LABEL_49:
  BYTE1(v43[0]) = v11;
  unsigned __int8 v25 = 2;
  __int16 v26 = 128;
LABEL_50:
  sub_1000AC324(a2, v14, 0, 9LL, v26, *(_DWORD *)(a2 + 68), v43, v25);
  return sub_1000AB4C4(*(void *)(a1 + 8), a2, 0, 1u);
}

uint64_t sub_1000A548C(uint64_t result, uint64_t a2, unsigned int a3)
{
  if (result)
  {
    uint64_t v3 = result;
    if ((result & 7) == 0)
    {
      char v4 = a3;
      if (a3 >= 0x19)
      {
        __break(0x5518u);
      }

      else
      {
        bzero(v5, 0x800uLL);
        v5[4] = v4;
        v5[5] = 15;
        uint64_t result = *(void *)(v3 + 8);
        if (result && (result & 7) == 0) {
          return sub_100057A4C(result, 9u, 0LL, (uint64_t)v5, 2048);
        }
      }
    }
  }

  __break(0x5516u);
  return result;
}

void sub_1000A5518(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_46;
  }
  int v15 = 0;
  if (a2 <= 7)
  {
    if (a2 == 1)
    {
      sub_1000CEAEC(0, 4, "%s:%d IAP_EVENT_CLASS_MODE_CHANGE with Event Type:%ld\n");
      return;
    }

    if (a2 != 4) {
      goto LABEL_47;
    }
    *(void *)(a1 + 1192) = a4;
    if (a4)
    {
      if (qword_10011C0E0)
      {
        if ((qword_10011C0E0 & 7) == 0)
        {
          pthread_mutex_lock((pthread_mutex_t *)(qword_10011C0E0 + 1200));
          *(_BYTE *)(a1 + 1271) = 0;
          if (qword_10011C0E0)
          {
            if ((qword_10011C0E0 & 7) == 0)
            {
              pthread_mutex_unlock((pthread_mutex_t *)(qword_10011C0E0 + 1200));
              return;
            }
          }
        }
      }
    }

    else
    {
      __break(0x5518u);
    }

    goto LABEL_46;
  }

  if (a2 != 8)
  {
    if (a2 == 32)
    {
      if (*(_DWORD *)(a1 + 1176) != a3) {
        goto LABEL_48;
      }
      sub_10006329C(a1, (uint64_t)&v15);
      uint64_t v7 = *(void *)(a1 + 8);
      if (v7 && (v7 & 7) == 0)
      {
        if (!sub_100057644(v7, 9u)) {
          return;
        }
        unsigned int v8 = sub_100062E0C();
        uint64_t v9 = *(void *)(a1 + 8);
        if (v9)
        {
          if ((v9 & 7) == 0)
          {
            unsigned int v10 = sub_1000575F0(v9, 9u);
            if (v8 < v10)
            {
              __break(0x5515u);
              goto LABEL_50;
            }

            if (v8 - v10 < 0x1F4) {
              return;
            }
            uint64_t v11 = *(void *)(a1 + 8);
            if (v11)
            {
              if ((v11 & 7) == 0)
              {
                sub_10005758C(v11, 9u, 0);
                uint64_t v12 = *(void *)(a1 + 8);
                if (v12)
                {
                  if ((v12 & 7) == 0)
                  {
                    sub_100057538(v12, 9u, 0);
                    return;
                  }
                }
              }
            }
          }
        }
      }
    }

    else
    {
      if (a2 != 64)
      {
LABEL_47:
        syslog(3, "CIapLingoSports::NotifyEvent: ERROR: Unknown event: %d !\n", a2);
LABEL_48:
        sub_1000D251C();
      }

      if (*(_BYTE *)(a1 + 1271)) {
        return;
      }
      uint64_t v5 = sub_100061274();
      if (v5 && (v5 & 7) == 0)
      {
        int v6 = sub_100054A7C(v5, *(void *)(a1 + 1192));
        if ((v6 + 8) <= 0xF)
        {
          if ((v6 | 2) == 6) {
            sub_1000A48A4();
          }
          return;
        }

void sub_1000A5790(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0)
  {
LABEL_16:
    __break(0x5516u);
    return;
  }

  uint64_t v4 = *(void *)(a1 + 8);
  if (!a2 || !v4)
  {
    if (v4)
    {
      uint64_t v5 = sub_100061274();
      if (v5 && (v5 & 7) == 0)
      {
        sub_10008C5A8(v5, 9, 0, *(void *)(a1 + 8));
        *(void *)(a1 + 1192) = 0LL;
        *(_BYTE *)(a1 + 1271) = 0;
        sub_100063750(a1, a2);
        return;
      }
    }

    else
    {
      sub_100063750(a1, a2);
      *(void *)(a1 + 1192) = 0LL;
      uint64_t v6 = *(void *)(a1 + 8);
      if (v6)
      {
        if ((v6 & 7) == 0)
        {
          sub_10005758C(v6, 9u, 0);
          uint64_t v7 = *(void *)(a1 + 8);
          if (v7)
          {
            if ((v7 & 7) == 0)
            {
              sub_100057538(v7, 9u, 0);
              *(_DWORD *)(a1 + 126_Block_object_dispose((const void *)(v1 - 120), 8) = 0;
              uint64_t v8 = sub_100061274();
              if (v8)
              {
                if ((v8 & 7) == 0)
                {
                  sub_10008C5A8(v8, 9, 109, *(void *)(a1 + 8));
                  return;
                }
              }
            }
          }
        }
      }
    }

    goto LABEL_16;
  }

uint64_t sub_1000A5888(uint64_t result, int a2)
{
  if (!result || a2 != 9)
  {
    __break(0x5518u);
    goto LABEL_8;
  }

  uint64_t v2 = result;
  uint64_t result = sub_100064240(9LL);
  *(_BYTE *)uint64_t v2 = 9;
  if (v2 == -1)
  {
LABEL_8:
    __break(0x5500u);
    return result;
  }

  uint64_t v3 = 0x200000000000000LL;
  if (!(_DWORD)result) {
    uint64_t v3 = 0LL;
  }
  *(void *)(v2 + 1) = v3;
  return 0LL;
}

uint64_t sub_1000A58E4(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_21;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_21;
  }
  sub_10006107C(result, a2, 12);
  uint64_t v4 = 0LL;
  *(void *)uint64_t v2 = off_100106860;
  do
  {
    uint64_t v5 = (_OWORD *)(v2 + v4 + 1240);
    *uint64_t v5 = 0uLL;
    v5[1] = 0uLL;
    *(_OWORD *)(v2 + v4 + 1272) = 0uLL;
    v4 += 80LL;
  }

  while (v4 != 1280);
  uint64_t result = sub_1000B6CE0();
  if (!result || (result & 7) != 0 || (uint64_t result = sub_10008E168(result, a2)) == 0 || (result & 7) != 0)
  {
LABEL_21:
    __break(0x5516u);
    goto LABEL_22;
  }

  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 184LL))(result, 12LL);
  if (result < 0x10000)
  {
    *(_WORD *)(v2 + 1204) = result;
    uint64_t result = *(void *)(v2 + 8);
    if (result)
    {
      if ((result & 7) == 0)
      {
        sub_10005758C(result, 0xCu, 0);
        uint64_t result = *(void *)(v2 + 8);
        if (result)
        {
          if ((result & 7) == 0)
          {
            uint64_t result = sub_100057538(result, 0xCu, 0);
            unint64_t v6 = 0LL;
            *(void *)(v2 + 1192) = 0LL;
            do
            {
              if (v6 > ~(v2 + 1208))
              {
                __break(0x5513u);
                goto LABEL_21;
              }

              *(_OWORD *)(v2 + v6 + 120_Block_object_dispose((const void *)(v1 - 120), 8) = 0uLL;
              *(void *)(v2 + v6 + 1232) = 0LL;
              v6 += 80LL;
            }

            while (v6 != 1280);
            *(void *)(v2 + 2936) = 0LL;
            *(_OWORD *)(v2 + 2904) = 0u;
            *(_OWORD *)(v2 + 2920) = 0u;
            *(_OWORD *)(v2 + 2872) = 0u;
            *(_OWORD *)(v2 + 288_Block_object_dispose((const void *)(v1 - 120), 8) = 0u;
            *(_OWORD *)(v2 + 2840) = 0u;
            *(_OWORD *)(v2 + 2856) = 0u;
            *(_OWORD *)(v2 + 280_Block_object_dispose((const void *)(v1 - 120), 8) = 0u;
            *(_OWORD *)(v2 + 2824) = 0u;
            *(_OWORD *)(v2 + 2776) = 0u;
            *(_OWORD *)(v2 + 2792) = 0u;
            *(_OWORD *)(v2 + 2744) = 0u;
            *(_OWORD *)(v2 + 2760) = 0u;
            *(_OWORD *)(v2 + 2712) = 0u;
            *(_OWORD *)(v2 + 272_Block_object_dispose((const void *)(v1 - 120), 8) = 0u;
            *(_OWORD *)(v2 + 2680) = 0u;
            *(_OWORD *)(v2 + 2696) = 0u;
            *(_OWORD *)(v2 + 264_Block_object_dispose((const void *)(v1 - 120), 8) = 0u;
            *(_OWORD *)(v2 + 2664) = 0u;
            *(_OWORD *)(v2 + 2616) = 0u;
            *(_OWORD *)(v2 + 2632) = 0u;
            *(_OWORD *)(v2 + 2584) = 0u;
            *(_OWORD *)(v2 + 2600) = 0u;
            *(_OWORD *)(v2 + 2552) = 0u;
            *(_OWORD *)(v2 + 256_Block_object_dispose((const void *)(v1 - 120), 8) = 0u;
            *(_OWORD *)(v2 + 2520) = 0u;
            *(_OWORD *)(v2 + 2536) = 0u;
            *(_OWORD *)(v2 + 248_Block_object_dispose((const void *)(v1 - 120), 8) = 0u;
            *(_OWORD *)(v2 + 2504) = 0u;
            uint64_t result = sub_1000B6CE0();
            if (result && (result & 7) == 0)
            {
              sub_10008C5A8(result, 12, 45, a2);
              return v2;
            }
          }
        }
      }
    }

    goto LABEL_21;
  }

uint64_t sub_1000A5A7C(uint64_t result, uint64_t a2)
{
  if (result && (result & 7) == 0) {
    return sub_1000A58E4(result, a2);
  }
  __break(0x5516u);
  return result;
}

void sub_1000A5A90(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0 || (*(void *)a1 = off_100106860, (uint64_t v2 = sub_1000B6CE0()) == 0) || (v2 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    sub_10008C5A8(v2, 12, 0, *(void *)(a1 + 8));
    uint64_t v3 = 1280LL;
    do
    {
      uint64_t v4 = a1 + v3;
      v3 -= 80LL;
    }

    while (v3);
    sub_100061324(a1);
  }

void sub_1000A5B28(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    sub_1000A5A90(a1);
  }
}

void sub_1000A5B3C(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    sub_1000A5A90(a1);
    operator delete(v1);
  }

unint64_t sub_1000A5B60(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_82;
  }
  if (!*(void *)(a1 + 8)) {
    goto LABEL_10;
  }
  uint64_t v4 = sub_100061274();
  if (!v4 || (v4 & 7) != 0) {
    goto LABEL_82;
  }
  if (!sub_10008E7AC(v4, *(void *)(a1 + 8)))
  {
LABEL_10:
    uint64_t v6 = 89LL;
LABEL_11:
    sub_1000AD43C(a2);
    return v6;
  }

  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5 || (v5 & 7) != 0) {
    goto LABEL_82;
  }
  if ((sub_1000569F0(v5) & 1) != 0) {
    goto LABEL_10;
  }
  if (!a2 || (a2 & 7) != 0) {
LABEL_82:
  }
    __break(0x5516u);
  uint64_t v8 = *(void *)(a2 + 8);
  uint64_t v9 = *(char **)(a2 + 24);
  signed int v10 = *(unsigned __int16 *)(a2 + 126);
  unsigned int v11 = *(unsigned __int16 *)(a2 + 128);
  unsigned __int8 v27 = -1;
  if (!v9 && v11) {
    sub_1000D251C();
  }
  if (v8 != *(void *)(a1 + 1192) || (v10 & 0x7Fu) > 0x12) {
    goto LABEL_33;
  }
  unint64_t result = sub_1000A600C(a1);
  if ((result & 1) == 0)
  {
    uint64_t v13 = sub_100061274();
    if (!v13 || (v13 & 7) != 0) {
      goto LABEL_82;
    }
    unint64_t result = sub_100054B88(v13, *(void *)(a1 + 1192));
    if (!(_DWORD)result)
    {
LABEL_33:
      if ((v10 & 0x80) != 0)
      {
        uint64_t v6 = 2LL;
        goto LABEL_11;
      }

      sub_1000ABE78(a2, *(void *)(a2 + 8), 0, 12LL, 0, *(_DWORD *)(a2 + 68), 4, v10, 0, 255, 0LL, 0, 0, 0);
      return sub_1000A6DD0(*(void *)(a1 + 8), a2, 0);
    }
  }

  if (v10 <= 15)
  {
    switch(v10)
    {
      case 1:
        if (v11) {
          goto LABEL_73;
        }
        memset(&v28[1], 170, 14);
        sub_1000A612C();
        unint64_t result = sub_1000A6088();
        v28[0] = bswap64(result);
        if ((unint64_t)v28 >= 0xFFFFFFFFFFFFFFF8LL
          || (LODWORD(v28[1]) = 64, (unint64_t)v28 >= 0xFFFFFFFFFFFFFFF4LL)
          || (WORD2(v28[1]) = bswap32(*(unsigned __int16 *)(a1 + 1204)) >> 16,
              (unint64_t)v28 >= 0xFFFFFFFFFFFFFFF2LL)
          || (HIWORD(v28[1]) = 0, (unint64_t)v28 >= 0xFFFFFFFFFFFFFFF0LL))
        {
LABEL_85:
          __break(0x5500u);
          goto LABEL_86;
        }

        LOWORD(v28[2]) = 4135;
        if ((unint64_t)v28 < 0xFFFFFFFFFFFFFFEELL)
        {
          BYTE2(v28[2]) = -56;
          if ((unint64_t)v28 <= 0xFFFFFFFFFFFFFFECLL)
          {
            BYTE3(v28[2]) = 0;
            if ((void *)((char *)&v28[2] + 5) == 0LL || (unint64_t)v28 < 0xFFFFFFFFFFFFFFEBLL)
            {
              BYTE4(v28[2]) = 1;
              if ((unint64_t)v28 <= 0xFFFFFFFFFFFFFFEALL)
              {
                BYTE5(v28[2]) = 2;
                int v18 = *(_DWORD *)(a2 + 68);
                uint64_t v19 = a2;
                uint64_t v20 = v8;
                __int16 v21 = 2;
                unsigned int v22 = 22;
                goto LABEL_58;
              }
            }
          }
        }

        break;
      case 7:
        if (v11 < 6) {
          goto LABEL_73;
        }
        if ((unint64_t)v9 <= 0xFFFFFFFFFFFFFFFBLL)
        {
          unsigned int v23 = v9[4];
          unsigned __int8 v27 = v9[4];
          if (!v9) {
            goto LABEL_82;
          }
          if ((unint64_t)(v9 + 3) >= 2)
          {
            if ((v11 - 5) >> 16) {
              goto LABEL_86;
            }
            if ((unint64_t)v9 <= 0xFFFFFFFFFFFFFFFALL)
            {
              sub_1000A61F4(a1, v12, v23, bswap32(*(_DWORD *)v9), (unsigned __int16)(v11 - 5), v9 + 5);
              goto LABEL_67;
            }
          }
        }

        break;
      case 8:
        if (v11 != 1) {
          goto LABEL_73;
        }
        if (!v9) {
          goto LABEL_82;
        }
        unsigned __int8 v27 = *v9;
        int v16 = sub_1000A643C(a1, v8, v27);
LABEL_67:
        int v15 = v16;
        goto LABEL_74;
      default:
        goto LABEL_72;
    }

LABEL_72:
      if ((v10 & 0x80) == 0) {
        goto LABEL_73;
      }
      goto LABEL_76;
    }

    if (v11 != 3)
    {
LABEL_76:
      uint64_t v6 = 2LL;
      goto LABEL_77;
    }

    if (v9 != (char *)-1LL)
    {
      BOOL v17 = v9[1] == 133;
      goto LABEL_71;
    }

    goto LABEL_84;
  }

  if (v10 == 16)
  {
    if (v11) {
      goto LABEL_73;
    }
    sub_1000A612C();
    v28[0] = bswap64(sub_1000A64F8());
    int v18 = *(_DWORD *)(a2 + 68);
    uint64_t v19 = a2;
    uint64_t v20 = v8;
    __int16 v21 = 17;
    unsigned int v22 = 8;
LABEL_58:
    sub_1000AC324(v19, v20, 0, 12LL, v21, v18, v28, v22);
    goto LABEL_73;
  }

  if (v10 != 18) {
    goto LABEL_72;
  }
  if (!v11)
  {
LABEL_73:
    int v15 = 4;
LABEL_74:
    return sub_1000A6DD0(*(void *)(a1 + 8), a2, 0);
  }

  if (!v9) {
    goto LABEL_82;
  }
  if (v11 <= 0xFF)
  {
    sub_1000A659C(a1, v8, (unsigned __int8 *)v9, v11, &v27);
    int v15 = v14;
    if (!v14)
    {
      sub_1000AC324(a2, v8, 0, 12LL, 4, *(_DWORD *)(a2 + 68), &v27, 1u);
      int v15 = 0;
    }

    goto LABEL_74;
  }

  __break(0x5515u);
  return result;
}

uint64_t sub_1000A600C(uint64_t result)
{
  if (!result) {
    goto LABEL_13;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_13;
  }
  if (!*(void *)(result + 8))
  {
    __break(0x5518u);
LABEL_13:
    __break(0x5516u);
    goto LABEL_14;
  }

  unint64_t result = sub_100061274();
  if (!result || (result & 7) != 0) {
    goto LABEL_13;
  }
  if (*(unsigned __int8 *)(result + 201) < 2u)
  {
    if (!*(_BYTE *)(result + 201)) {
      return 0LL;
    }
    unint64_t result = *(void *)(v1 + 8);
    if (result && (result & 7) == 0) {
      return sub_100056A48(result);
    }
    goto LABEL_13;
  }

uint64_t sub_1000A6088()
{
  if (byte_10011C5FF >= 0) {
    uint64_t v0 = (const char *)&qword_10011C5E8;
  }
  else {
    uint64_t v0 = (const char *)qword_10011C5E8;
  }
  uint64_t result = statfs(v0, &v2);
  if ((_DWORD)result) {
    return 0LL;
  }
  if (is_mul_ok(v2.f_blocks, v2.f_bsize)) {
    return v2.f_blocks * v2.f_bsize;
  }
  __break(0x550Cu);
  return result;
}

void sub_1000A612C()
{
  unsigned __int8 v0 = atomic_load((unsigned __int8 *)&qword_10011C600);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_10011C600))
  {
    qword_10011C5E8 = 0LL;
    qword_10011C5F0 = 0LL;
    unk_10011C5F8 = 0LL;
    __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10011C5E8, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10011C600);
  }

  uint64_t v1 = qword_10011C5F0;
  if (byte_10011C5FF >= 0) {
    uint64_t v1 = byte_10011C5FF;
  }
  if (!v1)
  {
    std::string::assign((std::string *)&qword_10011C5E8, (const std::string::value_type *)qword_10011C888);
    std::string::append((std::string *)&qword_10011C5E8, "/Accessories");
    sub_1000BD67C((char *)&qword_10011C5E8);
  }

void sub_1000A61F4(uint64_t a1, uint64_t a2, unsigned int a3, unsigned int a4, unsigned int a5, char *a6)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_36;
  }
  sub_1000A612C();
  uint64_t v11 = sub_1000A64F8();
  if (a3 >= 0x10) {
    return;
  }
  if (__CFADD__(a1 + 1208, 80LL * a3))
  {
LABEL_35:
    __break(0x5513u);
    goto LABEL_36;
  }

  uint64_t v12 = (FILE **)(a1 + 1208 + 80LL * a3);
  if ((((_BYTE)a1 - 72 + 80 * (_BYTE)a3) & 7) != 0)
  {
LABEL_36:
    __break(0x5516u);
    goto LABEL_37;
  }

  unsigned int v13 = a3;
  fseek(*v12, a4, 0);
  int v14 = a6;
  size_t v15 = a5;
  while (1)
  {
    size_t v16 = fwrite(v14, 1uLL, v15, *v12);
    BOOL v17 = v15 >= v16;
    v15 -= v16;
    if (!v17) {
      break;
    }
    if (__CFADD__(v14, v16)) {
      goto LABEL_35;
    }
    v14 += v16;
    if (!v15)
    {
      if ((((_BYTE)a1 + 80 * (_BYTE)v13 - 56) & 7) != 0) {
        goto LABEL_36;
      }
      unsigned int v18 = *(_DWORD *)(a1 + 80LL * v13 + 1224);
      if (v18 > 3) {
        goto LABEL_38;
      }
      if (__CFADD__(a1 + 2488, 152LL * v18)) {
        goto LABEL_35;
      }
      uint64_t v19 = a1 + 152LL * v18 + 2488;
      if ((v19 & 7) == 0)
      {
        int v20 = *(_DWORD *)v19;
        if (*(_DWORD *)v19 > 0xFFu) {
          goto LABEL_39;
        }
        if ((v20 & 8) != 0)
        {
          __int16 v21 = (uint64_t *)(a1 + 80LL * v13 + 1216);
          if ((((_BYTE)a1 + 80 * (_BYTE)v13 - 64) & 7) != 0) {
            goto LABEL_36;
          }
          uint64_t v22 = *v21;
          if (!*v21)
          {
            __break(0x5518u);
            goto LABEL_35;
          }

          if ((v22 & 7) != 0) {
            goto LABEL_36;
          }
          int v23 = sub_1000CD340(v22, a6, a5);
          if (v23) {
            sub_1000CEAEC( 0,  4,  "%s:%d WriteiPodFileData XmlSig.Update: status: 0x%08X, size: 0x%08X\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoStorage.cpp",  616,  v23,  a5);
          }
        }

        if ((v20 & 0x10) == 0) {
          return;
        }
        uint64_t v24 = a1 + 80LL * v13 + 1232;
        if ((v24 & 7) == 0)
        {
          if ((UpdateSigningContext(*(void *)v24, a6, a5) & 1) == 0) {
            sub_1000CEAEC( 0,  4,  "%s:%d Update: %d %hhx %d\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoStorage.cpp",  626,  0,  *(void *)v24,  a5);
          }
          return;
        }
      }

      goto LABEL_36;
    }
  }

uint64_t sub_1000A643C(uint64_t result, uint64_t a2, unsigned int a3)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_17;
  }
  if (a3 > 0xF) {
    return 13LL;
  }
  if (__CFADD__(result + 1208, 80LL * a3))
  {
LABEL_18:
    __break(0x5513u);
    goto LABEL_19;
  }

  uint64_t v3 = (FILE **)(result + 1208 + 80LL * a3);
  if ((((_BYTE)result - 72 + 80 * (_BYTE)a3) & 7) != 0)
  {
LABEL_17:
    __break(0x5516u);
    goto LABEL_18;
  }

  uint64_t v4 = *v3;
  if (!*v3) {
    return 13LL;
  }
  if ((((_BYTE)result + 80 * (_BYTE)a3 - 56) & 7) != 0) {
    goto LABEL_17;
  }
  unsigned int v5 = *(_DWORD *)(result + 80LL * a3 + 1224);
  if (v5 >= 4)
  {
LABEL_19:
    __break(0x550Au);
    return result;
  }

  if (v5) {
    BOOL v6 = v5 == 3;
  }
  else {
    BOOL v6 = 1;
  }
  if (!v6)
  {
    sub_1000A720C(result, a2, a3);
    uint64_t v4 = *v3;
    if (!*v3) {
      return 0LL;
    }
  }

  fclose(v4);
  uint64_t result = 0LL;
  *uint64_t v3 = 0LL;
  return result;
}

uint64_t sub_1000A64F8()
{
  if (byte_10011C5FF >= 0) {
    unsigned __int8 v0 = (const char *)&qword_10011C5E8;
  }
  else {
    unsigned __int8 v0 = (const char *)qword_10011C5E8;
  }
  uint64_t result = statfs(v0, &v2);
  if ((_DWORD)result) {
    return 0LL;
  }
  if (is_mul_ok(v2.f_bavail, v2.f_bsize)) {
    return v2.f_bavail * v2.f_bsize;
  }
  __break(0x550Cu);
  return result;
}

void sub_1000A659C(uint64_t a1, uint64_t a2, unsigned __int8 *a3, unsigned int a4, _BYTE *a5)
{
  if (!a1) {
    goto LABEL_126;
  }
  if ((a1 & 7) != 0) {
    goto LABEL_126;
  }
  sub_1000A612C();
  uint64_t v10 = sub_1000A64F8();
  if (!a3) {
    goto LABEL_126;
  }
  unsigned int v11 = *a3;
  if (v11 >= 4) {
    goto LABEL_128;
  }
  if (__CFADD__(a1 + 2488, 152LL * *a3)) {
    goto LABEL_127;
  }
  if (v10 < 0x258000)
  {
    int v46 = 0;
    int v12 = 3;
    int v13 = 3;
    goto LABEL_36;
  }

  if (a4 < 5)
  {
    int v46 = 0;
    int v13 = *a3;
  }

  else
  {
    unsigned int v14 = bswap32(*(_DWORD *)(a3 + 1));
    int v46 = v14;
    int v13 = 3;
    int v12 = 4;
    if ((v14 & 0xFFFFFFE4) != 0 || (v14 & 0x18) == 0x18LL) {
      goto LABEL_36;
    }
    if (a4 > 0x85 || a4 == 5) {
      int v16 = 3;
    }
    else {
      int v16 = *a3;
    }
    if (a4 == 5) {
      int v17 = *a3;
    }
    else {
      int v17 = 3;
    }
    if ((v14 & 1) != 0) {
      int v13 = v16;
    }
    else {
      int v13 = v17;
    }
    if ((v14 & 0xA) == 8LL)
    {
      int v12 = 4;
      int v13 = 3;
      goto LABEL_36;
    }
  }

  if (v13 == 2)
  {
    uint64_t v18 = sub_100061274();
    if (!v18 || (v18 & 7) != 0) {
      goto LABEL_126;
    }
    if ((sub_10008C710(v18, a2) & 0x200) != 0)
    {
      if ((~v46 & 0xB) != 0) {
        int v13 = 3;
      }
      else {
        int v13 = 2;
      }
    }

    else
    {
      int v13 = 3;
    }
  }

  int v12 = 4;
LABEL_36:
  unsigned int v19 = sub_1000A7B64(a1);
  *a5 = v19;
  if (v19 == 16)
  {
LABEL_40:
    int v12 = 3;
    sub_1000CEAEC( 0,  4,  "%s:%d CIapLingoStorage::OpeniPodFeatureFile invalid feature type: %d !",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoStorage.cpp",  936,  3);
    int v13 = 3;
LABEL_41:
    int v22 = 255;
    *a5 = -1;
LABEL_42:
    syslog(4, "OpeniPodFeatureFile(feature = %d, options = 0x%x, handle = %u) == %d\n", v13, v46, v22, v12);
    return;
  }

  int v20 = (int *)(a1 + 2488 + 152LL * v11);
  if ((((_BYTE)a1 - 72 - 104 * (_BYTE)v11) & 7) != 0) {
    goto LABEL_126;
  }
  __int16 v21 = (_BYTE *)(a1 + 152LL * v11 + 2504);
  if ((((_BYTE)a1 - 104 * (_BYTE)v11 - 56) & 7) != 0) {
    goto LABEL_126;
  }
  if (*v21) {
    goto LABEL_40;
  }
  if (v19 >= 0x11) {
    goto LABEL_130;
  }
  if (__CFADD__(a1 + 1208, 80LL * v19)) {
    goto LABEL_127;
  }
  char v23 = a1 + 80 * v19 - 72;
  char v44 = (FILE **)(a1 + 80LL * v19 + 1208);
  unsigned int v45 = v19;
  if (v13 == 2)
  {
    v50.tm_zone = (char *)0xAAAAAAAAAAAAAAAALL;
    *(void *)&__int128 v29 = 0xAAAAAAAAAAAAAAAALL;
    *((void *)&v29 + 1) = 0xAAAAAAAAAAAAAAAALL;
    *(_OWORD *)&v50.tm_mon = v29;
    *(_OWORD *)&v50.tm_isdst = v29;
    *(_OWORD *)&v50.char tm_sec = v29;
    time_t v49 = time(0LL);
    localtime_r(&v49, &v50);
    uint64_t v30 = sub_1000C0AEC();
    memset(&v52, 0, sizeof(v52));
    *(void *)&__int128 v31 = 0xAAAAAAAAAAAAAAAALL;
    *((void *)&v31 + 1) = 0xAAAAAAAAAAAAAAAALL;
    *(_OWORD *)std::string __str = v31;
    *(_OWORD *)&__str[16] = v31;
    if (!v30)
    {
      __break(0x5518u);
      goto LABEL_126;
    }

    if ((v30 & 7) != 0)
    {
LABEL_126:
      __break(0x5516u);
      goto LABEL_127;
    }

    (*(void (**)(uint64_t, std::string *))(*(void *)v30 + 72LL))(v30, &v52);
    sub_1000BD67C((char *)&v52);
    if (v50.tm_year < 0xFFFFF894 && v50.tm_mon != -1)
    {
      snprintf( __str,  0x20uLL,  "%04d-%02d-%02d %02d;%02d;%02d.xml",
        v50.tm_year + 1900,
        v50.tm_mon + 1,
        v50.tm_mday,
        v50.tm_hour,
        v50.tm_min,
        v50.tm_sec);
      sub_1000A7BAC("/", &v52.__r_.__value_.__l.__data_, (char *)v47);
      sub_1000A7BAC(__str, (char **)v47, (char *)&__p);
      uint64_t v32 = a1 + 80LL * v45;
      uint64_t v33 = v32 + 1240;
      if (((v32 + 1240) & 7) != 0) {
        goto LABEL_126;
      }
      std::string::operator=((std::string *)(v32 + 1240), &__p);
      if (v48 < 0) {
        operator delete(v47[0]);
      }
      int v34 = fopen((const char *)v33, "w+");
      *char v44 = v34;
      if (!v34)
      {
        int v12 = 3;
LABEL_91:
        char v23 = (char)v44;
        goto LABEL_110;
      }

      if ((v46 & 2) != 0)
      {
        if ((((_BYTE)a1 - 104 * (_BYTE)v11 - 64) & 7) != 0) {
          goto LABEL_126;
        }
        *(void *)(a1 + 152LL * v11 + 2496) = v49;
      }

      if (a4 < 6 || (v46 & 1) == 0)
      {
        *(_BYTE *)(a1 + 152LL * v11 + 2505) = 0;
LABEL_85:
        uint64_t v35 = (uint64_t)operator new(0x68uLL);
        if ((v35 & 0xF) != 0) {
          goto LABEL_126;
        }
        uint64_t v36 = v35;
        if ((v35 & 7) != 0) {
          goto LABEL_126;
        }
        *(void *)uint64_t v35 = off_100106910;
        sub_1000CD314(v35);
        if ((((_BYTE)a1 + 80 * (_BYTE)v45 - 64) & 7) != 0) {
          goto LABEL_126;
        }
        *(void *)(a1 + 80LL * v45 + 1216) = v36;
        uint64_t v37 = sub_10004783C();
        if (!v37 || (v37 & 7) != 0) {
          goto LABEL_126;
        }
        (*(void (**)(uint64_t))(*(void *)v37 + 712LL))(v37);
        int v12 = 0;
        goto LABEL_91;
      }

      *(_BYTE *)(a1 + 152LL * v11 + 2505) = a4 - 5;
      if ((unint64_t)a3 <= 0xFFFFFFFFFFFFFFFALL)
      {
        memcpy((void *)(a1 + 152LL * v11 + 2506), a3 + 5, a4 - 5);
        goto LABEL_85;
      }

LABEL_127:
      __break(0x5513u);
LABEL_128:
      __break(0x550Au);
    }

uint64_t sub_1000A6DD0(uint64_t result, uint64_t a2, int a3)
{
  if (!result)
  {
    uint64_t result = sub_100061274();
    if (!result || (result & 7) != 0) {
      goto LABEL_15;
    }
    uint64_t result = sub_10008C35C(result, 12);
    if (!result) {
      return 2LL;
    }
  }

  if ((result & 7) == 0)
  {
    uint64_t result = sub_100057A88(result);
    if (result)
    {
      uint64_t v5 = result;
      if ((result & 7) == 0)
      {
        sub_10005789C(result, 0xCu);
        uint64_t result = sub_1000614B8(12LL, v5);
        if (!result)
        {
          sub_1000CEAEC( 0,  4,  "%s:%d StorageLingo object(%hhx) or handle(%hhx) is NULL! Cannot TransmitPacketDelaySleep\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoStorage.cpp",  1373,  0,  v5);
          uint64_t v7 = 2LL;
          goto LABEL_12;
        }

        if ((result & 7) == 0)
        {
          sub_10005758C(v5, 0xCu, 1);
          int v6 = sub_100062E0C();
          sub_100057538(v5, 0xCu, v6);
          uint64_t v7 = sub_1000AB4C4(v5, a2, a3, 1u);
LABEL_12:
          sub_1000578E8(v5, 0xCu);
          return v7;
        }
      }
    }
  }

uint64_t sub_1000A6EF4(uint64_t result)
{
  if (!result || (result & 7) != 0) {
    __break(0x5516u);
  }
  return result;
}

void sub_1000A6F08(uint64_t a1, int a2, unint64_t a3, uint64_t a4)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_51;
  }
  int v25 = 0;
  if (a2 > 7)
  {
    if (a2 != 8)
    {
      if (a2 != 32) {
        return;
      }
      v24[0] = 0LL;
      v24[1] = 0LL;
      v23[0] = 0xAAAAAAAAAAAAAAAALL;
      v23[1] = 0xAAAAAAAAAAAAAAAALL;
      sub_1000CE91C((uint64_t)v23, 1u);
      v23[0] = off_100103838;
      sub_1000CE9E8((uint64_t)v23, v24);
      if (*(_DWORD *)(a1 + 1176) == a3)
      {
        sub_10006329C(a1, (uint64_t)&v25);
        int v25 = 0;
        uint64_t v9 = *(void *)(a1 + 8);
        if (!v9 || (v9 & 7) != 0) {
          goto LABEL_51;
        }
        if (sub_100057644(v9, 0xCu))
        {
          uint64_t v10 = sub_100027C8C(v24);
          uint64_t v11 = *(void *)(a1 + 8);
          if (!v11 || (v11 & 7) != 0) {
            goto LABEL_51;
          }
          unsigned int v12 = sub_1000575F0(v11, 0xCu);
          if (__OFSUB__(v10, v12))
          {
LABEL_52:
            __break(0x5515u);
            return;
          }

          if (v10 - v12 >= 0x1F4)
          {
            uint64_t v13 = *(void *)(a1 + 8);
            if (!v13) {
              goto LABEL_51;
            }
            if ((v13 & 7) != 0) {
              goto LABEL_51;
            }
            sub_10005758C(v13, 0xCu, 0);
            uint64_t v14 = *(void *)(a1 + 8);
            if (!v14 || (v14 & 7) != 0) {
              goto LABEL_51;
            }
            sub_100057538(v14, 0xCu, 0);
          }
        }
      }

      v23[0] = off_100103838;
      sub_1000CE94C(v23);
      return;
    }

    uint64_t v17 = *(void *)(a1 + 8);
    if (!v17) {
      goto LABEL_51;
    }
    if ((v17 & 7) != 0) {
      goto LABEL_51;
    }
    sub_10005758C(v17, 0xCu, 0);
    uint64_t v18 = *(void *)(a1 + 8);
    if (!v18 || (v18 & 7) != 0) {
      goto LABEL_51;
    }
    sub_100057538(v18, 0xCu, 0);
    unsigned int v19 = 0;
    unint64_t v20 = a1 + 1128;
    while (1)
    {
      if (*(void *)(v20 + 80)) {
        sub_1000A643C(a1, a4, v19);
      }
      v20 += 80LL;
      if (v20 >= 0xFFFFFFFFFFFFFFB0LL) {
        break;
      }
      if (v19++ >= 0xF)
      {
        uint64_t v22 = *(void *)(a1 + 1192);
        if (v22 == a4)
        {
          *(void *)(a1 + 1192) = 0LL;
          do
          {
            LOWORD(v23[0]) = -1;
            v24[0] = 0LL;
          }

          while (!sub_100062E78(a1, -1, v23, v24, 0xFFFFu));
        }

        else
        {
          sub_1000CEAEC(0, 4, "%s:%d devPort(%hhx) != m_perPortInfo(%hhx)\n", "NotifyEvent", 474, a4, v22);
        }

        return;
      }
    }

uint64_t sub_1000A720C(uint64_t a1, uint64_t a2, unsigned int a3)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_131;
  }
  if (a3 >= 0x11) {
    goto LABEL_136;
  }
  if (__CFADD__(a1 + 1208, 80LL * a3)) {
    goto LABEL_132;
  }
  uint64_t v4 = (FILE **)(a1 + 1208 + 80LL * a3);
  if ((((_BYTE)a1 - 72 + 80 * (_BYTE)a3) & 7) != 0) {
    goto LABEL_131;
  }
  int v6 = (unsigned int *)(a1 + 80LL * a3 + 1224);
  if ((((_BYTE)a1 + 80 * (_BYTE)a3 - 56) & 7) != 0) {
    goto LABEL_131;
  }
  unsigned int v7 = *v6;
  if (*v6 >= 4) {
    goto LABEL_133;
  }
  if (__CFADD__(a1 + 2488, 152LL * v7))
  {
LABEL_132:
    __break(0x5513u);
    goto LABEL_133;
  }

  uint64_t v8 = (int *)(a1 + 2488 + 152LL * v7);
  if ((((_BYTE)a1 - 72 - 104 * (_BYTE)v7) & 7) != 0) {
    goto LABEL_131;
  }
  int v9 = *v8;
  syslog(4, "CloseiPodFeatureFile(handle = %u)\n", a3);
  if (!*v4) {
    goto LABEL_130;
  }
  if (*v6 > 3)
  {
LABEL_133:
    __break(0x550Au);
LABEL_134:
    __break(0x5500u);
    goto LABEL_135;
  }

  if (*v6 == 3) {
    goto LABEL_130;
  }
  fseek(*v4, 0LL, 2);
  if ((v9 & 2) == 0) {
    goto LABEL_64;
  }
  memset(v57, 170, sizeof(v57));
  uint64_t v10 = sub_10004783C();
  if (!v10) {
    goto LABEL_131;
  }
  if ((v10 & 7) != 0) {
    goto LABEL_131;
  }
  (*(void (**)(void **__return_ptr))(*(void *)v10 + 104LL))(v57);
  memset(__p, 170, sizeof(__p));
  uint64_t v11 = sub_10004783C();
  if (!v11) {
    goto LABEL_131;
  }
  if ((v11 & 7) != 0) {
    goto LABEL_131;
  }
  (*(void (**)(void **__return_ptr))(*(void *)v11 + 96LL))(__p);
  v55.tm_zone = (char *)0xAAAAAAAAAAAAAAAALL;
  *(void *)&__int128 v12 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v12 + 1) = 0xAAAAAAAAAAAAAAAALL;
  *(_OWORD *)&v55.tm_mon = v12;
  *(_OWORD *)&v55.tm_isdst = v12;
  *(_OWORD *)&v55.char tm_sec = v12;
  localtime_r((const time_t *)(a1 + 152LL * v7 + 2496), &v55);
  v54.tm_zone = (char *)0xAAAAAAAAAAAAAAAALL;
  *(void *)&__int128 v13 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v13 + 1) = 0xAAAAAAAAAAAAAAAALL;
  *(_OWORD *)&v54.tm_mon = v13;
  *(_OWORD *)&v54.tm_isdst = v13;
  *(_OWORD *)&v54.char tm_sec = v13;
  time_t v53 = time(0LL);
  localtime_r(&v53, &v54);
  __int16 v52 = 0;
  __int16 v51 = 0;
  __int16 v50 = 0;
  memset(&v49, 0, sizeof(v49));
  v14.tv_sec = 0xAAAAAAAAAAAAAAAALL;
  v14.tv_nsec = 0xAAAAAAAAAAAAAAAALL;
  *(timespec *)((char *)v64 + 15) = v14;
  timespec v63 = v14;
  v64[0] = v14;
  timespec v61 = v14;
  timespec v62 = v14;
  timespec v59 = v14;
  timespec v60 = v14;
  *(timespec *)&__str.st_blksize_t size = v14;
  *(timespec *)__str.st_qspare = v14;
  __str.st_birthtimespec = v14;
  *(timespec *)&__str.st_size_t size = v14;
  __str.st_mtimespec = v14;
  __str.st_ctimespec = v14;
  *(timespec *)&__str.st_uid = v14;
  __str.st_atimespec = v14;
  *(timespec *)&__str.st_dev = v14;
  uint64_t v15 = sub_10004783C();
  if (!v15 || (v15 & 7) != 0) {
    goto LABEL_131;
  }
  (*(void (**)(uint64_t, __int16 *, char *))(*(void *)v15 + 608LL))(v15, &v52, (char *)&v51 + 1);
  int v16 = SHIBYTE(v51) + v52;
  if ((v16 & 0x8000) != 0)
  {
    if (!((v16 + 0x7FFF) >> 16))
    {
      int v16 = -v16;
      uint64_t v17 = 45LL;
      goto LABEL_25;
    }

LABEL_135:
    __break(0x5507u);
LABEL_136:
    __break(0x5512u);
  }

  uint64_t v17 = 43LL;
LABEL_25:
  if (__OFADD__(v55.tm_year, 1900)
    || __OFADD__(v55.tm_mon, 1)
    || __OFADD__(v54.tm_year, 1900)
    || __OFADD__(v54.tm_mon, 1))
  {
    goto LABEL_134;
  }

  snprintf( (char *)&__str,  0xFFuLL,  "<ipodInfo><openTime>%04d-%02d-%02dT%02d:%02d:%02d%c%02d:%02d</openTime><closeTime>%04d-%02d-%02dT%02d:%02d:%02d%c%02 d:%02d</closeTime>",  v55.tm_year + 1900,  v55.tm_mon + 1,  v55.tm_mday,  v55.tm_hour,  v55.tm_min,  v55.tm_sec,  v17,  (unsigned __int16)v16 / 0x3Cu,  (unsigned __int16)v16 % 0x3Cu,  v54.tm_year + 1900,  v54.tm_mon + 1,  v54.tm_mday,  v54.tm_hour,  v54.tm_min,  v54.tm_sec,  v17,  (unsigned __int16)v16 / 0x3Cu,  (unsigned __int16)v16 % 0x3Cu);
  std::string::assign(&v49, (const std::string::value_type *)&__str);
  uint64_t v18 = sub_10004783C();
  if (!v18 || (v18 & 7) != 0) {
    goto LABEL_131;
  }
  (*(void (**)(uint64_t, __int16 *, char *, __int16 *))(*(void *)v18 + 160LL))( v18,  &v51,  (char *)&v50 + 1,  &v50);
  unsigned int v19 = v57;
  if (SHIBYTE(v57[2]) < 0) {
    unsigned int v19 = (void **)v57[0];
  }
  unint64_t v20 = __p;
  if (SHIBYTE(__p[2]) < 0) {
    unint64_t v20 = (void **)__p[0];
  }
  snprintf( (char *)&__str,  0xFFuLL,  "<model>%s</model><softwareVersion>%d.%d.%d</softwareVersion><serialNumber>%s</serialNumber></ipodInfo>",  (const char *)v19,  v51,  HIBYTE(v50),  v50,  (const char *)v20);
  std::string::append(&v49, (const std::string::value_type *)&__str);
  if ((v49.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    size_t size = v49.__r_.__value_.__s.__size_;
  }
  else {
    size_t size = v49.__r_.__value_.__l.__size_;
  }
  if ((v49.__r_.__value_.__s.__size_ & 0x80u) == 0) {
    uint64_t v22 = &v49;
  }
  else {
    uint64_t v22 = (std::string *)v49.__r_.__value_.__r.__words[0];
  }
  if (fwrite(v22, 1uLL, size, *v4) != size) {
    sub_1000CEAEC( 0,  4,  "%s:%d writeLen != xmlBuffLen\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoStorage.cpp",  1111);
  }
  if ((v9 & 8) != 0)
  {
    char v23 = (uint64_t *)(a1 + 80LL * a3 + 1216);
    if ((((_BYTE)a1 + 80 * (_BYTE)a3 - 64) & 7) != 0) {
      goto LABEL_131;
    }
    uint64_t v24 = *v23;
    if (!*v23) {
      goto LABEL_130;
    }
    if ((v24 & 7) != 0) {
      goto LABEL_131;
    }
    if ((v49.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      int v25 = &v49;
    }
    else {
      int v25 = (std::string *)v49.__r_.__value_.__r.__words[0];
    }
    if (sub_1000CD340(v24, v25, size)) {
      sub_1000CEAEC( 0,  4,  "%s:%d 0 != xmlStatus\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoStorage.cpp",  1123);
    }
  }

  if ((v9 & 0x10) != 0)
  {
    if ((((_BYTE)a1 + 80 * (_BYTE)a3 - 48) & 7) != 0) {
      goto LABEL_131;
    }
    if ((v49.__r_.__value_.__s.__size_ & 0x80u) == 0) {
      uint64_t v26 = &v49;
    }
    else {
      uint64_t v26 = (std::string *)v49.__r_.__value_.__r.__words[0];
    }
    if ((UpdateSigningContext(*(void *)(a1 + 80LL * a3 + 1232), v26, size) & 1) == 0) {
      sub_1000CEAEC( 0,  4,  "%s:%d !secStatus\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapLingoStorage.cpp",  1132);
    }
  }

  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v57[2]) < 0)
  {
    operator delete(v57[0]);
    if ((v9 & 1) == 0) {
      goto LABEL_80;
    }
    goto LABEL_65;
  }

LABEL_130:
    __break(0x5518u);
    goto LABEL_131;
  }

uint64_t sub_1000A7B64(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result & 7;
    if ((result & 7) == 0)
    {
      unint64_t v2 = 0LL;
      while (v2 <= ~(result + 1208))
      {
        if (*(void *)(result + 1208 + v2))
        {
          ++v1;
          v2 += 80LL;
          if (v1 != 16) {
            continue;
          }
        }

        return v1;
      }

      __break(0x5513u);
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000A7BAC@<X0>(char *__s@<X1>, char **a2@<X0>, char *a3@<X8>)
{
  else {
    int64_t v6 = (int64_t)a2[1];
  }
  uint64_t result = strlen(__s);
  memset(a3, 170, 24);
  if (__CFADD__(v6, result)) {
    goto LABEL_31;
  }
  int64_t v8 = result;
  uint64_t result = (uint64_t)sub_1000A7DBC((uint64_t)a3, v6 + result);
  if (a3[23] < 0) {
    a3 = *(char **)a3;
  }
  else {
    int v9 = *a2;
  }
  BOOL v10 = __CFADD__(v6, v9);
  BOOL v11 = &v9[v6] >= v9;
  if (v6 < 0) {
    BOOL v11 = v10;
  }
  if (!v11) {
    goto LABEL_30;
  }
  if (v6) {
    uint64_t result = (uint64_t)memmove(a3, v9, v6);
  }
  if (__CFADD__(a3, v6)) {
    goto LABEL_30;
  }
  BOOL v12 = __CFADD__(v8, __s);
  BOOL v13 = &__s[v8] >= __s;
  if (v8 < 0) {
    BOOL v13 = v12;
  }
  if (!v13) {
    goto LABEL_30;
  }
  timespec v14 = &a3[v6];
  if (v8) {
    uint64_t result = (uint64_t)memmove(v14, __s, v8);
  }
  if (__CFADD__(v14, v8))
  {
LABEL_30:
    __break(0x5513u);
LABEL_31:
    __break(0x5500u);
    goto LABEL_32;
  }

  if (a3)
  {
    v14[v8] = 0;
    goto LABEL_30;
  }

BOOL sub_1000A7CD8(BOOL result)
{
  if (result)
  {
    unint64_t v1 = result & 7;
    if ((result & 7) == 0)
    {
      unint64_t v2 = 0LL;
      BOOL v3 = 1;
      while (v1 <= ~(result + 2488))
      {
        if (!*(_BYTE *)(result + 2504 + v1))
        {
          BOOL v3 = v2 < 2;
          v1 += 152LL;
          if (++v2 != 3) {
            continue;
          }
        }

        return v3;
      }

      __break(0x5513u);
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000A7D34(uint64_t result, int a2)
{
  if (!result || a2 != 9)
  {
    __break(0x5518u);
    goto LABEL_8;
  }

  uint64_t v2 = result;
  uint64_t result = sub_100064240(9LL);
  *(_BYTE *)uint64_t v2 = 12;
  if (v2 == -1)
  {
LABEL_8:
    __break(0x5500u);
    return result;
  }

  uint64_t v3 = 0x100000000000000LL;
  if ((_DWORD)result) {
    uint64_t v3 = 0x300000000000000LL;
  }
  *(void *)(v2 + 1) = v3;
  return 0LL;
}

uint64_t sub_1000A7D94(uint64_t result)
{
  if (!result || (result & 7) != 0) {
    __break(0x5516u);
  }
  return result;
}

void sub_1000A7DA8(void *__p)
{
  else {
    operator delete(__p);
  }
}

void *sub_1000A7DBC(uint64_t a1, unint64_t a2)
{
  if (!a1 || (uint64_t v2 = (void *)a1, (a1 & 7) != 0))
  {
    __break(0x5516u);
LABEL_12:
    sub_100024588((uint64_t)v2);
  }

  if (a2 >= 0x7FFFFFFFFFFFFFF8LL) {
    goto LABEL_12;
  }
  if (a2 > 0x16)
  {
    if ((a2 | 7) == 0x17) {
      size_t v4 = 25LL;
    }
    else {
      size_t v4 = (a2 | 7) + 1;
    }
    uint64_t v5 = operator new(v4);
    v2[1] = a2;
    v2[2] = v4 | 0x8000000000000000LL;
    *uint64_t v2 = v5;
  }

  else
  {
    *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 120), 8) = 0LL;
    *(void *)(a1 + 16) = 0LL;
    *(void *)a1 = 0LL;
    *(_BYTE *)(a1 + 23) = a2;
  }

  return v2;
}

uint64_t sub_1000A7E4C(uint64_t result, uint64_t a2)
{
  if (!result
    || (uint64_t v2 = (void *)result, (result & 7) != 0)
    || (sub_10006107C(result, a2, 11), *uint64_t v2 = off_100106940, v2[149] = 0LL, (result = sub_100061274()) == 0)
    || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    sub_10008C5A8(result, 11, 8236, a2);
    return (uint64_t)v2;
  }

  return result;
}

uint64_t sub_1000A7EBC(uint64_t result, uint64_t a2)
{
  if (result && (result & 7) == 0) {
    return sub_1000A7E4C(result, a2);
  }
  __break(0x5516u);
  return result;
}

void sub_1000A7ED0(uint64_t a1)
{
  if (!a1
    || (a1 & 7) != 0
    || (*(void *)a1 = off_100106940, *(void *)(a1 + 1192) = 0LL, (uint64_t v2 = sub_100061274()) == 0)
    || (v2 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    sub_10008C5A8(v2, 11, 0, *(void *)(a1 + 8));
    sub_100061324(a1);
  }

void sub_1000A7F30(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    sub_1000A7ED0(a1);
  }
}

void sub_1000A7F44(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    sub_1000A7ED0(a1);
    operator delete(v1);
  }

uint64_t sub_1000A7F68(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_327;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_327;
  }
  uint64_t result = sub_10004783C();
  if (!result || (result & 7) != 0) {
    goto LABEL_327;
  }
  uint64_t result = sub_100061274();
  if (!result || (result & 7) != 0) {
    goto LABEL_327;
  }
  uint64_t result = *(void *)(v2 + 8);
  if (!result || (result & 7) != 0) {
    goto LABEL_327;
  }
  uint64_t result = sub_1000569F0(result);
  if ((result & 1) != 0) {
    return 89LL;
  }
  if (!a2 || (a2 & 7) != 0) {
    goto LABEL_327;
  }
  unsigned int v5 = *(unsigned __int16 *)(a2 + 126);
  if (v5 > 0x3D)
  {
LABEL_276:
    int v9 = 0LL;
LABEL_277:
    int v10 = 4;
    goto LABEL_313;
  }

  int64_t v6 = *(unsigned __int8 **)(a2 + 24);
  int v7 = *(unsigned __int16 *)(a2 + 128);
  uint64_t v8 = *(void *)(a2 + 8);
  uint64_t result = sub_100061274();
  if (!result || (result & 7) != 0) {
    goto LABEL_327;
  }
  uint64_t result = sub_100054A7C(result, v8);
  int v9 = 0LL;
  int v10 = 4;
  switch(v5)
  {
    case 1u:
      if ((_DWORD)result != 6) {
        goto LABEL_312;
      }
      if (!v8 || (v8 & 7) != 0) {
        goto LABEL_327;
      }
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v8 + 216LL))(v8);
      int v9 = 0LL;
      if (v7 != 1 || (_DWORD)result == 1) {
        goto LABEL_313;
      }
      if (!v6) {
        goto LABEL_327;
      }
      if (*v6 == 1)
      {
        uint64_t result = sub_10002ACC4();
        if (result && (result & 7) == 0)
        {
          uint64_t v15 = *(void (**)(void))(*(void *)result + 112LL);
          goto LABEL_310;
        }
      }

      else
      {
        if (*v6) {
          goto LABEL_312;
        }
        uint64_t result = sub_10002ACC4();
        if (result && (result & 7) == 0)
        {
          uint64_t v15 = *(void (**)(void))(*(void *)result + 112LL);
          goto LABEL_310;
        }
      }

      goto LABEL_327;
    case 2u:
      int v9 = 0LL;
      if (v7 != 1 || (_DWORD)result != 6) {
        goto LABEL_313;
      }
      if (!v6) {
        goto LABEL_327;
      }
      if (*v6 == 1)
      {
        uint64_t result = sub_10002ACC4();
        if (result && (result & 7) == 0)
        {
          uint64_t v15 = *(void (**)(void))(*(void *)result + 120LL);
          goto LABEL_310;
        }
      }

      else
      {
        if (*v6) {
          goto LABEL_312;
        }
        uint64_t result = sub_10002ACC4();
        if (result && (result & 7) == 0)
        {
          uint64_t v15 = *(void (**)(void))(*(void *)result + 120LL);
          goto LABEL_310;
        }
      }

      goto LABEL_327;
    case 5u:
      int v9 = 0LL;
      if (v7 != 1 || (_DWORD)result != 6) {
        goto LABEL_313;
      }
      if (!v6) {
        goto LABEL_327;
      }
      if (*v6 == 1)
      {
        uint64_t result = sub_10002ACC4();
        if (result && (result & 7) == 0)
        {
          uint64_t v15 = *(void (**)(void))(*(void *)result + 128LL);
          goto LABEL_310;
        }
      }

      else
      {
        if (*v6) {
          goto LABEL_312;
        }
        uint64_t result = sub_10002ACC4();
        if (result && (result & 7) == 0)
        {
          uint64_t v15 = *(void (**)(void))(*(void *)result + 128LL);
          goto LABEL_310;
        }
      }

      goto LABEL_327;
    case 6u:
      if (v7 != 2) {
        goto LABEL_312;
      }
      if (v6[1] == 1)
      {
        uint64_t result = sub_10002ACC4();
        if (result && (result & 7) == 0 && v6)
        {
          uint64_t v15 = *(void (**)(void))(*(void *)result + 136LL);
          goto LABEL_310;
        }
      }

      else
      {
        if (v6[1]) {
          goto LABEL_312;
        }
        uint64_t result = sub_10002ACC4();
        if (result && (result & 7) == 0 && v6)
        {
          uint64_t v15 = *(void (**)(void))(*(void *)result + 136LL);
          goto LABEL_310;
        }
      }

      goto LABEL_327;
    case 7u:
      int v9 = 0LL;
      if (v7 || (_DWORD)result != 6) {
        goto LABEL_313;
      }
      uint64_t result = sub_10002ACC4();
      if (!result || (result & 7) != 0) {
        goto LABEL_327;
      }
      uint64_t v15 = *(void (**)(void))(*(void *)result + 144LL);
      goto LABEL_310;
    case 8u:
      if (v7) {
        goto LABEL_312;
      }
      memset(&v57, 170, sizeof(v57));
      uint64_t result = sub_10004783C();
      if (!result || (result & 7) != 0) {
        goto LABEL_327;
      }
      uint64_t result = (uint64_t)(*(void *(**)(std::string *__return_ptr))(*(void *)result + 128LL))(&v57);
      std::string::size_type size = v57.__r_.__value_.__s.__size_;
      if ((v57.__r_.__value_.__s.__size_ & 0x80u) == 0) {
        uint64_t v27 = &v57;
      }
      else {
        uint64_t v27 = (std::string *)v57.__r_.__value_.__r.__words[0];
      }
      if ((v57.__r_.__value_.__s.__size_ & 0x80u) != 0) {
        std::string::size_type size = v57.__r_.__value_.__l.__size_;
      }
      BOOL v28 = __CFADD__(size, 1LL);
      std::string::size_type v29 = size + 1;
      if (v28) {
        goto LABEL_330;
      }
      if (v29 >> 16) {
        goto LABEL_328;
      }
      sub_1000AC324(a2, *(void *)(a2 + 8), 0, 11LL, 9, *(_DWORD *)(a2 + 68), v27, (unsigned __int16)v29);
      goto LABEL_290;
    case 0xAu:
      if (v7 != 8) {
        goto LABEL_312;
      }
      if (!v6) {
        goto LABEL_327;
      }
      uint64_t result = sub_10002ACC4();
      if (!result || (result & 7) != 0) {
        goto LABEL_327;
      }
      uint64_t v15 = *(void (**)(void))(*(void *)result + 152LL);
      goto LABEL_310;
    case 0xBu:
      if (v7) {
        goto LABEL_312;
      }
      uint64_t result = sub_10002ACC4();
      if (!result || (result & 7) != 0) {
        goto LABEL_327;
      }
      uint64_t v15 = *(void (**)(void))(*(void *)result + 160LL);
      goto LABEL_310;
    case 0xCu:
      if (v7 != 1) {
        goto LABEL_312;
      }
      if (!v6) {
        goto LABEL_327;
      }
      if (*v6 == 1)
      {
        uint64_t result = sub_10002ACC4();
        if (result && (result & 7) == 0)
        {
          uint64_t v15 = *(void (**)(void))(*(void *)result + 168LL);
          goto LABEL_310;
        }
      }

      else
      {
        if (*v6) {
          goto LABEL_312;
        }
        uint64_t result = sub_10002ACC4();
        if (result && (result & 7) == 0)
        {
          uint64_t v15 = *(void (**)(void))(*(void *)result + 168LL);
          goto LABEL_310;
        }
      }

      goto LABEL_327;
    case 0xDu:
      if (v7) {
        goto LABEL_312;
      }
      uint64_t result = sub_10002ACC4();
      if (!result || (result & 7) != 0) {
        goto LABEL_327;
      }
      LODWORD(v57.__r_.__value_.__l.__data_) = bswap32((*(uint64_t (**)(uint64_t))(*(void *)result + 184LL))(result));
      uint64_t v11 = *(void *)(a2 + 8);
      int v12 = *(_DWORD *)(a2 + 68);
      uint64_t v13 = a2;
      __int16 v14 = 14;
      goto LABEL_144;
    case 0xFu:
      if (v7 != 2) {
        goto LABEL_312;
      }
      if (!*(_WORD *)(v6 + 1)) {
        goto LABEL_311;
      }
      __break(0x550Du);
LABEL_149:
      if (v7 != 1) {
        goto LABEL_312;
      }
      if (!v6) {
        goto LABEL_327;
      }
      if (*v6) {
        goto LABEL_312;
      }
      uint64_t result = sub_10002ACC4();
      if (!result || (result & 7) != 0) {
        goto LABEL_327;
      }
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 200LL))(result);
      *(_DWORD *)((char *)&v57.__r_.__value_.__l.__data_ + 1) = -1431655766;
      v57.__r_.__value_.__s.__data_[0] = *v6;
      *(_DWORD *)((char *)&v57.__r_.__value_.__l.__data_ + 1) = bswap32(result);
      uint64_t v11 = *(void *)(a2 + 8);
      int v12 = *(_DWORD *)(a2 + 68);
      uint64_t v13 = a2;
      __int16 v14 = 21;
      unsigned int v30 = 5;
LABEL_178:
      sub_1000AC324(v13, v11, 0, 11LL, v14, v12, &v57, v30);
      goto LABEL_312;
    case 0x10u:
    case 0x16u:
      int v9 = 0LL;
      int v10 = 2;
      goto LABEL_313;
    case 0x12u:
      if (v7) {
        goto LABEL_312;
      }
      uint64_t result = sub_10002ACC4();
      if (!result || (result & 7) != 0) {
        goto LABEL_327;
      }
      LODWORD(v57.__r_.__value_.__l.__data_) = bswap32((*(uint64_t (**)(uint64_t))(*(void *)result + 192LL))(result));
      uint64_t v11 = *(void *)(a2 + 8);
      int v12 = *(_DWORD *)(a2 + 68);
      uint64_t v13 = a2;
      __int16 v14 = 19;
      goto LABEL_144;
    case 0x14u:
      goto LABEL_149;
    case 0x17u:
      if (v7 != 1) {
        goto LABEL_312;
      }
      if (!v6) {
        goto LABEL_327;
      }
      if (*v6 == 1)
      {
        uint64_t result = sub_10002ACC4();
        if (result && (result & 7) == 0)
        {
          uint64_t v15 = *(void (**)(void))(*(void *)result + 232LL);
          goto LABEL_310;
        }
      }

      else
      {
        if (*v6) {
          goto LABEL_312;
        }
        uint64_t result = sub_10002ACC4();
        if (result && (result & 7) == 0)
        {
          uint64_t v15 = *(void (**)(void))(*(void *)result + 232LL);
LABEL_310:
          v15();
          goto LABEL_311;
        }
      }

      goto LABEL_327;
    case 0x18u:
      if (v7) {
        goto LABEL_312;
      }
      uint64_t result = sub_10002ACC4();
      if (!result || (result & 7) != 0) {
        goto LABEL_327;
      }
      v57.__r_.__value_.__s.__data_[0] = (*(uint64_t (**)(uint64_t))(*(void *)result + 248LL))(result);
      uint64_t v11 = *(void *)(a2 + 8);
      int v12 = *(_DWORD *)(a2 + 68);
      uint64_t v13 = a2;
      __int16 v14 = 25;
      goto LABEL_177;
    case 0x1Au:
      if (v7 != 1) {
        goto LABEL_312;
      }
      uint64_t result = sub_10002ACC4();
      if (!result || (result & 7) != 0 || !v6) {
        goto LABEL_327;
      }
      uint64_t v15 = *(void (**)(void))(*(void *)result + 240LL);
      goto LABEL_310;
    case 0x1Bu:
      if (v7 != 1) {
        goto LABEL_312;
      }
      uint64_t result = sub_10002ACC4();
      if (!result || (result & 7) != 0 || !v6) {
        goto LABEL_327;
      }
      LODWORD(v57.__r_.__value_.__l.__data_) = bswap32( (*(uint64_t (**)(uint64_t, void))(*(void *)result + 256LL))( result,  *v6));
      uint64_t v11 = *(void *)(a2 + 8);
      int v12 = *(_DWORD *)(a2 + 68);
      uint64_t v13 = a2;
      __int16 v14 = 28;
LABEL_144:
      unsigned int v30 = 4;
      goto LABEL_178;
    case 0x1Du:
      if (v7 != 1) {
        goto LABEL_312;
      }
      uint64_t result = sub_10002ACC4();
      if (!result || (result & 7) != 0 || !v6) {
        goto LABEL_327;
      }
      v57.__r_.__value_.__s.__data_[0] = (*(uint64_t (**)(uint64_t, void))(*(void *)result + 264LL))( result,  *v6);
      uint64_t v11 = *(void *)(a2 + 8);
      int v12 = *(_DWORD *)(a2 + 68);
      uint64_t v13 = a2;
      __int16 v14 = 30;
LABEL_177:
      unsigned int v30 = 1;
      goto LABEL_178;
    case 0x1Fu:
      if (v7 != 5) {
        goto LABEL_312;
      }
      if (!v6) {
        goto LABEL_327;
      }
      unsigned int v31 = *(_DWORD *)v6;
      uint64_t v32 = v6[4];
      int v9 = (char *)operator new[](4 * v32);
      uint64_t result = sub_10002ACC4();
      if (!result || (result & 7) != 0) {
        goto LABEL_327;
      }
      uint64_t result = (*(uint64_t (**)(uint64_t, void))(*(void *)result + 272LL))(result, bswap32(v31));
      if (!(_DWORD)v32) {
        goto LABEL_190;
      }
      unint64_t v33 = 0LL;
      while (v33 <= ~result)
      {
        int v34 = &v9[v33];
        if (__CFADD__(v9, v33)) {
          goto LABEL_330;
        }
        if (!v34) {
          goto LABEL_327;
        }
        *(_DWORD *)int v34 = bswap32(*(_DWORD *)(result + v33));
        v33 += 4LL;
        if (4 * v32 == v33)
        {
LABEL_190:
          sub_1000AC324(a2, *(void *)(a2 + 8), 0, 11LL, 32, *(_DWORD *)(a2 + 68), v9, 4 * v32);
          goto LABEL_277;
        }
      }

      goto LABEL_329;
    case 0x21u:
      if (v7 != 1) {
        goto LABEL_312;
      }
      uint64_t result = sub_10002ACC4();
      if (!result || (result & 7) != 0 || !v6) {
        goto LABEL_327;
      }
      uint64_t v15 = *(void (**)(void))(*(void *)result + 208LL);
      goto LABEL_310;
    case 0x22u:
      if (v7 != 1) {
        goto LABEL_312;
      }
      uint64_t result = sub_10002ACC4();
      if (!result || (result & 7) != 0 || !v6) {
        goto LABEL_327;
      }
      uint64_t v15 = *(void (**)(void))(*(void *)result + 216LL);
      goto LABEL_310;
    case 0x23u:
      if (v7) {
        goto LABEL_312;
      }
      uint64_t result = sub_10002ACC4();
      if (!result || (result & 7) != 0) {
        goto LABEL_327;
      }
      uint64_t v15 = *(void (**)(void))(*(void *)result + 224LL);
      goto LABEL_310;
    case 0x24u:
      if (v7) {
        goto LABEL_312;
      }
      uint64_t result = sub_10002ACC4();
      if (!result) {
        goto LABEL_327;
      }
      if ((result & 7) != 0) {
        goto LABEL_327;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)result + 136LL))(result, 89LL, 1LL);
      uint64_t result = sub_10002ACC4();
      if (!result || (result & 7) != 0) {
        goto LABEL_327;
      }
      uint64_t v15 = *(void (**)(void))(*(void *)result + 136LL);
      goto LABEL_310;
    case 0x25u:
      if (v7) {
        goto LABEL_312;
      }
      uint64_t result = sub_10002ACC4();
      if (!result) {
        goto LABEL_327;
      }
      if ((result & 7) != 0) {
        goto LABEL_327;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)result + 136LL))(result, 90LL, 1LL);
      uint64_t result = sub_10002ACC4();
      if (!result || (result & 7) != 0) {
        goto LABEL_327;
      }
      uint64_t v15 = *(void (**)(void))(*(void *)result + 136LL);
      goto LABEL_310;
    case 0x26u:
      if (v7) {
        goto LABEL_312;
      }
      uint64_t result = sub_10002ACC4();
      if (!result) {
        goto LABEL_327;
      }
      if ((result & 7) != 0) {
        goto LABEL_327;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)result + 136LL))(result, 110LL, 1LL);
      uint64_t result = sub_10002ACC4();
      if (!result || (result & 7) != 0) {
        goto LABEL_327;
      }
      uint64_t v15 = *(void (**)(void))(*(void *)result + 136LL);
      goto LABEL_310;
    case 0x27u:
      if (v7 != 1) {
        goto LABEL_312;
      }
      if (!v6) {
        goto LABEL_327;
      }
      unsigned int v35 = *v6;
      if (!*v6) {
        goto LABEL_311;
      }
      unsigned int v36 = 0;
      while (1)
      {
        uint64_t result = sub_10002ACC4();
        if (!result) {
          goto LABEL_327;
        }
        if ((result & 7) != 0) {
          goto LABEL_327;
        }
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)result + 136LL))(result, 75LL, 1LL);
        uint64_t result = sub_10002ACC4();
        if (!result || (result & 7) != 0) {
          goto LABEL_327;
        }
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)result + 136LL))(result, 75LL, 0LL);
        if (v36 == 255) {
          goto LABEL_328;
        }
        int v10 = 0;
        int v9 = 0LL;
        unsigned int v36 = (v36 + 1);
        if (v36 >= v35) {
          goto LABEL_313;
        }
      }

    case 0x28u:
      if (v7 != 1) {
        goto LABEL_312;
      }
      if (!v6) {
        goto LABEL_327;
      }
      unsigned int v37 = *v6;
      if (!*v6) {
        goto LABEL_311;
      }
      unsigned int v38 = 0;
      while (1)
      {
        uint64_t result = sub_10002ACC4();
        if (!result) {
          goto LABEL_327;
        }
        if ((result & 7) != 0) {
          goto LABEL_327;
        }
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)result + 136LL))(result, 76LL, 1LL);
        uint64_t result = sub_10002ACC4();
        if (!result || (result & 7) != 0) {
          goto LABEL_327;
        }
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)result + 136LL))(result, 76LL, 0LL);
        if (v38 == 255) {
          goto LABEL_328;
        }
        int v10 = 0;
        int v9 = 0LL;
        unsigned int v38 = (v38 + 1);
        if (v38 >= v37) {
          goto LABEL_313;
        }
      }

    case 0x29u:
      if (v7 != 4) {
        goto LABEL_312;
      }
      if (!v6) {
        goto LABEL_327;
      }
      uint64_t result = sub_10002ACC4();
      if (!result || (result & 7) != 0) {
        goto LABEL_327;
      }
      uint64_t v39 = *(uint64_t (**)(void))(*(void *)result + 368LL);
      goto LABEL_248;
    case 0x2Au:
      if (v7 != 4) {
        goto LABEL_312;
      }
      if (!v6) {
        goto LABEL_327;
      }
      uint64_t result = sub_10002ACC4();
      if (!result || (result & 7) != 0) {
        goto LABEL_327;
      }
      uint64_t v39 = *(uint64_t (**)(void))(*(void *)result + 376LL);
      goto LABEL_248;
    case 0x2Bu:
      if (v7 != 4) {
        goto LABEL_312;
      }
      if (!v6) {
        goto LABEL_327;
      }
      uint64_t result = sub_10002ACC4();
      if (!result || (result & 7) != 0) {
        goto LABEL_327;
      }
      uint64_t v39 = *(uint64_t (**)(void))(*(void *)result + 384LL);
LABEL_248:
      int v23 = v39();
      goto LABEL_256;
    case 0x2Cu:
      if (v7 != 6) {
        goto LABEL_312;
      }
      if (!v6) {
        goto LABEL_327;
      }
      unsigned int v40 = *(unsigned __int16 *)v6;
      unsigned int v41 = *((unsigned __int16 *)v6 + 1);
      unsigned int v42 = *((unsigned __int16 *)v6 + 2);
      uint64_t result = sub_10002ACC4();
      if (!result || (result & 7) != 0) {
        goto LABEL_327;
      }
      int v23 = (*(uint64_t (**)(uint64_t, void, void, void))(*(void *)result + 392LL))( result,  bswap32(v40) >> 16,  bswap32(v41) >> 16,  __rev16(v42));
      goto LABEL_256;
    case 0x2Du:
      if (v7 != 14) {
        goto LABEL_312;
      }
      if (!v6) {
        goto LABEL_327;
      }
      unsigned int v16 = *(unsigned __int16 *)v6;
      unsigned int v17 = *((unsigned __int16 *)v6 + 1);
      unsigned int v18 = *((unsigned __int16 *)v6 + 2);
      unsigned int v19 = *((unsigned __int16 *)v6 + 3);
      unsigned int v20 = bswap32(*((unsigned __int16 *)v6 + 4));
      if (HIWORD(v20) > 0xFFu) {
        goto LABEL_328;
      }
      unsigned int v21 = bswap32(*((unsigned __int16 *)v6 + 5));
      if (HIWORD(v21) > 0xFFu) {
        goto LABEL_328;
      }
      unsigned int v22 = bswap32(*((unsigned __int16 *)v6 + 6));
      if (HIWORD(v22) > 0xFFu) {
        goto LABEL_328;
      }
      uint64_t result = sub_10002ACC4();
      if (!result || (result & 7) != 0) {
        goto LABEL_327;
      }
      int v23 = (*(uint64_t (**)(uint64_t, void, void, void, void, void, void, void))(*(void *)result + 400LL))( result,  bswap32(v16) >> 16,  bswap32(v17) >> 16,  bswap32(v18) >> 16,  bswap32(v19) >> 16,  BYTE2(v20),  BYTE2(v21),  BYTE2(v22));
LABEL_256:
      int v9 = 0LL;
      if (v23) {
        int v10 = 0;
      }
      else {
        int v10 = 4;
      }
      goto LABEL_313;
    case 0x2Eu:
      uint64_t result = sub_10002ACC4();
      if (!result || (result & 7) != 0) {
        goto LABEL_327;
      }
      uint64_t v43 = (*(uint64_t (**)(uint64_t))(*(void *)result + 408LL))(result);
      if (v43) {
        uint64_t v44 = (const char *)v43;
      }
      else {
        uint64_t v44 = "";
      }
      int v45 = *(_DWORD *)(a2 + 68);
      uint64_t result = strlen(v44);
      if (result == -1) {
        goto LABEL_330;
      }
      unsigned int v46 = (unsigned __int16)(result + 1);
      uint64_t v47 = a2;
      uint64_t v48 = *(void *)(a2 + 8);
      __int16 v49 = 47;
      goto LABEL_275;
    case 0x30u:
      uint64_t result = sub_10002ACC4();
      if (!result || (result & 7) != 0) {
        goto LABEL_327;
      }
      uint64_t v50 = (*(uint64_t (**)(uint64_t))(*(void *)result + 416LL))(result);
      if (v50) {
        uint64_t v44 = (const char *)v50;
      }
      else {
        uint64_t v44 = "";
      }
      int v45 = *(_DWORD *)(a2 + 68);
      uint64_t result = strlen(v44);
      if (result == -1) {
        goto LABEL_330;
      }
      unsigned int v46 = (unsigned __int16)(result + 1);
      uint64_t v47 = a2;
      uint64_t v48 = *(void *)(a2 + 8);
      __int16 v49 = 49;
LABEL_275:
      sub_1000AC324(v47, v48, 0, 11LL, v49, v45, v44, v46);
      goto LABEL_276;
    case 0x38u:
      if (v7 != 1) {
        goto LABEL_312;
      }
      if (!v6) {
        goto LABEL_327;
      }
      unsigned int v24 = *v6;
      if (v24 > 2) {
        goto LABEL_312;
      }
      LOWORD(v57.__r_.__value_.__l.__data_) = -21846;
      if (v24 == 2)
      {
        uint64_t result = sub_10002ACC4();
        if (result && (result & 7) == 0)
        {
          uint64_t v53 = (*(uint64_t (**)(uint64_t, std::string *))(*(void *)result + 488LL))(result, &v57);
          if ((_DWORD)v53) {
            goto LABEL_325;
          }
LABEL_320:
          int v10 = 2;
          goto LABEL_312;
        }

        goto LABEL_327;
      }

      if (v24 != 1)
      {
        uint64_t result = sub_10002ACC4();
        if (result && (result & 7) == 0)
        {
          int v25 = *(uint64_t (**)(void))(*(void *)result + 472LL);
          goto LABEL_324;
        }

LABEL_327:
        __break(0x5516u);
LABEL_328:
        __break(0x5507u);
LABEL_329:
        __break(0x5513u);
        goto LABEL_330;
      }

      uint64_t result = sub_10002ACC4();
      if (!result || (result & 7) != 0) {
        goto LABEL_327;
      }
      int v25 = *(uint64_t (**)(void))(*(void *)result + 480LL);
LABEL_324:
      uint64_t v53 = v25();
      if ((v53 & 1) == 0) {
        goto LABEL_320;
      }
LABEL_325:
      uint64_t result = __chkstk_darwin(v53);
      __int16 v56 = -21846;
      std::string::value_type v55 = *v6;
      if (&v55 != (std::string::value_type *)-1LL)
      {
        __int16 v56 = bswap32(LOWORD(v57.__r_.__value_.__l.__data_)) >> 16;
        sub_1000AC324(a2, v54, 0, 11LL, 57, *(_DWORD *)(a2 + 68), &v55, 3u);
LABEL_311:
        int v10 = 0;
LABEL_312:
        int v9 = 0LL;
LABEL_313:
        uint64_t v4 = sub_1000AB4C4(*(void *)(v2 + 8), a2, 0, 1u);
        if (v9) {
          operator delete[](v9);
        }
        return v4;
      }

LABEL_330:
      __break(0x5500u);
LABEL_331:
      __break(0x550Au);
      return result;
    case 0x3Cu:
      memset(&v57, 170, sizeof(v57));
      uint64_t result = sub_10004783C();
      if (!result || (result & 7) != 0) {
        goto LABEL_327;
      }
      uint64_t result = (uint64_t)(*(void *(**)(std::string *__return_ptr))(*(void *)result + 120LL))(&v57);
      std::string::size_type v51 = v57.__r_.__value_.__s.__size_;
      if ((v57.__r_.__value_.__s.__size_ & 0x80u) != 0) {
        std::string::size_type v51 = v57.__r_.__value_.__l.__size_;
      }
      if (v51)
      {
        if ((v57.__r_.__value_.__s.__size_ & 0x80u) == 0) {
          __int16 v52 = &v57;
        }
        else {
          __int16 v52 = (std::string *)v57.__r_.__value_.__r.__words[0];
        }
        if (v51 == -1LL) {
          goto LABEL_330;
        }
        if ((v51 + 1) >> 16) {
          goto LABEL_328;
        }
        sub_1000AC324(a2, *(void *)(a2 + 8), 0, 11LL, 61, *(_DWORD *)(a2 + 68), v52, (unsigned __int16)(v51 + 1));
        int v10 = 0;
      }

      else
      {
        int v10 = 2;
      }

LABEL_290:
      std::string::~string(&v57);
      goto LABEL_312;
    default:
      goto LABEL_313;
  }

uint64_t sub_1000A8EE0(uint64_t result, int a2, unsigned int a3)
{
  if (!result || (uint64_t v3 = result, (result & 7) != 0) || (result = sub_100061274()) == 0 || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t v6 = sub_10008E168(result, *(void *)(v3 + 8));
    uint64_t result = sub_1000ABD94(v6, 0, 11LL, 0, a2, 0, a3, 0, 0, 0);
    if (result) {
      return sub_1000AB4C4(*(void *)(v3 + 8), result, 0, 1u);
    }
  }

  return result;
}

uint64_t sub_1000A8F8C(uint64_t result, const void *a2, unsigned int a3)
{
  if (!result) {
    goto LABEL_10;
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_10;
  }
  uint64_t v4 = *(void *)(result + 1192);
  if (!v4) {
    return 37LL;
  }
  if ((v4 & 7) != 0)
  {
LABEL_10:
    __break(0x5516u);
    goto LABEL_11;
  }

  uint64_t result = (*(uint64_t (**)(void, void))(*(void *)v4 + 16LL))(*(void *)(result + 1192), 0LL);
  if (HIWORD(a3))
  {
LABEL_11:
    __break(0x5507u);
    return result;
  }

  uint64_t result = sub_1000ABB10(v4, 0, 11LL, 17, result, a2, (unsigned __int16)a3);
  if (result)
  {
    sub_1000AB4C4(*(void *)(v3 + 8), result, 0, 1u);
    return 0LL;
  }

  return result;
}

uint64_t sub_1000A903C(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_20;
  }
  if (a2 <= 31)
  {
    if (a2 == 4)
    {
      *(void *)(result + 1192) = a4;
      if (!a4) {
        sub_1000D2500();
      }
    }

    else if (a2 == 8)
    {
      *(void *)(result + 1192) = 0LL;
    }

    return 0LL;
  }

  if (a2 == 32)
  {
    int v4 = -1431655766;
    sub_10006329C(result, (uint64_t)&v4);
    return 0LL;
  }

  if (a2 != 0x2000) {
    return 0LL;
  }
  if ((a3 & 7) != 0 || !a3 || ((a3 + 4) & 3) != 0) {
    goto LABEL_20;
  }
  if (*(_DWORD *)(a3 + 4)) {
    return 0LL;
  }
  if (((a3 + 8) & 7) == 0 && ((a3 + 16) & 7) == 0)
  {
    sub_1000A8F8C(result, *(const void **)(a3 + 8), *(_DWORD *)(a3 + 16));
    return 0LL;
  }

uint64_t sub_1000A90FC()
{
  return 0LL;
}

uint64_t sub_1000A9104(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_23;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_23;
  }
  sub_10006107C(result, a2, 6);
  *(void *)uint64_t v2 = off_1001069F0;
  *(_DWORD *)(v2 + 1264) = 0;
  *(_BYTE *)(v2 + 126_Block_object_dispose((const void *)(v1 - 120), 8) = 0;
  pthread_mutex_init((pthread_mutex_t *)(v2 + 1192), 0LL);
  uint64_t v4 = sub_1000B6CE0();
  uint64_t result = sub_10004783C();
  *(void *)(v2 + 1256) = result;
  if (!result || (result & 7) != 0) {
    goto LABEL_23;
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)result + 16LL))(result, v2);
  uint64_t result = sub_10002ACC4();
  if (result)
  {
    if ((result & 7) != 0) {
      goto LABEL_23;
    }
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 344LL))(result);
    *(_BYTE *)(v2 + 1265) = result;
  }

  if (v4 && (v4 & 7) == 0)
  {
    uint64_t v5 = sub_10008E168(v4, a2);
    if (v5)
    {
      int v6 = sub_10008D0AC(v4, v5);
      if ((v6 - 1) < 0x1FF || (v6 & 0xF000) == 0xD000)
      {
        *(_BYTE *)(v2 + 1266) = 1;
      }

      else if ((v6 & 0xFFFFFF00) == 0x200)
      {
        *(_BYTE *)(v2 + 1267) = 1;
      }
    }

    uint64_t result = sub_100061274();
    if (result)
    {
      if ((result & 7) == 0)
      {
        sub_10008C5A8(result, 6, 109, a2);
        uint64_t result = *(void *)(v2 + 8);
        if (result)
        {
          if ((result & 7) == 0)
          {
            sub_10005758C(result, 6u, 0);
            uint64_t result = *(void *)(v2 + 8);
            if (result)
            {
              if ((result & 7) == 0)
              {
                sub_100057538(result, 6u, 0);
                return v2;
              }
            }
          }
        }
      }
    }
  }

uint64_t sub_1000A9270(uint64_t result, uint64_t a2)
{
  if (result && (result & 7) == 0) {
    return sub_1000A9104(result, a2);
  }
  __break(0x5516u);
  return result;
}

void sub_1000A9284(uint64_t a1)
{
  if (!a1) {
    goto LABEL_15;
  }
  if ((a1 & 7) != 0) {
    goto LABEL_15;
  }
  *(void *)a1 = off_1001069F0;
  uint64_t v2 = sub_1000B6CE0();
  if (!v2) {
    goto LABEL_15;
  }
  uint64_t v3 = v2;
  if ((v2 & 7) != 0) {
    goto LABEL_15;
  }
  uint64_t v4 = sub_10008E168(v2, *(void *)(a1 + 8));
  sub_10008C5A8(v3, 6, 0, *(void *)(a1 + 8));
  do
    __int16 v7 = -1;
  while (!sub_100062E78(a1, -1, &v7, 0LL, 0xFFFFu));
  uint64_t v5 = sub_10004783C();
  if (!v5) {
    goto LABEL_14;
  }
  uint64_t v6 = v5;
  if ((v5 & 7) != 0)
  {
LABEL_15:
    __break(0x5516u);
  }

  else
  {
    (*(void (**)(uint64_t, uint64_t))(*(void *)v5 + 24LL))(v5, a1);
    (*(void (**)(uint64_t, uint64_t, uint64_t, void))(*(void *)v6 + 280LL))(v6, v4, 1LL, 0LL);
    *(_BYTE *)(a1 + 126_Block_object_dispose((const void *)(v1 - 120), 8) = 0;
    if (*(unsigned __int8 *)(a1 + 1265) < 2u)
    {
      if (!*(_BYTE *)(a1 + 1265))
      {
LABEL_14:
        sub_10008CC64(v3, v4, 6, 0);
        pthread_mutex_destroy((pthread_mutex_t *)(a1 + 1192));
        sub_100061324(a1);
        return;
      }

      if (*(unsigned __int8 *)(a1 + 1266) <= 1u)
      {
        if (*(_BYTE *)(a1 + 1266)) {
          sub_1000A93C4(*(void *)(a1 + 8), 0);
        }
        goto LABEL_14;
      }
    }
  }

  __break(0x550Au);
}

uint64_t sub_1000A93C4(uint64_t result, int a2)
{
  if (!result) {
    return 2LL;
  }
  if ((result & 7) != 0) {
    goto LABEL_34;
  }
  uint64_t result = sub_100057A88(result);
  if (!result) {
    goto LABEL_34;
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_34;
  }
  sub_10005789C(result, 6u);
  uint64_t result = sub_1000A960C(v3);
  if (!result) {
    goto LABEL_25;
  }
  uint64_t v4 = result;
  if ((result & 7) != 0) {
    goto LABEL_34;
  }
  if (*(unsigned __int8 *)(result + 1265) < 2u)
  {
    if (!*(_BYTE *)(result + 1265)) {
      goto LABEL_25;
    }
    if ((((_DWORD)result + 1266) & 1) != 0) {
      goto LABEL_34;
    }
    if (*(unsigned __int8 *)(result + 1266) <= 1u)
    {
      if (*(_BYTE *)(result + 1266))
      {
        char v13 = a2;
        uint64_t result = sub_100061274();
        if (result)
        {
          if ((result & 7) == 0)
          {
            uint64_t result = sub_10008E168(result, v3);
            if (result)
            {
              uint64_t v5 = result;
              if ((result & 7) == 0)
              {
                int v6 = (*(uint64_t (**)(uint64_t, void))(*(void *)result + 16LL))(result, 0LL);
                uint64_t v7 = sub_1000ABB10(v5, 0, 6LL, 3, v6, &v13, 1u);
                if (!v7)
                {
                  uint64_t v11 = 12LL;
                  goto LABEL_26;
                }

                uint64_t v8 = v7;
                uint64_t result = sub_1000B6CE0();
                if (result)
                {
                  uint64_t v9 = result;
                  if ((result & 7) == 0)
                  {
                    int v10 = sub_10008CBE4(result, v5) & 0xC;
                    if (v10 == 4 && a2) {
                      sub_10008CC64(v9, v5, 6, 1);
                    }
                    uint64_t result = sub_100062BF8(v4, v8, 500, 0, 0LL);
                    uint64_t v11 = result;
                    if (!(_DWORD)result)
                    {
                      sub_10005758C(v3, 6u, 1);
                      int v12 = sub_100062E0C();
                      uint64_t result = sub_100057538(v3, 6u, v12);
                      if (v10 == 4 && !a2)
                      {
                        if (((v4 + 1264) & 7) == 0)
                        {
                          uint64_t v11 = 0LL;
                          *(_BYTE *)(v4 + 1264) = 1;
                          goto LABEL_26;
                        }

                        goto LABEL_34;
                      }
                    }

                    if (((v4 + 1264) & 7) == 0)
                    {
                      *(_BYTE *)(v4 + 1264) = 0;
LABEL_26:
                      sub_1000578E8(v3, 6u);
                      return v11;
                    }
                  }
                }
              }
            }
          }
        }

void sub_1000A95D4(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    sub_1000A9284(a1);
  }
}

void sub_1000A95E8(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    sub_1000A9284(a1);
    operator delete(v1);
  }

uint64_t sub_1000A960C(uint64_t a1)
{
  uint64_t result = sub_1000B6CE0();
  if (!result) {
    goto LABEL_12;
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_12;
  }
  uint64_t result = sub_10008C2EC(v3, a1, 6u);
  if (!result) {
    return result;
  }
  uint64_t v4 = result;
  if ((result & 7) != 0)
  {
LABEL_12:
    __break(0x5516u);
    return result;
  }

  uint64_t result = sub_10008E168(v3, a1);
  if (result)
  {
    if (sub_100054B88(v3, result)) {
      return v4;
    }
    else {
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_1000A96A4(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_65;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_65;
  }
  if (!*(void *)(result + 8)) {
    goto LABEL_21;
  }
  uint64_t result = sub_100061274();
  if (!result || (result & 7) != 0) {
    goto LABEL_65;
  }
  uint64_t result = *(void *)(v2 + 8);
  if (!result || (result & 7) != 0) {
    goto LABEL_65;
  }
  uint64_t result = sub_1000569F0(result);
  if ((result & 1) != 0) {
    goto LABEL_21;
  }
  if (!a2 || (a2 & 7) != 0) {
    goto LABEL_65;
  }
  uint64_t v4 = *(unsigned __int8 **)(a2 + 24);
  if (!sub_1000A960C(*(void *)(v2 + 8)))
  {
LABEL_21:
    uint64_t v8 = 89LL;
    goto LABEL_22;
  }

  signed int v5 = *(unsigned __int16 *)(a2 + 126);
  int v6 = *(unsigned __int16 *)(a2 + 128);
  __int16 v14 = 5;
  uint64_t result = sub_1000B6CE0();
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v13 = v5;
  if (v5 > 128)
  {
    if (v5 == 129)
    {
      if (!v6)
      {
        char v12 = sub_1000A9A40(v2);
        sub_1000AC324(a2, v7, 0, 6LL, 130, *(_DWORD *)(a2 + 68), &v12, 1u);
        uint64_t v8 = 0LL;
        goto LABEL_49;
      }
    }

    else
    {
      if (v5 != 131) {
        goto LABEL_32;
      }
      if (v6 == 1)
      {
        if (!v4) {
          goto LABEL_65;
        }
        uint64_t v9 = *v4;
        if ((v9 - 1) <= 2)
        {
          uint64_t result = *(void *)(v2 + 1256);
          if (!result || (result & 7) != 0) {
            goto LABEL_65;
          }
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, BOOL))(*(void *)result + 280LL))( result,  v7,  v9,  (_DWORD)v9 == 2))
          {
            int v10 = 0;
            uint64_t v8 = 0LL;
            *(_BYTE *)(v2 + 126_Block_object_dispose((const void *)(v1 - 120), 8) = *v4 == 2;
          }

          else
          {
            uint64_t v8 = 14LL;
            int v10 = 2;
          }

uint64_t sub_1000A9A40(uint64_t result)
{
  if (!result
    || (result & 7) != 0
    || ((uint64_t result = *(void *)(result + 1256)) != 0 ? (v1 = (result & 7) == 0) : (v1 = 0), !v1))
  {
    __break(0x5516u);
    goto LABEL_14;
  }

  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 272LL))(result);
  if (result >= 8)
  {
LABEL_14:
    __break(0x550Au);
    return result;
  }

  if ((_DWORD)result == 2) {
    return 2LL;
  }
  else {
    return 1LL;
  }
}

uint64_t sub_1000A9A98(uint64_t result, uint64_t a2, unsigned int a3, uint64_t a4, _DWORD *a5)
{
  if (!result) {
    goto LABEL_20;
  }
  uint64_t v5 = result;
  if ((result & 7) != 0) {
    goto LABEL_20;
  }
  if (!*(_BYTE *)(result + 1265)) {
    goto LABEL_18;
  }
  if (!*(_BYTE *)(result + 1266))
  {
LABEL_18:
    *a5 = 0;
    return result;
  }

  if (a3 == 3)
  {
    if (*(unsigned __int8 *)(result + 1264) <= 1u)
    {
      if (!*(_BYTE *)(result + 1264))
      {
LABEL_13:
        uint64_t v9 = 0LL;
        LOBYTE(a3) = 3;
LABEL_15:
        BYTE4(v9) = a3;
        BYTE5(v9) = 15;
        pthread_mutex_lock((pthread_mutex_t *)(v5 + 1192));
        uint64_t result = *(void *)(v5 + 8);
        if (result && (result & 7) == 0)
        {
          sub_100057A4C(result, 6u, 0LL, (uint64_t)&v9, 8);
          uint64_t result = pthread_mutex_unlock((pthread_mutex_t *)(v5 + 1192));
          goto LABEL_18;
        }

        goto LABEL_20;
      }

      uint64_t result = sub_1000B6CE0();
      if (result)
      {
        uint64_t v7 = result;
        if ((result & 7) == 0)
        {
          uint64_t v8 = sub_10008E168(result, *(void *)(v5 + 8));
          sub_10008CC64(v7, v8, 6, 0);
          *(_BYTE *)(v5 + 1264) = 0;
          goto LABEL_13;
        }
      }

uint64_t sub_1000A9BB4(uint64_t result, int a2, uint64_t a3, uint64_t *a4, unsigned int a5)
{
  if (!result) {
    goto LABEL_28;
  }
  uint64_t v5 = result;
  if ((result & 7) != 0) {
    goto LABEL_28;
  }
  if (*(unsigned __int8 *)(result + 1267) >= 2u)
  {
LABEL_29:
    __break(0x550Au);
    return result;
  }

  uint64_t v7 = 0LL;
  if (a5 >= 8 && a4 && *(_BYTE *)(result + 1267))
  {
    if ((a4 & 7) == 0)
    {
      uint64_t v7 = *a4;
      goto LABEL_9;
    }

uint64_t sub_1000A9D2C(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (!result) {
    goto LABEL_70;
  }
  uint64_t v4 = result;
  if ((result & 7) != 0) {
    goto LABEL_70;
  }
  unsigned int v14 = 0;
  uint64_t result = sub_1000B6CE0();
  if (a2 <= 7)
  {
    if (a2 == 1)
    {
      if (*(unsigned __int8 *)(v4 + 1265) < 2u)
      {
        if (a3 != 5 || !*(_BYTE *)(v4 + 1265)) {
          return v14;
        }
        if (result && (result & 7) == 0)
        {
          return v14;
        }

        goto LABEL_70;
      }

      goto LABEL_71;
    }

    if (a2 == 4)
    {
      uint64_t result = *(void *)(v4 + 1256);
      if (!result || (result & 7) != 0) {
        goto LABEL_70;
      }
      goto LABEL_26;
    }

uint64_t sub_1000AA0E4(uint64_t result, int a2)
{
  if (result && a2 == 9)
  {
    *(_BYTE *)uint64_t result = 6;
    if (result != -1)
    {
      *(void *)(result + 1) = 0x300000000000000LL;
      return 0LL;
    }
  }

  else
  {
    __break(0x5518u);
  }

  __break(0x5500u);
  return result;
}

void *sub_1000AA118(void *result)
{
  else {
    *uint64_t result = off_100106AA0;
  }
  return result;
}

void sub_1000AA138(void *__p)
{
  else {
    operator delete(__p);
  }
}

uint64_t sub_1000AA14C(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_6;
  }

  uint64_t result = *(unsigned int *)(result + 8);
  if (result >= 8) {
LABEL_6:
  }
    __break(0x550Au);
  return result;
}

uint64_t sub_1000AA170(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0) {
    __break(0x5516u);
  }
  else {
    *(void *)(result + 16) = a2;
  }
  return result;
}

uint64_t sub_1000AA188(uint64_t result, int a2, const void *a3, size_t __size)
{
  if (!result || (uint64_t v4 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    *(void *)uint64_t result = off_100106AC0;
    *(_DWORD *)(result + _Block_object_dispose((const void *)(v1 - 120), 8) = a2;
    *(void *)(result + 16) = __size;
    if (__size)
    {
      uint64_t v7 = malloc(__size);
      *(void *)(v4 + 24) = v7;
      if (v7) {
        memcpy(v7, a3, __size);
      }
      else {
        sub_1000CEAEC( 0,  4,  "%s:%d NULL mData\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapMessage.cpp",  134);
      }
    }

    else
    {
      *(void *)(result + 24) = 0LL;
    }

    return v4;
  }

  return result;
}

void *sub_1000AA230(void *result)
{
  if (!result || (BOOL v1 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    *uint64_t result = off_100106AC0;
    uint64_t v2 = (void *)result[3];
    if (v2)
    {
      free(v2);
      v1[3] = 0LL;
    }

    return v1;
  }

  return result;
}

void *sub_1000AA27C(void *result)
{
  return result;
}

void sub_1000AA290(void *a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    BOOL v1 = sub_1000AA230(a1);
    operator delete(v1);
  }

uint64_t sub_1000AA2B4(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(unsigned int *)(result + 8);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000AA2CC(uint64_t result, int a2, const void *a3, size_t a4)
{
  if (!result {
    || (uint64_t v4 = result, (result & 7) != 0)
  }
    || (*(_DWORD *)(result + _Block_object_dispose((const void *)(v1 - 120), 8) = 0,
        *(void *)(result + 16) = 0LL,
        *(void *)uint64_t result = off_100106AE0,
        uint64_t result = (uint64_t)operator new(0x20uLL),
        (result & 0xF) != 0)
    || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    *(void *)(v4 + 24) = sub_1000AA188(result, a2, a3, a4);
    return v4;
  }

  return result;
}

uint64_t sub_1000AA350(uint64_t result, int a2, const void *a3, size_t a4)
{
  if (result && (result & 7) == 0) {
    return sub_1000AA2CC(result, a2, a3, a4);
  }
  __break(0x5516u);
  return result;
}

void *sub_1000AA364(void *result)
{
  if (result)
  {
    BOOL v1 = result;
    if ((result & 7) == 0)
    {
      *uint64_t result = off_100106AE0;
      uint64_t result = (void *)result[3];
      if (!result)
      {
LABEL_6:
        void *v1 = off_100106AA0;
        return v1;
      }

      if ((result & 7) == 0)
      {
        (*(void (**)(void *))(*result + 8LL))(result);
        goto LABEL_6;
      }
    }
  }

  __break(0x5516u);
  return result;
}

void *sub_1000AA3C8(void *result)
{
  return result;
}

void sub_1000AA3DC(void *a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    BOOL v1 = sub_1000AA364(a1);
    operator delete(v1);
  }

uint64_t sub_1000AA400(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    *(_DWORD *)(result + _Block_object_dispose((const void *)(v1 - 120), 8) = 1;
    *(void *)uint64_t result = off_100106B00;
    *(void *)(result + 16) = 0LL;
    *(void *)(result + 24) = a2;
  }

  return result;
}

void *sub_1000AA42C(void *result)
{
  else {
    *uint64_t result = off_100106AA0;
  }
  return result;
}

void sub_1000AA44C(void *__p)
{
  else {
    operator delete(__p);
  }
}

uint64_t sub_1000AA460(uint64_t result)
{
  if (!result
    || (result & 7) != 0
    || ((uint64_t result = *(void *)(result + 24)) != 0 ? (v1 = (result & 7) == 0) : (v1 = 0), !v1))
  {
    __break(0x5516u);
  }

  return result;
}

uint64_t sub_1000AA488(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    *(_DWORD *)(result + _Block_object_dispose((const void *)(v1 - 120), 8) = 2;
    *(void *)uint64_t result = off_100106B20;
    *(void *)(result + 16) = 0LL;
    *(void *)(result + 24) = a2;
  }

  return result;
}

void *sub_1000AA4B4(void *result)
{
  else {
    *uint64_t result = off_100106AA0;
  }
  return result;
}

void sub_1000AA4D4(void *__p)
{
  else {
    operator delete(__p);
  }
}

uint64_t sub_1000AA4E8(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    *(_DWORD *)(result + _Block_object_dispose((const void *)(v1 - 120), 8) = 3;
    *(void *)(result + 16) = 0LL;
    *(void *)uint64_t result = off_100106B40;
  }

  return result;
}

void *sub_1000AA514(void *result)
{
  else {
    *uint64_t result = off_100106AA0;
  }
  return result;
}

void sub_1000AA534(void *__p)
{
  else {
    operator delete(__p);
  }
}

uint64_t sub_1000AA548(uint64_t result, int a2, uint64_t a3, uint64_t a4, int a5)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    *(_DWORD *)(result + _Block_object_dispose((const void *)(v1 - 120), 8) = 4;
    *(void *)(result + 16) = 0LL;
    *(void *)uint64_t result = off_100106B60;
    *(_DWORD *)(result + 24) = a2;
    *(void *)(result + 32) = a3;
    *(void *)(result + 40) = a4;
    *(_DWORD *)(result + 4_Block_object_dispose((const void *)(v1 - 120), 8) = a5;
  }

  return result;
}

void *sub_1000AA580(void *result)
{
  else {
    *uint64_t result = off_100106AA0;
  }
  return result;
}

void sub_1000AA5A0(void *__p)
{
  else {
    operator delete(__p);
  }
}

uint64_t sub_1000AA5B4(uint64_t a1, dispatch_semaphore_s *a2)
{
  uint64_t result = (uint64_t)operator new(0x168uLL);
  if ((result & 0xF) != 0 || (uint64_t v5 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t result = sub_1000AA7F4(result, a1);
    if (a2)
    {
      dispatch_semaphore_signal(a2);
      return v5;
    }
  }

  __break(0x5510u);
  return result;
}

uint64_t sub_1000AA61C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = dispatch_semaphore_create(0LL);
  memset(__p, 170, sizeof(__p));
  sub_1000255A4((uint64_t)__p, "CIapOutgoingProcessThread");
  uint64_t result = sub_1000AA6FC(0LL, (uint64_t)__p, (uint64_t)v4, 12288LL, 61);
  if (!result) {
    sub_1000D276C();
  }
  if (!v4) {
    goto LABEL_12;
  }
  uint64_t v6 = result;
  uint64_t result = dispatch_semaphore_wait(v4, 0xFFFFFFFFFFFFFFFFLL);
  if ((v6 & 7) != 0)
  {
LABEL_11:
    __break(0x5516u);
LABEL_12:
    __break(0x5510u);
    return result;
  }

  uint64_t result = sub_10005CCDC(v6);
  uint64_t v7 = result;
  if (result)
  {
    if ((result & 7) == 0)
    {
      sub_1000AA794((pthread_mutex_t *)result, a1, a2);
      goto LABEL_7;
    }

    goto LABEL_11;
  }

uint64_t sub_1000AA6FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t result = (uint64_t)operator new(0x88uLL);
  if ((result & 0xF) != 0 || (uint64_t v11 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t v12 = sub_10005F328(result);
    if (!sub_1000AB788(v12, a1, a2, a3, a4, a5))
    {
      pthread_mutex_destroy((pthread_mutex_t *)(v11 + 24));
      operator delete((void *)v11);
      return 0LL;
    }

    return v11;
  }

  return result;
}

pthread_mutex_t *sub_1000AA794(pthread_mutex_t *result, uint64_t a2, uint64_t a3)
{
  if (!result || (uint64_t v3 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    pthread_mutex_lock(result + 1);
    qword_10011C988 = a3;
    *(void *)&v3->__opaque[48] = a2;
    pthread_mutex_unlock(v3 + 1);
    return (pthread_mutex_t *)1;
  }

  return result;
}

uint64_t sub_1000AA7F4(uint64_t result, uint64_t a2)
{
  if (result)
  {
    unint64_t v2 = result;
    if ((result & 7) == 0)
    {
      sub_100059478(result);
      *(void *)unint64_t v2 = off_100106C18;
      *(void *)(v2 + 4_Block_object_dispose((const void *)(v1 - 120), 8) = a2;
      *(void *)(v2 + 56) = 0LL;
      *(_BYTE *)(v2 + 344) = 0;
      uint64_t result = pthread_mutex_init((pthread_mutex_t *)(v2 + 64), 0LL);
      unint64_t v4 = 0LL;
      unint64_t v5 = 0LL;
      uint64_t v6 = 348LL;
      while (v4 <= ~(v2 + 128))
      {
        pthread_mutex_init((pthread_mutex_t *)(v2 + v4 + 128), 0LL);
        uint64_t result = (uint64_t)dispatch_semaphore_create(0LL);
        if (v5 > ~(v2 + 320)) {
          break;
        }
        *(void *)(v2 + v5 + 320) = result;
        if (v6 - 348 > ~(v2 + 348)) {
          break;
        }
        if ((v2 & 3) != 0) {
          goto LABEL_11;
        }
        *(_DWORD *)(v2 + v6) = *(_DWORD *)"(";
        v6 += 4LL;
        v5 += 8LL;
        v4 += 64LL;
        if (v5 == 24)
        {
          sub_1000594C4(v2, 3u, v2 + 348);
          return v2;
        }
      }

      __break(0x5513u);
    }
  }

void sub_1000AA910(pthread_mutex_t *a1)
{
  if (a1 && (a1 & 7) == 0)
  {
    unint64_t v2 = 0LL;
    a1->__sig = (uint64_t)off_100106C18;
    a1[5].__opaque[16] = 1;
    unint64_t v3 = ~(unint64_t)&a1[2];
    unint64_t v4 = a1 + 5;
    unint64_t v5 = ~(unint64_t)&a1[5];
    uint64_t v6 = 0x3FFFFFFFFFFFFFDLL;
    while (v6 * 64 + 192 <= v3)
    {
      pthread_mutex_destroy(&v4[v6]);
      if (v2 > v5) {
        break;
      }
      uint64_t v7 = *(dispatch_object_s **)((char *)&v4->__sig + v2);
      if (!v7) {
        goto LABEL_10;
      }
      dispatch_release(v7);
      v2 += 8LL;
      if (!(++v6 * 64))
      {
        pthread_mutex_destroy(a1 + 1);
        sub_1000595BC((uint64_t)a1);
        return;
      }
    }

    __break(0x5513u);
LABEL_10:
    __break(0x5510u);
  }

  __break(0x5516u);
}

void sub_1000AA9C4(pthread_mutex_t *a1)
{
  else {
    sub_1000AA910(a1);
  }
}

void sub_1000AA9D8(pthread_mutex_t *a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    sub_1000AA910(a1);
    operator delete(v1);
  }

void sub_1000AA9FC(pthread_mutex_t *a1, uint64_t a2, unsigned int a3)
{
  unsigned int v6 = sub_1000AA14C(a2);
  pthread_mutex_lock(a1 + 1);
  if (v6 >= 8) {
    goto LABEL_34;
  }
  if (v6)
  {
    sub_1000CEAEC( 0,  4,  "%s:%d CIapOutgoingProcess::HandleMessage: unknown type 0x%08x\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapOutgoingProcess.cpp",  341,  v6);
    goto LABEL_9;
  }

  uint64_t v7 = sub_100056FF0(a2);
  if (!v7)
  {
LABEL_31:
    __break(0x5518u);
    goto LABEL_32;
  }

  uint64_t v8 = v7;
  if ((v7 & 7) != 0)
  {
LABEL_32:
    __break(0x5516u);
LABEL_33:
    __break(0x5513u);
    goto LABEL_34;
  }

  char v13 = (uint64_t *)sub_100056FF0(v8);
  uint64_t v14 = *v13;
  if (!*v13)
  {
LABEL_9:
    if (a3 <= 3) {
      goto LABEL_10;
    }
LABEL_34:
    __break(0x550Au);
    goto LABEL_35;
  }

  if (a1[5].__opaque[16])
  {
    sub_1000AD43C(*v13);
    goto LABEL_9;
  }

  if (a3 > 3) {
    goto LABEL_34;
  }
  if (!a3)
  {
    if ((v14 & 7) != 0) {
      goto LABEL_32;
    }
    *(_BYTE *)(v14 + 132) |= 1u;
  }

  sub_1000AABE0((uint64_t)a1, v14);
LABEL_10:
  int v9 = &a1[(unint64_t)a3 + 2];
  pthread_mutex_lock(v9);
  if (__CFADD__(&a1[5].__opaque[20], 4LL * a3)) {
    goto LABEL_33;
  }
  uint64_t v10 = (uint64_t)&a1[5].__opaque[4 * a3 + 20];
  unsigned int v11 = *(_DWORD *)v10 + 1;
  if (*(_DWORD *)v10 == -1)
  {
LABEL_35:
    __break(0x5500u);
    goto LABEL_36;
  }

  *(_DWORD *)uint64_t v10 = v11;
  if ((v10 & 3) != 0) {
    goto LABEL_32;
  }
  if (v11 > *(_DWORD *)"(") {
    goto LABEL_31;
  }
  pthread_mutex_unlock(v9);
  if (a3 > 2)
  {
LABEL_36:
    __break(0x5512u);
    goto LABEL_37;
  }

  if (__CFADD__(&a1[5], 8LL * a3)) {
    goto LABEL_33;
  }
  uint64_t v12 = (dispatch_semaphore_t *)(&a1[5].__sig + a3);
  if (*v12)
  {
    dispatch_semaphore_signal(*v12);
    pthread_mutex_unlock(a1 + 1);
    return;
  }

uint64_t sub_1000AABE0(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_86;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_86;
  }
  if (!a2) {
    sub_1000D276C();
  }
  uint64_t result = pthread_once(&stru_10011B908, sub_1000BC260);
  if (dword_10011B8F8[0])
  {
    if ((a2 & 7) != 0) {
      goto LABEL_86;
    }
    uint64_t v4 = *(void *)(a2 + 8);
    if (!v4 || (v4 & 7) != 0) {
      goto LABEL_86;
    }
    uint64_t result = (*(uint64_t (**)(void))(*(void *)v4 + 216LL))(*(void *)(a2 + 8));
    if (!qword_10011C608[result])
    {
      pthread_mutex_lock(&stru_10011B728);
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 216LL))(v4);
      if (!qword_10011C608[result])
      {
        uint64_t v5 = sub_1000BC2D4(v4, 0, 0, "outgoing.InQUs");
        uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 216LL))(v4);
        qword_10011C608[result] = v5;
      }

      pthread_mutex_unlock(&stru_10011B728);
    }

    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 216LL))(v4);
    if (!qword_10011C630[result])
    {
      pthread_mutex_lock(&stru_10011B768);
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 216LL))(v4);
      if (!qword_10011C630[result])
      {
        uint64_t v6 = sub_1000BC2D4(v4, 0, 0, "outgoing.OutOfQSinceInitUs");
        uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 216LL))(v4);
        qword_10011C630[result] = v6;
      }

      pthread_mutex_unlock(&stru_10011B768);
    }

    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 216LL))(v4);
    if (!qword_10011C658[result])
    {
      pthread_mutex_lock(&stru_10011B7A8);
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 216LL))(v4);
      if (!qword_10011C658[result])
      {
        uint64_t v7 = sub_1000BC2D4(v4, 0, 0, "sentPckPayloadSz");
        uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 216LL))(v4);
        qword_10011C658[result] = v7;
      }

      pthread_mutex_unlock(&stru_10011B7A8);
    }

    uint64_t result = (uint64_t)sub_1000BC5A4();
    uint64_t v8 = (unsigned int *)(a2 + 148);
    if (((a2 + 148) & 3) == 0)
    {
      unsigned int v9 = result;
      if (*v8)
      {
        uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 216LL))(v4);
        uint64_t result = qword_10011C608[result];
        if (!result || (result & 7) != 0) {
          goto LABEL_86;
        }
        if (v9 < *v8) {
          goto LABEL_90;
        }
        uint64_t v10 = *(unsigned int *)(result + 76);
        if (dword_10011B8F8[v10]) {
          uint64_t result = (*(uint64_t (**)(uint64_t, void, void, void))(*(void *)result + 104LL))( result,  v9 - *v8,  0LL,  0LL);
        }
      }

      unsigned int v11 = (_DWORD *)(a2 + 144);
      if (((a2 + 144) & 7) == 0)
      {
        if (!*v11)
        {
LABEL_62:
          uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 216LL))(v4);
          uint64_t result = qword_10011C658[result];
          if (!result || (result & 7) != 0) {
            goto LABEL_86;
          }
          uint64_t v13 = *(unsigned int *)(result + 76);
          if (v13 < 8)
          {
            if (v13 < 4)
            {
              if (~(unint64_t)dword_10011B8F8 >= 4 * v13)
              {
                if (dword_10011B8F8[v13]) {
                  (*(void (**)(uint64_t, void, void, void))(*(void *)result + 104LL))( result,  *(unsigned __int16 *)(a2 + 128),  0LL,  0LL);
                }
                goto LABEL_71;
              }

uint64_t sub_1000AB1A4(uint64_t result, unsigned int a2, size_t a3, const void *a4, char a5, unsigned int a6)
{
  if (!result) {
    goto LABEL_19;
  }
  uint64_t v6 = result;
  if ((result & 7) != 0) {
    goto LABEL_19;
  }
  uint64_t result = (uint64_t)operator new(0x20uLL);
  if ((result & 0xF) != 0) {
    goto LABEL_19;
  }
  if (a2 >= 0x800) {
    goto LABEL_20;
  }
  uint64_t v12 = result;
  uint64_t result = sub_1000AA350(result, a2, a4, a3);
  if (a6 >= 4) {
    goto LABEL_20;
  }
  uint64_t v13 = (pthread_mutex_t *)(v6 + 128 + ((unint64_t)a6 << 6));
  uint64_t result = pthread_mutex_lock(v13);
  if (__CFADD__(v6 + 348, 4LL * a6)) {
    goto LABEL_21;
  }
  uint64_t v14 = v6 + 348 + 4LL * a6;
  if ((v14 & 3) != 0) {
    goto LABEL_19;
  }
  int v15 = *(_DWORD *)v14;
  if (*(_DWORD *)v14 > *(_DWORD *)"(")
  {
    __break(0x5518u);
    goto LABEL_19;
  }

  if (!v15)
  {
    uint64_t result = pthread_mutex_unlock(v13);
    if ((v12 & 7) == 0)
    {
      (*(void (**)(uint64_t))(*(void *)v12 + 8LL))(v12);
      return 28LL;
    }

    goto LABEL_19;
  }

  *(_DWORD *)uint64_t v14 = v15 - 1;
  uint64_t result = pthread_mutex_unlock(v13);
  if ((v12 & 7) != 0)
  {
LABEL_19:
    __break(0x5516u);
LABEL_20:
    __break(0x550Au);
LABEL_21:
    __break(0x5513u);
LABEL_22:
    __break(0x5500u);
    return result;
  }

  uint64_t result = sub_100059694(v6, v12, a5, a6);
  if ((_DWORD)result)
  {
    uint64_t result = pthread_mutex_lock(v13);
    if (*(_DWORD *)v14 != -1)
    {
      ++*(_DWORD *)v14;
      pthread_mutex_unlock(v13);
      return 16LL;
    }

    goto LABEL_22;
  }

  return result;
}

uint64_t sub_1000AB30C(uint64_t result, uint64_t a2, unsigned int a3, int a4)
{
  uint64_t v16 = a2;
  if (!result) {
    goto LABEL_35;
  }
  uint64_t v4 = result;
  if ((result & 7) != 0) {
    goto LABEL_35;
  }
  if (!a2) {
    sub_1000D276C();
  }
  uint64_t result = *(void *)(result + 56);
  if (!result || ((result | a2) & 7) != 0)
  {
LABEL_35:
    __break(0x5516u);
LABEL_36:
    __break(0x550Au);
LABEL_37:
    __break(0x5512u);
LABEL_38:
    __break(0x5513u);
LABEL_39:
    __break(0x5510u);
  }

  else
  {
    if (sub_1000583F4(result, *(_DWORD *)(a2 + 68))) {
      return 22LL;
    }
    sub_10005F130(a2, 1u, a4);
    unsigned int v9 = (dispatch_semaphore_s **)(v4 + 320 + 8LL * a3);
    do
    {
      pthread_once(&stru_10011B908, sub_1000BC260);
      if (dword_10011B8F8[0])
      {
        unsigned int v10 = sub_1000BC5A4();
        uint64_t result = v16;
        if (v16) {
          BOOL v11 = (v16 & 7) == 0;
        }
        else {
          BOOL v11 = 0;
        }
        if (!v11 || (((_BYTE)v16 - 108) & 3) != 0LL) {
          goto LABEL_35;
        }
        *(_DWORD *)(v16 + 14_Block_object_dispose((const void *)(v1 - 120), 8) = v10;
      }

      else
      {
        uint64_t result = v16;
      }

      if (result) {
        BOOL v13 = (result & 7) == 0;
      }
      else {
        BOOL v13 = 0;
      }
      if (!v13) {
        goto LABEL_35;
      }
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 32LL))(result);
      if (a3 > 3) {
        goto LABEL_36;
      }
      uint64_t result = sub_1000AB1A4(v4, 0, 8uLL, &v16, result ^ 1u, a3);
      uint64_t v8 = result;
      if (!(_DWORD)result) {
        break;
      }
      if (a3 >= 3) {
        goto LABEL_37;
      }
      uint64_t v14 = *v9;
      if (!*v9) {
        goto LABEL_39;
      }
      dispatch_time_t v15 = dispatch_time(0LL, 10000000LL);
      uint64_t result = dispatch_semaphore_wait(v14, v15);
    }

    while (!*(_BYTE *)(v4 + 344));
    return v8;
  }

  return result;
}

uint64_t sub_1000AB4C4(uint64_t a1, uint64_t a2, int a3, unsigned int a4)
{
  if (!a1)
  {
    sub_1000CEAEC(0, 4, "%s:%d No handle, cannot TransmitPacket!\n");
    goto LABEL_16;
  }

  uint64_t result = qword_10011C988;
  if (!qword_10011C988)
  {
    uint64_t result = sub_1000B6CE0();
    qword_10011C988 = result;
    if (!result)
    {
      __break(0x5518u);
      goto LABEL_23;
    }
  }

  if ((result & 7) != 0)
  {
LABEL_23:
    __break(0x5516u);
    goto LABEL_24;
  }

  uint64_t result = sub_10008EED0(result, a1);
  if (!result)
  {
    sub_1000CEAEC(0, 4, "%s:%d No outgoing process, cannot TransmitPacket!\n");
    goto LABEL_16;
  }

  if ((result & 7) != 0 || ((result + 344) & 7) != 0) {
    goto LABEL_23;
  }
  if (*(unsigned __int8 *)(result + 344) <= 1u)
  {
    if (*(_BYTE *)(result + 344))
    {
      sub_1000CEAEC(0, 4, "%s:%d OutgoingProcess shutting down, do not TransmitPacket!\n");
LABEL_16:
      uint64_t v10 = 2LL;
LABEL_17:
      sub_1000AD43C(a2);
      return v10;
    }

    if (a4 < 4)
    {
      uint64_t v10 = sub_1000AB30C(result, a2, a4, a3);
      if (!(_DWORD)v10) {
        return v10;
      }
      goto LABEL_17;
    }
  }

uint64_t sub_1000AB5F8(uint64_t result)
{
  if (!result || (unsigned int v1 = result & 7, (result & 7) != 0))
  {
LABEL_15:
    __break(0x5516u);
  }

  else
  {
    unint64_t v2 = 0LL;
    while (v2 <= ~(result + 348))
    {
      if ((result & 3) != 0) {
        goto LABEL_15;
      }
      int v3 = *(_DWORD *)(result + 348 + v2);
      BOOL v4 = __CFADD__(v1, v3);
      v1 += v3;
      if (v4) {
        goto LABEL_17;
      }
      v2 += 4LL;
      if (v2 == 12)
      {
        uint64_t v5 = 3LL * *(unsigned int *)"(";
        if ((v5 & 0xFFFFFFFF00000000LL) != 0) {
          goto LABEL_18;
        }
        if (v1 == (_DWORD)v5) {
          return 0LL;
        }
        BOOL v4 = v5 >= v1;
        unsigned int v6 = v5 - v1;
        if (!v4) {
          goto LABEL_19;
        }
        uint64_t result = 10LL * v6;
        if ((result & 0xFFFFFFFF00000000LL) != 0) {
          goto LABEL_18;
        }
        return result;
      }
    }
  }

  __break(0x5513u);
LABEL_17:
  __break(0x5500u);
LABEL_18:
  __break(0x550Cu);
LABEL_19:
  __break(0x5515u);
  return result;
}

uint64_t sub_1000AB690(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_7;
  }

  if (*(unsigned __int8 *)(result + 344) >= 2u)
  {
LABEL_7:
    __break(0x550Au);
    return result;
  }

  if (!*(_BYTE *)(result + 344)) {
    *(_BYTE *)(result + 344) = 1;
  }
  return result;
}

uint64_t sub_1000AB6C4(uint64_t result)
{
  if (!result) {
    goto LABEL_11;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_11;
  }
  if (*(unsigned __int8 *)(result + 344) >= 2u)
  {
LABEL_12:
    __break(0x550Au);
    return result;
  }

  if (!*(_BYTE *)(result + 344)) {
    *(_BYTE *)(result + 344) = 1;
  }
  uint64_t result = (uint64_t)operator new(0x18uLL);
  if ((result & 0xF) != 0 || (uint64_t v2 = result, result = sub_1000AA4E8(result), (result & 7) != 0))
  {
LABEL_11:
    __break(0x5516u);
    goto LABEL_12;
  }

  int v3 = sub_100059694(v1, v2, 1, 0);
  if (v3) {
    sub_1000CEAEC( 0,  4,  "%s:%d Could not send stop message to outgoing process thread: this=%hhx pMsg=%hhx\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapOutgoingProcess.cpp",  743,  v1,  v2);
  }
  return v3 == 0;
}

BOOL sub_1000AB788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
LABEL_16:
    __break(0x550Au);
  }

  if (*(_BYTE *)(a1 + 8)) {
    return 0LL;
  }
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 24));
  *(void *)(a1 + 16) = a4;
  *(void *)a1 = a2;
  *(void *)&__int128 v11 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v11 + 1) = 0xAAAAAAAAAAAAAAAALL;
  *(_OWORD *)&v18.__opaque[24] = v11;
  *(_OWORD *)&v18.__opaque[40] = v11;
  *(_OWORD *)&v18.__sig = v11;
  *(_OWORD *)&v18.__opaque[8] = v11;
  pthread_attr_init(&v18);
  int v12 = pthread_attr_setinheritsched(&v18, 2);
  if (v12) {
    sub_1000CEAEC( 0,  4,  "%s:%d status == %d\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapSimpleThread.h",  213,  v12);
  }
  sched_param v17 = (sched_param)0xAAAAAAAAAAAAAAAALL;
  pthread_attr_getschedparam(&v18, &v17);
  v17.int sched_priority = a6;
  int v13 = pthread_attr_setschedparam(&v18, &v17);
  if (v13) {
    sub_1000CEAEC( 0,  4,  "%s:%d status == %d\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapSimpleThread.h",  222,  v13);
  }
  pthread_t v16 = (pthread_t)0xAAAAAAAAAAAAAAAALL;
  int v14 = pthread_create(&v16, &v18, (void *(__cdecl *)(void *))sub_1000AB940, (void *)a1);
  BOOL v7 = v14 == 0;
  if (v14)
  {
    sub_1000CEAEC( 0,  4,  "%s:%d status == %d\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapSimpleThread.h",  236,  v14);
    *(_BYTE *)(a1 + _Block_object_dispose((const void *)(v1 - 120), 8) = 0;
  }

  else
  {
    *(_BYTE *)(a1 + _Block_object_dispose((const void *)(v1 - 120), 8) = 1;
    pthread_cond_wait((pthread_cond_t *)(a1 + 88), (pthread_mutex_t *)(a1 + 24));
    pthread_detach(v16);
  }

  pthread_mutex_unlock((pthread_mutex_t *)(a1 + 24));
  return v7;
}

uint64_t sub_1000AB940(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    if ((result & 7) == 0)
    {
      sub_1000AB98C(result);
      pthread_mutex_destroy((pthread_mutex_t *)(v1 + 24));
      operator delete((void *)v1);
      return 0LL;
    }
  }

  else
  {
    __break(0x5518u);
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000AB98C(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    if ((result & 7) == 0)
    {
      pthread_mutex_lock((pthread_mutex_t *)(result + 24));
      if (!*(void *)v1) {
        *(void *)uint64_t v1 = sub_1000AA5B4(v1, *(dispatch_semaphore_s **)(v1 + 16));
      }
      *(void *)(v1 + 16) = 0LL;
      pthread_cond_broadcast((pthread_cond_t *)(v1 + 88));
      pthread_mutex_unlock((pthread_mutex_t *)(v1 + 24));
      uint64_t result = *(void *)v1;
      if (*(void *)v1)
      {
        if ((result & 7) == 0)
        {
          sub_10005983C(result);
          uint64_t result = *(void *)v1;
          if (!*(void *)v1)
          {
LABEL_10:
            *(_BYTE *)(v1 + _Block_object_dispose((const void *)(v1 - 120), 8) = 0;
            return result;
          }

          if ((result & 7) == 0)
          {
            uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
            goto LABEL_10;
          }
        }
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000ABA24(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(_BYTE *)(result + 132) & 1;
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000ABA40(uint64_t result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    *(void *)uint64_t result = off_100106C58;
    *(void *)(result + _Block_object_dispose((const void *)(v1 - 120), 8) = 0LL;
    *(_DWORD *)(result + 16) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(void *)(result + 56) = 0LL;
    *(void *)(result + 64) = -1LL;
    *(void *)(result + 80) = 0LL;
    *(_DWORD *)(result + 8_Block_object_dispose((const void *)(v1 - 120), 8) = 0;
    *(void *)(result + 96) = 0LL;
    *(void *)(result + 104) = 0LL;
    *(void *)(result + 120) = 0xFFFF000000000000LL;
    *(_DWORD *)(result + 12_Block_object_dispose((const void *)(v1 - 120), 8) = 0;
    *(_DWORD *)(result + 131) = 0;
    *(void *)(result + 136) = 0LL;
    *(void *)(result + 144) = 0LL;
    v3[0] = 0xAAAAAAAAAAAAAAAALL;
    v3[1] = 0xAAAAAAAAAAAAAAAALL;
    sub_1000CE91C((uint64_t)v3, 1u);
    v2[1] = 0xAAAAAAAAAAAAAAAALL;
    v3[0] = off_100103838;
    v2[0] = 0xAAAAAAAAAAAAAAAALL;
    sub_1000CE9E8((uint64_t)v3, v2);
    *(void *)(v1 + 72) = sub_100027C8C(v2);
    v3[0] = off_100103838;
    sub_1000CE94C(v3);
    return v1;
  }

  return result;
}

uint64_t sub_1000ABB10(uint64_t a1, int a2, uint64_t a3, __int16 a4, int a5, const void *a6, unsigned int a7)
{
  uint64_t result = (uint64_t)operator new(0x98uLL);
  if ((result & 0xF) != 0 || (uint64_t v15 = result, (result & 7) != 0))
  {
    __break(0x5516u);
    goto LABEL_8;
  }

  uint64_t result = sub_1000ABA40(result);
  if ((a3 + 32) >= 0x40)
  {
LABEL_8:
    __break(0x550Au);
    return result;
  }

  sub_1000ABBD4(v15, a1, a2, a3, a4, a5, a6, a7);
  if ((v16 & 1) == 0)
  {
    (*(void (**)(uint64_t))(*(void *)v15 + 8LL))(v15);
    return 0LL;
  }

  return v15;
}

void sub_1000ABBD4( uint64_t a1, uint64_t a2, int a3, uint64_t a4, __int16 a5, int a6, const void *a7, unsigned int a8)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_27;
  }
  *(_BYTE *)(a1 + 130) = 0;
  sub_1000AC534(a1);
  *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 120), 8) = a2;
  *(_DWORD *)(a1 + 16) = a3;
  *(_DWORD *)(a1 + 6_Block_object_dispose((const void *)(v1 - 120), 8) = a6;
  if ((a4 + 32) >= 0x40)
  {
LABEL_28:
    __break(0x550Au);
    goto LABEL_29;
  }

  *(_DWORD *)(a1 + 64) = a4;
  *(_WORD *)(a1 + 126) = a5;
  pthread_once(&stru_10011B908, sub_1000BC260);
  if (dword_10011B8F8[0])
  {
    sub_1000AC134(*(void *)(a1 + 8));
    if (!*(_DWORD *)(a1 + 144))
    {
LABEL_21:
      *(_DWORD *)(a1 + 144) = sub_1000BC5A4();
      goto LABEL_23;
    }

    if (a2 && (a2 & 7) == 0)
    {
      unsigned int v16 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 216LL))(a2);
      if (v16 < 5)
      {
        sched_param v17 = (unsigned int *)qword_10011C680[v16];
        if (v17) {
          BOOL v18 = (qword_10011C680[v16] & 7LL) == 0;
        }
        else {
          BOOL v18 = 0;
        }
        if (!v18) {
          goto LABEL_27;
        }
        unsigned int v19 = sub_1000BC5A4();
        unsigned int v20 = *(_DWORD *)(a1 + 144);
        uint64_t v21 = v19 - v20;
        if (v19 < v20)
        {
LABEL_31:
          __break(0x5515u);
          return;
        }

        uint64_t v22 = v17[19];
        if (v22 < 4)
        {
          if (~(unint64_t)dword_10011B8F8 >= 4 * v22)
          {
            if (dword_10011B8F8[v22]) {
              (*(void (**)(unsigned int *, uint64_t, void, void))(*(void *)v17 + 104LL))( v17,  v21,  0LL,  0LL);
            }
            goto LABEL_21;
          }

uint64_t sub_1000ABD94( uint64_t a1, int a2, uint64_t a3, __int16 a4, int a5, int a6, unsigned int a7, unsigned int a8, unsigned __int16 a9, unsigned int a10)
{
  uint64_t result = (uint64_t)operator new(0x98uLL);
  if ((result & 0xF) != 0 || (uint64_t v19 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t result = sub_1000ABA40(result);
    if ((a3 + 32) < 0x40)
    {
      sub_1000ABE78(v19, a1, a2, a3, a4, a5, a6, a7, a8, 255, 0LL, 0, a9, a10);
      return v19;
    }
  }

  __break(0x550Au);
  return result;
}

void sub_1000ABE78( uint64_t a1, uint64_t a2, int a3, uint64_t a4, __int16 a5, int a6, int a7, unsigned int a8, unsigned int a9, char a10, const void *a11, unsigned __int8 a12, unsigned __int16 a13, unsigned int a14)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_34;
  }
  if ((*(_BYTE *)(a1 + 132) & 4) != 0) {
    sub_1000D276C();
  }
  BOOL v18 = operator new[](a12 + 10LL);
  if (v18 == (_BYTE *)-1LL) {
    goto LABEL_33;
  }
  uint64_t v19 = v18;
  *BOOL v18 = a7;
  if ((a4 + 32) > 0x3F)
  {
LABEL_35:
    __break(0x550Au);
    goto LABEL_36;
  }

  unsigned int v20 = v18 + 1;
  if ((_DWORD)a4 == 4)
  {
    *unsigned int v20 = __rev16(a8);
    uint64_t v21 = v18 + 3;
  }

  else
  {
    if (v18 == (_BYTE *)-2LL) {
      goto LABEL_33;
    }
    v18[1] = a8;
    uint64_t v21 = v18 + 2;
    if ((_DWORD)a4 == 12)
    {
      if (v18 == (_BYTE *)-3LL) {
        goto LABEL_33;
      }
      uint64_t v21 = v18 + 3;
      v18[2] = a10;
    }
  }

  if (a7 == 23)
  {
    *(_WORD *)uint64_t v21 = __rev16(a13);
    if ((unint64_t)v21 <= 0xFFFFFFFFFFFFFFFDLL)
    {
      *(_DWORD *)(v21 + 2) = bswap32(a14);
      if ((unint64_t)(v21 + 2) <= 0xFFFFFFFFFFFFFFFBLL)
      {
        v21 += 6;
        goto LABEL_25;
      }
    }

    goto LABEL_33;
  }

  if (a7 != 20)
  {
    if (a7 != 6) {
      goto LABEL_25;
    }
    *(_DWORD *)uint64_t v21 = bswap32(a9);
    if ((unint64_t)v21 <= 0xFFFFFFFFFFFFFFFBLL)
    {
      v21 += 4;
      goto LABEL_25;
    }

    goto LABEL_33;
  }

  if (a11 && a12)
  {
    memcpy(v21, a11, a12);
    if (!__CFADD__(v21, a12))
    {
      v21 += a12;
      goto LABEL_25;
    }

uint64_t sub_1000AC084(uint64_t a1, int a2)
{
  uint64_t result = (uint64_t)operator new(0x98uLL);
  if ((result & 0xF) != 0 {
    || (uint64_t v5 = result, (result & 7) != 0)
  }
    || (uint64_t result = sub_1000ABA40(result), (((_BYTE)v5 + 8) & 7) != 0)
    || (*(void *)(v5 + _Block_object_dispose((const void *)(v1 - 120), 8) = a1, (((_DWORD)v5 + 130) & 1) != 0)
    || (*(_BYTE *)(v5 + 130) = 1, !a1)
    || (a1 & 7) != 0
    || (uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 160LL))(a1), (((_BYTE)v5 + 120) & 7) != 0)
    || (*(_WORD *)(v5 + 120) = result, (((_BYTE)v5 + 88) & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    *(_DWORD *)(v5 + 8_Block_object_dispose((const void *)(v1 - 120), 8) = a2;
    return v5;
  }

  return result;
}

uint64_t sub_1000AC134(uint64_t result)
{
  if (!result) {
    goto LABEL_11;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_11;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 216LL))(result);
  if (result >= 5)
  {
LABEL_9:
    __break(0x5512u);
    goto LABEL_10;
  }

  if (~(unint64_t)qword_10011C680 >= 8 * (unint64_t)result)
  {
    pthread_mutex_lock(&stru_10011B7E8);
    uint64_t v2 = sub_1000BC2D4(v1, 0, 0, "pckLifeUs");
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v1 + 216LL))(v1);
    if (result <= 4)
    {
      if (~(unint64_t)qword_10011C680 >= 8 * (unint64_t)result)
      {
        qword_10011C680[result] = v2;
        return pthread_mutex_unlock(&stru_10011B7E8);
      }

      goto LABEL_10;
    }

    goto LABEL_9;
  }

uint64_t sub_1000AC214(uint64_t result, int a2, uint64_t a3, unsigned int a4, char a5)
{
  if (!result) {
    goto LABEL_20;
  }
  uint64_t v5 = result;
  if ((result & 7) != 0) {
    goto LABEL_20;
  }
  unsigned int v6 = a4;
  int v7 = a2;
  *(_DWORD *)(result + 60) = a4;
  if ((a5 & 1) != 0)
  {
    *(_DWORD *)(result + 52) = a4;
    unsigned int v8 = a2 + a4;
    if (!__CFADD__(a2, a4)) {
      goto LABEL_17;
    }
    goto LABEL_19;
  }

  if (!a2)
  {
    uint64_t result = *(void *)(result + 8);
    if (!result || (result & 7) != 0) {
      goto LABEL_20;
    }
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 144LL))(result);
    int v7 = result;
  }

  if ((a3 + 32) > 0x3F)
  {
LABEL_22:
    __break(0x550Au);
    goto LABEL_23;
  }

  if (__CFADD__(v7, v6))
  {
LABEL_19:
    __break(0x5500u);
LABEL_20:
    __break(0x5516u);
LABEL_21:
    __break(0x5513u);
    goto LABEL_22;
  }

  if (v7 + v6 < 0x10000)
  {
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v5 + 48LL))( v5,  a3,  (unsigned __int16)(v7 + v6));
    BOOL v10 = __CFADD__(v6, (_DWORD)result);
    v6 += result;
    if (!v10)
    {
      *(_DWORD *)(v5 + 52) = v6;
      int v11 = v6 + v7;
      if (!__CFADD__(v6, v7))
      {
        BOOL v10 = __CFADD__(v11, 1);
        unsigned int v8 = v11 + 1;
        if (!v10)
        {
LABEL_17:
          *(_DWORD *)(v5 + 4_Block_object_dispose((const void *)(v1 - 120), 8) = v8;
          uint64_t result = (uint64_t)operator new[](v8);
          *(void *)(v5 + 40) = result;
          *(_DWORD *)(v5 + 56) = v6;
          if (!__CFADD__(result, v6))
          {
            result += v6;
            *(void *)(v5 + 24) = result;
            *(void *)(v5 + 32) = result;
            *(_WORD *)(v5 + 12_Block_object_dispose((const void *)(v1 - 120), 8) = 0;
            *(void *)(v5 + 96) = result;
            *(void *)(v5 + 104) = result;
            *(_WORD *)(v5 + 124) = 0;
            return result;
          }

          goto LABEL_21;
        }
      }
    }

    goto LABEL_19;
  }

void sub_1000AC324( uint64_t a1, uint64_t a2, int a3, uint64_t a4, __int16 a5, int a6, const void *a7, unsigned int a8)
{
  if (!a1 || (a1 & 7) != 0)
  {
LABEL_12:
    __break(0x5516u);
LABEL_13:
    __break(0x550Au);
    return;
  }

  if ((*(_BYTE *)(a1 + 132) & 4) != 0) {
    sub_1000D276C();
  }
  sub_1000ABBD4(a1, a2, a3, a4, a5, a6, a7, a8);
  uint64_t v9 = *(void *)(a1 + 136);
  if (v9)
  {
    if ((v9 & 7) == 0)
    {
      uint64_t v10 = *(void *)(v9 + 48);
      if (v10)
      {
        if ((v10 & 7) == 0)
        {
          sub_10005BE44(v10, a1);
          return;
        }
      }
    }

    goto LABEL_12;
  }

void sub_1000AC3A4(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_29;
  }
  *(void *)a1 = off_100106C58;
  pthread_once(&stru_10011B908, sub_1000BC260);
  if (!dword_10011B8F8[0] || !*(_DWORD *)(a1 + 144)) {
    goto LABEL_20;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  if (!v2 || (v2 & 7) != 0)
  {
LABEL_29:
    __break(0x5516u);
    goto LABEL_30;
  }

  unsigned int v3 = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 216LL))(v2);
  if (v3 >= 5)
  {
LABEL_30:
    __break(0x5512u);
    goto LABEL_31;
  }

  BOOL v4 = (unsigned int *)qword_10011C680[v3];
  if (v4) {
    BOOL v5 = (qword_10011C680[v3] & 7LL) == 0;
  }
  else {
    BOOL v5 = 0;
  }
  if (!v5) {
    goto LABEL_29;
  }
  unsigned int v6 = sub_1000BC5A4();
  unsigned int v7 = *(_DWORD *)(a1 + 144);
  uint64_t v8 = v6 - v7;
  if (v6 < v7)
  {
LABEL_32:
    __break(0x5515u);
    goto LABEL_33;
  }

  uint64_t v9 = v4[19];
  if (v9 >= 8)
  {
LABEL_33:
    __break(0x550Au);
    return;
  }

  if (~(unint64_t)dword_10011B8F8 < 4 * v9)
  {
LABEL_31:
    __break(0x5513u);
    goto LABEL_32;
  }

  if (dword_10011B8F8[v9]) {
    (*(void (**)(unsigned int *, uint64_t, void, void))(*(void *)v4 + 104LL))(v4, v8, 0LL, 0LL);
  }
LABEL_20:
  *(_BYTE *)(a1 + 130) = 0;
  sub_1000AC534(a1);
  uint64_t v10 = *(void *)(a1 + 136);
  if (v10)
  {
    if ((v10 & 7) != 0) {
      goto LABEL_29;
    }
    uint64_t v11 = *(void *)(v10 + 48);
    if (!v11 || (*(void *)(v10 + 48) & 7LL) != 0) {
      goto LABEL_29;
    }
    sub_10005BE44(v11, a1);
  }

void sub_1000AC4FC(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    sub_1000AC3A4(a1);
  }
}

void sub_1000AC510(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    sub_1000AC3A4(a1);
    operator delete(v1);
  }

void sub_1000AC534(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    if ((*(_BYTE *)(a1 + 132) & 8) != 0) {
      bzero(*(void **)(a1 + 40), *(unsigned int *)(a1 + 48));
    }
    uint64_t v2 = *(void **)(a1 + 40);
    if (v2) {
      operator delete[](v2);
    }
    *(void *)(a1 + 40) = 0LL;
    *(void *)(a1 + 4_Block_object_dispose((const void *)(v1 - 120), 8) = 0LL;
    *(void *)(a1 + 56) = 0LL;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_WORD *)(a1 + 12_Block_object_dispose((const void *)(v1 - 120), 8) = 0;
    *(_OWORD *)(a1 + 96) = 0u;
    *(_WORD *)(a1 + 124) = 0;
  }

uint64_t sub_1000AC59C(uint64_t result)
{
  if (!result) {
    goto LABEL_21;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_21;
  }
  int v2 = *(_DWORD *)(result + 64);
  if (v2 >= 15)
  {
LABEL_19:
    __break(0x5518u);
LABEL_20:
    sub_1000D276C();
  }

  if (v2)
  {
    uint64_t result = *(void *)(result + 8);
    if (!result || (result & 7) != 0) {
      goto LABEL_21;
    }
    unsigned int v3 = *(unsigned __int16 *)(v1 + 128);
  }

  if ((*(_BYTE *)(v1 + 132) & 2) != 0) {
    goto LABEL_13;
  }
  uint64_t result = sub_1000B6CE0();
  if (!result || (result & 7) != 0)
  {
LABEL_21:
    __break(0x5516u);
    goto LABEL_22;
  }

  BOOL v4 = sub_10008E10C(result, *(void *)(v1 + 8));
  sub_10005F130(v1, 2u, v4);
LABEL_13:
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v1 + 56LL))(v1);
  if (!(_DWORD)result) {
    goto LABEL_19;
  }
  unsigned int v5 = result;
  if (*(void *)(v1 + 32)) {
    goto LABEL_17;
  }
  uint64_t v6 = *(unsigned int *)(v1 + 64);
  if ((v6 + 32) >= 0x40)
  {
LABEL_22:
    __break(0x550Au);
    goto LABEL_23;
  }

  uint64_t result = sub_1000AC214(v1, result, v6, 0, 1);
  if (!*(void *)(v1 + 32)) {
    goto LABEL_19;
  }
LABEL_17:
  if (!HIWORD(v5))
  {
    *(_WORD *)(v1 + 124) = v5;
    return (*(unsigned int (**)(uint64_t))(*(void *)v1 + 64LL))(v1) == *(unsigned __int16 *)(v1 + 124);
  }

uint64_t sub_1000AC6C4(uint64_t result, int a2, int a3)
{
  if (!result) {
    goto LABEL_22;
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_22;
  }
  uint64_t result = sub_100063D7C(*(void *)(result + 8));
  if ((a2 + 32) >= 0x40)
  {
LABEL_23:
    __break(0x550Au);
    return result;
  }

  int v6 = result;
  if ((*(_BYTE *)(v3 + 132) & 2) != 0) {
    goto LABEL_8;
  }
  uint64_t result = sub_1000B6CE0();
  if (!result || (result & 7) != 0)
  {
LABEL_22:
    __break(0x5516u);
    goto LABEL_23;
  }

  if (!sub_10008E10C(result, *(void *)(v3 + 8)))
  {
    int v7 = 0;
    goto LABEL_10;
  }

uint64_t sub_1000AC784(uint64_t result)
{
  if (!result) {
    goto LABEL_7;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_7;
  }
  if ((*(_DWORD *)(result + 64) + 32) >= 0x40)
  {
LABEL_8:
    __break(0x550Au);
    return result;
  }

  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 48LL))(result);
  int v2 = *(unsigned __int16 *)(v1 + 128);
  BOOL v3 = __CFADD__((_DWORD)result, v2);
  int v4 = result + v2;
  if (v3 || (uint64_t result = (v4 + 1), v4 == -1))
  {
    __break(0x5500u);
LABEL_7:
    __break(0x5516u);
    goto LABEL_8;
  }

  return result;
}

uint64_t sub_1000AC7F0(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_62;
  }
  size_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_62;
  }
  if (!a2) {
    goto LABEL_60;
  }
  if (*(void *)(result + 32) != *(void *)(result + 24)) {
    return *(unsigned __int16 *)(result + 124);
  }
  int v3 = *(_DWORD *)(result + 64);
  int v4 = *(_BYTE *)(result + 132) & 2;
  if (v3 == 4) {
    int v5 = 3;
  }
  else {
    int v5 = 2;
  }
  int v6 = v5 + v4;
  unsigned int v7 = v5 + v4 + *(unsigned __int16 *)(result + 128);
  if (HIWORD(v7)) {
    goto LABEL_64;
  }
  uint64_t result = sub_100063D7C(*(void *)(result + 8));
  int v8 = result;
  if ((_DWORD)result) {
    int v9 = 2;
  }
  else {
    int v9 = 1;
  }
  int v10 = v6 + 3;
  if ((v7 & 0xFF00) == 0) {
    int v10 = v6 + 1;
  }
  unsigned int v11 = v10 + v9;
  unsigned int v12 = *(_DWORD *)(v2 + 56);
  if (!v12 || v11 == v12)
  {
    unsigned int v13 = *(_DWORD *)(v2 + 56);
    if (*(_DWORD *)(v2 + 48) >= *(unsigned __int16 *)(v2 + 124))
    {
LABEL_22:
      unint64_t v14 = *(void *)(v2 + 32);
      if (v12 && v14 - v12 >= v14) {
        goto LABEL_61;
      }
      unsigned int v15 = v12;
      unsigned int v16 = (_BYTE *)(v14 - v12);
      *(void *)(v2 + 32) = v16;
      BOOL v17 = v13 >= v15;
      unsigned int v18 = v13 - v15;
      if (!v17) {
        goto LABEL_65;
      }
      *(_DWORD *)(v2 + 56) = v18;
      unint64_t v19 = *(void *)(v2 + 40);
      if (v16 == (_BYTE *)v19) {
        goto LABEL_29;
      }
      if (v19 > 0xFFFFFFFFFFFFFFFDLL) {
        goto LABEL_61;
      }
      if (v16 == (_BYTE *)(v19 + 2))
      {
LABEL_29:
        if (v8)
        {
          if (v16 == (_BYTE *)-1LL) {
            goto LABEL_61;
          }
          if (!v14) {
            goto LABEL_62;
          }
          *v16++ = -1;
        }

        if (v16 == (_BYTE *)-1LL) {
          goto LABEL_61;
        }
        if (v16)
        {
          unsigned int v20 = v16 + 1;
          *unsigned int v16 = 85;
          if ((v7 & 0xFF00) != 0)
          {
            if (v16 == (_BYTE *)-2LL) {
              goto LABEL_61;
            }
            v16[1] = 0;
            if (v16 == (_BYTE *)-3LL) {
              goto LABEL_61;
            }
            uint64_t v21 = v16 + 3;
            v16[2] = BYTE1(v7);
            if (v16 == (_BYTE *)-4LL) {
              goto LABEL_61;
            }
            uint64_t v22 = 4LL;
          }

          else
          {
            if (v16 == (_BYTE *)-2LL) {
              goto LABEL_61;
            }
            uint64_t v22 = 2LL;
            uint64_t v21 = v16 + 1;
          }

          *uint64_t v21 = v7;
          unsigned int v23 = *(_DWORD *)(v2 + 64);
          if (v23 + 32 > 0x3F)
          {
LABEL_63:
            __break(0x550Au);
            goto LABEL_64;
          }

          if (v23 > 0xFF)
          {
LABEL_64:
            __break(0x5507u);
LABEL_65:
            __break(0x5515u);
            return result;
          }

          unsigned int v24 = &v16[v22];
          if (v24 == (_BYTE *)-1LL) {
            goto LABEL_61;
          }
          int v25 = v24 + 1;
          _BYTE *v24 = v23;
          if (v3 == 4)
          {
            if (v24 == (_BYTE *)-2LL) {
              goto LABEL_61;
            }
            int v25 = v24 + 2;
            v24[1] = *(_BYTE *)(v2 + 127);
          }

          if (v25 != (_BYTE *)-1LL)
          {
            uint64_t v26 = v25 + 1;
            *int v25 = *(_BYTE *)(v2 + 126);
            if (!v4) {
              goto LABEL_53;
            }
            if (v25 != (_BYTE *)-2LL)
            {
              *uint64_t v26 = BYTE1(*(_DWORD *)(v2 + 68));
              if (v25 != (_BYTE *)-3LL)
              {
                uint64_t v26 = v25 + 3;
                v25[2] = *(_DWORD *)(v2 + 68);
LABEL_53:
                uint64_t v27 = *(unsigned __int16 *)(v2 + 128);
                if (!__CFADD__(v26, v27))
                {
                  char v28 = 0;
                  std::string::size_type v29 = &v26[v27];
                  while (v20 != (char *)-1LL)
                  {
                    char v30 = *v20++;
                    v28 += v30;
                    if (v20 >= v29)
                    {
                      *std::string::size_type v29 = -v28;
                      unsigned int v31 = v29 + 1;
                      uint64_t result = (uint64_t)&v31[-*(void *)(v2 + 32)];
                      if (result >= 0x10000)
                      {
                        syslog( 3,  "%s:%s-%d packetlen too large)",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPacket.cpp",  "GenerateRawPktData",  851);
                        return (uint64_t)&v31[-*(void *)(v2 + 32)];
                      }

                      return result;
                    }
                  }
                }
              }
            }
          }

size_t sub_1000ACADC(size_t result, unsigned int a2)
{
  if (!result) {
    goto LABEL_20;
  }
  size_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_20;
  }
  if (*(_DWORD *)(result + 56) == a2) {
    return *(void *)(v2 + 24);
  }
  int v4 = *(const void **)(result + 32);
  if (v4 != *(const void **)(result + 24))
  {
    __break(0x5518u);
LABEL_20:
    __break(0x5516u);
    goto LABEL_21;
  }

  uint64_t result = *(void *)(result + 8);
  if (!result || (result & 7) != 0) {
    goto LABEL_20;
  }
  if ((*(_DWORD *)(v2 + 64) + 32) > 0x3F)
  {
LABEL_21:
    __break(0x550Au);
LABEL_22:
    __break(0x5500u);
    goto LABEL_23;
  }

  unsigned int v5 = *(unsigned __int16 *)(v2 + 128);
  uint64_t result = (*(uint64_t (**)(size_t))(*(void *)result + 136LL))(result);
  if (result < v5)
  {
    syslog(4, "CIapPacket::%s:%d Not enough space available... failed to realign.\n", "RealignPacketBuffer", 1424);
    return 0LL;
  }

  size_t v6 = *(unsigned __int16 *)(v2 + 128);
  int v7 = a2 + v6;
  if (__CFADD__(a2, (_DWORD)v6)) {
    goto LABEL_22;
  }
  uint64_t result = (v7 + 1);
  if (v7 == -1) {
    goto LABEL_22;
  }
  if (*(_DWORD *)(v2 + 48) >= result)
  {
    int v8 = 0LL;
  }

  else
  {
    *(_DWORD *)(v2 + 4_Block_object_dispose((const void *)(v1 - 120), 8) = result;
    int v8 = *(void **)(v2 + 40);
    uint64_t result = (size_t)operator new[](result);
    *(void *)(v2 + 40) = result;
  }

  *(_DWORD *)(v2 + 56) = a2;
  uint64_t v9 = *(void *)(v2 + 40);
  if (!__CFADD__(v9, a2))
  {
    int v10 = (void *)(v9 + a2);
    *(void *)(v2 + 24) = v10;
    *(void *)(v2 + 32) = v10;
    *(void *)(v2 + 96) = v10;
    *(void *)(v2 + 104) = v10;
    memmove(v10, v4, v6);
    if (v8) {
      operator delete[](v8);
    }
    return *(void *)(v2 + 24);
  }

void sub_1000ACC20(uint64_t a1, unint64_t a2, _BYTE *a3, unint64_t a4, void *a5)
{
  if (!a1 || (a1 & 7) != 0)
  {
LABEL_135:
    __break(0x5516u);
LABEL_136:
    __break(0x5507u);
LABEL_137:
    __break(0x550Au);
LABEL_138:
    sub_1000D251C();
  }

  if ((*(_BYTE *)(a1 + 132) & 4) != 0) {
    sub_1000D276C();
  }
  if (*(unsigned __int8 *)(a1 + 130) - 1 >= 0xB)
  {
    int v10 = a3;
    unsigned int v11 = a5;
LABEL_131:
    *unsigned int v11 = v10 - a3;
    return;
  }

  uint64_t v8 = sub_1000B6CE0();
  if (*(_BYTE *)(a1 + 130) == 1)
  {
    LODWORD(v9) = 0;
    goto LABEL_12;
  }

  unint64_t v9 = *(unsigned int *)(a1 + 88);
  if ((_DWORD)v9)
  {
    unint64_t v12 = *(void *)(a1 + 80);
    BOOL v13 = a2 >= v12;
    unint64_t v14 = a2 - v12;
    if (!v13)
    {
LABEL_134:
      __break(0x5515u);
      goto LABEL_135;
    }

    LODWORD(v9) = v14 > v9;
  }

uint64_t sub_1000AD3A8(uint64_t result, const void *a2, size_t __n)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_14;
  }
  if ((_DWORD)__n)
  {
    unsigned int v3 = *(_DWORD *)(result + 56);
    if (v3 <= __n)
    {
      __break(0x5518u);
    }

    else
    {
      unint64_t v4 = *(void *)(result + 32);
      if (__n <= v4)
      {
        unsigned int v5 = (void *)(v4 - __n);
        *(void *)(result + 32) = v5;
        unint64_t v6 = *(void *)(result + 24);
        if (__n <= v6)
        {
          *(void *)(result + 24) = v6 - __n;
          unsigned int v7 = *(unsigned __int16 *)(result + 128) + (_DWORD)__n;
          if (v7 < 0x10000)
          {
            *(_WORD *)(result + 12_Block_object_dispose((const void *)(v1 - 120), 8) = v7;
            BOOL v8 = v3 >= __n;
            int v9 = v3 - __n;
            if (v8)
            {
              *(_DWORD *)(result + 56) = v9;
              return (uint64_t)memcpy(v5, a2, __n);
            }

            goto LABEL_16;
          }

uint64_t sub_1000AD43C(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = (_BYTE *)result;
    if ((result & 7) == 0)
    {
      if (*(_BYTE *)(result + 134))
      {
        --*(_BYTE *)(result + 134);
        return result;
      }

      uint64_t result = pthread_once(&stru_10011B908, sub_1000BC260);
      if (!dword_10011B8F8[0]) {
        goto LABEL_26;
      }
      size_t v2 = v1 + 144;
      if (((unint64_t)(v1 + 144) & 7) == 0)
      {
        if (!*v2) {
          goto LABEL_26;
        }
        unsigned int v3 = (uint64_t *)(v1 + 8);
        if (((unint64_t)(v1 + 8) & 7) == 0)
        {
          uint64_t result = *v3;
          if (*v3)
          {
            if ((result & 7) == 0)
            {
              uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 216LL))(result);
              if (result >= 5)
              {
LABEL_34:
                __break(0x5512u);
                goto LABEL_35;
              }

              unint64_t v4 = (unsigned int *)qword_10011C680[result];
              if (v4) {
                BOOL v5 = (qword_10011C680[result] & 7LL) == 0;
              }
              else {
                BOOL v5 = 0;
              }
              if (!v5) {
                goto LABEL_33;
              }
              uint64_t result = (uint64_t)sub_1000BC5A4();
              if (result < *v2)
              {
LABEL_36:
                __break(0x5515u);
                goto LABEL_37;
              }

              uint64_t v6 = v4[19];
              if (v6 >= 8)
              {
LABEL_37:
                __break(0x550Au);
                return result;
              }

              if (~(unint64_t)dword_10011B8F8 < 4 * v6)
              {
LABEL_35:
                __break(0x5513u);
                goto LABEL_36;
              }

              if (dword_10011B8F8[v6]) {
                (*(void (**)(unsigned int *, void, void, void))(*(void *)v4 + 104LL))( v4,  (result - *v2),  0LL,  0LL);
              }
              *size_t v2 = 0;
LABEL_26:
              if ((v1[132] & 4) == 0) {
                return (*(uint64_t (**)(_BYTE *))(*(void *)v1 + 8LL))(v1);
              }
              uint64_t result = sub_1000472A8();
              if (result && (result & 7) == 0 && v7 && (v7 & 7) == 0) {
                return (*(uint64_t (**)(uint64_t, void, void, unsigned int *))(*(void *)result + 104LL))( result,  v7[38],  *((unsigned __int16 *)v7 + 78),  v7);
              }
            }
          }
        }
      }
    }

uint64_t sub_1000AD5FC(uint64_t result, int a2, __int16 a3)
{
  if (!result) {
    goto LABEL_12;
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_12;
  }
  sub_1000ABA40(result);
  *(void *)uint64_t v3 = off_100106CC8;
  *(_DWORD *)(v3 + 152) = a2;
  *(_WORD *)(v3 + 156) = a3;
  *(_BYTE *)(v3 + 132) |= 4u;
  uint64_t result = sub_1000BF55C(a2);
  if (!result) {
    sub_1000D276C();
  }
  if ((result & 7) != 0) {
    goto LABEL_12;
  }
  uint64_t v6 = sub_10001864C(result);
  if (!v6) {
    sub_1000D276C();
  }
  sub_1000ABBD4(v3, v6, 0, 0xFFFFFFFFLL, 0, -1, 0LL, 0);
  uint64_t result = *(void *)(v3 + 8);
  if (!result || (result & 7) != 0)
  {
LABEL_12:
    __break(0x5516u);
  }

  else
  {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 144LL))(result);
    if (!WORD1(result))
    {
      sub_1000AC214(v3, result - 2, 0LL, 2u, 0);
      return v3;
    }
  }

  __break(0x5507u);
  return result;
}

uint64_t sub_1000AD6F0(uint64_t result, int a2, __int16 a3)
{
  if (result && (result & 7) == 0) {
    return sub_1000AD5FC(result, a2, a3);
  }
  __break(0x5516u);
  return result;
}

void sub_1000AD704(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    sub_1000AC3A4(a1);
  }
}

void sub_1000AD718(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    sub_1000AC3A4(a1);
    operator delete(v1);
  }

uint64_t sub_1000AD73C(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(unsigned __int16 *)(result + 128);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000AD754(uint64_t result)
{
  if (!result) {
    goto LABEL_20;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_20;
  }
  uint64_t result = *(void *)(result + 8);
  if (!result || (result & 7) != 0) {
    goto LABEL_20;
  }
  if ((*(_DWORD *)(v1 + 64) + 32) >= 0x40)
  {
LABEL_22:
    __break(0x550Au);
    return result;
  }

  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 136LL))(result);
  unsigned int v3 = *(_DWORD *)(v1 + 60);
  BOOL v4 = result >= v3;
  unsigned int v5 = result - v3;
  if (!v4) {
    goto LABEL_19;
  }
  uint64_t v6 = *(unsigned __int16 *)(v1 + 128);
  BOOL v4 = v5 >= v6;
  uint64_t v7 = v5 - v6;
  if (!v4) {
    goto LABEL_19;
  }
  uint64_t v8 = *(void *)(v1 + 40);
  uint64_t v9 = *(unsigned int *)(v1 + 48);
  if (__CFADD__(v8, v9)) {
    goto LABEL_21;
  }
  uint64_t v10 = *(void *)(v1 + 24);
  if (__CFADD__(v10, v6)) {
    goto LABEL_21;
  }
  uint64_t v11 = v8 + v9 - (v10 + v6);
  BOOL v12 = __OFSUB__(v11, 1LL);
  unint64_t v13 = v11 - 1;
  if (v12)
  {
LABEL_19:
    __break(0x5515u);
LABEL_20:
    __break(0x5516u);
LABEL_21:
    __break(0x5513u);
    goto LABEL_22;
  }

  else {
    return v13;
  }
}

uint64_t sub_1000AD80C(uint64_t result)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_7;
  }
  uint64_t v1 = *(void *)(result + 40);
  if (!v1)
  {
    __break(0x5518u);
LABEL_7:
    __break(0x5516u);
    goto LABEL_8;
  }

  uint64_t v2 = *(unsigned int *)(result + 52);
  *(_DWORD *)(result + 56) = v2;
  if (!__CFADD__(v1, v2))
  {
    uint64_t v3 = v1 + v2;
    *(_WORD *)(result + 124) = 0;
    *(void *)(result + 24) = v3;
    *(void *)(result + 32) = v3;
    *(_WORD *)(result + 12_Block_object_dispose((const void *)(v1 - 120), 8) = 0;
    *(void *)(result + 96) = v3;
    *(void *)(result + 104) = v3;
    return result;
  }

uint64_t sub_1000AD854(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(void *)(result + 32);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000AD86C(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(unsigned __int16 *)(result + 124);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000AD884(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(unsigned __int8 *)(result + 133);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000AD89C( uint64_t result, int a2, int a3, unsigned int a4, uint64_t a5, char a6, unsigned int a7, uint64_t a8)
{
  if (!result) {
    goto LABEL_13;
  }
  uint64_t v8 = result;
  if ((result & 7) != 0) {
    goto LABEL_13;
  }
  if (a4 >= 8 {
    || (uint64_t result = sub_1000267A8(result, a2, a3, a4, a5, 0LL, 0LL),
  }
        *(void *)uint64_t v8 = off_100106D38,
        *(void *)(v8 + 160) = 0LL,
        *(void *)(v8 + 16_Block_object_dispose((const void *)(v1 - 120), 8) = 0LL,
        *(void *)(v8 + 152) = a8,
        *(_BYTE *)(v8 + 17_Block_object_dispose((const void *)(v1 - 120), 8) = a6,
        a7 > 3))
  {
    __break(0x550Au);
LABEL_13:
    __break(0x5516u);
    return result;
  }

  *(_DWORD *)(v8 + 180) = a7;
  *(_BYTE *)(v8 + 190) = 0;
  *(void *)(v8 + 192) = 0LL;
  *(void *)(v8 + 200) = 0x7FFF00000000LL;
  uint64_t result = pthread_mutex_init((pthread_mutex_t *)(v8 + 216), 0LL);
  *(_WORD *)(v8 + _Block_object_dispose((const void *)(v1 - 120), 8) = 1024;
  *(_DWORD *)(v8 + 12) = 0;
  if (!a8 || (a8 & 7) != 0) {
    goto LABEL_13;
  }
  *(void *)(v8 + 40) = sub_1000569D8(a8);
  uint64_t v12 = sub_1000B6CE0();
  *(void *)(v8 + 144) = v12;
  if (!v12) {
    sub_1000CEAEC( 0,  4,  "%s:%d NULL == m_pProtocolMgr\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPortVport.cpp",  74);
  }
  if (!*(void *)(v8 + 152)) {
    sub_1000CEAEC( 0,  4,  "%s:%d NULL == m_sourceConnection\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPortVport.cpp",  79);
  }
  return v8;
}

uint64_t sub_1000AD9BC( uint64_t result, int a2, int a3, unsigned int a4, uint64_t a5, char a6, unsigned int a7, uint64_t a8)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else if (a4 <= 7 && a7 < 4)
  {
    return sub_1000AD89C(result, a2, a3, a4, a5, a6, a7, a8);
  }

  __break(0x550Au);
  return result;
}

uint64_t sub_1000AD9E8(uint64_t result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    *(void *)uint64_t result = off_100106D38;
    sub_1000AD43C(*(void *)(result + 168));
    *(void *)(v1 + 16_Block_object_dispose((const void *)(v1 - 120), 8) = 0LL;
    pthread_mutex_destroy((pthread_mutex_t *)(v1 + 216));
    return sub_100026ACC(v1);
  }

  return result;
}

uint64_t sub_1000ADA38(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000AD9E8(result);
  }
  __break(0x5516u);
  return result;
}

void sub_1000ADA4C(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t v1 = (void *)sub_1000AD9E8(a1);
    operator delete(v1);
  }

void sub_1000ADA70(uint64_t a1, const void *a2, int a3)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_36;
  }
  if (a2)
  {
    uint64_t v5 = *(void *)(a1 + 152);
    if (v5)
    {
      if ((v5 & 7) == 0)
      {
        uint64_t v7 = sub_10001864C(v5);
        if (!v7) {
          sub_1000D2500();
        }
        if ((a2 & 7) == 0)
        {
          uint64_t v8 = v7;
          unsigned int v9 = (*(uint64_t (**)(const void *))(*(void *)a2 + 24LL))(a2);
          if ((v8 & 7) == 0)
          {
            unsigned int v10 = v9;
            unsigned int v11 = (*(uint64_t (**)(uint64_t, void))(*(void *)v8 + 136LL))(v8, 0LL);
            uint64_t v12 = (*(uint64_t (**)(const void *))(*(void *)a2 + 16LL))(a2);
            if (v10)
            {
              unint64_t v13 = (char *)v12;
              while (1)
              {
                uint64_t v14 = v10 >= v11 ? v11 : v10;
                int v15 = v10 <= v11 ? a3 : 0;
                char v16 = sub_100085DBC(*(void *)(a1 + 152), *(_BYTE *)(a1 + 178), v13, v14, v15);
                BOOL v17 = v10 >= v14;
                v10 -= v14;
                if (!v17) {
                  break;
                }
                v13 += v14;
                if (v10) {
                  char v18 = v16;
                }
                else {
                  char v18 = 0;
                }
                if ((v18 & 1) == 0) {
                  goto LABEL_32;
                }
              }

              __break(0x5515u);
LABEL_35:
              __break(0x5513u);
              goto LABEL_36;
            }

            goto LABEL_32;
          }
        }
      }

      goto LABEL_36;
    }
  }

  if (*(unsigned __int8 *)(a1 + 190) < 2u)
  {
    if (*(_BYTE *)(a1 + 190))
    {
      if (a2) {
        goto LABEL_28;
      }
    }

    else
    {
      syslog(4, "CIapPortVPort::PortTransmitPacket: Interface not valid or iAP packet not initialized\n");
      if (a2)
      {
LABEL_28:
        if ((a2 & 7) == 0)
        {
LABEL_32:
          goto LABEL_33;
        }

uint64_t sub_1000ADBFC(uint64_t result, char *__p, unsigned int a3, int a4)
{
  if (!result || (uint64_t v4 = result, (result & 7) != 0))
  {
LABEL_37:
    __break(0x5516u);
    goto LABEL_38;
  }

  if (__p)
  {
    uint64_t result = *(void *)(result + 152);
    if (result)
    {
      if ((result & 7) == 0)
      {
        uint64_t result = sub_10001864C(result);
        if (!result) {
          sub_1000D2500();
        }
        if ((result & 7) == 0)
        {
          unsigned int v8 = (*(uint64_t (**)(uint64_t, void))(*(void *)result + 136LL))(result, 0LL);
          if (a3)
          {
            unsigned int v9 = v8;
            unsigned int v10 = __p;
            do
            {
              if (a3 >= v9) {
                uint64_t v11 = v9;
              }
              else {
                uint64_t v11 = a3;
              }
              if (a3 <= v9) {
                int v12 = a4;
              }
              else {
                int v12 = 0;
              }
              uint64_t result = sub_100085DBC(*(void *)(v4 + 152), *(_BYTE *)(v4 + 178), v10, v11, v12);
              BOOL v13 = a3 >= v11;
              a3 -= v11;
              if (!v13)
              {
                __break(0x5515u);
LABEL_36:
                __break(0x5513u);
                goto LABEL_37;
              }

              v10 += v11;
              if (a3) {
                char v14 = result;
              }
              else {
                char v14 = 0;
              }
            }

            while ((v14 & 1) != 0);
            if ((_DWORD)result) {
              uint64_t v15 = 0LL;
            }
            else {
              uint64_t v15 = 5LL;
            }
          }

          else
          {
            uint64_t v15 = 0LL;
          }

          operator delete(__p);
          return v15;
        }
      }

      goto LABEL_37;
    }
  }

  if (*(unsigned __int8 *)(v4 + 190) < 2u)
  {
    if (!*(_BYTE *)(v4 + 190)) {
      syslog(4, "CIapPortVPort::PortTransmitData: Interface not valid or iAP packet not initialized\n");
    }
    if (__p) {
      operator delete(__p);
    }
    return 6LL;
  }

uint64_t sub_1000ADD30(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_13;
  }
  uint64_t v2 = *(void *)(result + 152);
  if (!v2)
  {
    if (*(unsigned __int8 *)(result + 190) >= 2u)
    {
LABEL_14:
      __break(0x550Au);
      return result;
    }

    if (!*(_BYTE *)(result + 190)) {
      syslog(4, "CIapPortVPort::PortWaitSendDone: Interface not valid\n");
    }
    return 6LL;
  }

  if ((v2 & 7) != 0)
  {
LABEL_13:
    __break(0x5516u);
    goto LABEL_14;
  }

  uint64_t result = sub_10001864C(*(void *)(result + 152));
  if (result)
  {
    if ((result & 7) == 0) {
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 40LL))(result, a2);
    }
    goto LABEL_13;
  }

  return result;
}

void sub_1000ADDC0(uint64_t a1, _BYTE *a2, unsigned int a3)
{
  if (a1 && (a1 & 7) == 0)
  {
    if (!a2)
    {
      syslog(4, "CIapPortVPort::HandleReceiveBuffer: null buffer!\n");
      return;
    }

    unint64_t v5 = a3;
    v13[0] = 0xAAAAAAAAAAAAAAAALL;
    v13[1] = 0xAAAAAAAAAAAAAAAALL;
    sub_1000CE91C((uint64_t)v13, 1u);
    v12[1] = 0xAAAAAAAAAAAAAAAALL;
    v13[0] = off_100103838;
    v12[0] = 0xAAAAAAAAAAAAAAAALL;
    sub_1000CE9E8((uint64_t)v13, v12);
    uint64_t v6 = sub_100027C8C(v12);
    uint64_t v7 = a2;
    while (1)
    {
      unint64_t v14 = 0LL;
      uint64_t v8 = *(void *)(a1 + 168);
      if (!v8)
      {
        uint64_t v8 = sub_1000AC084(a1, 3000);
        *(void *)(a1 + 16_Block_object_dispose((const void *)(v1 - 120), 8) = v8;
        if (!v8) {
          break;
        }
      }

      if ((v8 & 7) != 0) {
        goto LABEL_21;
      }
      sub_1000ACC20(v8, (unint64_t)v6, v7, v5, &v14);
      if (v9 == 102)
      {
        sub_1000AD43C(*(void *)(a1 + 168));
        *(void *)(a1 + 16_Block_object_dispose((const void *)(v1 - 120), 8) = 0LL;
        unint64_t v14 = 0LL;
      }

      else if (!v9)
      {
        unsigned int v10 = *(unsigned int **)(a1 + 144);
        sub_1000B743C(v10, *(void *)(a1 + 168));
        *(void *)(a1 + 16_Block_object_dispose((const void *)(v1 - 120), 8) = 0LL;
      }

      if (__CFADD__(v7, v14)) {
        goto LABEL_22;
      }
      unint64_t v11 = v5 - v14;
      if (v5 < v14) {
        goto LABEL_23;
      }
      if (HIDWORD(v11)) {
        goto LABEL_24;
      }
      v7 += v14;
      unint64_t v5 = (v5 - v14);
      if (!(_DWORD)v11)
      {
        v13[0] = off_100103838;
        sub_1000CE94C(v13);
        return;
      }
    }

    __break(0x5518u);
  }

uint64_t sub_1000ADF28(uint64_t result)
{
  if (!result || (result & 7) != 0) {
    __break(0x5516u);
  }
  return result;
}

uint64_t sub_1000ADF3C(uint64_t result)
{
  if (!result || (result & 7) != 0) {
    __break(0x5516u);
  }
  return result;
}

uint64_t sub_1000ADF50(uint64_t result, uint64_t a2, unsigned int a3)
{
  if (result)
  {
    uint64_t v3 = result;
    if ((result & 7) == 0)
    {
      uint64_t result = *(void *)(result + 144);
      if (result && (result & 7) == 0) {
        return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, void))(*(void *)result + 48LL))( result,  a2,  a3,  v3,  0LL);
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000ADF8C(uint64_t result, __int16 a2)
{
  if (!result || (uint64_t v2 = result, (result & 7) != 0))
  {
    __break(0x5516u);
    goto LABEL_9;
  }

  if (!*(void *)(result + 152)) {
    return result;
  }
  unsigned int v3 = *(_DWORD *)(result + 180);
  if (v3 >= 4)
  {
LABEL_9:
    __break(0x550Au);
    return result;
  }

  if (v3 == 1)
  {
    pthread_mutex_lock((pthread_mutex_t *)(result + 216));
    __int16 v5 = *(_WORD *)(v2 + 194) & 0xFFFE | a2;
    *(_WORD *)(v2 + 194) = v5;
    pthread_mutex_unlock((pthread_mutex_t *)(v2 + 216));
    return sub_100085F4C(*(void *)(v2 + 152), v2, *(_BYTE *)(v2 + 178), *(unsigned __int16 *)(v2 + 192), v5);
  }

  return result;
}

uint64_t sub_1000AE02C(uint64_t result, __int16 a2)
{
  if (!result || (uint64_t v2 = result, (result & 7) != 0))
  {
    __break(0x5516u);
    goto LABEL_9;
  }

  if (!*(void *)(result + 152)) {
    return result;
  }
  unsigned int v3 = *(_DWORD *)(result + 180);
  if (v3 >= 4)
  {
LABEL_9:
    __break(0x550Au);
    return result;
  }

  if (v3 == 1)
  {
    pthread_mutex_lock((pthread_mutex_t *)(result + 216));
    unsigned __int16 v5 = *(_WORD *)(v2 + 192) & 0xFFFE | a2;
    *(_WORD *)(v2 + 192) = v5;
    pthread_mutex_unlock((pthread_mutex_t *)(v2 + 216));
    return sub_100085F4C(*(void *)(v2 + 152), v2, *(_BYTE *)(v2 + 178), v5, *(_WORD *)(v2 + 194));
  }

  return result;
}

uint64_t sub_1000AE0CC(uint64_t result, int a2)
{
  if (!result || (uint64_t v2 = result, (result & 7) != 0))
  {
    __break(0x5516u);
    goto LABEL_12;
  }

  if (!*(void *)(result + 152)) {
    return result;
  }
  unsigned int v3 = *(_DWORD *)(result + 180);
  if (v3 >= 4)
  {
LABEL_12:
    __break(0x550Au);
    return result;
  }

  if (v3 == 1)
  {
    __int16 v5 = *(_WORD *)(result + 192);
    __int16 v6 = *(_WORD *)(result + 194);
    pthread_mutex_lock((pthread_mutex_t *)(result + 216));
    pthread_mutex_unlock((pthread_mutex_t *)(v2 + 216));
    if (a2) {
      __int16 v7 = 2;
    }
    else {
      __int16 v7 = 0;
    }
    *(_WORD *)(v2 + 192) = v5 & 0xFFFD | v7;
    *(_WORD *)(v2 + 194) = v6;
    return sub_100085F4C(*(void *)(v2 + 152), v2, *(_BYTE *)(v2 + 178), v5 & 0xFFFDu | (unsigned __int16)v7, v6);
  }

  return result;
}

uint64_t sub_1000AE18C(uint64_t result, int a2)
{
  if (!result || (uint64_t v2 = result, (result & 7) != 0))
  {
    __break(0x5516u);
    goto LABEL_12;
  }

  if (!*(void *)(result + 152)) {
    return result;
  }
  unsigned int v3 = *(_DWORD *)(result + 180);
  if (v3 >= 4)
  {
LABEL_12:
    __break(0x550Au);
    return result;
  }

  if (v3 == 1)
  {
    __int16 v5 = *(_WORD *)(result + 192);
    __int16 v6 = *(_WORD *)(result + 194);
    pthread_mutex_lock((pthread_mutex_t *)(result + 216));
    pthread_mutex_unlock((pthread_mutex_t *)(v2 + 216));
    if (a2) {
      __int16 v7 = 3;
    }
    else {
      __int16 v7 = 0;
    }
    *(_WORD *)(v2 + 192) = v5 & 0xFFFC | v7;
    *(_WORD *)(v2 + 194) = v6;
    return sub_100085F4C(*(void *)(v2 + 152), v2, *(_BYTE *)(v2 + 178), v5 & 0xFFFCu | (unsigned __int16)v7, v6);
  }

  return result;
}

BOOL sub_1000AE24C(BOOL result, unsigned int a2)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_9;
  }
  if (a2 >= 8 || (unsigned int v2 = *(_DWORD *)(result + 180), v2 > 3))
  {
    __break(0x550Au);
LABEL_9:
    __break(0x5516u);
    return result;
  }

  return v2 == 1 && ((1 << a2) & *(unsigned __int16 *)(result + 186)) != 0;
}

BOOL sub_1000AE298(BOOL result, unsigned int a2)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_9;
  }
  if (a2 >= 2 || (unsigned int v2 = *(_DWORD *)(result + 180), v2 > 3))
  {
    __break(0x550Au);
LABEL_9:
    __break(0x5516u);
    return result;
  }

  return v2 == 1 && ((1 << a2) & *(unsigned __int16 *)(result + 184)) != 0;
}

const char *sub_1000AE2E4(const char *result)
{
  return result;
}

uint64_t sub_1000AE300(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return 3LL;
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000AE318(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return 0LL;
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000AE330(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return 1LL;
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000AE348(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return 1LL;
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000AE360(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return 100LL;
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000AE378(uint64_t result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
LABEL_12:
    __break(0x5516u);
    goto LABEL_13;
  }

  unsigned int v2 = (*(uint64_t (**)(uint64_t))(*(void *)result + 288LL))(result);
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v1 + 384LL))(v1);
  if (v2 < 4)
  {
    if (v2 == 1 || result == 0) {
      return 512LL;
    }
    if ((result & 7) == 0) {
      return (*(uint64_t (**)(uint64_t))(*(void *)result + 160LL))(result);
    }
    goto LABEL_12;
  }

uint64_t sub_1000AE400(uint64_t result)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_10;
  }
  if ((*(_WORD *)(result + 186) & 0x40) == 0) {
    return 0LL;
  }
  uint64_t result = *(void *)(result + 152);
  if (result)
  {
    if ((result & 7) == 0)
    {
      uint64_t result = sub_10001864C(result);
      if (result)
      {
        if ((result & 7) == 0) {
          return (*(uint64_t (**)(uint64_t))(*(void *)result + 248LL))(result);
        }
      }
    }
  }

uint64_t sub_1000AE45C(uint64_t result)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_10;
  }
  if ((*(_WORD *)(result + 186) & 0x40) == 0) {
    return 0LL;
  }
  uint64_t result = *(void *)(result + 152);
  if (result)
  {
    if ((result & 7) == 0)
    {
      uint64_t result = sub_10001864C(result);
      if (result)
      {
        if ((result & 7) == 0) {
          return (*(uint64_t (**)(uint64_t))(*(void *)result + 256LL))(result);
        }
      }
    }
  }

uint64_t sub_1000AE4B8(uint64_t result, uint64_t a2)
{
  if (result && (result & 7) == 0)
  {
    if (!a2 || !*(void *)(result + 152))
    {
      *(void *)(result + 152) = a2;
      return result;
    }

    __break(0x5518u);
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000AE4E0(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(void *)(result + 152);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000AE4F8(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
LABEL_7:
    __break(0x5516u);
    return result;
  }

  uint64_t result = *(void *)(result + 152);
  if (result)
  {
    if ((result & 7) == 0) {
      return sub_10001864C(result);
    }
    goto LABEL_7;
  }

  return result;
}

uint64_t sub_1000AE520(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_6;
  }

  uint64_t result = *(unsigned int *)(result + 180);
  if (result >= 4) {
LABEL_6:
  }
    __break(0x550Au);
  return result;
}

uint64_t sub_1000AE544(uint64_t result, uint64_t a2)
{
  if (result && (result & 7) == 0)
  {
    if (!a2 || (uint64_t v2 = *(void *)(result + 160)) == 0 || v2 == a2)
    {
      *(void *)(result + 160) = a2;
      return result;
    }

    __break(0x5518u);
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000AE574(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(void *)(result + 160);
  }
  __break(0x5516u);
  return result;
}

BOOL sub_1000AE58C(BOOL result, uint64_t a2)
{
  if (result && (result & 7) == 0)
  {
    if (!a2) {
      return 0LL;
    }
    if ((a2 & 7) == 0 && ((a2 + 84) & 3) == 0) {
      return *(_DWORD *)(result + 84) == *(_DWORD *)(a2 + 84);
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000AE5D0(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_100009E9C(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000AE5E4(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000B6568(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000AE5F8(uint64_t result)
{
  if (!result || (result & 7) != 0 || (((_BYTE)result + 32) & 7) != 0 || (((_BYTE)result + 16) & 7) != 0) {
    __break(0x5516u);
  }
  return result;
}

uint64_t sub_1000AE624(uint64_t result)
{
  if (!result
    || (result & 7) != 0
    || (((_BYTE)result + 0x80) & 7) != 0
    || (((_BYTE)result + 112) & 7) != 0
    || (((_BYTE)result + 96) & 7) != 0
    || (((_BYTE)result + 80) & 7) != 0
    || (((_BYTE)result + 64) & 7) != 0
    || (((_BYTE)result + 48) & 7) != 0
    || (((_BYTE)result + 32) & 7) != 0
    || (((_BYTE)result + 16) & 7) != 0)
  {
    __break(0x5516u);
  }

  return result;
}

uint64_t sub_1000AE698(uint64_t result)
{
  if (!result || (result & 7) != 0) {
    __break(0x5516u);
  }
  return result;
}

void *sub_1000AE6AC(void *result, uint64_t a2)
{
  if (!result) {
    goto LABEL_19;
  }
  uint64_t v2 = result;
  *uint64_t result = off_100106EF8;
  result[1] = a2;
  result += 2;
  sub_1000B1C70(result, a2, (uint64_t)v2);
  uint64_t result = v2 + 14;
  sub_1000B0F20(result, a2, (uint64_t)v2);
  uint64_t result = v2 + 26;
  sub_1000B18C0(result, a2, (uint64_t)v2);
  uint64_t result = v2 + 42;
  sub_1000B3158(result, a2, (uint64_t)v2);
  uint64_t result = v2 + 54;
  sub_1000B3608(result, a2, (uint64_t)v2);
  uint64_t result = v2 + 66;
  sub_1000B3950(result, a2, (uint64_t)v2);
  uint64_t result = v2 + 78;
  sub_1000B3C64(result, a2, (uint64_t)v2);
  uint64_t result = v2 + 90;
  sub_1000B41E0(result, a2, (uint64_t)v2);
  uint64_t result = v2 + 102;
  sub_1000B469C(result, a2, (uint64_t)v2);
  uint64_t result = v2 + 114;
  sub_1000B0400(result, a2, (uint64_t)v2);
  uint64_t result = v2 + 126;
  if (((unint64_t)(v2 + 126) & 7) != 0
    || (sub_1000B4AD8(result, a2, (uint64_t)v2), uint64_t result = v2 + 138, ((unint64_t)(v2 + 138) & 7) != 0)
    || (sub_1000B500C(result, a2, (uint64_t)v2), uint64_t result = v2 + 150, ((unint64_t)(v2 + 150) & 7) != 0)
    || (sub_1000B54B8(result, a2, (uint64_t)v2), uint64_t result = v2 + 162, ((unint64_t)(v2 + 162) & 7) != 0)
    || (uint64_t result = sub_1000B0C28(result, a2, (uint64_t)v2), (((_BYTE)v2 + 112) & 7) != 0))
  {
LABEL_19:
    __break(0x5516u);
  }

  else
  {
    v2[174] = off_100106F18;
    v2[175] = v2;
    v2[176] = a2;
    v2[177] = 0LL;
    return v2;
  }

  return result;
}

void *sub_1000AE860(void *result, uint64_t a2)
{
  return result;
}

uint64_t sub_1000AE874(uint64_t result)
{
  if (!result) {
    goto LABEL_19;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_19;
  }
  *(void *)uint64_t result = off_100106EF8;
  uint64_t result = sub_1000AE9A8(result, 0LL);
  if ((((_BYTE)v1 + 112) & 7) != 0) {
    goto LABEL_19;
  }
  uint64_t result = v1 + 1296;
  if (((v1 + 1296) & 7) != 0) {
    goto LABEL_19;
  }
  sub_1000B0570(result);
  uint64_t result = v1 + 1200;
  if (((v1 + 1200) & 7) != 0) {
    goto LABEL_19;
  }
  sub_1000B0570(result);
  uint64_t result = v1 + 1104;
  if (((v1 + 1104) & 7) != 0) {
    goto LABEL_19;
  }
  sub_1000B0570(result);
  uint64_t result = v1 + 1008;
  if (((v1 + 1008) & 7) != 0) {
    goto LABEL_19;
  }
  sub_1000B0570(result);
  uint64_t result = v1 + 912;
  if (((v1 + 912) & 7) != 0) {
    goto LABEL_19;
  }
  sub_1000B0570(result);
  uint64_t result = v1 + 816;
  if (((v1 + 816) & 7) != 0) {
    goto LABEL_19;
  }
  sub_1000B0570(result);
  uint64_t result = v1 + 720;
  if (((v1 + 720) & 7) != 0) {
    goto LABEL_19;
  }
  sub_1000B0570(result);
  uint64_t result = v1 + 624;
  if (((v1 + 624) & 7) != 0) {
    goto LABEL_19;
  }
  sub_1000B0570(result);
  uint64_t result = v1 + 528;
  if (((v1 + 528) & 7) != 0) {
    goto LABEL_19;
  }
  sub_1000B0570(result);
  uint64_t result = v1 + 432;
  if (((v1 + 432) & 7) != 0) {
    goto LABEL_19;
  }
  sub_1000B0570(result);
  uint64_t result = v1 + 336;
  if (((v1 + 336) & 7) != 0
    || (sub_1000B0570(result), uint64_t result = v1 + 208, ((v1 + 208) & 7) != 0)
    || (sub_1000B0570(result), uint64_t result = v1 + 112, ((v1 + 112) & 7) != 0)
    || (sub_1000B0570(result), uint64_t result = v1 + 16, ((v1 + 16) & 7) != 0))
  {
LABEL_19:
    __break(0x5516u);
  }

  else
  {
    sub_1000B0570(result);
    return v1;
  }

  return result;
}

uint64_t sub_1000AE9A8(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_26;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_26;
  }
  uint64_t result = sub_1000438B8();
  if (!result || (result & 7) != 0) {
    goto LABEL_26;
  }
  if ((*(unsigned int (**)(uint64_t))(*(void *)result + 176LL))(result))
  {
    uint64_t result = v2 + 16;
    if (((v2 + 16) & 7) != 0) {
      goto LABEL_26;
    }
    sub_1000AF040(result, a2);
  }

  uint64_t result = v2 + 112;
  if (((v2 + 112) & 7) != 0) {
    goto LABEL_26;
  }
  sub_1000AF208(result, a2);
  uint64_t result = v2 + 208;
  if (((v2 + 208) & 7) != 0) {
    goto LABEL_26;
  }
  sub_1000AF3F8(result, a2);
  uint64_t result = v2 + 336;
  if (((v2 + 336) & 7) != 0) {
    goto LABEL_26;
  }
  sub_1000AF51C(result, a2);
  uint64_t result = v2 + 432;
  if (((v2 + 432) & 7) != 0) {
    goto LABEL_26;
  }
  sub_1000AF51C(result, a2);
  uint64_t result = v2 + 528;
  if (((v2 + 528) & 7) != 0) {
    goto LABEL_26;
  }
  sub_1000AF51C(result, a2);
  uint64_t result = v2 + 624;
  if (((v2 + 624) & 7) != 0) {
    goto LABEL_26;
  }
  sub_1000AF51C(result, a2);
  uint64_t result = v2 + 720;
  if (((v2 + 720) & 7) != 0) {
    goto LABEL_26;
  }
  sub_1000AF51C(result, a2);
  uint64_t result = sub_1000438B8();
  if (!result || (result & 7) != 0) {
    goto LABEL_26;
  }
  if ((*(unsigned int (**)(uint64_t))(*(void *)result + 176LL))(result))
  {
    uint64_t result = v2 + 816;
    if (((v2 + 816) & 7) != 0) {
      goto LABEL_26;
    }
    sub_1000AF51C(result, a2);
  }

  uint64_t result = v2 + 912;
  if (((v2 + 912) & 7) == 0)
  {
    sub_1000AF51C(result, a2);
    uint64_t result = v2 + 1008;
    if (((v2 + 1008) & 7) == 0)
    {
      sub_1000AF51C(result, a2);
      uint64_t result = v2 + 1104;
      if (((v2 + 1104) & 7) == 0)
      {
        sub_1000AF51C(result, a2);
        uint64_t result = v2 + 1200;
        if (((v2 + 1200) & 7) == 0)
        {
          sub_1000AF51C(result, a2);
          uint64_t result = v2 + 1296;
          if (((v2 + 1296) & 7) == 0) {
            return sub_1000AF51C(result, a2);
          }
        }
      }
    }
  }

uint64_t sub_1000AEB2C(uint64_t result)
{
  if (!result || (result & 7) != 0) {
    __break(0x5516u);
  }
  return result;
}

uint64_t sub_1000AEB40(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000B0570(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000AEB54(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000B0570(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000AEB68(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000B0570(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000AEB7C(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000B0570(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000AEB90(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000B0570(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000AEBA4(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000B0570(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000AEBB8(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000B0570(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000AEBCC(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000B0570(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000AEBE0(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000B0570(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000AEBF4(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000B0570(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000AEC08(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000B0570(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000AEC1C(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000B0570(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000AEC30(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000B0570(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000AEC44(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000B0570(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000AEC58(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000AE874(result);
  }
  __break(0x5516u);
  return result;
}

void sub_1000AEC6C(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t v1 = (void *)sub_1000AE874(a1);
    operator delete(v1);
  }

uint64_t sub_1000AEC90(uint64_t result)
{
  if (!result) {
    goto LABEL_30;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_30;
  }
  uint64_t result = *(void *)(result + 8);
  if (!result || (result & 7) != 0) {
    goto LABEL_30;
  }
  uint64_t result = sub_10001864C(result);
  if (result)
  {
    if ((result & 7) != 0) {
      goto LABEL_30;
    }
    uint64_t result = *(void *)(result + 40);
  }

  else
  {
    uint64_t result = *(void *)(v1 + 8);
    if (!result || (result & 7) != 0) {
      goto LABEL_30;
    }
    uint64_t result = sub_1000569D8(result);
  }

  if ((((_BYTE)v1 + 112) & 7) == 0)
  {
    *(void *)(v1 + 1416) = result;
    uint64_t result = v1 + 16;
    if (((v1 + 16) & 7) == 0)
    {
      sub_1000AEDE8(result);
      uint64_t result = v1 + 112;
      if (((v1 + 112) & 7) == 0)
      {
        sub_1000B0644(result);
        uint64_t result = v1 + 208;
        if (((v1 + 208) & 7) == 0)
        {
          sub_1000AEE1C(result);
          uint64_t result = v1 + 336;
          if (((v1 + 336) & 7) == 0)
          {
            sub_1000AEE3C(result);
            uint64_t result = v1 + 432;
            if (((v1 + 432) & 7) == 0)
            {
              sub_1000AEE5C(result);
              uint64_t result = v1 + 528;
              if (((v1 + 528) & 7) == 0)
              {
                sub_1000AEE98(result);
                uint64_t result = v1 + 624;
                if (((v1 + 624) & 7) == 0)
                {
                  sub_1000B0644(result);
                  uint64_t result = v1 + 720;
                  if (((v1 + 720) & 7) == 0)
                  {
                    sub_1000B0644(result);
                    uint64_t result = v1 + 816;
                    if (((v1 + 816) & 7) == 0)
                    {
                      sub_1000AEEFC(result);
                      uint64_t result = v1 + 912;
                      if (((v1 + 912) & 7) == 0)
                      {
                        sub_1000AEF1C(result);
                        uint64_t result = v1 + 1008;
                        if (((v1 + 1008) & 7) == 0)
                        {
                          sub_1000B0644(result);
                          uint64_t result = v1 + 1104;
                          if (((v1 + 1104) & 7) == 0)
                          {
                            sub_1000B0644(result);
                            uint64_t result = v1 + 1200;
                            if (((v1 + 1200) & 7) == 0)
                            {
                              sub_1000B0644(result);
                              uint64_t result = v1 + 1296;
                              if (((v1 + 1296) & 7) == 0) {
                                return sub_1000AEFC4(result);
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }

uint64_t sub_1000AEDE8(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    if (*(void *)(result + 64)) {
      return sub_1000B0644(result);
    }
    __break(0x5518u);
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000AEE08(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000B0644(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000AEE1C(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    if (*(void *)(result + 64)) {
      return sub_1000B0644(result);
    }
    __break(0x5518u);
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000AEE3C(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    if (*(void *)(result + 64)) {
      return sub_1000B0644(result);
    }
    __break(0x5518u);
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000AEE5C(uint64_t result)
{
  if (result
    && (result & 7) == 0
    && ((v1 = *(void *)(result + 56)) != 0 ? (BOOL v2 = (*(void *)(result + 56) & 7LL) == 0) : (BOOL v2 = 0),
        v2 ? (BOOL v3 = (((_BYTE)v1 + 16) & 7) == 0LL) : (BOOL v3 = 0),
        v3))
  {
    *(_DWORD *)(v1 + 16) = 0;
    *(_BYTE *)(v1 + 9) = 0;
    return sub_1000B0644(result);
  }

  else
  {
    __break(0x5516u);
  }

  return result;
}

uint64_t sub_1000AEE98(uint64_t result)
{
  if (result
    && (result & 7) == 0
    && ((v1 = *(void *)(result + 56)) != 0 ? (BOOL v2 = (*(void *)(result + 56) & 7LL) == 0) : (BOOL v2 = 0),
        v2 ? (BOOL v3 = (((_BYTE)v1 + 16) & 7) == 0LL) : (BOOL v3 = 0),
        v3))
  {
    *(_DWORD *)(v1 + 16) = 0;
    *(_BYTE *)(v1 + 9) = 0;
    return sub_1000B0644(result);
  }

  else
  {
    __break(0x5516u);
  }

  return result;
}

uint64_t sub_1000AEED4(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000B0644(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000AEEE8(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000B0644(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000AEEFC(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    if (*(void *)(result + 64)) {
      return sub_1000B0644(result);
    }
    __break(0x5518u);
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000AEF1C(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    if ((result & 7) == 0)
    {
      if (*(void *)(result + 64))
      {
        uint64_t result = _AXSVoiceOverTouchEnabled();
        uint64_t v2 = *(void *)(v1 + 56);
        if (v2 && (v2 & 7) == 0 && (((_BYTE)v2 + 16) & 7) == 0)
        {
          *(_DWORD *)(v2 + 16) = result != 0;
          *(_BYTE *)(v2 + 9) = 0;
          return sub_1000B0644(v1);
        }
      }

      else
      {
        __break(0x5518u);
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000AEF88(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000B0644(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000AEF9C(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000B0644(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000AEFB0(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000B0644(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000AEFC4(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    if ((result & 7) == 0)
    {
      if (*(void *)(result + 64))
      {
        uint64_t result = _AXSAssistiveTouchHardwareEnabled();
        if ((_DWORD)result)
        {
          BOOL v2 = 1;
        }

        else
        {
          uint64_t result = _AXSAssistiveTouchEnabled();
          BOOL v2 = result != 0;
        }

        uint64_t v3 = *(void *)(v1 + 56);
        if (v3 && (v3 & 7) == 0 && (((_BYTE)v3 + 16) & 7) == 0)
        {
          *(_DWORD *)(v3 + 16) = v2;
          *(_BYTE *)(v3 + 9) = 0;
          return sub_1000B0644(v1);
        }
      }

      else
      {
        __break(0x5518u);
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000AF040(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_36;
  }
  BOOL v2 = (void *)result;
  if ((result & 7) != 0) {
    goto LABEL_36;
  }
  if ((a2 & 1) != 0)
  {
    sub_1000B2EA4(result);
    return sub_1000AF51C((uint64_t)v2, a2);
  }

  sub_1000B2B58(result, 0, 1LL);
  uint64_t result = sub_1000438B8();
  if (!result || (result & 7) != 0) {
    goto LABEL_36;
  }
  uint64_t result = v2[2];
  if (!result) {
    goto LABEL_36;
  }
  if ((result & 7) != 0) {
    goto LABEL_36;
  }
  uint64_t v4 = sub_10001864C(result);
  uint64_t result = v2[2];
  if (!result) {
    goto LABEL_36;
  }
  if ((result & 7) != 0) {
    goto LABEL_36;
  }
  uint64_t v5 = sub_1000569D8(result);
  uint64_t result = sub_10004783C();
  if (!result || (result & 7) != 0) {
    goto LABEL_36;
  }
  if (v4) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v5;
  }
  unsigned int v7 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 592LL))(result, v6);
  uint64_t v11 = 0LL;
  uint64_t result = sub_100061534((_DWORD *)&v11 + 1, (int *)&v11);
  if ((_DWORD)result) {
    return sub_1000AF51C((uint64_t)v2, a2);
  }
  if (HIDWORD(v11) > 3) {
    goto LABEL_37;
  }
  if (HIDWORD(v11) != 1) {
    return sub_1000AF51C((uint64_t)v2, a2);
  }
  if (!(_DWORD)v11) {
    return sub_1000AF51C((uint64_t)v2, a2);
  }
  uint64_t result = sub_100036FF0();
  if (!result)
  {
    __break(0x5518u);
LABEL_36:
    __break(0x5516u);
    goto LABEL_37;
  }

  uint64_t v8 = result;
  if ((result & 7) != 0) {
    goto LABEL_36;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 384LL))(result);
  uint64_t v10 = result;
  if (!result)
  {
LABEL_33:
    sub_100064D0C(&v10);
    return sub_1000AF51C((uint64_t)v2, a2);
  }

  uint64_t v9 = result;
  if ((result & 7) != 0) {
    goto LABEL_36;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v9 + 352LL))(v9);
  if ((result & 1) != 0) {
    goto LABEL_33;
  }
  if (v7 <= 3)
  {
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v8 + 312LL))(v8);
    }
    goto LABEL_33;
  }

void sub_1000AF208(uint64_t a1, char a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_41;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    goto LABEL_41;
  }
  if ((v4 & 7) != 0) {
    goto LABEL_41;
  }
  uint64_t v5 = sub_10001864C(v4);
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6 || (v6 & 7) != 0) {
    goto LABEL_41;
  }
  uint64_t v7 = sub_1000569D8(v6);
  if (!v5) {
    uint64_t v5 = v7;
  }
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_41;
  }
  if ((v8 & 7) != 0) {
    goto LABEL_41;
  }
  int v9 = sub_100057B7C(v8);
  uint64_t v10 = *(uint64_t **)(a1 + 56);
  int v11 = v9;
  uint64_t v12 = *v10;
  if (v12)
  {
    if ((v12 & 7) != 0 || ((v12 + 8) & 7) != 0) {
      goto LABEL_41;
    }
    if (!*(_BYTE *)(v12 + 8)) {
      goto LABEL_22;
    }
    BOOL v13 = (_DWORD *)(v12 + 12);
    if ((v13 & 3) != 0)
    {
LABEL_41:
      __break(0x5516u);
      goto LABEL_42;
    }

    if (*v13) {
      sub_1000CEAEC( 0,  4,  "%s:%d unexpected line out on saved !\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp",  1706);
    }
  }

void sub_1000AF3F8(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_21;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4
    || (v4 & 7) != 0
    || (uint64_t v5 = sub_10001864C(v4), (v6 = *(uint64_t **)(a1 + 56)) == 0LL)
    || (v6 & 7) != 0
    || (uint64_t v7 = *v6) == 0
    || (v7 & 7) != 0
    || ((v7 + 8) & 7) != 0)
  {
LABEL_21:
    __break(0x5516u);
    goto LABEL_22;
  }

  if (*(unsigned __int8 *)(v7 + 8) >= 2u)
  {
LABEL_22:
    __break(0x550Au);
    return;
  }

  uint64_t v8 = v5;
  if (*(_BYTE *)(v7 + 8))
  {
    int v9 = (_DWORD *)(v7 + 12);
    if ((v9 & 3) == 0)
    {
      if (*v9) {
        sub_1000CEAEC( 0,  4,  "%s:%d unexpected line in on saved !\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp",  2122);
      }
      goto LABEL_16;
    }

    goto LABEL_21;
  }

uint64_t sub_1000AF51C(uint64_t result, uint64_t a2)
{
  if (!result || (BOOL v2 = (_DWORD *)result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t v3 = *(void *)result;
    if (*(_DWORD *)(result + 88))
    {
      uint64_t v5 = 0LL;
      do
      {
        (*(void (**)(_DWORD *, uint64_t, uint64_t, void))(v3 + 24))(v2, v5, a2, 0LL);
        uint64_t v5 = (v5 + 1);
        uint64_t v3 = *(void *)v2;
      }

      while (v5 < v2[22]);
    }

    uint64_t result = (*(uint64_t (**)(_DWORD *))(v3 + 152))(v2);
    if ((_DWORD)result)
    {
      return (*(uint64_t (**)(_DWORD *))(*(void *)v2 + 184LL))(v2);
    }
  }

  return result;
}

uint64_t sub_1000AF5E4(uint64_t result, unsigned int a2)
{
  if (result && (result & 7) == 0)
  {
    if (a2 < 0x10)
    {
      switch(a2)
      {
        case 0u:
          result += 112LL;
          goto LABEL_19;
        case 1u:
          result += 208LL;
          goto LABEL_19;
        case 2u:
          result += 16LL;
          goto LABEL_19;
        case 3u:
          result += 336LL;
          goto LABEL_19;
        case 4u:
          result += 624LL;
          goto LABEL_19;
        case 5u:
          result += 432LL;
          goto LABEL_19;
        case 6u:
          result += 720LL;
          goto LABEL_19;
        case 7u:
          result += 816LL;
          goto LABEL_19;
        case 8u:
          result += 528LL;
          goto LABEL_19;
        case 9u:
          result += 912LL;
          goto LABEL_19;
        case 0xAu:
          result += 1008LL;
          goto LABEL_19;
        case 0xBu:
          result += 1104LL;
          goto LABEL_19;
        case 0xCu:
          result += 1200LL;
          goto LABEL_19;
        case 0xDu:
          result += 1296LL;
LABEL_19:
          if ((result & 7) == 0) {
            return result;
          }
          goto LABEL_23;
        default:
          return 0LL;
      }
    }

    __break(0x550Au);
  }

uint64_t sub_1000AF6A4(uint64_t result, unsigned int a2)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_8;
  }

  if (a2 >= 0x10)
  {
LABEL_8:
    __break(0x550Au);
    return result;
  }

  if (a2 > 0xD) {
    return 0LL;
  }
  else {
    return dword_1000DFFF8[a2];
  }
}

unsigned __int8 *sub_1000AF6E0(unsigned __int8 *result, int a2, uint64_t a3)
{
  if (result && (result & 7) == 0)
  {
    if (a2 != 0x4000 && a2 != 2048) {
      return 0LL;
    }
    switch(a3)
    {
      case 0LL:
        result += 112;
        break;
      case 1LL:
        result += 208;
        break;
      case 2LL:
        result += 16;
        break;
      case 3LL:
        result += 336;
        break;
      case 4LL:
        result += 624;
        break;
      case 5LL:
        result += 432;
        break;
      case 6LL:
        result += 720;
        break;
      case 7LL:
        result += 816;
        break;
      case 8LL:
        result += 528;
        break;
      case 9LL:
        result += 912;
        break;
      case 10LL:
        result += 1008;
        break;
      case 11LL:
        result += 1104;
        break;
      case 12LL:
        result += 1200;
        break;
      case 13LL:
        result += 1296;
        break;
      default:
        return 0LL;
    }

    if ((result & 7) == 0)
    {
      sub_1000AF7B0(result, 1);
      return 0LL;
    }
  }

  __break(0x5516u);
  return result;
}

void sub_1000AF7B0(unsigned __int8 *a1, int a2)
{
  if (!a1 || (uint64_t v3 = a1, (a1 & 7) != 0))
  {
LABEL_81:
    __break(0x5516u);
LABEL_82:
    __break(0x5513u);
LABEL_83:
    if (*((_DWORD *)v3 + 6) <= 0xFu)
    {
      syslog(3, "Unknown settings type(%d) for preference(%d) id(%d)\n", v2, *((_DWORD *)v3 + 6), v4);
      abort();
    }

    goto LABEL_85;
  }

  if (a1[36] >= 2u)
  {
LABEL_85:
    __break(0x550Au);
    return;
  }

  if ((a1[36] || a2)
    && (*(unsigned int (**)(unsigned __int8 *))(*(void *)a1 + 176LL))(a1)
    && (!(*(unsigned int (**)(void *))(*v3 + 48LL))(v3)
     || (*(unsigned int (**)(void *))(*v3 + 160LL))(v3)))
  {
    if (*((_DWORD *)v3 + 22))
    {
      uint64_t v4 = 0LL;
      do
      {
        uint64_t v6 = v3[7];
        if (__CFADD__(v6, 24 * v4)) {
          goto LABEL_82;
        }
        uint64_t v2 = v6 + 24 * v4;
        if (v6) {
          BOOL v7 = (v2 & 7) == 0;
        }
        else {
          BOOL v7 = 0;
        }
        if (!v7) {
          goto LABEL_81;
        }
        unsigned int v8 = *(unsigned __int8 *)(v2 + 8);
        if (v8 > 1) {
          goto LABEL_85;
        }
        if (*(_BYTE *)(v2 + 8)) {
          BOOL v9 = 0;
        }
        else {
          BOOL v9 = a2 == 0;
        }
        if (!v9)
        {
          if (*(_BYTE *)(v2 + 8)) {
            *(_BYTE *)(v2 + 9) = 1;
          }
          *(_BYTE *)(v2 + _Block_object_dispose((const void *)(v1 - 120), 8) = 0;
          uint64_t v2 = v3[10];
          if (__CFADD__(v2, 4 * v4)) {
            goto LABEL_82;
          }
          if (!v2) {
            goto LABEL_81;
          }
          v2 += 4 * v4;
          if ((v2 & 3) != 0) {
            goto LABEL_81;
          }
          LODWORD(v2) = *(_DWORD *)v2;
          uint64_t v10 = 24 * v4;
          if ((_DWORD)v2)
          {
            if ((_DWORD)v2 != 1) {
              goto LABEL_83;
            }
            int v11 = (*(uint64_t (**)(void *, uint64_t))(*v3 + 120LL))(v3, v4);
            uint64_t v2 = v3[7];
            if (__CFADD__(v2, v10)) {
              goto LABEL_82;
            }
            if (!v2) {
              goto LABEL_81;
            }
            uint64_t v12 = v2 + 24 * v4;
            if ((v12 & 7) != 0) {
              goto LABEL_81;
            }
            BOOL v13 = (_BYTE *)(v12 + 10);
            if ((((_DWORD)v12 + 10) & 1) != 0) {
              goto LABEL_81;
            }
            if (!*v13)
            {
              uint64_t v14 = v2 + 24 * v4 + 16;
              if ((v14 & 7) != 0) {
                goto LABEL_81;
              }
              *(_DWORD *)uint64_t v14 = v11;
              *BOOL v13 = 1;
            }

            v2 += 24 * v4 + 16;
            if ((v2 & 7) != 0) {
              goto LABEL_81;
            }
            if (*(_DWORD *)v2 != v11) {
              goto LABEL_43;
            }
            if (a2)
            {
              unsigned int v15 = *(unsigned __int8 *)(v12 + 9);
              if (v15 > 1) {
                goto LABEL_85;
              }
              if (v15) {
LABEL_43:
              }
                (*(void (**)(void *, uint64_t))(*v3 + 144LL))(v3, v4);
            }
          }

          else
          {
            int v16 = (*(uint64_t (**)(void *, uint64_t))(*v3 + 112LL))(v3, v4);
            uint64_t v17 = v3[7];
            if (__CFADD__(v17, v10)) {
              goto LABEL_82;
            }
            if (!v17) {
              goto LABEL_81;
            }
            uint64_t v2 = v17 + 24 * v4;
            if ((v2 & 7) != 0) {
              goto LABEL_81;
            }
            v2 += 10LL;
            if ((v2 & 1) != 0) {
              goto LABEL_81;
            }
            int v18 = v16;
            if (!*(_BYTE *)v2)
            {
              uint64_t v19 = v17 + 24 * v4 + 16;
              if ((v19 & 7) != 0) {
                goto LABEL_81;
              }
              *(_DWORD *)uint64_t v19 = v16;
              *(_BYTE *)uint64_t v2 = 1;
            }

            unsigned __int8 v30 = 0;
            uint64_t v20 = (*(uint64_t (**)(void *, uint64_t, unsigned __int8 *, uint64_t))(*v3 + 104LL))( v3,  v4,  &v30,  1LL);
            if (v18 != (_DWORD)v20) {
              goto LABEL_59;
            }
            if (a2)
            {
              uint64_t v21 = v3[7];
              if (__CFADD__(v21, v10)) {
                goto LABEL_82;
              }
              if (!v21) {
                goto LABEL_81;
              }
              uint64_t v22 = v21 + 24 * v4;
              LODWORD(v2) = v22 & 7;
              if ((v22 & 7) != 0) {
                goto LABEL_81;
              }
              unsigned int v23 = *(unsigned __int8 *)(v22 + 9);
              if (v23 > 1) {
                goto LABEL_85;
              }
              if (v23) {
LABEL_59:
              }
                (*(void (**)(void *, uint64_t, uint64_t))(*v3 + 136LL))(v3, v4, v20);
            }

            unsigned int v24 = *((_DWORD *)v3 + 7);
            if (v24 > 3) {
              goto LABEL_85;
            }
            if (v8 && v24 == 1)
            {
              if (v30 > 1u) {
                goto LABEL_85;
              }
              char v25 = v30 ? 0 : v18;
              if ((v25 & 1) == 0)
              {
                unsigned int v26 = *((_DWORD *)v3 + 6);
                if (v26 > 0xF) {
                  goto LABEL_85;
                }
                unsigned int v27 = *((_DWORD *)v3 + 8);
                if (v27 > 3) {
                  goto LABEL_85;
                }
                if (v27 == 1)
                {
                  uint64_t v28 = v3[2];
                  if (!v28 || (v28 & 7) != 0) {
                    goto LABEL_81;
                  }
                  uint64_t v29 = sub_10001864C(v28);
                }

                else
                {
                  uint64_t v29 = 0LL;
                }

                block[0] = _NSConcreteStackBlock;
                block[1] = 0x40000000LL;
                block[2] = sub_1000B67FC;
                block[3] = &unk_100107D38;
                unsigned int v32 = v26;
                block[4] = v29;
                dispatch_async(&_dispatch_main_q, block);
              }
            }
          }
        }
      }

      while (++v4 < (unint64_t)*((unsigned int *)v3 + 22));
    }

    *((_BYTE *)v3 + 36) = 0;
  }

unint64_t sub_1000AFBA4(uint64_t a1, uint64_t a2, unsigned int a3)
{
  if (!a1
    || (a1 & 7) != 0
    || ((v4 = *(void *)(a1 + 8)) != 0 ? (BOOL v5 = (v4 & 7) == 0) : (BOOL v5 = 0),
        !v5 || (uint64_t v8 = sub_10001864C(v4), (v9 = *(void *)(a1 + 8)) == 0) || (v9 & 7) != 0))
  {
    __break(0x5516u);
    goto LABEL_23;
  }

  uint64_t v10 = sub_1000569D8(v9);
  uint64_t v11 = __chkstk_darwin(v10);
  memset(v13, 170, 9);
  if (v8) {
    uint64_t v11 = v8;
  }
  if ((a2 + 32) >= 0x40) {
LABEL_23:
  }
    __break(0x550Au);
  if ((_DWORD)a2 == 2)
  {
    unint64_t result = sub_1000A2AF8(v11, (uint64_t)v13, 9);
    if ((_DWORD)result) {
      return 0LL;
    }
  }

  else
  {
    if ((_DWORD)a2) {
      sub_1000D28BC(a2);
    }
    unint64_t result = sub_10007A9EC(v11, (uint64_t)v13, 9);
    if ((_DWORD)result) {
      return 0LL;
    }
  }

  if (v13 == (_BYTE *)-1LL)
  {
    __break(0x5500u);
    goto LABEL_26;
  }

  if (a3 >= 0x40)
  {
LABEL_26:
    __break(0x5514u);
    return result;
  }

  return (bswap64(*(unint64_t *)&v13[1]) >> a3) & 1;
}

void sub_1000AFCE8(void *__p)
{
  else {
    operator delete(__p);
  }
}

pthread_mutex_t *sub_1000AFCFC(pthread_mutex_t *result)
{
  unint64_t v3 = 0xAAAAAAAAAAAAAAAALL;
  if (result && (result & 7) == 0)
  {
    unint64_t v3 = *(void *)&result->__opaque[32];
    pthread_mutex_lock(&stru_10011B828);
    unint64_t result = (pthread_mutex_t *)operator new(0x698uLL);
    if ((result & 0xF) == 0)
    {
      uint64_t v1 = result;
      if ((result & 7) == 0)
      {
        sub_1000B65C4(result);
        sub_1000AFDAC((uint64_t)&qword_10011C990, &v3);
        *uint64_t v2 = v1;
        return (pthread_mutex_t *)pthread_mutex_unlock(&stru_10011B828);
      }
    }
  }

  __break(0x5516u);
  return result;
}

void sub_1000AFDAC(uint64_t a1, unint64_t *a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_11;
  }
  uint64_t v8 = 0xAAAAAAAAAAAAAAAALL;
  uint64_t v4 = (uint64_t *)sub_10001B9EC(a1, &v8, a2);
  BOOL v5 = (void *)*v4;
  if (*v4)
  {
  }

  else
  {
    uint64_t v6 = v4;
    memset(v7, 170, sizeof(v7));
    sub_1000B6844((void *)a1, a2, (uint64_t)v7);
    sub_100008FEC(a1, v8, v6, (void *)v7[0]);
    BOOL v5 = v7[0];
    v7[0] = 0LL;
    sub_100009500(v7, 0LL);
    if (!v5) {
      goto LABEL_11;
    }
  }

  if ((v5 & 7) != 0 || (((_BYTE)v5 + 32) & 7) != 0) {
LABEL_11:
  }
    __break(0x5516u);
}

uint64_t *sub_1000AFE8C(uint64_t *result)
{
  if (!result) {
    goto LABEL_13;
  }
  uint64_t v1 = result;
  unint64_t result = (uint64_t *)(*(uint64_t (**)(uint64_t *))(*result + 280))(result);
  uint64_t v4 = v1[5];
  pthread_mutex_lock(&stru_10011B828);
  unint64_t v3 = (uint64_t *)sub_10001BBF8((uint64_t)&qword_10011C990, &v4);
  if (v3 != &qword_10011C998)
  {
    unint64_t result = sub_100003154((uint64_t *)&v3);
    uint64_t v2 = result[1];
    unint64_t result = sub_1000095C0(&qword_10011C990, (uint64_t)v3);
    if (v2)
    {
      if ((v2 & 7) == 0)
      {
        (*(void (**)(uint64_t))(*(void *)v2 + 8LL))(v2);
        return (uint64_t *)pthread_mutex_unlock(&stru_10011B828);
      }

uint64_t *sub_1000AFF68(uint64_t *result, unsigned int a2)
{
  unint64_t v8 = 0xAAAAAAAAAAAAAAAALL;
  uint64_t v2 = result[3];
  if (!v2 || (result[3] & 7) != 0) {
    goto LABEL_18;
  }
  unint64_t v8 = *(void *)(v2 + 40);
  if (a2 >= 0x10)
  {
LABEL_19:
    __break(0x550Au);
    goto LABEL_20;
  }

  if (a2 >= 0xE)
  {
    __break(0x5518u);
LABEL_18:
    __break(0x5516u);
    goto LABEL_19;
  }

  pthread_mutex_lock(&stru_10011B828);
  uint64_t v7 = sub_10001BBF8((uint64_t)&qword_10011C990, &v8);
  unint64_t result = sub_100003154(&v7);
  if (!result) {
    goto LABEL_18;
  }
  uint64_t v5 = result[1];
  if (!v5 || (v5 & 7) != 0) {
    goto LABEL_18;
  }
  if (!__CFADD__(v5 + 8, 96LL * a2))
  {
    uint64_t v6 = v5 + 96LL * a2 + 8;
    pthread_mutex_unlock(&stru_10011B828);
    return (uint64_t *)v6;
  }

void *sub_1000B0060(void *result, unsigned int a2)
{
  unint64_t v10 = 0xAAAAAAAAAAAAAAAALL;
  uint64_t v2 = result[3];
  if (!v2 || (result[3] & 7LL) != 0) {
    goto LABEL_22;
  }
  unint64_t v10 = *(void *)(v2 + 40);
  if (a2 >= 0x10)
  {
LABEL_23:
    __break(0x550Au);
    goto LABEL_24;
  }

  if (a2 >= 0xE)
  {
    __break(0x5518u);
    goto LABEL_22;
  }

  pthread_mutex_lock(&stru_10011B828);
  uint64_t v9 = sub_10001BBF8((uint64_t)&qword_10011C990, &v10);
  unint64_t result = sub_100003154(&v9);
  if (!result) {
    goto LABEL_22;
  }
  uint64_t v5 = result[1];
  if (!v5 || (v5 & 7) != 0) {
    goto LABEL_22;
  }
  uint64_t v6 = v5 + 1352;
  if (!__CFADD__(v6, 8LL * a2))
  {
    uint64_t v7 = (void *)(v6 + 8LL * a2);
    if ((v7 & 7) == 0)
    {
      unint64_t v8 = (void *)*v7;
      if (*v7)
      {
LABEL_20:
        pthread_mutex_unlock(&stru_10011B828);
        return v8;
      }

      unint64_t result = operator new(0x18uLL);
      if ((result & 0xF) == 0)
      {
        unint64_t v8 = result;
        *uint64_t v7 = sub_100010C30(result);
        goto LABEL_20;
      }
    }

pthread_mutex_t *sub_1000B0170(pthread_mutex_t *result, unsigned int a2)
{
  unint64_t v10 = 0xAAAAAAAAAAAAAAAALL;
  uint64_t v2 = *(void *)&result->__opaque[16];
  if (!v2 || (*(void *)&result->__opaque[16] & 7LL) != 0) {
    goto LABEL_21;
  }
  unint64_t v10 = *(void *)(v2 + 40);
  if (a2 >= 0x10)
  {
LABEL_22:
    __break(0x550Au);
    goto LABEL_23;
  }

  if (a2 >= 0xE)
  {
    __break(0x5518u);
LABEL_21:
    __break(0x5516u);
    goto LABEL_22;
  }

  pthread_mutex_lock(&stru_10011B828);
  uint64_t v9 = sub_10001BBF8((uint64_t)&qword_10011C990, &v10);
  unint64_t result = (pthread_mutex_t *)sub_100003154(&v9);
  if (!result) {
    goto LABEL_21;
  }
  uint64_t v5 = *(void *)result->__opaque;
  if (!v5 || (v5 & 7) != 0) {
    goto LABEL_21;
  }
  uint64_t v6 = v5 + 1464;
  if (__CFADD__(v6, 8LL * a2))
  {
LABEL_23:
    __break(0x5513u);
    return result;
  }

  uint64_t v7 = (pthread_mutex_t **)(v6 + 8LL * a2);
  unint64_t v8 = *v7;
  if (!*v7)
  {
    unint64_t v8 = (pthread_mutex_t *)malloc(0x40uLL);
    pthread_mutex_init(v8, 0LL);
    *uint64_t v7 = v8;
  }

  pthread_mutex_unlock(&stru_10011B828);
  return v8;
}

uint64_t sub_1000B027C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (!result) {
    goto LABEL_29;
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_29;
  }
  unint64_t v16 = 0xAAAAAAAAAAAAAAAALL;
  uint64_t v4 = *(void *)(result + 24);
  if (!v4 || (*(void *)(result + 24) & 7LL) != 0) {
    goto LABEL_29;
  }
  unint64_t v16 = *(void *)(v4 + 40);
  if (a2 < 0x10)
  {
    if (a2 >= 0xE)
    {
      __break(0x5518u);
    }

    else
    {
      pthread_mutex_lock(&stru_10011B828);
      uint64_t v15 = sub_10001BBF8((uint64_t)&qword_10011C990, &v16);
      unint64_t result = (uint64_t)sub_100003154(&v15);
      if (result)
      {
        if ((result & 7) == 0 && ((result + 8) & 7) == 0)
        {
          uint64_t v8 = *(void *)(result + 8);
          if (v8)
          {
            if ((v8 & 7) == 0)
            {
              uint64_t v9 = v8 + 1576;
              if (__CFADD__(v9, 8LL * a2))
              {
LABEL_30:
                __break(0x5513u);
                goto LABEL_31;
              }

              unint64_t v10 = (uint64_t *)(v9 + 8LL * a2);
              if ((v10 & 7) == 0)
              {
                uint64_t v11 = *v10;
                if (*v10) {
                  goto LABEL_26;
                }
                unint64_t result = *(void *)(v3 + 8);
                if (result)
                {
                  if ((result & 7) == 0)
                  {
                    uint64_t v12 = sub_1000AF6A4(result, a2);
                    unint64_t result = (uint64_t)operator new[](16 * v12 + 16);
                    *(void *)unint64_t result = 16LL;
                    *(void *)(result + _Block_object_dispose((const void *)(v1 - 120), 8) = v12;
                    uint64_t v11 = result + 16;
                    if (((result + 16) & 0xF) == 0)
                    {
                      if ((_DWORD)v12)
                      {
                        uint64_t v13 = result + 16;
                        while ((result & 7) == 0)
                        {
                          *(void *)uint64_t v13 = off_100107CE8;
                          *(_BYTE *)(v13 + _Block_object_dispose((const void *)(v1 - 120), 8) = 0;
                          v13 += 16LL;
                          if (v13 == v11 + 16 * v12) {
                            goto LABEL_25;
                          }
                        }

                        goto LABEL_29;
                      }

void *sub_1000B0400(void *result, uint64_t a2, uint64_t a3)
{
  if (!result) {
    goto LABEL_7;
  }
  unint64_t result = sub_1000B04A8(result, a3, a2, 9u, 0, 2u, 0LL, 0LL, (uint64_t)&stru_10011CD08, (uint64_t)&unk_10011D080, 1u);
  *unint64_t result = off_100106F38;
  *((_BYTE *)result + 92) = 0;
  uint64_t v3 = (void *)result[7];
  if (!v3
    || (v3 & 7) != 0
    || (*v3 = &qword_10011D018, uint64_t v4 = v3 + 1, byte_10011D020 = 0, dword_10011D024 = 0, (v4 & 7) != 0))
  {
LABEL_7:
    __break(0x5516u);
  }

  else
  {
    *uint64_t v4 = 0;
  }

  return result;
}

void *sub_1000B04A8( void *result, uint64_t a2, uint64_t a3, unsigned int a4, unsigned int a5, unsigned int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned int a11)
{
  if (!result) {
    goto LABEL_16;
  }
  uint64_t v11 = result;
  *unint64_t result = off_100107A98;
  result[1] = a2;
  result[2] = a3;
  if (a4 >= 0x10) {
    goto LABEL_15;
  }
  *((_DWORD *)result + 6) = a4;
  if (a5 > 3) {
    goto LABEL_15;
  }
  *((_DWORD *)result + 7) = a5;
  if (a6 > 3) {
    goto LABEL_15;
  }
  *((_DWORD *)result + _Block_object_dispose((const void *)(v1 - 120), 8) = a6;
  result[5] = a7;
  result[6] = a8;
  result[8] = a9;
  *((_BYTE *)result + 72) = 0;
  result[10] = a10;
  *((_DWORD *)result + 22) = a11;
  if (!a3 || a4 > 0xD || a5 > 2 || a6 == 3 || !a10 || !a11)
  {
    __break(0x5518u);
LABEL_15:
    __break(0x550Au);
    goto LABEL_16;
  }

  unint64_t result = operator new[](24LL * a11);
  if ((result & 0xF) == 0)
  {
    v11[7] = result;
    *((_WORD *)v11 + 1_Block_object_dispose((const void *)(v1 - 120), 8) = 0;
    return v11;
  }

uint64_t sub_1000B0570(uint64_t result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
LABEL_14:
    __break(0x5516u);
    goto LABEL_15;
  }

  *(void *)unint64_t result = off_100107A98;
  unsigned int v2 = *(_DWORD *)(result + 28);
  if (v2 >= 4)
  {
LABEL_15:
    __break(0x550Au);
    return result;
  }

  if (v2 == 1 && *(void *)(result + 40))
  {
    unint64_t result = *(void *)(result + 48);
    if (result)
    {
      pthread_mutex_lock((pthread_mutex_t *)result);
      unint64_t result = *(void *)(v1 + 40);
      if (result && (result & 7) == 0)
      {
        uint64_t v4 = v1;
        sub_10005B598((void *)result, &v4);
        pthread_mutex_unlock(*(pthread_mutex_t **)(v1 + 48));
        goto LABEL_10;
      }
    }

    else
    {
      __break(0x5518u);
    }

    goto LABEL_14;
  }

void sub_1000B0620(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t v1 = (void *)sub_1000B0570(a1);
    operator delete(v1);
  }

uint64_t sub_1000B0644(uint64_t result)
{
  if (!result) {
    goto LABEL_98;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_98;
  }
  if (!*(void *)(result + 64))
  {
    unsigned int v2 = *(_DWORD *)(result + 32);
    if (v2 >= 4) {
      goto LABEL_100;
    }
    if (v2 == 1)
    {
      uint64_t v3 = *(void *)(result + 8);
      if (!v3) {
        goto LABEL_95;
      }
      if ((v3 & 7) != 0) {
        goto LABEL_98;
      }
      unint64_t result = v3 + 1392;
      if (((v3 + 1392) & 7) != 0) {
        goto LABEL_98;
      }
      unsigned int v4 = *(_DWORD *)(v1 + 24);
      if (v4 >= 0x10) {
        goto LABEL_100;
      }
      unint64_t result = (uint64_t)sub_1000AFF68((uint64_t *)result, v4);
      uint64_t v5 = *(void *)(v1 + 8);
      if (!v5) {
        goto LABEL_98;
      }
      if ((v5 & 7) != 0) {
        goto LABEL_98;
      }
      unint64_t result = v5 + 1392;
      if (((v5 + 1392) & 7) != 0) {
        goto LABEL_98;
      }
      unsigned int v6 = *(_DWORD *)(v1 + 24);
      if (v6 > 0xF) {
        goto LABEL_100;
      }
      unint64_t result = (uint64_t)sub_1000AFF68((uint64_t *)result, v6);
      *(void *)(v1 + 64) = result;
    }
  }

  if (!*(void *)(v1 + 40))
  {
    unsigned int v7 = *(_DWORD *)(v1 + 28);
    if (v7 > 3) {
      goto LABEL_100;
    }
    if (v7 == 1)
    {
      unsigned int v8 = *(_DWORD *)(v1 + 32);
      if (v8 > 3) {
        goto LABEL_100;
      }
      if (v8 == 1)
      {
        uint64_t v9 = *(void *)(v1 + 8);
        if (!v9) {
          goto LABEL_96;
        }
        if ((v9 & 7) != 0) {
          goto LABEL_98;
        }
        unint64_t result = v9 + 1392;
        if (((v9 + 1392) & 7) != 0) {
          goto LABEL_98;
        }
        unsigned int v10 = *(_DWORD *)(v1 + 24);
        if (v10 > 0xF) {
          goto LABEL_100;
        }
        unint64_t result = (uint64_t)sub_1000B0060((void *)result, v10);
        if (!result) {
LABEL_96:
        }
          sub_1000D276C();
        uint64_t v11 = *(void *)(v1 + 8);
        if (!v11) {
          goto LABEL_98;
        }
        if ((v11 & 7) != 0) {
          goto LABEL_98;
        }
        unint64_t result = v11 + 1392;
        if (((v11 + 1392) & 7) != 0) {
          goto LABEL_98;
        }
        unsigned int v12 = *(_DWORD *)(v1 + 24);
        if (v12 > 0xF) {
          goto LABEL_100;
        }
        *(void *)(v1 + 40) = sub_1000B0060((void *)result, v12);
      }
    }
  }

  unint64_t result = *(void *)(v1 + 48);
  if (result)
  {
LABEL_46:
    if (*(void *)(v1 + 64)) {
      goto LABEL_104;
    }
    unsigned int v19 = *(_DWORD *)(v1 + 32);
    if (v19 > 3) {
      goto LABEL_100;
    }
    if (!v19)
    {
LABEL_104:
      if (*(_BYTE *)(v1 + 72)) {
        return result;
      }
      *(_BYTE *)(v1 + 72) = 1;
      unsigned int v20 = *(_DWORD *)(v1 + 28);
      if (v20 > 3) {
        goto LABEL_100;
      }
      if (v20 != 1) {
        goto LABEL_57;
      }
      if (result)
      {
        pthread_mutex_lock((pthread_mutex_t *)result);
        unint64_t result = *(void *)(v1 + 40);
        if (result)
        {
          if ((result & 7) == 0)
          {
            uint64_t v30 = v1;
            sub_100020DF4(result, &v30);
            unint64_t result = pthread_mutex_unlock(*(pthread_mutex_t **)(v1 + 48));
LABEL_57:
            if (!*(_DWORD *)(v1 + 88)) {
              return result;
            }
            uint64_t v21 = 0LL;
            for (uint64_t i = 16LL; ; i += 24LL)
            {
              uint64_t v23 = *(void *)(v1 + 56);
              unint64_t v24 = i - 16;
              unint64_t v25 = ~v23;
              if (v23) {
                BOOL v26 = (((_BYTE)i + (_BYTE)v23 - 16) & 7) == 0LL;
              }
              else {
                BOOL v26 = 0;
              }
              if (!v26) {
                goto LABEL_98;
              }
              if (!*(void *)(v23 + i - 16))
              {
                uint64_t v27 = *(void *)(v1 + 8);
                if (!v27) {
                  goto LABEL_98;
                }
                if ((v27 & 7) != 0) {
                  goto LABEL_98;
                }
                unint64_t result = v27 + 1392;
                if (((v27 + 1392) & 7) != 0) {
                  goto LABEL_98;
                }
                unsigned int v28 = *(_DWORD *)(v1 + 24);
                if (v28 > 0xF) {
                  goto LABEL_100;
                }
                unint64_t result = sub_1000B027C(result, v28, v21);
                uint64_t v23 = *(void *)(v1 + 56);
                unint64_t v25 = ~v23;
                if (v24 > ~v23) {
                  goto LABEL_99;
                }
                if (!v23 || (((_BYTE)i + (_BYTE)v23 - 16) & 7) != 0) {
                  goto LABEL_98;
                }
                *(void *)(v23 + i - 16) = result;
              }

              if (v24 > v25) {
                goto LABEL_99;
              }
              if ((((_BYTE)i + (_BYTE)v23 - 16) & 7) != 0) {
                goto LABEL_98;
              }
              *(_BYTE *)(v23 + i - 7) = 0;
              if ((((_DWORD)i + (_DWORD)v23 - 6) & 1) != 0) {
                goto LABEL_98;
              }
              *(_WORD *)(v23 + i - 6) = 0;
              unsigned int v29 = *(_DWORD *)(v1 + 24);
              if (v29 > 0xF) {
                goto LABEL_100;
              }
              if (v29 == 2)
              {
                unint64_t result = sub_1000438B8();
                if (!result || (result & 7) != 0) {
                  goto LABEL_98;
                }
                unint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 176LL))(result);
                uint64_t v23 = *(void *)(v1 + 56);
                if ((_DWORD)result && (v21 - 1) < 7)
                {
                  unint64_t v25 = ~v23;
                  if (v24 > ~v23) {
                    goto LABEL_99;
                  }
                  if (!v23 || (((_BYTE)i + (_BYTE)v23 - 16) & 7) != 0) {
                    goto LABEL_98;
                  }
                  *(_BYTE *)(v23 + i - 5) = 1;
                }

                else
                {
                  unint64_t v25 = ~v23;
                }
              }

              if (v24 > v25) {
                goto LABEL_99;
              }
              if (!v23 || (((_BYTE)i + (_BYTE)v23 - 16) & 7) != 0) {
                goto LABEL_98;
              }
              *(_DWORD *)(v23 + i) = 0;
              if (i == 0x17FFFFFFF8LL) {
                goto LABEL_101;
              }
            }

            goto LABEL_99;
          }

          goto LABEL_98;
        }
      }
    }

    __break(0x5518u);
LABEL_95:
    sub_1000D276C();
  }

  unsigned int v13 = *(_DWORD *)(v1 + 28);
  if (v13 > 3) {
    goto LABEL_100;
  }
  if (v13 != 1) {
    goto LABEL_45;
  }
  unsigned int v14 = *(_DWORD *)(v1 + 32);
  if (v14 > 3) {
    goto LABEL_100;
  }
  if (v14 != 1)
  {
LABEL_45:
    unint64_t result = 0LL;
    goto LABEL_46;
  }

  uint64_t v15 = *(void *)(v1 + 8);
  if (!v15) {
    goto LABEL_97;
  }
  if ((v15 & 7) != 0) {
    goto LABEL_98;
  }
  unint64_t result = v15 + 1392;
  if (((v15 + 1392) & 7) != 0) {
    goto LABEL_98;
  }
  unsigned int v16 = *(_DWORD *)(v1 + 24);
  if (v16 > 0xF) {
    goto LABEL_100;
  }
  unint64_t result = (uint64_t)sub_1000B0170((pthread_mutex_t *)result, v16);
  if (!result) {
LABEL_97:
  }
    sub_1000D276C();
  uint64_t v17 = *(void *)(v1 + 8);
  if (v17)
  {
    if ((v17 & 7) == 0)
    {
      unint64_t result = v17 + 1392;
      if (((v17 + 1392) & 7) == 0)
      {
        unsigned int v18 = *(_DWORD *)(v1 + 24);
        if (v18 > 0xF) {
          goto LABEL_100;
        }
        unint64_t result = (uint64_t)sub_1000B0170((pthread_mutex_t *)result, v18);
        *(void *)(v1 + 4_Block_object_dispose((const void *)(v1 - 120), 8) = result;
        goto LABEL_46;
      }
    }
  }

unint64_t sub_1000B0A4C(unint64_t result, int a2)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_8;
  }
  if (a2)
  {
    syslog(4, "Unknown id(%d)\n", a2);
    return 0LL;
  }

  unint64_t result = *(void *)(result + 8);
  if (result)
  {
    if ((result & 7) == 0) {
      return sub_1000AFBA4(result, 2LL, 0xAu);
    }
  }

uint64_t sub_1000B0AB4(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return (*(unsigned int (**)(uint64_t, void))(*(void *)result + 112LL))(result, 0LL) ^ 1;
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000B0AE8(uint64_t result, int a2, uint64_t a3)
{
  if (!result || (uint64_t v3 = result, (result & 7) != 0))
  {
LABEL_15:
    __break(0x5516u);
    goto LABEL_16;
  }

  if (a2)
  {
    uint64_t v5 = 4LL;
    syslog(4, "Unknown id(%d) value=%d\n", a2, a3);
    return v5;
  }

  if (*(unsigned __int8 *)(result + 92) < 2u)
  {
    if (*(_BYTE *)(result + 92))
    {
      unint64_t result = _AXSVoiceOverTouchEnabled();
      if ((_DWORD)result != (_DWORD)a3)
      {
        unint64_t result = _AXSVoiceOverTouchSetEnabledThroughAccessory(a3);
        if ((_DWORD)a3) {
          unint64_t result = _AXSVoiceOverTouchSetEnabled(a3);
        }
      }
    }

    uint64_t v6 = *(void *)(v3 + 56);
    if (v6)
    {
      if ((v6 & 7) == 0)
      {
        unsigned int v7 = (_DWORD *)(v6 + 16);
        if ((v7 & 7) == 0)
        {
          uint64_t v5 = 0LL;
          *unsigned int v7 = a3;
          return v5;
        }
      }
    }

    goto LABEL_15;
  }

BOOL sub_1000B0BA0(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
LABEL_6:
    sub_1000D28E0(a2);
  }

  if ((_DWORD)a2) {
    goto LABEL_6;
  }
  return _AXSVoiceOverTouchEnabled(a1) != 0;
}

uint64_t sub_1000B0BD8(uint64_t result, uint64_t a2, int a3)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t, BOOL))(*(void *)result + 136LL))(result, a2, a3 != 0);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000B0BFC(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 112LL))(result);
  }
  __break(0x5516u);
  return result;
}

void *sub_1000B0C28(void *result, uint64_t a2, uint64_t a3)
{
  if (!result) {
    goto LABEL_7;
  }
  unint64_t result = sub_1000B04A8(result, a3, a2, 0xDu, 0, 2u, 0LL, 0LL, (uint64_t)&stru_10011CE88, (uint64_t)&unk_10011D090, 1u);
  *unint64_t result = off_100107008;
  *((_BYTE *)result + 92) = 0;
  uint64_t v3 = (void *)result[7];
  if (!v3
    || (v3 & 7) != 0
    || (*v3 = &qword_10011D058, unsigned int v4 = v3 + 1, byte_10011D060 = 0, dword_10011D064 = 0, (v4 & 7) != 0))
  {
LABEL_7:
    __break(0x5516u);
  }

  else
  {
    *unsigned int v4 = 0;
  }

  return result;
}

void sub_1000B0CD0(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t v1 = (void *)sub_1000B0570(a1);
    operator delete(v1);
  }

unint64_t sub_1000B0CF4(unint64_t result, int a2)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_8;
  }
  if (a2)
  {
    syslog(4, "Unknown id(%d)\n", a2);
    return 0LL;
  }

  unint64_t result = *(void *)(result + 8);
  if (result)
  {
    if ((result & 7) == 0) {
      return sub_1000AFBA4(result, 2LL, 0xCu);
    }
  }

uint64_t sub_1000B0D5C(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return (*(unsigned int (**)(uint64_t, void))(*(void *)result + 112LL))(result, 0LL) ^ 1;
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000B0D90(uint64_t result, int a2, uint64_t a3)
{
  if (!result || (uint64_t v3 = result, (result & 7) != 0))
  {
LABEL_17:
    __break(0x5516u);
    goto LABEL_18;
  }

  if (a2)
  {
    uint64_t v5 = 4LL;
    syslog(4, "Unknown id(%d) value=%d\n", a2, a3);
    return v5;
  }

  if (*(unsigned __int8 *)(result + 92) < 2u)
  {
    if (*(_BYTE *)(result + 92))
    {
      unint64_t result = _AXSAssistiveTouchHardwareEnabled();
      if ((_DWORD)result)
      {
        int v6 = 1;
      }

      else
      {
        unint64_t result = _AXSAssistiveTouchEnabled();
        int v6 = result != 0;
      }

      if (v6 != (_DWORD)a3) {
        unint64_t result = _AXSAssistiveTouchSetHardwareEnabled(a3);
      }
    }

    uint64_t v7 = *(void *)(v3 + 56);
    if (v7)
    {
      if ((v7 & 7) == 0)
      {
        unsigned int v8 = (_DWORD *)(v7 + 16);
        if ((v8 & 7) == 0)
        {
          uint64_t v5 = 0LL;
          *unsigned int v8 = a3;
          return v5;
        }
      }
    }

    goto LABEL_17;
  }

BOOL sub_1000B0E54(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
LABEL_9:
    sub_1000D28E0(a2);
  }

  if ((_DWORD)a2) {
    goto LABEL_9;
  }
  return _AXSAssistiveTouchHardwareEnabled() || _AXSAssistiveTouchEnabled() != 0;
}

uint64_t sub_1000B0E9C(uint64_t result, uint64_t a2, int a3)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t, BOOL))(*(void *)result + 136LL))(result, a2, a3 != 0);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000B0EC0(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 112LL))(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000B0EEC(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    *(_BYTE *)(result + 92) = a4;
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t, void))(*(void *)result + 72LL))( result,  0LL,  a2,  a3,  0LL);
  }

  return result;
}

void *sub_1000B0F20(void *result, uint64_t a2, uint64_t a3)
{
  if (!result
    || (result & 7) != 0
    || (unint64_t result = sub_1000B04A8(result, a3, a2, 0, 1u, 1u, 0LL, 0LL, 0LL, (uint64_t)&unk_10011D068, 1u),
        *unint64_t result = off_1001070D8,
        (uint64_t v3 = (void *)result[7]) == 0LL)
    || (v3 & 7) != 0
    || (*v3 = 0LL, unsigned int v4 = v3 + 1, (v4 & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    *unsigned int v4 = 0;
  }

  return result;
}

void sub_1000B0FAC(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t v1 = (void *)sub_1000B0570(a1);
    operator delete(v1);
  }

uint64_t sub_1000B0FD0(uint64_t result, int a2)
{
  if (!result) {
    goto LABEL_24;
  }
  unsigned int v2 = (void *)result;
  if ((result & 7) != 0) {
    goto LABEL_24;
  }
  unint64_t result = *(void *)(result + 16);
  if (!result || (result & 7) != 0) {
    goto LABEL_24;
  }
  uint64_t v5 = sub_10001864C(result);
  unint64_t result = v2[2];
  if (!result || (result & 7) != 0) {
    goto LABEL_24;
  }
  uint64_t v6 = sub_1000569D8(result);
  if (a2)
  {
    sub_1000CEAEC( 0,  4,  "%s:%d Unknown id(%d)\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp",  1439,  a2);
    return 0LL;
  }

  if (v5) {
    uint64_t v6 = v5;
  }
  if (sub_100063E8C(v6))
  {
    unint64_t result = v2[1];
    if (!result || (result & 7) != 0) {
      goto LABEL_24;
    }
    if ((sub_1000AFBA4(result, 0LL, 0) & 1) != 0) {
      return 1LL;
    }
  }

  unint64_t result = sub_1000438B8();
  if (!result || (result & 7) != 0)
  {
LABEL_24:
    __break(0x5516u);
    return result;
  }

  unint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 160LL))(result);
  if ((_DWORD)result) {
    return (*(uint64_t (**)(void *))(*v2 + 152LL))(v2);
  }
  return result;
}

BOOL sub_1000B10E8(BOOL result)
{
  if (result && !(result & 7)) {
    return !sub_100087580(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000B1110(uint64_t result, uint64_t a2, int a3)
{
  if (result && (result & 7) == 0) {
    return sub_1000B1130(result, a3);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000B1130(uint64_t result, int a2)
{
  if (result
    && (uint64_t v2 = result, (result & 7) == 0)
    && ((result = *(void *)(result + 16)) != 0 ? (BOOL v3 = (result & 7) == 0) : (BOOL v3 = 0),
        v3 && (uint64_t v5 = sub_10001864C(result), (result = *(void *)(v2 + 16)) != 0) && (result & 7) == 0))
  {
    uint64_t v6 = sub_1000569D8(result);
    if (v5) {
      uint64_t v6 = v5;
    }
    if (v6 && sub_100063E8C(v6))
    {
      byte_10011D094 = 0;
      sub_1000B14EC(v2, a2, 0LL, 1);
      return 0LL;
    }

    else
    {
      return 2LL;
    }
  }

  else
  {
    __break(0x5516u);
  }

  return result;
}

uint64_t sub_1000B11D4(uint64_t result, uint64_t a2, int a3)
{
  if (result && (result & 7) == 0) {
    return sub_1000B1130(result, a3 == 1);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000B11F8(uint64_t result, int a2, uint64_t a3)
{
  if (result)
  {
    uint64_t v3 = result;
    if ((result & 7) == 0)
    {
      unint64_t result = *(void *)(result + 16);
      if (result && (result & 7) == 0)
      {
        uint64_t v7 = sub_10001864C(result);
        unint64_t result = *(void *)(v3 + 16);
        if (result)
        {
          if ((result & 7) == 0)
          {
            uint64_t v8 = sub_1000569D8(result);
            unint64_t result = sub_100042AC4();
            if (v7) {
              uint64_t v9 = v7;
            }
            else {
              uint64_t v9 = v8;
            }
            if (a2)
            {
              int v11 = a3;
              uint64_t v10 = 4LL;
              sub_1000CEAEC( 0,  4,  "%s:%d Unknown id(%d) value=%d\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp",  1532,  a2,  v11);
              return v10;
            }

            if (result && (result & 7) == 0)
            {
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)result + 176LL))(result, v9, a3);
              return 0LL;
            }
          }
        }
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000B12D8(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_17;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4 || (v4 & 7) != 0) {
    goto LABEL_17;
  }
  uint64_t v2 = a2;
  uint64_t v6 = sub_10001864C(v4);
  uint64_t v7 = *(void *)(a1 + 16);
  if (!v7 || (v7 & 7) != 0) {
    goto LABEL_17;
  }
  uint64_t v8 = sub_1000569D8(v7);
  uint64_t v9 = sub_100042AC4();
  if ((_DWORD)v2) {
    goto LABEL_18;
  }
  if (!v9 || (v9 & 7) != 0)
  {
LABEL_17:
    __break(0x5516u);
LABEL_18:
    sub_1000D28E0(v2);
  }

  if (v6) {
    uint64_t v10 = v6;
  }
  else {
    uint64_t v10 = v8;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v9 + 184LL))(v9, v10);
}

uint64_t sub_1000B1370(uint64_t result, int a2, int a3)
{
  if (result)
  {
    uint64_t v3 = result;
    if ((result & 7) == 0)
    {
      unint64_t result = *(void *)(result + 16);
      if (result && (result & 7) == 0)
      {
        uint64_t v7 = sub_10001864C(result);
        unint64_t result = *(void *)(v3 + 16);
        if (result)
        {
          if ((result & 7) == 0)
          {
            uint64_t v8 = sub_1000569D8(result);
            unint64_t result = sub_100042AC4();
            if (v7) {
              uint64_t v9 = v7;
            }
            else {
              uint64_t v9 = v8;
            }
            if (a2)
            {
              int v11 = a3;
              uint64_t v10 = 4LL;
              sub_1000CEAEC( 0,  4,  "%s:%d Unknown or invalid id(%d) value=%d\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp",  1599,  a2,  v11);
              return v10;
            }

            if (result && (result & 7) == 0)
            {
              (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)result + 176LL))(result, v9, a3 == 1);
              return 0LL;
            }
          }
        }
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000B1450(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_17;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4 || (v4 & 7) != 0) {
    goto LABEL_17;
  }
  uint64_t v2 = a2;
  uint64_t v6 = sub_10001864C(v4);
  uint64_t v7 = *(void *)(a1 + 16);
  if (!v7 || (v7 & 7) != 0) {
    goto LABEL_17;
  }
  uint64_t v8 = sub_1000569D8(v7);
  uint64_t v9 = sub_100042AC4();
  if ((_DWORD)v2) {
    goto LABEL_18;
  }
  if (!v9 || (v9 & 7) != 0)
  {
LABEL_17:
    __break(0x5516u);
LABEL_18:
    sub_1000D28E0(v2);
  }

  if (v6) {
    uint64_t v10 = v6;
  }
  else {
    uint64_t v10 = v8;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v9 + 184LL))(v9, v10);
}

uint64_t sub_1000B14EC(uint64_t result, int a2, uint64_t a3, char a4)
{
  if (!result) {
    goto LABEL_27;
  }
  uint64_t v4 = result;
  if ((result & 7) != 0) {
    goto LABEL_27;
  }
  unint64_t result = *(void *)(result + 16);
  if (!result || (result & 7) != 0) {
    goto LABEL_27;
  }
  uint64_t v8 = sub_10001864C(result);
  unint64_t result = *(void *)(v4 + 16);
  if (!result) {
    goto LABEL_27;
  }
  if ((result & 7) != 0) {
    goto LABEL_27;
  }
  unint64_t result = sub_100056CF8(result);
  if ((result & 7) != 0) {
    goto LABEL_27;
  }
  uint64_t v9 = result;
  unint64_t result = *(void *)(v4 + 16);
  if (!result || (result & 7) != 0) {
    goto LABEL_27;
  }
  uint64_t v10 = sub_1000569D8(result);
  if (v9) {
    uint64_t v11 = v9;
  }
  else {
    uint64_t v11 = v10;
  }
  if (!v8) {
    uint64_t v8 = v11;
  }
  if ((a4 & 1) == 0)
  {
    unint64_t result = sub_100063E8C(v8);
    if (!(_DWORD)result) {
      return result;
    }
  }

  unint64_t result = sub_1000B16D8(v4, 0LL, a2, 0, 0);
  if (!v8) {
    return result;
  }
  if ((v8 & 7) != 0)
  {
LABEL_27:
    __break(0x5516u);
    return result;
  }

  unint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v8 + 216LL))(v8);
  if ((_DWORD)result == 3)
  {
    if (result && (result & 7) == 0) {
      return sub_1000ADF8C(result, a2);
    }
    goto LABEL_27;
  }

  return result;
}

uint64_t sub_1000B161C(uint64_t result, uint64_t a2, char a3)
{
  if (!result || (uint64_t v3 = result, (result & 7) != 0))
  {
    __break(0x5516u);
    goto LABEL_12;
  }

  if (byte_10011D094 >= 2u)
  {
LABEL_12:
    __break(0x550Au);
    return result;
  }

  if (!byte_10011D094)
  {
    if ((a3 & 1) != 0 || (unint64_t result = sub_100063E8C(a2), (_DWORD)result))
    {
      (*(void (**)(uint64_t, void, void))(*(void *)v3 + 136LL))(v3, 0LL, 0LL);
      unint64_t result = sub_1000B16D8(v3, 0LL, 0, 0, 0);
      byte_10011D094 = 1;
    }
  }

  return result;
}

uint64_t sub_1000B16D8(uint64_t result, uint64_t a2, int a3, int a4, char a5)
{
  if (!result) {
    goto LABEL_38;
  }
  uint64_t v5 = result;
  if ((result & 7) != 0) {
    goto LABEL_38;
  }
  unsigned int v6 = *(_DWORD *)(result + 24);
  if (v6 >= 0x10) {
    goto LABEL_39;
  }
  if (v6 != 2)
  {
    unint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 128LL))(result, a2);
    if (!(_DWORD)result) {
      return 4LL;
    }
  }

  uint64_t v11 = *(void *)(v5 + 80);
  if (!v11) {
    goto LABEL_38;
  }
  unsigned int v12 = (int *)(v11 + 4LL * a2);
  int v13 = *v12;
  if (v13)
  {
    __break(0x5518u);
    goto LABEL_38;
  }

  uint64_t v14 = *(void *)(v5 + 56);
  if (!v14
    || (uint64_t v15 = v14 + 24LL * a2, (v15 & 7) != 0)
    || (uint64_t v16 = v14 + 24LL * a2 + 16, (v16 & 7) != 0)
    || (*(_DWORD *)uint64_t v16 = a3, (((_BYTE)v15 + 8) & 7) != 0)
    || (*(_BYTE *)(v15 + 8) = 1, *(_BYTE *)(v5 + 36) = 1, uint64_t v17 = (_BYTE *)(v15 + 10), (((_DWORD)v15 + 10) & 1) != 0))
  {
LABEL_38:
    __break(0x5516u);
    goto LABEL_39;
  }

  if (*v17 > 1u)
  {
LABEL_39:
    __break(0x550Au);
    goto LABEL_40;
  }

  if (*v17)
  {
    if (!a4) {
      goto LABEL_35;
    }
  }

  else
  {
    *uint64_t v17 = 1;
    if (!a4)
    {
LABEL_35:
      (*(void (**)(uint64_t, void))(*(void *)v5 + 40LL))(v5, 0LL);
      return 0LL;
    }
  }

  if ((a5 & 1) != 0) {
    goto LABEL_35;
  }
  uint64_t v18 = *(void *)v15;
  if (!v18) {
    goto LABEL_35;
  }
  if ((v18 & 7) != 0) {
    goto LABEL_38;
  }
  unsigned int v19 = (_BYTE *)(v18 + 8);
  if (*v19) {
    goto LABEL_35;
  }
  _BYTE *v19 = 1;
  unint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v5 + 120LL))(v5, a2);
  uint64_t v20 = *(void *)(v5 + 56);
  if (!__CFADD__(v20, 24LL * a2))
  {
    if (v20)
    {
      uint64_t v21 = (uint64_t *)(v20 + 24LL * a2);
      if ((v21 & 7) == 0)
      {
        uint64_t v22 = *v21;
        if (v22)
        {
          if ((v22 & 7) == 0)
          {
            uint64_t v23 = (_DWORD *)(v22 + 12);
            if ((v23 & 3) == 0)
            {
              *uint64_t v23 = result;
              goto LABEL_35;
            }
          }
        }
      }
    }

    goto LABEL_38;
  }

void *sub_1000B18C0(void *result, uint64_t a2, uint64_t a3)
{
  if (!result
    || (result & 7) != 0
    || (result = sub_1000B04A8( result,  a3,  a2,  1u,  2u,  2u,  0LL,  0LL,  (uint64_t)&stru_10011CA68,  (uint64_t)&unk_10011B868,  1u),  *result = off_1001071A8,  (uint64_t v3 = (void *)result[7]) == 0LL)
    || (v3 & 7) != 0
    || (*v3 = &qword_10011CFA8, uint64_t v4 = v3 + 1, (v4 & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    *uint64_t v4 = 0;
    *((_DWORD *)result + 30) = 0;
  }

  return result;
}

void sub_1000B1960(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t v1 = (void *)sub_1000B0570(a1);
    operator delete(v1);
  }

uint64_t sub_1000B1984(uint64_t result, int a2)
{
  if (result
    && (uint64_t v2 = result, (result & 7) == 0)
    && ((result = *(void *)(result + 16)) != 0 ? (BOOL v3 = (result & 7) == 0) : (BOOL v3 = 0),
        v3 && (uint64_t v5 = sub_10001864C(result), (result = *(void *)(v2 + 16)) != 0) && (result & 7) == 0))
  {
    uint64_t v6 = sub_1000569D8(result);
    if (a2)
    {
      sub_1000CEAEC( 0,  4,  "%s:%d Unknown id(%d)\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp",  1901,  a2);
      return 0LL;
    }

    else
    {
      if (v5) {
        uint64_t v6 = v5;
      }
      return sub_100063F38(v6);
    }
  }

  else
  {
    __break(0x5516u);
  }

  return result;
}

BOOL sub_1000B1A40(BOOL result)
{
  if (result && !(result & 7)) {
    return sub_1000875C0(result) == 0;
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000B1A6C(uint64_t result, int a2, int a3)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    sub_1000CEAEC( 0,  4,  "%s:%d Unknown id(%d) value=%d\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp",  1944,  a2,  a3);
    return 4LL;
  }

  return result;
}

void sub_1000B1AC4(uint64_t a1, int a2)
{
  if (a1 && (a1 & 7) == 0)
  {
    syslog(3, "Unknown or invalid id(%d)\n", a2);
    abort();
  }

  __break(0x5516u);
}

uint64_t sub_1000B1AFC(uint64_t result, int a2, uint64_t a3)
{
  if (result)
  {
    uint64_t v3 = result;
    if ((result & 7) == 0)
    {
      unint64_t result = *(void *)(result + 16);
      if (result && (result & 7) == 0)
      {
        uint64_t v7 = sub_10001864C(result);
        unint64_t result = *(void *)(v3 + 16);
        if (result)
        {
          if ((result & 7) == 0)
          {
            uint64_t v8 = sub_1000569D8(result);
            if (v7) {
              uint64_t v9 = v7;
            }
            else {
              uint64_t v9 = v8;
            }
            unint64_t result = sub_10004783C();
            if (a2)
            {
              int v11 = a3;
              uint64_t v10 = 4LL;
              sub_1000CEAEC( 0,  4,  "%s:%d Unknown or invalid id(%d) value=%d\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp",  2004,  a2,  v11);
              return v10;
            }

            if (result && (result & 7) == 0)
            {
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)result + 288LL))(result, v9, a3);
              return 0LL;
            }
          }
        }
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000B1BD8(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_17;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4 || (v4 & 7) != 0) {
    goto LABEL_17;
  }
  uint64_t v2 = a2;
  uint64_t v6 = sub_10001864C(v4);
  uint64_t v7 = *(void *)(a1 + 16);
  if (!v7 || (v7 & 7) != 0) {
    goto LABEL_17;
  }
  uint64_t v8 = sub_1000569D8(v7);
  uint64_t v9 = sub_10004783C();
  if ((_DWORD)v2) {
    goto LABEL_18;
  }
  if (!v9 || (v9 & 7) != 0)
  {
LABEL_17:
    __break(0x5516u);
LABEL_18:
    sub_1000D28E0(v2);
  }

  if (v6) {
    uint64_t v10 = v6;
  }
  else {
    uint64_t v10 = v8;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v9 + 296LL))(v9, v10);
}

void *sub_1000B1C70(void *result, uint64_t a2, uint64_t a3)
{
  unint64_t result = sub_1000B04A8(result, a3, a2, 2u, 2u, 2u, 0LL, 0LL, (uint64_t)&stru_10011CA08, (uint64_t)&unk_10011B86C, 0xAu);
  *unint64_t result = off_100107278;
  unint64_t v3 = result[7];
  if (v3 >= 0xFFFFFFFFFFFFFFE8LL) {
    goto LABEL_34;
  }
  if (((v3 + 24) & 7) != 0) {
    goto LABEL_33;
  }
  *(void *)(v3 + 24) = &qword_10011CF48;
  if ((((_BYTE)v3 + 32) & 7) != 0) {
    goto LABEL_33;
  }
  *(_BYTE *)(v3 + 32) = 0;
  if (v3 > 0xFFFFFFFFFFFFFFCFLL) {
    goto LABEL_34;
  }
  if (((v3 + 48) & 7) != 0) {
    goto LABEL_33;
  }
  *(void *)(v3 + 4_Block_object_dispose((const void *)(v1 - 120), 8) = &qword_10011CF58;
  if ((((_BYTE)v3 + 56) & 7) != 0) {
    goto LABEL_33;
  }
  *(_BYTE *)(v3 + 56) = 0;
  if (v3 > 0xFFFFFFFFFFFFFFB7LL) {
    goto LABEL_34;
  }
  if (((v3 + 72) & 7) != 0) {
    goto LABEL_33;
  }
  *(void *)(v3 + 72) = &qword_10011CF68;
  if ((((_BYTE)v3 + 80) & 7) != 0) {
    goto LABEL_33;
  }
  *(_BYTE *)(v3 + 80) = 0;
  if (v3 > 0xFFFFFFFFFFFFFF9FLL) {
    goto LABEL_34;
  }
  if (((v3 + 96) & 7) != 0) {
    goto LABEL_33;
  }
  *(void *)(v3 + 96) = 0LL;
  if ((((_BYTE)v3 + 104) & 7) != 0) {
    goto LABEL_33;
  }
  *(_BYTE *)(v3 + 104) = 0;
  if (v3 > 0xFFFFFFFFFFFFFF87LL) {
    goto LABEL_34;
  }
  if (((v3 + 120) & 7) != 0) {
    goto LABEL_33;
  }
  *(void *)(v3 + 120) = &qword_10011CF78;
  if ((((_BYTE)v3 + 0x80) & 7) != 0) {
    goto LABEL_33;
  }
  *(_BYTE *)(v3 + 12_Block_object_dispose((const void *)(v1 - 120), 8) = 0;
  if (v3 > 0xFFFFFFFFFFFFFF6FLL) {
    goto LABEL_34;
  }
  if (((v3 + 144) & 7) != 0) {
    goto LABEL_33;
  }
  *(void *)(v3 + 144) = &qword_10011CF88;
  if ((((_BYTE)v3 - 104) & 7) != 0) {
    goto LABEL_33;
  }
  *(_BYTE *)(v3 + 152) = 0;
  if (v3 > 0xFFFFFFFFFFFFFF57LL) {
    goto LABEL_34;
  }
  if (((v3 + 168) & 7) != 0) {
    goto LABEL_33;
  }
  *(void *)(v3 + 16_Block_object_dispose((const void *)(v1 - 120), 8) = &qword_10011CF98;
  if ((((_BYTE)v3 - 80) & 7) != 0) {
    goto LABEL_33;
  }
  *(_BYTE *)(v3 + 176) = 0;
  if (v3 > 0xFFFFFFFFFFFFFF3FLL) {
    goto LABEL_34;
  }
  if (((v3 + 192) & 7) != 0 || (*(void *)(v3 + 192) = &qword_10011CF18, (((_BYTE)v3 - 56) & 7) != 0))
  {
LABEL_33:
    __break(0x5516u);
    goto LABEL_34;
  }

  *(_BYTE *)(v3 + 200) = 0;
  if (v3 <= 0xFFFFFFFFFFFFFF27LL)
  {
    if (((v3 + 216) & 7) == 0)
    {
      *(void *)(v3 + 216) = &qword_10011CF28;
      if ((((_BYTE)v3 - 32) & 7) == 0)
      {
        *(_BYTE *)(v3 + 224) = 0;
        if ((v3 & 7) == 0)
        {
          *(void *)unint64_t v3 = &qword_10011CF38;
          uint64_t v4 = (_BYTE *)(v3 + 8);
          if ((v4 & 7) == 0)
          {
            *uint64_t v4 = 0;
            return result;
          }
        }
      }
    }

    goto LABEL_33;
  }

void sub_1000B1ED8(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t v1 = (void *)sub_1000B0570(a1);
    operator delete(v1);
  }

uint64_t sub_1000B1EFC(uint64_t result, int a2)
{
  if (!result) {
    goto LABEL_56;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_56;
  }
  unint64_t result = *(void *)(result + 16);
  if (!result || (result & 7) != 0) {
    goto LABEL_56;
  }
  uint64_t v5 = sub_10001864C(result);
  unint64_t result = *(void *)(v2 + 16);
  if (!result || (result & 7) != 0) {
    goto LABEL_56;
  }
  uint64_t v6 = (const void *)sub_1000569D8(result);
  if (v5) {
    uint64_t v6 = (const void *)v5;
  }
  if (sub_100063FC8(v6))
  {
    unint64_t result = sub_1000438B8();
    if (!result || (result & 7) != 0) {
      goto LABEL_56;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 176LL))(result))
    {
      unint64_t result = *(void *)(v2 + 8);
      if (result && (result & 7) == 0)
      {
        unint64_t v7 = sub_1000AFBA4(result, 0LL, 1u);
        goto LABEL_20;
      }

BOOL sub_1000B2150(BOOL result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0)) {
    __break(0x5516u);
  }
  else {
  return result;
  }
}

uint64_t sub_1000B21B8(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, void))(*(void *)result + 80LL))(result, 0LL);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000B21D8(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 96LL))(result, 8LL);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000B21F8(uint64_t result, int a2, uint64_t a3)
{
  if (result)
  {
    uint64_t v3 = result;
    if ((result & 7) == 0)
    {
      unint64_t result = *(void *)(result + 16);
      if (result && (result & 7) == 0)
      {
        uint64_t v7 = sub_10001864C(result);
        unint64_t result = *(void *)(v3 + 16);
        if (result)
        {
          if ((result & 7) == 0)
          {
            uint64_t v8 = sub_1000569D8(result);
            if (v7) {
              int v9 = (const void *)v7;
            }
            else {
              int v9 = (const void *)v8;
            }
            uint64_t v10 = sub_10004783C();
            unint64_t result = sub_1000438B8();
            if (result)
            {
              if ((result & 7) == 0)
              {
                unint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 176LL))(result);
                if (!(_DWORD)result) {
                  return 0LL;
                }
                if (a2)
                {
                  int v12 = a3;
                  uint64_t v11 = 4LL;
                  sub_1000CEAEC( 0,  4,  "%s:%d Unknown id(%d) value=%d\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp",  2358,  a2,  v12);
                  return v11;
                }

                if (v10 && (v10 & 7) == 0)
                {
                  (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)v10 + 256LL))(v10, v9, a3);
                  return 0LL;
                }
              }
            }
          }
        }
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000B230C(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_17;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4 || (v4 & 7) != 0) {
    goto LABEL_17;
  }
  uint64_t v2 = a2;
  uint64_t v6 = sub_10001864C(v4);
  uint64_t v7 = *(void *)(a1 + 16);
  if (!v7 || (v7 & 7) != 0) {
    goto LABEL_17;
  }
  uint64_t v8 = sub_1000569D8(v7);
  uint64_t v9 = sub_10004783C();
  if ((_DWORD)v2) {
    goto LABEL_18;
  }
  if (!v9 || (v9 & 7) != 0)
  {
LABEL_17:
    __break(0x5516u);
LABEL_18:
    sub_1000D28E0(v2);
  }

  if (v6) {
    uint64_t v10 = v6;
  }
  else {
    uint64_t v10 = v8;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v9 + 264LL))(v9, v10);
}

uint64_t sub_1000B23A4(uint64_t result, int a2, uint64_t a3)
{
  if (result)
  {
    uint64_t v3 = (void *)result;
    if ((result & 7) == 0)
    {
      unint64_t result = *(void *)(result + 16);
      if (result && (result & 7) == 0)
      {
        uint64_t v7 = (const void *)sub_10001864C(result);
        unint64_t result = v3[2];
        if (result)
        {
          if ((result & 7) == 0)
          {
            uint64_t v8 = sub_1000569D8(result);
            if (!v7) {
              uint64_t v7 = (const void *)v8;
            }
            uint64_t v9 = sub_10004783C();
            unint64_t result = sub_1000438B8();
            if (result && (result & 7) == 0)
            {
              unint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 176LL))(result);
              if ((_DWORD)result)
              {
                uint64_t v10 = 0LL;
                switch(a2)
                {
                  case 0:
                    if (!v9 || (v9 & 7) != 0) {
                      goto LABEL_82;
                    }
                    (*(void (**)(uint64_t, const void *, BOOL))(*(void *)v9 + 256LL))( v9,  v7,  (_DWORD)a3 != 0);
                    return 0LL;
                  case 1:
                    if (!v9 || (v9 & 7) != 0) {
                      goto LABEL_82;
                    }
                    uint64_t v11 = *(void (**)(uint64_t, const void *, uint64_t))(*(void *)v9 + 504LL);
                    goto LABEL_60;
                  case 2:
                    if (!v9 || (v9 & 7) != 0) {
                      goto LABEL_82;
                    }
                    uint64_t v11 = *(void (**)(uint64_t, const void *, uint64_t))(*(void *)v9 + 488LL);
                    goto LABEL_60;
                  case 3:
                    if (!v9 || (v9 & 7) != 0) {
                      goto LABEL_82;
                    }
                    uint64_t v11 = *(void (**)(uint64_t, const void *, uint64_t))(*(void *)v9 + 472LL);
                    goto LABEL_60;
                  case 4:
                    if (!v9 || (v9 & 7) != 0) {
                      goto LABEL_82;
                    }
                    uint64_t v11 = *(void (**)(uint64_t, const void *, uint64_t))(*(void *)v9 + 520LL);
                    goto LABEL_60;
                  case 5:
                    if (!v9 || (v9 & 7) != 0) {
                      goto LABEL_82;
                    }
                    (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)v9 + 536LL))(v9, v7, a3);
                    unint64_t result = (*(uint64_t (**)(void *, uint64_t))(*v3 + 128LL))(v3, 6LL);
                    uint64_t v10 = 0LL;
                    if (!(_DWORD)a3 || !(_DWORD)result) {
                      return v10;
                    }
                    unint64_t v12 = v3[7];
                    if (v12 >= 0xFFFFFFFFFFFFFF88LL) {
                      goto LABEL_83;
                    }
                    if (((v12 + 120) & 7) != 0) {
                      goto LABEL_82;
                    }
                    uint64_t v13 = *(void *)(v12 + 120);
                    if (!v13) {
                      goto LABEL_82;
                    }
                    if ((v13 & 7) != 0) {
                      goto LABEL_82;
                    }
                    uint64_t v14 = (unsigned __int8 *)(v13 + 8);
                    unsigned int v15 = *v14;
                    if (v15 >= 2) {
                      goto LABEL_81;
                    }
                    if (v15)
                    {
                      BOOL v16 = 1LL;
LABEL_71:
                      unint64_t result = (*(uint64_t (**)(void *, uint64_t, void, BOOL, void))(*v3 + 88LL))( v3,  6LL,  0LL,  v16,  0LL);
                      goto LABEL_80;
                    }

                    if (v12 > 0xFFFFFFFFFFFFFF6FLL) {
                      goto LABEL_83;
                    }
                    uint64_t v22 = (uint64_t *)(v12 + 144);
                    if ((v22 & 7) == 0)
                    {
                      uint64_t v23 = *v22;
                      if (v23)
                      {
                        if ((v23 & 7) == 0)
                        {
                          unint64_t v24 = (unsigned __int8 *)(v23 + 8);
                          if ((v24 & 7) == 0)
                          {
                            unsigned int v25 = *v24;
                            if (v25 > 1) {
                              goto LABEL_81;
                            }
                            BOOL v16 = v25 != 0;
                            goto LABEL_71;
                          }
                        }
                      }
                    }

                    goto LABEL_82;
                  case 6:
                    if (!v9 || (v9 & 7) != 0) {
                      goto LABEL_82;
                    }
                    (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)v9 + 568LL))(v9, v7, a3);
                    unint64_t result = (*(uint64_t (**)(void *, uint64_t))(*v3 + 128LL))(v3, 5LL);
                    uint64_t v10 = 0LL;
                    if (!(_DWORD)a3 || !(_DWORD)result) {
                      return v10;
                    }
                    unint64_t v17 = v3[7];
                    if (v17 > 0xFFFFFFFFFFFFFF87LL) {
                      goto LABEL_83;
                    }
                    if (((v17 + 120) & 7) != 0) {
                      goto LABEL_82;
                    }
                    uint64_t v18 = *(void *)(v17 + 120);
                    if (!v18) {
                      goto LABEL_82;
                    }
                    if ((v18 & 7) != 0) {
                      goto LABEL_82;
                    }
                    unsigned int v19 = (unsigned __int8 *)(v18 + 8);
                    unsigned int v20 = *v19;
                    if (v20 > 1) {
                      goto LABEL_81;
                    }
                    if (v20)
                    {
                      BOOL v21 = 1LL;
                    }

                    else
                    {
                      if (v17 > 0xFFFFFFFFFFFFFF6FLL) {
                        goto LABEL_83;
                      }
                      BOOL v26 = (uint64_t *)(v17 + 144);
                      uint64_t v27 = *v26;
                      if (!v27) {
                        goto LABEL_82;
                      }
                      if ((v27 & 7) != 0) {
                        goto LABEL_82;
                      }
                      unsigned int v28 = (unsigned __int8 *)(v27 + 8);
                      unsigned int v29 = *v28;
                      if (v29 > 1)
                      {
LABEL_81:
                        __break(0x550Au);
                        goto LABEL_82;
                      }

                      BOOL v21 = v29 != 0;
                    }

                    unint64_t result = (*(uint64_t (**)(void *, uint64_t, void, BOOL, void))(*v3 + 88LL))( v3,  5LL,  0LL,  v21,  0LL);
LABEL_80:
                    uint64_t v10 = 0LL;
                    break;
                  case 7:
                    if (!v9 || (v9 & 7) != 0) {
                      goto LABEL_82;
                    }
                    uint64_t v11 = *(void (**)(uint64_t, const void *, uint64_t))(*(void *)v9 + 552LL);
LABEL_60:
                    v11(v9, v7, a3);
                    return 0LL;
                  case 8:
                    sub_1000B2768((uint64_t)v3, v7, a3);
                    return 0LL;
                  case 9:
                    return v10;
                  default:
                    uint64_t v10 = 4LL;
                    sub_1000CEAEC( 0,  4,  "%s:%d Unknown or invalid id(%d) value=%d\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp",  2471,  a2,  a3);
                    return v10;
                }

                return v10;
              }

              return 0LL;
            }
          }
        }
      }
    }
  }

uint64_t sub_1000B2768(uint64_t result, const void *a2, uint64_t a3)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_14;
  }
  unint64_t result = sub_100063FC8(a2);
  if ((_DWORD)result)
  {
    unint64_t result = sub_1000438B8();
    if (!result || (result & 7) != 0) {
      goto LABEL_14;
    }
    unint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 176LL))(result);
    if ((_DWORD)result)
    {
      unint64_t result = sub_10004783C();
      if (a2 && result)
      {
        if ((result & 7) == 0)
        {
          if (a3 <= 3) {
            return (*(uint64_t (**)(uint64_t, const void *, uint64_t))(*(void *)result + 584LL))( result,  a2,  a3);
          }
          goto LABEL_15;
        }
      }

      else
      {
        __break(0x5518u);
      }

uint64_t sub_1000B2804(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_6;
  }
  if (a2 >= 2
    || (unint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)result + 88LL))( result,  6LL,  a2,  a3,  0LL),  result > 0x1F))
  {
    __break(0x550Au);
LABEL_6:
    __break(0x5516u);
  }

  return result;
}

uint64_t sub_1000B2854(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_6;
  }
  if (a2 >= 2
    || (unint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)result + 88LL))( result,  5LL,  a2,  a3,  0LL),  result > 0x1F))
  {
    __break(0x550Au);
LABEL_6:
    __break(0x5516u);
  }

  return result;
}

uint64_t sub_1000B28A4(uint64_t a1, uint64_t a2)
{
  if (!a1
    || (a1 & 7) != 0
    || ((v4 = *(void *)(a1 + 16)) != 0 ? (BOOL v5 = (v4 & 7) == 0) : (BOOL v5 = 0),
        !v5 || (v2 = a2, v6 = sub_10001864C(v4), (uint64_t v7 = *(void *)(a1 + 16)) == 0) || (v7 & 7) != 0))
  {
LABEL_42:
    __break(0x5516u);
LABEL_43:
    sub_1000D28E0(v2);
  }

  uint64_t v8 = sub_1000569D8(v7);
  if (v6) {
    uint64_t v9 = v6;
  }
  else {
    uint64_t v9 = v8;
  }
  uint64_t v10 = sub_10004783C();
  switch((int)v2)
  {
    case 0:
      if (!v10 || (v10 & 7) != 0) {
        goto LABEL_42;
      }
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v10 + 264LL))(v10, v9);
    case 1:
      if (!v10 || (v10 & 7) != 0) {
        goto LABEL_42;
      }
      uint64_t v11 = *(uint64_t (**)(void))(*(void *)v10 + 512LL);
      return v11();
    case 2:
      if (!v10 || (v10 & 7) != 0) {
        goto LABEL_42;
      }
      uint64_t v11 = *(uint64_t (**)(void))(*(void *)v10 + 496LL);
      return v11();
    case 3:
      if (!v10 || (v10 & 7) != 0) {
        goto LABEL_42;
      }
      uint64_t v11 = *(uint64_t (**)(void))(*(void *)v10 + 480LL);
      return v11();
    case 4:
      if (!v10 || (v10 & 7) != 0) {
        goto LABEL_42;
      }
      uint64_t v11 = *(uint64_t (**)(void))(*(void *)v10 + 528LL);
      return v11();
    case 5:
      if (!v10 || (v10 & 7) != 0) {
        goto LABEL_42;
      }
      uint64_t v11 = *(uint64_t (**)(void))(*(void *)v10 + 544LL);
      return v11();
    case 6:
      if (!v10 || (v10 & 7) != 0) {
        goto LABEL_42;
      }
      uint64_t v11 = *(uint64_t (**)(void))(*(void *)v10 + 576LL);
      return v11();
    case 7:
      if (!v10 || (v10 & 7) != 0) {
        goto LABEL_42;
      }
      uint64_t v11 = *(uint64_t (**)(void))(*(void *)v10 + 560LL);
      return v11();
    case 8:
    case 9:
      if (!v10 || (v10 & 7) != 0) {
        goto LABEL_42;
      }
      uint64_t v11 = *(uint64_t (**)(void))(*(void *)v10 + 592LL);
      return v11();
    default:
      goto LABEL_43;
  }

uint64_t sub_1000B2A30(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 96LL))(result, 1LL);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000B2A50(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 96LL))(result, 2LL);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000B2A70(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 96LL))(result, 3LL);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000B2A90(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 96LL))(result, 4LL);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000B2AB0(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 96LL))(result, 5LL);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000B2AD0(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 96LL))(result, 6LL);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000B2AF0(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 96LL))(result, 7LL);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000B2B10(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_6;
  }

  unint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t, void, uint64_t))(*(void *)result + 72LL))( result,  0LL,  a2,  0LL,  1LL);
  if (result > 0x1F) {
LABEL_6:
  }
    __break(0x550Au);
  return result;
}

uint64_t sub_1000B2B58(uint64_t result, unsigned int a2, uint64_t a3)
{
  if (!result) {
    goto LABEL_21;
  }
  uint64_t v3 = (void *)result;
  if ((result & 7) != 0) {
    goto LABEL_21;
  }
  LODWORD(v4) = a2;
  if (a2 >= 4)
  {
LABEL_22:
    __break(0x550Au);
    goto LABEL_23;
  }

  if (a2 == 3) {
    return 4LL;
  }
  unint64_t result = sub_1000256D8();
  if (!result)
  {
    __break(0x5518u);
    goto LABEL_21;
  }

  if ((result & 7) != 0)
  {
LABEL_21:
    __break(0x5516u);
    goto LABEL_22;
  }

  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)result + 96LL))(result);
  else {
    uint64_t v4 = v4;
  }
  unint64_t result = (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t, void))(*v3 + 88LL))(v3, 8LL, v4, a3, 0LL);
  uint64_t v5 = result;
  if (!v7)
  {
LABEL_18:
    goto LABEL_22;
  }

  unint64_t v8 = v3[7];
  if (v8 < 0xFFFFFFFFFFFFFF28LL)
  {
    uint64_t v9 = (uint64_t *)(v8 + 216);
    if ((v9 & 7) == 0)
    {
      uint64_t v10 = *v9;
      if (v10)
      {
        if ((v10 & 7) == 0)
        {
          uint64_t v11 = (_BYTE *)(v10 + 8);
          if ((v11 & 7) == 0)
          {
            *uint64_t v11 = 0;
            unint64_t result = (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t, void))(*v3 + 88LL))( v3,  9LL,  v4,  1LL,  0LL);
            goto LABEL_18;
          }
        }
      }
    }

    goto LABEL_21;
  }

uint64_t sub_1000B2C78(uint64_t result)
{
  if (!result || (v1 = result, (result & 7) != 0) || (unint64_t result = sub_10004783C()) == 0 || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_8;
  }

  (*(void (**)(uint64_t, void, uint64_t))(*(void *)result + 600LL))(result, 0LL, 1LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)v1 + 88LL))(v1, 9LL, 2LL, 1LL, 0LL);
  unint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, uint64_t))(*(void *)v1 + 88LL))( v1,  8LL,  2LL,  0LL,  1LL);
  if (result >= 0x20) {
LABEL_8:
  }
    __break(0x550Au);
  return result;
}

uint64_t sub_1000B2D14(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_6;
  }
  if (a2 >= 2
    || (unint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)result + 88LL))( result,  1LL,  a2,  a3,  0LL),  result > 0x1F))
  {
    __break(0x550Au);
LABEL_6:
    __break(0x5516u);
  }

  return result;
}

uint64_t sub_1000B2D64(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_6;
  }
  if (a2 >= 4
    || (unint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)result + 88LL))( result,  2LL,  a2,  a3,  0LL),  result > 0x1F))
  {
    __break(0x550Au);
LABEL_6:
    __break(0x5516u);
  }

  return result;
}

uint64_t sub_1000B2DB4(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_6;
  }
  if (a2 >= 2
    || (unint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)result + 88LL))( result,  3LL,  a2,  a3,  0LL),  result > 0x1F))
  {
    __break(0x550Au);
LABEL_6:
    __break(0x5516u);
  }

  return result;
}

uint64_t sub_1000B2E04(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_6;
  }
  if (a2 >= 8
    || (unint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)result + 88LL))( result,  4LL,  a2,  a3,  1LL),  result > 0x1F))
  {
    __break(0x550Au);
LABEL_6:
    __break(0x5516u);
  }

  return result;
}

uint64_t sub_1000B2E54(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_6;
  }
  if (a2 >= 2
    || (unint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)result + 88LL))( result,  7LL,  a2,  a3,  0LL),  result > 0x1F))
  {
    __break(0x550Au);
LABEL_6:
    __break(0x5516u);
  }

  return result;
}

uint64_t sub_1000B2EA4(uint64_t result)
{
  if (!result) {
    goto LABEL_41;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_41;
  }
  unint64_t v2 = *(void *)(result + 56);
  if (v2 >= 0xFFFFFFFFFFFFFF40LL) {
    goto LABEL_42;
  }
  uint64_t v3 = (uint64_t *)(v2 + 192);
  uint64_t v4 = *v3;
  BOOL v5 = v4 && (v4 & 7) == 0;
  uint64_t v6 = (unsigned __int8 *)(v4 + 8);
  unsigned int v8 = *v6;
  if (v8 < 2)
  {
    if (!v8) {
      return 0LL;
    }
    unint64_t result = sub_1000256D8();
    if (!result)
    {
      __break(0x5518u);
      goto LABEL_41;
    }

    if ((result & 7) != 0)
    {
LABEL_41:
      __break(0x5516u);
      goto LABEL_42;
    }

    unint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 96LL))(result);
    if ((_DWORD)result)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, void))(*(void *)v1 + 24LL))(v1, 9LL, 1LL, 0LL);
      unint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, void, void))(*(void *)v1 + 24LL))(v1, 8LL, 0LL, 0LL);
      unint64_t v9 = *(void *)(v1 + 56);
      if (v9 <= 0xFFFFFFFFFFFFFF3FLL)
      {
        if (((v9 + 192) & 7) != 0) {
          goto LABEL_41;
        }
        uint64_t v10 = *(void *)(v9 + 192);
        if (!v10 || (v10 & 7) != 0 || ((v10 + 12) & 3) != 0) {
          goto LABEL_41;
        }
        if (v9 <= 0xFFFFFFFFFFFFFF27LL)
        {
          uint64_t v11 = (uint64_t *)(v9 + 216);
          if ((v11 & 7) == 0)
          {
            uint64_t v12 = *v11;
            if (v12)
            {
              if ((v12 & 7) == 0)
              {
                uint64_t v13 = (_DWORD *)(v12 + 12);
                if ((v13 & 3) == 0)
                {
                  *uint64_t v13 = *(_DWORD *)(v10 + 12);
                  uint64_t v14 = (_BYTE *)(v10 + 8);
                  if ((v14 & 7) == 0)
                  {
                    *uint64_t v14 = 0;
                    return 0LL;
                  }
                }
              }
            }
          }

          goto LABEL_41;
        }
      }
    }

    else
    {
      unint64_t v15 = *(void *)(v1 + 56);
      if (v15 <= 0xFFFFFFFFFFFFFF3FLL)
      {
        if (((v15 + 192) & 7) == 0)
        {
          uint64_t v16 = *(void *)(v15 + 192);
          if (v16)
          {
            if ((v16 & 7) == 0 && (((_BYTE)v16 + 12) & 3) == 0 && ((v15 + 208) & 7) == 0)
            {
              *(_DWORD *)(v15 + 20_Block_object_dispose((const void *)(v1 - 120), 8) = *(_DWORD *)(v16 + 12);
              unint64_t v17 = (_BYTE *)(v16 + 8);
              if ((v17 & 7) == 0)
              {
                *unint64_t v17 = 0;
                uint64_t v18 = (_BYTE *)(v15 + 200);
                if ((v18 & 7) == 0)
                {
                  *uint64_t v18 = 1;
                  *(_BYTE *)(v1 + 36) = 1;
                  (*(void (**)(uint64_t, void))(*(void *)v1 + 40LL))(v1, 0LL);
                  return 0LL;
                }
              }
            }
          }
        }

        goto LABEL_41;
      }
    }

uint64_t sub_1000B3084(uint64_t result)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_21;
  }
  unint64_t v1 = *(void *)(result + 56);
  if (v1 >= 0xFFFFFFFFFFFFFF28LL)
  {
LABEL_22:
    __break(0x5513u);
    goto LABEL_23;
  }

  unint64_t v2 = (uint64_t *)(v1 + 216);
  if (((v1 + 216) & 7) != 0
    || ((v3 = *v2, v4 = *v2 & 7, v3) ? (BOOL v5 = v4 == 0) : (BOOL v5 = 0),
        (v6 = (_BYTE *)(v3 + 8), v5) ? (BOOL v7 = ((v3 + 8) & 7) == 0) : (BOOL v7 = 0),
        !v7))
  {
LABEL_21:
    __break(0x5516u);
    goto LABEL_22;
  }

  if (*v6 < 2u)
  {
    if (*v6)
    {
      unsigned int v8 = (_DWORD *)(v3 + 12);
      if ((((_BYTE)v1 - 64) & 7) != 0) {
        goto LABEL_21;
      }
      if ((((_BYTE)v1 - 48) & 7) != 0) {
        goto LABEL_21;
      }
      *(_DWORD *)(v1 + 20_Block_object_dispose((const void *)(v1 - 120), 8) = *v8;
      *uint64_t v6 = 0;
      unint64_t v9 = (_BYTE *)(v1 + 200);
      *unint64_t v9 = 1;
      *(_BYTE *)(result + 36) = 1;
      (*(void (**)(uint64_t, void))(*(void *)result + 40LL))(result, 0LL);
    }

    return 0LL;
  }

void *sub_1000B3158(void *result, uint64_t a2, uint64_t a3)
{
  if (!result) {
    goto LABEL_13;
  }
  unint64_t result = sub_1000B04A8(result, a3, a2, 3u, 0, 2u, 0LL, 0LL, (uint64_t)&stru_10011C9A8, (uint64_t)&unk_10011B894, 3u);
  *unint64_t result = off_100107348;
  unint64_t v3 = result[7];
  if (!v3) {
    goto LABEL_13;
  }
  if ((v3 & 7) != 0) {
    goto LABEL_13;
  }
  *(void *)unint64_t v3 = &qword_10011CEE8;
  if ((((_BYTE)v3 + 8) & 7) != 0) {
    goto LABEL_13;
  }
  *(_BYTE *)(v3 + _Block_object_dispose((const void *)(v1 - 120), 8) = 0;
  if (v3 >= 0xFFFFFFFFFFFFFFE8LL) {
    goto LABEL_14;
  }
  if (((v3 + 24) & 7) != 0 || (*(void *)(v3 + 24) = &qword_10011CEF8, (((_BYTE)v3 + 32) & 7) != 0))
  {
LABEL_13:
    __break(0x5516u);
    goto LABEL_14;
  }

  *(_BYTE *)(v3 + 32) = 0;
  if (v3 <= 0xFFFFFFFFFFFFFFCFLL)
  {
    if (((v3 + 48) & 7) == 0)
    {
      *(void *)(v3 + 4_Block_object_dispose((const void *)(v1 - 120), 8) = &qword_10011CEE8;
      uint64_t v4 = (_BYTE *)(v3 + 56);
      if ((v4 & 7) == 0)
      {
        *uint64_t v4 = 0;
        return result;
      }
    }

    goto LABEL_13;
  }

void sub_1000B3258(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    unint64_t v1 = (void *)sub_1000B0570(a1);
    operator delete(v1);
  }

uint64_t sub_1000B327C(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return 0LL;
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000B3294(uint64_t result, int a2)
{
  if (result && (result & 7) == 0)
  {
    if (a2 == 2)
    {
      unint64_t result = *(void *)(result + 8);
      if (result && (result & 7) == 0)
      {
        unsigned int v2 = 17;
        return sub_1000AFBA4(result, 0LL, v2);
      }
    }

    else if (a2 == 1)
    {
      unint64_t result = *(void *)(result + 8);
      if (result && (result & 7) == 0)
      {
        unsigned int v2 = 16;
        return sub_1000AFBA4(result, 0LL, v2);
      }
    }

    else
    {
      if (a2)
      {
        sub_1000CEAEC( 0,  4,  "%s:%d Unknown id(%d)\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp",  3144,  a2);
        return 0LL;
      }

      unint64_t result = *(void *)(result + 8);
      if (result && (result & 7) == 0)
      {
        unsigned int v2 = 15;
        return sub_1000AFBA4(result, 0LL, v2);
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000B3358(uint64_t result, int a2, int a3)
{
  if (result && (result & 7) == 0)
  {
    unint64_t result = sub_10004783C();
    if (a2 == 2)
    {
      if (result && (result & 7) == 0)
      {
        BOOL v5 = *(void (**)(void))(*(void *)result + 240LL);
        goto LABEL_11;
      }
    }

    else
    {
      if (a2 != 1)
      {
        int v7 = a3;
        uint64_t v6 = 4LL;
        sub_1000CEAEC( 0,  4,  "%s:%d Unknown id(%d) value=%d\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp",  3178,  a2,  v7);
        return v6;
      }

      if (result && (result & 7) == 0)
      {
        BOOL v5 = *(void (**)(void))(*(void *)result + 224LL);
LABEL_11:
        v5();
        return 0LL;
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000B3414(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_12;
  }
  uint64_t v2 = a2;
  uint64_t v3 = sub_10004783C();
  if ((_DWORD)v2 == 2)
  {
    if (v3 && (v3 & 7) == 0)
    {
      uint64_t v4 = 31LL;
      return (*(uint64_t (**)(void))(*(void *)v3 + 8 * v4))();
    }

    goto LABEL_12;
  }

  if ((_DWORD)v2 != 1) {
    goto LABEL_13;
  }
  if (!v3 || (v3 & 7) != 0)
  {
LABEL_12:
    __break(0x5516u);
LABEL_13:
    sub_1000D28E0(v2);
  }

  uint64_t v4 = 29LL;
  return (*(uint64_t (**)(void))(*(void *)v3 + 8 * v4))();
}

uint64_t sub_1000B3488(uint64_t result, int a2, int a3)
{
  if (result && (result & 7) == 0)
  {
    unint64_t result = sub_10004783C();
    if (a2 == 2)
    {
      if (result && (result & 7) == 0)
      {
        BOOL v5 = *(void (**)(void))(*(void *)result + 240LL);
        goto LABEL_15;
      }
    }

    else if (a2 == 1)
    {
      if (result && (result & 7) == 0)
      {
        BOOL v5 = *(void (**)(void))(*(void *)result + 224LL);
        goto LABEL_15;
      }
    }

    else
    {
      if (a2)
      {
        int v7 = a3;
        uint64_t v6 = 4LL;
        sub_1000CEAEC( 0,  4,  "%s:%d Unknown or invalid id(%d) value=%d\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp",  3248,  a2,  v7);
        return v6;
      }

      if (result && (result & 7) == 0)
      {
        BOOL v5 = *(void (**)(void))(*(void *)result + 208LL);
LABEL_15:
        v5();
        return 0LL;
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000B356C(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_16;
  }
  uint64_t v2 = a2;
  uint64_t v3 = sub_10004783C();
  if ((_DWORD)v2 == 2)
  {
    if (!v3 || (v3 & 7) != 0) {
      goto LABEL_16;
    }
    BOOL v5 = *(uint64_t (**)(void))(*(void *)v3 + 248LL);
  }

  else
  {
    if ((_DWORD)v2 != 1)
    {
      if ((_DWORD)v2) {
        goto LABEL_17;
      }
      if (v3 && (v3 & 7) == 0) {
        return (*(uint64_t (**)(uint64_t))(*(void *)v3 + 216LL))(v3);
      }
LABEL_16:
      __break(0x5516u);
LABEL_17:
      sub_1000D28E0(v2);
    }

    if (!v3 || (v3 & 7) != 0) {
      goto LABEL_16;
    }
    BOOL v5 = *(uint64_t (**)(void))(*(void *)v3 + 232LL);
  }

  return v5();
}

void *sub_1000B3608(void *result, uint64_t a2, uint64_t a3)
{
  if (!result
    || (result & 7) != 0
    || (result = sub_1000B04A8( result,  a3,  a2,  5u,  0,  0,  0LL,  0LL,  (uint64_t)&stru_10011CB28,  (uint64_t)&unk_10011D06C,  1u),  *result = off_100107418,  (uint64_t v3 = (void *)result[7]) == 0LL)
    || (v3 & 7) != 0
    || (*v3 = &qword_10011CFC8, uint64_t v4 = v3 + 1, byte_10011CFD0 = 0, dword_10011CFD4 = 0, (v4 & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    *uint64_t v4 = 0;
  }

  return result;
}

void sub_1000B36AC(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    unint64_t v1 = (void *)sub_1000B0570(a1);
    operator delete(v1);
  }

unint64_t sub_1000B36D0(unint64_t result, int a2)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_8;
  }
  if (a2)
  {
    sub_1000CEAEC( 0,  4,  "%s:%d Unknown id(%d)\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp",  3444,  a2);
    return 0LL;
  }

  unint64_t result = *(void *)(result + 8);
  if (result)
  {
    if ((result & 7) == 0) {
      return sub_1000AFBA4(result, 0LL, 0x13u);
    }
  }

uint64_t sub_1000B374C(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return 0LL;
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000B3764(uint64_t result, int a2, int a3)
{
  if (result && (result & 7) == 0)
  {
    if (a2)
    {
      uint64_t v3 = 4LL;
      sub_1000CEAEC( 0,  4,  "%s:%d Unknown id(%d) value=%d\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp",  3490,  a2,  a3);
      return v3;
    }

    uint64_t v4 = *(void *)(result + 56);
    if (v4)
    {
      if ((v4 & 7) == 0)
      {
        BOOL v5 = (int *)(v4 + 16);
        if ((v5 & 7) == 0)
        {
          uint64_t v3 = 0LL;
          *BOOL v5 = a3;
          return v3;
        }
      }
    }
  }

  __break(0x5516u);
  return result;
}

BOOL sub_1000B37F0(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_8;
  }
  if ((_DWORD)a2) {
    goto LABEL_9;
  }
  uint64_t v2 = *(void *)(a1 + 56);
  if (!v2 || (v2 & 7) != 0 || (uint64_t v3 = (_DWORD *)(v2 + 16), (v3 & 7) != 0))
  {
LABEL_8:
    __break(0x5516u);
LABEL_9:
    sub_1000D28E0(a2);
  }

  return *v3 != 0;
}

uint64_t sub_1000B3844(uint64_t result, int a2, int a3)
{
  if (result && (result & 7) == 0)
  {
    if (a2)
    {
      uint64_t v3 = 4LL;
      sub_1000CEAEC( 0,  4,  "%s:%d Unknown or invalid id(%d) value=%d\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp",  3549,  a2,  a3);
      return v3;
    }

    uint64_t v4 = *(void *)(result + 56);
    if (v4)
    {
      if ((v4 & 7) == 0)
      {
        BOOL v5 = (int *)(v4 + 16);
        if ((v5 & 7) == 0)
        {
          uint64_t v3 = 0LL;
          *BOOL v5 = a3;
          return v3;
        }
      }
    }
  }

  __break(0x5516u);
  return result;
}

BOOL sub_1000B38D0(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_8;
  }
  if ((_DWORD)a2) {
    goto LABEL_9;
  }
  uint64_t v2 = *(void *)(a1 + 56);
  if (!v2 || (v2 & 7) != 0 || (uint64_t v3 = (_DWORD *)(v2 + 16), (v3 & 7) != 0))
  {
LABEL_8:
    __break(0x5516u);
LABEL_9:
    sub_1000D28E0(a2);
  }

  return *v3 != 0;
}

uint64_t sub_1000B3924(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t, void))(*(void *)result + 72LL))( result,  0LL,  a2,  a3,  0LL);
  }
  __break(0x5516u);
  return result;
}

void *sub_1000B3950(void *result, uint64_t a2, uint64_t a3)
{
  if (!result
    || (result & 7) != 0
    || (result = sub_1000B04A8( result,  a3,  a2,  8u,  0,  0,  0LL,  0LL,  (uint64_t)&stru_10011CB88,  (uint64_t)&unk_10011D070,  1u),  *result = off_1001074E8,  (uint64_t v3 = (void *)result[7]) == 0LL)
    || (v3 & 7) != 0
    || (*v3 = &qword_10011CFD8, uint64_t v4 = v3 + 1, byte_10011CFE0 = 0, dword_10011CFE4 = 0, (v4 & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    *uint64_t v4 = 0;
  }

  return result;
}

void sub_1000B39F4(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    unint64_t v1 = (void *)sub_1000B0570(a1);
    operator delete(v1);
  }

unint64_t sub_1000B3A18(unint64_t result, int a2)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_8;
  }
  if (a2)
  {
    sub_1000CEAEC( 0,  4,  "%s:%d Unknown id(%d)\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp",  3700,  a2);
    return 0LL;
  }

  unint64_t result = *(void *)(result + 8);
  if (result)
  {
    if ((result & 7) == 0) {
      return sub_1000AFBA4(result, 0LL, 0x19u);
    }
  }

uint64_t sub_1000B3A94(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return 0LL;
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000B3AAC(uint64_t result, int a2, int a3)
{
  if (result && (result & 7) == 0)
  {
    if (a2)
    {
      uint64_t v3 = 4LL;
      sub_1000CEAEC( 0,  4,  "%s:%d Unknown id(%d) value=%d\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp",  3746,  a2,  a3);
      return v3;
    }

    uint64_t v4 = *(void *)(result + 56);
    if (v4)
    {
      if ((v4 & 7) == 0)
      {
        BOOL v5 = (int *)(v4 + 16);
        if ((v5 & 7) == 0)
        {
          uint64_t v3 = 0LL;
          *BOOL v5 = a3;
          return v3;
        }
      }
    }
  }

  __break(0x5516u);
  return result;
}

BOOL sub_1000B3B38(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_8;
  }
  if ((_DWORD)a2) {
    goto LABEL_9;
  }
  uint64_t v2 = *(void *)(a1 + 56);
  if (!v2 || (v2 & 7) != 0 || (uint64_t v3 = (_DWORD *)(v2 + 16), (v3 & 7) != 0))
  {
LABEL_8:
    __break(0x5516u);
LABEL_9:
    sub_1000D28E0(a2);
  }

  return *v3 != 0;
}

uint64_t sub_1000B3B8C(uint64_t result, int a2, int a3)
{
  if (result && (result & 7) == 0)
  {
    if (a2)
    {
      uint64_t v3 = 4LL;
      sub_1000CEAEC( 0,  4,  "%s:%d Unknown or invalid id(%d) value=%d\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp",  3805,  a2,  a3);
      return v3;
    }

    uint64_t v4 = *(void *)(result + 56);
    if (v4)
    {
      if ((v4 & 7) == 0)
      {
        BOOL v5 = (int *)(v4 + 16);
        if ((v5 & 7) == 0)
        {
          uint64_t v3 = 0LL;
          *BOOL v5 = a3;
          return v3;
        }
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000B3C18(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_8;
  }
  if ((_DWORD)a2) {
    goto LABEL_9;
  }
  uint64_t v2 = *(void *)(a1 + 56);
  if (!v2 || (v2 & 7) != 0 || (uint64_t v3 = (unsigned int *)(v2 + 16), (v3 & 7) != 0))
  {
LABEL_8:
    __break(0x5516u);
LABEL_9:
    sub_1000D28E0(a2);
  }

  return *v3;
}

void *sub_1000B3C64(void *result, uint64_t a2, uint64_t a3)
{
  if (!result
    || (result & 7) != 0
    || (unint64_t result = sub_1000B04A8(result, a3, a2, 4u, 1u, 1u, 0LL, 0LL, 0LL, (uint64_t)&unk_10011D074, 1u),
        *unint64_t result = off_1001075B8,
        (uint64_t v3 = (void *)result[7]) == 0LL)
    || (v3 & 7) != 0
    || (*v3 = 0LL, uint64_t v4 = v3 + 1, (v4 & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    *uint64_t v4 = 0;
  }

  return result;
}

void sub_1000B3CF0(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    unint64_t v1 = (void *)sub_1000B0570(a1);
    operator delete(v1);
  }

unint64_t sub_1000B3D14(unint64_t result, int a2)
{
  if (!result) {
    goto LABEL_21;
  }
  unint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_21;
  }
  unint64_t result = *(void *)(result + 16);
  if (!result || (result & 7) != 0) {
    goto LABEL_21;
  }
  uint64_t v5 = sub_10001864C(result);
  unint64_t result = *(void *)(v2 + 16);
  if (!result || (result & 7) != 0) {
    goto LABEL_21;
  }
  unint64_t result = sub_1000569D8(result);
  if (v5) {
    unint64_t result = v5;
  }
  if (a2)
  {
    sub_1000CEAEC( 0,  4,  "%s:%d Unknown id(%d)\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp",  3955,  a2);
    return 0LL;
  }

  if (result)
  {
    if ((result & 7) != 0) {
      goto LABEL_21;
    }
  }

  unint64_t result = *(void *)(v2 + 8);
  if (result && (result & 7) == 0) {
    return sub_1000AFBA4(result, 0LL, 0x12u);
  }
LABEL_21:
  __break(0x5516u);
  return result;
}

BOOL sub_1000B3E04(BOOL result)
{
  if (result && !(result & 7)) {
    return !sub_100087580(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000B3E2C(uint64_t result, int a2, int a3)
{
  if (!result) {
    goto LABEL_26;
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_26;
  }
  unint64_t result = *(void *)(result + 16);
  if (!result || (result & 7) != 0) {
    goto LABEL_26;
  }
  uint64_t v7 = sub_10001864C(result);
  unint64_t result = *(void *)(v3 + 16);
  if (!result || (result & 7) != 0) {
    goto LABEL_26;
  }
  uint64_t v8 = sub_1000569D8(result);
  if (v7) {
    uint64_t v9 = v7;
  }
  else {
    uint64_t v9 = v8;
  }
  if (a2)
  {
    int v12 = a3;
    uint64_t v10 = 4LL;
    sub_1000CEAEC( 0,  4,  "%s:%d Unknown id(%d) value=%d\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp",  4023,  a2,  v12);
    return v10;
  }

  unint64_t result = sub_1000451B0();
  if (result && (uint64_t v11 = result, (result & 7) == 0))
  {
    unint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 152LL))(result, v9);
    if ((a3 & 1) != 0)
    {
      if (result <= 3)
      {
        if ((_DWORD)result == 2) {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)v11 + 144LL))(v11, v9, 3LL);
        }
        return 0LL;
      }
    }

    else if (result <= 3)
    {
      if ((_DWORD)result == 3) {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)v11 + 144LL))(v11, v9, 2LL);
      }
      return 0LL;
    }
  }

  else
  {
LABEL_26:
    __break(0x5516u);
  }

  __break(0x550Au);
  return result;
}

BOOL sub_1000B3F64(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_17;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4 || (v4 & 7) != 0) {
    goto LABEL_17;
  }
  uint64_t v2 = a2;
  uint64_t v6 = sub_10001864C(v4);
  uint64_t v7 = *(void *)(a1 + 16);
  if (!v7 || (v7 & 7) != 0) {
    goto LABEL_17;
  }
  uint64_t v8 = sub_1000569D8(v7);
  if ((_DWORD)v2) {
    goto LABEL_18;
  }
  uint64_t v9 = v8;
  uint64_t v10 = sub_1000451B0();
  if (!v10 || (v10 & 7) != 0)
  {
LABEL_17:
    __break(0x5516u);
LABEL_18:
    sub_1000D28E0(v2);
  }

  if (v6) {
    uint64_t v11 = v6;
  }
  else {
    uint64_t v11 = v9;
  }
  return (*(unsigned int (**)(uint64_t, uint64_t))(*(void *)v10 + 152LL))(v10, v11) == 3;
}

uint64_t sub_1000B4008(uint64_t result, int a2, int a3)
{
  if (!result) {
    goto LABEL_26;
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_26;
  }
  unint64_t result = *(void *)(result + 16);
  if (!result || (result & 7) != 0) {
    goto LABEL_26;
  }
  uint64_t v7 = sub_10001864C(result);
  unint64_t result = *(void *)(v3 + 16);
  if (!result || (result & 7) != 0) {
    goto LABEL_26;
  }
  uint64_t v8 = sub_1000569D8(result);
  if (v7) {
    uint64_t v9 = v7;
  }
  else {
    uint64_t v9 = v8;
  }
  if (a2)
  {
    int v12 = a3;
    uint64_t v10 = 4LL;
    sub_1000CEAEC( 0,  4,  "%s:%d Unknown or invalid id(%d) value=%d\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp",  4109,  a2,  v12);
    return v10;
  }

  unint64_t result = sub_1000451B0();
  if (result && (uint64_t v11 = result, (result & 7) == 0))
  {
    unint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 152LL))(result, v9);
    if (a3)
    {
      if (result < 4)
      {
        if ((_DWORD)result == 2) {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)v11 + 144LL))(v11, v9, 3LL);
        }
        return 0LL;
      }
    }

    else if (result <= 3)
    {
      if ((_DWORD)result == 3) {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)v11 + 144LL))(v11, v9, 2LL);
      }
      return 0LL;
    }
  }

  else
  {
LABEL_26:
    __break(0x5516u);
  }

  __break(0x550Au);
  return result;
}

BOOL sub_1000B413C(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_17;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4 || (v4 & 7) != 0) {
    goto LABEL_17;
  }
  uint64_t v2 = a2;
  uint64_t v6 = sub_10001864C(v4);
  uint64_t v7 = *(void *)(a1 + 16);
  if (!v7 || (v7 & 7) != 0) {
    goto LABEL_17;
  }
  uint64_t v8 = sub_1000569D8(v7);
  if ((_DWORD)v2) {
    goto LABEL_18;
  }
  uint64_t v9 = v8;
  uint64_t v10 = sub_1000451B0();
  if (!v10 || (v10 & 7) != 0)
  {
LABEL_17:
    __break(0x5516u);
LABEL_18:
    sub_1000D28E0(v2);
  }

  if (v6) {
    uint64_t v11 = v6;
  }
  else {
    uint64_t v11 = v9;
  }
  return (*(unsigned int (**)(uint64_t, uint64_t))(*(void *)v10 + 152LL))(v10, v11) == 3;
}

void *sub_1000B41E0(void *result, uint64_t a2, uint64_t a3)
{
  if (!result
    || (result & 7) != 0
    || (unint64_t result = sub_1000B04A8(result, a3, a2, 6u, 1u, 1u, 0LL, 0LL, 0LL, (uint64_t)&unk_10011D078, 1u),
        *unint64_t result = off_100107688,
        (uint64_t v3 = (void *)result[7]) == 0LL)
    || (v3 & 7) != 0
    || (*v3 = 0LL, uint64_t v4 = v3 + 1, (v4 & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    *uint64_t v4 = 0;
  }

  return result;
}

void sub_1000B426C(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    unint64_t v1 = (void *)sub_1000B0570(a1);
    operator delete(v1);
  }

unint64_t sub_1000B4290(unint64_t result, int a2)
{
  if (!result) {
    goto LABEL_21;
  }
  unint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_21;
  }
  unint64_t result = *(void *)(result + 16);
  if (!result || (result & 7) != 0) {
    goto LABEL_21;
  }
  uint64_t v5 = sub_10001864C(result);
  unint64_t result = *(void *)(v2 + 16);
  if (!result || (result & 7) != 0) {
    goto LABEL_21;
  }
  unint64_t result = sub_1000569D8(result);
  if (v5) {
    unint64_t result = v5;
  }
  if (a2)
  {
    sub_1000CEAEC( 0,  4,  "%s:%d Unknown id(%d)\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp",  4263,  a2);
    return 0LL;
  }

  if (result)
  {
    if ((result & 7) != 0) {
      goto LABEL_21;
    }
  }

  unint64_t result = *(void *)(v2 + 8);
  if (result && (result & 7) == 0) {
    return sub_1000AFBA4(result, 0LL, 0x16u);
  }
LABEL_21:
  __break(0x5516u);
  return result;
}

BOOL sub_1000B4380(BOOL result)
{
  if (result && !(result & 7)) {
    return !sub_100087580(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000B43A8(uint64_t result, int a2, uint64_t a3)
{
  if (result)
  {
    uint64_t v3 = result;
    if ((result & 7) == 0)
    {
      unint64_t result = *(void *)(result + 16);
      if (result && (result & 7) == 0)
      {
        uint64_t v7 = sub_10001864C(result);
        unint64_t result = *(void *)(v3 + 16);
        if (result)
        {
          if ((result & 7) == 0)
          {
            uint64_t v8 = sub_1000569D8(result);
            if (v7) {
              uint64_t v9 = v7;
            }
            else {
              uint64_t v9 = v8;
            }
            if (a2)
            {
              int v11 = a3;
              uint64_t v10 = 4LL;
              sub_1000CEAEC( 0,  4,  "%s:%d Unknown id(%d) value=%d\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp",  4312,  a2,  v11);
              return v10;
            }

            unint64_t result = sub_1000451B0();
            if (result && (result & 7) == 0)
            {
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)result + 192LL))(result, v9, a3);
              return 0LL;
            }
          }
        }
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000B4488(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_17;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4 || (v4 & 7) != 0) {
    goto LABEL_17;
  }
  uint64_t v2 = a2;
  uint64_t v6 = sub_10001864C(v4);
  uint64_t v7 = *(void *)(a1 + 16);
  if (!v7 || (v7 & 7) != 0) {
    goto LABEL_17;
  }
  uint64_t v8 = sub_1000569D8(v7);
  if ((_DWORD)v2) {
    goto LABEL_18;
  }
  uint64_t v9 = v8;
  uint64_t v10 = sub_1000451B0();
  if (!v10 || (v10 & 7) != 0)
  {
LABEL_17:
    __break(0x5516u);
LABEL_18:
    sub_1000D28E0(v2);
  }

  if (v6) {
    uint64_t v11 = v6;
  }
  else {
    uint64_t v11 = v9;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v10 + 200LL))(v10, v11);
}

uint64_t sub_1000B4520(uint64_t result, int a2, int a3)
{
  if (result)
  {
    uint64_t v3 = result;
    if ((result & 7) == 0)
    {
      unint64_t result = *(void *)(result + 16);
      if (result && (result & 7) == 0)
      {
        uint64_t v7 = sub_10001864C(result);
        unint64_t result = *(void *)(v3 + 16);
        if (result)
        {
          if ((result & 7) == 0)
          {
            uint64_t v8 = sub_1000569D8(result);
            if (v7) {
              uint64_t v9 = v7;
            }
            else {
              uint64_t v9 = v8;
            }
            if (a2)
            {
              int v11 = a3;
              uint64_t v10 = 4LL;
              sub_1000CEAEC( 0,  4,  "%s:%d Unknown or invalid id(%d) value=%d\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp",  4377,  a2,  v11);
              return v10;
            }

            unint64_t result = sub_1000451B0();
            if (result && (result & 7) == 0)
            {
              (*(void (**)(uint64_t, uint64_t, BOOL))(*(void *)result + 192LL))(result, v9, a3 != 0);
              return 0LL;
            }
          }
        }
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000B4600(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_17;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4 || (v4 & 7) != 0) {
    goto LABEL_17;
  }
  uint64_t v2 = a2;
  uint64_t v6 = sub_10001864C(v4);
  uint64_t v7 = *(void *)(a1 + 16);
  if (!v7 || (v7 & 7) != 0) {
    goto LABEL_17;
  }
  uint64_t v8 = sub_1000569D8(v7);
  if ((_DWORD)v2) {
    goto LABEL_18;
  }
  uint64_t v9 = v8;
  uint64_t v10 = sub_1000451B0();
  if (!v10 || (v10 & 7) != 0)
  {
LABEL_17:
    __break(0x5516u);
LABEL_18:
    sub_1000D28E0(v2);
  }

  if (v6) {
    uint64_t v11 = v6;
  }
  else {
    uint64_t v11 = v9;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v10 + 200LL))(v10, v11);
}

void *sub_1000B469C(void *result, uint64_t a2, uint64_t a3)
{
  if (!result
    || (result & 7) != 0
    || (result = sub_1000B04A8( result,  a3,  a2,  7u,  2u,  2u,  0LL,  0LL,  (uint64_t)&stru_10011CCA8,  (uint64_t)&unk_10011D07C,  1u),  *result = off_100107758,  (uint64_t v3 = (void *)result[7]) == 0LL)
    || (v3 & 7) != 0
    || (*v3 = &qword_10011D008, uint64_t v4 = v3 + 1, byte_10011D010 = 0, dword_10011D014 = 0, (v4 & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    *uint64_t v4 = 0;
  }

  return result;
}

void sub_1000B4740(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    unint64_t v1 = (void *)sub_1000B0570(a1);
    operator delete(v1);
  }

unint64_t sub_1000B4764(unint64_t result, int a2)
{
  if (result)
  {
    unint64_t v2 = result;
    if ((result & 7) == 0)
    {
      unint64_t result = *(void *)(result + 16);
      if (result && (result & 7) == 0)
      {
        uint64_t v5 = sub_10001864C(result);
        unint64_t result = *(void *)(v2 + 16);
        if (result)
        {
          if ((result & 7) == 0)
          {
            uint64_t v6 = sub_1000569D8(result);
            if (a2)
            {
              sub_1000CEAEC( 0,  4,  "%s:%d Unknown id(%d)\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp",  4534,  a2);
              return 0LL;
            }

            if (v5) {
              uint64_t v6 = v5;
            }
            unint64_t result = *(void *)(v2 + 8);
            if (result && (result & 7) == 0) {
              return sub_1000AFBA4(result, 0LL, 0x14u);
            }
          }
        }
      }
    }
  }

  __break(0x5516u);
  return result;
}

BOOL sub_1000B4844(BOOL result)
{
  if (result && !(result & 7)) {
    return !sub_100087580(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000B486C(uint64_t result, int a2, uint64_t a3)
{
  if (result)
  {
    uint64_t v3 = result;
    if ((result & 7) == 0)
    {
      if (a2)
      {
        uint64_t v5 = 4LL;
        sub_1000CEAEC( 0,  4,  "%s:%d Unknown id(%d) value=%d\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp",  4583,  a2,  a3);
        return v5;
      }

      unint64_t result = *(void *)(result + 8);
      if (result)
      {
        if ((result & 7) == 0)
        {
          sub_1000775F4(result, 4LL, a3);
          unint64_t result = *(void *)(v3 + 8);
          if (result)
          {
            if ((result & 7) == 0)
            {
              sub_100077544(result, 2u, a3);
              return 0LL;
            }
          }
        }
      }
    }
  }

  __break(0x5516u);
  return result;
}

BOOL sub_1000B491C(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_13;
  }
  if ((_DWORD)a2) {
    goto LABEL_14;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  if (!v3 || (v3 & 7) != 0 || ((v3 + 16) & 7) != 0)
  {
LABEL_13:
    __break(0x5516u);
LABEL_14:
    sub_1000D28E0(a2);
  }

  if ((*(unsigned int (**)(uint64_t, uint64_t))(*(void *)(v3 + 16) + 96LL))(v3 + 16, 4LL) == 4)
  {
    uint64_t v4 = *(void *)(a1 + 8);
    if (v4 && (v4 & 7) == 0 && ((v4 + 16) & 7) == 0) {
      return (*(unsigned int (**)(uint64_t, uint64_t))(*(void *)(v4 + 16) + 96LL))(v4 + 16, 8LL) == 2;
    }
    goto LABEL_13;
  }

  return 0LL;
}

uint64_t sub_1000B49C4(uint64_t result, int a2, int a3)
{
  if (result)
  {
    uint64_t v3 = result;
    if ((result & 7) == 0)
    {
      if (a2)
      {
        uint64_t v5 = 4LL;
        sub_1000CEAEC( 0,  4,  "%s:%d Unknown or invalid id(%d) value=%d\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp",  4648,  a2,  a3);
        return v5;
      }

      unint64_t result = *(void *)(result + 8);
      if (result)
      {
        if ((result & 7) == 0)
        {
          sub_1000775F4(result, 4LL, a3 != 0);
          unint64_t result = *(void *)(v3 + 8);
          if (result)
          {
            if ((result & 7) == 0)
            {
              sub_100077544(result, 2u, a3 != 0);
              return 0LL;
            }
          }
        }
      }
    }
  }

  __break(0x5516u);
  return result;
}

BOOL sub_1000B4A78(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_8;
  }
  if ((_DWORD)a2) {
    goto LABEL_9;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  if (!v2 || (v2 & 7) != 0 || ((v2 + 16) & 7) != 0)
  {
LABEL_8:
    __break(0x5516u);
LABEL_9:
    sub_1000D28E0(a2);
  }

  return (*(unsigned int (**)(uint64_t, uint64_t))(*(void *)(v2 + 16) + 96LL))(v2 + 16, 4LL) == 4;
}

void *sub_1000B4AD8(void *result, uint64_t a2, uint64_t a3)
{
  if (!result
    || (result & 7) != 0
    || (unint64_t result = sub_1000B04A8(result, a3, a2, 0xAu, 1u, 1u, 0LL, 0LL, 0LL, (uint64_t)&unk_10011D084, 1u),
        *unint64_t result = off_100107828,
        (uint64_t v3 = (void *)result[7]) == 0LL)
    || (v3 & 7) != 0
    || (*v3 = 0LL, uint64_t v4 = v3 + 1, (v4 & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    *uint64_t v4 = 0;
  }

  return result;
}

void sub_1000B4B64(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    unint64_t v1 = (void *)sub_1000B0570(a1);
    operator delete(v1);
  }

unint64_t sub_1000B4B88(unint64_t result, int a2)
{
  if (result)
  {
    unint64_t v2 = result;
    if ((result & 7) == 0)
    {
      unint64_t result = *(void *)(result + 16);
      if (result && (result & 7) == 0)
      {
        uint64_t v5 = sub_10001864C(result);
        unint64_t result = *(void *)(v2 + 16);
        if (result)
        {
          if ((result & 7) == 0)
          {
            uint64_t v6 = sub_1000569D8(result);
            if (a2)
            {
              sub_1000CEAEC( 0,  4,  "%s:%d Unknown id(%d)\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp",  4800,  a2);
              return 0LL;
            }

            if (v5) {
              uint64_t v6 = v5;
            }
            unint64_t result = *(void *)(v2 + 8);
            if (result && (result & 7) == 0) {
              return sub_1000AFBA4(result, 0LL, 0);
            }
          }
        }
      }
    }
  }

  __break(0x5516u);
  return result;
}

BOOL sub_1000B4C68(BOOL result)
{
  if (result && !(result & 7)) {
    return !sub_100087580(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000B4C90(uint64_t result, int a2, uint64_t a3)
{
  if (result)
  {
    uint64_t v3 = result;
    if ((result & 7) == 0)
    {
      unint64_t result = *(void *)(result + 16);
      if (result && (result & 7) == 0)
      {
        uint64_t v7 = sub_10001864C(result);
        unint64_t result = *(void *)(v3 + 16);
        if (result)
        {
          if ((result & 7) == 0)
          {
            uint64_t v8 = sub_1000569D8(result);
            if (!v7) {
              uint64_t v7 = v8;
            }
            if (a2)
            {
              int v12 = a3;
              uint64_t v9 = 4LL;
              sub_1000CEAEC( 0,  4,  "%s:%d Unknown id(%d) value=%d\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp",  4850,  a2,  v12);
              return v9;
            }

            unint64_t result = sub_100042AC4();
            if (result)
            {
              uint64_t v10 = result;
              if ((result & 7) == 0)
              {
                uint64_t v11 = sub_1000C0034(*(void *)(v3 + 16));
                (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)v10 + 144LL))(v10, v7, a3, v11);
                return 0LL;
              }
            }
          }
        }
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000B4D84(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_16;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4 || (v4 & 7) != 0) {
    goto LABEL_16;
  }
  uint64_t v2 = a2;
  uint64_t v6 = sub_10001864C(v4);
  uint64_t v7 = *(void *)(a1 + 16);
  if (!v7 || (v7 & 7) != 0) {
    goto LABEL_16;
  }
  uint64_t v8 = sub_1000569D8(v7);
  if ((_DWORD)v2) {
    goto LABEL_17;
  }
  uint64_t v9 = v8;
  uint64_t v10 = sub_100042AC4();
  if (!v10 || (uint64_t v2 = v10, (v10 & 7) != 0))
  {
LABEL_16:
    __break(0x5516u);
LABEL_17:
    sub_1000D28E0(v2);
  }

  if (!v6) {
    uint64_t v6 = v9;
  }
  uint64_t v11 = sub_1000C0034(*(void *)(a1 + 16));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2 + 152LL))(v2, v6, v11);
}

uint64_t sub_1000B4E34(uint64_t result, int a2, int a3)
{
  if (result)
  {
    uint64_t v3 = result;
    if ((result & 7) == 0)
    {
      unint64_t result = *(void *)(result + 16);
      if (result && (result & 7) == 0)
      {
        uint64_t v7 = sub_10001864C(result);
        unint64_t result = *(void *)(v3 + 16);
        if (result)
        {
          if ((result & 7) == 0)
          {
            uint64_t v8 = sub_1000569D8(result);
            if (!v7) {
              uint64_t v7 = v8;
            }
            if (a2)
            {
              int v12 = a3;
              uint64_t v9 = 4LL;
              sub_1000CEAEC( 0,  4,  "%s:%d Unknown or invalid id(%d) value=%d\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp",  4917,  a2,  v12);
              return v9;
            }

            unint64_t result = sub_100042AC4();
            if (result)
            {
              uint64_t v10 = result;
              if ((result & 7) == 0)
              {
                uint64_t v11 = sub_1000C0034(*(void *)(v3 + 16));
                (*(void (**)(uint64_t, uint64_t, BOOL, uint64_t))(*(void *)v10 + 144LL))( v10,  v7,  a3 != 0,  v11);
                return 0LL;
              }
            }
          }
        }
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000B4F2C(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_16;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4 || (v4 & 7) != 0) {
    goto LABEL_16;
  }
  uint64_t v2 = a2;
  uint64_t v6 = sub_10001864C(v4);
  uint64_t v7 = *(void *)(a1 + 16);
  if (!v7 || (v7 & 7) != 0) {
    goto LABEL_16;
  }
  uint64_t v8 = sub_1000569D8(v7);
  if ((_DWORD)v2) {
    goto LABEL_17;
  }
  uint64_t v9 = v8;
  uint64_t v10 = sub_100042AC4();
  if (!v10 || (uint64_t v2 = v10, (v10 & 7) != 0))
  {
LABEL_16:
    __break(0x5516u);
LABEL_17:
    sub_1000D28E0(v2);
  }

  if (!v6) {
    uint64_t v6 = v9;
  }
  uint64_t v11 = sub_1000C0034(*(void *)(a1 + 16));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2 + 152LL))(v2, v6, v11);
}

uint64_t sub_1000B4FE0(uint64_t result, uint64_t a2)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, void, uint64_t, void, void))(*(void *)result + 72LL))( result,  0LL,  a2,  0LL,  0LL);
  }
  __break(0x5516u);
  return result;
}

void *sub_1000B500C(void *result, uint64_t a2, uint64_t a3)
{
  if (!result
    || (result & 7) != 0
    || (unint64_t result = sub_1000B04A8(result, a3, a2, 0xBu, 1u, 1u, 0LL, 0LL, 0LL, (uint64_t)&unk_10011D088, 1u),
        *unint64_t result = off_1001078F8,
        (uint64_t v3 = (void *)result[7]) == 0LL)
    || (v3 & 7) != 0
    || (*v3 = 0LL, uint64_t v4 = v3 + 1, (v4 & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    *uint64_t v4 = 0;
  }

  return result;
}

void sub_1000B5098(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    unint64_t v1 = (void *)sub_1000B0570(a1);
    operator delete(v1);
  }

unint64_t sub_1000B50BC(unint64_t result, int a2)
{
  if (result)
  {
    unint64_t v2 = result;
    if ((result & 7) == 0)
    {
      unint64_t result = *(void *)(result + 16);
      if (result && (result & 7) == 0)
      {
        uint64_t v5 = sub_10001864C(result);
        unint64_t result = *(void *)(v2 + 16);
        if (result)
        {
          if ((result & 7) == 0)
          {
            uint64_t v6 = sub_1000569D8(result);
            if (a2)
            {
              sub_1000CEAEC( 0,  4,  "%s:%d Unknown id(%d)\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp",  5073,  a2);
              return 0LL;
            }

            if (v5) {
              uint64_t v6 = v5;
            }
            unint64_t result = *(void *)(v2 + 8);
            if (result && (result & 7) == 0) {
              return sub_1000AFBA4(result, 0LL, 0);
            }
          }
        }
      }
    }
  }

  __break(0x5516u);
  return result;
}

BOOL sub_1000B519C(BOOL result)
{
  if (result && !(result & 7)) {
    return !sub_100087580(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000B51C4(uint64_t result, int a2, uint64_t a3)
{
  if (result)
  {
    uint64_t v3 = result;
    if ((result & 7) == 0)
    {
      unint64_t result = *(void *)(result + 16);
      if (result && (result & 7) == 0)
      {
        uint64_t v7 = sub_10001864C(result);
        unint64_t result = *(void *)(v3 + 16);
        if (result)
        {
          if ((result & 7) == 0)
          {
            uint64_t v8 = sub_1000569D8(result);
            if (v7) {
              uint64_t v9 = v7;
            }
            else {
              uint64_t v9 = v8;
            }
            if (a2)
            {
              int v11 = a3;
              uint64_t v10 = 4LL;
              sub_1000CEAEC( 0,  4,  "%s:%d Unknown id(%d) value=%d\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp",  5122,  a2,  v11);
              return v10;
            }

            unint64_t result = sub_100042AC4();
            if (result && (result & 7) == 0)
            {
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)result + 160LL))(result, a3, v9);
              return 0LL;
            }
          }
        }
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000B52A4(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_17;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4 || (v4 & 7) != 0) {
    goto LABEL_17;
  }
  uint64_t v2 = a2;
  uint64_t v6 = sub_10001864C(v4);
  uint64_t v7 = *(void *)(a1 + 16);
  if (!v7 || (v7 & 7) != 0) {
    goto LABEL_17;
  }
  uint64_t v8 = sub_1000569D8(v7);
  if ((_DWORD)v2) {
    goto LABEL_18;
  }
  uint64_t v9 = v8;
  uint64_t v10 = sub_100042AC4();
  if (!v10 || (v10 & 7) != 0)
  {
LABEL_17:
    __break(0x5516u);
LABEL_18:
    sub_1000D28E0(v2);
  }

  if (v6) {
    uint64_t v11 = v6;
  }
  else {
    uint64_t v11 = v9;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v10 + 168LL))(v10, v11);
}

uint64_t sub_1000B533C(uint64_t result, int a2, int a3)
{
  if (result)
  {
    uint64_t v3 = result;
    if ((result & 7) == 0)
    {
      unint64_t result = *(void *)(result + 16);
      if (result && (result & 7) == 0)
      {
        uint64_t v7 = sub_10001864C(result);
        unint64_t result = *(void *)(v3 + 16);
        if (result)
        {
          if ((result & 7) == 0)
          {
            uint64_t v8 = sub_1000569D8(result);
            if (v7) {
              uint64_t v9 = v7;
            }
            else {
              uint64_t v9 = v8;
            }
            if (a2)
            {
              int v11 = a3;
              uint64_t v10 = 4LL;
              sub_1000CEAEC( 0,  4,  "%s:%d Unknown or invalid id(%d) value=%d\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapPrefsMgr.cpp",  5187,  a2,  v11);
              return v10;
            }

            unint64_t result = sub_100042AC4();
            if (result && (result & 7) == 0)
            {
              (*(void (**)(uint64_t, BOOL, uint64_t))(*(void *)result + 160LL))(result, a3 != 0, v9);
              return 0LL;
            }
          }
        }
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000B541C(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_17;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4 || (v4 & 7) != 0) {
    goto LABEL_17;
  }
  uint64_t v2 = a2;
  uint64_t v6 = sub_10001864C(v4);
  uint64_t v7 = *(void *)(a1 + 16);
  if (!v7 || (v7 & 7) != 0) {
    goto LABEL_17;
  }
  uint64_t v8 = sub_1000569D8(v7);
  if ((_DWORD)v2) {
    goto LABEL_18;
  }
  uint64_t v9 = v8;
  uint64_t v10 = sub_100042AC4();
  if (!v10 || (v10 & 7) != 0)
  {
LABEL_17:
    __break(0x5516u);
LABEL_18:
    sub_1000D28E0(v2);
  }

  if (v6) {
    uint64_t v11 = v6;
  }
  else {
    uint64_t v11 = v9;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v10 + 168LL))(v10, v11);
}

void *sub_1000B54B8(void *result, uint64_t a2, uint64_t a3)
{
  if (!result) {
    goto LABEL_7;
  }
  unint64_t result = sub_1000B04A8(result, a3, a2, 0xCu, 1u, 1u, 0LL, 0LL, 0LL, (uint64_t)&unk_10011D08C, 1u);
  *unint64_t result = off_1001079C8;
  *((_WORD *)result + 46) = 0;
  uint64_t v3 = (void *)result[7];
  if (!v3
    || (v3 & 7) != 0
    || (*v3 = &qword_10011D048, uint64_t v4 = v3 + 1, byte_10011D050 = 0, dword_10011D054 = 0, (v4 & 7) != 0))
  {
LABEL_7:
    __break(0x5516u);
  }

  else
  {
    *uint64_t v4 = 0;
  }

  return result;
}

void sub_1000B5558(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    unint64_t v1 = (void *)sub_1000B0570(a1);
    operator delete(v1);
  }

unint64_t sub_1000B557C(unint64_t result, int a2)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_8;
  }
  if (a2)
  {
    syslog(4, "Unknown id(%d)\n", a2);
    return 0LL;
  }

  unint64_t result = *(void *)(result + 8);
  if (result)
  {
    if ((result & 7) == 0) {
      return sub_1000AFBA4(result, 0LL, 0x1Fu);
    }
  }

BOOL sub_1000B55E4(BOOL result)
{
  if (result && !(result & 7)) {
    return !sub_100087580(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000B560C(uint64_t result, int a2, int a3)
{
  if (!result) {
    goto LABEL_23;
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_23;
  }
  if (a2)
  {
    uint64_t v5 = 4LL;
    syslog(4, "Unknown id(%d) value=%d\n", a2, a3);
    return v5;
  }

  if (*(unsigned __int8 *)(result + 93) < 2u)
  {
    if (!*(_BYTE *)(result + 93))
    {
LABEL_18:
      uint64_t v7 = *(void *)(v3 + 56);
      if (v7)
      {
        if ((v7 & 7) == 0)
        {
          uint64_t v8 = (int *)(v7 + 16);
          if ((v8 & 7) == 0)
          {
            uint64_t v5 = 0LL;
            *uint64_t v8 = a3;
            return v5;
          }
        }
      }

      goto LABEL_23;
    }

    if (!a3) {
      goto LABEL_14;
    }
    unint64_t result = sub_1000451B0();
    if (!result || (result & 7) != 0) {
      goto LABEL_23;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 208LL))(result))
    {
      unint64_t result = sub_10004783C();
      if (result && (result & 7) == 0)
      {
        uint64_t v6 = 57LL;
LABEL_17:
        unint64_t result = (*(uint64_t (**)(void))(*(void *)result + 8 * v6))();
        *(_BYTE *)(v3 + 92) = a3;
        goto LABEL_18;
      }
    }

    else
    {
LABEL_14:
      unint64_t result = sub_10004783C();
      if (result && (result & 7) == 0)
      {
        uint64_t v6 = 58LL;
        goto LABEL_17;
      }
    }

BOOL sub_1000B5704(BOOL result, int a2)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
LABEL_9:
    __break(0x550Au);
    return result;
  }

  if (a2)
  {
    syslog(4, "Unknown or invalid id(%d)\n", a2);
    return 0LL;
  }

  unsigned int v2 = *(unsigned __int8 *)(result + 92);
  if (v2 >= 2) {
    goto LABEL_9;
  }
  return v2 != 0;
}

uint64_t sub_1000B5764(uint64_t result, uint64_t a2, int a3)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t, BOOL))(*(void *)result + 136LL))(result, a2, a3 != 0);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000B5788(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 112LL))(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000B57B4(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    *(_BYTE *)(result + 93) = a4;
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t, void))(*(void *)result + 72LL))( result,  0LL,  a2,  a3,  0LL);
  }

  return result;
}

void sub_1000B57E8(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

void sub_1000B57FC(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

uint64_t sub_1000B5810(uint64_t result, unsigned int a2, uint64_t a3, int a4)
{
  if (!result) {
    goto LABEL_24;
  }
  uint64_t v4 = result;
  if ((result & 7) != 0) {
    goto LABEL_24;
  }
  uint64_t v5 = *(void *)(result + 56);
  if (__CFADD__(v5, 24LL * a2))
  {
LABEL_25:
    __break(0x5513u);
    goto LABEL_26;
  }

  if (!v5) {
    goto LABEL_24;
  }
  uint64_t v6 = v5 + 24LL * a2;
  if ((v6 & 7) != 0) {
    goto LABEL_24;
  }
  uint64_t v7 = *(void *)v6;
  if (!*(void *)v6) {
    return result;
  }
  if ((v7 & 7) != 0 || ((v7 + 8) & 7) != 0) {
    goto LABEL_24;
  }
  if (!*(_BYTE *)(v7 + 8)) {
    return result;
  }
  if ((((_DWORD)v6 + 10) & 1) != 0) {
    goto LABEL_24;
  }
  if (*(unsigned __int8 *)(v6 + 10) > 1u)
  {
LABEL_26:
    __break(0x550Au);
    return result;
  }

  if (!*(_BYTE *)(v6 + 10)) {
    return result;
  }
  *(_BYTE *)(v7 + _Block_object_dispose((const void *)(v1 - 120), 8) = 0;
  uint64_t v9 = (_DWORD *)(v7 + 12);
  if ((v9 & 3) != 0
    || (uint64_t v10 = v5 + 24LL * a2 + 16, (v10 & 7) != 0)
    || (*(_DWORD *)uint64_t v10 = *v9, ((v6 + 8) & 7) != 0))
  {
LABEL_24:
    __break(0x5516u);
    goto LABEL_25;
  }

  *(_BYTE *)(v6 + _Block_object_dispose((const void *)(v1 - 120), 8) = 1;
  *(_BYTE *)(result + 36) = 1;
  if (a4)
  {
    unint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 152LL))(result);
    if ((_DWORD)result) {
      return (*(uint64_t (**)(uint64_t, void))(*(void *)v4 + 40LL))(v4, 0LL);
    }
  }

  return result;
}

uint64_t sub_1000B592C(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_35;
  }
  unsigned int v2 = (void *)result;
  if ((result & 7) != 0) {
    goto LABEL_35;
  }
  uint64_t v4 = *(void *)(result + 80);
  if (!v4) {
    goto LABEL_35;
  }
  uint64_t v5 = (int *)(v4 + 4LL * a2);
  int v6 = *v5;
  if (v6)
  {
LABEL_34:
    __break(0x5518u);
    goto LABEL_35;
  }

  unsigned int v7 = a2;
  uint64_t v8 = *(void *)(result + 56);
  if (!v8) {
    goto LABEL_35;
  }
  uint64_t v9 = v8 + 24LL * a2;
  if ((v9 & 7) != 0) {
    goto LABEL_35;
  }
  uint64_t v10 = (unsigned __int8 *)(v9 + 10);
  unsigned int v11 = *v10;
  if (v11 > 1) {
    goto LABEL_37;
  }
  unint64_t v12 = 24LL * a2;
  if (v11)
  {
    unint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 152LL))(result);
    uint64_t v13 = v2[7];
    unint64_t v14 = ~v13;
    if ((result & 1) == 0) {
      goto LABEL_29;
    }
    if (v12 > v14) {
      goto LABEL_36;
    }
    if (v13)
    {
      uint64_t v15 = v13 + 24LL * v7;
      if ((v15 & 7) == 0)
      {
        unsigned int v16 = *(unsigned __int8 *)(v15 + 11);
        if (v16 > 1) {
          goto LABEL_37;
        }
        if (!v16) {
          goto LABEL_29;
        }
        goto LABEL_21;
      }
    }

uint64_t sub_1000B5AD8(uint64_t result, uint64_t a2, int a3, int a4, char a5)
{
  if (!result) {
    goto LABEL_38;
  }
  uint64_t v5 = result;
  if ((result & 7) != 0) {
    goto LABEL_38;
  }
  unsigned int v6 = *(_DWORD *)(result + 24);
  if (v6 >= 0x10) {
    goto LABEL_39;
  }
  if (v6 != 2)
  {
    unint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 128LL))(result, a2);
    if (!(_DWORD)result) {
      return 4LL;
    }
  }

  uint64_t v11 = *(void *)(v5 + 80);
  if (!v11) {
    goto LABEL_38;
  }
  unint64_t v12 = (int *)(v11 + 4LL * a2);
  int v13 = *v12;
  if (v13 != 1)
  {
    __break(0x5518u);
    goto LABEL_38;
  }

  uint64_t v14 = *(void *)(v5 + 56);
  if (!v14
    || (uint64_t v15 = v14 + 24LL * a2, (v15 & 7) != 0)
    || (uint64_t v16 = v14 + 24LL * a2 + 16, (v16 & 7) != 0)
    || (*(_DWORD *)uint64_t v16 = a3, (((_BYTE)v15 + 8) & 7) != 0)
    || (*(_BYTE *)(v15 + 8) = 1, *(_BYTE *)(v5 + 36) = 1, uint64_t v17 = (_BYTE *)(v15 + 10), (((_DWORD)v15 + 10) & 1) != 0))
  {
LABEL_38:
    __break(0x5516u);
    goto LABEL_39;
  }

  if (*v17 > 1u)
  {
LABEL_39:
    __break(0x550Au);
    goto LABEL_40;
  }

  if (*v17)
  {
    if (!a4) {
      goto LABEL_35;
    }
  }

  else
  {
    *uint64_t v17 = 1;
    if (!a4)
    {
LABEL_35:
      (*(void (**)(uint64_t, void))(*(void *)v5 + 40LL))(v5, 0LL);
      return 0LL;
    }
  }

  if ((a5 & 1) != 0) {
    goto LABEL_35;
  }
  uint64_t v18 = *(void *)v15;
  if (!v18) {
    goto LABEL_35;
  }
  if ((v18 & 7) != 0) {
    goto LABEL_38;
  }
  unsigned int v19 = (_BYTE *)(v18 + 8);
  if (*v19) {
    goto LABEL_35;
  }
  _BYTE *v19 = 1;
  unint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v5 + 120LL))(v5, a2);
  uint64_t v20 = *(void *)(v5 + 56);
  if (!__CFADD__(v20, 24LL * a2))
  {
    if (v20)
    {
      BOOL v21 = (uint64_t *)(v20 + 24LL * a2);
      if ((v21 & 7) == 0)
      {
        uint64_t v22 = *v21;
        if (v22)
        {
          if ((v22 & 7) == 0)
          {
            uint64_t v23 = (_DWORD *)(v22 + 12);
            if ((v23 & 3) == 0)
            {
              *uint64_t v23 = result;
              goto LABEL_35;
            }
          }
        }
      }
    }

    goto LABEL_38;
  }

uint64_t sub_1000B5CC4(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_35;
  }
  unsigned int v2 = (void *)result;
  if ((result & 7) != 0) {
    goto LABEL_35;
  }
  uint64_t v4 = *(void *)(result + 80);
  if (!v4) {
    goto LABEL_35;
  }
  uint64_t v5 = (int *)(v4 + 4LL * a2);
  int v6 = *v5;
  if (v6 != 1)
  {
LABEL_34:
    __break(0x5518u);
    goto LABEL_35;
  }

  unsigned int v7 = a2;
  uint64_t v8 = *(void *)(result + 56);
  if (!v8) {
    goto LABEL_35;
  }
  uint64_t v9 = v8 + 24LL * a2;
  if ((v9 & 7) != 0) {
    goto LABEL_35;
  }
  uint64_t v10 = (unsigned __int8 *)(v9 + 10);
  unsigned int v11 = *v10;
  if (v11 > 1) {
    goto LABEL_37;
  }
  unint64_t v12 = 24LL * a2;
  if (v11)
  {
    unint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 152LL))(result);
    uint64_t v13 = v2[7];
    unint64_t v14 = ~v13;
    if ((result & 1) == 0) {
      goto LABEL_29;
    }
    if (v12 > v14) {
      goto LABEL_36;
    }
    if (v13)
    {
      uint64_t v15 = v13 + 24LL * v7;
      if ((v15 & 7) == 0)
      {
        unsigned int v16 = *(unsigned __int8 *)(v15 + 11);
        if (v16 > 1) {
          goto LABEL_37;
        }
        if (!v16) {
          goto LABEL_29;
        }
        goto LABEL_21;
      }
    }

uint64_t sub_1000B5E6C(uint64_t result, uint64_t a2, _BYTE *a3, int a4)
{
  if (!result) {
    goto LABEL_25;
  }
  uint64_t v6 = result;
  if ((result & 7) != 0) {
    goto LABEL_25;
  }
  unsigned int v7 = *(_DWORD *)(result + 28);
  if (v7 > 3)
  {
LABEL_33:
    __break(0x550Au);
    return result;
  }

  uint64_t v4 = a3;
  uint64_t v5 = a2;
  if (v7 != 1) {
    goto LABEL_26;
  }
  if (!*(void *)(result + 40)) {
    sub_1000D276C();
  }
  unint64_t result = *(void *)(result + 48);
  if (!result)
  {
    __break(0x5518u);
    goto LABEL_33;
  }

  pthread_mutex_lock((pthread_mutex_t *)result);
  uint64_t v18 = 0xAAAAAAAAAAAAAAAALL;
  uint64_t v9 = *(void *)(v6 + 40);
  if (!v9 || (v9 & 7) != 0 || ((v9 + 8) & 7) != 0)
  {
LABEL_25:
    __break(0x5516u);
LABEL_26:
    unint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v6 + 80LL))(v6, v5);
    char v17 = 0;
    if (!v4) {
      return result;
    }
    goto LABEL_27;
  }

  int v10 = 0;
  char v11 = a4 ^ 1;
  uint64_t v18 = *(void *)(v9 + 8);
  while (v18 != v9)
  {
    unint64_t v12 = sub_10000D014(&v18);
    uint64_t v13 = *v12;
    if (*v12) {
      BOOL v14 = (*v12 & 7) == 0;
    }
    else {
      BOOL v14 = 0;
    }
    if (v14)
    {
      int v15 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v13 + 80LL))(*v12, v5);
      int v16 = v13 == v6 ? v10 : 1;
      if (v15 != a4) {
        int v10 = v16;
      }
      else {
        char v11 = v15;
      }
      sub_10000D048(&v18);
      uint64_t v9 = *(void *)(v6 + 40);
      if (v9)
      {
        if ((v9 & 7) == 0) {
          continue;
        }
      }
    }

    goto LABEL_25;
  }

  pthread_mutex_unlock(*(pthread_mutex_t **)(v6 + 48));
  char v17 = v10 & 1;
  unint64_t result = v11 & 1;
  if (v4) {
LABEL_27:
  }
    *uint64_t v4 = v17;
  return result;
}

uint64_t sub_1000B5FD0(uint64_t result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
LABEL_15:
    __break(0x5516u);
    goto LABEL_16;
  }

  unsigned int v2 = *(_DWORD *)(result + 28);
  if (v2 < 4)
  {
    if (v2 != 2) {
      return 1LL;
    }
    unint64_t result = *(void *)(result + 64);
    if (!result) {
      return 1LL;
    }
    if ((result & 7) == 0)
    {
      pthread_mutex_lock((pthread_mutex_t *)result);
      uint64_t v3 = sub_1000B6068(v1) ? sub_1000B60FC(v1) : 0LL;
      unint64_t result = *(void *)(v1 + 64);
      if (result)
      {
        if ((result & 7) == 0)
        {
          pthread_mutex_unlock((pthread_mutex_t *)result);
          return v3;
        }
      }
    }

    goto LABEL_15;
  }

uint64_t sub_1000B6068(uint64_t result)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_14;
  }
  unsigned int v1 = *(_DWORD *)(result + 28);
  if (v1 >= 4) {
    goto LABEL_15;
  }
  if (v1 != 2) {
    return 1LL;
  }
  uint64_t v2 = *(void *)(result + 64);
  if (!v2) {
    return 1LL;
  }
  if (((v2 | (v2 + 72)) & 7) != 0
    || (((_BYTE)v2 + 88) & 7) != 0
    || (uint64_t v3 = (void *)(v2 + 64), ((v2 + 64) & 7) != 0))
  {
LABEL_14:
    __break(0x5516u);
    goto LABEL_15;
  }

  unint64_t v4 = *(void *)(v2 + 88);
  if (*v3 != *(void *)(result + 16))
  {
    unint64_t v5 = 0LL;
    return v4 <= v5;
  }

  unint64_t v5 = *(unsigned __int8 *)(result + 37);
  if (v5 <= 1) {
    return v4 <= v5;
  }
LABEL_15:
  __break(0x550Au);
  return result;
}

uint64_t sub_1000B60FC(uint64_t result)
{
  if (!result) {
    goto LABEL_23;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_23;
  }
  unsigned int v2 = *(_DWORD *)(result + 28);
  if (v2 < 4)
  {
    if (v2 != 2) {
      return 1LL;
    }
    uint64_t v3 = *(void *)(result + 64);
    if (!v3) {
      return 1LL;
    }
    unint64_t v5 = (void *)(result + 16);
    uint64_t v4 = *(void *)(result + 16);
    if (!v4) {
      goto LABEL_19;
    }
    if ((v3 & 7) != 0 || (((_BYTE)v3 + 64) & 7) != 0) {
      goto LABEL_23;
    }
    if (*(void *)(v3 + 64) == v4) {
      goto LABEL_19;
    }
    if (*(unsigned __int8 *)(result + 37) <= 1u)
    {
      if (!*(_BYTE *)(result + 37))
      {
        unint64_t result = v3 + 72;
        unint64_t result = sub_100020DF4(result, (void *)(v1 + 16));
        *(_BYTE *)(v1 + 37) = 1;
      }

      *(_BYTE *)(v1 + 36) = 1;
      uint64_t v3 = *(void *)(v1 + 64);
      if (v3 && (v3 & 7) == 0 && (((_BYTE)v3 + 64) & 7) == 0)
      {
        if (!*(void *)(v3 + 64)) {
          *(void *)(v3 + 64) = *v5;
        }
LABEL_19:
        if ((v3 & 7) == 0)
        {
          uint64_t v6 = (void *)(v3 + 64);
        }
      }

uint64_t sub_1000B6204(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
LABEL_11:
    __break(0x5516u);
    goto LABEL_12;
  }

  unsigned int v1 = *(_DWORD *)(result + 28);
  if (v1 < 4)
  {
    if (v1 != 2) {
      return 1LL;
    }
    uint64_t v2 = *(void *)(result + 64);
    if (!v2) {
      return 1LL;
    }
    if ((v2 & 7) == 0)
    {
      uint64_t v3 = (uint64_t *)(v2 + 64);
      if ((v3 & 7) == 0)
      {
        uint64_t v4 = *v3;
        if (v4) {
          return v4 == *(void *)(result + 16);
        }
        return 1LL;
      }
    }

    goto LABEL_11;
  }

uint64_t sub_1000B6268(uint64_t result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
LABEL_12:
    __break(0x5516u);
    goto LABEL_13;
  }

  unsigned int v2 = *(_DWORD *)(result + 28);
  if (v2 < 4)
  {
    if (v2 != 2) {
      return 1LL;
    }
    unint64_t result = *(void *)(result + 64);
    if (!result) {
      return 1LL;
    }
    if ((result & 7) == 0)
    {
      pthread_mutex_lock((pthread_mutex_t *)result);
      uint64_t v3 = sub_1000B6068(v1);
      unint64_t result = *(void *)(v1 + 64);
      if (result)
      {
        if ((result & 7) == 0)
        {
          pthread_mutex_unlock((pthread_mutex_t *)result);
          return v3;
        }
      }
    }

    goto LABEL_12;
  }

uint64_t sub_1000B62EC(uint64_t result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
LABEL_12:
    __break(0x5516u);
    goto LABEL_13;
  }

  unsigned int v2 = *(_DWORD *)(result + 28);
  if (v2 < 4)
  {
    if (v2 != 2) {
      return 1LL;
    }
    unint64_t result = *(void *)(result + 64);
    if (!result) {
      return 1LL;
    }
    if ((result & 7) == 0)
    {
      pthread_mutex_lock((pthread_mutex_t *)result);
      uint64_t v3 = sub_1000B60FC(v1);
      unint64_t result = *(void *)(v1 + 64);
      if (result)
      {
        if ((result & 7) == 0)
        {
          pthread_mutex_unlock((pthread_mutex_t *)result);
          return v3;
        }
      }
    }

    goto LABEL_12;
  }

uint64_t sub_1000B6370(uint64_t result)
{
  if (!result) {
    goto LABEL_28;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_28;
  }
  unsigned int v2 = *(_DWORD *)(result + 28);
  if (v2 >= 4) {
    goto LABEL_29;
  }
  if (v2 != 2) {
    return result;
  }
  unint64_t result = *(void *)(result + 64);
  if (!result) {
    return result;
  }
  if ((result & 7) != 0) {
    goto LABEL_28;
  }
  unint64_t result = pthread_mutex_lock((pthread_mutex_t *)result);
  if (*(unsigned __int8 *)(v1 + 37) > 1u)
  {
LABEL_29:
    __break(0x550Au);
    return result;
  }

  if (!*(_BYTE *)(v1 + 37)) {
    goto LABEL_14;
  }
  uint64_t v3 = *(void *)(v1 + 64);
  if (!v3 || (v3 & 7) != 0 || (unint64_t result = v3 + 72, ((v3 + 72) & 7) != 0) || ((v1 + 16) & 7) != 0)
  {
LABEL_28:
    __break(0x5516u);
    goto LABEL_29;
  }

  sub_10005B598((void *)result, (void *)(v1 + 16));
  *(_BYTE *)(v1 + 37) = 0;
LABEL_14:
  *(_BYTE *)(v1 + 36) = 0;
  unint64_t result = *(void *)(v1 + 64);
  if (!result || (result & 7) != 0 || ((result + 64) & 7) != 0) {
    goto LABEL_28;
  }
  uint64_t v4 = *(void *)(result + 64);
  if (!v4 || v4 != *(void *)(v1 + 16)) {
    return pthread_mutex_unlock((pthread_mutex_t *)result);
  }
  *(void *)(result + 64) = 0LL;
  if ((((_BYTE)result + 72) & 7) != 0 || (((_BYTE)result + 88) & 7) != 0) {
    goto LABEL_28;
  }
  uint64_t v5 = *(void *)(result + 88);
  unint64_t result = pthread_mutex_unlock((pthread_mutex_t *)result);
  if (v5)
  {
    unint64_t result = sub_1000B6CE0();
    if (result && (result & 7) == 0)
    {
      if (*(_DWORD *)(v1 + 24) <= 0xFu) {
        return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 48LL))(result, 2048LL);
      }
      goto LABEL_29;
    }

    goto LABEL_28;
  }

  return result;
}

uint64_t sub_1000B64AC(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(unsigned int *)(result + 88);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000B64C4(uint64_t result, unsigned int a2)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_10;
  }
  if (*(_DWORD *)(result + 88) <= a2) {
    return 0xFFFFFFFFLL;
  }
  uint64_t v2 = *(void *)(result + 80);
  if (__CFADD__(v2, 4LL * a2)) {
    goto LABEL_11;
  }
  if (!v2 || (uint64_t v3 = (unsigned int *)(v2 + 4LL * a2), (v3 & 3) != 0))
  {
LABEL_10:
    __break(0x5516u);
LABEL_11:
    __break(0x5513u);
    goto LABEL_12;
  }

  unint64_t result = *v3;
  if ((result + 4) >= 8) {
LABEL_12:
  }
    __break(0x550Au);
  return result;
}

pthread_mutex_t *sub_1000B6520(pthread_mutex_t *result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    result[1].__sig = 0LL;
    sub_100010C30(result[1].__opaque);
    pthread_mutex_init(v1, 0LL);
    return v1;
  }

  return result;
}

uint64_t sub_1000B6568(uint64_t result)
{
  if (!result
    || (uint64_t v1 = result, (result & 7) != 0)
    || (pthread_mutex_destroy((pthread_mutex_t *)result), unint64_t result = v1 + 72, ((v1 + 72) & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    sub_1000180FC(result);
    return v1;
  }

  return result;
}

void sub_1000B65B0(void *__p)
{
  else {
    operator delete(__p);
  }
}

pthread_mutex_t *sub_1000B65C4(pthread_mutex_t *result)
{
  if (result)
  {
    uint64_t v1 = result;
    if ((result & 7) == 0)
    {
      result->__sig = (uint64_t)off_100107D18;
      for (uint64_t i = 8LL; i != 1352; i += 96LL)
        unint64_t result = sub_1000B6520((pthread_mutex_t *)((char *)v1 + i));
      unint64_t v3 = 0LL;
      while (v3 <= ~(unint64_t)&v1[24].__opaque[32])
      {
        *(void *)&v1[24].__opaque[v3 + 32] = 0LL;
        *(void *)&v1[21].__opaque[v3] = 0LL;
        *(void *)&v1[22].__opaque[v3 + 48] = 0LL;
        v3 += 8LL;
        if (v3 == 112) {
          return v1;
        }
      }

      __break(0x5513u);
    }
  }

  __break(0x5516u);
  return result;
}

void sub_1000B6678(void *a1)
{
  else {
    sub_1000B66B0(a1);
  }
}

void sub_1000B668C(void *a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    sub_1000B66B0(a1);
    operator delete(v1);
  }

void sub_1000B66B0(void *a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
LABEL_25:
    __break(0x5516u);
  }

  else
  {
    uint64_t v2 = 0LL;
    *a1 = off_100107D18;
    unint64_t v3 = ~(unint64_t)(a1 + 197);
    unint64_t v4 = ~(unint64_t)(a1 + 169);
    unint64_t v5 = ~(unint64_t)(a1 + 183);
    while (1)
    {
      unint64_t v6 = 8 * v2;
      if (8 * v2 > v3) {
        break;
      }
      unsigned int v7 = &a1[v2 + 197];
      uint64_t v8 = *v7;
      if (*v7)
      {
        uint64_t v9 = *(void *)(v8 - 8);
        if (v9)
        {
          uint64_t v10 = -16 * v9;
          while ((v8 & 7) == 0)
          {
            v10 += 16LL;
            if (!v10) {
              goto LABEL_10;
            }
          }

          goto LABEL_25;
        }

uint64_t sub_1000B67FC(uint64_t a1)
{
  uint64_t result = sub_1000B6CE0();
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t, void, void, void))(*(void *)result + 48LL))( result,  0x4000LL,  *(unsigned int *)(a1 + 40),  *(void *)(a1 + 32),  0LL);
  }
  __break(0x5516u);
  return result;
}

void *sub_1000B6844@<X0>(void *result@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  if (!result {
    || (result & 7) != 0
  }
    || (unint64_t v4 = (char *)(result + 1), ((unint64_t)(result + 1) & 7) != 0)
    || (*(void *)(a3 + 16) = 0xAAAAAAAAAAAAAAAALL,
        uint64_t result = operator new(0x30uLL),
        *(void *)a3 = result,
        *(void *)(a3 + _Block_object_dispose((const void *)(v1 - 120), 8) = v4,
        (result & 7) != 0)
    || (((_BYTE)result + 32) & 7) != 0
    || (result[4] = *a2, *(_BYTE *)(a3 + 16) = 1, ((unint64_t)(result + 5) & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    result[5] = 0LL;
    *(_BYTE *)(a3 + 17) = 1;
  }

  return result;
}

void sub_1000B68D4(uint64_t a1, const char *a2)
{
}

uint64_t sub_1000B68DC()
{
  qword_10011C9A0 = 0LL;
  qword_10011C998 = 0LL;
  qword_10011C990 = (uint64_t)&qword_10011C998;
  __cxa_atexit((void (*)(void *))sub_1000AE5D0, &qword_10011C990, (void *)&_mh_execute_header);
  sub_1000B6520(&stru_10011C9A8);
  __cxa_atexit((void (*)(void *))sub_1000AE5E4, &stru_10011C9A8, (void *)&_mh_execute_header);
  sub_1000B6520(&stru_10011CA08);
  __cxa_atexit((void (*)(void *))sub_1000AE5E4, &stru_10011CA08, (void *)&_mh_execute_header);
  sub_1000B6520(&stru_10011CA68);
  __cxa_atexit((void (*)(void *))sub_1000AE5E4, &stru_10011CA68, (void *)&_mh_execute_header);
  sub_1000B6520(&stru_10011CAC8);
  __cxa_atexit((void (*)(void *))sub_1000AE5E4, &stru_10011CAC8, (void *)&_mh_execute_header);
  sub_1000B6520(&stru_10011CB28);
  __cxa_atexit((void (*)(void *))sub_1000AE5E4, &stru_10011CB28, (void *)&_mh_execute_header);
  sub_1000B6520(&stru_10011CB88);
  __cxa_atexit((void (*)(void *))sub_1000AE5E4, &stru_10011CB88, (void *)&_mh_execute_header);
  sub_1000B6520(&stru_10011CBE8);
  __cxa_atexit((void (*)(void *))sub_1000AE5E4, &stru_10011CBE8, (void *)&_mh_execute_header);
  sub_1000B6520(&stru_10011CC48);
  __cxa_atexit((void (*)(void *))sub_1000AE5E4, &stru_10011CC48, (void *)&_mh_execute_header);
  sub_1000B6520(&stru_10011CCA8);
  __cxa_atexit((void (*)(void *))sub_1000AE5E4, &stru_10011CCA8, (void *)&_mh_execute_header);
  sub_1000B6520(&stru_10011CD08);
  __cxa_atexit((void (*)(void *))sub_1000AE5E4, &stru_10011CD08, (void *)&_mh_execute_header);
  sub_1000B6520(&stru_10011CD68);
  __cxa_atexit((void (*)(void *))sub_1000AE5E4, &stru_10011CD68, (void *)&_mh_execute_header);
  sub_1000B6520(&stru_10011CDC8);
  __cxa_atexit((void (*)(void *))sub_1000AE5E4, &stru_10011CDC8, (void *)&_mh_execute_header);
  sub_1000B6520(&stru_10011CE28);
  __cxa_atexit((void (*)(void *))sub_1000AE5E4, &stru_10011CE28, (void *)&_mh_execute_header);
  sub_1000B6520(&stru_10011CE88);
  __cxa_atexit((void (*)(void *))sub_1000AE5E4, &stru_10011CE88, (void *)&_mh_execute_header);
  qword_10011CEE8 = (uint64_t)off_100107CE8;
  byte_10011CEF0 = 0;
  qword_10011CEF8 = (uint64_t)off_100107CE8;
  byte_10011CF00 = 0;
  qword_10011CF08 = (uint64_t)off_100107CE8;
  byte_10011CF10 = 0;
  __cxa_atexit((void (*)(void *))sub_1000AE5F8, &qword_10011CEE8, (void *)&_mh_execute_header);
  qword_10011CF18 = (uint64_t)off_100107CE8;
  byte_10011CF20 = 0;
  qword_10011CF28 = (uint64_t)off_100107CE8;
  byte_10011CF30 = 0;
  qword_10011CF38 = (uint64_t)off_100107CE8;
  byte_10011CF40 = 0;
  qword_10011CF48 = (uint64_t)off_100107CE8;
  byte_10011CF50 = 0;
  qword_10011CF58 = (uint64_t)off_100107CE8;
  byte_10011CF60 = 0;
  qword_10011CF68 = (uint64_t)off_100107CE8;
  byte_10011CF70 = 0;
  qword_10011CF78 = (uint64_t)off_100107CE8;
  byte_10011CF80 = 0;
  qword_10011CF88 = (uint64_t)off_100107CE8;
  byte_10011CF90 = 0;
  qword_10011CF98 = (uint64_t)off_100107CE8;
  byte_10011CFA0 = 0;
  __cxa_atexit((void (*)(void *))sub_1000AE624, &qword_10011CF18, (void *)&_mh_execute_header);
  qword_10011CFA8 = (uint64_t)off_100107CE8;
  byte_10011CFB0 = 0;
  __cxa_atexit((void (*)(void *))sub_1000AE698, &qword_10011CFA8, (void *)&_mh_execute_header);
  qword_10011CFB8 = (uint64_t)off_100107CE8;
  byte_10011CFC0 = 0;
  __cxa_atexit((void (*)(void *))sub_1000AE698, &qword_10011CFB8, (void *)&_mh_execute_header);
  qword_10011CFC8 = (uint64_t)off_100107CE8;
  byte_10011CFD0 = 0;
  __cxa_atexit((void (*)(void *))sub_1000AE698, &qword_10011CFC8, (void *)&_mh_execute_header);
  qword_10011CFD8 = (uint64_t)off_100107CE8;
  byte_10011CFE0 = 0;
  __cxa_atexit((void (*)(void *))sub_1000AE698, &qword_10011CFD8, (void *)&_mh_execute_header);
  qword_10011CFE8 = (uint64_t)off_100107CE8;
  byte_10011CFF0 = 0;
  __cxa_atexit((void (*)(void *))sub_1000AE698, &qword_10011CFE8, (void *)&_mh_execute_header);
  qword_10011CFF8 = (uint64_t)off_100107CE8;
  byte_10011D000 = 0;
  __cxa_atexit((void (*)(void *))sub_1000AE698, &qword_10011CFF8, (void *)&_mh_execute_header);
  qword_10011D008 = (uint64_t)off_100107CE8;
  byte_10011D010 = 0;
  __cxa_atexit((void (*)(void *))sub_1000AE698, &qword_10011D008, (void *)&_mh_execute_header);
  qword_10011D018 = (uint64_t)off_100107CE8;
  byte_10011D020 = 0;
  __cxa_atexit((void (*)(void *))sub_1000AE698, &qword_10011D018, (void *)&_mh_execute_header);
  qword_10011D028 = (uint64_t)off_100107CE8;
  byte_10011D030 = 0;
  __cxa_atexit((void (*)(void *))sub_1000AE698, &qword_10011D028, (void *)&_mh_execute_header);
  qword_10011D038 = (uint64_t)off_100107CE8;
  byte_10011D040 = 0;
  __cxa_atexit((void (*)(void *))sub_1000AE698, &qword_10011D038, (void *)&_mh_execute_header);
  qword_10011D048 = (uint64_t)off_100107CE8;
  byte_10011D050 = 0;
  __cxa_atexit((void (*)(void *))sub_1000AE698, &qword_10011D048, (void *)&_mh_execute_header);
  qword_10011D058 = (uint64_t)off_100107CE8;
  byte_10011D060 = 0;
  return __cxa_atexit((void (*)(void *))sub_1000AE698, &qword_10011D058, (void *)&_mh_execute_header);
}

uint64_t sub_1000B6CE0()
{
  if (qword_10011C6B0 != -1) {
    dispatch_once(&qword_10011C6B0, &stru_100107D78);
  }
  return qword_10011C6A8;
}

void sub_1000B6D20(id a1)
{
  uint64_t v1 = (uint64_t)operator new(0x218uLL);
  if ((v1 & 0xF) != 0 || (v1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    qword_10011C6A8 = sub_1000B6D58(v1);
  }
}

uint64_t sub_1000B6D58(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    if ((result & 7) == 0)
    {
      uint64_t v2 = sub_10008C0EC((void *)result);
      uint64_t result = sub_10005453C((uint64_t)v2);
      if (((v1 + 176) & 7) == 0)
      {
        *(void *)(v1 + 176) = off_100108090;
        if (((v1 + 184) & 7) == 0)
        {
          *(void *)(v1 + 184) = &off_1001080F0;
          if (((v1 + 192) & 7) == 0)
          {
            *(void *)uint64_t v1 = off_100107DA8;
            *(void *)(v1 + 176) = off_100107EC0;
            *(void *)(v1 + 184) = off_100107F20;
            *(void *)(v1 + 192) = off_100107F78;
            *(_BYTE *)(v1 + 200) = 0;
            sub_100010C30((void *)(v1 + 272));
            *(_BYTE *)(v1 + 432) = 0;
            *(_DWORD *)(v1 + 44_Block_object_dispose((const void *)(v1 - 120), 8) = 0;
            uint64_t result = (uint64_t)dispatch_source_create( (dispatch_source_type_t)&_dispatch_source_type_timer,  0LL,  0LL,  &_dispatch_main_q);
            *(void *)(v1 + 296) = result;
            if (!result) {
              goto LABEL_25;
            }
            handler[0] = _NSConcreteStackBlock;
            handler[1] = 0x40000000LL;
            handler[2] = sub_1000B7038;
            handler[3] = &unk_100107F90;
            handler[4] = v1;
            dispatch_source_set_event_handler((dispatch_source_t)result, handler);
            uint64_t result = *(void *)(v1 + 296);
            if (!result) {
              goto LABEL_25;
            }
            dispatch_source_set_timer((dispatch_source_t)result, 0xFFFFFFFFFFFFFFFFLL, 0xFFFFFFFFFFFFFFFFLL, 0LL);
            uint64_t result = *(void *)(v1 + 296);
            if (!result) {
              goto LABEL_25;
            }
            dispatch_resume((dispatch_object_t)result);
            *(void *)(v1 + 440) = dispatch_semaphore_create(0LL);
            sub_1000BD7A8((pthread_mutex_t *)(v1 + 208));
            pthread_mutex_init((pthread_mutex_t *)(v1 + 304), 0LL);
            pthread_mutex_init((pthread_mutex_t *)(v1 + 456), 0LL);
            pthread_mutex_init((pthread_mutex_t *)(v1 + 368), 0LL);
            dword_10011B8A0 = 1;
            dword_10011B8A4 = 1;
            uint64_t result = sub_1000451B0();
            if (result)
            {
              if ((result & 7) == 0)
              {
                *(_DWORD *)(v1 + 204) = (*(uint64_t (**)(uint64_t))(*(void *)result + 208LL))(result);
                v6[0] = 0xAAAAAAAAAAAAAAAALL;
                v6[1] = 0xAAAAAAAAAAAAAAAALL;
                sub_1000CE91C((uint64_t)v6, 1u);
                v5[1] = 0xAAAAAAAAAAAAAAAALL;
                v6[0] = off_100103838;
                v5[0] = 0xAAAAAAAAAAAAAAAALL;
                sub_1000CE9E8((uint64_t)v6, v5);
                unint64_t v3 = sub_100027C8C(v5);
                *(void *)(v1 + 520) = v3;
                *(void *)(v1 + 52_Block_object_dispose((const void *)(v1 - 120), 8) = v3;
                uint64_t result = sub_1000438B8();
                if (result)
                {
                  if ((result & 7) == 0)
                  {
                    int v4 = (*(uint64_t (**)(uint64_t))(*(void *)result + 40LL))(result);
                    if (!v4) {
                      sub_1000CEAEC( 0,  4,  "%s:%d CIapProtocolMgr::CIapProtocolMgr: ERROR: Lingo mask = 0 !\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapProtocolMgr.cpp",  265);
                    }
                    dword_10011D098 = v4;
                    uint64_t result = sub_10004783C();
                    if (result)
                    {
                      if ((result & 7) == 0)
                      {
                        (*(void (**)(uint64_t, uint64_t))(*(void *)result + 16LL))(result, v1 + 176);
                        uint64_t result = sub_1000451B0();
                        if (result)
                        {
                          if ((result & 7) == 0)
                          {
                            (*(void (**)(uint64_t, uint64_t))(*(void *)result + 88LL))(result, v1 + 184);
                            uint64_t result = sub_1000438B8();
                            if (result)
                            {
                              if ((result & 7) == 0)
                              {
                                (*(void (**)(uint64_t, uint64_t))(*(void *)result + 16LL))(result, v1 + 192);
                                *(_BYTE *)(v1 + 201) = 0;
                                uint64_t result = sub_10002ACC4();
                                if (result)
                                {
                                  if ((result & 7) == 0)
                                  {
                                    byte_10011C978 = (*(uint64_t (**)(uint64_t, const char *))(*(void *)result + 360LL))( result,  "_IapAllowAsyncProcessLargeDataForAll");
                                    v6[0] = off_100103838;
                                    sub_1000CE94C(v6);
                                    return v1;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }

  __break(0x5516u);
LABEL_25:
  __break(0x5510u);
  return result;
}

void sub_1000B7038(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  pthread_mutex_lock((pthread_mutex_t *)(v1 + 208));
  if (((v1 + 272) & 7) != 0 || (uint64_t v2 = (uint64_t *)(v1 + 288), ((v1 + 288) & 7) != 0))
  {
LABEL_20:
    __break(0x5516u);
  }

  else
  {
    uint64_t v3 = *v2;
    unsigned int v7 = 0LL;
    if (!v3)
    {
LABEL_19:
      pthread_mutex_unlock((pthread_mutex_t *)(v1 + 208));
      return;
    }

    while (1)
    {
      BOOL v4 = (_DWORD)v3 != 0;
      LODWORD(v3) = v3 - 1;
      if (!v4) {
        break;
      }
      unsigned int v7 = *(uint64_t **)(v1 + 280);
      uint64_t v5 = *sub_10000D014((uint64_t *)&v7);
      sub_100020944(v1 + 272, v7);
      if (v5) {
        BOOL v6 = (v5 & 7) == 0;
      }
      else {
        BOOL v6 = 0;
      }
      if (!v6) {
        goto LABEL_20;
      }
      if (*(void *)(v5 + 16))
      {
        pthread_mutex_lock(&stru_10011B978);
        if (sub_1000C8254(*(void *)(v5 + 16)))
        {
          if ((((_BYTE)v5 + 8) & 7) != 0) {
            goto LABEL_20;
          }
          (*(void (**)(uint64_t, void, void, void, void))(*(void *)v1 + 48LL))( v1,  *(unsigned int *)v5,  *(void *)(v5 + 8),  *(void *)(v5 + 16),  0LL);
        }

        pthread_mutex_unlock(&stru_10011B978);
      }

      else
      {
        if ((((_BYTE)v5 + 8) & 7) != 0) {
          goto LABEL_20;
        }
        (*(void (**)(uint64_t, void, void, void, void))(*(void *)v1 + 48LL))( v1,  *(unsigned int *)v5,  *(void *)(v5 + 8),  0LL,  0LL);
      }

      operator delete((void *)v5);
      if (!*v2) {
        goto LABEL_19;
      }
    }
  }

  __break(0x5515u);
}

void sub_1000B7180(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_25;
  }
  *(void *)(a1 + 176) = off_100107EC0;
  char v2 = a1 - 80;
  *(void *)(a1 + 184) = off_100107F20;
  char v3 = a1 - 72;
  *(void *)a1 = off_100107DA8;
  *(void *)(a1 + 192) = off_100107F78;
  char v4 = a1 - 64;
  uint64_t v5 = *(dispatch_object_s **)(a1 + 296);
  if (!v5) {
    goto LABEL_26;
  }
  dispatch_release(v5);
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 208));
  if (((a1 + 272) & 7) != 0) {
    goto LABEL_25;
  }
  BOOL v6 = (void *)(a1 + 288);
  if (((a1 + 288) & 7) != 0) {
    goto LABEL_25;
  }
  if (!*v6) {
    goto LABEL_12;
  }
  if (((a1 + 280) & 7) != 0)
  {
LABEL_25:
    __break(0x5516u);
    goto LABEL_26;
  }

  do
  {
    BOOL v14 = *(uint64_t **)(a1 + 280);
    uint64_t v7 = *sub_10000D014((uint64_t *)&v14);
    sub_100020944(a1 + 272, v14);
    if (v7)
    {
      if ((v7 & 7) != 0) {
        goto LABEL_25;
      }
      operator delete((void *)v7);
    }
  }

  while (*v6);
LABEL_12:
  pthread_mutex_unlock((pthread_mutex_t *)(a1 + 208));
  uint64_t v8 = sub_1000451B0();
  if (!v8) {
    goto LABEL_25;
  }
  if ((v8 & 7) != 0) {
    goto LABEL_25;
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)v8 + 96LL))(v8, a1 + 184);
  uint64_t v9 = sub_1000438B8();
  if (!v9) {
    goto LABEL_25;
  }
  if ((v9 & 7) != 0) {
    goto LABEL_25;
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)v9 + 24LL))(v9, a1 + 192);
  uint64_t v10 = sub_10004783C();
  if (!v10) {
    goto LABEL_25;
  }
  if ((v10 & 7) != 0) {
    goto LABEL_25;
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)v10 + 24LL))(v10, a1 + 176);
  uint64_t v11 = sub_100036FF0();
  if (!v11 || (v11 & 7) != 0) {
    goto LABEL_25;
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)v11 + 24LL))(v11, a1 + 176);
  sub_10008DD24(a1);
  pthread_mutex_destroy((pthread_mutex_t *)(a1 + 456));
  pthread_mutex_destroy((pthread_mutex_t *)(a1 + 304));
  pthread_mutex_destroy((pthread_mutex_t *)(a1 + 368));
  pthread_mutex_destroy((pthread_mutex_t *)(a1 + 208));
  uint64_t v12 = *(dispatch_object_s **)(a1 + 440);
  if (v12)
  {
    dispatch_release(v12);
    sub_1000180FC(a1 + 272);
    if ((v4 & 7) == 0 && (v3 & 7) == 0 && (v2 & 7) == 0)
    {
      uint64_t v13 = sub_10005453C(a1);
      sub_10008C164(v13);
      return;
    }

    goto LABEL_25;
  }

void sub_1000B7370(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    sub_1000B7180(a1);
  }
}

void sub_1000B7384(uint64_t a1)
{
  uint64_t v1 = a1 - 176;
  if ((v1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    sub_1000B7180(v1);
  }
}

void sub_1000B7398(uint64_t a1)
{
  uint64_t v1 = a1 - 184;
  if ((v1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    sub_1000B7180(v1);
  }
}

void sub_1000B73AC(uint64_t a1)
{
  uint64_t v1 = a1 - 192;
  if ((v1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    sub_1000B7180(v1);
  }
}

void sub_1000B73C0(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    sub_1000B7180(a1);
    operator delete(v1);
  }

void sub_1000B73E4(uint64_t a1)
{
}

void sub_1000B73EC(uint64_t a1)
{
}

void sub_1000B73F4(uint64_t a1)
{
}

uint64_t sub_1000B73FC(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result && (result & 7) == 0)
  {
    if (!a2) {
      sub_1000D276C();
    }
    if ((a2 & 7) == 0) {
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 40LL))(a2, a3);
    }
  }

  __break(0x5516u);
  return result;
}

void sub_1000B743C(unsigned int *a1, uint64_t a2)
{
  if (a2)
  {
    pthread_once(&stru_10011B908, sub_1000BC260);
    if (!dword_10011B8F8[0]) {
      goto LABEL_20;
    }
    if ((a2 & 7) != 0) {
      goto LABEL_120;
    }
    uint64_t v4 = *(void *)(a2 + 8);
    sub_1000B7A84(v4);
    if (!v4 || (v4 & 7) != 0) {
      goto LABEL_120;
    }
    unsigned int v5 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 216LL))(v4);
    if (v5 < 5)
    {
      BOOL v6 = (unsigned int *)qword_10011C6B8[v5];
      if (v6) {
        BOOL v7 = (v6 & 7) == 0LL;
      }
      else {
        BOOL v7 = 0;
      }
      if (!v7) {
        goto LABEL_120;
      }
      uint64_t v8 = v6[19];
      if (v8 < 4)
      {
        if (~(unint64_t)dword_10011B8F8 >= 4 * v8)
        {
          if (dword_10011B8F8[v8]) {
            (*(void (**)(unsigned int *, void, void, void))(*(void *)v6 + 104LL))( v6,  *(unsigned __int16 *)(a2 + 128),  0LL,  0LL);
          }
LABEL_20:
          uint64_t v9 = sub_10002ACC4();
          (*(void (**)(uint64_t))(*(void *)v9 + 280LL))(v9);
          pthread_mutex_lock((pthread_mutex_t *)(a1 + 92));
          unsigned __int8 v40 = 0;
          uint64_t v10 = *(void *)(a2 + 8);
          if ((*(unsigned int (**)(uint64_t))(*(void *)a2 + 40LL))(a2))
          {
            else {
              int v11 = 2;
            }
            if (v10) {
              goto LABEL_28;
            }
          }

          else
          {
            int v11 = 0;
            if (v10)
            {
LABEL_28:
              if ((v10 & 7) != 0) {
                goto LABEL_120;
              }
              BOOL v12 = (*(uint64_t (**)(uint64_t))(*(void *)v10 + 216LL))(v10) == 0;
LABEL_33:
              if (v12) {
                int v13 = 16;
              }
              else {
                int v13 = v11;
              }
              if (*((_BYTE *)a1 + 432)) {
                int v14 = v13;
              }
              else {
                int v14 = v11;
              }
              uint64_t v15 = (*(uint64_t (**)(unsigned int *, uint64_t, unsigned __int8 *))(*(void *)a1 + 248LL))( a1,  a2,  &v40);
              if (v15 && sub_10008E7AC((uint64_t)a1, v15))
              {
                if ((v15 & 7) != 0) {
                  goto LABEL_120;
                }
                if ((sub_1000569F0(v15) & 1) != 0)
                {
LABEL_45:
                  sub_1000AD43C(a2);
LABEL_94:
                  pthread_mutex_unlock((pthread_mutex_t *)(a1 + 92));
                  return;
                }
              }

              if (v14) {
                goto LABEL_45;
              }
              int v16 = *(_DWORD *)(a2 + 64);
              if (v10)
              {
                if ((v10 & 7) != 0) {
                  goto LABEL_120;
                }
                unsigned int v17 = *(unsigned __int16 *)(a2 + 126);
                uint64_t v18 = *(void *)(v10 + 32);
                if (v18)
                {
                  if ((v18 & 7) != 0 || (((_DWORD)v18 + 58) & 1) != 0) {
                    goto LABEL_120;
                  }
                  unsigned int v19 = *(unsigned __int8 *)(v18 + 58);
                  if (v19 > 1) {
                    goto LABEL_121;
                  }
                  unsigned int v20 = *(unsigned __int8 *)(v18 + 57);
                  if (v20 > 1) {
                    goto LABEL_121;
                  }
                  BOOL v21 = v19 != 0;
                }

                else
                {
                  BOOL v21 = 0;
                  unsigned int v20 = 0;
                }

                if ((v17 > 0x38 || ((1LL << v17) & 0x100000000080002LL) == 0 || v16)
                  && (*(unsigned int (**)(uint64_t))(*(void *)v10 + 216LL))(v10)
                  && ((v21 | sub_1000C8320(v10)) & 1) == 0)
                {
                  sub_100072CCC(v10, 0);
                  sub_1000AD43C(a2);
                  if (!v15) {
                    goto LABEL_94;
                  }
                  if ((v15 & 7) == 0)
                  {
                    if (!sub_10001864C(v15) && *(void *)(v10 + 32)) {
                      sub_10008D480((uint64_t)a1, (void *)v10, v15);
                    }
                    goto LABEL_94;
                  }

                  goto LABEL_120;
                }

                sub_1000C8308(v10, 1);
                if (!v20) {
                  sub_10006E2B0(v10);
                }
                int v22 = (*(uint64_t (**)(uint64_t))(*(void *)v10 + 264LL))(v10);
                if (v15 && v22 && *(void *)(v10 + 32))
                {
                  if ((v15 & 7) != 0) {
                    goto LABEL_120;
                  }
                  int v23 = sub_100057B7C(v15);
                  v39[0] = 0xAAAAAAAAAAAAAAAALL;
                  v39[1] = 0xAAAAAAAAAAAAAAAALL;
                  sub_1000CE91C((uint64_t)v39, 1u);
                  v38[1] = 0LL;
                  v39[0] = off_100103838;
                  v38[0] = 0LL;
                  sub_1000CE9E8((uint64_t)v39, v38);
                  unsigned int v24 = sub_100027C8C(v38);
                  uint64_t v25 = *(void *)(v10 + 32);
                  if (!v25) {
                    goto LABEL_120;
                  }
                  if ((v25 & 7) != 0) {
                    goto LABEL_120;
                  }
                  BOOL v26 = (unsigned int *)(v25 + 80);
                  unsigned int v27 = v24;
                  unsigned int v28 = *v26;
                  if ((v23 == 100 || v23 == -1)
                    && !(*(unsigned int (**)(uint64_t))(*(void *)v10 + 216LL))(v10))
                  {
                    if (v27 < v28)
                    {
LABEL_124:
                      __break(0x5515u);
                      return;
                    }

                    if (v27 - v28 >= 0x7D0)
                    {
                      uint64_t v29 = *(void *)(v10 + 32);
                      if (!v29) {
                        goto LABEL_120;
                      }
                      if ((v29 & 7) != 0) {
                        goto LABEL_120;
                      }
                      uint64_t v30 = (unsigned int *)(v29 + 80);
                      *uint64_t v30 = v27;
                      (*(void (**)(uint64_t))(*(void *)v10 + 112LL))(v10);
                    }
                  }

                  v39[0] = off_100103838;
                  sub_1000CE94C(v39);
                }

                if (v16 > 14) {
                  goto LABEL_92;
                }
                if (!*((_BYTE *)a1 + 200) && !(*(unsigned int (**)(uint64_t))(*(void *)v10 + 232LL))(v10))
                {
LABEL_92:
                  if (*((unsigned __int8 *)a1 + 200) <= 1u)
                  {
                    sub_1000CEAEC( 0,  4,  "Not init(%d) or invalid lingo (%d). Cannot process packet!\n",  *((unsigned __int8 *)a1 + 200),  v16);
                    sub_1000AD43C(a2);
                    goto LABEL_94;
                  }

                  goto LABEL_121;
                }

                if (!v15) {
                  goto LABEL_94;
                }
                if ((v15 & 7) != 0)
                {
LABEL_120:
                  __break(0x5516u);
                  goto LABEL_121;
                }

                if (!sub_10001864C(v15) && *(void *)(v10 + 32))
                {
                  sub_10008D480((uint64_t)a1, (void *)v10, v15);
                  sub_10008ED00((uint64_t)a1, v15);
                  if (!v33) {
                    sub_1000D276C();
                  }
                  uint64_t v32 = v33;
                  if (!(*(uint64_t (**)(unsigned int *, uint64_t, void))(*(void *)a1 + 240LL))( a1,  v15,  0LL))
                  {
                    sub_1000AD43C(a2);
                    goto LABEL_94;
                  }

                  uint64_t v34 = *(void *)(v10 + 32);
                  if (!v34) {
                    goto LABEL_120;
                  }
                  if ((v34 & 7) != 0) {
                    goto LABEL_120;
                  }
                  int v35 = (int *)(v34 + 52);
                  uint64_t v36 = *v35;
                  if (v40 && (_DWORD)v36 != -1 && (_DWORD)v36 != 100)
                  {
                    if ((v32 & 7) != 0) {
                      goto LABEL_120;
                    }
                    sub_10005EE10(v32, 128, v36, 0LL, 0, 1u, 0);
                  }

                  if ((v32 & 7) != 0) {
                    goto LABEL_120;
                  }
                  uint64_t v37 = a1[51];
                  if (v37 <= 3)
                  {
                    sub_10005EE10(v32, 256, v37, 0LL, 0, 1u, 0);
LABEL_90:
                    if ((v32 & 7) == 0)
                    {
                      sub_10005E640(v32, a2);
                      goto LABEL_94;
                    }

                    goto LABEL_120;
                  }

uint64_t sub_1000B7A84(uint64_t result)
{
  if (!result) {
    return pthread_once(&stru_10011B8E8, (void (*)(void))sub_1000BC1B8);
  }
  uint64_t v1 = result;
  if ((result & 7) == 0)
  {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 216LL))(result);
    if (result < 5)
    {
      pthread_mutex_lock(&stru_10011B8A8);
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v1 + 216LL))(v1);
      if (result <= 4)
      {
        if (~(unint64_t)qword_10011C6B8 >= 8 * (unint64_t)result)
        {
          if (qword_10011C6B8[result])
          {
LABEL_12:
            pthread_mutex_unlock(&stru_10011B8A8);
            return pthread_once(&stru_10011B8E8, (void (*)(void))sub_1000BC1B8);
          }

          uint64_t v2 = sub_1000BC2D4(v1, 0, 0, "rcvdPckPayloadSz");
          uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v1 + 216LL))(v1);
          if (result <= 4)
          {
            if (~(unint64_t)qword_10011C6B8 >= 8 * (unint64_t)result)
            {
              qword_10011C6B8[result] = v2;
              goto LABEL_12;
            }

            goto LABEL_15;
          }

          goto LABEL_14;
        }

void sub_1000B7B98(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t *a5)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_70;
  }
  BOOL v6 = a5;
  if (!(_DWORD)a5) {
    BOOL v6 = sub_100062E0C();
  }
  pthread_once(&stru_10011B908, sub_1000BC260);
  if (dword_10011B8FC)
  {
    sub_1000B7A84(a4);
    if (!qword_10011C6E0 || (qword_10011C6E0 & 7) != 0) {
      goto LABEL_70;
    }
    uint64_t v10 = *(unsigned int *)(qword_10011C6E0 + 76);
    if (v10 >= 4)
    {
LABEL_73:
      __break(0x5512u);
      return;
    }

    if (~(unint64_t)dword_10011B8F8 < 4 * v10)
    {
LABEL_72:
      __break(0x5513u);
      goto LABEL_73;
    }

    if (dword_10011B8F8[v10]) {
      (*(void (**)(void))(*(void *)qword_10011C6E0 + 104LL))();
    }
  }

  if ((a2 & 0x20CC) == 0)
  {
    unsigned int v11 = (a4 != 0) & (a2 >> 10);
    if (a4) {
      goto LABEL_17;
    }
LABEL_25:
    BOOL v15 = 0;
    unsigned int v16 = 0;
    int v17 = 1;
    goto LABEL_39;
  }

  if ((~(_DWORD)a2 & 0x2400) == 0)
  {
    __break(0x5518u);
    goto LABEL_70;
  }

  unsigned int v11 = 1;
  if (!a4) {
    goto LABEL_25;
  }
LABEL_17:
  if ((a4 & 7) != 0) {
    goto LABEL_70;
  }
  uint64_t v12 = *(void *)(a4 + 32);
  char v13 = v11 ^ 1;
  if (!v12) {
    char v13 = 1;
  }
  if ((v13 & 1) != 0)
  {
    BOOL v15 = 0;
    if (!v12)
    {
      int v17 = 1;
      unsigned int v16 = 0;
      goto LABEL_39;
    }
  }

  else if ((*(unsigned int (**)(uint64_t))(*(void *)a4 + 280LL))(a4))
  {
    unsigned int v14 = *(unsigned __int8 *)(a4 + 190);
    if (v14 >= 2) {
      goto LABEL_71;
    }
    BOOL v15 = v14 != 0;
  }

  else
  {
    BOOL v15 = 0;
  }

  uint64_t v18 = *(void *)(a4 + 32);
  if (!v18 || (v18 & 7) != 0 || (unsigned int v19 = (unsigned __int8 *)(v18 + 56), (v19 & 7) != 0))
  {
LABEL_70:
    __break(0x5516u);
    goto LABEL_71;
  }

  unsigned int v20 = *v19;
  if (v20 > 1) {
    goto LABEL_71;
  }
  int v17 = 0;
  if ((a2 & 8) != 0 || v20 == 0) {
    unsigned int v16 = 0;
  }
  else {
    unsigned int v16 = v11;
  }
LABEL_39:
  BOOL v22 = 0;
  if ((a2 & 8) != 0 && !a3)
  {
    if (*(unsigned __int8 *)(a1 + 432) < 2u)
    {
      if (*(_BYTE *)(a1 + 432)) {
        char v23 = v17;
      }
      else {
        char v23 = 1;
      }
      if ((v23 & 1) != 0)
      {
        BOOL v22 = 0;
        goto LABEL_53;
      }

      if (a4)
      {
        if ((a4 & 7) == 0)
        {
          uint64_t v24 = *(void *)(a4 + 32);
          if (v24)
          {
            if ((v24 & 7) == 0)
            {
              uint64_t v25 = (void *)(v24 + 64);
              if ((v25 & 7) == 0)
              {
                BOOL v22 = *v25 == 0LL;
                goto LABEL_53;
              }
            }
          }
        }
      }

      goto LABEL_70;
    }

uint64_t sub_1000B7EB4(uint64_t result)
{
  if ((result & 0x18D) == 0)
  {
    uint64_t result = sub_10002ACC4();
    if (result && (result & 7) == 0)
    {
      uint64_t v1 = *(uint64_t (**)(void))(*(void *)result + 296LL);
      return v1();
    }

    goto LABEL_17;
  }

  if ((int)result <= 7)
  {
    if ((_DWORD)result == 1 || (_DWORD)result == 4)
    {
LABEL_12:
      uint64_t result = sub_10002ACC4();
      if (result && (result & 7) == 0)
      {
        uint64_t v1 = *(uint64_t (**)(void))(*(void *)result + 288LL);
        return v1();
      }

void sub_1000B8024(void *__p)
{
  if (__p)
  {
    if ((__p & 7) == 0 && ((unint64_t)(__p + 5) & 7) == 0)
    {
      uint64_t v2 = (void (*)(void))__p[5];
      if (!v2)
      {
LABEL_12:
        operator delete(__p);
        return;
      }

      if (*(_DWORD *)__p >= 8u) {
        goto LABEL_15;
      }
      if ((((_BYTE)__p + 4) & 3) == 0
        && (((_BYTE)__p + 8) & 7) == 0
        && (((_BYTE)__p + 16) & 7) == 0
        && ((unint64_t)(__p + 3) & 7) == 0
        && ((unint64_t)(__p + 4) & 7) == 0)
      {
        v2();
        goto LABEL_12;
      }
    }

    __break(0x5516u);
LABEL_15:
    __break(0x550Au);
  }

void sub_1000B80D4(void *__p)
{
  if (__p)
  {
    if ((__p & 7) == 0 && ((unint64_t)(__p + 3) & 7) == 0)
    {
      uint64_t v2 = (void (*)(void))__p[3];
      if (!v2)
      {
LABEL_10:
        operator delete(__p);
        return;
      }

      if ((((_BYTE)__p + 4) & 3) == 0
        && ((unint64_t)(__p + 1) & 7) == 0
        && ((unint64_t)(__p + 2) & 7) == 0)
      {
        v2();
        goto LABEL_10;
      }
    }

    __break(0x5516u);
LABEL_13:
    __break(0x550Au);
  }

void sub_1000B816C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_25;
  }
  unsigned int v11 = a2;
  BOOL v12 = a3 != 100;
  if (a5) {
    sub_1000B7EB4(a2);
  }
  *(void *)&__int128 v13 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v13 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v15[1] = -1431655766;
  __int128 v19 = v13;
  v15[0] = v11;
  uint64_t v16 = a3;
  uint64_t v17 = a4;
  uint64_t v18 = a5;
  LOBYTE(v19) = 0;
  DWORD1(v19) = 0;
  DWORD2(v19) = a6;
  if ((v11 & 0x4080) == 0) {
    goto LABEL_15;
  }
  if (qword_10011C6B0 != -1) {
    dispatch_once(&qword_10011C6B0, &stru_100107D78);
  }
  if (!qword_10011C6A8 || (qword_10011C6A8 & 7) != 0) {
    goto LABEL_25;
  }
  sub_1000B8328(qword_10011C6A8, v11, a4);
  if (a5) {
    goto LABEL_15;
  }
  if (!a4 || (a4 & 7) != 0) {
    goto LABEL_25;
  }
  if (((*(uint64_t (**)(uint64_t))(*(void *)a4 + 280LL))(a4) & 1) != 0
    || (sub_1000B8464(a1, (void (*)(uint64_t, uint64_t))sub_1000B857C, (uint64_t)v15, a4, (v11 & 0x4000) == 0),
        !DWORD1(v19)))
  {
LABEL_15:
    LOBYTE(v19) = 1;
    sub_1000B857C((void *)a4, (uint64_t)v15);
    int v14 = v12 & (v11 >> 7) ^ 1;
    if ((v11 & 4) != 0) {
      LOBYTE(v14) = 0;
    }
    if ((v14 & 1) == 0 && !DWORD1(v19))
    {
      if (qword_10011C6B0 != -1) {
        dispatch_once(&qword_10011C6B0, &stru_100107D78);
      }
      if (qword_10011C6A8 && (qword_10011C6A8 & 7) == 0)
      {
        sub_1000B8E48(qword_10011C6A8, v11, a3, a4, 0x64u);
        return;
      }

void sub_1000B8328(uint64_t a1, int a2, uint64_t a3)
{
  if (!a1) {
    goto LABEL_32;
  }
  if ((a1 & 7) != 0) {
    goto LABEL_32;
  }
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 208));
  __int128 v13 = (uint64_t *)0xAAAAAAAAAAAAAAAALL;
  if (((a1 + 272) & 7) != 0 || ((a1 + 280) & 7) != 0) {
    goto LABEL_32;
  }
  BOOL v6 = *(uint64_t **)(a1 + 280);
  __int128 v13 = v6;
  while (v6 != (uint64_t *)(a1 + 272))
  {
    uint64_t v7 = *sub_10000D014((uint64_t *)&v13);
    uint64_t v8 = v7 & 7;
    if (a3)
    {
      if (v7) {
        BOOL v9 = v8 == 0;
      }
      else {
        BOOL v9 = 0;
      }
      if (!v9 || ((v7 + 16) & 7) != 0) {
        goto LABEL_32;
      }
      if (*(void *)(v7 + 16) != a3) {
        goto LABEL_25;
      }
      uint64_t v8 = 0LL;
    }

    if (v7) {
      BOOL v11 = v8 == 0;
    }
    else {
      BOOL v11 = 0;
    }
    if (!v11) {
      goto LABEL_32;
    }
    if (*(_DWORD *)v7 == a2)
    {
      __int128 v13 = (uint64_t *)sub_100020944(a1 + 272, v13);
      operator delete((void *)v7);
      goto LABEL_26;
    }

uint64_t sub_1000B8464( uint64_t result, void (*a2)(uint64_t, uint64_t), uint64_t a3, uint64_t a4, int a5)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_25;
  }
  if (!a2)
  {
    __break(0x5518u);
LABEL_25:
    __break(0x5516u);
    return result;
  }

  uint64_t v9 = sub_10000CEF8();
  pthread_mutex_lock(&stru_10011B978);
  if (*(void *)(v9 + 16))
  {
    uint64_t v10 = *(void *)(v9 + 8);
    uint64_t v14 = v10;
    while (v10 != v9)
    {
      if (!a5) {
        goto LABEL_28;
      }
      uint64_t result = *sub_10000D014(&v14);
      if (result) {
        BOOL v11 = (result & 7) == 0;
      }
      else {
        BOOL v11 = 0;
      }
      if (!v11) {
        goto LABEL_25;
      }
      if (((*(uint64_t (**)(uint64_t))(*(void *)result + 280LL))(result) & 1) == 0)
      {
LABEL_28:
        if (!a4) {
          goto LABEL_21;
        }
        uint64_t result = *sub_10000D014(&v14);
        if (result) {
          BOOL v12 = (result & 7) == 0;
        }
        else {
          BOOL v12 = 0;
        }
        if (!v12) {
          goto LABEL_25;
        }
        if ((*(unsigned int (**)(uint64_t, uint64_t))(*(void *)result + 104LL))(result, a4))
        {
LABEL_21:
          __int128 v13 = sub_10000D014(&v14);
          a2(*v13, a3);
        }
      }

      sub_10000D048(&v14);
      uint64_t v10 = v14;
    }
  }

  return pthread_mutex_unlock(&stru_10011B978);
}

void sub_1000B857C(void *a1, uint64_t a2)
{
  lpsrc = a1;
  if (!a2) {
LABEL_201:
  }
    sub_1000D276C();
  if ((a2 & 7) != 0 || (((_BYTE)a2 + 8) & 7) != 0 || ((a2 + 16) & 7) != 0) {
    goto LABEL_203;
  }
  uint64_t v3 = (uint64_t)a1;
  unsigned int v4 = *(_DWORD *)a2;
  unsigned int v5 = *(void **)(a2 + 8);
  if (v5 == (void *)100) {
    int v6 = (*(_DWORD *)a2 >> 7) & 1;
  }
  else {
    LOBYTE(v6) = 0;
  }
  if (v5 == (void *)100) {
    int v7 = 0;
  }
  else {
    int v7 = (*(_DWORD *)a2 >> 7) & 1;
  }
  int v8 = (v4 >> 10) & 1;
  if (!a1) {
    LOBYTE(v_Block_object_dispose((const void *)(v1 - 120), 8) = 0;
  }
  if ((v4 & 0x20CC) != 0) {
    char v9 = 1;
  }
  else {
    char v9 = v8;
  }
  if (*(void **)(a2 + 16) == a1) {
    int v10 = 1;
  }
  else {
    int v10 = (*(_DWORD *)a2 >> 7) & 1;
  }
  if (v10 != 1 || (*(_DWORD *)a2 & 0x2400) == 0x2400)
  {
    __break(0x5518u);
    goto LABEL_201;
  }

  char v48 = v6;
  if (a1)
  {
    uint64_t v11 = a1[4];
    char v12 = v9 ^ 1;
    if (v11) {
      char v13 = v12;
    }
    else {
      char v13 = 1;
    }
    if ((v13 & 1) == 0
      && (*(unsigned int (**)(void *))(*a1 + 280LL))(a1)
      && *(unsigned __int8 *)(v3 + 190) >= 2u)
    {
      goto LABEL_204;
    }

    if (v11 && (v4 & 0x80) != 0)
    {
      if (qword_10011C6B0 != -1) {
        dispatch_once(&qword_10011C6B0, &stru_100107D78);
      }
      if (!qword_10011C6A8) {
        goto LABEL_203;
      }
      if ((qword_10011C6A8 & 7) != 0) {
        goto LABEL_203;
      }
      sub_1000B8328(qword_10011C6A8, v4, v3);
      uint64_t v14 = *(void *)(v3 + 32);
      if (!v14) {
        goto LABEL_203;
      }
      if ((v14 & 7) != 0) {
        goto LABEL_203;
      }
      BOOL v15 = (_DWORD *)(v14 + 52);
      *BOOL v15 = (_DWORD)v5;
    }

    uint64_t v16 = *(void *)(v3 + 32);
    if (!v16) {
      goto LABEL_203;
    }
    if ((v16 & 7) != 0) {
      goto LABEL_203;
    }
    uint64_t v17 = (uint64_t *)(v16 + 40);
    uint64_t v18 = *v17;
    if (*v17) {
      goto LABEL_53;
    }
  }

  else
  {
    char v13 = 1;
  }

  if (((a2 + 32) & 7) != 0) {
    goto LABEL_203;
  }
  if (!*(_BYTE *)(a2 + 32))
  {
    uint64_t v18 = 0LL;
    BOOL v19 = 0;
    BOOL v22 = 0;
    int v20 = v7 | ((v4 & 4) >> 2);
    if ((v13 & 1) != 0) {
      goto LABEL_72;
    }
    goto LABEL_66;
  }

  if (qword_10011C6B0 != -1) {
    dispatch_once(&qword_10011C6B0, &stru_100107D78);
  }
  if (!qword_10011C6A8 || (qword_10011C6A8 & 7) != 0) {
    goto LABEL_203;
  }
  uint64_t v18 = (*(uint64_t (**)(void))(*(void *)qword_10011C6A8 + 256LL))();
LABEL_53:
  BOOL v19 = v18 != 0;
  int v20 = v7 | ((v4 & 4) >> 2);
  if (v18 && v20)
  {
    if (qword_10011C6B0 != -1) {
      dispatch_once(&qword_10011C6B0, &stru_100107D78);
    }
    if (!qword_10011C6A8 || (qword_10011C6A8 & 7) != 0) {
      goto LABEL_203;
    }
    sub_10008ED00(qword_10011C6A8, v18);
    if (v21)
    {
      if ((v21 & 7) != 0) {
        goto LABEL_203;
      }
      if ((sub_10005EDB8(v21) & 1) != 0) {
        return;
      }
    }

    int v20 = 1;
    BOOL v19 = 1;
  }

  if ((v13 & 1) != 0) {
    goto LABEL_71;
  }
LABEL_66:
  if (!v3 || (v3 & 7) != 0) {
    goto LABEL_203;
  }
  if (!(*(unsigned int (**)(uint64_t))(*(void *)v3 + 280LL))(v3))
  {
LABEL_71:
    BOOL v22 = 0;
    goto LABEL_72;
  }

  unsigned int v23 = *(unsigned __int8 *)(v3 + 190);
  if (v23 >= 2) {
    goto LABEL_204;
  }
  BOOL v22 = v23 != 0;
LABEL_72:
  if ((v4 & 8) != 0 && !v5 && !v22)
  {
    if (!v3) {
      goto LABEL_203;
    }
    if ((v3 & 7) != 0) {
      goto LABEL_203;
    }
    uint64_t v24 = *(void *)(v3 + 32);
    if (!v24 || (v24 & 7) != 0 || ((v24 + 64) & 7) != 0) {
      goto LABEL_203;
    }
    uint64_t v25 = *(void (**)(void **))(v24 + 64);
    if (v25)
    {
      *(_BYTE *)(v24 + 59) = 1;
      uint64_t v26 = (void *)(v24 + 40);
      if (!*v26)
      {
        v25(&lpsrc);
        uint64_t v3 = (uint64_t)lpsrc;
      }
    }
  }

  if (v3) {
    BOOL v27 = v19;
  }
  else {
    BOOL v27 = 0;
  }
  if (v27)
  {
    int v28 = *(_DWORD *)(a2 + 36);
    BOOL v29 = __CFADD__(v28, 1);
    int v30 = v28 + 1;
    if (v29)
    {
LABEL_205:
      __break(0x5500u);
      goto LABEL_206;
    }

    *(_DWORD *)(a2 + 36) = v30;
    if ((v4 & 0x80) == 0)
    {
LABEL_94:
      if (!v20) {
        goto LABEL_109;
      }
      if (!*((void *)lpsrc + 4)) {
        goto LABEL_109;
      }
      if (qword_10011C6B0 != -1) {
        dispatch_once(&qword_10011C6B0, &stru_100107D78);
      }
      if (!qword_10011C6A8) {
        goto LABEL_203;
      }
      if ((qword_10011C6A8 & 7) != 0) {
        goto LABEL_203;
      }
      sub_10008D480(qword_10011C6A8, lpsrc, v18);
      if (!lpsrc) {
        goto LABEL_203;
      }
      uint64_t v31 = *((void *)lpsrc + 4);
      if (!v31 || (v31 & 7) != 0) {
        goto LABEL_203;
      }
      unsigned int v32 = *(unsigned __int8 *)(v31 + 57);
      if (v32 <= 1)
      {
        if (!v32) {
          sub_10006E2B0((uint64_t)lpsrc);
        }
LABEL_109:
        if (qword_10011C6B0 != -1) {
          dispatch_once(&qword_10011C6B0, &stru_100107D78);
        }
        if (!qword_10011C6A8 || (qword_10011C6A8 & 7) != 0) {
          goto LABEL_203;
        }
        sub_10008ED00(qword_10011C6A8, v18);
        uint64_t v34 = v33;
        if (v7)
        {
          if ((v18 & 7) != 0) {
            goto LABEL_203;
          }
          BOOL v35 = sub_100057CEC(v18);
          if (v34)
          {
            if (v35)
            {
              if (!sub_100057D30(v18)) {
                goto LABEL_126;
              }
              if (!(*(unsigned int (**)(void))(*(void *)lpsrc + 280LL))())
              {
LABEL_126:
                if ((v34 & 7) == 0)
                {
                  sub_10005EE10(v34, 8, 1LL, (uint64_t)lpsrc, 0, 2u, 0);
                  if (qword_10011C6B0 != -1) {
                    dispatch_once(&qword_10011C6B0, &stru_100107D78);
                  }
                  if (qword_10011C6A8 && (qword_10011C6A8 & 7) == 0)
                  {
                    sub_1000B8E48(qword_10011C6A8, v4, (uint64_t)v5, (uint64_t)lpsrc, 0x64u);
                    sub_10008D264((uint64_t)lpsrc, 0, 0);
                    if (qword_10011C6B0 != -1) {
                      dispatch_once(&qword_10011C6B0, &stru_100107D78);
                    }
                    if (qword_10011C6A8 && (qword_10011C6A8 & 7) == 0)
                    {
                      sub_1000B8F24(qword_10011C6A8, lpsrc, 0xC8u);
                      return;
                    }
                  }
                }

                goto LABEL_203;
              }

              uint64_t v36 = lpsrc;
              if (lpsrc)
              {
                if ((lpsrc & 7) == 0)
                {
                  if (v37)
                  {
                    if ((v37 & 7) == 0)
                    {
                      uint64_t v38 = (*(uint64_t (**)(void *))(*(void *)v37 + 384LL))(v37);
                      sub_100070E84(0LL, v18, v36, v38);
                      goto LABEL_126;
                    }
                  }
                }
              }

LABEL_203:
              __break(0x5516u);
              goto LABEL_204;
            }
          }
        }

        if (v34)
        {
          if ((v4 & 8) != 0)
          {
            if ((v34 & 7) != 0) {
              goto LABEL_203;
            }
            sub_10005ED08(v34);
          }

          pthread_once(&stru_10011B908, sub_1000BC260);
          if ((unint64_t)dword_10011B8F8 >= 0xFFFFFFFFFFFFFFFCLL)
          {
LABEL_206:
            __break(0x5513u);
            goto LABEL_207;
          }

          if (dword_10011B8FC)
          {
            sub_1000B7A84((uint64_t)lpsrc);
            unint64_t v41 = (unsigned int *)(a2 + 40);
            if (((a2 + 40) & 7) != 0) {
              goto LABEL_203;
            }
            if (*v41)
            {
              unsigned int v42 = sub_100062E0C();
              if (!qword_10011C6E8 || (qword_10011C6E8 & 7) != 0) {
                goto LABEL_203;
              }
              if (v42 < *v41)
              {
LABEL_207:
                __break(0x5515u);
                goto LABEL_208;
              }

              uint64_t v43 = *(unsigned int *)(qword_10011C6E8 + 76);
              if (v43 >= 4)
              {
LABEL_208:
                __break(0x5512u);
                return;
              }

              if (dword_10011B8F8[v43]) {
                (*(void (**)(void))(*(void *)qword_10011C6E8 + 104LL))();
              }
            }
          }

          if ((v34 & 7) != 0 || ((a2 + 40) & 7) != 0) {
            goto LABEL_203;
          }
          if ((v4 & 8) != 0) {
            unsigned int v44 = 2;
          }
          else {
            unsigned int v44 = 1;
          }
          if ((sub_10005EE10(v34, v4, (uint64_t)v5, (uint64_t)lpsrc, *(_DWORD *)(a2 + 40), v44, 0) & 1) != 0)
          {
            if (v20)
            {
              if (qword_10011C6B0 != -1) {
                dispatch_once(&qword_10011C6B0, &stru_100107D78);
              }
              if (qword_10011C6A8 && (qword_10011C6A8 & 7) == 0 && ((qword_10011C6A8 + 204) & 3) == 0)
              {
                uint64_t v45 = *(unsigned int *)(qword_10011C6A8 + 204);
                if (v45 <= 3)
                {
                  sub_10005EE10(v34, 256, v45, 0LL, 0, 1u, 0);
                  return;
                }

                goto LABEL_204;
              }

              goto LABEL_203;
            }

            return;
          }

          if ((v4 & 0x400) != 0 && v5) {
            sub_1000B8024(v5);
          }
          if ((v4 & 0x2000) != 0 && v5) {
            sub_1000B80D4(v5);
          }
          if (((v22 | v20 ^ 1) & 1) != 0) {
            return;
          }
          if (qword_10011C6B0 == -1)
          {
LABEL_194:
            if (qword_10011C6A8 && (qword_10011C6A8 & 7) == 0)
            {
              sub_1000B8E48(qword_10011C6A8, v4, (uint64_t)v5, (uint64_t)lpsrc, 0x64u);
              return;
            }

            goto LABEL_203;
          }
        }

        else
        {
          if (((v22 | v20 ^ 1) & 1) != 0) {
            return;
          }
          if (qword_10011C6B0 == -1) {
            goto LABEL_194;
          }
        }

        dispatch_once(&qword_10011C6B0, &stru_100107D78);
        goto LABEL_194;
      }

LABEL_204:
      __break(0x550Au);
      goto LABEL_205;
    }

    if ((v18 & 7) != 0) {
      goto LABEL_203;
    }
    if (sub_100057BA0(v18) == -1 || sub_100057B7C(v18) != (_DWORD)v5)
    {
      sub_100056998(v18, (int)v5);
      goto LABEL_94;
    }
  }

  else if ((v4 & 8) != 0 && v3)
  {
    if ((v3 & 7) != 0) {
      goto LABEL_203;
    }
    uint64_t v39 = *(void *)(v3 + 32);
    if (v39)
    {
      if ((v39 & 7) == 0)
      {
        unsigned __int8 v40 = (_BYTE *)(v39 + 58);
        if ((v40 & 1) == 0)
        {
          *unsigned __int8 v40 = 0;
          return;
        }
      }

      goto LABEL_203;
    }
  }

  else
  {
    char v46 = v48;
    if (v18) {
      char v46 = 1;
    }
    if ((v46 & 1) != 0 || (v4 & 8) != 0) {
      return;
    }
    if (((a2 + 32) & 7) != 0) {
      goto LABEL_203;
    }
    if (*(_BYTE *)(a2 + 32))
    {
      if (v3)
      {
        if ((v3 & 7) != 0) {
          goto LABEL_203;
        }
        int v47 = (const char *)(*(uint64_t (**)(uint64_t))(*(void *)v3 + 208LL))(v3);
      }

      else
      {
        int v47 = "Unknown";
      }

      sub_1000CEAEC(0, 4, "No Handle for event! class=%xh(%s) type=%lxh port=%hhx(%s)\n", v4, "", v5, v3, v47);
    }
  }

void sub_1000B8E48(uint64_t a1, int a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  if (!a1
    || (a1 & 7) != 0
    || (pthread_mutex_lock((pthread_mutex_t *)(a1 + 208)),
        unint64_t v13 = 0xAAAAAAAAAAAAAAAALL,
        int v10 = operator new(0x18uLL),
        (v10 & 0xF) != 0)
    || (v10 & 7) != 0
    || (*(_DWORD *)int v10 = a2, v10[1] = a3, v10[2] = a4, v13 = (unint64_t)v10, ((a1 + 272) & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    sub_100020DF4(a1 + 272, &v13);
    pthread_mutex_unlock((pthread_mutex_t *)(a1 + 208));
    uint64_t v11 = *(dispatch_source_s **)(a1 + 296);
    if (v11)
    {
      dispatch_time_t v12 = dispatch_time(0LL, 1000000LL * a5);
      dispatch_source_set_timer(v11, v12, 0xFFFFFFFFFFFFFFFFLL, 0LL);
      return;
    }
  }

  __break(0x5510u);
}

void sub_1000B8F24(uint64_t a1, void *a2, unsigned int a3)
{
  if (!(*(unsigned int (**)(void *))(*a2 + 216LL))(a2)
    || (*(unsigned int (**)(void *))(*a2 + 280LL))(a2))
  {
    uint64_t v6 = a2[4];
    if (v6)
    {
      if ((v6 & 7) == 0)
      {
        int v7 = (dispatch_source_s **)(v6 + 72);
        if (((v6 + 72) & 7) == 0)
        {
          int v8 = *v7;
          if (*v7)
          {
            v11[0] = _NSConcreteStackBlock;
            v11[1] = 0x40000000LL;
            _DWORD v11[2] = sub_1000BBD5C;
            v11[3] = &unk_100107FB0;
            v11[4] = a1;
            v11[5] = a2;
            dispatch_source_set_event_handler(v8, v11);
            char v9 = *v7;
            if (*v7)
            {
              dispatch_time_t v10 = dispatch_time(0LL, 1000000LL * a3);
              dispatch_source_set_timer(v9, v10, 0xFFFFFFFFFFFFFFFFLL, 0LL);
              return;
            }
          }

void sub_1000B902C(uint64_t a1, unsigned int a2, void *a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_76;
  }
  pthread_once(&stru_10011B908, sub_1000BC260);
  if (!dword_10011B8FC) {
    goto LABEL_14;
  }
  sub_1000B7A84(a4);
  if (!a6) {
    goto LABEL_14;
  }
  unsigned int v12 = sub_100062E0C();
  if (!qword_10011C6F0 || (qword_10011C6F0 & 7) != 0) {
    goto LABEL_76;
  }
  if (v12 < a6)
  {
LABEL_78:
    __break(0x5515u);
    goto LABEL_79;
  }

  uint64_t v13 = *(unsigned int *)(qword_10011C6F0 + 76);
  if (v13 >= 8)
  {
LABEL_79:
    __break(0x550Au);
    goto LABEL_80;
  }

  if (v13 >= 4)
  {
LABEL_80:
    __break(0x5512u);
    return;
  }

  if (~(unint64_t)dword_10011B8F8 < 4 * v13)
  {
LABEL_77:
    __break(0x5513u);
    goto LABEL_78;
  }

  if (dword_10011B8F8[v13]) {
    (*(void (**)(void))(*(void *)qword_10011C6F0 + 104LL))();
  }
LABEL_14:
  if (!a5 || (a2 & 0x2400) == 0x2400)
  {
    __break(0x5518u);
    goto LABEL_76;
  }

  if ((a5 & 7) != 0)
  {
LABEL_76:
    __break(0x5516u);
    goto LABEL_77;
  }

  uint64_t v14 = sub_10001864C(a5);
  if (!a4 || v14) {
    goto LABEL_26;
  }
  if ((a2 & 4) == 0)
  {
    if (((a3 != (void *)100) & (a2 >> 7)) != 0)
    {
      if ((a4 & 7) != 0) {
        goto LABEL_76;
      }
      if ((*(unsigned int (**)(uint64_t))(*(void *)a4 + 280LL))(a4))
      {
        sub_100056C30(a5, v15);
        if (!v15 || (v15 & 7) != 0) {
          goto LABEL_76;
        }
        (*(void (**)(uint64_t, uint64_t))(*(void *)v15 + 392LL))(v15, a5);
      }

      goto LABEL_33;
    }

void sub_1000B9410(uint64_t a1, int a2, char *__p, int a4)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_100;
  }
  if ((a2 & 1) != 0)
  {
    BOOL v7 = __p == (char *)5 || (unint64_t)(__p - 7) < 2;
    BOOL v53 = __p;
    int v55 = -1431655766;
    int v52 = -1431655766;
    int v51 = a2;
    int v54 = a4;
    int v11 = dword_10011B8A0;
    BOOL v8 = (unint64_t)(__p - 1) < 4;
    int v12 = 3;
    switch((unint64_t)__p)
    {
      case 5uLL:
        goto LABEL_17;
      case 6uLL:
        *(_BYTE *)(a1 + 432) = 0;
        v50[0] = 0xAAAAAAAAAAAAAAAALL;
        v50[1] = 0xAAAAAAAAAAAAAAAALL;
        sub_1000CE91C((uint64_t)v50, 1u);
        v49[1] = 0xAAAAAAAAAAAAAAAALL;
        v50[0] = (uint64_t)off_100103838;
        v49[0] = 0xAAAAAAAAAAAAAAAALL;
        sub_1000CE9E8((uint64_t)v50, v49);
        *(void *)(a1 + 52_Block_object_dispose((const void *)(v1 - 120), 8) = sub_100027C8C(v49);
        v50[0] = (uint64_t)off_100103838;
        sub_1000CE94C(v50);
        int v11 = dword_10011B8A0;
        int v12 = 4;
        goto LABEL_17;
      case 7uLL:
        int v12 = 1;
        goto LABEL_17;
      case 8uLL:
        *(_BYTE *)(a1 + 432) = 1;
        int v12 = 2;
LABEL_17:
        if (v12 == v11) {
          goto LABEL_18;
        }
        dword_10011B8A4 = v11;
        dword_10011B8A0 = v12;
        int v9 = 1;
        break;
      default:
LABEL_18:
        int v9 = 0;
        break;
    }
  }

  else
  {
    BOOL v7 = 0;
    BOOL v8 = 0;
    int v9 = 0;
    BOOL v53 = __p;
    int v55 = -1431655766;
    int v52 = -1431655766;
    int v51 = a2;
    int v54 = a4;
  }

  if (byte_10011D09C > 1u)
  {
LABEL_101:
    __break(0x550Au);
    goto LABEL_102;
  }

  if ((a2 & 1) == 0 || !byte_10011D09C || !v8)
  {
    pthread_mutex_lock((pthread_mutex_t *)(a1 + 456));
    uint64_t v13 = v7 ? (_DWORD *)(a1 + 448) : 0LL;
    char v14 = !v7;
    sub_10008E450(a1, (void (*)(uint64_t, uint64_t))sub_1000B9948, (uint64_t)&v51, v13);
    int v15 = *(_DWORD *)(a1 + 448);
    pthread_mutex_unlock((pthread_mutex_t *)(a1 + 456));
    char v16 = v15 ? v14 : 1;
    if ((v16 & 1) == 0)
    {
      int v17 = *(dispatch_semaphore_s **)(a1 + 440);
      if (!v17)
      {
LABEL_102:
        __break(0x5510u);
        return;
      }

      dispatch_semaphore_wait(v17, 0xFFFFFFFFFFFFFFFFLL);
    }
  }

  if (v9)
  {
    int v18 = dword_10011B8A4;
    sub_1000550B8(a1, a2, (uint64_t)__p, 0LL);
    dword_10011B8A4 = dword_10011B8A0;
    uint64_t v19 = sub_10000CEF8();
    pthread_mutex_lock(&stru_10011B978);
    uint64_t v20 = *(void *)(v19 + 8);
    v50[0] = v20;
    while (v20 != v19)
    {
      int v21 = sub_10000D014(v50);
      if (*v21) {
        BOOL v22 = (*v21 & 7) == 0;
      }
      else {
        BOOL v22 = 0;
      }
      if (!v22) {
        goto LABEL_100;
      }
      if (*(void *)(*v21 + 32))
      {
        uint64_t v23 = *sub_10000D014(v50);
        if (v23) {
          BOOL v24 = (v23 & 7) == 0;
        }
        else {
          BOOL v24 = 0;
        }
        if (!v24) {
          goto LABEL_100;
        }
        if ((*(unsigned int (**)(uint64_t))(*(void *)v23 + 240LL))(v23))
        {
          uint64_t v25 = sub_10000D014(v50);
          sub_10008C904(a1, *v25);
        }
      }

      sub_10000D048(v50);
      uint64_t v20 = v50[0];
    }

    if ((v18 - 1) > 1 || dword_10011B8A0 != 4)
    {
LABEL_96:
      pthread_mutex_unlock(&stru_10011B978);
      goto LABEL_97;
    }

    uint64_t v26 = sub_1000451B0();
    uint64_t v27 = sub_1000438B8();
    if (v27)
    {
      uint64_t v28 = v27;
      if ((v27 & 7) == 0)
      {
        int v29 = (*(uint64_t (**)(uint64_t))(*(void *)v27 + 160LL))(v27);
        int v30 = (*(uint64_t (**)(uint64_t))(*(void *)v28 + 168LL))(v28);
        v50[0] = *(void *)(v19 + 8);
        if (v50[0] != v19)
        {
          int v31 = v29 | v30;
          BOOL v33 = (v26 & 7) == 0 && v26 != 0;
          while (1)
          {
            uint64_t v34 = sub_10000D014(v50);
            if (!*v34 || (*v34 & 7) != 0) {
              goto LABEL_100;
            }
            if (*(void *)(*v34 + 32))
            {
              uint64_t v36 = *sub_10000D014(v50);
              if (v36) {
                BOOL v37 = (v36 & 7) == 0;
              }
              else {
                BOOL v37 = 0;
              }
              if (!v37) {
                goto LABEL_100;
              }
              if ((*(unsigned int (**)(uint64_t))(*(void *)v36 + 240LL))(v36))
              {
                if (!v33) {
                  goto LABEL_100;
                }
                uint64_t v38 = sub_10000D014(v50);
                if ((*(unsigned int (**)(uint64_t, uint64_t))(*(void *)v26 + 152LL))(v26, *v38) != 1)
                {
                  uint64_t v39 = sub_10000D014(v50);
                  if ((*(unsigned int (**)(uint64_t, uint64_t))(*(void *)v26 + 200LL))(v26, *v39))
                  {
                    if (!v31) {
                      goto LABEL_85;
                    }
                    uint64_t v40 = *sub_10000D014(v50);
                    if (!v40 || (v40 & 7) != 0) {
                      goto LABEL_100;
                    }
                    if ((*(unsigned int (**)(uint64_t))(*(void *)v40 + 272LL))(v40))
                    {
LABEL_85:
                      unint64_t v41 = sub_10000D014(v50);
                      (*(void (**)(uint64_t, uint64_t, void))(*(void *)v26 + 192LL))(v26, *v41, 0LL);
                      unsigned int v42 = sub_10000D014(v50);
                      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)v26 + 144LL))(v26, *v42, 1LL);
                      uint64_t v43 = sub_10000D014(v50);
                      sub_1000B8F24(a1, (void *)*v43, 0xC8u);
                    }
                  }
                }
              }
            }

            uint64_t v44 = *sub_10000D014(v50);
            if (v44) {
              BOOL v45 = (v44 & 7) == 0;
            }
            else {
              BOOL v45 = 0;
            }
            if (!v45) {
              goto LABEL_100;
            }
            if (!(*(unsigned int (**)(uint64_t))(*(void *)v44 + 216LL))(v44))
            {
              uint64_t v46 = *sub_10000D014(v50);
              if (!v46 || (v46 & 7) != 0) {
                goto LABEL_100;
              }
              unsigned int v47 = (*(uint64_t (**)(uint64_t))(*(void *)v46 + 296LL))(v46);
              char v48 = sub_10000D014(v50);
              (*(void (**)(uint64_t, uint64_t, void, uint64_t, void))(*(void *)a1 + 48LL))( a1,  128LL,  v47,  *v48,  0LL);
            }

            sub_10000D048(v50);
            if (v50[0] == v19) {
              goto LABEL_96;
            }
          }
        }

        goto LABEL_96;
      }
    }

void sub_1000B9948(uint64_t a1, _DWORD *a2)
{
  if (!a1) {
    goto LABEL_67;
  }
  unsigned int v5 = a2;
  if (!a2) {
    goto LABEL_67;
  }
  BOOL v8 = (uint64_t *)(a2 + 2);
  int v2 = *a2;
  uint64_t v4 = a1;
  uint64_t v3 = *v8;
  unint64_t v9 = *v8 - 7;
  BOOL v10 = v3 != 5 && v9 >= 2;
  int v11 = !v10;
  if ((v2 & 1) != 0) {
    int v7 = v11;
  }
  else {
    int v7 = 0;
  }
  if (!sub_1000B9CAC(a1) && v7 & 1 | v2 & (v3 == 6))
  {
    if ((sub_1000B9CAC(v4) & 1) != 0 || ((v7 ^ 1) & 1) != 0) {
      return;
    }
    if (qword_10011C6B0 != -1) {
      dispatch_once(&qword_10011C6B0, &stru_100107D78);
    }
    if (qword_10011C6A8 && (qword_10011C6A8 & 7) == 0)
    {
      int v12 = *(_DWORD *)(qword_10011C6A8 + 448);
      BOOL v10 = v12 != 0;
      int v13 = v12 - 1;
      if (v10)
      {
        *(_DWORD *)(qword_10011C6A8 + 44_Block_object_dispose((const void *)(v1 - 120), 8) = v13;
        return;
      }

      goto LABEL_71;
    }

    goto LABEL_69;
  }

  uint64_t v6 = &unk_10011C000;
  if (qword_10011C6B0 != -1) {
    goto LABEL_68;
  }
  while (1)
  {
    if (!qword_10011C6A8 || (qword_10011C6A8 & 7) != 0) {
      goto LABEL_69;
    }
    sub_10008ED00(qword_10011C6A8, v4);
    if (v14) {
      break;
    }
LABEL_67:
    __break(0x5518u);
LABEL_68:
    dispatch_once(&qword_10011C6B0, &stru_100107D78);
  }

  uint64_t v15 = v14;
  if ((v2 & 0x400) != 0)
  {
    char v16 = operator new(0x30uLL);
    __int128 v17 = *(_OWORD *)v3;
    __int128 v18 = *(_OWORD *)(v3 + 32);
    v16[1] = *(_OWORD *)(v3 + 16);
    v16[2] = v18;
    *char v16 = v17;
    uint64_t v3 = (uint64_t)v16;
  }

  pthread_once(&stru_10011B908, sub_1000BC260);
  if (dword_10011B8FC)
  {
    if ((v4 & 7) != 0) {
      goto LABEL_69;
    }
    uint64_t v19 = sub_10001864C(v4);
    sub_1000B7A84(v19);
    uint64_t v20 = v5 + 4;
    if (*v20)
    {
      unsigned int v21 = sub_100062E0C();
      if (!qword_10011C6E8 || (qword_10011C6E8 & 7) != 0) {
        goto LABEL_69;
      }
      if (v21 < *v20) {
        goto LABEL_71;
      }
      uint64_t v22 = *(unsigned int *)(qword_10011C6E8 + 76);
      if (dword_10011B8F8[v22]) {
        (*(void (**)(void))(*(void *)qword_10011C6E8 + 104LL))();
      }
    }
  }

  if (v7) {
    unsigned int v23 = 2;
  }
  else {
    unsigned int v23 = 1;
  }
  if ((sub_10005EE10(v15, (unsigned __int16)v2, v3, 0LL, v5[4], v23, 0) & 1) == 0)
  {
    if (!v7)
    {
LABEL_64:
      if ((v2 & 0x400) != 0) {
        sub_1000B8024((void *)v3);
      }
      return;
    }

    if (v6[214] != -1LL) {
      dispatch_once(&qword_10011C6B0, &stru_100107D78);
    }
    if (qword_10011C6A8 && (qword_10011C6A8 & 7) == 0 && ((qword_10011C6A8 + 448) & 7) == 0)
    {
      sub_1000CEAEC( 0,  4,  "%s:%d Couldn't queue event to connection=%hhxh, decrement count(%d)\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapProtocolMgr.cpp",  1709,  v4,  *(_DWORD *)(qword_10011C6A8 + 448));
      if (v6[214] != -1LL) {
        dispatch_once(&qword_10011C6B0, &stru_100107D78);
      }
      if (qword_10011C6A8 && (qword_10011C6A8 & 7) == 0)
      {
        int v24 = *(_DWORD *)(qword_10011C6A8 + 448);
        BOOL v10 = v24 != 0;
        int v25 = v24 - 1;
        if (!v10) {
          goto LABEL_71;
        }
        *(_DWORD *)(qword_10011C6A8 + 44_Block_object_dispose((const void *)(v1 - 120), 8) = v25;
        goto LABEL_64;
      }
    }

uint64_t sub_1000B9CAC(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    if ((result & 7) == 0)
    {
      if (sub_100057A20(result)) {
        return 0LL;
      }
      if (!sub_10001864C(v1)) {
        return 1LL;
      }
      uint64_t result = sub_10001864C(v1);
      if (result && (result & 7) == 0) {
        return (*(unsigned int (**)(uint64_t))(*(void *)result + 232LL))(result) ^ 1;
      }
    }
  }

  __break(0x5516u);
  return result;
}

void sub_1000B9D24(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, unsigned int a5)
{
  if (!a1 || (a1 & 7) != 0 || !a4 || (a4 & 7) != 0) {
    goto LABEL_83;
  }
  uint64_t v10 = sub_10001864C(a4);
  uint64_t v11 = sub_1000569D8(a4);
  uint64_t v31 = v10;
  if (v10) {
    uint64_t v12 = v10;
  }
  else {
    uint64_t v12 = v11;
  }
  pthread_once(&stru_10011B908, sub_1000BC260);
  if (dword_10011B8FC)
  {
    sub_1000B7A84(v12);
    if (a5)
    {
      unsigned int v13 = sub_100062E0C();
      if (!qword_10011C6F0 || (qword_10011C6F0 & 7) != 0) {
        goto LABEL_83;
      }
      if (v13 < a5)
      {
LABEL_85:
        __break(0x5515u);
        goto LABEL_86;
      }

      uint64_t v14 = *(unsigned int *)(qword_10011C6F0 + 76);
      if (v14 >= 8)
      {
LABEL_86:
        __break(0x550Au);
        goto LABEL_87;
      }

      if (v14 >= 4)
      {
LABEL_87:
        __break(0x5512u);
        goto LABEL_88;
      }

      if (dword_10011B8F8[v14]) {
        (*(void (**)(void))(*(void *)qword_10011C6F0 + 104LL))();
      }
    }
  }

  int v15 = a2 & (a3 == (void *)8);
  char v16 = &unk_10011C000;
  if ((a2 & 1) != 0)
  {
    BOOL v18 = a3 == (void *)5 || (unint64_t)a3 - 7 < 2;
    if (qword_10011C6B0 != -1) {
      dispatch_once(&qword_10011C6B0, &stru_100107D78);
    }
    if (!qword_10011C6A8 || (qword_10011C6A8 & 7) != 0) {
      goto LABEL_83;
    }
    if (!(*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)qword_10011C6A8 + 240LL))( qword_10011C6A8,  a4,  0LL)) {
      return;
    }
    if (a3 == (void *)8 && v10)
    {
      if (qword_10011C6B0 != -1) {
        dispatch_once(&qword_10011C6B0, &stru_100107D78);
      }
      if (!qword_10011C6A8 || (qword_10011C6A8 & 7) != 0 || (v10 & 7) != 0) {
        goto LABEL_83;
      }
      if (sub_1000C8320(v10))
      {
        uint64_t v19 = *(void *)(v10 + 32);
        if (v19)
        {
          if ((v19 & 7) != 0) {
            goto LABEL_83;
          }
          uint64_t v20 = (_BYTE *)(v19 + 58);
          *uint64_t v20 = 0;
        }
      }
    }

    int v15 = a2 & (a3 == (void *)8);
    if (!v12) {
      goto LABEL_46;
    }
  }

  else
  {
    BOOL v18 = 0;
    if (!v12)
    {
LABEL_46:
      BOOL v21 = v18;
      sub_1000CEAEC( 0,  4,  "%s:%d Unexpected pPort==NULL! class=%xh type=%lxh\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapProtocolMgr.cpp",  1833,  a2,  a3);
      goto LABEL_57;
    }
  }

  int v22 = v15;
  if (qword_10011C6B0 != -1) {
    dispatch_once(&qword_10011C6B0, &stru_100107D78);
  }
  if (!qword_10011C6A8 || (qword_10011C6A8 & 7) != 0) {
    goto LABEL_83;
  }
  BOOL v21 = v18;
  int v23 = sub_10008C710(qword_10011C6A8, v12);
  int v24 = v23;
  if (((v22 | ((unsigned __int16)(a2 & 0x100) >> 8)) & 1) != 0)
  {
    int v24 = v23 | 1;
    char v16 = (void *)&unk_10011C000;
  }

  else
  {
    char v16 = &unk_10011C000;
    if (!v23) {
      goto LABEL_57;
    }
  }

  for (int i = 0; i != 15; ++i)
    sub_1000BA1B0(a4, i, a2, (uint64_t)a3, v12, v24, v24);
LABEL_57:
  sub_10008ED00(a1, a4);
  if (!v26 || (v26 & 7) != 0)
  {
LABEL_83:
    __break(0x5516u);
LABEL_84:
    __break(0x5513u);
    goto LABEL_85;
  }

  sub_10005EE10(v26, 4096, a4, v31, 0, 1u, 0);
LABEL_61:
  if (!v21) {
    goto LABEL_72;
  }
  uint64_t v27 = (pthread_mutex_t *)(a1 + 456);
  pthread_mutex_lock(v27);
  if (v16[214] != -1LL) {
    dispatch_once(&qword_10011C6B0, &stru_100107D78);
  }
  if (!qword_10011C6A8 || (qword_10011C6A8 & 7) != 0 || ((qword_10011C6A8 + 448) & 7) != 0) {
    goto LABEL_83;
  }
  if (!*(_DWORD *)(qword_10011C6A8 + 448)) {
    sub_1000D276C();
  }
  if (!qword_10011C6A8 || (qword_10011C6A8 & 7) != 0) {
    goto LABEL_83;
  }
  int v28 = *(_DWORD *)(qword_10011C6A8 + 448);
  int v29 = v28 - 1;
  if (!v28) {
    goto LABEL_85;
  }
  *(_DWORD *)(qword_10011C6A8 + 44_Block_object_dispose((const void *)(v1 - 120), 8) = v29;
  pthread_mutex_unlock(v27);
  if (v29)
  {
LABEL_72:
    if ((a2 & 0x400) == 0) {
      return;
    }
LABEL_81:
    sub_1000B8024(a3);
    return;
  }

  if (v16[214] != -1LL) {
    dispatch_once(&qword_10011C6B0, &stru_100107D78);
  }
  if (!qword_10011C6A8) {
    goto LABEL_83;
  }
  if ((qword_10011C6A8 & 7) != 0) {
    goto LABEL_83;
  }
  int v30 = (dispatch_semaphore_t *)(qword_10011C6A8 + 440);
  if (((qword_10011C6A8 + 440) & 7) != 0) {
    goto LABEL_83;
  }
  if (!*v30)
  {
LABEL_88:
    __break(0x5510u);
    return;
  }

  dispatch_semaphore_signal(*v30);
  if ((a2 & 0x400) != 0) {
    goto LABEL_81;
  }
}

BOOL sub_1000BA184(BOOL result, BOOL a2)
{
  if (result && !(result & 7))
  {
    if (!a2) {
      return 0LL;
    }
    if (!(a2 & 7)) {
      return sub_1000C8320(a2);
    }
  }

  __break(0x5516u);
  return result;
}

void sub_1000BA1B0(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  if (a2 >= 0) {
    int v13 = 1 << a2;
  }
  else {
    int v13 = 0;
  }
  if ((v13 & a6) != 0)
  {
    if (a1)
    {
      int v10 = a7;
      uint64_t v7 = a5;
      uint64_t v8 = a4;
      uint64_t v9 = a3;
      uint64_t v11 = &unk_10011C000;
      if (qword_10011C6B0 == -1)
      {
LABEL_8:
        if (qword_10011C6A8 && (qword_10011C6A8 & 7) == 0)
        {
          if ((sub_10008C648(qword_10011C6A8, a2, a1) & v9) == 0
            || (v9 & 8) != 0 && (v13 & v10) == 0)
          {
            return;
          }

          if ((a1 & 7) == 0)
          {
            sub_10005789C(a1, a2);
            if (v11[214] != -1LL) {
              dispatch_once(&qword_10011C6B0, &stru_100107D78);
            }
            if (qword_10011C6A8 && (qword_10011C6A8 & 7) == 0)
            {
              uint64_t v15 = sub_10008C2EC(qword_10011C6A8, a1, a2);
              if (!v15)
              {
                sub_1000CEAEC( 0,  4,  "%s:%d No Lingo Object! Cannot process event!\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapProtocolMgr.cpp",  1991);
                goto LABEL_28;
              }

              uint64_t v16 = v15;
              if (v11[214] != -1LL) {
                dispatch_once(&qword_10011C6B0, &stru_100107D78);
              }
              if (qword_10011C6A8 && (qword_10011C6A8 & 7) == 0)
              {
                sub_10008ED00(qword_10011C6A8, a1);
                if (!v17) {
                  sub_1000D276C();
                }
                if ((v16 & 7) == 0)
                {
                  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)v16 + 80LL))(v16, v9, v8, v7);
LABEL_28:
                  sub_1000578E8(a1, a2);
                  return;
                }
              }
            }
          }
        }

        __break(0x5516u);
LABEL_33:
        __break(0x550Au);
        return;
      }
    }

    else
    {
      __break(0x5518u);
    }

    dispatch_once(&qword_10011C6B0, &stru_100107D78);
    goto LABEL_8;
  }

uint64_t sub_1000BA3A8(uint64_t result, _DWORD *a2, _DWORD *a3)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_11;
  }
  if (!a2 || !a3)
  {
    __break(0x5518u);
    goto LABEL_11;
  }

  if ((a2 & 3) != 0)
  {
LABEL_11:
    __break(0x5516u);
    goto LABEL_12;
  }

  *a2 = dword_10011B8A0;
  if ((dword_10011B8A4 + 8) <= 0xF)
  {
    if ((a3 & 3) == 0)
    {
      *a3 = dword_10011B8A4;
      return result;
    }

    goto LABEL_11;
  }

uint64_t sub_1000BA40C(uint64_t result)
{
  if (!result || (v1 = (_BYTE *)result, (result & 7) != 0) || (uint64_t result = sub_100036FF0()) == 0 || (result & 7) != 0)
  {
LABEL_27:
    __break(0x5516u);
  }

  else
  {
    (*(void (**)(uint64_t, _BYTE *))(*(void *)result + 16LL))(result, v1 + 176);
    dword_10011B8A0 = 4;
    dword_10011B8A4 = 4;
    uint64_t v2 = sub_10000CEF8();
    pthread_mutex_lock(&stru_10011B978);
    uint64_t v3 = *(void *)(v2 + 8);
    uint64_t v9 = v3;
    while (v3 != v2)
    {
      uint64_t result = (uint64_t)sub_10000D014(&v9);
      if (*(void *)result) {
        BOOL v4 = (*(void *)result & 7LL) == 0;
      }
      else {
        BOOL v4 = 0;
      }
      if (!v4) {
        goto LABEL_27;
      }
      if (*(void *)(*(void *)result + 32LL))
      {
        uint64_t result = *sub_10000D014(&v9);
        if (result) {
          BOOL v5 = (result & 7) == 0;
        }
        else {
          BOOL v5 = 0;
        }
        if (!v5) {
          goto LABEL_27;
        }
        if ((*(unsigned int (**)(uint64_t))(*(void *)result + 240LL))(result))
        {
          uint64_t v6 = sub_10000D014(&v9);
          sub_10008C904((uint64_t)v1, *v6);
          uint64_t result = *sub_10000D014(&v9);
          if (!result || (result & 7) != 0) {
            goto LABEL_27;
          }
          if (!(*(unsigned int (**)(uint64_t))(*(void *)result + 216LL))(result))
          {
            uint64_t result = *sub_10000D014(&v9);
            if (!result || (result & 7) != 0) {
              goto LABEL_27;
            }
            unsigned int v7 = (*(uint64_t (**)(uint64_t))(*(void *)result + 296LL))(result);
            uint64_t v8 = sub_10000D014(&v9);
            (*(void (**)(_BYTE *, uint64_t, void, uint64_t, void))(*(void *)v1 + 48LL))( v1,  128LL,  v7,  *v8,  0LL);
          }
        }
      }

      sub_10000D048(&v9);
      uint64_t v3 = v9;
    }

    uint64_t result = pthread_mutex_unlock(&stru_10011B978);
    v1[200] = 1;
  }

  return result;
}

uint64_t sub_1000BA5A0(uint64_t result, int *a2)
{
  if (result)
  {
    uint64_t v2 = result;
    if ((result & 7) == 0)
    {
      int v6 = 0;
      BOOL v5 = &v6;
      uint64_t result = sub_10008E450(v2, (void (*)(uint64_t, uint64_t))sub_1000BA634, (uint64_t)&v5, 0LL);
      if (!a2)
      {
        int v4 = v6;
        return v4 == 0;
      }

      if ((a2 & 3) == 0)
      {
        int v4 = v6;
        *a2 = v6;
        return v4 == 0;
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000BA634(uint64_t result, unsigned int **a2)
{
  if (result && a2)
  {
    uint64_t v2 = result;
    int v4 = *a2;
    if (*a2)
    {
      unsigned int v3 = *v4;
    }

    else
    {
      unsigned int v3 = 0;
    }

    if (qword_10011C6B0 == -1) {
      goto LABEL_9;
    }
  }

  else
  {
    __break(0x5518u);
  }

  dispatch_once(&qword_10011C6B0, &stru_100107D78);
LABEL_9:
  uint64_t result = qword_10011C6A8;
  if (!qword_10011C6A8) {
    goto LABEL_27;
  }
  if ((qword_10011C6A8 & 7) != 0) {
    goto LABEL_27;
  }
  uint64_t result = sub_10008EED0(qword_10011C6A8, v2);
  if (!result) {
    goto LABEL_27;
  }
  if ((result & 7) != 0) {
    goto LABEL_27;
  }
  uint64_t result = sub_1000AB5F8(result);
  if ((v2 & 7) != 0) {
    goto LABEL_27;
  }
  else {
    unsigned int v5 = result;
  }
  unsigned int v6 = -1;
  do
  {
    uint64_t result = sub_1000576B8(v2, ++v6);
  }

  while (v6 < 0xE);
  if (v4)
  {
    if ((v4 & 3) == 0)
    {
      *int v4 = v5;
      return result;
    }

uint64_t sub_1000BA724(uint64_t a1, int *a2)
{
  return sub_1000BA5A0(a1 - 184, a2);
}

uint64_t sub_1000BA72C(uint64_t result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
    __break(0x5516u);
    goto LABEL_8;
  }

  if ((dword_10011B8A0 + 8) >= 0x10)
  {
LABEL_8:
    __break(0x550Au);
    return result;
  }

  if (dword_10011B8A0 == 4) {
    (*(void (**)(uint64_t))(*(void *)result + 72LL))(result);
  }
  return (*(uint64_t (**)(uint64_t))(*(void *)v1 + 80LL))(v1);
}

uint64_t sub_1000BA794(uint64_t a1)
{
  return sub_1000BA72C(a1 - 184);
}

uint64_t sub_1000BA79C(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, void, void))(*(void *)result + 48LL))( result,  1LL,  5LL,  0LL,  0LL);
    return 1LL;
  }

  return result;
}

uint64_t sub_1000BA7DC(uint64_t a1)
{
  uint64_t result = a1 - 184;
  if ((result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, void, void))(*(void *)result + 48LL))( result,  1LL,  5LL,  0LL,  0LL);
    return 1LL;
  }

  return result;
}

uint64_t sub_1000BA81C(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    byte_10011D09C = 1;
    (*(void (**)(uint64_t, uint64_t, uint64_t, void, void))(*(void *)result + 48LL))( result,  1LL,  8LL,  0LL,  0LL);
    byte_10011D09C = 0;
    return 1LL;
  }

  return result;
}

uint64_t sub_1000BA874(uint64_t a1)
{
  uint64_t result = a1 - 184;
  if ((result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    byte_10011D09C = 1;
    (*(void (**)(uint64_t, uint64_t, uint64_t, void, void))(*(void *)result + 48LL))( result,  1LL,  8LL,  0LL,  0LL);
    byte_10011D09C = 0;
    return 1LL;
  }

  return result;
}

uint64_t sub_1000BA8CC(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, void, void))(*(void *)result + 48LL))( result,  1LL,  6LL,  0LL,  0LL);
    return 1LL;
  }

  return result;
}

uint64_t sub_1000BA90C(uint64_t a1)
{
  uint64_t result = a1 - 184;
  if ((result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, void, void))(*(void *)result + 48LL))( result,  1LL,  6LL,  0LL,  0LL);
    return 1LL;
  }

  return result;
}

dispatch_source_s *sub_1000BA94C(dispatch_source_s *result, pthread_mutex_t *a2)
{
  if (!result || (uint64_t v2 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    pthread_mutex_lock(&stru_10011B978);
    sub_1000BA9C0((uint64_t)a2);
    sub_10008D37C(v2, (uint64_t)a2);
    sub_100054548((char *)v2, (uint64_t)a2);
    sub_1000AFCFC(a2);
    return (dispatch_source_s *)pthread_mutex_unlock(&stru_10011B978);
  }

  return result;
}

void sub_1000BA9C0(uint64_t a1)
{
  uint64_t v5 = a1;
  sub_10000CEF8();
  pthread_mutex_lock(&stru_10011B978);
  if (qword_10011D0D8) {
    BOOL v1 = (qword_10011D0D8 & 7) == 0;
  }
  else {
    BOOL v1 = 0;
  }
  if (v1
    && ((sub_100056E4C(qword_10011D0D8, &v5),
         uint64_t v2 = CFNotificationCenterGetDarwinNotifyCenter(),
         CFNotificationCenterPostNotification(v2, @"IAPDTransportListChangedNotification", 0LL, 0LL, 1u),
         qword_10011D0D8)
      ? (BOOL v3 = (qword_10011D0D8 & 7) == 0)
      : (BOOL v3 = 0),
        v3 && ((qword_10011D0D8 + 16) & 7) == 0))
  {
    if (*(void *)(qword_10011D0D8 + 16) == 1LL)
    {
      DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
      CFNotificationCenterPostNotification( DarwinNotifyCenter,  @"IAPDTransportListItemAddedNotification",  0LL,  0LL,  1u);
    }

    pthread_mutex_unlock(&stru_10011B978);
  }

  else
  {
    __break(0x5516u);
  }

dispatch_source_s *sub_1000BAA8C(uint64_t a1, pthread_mutex_t *a2)
{
  return sub_1000BA94C((dispatch_source_s *)(a1 - 192), a2);
}

uint64_t sub_1000BAA94(uint64_t result, uint64_t *a2)
{
  if (!result || (uint64_t v2 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    pthread_mutex_lock(&stru_10011B978);
    sub_1000BAB14(v2, (uint64_t)a2);
    sub_1000545F0(v2, (uint64_t)a2);
    sub_10008D3D8(v2, (uint64_t)a2);
    sub_1000AFE8C(a2);
    sub_1000BAC2C((uint64_t)a2);
    return pthread_mutex_unlock(&stru_10011B978);
  }

  return result;
}

void sub_1000BAB14(uint64_t a1, uint64_t a2)
{
  if (!a1) {
    goto LABEL_24;
  }
  if ((a1 & 7) != 0) {
    goto LABEL_24;
  }
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 208));
  int v10 = (uint64_t *)0xAAAAAAAAAAAAAAAALL;
  if (((a1 + 272) & 7) != 0 || ((a1 + 280) & 7) != 0) {
    goto LABEL_24;
  }
  int v4 = *(uint64_t **)(a1 + 280);
  int v10 = v4;
  while (v4 != (uint64_t *)(a1 + 272))
  {
    uint64_t v5 = sub_10000D014((uint64_t *)&v10);
    unsigned int v6 = (void *)*v5;
    if (*v5) {
      BOOL v7 = (*v5 & 7) == 0;
    }
    else {
      BOOL v7 = 0;
    }
    if (v6[2] == a2)
    {
      int v10 = (uint64_t *)sub_100020944(a1 + 272, v10);
      operator delete(v6);
    }

    else
    {
      sub_10000D048(&v10);
    }

    int v4 = v10;
  }

  if (((a1 + 288) & 7) != 0)
  {
LABEL_24:
    __break(0x5516u);
  }

  else
  {
    if (!*(void *)(a1 + 288))
    {
      uint64_t v9 = *(dispatch_source_s **)(a1 + 296);
      if (v9) {
        dispatch_source_set_timer(v9, 0xFFFFFFFFFFFFFFFFLL, 0xFFFFFFFFFFFFFFFFLL, 0LL);
      }
    }

    pthread_mutex_unlock((pthread_mutex_t *)(a1 + 208));
  }

void sub_1000BAC2C(uint64_t a1)
{
  uint64_t v5 = a1;
  sub_10000CEF8();
  pthread_mutex_lock(&stru_10011B978);
  if (qword_10011D0D8) {
    BOOL v1 = (qword_10011D0D8 & 7) == 0;
  }
  else {
    BOOL v1 = 0;
  }
  if (v1
    && ((sub_100028960((void *)qword_10011D0D8, &v5),
         uint64_t v2 = CFNotificationCenterGetDarwinNotifyCenter(),
         CFNotificationCenterPostNotification(v2, @"IAPDTransportListChangedNotification", 0LL, 0LL, 1u),
         qword_10011D0D8)
      ? (BOOL v3 = (qword_10011D0D8 & 7) == 0)
      : (BOOL v3 = 0),
        v3 && ((qword_10011D0D8 + 16) & 7) == 0))
  {
    if (!*(void *)(qword_10011D0D8 + 16))
    {
      DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
      CFNotificationCenterPostNotification( DarwinNotifyCenter,  @"IAPDEmptyTransportListNotification",  0LL,  0LL,  1u);
    }

    pthread_mutex_unlock(&stru_10011B978);
  }

  else
  {
    __break(0x5516u);
  }

uint64_t sub_1000BACF4(uint64_t result, uint64_t a2)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)result + 48LL))( result,  256LL,  1LL,  a2,  0LL);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000BAD20(uint64_t a1, uint64_t a2)
{
  uint64_t result = a1 - 184;
  if ((result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)result + 48LL))( result,  256LL,  1LL,  a2,  0LL);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000BAD4C(uint64_t result, uint64_t a2)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, void))(*(void *)result + 48LL))( result,  256LL,  0LL,  a2,  0LL);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000BAD78(uint64_t a1, uint64_t a2)
{
  uint64_t result = a1 - 184;
  if ((result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, void))(*(void *)result + 48LL))( result,  256LL,  0LL,  a2,  0LL);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000BADA4(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, void))(*(void *)result + 224LL))( result,  a2,  a3,  0LL,  0LL);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000BADC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = a1 - 176;
  if ((result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, void))(*(void *)result + 224LL))( result,  a2,  a3,  0LL,  0LL);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000BADEC(uint64_t result, int a2, uint64_t a3, _BYTE *a4, int a5)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_20;
  }
  switch(a2)
  {
    case 327707:
      if (a5 == 1)
      {
        if (!a4)
        {
LABEL_20:
          __break(0x5516u);
          return result;
        }

        if (*a4) {
          uint64_t v5 = 1LL;
        }
        else {
          uint64_t v5 = 2LL;
        }
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, void))(*(void *)result + 48LL))( result,  1LL,  v5,  0LL,  0LL);
      }

uint64_t sub_1000BAEF0(uint64_t a1, int a2, uint64_t a3, _BYTE *a4, int a5)
{
  return sub_1000BADEC(a1 - 176, a2, a3, a4, a5);
}

uint64_t sub_1000BAEF8(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0)
  {
LABEL_7:
    __break(0x5516u);
    return result;
  }

  if (a2)
  {
    if ((a2 & 7) == 0) {
      return sub_1000C8308(a2, 1);
    }
    goto LABEL_7;
  }

  return result;
}

void sub_1000BAF24(uint64_t a1, uint64_t a2, signed int a3)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_45;
  }
  if (!a2)
  {
    if ((a3 + 32) < 0x40)
    {
      int v6 = -1;
      goto LABEL_12;
    }

    goto LABEL_46;
  }

  if ((a2 & 7) != 0)
  {
LABEL_45:
    __break(0x5516u);
    goto LABEL_46;
  }

  if ((sub_1000569F0(a2) & 1) == 0)
  {
    if ((a3 + 32) < 0x40)
    {
      switch(a3)
      {
        case 0:
          uint64_t v7 = (uint64_t)operator new(0x960uLL);
          if ((v7 & 0xF) != 0) {
            goto LABEL_45;
          }
          uint64_t v8 = v7;
          sub_10006ECC8(v7, a2);
          break;
        case 1:
          uint64_t v9 = (uint64_t)operator new(0x4F8uLL);
          if ((v9 & 0xF) != 0) {
            goto LABEL_45;
          }
          uint64_t v8 = v9;
          sub_10008B43C(v9, a2);
          break;
        case 2:
          uint64_t v10 = (uint64_t)operator new(0x11B8uLL);
          if ((v10 & 0xF) != 0) {
            goto LABEL_45;
          }
          uint64_t v8 = v10;
          sub_10009FEFC(v10, a2);
          break;
        case 3:
          uint64_t v11 = (uint64_t)operator new(0xB58uLL);
          if ((v11 & 0xF) != 0) {
            goto LABEL_45;
          }
          uint64_t v8 = v11;
          sub_100069798(v11, a2);
          break;
        case 4:
          sub_100090EBC(a2);
          if (!v12) {
            goto LABEL_9;
          }
          goto LABEL_32;
        case 5:
          uint64_t v13 = (uint64_t)operator new(0x4B0uLL);
          if ((v13 & 0xF) != 0) {
            goto LABEL_45;
          }
          uint64_t v8 = v13;
          sub_10009F7B8(v13, a2);
          break;
        case 6:
          uint64_t v14 = (uint64_t)operator new(0x4F8uLL);
          if ((v14 & 0xF) != 0) {
            goto LABEL_45;
          }
          uint64_t v8 = v14;
          sub_1000A9270(v14, a2);
          break;
        case 8:
          uint64_t v15 = (uint64_t)operator new(0x510uLL);
          if ((v15 & 0xF) != 0) {
            goto LABEL_45;
          }
          uint64_t v8 = v15;
          sub_10005FC7C(v15, a2);
          break;
        case 9:
          uint64_t v12 = sub_1000A47A4(a2);
          if (!v12) {
            goto LABEL_9;
          }
LABEL_32:
          uint64_t v8 = (uint64_t)v12;
          break;
        case 10:
          uint64_t v16 = (uint64_t)operator new(0x5A0uLL);
          if ((v16 & 0xF) != 0) {
            goto LABEL_45;
          }
          uint64_t v8 = v16;
          sub_10006504C(v16, a2);
          break;
        case 11:
          uint64_t v17 = (uint64_t)operator new(0x4B0uLL);
          if ((v17 & 0xF) != 0) {
            goto LABEL_45;
          }
          uint64_t v8 = v17;
          sub_1000A7EBC(v17, a2);
          break;
        case 12:
          uint64_t v18 = (uint64_t)operator new(0xB80uLL);
          if ((v18 & 0xF) != 0) {
            goto LABEL_45;
          }
          uint64_t v8 = v18;
          sub_1000A5A7C(v18, a2);
          break;
        case 13:
          uint64_t v19 = (uint64_t)operator new(0x4E8uLL);
          if ((v19 & 0xF) != 0) {
            goto LABEL_45;
          }
          uint64_t v8 = v19;
          sub_10008F364(v19, a2);
          break;
        case 14:
          uint64_t v20 = (uint64_t)operator new(0x4C0uLL);
          if ((v20 & 0xF) != 0) {
            goto LABEL_45;
          }
          uint64_t v8 = v20;
          sub_100088824(v20, a2);
          break;
        default:
          goto LABEL_9;
      }

      if ((v8 & 7) == 0)
      {
        sub_10008D750(a1, a3, v8, a2);
        return;
      }

      goto LABEL_45;
    }

    goto LABEL_46;
  }

uint64_t sub_1000BB1D8(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result) {
    goto LABEL_11;
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_11;
  }
  if (!a2)
  {
    __break(0x5518u);
    goto LABEL_11;
  }

  if ((a2 & 7) != 0)
  {
LABEL_11:
    __break(0x5516u);
    goto LABEL_12;
  }

  if ((a3 + 32) > 0x3F)
  {
LABEL_12:
    __break(0x550Au);
    return result;
  }

  sub_10005789C(a2, a3);
  uint64_t v6 = sub_10008C2EC(v3, a2, a3);
  if (!v6)
  {
    uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v3 + 232LL))(v3, a2, a3);
    if (!v6) {
      sub_1000CEAEC(0, 4, "Couldn't get lingo(%d) object! handle=%hhx\n", a3, a2);
    }
  }

  sub_1000578E8(a2, a3);
  return v6;
}

uint64_t sub_1000BB2A4(uint64_t result, uint64_t a2, int a3)
{
  if (!result) {
    goto LABEL_30;
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_30;
  }
  if (!a2)
  {
    __break(0x5518u);
    goto LABEL_30;
  }

  if ((a2 & 7) != 0)
  {
LABEL_30:
    __break(0x5516u);
    return result;
  }

  uint64_t v5 = sub_10001864C(a2);
  int v6 = a3;
  if (!v5)
  {
    int v6 = a3;
    if (!sub_100056A48(a2))
    {
      if (a3) {
        sub_1000CEAEC(0, 4, "Null Port! Setting activeMask to NONE. handle=%hhx reqLingoes=%xh\n", a2, a3);
      }
      int v6 = 0;
    }
  }

  uint64_t v7 = 0LL;
  uint64_t v8 = 0LL;
  uint64_t v9 = 1LL;
  uint64_t v10 = "Couldn't get lingo(%d) object! handle=%hhx port=%s\n";
  do
  {
    int v11 = 1 << v7;
    if (((1 << v7) & v6) != 0)
    {
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v3 + 240LL))(v3, a2, v7);
      if (result)
      {
        uint64_t v8 = v11 | v8;
      }

      else
      {
        if (v5)
        {
          if ((v5 & 7) != 0) {
            goto LABEL_30;
          }
          uint64_t v15 = (const char *)(*(uint64_t (**)(uint64_t))(*(void *)v5 + 208LL))(v5);
        }

        else
        {
          uint64_t v15 = "";
        }

        sub_1000CEAEC(0, 4, v10, v7, a2, v15);
        uint64_t v9 = 0LL;
      }
    }

    else if ((_DWORD)v7 && !sub_100056A48(a2))
    {
      uint64_t v12 = v9;
      uint64_t v13 = v10;
      int v14 = sub_10008C7E4(v3, v5);
      sub_10005789C(a2, v7);
      if ((v14 & v11) == 0 && sub_10008C2EC(v3, a2, v7)) {
        sub_10008D828(v3, v7, a2);
      }
      sub_1000578E8(a2, v7);
      uint64_t v10 = v13;
      uint64_t v9 = v12;
    }

    uint64_t v7 = (v7 + 1);
  }

  while ((_DWORD)v7 != 15);
  sub_10008C6C4(v3, v5, v8);
  unsigned int v16 = sub_10008C710(v3, v5);
  int v17 = sub_10008C7E4(v3, v5);
  sub_100057C0C(a2, v17 | v16);
  if ((v9 & 1) == 0) {
    sub_1000CEAEC(0, 4, "Failed creating all lingo objects requested=%xh mask=%xh successMask=%xh!\n", a3, v6, v8);
  }
  return v8;
}

uint64_t sub_1000BB4D4(uint64_t result, uint64_t a2)
{
  if (!result || (uint64_t v2 = result, (result & 7) != 0) || !a2 || (a2 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t v3 = sub_10001864C(a2);
    return sub_10008C710(v2, v3);
  }

  return result;
}

uint64_t sub_1000BB51C(uint64_t result, uint64_t a2, int a3)
{
  if (!result) {
    goto LABEL_30;
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_30;
  }
  if (!a2)
  {
    __break(0x5518u);
    goto LABEL_30;
  }

  if ((a2 & 7) != 0)
  {
LABEL_30:
    __break(0x5516u);
    return result;
  }

  uint64_t v5 = sub_10001864C(a2);
  int v6 = a3;
  if (!v5)
  {
    int v6 = a3;
    if (!sub_100056A48(a2))
    {
      if (a3) {
        sub_1000CEAEC(0, 4, "Null Port! Setting allowedMask to NONE. handle=%hhx reqLingoes=%xh\n", a2, a3);
      }
      int v6 = 0;
    }
  }

  uint64_t v7 = 0LL;
  uint64_t v8 = 0LL;
  uint64_t v9 = 1LL;
  uint64_t v10 = "Couldn't get lingo(%d) object! handle=%hhx port=%s\n";
  do
  {
    int v11 = 1 << v7;
    if (((1 << v7) & v6) != 0)
    {
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v3 + 240LL))(v3, a2, v7);
      if (result)
      {
        uint64_t v8 = v11 | v8;
      }

      else
      {
        if (v5)
        {
          if ((v5 & 7) != 0) {
            goto LABEL_30;
          }
          uint64_t v15 = (const char *)(*(uint64_t (**)(uint64_t))(*(void *)v5 + 208LL))(v5);
        }

        else
        {
          uint64_t v15 = "";
        }

        sub_1000CEAEC(0, 4, v10, v7, a2, v15);
        uint64_t v9 = 0LL;
      }
    }

    else if ((_DWORD)v7 && !sub_100056A48(a2))
    {
      uint64_t v12 = v9;
      uint64_t v13 = v10;
      int v14 = sub_10008C710(v3, v5);
      sub_10005789C(a2, v7);
      if ((v14 & v11) == 0 && sub_10008C2EC(v3, a2, v7)) {
        sub_10008D828(v3, v7, a2);
      }
      sub_1000578E8(a2, v7);
      uint64_t v10 = v13;
      uint64_t v9 = v12;
    }

    uint64_t v7 = (v7 + 1);
  }

  while ((_DWORD)v7 != 15);
  sub_10008C798(v3, v5, v8);
  unsigned int v16 = sub_10008C710(v3, v5);
  int v17 = sub_10008C7E4(v3, v5);
  sub_100057C0C(a2, v17 | v16);
  if ((v9 & 1) == 0) {
    sub_1000CEAEC(0, 4, "Failed creating all lingo objects requested=%xh mask=%xh success%xh!\n", a3, v6, v8);
  }
  return v8;
}

uint64_t sub_1000BB74C(uint64_t result, uint64_t a2)
{
  if (!result || (uint64_t v2 = result, (result & 7) != 0) || !a2 || (a2 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t v3 = sub_10001864C(a2);
    return sub_10008C7E4(v2, v3);
  }

  return result;
}

uint64_t sub_1000BB794(uint64_t result, uint64_t a2, unsigned int a3)
{
  if (!result || (uint64_t v3 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    int v6 = (*(uint64_t (**)(uint64_t))(*(void *)result + 152LL))(result);
    return (*(unsigned int (**)(uint64_t, uint64_t, void))(*(void *)v3 + 144LL))(v3, a2, v6 | a3) & a3;
  }

  return result;
}

uint64_t sub_1000BB7FC(uint64_t result, uint64_t a2, unsigned int a3)
{
  if (!result || (uint64_t v3 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    int v6 = (*(uint64_t (**)(uint64_t))(*(void *)result + 168LL))(result);
    return (*(unsigned int (**)(uint64_t, uint64_t, void))(*(void *)v3 + 160LL))(v3, a2, v6 | a3) & a3;
  }

  return result;
}

void sub_1000BB864(uint64_t a1, uint64_t a2, char *a3)
{
  if (!a1 || (a1 & 7) != 0 || !a2 || (a2 & 7) != 0) {
    goto LABEL_27;
  }
  uint64_t v5 = *(void *)(a2 + 8);
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 304));
  uint64_t v6 = sub_10008E550(a1, v5, 0);
  if (v6)
  {
    uint64_t v7 = v6;
  }

  else
  {
    if (!v5 || (v5 & 7) != 0) {
      goto LABEL_27;
    }
    if (!sub_100010620(v5) || (uint64_t v9 = (uint64_t)sub_10008EBB4((uint64_t *)a1, v5)) == 0)
    {
      uint64_t v7 = sub_10008E2E0(a1);
      char v8 = 1;
LABEL_18:
      if (!v7) {
        goto LABEL_24;
      }
      if ((v7 & 7) == 0)
      {
        if (sub_1000568BC(v7)) {
          goto LABEL_24;
        }
        if ((v5 & 7) == 0)
        {
          goto LABEL_24;
        }
      }

uint64_t sub_1000BB9C4(uint64_t result, unsigned int a2, uint64_t a3, uint64_t a4)
{
  if (!result) {
    goto LABEL_41;
  }
  uint64_t v4 = result;
  if ((result & 7) != 0) {
    goto LABEL_41;
  }
  int v6 = a3;
  BOOL v8 = a3 != 100;
  BOOL v9 = a3 == 1;
  pthread_mutex_lock((pthread_mutex_t *)(result + 304));
  if ((a2 & 0x18C) == 0)
  {
    if ((a2 & 0x241) == 0)
    {
LABEL_23:
      uint64_t v10 = 0LL;
      goto LABEL_39;
    }

    __break(0x5518u);
    goto LABEL_10;
  }

  if (!a4)
  {
LABEL_10:
    if ((a2 & 0x100) == 0) {
      goto LABEL_18;
    }
    uint64_t result = sub_10008E5D4(v4, 0);
    if (result || (uint64_t result = sub_10008E5D4(v4, 1u)) != 0)
    {
      uint64_t v10 = result;
      a4 = 0LL;
      goto LABEL_34;
    }

    int v11 = (uint64_t *)v4;
    uint64_t v12 = 0LL;
    goto LABEL_17;
  }

  uint64_t result = sub_10008E550(v4, a4, 0);
  if (result)
  {
    uint64_t v10 = result;
    if ((a2 & 0x180) == 0)
    {
LABEL_25:
      if ((a4 & 7) != 0) {
        goto LABEL_41;
      }
      uint64_t result = sub_100010620(a4);
      if ((result & 1) != 0) {
        goto LABEL_27;
      }
LABEL_39:
      pthread_mutex_unlock((pthread_mutex_t *)(v4 + 304));
      return v10;
    }

    goto LABEL_27;
  }

  if ((a4 & 7) != 0) {
    goto LABEL_41;
  }
  int v11 = (uint64_t *)v4;
  uint64_t v12 = a4;
LABEL_17:
  uint64_t result = (uint64_t)sub_10008EA78(v11, v12);
  uint64_t v10 = result;
  if (result) {
    goto LABEL_20;
  }
LABEL_18:
  uint64_t result = sub_10008E2E0(v4);
  uint64_t v10 = result;
  if (!result) {
    goto LABEL_39;
  }
LABEL_20:
  if ((a2 & 0x180) == 0)
  {
    if (!a4) {
      goto LABEL_39;
    }
    goto LABEL_25;
  }

  if (a4)
  {
LABEL_27:
    if ((a4 & 7) != 0) {
      goto LABEL_41;
    }
    if ((a2 & 0x80) != 0)
    {
      uint64_t v13 = *(void *)(a4 + 32);
      if (v13)
      {
        if ((v13 & 7) != 0) {
          goto LABEL_41;
        }
        int v14 = (_DWORD *)(v13 + 52);
        *int v14 = v6;
      }
    }

    a4 = *(void *)(a4 + 40);
  }

uint64_t sub_1000BBBAC(uint64_t result, _BYTE *a2, char *a3)
{
  if (!a2 || (*a2 = -1, !a3))
  {
LABEL_19:
    __break(0x5516u);
    goto LABEL_20;
  }

  *a3 = -1;
  if ((result + 32) >= 0x40)
  {
LABEL_20:
    __break(0x550Au);
    return result;
  }

  switch((int)result)
  {
    case 0:
      *a2 = 1;
      char v4 = 9;
      goto LABEL_18;
    case 1:
    case 10:
    case 12:
      *a2 = 1;
      char v4 = 2;
      goto LABEL_18;
    case 2:
    case 11:
      *a2 = 1;
      char v4 = 3;
      goto LABEL_18;
    case 3:
      *a2 = 1;
      char v4 = 5;
      goto LABEL_18;
    case 4:
      *a2 = 1;
      uint64_t result = dword_10011B6C4;
      if (dword_10011B6C4 != -1) {
        goto LABEL_15;
      }
      uint64_t result = sub_10002ACC4();
      if (!result || (result & 7) != 0) {
        goto LABEL_19;
      }
      uint64_t result = (*(uint64_t (**)(uint64_t, char *))(*(void *)result + 360LL))(result, off_10011B6C8);
      dword_10011B6C4 = result;
LABEL_15:
      if ((_DWORD)result) {
        char v4 = 12;
      }
      else {
        char v4 = 14;
      }
LABEL_18:
      *a3 = v4;
      break;
    case 5:
    case 9:
      char v4 = 1;
      *a2 = 1;
      goto LABEL_18;
    case 6:
    case 8:
    case 13:
    case 14:
      char v4 = 0;
      *a2 = 1;
      goto LABEL_18;
    default:
      return result;
  }

  return result;
}

uint64_t sub_1000BBCEC(uint64_t result, int a2, unsigned int a3, unsigned int a4)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else if (a2 == 327685)
  {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, uint64_t, uint64_t))(*(void *)result + 128LL))( result,  2LL,  327685LL,  0LL,  a3,  a4,  0LL,  0LL,  0LL,  0LL,  v4,  v5);
  }

  return result;
}

uint64_t sub_1000BBD54(uint64_t a1, int a2, unsigned int a3, unsigned int a4)
{
  return sub_1000BBCEC(a1 - 176, a2, a3, a4);
}

uint64_t sub_1000BBD5C(uint64_t result)
{
  if ((*(void *)(result + 32) & 7LL) == 0) {
    return sub_10008C904(*(void *)(result + 32), *(void *)(result + 40));
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000BBD78( uint64_t result, unsigned int a2, int a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (!result || (uint64_t v8 = result, (result & 7) != 0) || (result = (uint64_t)operator new(0x30uLL), (result & 0xF) != 0))
  {
LABEL_13:
    __break(0x5516u);
    goto LABEL_14;
  }

  *(_OWORD *)(result + 16) = 0u;
  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)uint64_t result = 0u;
  if (a2 <= 7)
  {
    if ((result & 7) == 0)
    {
      *(_DWORD *)uint64_t result = a2;
      if ((((_BYTE)result + 4) & 3) == 0)
      {
        *(_DWORD *)(result + 4) = a3;
        if ((((_BYTE)result + 16) & 7) == 0)
        {
          *(void *)(result + 16) = a5;
          if ((((_BYTE)result + 8) & 7) == 0)
          {
            *(_DWORD *)(result + _Block_object_dispose((const void *)(v1 - 120), 8) = a4;
            if ((((_BYTE)result + 24) & 7) == 0)
            {
              *(void *)(result + 24) = a6;
              if ((((_BYTE)result + 32) & 7) == 0)
              {
                *(void *)(result + 32) = a7;
                if ((((_BYTE)result + 40) & 7) == 0)
                {
                  *(void *)(result + 40) = a8;
                  (*(void (**)(uint64_t, uint64_t))(*(void *)v8 + 48LL))(v8, 1024LL);
                  return 1LL;
                }
              }
            }
          }
        }
      }
    }

    goto LABEL_13;
  }

uint64_t sub_1000BBE90( uint64_t result, signed int a2, int a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (!result || (uint64_t v8 = result, (result & 7) != 0) || (result = (uint64_t)operator new(0x20uLL), (result & 0xF) != 0))
  {
LABEL_19:
    __break(0x5516u);
    goto LABEL_20;
  }

  uint64_t v16 = result;
  if (!a8)
  {
    uint64_t result = sub_10008C35C(v8, a2);
    a8 = result;
  }

  if (!a7 && a8)
  {
    uint64_t result = sub_10008E168(v8, a8);
    a7 = result;
  }

  if (!a7) {
    return a7 != 0;
  }
  *(_OWORD *)uint64_t v16 = 0u;
  *(_OWORD *)(v16 + 16) = 0u;
  if ((a2 + 32) <= 0x3F)
  {
    if ((v16 & 7) == 0)
    {
      *(_DWORD *)uint64_t v16 = a2;
      if ((((_BYTE)v16 + 4) & 3) == 0)
      {
        *(_DWORD *)(v16 + 4) = a3;
        if ((((_BYTE)v16 + 8) & 7) == 0)
        {
          *(void *)(v16 + _Block_object_dispose((const void *)(v1 - 120), 8) = a4;
          if ((((_BYTE)v16 + 16) & 7) == 0)
          {
            *(_DWORD *)(v16 + 16) = a5;
            if ((((_BYTE)v16 + 24) & 7) == 0)
            {
              *(void *)(v16 + 24) = a6;
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)v8 + 48LL))( v8,  0x2000LL,  v16,  a7,  0LL);
              return a7 != 0;
            }
          }
        }
      }
    }

    goto LABEL_19;
  }

uint64_t *sub_1000BBFD4(uint64_t *result)
{
  if (result)
  {
    BOOL v1 = result;
    if ((result & 7) == 0)
    {
      v8[0] = 0xAAAAAAAAAAAAAAAALL;
      v8[1] = 0xAAAAAAAAAAAAAAAALL;
      sub_1000CE91C((uint64_t)v8, 1u);
      v7[1] = 0xAAAAAAAAAAAAAAAALL;
      v8[0] = off_100103838;
      v7[0] = 0xAAAAAAAAAAAAAAAALL;
      sub_1000CE9E8((uint64_t)v8, v7);
      uint64_t result = sub_100027C8C(v7);
      uint64_t v2 = v1[65];
      unint64_t v3 = v1[66];
      if (v2 == v3)
      {
        BOOL v4 = __CFADD__(v2, 60000LL);
        unint64_t v5 = v2 + 60000;
        if (!v4)
        {
LABEL_5:
          BOOL v6 = (unint64_t)result >= v5;
          v8[0] = off_100103838;
          sub_1000CE94C(v8);
          return (uint64_t *)v6;
        }
      }

      else
      {
        unint64_t v5 = v3 + 20000;
        if (v3 < 0xFFFFFFFFFFFFB1E0LL) {
          goto LABEL_5;
        }
      }

      __break(0x5500u);
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000BC08C(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return pthread_mutex_lock((pthread_mutex_t *)(result + 368));
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000BC0A4(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return pthread_mutex_unlock((pthread_mutex_t *)(result + 368));
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000BC0BC(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 48LL))(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000BC0D8(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 56LL))(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000BC0F4(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 64LL))(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000BC110(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 72LL))(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000BC12C(uint64_t result, uint64_t a2, uint64_t a3, unsigned int a4)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(*(void *)result + 48LL))(result, a2, a3, a4);
  }
  __break(0x5516u);
  return result;
}

void sub_1000BC14C(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

void sub_1000BC160(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

uint64_t sub_1000BC174(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 64LL))(result);
  }
  __break(0x5516u);
  return result;
}

void sub_1000BC190(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

void sub_1000BC1A4(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

uint64_t sub_1000BC1B8()
{
  qword_10011C6F0 = sub_1000BC2D4(0LL, 1u, 0, "protocolMgr.eventInQMs");
  qword_10011C6E8 = sub_1000BC2D4(0LL, 1u, 0, "protocolMgr.eventToQMs");
  uint64_t result = sub_1000BC2D4(0LL, 1u, 1u, "protocolMgr.eventHistory");
  qword_10011C6E0 = result;
  return result;
}

uint64_t sub_1000BC228(uint64_t result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    sub_1000180FC(result);
    return v1;
  }

  return result;
}

void sub_1000BC260()
{
  uint64_t v0 = 0LL;
  while (dword_10011B8F8[v0] != -1)
  {
LABEL_6:
    if (++v0 == 4) {
      return;
    }
  }

  uint64_t v1 = sub_10002ACC4();
  if (v1 && (v1 & 7) == 0)
  {
    dword_10011B8F8[v0] = (*(uint64_t (**)(uint64_t, char *))(*(void *)v1 + 360LL))(v1, (&off_10011B918)[v0]);
    goto LABEL_6;
  }

  __break(0x5516u);
}

uint64_t sub_1000BC2D4(uint64_t result, unsigned int a2, unsigned int a3, const char *a4)
{
  if (a3 >= 4) {
    goto LABEL_13;
  }
  uint64_t v6 = result;
  if (a3 == 1)
  {
    uint64_t result = (uint64_t)operator new(0x168uLL);
    if ((result & 0xF) != 0) {
      goto LABEL_14;
    }
    if (a2 <= 7)
    {
      if ((result & 7) == 0) {
        return sub_1000BCAF8(result, v6, a2, a4);
      }
      goto LABEL_14;
    }

uint64_t sub_1000BC388(uint64_t result, uint64_t a2, unsigned int a3, unsigned int a4, const char *a5)
{
  if (!result) {
    goto LABEL_16;
  }
  uint64_t v5 = result;
  if ((result & 7) != 0) {
    goto LABEL_16;
  }
  *(void *)uint64_t result = off_100108148;
  if (a2)
  {
    if ((a2 & 7) != 0) {
      goto LABEL_16;
    }
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 216LL))(a2);
  }

  else
  {
    uint64_t result = 5LL;
  }

  *(_DWORD *)(v5 + _Block_object_dispose((const void *)(v1 - 120), 8) = result;
  if (a3 >= 8) {
    goto LABEL_17;
  }
  *(_DWORD *)(v5 + 76) = a3;
  if (a4 > 3) {
    goto LABEL_17;
  }
  *(_DWORD *)(v5 + 80) = a4;
  uint64_t result = pthread_once(&stru_10011B908, sub_1000BC260);
  if (!a2)
  {
    uint64_t v10 = "system";
    goto LABEL_13;
  }

  if ((a2 & 7) != 0)
  {
LABEL_16:
    __break(0x5516u);
LABEL_17:
    __break(0x550Au);
    return result;
  }

  uint64_t v10 = (const char *)(*(uint64_t (**)(uint64_t))(*(void *)a2 + 208LL))(a2);
LABEL_13:
  snprintf((char *)(v5 + 12), 0x40uLL, "com.apple.iapd.stat.%s.%s", v10, a5);
  if (a4 <= 1)
  {
    uint64_t v11 = v5;
    sub_100056E4C((uint64_t)&qword_10011D0A0, &v11);
  }

  return v5;
}

void sub_1000BC4A4(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

void sub_1000BC4B8(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

uint64_t sub_1000BC4CC(uint64_t result, int a2)
{
  if (result >= 8)
  {
    __break(0x550Au);
    goto LABEL_16;
  }

  unsigned int v2 = result;
  if (!a2)
  {
    if (~(unint64_t)dword_10011B8F8 >= 4 * (unint64_t)result)
    {
      dword_10011B8F8[result] = 0;
      return result;
    }

    goto LABEL_16;
  }

  if (a2 >= 1)
  {
    if (~(unint64_t)dword_10011B8F8 >= 4 * (unint64_t)result)
    {
      dword_10011B8F8[result] = 1;
      return result;
    }

    goto LABEL_16;
  }

  uint64_t result = sub_10002ACC4();
  if (!result || (result & 7) != 0) {
    goto LABEL_17;
  }
  if (~(unint64_t)&off_10011B918 < 8 * (unint64_t)v2
    || (uint64_t result = (*(uint64_t (**)(uint64_t, char *))(*(void *)result + 360LL))(result, (&off_10011B918)[v2]),
        ~(unint64_t)dword_10011B8F8 < 4 * (unint64_t)v2))
  {
LABEL_16:
    __break(0x5513u);
LABEL_17:
    __break(0x5516u);
    return result;
  }

  dword_10011B8F8[v2] = result;
  return result;
}

uint64_t *sub_1000BC5A4()
{
  v3[0] = 0xAAAAAAAAAAAAAAAALL;
  v3[1] = 0xAAAAAAAAAAAAAAAALL;
  sub_1000CE91C((uint64_t)v3, 1u);
  v2[1] = 0LL;
  v3[0] = off_100103838;
  v2[0] = 0LL;
  sub_1000CE9E8((uint64_t)v3, v2);
  uint64_t v0 = sub_1000BC610(v2);
  v3[0] = off_100103838;
  sub_1000CE94C(v3);
  return v0;
}

uint64_t *sub_1000BC610(uint64_t *result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_7;
  }

  uint64_t v1 = 1000000 * *result;
  if ((unsigned __int128)(*result * (__int128)1000000LL) >> 64 != v1 >> 63)
  {
LABEL_7:
    __break(0x550Cu);
    goto LABEL_8;
  }

  uint64_t v2 = result[1] / 1000;
  uint64_t result = (uint64_t *)(v1 + v2);
  if (__OFADD__(v1, v2)) {
LABEL_8:
  }
    __break(0x5500u);
  return result;
}

uint64_t sub_1000BC670(uint64_t result, uint64_t a2, unsigned int a3, const char *a4)
{
  if (!result || (uint64_t v4 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else if (a3 < 8)
  {
    sub_1000BC388(result, a2, a3, 0, a4);
    *(void *)uint64_t v4 = off_1001081D8;
    *(void *)(v4 + 92) = 0LL;
    *(void *)(v4 + 84) = 0LL;
    *(_DWORD *)(v4 + 100) = 0;
    *(_DWORD *)(v4 + 10_Block_object_dispose((const void *)(v1 - 120), 8) = -1;
    pthread_mutex_init((pthread_mutex_t *)(v4 + 120), 0LL);
    return v4;
  }

  __break(0x550Au);
  return result;
}

void *sub_1000BC6E8(void *result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    *uint64_t result = off_100108148;
    uint64_t v2 = result;
    sub_10005B598(&qword_10011D0A0, &v2);
    return v1;
  }

  return result;
}

void sub_1000BC740(void *a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    *a1 = off_100108148;
    uint64_t v2 = a1;
    sub_10005B598(&qword_10011D0A0, &v2);
    operator delete(a1);
  }

uint64_t sub_1000BC79C(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(unsigned int *)(result + 84);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000BC7B4(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(unsigned int *)(result + 96);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000BC7CC(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(void *)(result + 88);
  }
  __break(0x5516u);
  return result;
}

unint64_t sub_1000BC7E4(unint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    unint64_t v1 = *(unsigned int *)(result + 96);
    if ((_DWORD)v1) {
      return *(void *)(result + 88) / v1;
    }
    else {
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_1000BC810(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(unsigned int *)(result + 108);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000BC828(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(unsigned int *)(result + 112);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000BC840(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(unsigned int *)(result + 100);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000BC858(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(unsigned int *)(result + 104);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000BC870( uint64_t result, void *a2, _DWORD *a3, _DWORD *a4, _DWORD *a5, _DWORD *a6, _DWORD *a7)
{
  if (!result) {
    goto LABEL_33;
  }
  uint64_t v7 = result;
  if ((result & 7) != 0) {
    goto LABEL_33;
  }
  uint64_t v8 = *(unsigned int *)(result + 76);
  if (v8 >= 8)
  {
LABEL_34:
    __break(0x550Au);
    goto LABEL_35;
  }

  uint64_t v9 = *(void *)(result + 88);
  if (!dword_10011B8F8[v8]) {
    return v9;
  }
  uint64_t result = pthread_mutex_lock((pthread_mutex_t *)(result + 120));
  uint64_t v16 = *(unsigned int *)(v7 + 76);
  if (v16 > 3)
  {
LABEL_35:
    __break(0x5512u);
    goto LABEL_36;
  }

  if (~(unint64_t)dword_10011B8F8 >= 4 * v16)
  {
    if (!dword_10011B8F8[v16]) {
      goto LABEL_31;
    }
    uint64_t v9 = *(void *)(v7 + 88);
    if (a2)
    {
      *a2 = v9;
    }

    if (a3)
    {
      unint64_t v17 = *(unsigned int *)(v7 + 96);
      if ((_DWORD)v17) {
        unint64_t v17 = *(void *)(v7 + 88) / v17;
      }
      *a3 = v17;
    }

    if (a4)
    {
      *a4 = *(_DWORD *)(v7 + 108);
    }

    if (a5)
    {
      *a5 = *(_DWORD *)(v7 + 112);
    }

    if (!a6) {
      goto LABEL_28;
    }
    if ((a6 & 3) == 0)
    {
      *a6 = *(_DWORD *)(v7 + 100);
LABEL_28:
      if (a7)
      {
        if ((a7 & 3) == 0)
        {
          *a7 = *(_DWORD *)(v7 + 104);
          goto LABEL_31;
        }

        goto LABEL_33;
      }

uint64_t sub_1000BC9D8(uint64_t result, uint64_t a2, _DWORD *a3)
{
  if (result && (result & 7) == 0)
  {
    if (!a3) {
      return (*(uint64_t (**)(uint64_t))(*(void *)result + 16LL))(result);
    }
    if ((a3 & 3) == 0)
    {
      *a3 = 0;
      return (*(uint64_t (**)(uint64_t))(*(void *)result + 16LL))(result);
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000BCA04(uint64_t result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    pthread_mutex_lock((pthread_mutex_t *)(result + 120));
    *(_DWORD *)(v1 + 84) = 0;
    *(void *)(v1 + 8_Block_object_dispose((const void *)(v1 - 120), 8) = 0LL;
    *(_OWORD *)(v1 + 96) = xmmword_1000DE990;
    *(_DWORD *)(v1 + 112) = 0;
    return pthread_mutex_unlock((pthread_mutex_t *)(v1 + 120));
  }

  return result;
}

uint64_t sub_1000BCA58(uint64_t result, unsigned int a2)
{
  if (!result) {
    goto LABEL_11;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_11;
  }
  uint64_t result = pthread_mutex_lock((pthread_mutex_t *)(result + 120));
  *(_DWORD *)(v2 + 84) = a2;
  uint64_t v4 = *(void *)(v2 + 88);
  BOOL v5 = __CFADD__(v4, a2);
  uint64_t v6 = v4 + a2;
  if (v5 || (*(void *)(v2 + 88) = v6, v7 = *(_DWORD *)(v2 + 96), BOOL v5 = __CFADD__(v7, 1), v8 = v7 + 1, v5))
  {
    __break(0x5500u);
LABEL_11:
    __break(0x5516u);
    return result;
  }

  *(_DWORD *)(v2 + 96) = v8;
  if (*(_DWORD *)(v2 + 100) < a2)
  {
    *(_DWORD *)(v2 + 100) = a2;
    *(_DWORD *)(v2 + 104) = sub_100062E0C();
  }

  if (*(_DWORD *)(v2 + 108) > a2)
  {
    *(_DWORD *)(v2 + 10_Block_object_dispose((const void *)(v1 - 120), 8) = a2;
    *(_DWORD *)(v2 + 112) = sub_100062E0C();
  }

  return pthread_mutex_unlock((pthread_mutex_t *)(v2 + 120));
}

uint64_t sub_1000BCAF8(uint64_t result, uint64_t a2, unsigned int a3, const char *a4)
{
  if (!result || (uint64_t v4 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else if (a3 < 8)
  {
    sub_1000BC388(result, a2, a3, 1u, a4);
    *(void *)uint64_t v4 = off_100108270;
    *(void *)(v4 + 280) = 0LL;
    *(void *)(v4 + 28_Block_object_dispose((const void *)(v1 - 120), 8) = 0LL;
    pthread_mutex_init((pthread_mutex_t *)(v4 + 296), 0LL);
    return v4;
  }

  __break(0x550Au);
  return result;
}

void *sub_1000BCB60(void *result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    *uint64_t result = off_100108148;
    uint64_t v2 = result;
    sub_10005B598(&qword_10011D0A0, &v2);
    return v1;
  }

  return result;
}

void sub_1000BCBB8(void *a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    *a1 = off_100108148;
    uint64_t v2 = a1;
    sub_10005B598(&qword_10011D0A0, &v2);
    operator delete(a1);
  }

uint64_t sub_1000BCC14(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
LABEL_9:
    __break(0x5516u);
LABEL_10:
    __break(0x5512u);
    goto LABEL_11;
  }

  if (!*(_DWORD *)(result + 292)) {
    return 0xFFFFFFFFLL;
  }
  uint64_t v1 = *(unsigned int *)(result + 280);
  if (!__CFADD__(result + 88, 4 * v1))
  {
    uint64_t v2 = result + 88 + 4 * v1;
    if ((v2 & 3) == 0) {
      return *(unsigned int *)v2;
    }
    goto LABEL_9;
  }

uint64_t sub_1000BCC68(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(unsigned int *)(result + 292);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000BCC80(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return (*(unsigned int (**)(uint64_t))(*(void *)result + 16LL))(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000BCCB0(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 16LL))(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000BCCCC(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 16LL))(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000BCCE8(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return 0LL;
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000BCD00(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 16LL))(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000BCD1C(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return 0LL;
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000BCD34( uint64_t result, void *a2, _DWORD *a3, _DWORD *a4, _DWORD *a5, _DWORD *a6, _DWORD *a7)
{
  if (!result) {
    goto LABEL_33;
  }
  uint64_t v7 = result;
  if ((result & 7) != 0) {
    goto LABEL_33;
  }
  uint64_t v8 = *(unsigned int *)(result + 76);
  if (v8 >= 8)
  {
LABEL_34:
    __break(0x550Au);
    goto LABEL_35;
  }

  if (!dword_10011B8F8[v8]) {
    return 0LL;
  }
  uint64_t result = pthread_mutex_lock((pthread_mutex_t *)(result + 296));
  uint64_t v15 = *(unsigned int *)(v7 + 76);
  if (v15 > 3)
  {
LABEL_35:
    __break(0x5512u);
    goto LABEL_36;
  }

  if (~(unint64_t)dword_10011B8F8 >= 4 * v15)
  {
    if (!dword_10011B8F8[v15])
    {
      LODWORD(result) = 0;
      goto LABEL_31;
    }

    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 16LL))(v7);
    if (a2)
    {
      *a2 = 0LL;
    }

    if (a3)
    {
      *a3 = 0;
    }

    if (a4)
    {
      *a4 = 0;
    }

    if (a5)
    {
      *a5 = 0;
    }

    if (!a6)
    {
LABEL_26:
      if (!a7)
      {
LABEL_31:
        uint64_t v16 = result;
        pthread_mutex_unlock((pthread_mutex_t *)(v7 + 296));
        return v16;
      }

      if ((a7 & 3) == 0)
      {
        *a7 = 0;
        goto LABEL_31;
      }

      goto LABEL_33;
    }

    if ((a6 & 3) == 0)
    {
      *a6 = 0;
      goto LABEL_26;
    }

uint64_t sub_1000BCE98(uint64_t result, unsigned int a2, _DWORD *a3, _DWORD *a4, void *a5, void *a6)
{
  if (!result) {
    goto LABEL_35;
  }
  uint64_t v6 = result;
  if ((result & 7) != 0) {
    goto LABEL_35;
  }
  uint64_t v7 = *(unsigned int *)(result + 76);
  if (v7 >= 8)
  {
LABEL_36:
    __break(0x550Au);
    goto LABEL_37;
  }

  if (!dword_10011B8F8[v7]) {
    return 0LL;
  }
  uint64_t result = pthread_mutex_lock((pthread_mutex_t *)(result + 296));
  uint64_t v13 = *(unsigned int *)(v6 + 76);
  if (v13 > 3)
  {
LABEL_37:
    __break(0x5512u);
    goto LABEL_38;
  }

  if (!dword_10011B8F8[v13] || *(_DWORD *)(v6 + 292) <= a2)
  {
    uint64_t v19 = 0LL;
    goto LABEL_31;
  }

  int v14 = *(_DWORD *)(v6 + 280);
  BOOL v15 = __CFADD__(v14, a2);
  char v16 = v14 + a2;
  if (!v15)
  {
    uint64_t v17 = v16 & 7;
    if (!__CFADD__(v6 + 88, 4LL * v17))
    {
      uint64_t v18 = v6 + 88 + 4LL * v17;
      if ((v18 & 3) != 0) {
        goto LABEL_35;
      }
      uint64_t v19 = *(unsigned int *)v18;
      if (a3)
      {
        *a3 = *(_DWORD *)(v6 + 248 + 4 * v17);
      }

      if (a4)
      {
        *a4 = *(_DWORD *)v18;
      }

      if (!a5) {
        goto LABEL_26;
      }
      if (!__CFADD__(v6 + 120, 8 * v17))
      {
        uint64_t v20 = (void *)(v6 + 120 + 8 * v17);
        if (((v20 | a5) & 7) == 0)
        {
          *a5 = *v20;
LABEL_26:
          if (!a6)
          {
LABEL_31:
            pthread_mutex_unlock((pthread_mutex_t *)(v6 + 296));
            return v19;
          }

          if (!__CFADD__(v6 + 184, 8 * v17))
          {
            BOOL v21 = (void *)(v6 + 184 + 8 * v17);
            if (((v21 | a6) & 7) == 0)
            {
              *a6 = *v21;
              goto LABEL_31;
            }

            goto LABEL_35;
          }

          goto LABEL_34;
        }

uint64_t sub_1000BD048(uint64_t result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    pthread_mutex_lock((pthread_mutex_t *)(result + 296));
    *(void *)(v1 + 280) = 0LL;
    *(void *)(v1 + 28_Block_object_dispose((const void *)(v1 - 120), 8) = 0LL;
    return pthread_mutex_unlock((pthread_mutex_t *)(v1 + 296));
  }

  return result;
}

uint64_t *sub_1000BD088(uint64_t *result, int a2, uint64_t a3, uint64_t a4)
{
  if (!result) {
    goto LABEL_20;
  }
  uint64_t v4 = result;
  uint64_t result = (uint64_t *)pthread_mutex_lock((pthread_mutex_t *)(result + 37));
  uint64_t v8 = *((unsigned int *)v4 + 72);
  *((_DWORD *)v4 + 71) = v8;
  char v9 = v8 + 1;
  if ((_DWORD)v8 == -1)
  {
LABEL_23:
    __break(0x5500u);
    return result;
  }

  *((_DWORD *)v4 + 72) = v9 & 7;
  if ((v9 & 7) == *((_DWORD *)v4 + 70)) {
    *((_DWORD *)v4 + 70) = ((_BYTE)v8 + 2) & 7;
  }
  if (__CFADD__(v4 + 11, 4 * v8))
  {
LABEL_21:
    __break(0x5513u);
    goto LABEL_22;
  }

  uint64_t v10 = (uint64_t)v4 + 4 * v8 + 88;
  if ((v10 & 3) != 0)
  {
LABEL_20:
    __break(0x5516u);
    goto LABEL_21;
  }

  *(_DWORD *)uint64_t v10 = a2;
  uint64_t v11 = *((unsigned int *)v4 + 71);
  if (v11 > 7)
  {
LABEL_22:
    __break(0x5512u);
    goto LABEL_23;
  }

  if (__CFADD__(v4 + 15, 8 * v11)) {
    goto LABEL_21;
  }
  uint64_t v12 = (uint64_t)&v4[v11 + 15];
  if ((v12 & 7) != 0) {
    goto LABEL_20;
  }
  *(void *)uint64_t v12 = a3;
  if (__CFADD__(v4 + 23, 8 * v11)) {
    goto LABEL_21;
  }
  uint64_t v13 = (uint64_t)&v4[v11 + 23];
  if ((v13 & 7) != 0) {
    goto LABEL_20;
  }
  *(void *)uint64_t v13 = a4;
  uint64_t result = sub_100062E0C();
  uint64_t v14 = *((unsigned int *)v4 + 71);
  if (__CFADD__(v4 + 31, 4 * v14)) {
    goto LABEL_21;
  }
  uint64_t v15 = (uint64_t)v4 + 4 * v14 + 248;
  if ((v15 & 3) != 0) {
    goto LABEL_20;
  }
  *(_DWORD *)uint64_t v15 = (_DWORD)result;
  unsigned int v16 = *((_DWORD *)v4 + 73);
  if (v16 < 8) {
    ++v16;
  }
  *((_DWORD *)v4 + 73) = v16;
  return (uint64_t *)pthread_mutex_unlock((pthread_mutex_t *)(v4 + 37));
}

uint64_t sub_1000BD1C4()
{
  qword_10011D0A0 = (uint64_t)&qword_10011D0A0;
  qword_10011D0A8 = (uint64_t)&qword_10011D0A0;
  qword_10011D0B0 = 0LL;
  return __cxa_atexit((void (*)(void *))sub_1000BC228, &qword_10011D0A0, (void *)&_mh_execute_header);
}

uint64_t sub_1000BD1E8(uint64_t result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    sub_1000180FC(result);
    return v1;
  }

  return result;
}

dispatch_source_s *sub_1000BD220(dispatch_source_s *result, uint64_t a2)
{
  if (!result
    || (uint64_t v2 = result, (result & 7) != 0)
    || (*(void *)uint64_t result = a2,
        *((_DWORD *)result + 4) = 0,
        uint64_t result = (dispatch_source_s *)operator new(0x10uLL),
        (result & 0xF) != 0)
    || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    *(void *)uint64_t result = v2;
    *((_BYTE *)result + _Block_object_dispose((const void *)(v1 - 120), 8) = 0;
    *((void *)v2 + 3) = result;
    dispatch_queue_global_t global_queue = dispatch_get_global_queue(2LL, 0LL);
    uint64_t result = dispatch_source_create((dispatch_source_type_t)&_dispatch_source_type_timer, 0LL, 0LL, global_queue);
    *((void *)v2 + 1) = result;
    if (result)
    {
      handler[0] = _NSConcreteStackBlock;
      handler[1] = 0x40000000LL;
      handler[2] = sub_1000BD310;
      handler[3] = &unk_1001082F8;
      handler[4] = v2;
      dispatch_source_set_event_handler(result, handler);
      uint64_t result = (dispatch_source_s *)*((void *)v2 + 1);
      if (result)
      {
        dispatch_source_set_timer(result, 0xFFFFFFFFFFFFFFFFLL, 0xFFFFFFFFFFFFFFFFLL, 0LL);
        uint64_t result = (dispatch_source_s *)*((void *)v2 + 1);
        if (result)
        {
          dispatch_resume(result);
          return v2;
        }
      }
    }
  }

  __break(0x5510u);
  return result;
}

uint64_t sub_1000BD310(uint64_t a1)
{
  return sub_1000BD324(*(void *)(*(void *)(a1 + 32) + 24LL), 1, 0);
}

uint64_t sub_1000BD324(uint64_t a1, int a2, int a3)
{
  uint64_t result = pthread_mutex_lock(&stru_10011B938);
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_22;
  }
  if (*(unsigned __int8 *)(a1 + 8) >= 2u)
  {
LABEL_23:
    __break(0x550Au);
    return result;
  }

  if (!*(_BYTE *)(a1 + 8) && !a3) {
    goto LABEL_12;
  }
  uint64_t v7 = *(void *)a1;
  if (!*(void *)a1)
  {
    __break(0x5518u);
LABEL_22:
    __break(0x5516u);
    goto LABEL_23;
  }

  uint64_t result = (uint64_t)operator new(0x20uLL);
  if (result & 0xF | v7 & 7) {
    goto LABEL_22;
  }
  uint64_t v8 = result;
  sub_1000AA400(result, v7);
  uint64_t result = *(void *)v7;
  int v9 = sub_100059694(result, v8, 1, 0);
  if (v9) {
    sub_1000CEAEC( 0,  4,  "%s:%d status = %d\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/IAP/Source/IapTimer.cpp",  176,  v9);
  }
LABEL_12:
  if (a2)
  {
    uint64_t v10 = (uint64_t *)qword_10011D0C0;
    uint64_t v11 = (uint64_t *)qword_10011D0C0;
    while (v10 != &qword_10011D0B8)
    {
      uint64_t result = *sub_10000D014((uint64_t *)&v11);
      if (result)
      {
        if ((result & 7) != 0) {
          goto LABEL_22;
        }
        operator delete((void *)result);
      }

      sub_10000D048(&v11);
      uint64_t v10 = v11;
    }

    sub_1000180FC((uint64_t)&qword_10011D0B8);
  }

  return pthread_mutex_unlock(&stru_10011B938);
}

dispatch_source_s *sub_1000BD46C(dispatch_source_s *result, uint64_t a2)
{
  return result;
}

dispatch_object_s *sub_1000BD480(dispatch_object_s *result)
{
  if (!result {
    || (uint64_t v1 = result, (result & 7) != 0)
  }
    || (uint64_t result = (dispatch_object_s *)pthread_mutex_lock(&stru_10011B938),
        uint64_t v2 = (void *)((char *)v1 + 24),
        (uint64_t v3 = *((void *)v1 + 3)) == 0)
    || (v3 & 7) != 0
    || (*(_BYTE *)(v3 + _Block_object_dispose((const void *)(v1 - 120), 8) = 0, (v2 & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    sub_100056E4C((uint64_t)&qword_10011D0B8, v2);
    pthread_mutex_unlock(&stru_10011B938);
    uint64_t result = (dispatch_object_s *)*((void *)v1 + 1);
    if (result)
    {
      dispatch_release(result);
      return v1;
    }
  }

  __break(0x5510u);
  return result;
}

dispatch_object_s *sub_1000BD504(dispatch_object_s *result)
{
  return result;
}

uint64_t sub_1000BD518(uint64_t result, int a2)
{
  if (!result || (result & 7) != 0) {
    __break(0x5516u);
  }
  else {
    *(_DWORD *)(result + 16) = a2;
  }
  return result;
}

void sub_1000BD530(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0 || (pthread_mutex_lock(&stru_10011B938), (uint64_t v2 = *(void *)(a1 + 24)) == 0) || (v2 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    *(_BYTE *)(v2 + _Block_object_dispose((const void *)(v1 - 120), 8) = 1;
    pthread_mutex_unlock(&stru_10011B938);
    unsigned int v3 = *(_DWORD *)(a1 + 16);
    if (v3) {
      dispatch_time_t v4 = dispatch_time(0LL, 1000000LL * v3);
    }
    else {
      dispatch_time_t v4 = -1LL;
    }
    BOOL v5 = *(dispatch_source_s **)(a1 + 8);
    if (v5)
    {
      dispatch_source_set_timer(v5, v4, 0xFFFFFFFFFFFFFFFFLL, 0LL);
      return;
    }
  }

  __break(0x5510u);
}

void sub_1000BD5C8(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0 || (pthread_mutex_lock(&stru_10011B938), (uint64_t v2 = *(void *)(a1 + 24)) == 0) || (v2 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    *(_BYTE *)(v2 + _Block_object_dispose((const void *)(v1 - 120), 8) = 0;
    pthread_mutex_unlock(&stru_10011B938);
    unsigned int v3 = *(dispatch_source_s **)(a1 + 8);
    if (v3)
    {
      dispatch_source_set_timer(v3, 0xFFFFFFFFFFFFFFFFLL, 0xFFFFFFFFFFFFFFFFLL, 0LL);
      return;
    }
  }

  __break(0x5510u);
}

uint64_t sub_1000BD638(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000BD324(*(void *)(result + 24), 0, 1);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000BD658()
{
  qword_10011D0B8 = (uint64_t)&qword_10011D0B8;
  qword_10011D0C0 = (uint64_t)&qword_10011D0B8;
  qword_10011D0C8 = 0LL;
  return __cxa_atexit((void (*)(void *))sub_1000BD1E8, &qword_10011D0B8, (void *)&_mh_execute_header);
}

const char *sub_1000BD67C(char *a1)
{
  if (a1[23] < 0) {
    a1 = *(char **)a1;
  }
  return sub_1000BD690(a1);
}

const char *sub_1000BD690(char *a1)
{
  if (!a1 || !strcmp(a1, "/") || !strcmp(a1, ".")) {
    return 0LL;
  }
  uint64_t v2 = dirname(a1);
  unsigned int v3 = v2;
  if (v2)
  {
    v4.tv_sec = 0xAAAAAAAAAAAAAAAALL;
    v4.tv_nsec = 0xAAAAAAAAAAAAAAAALL;
    *(timespec *)&v7.st_blkstd::string::size_type size = v4;
    *(timespec *)v7.st_qspare = v4;
    v7.st_birthtimespec = v4;
    *(timespec *)&v7.st_std::string::size_type size = v4;
    v7.st_mtimespec = v4;
    v7.st_ctimespec = v4;
    *(timespec *)&v7.st_uid = v4;
    v7.st_atimespec = v4;
    *(timespec *)&v7.st_dev = v4;
    if (!stat(v2, &v7)) {
      return (const char *)mkdir(a1, 0x1FFu);
    }
    BOOL v5 = strdup(v3);
    unsigned int v3 = (const char *)sub_1000BD690();
    free(v5);
    if (!(_DWORD)v3) {
      return (const char *)mkdir(a1, 0x1FFu);
    }
  }

  return v3;
}

BOOL sub_1000BD758(const char *a1)
{
  v1.tv_sec = 0xAAAAAAAAAAAAAAAALL;
  v1.tv_nsec = 0xAAAAAAAAAAAAAAAALL;
  *(timespec *)&v3.st_blkstd::string::size_type size = v1;
  *(timespec *)v3.st_qspare = v1;
  v3.st_birthtimespec = v1;
  *(timespec *)&v3.st_std::string::size_type size = v1;
  v3.st_mtimespec = v1;
  v3.st_ctimespec = v1;
  *(timespec *)&v3.st_uid = v1;
  v3.st_atimespec = v1;
  *(timespec *)&v3.st_dev = v1;
  if (a1[23] < 0) {
    a1 = *(const char **)a1;
  }
  return stat(a1, &v3) == 0;
}

uint64_t sub_1000BD7A8(pthread_mutex_t *a1)
{
  v4.__sig = 0xAAAAAAAAAAAAAAAALL;
  *(void *)v4.__opaque = 0xAAAAAAAAAAAAAAAALL;
  pthread_mutexattr_init(&v4);
  pthread_mutexattr_settype(&v4, 2);
  uint64_t v2 = pthread_mutex_init(a1, &v4);
  pthread_mutexattr_destroy(&v4);
  return v2;
}

uint64_t sub_1000BD830()
{
  if (qword_10011C700 != -1) {
    dispatch_once(&qword_10011C700, &stru_100108338);
  }
  return qword_10011C6F8;
}

void sub_1000BD870(id a1)
{
  uint64_t v1 = (uint64_t)operator new(0x80uLL);
  if ((v1 & 0xF) != 0 || (v1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    qword_10011C6F8 = sub_1000BD8A8(v1);
  }
}

uint64_t sub_1000BD8A8(uint64_t result)
{
  if (!result) {
    goto LABEL_7;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_7;
  }
  uint64_t result = sub_10001B6E4(result);
  *(void *)uint64_t v1 = off_100108498;
  if (((v1 + 96) & 7) != 0
    || (*(void *)uint64_t v1 = off_100108368,
        *(void *)(v1 + 96) = off_100108408,
        *(void *)(v1 + 104) = 0LL,
        *(_BYTE *)(v1 + 112) = 0,
        *(_DWORD *)(v1 + 116) = -1,
        *(void *)(v1 + 120) = 0LL,
        (uint64_t result = sub_10005BFC8()) == 0)
    || (result & 7) != 0)
  {
LABEL_7:
    __break(0x5516u);
  }

  else
  {
    sub_10005C434((uint64_t *)result, v1 + 96, 8u, 0LL);
    return v1;
  }

  return result;
}

uint64_t sub_1000BD93C(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    if ((result & 7) == 0)
    {
      *(void *)uint64_t result = off_100108368;
      *(void *)(result + 96) = off_100108408;
      char v2 = result + 96;
      uint64_t result = sub_10005BFC8();
      if (result)
      {
        if ((result & 7) == 0)
        {
          uint64_t result = (uint64_t)sub_10005C5F4((uint64_t *)result, v1 + 96, 8u);
          if ((v2 & 7) == 0) {
            return sub_1000BD9A8(v1);
          }
        }
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000BD9A8(uint64_t result)
{
  if (!result
    || (uint64_t v1 = result, (result & 7) != 0)
    || (*(void *)uint64_t result = off_100102218,
        char v2 = result + 8,
        uint64_t result = pthread_mutex_destroy((pthread_mutex_t *)(result + 32)),
        (v2 & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    sub_100009E9C(v1 + 8);
    return v1;
  }

  return result;
}

uint64_t sub_1000BDA00(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000BD93C(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000BDA14(uint64_t a1)
{
  uint64_t result = a1 - 96;
  if ((result & 7) == 0) {
    return sub_1000BD93C(result);
  }
  __break(0x5516u);
  return result;
}

void sub_1000BDA28(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t v1 = (void *)sub_1000BD93C(a1);
    operator delete(v1);
  }

void sub_1000BDA4C(uint64_t a1)
{
}

BOOL sub_1000BDA54(BOOL result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    unsigned int v1 = *(unsigned __int8 *)(result + 112);
    if (v1 < 2) {
      return v1 != 0;
    }
  }

  __break(0x550Au);
  return result;
}

uint64_t sub_1000BDA80(uint64_t result)
{
  if (!result || (v1 = result, (result & 7) != 0) || (unsigned __int8 v2 = 0, result = sub_1000B6CE0(), (result & 7) != 0) || !result)
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t result = sub_10008E550(result, *(void *)(v1 + 120), 0);
    if (result)
    {
      sub_100060ADC((uint64_t)&v2, result);
      return v2;
    }
  }

  return result;
}

uint64_t sub_1000BDAE8@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, uint64_t a3@<X8>)
{
  if (!a1) {
    goto LABEL_10;
  }
  if ((a1 & 7) != 0) {
    goto LABEL_10;
  }
  *(void *)&__int128 v6 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v6 + 1) = 0xAAAAAAAAAAAAAAAALL;
  *(_OWORD *)&v25[13] = v6;
  *(_OWORD *)int v25 = v6;
  __int128 v24 = v6;
  __int128 v23 = v6;
  __int128 v22 = v6;
  __int128 v21 = v6;
  __int128 v20 = v6;
  __int128 v19 = v6;
  __int128 v18 = v6;
  __int128 v17 = v6;
  __int128 v16 = v6;
  __int128 v15 = v6;
  __int128 v14 = v6;
  __int128 v13 = v6;
  __int128 v12 = v6;
  __int128 v11 = v6;
  unsigned __int8 v9 = -2;
  char __s = 0;
  uint64_t v7 = sub_1000B6CE0();
  if ((v7 & 7) != 0 || !v7) {
    goto LABEL_10;
  }
  uint64_t result = sub_10008E550(v7, *(void *)(a1 + 120), 0);
  if (!result)
  {
LABEL_8:
    if (a3) {
      return sub_1000255A4(a3, &__s);
    }
LABEL_10:
    __break(0x5516u);
  }

  if (a2 <= 0xFF)
  {
    sub_100060BBC(a2, &__s, &v9, result);
    goto LABEL_8;
  }

  __break(0x5507u);
  return result;
}

uint64_t sub_1000BDBFC(uint64_t result, int a2)
{
  if (!result) {
    goto LABEL_11;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_11;
  }
  if (a2 < 0) {
    return result;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 96LL))(result);
  *(_DWORD *)(v2 + 116) = a2;
  uint64_t result = sub_1000B6CE0();
  if (!result || (result & 7) != 0)
  {
LABEL_11:
    __break(0x5516u);
LABEL_12:
    __break(0x5507u);
    return result;
  }

  uint64_t result = sub_10008E550(result, *(void *)(v2 + 120), 0);
  if (result)
  {
    goto LABEL_12;
  }

  return result;
}

uint64_t sub_1000BDC8C(uint64_t result)
{
  if (!result || (v1 = result, (result & 7) != 0) || (unsigned __int8 v2 = 0, result = sub_1000B6CE0(), (result & 7) != 0) || !result)
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t result = sub_10008E550(result, *(void *)(v1 + 120), 0);
    if (result)
    {
      sub_10006094C((uint64_t)&v2, result);
      return v2;
    }
  }

  return result;
}

uint64_t sub_1000BDCF4(uint64_t result, _DWORD *a2)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_8;
  }

  if (*a2 >= 0x20u)
  {
LABEL_8:
    __break(0x550Au);
    return result;
  }

  if (*a2 == 9)
  {
    *(_BYTE *)(result + 112) = 0;
    *(_DWORD *)(result + 116) = -1;
  }

  return result;
}

uint64_t sub_1000BDD2C(uint64_t a1, _DWORD *a2)
{
  return sub_1000BDCF4(a1 - 96, a2);
}

void sub_1000BDD34(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  if (!a1 || (a1 & 7) != 0)
  {
LABEL_13:
    __break(0x5516u);
    goto LABEL_14;
  }

  if ((a2 + 32) < 0x40)
  {
    if (a2 != 8 || a5 != 16) {
      sub_1000CEAEC( 0,  4,  "%s:%d wrong lingo (%d) or payload size (%d)\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/iSL/Source/IAP/TAccessoryEQ.cpp",  137,  a2,  a5);
    }
    if (a4 && (a4 & 7) == 0)
    {
      if (*(_DWORD *)a4 != 16)
      {
        sub_1000CEAEC( 0,  4,  "%s:%d Incorrect cmdID\n.",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/iSL/Source/IAP/TAccessoryEQ.cpp",  153);
        return;
      }

      *(_BYTE *)(a1 + 112) = 1;
      *(_DWORD *)(a1 + 116) = -1;
      if (((a4 + 8) & 7) == 0)
      {
        *(void *)(a1 + 120) = *(void *)(a4 + 8);
        (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 32LL))(a1, 262145LL);
        return;
      }
    }

    goto LABEL_13;
  }

void sub_1000BDE3C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  else {
    sub_1000BDD34(a1 - 96, a2, 0LL, a4, a5);
  }
}

void sub_1000BDE58(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

void sub_1000BDE6C(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

uint64_t sub_1000BDE80(uint64_t result)
{
  if (!result || (result & 7) != 0) {
    __break(0x5516u);
  }
  return result;
}

uint64_t sub_1000BDE94(uint64_t result, int a2, int a3, int a4, int a5, uint64_t a6, uint64_t a7)
{
  if (!result || (uint64_t v7 = result, (result & 7) != 0))
  {
LABEL_7:
    __break(0x5516u);
    goto LABEL_8;
  }

  *(void *)uint64_t result = &off_100108528;
  *(_DWORD *)(result + _Block_object_dispose((const void *)(v1 - 120), 8) = a2;
  if (a3 == (char)a3)
  {
    *(_DWORD *)(result + 12) = a3;
    *(_DWORD *)(result + 16) = a4;
    *(_DWORD *)(result + 20) = a5;
    *(void *)(result + 24) = 0LL;
    *(void *)(result + 32) = a6;
    *(void *)(result + 40) = a7;
    *(_BYTE *)(result + 4_Block_object_dispose((const void *)(v1 - 120), 8) = 0;
    *(void *)(result + 52) = 0x1900000000LL;
    *(_BYTE *)(result + 60) = 0;
    *(void *)(result + 64) = 0xB00000009LL;
    result += 72LL;
    if (((v7 + 72) & 7) == 0)
    {
      sub_100009E64((void *)result);
      uint64_t result = v7 + 96;
      if (((v7 + 96) & 7) == 0)
      {
        sub_100009E64((void *)result);
        return v7;
      }
    }

    goto LABEL_7;
  }

uint64_t sub_1000BDF40(uint64_t result)
{
  if (!result) {
    goto LABEL_15;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_15;
  }
  *(void *)uint64_t result = &off_100108528;
  uint64_t v4 = 0xAAAAAAAAAAAAAAAALL;
  if (((result + 96) & 7) != 0) {
    goto LABEL_15;
  }
  uint64_t v4 = *(void *)(result + 96);
  uint64_t v2 = result + 104;
  if (((result + 104) & 7) != 0) {
    goto LABEL_15;
  }
  while (v4 != v2)
  {
    uint64_t result = (uint64_t)sub_100003154(&v4);
    if (!result) {
      goto LABEL_15;
    }
    if ((result & 7) != 0) {
      goto LABEL_15;
    }
    stat v3 = (uint64_t *)(result + 8);
    if (((result + 8) & 7) != 0) {
      goto LABEL_15;
    }
    uint64_t result = *v3;
    if (*v3)
    {
      if ((result & 7) != 0) {
        goto LABEL_15;
      }
      (*(void (**)(uint64_t))(*(void *)result + 8LL))(result);
    }

    sub_100008A4C(&v4);
  }

  sub_100009E9C(v1 + 96);
  uint64_t result = v1 + 72;
  if (((v1 + 72) & 7) != 0)
  {
LABEL_15:
    __break(0x5516u);
  }

  else
  {
    sub_100009E9C(result);
    return v1;
  }

  return result;
}

uint64_t sub_1000BE020(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000BDF40(result);
  }
  __break(0x5516u);
  return result;
}

void sub_1000BE034(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t v1 = (void *)sub_1000BDF40(a1);
    operator delete(v1);
  }

uint64_t sub_1000BE058(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    *(_OWORD *)(result + _Block_object_dispose((const void *)(v1 - 120), 8) = xmmword_1000E0140;
    *(void *)(result + 32) = 0LL;
    *(void *)(result + 40) = 0LL;
    *(void *)(result + 24) = 0LL;
    *(void *)(result + 64) = 0xB00000009LL;
  }

  return result;
}

uint64_t sub_1000BE08C(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(unsigned int *)(result + 20);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000BE0A4(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_6;
  }

  uint64_t result = *(unsigned int *)(result + 12);
  if ((_DWORD)result != (char)result) {
LABEL_6:
  }
    __break(0x550Au);
  return result;
}

uint64_t sub_1000BE0C8(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(unsigned int *)(result + 16);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000BE0E0(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(unsigned int *)(result + 8);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000BE0F8(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(void *)(result + 24);
  }
  __break(0x5516u);
  return result;
}

BOOL sub_1000BE110(BOOL result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    unsigned int v1 = *(_DWORD *)(result + 64);
    if (v1 < 0x20) {
      return v1 < 7;
    }
  }

  __break(0x550Au);
  return result;
}

uint64_t sub_1000BE13C(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_6;
  }

  uint64_t result = *(unsigned int *)(result + 64);
  if (result >= 0x20) {
LABEL_6:
  }
    __break(0x550Au);
  return result;
}

BOOL sub_1000BE160(BOOL result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    unsigned int v1 = *(_DWORD *)(result + 68);
    if (v1 < 0x20) {
      return v1 == 12;
    }
  }

  __break(0x550Au);
  return result;
}

uint64_t sub_1000BE18C(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_6;
  }

  uint64_t result = *(unsigned int *)(result + 68);
  if (result >= 0x20) {
LABEL_6:
  }
    __break(0x550Au);
  return result;
}

BOOL sub_1000BE1B0(BOOL result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    unsigned int v1 = *(unsigned __int8 *)(result + 60);
    if (v1 < 2) {
      return v1 != 0;
    }
  }

  __break(0x550Au);
  return result;
}

uint64_t sub_1000BE1DC(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_100076884(*(void *)(result + 40));
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000BE1F4(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t result = sub_100082F14(*(void *)(result + 40));
    if (!result) {
      return (uint64_t)&unk_10011D0D0;
    }
  }

  return result;
}

uint64_t sub_1000BE22C(uint64_t result)
{
  if (!result || (result & 7) != 0 || (result += 72LL, (result & 7) != 0)) {
    __break(0x5516u);
  }
  return result;
}

uint64_t sub_1000BE24C(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(void *)(result + 32);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000BE264(uint64_t result, uint64_t a2)
{
  if (result)
  {
    if ((result & 7) == 0)
    {
      uint64_t result = sub_1000B6CE0();
      if (result)
      {
        if ((result & 7) == 0) {
          return sub_10008D184(result, a2) == 56;
        }
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000BE2B0(uint64_t result)
{
  if (!result
    || (uint64_t v1 = result, (result & 7) != 0)
    || (uint64_t v2 = *(void *)(result + 40),
        uint64_t result = sub_1000774F8(v2),
        *(void *)(v1 + 24) = result,
        uint64_t v3 = v1 + 72,
        (v3 & 7) != 0))
  {
LABEL_13:
    __break(0x5516u);
  }

  else
  {
    sub_100008B2C(v3);
    uint64_t result = (uint64_t)sub_100082C3C(v2);
    uint64_t v5 = result + 8;
    uint64_t v4 = *(void *)result;
    uint64_t v10 = *(void *)result;
    while (v4 != v5)
    {
      uint64_t result = (uint64_t)sub_100003154(&v10);
      if (!result) {
        goto LABEL_13;
      }
      if ((result & 7) != 0) {
        goto LABEL_13;
      }
      if (((result + 8) & 7) != 0) {
        goto LABEL_13;
      }
      uint64_t v6 = *(void *)(result + 8);
      uint64_t result = (uint64_t)sub_100003154(&v10);
      if (!result || (result & 7) != 0) {
        goto LABEL_13;
      }
      sub_1000BE390(v3, (unsigned __int8 *)result);
      uint64_t v7 = *(void *)(v6 + 29);
      __int128 v8 = *(_OWORD *)(v6 + 16);
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v6;
      *(_OWORD *)(v9 + 16) = v8;
      *(void *)(v9 + 29) = v7;
      uint64_t result = (uint64_t)sub_100008A4C(&v10);
      uint64_t v4 = v10;
    }
  }

  return result;
}

void sub_1000BE390(uint64_t a1, unsigned __int8 *a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_11;
  }
  uint64_t v8 = 0xAAAAAAAAAAAAAAAALL;
  uint64_t v4 = (uint64_t *)sub_1000877C4(a1, &v8, a2);
  uint64_t v5 = (void *)*v4;
  if (*v4)
  {
  }

  else
  {
    uint64_t v6 = v4;
    memset(v7, 170, sizeof(v7));
    sub_1000C026C((char *)a1, (char *)a2, (uint64_t)v7);
    sub_100008FEC(a1, v8, v6, (void *)v7[0]);
    uint64_t v5 = v7[0];
    v7[0] = 0LL;
    sub_100009500(v7, 0LL);
    if (!v5) {
      goto LABEL_11;
    }
  }

  if ((v5 & 7) != 0 || (((_BYTE)v5 + 32) & 7) != 0) {
LABEL_11:
  }
    __break(0x5516u);
}

void sub_1000BE470(uint64_t a1, unsigned int a2, uint64_t a3)
{
  unsigned int v6 = a2;
  if (!a1 || (a1 & 7) != 0 || (uint64_t v3 = a1 + 96, (v3 & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    sub_1000BE4C0(v3, &v6);
    *uint64_t v5 = a3;
  }

void sub_1000BE4C0(uint64_t a1, unsigned int *a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_11;
  }
  uint64_t v8 = 0xAAAAAAAAAAAAAAAALL;
  uint64_t v4 = (uint64_t *)sub_1000C0304(a1, &v8, a2);
  uint64_t v5 = (void *)*v4;
  if (*v4)
  {
  }

  else
  {
    unsigned int v6 = v4;
    memset(v7, 170, sizeof(v7));
    sub_1000C0414((_DWORD *)a1, a2, (uint64_t)v7);
    sub_100008FEC(a1, v8, v6, (void *)v7[0]);
    uint64_t v5 = v7[0];
    v7[0] = 0LL;
    sub_100009500(v7, 0LL);
    if (!v5) {
      goto LABEL_11;
    }
  }

  if ((v5 & 7) != 0 || (((_BYTE)v5 + 32) & 7) != 0) {
LABEL_11:
  }
    __break(0x5516u);
}

uint64_t sub_1000BE5A0(uint64_t result, unsigned int a2)
{
  unsigned int v4 = a2;
  if (!result
    || (uint64_t v2 = result, (result & 7) != 0)
    || (uint64_t v3 = 0xAAAAAAAAAAAAAAAALL, result += 96LL, ((v2 + 96) & 7) != 0)
    || (result = sub_1000C04B8(result, &v4), uint64_t v3 = result, ((v2 + 104) & 7) != 0))
  {
LABEL_12:
    __break(0x5516u);
    return result;
  }

  if (v2 + 104 != result)
  {
    uint64_t result = (uint64_t)sub_100003154(&v3);
    if (result && (result & 7) == 0 && ((result + 8) & 7) == 0) {
      return *(void *)(result + 8);
    }
    goto LABEL_12;
  }

  return 0LL;
}

uint64_t sub_1000BE638()
{
  if (qword_10011C710 != -1) {
    dispatch_once(&qword_10011C710, &stru_100108600);
  }
  uint64_t result = qword_10011C708;
  if ((qword_10011C708 & 7) != 0) {
    __break(0x5516u);
  }
  return result;
}

void sub_1000BE684(id a1)
{
  uint64_t v1 = (uint64_t)operator new(0x168uLL);
  if ((v1 & 0xF) != 0 || (v1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    qword_10011C708 = sub_1000BE6BC(v1);
  }
}

uint64_t sub_1000BE6BC(uint64_t result)
{
  if (!result) {
    goto LABEL_9;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_9;
  }
  uint64_t result = sub_10001B6E4(result);
  *(void *)uint64_t v1 = off_100108720;
  if (((v1 + 96) & 7) != 0) {
    goto LABEL_9;
  }
  *(void *)uint64_t v1 = off_100108630;
  *(void *)(v1 + 96) = off_1001086F0;
  *(void *)(v1 + 104) = 0LL;
  uint64_t result = v1 + 112;
  if (((v1 + 112) & 7) != 0
    || (sub_1000BDE94(result, 0, -1, -1, 0, 0LL, 0LL),
        *(_DWORD *)(v1 + 240) = 0,
        uint64_t result = v1 + 248,
        ((v1 + 248) & 7) != 0)
    || (sub_100009E64((void *)result),
        sub_100010C30((void *)(v1 + 272)),
        pthread_mutex_init((pthread_mutex_t *)(v1 + 296), 0LL),
        (uint64_t result = sub_10005BFC8()) == 0)
    || (result & 7) != 0)
  {
LABEL_9:
    __break(0x5516u);
  }

  else
  {
    sub_10005C434((uint64_t *)result, v1 + 96, 0, 0LL);
    return v1;
  }

  return result;
}

uint64_t *sub_1000BE79C(uint64_t *result)
{
  if (result)
  {
    uint64_t v1 = (uint64_t)result;
    if ((result & 7) == 0)
    {
      *uint64_t result = (uint64_t)off_100108630;
      result[12] = (uint64_t)off_1001086F0;
      char v2 = (_BYTE)result + 96;
      uint64_t result = (uint64_t *)sub_10005BFC8();
      if (result)
      {
        if ((result & 7) == 0)
        {
          uint64_t result = sub_10005C5F4(result, v1 + 96, 0);
          uint64_t v5 = 0xAAAAAAAAAAAAAAAALL;
          if (((v1 + 248) & 7) == 0)
          {
            uint64_t v5 = *(void *)(v1 + 248);
            if (((v1 + 256) & 7) == 0)
            {
              uint64_t v3 = v1 + 112;
              while (v5 != v1 + 256)
              {
                uint64_t result = sub_100003154(&v5);
                if (result[1] != v3)
                {
                  uint64_t result = sub_100003154(&v5);
                  if (!result) {
                    goto LABEL_24;
                  }
                  unsigned int v4 = (uint64_t **)(result + 1);
                  uint64_t result = *v4;
                  if (*v4)
                  {
                    (*(void (**)(uint64_t *))(*result + 8))(result);
                  }
                }

                sub_100008A4C(&v5);
              }

              pthread_mutex_destroy((pthread_mutex_t *)(v1 + 296));
              uint64_t result = (uint64_t *)(v1 + 272);
              if (((v1 + 272) & 7) == 0)
              {
                sub_1000180FC((uint64_t)result);
                uint64_t result = (uint64_t *)sub_100009E9C(v1 + 248);
                if ((v3 & 7) == 0)
                {
                  uint64_t result = (uint64_t *)sub_1000BDF40(v1 + 112);
                  if ((v2 & 7) == 0) {
                    return (uint64_t *)sub_1000BD9A8(v1);
                  }
                }
              }
            }
          }
        }
      }
    }
  }

uint64_t *sub_1000BE900(uint64_t *result)
{
  return result;
}

uint64_t *sub_1000BE914(uint64_t a1)
{
  uint64_t result = (uint64_t *)(a1 - 96);
  __break(0x5516u);
  return result;
}

void sub_1000BE928(uint64_t *a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t v1 = sub_1000BE79C(a1);
    operator delete(v1);
  }

void sub_1000BE94C(uint64_t a1)
{
}

void sub_1000BE954(uint64_t a1, int a2, int a3, int a4, int a5, uint64_t a6, uint64_t a7)
{
  int v29 = a2;
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_33;
  }
  __int128 v14 = (pthread_mutex_t *)(a1 + 296);
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 296));
  uint64_t v15 = sub_1000BEC00(a1, a2);
  if (v15)
  {
    uint64_t v16 = v15;
    if (v15 != a1 + 112)
    {
      if ((v15 & 7) != 0 || ((v15 + 8) & 7) != 0) {
        goto LABEL_33;
      }
      if (*(_DWORD *)(v15 + 8) == a2)
      {
        __int128 v17 = (int *)(v15 + 12);
        if (((v15 + 12) & 3) == 0)
        {
          int v18 = *v17;
          if (v18 == (char)v18)
          {
            if (v18 != a3)
            {
              sub_1000CEAEC(0, 4, "(0x%08x) accessory ID changed (%d != %d)\n", a2, *v17, a3);
              *__int128 v17 = a3;
            }

            __int128 v19 = (int *)(v16 + 16);
            if (((v16 + 16) & 7) == 0)
            {
              if (*v19 != a4)
              {
                sub_1000CEAEC(0, 4, "(0x%08x) device ID changed (%d != %d)\n", a2, *v19, a4);
                int *v19 = a4;
              }

              __int128 v20 = (int *)(v16 + 20);
              if (((v16 + 20) & 3) == 0)
              {
                if (*v20 != a5)
                {
                  sub_1000CEAEC(0, 4, "(0x%08x) device lingos changed (0x%08x != 0x%08x)\n", a2, *v20, a5);
                  *__int128 v20 = a5;
                }

                __int128 v21 = (uint64_t *)(v16 + 32);
                if (((v16 + 32) & 7) == 0)
                {
                  if (*v21 != a6)
                  {
                    sub_1000CEAEC(0, 4, "(0x%08x) port changed (%hhx != %hhx)\n", a2, *v21, a6);
                    *__int128 v21 = a6;
                  }

                  __int128 v22 = (uint64_t *)(v16 + 40);
                  if (((v16 + 40) & 7) == 0)
                  {
                    if (*v22 != a7)
                    {
                      sub_1000CEAEC(0, 4, "(0x%08x) connectionHandle changed (%hhx != %hhx)\n", a2, *v22, a7);
                      *__int128 v22 = a7;
                    }

                    goto LABEL_32;
                  }
                }
              }
            }

            goto LABEL_33;
          }

uint64_t sub_1000BEC00(uint64_t result, int a2)
{
  int v4 = a2;
  if (!result
    || (uint64_t v2 = result, (result & 7) != 0)
    || (uint64_t v3 = 0xAAAAAAAAAAAAAAAALL, result += 248LL, ((v2 + 248) & 7) != 0)
    || (result = sub_100008C50(result, &v4), uint64_t v3 = result, ((v2 + 256) & 7) != 0))
  {
LABEL_12:
    __break(0x5516u);
    return result;
  }

  if (v2 + 256 != result)
  {
    uint64_t result = (uint64_t)sub_100003154(&v3);
    if (result && (result & 7) == 0 && ((result + 8) & 7) == 0) {
      return *(void *)(result + 8);
    }
    goto LABEL_12;
  }

  return 0LL;
}

void sub_1000BEC98(uint64_t a1)
{
  if (!a1
    || (a1 & 7) != 0
    || (uint64_t v1 = a1 + 272, ((a1 + 272) & 7) != 0)
    || (uint64_t v2 = (void *)(a1 + 288), ((a1 + 288) & 7) != 0))
  {
LABEL_11:
    __break(0x5516u);
  }

  else if (*v2 >= 0x10uLL)
  {
    do
    {
      uint64_t v3 = *(void *)sub_1000870A8(v1);
      sub_1000BEFB4(v1);
      if (v3)
      {
        if ((v3 & 7) != 0) {
          goto LABEL_11;
        }
        (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
      }
    }

    while (*v2 > 0xFuLL);
  }

void sub_1000BED28(uint64_t a1, unsigned int *a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_11;
  }
  uint64_t v8 = 0xAAAAAAAAAAAAAAAALL;
  int v4 = (uint64_t *)sub_100008E54(a1, &v8, a2);
  uint64_t v5 = (void *)*v4;
  if (*v4)
  {
  }

  else
  {
    unsigned int v6 = v4;
    memset(v7, 170, sizeof(v7));
    sub_1000C0614((void *)a1, a2, (uint64_t)v7);
    sub_100008FEC(a1, v8, v6, (void *)v7[0]);
    uint64_t v5 = v7[0];
    v7[0] = 0LL;
    sub_100009500(v7, 0LL);
    if (!v5) {
      goto LABEL_11;
    }
  }

  if ((v5 & 7) != 0 || (((_BYTE)v5 + 32) & 7) != 0) {
LABEL_11:
  }
    __break(0x5516u);
}

uint64_t sub_1000BEE08(uint64_t result, int a2)
{
  if (!result || (uint64_t v2 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    pthread_mutex_lock((pthread_mutex_t *)(result + 296));
    uint64_t v4 = sub_1000BEC00(v2, a2);
    pthread_mutex_unlock((pthread_mutex_t *)(v2 + 296));
    return v4;
  }

  return result;
}

uint64_t sub_1000BEE68(uint64_t result, int a2)
{
  int v10 = a2;
  if (result)
  {
    uint64_t v2 = result;
    if ((result & 7) == 0)
    {
      pthread_mutex_lock((pthread_mutex_t *)(result + 296));
      uint64_t v9 = 0xAAAAAAAAAAAAAAAALL;
      uint64_t result = v2 + 248;
      if (((v2 + 248) & 7) == 0)
      {
        uint64_t result = sub_100008C50(result, &v10);
        uint64_t v9 = result;
        uint64_t v3 = v2 + 256;
        if (((v2 + 256) & 7) == 0)
        {
          uint64_t v4 = result;
          if (v3 == result) {
            goto LABEL_21;
          }
          uint64_t result = (uint64_t)sub_100003154(&v9);
          if (result)
          {
            if ((result & 7) == 0)
            {
              uint64_t v5 = (uint64_t *)(result + 8);
              if (((result + 8) & 7) == 0)
              {
                uint64_t result = *v5;
                if (*v5)
                {
                  if ((result & 7) == 0)
                  {
                    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 176LL))(result);
                    if (((v2 + 272) & 7) == 0)
                    {
                      uint64_t result = (uint64_t)sub_100003154(&v9);
                      if (result)
                      {
                        if ((result & 7) == 0 && ((result + 8) & 7) == 0)
                        {
                          sub_100020DF4(v2 + 272, (void *)(result + 8));
                          uint64_t result = (uint64_t)sub_100003154(&v9);
                          if (result)
                          {
                            if ((result & 7) == 0 && ((result + 8) & 7) == 0)
                            {
                              *(void *)(result + _Block_object_dispose((const void *)(v1 - 120), 8) = v2 + 112;
                              int v6 = *(_DWORD *)(v2 + 240);
                              BOOL v7 = v6 != 0;
                              int v8 = v6 - 1;
                              if (!v7) {
                                goto LABEL_23;
                              }
                              *(_DWORD *)(v2 + 240) = v8;
LABEL_21:
                              pthread_mutex_unlock((pthread_mutex_t *)(v2 + 296));
                              return v3 != v4;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }

  __break(0x5516u);
LABEL_23:
  __break(0x5515u);
  return result;
}

void sub_1000BEFB4(uint64_t a1)
{
  if (!a1) {
    goto LABEL_29;
  }
  if ((a1 & 7) != 0) {
    goto LABEL_29;
  }
  uint64_t v1 = (void **)(a1 + 8);
  if (((a1 + 8) & 7) != 0) {
    goto LABEL_29;
  }
  uint64_t v2 = *v1;
  uint64_t v3 = (unint64_t)*v1 & 7;
  BOOL v4 = v2 && v3 == 0;
  BOOL v5 = v4 && ((unint64_t)(v2 + 1) & 7) == 0;
  if (v5
    && ((v6 = *v2) != 0 ? (BOOL v7 = (*v2 & 7) == 0) : (BOOL v7 = 0),
        v7 ? (BOOL v8 = ((v6 + 8) & 7) == 0) : (BOOL v8 = 0),
        v8
     && ((*(void *)(v6 + 8) = v2[1], (v9 = (void *)v2[1]) != 0LL) ? (BOOL v10 = (v2[1] & 7) == 0) : (BOOL v10 = 0),
         v10 && (*uint64_t v9 = v6, ((a1 + 16) & 7) == 0))))
  {
    uint64_t v11 = *(void *)(a1 + 16);
    BOOL v12 = v11 != 0;
    uint64_t v13 = v11 - 1;
    if (v12)
    {
      *(void *)(a1 + 16) = v13;
      sub_1000181E8(a1, v2);
      return;
    }
  }

  else
  {
LABEL_29:
    __break(0x5516u);
  }

  __break(0x5515u);
}

uint64_t sub_1000BF054(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(unsigned int *)(result + 240);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000BF06C(uint64_t result, int a2)
{
  if (!result) {
    goto LABEL_6;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_6;
  }
  uint64_t result = sub_1000BEE08(result, a2);
  if (!result) {
    uint64_t result = v2 + 112;
  }
  if ((result & 7) != 0) {
LABEL_6:
  }
    __break(0x5516u);
  return result;
}

uint64_t *sub_1000BF0B0(uint64_t *result, uint64_t a2)
{
  if (result)
  {
    uint64_t v2 = result;
    if ((result & 7) == 0)
    {
      uint64_t result = (uint64_t *)pthread_mutex_lock((pthread_mutex_t *)(result + 37));
      uint64_t v6 = (uint64_t *)0xAAAAAAAAAAAAAAAALL;
      if ((((_BYTE)v2 - 8) & 7) == 0)
      {
        uint64_t v6 = (uint64_t *)v2[31];
        if (((unint64_t)(v2 + 32) & 7) == 0)
        {
          while (1)
          {
            if (v6 == v2 + 32)
            {
              pthread_mutex_unlock((pthread_mutex_t *)(v2 + 37));
              uint64_t result = v2 + 14;
              goto LABEL_23;
            }

            uint64_t result = sub_100003154((uint64_t *)&v6);
            if (result[1])
            {
              uint64_t result = sub_100003154((uint64_t *)&v6);
              if (!result) {
                goto LABEL_24;
              }
              uint64_t v4 = result[1];
              if (!v4) {
                goto LABEL_24;
              }
              if ((v4 & 7) != 0) {
                goto LABEL_24;
              }
              BOOL v5 = (void *)(v4 + 32);
              if (*v5 == a2) {
                break;
              }
            }

            sub_100008A4C((uint64_t *)&v6);
          }

          pthread_mutex_unlock((pthread_mutex_t *)(v2 + 37));
          uint64_t result = sub_100003154((uint64_t *)&v6);
          uint64_t result = (uint64_t *)result[1];
LABEL_23:
        }
      }
    }
  }

uint64_t *sub_1000BF1F0@<X0>(uint64_t *result@<X0>, int a2@<W1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  if (result)
  {
    uint64_t v4 = result;
    if ((result & 7) == 0)
    {
      memset(a4, 170, 24);
      sub_100010C30(a4);
      BOOL v8 = (pthread_mutex_t *)(v4 + 37);
      uint64_t result = (uint64_t *)pthread_mutex_lock((pthread_mutex_t *)(v4 + 37));
      __int128 v17 = (uint64_t *)0xAAAAAAAAAAAAAAAALL;
      if ((((_BYTE)v4 - 8) & 7) == 0)
      {
        __int128 v17 = (uint64_t *)v4[31];
        uint64_t v9 = v4 + 32;
        if (((unint64_t)(v4 + 32) & 7) == 0)
        {
          if (a2 >= 0) {
            int v10 = 1 << a2;
          }
          else {
            int v10 = 0;
          }
          if (v17 == v9) {
            return (uint64_t *)pthread_mutex_unlock(v8);
          }
          uint64_t v11 = v4 + 14;
          unsigned int v12 = a2 + 32;
          while (1)
          {
            uint64_t result = sub_100003154((uint64_t *)&v17);
            uint64_t v13 = result[1];
            if (v13) {
              BOOL v14 = v13 == (void)v11;
            }
            else {
              BOOL v14 = 1;
            }
            if (!v14)
            {
              if ((v13 & 7) != 0 || ((v13 + 16) & 7) != 0) {
                break;
              }
              if (*(_DWORD *)(v13 + 16) != -1)
              {
                if (((v13 + 20) & 3) != 0) {
                  break;
                }
                if (v12 > 0x3F) {
                  goto LABEL_33;
                }
                if ((*(_DWORD *)(v13 + 20) & v10) != 0)
                {
                  if (!a3) {
                    goto LABEL_29;
                  }
                  if (((v13 + 32) & 7) != 0) {
                    break;
                  }
                  if (*(void *)(v13 + 32) == a3)
                  {
LABEL_29:
                    uint64_t v16 = result[1];
                    sub_100020DF4((uint64_t)a4, &v16);
                  }
                }
              }
            }

            sub_100008A4C((uint64_t *)&v17);
            if (v17 == v9) {
              return (uint64_t *)pthread_mutex_unlock(v8);
            }
          }
        }
      }
    }
  }

  __break(0x5516u);
LABEL_33:
  __break(0x550Au);
  return result;
}

uint64_t sub_1000BF370(uint64_t result, unsigned int a2)
{
  if (result)
  {
    uint64_t v2 = result;
    if ((result & 7) == 0)
    {
      uint64_t result = sub_1000BEE08(result, a2);
      uint64_t v4 = result;
      if (!result) {
        return v4 != 0;
      }
      if ((result & 7) == 0 && ((result + 60) & 3) == 0)
      {
        *(_BYTE *)(result + 60) = 1;
        (*(void (**)(uint64_t, uint64_t, void, void))(*(void *)v2 + 32LL))(v2, 65546LL, a2, 0LL);
        return v4 != 0;
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000BF3FC(uint64_t result, unsigned int a2)
{
  if (result)
  {
    uint64_t v2 = result;
    if ((result & 7) == 0)
    {
      uint64_t result = sub_1000BEE08(result, a2);
      uint64_t v4 = result;
      if (!result) {
        return v4 != 0;
      }
      if ((result & 7) == 0 && ((result + 60) & 3) == 0)
      {
        *(_BYTE *)(result + 60) = 0;
        (*(void (**)(uint64_t, uint64_t, void, void))(*(void *)v2 + 32LL))(v2, 65547LL, a2, 0LL);
        return v4 != 0;
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000BF484(uint64_t result, unsigned int a2)
{
  if (!result) {
    goto LABEL_11;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_11;
  }
  uint64_t result = sub_1000BEE08(result, a2);
  if (!result) {
    return result;
  }
  if ((result & 7) != 0 || (uint64_t v4 = (_BYTE *)(result + 60), ((result + 60) & 3) != 0))
  {
LABEL_11:
    __break(0x5516u);
    goto LABEL_12;
  }

  if (*v4 >= 2u)
  {
LABEL_12:
    __break(0x550Au);
    return result;
  }

  if (!*v4) {
    return 0LL;
  }
  *uint64_t v4 = 0;
  (*(void (**)(uint64_t, uint64_t, void, void))(*(void *)v2 + 32LL))(v2, 65548LL, a2, 0LL);
  return 1LL;
}

BOOL sub_1000BF518(BOOL result, int a2, unsigned int a3)
{
  if (!result || result & 7)
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t v4 = sub_1000BF55C(a2);
    return sub_1000757D4(v4, a3) == 0;
  }

  return result;
}

uint64_t sub_1000BF55C(int a1)
{
  uint64_t result = sub_1000B6CE0();
  if (result && (result & 7) == 0) {
    return sub_10008E6CC(result, a1);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000BF590(uint64_t result, int a2)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t v2 = sub_1000BF55C(a2);
    return sub_100082208(v2);
  }

  return result;
}

uint64_t sub_1000BF5B8(uint64_t result, int a2, unsigned int a3, uint64_t a4)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_8;
  }
  uint64_t result = sub_1000BEE08(result, a2);
  uint64_t v6 = result;
  if (!result) {
    return v6 != 0;
  }
  if ((result & 7) != 0)
  {
LABEL_8:
    __break(0x5516u);
  }

  else if (a3 < 0x20)
  {
    sub_1000BE470(result, a3, a4);
    return v6 != 0;
  }

  __break(0x550Au);
  return result;
}

uint64_t sub_1000BF628(uint64_t result, int a2, unsigned int a3, _BYTE *a4)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_8;
  }
  uint64_t result = sub_1000BEE08(result, a2);
  if (!result)
  {
    *a4 = 0;
    return result;
  }

  *a4 = 1;
  if ((result & 7) != 0)
  {
LABEL_8:
    __break(0x5516u);
  }

  else if (a3 < 0x20)
  {
    return sub_1000BE5A0(result, a3);
  }

  __break(0x550Au);
  return result;
}

void sub_1000BF690(uint64_t a1, int a2, int a3, unsigned int *a4, int a5)
{
  if (!a1) {
    goto LABEL_154;
  }
  uint64_t v5 = a1;
  if ((a1 & 7) != 0) {
    goto LABEL_154;
  }
  if (a2) {
    return;
  }
  uint64_t v6 = (uint64_t)a4;
  if (a3 == 5)
  {
    if (a5 != 44) {
      return;
    }
    *(void *)&__int128 v12 = 0xAAAAAAAAAAAAAAAALL;
    *((void *)&v12 + 1) = 0xAAAAAAAAAAAAAAAALL;
    *(_OWORD *)&v56[28] = v12;
    *(_OWORD *)uint64_t v56 = v12;
    *(_OWORD *)&v56[16] = v12;
    if (a4 && (a4 & 3) == 0 && ((unint64_t)(a4 + 1) & 3) == 0)
    {
      unsigned int v13 = a4[1];
      if (v13 <= 7)
      {
        *(_DWORD *)&v56[4] = a4[1];
        switch(v13)
        {
          case 0u:
            *(void *)&v56[8] = *((void *)a4 + 1);
            goto LABEL_46;
          case 1u:
            __int128 v22 = *(_OWORD *)(a4 + 6);
            *(_OWORD *)&v56[8] = *(_OWORD *)(a4 + 2);
            *(_OWORD *)&v56[24] = v22;
            *(_DWORD *)&v56[40] = a4[10];
            goto LABEL_46;
          case 2u:
            *(void *)&v56[8] = *((void *)a4 + 1);
LABEL_43:
            if (a4[2] > 1) {
              goto LABEL_155;
            }
            *(_DWORD *)&v56[8] = a4[2];
LABEL_46:
            uint64_t v21 = *a4;
            int v10 = *(void (**)(uint64_t, uint64_t, uint64_t, _BYTE *))(*(void *)a1 + 32LL);
            uint64_t v11 = 65552LL;
            break;
          case 3u:
            goto LABEL_43;
          default:
            goto LABEL_46;
        }

        goto LABEL_47;
      }

LABEL_155:
      __break(0x550Au);
    }

    goto LABEL_154;
  }

  if (a3 || a5 != 48) {
    return;
  }
  unsigned int v7 = a4[1];
  if (v7 >= 0x16 && v7 != 100) {
    return;
  }
  unsigned int v8 = *a4;
  if (*a4 > 0x1F) {
    goto LABEL_155;
  }
  if (v8 == 20)
  {
    if (((unint64_t)(a4 + 2) & 7) == 0 && ((unint64_t)(a4 + 8) & 7) == 0)
    {
      uint64_t v9 = *((void *)a4 + 1);
      *(void *)uint64_t v56 = *((void *)a4 + 4);
      *(void *)&v56[8] = v9;
      int v10 = *(void (**)(uint64_t, uint64_t, uint64_t, _BYTE *))(*(void *)a1 + 32LL);
      uint64_t v11 = 65551LL;
LABEL_38:
      a1 = v5;
      uint64_t v21 = 0LL;
LABEL_47:
      v10(a1, v11, v21, v56);
      return;
    }

    goto LABEL_154;
  }

  uint64_t v14 = (uint64_t)(a4 + 2);
  if (((unint64_t)(a4 + 2) & 7) != 0 || (uint64_t v15 = (uint64_t *)(a4 + 6), ((unint64_t)(a4 + 6) & 7) != 0))
  {
LABEL_154:
    __break(0x5516u);
    goto LABEL_155;
  }

  uint64_t v16 = *v15;
  if (!*v15)
  {
    uint64_t v17 = sub_1000B6CE0();
    if (!v17 || (v17 & 7) != 0) {
      goto LABEL_154;
    }
    uint64_t v18 = sub_10008E550(v17, *(void *)(v6 + 8), 0);
    unsigned int v8 = *(_DWORD *)v6;
    if (*(_DWORD *)v6 > 0x1Fu) {
      goto LABEL_155;
    }
    uint64_t v16 = v18;
  }

  unsigned int v19 = v8 - 21;
  if (v8 - 21 >= 4)
  {
    if (v8 == 19)
    {
      if (((v6 + 32) & 7) == 0)
      {
        uint64_t v23 = *(void *)v14;
        *(void *)uint64_t v56 = *(void *)(v6 + 32);
        *(void *)&v56[8] = v23;
        (*(void (**)(uint64_t, uint64_t, uint64_t, _BYTE *))(*(void *)v5 + 32LL))(v5, 65549LL, v16, v56);
        return;
      }

      goto LABEL_154;
    }

    if (!v16) {
      goto LABEL_142;
    }
    if ((v16 & 7) != 0) {
      goto LABEL_154;
    }
    int v24 = sub_10005783C(v16);
    if (((v6 + 16) & 7) != 0) {
      goto LABEL_154;
    }
    int v25 = (int *)(v6 + 20);
    if (((v6 + 20) & 3) != 0) {
      goto LABEL_154;
    }
    sub_1000BE954(v5, v24, *(_DWORD *)(v6 + 4), *(_DWORD *)(v6 + 16), *v25, *(void *)v14, *v15);
    if (v26)
    {
      unsigned int v27 = *(_DWORD *)v6;
      if (*(_DWORD *)v6 > 0x1Fu) {
        goto LABEL_155;
      }
      uint64_t v14 = v26;
      switch(v27)
      {
        case 0u:
          return;
        case 1u:
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          if ((v26 & 7) != 0) {
            goto LABEL_154;
          }
          sub_1000BE2B0(v26);
          if (((v14 + 48) & 7) != 0) {
            goto LABEL_154;
          }
          unsigned int v28 = *(_DWORD *)v6;
          if (*(_BYTE *)(v14 + 48))
          {
            if (v28 > 0x1F) {
              goto LABEL_155;
            }
            if (((v14 + 56) & 7) != 0) {
              goto LABEL_154;
            }
            unsigned int v29 = *(_DWORD *)(v14 + 56);
            if (v29 > 0x1F) {
              goto LABEL_155;
            }
            if (v28 == v29)
            {
              if (((v14 + 52) & 3) != 0) {
                goto LABEL_154;
              }
              if (*v25 == *(_DWORD *)(v14 + 52)) {
                return;
              }
            }
          }

          else if (v28 > 0x1F)
          {
            goto LABEL_155;
          }

          if ((((_BYTE)v14 + 64) & 7) == 0)
          {
            *(_DWORD *)(v14 + 64) = v28;
            if ((((_BYTE)v14 + 52) & 3) == 0)
            {
              *(_DWORD *)(v14 + 52) = *v25;
              if ((((_BYTE)v14 + 56) & 7) == 0)
              {
                *(_DWORD *)(v14 + 56) = v28;
                sub_1000C004C(v5, v14, 65537LL);
                return;
              }
            }
          }

          goto LABEL_154;
        case 8u:
          if ((v26 & 7) != 0) {
            goto LABEL_154;
          }
          if ((((_BYTE)v26 + 20) & 3) != 0) {
            goto LABEL_154;
          }
          *(_DWORD *)(v26 + 20) = 0;
          if ((((_BYTE)v26 + 48) & 7) != 0) {
            goto LABEL_154;
          }
          *(_BYTE *)(v26 + 4_Block_object_dispose((const void *)(v1 - 120), 8) = 1;
          if ((((_BYTE)v26 + 68) & 3) != 0) {
            goto LABEL_154;
          }
          *(_DWORD *)(v26 + 6_Block_object_dispose((const void *)(v1 - 120), 8) = 8;
          if (((v14 + 8) & 7) != 0) {
            goto LABEL_154;
          }
          (*(void (**)(uint64_t, void))(*(void *)v5 + 136LL))(v5, *(unsigned int *)(v14 + 8));
          return;
        case 9u:
          if ((v26 & 7) != 0) {
            goto LABEL_154;
          }
          if ((((_BYTE)v26 + 48) & 7) != 0) {
            goto LABEL_154;
          }
          *(_BYTE *)(v26 + 4_Block_object_dispose((const void *)(v1 - 120), 8) = 0;
          if ((((_BYTE)v26 + 52) & 3) != 0) {
            goto LABEL_154;
          }
          *(_DWORD *)(v26 + 52) = 0;
          if ((((_BYTE)v26 + 56) & 7) != 0) {
            goto LABEL_154;
          }
          *(_DWORD *)(v26 + 56) = 25;
          if (((v14 + 8) & 7) != 0) {
            goto LABEL_154;
          }
          (*(void (**)(uint64_t, void))(*(void *)v5 + 136LL))(v5, *(unsigned int *)(v14 + 8));
LABEL_93:
          if (*(_DWORD *)v6 > 0x1Fu) {
            goto LABEL_155;
          }
          if ((((_BYTE)v14 + 68) & 3) != 0) {
            goto LABEL_154;
          }
          *(_DWORD *)(v14 + 6_Block_object_dispose((const void *)(v1 - 120), 8) = *(_DWORD *)v6;
          sub_1000C004C(v5, v14, 65538LL);
          uint64_t v31 = *v15;
          if (*v15)
          {
            if ((v31 & 7) != 0) {
              goto LABEL_154;
            }
            int v32 = sub_10005783C(v31);
          }

          else
          {
            int v32 = 0;
          }

          sub_1000BEE68(v5, v32);
          return;
        case 0xEu:
          uint64_t v33 = sub_1000774F8(v16);
          if ((v14 & 7) != 0 || (((_BYTE)v14 + 24) & 7) != 0) {
            goto LABEL_154;
          }
          *(void *)(v14 + 24) = v33;
          uint64_t v30 = 65550LL;
LABEL_101:
          sub_1000C004C(v5, v14, v30);
          return;
        case 0x12u:
          sub_1000CEAEC( 0,  4,  "%s:%d Wrong message type!\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/iSL/Source/IAP/TAccessoryMgr.cpp",  712);
          return;
        default:
          if ((v26 & 7) != 0 || ((v26 + 68) & 3) != 0) {
            goto LABEL_154;
          }
          break;
      }

      *(_DWORD *)(v26 + 6_Block_object_dispose((const void *)(v1 - 120), 8) = v27;
      switch(v27)
      {
        case 7u:
          if ((((_BYTE)v26 + 64) & 7) != 0) {
            goto LABEL_154;
          }
          *(_DWORD *)(v26 + 64) = 1;
          uint64_t v30 = 65542LL;
          goto LABEL_101;
        case 0xBu:
          uint64_t v34 = sub_1000B6CE0();
          if (!v34) {
            goto LABEL_154;
          }
          if ((v34 & 7) != 0) {
            goto LABEL_154;
          }
          uint64_t v6 = sub_10008E168(v34, v16);
          uint64_t v35 = sub_1000B6CE0();
          if (!v35 || (v35 & 7) != 0) {
            goto LABEL_154;
          }
          int v36 = sub_100054AC0(v35, v6);
          if (v36 < 0) {
            goto LABEL_155;
          }
          if (!v6 || v36) {
            goto LABEL_147;
          }
          CFIndex length = 0LL;
          *(void *)uint64_t v56 = 0LL;
          uint64_t v37 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v5 + 104LL))(v5, v6);
          if (!v37)
          {
            unint64_t v41 = 0LL;
            uint64_t v16 = 0LL;
            goto LABEL_144;
          }

          if ((v37 & 7) != 0) {
            goto LABEL_154;
          }
          uint64_t v38 = (const UInt8 *)(*(uint64_t (**)(uint64_t, CFIndex *))(*(void *)v37 + 144LL))(v37, &length);
          if (!v38 || !length)
          {
            unint64_t v41 = 0LL;
            uint64_t v16 = 0LL;
            CFIndex length = 0LL;
            goto LABEL_144;
          }

          uint64_t v16 = (uint64_t)v38;
          CFDataRef v39 = CFDataCreate(0LL, v38, length);
          if (v39)
          {
            CFDataRef v40 = v39;
            unint64_t v41 = (void *)AllocCapsFromAuthCert(v39, 0LL, v56);
            CFRelease(v40);
LABEL_144:
            if ((v6 & 7) != 0) {
              goto LABEL_154;
            }
            (*(void (**)(uint64_t, void *, uint64_t, CFIndex))(*(void *)v6 + 72LL))(v6, v41, v16, length);
            if (v41) {
              free(v41);
            }
LABEL_147:
            uint64_t v54 = 65539LL;
LABEL_153:
            sub_1000C004C(v5, v14, v54);
            return;
          }

          break;
        case 0xCu:
          uint64_t v42 = sub_1000B6CE0();
          if (!v42) {
            goto LABEL_154;
          }
          if ((v42 & 7) != 0) {
            goto LABEL_154;
          }
          uint64_t v43 = sub_10008E168(v42, v16);
          uint64_t v44 = sub_1000B6CE0();
          if (!v44 || (v44 & 7) != 0) {
            goto LABEL_154;
          }
          int v45 = sub_100054AC0(v44, v43);
          if (v45 < 0) {
            goto LABEL_155;
          }
          if (!v43 || !v45) {
            goto LABEL_152;
          }
          CFIndex length = 0LL;
          *(void *)uint64_t v56 = 0LL;
          uint64_t v46 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v5 + 104LL))(v5, v43);
          if (v46)
          {
            if ((v46 & 7) != 0) {
              goto LABEL_154;
            }
            unsigned int v47 = (const UInt8 *)(*(uint64_t (**)(uint64_t, CFIndex *))(*(void *)v46 + 144LL))(v46, &length);
            if (v47 && length)
            {
              char v48 = v47;
              CFDataRef v49 = CFDataCreate(0LL, v47, length);
              if (v49)
              {
                CFDataRef v50 = v49;
                int v51 = (void *)AllocCapsFromAuthCert(v49, 0LL, v56);
                CFRelease(v50);
              }

              else
              {
                int v51 = 0LL;
              }
            }

            else
            {
              int v51 = 0LL;
              char v48 = 0LL;
              CFIndex length = 0LL;
            }
          }

          else
          {
            int v51 = 0LL;
            char v48 = 0LL;
          }

          if ((v43 & 7) != 0) {
            goto LABEL_154;
          }
          (*(void (**)(uint64_t, void *, const UInt8 *, CFIndex))(*(void *)v43 + 72LL))( v43,  v51,  v48,  length);
          if (v51) {
            free(v51);
          }
LABEL_152:
          uint64_t v54 = 65540LL;
          goto LABEL_153;
        case 0xDu:
          uint64_t v52 = sub_1000B6CE0();
          if (!v52 || (v52 & 7) != 0) {
            goto LABEL_154;
          }
          uint64_t v53 = sub_10008E168(v52, v16);
          if (!v53) {
            goto LABEL_136;
          }
          if ((v53 & 7) != 0) {
            goto LABEL_154;
          }
          (*(void (**)(uint64_t))(*(void *)v53 + 80LL))(v53);
LABEL_136:
          uint64_t v30 = 65541LL;
          goto LABEL_101;
        case 0x11u:
          (*(void (**)(uint64_t))(*(void *)v26 + 136LL))(v26);
          sub_1000C009C(v5, v14, 65543LL);
          return;
        default:
          return;
      }
    }

    else
    {
LABEL_142:
      __break(0x5518u);
    }

    unint64_t v41 = 0LL;
    goto LABEL_144;
  }

  memset(v56, 170, 16);
  if (((v6 + 40) & 7) != 0) {
    goto LABEL_154;
  }
  uint64_t v20 = *(void *)v14;
  *(void *)uint64_t v56 = *(void *)(v6 + 40);
  *(void *)&v56[8] = v20;
  if (v19 <= 3)
  {
    uint64_t v11 = dword_1000E0150[v19];
    int v10 = *(void (**)(uint64_t, uint64_t, uint64_t, _BYTE *))(*(void *)v5 + 32LL);
    goto LABEL_38;
  }

uint64_t sub_1000C0034(uint64_t result)
{
  if (result)
  {
    if ((result & 7) != 0) {
      __break(0x5516u);
    }
    else {
      return sub_10005783C(result);
    }
  }

  return result;
}

uint64_t sub_1000C004C(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result && (result & 7) == 0 && a2 && (a2 & 7) == 0 && ((a2 + 8) & 7) == 0 && ((a2 + 20) & 3) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t, void, void))(*(void *)result + 32LL))( result,  a3,  *(unsigned int *)(a2 + 8),  *(unsigned int *)(a2 + 20));
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C009C(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result && (result & 7) == 0 && a2 && (a2 & 7) == 0 && ((a2 + 8) & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)result + 32LL))( result,  a3,  *(unsigned int *)(a2 + 8));
  }
  __break(0x5516u);
  return result;
}

void sub_1000C00DC(uint64_t a1, int a2, int a3, unsigned int *a4, int a5)
{
  else {
    sub_1000BF690(a1 - 96, a2, a3, a4, a5);
  }
}

uint64_t sub_1000C00F4(int a1, unsigned int a2, uint64_t *a3)
{
  uint64_t result = sub_1000BF55C(a1);
  if (a2 < 0x10) {
    return sub_100082D6C(result, a2, a3);
  }
  __break(0x550Au);
  return result;
}

uint64_t sub_1000C012C(uint64_t result, unsigned int a2, char a3, uint64_t a4)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    v4[0] = 0xAAAAAAAAAAAAAAAALL;
    v4[1] = a4;
    LOBYTE(v4[0]) = a3;
    (*(void (**)(uint64_t, uint64_t, void, void *))(*(void *)result + 32LL))(result, 65555LL, a2, v4);
    return 1LL;
  }

  return result;
}

uint64_t sub_1000C0180(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t result = sub_100081368(*(void *)(result + 32));
  }

  __break(0x550Au);
  return result;
}

uint64_t sub_1000C01BC(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t result = sub_100081368(*(void *)(result + 32));
  }

  __break(0x550Au);
  return result;
}

uint64_t sub_1000C01FC(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000814A0();
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C0214(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_100081368(*(void *)(result + 32));
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C022C(uint64_t result, void *a2)
{
  if (result && (result & 7) == 0) {
    return sub_1000814A8(*(void *)(result + 40), a2);
  }
  __break(0x5516u);
  return result;
}

void sub_1000C0244(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

void sub_1000C0258(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

char *sub_1000C026C@<X0>(char *result@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  if (!result {
    || (result & 7) != 0
  }
    || (uint64_t v4 = result + 8, ((unint64_t)(result + 8) & 7) != 0)
    || (*(void *)(a3 + 16) = 0xAAAAAAAAAAAAAAAALL,
        uint64_t result = (char *)operator new(0x50uLL),
        *(void *)a3 = result,
        *(void *)(a3 + _Block_object_dispose((const void *)(v1 - 120), 8) = v4,
        (result & 7) != 0)
    || (((_BYTE)result + 32) & 7) != 0
    || (result[32] = *a2, *(_BYTE *)(a3 + 16) = 1, ((unint64_t)(result + 40) & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    *((void *)result + 9) = 0LL;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_BYTE *)(a3 + 17) = 1;
  }

  return result;
}

uint64_t sub_1000C0304(uint64_t result, uint64_t *a2, unsigned int *a3)
{
  if (result)
  {
    uint64_t v5 = result;
    if ((result & 7) == 0)
    {
      uint64_t v4 = a2;
      uint64_t result = sub_100008C24(result);
      uint64_t v7 = v5 + 8;
      if (((v5 + 8) & 7) == 0)
      {
        if (!result)
        {
          uint64_t result = v5 + 8;
          goto LABEL_24;
        }

        if ((((_BYTE)v5 + 16) & 7) == 0 && (result & 7) == 0)
        {
          unsigned int v8 = *a3;
          while (((result + 32) & 7) == 0)
          {
            if (v8 >= 0x20 || (unsigned int v9 = *(_DWORD *)(result + 32), v9 > 0x1F))
            {
              __break(0x550Au);
              return result;
            }

            if (v8 >= v9)
            {
              if (v9 >= v8)
              {
                *uint64_t v4 = result;
                if ((v7 & 7) == 0) {
                  return v7;
                }
                break;
              }

              uint64_t v3 = (uint64_t *)(result + 8);
              if (((result + 8) & 7) != 0) {
                break;
              }
              uint64_t v10 = *v3;
              if (!*v3) {
                goto LABEL_23;
              }
              result += 8LL;
            }

            else
            {
              uint64_t v10 = *(void *)result;
              if (!*(void *)result)
              {
                uint64_t v7 = result;
                goto LABEL_24;
              }
            }

            if ((v10 & 7) != 0) {
              break;
            }
            uint64_t v7 = result;
            uint64_t result = v10;
          }
        }
      }
    }
  }

  __break(0x5516u);
LABEL_23:
  uint64_t v7 = result;
  uint64_t result = (uint64_t)v3;
LABEL_24:
  *uint64_t v4 = v7;
  return result;
}

_DWORD *sub_1000C0414@<X0>(_DWORD *result@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  if (!result {
    || (result & 7) != 0
  }
    || (uint64_t v4 = (char *)(result + 2), ((unint64_t)(result + 2) & 7) != 0)
    || (*(void *)(a3 + 16) = 0xAAAAAAAAAAAAAAAALL,
        uint64_t result = operator new(0x30uLL),
        *(void *)a3 = result,
        *(void *)(a3 + _Block_object_dispose((const void *)(v1 - 120), 8) = v4,
        (result & 7) != 0)
    || ((unint64_t)(result + 8) & 7) != 0
    || (((_BYTE)result + 32) & 3) != 0)
  {
LABEL_10:
    __break(0x5516u);
    goto LABEL_11;
  }

  if (*a2 < 0x20u)
  {
    result[8] = *a2;
    *(_BYTE *)(a3 + 16) = 1;
    if (((unint64_t)(result + 10) & 7) == 0)
    {
      *((void *)result + 5) = 0LL;
      *(_BYTE *)(a3 + 17) = 1;
      return result;
    }

    goto LABEL_10;
  }

uint64_t sub_1000C04B8(uint64_t result, unsigned int *a2)
{
  if (!result) {
    goto LABEL_11;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_11;
  }
  uint64_t v5 = 0xAAAAAAAAAAAAAAAALL;
  uint64_t result = sub_100008C24(result);
  uint64_t v4 = v2 + 8;
  if (((v2 + 8) & 7) != 0) {
    goto LABEL_11;
  }
  uint64_t result = sub_1000C0574(v2, a2, result, v2 + 8);
  uint64_t v5 = result;
  if (v4 == result) {
    return v4;
  }
  if ((((_BYTE)v2 + 16) & 7) != 0)
  {
LABEL_11:
    __break(0x5516u);
  }

  else
  {
    uint64_t result = (uint64_t)sub_100008AFC(&v5);
    if (*a2 < 0x20 && *(_DWORD *)result <= 0x1Fu)
    {
      if (*a2 >= *(_DWORD *)result) {
        return v5;
      }
      return v4;
    }
  }

  __break(0x550Au);
  return result;
}

uint64_t sub_1000C0574(uint64_t result, unsigned int *a2, uint64_t a3, uint64_t a4)
{
  if (!result || (result & 7) != 0)
  {
LABEL_17:
    __break(0x5516u);
    return a3;
  }

  if (a3)
  {
    if ((((_BYTE)result + 16) & 7) == 0 && (a3 & 7) == 0)
    {
      unsigned int v4 = *a2;
      while (((a3 + 32) & 7) == 0)
      {
        unsigned int v5 = *(_DWORD *)(a3 + 32);
        if (v5 > 0x1F || v4 >= 0x20)
        {
          __break(0x550Au);
          return result;
        }

        if (v5 >= v4)
        {
          uint64_t v6 = *(void *)a3;
          if (!*(void *)a3) {
            return a3;
          }
        }

        else
        {
          if (((a3 + 8) & 7) != 0) {
            goto LABEL_17;
          }
          uint64_t v6 = *(void *)(a3 + 8);
          if (!v6) {
            return a4;
          }
          a3 = a4;
        }

        if ((v6 & 7) != 0) {
          goto LABEL_17;
        }
        a4 = a3;
        a3 = v6;
      }
    }

    goto LABEL_17;
  }

  return a4;
}

void *sub_1000C0614@<X0>(void *result@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  if (!result {
    || (result & 7) != 0
  }
    || (unsigned int v4 = (char *)(result + 1), ((unint64_t)(result + 1) & 7) != 0)
    || (*(void *)(a3 + 16) = 0xAAAAAAAAAAAAAAAALL,
        uint64_t result = operator new(0x30uLL),
        *(void *)a3 = result,
        *(void *)(a3 + _Block_object_dispose((const void *)(v1 - 120), 8) = v4,
        (result & 7) != 0)
    || ((unint64_t)(result + 4) & 7) != 0
    || (((_BYTE)result + 32) & 3) != 0
    || (*((_DWORD *)result + _Block_object_dispose((const void *)(v1 - 120), 8) = *a2, *(_BYTE *)(a3 + 16) = 1, ((unint64_t)(result + 5) & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    result[5] = 0LL;
    *(_BYTE *)(a3 + 17) = 1;
  }

  return result;
}

uint64_t sub_1000C06AC()
{
  if (qword_10011C720 != -1) {
    dispatch_once(&qword_10011C720, &stru_100108860);
  }
  return qword_10011C718;
}

void sub_1000C06EC(id a1)
{
  uint64_t v1 = (uint64_t)operator new(0x70uLL);
  if ((v1 & 0xF) != 0 || (v1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    qword_10011C718 = sub_1000C0724(v1);
  }
}

uint64_t sub_1000C0724(uint64_t result)
{
  if (!result
    || (uint64_t v1 = (void *)result, (result & 7) != 0)
    || (uint64_t result = sub_10001B6E4(result), *v1 = off_1001089D8, ((unint64_t)(v1 + 12) & 7) != 0)
    || (*v1 = off_100108890, v1[12] = off_100108958, v1[13] = 0LL, (uint64_t result = sub_10005BFC8()) == 0)
    || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    sub_10005C434((uint64_t *)result, (uint64_t)(v1 + 12), 0xAu, 0LL);
    return (uint64_t)v1;
  }

  return result;
}

uint64_t sub_1000C07A8(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    if ((result & 7) == 0)
    {
      *(void *)uint64_t result = off_100108890;
      *(void *)(result + 96) = off_100108958;
      char v2 = result + 96;
      uint64_t result = sub_10005BFC8();
      if (result)
      {
        if ((result & 7) == 0)
        {
          uint64_t result = (uint64_t)sub_10005C5F4((uint64_t *)result, v1 + 96, 0xAu);
          if ((v2 & 7) == 0) {
            return sub_1000BD9A8(v1);
          }
        }
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000C0814(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000C07A8(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C0828(uint64_t a1)
{
  uint64_t result = a1 - 96;
  if ((result & 7) == 0) {
    return sub_1000C07A8(result);
  }
  __break(0x5516u);
  return result;
}

void sub_1000C083C(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t v1 = (void *)sub_1000C07A8(a1);
    operator delete(v1);
  }

void sub_1000C0860(uint64_t a1)
{
}

uint64_t sub_1000C0868(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result && (result & 7) == 0) {
    return sub_100065758(a3, a2);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C0880(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result && (result & 7) == 0) {
    return sub_1000658B4(a3, a2);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C0898(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result && (result & 7) == 0) {
    return sub_100065984(a3, a2);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C08B0(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result && (result & 7) == 0) {
    return sub_100065400(a3, a2);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C08C8(uint64_t result, uint64_t a2, _DWORD *a3)
{
  if (result && (result & 7) == 0) {
    return sub_100065B30(a3, a2);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C08E0(uint64_t result, uint64_t a2)
{
  if (result && (result & 7) == 0) {
    return sub_100065A54(a2);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C08F8(uint64_t result, uint64_t a2)
{
  if (result && (result & 7) == 0) {
    return sub_1000651CC(a2);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C0910(uint64_t result, uint64_t a2)
{
  if (result && (result & 7) == 0) {
    return sub_100065CAC(a2);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C0928(uint64_t result, uint64_t a2)
{
  if (result && (result & 7) == 0) {
    return nullsub_9(a2);
  }
  __break(0x5516u);
  return result;
}

void sub_1000C0940(uint64_t a1, uint64_t a2, int a3)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    sub_100066158(a2, a3);
  }
}

uint64_t sub_1000C095C(uint64_t result, uint64_t a2)
{
  if (result && (result & 7) == 0) {
    return sub_100066074(a2);
  }
  __break(0x5516u);
  return result;
}

void sub_1000C0974(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_18;
  }
  if (a2 != 10 || a5 != 24) {
    sub_1000CEAEC( 0,  4,  "%s:%d wrong lingo (%d) or payload size (%d)\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/iSL/Source/IAP/TDigitalAudio.cpp",  125,  a2,  a5);
  }
  if (!a4 || (a4 & 7) != 0)
  {
LABEL_18:
    __break(0x5516u);
    goto LABEL_19;
  }

  int v7 = *(_DWORD *)a4;
  if (*(_DWORD *)a4 <= 3u)
  {
    if (v7 == 2)
    {
      if (((a4 + 16) & 7) == 0)
      {
        uint64_t v8 = *(void *)(a4 + 16);
        unsigned int v9 = *(void (**)(uint64_t, uint64_t, uint64_t, void))(*(void *)a1 + 32LL);
        uint64_t v11 = 786434LL;
        uint64_t v10 = a1;
        goto LABEL_16;
      }
    }

    else
    {
      if (v7 != 1)
      {
        sub_1000CEAEC( 0,  4,  "%s:%d unknown digital audio lingo message %d",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/iSL/Source/IAP/TDigitalAudio.cpp",  142,  *(_DWORD *)a4);
        return;
      }

      if (((a4 + 16) & 7) == 0)
      {
        uint64_t v8 = *(void *)(a4 + 16);
        unsigned int v9 = *(void (**)(uint64_t, uint64_t, uint64_t, void))(*(void *)a1 + 32LL);
        uint64_t v10 = a1;
        uint64_t v11 = 786433LL;
LABEL_16:
        v9(v10, v11, v8, 0LL);
        return;
      }
    }

    goto LABEL_18;
  }

void sub_1000C0AA8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  else {
    sub_1000C0974(a1 - 96, a2, 0LL, a4, a5);
  }
}

void sub_1000C0AC4(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

void sub_1000C0AD8(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

uint64_t sub_1000C0AEC()
{
  if (qword_10011C730 != -1) {
    dispatch_once(&qword_10011C730, &stru_100108AA8);
  }
  return qword_10011C728;
}

void sub_1000C0B2C(id a1)
{
  uint64_t v1 = (std::string *)operator new(0x50uLL);
  else {
    qword_10011C728 = (uint64_t)sub_1000C0B64(v1);
  }
}

std::string *sub_1000C0B64(std::string *result)
{
  if (!result) {
    goto LABEL_9;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0
    || (result->__r_.__value_.__r.__words[0] = (std::string::size_type)off_100108AD8,
        uint64_t result = (std::string *)((char *)result + 16),
        ((unint64_t)&v1->__r_.__value_.__l.__cap_ & 7) != 0)
    || (result->__r_.__value_.__r.__words[0] = 0LL,
        v1[1].__r_.__value_.__r.__words[0] = 0LL,
        v1[1].__r_.__value_.__l.__size_ = 0LL,
        ((unint64_t)&v1[2].__r_.__value_.__l.__size_ & 7) != 0)
    || (v1[2].__r_.__value_.__l.__size_ = 0LL, v1[2].__r_.__value_.__l.__cap_ = 0LL, (((_BYTE)v1 + 72) & 7) != 0))
  {
LABEL_9:
    __break(0x5516u);
  }

  else
  {
    v1[3].__r_.__value_.__r.__words[0] = 0LL;
    LOWORD(v1->__r_.__value_.__r.__words[1]) = 0;
    std::string::assign(result, "");
    v1[1].__r_.__value_.__l.__cap_ = 0LL;
    LODWORD(v1[2].__r_.__value_.__l.__data_) = 0;
    WORD2(v1[2].__r_.__value_.__r.__words[0]) = 0;
    v1[2].__r_.__value_.__s.__data_[6] = 0;
    sub_1000340CC((uint64_t)&v1[2].__r_.__value_.__l.__size_);
    if ((*(unsigned int (**)(std::string *))(v1->__r_.__value_.__r.__words[0] + 200))(v1)) {
      (*(void (**)(std::string *, void))(v1->__r_.__value_.__r.__words[0] + 48))( v1,  v1->__r_.__value_.__s.__data_[9]);
    }
    return v1;
  }

  return result;
}

void sub_1000C0C24(uint64_t a1)
{
  if (!a1
    || (a1 & 7) != 0
    || (*(void *)a1 = off_100108AD8, ((a1 + 56) & 7) != 0)
    || (char v2 = (uint64_t *)(a1 + 56), sub_100025484(&v2), ((a1 + 16) & 7) != 0))
  {
    __break(0x5516u);
  }

  else if (*(char *)(a1 + 39) < 0)
  {
    operator delete(*(void **)(a1 + 16));
  }

void sub_1000C0C9C(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    sub_1000C0C24(a1);
  }
}

void sub_1000C0CB0(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    sub_1000C0C24(a1);
    operator delete(v1);
  }

uint64_t sub_1000C0CD4(uint64_t result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else if (!*(_BYTE *)(result + 8))
  {
    (*(void (**)(uint64_t))(*(void *)result + 32LL))(result);
    (*(void (**)(uint64_t, void))(*(void *)v1 + 48LL))(v1, 0LL);
    (*(void (**)(uint64_t))(*(void *)v1 + 168LL))(v1);
    return (*(uint64_t (**)(uint64_t))(*(void *)v1 + 192LL))(v1);
  }

  return result;
}

uint64_t sub_1000C0D54(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    if ((result & 7) == 0)
    {
      memset(&v9, 0, sizeof(v9));
      (*(void (**)(uint64_t, std::string *))(*(void *)result + 16LL))(result, &v9);
      std::string::append(&v9, "/preferences.xml");
      char v2 = xmlNewDoc((const xmlChar *)"1.0");
      uint64_t v3 = v2;
      if (!v2) {
        goto LABEL_14;
      }
      unsigned int v4 = xmlNewTextWriterTree(v2, 0LL, 0);
      xmlTextWriterStartElement(v4, (const xmlChar *)"GymSettings");
      xmlTextWriterWriteFormatElement(v4, (const xmlChar *)"UserCount", "%u", *(unsigned __int8 *)(v1 + 8));
      xmlTextWriterWriteFormatElement(v4, (const xmlChar *)"CurrentUserIndex", "%u", *(unsigned __int8 *)(v1 + 9));
      uint64_t result = xmlTextWriterStartElement(v4, (const xmlChar *)"GymUsers");
      if ((((_BYTE)v1 + 56) & 7) == 0)
      {
        unint64_t v5 = *(void *)(v1 + 56);
        if (v5 != *(void *)(v1 + 64))
        {
          uint64_t v6 = *(void *)(v1 + 56) & 7LL;
          while (v5 && !v6)
          {
            int v7 = (const xmlChar *)v5;
            uint64_t result = xmlTextWriterWriteElement(v4, (const xmlChar *)"ScreenName", v7);
            if (v5 >= 0xFFFFFFFFFFFFFFE8LL) {
              goto LABEL_18;
            }
            v5 += 24LL;
            if (v5 == *(void *)(v1 + 64)) {
              goto LABEL_13;
            }
          }

          goto LABEL_17;
        }

xmlOutputBuffer *sub_1000C0EFC(xmlOutputBuffer *result, uint64_t a2)
{
  if (result)
  {
    char v2 = (xmlNode *)result;
    else {
      uint64_t v3 = *(const char **)a2;
    }
    unsigned int v4 = fopen(v3, "w");
    uint64_t result = xmlOutputBufferCreateIO( (xmlOutputWriteCallback)sub_1000C20D8,  (xmlOutputCloseCallback)sub_1000C211C,  v4,  0LL);
    if (!result) {
      return (xmlOutputBuffer *)fclose(v4);
    }
    if ((v2 & 7) == 0 && (((_BYTE)v2 + 64) & 7) == 0)
    {
      unint64_t v5 = result;
      xmlNodeDumpOutput(result, v2->doc, v2, 0, 0, 0LL);
      int v6 = xmlOutputBufferClose(v5);
      int v7 = fileno(v4);
      ftruncate(v7, v6);
      return (xmlOutputBuffer *)fclose(v4);
    }

    __break(0x5516u);
  }

  return result;
}

unint64_t sub_1000C0FC8(unint64_t result, char *__s, unint64_t a3)
{
  if (result)
  {
    uint64_t v3 = result;
    if ((result & 7) == 0)
    {
      if (*(char *)(result + 23) < 0)
      {
        uint64_t v3 = *(void *)result;
        unint64_t v6 = *(void *)(result + 8);
      }

      else
      {
        unint64_t v6 = *(unsigned __int8 *)(result + 23);
      }

      uint64_t result = strlen(__s);
      if (v6 < a3) {
        return -1LL;
      }
      int64_t v7 = result;
      if (!result) {
        return a3;
      }
      if (~v3 < a3 || (!__CFADD__(__s, result) ? (char v8 = 0) : (char v8 = 1), v6 > ~v3 || (v8 & 1) != 0))
      {
LABEL_31:
        __break(0x5513u);
LABEL_32:
        __break(0x5515u);
LABEL_33:
        __break(0x5500u);
        goto LABEL_34;
      }

      uint64_t result = v3 + a3;
      std::string v9 = (_BYTE *)(v3 + v6);
      int64_t v10 = v6 - a3;
      if ((uint64_t)(v6 - a3) < v7)
      {
LABEL_16:
        uint64_t v11 = v9;
LABEL_17:
        if (v11 == v9) {
          return -1LL;
        }
        else {
          return (unint64_t)&v11[-v3];
        }
      }

      if (__s)
      {
        int v12 = *__s;
        while (1)
        {
          BOOL v13 = __OFSUB__(v10, v7);
          int64_t v14 = v10 - v7;
          if (v13) {
            goto LABEL_32;
          }
          if (__OFADD__(v14, 1LL)) {
            goto LABEL_33;
          }
          if (v14 == -1) {
            goto LABEL_16;
          }
          uint64_t v15 = memchr((const void *)result, v12, v14 + 1);
          if (!v15) {
            goto LABEL_16;
          }
          uint64_t v11 = v15;
          uint64_t result = memcmp(v15, __s, v7);
          if (!(_DWORD)result) {
            goto LABEL_17;
          }
          if (v11 == (_BYTE *)-1LL) {
            goto LABEL_31;
          }
          uint64_t result = (unint64_t)(v11 + 1);
          int64_t v10 = v9 - (v11 + 1);
          if (v10 < v7) {
            goto LABEL_16;
          }
        }
      }
    }
  }

std::string *sub_1000C10EC(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_40;
  }
  memset(&v22, 0, sizeof(v22));
  int v20 = -1431655766;
  int v21 = -1431655766;
  (*(void (**)(uint64_t, std::string *))(*(void *)a1 + 16LL))(a1, &v22);
  std::string::append(&v22, "/preferences.xml");
  uint64_t v3 = (v22.__r_.__value_.__s.__size_ & 0x80u) == 0 ? &v22 : (std::string *)v22.__r_.__value_.__r.__words[0];
  xmlDocPtr v4 = xmlParseFile((const char *)v3);
  if (!v4) {
    goto LABEL_44;
  }
  uint64_t v1 = v4;
  p_children = (uint64_t *)&v4->children;
  uint64_t v7 = *p_children;
  if (*p_children)
  {
    if ((v7 & 7) != 0 || ((v7 + 16) & 7) != 0) {
      goto LABEL_40;
    }
    if (!strcmp(*(const char **)(v7 + 16), "GymSettings"))
    {
      if ((sub_1000C13C0(v7, (xmlChar *)"UserCount", (uint64_t)&v21) & 1) == 0)
      {
LABEL_41:
        syslog(4, "TGym::DeserializeGymInformation failed to read userCount\n");
        goto LABEL_43;
      }

      if ((sub_1000C13C0(v7, (xmlChar *)"CurrentUserIndex", (uint64_t)&v20) & 1) == 0)
      {
        syslog(4, "TGym::DeserializeGymInformation failed to read userIndex\n");
        goto LABEL_43;
      }

      if (((a1 + 56) & 7) == 0)
      {
        sub_1000340CC(a1 + 56);
        uint64_t v9 = sub_1000C8778(v7, (xmlChar *)"GymUsers");
        if (v9)
        {
          uint64_t v10 = v9;
          memset(&__str, 170, sizeof(__str));
          sub_1000255A4((uint64_t)&__str, "");
          uint64_t v11 = sub_1000C8778(v10, (xmlChar *)"ScreenName");
          if (v11)
          {
            uint64_t v12 = v11;
            if ((v11 & 7) == 0)
            {
LABEL_26:
              if (((v12 + 16) & 7) == 0)
              {
                uint64_t result = (std::string *)strcmp(*(const char **)(v12 + 16), "ScreenName");
                if (!(_DWORD)result)
                {
                  int64_t v14 = (const std::string::value_type *)sub_1000C8824(v12);
                  std::string::assign(&__str, v14);
                  if (sub_1000C0FC8((unint64_t)&__str, "..", 0LL) != -1LL)
                  {
                    syslog(4, "TGym::DeserializeGymInformation userName invalid\n");
                    xmlFreeDoc(v1);
                    std::string::~string(&__str);
                    goto LABEL_44;
                  }

                  uint64_t result = sub_1000C1468((std::string *)(a1 + 56), *(const std::string **)(a1 + 64), &__str);
                }

                uint64_t v15 = v12;
                while ((v15 & 7) == 0 && ((v15 + 8) & 7) == 0)
                {
                  unsigned int v16 = *(_DWORD *)(v15 + 8);
                  if (v16 >= 0x20)
                  {
                    __break(0x550Au);
                    return result;
                  }

                  if (v15 != v12 && v16 == 1)
                  {
                    uint64_t v12 = v15;
                    if ((v15 & 7) == 0) {
                      goto LABEL_26;
                    }
                    goto LABEL_40;
                  }

                  uint64_t v17 = (uint64_t *)(v15 + 48);
                  uint64_t v15 = *v17;
                  if (!v15) {
                    goto LABEL_48;
                  }
                }
              }
            }

            goto LABEL_40;
          }

uint64_t sub_1000C13C0(uint64_t a1, xmlChar *a2, uint64_t a3)
{
  uint64_t result = sub_1000C8778(a1, a2);
  if (result)
  {
    if ((result & 7) != 0 || ((result + 24) & 7) != 0)
    {
LABEL_16:
      __break(0x5516u);
      goto LABEL_17;
    }

    uint64_t v5 = *(void *)(result + 24);
    if (v5)
    {
      if ((v5 & 7) != 0 || ((v5 + 8) & 7) != 0) {
        goto LABEL_16;
      }
      unsigned int v7 = *(_DWORD *)(v5 + 8);
      if (v7 >= 0x20)
      {
LABEL_17:
        __break(0x550Au);
        return result;
      }

      if (v7 == 3)
      {
        char v8 = (const char **)(v5 + 80);
        if ((v8 & 7) == 0)
        {
          sscanf(*v8, "%u", a3);
          return 1LL;
        }

        goto LABEL_16;
      }
    }

    return 0LL;
  }

  return result;
}

std::string *sub_1000C1468(std::string *a1, const std::string *a2, std::string *__str)
{
  if (!a1) {
    goto LABEL_28;
  }
  uint64_t v3 = a1;
  xmlDocPtr v4 = (std::string *)a2;
  std::string::size_type v5 = a1->__r_.__value_.__r.__words[0];
  uint64_t v6 = (uint64_t)a2 - a1->__r_.__value_.__r.__words[0];
  BOOL v7 = (unint64_t)a2 >= a1->__r_.__value_.__r.__words[0];
  if (v6 < 0) {
    BOOL v7 = (unint64_t)a2 < a1->__r_.__value_.__r.__words[0];
  }
  if (!v7) {
    goto LABEL_29;
  }
  p_cap = &a1->__r_.__value_.__l.__cap_;
  unint64_t size = a1->__r_.__value_.__l.__size_;
  unint64_t v11 = *p_cap;
  if (size < *p_cap)
  {
    if (a2 == (const std::string *)size)
    {
      sub_10009ED7C((uint64_t)a1, __str);
      return v4;
    }

    sub_10009EF08(a1, a2, size, (uint64_t)&a2[1]);
    if (v4 <= __str && v3->__r_.__value_.__l.__size_ > (unint64_t)__str)
    {
      if ((unint64_t)__str > 0xFFFFFFFFFFFFFFE7LL)
      {
LABEL_29:
        __break(0x5513u);
        goto LABEL_30;
      }

      ++__str;
    }

    if ((__str & 7) == 0 && v5 && (v4 & 7) == 0)
    {
      std::string::operator=(v4, __str);
      return v4;
    }

std::string *sub_1000C161C(std::string *result, std::string *this)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    std::string::assign(this, (const std::string::value_type *)qword_10011C888);
    return std::string::append(this, "/Trainer/Workouts/Empeds");
  }

  return result;
}

void sub_1000C1668(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_17;
  }
  memset(&v8, 0, sizeof(v8));
  memset(v7, 170, sizeof(v7));
  sub_1000255A4((uint64_t)v7, "NewUser");
  (*(void (**)(uint64_t, std::string *))(*(void *)a1 + 16LL))(a1, &v8);
  std::string::append(&v8, "/NewUser");
  if (!sub_1000BD758((const char *)&v8))
  {
    sub_1000A7BAC("/latest", &v8.__r_.__value_.__l.__data_, (char *)__p);
    unsigned int v2 = sub_1000BD67C((char *)__p);
    unsigned int v3 = v2;
    if (v6 < 0)
    {
      operator delete(__p[0]);
      if (v3) {
        goto LABEL_12;
      }
    }

    else if (v2)
    {
      goto LABEL_12;
    }
  }

  int v4 = *(unsigned __int8 *)(a1 + 8);
  if (v4 == 255)
  {
LABEL_18:
    __break(0x5507u);
    return;
  }

  *(_BYTE *)(a1 + _Block_object_dispose((const void *)(v1 - 120), 8) = v4 + 1;
  if (((a1 + 16) & 7) != 0 || (std::string::assign((std::string *)(a1 + 16), "NewUser"), ((a1 + 56) & 7) != 0))
  {
LABEL_17:
    __break(0x5516u);
    goto LABEL_18;
  }

  sub_1000C1468((std::string *)(a1 + 56), *(const std::string **)(a1 + 56), (std::string *)(a1 + 16));
  *(void *)(a1 + 40) = 0LL;
  *(_DWORD *)(a1 + 4_Block_object_dispose((const void *)(v1 - 120), 8) = 0;
  *(_BYTE *)(a1 + 54) = 0;
  *(_BYTE *)(a1 + 9) = 0;
  (*(void (**)(uint64_t))(*(void *)a1 + 168LL))(a1);
LABEL_12:
  if (SHIBYTE(v7[2]) < 0) {
    operator delete(v7[0]);
  }
}

uint64_t sub_1000C17C4(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(unsigned __int8 *)(result + 8);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C17DC(uint64_t result, unsigned int a2)
{
  if (!result) {
    goto LABEL_13;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_13;
  }
  *(_BYTE *)(result + 55) = *(_BYTE *)(result + 9);
  *(_BYTE *)(result + 9) = a2;
  if (((result + 56) & 7) != 0) {
    goto LABEL_13;
  }
  std::string::size_type v3 = *(void *)(result + 56);
  if (__CFADD__(v3, 24LL * a2))
  {
LABEL_14:
    __break(0x5513u);
    return result;
  }

  if (!v3
    || (int v4 = (const std::string *)(v3 + 24LL * a2), (v4 & 7) != 0)
    || (result += 16LL, ((v2 + 16) & 7) != 0))
  {
LABEL_13:
    __break(0x5516u);
    goto LABEL_14;
  }

  std::string::operator=((std::string *)result, v4);
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 176LL))(v2);
  if ((_DWORD)result)
  {
    (*(void (**)(uint64_t))(*(void *)v2 + 192LL))(v2);
    return 1LL;
  }

  return result;
}

uint64_t sub_1000C1894(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(unsigned __int8 *)(result + 9);
  }
  __break(0x5516u);
  return result;
}

void sub_1000C18AC(uint64_t a1, std::string *a2)
{
  if (!a1
    || (a1 & 7) != 0
    || (uint64_t v3 = a1 + 16, (*(void (**)(uint64_t))(*(void *)a1 + 16LL))(a1), (v3 & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    std::operator+<char>(__p, "/", v3);
    sub_1000237C4(a2, (const std::string::value_type *)__p);
    if (v5 < 0) {
      operator delete(__p[0]);
    }
  }

void sub_1000C1928(uint64_t a1, std::string *a2)
{
  if (!a1
    || (a1 & 7) != 0
    || (uint64_t v3 = a1 + 16, (*(void (**)(uint64_t))(*(void *)a1 + 16LL))(a1), (v3 & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    std::operator+<char>(v4, "/", v3);
    sub_1000A7BAC("/latest", (char **)v4, (char *)__p);
    sub_1000237C4(a2, (const std::string::value_type *)__p);
    if (v7 < 0) {
      operator delete(__p[0]);
    }
    if (v5 < 0) {
      operator delete(v4[0]);
    }
  }

dirent *sub_1000C19C8(dirent *result)
{
  if (!result || (result & 7) != 0)
  {
LABEL_17:
    __break(0x5516u);
  }

  else
  {
    __p[0] = 0LL;
    __p[1] = 0LL;
    uint64_t v5 = 0LL;
    (*(void (**)(dirent *, void **))(result->d_ino + 72))(result, __p);
    if (sub_1000BD758((const char *)__p))
    {
      if (v5 >= 0) {
        uint64_t v1 = __p;
      }
      else {
        uint64_t v1 = (void **)__p[0];
      }
      uint64_t v2 = opendir((const char *)v1);
      do
      {
        uint64_t result = readdir(v2);
        BOOL v3 = result != 0LL;
        if (!result) {
          break;
        }
      }

      while (result->d_type == 4);
      closedir(v2);
    }

    else
    {
      BOOL v3 = 0LL;
    }

    if (SHIBYTE(v5) < 0) {
      operator delete(__p[0]);
    }
    return (dirent *)v3;
  }

  return result;
}

std::string *sub_1000C1A90@<X0>(std::string *result@<X0>, std::string *a2@<X8>)
{
  if (result
    && (result & 7) == 0
    && ((unint64_t)&result->__r_.__value_.__l.__cap_ & 7) == 0
    && a2)
  {
    return std::string::basic_string(a2, (const std::string *)&result->__r_.__value_.__r.__words[2]);
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000C1AB8(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_6;
  }

  uint64_t result = *(unsigned int *)(result + 44);
  if (result >= 4) {
LABEL_6:
  }
    __break(0x550Au);
  return result;
}

uint64_t sub_1000C1ADC(uint64_t result, unsigned int a2)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else if (a2 < 4)
  {
    *(_DWORD *)(result + 44) = a2;
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 168LL))(result);
  }

  __break(0x550Au);
  return result;
}

uint64_t sub_1000C1B08(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_6;
  }

  uint64_t result = *(unsigned int *)(result + 40);
  if (result >= 4) {
LABEL_6:
  }
    __break(0x550Au);
  return result;
}

uint64_t sub_1000C1B2C(uint64_t result, unsigned int a2)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else if (a2 < 4)
  {
    *(_DWORD *)(result + 40) = a2;
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 168LL))(result);
  }

  __break(0x550Au);
  return result;
}

uint64_t sub_1000C1B58(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(unsigned __int16 *)(result + 52);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C1B70(uint64_t result, int a2)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else if (*(unsigned __int16 *)(result + 52) != a2)
  {
    *(_WORD *)(result + 52) = a2;
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 168LL))(result);
  }

  return result;
}

uint64_t sub_1000C1BA0(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(unsigned __int8 *)(result + 54);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C1BB8(uint64_t result, char a2)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    *(_BYTE *)(result + 54) = a2;
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 168LL))(result);
  }

  return result;
}

uint64_t sub_1000C1BD8(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_6;
  }

  uint64_t result = *(unsigned int *)(result + 48);
  if (result >= 4) {
LABEL_6:
  }
    __break(0x550Au);
  return result;
}

xmlDoc *sub_1000C1BFC(xmlDoc *result)
{
  if (!result) {
    goto LABEL_16;
  }
  uint64_t v1 = result;
  memset(&v8, 0, sizeof(v8));
  (*((void (**)(xmlDoc *, std::string *))result->_private + 8))(result, &v8);
  if (!sub_1000BD758((const char *)&v8))
  {
    BOOL v3 = 0LL;
    goto LABEL_13;
  }

  std::string::append(&v8, "/preferences.xml");
  uint64_t v2 = xmlNewDoc((const xmlChar *)"1.0");
  BOOL v3 = v2;
  if (v2)
  {
    int v4 = xmlNewTextWriterTree(v2, 0LL, 0);
    uint64_t result = (xmlDoc *)xmlTextWriterStartElement(v4, (const xmlChar *)"GymUserSettings");
    p_name = (const xmlChar *)&v1->name;
    if (((unint64_t)&v1->name & 7) == 0)
    {
      if (SHIBYTE(v1->last) < 0) {
        p_name = *(const xmlChar **)p_name;
      }
      xmlTextWriterWriteElement(v4, (const xmlChar *)"UserID", p_name);
      LOWORD(v6) = WORD2(v1->next);
      xmlTextWriterWriteFormatElement(v4, (const xmlChar *)"Weight", "%.2f", (float)((float)v6 * 0.1));
      uint64_t result = (xmlDoc *)xmlTextWriterWriteFormatElement(v4, (const xmlChar *)"Age", "%u", BYTE6(v1->next));
      if (LODWORD(v1->parent) < 4)
      {
        uint64_t result = (xmlDoc *)xmlTextWriterWriteFormatElement(v4, (const xmlChar *)"Gender", "%u", LODWORD(v1->parent));
        if (HIDWORD(v1->parent) <= 3)
        {
          uint64_t result = (xmlDoc *)xmlTextWriterWriteFormatElement(v4, (const xmlChar *)"Units", "%u", HIDWORD(v1->parent));
          if (LODWORD(v1->next) <= 3)
          {
            xmlTextWriterWriteFormatElement(v4, (const xmlChar *)"RecordingPref", "%u", LODWORD(v1->next));
            xmlTextWriterEndElement(v4);
            xmlTextWriterEndElement(v4);
            xmlTextWriterEndDocument(v4);
            xmlFreeTextWriter(v4);
            RootElement = (xmlOutputBuffer *)xmlDocGetRootElement(v3);
            sub_1000C0EFC(RootElement, (uint64_t)&v8);
            xmlFreeDoc(v3);
            BOOL v3 = (xmlDoc *)1;
            goto LABEL_13;
          }
        }
      }

uint64_t sub_1000C1DF4(uint64_t result)
{
  if (!result) {
    goto LABEL_53;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_53;
  }
  memset(&v17, 0, sizeof(v17));
  int v15 = -1431655766;
  float v16 = NAN;
  (*(void (**)(uint64_t, std::string *))(*(void *)result + 64LL))(result, &v17);
  std::string::append(&v17, "/preferences.xml");
  if (sub_1000BD758((const char *)&v17))
  {
    uint64_t v2 = (v17.__r_.__value_.__s.__size_ & 0x80u) == 0 ? &v17 : (std::string *)v17.__r_.__value_.__r.__words[0];
    uint64_t result = (uint64_t)xmlParseFile((const char *)v2);
    if (result)
    {
      BOOL v3 = (xmlDoc *)result;
      int v4 = (uint64_t *)(result + 24);
      if ((result & 7) != 0 || ((result + 24) & 7) != 0) {
        goto LABEL_53;
      }
      uint64_t v6 = *v4;
      if (*v4)
      {
        if ((v6 & 7) != 0 || ((v6 + 16) & 7) != 0) {
          goto LABEL_53;
        }
        if (!strcmp(*(const char **)(v6 + 16), "GymUserSettings"))
        {
          uint64_t v9 = sub_1000C8778(v6, (xmlChar *)"UserID");
          if (v9)
          {
            uint64_t result = sub_1000C8824(v9);
            if (((v1 + 16) & 7) != 0) {
              goto LABEL_53;
            }
            std::string::assign((std::string *)(v1 + 16), (const std::string::value_type *)result);
            if (sub_1000C0FC8(v1 + 16, "..", 0LL) != -1LL)
            {
              syslog(4, "TGym::DeserializeCurrentGymUserInformation userID invalid\n");
              uint64_t v8 = 0LL;
LABEL_52:
              xmlFreeDoc(v3);
              goto LABEL_21;
            }
          }

          uint64_t result = sub_1000C8778(v6, (xmlChar *)"Weight");
          if (!result) {
            goto LABEL_43;
          }
          if ((result & 7) != 0 || ((result + 24) & 7) != 0) {
            goto LABEL_53;
          }
          uint64_t v10 = *(void *)(result + 24);
          if (!v10) {
            goto LABEL_43;
          }
          if ((v10 & 7) != 0 || ((v10 + 8) & 7) != 0) {
            goto LABEL_53;
          }
          unsigned int v12 = *(_DWORD *)(v10 + 8);
          if (v12 >= 0x20)
          {
LABEL_54:
            __break(0x550Au);
LABEL_55:
            __break(0x5505u);
            return result;
          }

          if (v12 != 3)
          {
LABEL_43:
            uint64_t v8 = 1LL;
            goto LABEL_52;
          }

          __int128 v13 = (const char **)(v10 + 80);
          if ((v13 & 7) == 0)
          {
            uint64_t result = sscanf(*v13, "%f", &v16);
            double v14 = v16 * 10.0;
            if (v14 <= -1.0 || v14 >= 65536.0) {
              goto LABEL_55;
            }
            *(_WORD *)(v1 + 52) = (int)v14;
            goto LABEL_43;
          }

void sub_1000C20A8(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0 || (uint64_t v1 = sub_100015744()) == 0 || (v1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    sub_100017D94(v1);
  }
}

uint64_t sub_1000C20D8(FILE *__stream, void *__ptr, uint64_t a3)
{
  if (!__stream) {
    return 0xFFFFFFFFLL;
  }
  uint64_t v3 = a3;
  return v3;
}

uint64_t sub_1000C211C(FILE *a1)
{
  if (!a1) {
    return 0xFFFFFFFFLL;
  }
  fflush(a1);
  return 0LL;
}

uint64_t sub_1000C2140()
{
  if (qword_10011C740 != -1) {
    dispatch_once(&qword_10011C740, &stru_100108BF0);
  }
  return qword_10011C738;
}

void sub_1000C2180(id a1)
{
  uint64_t v1 = (uint64_t)operator new(0x1A8uLL);
  if ((v1 & 0xF) != 0 || (v1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    qword_10011C738 = sub_1000C21B8(v1);
  }
}

uint64_t sub_1000C21B8(uint64_t result)
{
  if (!result) {
    goto LABEL_7;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_7;
  }
  uint64_t result = sub_10001B6E4(result);
  *(void *)uint64_t v1 = off_100108E70;
  if (((v1 + 96) & 7) != 0) {
    goto LABEL_7;
  }
  *(void *)uint64_t v1 = off_100108C20;
  *(void *)(v1 + 96) = off_100108DF0;
  *(void *)(v1 + 104) = 0LL;
  *(_WORD *)(v1 + 122) = 0;
  *(_BYTE *)(v1 + 124) = 0;
  *(_DWORD *)(v1 + 356) = 0;
  pthread_mutex_init((pthread_mutex_t *)(v1 + 360), 0LL);
  uint64_t result = sub_10005BFC8();
  if (!result || (result & 7) != 0)
  {
LABEL_7:
    __break(0x5516u);
  }

  else
  {
    sub_10005C434((uint64_t *)result, v1 + 96, 0, 0LL);
    return v1;
  }

  return result;
}

uint64_t sub_1000C2254(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    if ((result & 7) == 0)
    {
      *(void *)uint64_t result = off_100108C20;
      *(void *)(result + 96) = off_100108DF0;
      char v2 = result + 96;
      uint64_t result = sub_10005BFC8();
      if (result)
      {
        if ((result & 7) == 0)
        {
          sub_10005C5F4((uint64_t *)result, v1 + 96, 0);
          uint64_t result = pthread_mutex_destroy((pthread_mutex_t *)(v1 + 360));
          if ((v2 & 7) == 0) {
            return sub_1000BD9A8(v1);
          }
        }
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000C22C8(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000C2254(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C22DC(uint64_t a1)
{
  uint64_t result = a1 - 96;
  if ((result & 7) == 0) {
    return sub_1000C2254(result);
  }
  __break(0x5516u);
  return result;
}

void sub_1000C22F0(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t v1 = (void *)sub_1000C2254(a1);
    operator delete(v1);
  }

void sub_1000C2314(uint64_t a1)
{
}

BOOL sub_1000C231C(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  *(void *)&__int128 v1 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v1 + 1) = 0xAAAAAAAAAAAAAAAALL;
  __int128 v4 = v1;
  __int128 v5 = v1;
  unint64_t v9 = 0xAAAAAAAAAAAAAAAALL;
  __int128 v7 = v1;
  __int128 v8 = v1;
  __int128 v6 = v1;
  uint64_t v3 = *(void *)(a1 + 112);
  WORD1(v4) = 0;
  *((void *)&v4 + 1) = 0x200000000LL;
  LODWORD(v5) = 1;
  return sub_10007EE34((uint64_t)&v3) == 0;
}

uint64_t sub_1000C23B8(uint64_t result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    char v2 = (pthread_mutex_t *)(result + 360);
    pthread_mutex_lock((pthread_mutex_t *)(result + 360));
    uint64_t v3 = *(void *)(v1 + 112);
    pthread_mutex_unlock(v2);
    return v3;
  }

  return result;
}

uint64_t sub_1000C2400(uint64_t result, _BYTE *a2, _BYTE *a3)
{
  if (!result || (uint64_t v3 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    pthread_mutex_lock((pthread_mutex_t *)(result + 360));
    *a2 = *(_BYTE *)(v3 + 120);
    *a3 = *(_BYTE *)(v3 + 121);
    return pthread_mutex_unlock((pthread_mutex_t *)(v3 + 360));
  }

  return result;
}

BOOL sub_1000C245C(uint64_t a1, unsigned int a2)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
LABEL_6:
    __break(0x550Au);
  }

  *(void *)&__int128 v2 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v2 + 1) = 0xAAAAAAAAAAAAAAAALL;
  __int128 v5 = v2;
  __int128 v6 = v2;
  unint64_t v10 = 0xAAAAAAAAAAAAAAAALL;
  __int128 v8 = v2;
  __int128 v9 = v2;
  __int128 v7 = v2;
  uint64_t v4 = *(void *)(a1 + 112);
  WORD1(v5) = 0;
  *((void *)&v5 + 1) = 0x500000000LL;
  if (a2 >= 8) {
    goto LABEL_6;
  }
  LODWORD(v6) = a2;
  return sub_10007EE34((uint64_t)&v4) == 0;
}

uint64_t sub_1000C2500(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, void))(*(void *)result + 312LL))(result, 0LL);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C2520(uint64_t result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    __int128 v2 = (pthread_mutex_t *)(result + 360);
    pthread_mutex_lock((pthread_mutex_t *)(result + 360));
    uint64_t v3 = *(unsigned __int16 *)(v1 + 122);
    pthread_mutex_unlock(v2);
    return v3;
  }

  return result;
}

uint64_t sub_1000C2568(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 312LL))(result, 1LL);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C2588(uint64_t result, _BYTE *a2, _BYTE *a3)
{
  if (!result || (uint64_t v3 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    pthread_mutex_lock((pthread_mutex_t *)(result + 360));
    *a2 = *(_BYTE *)(v3 + 125);
    *a3 = *(_BYTE *)(v3 + 126);
    return pthread_mutex_unlock((pthread_mutex_t *)(v3 + 360));
  }

  return result;
}

uint64_t sub_1000C25E4(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 312LL))(result, 2LL);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C2604(uint64_t result, unsigned int *a2, _BYTE *a3)
{
  if (!result || (uint64_t v3 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t result = pthread_mutex_lock((pthread_mutex_t *)(result + 360));
    unsigned int v6 = *(_DWORD *)(v3 + 128);
    if (v6 < 8)
    {
      *a2 = v6;
      *a3 = *(_BYTE *)(v3 + 132);
      return pthread_mutex_unlock((pthread_mutex_t *)(v3 + 360));
    }
  }

  __break(0x550Au);
  return result;
}

uint64_t sub_1000C266C(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 312LL))(result, 3LL);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C268C(uint64_t result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    __int128 v2 = (pthread_mutex_t *)(result + 360);
    pthread_mutex_lock((pthread_mutex_t *)(result + 360));
    uint64_t v3 = *(unsigned __int8 *)(v1 + 133);
    pthread_mutex_unlock(v2);
    return v3;
  }

  return result;
}

uint64_t sub_1000C26D4(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 312LL))(result, 4LL);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C26F4(uint64_t result, _OWORD *a2)
{
  if (!result || (uint64_t v2 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else if (a2)
  {
    pthread_mutex_lock((pthread_mutex_t *)(result + 360));
    __int128 v4 = *(_OWORD *)(v2 + 212);
    *a2 = *(_OWORD *)(v2 + 196);
    a2[1] = v4;
    return pthread_mutex_unlock((pthread_mutex_t *)(v2 + 360));
  }

  return result;
}

uint64_t sub_1000C275C(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 312LL))(result, 5LL);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C277C(uint64_t result, _OWORD *a2)
{
  if (!result || (uint64_t v2 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else if (a2)
  {
    pthread_mutex_lock((pthread_mutex_t *)(result + 360));
    __int128 v4 = *(_OWORD *)(v2 + 244);
    __int128 v5 = *(_OWORD *)(v2 + 276);
    __int128 v6 = *(_OWORD *)(v2 + 228);
    a2[2] = *(_OWORD *)(v2 + 260);
    a2[3] = v5;
    *a2 = v6;
    a2[1] = v4;
    return pthread_mutex_unlock((pthread_mutex_t *)(v2 + 360));
  }

  return result;
}

uint64_t sub_1000C27F0(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 312LL))(result, 6LL);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C2810(uint64_t result, _OWORD *a2)
{
  if (!result || (uint64_t v2 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else if (a2)
  {
    pthread_mutex_lock((pthread_mutex_t *)(result + 360));
    __int128 v4 = *(_OWORD *)(v2 + 340);
    __int128 v6 = *(_OWORD *)(v2 + 292);
    __int128 v5 = *(_OWORD *)(v2 + 308);
    a2[2] = *(_OWORD *)(v2 + 324);
    a2[3] = v4;
    *a2 = v6;
    a2[1] = v5;
    return pthread_mutex_lock((pthread_mutex_t *)(v2 + 360));
  }

  return result;
}

uint64_t sub_1000C2880(uint64_t result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t v2 = (pthread_mutex_t *)(result + 360);
    pthread_mutex_lock((pthread_mutex_t *)(result + 360));
    uint64_t v3 = *(unsigned int *)(v1 + 356);
    pthread_mutex_unlock(v2);
    return v3;
  }

  return result;
}

BOOL sub_1000C28C8(uint64_t a1, char a2)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  *(void *)&__int128 v2 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v2 + 1) = 0xAAAAAAAAAAAAAAAALL;
  __int128 v5 = v2;
  __int128 v6 = v2;
  unint64_t v10 = 0xAAAAAAAAAAAAAAAALL;
  __int128 v8 = v2;
  __int128 v9 = v2;
  __int128 v7 = v2;
  uint64_t v4 = *(void *)(a1 + 112);
  WORD1(v5) = 0;
  *((void *)&v5 + 1) = 0x700000000LL;
  LODWORD(v6) = 7;
  BYTE11(v6) = a2;
  return sub_10007EE34((uint64_t)&v4) == 0;
}

uint64_t sub_1000C2968(uint64_t result, _BYTE *a2, _DWORD *a3, _WORD *a4, _BYTE *a5)
{
  if (!result || (uint64_t v5 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    pthread_mutex_lock((pthread_mutex_t *)(result + 360));
    *a2 = *(_BYTE *)(v5 + 134);
    *a4 = *(_WORD *)(v5 + 140);
    *a5 = *(_BYTE *)(v5 + 142);
    *a3 = *(_DWORD *)(v5 + 136);
    return pthread_mutex_unlock((pthread_mutex_t *)(v5 + 360));
  }

  return result;
}

BOOL sub_1000C29E4(uint64_t a1, char a2, int a3, __int16 a4, char a5, _OWORD *a6)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  *(void *)&__int128 v6 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v6 + 1) = 0xAAAAAAAAAAAAAAAALL;
  __int128 v9 = v6;
  *(_OWORD *)unint64_t v10 = v6;
  *(_OWORD *)&v10[16] = v6;
  __int128 v11 = v6;
  unint64_t v13 = 0xAAAAAAAAAAAAAAAALL;
  __int128 v12 = v6;
  uint64_t v8 = *(void *)(a1 + 112);
  WORD1(v9) = 0;
  *((void *)&v9 + 1) = 0x900000000LL;
  v10[11] = a2;
  *(_WORD *)&v10[8] = a4;
  v10[10] = a5;
  *(_DWORD *)unint64_t v10 = 7;
  *(_DWORD *)&v10[4] = a3;
  *(_OWORD *)&v10[12] = *a6;
  return sub_10007EE34((uint64_t)&v8) == 0;
}

BOOL sub_1000C2A94(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  *(void *)&__int128 v1 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v1 + 1) = 0xAAAAAAAAAAAAAAAALL;
  __int128 v4 = v1;
  __int128 v5 = v1;
  unint64_t v9 = 0xAAAAAAAAAAAAAAAALL;
  __int128 v7 = v1;
  __int128 v8 = v1;
  __int128 v6 = v1;
  uint64_t v3 = *(void *)(a1 + 112);
  WORD1(v4) = 0;
  *((void *)&v4 + 1) = 0xA00000000LL;
  LODWORD(v5) = 7;
  return sub_10007EE34((uint64_t)&v3) == 0;
}

uint64_t sub_1000C2B30(uint64_t result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    __int128 v2 = (pthread_mutex_t *)(result + 360);
    pthread_mutex_lock((pthread_mutex_t *)(result + 360));
    uint64_t v3 = *(unsigned int *)(v1 + 160);
    pthread_mutex_unlock(v2);
    return v3;
  }

  return result;
}

BOOL sub_1000C2B78(uint64_t a1, int a2)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  *(void *)&__int128 v2 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v2 + 1) = 0xAAAAAAAAAAAAAAAALL;
  __int128 v5 = v2;
  __int128 v6 = v2;
  unint64_t v10 = 0xAAAAAAAAAAAAAAAALL;
  __int128 v8 = v2;
  __int128 v9 = v2;
  __int128 v7 = v2;
  uint64_t v4 = *(void *)(a1 + 112);
  WORD1(v5) = 0;
  *((void *)&v5 + 1) = 0xC00000000LL;
  LODWORD(v6) = 7;
  DWORD1(v6) = a2;
  return sub_10007EE34((uint64_t)&v4) == 0;
}

BOOL sub_1000C2C14(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  *(void *)&__int128 v1 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v1 + 1) = 0xAAAAAAAAAAAAAAAALL;
  __int128 v4 = v1;
  __int128 v5 = v1;
  unint64_t v9 = 0xAAAAAAAAAAAAAAAALL;
  __int128 v7 = v1;
  __int128 v8 = v1;
  __int128 v6 = v1;
  uint64_t v3 = *(void *)(a1 + 112);
  WORD1(v4) = 0;
  *((void *)&v4 + 1) = 0xD00000000LL;
  LODWORD(v5) = 7;
  return sub_10007EE34((uint64_t)&v3) == 0;
}

uint64_t sub_1000C2CB0(uint64_t result, unint64_t a2)
{
  if (!result
    || (uint64_t v2 = result, (result & 7) != 0)
    || (unint64_t v3 = a2, pthread_mutex_lock((pthread_mutex_t *)(result + 32)), result = v2 + 8, ((v2 + 8) & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    sub_10001B8DC(result, &v3);
    pthread_mutex_unlock((pthread_mutex_t *)(v2 + 32));
    return 1LL;
  }

  return result;
}

uint64_t sub_1000C2D14(uint64_t result, uint64_t a2)
{
  if (!result
    || (uint64_t v2 = result, (result & 7) != 0)
    || (uint64_t v7 = a2,
        unint64_t v3 = (pthread_mutex_t *)(result + 32),
        uint64_t result = pthread_mutex_lock((pthread_mutex_t *)(result + 32)),
        __int128 v4 = (uint64_t *)(v2 + 8),
        ((v2 + 8) & 7) != 0)
    || (result = sub_10001BBF8(v2 + 8, &v7), uint64_t v5 = v2 + 16, (v5 & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t v6 = result;
    if (v5 != result) {
      sub_1000095C0(v4, result);
    }
    pthread_mutex_unlock(v3);
    return v5 != v6;
  }

  return result;
}

uint64_t sub_1000C2DB0(uint64_t result)
{
  if (!result || (result & 7) != 0) {
    __break(0x5516u);
  }
  return result;
}

uint64_t sub_1000C2DC4(uint64_t result)
{
  if ((((_BYTE)result - 96) & 7) != 0) {
    __break(0x5516u);
  }
  return result;
}

uint64_t sub_1000C2DD8(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else if (a3 == 15)
  {
    if (a2 <= 0x1F) {
      return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t))(*(void *)result + 32LL))( result,  655365LL,  a2,  15LL);
    }
  }

  else if (a3)
  {
    if (a2 <= 0x1F) {
      return (*(uint64_t (**)(uint64_t, uint64_t, void, void))(*(void *)result + 32LL))( result,  655362LL,  a2,  a3);
    }
  }

  else if (a2 < 0x20)
  {
    return (*(uint64_t (**)(uint64_t, uint64_t, void, void))(*(void *)result + 32LL))( result,  655361LL,  a2,  0LL);
  }

  __break(0x550Au);
  return result;
}

uint64_t sub_1000C2E70(uint64_t result, unsigned int a2, char a3)
{
  if (!result || (uint64_t v3 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t result = pthread_mutex_lock((pthread_mutex_t *)(result + 360));
    if (a2 < 8)
    {
      *(_DWORD *)(v3 + 12_Block_object_dispose((const void *)(v1 - 120), 8) = a2;
      *(_BYTE *)(v3 + 132) = a3;
      pthread_mutex_unlock((pthread_mutex_t *)(v3 + 360));
      return (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v3 + 48LL))(v3, 655370LL, 0LL);
    }
  }

  __break(0x550Au);
  return result;
}

uint64_t sub_1000C2EEC(uint64_t result, char a2)
{
  if (!result || (uint64_t v2 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    pthread_mutex_lock((pthread_mutex_t *)(result + 360));
    *(_BYTE *)(v2 + 133) = a2;
    pthread_mutex_unlock((pthread_mutex_t *)(v2 + 360));
    return (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v2 + 48LL))(v2, 655371LL, 0LL);
  }

  return result;
}

uint64_t sub_1000C2F54(uint64_t result, _OWORD *a2)
{
  if (!result || (uint64_t v2 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    pthread_mutex_lock((pthread_mutex_t *)(result + 360));
    __int128 v4 = a2[1];
    *(_OWORD *)(v2 + 196) = *a2;
    *(_OWORD *)(v2 + 212) = v4;
    pthread_mutex_unlock((pthread_mutex_t *)(v2 + 360));
    return (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v2 + 48LL))(v2, 655375LL, 0LL);
  }

  return result;
}

uint64_t sub_1000C2FC4(uint64_t result, _OWORD *a2)
{
  if (!result || (uint64_t v2 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    pthread_mutex_lock((pthread_mutex_t *)(result + 360));
    __int128 v4 = a2[2];
    __int128 v5 = a2[3];
    __int128 v6 = a2[1];
    *(_OWORD *)(v2 + 22_Block_object_dispose((const void *)(v1 - 120), 8) = *a2;
    *(_OWORD *)(v2 + 260) = v4;
    *(_OWORD *)(v2 + 276) = v5;
    *(_OWORD *)(v2 + 244) = v6;
    pthread_mutex_unlock((pthread_mutex_t *)(v2 + 360));
    return (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v2 + 48LL))(v2, 655376LL, 0LL);
  }

  return result;
}

uint64_t sub_1000C3040(uint64_t result, __int128 *a2)
{
  if (!result || (uint64_t v2 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    pthread_mutex_lock((pthread_mutex_t *)(result + 360));
    __int128 v4 = a2[3];
    __int128 v6 = *a2;
    __int128 v5 = a2[1];
    *(_OWORD *)(v2 + 324) = a2[2];
    *(_OWORD *)(v2 + 340) = v4;
    *(_OWORD *)(v2 + 292) = v6;
    *(_OWORD *)(v2 + 30_Block_object_dispose((const void *)(v1 - 120), 8) = v5;
    pthread_mutex_unlock((pthread_mutex_t *)(v2 + 360));
    return (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v2 + 48LL))(v2, 655377LL, 0LL);
  }

  return result;
}

uint64_t sub_1000C30B8(uint64_t a1, int a2)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  *(void *)&__int128 v4 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v4 + 1) = 0xAAAAAAAAAAAAAAAALL;
  __int128 v7 = v4;
  __int128 v8 = v4;
  unint64_t v12 = 0xAAAAAAAAAAAAAAAALL;
  __int128 v10 = v4;
  __int128 v11 = v4;
  __int128 v9 = v4;
  uint64_t v6 = *(void *)(a1 + 112);
  WORD1(v7) = 0;
  *((void *)&v7 + 1) = &_mh_execute_header;
  DWORD1(v_Block_object_dispose((const void *)(v1 - 120), 8) = 17;
  BYTE8(v_Block_object_dispose((const void *)(v1 - 120), 8) = 0;
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 360));
  *(_DWORD *)(a1 + 356) = a2;
  pthread_mutex_unlock((pthread_mutex_t *)(a1 + 360));
  (*(void (**)(uint64_t, uint64_t, void))(*(void *)a1 + 48LL))(a1, 655378LL, 0LL);
  return sub_10007EE34((uint64_t)&v6);
}

void sub_1000C319C(uint64_t a1, int a2)
{
  if (!a1 || (a1 & 7) != 0)
  {
LABEL_15:
    __break(0x5516u);
    return;
  }

  if (!a2)
  {
    uint64_t v3 = malloc(0x60uLL);
    if (v3)
    {
      __int128 v4 = v3;
      if ((v3 & 7) == 0)
      {
        *(void *)uint64_t v3 = *(void *)(a1 + 112);
        if ((((_DWORD)v3 + 10) & 1) == 0)
        {
          *((_WORD *)v3 + 5) = 0;
          if ((((_BYTE)v3 + 16) & 7) == 0)
          {
            *((_DWORD *)v3 + 4) = 0;
            if ((((_BYTE)v3 + 20) & 3) == 0)
            {
              *((_DWORD *)v3 + 5) = 20;
              if (((unint64_t)(v3 + 28) & 3) == 0)
              {
                *((_DWORD *)v3 + 7) = 0;
                uint64_t v5 = sub_1000451B0();
                if (v5)
                {
                  if ((v5 & 7) == 0)
                  {
                    char v6 = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 208LL))(v5);
                    if ((((_BYTE)v4 + 32) & 3) == 0)
                    {
                      v4[32] = v6;
                      sub_10007EE34((uint64_t)v4);
                      free(v4);
                      return;
                    }
                  }
                }
              }
            }
          }
        }
      }

      goto LABEL_15;
    }
  }

uint64_t sub_1000C3270(uint64_t result, char a2, char a3)
{
  if (!result || (uint64_t v3 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    pthread_mutex_lock((pthread_mutex_t *)(result + 360));
    *(_BYTE *)(v3 + 120) = a2;
    *(_BYTE *)(v3 + 121) = a3;
    pthread_mutex_unlock((pthread_mutex_t *)(v3 + 360));
    return (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v3 + 48LL))(v3, 655367LL, 0LL);
  }

  return result;
}

uint64_t sub_1000C32E0(uint64_t result, char a2, char a3)
{
  if (!result || (uint64_t v3 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    pthread_mutex_lock((pthread_mutex_t *)(result + 360));
    *(_BYTE *)(v3 + 125) = a2;
    *(_BYTE *)(v3 + 126) = a3;
    pthread_mutex_unlock((pthread_mutex_t *)(v3 + 360));
    return (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v3 + 48LL))(v3, 655369LL, 0LL);
  }

  return result;
}

uint64_t sub_1000C3350(uint64_t a1, __int16 a2)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  *(void *)&__int128 v4 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v4 + 1) = 0xAAAAAAAAAAAAAAAALL;
  __int128 v7 = v4;
  __int128 v8 = v4;
  unint64_t v12 = 0xAAAAAAAAAAAAAAAALL;
  __int128 v10 = v4;
  __int128 v11 = v4;
  __int128 v9 = v4;
  uint64_t v6 = *(void *)(a1 + 112);
  WORD1(v7) = 0;
  *((void *)&v7 + 1) = &_mh_execute_header;
  DWORD1(v_Block_object_dispose((const void *)(v1 - 120), 8) = 4;
  BYTE8(v_Block_object_dispose((const void *)(v1 - 120), 8) = 0;
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 360));
  *(_WORD *)(a1 + 122) = a2;
  pthread_mutex_unlock((pthread_mutex_t *)(a1 + 360));
  (*(void (**)(uint64_t, uint64_t, void))(*(void *)a1 + 48LL))(a1, 655368LL, 0LL);
  return sub_10007EE34((uint64_t)&v6);
}

uint64_t sub_1000C3434(uint64_t result, char a2, int a3, __int16 a4, char a5)
{
  if (!result || (uint64_t v5 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    pthread_mutex_lock((pthread_mutex_t *)(result + 360));
    *(_BYTE *)(v5 + 134) = a2;
    *(_DWORD *)(v5 + 136) = a3;
    *(_WORD *)(v5 + 140) = a4;
    *(_BYTE *)(v5 + 142) = a5;
    pthread_mutex_unlock((pthread_mutex_t *)(v5 + 360));
    return (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v5 + 48LL))(v5, 655372LL, 0LL);
  }

  return result;
}

uint64_t sub_1000C34BC(uint64_t result, int a2)
{
  if (!result || (uint64_t v2 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    pthread_mutex_lock((pthread_mutex_t *)(result + 360));
    *(_DWORD *)(v2 + 160) = a2;
    pthread_mutex_unlock((pthread_mutex_t *)(v2 + 360));
    return (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v2 + 48LL))(v2, 655373LL, 0LL);
  }

  return result;
}

uint64_t sub_1000C3524(uint64_t result, _OWORD *a2)
{
  if (!result || (uint64_t v2 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    pthread_mutex_lock((pthread_mutex_t *)(result + 360));
    __int128 v4 = a2[1];
    *(_OWORD *)(v2 + 164) = *a2;
    *(_OWORD *)(v2 + 180) = v4;
    pthread_mutex_unlock((pthread_mutex_t *)(v2 + 360));
    return (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v2 + 48LL))(v2, 655374LL, 0LL);
  }

  return result;
}

uint64_t sub_1000C3594(uint64_t result, int a2, unsigned int a3, uint64_t a4, int a5)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_76;
  }
  if (a2) {
    return result;
  }
  if (a3)
  {
    if (a3 > 2 || (a5 & 0xFFFFFFBF) != 0x20) {
      return result;
    }
    if (!a4) {
      goto LABEL_76;
    }
    if ((a4 & 7) != 0) {
      goto LABEL_76;
    }
    *(void *)(result + 112) = *(void *)a4;
    if (((a4 + 8) & 7) != 0) {
      goto LABEL_76;
    }
    int v5 = *(unsigned __int16 *)(a4 + 8);
    if (v5 != 44)
    {
      if (v5 != 49) {
        return result;
      }
      if (((a4 + 16) & 7) == 0)
      {
        unsigned int v6 = *(_DWORD *)(a4 + 16);
        if (v6 > 1) {
          goto LABEL_77;
        }
        if (v6) {
          return result;
        }
        if (((a4 + 20) & 3) == 0 && ((a4 + 24) & 3) == 0)
        {
          if (*(_BYTE *)(a4 + 24)) {
            return result;
          }
          unsigned int v7 = *(_DWORD *)(a4 + 20);
          if (v7 <= 7)
          {
            switch(v7)
            {
              case 0u:
                goto LABEL_30;
              case 1u:
                *(_BYTE *)(result + 124) = 1;
                __int128 v8 = *(uint64_t (**)(void))(*(void *)result + 32LL);
                return v8();
              case 2u:
                __int128 v8 = *(uint64_t (**)(void))(*(void *)result + 32LL);
                return v8();
              case 3u:
                __int128 v8 = *(uint64_t (**)(void))(*(void *)result + 32LL);
                return v8();
              default:
                return result;
            }

            return result;
          }

uint64_t sub_1000C3940(uint64_t result, int a2, unsigned int a3, uint64_t a4, int a5)
{
  return result;
}

BOOL sub_1000C3958(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  *(void *)&__int128 v1 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v1 + 1) = 0xAAAAAAAAAAAAAAAALL;
  __int128 v4 = v1;
  __int128 v5 = v1;
  unint64_t v9 = 0xAAAAAAAAAAAAAAAALL;
  __int128 v7 = v1;
  __int128 v8 = v1;
  __int128 v6 = v1;
  uint64_t v3 = *(void *)(a1 + 112);
  WORD1(v4) = 0;
  *((void *)&v4 + 1) = 0xE00000000LL;
  LODWORD(v5) = 7;
  return sub_10007EE34((uint64_t)&v3) == 0;
}

uint64_t sub_1000C39F4(uint64_t result, _OWORD *a2)
{
  if (!result || (uint64_t v2 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    pthread_mutex_lock((pthread_mutex_t *)(result + 360));
    __int128 v4 = *(_OWORD *)(v2 + 180);
    *a2 = *(_OWORD *)(v2 + 164);
    a2[1] = v4;
    return pthread_mutex_unlock((pthread_mutex_t *)(v2 + 360));
  }

  return result;
}

BOOL sub_1000C3A48(uint64_t a1, _OWORD *a2)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  *(void *)&__int128 v2 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v2 + 1) = 0xAAAAAAAAAAAAAAAALL;
  unint64_t v6 = 0xAAAAAAAAAAAAAAAALL;
  *(_OWORD *)__int128 v8 = v2;
  *(_OWORD *)&v8[16] = v2;
  *(_OWORD *)&v8[32] = v2;
  __int128 v9 = v2;
  uint64_t v7 = 0x1000000000LL;
  __int128 v3 = a2[1];
  *(_OWORD *)&v8[4] = *a2;
  unint64_t v10 = 0xAAAAAAAAAAAAAAAALL;
  uint64_t v5 = *(void *)(a1 + 112);
  WORD1(v6) = 0;
  *(_DWORD *)__int128 v8 = 7;
  *(_OWORD *)&v8[20] = v3;
  return sub_10007EE34((uint64_t)&v5) == 0;
}

void sub_1000C3AF0(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

void sub_1000C3B04(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

uint64_t sub_1000C3B1C(int a1, int a2)
{
  unsigned __int8 v6 = -86;
  uint64_t result = sub_1000BE638();
  if (!result || (result & 7) != 0)
  {
LABEL_16:
    __break(0x5516u);
    goto LABEL_17;
  }

  uint64_t result = sub_1000BF628(result, a1, 0xFu, &v6);
  if (result)
  {
    if ((result & 7) == 0) {
    goto LABEL_16;
    }
  }

  if (v6 < 2u)
  {
    uint64_t v5 = 0LL;
    if (!v6 || !a2) {
      return v5;
    }
    uint64_t result = (uint64_t)operator new(0x168uLL);
    if ((result & 0xF) == 0)
    {
      uint64_t v5 = result;
      if ((result & 7) == 0)
      {
        sub_1000C3C24(result, a1);
        uint64_t result = sub_1000BE638();
        if (result)
        {
          if ((result & 7) == 0)
          {
            if ((sub_1000BF5B8(result, a1, 0xFu, v5) & 1) == 0)
            {
              (*(void (**)(uint64_t))(*(void *)v5 + 8LL))(v5);
              return 0LL;
            }

            return v5;
          }
        }
      }
    }

    goto LABEL_16;
  }

uint64_t sub_1000C3C24(uint64_t result, int a2)
{
  if (!result) {
    goto LABEL_10;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_10;
  }
  *(_OWORD *)(result + 64) = 0u;
  *(_OWORD *)(result + 80) = 0u;
  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)(result + 4_Block_object_dispose((const void *)(v1 - 120), 8) = 0u;
  *(_OWORD *)uint64_t result = 0u;
  *(_OWORD *)(result + 16) = 0u;
  uint64_t result = sub_10001B6E4(result);
  *(void *)uint64_t v2 = off_100109200;
  if (((v2 + 96) & 7) != 0) {
    goto LABEL_10;
  }
  *(void *)uint64_t v2 = off_100108FB8;
  *(void *)(v2 + 96) = off_100109198;
  *(void *)(v2 + 104) = 0LL;
  *(_DWORD *)(v2 + 112) = a2;
  *(_DWORD *)(v2 + 116) = 0;
  *(_BYTE *)(v2 + 120) = 0;
  *(_BYTE *)(v2 + 144) = 0;
  *(_BYTE *)(v2 + 160) = 0;
  *(_BYTE *)(v2 + 176) = 0;
  *(_BYTE *)(v2 + 192) = 0;
  *(_BYTE *)(v2 + 20_Block_object_dispose((const void *)(v1 - 120), 8) = 0;
  *(_BYTE *)(v2 + 224) = 0;
  *(void *)(v2 + 232) = 0LL;
  *(_DWORD *)(v2 + 240) = 0;
  *(_BYTE *)(v2 + 244) = 0;
  *(void *)(v2 + 24_Block_object_dispose((const void *)(v1 - 120), 8) = 0LL;
  *(_DWORD *)(v2 + 256) = 0;
  *(_BYTE *)(v2 + 260) = 0;
  *(_BYTE *)(v2 + 296) = 0;
  *(_DWORD *)(v2 + 320) = 0;
  *(_BYTE *)(v2 + 324) = 0;
  *(void *)(v2 + 32_Block_object_dispose((const void *)(v1 - 120), 8) = 0LL;
  *(_DWORD *)(v2 + 336) = 0;
  *(_BYTE *)(v2 + 340) = 0;
  *(_BYTE *)(v2 + 346) = 0;
  *(_DWORD *)(v2 + 352) = 0;
  if (((v2 + 312) & 7) != 0
    || (*(void *)(v2 + 312) = 0LL, uint64_t v4 = sub_1000BF55C(a2), (result = sub_10005BFC8()) == 0)
    || (result & 7) != 0
    || (sub_10005C434((uint64_t *)result, v2 + 96, 0xEu, v4), (uint64_t result = sub_10005BFC8()) == 0)
    || (result & 7) != 0)
  {
LABEL_10:
    __break(0x5516u);
  }

  else
  {
    sub_10005C434((uint64_t *)result, v2 + 96, 0, v4);
    sub_1000C3D60(v2);
    return v2;
  }

  return result;
}

void sub_1000C3D60(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_17;
  }
  uint64_t v2 = sub_1000BF55C(*(_DWORD *)(a1 + 112));
  *(_DWORD *)(a1 + 116) = 1;
  if (*(unsigned __int8 *)(a1 + 120) < 2u)
  {
    uint64_t v3 = v2;
    if (!*(_BYTE *)(a1 + 120))
    {
      sub_1000CEAEC(0, 4, "(0x%08x) location accessory calling GetDevCaps(System)\n", *(_DWORD *)(a1 + 112));
      uint64_t v4 = v3;
      unsigned int v5 = 0;
      goto LABEL_15;
    }

    if (*(unsigned __int8 *)(a1 + 144) <= 1u)
    {
      if (*(_BYTE *)(a1 + 144))
      {
LABEL_8:
        if (!sub_1000C4158(a1))
        {
LABEL_11:
          sub_1000C4190(a1);
          return;
        }

        if (*(unsigned __int8 *)(a1 + 160) <= 1u)
        {
          if (*(_BYTE *)(a1 + 160)) {
            goto LABEL_11;
          }
          sub_1000CEAEC(0, 4, "(0x%08x) location accessory calling GetDevCaps(LocAssist)\n", *(_DWORD *)(a1 + 112));
          uint64_t v4 = v3;
          unsigned int v5 = 2;
          goto LABEL_15;
        }

        goto LABEL_16;
      }

      sub_1000CEAEC(0, 4, "(0x%08x) location accessory calling GetDevCaps(NmeaGps)\n", *(_DWORD *)(a1 + 112));
      uint64_t v4 = v3;
      unsigned int v5 = 1;
LABEL_15:
      sub_100088968(v4, v5);
      return;
    }
  }

void sub_1000C3E7C(uint64_t a1)
{
  if (!a1) {
    goto LABEL_10;
  }
  if ((a1 & 7) != 0) {
    goto LABEL_10;
  }
  *(void *)a1 = off_100108FB8;
  *(void *)(a1 + 96) = off_100109198;
  char v2 = a1 + 96;
  uint64_t v3 = sub_10005BFC8();
  if (!v3
    || (v3 & 7) != 0
    || (sub_10005C5F4((uint64_t *)v3, a1 + 96, 0), (uint64_t v4 = sub_10005BFC8()) == 0)
    || (v4 & 7) != 0
    || (sub_10005C5F4((uint64_t *)v4, a1 + 96, 0xEu),
        free(*(void **)(a1 + 232)),
        free(*(void **)(a1 + 248)),
        (((_BYTE)a1 + 56) & 7) != 0)
    || (free(*(void **)(a1 + 312)), free(*(void **)(a1 + 328)), (v2 & 7) != 0))
  {
LABEL_10:
    __break(0x5516u);
  }

  else
  {
    sub_10002D4B4(a1);
  }

void sub_1000C3F30(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    sub_1000C3E7C(a1);
  }
}

void sub_1000C3F44(uint64_t a1)
{
  uint64_t v1 = a1 - 96;
  if ((v1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    sub_1000C3E7C(v1);
  }
}

void sub_1000C3F58(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    sub_1000C3E7C(a1);
    operator delete(v1);
  }

void sub_1000C3F7C(uint64_t a1)
{
}

void sub_1000C3F84(uint64_t a1, int a2)
{
  if (!a1) {
    goto LABEL_7;
  }
  if ((a1 & 7) != 0) {
    goto LABEL_7;
  }
  *(_DWORD *)(a1 + 116) = 0;
  *(_BYTE *)(a1 + 120) = 0;
  *(_BYTE *)(a1 + 144) = 0;
  *(_BYTE *)(a1 + 160) = 0;
  *(_BYTE *)(a1 + 176) = 0;
  *(_BYTE *)(a1 + 192) = 0;
  *(_BYTE *)(a1 + 20_Block_object_dispose((const void *)(v1 - 120), 8) = 0;
  *(_BYTE *)(a1 + 224) = 0;
  free(*(void **)(a1 + 232));
  *(void *)(a1 + 232) = 0LL;
  *(_DWORD *)(a1 + 240) = 0;
  *(_BYTE *)(a1 + 244) = 0;
  free(*(void **)(a1 + 248));
  *(void *)(a1 + 24_Block_object_dispose((const void *)(v1 - 120), 8) = 0LL;
  *(_DWORD *)(a1 + 256) = 0;
  *(_BYTE *)(a1 + 260) = 0;
  if ((((_BYTE)a1 + 56) & 7) != 0)
  {
LABEL_7:
    __break(0x5516u);
  }

  else
  {
    free(*(void **)(a1 + 312));
    *(void *)(a1 + 312) = 0LL;
    *(_BYTE *)(a1 + 296) = 0;
    *(_DWORD *)(a1 + 320) = 0;
    *(_BYTE *)(a1 + 324) = 0;
    free(*(void **)(a1 + 328));
    *(void *)(a1 + 32_Block_object_dispose((const void *)(v1 - 120), 8) = 0LL;
    *(_DWORD *)(a1 + 336) = 0;
    *(_BYTE *)(a1 + 340) = 0;
    *(_BYTE *)(a1 + 346) = 0;
    *(_DWORD *)(a1 + 352) = 0;
    if (a2) {
      sub_1000C3D60(a1);
    }
  }

_DWORD *sub_1000C4050(_DWORD *result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    result[60] = 132;
    char v2 = malloc(0x84uLL);
    *((void *)v1 + 29) = v2;
    if (!v2) {
      v1[60] = 0;
    }
    v1[64] = 132;
    uint64_t result = malloc(0x84uLL);
    *((void *)v1 + 31) = result;
    if (!result) {
      v1[64] = 0;
    }
  }

  return result;
}

_DWORD *sub_1000C40B0(_DWORD *result)
{
  if (!result
    || (uint64_t v1 = result, (result & 7) != 0)
    || (result[80] = 132, uint64_t result = malloc(0x84uLL), ((unint64_t)(v1 + 78) & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    *((void *)v1 + 39) = result;
    if (!result) {
      v1[80] = 0;
    }
    v1[84] = 132;
    uint64_t result = malloc(0x84uLL);
    *((void *)v1 + 41) = result;
    if (!result) {
      v1[84] = 0;
    }
  }

  return result;
}

uint64_t sub_1000C4120(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_8;
  }

  if (*(unsigned __int8 *)(result + 120) >= 2u)
  {
LABEL_8:
    __break(0x550Au);
    return result;
  }

  if (*(_BYTE *)(result + 120)) {
    return (*(unsigned __int8 *)(result + 136) >> 1) & 1;
  }
  else {
    return 0LL;
  }
}

uint64_t sub_1000C4158(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_8;
  }

  if (*(unsigned __int8 *)(result + 120) >= 2u)
  {
LABEL_8:
    __break(0x550Au);
    return result;
  }

  if (*(_BYTE *)(result + 120)) {
    return (*(unsigned __int8 *)(result + 136) >> 2) & 1;
  }
  else {
    return 0LL;
  }
}

void sub_1000C4190(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_21;
  }
  uint64_t v2 = sub_1000BF55C(*(_DWORD *)(a1 + 112));
  if (*(unsigned __int8 *)(a1 + 120) < 2u)
  {
    uint64_t v3 = v2;
    if (!*(_BYTE *)(a1 + 120)) {
      sub_1000CEAEC( 0,  4,  "%s:%d !fSystemCapsValid\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/iSL/Source/IAP/TLocationDevice_IAP.cpp",  235);
    }
    *(_DWORD *)(a1 + 116) = 2;
    if (*(unsigned __int8 *)(a1 + 176) <= 1u)
    {
      if (!*(_BYTE *)(a1 + 176))
      {
        sub_1000CEAEC(0, 4, "(0x%08x) location accessory calling GetDevControl(System)\n", *(_DWORD *)(a1 + 112));
        uint64_t v4 = v3;
        unsigned int v5 = 0;
        goto LABEL_19;
      }

      if (!sub_1000C4120(a1))
      {
LABEL_11:
        if (*(unsigned __int8 *)(a1 + 208) <= 1u)
        {
          if (*(_BYTE *)(a1 + 208))
          {
LABEL_15:
            sub_1000C4324(a1);
            return;
          }

          sub_1000CEAEC(0, 4, "(0x%08x) location accessory calling GetDevControl(LocAssist)\n", *(_DWORD *)(a1 + 112));
          uint64_t v4 = v3;
          unsigned int v5 = 2;
          goto LABEL_19;
        }

        goto LABEL_20;
      }

      if (*(unsigned __int8 *)(a1 + 192) <= 1u)
      {
        if (*(_BYTE *)(a1 + 192)) {
          goto LABEL_11;
        }
        sub_1000CEAEC(0, 4, "(0x%08x) location accessory calling GetDevControl(NmeaGps)\n", *(_DWORD *)(a1 + 112));
        uint64_t v4 = v3;
        unsigned int v5 = 1;
LABEL_19:
        sub_100088C2C(v4, v5);
        return;
      }
    }
  }

uint64_t sub_1000C42EC(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_8;
  }

  if (*(unsigned __int8 *)(result + 160) >= 2u)
  {
LABEL_8:
    __break(0x550Au);
    return result;
  }

  if (*(_BYTE *)(result + 160)) {
    return *(_BYTE *)(result + 168) & 1;
  }
  else {
    return 0LL;
  }
}

uint64_t sub_1000C4324(uint64_t result)
{
  if (!result || (uint64_t v1 = (unsigned int *)result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    *(_DWORD *)(result + 116) = 3;
    sub_1000CEAEC(0, 4, "(0x%08x) location accessory ready\n", *(_DWORD *)(result + 112));
    return (*(uint64_t (**)(unsigned int *, uint64_t, void, void))(*(void *)v1 + 32LL))( v1,  983041LL,  v1[28],  0LL);
  }

  return result;
}

uint64_t sub_1000C4398(uint64_t result, unint64_t a2)
{
  if (!result
    || (uint64_t v2 = result, (result & 7) != 0)
    || (unint64_t v5 = a2, pthread_mutex_lock((pthread_mutex_t *)(result + 32)), result = v2 + 8, ((v2 + 8) & 7) != 0))
  {
LABEL_10:
    __break(0x5516u);
    goto LABEL_11;
  }

  sub_10001B8DC(result, &v5);
  uint64_t result = pthread_mutex_unlock((pthread_mutex_t *)(v2 + 32));
  unsigned int v4 = *(_DWORD *)(v2 + 116);
  if (v4 < 8)
  {
    if (v4 != 3) {
      return 1LL;
    }
    if (a2 && (a2 & 7) == 0)
    {
      (*(void (**)(unint64_t, uint64_t, void, void))(*(void *)a2 + 16LL))( a2,  983041LL,  *(unsigned int *)(v2 + 112),  0LL);
      return 1LL;
    }

    goto LABEL_10;
  }

uint64_t sub_1000C444C(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000C4460(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C4460(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_8;
  }

  if (*(unsigned __int8 *)(result + 120) >= 2u)
  {
LABEL_8:
    __break(0x550Au);
    return result;
  }

  if (*(_BYTE *)(result + 120)) {
    return *(_BYTE *)(result + 128) & 1;
  }
  else {
    return 0LL;
  }
}

BOOL sub_1000C4498(BOOL result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t v1 = sub_1000BF55C(*(_DWORD *)(result + 112));
    return sub_100088C2C(v1, 0) == 0;
  }

  return result;
}

BOOL sub_1000C44D0(BOOL result, int *a2)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_14;
  }

  unsigned int v2 = *(unsigned __int8 *)(result + 176);
  if (v2 >= 2)
  {
LABEL_14:
    __break(0x550Au);
    return result;
  }

  if (*(_BYTE *)(result + 176))
  {
    uint64_t v3 = *(void *)(result + 184) & 3LL;
    if (v3 == 3) {
      int v4 = 3;
    }
    else {
      int v4 = 0;
    }
    if (v3 == 2) {
      int v5 = 2;
    }
    else {
      int v5 = v4;
    }
    *a2 = v5;
  }

  return v2 != 0;
}

uint64_t sub_1000C4524(uint64_t result, unsigned int a2)
{
  if (!result) {
    goto LABEL_10;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_10;
  }
  if (*(unsigned __int8 *)(result + 176) >= 2u)
  {
LABEL_9:
    __break(0x550Au);
LABEL_10:
    __break(0x5516u);
    return result;
  }

  if (*(_BYTE *)(result + 176))
  {
    if (a2 <= 3)
    {
      sub_1000C45B0(result, a2);
      uint64_t v3 = *(void *)(v2 + 184);
      v5[0] = 2863311530LL;
      v5[1] = v3;
      uint64_t v4 = sub_1000BF55C(*(_DWORD *)(v2 + 112));
      return sub_100088E4C(v4, 0, (uint64_t)v5) == 0;
    }

    goto LABEL_9;
  }

  return 0LL;
}

uint64_t sub_1000C45B0(uint64_t result, unsigned int a2)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_11;
  }

  uint64_t v2 = *(void *)(result + 184);
  *(void *)(result + 184) = v2 & 0xFFFFFFFFFFFFFFFCLL;
  if (a2 >= 4)
  {
LABEL_11:
    __break(0x550Au);
    return result;
  }

  if (a2 == 2)
  {
    unint64_t v3 = v2 & 0xFFFFFFFFFFFFFFFCLL | 2;
  }

  else
  {
    if (a2 != 3) {
      return result;
    }
    unint64_t v3 = v2 | 3;
  }

  *(void *)(result + 184) = v3;
  return result;
}

uint64_t sub_1000C45FC(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000C4610(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C4610(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_8;
  }

  if (*(unsigned __int8 *)(result + 120) >= 2u)
  {
LABEL_8:
    __break(0x550Au);
    return result;
  }

  if (*(_BYTE *)(result + 120)) {
    return (*(unsigned __int8 *)(result + 128) >> 1) & 1;
  }
  else {
    return 0LL;
  }
}

uint64_t sub_1000C4648(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000C465C(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C465C(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_8;
  }

  if (*(unsigned __int8 *)(result + 120) >= 2u)
  {
LABEL_8:
    __break(0x550Au);
    return result;
  }

  if (*(_BYTE *)(result + 120)) {
    return (*(unsigned __int8 *)(result + 128) >> 2) & 1;
  }
  else {
    return 0LL;
  }
}

uint64_t sub_1000C4694(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000C46A8(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C46A8(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_8;
  }

  if (*(unsigned __int8 *)(result + 120) >= 2u)
  {
LABEL_8:
    __break(0x550Au);
    return result;
  }

  if (*(_BYTE *)(result + 120)) {
    return (*(unsigned __int8 *)(result + 128) >> 3) & 1;
  }
  else {
    return 0LL;
  }
}

BOOL sub_1000C46E0(BOOL result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t v1 = sub_1000BF55C(*(_DWORD *)(result + 112));
    return sub_100088C2C(v1, 0) == 0;
  }

  return result;
}

BOOL sub_1000C4718(BOOL result, BOOL *a2, BOOL *a3)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_8;
  }
  unsigned int v3 = *(unsigned __int8 *)(result + 176);
  if (v3 >= 2) {
    goto LABEL_9;
  }
  if (!*(_BYTE *)(result + 176)) {
    return v3 != 0;
  }
  if ((((_BYTE)result - 72) & 7) != 0)
  {
LABEL_8:
    __break(0x5516u);
    goto LABEL_9;
  }

  char v4 = *(_BYTE *)(result + 184);
  *a2 = (v4 & 4) != 0;
  *a3 = (v4 & 8) != 0;
  unsigned int v3 = *(unsigned __int8 *)(result + 176);
  if (v3 <= 1) {
    return v3 != 0;
  }
LABEL_9:
  __break(0x550Au);
  return result;
}

uint64_t sub_1000C4774(uint64_t result, int a2, int a3)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_13;
  }
  if (*(unsigned __int8 *)(result + 176) >= 2u)
  {
LABEL_14:
    __break(0x550Au);
    return result;
  }

  if (!*(_BYTE *)(result + 176)) {
    return 0LL;
  }
  if ((((_BYTE)result - 72) & 7) != 0)
  {
LABEL_13:
    __break(0x5516u);
    goto LABEL_14;
  }

  uint64_t v3 = 4LL;
  if (!a2) {
    uint64_t v3 = 0LL;
  }
  uint64_t v4 = 8LL;
  if (!a3) {
    uint64_t v4 = 0LL;
  }
  unint64_t v5 = v4 | v3 | *(void *)(result + 184) & 0xFFFFFFFFFFFFFFF3LL;
  *(void *)(result + 184) = v5;
  v7[0] = 2863311530LL;
  v7[1] = v5;
  uint64_t v6 = sub_1000BF55C(*(_DWORD *)(result + 112));
  return sub_100088E4C(v6, 0, (uint64_t)v7) == 0;
}

uint64_t sub_1000C4818(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000C4120(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C482C(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000C4840(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C4840(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_8;
  }

  if (*(unsigned __int8 *)(result + 144) >= 2u)
  {
LABEL_8:
    __break(0x550Au);
    return result;
  }

  if (*(_BYTE *)(result + 144)) {
    return *(_BYTE *)(result + 152) & 1;
  }
  else {
    return 0LL;
  }
}

BOOL sub_1000C4878(BOOL result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t v1 = sub_1000BF55C(*(_DWORD *)(result + 112));
    return sub_100088C2C(v1, 1u) == 0;
  }

  return result;
}

BOOL sub_1000C48B0(BOOL result, _BYTE *a2)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_8;
  }
  unsigned int v2 = *(unsigned __int8 *)(result + 192);
  if (v2 >= 2) {
    goto LABEL_9;
  }
  if (!*(_BYTE *)(result + 192)) {
    return v2 != 0;
  }
  if ((((_BYTE)result - 56) & 7) != 0)
  {
LABEL_8:
    __break(0x5516u);
    goto LABEL_9;
  }

  *a2 = *(_BYTE *)(result + 200) & 1;
  unsigned int v2 = *(unsigned __int8 *)(result + 192);
  if (v2 <= 1) {
    return v2 != 0;
  }
LABEL_9:
  __break(0x550Au);
  return result;
}

uint64_t sub_1000C4904(uint64_t result, unsigned int a2)
{
  if (!result || (result & 7) != 0)
  {
LABEL_9:
    __break(0x5516u);
    goto LABEL_10;
  }

  if (*(unsigned __int8 *)(result + 192) >= 2u)
  {
LABEL_10:
    __break(0x550Au);
    return result;
  }

  if (*(_BYTE *)(result + 192))
  {
    if ((((_BYTE)result - 56) & 7) == 0)
    {
      unint64_t v2 = *(void *)(result + 200) & 0xFFFFFFFFFFFFFFFELL | a2;
      *(void *)(result + 200) = v2;
      v4[0] = 0x1AAAAAAAALL;
      v4[1] = v2;
      uint64_t v3 = sub_1000BF55C(*(_DWORD *)(result + 112));
      return sub_100088E4C(v3, 1u, (uint64_t)v4) == 0;
    }

    goto LABEL_9;
  }

  return 0LL;
}

BOOL sub_1000C4994(BOOL result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t v1 = sub_1000BF55C(*(_DWORD *)(result + 112));
    return sub_100089124(v1, 1u, 0, 0LL) == 0;
  }

  return result;
}

uint64_t sub_1000C49D4(uint64_t result, char *a2, unsigned int a3)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_9;
  }

  if (*(unsigned __int8 *)(result + 224) >= 2u)
  {
LABEL_9:
    __break(0x550Au);
    return result;
  }

  if (!*(_BYTE *)(result + 224)) {
    return 0LL;
  }
  unint64_t v5 = *(const char **)(result + 232);
  if (strlen(v5) >= a3) {
    return 0LL;
  }
  strlcpy(a2, v5, a3);
  return 1LL;
}

BOOL sub_1000C4A50(uint64_t a1, char *__s)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
LABEL_6:
    __break(0x5500u);
  }

  *(_BYTE *)(a1 + 224) = 0;
  *(void *)&__int128 v3 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v3 + 1) = 0xAAAAAAAAAAAAAAAALL;
  __int16 v7 = -21846;
  *(_OWORD *)&v9[6] = v3;
  *(void *)&v15[13] = 0xAAAAAAAAAAAAAAAALL;
  __int128 v14 = v3;
  *(_OWORD *)int v15 = v3;
  __int128 v12 = v3;
  __int128 v13 = v3;
  __int128 v10 = v3;
  __int128 v11 = v3;
  uint64_t v8 = 1LL;
  *(void *)__int128 v9 = __s;
  int v4 = strlen(__s);
  if (v4 == -1) {
    goto LABEL_6;
  }
  *(_DWORD *)&v9[8] = v4 + 1;
  uint64_t v5 = sub_1000BF55C(*(_DWORD *)(a1 + 112));
  return sub_100089474(v5, 1u, 0, (uint64_t)&v7) == 0;
}

BOOL sub_1000C4B18(BOOL result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t v1 = sub_1000BF55C(*(_DWORD *)(result + 112));
    return sub_100089124(v1, 1u, 0x80u, 0LL) == 0;
  }

  return result;
}

uint64_t sub_1000C4B58(uint64_t result, char *a2, unsigned int a3)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_9;
  }

  if (*(unsigned __int8 *)(result + 244) >= 2u)
  {
LABEL_9:
    __break(0x550Au);
    return result;
  }

  if (!*(_BYTE *)(result + 244)) {
    return 0LL;
  }
  uint64_t v5 = *(const char **)(result + 248);
  if (strlen(v5) >= a3) {
    return 0LL;
  }
  strlcpy(a2, v5, a3);
  return 1LL;
}

BOOL sub_1000C4BD4(uint64_t a1, char *__s)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
LABEL_9:
    __break(0x5500u);
  }

  *(void *)&__int128 v4 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v4 + 1) = 0xAAAAAAAAAAAAAAAALL;
  *(void *)&v11[13] = 0xAAAAAAAAAAAAAAAALL;
  *(_OWORD *)&v10[16] = v4;
  *(_OWORD *)__int128 v11 = v4;
  v9[4] = v4;
  *(_OWORD *)__int128 v10 = v4;
  void v9[2] = v4;
  v9[3] = v4;
  v9[0] = v4;
  v9[1] = v4;
  *(void *)((char *)v9 + 2) = 0x8000000001LL;
  int v5 = strlen(__s);
  size_t v6 = (v5 + 1);
  if (v5 == -1) {
    goto LABEL_9;
  }
  *(_DWORD *)&v10[13] = v5 + 1;
  memcpy((void *)((unint64_t)v9 | 0xA), __s, v6);
  uint64_t v8 = sub_1000BF55C(*(_DWORD *)(a1 + 112));
  return sub_100089474(v8, 1u, 0x80u, (uint64_t)v9) == 0;
}

uint64_t sub_1000C4CBC(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000C4158(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C4CD0(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000C42EC(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C4CE4(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000C4CF8(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C4CF8(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_8;
  }

  if (*(unsigned __int8 *)(result + 160) >= 2u)
  {
LABEL_8:
    __break(0x550Au);
    return result;
  }

  if (*(_BYTE *)(result + 160)) {
    return (*(unsigned __int8 *)(result + 168) >> 1) & 1;
  }
  else {
    return 0LL;
  }
}

uint64_t sub_1000C4D30(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000C4D44(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C4D44(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_8;
  }

  if (*(unsigned __int8 *)(result + 160) >= 2u)
  {
LABEL_8:
    __break(0x550Au);
    return result;
  }

  if (*(_BYTE *)(result + 160)) {
    return (*(unsigned __int8 *)(result + 168) >> 2) & 1;
  }
  else {
    return 0LL;
  }
}

uint64_t sub_1000C4D7C(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000C4D90(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C4D90(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_8;
  }

  if (*(unsigned __int8 *)(result + 160) >= 2u)
  {
LABEL_8:
    __break(0x550Au);
    return result;
  }

  if (*(_BYTE *)(result + 160)) {
    return (*(unsigned __int8 *)(result + 168) >> 3) & 1;
  }
  else {
    return 0LL;
  }
}

uint64_t sub_1000C4DC8(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000C4DDC(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C4DDC(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_8;
  }

  if (*(unsigned __int8 *)(result + 160) >= 2u)
  {
LABEL_8:
    __break(0x550Au);
    return result;
  }

  if (*(_BYTE *)(result + 160)) {
    return (*(unsigned __int8 *)(result + 168) >> 4) & 1;
  }
  else {
    return 0LL;
  }
}

BOOL sub_1000C4E14(BOOL result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t v1 = sub_1000BF55C(*(_DWORD *)(result + 112));
    return sub_100088C2C(v1, 2u) == 0;
  }

  return result;
}

BOOL sub_1000C4E4C(BOOL result, _DWORD *a2)
{
  if (!result || (result & 7) != 0)
  {
LABEL_9:
    __break(0x5516u);
    goto LABEL_10;
  }

  unsigned int v2 = *(unsigned __int8 *)(result + 208);
  if (v2 < 2)
  {
    if (!*(_BYTE *)(result + 208)) {
      return v2 != 0;
    }
    *a2 = 0;
    if (((result + 216) & 7) == 0)
    {
      if ((*(_BYTE *)(result + 216) & 1) != 0) {
        *a2 = 1;
      }
      return v2 != 0;
    }

    goto LABEL_9;
  }

uint64_t sub_1000C4E9C(uint64_t result, char a2)
{
  if (!result || (result & 7) != 0)
  {
LABEL_9:
    __break(0x5516u);
    goto LABEL_10;
  }

  if (*(unsigned __int8 *)(result + 208) >= 2u)
  {
LABEL_10:
    __break(0x550Au);
    return result;
  }

  if (*(_BYTE *)(result + 208))
  {
    if ((((_BYTE)result - 40) & 7) == 0)
    {
      unint64_t v2 = *(void *)(result + 216) & 0xFFFFFFFFFFFFFFFELL | a2 & 1;
      *(void *)(result + 216) = v2;
      v4[0] = 0x2AAAAAAAALL;
      v4[1] = v2;
      uint64_t v3 = sub_1000BF55C(*(_DWORD *)(result + 112));
      return sub_100088E4C(v3, 2u, (uint64_t)v4) == 0;
    }

    goto LABEL_9;
  }

  return 0LL;
}

BOOL sub_1000C4F2C(BOOL result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t v1 = sub_1000BF55C(*(_DWORD *)(result + 112));
    return sub_100089124(v1, 2u, 0, 0LL) == 0;
  }

  return result;
}

BOOL sub_1000C4F6C(BOOL result, _OWORD *a2)
{
  if (result && (result & 7) == 0)
  {
    unsigned int v2 = *(unsigned __int8 *)(result + 260);
    if (v2 < 2)
    {
      if (!*(_BYTE *)(result + 260)) {
        return v2 != 0;
      }
      __int128 v3 = *(_OWORD *)(result + 280);
      *a2 = *(_OWORD *)(result + 264);
      a2[1] = v3;
      unsigned int v2 = *(unsigned __int8 *)(result + 260);
      if (v2 <= 1) {
        return v2 != 0;
      }
    }

    __break(0x550Au);
  }

  __break(0x5516u);
  return result;
}

BOOL sub_1000C4FB4(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0) {
LABEL_15:
  }
    __break(0x5516u);
  *(_BYTE *)(a1 + 260) = 0;
  *(void *)&__int128 v2 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v2 + 1) = 0xAAAAAAAAAAAAAAAALL;
  *(void *)&v16[13] = 0xAAAAAAAAAAAAAAAALL;
  __int128 v15 = v2;
  *(_OWORD *)float v16 = v2;
  __int128 v13 = v2;
  __int128 v14 = v2;
  __int128 v11 = v2;
  __int128 v12 = v2;
  __int128 v9 = v2;
  __int128 v10 = v2;
  *(void *)((char *)&v9 + 2) = 2LL;
  WORD5(v9) = *(_WORD *)a2;
  HIDWORD(v9) = *(_DWORD *)(a2 + 4);
  double v3 = *(double *)(a2 + 8) * 1000000.0;
  BOOL v4 = v3 > -2147483650.0 && v3 < 2147483650.0;
  if (!v4
    || ((LODWORD(v10) = (int)v3, double v5 = *(double *)(a2 + 16) * 1000000.0, v5 > -2147483650.0)
      ? (BOOL v6 = v5 < 2147483650.0)
      : (BOOL v6 = 0),
        !v6))
  {
    __break(0x5505u);
    goto LABEL_15;
  }

  DWORD1(v10) = (int)v5;
  WORD4(v10) = *(_WORD *)(a2 + 24);
  uint64_t v7 = sub_1000BF55C(*(_DWORD *)(a1 + 112));
  return sub_100089474(v7, 2u, 0, (uint64_t)&v9) == 0;
}

BOOL sub_1000C50C8(BOOL result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t v1 = sub_1000BF55C(*(_DWORD *)(result + 112));
    return sub_100089124(v1, 2u, 1u, 0LL) == 0;
  }

  return result;
}

uint64_t sub_1000C5108(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_11;
  }
  if (*(unsigned __int8 *)(result + 296) >= 2u)
  {
LABEL_12:
    __break(0x550Au);
    return result;
  }

  if (!*(_BYTE *)(result + 296)) {
    return 0LL;
  }
  __int128 v2 = (_DWORD *)(result + 304);
  if (((result + 304) & 7) != 0) {
    goto LABEL_11;
  }
  if (*v2 > *(_DWORD *)a2) {
    return 0LL;
  }
  *(_DWORD *)a2 = *v2;
  if (((result + 312) & 7) != 0)
  {
LABEL_11:
    __break(0x5516u);
    goto LABEL_12;
  }

  memcpy(*(void **)(a2 + 8), *(const void **)(result + 312), *v2);
  return 1LL;
}

BOOL sub_1000C5184(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  *(_BYTE *)(a1 + 296) = 0;
  *(void *)&__int128 v2 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v2 + 1) = 0xAAAAAAAAAAAAAAAALL;
  *(_OWORD *)double v5 = v2;
  *(_OWORD *)&v5[16] = v2;
  *(void *)&v11[13] = 0xAAAAAAAAAAAAAAAALL;
  __int128 v10 = v2;
  *(_OWORD *)__int128 v11 = v2;
  __int128 v8 = v2;
  __int128 v9 = v2;
  __int128 v6 = v2;
  __int128 v7 = v2;
  *(void *)&void v5[2] = 0x100000002LL;
  *(_DWORD *)&v5[18] = *(_DWORD *)a2;
  *(void *)&v5[10] = *(void *)(a2 + 8);
  uint64_t v3 = sub_1000BF55C(*(_DWORD *)(a1 + 112));
  return sub_100089474(v3, 2u, 1u, (uint64_t)v5) == 0;
}

BOOL sub_1000C5234(BOOL result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t v1 = sub_1000BF55C(*(_DWORD *)(result + 112));
    return sub_100089124(v1, 2u, 2u, 0LL) == 0;
  }

  return result;
}

uint64_t sub_1000C5274(uint64_t result, char *a2, unsigned int a3)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_9;
  }

  if (*(unsigned __int8 *)(result + 324) >= 2u)
  {
LABEL_9:
    __break(0x550Au);
    return result;
  }

  if (!*(_BYTE *)(result + 324)) {
    return 0LL;
  }
  double v5 = *(const char **)(result + 328);
  if (strlen(v5) >= a3) {
    return 0LL;
  }
  strlcpy(a2, v5, a3);
  return 1LL;
}

BOOL sub_1000C52F0(uint64_t a1, char *__s)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
LABEL_6:
    __break(0x5500u);
  }

  *(_BYTE *)(a1 + 324) = 0;
  *(void *)&__int128 v3 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v3 + 1) = 0xAAAAAAAAAAAAAAAALL;
  __int16 v7 = -21846;
  *(_OWORD *)&v9[6] = v3;
  *(void *)&v15[13] = 0xAAAAAAAAAAAAAAAALL;
  __int128 v14 = v3;
  *(_OWORD *)__int128 v15 = v3;
  __int128 v12 = v3;
  __int128 v13 = v3;
  __int128 v10 = v3;
  __int128 v11 = v3;
  uint64_t v8 = 0x200000002LL;
  *(void *)__int128 v9 = __s;
  int v4 = strlen(__s);
  if (v4 == -1) {
    goto LABEL_6;
  }
  *(_DWORD *)&v9[8] = v4 + 1;
  uint64_t v5 = sub_1000BF55C(*(_DWORD *)(a1 + 112));
  return sub_100089474(v5, 2u, 2u, (uint64_t)&v7) == 0;
}

BOOL sub_1000C53B4(BOOL result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t v1 = sub_1000BF55C(*(_DWORD *)(result + 112));
    return sub_100089124(v1, 2u, 3u, 0LL) == 0;
  }

  return result;
}

BOOL sub_1000C53F4(BOOL result, _DWORD *a2)
{
  if (result && (result & 7) == 0)
  {
    unsigned int v2 = *(unsigned __int8 *)(result + 340);
    if (v2 < 2)
    {
      if (!*(_BYTE *)(result + 340)) {
        return v2 != 0;
      }
      *a2 = *(_DWORD *)(result + 342);
      unsigned int v2 = *(unsigned __int8 *)(result + 340);
      if (v2 <= 1) {
        return v2 != 0;
      }
    }

    __break(0x550Au);
  }

  __break(0x5516u);
  return result;
}

BOOL sub_1000C543C(uint64_t a1, unsigned __int16 *a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_8;
  }
  *(_BYTE *)(a1 + 340) = 0;
  *(void *)&__int128 v2 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v2 + 1) = 0xAAAAAAAAAAAAAAAALL;
  *(void *)&v12[13] = 0xAAAAAAAAAAAAAAAALL;
  void v11[6] = v2;
  *(_OWORD *)__int128 v12 = v2;
  v11[4] = v2;
  v11[5] = v2;
  _DWORD v11[2] = v2;
  v11[3] = v2;
  v11[0] = v2;
  v11[1] = v2;
  *(void *)((char *)v11 + 2) = 0x300000002LL;
  uint64_t v3 = 3600000LL * *a2;
  int v4 = 60000 * *((unsigned __int8 *)a2 + 2);
  BOOL v5 = __OFADD__((_DWORD)v3, v4);
  int v6 = v3 + v4;
  if (v5 || (v7 = 1000 * *((unsigned __int8 *)a2 + 3), BOOL v5 = __OFADD__(v6, v7), v8 = v6 + v7, v5))
  {
    __break(0x5500u);
LABEL_8:
    __break(0x5516u);
LABEL_9:
    __break(0x550Cu);
  }

  *(_DWORD *)((char *)v11 + 10) = v8;
  uint64_t v9 = sub_1000BF55C(*(_DWORD *)(a1 + 112));
  return sub_100089474(v9, 2u, 3u, (uint64_t)v11) == 0;
}

BOOL sub_1000C5528(BOOL result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t v1 = sub_1000BF55C(*(_DWORD *)(result + 112));
    return sub_100089124(v1, 2u, 4u, 0LL) == 0;
  }

  return result;
}

BOOL sub_1000C5568(BOOL result, _DWORD *a2)
{
  if (result && (result & 7) == 0)
  {
    unsigned int v2 = *(unsigned __int8 *)(result + 346);
    if (v2 < 2)
    {
      if (!*(_BYTE *)(result + 346)) {
        return v2 != 0;
      }
      *a2 = *(_DWORD *)(result + 348);
      unsigned int v2 = *(unsigned __int8 *)(result + 346);
      if (v2 <= 1) {
        return v2 != 0;
      }
    }

    __break(0x550Au);
  }

  __break(0x5516u);
  return result;
}

BOOL sub_1000C55AC(uint64_t a1, unsigned __int16 *a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_8;
  }
  *(_BYTE *)(a1 + 346) = 0;
  *(void *)&__int128 v2 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v2 + 1) = 0xAAAAAAAAAAAAAAAALL;
  *(void *)&v12[13] = 0xAAAAAAAAAAAAAAAALL;
  void v11[6] = v2;
  *(_OWORD *)__int128 v12 = v2;
  v11[4] = v2;
  v11[5] = v2;
  _DWORD v11[2] = v2;
  v11[3] = v2;
  v11[0] = v2;
  v11[1] = v2;
  *(void *)((char *)v11 + 2) = 0x400000002LL;
  uint64_t v3 = 3600000LL * *a2;
  int v4 = 60000 * *((unsigned __int8 *)a2 + 2);
  BOOL v5 = __OFADD__((_DWORD)v3, v4);
  int v6 = v3 + v4;
  if (v5 || (v7 = 1000 * *((unsigned __int8 *)a2 + 3), BOOL v5 = __OFADD__(v6, v7), v8 = v6 + v7, v5))
  {
    __break(0x5500u);
LABEL_8:
    __break(0x5516u);
LABEL_9:
    __break(0x550Cu);
  }

  *(_DWORD *)((char *)v11 + 10) = v8;
  uint64_t v9 = sub_1000BF55C(*(_DWORD *)(a1 + 112));
  return sub_100089474(v9, 2u, 4u, (uint64_t)v11) == 0;
}

BOOL sub_1000C5698(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  *(void *)&v6[13] = 0xAAAAAAAAAAAAAAAALL;
  *(void *)&__int128 v2 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v2 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v5[6] = v2;
  *(_OWORD *)int v6 = v2;
  v5[4] = v2;
  v5[5] = v2;
  void v5[2] = v2;
  void v5[3] = v2;
  v5[0] = v2;
  v5[1] = v2;
  *(void *)((char *)v5 + 2) = 0x500000002LL;
  WORD5(v5[0]) = *(_WORD *)a2;
  HIDWORD(v5[0]) = *(_DWORD *)(a2 + 4);
  uint64_t v3 = sub_1000BF55C(*(_DWORD *)(a1 + 112));
  return sub_100089474(v3, 2u, 5u, (uint64_t)v5) == 0;
}

void sub_1000C5744(uint64_t a1, int a2, int a3, uint64_t a4, int a5)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_142;
  }
  if (a2)
  {
    if (a2 != 14 || a3 || a5 != 152) {
      return;
    }
    if (a4 && (a4 & 7) == 0 && ((a4 + 12) & 3) == 0)
    {
      unsigned int v6 = *(_DWORD *)(a4 + 12);
      if (v6 > 0xFF) {
        goto LABEL_143;
      }
      switch(v6)
      {
        case 0u:
          if (((a4 + 16) & 7) != 0) {
            goto LABEL_142;
          }
          if (!*(_BYTE *)(a4 + 16))
          {
            __int128 v15 = *(void (**)(void))(*(void *)a1 + 32LL);
            goto LABEL_141;
          }

          unsigned int v17 = *(_DWORD *)(a1 + 116);
          if (v17 > 7) {
            goto LABEL_143;
          }
          if (v17 == 2)
          {
            if (*(_BYTE *)(a4 + 17) != 3) {
              goto LABEL_111;
            }
            int v33 = *(_DWORD *)(a1 + 352);
            BOOL v19 = __CFADD__(v33, 1);
            unsigned int v34 = v33 + 1;
            if (v19) {
              goto LABEL_144;
            }
            *(_DWORD *)(a1 + 352) = v34;
            if (v34 > 4) {
              goto LABEL_111;
            }
            sub_1000C4190(a1);
          }

          else
          {
            if (v17 != 1 || *(_BYTE *)(a4 + 17) != 1) {
              goto LABEL_111;
            }
            int v18 = *(_DWORD *)(a1 + 352);
            BOOL v19 = __CFADD__(v18, 1);
            unsigned int v20 = v18 + 1;
            if (v19) {
              goto LABEL_144;
            }
            *(_DWORD *)(a1 + 352) = v20;
            if (v20 > 4)
            {
LABEL_111:
              __int128 v15 = *(void (**)(void))(*(void *)a1 + 32LL);
              goto LABEL_141;
            }

LABEL_143:
  __break(0x550Au);
LABEL_144:
  __break(0x5500u);
LABEL_145:
  __break(0x5513u);
}

void sub_1000C6084(uint64_t a1, int a2, int a3, uint64_t a4, int a5)
{
  else {
    sub_1000C5744(a1 - 96, a2, a3, a4, a5);
  }
}

void sub_1000C609C(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

void sub_1000C60B0(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

uint64_t sub_1000C60C4()
{
  if (qword_10011C750 != -1) {
    dispatch_once(&qword_10011C750, &stru_1001093E8);
  }
  return qword_10011C748;
}

void sub_1000C6104(id a1)
{
  uint64_t v1 = (uint64_t)operator new(0xE0uLL);
  if ((v1 & 0xF) != 0 || (v1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    qword_10011C748 = sub_1000C613C(v1);
  }
}

uint64_t sub_1000C613C(uint64_t result)
{
  if (!result) {
    goto LABEL_8;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_8;
  }
  uint64_t result = sub_10001B6E4(result);
  *(void *)uint64_t v1 = off_100109590;
  if (((v1 + 96) & 7) != 0) {
    goto LABEL_8;
  }
  *(void *)uint64_t v1 = off_100109418;
  *(void *)(v1 + 96) = off_100109510;
  *(void *)(v1 + 104) = 0LL;
  uint64_t result = v1 + 128;
  if (((v1 + 128) & 7) != 0
    || (sub_100009E64((void *)result),
        *(_BYTE *)(v1 + 152) = 0,
        pthread_mutex_init((pthread_mutex_t *)(v1 + 160), 0LL),
        (uint64_t result = sub_10005BFC8()) == 0)
    || (result & 7) != 0)
  {
LABEL_8:
    __break(0x5516u);
  }

  else
  {
    sub_10005C434((uint64_t *)result, v1 + 96, 1u, 0LL);
    return v1;
  }

  return result;
}

uint64_t sub_1000C61EC(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    if ((result & 7) == 0)
    {
      *(void *)uint64_t result = off_100109418;
      *(void *)(result + 96) = off_100109510;
      char v2 = result + 96;
      uint64_t result = sub_10005BFC8();
      if (result)
      {
        if ((result & 7) == 0)
        {
          sub_10005C5F4((uint64_t *)result, v1 + 96, 1u);
          pthread_mutex_destroy((pthread_mutex_t *)(v1 + 160));
          uint64_t result = v1 + 128;
          if (((v1 + 128) & 7) == 0)
          {
            uint64_t result = sub_10004D2B4(result);
            if ((v2 & 7) == 0) {
              return sub_1000BD9A8(v1);
            }
          }
        }
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000C6270(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000C61EC(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C6284(uint64_t a1)
{
  uint64_t result = a1 - 96;
  if ((result & 7) == 0) {
    return sub_1000C61EC(result);
  }
  __break(0x5516u);
  return result;
}

void sub_1000C6298(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t v1 = (void *)sub_1000C61EC(a1);
    operator delete(v1);
  }

void sub_1000C62BC(uint64_t a1)
{
}

uint64_t sub_1000C62C4(uint64_t result, unint64_t a2)
{
  if (!result
    || (uint64_t v2 = result, (result & 7) != 0)
    || (unint64_t v3 = a2, pthread_mutex_lock((pthread_mutex_t *)(result + 32)), result = v2 + 8, ((v2 + 8) & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    sub_10001B8DC(result, &v3);
    pthread_mutex_unlock((pthread_mutex_t *)(v2 + 32));
    return 1LL;
  }

  return result;
}

uint64_t sub_1000C6328(uint64_t result, uint64_t a2)
{
  if (!result
    || (uint64_t v2 = result, (result & 7) != 0)
    || (uint64_t v7 = a2,
        unint64_t v3 = (pthread_mutex_t *)(result + 32),
        uint64_t result = pthread_mutex_lock((pthread_mutex_t *)(result + 32)),
        int v4 = (uint64_t *)(v2 + 8),
        ((v2 + 8) & 7) != 0)
    || (result = sub_10001BBF8(v2 + 8, &v7), uint64_t v5 = v2 + 16, (v5 & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t v6 = result;
    if (v5 != result) {
      sub_1000095C0(v4, result);
    }
    pthread_mutex_unlock(v3);
    return v5 != v6;
  }

  return result;
}

uint64_t sub_1000C63C4(uint64_t result, uint64_t a2)
{
  if (!result || (uint64_t v2 = (_BYTE *)result, (result & 7) != 0) || ((result + 128) & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    unsigned int v12 = 2;
    sub_1000C64F0(result + 128, &v12);
    *(_BYTE *)(v4 + 16) = -1;
    unsigned int v12 = 2;
    sub_1000C64F0((uint64_t)(v2 + 128), &v12);
    *(_BYTE *)(v5 + 17) = -1;
    unsigned int v12 = 2;
    sub_1000C64F0((uint64_t)(v2 + 128), &v12);
    *(_DWORD *)(v6 + 20) = 1;
    unsigned int v12 = 2;
    sub_1000C64F0((uint64_t)(v2 + 128), &v12);
    *(_BYTE *)(v7 + 36) = 0;
    unsigned int v12 = 2;
    sub_1000C64F0((uint64_t)(v2 + 128), &v12);
    *(_DWORD *)(v8 + 12) = 0;
    unsigned int v12 = 2;
    sub_1000C64F0((uint64_t)(v2 + 128), &v12);
    *(_DWORD *)(v9 + _Block_object_dispose((const void *)(v1 - 120), 8) = 3;
    unsigned int v12 = 2;
    sub_1000C64F0((uint64_t)(v2 + 128), &v12);
    *__int128 v10 = 2;
    unsigned int v12 = 2;
    sub_1000C64F0((uint64_t)(v2 + 128), &v12);
    *(_DWORD *)(v11 + 4) = 0;
    v2[152] = 1;
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)v2 + 32LL))(v2, 720897LL, 2LL, a2);
    return 1LL;
  }

  return result;
}

void sub_1000C64F0(uint64_t a1, unsigned int *a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_11;
  }
  uint64_t v8 = 0xAAAAAAAAAAAAAAAALL;
  uint64_t v4 = (uint64_t *)sub_1000C7418(a1, &v8, a2);
  uint64_t v5 = (void *)*v4;
  if (*v4)
  {
  }

  else
  {
    uint64_t v6 = v4;
    memset(v7, 170, sizeof(v7));
    sub_1000C7528((_DWORD *)a1, a2, (uint64_t)v7);
    sub_100008FEC(a1, v8, v6, (void *)v7[0]);
    uint64_t v5 = v7[0];
    v7[0] = 0LL;
    sub_10004D814(v7, 0LL);
    if (!v5) {
      goto LABEL_11;
    }
  }

  if ((v5 & 7) != 0 || (((_BYTE)v5 + 28) & 3) != 0) {
LABEL_11:
  }
    __break(0x5516u);
}

void sub_1000C65D0(_BYTE *a1, uint64_t a2, unsigned int a3, unsigned int a4)
{
  unsigned int v15 = a3;
  if (a1 && (a1 & 7) == 0 && ((unint64_t)(a1 + 128) & 7) == 0)
  {
    sub_1000C64F0((uint64_t)(a1 + 128), &v15);
    *(_BYTE *)(v6 + 16) = -1;
    sub_1000C64F0((uint64_t)(a1 + 128), &v15);
    *(_BYTE *)(v7 + 17) = -1;
    sub_1000C64F0((uint64_t)(a1 + 128), &v15);
    *(_DWORD *)(v8 + 20) = 0;
    sub_1000C64F0((uint64_t)(a1 + 128), &v15);
    *(_BYTE *)(v9 + 36) = 0;
    sub_1000C64F0((uint64_t)(a1 + 128), &v15);
    *(_DWORD *)(v10 + 12) = 0;
    if (a4 < 0x10)
    {
      sub_1000C64F0((uint64_t)(a1 + 128), &v15);
      *(_DWORD *)(v11 + _Block_object_dispose((const void *)(v1 - 120), 8) = 2 * (a4 - 3 < 2);
      unsigned int v12 = v15;
      if (v15 <= 0xFF)
      {
        sub_1000C64F0((uint64_t)(a1 + 128), &v15);
        *__int128 v13 = v12;
        sub_1000C64F0((uint64_t)(a1 + 128), &v15);
        *(_DWORD *)(v14 + 4) = a4;
        a1[152] = 1;
        if (v15 <= 0xFF)
        {
          (*(void (**)(_BYTE *, uint64_t))(*(void *)a1 + 32LL))(a1, 720897LL);
          return;
        }
      }
    }

    __break(0x550Au);
  }

  __break(0x5516u);
}

uint64_t sub_1000C670C(uint64_t result, uint64_t a2)
{
  if (!result
    || (uint64_t v2 = result, (result & 7) != 0)
    || (result += 128LL, ((v2 + 128) & 7) != 0)
    || (unsigned int v4 = 2, result = sub_1000C75CC(result, &v4), (((_BYTE)v2 - 112) & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    *(_BYTE *)(v2 + 152) = *(void *)(v2 + 144) != 0LL;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)v2 + 32LL))(v2, 720901LL, 2LL, a2);
    return 1LL;
  }

  return result;
}

uint64_t sub_1000C67A0(uint64_t result, uint64_t a2, unsigned int a3)
{
  unsigned int v4 = a3;
  if (!result
    || (uint64_t v3 = result, (result & 7) != 0)
    || (result += 128LL, ((v3 + 128) & 7) != 0)
    || (uint64_t result = sub_1000C75CC(result, &v4), (((_BYTE)v3 - 112) & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    *(_BYTE *)(v3 + 152) = *(void *)(v3 + 144) != 0LL;
    if (v4 < 0x100)
    {
      (*(void (**)(uint64_t, uint64_t))(*(void *)v3 + 32LL))(v3, 720901LL);
      return 1LL;
    }
  }

  __break(0x550Au);
  return result;
}

uint64_t sub_1000C683C(uint64_t result, uint64_t a2)
{
  if (!result || (uint64_t v2 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    (*(void (**)(uint64_t))(*(void *)result + 152LL))(result);
    (*(void (**)(uint64_t, uint64_t, uint64_t, void))(*(void *)v2 + 32LL))(v2, 720898LL, a2, 0LL);
    return 1LL;
  }

  return result;
}

uint64_t sub_1000C68A0(uint64_t result, uint64_t a2)
{
  if (!result) {
    goto LABEL_11;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_11;
  }
  result += 128LL;
  if (((v2 + 128) & 7) != 0) {
    goto LABEL_11;
  }
  unsigned int v5 = 2;
  sub_1000C64F0(result, &v5);
  if (!*(_DWORD *)(v4 + 12)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)v2 + 152LL))(v2, a2);
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, void))(*(void *)v2 + 32LL))(v2, 720899LL, a2, 0LL);
  uint64_t result = sub_100036FF0();
  if (!result || (result & 7) != 0)
  {
LABEL_11:
    __break(0x5516u);
  }

  else
  {
    return 1LL;
  }

  return result;
}

uint64_t sub_1000C6968(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, void))(*(void *)result + 32LL))(result, 720900LL, a2, 0LL);
    return 1LL;
  }

  return result;
}

uint64_t sub_1000C69A8(uint64_t result, uint64_t a2, unsigned int a3)
{
  if (!result || (uint64_t v3 = (unsigned int *)result, (result & 7) != 0))
  {
LABEL_8:
    __break(0x5516u);
    goto LABEL_9;
  }

  if (a3 < 0x100)
  {
    *(_DWORD *)(result + 112) = a3;
    char v6 = result + 112;
    *(void *)(result + 120) = a2;
    if (a3 == 255)
    {
LABEL_7:
      (*(void (**)(unsigned int *, uint64_t, void, uint64_t))(*(void *)v3 + 32LL))(v3, 720902LL, a3, a2);
      return 1LL;
    }

    char v7 = result + 0x80;
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 160LL))(result);
    if (!(v7 & 7 | (unint64_t)(v6 & 3)))
    {
      int v8 = result;
      sub_1000C64F0((uint64_t)(v3 + 32), v3 + 28);
      *(_DWORD *)(v9 + 20) = v8;
      goto LABEL_7;
    }

    goto LABEL_8;
  }

uint64_t sub_1000C6A68(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_13;
  }
  unsigned int v2 = *(_DWORD *)(result + 112);
  if (v2 >= 0x100)
  {
LABEL_14:
    __break(0x550Au);
    return result;
  }

  if (v2 != 2)
  {
    if (v2 != 1) {
      return 0LL;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)result + 48LL))(result, 720911LL, a2);
    return 1LL;
  }

  uint64_t result = sub_1000B6CE0();
  if (!result || (result & 7) != 0)
  {
LABEL_13:
    __break(0x5516u);
    goto LABEL_14;
  }

  uint64_t v4 = sub_10008E550(result, a2, 0);
  if (!v4) {
    sub_1000CEAEC( 0,  4,  "%s:%d NULL connectionHandle\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/iSL/Source/IAP/TMicrophoneShared.cpp",  238);
  }
  return sub_10008BEC4(200, v4) == 0;
}

uint64_t sub_1000C6B3C(uint64_t result)
{
  if (!result || (result & 7) != 0 || ((result + 128) & 7) != 0 || ((result + 144) & 7) != 0)
  {
LABEL_10:
    __break(0x5516u);
    return result;
  }

  if (*(void *)(result + 144))
  {
    if (((result + 112) & 3) == 0)
    {
      sub_1000C64F0(result + 128, (unsigned int *)(result + 112));
      return *(_BYTE *)(v1 + 12) & 1;
    }

    goto LABEL_10;
  }

  return 0LL;
}

uint64_t sub_1000C6BA0(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0 || ((result + 128) & 7) != 0 || ((result + 144) & 7) != 0) {
    goto LABEL_11;
  }
  if (!*(void *)(result + 144) || *(void *)(result + 120) != a2) {
    return 0LL;
  }
  if (((result + 112) & 3) != 0)
  {
LABEL_11:
    __break(0x5516u);
  }

  else
  {
    sub_1000C64F0(result + 128, (unsigned int *)(result + 112));
    return (*(unsigned __int8 *)(v2 + 12) >> 4) & 1;
  }

  return result;
}

uint64_t sub_1000C6C10(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0 || ((result + 128) & 7) != 0 || ((result + 144) & 7) != 0) {
    goto LABEL_11;
  }
  if (!*(void *)(result + 144) || *(void *)(result + 120) != a2) {
    return 0LL;
  }
  if (((result + 112) & 3) != 0)
  {
LABEL_11:
    __break(0x5516u);
  }

  else
  {
    sub_1000C64F0(result + 128, (unsigned int *)(result + 112));
    return (*(unsigned __int8 *)(v2 + 12) >> 5) & 1;
  }

  return result;
}

uint64_t sub_1000C6C80(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0 || (((_BYTE)result + 0x80) & 7) != 0 || ((result + 144) & 7) != 0)
  {
LABEL_13:
    __break(0x5516u);
    goto LABEL_14;
  }

  if (*(void *)(result + 144) && *(void *)(result + 120) == a2)
  {
    unsigned int v3 = *(_DWORD *)(result + 112);
    if (v3 >= 0x100)
    {
LABEL_14:
      __break(0x550Au);
      return result;
    }

    if (v3 == 2)
    {
      uint64_t result = sub_1000B6CE0();
      if (result && (result & 7) == 0) {
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)result + 48LL))( result,  1LL,  3LL,  a2,  0LL);
      }
      goto LABEL_13;
    }
  }

  return result;
}

uint64_t sub_1000C6D24(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0 || (((_BYTE)result + 0x80) & 7) != 0 || ((result + 144) & 7) != 0)
  {
LABEL_13:
    __break(0x5516u);
    goto LABEL_14;
  }

  if (*(void *)(result + 144) && *(void *)(result + 120) == a2)
  {
    unsigned int v3 = *(_DWORD *)(result + 112);
    if (v3 >= 0x100)
    {
LABEL_14:
      __break(0x550Au);
      return result;
    }

    if (v3 == 2)
    {
      uint64_t result = sub_1000B6CE0();
      if (result && (result & 7) == 0) {
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)result + 48LL))( result,  1LL,  4LL,  a2,  0LL);
      }
      goto LABEL_13;
    }
  }

  return result;
}

uint64_t sub_1000C6DC8(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0 || (((_BYTE)result + 0x80) & 7) != 0 || ((result + 144) & 7) != 0)
  {
LABEL_13:
    __break(0x5516u);
    goto LABEL_14;
  }

  if (*(void *)(result + 144) && *(void *)(result + 120) == a2)
  {
    unsigned int v3 = *(_DWORD *)(result + 112);
    if (v3 >= 0x100)
    {
LABEL_14:
      __break(0x550Au);
      return result;
    }

    if (v3 == 2)
    {
      uint64_t result = sub_1000B6CE0();
      if (result && (result & 7) == 0) {
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)result + 48LL))( result,  1LL,  1LL,  a2,  0LL);
      }
      goto LABEL_13;
    }
  }

  return result;
}

uint64_t sub_1000C6E6C(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0 || (((_BYTE)result + 0x80) & 7) != 0 || ((result + 144) & 7) != 0)
  {
LABEL_13:
    __break(0x5516u);
    goto LABEL_14;
  }

  if (*(void *)(result + 144) && *(void *)(result + 120) == a2)
  {
    unsigned int v3 = *(_DWORD *)(result + 112);
    if (v3 >= 0x100)
    {
LABEL_14:
      __break(0x550Au);
      return result;
    }

    if (v3 == 2)
    {
      uint64_t result = sub_1000B6CE0();
      if (result && (result & 7) == 0) {
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)result + 48LL))( result,  1LL,  2LL,  a2,  0LL);
      }
      goto LABEL_13;
    }
  }

  return result;
}

uint64_t sub_1000C6F10(uint64_t result)
{
  if (!result || (result & 7) != 0) {
    __break(0x5516u);
  }
  return result;
}

uint64_t sub_1000C6F24(uint64_t result)
{
  if ((((_BYTE)result - 96) & 7) != 0) {
    __break(0x5516u);
  }
  return result;
}

void sub_1000C6F38(uint64_t a1, int a2, int a3, void *a4, int a5)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_44;
  }
  if ((a2 + 32) >= 0x40)
  {
LABEL_45:
    __break(0x550Au);
    return;
  }

  if (a2 != 1 || a3 || a5 != 16) {
    return;
  }
  if (!a4 || (a4 & 7) != 0 || ((unint64_t)(a4 + 1) & 7) != 0)
  {
LABEL_44:
    __break(0x5516u);
    goto LABEL_45;
  }

  int v7 = *((unsigned __int16 *)a4 + 4);
  if (v7 == 10)
  {
    if ((((unint64_t)a4 + 12) & 3) == 0)
    {
      switch(*((_BYTE *)a4 + 12))
      {
        case 1:
          pthread_mutex_lock((pthread_mutex_t *)(a1 + 160));
          if (((a1 + 128) & 7) != 0) {
            goto LABEL_44;
          }
          int v8 = *((unsigned __int8 *)a4 + 13);
          unsigned int v39 = 2;
          sub_1000C64F0(a1 + 128, &v39);
          *(_DWORD *)(v9 + 20) = v8;
          pthread_mutex_unlock((pthread_mutex_t *)(a1 + 160));
          (*(void (**)(uint64_t, uint64_t, void))(*(void *)a1 + 48LL))(a1, 720912LL, *a4);
          break;
        case 2:
          pthread_mutex_lock((pthread_mutex_t *)(a1 + 160));
          if (((a1 + 128) & 7) != 0) {
            goto LABEL_44;
          }
          char v22 = *((_BYTE *)a4 + 13);
          unsigned int v39 = 2;
          sub_1000C64F0(a1 + 128, &v39);
          *(_BYTE *)(v23 + 16) = v22;
          pthread_mutex_unlock((pthread_mutex_t *)(a1 + 160));
          uint64_t v12 = *a4;
          __int128 v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 48LL);
          uint64_t v14 = 720913LL;
          goto LABEL_23;
        case 3:
          pthread_mutex_lock((pthread_mutex_t *)(a1 + 160));
          if (((a1 + 128) & 7) != 0) {
            goto LABEL_44;
          }
          char v24 = *((_BYTE *)a4 + 13);
          unsigned int v39 = 2;
          sub_1000C64F0(a1 + 128, &v39);
          *(_BYTE *)(v25 + 17) = v24;
          pthread_mutex_unlock((pthread_mutex_t *)(a1 + 160));
          uint64_t v12 = *a4;
          __int128 v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 48LL);
          uint64_t v14 = 720914LL;
          goto LABEL_23;
        case 5:
          pthread_mutex_lock((pthread_mutex_t *)(a1 + 160));
          if (((a1 + 128) & 7) != 0) {
            goto LABEL_44;
          }
          char v26 = *((_BYTE *)a4 + 13);
          unsigned int v39 = 2;
          sub_1000C64F0(a1 + 128, &v39);
          *(_BYTE *)(v27 + 1_Block_object_dispose((const void *)(v1 - 120), 8) = v26;
          pthread_mutex_unlock((pthread_mutex_t *)(a1 + 160));
          uint64_t v12 = *a4;
          __int128 v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 48LL);
          uint64_t v14 = 720915LL;
          goto LABEL_23;
        default:
          return;
      }

      return;
    }

    goto LABEL_44;
  }

  if (v7 == 8)
  {
    pthread_mutex_lock((pthread_mutex_t *)(a1 + 160));
    if ((((_BYTE)a4 + 12) & 3) == 0 && ((a1 + 128) & 7) == 0)
    {
      int v10 = *((_DWORD *)a4 + 3);
      unsigned int v39 = 2;
      sub_1000C64F0(a1 + 128, &v39);
      *(_DWORD *)(v11 + 12) = v10;
      pthread_mutex_unlock((pthread_mutex_t *)(a1 + 160));
      sub_1000CEAEC( 0,  4,  "%s:%d Sending device caps\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/iSL/Source/IAP/TMicrophoneShared.cpp",  456);
      uint64_t v12 = *a4;
      __int128 v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 48LL);
      uint64_t v14 = 720911LL;
LABEL_23:
      v13(a1, v14, v12);
      return;
    }

    goto LABEL_44;
  }

  if (v7 != 4) {
    return;
  }
  if ((((_BYTE)a4 + 12) & 3) != 0) {
    goto LABEL_44;
  }
  if (*((_BYTE *)a4 + 13))
  {
    LOBYTE(v39) = *((_BYTE *)a4 + 13);
    BYTE1(v39) = *((_BYTE *)a4 + 12);
    (*(void (**)(uint64_t, uint64_t, unsigned int *, void))(*(void *)a1 + 32LL))(a1, 720904LL, &v39, *a4);
    return;
  }

  uint64_t v15 = 720912LL;
  LOBYTE(v39) = 0;
  BYTE1(v39) = *((_BYTE *)a4 + 12);
  (*(void (**)(uint64_t, uint64_t, unsigned int *, void))(*(void *)a1 + 32LL))(a1, 720903LL, &v39, *a4);
  if (*((_BYTE *)a4 + 12) == 11)
  {
    if (((a1 + 128) & 7) == 0)
    {
      unsigned int v39 = 2;
      sub_1000C64F0(a1 + 128, &v39);
      int v17 = *(_DWORD *)(v16 + 32);
      if ((v17 & 2) == 0)
      {
        if ((v17 & 4) != 0)
        {
          int v18 = (pthread_mutex_t *)(a1 + 160);
          pthread_mutex_lock((pthread_mutex_t *)(a1 + 160));
          unsigned int v39 = 2;
          sub_1000C64F0(a1 + 128, &v39);
          char v32 = *(_BYTE *)(v31 + 24);
          unsigned int v38 = 2;
          sub_1000C64F0(a1 + 128, &v38);
          *(_BYTE *)(v33 + 16) = v32;
          uint64_t v15 = 720913LL;
        }

        else if ((v17 & 8) != 0)
        {
          int v18 = (pthread_mutex_t *)(a1 + 160);
          pthread_mutex_lock((pthread_mutex_t *)(a1 + 160));
          unsigned int v39 = 2;
          sub_1000C64F0(a1 + 128, &v39);
          char v35 = *(_BYTE *)(v34 + 25);
          unsigned int v38 = 2;
          sub_1000C64F0(a1 + 128, &v38);
          *(_BYTE *)(v36 + 17) = v35;
          uint64_t v15 = 720914LL;
        }

        else
        {
          if ((v17 & 0x20) == 0)
          {
LABEL_43:
            unsigned int v39 = 2;
            sub_1000C64F0(a1 + 128, &v39);
            *(_DWORD *)(v37 + 32) = v17;
            return;
          }

          int v18 = (pthread_mutex_t *)(a1 + 160);
          pthread_mutex_lock((pthread_mutex_t *)(a1 + 160));
          unsigned int v39 = 2;
          sub_1000C64F0(a1 + 128, &v39);
          char v20 = *(_BYTE *)(v19 + 26);
          unsigned int v38 = 2;
          sub_1000C64F0(a1 + 128, &v38);
          *(_BYTE *)(v21 + 1_Block_object_dispose((const void *)(v1 - 120), 8) = v20;
          uint64_t v15 = 720915LL;
        }

void sub_1000C73D8(uint64_t a1, int a2, int a3, void *a4, int a5)
{
  else {
    sub_1000C6F38(a1 - 96, a2, a3, a4, a5);
  }
}

void sub_1000C73F0(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

void sub_1000C7404(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

uint64_t sub_1000C7418(uint64_t result, uint64_t *a2, unsigned int *a3)
{
  if (result)
  {
    uint64_t v5 = result;
    if ((result & 7) == 0)
    {
      uint64_t v4 = a2;
      uint64_t result = sub_100008C24(result);
      uint64_t v7 = v5 + 8;
      if (((v5 + 8) & 7) == 0)
      {
        if (!result)
        {
          uint64_t result = v5 + 8;
          goto LABEL_24;
        }

        if ((((_BYTE)v5 + 16) & 7) == 0 && (result & 7) == 0)
        {
          unsigned int v8 = *a3;
          while (((result + 28) & 3) == 0)
          {
            if (v8 >= 0x100 || (unsigned int v9 = *(_DWORD *)(result + 28), v9 > 0xFF))
            {
              __break(0x550Au);
              return result;
            }

            if (v8 >= v9)
            {
              if (v9 >= v8)
              {
                *uint64_t v4 = result;
                if ((v7 & 7) == 0) {
                  return v7;
                }
                break;
              }

              unsigned int v3 = (uint64_t *)(result + 8);
              if (((result + 8) & 7) != 0) {
                break;
              }
              uint64_t v10 = *v3;
              if (!*v3) {
                goto LABEL_23;
              }
              result += 8LL;
            }

            else
            {
              uint64_t v10 = *(void *)result;
              if (!*(void *)result)
              {
                uint64_t v7 = result;
                goto LABEL_24;
              }
            }

            if ((v10 & 7) != 0) {
              break;
            }
            uint64_t v7 = result;
            uint64_t result = v10;
          }
        }
      }
    }
  }

  __break(0x5516u);
LABEL_23:
  uint64_t v7 = result;
  uint64_t result = (uint64_t)v3;
LABEL_24:
  *uint64_t v4 = v7;
  return result;
}

_DWORD *sub_1000C7528@<X0>(_DWORD *result@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  if (!result {
    || (result & 7) != 0
  }
    || (uint64_t v4 = (char *)(result + 2), ((unint64_t)(result + 2) & 7) != 0)
    || (*(void *)(a3 + 16) = 0xAAAAAAAAAAAAAAAALL,
        uint64_t result = operator new(0x48uLL),
        *(void *)a3 = result,
        *(void *)(a3 + _Block_object_dispose((const void *)(v1 - 120), 8) = v4,
        (result & 7) != 0)
    || (((_BYTE)result + 28) & 3) != 0)
  {
LABEL_9:
    __break(0x5516u);
    goto LABEL_10;
  }

  if (*a2 < 0x100u)
  {
    result[7] = *a2;
    *(_BYTE *)(a3 + 16) = 1;
    if (((unint64_t)(result + 8) & 3) == 0)
    {
      *((void *)result + _Block_object_dispose((const void *)(v1 - 120), 8) = 0LL;
      *((_OWORD *)result + 2) = 0u;
      *((_OWORD *)result + 3) = 0u;
      *(_BYTE *)(a3 + 17) = 1;
      return result;
    }

    goto LABEL_9;
  }

uint64_t sub_1000C75CC(uint64_t result, unsigned int *a2)
{
  if (!result
    || (uint64_t v2 = (uint64_t *)result, (result & 7) != 0)
    || (uint64_t result = sub_1000C762C(result, a2), ((unint64_t)(v2 + 1) & 7) != 0))
  {
    __break(0x5516u);
  }

  else if (v2 + 1 == (uint64_t *)result)
  {
    return 0LL;
  }

  else
  {
    sub_10004D578(v2, result);
    return 1LL;
  }

  return result;
}

uint64_t sub_1000C762C(uint64_t result, unsigned int *a2)
{
  if (!result) {
    goto LABEL_11;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_11;
  }
  uint64_t v5 = 0xAAAAAAAAAAAAAAAALL;
  uint64_t result = sub_100008C24(result);
  uint64_t v4 = v2 + 8;
  if (((v2 + 8) & 7) != 0) {
    goto LABEL_11;
  }
  uint64_t result = sub_1000C76E8(v2, a2, result, v2 + 8);
  uint64_t v5 = result;
  if (v4 == result) {
    return v4;
  }
  if ((((_BYTE)v2 + 16) & 7) != 0)
  {
LABEL_11:
    __break(0x5516u);
  }

  else
  {
    uint64_t result = (uint64_t)sub_10004D548(&v5);
    if (*a2 < 0x100 && *(_DWORD *)result <= 0xFFu)
    {
      if (*a2 >= *(_DWORD *)result) {
        return v5;
      }
      return v4;
    }
  }

  __break(0x550Au);
  return result;
}

uint64_t sub_1000C76E8(uint64_t result, unsigned int *a2, uint64_t a3, uint64_t a4)
{
  if (!result || (result & 7) != 0)
  {
LABEL_17:
    __break(0x5516u);
    return a3;
  }

  if (a3)
  {
    if ((((_BYTE)result + 16) & 7) == 0 && (a3 & 7) == 0)
    {
      unsigned int v4 = *a2;
      while (((a3 + 28) & 3) == 0)
      {
        unsigned int v5 = *(_DWORD *)(a3 + 28);
        if (v5 > 0xFF || v4 >= 0x100)
        {
          __break(0x550Au);
          return result;
        }

        if (v5 >= v4)
        {
          uint64_t v6 = *(void *)a3;
          if (!*(void *)a3) {
            return a3;
          }
        }

        else
        {
          if (((a3 + 8) & 7) != 0) {
            goto LABEL_17;
          }
          uint64_t v6 = *(void *)(a3 + 8);
          if (!v6) {
            return a4;
          }
          a3 = a4;
        }

        if ((v6 & 7) != 0) {
          goto LABEL_17;
        }
        a4 = a3;
        a3 = v6;
      }
    }

    goto LABEL_17;
  }

  return a4;
}

uint64_t sub_1000C7788()
{
  if (qword_10011C760 != -1) {
    dispatch_once(&qword_10011C760, &stru_100109688);
  }
  return qword_10011C758;
}

void sub_1000C77C8(id a1)
{
  uint64_t v1 = (uint64_t)operator new(0x80uLL);
  if ((v1 & 0xF) != 0 || (v1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    qword_10011C758 = sub_1000C7800(v1);
  }
}

uint64_t sub_1000C7800(uint64_t result)
{
  if (!result) {
    goto LABEL_7;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_7;
  }
  uint64_t result = sub_10001B6E4(result);
  *(void *)uint64_t v1 = off_100109808;
  if (((v1 + 96) & 7) != 0
    || (*(void *)uint64_t v1 = off_1001096B8,
        *(void *)(v1 + 96) = off_100109788,
        *(void *)(v1 + 104) = 0LL,
        *(_WORD *)(v1 + 116) = 0,
        *(_DWORD *)(v1 + 112) = 0,
        *(_DWORD *)(v1 + 120) = 0,
        (uint64_t result = sub_10005BFC8()) == 0)
    || (result & 7) != 0)
  {
LABEL_7:
    __break(0x5516u);
  }

  else
  {
    sub_10005C434((uint64_t *)result, v1 + 96, 0xDu, 0LL);
    return v1;
  }

  return result;
}

uint64_t sub_1000C7890(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    if ((result & 7) == 0)
    {
      *(void *)uint64_t result = off_1001096B8;
      *(void *)(result + 96) = off_100109788;
      char v2 = result + 96;
      uint64_t result = sub_10005BFC8();
      if (result)
      {
        if ((result & 7) == 0)
        {
          uint64_t result = (uint64_t)sub_10005C5F4((uint64_t *)result, v1 + 96, 0xDu);
          if ((v2 & 7) == 0) {
            return sub_1000BD9A8(v1);
          }
        }
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000C78FC(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000C7890(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C7910(uint64_t a1)
{
  uint64_t result = a1 - 96;
  if ((result & 7) == 0) {
    return sub_1000C7890(result);
  }
  __break(0x5516u);
  return result;
}

void sub_1000C7924(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t v1 = (void *)sub_1000C7890(a1);
    operator delete(v1);
  }

void sub_1000C7948(uint64_t a1)
{
}

uint64_t sub_1000C7950(uint64_t result, unsigned int a2)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else if (a2 < 2)
  {
    return 1LL;
  }

  __break(0x550Au);
  return result;
}

BOOL sub_1000C7974(BOOL result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    unsigned int v1 = *(_DWORD *)(result + 112);
    if (v1 < 4) {
      return v1 != 0;
    }
  }

  __break(0x550Au);
  return result;
}

uint64_t sub_1000C79A0(uint64_t result, unsigned int a2)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t, void, void, void))(*(void *)result + 56LL))( result,  196613LL,  a2,  0LL,  0LL);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C79D0(uint64_t result)
{
  if (!result || (result & 7) != 0 || (uint64_t result = sub_1000438B8()) == 0 || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else if ((*(unsigned int (**)(uint64_t))(*(void *)result + 216LL))(result))
  {
    return 1983LL;
  }

  else
  {
    return 1977LL;
  }

  return result;
}

uint64_t sub_1000C7A1C(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 136LL))(result) & 0xFFFFF877LL;
  }
  __break(0x5516u);
  return result;
}

void sub_1000C7A50(_DWORD *a1, int a2, int a3, uint64_t a4, int a5)
{
  if ((a2 + 32) >= 0x40)
  {
LABEL_23:
    __break(0x550Au);
LABEL_24:
    __break(0x5516u);
    return;
  }

  if (a2 == 13 && a5 == 16)
  {
    if (a3) {
      return;
    }
  }

  else
  {
    sub_1000CEAEC( 0,  4,  "%s:%d wrong lingo (%d) or payload size (%d)\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/iSL/Source/IAP/TPushUI.cpp",  123,  a2,  a5);
    if (a3) {
      return;
    }
  }

  if (!a4)
  {
    __break(0x5518u);
    goto LABEL_23;
  }

  unsigned int v8 = sub_1000C0034(*(void *)(a4 + 4));
  if (!v10 & v9)
  {
    sub_1000CEAEC( 0,  4,  "%s:%d Push UI Msg %d not handled\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/iSL/Source/IAP/TPushUI.cpp",  170,  0);
  }

  else
  {
    unsigned int v11 = v8;
    switch(*(_DWORD *)a4)
    {
      case 0:
        unsigned int v12 = *(_DWORD *)(a4 + 12);
        if (v12 > 3) {
          goto LABEL_23;
        }
        a1[28] = v12;
        uint64_t v13 = *(unsigned int *)(a4 + 12);
        uint64_t v14 = v8;
        uint64_t v15 = *(void (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 32LL);
        uint64_t v16 = a1;
        uint64_t v17 = 196609LL;
        goto LABEL_21;
      case 1:
        a1[28] = 0;
        uint64_t v14 = v8;
        uint64_t v15 = *(void (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 32LL);
        uint64_t v17 = 196610LL;
        uint64_t v16 = a1;
        uint64_t v13 = 0LL;
        goto LABEL_21;
      case 2:
        (*(void (**)(_DWORD *, void))(*(void *)a1 + 168LL))(a1, *(unsigned __int16 *)(a4 + 12));
        uint64_t v14 = v11;
        uint64_t v13 = *(unsigned __int16 *)(a4 + 12);
        uint64_t v15 = *(void (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 32LL);
        uint64_t v17 = 196611LL;
        goto LABEL_20;
      case 3:
        (*(void (**)(_DWORD *, void))(*(void *)a1 + 176LL))(a1, *(unsigned int *)(a4 + 12));
        uint64_t v14 = v11;
        uint64_t v13 = *(unsigned int *)(a4 + 12);
        uint64_t v15 = *(void (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 32LL);
        uint64_t v17 = 196612LL;
LABEL_20:
        uint64_t v16 = a1;
LABEL_21:
        v15(v16, v17, v14, v13);
        break;
      default:
        goto LABEL_23;
    }
  }

void sub_1000C7C2C(uint64_t a1, int a2, int a3, uint64_t a4, int a5)
{
  else {
    sub_1000C7A50((_DWORD *)(a1 - 96), a2, a3, a4, a5);
  }
}

uint64_t sub_1000C7C44(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return 1LL;
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C7C5C(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return 1LL;
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C7C74(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_6;
  }

  uint64_t result = *(unsigned int *)(result + 112);
  if (result >= 4) {
LABEL_6:
  }
    __break(0x550Au);
  return result;
}

uint64_t sub_1000C7C98(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(unsigned __int16 *)(result + 116);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C7CB0(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(unsigned int *)(result + 120);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C7CC8(uint64_t result, __int16 a2)
{
  if (!result || (result & 7) != 0) {
    __break(0x5516u);
  }
  else {
    *(_WORD *)(result + 116) = a2;
  }
  return result;
}

uint64_t sub_1000C7CE0(uint64_t result, int a2)
{
  if (!result || (result & 7) != 0) {
    __break(0x5516u);
  }
  else {
    *(_DWORD *)(result + 120) = a2;
  }
  return result;
}

void sub_1000C7CF8(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

void sub_1000C7D0C(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

uint64_t sub_1000C7D20()
{
  if (qword_10011C770 != -1) {
    dispatch_once(&qword_10011C770, &stru_1001098D0);
  }
  return qword_10011C768;
}

void sub_1000C7D60(id a1)
{
  uint64_t v1 = (uint64_t)operator new(0x70uLL);
  if ((v1 & 0xF) != 0 || (v1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    qword_10011C768 = sub_1000C7D98(v1);
  }
}

uint64_t sub_1000C7D98(uint64_t result)
{
  if (!result
    || (uint64_t v1 = (void *)result, (result & 7) != 0)
    || (uint64_t result = sub_10001B6E4(result), *v1 = off_1001099F8, ((unint64_t)(v1 + 12) & 7) != 0)
    || (*v1 = off_100109900, v1[12] = off_100109978, v1[13] = 0LL, (uint64_t result = sub_10005BFC8()) == 0)
    || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    sub_10005C434((uint64_t *)result, (uint64_t)(v1 + 12), 2u, 0LL);
    return (uint64_t)v1;
  }

  return result;
}

uint64_t sub_1000C7E1C(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    if ((result & 7) == 0)
    {
      *(void *)uint64_t result = off_100109900;
      *(void *)(result + 96) = off_100109978;
      char v2 = result + 96;
      uint64_t result = sub_10005BFC8();
      if (result)
      {
        if ((result & 7) == 0)
        {
          uint64_t result = (uint64_t)sub_10005C5F4((uint64_t *)result, v1 + 96, 2u);
          if ((v2 & 7) == 0) {
            return sub_1000BD9A8(v1);
          }
        }
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000C7E88(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000C7E1C(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C7E9C(uint64_t a1)
{
  uint64_t result = a1 - 96;
  if ((result & 7) == 0) {
    return sub_1000C7E1C(result);
  }
  __break(0x5516u);
  return result;
}

void sub_1000C7EB0(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t v1 = (void *)sub_1000C7E1C(a1);
    operator delete(v1);
  }

void sub_1000C7ED4(uint64_t a1)
{
}

void sub_1000C7EDC(uint64_t a1, int a2, int a3, uint64_t a4, int a5)
{
  if (!a1 || (a1 & 7) != 0)
  {
LABEL_47:
    __break(0x5516u);
    goto LABEL_48;
  }

  if ((a2 + 32) >= 0x40)
  {
LABEL_48:
    __break(0x550Au);
    return;
  }

  if (a2 != 2) {
    sub_1000CEAEC( 0,  4,  "%s:%d lingo != kIapLingoSimpleRemote\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/iSL/Source/IAP/TSimpleRemote.cpp",  65);
  }
  switch(a3)
  {
    case 0:
      if (a5 != 24) {
        sub_1000CEAEC( 0,  4,  "%s:%d payloadSize != sizeof(IapSimpleRemoteData_t)\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/iSL/Source/IAP/TSimpleRemote.cpp",  75);
      }
      if (!a4 || (a4 & 7) != 0) {
        goto LABEL_47;
      }
      int v13 = *(_DWORD *)a4;
      if ((((_BYTE)a4 + 4) & 3) != 0) {
        goto LABEL_47;
      }
      int v14 = *(_DWORD *)(a4 + 4);
      if ((((_BYTE)a4 + 16) & 7) != 0) {
        goto LABEL_47;
      }
      uint64_t v15 = *(void *)(a4 + 16);
      if (((a4 + 8) & 7) != 0) {
        goto LABEL_47;
      }
      if (*(_BYTE *)(a4 + 8)) {
        uint64_t v9 = 131074LL;
      }
      else {
        uint64_t v9 = 131073LL;
      }
      goto LABEL_42;
    case 1:
      if (a5 != 24) {
        sub_1000CEAEC( 0,  4,  "%s:%d payloadSize != sizeof(IapSimpleRemoteMikeyData_t)\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/iSL/Source/IAP/TSimpleRemote.cpp",  96);
      }
      int v13 = 10;
      if (!a4) {
        goto LABEL_47;
      }
      if ((a4 & 7) != 0) {
        goto LABEL_47;
      }
      if ((((_BYTE)a4 + 4) & 3) != 0) {
        goto LABEL_47;
      }
      int v14 = *(_DWORD *)(a4 + 4);
      if ((((_BYTE)a4 + 16) & 7) != 0) {
        goto LABEL_47;
      }
      uint64_t v15 = *(void *)(a4 + 16);
      if (((a4 + 8) & 7) != 0) {
        goto LABEL_47;
      }
      unsigned int v10 = *(unsigned __int8 *)(a4 + 8);
      if (v10 > 1) {
        goto LABEL_48;
      }
      unsigned int v11 = 131075;
      unsigned int v12 = 131076;
      goto LABEL_39;
    case 2:
      if (a5 != 24) {
        sub_1000CEAEC( 0,  4,  "%s:%d payloadSize != sizeof(IapSimpleRemoteCarData_t)\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/iSL/Source/IAP/TSimpleRemote.cpp",  117);
      }
      if (!a4 || (a4 & 7) != 0) {
        goto LABEL_47;
      }
      if (*(_DWORD *)a4 > 3u) {
        goto LABEL_48;
      }
      int v13 = *(_DWORD *)a4;
      if ((((_BYTE)a4 + 4) & 3) != 0) {
        goto LABEL_47;
      }
      int v14 = *(_DWORD *)(a4 + 4);
      if ((((_BYTE)a4 + 16) & 7) != 0) {
        goto LABEL_47;
      }
      uint64_t v15 = *(void *)(a4 + 16);
      if (((a4 + 8) & 7) != 0) {
        goto LABEL_47;
      }
      unsigned int v10 = *(unsigned __int8 *)(a4 + 8);
      if (v10 > 1) {
        goto LABEL_48;
      }
      unsigned int v11 = 131077;
      unsigned int v12 = 131078;
LABEL_39:
      if (v10) {
        uint64_t v9 = v12;
      }
      else {
        uint64_t v9 = v11;
      }
LABEL_42:
      (*(void (**)(uint64_t, uint64_t, int *, uint64_t))(*(void *)a1 + 40LL))(a1, v9, &v13, 16LL);
      break;
    case 3:
      if (a5 != 40) {
        sub_1000CEAEC( 0,  4,  "%s:%d payloadSize != sizeof(IapSimpleRemoteRotationButtonStatus_t)\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/iSL/Source/IAP/TSimpleRemote.cpp",  139);
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 32LL))(a1, 131079LL, a4, 40LL);
      break;
    default:
      sub_1000CEAEC( 0,  4,  "%s:%d Simple Remote Msg %d not handled\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/iSL/Source/IAP/TSimpleRemote.cpp",  151,  a3);
      break;
  }

void sub_1000C81FC(uint64_t a1, int a2, int a3, uint64_t a4, int a5)
{
  else {
    sub_1000C7EDC(a1 - 96, a2, a3, a4, a5);
  }
}

uint64_t sub_1000C8214(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return 1LL;
  }
  __break(0x5516u);
  return result;
}

void sub_1000C822C(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

void sub_1000C8240(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

BOOL sub_1000C8254(uint64_t a1)
{
  uint64_t v2 = sub_10000CEF8();
  sub_1000C86F4(v7, v2);
  pthread_mutex_lock(&stru_10011B978);
  uint64_t v6 = (void *)v7[1];
  if ((void *)v7[1] == v7)
  {
    BOOL v4 = 0LL;
  }

  else
  {
    do
    {
      unsigned int v3 = sub_10000D014((uint64_t *)&v6);
      BOOL v4 = *v3 == a1;
      if (*v3 == a1) {
        break;
      }
      sub_10000D048(&v6);
    }

    while (v6 != v7);
  }

  pthread_mutex_unlock(&stru_10011B978);
  sub_1000180FC((uint64_t)v7);
  return v4;
}

uint64_t sub_1000C8308(uint64_t result, char a2)
{
  if (!result || (result & 7) != 0) {
    __break(0x5516u);
  }
  else {
    *(_BYTE *)(result + 16) = a2;
  }
  return result;
}

BOOL sub_1000C8320(BOOL result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    unsigned int v1 = *(unsigned __int8 *)(result + 16);
    if (v1 < 2) {
      return v1 != 0;
    }
  }

  __break(0x550Au);
  return result;
}

uint64_t sub_1000C834C(uint64_t result)
{
  if (!result || (result & 7) != 0) {
    __break(0x5516u);
  }
  return result;
}

uint64_t sub_1000C8360(uint64_t result, int a2)
{
  if (!result) {
    goto LABEL_13;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_13;
  }
  if ((a2 + 32) >= 0x40)
  {
LABEL_14:
    __break(0x550Au);
    goto LABEL_15;
  }

  int v3 = a2 == 4 ? -3 : -2;
  int v4 = *(unsigned __int16 *)(result + 8);
  uint64_t result = sub_1000B6CE0();
  if (!result || (result & 7) != 0)
  {
LABEL_13:
    __break(0x5516u);
    goto LABEL_14;
  }

  uint64_t v5 = (v3 + v4);
  uint64_t result = sub_10008E10C(result, v2);
  if (!(_DWORD)result) {
    return v5;
  }
  BOOL v6 = v5 >= 2;
  uint64_t v5 = (v5 - 2);
  if (v6) {
    return v5;
  }
LABEL_15:
  __break(0x5515u);
  return result;
}

uint64_t sub_1000C83E4(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(unsigned __int16 *)(result + 8);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C83FC(uint64_t result, unsigned int a2)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    if (a2 > 0x80)
    {
      if (a2 == 0xFFFF)
      {
        *(_WORD *)(result + _Block_object_dispose((const void *)(v1 - 120), 8) = -1;
        __int16 v2 = -7;
      }

      else
      {
        *(_WORD *)(result + _Block_object_dispose((const void *)(v1 - 120), 8) = a2;
        __int16 v2 = a2 - 6;
      }
    }

    else
    {
      *(_WORD *)(result + _Block_object_dispose((const void *)(v1 - 120), 8) = 128;
      __int16 v2 = 122;
    }

    *(_WORD *)(result + _Block_object_dispose((const void *)(v1 - 120), 8) = v2;
  }

  return result;
}

uint64_t sub_1000C844C(uint64_t result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    unsigned int v2 = *(unsigned __int16 *)(result + 8);
    if (v2 >= 0x100) {
      int v3 = 6;
    }
    else {
      int v3 = 4;
    }
    unsigned int v4 = v3 + v2;
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 216LL))(result);
    if ((_DWORD)result)
    {
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v1 + 216LL))(v1);
      v4 -= result != 3;
    }

    if (v4 < 0x10000) {
      return (unsigned __int16)v4;
    }
  }

  __break(0x5507u);
  return result;
}

uint64_t sub_1000C84D0(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return 0xFFFFLL;
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C84E8(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 160LL))(result);
  }

  __break(0x5507u);
  return result;
}

uint64_t sub_1000C8528(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else if ((*(unsigned int (**)(uint64_t))(*(void *)result + 216LL))(result))
  {
    return 65529LL;
  }

  else
  {
    return 506LL;
  }

  return result;
}

uint64_t sub_1000C8564(uint64_t result, int a2)
{
  if (!result) {
    goto LABEL_14;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_14;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 160LL))(result);
  if ((a2 + 32) < 0x40)
  {
    if (a2 == 4)
    {
      uint64_t v4 = (result - 9);
    }

    else
    {
      uint64_t v4 = (result - 8);
      if (result < 8)
      {
LABEL_15:
        __break(0x5515u);
        goto LABEL_16;
      }
    }

    uint64_t result = sub_1000B6CE0();
    if (result && (result & 7) == 0)
    {
      uint64_t result = sub_10008E10C(result, v2);
      if (!(_DWORD)result) {
        return v4;
      }
      BOOL v5 = v4 >= 2;
      uint64_t v4 = (v4 - 2);
      if (v5) {
        return v4;
      }
      goto LABEL_15;
    }

uint64_t sub_1000C85FC(uint64_t result, int a2)
{
  if (!result || (uint64_t v2 = result, (result & 7) != 0) || (result = sub_1000B6CE0()) == 0 || (result & 7) != 0)
  {
    __break(0x5516u);
LABEL_14:
    __break(0x5500u);
    return result;
  }

  uint64_t result = sub_10008E10C(result, v2);
  if ((result & 1) == 0 && !a2) {
    return 0xFFFFFFFFLL;
  }
  int v4 = *(_DWORD *)(v2 + 12);
  BOOL v5 = __CFADD__(v4, 1);
  unsigned int v6 = v4 + 1;
  if (v5) {
    goto LABEL_14;
  }
  if (HIWORD(v6)) {
    uint64_t result = 0LL;
  }
  else {
    uint64_t result = v6;
  }
  *(_DWORD *)(v2 + 12) = result;
  return result;
}

void sub_1000C8674(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

void sub_1000C8688(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

uint64_t sub_1000C869C(uint64_t result)
{
  if (!result || (result & 7) != 0) {
    __break(0x5516u);
  }
  return result;
}

uint64_t sub_1000C86B0(uint64_t result)
{
  if (!result || (result & 7) != 0) {
    __break(0x5516u);
  }
  return result;
}

uint64_t sub_1000C86C4(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return 0LL;
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C86DC(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return 0LL;
  }
  __break(0x5516u);
  return result;
}

void *sub_1000C86F4(void *result, uint64_t a2)
{
  if (!result
    || (uint64_t v2 = (uint64_t)result, (result & 7) != 0)
    || (*uint64_t result = result, result[1] = result, ((unint64_t)(result + 2) & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    result[2] = 0LL;
    uint64_t v4 = *(void *)(a2 + 8);
    uint64_t v6 = v4;
    while (v4 != a2)
    {
      BOOL v5 = sub_10000D014(&v6);
      sub_100056E4C(v2, v5);
      sub_10000D048(&v6);
      uint64_t v4 = v6;
    }

    return (void *)v2;
  }

  return result;
}

uint64_t sub_1000C8778(uint64_t result, xmlChar *str2)
{
  if (!result) {
    return 0LL;
  }
  if ((result & 7) != 0 || (uint64_t v2 = (uint64_t *)(result + 24), ((result + 24) & 7) != 0))
  {
LABEL_17:
    __break(0x5516u);
    return 0LL;
  }

  while (1)
  {
    uint64_t v4 = *v2;
    if (!*v2) {
      return v4;
    }
    if ((v4 & 7) != 0 || ((v4 + 8) & 7) != 0) {
      goto LABEL_17;
    }
    unsigned int v6 = *(_DWORD *)(v4 + 8);
    if (v6 >= 0x20)
    {
      __break(0x550Au);
      return result;
    }

    if (v6 == 1)
    {
      if (!str2 || !*str2) {
        return v4;
      }
      if (((v4 + 16) & 7) != 0) {
        goto LABEL_17;
      }
      uint64_t result = xmlStrcmp(*(const xmlChar **)(v4 + 16), str2);
      if (!(_DWORD)result) {
        return v4;
      }
    }

    uint64_t v2 = (uint64_t *)(v4 + 48);
    if (((v4 + 48) & 7) != 0) {
      goto LABEL_17;
    }
  }

uint64_t sub_1000C8824(uint64_t result)
{
  if (result)
  {
    if ((result & 7) != 0 || ((result + 24) & 7) != 0) {
      goto LABEL_16;
    }
    uint64_t v1 = *(void *)(result + 24);
    if (!v1) {
      return 0LL;
    }
    if ((v1 & 7) != 0 || ((v1 + 8) & 7) != 0) {
      goto LABEL_16;
    }
    unsigned int v3 = *(_DWORD *)(v1 + 8);
    if (v3 >= 0x20)
    {
LABEL_17:
      __break(0x550Au);
      return result;
    }

    if (v3 != 3) {
      return 0LL;
    }
    uint64_t v4 = v1 + 80;
    if ((v4 & 7) != 0)
    {
LABEL_16:
      __break(0x5516u);
      goto LABEL_17;
    }

    return *(void *)v4;
  }

  return result;
}

uint64_t sub_1000C8894(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    *(void *)uint64_t result = &off_100109BE0;
    *(void *)(result + _Block_object_dispose((const void *)(v1 - 120), 8) = 0LL;
    *(void *)(result + 16) = a2;
    *(_BYTE *)(result + 24) &= 0xFCu;
  }

  return result;
}

uint64_t sub_1000C88C4(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    uint64_t result = *(void *)(result + 16);
    if (result && (result & 7) == 0) {
      return (*(uint64_t (**)(uint64_t))(*(void *)result + 16LL))(result);
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000C88F4(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    *(_BYTE *)(result + 24) |= 1u;
    return 1LL;
  }

  return result;
}

uint64_t sub_1000C8918(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    *(_BYTE *)(result + 24) |= 2u;
    return 1LL;
  }

  return result;
}

void sub_1000C893C(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

void sub_1000C8950(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

uint64_t sub_1000C8964(uint64_t result, uint64_t a2, const std::string *a3, uint64_t a4)
{
  if (!result
    || (uint64_t v4 = (void *)result, (result & 7) != 0)
    || (sub_1000C8894(result, a2),
        *uint64_t v4 = &off_100109C30,
        v4[5] = a4,
        uint64_t result = (uint64_t)operator new(0x18uLL),
        (result & 0xF) != 0)
    || !a3
    || (a3 & 7) != 0
    || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    v4[4] = std::string::basic_string((std::string *)result, a3);
    return (uint64_t)v4;
  }

  return result;
}

uint64_t sub_1000C89EC(uint64_t result, uint64_t a2, const std::string *a3, uint64_t a4)
{
  if (result && (result & 7) == 0) {
    return sub_1000C8964(result, a2, a3, a4);
  }
  __break(0x5516u);
  return result;
}

void *sub_1000C8A00(void *result)
{
  if (result)
  {
    uint64_t v1 = result;
    if ((result & 7) == 0)
    {
      *uint64_t result = &off_100109C30;
      uint64_t v2 = result[4];
      if (!v2) {
        return v1;
      }
      if ((v2 & 7) == 0)
      {
        operator delete((void *)v2);
        return v1;
      }
    }
  }

  __break(0x5516u);
  return result;
}

void *sub_1000C8A64(void *result)
{
  return result;
}

void sub_1000C8A78(void *a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t v1 = sub_1000C8A00(a1);
    operator delete(v1);
  }

uint64_t sub_1000C8A9C(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000C88C4(result);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C8AB0(uint64_t result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t result = sub_1000C8AFC(result, 1);
    if ((_DWORD)result) {
      return sub_1000C88F4(v1);
    }
  }

  return result;
}

uint64_t sub_1000C8AFC(uint64_t result, int a2)
{
  if (result)
  {
    uint64_t v2 = result;
    if ((result & 7) == 0)
    {
      if (a2)
      {
        uint64_t result = sub_1000C88C4(result);
        if ((result & 1) == 0) {
          return 0LL;
        }
      }

      else
      {
        uint64_t result = sub_1000C88C4(result);
        if (!(_DWORD)result) {
          return 0LL;
        }
      }

      uint64_t v4 = *(void *)(v2 + 32);
      if (v4 && (v4 & 7) == 0)
      {
        int v5 = sub_1000C88C4(v2);
        if (v5) {
          BOOL v6 = a2 == 0;
        }
        else {
          BOOL v6 = 1;
        }
        if (!v6)
        {
          if (*(void *)(v2 + 40)) {
            sub_1000D27A0(*(void *)(v2 + 40));
          }
        }

        if (v5) {
          return sub_1000C88C4(v2);
        }
        return 0LL;
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000C8BD0(uint64_t result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t result = sub_1000C8AFC(result, 0);
    if ((_DWORD)result) {
      return sub_1000C8918(v1);
    }
  }

  return result;
}

uint64_t sub_1000C8C1C(uint64_t result, std::string *this, int a3)
{
  if (!result
    || (uint64_t v3 = result, (result & 7) != 0)
    || (!a3 ? (BOOL v6 = "</") : (BOOL v6 = "<"),
        (result = (uint64_t)std::string::assign(this, v6), (uint64_t v7 = *(const std::string::value_type **)(v3 + 32)) == 0LL)
     || (v7 & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    sub_100022E90(this, v7);
    if (a3)
    {
      uint64_t v8 = *(void *)(v3 + 40);
      if (v8) {
        sub_1000D27A0(v8);
      }
    }

    std::string::append(this, ">");
    return 1LL;
  }

  return result;
}

void *sub_1000C8CB4(void *result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    *uint64_t result = off_100109C88;
    result[2] = 0LL;
  }

  return result;
}

BOOL sub_1000C8CD8(BOOL result, uint64_t a2)
{
  if (!result || (uint64_t v2 = result, result & 7))
  {
    __break(0x5516u);
  }

  else
  {
    else {
      uint64_t v3 = *(const char **)a2;
    }
    uint64_t v4 = fopen(v3, "r");
    *(void *)(v2 + 16) = v4;
    return v4 != 0LL;
  }

  return result;
}

void *sub_1000C8D2C(void *result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    *uint64_t result = off_100109C88;
    uint64_t v2 = (FILE *)result[2];
    if (v2)
    {
      fclose(v2);
      v1[2] = 0LL;
    }

    return v1;
  }

  return result;
}

void *sub_1000C8D78(void *result)
{
  return result;
}

void sub_1000C8D8C(void *a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t v1 = sub_1000C8D2C(a1);
    operator delete(v1);
  }

uint64_t sub_1000C8DB0(uint64_t result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    (*(void (**)(uint64_t))(*(void *)result + 24LL))(result);
    return *(unsigned __int8 *)(v1 + 8);
  }

  return result;
}

void sub_1000C8DF0(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
LABEL_10:
    __break(0x5507u);
    return;
  }

  if (!feof(*(FILE **)(a1 + 16)))
  {
    unsigned int v2 = fgetc(*(FILE **)(a1 + 16));
    if (v2 != -1)
    {
      if (v2 < 0x100)
      {
        *(_BYTE *)(a1 + _Block_object_dispose((const void *)(v1 - 120), 8) = v2;
        return;
      }

      goto LABEL_10;
    }

    sub_1000CEAEC( 0,  4,  "%s:%d 1 != bytesRead\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/iSL/Source/XMLParse/iMAXMLFileSrcStream.cpp",  84);
  }

size_t sub_1000C8E78(size_t result, void *a2, int *a3, _DWORD *a4)
{
  if (result)
  {
    size_t v4 = result;
    if ((result & 7) == 0)
    {
      if (feof(*(FILE **)(result + 16)))
      {
        *a4 = 0;
        return 1LL;
      }

      if (!a2 || *a3 < 1 || (size_t v8 = *a4, (int)v8 < 1) || *a3 < (int)v8)
      {
        uint64_t result = 0LL;
        *a4 = 0;
        return result;
      }

      uint64_t result = fread(a2, 1uLL, v8, *(FILE **)(v4 + 16));
      *a4 = result;
      if (result)
      {
        if (!__CFADD__(a2, result - 1))
        {
          *(_BYTE *)(v4 + _Block_object_dispose((const void *)(v1 - 120), 8) = *((_BYTE *)a2 + result - 1);
          return 1LL;
        }

        goto LABEL_16;
      }

      __break(0x5518u);
    }
  }

  __break(0x5516u);
LABEL_16:
  __break(0x5513u);
  return result;
}

void *sub_1000C8F34(void *result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    *uint64_t result = off_100109CF0;
    result[1] = 0LL;
    result[2] = 0LL;
    result[3] = 0LL;
  }

  return result;
}

uint64_t sub_1000C8F58(uint64_t result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t result = fwrite(*(const void **)(result + 16), 1uLL, *(unsigned int *)(result + 24), *(FILE **)(result + 8)) == *(unsigned int *)(result + 24);
    *(_DWORD *)(v1 + 24) = 0;
  }

  return result;
}

uint64_t sub_1000C8FA4(uint64_t result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    *(void *)uint64_t result = off_100109CF0;
    if (*(_DWORD *)(result + 24)) {
      sub_1000C8F58(result);
    }
    unsigned int v2 = *(void **)(v1 + 16);
    if (v2) {
      free(v2);
    }
    fclose(*(FILE **)(v1 + 8));
    return v1;
  }

  return result;
}

uint64_t sub_1000C9004(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000C8FA4(result);
  }
  __break(0x5516u);
  return result;
}

void sub_1000C9018(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t v1 = (void *)sub_1000C8FA4(a1);
    operator delete(v1);
  }

FILE *sub_1000C903C(FILE *result, uint64_t a2)
{
  if (!result || (unsigned int v2 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    else {
      uint64_t v3 = *(const char **)a2;
    }
    uint64_t result = fopen(v3, "w");
    if (result)
    {
      *(void *)&v2->_r = result;
      HIDWORD(v2->_bf._base) = 1024;
      size_t v4 = malloc(0x400uLL);
      *(void *)&v2->_flags = v4;
      return (FILE *)(v4 != 0LL);
    }
  }

  return result;
}

uint64_t sub_1000C90A8(uint64_t result, uint64_t a2, int a3)
{
  if (!result || (uint64_t v3 = result, (result & 7) != 0))
  {
LABEL_28:
    __break(0x5516u);
    return result;
  }

  if (a3 >= 1)
  {
    unsigned int v6 = 0;
    unint64_t v7 = ~a2;
    while (1)
    {
      uint64_t v8 = *(unsigned int *)(v3 + 24);
      unsigned int v9 = *(_DWORD *)(v3 + 28);
      BOOL v10 = v9 >= v8;
      unsigned int v11 = v9 - v8;
      if (!v10) {
        break;
      }
      unsigned int v12 = a3 - v6;
      if (a3 < v6) {
        break;
      }
      if (v11 >= v12) {
        size_t v13 = v12;
      }
      else {
        size_t v13 = v11;
      }
      uint64_t v14 = *(void *)(v3 + 16);
      if (__CFADD__(v14, v8) || v7 < v6) {
        goto LABEL_26;
      }
      uint64_t result = (uint64_t)memcpy((void *)(v14 + v8), (const void *)(a2 + v6), v13);
      BOOL v10 = __CFADD__(v6, (_DWORD)v13);
      v6 += v13;
      if (v10) {
        goto LABEL_27;
      }
      if ((v6 & 0x80000000) != 0) {
        sub_1000D27F4(v6 & 0x80000000);
      }
      int v15 = *(_DWORD *)(v3 + 24);
      BOOL v10 = __CFADD__(v15, (_DWORD)v13);
      unsigned int v16 = v15 + v13;
      if (v10) {
        goto LABEL_27;
      }
      *(_DWORD *)(v3 + 24) = v16;
      if (v16 >= *(_DWORD *)(v3 + 28)) {
        uint64_t result = sub_1000C8F58(v3);
      }
      else {
        uint64_t result = 1LL;
      }
    }

    __break(0x5515u);
LABEL_26:
    __break(0x5513u);
LABEL_27:
    __break(0x5500u);
    goto LABEL_28;
  }

  return 1LL;
}

uint64_t sub_1000C91A0(uint64_t result)
{
  if (!result) {
    goto LABEL_12;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_12;
  }
  *(void *)uint64_t result = off_100109D40;
  uint64_t result = *(void *)(result + 8);
  if (!result) {
    goto LABEL_7;
  }
  if ((result & 7) != 0)
  {
LABEL_12:
    __break(0x5516u);
  }

  else
  {
    unsigned int v2 = *(void (**)(void))(*(void *)result + 8LL);
LABEL_6:
    v2();
LABEL_7:
    while (*(void *)(v1 + 16))
    {
      uint64_t result = sub_1000C9220(v1);
      if (result)
      {
        if ((result & 7) != 0) {
          goto LABEL_12;
        }
        unsigned int v2 = *(void (**)(void))(*(void *)result + 16LL);
        goto LABEL_6;
      }
    }

    return v1;
  }

  return result;
}

uint64_t sub_1000C9220(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    uint64_t v1 = *(void *)(result + 16);
    if (!v1) {
      return v1;
    }
    if ((v1 & 7) == 0)
    {
      uint64_t v2 = *(void *)(v1 + 8);
      *(void *)(result + 16) = v2;
      if (!v2) {
        *(void *)(result + 24) = 0LL;
      }
      return v1;
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000C9258(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000C91A0(result);
  }
  __break(0x5516u);
  return result;
}

void sub_1000C926C(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t v1 = (void *)sub_1000C91A0(a1);
    operator delete(v1);
  }

uint64_t sub_1000C9290(uint64_t result, uint64_t a2)
{
  if (!result || (result & 7) != 0 || !a2 || (a2 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    *(void *)(a2 + _Block_object_dispose((const void *)(v1 - 120), 8) = 0LL;
    uint64_t v2 = (void *)(result + 16);
    uint64_t v3 = *(void *)(result + 16);
    if (v3)
    {
      *(void *)(a2 + _Block_object_dispose((const void *)(v1 - 120), 8) = v3;
    }

    else
    {
      *(void *)(result + 16) = a2;
      uint64_t v2 = (void *)(result + 24);
    }

    *uint64_t v2 = a2;
  }

  return result;
}

uint64_t sub_1000C92D4(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    uint64_t result = *(void *)(result + 16);
    if (!result)
    {
      sub_1000CEAEC(0, 4, "iMAXMLOutStreamCntlr::BeginInnermostElemSerializer null mInnermostElem");
      return 0LL;
    }

    if ((result & 7) == 0) {
      return (*(uint64_t (**)(uint64_t))(*(void *)result + 32LL))(result);
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000C9328(uint64_t result, uint64_t *a2)
{
  if (result)
  {
    uint64_t v2 = result;
    if ((result & 7) == 0)
    {
      uint64_t result = *(void *)(result + 16);
      if (!result)
      {
        uint64_t v4 = 0LL;
        goto LABEL_7;
      }

      if ((result & 7) == 0)
      {
        uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)result + 40LL))(result);
        uint64_t result = sub_1000C9220(v2);
LABEL_7:
        *a2 = result;
        return v4;
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000C9398(uint64_t result, const std::string *a2, uint64_t a3)
{
  if (!result
    || (uint64_t v3 = result, (result & 7) != 0)
    || (uint64_t result = (uint64_t)operator new(0x30uLL), (result & 0xF) != 0)
    || (uint64_t result = sub_1000C89EC(result, *(void *)(v3 + 8), a2, a3), (result & 7) != 0))
  {
    __break(0x5516u);
  }

  return result;
}

uint64_t sub_1000C93FC(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    uint64_t result = *(void *)(result + 16);
    if (!result) {
      return 1LL;
    }
    if ((result & 7) == 0) {
      return (*(uint64_t (**)(uint64_t))(*(void *)result + 24LL))(result);
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000C9430(uint64_t result)
{
  if (!result
    || (result & 7) != 0
    || (*(void *)uint64_t result = 0LL, *(_DWORD *)(result + 8) = 0, ((result + 16) & 7) != 0)
    || (*(void *)(result + 16) = 0LL, *(void *)(result + 24) = 0LL, (((_BYTE)result + 32) & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    *(void *)(result + 32) = 0LL;
  }

  return result;
}

uint64_t sub_1000C946C(uint64_t result, unint64_t a2)
{
  if (result)
  {
    uint64_t v2 = (void *)result;
    if ((result & 7) == 0)
    {
      if (!a2)
      {
        sub_1000CEAEC(0, 4, "iMAXMLParseCntxLookup::CheckSetTableLength: null table ptr!");
        return a2 != 0;
      }

      if ((a2 & 7) == 0)
      {
        unint64_t v4 = 0LL;
        for (unint64_t i = a2; *(__int16 *)(i + 8) != -1; i += 32LL)
        {
          if (__OFADD__((_DWORD)v4, 1))
          {
            __break(0x5500u);
LABEL_15:
            __break(0x5513u);
            goto LABEL_16;
          }

          if (i >= 0xFFFFFFFFFFFFFFE0LL) {
            goto LABEL_15;
          }
          ++v4;
        }

        *(_DWORD *)(result + _Block_object_dispose((const void *)(v1 - 120), 8) = v4;
        result += 16LL;
        sub_1000C9518(result, v4);
        *uint64_t v2 = a2;
        return a2 != 0;
      }
    }
  }

uint64_t sub_1000C9518(uint64_t result, unint64_t a2)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
LABEL_11:
    __break(0x5513u);
    return result;
  }

  uint64_t v2 = *(void *)result;
  unint64_t v3 = (uint64_t)(*(void *)(result + 8) - *(void *)result) >> 3;
  if (a2 > v3) {
    return sub_1000C9920(result, a2 - v3);
  }
  if (a2 < v3)
  {
    if (!((a2 + 0x1000000000000000LL) >> 61) && 8 * a2 <= ~v2) {
      return (uint64_t)sub_1000C9DD8((void *)result, (void *)(v2 + 8 * a2));
    }
    goto LABEL_11;
  }

  return result;
}

uint64_t sub_1000C957C(uint64_t result, unint64_t a2, uint64_t a3)
{
  if (result)
  {
    uint64_t v3 = result;
    if ((result & 7) == 0)
    {
      uint64_t result = sub_1000C946C(result, a2);
      if (!(_DWORD)result) {
        return 22LL;
      }
      if (!*(_DWORD *)(v3 + 8)) {
        return 0LL;
      }
      uint64_t v6 = 0LL;
      unint64_t v7 = (void *)(v3 + 16);
      BOOL v9 = (a2 & 7) != 0 || a2 == 0;
      while (32 * v6 <= ~a2)
      {
        if (v9) {
          goto LABEL_27;
        }
        unint64_t v10 = a2 + 32 * v6;
        if ((*(_BYTE *)(v10 + 10) & 1) == 0)
        {
          uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))v10)(v6, a3);
          if (!result)
          {
            sub_1000CEAEC(0, 4, "iMAXMLParseCntxLookup::Init failed to create parse context");
            return 22LL;
          }

          if (((v3 + 16) & 7) != 0) {
            goto LABEL_27;
          }
          uint64_t v11 = *v7;
          if (__CFADD__(*v7, 8 * v6)) {
            break;
          }
          if (!v11) {
            goto LABEL_27;
          }
          unsigned int v12 = (uint64_t *)(v11 + 8 * v6);
          *unsigned int v12 = result;
        }

        if (v10 > 0xFFFFFFFFFFFFFFDFLL) {
          break;
        }
        if (v6 == 0xFFFFFFFFLL) {
          goto LABEL_28;
        }
      }

      __break(0x5513u);
    }
  }

uint64_t sub_1000C96A0(uint64_t result, unsigned int a2)
{
  if (!result || (result & 7) != 0)
  {
LABEL_10:
    __break(0x5516u);
    goto LABEL_11;
  }

  uint64_t v2 = *(void *)result;
  if (!*(void *)result || *(_DWORD *)(result + 8) <= a2) {
    return 0LL;
  }
  if (!__CFADD__(v2, 32LL * a2))
  {
    if ((v2 & 7) == 0)
    {
      uint64_t v3 = v2 + 32LL * a2 + 10;
      if ((v3 & 1) == 0) {
        return *(unsigned __int8 *)v3;
      }
    }

    goto LABEL_10;
  }

uint64_t sub_1000C96F8(uint64_t result, unsigned int a2)
{
  if (!result || (result & 7) != 0)
  {
LABEL_10:
    __break(0x5516u);
    goto LABEL_11;
  }

  uint64_t v2 = *(void *)result;
  if (!*(void *)result || *(_DWORD *)(result + 8) <= a2) {
    return 0LL;
  }
  if (!__CFADD__(v2, 32LL * a2))
  {
    if ((v2 & 7) == 0)
    {
      uint64_t v3 = v2 + 32LL * a2 + 8;
      if ((v3 & 7) == 0) {
        return *(unsigned __int16 *)v3;
      }
    }

    goto LABEL_10;
  }

uint64_t sub_1000C9754(uint64_t result, unsigned int a2)
{
  if (!result || (result & 7) != 0)
  {
LABEL_9:
    __break(0x5516u);
    goto LABEL_10;
  }

  uint64_t v2 = *(void *)result;
  if (!*(void *)result || *(_DWORD *)(result + 8) <= a2) {
    return 0LL;
  }
  if (!__CFADD__(v2, 32LL * a2))
  {
    if ((v2 & 7) == 0) {
      return v2 + 32LL * a2 + 11;
    }
    goto LABEL_9;
  }

uint64_t sub_1000C97A4(uint64_t result, std::string *this, int a3)
{
  if (!result || (uint64_t v3 = result, (result & 7) != 0))
  {
LABEL_22:
    __break(0x5516u);
LABEL_23:
    __break(0x5513u);
    return result;
  }

  if (*(_DWORD *)(result + 8))
  {
    uint64_t v6 = 0LL;
    unint64_t v7 = 0LL;
    uint64_t v8 = this & 7;
    while (1)
    {
      uint64_t v9 = *(void *)v3;
      if (__CFADD__(*(void *)v3, v6)) {
        goto LABEL_23;
      }
      if (v9) {
        BOOL v10 = (((_BYTE)v6 + (_BYTE)v9) & 7) == 0LL;
      }
      else {
        BOOL v10 = 0;
      }
      if (!v10 || (((_DWORD)v6 + (_DWORD)v9 + 10) & 1) != 0) {
        goto LABEL_22;
      }
      int v11 = *(unsigned __int8 *)(v9 + v6 + 10);
      if ((v11 & 8) != 0) {
        return v7;
      }
      if (this)
      {
        if (v8) {
          goto LABEL_22;
        }
        uint64_t result = std::string::compare(this, (const std::string::value_type *)(v9 + v6 + 11));
        if (!(_DWORD)result) {
          return v7;
        }
      }

      else if (a3 && (v11 & a3) == a3)
      {
        return v7;
      }

      ++v7;
      v6 += 32LL;
    }
  }

  return 0xFFFFFFFFLL;
}

uint64_t sub_1000C9884(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_16;
  }
  uint64_t v3 = *(void *)result;
  unint64_t v4 = (uint64_t (**)(uint64_t, uint64_t))(v3 + 32LL * a2);
  uint64_t v5 = v3 + 32LL * a2 + 10;
  if ((v5 & 1) != 0) {
    goto LABEL_16;
  }
  if ((*(_BYTE *)v5 & 1) != 0) {
    return (*v4)(a2, a3);
  }
  if (((result + 16) & 7) != 0) {
    goto LABEL_16;
  }
  uint64_t v6 = *(void *)(result + 16);
  if (!__CFADD__(v6, 8LL * a2))
  {
    if (v6)
    {
      uint64_t v7 = v6 + 8LL * a2;
      if ((v7 & 7) == 0) {
        return *(void *)v7;
      }
    }

uint64_t sub_1000C9920(uint64_t a1, unint64_t a2)
{
  if (!a1 || (uint64_t v2 = (uint64_t *)a1, (a1 & 7) != 0) || ((a1 + 16) & 7) != 0)
  {
    __break(0x5516u);
LABEL_15:
    __break(0x5500u);
LABEL_16:
    sub_10002A484((uint64_t)v2);
  }

  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  if (a2 <= (v4 - v5) >> 3) {
    return sub_1000C9A10(a1, a2);
  }
  unint64_t v13 = 0xAAAAAAAAAAAAAAAALL;
  *(void *)&__int128 v6 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v6 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v12[0] = v6;
  v12[1] = v6;
  uint64_t v7 = v5 - *(void *)a1;
  unint64_t v8 = a2 + (v7 >> 3);
  if (__CFADD__(a2, v7 >> 3)) {
    goto LABEL_15;
  }
  if (v8 >> 61) {
    goto LABEL_16;
  }
  unint64_t v9 = v4 - *(void *)a1;
  if (v9 >> 2 > v8) {
    unint64_t v8 = v9 >> 2;
  }
  if (v9 >= 0x7FFFFFFFFFFFFFF8LL) {
    unint64_t v10 = 0x1FFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v10 = v8;
  }
  sub_10005CA04((uint64_t)v12, v10, v7 >> 3, a1 + 16);
  sub_1000C9AAC((uint64_t)v12, a2);
  sub_1000C9B4C(v2, v12);
  return sub_1000C9CD0((uint64_t)v12);
}

uint64_t sub_1000C9A10(uint64_t result, uint64_t a2)
{
  if (result)
  {
    char v2 = result;
    if ((result & 7) == 0)
    {
      memset(v6, 170, sizeof(v6));
      uint64_t result = (uint64_t)sub_1000C9BF4(v6, result, a2);
      uint64_t v4 = (void *)v6[1];
      uint64_t v3 = (void *)v6[2];
      if (v6[1] == v6[2]) {
        return (uint64_t)sub_100024794(v6);
      }
      if (((v2 + 16) & 7) == 0)
      {
        uint64_t v5 = v6[1] & 7;
        while (v4 && !v5)
        {
          *uint64_t v4 = 0LL;
          v6[1] = ++v4;
          if (v4 == v3) {
            return (uint64_t)sub_100024794(v6);
          }
        }
      }
    }
  }

  __break(0x5516u);
LABEL_12:
  __break(0x5513u);
  return result;
}

uint64_t sub_1000C9AAC(uint64_t result, uint64_t a2)
{
  if (!result || (uint64_t v2 = result, (result & 7) != 0))
  {
LABEL_13:
    __break(0x5516u);
LABEL_14:
    __break(0x5513u);
  }

  else
  {
    memset(v6, 170, sizeof(v6));
    sub_10005A974(v6, (void *)(result + 16), a2);
    for (unint64_t i = v6[0]; i != v6[1]; v6[0] = i)
    {
      uint64_t result = sub_100024960(v2);
      unint64_t v4 = v6[0];
      if (v6[0]) {
        BOOL v5 = (v6[0] & 7) == 0LL;
      }
      else {
        BOOL v5 = 0;
      }
      if (!v5) {
        goto LABEL_13;
      }
      *(void *)v6[0] = 0LL;
      if (v4 >= 0xFFFFFFFFFFFFFFF8LL) {
        goto LABEL_14;
      }
      unint64_t i = v4 + 8;
    }

    return (uint64_t)sub_10005A9CC(v6);
  }

  return result;
}

uint64_t *sub_1000C9B4C(uint64_t *result, void *a2)
{
  if (!result) {
    goto LABEL_6;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0
    || (uint64_t v3 = result + 2, ((unint64_t)(result + 2) & 7) != 0)
    || (BOOL v5 = result + 1,
        uint64_t result = sub_1000C9C40((uint64_t)(result + 2), result[1], result[1], *result, *result, a2[1], a2[1]),
        a2[1] = v6,
        uint64_t v7 = *v2,
        *uint64_t v2 = v6,
        a2[1] = v7,
        (v5 & 7) != 0))
  {
LABEL_6:
    __break(0x5516u);
  }

  else
  {
    uint64_t v8 = *v5;
    *BOOL v5 = a2[2];
    a2[2] = v8;
    uint64_t v9 = *v3;
    *uint64_t v3 = a2[3];
    a2[3] = v9;
    *a2 = a2[1];
  }

  return result;
}

void *sub_1000C9BF4(void *result, uint64_t a2, uint64_t a3)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    *uint64_t result = a2;
    uint64_t v3 = *(void *)(a2 + 8);
    result[1] = v3;
    if (!((unint64_t)(a3 + 0x1000000000000000LL) >> 61) && 8 * a3 <= (unint64_t)~v3)
    {
      result[2] = v3 + 8 * a3;
      return result;
    }
  }

  __break(0x5513u);
  return result;
}

void *sub_1000C9C40( uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  uint64_t v13 = a2;
  unint64_t v14 = a3;
  uint64_t v11 = a6;
  unint64_t v12 = a7;
  if (a3 == a5) {
    return (void *)a6;
  }
  while (1)
  {
    uint64_t v8 = (void *)sub_1000252D0((unint64_t)&v11);
    uint64_t result = (void *)sub_1000252D0((unint64_t)&v13);
    *uint64_t v8 = *result;
    if (v14 <= 7) {
      break;
    }
    unint64_t v10 = v14 - 8;
    v14 -= 8LL;
    if (v12 <= 7) {
      break;
    }
    v12 -= 8LL;
    if (v10 == a5) {
      return (void *)v11;
    }
  }

  __break(0x5513u);
  return result;
}

uint64_t sub_1000C9CD0(uint64_t result)
{
  if (!result) {
    goto LABEL_8;
  }
  uint64_t v1 = (uint64_t *)result;
  if ((result & 7) != 0) {
    goto LABEL_8;
  }
  sub_1000C9D3C(result);
  if (!*v1) {
    return (uint64_t)v1;
  }
  sub_100024960((uint64_t)v1);
  uint64_t result = *v1;
  if (((unint64_t)(v1 + 3) & 7) != 0)
  {
LABEL_8:
    __break(0x5516u);
  }

  else if (v1[3] - result >= 0)
  {
    operator delete((void *)result);
    return (uint64_t)v1;
  }

  __break(0x550Cu);
  return result;
}

uint64_t sub_1000C9D3C(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000C9D54(result, *(void *)(result + 8));
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000C9D54(uint64_t result, uint64_t a2)
{
  if (!result || (uint64_t v2 = result, (result & 7) != 0))
  {
LABEL_9:
    __break(0x5516u);
  }

  else
  {
    while (*(void *)(v2 + 16) != a2)
    {
      uint64_t result = sub_100024960(v2);
      unint64_t v4 = *(void *)(v2 + 16);
      if (v4 <= 7)
      {
        __break(0x5513u);
        goto LABEL_9;
      }

      uint64_t result = v4 - 8;
      *(void *)(v2 + 16) = v4 - 8;
      if (((v4 - 8) & 7) != 0) {
        goto LABEL_9;
      }
      uint64_t result = (uint64_t)sub_100064D0C((void *)result);
    }
  }

  return result;
}

void *sub_1000C9DC0(uint64_t a1, void *a2)
{
  return result;
}

void *sub_1000C9DD8(void *result, void *a2)
{
  if (result)
  {
    uint64_t v2 = result;
    if ((result & 7) == 0)
    {
      unint64_t v4 = (void *)result[1];
      if (v4 == a2)
      {
LABEL_7:
        v2[1] = a2;
        return result;
      }

      if (((unint64_t)(result + 2) & 7) == 0)
      {
        while ((unint64_t)v4 > 7)
        {
          uint64_t result = sub_1000C9DC0((uint64_t)(v2 + 2), --v4);
          if (v4 == a2) {
            goto LABEL_7;
          }
        }

        __break(0x5513u);
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000C9E50(uint64_t result, int a2, uint64_t a3)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t result = sub_1000CA2EC(result, a2, a3);
    *(void *)uint64_t result = off_100109D88;
  }

  return result;
}

uint64_t sub_1000C9E80(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_9;
  }
  uint64_t v2 = *(const void **)(a1 + 24);
  if (!v2) {
    goto LABEL_10;
  }
  if (!v3) {
    goto LABEL_10;
  }
  if ((v3 & 7) != 0 || (uint64_t v4 = (uint64_t)v3 + 56, (v4 & 7) != 0))
  {
LABEL_9:
    __break(0x5516u);
LABEL_10:
    sub_1000D276C();
  }

  return sub_1000C96A0(v4, *(_DWORD *)(a1 + 16));
}

uint64_t sub_1000C9EF4(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_9;
  }
  uint64_t v2 = *(const void **)(a1 + 24);
  if (!v2) {
    goto LABEL_10;
  }
  if (!v3) {
    goto LABEL_10;
  }
  if ((v3 & 7) != 0 || (uint64_t v4 = (uint64_t)v3 + 56, (v4 & 7) != 0))
  {
LABEL_9:
    __break(0x5516u);
LABEL_10:
    sub_1000D276C();
  }

  return sub_1000C96F8(v4, *(_DWORD *)(a1 + 16));
}

uint64_t sub_1000C9F68(uint64_t a1, uint64_t a2)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_22;
  }
  uint64_t v4 = sub_1000CA4CC(a1);
  if (v4) {
    goto LABEL_12;
  }
  BOOL v5 = *(const void **)(a1 + 24);
  if (!v5) {
    goto LABEL_23;
  }
    goto LABEL_23;
  uint64_t v6 = operator new(0x18uLL);
  if ((v6 & 0xF) != 0 {
    || (uint64_t v4 = (uint64_t)v6,
  }
    || (uint64_t v8 = (uint64_t)v7 + 56, (v8 & 7) != 0)
    || (uint64_t v9 = (char *)sub_1000C9754(v8, *(_DWORD *)(a1 + 16)), (v4 & 7) != 0))
  {
LABEL_22:
    __break(0x5516u);
LABEL_23:
    sub_1000D276C();
  }

  sub_1000255A4(v4, v9);
LABEL_12:
  if (!a2 || (a2 & 7) != 0) {
    goto LABEL_22;
  }
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)a2 + 32LL))(a2, v4, 0LL);
  if (v4 == sub_1000CA4CC(a1)) {
    goto LABEL_19;
  }
  if ((v4 & 7) != 0) {
    goto LABEL_22;
  }
  operator delete((void *)v4);
LABEL_19:
  if (v10)
  {
    sub_1000C9290(a2, v10);
    return 0LL;
  }

  else
  {
    sub_1000CEAEC( 0,  4,  "iMAXMLParseContext::CreateTagOutputSerializer iMAXMLOutStreamCntlr->CreateElementSerializer failed");
    return 16LL;
  }

uint64_t sub_1000CA0CC(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_9;
  }
  uint64_t v1 = *(const void **)(a1 + 24);
  if (!v1) {
    goto LABEL_10;
  }
  if (!v2) {
    goto LABEL_10;
  }
  if ((v2 & 7) != 0 || (uint64_t v3 = (uint64_t)v2 + 8, (v3 & 7) != 0))
  {
LABEL_9:
    __break(0x5516u);
LABEL_10:
    sub_1000D276C();
  }

  return sub_1000CA99C(v3);
}

void sub_1000CA130(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

void sub_1000CA144(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

uint64_t sub_1000CA158(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return 0LL;
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000CA2EC(uint64_t result, int a2, uint64_t a3)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    *(void *)uint64_t result = off_100109E70;
    *(void *)(result + _Block_object_dispose((const void *)(v1 - 120), 8) = 0LL;
    *(_DWORD *)(result + 16) = a2;
    *(void *)(result + 24) = a3;
    *(_BYTE *)(result + 32) = 0;
    *(void *)(result + 40) = 0LL;
    *(void *)(result + 4_Block_object_dispose((const void *)(v1 - 120), 8) = 0LL;
  }

  return result;
}

uint64_t sub_1000CA31C(uint64_t result)
{
  if (!result) {
    goto LABEL_12;
  }
  uint64_t v1 = result;
  if ((result & 7) != 0) {
    goto LABEL_12;
  }
  *(void *)uint64_t result = off_100109E70;
  uint64_t result = *(void *)(result + 48);
  if (result)
  {
    if ((result & 7) != 0) {
      goto LABEL_12;
    }
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
  }

  uint64_t v2 = *(void *)(v1 + 40);
  if (!v2) {
    return v1;
  }
  if ((v2 & 7) == 0)
  {
    operator delete((void *)v2);
    return v1;
  }

void sub_1000CA39C(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

void sub_1000CA3B0(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

uint64_t sub_1000CA3C4(unsigned int a1)
{
  return (a1 < 0x21) & (0x100002600uLL >> a1);
}

uint64_t sub_1000CA3E0(uint64_t result, uint64_t a2)
{
  if (result)
  {
    uint64_t v2 = result;
    if ((result & 7) == 0)
    {
      uint64_t result = *(void *)(result + 48);
      if (!result)
      {
LABEL_6:
        *(void *)(v2 + 4_Block_object_dispose((const void *)(v1 - 120), 8) = a2;
        return result;
      }

      if ((result & 7) == 0)
      {
        uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8LL))(result);
        goto LABEL_6;
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000CA430(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(unsigned int *)(result + 16);
  }
  __break(0x5516u);
  return result;
}

std::string *sub_1000CA448(std::string *result, const std::string *a2)
{
  if (!result) {
    goto LABEL_11;
  }
  uint64_t v2 = result;
  std::string::size_type cap = result[1].__r_.__value_.__l.__cap_;
  if (cap)
  {
    if ((cap & 7) != 0) {
      goto LABEL_11;
    }
    operator delete((void *)cap);
  }

  uint64_t result = (std::string *)operator new(0x18uLL);
  if ((result & 0xF) == 0 && (result & 7) == 0)
  {
    uint64_t result = std::string::basic_string(result, a2);
    v2[1].__r_.__value_.__l.__cap_ = (std::string::size_type)result;
    return result;
  }

uint64_t sub_1000CA4CC(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_12;
  }
  uint64_t v2 = *(void *)(a1 + 40);
  if (!v2)
  {
    uint64_t v3 = *(const void **)(a1 + 24);
    if (!v3) {
      goto LABEL_13;
    }
    if ((v3 & 7) == 0)
    {
      if (!v4) {
        goto LABEL_13;
      }
      BOOL v5 = v4;
      uint64_t v6 = operator new(0x18uLL);
      if (!(v6 & 0xF | (unint64_t)(v5 & 7)))
      {
        uint64_t v2 = (uint64_t)v6;
        if ((((unint64_t)v5 + 56) & 7) == 0)
        {
          uint64_t v7 = (char *)sub_1000C9754((uint64_t)v5 + 56, *(_DWORD *)(a1 + 16));
          if ((v2 & 7) == 0)
          {
            sub_1000255A4(v2, v7);
            return v2;
          }
        }
      }
    }

uint64_t sub_1000CA584(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return 0LL;
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000CA59C(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return 45LL;
  }
  __break(0x5516u);
  return result;
}

void sub_1000CA5B4(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    sub_1000CA5EC(a1);
    sub_10005ABE0(a1);
  }

uint64_t sub_1000CA5EC(uint64_t result)
{
  if (!result || (v1 = result, (result & 7) != 0) || (uint64_t v2 = (void *)(result + 40), ((result + 40) & 7) != 0))
  {
LABEL_10:
    __break(0x5516u);
  }

  else
  {
    while (*v2)
    {
      uint64_t result = sub_1000CA674(v1);
      if (!result) {
        goto LABEL_10;
      }
      uint64_t v3 = result;
      if ((result & 7) != 0) {
        goto LABEL_10;
      }
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 48LL))(result);
      if ((result & 1) != 0) {
        uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
      }
    }
  }

  return result;
}

uint64_t sub_1000CA674(uint64_t result)
{
  if (!result || (result & 7) != 0 || ((result + 40) & 7) != 0) {
    goto LABEL_17;
  }
  if (!*(void *)(result + 40)) {
    return 0LL;
  }
  uint64_t v1 = *(void *)(result + 8);
  uint64_t v2 = (*(void *)(result + 32) >> 6) & 0x3FFFFFFFFFFFFF8LL;
  if (!__CFADD__(v1, v2))
  {
    if (v1)
    {
      uint64_t v3 = (uint64_t *)(v1 + v2);
      if ((v3 & 7) == 0)
      {
        uint64_t v4 = *v3;
        uint64_t v5 = 8 * (*(void *)(result + 32) & 0x1FFLL);
        if (!__CFADD__(v4, v5))
        {
          uint64_t v6 = (uint64_t *)(v4 + v5);
          if (v4) {
            BOOL v7 = (v6 & 7) == 0LL;
          }
          else {
            BOOL v7 = 0;
          }
          if (!v7) {
            goto LABEL_17;
          }
          uint64_t v8 = *v6;
          sub_10005B074(result);
          return v8;
        }

        goto LABEL_18;
      }
    }

uint64_t sub_1000CA714(uint64_t result, uint64_t a2, uint64_t a3, int a4)
{
  if (!result) {
    goto LABEL_13;
  }
  unint64_t v4 = result;
  if ((result & 7) != 0) {
    goto LABEL_13;
  }
  uint64_t result = (uint64_t)sub_1000CA7EC((void *)result);
  if (!a2)
  {
    sub_1000CEAEC(0, 4, "iMAXMLParseContextManager::AddContext nil Context param");
    return 22LL;
  }

  if (result && a4)
  {
    if ((result & 7) != 0) {
      goto LABEL_13;
    }
    uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 16LL))(result, a2);
    if ((_DWORD)v8) {
      return v8;
    }
  }

  uint64_t v9 = a2;
  uint64_t result = sub_1000CA9D4(v4, &v9);
  if ((a2 & 7) == 0)
  {
    uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 40LL))(a2, a3);
    if ((_DWORD)v8) {
      sub_1000CA674(v4);
    }
    return v8;
  }

void *sub_1000CA7EC(void *result)
{
  if (!result[5]) {
    return 0LL;
  }
  uint64_t v1 = result[1];
  uint64_t v2 = (result[4] >> 6) & 0x3FFFFFFFFFFFFF8LL;
  if (__CFADD__(v1, v2)) {
    goto LABEL_17;
  }
  if (!v1 || (uint64_t v3 = (uint64_t *)(v1 + v2), (v3 & 7) != 0))
  {
LABEL_16:
    __break(0x5516u);
    goto LABEL_17;
  }

  uint64_t v4 = *v3;
  uint64_t v5 = 8 * (result[4] & 0x1FFLL);
  if (!__CFADD__(v4, v5))
  {
    uint64_t v6 = v4 + v5;
    if (v4) {
      BOOL v7 = (v6 & 7) == 0;
    }
    else {
      BOOL v7 = 0;
    }
    if (v7) {
      return *(void **)v6;
    }
    goto LABEL_16;
  }

uint64_t sub_1000CA870(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (result && (result & 7) == 0 && ((result + 40) & 7) == 0)
  {
    if (!*(void *)(result + 40)) {
      return 2LL;
    }
    uint64_t result = (uint64_t)sub_1000CA7EC((void *)result);
    if (result && (result & 7) == 0) {
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)result + 24LL))( result,  a2,  a3,  a4,  a5);
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000CA900(uint64_t result, uint64_t a2)
{
  if (result && (result & 7) == 0 && ((result + 40) & 7) == 0)
  {
    if (!*(void *)(result + 40)) {
      return 0LL;
    }
    uint64_t result = sub_1000CA674(result);
    if (result)
    {
      uint64_t v3 = result;
      if ((result & 7) == 0)
      {
        uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)result + 32LL))(result, a2);
        return v4;
      }
    }
  }

  __break(0x5516u);
  return result;
}

uint64_t sub_1000CA99C(uint64_t result)
{
  if (result && (result & 7) == 0)
  {
    uint64_t result = (uint64_t)sub_1000CA7EC((void *)result);
    if (!result) {
      return 0xFFFFFFFFLL;
    }
    if ((result & 7) == 0) {
      return sub_1000CA430(result);
    }
  }

  __break(0x5516u);
  return result;
}

unint64_t sub_1000CA9D4(unint64_t result, void *a2)
{
  if (!result) {
    goto LABEL_12;
  }
  uint64_t v2 = (void *)result;
  if ((result & 7) != 0 || ((result + 40) & 7) != 0) {
    goto LABEL_12;
  }
  if (!*(void *)(result + 32)) {
    sub_1000CAA84(result);
  }
  v11[0] = sub_10005AD64(v2);
  v11[1] = v4;
  uint64_t result = sub_1000CAD08((uint64_t)v11);
  uint64_t v5 = *(void **)(result + 8);
  if (!v5 || (v5 & 7) != 0)
  {
LABEL_12:
    __break(0x5516u);
LABEL_13:
    __break(0x5515u);
    goto LABEL_14;
  }

  *uint64_t v5 = *a2;
  uint64_t v6 = v2[4];
  BOOL v7 = v6 != 0;
  uint64_t v8 = v6 - 1;
  if (!v7) {
    goto LABEL_13;
  }
  v2[4] = v8;
  uint64_t v9 = v2[5];
  BOOL v7 = __CFADD__(v9, 1LL);
  uint64_t v10 = v9 + 1;
  if (!v7)
  {
    v2[5] = v10;
    return result;
  }

unint64_t sub_1000CAA84(unint64_t result)
{
  if (!result) {
    goto LABEL_32;
  }
  uint64_t v1 = (uint64_t *)result;
  if ((result & 7) != 0 || ((result + 40) & 7) != 0) {
    goto LABEL_32;
  }
  uint64_t result = sub_100059D20(result);
  if (result >= 0x200)
  {
    uint64_t v2 = v1[4];
    BOOL v3 = __CFADD__(v2, 512LL);
    uint64_t v4 = v2 + 512;
    if (!v3)
    {
      v1[4] = v4;
      *(void *)&__int128 v23 = *(void *)sub_1000CAD80((unint64_t)v1);
      sub_1000CADB0((uint64_t)v1);
      return sub_10005A2C4((uint64_t)v1, &v23);
    }

    goto LABEL_34;
  }

  uint64_t v5 = v1 + 2;
  uint64_t v6 = v1 + 1;
  uint64_t v7 = v1[2] - v1[1];
  if (sub_10005A268((uint64_t)v1) > (unint64_t)(v7 >> 3))
  {
    if (v1[1] == *v1)
    {
      *(void *)&__int128 v23 = operator new(0x1000uLL);
      sub_10005A0C0((unint64_t)v1, &v23);
      *(void *)&__int128 v23 = 0xAAAAAAAAAAAAAAAALL;
      *(void *)&__int128 v23 = *(void *)sub_1000CAD80((unint64_t)v1);
      sub_1000CADB0((uint64_t)v1);
    }

    else
    {
      *(void *)&__int128 v23 = operator new(0x1000uLL);
    }

    uint64_t result = sub_10005A2C4((uint64_t)v1, &v23);
    if (*v5 - *v6 == 8LL)
    {
      uint64_t v19 = 256LL;
LABEL_31:
      v1[4] = v19;
      return result;
    }

    uint64_t v20 = v1[4];
    BOOL v3 = __CFADD__(v20, 512LL);
    uint64_t v19 = v20 + 512;
    if (!v3) {
      goto LABEL_31;
    }
LABEL_34:
    __break(0x5500u);
    goto LABEL_35;
  }

  unint64_t v25 = 0xAAAAAAAAAAAAAAAALL;
  *(void *)&__int128 v8 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v8 + 1) = 0xAAAAAAAAAAAAAAAALL;
  __int128 v23 = v8;
  __int128 v24 = v8;
  uint64_t result = sub_10005A268((uint64_t)v1);
  if ((result & 0x8000000000000000LL) == 0)
  {
    if (((unint64_t)(v1 + 3) & 7) == 0)
    {
      if (result) {
        unint64_t v9 = 2 * result;
      }
      else {
        unint64_t v9 = 1LL;
      }
      sub_1000251DC((uint64_t)&v23, v9, 0LL, (uint64_t)(v1 + 3));
      v22[1] = v1 + 5;
      v22[2] = (void *)512;
      uint64_t v21 = operator new(0x1000uLL);
      uint64_t result = sub_10005A488((unint64_t)&v23, &v21);
      v22[0] = 0LL;
      uint64_t v10 = (void *)*v6;
      if (*v6 == *v5)
      {
LABEL_21:
        uint64_t v12 = *v1;
        uint64_t *v1 = v23;
        *(void *)&__int128 v23 = v12;
        if ((v6 & 7) == 0)
        {
          uint64_t v13 = (void *)*v6;
          uint64_t v14 = *((void *)&v23 + 1);
          *uint64_t v6 = *((void *)&v23 + 1);
          *((void *)&v23 + 1) = v13;
          if ((v5 & 7) == 0)
          {
            uint64_t v15 = v1[3];
            uint64_t v16 = v24;
            *(_OWORD *)uint64_t v5 = v24;
            *(void *)&__int128 v24 = v10;
            *((void *)&v24 + 1) = v15;
            if (v16 - v14 == 8)
            {
              uint64_t v17 = 256LL;
            }

            else
            {
              uint64_t v18 = v1[4];
              BOOL v3 = __CFADD__(v18, 512LL);
              uint64_t v17 = v18 + 512;
              if (v3) {
                goto LABEL_34;
              }
            }

            v1[4] = v17;
            sub_10005AAD8(v22, 0LL);
            return sub_1000253A0((uint64_t)&v23);
          }
        }
      }

      else
      {
        uint64_t v11 = *v6 & 7LL;
        while (v10 && !v11)
        {
          uint64_t result = sub_10005A488((unint64_t)&v23, v10);
          if (++v10 == (void *)*v5) {
            goto LABEL_21;
          }
        }
      }
    }

uint64_t sub_1000CAD08(uint64_t result)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_15;
  }
  uint64_t v1 = *(void **)result;
  if (!*(void *)result || (*(void *)result & 7LL) != 0) {
    goto LABEL_15;
  }
  unint64_t v3 = *(void *)(result + 8);
  if (v3 != *v1) {
    goto LABEL_13;
  }
  if ((unint64_t)v1 > 7)
  {
    uint64_t v4 = v1 - 1;
    *(void *)uint64_t result = v4;
    if ((v4 & 7) != 0)
    {
LABEL_15:
      __break(0x5516u);
      goto LABEL_16;
    }

    unint64_t v5 = *v4;
    if (v5 <= 0xFFFFFFFFFFFFEFFFLL)
    {
      unint64_t v3 = v5 + 4096;
      *(void *)(result + _Block_object_dispose((const void *)(v1 - 120), 8) = v5 + 4096;
LABEL_13:
      if (v3 >= 8)
      {
        *(void *)(result + _Block_object_dispose((const void *)(v1 - 120), 8) = v3 - 8;
        return result;
      }
    }
  }

unint64_t sub_1000CAD80(unint64_t result)
{
  if (!result || (result & 7) != 0)
  {
LABEL_5:
    __break(0x5516u);
    goto LABEL_6;
  }

  unint64_t v1 = *(void *)(result + 16);
  if (v1 > 7)
  {
    uint64_t result = v1 - 8;
    if (((v1 - 8) & 7) == 0) {
      return result;
    }
    goto LABEL_5;
  }

uint64_t sub_1000CADB0(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    unint64_t v1 = *(void *)(result + 16);
    if (v1 > 7) {
      return sub_10005AEB4(result, v1 - 8);
    }
  }

  __break(0x5513u);
  return result;
}

uint64_t sub_1000CADD8(uint64_t result, unint64_t a2)
{
  if (result && (result & 7) == 0) {
    return sub_1000C957C(result + 56, a2, result);
  }
  __break(0x5516u);
  return result;
}

void sub_1000CADF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  if (!a1 || (a1 & 7) != 0)
  {
LABEL_33:
    __break(0x5516u);
  }

  else
  {
    ioctx[0] = a4;
    ioctx[1] = a2;
    xmlTextReaderPtr v8 = xmlReaderForIO((xmlInputReadCallback)sub_1000CAFF4, 0LL, ioctx, 0LL, 0LL, 0);
    if (v8)
    {
      unint64_t v9 = v8;
      int v18 = 0;
      while (1)
      {
        if (*(unsigned __int8 *)(a1 + 96) >= 2u)
        {
          __break(0x550Au);
          goto LABEL_33;
        }

        if (*(_BYTE *)(a1 + 96) || xmlTextReaderRead(v9) != 1)
        {
LABEL_31:
          xmlFreeTextReader(v9);
          sub_1000CA5EC(a1 + 8);
          return;
        }

        v18 &= ~0x10u;
        int v10 = xmlTextReaderNodeType(v9);
        int v11 = 0;
        if (v10 > 3)
        {
          if (v10 == 4)
          {
            int v17 = 0;
            uint64_t v12 = xmlTextReaderConstValue(v9);
            if (a5)
            {
              memset(&__p, 0, sizeof(__p));
              if (sub_1000CB3FC(a1, (uint64_t)v12, &__p))
              {
                if ((__p.__r_.__value_.__s.__size_ & 0x80u) == 0) {
                  p_p = &__p;
                }
                else {
                  p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
                }
                int v11 = sub_1000CA870(a1 + 8, (uint64_t)p_p, (uint64_t)&v18, a3, (uint64_t)&v17);
              }

              else
              {
                int v11 = 0;
              }

              goto LABEL_25;
            }

            uint64_t v13 = (std::string *)&v17;
            goto LABEL_23;
          }

          if (v10 == 15)
          {
            int v14 = sub_1000CA900(a1 + 8, a3);
LABEL_24:
            int v11 = v14;
          }
        }

        else
        {
          if (v10 == 1)
          {
            int v14 = sub_1000CB0BC(a1, v9, a3, &v18);
            goto LABEL_24;
          }

          if (v10 == 3)
          {
            LODWORD(__p.__r_.__value_.__l.__data_) = 0;
            uint64_t v12 = xmlTextReaderConstValue(v9);
            uint64_t v13 = &__p;
LABEL_23:
            int v14 = sub_1000CA870(a1 + 8, (uint64_t)v12, (uint64_t)&v18, a3, (uint64_t)v13);
            goto LABEL_24;
          }
        }

uint64_t sub_1000CAFF4(uint64_t result, uint64_t a2, int a3)
{
  int v8 = a3;
  if (!result) {
    return 0xFFFFFFFFLL;
  }
  unint64_t v3 = (uint64_t *)result;
  if ((result & 7) != 0 || ((result + 8) & 7) != 0) {
    goto LABEL_17;
  }
  uint64_t result = *(void *)(result + 8);
  uint64_t v5 = 0xFFFFFFFFLL;
  unsigned int v7 = -1;
  if (result)
  {
    if (a3 >= 128) {
      int v6 = 128;
    }
    else {
      int v6 = a3;
    }
    unsigned int v7 = v6;
    if ((result & 7) != 0) {
      goto LABEL_17;
    }
    if ((*(unsigned int (**)(uint64_t, uint64_t, int *, unsigned int *))(*(void *)result + 32LL))( result,  a2,  &v8,  &v7))
    {
      uint64_t v5 = v7;
      goto LABEL_11;
    }

    return 0xFFFFFFFFLL;
  }

uint64_t sub_1000CB0BC(uint64_t result, xmlTextReaderPtr reader, uint64_t a3, _DWORD *a4)
{
  if (!result) {
    goto LABEL_53;
  }
  uint64_t v4 = result;
  if ((result & 7) != 0) {
    goto LABEL_53;
  }
  if (!reader || xmlTextReaderNodeType(reader) != 1) {
    return 2LL;
  }
  memset(&v27, 170, sizeof(v27));
  unsigned int v7 = (char *)xmlTextReaderConstName(reader);
  sub_1000255A4((uint64_t)&v27, v7);
  if (xmlTextReaderIsEmptyElement(reader)) {
    int v8 = 16;
  }
  else {
    int v8 = 4;
  }
  *a4 |= v8;
  uint64_t v9 = sub_1000C97A4(v4 + 56, &v27, 0);
  if ((_DWORD)v9 == -1)
  {
    uint64_t v22 = 0LL;
    goto LABEL_50;
  }

  unsigned int v10 = v9;
  uint64_t v11 = sub_1000C9884(v4 + 56, v9, v4);
  if (!v11)
  {
    uint64_t v22 = 2LL;
    goto LABEL_50;
  }

  uint64_t v12 = v11;
  if (xmlTextReaderHasAttributes(reader))
  {
    uint64_t result = (uint64_t)operator new(0x20uLL);
    if ((result & 0xF) != 0) {
      goto LABEL_53;
    }
    uint64_t v13 = result;
    if ((result & 7) != 0) {
      goto LABEL_53;
    }
    int v14 = (std::string::size_type *)(result + 8);
    if (((result + 8) & 7) != 0) {
      goto LABEL_53;
    }
    *(void *)(result + _Block_object_dispose((const void *)(v1 - 120), 8) = v14;
    *(void *)(result + 16) = v14;
    if ((((_BYTE)result + 24) & 7) != 0) {
      goto LABEL_53;
    }
    *(void *)(result + 24) = 0LL;
    *(void *)uint64_t result = off_100109F28;
    for (uint64_t result = xmlTextReaderMoveToNextAttribute(reader);
          (_DWORD)result == 1;
          uint64_t result = xmlTextReaderMoveToNextAttribute(reader))
    {
      memset(v26, 170, sizeof(v26));
      uint64_t v15 = (char *)xmlTextReaderConstName(reader);
      sub_1000255A4((uint64_t)v26, v15);
      uint64_t v16 = (void *)HIBYTE(v26[2]);
      char v17 = HIBYTE(v26[2]);
      if (SHIBYTE(v26[2]) < 0) {
        uint64_t v16 = v26[1];
      }
      if (v16)
      {
        uint64_t result = (uint64_t)operator new(0x18uLL);
        if ((result & 0xF) != 0) {
          goto LABEL_53;
        }
        int v18 = (std::string::__raw *)result;
        uint64_t result = (uint64_t)sub_1000CB620((void *)result);
        if ((result & 7) != 0) {
          goto LABEL_53;
        }
        uint64_t result = v18->__words[1];
        if (!result || (result & 7) != 0) {
          goto LABEL_53;
        }
        sub_100022E90((std::string *)result, (const std::string::value_type *)v26);
        memset(__p, 170, sizeof(__p));
        uint64_t v19 = (char *)xmlTextReaderConstValue(reader);
        sub_1000255A4((uint64_t)__p, v19);
        uint64_t v20 = (void *)HIBYTE(__p[2]);
        if (SHIBYTE(__p[2]) < 0) {
          uint64_t v20 = __p[1];
        }
        if (v20)
        {
          uint64_t result = v18->__words[2];
          if (!result || (result & 7) != 0) {
            goto LABEL_53;
          }
          sub_100022E90((std::string *)result, (const std::string::value_type *)__p);
          __int128 v24 = v18;
          sub_100020DF4(v13 + 8, &v24);
        }

        else
        {
          (*(void (**)(std::string::__raw *))(v18->__words[0] + 8))(v18);
        }

        if (SHIBYTE(__p[2]) < 0) {
          operator delete(__p[0]);
        }
        char v17 = HIBYTE(v26[2]);
      }

      if (v17 < 0) {
        operator delete(v26[0]);
      }
    }

    if ((v12 & 7) != 0) {
      goto LABEL_53;
    }
    sub_1000CA3E0(v12, v13);
  }

  uint64_t result = sub_1000C96A0(v4 + 56, v10);
  if ((result & 8) != 0)
  {
    if ((v12 & 7) != 0) {
      goto LABEL_53;
    }
    sub_1000CA448((std::string *)v12, &v27);
  }

  uint64_t v21 = v4 + 8;
  uint64_t result = sub_1000CA714(v4 + 8, v12, a3, 1);
  uint64_t v22 = result;
  if (!(_DWORD)result) {
    goto LABEL_44;
  }
  if ((v12 & 7) == 0)
  {
    if (((*(uint64_t (**)(uint64_t))(*(void *)v12 + 48LL))(v12) & 1) == 0)
    {
LABEL_44:
      if ((*(_BYTE *)a4 & 0x10) != 0)
      {
        uint64_t v22 = sub_1000CA900(v21, a3);
        *a4 &= ~0x10u;
      }

      goto LABEL_50;
    }

    (*(void (**)(uint64_t))(*(void *)v12 + 8LL))(v12);
LABEL_50:
    return v22;
  }

BOOL sub_1000CB3FC(BOOL result, uint64_t a2, std::string *this)
{
  if (!result || result & 7) {
    goto LABEL_25;
  }
  if (!a2) {
    return 0LL;
  }
  if ((char)this->__r_.__value_.__s.__size_ < 0)
  {
    if (this->__r_.__value_.__r.__words[0])
    {
      *this->__r_.__value_.__l.__data_ = 0;
      this->__r_.__value_.__l.__size_ = 0LL;
      goto LABEL_9;
    }

void *sub_1000CB50C(void *result)
{
  if (result)
  {
    unint64_t v1 = result;
    if ((result & 7) == 0)
    {
      *uint64_t result = off_100109ED8;
      uint64_t v2 = result[1];
      if (!v2) {
        return v1;
      }
      if ((v2 & 7) == 0)
      {
        operator delete((void *)v2);
        return v1;
      }
    }
  }

  __break(0x5516u);
  return result;
}

void sub_1000CB570(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

void sub_1000CB584(uint64_t a1)
{
  if (a1 && (a1 & 7) == 0) {
    __break(1u);
  }
  __break(0x5516u);
}

void *sub_1000CB598(void *result)
{
  if (!result) {
    goto LABEL_8;
  }
  unint64_t v1 = result;
  result[1] = 0LL;
  result[2] = 0LL;
  *uint64_t result = off_100109F00;
  uint64_t result = operator new(0x18uLL);
  if ((result & 0xF) != 0
    || (result & 7) != 0
    || (*uint64_t result = 0LL,
        result[1] = 0LL,
        result[2] = 0LL,
        v1[1] = result,
        uint64_t result = operator new(0x18uLL),
        (result & 0xF) != 0)
    || (result & 7) != 0)
  {
LABEL_8:
    __break(0x5516u);
  }

  else
  {
    *uint64_t result = 0LL;
    result[1] = 0LL;
    result[2] = 0LL;
    v1[2] = result;
    return v1;
  }

  return result;
}

void *sub_1000CB620(void *result)
{
  return result;
}

void *sub_1000CB634(void *result)
{
  if (result)
  {
    unint64_t v1 = result;
    if ((result & 7) == 0)
    {
      *uint64_t result = off_100109F00;
      uint64_t v2 = result[2];
      if (!v2) {
        return sub_1000CB50C(v1);
      }
      if ((v2 & 7) == 0)
      {
        operator delete((void *)v2);
        return sub_1000CB50C(v1);
      }
    }
  }

  __break(0x5516u);
  return result;
}

void *sub_1000CB698(void *result)
{
  return result;
}

void sub_1000CB6AC(void *a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    unint64_t v1 = sub_1000CB634(a1);
    operator delete(v1);
  }

void *sub_1000CB6D0(void *result)
{
  if (!result
    || (unint64_t v1 = result, (result & 7) != 0)
    || (*result = off_100109F28, uint64_t v2 = result + 3, ((unint64_t)(result + 1) & 7) != 0)
    || (v2 & 7) != 0)
  {
LABEL_11:
    __break(0x5516u);
  }

  else
  {
    while (*v2)
    {
      uint64_t result = *(void **)sub_1000870A8((uint64_t)(v1 + 1));
      if (result)
      {
        (*(void (**)(void *))(*result + 8LL))(result);
      }

      sub_1000BEFB4((uint64_t)(v1 + 1));
    }

    sub_1000180FC((uint64_t)(v1 + 1));
    return v1;
  }

  return result;
}

void *sub_1000CB76C(void *result)
{
  return result;
}

void sub_1000CB780(void *a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    unint64_t v1 = sub_1000CB6D0(a1);
    operator delete(v1);
  }

uint64_t sub_1000CB7A4(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return 1LL;
  }
  __break(0x5516u);
  return result;
}

void *sub_1000CB7BC()
{
  return &unk_1000E0700;
}

void *sub_1000CB7C8()
{
  return &unk_1000E0AFC;
}

uint64_t sub_1000CB7D4(uint64_t result, int a2, uint64_t a3)
{
  if (!result
    || (result & 7) != 0
    || (a3 & 7) != 0
    || (uint64_t result = sub_1000C9E50(result, a2, a3),
        *(void *)uint64_t result = off_100109FD0,
        *(_BYTE *)(result + 56) &= 0xF0u,
        ((result + 64) & 7) != 0)
    || (*(void *)(result + 64) = 0LL, *(void *)(result + 72) = 0LL, (((_BYTE)result + 80) & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    *(void *)(result + 80) = 0LL;
  }

  return result;
}

uint64_t sub_1000CB838(int a1, uint64_t a2)
{
  uint64_t result = (uint64_t)operator new(0x58uLL);
  if ((result & 0xF) == 0 && (result & 7) == 0) {
    return sub_1000CB7D4(result, a1, a2);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000CB87C(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return 0LL;
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000CB894(uint64_t result, const char *a2, int a3, void *lpsrc)
{
  if (!result || (result & 7) != 0) {
    goto LABEL_17;
  }
  if (!*(void *)(result + 24)) {
    sub_1000D276C();
  }
  if (!result || (result & 7) != 0) {
    goto LABEL_17;
  }
  uint64_t v6 = result;
  if (*(unsigned __int8 *)(result + 272) >= 2u)
  {
LABEL_18:
    __break(0x550Au);
    return result;
  }

  if (!*(_BYTE *)(result + 272))
  {
    CC_LONG v7 = strlen(a2);
    return sub_1000CBC6C(v6, a2, v7);
  }

  if (!a2)
  {
LABEL_17:
    __break(0x5516u);
    goto LABEL_18;
  }

  else {
    return 536883205LL;
  }
}

uint64_t sub_1000CB94C(uint64_t result, void *lpsrc)
{
  if (!result) {
    goto LABEL_29;
  }
  uint64_t v2 = (_BYTE *)result;
  if ((result & 7) != 0) {
    goto LABEL_29;
  }
  if (!result || (result & 7) != 0) {
    goto LABEL_29;
  }
  uint64_t v4 = result;
  if (*(unsigned __int8 *)(result + 272) < 2u)
  {
    uint64_t v5 = 536883205LL;
    if (!*(_BYTE *)(result + 272))
    {
      if ((v2[56] & 1) != 0)
      {
        return 536883206LL;
      }

      else
      {
        v2[56] |= 1u;
        uint64_t v6 = sub_1000CE47C(result);
        uint64_t result = (*(uint64_t (**)(_BYTE *, uint64_t))(*(void *)v2 + 64LL))(v2, v6);
        uint64_t v5 = result;
        if (!(_DWORD)result)
        {
          if (!v6
            || (v6 & 7) != 0
            || (result = sub_100056CF8(v6), __p = 0LL, uint64_t v10 = 0LL, v11 = 0LL, !result)
            || (result & 7) != 0)
          {
LABEL_29:
            __break(0x5516u);
            goto LABEL_30;
          }

          if ((**(unsigned int (***)(uint64_t, void **, uint64_t))result)(result, &__p, 1LL))
          {
            if (v11 >= 0) {
              p_p = &__p;
            }
            else {
              p_p = __p;
            }
            if (v11 >= 0) {
              CC_LONG v8 = HIBYTE(v11);
            }
            else {
              CC_LONG v8 = v10;
            }
            uint64_t v5 = sub_1000CE494(v4, p_p, v8);
            (*(void (**)(uint64_t))(*(void *)v6 + 16LL))(v6);
          }

          else
          {
            uint64_t v5 = 0LL;
          }

          if (SHIBYTE(v11) < 0) {
            operator delete(__p);
          }
        }
      }
    }

    return v5;
  }

uint64_t sub_1000CBAB0(uint64_t result, void *lpsrc)
{
  if (!result) {
    goto LABEL_31;
  }
  uint64_t v2 = result;
  if ((result & 7) != 0) {
    goto LABEL_31;
  }
  if (!result) {
    sub_1000D276C();
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_31;
  }
  uint64_t result = sub_1000CE47C(result);
  if (!result) {
    sub_1000D276C();
  }
  uint64_t v4 = result;
  if ((result & 7) != 0) {
    goto LABEL_31;
  }
  uint64_t result = sub_100056CF8(result);
  if (!result) {
    sub_1000D276C();
  }
  std::string __p = 0LL;
  uint64_t v11 = 0LL;
  uint64_t v12 = 0LL;
  if ((result & 7) != 0) {
    goto LABEL_31;
  }
  if (!(**(unsigned int (***)(uint64_t, void **, void))result)(result, &__p, 0LL))
  {
    sub_1000CEAEC( 0,  4,  "%s:%d: workoutDataXMLrootTagParseCntx::CompleteParseProc currElem->GetCompleteTagString() failed",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/iSL/Source/XMLSignature/workoutDataXMLGenericTagParseCntx.cpp",  224);
    uint64_t v8 = 16LL;
    goto LABEL_25;
  }

  if (v12 >= 0) {
    p_p = &__p;
  }
  else {
    p_p = __p;
  }
  if (v12 >= 0) {
    CC_LONG v6 = HIBYTE(v12);
  }
  else {
    CC_LONG v6 = v11;
  }
  uint64_t v7 = sub_1000CE494(v3, p_p, v6);
  if (!(_DWORD)v7)
  {
    if (sub_1000CA0CC(v2) == -1)
    {
      sub_1000CE6A8(v3);
      goto LABEL_24;
    }

    unint64_t v9 = 0xAAAAAAAAAAAAAAAALL;
    (*(void (**)(uint64_t, unint64_t *))(*(void *)v4 + 24LL))(v4, &v9);
    uint64_t result = v9;
    if (!v9)
    {
LABEL_24:
      uint64_t v8 = 0LL;
      goto LABEL_25;
    }

    if ((v9 & 7) == 0)
    {
      (*(void (**)(void))(*(void *)v9 + 16LL))();
      goto LABEL_24;
    }

uint64_t sub_1000CBC6C(uint64_t result, const void *a2, CC_LONG a3)
{
  if (!result) {
    goto LABEL_10;
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_10;
  }
  int v4 = sub_1000CE494(result, a2, a3);
  uint64_t result = sub_1000CE47C(v3);
  if (v4 || !result)
  {
    sub_1000CEAEC( 0,  4,  "%s:%d: workoutDataXMLGenericTagParseCntx::SendDataToConsumers SigData->GetOutStreamCntlr() failed",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/iSL/Source/XMLSignature/workoutDataXMLGenericTagParseCntx.cpp",  289);
    return 2LL;
  }

  if ((result & 7) != 0)
  {
LABEL_10:
    __break(0x5516u);
  }

  else if (sub_1000C93FC(result))
  {
    return 0LL;
  }

  else
  {
    return 5LL;
  }

  return result;
}

uint64_t sub_1000CBD18(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000CBD50(result);
  }
  __break(0x5516u);
  return result;
}

void sub_1000CBD2C(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    unint64_t v1 = (void *)sub_1000CBD50(a1);
    operator delete(v1);
  }

uint64_t sub_1000CBD50(uint64_t result)
{
  if (!result || (v1 = result, (result & 7) != 0) || (*(void *)uint64_t result = off_100109FD0, ((result + 64) & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t v2 = (unint64_t *)(result + 64);
    sub_1000874CC(&v2);
    return sub_1000CA31C(v1);
  }

  return result;
}

uint64_t sub_1000CC784()
{
  uint64_t result = (uint64_t)operator new(0x68uLL);
  if ((result & 0xF) != 0 || (uint64_t v1 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t v2 = sub_1000CC814(result);
    *(void *)uint64_t v1 = off_10010A050;
    if (sub_1000CADD8(v2, (unint64_t)&off_10011BA38))
    {
      (*(void (**)(uint64_t))(*(void *)v1 + 8LL))(v1);
      return 0LL;
    }

    return v1;
  }

  return result;
}

void sub_1000CC7F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    sub_1000CADF4(a1, a2, a3, a3 + 8, 1);
  }
}

uint64_t sub_1000CC814(uint64_t result)
{
  if (!result
    || (uint64_t v1 = result, (result & 7) != 0)
    || (result += 8LL, ((v1 + 8) & 7) != 0)
    || (sub_100059C38((void *)result), uint64_t result = v1 + 56, ((v1 + 56) & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    sub_1000C9430(result);
    *(void *)uint64_t v1 = off_10010A088;
    *(_BYTE *)(v1 + 96) = 0;
    return v1;
  }

  return result;
}

uint64_t sub_1000CC874(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000CC8E4(result);
  }
  __break(0x5516u);
  return result;
}

void sub_1000CC888(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t v1 = (void *)sub_1000CC8E4(a1);
    operator delete(v1);
  }

uint64_t sub_1000CC8AC(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000CC8E4(result);
  }
  __break(0x5516u);
  return result;
}

void sub_1000CC8C0(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t v1 = (void *)sub_1000CC8E4(a1);
    operator delete(v1);
  }

uint64_t sub_1000CC8E4(uint64_t result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0) || (((_BYTE)result + 56) & 7) != 0 || ((result + 72) & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t v2 = (void *)(result + 72);
    sub_1000CC948(&v2);
    sub_1000CA5B4(v1 + 8);
    return v1;
  }

  return result;
}

void sub_1000CC948(void **a1)
{
  uint64_t v2 = (void **)*a1;
  if (*v2)
  {
    sub_1000C9DD8(v2, *v2);
    int v4 = (void **)*a1;
    if (*a1 && (v4 & 7) == 0 && (((_BYTE)v4 + 16) & 7) == 0)
    {
      if ((_BYTE *)v4[2] - (_BYTE *)*v4 >= 0)
      {
        operator delete(*v4);
        return;
      }

      goto LABEL_16;
    }

uint64_t sub_1000CC9D0(uint64_t result, uint64_t a2, unsigned int a3, char **a4, void *a5)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t v12 = 0LL;
    uint64_t v13 = 0LL;
    uint64_t inited = InitSigningContext(0LL);
    if (!inited) {
      return 0LL;
    }
    uint64_t v10 = (void *)inited;
    if (UpdateSigningContext(inited, a2, a3))
    {
      uint64_t v11 = FinalizeSigningContext(v10, &v13, &v12);
      if ((_DWORD)v11)
      {
        if (v13)
        {
          uint64_t v11 = sub_1000CCA9C((const char *)v13, v12, a4, a5);
          free(v13);
        }
      }
    }

    else
    {
      uint64_t v11 = 0LL;
    }

    free(v10);
    return v11;
  }

  return result;
}

uint64_t sub_1000CCA9C(const char *a1, int a2, char **a3, void *a4)
{
  uint64_t v8 = xmlBufferCreate();
  if (!v8) {
    return 0LL;
  }
  unint64_t v9 = v8;
  uint64_t v10 = xmlNewTextWriterMemory(v8, 0);
  if (!v10)
  {
    uint64_t v16 = 0LL;
LABEL_24:
    xmlBufferFree(v9);
    return v16;
  }

  uint64_t v11 = v10;
  if (xmlTextWriterWriteBase64(v10, a1, 0, a2) == -1) {
    goto LABEL_11;
  }
  xmlTextWriterFlush(v11);
  uint64_t v12 = xmlBufferContent(v9);
  uint64_t result = xmlBufferLength(v9);
  int v14 = result;
  uint64_t v15 = *a3;
  if (*a3)
  {
    if (a4 && (a4 & 7) == 0)
    {
      if ((*a4 & 0x80000000) != 0) {
        sub_1000D27A0(*a4 & 0x80000000LL);
      }
LABEL_16:
      uint64_t result = (uint64_t)memcpy(v15, v12, v14);
      BOOL v17 = __CFADD__(v15, v14);
      BOOL v18 = &v15[v14] >= v15;
      if (v14 < 0) {
        BOOL v18 = v17;
      }
      if (v18)
      {
        v15[v14] = 0;
        uint64_t v16 = 1LL;
        goto LABEL_23;
      }

      goto LABEL_28;
    }

uint64_t sub_1000CCBF4(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    if ((byte_10011C780 & 1) == 0)
    {
      unint64_t v2 = 0xAAAAAAAAAAAAAAAALL;
      uint64_t v1 = (const char *)sub_1000CB7C8();
      sub_1000CCA9C(v1, 1215, (char **)&qword_10011C778, &v2);
      byte_10011C780 = 1;
    }

    return qword_10011C778;
  }

  return result;
}

uint64_t sub_1000CCC68(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    if ((byte_10011C790 & 1) == 0)
    {
      unint64_t v2 = 0xAAAAAAAAAAAAAAAALL;
      uint64_t v1 = (const char *)sub_1000CB7BC();
      sub_1000CCA9C(v1, 1013, (char **)&qword_10011C788, &v2);
      byte_10011C790 = 1;
    }

    return qword_10011C788;
  }

  return result;
}

uint64_t sub_1000CCCDC(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    unint64_t v3 = 0xAAAAAAAAAAAAAAAALL;
    if ((byte_10011C791 & 1) == 0)
    {
      unint64_t v1 = 0xAAAAAAAAAAAAAAAALL;
      unint64_t v2 = 0LL;
      if (IapAuthGetAppCert(0LL, &v2, &v1))
      {
        sub_1000CCA9C((const char *)v2, v1, (char **)&qword_10011C798, &v3);
        byte_10011C791 = 1;
      }

      if (v2) {
        free(v2);
      }
    }

    return qword_10011C798;
  }

  return result;
}

xmlNode *sub_1000CCD68(uint64_t a1, xmlNode *a2, const char *a3)
{
  if (!a1 || (a1 & 7) != 0) {
LABEL_14:
  }
    __break(0x5516u);
  *(void *)&__int128 v6 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v6 + 1) = 0xAAAAAAAAAAAAAAAALL;
  content[2] = v6;
  content[3] = v6;
  content[0] = v6;
  content[1] = v6;
  unint64_t v25 = (char *)content;
  uint64_t v24 = 64LL;
  memset(__b, 170, sizeof(__b));
  uint64_t v22 = 2048LL;
  __int128 v23 = __b;
  if ((sub_1000CCA9C(a3, 20, &v25, &v24) & 1) == 0)
  {
LABEL_13:
    __break(0x5518u);
    goto LABEL_14;
  }

  xmlDocPtr v7 = xmlNewDoc((const xmlChar *)"1.0");
  uint64_t v8 = xmlNewTextWriterTree(v7, 0LL, 0);
  xmlTextWriterStartElement(v8, (const xmlChar *)"SignedInfo");
  xmlTextWriterWriteAttribute(v8, (const xmlChar *)"xmlns", (const xmlChar *)"http://www.w3.org/2000/09/xmldsig#");
  xmlTextWriterStartElement(v8, (const xmlChar *)"CanonicalizationMethod");
  xmlTextWriterWriteAttribute( v8,  (const xmlChar *)"Algorithm",  (const xmlChar *)"http://www.w3.org/2001/10/xml-exc-c14n#");
  xmlTextWriterEndElement(v8);
  xmlTextWriterStartElement(v8, (const xmlChar *)"SignatureMethod");
  xmlTextWriterWriteAttribute( v8,  (const xmlChar *)"Algorithm",  (const xmlChar *)"http://www.w3.org/2000/09/xmldsig#rsa-sha1");
  xmlTextWriterEndElement(v8);
  xmlTextWriterStartElement(v8, (const xmlChar *)"Reference");
  xmlTextWriterWriteAttribute(v8, (const xmlChar *)"URI", (const xmlChar *)"");
  xmlTextWriterStartElement(v8, (const xmlChar *)"Transforms");
  xmlTextWriterStartElement(v8, (const xmlChar *)"Transform");
  xmlTextWriterWriteAttribute( v8,  (const xmlChar *)"Algorithm",  (const xmlChar *)"http://www.w3.org/2000/09/xmldsig#enveloped-signature");
  xmlTextWriterEndElement(v8);
  xmlTextWriterEndElement(v8);
  xmlTextWriterStartElement(v8, (const xmlChar *)"DigestMethod");
  xmlTextWriterWriteAttribute( v8,  (const xmlChar *)"Algorithm",  (const xmlChar *)"http://www.w3.org/2000/09/xmldsig#sha1");
  xmlTextWriterEndElement(v8);
  xmlTextWriterWriteElement(v8, (const xmlChar *)"DigestValue", (const xmlChar *)content);
  xmlTextWriterEndElement(v8);
  xmlTextWriterEndElement(v8);
  xmlTextWriterEndDocument(v8);
  xmlFreeTextWriter(v8);
  RootElement = xmlDocGetRootElement(v7);
  uint64_t v10 = xmlCopyNodeList(RootElement);
  xmlFreeDoc(v7);
  doc_txt_ptr = 0LL;
  signed int v11 = sub_1000CD150((uint64_t)v10, &doc_txt_ptr);
  if (v11 >= 1 && doc_txt_ptr)
  {
    if (sub_1000CC9D0(a1, (uint64_t)doc_txt_ptr, v11, (char **)&v23, &v22))
    {
      xmlFree(doc_txt_ptr);
      doc_txt_ptr = 0LL;
      xmlSetProp(a2, (const xmlChar *)"xmlns", (const xmlChar *)"http://www.w3.org/2000/09/xmldsig#");
      xmlAddChild(a2, v10);
      uint64_t result = xmlNewNode(0LL, (const xmlChar *)"SignatureValue");
      if (result)
      {
        uint64_t v13 = result;
        xmlNodeAddContent(result, __b);
        xmlAddChild(a2, v13);
        xmlDocPtr v14 = xmlNewDoc((const xmlChar *)"1.0");
        uint64_t v15 = xmlNewTextWriterTree(v14, 0LL, 0);
        xmlTextWriterStartElement(v15, (const xmlChar *)"KeyInfo");
        xmlTextWriterStartElement(v15, (const xmlChar *)"X509Data");
        uint64_t v16 = (const xmlChar *)sub_1000CCCDC(a1);
        xmlTextWriterWriteElement(v15, (const xmlChar *)"X509Certificate", v16);
        BOOL v17 = (const xmlChar *)sub_1000CCC68(a1);
        xmlTextWriterWriteElement(v15, (const xmlChar *)"X509Certificate", v17);
        BOOL v18 = (const xmlChar *)sub_1000CCBF4(a1);
        xmlTextWriterWriteElement(v15, (const xmlChar *)"X509Certificate", v18);
        xmlTextWriterEndElement(v15);
        xmlTextWriterEndElement(v15);
        xmlTextWriterEndDocument(v15);
        xmlFreeTextWriter(v15);
        uint64_t v19 = xmlDocGetRootElement(v14);
        uint64_t v20 = xmlCopyNodeList(v19);
        xmlFreeDoc(v14);
        xmlAddChild(a2, v20);
        return (xmlNode *)1;
      }

      return result;
    }

    goto LABEL_13;
  }

  if (doc_txt_ptr) {
    xmlFree(doc_txt_ptr);
  }
  return 0LL;
}

uint64_t sub_1000CD150(uint64_t result, xmlChar **doc_txt_ptr)
{
  if (!result
    || (unint64_t v2 = (xmlNode *)result, (result & 7) != 0)
    || (unint64_t v3 = (uint64_t *)(result + 64), ((result + 64) & 7) != 0))
  {
LABEL_17:
    __break(0x5516u);
    return result;
  }

  uint64_t result = *v3;
  if (*v3)
  {
    if ((result & 7) != 0 || ((result + 24) & 7) != 0) {
      goto LABEL_17;
    }
    if (*(xmlNode **)(result + 24) == v2) {
      return xmlC14NDocDumpMemory((xmlDocPtr)result, 0LL, 1, 0LL, 0, doc_txt_ptr);
    }
  }

  xmlInitParser();
  xmlDocPtr v6 = xmlNewDoc((const xmlChar *)"1.0");
  if (v6)
  {
    xmlDocPtr v7 = v6;
    uint64_t v8 = xmlCopyNode(v2, 1);
    if (v8)
    {
      xmlDocSetRootElement(v7, v8);
      uint64_t v9 = xmlC14NDocDumpMemory(v7, 0LL, 1, 0LL, 0, doc_txt_ptr);
      xmlFreeDoc(v7);
      xmlCleanupParser();
      return v9;
    }

    xmlFreeDoc(v7);
  }

  xmlCleanupParser();
  return 0xFFFFFFFFLL;
}

uint64_t sub_1000CD25C(uint64_t result, xmlChar **a2, const char *a3)
{
  if (!result) {
    goto LABEL_11;
  }
  uint64_t v3 = result;
  if ((result & 7) != 0) {
    goto LABEL_11;
  }
  uint64_t result = 0xFFFFFFFFLL;
  if (a2)
  {
    if (a3)
    {
      uint64_t result = (uint64_t)xmlNewNode(0LL, (const xmlChar *)"Signature");
      if (result)
      {
        xmlDocPtr v6 = (xmlNode *)result;
        sub_1000CCD68(v3, (xmlNode *)result, a3);
        doc_txt_ptr = 0LL;
        uint64_t v7 = sub_1000CD150((uint64_t)v6, &doc_txt_ptr);
        xmlFreeNode(v6);
        uint64_t result = 0xFFFFFFFFLL;
        if ((int)v7 >= 1)
        {
          if (doc_txt_ptr)
          {
            if ((a2 & 7) == 0)
            {
              *a2 = doc_txt_ptr;
              return v7;
            }

uint64_t sub_1000CD314(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    CC_SHA1_Init((CC_SHA1_CTX *)(result + 8));
    return 0LL;
  }

  return result;
}

uint64_t sub_1000CD340(uint64_t result, const void *a2, unint64_t a3)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else if (!HIDWORD(a3))
  {
    CC_SHA1_Update((CC_SHA1_CTX *)(result + 8), a2, a3);
    return 0LL;
  }

  __break(0x5507u);
  return result;
}

uint64_t sub_1000CD378(uint64_t a1, uint64_t a2)
{
  if (!a1) {
    goto LABEL_62;
  }
  if ((a1 & 7) != 0) {
    goto LABEL_62;
  }
  memset(md, 170, 20);
  uint64_t v4 = sub_1000CC784();
  uint64_t v5 = (uint64_t)operator new(0x118uLL);
  if ((v5 & 0xF) != 0) {
    goto LABEL_62;
  }
  uint64_t v6 = v5;
  sub_1000CE2CC(v5);
  uint64_t v7 = operator new(0x18uLL);
  uint64_t v8 = (uint64_t)v7;
  sub_1000C8CB4(v7);
  memset(&v25, 170, sizeof(v25));
  sub_1000A7BAC(".tmp", (char **)a2, (char *)&v25);
  v9.tv_sec = 0xAAAAAAAAAAAAAAAALL;
  v9.tv_nsec = 0xAAAAAAAAAAAAAAAALL;
  *(timespec *)&v24.st_blkstd::string::size_type size = v9;
  *(timespec *)v24.st_qspare = v9;
  v24.st_birthtimespec = v9;
  *(timespec *)&v24.st_std::string::size_type size = v9;
  v24.st_mtimespec = v9;
  v24.st_ctimespec = v9;
  *(timespec *)&v24.st_uid = v9;
  v24.st_atimespec = v9;
  *(timespec *)&v24.st_dev = v9;
  else {
    uint64_t v10 = *(const char **)a2;
  }
  int v11 = stat(v10, &v24);
  if (v11) {
    sub_1000D27B4(v11);
  }
  if (!v4)
  {
    if ((v6 & 7) != 0) {
      goto LABEL_62;
    }
    goto LABEL_20;
  }

  CC_SHA1_Final(md, (CC_SHA1_CTX *)(a1 + 8));
  if ((v6 & 7) != 0) {
    goto LABEL_62;
  }
  sub_1000CE3BC((char *)v6, md, 20);
  sub_1000CE3D8((char *)v6, &v25);
  if ((v8 & 7) != 0) {
    goto LABEL_62;
  }
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(*(void *)v8 + 40LL))(v8, a2))
  {
    syslog(4, "inStream->InitStream failed\n");
    if ((v4 & 7) != 0) {
      goto LABEL_62;
    }
    goto LABEL_19;
  }

  if ((v4 & 7) != 0) {
    goto LABEL_62;
  }
  sub_1000CC7F8(v4, v8, v6);
  if (v12)
  {
    syslog(4, "parser->DoParse() failed\n");
LABEL_19:
    (*(void (**)(uint64_t))(*(void *)v4 + 8LL))(v4);
LABEL_20:
    (*(void (**)(uint64_t))(*(void *)v6 + 8LL))(v6);
    if (!v8) {
      goto LABEL_23;
    }
    if ((v8 & 7) == 0)
    {
      (*(void (**)(uint64_t))(*(void *)v8 + 8LL))(v8);
LABEL_23:
      if (!v4)
      {
LABEL_37:
        uint64_t v17 = 0xFFFFFFFFLL;
        goto LABEL_38;
      }

void sub_1000CD8F8(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  unint64_t v2 = (void *)qword_10011C7A0;
  qword_10011C7A0 = (uint64_t)v1;
}

uint64_t sub_1000CE24C(uint64_t result)
{
  if (!result
    || (uint64_t v1 = result, (result & 7) != 0)
    || (*(void *)uint64_t result = off_10010A150, (((_BYTE)result + 8) & 7) != 0)
    || (*(void *)uint64_t result = off_10010A0A8, *(void *)(result + 8) = off_10010A0D8, ((result + 232) & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    *(_OWORD *)(result + 257) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 24_Block_object_dispose((const void *)(v1 - 120), 8) = 0u;
    CC_SHA1_Init((CC_SHA1_CTX *)(result + 36));
    CC_SHA1_Init((CC_SHA1_CTX *)(v1 + 132));
    return v1;
  }

  return result;
}

uint64_t sub_1000CE2CC(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return sub_1000CE24C(result);
  }
  __break(0x5516u);
  return result;
}

void sub_1000CE2E0(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_10;
  }
  *(void *)a1 = off_10010A0A8;
  *(void *)(a1 + _Block_object_dispose((const void *)(v1 - 120), 8) = off_10010A0D8;
  char v2 = a1 + 8;
  uint64_t v3 = *(void *)(a1 + 264);
  if (v3)
  {
    if ((v3 & 7) == 0)
    {
      (*(void (**)(uint64_t))(*(void *)v3 + 8LL))(v3);
      goto LABEL_6;
    }

void sub_1000CE368(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    sub_1000CE2E0(a1);
  }
}

void sub_1000CE37C(uint64_t a1)
{
  uint64_t v1 = a1 - 8;
  if ((v1 & 7) != 0) {
    __break(0x5516u);
  }
  else {
    sub_1000CE2E0(v1);
  }
}

void sub_1000CE390(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    sub_1000CE2E0(a1);
    operator delete(v1);
  }

void sub_1000CE3B4(uint64_t a1)
{
}

char *sub_1000CE3BC(char *result, const void *a2, int a3)
{
  return result;
}

char *sub_1000CE3D8(char *result, const std::string *a2)
{
  if (!result) {
    goto LABEL_10;
  }
  char v2 = result;
  if ((result & 7) != 0
    || ((unint64_t)(result + 232) & 7) != 0
    || (std::string::operator=((std::string *)(result + 232), a2),
        uint64_t result = (char *)operator new(0x20uLL),
        (result & 0xF) != 0)
    || (uint64_t result = (char *)sub_1000C8F34(result), *((void *)v2 + 32) = result, (result & 7) != 0)
    || (sub_1000C903C((FILE *)result, (uint64_t)(v2 + 232)),
        uint64_t result = (char *)operator new(0x20uLL),
        (result & 0xF) != 0)
    || (uint64_t v3 = *((void *)v2 + 32), (v3 & 7) != 0)
    || (result & 7) != 0)
  {
LABEL_10:
    __break(0x5516u);
  }

  else
  {
    *(void *)uint64_t result = off_100109D40;
    *((void *)result + 1) = v3;
    *((void *)result + 2) = 0LL;
    *((void *)result + 3) = 0LL;
    *((void *)v2 + 33) = result;
  }

  return result;
}

uint64_t sub_1000CE47C(uint64_t result)
{
  if (result && (result & 7) == 0) {
    return *(void *)(result + 264);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000CE494(uint64_t result, const void *a2, CC_LONG a3)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    CC_SHA1_Update((CC_SHA1_CTX *)(result + 36), a2, a3);
    return 0LL;
  }

  return result;
}

uint64_t sub_1000CE4C0(uint64_t a1)
{
  if (!a1 || (a1 & 7) != 0) {
    goto LABEL_17;
  }
  memset(v17, 170, 20);
  uint64_t v15 = 0LL;
  memset(md, 170, 20);
  *(void *)&__int128 v2 = 0xAAAAAAAAAAAAAAAALL;
  *((void *)&v2 + 1) = 0xAAAAAAAAAAAAAAAALL;
  __int128 v13 = v2;
  __int128 v14 = v2;
  __int128 v11 = v2;
  __int128 v12 = v2;
  __int128 v9 = v2;
  __int128 v10 = v2;
  uint64_t v8 = off_100106910;
  sub_1000CD314((uint64_t)&v8);
  CC_SHA1_Final(md, (CC_SHA1_CTX *)(a1 + 132));
  CC_SHA1_Final(v17, (CC_SHA1_CTX *)(a1 + 36));
  if (*(void *)md != *(void *)(a1 + 16)
    || *(void *)&md[8] != *(void *)(a1 + 24)
    || *(unsigned int *)&md[16] != (unint64_t)*(unsigned int *)(a1 + 32))
  {
    sub_1000CEAEC( 0,  4,  "%s:%d: XmlSigData::WriteSignature File verification failed skipping signature",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/iSL/Source/XMLSignature/xmlSigData.cpp",  95);
    return 1LL;
  }

  int v6 = sub_1000CD25C((uint64_t)&v8, &v15, (const char *)v17);
  uint64_t result = 0LL;
  if (v6 && v15)
  {
    uint64_t v7 = *(void *)(a1 + 256);
    if (v7 && (v7 & 7) == 0)
    {
      (*(void (**)(uint64_t))(*(void *)v7 + 16LL))(v7);
      xmlFree(v15);
      return 0LL;
    }

uint64_t sub_1000CE618(uint64_t result, uint64_t a2)
{
  if (!result || (uint64_t v2 = result, (result & 7) != 0))
  {
    __break(0x5516u);
  }

  else
  {
    char data = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 16LL))(a2);
    return CC_SHA1_Update((CC_SHA1_CTX *)(v2 + 132), &data, 1u);
  }

  return result;
}

uint64_t sub_1000CE670(uint64_t a1, uint64_t a2)
{
  return sub_1000CE618(a1 - 8, a2);
}

uint64_t sub_1000CE678(uint64_t result, const void *a2, CC_LONG a3)
{
  if (result && (result & 7) == 0) {
    return CC_SHA1_Update((CC_SHA1_CTX *)(result + 132), a2, a3);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000CE690(uint64_t result, const void *a2, CC_LONG a3)
{
  if ((((_BYTE)result - 8) & 7) == 0) {
    return CC_SHA1_Update((CC_SHA1_CTX *)(result + 124), a2, a3);
  }
  __break(0x5516u);
  return result;
}

uint64_t sub_1000CE6A8(uint64_t result)
{
  if (!result || (result & 7) != 0) {
    __break(0x5516u);
  }
  else {
    *(_BYTE *)(result + 272) = 1;
  }
  return result;
}

uint64_t sub_1000CE6C4(uint64_t result)
{
  if (!result || (uint64_t v1 = result, (result & 7) != 0))
  {
LABEL_16:
    __break(0x5516u);
    goto LABEL_17;
  }

  if (*(unsigned __int8 *)(result + 272) < 2u)
  {
    if (!*(_BYTE *)(result + 272))
    {
      uint64_t v2 = 536883205LL;
      goto LABEL_8;
    }

    if (sub_1000CE4C0(result))
    {
      uint64_t v2 = 1LL;
LABEL_8:
      sub_1000CEAEC( 0,  4,  "%s:%d: XmlSigData::CompleteSignedFile WriteSignature() failed or root tag not ready for signature",  "/Library/Caches/com.apple.xbs/Sources/iapd/iapd/iSL/Source/XMLSignature/xmlSigData.cpp",  131);
      return v2;
    }

    unint64_t v3 = 0xAAAAAAAAAAAAAAAALL;
    uint64_t result = *(void *)(v1 + 264);
    if (result && (result & 7) == 0)
    {
      (*(void (**)(uint64_t, unint64_t *))(*(void *)result + 24LL))(result, &v3);
      uint64_t result = v3;
      if (!v3) {
        return 0LL;
      }
      if ((v3 & 7) == 0)
      {
        (*(void (**)(void))(*(void *)v3 + 16LL))();
        return 0LL;
      }
    }

    goto LABEL_16;
  }

uint64_t sub_1000CE79C(uint64_t result)
{
  if (!result || (result & 7) != 0) {
    __break(0x5516u);
  }
  return result;
}

void sub_1000CE7B0(void *__p)
{
  else {
    operator delete(__p);
  }
}

uint64_t sub_1000CE7C4(uint64_t result, _OWORD *a2)
{
  if (result >= 8)
  {
    __break(0x550Au);
  }

  else if (result > 1)
  {
    return 22LL;
  }

  else
  {
    return sub_1000CE82C(a2);
  }

  return result;
}

uint64_t sub_1000CE7E8(uint64_t result, __darwin_time_t *a2)
{
  if (result >= 8)
  {
    __break(0x550Au);
  }

  else if (result > 1)
  {
    return 22LL;
  }

  else
  {
    return sub_1000CE840(a2);
  }

  return result;
}

int *sub_1000CE80C(int *result, __darwin_time_t *a2)
{
  if (result >= 8)
  {
    __break(0x550Au);
  }

  else if ((_DWORD)result)
  {
    return (int *)22;
  }

  else
  {
    return sub_1000CE8A4(a2);
  }

  return result;
}

uint64_t sub_1000CE82C(_OWORD *a1)
{
  *a1 = xmmword_1000E10F0;
  return 0LL;
}

uint64_t sub_1000CE840(__darwin_time_t *a1)
{
  v4.tv_sec = 0xAAAAAAAAAAAAAAAALL;
  *(void *)&v4.tv_usec = 0xAAAAAAAAAAAAAAAALL;
  uint64_t result = gettimeofday(&v4, 0LL);
  if (!(_DWORD)result)
  {
    *a1 = v4.tv_sec;
    uint64_t v3 = 1000LL * v4.tv_usec;
    else {
      __break(0x550Cu);
    }
  }

  return result;
}

int *sub_1000CE8A4(__darwin_time_t *a1)
{
  __darwin_time_t v1 = a1[1];
  v3.tv_sec = *a1;
  *(&v3.tv_usec + 1) = -1431655766;
  v3.tv_usec = (int)v1 / 1000;
  if ((settimeofday(&v3, 0LL) & 0x80000000) == 0) {
    return 0LL;
  }
  uint64_t result = __error();
  __break(0x5516u);
  return result;
}

uint64_t sub_1000CE91C(uint64_t result, unsigned int a2)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    *(void *)uint64_t result = off_10010A170;
    if (a2 < 8)
    {
      *(_DWORD *)(result + _Block_object_dispose((const void *)(v1 - 120), 8) = a2;
      return result;
    }
  }

  __break(0x550Au);
  return result;
}

void *sub_1000CE94C(void *result)
{
  else {
    *uint64_t result = off_10010A170;
  }
  return result;
}

void *sub_1000CE96C(void *result)
{
  else {
    *uint64_t result = off_10010A170;
  }
  return result;
}

void sub_1000CE98C(void *__p)
{
  else {
    operator delete(__p);
  }
}

uint64_t sub_1000CE9A0(uint64_t result)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
    goto LABEL_6;
  }

  uint64_t result = *(unsigned int *)(result + 8);
  if (result >= 8) {
LABEL_6:
  }
    __break(0x550Au);
  return result;
}

uint64_t sub_1000CE9C4(uint64_t result, _OWORD *a2)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t result = *(unsigned int *)(result + 8);
  }

  __break(0x550Au);
  return result;
}

uint64_t sub_1000CE9E8(uint64_t result, __darwin_time_t *a2)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t result = *(unsigned int *)(result + 8);
  }

  __break(0x550Au);
  return result;
}

int *sub_1000CEA0C(int *result, __darwin_time_t *a2)
{
  if (!result || (result & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t result = (int *)result[2];
  }

  __break(0x550Au);
  return result;
}

uint64_t start()
{
  uint64_t v0 = objc_alloc_init(&OBJC_CLASS___NSAutoreleasePool);
  objc_msgSend(+[IAPServer sharedIAPServer](IAPServer, "sharedIAPServer"), "run");

  return 0LL;
}

BOOL sub_1000CEA70(BOOL result)
{
  return result;
}

void sub_1000CEA98(unsigned int a1, NSString *format, ...)
{
  if (a1 >= 0x10)
  {
    __break(0x550Au);
  }

  else if ((qword_10011C7B0 & (1 << a1)) != 0)
  {
    NSLogv(format, va);
  }

void sub_1000CEAEC(unsigned int a1, int a2, char *a3, ...)
{
  if (a1 >= 0x10)
  {
    __break(0x550Au);
  }

  else if ((qword_10011C7B0 & (1 << a1)) != 0)
  {
    vsyslog(a2, a3, va);
  }

void sub_1000CEB44()
{
  uint64_t v0 = 0LL;
  qword_10011C7B0 = 0LL;
  do
  {
    if (CFPreferencesGetAppBooleanValue( *(CFStringRef *)&dword_10010A1B0[v0 + 2],  *(CFStringRef *)&dword_10010A1B0[v0 + 4],  0LL))
    {
      unsigned int v1 = dword_10010A1B0[v0];
      if (v1 >= 0x10)
      {
        __break(0x550Au);
        return;
      }

      qword_10011C7B0 |= 1LL << v1;
    }

    v0 += 6LL;
  }

  while (v0 != 84);
  if ((MGGetBoolAnswer(@"InternalBuild") & 1) != 0)
  {
    NSLog(@"Internal build, enable Verbose Logging");
    qword_10011C7B0 |= 1uLL;
    uint64_t v2 = "Enabled";
  }

  else if ((qword_10011C7B0 & 1) != 0)
  {
    uint64_t v2 = "Enabled";
  }

  else
  {
    uint64_t v2 = "Disabled";
  }

  NSLog(@"Verbose Logging %s", v2);
}

void sub_1000CEDC8(void *a1, int a2, int a3)
{
  if (a2)
  {
    switch(a3)
    {
      case -469794794:
        uint64_t v8 = sub_10002662C((int)objc_msgSend(objc_msgSend(a1, "portNumber"), "intValue"));
        if (!v8)
        {
          uint64_t v8 = sub_1000266D8((int)objc_msgSend(objc_msgSend(a1, "portNumber"), "intValue"));
          if (!v8)
          {
            NSLog( @"ERROR - kIOAccessoryManagerMessageUSBBatteryPackChange Still no podTransport for manager %d",  objc_msgSend(objc_msgSend(a1, "portNumber"), "intValue"));
            return;
          }
        }

        uint64_t v9 = (uint64_t)v8;
        uint64_t v6 = sub_1000451B0();
        if (v6 && (v6 & 7) == 0)
        {
          sub_100046C8C(v6, v9, 0LL);
          return;
        }

        goto LABEL_33;
      case -469794795:
        __int128 v10 = sub_10002662C((int)objc_msgSend(objc_msgSend(a1, "portNumber"), "intValue"));
        if (!v10)
        {
          __int128 v10 = sub_1000266D8((int)objc_msgSend(objc_msgSend(a1, "portNumber"), "intValue"));
          if (!v10)
          {
            NSLog( @"ERROR - kIOAccessoryManagerMessageUSBCurrentLimitChange Still no podTransport for manager %d",  objc_msgSend(objc_msgSend(a1, "portNumber"), "intValue"));
            return;
          }
        }

        uint64_t v11 = (uint64_t)v10;
        unsigned int v12 = [a1 sendReserveCurrentNotification];
        uint64_t v6 = sub_1000451B0();
        BOOL v14 = (v6 & 7) == 0 && v6 != 0;
        if (v12)
        {
          if (v14)
          {
            sub_100046C5C(v6, v11, 0LL);
            [a1 setSendReserveCurrentNotification:0];
            return;
          }
        }

        else if (v14)
        {
          sub_100046C2C(v6, v11, 0LL);
          return;
        }

        goto LABEL_33;
      case -469794796:
        timeval v4 = sub_10002662C((int)objc_msgSend(objc_msgSend(a1, "portNumber"), "intValue"));
        if (!v4)
        {
          timeval v4 = sub_1000266D8((int)objc_msgSend(objc_msgSend(a1, "portNumber"), "intValue"));
          if (!v4)
          {
            NSLog( @"ERROR - kIOAccessoryManagerMessageUSBConnectChange Still no podTransport for manager %d",  objc_msgSend(objc_msgSend(a1, "portNumber"), "intValue"));
            return;
          }
        }

        uint64_t v5 = (uint64_t)v4;
        uint64_t v6 = sub_10004783C();
        if (v6 && (v6 & 7) == 0)
        {
          sub_10004B994(v6, v5);
          return;
        }

void sub_1000CFDF8(id a1)
{
  qword_10011C7B8 = -[NSUserDefaults initWithSuiteName:]( objc_alloc(&OBJC_CLASS___NSUserDefaults),  "initWithSuiteName:",  @"com.apple.CoreAccessories");
}

void *sub_1000CFE28(const char *a1, const void *a2)
{
  uint64_t result = (void *)sub_1000CFE60(a2);
  if (result) {
    return dlsym(result, a1);
  }
  return result;
}

const void *sub_1000CFE60(const void *a1)
{
  Mutable = (const __CFDictionary *)qword_10011C7C8;
  if (!qword_10011C7C8)
  {
    Mutable = CFDictionaryCreateMutable(0LL, 0LL, 0LL, 0LL);
    qword_10011C7C8 = (uint64_t)Mutable;
  }

  int Value = CFDictionaryGetValue(Mutable, a1);
  if (!Value)
  {
    switch((unint64_t)a1)
    {
      case 0uLL:
        uint64_t v4 = CPSystemRootDirectory();
        __int128 v10 = @"UIKit";
        uint64_t v5 = @"UIKit.framework";
        goto LABEL_7;
      case 1uLL:
        uint64_t v4 = CPSystemRootDirectory();
        __int128 v10 = @"MobileCoreServices";
        uint64_t v5 = @"MobileCoreServices.framework";
LABEL_7:
        uint64_t v6 = @"Frameworks";
        goto LABEL_14;
      case 2uLL:
        uint64_t v4 = CPSystemRootDirectory();
        __int128 v10 = @"SpringBoardServices";
        uint64_t v5 = @"SpringBoardServices.framework";
        goto LABEL_13;
      case 3uLL:
        uint64_t v4 = CPSystemRootDirectory();
        __int128 v10 = @"FrontBoardServices";
        uint64_t v5 = @"FrontBoardServices.framework";
        goto LABEL_13;
      case 4uLL:
        uint64_t v4 = CPSystemRootDirectory();
        __int128 v10 = @"CarKit";
        uint64_t v5 = @"CarKit.framework";
        goto LABEL_13;
      case 5uLL:
        uint64_t v4 = CPSystemRootDirectory();
        __int128 v10 = @"VisualVoicemail";
        uint64_t v5 = @"VisualVoicemail.framework";
        goto LABEL_13;
      case 6uLL:
        uint64_t v4 = CPSystemRootDirectory();
        __int128 v10 = @"AccessoryAudio";
        uint64_t v5 = @"AccessoryAudio.framework";
LABEL_13:
        uint64_t v6 = @"PrivateFrameworks";
LABEL_14:
        uint64_t v7 = +[NSString pathWithComponents:]( &OBJC_CLASS___NSString,  "pathWithComponents:",  +[NSArray arrayWithObjects:]( &OBJC_CLASS___NSArray,  "arrayWithObjects:",  v4,  @"System",  @"Library",  v6,  v5,  v10,  0LL));
        if (!v7) {
          goto LABEL_17;
        }
        uint64_t v8 = dlopen(-[NSString UTF8String](v7, "UTF8String"), 1);
        if (!v8) {
          goto LABEL_17;
        }
        int Value = v8;
        CFDictionarySetValue((CFMutableDictionaryRef)qword_10011C7C8, a1, v8);
        break;
      default:
LABEL_17:
        NSLog(@"Could not load source: %ld", a1);
        int Value = 0LL;
        break;
    }
  }

  pthread_mutex_unlock(&stru_10011BA78);
  return Value;
}

Class sub_1000D00C0(NSString *a1, const void *a2)
{
  Class result = (Class)sub_1000CFE60(a2);
  if (result) {
    return NSClassFromString(a1);
  }
  return result;
}

void sub_1000D0320(_Unwind_Exception *a1)
{
}

id sub_1000D0338(uint64_t a1)
{
  id result = [*(id *)(a1 + 40) length];
  uint64_t v3 = *(void *)(a1 + 32) + 40LL;
  if ((v3 & 7) != 0)
  {
LABEL_6:
    __break(0x5516u);
    goto LABEL_7;
  }

  if (!__CFADD__(*(void *)v3, result))
  {
    *(void *)v3 += result;
    uint64_t v4 = (id *)(*(void *)(a1 + 32) + 8LL);
    if ((v4 & 7) == 0)
    {
      id result = [*v4 addObject:*(void *)(a1 + 40)];
      uint64_t v5 = *(void *)(a1 + 32) + 40LL;
      if ((v5 & 7) == 0)
      {
        *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = *(void *)v5 >> 10 > 4uLL;
        return result;
      }
    }

    goto LABEL_6;
  }

void sub_1000D059C(_Unwind_Exception *a1)
{
}

id sub_1000D05B8(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) _log:*(void *)(a1 + 40)];
  *(_BYTE *)(*(void *)(*(void *)(a1 + 48) + 8LL) + 24LL) = (_BYTE)result;
  return result;
}

void sub_1000D0714( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
}

char *sub_1000D0730(uint64_t a1)
{
  id result = (char *)[*(id *)(a1 + 48) _log:+[NSString stringWithFormat:]( NSString, "stringWithFormat:", @"%@ %@<", *(void *)(a1 + 32), *(void *)(a1 + 40))];
  uint64_t v3 = *(void *)(*(void *)(a1 + 64) + 8LL);
  unsigned int v4 = *(unsigned __int8 *)(v3 + 24);
  if (v4 < 2)
  {
    *(_BYTE *)(v3 + 24) = v4 | result;
    uint64_t v5 = *(void **)(a1 + 56);
    if (v5)
    {
      uint64_t v6 = (unsigned __int8 *)[v5 bytes];
      id result = (char *)[*(id *)(a1 + 56) length];
      if (result)
      {
        uint64_t v7 = result;
        while (v6)
        {
          id result = (char *)[*(id *)(a1 + 48) _log:+[NSString stringWithFormat:]( NSString, "stringWithFormat:", @"%02x ", *v6)];
          uint64_t v8 = *(void *)(*(void *)(a1 + 64) + 8LL);
          unsigned int v9 = *(unsigned __int8 *)(v8 + 24);
          if (v9 > 1) {
            goto LABEL_11;
          }
          *(_BYTE *)(v8 + 24) = v9 | result;
          ++v6;
          if (!--v7) {
            goto LABEL_9;
          }
        }

        goto LABEL_12;
      }
    }

void sub_1000D09C0(uint64_t a1)
{
  uint64_t v2 = objc_autoreleasePoolPush();
  uint64_t v3 = +[NSFileManager defaultManager](&OBJC_CLASS___NSFileManager, "defaultManager");
  unsigned int v4 = *(void **)(a1 + 32);
  if (v4[3])
  {
    if (-[NSFileManager fileExistsAtPath:](v3, "fileExistsAtPath:")) {
      goto LABEL_8;
    }
    unsigned int v4 = *(void **)(a1 + 32);
  }

  [v4 createFilePath];
  uint64_t v5 = (id *)(*(void *)(a1 + 32) + 24LL);
  uint64_t v6 = fopen((const char *)[*v5 fileSystemRepresentation], "a");
  if (v6) {
    fclose(v6);
  }
LABEL_8:
  uint64_t v7 = *(void *)(a1 + 32) + 24LL;
  if ((v7 & 7) != 0) {
    goto LABEL_20;
  }
  uint64_t v8 = +[NSFileHandle fileHandleForWritingAtPath:]( &OBJC_CLASS___NSFileHandle,  "fileHandleForWritingAtPath:",  *(void *)v7);
  __int128 v19 = 0u;
  __int128 v20 = 0u;
  __int128 v21 = 0u;
  __int128 v22 = 0u;
  unsigned int v9 = (id *)(*(void *)(a1 + 32) + 8LL);
  uint64_t v10 = v8;
  id v11 = *v9;
  id v12 = [*v9 countByEnumeratingWithState:&v19 objects:v23 count:16];
  if (v12)
  {
    id v13 = v12;
    uint64_t v14 = *(void *)v20;
    do
    {
      for (unint64_t i = 0LL; i != v13; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v20 != v14) {
          objc_enumerationMutation(v11);
        }
        uint64_t v16 = *(void *)(*((void *)&v19 + 1) + 8LL * (void)i);
        -[NSFileHandle seekToEndOfFile](v10, "seekToEndOfFile", (void)v19);
        -[NSFileHandle writeData:](v10, "writeData:", v16);
      }

      id v13 = [v11 countByEnumeratingWithState:&v19 objects:v23 count:16];
    }

    while (v13);
  }

  uint64_t v17 = (id *)(*(void *)(a1 + 32) + 8LL);
  if ((v17 & 7) != 0
    || ([*v17 removeAllObjects], uint64_t v18 = *(void *)(a1 + 32) + 40, (v18 & 7) != 0))
  {
LABEL_20:
    __break(0x5516u);
  }

  *(void *)uint64_t v18 = 0LL;
  objc_autoreleasePoolPop(v2);
}

void sub_1000D0C34(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (((v1 + 48) & 7) != 0) {
    goto LABEL_6;
  }
  if (*(void *)(v1 + 48)) {
    return;
  }
  uint64_t v3 =  +[NSTimer timerWithTimeInterval:target:selector:userInfo:repeats:]( &OBJC_CLASS___NSTimer,  "timerWithTimeInterval:target:selector:userInfo:repeats:",  3.0);
  uint64_t v4 = *(void *)(a1 + 32) + 48LL;
  if ((v4 & 7) != 0
    || (*(void *)uint64_t v4 = v3,
        Main = CFRunLoopGetMain(),
        uint64_t v6 = (CFRunLoopTimerRef *)(*(void *)(a1 + 32) + 48LL),
        (v6 & 7) != 0))
  {
LABEL_6:
    __break(0x5516u);
  }

  else
  {
    CFRunLoopAddTimer(Main, *v6, kCFRunLoopCommonModes);
  }

void sub_1000D0D44(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32) + 48LL;
  if ((v1 & 7) != 0) {
    goto LABEL_8;
  }
  if (!*(void *)v1) {
    return;
  }
  Main = CFRunLoopGetMain();
  uint64_t v4 = (CFRunLoopTimerRef *)(*(void *)(a1 + 32) + 48LL);
  if ((v4 & 7) != 0
    || (CFRunLoopRemoveTimer(Main, *v4, kCFRunLoopCommonModes),
        uint64_t v5 = (id *)(*(void *)(a1 + 32) + 48LL),
        (v5 & 7) != 0)
    || (*v5, uint64_t v6 = *(void *)(a1 + 32) + 48LL, (v6 & 7) != 0))
  {
LABEL_8:
    __break(0x5516u);
    return;
  }

  *(void *)uint64_t v6 = 0LL;
}

void sub_1000D0E58(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40) + 48LL;
  if ((v1 & 7) != 0) {
    goto LABEL_6;
  }
  uint64_t v3 = *(void **)(a1 + 32);

  uint64_t v4 = *(void *)(a1 + 40) + 48LL;
  if ((v4 & 7) != 0)
  {
LABEL_6:
    __break(0x5516u);
    return;
  }

  *(void *)uint64_t v4 = 0LL;
}

void sub_1000D1194( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void sub_1000D11AC(uint64_t a1, uint64_t a2)
{
}

void sub_1000D11BC(uint64_t a1)
{
}

void *sub_1000D11C8(void *result)
{
  uint64_t v1 = (id *)(result[4] + 24LL);
  if ((v1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t v2 = result;
    id result = *v1;
    *(void *)(*(void *)(v2[5] + 8LL) + 40LL) = result;
  }

  return result;
}

void sub_1000D12D4( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

void *sub_1000D12EC(void *result)
{
  uint64_t v1 = (id *)(result[4] + 40LL);
  if ((v1 & 7) != 0)
  {
    __break(0x5516u);
  }

  else
  {
    uint64_t v2 = result;
    id result = *v1;
    *(void *)(*(void *)(v2[5] + 8LL) + 40LL) = result;
  }

  return result;
}

void sub_1000D13F0(uint64_t a1, uint64_t a2)
{
}

void sub_1000D1400(uint64_t a1)
{
}

void sub_1000D140C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32) + 32LL;
  if ((v1 & 7) != 0)
  {
    __break(0x5516u);
LABEL_7:
    __break(0x5510u);
    return;
  }

  uint64_t v2 = *(void *)v1;
  if (v2)
  {
    *(void *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL) = v2;
    uint64_t v3 = *(dispatch_object_s **)(*(void *)(*(void *)(a1 + 40) + 8LL) + 40LL);
    if (v3)
    {
      dispatch_retain(v3);
      return;
    }

    goto LABEL_7;
  }

void *sub_1000D15E0(void *result)
{
  uint64_t v1 = (void **)(result[4] + 24LL);
  if ((v1 & 7) != 0)
  {
LABEL_6:
    __break(0x5516u);
    return result;
  }

  uint64_t v2 = result;
  uint64_t v3 = *v1;
  if (v3 != (void *)result[5])
  {

    id result = [(id)v2[5] copy];
    uint64_t v4 = v2[4] + 24LL;
    if ((v4 & 7) == 0)
    {
      *(void *)uint64_t v4 = result;
      return [(id)v2[4] _reloadEventHandler];
    }

    goto LABEL_6;
  }

  return result;
}

void *sub_1000D16C0(void *result)
{
  uint64_t v1 = (void **)(result[4] + 40LL);
  if ((v1 & 7) != 0)
  {
LABEL_6:
    __break(0x5516u);
    return result;
  }

  uint64_t v2 = result;
  uint64_t v3 = *v1;
  if (v3 != (void *)result[5])
  {

    id result = [(id)v2[5] copy];
    uint64_t v4 = v2[4] + 40LL;
    if ((v4 & 7) == 0)
    {
      *(void *)uint64_t v4 = result;
      return [(id)v2[4] _reloadEventHandler];
    }

    goto LABEL_6;
  }

  return result;
}

void sub_1000D17A0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (((v1 + 32) & 7) != 0) {
    goto LABEL_10;
  }
  uint64_t v3 = *(dispatch_object_s **)(v1 + 32);
  if (v3 == *(dispatch_object_s **)(a1 + 40)) {
    return;
  }
  if (v3)
  {
    dispatch_release(v3);
    uint64_t v1 = *(void *)(a1 + 32);
  }

  uint64_t v4 = (void *)(v1 + 32);
  if ((v4 & 7) != 0
    || (*uint64_t v4 = *(void *)(a1 + 40),
        uint64_t v5 = (dispatch_object_t *)(*(void *)(a1 + 32) + 32LL),
        (v5 & 7) != 0))
  {
LABEL_10:
    __break(0x5516u);
    return;
  }

  if (*v5) {
    dispatch_retain(*v5);
  }
}

void sub_1000D1998(void *a1, _xpc_connection_s *object)
{
  if (object == (_xpc_connection_s *)&_xpc_error_connection_invalid)
  {
    *(_BYTE *)(a1[4] + 48LL) = 0;
    goto LABEL_10;
  }

  if (object == (_xpc_connection_s *)&_xpc_error_connection_interrupted)
  {
LABEL_10:
    if (*(unsigned __int8 *)(a1[4] + 49LL) < 2u)
    {
      if (*(_BYTE *)(a1[4] + 49LL))
      {
        uint64_t v6 = a1[5];
        if (v6) {
          (*(void (**)(void))(v6 + 16))();
        }
      }

      return;
    }

    __break(0x550Au);
LABEL_17:
    __break(0x5510u);
LABEL_18:
    __break(0x5516u);
    return;
  }

  if (!object) {
    goto LABEL_17;
  }
  if (xpc_get_type(object) == (xpc_type_t)&_xpc_type_connection)
  {
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472LL;
    void v8[2] = sub_1000D1ADC;
    void v8[3] = &unk_10010A3D8;
    uint64_t v7 = a1[4];
    __int128 v9 = *(_OWORD *)(a1 + 5);
    v8[4] = v7;
    v8[5] = object;
    xpc_connection_set_event_handler(object, v8);
    xpc_connection_resume(object);
  }

  else if (xpc_get_type(object) == (xpc_type_t)&_xpc_type_dictionary)
  {
    uint64_t v4 = a1[6];
    if (v4)
    {
      uint64_t v5 = a1[4] + 8LL;
      if ((v5 & 7) == 0)
      {
        (*(void (**)(uint64_t, _xpc_connection_s *, void))(v4 + 16))(v4, object, *(void *)v5);
        return;
      }

      goto LABEL_18;
    }
  }

uint64_t sub_1000D1ADC(uint64_t result, void *a2)
{
  if (a2 == &_xpc_error_connection_invalid)
  {
    *(_BYTE *)(*(void *)(result + 32) + 48LL) = 0;
  }

  else if (a2 != &_xpc_error_connection_interrupted)
  {
    uint64_t v2 = *(void *)(result + 56);
    if (v2) {
      return (*(uint64_t (**)(void))(v2 + 16))(*(void *)(result + 56));
    }
    return result;
  }

  if (*(unsigned __int8 *)(*(void *)(result + 32) + 49LL) >= 2u)
  {
    __break(0x550Au);
  }

  else if (*(_BYTE *)(*(void *)(result + 32) + 49LL))
  {
    id result = *(void *)(result + 48);
    if (result) {
      return (*(uint64_t (**)(void))(result + 16))();
    }
  }

  return result;
}

void sub_1000D1B48()
{
  if (qword_10011C7D8 != -1) {
    dispatch_once(&qword_10011C7D8, &stru_10010A420);
  }
  int v0 = dword_10011C7D0 + 1;
  if (dword_10011C7D0 != -1)
  {
    if ((v0 & 0xFFFFFF) == 0) {
      int v0 = dword_10011C7D0 + 2;
    }
    dword_10011C7D0 = v0;
    uint64_t v1 = -[NSBundle bundleIdentifier](+[NSBundle mainBundle](&OBJC_CLASS___NSBundle, "mainBundle"), "bundleIdentifier");
    if (-[NSString caseInsensitiveCompare:](v1, "caseInsensitiveCompare:", @"com.apple.iapd"))
    {
      if (-[NSString caseInsensitiveCompare:](v1, "caseInsensitiveCompare:", @"com.apple.iap2d"))
      {
        NSLog( @"%s:%s unknown daemon %@ creating connectionID",  "/Library/Caches/com.apple.xbs/Sources/iapd/common/SharedFunctions.m",  "Generate32BitConnectionID",  v1);
        unsigned int v2 = dword_10011C7D0 | 0xFF000000;
LABEL_12:
        dword_10011C7D0 = v2;
        return;
      }

      int v3 = dword_10011C7D0;
      int v4 = 0x2000000;
    }

    else
    {
      int v3 = dword_10011C7D0;
      int v4 = 0x1000000;
    }

    unsigned int v2 = v4 & 0xFF000000 | v3 & 0xFFFFFF;
    goto LABEL_12;
  }

  __break(0x5500u);
}

void sub_1000D1C34(id a1)
{
  dword_10011C7D0 = arc4random();
}

id sub_1000D1C50(uint64_t a1)
{
  uint64_t v1 = +[NSString stringWithUTF8String:](&OBJC_CLASS___NSString, "stringWithUTF8String:", a1);
  Class v2 = sub_1000D00C0(@"LSApplicationProxy", (const void *)1);
  Class v3 = sub_1000D00C0(@"LSApplicationWorkspace", (const void *)1);
  uint64_t v8 = 0LL;
  __int128 v9 = &v8;
  uint64_t v10 = 0x2020000000LL;
  char v11 = 0;
  id result = objc_msgSend(-[objc_class defaultWorkspace](v3, "defaultWorkspace"), "applicationIsInstalled:", v1);
  if ((_DWORD)result)
  {
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472LL;
    void v7[2] = sub_1000D1D7C;
    void v7[3] = &unk_10010A448;
    v7[4] = -[objc_class applicationProxyForIdentifier:](v2, "applicationProxyForIdentifier:", v1);
    v7[5] = &v8;
    id result = objc_msgSend( -[objc_class defaultWorkspace](v3, "defaultWorkspace"),  "enumerateBundlesOfType:block:",  4,  v7);
  }

  unsigned int v5 = *((unsigned __int8 *)v9 + 24);
  if (v5 >= 2)
  {
    __break(0x550Au);
  }

  else
  {
    BOOL v6 = v5 != 0;
    _Block_object_dispose(&v8, 8);
    return (id)v6;
  }

  return result;
}

void sub_1000D1D60( _Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
}

id sub_1000D1D7C(uint64_t a1, void *a2, _BYTE *a3)
{
  id result = [a2 isEqual:*(void *)(a1 + 32)];
  *(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) = (_BYTE)result;
  if (*(unsigned __int8 *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL) >= 2u)
  {
    __break(0x550Au);
    goto LABEL_7;
  }

  if (!*(_BYTE *)(*(void *)(*(void *)(a1 + 40) + 8LL) + 24LL)) {
    return result;
  }
  if (!a3)
  {
LABEL_7:
    __break(0x5516u);
    return result;
  }

  *a3 = 1;
  return result;
}

BOOL sub_1000D1DE0(uint64_t a1)
{
  Class v2 = objc_autoreleasePoolPush();
  Class v3 = +[NSString stringWithCString:encoding:](&OBJC_CLASS___NSString, "stringWithCString:encoding:", a1, 4LL);
  unint64_t v4 = 0LL;
  do
  {
    NSComparisonResult v5 = -[NSString caseInsensitiveCompare:](v3, "caseInsensitiveCompare:", *(&off_10010A468 + v4));
    if (v4 > 0xF) {
      break;
    }
    ++v4;
  }

  while (v5);
  BOOL v6 = v5 == NSOrderedSame;
  objc_autoreleasePoolPop(v2);
  return v6;
}

BOOL sub_1000D1E60()
{
  return CFPreferencesGetAppBooleanValue(@"GreenValkyrie", @"com.apple.iaptransportd", 0LL) != 0;
}

void sub_1000D1F7C(id a1)
{
  qword_10011C7E0 = (uint64_t)asl_open(0LL, "IAP", 2u);
  if (qword_10011C7E0) {
    qword_10011C7E8 = (uint64_t)asl_new(0);
  }
  else {
    syslog(3, "Couldn't open Event Log file");
  }
}

void sub_1000D21B0(const char *a1, uint64_t a2, char a3)
{
  if (!_AXSVoiceOverTouchEnabled())
  {
    NSLog( @"%s:%s-%d ERROR - trying to talk to VOT without enabling it first!\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/common/IAPVoiceOver.m",  "VoiceOver",  98LL);
    return;
  }

  BOOL v6 = objc_autoreleasePoolPush();
  xpc_object_t v7 = xpc_dictionary_create(0LL, 0LL, 0LL);
  if (v7)
  {
    uint64_t v8 = v7;
    xpc_dictionary_set_string(v7, "requestType", "VoiceOver");
    if (a1)
    {
      xpc_dictionary_set_string(v8, "VoiceOver", a1);
      __int128 v9 = (const char *)[IAPAppEAClientXPC UTF8String];
      if (v9)
      {
        mach_service = xpc_connection_create_mach_service(v9, 0LL, 0LL);
        if (!mach_service)
        {
          NSLog( @"%s:%s-%d ERROR - No connection made!\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/common/IAPVoiceOver.m",  "VoiceOver",  90LL);
LABEL_28:
          xpc_release(v8);
          objc_autoreleasePoolPop(v6);
          return;
        }

        char v11 = mach_service;
        xpc_connection_set_event_handler(mach_service, &stru_10010A528);
        xpc_connection_resume(v11);
        id v19 = 0LL;
        id v12 = +[NSPropertyListSerialization dataWithPropertyList:format:options:error:]( &OBJC_CLASS___NSPropertyListSerialization,  "dataWithPropertyList:format:options:error:",  a2,  200LL,  0LL,  &v19);
        if (!v12)
        {
          if (v19) {
            uint64_t v15 = (const __CFString *)[v19 description];
          }
          else {
            uint64_t v15 = &stru_10010A828;
          }
          NSLog( @"%s:%s-%d ERROR - bogus userInfo with the following error: %@ ",  "/Library/Caches/com.apple.xbs/Sources/iapd/common/IAPVoiceOver.m",  "VoiceOver",  83LL,  v15);
LABEL_27:
          xpc_release(v11);
          goto LABEL_28;
        }

        id v13 = v12;
        id v14 = -[NSData bytes](v12, "bytes");
        if (v14)
        {
          xpc_dictionary_set_data(v8, "userInfo", v14, -[NSData length](v13, "length"));
          if ((a3 & 1) != 0)
          {
            xpc_connection_send_message(v11, v8);
          }

          else
          {
            uint64_t v16 = (void *)IAPAppSendXPCMessageWithTimeout(v11, v8, __IAPAppSendXPCMessageDefaultTimeoutMs);
            if (v16)
            {
              uint64_t v17 = v16;
              xpc_type_t type = xpc_get_type(v16);
              if (type != (xpc_type_t)&_xpc_type_dictionary)
              {
                if (v17 == &_xpc_error_connection_invalid && type == (xpc_type_t)&_xpc_type_error)
                {
                  NSLog( @"%s:%s-%d ERROR - received an XPC_ERROR_CONNECTION_INVALID error.\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/common/IAPVoiceOver.m",  "VoiceOver",  58LL);
                }

                else if (v17 == &_xpc_error_connection_interrupted && type == (xpc_type_t)&_xpc_type_error)
                {
                  NSLog( @"%s:%s-%d ERROR - received an XPC_ERROR_CONNECTION_INTERRUPTED error.\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/common/IAPVoiceOver.m",  "VoiceOver",  62LL);
                }

                else
                {
                  NSLog( @"%s:%s-%d ERROR - received an unknown error.\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/common/IAPVoiceOver.m",  "VoiceOver",  66LL);
                }
              }

              xpc_release(v17);
            }

            else
            {
              NSLog( @"%s:%s-%d ERROR - NULL reply dictionary.\n",  "/Library/Caches/com.apple.xbs/Sources/iapd/common/IAPVoiceOver.m",  "VoiceOver",  72LL);
            }
          }

          goto LABEL_27;
        }
      }
    }
  }

  __break(0x5510u);
}

void sub_1000D24CC()
{
}

void sub_1000D2500()
{
  uint64_t v0 = _os_assert_log(0LL);
  _os_crash(v0);
  __break(1u);
}

void sub_1000D251C()
{
}

void sub_1000D252C()
{
}

void sub_1000D2544()
{
}

void sub_1000D2554()
{
  __assert_rtn("__GetPlaylistNamesHelper", "MediaLibrary.mm", 2287, "(int32_t)[collections count] == geniusMixCount");
}

void sub_1000D2580()
{
  __assert_rtn("GetNestedPlaylistNames", "MediaLibrary.mm", 2458, "(int32_t)[collections count] == geniusMixCount");
}

void sub_1000D25AC(uint64_t a1)
{
}

void sub_1000D25E0(uint64_t a1)
{
}

void sub_1000D2614()
{
  __assert_rtn("deserializeGiant", "ckutilities.c", 120, "numBytes <= (g->capacity * (sizeof(giantDigit)))");
}

void sub_1000D2640()
{
  __assert_rtn("feeSigVerify", "feeDigitalSignature.c", 385, "frtn == FR_Success");
}

void sub_1000D266C()
{
  __assert_rtn("bitlen", "giantIntegers.c", 191, "w != 0");
}

void sub_1000D2698(int a1, char *a2)
{
}

void sub_1000D26C0()
{
  __assert_rtn("iaddg", "giantIntegers.c", 355, "(g)->sign <= (g)->capacity");
}

void sub_1000D26EC(int a1, char *a2)
{
}

void sub_1000D2714()
{
  __assert_rtn("normal_addg", "giantIntegers.c", 437, "(b)->sign <= (b)->capacity");
}

void sub_1000D2740()
{
  __assert_rtn("mulg_common", "giantIntegers.c", 896, "dest->capacity >= (a->sign + b->sign)");
}

void sub_1000D276C()
{
  uint64_t v0 = sub_1000562BC();
  _os_crash(v0);
  __break(1u);
}

void sub_1000D2780()
{
}

void sub_1000D27A0(uint64_t a1)
{
  uint64_t v1 = _os_assert_log(a1);
  _os_crash(v1);
  __break(1u);
}

void sub_1000D27B4(int a1)
{
  uint64_t v1 = _os_assert_log(a1);
  _os_crash(v1);
  __break(1u);
}

void sub_1000D27CC(int a1)
{
}

void sub_1000D27F4(unsigned int a1)
{
  uint64_t v1 = _os_assert_log(a1);
  _os_crash(v1);
  __break(1u);
}

void sub_1000D280C(int a1)
{
  uint64_t v1 = sub_10008878C(a1);
  _os_crash(v1);
  __break(1u);
}

void sub_1000D2820(int a1)
{
}

void sub_1000D2848()
{
}

void sub_1000D2868()
{
}

void sub_1000D2888()
{
}

void sub_1000D28A8(unsigned int a1)
{
  uint64_t v1 = sub_10009F66C(a1);
  _os_crash(v1);
  __break(1u);
}

void sub_1000D28BC(uint64_t a1)
{
}

void sub_1000D28E0(uint64_t a1)
{
}

void operator delete[](void *__p)
{
  while (1)
    ;
}

void operator delete(void *__p)
{
  while (1)
    ;
}

void *__cdecl operator new[](size_t __sz)
{
  while (1)
    ;
}

void *__cdecl operator new(size_t __sz)
{
  while (1)
    ;
}

id objc_msgSend_addClient_withAuditToken_currentClientID_xpcConnection_eaProtocols_notifyOfAlreadyConnectedAccessories_andBundleId_( void *a1, const char *a2, ...)
{
  return objc_msgSend( a1,  "addClient:withAuditToken:currentClientID:xpcConnection:eaProtocols:notifyOfAlreadyConnectedAccessories:andBundleId:");
}

id objc_msgSend_initWithReportIndex_andVID_andPID_andCountryCode_andTransport_andHIDDescriptor_( void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "initWithReportIndex:andVID:andPID:andCountryCode:andTransport:andHIDDescriptor:");
}

id objc_msgSend_requestAuthorizationForCertSerial_withName_providesPower_completionHandler_( void *a1, const char *a2, ...)
{
  return objc_msgSend(a1, "requestAuthorizationForCertSerial:withName:providesPower:completionHandler:");
}

id objc_msgSend_xpcConnection(void *a1, const char *a2, ...)
{
  return [a1 xpcConnection];
}