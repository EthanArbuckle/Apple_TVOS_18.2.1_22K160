uint64_t sub_188FFA240()
{
  return 0x726F727245LL;
}

uint64_t static ParsableArguments._errorLabel.getter()
{
  return 0x726F727245LL;
}

unint64_t sub_188FFA268(unint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_18C760EB8);
  MEMORY[0x1895F8858](v2);
  v4 = (char *)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v25 = a1;
  swift_getMetatypeMetadata();
  uint64_t v5 = sub_1890677FC();
  unint64_t v7 = sub_188FFDD70(95LL, 0xE100000000000000LL, v5, v6);
  unint64_t v9 = v8;
  swift_bridgeObjectRelease();
  unint64_t v25 = v7;
  unint64_t v26 = v9;
  v24[0] = 0x736E6F6974706F5FLL;
  v24[1] = 0xE800000000000000LL;
  uint64_t v10 = sub_18906770C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56LL))(v4, 1LL, 1LL, v10);
  sub_188FFCC74();
  sub_189067B2C();
  unint64_t v12 = v11;
  char v14 = v13;
  sub_188FFCDB0((uint64_t)v4, &qword_18C760EB8);
  swift_bridgeObjectRelease();
  if ((v14 & 1) == 0)
  {
    uint64_t v15 = HIBYTE(v9) & 0xF;
    if ((v9 & 0x2000000000000000LL) == 0) {
      uint64_t v15 = v7 & 0xFFFFFFFFFFFFLL;
    }
    if (v12 >> 14 == 4 * v15)
    {
      uint64_t v16 = sub_189067928();
      uint64_t v18 = v17;
      uint64_t v20 = v19;
      uint64_t v22 = v21;
      swift_bridgeObjectRelease();
      unint64_t v7 = MEMORY[0x1895DC8B4](v16, v18, v20, v22);
      swift_bridgeObjectRelease();
    }
  }

  return v7;
}

uint64_t sub_188FFA430@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v4 = type metadata accessor for OptionGroup(0LL, *(void *)(a1 + 16), *(void *)(a1 + 24), a2);
  return OptionGroup.wrappedValue.getter(v4, v5, v6, a3);
}

uint64_t sub_188FFA45C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000LL)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }

  else
  {
    char v3 = sub_189067F10();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }

  return v4 & 1;
}

uint64_t sub_188FFA4E0()
{
  return 1LL;
}

uint64_t sub_188FFA4E8()
{
  return sub_189068060();
}

uint64_t sub_188FFA528()
{
  return sub_18906803C();
}

uint64_t sub_188FFA54C()
{
  return sub_189068060();
}

uint64_t sub_188FFA588()
{
  return 0x736E6F6974706FLL;
}

uint64_t sub_188FFA5A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = sub_188FFA45C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_188FFA5D0()
{
  return 0LL;
}

uint64_t sub_188FFA5DC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result = sub_188FFA4E0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_188FFA608(uint64_t a1)
{
  return sub_1890680F0();
}

uint64_t sub_188FFA63C(uint64_t a1)
{
  return sub_1890680FC();
}

uint64_t sub_188FFA670@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v4 = 0;
  return OptionGroup.init(title:visibility:)(0LL, 0xE000000000000000LL, (uint64_t)&v4, a1, a2, a3);
}

uint64_t sub_188FFA6A4@<X0>( void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v25 = a5;
  uint64_t v26 = type metadata accessor for OptionGroup(0LL, a2, a3, a4);
  uint64_t v24 = *(void *)(v26 - 8);
  MEMORY[0x1895F8858](v26);
  v27 = (char *)&v24 - v8;
  uint64_t v10 = type metadata accessor for _WrappedParsableCommand.CodingKeys(255LL, a2, a3, v9);
  MEMORY[0x1895DD3F4](&unk_1890686C0, v10);
  uint64_t v28 = sub_189067E08();
  uint64_t v11 = *(void *)(v28 - 8);
  MEMORY[0x1895F8858](v28);
  char v13 = (char *)&v24 - v12;
  uint64_t v31 = type metadata accessor for _WrappedParsableCommand(0LL, a2, a3, v14);
  uint64_t v29 = *(void *)(v31 - 8);
  MEMORY[0x1895F8858](v31);
  uint64_t v16 = (char *)&v24 - v15;
  char v32 = 0;
  OptionGroup.init(title:visibility:)(0LL, 0xE000000000000000LL, (uint64_t)&v32, a2, a3, (uint64_t)&v24 - v15);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v17 = v30;
  sub_189068090();
  if (v17)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v16, v31);
  }

  else
  {
    uint64_t v19 = v24;
    uint64_t v18 = v25;
    uint64_t v20 = v26;
    MEMORY[0x1895DD3F4](&protocol conformance descriptor for OptionGroup<A>, v26);
    sub_189067DFC();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v28);
    (*(void (**)(char *, char *, uint64_t))(v19 + 40))(v16, v27, v20);
    uint64_t v21 = v29;
    uint64_t v22 = v31;
    (*(void (**)(uint64_t, char *, uint64_t))(v29 + 16))(v18, v16, v31);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v16, v22);
  }
}

unint64_t sub_188FFA8F8(uint64_t a1)
{
  return sub_188FFA268(*(void *)(a1 + 16));
}

uint64_t sub_188FFA900@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_188FFA670(*(void *)(a1 + 16), *(void *)(a1 + 24), a2);
}

uint64_t sub_188FFA90C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  return sub_188FFA6A4(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3, a4);
}

uint64_t sub_188FFA928(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if (!swift_conformsToProtocol2()) {
    uint64_t v3 = 0LL;
  }
  if (!v3)
  {
    uint64_t v3 = type metadata accessor for _WrappedParsableCommand(0LL, a1, a2, v6);
    MEMORY[0x1895DD3F4](&unk_1890685CC, v3);
  }

  return v3;
}

uint64_t static ParsableArguments.parse(_:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v47 = (char *)a4;
  uint64_t v48 = *(void *)(a2 - 8);
  uint64_t v49 = a1;
  uint64_t v6 = MEMORY[0x1895F8858](a1);
  uint64_t v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  MEMORY[0x1895F8858](v6);
  uint64_t v10 = (char *)&v45 - v9;
  uint64_t v14 = type metadata accessor for _WrappedParsableCommand(0LL, v11, v12, v13);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x1895F8858](v14);
  uint64_t v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  MEMORY[0x1895F8858](v16);
  uint64_t v20 = (char *)&v45 - v19;
  sub_188FFA928(a2, a3);
  uint64_t v21 = v58;
  uint64_t result = static ParsableCommand.parseAsRoot(_:)(v49, v22, (uint64_t)v57);
  if (!v21)
  {
    v58 = v20;
    uint64_t v49 = 0LL;
    v46 = v18;
    uint64_t v24 = a3;
    uint64_t v25 = v48;
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC490);
    if (swift_dynamicCast())
    {
      uint64_t v26 = v50;
      uint64_t v27 = v51;
      char v28 = v52;
      uint64_t v29 = v53;
      uint64_t v30 = v54;
      char v31 = v55;
      uint64_t v32 = v56;
      sub_188FFAD68();
      swift_allocError();
      *(void *)uint64_t v33 = v32;
      *(_OWORD *)(v33 + 8) = 0u;
      *(_OWORD *)(v33 + 24) = 0u;
      *(_OWORD *)(v33 + 40) = 0u;
      *(_OWORD *)(v33 + 56) = 0u;
      *(_OWORD *)(v33 + 65) = 0u;
      swift_willThrow();
      sub_188FFADAC(v26, v27, v28);
      sub_188FFADBC(v29, v30, v31);
      swift_bridgeObjectRelease();
    }

    else
    {
      v34 = v58;
      if (swift_dynamicCast())
      {
        v35 = v46;
        (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v46, v34, v14);
        uint64_t v37 = type metadata accessor for OptionGroup(0LL, *(void *)(v14 + 16), *(void *)(v14 + 24), v36);
        OptionGroup.wrappedValue.getter(v37, v38, v39, (uint64_t)v47);
        (*(void (**)(char *, uint64_t))(v15 + 8))(v35, v14);
      }

      else
      {
        v40 = v10;
        if (swift_dynamicCast())
        {
          v41 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
          v41(v8, v40, a2);
          uint64_t v42 = v49;
          (*(void (**)(uint64_t, uint64_t))(v24 + 24))(a2, v24);
          if (v42)
          {
            sub_188FFAD68();
            swift_allocError();
            *(void *)uint64_t v43 = v42;
            *(_OWORD *)(v43 + 8) = 0u;
            *(_OWORD *)(v43 + 24) = 0u;
            *(_OWORD *)(v43 + 40) = 0u;
            *(_OWORD *)(v43 + 56) = 0u;
            *(void *)(v43 + 72) = 0LL;
            *(_BYTE *)(v43 + 80) = 13;
            swift_willThrow();
            (*(void (**)(char *, uint64_t))(v25 + 8))(v8, a2);
          }

          else
          {
            v41(v47, v8, a2);
          }
        }

        else
        {
          sub_188FFAD68();
          swift_allocError();
          *(void *)uint64_t v44 = 3LL;
          *(_OWORD *)(v44 + 8) = 0u;
          *(_OWORD *)(v44 + 24) = 0u;
          *(_OWORD *)(v44 + 40) = 0u;
          *(_OWORD *)(v44 + 56) = 0u;
          *(void *)(v44 + 72) = 0LL;
          *(_BYTE *)(v44 + 80) = 15;
          swift_willThrow();
        }
      }
    }

    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v57);
  }

  return result;
}

uint64_t type metadata accessor for _WrappedParsableCommand(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata( a1,  a2,  a3,  a4,  (uint64_t)&nominal type descriptor for _WrappedParsableCommand);
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = MEMORY[0x1895DD3DC]((char *)a1 + (int)result, -(result >> 32), 0LL, 0LL);
    *a1 = result;
  }

  return result;
}

unint64_t sub_188FFAD68()
{
  unint64_t result = qword_18C4FC478;
  if (!qword_18C4FC478)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&unk_18906A1B4, &type metadata for ParserError);
    atomic_store(result, (unint64_t *)&qword_18C4FC478);
  }

  return result;
}

uint64_t sub_188FFADAC(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_188FFADBC(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0) {
    return swift_release();
  }
  return result;
}

uint64_t static ParsableArguments.message(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = v14[0];
  uint64_t v7 = v14[1];
  uint64_t v8 = v14[2];
  uint64_t v9 = v14[3];
  uint64_t v10 = v14[4];
  uint64_t v11 = v14[5];
  char v12 = v15;
  swift_bridgeObjectRetain();
  sub_188FFAE6C(v6, v7, v8, v9, v10, v11, v12);
  return v6;
}

uint64_t sub_188FFAE6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7 && a7 != 2)
  {
    if (a7 != 1) {
      return result;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

uint64_t static ParsableArguments.fullMessage(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  MEMORY[0x1895DD34C]();
  sub_1890219CC(a1, v4, a3, 0LL, 1, (uint64_t)v16);
  uint64_t v7 = v16[0];
  uint64_t v8 = v16[1];
  uint64_t v9 = v16[2];
  uint64_t v10 = v16[3];
  uint64_t v11 = v16[4];
  uint64_t v12 = v16[5];
  char v13 = v17;
  uint64_t v14 = sub_1890239C4(v4, a3);
  sub_188FFAE6C(v7, v8, v9, v10, v11, v12, v13);
  return v14;
}

uint64_t static ParsableArguments.fullMessage(for:columns:)( uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  char v10 = a3 & 1;
  MEMORY[0x1895DD34C]();
  sub_1890219CC(a1, v6, a5, a2, v10, (uint64_t)v20);
  uint64_t v11 = v20[0];
  uint64_t v12 = v20[1];
  uint64_t v13 = v20[2];
  uint64_t v14 = v20[3];
  uint64_t v15 = v20[4];
  uint64_t v16 = v20[5];
  char v17 = v21;
  uint64_t v18 = sub_1890239C4(v6, a5);
  sub_188FFAE6C(v11, v12, v13, v14, v15, v16, v17);
  return v18;
}

unint64_t static ParsableArguments.helpMessage(columns:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return static ParsableArguments.helpMessage(includeHidden:columns:)(0, a1, a2 & 1, a3, a4);
}

unint64_t static ParsableArguments.helpMessage(includeHidden:columns:)( char a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  char v9 = a3 & 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC828);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1890684B0;
  *(void *)(v10 + 32) = sub_188FFA928(a4, a5);
  *(void *)(v10 + 40) = v11;
  char v14 = a1;
  sub_1890198C4(v10, &v14, v15);
  swift_bridgeObjectRelease();
  unint64_t v12 = sub_189014BD0(a2, v9);
  sub_188FFC088((uint64_t)v15);
  return v12;
}

uint64_t static ParsableArguments._dumpHelp()(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1890684B0;
  *(void *)(v4 + 32) = sub_188FFA928(a1, a2);
  *(void *)(v4 + 40) = v5;
  sub_189010DE4(v4, (uint64_t)v16);
  uint64_t v7 = *(void *)&v16[16];
  uint64_t v6 = v17;
  uint64_t v8 = *(void *)&v18[32];
  uint64_t v9 = v19;
  uint64_t v10 = v20;
  __int128 v13 = *(_OWORD *)v16;
  __int128 v14 = *(_OWORD *)v18;
  __int128 v15 = *(_OWORD *)&v18[16];
  *(void *)uint64_t v16 = 0LL;
  *(_OWORD *)&v16[8] = v13;
  uint64_t v17 = v7;
  *(void *)uint64_t v18 = v6;
  *(_OWORD *)&v18[8] = v14;
  *(_OWORD *)&v18[24] = v15;
  uint64_t v19 = v8;
  uint64_t v20 = v9;
  uint64_t v21 = v10;
  uint64_t v11 = sub_18900F890();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t static ParsableArguments.exitCode(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, int *a3@<X8>)
{
  if (v15 == 1) {
    int v7 = 64;
  }
  else {
    int v7 = v11;
  }
  if (v15) {
    int v8 = v7;
  }
  else {
    int v8 = 0;
  }
  uint64_t result = sub_188FFAE6C(v10[0], v10[1], v11, v12, v13, v14, v15);
  *a3 = v8;
  return result;
}

uint64_t static ParsableArguments.completionScript(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18900B6FC();
}

void static ParsableArguments.exit(withError:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a1) {
LABEL_21:
  }
    exit(a1);
  uint64_t v5 = a1;
  MEMORY[0x1895DD34C]();
  sub_1890219CC(v5, v3, a3, 0LL, 1, (uint64_t)v23);
  uint64_t v6 = v23[0];
  uint64_t v7 = v23[1];
  uint64_t v8 = v23[2];
  uint64_t v9 = v23[3];
  uint64_t v10 = v23[4];
  uint64_t v11 = v23[5];
  int v12 = v24;
  uint64_t v13 = sub_1890239C4(v3, a3);
  uint64_t v15 = HIBYTE(v14) & 0xF;
  if ((v14 & 0x2000000000000000LL) == 0) {
    uint64_t v15 = v13 & 0xFFFFFFFFFFFFLL;
  }
  if (v15)
  {
    uint64_t v16 = v13;
    unint64_t v17 = v14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C760E28);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1890684B0;
    *(void *)(v18 + 56) = MEMORY[0x189617FA8];
    *(void *)(v18 + 32) = v16;
    *(void *)(v18 + 40) = v17;
    if (!v12)
    {
      sub_189068024();
      swift_bridgeObjectRelease();
      char v19 = 0;
      int v20 = 0;
LABEL_20:
      sub_188FFAE6C(v6, v7, v8, v9, v10, v11, v19);
      LODWORD(a1) = v20;
      goto LABEL_21;
    }

    sub_188FFC0EC();
    sub_189068018();
    swift_bridgeObjectRelease();
  }

  if (v12 == 1) {
    char v21 = 1;
  }
  else {
    char v21 = 2;
  }
  if (v12 == 1) {
    int v22 = 64;
  }
  else {
    int v22 = v8;
  }
  if (v12) {
    char v19 = v21;
  }
  else {
    char v19 = 0;
  }
  if (v12) {
    int v20 = v22;
  }
  else {
    int v20 = 0;
  }
  goto LABEL_20;
}

uint64_t static ParsableArguments.parseOrExit(_:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return static ParsableArguments.parse(_:)(a1, a2, a3, a4);
}

void sub_188FFB4E8(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_188FFB4F0(uint64_t result, unsigned __int8 a2)
{
  uint64_t v2 = result;
  unint64_t v3 = 0LL;
  uint64_t v4 = 0LL;
  unint64_t v5 = 0LL;
  uint64_t v40 = result + 32;
  uint64_t v6 = result + 56;
  uint64_t v39 = MEMORY[0x18961AFE8];
  unint64_t v7 = 2LL - a2;
  unint64_t v38 = v7;
  while (1)
  {
    if (v4)
    {
      unint64_t v8 = *(void *)(v4 + 16);
      if (v3 != v8) {
        goto LABEL_13;
      }
    }

    unint64_t v9 = *(void *)(v2 + 16);
    if (v5 == v9) {
      goto LABEL_20;
    }
    if (v5 >= v9) {
      break;
    }
    uint64_t v10 = 16 * v5;
    uint64_t v11 = *(void *)(v40 + 16 * v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = sub_188FFCFC8(v4);
    ++v5;
    uint64_t v12 = v6 + v10;
    uint64_t v4 = v11;
    if (!v11) {
      goto LABEL_8;
    }
LABEL_7:
    unint64_t v8 = *(void *)(v4 + 16);
    if (!v8)
    {
LABEL_8:
      while (1)
      {
        unint64_t v13 = *(void *)(v2 + 16);
        if (v5 == v13) {
          break;
        }
        if (v5 >= v13) {
          goto LABEL_21;
        }
        uint64_t v14 = *(void *)(v12 - 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t result = sub_188FFCFC8(v4);
        ++v5;
        v12 += 16LL;
        uint64_t v4 = v14;
        if (v14) {
          goto LABEL_7;
        }
      }

LABEL_20:
      swift_bridgeObjectRelease();
      sub_188FFCFC8(v4);
      return v39;
    }

    unint64_t v3 = 0LL;
    unint64_t v7 = v38;
LABEL_13:
    if (v3 >= v8) {
      goto LABEL_22;
    }
    uint64_t v15 = (_OWORD *)(v4 + 192 * v3);
    __int128 v16 = v15[2];
    __int128 v17 = v15[3];
    __int128 v18 = v15[5];
    __int128 v43 = v15[4];
    __int128 v44 = v18;
    __int128 v41 = v16;
    __int128 v42 = v17;
    __int128 v19 = v15[6];
    __int128 v20 = v15[7];
    __int128 v21 = v15[9];
    __int128 v47 = v15[8];
    __int128 v48 = v21;
    __int128 v45 = v19;
    __int128 v46 = v20;
    __int128 v22 = v15[10];
    __int128 v23 = v15[11];
    __int128 v24 = v15[13];
    __int128 v51 = v15[12];
    __int128 v52 = v24;
    __int128 v49 = v22;
    __int128 v50 = v23;
    ++v3;
    if (2 - (unint64_t)BYTE8(v47) >= v7)
    {
      sub_188FFCFF4((uint64_t)&v41);
      uint64_t v25 = v39;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v53 = v39;
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_188FFF2C0(0LL, *(void *)(v39 + 16) + 1LL, 1);
        uint64_t v25 = v53;
      }

      unint64_t v27 = *(void *)(v25 + 16);
      unint64_t v26 = *(void *)(v25 + 24);
      if (v27 >= v26 >> 1)
      {
        uint64_t result = (uint64_t)sub_188FFF2C0((char *)(v26 > 1), v27 + 1, 1);
        uint64_t v25 = v53;
      }

      *(void *)(v25 + 16) = v27 + 1;
      uint64_t v39 = v25;
      char v28 = (_OWORD *)(v25 + 192 * v27);
      __int128 v29 = v41;
      __int128 v30 = v42;
      __int128 v31 = v44;
      v28[4] = v43;
      v28[5] = v31;
      v28[2] = v29;
      v28[3] = v30;
      __int128 v32 = v45;
      __int128 v33 = v46;
      __int128 v34 = v48;
      v28[8] = v47;
      v28[9] = v34;
      v28[6] = v32;
      v28[7] = v33;
      __int128 v35 = v49;
      __int128 v36 = v50;
      __int128 v37 = v52;
      v28[12] = v51;
      v28[13] = v37;
      v28[10] = v35;
      v28[11] = v36;
      unint64_t v7 = v38;
    }
  }

    __int128 v45 = v5;
    __int128 v29 = *(void *)(v5 + 16);
    char v28 = *(void *)(v5 + 24);
    if (v29 >= v28 >> 1)
    {
      sub_188FFF34C((char *)(v28 > 1), v29 + 1, 1);
      unint64_t v5 = v45;
    }

    ++v4;
    *(void *)(v5 + 16) = v29 + 1;
    __int128 v30 = v5 + 16 * v29;
    *(void *)(v30 + 32) = v15;
    *(void *)(v30 + 40) = v14;
  }

  while (v4 != v1);
  return v5;
}

LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
  return result;
}

    if (v4 <= v7 >> 16) {
      goto LABEL_28;
    }
    unint64_t v7 = sub_1890678B0();
LABEL_9:
    unint64_t v8 = (FILE *)sub_189067730();
    putc(v12, v8);
    if (4 * v4 == v7 >> 14) {
      return swift_bridgeObjectRelease();
    }
  }

  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

    uint64_t v14 = v9 + 2;
    if (v9 + 2 >= v3) {
      goto LABEL_46;
    }
    uint64_t v15 = 1;
LABEL_23:
    if (v3 <= v14 + 1) {
      __int128 v17 = v14 + 1;
    }
    else {
      __int128 v17 = v3;
    }
    __int128 v18 = (_BYTE *)(v10 + 17 + 24 * v14);
    do
    {
      if ((*v18 & 1) == 0)
      {
        __int128 v19 = v10 + 24 * v12;
        if ((*(_BYTE *)(v19 + 17) & 1) != 0 || (__int128 v20 = *(void *)(v18 - 17), v20 < *(void *)v19))
        {
LABEL_32:
          if ((v15 & 1) == 0) {
            goto LABEL_52;
          }
          goto LABEL_28;
        }

        if (v20 == *(void *)v19)
        {
          if ((*(v18 - 1) & 1) != 0)
          {
            if ((*(_BYTE *)(v19 + 16) & 1) == 0) {
              goto LABEL_32;
            }
          }

          else if ((*(_BYTE *)(v19 + 16) & 1) == 0 && *(void *)(v18 - 9) < *(void *)(v19 + 8))
          {
            if (!v15) {
              goto LABEL_52;
            }
            goto LABEL_28;
          }
        }
      }

      if ((v15 & 1) != 0)
      {
        __int128 v17 = v14;
        goto LABEL_45;
      }

    uint64_t v10 = (v25 - 1) & v25;
    __int128 v22 = __clz(__rbit64(v25)) + (i << 6);
LABEL_22:
    unint64_t v27 = *(void *)(v5 + 48) + 24 * v22;
    char v28 = *(void *)v27;
    __int128 v29 = *(void *)(v5 + 56) + 72 * v22;
    __int128 v30 = *(void *)(v27 + 16);
    __int128 v49 = i;
    __int128 v50 = *(_OWORD *)(v27 + 8);
    if ((v48 & 1) != 0)
    {
      __int128 v51 = *(_OWORD *)v29;
      __int128 v31 = *(_OWORD *)(v29 + 16);
      __int128 v32 = *(_OWORD *)(v29 + 32);
      __int128 v33 = *(_OWORD *)(v29 + 48);
      char v55 = *(_BYTE *)(v29 + 64);
      uint64_t v53 = v32;
      uint64_t v54 = v33;
      __int128 v52 = v31;
    }

    else
    {
      sub_1890145E8(v29, (uint64_t)&v51);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }

    sub_189068030();
    swift_bridgeObjectRetain();
    sub_1890677A8();
    swift_bridgeObjectRelease();
    sub_18906803C();
    __int128 v34 = *(void *)(v30 + 16);
    if (v34)
    {
      __int128 v35 = v5;
      swift_bridgeObjectRetain();
      __int128 v36 = v30 + 40;
      do
      {
        swift_bridgeObjectRetain();
        sub_1890677A8();
        swift_bridgeObjectRelease();
        v36 += 16LL;
        --v34;
      }

      while (v34);
      swift_bridgeObjectRelease();
      unint64_t v5 = v35;
    }

    uint64_t result = sub_189068060();
    __int128 v37 = -1LL << *(_BYTE *)(v7 + 32);
    unint64_t v38 = result & ~v37;
    uint64_t v39 = v38 >> 6;
    if (((-1LL << v38) & ~*(void *)(v11 + 8 * (v38 >> 6))) != 0)
    {
      uint64_t v14 = __clz(__rbit64((-1LL << v38) & ~*(void *)(v11 + 8 * (v38 >> 6)))) | v38 & 0x7FFFFFFFFFFFFFC0LL;
      uint64_t v15 = v50;
    }

    else
    {
      uint64_t v40 = 0;
      __int128 v41 = (unint64_t)(63 - v37) >> 6;
      uint64_t v15 = v50;
      do
      {
        if (++v39 == v41 && (v40 & 1) != 0)
        {
          __break(1u);
          goto LABEL_46;
        }

        __int128 v42 = v39 == v41;
        if (v39 == v41) {
          uint64_t v39 = 0LL;
        }
        v40 |= v42;
        __int128 v43 = *(void *)(v11 + 8 * v39);
      }

      while (v43 == -1);
      uint64_t v14 = __clz(__rbit64(~v43)) + (v39 << 6);
    }

    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v14;
    __int128 v16 = *(void *)(v7 + 48) + 24 * v14;
    *(void *)__int128 v16 = v28;
    *(_OWORD *)(v16 + 8) = v15;
    __int128 v17 = *(void *)(v7 + 56) + 72 * v14;
    *(_OWORD *)__int128 v17 = v51;
    __int128 v18 = v52;
    __int128 v19 = v53;
    __int128 v20 = v54;
    *(_BYTE *)(v17 + 64) = v55;
    *(_OWORD *)(v17 + 32) = v19;
    *(_OWORD *)(v17 + 48) = v20;
    *(_OWORD *)(v17 + 16) = v18;
    ++*(void *)(v7 + 16);
  }

  swift_release();
  unint64_t v3 = v45;
  __int128 v24 = v47;
  if ((v48 & 1) == 0) {
    goto LABEL_45;
  }
LABEL_41:
  __int128 v44 = 1LL << *(_BYTE *)(v5 + 32);
  if (v44 >= 64) {
    bzero(v24, ((unint64_t)(v44 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8LL);
  }
  else {
    *__int128 v24 = -1LL << v44;
  }
  *(void *)(v5 + 16) = 0LL;
LABEL_45:
  uint64_t result = swift_release();
  *unint64_t v3 = v7;
  return result;
}

        unint64_t v8 = (v15 - 1) & v15;
        unint64_t v13 = __clz(__rbit64(v15)) + (v5 << 6);
      }

      __int128 v17 = *(void *)(v2 + 48) + 24 * v13;
      __int128 v18 = *(void *)v17;
      __int128 v19 = *(void *)(v17 + 8);
      __int128 v20 = *(_BYTE *)(v17 + 16);
      __int128 v21 = *(_BYTE *)(v17 + 17);
      sub_189068030();
      if ((v21 & 1) == 0)
      {
        sub_18906803C();
        sub_18906803C();
        if ((v20 & 1) == 0) {
          sub_18906803C();
        }
      }

      sub_18906803C();
      uint64_t result = sub_189068060();
      __int128 v22 = -1LL << *(_BYTE *)(v4 + 32);
      __int128 v23 = result & ~v22;
      __int128 v24 = v23 >> 6;
      if (((-1LL << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        uint64_t v10 = __clz(__rbit64((-1LL << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0LL;
      }

      else
      {
        uint64_t v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }

          unint64_t v27 = v24 == v26;
          if (v24 == v26) {
            __int128 v24 = 0LL;
          }
          v25 |= v27;
          char v28 = *(void *)(v9 + 8 * v24);
        }

        while (v28 == -1);
        uint64_t v10 = __clz(__rbit64(~v28)) + (v24 << 6);
      }

      *(void *)(v9 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v10;
      uint64_t v11 = *(void *)(v4 + 48) + 24 * v10;
      *(void *)uint64_t v11 = v18;
      *(void *)(v11 + 8) = v19;
      *(_BYTE *)(v11 + 16) = v20;
      *(_BYTE *)(v11 + 17) = v21;
      ++*(void *)(v4 + 16);
    }
  }

  uint64_t result = swift_release();
  *v1 = v4;
  return result;
}

  __break(1u);
  return result;
}

  __break(1u);
LABEL_22:
  __break(1u);
  return result;
}

  uint64_t v12 = *((void *)v4 + 2);
  uint64_t v14 = v74;
  a4 = v72;
  if (v74 == v72)
  {
    sub_18900F870(v69);
    sub_18900F6C0((uint64_t)v69, (uint64_t)__dst);
    goto LABEL_27;
  }

void sub_188FFB76C(_BYTE *a1@<X8>)
{
}

uint64_t sub_188FFB780(uint64_t a1, uint64_t a2, unsigned __int8 *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v85 = a4;
  uint64_t v90 = 0LL;
  uint64_t v11 = sub_189068084();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1895F8858](v11);
  uint64_t v14 = (char *)v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  int v83 = *a3;
  uint64_t v15 = *(void (**)(uint64_t, uint64_t))(a2 + 16);
  *((void *)&v104 + 1) = a1;
  *(void *)&__int128 v105 = a2;
  __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)&v103);
  v15(a1, a2);
  uint64_t v16 = *((void *)&v104 + 1);
  __int128 v17 = __swift_project_boxed_opaque_existential_1(&v103, *((uint64_t *)&v104 + 1));
  *((void *)&v102[0] + 1) = v16;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)&v101);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v16 - 8) + 16LL))( boxed_opaque_existential_1Tm,  v17,  v16);
  sub_18906806C();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v103);
  uint64_t v19 = sub_189068078();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  swift_retain();
  uint64_t v20 = sub_189067CC4();
  v80[1] = v19;
  swift_release();
  sub_189067D9C();
  if (*((void *)&v105 + 1))
  {
    __int128 v21 = &v100;
    __int128 v22 = v102;
    uint64_t v89 = MEMORY[0x18961AFC0] + 8LL;
    __int128 v88 = xmmword_1890684B0;
    v91 = (char *)MEMORY[0x18961AFE8];
    uint64_t v82 = a6;
    uint64_t v81 = a5;
    v87 = &v100;
    v86 = v102;
    v80[2] = v20;
    while (1)
    {
      __int128 v101 = v103;
      v102[0] = v104;
      v102[1] = v105;
      __int128 v23 = v103;
      __int128 v99 = v103;
      sub_188FFCD54((uint64_t)v22, (uint64_t)v21);
      if (*((void *)&v23 + 1))
      {
        swift_bridgeObjectRetain();
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v21);
        __int128 v99 = v101;
        sub_188FFCD54((uint64_t)v22, (uint64_t)v21);
        __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC398);
        if ((swift_dynamicCast() & 1) == 0)
        {
          uint64_t v95 = 0LL;
          memset(v94, 0, sizeof(v94));
          sub_188FFCDB0((uint64_t)v94, &qword_18C4FC880);
          sub_188FFCD54((uint64_t)v22, (uint64_t)&v99);
          __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC878);
          swift_dynamicCast();
          uint64_t v26 = v97;
          sub_188FFCDB0((uint64_t)v96, &qword_18C4FC878);
          if (v26)
          {
            sub_188FFCD54((uint64_t)v22, (uint64_t)&v99);
          }

          else
          {
            __int128 v99 = 0u;
            __int128 v100 = 0u;
          }

          uint64_t v27 = v85;
          sub_188FFCDEC(v85, a5);
          uint64_t v28 = sub_1890582C0(v23, *((unint64_t *)&v23 + 1), v27, a5, a6);
          uint64_t v30 = v29;
          uint64_t v32 = v31;
          sub_188FFCE1C((uint64_t)&v99, (uint64_t)v96);
          BOOL v33 = v97 != 0;
          __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC850);
          uint64_t v34 = swift_allocObject();
          *(_OWORD *)(v34 + 16) = v88;
          *(void *)(v34 + 32) = v28;
          *(void *)(v34 + 40) = v30;
          *(void *)(v34 + 48) = v32;
          __int128 v35 = (void *)swift_allocObject();
          v35[2] = sub_189049B98;
          v35[3] = 0LL;
          v35[4] = v28;
          v35[5] = v30;
          v35[6] = v32;
          sub_188FFCE1C((uint64_t)v96, (uint64_t)v94);
          __int128 v36 = (void *)swift_allocObject();
          v36[2] = 1LL;
          sub_188FFCF14((uint64_t)v94, (uint64_t)(v36 + 3));
          v36[7] = v28;
          v36[8] = v30;
          v36[9] = v32;
          char v93 = 1;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          sub_188FFCDB0((uint64_t)v96, &qword_18C4FC878);
          sub_188FFCDB0((uint64_t)&v99, &qword_18C4FC878);
          __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC818);
          uint64_t v37 = swift_allocObject();
          *(_OWORD *)(v37 + 16) = v88;
          *(void *)(v37 + 32) = 1LL;
          *(void *)(v37 + 40) = v33;
          *(void *)(v37 + 48) = 0LL;
          *(void *)(v37 + 56) = 0LL;
          *(void *)(v37 + 64) = v34;
          uint64_t v38 = MEMORY[0x18961AFE8];
          *(void *)(v37 + 72) = MEMORY[0x18961AFE8];
          *(_BYTE *)(v37 + 80) = 0;
          *(void *)(v37 + 88) = 0LL;
          *(void *)(v37 + 96) = 0xE000000000000000LL;
          *(void *)(v37 + 104) = 0LL;
          *(void *)(v37 + 112) = 0xE000000000000000LL;
          *(void *)(v37 + 120) = 0LL;
          *(void *)(v37 + 128) = 0xE000000000000000LL;
          *(_BYTE *)(v37 + 136) = 2;
          *(void *)(v37 + 144) = 0LL;
          *(void *)(v37 + 152) = 0xE000000000000000LL;
          *(void *)(v37 + 160) = 0LL;
          *(void *)(v37 + 168) = 0LL;
          *(_WORD *)(v37 + 176) = 4;
          *(void *)(v37 + 184) = sub_188FFCE98;
          *(void *)(v37 + 192) = v35;
          *(_BYTE *)(v37 + 200) = v93;
          *(void *)(v37 + 208) = sub_188FFCF5C;
          *(void *)(v37 + 216) = v36;
          sub_189011F34(v38);
          swift_bridgeObjectRelease();
          uint64_t v39 = swift_bridgeObjectRetain();
          uint64_t v40 = v90;
          uint64_t v41 = sub_1890124A4(v39);
          uint64_t v90 = v40;
          swift_bridgeObjectRelease();
          uint64_t v42 = *(void *)(v41 + 16);
          uint64_t v84 = v41;
          if (v42)
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC7F8);
            __int128 v43 = (void *)sub_189067D90();
            uint64_t v44 = *(void *)(v41 + 16);
            *(void *)&v94[0] = v43;
            uint64_t v92 = v44;
            if (v44)
            {
              uint64_t v45 = 0LL;
              __int128 v46 = (void *)(v41 + 56);
              while (1)
              {
                uint64_t v49 = v45 + 1;
                if (__OFADD__(v45, 1LL)) {
                  break;
                }
                uint64_t v51 = *(v46 - 3);
                uint64_t v50 = *(v46 - 2);
                int v52 = *((unsigned __int8 *)v46 - 8);
                uint64_t v53 = *v46;
                sub_188FFCF80(v51, v50, *((_BYTE *)v46 - 8));
                unint64_t v54 = sub_18904D914(v51, v50, v52);
                uint64_t v56 = v43[2];
                BOOL v57 = (v55 & 1) == 0;
                BOOL v58 = __OFADD__(v56, v57);
                uint64_t v59 = v56 + v57;
                if (v58) {
                  goto LABEL_38;
                }
                char v60 = v55;
                if (v43[3] < v59)
                {
                  sub_18904E1F8(v59, 1);
                  __int128 v43 = *(void **)&v94[0];
                  unint64_t v54 = sub_18904D914(v51, v50, v52);
                  if ((v60 & 1) != (v61 & 1)) {
                    goto LABEL_40;
                  }
                }

                if ((v60 & 1) != 0)
                {
                  uint64_t v47 = 8 * v54;
                  uint64_t v48 = *(void *)(v43[7] + 8 * v54);
                  sub_188FFCF98(v51, v50, v52);
                  *(void *)(v43[7] + v47) = v48;
                }

                else
                {
                  v43[(v54 >> 6) + 8] |= 1LL << v54;
                  uint64_t v62 = v43[6] + 24 * v54;
                  *(void *)uint64_t v62 = v51;
                  *(void *)(v62 + 8) = v50;
                  *(_BYTE *)(v62 + 16) = v52;
                  *(void *)(v43[7] + 8 * v54) = v53;
                  uint64_t v63 = v43[2];
                  BOOL v58 = __OFADD__(v63, 1LL);
                  uint64_t v64 = v63 + 1;
                  if (v58) {
                    goto LABEL_39;
                  }
                  v43[2] = v64;
                }

                v46 += 4;
                ++v45;
                if (v49 == v92) {
                  goto LABEL_27;
                }
              }

              __break(1u);
LABEL_38:
              __break(1u);
LABEL_39:
              __break(1u);
LABEL_40:
              uint64_t result = sub_189067FC4();
              __break(1u);
              return result;
            }
          }

          else
          {
            __int128 v43 = (void *)MEMORY[0x18961AFF0];
          }

LABEL_27:
          swift_bridgeObjectRelease();
          a6 = v82;
          a5 = v81;
          goto LABEL_30;
        }

        sub_188FFCFB0(v94, (uint64_t)v96);
        uint64_t v24 = v97;
        uint64_t v25 = v98;
        __swift_project_boxed_opaque_existential_1(v96, v97);
        (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v25 + 16))(&v99, v24, v25);
        if (v83)
        {
          if (v83 != 1 || (v99 & 7) != 2)
          {
LABEL_29:
            uint64_t v65 = v85;
            sub_188FFCDEC(v85, a5);
            uint64_t v66 = sub_1890582C0(v23, *((unint64_t *)&v23 + 1), v65, a5, a6);
            uint64_t v68 = v67;
            uint64_t v70 = v69;
            uint64_t v71 = v97;
            uint64_t v72 = v98;
            __swift_project_boxed_opaque_existential_1(v96, v97);
            uint64_t v37 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v72 + 8))( v66,  v68,  v70,  v71,  v72);
            __int128 v43 = v73;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v96);
LABEL_30:
            sub_188FFCDB0((uint64_t)&v101, &qword_18C4FC7D8);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              v91 = sub_1890571A8(0LL, *((void *)v91 + 2) + 1LL, 1, v91);
            }
            __int128 v21 = v87;
            __int128 v22 = v86;
            unint64_t v75 = *((void *)v91 + 2);
            unint64_t v74 = *((void *)v91 + 3);
            if (v75 >= v74 >> 1) {
              v91 = sub_1890571A8((char *)(v74 > 1), v75 + 1, 1, v91);
            }
            v76 = v91;
            *((void *)v91 + 2) = v75 + 1;
            v77 = &v76[16 * v75];
            *((void *)v77 + 4) = v37;
            *((void *)v77 + 5) = v43;
            goto LABEL_4;
          }
        }

        else if (((6u >> (v99 & 7)) & 1) == 0)
        {
          goto LABEL_29;
        }

        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v96);
        sub_188FFCDB0((uint64_t)&v101, &qword_18C4FC7D8);
        __int128 v21 = v87;
        __int128 v22 = v86;
      }

      else
      {
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v21);
        sub_188FFCDB0((uint64_t)&v101, &qword_18C4FC7D8);
      }

    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    uint64_t v12 = sub_1890678B0();
LABEL_29:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }

    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }

  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

      if (v11 == 1)
      {
        uint64_t v39 = 0LL;
        uint64_t v44 = 0xE000000000000000LL;
        sub_18906788C();
        sub_1890677B4();
        goto LABEL_31;
      }

      uint64_t v39 = 45LL;
      uint64_t v24 = 0xE100000000000000LL;
LABEL_30:
      uint64_t v44 = v24;
      sub_18906788C();
LABEL_31:
      sub_18901EE2C(v39, v44, v22, v23);
      uint64_t v27 = v26;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v21 < v27) {
        break;
      }
      uint64_t result = sub_188FFCF98(v8, v7, v36);
      ++v13;
      v15 += 24;
      if (v31 + v13 == 1)
      {
        unint64_t v8 = v34;
        goto LABEL_37;
      }
    }

    uint64_t result = sub_188FFCF98(v34, v35, v30);
    uint64_t v12 = v28;
    uint64_t v4 = v29;
    unint64_t v9 = v36;
    if (v31 + v13) {
      continue;
    }
    break;
  }

    uint64_t v12 = (v17 - 1) & v17;
    uint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t result = (void *)swift_retain();
  }

  __int128 v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  __int128 v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    unint64_t v9 = v18;
    goto LABEL_27;
  }

  while (1)
  {
    unint64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1LL)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    __int128 v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }

LABEL_4:
      sub_189067D9C();
      if (!*((void *)&v105 + 1)) {
        goto LABEL_36;
      }
    }
  }

  v91 = (char *)MEMORY[0x18961AFE8];
LABEL_36:
  swift_release();
  swift_release();
  sub_188FFCD24(v85, a5);
  uint64_t v78 = sub_188FFB4F0((uint64_t)v91, v83);
  return sub_189011E78(v78);
}

uint64_t sub_188FFC088(uint64_t a1)
{
  return a1;
}

unint64_t sub_188FFC0EC()
{
  unint64_t result = qword_18C760E30[0];
  if (!qword_18C760E30[0])
  {
    unint64_t result = MEMORY[0x1895DD3F4](&unk_189069080, &type metadata for Platform.StandardError);
    atomic_store(result, qword_18C760E30);
  }

  return result;
}

uint64_t dispatch thunk of ParsableArguments.init()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ParsableArguments.validate()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of static ParsableArguments._errorLabel.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_188FFC158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t sub_188FFC160(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_188FFC168()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_188FFC170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for OptionGroup(319LL, *(void *)(a1 + 16), *(void *)(a1 + 24), a4);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0LL;
  }

  return result;
}

void *sub_188FFC1DC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8LL);
  if (*(void *)(v5 + 64) <= 0x10uLL) {
    uint64_t v6 = 16LL;
  }
  else {
    uint64_t v6 = *(void *)(v5 + 64);
  }
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 10) & 0xFFFFFFFFFFFFFFF8LL) + 16 > 0x18)
  {
    uint64_t v9 = *a2;
    void *v4 = *a2;
    uint64_t v4 = (void *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }

  else
  {
    unsigned int v10 = *((unsigned __int8 *)a2 + v6);
    if (v10 >= 2)
    {
      else {
        uint64_t v11 = 4LL;
      }
      __asm { BR              X13 }
    }

    uint64_t v12 = v6 + 1;
    if (v10 == 1)
    {
      uint64_t v13 = a2[1];
      void *v4 = *a2;
      v4[1] = v13;
      swift_retain();
      char v14 = 1;
    }

    else
    {
      (*(void (**)(void *, void *))(v5 + 16))(a1, a2);
      char v14 = 0;
    }

    *((_BYTE *)v4 + v6) = v14;
    uint64_t v15 = (char *)v4 + v12;
    *uint64_t v15 = *((_BYTE *)a2 + v12);
    v15[1] = *((_BYTE *)a2 + v12 + 1);
    uint64_t v16 = (void *)(((unint64_t)v4 + v12 + 9) & 0xFFFFFFFFFFFFFFF8LL);
    __int128 v17 = (void *)(((unint64_t)a2 + v12 + 9) & 0xFFFFFFFFFFFFFFF8LL);
    *uint64_t v16 = *v17;
    v16[1] = v17[1];
    swift_bridgeObjectRetain();
  }

  return v4;
}

uint64_t sub_188FFC34C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8LL);
  if (*(void *)(v2 + 64) <= 0x10uLL) {
    uint64_t v3 = 16LL;
  }
  else {
    uint64_t v3 = *(void *)(v2 + 64);
  }
  unsigned int v4 = *(unsigned __int8 *)(a1 + v3);
  if (v4 >= 2)
  {
    else {
      uint64_t v5 = 4LL;
    }
    __asm { BR              X13 }
  }

  if (v4 == 1) {
    swift_release();
  }
  else {
    (*(void (**)(uint64_t))(v2 + 8))(a1);
  }
  return swift_bridgeObjectRelease();
}

void *sub_188FFC420(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8LL);
  if (*(void *)(v5 + 64) <= 0x10uLL) {
    uint64_t v6 = 16LL;
  }
  else {
    uint64_t v6 = *(void *)(v5 + 64);
  }
  unsigned int v7 = *((unsigned __int8 *)a2 + v6);
  if (v7 >= 2)
  {
    else {
      uint64_t v8 = 4LL;
    }
    __asm { BR              X13 }
  }

  if (v7 == 1)
  {
    uint64_t v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    swift_retain();
    char v10 = 1;
  }

  else
  {
    (*(void (**)(void *, void *))(v5 + 16))(a1, a2);
    char v10 = 0;
  }

  *((_BYTE *)a1 + v6) = v10;
  uint64_t v11 = (char *)a1 + v6 + 1;
  uint64_t v12 = (char *)a2 + v6 + 1;
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  uint64_t v13 = (void *)((unint64_t)(v11 + 9) & 0xFFFFFFFFFFFFFFF8LL);
  char v14 = (void *)((unint64_t)(v12 + 9) & 0xFFFFFFFFFFFFFFF8LL);
  *uint64_t v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_188FFC548(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (*(void *)(v6 + 64) <= 0x10uLL) {
    uint64_t v7 = 16LL;
  }
  else {
    uint64_t v7 = *(void *)(v6 + 64);
  }
  if (a1 != a2)
  {
    unsigned int v8 = *((unsigned __int8 *)a1 + v7);
    if (v8 >= 2)
    {
      else {
        uint64_t v9 = 4LL;
      }
      __asm { BR              X12 }
    }

    if (v8 == 1) {
      swift_release();
    }
    else {
      (*(void (**)(void *, void))(v6 + 8))(a1, *(void *)(a3 + 16));
    }
    unsigned int v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 2)
    {
      else {
        uint64_t v11 = 4LL;
      }
      __asm { BR              X12 }
    }

    if (v10 == 1)
    {
      uint64_t v12 = a2[1];
      *a1 = *a2;
      a1[1] = v12;
      *((_BYTE *)a1 + v7) = 1;
      swift_retain();
    }

    else
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
      *((_BYTE *)a1 + v7) = 0;
    }
  }

  uint64_t v13 = (char *)a1 + v7 + 1;
  char v14 = (char *)a2 + v7 + 1;
  *uint64_t v13 = *v14;
  v13[1] = v14[1];
  uint64_t v15 = (void *)((unint64_t)(v13 + 9) & 0xFFFFFFFFFFFFFFF8LL);
  uint64_t v16 = (void *)((unint64_t)(v14 + 9) & 0xFFFFFFFFFFFFFFF8LL);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_188FFC724(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8LL);
  if (*(void *)(v5 + 64) <= 0x10uLL) {
    uint64_t v6 = 16LL;
  }
  else {
    uint64_t v6 = *(void *)(v5 + 64);
  }
  unsigned int v7 = *((unsigned __int8 *)a2 + v6);
  if (v7 >= 2)
  {
    else {
      uint64_t v8 = 4LL;
    }
    __asm { BR              X13 }
  }

  if (v7 == 1)
  {
    *a1 = *a2;
    char v9 = 1;
  }

  else
  {
    (*(void (**)(_OWORD *, _OWORD *))(v5 + 32))(a1, a2);
    char v9 = 0;
  }

  *((_BYTE *)a1 + v6) = v9;
  unsigned int v10 = (char *)a1 + v6 + 1;
  uint64_t v11 = (char *)a2 + v6 + 1;
  *unsigned int v10 = *v11;
  v10[1] = v11[1];
  *(_OWORD *)((unint64_t)(v10 + 9) & 0xFFFFFFFFFFFFF8LL) = *(_OWORD *)((unint64_t)(v11 + 9) & 0xFFFFFFFFFFFFF8LL);
  return a1;
}

_OWORD *sub_188FFC83C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (*(void *)(v6 + 64) <= 0x10uLL) {
    uint64_t v7 = 16LL;
  }
  else {
    uint64_t v7 = *(void *)(v6 + 64);
  }
  if (a1 != a2)
  {
    unsigned int v8 = *((unsigned __int8 *)a1 + v7);
    if (v8 >= 2)
    {
      else {
        uint64_t v9 = 4LL;
      }
      __asm { BR              X12 }
    }

    if (v8 == 1) {
      swift_release();
    }
    else {
      (*(void (**)(_OWORD *, void))(v6 + 8))(a1, *(void *)(a3 + 16));
    }
    unsigned int v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 2)
    {
      else {
        uint64_t v11 = 4LL;
      }
      __asm { BR              X12 }
    }

    if (v10 == 1)
    {
      *a1 = *a2;
      char v12 = 1;
    }

    else
    {
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v6 + 32))(a1, a2, v5);
      char v12 = 0;
    }

    *((_BYTE *)a1 + v7) = v12;
  }

  uint64_t v13 = (char *)a1 + v7 + 1;
  char v14 = (char *)a2 + v7 + 1;
  *uint64_t v13 = *v14;
  v13[1] = v14[1];
  uint64_t v15 = (void *)((unint64_t)(v13 + 9) & 0xFFFFFFFFFFFFFFF8LL);
  uint64_t v16 = (void *)((unint64_t)(v14 + 9) & 0xFFFFFFFFFFFFFFF8LL);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_188FFCA0C(_DWORD *a1, int a2, uint64_t a3)
{
  unint64_t v3 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8LL) + 64LL);
  if (v3 <= 0x10) {
    unint64_t v3 = 16LL;
  }
  if (!a2) {
    return 0LL;
  }
  if ((a2 & 0x80000000) == 0) {
    goto LABEL_5;
  }
  unint64_t v6 = ((v3 + 10) & 0xFFFFFFFFFFFFFFF8LL) + 16;
  uint64_t v7 = v6 & 0xFFFFFFF8;
  unsigned int v8 = a2 - 2147483646;
  if ((v6 & 0xFFFFFFF8) != 0) {
    unsigned int v8 = 2;
  }
  if (v8 >= 0x10000) {
    int v9 = 4;
  }
  else {
    int v9 = 2;
  }
  if (v8 < 0x100) {
    int v10 = 1;
  }
  else {
    int v10 = v9;
  }
  if (v10 == 4)
  {
    int v11 = *(_DWORD *)((char *)a1 + v6);
    if (!v11) {
      goto LABEL_5;
    }
  }

  else if (v10 == 2)
  {
    int v11 = *(unsigned __int16 *)((char *)a1 + v6);
    if (!v11) {
      goto LABEL_5;
    }
  }

  else
  {
    int v11 = *((unsigned __int8 *)a1 + v6);
    if (!v11)
    {
LABEL_5:
      unint64_t v4 = *(void *)((((unint64_t)a1 + v3 + 10) & 0xFFFFFFFFFFFFF8LL) + 8);
      if (v4 >= 0xFFFFFFFF) {
        LODWORD(v4) = -1;
      }
      return (v4 + 1);
    }
  }

  int v12 = v11 - 1;
  if (v7)
  {
    int v12 = 0;
    LODWORD(v7) = *a1;
  }

  return (v7 | v12) ^ 0x80000000;
}

void sub_188FFCAE0(unsigned int *a1, int a2, int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8LL) + 64LL);
  if (v5 <= 0x10) {
    unint64_t v5 = 16LL;
  }
  if (a3 < 0)
  {
    unsigned int v7 = a3 - 2147483646;
    if ((((_DWORD)v5 + 10) & 0xFFFFFFF8) != 0xFFFFFFF0) {
      unsigned int v7 = 2;
    }
    if (v7 >= 0x10000) {
      int v8 = 4;
    }
    else {
      int v8 = 2;
    }
    if (v7 < 0x100) {
      int v6 = 1;
    }
    else {
      int v6 = v8;
    }
    if ((a2 & 0x80000000) == 0) {
LABEL_5:
    }
      __asm { BR              X11 }
  }

  else
  {
    int v6 = 0u;
    if ((a2 & 0x80000000) == 0) {
      goto LABEL_5;
    }
  }

  if ((((_DWORD)v5 + 10) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    unsigned int v9 = a2 ^ 0x80000000;
    bzero(a1, ((v5 + 10) & 0xFFFFFFFFFFFFFFF8LL) + 16);
    *a1 = v9;
  }

  __asm { BR              X10 }

void sub_188FFCBFC(uint64_t a1, int a2)
{
  *(_DWORD *)(v2 + v3) = 0;
  if (!a2) {
    JUMPOUT(0x188FFCBE8LL);
  }
  JUMPOUT(0x188FFCBD4LL);
}

void sub_188FFCC08()
{
  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x188FFCBE8LL);
}

void sub_188FFCC10()
{
  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x188FFCBE8LL);
}

uint64_t sub_188FFCC1C(uint64_t a1)
{
  uint64_t result = MEMORY[0x1895DD3F4](&unk_189068588);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_188FFCC48(uint64_t a1)
{
  uint64_t result = MEMORY[0x1895DD3F4](&unk_1890685B0);
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_188FFCC74()
{
  unint64_t result = qword_18C760EC0[0];
  if (!qword_18C760EC0[0])
  {
    unint64_t result = MEMORY[0x1895DD3F4](MEMORY[0x189617FF0], MEMORY[0x189617FA8]);
    atomic_store(result, qword_18C760EC0);
  }

  return result;
}

uint64_t type metadata accessor for _WrappedParsableCommand.CodingKeys( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata( a1,  a2,  a3,  a4,  (uint64_t)&nominal type descriptor for _WrappedParsableCommand.CodingKeys);
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80LL) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80LL) + 16LL) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80LL)));
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1Tm(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(_BYTE *)(*(void *)(a1[3] - 8) + 82LL) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }

  return v1;
}

uint64_t sub_188FFCD24(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }

  return result;
}

uint64_t sub_188FFCD54(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t __swift_destroy_boxed_opaque_existential_1Tm(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8LL);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_188FFCDB0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8LL))(a1, v3);
  return a1;
}

uint64_t sub_188FFCDEC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }

  return result;
}

uint64_t sub_188FFCE1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC878);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_188FFCE64()
{
  return swift_deallocObject();
}

void *sub_188FFCE98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_189013928( a1,  a2,  a3,  a4,  a5,  a6,  a7,  *(void *(**)(void *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 16),  *(void *)(v7 + 24),  *(void *)(v7 + 32),  *(void *)(v7 + 40),  *(void *)(v7 + 48));
}

uint64_t sub_188FFCEC8()
{
  if (*(void *)(v0 + 16) >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v0 + 48)) {
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 24);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_188FFCF14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC878);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_188FFCF5C(uint64_t a1, uint64_t a2)
{
  return sub_189013C74(a1, a2, v2[2], (uint64_t)(v2 + 3), v2[7], v2[8], v2[9]);
}

uint64_t sub_188FFCF80(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 0xBFu) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_188FFCF98(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 0xBFu) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_188FFCFB0(__int128 *a1, uint64_t a2)
{
  __int128 v2 = *a1;
  __int128 v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_188FFCFC8(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }

  return result;
}

uint64_t sub_188FFCFF4(uint64_t a1)
{
  uint64_t v5 = *(void *)(a1 + 128);
  uint64_t v2 = *(void *)(a1 + 136);
  char v3 = *(_BYTE *)(a1 + 144);
  sub_188FFD0E0(*(void *)a1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_188FFD0F0(v5, v2, v3);
  sub_188FFD130();
  swift_retain();
  return a1;
}

unint64_t sub_188FFD0E0(unint64_t result)
{
  if (result >= 2) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_188FFD0F0(uint64_t a1, uint64_t a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 1:
    case 2:
      uint64_t result = swift_bridgeObjectRetain();
      break;
    case 3:
      uint64_t result = swift_retain();
      break;
    default:
      return result;
  }

  return result;
}

uint64_t sub_188FFD130()
{
  return swift_retain();
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x1895DD3A0](a1, v6, a5);
}

uint64_t sub_188FFD164()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t getEnumTagSinglePayload for ToolInfoHeader.CodingKeys(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  else {
    int v2 = 2;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

uint64_t sub_188FFD1C4(uint64_t a1, int a2, int a3)
{
  else {
    int v3 = 2;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2) {
    return ((uint64_t (*)(void))((char *)sub_188FFD204 + 4 * byte_1890684F6[v4]))();
  }
  else {
    return ((uint64_t (*)(void))((char *)sub_188FFD224 + 4 * byte_1890684FB[v4]))();
  }
}

_BYTE *sub_188FFD204(_BYTE *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

_BYTE *sub_188FFD224(_BYTE *result)
{
  *uint64_t result = 0;
  return result;
}

_DWORD *sub_188FFD22C(_DWORD *result, int a2)
{
  *uint64_t result = a2;
  return result;
}

_WORD *sub_188FFD234(_WORD *result, __int16 a2)
{
  *uint64_t result = a2;
  return result;
}

_WORD *sub_188FFD23C(_WORD *result)
{
  *uint64_t result = 0;
  return result;
}

_DWORD *sub_188FFD244(_DWORD *result)
{
  *uint64_t result = 0;
  return result;
}

uint64_t sub_188FFD250()
{
  return 0LL;
}

void sub_188FFD258()
{
}

void sub_188FFD268()
{
}

void sub_188FFD278()
{
}

uint64_t sub_188FFD288@<X0>(uint64_t *a1@<X8>)
{
  return static EnumerableFlag.name(for:)(a1);
}

uint64_t static EnumerableFlag.name(for:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_188FFD338((uint64_t)&unk_18A3391B8);
  swift_bridgeObjectRelease();
  uint64_t result = swift_arrayDestroy();
  *a1 = v2;
  return result;
}

double sub_188FFD310@<D0>(uint64_t a1@<X8>)
{
  return static EnumerableFlag.help(for:)(a1);
}

double static EnumerableFlag.help(for:)@<D0>(uint64_t a1@<X8>)
{
  *(_BYTE *)(a1 + 48) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

uint64_t sub_188FFD338(uint64_t result)
{
  unint64_t v1 = *(void *)(result + 16);
  if (!v1) {
    return MEMORY[0x18961AFE8];
  }
  unint64_t v2 = 0LL;
  uint64_t v3 = result + 48;
  uint64_t v4 = -(uint64_t)v1;
  uint64_t v5 = MEMORY[0x18961AFE8];
  uint64_t v16 = result + 48;
  unint64_t v17 = *(void *)(result + 16);
  do
  {
    uint64_t v18 = v5;
    if (v2 <= v1) {
      unint64_t v6 = v1;
    }
    else {
      unint64_t v6 = v2;
    }
    uint64_t v7 = -(uint64_t)v6;
    for (i = (char *)(v3 + 24 * v2++); ; i += 24)
    {
      if (v7 + v2 == 1)
      {
        __break(1u);
        return result;
      }

      uint64_t v9 = *((void *)i - 2);
      uint64_t v10 = *((void *)i - 1);
      int v11 = *i;
      sub_188FFD4F4(v9, v10, *i);
      sub_188FFD4F4(v9, v10, v11);
      char v12 = sub_18904FA44((uint64_t)v19, v9, v10, v11);
      sub_188FFD504(v19[0], v19[1], v20);
      if ((v12 & 1) != 0) {
        break;
      }
      double result = sub_188FFD504(v9, v10, v11);
      ++v2;
      if (v4 + v2 == 1) {
        return v18;
      }
    }

    uint64_t v5 = v18;
    double result = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = v18;
    if ((result & 1) == 0)
    {
      double result = (uint64_t)sub_188FFF294(0LL, *(void *)(v18 + 16) + 1LL, 1);
      uint64_t v5 = v21;
    }

    unint64_t v14 = *(void *)(v5 + 16);
    unint64_t v13 = *(void *)(v5 + 24);
    if (v14 >= v13 >> 1)
    {
      double result = (uint64_t)sub_188FFF294((char *)(v13 > 1), v14 + 1, 1);
      uint64_t v5 = v21;
    }

    *(void *)(v5 + 16) = v14 + 1;
    uint64_t v15 = v5 + 24 * v14;
    *(void *)(v15 + 32) = v9;
    *(void *)(v15 + 40) = v10;
    *(_BYTE *)(v15 + 48) = v11;
    uint64_t v3 = v16;
    unint64_t v1 = v17;
  }

  while (v4 + v2);
  return v5;
}

uint64_t dispatch thunk of static EnumerableFlag.name(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of static EnumerableFlag.help(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t sub_188FFD4F4(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 0x80) == 0) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_188FFD504(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 0x80) == 0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_188FFD514(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))() & 1;
}

uint64_t CommandConfiguration.commandName.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CommandConfiguration.commandName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*CommandConfiguration.commandName.modify())()
{
  return nullsub_1;
}

uint64_t CommandConfiguration._superCommandName.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CommandConfiguration._superCommandName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*CommandConfiguration._superCommandName.modify())()
{
  return nullsub_1;
}

uint64_t CommandConfiguration.abstract.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CommandConfiguration.abstract.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*CommandConfiguration.abstract.modify())()
{
  return nullsub_1;
}

uint64_t CommandConfiguration.usage.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CommandConfiguration.usage.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return result;
}

uint64_t (*CommandConfiguration.usage.modify())()
{
  return nullsub_1;
}

uint64_t CommandConfiguration.discussion.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CommandConfiguration.discussion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = a2;
  return result;
}

uint64_t (*CommandConfiguration.discussion.modify())()
{
  return nullsub_1;
}

uint64_t CommandConfiguration.version.getter()
{
  uint64_t v1 = *(void *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CommandConfiguration.version.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 80) = a1;
  *(void *)(v2 + 88) = a2;
  return result;
}

uint64_t (*CommandConfiguration.version.modify())()
{
  return nullsub_1;
}

uint64_t CommandConfiguration.shouldDisplay.getter()
{
  return *(unsigned __int8 *)(v0 + 96);
}

uint64_t CommandConfiguration.shouldDisplay.setter(uint64_t result)
{
  *(_BYTE *)(v1 + 96) = result;
  return result;
}

uint64_t (*CommandConfiguration.shouldDisplay.modify())()
{
  return nullsub_1;
}

uint64_t CommandConfiguration.subcommands.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CommandConfiguration.subcommands.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 104) = a1;
  return result;
}

uint64_t (*CommandConfiguration.subcommands.modify())()
{
  return nullsub_1;
}

uint64_t CommandConfiguration.defaultSubcommand.getter()
{
  return *(void *)(v0 + 112);
}

uint64_t CommandConfiguration.defaultSubcommand.setter(uint64_t result, uint64_t a2)
{
  *(void *)(v2 + 112) = result;
  *(void *)(v2 + 120) = a2;
  return result;
}

uint64_t (*CommandConfiguration.defaultSubcommand.modify())()
{
  return nullsub_1;
}

uint64_t CommandConfiguration.helpNames.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 128);
  return swift_bridgeObjectRetain();
}

uint64_t CommandConfiguration.helpNames.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 128) = v2;
  return result;
}

uint64_t (*CommandConfiguration.helpNames.modify())()
{
  return nullsub_1;
}

__n128 CommandConfiguration.init(commandName:abstract:usage:discussion:version:shouldDisplay:subcommands:defaultSubcommand:helpNames:)@<Q0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, char a12, __n128 a13, uint64_t a14, uint64_t *a15)
{
  __n128 result = a13;
  uint64_t v16 = *a15;
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = 0LL;
  *(void *)(a9 + 24) = 0LL;
  *(void *)(a9 + 32) = a3;
  *(void *)(a9 + 40) = a4;
  *(void *)(a9 + 48) = a5;
  *(void *)(a9 + 56) = a6;
  *(void *)(a9 + 64) = a7;
  *(void *)(a9 + 72) = a8;
  *(void *)(a9 + 80) = a10;
  *(void *)(a9 + 88) = a11;
  *(_BYTE *)(a9 + 96) = a12;
  *(__n128 *)(a9 + 104) = a13;
  *(void *)(a9 + 120) = a14;
  *(void *)(a9 + 128) = v16;
  return result;
}

__n128 CommandConfiguration.init(commandName:_superCommandName:abstract:usage:discussion:version:shouldDisplay:subcommands:defaultSubcommand:helpNames:)@<Q0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 a10, uint64_t a11, uint64_t a12, char a13, __n128 a14, uint64_t a15, uint64_t *a16)
{
  __n128 result = a14;
  uint64_t v17 = *a16;
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  *(_OWORD *)(a9 + 64) = a10;
  *(void *)(a9 + 80) = a11;
  *(void *)(a9 + 88) = a12;
  *(_BYTE *)(a9 + 96) = a13;
  *(__n128 *)(a9 + 104) = a14;
  *(void *)(a9 + 120) = a15;
  *(void *)(a9 + 128) = v17;
  return result;
}

__n128 CommandConfiguration.init(commandName:abstract:discussion:version:shouldDisplay:subcommands:defaultSubcommand:helpNames:)@<Q0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10, __n128 a11, uint64_t a12, uint64_t *a13)
{
  __n128 result = a11;
  uint64_t v14 = *a13;
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = 0LL;
  *(void *)(a9 + 24) = 0LL;
  *(void *)(a9 + 32) = a3;
  *(void *)(a9 + 40) = a4;
  *(_OWORD *)(a9 + 48) = xmmword_1890687B0;
  *(void *)(a9 + 64) = a5;
  *(void *)(a9 + 72) = a6;
  *(void *)(a9 + 80) = a7;
  *(void *)(a9 + 88) = a8;
  *(_BYTE *)(a9 + 96) = a10;
  *(__n128 *)(a9 + 104) = a11;
  *(void *)(a9 + 120) = a12;
  *(void *)(a9 + 128) = v14;
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for ArgumentDefinition.Help(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for CommandConfiguration()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CommandConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CommandConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy136_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __int128 v2 = *(_OWORD *)(a2 + 16);
  __int128 v3 = *(_OWORD *)(a2 + 32);
  __int128 v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  __int128 v6 = *(_OWORD *)(a2 + 96);
  __int128 v7 = *(_OWORD *)(a2 + 112);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t assignWithTake for CommandConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CommandConfiguration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 136)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CommandConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 136) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 136) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for CommandConfiguration()
{
  return &type metadata for CommandConfiguration;
}

unint64_t sub_188FFDD70(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v34 = a2;
  uint64_t v35 = a1;
  uint64_t v6 = sub_1890680CC();
  uint64_t v36 = *(void *)(v6 - 8);
  uint64_t v37 = v6;
  MEMORY[0x1895F8858](v6);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000LL) == 0) {
    uint64_t v9 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (!v9) {
    return 0LL;
  }
  uint64_t v41 = 0LL;
  unint64_t v42 = 0xE000000000000000LL;
  unint64_t v38 = 4 * v9;
  swift_bridgeObjectRetain();
  char v10 = 1;
  while (1)
  {
    swift_bridgeObjectRetain();
    unint64_t v11 = sub_189067850();
    swift_bridgeObjectRelease();
    unint64_t v12 = sub_189067850();
    unint64_t v13 = sub_189067904();
    unint64_t v15 = v14;
    if ((sub_18906779C() & 1) == 0)
    {
LABEL_11:
      if ((sub_189067790() & 1) == 0) {
        goto LABEL_18;
      }
      if ((sub_18906779C() & 1) == 0) {
        goto LABEL_16;
      }
      unint64_t result = sub_1890334F4(v13, v15);
      if ((result & 0x100000000LL) != 0) {
        goto LABEL_54;
      }
      sub_1890680D8();
      char v18 = sub_1890680C0();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v8, v37);
      if ((v18 & 1) == 0)
      {
LABEL_16:
        if ((sub_189067790() & 1) != 0 && (sub_189067784() & 1) != 0)
        {
LABEL_18:
          if (v13 == v35 && v15 == v34) {
            char v10 = 0;
          }
          else {
            char v10 = sub_189067F10() ^ 1;
          }
          goto LABEL_7;
        }
      }

      goto LABEL_20;
    }

    unint64_t result = sub_1890334F4(v13, v15);
    if ((result & 0x100000000LL) != 0) {
      break;
    }
    sub_1890680D8();
    char v17 = sub_1890680B4();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v8, v37);
    if ((v17 & 1) == 0) {
      goto LABEL_11;
    }
LABEL_20:
    if ((v10 & 1) != 0)
    {
      uint64_t v19 = v41 & 0xFFFFFFFFFFFFLL;
      if ((v42 & 0x2000000000000000LL) != 0) {
        uint64_t v19 = HIBYTE(v42) & 0xF;
      }
      if (v19)
      {
        uint64_t v39 = 0LL;
        unint64_t v40 = 0xE000000000000000LL;
        sub_1890677B4();
        sub_18906788C();
        swift_bridgeObjectRelease();
      }
    }

    if (v38 <= v12 >> 14) {
      goto LABEL_6;
    }
    swift_bridgeObjectRetain();
    unint64_t v20 = sub_189067904();
    unint64_t v22 = v21;
    if ((sub_18906779C() & 1) != 0)
    {
      unint64_t result = sub_1890334F4(v20, v22);
      if ((result & 0x100000000LL) != 0) {
        goto LABEL_53;
      }
      sub_1890680D8();
      char v23 = sub_1890680B4();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v8, v37);
      if ((v23 & 1) != 0) {
        goto LABEL_36;
      }
    }

    if ((sub_189067790() & 1) == 0) {
      goto LABEL_5;
    }
    if ((sub_18906779C() & 1) != 0)
    {
      unint64_t result = sub_1890334F4(v20, v22);
      if ((result & 0x100000000LL) != 0) {
        goto LABEL_56;
      }
      sub_1890680D8();
      char v24 = sub_1890680C0();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v8, v37);
      if ((v24 & 1) != 0) {
        goto LABEL_36;
      }
    }

    if ((sub_189067790() & 1) == 0)
    {
LABEL_36:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }

    else
    {
      char v25 = sub_189067784();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v25 & 1) != 0) {
        goto LABEL_6;
      }
    }

    swift_bridgeObjectRetain();
    unint64_t v26 = sub_189067850();
    swift_bridgeObjectRelease();
    if (v38 <= v26 >> 14) {
      goto LABEL_6;
    }
    swift_bridgeObjectRetain();
    sub_189067850();
    unint64_t v27 = sub_189067904();
    unint64_t v29 = v28;
    if ((sub_18906779C() & 1) != 0)
    {
      unint64_t result = sub_1890334F4(v27, v29);
      if ((result & 0x100000000LL) != 0) {
        goto LABEL_55;
      }
      sub_1890680D8();
      char v30 = sub_1890680A8();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v8, v37);
      if ((v30 & 1) != 0)
      {
LABEL_48:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        char v10 = 1;
        goto LABEL_7;
      }
    }

    if ((sub_189067784() & 1) == 0)
    {
LABEL_5:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_6:
      char v10 = 0;
      goto LABEL_7;
    }

    if ((sub_18906779C() & 1) != 0)
    {
      unint64_t result = sub_1890334F4(v27, v29);
      if ((result & 0x100000000LL) != 0) {
        goto LABEL_57;
      }
      sub_1890680D8();
      char v31 = sub_1890680C0();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v8, v37);
      if ((v31 & 1) != 0) {
        goto LABEL_48;
      }
    }

    if ((sub_189067790() & 1) == 0) {
      goto LABEL_48;
    }
    char v32 = sub_189067784();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v10 = v32 ^ 1;
LABEL_7:
    sub_189067760();
    swift_bridgeObjectRelease();
    sub_18906788C();
    swift_bridgeObjectRelease();
    if (v38 == v11 >> 14)
    {
      swift_bridgeObjectRelease();
      return v41;
    }
  }

  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
  return result;
}

double sub_188FFE2B0@<D0>(uint64_t a1@<X8>)
{
  return static ParsableCommand.configuration.getter(a1);
}

double static ParsableCommand.configuration.getter@<D0>(uint64_t a1@<X8>)
{
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(void *)(a1 + 32) = 0LL;
  *(void *)(a1 + 40) = 0xE000000000000000LL;
  *(void *)(a1 + 48) = 0LL;
  *(void *)(a1 + 56) = 0LL;
  *(void *)(a1 + 64) = 0LL;
  *(void *)(a1 + 72) = 0xE000000000000000LL;
  *(void *)(a1 + 80) = 0LL;
  *(void *)(a1 + 88) = 0xE000000000000000LL;
  *(_BYTE *)(a1 + 96) = 1;
  *(void *)(a1 + 104) = MEMORY[0x18961AFE8];
  *(void *)(a1 + 112) = 0LL;
  *(void *)(a1 + 120) = 0LL;
  *(void *)(a1 + 128) = 0LL;
  return result;
}

void sub_188FFE2FC()
{
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ParsableCommand.run()()
{
  uint64_t v2 = v0;
  uint64_t v9 = v0;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16LL))( boxed_opaque_existential_1Tm,  v1,  v2);
  sub_188FFE618();
  swift_allocError();
  uint64_t v5 = v4;
  __swift_project_boxed_opaque_existential_1(v8, v9);
  uint64_t DynamicType = swift_getDynamicType();
  uint64_t v7 = v10;
  *(void *)uint64_t v5 = DynamicType;
  *(void *)(v5 + 8) = v7;
  *(_BYTE *)(v5 + 16) = 0;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
  swift_willThrow();
}

uint64_t static ParsableCommand.parseAsRoot(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  unint64_t v40 = sub_189044A44(v4, a2);
  uint64_t v41 = v7;
  uint64_t v42 = v8;
  if (a1)
  {
    uint64_t v9 = a1;
  }

  else
  {
    if (qword_18C4FC390 != -1) {
      swift_once();
    }
    uint64_t v10 = qword_18C4FDA60;
    uint64_t v11 = *(void *)(qword_18C4FDA60 + 16);
    sub_189067F34();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain_n();
    uint64_t v12 = swift_dynamicCastClass();
    if (!v12)
    {
      swift_bridgeObjectRelease();
      uint64_t v12 = MEMORY[0x18961AFE8];
    }

    uint64_t v13 = *(void *)(v12 + 16);
    swift_release();
    if (v13 == v11 - (v11 != 0))
    {
      uint64_t v9 = swift_dynamicCastClass();
      swift_bridgeObjectRelease();
      if (!v9)
      {
        swift_bridgeObjectRelease();
        uint64_t v9 = MEMORY[0x18961AFE8];
      }
    }

    else
    {
      swift_bridgeObjectRelease();
      sub_188FFEF38(v10, v10 + 32, v11 != 0, (2 * v11) | 1);
      uint64_t v9 = v23;
      swift_bridgeObjectRelease();
    }
  }

  swift_bridgeObjectRetain();
  sub_18904200C(v9, (uint64_t)&v28);
  swift_bridgeObjectRelease();
  if ((v39 & 1) != 0)
  {
    __int128 v14 = v28;
    uint64_t v15 = v29;
    uint64_t v16 = v30;
    uint64_t v17 = v31;
    uint64_t v18 = v32;
    uint64_t v19 = v33;
    uint64_t v43 = v34;
    uint64_t v26 = v36;
    uint64_t v27 = v35;
    uint64_t v25 = v37;
    char v24 = v38;
    sub_189000524();
    swift_willThrowTypedImpl();
    swift_allocError();
    *(_OWORD *)uint64_t v20 = v14;
    *(void *)(v20 + 16) = v15;
    *(void *)(v20 + 24) = v16;
    *(void *)(v20 + 32) = v17;
    *(void *)(v20 + 40) = v18;
    uint64_t v21 = v43;
    *(void *)(v20 + 48) = v19;
    *(void *)(v20 + 56) = v21;
    *(void *)(v20 + 64) = v27;
    *(void *)(v20 + 72) = v26;
    *(void *)(v20 + 80) = v25;
    *(_BYTE *)(v20 + 88) = v24;
  }

  else
  {
    sub_188FFCFB0(&v28, a3);
  }

  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

unint64_t sub_188FFE618()
{
  unint64_t result = qword_18C760F48;
  if (!qword_18C760F48)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&protocol conformance descriptor for CleanExit, &type metadata for CleanExit);
    atomic_store(result, (unint64_t *)&qword_18C760F48);
  }

  return result;
}

unint64_t static ParsableCommand._commandName.getter(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void *__return_ptr))(a2 + 16))(v7);
  unint64_t v2 = v7[0];
  uint64_t v3 = v7[1];
  swift_bridgeObjectRetain();
  sub_189000568((uint64_t)v7);
  if (!v3)
  {
    swift_getMetatypeMetadata();
    uint64_t v4 = sub_1890677FC();
    unint64_t v2 = sub_188FFDD70(45LL, 0xE100000000000000LL, v4, v5);
    swift_bridgeObjectRelease();
  }

  return v2;
}

char *static ParsableCommand.helpMessage(for:columns:)( uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  return static ParsableCommand.helpMessage(for:includeHidden:columns:)(a1, a2, 0, a3, a4 & 1, a6, a6);
}

char *static ParsableCommand.helpMessage(for:includeHidden:columns:)( uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12 = sub_189044A44(v7, a7);
  unint64_t v13 = sub_1890240B4((uint64_t)v12, a1);
  if (!(v13 >> 62))
  {
    uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    if (v14) {
      goto LABEL_3;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    uint64_t v18 = MEMORY[0x18961AFE8];
    if (*(void *)(MEMORY[0x18961AFE8] + 16LL)) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }

  uint64_t v14 = sub_189067D54();
  if (!v14) {
    goto LABEL_15;
  }
LABEL_3:
  v25[0] = MEMORY[0x18961AFE8];
  unint64_t result = sub_188FFF3E8(0LL, v14 & ~(v14 >> 63), 0);
  if ((v14 & 0x8000000000000000LL) == 0)
  {
    char v16 = a5;
    uint64_t v17 = 0LL;
    uint64_t v18 = v25[0];
    do
    {
      if ((v13 & 0xC000000000000001LL) != 0) {
        uint64_t v19 = MEMORY[0x1895DCCF8](v17, v13);
      }
      else {
        uint64_t v19 = swift_retain();
      }
      __int128 v23 = *(_OWORD *)(v19 + 16);
      swift_release();
      v25[0] = v18;
      unint64_t v21 = *(void *)(v18 + 16);
      unint64_t v20 = *(void *)(v18 + 24);
      if (v21 >= v20 >> 1)
      {
        sub_188FFF3E8((char *)(v20 > 1), v21 + 1, 1);
        uint64_t v18 = v25[0];
      }

      ++v17;
      *(void *)(v18 + 16) = v21 + 1;
      *(_OWORD *)(v18 + 16 * v21 + 32) = v23;
    }

    while (v14 != v17);
    swift_bridgeObjectRelease();
    a5 = v16;
    if (*(void *)(v18 + 16)) {
      goto LABEL_13;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC828);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1890684B0;
    *(_OWORD *)(v18 + 32) = *((_OWORD *)v12 + 1);
LABEL_13:
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    char v24 = a3 & 1;
    sub_1890198C4(v18, &v24, v25);
    swift_bridgeObjectRelease();
    unint64_t v22 = sub_189014BD0(a4, a5 & 1);
    sub_188FFC088((uint64_t)v25);
    return (char *)v22;
  }

  __break(1u);
  return result;
}

uint64_t static ParsableCommand.main(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = v7;
  uint64_t v4 = v8;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v6, v7);
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v3, v4);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v6);
}

uint64_t static ParsableCommand.main()(uint64_t a1, uint64_t a2)
{
  return static ParsableCommand.main(_:)(0LL, a1, a2);
}

uint64_t sub_188FFEA00(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  unsigned __int8 v11 = 2;
  uint64_t v4 = sub_188FFB780(v2, v3, &v11, 0LL, 0LL, 0LL);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = v5 - 1;
    uint64_t v7 = (_BYTE *)(v4 + 177);
    do
    {
      uint64_t v8 = v6;
      if (*v7 == 4) {
        uint64_t v9 = (*(void *)(v7 - 145) == 0LL) & (*(v7 - 137) >> 1);
      }
      else {
        uint64_t v9 = 0LL;
      }
      if ((v9 & 1) != 0) {
        break;
      }
      --v6;
      v7 += 192;
    }

    while (v8);
  }

  else
  {
    uint64_t v9 = 0LL;
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_188FFEAA4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  unsigned __int8 v11 = 2;
  uint64_t v4 = sub_188FFB780(v2, v3, &v11, 0LL, 0LL, 0LL);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = v5 - 1;
    uint64_t v7 = (_BYTE *)(v4 + 177);
    do
    {
      uint64_t v8 = v6;
      if (*v7 == 6) {
        uint64_t v9 = (*(void *)(v7 - 145) == 0LL) & (*(v7 - 137) >> 1);
      }
      else {
        uint64_t v9 = 0LL;
      }
      if ((v9 & 1) != 0) {
        break;
      }
      --v6;
      v7 += 192;
    }

    while (v8);
  }

  else
  {
    uint64_t v9 = 0LL;
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_188FFEB48(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void *__return_ptr))(a2 + 16))(v5);
  uint64_t v2 = sub_189000568((uint64_t)v5);
  if (v5[14]) {
    char v3 = sub_188FFEA00(v2, v5[15]);
  }
  else {
    char v3 = 0;
  }
  return v3 & 1;
}

unint64_t sub_188FFEB98()
{
  if (qword_18C760E20 != -1) {
    swift_once();
  }
  if (*((void *)&xmmword_18C766DE0 + 1))
  {
    unint64_t v0 = xmmword_18C766DE0;
  }

  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C760F58);
    uint64_t v1 = sub_1890677FC();
    unint64_t v0 = sub_188FFDD70(45LL, 0xE100000000000000LL, v1, v2);
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRetain();
  return v0;
}

unint64_t sub_188FFEC5C(uint64_t a1, uint64_t a2)
{
  return sub_188FFECC8(a1, a2, &qword_18C760FA8);
}

uint64_t sub_188FFEC68(uint64_t a1, uint64_t a2)
{
  return sub_188FFED94(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t))sub_189000658);
}

double sub_188FFEC84@<D0>(uint64_t a1@<X8>)
{
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(void *)(a1 + 32) = 0LL;
  *(void *)(a1 + 40) = 0xE000000000000000LL;
  *(void *)(a1 + 48) = 0LL;
  *(void *)(a1 + 56) = 0LL;
  *(void *)(a1 + 64) = 0LL;
  *(void *)(a1 + 72) = 0xE000000000000000LL;
  *(void *)(a1 + 80) = 0LL;
  *(void *)(a1 + 88) = 0xE000000000000000LL;
  *(_BYTE *)(a1 + 96) = 1;
  *(void *)(a1 + 104) = MEMORY[0x18961AFE8];
  *(void *)(a1 + 112) = 0LL;
  *(void *)(a1 + 120) = 0LL;
  *(void *)(a1 + 128) = 0LL;
  return result;
}

unint64_t sub_188FFECBC(uint64_t a1, uint64_t a2)
{
  return sub_188FFECC8(a1, a2, &qword_18C760FB0);
}

unint64_t sub_188FFECC8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v9 = 0LL;
  unint64_t v10 = 0xE000000000000000LL;
  uint64_t v11 = 0LL;
  uint64_t v12 = 0LL;
  uint64_t v13 = 0LL;
  unint64_t v14 = 0xE000000000000000LL;
  uint64_t v15 = 0LL;
  unint64_t v16 = 0xE000000000000000LL;
  char v17 = 1;
  uint64_t v18 = MEMORY[0x18961AFE8];
  uint64_t v19 = 0LL;
  uint64_t v20 = 0LL;
  uint64_t v21 = 0LL;
  sub_189000568((uint64_t)v8);
  __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v4 = sub_1890677FC();
  unint64_t v6 = sub_188FFDD70(45LL, 0xE100000000000000LL, v4, v5);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_188FFED78(uint64_t a1, uint64_t a2)
{
  return sub_188FFED94(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t))sub_189000668);
}

uint64_t sub_188FFED94(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v17 = a2;
  uint64_t v16 = a1;
  uint64_t v6 = *v3;
  uint64_t v7 = v3[1];
  uint64_t v8 = *((unsigned __int8 *)v3 + 16);
  v14[0] = v6;
  v14[1] = v7;
  char v15 = v8;
  sub_188FFE618();
  swift_allocError();
  uint64_t v10 = v9;
  __swift_project_boxed_opaque_existential_1(v14, a1);
  uint64_t DynamicType = swift_getDynamicType();
  uint64_t v12 = v17;
  *(void *)uint64_t v10 = DynamicType;
  *(void *)(v10 + 8) = v12;
  *(_BYTE *)(v10 + 16) = 0;
  a3(v6, v7, v8);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
  return swift_willThrow();
}

uint64_t sub_188FFEE54(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return MEMORY[0x18961AFE8];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC818);
  uint64_t v5 = swift_allocObject();
  size_t v6 = _swift_stdlib_malloc_size((const void *)v5);
  *(void *)(v5 + 16) = v2;
  *(void *)(v5 + 24) = 2 * ((uint64_t)(v6 - 32) / 192);
  uint64_t v7 = sub_18903AC50(&v9, (char *)(v5 + 32), v2, a1, a2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v7 != (void *)v2)
  {
    __break(1u);
    return MEMORY[0x18961AFE8];
  }

  return v5;
}

void sub_188FFEF38(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
LABEL_11:
    __break(1u);
    return;
  }

  if (v5)
  {
    if (v5 <= 0)
    {
      if (v4 != a3)
      {
LABEL_7:
        swift_arrayInitWithCopy();
        return;
      }
    }

    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC858);
      uint64_t v7 = (void *)swift_allocObject();
      int64_t v8 = _swift_stdlib_malloc_size(v7);
      uint64_t v9 = v8 - 32;
      if (v8 < 32) {
        uint64_t v9 = v8 - 17;
      }
      v7[2] = v5;
      v7[3] = 2 * (v9 >> 4);
      if (v4 != a3) {
        goto LABEL_7;
      }
    }

    __break(1u);
    goto LABEL_11;
  }

void sub_188FFF004(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
LABEL_11:
    __break(1u);
    return;
  }

  if (v5)
  {
    if (v5 <= 0)
    {
      if (v4 != a3)
      {
LABEL_7:
        swift_arrayInitWithCopy();
        return;
      }
    }

    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC890);
      uint64_t v7 = (void *)swift_allocObject();
      int64_t v8 = _swift_stdlib_malloc_size(v7);
      uint64_t v9 = v8 - 32;
      if (v8 < 32) {
        uint64_t v9 = v8 + 31;
      }
      v7[2] = v5;
      v7[3] = 2 * (v9 >> 6);
      if (v4 != a3) {
        goto LABEL_7;
      }
    }

    __break(1u);
    goto LABEL_11;
  }

void *sub_188FFF0D0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x18961AFE8];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC888);
  char v3 = (void *)swift_allocObject();
  size_t v4 = _swift_stdlib_malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 24);
  uint64_t v5 = sub_189000374(&v7, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_189000650();
  if (v5 != (void *)v1)
  {
    __break(1u);
    return (void *)MEMORY[0x18961AFE8];
  }

  return v3;
}

uint64_t sub_188FFF1C4(uint64_t result, uint64_t a2)
{
  uint64_t v2 = a2 - result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
    goto LABEL_13;
  }

  uint64_t v3 = v2 + 1;
  if (__OFADD__(v2, 1LL))
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }

  if (v2 == -1) {
    return MEMORY[0x18961AFE8];
  }
  uint64_t v5 = result;
  if (v3 <= 0)
  {
    size_t v6 = (void *)MEMORY[0x18961AFE8];
  }

  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C760F80);
    size_t v6 = (void *)swift_allocObject();
    int64_t v7 = _swift_stdlib_malloc_size(v6);
    uint64_t v8 = v7 - 32;
    if (v7 < 32) {
      uint64_t v8 = v7 - 25;
    }
    v6[2] = v3;
    void v6[3] = 2 * (v8 >> 3);
  }

  double result = sub_18903AD68((uint64_t)&v9, (uint64_t)(v6 + 4), v3, v5, a2);
  if (result == v3) {
    return (uint64_t)v6;
  }
LABEL_14:
  __break(1u);
  return result;
}

char *sub_188FFF294(char *a1, int64_t a2, char a3)
{
  double result = sub_188FFF7A0(a1, a2, a3, *v3, &qword_18C4FC838);
  *uint64_t v3 = result;
  return result;
}

char *sub_188FFF2C0(char *a1, int64_t a2, char a3)
{
  double result = sub_188FFF43C(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

void *sub_188FFF2DC(void *a1, int64_t a2, char a3)
{
  double result = sub_188FFF554(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_188FFF2F8(char *a1, int64_t a2, char a3)
{
  double result = sub_188FFF68C(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_188FFF314(char *a1, int64_t a2, char a3)
{
  double result = sub_188FFF8B8(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

void *sub_188FFF330(void *a1, int64_t a2, char a3)
{
  double result = sub_188FFF9D4(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_188FFF34C(char *a1, int64_t a2, char a3)
{
  double result = sub_188FFFB0C(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_188FFF368(char *a1, int64_t a2, char a3)
{
  double result = sub_188FFF7A0(a1, a2, a3, *v3, &qword_18C4FC840);
  *uint64_t v3 = result;
  return result;
}

char *sub_188FFF394(char *a1, int64_t a2, char a3)
{
  double result = sub_188FFFC0C(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_188FFF3B0(char *a1, int64_t a2, char a3)
{
  double result = sub_188FFFD20(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_188FFF3CC(char *a1, int64_t a2, char a3)
{
  double result = sub_188FFFE20(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_188FFF3E8(char *a1, int64_t a2, char a3)
{
  double result = sub_188FFFF3C(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_188FFF404(char *a1, int64_t a2, char a3)
{
  double result = sub_18900013C(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

void *sub_188FFF420(void *a1, int64_t a2, char a3)
{
  double result = sub_189000254(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_188FFF43C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC818);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 192);
  }

  else
  {
    uint64_t v10 = (char *)MEMORY[0x18961AFE8];
  }

  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[192 * v8]) {
      memmove(v12, v13, 192 * v8);
    }
    *((void *)a4 + 2) = 0LL;
  }

  else
  {
    swift_arrayInitWithCopy();
  }

  swift_release();
  return v10;
}

void *sub_188FFF554(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C760F98);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
  }

  else
  {
    uint64_t v10 = (void *)MEMORY[0x18961AFE8];
  }

  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v10 + 4 >= &a4[6 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 48 * v8);
    }
    a4[2] = 0LL;
  }

  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C760FA0);
    swift_arrayInitWithCopy();
  }

  swift_release();
  return v10;
}

char *sub_188FFF68C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC890);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 + 31;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 6);
  }

  else
  {
    uint64_t v10 = (char *)MEMORY[0x18961AFE8];
  }

  uint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[64 * v8]) {
      memmove(v13, v14, v8 << 6);
    }
    *((void *)a4 + 2) = 0LL;
  }

  else
  {
    swift_arrayInitWithCopy();
  }

  swift_release();
  return v10;
}

char *sub_188FFF78C(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_188FFF7A0(a1, a2, a3, a4, &qword_18C4FC840);
}

char *sub_188FFF7A0(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v8 = a2;
  }

  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    int64_t v11 = (char *)swift_allocObject();
    size_t v12 = _swift_stdlib_malloc_size(v11);
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 24);
  }

  else
  {
    int64_t v11 = (char *)MEMORY[0x18961AFE8];
  }

  uint64_t v13 = v11 + 32;
  unint64_t v14 = a4 + 32;
  if ((v6 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[24 * v9]) {
      memmove(v13, v14, 24 * v9);
    }
    *((void *)a4 + 2) = 0LL;
  }

  else
  {
    swift_arrayInitWithCopy();
  }

  swift_release();
  return v11;
}

char *sub_188FFF8B8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC830);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 56);
  }

  else
  {
    uint64_t v10 = (char *)MEMORY[0x18961AFE8];
  }

  size_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[56 * v8]) {
      memmove(v12, v13, 56 * v8);
    }
    *((void *)a4 + 2) = 0LL;
  }

  else
  {
    swift_arrayInitWithCopy();
  }

  swift_release();
  return v10;
}

void *sub_188FFF9D4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C760F88);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }

  else
  {
    uint64_t v10 = (void *)MEMORY[0x18961AFE8];
  }

  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v10 + 4 >= &a4[3 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 24 * v8);
    }
    a4[2] = 0LL;
  }

  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C760F90);
    swift_arrayInitWithCopy();
  }

  swift_release();
  return v10;
}

char *sub_188FFFB0C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC858);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }

  else
  {
    uint64_t v10 = (char *)MEMORY[0x18961AFE8];
  }

  uint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0LL;
  }

  else
  {
    swift_arrayInitWithCopy();
  }

  swift_release();
  return v10;
}

char *sub_188FFFC0C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C760F78);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }

  else
  {
    uint64_t v10 = (char *)MEMORY[0x18961AFE8];
  }

  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8]) {
      memmove(v12, v13, 48 * v8);
    }
    *((void *)a4 + 2) = 0LL;
  }

  else
  {
    swift_arrayInitWithCopy();
  }

  swift_release();
  return v10;
}

char *sub_188FFFD20(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C760F60);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }

  else
  {
    uint64_t v10 = (char *)MEMORY[0x18961AFE8];
  }

  uint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0LL;
  }

  else
  {
    swift_arrayInitWithCopy();
  }

  swift_release();
  return v10;
}

char *sub_188FFFE20(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C760F70);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 88);
  }

  else
  {
    uint64_t v10 = (char *)MEMORY[0x18961AFE8];
  }

  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[88 * v8]) {
      memmove(v12, v13, 88 * v8);
    }
    *((void *)a4 + 2) = 0LL;
  }

  else
  {
    swift_arrayInitWithCopy();
  }

  swift_release();
  return v10;
}

char *sub_188FFFF3C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC828);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }

  else
  {
    uint64_t v10 = (char *)MEMORY[0x18961AFE8];
  }

  uint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0LL;
  }

  else
  {
    memcpy(v13, v14, 16 * v8);
  }

  swift_release();
  return v10;
}

char *sub_189000034(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC888);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }

  else
  {
    uint64_t v10 = (char *)MEMORY[0x18961AFE8];
  }

  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  size_t v14 = 24 * v8;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0LL;
  }

  else
  {
    memcpy(v12, v13, v14);
  }

  swift_release();
  return v10;
}

char *sub_18900013C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C760F68);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }

  else
  {
    uint64_t v10 = (char *)MEMORY[0x18961AFE8];
  }

  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0LL;
  }

  else
  {
    swift_arrayInitWithCopy();
  }

  swift_release();
  return v10;
}

void *sub_189000254(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC848);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    uint64_t v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }

  else
  {
    uint64_t v10 = (void *)MEMORY[0x18961AFE8];
  }

  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v10 + 4 >= &a4[4 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 32 * v8);
    }
    a4[2] = 0LL;
  }

  else
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_18C4FC630);
    swift_arrayInitWithCopy();
  }

  swift_release();
  return v10;
}

void *sub_189000374(void *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 56;
  uint64_t v5 = -1LL;
  uint64_t v6 = -1LL << *(_BYTE *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1LL << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v8 = 0LL;
    a3 = 0LL;
LABEL_35:
    *double result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }

  if (!a3)
  {
    int64_t v8 = 0LL;
    goto LABEL_35;
  }

  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }

  int64_t v8 = 0LL;
  uint64_t v9 = 0LL;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    uint64_t v13 = *(void *)(a4 + 48) + 24 * v12;
    char v14 = *(_BYTE *)(v13 + 16);
    char v15 = *(_BYTE *)(v13 + 17);
    *(_OWORD *)a2 = *(_OWORD *)v13;
    *(_BYTE *)(a2 + 16) = v14;
    *(_BYTE *)(a2 + 17) = v15;
    a2 += 24LL;
    if (v9 == a3) {
      goto LABEL_35;
    }
  }

  int64_t v16 = v8 + 1;
  if (__OFADD__(v8, 1LL))
  {
    __break(1u);
    goto LABEL_37;
  }

  if (v16 >= v10) {
    goto LABEL_30;
  }
  unint64_t v17 = *(void *)(v4 + 8 * v16);
  if (v17) {
    goto LABEL_19;
  }
  v8 += 2LL;
  if (v16 + 1 >= v10)
  {
    unint64_t v7 = 0LL;
    int64_t v8 = v16;
    goto LABEL_34;
  }

  unint64_t v17 = *(void *)(v4 + 8 * v8);
  if (v17)
  {
LABEL_15:
    int64_t v16 = v8;
LABEL_19:
    unint64_t v19 = __clz(__rbit64(v17));
    unint64_t v7 = (v17 - 1) & v17;
    unint64_t v12 = v19 + (v16 << 6);
    int64_t v8 = v16;
    goto LABEL_8;
  }

  int64_t v18 = v16 + 2;
  if (v16 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v17 = *(void *)(v4 + 8 * v18);
  if (v17)
  {
LABEL_18:
    int64_t v16 = v18;
    goto LABEL_19;
  }

  int64_t v8 = v16 + 3;
  if (v16 + 3 >= v10)
  {
    unint64_t v7 = 0LL;
    int64_t v8 = v16 + 2;
    goto LABEL_34;
  }

  unint64_t v17 = *(void *)(v4 + 8 * v8);
  if (v17) {
    goto LABEL_15;
  }
  int64_t v18 = v16 + 4;
  if (v16 + 4 >= v10)
  {
LABEL_30:
    unint64_t v7 = 0LL;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }

  unint64_t v17 = *(void *)(v4 + 8 * v18);
  if (v17) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v16 = v18 + 1;
    if (__OFADD__(v18, 1LL)) {
      break;
    }
    if (v16 >= v10)
    {
      unint64_t v7 = 0LL;
      int64_t v8 = v10 - 1;
      goto LABEL_34;
    }

    unint64_t v17 = *(void *)(v4 + 8 * v16);
    ++v18;
    if (v17) {
      goto LABEL_19;
    }
  }

LABEL_38:
  __break(1u);
  return result;
}

  __break(1u);
  return result;
}

          uint64_t v20 = 1;
          return v20 & 1;
        }

unint64_t sub_189000524()
{
  unint64_t result = qword_18C760F50;
  if (!qword_18C760F50)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&unk_18906A2C4, &type metadata for CommandError);
    atomic_store(result, (unint64_t *)&qword_18C760F50);
  }

  return result;
}

uint64_t sub_189000568(uint64_t a1)
{
  return a1;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80LL) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }

  return result;
}

uint64_t dispatch thunk of static ParsableCommand.configuration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of static ParsableCommand._commandName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ParsableCommand.run()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_189000650()
{
  return swift_release();
}

uint64_t sub_189000658(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_189000668(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_189000678( void (*a1)(char *, char *), uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v27 = a5;
  uint64_t v28 = a8;
  uint64_t v33 = a1;
  uint64_t v34 = a2;
  uint64_t v26 = *(void *)(a5 - 8);
  MEMORY[0x1895F8858](a1);
  uint64_t v35 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v12 = MEMORY[0x1895F8858](AssociatedTypeWitness);
  uint64_t v31 = (char *)&v24 - v13;
  uint64_t v36 = a4;
  MEMORY[0x1895F8858](v12);
  uint64_t v30 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v29 = *(void *)(v15 - 8);
  MEMORY[0x1895F8858](v15);
  unint64_t v17 = (char *)&v24 - v16;
  uint64_t v18 = sub_189067A84();
  if (!v18) {
    return sub_1890679DC();
  }
  uint64_t v19 = v18;
  uint64_t v25 = v15;
  uint64_t v39 = sub_18906773C();
  uint64_t v32 = sub_189067CAC();
  sub_189067C88();
  uint64_t v36 = v17;
  uint64_t result = sub_189067A78();
  if (v19 < 0)
  {
    __break(1u);
  }

  else
  {
    uint64_t v21 = v31;
    while (1)
    {
      unint64_t v22 = (void (*)(char *, void))sub_189067AA8();
      (*(void (**)(char *))(v11 + 16))(v21);
      v22(v38, 0LL);
      uint64_t v23 = v37;
      v33(v21, v35);
      if (v23) {
        break;
      }
      uint64_t v37 = 0LL;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v21, AssociatedTypeWitness);
      sub_189067C94();
      sub_189067A90();
      if (!--v19)
      {
        (*(void (**)(char *, uint64_t))(v29 + 8))(v36, v25);
        return v39;
      }
    }

    (*(void (**)(char *, uint64_t))(v11 + 8))(v21, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v36, v25);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v26 + 32))(v28, v35, v27);
  }

  return result;
}

uint64_t ExpressibleByArgument.defaultValueDescription.getter()
{
  return 0LL;
}

uint64_t sub_189000998()
{
  return MEMORY[0x18961AFE8];
}

uint64_t static ExpressibleByArgument.allValueStrings.getter()
{
  return MEMORY[0x18961AFE8];
}

void sub_1890009B0(uint64_t a1@<X8>)
{
}

void static ExpressibleByArgument.defaultCompletionKind.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0LL;
  *(void *)(a1 + 8) = 0LL;
  *(_BYTE *)(a1 + 16) = 4;
}

uint64_t static ExpressibleByArgument<>.allValueStrings.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1895F8858](AssociatedTypeWitness);
  uint64_t v9 = &v14[-v8];
  sub_189067C34();
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v12 = sub_189000678( (void (*)(char *, char *))sub_189000B70,  (uint64_t)v14,  AssociatedTypeWitness,  MEMORY[0x189617FA8],  MEMORY[0x18961A520],  AssociatedConformanceWitness,  MEMORY[0x18961A528],  v11);
  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, AssociatedTypeWitness);
  return v12;
}

uint64_t sub_189000AEC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1890677FC();
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_189000B70@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_189000AEC(a1, a2);
}

uint64_t static ExpressibleByArgument<>.defaultCompletionKind.getter@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(a1 + 24))();
  *(void *)a2 = result;
  *(void *)(a2 + 8) = 0LL;
  *(_BYTE *)(a2 + 16) = 0;
  return result;
}

uint64_t static ExpressibleByArgument<>.allValueStrings.getter( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1895F8858](AssociatedTypeWitness);
  uint64_t v13 = &v19[-v12];
  sub_189067C34();
  uint64_t v25 = a1;
  uint64_t v26 = a2;
  uint64_t v27 = a3;
  uint64_t v28 = a4;
  uint64_t v29 = a5;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v20 = a2;
  uint64_t v21 = a3;
  uint64_t v22 = a4;
  uint64_t v23 = a5;
  uint64_t v24 = KeyPath;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v17 = sub_189000678( (void (*)(char *, char *))sub_189000DDC,  (uint64_t)v19,  AssociatedTypeWitness,  MEMORY[0x189617FA8],  MEMORY[0x18961A520],  AssociatedConformanceWitness,  MEMORY[0x18961A528],  v16);
  (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v13, AssociatedTypeWitness);
  swift_release();
  return v17;
}

uint64_t sub_189000D10()
{
  return sub_189067988();
}

uint64_t sub_189000D40()
{
  return 40LL;
}

__n128 sub_189000D4C(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a1;
  __int128 v3 = *(_OWORD *)(a1 + 16);
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_189000D60@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v4 = *(void *)(a2 + a1 - 8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t result = v5(AssociatedTypeWitness, v4);
  *a3 = result;
  a3[1] = v8;
  return result;
}

uint64_t sub_189000DBC()
{
  return 40LL;
}

__n128 sub_189000DC8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a1;
  __int128 v3 = *(_OWORD *)(a1 + 16);
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_189000DDC()
{
  return swift_getAtKeyPath();
}

uint64_t ExpressibleByArgument<>.defaultValueDescription.getter( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1895F8858](AssociatedTypeWitness);
  uint64_t v8 = (char *)&v11 - v7;
  sub_189067988();
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 16))(AssociatedTypeWitness, a4);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, AssociatedTypeWitness);
  return v9;
}

uint64_t sub_189000ED8@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t sub_189000EE0()
{
  return 0LL;
}

void sub_189000F2C(uint64_t a1@<X8>)
{
  *(void *)a1 = 0LL;
  *(void *)(a1 + 8) = 0LL;
  *(_BYTE *)(a1 + 16) = 4;
}

uint64_t RawRepresentable<>.init(argument:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v35 = a6;
  uint64_t v10 = sub_189067AB4();
  uint64_t v30 = *(void *)(v10 - 8);
  uint64_t v31 = v10;
  MEMORY[0x1895F8858](v10);
  uint64_t v33 = (char *)&v29 - v11;
  uint64_t v32 = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = sub_189067AB4();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x1895F8858](v13);
  uint64_t v17 = (char *)&v29 - v16;
  uint64_t v18 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v19 = MEMORY[0x1895F8858](v15);
  uint64_t v21 = (char *)&v29 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  MEMORY[0x1895F8858](v19);
  uint64_t v23 = (char *)&v29 - v22;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 8))(a1, v34, AssociatedTypeWitness, a5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v17, 1LL, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
    uint64_t v24 = *(void *)(a3 - 8);
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v23, v17, AssociatedTypeWitness);
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v21, v23, AssociatedTypeWitness);
    uint64_t v25 = v33;
    sub_189067994();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v23, AssociatedTypeWitness);
    uint64_t v24 = *(void *)(a3 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v25, 1LL, a3))
    {
      uint64_t v27 = v35;
      (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v35, v25, a3);
      uint64_t v26 = 0LL;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56))(v27, v26, 1LL, a3);
    }

    (*(void (**)(char *, uint64_t))(v30 + 8))(v25, v31);
  }

  uint64_t v26 = 1LL;
  uint64_t v27 = v35;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56))(v27, v26, 1LL, a3);
}

uint64_t LosslessStringConvertible<>.init(argument:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_189067AB4();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1895F8858](v4);
  uint64_t v7 = (char *)&v11 - v6;
  sub_189067EF8();
  uint64_t v8 = *(void *)(a1 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1LL, a1))
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v9 = 1LL;
  }

  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2, v7, a1);
    uint64_t v9 = 0LL;
  }

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a2, v9, 1LL, a1);
}

uint64_t sub_189001284@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_189006624( a1,  a2,  (uint64_t (*)(void))sub_1890037E8,  (uint64_t (*)(void *, uint64_t, uint64_t))sub_189003D54);
  *(void *)a3 = result;
  *(_BYTE *)(a3 + 8) = v5 & 1;
  return result;
}

uint64_t sub_1890012C4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = sub_1890066E8( a1,  a2,  (uint64_t (*)(void))sub_189001F34,  (uint64_t (*)(void *, uint64_t, uint64_t))sub_1890024F8);
  *a3 = result;
  a3[1] = BYTE1(result) & 1;
  return result;
}

uint64_t sub_189001304@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_189006790( a1,  a2,  (uint64_t (*)(void))sub_1890027AC,  (uint64_t (*)(void *, uint64_t, uint64_t))sub_189002D70);
  *(_WORD *)a3 = result;
  *(_BYTE *)(a3 + 2) = BYTE2(result) & 1;
  return result;
}

unint64_t sub_189001344@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t result = sub_18900683C( a1,  a2,  (uint64_t (*)(void))sub_189003024,  (uint64_t (*)(void *, uint64_t, uint64_t))sub_189003568);
  *(_DWORD *)a3 = result;
  *(_BYTE *)(a3 + 4) = BYTE4(result) & 1;
  return result;
}

uint64_t sub_189001384@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_189006624( a1,  a2,  (uint64_t (*)(void))sub_189005C38,  (uint64_t (*)(void *, uint64_t, uint64_t))sub_189006230);
  *(void *)a3 = result;
  *(_BYTE *)(a3 + 8) = v5 & 1;
  return result;
}

uint64_t sub_1890013C0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = sub_1890066E8( a1,  a2,  (uint64_t (*)(void))sub_189003FD0,  (uint64_t (*)(void *, uint64_t, uint64_t))sub_1890046D0);
  *a3 = result;
  a3[1] = BYTE1(result) & 1;
  return result;
}

uint64_t sub_1890013FC()
{
  BYTE8(v2) = 0;
  *(void *)&__int128 v2 = *v0;
  sub_189067CD0();
  return *(void *)((char *)&v2 + 1);
}

uint64_t sub_189001448@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_189006790( a1,  a2,  (uint64_t (*)(void))sub_189004978,  (uint64_t (*)(void *, uint64_t, uint64_t))sub_189005070);
  *(_WORD *)a3 = result;
  *(_BYTE *)(a3 + 2) = BYTE2(result) & 1;
  return result;
}

uint64_t sub_189001484()
{
  WORD4(v2) = 0;
  *(void *)&__int128 v2 = *v0;
  sub_189067CD0();
  return *(void *)((char *)&v2 + 2);
}

unint64_t sub_1890014D0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t result = sub_18900683C( a1,  a2,  (uint64_t (*)(void))sub_189005318,  (uint64_t (*)(void *, uint64_t, uint64_t))sub_1890059B8);
  *(_DWORD *)a3 = result;
  *(_BYTE *)(a3 + 4) = BYTE4(result) & 1;
  return result;
}

uint64_t sub_18900150C()
{
  uint64_t v2 = *v0;
  sub_189067CD0();
  return HIDWORD(v2);
}

uint64_t sub_189001558()
{
  return 0LL;
}

unint64_t sub_1890015A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t result = sub_189001D2C(a1, a2);
  *(_DWORD *)a3 = result;
  *(_BYTE *)(a3 + 4) = BYTE4(result) & 1;
  return result;
}

uint64_t sub_1890015D0()
{
  uint64_t v2 = *v0;
  sub_189067CD0();
  return HIDWORD(v2);
}

uint64_t sub_18900161C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_189001BF8(a1, a2);
  *(void *)a3 = result;
  *(_BYTE *)(a3 + 8) = v5 & 1;
  return result;
}

uint64_t sub_189001648()
{
  return 0LL;
}

uint64_t sub_189001694@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = sub_1890064AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t dispatch thunk of ExpressibleByArgument.init(argument:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of ExpressibleByArgument.defaultValueDescription.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of static ExpressibleByArgument.allValueStrings.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of static ExpressibleByArgument.defaultCompletionKind.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_1890016D8()
{
  unint64_t v0 = sub_189067928();
  uint64_t v4 = sub_189001754(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_189001754(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000LL) != 0)
  {
    unint64_t v9 = sub_189001898(a1, a2, a3, a4);
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = sub_189001984(v9, 0LL);
      unint64_t v12 = sub_1890019E8((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }

    else
    {
      uint64_t v11 = (void *)MEMORY[0x18961AFE8];
    }

    uint64_t v13 = MEMORY[0x1895DC8CC](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }

  else
  {
    if ((a4 & 0x2000000000000000LL) == 0)
    {
      if ((a3 & 0x1000000000000000LL) != 0) {
LABEL_12:
      }
        JUMPOUT(0x1895DC8CCLL);
LABEL_9:
      sub_189067C70();
      goto LABEL_12;
    }

    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x1895DC8CC]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }

unint64_t sub_189001898( unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7 = result;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000LL) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4LL << v8;
  if ((result & 0xC) == 4LL << v8)
  {
    uint64_t result = sub_18902621C(result, a3, a4);
    unint64_t v7 = result;
  }

  if ((a2 & 0xC) == v9)
  {
    uint64_t result = sub_18902621C(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000LL) == 0) {
      return (a2 >> 16) - (v7 >> 16);
    }
  }

  else if ((a4 & 0x1000000000000000LL) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }

  unint64_t v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000LL) == 0) {
    unint64_t v10 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }

  else if (v10 >= a2 >> 16)
  {
    return sub_1890678C8();
  }

  __break(1u);
  return result;
}

void *sub_189001984(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x18961AFE8];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C760FB8);
  uint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

unint64_t sub_1890019E8( unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0LL;
    goto LABEL_33;
  }

  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0LL;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }

  uint64_t v11 = 0LL;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000LL) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4LL << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000LL) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    uint64_t result = v12;
    if (v17 == v15) {
      uint64_t result = sub_18902621C(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000LL) != 0)
    {
      uint64_t result = sub_1890678D4();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }

    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000LL) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }

      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000LL) == 0) {
          uint64_t result = sub_189067C70();
        }
        char v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000LL) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }

    uint64_t result = sub_18902621C(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000LL) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000LL) + 65540;
      goto LABEL_29;
    }

uint64_t sub_189001BF8(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = 0LL;
  if ((a2 & 0x1000000000000000LL) != 0 || !(a2 & 0x2000000000000000LL | a1 & 0x1000000000000000LL))
  {
    sub_189067C04();
    swift_bridgeObjectRelease();
    int v3 = LOBYTE(v6[0]);
  }

  else
  {
    if ((a2 & 0x2000000000000000LL) != 0)
    {
      v6[0] = a1;
      v6[1] = a2 & 0xFFFFFFFFFFFFFFLL;
      int v3 = (a1 > 0x20u || ((0x100003E01uLL >> a1) & 1) == 0)
        && (uint64_t v4 = (_BYTE *)_swift_stdlib_strtod_clocale()) != 0LL
        && *v4 == 0;
    }

    else
    {
      if ((a1 & 0x1000000000000000LL) != 0) {
        uint64_t v2 = (_BYTE *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        uint64_t v2 = (_BYTE *)sub_189067C70();
      }
      sub_18900657C(v2, (BOOL *)v6);
      int v3 = LOBYTE(v6[0]);
    }

    swift_bridgeObjectRelease();
  }

  if (v3) {
    return v7;
  }
  else {
    return 0LL;
  }
}

unint64_t sub_189001D2C(uint64_t a1, uint64_t a2)
{
  unsigned int v8 = 0;
  if ((a2 & 0x1000000000000000LL) != 0 || !(a2 & 0x2000000000000000LL | a1 & 0x1000000000000000LL))
  {
    sub_189067C04();
    swift_bridgeObjectRelease();
    int v3 = LOBYTE(v7[0]);
  }

  else
  {
    if ((a2 & 0x2000000000000000LL) != 0)
    {
      v7[0] = a1;
      v7[1] = a2 & 0xFFFFFFFFFFFFFFLL;
      int v3 = (a1 > 0x20u || ((0x100003E01uLL >> a1) & 1) == 0)
        && (uint64_t v4 = (_BYTE *)_swift_stdlib_strtof_clocale()) != 0LL
        && *v4 == 0;
    }

    else
    {
      if ((a1 & 0x1000000000000000LL) != 0) {
        uint64_t v2 = (_BYTE *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        uint64_t v2 = (_BYTE *)sub_189067C70();
      }
      sub_189006598(v2, (BOOL *)v7);
      int v3 = LOBYTE(v7[0]);
    }

    swift_bridgeObjectRelease();
  }

  uint64_t v5 = v8;
  LOBYTE(v7[0]) = v3 ^ 1;
  if (!v3) {
    uint64_t v5 = 0LL;
  }
  return v5 | ((unint64_t)(v3 ^ 1u) << 32);
}

uint64_t sub_189001E6C(uint64_t *a1, uint64_t a2, uint64_t (*a3)(void *, uint64_t, uint64_t))
{
  uint64_t v5 = *a1;
  unint64_t v6 = a1[1];
  if ((v6 & 0x1000000000000000LL) == 0)
  {
    if ((v6 & 0x2000000000000000LL) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    v13[0] = v5;
    v13[1] = v6 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v7 = v13;
    return a3(v7, v8, a2);
  }

  uint64_t v5 = sub_1890016D8();
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();
  *a1 = v5;
  a1[1] = v11;
  unint64_t v6 = v11;
  if ((v11 & 0x2000000000000000LL) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000LL) != 0)
  {
    uint64_t v7 = (void *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }

  else
  {
    uint64_t v7 = (void *)sub_189067C70();
  }

  return a3(v7, v8, a2);
}

uint64_t sub_189001F34(uint64_t result, unint64_t a2, uint64_t a3)
{
  if ((a2 & 0x1000000000000000LL) != 0)
  {
    unsigned __int8 v16 = 0;
    unsigned __int8 v66 = 0;
    goto LABEL_145;
  }

  uint64_t v5 = result;
  if ((a2 & 0x2000000000000000LL) == 0)
  {
    if ((result & 0x1000000000000000LL) != 0)
    {
      uint64_t result = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
      uint64_t v6 = v5 & 0xFFFFFFFFFFFFLL;
    }

    else
    {
      uint64_t result = sub_189067C70();
    }

    int v7 = *(unsigned __int8 *)result;
    if (v7 == 43)
    {
      if (v6 >= 1)
      {
        uint64_t v31 = v6 - 1;
        if (v6 != 1)
        {
          unsigned __int8 v32 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v33 = a3 + 55;
          }

          else
          {
            unsigned __int8 v32 = 97;
            unsigned __int8 v33 = 65;
          }

          if (a3 <= 10) {
            unsigned __int8 v34 = a3 + 48;
          }
          else {
            unsigned __int8 v34 = 58;
          }
          if (result)
          {
            LOBYTE(v12) = 0;
            uint64_t v35 = (unsigned __int8 *)(result + 1);
            do
            {
              unsigned int v36 = *v35;
              if (v36 < 0x30 || v36 >= v34)
              {
                if (v36 < 0x41 || v36 >= v33)
                {
                  unsigned __int8 v16 = 0;
                  char v17 = 1;
                  if (v36 < 0x61 || v36 >= v32) {
                    goto LABEL_144;
                  }
                  char v37 = -87;
                }

                else
                {
                  char v37 = -55;
                }
              }

              else
              {
                char v37 = -48;
              }

              int v38 = (char)v12 * (char)a3;
              char v39 = v38;
              int v12 = (char)v38 + (char)(v36 + v37);
              ++v35;
              --v31;
            }

            while (v31);
LABEL_76:
            unsigned __int8 v16 = v12;
            unsigned __int8 v66 = 0;
            goto LABEL_145;
          }

          goto LABEL_99;
        }

LABEL_143:
        unsigned __int8 v16 = 0;
        char v17 = 1;
        goto LABEL_144;
      }

      goto LABEL_150;
    }

    if (v7 != 45)
    {
      if (v6)
      {
        unsigned __int8 v40 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v41 = a3 + 55;
        }

        else
        {
          unsigned __int8 v40 = 97;
          unsigned __int8 v41 = 65;
        }

        if (a3 <= 10) {
          unsigned __int8 v42 = a3 + 48;
        }
        else {
          unsigned __int8 v42 = 58;
        }
        if (result)
        {
          LOBYTE(v43) = 0;
          do
          {
            unsigned int v44 = *(unsigned __int8 *)result;
            if (v44 < 0x30 || v44 >= v42)
            {
              if (v44 < 0x41 || v44 >= v41)
              {
                unsigned __int8 v16 = 0;
                char v17 = 1;
                if (v44 < 0x61 || v44 >= v40) {
                  goto LABEL_144;
                }
                char v45 = -87;
              }

              else
              {
                char v45 = -55;
              }
            }

            else
            {
              char v45 = -48;
            }

            int v46 = (char)v43 * (char)a3;
            char v47 = v46;
            int v43 = (char)v46 + (char)(v44 + v45);
            ++result;
            --v6;
          }

          while (v6);
          unsigned __int8 v16 = v43;
          unsigned __int8 v66 = 0;
          goto LABEL_145;
        }

        goto LABEL_99;
      }

      goto LABEL_143;
    }

    if (v6 >= 1)
    {
      uint64_t v8 = v6 - 1;
      if (v6 != 1)
      {
        unsigned __int8 v9 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v10 = a3 + 55;
        }

        else
        {
          unsigned __int8 v9 = 97;
          unsigned __int8 v10 = 65;
        }

        if (a3 <= 10) {
          unsigned __int8 v11 = a3 + 48;
        }
        else {
          unsigned __int8 v11 = 58;
        }
        if (result)
        {
          LOBYTE(v12) = 0;
          uint64_t v13 = (unsigned __int8 *)(result + 1);
          while (1)
          {
            unsigned int v14 = *v13;
            if (v14 < 0x30 || v14 >= v11)
            {
              if (v14 < 0x41 || v14 >= v10)
              {
                unsigned __int8 v16 = 0;
                char v17 = 1;
                if (v14 < 0x61 || v14 >= v9) {
                  goto LABEL_144;
                }
                char v15 = -87;
              }

              else
              {
                char v15 = -55;
              }
            }

            else
            {
              char v15 = -48;
            }

            int v18 = (char)v12 * (char)a3;
            char v19 = v18;
            int v12 = (char)v18 - (char)(v14 + v15);
            ++v13;
            if (!--v8) {
              goto LABEL_76;
            }
          }
        }

        unsigned __int8 v16 = 0;
        char v17 = 1;
        goto LABEL_144;
      }

      goto LABEL_150;
    }

    if (v7 != 45)
    {
      if (v6)
      {
        unsigned __int8 v40 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v41 = a3 + 55;
        }

        else
        {
          unsigned __int8 v40 = 97;
          unsigned __int8 v41 = 65;
        }

        if (a3 <= 10) {
          unsigned __int8 v42 = a3 + 48;
        }
        else {
          unsigned __int8 v42 = 58;
        }
        if (result)
        {
          LOWORD(v43) = 0;
          do
          {
            unsigned int v44 = *(unsigned __int8 *)result;
            if (v44 < 0x30 || v44 >= v42)
            {
              if (v44 < 0x41 || v44 >= v41)
              {
                unsigned __int8 v16 = 0;
                char v17 = 1;
                if (v44 < 0x61 || v44 >= v40) {
                  goto LABEL_144;
                }
                char v45 = -87;
              }

              else
              {
                char v45 = -55;
              }
            }

            else
            {
              char v45 = -48;
            }

            int v46 = (__int16)v43 * (__int16)a3;
            char v47 = v46;
            int v43 = (__int16)v46 + (v44 + v45);
            ++result;
            --v6;
          }

          while (v6);
          unsigned __int8 v16 = v43;
          unsigned __int8 v66 = 0;
          goto LABEL_145;
        }

        goto LABEL_99;
      }

      goto LABEL_143;
    }

    if (v6 >= 1)
    {
      uint64_t v8 = v6 - 1;
      if (v6 != 1)
      {
        unsigned __int8 v9 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v10 = a3 + 55;
        }

        else
        {
          unsigned __int8 v9 = 97;
          unsigned __int8 v10 = 65;
        }

        if (a3 <= 10) {
          unsigned __int8 v11 = a3 + 48;
        }
        else {
          unsigned __int8 v11 = 58;
        }
        if (result)
        {
          LOWORD(v12) = 0;
          uint64_t v13 = (unsigned __int8 *)(result + 1);
          while (1)
          {
            unsigned int v14 = *v13;
            if (v14 < 0x30 || v14 >= v11)
            {
              if (v14 < 0x41 || v14 >= v10)
              {
                unsigned __int8 v16 = 0;
                char v17 = 1;
                if (v14 < 0x61 || v14 >= v9) {
                  goto LABEL_144;
                }
                char v15 = -87;
              }

              else
              {
                char v15 = -55;
              }
            }

            else
            {
              char v15 = -48;
            }

            int v18 = (__int16)v12 * (__int16)a3;
            char v19 = v18;
            int v12 = (__int16)v18 - (v14 + v15);
            ++v13;
            if (!--v8) {
              goto LABEL_76;
            }
          }
        }

        unsigned __int8 v16 = 0;
        char v17 = 1;
        goto LABEL_144;
      }

      goto LABEL_150;
    }

    if (v7 != 45)
    {
      if (v6)
      {
        unsigned __int8 v40 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v41 = a3 + 55;
        }

        else
        {
          unsigned __int8 v40 = 97;
          unsigned __int8 v41 = 65;
        }

        if (a3 <= 10) {
          unsigned __int8 v42 = a3 + 48;
        }
        else {
          unsigned __int8 v42 = 58;
        }
        if (result)
        {
          int v43 = 0;
          do
          {
            unsigned int v44 = *(unsigned __int8 *)result;
            if (v44 < 0x30 || v44 >= v42)
            {
              if (v44 < 0x41 || v44 >= v41)
              {
                unsigned __int8 v16 = 0;
                char v17 = 1;
                if (v44 < 0x61 || v44 >= v40) {
                  goto LABEL_144;
                }
                char v45 = -87;
              }

              else
              {
                char v45 = -55;
              }
            }

            else
            {
              char v45 = -48;
            }

            int v46 = v43 * (uint64_t)(int)a3;
            char v47 = v44 + v45;
            int v43 = v46 + v47;
            if (__OFADD__((_DWORD)v46, v47)) {
              goto LABEL_143;
            }
            ++result;
            --v6;
          }

          while (v6);
          unsigned __int8 v16 = v46 + v47;
          unsigned __int8 v66 = 0;
          return v16 | ((unint64_t)v66 << 32) | (((a2 >> 60) & 1) << 40);
        }

        goto LABEL_99;
      }

      goto LABEL_143;
    }

    if (v6 >= 1)
    {
      uint64_t v8 = v6 - 1;
      if (v6 != 1)
      {
        unsigned __int8 v9 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v10 = a3 + 55;
        }

        else
        {
          unsigned __int8 v9 = 97;
          unsigned __int8 v10 = 65;
        }

        if (a3 <= 10) {
          unsigned __int8 v11 = a3 + 48;
        }
        else {
          unsigned __int8 v11 = 58;
        }
        if (result)
        {
          int v12 = 0;
          uint64_t v13 = (unsigned __int8 *)(result + 1);
          while (1)
          {
            unsigned int v14 = *v13;
            if (v14 < 0x30 || v14 >= v11)
            {
              if (v14 < 0x41 || v14 >= v10)
              {
                unsigned __int8 v16 = 0;
                char v17 = 1;
                if (v14 < 0x61 || v14 >= v9) {
                  goto LABEL_144;
                }
                char v15 = -87;
              }

              else
              {
                char v15 = -55;
              }
            }

            else
            {
              char v15 = -48;
            }

            int v18 = (int)v12 * (uint64_t)(int)a3;
            char v19 = v14 + v15;
            int v12 = v18 - v19;
            if (__OFSUB__((_DWORD)v18, v19)) {
              goto LABEL_143;
            }
            ++v13;
            if (!--v8) {
              goto LABEL_76;
            }
          }
        }

        unsigned __int8 v16 = 0;
        char v17 = 1;
        goto LABEL_144;
      }

      goto LABEL_150;
    }

    if (v7 != 45)
    {
      if (v6)
      {
        unsigned __int8 v34 = a3 + 87;
        if (a3 > 10)
        {
          uint64_t v35 = a3 + 55;
        }

        else
        {
          unsigned __int8 v34 = 97;
          uint64_t v35 = 65;
        }

        if (a3 <= 10) {
          unsigned int v36 = a3 + 48;
        }
        else {
          unsigned int v36 = 58;
        }
        if (result)
        {
          LOBYTE(v37) = 0;
          do
          {
            int v38 = *(unsigned __int8 *)result;
            if (v38 < 0x30 || v38 >= v36)
            {
              if (v38 < 0x41 || v38 >= v35)
              {
                unsigned __int8 v16 = 0;
                char v17 = 1;
                if (v38 < 0x61 || v38 >= v34) {
                  goto LABEL_144;
                }
                char v39 = -87;
              }

              else
              {
                char v39 = -55;
              }
            }

            else
            {
              char v39 = -48;
            }

            char v37 = (v37 * a3) + (v38 + v39);
            if (((v37 >> 8) & 1) != 0) {
              goto LABEL_143;
            }
            ++result;
            --v6;
          }

          while (v6);
          unsigned __int8 v16 = v37;
          char v54 = 0;
          goto LABEL_145;
        }

        goto LABEL_99;
      }

      goto LABEL_143;
    }

    if (v6 >= 1)
    {
      uint64_t v8 = v6 - 1;
      if (v6 != 1)
      {
        unsigned __int8 v9 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v10 = a3 + 55;
        }

        else
        {
          unsigned __int8 v9 = 97;
          unsigned __int8 v10 = 65;
        }

        if (a3 <= 10) {
          unsigned __int8 v11 = a3 + 48;
        }
        else {
          unsigned __int8 v11 = 58;
        }
        if (result)
        {
          LOBYTE(v12) = 0;
          uint64_t v13 = (unsigned __int8 *)(result + 1);
          while (1)
          {
            unsigned int v14 = *v13;
            if (v14 < 0x30 || v14 >= v11)
            {
              if (v14 < 0x41 || v14 >= v10)
              {
                unsigned __int8 v16 = 0;
                char v17 = 1;
                if (v14 < 0x61 || v14 >= v9) {
                  goto LABEL_144;
                }
                char v15 = -87;
              }

              else
              {
                char v15 = -55;
              }
            }

            else
            {
              char v15 = -48;
            }

            int v12 = (v12 * a3) - (v14 + v15);
            if ((v12 & 0xFFFFFF00) != 0) {
              goto LABEL_143;
            }
            ++v13;
            if (!--v8) {
              goto LABEL_76;
            }
          }
        }

        unsigned __int8 v16 = 0;
        char v17 = 1;
        goto LABEL_144;
      }

      goto LABEL_150;
    }

    if (v7 != 45)
    {
      if (v6)
      {
        unsigned __int8 v34 = a3 + 87;
        if (a3 > 10)
        {
          uint64_t v35 = a3 + 55;
        }

        else
        {
          unsigned __int8 v34 = 97;
          uint64_t v35 = 65;
        }

        if (a3 <= 10) {
          unsigned int v36 = a3 + 48;
        }
        else {
          unsigned int v36 = 58;
        }
        if (result)
        {
          LOWORD(v37) = 0;
          do
          {
            int v38 = *(unsigned __int8 *)result;
            if (v38 < 0x30 || v38 >= v36)
            {
              if (v38 < 0x41 || v38 >= v35)
              {
                unsigned __int8 v16 = 0;
                char v17 = 1;
                if (v38 < 0x61 || v38 >= v34) {
                  goto LABEL_144;
                }
                char v39 = -87;
              }

              else
              {
                char v39 = -55;
              }
            }

            else
            {
              char v39 = -48;
            }

            unsigned __int8 v40 = (unsigned __int16)v37 * (unsigned __int16)a3;
            if ((v40 & 0xFFFF0000) != 0) {
              goto LABEL_143;
            }
            char v37 = (unsigned __int16)(v37 * a3) + (v38 + v39);
            if ((v37 & 0x10000) != 0) {
              goto LABEL_143;
            }
            ++result;
            --v6;
          }

          while (v6);
          unsigned __int8 v16 = v40 + (v38 + v39);
          int v55 = 0;
          goto LABEL_145;
        }

        goto LABEL_99;
      }

      goto LABEL_143;
    }

    if (v6 >= 1)
    {
      uint64_t v8 = v6 - 1;
      if (v6 != 1)
      {
        unsigned __int8 v9 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v10 = a3 + 55;
        }

        else
        {
          unsigned __int8 v9 = 97;
          unsigned __int8 v10 = 65;
        }

        if (a3 <= 10) {
          unsigned __int8 v11 = a3 + 48;
        }
        else {
          unsigned __int8 v11 = 58;
        }
        if (result)
        {
          LOWORD(v12) = 0;
          uint64_t v13 = (unsigned __int8 *)(result + 1);
          while (1)
          {
            unsigned int v14 = *v13;
            if (v14 < 0x30 || v14 >= v11)
            {
              if (v14 < 0x41 || v14 >= v10)
              {
                unsigned __int8 v16 = 0;
                char v17 = 1;
                if (v14 < 0x61 || v14 >= v9) {
                  goto LABEL_144;
                }
                char v15 = -87;
              }

              else
              {
                char v15 = -55;
              }
            }

            else
            {
              char v15 = -48;
            }

            int v12 = (unsigned __int16)(v12 * a3) - (v14 + v15);
            if ((v12 & 0xFFFF0000) != 0) {
              goto LABEL_143;
            }
            ++v13;
            if (!--v8) {
              goto LABEL_76;
            }
          }
        }

        unsigned __int8 v16 = 0;
        char v17 = 1;
        goto LABEL_144;
      }

      goto LABEL_150;
    }

    if (v7 != 45)
    {
      if (v6)
      {
        unsigned __int8 v40 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v41 = a3 + 55;
        }

        else
        {
          unsigned __int8 v40 = 97;
          unsigned __int8 v41 = 65;
        }

        if (a3 <= 10) {
          unsigned __int8 v42 = a3 + 48;
        }
        else {
          unsigned __int8 v42 = 58;
        }
        if (result)
        {
          int v43 = 0;
          do
          {
            unsigned int v44 = *(unsigned __int8 *)result;
            if (v44 < 0x30 || v44 >= v42)
            {
              if (v44 < 0x41 || v44 >= v41)
              {
                unsigned __int8 v16 = 0;
                char v17 = 1;
                if (v44 < 0x61 || v44 >= v40) {
                  goto LABEL_144;
                }
                char v45 = -87;
              }

              else
              {
                char v45 = -55;
              }
            }

            else
            {
              char v45 = -48;
            }

            int v46 = v43 * (unint64_t)a3;
            if ((v46 & 0xFFFFFFFF00000000LL) != 0) {
              goto LABEL_143;
            }
            char v47 = v44 + v45;
            int v43 = v46 + v47;
            if (__CFADD__((_DWORD)v46, v47)) {
              goto LABEL_143;
            }
            ++result;
            --v6;
          }

          while (v6);
          unsigned __int8 v16 = v46 + v47;
          unsigned __int8 v66 = 0;
          return v16 | ((unint64_t)v66 << 32) | (((a2 >> 60) & 1) << 40);
        }

        goto LABEL_99;
      }

      goto LABEL_143;
    }

    if (v6 >= 1)
    {
      uint64_t v8 = v6 - 1;
      if (v6 != 1)
      {
        unsigned __int8 v9 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v10 = a3 + 55;
        }

        else
        {
          unsigned __int8 v9 = 97;
          unsigned __int8 v10 = 65;
        }

        if (a3 <= 10) {
          unsigned __int8 v11 = a3 + 48;
        }
        else {
          unsigned __int8 v11 = 58;
        }
        if (result)
        {
          int v12 = 0;
          uint64_t v13 = (unsigned __int8 *)(result + 1);
          while (1)
          {
            unsigned int v14 = *v13;
            if (v14 < 0x30 || v14 >= v11)
            {
              if (v14 < 0x41 || v14 >= v10)
              {
                unsigned __int8 v16 = 0;
                char v17 = 1;
                if (v14 < 0x61 || v14 >= v9) {
                  goto LABEL_144;
                }
                char v15 = -87;
              }

              else
              {
                char v15 = -55;
              }
            }

            else
            {
              char v15 = -48;
            }

            int v18 = v12 * (unint64_t)a3;
            if ((v18 & 0xFFFFFFFF00000000LL) != 0) {
              goto LABEL_143;
            }
            char v19 = v14 + v15;
            int v12 = v18 - v19;
            ++v13;
            if (!--v8) {
              goto LABEL_76;
            }
          }
        }

LABEL_99:
        unsigned __int8 v16 = 0;
        char v17 = 0;
LABEL_144:
        unsigned __int8 v66 = v17;
LABEL_145:
        LOBYTE(v65[0]) = (a2 & 0x1000000000000000LL) != 0;
        return v16 | (v66 << 8) | (LOBYTE(v65[0]) << 16);
      }

      goto LABEL_143;
    }

    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
    goto LABEL_151;
  }

  uint64_t v20 = HIBYTE(a2) & 0xF;
  v65[0] = result;
  v65[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (result != 43)
  {
    if (result != 45)
    {
      if (v20)
      {
        LOBYTE(v22) = 0;
        unsigned __int8 v57 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v58 = a3 + 55;
        }

        else
        {
          unsigned __int8 v57 = 97;
          unsigned __int8 v58 = 65;
        }

        if (a3 <= 10) {
          unsigned __int8 v59 = a3 + 48;
        }
        else {
          unsigned __int8 v59 = 58;
        }
        char v60 = (unsigned __int8 *)v65;
        while (1)
        {
          unsigned int v61 = *v60;
          if (v61 < 0x30 || v61 >= v59)
          {
            if (v61 < 0x41 || v61 >= v58)
            {
              unsigned __int8 v16 = 0;
              char v17 = 1;
              if (v61 < 0x61 || v61 >= v57) {
                goto LABEL_144;
              }
              char v62 = -87;
            }

            else
            {
              char v62 = -55;
            }
          }

          else
          {
            char v62 = -48;
          }

          int v63 = (char)v22 * (char)a3;
          char v64 = v63;
          int v22 = (char)v63 + (char)(v61 + v62);
          ++v60;
          if (!--v20) {
            goto LABEL_142;
          }
        }
      }

      goto LABEL_143;
    }

    if (v20)
    {
      uint64_t v21 = v20 - 1;
      if (v21)
      {
        LOBYTE(v22) = 0;
        unsigned __int8 v23 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v24 = a3 + 55;
        }

        else
        {
          unsigned __int8 v23 = 97;
          unsigned __int8 v24 = 65;
        }

        if (a3 <= 10) {
          unsigned __int8 v25 = a3 + 48;
        }
        else {
          unsigned __int8 v25 = 58;
        }
        uint64_t v26 = (unsigned __int8 *)v65 + 1;
        while (1)
        {
          unsigned int v27 = *v26;
          if (v27 < 0x30 || v27 >= v25)
          {
            if (v27 < 0x41 || v27 >= v24)
            {
              unsigned __int8 v16 = 0;
              char v17 = 1;
              if (v27 < 0x61 || v27 >= v23) {
                goto LABEL_144;
              }
              char v28 = -87;
            }

            else
            {
              char v28 = -55;
            }
          }

          else
          {
            char v28 = -48;
          }

          int v29 = (char)v22 * (char)a3;
          char v30 = v29;
          int v22 = (char)v29 - (char)(v27 + v28);
          ++v26;
          if (!--v21) {
            goto LABEL_142;
          }
        }
      }

      goto LABEL_143;
    }

    goto LABEL_149;
  }

  if (v20)
  {
    uint64_t v48 = v20 - 1;
    if (v48)
    {
      LOBYTE(v22) = 0;
      unsigned __int8 v49 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v50 = a3 + 55;
      }

      else
      {
        unsigned __int8 v49 = 97;
        unsigned __int8 v50 = 65;
      }

      if (a3 <= 10) {
        unsigned __int8 v51 = a3 + 48;
      }
      else {
        unsigned __int8 v51 = 58;
      }
      int v52 = (unsigned __int8 *)v65 + 1;
      do
      {
        unsigned int v53 = *v52;
        if (v53 < 0x30 || v53 >= v51)
        {
          if (v53 < 0x41 || v53 >= v50)
          {
            unsigned __int8 v16 = 0;
            char v17 = 1;
            if (v53 < 0x61 || v53 >= v49) {
              goto LABEL_144;
            }
            char v54 = -87;
          }

          else
          {
            char v54 = -55;
          }
        }

        else
        {
          char v54 = -48;
        }

        int v55 = (char)v22 * (char)a3;
        char v56 = v55;
        int v22 = (char)v55 + (char)(v53 + v54);
        ++v52;
        --v48;
      }

      while (v48);
LABEL_142:
      unsigned __int8 v16 = v22;
      unsigned __int8 v66 = 0;
      goto LABEL_145;
    }

    goto LABEL_143;
  }

        unsigned __int8 v16 = 0;
        char v17 = 0;
LABEL_144:
        unsigned __int8 v66 = v17;
LABEL_145:
        LOBYTE(v65[0]) = (a2 & 0x1000000000000000LL) != 0;
        return v16 | (v66 << 16) | (LOBYTE(v65[0]) << 24);
      }

      goto LABEL_143;
    }

    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
    goto LABEL_151;
  }

  uint64_t v20 = HIBYTE(a2) & 0xF;
  v65[0] = result;
  v65[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (result != 43)
  {
    if (result != 45)
    {
      if (v20)
      {
        LOWORD(v22) = 0;
        unsigned __int8 v57 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v58 = a3 + 55;
        }

        else
        {
          unsigned __int8 v57 = 97;
          unsigned __int8 v58 = 65;
        }

        if (a3 <= 10) {
          unsigned __int8 v59 = a3 + 48;
        }
        else {
          unsigned __int8 v59 = 58;
        }
        char v60 = (unsigned __int8 *)v65;
        while (1)
        {
          unsigned int v61 = *v60;
          if (v61 < 0x30 || v61 >= v59)
          {
            if (v61 < 0x41 || v61 >= v58)
            {
              unsigned __int8 v16 = 0;
              char v17 = 1;
              if (v61 < 0x61 || v61 >= v57) {
                goto LABEL_144;
              }
              char v62 = -87;
            }

            else
            {
              char v62 = -55;
            }
          }

          else
          {
            char v62 = -48;
          }

          int v63 = (__int16)v22 * (__int16)a3;
          char v64 = v63;
          int v22 = (__int16)v63 + (v61 + v62);
          ++v60;
          if (!--v20) {
            goto LABEL_142;
          }
        }
      }

      goto LABEL_143;
    }

    if (v20)
    {
      uint64_t v21 = v20 - 1;
      if (v21)
      {
        LOWORD(v22) = 0;
        unsigned __int8 v23 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v24 = a3 + 55;
        }

        else
        {
          unsigned __int8 v23 = 97;
          unsigned __int8 v24 = 65;
        }

        if (a3 <= 10) {
          unsigned __int8 v25 = a3 + 48;
        }
        else {
          unsigned __int8 v25 = 58;
        }
        uint64_t v26 = (unsigned __int8 *)v65 + 1;
        while (1)
        {
          unsigned int v27 = *v26;
          if (v27 < 0x30 || v27 >= v25)
          {
            if (v27 < 0x41 || v27 >= v24)
            {
              unsigned __int8 v16 = 0;
              char v17 = 1;
              if (v27 < 0x61 || v27 >= v23) {
                goto LABEL_144;
              }
              char v28 = -87;
            }

            else
            {
              char v28 = -55;
            }
          }

          else
          {
            char v28 = -48;
          }

          int v29 = (__int16)v22 * (__int16)a3;
          char v30 = v29;
          int v22 = (__int16)v29 - (v27 + v28);
          ++v26;
          if (!--v21) {
            goto LABEL_142;
          }
        }
      }

      goto LABEL_143;
    }

    goto LABEL_149;
  }

  if (v20)
  {
    uint64_t v48 = v20 - 1;
    if (v48)
    {
      LOWORD(v22) = 0;
      unsigned __int8 v49 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v50 = a3 + 55;
      }

      else
      {
        unsigned __int8 v49 = 97;
        unsigned __int8 v50 = 65;
      }

      if (a3 <= 10) {
        unsigned __int8 v51 = a3 + 48;
      }
      else {
        unsigned __int8 v51 = 58;
      }
      int v52 = (unsigned __int8 *)v65 + 1;
      do
      {
        unsigned int v53 = *v52;
        if (v53 < 0x30 || v53 >= v51)
        {
          if (v53 < 0x41 || v53 >= v50)
          {
            unsigned __int8 v16 = 0;
            char v17 = 1;
            if (v53 < 0x61 || v53 >= v49) {
              goto LABEL_144;
            }
            char v54 = -87;
          }

          else
          {
            char v54 = -55;
          }
        }

        else
        {
          char v54 = -48;
        }

        int v55 = (__int16)v22 * (__int16)a3;
        char v56 = v55;
        int v22 = (__int16)v55 + (v53 + v54);
        ++v52;
        --v48;
      }

      while (v48);
LABEL_142:
      unsigned __int8 v16 = v22;
      unsigned __int8 v66 = 0;
      goto LABEL_145;
    }

    goto LABEL_143;
  }

        unsigned __int8 v16 = 0;
        char v17 = 0;
LABEL_144:
        unsigned __int8 v66 = v17;
        return v16 | ((unint64_t)v66 << 32) | (((a2 >> 60) & 1) << 40);
      }

      goto LABEL_143;
    }

    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
    goto LABEL_151;
  }

  uint64_t v20 = HIBYTE(a2) & 0xF;
  v65[0] = result;
  v65[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (result != 43)
  {
    if (result != 45)
    {
      if (v20)
      {
        int v22 = 0;
        unsigned __int8 v57 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v58 = a3 + 55;
        }

        else
        {
          unsigned __int8 v57 = 97;
          unsigned __int8 v58 = 65;
        }

        if (a3 <= 10) {
          unsigned __int8 v59 = a3 + 48;
        }
        else {
          unsigned __int8 v59 = 58;
        }
        char v60 = (unsigned __int8 *)v65;
        while (1)
        {
          unsigned int v61 = *v60;
          if (v61 < 0x30 || v61 >= v59)
          {
            if (v61 < 0x41 || v61 >= v58)
            {
              unsigned __int8 v16 = 0;
              char v17 = 1;
              if (v61 < 0x61 || v61 >= v57) {
                goto LABEL_144;
              }
              char v62 = -87;
            }

            else
            {
              char v62 = -55;
            }
          }

          else
          {
            char v62 = -48;
          }

          int v63 = (int)v22 * (uint64_t)(int)a3;
          char v64 = v61 + v62;
          int v22 = v63 + v64;
          if (__OFADD__((_DWORD)v63, v64)) {
            goto LABEL_143;
          }
          ++v60;
          if (!--v20) {
            goto LABEL_142;
          }
        }
      }

      goto LABEL_143;
    }

    if (v20)
    {
      uint64_t v21 = v20 - 1;
      if (v21)
      {
        int v22 = 0;
        unsigned __int8 v23 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v24 = a3 + 55;
        }

        else
        {
          unsigned __int8 v23 = 97;
          unsigned __int8 v24 = 65;
        }

        if (a3 <= 10) {
          unsigned __int8 v25 = a3 + 48;
        }
        else {
          unsigned __int8 v25 = 58;
        }
        uint64_t v26 = (unsigned __int8 *)v65 + 1;
        while (1)
        {
          unsigned int v27 = *v26;
          if (v27 < 0x30 || v27 >= v25)
          {
            if (v27 < 0x41 || v27 >= v24)
            {
              unsigned __int8 v16 = 0;
              char v17 = 1;
              if (v27 < 0x61 || v27 >= v23) {
                goto LABEL_144;
              }
              char v28 = -87;
            }

            else
            {
              char v28 = -55;
            }
          }

          else
          {
            char v28 = -48;
          }

          int v29 = (int)v22 * (uint64_t)(int)a3;
          char v30 = v27 + v28;
          int v22 = v29 - v30;
          if (__OFSUB__((_DWORD)v29, v30)) {
            goto LABEL_143;
          }
          ++v26;
          if (!--v21) {
            goto LABEL_142;
          }
        }
      }

      goto LABEL_143;
    }

    goto LABEL_149;
  }

  if (v20)
  {
    uint64_t v48 = v20 - 1;
    if (v48)
    {
      int v22 = 0;
      unsigned __int8 v49 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v50 = a3 + 55;
      }

      else
      {
        unsigned __int8 v49 = 97;
        unsigned __int8 v50 = 65;
      }

      if (a3 <= 10) {
        unsigned __int8 v51 = a3 + 48;
      }
      else {
        unsigned __int8 v51 = 58;
      }
      int v52 = (unsigned __int8 *)v65 + 1;
      do
      {
        unsigned int v53 = *v52;
        if (v53 < 0x30 || v53 >= v51)
        {
          if (v53 < 0x41 || v53 >= v50)
          {
            unsigned __int8 v16 = 0;
            char v17 = 1;
            if (v53 < 0x61 || v53 >= v49) {
              goto LABEL_144;
            }
            char v54 = -87;
          }

          else
          {
            char v54 = -55;
          }
        }

        else
        {
          char v54 = -48;
        }

        int v55 = (int)v22 * (uint64_t)(int)a3;
        char v56 = v53 + v54;
        int v22 = v55 + v56;
        if (__OFADD__((_DWORD)v55, v56)) {
          goto LABEL_143;
        }
        ++v52;
        --v48;
      }

      while (v48);
LABEL_142:
      unsigned __int8 v16 = v22;
      unsigned __int8 v66 = 0;
      return v16 | ((unint64_t)v66 << 32) | (((a2 >> 60) & 1) << 40);
    }

    goto LABEL_143;
  }

        unsigned __int8 v16 = 0;
        char v17 = 0;
LABEL_144:
        char v54 = v17;
LABEL_145:
        LOBYTE(v53[0]) = (a2 & 0x1000000000000000LL) != 0;
        return v16 | (v54 << 8) | (LOBYTE(v53[0]) << 16);
      }

      goto LABEL_143;
    }

    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
    goto LABEL_151;
  }

  int v18 = HIBYTE(a2) & 0xF;
  v53[0] = result;
  v53[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (result != 43)
  {
    if (result != 45)
    {
      if (v18)
      {
        LOBYTE(v20) = 0;
        char v47 = a3 + 87;
        if (a3 > 10)
        {
          uint64_t v48 = a3 + 55;
        }

        else
        {
          char v47 = 97;
          uint64_t v48 = 65;
        }

        if (a3 <= 10) {
          unsigned __int8 v49 = a3 + 48;
        }
        else {
          unsigned __int8 v49 = 58;
        }
        unsigned __int8 v50 = (unsigned __int8 *)v53;
        while (1)
        {
          unsigned __int8 v51 = *v50;
          if (v51 < 0x30 || v51 >= v49)
          {
            if (v51 < 0x41 || v51 >= v48)
            {
              unsigned __int8 v16 = 0;
              char v17 = 1;
              if (v51 < 0x61 || v51 >= v47) {
                goto LABEL_144;
              }
              int v52 = -87;
            }

            else
            {
              int v52 = -55;
            }
          }

          else
          {
            int v52 = -48;
          }

          uint64_t v20 = (v20 * a3) + (v51 + v52);
          if (((v20 >> 8) & 1) != 0) {
            goto LABEL_143;
          }
          ++v50;
          if (!--v18) {
            goto LABEL_142;
          }
        }
      }

      goto LABEL_143;
    }

    if (v18)
    {
      char v19 = v18 - 1;
      if (v19)
      {
        LOBYTE(v20) = 0;
        uint64_t v21 = a3 + 87;
        if (a3 > 10)
        {
          int v22 = a3 + 55;
        }

        else
        {
          uint64_t v21 = 97;
          int v22 = 65;
        }

        if (a3 <= 10) {
          unsigned __int8 v23 = a3 + 48;
        }
        else {
          unsigned __int8 v23 = 58;
        }
        unsigned __int8 v24 = (unsigned __int8 *)v53 + 1;
        while (1)
        {
          unsigned __int8 v25 = *v24;
          if (v25 < 0x30 || v25 >= v23)
          {
            if (v25 < 0x41 || v25 >= v22)
            {
              unsigned __int8 v16 = 0;
              char v17 = 1;
              if (v25 < 0x61 || v25 >= v21) {
                goto LABEL_144;
              }
              uint64_t v26 = -87;
            }

            else
            {
              uint64_t v26 = -55;
            }
          }

          else
          {
            uint64_t v26 = -48;
          }

          uint64_t v20 = (v20 * a3) - (v25 + v26);
          if ((v20 & 0xFFFFFF00) != 0) {
            goto LABEL_143;
          }
          ++v24;
          if (!--v19) {
            goto LABEL_142;
          }
        }
      }

      goto LABEL_143;
    }

    goto LABEL_149;
  }

  if (v18)
  {
    unsigned __int8 v40 = v18 - 1;
    if (v40)
    {
      LOBYTE(v20) = 0;
      unsigned __int8 v41 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v42 = a3 + 55;
      }

      else
      {
        unsigned __int8 v41 = 97;
        unsigned __int8 v42 = 65;
      }

      if (a3 <= 10) {
        int v43 = a3 + 48;
      }
      else {
        int v43 = 58;
      }
      unsigned int v44 = (unsigned __int8 *)v53 + 1;
      do
      {
        char v45 = *v44;
        if (v45 < 0x30 || v45 >= v43)
        {
          if (v45 < 0x41 || v45 >= v42)
          {
            unsigned __int8 v16 = 0;
            char v17 = 1;
            if (v45 < 0x61 || v45 >= v41) {
              goto LABEL_144;
            }
            int v46 = -87;
          }

          else
          {
            int v46 = -55;
          }
        }

        else
        {
          int v46 = -48;
        }

        uint64_t v20 = (v20 * a3) + (v45 + v46);
        if (((v20 >> 8) & 1) != 0) {
          goto LABEL_143;
        }
        ++v44;
        --v40;
      }

      while (v40);
LABEL_142:
      unsigned __int8 v16 = v20;
      char v54 = 0;
      goto LABEL_145;
    }

    goto LABEL_143;
  }

        unsigned __int8 v16 = 0;
        char v17 = 0;
LABEL_144:
        int v55 = v17;
LABEL_145:
        LOBYTE(v54[0]) = (a2 & 0x1000000000000000LL) != 0;
        return v16 | (v55 << 16) | (LOBYTE(v54[0]) << 24);
      }

      goto LABEL_143;
    }

    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
    goto LABEL_151;
  }

  int v18 = HIBYTE(a2) & 0xF;
  v54[0] = result;
  v54[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (result != 43)
  {
    if (result != 45)
    {
      if (v18)
      {
        LOWORD(v20) = 0;
        uint64_t v48 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v49 = a3 + 55;
        }

        else
        {
          uint64_t v48 = 97;
          unsigned __int8 v49 = 65;
        }

        if (a3 <= 10) {
          unsigned __int8 v50 = a3 + 48;
        }
        else {
          unsigned __int8 v50 = 58;
        }
        unsigned __int8 v51 = (unsigned __int8 *)v54;
        while (1)
        {
          int v52 = *v51;
          if (v52 < 0x30 || v52 >= v50)
          {
            if (v52 < 0x41 || v52 >= v49)
            {
              unsigned __int8 v16 = 0;
              char v17 = 1;
              if (v52 < 0x61 || v52 >= v48) {
                goto LABEL_144;
              }
              unsigned int v53 = -87;
            }

            else
            {
              unsigned int v53 = -55;
            }
          }

          else
          {
            unsigned int v53 = -48;
          }

          uint64_t v20 = (unsigned __int16)(v20 * a3) + (v52 + v53);
          if ((v20 & 0x10000) != 0) {
            goto LABEL_143;
          }
          ++v51;
          if (!--v18) {
            goto LABEL_142;
          }
        }
      }

      goto LABEL_143;
    }

    if (v18)
    {
      char v19 = v18 - 1;
      if (v19)
      {
        LOWORD(v20) = 0;
        uint64_t v21 = a3 + 87;
        if (a3 > 10)
        {
          int v22 = a3 + 55;
        }

        else
        {
          uint64_t v21 = 97;
          int v22 = 65;
        }

        if (a3 <= 10) {
          unsigned __int8 v23 = a3 + 48;
        }
        else {
          unsigned __int8 v23 = 58;
        }
        unsigned __int8 v24 = (unsigned __int8 *)v54 + 1;
        while (1)
        {
          unsigned __int8 v25 = *v24;
          if (v25 < 0x30 || v25 >= v23)
          {
            if (v25 < 0x41 || v25 >= v22)
            {
              unsigned __int8 v16 = 0;
              char v17 = 1;
              if (v25 < 0x61 || v25 >= v21) {
                goto LABEL_144;
              }
              uint64_t v26 = -87;
            }

            else
            {
              uint64_t v26 = -55;
            }
          }

          else
          {
            uint64_t v26 = -48;
          }

          uint64_t v20 = (unsigned __int16)(v20 * a3) - (v25 + v26);
          if ((v20 & 0xFFFF0000) != 0) {
            goto LABEL_143;
          }
          ++v24;
          if (!--v19) {
            goto LABEL_142;
          }
        }
      }

      goto LABEL_143;
    }

    goto LABEL_149;
  }

  if (v18)
  {
    unsigned __int8 v41 = v18 - 1;
    if (v41)
    {
      LOWORD(v20) = 0;
      unsigned __int8 v42 = a3 + 87;
      if (a3 > 10)
      {
        int v43 = a3 + 55;
      }

      else
      {
        unsigned __int8 v42 = 97;
        int v43 = 65;
      }

      if (a3 <= 10) {
        unsigned int v44 = a3 + 48;
      }
      else {
        unsigned int v44 = 58;
      }
      char v45 = (unsigned __int8 *)v54 + 1;
      do
      {
        int v46 = *v45;
        if (v46 < 0x30 || v46 >= v44)
        {
          if (v46 < 0x41 || v46 >= v43)
          {
            unsigned __int8 v16 = 0;
            char v17 = 1;
            if (v46 < 0x61 || v46 >= v42) {
              goto LABEL_144;
            }
            char v47 = -87;
          }

          else
          {
            char v47 = -55;
          }
        }

        else
        {
          char v47 = -48;
        }

        uint64_t v20 = (unsigned __int16)(v20 * a3) + (v46 + v47);
        if ((v20 & 0x10000) != 0) {
          goto LABEL_143;
        }
        ++v45;
        --v41;
      }

      while (v41);
LABEL_142:
      unsigned __int8 v16 = v20;
      int v55 = 0;
      goto LABEL_145;
    }

    goto LABEL_143;
  }

        unsigned __int8 v16 = 0;
        char v17 = 0;
LABEL_144:
        unsigned __int8 v66 = v17;
        return v16 | ((unint64_t)v66 << 32) | (((a2 >> 60) & 1) << 40);
      }

      goto LABEL_143;
    }

    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
    goto LABEL_151;
  }

  uint64_t v20 = HIBYTE(a2) & 0xF;
  v65[0] = result;
  v65[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (result != 43)
  {
    if (result != 45)
    {
      if (v20)
      {
        int v22 = 0;
        unsigned __int8 v57 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v58 = a3 + 55;
        }

        else
        {
          unsigned __int8 v57 = 97;
          unsigned __int8 v58 = 65;
        }

        if (a3 <= 10) {
          unsigned __int8 v59 = a3 + 48;
        }
        else {
          unsigned __int8 v59 = 58;
        }
        char v60 = (unsigned __int8 *)v65;
        while (1)
        {
          unsigned int v61 = *v60;
          if (v61 < 0x30 || v61 >= v59)
          {
            if (v61 < 0x41 || v61 >= v58)
            {
              unsigned __int8 v16 = 0;
              char v17 = 1;
              if (v61 < 0x61 || v61 >= v57) {
                goto LABEL_144;
              }
              char v62 = -87;
            }

            else
            {
              char v62 = -55;
            }
          }

          else
          {
            char v62 = -48;
          }

          int v63 = v22 * (unint64_t)a3;
          if ((v63 & 0xFFFFFFFF00000000LL) != 0) {
            goto LABEL_143;
          }
          char v64 = v61 + v62;
          int v22 = v63 + v64;
          if (__CFADD__((_DWORD)v63, v64)) {
            goto LABEL_143;
          }
          ++v60;
          if (!--v20) {
            goto LABEL_142;
          }
        }
      }

      goto LABEL_143;
    }

    if (v20)
    {
      uint64_t v21 = v20 - 1;
      if (v21)
      {
        int v22 = 0;
        unsigned __int8 v23 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v24 = a3 + 55;
        }

        else
        {
          unsigned __int8 v23 = 97;
          unsigned __int8 v24 = 65;
        }

        if (a3 <= 10) {
          unsigned __int8 v25 = a3 + 48;
        }
        else {
          unsigned __int8 v25 = 58;
        }
        uint64_t v26 = (unsigned __int8 *)v65 + 1;
        while (1)
        {
          unsigned int v27 = *v26;
          if (v27 < 0x30 || v27 >= v25)
          {
            if (v27 < 0x41 || v27 >= v24)
            {
              unsigned __int8 v16 = 0;
              char v17 = 1;
              if (v27 < 0x61 || v27 >= v23) {
                goto LABEL_144;
              }
              char v28 = -87;
            }

            else
            {
              char v28 = -55;
            }
          }

          else
          {
            char v28 = -48;
          }

          int v29 = v22 * (unint64_t)a3;
          if ((v29 & 0xFFFFFFFF00000000LL) != 0) {
            goto LABEL_143;
          }
          char v30 = v27 + v28;
          int v22 = v29 - v30;
          ++v26;
          if (!--v21) {
            goto LABEL_142;
          }
        }
      }

      goto LABEL_143;
    }

    goto LABEL_149;
  }

  if (v20)
  {
    uint64_t v48 = v20 - 1;
    if (v48)
    {
      int v22 = 0;
      unsigned __int8 v49 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v50 = a3 + 55;
      }

      else
      {
        unsigned __int8 v49 = 97;
        unsigned __int8 v50 = 65;
      }

      if (a3 <= 10) {
        unsigned __int8 v51 = a3 + 48;
      }
      else {
        unsigned __int8 v51 = 58;
      }
      int v52 = (unsigned __int8 *)v65 + 1;
      do
      {
        unsigned int v53 = *v52;
        if (v53 < 0x30 || v53 >= v51)
        {
          if (v53 < 0x41 || v53 >= v50)
          {
            unsigned __int8 v16 = 0;
            char v17 = 1;
            if (v53 < 0x61 || v53 >= v49) {
              goto LABEL_144;
            }
            char v54 = -87;
          }

          else
          {
            char v54 = -55;
          }
        }

        else
        {
          char v54 = -48;
        }

        int v55 = v22 * (unint64_t)a3;
        if ((v55 & 0xFFFFFFFF00000000LL) != 0) {
          goto LABEL_143;
        }
        char v56 = v53 + v54;
        int v22 = v55 + v56;
        if (__CFADD__((_DWORD)v55, v56)) {
          goto LABEL_143;
        }
        ++v52;
        --v48;
      }

      while (v48);
LABEL_142:
      unsigned __int8 v16 = v22;
      unsigned __int8 v66 = 0;
      return v16 | ((unint64_t)v66 << 32) | (((a2 >> 60) & 1) << 40);
    }

    goto LABEL_143;
  }

LABEL_151:
  __break(1u);
  return result;
}

  __break(1u);
  return result;
}

  __break(1u);
  return result;
}

  __break(1u);
  return result;
}

  __break(1u);
  return result;
}

  __break(1u);
  return result;
}

        swift_unknownObjectRetain_n();
        sub_188FFCFF4((uint64_t)&v168);
        sub_188FFD130();
        sub_189067F34();
        swift_unknownObjectRetain();
        v118 = swift_dynamicCastClass();
        if (!v118)
        {
          swift_unknownObjectRelease();
          v118 = MEMORY[0x18961AFE8];
        }

        v119 = *(void *)(v118 + 16);
        swift_release();
        if (__OFSUB__(v10 >> 1, v6)) {
          goto LABEL_217;
        }
        if (v119 != (v10 >> 1) - v6) {
          goto LABEL_218;
        }
        unsigned __int8 v11 = swift_dynamicCastClass();
        if (!v11)
        {
          swift_unknownObjectRelease();
          unsigned __int8 v11 = MEMORY[0x18961AFE8];
        }

        goto LABEL_157;
      }
    }

    goto LABEL_197;
  }

  __break(1u);
LABEL_220:
  __break(1u);
LABEL_221:
  uint64_t result = sub_189067FB8();
  __break(1u);
  return result;
}

unsigned __int8 *sub_1890024F8(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v16 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v17 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v18 = a3 + 55;
        }

        else
        {
          unsigned __int8 v17 = 97;
          unsigned __int8 v18 = 65;
        }

        if (a3 <= 10) {
          unsigned __int8 v19 = a3 + 48;
        }
        else {
          unsigned __int8 v19 = 58;
        }
        if (result)
        {
          LOBYTE(v8) = 0;
          uint64_t v20 = result + 1;
          do
          {
            unsigned int v21 = *v20;
            if (v21 < 0x30 || v21 >= v19)
            {
              if (v21 < 0x41 || v21 >= v18)
              {
                unsigned __int8 v12 = 0;
                int v13 = 1;
                if (v21 < 0x61 || v21 >= v17) {
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                }
                char v22 = -87;
              }

              else
              {
                char v22 = -55;
              }
            }

            else
            {
              char v22 = -48;
            }

            int v23 = (char)v8 * (char)a3;
            char v24 = v23;
            int v8 = (char)v23 + (char)(v21 + v22);
            ++v20;
            --v16;
          }

          while (v16);
LABEL_48:
          int v13 = 0;
          unsigned __int8 v12 = v8;
          return (unsigned __int8 *)(v12 | (v13 << 8));
        }

        goto LABEL_71;
      }

LABEL_72:
      unsigned __int8 v12 = 0;
      int v13 = 1;
      return (unsigned __int8 *)(v12 | (v13 << 8));
    }
  }

  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        unsigned __int8 v25 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v26 = a3 + 55;
        }

        else
        {
          unsigned __int8 v25 = 97;
          unsigned __int8 v26 = 65;
        }

        if (a3 <= 10) {
          unsigned __int8 v27 = a3 + 48;
        }
        else {
          unsigned __int8 v27 = 58;
        }
        if (result)
        {
          LOBYTE(v28) = 0;
          do
          {
            unsigned int v29 = *result;
            if (v29 < 0x30 || v29 >= v27)
            {
              if (v29 < 0x41 || v29 >= v26)
              {
                unsigned __int8 v12 = 0;
                int v13 = 1;
                if (v29 < 0x61 || v29 >= v25) {
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                }
                char v30 = -87;
              }

              else
              {
                char v30 = -55;
              }
            }

            else
            {
              char v30 = -48;
            }

            int v31 = (char)v28 * (char)a3;
            char v32 = v31;
            int v28 = (char)v31 + (char)(v29 + v30);
            ++result;
            --a2;
          }

          while (a2);
          int v13 = 0;
          unsigned __int8 v12 = v28;
          return (unsigned __int8 *)(v12 | (v13 << 8));
        }

        goto LABEL_71;
      }

      goto LABEL_72;
    }

    if (a2 >= 1)
    {
      uint64_t v4 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v5 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v6 = a3 + 55;
        }

        else
        {
          unsigned __int8 v5 = 97;
          unsigned __int8 v6 = 65;
        }

        if (a3 <= 10) {
          unsigned __int8 v7 = a3 + 48;
        }
        else {
          unsigned __int8 v7 = 58;
        }
        if (result)
        {
          LOBYTE(v8) = 0;
          unsigned __int8 v9 = result + 1;
          while (1)
          {
            unsigned int v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                unsigned __int8 v12 = 0;
                int v13 = 1;
                if (v10 < 0x61 || v10 >= v5) {
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                }
                char v11 = -87;
              }

              else
              {
                char v11 = -55;
              }
            }

            else
            {
              char v11 = -48;
            }

            int v14 = (char)v8 * (char)a3;
            char v15 = v14;
            int v8 = (char)v14 - (char)(v10 + v11);
            ++v9;
            if (!--v4) {
              goto LABEL_48;
            }
          }
        }

      unsigned __int8 v12 = 0;
      int v13 = 1;
      return (unsigned __int8 *)(v12 | (v13 << 16));
    }
  }

  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        unsigned __int8 v25 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v26 = a3 + 55;
        }

        else
        {
          unsigned __int8 v25 = 97;
          unsigned __int8 v26 = 65;
        }

        if (a3 <= 10) {
          unsigned __int8 v27 = a3 + 48;
        }
        else {
          unsigned __int8 v27 = 58;
        }
        if (result)
        {
          LOWORD(v28) = 0;
          do
          {
            unsigned int v29 = *result;
            if (v29 < 0x30 || v29 >= v27)
            {
              if (v29 < 0x41 || v29 >= v26)
              {
                unsigned __int8 v12 = 0;
                int v13 = 1;
                if (v29 < 0x61 || v29 >= v25) {
                  return (unsigned __int8 *)(v12 | (v13 << 16));
                }
                char v30 = -87;
              }

              else
              {
                char v30 = -55;
              }
            }

            else
            {
              char v30 = -48;
            }

            int v31 = (__int16)v28 * (__int16)a3;
            char v32 = v31;
            int v28 = (__int16)v31 + (v29 + v30);
            ++result;
            --a2;
          }

          while (a2);
          int v13 = 0;
          unsigned __int8 v12 = v28;
          return (unsigned __int8 *)(v12 | (v13 << 16));
        }

        goto LABEL_71;
      }

      goto LABEL_72;
    }

    if (a2 >= 1)
    {
      uint64_t v4 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v5 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v6 = a3 + 55;
        }

        else
        {
          unsigned __int8 v5 = 97;
          unsigned __int8 v6 = 65;
        }

        if (a3 <= 10) {
          unsigned __int8 v7 = a3 + 48;
        }
        else {
          unsigned __int8 v7 = 58;
        }
        if (result)
        {
          LOWORD(v8) = 0;
          unsigned __int8 v9 = result + 1;
          while (1)
          {
            unsigned int v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                unsigned __int8 v12 = 0;
                int v13 = 1;
                if (v10 < 0x61 || v10 >= v5) {
                  return (unsigned __int8 *)(v12 | (v13 << 16));
                }
                char v11 = -87;
              }

              else
              {
                char v11 = -55;
              }
            }

            else
            {
              char v11 = -48;
            }

            int v14 = (__int16)v8 * (__int16)a3;
            char v15 = v14;
            int v8 = (__int16)v14 - (v10 + v11);
            ++v9;
            if (!--v4) {
              goto LABEL_48;
            }
          }
        }

      unsigned __int8 v12 = 0;
      int v13 = 1;
      return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
    }
  }

  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        unsigned __int8 v25 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v26 = a3 + 55;
        }

        else
        {
          unsigned __int8 v25 = 97;
          unsigned __int8 v26 = 65;
        }

        if (a3 <= 10) {
          unsigned __int8 v27 = a3 + 48;
        }
        else {
          unsigned __int8 v27 = 58;
        }
        if (result)
        {
          int v28 = 0;
          do
          {
            unsigned int v29 = *result;
            if (v29 < 0x30 || v29 >= v27)
            {
              if (v29 < 0x41 || v29 >= v26)
              {
                unsigned __int8 v12 = 0;
                int v13 = 1;
                if (v29 < 0x61 || v29 >= v25) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v30 = -87;
              }

              else
              {
                char v30 = -55;
              }
            }

            else
            {
              char v30 = -48;
            }

            int v31 = (int)v28 * (uint64_t)(int)a3;
            char v32 = v29 + v30;
            int v28 = v31 + v32;
            if (__OFADD__((_DWORD)v31, v32)) {
              goto LABEL_72;
            }
            ++result;
            --a2;
          }

          while (a2);
          int v13 = 0;
          unsigned __int8 v12 = v28;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }

        goto LABEL_71;
      }

      goto LABEL_72;
    }

    if (a2 >= 1)
    {
      uint64_t v4 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v5 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v6 = a3 + 55;
        }

        else
        {
          unsigned __int8 v5 = 97;
          unsigned __int8 v6 = 65;
        }

        if (a3 <= 10) {
          unsigned __int8 v7 = a3 + 48;
        }
        else {
          unsigned __int8 v7 = 58;
        }
        if (result)
        {
          int v8 = 0;
          unsigned __int8 v9 = result + 1;
          while (1)
          {
            unsigned int v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                unsigned __int8 v12 = 0;
                int v13 = 1;
                if (v10 < 0x61 || v10 >= v5) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v11 = -87;
              }

              else
              {
                char v11 = -55;
              }
            }

            else
            {
              char v11 = -48;
            }

            int v14 = (int)v8 * (uint64_t)(int)a3;
            char v15 = v10 + v11;
            int v8 = v14 - v15;
            if (__OFSUB__((_DWORD)v14, v15)) {
              goto LABEL_72;
            }
            ++v9;
            if (!--v4) {
              goto LABEL_48;
            }
          }
        }

      unsigned __int8 v12 = 0;
      int v13 = 1;
      return (unsigned __int8 *)(v12 | (v13 << 8));
    }
  }

  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        unsigned int v21 = a3 + 87;
        if (a3 > 10)
        {
          char v22 = a3 + 55;
        }

        else
        {
          unsigned int v21 = 97;
          char v22 = 65;
        }

        if (a3 <= 10) {
          int v23 = a3 + 48;
        }
        else {
          int v23 = 58;
        }
        if (result)
        {
          LOBYTE(v24) = 0;
          do
          {
            unsigned __int8 v25 = *result;
            if (v25 < 0x30 || v25 >= v23)
            {
              if (v25 < 0x41 || v25 >= v22)
              {
                unsigned __int8 v12 = 0;
                int v13 = 1;
                if (v25 < 0x61 || v25 >= v21) {
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                }
                unsigned __int8 v26 = -87;
              }

              else
              {
                unsigned __int8 v26 = -55;
              }
            }

            else
            {
              unsigned __int8 v26 = -48;
            }

            char v24 = (v24 * a3) + (v25 + v26);
            if (((v24 >> 8) & 1) != 0) {
              goto LABEL_72;
            }
            ++result;
            --a2;
          }

          while (a2);
          int v13 = 0;
          unsigned __int8 v12 = v24;
          return (unsigned __int8 *)(v12 | (v13 << 8));
        }

        goto LABEL_71;
      }

      goto LABEL_72;
    }

    if (a2 >= 1)
    {
      uint64_t v4 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v5 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v6 = a3 + 55;
        }

        else
        {
          unsigned __int8 v5 = 97;
          unsigned __int8 v6 = 65;
        }

        if (a3 <= 10) {
          unsigned __int8 v7 = a3 + 48;
        }
        else {
          unsigned __int8 v7 = 58;
        }
        if (result)
        {
          LOBYTE(v8) = 0;
          unsigned __int8 v9 = result + 1;
          while (1)
          {
            unsigned int v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                unsigned __int8 v12 = 0;
                int v13 = 1;
                if (v10 < 0x61 || v10 >= v5) {
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                }
                char v11 = -87;
              }

              else
              {
                char v11 = -55;
              }
            }

            else
            {
              char v11 = -48;
            }

            int v8 = (v8 * a3) - (v10 + v11);
            if ((v8 & 0xFFFFFF00) != 0) {
              goto LABEL_72;
            }
            ++v9;
            if (!--v4) {
              goto LABEL_48;
            }
          }
        }

      unsigned __int8 v12 = 0;
      int v13 = 1;
      return (unsigned __int8 *)(v12 | (v13 << 16));
    }
  }

  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        unsigned int v21 = a3 + 87;
        if (a3 > 10)
        {
          char v22 = a3 + 55;
        }

        else
        {
          unsigned int v21 = 97;
          char v22 = 65;
        }

        if (a3 <= 10) {
          int v23 = a3 + 48;
        }
        else {
          int v23 = 58;
        }
        if (result)
        {
          LOWORD(v24) = 0;
          do
          {
            unsigned __int8 v25 = *result;
            if (v25 < 0x30 || v25 >= v23)
            {
              if (v25 < 0x41 || v25 >= v22)
              {
                unsigned __int8 v12 = 0;
                int v13 = 1;
                if (v25 < 0x61 || v25 >= v21) {
                  return (unsigned __int8 *)(v12 | (v13 << 16));
                }
                unsigned __int8 v26 = -87;
              }

              else
              {
                unsigned __int8 v26 = -55;
              }
            }

            else
            {
              unsigned __int8 v26 = -48;
            }

            char v24 = (unsigned __int16)(v24 * a3) + (v25 + v26);
            if ((v24 & 0x10000) != 0) {
              goto LABEL_72;
            }
            ++result;
            --a2;
          }

          while (a2);
          int v13 = 0;
          unsigned __int8 v12 = v24;
          return (unsigned __int8 *)(v12 | (v13 << 16));
        }

        goto LABEL_71;
      }

      goto LABEL_72;
    }

    if (a2 >= 1)
    {
      uint64_t v4 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v5 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v6 = a3 + 55;
        }

        else
        {
          unsigned __int8 v5 = 97;
          unsigned __int8 v6 = 65;
        }

        if (a3 <= 10) {
          unsigned __int8 v7 = a3 + 48;
        }
        else {
          unsigned __int8 v7 = 58;
        }
        if (result)
        {
          LOWORD(v8) = 0;
          unsigned __int8 v9 = result + 1;
          while (1)
          {
            unsigned int v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                unsigned __int8 v12 = 0;
                int v13 = 1;
                if (v10 < 0x61 || v10 >= v5) {
                  return (unsigned __int8 *)(v12 | (v13 << 16));
                }
                char v11 = -87;
              }

              else
              {
                char v11 = -55;
              }
            }

            else
            {
              char v11 = -48;
            }

            int v8 = (unsigned __int16)(v8 * a3) - (v10 + v11);
            if ((v8 & 0xFFFF0000) != 0) {
              goto LABEL_72;
            }
            ++v9;
            if (!--v4) {
              goto LABEL_48;
            }
          }
        }

      unsigned __int8 v12 = 0;
      int v13 = 1;
      return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
    }
  }

  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        unsigned __int8 v25 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v26 = a3 + 55;
        }

        else
        {
          unsigned __int8 v25 = 97;
          unsigned __int8 v26 = 65;
        }

        if (a3 <= 10) {
          unsigned __int8 v27 = a3 + 48;
        }
        else {
          unsigned __int8 v27 = 58;
        }
        if (result)
        {
          int v28 = 0;
          do
          {
            unsigned int v29 = *result;
            if (v29 < 0x30 || v29 >= v27)
            {
              if (v29 < 0x41 || v29 >= v26)
              {
                unsigned __int8 v12 = 0;
                int v13 = 1;
                if (v29 < 0x61 || v29 >= v25) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v30 = -87;
              }

              else
              {
                char v30 = -55;
              }
            }

            else
            {
              char v30 = -48;
            }

            int v31 = v28 * (unint64_t)a3;
            if ((v31 & 0xFFFFFFFF00000000LL) != 0) {
              goto LABEL_72;
            }
            char v32 = v29 + v30;
            int v28 = v31 + v32;
            if (__CFADD__((_DWORD)v31, v32)) {
              goto LABEL_72;
            }
            ++result;
            --a2;
          }

          while (a2);
          int v13 = 0;
          unsigned __int8 v12 = v28;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }

        goto LABEL_71;
      }

      goto LABEL_72;
    }

    if (a2 >= 1)
    {
      uint64_t v4 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v5 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v6 = a3 + 55;
        }

        else
        {
          unsigned __int8 v5 = 97;
          unsigned __int8 v6 = 65;
        }

        if (a3 <= 10) {
          unsigned __int8 v7 = a3 + 48;
        }
        else {
          unsigned __int8 v7 = 58;
        }
        if (result)
        {
          int v8 = 0;
          unsigned __int8 v9 = result + 1;
          while (1)
          {
            unsigned int v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                unsigned __int8 v12 = 0;
                int v13 = 1;
                if (v10 < 0x61 || v10 >= v5) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v11 = -87;
              }

              else
              {
                char v11 = -55;
              }
            }

            else
            {
              char v11 = -48;
            }

            int v14 = v8 * (unint64_t)a3;
            if ((v14 & 0xFFFFFFFF00000000LL) != 0) {
              goto LABEL_72;
            }
            char v15 = v10 + v11;
            int v8 = v14 - v15;
            ++v9;
            if (!--v4) {
              goto LABEL_48;
            }
          }
        }

          swift_retain();
LABEL_73:
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          unsigned __int8 v66 = v6;
          unsigned __int8 v42 = sub_18904DA94(v21);
          int v43 = *(void *)(v6 + 16);
          unsigned int v44 = (v41 & 1) == 0;
          char v45 = v43 + v44;
          if (__OFADD__(v43, v44)) {
            goto LABEL_97;
          }
          a1 = v41;
          if (*(void *)(v6 + 24) >= v45)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
              sub_18904DE40();
            }
          }

          else
          {
            sub_18904E878(v45, isUniquelyReferenced_nonNull_native);
            int v46 = sub_18904DA94(v21);
            if ((a1 & 1) != (v47 & 1)) {
              goto LABEL_113;
            }
            unsigned __int8 v42 = v46;
          }

          unsigned __int8 v6 = v66;
          uint64_t v48 = 8 * v42;
          if ((a1 & 1) != 0)
          {
            unsigned __int8 v49 = *(void *)(v66 + 56);
            swift_release();
            *(void *)(v49 + v48) = v62;
          }

          else
          {
            *(void *)(v66 + 8 * (v42 >> 6) + 64) |= 1LL << v42;
            *(void *)(*(void *)(v6 + 48) + 8 * v42) = v21;
            *(void *)(*(void *)(v6 + 56) + 8 * v42) = v62;
            unsigned __int8 v50 = *(void *)(v6 + 16);
            unsigned __int8 v17 = __OFADD__(v50, 1LL);
            unsigned __int8 v51 = v50 + 1;
            if (v17) {
              goto LABEL_101;
            }
            *(void *)(v6 + 16) = v51;
            swift_retain();
          }

          swift_release();
          swift_bridgeObjectRelease();
          a1 = v28;
          if (v19 == v18)
          {
LABEL_4:
            swift_release();
            unsigned __int8 v7 = v59;
            goto LABEL_5;
          }

          continue;
        }

        break;
      }

      swift_bridgeObjectRetain();
      a1 = sub_189067D54();
      if (!a1) {
        goto LABEL_52;
      }
LABEL_43:
      if ((v29 & 0xC000000000000001LL) != 0)
      {
        uint64_t v35 = MEMORY[0x1895DCCF8](0LL, v29);
        swift_unknownObjectRelease();
        if (v35 != v21)
        {
          if (a1 == 1) {
            goto LABEL_52;
          }
          unsigned int v36 = MEMORY[0x1895DCCF8](1LL, v29);
          swift_unknownObjectRelease();
          if (v36 != v21)
          {
            if (a1 == 2) {
              goto LABEL_52;
            }
            char v37 = 2LL;
            while (1)
            {
              int v38 = MEMORY[0x1895DCCF8](v37, v29);
              unsigned __int8 v57 = v37 + 1;
              if (__OFADD__(v37, 1LL))
              {
                __break(1u);
                goto LABEL_111;
              }

              char v39 = v38;
              swift_unknownObjectRelease();
              if (v39 == v21) {
                break;
              }
              ++v37;
              if (v57 == a1) {
                goto LABEL_52;
              }
            }

            swift_bridgeObjectRelease();
            if ((v6 & 0xC000000000000001LL) != 0) {
              goto LABEL_55;
            }
            goto LABEL_72;
          }
        }
      }

      else if (*(void *)(v29 + 32) != v21)
      {
        if (a1 == 1) {
          goto LABEL_52;
        }
        if (*(void *)(v29 + 40) != v21)
        {
          if (a1 != 2)
          {
            char v30 = 6LL;
            while (1)
            {
              int v31 = v30 - 3;
              if (__OFADD__(v30 - 4, 1LL)) {
                break;
              }
              if (*(void *)(v29 + 8 * v30) == v21) {
                goto LABEL_71;
              }
              ++v30;
              if (v31 == a1) {
                goto LABEL_52;
              }
            }

LABEL_71:
        unsigned __int8 v12 = 0;
        int v13 = 0;
        return (unsigned __int8 *)(v12 | (v13 << 8));
      }

      goto LABEL_72;
    }

    __break(1u);
  }

  __break(1u);
  return result;
}

        unsigned __int8 v12 = 0;
        int v13 = 0;
        return (unsigned __int8 *)(v12 | (v13 << 16));
      }

      goto LABEL_72;
    }

    __break(1u);
  }

  __break(1u);
  return result;
}

        unsigned __int8 v12 = 0;
        int v13 = 0;
        return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
      }

      goto LABEL_72;
    }

    __break(1u);
  }

  __break(1u);
  return result;
}

        unsigned __int8 v12 = 0;
        int v13 = 0;
        return (unsigned __int8 *)(v12 | (v13 << 8));
      }

      goto LABEL_72;
    }

    __break(1u);
  }

  __break(1u);
  return result;
}

        unsigned __int8 v12 = 0;
        int v13 = 0;
        return (unsigned __int8 *)(v12 | (v13 << 16));
      }

      goto LABEL_72;
    }

    __break(1u);
  }

  __break(1u);
  return result;
}

        unsigned __int8 v12 = 0;
        int v13 = 0;
        return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
      }

      goto LABEL_72;
    }

    __break(1u);
  }

  __break(1u);
  return result;
}

          MEMORY[0x1895F8858](v11);
          v224 = v255;
          v174 = sub_18900F0EC( (void *(*)(uint64_t *__return_ptr, uint64_t *))sub_189023C68,  (uint64_t)&v222,  v172,  v173);
          v176 = v175;
          swift_bridgeObjectRelease();
          v177 = 0xD000000000000013LL;
          if (v176) {
            v177 = (unint64_t)v174;
          }
          v243 = v177;
          v178 = 0x800000018906D590LL;
          if (v176) {
            v178 = v176;
          }
          v239 = (void *)v178;
          MEMORY[0x1895DD340](v236);
          swift_bridgeObjectRelease();
          v222 = v167;
          v223 = v165;
          v179 = v167;
          v180 = v231;
          v181 = v237;
          v182 = v241;
          v183 = v242;
          v185 = v244;
          v184 = (uint64_t)v245;
          sub_18901FFCC(v231, v166, v168, v237, v242, v244, (uint64_t)v245, v241, v222, v223, 15);
          sub_18901FFCC(v180, v166, v168, v181, v183, v185, v184, v182, v179, v238, 15);
          MEMORY[0x1895DD340](v261);
          unsigned int v21 = 0LL;
          *(void *)&v235 = 0LL;
          *(void *)&v240 = 0LL;
          char v22 = 0LL;
          int v23 = 0;
          unsigned __int8 v12 = v243;
          int v14 = (uint64_t)v239;
          a6 = v230;
          goto LABEL_125;
        }

        if (v264 == 1 && !(v266 | v265 | v267 | v53 | v54))
        {
          int v55 = v273;
          v239 = (void *)v266;
          v243 = v272;
          v244 = v269;
          v242 = v268;
          char v56 = swift_bridgeObjectRetain();
          sub_189010DE4(v56, (uint64_t)v255);
          unsigned __int8 v57 = *(void *)&v255[16];
          unsigned __int8 v58 = *(_OWORD *)&v255[64];
          unsigned __int8 v59 = *(void *)&v255[80];
          unsigned int v61 = *(_OWORD *)&v255[32];
          char v60 = *(_OWORD *)&v255[48];
          v232 = *(_OWORD *)v255;
          v233 = *(_OWORD *)&v255[32];
          v234 = *(_OWORD *)&v255[48];
          *(_OWORD *)&v255[8] = *(_OWORD *)v255;
          *(void *)v255 = 0LL;
          *(_OWORD *)&v255[24] = __PAIR128__(*(unint64_t *)&v255[24], v57);
          *(_OWORD *)&v255[40] = v61;
          *(_OWORD *)&v255[56] = v60;
          *(_OWORD *)&v255[72] = v58;
          *(void *)&v255[88] = v59;
          v231 = sub_18900F890();
          char v62 = v14;
          int v63 = a6;
          uint64_t v65 = v64;
          MEMORY[0x1895DD340](v236);
          swift_bridgeObjectRelease();
          sub_18901FFCC(1LL, v62, (uint64_t)v239, v15, v242, v244, (uint64_t)v245, v241, v243, v55, 15);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unsigned __int8 v12 = v231;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          MEMORY[0x1895DD340](v261);
          unsigned int v21 = 0LL;
          *(void *)&v235 = 0LL;
          *(void *)&v240 = 0LL;
          char v22 = 0LL;
          int v23 = 0;
          unsigned __int8 v66 = v65;
          a6 = v63;
          int v14 = v66;
          goto LABEL_125;
        }

      swift_bridgeObjectRelease();
      if ((v6 & 0xC000000000000001LL) != 0) {
        goto LABEL_55;
      }
      goto LABEL_72;
    }

    unsigned __int8 v18 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    swift_bridgeObjectRetain();
    if (v18) {
      goto LABEL_23;
    }
LABEL_92:
    swift_release();
LABEL_5:
    swift_bridgeObjectRelease();
    unsigned __int8 v5 = v71;
  }

  swift_bridgeObjectRelease();
  char v54 = swift_allocObject();
  *(void *)(v54 + 16) = v6;
  int v55 = swift_allocObject();
  *(void *)(v55 + 16) = sub_189025B48;
  *(void *)(v55 + 24) = v54;
  unsigned __int8 v66 = v16;
  uint64_t v67 = 1;
  uint64_t v68 = sub_189025B74;
  uint64_t v69 = v55;
  uint64_t v70 = 0;
  unsigned int v53 = sub_189024A0C();
LABEL_95:
  swift_bridgeObjectRelease();
  return v53;
}

uint64_t sub_1890027AC(uint64_t result, unint64_t a2, uint64_t a3)
{
  if ((a2 & 0x1000000000000000LL) != 0)
  {
    unsigned __int16 v16 = 0;
    unsigned __int8 v66 = 0;
    goto LABEL_145;
  }

  uint64_t v5 = result;
  if ((a2 & 0x2000000000000000LL) == 0)
  {
    if ((result & 0x1000000000000000LL) != 0)
    {
      uint64_t result = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
      uint64_t v6 = v5 & 0xFFFFFFFFFFFFLL;
    }

    else
    {
      uint64_t result = sub_189067C70();
    }

    int v7 = *(unsigned __int8 *)result;
    if (v7 == 43)
    {
      if (v6 >= 1)
      {
        uint64_t v31 = v6 - 1;
        if (v6 != 1)
        {
          unsigned __int8 v32 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v33 = a3 + 55;
          }

          else
          {
            unsigned __int8 v32 = 97;
            unsigned __int8 v33 = 65;
          }

          if (a3 <= 10) {
            unsigned __int8 v34 = a3 + 48;
          }
          else {
            unsigned __int8 v34 = 58;
          }
          if (result)
          {
            LOWORD(v12) = 0;
            uint64_t v35 = (unsigned __int8 *)(result + 1);
            do
            {
              unsigned int v36 = *v35;
              if (v36 < 0x30 || v36 >= v34)
              {
                if (v36 < 0x41 || v36 >= v33)
                {
                  unsigned __int16 v16 = 0;
                  char v17 = 1;
                  if (v36 < 0x61 || v36 >= v32) {
                    goto LABEL_144;
                  }
                  char v37 = -87;
                }

                else
                {
                  char v37 = -55;
                }
              }

              else
              {
                char v37 = -48;
              }

              int v38 = (__int16)v12 * (__int16)a3;
              __int16 v39 = v38;
              int v12 = (__int16)v38 + (v36 + v37);
              ++v35;
              --v31;
            }

            while (v31);
LABEL_76:
            unsigned __int16 v16 = v12;
            unsigned __int8 v66 = 0;
            goto LABEL_145;
          }

          goto LABEL_99;
        }

unsigned __int8 *sub_189002D70(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v16 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v17 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v18 = a3 + 55;
        }

        else
        {
          unsigned __int8 v17 = 97;
          unsigned __int8 v18 = 65;
        }

        if (a3 <= 10) {
          unsigned __int8 v19 = a3 + 48;
        }
        else {
          unsigned __int8 v19 = 58;
        }
        if (result)
        {
          LOWORD(v8) = 0;
          uint64_t v20 = result + 1;
          do
          {
            unsigned int v21 = *v20;
            if (v21 < 0x30 || v21 >= v19)
            {
              if (v21 < 0x41 || v21 >= v18)
              {
                unsigned __int16 v12 = 0;
                int v13 = 1;
                if (v21 < 0x61 || v21 >= v17) {
                  return (unsigned __int8 *)(v12 | (v13 << 16));
                }
                char v22 = -87;
              }

              else
              {
                char v22 = -55;
              }
            }

            else
            {
              char v22 = -48;
            }

            int v23 = (__int16)v8 * (__int16)a3;
            __int16 v24 = v23;
            int v8 = (__int16)v23 + (v21 + v22);
            ++v20;
            --v16;
          }

          while (v16);
LABEL_48:
          int v13 = 0;
          unsigned __int16 v12 = v8;
          return (unsigned __int8 *)(v12 | (v13 << 16));
        }

        goto LABEL_71;
      }

uint64_t sub_189003024(uint64_t result, unint64_t a2, uint64_t a3)
{
  if ((a2 & 0x1000000000000000LL) != 0)
  {
    unsigned int v16 = 0;
    unsigned __int8 v66 = 0;
    return v16 | ((unint64_t)v66 << 32) | (((a2 >> 60) & 1) << 40);
  }

  uint64_t v5 = result;
  if ((a2 & 0x2000000000000000LL) == 0)
  {
    if ((result & 0x1000000000000000LL) != 0)
    {
      uint64_t result = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
      uint64_t v6 = v5 & 0xFFFFFFFFFFFFLL;
    }

    else
    {
      uint64_t result = sub_189067C70();
    }

    int v7 = *(unsigned __int8 *)result;
    if (v7 == 43)
    {
      if (v6 >= 1)
      {
        uint64_t v31 = v6 - 1;
        if (v6 != 1)
        {
          unsigned __int8 v32 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v33 = a3 + 55;
          }

          else
          {
            unsigned __int8 v32 = 97;
            unsigned __int8 v33 = 65;
          }

          if (a3 <= 10) {
            unsigned __int8 v34 = a3 + 48;
          }
          else {
            unsigned __int8 v34 = 58;
          }
          if (result)
          {
            unsigned int v12 = 0;
            uint64_t v35 = (unsigned __int8 *)(result + 1);
            do
            {
              unsigned int v36 = *v35;
              if (v36 < 0x30 || v36 >= v34)
              {
                if (v36 < 0x41 || v36 >= v33)
                {
                  unsigned int v16 = 0;
                  char v17 = 1;
                  if (v36 < 0x61 || v36 >= v32) {
                    goto LABEL_144;
                  }
                  char v37 = -87;
                }

                else
                {
                  char v37 = -55;
                }
              }

              else
              {
                char v37 = -48;
              }

              uint64_t v38 = (int)v12 * (uint64_t)(int)a3;
              unsigned __int8 v39 = v36 + v37;
              unsigned int v12 = v38 + v39;
              if (__OFADD__((_DWORD)v38, v39)) {
                goto LABEL_143;
              }
              ++v35;
              --v31;
            }

            while (v31);
LABEL_76:
            unsigned int v16 = v12;
            unsigned __int8 v66 = 0;
            return v16 | ((unint64_t)v66 << 32) | (((a2 >> 60) & 1) << 40);
          }

          goto LABEL_99;
        }

unsigned __int8 *sub_189003568(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v16 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v17 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v18 = a3 + 55;
        }

        else
        {
          unsigned __int8 v17 = 97;
          unsigned __int8 v18 = 65;
        }

        if (a3 <= 10) {
          unsigned __int8 v19 = a3 + 48;
        }
        else {
          unsigned __int8 v19 = 58;
        }
        if (result)
        {
          unsigned int v8 = 0;
          uint64_t v20 = result + 1;
          do
          {
            unsigned int v21 = *v20;
            if (v21 < 0x30 || v21 >= v19)
            {
              if (v21 < 0x41 || v21 >= v18)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v21 < 0x61 || v21 >= v17) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v22 = -87;
              }

              else
              {
                char v22 = -55;
              }
            }

            else
            {
              char v22 = -48;
            }

            uint64_t v23 = (int)v8 * (uint64_t)(int)a3;
            unsigned __int8 v24 = v21 + v22;
            unsigned int v8 = v23 + v24;
            if (__OFADD__((_DWORD)v23, v24)) {
              goto LABEL_72;
            }
            ++v20;
            --v16;
          }

          while (v16);
LABEL_48:
          unsigned __int8 v13 = 0;
          unsigned int v12 = v8;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }

        goto LABEL_71;
      }

uint64_t sub_1890037E8(uint64_t result, unint64_t a2, uint64_t a3)
{
  if ((a2 & 0x1000000000000000LL) != 0)
  {
    uint64_t result = 0LL;
    char v65 = 0;
    goto LABEL_128;
  }

  if ((a2 & 0x2000000000000000LL) == 0)
  {
    if ((result & 0x1000000000000000LL) != 0)
    {
      unsigned __int8 v5 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      uint64_t v6 = result & 0xFFFFFFFFFFFFLL;
    }

    else
    {
      uint64_t result = sub_189067C70();
      unsigned __int8 v5 = (unsigned __int8 *)result;
    }

    int v7 = *v5;
    if (v7 == 43)
    {
      if (v6 < 1)
      {
LABEL_134:
        __break(1u);
        goto LABEL_135;
      }

      uint64_t v30 = v6 - 1;
      if (v6 != 1)
      {
        unsigned __int8 v31 = a3 + 55;
        unsigned __int8 v32 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v33 = 58;
        }

        else
        {
          unsigned __int8 v32 = 97;
          unsigned __int8 v31 = 65;
          unsigned __int8 v33 = a3 + 48;
        }

        if (v5)
        {
          uint64_t v12 = 0LL;
          unsigned __int8 v34 = v5 + 1;
          do
          {
            unsigned int v35 = *v34;
            if (v35 < 0x30 || v35 >= v33)
            {
              if (v35 < 0x41 || v35 >= v31)
              {
                uint64_t result = 0LL;
                char v16 = 1;
                if (v35 < 0x61 || v35 >= v32) {
                  goto LABEL_88;
                }
                char v36 = -87;
              }

              else
              {
                char v36 = -55;
              }
            }

            else
            {
              char v36 = -48;
            }

            uint64_t v37 = v12 * a3;
            unsigned __int8 v38 = v35 + v36;
            uint64_t v12 = v37 + v38;
            if (__OFADD__(v37, v38)) {
              goto LABEL_129;
            }
            ++v34;
            --v30;
          }

          while (v30);
LABEL_67:
          uint64_t result = v12;
          char v65 = 0;
          goto LABEL_128;
        }

        goto LABEL_87;
      }
    }

    else
    {
      if (v7 == 45)
      {
        if (v6 >= 1)
        {
          uint64_t v8 = v6 - 1;
          if (v6 != 1)
          {
            unsigned __int8 v9 = a3 + 55;
            unsigned __int8 v10 = a3 + 87;
            if (a3 > 10)
            {
              unsigned __int8 v11 = 58;
            }

            else
            {
              unsigned __int8 v10 = 97;
              unsigned __int8 v9 = 65;
              unsigned __int8 v11 = a3 + 48;
            }

            if (v5)
            {
              uint64_t v12 = 0LL;
              unsigned __int8 v13 = v5 + 1;
              while (1)
              {
                unsigned int v14 = *v13;
                if (v14 < 0x30 || v14 >= v11)
                {
                  if (v14 < 0x41 || v14 >= v9)
                  {
                    uint64_t result = 0LL;
                    char v16 = 1;
                    if (v14 < 0x61 || v14 >= v10) {
                      goto LABEL_88;
                    }
                    char v15 = -87;
                  }

                  else
                  {
                    char v15 = -55;
                  }
                }

                else
                {
                  char v15 = -48;
                }

                uint64_t v17 = v12 * a3;
                unsigned __int8 v18 = v14 + v15;
                uint64_t v12 = v17 - v18;
                if (__OFSUB__(v17, v18)) {
                  goto LABEL_129;
                }
                ++v13;
                if (!--v8) {
                  goto LABEL_67;
                }
              }
            }

LABEL_87:
            uint64_t result = 0LL;
            char v16 = 0;
LABEL_88:
            char v65 = v16;
            goto LABEL_128;
          }

          goto LABEL_129;
        }

        __break(1u);
        goto LABEL_133;
      }

      if (v6)
      {
        unsigned __int8 v39 = a3 + 55;
        unsigned __int8 v40 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v41 = 58;
        }

        else
        {
          unsigned __int8 v40 = 97;
          unsigned __int8 v39 = 65;
          unsigned __int8 v41 = a3 + 48;
        }

        if (!v5) {
          goto LABEL_87;
        }
        uint64_t v42 = 0LL;
        do
        {
          unsigned int v43 = *v5;
          if (v43 < 0x30 || v43 >= v41)
          {
            if (v43 < 0x41 || v43 >= v39)
            {
              uint64_t result = 0LL;
              char v16 = 1;
              if (v43 < 0x61 || v43 >= v40) {
                goto LABEL_88;
              }
              char v44 = -87;
            }

            else
            {
              char v44 = -55;
            }
          }

          else
          {
            char v44 = -48;
          }

          uint64_t v45 = v42 * a3;
          unsigned __int8 v46 = v43 + v44;
          uint64_t v42 = v45 + v46;
          if (__OFADD__(v45, v46)) {
            goto LABEL_129;
          }
          ++v5;
          --v6;
        }

        while (v6);
        uint64_t result = v45 + v46;
        char v65 = 0;
LABEL_128:
        LOBYTE(v64[0]) = (a2 & 0x1000000000000000LL) != 0;
        return result;
      }
    }

LABEL_129:
    uint64_t result = 0LL;
    char v65 = 1;
    goto LABEL_128;
  }

  uint64_t v19 = HIBYTE(a2) & 0xF;
  v64[0] = result;
  v64[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (result != 43)
  {
    if (result == 45)
    {
      if (!v19)
      {
LABEL_133:
        __break(1u);
        goto LABEL_134;
      }

      uint64_t v20 = v19 - 1;
      if (v20)
      {
        uint64_t v21 = 0LL;
        unsigned __int8 v22 = a3 + 55;
        unsigned __int8 v23 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v24 = 58;
        }

        else
        {
          unsigned __int8 v23 = 97;
          unsigned __int8 v22 = 65;
          unsigned __int8 v24 = a3 + 48;
        }

        unsigned __int8 v25 = (unsigned __int8 *)v64 + 1;
        while (1)
        {
          unsigned int v26 = *v25;
          if (v26 < 0x30 || v26 >= v24)
          {
            if (v26 < 0x41 || v26 >= v22)
            {
              uint64_t result = 0LL;
              if (v26 < 0x61 || v26 >= v23) {
                goto LABEL_127;
              }
              char v27 = -87;
            }

            else
            {
              char v27 = -55;
            }
          }

          else
          {
            char v27 = -48;
          }

          uint64_t v28 = v21 * a3;
          unsigned __int8 v29 = v26 + v27;
          uint64_t v21 = v28 - v29;
          if (__OFSUB__(v28, v29)) {
            break;
          }
          ++v25;
          if (!--v20) {
            goto LABEL_125;
          }
        }
      }
    }

    else if (v19)
    {
      uint64_t v21 = 0LL;
      unsigned __int8 v56 = a3 + 55;
      unsigned __int8 v57 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v58 = 58;
      }

      else
      {
        unsigned __int8 v57 = 97;
        unsigned __int8 v56 = 65;
        unsigned __int8 v58 = a3 + 48;
      }

      unsigned __int8 v59 = (unsigned __int8 *)v64;
      while (1)
      {
        unsigned int v60 = *v59;
        if (v60 < 0x30 || v60 >= v58)
        {
          if (v60 < 0x41 || v60 >= v56)
          {
            uint64_t result = 0LL;
            if (v60 < 0x61 || v60 >= v57) {
              goto LABEL_127;
            }
            char v61 = -87;
          }

          else
          {
            char v61 = -55;
          }
        }

        else
        {
          char v61 = -48;
        }

        uint64_t v62 = v21 * a3;
        unsigned __int8 v63 = v60 + v61;
        uint64_t v21 = v62 + v63;
        if (__OFADD__(v62, v63)) {
          break;
        }
        ++v59;
        if (!--v19) {
          goto LABEL_125;
        }
      }
    }

            sub_189023C0C(v231, v228, (uint64_t)v88, v237, v242, v244, (uint64_t)v245, v241, v89, v238, 0xDu);
            __break(1u);
            JUMPOUT(0x189023984LL);
          }

          v211 = (uint64_t)v239;
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v263);
        }

        else
        {
          v211 = (uint64_t)v239;
          swift_bridgeObjectRelease();
        }

        MEMORY[0x1895DD340](v260);
        swift_getErrorValue();
        swift_getDynamicType();
        sub_189023C2C();
        if (swift_dynamicCastMetatype())
        {
          swift_getErrorValue();
          v214 = sub_189067FD0();
        }

        else
        {
          *(void *)v255 = v231;
          MEMORY[0x1895DD34C](v231);
          v214 = sub_1890677FC();
        }

        *(void *)&v234 = v214;
        *(void *)&v233 = v215;
        MEMORY[0x1895DD340](v236);
        sub_189023C0C(v231, v228, v211, v237, v242, v244, (uint64_t)v245, v241, v243, v238, 0xDu);
        sub_189023C0C(v231, v228, (uint64_t)v239, v237, v242, v244, (uint64_t)v245, v241, v243, v238, 0xDu);
        *(void *)&v235 = 0LL;
        *(void *)&v240 = 0LL;
        unsigned __int8 v22 = 0LL;
        unsigned __int8 v23 = 2;
        uint64_t v21 = 1LL;
LABEL_124:
        uint64_t v12 = v234;
        unsigned int v14 = v233;
        goto LABEL_125;
      }

      swift_bridgeObjectRelease();
      v141 = v263;
      v140 = v264;
      v142 = (uint64_t)v239;
      char v93 = v243;
      v143 = v228;
      if ((_BYTE)v265)
      {
        a6 = v230;
        if (v265 == 1)
        {
          MEMORY[0x1895DD340](v236);
          *(void *)&v234 = v141;
          *(void *)&v233 = v140;
          sub_189023C0C(v231, v228, (uint64_t)v239, v237, v242, v244, (uint64_t)v245, v241, v243, v238, 0xDu);
          swift_bridgeObjectRelease();
          LOBYTE(v224) = 13;
          v222 = v243;
          v223 = v238;
          v144 = v231;
          v145 = v228;
          v146 = (uint64_t)v239;
          v147 = v237;
          v148 = v242;
          v149 = v244;
          v150 = (uint64_t)v245;
          v151 = v241;
LABEL_115:
          sub_189023C0C(v144, v145, v146, v147, v148, v149, v150, v151, v222, v223, v224);
          goto LABEL_122;
        }

        if (!v263)
        {
          v206 = v240;
LABEL_121:
          sub_189010DE4(v206, (uint64_t)v255);
          v219 = *(void *)&v255[24];
          v225 = *(void *)&v255[16];
          *(void *)&v232 = *(void *)&v255[64];
          *(void *)&v240 = *(void *)&v255[80];
          v226 = *(_OWORD *)v255;
          v227 = *(_OWORD *)&v255[32];
          v229 = *(_OWORD *)&v255[48];
          *(_OWORD *)&v255[8] = *(_OWORD *)v255;
          *(void *)v255 = 0LL;
          *(void *)&v255[24] = v225;
          *(void *)&v255[32] = v219;
          *(_OWORD *)&v255[40] = v227;
          *(_OWORD *)&v255[56] = v229;
          *(_OWORD *)&v255[72] = __PAIR128__(*(unint64_t *)&v255[72], v232);
          *(void *)&v255[88] = v240;
          *(void *)&v234 = sub_18900F890();
          *(void *)&v233 = v220;
          MEMORY[0x1895DD340](v236);
          sub_189023C0C(v89, v143, v142, v237, v242, v91, (uint64_t)v245, v241, v93, v238, 0xDu);
          sub_189023C0C(v89, v143, (uint64_t)v239, v237, v242, v91, (uint64_t)v245, v241, v93, v238, 0xDu);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          a6 = v230;
LABEL_122:
          v153 = v260;
LABEL_123:
          MEMORY[0x1895DD340](v153);
          uint64_t v21 = 0LL;
          *(void *)&v235 = 0LL;
          *(void *)&v240 = 0LL;
          unsigned __int8 v22 = 0LL;
          unsigned __int8 v23 = 0;
          goto LABEL_124;
        }

        swift_bridgeObjectRelease();
        v199 = sub_188FFA928(v229, v235);
        __int128 v88 = sub_189044A44(v199, v200);
        *(void *)&v235 = v201;
        *(void *)&v234 = v202;
        v203 = sub_1890240B4((uint64_t)v88, v141);
        if (v203 >> 62)
        {
          v204 = sub_189067D54();
          if (v204)
          {
LABEL_91:
            *(void *)v255 = MEMORY[0x18961AFE8];
            uint64_t v97 = v255;
            sub_188FFF3E8(0LL, v204 & ~(v204 >> 63), 0);
            if ((v204 & 0x8000000000000000LL) == 0)
            {
              v205 = 0LL;
              v206 = *(void *)v255;
              do
              {
                if ((v203 & 0xC000000000000001LL) != 0) {
                  v207 = MEMORY[0x1895DCCF8](v205, v203);
                }
                else {
                  v207 = swift_retain();
                }
                v240 = *(_OWORD *)(v207 + 16);
                swift_release();
                v208 = v206;
                *(void *)v255 = v206;
                v210 = *(void *)(v206 + 16);
                v209 = *(void *)(v206 + 24);
                if (v210 >= v209 >> 1)
                {
                  sub_188FFF3E8((char *)(v209 > 1), v210 + 1, 1);
                  v208 = *(void *)v255;
                }

                ++v205;
                *(void *)(v208 + 16) = v210 + 1;
                v206 = v208;
                *(_OWORD *)(v208 + 16 * v210 + 32) = v240;
                char v93 = v243;
              }

              while (v204 != v205);
              swift_bridgeObjectRelease();
              v143 = v228;
              v91 = v244;
              goto LABEL_118;
            }

            goto LABEL_127;
          }
        }

        else
        {
          v204 = *(void *)((v203 & 0xFFFFFFFFFFFFF8LL) + 0x10);
          if (v204) {
            goto LABEL_91;
          }
        }

        swift_bridgeObjectRelease();
        v206 = MEMORY[0x18961AFE8];
LABEL_118:
        if (!*(void *)(v206 + 16))
        {
          swift_bridgeObjectRelease();
          __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC828);
          v206 = swift_allocObject();
          *(_OWORD *)(v206 + 16) = xmmword_1890684B0;
          *(_OWORD *)(v206 + 32) = *((_OWORD *)v88 + 1);
        }

        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        v142 = (uint64_t)v239;
        goto LABEL_121;
      }

      if (!v263)
      {
        a6 = v230;
        v213 = (uint64_t)v245;
LABEL_114:
        v259[0] = 0;
        sub_1890198C4(v240, v259, (uint64_t *)v255);
        swift_bridgeObjectRelease();
        *(void *)&v234 = sub_189014BD0(v233, v232);
        *(void *)&v233 = v218;
        MEMORY[0x1895DD340](v236);
        sub_189023C0C(v89, v143, v142, v237, v242, v91, v213, v241, v93, v238, 0xDu);
        sub_188FFC088((uint64_t)v255);
        LOBYTE(v224) = 13;
        v222 = v93;
        v223 = v238;
        v144 = v231;
        v145 = v143;
        v146 = (uint64_t)v239;
        v147 = v237;
        v148 = v242;
        v149 = v91;
        v150 = v213;
        v151 = v241;
        goto LABEL_115;
      }

      swift_bridgeObjectRelease();
      v186 = sub_188FFA928(v229, v235);
      __int128 v88 = sub_189044A44(v186, v187);
      v189 = v188;
      *(void *)&v235 = v190;
      v191 = sub_1890240B4((uint64_t)v88, v141);
      if (v191 >> 62)
      {
        v192 = sub_189067D54();
        if (v192) {
          goto LABEL_79;
        }
      }

      else
      {
        v192 = *(void *)((v191 & 0xFFFFFFFFFFFFF8LL) + 0x10);
        if (v192)
        {
LABEL_79:
          *(void *)&v234 = v189;
          *(void *)v255 = MEMORY[0x18961AFE8];
          uint64_t v97 = v255;
          sub_188FFF3E8(0LL, v192 & ~(v192 >> 63), 0);
          if (v192 < 0)
          {
            __break(1u);
LABEL_127:
            __break(1u);
            goto LABEL_128;
          }

          v193 = 0LL;
          v194 = *(void *)v255;
          do
          {
            if ((v191 & 0xC000000000000001LL) != 0) {
              v195 = MEMORY[0x1895DCCF8](v193, v191);
            }
            else {
              v195 = swift_retain();
            }
            v240 = *(_OWORD *)(v195 + 16);
            swift_release();
            v196 = v194;
            *(void *)v255 = v194;
            v198 = *(void *)(v194 + 16);
            v197 = *(void *)(v194 + 24);
            if (v198 >= v197 >> 1)
            {
              sub_188FFF3E8((char *)(v197 > 1), v198 + 1, 1);
              v196 = *(void *)v255;
            }

            ++v193;
            *(void *)(v196 + 16) = v198 + 1;
            v194 = v196;
            *(_OWORD *)(v196 + 16 * v198 + 32) = v240;
            char v93 = v243;
          }

          while (v192 != v193);
          swift_bridgeObjectRelease();
          v143 = v228;
          v91 = v244;
          v212 = v194;
          goto LABEL_110;
        }
      }

      swift_bridgeObjectRelease();
      v212 = MEMORY[0x18961AFE8];
LABEL_110:
      a6 = v230;
      if (*(void *)(v212 + 16))
      {
        *(void *)&v240 = v212;
      }

      else
      {
        swift_bridgeObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC828);
        v216 = swift_allocObject();
        *(_OWORD *)(v216 + 16) = xmmword_1890684B0;
        v217 = *((_OWORD *)v88 + 1);
        *(void *)&v240 = v216;
        *(_OWORD *)(v216 + 32) = v217;
      }

      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      v213 = (uint64_t)v245;
      v142 = (uint64_t)v239;
      goto LABEL_114;
    }

    v96 = v262;
    *(void *)&v233 = v261;
    sub_189023BEC(v231, v228, (uint64_t)v239, v237, v242, v244, (uint64_t)v245, v241, v243, v238, v234);
    *(void *)&v235 = v96;
    swift_bridgeObjectRetain();
  }

  uint64_t v97 = (_BYTE *)v90;
  uint64_t v98 = *(void *)(v92 + 16);
  if (!v98)
  {
LABEL_128:
    swift_bridgeObjectRelease();
    sub_189023C0C(v231, v93, (uint64_t)v239, v237, v242, v244, (uint64_t)v245, (uint64_t)v97, v243, v238, v234);
    __break(1u);
    goto LABEL_129;
  }

  __int128 v99 = v92 + 16 * v98;
  __int128 v100 = *(void *)(v99 + 16);
  __int128 v101 = *(void *)(v99 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v102 = *(void *)(v101 + 8);
  LOBYTE(v263) = 0;
  *(void *)&v227 = sub_188FFB780(v100, v102, (unsigned __int8 *)&v263, 0LL, 0LL, 0LL);
  *(void *)&v226 = v103;
  *(void *)&v240 = sub_188FFAD68();
  __int128 v104 = swift_allocError();
  __int128 v105 = v231;
  *(void *)v106 = v231;
  *(void *)(v106 + 8) = v93;
  v107 = (uint64_t)v239;
  *(void *)(v106 + 16) = v239;
  v108 = v107;
  v109 = v237;
  v110 = v238;
  *(void *)(v106 + 24) = v237;
  v111 = v109;
  v237 = v109;
  v112 = v242;
  v113 = v243;
  *(void *)(v106 + 32) = v242;
  v114 = v112;
  v242 = v112;
  LOBYTE(v112) = v244;
  *(void *)(v106 + 40) = v244;
  v115 = v112;
  v116 = (uint64_t)v245;
  *(void *)(v106 + 48) = v245;
  *(void *)(v106 + 56) = v90;
  v245 = (void *)v116;
  *(void *)(v106 + 64) = v113;
  *(void *)(v106 + 72) = v110;
  v117 = v234;
  *(_BYTE *)(v106 + 80) = v234;
  sub_18901FE80(v105, v93, v108, v111, v114, v115, v116, v90, v113, v110, v117);
  v118 = sub_18901C614(v104);
  v120 = v119;
  MEMORY[0x1895DD340](v104);
  if (v120) {
    v121 = v118;
  }
  else {
    v121 = 0LL;
  }
  *(void *)&v232 = v121;
  v122 = 0xE000000000000000LL;
  if (v120) {
    v122 = v120;
  }
  *(void *)&v229 = v122;
  v123 = swift_allocError();
  *(void *)v124 = v105;
  *(void *)(v124 + 8) = v93;
  v125 = (uint64_t)v239;
  v126 = v237;
  *(void *)(v124 + 16) = v239;
  *(void *)(v124 + 24) = v126;
  v127 = v242;
  v128 = v244;
  v129 = (uint64_t)v245;
  *(void *)(v124 + 32) = v242;
  *(void *)(v124 + 40) = v128;
  *(void *)(v124 + 48) = v129;
  *(void *)(v124 + 56) = v97;
  v130 = (uint64_t)v97;
  *(void *)(v124 + 64) = v113;
  *(void *)(v124 + 72) = v110;
  v131 = v117;
  *(_BYTE *)(v124 + 80) = v117;
  LOBYTE(v224) = v117;
  *(void *)&v234 = v117;
  v222 = v113;
  v132 = v110;
  v133 = v125;
  sub_18901FE80(v105, v93, v125, v126, v127, v128, v129, v130, v222, v110, (char)v224);
  v134 = v123;
  v135 = sub_18901D1C8(v123);
  v137 = v136;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  MEMORY[0x1895DD340](v134);
  if (v137) {
    v138 = v135;
  }
  else {
    v138 = 0LL;
  }
  *(void *)&v240 = v138;
  v139 = 0xE000000000000000LL;
  if (v137) {
    v139 = v137;
  }
  *(void *)&v227 = v139;
  MEMORY[0x1895DD340](v236);
  sub_189023C0C(v231, v93, v133, v237, v242, v244, (uint64_t)v245, v241, v243, v132, v131);
  unsigned __int8 v22 = v227;
  sub_189023C0C(v231, v93, v133, v237, v242, v244, (uint64_t)v245, v241, v243, v238, v234);
  unsigned __int8 v23 = 1;
  uint64_t v12 = v232;
  unsigned int v14 = v229;
  a6 = v230;
  uint64_t v21 = v233;
LABEL_125:
  *(void *)a6 = v12;
  *(void *)(a6 + 8) = v14;
  v221 = v235;
  *(void *)(a6 + 16) = v21;
  *(void *)(a6 + 24) = v221;
  *(void *)(a6 + 32) = v240;
  *(void *)(a6 + 40) = v22;
  *(_BYTE *)(a6 + 48) = v23;
}

LABEL_126:
    uint64_t result = 0LL;
LABEL_127:
    char v65 = 1;
    goto LABEL_128;
  }

  if (v19)
  {
    uint64_t v47 = v19 - 1;
    if (v47)
    {
      uint64_t v21 = 0LL;
      unsigned __int8 v48 = a3 + 55;
      unsigned __int8 v49 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v50 = 58;
      }

      else
      {
        unsigned __int8 v49 = 97;
        unsigned __int8 v48 = 65;
        unsigned __int8 v50 = a3 + 48;
      }

      unsigned __int8 v51 = (unsigned __int8 *)v64 + 1;
      do
      {
        unsigned int v52 = *v51;
        if (v52 < 0x30 || v52 >= v50)
        {
          if (v52 < 0x41 || v52 >= v48)
          {
            uint64_t result = 0LL;
            if (v52 < 0x61 || v52 >= v49) {
              goto LABEL_127;
            }
            char v53 = -87;
          }

          else
          {
            char v53 = -55;
          }
        }

        else
        {
          char v53 = -48;
        }

        uint64_t v54 = v21 * a3;
        unsigned __int8 v55 = v52 + v53;
        uint64_t v21 = v54 + v55;
        if (__OFADD__(v54, v55)) {
          goto LABEL_126;
        }
        ++v51;
        --v47;
      }

      while (v47);
LABEL_125:
      uint64_t result = v21;
      char v65 = 0;
      goto LABEL_128;
    }

    goto LABEL_126;
  }

LABEL_135:
  __break(1u);
  return result;
}

unsigned __int8 *sub_189003D54(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }

          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }

          if (result)
          {
            uint64_t v9 = 0LL;
            for (i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  uint64_t v13 = 0LL;
                  if (v11 < 0x61 || v11 >= v8) {
                    return (unsigned __int8 *)v13;
                  }
                  char v12 = -87;
                }

                else
                {
                  char v12 = -55;
                }
              }

              else
              {
                char v12 = -48;
              }

              uint64_t v14 = v9 * a3;
              uint64_t v9 = v14 - (v11 + v12);
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }

          return 0LL;
        }

        return 0LL;
      }

      __break(1u);
      goto LABEL_66;
    }

    if (a2)
    {
      unsigned __int8 v23 = a3 + 48;
      unsigned __int8 v24 = a3 + 55;
      unsigned __int8 v25 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v23 = 58;
      }

      else
      {
        unsigned __int8 v25 = 97;
        unsigned __int8 v24 = 65;
      }

      if (result)
      {
        uint64_t v26 = 0LL;
        do
        {
          unsigned int v27 = *result;
          if (v27 < 0x30 || v27 >= v23)
          {
            if (v27 < 0x41 || v27 >= v24)
            {
              uint64_t v13 = 0LL;
              if (v27 < 0x61 || v27 >= v25) {
                return (unsigned __int8 *)v13;
              }
              char v28 = -87;
            }

            else
            {
              char v28 = -55;
            }
          }

          else
          {
            char v28 = -48;
          }

          uint64_t v29 = v26 * a3;
          uint64_t v26 = v29 + (v27 + v28);
          ++result;
          --v3;
        }

        while (v3);
        return (unsigned __int8 *)(v29 + (v27 + v28));
      }

      return 0LL;
    }

    return 0LL;
  }

  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }

  uint64_t v15 = a2 - 1;
  if (a2 == 1) {
    return 0LL;
  }
  unsigned __int8 v16 = a3 + 48;
  unsigned __int8 v17 = a3 + 55;
  unsigned __int8 v18 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v16 = 58;
  }

  else
  {
    unsigned __int8 v18 = 97;
    unsigned __int8 v17 = 65;
  }

  if (!result) {
    return 0LL;
  }
  uint64_t v9 = 0LL;
  uint64_t v19 = result + 1;
  do
  {
    unsigned int v20 = *v19;
    if (v20 < 0x30 || v20 >= v16)
    {
      if (v20 < 0x41 || v20 >= v17)
      {
        uint64_t v13 = 0LL;
        if (v20 < 0x61 || v20 >= v18) {
          return (unsigned __int8 *)v13;
        }
        char v21 = -87;
      }

      else
      {
        char v21 = -55;
      }
    }

    else
    {
      char v21 = -48;
    }

    uint64_t v22 = v9 * a3;
    uint64_t v9 = v22 + (v20 + v21);
    ++v19;
    --v15;
  }

  while (v15);
  return (unsigned __int8 *)v9;
}

uint64_t sub_189003FD0(uint64_t result, unint64_t a2, uint64_t a3)
{
  if ((a2 & 0x1000000000000000LL) != 0)
  {
    unsigned __int8 v16 = 0;
    unsigned __int8 v54 = 0;
    goto LABEL_145;
  }

  uint64_t v5 = result;
  if ((a2 & 0x2000000000000000LL) == 0)
  {
    if ((result & 0x1000000000000000LL) != 0)
    {
      uint64_t result = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
      uint64_t v6 = v5 & 0xFFFFFFFFFFFFLL;
    }

    else
    {
      uint64_t result = sub_189067C70();
    }

    int v7 = *(unsigned __int8 *)result;
    if (v7 == 43)
    {
      if (v6 >= 1)
      {
        uint64_t v27 = v6 - 1;
        if (v6 != 1)
        {
          unsigned __int8 v28 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v29 = a3 + 55;
          }

          else
          {
            unsigned __int8 v28 = 97;
            unsigned __int8 v29 = 65;
          }

          if (a3 <= 10) {
            unsigned __int8 v30 = a3 + 48;
          }
          else {
            unsigned __int8 v30 = 58;
          }
          if (result)
          {
            LOBYTE(v12) = 0;
            unsigned __int8 v31 = (unsigned __int8 *)(result + 1);
            do
            {
              unsigned int v32 = *v31;
              if (v32 < 0x30 || v32 >= v30)
              {
                if (v32 < 0x41 || v32 >= v29)
                {
                  unsigned __int8 v16 = 0;
                  char v17 = 1;
                  if (v32 < 0x61 || v32 >= v28) {
                    goto LABEL_144;
                  }
                  char v33 = -87;
                }

                else
                {
                  char v33 = -55;
                }
              }

              else
              {
                char v33 = -48;
              }

              unsigned int v12 = (v12 * a3) + (v32 + v33);
              if (((v12 >> 8) & 1) != 0) {
                goto LABEL_143;
              }
              ++v31;
              --v27;
            }

            while (v27);
LABEL_76:
            unsigned __int8 v16 = v12;
            unsigned __int8 v54 = 0;
            goto LABEL_145;
          }

          goto LABEL_99;
        }

uint64_t sub_18900457C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, uint64_t, uint64_t))
{
  v8[0] = sub_18906791C();
  v8[1] = v6;
  LOWORD(a4) = sub_189004600(v8, a3, a4);
  swift_bridgeObjectRelease();
  return (unsigned __int16)a4 & 0x1FF;
}

uint64_t sub_189004600(uint64_t *a1, uint64_t a2, uint64_t (*a3)(void *, uint64_t, uint64_t))
{
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  if ((v7 & 0x1000000000000000LL) == 0)
  {
    if ((v7 & 0x2000000000000000LL) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v9 = HIBYTE(v7) & 0xF;
    v16[0] = v6;
    v16[1] = v7 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v8 = v16;
    goto LABEL_7;
  }

  uint64_t v6 = sub_1890016D8();
  uint64_t v12 = v11;
  swift_bridgeObjectRelease();
  *a1 = v6;
  a1[1] = v12;
  unint64_t v7 = v12;
  if ((v12 & 0x2000000000000000LL) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 0x1000000000000000LL) != 0)
  {
    uint64_t v8 = (void *)((v7 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v9 = v6 & 0xFFFFFFFFFFFFLL;
  }

  else
  {
    uint64_t v8 = (void *)sub_189067C70();
  }

LABEL_7:
  __int16 v13 = a3(v8, v9, a2);
  if (!v3) {
    return v13 & 0x1FF;
  }
  return v14;
}

    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }

  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

  while (1)
  {
    unsigned __int8 v16 = *(void *)(a1 + 16);
    if (v5 == v16) {
      break;
    }
    if (v5 >= v16) {
      goto LABEL_36;
    }
    uint64_t v18 = *(v15 - 1);
    char v17 = *v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = sub_188FFCFC8(v3);
    ++v5;
    v15 += 2;
    __int16 v13 = v17;
    uint64_t v3 = v18;
    if (v18) {
      goto LABEL_6;
    }
  }

  uint64_t v6 = v10;
  int v4 = v56;
LABEL_32:
  swift_bridgeObjectRelease();
  uint64_t result = sub_188FFCFC8(v3);
  unsigned __int8 v50 = v6[3];
  if (v50 < 2) {
    return (uint64_t)v6;
  }
  unsigned int v51 = v50 >> 1;
  uint64_t v40 = __OFSUB__(v51, v4);
  char v52 = v51 - v4;
  if (!v40)
  {
    v6[2] = v52;
    return (uint64_t)v6;
  }

  uint64_t v11 = sub_189026DC8(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

    uint64_t v5 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = v5;
    goto LABEL_8;
  }

  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 24);
    goto LABEL_7;
  }

  __swift_assign_boxed_opaque_existential_0((uint64_t *)(a1 + 24), (uint64_t *)(a2 + 24));
LABEL_8:
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

  if (a4)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unsigned __int8 v21 = (char *)a5;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unsigned __int8 v21 = sub_189056E74(0LL, *(void *)(a5 + 16) + 1LL, 1, (char *)a5);
    }
    unsigned __int8 v23 = *((void *)v21 + 2);
    unsigned __int8 v22 = *((void *)v21 + 3);
    if (v23 >= v22 >> 1) {
      unsigned __int8 v21 = sub_189056E74((char *)(v22 > 1), v23 + 1, 1, v21);
    }
    *((void *)v21 + 2) = v23 + 1;
    unsigned __int8 v24 = &v21[16 * v23];
    *((void *)v24 + 4) = a3;
    *((void *)v24 + 5) = a4;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return a1;
}

    uint64_t v5 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v5;
    goto LABEL_8;
  }

  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 32);
    goto LABEL_7;
  }

  __swift_assign_boxed_opaque_existential_0((uint64_t *)(a1 + 32), (uint64_t *)(a2 + 32));
LABEL_8:
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 80), (uint64_t *)(a2 + 80));
  return a1;
}

unsigned __int8 *sub_1890046D0(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v14 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v15 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v16 = a3 + 55;
        }

        else
        {
          unsigned __int8 v15 = 97;
          unsigned __int8 v16 = 65;
        }

        if (a3 <= 10) {
          unsigned __int8 v17 = a3 + 48;
        }
        else {
          unsigned __int8 v17 = 58;
        }
        if (result)
        {
          LOBYTE(v8) = 0;
          uint64_t v18 = result + 1;
          do
          {
            unsigned int v19 = *v18;
            if (v19 < 0x30 || v19 >= v17)
            {
              if (v19 < 0x41 || v19 >= v16)
              {
                unsigned __int8 v12 = 0;
                int v13 = 1;
                if (v19 < 0x61 || v19 >= v15) {
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                }
                char v20 = -87;
              }

              else
              {
                char v20 = -55;
              }
            }

            else
            {
              char v20 = -48;
            }

            unsigned int v8 = (v8 * a3) + (v19 + v20);
            if (((v8 >> 8) & 1) != 0) {
              goto LABEL_72;
            }
            ++v18;
            --v14;
          }

          while (v14);
LABEL_48:
          int v13 = 0;
          unsigned __int8 v12 = v8;
          return (unsigned __int8 *)(v12 | (v13 << 8));
        }

        goto LABEL_71;
      }

uint64_t sub_189004978(uint64_t result, unint64_t a2, uint64_t a3)
{
  if ((a2 & 0x1000000000000000LL) != 0)
  {
    unsigned __int16 v16 = 0;
    unsigned __int8 v55 = 0;
    goto LABEL_145;
  }

  uint64_t v5 = result;
  if ((a2 & 0x2000000000000000LL) == 0)
  {
    if ((result & 0x1000000000000000LL) != 0)
    {
      uint64_t result = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
      uint64_t v6 = v5 & 0xFFFFFFFFFFFFLL;
    }

    else
    {
      uint64_t result = sub_189067C70();
    }

    int v7 = *(unsigned __int8 *)result;
    if (v7 == 43)
    {
      if (v6 >= 1)
      {
        uint64_t v27 = v6 - 1;
        if (v6 != 1)
        {
          unsigned __int8 v28 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v29 = a3 + 55;
          }

          else
          {
            unsigned __int8 v28 = 97;
            unsigned __int8 v29 = 65;
          }

          if (a3 <= 10) {
            unsigned __int8 v30 = a3 + 48;
          }
          else {
            unsigned __int8 v30 = 58;
          }
          if (result)
          {
            LOWORD(v12) = 0;
            unsigned __int8 v31 = (unsigned __int8 *)(result + 1);
            do
            {
              unsigned int v32 = *v31;
              if (v32 < 0x30 || v32 >= v30)
              {
                if (v32 < 0x41 || v32 >= v29)
                {
                  unsigned __int16 v16 = 0;
                  char v17 = 1;
                  if (v32 < 0x61 || v32 >= v28) {
                    goto LABEL_144;
                  }
                  char v33 = -87;
                }

                else
                {
                  char v33 = -55;
                }
              }

              else
              {
                char v33 = -48;
              }

              int v12 = (unsigned __int16)(v12 * a3) + (v32 + v33);
              if ((v12 & 0x10000) != 0) {
                goto LABEL_143;
              }
              ++v31;
              --v27;
            }

            while (v27);
LABEL_76:
            unsigned __int16 v16 = v12;
            unsigned __int8 v55 = 0;
            goto LABEL_145;
          }

          goto LABEL_99;
        }

uint64_t sub_189004F24( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, uint64_t, uint64_t))
{
  v8[0] = sub_18906791C();
  v8[1] = v6;
  LODWORD(a4) = sub_189004FA8(v8, a3, a4);
  swift_bridgeObjectRelease();
  return a4 & 0x1FFFF;
}

uint64_t sub_189004FA8(uint64_t *a1, uint64_t a2, uint64_t (*a3)(void *, uint64_t, uint64_t))
{
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  if ((v7 & 0x1000000000000000LL) != 0)
  {
    uint64_t v6 = sub_1890016D8();
    uint64_t v12 = v11;
    swift_bridgeObjectRelease();
    *a1 = v6;
    a1[1] = v12;
    unint64_t v7 = v12;
    if ((v12 & 0x2000000000000000LL) == 0)
    {
LABEL_3:
      if ((v6 & 0x1000000000000000LL) != 0)
      {
        uint64_t v8 = (void *)((v7 & 0xFFFFFFFFFFFFFFFLL) + 32);
        uint64_t v9 = v6 & 0xFFFFFFFFFFFFLL;
      }

      else
      {
        uint64_t v8 = (void *)sub_189067C70();
      }

      goto LABEL_7;
    }
  }

  else if ((v7 & 0x2000000000000000LL) == 0)
  {
    goto LABEL_3;
  }

  uint64_t v9 = HIBYTE(v7) & 0xF;
  v14[0] = v6;
  v14[1] = v7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v8 = v14;
LABEL_7:
  uint64_t result = a3(v8, v9, a2);
  if (!v3) {
    return result & 0x1FFFF;
  }
  return result;
}

unsigned __int8 *sub_189005070(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v14 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v15 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v16 = a3 + 55;
        }

        else
        {
          unsigned __int8 v15 = 97;
          unsigned __int8 v16 = 65;
        }

        if (a3 <= 10) {
          unsigned __int8 v17 = a3 + 48;
        }
        else {
          unsigned __int8 v17 = 58;
        }
        if (result)
        {
          LOWORD(v8) = 0;
          uint64_t v18 = result + 1;
          do
          {
            unsigned int v19 = *v18;
            if (v19 < 0x30 || v19 >= v17)
            {
              if (v19 < 0x41 || v19 >= v16)
              {
                unsigned __int16 v12 = 0;
                int v13 = 1;
                if (v19 < 0x61 || v19 >= v15) {
                  return (unsigned __int8 *)(v12 | (v13 << 16));
                }
                char v20 = -87;
              }

              else
              {
                char v20 = -55;
              }
            }

            else
            {
              char v20 = -48;
            }

            int v8 = (unsigned __int16)(v8 * a3) + (v19 + v20);
            if ((v8 & 0x10000) != 0) {
              goto LABEL_72;
            }
            ++v18;
            --v14;
          }

          while (v14);
LABEL_48:
          int v13 = 0;
          unsigned __int16 v12 = v8;
          return (unsigned __int8 *)(v12 | (v13 << 16));
        }

        goto LABEL_71;
      }

uint64_t sub_189005318(uint64_t result, unint64_t a2, uint64_t a3)
{
  if ((a2 & 0x1000000000000000LL) != 0)
  {
    unsigned int v16 = 0;
    unsigned __int8 v66 = 0;
    return v16 | ((unint64_t)v66 << 32) | (((a2 >> 60) & 1) << 40);
  }

  uint64_t v5 = result;
  if ((a2 & 0x2000000000000000LL) == 0)
  {
    if ((result & 0x1000000000000000LL) != 0)
    {
      uint64_t result = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
      uint64_t v6 = v5 & 0xFFFFFFFFFFFFLL;
    }

    else
    {
      uint64_t result = sub_189067C70();
    }

    int v7 = *(unsigned __int8 *)result;
    if (v7 == 43)
    {
      if (v6 >= 1)
      {
        uint64_t v31 = v6 - 1;
        if (v6 != 1)
        {
          unsigned __int8 v32 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v33 = a3 + 55;
          }

          else
          {
            unsigned __int8 v32 = 97;
            unsigned __int8 v33 = 65;
          }

          if (a3 <= 10) {
            unsigned __int8 v34 = a3 + 48;
          }
          else {
            unsigned __int8 v34 = 58;
          }
          if (result)
          {
            unsigned int v12 = 0;
            unsigned __int8 v35 = (unsigned __int8 *)(result + 1);
            do
            {
              unsigned int v36 = *v35;
              if (v36 < 0x30 || v36 >= v34)
              {
                if (v36 < 0x41 || v36 >= v33)
                {
                  unsigned int v16 = 0;
                  char v17 = 1;
                  if (v36 < 0x61 || v36 >= v32) {
                    goto LABEL_144;
                  }
                  char v37 = -87;
                }

                else
                {
                  char v37 = -55;
                }
              }

              else
              {
                char v37 = -48;
              }

              unint64_t v38 = v12 * (unint64_t)a3;
              if ((v38 & 0xFFFFFFFF00000000LL) != 0) {
                goto LABEL_143;
              }
              unsigned __int8 v39 = v36 + v37;
              unsigned int v12 = v38 + v39;
              if (__CFADD__((_DWORD)v38, v39)) {
                goto LABEL_143;
              }
              ++v35;
              --v31;
            }

            while (v31);
LABEL_76:
            unsigned int v16 = v12;
            unsigned __int8 v66 = 0;
            return v16 | ((unint64_t)v66 << 32) | (((a2 >> 60) & 1) << 40);
          }

          goto LABEL_99;
        }

uint64_t sub_18900585C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, uint64_t, uint64_t))
{
  v9[0] = sub_18906791C();
  v9[1] = v6;
  unint64_t v7 = sub_1890058E8(v9, a3, a4);
  swift_bridgeObjectRelease();
  return v7 | ((HIDWORD(v7) & 1) << 32);
}

unint64_t sub_1890058E8( uint64_t *a1, uint64_t a2, uint64_t (*a3)(void *, uint64_t, uint64_t))
{
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  if ((v7 & 0x1000000000000000LL) != 0)
  {
    uint64_t v6 = sub_1890016D8();
    uint64_t v12 = v11;
    swift_bridgeObjectRelease();
    *a1 = v6;
    a1[1] = v12;
    unint64_t v7 = v12;
    if ((v12 & 0x2000000000000000LL) == 0)
    {
LABEL_3:
      if ((v6 & 0x1000000000000000LL) != 0)
      {
        uint64_t v8 = (void *)((v7 & 0xFFFFFFFFFFFFFFFLL) + 32);
        uint64_t v9 = v6 & 0xFFFFFFFFFFFFLL;
      }

      else
      {
        uint64_t v8 = (void *)sub_189067C70();
      }

      goto LABEL_7;
    }
  }

  else if ((v7 & 0x2000000000000000LL) == 0)
  {
    goto LABEL_3;
  }

  uint64_t v9 = HIBYTE(v7) & 0xF;
  v14[0] = v6;
  v14[1] = v7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v8 = v14;
LABEL_7:
  unint64_t result = a3(v8, v9, a2);
  if (!v3) {
    return result | ((HIDWORD(result) & 1) << 32);
  }
  return result;
}

unsigned __int8 *sub_1890059B8(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v16 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v17 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v18 = a3 + 55;
        }

        else
        {
          unsigned __int8 v17 = 97;
          unsigned __int8 v18 = 65;
        }

        if (a3 <= 10) {
          unsigned __int8 v19 = a3 + 48;
        }
        else {
          unsigned __int8 v19 = 58;
        }
        if (result)
        {
          unsigned int v8 = 0;
          uint64_t v20 = result + 1;
          do
          {
            unsigned int v21 = *v20;
            if (v21 < 0x30 || v21 >= v19)
            {
              if (v21 < 0x41 || v21 >= v18)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v21 < 0x61 || v21 >= v17) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v22 = -87;
              }

              else
              {
                char v22 = -55;
              }
            }

            else
            {
              char v22 = -48;
            }

            unint64_t v23 = v8 * (unint64_t)a3;
            if ((v23 & 0xFFFFFFFF00000000LL) != 0) {
              goto LABEL_72;
            }
            unsigned __int8 v24 = v21 + v22;
            unsigned int v8 = v23 + v24;
            if (__CFADD__((_DWORD)v23, v24)) {
              goto LABEL_72;
            }
            ++v20;
            --v16;
          }

          while (v16);
LABEL_48:
          unsigned __int8 v13 = 0;
          unsigned int v12 = v8;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }

        goto LABEL_71;
      }

uint64_t sub_189005C38(uint64_t result, unint64_t a2, int64_t a3)
{
  if ((a2 & 0x1000000000000000LL) != 0)
  {
    unint64_t result = 0LL;
    char v66 = 0;
    goto LABEL_130;
  }

  if ((a2 & 0x2000000000000000LL) == 0)
  {
    if ((result & 0x1000000000000000LL) != 0)
    {
      unsigned __int8 v5 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      uint64_t v6 = result & 0xFFFFFFFFFFFFLL;
    }

    else
    {
      unint64_t result = sub_189067C70();
      unsigned __int8 v5 = (unsigned __int8 *)result;
    }

    int v7 = *v5;
    if (v7 == 43)
    {
      if (v6 < 1)
      {
LABEL_136:
        __break(1u);
        goto LABEL_137;
      }

      uint64_t v31 = v6 - 1;
      if (v6 != 1)
      {
        unsigned __int8 v32 = a3 + 55;
        unsigned __int8 v33 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v34 = 58;
        }

        else
        {
          unsigned __int8 v33 = 97;
          unsigned __int8 v32 = 65;
          unsigned __int8 v34 = a3 + 48;
        }

        if (v5)
        {
          unint64_t v12 = 0LL;
          unsigned __int8 v35 = v5 + 1;
          do
          {
            unsigned int v36 = *v35;
            if (v36 < 0x30 || v36 >= v34)
            {
              if (v36 < 0x41 || v36 >= v32)
              {
                unint64_t result = 0LL;
                char v16 = 1;
                if (v36 < 0x61 || v36 >= v33) {
                  goto LABEL_90;
                }
                char v37 = -87;
              }

              else
              {
                char v37 = -55;
              }
            }

            else
            {
              char v37 = -48;
            }

            if (!is_mul_ok(v12, a3)) {
              goto LABEL_131;
            }
            unint64_t v38 = v12 * a3;
            unsigned __int8 v39 = v36 + v37;
            BOOL v19 = __CFADD__(v38, v39);
            unint64_t v12 = v38 + v39;
            if (v19) {
              goto LABEL_131;
            }
            ++v35;
            --v31;
          }

          while (v31);
LABEL_69:
          unint64_t result = v12;
          char v66 = 0;
          goto LABEL_130;
        }

        goto LABEL_89;
      }
    }

    else
    {
      if (v7 == 45)
      {
        if (v6 >= 1)
        {
          uint64_t v8 = v6 - 1;
          if (v6 != 1)
          {
            unsigned __int8 v9 = a3 + 55;
            unsigned __int8 v10 = a3 + 87;
            if (a3 > 10)
            {
              unsigned __int8 v11 = 58;
            }

            else
            {
              unsigned __int8 v10 = 97;
              unsigned __int8 v9 = 65;
              unsigned __int8 v11 = a3 + 48;
            }

            if (v5)
            {
              unint64_t v12 = 0LL;
              unsigned __int8 v13 = v5 + 1;
              while (1)
              {
                unsigned int v14 = *v13;
                if (v14 < 0x30 || v14 >= v11)
                {
                  if (v14 < 0x41 || v14 >= v9)
                  {
                    unint64_t result = 0LL;
                    char v16 = 1;
                    if (v14 < 0x61 || v14 >= v10) {
                      goto LABEL_90;
                    }
                    char v15 = -87;
                  }

                  else
                  {
                    char v15 = -55;
                  }
                }

                else
                {
                  char v15 = -48;
                }

                if (!is_mul_ok(v12, a3)) {
                  goto LABEL_131;
                }
                unint64_t v17 = v12 * a3;
                unsigned __int8 v18 = v14 + v15;
                BOOL v19 = v17 >= v18;
                unint64_t v12 = v17 - v18;
                if (!v19) {
                  goto LABEL_131;
                }
                ++v13;
                if (!--v8) {
                  goto LABEL_69;
                }
              }
            }

LABEL_89:
            unint64_t result = 0LL;
            char v16 = 0;
LABEL_90:
            char v66 = v16;
            goto LABEL_130;
          }

          goto LABEL_131;
        }

        __break(1u);
        goto LABEL_135;
      }

      if (v6)
      {
        unsigned __int8 v40 = a3 + 55;
        unsigned __int8 v41 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v42 = 58;
        }

        else
        {
          unsigned __int8 v41 = 97;
          unsigned __int8 v40 = 65;
          unsigned __int8 v42 = a3 + 48;
        }

        if (!v5) {
          goto LABEL_89;
        }
        unint64_t v43 = 0LL;
        do
        {
          unsigned int v44 = *v5;
          if (v44 < 0x30 || v44 >= v42)
          {
            if (v44 < 0x41 || v44 >= v40)
            {
              unint64_t result = 0LL;
              char v16 = 1;
              if (v44 < 0x61 || v44 >= v41) {
                goto LABEL_90;
              }
              char v45 = -87;
            }

            else
            {
              char v45 = -55;
            }
          }

          else
          {
            char v45 = -48;
          }

          if (!is_mul_ok(v43, a3)) {
            goto LABEL_131;
          }
          unint64_t v46 = v43 * a3;
          unsigned __int8 v47 = v44 + v45;
          BOOL v19 = __CFADD__(v46, v47);
          unint64_t v43 = v46 + v47;
          if (v19) {
            goto LABEL_131;
          }
          ++v5;
          --v6;
        }

        while (v6);
        unint64_t result = v43;
        char v66 = 0;
LABEL_130:
        LOBYTE(v65[0]) = (a2 & 0x1000000000000000LL) != 0;
        return result;
      }
    }

LABEL_131:
    unint64_t result = 0LL;
    char v66 = 1;
    goto LABEL_130;
  }

  uint64_t v20 = HIBYTE(a2) & 0xF;
  v65[0] = result;
  v65[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (result != 43)
  {
    if (result == 45)
    {
      if (!v20)
      {
LABEL_135:
        __break(1u);
        goto LABEL_136;
      }

      uint64_t v21 = v20 - 1;
      if (v21)
      {
        unint64_t v22 = 0LL;
        unsigned __int8 v23 = a3 + 55;
        unsigned __int8 v24 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v25 = 58;
        }

        else
        {
          unsigned __int8 v24 = 97;
          unsigned __int8 v23 = 65;
          unsigned __int8 v25 = a3 + 48;
        }

        unsigned __int8 v26 = (unsigned __int8 *)v65 + 1;
        while (1)
        {
          unsigned int v27 = *v26;
          if (v27 < 0x30 || v27 >= v25)
          {
            if (v27 < 0x41 || v27 >= v23)
            {
              unint64_t result = 0LL;
              if (v27 < 0x61 || v27 >= v24) {
                goto LABEL_129;
              }
              char v28 = -87;
            }

            else
            {
              char v28 = -55;
            }
          }

          else
          {
            char v28 = -48;
          }

          if (!is_mul_ok(v22, a3)) {
            break;
          }
          unint64_t v29 = v22 * a3;
          unsigned __int8 v30 = v27 + v28;
          BOOL v19 = v29 >= v30;
          unint64_t v22 = v29 - v30;
          if (!v19) {
            break;
          }
          ++v26;
          if (!--v21) {
            goto LABEL_127;
          }
        }
      }
    }

    else if (v20)
    {
      unint64_t v22 = 0LL;
      unsigned __int8 v57 = a3 + 55;
      unsigned __int8 v58 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v59 = 58;
      }

      else
      {
        unsigned __int8 v58 = 97;
        unsigned __int8 v57 = 65;
        unsigned __int8 v59 = a3 + 48;
      }

      unsigned int v60 = (unsigned __int8 *)v65;
      while (1)
      {
        unsigned int v61 = *v60;
        if (v61 < 0x30 || v61 >= v59)
        {
          if (v61 < 0x41 || v61 >= v57)
          {
            unint64_t result = 0LL;
            if (v61 < 0x61 || v61 >= v58) {
              goto LABEL_129;
            }
            char v62 = -87;
          }

          else
          {
            char v62 = -55;
          }
        }

        else
        {
          char v62 = -48;
        }

        if (!is_mul_ok(v22, a3)) {
          break;
        }
        unint64_t v63 = v22 * a3;
        unsigned __int8 v64 = v61 + v62;
        BOOL v19 = __CFADD__(v63, v64);
        unint64_t v22 = v63 + v64;
        if (v19) {
          break;
        }
        ++v60;
        if (!--v20) {
          goto LABEL_127;
        }
      }
    }

LABEL_128:
    unint64_t result = 0LL;
LABEL_129:
    char v66 = 1;
    goto LABEL_130;
  }

  if (v20)
  {
    uint64_t v48 = v20 - 1;
    if (v48)
    {
      unint64_t v22 = 0LL;
      unsigned __int8 v49 = a3 + 55;
      unsigned __int8 v50 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v51 = 58;
      }

      else
      {
        unsigned __int8 v50 = 97;
        unsigned __int8 v49 = 65;
        unsigned __int8 v51 = a3 + 48;
      }

      unsigned int v52 = (unsigned __int8 *)v65 + 1;
      do
      {
        unsigned int v53 = *v52;
        if (v53 < 0x30 || v53 >= v51)
        {
          if (v53 < 0x41 || v53 >= v49)
          {
            unint64_t result = 0LL;
            if (v53 < 0x61 || v53 >= v50) {
              goto LABEL_129;
            }
            char v54 = -87;
          }

          else
          {
            char v54 = -55;
          }
        }

        else
        {
          char v54 = -48;
        }

        if (!is_mul_ok(v22, a3)) {
          goto LABEL_128;
        }
        unint64_t v55 = v22 * a3;
        unsigned __int8 v56 = v53 + v54;
        BOOL v19 = __CFADD__(v55, v56);
        unint64_t v22 = v55 + v56;
        if (v19) {
          goto LABEL_128;
        }
        ++v52;
        --v48;
      }

      while (v48);
LABEL_127:
      unint64_t result = v22;
      char v66 = 0;
      goto LABEL_130;
    }

    goto LABEL_128;
  }

LABEL_137:
  __break(1u);
  return result;
}

uint64_t sub_1890061A4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, uint64_t, uint64_t))
{
  v9[0] = sub_18906791C();
  v9[1] = v6;
  uint64_t v7 = sub_189001E6C(v9, a3, a4);
  swift_bridgeObjectRelease();
  return v7;
}

unsigned __int8 *sub_189006230(unsigned __int8 *result, uint64_t a2, int64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }

          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }

          if (result)
          {
            unint64_t v9 = 0LL;
            for (i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  uint64_t v13 = 0LL;
                  if (v11 < 0x61 || v11 >= v8) {
                    return (unsigned __int8 *)v13;
                  }
                  char v12 = -87;
                }

                else
                {
                  char v12 = -55;
                }
              }

              else
              {
                char v12 = -48;
              }

              if (!is_mul_ok(v9, a3)) {
                return 0LL;
              }
              unint64_t v14 = v9 * a3;
              unsigned __int8 v15 = v11 + v12;
              BOOL v16 = v14 >= v15;
              unint64_t v9 = v14 - v15;
              if (!v16) {
                return 0LL;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }

          return 0LL;
        }

        return 0LL;
      }

      __break(1u);
      goto LABEL_67;
    }

    if (a2)
    {
      unsigned __int8 v26 = a3 + 48;
      unsigned __int8 v27 = a3 + 55;
      unsigned __int8 v28 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v26 = 58;
      }

      else
      {
        unsigned __int8 v28 = 97;
        unsigned __int8 v27 = 65;
      }

      if (result)
      {
        unint64_t v29 = 0LL;
        do
        {
          unsigned int v30 = *result;
          if (v30 < 0x30 || v30 >= v26)
          {
            if (v30 < 0x41 || v30 >= v27)
            {
              uint64_t v13 = 0LL;
              if (v30 < 0x61 || v30 >= v28) {
                return (unsigned __int8 *)v13;
              }
              char v31 = -87;
            }

            else
            {
              char v31 = -55;
            }
          }

          else
          {
            char v31 = -48;
          }

          if (!is_mul_ok(v29, a3)) {
            return 0LL;
          }
          unint64_t v32 = v29 * a3;
          unsigned __int8 v33 = v30 + v31;
          BOOL v16 = __CFADD__(v32, v33);
          unint64_t v29 = v32 + v33;
          if (v16) {
            return 0LL;
          }
          ++result;
          --v3;
        }

        while (v3);
        return (unsigned __int8 *)v29;
      }

      return 0LL;
    }

    return 0LL;
  }

  if (a2 < 1)
  {
LABEL_67:
    __break(1u);
    return result;
  }

  uint64_t v17 = a2 - 1;
  if (a2 == 1) {
    return 0LL;
  }
  unsigned __int8 v18 = a3 + 48;
  unsigned __int8 v19 = a3 + 55;
  unsigned __int8 v20 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v18 = 58;
  }

  else
  {
    unsigned __int8 v20 = 97;
    unsigned __int8 v19 = 65;
  }

  if (!result) {
    return 0LL;
  }
  unint64_t v9 = 0LL;
  uint64_t v21 = result + 1;
  do
  {
    unsigned int v22 = *v21;
    if (v22 < 0x30 || v22 >= v18)
    {
      if (v22 < 0x41 || v22 >= v19)
      {
        uint64_t v13 = 0LL;
        if (v22 < 0x61 || v22 >= v20) {
          return (unsigned __int8 *)v13;
        }
        char v23 = -87;
      }

      else
      {
        char v23 = -55;
      }
    }

    else
    {
      char v23 = -48;
    }

    if (!is_mul_ok(v9, a3)) {
      return 0LL;
    }
    unint64_t v24 = v9 * a3;
    unsigned __int8 v25 = v22 + v23;
    BOOL v16 = __CFADD__(v24, v25);
    unint64_t v9 = v24 + v25;
    if (v16) {
      return 0LL;
    }
    ++v21;
    --v17;
  }

  while (v17);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1890064AC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1702195828 && a2 == 0xE400000000000000LL;
  if (v2 || (sub_189067F10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1LL;
  }

  else if (a1 == 0x65736C6166LL && a2 == 0xE500000000000000LL)
  {
    swift_bridgeObjectRelease();
    return 0LL;
  }

  else
  {
    char v6 = sub_189067F10();
    swift_bridgeObjectRelease();
    uint64_t result = 0LL;
    if ((v6 & 1) == 0) {
      return 2LL;
    }
  }

  return result;
}

_BYTE *sub_18900657C@<X0>(_BYTE *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_1890065B4(a1, MEMORY[0x18961B060], a2);
}

_BYTE *sub_189006598@<X0>(_BYTE *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_1890065B4(a1, MEMORY[0x18961B068], a2);
}

_BYTE *sub_1890065B4@<X0>(_BYTE *result@<X0>, uint64_t (*a2)(void)@<X1>, BOOL *a3@<X8>)
{
  unsigned int v4 = *result;
  BOOL v5 = v4 > 0x20;
  uint64_t v6 = (1LL << v4) & 0x100003E01LL;
  BOOL v7 = v5 || v6 == 0;
  BOOL v8 = v7 && (result = (_BYTE *)a2()) != 0LL && *result == 0;
  *a3 = v8;
  return result;
}

uint64_t sub_189006624( uint64_t a1, unint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void *, uint64_t, uint64_t))
{
  uint64_t v5 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000LL) == 0) {
    uint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v5)
  {
    uint64_t v8 = a3();
    if ((v9 & 0x100) != 0)
    {
      uint64_t v10 = sub_1890061A4(a1, a2, 10LL, a4);
      char v14 = v13;
      swift_bridgeObjectRelease();
      int v12 = v14 & 1;
    }

    else
    {
      uint64_t v10 = v8;
      char v11 = v9;
      swift_bridgeObjectRelease();
      int v12 = v11 & 1;
    }

    if (v12) {
      return 0LL;
    }
    else {
      return v10;
    }
  }

  else
  {
    swift_bridgeObjectRelease();
    return 0LL;
  }

uint64_t sub_1890066E8( uint64_t a1, unint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void *, uint64_t, uint64_t))
{
  uint64_t v5 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000LL) == 0) {
    uint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v5)
  {
    unsigned int v8 = a3();
    if ((v8 & 0x10000) != 0) {
      unsigned int v8 = sub_18900457C(a1, a2, 10LL, a4);
    }
    unsigned int v9 = v8;
    swift_bridgeObjectRelease();
    int v10 = (v9 >> 8) & 1;
    if (v10) {
      unsigned __int8 v11 = 0;
    }
    else {
      unsigned __int8 v11 = v9;
    }
  }

  else
  {
    swift_bridgeObjectRelease();
    unsigned __int8 v11 = 0;
    int v10 = 1;
  }

  return v11 | (v10 << 8);
}

uint64_t sub_189006790( uint64_t a1, unint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void *, uint64_t, uint64_t))
{
  uint64_t v5 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000LL) == 0) {
    uint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v5)
  {
    int v8 = a3();
    if ((v8 & 0x1000000) != 0) {
      int v8 = sub_189004F24(a1, a2, 10LL, a4);
    }
    swift_bridgeObjectRelease();
    unsigned int v9 = (v8 & 0x10000u) >> 16;
    if ((v8 & 0x10000) != 0) {
      int v10 = 0;
    }
    else {
      int v10 = (unsigned __int16)v8;
    }
  }

  else
  {
    swift_bridgeObjectRelease();
    int v10 = 0;
    LOBYTE(v9) = 1;
  }

  return v10 & 0xFFFEFFFF | ((v9 & 1) << 16);
}

unint64_t sub_18900683C( uint64_t a1, unint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void *, uint64_t, uint64_t))
{
  uint64_t v5 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000LL) == 0) {
    uint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v5)
  {
    uint64_t v8 = a3();
    if ((v8 & 0x10000000000LL) != 0) {
      uint64_t v8 = sub_18900585C(a1, a2, 10LL, a4);
    }
    swift_bridgeObjectRelease();
    unint64_t v9 = (v8 & 0x100000000uLL) >> 32;
    uint64_t v10 = v8;
    if ((v8 & 0x100000000LL) != 0) {
      uint64_t v10 = 0LL;
    }
  }

  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = 0LL;
    LOBYTE(v9) = 1;
  }

  return v10 | ((v9 & 1) << 32);
}

uint64_t sub_189006900()
{
  return sub_189006FB0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t static AsyncParsableCommand.main()(uint64_t a1, uint64_t a2)
{
  v3[23] = a2;
  v3[24] = v2;
  v3[22] = a1;
  return swift_task_switch();
}

uint64_t sub_18900696C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 184) + 8LL);
  *(void *)(v0 + 200) = v1;
  static ParsableCommand.parseAsRoot(_:)(0LL, v1, v0 + 16);
  sub_189006BE4(v0 + 16, v0 + 96);
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC490);
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC898);
  if (swift_dynamicCast())
  {
    sub_188FFCFB0((__int128 *)(v0 + 136), v0 + 56);
    uint64_t v2 = *(void *)(v0 + 80);
    uint64_t v3 = *(void *)(v0 + 88);
    __swift_mutable_project_boxed_opaque_existential_1(v0 + 56, v2);
    uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v3 + 16) + *(void *)(v3 + 16));
    unsigned int v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 208) = v4;
    void *v4 = v0;
    v4[1] = sub_189006AF8;
    return v8(v2, v3);
  }

  else
  {
    *(void *)(v0 + 168) = 0LL;
    *(_OWORD *)(v0 + 136) = 0u;
    *(_OWORD *)(v0 + 152) = 0u;
    sub_189006C28(v0 + 136);
    uint64_t v6 = *(void *)(v0 + 40);
    uint64_t v7 = *(void *)(v0 + 48);
    __swift_mutable_project_boxed_opaque_existential_1(v0 + 16, v6);
    (*(void (**)(uint64_t, uint64_t))(v7 + 32))(v6, v7);
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

uint64_t sub_189006AF8()
{
  *(void *)(*(void *)v1 + 216LL) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_189006B5C()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_189006B98()
{
  uint64_t v1 = v0[27];
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 2));
  static ParsableArguments.exit(withError:)(v1, v0[22], *(void *)(v0[25] + 8));
}

uint64_t sub_189006BE4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_189006C28(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_18C760FC8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t static AsyncMainProtocol.main()(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 176) = a1;
  *(void *)(v2 + 184) = a2;
  return swift_task_switch();
}

uint64_t sub_189006C80()
{
  *(void *)(v0 + 192) = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(void *)(v0 + 200) = AssociatedConformanceWitness;
  static ParsableCommand.parseAsRoot(_:)(0LL, AssociatedConformanceWitness, v0 + 16);
  sub_189006BE4(v0 + 16, v0 + 96);
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC490);
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC898);
  if (swift_dynamicCast())
  {
    sub_188FFCFB0((__int128 *)(v0 + 136), v0 + 56);
    uint64_t v2 = *(void *)(v0 + 80);
    uint64_t v3 = *(void *)(v0 + 88);
    __swift_mutable_project_boxed_opaque_existential_1(v0 + 56, v2);
    uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v3 + 16) + *(void *)(v3 + 16));
    unsigned int v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 208) = v4;
    void *v4 = v0;
    v4[1] = sub_189006E50;
    return v8(v2, v3);
  }

  else
  {
    *(void *)(v0 + 168) = 0LL;
    *(_OWORD *)(v0 + 136) = 0u;
    *(_OWORD *)(v0 + 152) = 0u;
    sub_189006C28(v0 + 136);
    uint64_t v6 = *(void *)(v0 + 40);
    uint64_t v7 = *(void *)(v0 + 48);
    __swift_mutable_project_boxed_opaque_existential_1(v0 + 16, v6);
    (*(void (**)(uint64_t, uint64_t))(v7 + 32))(v6, v7);
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

uint64_t sub_189006E50()
{
  *(void *)(*(void *)v1 + 216LL) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

void sub_189006EB4()
{
}

uint64_t dispatch thunk of AsyncParsableCommand.run()(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 16) + *(void *)(a2 + 16));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_189006F68;
  return v7(a1, a2);
}

uint64_t sub_189006F68()
{
  uint64_t v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_189006FB0(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_189006FBC(uint64_t a1)
{
  void (*v16)(_OWORD *__return_ptr);
  char isUniquelyReferenced_nonNull_native;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char *v23;
  char *v24;
  int64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(uint64_t, uint64_t);
  uint64_t v75;
  __int128 v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  int64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t v93;
  void v95[2];
  _OWORD *v96;
  _OWORD *v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  char *v104;
  uint64_t v105;
  __int128 v106;
  unint64_t v107;
  uint64_t v108;
  __int128 v109;
  _OWORD v110[8];
  uint64_t v111;
  _OWORD v112[6];
  __int128 v113;
  __int128 v114;
  uint64_t v115;
  char *v116;
  _OWORD v117[6];
  __int128 v118;
  __int128 v119;
  uint64_t v120;
  _OWORD v121[8];
  uint64_t v122;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
    __break(1u);
LABEL_60:
    uint64_t v2 = sub_1890573A8(0LL, v1 + 1, 1, v2);
LABEL_20:
    uint64_t v21 = *((void *)v2 + 2);
    unsigned __int8 v20 = *((void *)v2 + 3);
    if (v21 >= v20 >> 1) {
      uint64_t v2 = sub_1890573A8((char *)(v20 > 1), v21 + 1, 1, v2);
    }
    unsigned int v22 = sub_1890099B4();
    *((void *)v2 + 2) = v21 + 1;
    char v23 = &v2[16 * v21];
    *((void *)v23 + 4) = &type metadata for HelpCommand;
    *((void *)v23 + 5) = v22;
    goto LABEL_23;
  }

  uint64_t v3 = a1;
  uint64_t v5 = a1 + 16 * v4;
  uint64_t v6 = *(void *)(v5 + 24);
  __int128 v100 = v5 + 24;
  uint64_t v7 = *(void *)(v5 + 16);
  __int128 v99 = (uint64_t *)(v5 + 16);
  *(void *)&v121[0] = sub_18900BBA0(a1);
  *((void *)&v121[0] + 1) = v8;
  *(void *)&v117[0] = 45LL;
  *((void *)&v117[0] + 1) = 0xE100000000000000LL;
  *(void *)&v112[0] = 95LL;
  *((void *)&v112[0] + 1) = 0xE100000000000000LL;
  v107 = 0xE100000000000000LL;
  v96 = (_OWORD *)sub_188FFCC74();
  uint64_t v97 = v96;
  v95[0] = MEMORY[0x189617FA8];
  v95[1] = v96;
  uint64_t v9 = sub_189067B20();
  *((void *)&v106 + 1) = v10;
  swift_bridgeObjectRelease();
  *(void *)&v106 = v9;
  if (v4 == 1)
  {
    uint64_t v98 = 49LL;
    uint64_t v11 = 50LL;
    __int128 v103 = 0xE100000000000000LL;
  }

  else
  {
    v107 = 0xE900000000000029LL;
    __int128 v103 = 0xE200000000000000LL;
    uint64_t v11 = 0x29312B3124282824LL;
    uint64_t v98 = 12580LL;
  }

  __int128 v105 = v11;
  (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v6 + 16))(v117, v7, v6);
  v121[6] = v118;
  v121[7] = v119;
  v122 = v120;
  v121[2] = v117[2];
  v121[3] = v117[3];
  v121[4] = v117[4];
  v121[5] = v117[5];
  v121[0] = v117[0];
  v121[1] = v117[1];
  uint64_t v12 = *((void *)&v118 + 1);
  swift_bridgeObjectRetain();
  sub_189000568((uint64_t)v121);
  uint64_t v13 = *(void *)(v12 + 16);
  v102 = v4;
  if (!v13)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = (char *)MEMORY[0x18961AFE8];
    if (v4 != 1) {
      goto LABEL_23;
    }
LABEL_18:
    uint64_t v1 = *((void *)v2 + 2);
    if (!v1) {
      goto LABEL_23;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0) {
      goto LABEL_20;
    }
    goto LABEL_60;
  }

  uint64_t v14 = 0LL;
  uint64_t v15 = v13 - 1;
  uint64_t v2 = (char *)MEMORY[0x18961AFE8];
  while (1)
  {
    BOOL v16 = *(void (**)(_OWORD *__return_ptr))(*(void *)(v12 + 16 * v14 + 40) + 16LL);
    v109 = *(_OWORD *)(v12 + 16 * v14 + 32);
    v16(v110);
    v113 = v110[6];
    v114 = v110[7];
    v115 = v111;
    v112[2] = v110[2];
    v112[3] = v110[3];
    v112[4] = v110[4];
    v112[5] = v110[5];
    v112[0] = v110[0];
    v112[1] = v110[1];
    sub_189000568((uint64_t)v112);
    if (v113 == 1)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v116 = v2;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_188FFF3E8(0LL, *((void *)v2 + 2) + 1LL, 1);
        uint64_t v2 = v116;
      }

      unsigned __int8 v19 = *((void *)v2 + 2);
      unsigned __int8 v18 = *((void *)v2 + 3);
      if (v19 >= v18 >> 1)
      {
        sub_188FFF3E8((char *)(v18 > 1), v19 + 1, 1);
        uint64_t v2 = v116;
      }

      *((void *)v2 + 2) = v19 + 1;
      *(_OWORD *)&v2[16 * v19 + 32] = v109;
    }

    if (v15 == v14) {
      break;
    }
    ++v14;
  }

  swift_bridgeObjectRelease();
  if (v102 == 1) {
    goto LABEL_18;
  }
LABEL_23:
  unint64_t v24 = sub_189008E8C(v3);
  unsigned __int8 v25 = *((void *)v2 + 2);
  unsigned __int8 v26 = MEMORY[0x18961AFE8];
  v108 = v3;
  __int128 v104 = v2;
  if (v25)
  {
    *(void *)&v109 = v24;
    *(void *)&v117[0] = MEMORY[0x18961AFE8];
    swift_bridgeObjectRetain();
    sub_188FFF34C(0LL, v25, 0);
    unsigned __int8 v26 = *(void *)&v117[0];
    unsigned __int8 v27 = v2 + 40;
    do
    {
      unsigned __int8 v28 = (*(uint64_t (**)(void))(*(void *)v27 + 24LL))(*((void *)v27 - 1));
      unsigned int v30 = v29;
      *(void *)&v117[0] = v26;
      unint64_t v32 = *(void *)(v26 + 16);
      char v31 = *(void *)(v26 + 24);
      if (v32 >= v31 >> 1)
      {
        sub_188FFF34C((char *)(v31 > 1), v32 + 1, 1);
        unsigned __int8 v26 = *(void *)&v117[0];
      }

      *(void *)(v26 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v32 + 1;
      unsigned __int8 v33 = v26 + 16 * v32;
      *(void *)(v33 + 32) = v28;
      *(void *)(v33 + 40) = v30;
      v27 += 16;
      --v25;
    }

    while (v25);
    swift_bridgeObjectRelease();
    uint64_t v3 = v108;
    unint64_t v24 = (char *)v109;
  }

  *(void *)&v117[0] = v24;
  sub_189058724(v26);
  unsigned __int8 v34 = *(void *)&v117[0];
  unsigned __int8 v35 = *v99;
  unsigned int v36 = *(void *)(*(void *)v100 + 8LL);
  LOBYTE(v117[0]) = 0;
  char v37 = sub_188FFB780(v35, v36, (unsigned __int8 *)v117, 0LL, 0LL, 0LL);
  unsigned __int8 v39 = v38;
  swift_bridgeObjectRetain();
  unsigned __int8 v40 = sub_18900921C(v37, v39, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v117[0] = v106;
  swift_bridgeObjectRetain();
  unsigned __int8 v41 = sub_18906788C();
  if (v102 == 1)
  {
    *(void *)&v112[0] = 10LL;
    *((void *)&v112[0] + 1) = 0xE100000000000000LL;
    MEMORY[0x1895F8858](v41);
    v96 = v112;
    unsigned __int8 v42 = sub_1890266AC( 0x7FFFFFFFFFFFFFFFLL,  0,  sub_189009B90,  (uint64_t)v95,  0xD000000000000050LL,  0x800000018906C4F0LL);
    MEMORY[0x1895DC998](32LL, 0xE100000000000000LL, 4LL);
    unint64_t v43 = sub_18900F144((uint64_t)v42);
    *(void *)&v109 = 0LL;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)&v112[0] = v43;
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C760FF8);
    sub_189009B3C(&qword_18C761000, &qword_18C760FF8, MEMORY[0x189618470]);
    sub_189009970();
    sub_18906797C();
    swift_bridgeObjectRelease();
    sub_18906788C();
    swift_bridgeObjectRelease();
  }

  else
  {
    *(void *)&v109 = 0LL;
  }

  strcpy((char *)v112, "    opts=");
  BYTE11(v112[0]) = 0;
  HIDWORD(v112[0]) = -369098752;
  *(void *)&v110[0] = v34;
  unsigned int v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_18C760FE8);
  __int128 v101 = sub_189009B3C((unint64_t *)&qword_18C760FF0, &qword_18C760FE8, MEMORY[0x189618458]);
  v102 = v44;
  sub_1890677C0();
  swift_bridgeObjectRelease();
  sub_18906788C();
  swift_bridgeObjectRelease();
  sub_18906788C();
  sub_18906788C();
  swift_bridgeObjectRelease();
  char v45 = *((void *)v40 + 2);
  if (v45)
  {
    unint64_t v46 = v40 + 40;
    do
    {
      *(void *)&v112[0] = 0LL;
      *((void *)&v112[0] + 1) = 0xE000000000000000LL;
      swift_bridgeObjectRetain();
      sub_189067C28();
      swift_bridgeObjectRelease();
      *(void *)&v112[0] = 0xD000000000000010LL;
      *((void *)&v112[0] + 1) = 0x800000018906C3D0LL;
      sub_18906788C();
      swift_bridgeObjectRelease();
      sub_18906788C();
      sub_18906788C();
      swift_bridgeObjectRelease();
      v46 += 16;
      --v45;
    }

    while (v45);
  }

  swift_bridgeObjectRelease();
  *(void *)&v112[0] = 0LL;
  *((void *)&v112[0] + 1) = 0xE000000000000000LL;
  sub_189067C28();
  sub_18906788C();
  sub_18906788C();
  sub_18906788C();
  sub_18906788C();
  swift_bridgeObjectRelease();
  unsigned __int8 v47 = *v99;
  uint64_t v48 = *(void *)(*(void *)v100 + 8LL);
  LOBYTE(v112[0]) = 0;
  unsigned __int8 v49 = sub_188FFB780(v47, v48, (unsigned __int8 *)v112, 0LL, 0LL, 0LL);
  unsigned __int8 v51 = v50;
  unsigned int v52 = v108;
  swift_bridgeObjectRetain();
  unsigned int v53 = sub_1890094D0(v49, v51, v52);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&v112[0] = v53;
  char v54 = sub_1890677C0();
  unsigned __int8 v56 = v55;
  swift_bridgeObjectRelease();
  unsigned __int8 v57 = HIBYTE(v56) & 0xF;
  if ((v56 & 0x2000000000000000LL) == 0) {
    unsigned __int8 v57 = v54 & 0xFFFFFFFFFFFFLL;
  }
  if (v57)
  {
    *(void *)&v112[0] = 0LL;
    *((void *)&v112[0] + 1) = 0xE000000000000000LL;
    sub_189067C28();
    unsigned __int8 v58 = swift_bridgeObjectRelease();
    strcpy((char *)v112, "case $prev in\n");
    HIBYTE(v112[0]) = -18;
    *(void *)&v110[0] = 10LL;
    *((void *)&v110[0] + 1) = 0xE100000000000000LL;
    MEMORY[0x1895F8858](v58);
    v96 = v110;
    swift_bridgeObjectRetain();
    unsigned __int8 v59 = sub_1890266AC(0x7FFFFFFFFFFFFFFFLL, 0, sub_189009954, (uint64_t)v95, v54, v56);
    MEMORY[0x1895DC998](32LL, 0xE100000000000000LL, 4LL);
    unsigned int v60 = sub_18900F144((uint64_t)v59);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)&v110[0] = v60;
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C760FF8);
    sub_189009B3C(&qword_18C761000, &qword_18C760FF8, MEMORY[0x189618470]);
    sub_189009970();
    sub_18906797C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_18906788C();
    swift_bridgeObjectRelease();
    unsigned int v61 = sub_18906788C();
    char v62 = v112[0];
    *(void *)&v112[0] = 10LL;
    *((void *)&v112[0] + 1) = 0xE100000000000000LL;
    MEMORY[0x1895F8858](v61);
    v96 = v112;
    swift_bridgeObjectRetain();
    unint64_t v63 = sub_1890266AC(0x7FFFFFFFFFFFFFFFLL, 0, sub_189009B90, (uint64_t)v95, v62, *((unint64_t *)&v62 + 1));
    MEMORY[0x1895DC998](32LL, 0xE100000000000000LL, 4LL);
    unsigned __int8 v64 = sub_18900F144((uint64_t)v63);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)&v112[0] = v64;
    char v65 = sub_18906797C();
    uint64_t v67 = v66;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)&v112[0] = v65;
    *((void *)&v112[0] + 1) = v67;
    swift_bridgeObjectRetain();
    sub_18906788C();
    swift_bridgeObjectRelease();
    sub_18906788C();
  }

  uint64_t v68 = v107;
  uint64_t v69 = v104;
  swift_bridgeObjectRelease();
  if (*((void *)v69 + 2))
  {
    *(void *)&v112[0] = 0LL;
    *((void *)&v112[0] + 1) = 0xE000000000000000LL;
    sub_189067C28();
    swift_bridgeObjectRelease();
    *(void *)&v112[0] = 0xD000000000000016LL;
    *((void *)&v112[0] + 1) = 0x800000018906C470LL;
    sub_18906788C();
    swift_bridgeObjectRelease();
    sub_18906788C();
    sub_18906788C();
    swift_bridgeObjectRelease();
    uint64_t v70 = *((void *)v69 + 2);
    if (v70)
    {
      swift_bridgeObjectRetain();
      uint64_t v71 = (uint64_t *)(v69 + 40);
      *(void *)&v109 = 0x800000018906C490LL;
      v107 = v68;
      do
      {
        v73 = *(v71 - 1);
        uint64_t v72 = *v71;
        *(void *)&v112[0] = 0LL;
        *((void *)&v112[0] + 1) = 0xE000000000000000LL;
        sub_189067C28();
        swift_bridgeObjectRelease();
        *(void *)&v112[0] = 40LL;
        *((void *)&v112[0] + 1) = 0xE100000000000000LL;
        unint64_t v74 = *(void (**)(uint64_t, uint64_t))(v72 + 24);
        v74(v73, v72);
        sub_18906788C();
        swift_bridgeObjectRelease();
        sub_18906788C();
        sub_18906788C();
        sub_18906788C();
        v74(v73, v72);
        sub_18906788C();
        swift_bridgeObjectRelease();
        sub_18906788C();
        sub_18906788C();
        unint64_t v75 = sub_18906788C();
        v76 = v112[0];
        *(void *)&v112[0] = 10LL;
        *((void *)&v112[0] + 1) = 0xE100000000000000LL;
        MEMORY[0x1895F8858](v75);
        v96 = v112;
        swift_bridgeObjectRetain();
        v77 = sub_1890266AC(0x7FFFFFFFFFFFFFFFLL, 0, sub_189009B90, (uint64_t)v95, v76, *((unint64_t *)&v76 + 1));
        MEMORY[0x1895DC998](32LL, 0xE100000000000000LL, 8LL);
        uint64_t v78 = sub_18900F144((uint64_t)v77);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(void *)&v112[0] = v78;
        __swift_instantiateConcreteTypeFromMangledName(&qword_18C760FF8);
        sub_189009B3C(&qword_18C761000, &qword_18C760FF8, MEMORY[0x189618470]);
        sub_189009970();
        sub_18906797C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_18906788C();
        swift_bridgeObjectRelease();
        v71 += 2;
        --v70;
      }

      while (v70);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }

    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }

    sub_18906788C();
  }

  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  v79 = v108;
  sub_18906788C();
  v80 = *((void *)&v117[0] + 1);
  v107 = *(void *)&v117[0];
  uint64_t v81 = v104;
  uint64_t v82 = *((void *)v104 + 2);
  if (v82)
  {
    *(void *)&v112[0] = MEMORY[0x18961AFE8];
    swift_bridgeObjectRetain();
    *((void *)&v106 + 1) = v80;
    swift_bridgeObjectRetain();
    sub_188FFF34C(0LL, v82, 0);
    int v83 = 0LL;
    uint64_t v84 = *(void *)&v112[0];
    do
    {
      v109 = *(_OWORD *)&v81[16 * v83 + 32];
      swift_bridgeObjectRetain();
      uint64_t v85 = (char *)v79;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v85 = sub_1890573A8(0LL, *(void *)(v79 + 16) + 1LL, 1, (char *)v79);
      }
      v87 = *((void *)v85 + 2);
      v86 = *((void *)v85 + 3);
      if (v87 >= v86 >> 1) {
        uint64_t v85 = sub_1890573A8((char *)(v86 > 1), v87 + 1, 1, v85);
      }
      *((void *)v85 + 2) = v87 + 1;
      *(_OWORD *)&v85[16 * v87 + 32] = v109;
      __int128 v88 = sub_189006FBC(v85);
      uint64_t v90 = v89;
      swift_bridgeObjectRelease();
      *(void *)&v112[0] = v84;
      uint64_t v92 = *(void *)(v84 + 16);
      v91 = *(void *)(v84 + 24);
      if (v92 >= v91 >> 1)
      {
        sub_188FFF34C((char *)(v91 > 1), v92 + 1, 1);
        uint64_t v84 = *(void *)&v112[0];
      }

      ++v83;
      *(void *)(v84 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v92 + 1;
      char v93 = v84 + 16 * v92;
      *(void *)(v93 + 32) = v88;
      *(void *)(v93 + 40) = v90;
      v79 = v108;
    }

    while (v82 != v83);
    v80 = *((void *)&v106 + 1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }

  else
  {
    swift_bridgeObjectRelease();
    uint64_t v84 = MEMORY[0x18961AFE8];
  }

  *(void *)&v112[0] = v84;
  sub_1890677C0();
  swift_bridgeObjectRelease();
  *(void *)&v112[0] = v107;
  *((void *)&v112[0] + 1) = v80;
  swift_bridgeObjectRetain();
  sub_18906788C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return *(void *)&v112[0];
}

uint64_t sub_189007FFC()
{
  if (*(_BYTE *)(v0 + 104)) {
    return MEMORY[0x18961AFE8];
  }
  uint64_t v2 = MEMORY[0x18961AFE8];
  uint64_t v3 = MEMORY[0x18961AFE8];
  if (*(void *)v0 >= 2uLL) {
    uint64_t v3 = swift_bridgeObjectRetain();
  }
  int64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    sub_188FFF34C(0LL, v4, 0);
    uint64_t v1 = v2;
    uint64_t v5 = (unsigned __int8 *)(v3 + 48);
    while (1)
    {
      uint64_t v7 = *((void *)v5 - 2);
      uint64_t v6 = *((void *)v5 - 1);
      unsigned int v8 = *v5;
      if (!(v8 >> 6)) {
        break;
      }
      if (v8 >> 6 != 1)
      {
        uint64_t v14 = 45LL;
        unint64_t v9 = 0xE100000000000000LL;
        goto LABEL_12;
      }

      uint64_t v14 = 0LL;
      unint64_t v15 = 0xE000000000000000LL;
      swift_bridgeObjectRetain();
      sub_18906788C();
      sub_1890677B4();
LABEL_13:
      sub_188FFCF98(v7, v6, v8);
      unint64_t v11 = *(void *)(v1 + 16);
      unint64_t v10 = *(void *)(v1 + 24);
      if (v11 >= v10 >> 1) {
        sub_188FFF34C((char *)(v10 > 1), v11 + 1, 1);
      }
      v5 += 24;
      *(void *)(v1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v11 + 1;
      uint64_t v12 = v1 + 16 * v11;
      *(void *)(v12 + 32) = v14;
      *(void *)(v12 + 40) = v15;
      if (!--v4)
      {
        swift_bridgeObjectRelease();
        return v1;
      }
    }

    uint64_t v14 = 11565LL;
    unint64_t v9 = 0xE200000000000000LL;
LABEL_12:
    unint64_t v15 = v9;
    swift_bridgeObjectRetain();
    sub_18906788C();
    goto LABEL_13;
  }

  swift_bridgeObjectRelease();
  return MEMORY[0x18961AFE8];
}

void *sub_1890081B4@<X0>(void *result@<X0>, void *a2@<X8>)
{
  if (!*result) {
    __asm { BR              X10 }
  }

  *a2 = 0LL;
  a2[1] = 0LL;
  return result;
}

void sub_18900823C()
{
  *uint64_t v0 = sub_1890677C0();
  v0[1] = v1;
  JUMPOUT(0x1890081E8LL);
}

void sub_18900828C()
{
  *uint64_t v0 = 10276LL;
  v0[1] = 0xE200000000000000LL;
  JUMPOUT(0x1890081E8LL);
}

void sub_189008520()
{
  __asm { BR              X10 }

unint64_t sub_189008564()
{
  *(void *)(v1 - 112) = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C760FE8);
  sub_189009B3C((unint64_t *)&qword_18C760FF0, &qword_18C760FE8, MEMORY[0x189618458]);
  sub_1890677C0();
  sub_18906788C();
  swift_bridgeObjectRelease();
  sub_18906788C();
  return 0xD00000000000001ALL;
}

char *sub_189008E8C(uint64_t a1)
{
  uint64_t v1 = sub_18900CB24(0, a1);
  uint64_t v2 = (_OWORD *)v1;
  uint64_t v3 = *(void *)(v1 + 16);
  if (v3)
  {
    uint64_t v4 = v1 + 32;
    swift_bridgeObjectRetain();
    uint64_t result = (char *)swift_bridgeObjectRetain();
    uint64_t v6 = 0LL;
    __int128 v7 = v2[11];
    __int128 v56 = v2[10];
    __int128 v57 = v7;
    __int128 v8 = v2[13];
    __int128 v58 = v2[12];
    __int128 v59 = v8;
    __int128 v9 = v2[7];
    __int128 v52 = v2[6];
    __int128 v53 = v9;
    __int128 v10 = v2[9];
    __int128 v54 = v2[8];
    __int128 v55 = v10;
    __int128 v11 = v2[3];
    __int128 v48 = v2[2];
    __int128 v49 = v11;
    __int128 v12 = v2[5];
    __int128 v50 = v2[4];
    __int128 v51 = v12;
    uint64_t v13 = MEMORY[0x18961AFE8];
    uint64_t v14 = (char *)MEMORY[0x18961AFE8];
    uint64_t v44 = v3;
    char v45 = v2 + 2;
    uint64_t v15 = MEMORY[0x18961AFE8];
    if (BYTE8(v54)) {
      goto LABEL_19;
    }
LABEL_3:
    else {
      uint64_t v16 = v13;
    }
    uint64_t v17 = v13;
    int64_t v18 = *(void *)(v16 + 16);
    if (v18)
    {
      sub_188FFD0E0(v48);
      sub_188FFCFF4((uint64_t)&v48);
      sub_188FFF34C(0LL, v18, 0);
      uint64_t v15 = v17;
      unsigned __int8 v19 = (unsigned __int8 *)(v16 + 48);
      while (1)
      {
        uint64_t v20 = *((void *)v19 - 2);
        uint64_t v21 = *((void *)v19 - 1);
        unsigned int v22 = *v19;
        if (!(v22 >> 6)) {
          break;
        }
        if (v22 >> 6 != 1)
        {
          uint64_t v46 = 45LL;
          unint64_t v23 = 0xE100000000000000LL;
          goto LABEL_13;
        }

        uint64_t v46 = 0LL;
        unint64_t v47 = 0xE000000000000000LL;
        swift_bridgeObjectRetain();
        sub_18906788C();
        sub_1890677B4();
LABEL_14:
        sub_188FFCF98(v20, v21, v22);
        unint64_t v25 = *(void *)(v15 + 16);
        unint64_t v24 = *(void *)(v15 + 24);
        if (v25 >= v24 >> 1) {
          sub_188FFF34C((char *)(v24 > 1), v25 + 1, 1);
        }
        v19 += 24;
        *(void *)(v15 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v25 + 1;
        uint64_t v26 = v15 + 16 * v25;
        *(void *)(v26 + 32) = v46;
        *(void *)(v26 + 40) = v47;
        if (!--v18)
        {
          swift_bridgeObjectRelease();
          uint64_t result = (char *)sub_1890099F8((uint64_t)&v48);
          uint64_t v3 = v44;
          uint64_t v4 = (uint64_t)v45;
          uint64_t v13 = MEMORY[0x18961AFE8];
          goto LABEL_19;
        }
      }

      uint64_t v46 = 11565LL;
      unint64_t v23 = 0xE200000000000000LL;
LABEL_13:
      unint64_t v47 = v23;
      swift_bridgeObjectRetain();
      sub_18906788C();
      goto LABEL_14;
    }

    sub_188FFD0E0(v48);
    uint64_t result = (char *)swift_bridgeObjectRelease();
    uint64_t v15 = v17;
    uint64_t v4 = (uint64_t)v45;
    uint64_t v13 = v17;
    while (1)
    {
LABEL_19:
      uint64_t v27 = *(void *)(v15 + 16);
      int64_t v28 = *((void *)v14 + 2);
      int64_t v29 = v28 + v27;
      if (__OFADD__(v28, v27))
      {
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        return result;
      }

      uint64_t result = (char *)swift_isUniquelyReferenced_nonNull_native();
      if ((_DWORD)result && v29 <= *((void *)v14 + 3) >> 1)
      {
        if (*(void *)(v15 + 16)) {
          goto LABEL_23;
        }
      }

      else
      {
        if (v28 <= v29) {
          int64_t v33 = v28 + v27;
        }
        else {
          int64_t v33 = v28;
        }
        uint64_t result = sub_189056E74(result, v33, 1, v14);
        uint64_t v14 = result;
        if (*(void *)(v15 + 16))
        {
LABEL_23:
          if ((*((void *)v14 + 3) >> 1) - *((void *)v14 + 2) < v27) {
            goto LABEL_40;
          }
          uint64_t result = (char *)swift_arrayInitWithCopy();
          if (v27)
          {
            uint64_t v30 = *((void *)v14 + 2);
            BOOL v31 = __OFADD__(v30, v27);
            uint64_t v32 = v30 + v27;
            if (v31) {
              goto LABEL_41;
            }
            *((void *)v14 + 2) = v32;
          }

          goto LABEL_32;
        }
      }

      if (v27) {
        goto LABEL_39;
      }
LABEL_32:
      ++v6;
      uint64_t result = (char *)swift_bridgeObjectRelease();
      if (v6 == v3)
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        return v14;
      }

      unsigned __int8 v34 = (__int128 *)(v4 + 192 * v6);
      __int128 v35 = *v34;
      __int128 v36 = v34[1];
      __int128 v37 = v34[3];
      __int128 v50 = v34[2];
      __int128 v51 = v37;
      __int128 v48 = v35;
      __int128 v49 = v36;
      __int128 v38 = v34[4];
      __int128 v39 = v34[5];
      __int128 v40 = v34[6];
      __int128 v55 = v34[7];
      __int128 v53 = v39;
      __int128 v54 = v40;
      __int128 v52 = v38;
      __int128 v41 = v34[8];
      __int128 v42 = v34[9];
      __int128 v43 = v34[11];
      __int128 v58 = v34[10];
      __int128 v59 = v43;
      __int128 v56 = v41;
      __int128 v57 = v42;
      uint64_t v15 = v13;
      if (!BYTE8(v40)) {
        goto LABEL_3;
      }
    }
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (char *)MEMORY[0x18961AFE8];
}

char *sub_18900921C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    return (char *)MEMORY[0x18961AFE8];
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __int128 v7 = *(_OWORD *)(a1 + 176);
  __int128 v49 = *(_OWORD *)(a1 + 160);
  __int128 v50 = v7;
  __int128 v8 = *(_OWORD *)(a1 + 208);
  __int128 v51 = *(_OWORD *)(a1 + 192);
  __int128 v52 = v8;
  __int128 v9 = *(_OWORD *)(a1 + 112);
  __int128 v45 = *(_OWORD *)(a1 + 96);
  __int128 v46 = v9;
  __int128 v10 = *(_OWORD *)(a1 + 144);
  __int128 v47 = *(_OWORD *)(a1 + 128);
  __int128 v48 = v10;
  __int128 v11 = *(_OWORD *)(a1 + 48);
  __int128 v41 = *(_OWORD *)(a1 + 32);
  __int128 v42 = v11;
  __int128 v12 = *(_OWORD *)(a1 + 80);
  __int128 v43 = *(_OWORD *)(a1 + 64);
  __int128 v44 = v12;
  __int128 v37 = v49;
  __int128 v38 = v50;
  __int128 v39 = v51;
  __int128 v40 = v52;
  __int128 v33 = v45;
  __int128 v34 = v46;
  __int128 v35 = v47;
  __int128 v36 = v48;
  __int128 v29 = v41;
  __int128 v30 = v42;
  __int128 v31 = v43;
  __int128 v32 = v12;
  sub_188FFCFF4((uint64_t)&v41);
  sub_1890081B4(&v29, &v27);
  if (v3)
  {
    uint64_t v13 = (char *)MEMORY[0x18961AFE8];
    sub_1890099F8((uint64_t)&v41);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  else
  {
    uint64_t v13 = (char *)MEMORY[0x18961AFE8];
    uint64_t v14 = 224LL;
    uint64_t v53 = a3;
    while (1)
    {
      sub_1890099F8((uint64_t)&v41);
      uint64_t v15 = v28;
      if (v28)
      {
        uint64_t v16 = v27;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v13 = sub_189056E74(0LL, *((void *)v13 + 2) + 1LL, 1, v13);
        }
        unint64_t v18 = *((void *)v13 + 2);
        unint64_t v17 = *((void *)v13 + 3);
        if (v18 >= v17 >> 1) {
          uint64_t v13 = sub_189056E74((char *)(v17 > 1), v18 + 1, 1, v13);
        }
        *((void *)v13 + 2) = v18 + 1;
        unsigned __int8 v19 = &v13[16 * v18];
        *((void *)v19 + 4) = v16;
        *((void *)v19 + 5) = v15;
      }

      if (!--v4) {
        break;
      }
      __int128 v20 = *(_OWORD *)(a1 + v14 + 144);
      __int128 v49 = *(_OWORD *)(a1 + v14 + 128);
      __int128 v50 = v20;
      __int128 v21 = *(_OWORD *)(a1 + v14 + 176);
      __int128 v51 = *(_OWORD *)(a1 + v14 + 160);
      __int128 v52 = v21;
      __int128 v22 = *(_OWORD *)(a1 + v14 + 80);
      __int128 v45 = *(_OWORD *)(a1 + v14 + 64);
      __int128 v46 = v22;
      __int128 v23 = *(_OWORD *)(a1 + v14 + 112);
      __int128 v47 = *(_OWORD *)(a1 + v14 + 96);
      __int128 v48 = v23;
      __int128 v24 = *(_OWORD *)(a1 + v14 + 16);
      __int128 v41 = *(_OWORD *)(a1 + v14);
      __int128 v42 = v24;
      __int128 v25 = *(_OWORD *)(a1 + v14 + 48);
      __int128 v43 = *(_OWORD *)(a1 + v14 + 32);
      __int128 v44 = v25;
      __int128 v37 = v49;
      __int128 v38 = v50;
      __int128 v39 = v51;
      __int128 v40 = v52;
      __int128 v33 = v45;
      __int128 v34 = v46;
      __int128 v35 = v47;
      __int128 v36 = v48;
      __int128 v29 = v41;
      __int128 v30 = v42;
      __int128 v31 = v43;
      __int128 v32 = v25;
      sub_188FFCFF4((uint64_t)&v41);
      sub_1890081B4(&v29, &v27);
      v14 += 192LL;
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return v13;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = MEMORY[0x1895DD3E8](255LL, (char *)a1 + (int)result, -(result >> 32), 0LL, 0LL);
    *a1 = result;
  }

  return result;
}

char *sub_1890094D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v43 = a3;
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    __int128 v7 = (_OWORD *)a1;
    swift_bridgeObjectRetain();
    v41[5] = a2;
    swift_bridgeObjectRetain();
    __int128 v8 = v7[11];
    __int128 v67 = v7[10];
    __int128 v68 = v8;
    __int128 v9 = v7[13];
    __int128 v69 = v7[12];
    __int128 v70 = v9;
    __int128 v10 = v7[7];
    __int128 v63 = v7[6];
    __int128 v64 = v10;
    __int128 v11 = v7[9];
    __int128 v65 = v7[8];
    __int128 v66 = v11;
    __int128 v12 = v7[3];
    uint64_t v13 = v5 - 1;
    uint64_t v14 = 14LL;
    __int128 v59 = v7[2];
    __int128 v60 = v12;
    __int128 v15 = v7[5];
    __int128 v61 = v7[4];
    __int128 v62 = v15;
    uint64_t v71 = (char *)MEMORY[0x18961AFE8];
    __int128 v42 = v7;
    while (1)
    {
      __int128 v56 = v68;
      __int128 v57 = v69;
      __int128 v58 = v70;
      __int128 v51 = v63;
      __int128 v52 = v64;
      __int128 v53 = v65;
      __int128 v54 = v66;
      __int128 v55 = v67;
      __int128 v47 = v59;
      __int128 v48 = v60;
      __int128 v49 = v61;
      __int128 v50 = v62;
      sub_188FFCFF4((uint64_t)&v59);
      uint64_t v16 = *(void *)(sub_189007FFC() + 16);
      swift_bridgeObjectRelease();
      if (v16 && (BYTE8(v69) & 1) != 0)
      {
        *(void *)&__int128 v47 = 0LL;
        *((void *)&v47 + 1) = 0xE000000000000000LL;
        sub_189067C28();
        __int128 v56 = v68;
        __int128 v57 = v69;
        __int128 v58 = v70;
        __int128 v51 = v63;
        __int128 v52 = v64;
        __int128 v53 = v65;
        __int128 v54 = v66;
        __int128 v55 = v67;
        __int128 v47 = v59;
        __int128 v48 = v60;
        __int128 v49 = v61;
        __int128 v50 = v62;
        *(void *)&__int128 v47 = sub_189007FFC();
        __swift_instantiateConcreteTypeFromMangledName(&qword_18C760FE8);
        sub_189009B3C((unint64_t *)&qword_18C760FF0, &qword_18C760FE8, MEMORY[0x189618458]);
        uint64_t v17 = sub_1890677C0();
        uint64_t v19 = v18;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v45 = v17;
        uint64_t v46 = v19;
        sub_18906788C();
        __int128 v56 = v68;
        __int128 v57 = v69;
        __int128 v58 = v70;
        __int128 v51 = v63;
        __int128 v52 = v64;
        __int128 v53 = v65;
        __int128 v54 = v66;
        __int128 v55 = v67;
        __int128 v47 = v59;
        __int128 v48 = v60;
        __int128 v49 = v61;
        __int128 v50 = v62;
        sub_189008520();
        uint64_t v21 = v20;
        unint64_t v23 = v22;
        *(void *)&__int128 v47 = 10LL;
        *((void *)&v47 + 1) = 0xE100000000000000LL;
        MEMORY[0x1895F8858](v20);
        v41[2] = &v47;
        swift_bridgeObjectRetain();
        __int128 v24 = sub_1890266AC(0x7FFFFFFFFFFFFFFFLL, 0, sub_189009B90, (uint64_t)v41, v21, v23);
        MEMORY[0x1895DC998](32LL, 0xE100000000000000LL, 4LL);
        uint64_t v25 = sub_18900F144((uint64_t)v24);
        uint64_t v44 = v4;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(void *)&__int128 v47 = v25;
        __swift_instantiateConcreteTypeFromMangledName(&qword_18C760FF8);
        sub_189009B3C(&qword_18C761000, &qword_18C760FF8, MEMORY[0x189618470]);
        sub_189009970();
        sub_18906797C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_18906788C();
        swift_bridgeObjectRelease();
        sub_18906788C();
        sub_1890099F8((uint64_t)&v59);
        uint64_t v26 = v45;
        uint64_t v27 = v46;
        uint64_t v28 = v71;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v28 = sub_189056E74(0LL, *((void *)v28 + 2) + 1LL, 1, v28);
        }
        unint64_t v30 = *((void *)v28 + 2);
        unint64_t v29 = *((void *)v28 + 3);
        uint64_t v71 = v28;
        uint64_t v4 = v44;
        if (v30 >= v29 >> 1) {
          uint64_t v71 = sub_189056E74((char *)(v29 > 1), v30 + 1, 1, v71);
        }
        __int128 v31 = v71;
        *((void *)v71 + 2) = v30 + 1;
        __int128 v32 = &v31[16 * v30];
        *((void *)v32 + 4) = v26;
        *((void *)v32 + 5) = v27;
        __int128 v7 = v42;
        if (!v13)
        {
LABEL_13:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return v71;
        }
      }

      else
      {
        sub_1890099F8((uint64_t)&v59);
        if (!v13) {
          goto LABEL_13;
        }
      }

      __int128 v33 = v7[v14 + 9];
      __int128 v67 = v7[v14 + 8];
      __int128 v68 = v33;
      __int128 v34 = v7[v14 + 11];
      __int128 v69 = v7[v14 + 10];
      __int128 v70 = v34;
      __int128 v35 = v7[v14 + 5];
      __int128 v63 = v7[v14 + 4];
      __int128 v64 = v35;
      __int128 v36 = v7[v14 + 7];
      __int128 v65 = v7[v14 + 6];
      __int128 v66 = v36;
      __int128 v37 = v7[v14 + 1];
      __int128 v59 = v7[v14];
      __int128 v60 = v37;
      __int128 v38 = v7[v14 + 2];
      __int128 v39 = v7[v14 + 3];
      v14 += 12LL;
      --v13;
      __int128 v61 = v38;
      __int128 v62 = v39;
    }
  }

  return (char *)MEMORY[0x18961AFE8];
}

uint64_t sub_189009954(void *a1)
{
  return sub_189027044(a1, *(void **)(v1 + 16)) & 1;
}

unint64_t sub_189009970()
{
  unint64_t result = qword_18C761008;
  if (!qword_18C761008)
  {
    unint64_t result = MEMORY[0x1895DD3F4](MEMORY[0x189618C78], MEMORY[0x189618C50]);
    atomic_store(result, (unint64_t *)&qword_18C761008);
  }

  return result;
}

unint64_t sub_1890099B4()
{
  unint64_t result = qword_18C4FC8A0;
  if (!qword_18C4FC8A0)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&unk_189068C18, &type metadata for HelpCommand);
    atomic_store(result, (unint64_t *)&qword_18C4FC8A0);
  }

  return result;
}

uint64_t sub_1890099F8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 128);
  uint64_t v3 = *(void *)(a1 + 136);
  char v4 = *(_BYTE *)(a1 + 144);
  sub_189009AE4(*(void *)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_189009AF4(v2, v3, v4);
  sub_189009B34();
  swift_release();
  return a1;
}

unint64_t sub_189009AE4(unint64_t result)
{
  if (result >= 2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_189009AF4(uint64_t a1, uint64_t a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 1:
    case 2:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 3:
      uint64_t result = swift_release();
      break;
    default:
      return result;
  }

  return result;
}

uint64_t sub_189009B34()
{
  return swift_release();
}

uint64_t sub_189009B3C(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = MEMORY[0x1895DD3F4](a3, v6);
    atomic_store(result, a1);
  }

  return result;
}

uint64_t sub_189009B7C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 0xFDu) {
    return sub_188FFCF98(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_189009B90(void *a1)
{
  return sub_189009954(a1) & 1;
}

uint64_t sub_189009BA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (*(uint64_t (**)(void))(a2 + 24))();
  uint64_t v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC858);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = xmmword_189068A40;
  *(void *)(v7 + 32) = sub_18900AE34();
  *(void *)(v7 + 40) = v8;
  *(void *)(v7 + 48) = sub_18900AF50();
  *(void *)(v7 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = v9;
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = xmmword_1890684B0;
  *(void *)(v10 + 32) = v4;
  *(void *)(v10 + 40) = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC828);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = xmmword_1890684B0;
  *(void *)(inited + 32) = a1;
  *(void *)(inited + 40) = a2;
  sub_189009D88(v10, inited);
  swift_setDeallocating();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C760FE8);
  sub_189009B3C((unint64_t *)&qword_18C760FF0, &qword_18C760FE8, MEMORY[0x189618458]);
  uint64_t v12 = sub_1890677C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_18906788C();
  swift_bridgeObjectRelease();
  sub_1890677C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_18906788C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_189009D88(uint64_t a1, uint64_t a2)
{
  void (*v9)(_OWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  unint64_t v51;
  unint64_t v52;
  char *v53;
  uint64_t inited;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  int64_t v58;
  uint64_t v59;
  BOOL v60;
  uint64_t v61;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  __int128 v67;
  __int128 v68;
  _OWORD v69[8];
  uint64_t v70;
  _OWORD v71[6];
  __int128 v72;
  __int128 v73;
  uint64_t v74;
  char *v75;
  _OWORD v76[6];
  __int128 v77;
  __int128 v78;
  uint64_t v79;
  _OWORD v80[8];
  uint64_t v81;
  uint64_t v5 = *(void *)(a2 + 16);
  if (!v5) {
    goto LABEL_61;
  }
  uint64_t v4 = (char *)a1;
  if (!*(void *)(a1 + 16)) {
    goto LABEL_62;
  }
  __int128 v64 = a2;
  uint64_t v6 = a2 + 16 * v5;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = *(void *)(v6 + 24);
  uint64_t v9 = *(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v8 + 16);
  swift_bridgeObjectRetain();
  v9(v76, v7, v8);
  v80[6] = v77;
  v80[7] = v78;
  uint64_t v81 = v79;
  v80[2] = v76[2];
  void v80[3] = v76[3];
  v80[4] = v76[4];
  v80[5] = v76[5];
  v80[0] = v76[0];
  v80[1] = v76[1];
  uint64_t v10 = *((void *)&v77 + 1);
  swift_bridgeObjectRetain();
  sub_189000568((uint64_t)v80);
  __int128 v11 = *(void *)(v10 + 16);
  __int128 v65 = v4;
  if (v11)
  {
    uint64_t v12 = 0LL;
    uint64_t v13 = v11 - 1;
    uint64_t v3 = (char *)MEMORY[0x18961AFE8];
    while (1)
    {
      __int128 v67 = *(_OWORD *)(v10 + 16 * v12 + 32);
      (*(void (**)(_OWORD *__return_ptr))(*(void *)(v10 + 16 * v12 + 40) + 16LL))(v69);
      uint64_t v72 = v69[6];
      v73 = v69[7];
      unint64_t v74 = v70;
      v71[2] = v69[2];
      v71[3] = v69[3];
      v71[4] = v69[4];
      v71[5] = v69[5];
      v71[0] = v69[0];
      v71[1] = v69[1];
      sub_189000568((uint64_t)v71);
      if (v72 == 1)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v75 = v3;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_188FFF3E8(0LL, *((void *)v3 + 2) + 1LL, 1);
          uint64_t v3 = v75;
        }

        uint64_t v16 = *((void *)v3 + 2);
        __int128 v15 = *((void *)v3 + 3);
        if (v16 >= v15 >> 1)
        {
          sub_188FFF3E8((char *)(v15 > 1), v16 + 1, 1);
          uint64_t v3 = v75;
        }

        *((void *)v3 + 2) = v16 + 1;
        *(_OWORD *)&v3[16 * v16 + 32] = v67;
      }

      if (v13 == v12) {
        break;
      }
      ++v12;
    }

    swift_bridgeObjectRelease();
    uint64_t v4 = v65;
    if (v5 != 1) {
      goto LABEL_21;
    }
  }

  else
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = (char *)MEMORY[0x18961AFE8];
    if (v5 != 1) {
      goto LABEL_21;
    }
  }

  int64_t v2 = *((void *)v3 + 2);
  if (v2)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0) {
      goto LABEL_18;
    }
    goto LABEL_63;
  }

  while (1)
  {
LABEL_21:
    strcpy((char *)v76, "_swift_");
    *((void *)&v76[0] + 1) = 0xE700000000000000LL;
    sub_18906788C();
    swift_bridgeObjectRetain();
    sub_18906788C();
    swift_bridgeObjectRelease();
    uint64_t v21 = swift_allocObject();
    *(void *)&v76[0] = 0LL;
    *((void *)&v76[0] + 1) = 0xE000000000000000LL;
    sub_189067C28();
    swift_bridgeObjectRelease();
    strcpy((char *)v76, "complete -c ");
    BYTE13(v76[0]) = 0;
    HIWORD(v76[0]) = -5120;
    sub_18906788C();
    swift_bridgeObjectRelease();
    sub_18906788C();
    sub_18906788C();
    swift_bridgeObjectRelease();
    sub_18906788C();
    *(void *)&v71[0] = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C760FE8);
    sub_189009B3C((unint64_t *)&qword_18C760FF0, &qword_18C760FE8, MEMORY[0x189618458]);
    sub_1890677C0();
    sub_18906788C();
    swift_bridgeObjectRelease();
    sub_18906788C();
    unint64_t v22 = *((void *)&v76[0] + 1);
    *(void *)(v21 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = *(void *)&v76[0];
    *(void *)(v21 + 24) = v22;
    unint64_t v23 = *((void *)v3 + 2);
    __int128 v66 = v3;
    if (v23)
    {
      *(void *)&v76[0] = 8736LL;
      *((void *)&v76[0] + 1) = 0xE200000000000000LL;
      *(void *)&v71[0] = MEMORY[0x18961AFE8];
      swift_bridgeObjectRetain();
      sub_188FFF34C(0LL, v23, 0);
      __int128 v24 = *(void *)&v71[0];
      uint64_t v25 = v3 + 40;
      do
      {
        uint64_t v26 = (*(uint64_t (**)(void))(*(void *)v25 + 24LL))();
        uint64_t v28 = v27;
        *(void *)&v71[0] = v24;
        unint64_t v30 = *(void *)(v24 + 16);
        unint64_t v29 = *(void *)(v24 + 24);
        if (v30 >= v29 >> 1)
        {
          sub_188FFF34C((char *)(v29 > 1), v30 + 1, 1);
          __int128 v24 = *(void *)&v71[0];
        }

        *(void *)(v24 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v30 + 1;
        __int128 v31 = v24 + 16 * v30;
        *(void *)(v31 + 32) = v26;
        *(void *)(v31 + 40) = v28;
        v25 += 16;
        --v23;
      }

      while (v23);
      uint64_t v3 = v66;
      swift_bridgeObjectRelease();
      *(void *)&v71[0] = v24;
      sub_1890677C0();
      swift_release();
      sub_18906788C();
      swift_bridgeObjectRelease();
      sub_18906788C();
      sub_18906788C();
      swift_bridgeObjectRelease();
    }

    sub_18906788C();
    __int128 v32 = swift_bridgeObjectRetain();
    __int128 v63 = sub_18900B17C(v32, v21);
    swift_bridgeObjectRelease();
    __int128 v33 = sub_18900CB24(0, v64);
    swift_bridgeObjectRetain();
    __int128 v34 = sub_18900B434(v33);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __int128 v35 = v34[2];
    if (v35)
    {
      *(void *)&v76[0] = MEMORY[0x18961AFE8];
      sub_188FFF34C(0LL, v35, 0);
      __int128 v36 = 0LL;
      __int128 v37 = *(void *)&v76[0];
      do
      {
        *(void *)&v71[0] = v34[v36 + 4];
        swift_bridgeObjectRetain();
        __int128 v38 = sub_1890677C0();
        __int128 v40 = v39;
        swift_bridgeObjectRelease();
        *(void *)&v76[0] = v37;
        __int128 v42 = *(void *)(v37 + 16);
        __int128 v41 = *(void *)(v37 + 24);
        if (v42 >= v41 >> 1)
        {
          sub_188FFF34C((char *)(v41 > 1), v42 + 1, 1);
          __int128 v37 = *(void *)&v76[0];
        }

        ++v36;
        *(void *)(v37 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v42 + 1;
        uint64_t v43 = v37 + 16 * v42;
        *(void *)(v43 + 32) = v38;
        *(void *)(v43 + 40) = v40;
      }

      while (v35 != v36);
      swift_bridgeObjectRelease();
      uint64_t v3 = v66;
    }

    else
    {
      swift_bridgeObjectRelease();
      __int128 v37 = MEMORY[0x18961AFE8];
    }

    uint64_t v44 = sub_18900B5CC(v37, v21);
    swift_bridgeObjectRelease();
    uint64_t v45 = *((void *)v3 + 2);
    if (!v45) {
      break;
    }
    __int128 v64 = v44;
    swift_bridgeObjectRetain_n();
    uint64_t v46 = 0LL;
    uint64_t v4 = (char *)MEMORY[0x18961AFE8];
    while (1)
    {
      __int128 v68 = *(_OWORD *)&v3[16 * v46 + 32];
      __int128 v47 = (*(uint64_t (**)(void))(*(void *)&v3[16 * v46 + 40] + 24LL))();
      __int128 v49 = v48;
      __int128 v50 = v65;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        __int128 v50 = sub_189056E74(0LL, *((void *)v65 + 2) + 1LL, 1, v65);
      }
      __int128 v52 = *((void *)v50 + 2);
      __int128 v51 = *((void *)v50 + 3);
      if (v52 >= v51 >> 1) {
        __int128 v50 = sub_189056E74((char *)(v51 > 1), v52 + 1, 1, v50);
      }
      *((void *)v50 + 2) = v52 + 1;
      __int128 v53 = &v50[16 * v52];
      *((void *)v53 + 4) = v47;
      *((void *)v53 + 5) = v49;
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC828);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = xmmword_1890684B0;
      *(_OWORD *)(inited + 32) = v68;
      __int128 v55 = sub_189009D88(v50, inited);
      swift_setDeallocating();
      swift_bridgeObjectRelease();
      __int128 v56 = *(void *)(v55 + 16);
      int64_t v2 = *((void *)v4 + 2);
      uint64_t v3 = (char *)(v2 + v56);
      if (__OFADD__(v2, v56)) {
        break;
      }
      __int128 v57 = (char *)swift_isUniquelyReferenced_nonNull_native();
      if (!(_DWORD)v57 || (uint64_t)v3 > *((void *)v4 + 3) >> 1)
      {
        else {
          __int128 v58 = v2;
        }
        uint64_t v4 = sub_189056E74(v57, v58, 1, v4);
      }

      uint64_t v3 = v66;
      if (*(void *)(v55 + 16))
      {
        if ((*((void *)v4 + 3) >> 1) - *((void *)v4 + 2) < v56) {
          goto LABEL_59;
        }
        swift_arrayInitWithCopy();
        if (v56)
        {
          __int128 v59 = *((void *)v4 + 2);
          __int128 v60 = __OFADD__(v59, v56);
          __int128 v61 = v59 + v56;
          if (v60) {
            goto LABEL_60;
          }
          *((void *)v4 + 2) = v61;
        }
      }

      else if (v56)
      {
        __break(1u);
        break;
      }

      swift_bridgeObjectRelease();
      if (v45 == ++v46)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v44 = v64;
        goto LABEL_56;
      }
    }

    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    uint64_t v3 = sub_1890573A8(0LL, v2 + 1, 1, v3);
LABEL_18:
    uint64_t v18 = *((void *)v3 + 2);
    uint64_t v17 = *((void *)v3 + 3);
    if (v18 >= v17 >> 1) {
      uint64_t v3 = sub_1890573A8((char *)(v17 > 1), v18 + 1, 1, v3);
    }
    uint64_t v19 = sub_1890099B4();
    *((void *)v3 + 2) = v18 + 1;
    uint64_t v20 = &v3[16 * v18];
    *((void *)v20 + 4) = &type metadata for HelpCommand;
    *((void *)v20 + 5) = v19;
  }

  uint64_t v4 = (char *)MEMORY[0x18961AFE8];
LABEL_56:
  swift_bridgeObjectRelease();
  *(void *)&v76[0] = v4;
  sub_189058724(v44);
  sub_189058724(v63);
  swift_release();
  return *(void *)&v76[0];
}

char *sub_18900A678()
{
  if (*(_BYTE *)(v0 + 104)) {
    return 0LL;
  }
  unint64_t v3 = *(void *)v0;
  uint64_t v4 = *(void *)(v0 + 56);
  unint64_t v5 = *(void *)(v0 + 64);
  uint64_t v6 = *(unsigned __int8 *)(v0 + 144);
  char v7 = *(_BYTE *)(v0 + 168);
  if (v3 > 1)
  {
    if (!*(void *)(v3 + 16)) {
      return 0LL;
    }
    uint64_t v23 = v6;
    swift_bridgeObjectRetain();
  }

  else
  {
    uint64_t v23 = v6;
    unint64_t v3 = MEMORY[0x18961AFE8];
    uint64_t v8 = *(void *)(MEMORY[0x18961AFE8] + 16LL);
    swift_bridgeObjectRelease();
    if (!v8) {
      return 0LL;
    }
  }

  int64_t v9 = *(void *)(v3 + 16);
  if (v9)
  {
    unint64_t v22 = v5;
    uint64_t v26 = MEMORY[0x18961AFE8];
    sub_188FFF34C(0LL, v9, 0);
    uint64_t v10 = (char *)v26;
    __int128 v11 = (unsigned __int8 *)(v3 + 48);
    while (1)
    {
      uint64_t v12 = *((void *)v11 - 2);
      uint64_t v13 = *((void *)v11 - 1);
      unsigned int v14 = *v11;
      if (!(v14 >> 6)) {
        break;
      }
      if (v14 >> 6 != 1)
      {
        uint64_t v24 = 2125613LL;
        goto LABEL_16;
      }

      uint64_t v24 = 0LL;
      unint64_t v25 = 0xE000000000000000LL;
      swift_bridgeObjectRetain();
      sub_18906788C();
      sub_1890677B4();
LABEL_17:
      sub_188FFCF98(v12, v13, v14);
      unint64_t v16 = *(void *)(v26 + 16);
      unint64_t v15 = *(void *)(v26 + 24);
      if (v16 >= v15 >> 1) {
        sub_188FFF34C((char *)(v15 > 1), v16 + 1, 1);
      }
      v11 += 24;
      *(void *)(v26 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v16 + 1;
      uint64_t v17 = v26 + 16 * v16;
      *(void *)(v17 + 32) = v24;
      *(void *)(v17 + 40) = v25;
      if (!--v9)
      {
        swift_bridgeObjectRelease();
        unint64_t v5 = v22;
        goto LABEL_22;
      }
    }

    uint64_t v24 = 2124845LL;
LABEL_16:
    unint64_t v25 = 0xE300000000000000LL;
    sub_188FFCF80(v12, v13, v14);
    sub_18906788C();
    goto LABEL_17;
  }

  swift_bridgeObjectRelease();
  uint64_t v10 = (char *)MEMORY[0x18961AFE8];
LABEL_22:
  uint64_t v18 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000LL) == 0) {
    uint64_t v18 = v4 & 0xFFFFFFFFFFFFLL;
  }
  if (v18)
  {
    sub_188FFCC74();
    sub_189067B20();
    sub_18906788C();
    swift_bridgeObjectRelease();
    sub_18906788C();
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v10 = sub_189056E74(0LL, *((void *)v10 + 2) + 1LL, 1, v10);
    }
    unint64_t v20 = *((void *)v10 + 2);
    unint64_t v19 = *((void *)v10 + 3);
    if (v20 >= v19 >> 1) {
      uint64_t v10 = sub_189056E74((char *)(v19 > 1), v20 + 1, 1, v10);
    }
    *((void *)v10 + 2) = v20 + 1;
    uint64_t v21 = &v10[16 * v20];
    *((void *)v21 + 4) = 656434221LL;
    *((void *)v21 + 5) = 0xE400000000000000LL;
    swift_bridgeObjectRelease();
  }

  if ((v7 & 1) != 0) {
    __asm { BR              X9 }
  }

  return v10;
}

uint64_t sub_18900AE34()
{
  return 0LL;
}

uint64_t sub_18900AF50()
{
  return 0LL;
}

uint64_t sub_18900B158()
{
  return swift_deallocObject();
}

uint64_t sub_18900B17C(uint64_t a1, uint64_t a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x18961AFE8];
  if (v2)
  {
    uint64_t v20 = MEMORY[0x18961AFE8];
    sub_188FFF34C(0LL, v2, 0);
    uint64_t v3 = v20;
    uint64_t v15 = a2;
    swift_beginAccess();
    uint64_t v6 = (void *)(a1 + 40);
    for (int64_t i = v2 - 1; ; int64_t i = v21 - 1)
    {
      int64_t v21 = i;
      uint64_t v8 = *(v6 - 1);
      uint64_t v9 = *v6;
      (*(void (**)(_OWORD *__return_ptr, uint64_t, void))(*v6 + 16LL))(v16, v8, *v6);
      v18[6] = v16[6];
      v18[7] = v16[7];
      uint64_t v19 = v17;
      v18[2] = v16[2];
      v18[3] = v16[3];
      v18[4] = v16[4];
      v18[5] = v16[5];
      v18[0] = v16[0];
      v18[1] = v16[1];
      swift_bridgeObjectRetain();
      sub_189000568((uint64_t)v18);
      sub_188FFCC74();
      sub_189067B20();
      swift_bridgeObjectRelease();
      *(void *)&v16[0] = 0LL;
      *((void *)&v16[0] + 1) = 0xE000000000000000LL;
      sub_189067C28();
      swift_bridgeObjectRelease();
      *(void *)&v16[0] = 0x2720612D20662DLL;
      *((void *)&v16[0] + 1) = 0xE700000000000000LL;
      (*(void (**)(uint64_t, uint64_t))(v9 + 24))(v8, v9);
      sub_18906788C();
      swift_bridgeObjectRelease();
      sub_18906788C();
      sub_18906788C();
      swift_bridgeObjectRelease();
      sub_18906788C();
      uint64_t v10 = *(void *)(v15 + 24);
      *(void *)&v16[0] = *(void *)(v15 + 16);
      *((void *)&v16[0] + 1) = v10;
      swift_bridgeObjectRetain();
      sub_18906788C();
      sub_18906788C();
      swift_bridgeObjectRelease();
      __int128 v11 = v16[0];
      uint64_t v20 = v3;
      unint64_t v13 = *(void *)(v3 + 16);
      unint64_t v12 = *(void *)(v3 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_188FFF34C((char *)(v12 > 1), v13 + 1, 1);
        uint64_t v3 = v20;
      }

      *(void *)(v3 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v13 + 1;
      *(_OWORD *)(v3 + 16 * v13 + 32) = v11;
      if (!v21) {
        break;
      }
      v6 += 2;
    }
  }

  return v3;
}

void *sub_18900B434(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x18961AFE8];
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v3 = v1 - 1;
  uint64_t v4 = (void *)MEMORY[0x18961AFE8];
  for (uint64_t i = 32LL; ; i += 192LL)
  {
    __int128 v6 = *(_OWORD *)(a1 + i + 144);
    _OWORD v16[8] = *(_OWORD *)(a1 + i + 128);
    v16[9] = v6;
    __int128 v7 = *(_OWORD *)(a1 + i + 176);
    v16[10] = *(_OWORD *)(a1 + i + 160);
    v16[11] = v7;
    __int128 v8 = *(_OWORD *)(a1 + i + 80);
    v16[4] = *(_OWORD *)(a1 + i + 64);
    v16[5] = v8;
    __int128 v9 = *(_OWORD *)(a1 + i + 112);
    void v16[6] = *(_OWORD *)(a1 + i + 96);
    v16[7] = v9;
    __int128 v10 = *(_OWORD *)(a1 + i + 16);
    v16[0] = *(_OWORD *)(a1 + i);
    v16[1] = v10;
    __int128 v11 = *(_OWORD *)(a1 + i + 48);
    void v16[2] = *(_OWORD *)(a1 + i + 32);
    v16[3] = v11;
    sub_188FFCFF4((uint64_t)v16);
    unint64_t v12 = sub_18900A678();
    sub_1890099F8((uint64_t)v16);
    if (v12)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v4 = sub_189057C0C(0LL, v4[2] + 1LL, 1, v4);
      }
      unint64_t v14 = v4[2];
      unint64_t v13 = v4[3];
      if (v14 >= v13 >> 1) {
        uint64_t v4 = sub_189057C0C((void *)(v13 > 1), v14 + 1, 1, v4);
      }
      v4[2] = v14 + 1;
      v4[v14 + 4] = v12;
    }

    if (!v3) {
      break;
    }
    --v3;
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_18900B5CC(uint64_t a1, uint64_t a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x18961AFE8];
  if (v2)
  {
    uint64_t v13 = MEMORY[0x18961AFE8];
    sub_188FFF34C(0LL, v2, 0);
    uint64_t v3 = v13;
    swift_beginAccess();
    uint64_t v6 = a1 + 40;
    do
    {
      uint64_t v11 = *(void *)(a2 + 16);
      uint64_t v12 = *(void *)(a2 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_18906788C();
      sub_18906788C();
      swift_bridgeObjectRelease();
      unint64_t v8 = *(void *)(v13 + 16);
      unint64_t v7 = *(void *)(v13 + 24);
      if (v8 >= v7 >> 1) {
        sub_188FFF34C((char *)(v7 > 1), v8 + 1, 1);
      }
      v6 += 16LL;
      *(void *)(v13 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v8 + 1;
      uint64_t v9 = v13 + 16 * v8;
      *(void *)(v9 + 32) = v11;
      *(void *)(v9 + 40) = v12;
      --v2;
    }

    while (v2);
  }

  return v3;
}

uint64_t sub_18900B6FC()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  uint64_t v4 = v0[2];
  uint64_t v3 = v0[3];
  BOOL v5 = *v0 == 6845306 && v1 == 0xE300000000000000LL;
  if (v5 || (sub_189067F10() & 1) != 0) {
    return sub_18900CCAC(v4, v3);
  }
  sub_189067F10();
  if (v2 == 1752392034 && v1 == 0xE400000000000000LL || (sub_189067F10() & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC828);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = xmmword_1890684B0;
    *(void *)(inited + 32) = v4;
    *(void *)(inited + 40) = v3;
    sub_18900BBA0(inited);
    swift_setDeallocating();
    sub_188FFCC74();
    sub_189067B20();
    swift_bridgeObjectRelease();
    sub_189067C28();
    swift_bridgeObjectRelease();
    strcpy((char *)v9, "#!/bin/bash\n\n");
    HIWORD(v9[1]) = -4864;
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = xmmword_1890684B0;
    *(void *)(v8 + 32) = v4;
    *(void *)(v8 + 40) = v3;
    sub_189006FBC(v8);
    swift_bridgeObjectRelease();
    sub_18906788C();
    swift_bridgeObjectRelease();
    sub_18906788C();
    sub_18906788C();
    swift_bridgeObjectRelease();
    sub_18906788C();
    (*(void (**)(uint64_t, uint64_t))(v3 + 24))(v4, v3);
    sub_18906788C();
    swift_bridgeObjectRelease();
    return v9[0];
  }

  else
  {
    if ((sub_189067F10() & 1) == 0) {
      sub_189067F10();
    }
    if (v2 == 1752394086 && v1 == 0xE400000000000000LL || (sub_189067F10() & 1) != 0)
    {
      return sub_189009BA8(v4, v3);
    }

    else
    {
      swift_bridgeObjectRetain();
      sub_189067C28();
      sub_18906788C();
      sub_189067CD0();
      swift_bridgeObjectRelease();
      uint64_t result = sub_189067D3C();
      __break(1u);
    }
  }

  return result;
}

uint64_t sub_18900BAA4(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x18961AFE8];
  if (v1)
  {
    uint64_t v16 = MEMORY[0x18961AFE8];
    sub_188FFF34C(0LL, v1, 0);
    uint64_t v2 = v16;
    uint64_t v4 = (uint64_t *)(a1 + 56);
    do
    {
      uint64_t v5 = *(v4 - 3);
      uint64_t v6 = *(v4 - 2);
      uint64_t v7 = *(v4 - 1);
      uint64_t v8 = *v4;
      swift_bridgeObjectRetain();
      uint64_t v9 = MEMORY[0x1895DC8B4](v5, v6, v7, v8);
      uint64_t v11 = v10;
      swift_bridgeObjectRelease();
      unint64_t v13 = *(void *)(v16 + 16);
      unint64_t v12 = *(void *)(v16 + 24);
      if (v13 >= v12 >> 1) {
        sub_188FFF34C((char *)(v12 > 1), v13 + 1, 1);
      }
      *(void *)(v16 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v13 + 1;
      uint64_t v14 = v16 + 16 * v13;
      *(void *)(v14 + 32) = v9;
      *(void *)(v14 + 40) = v11;
      v4 += 4;
      --v1;
    }

    while (v1);
  }

  return v2;
}

uint64_t sub_18900BBA0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1)
  {
    uint64_t v3 = (char *)MEMORY[0x18961AFE8];
LABEL_20:
    sub_18900C824(v3);
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C760FE8);
    sub_189009B3C((unint64_t *)&qword_18C760FF0, &qword_18C760FE8, MEMORY[0x189618458]);
    sub_1890677C0();
    swift_bridgeObjectRelease();
    sub_18906788C();
    swift_bridgeObjectRelease();
    return 95LL;
  }

  uint64_t v2 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
  uint64_t v3 = (char *)MEMORY[0x18961AFE8];
  while (1)
  {
    uint64_t result = sub_18900C640(*(v2 - 1), *v2);
    uint64_t v5 = *(void *)(result + 16);
    int64_t v6 = *((void *)v3 + 2);
    int64_t v7 = v6 + v5;
    if (__OFADD__(v6, v5)) {
      break;
    }
    uint64_t v8 = result;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((_DWORD)result && v7 <= *((void *)v3 + 3) >> 1)
    {
      if (*(void *)(v8 + 16)) {
        goto LABEL_14;
      }
    }

    else
    {
      if (v6 <= v7) {
        int64_t v9 = v6 + v5;
      }
      else {
        int64_t v9 = v6;
      }
      uint64_t result = (uint64_t)sub_189056E74((char *)result, v9, 1, v3);
      uint64_t v3 = (char *)result;
      if (*(void *)(v8 + 16))
      {
LABEL_14:
        if ((*((void *)v3 + 3) >> 1) - *((void *)v3 + 2) < v5) {
          goto LABEL_23;
        }
        uint64_t result = swift_arrayInitWithCopy();
        if (v5)
        {
          uint64_t v10 = *((void *)v3 + 2);
          BOOL v11 = __OFADD__(v10, v5);
          uint64_t v12 = v10 + v5;
          if (v11) {
            goto LABEL_24;
          }
          *((void *)v3 + 2) = v12;
        }

        goto LABEL_4;
      }
    }

    if (v5) {
      goto LABEL_22;
    }
LABEL_4:
    swift_bridgeObjectRelease();
    v2 += 2;
    if (!--v1)
    {
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
  }

  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
  return result;
}

char *sub_18900BD80(uint64_t a1)
{
  unint64_t v2 = *v1;
  unint64_t v3 = v1[4];
  unint64_t v4 = *(void *)(a1 + 16);
  unint64_t v5 = v4 != 0;
  uint64_t v6 = MEMORY[0x18961AFE8];
  uint64_t v7 = v4 - v5;
  if (v4 == v5)
  {
LABEL_9:
    v26[0] = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C760FE8);
    sub_189009B3C((unint64_t *)&qword_18C760FF0, &qword_18C760FE8, MEMORY[0x189618458]);
    sub_1890677C0();
    swift_bridgeObjectRelease();
    if (v2 >= 2)
    {
      uint64_t v17 = v2;
      swift_bridgeObjectRetain();
    }

    else
    {
      uint64_t v17 = MEMORY[0x18961AFE8];
    }

    uint64_t v18 = sub_189048B28(v17);
    uint64_t v20 = v19;
    unsigned __int8 v22 = v21;
    unsigned int v23 = v21;
    swift_bridgeObjectRelease();
    if (v23 <= 0xFD)
    {
      sub_1890520B0(v18, v20, v22);
      sub_189009B7C(v18, v20, v22);
    }

    else if (*(void *)(v3 + 16))
    {
      swift_bridgeObjectRetain();
    }

    sub_189067C28();
    swift_bridgeObjectRelease();
    strcpy((char *)v26, "---completion ");
    HIBYTE(v26[1]) = -18;
    sub_18906788C();
    swift_bridgeObjectRelease();
    sub_18906788C();
    sub_18906788C();
    swift_bridgeObjectRelease();
    return (char *)v26[0];
  }

  else
  {
    unint64_t v25 = *v1;
    v26[0] = MEMORY[0x18961AFE8];
    swift_bridgeObjectRetain();
    uint64_t result = sub_188FFF34C(0LL, v7 & ~(v7 >> 63), 0);
    if ((v7 & 0x8000000000000000LL) == 0)
    {
      unint64_t v24 = v3;
      uint64_t v6 = v26[0];
      uint64_t v10 = a1 + 16 * v5 + 40;
      while (v5 < v4)
      {
        uint64_t result = (char *)(*(uint64_t (**)(void))(*(void *)v10 + 24LL))();
        BOOL v11 = result;
        uint64_t v13 = v12;
        v26[0] = v6;
        unint64_t v15 = *(void *)(v6 + 16);
        unint64_t v14 = *(void *)(v6 + 24);
        if (v15 >= v14 >> 1)
        {
          uint64_t result = sub_188FFF34C((char *)(v14 > 1), v15 + 1, 1);
          uint64_t v6 = v26[0];
        }

        *(void *)(v6 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v15 + 1;
        uint64_t v16 = v6 + 16 * v15;
        *(void *)(v16 + 32) = v11;
        *(void *)(v16 + 40) = v13;
        ++v5;
        v10 += 16LL;
        if (v4 == v5)
        {
          swift_bridgeObjectRelease();
          unint64_t v3 = v24;
          unint64_t v2 = v25;
          goto LABEL_9;
        }
      }

      __break(1u);
    }

    __break(1u);
  }

  return result;
}

uint64_t CompletionShell.rawValue.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CompletionShell.rawValue.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*CompletionShell.rawValue.modify())()
{
  return nullsub_1;
}

ArgumentParserInternal::CompletionShell_optional __swiftcall CompletionShell.init(rawValue:)( ArgumentParserInternal::CompletionShell_optional rawValue)
{
  object = rawValue.value.rawValue._object;
  uint64_t countAndFlagsBits = rawValue.value.rawValue._countAndFlagsBits;
  unint64_t v4 = v1;
  BOOL v5 = rawValue.value.rawValue._countAndFlagsBits == 6845306
    && rawValue.value.rawValue._object == (void *)0xE300000000000000LL;
  if (v5
    || (rawValue.value.rawValue._uint64_t countAndFlagsBits = sub_189067F10(),
        (rawValue.value.rawValue._countAndFlagsBits & 1) != 0)
    || countAndFlagsBits == 1752392034 && object == (void *)0xE400000000000000LL
    || ((rawValue.value.rawValue._uint64_t countAndFlagsBits = sub_189067F10(), countAndFlagsBits == 1752394086)
      ? (BOOL v6 = object == (void *)0xE400000000000000LL)
      : (BOOL v6 = 0),
        !v6 ? (char v7 = 0) : (char v7 = 1),
        (rawValue.value.rawValue._countAndFlagsBits & 1) != 0
     || (v7 & 1) != 0
     || (rawValue.value.rawValue._uint64_t countAndFlagsBits = sub_189067F10(),
         (rawValue.value.rawValue._countAndFlagsBits & 1) != 0)))
  {
    uint64_t *v4 = countAndFlagsBits;
    v4[1] = (uint64_t)object;
  }

  else
  {
    rawValue.value.rawValue._uint64_t countAndFlagsBits = swift_bridgeObjectRelease();
    uint64_t *v4 = 0LL;
    v4[1] = 0LL;
  }

  return rawValue;
}

void static CompletionShell.zsh.getter(void *a1@<X8>)
{
  *a1 = 6845306LL;
  a1[1] = 0xE300000000000000LL;
}

uint64_t static CompletionShell.bash.getter@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_189067F10();
  *a1 = 1752392034LL;
  a1[1] = 0xE400000000000000LL;
  return result;
}

uint64_t static CompletionShell.fish.getter@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_189067F10();
  if ((result & 1) == 0) {
    uint64_t result = sub_189067F10();
  }
  *a1 = 1752394086LL;
  a1[1] = 0xE400000000000000LL;
  return result;
}

uint64_t static CompletionShell.autodetected()@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_189027454();
  if (v3) {
    return CompletionShell.init(rawValue:)(*(Swift::String *)&result).value.rawValue._countAndFlagsBits;
  }
  *a1 = 0LL;
  a1[1] = 0LL;
  return result;
}

void *static CompletionShell.allCases.getter()
{
  return &unk_18A339168;
}

uint64_t sub_18900C29C(Swift::String *a1)
{
  return CompletionShell.init(rawValue:)(*a1).value.rawValue._countAndFlagsBits;
}

uint64_t sub_18900C2A8@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_18900C2B4()
{
  return sub_189068060();
}

uint64_t sub_18900C30C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_18900C350()
{
  return sub_189068060();
}

void sub_18900C3A4(void *a1@<X8>)
{
  *a1 = &unk_18A339168;
}

uint64_t sub_18900C3B4(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1LL;
  }
  else {
    return sub_189067F10();
  }
}

uint64_t sub_18900C3E4@<X0>( uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v6 = result;
  if (!a4)
  {
    uint64_t result = sub_189027454();
    if (v11)
    {
      uint64_t v10 = result;
      uint64_t v8 = v11;
      if (result == 6845306 && v11 == 0xE300000000000000LL)
      {
        uint64_t v10 = 6845306LL;
        goto LABEL_26;
      }

      uint64_t result = sub_189067F10();
      if ((result & 1) != 0) {
        goto LABEL_26;
      }
      if (v10 == 1752392034 && v8 == 0xE400000000000000LL)
      {
        uint64_t v10 = 1752392034LL;
        goto LABEL_26;
      }

      uint64_t result = sub_189067F10();
      if ((result & 1) != 0) {
        goto LABEL_26;
      }
      uint64_t result = 1752394086LL;
      if (v10 == 1752394086 && v8 == 0xE400000000000000LL)
      {
        uint64_t v10 = 1752394086LL;
        goto LABEL_26;
      }

      uint64_t result = sub_189067F10();
      if ((result & 1) != 0) {
        goto LABEL_26;
      }
      swift_bridgeObjectRelease();
    }

    sub_188FFAD68();
    swift_allocError();
    __int128 v13 = 0uLL;
    *(_OWORD *)uint64_t v12 = 0u;
    goto LABEL_29;
  }

  uint64_t v8 = a4;
  uint64_t v10 = 6845306LL;
  if (a3 == 6845306 && a4 == 0xE300000000000000LL) {
    goto LABEL_26;
  }
  uint64_t result = sub_189067F10();
  if ((result & 1) != 0) {
    goto LABEL_5;
  }
  uint64_t v10 = 1752392034LL;
  if (a3 == 1752392034 && v8 == 0xE400000000000000LL) {
    goto LABEL_26;
  }
  uint64_t result = sub_189067F10();
  if ((result & 1) != 0) {
    goto LABEL_5;
  }
  uint64_t v10 = 1752394086LL;
  if (a3 == 1752394086 && v8 == 0xE400000000000000LL) {
    goto LABEL_26;
  }
  uint64_t result = sub_189067F10();
  if ((result & 1) != 0)
  {
LABEL_5:
    uint64_t v10 = a3;
LABEL_26:
    *a5 = v10;
    a5[1] = v8;
    a5[2] = v6;
    a5[3] = a2;
    return result;
  }

  sub_188FFAD68();
  swift_allocError();
  *(void *)uint64_t v12 = a3;
  *(void *)(v12 + 8) = v8;
  __int128 v13 = 0uLL;
LABEL_29:
  *(_OWORD *)(v12 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v13;
  *(_OWORD *)(v12 + 32) = v13;
  *(_OWORD *)(v12 + 48) = v13;
  *(_OWORD *)(v12 + 64) = v13;
  *(_BYTE *)(v12 + 80) = 3;
  return swift_willThrow();
}

uint64_t sub_18900C640(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void *__return_ptr))(a2 + 16))(v22);
  uint64_t v5 = v22[2];
  uint64_t v4 = v22[3];
  swift_bridgeObjectRetain();
  sub_189000568((uint64_t)v22);
  if (v4)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC858);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = xmmword_1890684B0;
    *(void *)(v6 + 32) = v5;
    *(void *)(v6 + 40) = v4;
    uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
    unint64_t v9 = v8;
    uint64_t v20 = 32LL;
    unint64_t v21 = 0xE100000000000000LL;
    MEMORY[0x1895F8858](v7);
    uint64_t v19 = &v20;
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1890266AC(0x7FFFFFFFFFFFFFFFLL, 1, sub_189009B90, (uint64_t)v18, v7, v9);
    swift_bridgeObjectRelease();
    uint64_t v11 = sub_18900BAA4((uint64_t)v10);
    swift_bridgeObjectRelease();
    uint64_t v20 = v6;
    sub_189058724(v11);
    return v20;
  }

  else
  {
    uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
    unint64_t v15 = v14;
    uint64_t v20 = 32LL;
    unint64_t v21 = 0xE100000000000000LL;
    MEMORY[0x1895F8858](v13);
    uint64_t v19 = &v20;
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_1890266AC(0x7FFFFFFFFFFFFFFFLL, 1, sub_189009954, (uint64_t)v18, v13, v15);
    swift_bridgeObjectRelease();
    uint64_t v12 = sub_18900BAA4((uint64_t)v16);
    swift_bridgeObjectRelease();
  }

  return v12;
}

uint64_t sub_18900C824(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return MEMORY[0x18961AFE8];
  }
  uint64_t v4 = a1[4];
  uint64_t v3 = a1[5];
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC858);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = xmmword_1890684B0;
  *(void *)(v5 + 32) = v4;
  *(void *)(v5 + 40) = v3;
  swift_bridgeObjectRetain();
  uint64_t v6 = v1 - 1;
  if (v1 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v7 = a1 + 7;
    do
    {
      uint64_t v10 = *(v7 - 1);
      uint64_t v11 = *v7;
      unint64_t v12 = *(void *)(v5 + 16);
      if (!v12
        || ((uint64_t v13 = v5 + 16 * v12, *(void *)(v13 + 16) == v10) ? (v14 = *(void *)(v13 + 24) == v11) : (v14 = 0),
            !v14 && (sub_189067F10() & 1) == 0))
      {
        unint64_t v8 = *(void *)(v5 + 24);
        swift_bridgeObjectRetain();
        if (v12 >= v8 >> 1) {
          uint64_t v5 = (uint64_t)sub_189056E74((char *)(v8 > 1), v12 + 1, 1, (char *)v5);
        }
        *(void *)(v5 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v12 + 1;
        uint64_t v9 = v5 + 16 * v12;
        *(void *)(v9 + 32) = v10;
        *(void *)(v9 + 40) = v11;
      }

      v7 += 2;
      --v6;
    }

    while (v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return v5;
}

unint64_t sub_18900C96C()
{
  unint64_t result = qword_18C761038;
  if (!qword_18C761038)
  {
    unint64_t result = MEMORY[0x1895DD3F4]( &protocol conformance descriptor for CompletionShell,  &type metadata for CompletionShell);
    atomic_store(result, (unint64_t *)&qword_18C761038);
  }

  return result;
}

uint64_t sub_18900C9B0()
{
  return sub_189009B3C(&qword_18C761040, &qword_18C761048, MEMORY[0x189618488]);
}

void *initializeBufferWithCopyOfBuffer for CompletionShell(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for CompletionShell()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for CompletionShell(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void *assignWithTake for CompletionShell(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CompletionShell(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CompletionShell(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0LL;
    if (a3 < 0) {
      *(_BYTE *)(result + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for CompletionShell()
{
  return &type metadata for CompletionShell;
}

uint64_t sub_18900CB24(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (v2)
  {
    uint64_t v4 = a2 + 16 * v2;
    uint64_t v5 = *(void *)(v4 + 16);
    uint64_t v6 = *(void *)(*(void *)(v4 + 24) + 8LL);
    v17[0] = a1;
    uint64_t v18 = sub_188FFB780(v5, v6, v17, 0LL, 0LL, 0LL);
    uint64_t v19 = v7;
    sub_18900EC10(a2, (uint64_t)v15);
    sub_18900F6C0((uint64_t)v15, (uint64_t)v16);
    sub_18900F6C0((uint64_t)v16, (uint64_t)v17);
    if (sub_18900F708((uint64_t)v17) != 1)
    {
      sub_18900F6C0((uint64_t)v16, (uint64_t)v14);
      v13[8] = v14[8];
      v13[9] = v14[9];
      v13[10] = v14[10];
      v13[11] = v14[11];
      v13[4] = v14[4];
      v13[5] = v14[5];
      v13[6] = v14[6];
      v13[7] = v14[7];
      v13[0] = v14[0];
      v13[1] = v14[1];
      void v13[2] = v14[2];
      v13[3] = v14[3];
      sub_189039748(v13);
      sub_18900F720((uint64_t)v16);
    }

    sub_18900EE00(a2, (uint64_t)v12);
    sub_18900F6C0((uint64_t)v12, (uint64_t)v13);
    sub_18900F6C0((uint64_t)v13, (uint64_t)v14);
    if (sub_18900F708((uint64_t)v14) != 1)
    {
      sub_18900F6C0((uint64_t)v13, (uint64_t)v11);
      v10[8] = v11[8];
      v10[9] = v11[9];
      v10[10] = v11[10];
      v10[11] = v11[11];
      v10[4] = v11[4];
      v10[5] = v11[5];
      v10[6] = v11[6];
      v10[7] = v11[7];
      v10[0] = v11[0];
      v10[1] = v11[1];
      uint64_t v10[2] = v11[2];
      v10[3] = v11[3];
      sub_189039748(v10);
      sub_18900F720((uint64_t)v13);
    }

    return v18;
  }

  else
  {
    uint64_t v8 = MEMORY[0x18961AFE8];
    sub_189011F34(MEMORY[0x18961AFE8]);
  }

  return v8;
}

uint64_t sub_18900CCAC(uint64_t a1, uint64_t a2)
{
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = xmmword_1890684B0;
  *(void *)(inited + 32) = a1;
  *(void *)(inited + 40) = a2;
  sub_18900BBA0(inited);
  swift_setDeallocating();
  sub_189067C28();
  sub_18906788C();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(a2 + 24);
  v5(a1, a2);
  sub_18906788C();
  swift_bridgeObjectRelease();
  sub_18906788C();
  v5(a1, a2);
  sub_188FFCC74();
  sub_189067B20();
  swift_bridgeObjectRelease();
  sub_18906788C();
  swift_bridgeObjectRelease();
  sub_18906788C();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = xmmword_1890684B0;
  *(void *)(v6 + 32) = a1;
  *(void *)(v6 + 40) = a2;
  sub_18900CEF0(v6);
  swift_bridgeObjectRelease();
  sub_18906788C();
  swift_bridgeObjectRelease();
  sub_18906788C();
  sub_18906788C();
  swift_bridgeObjectRelease();
  return 0LL;
}

uint64_t sub_18900CEF0(uint64_t a1)
{
  void (*v20)(_OWORD *__return_ptr);
  uint64_t v21;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  unint64_t v28;
  char *v29;
  int64_t v30;
  char *v31;
  char *v32;
  char *v33;
  unint64_t v34;
  char *v35;
  unint64_t v36;
  int64_t v37;
  unint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  _BYTE v75[16];
  _OWORD *v76;
  __int128 v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  __int128 v83;
  _OWORD v84[8];
  uint64_t v85;
  _OWORD v86[6];
  __int128 v87;
  __int128 v88;
  uint64_t v89;
  uint64_t v90;
  _OWORD v91[6];
  __int128 v92;
  __int128 v93;
  uint64_t v94;
  _OWORD v95[8];
  uint64_t v96;
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6)
  {
    __break(1u);
LABEL_49:
    uint64_t v5 = sub_189056E74(0LL, *((void *)v5 + 2) + 1LL, 1, v5);
    goto LABEL_17;
  }

  uint64_t v8 = a1 + 16 * v6;
  uint64_t v9 = *(void *)(v8 + 16);
  uint64_t v10 = *(void *)(v8 + 24);
  uint64_t v11 = sub_18900BBA0(a1);
  v79 = v12;
  uint64_t v81 = a1;
  uint64_t v13 = sub_18900CB24(0, a1);
  swift_bridgeObjectRetain();
  uint64_t v1 = 0LL;
  uint64_t v5 = sub_18900F340(v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v10 + 16))(v91, v9, v10);
  v95[6] = v92;
  v95[7] = v93;
  v96 = v94;
  v95[2] = v91[2];
  v95[3] = v91[3];
  v95[4] = v91[4];
  v95[5] = v91[5];
  v95[0] = v91[0];
  v95[1] = v91[1];
  uint64_t v14 = *((void *)&v92 + 1);
  swift_bridgeObjectRetain();
  sub_189000568((uint64_t)v95);
  uint64_t v15 = *(void *)(v14 + 16);
  v80 = v11;
  if (v15)
  {
    uint64_t v16 = v5;
    uint64_t v17 = 0LL;
    uint64_t v18 = v15 - 1;
    uint64_t v19 = MEMORY[0x18961AFE8];
    while (1)
    {
      uint64_t v20 = *(void (**)(_OWORD *__return_ptr))(*(void *)(v14 + 16 * v17 + 40) + 16LL);
      int v83 = *(_OWORD *)(v14 + 16 * v17 + 32);
      v20(v84);
      v87 = v84[6];
      __int128 v88 = v84[7];
      uint64_t v89 = v85;
      v86[2] = v84[2];
      v86[3] = v84[3];
      v86[4] = v84[4];
      v86[5] = v84[5];
      v86[0] = v84[0];
      v86[1] = v84[1];
      sub_189000568((uint64_t)v86);
      if (v87 == 1)
      {
        unint64_t v21 = v19;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v90 = v19;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_188FFF3E8(0LL, *(void *)(v19 + 16) + 1LL, 1);
          unint64_t v21 = v90;
        }

        unint64_t v24 = *(void *)(v21 + 16);
        unsigned int v23 = *(void *)(v21 + 24);
        if (v24 >= v23 >> 1)
        {
          sub_188FFF3E8((char *)(v23 > 1), v24 + 1, 1);
          unint64_t v21 = v90;
        }

        *(void *)(v21 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v24 + 1;
        *(_OWORD *)(v21 + 16 * v24 + 32) = v83;
        if (v18 == v17)
        {
LABEL_13:
          swift_bridgeObjectRelease();
          uint64_t v5 = v16;
          goto LABEL_15;
        }
      }

      else
      {
        unint64_t v21 = v19;
        if (v18 == v17) {
          goto LABEL_13;
        }
      }

      uint64_t v19 = v21;
      ++v17;
    }
  }

  swift_bridgeObjectRelease();
  unint64_t v21 = MEMORY[0x18961AFE8];
LABEL_15:
  uint64_t v3 = MEMORY[0x18961AFE8];
  unint64_t v4 = 0xD000000000000011LL;
  if (!*(void *)(v21 + 16))
  {
    uint64_t v82 = (char *)v21;
    *(void *)&int v83 = 0LL;
    goto LABEL_35;
  }

  uint64_t v2 = v21;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    goto LABEL_49;
  }
LABEL_17:
  uint64_t v26 = *((void *)v5 + 2);
  unint64_t v25 = *((void *)v5 + 3);
  uint64_t v27 = v25 >> 1;
  uint64_t v28 = v26 + 1;
  if (v25 >> 1 <= v26)
  {
    uint64_t v5 = sub_189056E74((char *)(v25 > 1), v26 + 1, 1, v5);
    unint64_t v25 = *((void *)v5 + 3);
    uint64_t v27 = v25 >> 1;
  }

  *((void *)v5 + 2) = v28;
  unint64_t v29 = &v5[16 * v26];
  *((void *)v29 + 4) = v4;
  *((void *)v29 + 5) = 0x800000018906CDD0LL;
  unint64_t v30 = v26 + 2;
  if (v27 < v30) {
    uint64_t v5 = sub_189056E74((char *)(v25 > 1), v30, 1, v5);
  }
  *((void *)v5 + 2) = v30;
  __int128 v31 = &v5[16 * v28];
  *((void *)v31 + 4) = 0x203A3A2A292D2827LL;
  *((void *)v31 + 5) = 0xEF276772613E2D3ALL;
  uint64_t v78 = v5;
  __int128 v32 = (char *)v2;
  if (v6 == 1)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      __int128 v32 = sub_1890573A8(0LL, *(void *)(v2 + 16) + 1LL, 1, (char *)v2);
    }
    __int128 v33 = v32;
    __int128 v34 = *((void *)v32 + 2);
    __int128 v35 = v33;
    __int128 v36 = *((void *)v33 + 3);
    __int128 v37 = v34 + 1;
    if (v34 >= v36 >> 1) {
      __int128 v35 = sub_1890573A8((char *)(v36 > 1), v34 + 1, 1, v35);
    }
    __int128 v38 = sub_1890099B4();
    *((void *)v35 + 2) = v37;
    __int128 v39 = &v35[16 * v34];
    __int128 v32 = v35;
    *((void *)v39 + 4) = &type metadata for HelpCommand;
    *((void *)v39 + 5) = v38;
    goto LABEL_29;
  }

  __int128 v37 = *(void *)(v2 + 16);
  if (v37)
  {
LABEL_29:
    uint64_t v82 = v32;
    *(void *)&v84[0] = v3;
    swift_bridgeObjectRetain();
    sub_188FFF34C(0LL, v37, 0);
    __int128 v40 = 0LL;
    __int128 v41 = *(void *)&v84[0];
    do
    {
      v86[0] = *(_OWORD *)&v32[16 * v40 + 32];
      sub_18900DA3C((uint64_t *)v86, (uint64_t *)v91);
      __int128 v42 = v91[0];
      *(void *)&v84[0] = v41;
      uint64_t v44 = *(void *)(v41 + 16);
      uint64_t v43 = *(void *)(v41 + 24);
      if (v44 >= v43 >> 1)
      {
        sub_188FFF34C((char *)(v43 > 1), v44 + 1, 1);
        __int128 v32 = v82;
        __int128 v41 = *(void *)&v84[0];
      }

      ++v40;
      *(void *)(v41 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v44 + 1;
      *(_OWORD *)(v41 + 16 * v44 + 32) = v42;
    }

    while (v37 != v40);
    swift_bridgeObjectRelease();
    goto LABEL_34;
  }

  __int128 v41 = MEMORY[0x18961AFE8];
LABEL_34:
  uint64_t v82 = v32;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v45 = sub_18900F4E0((uint64_t)v32);
  *(void *)&int v83 = v1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&v91[0] = 0LL;
  *((void *)&v91[0] + 1) = 0xE000000000000000LL;
  sub_189067C28();
  sub_18906788C();
  *(void *)&v86[0] = v41;
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C760FE8);
  sub_189009B3C((unint64_t *)&qword_18C760FF0, &qword_18C760FE8, MEMORY[0x189618458]);
  sub_1890677C0();
  swift_bridgeObjectRelease();
  sub_18906788C();
  swift_bridgeObjectRelease();
  sub_18906788C();
  *(void *)&v86[0] = v45;
  sub_1890677C0();
  swift_bridgeObjectRelease();
  sub_18906788C();
  swift_bridgeObjectRelease();
  uint64_t v46 = sub_18906788C();
  __int128 v48 = *((void *)&v91[0] + 1);
  __int128 v47 = *(void *)&v91[0];
  *(void *)&v91[0] = 10LL;
  *((void *)&v91[0] + 1) = 0xE100000000000000LL;
  MEMORY[0x1895F8858](v46);
  v76 = v91;
  swift_bridgeObjectRetain();
  __int128 v49 = sub_1890266AC(0x7FFFFFFFFFFFFFFFLL, 0, sub_189009954, (uint64_t)v75, v47, v48);
  MEMORY[0x1895DC998](32LL, 0xE100000000000000LL, 4LL);
  __int128 v50 = sub_18900F144((uint64_t)v49);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&v91[0] = v50;
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C760FF8);
  sub_189009B3C(&qword_18C761000, &qword_18C760FF8, MEMORY[0x189618470]);
  sub_189009970();
  *(void *)&int v83 = sub_18906797C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = v78;
LABEL_35:
  *(void *)&v91[0] = 0LL;
  *((void *)&v91[0] + 1) = 0xE000000000000000LL;
  sub_189067C28();
  sub_18906788C();
  swift_bridgeObjectRelease();
  sub_18906788C();
  *(void *)&v86[0] = v5;
  swift_bridgeObjectRetain();
  __int128 v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_18C760FE8);
  v79 = sub_189009B3C((unint64_t *)&qword_18C760FF0, &qword_18C760FE8, MEMORY[0x189618458]);
  v80 = v51;
  __int128 v52 = sub_1890677C0();
  __int128 v53 = v5;
  __int128 v55 = v54;
  __int128 v56 = swift_bridgeObjectRelease();
  *(void *)&v86[0] = 10LL;
  *((void *)&v86[0] + 1) = 0xE100000000000000LL;
  MEMORY[0x1895F8858](v56);
  v76 = v86;
  swift_bridgeObjectRetain();
  __int128 v57 = sub_1890266AC(0x7FFFFFFFFFFFFFFFLL, 0, sub_189009B90, (uint64_t)v75, v52, v55);
  MEMORY[0x1895DC998](32LL, 0xE100000000000000LL, 8LL);
  __int128 v58 = sub_18900F144((uint64_t)v57);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&v86[0] = v58;
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C760FF8);
  sub_189009B3C(&qword_18C761000, &qword_18C760FF8, MEMORY[0x189618470]);
  sub_189009970();
  sub_18906797C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_18906788C();
  swift_bridgeObjectRelease();
  sub_18906788C();
  sub_18906788C();
  swift_bridgeObjectRelease();
  sub_18906788C();
  __int128 v59 = *((void *)&v91[0] + 1);
  __int128 v60 = *(void *)&v91[0];
  __int128 v61 = *((void *)v82 + 2);
  if (v61)
  {
    v77 = v91[0];
    uint64_t v78 = v53;
    *(void *)&v91[0] = MEMORY[0x18961AFE8];
    swift_bridgeObjectRetain();
    sub_188FFF34C(0LL, v61, 0);
    __int128 v62 = 0LL;
    __int128 v63 = *(void *)&v91[0];
    __int128 v64 = v81;
    do
    {
      int v83 = *(_OWORD *)&v82[16 * v62 + 32];
      swift_bridgeObjectRetain();
      __int128 v65 = (char *)v64;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        __int128 v65 = sub_1890573A8(0LL, *(void *)(v64 + 16) + 1LL, 1, (char *)v64);
      }
      __int128 v67 = *((void *)v65 + 2);
      __int128 v66 = *((void *)v65 + 3);
      if (v67 >= v66 >> 1) {
        __int128 v65 = sub_1890573A8((char *)(v66 > 1), v67 + 1, 1, v65);
      }
      *((void *)v65 + 2) = v67 + 1;
      *(_OWORD *)&v65[16 * v67 + 32] = v83;
      __int128 v68 = sub_18900CEF0(v65);
      __int128 v70 = v69;
      swift_bridgeObjectRelease();
      *(void *)&v91[0] = v63;
      uint64_t v72 = *(void *)(v63 + 16);
      uint64_t v71 = *(void *)(v63 + 24);
      if (v72 >= v71 >> 1)
      {
        sub_188FFF34C((char *)(v71 > 1), v72 + 1, 1);
        __int128 v63 = *(void *)&v91[0];
      }

      ++v62;
      *(void *)(v63 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v72 + 1;
      v73 = v63 + 16 * v72;
      *(void *)(v73 + 32) = v68;
      *(void *)(v73 + 40) = v70;
    }

    while (v61 != v62);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    __int128 v59 = *((void *)&v77 + 1);
    __int128 v60 = v77;
  }

  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __int128 v63 = MEMORY[0x18961AFE8];
  }

  *(void *)&v91[0] = v63;
  sub_1890677C0();
  swift_bridgeObjectRelease();
  *(void *)&v91[0] = v60;
  *((void *)&v91[0] + 1) = v59;
  swift_bridgeObjectRetain();
  sub_18906788C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return *(void *)&v91[0];
}

uint64_t sub_18900DA3C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v20 = 39LL;
  unint64_t v21 = 0xE100000000000000LL;
  (*(void (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
  sub_18906788C();
  swift_bridgeObjectRelease();
  sub_18906788C();
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v4 + 16))(v22, v3, v4);
  swift_bridgeObjectRetain();
  sub_189000568((uint64_t)v22);
  sub_188FFCC74();
  uint64_t v18 = sub_189067B20();
  uint64_t v19 = v5;
  uint64_t v16 = 0x5D5D5C5B5C5C5C5BLL;
  unint64_t v17 = 0xE800000000000000LL;
  uint64_t v14 = 807689308LL;
  unint64_t v15 = 0xE400000000000000LL;
  sub_189067B20();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_18906788C();
  swift_bridgeObjectRelease();
  sub_18906788C();
  uint64_t v20 = 10LL;
  unint64_t v21 = 0xE100000000000000LL;
  uint64_t v13 = &v20;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1890266AC(0x7FFFFFFFFFFFFFFFLL, 0, sub_189009B90, (uint64_t)v12, 39LL, 0xE100000000000000LL);
  MEMORY[0x1895DC998](32LL, 0xE100000000000000LL, 12LL);
  uint64_t v7 = sub_18900F144((uint64_t)v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v20 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C760FF8);
  sub_189009B3C(&qword_18C761000, &qword_18C760FF8, MEMORY[0x189618470]);
  sub_189009970();
  uint64_t v8 = sub_18906797C();
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v8;
  a2[1] = v10;
  return result;
}

uint64_t sub_18900DCF8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  sub_189067C28();
  swift_bridgeObjectRelease();
  uint64_t v14 = 40LL;
  unint64_t v15 = 0xE100000000000000LL;
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(v3 + 24);
  v4(v2, v3);
  sub_18906788C();
  swift_bridgeObjectRelease();
  sub_18906788C();
  sub_18906788C();
  sub_18906788C();
  v4(v2, v3);
  sub_18906788C();
  swift_bridgeObjectRelease();
  sub_18906788C();
  uint64_t v14 = 10LL;
  unint64_t v15 = 0xE100000000000000LL;
  uint64_t v13 = &v14;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1890266AC(0x7FFFFFFFFFFFFFFFLL, 0, sub_189009B90, (uint64_t)v12, 40LL, 0xE100000000000000LL);
  MEMORY[0x1895DC998](32LL, 0xE100000000000000LL, 12LL);
  uint64_t v6 = sub_18900F144((uint64_t)v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C760FF8);
  sub_189009B3C(&qword_18C761000, &qword_18C760FF8, MEMORY[0x189618470]);
  sub_189009970();
  uint64_t v7 = sub_18906797C();
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v7;
  a2[1] = v9;
  return result;
}

uint64_t sub_18900DF1C()
{
  __int128 v1 = v0[9];
  __int128 v54 = v0[8];
  __int128 v55 = v1;
  __int128 v2 = v0[11];
  __int128 v56 = v0[10];
  __int128 v57 = v2;
  __int128 v3 = v0[5];
  *(_OWORD *)__int128 v52 = v0[4];
  *(_OWORD *)&v52[16] = v3;
  __int128 v4 = v0[7];
  *(_OWORD *)&v52[32] = v0[6];
  __int128 v53 = v4;
  __int128 v5 = v0[1];
  __int128 v48 = *v0;
  __int128 v49 = v5;
  __int128 v6 = v0[3];
  __int128 v50 = v0[2];
  __int128 v51 = v6;
  char v7 = BYTE8(v48);
  uint64_t v8 = *((void *)&v6 + 1);
  unint64_t v9 = *(void *)v52;
  *(_OWORD *)&v58[3] = *(_OWORD *)&v52[8];
  __int128 v59 = *(_OWORD *)&v52[24];
  if (v52[40]) {
    return 0LL;
  }
  sub_18900F634((__n128 *)((char *)&v55 + 8), (__n128 *)v58);
  sub_18900F634((__n128 *)v58, &v61);
  if (v62 == 1)
  {
    uint64_t v46 = 58LL;
    unint64_t v47 = 0xE100000000000000LL;
    __int128 v60 = v59;
    uint64_t v11 = v59 & 0xFFFFFFFFFFFFLL;
    if ((*((void *)&v59 + 1) & 0x2000000000000000LL) != 0) {
      uint64_t v11 = HIBYTE(*((void *)&v59 + 1)) & 0xFLL;
    }
    if (v11)
    {
      v39[0] = v59;
      swift_bridgeObjectRetain();
    }

    else
    {
      sub_188FFCFF4((uint64_t)&v48);
      sub_18900F670((uint64_t)&v60);
      sub_189049A90((uint64_t *)&v48, (unint64_t *)v39);
      sub_18900F698((uint64_t)&v60);
      sub_1890099F8((uint64_t)&v48);
    }

    sub_18906788C();
    swift_bridgeObjectRelease();
    sub_18906788C();
    v39[8] = v54;
    v39[9] = v55;
    v39[10] = v56;
    v39[11] = v57;
    v39[4] = *(_OWORD *)v52;
    v39[5] = *(_OWORD *)&v52[16];
    v39[6] = *(_OWORD *)&v52[32];
    v39[7] = v53;
    v39[0] = v48;
    v39[1] = v49;
    v39[2] = v50;
    v39[3] = v51;
    sub_18900E650();
    sub_18906788C();
    swift_bridgeObjectRelease();
  }

  unint64_t v12 = v48;
  else {
    uint64_t v13 = MEMORY[0x18961AFE8];
  }
  uint64_t v14 = *(void *)(v13 + 16);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v14) {
    goto LABEL_56;
  }
  if (v14 == 1)
  {
    if (v12 >= 2 && (v7 & 2) != 0)
    {
      uint64_t v15 = 42LL;
      if ((BYTE1(v55) & 0xFD) != 0) {
        uint64_t v15 = 0LL;
      }
      unint64_t v16 = 0xE000000000000000LL;
      if ((BYTE1(v55) & 0xFD) == 0) {
        unint64_t v16 = 0xE100000000000000LL;
      }
      *(void *)&v39[0] = v15;
      *((void *)&v39[0] + 1) = v16;
    }

    else
    {
      *(void *)&v39[0] = 0LL;
      *((void *)&v39[0] + 1) = 0xE000000000000000LL;
      if (v12 < 2)
      {
        unint64_t v12 = MEMORY[0x18961AFE8];
LABEL_41:
        if (*(void *)(v12 + 16))
        {
          uint64_t v29 = *(void *)(v12 + 32);
          uint64_t v30 = *(void *)(v12 + 40);
          unsigned __int8 v31 = *(_BYTE *)(v12 + 48);
          sub_188FFCF80(v29, v30, v31);
          swift_bridgeObjectRelease();
          sub_1890520B0(v29, v30, v31);
          sub_188FFCF98(v29, v30, v31);
          sub_18906788C();
          swift_bridgeObjectRelease();
          uint64_t v32 = HIBYTE(v9) & 0xF;
          if ((v9 & 0x2000000000000000LL) == 0) {
            uint64_t v32 = v8 & 0xFFFFFFFFFFFFLL;
          }
          if (v32) {
            goto LABEL_54;
          }
          goto LABEL_55;
        }

        __break(1u);
        return result;
      }
    }

    uint64_t result = swift_bridgeObjectRetain();
    goto LABEL_41;
  }

  uint64_t v38 = v8;
  uint64_t v17 = MEMORY[0x18961AFE8];
  unint64_t v18 = MEMORY[0x18961AFE8];
  if (v12 >= 2)
  {
    swift_bridgeObjectRetain();
    unint64_t v18 = v12;
  }

  int64_t v19 = *(void *)(v18 + 16);
  if (!v19)
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = MEMORY[0x18961AFE8];
    goto LABEL_47;
  }

  unint64_t v37 = v9;
  uint64_t v46 = v17;
  sub_188FFF34C(0LL, v19, 0);
  uint64_t v20 = v46;
  unint64_t v21 = (unsigned __int8 *)(v18 + 48);
  do
  {
    uint64_t v22 = *((void *)v21 - 2);
    uint64_t v23 = *((void *)v21 - 1);
    unsigned int v24 = *v21;
    if (v24 >> 6)
    {
      if (v24 >> 6 == 1)
      {
        *(void *)&v39[0] = 0LL;
        *((void *)&v39[0] + 1) = 0xE000000000000000LL;
        swift_bridgeObjectRetain();
        sub_18906788C();
        sub_1890677B4();
        goto LABEL_34;
      }

      *(void *)&v39[0] = 45LL;
      unint64_t v25 = 0xE100000000000000LL;
    }

    else
    {
      *(void *)&v39[0] = 11565LL;
      unint64_t v25 = 0xE200000000000000LL;
    }

    *((void *)&v39[0] + 1) = v25;
    swift_bridgeObjectRetain();
    sub_18906788C();
LABEL_34:
    sub_188FFCF98(v22, v23, v24);
    __int128 v26 = v39[0];
    uint64_t v46 = v20;
    unint64_t v28 = *(void *)(v20 + 16);
    unint64_t v27 = *(void *)(v20 + 24);
    if (v28 >= v27 >> 1)
    {
      sub_188FFF34C((char *)(v27 > 1), v28 + 1, 1);
      uint64_t v20 = v46;
    }

    v21 += 24;
    *(void *)(v20 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v28 + 1;
    *(_OWORD *)(v20 + 16 * v28 + 32) = v26;
    --v19;
  }

  while (v19);
  swift_bridgeObjectRelease();
  unint64_t v9 = v37;
LABEL_47:
  uint64_t v8 = v38;
  if (v12 >= 2 && (v7 & 2) != 0 && (BYTE1(v55) & 0xFD) == 0)
  {
    unint64_t v33 = 0xE100000000000000LL;
    uint64_t v34 = 42LL;
  }

  else
  {
    *(void *)&v39[0] = 40LL;
    *((void *)&v39[0] + 1) = 0xE100000000000000LL;
    uint64_t v46 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C760FE8);
    sub_189009B3C((unint64_t *)&qword_18C760FF0, &qword_18C760FE8, MEMORY[0x189618458]);
    sub_1890677C0();
    sub_18906788C();
    swift_bridgeObjectRelease();
    sub_18906788C();
    unint64_t v33 = *((void *)&v39[0] + 1);
    uint64_t v34 = *(void *)&v39[0];
  }

  *(void *)&v39[0] = v34;
  *((void *)&v39[0] + 1) = v33;
  sub_18906788C();
  uint64_t v46 = v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C760FE8);
  sub_189009B3C((unint64_t *)&qword_18C760FF0, &qword_18C760FE8, MEMORY[0x189618458]);
  sub_1890677C0();
  swift_bridgeObjectRelease();
  sub_18906788C();
  swift_bridgeObjectRelease();
  sub_18906788C();
  uint64_t v35 = HIBYTE(v9) & 0xF;
  if ((v9 & 0x2000000000000000LL) == 0) {
    uint64_t v35 = v38 & 0xFFFFFFFFFFFFLL;
  }
  if (v35)
  {
LABEL_54:
    uint64_t v46 = 91LL;
    unint64_t v47 = 0xE100000000000000LL;
    uint64_t v44 = v8;
    unint64_t v45 = v9;
    uint64_t v42 = 39LL;
    unint64_t v43 = 0xE100000000000000LL;
    uint64_t v40 = 0x2722272227LL;
    unint64_t v41 = 0xE500000000000000LL;
    sub_188FFCFF4((uint64_t)&v48);
    sub_188FFCC74();
    uint64_t v44 = sub_189067B20();
    unint64_t v45 = v36;
    uint64_t v42 = 0x5D5D5C5B5C5C5C5BLL;
    unint64_t v43 = 0xE800000000000000LL;
    uint64_t v40 = 807689308LL;
    unint64_t v41 = 0xE400000000000000LL;
    sub_189067B20();
    swift_bridgeObjectRelease();
    sub_18906788C();
    swift_bridgeObjectRelease();
    sub_18906788C();
    sub_1890099F8((uint64_t)&v48);
  }

LABEL_55:
  sub_18906788C();
  swift_bridgeObjectRelease();
LABEL_56:
  *(void *)&v39[0] = 39LL;
  *((void *)&v39[0] + 1) = 0xE100000000000000LL;
  sub_18906788C();
  swift_bridgeObjectRelease();
  sub_18906788C();
  swift_bridgeObjectRelease();
  sub_18906788C();
  return *(void *)&v39[0];
}

  __int128 v6 = v7;
LABEL_56:
  unint64_t v25 = (unsigned __int128)((v13 - v4) * (__int128)0x2AAAAAAAAAAAAAABLL) >> 64;
  __int128 v26 = 24 * ((v25 >> 2) + ((unint64_t)v25 >> 63));
  if (v6 != v4 || v6 >= &v4[v26]) {
    memmove(v6, v4, v26);
  }
  return 1LL;
}

void sub_18900E650()
{
  __asm { BR              X10 }

uint64_t sub_18900E6C8()
{
  return 40LL;
}

uint64_t sub_18900EC10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = swift_bridgeObjectRetain() + 40;
    for (uint64_t i = v3 - 1; ; --i)
    {
      (*(void (**)(_BYTE *__return_ptr))(*(void *)v4 + 16LL))(v9);
      v37[6] = v12;
      v37[7] = v13;
      uint64_t v38 = v14;
      v37[2] = v10;
      v37[3] = *(_OWORD *)v11;
      v37[4] = *(_OWORD *)&v11[16];
      v37[5] = *(_OWORD *)&v11[32];
      v37[0] = *(_OWORD *)v9;
      v37[1] = *(_OWORD *)&v9[16];
      __int128 v6 = *(_OWORD *)&v11[32];
      swift_bridgeObjectRetain();
      sub_189000568((uint64_t)v37);
      swift_bridgeObjectRelease();
      uint64_t v7 = HIBYTE(*((void *)&v6 + 1)) & 0xFLL;
      if ((*((void *)&v6 + 1) & 0x2000000000000000LL) == 0) {
        uint64_t v7 = v6 & 0xFFFFFFFFFFFFLL;
      }
      if (v7)
      {
        swift_bridgeObjectRelease();
        v22[0] = 0xD000000000000011LL;
        v22[1] = 0x800000018906CFF0LL;
        __int128 v23 = xmmword_1890687B0;
        uint64_t v24 = 0LL;
        uint64_t v25 = 0LL;
        char v26 = 0;
        sub_189048BAC( MEMORY[0x18961AFE8],  1LL,  v22,  0LL,  0LL,  0LL,  0xE000000000000000LL,  MEMORY[0x18961AFE8],  (uint64_t)&v27,  0);
        *(void *)unint64_t v9 = &unk_18A3390F0;
        *(_OWORD *)&v9[8] = v27;
        *(void *)&v9[24] = v28;
        __int128 v10 = v29;
        v11[0] = v30;
        *(_OWORD *)&v11[8] = v31;
        *(_OWORD *)&v11[24] = v32;
        *(void *)&v11[40] = v33;
        *(void *)&__int128 v12 = v34;
        BYTE8(v12) = v35;
        __int128 v13 = v36;
        uint64_t v14 = 0LL;
        uint64_t v15 = 0LL;
        __int16 v16 = 4;
        uint64_t v17 = sub_18901AF30;
        uint64_t v18 = 0LL;
        char v19 = 0;
        uint64_t v20 = nullsub_1;
        uint64_t v21 = 0LL;
        nullsub_1(v9);
        return sub_18900F6C0((uint64_t)v9, a2);
      }

      if (!i) {
        break;
      }
      v4 += 16LL;
    }

    swift_bridgeObjectRelease();
  }

  sub_18900F870(v9);
  return sub_18900F6C0((uint64_t)v9, a2);
}

uint64_t sub_18900EE00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = sub_18900EF44(0, a1);
  if (*(void *)(v3 + 16))
  {
    v25[0] = 0xD000000000000016LL;
    v25[1] = 0x800000018906CFD0LL;
    __int128 v26 = xmmword_1890687B0;
    uint64_t v27 = 0LL;
    uint64_t v28 = 0LL;
    char v29 = 0;
    sub_189048BAC( MEMORY[0x18961AFE8],  1LL,  v25,  0LL,  0LL,  0LL,  0xE000000000000000LL,  MEMORY[0x18961AFE8],  (uint64_t)&v30,  0);
    uint64_t v5 = v3;
    __int128 v6 = v30;
    uint64_t v7 = v31;
    __int128 v8 = v32;
    char v9 = v33;
    __int128 v10 = v34;
    __int128 v11 = v35;
    uint64_t v12 = v36;
    uint64_t v13 = v37;
    char v14 = v38;
    uint64_t v15 = v39;
    uint64_t v16 = v40;
    uint64_t v17 = 0LL;
    uint64_t v18 = 0LL;
    __int16 v19 = 4;
    uint64_t v20 = nullsub_1;
    uint64_t v21 = 0LL;
    char v22 = 0;
    __int128 v23 = nullsub_1;
    uint64_t v24 = 0LL;
    nullsub_1(&v5);
  }

  else
  {
    swift_bridgeObjectRelease();
    sub_18900F870(&v5);
  }

  return sub_18900F6C0((uint64_t)&v5, a2);
}

uint64_t sub_18900EF44(char a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  if (!v3) {
    goto LABEL_11;
  }
  unint64_t v5 = v3 - 1;
  for (uint64_t i = a2 + 16 * v3 + 24; ; i -= 16LL)
  {
    (*(void (**)(_OWORD *__return_ptr))(*(void *)i + 16LL))(v13);
    v15[5] = v13[5];
    v15[6] = v13[6];
    uint64_t v15[7] = v13[7];
    v15[1] = v13[1];
    v15[2] = v13[2];
    v15[3] = v13[3];
    v15[4] = v13[4];
    uint64_t v16 = v14;
    v15[0] = v13[0];
    uint64_t result = sub_189000568((uint64_t)v15);
    if (v16) {
      break;
    }
    if (!v5) {
      goto LABEL_11;
    }
    --v5;
  }

  if ((uint64_t)(v5 + 1) < 1)
  {
    __break(1u);
    goto LABEL_14;
  }

  if (v5 >= *(void *)(a2 + 16))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }

  if (!*(void *)(i - 8))
  {
LABEL_11:
    *(void *)&v15[0] = MEMORY[0x18961AFF8];
    uint64_t v10 = sub_188FFD338((uint64_t)&unk_18A339030);
    swift_bridgeObjectRelease();
    swift_arrayDestroy();
    *(void *)&v15[0] = v10;
    LOBYTE(v13[0]) = a1;
    char v9 = (unsigned __int8 *)v13;
    goto LABEL_12;
  }

  (*(void (**)(_OWORD *__return_ptr))(*(void *)i + 16LL))(v15);
  uint64_t v8 = v16;
  swift_bridgeObjectRetain();
  uint64_t result = sub_189000568((uint64_t)v15);
  if (v8)
  {
    *(void *)&v13[0] = v8;
    char v12 = a1;
    char v9 = (unsigned __int8 *)&v12;
LABEL_12:
    __int128 v11 = sub_189016C58(v9);
    swift_bridgeObjectRelease();
    return (uint64_t)v11;
  }

LABEL_15:
  __break(1u);
  return result;
}

        if (v7 == 1)
        {
          char v29 = 0LL;
          __int128 v32 = 0xE000000000000000LL;
          sub_18906788C();
          sub_1890677B4();
          goto LABEL_19;
        }

        char v29 = 45LL;
        uint64_t v17 = 0xE100000000000000LL;
LABEL_18:
        __int128 v32 = v17;
        sub_18906788C();
LABEL_19:
        sub_18901EE2C(v29, v32, v15, v16);
        uint64_t v20 = v19;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v20 < a5) {
          break;
        }
        uint64_t result = sub_188FFCF98(v13, v12, v14);
        ++v6;
        if (v26 + v6 == 1) {
          return v9;
        }
      }

      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0) {
        uint64_t result = (uint64_t)sub_188FFF368(0LL, *(void *)(v9 + 16) + 1LL, 1);
      }
      char v22 = *(void *)(v9 + 16);
      uint64_t v21 = *(void *)(v9 + 24);
      if (v22 >= v21 >> 1) {
        uint64_t result = (uint64_t)sub_188FFF368((char *)(v21 > 1), v22 + 1, 1);
      }
      *(void *)(v9 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v22 + 1;
      __int128 v23 = v9 + 24 * v22;
      *(void *)(v23 + 32) = v13;
      *(void *)(v23 + 40) = v12;
      *(_BYTE *)(v23 + 48) = v14;
      uint64_t v8 = v24;
      unint64_t v5 = v25;
      if (!(v26 + v6)) {
        return v9;
      }
    }
  }

  return MEMORY[0x18961AFE8];
}

    uint64_t result = sub_189067D3C();
    __break(1u);
  }

  return result;
}

  if (v5 == v3 && v6 == v2) {
    uint64_t v8 = 1;
  }
  else {
    uint64_t v8 = sub_189067F10();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void *sub_18900F0EC( void *(*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) != 0) {
    return 0LL;
  }
  uint64_t v7 = a3;
  uint64_t result = a1(&v6, &v7);
  if (!v4) {
    return (void *)v6;
  }
  return result;
}

uint64_t sub_18900F144(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x18961AFE8];
  if (v1)
  {
    uint64_t v31 = MEMORY[0x18961AFE8];
    sub_188FFF3B0(0LL, v1, 0);
    uint64_t v2 = v31;
    uint64_t v4 = (uint64_t *)(a1 + 56);
    do
    {
      uint64_t v5 = *(v4 - 3);
      uint64_t v6 = *(v4 - 2);
      uint64_t v8 = *(v4 - 1);
      uint64_t v7 = *v4;
      swift_bridgeObjectRetain();
      if ((v6 ^ (unint64_t)v5) >= 0x4000)
      {
        sub_189067AE4();
        uint64_t v28 = v2;
        sub_189067844();
        swift_bridgeObjectRetain();
        uint64_t v29 = MEMORY[0x1895DC8B4](15LL, 7LL, 0LL, 0xE000000000000000LL);
        uint64_t v30 = v9;
        sub_189067880();
        uint64_t v10 = MEMORY[0x1895DCB9C](v29, v30);
        uint64_t v26 = v12;
        uint64_t v27 = v11;
        uint64_t v14 = v13;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        uint64_t v15 = MEMORY[0x1895DC8B4](v10, v27, v26, v14);
        uint64_t v17 = v16;
        swift_bridgeObjectRelease();
        sub_18900F5F0();
        sub_189067880();
        uint64_t v5 = MEMORY[0x1895DCB9C](v15, v17);
        uint64_t v6 = v18;
        uint64_t v8 = v19;
        uint64_t v21 = v20;
        swift_bridgeObjectRelease_n();
        uint64_t v7 = v21;
        uint64_t v2 = v28;
      }

      unint64_t v23 = *(void *)(v2 + 16);
      unint64_t v22 = *(void *)(v2 + 24);
      if (v23 >= v22 >> 1) {
        sub_188FFF3B0((char *)(v22 > 1), v23 + 1, 1);
      }
      *(void *)(v2 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v23 + 1;
      uint64_t v24 = (void *)(v2 + 32 * v23);
      v24[4] = v5;
      v24[5] = v6;
      v24[6] = v8;
      v24[7] = v7;
      v4 += 4;
      --v1;
    }

    while (v1);
  }

  return v2;
}

char *sub_18900F340(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (char *)MEMORY[0x18961AFE8];
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v3 = v1 - 1;
  uint64_t v4 = (char *)MEMORY[0x18961AFE8];
  for (uint64_t i = 32LL; ; i += 192LL)
  {
    __int128 v6 = *(_OWORD *)(a1 + i + 144);
    v19[8] = *(_OWORD *)(a1 + i + 128);
    v19[9] = v6;
    __int128 v7 = *(_OWORD *)(a1 + i + 176);
    v19[10] = *(_OWORD *)(a1 + i + 160);
    v19[11] = v7;
    __int128 v8 = *(_OWORD *)(a1 + i + 80);
    v19[4] = *(_OWORD *)(a1 + i + 64);
    v19[5] = v8;
    __int128 v9 = *(_OWORD *)(a1 + i + 112);
    v19[6] = *(_OWORD *)(a1 + i + 96);
    v19[7] = v9;
    __int128 v10 = *(_OWORD *)(a1 + i + 16);
    v19[0] = *(_OWORD *)(a1 + i);
    v19[1] = v10;
    __int128 v11 = *(_OWORD *)(a1 + i + 48);
    uint64_t v19[2] = *(_OWORD *)(a1 + i + 32);
    v19[3] = v11;
    sub_188FFCFF4((uint64_t)v19);
    uint64_t v12 = sub_18900DF1C();
    uint64_t v14 = v13;
    sub_1890099F8((uint64_t)v19);
    if (v14)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v4 = sub_189056E74(0LL, *((void *)v4 + 2) + 1LL, 1, v4);
      }
      unint64_t v16 = *((void *)v4 + 2);
      unint64_t v15 = *((void *)v4 + 3);
      if (v16 >= v15 >> 1) {
        uint64_t v4 = sub_189056E74((char *)(v15 > 1), v16 + 1, 1, v4);
      }
      *((void *)v4 + 2) = v16 + 1;
      uint64_t v17 = &v4[16 * v16];
      *((void *)v17 + 4) = v12;
      *((void *)v17 + 5) = v14;
    }

    if (!v3) {
      break;
    }
    --v3;
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_18900F4E0(uint64_t a1)
{
  uint64_t v2 = v1;
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x18961AFE8];
  if (v3)
  {
    uint64_t v15 = MEMORY[0x18961AFE8];
    sub_188FFF34C(0LL, v3, 0);
    uint64_t v4 = v15;
    for (uint64_t i = (__int128 *)(a1 + 32); ; ++i)
    {
      __int128 v13 = *i;
      sub_18900DCF8((uint64_t *)&v13, v14);
      if (v2) {
        break;
      }
      uint64_t v2 = 0LL;
      uint64_t v7 = v14[0];
      uint64_t v8 = v14[1];
      uint64_t v15 = v4;
      unint64_t v10 = *(void *)(v4 + 16);
      unint64_t v9 = *(void *)(v4 + 24);
      if (v10 >= v9 >> 1)
      {
        sub_188FFF34C((char *)(v9 > 1), v10 + 1, 1);
        uint64_t v4 = v15;
      }

      *(void *)(v4 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v10 + 1;
      uint64_t v11 = v4 + 16 * v10;
      *(void *)(v11 + 32) = v7;
      *(void *)(v11 + 40) = v8;
      if (!--v3) {
        return v4;
      }
    }

    swift_release();
  }

  return v4;
}

unint64_t sub_18900F5F0()
{
  unint64_t result = qword_18C761050;
  if (!qword_18C761050)
  {
    unint64_t result = MEMORY[0x1895DD3F4](MEMORY[0x189618C60], MEMORY[0x189618C50]);
    atomic_store(result, (unint64_t *)&qword_18C761050);
  }

  return result;
}

__n128 *sub_18900F634(__n128 *a1, __n128 *a2)
{
  return a2;
}

uint64_t sub_18900F670(uint64_t a1)
{
  return a1;
}

uint64_t sub_18900F698(uint64_t a1)
{
  return a1;
}

uint64_t sub_18900F6C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_18C761058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_18900F708(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 32);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

uint64_t sub_18900F720(uint64_t a1)
{
  return a1;
}

unint64_t sub_18900F788( unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  if (a5)
  {
    sub_189009AE4(result);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_189009AF4(a17, a18, a19);
    sub_189009B34();
    return swift_release();
  }

  return result;
}

double sub_18900F870(_OWORD *a1)
{
  double result = 0.0;
  a1[10] = 0u;
  a1[11] = 0u;
  a1[8] = 0u;
  a1[9] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_18900F890()
{
  uint64_t v1 = sub_1890677F0();
  MEMORY[0x1895F8858](v1);
  uint64_t v28 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v3 = sub_1890676B8();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1895F8858](v3);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  MEMORY[0x1895F8858](v5);
  unint64_t v9 = (char *)&v28 - v8;
  uint64_t v10 = *v0;
  uint64_t v30 = v0[1];
  uint64_t v36 = v0[2];
  uint64_t v37 = v10;
  uint64_t v32 = v0[3];
  uint64_t v35 = v0[4];
  uint64_t v29 = v0[5];
  uint64_t v11 = v0[6];
  uint64_t v12 = v0[7];
  uint64_t v13 = v0[9];
  uint64_t v33 = v0[8];
  uint64_t v34 = v11;
  uint64_t v14 = v0[10];
  uint64_t v31 = v0[11];
  sub_1890676F4();
  swift_allocObject();
  uint64_t v15 = sub_1890676E8();
  sub_1890676AC();
  sub_1890676D0();
  sub_1890676A0();
  unint64_t v16 = (void (*)(void *, void))sub_1890676C4();
  sub_189010274(v9, (uint64_t)v7);
  uint64_t v17 = *(void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v18 = v29;
  v17(v7, v3);
  uint64_t v19 = v9;
  uint64_t v20 = v30;
  v17(v19, v3);
  v16(v38, 0LL);
  v38[0] = v37;
  v38[1] = v20;
  v38[2] = v36;
  v38[3] = v32;
  v38[4] = v35;
  v38[5] = v18;
  v38[6] = v34;
  v38[7] = v12;
  v38[8] = v33;
  v38[9] = v13;
  v38[10] = v14;
  v38[11] = v31;
  sub_189010494();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v37 = v15;
  uint64_t v21 = sub_1890676DC();
  unint64_t v23 = v22;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1890677E4();
  uint64_t v24 = sub_1890677D8();
  if (v25)
  {
    uint64_t v26 = v24;
    sub_1890104D8(v21, v23);
    swift_release();
  }

  else
  {
    sub_1890104D8(v21, v23);
    swift_release();
    return 0LL;
  }

  return v26;
}

char *sub_18900FBB8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (char *)MEMORY[0x18961AFE8];
  }
  uint64_t v2 = (uint64_t *)(swift_bridgeObjectRetain() + 56);
  uint64_t v3 = (char *)MEMORY[0x18961AFE8];
  do
  {
    uint64_t v5 = *v2;
    if (*v2)
    {
      uint64_t v6 = *(v2 - 1);
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v3 = sub_189056E74(0LL, *((void *)v3 + 2) + 1LL, 1, v3);
      }
      unint64_t v8 = *((void *)v3 + 2);
      unint64_t v7 = *((void *)v3 + 3);
      if (v8 >= v7 >> 1) {
        uint64_t v3 = sub_189056E74((char *)(v7 > 1), v8 + 1, 1, v3);
      }
      *((void *)v3 + 2) = v8 + 1;
      uint64_t v4 = &v3[16 * v8];
      *((void *)v4 + 4) = v6;
      *((void *)v4 + 5) = v5;
    }

    v2 += 24;
    --v1;
  }

  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_18900FCB8(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x18961AFE8];
  if (!v1) {
    return MEMORY[0x18961AFE8];
  }
  uint64_t v45 = MEMORY[0x18961AFE8];
  sub_188FFF34C(0LL, v1, 0);
  uint64_t v4 = 0LL;
  uint64_t v5 = v45;
  uint64_t v6 = a1 + 32;
  uint64_t v32 = a1 + 32;
  do
  {
    unint64_t v7 = (_OWORD *)(v6 + 192 * v4);
    __int128 v8 = v7[9];
    __int128 v41 = v7[8];
    __int128 v42 = v8;
    __int128 v9 = v7[11];
    __int128 v43 = v7[10];
    __int128 v44 = v9;
    __int128 v10 = v7[5];
    __int128 v37 = v7[4];
    __int128 v38 = v10;
    __int128 v11 = v7[7];
    __int128 v39 = v7[6];
    __int128 v40 = v11;
    __int128 v12 = v7[1];
    v34[0] = *v7;
    v34[1] = v12;
    __int128 v13 = v7[3];
    __int128 v35 = v7[2];
    __int128 v36 = v13;
    unint64_t v15 = *((void *)&v38 + 1);
    uint64_t v14 = v39;
    unint64_t v16 = BYTE7(v39) & 0xF;
    if ((v39 & 0x2000000000000000LL) == 0) {
      unint64_t v16 = *((void *)&v38 + 1) & 0xFFFFFFFFFFFFLL;
    }
    if (v16)
    {
      swift_bridgeObjectRetain();
    }

    else
    {
      uint64_t v17 = (void *)v35;
      uint64_t v18 = v2;
      if (*(void *)&v34[0] >= 2uLL) {
        uint64_t v18 = swift_bridgeObjectRetain();
      }
      uint64_t v19 = *(void *)(v18 + 16);
      if (v19)
      {
        uint64_t v20 = v18 + 32;
        do
        {
          unsigned int v21 = *(unsigned __int8 *)(v20 + 16);
          if (v21 >> 6 != 1)
          {
            unint64_t v15 = *(void *)v20;
            uint64_t v14 = *(void *)(v20 + 8);
            sub_188FFCFF4((uint64_t)v34);
            sub_188FFCF80(v15, v14, v21);
            swift_bridgeObjectRelease();
            sub_1890099F8((uint64_t)v34);
            goto LABEL_20;
          }

          v20 += 24LL;
          --v19;
        }

        while (v19);
        unint64_t v15 = *(void *)(v18 + 32);
        uint64_t v22 = *(void *)(v18 + 40);
        unsigned int v23 = *(unsigned __int8 *)(v18 + 48);
        sub_188FFCFF4((uint64_t)v34);
        swift_bridgeObjectRetain();
        uint64_t v33 = v22;
        sub_188FFCF80(v15, v22, v23);
        swift_bridgeObjectRelease();
        if (v23 >> 6)
        {
          uint64_t v2 = MEMORY[0x18961AFE8];
          uint64_t v6 = v32;
          swift_bridgeObjectRelease();
          sub_1890099F8((uint64_t)v34);
          uint64_t v14 = v33;
        }

        else
        {
          swift_bridgeObjectRelease();
          sub_1890099F8((uint64_t)v34);
          uint64_t v6 = v32;
          uint64_t v14 = v33;
          uint64_t v2 = MEMORY[0x18961AFE8];
        }
      }

      else
      {
        sub_188FFCFF4((uint64_t)v34);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        if (v17[2])
        {
          uint64_t v24 = v17[4];
          unint64_t v25 = v17[5];
          swift_bridgeObjectRetain();
          unint64_t v15 = sub_188FFDD70(45LL, 0xE100000000000000LL, v24, v25);
          uint64_t v27 = v26;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1890099F8((uint64_t)v34);
          uint64_t v14 = v27;
        }

        else
        {
          swift_bridgeObjectRelease();
          sub_1890099F8((uint64_t)v34);
          uint64_t v14 = 0xE500000000000000LL;
          unint64_t v15 = 0x65756C6176LL;
        }
      }
    }

uint64_t sub_18900FF7C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x18961AFE8];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x18961AFE8];
    sub_188FFF34C(0LL, v1, 0);
    uint64_t v2 = v11;
    uint64_t v4 = (uint64_t *)(a1 + 96);
    do
    {
      uint64_t v6 = *(v4 - 1);
      uint64_t v5 = *v4;
      unint64_t v8 = *(void *)(v11 + 16);
      unint64_t v7 = *(void *)(v11 + 24);
      swift_bridgeObjectRetain();
      if (v8 >= v7 >> 1) {
        sub_188FFF34C((char *)(v7 > 1), v8 + 1, 1);
      }
      *(void *)(v11 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v8 + 1;
      uint64_t v9 = v11 + 16 * v8;
      *(void *)(v9 + 32) = v6;
      *(void *)(v9 + 40) = v5;
      v4 += 24;
      --v1;
    }

    while (v1);
  }

  return v2;
}

uint64_t sub_189010050(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x18961AFE8];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x18961AFE8];
    sub_188FFF34C(0LL, v1, 0);
    uint64_t v2 = v11;
    uint64_t v4 = (uint64_t *)(a1 + 112);
    do
    {
      uint64_t v6 = *(v4 - 1);
      uint64_t v5 = *v4;
      unint64_t v8 = *(void *)(v11 + 16);
      unint64_t v7 = *(void *)(v11 + 24);
      swift_bridgeObjectRetain();
      if (v8 >= v7 >> 1) {
        sub_188FFF34C((char *)(v7 > 1), v8 + 1, 1);
      }
      *(void *)(v11 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v8 + 1;
      uint64_t v9 = v11 + 16 * v8;
      *(void *)(v9 + 32) = v6;
      *(void *)(v9 + 40) = v5;
      v4 += 24;
      --v1;
    }

    while (v1);
  }

  return v2;
}

char *sub_189010124(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = (char *)MEMORY[0x18961AFE8];
  if (!v1) {
    return (char *)MEMORY[0x18961AFE8];
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = 32LL;
  uint64_t v5 = v2;
  while (1)
  {
    double result = *(char **)(a1 + v4);
    unint64_t v7 = (unint64_t)result >= 2 ? *(char **)(a1 + v4) : v2;
    uint64_t v8 = *((void *)v7 + 2);
    int64_t v9 = *((void *)v5 + 2);
    int64_t v10 = v9 + v8;
    if (__OFADD__(v9, v8)) {
      break;
    }
    sub_188FFD0E0((unint64_t)result);
    double result = (char *)swift_isUniquelyReferenced_nonNull_native();
    if ((_DWORD)result && v10 <= *((void *)v5 + 3) >> 1)
    {
      if (*((void *)v7 + 2)) {
        goto LABEL_17;
      }
    }

    else
    {
      if (v9 <= v10) {
        int64_t v11 = v9 + v8;
      }
      else {
        int64_t v11 = v9;
      }
      double result = sub_189057094(result, v11, 1, v5);
      uint64_t v5 = result;
      if (*((void *)v7 + 2))
      {
LABEL_17:
        if ((*((void *)v5 + 3) >> 1) - *((void *)v5 + 2) < v8) {
          goto LABEL_26;
        }
        double result = (char *)swift_arrayInitWithCopy();
        if (v8)
        {
          uint64_t v12 = *((void *)v5 + 2);
          BOOL v13 = __OFADD__(v12, v8);
          uint64_t v14 = v12 + v8;
          if (v13) {
            goto LABEL_27;
          }
          *((void *)v5 + 2) = v14;
        }

        goto LABEL_4;
      }
    }

    if (v8) {
      goto LABEL_25;
    }
LABEL_4:
    swift_bridgeObjectRelease();
    v4 += 192LL;
    if (!--v1)
    {
      swift_bridgeObjectRelease();
      return v5;
    }
  }

  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_189010274(char *a1, uint64_t a2)
{
  unint64_t v28 = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_18C761068);
  uint64_t v5 = MEMORY[0x1895F8858](v4);
  uint64_t v26 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  MEMORY[0x1895F8858](v5);
  uint64_t v8 = (char *)&v23 - v7;
  uint64_t v9 = sub_1890676B8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1895F8858](v9);
  BOOL v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  MEMORY[0x1895F8858](v11);
  unint64_t v15 = (char *)&v23 - v14;
  unint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v25 = v2;
  v16(v13, v2, v9);
  sub_18901051C(&qword_18C761070, MEMORY[0x189606070]);
  sub_189067B44();
  sub_18901051C(&qword_18C761078, MEMORY[0x189606068]);
  uint64_t v24 = a2;
  char v17 = sub_1890677CC() ^ 1;
  uint64_t v27 = v4;
  uint64_t v18 = &v8[*(int *)(v4 + 48)];
  *uint64_t v8 = v17 & 1;
  if ((v17 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    uint64_t v20 = v24;
    v16(v18, v24, v9);
    v16(v13, v20, v9);
    sub_189067B50();
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  }

  else
  {
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v19(v18, v15, v9);
  }

  unsigned int v21 = &v26[*(int *)(v27 + 48)];
  v19(v21, v18, v9);
  v19(v28, v21, v9);
  return v17 & 1;
}

unint64_t sub_189010494()
{
  unint64_t result = qword_18C761060;
  if (!qword_18C761060)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&protocol conformance descriptor for ToolInfoV0, &type metadata for ToolInfoV0);
    atomic_store(result, (unint64_t *)&qword_18C761060);
  }

  return result;
}

uint64_t sub_1890104D8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_18901051C(unint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v5 = sub_1890676B8();
    uint64_t result = MEMORY[0x1895DD3F4](a2, v5);
    atomic_store(result, a1);
  }

  return result;
}

uint64_t sub_18901055C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v3 = a1 + 16 * v1;
    uint64_t v4 = *(void *)(v3 + 16);
    uint64_t v5 = *(void *)(*(void *)(v3 + 24) + 8LL);
    v16[0] = 2;
    uint64_t v17 = sub_188FFB780(v4, v5, v16, 0LL, 0LL, 0LL);
    uint64_t v18 = v6;
    sub_18900EC10(a1, (uint64_t)v14);
    sub_189011B78((uint64_t)v14, (uint64_t)v15, &qword_18C761058);
    sub_189011B78((uint64_t)v15, (uint64_t)v16, &qword_18C761058);
    if (sub_18900F708((uint64_t)v16) != 1)
    {
      sub_189011B78((uint64_t)v15, (uint64_t)v13, &qword_18C761058);
      v12[8] = v13[8];
      v12[9] = v13[9];
      v12[10] = v13[10];
      v12[11] = v13[11];
      v12[4] = v13[4];
      v12[5] = v13[5];
      v12[6] = v13[6];
      v12[7] = v13[7];
      v12[0] = v13[0];
      v12[1] = v13[1];
      v12[2] = v13[2];
      v12[3] = v13[3];
      sub_189039748(v12);
      sub_18900F720((uint64_t)v15);
    }

    sub_18900EE00(a1, (uint64_t)v11);
    sub_189011B78((uint64_t)v11, (uint64_t)v12, &qword_18C761058);
    sub_189011B78((uint64_t)v12, (uint64_t)v13, &qword_18C761058);
    if (sub_18900F708((uint64_t)v13) != 1)
    {
      sub_189011B78((uint64_t)v12, (uint64_t)v10, &qword_18C761058);
      v9[8] = v10[8];
      v9[9] = v10[9];
      v9[10] = v10[10];
      v9[11] = v10[11];
      v9[4] = v10[4];
      v9[5] = v10[5];
      v9[6] = v10[6];
      v9[7] = v10[7];
      v9[0] = v10[0];
      v9[1] = v10[1];
      void v9[2] = v10[2];
      v9[3] = v10[3];
      sub_189039748(v9);
      sub_18900F720((uint64_t)v12);
    }

    return v17;
  }

  else
  {
    uint64_t v7 = MEMORY[0x18961AFE8];
    sub_189011F34(MEMORY[0x18961AFE8]);
  }

  return v7;
}

uint64_t sub_189010714(unint64_t a1, uint64_t a2)
{
  uint64_t v4 = MEMORY[0x18961AFE8];
  uint64_t v117 = MEMORY[0x18961AFE8];
  unint64_t v118 = sub_189011F34(MEMORY[0x18961AFE8]);
  int64_t v5 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v76 = a2;
  uint64_t result = swift_bridgeObjectRetain();
  if (!v5)
  {
LABEL_87:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v4;
  }

  int64_t v7 = 0LL;
  unint64_t v80 = a1 + 32;
  unint64_t v78 = a1;
  int64_t v79 = v5;
  while (1)
  {
    if (v7 >= v5)
    {
      __break(1u);
LABEL_89:
      __break(1u);
LABEL_90:
      __break(1u);
      goto LABEL_91;
    }

    if (v7 < 0) {
      goto LABEL_89;
    }
    int64_t v17 = *(void *)(a1 + 16);
    uint64_t v18 = (__int128 *)(v80 + 192 * v7);
    __int128 v19 = v18[9];
    __int128 v114 = v18[8];
    *(_OWORD *)v115 = v19;
    __int128 v20 = v18[11];
    *(_OWORD *)&v115[16] = v18[10];
    __int128 v116 = v20;
    __int128 v21 = v18[5];
    __int128 v110 = v18[4];
    __int128 v111 = v21;
    __int128 v22 = v18[7];
    __int128 v112 = v18[6];
    __int128 v113 = v22;
    __int128 v23 = v18[1];
    __int128 v106 = *v18;
    __int128 v107 = v23;
    __int128 v24 = v18[3];
    __int128 v108 = v18[2];
    __int128 v109 = v24;
    char v25 = v24;
    unint64_t v26 = v7 + 1;
    uint64_t v27 = *((void *)&v107 + 1);
    unint64_t v81 = v111;
    unint64_t v28 = v110;
    unint64_t v29 = v112;
    __int128 v89 = *(_OWORD *)&v115[8];
    __int128 v90 = v114;
    __int128 v91 = v116;
    __int128 v92 = v108;
    char v88 = BYTE8(v112);
    uint64_t v86 = *((void *)&v113 + 1);
    uint64_t v87 = v113;
    char v84 = v115[1];
    char v85 = v115[0];
    char v83 = v115[24];
    uint64_t v82 = *((void *)&v106 + 1);
    unint64_t v93 = v106;
    if (v24 != 1)
    {
      uint64_t v8 = *((void *)&v109 + 1);
      unint64_t v9 = a1;
      uint64_t v10 = v107;
      uint64_t v11 = *((void *)&v111 + 1);
      uint64_t v12 = *((void *)&v110 + 1);
      sub_188FFCFF4((uint64_t)&v106);
      uint64_t v13 = v27;
      int64_t v14 = v26;
      uint64_t v15 = v10;
      a1 = v9;
      unint64_t v16 = v81;
      goto LABEL_4;
    }

    if (v26 != v5) {
      break;
    }
    int64_t v14 = v5;
LABEL_54:
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC818);
    uint64_t result = swift_initStackObject();
    *(_OWORD *)(result + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = xmmword_1890684B0;
    unint64_t v49 = v106;
    __int128 v51 = v112;
    __int128 v50 = v113;
    __int128 v52 = v111;
    *(_OWORD *)(result + 96) = v110;
    *(_OWORD *)(result + 112) = v52;
    __int128 v54 = v108;
    __int128 v53 = v109;
    __int128 v55 = v107;
    *(_OWORD *)(result + 32) = v106;
    *(_OWORD *)(result + 48) = v55;
    __int128 v56 = v116;
    __int128 v57 = *(_OWORD *)&v115[16];
    __int128 v58 = *(_OWORD *)v115;
    *(_OWORD *)(result + 160) = v114;
    *(_OWORD *)(result + 176) = v58;
    *(_OWORD *)(result + 192) = v57;
    *(_OWORD *)(result + 208) = v56;
    *(_OWORD *)(result + 128) = v51;
    *(_OWORD *)(result + 144) = v50;
    *(_OWORD *)(result + 64) = v54;
    *(_OWORD *)(result + 80) = v53;
    if (v14 <= v7) {
      goto LABEL_94;
    }
    if (v5 < v14) {
      goto LABEL_95;
    }
    *(void *)&__int128 v95 = result;
    sub_188FFCFF4((uint64_t)&v106);
    sub_188FFCFF4((uint64_t)&v106);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_189058BB8(v26, v14, a1, v76);
    uint64_t v59 = v95;
    if (v49 >= 2)
    {
      __int128 v60 = sub_189010124(v95);
      sub_189009AE4(v93);
      unint64_t v93 = (unint64_t)v60;
    }

    uint64_t v61 = sub_18900FCB8(v59);
    uint64_t v62 = *(void *)(v61 + 16);
    if (v62)
    {
      __int128 v63 = (unint64_t *)(v61 + 40);
      while (1)
      {
        uint64_t v11 = *(v63 - 1);
        unint64_t v29 = *v63;
        uint64_t v64 = HIBYTE(*v63) & 0xF;
        if ((*v63 & 0x2000000000000000LL) == 0) {
          uint64_t v64 = v11 & 0xFFFFFFFFFFFFLL;
        }
        if (v64) {
          break;
        }
        v63 += 2;
        if (!--v62) {
          goto LABEL_64;
        }
      }

      swift_bridgeObjectRetain();
    }

    else
    {
LABEL_64:
      uint64_t v11 = 0LL;
      unint64_t v29 = 0xE000000000000000LL;
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __int128 v65 = sub_18900FBB8(v59);
    if (*((void *)v65 + 2))
    {
      uint64_t v15 = *((void *)v65 + 4);
      uint64_t v66 = *((void *)v65 + 5);
      swift_bridgeObjectRetain();
    }

    else
    {
      uint64_t v15 = 0LL;
      uint64_t v66 = 0LL;
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v67 = sub_18900FF7C(v59);
    uint64_t v68 = *(void *)(v67 + 16);
    if (v68)
    {
      __int128 v69 = (unint64_t *)(v67 + 40);
      while (1)
      {
        uint64_t v8 = *(v69 - 1);
        unint64_t v28 = *v69;
        uint64_t v70 = HIBYTE(*v69) & 0xF;
        if ((*v69 & 0x2000000000000000LL) == 0) {
          uint64_t v70 = v8 & 0xFFFFFFFFFFFFLL;
        }
        if (v70) {
          break;
        }
        v69 += 2;
        if (!--v68) {
          goto LABEL_75;
        }
      }

      swift_bridgeObjectRetain();
    }

    else
    {
LABEL_75:
      uint64_t v8 = 0LL;
      unint64_t v28 = 0xE000000000000000LL;
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v71 = sub_189010050(v59);
    swift_bridgeObjectRelease();
    uint64_t v72 = *(void *)(v71 + 16);
    if (v72)
    {
      v73 = (unint64_t *)(v71 + 40);
      while (1)
      {
        uint64_t v12 = *(v73 - 1);
        unint64_t v74 = *v73;
        uint64_t v75 = HIBYTE(*v73) & 0xF;
        if ((*v73 & 0x2000000000000000LL) == 0) {
          uint64_t v75 = v12 & 0xFFFFFFFFFFFFLL;
        }
        if (v75) {
          break;
        }
        v73 += 2;
        if (!--v72) {
          goto LABEL_83;
        }
      }

      swift_bridgeObjectRetain();
    }

    else
    {
LABEL_83:
      uint64_t v12 = 0LL;
      unint64_t v74 = 0xE000000000000000LL;
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v16 = v74;
    a1 = v78;
    char v25 = 1;
    uint64_t v13 = v66;
LABEL_4:
    *(void *)&__int128 v95 = v93;
    *((void *)&v95 + 1) = v82;
    *(void *)&__int128 v96 = v15;
    *((void *)&v96 + 1) = v13;
    __int128 v97 = v92;
    LOBYTE(v98) = v25 & 1;
    *((void *)&v98 + 1) = v8;
    *(void *)&__int128 v99 = v28;
    *((void *)&v99 + 1) = v12;
    *(void *)&__int128 v100 = v16;
    *((void *)&v100 + 1) = v11;
    *(void *)&__int128 v101 = v29;
    BYTE8(v101) = v88;
    *(void *)&__int128 v102 = v87;
    *((void *)&v102 + 1) = v86;
    __int128 v103 = v90;
    v104[0] = v85;
    v104[1] = v84;
    *(_OWORD *)&v104[8] = v89;
    v104[24] = v83 & 1;
    __int128 v105 = v91;
    v94[8] = v90;
    v94[9] = *(_OWORD *)v104;
    v94[10] = *(_OWORD *)&v104[16];
    v94[11] = v91;
    v94[4] = v99;
    v94[5] = v100;
    v94[6] = v101;
    v94[7] = v102;
    v94[0] = v95;
    v94[1] = v96;
    __int128 v94[2] = v92;
    v94[3] = v98;
    sub_189039748(v94);
    uint64_t result = sub_1890099F8((uint64_t)&v95);
    int64_t v7 = v14;
    int64_t v5 = v79;
    if (v14 == v79)
    {
      uint64_t v4 = v117;
      goto LABEL_87;
    }
  }

  uint64_t v30 = *(void *)(v108 + 16);
  int64_t v77 = v17;
  uint64_t v31 = v108 + 32;
  int64_t v14 = v7 + 1;
  while (v14 < v5)
  {
    if (v14 >= v17) {
      goto LABEL_92;
    }
    uint64_t v32 = *(void *)(v80 + 192 * v14 + 32);
    if (*(void *)(v32 + 16) != v30) {
      goto LABEL_52;
    }
    if (v30 && v32 != (void)v92)
    {
      uint64_t v33 = 0LL;
      uint64_t v34 = v32 + 32;
      while (1)
      {
        __int128 v35 = (uint64_t *)(v34 + 24 * v33);
        uint64_t result = *v35;
        __int128 v36 = (void *)v35[2];
        __int128 v37 = (void *)(v31 + 24 * v33);
        __int128 v38 = (void *)v37[2];
        if (*v35 != *v37 || v35[1] != v37[1])
        {
          uint64_t result = sub_189067F10();
          if ((result & 1) == 0) {
            break;
          }
        }

        uint64_t v40 = v36[2];
        if (v40 != v38[2]) {
          break;
        }
        if (v40) {
          BOOL v41 = v36 == v38;
        }
        else {
          BOOL v41 = 1;
        }
        if (!v41)
        {
          uint64_t result = v36[4];
          if (result != v38[4] || v36[5] != v38[5])
          {
            uint64_t result = sub_189067F10();
            if ((result & 1) == 0) {
              break;
            }
          }

          if (v40 != 1)
          {
            uint64_t result = v36[6];
            if (result != v38[6] || v36[7] != v38[7])
            {
              uint64_t result = sub_189067F10();
              if ((result & 1) == 0) {
                break;
              }
            }

            uint64_t v44 = v40 - 2;
            if (v44)
            {
              uint64_t v45 = v38 + 9;
              uint64_t v46 = v36 + 9;
              do
              {
                uint64_t result = *(v46 - 1);
                if (result != *(v45 - 1) || *v46 != *v45)
                {
                  uint64_t result = sub_189067F10();
                  if ((result & 1) == 0) {
                    goto LABEL_53;
                  }
                }

                v45 += 2;
                v46 += 2;
              }

              while (--v44);
            }
          }
        }

        if (++v33 == v30) {
          goto LABEL_49;
        }
      }

LABEL_53:
      a1 = v78;
      int64_t v5 = v79;
      unint64_t v26 = v7 + 1;
      goto LABEL_54;
    }

LABEL_49:
    if (__OFADD__(v14++, 1LL)) {
      goto LABEL_93;
    }
    int64_t v5 = v79;
    unint64_t v26 = v7 + 1;
    int64_t v17 = v77;
    if (v14 == v79)
    {
      int64_t v14 = v79;
LABEL_52:
      a1 = v78;
      goto LABEL_54;
    }
  }

LABEL_91:
  __break(1u);
LABEL_92:
  __break(1u);
LABEL_93:
  __break(1u);
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
  return result;
}

uint64_t sub_189010DE4@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  void (*v19)(__int128 *__return_ptr, uint64_t, uint64_t);
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t i;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  unint64_t v38;
  unint64_t v39;
  char *v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  void (*v61)(__int128 *__return_ptr, uint64_t, uint64_t);
  uint64_t v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  _BYTE v76[136];
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  _BYTE v89[136];
  __int128 v90;
  uint64_t v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  void v96[17];
  void v97[17];
  uint64_t v98;
  uint64_t v2 = *(void *)(result + 16);
  if (v2)
  {
    uint64_t v3 = result;
    uint64_t v4 = v2 - 1;
    BOOL v9 = v2 == 1;
    uint64_t v5 = result + 16 * (v2 - 1);
    uint64_t v7 = *(void *)(v5 + 32);
    uint64_t v6 = *(void *)(v5 + 40);
    int64_t v8 = v4 & 0x7FFFFFFFFFFFFFFFLL;
    BOOL v9 = v9 || v8 == 0;
    __int128 v63 = *(void *)(v5 + 40);
    if (v9)
    {
      __int128 v98 = MEMORY[0x18961AFE8];
      swift_bridgeObjectRetain();
    }

    else
    {
      *(void *)&int64_t v77 = MEMORY[0x18961AFE8];
      swift_bridgeObjectRetain();
      sub_188FFF34C(0LL, v8, 0);
      uint64_t v10 = v77;
      uint64_t v11 = v3 + 40;
      do
      {
        uint64_t v12 = (*(uint64_t (**)(void))(*(void *)v11 + 24LL))();
        uint64_t v14 = v13;
        *(void *)&int64_t v77 = v10;
        unint64_t v16 = *(void *)(v10 + 16);
        unint64_t v15 = *(void *)(v10 + 24);
        if (v16 >= v15 >> 1)
        {
          sub_188FFF34C((char *)(v15 > 1), v16 + 1, 1);
          uint64_t v10 = v77;
        }

        *(void *)(v10 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v16 + 1;
        unint64_t v17 = v10 + 16 * v16;
        *(void *)(v17 + 32) = v12;
        *(void *)(v17 + 40) = v14;
        v11 += 16LL;
        --v8;
      }

      while (v8);
      __int128 v98 = v10;
      (*(void (**)(__int128 *__return_ptr))(*(void *)(v3 + 40) + 16LL))(&v77);
      __int128 v18 = v78;
      swift_bridgeObjectRetain();
      sub_189000568((uint64_t)&v77);
      if (*((void *)&v18 + 1)) {
        sub_18901170C(0LL, 0LL, v18, *((uint64_t *)&v18 + 1));
      }
      uint64_t v6 = v63;
    }

    __int128 v19 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v6 + 16);
    v19((__int128 *)v97, v7, v6);
    sub_189000568((uint64_t)v97);
    if (v97[14])
    {
      (*(void (**)(__int128 *__return_ptr))(v97[15] + 16LL))(&v77);
      uint64_t v59 = *((void *)&v77 + 1);
      __int128 v60 = v77;
      swift_bridgeObjectRetain();
      sub_189000568((uint64_t)&v77);
    }

    else
    {
      uint64_t v59 = 0LL;
      __int128 v60 = 0LL;
    }

    uint64_t v61 = v19;
    v19((__int128 *)v96, v7, v6);
    __int128 v20 = v96[13];
    swift_bridgeObjectRetain();
    sub_189000568((uint64_t)v96);
    swift_bridgeObjectRetain();
    __int128 v58 = sub_189011984(v20, v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __int128 v21 = sub_18901055C(v3);
    __int128 v23 = v22;
    swift_bridgeObjectRelease();
    __int128 v24 = sub_189010714(v21, v23);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v25 = *(void *)(v24 + 16);
    if (v25)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v26 = v25 - 1;
      uint64_t v27 = (char *)MEMORY[0x18961AFE8];
      for (uint64_t i = 32LL; ; i += 192LL)
      {
        unint64_t v29 = *(_OWORD *)(v24 + i);
        uint64_t v30 = *(_OWORD *)(v24 + i + 16);
        uint64_t v31 = *(_OWORD *)(v24 + i + 48);
        int64_t v79 = *(_OWORD *)(v24 + i + 32);
        unint64_t v80 = v31;
        int64_t v77 = v29;
        unint64_t v78 = v30;
        uint64_t v32 = *(_OWORD *)(v24 + i + 64);
        uint64_t v33 = *(_OWORD *)(v24 + i + 80);
        uint64_t v34 = *(_OWORD *)(v24 + i + 112);
        char v83 = *(_OWORD *)(v24 + i + 96);
        char v84 = v34;
        unint64_t v81 = v32;
        uint64_t v82 = v33;
        __int128 v35 = *(_OWORD *)(v24 + i + 128);
        __int128 v36 = *(_OWORD *)(v24 + i + 144);
        __int128 v37 = *(_OWORD *)(v24 + i + 176);
        uint64_t v87 = *(_OWORD *)(v24 + i + 160);
        char v88 = v37;
        char v85 = v35;
        uint64_t v86 = v36;
        uint64_t v72 = v35;
        v73 = v36;
        unint64_t v74 = v87;
        uint64_t v75 = v37;
        uint64_t v68 = v81;
        __int128 v69 = v82;
        uint64_t v70 = v83;
        uint64_t v71 = v84;
        uint64_t v64 = v77;
        __int128 v65 = v78;
        uint64_t v66 = v79;
        uint64_t v67 = v80;
        sub_188FFCFF4((uint64_t)&v77);
        sub_189011328(&v64, (uint64_t)v76);
        sub_189011B78((uint64_t)v76, (uint64_t)v89, &qword_18C761080);
        sub_189011B78((uint64_t)v89, (uint64_t)&v90, &qword_18C761080);
        if (sub_189011B24((uint64_t)&v90) != 1)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v27 = sub_189057AF8(0LL, *((void *)v27 + 2) + 1LL, 1, v27);
          }
          __int128 v39 = *((void *)v27 + 2);
          __int128 v38 = *((void *)v27 + 3);
          if (v39 >= v38 >> 1) {
            uint64_t v27 = sub_189057AF8((char *)(v38 > 1), v39 + 1, 1, v27);
          }
          sub_189011B78((uint64_t)v89, (uint64_t)&v64, &qword_18C761080);
          *((void *)v27 + 2) = v39 + 1;
          uint64_t v40 = &v27[136 * v39];
          *((_OWORD *)v40 + 2) = v64;
          BOOL v41 = v68;
          __int128 v43 = v65;
          __int128 v42 = v66;
          *((_OWORD *)v40 + 5) = v67;
          *((_OWORD *)v40 + 6) = v41;
          *((_OWORD *)v40 + 3) = v43;
          *((_OWORD *)v40 + 4) = v42;
          uint64_t v45 = v70;
          uint64_t v44 = v71;
          uint64_t v46 = v69;
          *((void *)v40 + 20) = v72;
          *((_OWORD *)v40 + 8) = v45;
          *((_OWORD *)v40 + 9) = v44;
          *((_OWORD *)v40 + 7) = v46;
        }

        if (!v26) {
          break;
        }
        --v26;
      }

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v27 = (char *)MEMORY[0x18961AFE8];
    }

    unint64_t v47 = v98;
    __int128 v48 = (*(uint64_t (**)(uint64_t, uint64_t))(v63 + 24))(v7, v63);
    __int128 v50 = v49;
    v61(&v64, v7, v63);
    __int128 v51 = v66;
    swift_bridgeObjectRetain();
    sub_189000568((uint64_t)&v64);
    v61(&v77, v7, v63);
    __int128 v52 = v81;
    swift_bridgeObjectRetain();
    sub_189000568((uint64_t)&v77);
    CommandInfoV0.init(superCommands:commandName:abstract:discussion:defaultSubcommand:subcommands:arguments:)( v47,  v48,  v50,  v51,  *((unint64_t *)&v51 + 1),  v52,  *((unint64_t *)&v52 + 1),  v60,  &v90,  v59,  v58,  (uint64_t)v27);
    uint64_t result = swift_unknownObjectRelease();
    __int128 v53 = v91;
    __int128 v54 = v92;
    __int128 v55 = v93;
    __int128 v56 = v94;
    __int128 v57 = v95;
    *(_OWORD *)a2 = v90;
    *(void *)(a2 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v53;
    *(_OWORD *)(a2 + 24) = v54;
    *(_OWORD *)(a2 + 40) = v55;
    *(_OWORD *)(a2 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = v56;
    *(_OWORD *)(a2 + 72) = v57;
  }

  else
  {
    __break(1u);
  }

  return result;
}

uint64_t sub_1890112E8(uint64_t result, uint64_t a2)
{
  if ((result & 0x8000000000000000LL) == 0) {
    return a2;
  }
  __break(1u);
  return result;
}

uint64_t sub_189011328@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v3 = a1[9];
  __int128 v64 = a1[8];
  v65[0] = v3;
  __int128 v4 = a1[11];
  v65[1] = a1[10];
  void v65[2] = v4;
  __int128 v5 = a1[5];
  __int128 v61 = a1[4];
  *(_OWORD *)uint64_t v62 = v5;
  __int128 v6 = a1[7];
  *(_OWORD *)&v62[16] = a1[6];
  __int128 v63 = v6;
  __int128 v7 = a1[1];
  __int128 v57 = *a1;
  __int128 v58 = v7;
  __int128 v8 = a1[3];
  __int128 v59 = a1[2];
  __int128 v60 = v8;
  unint64_t v9 = v57;
  if ((void)v57)
  {
    if ((void)v57 == 1LL)
    {
      sub_1890099F8((uint64_t)&v57);
      sub_189011B48((uint64_t)v55);
      uint64_t v10 = a2;
      return sub_189011B78((uint64_t)v55, v10, &qword_18C761080);
    }

    sub_18900F634((__n128 *)((char *)v65 + 8), &v68);
    sub_18900F634(&v68, &v69);
    if (v70) {
      char v11 = 1;
    }
    else {
      char v11 = 2;
    }
  }

  else
  {
    char v11 = 0;
  }

  char v54 = v11;
  char v12 = BYTE8(v57);
  unint64_t v46 = *((void *)&v58 + 1);
  uint64_t v42 = *((void *)&v60 + 1);
  uint64_t v43 = *((void *)&v59 + 1);
  uint64_t v40 = *((void *)&v61 + 1);
  unint64_t v41 = v61;
  uint64_t v13 = HIBYTE(*((void *)&v63 + 1)) & 0xFLL;
  __int128 v66 = *(_OWORD *)&v62[8];
  if ((*((void *)&v63 + 1) & 0x2000000000000000LL) == 0) {
    uint64_t v13 = v63 & 0xFFFFFFFFFFFFLL;
  }
  int v14 = v62[24];
  if (v13)
  {
    uint64_t v44 = *((void *)&v63 + 1);
    uint64_t v45 = v63;
    swift_bridgeObjectRetain();
  }

  else
  {
    uint64_t v44 = 0LL;
    uint64_t v45 = 0LL;
  }

  uint64_t v15 = MEMORY[0x18961AFE8];
  uint64_t v16 = MEMORY[0x18961AFE8];
  if ((unint64_t)v57 >= 2)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = v57;
  }

  int64_t v17 = *(void *)(v16 + 16);
  uint64_t v47 = v58;
  uint64_t v48 = a2;
  if (v17)
  {
    int v38 = v62[24];
    char v39 = BYTE8(v57);
    *(void *)&v55[0] = v15;
    sub_188FFF404(0LL, v17, 0);
    __int128 v18 = (unsigned __int8 *)(v16 + 48);
    do
    {
      uint64_t v19 = *((void *)v18 - 2);
      uint64_t v20 = *((void *)v18 - 1);
      unsigned int v21 = *v18;
      sub_188FFCF80(v19, v20, *v18);
      *(void *)&v55[0] = v15;
      unint64_t v23 = *(void *)(v15 + 16);
      unint64_t v22 = *(void *)(v15 + 24);
      if (v23 >= v22 >> 1)
      {
        sub_188FFF404((char *)(v22 > 1), v23 + 1, 1);
        uint64_t v15 = *(void *)&v55[0];
      }

      *(void *)(v15 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v23 + 1;
      uint64_t v24 = v15 + 24 * v23;
      *(_BYTE *)(v24 + 32) = v21 >> 6;
      v18 += 24;
      *(void *)(v24 + 40) = v19;
      *(void *)(v24 + 48) = v20;
      --v17;
    }

    while (v17);
    swift_bridgeObjectRelease();
    char v12 = v39;
    int v14 = v38;
    if (v9 < 2) {
      goto LABEL_21;
    }
LABEL_23:
    swift_bridgeObjectRetain();
    goto LABEL_24;
  }

  swift_bridgeObjectRelease();
LABEL_21:
  unint64_t v9 = MEMORY[0x18961AFE8];
LABEL_24:
  uint64_t v25 = sub_189048B28(v9);
  uint64_t v27 = v26;
  unsigned __int8 v29 = v28;
  unsigned int v30 = v28;
  swift_bridgeObjectRelease();
  if (v30 <= 0xFD) {
    unint64_t v31 = v29 >> 6;
  }
  else {
    unint64_t v31 = 0LL;
  }
  if (v30 <= 0xFD) {
    unint64_t v32 = v25;
  }
  else {
    unint64_t v32 = 0LL;
  }
  if (v30 <= 0xFD) {
    uint64_t v33 = v27;
  }
  else {
    uint64_t v33 = 0LL;
  }
  v52.n128_u64[0] = v31;
  v52.n128_u64[1] = v32;
  uint64_t v53 = v33;
  __int128 v67 = v66;
  uint64_t v34 = v66 & 0xFFFFFFFFFFFFLL;
  if ((*((void *)&v66 + 1) & 0x2000000000000000LL) != 0) {
    uint64_t v34 = HIBYTE(*((void *)&v66 + 1)) & 0xFLL;
  }
  if (v34)
  {
    __int128 v51 = v66;
    swift_bridgeObjectRetain();
  }

  else
  {
    sub_188FFCFF4((uint64_t)&v57);
    sub_18900F670((uint64_t)&v67);
    sub_189049A90((uint64_t *)&v57, (unint64_t *)&v51);
    sub_18900F698((uint64_t)&v67);
    sub_1890099F8((uint64_t)&v57);
  }

  __int128 v35 = v51;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v36 = swift_bridgeObjectRetain();
  ArgumentInfoV0.init(kind:shouldDisplay:sectionTitle:isOptional:isRepeating:names:preferredName:valueName:defaultValue:allValues:abstract:discussion:)( &v54,  v14 == 0,  v45,  v44,  v12 & 1,  (v12 & 2) != 0LL,  v15,  &v52,  (uint64_t)v49,  v35,  *((unint64_t *)&v35 + 1),  v47,  v46,  v43,  v42,  v41,  v40,  v36);
  sub_1890099F8((uint64_t)&v57);
  v55[6] = v49[6];
  v55[7] = v49[7];
  uint64_t v56 = v50;
  v55[2] = v49[2];
  v55[3] = v49[3];
  v55[4] = v49[4];
  v55[5] = v49[5];
  v55[0] = v49[0];
  v55[1] = v49[1];
  nullsub_1(v55);
  uint64_t v10 = v48;
  return sub_189011B78((uint64_t)v55, v10, &qword_18C761080);
}

unint64_t sub_18901170C(unint64_t result, int64_t a2, uint64_t a3, uint64_t a4)
{
  if ((result & 0x8000000000000000LL) != 0)
  {
    __break(1u);
    goto LABEL_21;
  }

  __int128 v6 = *v4;
  int64_t v7 = *((void *)*v4 + 2);
  if (v7 < a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }

  unint64_t v8 = result;
  unint64_t v9 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }

  unint64_t v10 = 1 - v9;
  if (__OFSUB__(1LL, v9))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }

  int64_t v11 = v7 + v10;
  if (__OFADD__(v7, v10))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }

  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v11 > *((void *)v6 + 3) >> 1)
  {
    if (v7 <= v11) {
      int64_t v15 = v7 + v10;
    }
    else {
      int64_t v15 = v7;
    }
    __int128 v6 = sub_189056E74(isUniquelyReferenced_nonNull_native, v15, 1, v6);
  }

  uint64_t v16 = &v6[16 * v8 + 32];
  uint64_t result = swift_arrayDestroy();
  if (!v10) {
    goto LABEL_19;
  }
  uint64_t v17 = *((void *)v6 + 2);
  BOOL v18 = __OFSUB__(v17, a2);
  uint64_t v19 = v17 - a2;
  if (v18) {
    goto LABEL_25;
  }
  uint64_t result = (unint64_t)(v16 + 16);
  uint64_t v20 = &v6[16 * a2 + 32];
  uint64_t v21 = *((void *)v6 + 2);
  BOOL v18 = __OFADD__(v21, v10);
  uint64_t v22 = v21 + v10;
  if (!v18)
  {
    *((void *)v6 + 2) = v22;
LABEL_19:
    *(void *)uint64_t v16 = a3;
    *((void *)v16 + 1) = a4;
    uint64_t *v4 = v6;
    return result;
  }

LABEL_26:
  __break(1u);
  return result;
}

  __break(1u);
  return result;
}

    unint64_t v31 = *(void *)(v9 + 48);
    unint64_t v32 = *(void *)(v9 + 32);
    sub_1890411A8(v10, v11, v12);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_188FFF2F8(0LL, *(void *)(v5 + 16) + 1LL, 1);
    }
    __int128 v4 = v29;
    a2 = v30;
    uint64_t v22 = *(void *)(v5 + 16);
    uint64_t v21 = *(void *)(v5 + 24);
    unint64_t v23 = v22 + 1;
    uint64_t result = v28;
    uint64_t v24 = v32;
    if (v22 >= v21 >> 1)
    {
      uint64_t v26 = v22 + 1;
      uint64_t v27 = *(void *)(v5 + 16);
      sub_188FFF2F8((char *)(v21 > 1), v22 + 1, 1);
      unint64_t v23 = v26;
      uint64_t v22 = v27;
      uint64_t v24 = v32;
      uint64_t result = v28;
      __int128 v4 = v29;
      a2 = v30;
    }

    *(void *)(v5 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v23;
    uint64_t v25 = v5 + (v22 << 6);
    *(void *)(v25 + 32) = v10;
    *(void *)(v25 + 40) = v11;
    *(void *)(v25 + 48) = v12;
    *(void *)(v25 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = v13;
    *(void *)(v25 + 64) = v24;
    *(void *)(v25 + 72) = v16;
    *(void *)(v25 + 80) = v31;
    *(_BYTE *)(v25 + 88) = v17;
  }

  while (v7 != v4);
  return v5;
}

      *((void *)v4 + 2) = v12;
    }
  }

  __break(1u);
  return result;
}

_OWORD *sub_189011838(void *a1, int64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = malloc(0x240uLL);
  *a1 = result;
  if (a2 < a3 || a2 >= a4)
  {
    __break(1u);
    goto LABEL_7;
  }

  if (a2 < 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }

  if (*(void *)(a5 + 16) > (unint64_t)a2)
  {
    int64_t v11 = (_OWORD *)(a5 + 192 * a2);
    __int128 v13 = v11[10];
    __int128 v12 = v11[11];
    __int128 v14 = v11[9];
    result[8] = v13;
    result[9] = v12;
    __int128 v15 = v11[11];
    __int128 v17 = v11[12];
    __int128 v16 = v11[13];
    result[10] = v17;
    result[11] = v16;
    __int128 v19 = v11[6];
    __int128 v18 = v11[7];
    __int128 v20 = v11[5];
    result[4] = v19;
    result[5] = v18;
    __int128 v21 = v11[7];
    __int128 v23 = v11[8];
    __int128 v22 = v11[9];
    result[6] = v23;
    result[7] = v22;
    __int128 v24 = v11[3];
    *uint64_t result = v11[2];
    result[1] = v24;
    __int128 v25 = v11[5];
    __int128 v27 = v11[2];
    __int128 v26 = v11[3];
    __int128 v28 = v11[4];
    result[2] = v28;
    result[3] = v25;
    result[20] = v13;
    result[21] = v15;
    __int128 v29 = v11[13];
    result[22] = v17;
    result[23] = v29;
    result[16] = v19;
    result[17] = v21;
    result[18] = v23;
    result[19] = v14;
    result[12] = v27;
    result[13] = v26;
    result[14] = v28;
    result[15] = v20;
    sub_188FFCFF4((uint64_t)result);
    return sub_18901192C;
  }

LABEL_8:
  __break(1u);
  return result;
}

      v20 += 24;
      if (!--v19)
      {
        swift_bridgeObjectRelease();
        unint64_t v10 = v35;
        goto LABEL_29;
      }
    }
  }

  sub_188FFCF98(a2, a3, a4);
LABEL_33:
  sub_18900F870(&v37);
  return sub_18900F6C0((uint64_t)&v37, v8);
}

  swift_bridgeObjectRetain();
  __int128 v4 = sub_189067D54();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v4) {
    return v3;
  }
LABEL_9:
  __int128 v6 = v3 + 56;
  if ((v1 & 0xC000000000000001LL) == 0)
  {
    __int128 v19 = 0LL;
    __int128 v20 = v1 + 32;
    __int128 v21 = *(void *)((v1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    while (1)
    {
      if (v19 == v21) {
        goto LABEL_35;
      }
      __int128 v24 = *(void *)(v20 + 8 * v19);
      sub_189068030();
      sub_18906803C();
      uint64_t result = sub_189068060();
      __int128 v25 = -1LL << *(_BYTE *)(v3 + 32);
      __int128 v26 = result & ~v25;
      __int128 v27 = v26 >> 6;
      __int128 v28 = *(void *)(v6 + 8 * (v26 >> 6));
      __int128 v29 = 1LL << v26;
      unsigned int v30 = *(void *)(v3 + 48);
      if (((1LL << v26) & v28) == 0) {
        goto LABEL_23;
      }
      if (*(void *)(v30 + 8 * v26) != v24) {
        break;
      }
LABEL_25:
      if (++v19 == v4) {
        return v3;
      }
    }

    unint64_t v31 = ~v25;
    while (1)
    {
      __int128 v26 = (v26 + 1) & v31;
      __int128 v27 = v26 >> 6;
      __int128 v28 = *(void *)(v6 + 8 * (v26 >> 6));
      __int128 v29 = 1LL << v26;
      if ((v28 & (1LL << v26)) == 0) {
        break;
      }
      if (*(void *)(v30 + 8 * v26) == v24) {
        goto LABEL_25;
      }
    }

  int64_t v7 = 0LL;
  unint64_t v8 = 0LL;
  unint64_t v9 = 0LL;
LABEL_10:
  *(_OWORD *)a1 = v5;
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v9;
  return result;
}

void sub_18901192C(_OWORD **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (uint64_t)(*a1 + 24);
  __int128 v3 = v1[21];
  v1[32] = v1[20];
  v1[33] = v3;
  __int128 v4 = v1[23];
  v1[34] = v1[22];
  v1[35] = v4;
  __int128 v5 = v1[17];
  v1[28] = v1[16];
  v1[29] = v5;
  __int128 v6 = v1[19];
  v1[30] = v1[18];
  v1[31] = v6;
  __int128 v7 = v1[13];
  v1[24] = v1[12];
  v1[25] = v7;
  __int128 v8 = v1[15];
  v1[26] = v1[14];
  v1[27] = v8;
  sub_1890099F8(v2);
  free(v1);
}

uint64_t sub_189011984(uint64_t a1, uint64_t a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x18961AFE8];
  if (v2)
  {
    uint64_t v33 = MEMORY[0x18961AFE8];
    sub_188FFF3CC(0LL, v2, 0);
    uint64_t v3 = v33;
    __int128 v6 = (__int128 *)(a1 + 32);
    do
    {
      __int128 v25 = *v6;
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      __int128 v8 = (char *)a2;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        __int128 v8 = sub_1890573A8(0LL, *(void *)(a2 + 16) + 1LL, 1, (char *)a2);
      }
      unint64_t v10 = *((void *)v8 + 2);
      unint64_t v9 = *((void *)v8 + 3);
      if (v10 >= v9 >> 1) {
        __int128 v8 = sub_1890573A8((char *)(v9 > 1), v10 + 1, 1, v8);
      }
      *((void *)v8 + 2) = v10 + 1;
      *(_OWORD *)&v8[16 * v10 + 32] = v25;
      sub_189010DE4(&v27, v8);
      __int128 v11 = v27;
      uint64_t v12 = v28;
      __int128 v13 = v29;
      __int128 v14 = v30;
      __int128 v15 = v31;
      __int128 v16 = v32;
      uint64_t v33 = v3;
      unint64_t v18 = *(void *)(v3 + 16);
      unint64_t v17 = *(void *)(v3 + 24);
      if (v18 >= v17 >> 1)
      {
        __int128 v24 = v29;
        __int128 v26 = v27;
        __int128 v22 = v31;
        __int128 v23 = v30;
        __int128 v21 = v32;
        sub_188FFF3CC((char *)(v17 > 1), v18 + 1, 1);
        __int128 v16 = v21;
        __int128 v15 = v22;
        __int128 v14 = v23;
        __int128 v13 = v24;
        __int128 v11 = v26;
        uint64_t v3 = v33;
      }

      *(void *)(v3 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v18 + 1;
      uint64_t v19 = v3 + 88 * v18;
      *(_OWORD *)(v19 + 32) = v11;
      *(void *)(v19 + 48) = v12;
      *(_OWORD *)(v19 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = v13;
      *(_OWORD *)(v19 + 72) = v14;
      *(_OWORD *)(v19 + 88) = v15;
      *(_OWORD *)(v19 + 104) = v16;
      ++v6;
      --v2;
    }

    while (v2);
  }

  return v3;
}

uint64_t sub_189011B24(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 16);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  int v2 = v1 - 1;
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

double sub_189011B48(uint64_t a1)
{
  *(void *)a1 = 0LL;
  *(void *)(a1 + 8) = 0LL;
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 1LL;
  double result = 0.0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  return result;
}

uint64_t sub_189011B78(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32LL))(a2, a1, v5);
  return a2;
}

uint64_t sub_189011BBC(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t destroy for HelpCommand(uint64_t a1)
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for HelpCommand(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(_BYTE *)(a2 + 16);
  sub_189011BBC(*(void *)a2, v5, v6);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  char v9 = *(_BYTE *)(a2 + 40);
  sub_189000668(v7, v8, v9);
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_BYTE *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = *(_BYTE *)(a2 + 56);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for HelpCommand(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(_BYTE *)(a2 + 16);
  sub_189011BBC(*(void *)a2, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  char v9 = *(_BYTE *)(a1 + 16);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v6;
  sub_188FFADAC(v7, v8, v9);
  uint64_t v10 = *(void *)(a2 + 24);
  uint64_t v11 = *(void *)(a2 + 32);
  char v12 = *(_BYTE *)(a2 + 40);
  sub_189000668(v10, v11, v12);
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 32);
  char v15 = *(_BYTE *)(a1 + 40);
  *(void *)(a1 + 24) = v10;
  *(void *)(a1 + 32) = v11;
  *(_BYTE *)(a1 + 40) = v12;
  sub_188FFADBC(v13, v14, v15);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  __int128 v3 = *(_OWORD *)(a2 + 16);
  __int128 v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for HelpCommand(uint64_t a1, uint64_t a2)
{
  char v4 = *(_BYTE *)(a2 + 16);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  char v7 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v4;
  sub_188FFADAC(v5, v6, v7);
  char v8 = *(_BYTE *)(a2 + 40);
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 32);
  char v11 = *(_BYTE *)(a1 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = v8;
  sub_188FFADBC(v9, v10, v11);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for HelpCommand(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 57)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HelpCommand(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 57) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 57) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for HelpCommand()
{
  return &type metadata for HelpCommand;
}

uint64_t sub_189011E78(uint64_t a1)
{
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_1890124A4(v2);
  swift_bridgeObjectRelease();
  if (*(void *)(v3 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC7F8);
    uint64_t v4 = sub_189067D90();
  }

  else
  {
    uint64_t v4 = MEMORY[0x18961AFF0];
  }

  uint64_t v6 = v4;
  sub_1890142A4(v3, 1, &v6);
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_189011F34(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x18961AFF0];
    goto LABEL_11;
  }

  __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC7F8);
  uint64_t v2 = (void *)sub_189067D90();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }

  unint64_t result = swift_retain();
  uint64_t v5 = 0LL;
  uint64_t v6 = (void *)(a1 + 56);
  while (1)
  {
    uint64_t v7 = v5 + 1;
    if (__OFADD__(v5, 1LL)) {
      break;
    }
    uint64_t v8 = *(v6 - 3);
    uint64_t v9 = *(v6 - 2);
    unsigned int v10 = *((unsigned __int8 *)v6 - 8);
    uint64_t v11 = *v6;
    sub_188FFCF80(v8, v9, *((_BYTE *)v6 - 8));
    if (v10 > 0xFD) {
      goto LABEL_9;
    }
    unint64_t result = sub_18904D914(v8, v9, v10);
    if ((v12 & 1) != 0) {
      goto LABEL_13;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL) + 64) |= 1LL << result;
    uint64_t v13 = v2[6] + 24 * result;
    *(void *)uint64_t v13 = v8;
    *(void *)(v13 + 8) = v9;
    *(_BYTE *)(v13 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v10;
    *(void *)(v2[7] + 8 * result) = v11;
    uint64_t v14 = v2[2];
    BOOL v15 = __OFADD__(v14, 1LL);
    uint64_t v16 = v14 + 1;
    if (v15) {
      goto LABEL_14;
    }
    v6 += 4;
    v2[2] = v16;
    ++v5;
    if (v7 == v3)
    {
LABEL_9:
      swift_release();
      goto LABEL_11;
    }
  }

  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

unint64_t sub_189012088(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x18961AFF0];
    goto LABEL_9;
  }

  __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC800);
  uint64_t v2 = (void *)sub_189067D90();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }

  uint64_t v4 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_18901484C(v4, (uint64_t)&v18, &qword_18C7610D0);
    uint64_t v5 = v18;
    uint64_t v6 = v19;
    uint64_t v7 = v20;
    unint64_t result = sub_18904D89C(v18, v19, v20);
    if ((v9 & 1) != 0) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL) + 64) |= 1LL << result;
    unsigned int v10 = (uint64_t *)(v2[6] + 24 * result);
    *unsigned int v10 = v5;
    v10[1] = v6;
    uint64_t v10[2] = (uint64_t)v7;
    uint64_t v11 = v2[7] + 72 * result;
    *(_OWORD *)uint64_t v11 = v21;
    __int128 v12 = v22;
    __int128 v13 = v23;
    __int128 v14 = v24;
    *(_BYTE *)(v11 + 64) = v25;
    *(_OWORD *)(v11 + 32) = v13;
    *(_OWORD *)(v11 + 48) = v14;
    *(_OWORD *)(v11 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v12;
    uint64_t v15 = v2[2];
    BOOL v16 = __OFADD__(v15, 1LL);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    v2[2] = v17;
    v4 += 96LL;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }

  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1890121F0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC7F0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1895F8858](v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x18961AFF0];
    goto LABEL_9;
  }

  __swift_instantiateConcreteTypeFromMangledName(&qword_18C7610C8);
  uint64_t v6 = sub_189067D90();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }

  char v9 = &v5[*(int *)(v2 + 48)];
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_18901484C(v12, (uint64_t)v5, &qword_18C4FC7F0);
    unint64_t result = sub_18904D9E0((uint64_t)v5);
    if ((v15 & 1) != 0) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_189067D00();
    (*(void (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32LL))( v17 + *(void *)(*(void *)(v18 - 8) + 72LL) * v16,  v5,  v18);
    unint64_t result = (unint64_t)sub_189014724(v9, (_OWORD *)(v7[7] + 32 * v16));
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1LL);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }

  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_18901238C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x18961AFF0];
    goto LABEL_9;
  }

  __swift_instantiateConcreteTypeFromMangledName(&qword_18C7610C0);
  uint64_t v2 = (void *)sub_189067D90();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }

  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_18904DA30(v5, v6);
    if ((v9 & 1) != 0) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL) + 64) |= 1LL << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1LL);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }

  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1890124A4(uint64_t a1)
{
  unint64_t v1 = (void *)MEMORY[0x18961AFE8];
  uint64_t v24 = *(void *)(a1 + 16);
  if (!v24) {
    return MEMORY[0x18961AFE8];
  }
  uint64_t v23 = a1 + 32;
  swift_bridgeObjectRetain();
  uint64_t v2 = 0LL;
  uint64_t v3 = v1;
  while (1)
  {
    unint64_t v4 = *(void *)(v23 + 192 * v2);
    uint64_t v5 = v4 >= 2 ? *(void **)(v23 + 192 * v2) : v1;
    int64_t v6 = v5[2];
    if (v6)
    {
      char v25 = v3;
      sub_188FFD0E0(v4);
      sub_188FFF420(0LL, v6, 0);
      uint64_t v7 = v1;
      uint64_t v8 = (unsigned __int8 *)(v5 + 6);
      do
      {
        uint64_t v9 = *((void *)v8 - 2);
        uint64_t v10 = *((void *)v8 - 1);
        if ((*v8 & 0xC0) == 0x40) {
          unsigned __int8 v11 = 64;
        }
        else {
          unsigned __int8 v11 = *v8;
        }
        sub_188FFCF80(*((void *)v8 - 2), *((void *)v8 - 1), *v8);
        unint64_t v13 = v7[2];
        unint64_t v12 = v7[3];
        if (v13 >= v12 >> 1) {
          sub_188FFF420((void *)(v12 > 1), v13 + 1, 1);
        }
        v8 += 24;
        v7[2] = v13 + 1;
        __int128 v14 = &v7[4 * v13];
        v14[4] = v9;
        v14[5] = v10;
        *((_BYTE *)v14 + 48) = v11;
        v14[7] = v2;
        --v6;
      }

      while (v6);
      uint64_t result = swift_bridgeObjectRelease();
      unint64_t v1 = (void *)MEMORY[0x18961AFE8];
      uint64_t v3 = v25;
    }

    else
    {
      sub_188FFD0E0(v4);
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v7 = v1;
    }

    uint64_t v16 = v7[2];
    int64_t v17 = v3[2];
    int64_t v18 = v17 + v16;
    if (__OFADD__(v17, v16)) {
      break;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) != 0 && v18 <= v3[3] >> 1)
    {
      if (v7[2]) {
        goto LABEL_27;
      }
    }

    else
    {
      if (v17 <= v18) {
        int64_t v19 = v17 + v16;
      }
      else {
        int64_t v19 = v17;
      }
      uint64_t result = (uint64_t)sub_189056F74((void *)result, v19, 1, v3);
      uint64_t v3 = (void *)result;
      if (v7[2])
      {
LABEL_27:
        if ((v3[3] >> 1) - v3[2] < v16) {
          goto LABEL_36;
        }
        __swift_instantiateConcreteTypeFromMangledName(qword_18C4FC630);
        uint64_t result = swift_arrayInitWithCopy();
        if (v16)
        {
          uint64_t v20 = v3[2];
          BOOL v21 = __OFADD__(v20, v16);
          uint64_t v22 = v20 + v16;
          if (v21) {
            goto LABEL_37;
          }
          v3[2] = v22;
        }

        goto LABEL_4;
      }
    }

    if (v16) {
      goto LABEL_35;
    }
LABEL_4:
    ++v2;
    swift_bridgeObjectRelease();
    if (v2 == v24)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v3;
    }
  }

  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
  return result;
}

double sub_1890126F0()
{
  uint64_t v0 = MEMORY[0x18961AFE8];
  uint64_t v1 = sub_188FFD338(MEMORY[0x18961AFE8]);
  swift_bridgeObjectRelease();
  *(void *)&double result = 1886152040LL;
  xmmword_18C766DE0 = xmmword_189068B80;
  xmmword_18C766DF0 = 0uLL;
  *(void *)&xmmword_18C766E00 = 0xD000000000000021LL;
  *((void *)&xmmword_18C766E00 + 1) = 0x800000018906D010LL;
  xmmword_18C766E10 = 0uLL;
  *(void *)&xmmword_18C766E20 = 0LL;
  *((void *)&xmmword_18C766E20 + 1) = 0xE000000000000000LL;
  *(void *)&xmmword_18C766E30 = 0LL;
  *((void *)&xmmword_18C766E30 + 1) = 0xE000000000000000LL;
  LOBYTE(xmmword_18C766E40) = 1;
  *((void *)&xmmword_18C766E40 + 1) = v0;
  unk_18C766E50 = 0LL;
  qword_18C766E58 = 0LL;
  qword_18C766E60 = v1;
  return result;
}

uint64_t sub_18901279C@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_188FFD338((uint64_t)&unk_18A338F58);
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  v7[0] = xmmword_1890687B0;
  v7[1] = xmmword_1890687B0;
  uint64_t v8 = 0LL;
  uint64_t v9 = 0LL;
  char v10 = 2;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v4;
  *(_BYTE *)(v5 + 24) = a1;
  uint64_t result = sub_189011B78((uint64_t)v7, v5 + 32, &qword_18C4FC3A0);
  *(void *)a2 = sub_189014094;
  *(void *)(a2 + 8) = v5;
  *(_BYTE *)(a2 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 1;
  return result;
}

BOOL sub_189012870(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t _s22ArgumentParserInternal26SingleValueParsingStrategyV04hashE0Sivg_0()
{
  return sub_189068060();
}

uint64_t sub_1890128CC()
{
  return sub_18906803C();
}

uint64_t sub_1890128F4()
{
  return sub_189068060();
}

uint64_t sub_189012934()
{
  if (*v0) {
    return 1886152040LL;
  }
  else {
    return 0x616D6D6F63627573LL;
  }
}

uint64_t sub_189012970@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = sub_189013EFC(a1, a2);
  *a3 = result;
  return result;
}

void sub_189012994(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1890129A0()
{
  return sub_1890680F0();
}

uint64_t sub_1890129C8()
{
  return sub_1890680FC();
}

uint64_t sub_1890129F0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v17 = a2;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_18C7610A0);
  uint64_t v4 = *(void *)(v18 - 8);
  MEMORY[0x1895F8858](v18);
  int64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  char v25 = 0;
  memset(v24, 0, sizeof(v24));
  uint64_t v7 = swift_allocObject();
  sub_189011B78((uint64_t)v24, v7 + 16, &qword_18C4FC3A0);
  *(_BYTE *)(v7 + 65) = 0;
  uint64_t v8 = MEMORY[0x18961AFE8];
  *(void *)(v7 + 80) = 0LL;
  *(void *)(v7 + 88) = 0LL;
  *(void *)(v7 + 72) = v8;
  *(_BYTE *)(v7 + 96) = -1;
  uint64_t v26 = MEMORY[0x18961AFF8];
  uint64_t v9 = sub_188FFD338((uint64_t)&unk_18A338F58);
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  v20[0] = xmmword_1890687B0;
  v20[1] = xmmword_1890687B0;
  uint64_t v21 = 0LL;
  uint64_t v22 = 0LL;
  char v23 = 2;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v9;
  *(_BYTE *)(v10 + 24) = 0;
  sub_189011B78((uint64_t)v20, v10 + 32, &qword_18C4FC3A0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_189014660();
  sub_189068090();
  if (v2)
  {
    sub_188FFADAC((uint64_t)sub_18901408C, v7, 1);
    sub_188FFADBC((uint64_t)sub_189014B80, v10, 1);
    swift_bridgeObjectRelease();
  }

  else
  {
    uint64_t v11 = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C760FE8);
    char v19 = 0;
    sub_1890146A4();
    uint64_t v12 = v18;
    sub_189067DFC();
    swift_release();
    uint64_t v14 = v26;
    LOBYTE(v26) = 1;
    char v15 = sub_189067DE4();
    swift_release();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v12);
    *(void *)uint64_t v11 = v14;
    *(void *)(v11 + 8) = 0LL;
    *(_BYTE *)(v11 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 0;
    *(void *)(v11 + 24) = v15 & 1;
    *(void *)(v11 + 32) = 0LL;
    *(_BYTE *)(v11 + 40) = 0;
    *(void *)(v11 + 48) = MEMORY[0x18961AFE8];
    *(_BYTE *)(v11 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = 0;
  }

  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_189012CD8@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v5 = *a2;
  memset(v26, 0, sizeof(v26));
  char v27 = 0;
  uint64_t v6 = swift_allocObject();
  sub_189011B78((uint64_t)v26, v6 + 16, &qword_18C4FC3A0);
  *(_BYTE *)(v6 + 65) = 0;
  uint64_t v7 = MEMORY[0x18961AFE8];
  *(void *)(v6 + 80) = 0LL;
  *(void *)(v6 + 88) = 0LL;
  *(void *)(v6 + 72) = v7;
  *(_BYTE *)(v6 + 96) = -1;
  uint64_t v8 = sub_188FFD338((uint64_t)&unk_18A338F58);
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  v22[0] = xmmword_1890687B0;
  v22[1] = xmmword_1890687B0;
  uint64_t v23 = 0LL;
  uint64_t v24 = 0LL;
  char v25 = 2;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v8;
  *(_BYTE *)(v9 + 24) = 0;
  sub_189011B78((uint64_t)v22, v9 + 32, &qword_18C4FC3A0);
  int64_t v10 = *(void *)(a1 + 16);
  if (v10)
  {
    uint64_t v21 = a3;
    swift_bridgeObjectRetain();
    sub_188FFF34C(0LL, v10, 0);
    uint64_t v11 = v7;
    uint64_t v20 = a1;
    uint64_t v12 = a1 + 40;
    do
    {
      uint64_t v13 = (*(uint64_t (**)(void))(*(void *)v12 + 24LL))();
      uint64_t v15 = v14;
      unint64_t v17 = *(void *)(v11 + 16);
      unint64_t v16 = *(void *)(v11 + 24);
      if (v17 >= v16 >> 1) {
        sub_188FFF34C((char *)(v16 > 1), v17 + 1, 1);
      }
      *(void *)(v11 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v17 + 1;
      uint64_t v18 = v11 + 16 * v17;
      *(void *)(v18 + 32) = v13;
      *(void *)(v18 + 40) = v15;
      v12 += 16LL;
      --v10;
    }

    while (v10);
    swift_release();
    swift_release();
    a1 = v20;
    uint64_t result = swift_bridgeObjectRelease();
    a3 = v21;
  }

  else
  {
    swift_release();
    uint64_t result = swift_release();
    uint64_t v11 = MEMORY[0x18961AFE8];
  }

  *(void *)a3 = v11;
  *(void *)(a3 + 8) = 0LL;
  *(_BYTE *)(a3 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 0;
  *(void *)(a3 + 24) = 0LL;
  *(void *)(a3 + 32) = 0LL;
  *(_BYTE *)(a3 + 40) = 0;
  *(void *)(a3 + 48) = a1;
  *(_BYTE *)(a3 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = v5;
  return result;
}

uint64_t sub_189012F04@<X0>(uint64_t a1@<X8>)
{
  if (qword_18C760E20 != -1) {
    swift_once();
  }
  __int128 v2 = xmmword_18C766E30;
  v10[6] = xmmword_18C766E40;
  v10[7] = unk_18C766E50;
  __int128 v3 = xmmword_18C766DF0;
  __int128 v4 = xmmword_18C766E00;
  uint64_t v10[2] = xmmword_18C766E00;
  v10[3] = xmmword_18C766E10;
  __int128 v5 = xmmword_18C766E10;
  __int128 v6 = xmmword_18C766E20;
  v10[4] = xmmword_18C766E20;
  v10[5] = xmmword_18C766E30;
  __int128 v7 = xmmword_18C766DE0;
  v10[0] = xmmword_18C766DE0;
  v10[1] = xmmword_18C766DF0;
  __int128 v8 = unk_18C766E50;
  *(_OWORD *)(a1 + 96) = xmmword_18C766E40;
  *(_OWORD *)(a1 + 112) = v8;
  *(_OWORD *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 80) = v2;
  uint64_t v11 = qword_18C766E60;
  *(void *)(a1 + 128) = qword_18C766E60;
  *(_OWORD *)a1 = v7;
  *(_OWORD *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v3;
  return sub_189013FF4((uint64_t)v10);
}

uint64_t sub_189012FB4()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(unsigned __int8 *)(v0 + 56);
  sub_189000524();
  swift_allocError();
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = v2;
  *(_OWORD *)(v3 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 0u;
  *(_OWORD *)(v3 + 32) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  *(_OWORD *)(v3 + 64) = 0u;
  *(_OWORD *)(v3 + 73) = 0u;
  swift_bridgeObjectRetain();
  return swift_willThrow();
}

__n128 sub_189013024@<Q0>(uint64_t a1@<X8>)
{
  char v9 = 0;
  memset(v8, 0, sizeof(v8));
  uint64_t v2 = swift_allocObject();
  sub_189011B78((uint64_t)v8, v2 + 16, &qword_18C4FC3A0);
  uint64_t v3 = MEMORY[0x18961AFE8];
  *(_BYTE *)(v2 + 65) = 0;
  *(void *)(v2 + 80) = 0LL;
  *(void *)(v2 + 88) = 0LL;
  *(void *)(v2 + 72) = v3;
  *(_BYTE *)(v2 + 96) = -1;
  sub_18901279C(0, (uint64_t)&v6);
  char v4 = v7;
  __n128 result = v6;
  *(void *)a1 = sub_18901408C;
  *(void *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 1;
  *(__n128 *)(a1 + 24) = result;
  *(_BYTE *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = v3;
  *(_BYTE *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = 0;
  return result;
}

uint64_t sub_1890130E0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1890129F0(a1, a2);
}

unint64_t sub_1890130F4(uint64_t a1)
{
  unint64_t result = sub_189013118();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_189013118()
{
  unint64_t result = qword_18C4FC8A8;
  if (!qword_18C4FC8A8)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&unk_189068BD4, &type metadata for HelpCommand);
    atomic_store(result, (unint64_t *)&qword_18C4FC8A8);
  }

  return result;
}

unint64_t sub_18901315C(uint64_t a1)
{
  unint64_t result = sub_189013180();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_189013180()
{
  unint64_t result = qword_18C4FC8B0;
  if (!qword_18C4FC8B0)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&unk_189068BFC, &type metadata for HelpCommand);
    atomic_store(result, (unint64_t *)&qword_18C4FC8B0);
  }

  return result;
}

uint64_t sub_1890131C4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  if (*(void *)(a6 + 16))
  {
    *(void *)&__int128 v42 = a6;
    *((void *)&v42 + 1) = sub_189013E9C;
    uint64_t v43 = 0LL;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1890140A4(a4);
    swift_bridgeObjectRetain();
    sub_189014118(a7, a8, a9);
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C761088);
    sub_18901412C();
    uint64_t v16 = sub_1890677C0();
    uint64_t v18 = v17;
  }

  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1890140A4(a4);
    swift_bridgeObjectRetain();
    sub_189014118(a7, a8, a9);
    uint64_t v16 = 0LL;
    uint64_t v18 = 0LL;
  }

  if (a9 == 255) {
    uint64_t v19 = 0LL;
  }
  else {
    uint64_t v19 = a7;
  }
  if (a9 == 255) {
    uint64_t v20 = 0LL;
  }
  else {
    uint64_t v20 = a8;
  }
  uint64_t v38 = v20;
  uint64_t v39 = v19;
  if (a9 == 255) {
    char v21 = 4;
  }
  else {
    char v21 = a9;
  }
  char v37 = v21;
  sub_189011B78((uint64_t)a4, (uint64_t)v41, &qword_18C4FC3A0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_189048BAC(MEMORY[0x18961AFE8], 3LL, v41, v16, v18, a1, a2, a3, (uint64_t)&v42, 0);
  __int128 v31 = v42;
  uint64_t v22 = v43;
  char v36 = v45;
  __int128 v34 = v47;
  __int128 v35 = v46;
  uint64_t v23 = v48;
  uint64_t v24 = v49;
  char v25 = v50;
  uint64_t v32 = v52;
  uint64_t v33 = v51;
  uint64_t v26 = (void *)swift_allocObject();
  void v26[2] = sub_189013E80;
  _OWORD v26[3] = 0LL;
  v26[4] = a1;
  v26[5] = a2;
  v26[6] = a3;
  v41[0] = a6;
  char v27 = (void *)swift_allocObject();
  v27[2] = 0LL;
  sub_189011B78((uint64_t)v41, (uint64_t)(v27 + 3), &qword_18C761098);
  v27[4] = a1;
  v27[5] = a2;
  v27[6] = a3;
  char v53 = 1;
  __int128 v30 = v44;
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC818);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = xmmword_1890684B0;
  *(void *)(v28 + 32) = 0LL;
  *(_OWORD *)(v28 + 40) = v31;
  *(void *)(v28 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = v22;
  *(_OWORD *)(v28 + 64) = v30;
  *(_BYTE *)(v28 + 80) = v36;
  *(_OWORD *)(v28 + 88) = v35;
  *(_OWORD *)(v28 + 104) = v34;
  *(void *)(v28 + 120) = v23;
  *(void *)(v28 + 128) = v24;
  *(_BYTE *)(v28 + 136) = v25;
  *(void *)(v28 + 144) = v33;
  *(void *)(v28 + 152) = v32;
  *(void *)(v28 + 160) = v39;
  *(void *)(v28 + 168) = v38;
  *(_BYTE *)(v28 + 176) = v37;
  *(_BYTE *)(v28 + 177) = a5;
  *(void *)(v28 + 184) = sub_189014210;
  *(void *)(v28 + 192) = v26;
  *(_BYTE *)(v28 + 200) = v53;
  *(void *)(v28 + 208) = sub_189014284;
  *(void *)(v28 + 2__swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_189011E78(v28);
}

uint64_t sub_1890134C0( uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t *))
{
  uint64_t v12 = *v6;
  if (*(void *)(v12 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v13 = sub_18904D89C(a1, a2, a3);
    if ((v14 & 1) != 0)
    {
      sub_1890145E8(*(void *)(v12 + 56) + 72 * v13, (uint64_t)&v20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*((void *)&v20 + 1))
      {
        v26[1] = v22;
        __int128 v27 = v23;
        char v28 = v24;
        __int128 v25 = v20;
        v26[0] = v21;
        goto LABEL_8;
      }
    }

    else
    {
      char v24 = 0;
      __int128 v22 = 0u;
      __int128 v23 = 0u;
      __int128 v20 = 0u;
      __int128 v21 = 0u;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }

  else
  {
    char v24 = 0;
    __int128 v22 = 0u;
    __int128 v23 = 0u;
    __int128 v20 = 0u;
    __int128 v21 = 0u;
  }

  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_18C760FE8);
  *(void *)&__int128 v25 = a1;
  *((void *)&v25 + 1) = a2;
  *(void *)&v26[0] = a3;
  *((void *)&v26[0] + 1) = a5;
  *(void *)&__int128 v27 = v15;
  *((void *)&v27 + 1) = MEMORY[0x18961AFF8];
  char v28 = 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_188FFCDB0((uint64_t)&v20, &qword_18C4FC488);
LABEL_8:
  sub_18901484C((uint64_t)v26 + 8, (uint64_t)&v20, &qword_18C4FC878);
  if (!*((void *)&v21 + 1))
  {
    sub_188FFCDB0((uint64_t)&v20, &qword_18C4FC878);
    goto LABEL_12;
  }

  __swift_instantiateConcreteTypeFromMangledName(&qword_18C760FE8);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    uint64_t v19 = a5;
    swift_bridgeObjectRetain();
  }

  if (v28 == 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v19 = MEMORY[0x18961AFE8];
    char v28 = 0;
  }

  a6(&v19);
  uint64_t v16 = v19;
  *((void *)&v21 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_18C760FE8);
  *(void *)&__int128 v20 = v16;
  sub_1890145A0((uint64_t)&v20, (uint64_t)v26 + 8);
  uint64_t v17 = swift_bridgeObjectRetain();
  sub_18904CD8C(v17);
  sub_18904CEF0((uint64_t *)&v25);
  return sub_189014560((uint64_t)&v25);
}

void *sub_189013714( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *(*a8)(uint64_t *__return_ptr, uint64_t, uint64_t, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  unint64_t result = a8(&v15, a10, a11, a12, a1, a2, a3, a4, a5, a6);
  if (!v12)
  {
    MEMORY[0x1895F8858](result);
    sub_1890134C0(a10, a11, a12, a1, MEMORY[0x18961AFE8], (void (*)(uint64_t *))sub_189014594);
    return (void *)swift_bridgeObjectRelease();
  }

  return result;
}

void *sub_18901380C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *(*a8)(void *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  unint64_t result = a8(v19, a10, a11, a12, a1, a2, a3, a4, a5, a6);
  if (!v12)
  {
    v18[3] = MEMORY[0x189617FA8];
    v18[0] = v19[0];
    v18[1] = v19[1];
    sub_18901484C((uint64_t)v18, (uint64_t)v16, &qword_18C4FC878);
    v15[0] = a10;
    v15[1] = a11;
    v15[2] = a12;
    v16[4] = a1;
    char v17 = 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_18904CEF0(v15);
    sub_189014560((uint64_t)v15);
    sub_188FFCDB0((uint64_t)v18, &qword_18C4FC878);
    return (void *)swift_bridgeObjectRelease();
  }

  return result;
}

void *sub_189013928( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *(*a8)(void *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  unint64_t result = a8(v19, a10, a11, a12, a1, a2, a3, a4, a5, a6);
  if (!v12)
  {
    v18[3] = MEMORY[0x18961AFC0] + 8LL;
    v18[0] = swift_allocObject();
    sub_188FFCD54((uint64_t)v19, v18[0] + 16LL);
    sub_18901484C((uint64_t)v18, (uint64_t)v16, &qword_18C4FC878);
    v15[0] = a10;
    v15[1] = a11;
    v15[2] = a12;
    v16[4] = a1;
    char v17 = 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_18904CEF0(v15);
    sub_189014560((uint64_t)v15);
    sub_188FFCDB0((uint64_t)v18, &qword_18C4FC878);
    return (void *)__swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v19);
  }

  return result;
}

uint64_t sub_189013A54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a3 != 1)
  {
    uint64_t v11 = a1;
    swift_bridgeObjectRetain();
    if (a4) {
      goto LABEL_3;
    }
LABEL_5:
    __int128 v16 = 0u;
    __int128 v17 = 0u;
    goto LABEL_6;
  }

  uint64_t v11 = sub_1890473A0((uint64_t)&unk_18A339380);
  if (!a4) {
    goto LABEL_5;
  }
LABEL_3:
  *((void *)&v17 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_18C760FE8);
  *(void *)&__int128 v16 = a4;
LABEL_6:
  sub_18901484C((uint64_t)&v16, (uint64_t)v14, &qword_18C4FC878);
  v13[0] = a5;
  v13[1] = a6;
  void v13[2] = a7;
  v14[4] = v11;
  char v15 = 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_18904CEF0(v13);
  sub_189014560((uint64_t)v13);
  swift_bridgeObjectRelease();
  return sub_188FFCDB0((uint64_t)&v16, &qword_18C4FC878);
}

uint64_t sub_189013B64( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a3 != 1)
  {
    uint64_t v13 = a1;
    swift_bridgeObjectRetain();
    if (a5) {
      goto LABEL_3;
    }
LABEL_5:
    __int128 v18 = 0u;
    __int128 v19 = 0u;
    goto LABEL_6;
  }

  uint64_t v13 = sub_1890473A0((uint64_t)&unk_18A3393B8);
  if (!a5) {
    goto LABEL_5;
  }
LABEL_3:
  *((void *)&v19 + 1) = MEMORY[0x189617FA8];
  *(void *)&__int128 v18 = a4;
  *((void *)&v18 + 1) = a5;
LABEL_6:
  sub_18901484C((uint64_t)&v18, (uint64_t)v16, &qword_18C4FC878);
  v15[0] = a6;
  v15[1] = a7;
  v15[2] = a8;
  v16[4] = v13;
  char v17 = 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_18904CEF0(v15);
  sub_189014560((uint64_t)v15);
  swift_bridgeObjectRelease();
  return sub_188FFCDB0((uint64_t)&v18, &qword_18C4FC878);
}

uint64_t sub_189013C74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a3 == 1)
  {
    uint64_t v11 = sub_1890473A0((uint64_t)&unk_18A3393F0);
  }

  else
  {
    uint64_t v11 = a1;
    swift_bridgeObjectRetain();
  }

  sub_18901484C(a4, (uint64_t)&v13, &qword_18C4FC878);
  if (v15[0])
  {
    *((void *)&v18 + 1) = MEMORY[0x18961AFC0] + 8LL;
    *(void *)&__int128 v17 = swift_allocObject();
    sub_189014724(&v13, (_OWORD *)(v17 + 16));
  }

  else
  {
    sub_188FFCDB0((uint64_t)&v13, &qword_18C4FC878);
    __int128 v17 = 0u;
    __int128 v18 = 0u;
  }

  sub_18901484C((uint64_t)&v17, (uint64_t)v15, &qword_18C4FC878);
  *(void *)&__int128 v13 = a5;
  *((void *)&v13 + 1) = a6;
  uint64_t v14 = a7;
  v15[4] = v11;
  char v16 = 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_18904CEF0((uint64_t *)&v13);
  sub_189014560((uint64_t)&v13);
  swift_bridgeObjectRelease();
  return sub_188FFCDB0((uint64_t)&v17, &qword_18C4FC878);
}

uint64_t sub_189013DC4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_189056E74(0LL, *(void *)(v6 + 16) + 1LL, 1, (char *)v6);
    uint64_t v6 = result;
  }

  unint64_t v9 = *(void *)(v6 + 16);
  unint64_t v8 = *(void *)(v6 + 24);
  if (v9 >= v8 >> 1)
  {
    uint64_t result = (uint64_t)sub_189056E74((char *)(v8 > 1), v9 + 1, 1, (char *)v6);
    uint64_t v6 = result;
  }

  *(void *)(v6 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v9 + 1;
  unint64_t v10 = v6 + 16 * v9;
  *(void *)(v10 + 32) = a2;
  *(void *)(v10 + 40) = a3;
  *a1 = v6;
  return result;
}

uint64_t sub_189013E70(uint64_t result, uint64_t a2)
{
  *(void *)(result + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = a2;
  *(void *)(result + 24) = 2 * a2;
  return result;
}

uint64_t sub_189013E80@<X0>(uint64_t a1@<X7>, void *a2@<X8>, uint64_t a3)
{
  *a2 = a1;
  a2[1] = a3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_189013E9C@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_189067CD0();
  *a1 = 0LL;
  a1[1] = 0xE000000000000000LL;
  return result;
}

uint64_t sub_189013EFC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x616D6D6F63627573LL && a2 == 0xEB0000000073646ELL;
  if (v2 || (sub_189067F10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0LL;
  }

  else if (a1 == 1886152040 && a2 == 0xE400000000000000LL)
  {
    swift_bridgeObjectRelease();
    return 1LL;
  }

  else
  {
    char v6 = sub_189067F10();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0) {
      return 1LL;
    }
    else {
      return 2LL;
    }
  }

uint64_t sub_189013FF4(uint64_t a1)
{
  return a1;
}

uint64_t sub_189014094(uint64_t a1, unint64_t a2, uint64_t a3)
{
  return sub_189034728(a1, a2, a3, *(void *)(v3 + 16), *(_BYTE *)(v3 + 24), (uint64_t *)(v3 + 32));
}

uint64_t *sub_1890140A4(uint64_t *a1)
{
  return a1;
}

uint64_t sub_1890140DC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }

  return result;
}

uint64_t sub_189014118(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 != -1) {
    return sub_188FFD0F0(a1, a2, a3);
  }
  return a1;
}

unint64_t sub_18901412C()
{
  unint64_t result = qword_18C761090;
  if (!qword_18C761090)
  {
    uint64_t v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_18C761088);
    unint64_t v2 = sub_189014190();
    unint64_t result = MEMORY[0x1895DD3F4](MEMORY[0x189619610], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_18C761090);
  }

  return result;
}

unint64_t sub_189014190()
{
  unint64_t result = qword_18C760FF0;
  if (!qword_18C760FF0)
  {
    uint64_t v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_18C760FE8);
    unint64_t result = MEMORY[0x1895DD3F4](MEMORY[0x189618458], v1);
    atomic_store(result, (unint64_t *)&qword_18C760FF0);
  }

  return result;
}

uint64_t sub_1890141DC()
{
  return swift_deallocObject();
}

void *sub_189014210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_189013714( a1,  a2,  a3,  a4,  a5,  a6,  a7,  *(void *(**)(uint64_t *__return_ptr, uint64_t, uint64_t, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 16),  *(void *)(v7 + 24),  *(void *)(v7 + 32),  *(void *)(v7 + 40),  *(void **)(v7 + 48));
}

uint64_t sub_189014240()
{
  if (*(void *)(v0 + 16) >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_189014284(uint64_t a1, uint64_t a2)
{
  return sub_189013A54(a1, a2, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t sub_1890142A4(uint64_t result, char a2, void *a3)
{
  if (*(void *)(result + 16))
  {
    uint64_t v5 = result;
    uint64_t v43 = *(void *)(result + 16);
    uint64_t v7 = *(void *)(result + 32);
    uint64_t v6 = *(void *)(result + 40);
    int v8 = *(unsigned __int8 *)(result + 48);
    uint64_t v42 = *(void *)(result + 56);
    unint64_t v9 = (void *)*a3;
    sub_188FFCF80(v7, v6, v8);
    unint64_t v11 = sub_18904D914(v7, v6, v8);
    uint64_t v12 = v9[2];
    BOOL v13 = (v10 & 1) == 0;
    unint64_t result = v12 + v13;
    if (__OFADD__(v12, v13))
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }

    char v14 = v10;
    if (v9[3] < result)
    {
      sub_18904E1F8(result, a2 & 1);
      unint64_t result = sub_18904D914(v7, v6, v8);
      if ((v14 & 1) != (v15 & 1))
      {
LABEL_26:
        unint64_t result = sub_189067FC4();
        __break(1u);
        return result;
      }

      unint64_t v11 = result;
      char v16 = (void *)*a3;
      if ((v14 & 1) == 0) {
        goto LABEL_11;
      }
LABEL_9:
      uint64_t v17 = 8 * v11;
      uint64_t v18 = *(void *)(v16[7] + 8 * v11);
      unint64_t result = sub_188FFCF98(v7, v6, v8);
      *(void *)(v16[7] + v17) = v18;
LABEL_13:
      uint64_t v23 = v43 - 1;
      if (v43 == 1) {
        return result;
      }
      for (uint64_t i = (void *)(v5 + 88); ; i += 4)
      {
        uint64_t v28 = *(i - 3);
        uint64_t v27 = *(i - 2);
        int v29 = *((unsigned __int8 *)i - 8);
        uint64_t v30 = *i;
        __int128 v31 = (void *)*a3;
        sub_188FFCF80(v28, v27, *((_BYTE *)i - 8));
        unint64_t result = sub_18904D914(v28, v27, v29);
        uint64_t v33 = v31[2];
        BOOL v34 = (v32 & 1) == 0;
        BOOL v21 = __OFADD__(v33, v34);
        uint64_t v35 = v33 + v34;
        if (v21) {
          break;
        }
        char v36 = v32;
        if (v31[3] < v35)
        {
          sub_18904E1F8(v35, 1);
          unint64_t result = sub_18904D914(v28, v27, v29);
          if ((v36 & 1) != (v37 & 1)) {
            goto LABEL_26;
          }
        }

        uint64_t v38 = (void *)*a3;
        if ((v36 & 1) != 0)
        {
          uint64_t v25 = 8 * result;
          uint64_t v26 = *(void *)(v38[7] + 8 * result);
          unint64_t result = sub_188FFCF98(v28, v27, v29);
          *(void *)(v38[7] + v25) = v26;
        }

        else
        {
          v38[((unint64_t)result >> 6) + 8] |= 1LL << result;
          uint64_t v39 = v38[6] + 24 * result;
          *(void *)uint64_t v39 = v28;
          *(void *)(v39 + 8) = v27;
          *(_BYTE *)(v39 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v29;
          *(void *)(v38[7] + 8 * result) = v30;
          uint64_t v40 = v38[2];
          BOOL v21 = __OFADD__(v40, 1LL);
          uint64_t v41 = v40 + 1;
          if (v21) {
            goto LABEL_25;
          }
          v38[2] = v41;
        }

        if (!--v23) {
          return result;
        }
      }

      goto LABEL_24;
    }

    if ((a2 & 1) != 0)
    {
      char v16 = (void *)*a3;
      if ((v10 & 1) != 0) {
        goto LABEL_9;
      }
    }

    else
    {
      unint64_t result = (uint64_t)sub_18904DAEC();
      char v16 = (void *)*a3;
      if ((v14 & 1) != 0) {
        goto LABEL_9;
      }
    }

LABEL_11:
    v16[(v11 >> 6) + 8] |= 1LL << v11;
    uint64_t v19 = v16[6] + 24 * v11;
    *(void *)uint64_t v19 = v7;
    *(void *)(v19 + 8) = v6;
    *(_BYTE *)(v19 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v8;
    *(void *)(v16[7] + 8 * v11) = v42;
    uint64_t v20 = v16[2];
    BOOL v21 = __OFADD__(v20, 1LL);
    uint64_t v22 = v20 + 1;
    if (v21)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }

    void v16[2] = v22;
    goto LABEL_13;
  }

  return result;
}

  __int128 v59 = *(void *)(a1 + 8);
  __int128 v65 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v49 = *(void *)(a1 + 64);
  char v54 = *(void *)(a1 + 72);
  __int128 v55 = *(void *)(a1 + 56);
  __int128 v47 = *(void *)(a1 + 80);
  uint64_t v51 = *(void *)(a1 + 88);
  uint64_t v7 = *(void *)(a1 + 120);
  uint64_t v43 = *(void *)(a1 + 112);
  int v8 = *(void *)(a1 + 128);
  __int128 v58 = *(void *)(a2 + 8);
  __int128 v64 = *(void *)(a2 + 16);
  char v10 = *(void *)(a2 + 48);
  unint64_t v9 = *(void *)(a2 + 56);
  uint64_t v48 = *(void *)(a2 + 64);
  char v53 = *(void *)(a2 + 72);
  __int128 v46 = *(void *)(a2 + 80);
  char v50 = *(void *)(a2 + 88);
  uint64_t v42 = *(void *)(a2 + 112);
  uint64_t v38 = *(void *)(a2 + 120);
  uint64_t v39 = *(void *)(a2 + 128);
  unint64_t v11 = *(unsigned __int8 *)(a1 + 1);
  __int128 v63 = *(unsigned __int8 *)(a1 + 24);
  __int128 v61 = *(unsigned __int8 *)(a1 + 25);
  uint64_t v52 = *(void *)(a1 + 40);
  __int128 v57 = *(void *)(a1 + 32);
  uint64_t v41 = *(void *)(a1 + 104);
  char v45 = *(void **)(a1 + 96);
  uint64_t v12 = *(unsigned __int8 *)(a2 + 1);
  uint64_t v62 = *(unsigned __int8 *)(a2 + 24);
  __int128 v60 = *(unsigned __int8 *)(a2 + 25);
  BOOL v13 = *(void *)(a2 + 40);
  uint64_t v56 = *(void *)(a2 + 32);
  uint64_t v40 = *(void *)(a2 + 104);
  __int128 v44 = *(void **)(a2 + 96);
  if (v5 == v3 && v4 == v2)
  {
    swift_bridgeObjectRelease_n();
    if (v11 != v12) {
      return 0LL;
    }
  }

  else
  {
    char v37 = *(void *)(a2 + 40);
    BOOL v13 = *(void *)(a2 + 48);
    char v14 = *(void *)(a1 + 48);
    char v15 = *(void *)(a2 + 56);
    char v16 = *(void *)(a1 + 128);
    uint64_t v17 = *(void *)(a1 + 120);
    uint64_t v18 = sub_189067F10();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t result = 0LL;
    if ((v18 & 1) == 0) {
      return result;
    }
    uint64_t v7 = v17;
    int v8 = v16;
    unint64_t v9 = v15;
    uint64_t v6 = v14;
    char v10 = v13;
    LOBYTE(v13) = v37;
    if (((v11 ^ v12) & 1) != 0) {
      return result;
    }
  }

  if (!v65)
  {
    if (v64) {
      return 0LL;
    }
LABEL_25:
    unint64_t result = 0LL;
    if (v63 != v62) {
      return result;
    }
    goto LABEL_26;
  }

  if (!v64) {
    return 0LL;
  }
  if (v59 == v58 && v65 == v64) {
    goto LABEL_25;
  }
  uint64_t v20 = sub_189067F10();
  unint64_t result = 0LL;
  if ((v20 & 1) == 0 || ((v63 ^ v62) & 1) != 0) {
    return result;
  }
LABEL_26:
  if (((v61 ^ v60) & 1) != 0) {
    return result;
  }
  if (v57)
  {
    if (!v56) {
      return 0LL;
    }
    BOOL v21 = v10;
    uint64_t v22 = v6;
    uint64_t v23 = v9;
    swift_bridgeObjectRetain();
    char v24 = swift_bridgeObjectRetain();
    uint64_t v25 = sub_18904D674(v24, v56);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v25 & 1) == 0) {
      return 0LL;
    }
  }

  else
  {
    BOOL v21 = v10;
    uint64_t v22 = v6;
    uint64_t v23 = v9;
    if (v56) {
      return 0LL;
    }
  }

  if (!v55)
  {
    if (!v23) {
      goto LABEL_61;
    }
    goto LABEL_75;
  }

  if (!v23)
  {
    swift_bridgeObjectRetain();
    goto LABEL_75;
  }

  uint64_t v26 = v23;
  uint64_t v27 = 1735290732LL;
  if ((_BYTE)v52)
  {
    else {
      uint64_t v28 = 0xD000000000000012LL;
    }
    else {
      int v29 = 0x800000018906C3B0LL;
    }
  }

  else
  {
    int v29 = 0xE400000000000000LL;
    uint64_t v28 = 1735290732LL;
  }

  if ((_BYTE)v13)
  {
    else {
      uint64_t v27 = 0xD000000000000012LL;
    }
    else {
      uint64_t v30 = 0x800000018906C3B0LL;
    }
  }

  else
  {
    uint64_t v30 = 0xE400000000000000LL;
  }

  __int128 v31 = v8;
  if (v28 != v27 || v29 != v30)
  {
    char v32 = sub_189067F10();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v32 & 1) != 0) {
      goto LABEL_57;
    }
    swift_bridgeObjectRelease_n();
LABEL_75:
    swift_bridgeObjectRelease();
    return 0LL;
  }

  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease_n();
LABEL_57:
  if (v22 == v21 && v55 == v26)
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    int v8 = v31;
  }

  else
  {
    uint64_t v33 = sub_189067F10();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    unint64_t result = 0LL;
    int v8 = v31;
    if ((v33 & 1) == 0) {
      return result;
    }
  }

uint64_t sub_189014560(uint64_t a1)
{
  return a1;
}

uint64_t sub_189014594(uint64_t *a1)
{
  return sub_189013DC4(a1, **(void **)(v1 + 16), *(void *)(*(void *)(v1 + 16) + 8LL));
}

uint64_t sub_1890145A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC878);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1890145E8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_189014628(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1890131C4( a1,  a2,  a3,  (uint64_t *)(v3 + 16),  *(_BYTE *)(v3 + 65),  *(void *)(v3 + 72),  *(void *)(v3 + 80),  *(void *)(v3 + 88),  *(_BYTE *)(v3 + 96));
}

unint64_t sub_189014660()
{
  unint64_t result = qword_18C7610A8;
  if (!qword_18C7610A8)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&unk_189068CF8, &type metadata for HelpCommand.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_18C7610A8);
  }

  return result;
}

unint64_t sub_1890146A4()
{
  unint64_t result = qword_18C7610B0;
  if (!qword_18C7610B0)
  {
    uint64_t v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_18C760FE8);
    uint64_t v2 = MEMORY[0x189617FD8];
    unint64_t result = MEMORY[0x1895DD3F4](MEMORY[0x189618478], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_18C7610B0);
  }

  return result;
}

uint64_t sub_189014700()
{
  return swift_deallocObject();
}

_OWORD *sub_189014724(_OWORD *a1, _OWORD *a2)
{
  __int128 v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

unint64_t sub_189014734(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x18961AFF0];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C7610B8);
  uint64_t v3 = (void *)sub_189067D90();
  __int128 v13 = *(_OWORD *)(a1 + 32);
  unint64_t result = sub_18904DA94(*(void *)(a1 + 32));
  if ((v5 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain();
    swift_retain();
    return (unint64_t)v3;
  }

  uint64_t v6 = (__int128 *)(a1 + 48);
  uint64_t v7 = v1 - 1;
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL) + 64) |= 1LL << result;
    *(void *)(v3[6] + 8 * result) = v13;
    *(void *)(v3[7] + 8 * result) = *((void *)&v13 + 1);
    uint64_t v8 = v3[2];
    BOOL v9 = __OFADD__(v8, 1LL);
    uint64_t v10 = v8 + 1;
    if (v9) {
      break;
    }
    v3[2] = v10;
    if (!v7) {
      goto LABEL_8;
    }
    __int128 v11 = *v6++;
    __int128 v13 = v11;
    swift_retain();
    swift_retain();
    unint64_t result = sub_18904DA94(v11);
    --v7;
    if ((v12 & 1) != 0) {
      goto LABEL_7;
    }
  }

  __break(1u);
  return result;
}

uint64_t sub_18901484C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16LL))(a2, a1, v5);
  return a2;
}

uint64_t objectdestroyTm()
{
  if (*(void *)(v0 + 24))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  int v1 = *(unsigned __int8 *)(v0 + 96);
  if (v1 != 255) {
    sub_189009AF4(*(void *)(v0 + 80), *(void *)(v0 + 88), v1);
  }
  return swift_deallocObject();
}

uint64_t objectdestroy_2Tm()
{
  if (*(void *)(v0 + 40))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_deallocObject();
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for HelpCommand.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }

  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }

    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }

LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

      char v14 = v9 + 2;
      if (v9 + 2 >= v3) {
        goto LABEL_52;
      }
      char v15 = 0;
      goto LABEL_23;
    }

  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xC;
  int v8 = v6 - 12;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for HelpCommand.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_189014A14 + 4 * byte_189068B9D[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_189014A48 + 4 * byte_189068B98[v4]))();
}

uint64_t sub_189014A48(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_189014A50(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x189014A58LL);
  }
  return result;
}

uint64_t sub_189014A64(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x189014A6CLL);
  }
  *(_BYTE *)unint64_t result = a2 + 1;
  return result;
}

uint64_t sub_189014A70(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_189014A78(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_189014A84(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_189014A8C(_BYTE *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for HelpCommand.CodingKeys()
{
  return &type metadata for HelpCommand.CodingKeys;
}

unint64_t sub_189014AAC()
{
  unint64_t result = qword_18C7610D8;
  if (!qword_18C7610D8)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&unk_189068CD0, &type metadata for HelpCommand.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_18C7610D8);
  }

  return result;
}

unint64_t sub_189014AF4()
{
  unint64_t result = qword_18C7610E0;
  if (!qword_18C7610E0)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&unk_189068C40, &type metadata for HelpCommand.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_18C7610E0);
  }

  return result;
}

unint64_t sub_189014B3C()
{
  unint64_t result = qword_18C7610E8;
  if (!qword_18C7610E8)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&unk_189068C68, &type metadata for HelpCommand.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_18C7610E8);
  }

  return result;
}

unint64_t sub_189014B84(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000LL) == 0) {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (4 * v3 >= result >> 14) {
    return sub_189067928();
  }
  __break(1u);
  return result;
}

unint64_t sub_189014BD0(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
  {
    a1 = sub_189027098();
    if (((v4 | v5) & 1) != 0)
    {
      char v6 = v4;
      uint64_t v7 = sub_1890273B4();
      uint64_t v9 = 80LL;
      if ((v8 & 1) == 0) {
        uint64_t v9 = v7;
      }
      if ((v6 & 1) != 0) {
        a1 = v9;
      }
    }
  }

  __int128 v61 = v2;
  uint64_t v10 = v2[5];
  uint64_t v68 = v10;
  int64_t v11 = *(void *)(v10 + 16);
  char v12 = (void *)MEMORY[0x18961AFE8];
  if (v11)
  {
    uint64_t v62 = MEMORY[0x18961AFE8];
    swift_bridgeObjectRetain();
    sub_188FFF34C(0LL, v11, 0);
    char v12 = (void *)v62;
    uint64_t v13 = v10 + 64;
    do
    {
      uint64_t v14 = *(void *)(v13 - 32);
      unint64_t v15 = *(void *)(v13 - 24);
      uint64_t v16 = *(void *)(v13 - 16);
      sub_18901A138(v14, v15);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v17 = sub_189019EA0(a1, v14, v15, v16);
      uint64_t v19 = v18;
      sub_18901A14C(v14, v15);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v62 = (uint64_t)v12;
      unint64_t v21 = v12[2];
      unint64_t v20 = v12[3];
      if (v21 >= v20 >> 1)
      {
        sub_188FFF34C((char *)(v20 > 1), v21 + 1, 1);
        char v12 = (void *)v62;
      }

      v12[2] = v21 + 1;
      uint64_t v22 = &v12[2 * v21];
      void v22[4] = v17;
      v22[5] = v19;
      v13 += 48LL;
      --v11;
    }

    while (v11);
    sub_18901A160((uint64_t)&v68);
  }

  uint64_t v23 = v12[2];
  uint64_t v24 = MEMORY[0x18961AFE8];
  if (v23)
  {
    uint64_t v25 = v12 + 5;
    do
    {
      uint64_t v29 = *(v25 - 1);
      uint64_t v30 = *v25;
      uint64_t v31 = HIBYTE(*v25) & 0xF;
      if ((*v25 & 0x2000000000000000LL) == 0) {
        uint64_t v31 = v29 & 0xFFFFFFFFFFFFLL;
      }
      if (v31)
      {
        swift_bridgeObjectRetain();
        uint64_t v62 = v24;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_188FFF34C(0LL, *(void *)(v24 + 16) + 1LL, 1);
          uint64_t v24 = v62;
        }

        unint64_t v27 = *(void *)(v24 + 16);
        unint64_t v26 = *(void *)(v24 + 24);
        if (v27 >= v26 >> 1)
        {
          sub_188FFF34C((char *)(v26 > 1), v27 + 1, 1);
          uint64_t v24 = v62;
        }

        *(void *)(v24 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v27 + 1;
        unint64_t v28 = v24 + 16 * v27;
        *(void *)(v28 + 32) = v29;
        *(void *)(v28 + 40) = v30;
      }

      v25 += 2;
      --v23;
    }

    while (v23);
  }

  swift_bridgeObjectRelease();
  uint64_t v62 = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C760FE8);
  sub_189009B3C((unint64_t *)&qword_18C760FF0, &qword_18C760FE8, MEMORY[0x189618458]);
  sub_1890677C0();
  unint64_t result = swift_release();
  uint64_t v33 = v61;
  unint64_t v34 = v61[2];
  uint64_t v35 = HIBYTE(v34) & 0xF;
  if ((v34 & 0x2000000000000000LL) == 0) {
    uint64_t v35 = v61[1] & 0xFFFFFFFFFFFFLL;
  }
  if (v35)
  {
    swift_bridgeObjectRetain();
    sub_18906788C();
    swift_bridgeObjectRelease();
    uint64_t v36 = sub_189015354(a1, 0LL, 0x574549565245564FLL, 0xEA0000000000203ALL);
    unint64_t v38 = v37;
    swift_bridgeObjectRelease();
    uint64_t v62 = v36;
    unint64_t v63 = v38;
    swift_bridgeObjectRetain();
    sub_18906788C();
    unint64_t result = swift_bridgeObjectRelease();
    uint64_t v39 = v36;
    unint64_t v40 = v38;
  }

  else
  {
    uint64_t v39 = 0LL;
    unint64_t v40 = 0xE000000000000000LL;
  }

  uint64_t v41 = v61[5];
  uint64_t v42 = *(void *)(v41 + 16);
  if (!v42) {
    goto LABEL_41;
  }
  uint64_t v43 = v41 + 48;
  while (*(void *)(v43 - 8) != 1LL)
  {
    v43 += 48LL;
    if (!--v42) {
      goto LABEL_41;
    }
  }

  if (!*(void *)(*(void *)v43 + 16LL)) {
    goto LABEL_41;
  }
  unint64_t v60 = v40;
  uint64_t v59 = v39;
  uint64_t v67 = *v61;
  uint64_t v44 = v67;
  int64_t v45 = *(void *)(v67 + 16);
  if (!v45)
  {
LABEL_51:
    __break(1u);
    return result;
  }

  uint64_t v62 = MEMORY[0x18961AFE8];
  swift_bridgeObjectRetain();
  sub_188FFF34C(0LL, v45, 0);
  uint64_t v46 = v62;
  uint64_t v47 = v67 + 40;
  do
  {
    uint64_t v48 = (*(uint64_t (**)(void))(*(void *)v47 + 24LL))();
    uint64_t v50 = v49;
    uint64_t v62 = v46;
    unint64_t v52 = *(void *)(v46 + 16);
    unint64_t v51 = *(void *)(v46 + 24);
    if (v52 >= v51 >> 1)
    {
      sub_188FFF34C((char *)(v51 > 1), v52 + 1, 1);
      uint64_t v46 = v62;
    }

    *(void *)(v46 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v52 + 1;
    unint64_t v53 = v46 + 16 * v52;
    *(void *)(v53 + 32) = v48;
    *(void *)(v53 + 40) = v50;
    v47 += 16LL;
    --v45;
  }

  while (v45);
  sub_18901A160((uint64_t)&v67);
  uint64_t v66 = v46;
  (*(void (**)(uint64_t *__return_ptr))(*(void *)(v44 + 40) + 16LL))(&v62);
  uint64_t v57 = v64;
  uint64_t v58 = v65;
  swift_bridgeObjectRetain();
  unint64_t result = sub_189000568((uint64_t)&v62);
  if (v58)
  {
    unint64_t result = sub_18901170C(0LL, 0LL, v57, v58);
    uint64_t v46 = v66;
  }

  unint64_t v40 = v60;
  if (!*(void *)(v46 + 16))
  {
    __break(1u);
    goto LABEL_51;
  }

  sub_18901170C(1uLL, 1LL, 1886152040LL, 0xE400000000000000LL);
  sub_189067C28();
  swift_bridgeObjectRelease();
  sub_1890677C0();
  swift_bridgeObjectRelease();
  sub_18906788C();
  swift_bridgeObjectRelease();
  sub_18906788C();
  uint64_t v33 = v61;
  uint64_t v39 = v59;
LABEL_41:
  uint64_t v55 = v33[3];
  unint64_t v54 = v33[4];
  uint64_t v56 = HIBYTE(v54) & 0xF;
  if ((v54 & 0x2000000000000000LL) == 0) {
    uint64_t v56 = v55 & 0xFFFFFFFFFFFFLL;
  }
  if (v56)
  {
    uint64_t v62 = 0x203A4547415355LL;
    unint64_t v63 = 0xE700000000000000LL;
    swift_bridgeObjectRetain();
    sub_189016964(7LL, v55, v54);
    swift_bridgeObjectRelease();
    sub_18906788C();
    swift_bridgeObjectRelease();
    sub_18906788C();
  }

  uint64_t v62 = v39;
  unint64_t v63 = v40;
  sub_18906788C();
  swift_bridgeObjectRelease();
  sub_18906788C();
  swift_bridgeObjectRelease();
  sub_18906788C();
  swift_bridgeObjectRelease();
  return v62;
}

uint64_t sub_18901520C(uint64_t a1, uint64_t *a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x18961AFE8];
  if (!v2) {
    return MEMORY[0x18961AFE8];
  }
  uint64_t v18 = MEMORY[0x18961AFE8];
  sub_188FFF394(0LL, v2, 0);
  uint64_t v5 = v18;
  char v6 = (uint64_t *)(a1 + 40);
  do
  {
    uint64_t v8 = *(v6 - 1);
    uint64_t v7 = *v6;
    uint64_t v9 = *a2;
    uint64_t v10 = *(void *)(*a2 + 16);
    swift_bridgeObjectRetain();
    if (v10)
    {
      swift_bridgeObjectRetain_n();
      unint64_t v11 = sub_18904DA30(v8, v7);
      if ((v12 & 1) != 0)
      {
        uint64_t v3 = *(void *)(*(void *)(v9 + 56) + 8 * v11);
        swift_bridgeObjectRetain();
      }

      swift_bridgeObjectRelease_n();
    }

    unint64_t v14 = *(void *)(v18 + 16);
    unint64_t v13 = *(void *)(v18 + 24);
    if (v14 >= v13 >> 1) {
      sub_188FFF394((char *)(v13 > 1), v14 + 1, 1);
    }
    v6 += 2;
    *(void *)(v18 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v14 + 1;
    uint64_t v15 = v18 + 48 * v14;
    *(void *)(v15 + 32) = v8;
    *(void *)(v15 + 40) = v7;
    *(void *)(v15 + 48) = v3;
    *(void *)(v15 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = 0LL;
    *(void *)(v15 + 64) = 0xE000000000000000LL;
    *(_BYTE *)(v15 + 72) = 0;
    --v2;
    uint64_t v3 = MEMORY[0x18961AFE8];
  }

  while (v2);
  return v5;
}

uint64_t sub_189015354(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(a1, a2))
  {
LABEL_133:
    __break(1u);
    goto LABEL_134;
  }

  if (v8 < 1) {
    return 0LL;
  }
  unint64_t v9 = 0LL;
  unint64_t v157 = MEMORY[0x18961AFE8];
  uint64_t v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000LL) == 0) {
    uint64_t v10 = a3 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v144 = 4 * v10;
  unint64_t v5 = 15LL;
  v141 = (char *)(a1 - a2);
LABEL_11:
  unint64_t v4 = sub_189067928();
  unint64_t v23 = v22;
  unint64_t v7 = v24;
  unint64_t v6 = v25;
  uint64_t v26 = sub_189067AD8();
  if ((v27 & 1) != 0) {
    unint64_t v28 = v23;
  }
  else {
    unint64_t v28 = v26;
  }
  if (v28 >> 14 < v4 >> 14)
  {
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
    goto LABEL_133;
  }

  unint64_t v29 = sub_189067B08();
  unint64_t v31 = v30;
  unint64_t v4 = v32;
  swift_bridgeObjectRelease();
  uint64_t v8 = v29 >> 14;
  if (v31 >> 14 == v29 >> 14)
  {
    if (v8 == v144) {
      goto LABEL_116;
    }
    goto LABEL_17;
  }

  unint64_t v7 = sub_189067ACC();
  BOOL v41 = sub_189067AF0() == 10 && v40 == 0xE100000000000000LL;
  if (v41) {
    goto LABEL_48;
  }
  unint64_t v6 = v40;
  unint64_t v150 = v29 >> 14;
  uint64_t v8 = v4;
  unint64_t v4 = v9;
  unint64_t v42 = v7;
  char v43 = sub_189067F10();
  swift_bridgeObjectRelease();
  if ((v43 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    unint64_t v7 = v42;
    unint64_t v9 = v4;
LABEL_50:
    if (v9 > v7 >> 14) {
      goto LABEL_131;
    }
    unint64_t v60 = sub_189067928();
    uint64_t v62 = v61;
    unint64_t v5 = v63;
    unint64_t v147 = v63;
    unint64_t v148 = v64 >> 14;
    if (v64 >> 14 == v60 >> 14)
    {
      unint64_t v6 = sub_189067B08();
      uint64_t v12 = v11;
      uint64_t v14 = v13;
      uint64_t v16 = v15;
      uint64_t v17 = sub_1890579F8(0LL, 1LL, 1, MEMORY[0x18961AFE8]);
      unint64_t v19 = *((void *)v17 + 2);
      unint64_t v18 = *((void *)v17 + 3);
      unint64_t v7 = v19 + 1;
      if (v19 >= v18 >> 1) {
        uint64_t v17 = sub_1890579F8((char *)(v18 > 1), v19 + 1, 1, v17);
      }
      *((void *)v17 + 2) = v7;
      unint64_t v20 = &v17[32 * v19];
      *((void *)v20 + 4) = v6;
      unint64_t v21 = v20 + 32;
      goto LABEL_9;
    }

    swift_bridgeObjectRetain();
    unint64_t v65 = v60;
    uint64_t v8 = v60;
    unint64_t v7 = v60;
    v151 = (char *)MEMORY[0x18961AFE8];
    uint64_t v66 = v62;
    while (1)
    {
      uint64_t v67 = sub_189067AF0();
      unint64_t v4 = v68;
      if (v67 == 10 && v68 == 0xE100000000000000LL) {
        break;
      }
      unint64_t v6 = sub_189067F10();
      swift_bridgeObjectRelease();
      if ((v6 & 1) != 0) {
        goto LABEL_59;
      }
      unint64_t v65 = sub_189067AC0();
LABEL_54:
      if (v148 == v65 >> 14)
      {
        if (v148 < v7 >> 14) {
          goto LABEL_132;
        }
        unint64_t v7 = sub_189067B08();
        uint64_t v12 = v80;
        uint64_t v14 = v81;
        uint64_t v16 = v82;
        swift_bridgeObjectRelease();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0) {
          uint64_t v17 = v151;
        }
        else {
          uint64_t v17 = sub_1890579F8(0LL, *((void *)v151 + 2) + 1LL, 1, v151);
        }
        unint64_t v6 = *((void *)v17 + 2);
        unint64_t v83 = *((void *)v17 + 3);
        if (v6 >= v83 >> 1) {
          uint64_t v17 = sub_1890579F8((char *)(v83 > 1), v6 + 1, 1, v17);
        }
        *((void *)v17 + 2) = v6 + 1;
        char v84 = &v17[32 * v6];
        *((void *)v84 + 4) = v7;
        unint64_t v21 = v84 + 32;
LABEL_9:
        unint64_t v4 = (unint64_t)v17;
        v21[1] = v12;
        v21[2] = v14;
        v21[3] = v16;
        swift_bridgeObjectRelease();
        sub_189058FD4(v4);
LABEL_10:
        unint64_t v5 = sub_189067850();
        unint64_t v9 = v5 >> 14;
        uint64_t v8 = (uint64_t)v141;
        if (v144 < v5 >> 14) {
          goto LABEL_129;
        }
        goto LABEL_11;
      }
    }

    swift_bridgeObjectRelease();
LABEL_59:
    if (v65 >> 14 < (unint64_t)v8 >> 14)
    {
      __break(1u);
      goto LABEL_128;
    }

    uint64_t v69 = v66;
    uint64_t v70 = sub_189067B08();
    uint64_t v72 = v71;
    unint64_t v6 = v73;
    uint64_t v75 = v74;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0) {
      uint64_t v76 = v151;
    }
    else {
      uint64_t v76 = sub_1890579F8(0LL, *((void *)v151 + 2) + 1LL, 1, v151);
    }
    unint64_t v78 = *((void *)v76 + 2);
    unint64_t v77 = *((void *)v76 + 3);
    unint64_t v4 = v78 + 1;
    if (v78 >= v77 >> 1) {
      uint64_t v76 = sub_1890579F8((char *)(v77 > 1), v78 + 1, 1, v76);
    }
    *((void *)v76 + 2) = v4;
    v151 = v76;
    int64_t v79 = &v76[32 * v78];
    *((void *)v79 + 4) = v70;
    *((void *)v79 + 5) = v72;
    *((void *)v79 + 6) = v6;
    *((void *)v79 + 7) = v75;
    uint64_t v66 = v69;
    unint64_t v5 = v147;
    unint64_t v65 = sub_189067AC0();
    uint64_t v8 = v65;
    unint64_t v7 = v65;
    goto LABEL_54;
  }

  BOOL v41 = v150 == v42 >> 14;
  unint64_t v9 = v4;
  unint64_t v4 = v8;
  if (v41) {
    goto LABEL_37;
  }
  unint64_t v7 = sub_189067ACC();
  uint64_t v58 = sub_189067AF0();
  unint64_t v6 = v59;
  if (v58 == 10 && v59 == 0xE100000000000000LL)
  {
LABEL_48:
    swift_bridgeObjectRelease();
LABEL_49:
    swift_bridgeObjectRelease();
    goto LABEL_50;
  }

  unint64_t v143 = v7;
  char v87 = sub_189067F10();
  swift_bridgeObjectRelease();
  if ((v87 & 1) != 0) {
    goto LABEL_77;
  }
  if (v150 == v143 >> 14) {
    goto LABEL_37;
  }
  unint64_t v7 = sub_189067ACC();
  uint64_t v101 = sub_189067AF0();
  unint64_t v6 = v102;
  if (v101 == 10 && v102 == 0xE100000000000000LL) {
    goto LABEL_48;
  }
  unint64_t v143 = v7;
  char v103 = sub_189067F10();
  swift_bridgeObjectRelease();
  if ((v103 & 1) != 0)
  {
LABEL_77:
    swift_bridgeObjectRelease();
    unint64_t v7 = v143;
    goto LABEL_50;
  }

  if (v150 != v143 >> 14)
  {
    do
    {
      unint64_t v7 = sub_189067ACC();
      if (sub_189067AF0() == 10 && v104 == 0xE100000000000000LL) {
        goto LABEL_48;
      }
      unint64_t v6 = v104;
      uint64_t v8 = sub_189067F10();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0) {
        goto LABEL_49;
      }
    }

    while (v150 != v7 >> 14);
  }

LABEL_37:
  uint64_t v8 = v29 >> 14;
  if (v31 >> 14 == v144) {
    goto LABEL_116;
  }
  unint64_t v7 = sub_189067ACC();
  uint64_t v53 = sub_189067AF0();
  unint64_t v6 = v54;
  if (v53 == 32 && v54 == 0xE100000000000000LL) {
    goto LABEL_40;
  }
  unint64_t v85 = v7;
  char v86 = sub_189067F10();
  swift_bridgeObjectRelease();
  if ((v86 & 1) != 0)
  {
LABEL_73:
    swift_bridgeObjectRelease();
    unint64_t v7 = v85;
    goto LABEL_74;
  }

  if (v150 == v85 >> 14) {
    goto LABEL_17;
  }
  unint64_t v7 = sub_189067ACC();
  uint64_t v92 = sub_189067AF0();
  unint64_t v6 = v93;
  if (v92 == 32 && v93 == 0xE100000000000000LL) {
    goto LABEL_40;
  }
  unint64_t v85 = v7;
  char v94 = sub_189067F10();
  swift_bridgeObjectRelease();
  if ((v94 & 1) != 0) {
    goto LABEL_73;
  }
  if (v150 == v85 >> 14) {
    goto LABEL_17;
  }
  unint64_t v7 = sub_189067ACC();
  uint64_t v95 = sub_189067AF0();
  unint64_t v6 = v96;
  if (v95 == 32 && v96 == 0xE100000000000000LL) {
    goto LABEL_40;
  }
  unint64_t v85 = v7;
  char v97 = sub_189067F10();
  swift_bridgeObjectRelease();
  if ((v97 & 1) != 0) {
    goto LABEL_73;
  }
  if (v150 == v85 >> 14)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    unint64_t v33 = sub_189067928();
    unint64_t v4 = v34;
    unint64_t v36 = v35 >> 14;
    unint64_t v37 = v33 >> 14;
    if (v33 >> 14 != v35 >> 14)
    {
      unint64_t v7 = v33;
      uint64_t v38 = sub_189067AF0();
      unint64_t v6 = v39;
      if (v38 == 32 && v39 == 0xE100000000000000LL) {
        goto LABEL_20;
      }
      unint64_t v142 = v7;
      char v44 = sub_189067F10();
      swift_bridgeObjectRelease();
      if ((v44 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        unint64_t v7 = v142;
        goto LABEL_29;
      }

      unint64_t v55 = sub_189067AC0();
      unint64_t v37 = v55 >> 14;
      if (v55 >> 14 != v36)
      {
        unint64_t v7 = v55;
        uint64_t v56 = sub_189067AF0();
        unint64_t v6 = v57;
        if (v56 == 32 && v57 == 0xE100000000000000LL)
        {
LABEL_20:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_29;
        }

        uint64_t v8 = sub_189067F10();
        swift_bridgeObjectRelease();
        if ((v8 & 1) != 0)
        {
          swift_bridgeObjectRelease();
LABEL_29:
          if (v37 >= v9) {
            goto LABEL_30;
          }
          goto LABEL_130;
        }

        while (1)
        {
          unint64_t v88 = sub_189067AC0();
          unint64_t v37 = v88 >> 14;
          if (v88 >> 14 == v36) {
            break;
          }
          uint64_t v8 = v88;
          uint64_t v89 = sub_189067AF0();
          unint64_t v6 = v90;
          if (v89 == 32 && v90 == 0xE100000000000000LL)
          {
            swift_bridgeObjectRelease();
LABEL_112:
            swift_bridgeObjectRelease();
            unint64_t v7 = v8;
            goto LABEL_29;
          }

          char v91 = sub_189067F10();
          swift_bridgeObjectRelease();
          if ((v91 & 1) != 0) {
            goto LABEL_112;
          }
        }
      }
    }

  swift_bridgeObjectRelease();
  return v8;
}

  __break(1u);
  return result;
}

LABEL_116:
    swift_bridgeObjectRelease();
    unint64_t v4 = sub_189014B84(v5, a3, a4);
    unint64_t v5 = v107;
    unint64_t v6 = v108;
    unint64_t v7 = v109;
    uint64_t v8 = v157;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      goto LABEL_135;
    }
    goto LABEL_117;
  }

  while (1)
  {
    unint64_t v7 = sub_189067ACC();
    if (sub_189067AF0() == 32 && v98 == 0xE100000000000000LL) {
      break;
    }
    unint64_t v6 = v98;
    unint64_t v85 = v7;
    char v100 = sub_189067F10();
    swift_bridgeObjectRelease();
    if ((v100 & 1) != 0) {
      goto LABEL_73;
    }
    if (v150 == v85 >> 14) {
      goto LABEL_17;
    }
  }

LABEL_40:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_74:
  if (v9 <= v7 >> 14)
  {
LABEL_30:
    unint64_t v4 = sub_189067928();
    uint64_t v46 = v45;
    uint64_t v48 = v47;
    unint64_t v7 = v49;
    unint64_t v6 = v157;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v6 = (unint64_t)sub_1890579F8(0LL, *(void *)(v157 + 16) + 1LL, 1, (char *)v157);
    }
    unint64_t v51 = *(void *)(v6 + 16);
    unint64_t v50 = *(void *)(v6 + 24);
    if (v51 >= v50 >> 1) {
      unint64_t v6 = (unint64_t)sub_1890579F8((char *)(v50 > 1), v51 + 1, 1, (char *)v6);
    }
    *(void *)(v6 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v51 + 1;
    unint64_t v52 = (void *)(v6 + 32 * v51);
    v52[4] = v4;
    v52[5] = v46;
    v52[6] = v48;
    v52[7] = v7;
    unint64_t v157 = v6;
    goto LABEL_10;
  }

  __break(1u);
  return result;
}

      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
  }

  return result;
}

LABEL_134:
  __break(1u);
LABEL_135:
  uint64_t v8 = (uint64_t)sub_1890579F8(0LL, *(void *)(v8 + 16) + 1LL, 1, (char *)v8);
LABEL_117:
  unint64_t v111 = *(void *)(v8 + 16);
  unint64_t v110 = *(void *)(v8 + 24);
  unint64_t v112 = v111 + 1;
  if (v111 >= v110 >> 1) {
    uint64_t v8 = (uint64_t)sub_1890579F8((char *)(v110 > 1), v111 + 1, 1, (char *)v8);
  }
  *(void *)(v8 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v112;
  __int128 v113 = (char *)(v8 + 32 * v111);
  *((void *)v113 + 4) = v4;
  *((void *)v113 + 5) = v5;
  v113 += 32;
  *((void *)v113 + 2) = v6;
  *((void *)v113 + 3) = v7;
  uint64_t v156 = MEMORY[0x18961AFE8];
  swift_bridgeObjectRetain();
  sub_188FFF3B0(0LL, v111 + 1, 0);
  uint64_t v114 = v156;
  v115 = (uint64_t *)(v8 + 56);
  do
  {
    uint64_t v116 = *(v115 - 3);
    uint64_t v117 = *(v115 - 2);
    uint64_t v118 = *(v115 - 1);
    uint64_t v119 = *v115;
    swift_bridgeObjectRetain();
    if ((v117 ^ (unint64_t)v116) >= 0x4000)
    {
      MEMORY[0x1895DC998](32LL, 0xE100000000000000LL, a2);
      sub_189067AE4();
      sub_189067844();
      swift_bridgeObjectRetain();
      uint64_t v153 = MEMORY[0x1895DC8B4](15LL, 7LL, 0LL, 0xE000000000000000LL);
      uint64_t v155 = v120;
      sub_189067880();
      uint64_t v121 = MEMORY[0x1895DCB9C](v153, v155);
      uint64_t v149 = v122;
      uint64_t v152 = v114;
      unint64_t v123 = v112;
      uint64_t v125 = v124;
      uint64_t v127 = v126;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v128 = v125;
      unint64_t v112 = v123;
      uint64_t v129 = MEMORY[0x1895DC8B4](v121, v149, v128, v127);
      uint64_t v131 = v130;
      swift_bridgeObjectRelease();
      uint64_t v154 = v129;
      uint64_t v114 = v152;
      sub_18900F5F0();
      sub_189067880();
      uint64_t v116 = MEMORY[0x1895DCB9C](v154, v131);
      uint64_t v117 = v132;
      uint64_t v118 = v133;
      uint64_t v135 = v134;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      uint64_t v119 = v135;
    }

    unint64_t v137 = *(void *)(v114 + 16);
    unint64_t v136 = *(void *)(v114 + 24);
    if (v137 >= v136 >> 1) {
      sub_188FFF3B0((char *)(v136 > 1), v137 + 1, 1);
    }
    *(void *)(v114 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v137 + 1;
    v138 = (void *)(v114 + 32 * v137);
    v138[4] = v116;
    v138[5] = v117;
    v138[6] = v118;
    v138[7] = v119;
    v115 += 4;
    --v112;
  }

  while (v112);
  swift_bridgeObjectRelease_n();
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C760FF8);
  sub_189009B3C(&qword_18C761000, &qword_18C760FF8, MEMORY[0x189618470]);
  sub_189009970();
  uint64_t v106 = sub_18906797C();
  swift_bridgeObjectRelease();
  return v106;
}

        uint64_t v89 = *v2;
        while (1)
        {
          unint64_t v90 = v11 - 2;
          if (v11 < 2) {
            goto LABEL_163;
          }
          if (!v89) {
            goto LABEL_176;
          }
          char v91 = *(void *)(v8 + 32 + 16 * v90);
          uint64_t v92 = *(void *)(v8 + 32 + 16 * (v11 - 1) + 8);
          unint64_t result = sub_189040514( (char *)(v89 + 24 * v91),  (char *)(v89 + 24LL * *(void *)(v8 + 32 + 16 * (v11 - 1))),  v89 + 24 * v92,  v100);
          if (v1) {
            goto LABEL_146;
          }
          if (v92 < v91) {
            goto LABEL_164;
          }
          unint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            unint64_t result = (uint64_t)sub_1890408C0(v8);
            uint64_t v8 = result;
          }

          if (v90 >= *(void *)(v8 + 16)) {
            goto LABEL_165;
          }
          unint64_t v93 = (void *)(v8 + 32 + 16 * v90);
          *unint64_t v93 = v91;
          v93[1] = v92;
          char v94 = *(void *)(v8 + 16);
          if (v11 > v94) {
            goto LABEL_166;
          }
          unint64_t result = (uint64_t)memmove( (void *)(v8 + 32 + 16 * (v11 - 1)),  (const void *)(v8 + 32 + 16 * v11),  16 * (v94 - v11));
          *(void *)(v8 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v94 - 1;
          uint64_t v11 = v94 - 1;
          if (v94 <= 2) {
            goto LABEL_146;
          }
        }
      }

      continue;
    }

    break;
  }

uint64_t sub_1890161E8(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000LL) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2) {
    return 0LL;
  }
  sub_18906785C();
  return sub_189067904();
}

uint64_t sub_189016260(uint64_t a1)
{
  uint64_t v21 = MEMORY[0x1895DC998](32LL, 0xE100000000000000LL, 2LL);
  swift_bridgeObjectRetain();
  sub_18906788C();
  swift_bridgeObjectRelease();
  uint64_t v3 = v1[2];
  unint64_t v4 = v1[3];
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_189015354(a1, 26LL, v3, v4);
  unint64_t v7 = v6;
  swift_bridgeObjectRelease();
  uint64_t v9 = v1[4];
  unint64_t v8 = v1[5];
  uint64_t v10 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000LL) == 0) {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFLL;
  }
  if (v10)
  {
    swift_bridgeObjectRetain();
    sub_189015354(a1, 8LL, v9, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_18906788C();
    swift_bridgeObjectRelease();
  }

  uint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000LL) == 0) {
    uint64_t v11 = v3 & 0xFFFFFFFFFFFFLL;
  }
  if (v11)
  {
    if (sub_189067844() >= 26)
    {
      sub_18906788C();
    }

    else
    {
      swift_bridgeObjectRetain();
      unint64_t v12 = sub_189067844();
      unint64_t v13 = sub_189058224(v12, v5, v7);
      uint64_t v15 = v14;
      uint64_t v17 = v16;
      uint64_t v19 = v18;
      swift_bridgeObjectRelease();
      MEMORY[0x1895DC8B4](v13, v15, v17, v19);
      swift_bridgeObjectRelease();
    }
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_18906788C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_18906788C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_18906788C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_1890164E4()
{
  return sub_189068060();
}

uint64_t sub_189016594()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_189016630()
{
  return sub_189068060();
}

uint64_t sub_1890166DC(_OWORD *a1, __int128 *a2)
{
  __int128 v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  __int128 v3 = *a2;
  __int128 v4 = a2[1];
  _OWORD v7[2] = a1[2];
  v8[0] = v3;
  __int128 v5 = a2[2];
  v8[1] = v4;
  uint64_t v8[2] = v5;
  return sub_1890186DC(v7, v8) & 1;
}

uint64_t sub_189016720()
{
  unint64_t v1 = v0[1];
  uint64_t v2 = 0x616D6D6F63627553LL;
  uint64_t v3 = 0x736E6F6974704FLL;
  if (v1 != 2) {
    uint64_t v3 = *v0;
  }
  if (v1 != 1) {
    uint64_t v2 = v3;
  }
  if (v1) {
    uint64_t v4 = v2;
  }
  else {
    uint64_t v4 = 0x746E656D75677241LL;
  }
  sub_18901A138(*v0, v1);
  return v4;
}

uint64_t sub_1890167B4(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  unint64_t v4 = a2[1];
  switch(v3)
  {
    case 0LL:
      return !v4;
    case 1LL:
      return v4 == 1;
    case 2LL:
      return v4 == 2;
  }

  if (v4 < 3) {
    return 0LL;
  }
  if (*a1 == *a2 && v3 == v4) {
    return 1LL;
  }
  return sub_189067F10();
}

unint64_t sub_18901682C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_18901BE88();
  *a1 = result;
  a1[1] = v3;
  return result;
}

BOOL sub_18901688C(void *a1)
{
  unint64_t v1 = a1[1];
  uint64_t v2 = *a1 & 0xFFFFFFFFFFFFLL;
  if ((v1 & 0x2000000000000000LL) != 0) {
    uint64_t v2 = HIBYTE(v1) & 0xF;
  }
  return v2 != 0;
}

void sub_1890168AC(void *a1@<X8>)
{
  *a1 = MEMORY[0x18961AFE8];
}

uint64_t sub_1890168BC()
{
  uint64_t v2 = *(void *)(v0 + 24);
  unint64_t v1 = *(void *)(v0 + 32);
  uint64_t v3 = HIBYTE(v1) & 0xF;
  if ((v1 & 0x2000000000000000LL) == 0) {
    uint64_t v3 = v2 & 0xFFFFFFFFFFFFLL;
  }
  if (!v3) {
    return 0LL;
  }
  swift_bridgeObjectRetain();
  sub_189016964(7LL, v2, v1);
  swift_bridgeObjectRelease();
  sub_18906788C();
  swift_bridgeObjectRelease();
  return 0x203A6567617355LL;
}

uint64_t sub_189016964(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v27 = 10LL;
  unint64_t v28 = 0xE100000000000000LL;
  unint64_t v25 = &v27;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1890266AC(1LL, 0, sub_189009954, (uint64_t)v24, a2, a3);
  unint64_t v7 = v6;
  if (*((void *)v6 + 2) != 2LL)
  {
    uint64_t v27 = (uint64_t)v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C760FF8);
    sub_189009B3C(&qword_18C761000, &qword_18C760FF8, MEMORY[0x189618470]);
    sub_189009970();
    uint64_t v22 = sub_18906797C();
    swift_bridgeObjectRelease();
    return v22;
  }

  uint64_t v8 = *((void *)v6 + 4);
  uint64_t v9 = *((void *)v6 + 5);
  uint64_t v10 = *((void *)v6 + 6);
  uint64_t v11 = *((void *)v6 + 7);
  swift_bridgeObjectRetain();
  uint64_t v12 = MEMORY[0x1895DC8B4](v8, v9, v10, v11);
  unint64_t v14 = v13;
  swift_bridgeObjectRelease();
  uint64_t v27 = v12;
  unint64_t v28 = v14;
  uint64_t result = sub_18906788C();
  if (*((void *)v7 + 2) >= 2uLL)
  {
    unint64_t v16 = *((void *)v7 + 8);
    unint64_t v17 = *((void *)v7 + 9);
    uint64_t v18 = *((void *)v7 + 10);
    swift_bridgeObjectRetain();
    uint64_t v19 = swift_bridgeObjectRelease();
    v26[0] = 10LL;
    v26[1] = 0xE100000000000000LL;
    MEMORY[0x1895F8858](v19);
    v23[2] = v26;
    swift_bridgeObjectRetain();
    unint64_t v20 = sub_189026294(0x7FFFFFFFFFFFFFFFLL, 0, sub_18901A188, (uint64_t)v23, v16, v17, v18);
    MEMORY[0x1895DC998](32LL, 0xE100000000000000LL, a1);
    uint64_t v21 = sub_18900F144(v20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v26[0] = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C760FF8);
    sub_189009B3C(&qword_18C761000, &qword_18C760FF8, MEMORY[0x189618470]);
    sub_189009970();
    sub_18906797C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_18906788C();
    swift_bridgeObjectRelease();
    return v27;
  }

  __break(1u);
  return result;
}

BOOL sub_189016C14()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2) {
    return 0LL;
  }
  for (uint64_t i = v1 + 48; *(void *)(i - 8) != 1LL; i += 48LL)
  {
    if (!--v2) {
      return 0LL;
    }
  }

  return *(void *)(*(void *)i + 16LL) != 0LL;
}

char *sub_189016C58(unsigned __int8 *a1)
{
  uint64_t v1 = 1886152040LL;
  int v2 = *a1;
  if (sub_189067904() == 95 && v3 == 0xE100000000000000LL)
  {
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }

  char v5 = sub_189067F10();
  swift_bridgeObjectRelease();
  if ((v5 & 1) != 0)
  {
LABEL_8:
    unint64_t v7 = sub_189058224(1uLL, 1886152040LL, 0xE400000000000000LL);
    uint64_t v1 = MEMORY[0x1895DC8B4](v7);
    unint64_t v6 = v8;
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }

  unint64_t v6 = 0xE400000000000000LL;
LABEL_9:
  swift_bridgeObjectRetain();
  uint64_t v9 = swift_bridgeObjectRetain();
  uint64_t v10 = sub_189038EA0(v9, v1, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  uint64_t v11 = *(void *)(v10 + 16);
  if (!v11)
  {
    swift_bridgeObjectRelease();
    unint64_t v13 = (char *)MEMORY[0x18961AFE8];
    goto LABEL_25;
  }

  swift_bridgeObjectRetain();
  uint64_t v12 = (unsigned __int8 *)(v10 + 48);
  unint64_t v13 = (char *)MEMORY[0x18961AFE8];
  do
  {
    uint64_t v16 = *((void *)v12 - 2);
    uint64_t v15 = *((void *)v12 - 1);
    unsigned int v17 = *v12;
    if (v2)
    {
      if (v17 >> 6)
      {
        if (v17 >> 6 == 1) {
          goto LABEL_12;
        }
        uint64_t v21 = 0LL;
        unint64_t v22 = 0xE000000000000000LL;
        swift_bridgeObjectRetain();
        sub_18906788C();
        sub_18906788C();
        sub_189067CD0();
        sub_188FFCF98(v16, v15, v17);
        uint64_t v16 = 0LL;
        uint64_t v15 = 0xE000000000000000LL;
        LOBYTE(v17) = 0x80;
      }

      else
      {
        uint64_t v21 = 0LL;
        unint64_t v22 = 0xE000000000000000LL;
        swift_bridgeObjectRetain();
        sub_18906788C();
        sub_18906788C();
        sub_189067CD0();
        sub_188FFCF98(v16, v15, v17);
        LOBYTE(v17) = 0;
        uint64_t v16 = 0LL;
        uint64_t v15 = 0xE000000000000000LL;
      }
    }

    else
    {
      sub_188FFCF80(*((void *)v12 - 2), *((void *)v12 - 1), *v12);
    }

    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v13 = sub_189057094(0LL, *((void *)v13 + 2) + 1LL, 1, v13);
    }
    unint64_t v19 = *((void *)v13 + 2);
    unint64_t v18 = *((void *)v13 + 3);
    if (v19 >= v18 >> 1) {
      unint64_t v13 = sub_189057094((char *)(v18 > 1), v19 + 1, 1, v13);
    }
    *((void *)v13 + 2) = v19 + 1;
    unint64_t v14 = &v13[24 * v19];
    *((void *)v14 + 4) = v16;
    *((void *)v14 + 5) = v15;
    v14[48] = v17;
LABEL_12:
    v12 += 24;
    --v11;
  }

  while (v11);
  swift_bridgeObjectRelease_n();
LABEL_25:
  uint64_t v21 = v13;
  swift_bridgeObjectRetain();
  sub_1890171D4(&v21);
  swift_bridgeObjectRelease();
  return v21;
}

unint64_t sub_189016F70(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v14 = a4 >> 14;
  if (a4 >> 14 == a3 >> 14) {
    return 0LL;
  }
  if (sub_189067AF0() == a1 && v8 == a2)
  {
    unint64_t v4 = a3;
LABEL_6:
    swift_bridgeObjectRelease();
  }

  else
  {
    char v9 = sub_189067F10();
    swift_bridgeObjectRelease();
    if ((v9 & 1) != 0)
    {
      return a3;
    }

    else
    {
      while (1)
      {
        unint64_t v11 = sub_189067AC0();
        if (v11 >> 14 == v14) {
          return 0LL;
        }
        unint64_t v4 = v11;
        if (sub_189067AF0() == a1 && v12 == a2) {
          goto LABEL_6;
        }
        char v10 = sub_189067F10();
        swift_bridgeObjectRelease();
        if ((v10 & 1) != 0) {
          return v4;
        }
      }
    }
  }

  return v4;
}

unint64_t sub_1890170E8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000LL) == 0) {
    uint64_t v4 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (!v4) {
    return 0LL;
  }
  uint64_t v7 = 4 * v4;
  unint64_t v8 = 15LL;
  while (sub_189067904() != a1 || v9 != a2)
  {
    char v10 = sub_189067F10();
    swift_bridgeObjectRelease();
    if ((v10 & 1) != 0) {
      return v8;
    }
    unint64_t v8 = sub_189067850();
    if (v7 == v8 >> 14) {
      return 0LL;
    }
  }

  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1890171D4(char **a1)
{
  int v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int v2 = sub_1890408D4((uint64_t)v2);
  }
  uint64_t v3 = *((void *)v2 + 2);
  v5[0] = (uint64_t)(v2 + 32);
  v5[1] = v3;
  uint64_t result = sub_18901723C(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_18901723C(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = a1[1];
  uint64_t result = sub_189067E68();
  if (result >= v4)
  {
    if (v4 < 0) {
      goto LABEL_179;
    }
    if (v4) {
      return sub_189017DDC(0LL, v4, 1LL, a1);
    }
    return result;
  }

  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_178;
  }
  uint64_t v123 = result;
  uint64_t v120 = a1;
  if (v4 <= 1)
  {
    uint64_t v8 = MEMORY[0x18961AFE8];
    uint64_t v132 = (char *)(MEMORY[0x18961AFE8] + 32LL);
    uint64_t v122 = MEMORY[0x18961AFE8];
    if (v4 != 1)
    {
      unint64_t v11 = *(void *)(MEMORY[0x18961AFE8] + 16LL);
LABEL_144:
      if (v11 >= 2)
      {
        uint64_t v114 = *v120;
        do
        {
          unint64_t v115 = v11 - 2;
          if (v11 < 2) {
            goto LABEL_173;
          }
          if (!v114) {
            goto LABEL_186;
          }
          uint64_t v116 = *(void *)(v8 + 32 + 16 * v115);
          uint64_t v117 = *(void *)(v8 + 32 + 16 * (v11 - 1) + 8);
          uint64_t result = sub_1890180AC( (char *)(v114 + 24 * v116),  (char *)(v114 + 24LL * *(void *)(v8 + 32 + 16 * (v11 - 1))),  v114 + 24 * v117,  v132);
          if (v2) {
            break;
          }
          if (v117 < v116) {
            goto LABEL_174;
          }
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            uint64_t result = (uint64_t)sub_1890408C0(v8);
            uint64_t v8 = result;
          }

          if (v115 >= *(void *)(v8 + 16)) {
            goto LABEL_175;
          }
          uint64_t v118 = (void *)(v8 + 32 + 16 * v115);
          *uint64_t v118 = v116;
          v118[1] = v117;
          unint64_t v119 = *(void *)(v8 + 16);
          if (v11 > v119) {
            goto LABEL_176;
          }
          uint64_t result = (uint64_t)memmove( (void *)(v8 + 32 + 16 * (v11 - 1)),  (const void *)(v8 + 32 + 16 * v11),  16 * (v119 - v11));
          *(void *)(v8 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v119 - 1;
          unint64_t v11 = v119 - 1;
        }

        while (v119 > 2);
      }

LABEL_155:
      swift_bridgeObjectRelease();
      *(void *)(v122 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 0LL;
      return swift_bridgeObjectRelease();
    }
  }

  else
  {
    uint64_t v7 = v6 >> 1;
    uint64_t result = sub_1890679E8();
    *(void *)(result + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v7;
    uint64_t v122 = result;
    uint64_t v132 = (char *)(result + 32);
  }

  uint64_t v9 = 0LL;
  uint64_t v10 = *a1;
  uint64_t v121 = *a1 + 64;
  uint64_t v8 = MEMORY[0x18961AFE8];
  uint64_t v129 = v4;
  uint64_t v133 = *a1;
  while (2)
  {
    uint64_t v12 = v9;
    uint64_t v13 = v9 + 1;
    uint64_t v130 = v9;
    if (v9 + 1 >= v4) {
      goto LABEL_64;
    }
    uint64_t v124 = v8;
    uint64_t v126 = v2;
    uint64_t v14 = v10 + 24 * v13;
    uint64_t v15 = *(void *)v14;
    uint64_t v16 = *(void *)(v14 + 8);
    unsigned int v17 = *(unsigned __int8 *)(v14 + 16);
    uint64_t v18 = v10 + 24 * v9;
    uint64_t v19 = *(void *)v18;
    uint64_t v20 = *(void *)(v18 + 8);
    unsigned int v21 = *(unsigned __int8 *)(v18 + 16);
    if (v21 >> 6)
    {
      if (v21 >> 6 == 1)
      {
        uint64_t v140 = 0LL;
        unint64_t v146 = 0xE000000000000000LL;
        sub_188FFCF80(v15, v16, v17);
        sub_188FFCF80(v19, v20, v21);
        sub_18906788C();
        sub_1890677B4();
        goto LABEL_22;
      }

      uint64_t v140 = 45LL;
      unint64_t v22 = 0xE100000000000000LL;
    }

    else
    {
      uint64_t v140 = 11565LL;
      unint64_t v22 = 0xE200000000000000LL;
    }

    unint64_t v146 = v22;
    sub_188FFCF80(v15, v16, v17);
    sub_188FFCF80(v19, v20, v21);
    sub_18906788C();
LABEL_22:
    uint64_t v23 = v140;
    unint64_t v24 = v146;
    if (v17 >> 6)
    {
      if (v17 >> 6 == 1)
      {
        uint64_t v141 = 0LL;
        unint64_t v147 = 0xE000000000000000LL;
        sub_18906788C();
        sub_1890677B4();
        goto LABEL_28;
      }

      uint64_t v141 = 45LL;
      unint64_t v25 = 0xE100000000000000LL;
    }

    else
    {
      uint64_t v141 = 11565LL;
      unint64_t v25 = 0xE200000000000000LL;
    }

    unint64_t v147 = v25;
    sub_18906788C();
LABEL_28:
    if (v23 == v141 && v24 == v147) {
      int v138 = 0;
    }
    else {
      int v138 = sub_189067F10();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_188FFCF98(v19, v20, v21);
    uint64_t result = sub_188FFCF98(v15, v16, v17);
    uint64_t v4 = v129;
    uint64_t v12 = v130;
    uint64_t v13 = v130 + 2;
    if (v130 + 2 >= v129) {
      goto LABEL_55;
    }
    uint64_t v134 = v130 + 2;
    uint64_t v26 = (unsigned __int8 *)(v121 + 24 * v130);
    while (1)
    {
      uint64_t v27 = *((void *)v26 - 2);
      uint64_t v28 = *((void *)v26 - 1);
      unsigned int v29 = *v26;
      uint64_t v31 = *((void *)v26 - 5);
      uint64_t v30 = *((void *)v26 - 4);
      unsigned int v32 = *(v26 - 24);
      uint64_t v152 = v27;
      if (v32 >> 6)
      {
        if (v32 >> 6 == 1)
        {
          uint64_t v142 = 0LL;
          unint64_t v148 = 0xE000000000000000LL;
          sub_188FFCF80(v27, v28, v29);
          sub_188FFCF80(v31, v30, v32);
          sub_18906788C();
          sub_1890677B4();
          goto LABEL_40;
        }

        uint64_t v142 = 45LL;
        unint64_t v33 = 0xE100000000000000LL;
      }

      else
      {
        uint64_t v142 = 11565LL;
        unint64_t v33 = 0xE200000000000000LL;
      }

      unint64_t v148 = v33;
      sub_188FFCF80(v27, v28, v29);
      sub_188FFCF80(v31, v30, v32);
      sub_18906788C();
LABEL_40:
      uint64_t v34 = v142;
      unint64_t v35 = v148;
      if (!(v29 >> 6))
      {
        uint64_t v143 = 11565LL;
        unint64_t v36 = 0xE200000000000000LL;
LABEL_45:
        unint64_t v149 = v36;
        sub_18906788C();
        goto LABEL_46;
      }

      if (v29 >> 6 != 1)
      {
        uint64_t v143 = 45LL;
        unint64_t v36 = 0xE100000000000000LL;
        goto LABEL_45;
      }

      uint64_t v143 = 0LL;
      unint64_t v149 = 0xE000000000000000LL;
      sub_18906788C();
      sub_1890677B4();
LABEL_46:
      int v37 = v34 == v143 && v35 == v149 ? 0 : sub_189067F10();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_188FFCF98(v31, v30, v32);
      uint64_t result = sub_188FFCF98(v152, v28, v29);
      if (((v138 ^ v37) & 1) != 0) {
        break;
      }
      v26 += 24;
      if (v129 == ++v134)
      {
        uint64_t v4 = v129;
        uint64_t v13 = v129;
        goto LABEL_54;
      }
    }

    uint64_t v4 = v129;
    uint64_t v13 = v134;
LABEL_54:
    uint64_t v12 = v130;
LABEL_55:
    uint64_t v8 = v124;
    uint64_t v2 = v126;
    uint64_t v10 = v133;
    if ((v138 & 1) != 0)
    {
      if (v13 < v12) {
        goto LABEL_180;
      }
      if (v12 < v13)
      {
        uint64_t v38 = 24 * v13;
        uint64_t v39 = 24 * v12;
        uint64_t v40 = v13;
        do
        {
          if (v12 != --v40)
          {
            if (!v133) {
              goto LABEL_185;
            }
            uint64_t v41 = v133 + v39;
            uint64_t v42 = v133 + v38;
            char v43 = *(_BYTE *)(v133 + v39 + 16);
            __int128 v44 = *(_OWORD *)(v133 + v39);
            uint64_t v45 = *(void *)(v133 + v38 - 8);
            *(_OWORD *)uint64_t v41 = *(_OWORD *)(v133 + v38 - 24);
            *(void *)(v41 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v45;
            *(_OWORD *)(v42 - 24) = v44;
            *(_BYTE *)(v42 - 8) = v43;
          }

          ++v12;
          v38 -= 24LL;
          v39 += 24LL;
        }

        while (v12 < v40);
        uint64_t v12 = v130;
      }
    }

LABEL_64:
    if (v13 >= v4) {
      goto LABEL_96;
    }
    if (__OFSUB__(v13, v12)) {
      goto LABEL_177;
    }
    if (v13 - v12 >= v123)
    {
LABEL_95:
      uint64_t v12 = v130;
      goto LABEL_96;
    }

    uint64_t v12 = v130;
    uint64_t v46 = v130 + v123;
    if (__OFADD__(v130, v123)) {
      goto LABEL_181;
    }
    if (v46 >= v4) {
      uint64_t v46 = v4;
    }
    if (v46 >= v130)
    {
      if (v13 != v46)
      {
        uint64_t v127 = v2;
        uint64_t v128 = v46;
        uint64_t v125 = v8;
        uint64_t v47 = v10 + 24 * v13;
        while (1)
        {
          uint64_t v135 = v13;
          uint64_t v48 = v130;
          uint64_t v131 = v47;
          uint64_t v49 = v47;
          while (1)
          {
            uint64_t v50 = *(void *)v47;
            uint64_t v51 = *(void *)(v47 + 8);
            unsigned int v52 = *(unsigned __int8 *)(v47 + 16);
            uint64_t v54 = *(void *)(v49 - 24);
            v49 -= 24LL;
            uint64_t v53 = v54;
            uint64_t v55 = *(void *)(v47 - 16);
            unsigned int v56 = *(unsigned __int8 *)(v47 - 8);
            uint64_t v153 = *(void *)v47;
            uint64_t v139 = v51;
            uint64_t v137 = v54;
            if (v56 >> 6)
            {
              if (v56 >> 6 == 1)
              {
                uint64_t v144 = 0LL;
                unint64_t v150 = 0xE000000000000000LL;
                sub_188FFCF80(v50, v51, v52);
                sub_188FFCF80(v53, v55, v56);
                sub_18906788C();
                sub_1890677B4();
                goto LABEL_82;
              }

              uint64_t v144 = 45LL;
              unint64_t v57 = 0xE100000000000000LL;
            }

            else
            {
              uint64_t v144 = 11565LL;
              unint64_t v57 = 0xE200000000000000LL;
            }

            unint64_t v150 = v57;
            sub_188FFCF80(v50, v51, v52);
            sub_188FFCF80(v53, v55, v56);
            sub_18906788C();
LABEL_82:
            uint64_t v58 = v144;
            unint64_t v59 = v150;
            if (!(v52 >> 6))
            {
              uint64_t v145 = 11565LL;
              unint64_t v60 = 0xE200000000000000LL;
LABEL_87:
              unint64_t v151 = v60;
              sub_18906788C();
              goto LABEL_88;
            }

            if (v52 >> 6 != 1)
            {
              uint64_t v145 = 45LL;
              unint64_t v60 = 0xE100000000000000LL;
              goto LABEL_87;
            }

            uint64_t v145 = 0LL;
            unint64_t v151 = 0xE000000000000000LL;
            sub_18906788C();
            sub_1890677B4();
LABEL_88:
            if (v58 == v145 && v59 == v151) {
              break;
            }
            char v61 = sub_189067F10();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_188FFCF98(v137, v55, v56);
            uint64_t result = sub_188FFCF98(v153, v139, v52);
            if ((v61 & 1) == 0) {
              goto LABEL_74;
            }
            if (!v133) {
              goto LABEL_183;
            }
            char v62 = *(_BYTE *)(v47 + 16);
            __int128 v63 = *(_OWORD *)v47;
            *(_OWORD *)uint64_t v47 = *(_OWORD *)v49;
            *(void *)(v47 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = *(void *)(v49 + 16);
            *(_OWORD *)(v47 - 24) = v63;
            *(_BYTE *)(v47 - 8) = v62;
            ++v48;
            uint64_t v47 = v49;
            if (v135 == v48) {
              goto LABEL_74;
            }
          }

          swift_bridgeObjectRelease_n();
          sub_188FFCF98(v137, v55, v56);
          uint64_t result = sub_188FFCF98(v153, v139, v52);
LABEL_74:
          uint64_t v13 = v135 + 1;
          uint64_t v47 = v131 + 24;
          if (v135 + 1 == v128)
          {
            uint64_t v2 = v127;
            uint64_t v13 = v128;
            uint64_t v8 = v125;
            uint64_t v10 = v133;
            goto LABEL_95;
          }
        }
      }

LABEL_96:
      if (v13 < v12) {
        goto LABEL_172;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1890407C8(0LL, *(void *)(v8 + 16) + 1LL, 1, (char *)v8);
        uint64_t v8 = result;
      }

      unint64_t v65 = *(void *)(v8 + 16);
      unint64_t v64 = *(void *)(v8 + 24);
      unint64_t v11 = v65 + 1;
      if (v65 >= v64 >> 1)
      {
        uint64_t result = (uint64_t)sub_1890407C8((char *)(v64 > 1), v65 + 1, 1, (char *)v8);
        uint64_t v8 = result;
      }

      *(void *)(v8 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v11;
      uint64_t v66 = v8 + 32;
      uint64_t v67 = (uint64_t *)(v8 + 32 + 16 * v65);
      *uint64_t v67 = v130;
      v67[1] = v13;
      uint64_t v136 = v13;
      if (!v65)
      {
        unint64_t v11 = 1LL;
LABEL_14:
        uint64_t v4 = v129;
        uint64_t v9 = v136;
        if (v136 >= v129) {
          goto LABEL_144;
        }
        continue;
      }

LABEL_102:
      unint64_t v68 = v11 - 1;
      if (v11 >= 4)
      {
        unint64_t v73 = v66 + 16 * v11;
        uint64_t v74 = *(void *)(v73 - 64);
        uint64_t v75 = *(void *)(v73 - 56);
        BOOL v79 = __OFSUB__(v75, v74);
        uint64_t v76 = v75 - v74;
        if (v79) {
          goto LABEL_161;
        }
        uint64_t v78 = *(void *)(v73 - 48);
        uint64_t v77 = *(void *)(v73 - 40);
        BOOL v79 = __OFSUB__(v77, v78);
        uint64_t v71 = v77 - v78;
        char v72 = v79;
        if (v79) {
          goto LABEL_162;
        }
        unint64_t v80 = v11 - 2;
        uint64_t v81 = (uint64_t *)(v66 + 16 * (v11 - 2));
        uint64_t v83 = *v81;
        uint64_t v82 = v81[1];
        BOOL v79 = __OFSUB__(v82, v83);
        uint64_t v84 = v82 - v83;
        if (v79) {
          goto LABEL_163;
        }
        BOOL v79 = __OFADD__(v71, v84);
        uint64_t v85 = v71 + v84;
        if (v79) {
          goto LABEL_165;
        }
        if (v85 >= v76)
        {
          char v103 = (uint64_t *)(v66 + 16 * v68);
          uint64_t v105 = *v103;
          uint64_t v104 = v103[1];
          BOOL v79 = __OFSUB__(v104, v105);
          uint64_t v106 = v104 - v105;
          if (v79) {
            goto LABEL_171;
          }
          BOOL v96 = v71 < v106;
        }

        else
        {
LABEL_115:
          if ((v72 & 1) != 0) {
            goto LABEL_164;
          }
          unint64_t v80 = v11 - 2;
          char v86 = (uint64_t *)(v66 + 16 * (v11 - 2));
          uint64_t v88 = *v86;
          uint64_t v87 = v86[1];
          BOOL v89 = __OFSUB__(v87, v88);
          uint64_t v90 = v87 - v88;
          char v91 = v89;
          if (v89) {
            goto LABEL_166;
          }
          uint64_t v92 = (uint64_t *)(v66 + 16 * v68);
          uint64_t v94 = *v92;
          uint64_t v93 = v92[1];
          BOOL v79 = __OFSUB__(v93, v94);
          uint64_t v95 = v93 - v94;
          if (v79) {
            goto LABEL_168;
          }
          if (__OFADD__(v90, v95)) {
            goto LABEL_170;
          }
          if (v90 + v95 < v71) {
            goto LABEL_127;
          }
          BOOL v96 = v71 < v95;
        }

        if (v96) {
          unint64_t v68 = v80;
        }
      }

      else
      {
        if (v11 == 3)
        {
          uint64_t v70 = *(void *)(v8 + 32);
          uint64_t v69 = *(void *)(v8 + 40);
          BOOL v79 = __OFSUB__(v69, v70);
          uint64_t v71 = v69 - v70;
          char v72 = v79;
          goto LABEL_115;
        }

        uint64_t v97 = *(void *)(v8 + 32);
        uint64_t v98 = *(void *)(v8 + 40);
        BOOL v79 = __OFSUB__(v98, v97);
        uint64_t v90 = v98 - v97;
        char v91 = v79;
LABEL_127:
        if ((v91 & 1) != 0) {
          goto LABEL_167;
        }
        __int128 v99 = (uint64_t *)(v66 + 16 * v68);
        uint64_t v101 = *v99;
        uint64_t v100 = v99[1];
        BOOL v79 = __OFSUB__(v100, v101);
        uint64_t v102 = v100 - v101;
        if (v79) {
          goto LABEL_169;
        }
        if (v102 < v90) {
          goto LABEL_14;
        }
      }

      unint64_t v107 = v68 - 1;
      if (v68 - 1 >= v11)
      {
        __break(1u);
LABEL_158:
        __break(1u);
LABEL_159:
        __break(1u);
LABEL_160:
        __break(1u);
LABEL_161:
        __break(1u);
LABEL_162:
        __break(1u);
LABEL_163:
        __break(1u);
LABEL_164:
        __break(1u);
LABEL_165:
        __break(1u);
LABEL_166:
        __break(1u);
LABEL_167:
        __break(1u);
LABEL_168:
        __break(1u);
LABEL_169:
        __break(1u);
LABEL_170:
        __break(1u);
LABEL_171:
        __break(1u);
LABEL_172:
        __break(1u);
LABEL_173:
        __break(1u);
LABEL_174:
        __break(1u);
LABEL_175:
        __break(1u);
LABEL_176:
        __break(1u);
LABEL_177:
        __break(1u);
LABEL_178:
        __break(1u);
LABEL_179:
        __break(1u);
LABEL_180:
        __break(1u);
LABEL_181:
        __break(1u);
        break;
      }

      if (!v10) {
        goto LABEL_184;
      }
      uint64_t v108 = v10;
      unint64_t v109 = (uint64_t *)(v66 + 16 * v107);
      uint64_t v110 = *v109;
      unint64_t v111 = (void *)(v66 + 16 * v68);
      uint64_t v112 = v111[1];
      uint64_t result = sub_1890180AC((char *)(v108 + 24 * *v109), (char *)(v108 + 24LL * *v111), v108 + 24 * v112, v132);
      if (v2) {
        goto LABEL_155;
      }
      if (v112 < v110) {
        goto LABEL_158;
      }
      if (v68 > *(void *)(v8 + 16)) {
        goto LABEL_159;
      }
      *unint64_t v109 = v110;
      *(void *)(v66 + 16 * v107 + 8) = v112;
      unint64_t v113 = *(void *)(v8 + 16);
      if (v68 >= v113) {
        goto LABEL_160;
      }
      unint64_t v11 = v113 - 1;
      uint64_t result = (uint64_t)memmove((void *)(v66 + 16 * v68), v111 + 2, 16 * (v113 - 1 - v68));
      *(void *)(v8 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v113 - 1;
      uint64_t v10 = v133;
      if (v113 <= 2) {
        goto LABEL_14;
      }
      goto LABEL_102;
    }

    break;
  }

  __break(1u);
LABEL_183:
  __break(1u);
LABEL_184:
  __break(1u);
LABEL_185:
  __break(1u);
LABEL_186:
  __break(1u);
  return result;
}

uint64_t sub_189017DDC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v20 = result;
  uint64_t v23 = a3;
  if (a3 != a2)
  {
    uint64_t v22 = *a4;
    uint64_t v4 = *a4 + 24 * a3;
LABEL_6:
    uint64_t v5 = v20;
    uint64_t v21 = v4;
    uint64_t v6 = v4;
    while (1)
    {
      uint64_t v30 = *(void *)v4;
      uint64_t v25 = *(void *)(v4 + 8);
      unsigned int v7 = *(unsigned __int8 *)(v4 + 16);
      uint64_t v9 = *(void *)(v6 - 24);
      v6 -= 24LL;
      uint64_t v8 = v9;
      uint64_t v10 = *(void *)(v4 - 16);
      unsigned int v11 = *(unsigned __int8 *)(v4 - 8);
      uint64_t v24 = v10;
      if (v11 >> 6)
      {
        if (v11 >> 6 == 1)
        {
          uint64_t v26 = 0LL;
          unint64_t v28 = 0xE000000000000000LL;
          sub_188FFCF80(v30, v25, v7);
          sub_188FFCF80(v8, v10, v11);
          sub_18906788C();
          sub_1890677B4();
          goto LABEL_13;
        }

        uint64_t v26 = 45LL;
        unint64_t v12 = 0xE100000000000000LL;
      }

      else
      {
        uint64_t v26 = 11565LL;
        unint64_t v12 = 0xE200000000000000LL;
      }

      unint64_t v28 = v12;
      sub_188FFCF80(v30, v25, v7);
      sub_188FFCF80(v8, v10, v11);
      sub_18906788C();
LABEL_13:
      uint64_t v13 = v26;
      unint64_t v14 = v28;
      if (!(v7 >> 6))
      {
        uint64_t v27 = 11565LL;
        unint64_t v15 = 0xE200000000000000LL;
LABEL_18:
        unint64_t v29 = v15;
        sub_18906788C();
        goto LABEL_19;
      }

      if (v7 >> 6 != 1)
      {
        uint64_t v27 = 45LL;
        unint64_t v15 = 0xE100000000000000LL;
        goto LABEL_18;
      }

      uint64_t v27 = 0LL;
      unint64_t v29 = 0xE000000000000000LL;
      sub_18906788C();
      sub_1890677B4();
LABEL_19:
      if (v13 == v27 && v14 == v29)
      {
        swift_bridgeObjectRelease_n();
        sub_188FFCF98(v8, v24, v11);
        uint64_t result = sub_188FFCF98(v30, v25, v7);
LABEL_5:
        uint64_t v4 = v21 + 24;
        if (++v23 == a2) {
          return result;
        }
        goto LABEL_6;
      }

      char v16 = sub_189067F10();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_188FFCF98(v8, v24, v11);
      uint64_t result = sub_188FFCF98(v30, v25, v7);
      if ((v16 & 1) == 0) {
        goto LABEL_5;
      }
      if (!v22)
      {
        __break(1u);
        return result;
      }

      char v17 = *(_BYTE *)(v4 + 16);
      __int128 v18 = *(_OWORD *)v4;
      *(_OWORD *)uint64_t v4 = *(_OWORD *)v6;
      *(void *)(v4 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = *(void *)(v6 + 16);
      *(_OWORD *)(v4 - 24) = v18;
      *(_BYTE *)(v4 - 8) = v17;
      ++v5;
      uint64_t v4 = v6;
      if (v23 == v5) {
        goto LABEL_5;
      }
    }
  }

  return result;
}

uint64_t sub_1890180AC(char *__dst, char *__src, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v5 = __src;
  uint64_t v6 = __dst;
  int64_t v7 = __src - __dst;
  int64_t v8 = (__src - __dst) / 24;
  uint64_t v9 = a3 - (void)__src;
  uint64_t v10 = (uint64_t)(a3 - (void)__src) / 24;
  if (v8 >= v10)
  {
    uint64_t v27 = 24 * v10;
    if (a4 != __src || &__src[v27] <= a4) {
      memmove(a4, __src, 24 * v10);
    }
    unint64_t v12 = &v4[v27];
    if (v6 >= v5 || v9 < 24) {
      goto LABEL_66;
    }
    unint64_t v28 = a3 - 24;
    unsigned int v56 = v6;
    uint64_t v58 = v4;
    while (1)
    {
      uint64_t v29 = *((void *)v12 - 3);
      uint64_t v30 = *((void *)v12 - 2);
      uint64_t v31 = v12 - 24;
      unsigned int v32 = *(v12 - 8);
      uint64_t v33 = *((void *)v5 - 3);
      uint64_t v34 = v5 - 24;
      uint64_t v52 = *((void *)v5 - 2);
      unsigned int v35 = *(v5 - 8);
      unint64_t v68 = v5;
      uint64_t v54 = v12;
      uint64_t v49 = v33;
      unsigned __int8 v48 = *(v5 - 8);
      if (v35 >> 6)
      {
        if (v35 >> 6 == 1)
        {
          uint64_t v61 = 0LL;
          unint64_t v65 = 0xE000000000000000LL;
          sub_188FFCF80(v29, v30, v32);
          sub_188FFCF80(v33, v52, v35);
          sub_18906788C();
          sub_1890677B4();
          goto LABEL_43;
        }

        uint64_t v61 = 45LL;
        unint64_t v36 = 0xE100000000000000LL;
      }

      else
      {
        uint64_t v61 = 11565LL;
        unint64_t v36 = 0xE200000000000000LL;
      }

      unint64_t v65 = v36;
      sub_188FFCF80(v29, v30, v32);
      sub_188FFCF80(v33, v52, v35);
      sub_18906788C();
LABEL_43:
      uint64_t v38 = v61;
      unint64_t v37 = v65;
      unsigned __int8 v50 = v32;
      if (!(v32 >> 6))
      {
        uint64_t v62 = 11565LL;
        unint64_t v39 = 0xE200000000000000LL;
LABEL_48:
        unint64_t v66 = v39;
        sub_18906788C();
        goto LABEL_49;
      }

      if (v32 >> 6 != 1)
      {
        uint64_t v62 = 45LL;
        unint64_t v39 = 0xE100000000000000LL;
        goto LABEL_48;
      }

      uint64_t v62 = 0LL;
      unint64_t v66 = 0xE000000000000000LL;
      sub_18906788C();
      sub_1890677B4();
LABEL_49:
      uint64_t v40 = v30;
      if (v38 == v62 && v37 == v66)
      {
        uint64_t v41 = v29;
        char v42 = 0;
      }

      else
      {
        uint64_t v41 = v29;
        char v42 = sub_189067F10();
      }

      char v43 = (char *)(v28 + 24);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_188FFCF98(v49, v52, v48);
      sub_188FFCF98(v41, v40, v50);
      if ((v42 & 1) != 0)
      {
        uint64_t v4 = v58;
        unint64_t v12 = v54;
        if (v43 == v68)
        {
          uint64_t v5 = v34;
          unint64_t v44 = (unint64_t)v56;
          goto LABEL_63;
        }

        uint64_t v5 = v34;
      }

      else
      {
        uint64_t v4 = v58;
        uint64_t v34 = v31;
        if (v43 == v54)
        {
          unint64_t v12 = v31;
          uint64_t v5 = v68;
          unint64_t v44 = (unint64_t)v56;
          goto LABEL_63;
        }

        unint64_t v12 = v31;
        uint64_t v5 = v68;
      }

      unint64_t v44 = (unint64_t)v56;
LABEL_63:
      __int128 v45 = *(_OWORD *)v34;
      *(void *)(v28 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = *((void *)v34 + 2);
      *(_OWORD *)unint64_t v28 = v45;
LABEL_64:
      if ((unint64_t)v5 > v44)
      {
        v28 -= 24LL;
        if (v12 > v4) {
          continue;
        }
      }

      goto LABEL_66;
    }
  }

  size_t v11 = 24 * v8;
  if (a4 != __dst || &__dst[v11] <= a4) {
    memmove(a4, __dst, v11);
  }
  unint64_t v12 = &v4[v11];
  if ((unint64_t)v5 < a3 && v7 >= 24)
  {
    uint64_t v53 = &v4[v11];
    do
    {
      uint64_t v55 = v6;
      unint64_t v57 = v4;
      uint64_t v14 = *(void *)v5;
      uint64_t v13 = *((void *)v5 + 1);
      unsigned int v15 = v5[16];
      uint64_t v16 = *(void *)v4;
      uint64_t v17 = *((void *)v4 + 1);
      unsigned int v18 = v4[16];
      uint64_t v67 = v5;
      if (v18 >> 6)
      {
        if (v18 >> 6 == 1)
        {
          uint64_t v59 = 0LL;
          unint64_t v63 = 0xE000000000000000LL;
          sub_188FFCF80(v14, v13, v15);
          sub_188FFCF80(v16, v17, v18);
          sub_18906788C();
          sub_1890677B4();
          goto LABEL_14;
        }

        uint64_t v59 = 45LL;
        unint64_t v19 = 0xE100000000000000LL;
      }

      else
      {
        uint64_t v59 = 11565LL;
        unint64_t v19 = 0xE200000000000000LL;
      }

      unint64_t v63 = v19;
      sub_188FFCF80(v14, v13, v15);
      sub_188FFCF80(v16, v17, v18);
      sub_18906788C();
LABEL_14:
      uint64_t v21 = v59;
      unint64_t v20 = v63;
      if (!(v15 >> 6))
      {
        uint64_t v60 = 11565LL;
        unint64_t v22 = 0xE200000000000000LL;
LABEL_19:
        unint64_t v64 = v22;
        sub_18906788C();
        goto LABEL_20;
      }

      if (v15 >> 6 != 1)
      {
        uint64_t v60 = 45LL;
        unint64_t v22 = 0xE100000000000000LL;
        goto LABEL_19;
      }

      uint64_t v60 = 0LL;
      unint64_t v64 = 0xE000000000000000LL;
      sub_18906788C();
      sub_1890677B4();
LABEL_20:
      if (v21 == v60 && v20 == v64)
      {
        swift_bridgeObjectRelease_n();
        sub_188FFCF98(v16, v17, v18);
        sub_188FFCF98(v14, v13, v15);
LABEL_26:
        uint64_t v25 = v55;
        uint64_t v24 = v57;
        uint64_t v4 = v57 + 24;
        uint64_t v5 = v67;
        if (v55 == v57) {
          goto LABEL_28;
        }
LABEL_27:
        __int128 v26 = *(_OWORD *)v24;
        *((void *)v25 + 2) = *((void *)v24 + 2);
        *(_OWORD *)uint64_t v25 = v26;
        goto LABEL_28;
      }

      char v23 = sub_189067F10();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_188FFCF98(v16, v17, v18);
      sub_188FFCF98(v14, v13, v15);
      if ((v23 & 1) == 0) {
        goto LABEL_26;
      }
      uint64_t v24 = v67;
      uint64_t v5 = v67 + 24;
      uint64_t v25 = v55;
      uint64_t v4 = v57;
      if (v55 != v67) {
        goto LABEL_27;
      }
LABEL_28:
      uint64_t v6 = v25 + 24;
      unint64_t v12 = v53;
    }

    while (v4 < v53 && (unint64_t)v5 < a3);
  }

  uint64_t v5 = v6;
LABEL_66:
  size_t v46 = 24 * ((v12 - v4) / 24);
  if (v5 != v4 || v5 >= &v4[v46]) {
    memmove(v5, v4, v46);
  }
  return 1LL;
}

uint64_t sub_1890186DC(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (char v5 = sub_189067F10(), result = 0LL, (v5 & 1) != 0))
  {
    BOOL v7 = a1[2] == a2[2] && a1[3] == a2[3];
    if (v7 || (char v8 = sub_189067F10(), result = 0LL, (v8 & 1) != 0))
    {
      if (a1[4] == a2[4] && a1[5] == a2[5]) {
        return 1LL;
      }
      else {
        return sub_189067F10();
      }
    }
  }

  return result;
}

char *sub_18901877C(uint64_t a1, uint64_t a2)
{
  void (*v8)(__int128 *__return_ptr, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  char *v13;
  unint64_t v14;
  unint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v20;
  _OWORD v21[2];
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  _OWORD v40[6];
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  _BYTE v44[16];
  uint64_t v45[4];
  char *v46;
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return (char *)MEMORY[0x18961AFE8];
  }
  BOOL v4 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
  unint64_t v20 = a2 + 112;
  uint64_t v5 = v2 - 1;
  size_t v46 = (char *)MEMORY[0x18961AFE8];
  while (1)
  {
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    char v8 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(*v4 + 16);
    v8(&v31, v6, *v4);
    uint64_t v41 = v37;
    char v42 = v38;
    char v43 = v39;
    v40[2] = v33;
    v40[3] = v34;
    v40[4] = v35;
    v40[5] = v36;
    v40[0] = v31;
    v40[1] = v32;
    sub_189000568((uint64_t)v40);
    uint64_t v17 = v46;
    if (!v5) {
      goto LABEL_15;
    }
LABEL_14:
    size_t v46 = v17;
    v4 += 2;
    --v5;
  }

  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 24))(v6, v7);
  size_t v11 = v10;
  uint64_t v29 = v9;
  uint64_t v30 = v10;
  sub_18901A2E4(v20, (uint64_t)v44);
  sub_18901A2E4((uint64_t)v44, (uint64_t)v45);
  if (v45[0] && v6 == v45[0])
  {
    sub_18906788C();
    uint64_t v9 = v29;
    size_t v11 = v30;
  }

  v8(v21, v6, v7);
  unint64_t v37 = v26;
  uint64_t v38 = v27;
  unint64_t v39 = v28;
  uint64_t v33 = v22;
  uint64_t v34 = v23;
  unsigned int v35 = v24;
  unint64_t v36 = v25;
  uint64_t v31 = v21[0];
  unsigned int v32 = v21[1];
  unint64_t v12 = v22;
  swift_bridgeObjectRetain();
  sub_189000568((uint64_t)&v31);
  uint64_t v13 = v46;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v13 = sub_1890577C8(0LL, *((void *)v13 + 2) + 1LL, 1, v13);
  }
  unsigned int v15 = *((void *)v13 + 2);
  uint64_t v14 = *((void *)v13 + 3);
  uint64_t v16 = v13;
  if (v15 >= v14 >> 1) {
    uint64_t v16 = sub_1890577C8((char *)(v14 > 1), v15 + 1, 1, v13);
  }
  *((void *)v16 + 2) = v15 + 1;
  uint64_t v17 = v16;
  unsigned int v18 = &v16[48 * v15];
  *((void *)v18 + 4) = v9;
  *((void *)v18 + 5) = v11;
  *((_OWORD *)v18 + 3) = v12;
  *((void *)v18 + 8) = 0LL;
  *((void *)v18 + 9) = 0xE000000000000000LL;
  if (v5) {
    goto LABEL_14;
  }
LABEL_15:
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_1890189D4(uint64_t a1, unsigned __int8 *a2)
{
  if (!*(void *)(a1 + 16)) {
    return MEMORY[0x18961AFE8];
  }
  uint64_t v123 = *(void *)(a1 + 16);
  unint64_t v5 = *a2;
  int64_t v6 = MEMORY[0x18961AFE8];
  unint64_t v164 = sub_18901238C(MEMORY[0x18961AFE8]);
  uint64_t v124 = a1;
  uint64_t v7 = sub_18900CB24(v5, a1);
  uint64_t v129 = v8;
  unint64_t v130 = v7;
  int64_t v9 = *(void *)(v7 + 16);
  if (!v9)
  {
    uint64_t v126 = 0LL;
    uint64_t v128 = (char *)v6;
    size_t v11 = (char *)v6;
LABEL_139:
    (*(void (**)(__int128 *__return_ptr))(*(void *)(v124 + 16 * v123 + 24) + 16LL))(&v152);
    sub_189013FF4((uint64_t)&v152);
    uint64_t v113 = swift_bridgeObjectRetain();
    unint64_t v5 = (unint64_t)sub_18901877C(v113, (uint64_t)&v152);
    sub_189000568((uint64_t)&v152);
    swift_bridgeObjectRelease();
    sub_189000568((uint64_t)&v152);
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C760F78);
    uint64_t v114 = swift_allocObject();
    *(_OWORD *)(v114 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = xmmword_1890684B0;
    *(void *)(v114 + 32) = 0LL;
    *(void *)(v114 + 40) = 0LL;
    *(void *)(v114 + 48) = v11;
    *(void *)(v114 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = 0LL;
    *(void *)(v114 + 64) = 0xE000000000000000LL;
    *(_BYTE *)(v114 + 72) = 0;
    swift_bridgeObjectRetain();
    uint64_t v115 = swift_bridgeObjectRetain();
    unint64_t v2 = sub_18901520C(v115, (uint64_t *)&v164);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    sub_189058ACC(v2);
    int64_t v6 = *(void *)(v114 + 16);
    int64_t v10 = v6 + 2;
    if (__OFADD__(v6, 2LL))
    {
LABEL_159:
      __break(1u);
    }

    else
    {
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
      if (!(_DWORD)isUniquelyReferenced_nonNull_native || (unint64_t v2 = v114, v10 > *(void *)(v114 + 24) >> 1))
      {
        if (v6 <= v10) {
          int64_t v117 = v6 + 2;
        }
        else {
          int64_t v117 = v6;
        }
        unint64_t v2 = (unint64_t)sub_1890576B4(isUniquelyReferenced_nonNull_native, v117, 1, (char *)v114);
      }

      int64_t v10 = *(void *)(v2 + 16);
      unint64_t v3 = *(void *)(v2 + 24);
      int64_t v6 = v10 + 1;
      swift_bridgeObjectRetain();
      if (v10 < v3 >> 1) {
        goto LABEL_147;
      }
    }

    unint64_t v2 = (unint64_t)sub_1890576B4((char *)(v3 > 1), v6, 1, (char *)v2);
LABEL_147:
    *(void *)(v2 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v6;
    unint64_t v118 = v2 + 48 * v10;
    *(_OWORD *)(v118 + 32) = xmmword_189068D50;
    *(void *)(v118 + 48) = v128;
    *(void *)(v118 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = 0LL;
    *(void *)(v118 + 64) = 0xE000000000000000LL;
    *(_BYTE *)(v118 + 72) = 0;
    unint64_t v119 = *(void *)(v2 + 24);
    int64_t v120 = v10 + 2;
    swift_bridgeObjectRetain();
    if (v6 >= v119 >> 1) {
      unint64_t v2 = (unint64_t)sub_1890576B4((char *)(v119 > 1), v120, 1, (char *)v2);
    }
    *(void *)(v2 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v120;
    unint64_t v121 = v2 + 48 * v6;
    *(_OWORD *)(v121 + 32) = xmmword_189068D60;
    *(void *)(v121 + 48) = v5;
    *(void *)(v121 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = 0LL;
    *(void *)(v121 + 64) = 0xE000000000000000LL;
    *(_BYTE *)(v121 + 72) = 0;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_18901A258((uint64_t)v126);
    return v2;
  }

  unint64_t v3 = v7;
  int64_t v10 = 0LL;
  uint64_t v125 = 0LL;
  uint64_t v134 = v7 + 32;
  uint64_t v126 = sub_1890168AC;
  int64_t v127 = v6;
  size_t v11 = (char *)v6;
  uint64_t v128 = (char *)v6;
  int64_t v133 = *(void *)(v7 + 16);
  while (1)
  {
    while (1)
    {
      if (v10 >= v9)
      {
        __break(1u);
LABEL_152:
        __break(1u);
LABEL_153:
        __break(1u);
        goto LABEL_154;
      }

      if (v10 < 0) {
        goto LABEL_152;
      }
      uint64_t v136 = v11;
      int64_t v144 = v10;
      unint64_t v12 = (__int128 *)(v134 + 192 * v10);
      __int128 v13 = *v12;
      __int128 v14 = v12[1];
      __int128 v15 = v12[3];
      __int128 v154 = v12[2];
      __int128 v155 = v15;
      __int128 v152 = v13;
      __int128 v153 = v14;
      __int128 v16 = v12[4];
      __int128 v17 = v12[5];
      __int128 v18 = v12[7];
      __int128 v158 = v12[6];
      __int128 v159 = v18;
      __int128 v156 = v16;
      __int128 v157 = v17;
      __int128 v19 = v12[8];
      __int128 v20 = v12[9];
      __int128 v21 = v12[11];
      __int128 v162 = v12[10];
      __int128 v163 = v21;
      __int128 v160 = v19;
      __int128 v161 = v20;
      unint64_t v137 = *((void *)&v153 + 1);
      uint64_t v22 = v153;
      uint64_t v23 = *((void *)&v154 + 1);
      uint64_t v132 = v154;
      int v139 = v155;
      uint64_t v24 = *((void *)&v155 + 1);
      uint64_t v135 = *((void *)&v156 + 1);
      unint64_t v2 = v156;
      uint64_t v142 = v159;
      uint64_t v147 = v157;
      unint64_t v148 = *((void *)&v159 + 1);
      uint64_t v25 = *(void *)(*((void *)&v154 + 1) + 16LL);
      if (v25)
      {
        uint64_t v131 = v153;
        sub_188FFCFF4((uint64_t)&v152);
        swift_bridgeObjectRetain();
        __int128 v26 = (uint64_t *)(v23 + 40);
        int64_t v27 = v6;
        do
        {
          uint64_t v31 = *(v26 - 1);
          uint64_t v32 = *v26;
          uint64_t v33 = HIBYTE(*v26) & 0xF;
          if ((*v26 & 0x2000000000000000LL) == 0) {
            uint64_t v33 = v31 & 0xFFFFFFFFFFFFLL;
          }
          if (v33)
          {
            swift_bridgeObjectRetain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              sub_188FFF34C(0LL, *(void *)(v27 + 16) + 1LL, 1);
            }
            unint64_t v29 = *(void *)(v27 + 16);
            unint64_t v28 = *(void *)(v27 + 24);
            if (v29 >= v28 >> 1) {
              sub_188FFF34C((char *)(v28 > 1), v29 + 1, 1);
            }
            *(void *)(v27 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v29 + 1;
            unint64_t v30 = v27 + 16 * v29;
            *(void *)(v30 + 32) = v31;
            *(void *)(v30 + 40) = v32;
          }

          v26 += 2;
          --v25;
        }

        while (v25);
        swift_bridgeObjectRelease();
        unint64_t v3 = v130;
        uint64_t v22 = v131;
      }

      else
      {
        sub_188FFCFF4((uint64_t)&v152);
        int64_t v27 = v6;
      }

      if (v137) {
        uint64_t v34 = v22;
      }
      else {
        uint64_t v34 = 0LL;
      }
      if (v137) {
        unint64_t v35 = v137;
      }
      else {
        unint64_t v35 = 0xE000000000000000LL;
      }
      if ((v35 & 0x2000000000000000LL) != 0) {
        uint64_t v36 = HIBYTE(v35) & 0xF;
      }
      else {
        uint64_t v36 = v34 & 0xFFFFFFFFFFFFLL;
      }
      int64_t v9 = v133;
      if (*(void *)(v27 + 16))
      {
        swift_bridgeObjectRetain();
        if (v36)
        {
          sub_189067C28();
          swift_bridgeObjectRelease();
          uint64_t v149 = 0x3A7365756C617628LL;
          unint64_t v151 = 0xE900000000000020LL;
          __swift_instantiateConcreteTypeFromMangledName(&qword_18C760FE8);
          sub_189009B3C((unint64_t *)&qword_18C760FF0, &qword_18C760FE8, MEMORY[0x189618458]);
          sub_1890677C0();
          swift_release();
          sub_18906788C();
          swift_bridgeObjectRelease();
          sub_18906788C();
        }

        else
        {
          swift_bridgeObjectRelease();
          uint64_t v149 = 0x3A7365756C617628LL;
          unint64_t v151 = 0xE900000000000020LL;
          __swift_instantiateConcreteTypeFromMangledName(&qword_18C760FE8);
          sub_189009B3C((unint64_t *)&qword_18C760FF0, &qword_18C760FE8, MEMORY[0x189618458]);
          sub_1890677C0();
          swift_release();
        }

        goto LABEL_35;
      }

      swift_bridgeObjectRetain();
      swift_release();
      if (v36)
      {
        uint64_t v149 = 0x746C756166656428LL;
        unint64_t v151 = 0xEA0000000000203ALL;
LABEL_35:
        sub_18906788C();
        swift_bridgeObjectRelease();
        sub_18906788C();
        unint64_t v37 = v151;
        uint64_t v38 = v149;
        goto LABEL_36;
      }

      swift_bridgeObjectRelease();
      uint64_t v38 = 0LL;
      unint64_t v37 = 0xE000000000000000LL;
LABEL_36:
      unint64_t v138 = v37;
      int64_t v10 = v144;
      unint64_t v5 = v144 + 1;
      if (v139)
      {
        uint64_t v140 = v38;
        int64_t v6 = v133;
        if (v5 != v133)
        {
          int64_t v39 = *(void *)(v3 + 16);
          unint64_t v2 = *(void *)(v132 + 16);
          unint64_t v3 = v132 + 32;
          int64_t v6 = v144 + 1;
          while (v6 < v9)
          {
            if (v6 >= v39) {
              goto LABEL_155;
            }
            uint64_t v40 = *(void *)(v134 + 192 * v6 + 32);
            if (*(void *)(v40 + 16) != v2) {
              goto LABEL_79;
            }
            if (v2 && v40 != v132)
            {
              uint64_t v41 = 0LL;
              uint64_t v42 = v40 + 32;
              while (1)
              {
                char v43 = (void *)(v42 + 24 * v41);
                unint64_t v44 = (void *)v43[2];
                __int128 v45 = (void *)(v3 + 24 * v41);
                size_t v46 = (void *)v45[2];
                BOOL v47 = *v43 == *v45 && v43[1] == v45[1];
                if (!v47 && (sub_189067F10() & 1) == 0) {
                  break;
                }
                int64_t v10 = v44[2];
                if (v10 != v46[2]) {
                  break;
                }
                if (v10) {
                  BOOL v48 = v44 == v46;
                }
                else {
                  BOOL v48 = 1;
                }
                if (!v48)
                {
                  BOOL v49 = v44[4] == v46[4] && v44[5] == v46[5];
                  if (!v49 && (sub_189067F10() & 1) == 0) {
                    break;
                  }
                  if (v10 != 1)
                  {
                    BOOL v50 = v44[6] == v46[6] && v44[7] == v46[7];
                    if (!v50 && (sub_189067F10() & 1) == 0) {
                      break;
                    }
                    v10 -= 2LL;
                    if (v10)
                    {
                      uint64_t v51 = v46 + 9;
                      uint64_t v52 = v44 + 9;
                      do
                      {
                        BOOL v53 = *(v52 - 1) == *(v51 - 1) && *v52 == *v51;
                        if (!v53 && (sub_189067F10() & 1) == 0) {
                          goto LABEL_81;
                        }
                        v51 += 2;
                        v52 += 2;
                      }

                      while (--v10);
                    }
                  }
                }

                if (++v41 == v2) {
                  goto LABEL_76;
                }
              }

LABEL_81:
              unint64_t v3 = v130;
              int64_t v9 = v133;
              int64_t v10 = v144;
              goto LABEL_82;
            }

LABEL_76:
            if (__OFADD__(v6++, 1LL)) {
              goto LABEL_156;
            }
            int64_t v9 = v133;
            int64_t v10 = v144;
            if (v6 == v133)
            {
              int64_t v6 = v133;
LABEL_79:
              unint64_t v3 = v130;
              goto LABEL_82;
            }
          }

LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
          goto LABEL_159;
        }

LABEL_82:
        __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC818);
        uint64_t v58 = (_OWORD *)swift_allocObject();
        __int128 v59 = v160;
        __int128 v60 = v162;
        __int128 v61 = v163;
        v58[11] = v161;
        v58[12] = v60;
        v58[13] = v61;
        __int128 v62 = v156;
        __int128 v63 = v158;
        __int128 v64 = v159;
        v58[7] = v157;
        v58[8] = v63;
        v58[9] = v64;
        v58[10] = v59;
        __int128 v65 = v152;
        __int128 v66 = v153;
        v58[1] = xmmword_1890684B0;
        v58[2] = v65;
        __int128 v67 = v154;
        __int128 v68 = v155;
        v58[3] = v66;
        v58[4] = v67;
        void v58[5] = v68;
        v58[6] = v62;
        if (v6 <= v10) {
          goto LABEL_157;
        }
        if (v9 < v6) {
          goto LABEL_158;
        }
        unint64_t v150 = v58;
        sub_188FFCFF4((uint64_t)&v152);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_189058BB8(v5, v6, v3, v129);
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_18C761100);
        sub_18901A268();
        unint64_t v55 = sub_1890677C0();
        uint64_t v57 = v69;
        swift_bridgeObjectRelease();
        uint64_t v70 = *((void *)v150 + 2);
        if (v70)
        {
          uint64_t v71 = (unint64_t *)(v150 + 6);
          while (1)
          {
            uint64_t v24 = *(v71 - 1);
            unint64_t v2 = *v71;
            uint64_t v72 = HIBYTE(*v71) & 0xF;
            if ((*v71 & 0x2000000000000000LL) == 0) {
              uint64_t v72 = v24 & 0xFFFFFFFFFFFFLL;
            }
            if (v72) {
              break;
            }
            v71 += 24;
            if (!--v70) {
              goto LABEL_90;
            }
          }

          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
        }

        else
        {
LABEL_90:
          swift_bridgeObjectRelease();
          uint64_t v24 = 0LL;
          unint64_t v2 = 0xE000000000000000LL;
        }

        int64_t v10 = v6;
        uint64_t v38 = v140;
      }

      else
      {
        unint64_t v55 = sub_18901BE88();
        uint64_t v57 = v56;
        swift_bridgeObjectRetain();
        int64_t v10 = v144 + 1;
      }

      __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC858);
      uint64_t v73 = swift_allocObject();
      *(_OWORD *)(v73 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = xmmword_189068A40;
      *(void *)(v73 + 32) = v24;
      *(void *)(v73 + 40) = v2;
      *(void *)(v73 + 48) = v38;
      *(void *)(v73 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = v138;
      __swift_instantiateConcreteTypeFromMangledName(&qword_18C7610F0);
      sub_18901A1DC();
      uint64_t v74 = sub_1890677C0();
      unint64_t v2 = v75;
      swift_bridgeObjectRelease();
      uint64_t v76 = HIBYTE(v148) & 0xF;
      if ((v148 & 0x2000000000000000LL) == 0) {
        uint64_t v76 = v142 & 0xFFFFFFFFFFFFLL;
      }
      unint64_t v77 = v152;
      if (v76) {
        break;
      }
      size_t v11 = v136;
      if ((void)v152)
      {
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v128 = sub_1890577C8(0LL, *((void *)v128 + 2) + 1LL, 1, v128);
        }
        unint64_t v100 = *((void *)v128 + 2);
        unint64_t v99 = *((void *)v128 + 3);
        unint64_t v5 = v100 + 1;
        if (v100 >= v99 >> 1) {
          uint64_t v128 = sub_1890577C8((char *)(v99 > 1), v100 + 1, 1, v128);
        }
        *((void *)v128 + 2) = v5;
        uint64_t v101 = &v128[48 * v100];
        *((void *)v101 + 4) = v55;
        *((void *)v101 + 5) = v57;
        *((void *)v101 + 6) = v74;
        *((void *)v101 + 7) = v2;
        *((void *)v101 + 8) = v135;
        *((void *)v101 + 9) = v147;
      }

      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          size_t v11 = sub_1890577C8(0LL, *((void *)v136 + 2) + 1LL, 1, v136);
        }
        unint64_t v79 = *((void *)v11 + 2);
        unint64_t v78 = *((void *)v11 + 3);
        unint64_t v5 = v79 + 1;
        if (v79 >= v78 >> 1) {
          size_t v11 = sub_1890577C8((char *)(v78 > 1), v79 + 1, 1, v11);
        }
        *((void *)v11 + 2) = v5;
        unint64_t v80 = &v11[48 * v79];
        *((void *)v80 + 4) = v55;
        *((void *)v80 + 5) = v57;
        *((void *)v80 + 6) = v74;
        *((void *)v80 + 7) = v2;
        *((void *)v80 + 8) = v135;
        *((void *)v80 + 9) = v147;
        swift_bridgeObjectRelease();
      }

      sub_1890099F8((uint64_t)&v152);
      int64_t v6 = MEMORY[0x18961AFE8];
      if (v10 == v9)
      {
        uint64_t v126 = v125;
        goto LABEL_139;
      }
    }

    uint64_t v141 = v57;
    uint64_t v81 = (void *)v164;
    uint64_t v82 = *(void *)(v164 + 16);
    uint64_t v83 = v148;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_188FFD0E0(v77);
    size_t v11 = v136;
    if (!v82
      || (swift_bridgeObjectRetain(), sub_18904DA30(v142, v148), char v85 = v84, swift_bridgeObjectRelease(), (v85 & 1) == 0))
    {
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0) {
        char v86 = (char *)v127;
      }
      else {
        char v86 = sub_189056E74(0LL, *(void *)(v127 + 16) + 1LL, 1, (char *)v127);
      }
      unint64_t v88 = *((void *)v86 + 2);
      unint64_t v87 = *((void *)v86 + 3);
      uint64_t v83 = v148;
      if (v88 >= v87 >> 1)
      {
        char v86 = sub_189056E74((char *)(v87 > 1), v88 + 1, 1, v86);
        uint64_t v83 = v148;
      }

      *((void *)v86 + 2) = v88 + 1;
      int64_t v127 = (int64_t)v86;
      BOOL v89 = &v86[16 * v88];
      *((void *)v89 + 4) = v142;
      *((void *)v89 + 5) = v83;
      uint64_t v81 = (void *)v164;
    }

    sub_18901A258((uint64_t)v125);
    char v90 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v91 = sub_18904DA30(v142, v83);
    uint64_t v92 = v81[2];
    char v145 = v93;
    BOOL v94 = (v93 & 1) == 0;
    uint64_t v95 = v92 + v94;
    if (__OFADD__(v92, v94)) {
      break;
    }
    if (v81[3] >= v95)
    {
      if ((v90 & 1) == 0) {
        sub_18904DC8C();
      }
      char v98 = v145;
    }

    else
    {
      sub_18904E564(v95, v90);
      unint64_t v96 = sub_18904DA30(v142, v148);
      char v98 = v145;
      if ((v145 & 1) != (v97 & 1)) {
        goto LABEL_163;
      }
      unint64_t v91 = v96;
    }

    unint64_t v164 = (unint64_t)v81;
    swift_bridgeObjectRelease();
    unint64_t v146 = v91;
    if ((v98 & 1) == 0)
    {
      v81[(v91 >> 6) + 8] |= 1LL << v91;
      uint64_t v102 = (uint64_t *)(v81[6] + 16 * v91);
      *uint64_t v102 = v142;
      v102[1] = v148;
      *(void *)(v81[7] + 8 * v91) = MEMORY[0x18961AFE8];
      uint64_t v103 = v81[2];
      uint64_t v104 = v103 + 1;
      BOOL v105 = __OFADD__(v103, 1LL);
      BOOL v143 = v105;
      swift_bridgeObjectRetain();
      if (v143) {
        goto LABEL_162;
      }
      v81[2] = v104;
    }

    swift_bridgeObjectRetain();
    uint64_t v106 = v81[7];
    swift_bridgeObjectRelease();
    uint64_t v107 = 8 * v91;
    uint64_t v108 = *(char **)(v106 + v107);
    char v109 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v106 + v107) = v108;
    if ((v109 & 1) == 0)
    {
      uint64_t v108 = sub_1890577C8(0LL, *((void *)v108 + 2) + 1LL, 1, v108);
      *(void *)(v106 + 8 * v146) = v108;
    }

    unint64_t v111 = *((void *)v108 + 2);
    unint64_t v110 = *((void *)v108 + 3);
    if (v111 >= v110 >> 1)
    {
      uint64_t v108 = sub_1890577C8((char *)(v110 > 1), v111 + 1, 1, v108);
      *(void *)(v106 + 8 * v146) = v108;
    }

    *((void *)v108 + 2) = v111 + 1;
    uint64_t v112 = &v108[48 * v111];
    *((void *)v112 + 4) = v55;
    *((void *)v112 + 5) = v141;
    *((void *)v112 + 6) = v74;
    *((void *)v112 + 7) = v2;
    *((void *)v112 + 8) = v135;
    *((void *)v112 + 9) = v147;
    sub_189009AE4(v77);
    unint64_t v5 = v148;
    swift_bridgeObjectRelease();
    sub_1890099F8((uint64_t)&v152);
    swift_bridgeObjectRelease();
    uint64_t v125 = sub_1890168AC;
    unint64_t v3 = v130;
    int64_t v6 = MEMORY[0x18961AFE8];
    if (v10 == v9) {
      goto LABEL_139;
    }
  }

  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  uint64_t result = sub_189067FC4();
  __break(1u);
  return result;
}

uint64_t sub_1890198C4@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t *a3@<X8>)
{
  void (*v25)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t result;
  uint64_t v50;
  uint64_t v51;
  unsigned __int8 v52;
  uint64_t v54;
  unsigned __int8 v55[64];
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  void v60[18];
  void v61[17];
  void v62[17];
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  int64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
    sub_189067D3C();
    __break(1u);
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    __break(1u);
    return result;
  }

  char v5 = *a2;
  uint64_t v6 = a1 + 16 * v3;
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v54 = *(void *)(v6 + 24);
  uint64_t v8 = *(void *)(v54 + 8);
  uint64_t v52 = v5;
  LOBYTE(v62[0]) = v5;
  uint64_t v9 = sub_188FFB780(v7, v8, (unsigned __int8 *)v62, 0LL, 0LL, 0LL);
  BOOL v50 = v10;
  uint64_t v51 = v9;
  __int128 v64 = a1;
  __int128 v63 = MEMORY[0x18961AFE8];
  swift_bridgeObjectRetain();
  sub_188FFF34C(0LL, v3, 0);
  uint64_t v11 = v63;
  uint64_t v12 = a1 + 40;
  do
  {
    uint64_t v13 = (*(uint64_t (**)(void))(*(void *)v12 + 24LL))();
    uint64_t v15 = v14;
    __int128 v63 = v11;
    unint64_t v17 = *(void *)(v11 + 16);
    unint64_t v16 = *(void *)(v11 + 24);
    if (v17 >= v16 >> 1)
    {
      sub_188FFF34C((char *)(v16 > 1), v17 + 1, 1);
      uint64_t v11 = v63;
    }

    *(void *)(v11 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v17 + 1;
    uint64_t v18 = v11 + 16 * v17;
    *(void *)(v18 + 32) = v13;
    *(void *)(v18 + 40) = v15;
    v12 += 16LL;
    --v3;
  }

  while (v3);
  v62[0] = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C760FE8);
  sub_189009B3C((unint64_t *)&qword_18C760FF0, &qword_18C760FE8, MEMORY[0x189618458]);
  uint64_t v19 = sub_1890677C0();
  uint64_t v21 = v20;
  swift_release();
  (*(void (**)(void *__return_ptr))(*(void *)(a1 + 40) + 16LL))(v62);
  uint64_t v22 = v62[2];
  uint64_t v23 = v62[3];
  swift_bridgeObjectRetain();
  sub_189000568((uint64_t)v62);
  if (v23)
  {
    v61[0] = v22;
    v61[1] = v23;
    sub_18906788C();
    sub_18906788C();
    swift_bridgeObjectRelease();
    uint64_t v19 = v22;
    uint64_t v21 = v23;
  }

  uint64_t v24 = v54;
  uint64_t v25 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v54 + 16);
  v25(v61, v7, v54);
  __int128 v26 = v61[6];
  int64_t v27 = v61[7];
  swift_bridgeObjectRetain();
  sub_189000568((uint64_t)v61);
  if (!v27)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC820);
    unint64_t v28 = swift_allocObject();
    *(_OWORD *)(v28 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = xmmword_1890684B0;
    *(void *)(v28 + 32) = v51;
    *(void *)(v28 + 40) = v50;
    sub_189011F34(MEMORY[0x18961AFE8]);
    swift_bridgeObjectRelease();
    unint64_t v29 = sub_189024F24(v28);
    unint64_t v30 = swift_bridgeObjectRetain();
    uint64_t v31 = sub_1890124A4(v30);
    swift_release();
    if (*(void *)(v31 + 16))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC7F8);
      uint64_t v32 = sub_189067D90();
    }

    else
    {
      uint64_t v32 = MEMORY[0x18961AFF0];
    }

    *(void *)unint64_t v55 = v32;
    sub_1890142A4(v31, 1, v55);
    swift_bridgeObjectRelease();
    uint64_t v33 = *(void *)v55;
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    uint64_t v34 = sub_18901B6B4(v19, v21, v29, v33);
    uint64_t v36 = v35;
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v56 = v34;
    uint64_t v57 = v36;
    swift_bridgeObjectRetain();
    uint64_t v24 = v54;
    v25(v60, v7, v54);
    unint64_t v37 = v60[13];
    swift_bridgeObjectRetain();
    sub_189000568((uint64_t)v60);
    uint64_t v38 = *(void *)(v37 + 16);
    swift_bridgeObjectRelease();
    if (!v38)
    {
      swift_bridgeObjectRelease();
LABEL_22:
      __int128 v26 = v56;
      int64_t v27 = v57;
      goto LABEL_23;
    }

    int64_t v39 = sub_1890161E8(v34, v36);
    uint64_t v41 = v40;
    swift_bridgeObjectRelease();
    if (v41)
    {
      if (v39 == 32 && v41 == 0xE100000000000000LL)
      {
        swift_bridgeObjectRelease();
LABEL_21:
        sub_18906788C();
        goto LABEL_22;
      }

      uint64_t v42 = sub_189067F10();
      swift_bridgeObjectRelease();
      if ((v42 & 1) != 0) {
        goto LABEL_21;
      }
    }

    sub_18906788C();
    goto LABEL_21;
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_23:
  v25(&v56, v7, v24);
  unint64_t v44 = v58;
  char v43 = v59;
  swift_bridgeObjectRetain();
  sub_189000568((uint64_t)&v56);
  __int128 v65 = v44;
  __int128 v66 = v43;
  swift_bridgeObjectRetain();
  v25(v60, v7, v24);
  size_t v46 = v60[8];
  __int128 v45 = v60[9];
  swift_bridgeObjectRetain();
  sub_189000568((uint64_t)v60);
  swift_bridgeObjectRelease();
  if ((v45 & 0x2000000000000000LL) != 0) {
    BOOL v47 = HIBYTE(v45) & 0xF;
  }
  else {
    BOOL v47 = v46 & 0xFFFFFFFFFFFFLL;
  }
  swift_bridgeObjectRelease();
  if (v47)
  {
    BOOL v48 = HIBYTE(v43) & 0xF;
    if ((v43 & 0x2000000000000000LL) == 0) {
      BOOL v48 = v44 & 0xFFFFFFFFFFFFLL;
    }
    if (v48) {
      sub_18906788C();
    }
    v25((uint64_t *)v55, v7, v24);
    swift_bridgeObjectRetain();
    sub_189000568((uint64_t)v55);
    sub_18906788C();
    swift_bridgeObjectRelease();
    sub_18906788C();
    swift_bridgeObjectRelease();
    unint64_t v44 = v65;
    char v43 = v66;
  }

  v55[0] = v52;
  uint64_t result = sub_1890189D4(a1, v55);
  *a3 = v64;
  a3[1] = v44;
  a3[2] = v43;
  a3[3] = v26;
  a3[4] = v27;
  a3[5] = result;
  a3[6] = MEMORY[0x18961AFE8];
  return result;
}

uint64_t sub_189019EA0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  int64_t v4 = *(void *)(a4 + 16);
  if (!v4) {
    return 0LL;
  }
  uint64_t v17 = MEMORY[0x18961AFE8];
  swift_bridgeObjectRetain();
  sub_188FFF34C(0LL, v4, 0);
  uint64_t v7 = a4 + 72;
  do
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_189016260(a1);
    uint64_t v10 = v9;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v12 = *(void *)(v17 + 16);
    unint64_t v11 = *(void *)(v17 + 24);
    if (v12 >= v11 >> 1) {
      sub_188FFF34C((char *)(v11 > 1), v12 + 1, 1);
    }
    v7 += 48LL;
    *(void *)(v17 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v12 + 1;
    uint64_t v13 = v17 + 16 * v12;
    *(void *)(v13 + 32) = v8;
    *(void *)(v13 + 40) = v10;
    --v4;
  }

  while (v4);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C760FE8);
  sub_189009B3C((unint64_t *)&qword_18C760FF0, &qword_18C760FE8, MEMORY[0x189618458]);
  sub_1890677C0();
  swift_release();
  sub_18906776C();
  sub_18901A138(a2, a3);
  swift_bridgeObjectRelease();
  sub_18906788C();
  swift_bridgeObjectRelease();
  sub_18906788C();
  swift_bridgeObjectRetain();
  sub_18906788C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0LL;
}

uint64_t sub_18901A138(uint64_t a1, unint64_t a2)
{
  if (a2 >= 3) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_18901A14C(uint64_t a1, unint64_t a2)
{
  if (a2 >= 3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_18901A160(uint64_t a1)
{
  return a1;
}

uint64_t sub_18901A188(void *a1)
{
  unint64_t v2 = *(void **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1]) {
    return 1LL;
  }
  else {
    return sub_189067F10() & 1;
  }
}

unint64_t sub_18901A1DC()
{
  unint64_t result = qword_18C7610F8;
  if (!qword_18C7610F8)
  {
    uint64_t v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_18C7610F0);
    uint64_t v2 = sub_189009B3C((unint64_t *)&qword_18C760FF0, &qword_18C760FE8, MEMORY[0x189618458]);
    unint64_t result = MEMORY[0x1895DD3F4](MEMORY[0x189619918], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_18C7610F8);
  }

  return result;
}

uint64_t sub_18901A258(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

unint64_t sub_18901A268()
{
  unint64_t result = qword_18C761108;
  if (!qword_18C761108)
  {
    uint64_t v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_18C761100);
    uint64_t v2 = sub_189009B3C(&qword_18C761110, &qword_18C761118, MEMORY[0x189618458]);
    unint64_t result = MEMORY[0x1895DD3F4](MEMORY[0x189619610], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_18C761108);
  }

  return result;
}

uint64_t sub_18901A2E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_18C761120);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t destroy for HelpGenerator.Section.Element()
{
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for HelpGenerator.Section.Element(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for HelpGenerator.Section.Element(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  __int128 v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

void *assignWithTake for HelpGenerator.Section.Element(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HelpGenerator.Section.Element(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HelpGenerator.Section.Element(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0LL;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 48) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for HelpGenerator.Section.Element()
{
  return &type metadata for HelpGenerator.Section.Element;
}

uint64_t destroy for HelpGenerator()
{
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for HelpGenerator(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for HelpGenerator(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  __int128 v3 = *(_OWORD *)(a2 + 16);
  __int128 v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for HelpGenerator(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HelpGenerator(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *((_BYTE *)a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HelpGenerator(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for HelpGenerator()
{
  return &type metadata for HelpGenerator;
}

uint64_t destroy for HelpGenerator.Section(uint64_t a1)
{
  if (*(void *)(a1 + 8) >= 3uLL) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for HelpGenerator.Section(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 >= 3)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v4;
    swift_bridgeObjectRetain();
  }

  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }

  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for HelpGenerator.Section(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8) >= 3uLL)
  {
    if (v4 >= 3)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }

    sub_18901A964(a1);
    goto LABEL_6;
  }

  if (v4 < 3)
  {
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }

  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
LABEL_8:
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t sub_18901A964(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  __int128 v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v3;
  return result;
}

uint64_t assignWithTake for HelpGenerator.Section(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) >= 3uLL)
  {
    unint64_t v4 = *(void *)(a2 + 8);
    if (v4 >= 3)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v4;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }

    sub_18901A964(a1);
  }

  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_6:
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for HelpGenerator.Section(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 41)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HelpGenerator.Section(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 41) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 41) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for HelpGenerator.Section()
{
  return &type metadata for HelpGenerator.Section;
}

unint64_t sub_18901AAD8()
{
  unint64_t result = qword_18C761128;
  if (!qword_18C761128)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&unk_189068DB0, &type metadata for HelpGenerator.Section.Element);
    atomic_store(result, (unint64_t *)&qword_18C761128);
  }

  return result;
}

uint64_t destroy for HelpGenerator.DiscussionSection()
{
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for HelpGenerator.DiscussionSection(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for HelpGenerator.DiscussionSection(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  __int128 v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void *assignWithTake for HelpGenerator.DiscussionSection(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HelpGenerator.DiscussionSection(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HelpGenerator.DiscussionSection(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 0LL;
    *(void *)(result + 24) = 0LL;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0LL;
    if (a3 < 0) {
      *(_BYTE *)(result + 32) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for HelpGenerator.DiscussionSection()
{
  return &type metadata for HelpGenerator.DiscussionSection;
}

unint64_t destroy for HelpGenerator.Section.Header(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s22ArgumentParserInternal13HelpGeneratorV7SectionV6HeaderOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }

  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }

  return a1;
}

void *assignWithCopy for HelpGenerator.Section.Header(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }

uint64_t assignWithTake for HelpGenerator.Section.Header(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }

  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HelpGenerator.Section.Header(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 >= 0x7FFFFFFD && *(_BYTE *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 2;
  if (v4 >= 4) {
    return v5;
  }
  else {
    return 0LL;
  }
}

uint64_t storeEnumTagSinglePayload for HelpGenerator.Section.Header( uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0LL;
    *(void *)(result + 8) = 0LL;
    *(_DWORD *)unint64_t result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(_BYTE *)(result + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 1;
    }
  }

  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(_BYTE *)(result + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 2;
    }
  }

  return result;
}

uint64_t sub_18901AEE4(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_18901AEFC(void *result, int a2)
{
  if (a2 < 0)
  {
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0LL;
  }

  else if (a2)
  {
    result[1] = (a2 - 1);
  }

  return result;
}

ValueMetadata *type metadata accessor for HelpGenerator.Section.Header()
{
  return &type metadata for HelpGenerator.Section.Header;
}

uint64_t sub_18901AF30()
{
  return nullsub_1();
}

uint64_t sub_18901AF44@<X0>( uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, void *a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_8:
    sub_18900F870(&v30);
    int64_t v27 = &v30;
    goto LABEL_9;
  }

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __int128 v11 = *(_OWORD *)(a1 + 176);
  __int128 v38 = *(_OWORD *)(a1 + 160);
  __int128 v39 = v11;
  __int128 v12 = *(_OWORD *)(a1 + 208);
  __int128 v40 = *(_OWORD *)(a1 + 192);
  __int128 v41 = v12;
  __int128 v13 = *(_OWORD *)(a1 + 112);
  __int128 v34 = *(_OWORD *)(a1 + 96);
  __int128 v35 = v13;
  __int128 v14 = *(_OWORD *)(a1 + 144);
  __int128 v36 = *(_OWORD *)(a1 + 128);
  __int128 v37 = v14;
  __int128 v15 = *(_OWORD *)(a1 + 48);
  __int128 v30 = *(_OWORD *)(a1 + 32);
  __int128 v31 = v15;
  __int128 v16 = *(_OWORD *)(a1 + 80);
  __int128 v32 = *(_OWORD *)(a1 + 64);
  __int128 v33 = v16;
  if ((sub_18901C2AC(a2, a3, a4, v32) & 1) == 0)
  {
    uint64_t v17 = 224LL;
    while (--v8)
    {
      uint64_t v18 = v17 + 192;
      uint64_t v19 = (__int128 *)(a1 + v17);
      __int128 v20 = v19[9];
      __int128 v38 = v19[8];
      __int128 v39 = v20;
      __int128 v21 = v19[11];
      __int128 v40 = v19[10];
      __int128 v41 = v21;
      __int128 v22 = v19[5];
      __int128 v34 = v19[4];
      __int128 v35 = v22;
      __int128 v23 = v19[7];
      __int128 v36 = v19[6];
      __int128 v37 = v23;
      __int128 v24 = v19[1];
      __int128 v30 = *v19;
      __int128 v31 = v24;
      __int128 v25 = v19[3];
      __int128 v32 = v19[2];
      __int128 v33 = v25;
      char v26 = sub_18901C2AC(a2, a3, a4, v32);
      uint64_t v17 = v18;
      if ((v26 & 1) != 0) {
        goto LABEL_6;
      }
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }

LABEL_6:
  sub_188FFCFF4((uint64_t)&v30);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v29[8] = v38;
  v29[9] = v39;
  v29[10] = v40;
  v29[11] = v41;
  v29[4] = v34;
  v29[5] = v35;
  v29[6] = v36;
  v29[7] = v37;
  v29[0] = v30;
  v29[1] = v31;
  v29[2] = v32;
  v29[3] = v33;
  nullsub_1(v29);
  int64_t v27 = v29;
LABEL_9:
  sub_18900F6C0((uint64_t)v27, a5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

      v11 += 24;
      if (!--v7)
      {
        swift_bridgeObjectRelease_n();
        return (uint64_t)v12;
      }
    }
  }

  return MEMORY[0x18961AFE8];
}

    sub_1890140A4(a8);
    __int128 v39 = v55;
    __int128 v40 = v54;
    __int128 v37 = v53;
    goto LABEL_7;
  }

  __break(1u);
  return result;
}

    sub_1890140A4(a8);
    __int128 v40 = v60;
    __int128 v41 = v59;
    uint64_t v42 = v58;
    __int128 v38 = v57;
    goto LABEL_7;
  }

  __break(1u);
  return result;
}

  sub_188FFCFF4((uint64_t)&v30);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v29[8] = v38;
  v29[9] = v39;
  v29[10] = v40;
  v29[11] = v41;
  v29[4] = v34;
  v29[5] = v35;
  v29[6] = v36;
  v29[7] = v37;
  v29[0] = v30;
  v29[1] = v31;
  v29[2] = v32;
  v29[3] = v33;
  nullsub_1(v29);
  int64_t v27 = v29;
LABEL_9:
  sub_189011B78((uint64_t)v27, a5, &qword_18C761058);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

  swift_bridgeObjectRelease();
  uint64_t v10 = sub_18904573C(a5, a6);
  __int128 v11 = sub_18900EF44(1, (uint64_t)v10);
  unint64_t result = swift_bridgeObjectRelease();
  if (v9 == a2)
  {
    swift_bridgeObjectRelease();
LABEL_8:
    __int128 v12 = sub_18904573C(a5, a6);
    __int128 v13 = *((void *)v12 + 2);
    if (!v13) {
      return swift_bridgeObjectRelease();
    }
    __int128 v14 = v12 + 40;
    for (uint64_t i = v13 - 1; ; --i)
    {
      (*(void (**)(_OWORD *__return_ptr))(*(void *)v14 + 16LL))(v59);
      v64[6] = v61;
      v64[7] = v62;
      __int128 v65 = v63;
      void v64[2] = v59[2];
      v64[3] = v59[3];
      v64[4] = v59[4];
      v64[5] = v60;
      v64[0] = v59[0];
      v64[1] = v59[1];
      __int128 v16 = v60;
      swift_bridgeObjectRetain();
      sub_189000568((uint64_t)v64);
      swift_bridgeObjectRelease();
      uint64_t v17 = HIBYTE(*((void *)&v16 + 1)) & 0xFLL;
      if ((*((void *)&v16 + 1) & 0x2000000000000000LL) == 0) {
        uint64_t v17 = v16 & 0xFFFFFFFFFFFFLL;
      }
      if (v17) {
        break;
      }
      if (!i) {
        return swift_bridgeObjectRelease();
      }
      v14 += 16;
    }

    unint64_t result = swift_bridgeObjectRelease();
    if (v9 == a2) {
      return result;
    }
    unint64_t v44 = (void *)(v52 + (a2 << 6) + 48);
    while (a2 < v9)
    {
      if ((*v44 & 0x60000000000000C0LL) == 0)
      {
        __int128 v45 = *(v44 - 2) == 0x6E6F6973726576LL && *(v44 - 1) == 0xE700000000000000LL;
        if (v45 || (unint64_t result = sub_189067F10(), (result & 1) != 0))
        {
          size_t v46 = sub_18904573C(a5, a6);
          sub_189000524();
          swift_allocError();
          *(void *)BOOL v47 = v46;
          *(_OWORD *)(v47 + 8) = 0u;
          *(_OWORD *)(v47 + 24) = 0u;
          *(_OWORD *)(v47 + 40) = 0u;
          *(_OWORD *)(v47 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = 0u;
          *(_OWORD *)(v47 + 72) = 0u;
          goto LABEL_93;
        }
      }

      ++a2;
      v44 += 8;
      if (v9 == a2) {
        return result;
      }
    }

    goto LABEL_99;
  }

  uint64_t v56 = v11;
  uint64_t v51 = (unsigned __int8 *)(v11 + 48);
  __int128 v31 = a2;
  while (1)
  {
    if (v31 >= v9) {
      goto LABEL_95;
    }
    __int128 v32 = (uint64_t *)(v66 + (v31 << 6));
    __int128 v33 = v32[2];
    if ((v33 & 0x6000000000000000LL) == 0)
    {
      __int128 v34 = *(void *)(v56 + 16);
      if (v34) {
        break;
      }
    }

      if (v7 == v4) {
        return v5;
      }
    }

    if (v18 != 2)
    {
      uint64_t v19 = 6LL;
      while (1)
      {
        __int128 v20 = v19 - 3;
        if (__OFADD__(v19 - 4, 1LL)) {
          break;
        }
        if (a4[v19] == v16) {
          goto LABEL_6;
        }
        ++v19;
        if (v20 == v18) {
          goto LABEL_26;
        }
      }

      __break(1u);
LABEL_33:
      __break(1u);
      return result;
    }

uint64_t sub_18901B0EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, int a4@<W4>, uint64_t a5@<X8>)
{
  uint64_t v8 = a5;
  uint64_t v49 = *(void *)(a1 + 16);
  if (v49)
  {
    uint64_t v10 = a1 + 32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v11 = 0LL;
    __int128 v12 = *(_OWORD *)(a1 + 176);
    __int128 v45 = *(_OWORD *)(a1 + 160);
    __int128 v46 = v12;
    __int128 v13 = *(_OWORD *)(a1 + 208);
    __int128 v47 = *(_OWORD *)(a1 + 192);
    __int128 v48 = v13;
    __int128 v14 = *(_OWORD *)(a1 + 112);
    __int128 v41 = *(_OWORD *)(a1 + 96);
    __int128 v42 = v14;
    __int128 v15 = *(_OWORD *)(a1 + 144);
    __int128 v43 = *(_OWORD *)(a1 + 128);
    __int128 v44 = v15;
    __int128 v16 = *(_OWORD *)(a1 + 48);
    __int128 v37 = *(_OWORD *)(a1 + 32);
    __int128 v38 = v16;
    __int128 v17 = *(_OWORD *)(a1 + 80);
    __int128 v39 = *(_OWORD *)(a1 + 64);
    __int128 v40 = v17;
    uint64_t v35 = v10;
    while (1)
    {
      uint64_t v18 = MEMORY[0x18961AFE8];
      if ((unint64_t)v37 >= 2)
      {
        sub_188FFD0E0(v37);
        uint64_t v18 = v37;
      }

      uint64_t v19 = *(void *)(v18 + 16);
      if (v19) {
        break;
      }
      swift_bridgeObjectRelease();
LABEL_29:
      if (++v11 == v49)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_188FFCF98(a2, a3, a4);
        uint64_t v8 = a5;
        goto LABEL_33;
      }

      char v26 = (__int128 *)(v10 + 192 * v11);
      __int128 v27 = v26[9];
      __int128 v45 = v26[8];
      __int128 v46 = v27;
      __int128 v28 = v26[11];
      __int128 v47 = v26[10];
      __int128 v48 = v28;
      __int128 v29 = v26[5];
      __int128 v41 = v26[4];
      __int128 v42 = v29;
      __int128 v30 = v26[7];
      __int128 v43 = v26[6];
      __int128 v44 = v30;
      __int128 v31 = v26[1];
      __int128 v37 = *v26;
      __int128 v38 = v31;
      __int128 v32 = v26[3];
      __int128 v39 = v26[2];
      __int128 v40 = v32;
    }

    __int128 v20 = (unsigned __int8 *)(v18 + 48);
    while (1)
    {
      uint64_t v21 = *((void *)v20 - 2);
      uint64_t v22 = *((void *)v20 - 1);
      unsigned int v23 = *v20;
      if (v23 >> 6)
      {
        if (v23 >> 6 == 1)
        {
          if ((a4 & 0xC0) == 0x40)
          {
            BOOL v24 = v21 == a2 && v22 == a3;
            if ((v24 || (sub_189067F10() & 1) != 0) && ((a4 ^ v23) & 1) == 0) {
              goto LABEL_31;
            }
          }

          goto LABEL_8;
        }

        if ((a4 & 0xC0) != 0x80) {
          goto LABEL_8;
        }
      }

      else if (a4 >= 0x40u)
      {
        goto LABEL_8;
      }

      BOOL v25 = v21 == a2 && v22 == a3;
      if (v25 || (sub_189067F10() & 1) != 0)
      {
LABEL_31:
        sub_188FFCFF4((uint64_t)&v37);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_188FFCF98(a2, a3, a4);
        v36[8] = v45;
        v36[9] = v46;
        v36[10] = v47;
        v36[11] = v48;
        v36[4] = v41;
        v36[5] = v42;
        v36[6] = v43;
        v36[7] = v44;
        v36[0] = v37;
        v36[1] = v38;
        v36[2] = v39;
        v36[3] = v40;
        nullsub_1(v36);
        return sub_18900F6C0((uint64_t)v36, a5);
      }

uint64_t sub_18901B3AC()
{
  __int128 v1 = v0[9];
  __int128 v24 = v0[8];
  v25[0] = v1;
  __int128 v2 = v0[11];
  v25[1] = v0[10];
  uint64_t v25[2] = v2;
  __int128 v3 = v0[5];
  *(_OWORD *)&v23[64] = v0[4];
  *(_OWORD *)&v23[80] = v3;
  __int128 v4 = v0[7];
  *(_OWORD *)&v23[96] = v0[6];
  *(_OWORD *)&v23[112] = v4;
  __int128 v5 = v0[1];
  *(_OWORD *)unsigned int v23 = *v0;
  *(_OWORD *)&v23[16] = v5;
  __int128 v6 = v0[3];
  *(_OWORD *)&v23[32] = v0[2];
  *(_OWORD *)&v23[48] = v6;
  if (!*(void *)v23)
  {
    v26.n128_u64[0] = 60LL;
    v26.n128_u64[1] = 0xE100000000000000LL;
    __int128 v32 = *(_OWORD *)&v23[72];
    __int128 v33 = *(_OWORD *)&v23[88];
    __int128 v34 = *(_OWORD *)&v23[104];
    uint64_t v35 = *(void *)&v23[120];
    __int128 v28 = *(_OWORD *)&v23[8];
    __int128 v29 = *(_OWORD *)&v23[24];
    __int128 v30 = *(_OWORD *)&v23[40];
    __int128 v31 = *(_OWORD *)&v23[56];
    __n128 v36 = *(__n128 *)&v23[88];
    uint64_t v8 = *(void *)&v23[88] & 0xFFFFFFFFFFFFLL;
    if ((*(void *)&v23[96] & 0x2000000000000000LL) != 0) {
      uint64_t v8 = HIBYTE(*(void *)&v23[96]) & 0xFLL;
    }
    if (v8)
    {
      __int128 v27 = v33;
      swift_bridgeObjectRetain();
    }

    else
    {
      sub_188FFCFF4((uint64_t)v23);
      sub_18900F670((uint64_t)&v36);
      sub_189049A90((uint64_t *)v23, (unint64_t *)&v27);
      sub_18900F698((uint64_t)&v36);
      sub_1890099F8((uint64_t)v23);
    }

    sub_18906788C();
    swift_bridgeObjectRelease();
    sub_18906788C();
    return v26.n128_u64[0];
  }

  if (*(void *)v23 == 1LL) {
    return 0LL;
  }
  uint64_t v9 = sub_189048B28(*(uint64_t *)v23);
  if (v11 <= 0xFDu)
  {
    uint64_t v12 = v9;
    uint64_t v13 = v10;
    unsigned __int8 v14 = v11;
    sub_18900F634((__n128 *)((char *)v25 + 8), &v26);
    sub_18900F634(&v26, &v36);
    if (v37 == 1)
    {
      uint64_t v15 = sub_1890520B0(v12, v13, v14);
      uint64_t v17 = v16;
      sub_189009B7C(v12, v13, v14);
      uint64_t v21 = v15;
      uint64_t v22 = v17;
      sub_18906788C();
      __int128 v32 = *(_OWORD *)&v23[72];
      __int128 v33 = *(_OWORD *)&v23[88];
      __int128 v34 = *(_OWORD *)&v23[104];
      uint64_t v35 = *(void *)&v23[120];
      __int128 v28 = *(_OWORD *)&v23[8];
      __int128 v29 = *(_OWORD *)&v23[24];
      __int128 v30 = *(_OWORD *)&v23[40];
      __int128 v31 = *(_OWORD *)&v23[56];
      __int128 v27 = *(_OWORD *)&v23[88];
      uint64_t v18 = *(void *)&v23[88] & 0xFFFFFFFFFFFFLL;
      if ((*(void *)&v23[96] & 0x2000000000000000LL) != 0) {
        uint64_t v18 = HIBYTE(*(void *)&v23[96]) & 0xFLL;
      }
      if (v18)
      {
        __int128 v20 = v33;
        swift_bridgeObjectRetain();
      }

      else
      {
        sub_188FFCFF4((uint64_t)v23);
        sub_18900F670((uint64_t)&v27);
        sub_189049A90((uint64_t *)v23, (unint64_t *)&v20);
        sub_18900F698((uint64_t)&v27);
        sub_1890099F8((uint64_t)v23);
      }

      sub_18906788C();
      swift_bridgeObjectRelease();
      sub_18906788C();
      return v21;
    }

    else
    {
      uint64_t v7 = sub_1890520B0(v12, v13, v14);
      sub_189009B7C(v12, v13, v14);
    }

    return v7;
  }

  uint64_t result = sub_189067D3C();
  __break(1u);
  return result;
}

uint64_t sub_18901B6B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_188FFEE54(a3, a4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v8 = *(void *)(v7 + 16);
  if (!v8)
  {
    swift_release();
    swift_bridgeObjectRetain();
    return a1;
  }

  uint64_t v68 = v7;
  if (v8 < 0xD)
  {
    uint64_t v66 = a1;
    uint64_t v75 = MEMORY[0x18961AFE8];
    sub_188FFF34C(0LL, v8, 0);
    uint64_t v34 = v7;
    for (uint64_t i = 0LL; ; i += 192LL)
    {
      uint64_t v36 = *(void *)(v34 + i + 32);
      uint64_t v37 = *(void *)(v34 + i + 56);
      char v38 = *(_BYTE *)(v34 + i + 80);
      *(_DWORD *)&v78[1] = *(_DWORD *)(v34 + i + 81);
      *(_DWORD *)&v78[4] = *(_DWORD *)(v34 + i + 84);
      __int128 v39 = *(_OWORD *)(v34 + i + 88);
      __int128 v40 = *(_OWORD *)(v34 + i + 104);
      uint64_t v41 = *(void *)(v34 + i + 120);
      uint64_t v42 = *(void *)(v34 + i + 128);
      char v43 = *(_BYTE *)(v34 + i + 136);
      *(_DWORD *)((char *)&v79 + 9) = *(_DWORD *)(v34 + i + 137);
      HIDWORD(v79) = *(_DWORD *)(v34 + i + 140);
      uint64_t v44 = *(void *)(v34 + i + 144);
      uint64_t v45 = *(void *)(v34 + i + 152);
      __int128 v81 = *(_OWORD *)(v34 + i + 160);
      v82[0] = *(_BYTE *)(v34 + i + 176);
      int v46 = *(unsigned __int8 *)(v34 + i + 177);
      *(_OWORD *)&v82[2] = *(_OWORD *)(v34 + i + 178);
      *(_OWORD *)&v82[18] = *(_OWORD *)(v34 + i + 194);
      *(_OWORD *)&v82[32] = *(_OWORD *)(v34 + i + 208);
      *(void *)uint64_t v76 = v36;
      *(_OWORD *)&v76[8] = *(_OWORD *)(v34 + i + 40);
      char v69 = v76[8];
      *(void *)&v76[24] = v37;
      __int128 v77 = *(_OWORD *)(v34 + i + 64);
      v78[0] = v38;
      *(_OWORD *)&v78[8] = v39;
      *(_OWORD *)&v78[24] = v40;
      *(void *)&v78[40] = v41;
      *(void *)&__int128 v79 = v42;
      BYTE8(v79) = v43;
      *(void *)&__int128 v80 = v44;
      *((void *)&v80 + 1) = v45;
      v82[1] = v46;
      uint64_t v47 = sub_18901B3AC();
      *(void *)uint64_t v76 = v47;
      *(void *)&v76[8] = v48;
      if ((v69 & 2) == 0) {
        break;
      }
      sub_18906788C();
      unint64_t v50 = *(void *)&v76[8];
      uint64_t v49 = *(void *)v76;
      if ((v69 & 1) != 0) {
        goto LABEL_19;
      }
LABEL_20:
      if (v46 == 5)
      {
        sub_18906788C();
        swift_bridgeObjectRelease();
        uint64_t v49 = 2108717LL;
        unint64_t v50 = 0xE300000000000000LL;
      }

      uint64_t v34 = v7;
      unint64_t v52 = *(void *)(v75 + 16);
      unint64_t v51 = *(void *)(v75 + 24);
      if (v52 >= v51 >> 1)
      {
        sub_188FFF34C((char *)(v51 > 1), v52 + 1, 1);
        uint64_t v34 = v7;
      }

      *(void *)(v75 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v52 + 1;
      uint64_t v53 = v75 + 16 * v52;
      *(void *)(v53 + 32) = v49;
      *(void *)(v53 + 40) = v50;
      if (!--v8)
      {
        swift_release();
        __swift_instantiateConcreteTypeFromMangledName(&qword_18C760FE8);
        sub_189009B3C((unint64_t *)&qword_18C760FF0, &qword_18C760FE8, MEMORY[0x189618458]);
        sub_1890677C0();
        swift_release();
        swift_bridgeObjectRetain();
        sub_18906788C();
        sub_18906788C();
        swift_bridgeObjectRelease();
        return v66;
      }
    }

    uint64_t v49 = v47;
    unint64_t v50 = v48;
    if ((v69 & 1) == 0) {
      goto LABEL_20;
    }
LABEL_19:
    *(void *)&__int128 v71 = 91LL;
    *((void *)&v71 + 1) = 0xE100000000000000LL;
    sub_18906788C();
    swift_bridgeObjectRelease();
    sub_18906788C();
    uint64_t v49 = 91LL;
    unint64_t v50 = 0xE100000000000000LL;
    *(_OWORD *)uint64_t v76 = v71;
    goto LABEL_20;
  }

  unint64_t v9 = v8 - 1;
  uint64_t v10 = MEMORY[0x18961AFE8];
  uint64_t v11 = 32LL;
  uint64_t v12 = MEMORY[0x18961AFE8];
  while (1)
  {
    __int128 v13 = *(_OWORD *)(v7 + v11);
    __int128 v14 = *(_OWORD *)(v7 + v11 + 16);
    __int128 v15 = *(_OWORD *)(v7 + v11 + 48);
    __int128 v77 = *(_OWORD *)(v7 + v11 + 32);
    *(_OWORD *)unint64_t v78 = v15;
    *(_OWORD *)uint64_t v76 = v13;
    *(_OWORD *)&v76[16] = v14;
    __int128 v16 = *(_OWORD *)(v7 + v11 + 64);
    __int128 v17 = *(_OWORD *)(v7 + v11 + 80);
    __int128 v18 = *(_OWORD *)(v7 + v11 + 112);
    __int128 v79 = *(_OWORD *)(v7 + v11 + 96);
    __int128 v80 = v18;
    *(_OWORD *)&v78[16] = v16;
    *(_OWORD *)&v78[32] = v17;
    __int128 v19 = *(_OWORD *)(v7 + v11 + 128);
    __int128 v20 = *(_OWORD *)(v7 + v11 + 144);
    __int128 v21 = *(_OWORD *)(v7 + v11 + 176);
    *(_OWORD *)&v82[16] = *(_OWORD *)(v7 + v11 + 160);
    *(_OWORD *)&v82[32] = v21;
    __int128 v81 = v19;
    *(_OWORD *)uint64_t v82 = v20;
    if (!*(void *)v76 || (v76[8] & 1) == 0)
    {
      sub_188FFCFF4((uint64_t)v76);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_188FFF2C0(0LL, *(void *)(v12 + 16) + 1LL, 1);
        uint64_t v7 = v68;
      }

      unint64_t v23 = *(void *)(v12 + 16);
      unint64_t v22 = *(void *)(v12 + 24);
      if (v23 >= v22 >> 1)
      {
        sub_188FFF2C0((char *)(v22 > 1), v23 + 1, 1);
        uint64_t v7 = v68;
      }

      *(void *)(v12 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v23 + 1;
      __int128 v24 = (_OWORD *)(v12 + 192 * v23);
      __int128 v25 = *(_OWORD *)v76;
      __int128 v26 = *(_OWORD *)&v76[16];
      __int128 v27 = *(_OWORD *)v78;
      v24[4] = v77;
      v24[5] = v27;
      void v24[2] = v25;
      _OWORD v24[3] = v26;
      __int128 v28 = *(_OWORD *)&v78[16];
      __int128 v29 = *(_OWORD *)&v78[32];
      __int128 v30 = v80;
      v24[8] = v79;
      v24[9] = v30;
      v24[6] = v28;
      v24[7] = v29;
      __int128 v31 = v81;
      __int128 v32 = *(_OWORD *)v82;
      __int128 v33 = *(_OWORD *)&v82[32];
      v24[12] = *(_OWORD *)&v82[16];
      v24[13] = v33;
      v24[10] = v31;
      v24[11] = v32;
    }

    if (!v9) {
      break;
    }
    --v9;
    v11 += 192LL;
  }

  swift_release();
  int64_t v54 = *(void *)(v12 + 16);
  if ((unint64_t)(v54 - 13) < 0xFFFFFFFFFFFFFFF4LL)
  {
    swift_release();
    uint64_t v72 = a1;
    swift_bridgeObjectRetain();
    sub_18906788C();
    return v72;
  }

  uint64_t v67 = a1;
  sub_188FFF34C(0LL, v54, 0);
  uint64_t v55 = 0LL;
  for (int64_t j = v54 - 1; ; --j)
  {
    __int128 v70 = *(_OWORD *)(v12 + v55 + 40);
    int v57 = *(unsigned __int8 *)(v12 + v55 + 177);
    uint64_t v58 = sub_18901B3AC();
    uint64_t v73 = v58;
    unint64_t v74 = v59;
    if ((v70 & 2) != 0)
    {
      sub_18906788C();
      uint64_t v60 = v73;
      unint64_t v61 = v74;
      if ((v70 & 1) == 0) {
        goto LABEL_34;
      }
LABEL_33:
      sub_18906788C();
      swift_bridgeObjectRelease();
      sub_18906788C();
      uint64_t v60 = 91LL;
      unint64_t v61 = 0xE100000000000000LL;
      goto LABEL_34;
    }

    uint64_t v60 = v58;
    unint64_t v61 = v59;
    if ((v70 & 1) != 0) {
      goto LABEL_33;
    }
LABEL_34:
    if (v57 == 5)
    {
      sub_18906788C();
      swift_bridgeObjectRelease();
      uint64_t v60 = 2108717LL;
      unint64_t v61 = 0xE300000000000000LL;
    }

    unint64_t v63 = *(void *)(v10 + 16);
    unint64_t v62 = *(void *)(v10 + 24);
    if (v63 >= v62 >> 1) {
      sub_188FFF34C((char *)(v62 > 1), v63 + 1, 1);
    }
    *(void *)(v10 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v63 + 1;
    uint64_t v64 = v10 + 16 * v63;
    *(void *)(v64 + 32) = v60;
    *(void *)(v64 + 40) = v61;
    if (!j) {
      break;
    }
    v55 += 192LL;
  }

  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C760FE8);
  sub_189009B3C((unint64_t *)&qword_18C760FF0, &qword_18C760FE8, MEMORY[0x189618458]);
  sub_1890677C0();
  swift_release();
  sub_189067C28();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v72 = v67;
  sub_18906788C();
  sub_18906788C();
  swift_bridgeObjectRelease();
  return v72;
}

unint64_t sub_18901BE88()
{
  __int128 v1 = v0[9];
  __int128 v29 = v0[8];
  v30[0] = v1;
  __int128 v2 = v0[11];
  v30[1] = v0[10];
  v30[2] = v2;
  __int128 v3 = v0[5];
  *(_OWORD *)&v28[64] = v0[4];
  *(_OWORD *)&v28[80] = v3;
  __int128 v4 = v0[7];
  *(_OWORD *)&v28[96] = v0[6];
  *(_OWORD *)&v28[112] = v4;
  __int128 v5 = v0[1];
  *(_OWORD *)__int128 v28 = *v0;
  *(_OWORD *)&v28[16] = v5;
  __int128 v6 = v0[3];
  *(_OWORD *)&v28[32] = v0[2];
  *(_OWORD *)&v28[48] = v6;
  if (!*(void *)v28)
  {
    v31.n128_u64[0] = 60LL;
    v31.n128_u64[1] = 0xE100000000000000LL;
    __int128 v37 = *(_OWORD *)&v28[72];
    __int128 v38 = *(_OWORD *)&v28[88];
    __int128 v39 = *(_OWORD *)&v28[104];
    uint64_t v40 = *(void *)&v28[120];
    __int128 v33 = *(_OWORD *)&v28[8];
    __int128 v34 = *(_OWORD *)&v28[24];
    __int128 v35 = *(_OWORD *)&v28[40];
    __int128 v36 = *(_OWORD *)&v28[56];
    __n128 v41 = *(__n128 *)&v28[88];
    uint64_t v8 = *(void *)&v28[88] & 0xFFFFFFFFFFFFLL;
    if ((*(void *)&v28[96] & 0x2000000000000000LL) != 0) {
      uint64_t v8 = HIBYTE(*(void *)&v28[96]) & 0xFLL;
    }
    if (v8)
    {
      __int128 v32 = v38;
      swift_bridgeObjectRetain();
    }

    else
    {
      sub_188FFCFF4((uint64_t)v28);
      sub_18900F670((uint64_t)&v41);
      sub_189049A90((uint64_t *)v28, (unint64_t *)&v32);
      sub_18900F698((uint64_t)&v41);
      sub_1890099F8((uint64_t)v28);
    }

    sub_18906788C();
    swift_bridgeObjectRelease();
    sub_18906788C();
    return v31.n128_u64[0];
  }

  if (*(void *)v28 == 1LL) {
    return 0LL;
  }
  uint64_t v9 = swift_bridgeObjectRetain();
  uint64_t v10 = sub_18901C410(v9);
  sub_189009AE4(*(unint64_t *)v28);
  int64_t v11 = *(void *)(v10 + 16);
  if (!v11)
  {
    swift_bridgeObjectRelease();
    unint64_t v12 = MEMORY[0x18961AFE8];
    goto LABEL_23;
  }

  v41.n128_u64[0] = MEMORY[0x18961AFE8];
  sub_188FFF34C(0LL, v11, 0);
  unint64_t v12 = v41.n128_u64[0];
  __int128 v13 = (unsigned __int8 *)(v10 + 48);
  do
  {
    uint64_t v15 = *((void *)v13 - 2);
    uint64_t v14 = *((void *)v13 - 1);
    unsigned int v16 = *v13;
    if (v16 >> 6)
    {
      if (v16 >> 6 == 1)
      {
        *(void *)&__int128 v33 = 0LL;
        *((void *)&v33 + 1) = 0xE000000000000000LL;
        swift_bridgeObjectRetain();
        sub_18906788C();
        sub_1890677B4();
        goto LABEL_16;
      }

      *(void *)&__int128 v33 = 45LL;
      unint64_t v17 = 0xE100000000000000LL;
    }

    else
    {
      *(void *)&__int128 v33 = 11565LL;
      unint64_t v17 = 0xE200000000000000LL;
    }

    *((void *)&v33 + 1) = v17;
    swift_bridgeObjectRetain();
    sub_18906788C();
LABEL_16:
    sub_188FFCF98(v15, v14, v16);
    __int128 v18 = v33;
    v41.n128_u64[0] = v12;
    unint64_t v20 = *(void *)(v12 + 16);
    unint64_t v19 = *(void *)(v12 + 24);
    if (v20 >= v19 >> 1)
    {
      sub_188FFF34C((char *)(v19 > 1), v20 + 1, 1);
      unint64_t v12 = v41.n128_u64[0];
    }

    v13 += 24;
    *(void *)(v12 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v20 + 1;
    *(_OWORD *)(v12 + 16 * v20 + 32) = v18;
    --v11;
  }

  while (v11);
  swift_bridgeObjectRelease();
LABEL_23:
  *(void *)&__int128 v33 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C760FE8);
  sub_189009B3C((unint64_t *)&qword_18C760FF0, &qword_18C760FE8, MEMORY[0x189618458]);
  uint64_t v7 = sub_1890677C0();
  uint64_t v22 = v21;
  swift_bridgeObjectRelease();
  sub_18900F634((__n128 *)((char *)v30 + 8), &v31);
  sub_18900F634(&v31, &v41);
  if ((v42 & 1) != 0)
  {
    uint64_t v26 = v7;
    uint64_t v27 = v22;
    sub_18906788C();
    __int128 v37 = *(_OWORD *)&v28[72];
    __int128 v38 = *(_OWORD *)&v28[88];
    __int128 v39 = *(_OWORD *)&v28[104];
    uint64_t v40 = *(void *)&v28[120];
    __int128 v33 = *(_OWORD *)&v28[8];
    __int128 v34 = *(_OWORD *)&v28[24];
    __int128 v35 = *(_OWORD *)&v28[40];
    __int128 v36 = *(_OWORD *)&v28[56];
    __int128 v32 = *(_OWORD *)&v28[88];
    uint64_t v23 = *(void *)&v28[88] & 0xFFFFFFFFFFFFLL;
    if ((*(void *)&v28[96] & 0x2000000000000000LL) != 0) {
      uint64_t v23 = HIBYTE(*(void *)&v28[96]) & 0xFLL;
    }
    if (v23)
    {
      __int128 v25 = v38;
      swift_bridgeObjectRetain();
    }

    else
    {
      sub_188FFCFF4((uint64_t)v28);
      sub_18900F670((uint64_t)&v32);
      sub_189049A90((uint64_t *)v28, (unint64_t *)&v25);
      sub_18900F698((uint64_t)&v32);
      sub_1890099F8((uint64_t)v28);
    }

    sub_18906788C();
    swift_bridgeObjectRelease();
    sub_18906788C();
    return v26;
  }

  return v7;
}

uint64_t sub_18901C2AC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a4 + 16);
  if (v4)
  {
    uint64_t v8 = 0LL;
    uint64_t v9 = a4 + 32;
    uint64_t v21 = a3 + 9;
    do
    {
      uint64_t v10 = (void *)(v9 + 24 * v8);
      int64_t v11 = (void *)v10[2];
      BOOL v12 = *v10 == a1 && v10[1] == a2;
      if (v12 || (sub_189067F10() & 1) != 0)
      {
        uint64_t v13 = v11[2];
        if (v13 == a3[2])
        {
          if (!v13 || v11 == a3) {
            return 1LL;
          }
          BOOL v14 = v11[4] == a3[4] && v11[5] == a3[5];
          if (v14 || (sub_189067F10() & 1) != 0)
          {
            if (v13 == 1) {
              return 1LL;
            }
            BOOL v15 = v11[6] == a3[6] && v11[7] == a3[7];
            if (v15 || (sub_189067F10() & 1) != 0)
            {
              uint64_t v16 = v13 - 2;
              if (!v16) {
                return 1LL;
              }
              unint64_t v17 = v11 + 9;
              for (uint64_t i = v21; ; i += 2)
              {
                BOOL v19 = *(v17 - 1) == *(i - 1) && *v17 == *i;
                if (!v19 && (sub_189067F10() & 1) == 0) {
                  break;
                }
                v17 += 2;
                if (!--v16) {
                  return 1LL;
                }
              }
            }
          }
        }
      }

      ++v8;
    }

    while (v8 != v4);
  }

  return 0LL;
}

uint64_t sub_18901C410(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v20 = swift_bridgeObjectRetain();
    __int128 v2 = (_BYTE *)(v20 + 48);
    uint64_t v3 = MEMORY[0x18961AFE8];
    uint64_t v4 = v1;
    do
    {
      char v8 = *v2;
      if ((*v2 & 0xC0) == 0x40)
      {
        uint64_t v10 = *((void *)v2 - 2);
        uint64_t v9 = *((void *)v2 - 1);
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_188FFF368(0LL, *(void *)(v3 + 16) + 1LL, 1);
        }
        unint64_t v6 = *(void *)(v3 + 16);
        unint64_t v5 = *(void *)(v3 + 24);
        if (v6 >= v5 >> 1) {
          sub_188FFF368((char *)(v5 > 1), v6 + 1, 1);
        }
        *(void *)(v3 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v6 + 1;
        uint64_t v7 = v3 + 24 * v6;
        *(void *)(v7 + 32) = v10;
        *(void *)(v7 + 40) = v9;
        *(_BYTE *)(v7 + 48) = v8;
      }

      v2 += 24;
      --v4;
    }

    while (v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    int64_t v11 = (unsigned __int8 *)(v20 + 48);
    uint64_t v12 = MEMORY[0x18961AFE8];
    do
    {
      unsigned __int8 v16 = *v11;
      if ((*v11 & 0xC0) != 0x40)
      {
        uint64_t v17 = *((void *)v11 - 2);
        uint64_t v18 = *((void *)v11 - 1);
        sub_188FFCF80(v17, v18, *v11);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_188FFF368(0LL, *(void *)(v12 + 16) + 1LL, 1);
        }
        unint64_t v14 = *(void *)(v12 + 16);
        unint64_t v13 = *(void *)(v12 + 24);
        if (v14 >= v13 >> 1) {
          sub_188FFF368((char *)(v13 > 1), v14 + 1, 1);
        }
        *(void *)(v12 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v14 + 1;
        uint64_t v15 = v12 + 24 * v14;
        *(void *)(v15 + 32) = v17;
        *(void *)(v15 + 40) = v18;
        *(_BYTE *)(v15 + 48) = v16;
      }

      v11 += 24;
      --v1;
    }

    while (v1);
    swift_bridgeObjectRelease();
  }

  else
  {
    uint64_t v3 = MEMORY[0x18961AFE8];
    uint64_t v12 = MEMORY[0x18961AFE8];
  }

  sub_1890589E0(v12);
  return v3;
}

uint64_t sub_18901C614(uint64_t a1)
{
  if (swift_dynamicCast())
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_18901C8BC();
    uint64_t v5 = v2;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_18901FFCC(v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17);
    MEMORY[0x1895DD340](a1);
    return v5;
  }

  else
  {
    MEMORY[0x1895DD340](a1);
    MEMORY[0x1895DD34C](a1);
    if (swift_dynamicCast())
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_18901FE80(v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18);
      sub_18901C8BC();
      uint64_t v6 = v4;
      swift_bridgeObjectRelease();
      sub_18901FFCC(v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_18901FFCC(v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18);
      MEMORY[0x1895DD340](a1);
      return v6;
    }

    else
    {
      MEMORY[0x1895DD340](a1);
      return 0LL;
    }
  }

void sub_18901C8BC()
{
  __asm { BR              X10 }

uint64_t sub_18901C918()
{
  if (!v7) {
    return sub_18901DC60();
  }
  uint64_t v14 = v2;
  uint64_t v15 = v0;
  unsigned __int8 v10 = v1;
  uint64_t v11 = v3;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_18901DAA8();
  sub_18901FFCC(v5, v7, v8, v4, v11, v10, v14, v15, v9, v6, 3);
  return v12;
}

unint64_t sub_18901D1C8(uint64_t a1)
{
  uint64_t v33 = a1;
  MEMORY[0x1895DD34C]();
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C761130);
  if (swift_dynamicCast())
  {
    switch(v31)
    {
      case 7u:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_18901FE80(v21, v22, (uint64_t)v23, (uint64_t)v24, v25, v26, v27, v28, (uint64_t)v29, (uint64_t)v30, 7);
        uint64_t v19 = sub_18901E67C(v22, (uint64_t)v23, (int)v24);
        sub_18901FFCC(v21, v22, (uint64_t)v23, (uint64_t)v24, v25, v26, v27, v28, (uint64_t)v29, (uint64_t)v30, 7);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        char v4 = 7;
        break;
      case 0xBu:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_18901FE80(v21, v22, (uint64_t)v23, (uint64_t)v24, v25, v26, v27, v28, (uint64_t)v29, (uint64_t)v30, 11);
        uint64_t v19 = sub_18901E878(v21, v22, v23);
        sub_18901FFCC(v21, v22, (uint64_t)v23, (uint64_t)v24, v25, v26, v27, v28, (uint64_t)v29, (uint64_t)v30, 11);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        char v4 = 11;
        break;
      case 0xCu:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_18901FE80(v21, v22, (uint64_t)v23, (uint64_t)v24, v25, v26, v27, v28, (uint64_t)v29, (uint64_t)v30, 12);
        MEMORY[0x1895DD34C]();
        unint64_t v2 = sub_18902151C(v22, (uint64_t)v23, v24, v27, v28, v29);
        MEMORY[0x1895DD340]();
        sub_18901FFCC(v21, v22, (uint64_t)v23, (uint64_t)v24, v25, v26, v27, v28, (uint64_t)v29, (uint64_t)v30, 12);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v3 = v2;
        sub_18901FFCC(v21, v22, (uint64_t)v23, (uint64_t)v24, v25, v26, v27, v28, (uint64_t)v29, (uint64_t)v30, 12);
LABEL_22:
        MEMORY[0x1895DD340](v33);
        return v3;
      default:
        sub_18901FFCC(v21, v22, (uint64_t)v23, (uint64_t)v24, v25, v26, v27, v28, (uint64_t)v29, (uint64_t)v30, v31);
        goto LABEL_21;
    }

    unint64_t v3 = v19;
    sub_18901FFCC(v21, v22, (uint64_t)v23, (uint64_t)v24, v25, v26, v27, v28, (uint64_t)v29, (uint64_t)v30, v4);
    goto LABEL_22;
  }

  MEMORY[0x1895DD340](v33);
  uint64_t v33 = a1;
  MEMORY[0x1895DD34C](a1);
  if (swift_dynamicCast())
  {
    switch(v32)
    {
      case 7:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_18901FE80(v22, (uint64_t)v23, (uint64_t)v24, v25, v26, v27, v28, (uint64_t)v29, (uint64_t)v30, v31, 7);
        uint64_t v20 = sub_18901E67C((uint64_t)v23, (uint64_t)v24, v25);
        swift_bridgeObjectRelease();
        unsigned __int8 v5 = v27;
        uint64_t v7 = v28;
        uint64_t v6 = (uint64_t)v29;
        sub_18901FFCC(v22, (uint64_t)v23, (uint64_t)v24, v25, v26, v27, v28, (uint64_t)v29, (uint64_t)v30, v31, 7);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        char v17 = 7;
        uint64_t v15 = (uint64_t)v30;
        uint64_t v16 = v31;
        uint64_t v8 = v22;
        uint64_t v9 = (uint64_t)v23;
        uint64_t v10 = (uint64_t)v24;
        uint64_t v11 = v25;
        uint64_t v12 = v26;
        break;
      case 11:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_18901FE80(v22, (uint64_t)v23, (uint64_t)v24, v25, v26, v27, v28, (uint64_t)v29, (uint64_t)v30, v31, 11);
        uint64_t v20 = sub_18901E878(v22, (uint64_t)v23, v24);
        swift_bridgeObjectRelease();
        uint64_t v6 = (uint64_t)v29;
        unsigned __int8 v5 = v27;
        uint64_t v7 = v28;
        sub_18901FFCC(v22, (uint64_t)v23, (uint64_t)v24, v25, v26, v27, v28, (uint64_t)v29, (uint64_t)v30, v31, 11);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        char v17 = 11;
        uint64_t v15 = (uint64_t)v30;
        uint64_t v16 = v31;
        uint64_t v8 = v22;
        uint64_t v9 = (uint64_t)v23;
        uint64_t v10 = (uint64_t)v24;
        uint64_t v11 = v25;
        uint64_t v12 = v26;
        break;
      case 12:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_18901FE80(v22, (uint64_t)v23, (uint64_t)v24, v25, v26, v27, v28, (uint64_t)v29, (uint64_t)v30, v31, 12);
        MEMORY[0x1895DD34C]();
        unint64_t v18 = sub_18902151C((uint64_t)v23, (uint64_t)v24, v25, v28, (uint64_t)v29, v30);
        MEMORY[0x1895DD340]();
        swift_bridgeObjectRelease();
        sub_18901FFCC(v22, (uint64_t)v23, (uint64_t)v24, v25, v26, v27, v28, (uint64_t)v29, (uint64_t)v30, v31, 12);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v3 = v18;
        sub_18901FFCC(v22, (uint64_t)v23, (uint64_t)v24, v25, v26, v27, v28, (uint64_t)v29, (uint64_t)v30, v31, 12);
        goto LABEL_22;
      default:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_18901FE80(v22, (uint64_t)v23, (uint64_t)v24, v25, v26, v27, v28, (uint64_t)v29, (uint64_t)v30, v31, v32);
        swift_bridgeObjectRelease();
        sub_18901FFCC(v22, (uint64_t)v23, (uint64_t)v24, v25, v26, v27, v28, (uint64_t)v29, (uint64_t)v30, v31, v32);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_18901FFCC(v22, (uint64_t)v23, (uint64_t)v24, v25, v26, v27, v28, (uint64_t)v29, (uint64_t)v30, v31, v32);
LABEL_21:
        unint64_t v3 = 0LL;
        goto LABEL_22;
    }

    unsigned __int8 v13 = v5;
    unint64_t v3 = v20;
    sub_18901FFCC(v8, v9, v10, v11, v12, v13, v7, v6, v15, v16, v17);
    goto LABEL_22;
  }

  MEMORY[0x1895DD340](a1);
  return 0LL;
}

uint64_t sub_18901DAA8()
{
  uint64_t v0 = 3LL;
  uint64_t v8 = MEMORY[0x18961AFE8];
  sub_188FFF34C(0LL, 3LL, 0);
  unsigned __int8 v1 = (uint64_t *)&unk_18A339190;
  do
  {
    uint64_t v3 = *(v1 - 1);
    uint64_t v2 = *v1;
    unint64_t v5 = *(void *)(v8 + 16);
    unint64_t v4 = *(void *)(v8 + 24);
    swift_bridgeObjectRetain();
    if (v5 >= v4 >> 1) {
      sub_188FFF34C((char *)(v4 > 1), v5 + 1, 1);
    }
    v1 += 2;
    *(void *)(v8 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v5 + 1;
    uint64_t v6 = v8 + 16 * v5;
    *(void *)(v6 + 32) = v3;
    *(void *)(v6 + 40) = v2;
    --v0;
  }

  while (v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C760FE8);
  sub_189009B3C((unint64_t *)&qword_18C760FF0, &qword_18C760FE8, MEMORY[0x189618458]);
  sub_1890677C0();
  swift_bridgeObjectRelease();
  sub_18906788C();
  swift_bridgeObjectRelease();
  return 0LL;
}

uint64_t sub_18901DC60()
{
  uint64_t v0 = 3LL;
  uint64_t v8 = MEMORY[0x18961AFE8];
  sub_188FFF34C(0LL, 3LL, 0);
  unsigned __int8 v1 = (uint64_t *)&unk_18A339190;
  do
  {
    uint64_t v3 = *(v1 - 1);
    uint64_t v2 = *v1;
    unint64_t v5 = *(void *)(v8 + 16);
    unint64_t v4 = *(void *)(v8 + 24);
    swift_bridgeObjectRetain();
    if (v5 >= v4 >> 1) {
      sub_188FFF34C((char *)(v4 > 1), v5 + 1, 1);
    }
    v1 += 2;
    *(void *)(v8 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v5 + 1;
    uint64_t v6 = v8 + 16 * v5;
    *(void *)(v6 + 32) = v3;
    *(void *)(v6 + 40) = v2;
    --v0;
  }

  while (v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C760FE8);
  sub_189009B3C((unint64_t *)&qword_18C760FF0, &qword_18C760FE8, MEMORY[0x189618458]);
  sub_1890677C0();
  swift_bridgeObjectRelease();
  sub_18906788C();
  swift_bridgeObjectRelease();
  return 0LL;
}

unint64_t sub_18901DDDC(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    if (v1 == 1)
    {
      sub_189067C28();
      swift_bridgeObjectRelease();
      unint64_t v12 = 0xD000000000000015LL;
      swift_bridgeObjectRetain();
      sub_18906788C();
    }

    else
    {
      uint64_t v13 = MEMORY[0x18961AFE8];
      sub_188FFF34C(0LL, v1, 0);
      uint64_t v3 = (uint64_t *)(a1 + 48);
      int64_t v4 = v1;
      do
      {
        uint64_t v6 = *(v3 - 1);
        uint64_t v5 = *v3;
        unint64_t v8 = *(void *)(v13 + 16);
        unint64_t v7 = *(void *)(v13 + 24);
        swift_bridgeObjectRetain();
        if (v8 >= v7 >> 1) {
          sub_188FFF34C((char *)(v7 > 1), v8 + 1, 1);
        }
        *(void *)(v13 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v8 + 1;
        uint64_t v9 = v13 + 16 * v8;
        *(void *)(v9 + 32) = v6;
        *(void *)(v9 + 40) = v5;
        v3 += 3;
        --v4;
      }

      while (v4);
      __swift_instantiateConcreteTypeFromMangledName(&qword_18C760FE8);
      sub_189009B3C((unint64_t *)&qword_18C760FF0, &qword_18C760FE8, MEMORY[0x189618458]);
      sub_1890677C0();
      swift_release();
      sub_189067C28();
      uint64_t v10 = sub_189067E74();
      swift_bridgeObjectRelease();
      unint64_t v12 = v10;
      sub_18906788C();
      sub_18906788C();
    }

    swift_bridgeObjectRelease();
    sub_18906788C();
    return v12;
  }

  return v1;
}

uint64_t sub_18901E014(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!v5)
  {
    sub_18906788C();
    sub_189067CD0();
  }

  sub_18901F638(a1, a3);
  if (!v6)
  {
    sub_18906788C();
    sub_189067CD0();
  }

  sub_189067C28();
  sub_18906788C();
  sub_18906788C();
  swift_bridgeObjectRelease();
  sub_18906788C();
  sub_18906788C();
  swift_bridgeObjectRelease();
  return 0LL;
}

uint64_t sub_18901E1C4(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v7 = *v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_189020DE8(v7, a1, a2, a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(v8 + 16);
  if (!v9)
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = (char *)MEMORY[0x18961AFE8];
    uint64_t v30 = *(void *)(MEMORY[0x18961AFE8] + 16LL);
    if (v30) {
      goto LABEL_17;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    *(void *)&__int128 v47 = 0LL;
    *((void *)&v47 + 1) = 0xE000000000000000LL;
    sub_189067C28();
    sub_18906788C();
    sub_189056D64(a1, a2, a3);
    sub_18906788C();
    swift_bridgeObjectRelease();
LABEL_24:
    sub_18906788C();
    return v47;
  }

  char v32 = a3;
  swift_bridgeObjectRetain();
  uint64_t v10 = v9 - 1;
  uint64_t v11 = (char *)MEMORY[0x18961AFE8];
  for (uint64_t i = 32LL; ; i += 192LL)
  {
    __int128 v13 = *(_OWORD *)(v8 + i);
    __int128 v14 = *(_OWORD *)(v8 + i + 16);
    __int128 v15 = *(_OWORD *)(v8 + i + 48);
    __int128 v49 = *(_OWORD *)(v8 + i + 32);
    *(_OWORD *)unint64_t v50 = v15;
    __int128 v47 = v13;
    __int128 v48 = v14;
    __int128 v16 = *(_OWORD *)(v8 + i + 64);
    __int128 v17 = *(_OWORD *)(v8 + i + 80);
    __int128 v18 = *(_OWORD *)(v8 + i + 112);
    __int128 v52 = *(_OWORD *)(v8 + i + 96);
    __int128 v53 = v18;
    *(_OWORD *)&v50[16] = v16;
    __int128 v51 = v17;
    __int128 v19 = *(_OWORD *)(v8 + i + 128);
    __int128 v20 = *(_OWORD *)(v8 + i + 144);
    __int128 v21 = *(_OWORD *)(v8 + i + 176);
    *(_OWORD *)&v55[16] = *(_OWORD *)(v8 + i + 160);
    __int128 v56 = v21;
    __int128 v54 = v19;
    *(_OWORD *)uint64_t v55 = v20;
    if (!BYTE8(v52))
    {
      char v22 = BYTE8(v47);
      int v23 = v55[1];
      v35[0] = v47;
      v35[1] = *((void *)&v47 + 1) & 0xFFFFFFFFFFFFFFFELL;
      __int128 v36 = v48;
      __int128 v37 = v49;
      LOBYTE(v38[0]) = v50[0];
      *(_OWORD *)&v38[1] = *(_OWORD *)&v50[8];
      v38[3] = *(void *)&v50[24];
      __int128 v39 = v51;
      uint64_t v40 = v52;
      char v41 = 0;
      __int128 v42 = v53;
      __int128 v43 = v54;
      LOWORD(v44[0]) = *(_WORD *)v55;
      *(_OWORD *)&v44[1] = *(_OWORD *)&v55[8];
      char v45 = v55[24];
      __int128 v46 = v56;
      sub_188FFCFF4((uint64_t)&v47);
      sub_188FFCFF4((uint64_t)&v47);
      uint64_t v33 = sub_18901B3AC();
      unint64_t v34 = v24;
      if ((v22 & 2) != 0) {
        sub_18906788C();
      }
      if (v23 == 5)
      {
        sub_18906788C();
        swift_bridgeObjectRelease();
        sub_1890099F8((uint64_t)v35);
        sub_1890099F8((uint64_t)&v47);
        uint64_t v25 = 2108717LL;
        unint64_t v26 = 0xE300000000000000LL;
      }

      else
      {
        sub_1890099F8((uint64_t)v35);
        sub_1890099F8((uint64_t)&v47);
        unint64_t v26 = v34;
        uint64_t v25 = v33;
      }

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v11 = sub_189056E74(0LL, *((void *)v11 + 2) + 1LL, 1, v11);
      }
      unint64_t v28 = *((void *)v11 + 2);
      unint64_t v27 = *((void *)v11 + 3);
      if (v28 >= v27 >> 1) {
        uint64_t v11 = sub_189056E74((char *)(v27 > 1), v28 + 1, 1, v11);
      }
      *((void *)v11 + 2) = v28 + 1;
      __int128 v29 = &v11[16 * v28];
      *((void *)v29 + 4) = v25;
      *((void *)v29 + 5) = v26;
    }

    if (!v10) {
      break;
    }
    --v10;
  }

  swift_bridgeObjectRelease_n();
  a3 = v32;
  uint64_t v30 = *((void *)v11 + 2);
  if (!v30) {
    goto LABEL_21;
  }
LABEL_17:
  if (v30 != 1)
  {
    *(void *)&__int128 v47 = v11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C760FE8);
    sub_189009B3C((unint64_t *)&qword_18C760FF0, &qword_18C760FE8, MEMORY[0x189618458]);
    sub_1890677C0();
    swift_bridgeObjectRelease();
    *(void *)&__int128 v47 = 0LL;
    *((void *)&v47 + 1) = 0xE000000000000000LL;
    sub_189067C28();
    swift_bridgeObjectRelease();
    *(void *)&__int128 v47 = 0xD000000000000011LL;
    *((void *)&v47 + 1) = 0x800000018906D430LL;
    goto LABEL_23;
  }

  *(void *)&__int128 v47 = 0LL;
  *((void *)&v47 + 1) = 0xE000000000000000LL;
  sub_189067C28();
  swift_bridgeObjectRelease();
  *(void *)&__int128 v47 = 0xD00000000000001BLL;
  *((void *)&v47 + 1) = 0x800000018906D450LL;
  if (*((void *)v11 + 2))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
LABEL_23:
    sub_18906788C();
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }

  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_18901E67C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v7 = *v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_188FFCF80(a1, a2, a3);
  sub_18901B0EC(v7, a1, a2, a3, (uint64_t)v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_18900F6C0((uint64_t)v14, (uint64_t)v16);
  sub_18900F6C0((uint64_t)v16, (uint64_t)v17);
  _OWORD v15[8] = v21;
  v15[9] = v22;
  v15[10] = v23;
  v15[11] = v24;
  v15[4] = v17[4];
  void v15[5] = v18;
  v15[6] = v19;
  uint64_t v15[7] = v20;
  v15[0] = v17[0];
  v15[1] = v17[1];
  v15[2] = v17[2];
  uint64_t v15[3] = v17[3];
  uint64_t v9 = *((void *)&v18 + 1);
  unint64_t v10 = v19;
  swift_bridgeObjectRetain();
  v14[0] = sub_1890520B0(a1, a2, a3);
  v14[1] = v11;
  sub_18906788C();
  uint64_t v12 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000LL) == 0) {
    uint64_t v12 = v9 & 0xFFFFFFFFFFFFLL;
  }
  if (v12)
  {
    swift_bridgeObjectRetain();
  }

  else
  {
    sub_189021878( v16,  (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1890218E4);
    swift_bridgeObjectRetain();
    sub_189049A90((uint64_t *)v15, &v13);
    swift_bridgeObjectRelease();
    sub_189021878( v16,  (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_18900F788);
  }

  sub_18906788C();
  swift_bridgeObjectRelease();
  sub_18906788C();
  sub_18906788C();
  swift_bridgeObjectRelease();
  sub_189021878( v16,  (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_18900F788);
  return v14[0];
}

uint64_t sub_18901E878(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v7 = *v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_18901AF44(v7, a1, a2, a3, (uint64_t)v29);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_18900F6C0((uint64_t)v29, (uint64_t)v44);
  sub_18900F6C0((uint64_t)v44, (uint64_t)v45);
  sub_18900F6C0((uint64_t)v44, (uint64_t)v28);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_189021878( v44,  (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_18900F788);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_189020DE8(v7, a1, a2, a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*(void *)(v8 + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0LL;
  }

  __int128 v9 = *(_OWORD *)(v8 + 176);
  __int128 v31 = *(_OWORD *)(v8 + 160);
  __int128 v32 = v9;
  __int128 v10 = *(_OWORD *)(v8 + 208);
  __int128 v33 = *(_OWORD *)(v8 + 192);
  __int128 v34 = v10;
  __int128 v11 = *(_OWORD *)(v8 + 112);
  *(_OWORD *)&v30[64] = *(_OWORD *)(v8 + 96);
  *(_OWORD *)&v30[80] = v11;
  __int128 v12 = *(_OWORD *)(v8 + 144);
  *(_OWORD *)&v30[96] = *(_OWORD *)(v8 + 128);
  *(_OWORD *)&v30[112] = v12;
  __int128 v13 = *(_OWORD *)(v8 + 48);
  *(_OWORD *)uint64_t v30 = *(_OWORD *)(v8 + 32);
  *(_OWORD *)&v30[16] = v13;
  __int128 v14 = *(_OWORD *)(v8 + 80);
  *(_OWORD *)&v30[32] = *(_OWORD *)(v8 + 64);
  *(_OWORD *)&v30[48] = v14;
  unint64_t v15 = *(void *)v30;
  sub_188FFCFF4((uint64_t)v30);
  swift_bridgeObjectRelease();
  if (v15 >= 2) {
    swift_bridgeObjectRetain();
  }
  else {
    unint64_t v15 = MEMORY[0x18961AFE8];
  }
  __int128 v39 = *(_OWORD *)&v30[72];
  __int128 v40 = *(_OWORD *)&v30[88];
  __int128 v41 = *(_OWORD *)&v30[104];
  uint64_t v42 = *(void *)&v30[120];
  __int128 v35 = *(_OWORD *)&v30[8];
  __int128 v36 = *(_OWORD *)&v30[24];
  __int128 v37 = *(_OWORD *)&v30[40];
  __int128 v38 = *(_OWORD *)&v30[56];
  __int128 v43 = *(_OWORD *)&v30[88];
  if (!*(void *)(v15 + 16))
  {
    swift_bridgeObjectRelease();
    uint64_t v26 = 60LL;
    unint64_t v27 = 0xE100000000000000LL;
    uint64_t v24 = v43 & 0xFFFFFFFFFFFFLL;
    if ((*((void *)&v43 + 1) & 0x2000000000000000LL) != 0) {
      uint64_t v24 = HIBYTE(*((void *)&v43 + 1)) & 0xFLL;
    }
    if (v24) {
      goto LABEL_16;
    }
LABEL_17:
    sub_188FFCFF4((uint64_t)v30);
    sub_18900F670((uint64_t)&v43);
    sub_189049A90((uint64_t *)v30, (unint64_t *)&v25);
    sub_18900F698((uint64_t)&v43);
    sub_1890099F8((uint64_t)v30);
    goto LABEL_18;
  }

  uint64_t v17 = *(void *)(v15 + 32);
  uint64_t v18 = *(void *)(v15 + 40);
  unsigned __int8 v19 = *(_BYTE *)(v15 + 48);
  sub_188FFCF80(v17, v18, v19);
  swift_bridgeObjectRelease();
  uint64_t v20 = sub_1890520B0(v17, v18, v19);
  unint64_t v22 = v21;
  sub_188FFCF98(v17, v18, v19);
  uint64_t v26 = v20;
  unint64_t v27 = v22;
  sub_18906788C();
  uint64_t v23 = v43 & 0xFFFFFFFFFFFFLL;
  if ((*((void *)&v43 + 1) & 0x2000000000000000LL) != 0) {
    uint64_t v23 = HIBYTE(*((void *)&v43 + 1)) & 0xFLL;
  }
  if (!v23) {
    goto LABEL_17;
  }
LABEL_16:
  __int128 v25 = v43;
  swift_bridgeObjectRetain();
LABEL_18:
  sub_18906788C();
  swift_bridgeObjectRelease();
  sub_18906788C();
  sub_18906788C();
  swift_bridgeObjectRelease();
  sub_1890099F8((uint64_t)v30);
  return v26;
}

unint64_t sub_18901EC88(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v7 = *v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_188FFCF80(a1, a2, a3);
  sub_18901B0EC(v7, a1, a2, a3, (uint64_t)v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_18900F6C0((uint64_t)v20, (uint64_t)v22);
  sub_18900F6C0((uint64_t)v22, (uint64_t)v23);
  uint64_t v8 = 0LL;
  if (sub_18900F708((uint64_t)v23) != 1)
  {
    sub_18900F6C0((uint64_t)v22, (uint64_t)v12);
    uint64_t v8 = *((void *)&v13 + 1);
    unint64_t v9 = BYTE7(v14) & 0xF;
    if ((v14 & 0x2000000000000000LL) == 0) {
      unint64_t v9 = *((void *)&v13 + 1) & 0xFFFFFFFFFFFFLL;
    }
    v21[8] = v16;
    v21[9] = v17;
    v21[10] = v18;
    v21[11] = v19;
    v21[4] = v12[4];
    v21[5] = v13;
    v21[6] = v14;
    v21[7] = v15;
    v21[0] = v12[0];
    v21[1] = v12[1];
    v21[2] = v12[2];
    v21[3] = v12[3];
    if (v9)
    {
      swift_bridgeObjectRetain();
      sub_189021878( v22,  (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_18900F788);
    }

    else
    {
      sub_189021878( v22,  (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1890218E4);
      swift_bridgeObjectRetain();
      sub_189049A90((uint64_t *)v21, &v11);
      swift_bridgeObjectRelease();
      sub_189021878( v22,  (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_18900F788);
      sub_189021878( v22,  (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_18900F788);
      return v11;
    }
  }

  return v8;
}

void sub_18901EE2C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = sub_189067844();
  uint64_t v71 = a1;
  unint64_t v72 = a2;
  uint64_t v9 = sub_189067844();
  if (v8 < 1 || v9 < 1) {
    return;
  }
  if ((a2 & 0x2000000000000000LL) != 0) {
    uint64_t v10 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v10 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if ((a4 & 0x2000000000000000LL) != 0) {
    uint64_t v11 = HIBYTE(a4) & 0xF;
  }
  else {
    uint64_t v11 = a3 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v68 = 4 * v11;
  unint64_t v69 = 4 * v10;
  uint64_t v70 = a3;
  unint64_t v12 = 0LL;
  if (!v11)
  {
    int v21 = 0;
LABEL_22:
    unint64_t v13 = 15LL;
    goto LABEL_25;
  }

  if (!v10)
  {
    int v21 = 1;
    goto LABEL_22;
  }

  unint64_t v13 = 15LL;
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_189067904();
    uint64_t v16 = v15;
    if (v14 == sub_189067904() && v16 == v17)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      goto LABEL_16;
    }

    char v18 = sub_189067F10();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v18 & 1) == 0) {
      break;
    }
LABEL_16:
    a3 = v70;
    unint64_t v19 = sub_189067850();
    unint64_t v20 = sub_189067850();
    unint64_t v13 = v20;
    unint64_t v12 = v19 >> 14;
    if (v19 >> 14 >= v68)
    {
      int v21 = 0;
      goto LABEL_25;
    }

    if (v69 <= v20 >> 14)
    {
      int v21 = 1;
      goto LABEL_25;
    }
  }

  int v21 = 1;
  a3 = v70;
LABEL_25:
  uint64_t v22 = 7LL;
  if (((a4 >> 60) & ((a3 & 0x800000000000000LL) == 0)) != 0) {
    uint64_t v23 = 11LL;
  }
  else {
    uint64_t v23 = 7LL;
  }
  unint64_t v24 = v23 | (v11 << 16);
  if (((v72 >> 60) & ((v71 & 0x800000000000000LL) == 0)) != 0) {
    uint64_t v22 = 11LL;
  }
  unint64_t v25 = v22 | (v10 << 16);
  unint64_t v26 = v13 >> 14;
  if (v21 && v26 < v69)
  {
    uint64_t v65 = v23 | (v11 << 16);
    uint64_t v27 = sub_18906785C();
    unint64_t v67 = v25;
    unint64_t v28 = sub_18906785C();
    unint64_t v63 = v27;
    uint64_t v29 = sub_189067904();
    uint64_t v31 = v30;
    if (v29 == sub_189067904() && v31 == v32)
    {
      swift_bridgeObjectRelease_n();
      unint64_t v26 = v13 >> 14;
LABEL_36:
      unint64_t v24 = v63;
      if (v12 >= v63 >> 14)
      {
        unint64_t v25 = v28;
      }

      else
      {
        unint64_t v25 = v28;
        if (v26 < v28 >> 14)
        {
          while (1)
          {
            unint64_t v66 = v24;
            unint64_t v34 = sub_18906785C();
            unint64_t v35 = sub_18906785C();
            uint64_t v36 = sub_189067904();
            uint64_t v38 = v37;
            if (v36 == sub_189067904() && v38 == v39)
            {
              swift_bridgeObjectRelease_n();
              unint64_t v26 = v13 >> 14;
            }

            else
            {
              char v40 = sub_189067F10();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              unint64_t v26 = v13 >> 14;
              unint64_t v24 = v66;
              if ((v40 & 1) == 0) {
                goto LABEL_47;
              }
            }

            if (v12 >= v34 >> 14) {
              break;
            }
            unint64_t v25 = v35;
            unint64_t v24 = v34;
            if (v26 >= v35 >> 14) {
              goto LABEL_47;
            }
          }

          unint64_t v25 = v35;
          unint64_t v24 = v34;
        }
      }
    }

    else
    {
      char v33 = sub_189067F10();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v26 = v13 >> 14;
      unint64_t v24 = v65;
      unint64_t v25 = v67;
      if ((v33 & 1) != 0) {
        goto LABEL_36;
      }
    }
  }

LABEL_47:
  if (v12 == v68 && v26 == v69) {
    return;
  }
  if (v12 >= v24 >> 14 || v26 >= v25 >> 14)
  {
    sub_1890678E0();
    return;
  }

  sub_189067928();
  sub_189067928();
  swift_bridgeObjectRetain();
  uint64_t v60 = sub_189067AE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v41 = sub_189067AE4();
  swift_bridgeObjectRelease();
  uint64_t v42 = v41 + 1;
  if (__OFADD__(v41, 1LL))
  {
LABEL_96:
    __break(1u);
    goto LABEL_97;
  }

  if (v42 < 0)
  {
LABEL_97:
    __break(1u);
LABEL_98:
    __break(1u);
LABEL_99:
    __break(1u);
    goto LABEL_100;
  }

  if (v41 == -1)
  {
    uint64_t v43 = MEMORY[0x18961AFE8];
  }

  else
  {
    uint64_t v43 = sub_1890679E8();
    *(void *)(v43 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v42;
    bzero((void *)(v43 + 32), 8 * v41 + 8);
  }

  if (v41 < 0) {
    goto LABEL_98;
  }
  uint64_t v44 = sub_188FFF1C4(0LL, v41);
  if (v60 < 1 || !v41) {
    goto LABEL_99;
  }
  uint64_t v45 = v44;
  uint64_t v46 = 1LL;
  uint64_t v62 = v41;
  while (1)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
    {
      __int128 v47 = (char *)v43;
      if (!*(void *)(v43 + 16)) {
        break;
      }
      goto LABEL_63;
    }

    __int128 v47 = sub_18905E748(v43);
    if (!*((void *)v47 + 2)) {
      break;
    }
LABEL_63:
    uint64_t v48 = 0LL;
    unint64_t v49 = 0LL;
    uint64_t v61 = v46;
    *((void *)v47 + 4) = v46;
    uint64_t v64 = v47;
    do
    {
      uint64_t v50 = v45;
      unint64_t v73 = v49 + 1;
      uint64_t v51 = sub_189067AF0();
      uint64_t v53 = v52;
      if (v51 == sub_189067AF0() && v53 == v54)
      {
        swift_bridgeObjectRelease_n();
      }

      else
      {
        char v55 = sub_189067F10();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v55 & 1) == 0)
        {
          if (v73 >= *(void *)(v50 + 16)) {
            goto LABEL_91;
          }
          uint64_t v45 = v50;
          __int128 v47 = v64;
          unint64_t v57 = *((void *)v64 + 2);
          if (v49 >= v57) {
            goto LABEL_92;
          }
          uint64_t v58 = *(void *)(v45 + v48 + 32);
          if (v58 >= *(void *)&v64[v48 + 32]) {
            uint64_t v58 = *(void *)&v64[v48 + 32];
          }
          if (v58 >= *(void *)(v45 + v48 + 40)) {
            uint64_t v58 = *(void *)(v45 + v48 + 40);
          }
          BOOL v59 = __OFADD__(v58, 1LL);
          uint64_t v56 = v58 + 1;
          if (v59) {
            goto LABEL_93;
          }
          if (v73 >= v57) {
            goto LABEL_94;
          }
          goto LABEL_64;
        }
      }

      if (v49 >= *(void *)(v50 + 16))
      {
        __break(1u);
LABEL_90:
        __break(1u);
LABEL_91:
        __break(1u);
LABEL_92:
        __break(1u);
LABEL_93:
        __break(1u);
LABEL_94:
        __break(1u);
LABEL_95:
        __break(1u);
        goto LABEL_96;
      }

      uint64_t v45 = v50;
      __int128 v47 = v64;
      if (v73 >= *((void *)v64 + 2)) {
        goto LABEL_90;
      }
      uint64_t v56 = *(void *)(v45 + v48 + 32);
LABEL_64:
      *(void *)&v47[v48 + 40] = v56;
      sub_189067AC0();
      ++v49;
      v48 += 8LL;
      uint64_t v41 = v62;
    }

    while (v62 != v49);
    sub_189067AC0();
    if (v46 == v60) {
      goto LABEL_87;
    }
    uint64_t v43 = v45;
    uint64_t v45 = (uint64_t)v47;
    ++v46;
    if (__OFADD__(v61, 1LL)) {
      goto LABEL_95;
    }
  }

  __break(1u);
LABEL_87:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v41 < *((void *)v47 + 2))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return;
  }

LABEL_100:
  __break(1u);
}

uint64_t sub_18901F638(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = swift_bridgeObjectRetain();
  int64_t v4 = (char *)sub_188FFF0D0(v3);
  swift_bridgeObjectRelease();
  uint64_t v10 = (uint64_t)v4;
  swift_retain();
  sub_18903FCA8((char **)&v10);
  swift_release();
  if (*(void *)(v10 + 16))
  {
    unint64_t v5 = *(void *)(v10 + 32);
    uint64_t v6 = *(void *)(v10 + 40);
    char v7 = *(_BYTE *)(v10 + 48);
    char v8 = *(_BYTE *)(v10 + 49);
    swift_release();
    if ((v8 & 1) == 0)
    {
      uint64_t v10 = 39LL;
      unint64_t v11 = 0xE100000000000000LL;
      if ((v5 & 0x8000000000000000LL) != 0)
      {
        __break(1u);
      }

      else if (v5 < *(void *)(a2 + 16))
      {
        swift_bridgeObjectRetain();
        sub_18906788C();
        swift_bridgeObjectRelease();
        sub_18906788C();
        if ((v7 & 1) != 0)
        {
LABEL_8:
          uint64_t v10 = 0x2067616C66LL;
          unint64_t v11 = 0xE500000000000000LL;
          sub_18906788C();
          swift_bridgeObjectRelease();
          return v10;
        }

        if (!__OFADD__(v6, 2LL))
        {
          sub_189067874();
          uint64_t v10 = 0LL;
          unint64_t v11 = 0xE000000000000000LL;
          sub_18906788C();
          sub_189067904();
          sub_1890677B4();
          swift_bridgeObjectRelease();
          sub_18906788C();
          sub_18906788C();
          swift_bridgeObjectRelease();
          goto LABEL_8;
        }

        goto LABEL_14;
      }

      __break(1u);
LABEL_14:
      __break(1u);
      uint64_t result = swift_release();
      __break(1u);
      return result;
    }
  }

  else
  {
    swift_release();
  }

  return 0LL;
}

uint64_t sub_18901F824(uint64_t a1, uint64_t a2)
{
  if (!a1)
  {
    sub_18900F6C0(a2, (uint64_t)v21);
    __int128 v18 = v21[9];
    __int128 v19 = v21[10];
    __int128 v20 = v21[11];
    __int128 v13 = v21[4];
    __int128 v14 = v21[5];
    __int128 v15 = v21[6];
    __int128 v16 = v21[7];
    __int128 v17 = v21[8];
    __int128 v9 = v21[0];
    __int128 v10 = v21[1];
    __int128 v11 = v21[2];
    __int128 v12 = v21[3];
    return sub_18901FA14();
  }

  MEMORY[0x1895DD34C]();
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C761130);
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C761138);
  sub_188FFCFB0(v21, (uint64_t)&v9);
  __swift_project_boxed_opaque_existential_1(&v9, *((uint64_t *)&v10 + 1));
  sub_189067700();
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v9);
LABEL_10:
    MEMORY[0x1895DD340](a1);
    *(void *)&v21[0] = a1;
    MEMORY[0x1895DD34C](a1);
    MEMORY[0x1895DD34C](a1);
    sub_1890677FC();
    *(void *)&v21[0] = 8250LL;
    *((void *)&v21[0] + 1) = 0xE200000000000000LL;
    sub_18906788C();
    swift_bridgeObjectRelease();
    MEMORY[0x1895DD340](a1);
    return *(void *)&v21[0];
  }

  __swift_project_boxed_opaque_existential_1(&v9, *((uint64_t *)&v10 + 1));
  uint64_t result = sub_189067700();
  if (v6)
  {
    sub_18906788C();
    swift_bridgeObjectRelease();
    uint64_t v7 = 8250LL;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v9);
    MEMORY[0x1895DD340](a1);
    return v7;
  }

  __break(1u);
  return result;
}

uint64_t sub_18901FA14()
{
  uint64_t v1 = *(void *)(v0 + 40);
  unint64_t v2 = *(void *)(v1 + 16);
  if (!v2) {
    return 0LL;
  }
  if (v2 > 5)
  {
    uint64_t v14 = MEMORY[0x18961AFE8];
    swift_bridgeObjectRetain();
    sub_188FFF34C(0LL, v2, 0);
    uint64_t v8 = v1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_18906788C();
      swift_bridgeObjectRelease();
      unint64_t v10 = *(void *)(v14 + 16);
      unint64_t v9 = *(void *)(v14 + 24);
      if (v10 >= v9 >> 1) {
        sub_188FFF34C((char *)(v9 > 1), v10 + 1, 1);
      }
      v8 += 16LL;
      *(void *)(v14 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v10 + 1;
      uint64_t v11 = v14 + 16 * v10;
      *(void *)(v11 + 32) = 539828256LL;
      *(void *)(v11 + 40) = 0xE400000000000000LL;
      --v2;
    }

    while (v2);
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C760FE8);
    sub_189009B3C((unint64_t *)&qword_18C760FF0, &qword_18C760FE8, MEMORY[0x189618458]);
    sub_1890677C0();
    swift_release();
    sub_189067C28();
    swift_bridgeObjectRelease();
    unint64_t v12 = 0xD000000000000027LL;
    sub_18906788C();
    swift_bridgeObjectRelease();
    return v12;
  }

  uint64_t v13 = MEMORY[0x18961AFE8];
  swift_bridgeObjectRetain();
  sub_188FFF34C(0LL, v2, 0);
  uint64_t v3 = v1 + 40;
  do
  {
    swift_bridgeObjectRetain();
    sub_18906788C();
    sub_18906788C();
    swift_bridgeObjectRelease();
    unint64_t v5 = *(void *)(v13 + 16);
    unint64_t v4 = *(void *)(v13 + 24);
    if (v5 >= v4 >> 1) {
      sub_188FFF34C((char *)(v4 > 1), v5 + 1, 1);
    }
    v3 += 16LL;
    *(void *)(v13 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v5 + 1;
    uint64_t v6 = (void *)(v13 + 32 + 16 * v5);
    *uint64_t v6 = 39LL;
    v6[1] = 0xE100000000000000LL;
    --v2;
  }

  while (v2);
  swift_bridgeObjectRelease();
  if (*(void *)(v13 + 16) <= 2uLL)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C760FE8);
    sub_189009B3C((unint64_t *)&qword_18C760FF0, &qword_18C760FE8, MEMORY[0x189618458]);
    sub_1890677C0();
    swift_release();
    goto LABEL_18;
  }

  sub_1890112E8(1LL, v13);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C761028);
  sub_189009B3C(&qword_18C761030, &qword_18C761028, MEMORY[0x189618F88]);
  sub_1890677C0();
  swift_unknownObjectRelease();
  if (*(void *)(v13 + 16))
  {
    swift_bridgeObjectRetain();
    swift_release();
    sub_18906788C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_18906788C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_18:
    sub_189067C28();
    swift_bridgeObjectRelease();
    unint64_t v12 = 0xD000000000000018LL;
    sub_18906788C();
    swift_bridgeObjectRelease();
    sub_18906788C();
    return v12;
  }

  uint64_t result = swift_release();
  __break(1u);
  return result;
}

void sub_18901FE80( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  unsigned __int8 v11 = a4;
  switch(a11)
  {
    case 1:
    case 2:
    case 3:
    case 5:
    case 6:
    case 9:
      goto LABEL_8;
    case 4:
      uint64_t v14 = a4;
      uint64_t v15 = a5;
      unsigned __int8 v16 = a6;
      goto LABEL_4;
    case 7:
      swift_bridgeObjectRetain();
      uint64_t v14 = a2;
      uint64_t v15 = a3;
      unsigned __int8 v16 = v11;
LABEL_4:
      sub_188FFCF80(v14, v15, v16);
      return;
    case 8:
      sub_188FFCF80(a4, a5, a6);
      goto LABEL_8;
    case 10:
      swift_bridgeObjectRetain();
      goto LABEL_7;
    case 11:
LABEL_7:
      swift_bridgeObjectRetain();
LABEL_8:
      swift_bridgeObjectRetain();
      return;
    case 12:
      swift_bridgeObjectRetain();
      sub_18901FFB8(a2, a3, v11);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_10;
    case 13:
    case 14:
LABEL_10:
      JUMPOUT(0x1895DD34CLL);
    default:
      return;
  }

uint64_t sub_18901FFB8(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 0xFDu) {
    return sub_188FFCF80(a1, a2, a3);
  }
  return a1;
}

void sub_18901FFCC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  unsigned __int8 v11 = a4;
  switch(a11)
  {
    case 1:
    case 2:
    case 3:
    case 5:
    case 6:
    case 9:
      goto LABEL_8;
    case 4:
      uint64_t v14 = a4;
      uint64_t v15 = a5;
      unsigned __int8 v16 = a6;
      goto LABEL_4;
    case 7:
      swift_bridgeObjectRelease();
      uint64_t v14 = a2;
      uint64_t v15 = a3;
      unsigned __int8 v16 = v11;
LABEL_4:
      sub_188FFCF98(v14, v15, v16);
      return;
    case 8:
      sub_188FFCF98(a4, a5, a6);
      goto LABEL_8;
    case 10:
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 11:
LABEL_7:
      swift_bridgeObjectRelease();
LABEL_8:
      swift_bridgeObjectRelease();
      return;
    case 12:
      swift_bridgeObjectRelease();
      sub_189009B7C(a2, a3, v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_10;
    case 13:
    case 14:
LABEL_10:
      JUMPOUT(0x1895DD340LL);
    default:
      return;
  }

uint64_t sub_189020104(uint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4, uint64_t a5)
{
  unint64_t v5 = *(void *)(result + 16);
  if (v5)
  {
    unint64_t v6 = 0LL;
    int v7 = a4 >> 6;
    uint64_t v8 = result + 48;
    uint64_t v26 = -(uint64_t)v5;
    uint64_t v9 = MEMORY[0x18961AFE8];
    uint64_t v24 = result + 48;
    unint64_t v25 = *(void *)(result + 16);
    while (1)
    {
      if (v6 <= v5) {
        unint64_t v10 = v5;
      }
      else {
        unint64_t v10 = v6;
      }
      uint64_t v28 = -(uint64_t)v10;
      for (uint64_t i = (unsigned __int8 *)(v8 + 24 * v6++); ; i += 24)
      {
        if (v28 + v6 == 1)
        {
          __break(1u);
          return result;
        }

        uint64_t v13 = *((void *)i - 2);
        uint64_t v12 = *((void *)i - 1);
        unsigned int v14 = *i;
        if (v14 >> 6)
        {
          if (v14 >> 6 == 1)
          {
            swift_bridgeObjectRetain();
            sub_18906788C();
            sub_1890677B4();
            uint64_t v15 = 0LL;
            unint64_t v16 = 0xE000000000000000LL;
            if (!v7) {
              goto LABEL_11;
            }
            goto LABEL_15;
          }

          uint64_t v30 = 45LL;
          unint64_t v18 = 0xE100000000000000LL;
        }

        else
        {
          uint64_t v30 = 11565LL;
          unint64_t v18 = 0xE200000000000000LL;
        }

        unint64_t v31 = v18;
        swift_bridgeObjectRetain();
        sub_18906788C();
        uint64_t v15 = v30;
        unint64_t v16 = v31;
        if (!v7)
        {
LABEL_11:
          uint64_t v29 = 11565LL;
          unint64_t v17 = 0xE200000000000000LL;
          goto LABEL_18;
        }

uint64_t sub_1890203B8(uint64_t result)
{
  unint64_t v1 = 0LL;
  unint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = result + 48;
  uint64_t v4 = MEMORY[0x18961AFE8];
LABEL_2:
  if (v1 <= v2) {
    unint64_t v5 = v2;
  }
  else {
    unint64_t v5 = v1;
  }
  unint64_t v6 = v5 + 1;
  int v7 = (unsigned __int8 *)(v3 + 24 * v1);
  while (1)
  {
    if (v2 == v1) {
      return v4;
    }
    if (v6 == ++v1) {
      break;
    }
    uint64_t v8 = v7 + 24;
    unsigned __int8 v9 = *v7;
    int v10 = *v7 & 0xC0;
    v7 += 24;
    if (v10 != 64)
    {
      uint64_t v16 = v3;
      uint64_t v11 = *((void *)v8 - 5);
      uint64_t v12 = *((void *)v8 - 4);
      sub_188FFCF80(v11, v12, v9);
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0) {
        uint64_t result = (uint64_t)sub_188FFF368(0LL, *(void *)(v4 + 16) + 1LL, 1);
      }
      unint64_t v14 = *(void *)(v4 + 16);
      unint64_t v13 = *(void *)(v4 + 24);
      if (v14 >= v13 >> 1) {
        uint64_t result = (uint64_t)sub_188FFF368((char *)(v13 > 1), v14 + 1, 1);
      }
      *(void *)(v4 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v14 + 1;
      uint64_t v15 = v4 + 24 * v14;
      *(void *)(v15 + 32) = v11;
      *(void *)(v15 + 40) = v12;
      *(_BYTE *)(v15 + 48) = v9;
      uint64_t v3 = v16;
      goto LABEL_2;
    }
  }

  __break(1u);
  return result;
}

uint64_t sub_1890204EC(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  unint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    return 0LL;
  }
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v7 = *(void *)(a1 + 40);
  unsigned __int8 v9 = *(_BYTE *)(a1 + 48);
  swift_bridgeObjectRetain();
  uint64_t result = sub_188FFCF80(v8, v7, v9);
  if (v4 == 1) {
    goto LABEL_37;
  }
  int v11 = a4 >> 6;
  uint64_t v12 = a1 + 48;
  uint64_t v31 = -(uint64_t)v4;
  unint64_t v13 = 1LL;
  uint64_t v28 = a1 + 48;
  unint64_t v29 = v4;
  while (2)
  {
    uint64_t v34 = v8;
    uint64_t v35 = v7;
    unsigned __int8 v30 = v9;
    int v32 = v9 >> 6;
    if (v13 <= v4) {
      unint64_t v14 = v4;
    }
    else {
      unint64_t v14 = v13;
    }
    uint64_t v33 = -(uint64_t)v14;
    uint64_t v15 = (unsigned __int8 *)(v12 + 24 * v13++);
    while (1)
    {
      if (v33 + v13 == 1)
      {
        __break(1u);
        return result;
      }

      uint64_t v8 = *((void *)v15 - 2);
      uint64_t v7 = *((void *)v15 - 1);
      unsigned int v36 = *v15;
      if (v36 >> 6)
      {
        if (v36 >> 6 == 1)
        {
          swift_bridgeObjectRetain();
          sub_18906788C();
          sub_1890677B4();
          uint64_t v16 = 0LL;
          unint64_t v17 = 0xE000000000000000LL;
          if (!v11) {
            goto LABEL_12;
          }
          goto LABEL_16;
        }

        uint64_t v38 = 45LL;
        unint64_t v19 = 0xE100000000000000LL;
      }

      else
      {
        uint64_t v38 = 11565LL;
        unint64_t v19 = 0xE200000000000000LL;
      }

      unint64_t v41 = v19;
      swift_bridgeObjectRetain();
      sub_18906788C();
      uint64_t v16 = v38;
      unint64_t v17 = v41;
      if (!v11)
      {
LABEL_12:
        uint64_t v37 = 11565LL;
        unint64_t v18 = 0xE200000000000000LL;
        goto LABEL_19;
      }

LABEL_16:
      if (v11 == 1)
      {
        uint64_t v37 = 0LL;
        unint64_t v42 = 0xE000000000000000LL;
        sub_18906788C();
        sub_1890677B4();
        goto LABEL_20;
      }

      uint64_t v37 = 45LL;
      unint64_t v18 = 0xE100000000000000LL;
LABEL_19:
      unint64_t v42 = v18;
      sub_18906788C();
LABEL_20:
      sub_18901EE2C(v37, v42, v16, v17);
      uint64_t v21 = v20;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v32)
      {
        if (v32 == 1)
        {
          sub_18906788C();
          sub_1890677B4();
          uint64_t v22 = 0LL;
          unint64_t v23 = 0xE000000000000000LL;
          if (!v11) {
            goto LABEL_23;
          }
          goto LABEL_27;
        }

        uint64_t v40 = 45LL;
        unint64_t v25 = 0xE100000000000000LL;
      }

      else
      {
        uint64_t v40 = 11565LL;
        unint64_t v25 = 0xE200000000000000LL;
      }

      unint64_t v43 = v25;
      sub_18906788C();
      uint64_t v22 = v40;
      unint64_t v23 = v43;
      if (!v11)
      {
LABEL_23:
        uint64_t v39 = 11565LL;
        unint64_t v24 = 0xE200000000000000LL;
        goto LABEL_30;
      }

  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

    unint64_t v17 = 0LL;
    uint64_t v15 = 0LL;
    uint64_t v16 = 0LL;
LABEL_17:
    *(void *)a4 = v17;
    *(int64x2_t *)(a4 + 8) = v9;
    *(void *)(a4 + 24) = v15;
    *(void *)(a4 + 32) = v16;
    return result;
  }

char *sub_1890208B8(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  unsigned __int8 v4 = a3;
  uint64_t v5 = a2;
  uint64_t v6 = a1;
  if ((a3 & 0xC0) == 0x40) {
    goto LABEL_25;
  }
  uint64_t v7 = *v3;
  uint64_t v8 = *(void *)(*v3 + 16);
  uint64_t v9 = MEMORY[0x18961AFE8];
  if (!v8)
  {
    uint64_t v11 = MEMORY[0x18961AFE8];
LABEL_24:
    sub_188FFCF80(v6, v5, v4);
    uint64_t v21 = sub_189020104(v11, v6, v5, v4, 4LL);
    sub_188FFCF98(v6, v5, v4);
    swift_bridgeObjectRelease();
    uint64_t v22 = sub_1890203B8(v21);
    swift_bridgeObjectRelease();
    sub_188FFCF80(v6, v5, v4);
    uint64_t v23 = sub_1890204EC(v22, v6, v5, v4);
    uint64_t v25 = v24;
    unsigned __int8 v27 = v26;
    unsigned int v28 = v26;
    sub_188FFCF98(v6, v5, v4);
    swift_bridgeObjectRelease();
    if (v28 <= 0xFD)
    {
      sub_189067C28();
      swift_bridgeObjectRelease();
      sub_1890520B0(v6, v5, v4);
      sub_18906788C();
      swift_bridgeObjectRelease();
      sub_18906788C();
      sub_1890520B0(v23, v25, v27);
      sub_189009B7C(v23, v25, v27);
      sub_18906788C();
      swift_bridgeObjectRelease();
      goto LABEL_27;
    }

LABEL_25:
    sub_189067C28();
    swift_bridgeObjectRelease();
    sub_1890520B0(v6, v5, v4);
    sub_18906788C();
    swift_bridgeObjectRelease();
LABEL_27:
    sub_18906788C();
    return (char *)0xD000000000000010LL;
  }

  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v10 = 32LL;
  uint64_t v11 = v9;
  while (1)
  {
    uint64_t result = *(char **)(v7 + v10);
    uint64_t v13 = (unint64_t)result >= 2 ? *(void *)(v7 + v10) : v9;
    uint64_t v14 = *(void *)(v13 + 16);
    int64_t v15 = *(void *)(v11 + 16);
    int64_t v16 = v15 + v14;
    if (__OFADD__(v15, v14)) {
      break;
    }
    sub_188FFD0E0((unint64_t)result);
    uint64_t result = (char *)swift_isUniquelyReferenced_nonNull_native();
    if ((_DWORD)result && v16 <= *(void *)(v11 + 24) >> 1)
    {
      if (*(void *)(v13 + 16)) {
        goto LABEL_18;
      }
    }

    else
    {
      if (v15 <= v16) {
        int64_t v17 = v15 + v14;
      }
      else {
        int64_t v17 = v15;
      }
      uint64_t result = sub_189057094(result, v17, 1, (char *)v11);
      uint64_t v11 = (uint64_t)result;
      if (*(void *)(v13 + 16))
      {
LABEL_18:
        if ((*(void *)(v11 + 24) >> 1) - *(void *)(v11 + 16) < v14) {
          goto LABEL_30;
        }
        uint64_t result = (char *)swift_arrayInitWithCopy();
        if (v14)
        {
          uint64_t v18 = *(void *)(v11 + 16);
          BOOL v19 = __OFADD__(v18, v14);
          uint64_t v20 = v18 + v14;
          if (v19) {
            goto LABEL_31;
          }
          *(void *)(v11 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v20;
        }

        goto LABEL_5;
      }
    }

    if (v14) {
      goto LABEL_29;
    }
LABEL_5:
    swift_bridgeObjectRelease();
    v10 += 192LL;
    if (!--v8)
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      unsigned __int8 v4 = a3;
      uint64_t v6 = a1;
      uint64_t v5 = a2;
      goto LABEL_24;
    }
  }

  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

  __break(1u);
  return result;
}

    uint64_t v12 = (v23 - 1) & v23;
    int64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    int64_t v16 = 16 * v15;
    int64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    BOOL v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }

  uint64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  uint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    uint64_t v9 = v24;
    goto LABEL_25;
  }

  while (1)
  {
    uint64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1LL)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    uint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }

    uint64_t v12 = (v19 - 1) & v19;
    int64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    int64_t v16 = 8 * v15;
    int64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v__swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v__swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v17;
    swift_retain();
    uint64_t result = (void *)swift_retain();
  }

  uint64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  BOOL v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    uint64_t v9 = v20;
    goto LABEL_25;
  }

  while (1)
  {
    uint64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1LL)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    BOOL v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }

    uint64_t v12 = (v26 - 1) & v26;
    int64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    int64_t v16 = 24 * v15;
    int64_t v17 = *(void *)(v2 + 48) + 24 * v15;
    uint64_t v18 = *(void *)v17;
    BOOL v19 = 72 * v15;
    unsigned int v28 = *(_OWORD *)(v17 + 8);
    sub_1890145E8(*(void *)(v2 + 56) + 72 * v15, (uint64_t)v29);
    uint64_t v20 = *(void *)(v4 + 48) + v16;
    *(void *)uint64_t v20 = v18;
    *(_OWORD *)(v20 + 8) = v28;
    uint64_t v21 = *(void *)(v4 + 56) + v19;
    *(_OWORD *)uint64_t v21 = v29[0];
    uint64_t v22 = v29[1];
    uint64_t v23 = v29[2];
    uint64_t v24 = v29[3];
    *(_BYTE *)(v21 + 64) = v30;
    *(_OWORD *)(v21 + 32) = v23;
    *(_OWORD *)(v21 + 48) = v24;
    *(_OWORD *)(v21 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v22;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }

  unsigned __int8 v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unsigned __int8 v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    uint64_t v9 = v27;
    goto LABEL_25;
  }

  while (1)
  {
    uint64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1LL)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unsigned __int8 v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }

    uint64_t v12 = (v23 - 1) & v23;
    int64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    int64_t v16 = 24 * v15;
    int64_t v17 = *(void *)(v2 + 48) + v16;
    uint64_t v18 = *(void *)v17;
    BOOL v19 = *(void *)(v17 + 8);
    uint64_t v20 = *(void *)(v4 + 48) + v16;
    uint64_t v21 = *(_BYTE *)(v17 + 16);
    *(void *)uint64_t v20 = *(void *)v17;
    *(void *)(v20 + 8) = v19;
    *(_BYTE *)(v20 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v21;
    uint64_t result = (void *)sub_188FFD4F4(v18, v19, v21);
  }

  uint64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  uint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    uint64_t v9 = v24;
    goto LABEL_25;
  }

  while (1)
  {
    uint64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1LL)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    uint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }

    uint64_t v24 = __clz(__rbit64(v22));
    uint64_t v12 = (v22 - 1) & v22;
    int64_t v15 = v24 + (v9 << 6);
LABEL_12:
    int64_t v16 = 24 * v15;
    int64_t v17 = *(void *)(v2 + 48) + v16;
    uint64_t v18 = *(_BYTE *)(v17 + 16);
    BOOL v19 = *(_BYTE *)(v17 + 17);
    uint64_t v20 = *(void *)(v4 + 48) + v16;
    *(_OWORD *)uint64_t v20 = *(_OWORD *)v17;
    *(_BYTE *)(v20 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v18;
    *(_BYTE *)(v20 + 17) = v19;
  }

  uint64_t v23 = v21 + 2;
  if (v23 >= v13) {
    goto LABEL_26;
  }
  uint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    uint64_t v9 = v23;
    goto LABEL_25;
  }

  while (1)
  {
    uint64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1LL)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    uint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }

  sub_188FFAD68();
  swift_allocError();
  *(void *)uint64_t v25 = a1;
  *(void *)(v25 + 8) = a2;
  *(_OWORD *)(v25 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 0u;
  *(_OWORD *)(v25 + 32) = 0u;
  *(_OWORD *)(v25 + 48) = 0u;
  *(_OWORD *)(v25 + 64) = 0u;
  *(_BYTE *)(v25 + 80) = 5;
  swift_bridgeObjectRetain();
  swift_willThrow();
  return v3;
}

unint64_t sub_189020C74(uint64_t a1, uint64_t a2, int a3)
{
  unsigned __int8 v3 = a3;
  sub_18901EC88(a1, a2, a3);
  if (v6)
  {
    sub_189067C28();
    swift_bridgeObjectRelease();
    sub_1890520B0(a1, a2, v3);
    sub_18906788C();
    swift_bridgeObjectRelease();
    sub_18906788C();
  }

  else
  {
    sub_189067C28();
    swift_bridgeObjectRelease();
    sub_1890520B0(a1, a2, v3);
  }

  sub_18906788C();
  swift_bridgeObjectRelease();
  sub_18906788C();
  return 0xD000000000000013LL;
}

uint64_t sub_189020DE8(uint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  unint64_t v4 = *(void *)(result + 16);
  if (!v4) {
    return MEMORY[0x18961AFE8];
  }
  unint64_t v8 = 0LL;
  uint64_t v9 = result + 32;
  uint64_t v10 = MEMORY[0x18961AFE8];
  uint64_t v32 = result + 32;
  do
  {
    if (v8 <= v4) {
      unint64_t v11 = v4;
    }
    else {
      unint64_t v11 = v8;
    }
    uint64_t v12 = (__int128 *)(v9 + 192 * v8);
    for (unint64_t i = v8; ; ++i)
    {
      if (v11 == i)
      {
        __break(1u);
        return result;
      }

      __int128 v14 = v12[9];
      __int128 v41 = v12[8];
      __int128 v42 = v14;
      __int128 v15 = v12[11];
      __int128 v43 = v12[10];
      __int128 v44 = v15;
      __int128 v16 = v12[5];
      __int128 v37 = v12[4];
      __int128 v38 = v16;
      __int128 v17 = v12[7];
      __int128 v39 = v12[6];
      __int128 v40 = v17;
      __int128 v18 = v12[1];
      __int128 v33 = *v12;
      __int128 v34 = v18;
      __int128 v19 = v12[3];
      __int128 v35 = v12[2];
      __int128 v36 = v19;
      unint64_t v8 = i + 1;
      uint64_t result = sub_18901C2AC(a2, a3, a4, v35);
      if ((result & 1) != 0) {
        break;
      }
      v12 += 12;
      if (v4 == v8) {
        return v10;
      }
    }

    sub_188FFCFF4((uint64_t)&v33);
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v45 = v10;
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_188FFF2C0(0LL, *(void *)(v10 + 16) + 1LL, 1);
      uint64_t v10 = v45;
    }

    unint64_t v21 = *(void *)(v10 + 16);
    unint64_t v20 = *(void *)(v10 + 24);
    if (v21 >= v20 >> 1)
    {
      uint64_t result = (uint64_t)sub_188FFF2C0((char *)(v20 > 1), v21 + 1, 1);
      uint64_t v10 = v45;
    }

    *(void *)(v10 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v21 + 1;
    uint64_t v22 = (_OWORD *)(v10 + 192 * v21);
    __int128 v23 = v33;
    __int128 v24 = v34;
    __int128 v25 = v36;
    void v22[4] = v35;
    v22[5] = v25;
    _OWORD v22[2] = v23;
    v22[3] = v24;
    __int128 v26 = v37;
    __int128 v27 = v38;
    __int128 v28 = v40;
    v22[8] = v39;
    v22[9] = v28;
    v22[6] = v26;
    v22[7] = v27;
    __int128 v29 = v41;
    __int128 v30 = v42;
    __int128 v31 = v44;
    v22[12] = v43;
    v22[13] = v31;
    v22[10] = v29;
    v22[11] = v30;
    uint64_t v9 = v32;
  }

  while (v4 - 1 != i);
  return v10;
}

uint64_t sub_189020FA0( uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9)
{
  uint64_t v16 = *v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_189020DE8(v16, a6, a7, a8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v17 + 16))
  {
    __int128 v19 = *(_OWORD *)(v17 + 32);
    __int128 v18 = *(_OWORD *)(v17 + 48);
    __int128 v20 = *(_OWORD *)(v17 + 80);
    *(_OWORD *)&v43[32] = *(_OWORD *)(v17 + 64);
    *(_OWORD *)&v43[48] = v20;
    __int128 v21 = *(_OWORD *)(v17 + 96);
    __int128 v22 = *(_OWORD *)(v17 + 112);
    __int128 v23 = *(_OWORD *)(v17 + 144);
    *(_OWORD *)&v43[96] = *(_OWORD *)(v17 + 128);
    *(_OWORD *)&v43[112] = v23;
    *(_OWORD *)&v43[64] = v21;
    *(_OWORD *)&v43[80] = v22;
    __int128 v24 = *(_OWORD *)(v17 + 160);
    __int128 v25 = *(_OWORD *)(v17 + 176);
    __int128 v26 = *(_OWORD *)(v17 + 208);
    __int128 v46 = *(_OWORD *)(v17 + 192);
    __int128 v47 = v26;
    __int128 v44 = v24;
    __int128 v45 = v25;
    *(_OWORD *)__int128 v43 = v19;
    *(_OWORD *)&v43[16] = v18;
    __int128 v38 = *(_OWORD *)(v17 + 160);
    __int128 v39 = *(_OWORD *)(v17 + 176);
    __int128 v40 = *(_OWORD *)(v17 + 192);
    __int128 v41 = *(_OWORD *)(v17 + 208);
    __int128 v34 = *(_OWORD *)(v17 + 96);
    __int128 v35 = *(_OWORD *)(v17 + 112);
    __int128 v36 = *(_OWORD *)(v17 + 128);
    __int128 v37 = *(_OWORD *)(v17 + 144);
    __int128 v30 = *(_OWORD *)(v17 + 32);
    __int128 v31 = *(_OWORD *)(v17 + 48);
    __int128 v32 = *(_OWORD *)(v17 + 64);
    __int128 v33 = *(_OWORD *)(v17 + 80);
    sub_188FFCFF4((uint64_t)v43);
    swift_bridgeObjectRelease();
    __int128 v52 = *(_OWORD *)&v43[72];
    __int128 v53 = *(_OWORD *)&v43[88];
    __int128 v54 = *(_OWORD *)&v43[104];
    uint64_t v55 = *(void *)&v43[120];
    __int128 v48 = *(_OWORD *)&v43[8];
    __int128 v49 = *(_OWORD *)&v43[24];
    __int128 v50 = *(_OWORD *)&v43[40];
    __int128 v51 = *(_OWORD *)&v43[56];
    __int128 v56 = *(_OWORD *)&v43[88];
    v42[10] = v40;
    v42[11] = v41;
    v42[8] = v38;
    v42[9] = v39;
    v42[6] = v36;
    v42[7] = v37;
    v42[4] = v34;
    v42[5] = v35;
    v42[2] = v32;
    v42[3] = v33;
    v42[0] = v30;
    v42[1] = v31;
    nullsub_1(v42);
    uint64_t v27 = v56 & 0xFFFFFFFFFFFFLL;
    if ((*((void *)&v56 + 1) & 0x2000000000000000LL) != 0) {
      uint64_t v27 = HIBYTE(*((void *)&v56 + 1)) & 0xFLL;
    }
    if (v27)
    {
      *(_OWORD *)unint64_t v57 = v56;
      swift_bridgeObjectRetain();
    }

    else
    {
      sub_188FFCFF4((uint64_t)v43);
      sub_18900F670((uint64_t)&v56);
      sub_189049A90((uint64_t *)v43, v57);
      sub_18900F698((uint64_t)&v56);
      sub_1890099F8((uint64_t)v43);
    }

    unint64_t v28 = v57[1];
    sub_18900F6C0((uint64_t)v42, (uint64_t)v57);
  }

  else
  {
    swift_bridgeObjectRelease();
    sub_18900F870(v43);
    sub_18900F6C0((uint64_t)v43, (uint64_t)v57);
    unint64_t v28 = 0LL;
  }

  sub_18900F6C0((uint64_t)v57, (uint64_t)v42);
  sub_18901F824(a9, (uint64_t)v42);
  if (!v28)
  {
    if (a3 <= 0xFDu)
    {
      sub_188FFCF80(a1, a2, a3);
      sub_189067C28();
      swift_bridgeObjectRelease();
      sub_18906788C();
      sub_18906788C();
      sub_1890520B0(a1, a2, a3);
      sub_189009B7C(a1, a2, a3);
      sub_18906788C();
      swift_bridgeObjectRelease();
    }

    else
    {
      sub_189067C28();
      swift_bridgeObjectRelease();
      sub_18906788C();
    }

    sub_18906788C();
    sub_18906788C();
    goto LABEL_17;
  }

  if (a3 > 0xFDu)
  {
    sub_189067C28();
    swift_bridgeObjectRelease();
    sub_18906788C();
    sub_18906788C();
    sub_18906788C();
    sub_18906788C();
    sub_18906788C();
    swift_bridgeObjectRelease();
LABEL_17:
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }

  sub_188FFCF80(a1, a2, a3);
  sub_189067C28();
  swift_bridgeObjectRelease();
  sub_18906788C();
  sub_18906788C();
  sub_1890520B0(a1, a2, a3);
  sub_18906788C();
  swift_bridgeObjectRelease();
  sub_18906788C();
  sub_18906788C();
  sub_18906788C();
  sub_18906788C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_189009B7C(a1, a2, a3);
LABEL_18:
  sub_189021878( v57,  (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_18900F788);
  return 0x756C617620656854LL;
}

unint64_t sub_18902151C( uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v13 = *v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_18901AF44(v13, a4, a5, a6, (uint64_t)v26);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_18900F6C0((uint64_t)v26, (uint64_t)v41);
  sub_18900F6C0((uint64_t)v41, (uint64_t)v42);
  sub_18900F6C0((uint64_t)v41, (uint64_t)v25);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_189021878( v41,  (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_18900F788);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_189020DE8(v13, a4, a5, a6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*(void *)(v14 + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0LL;
  }

  __int128 v15 = *(_OWORD *)(v14 + 176);
  __int128 v28 = *(_OWORD *)(v14 + 160);
  __int128 v29 = v15;
  __int128 v16 = *(_OWORD *)(v14 + 208);
  __int128 v30 = *(_OWORD *)(v14 + 192);
  __int128 v31 = v16;
  __int128 v17 = *(_OWORD *)(v14 + 112);
  *(_OWORD *)&v27[64] = *(_OWORD *)(v14 + 96);
  *(_OWORD *)&v27[80] = v17;
  __int128 v18 = *(_OWORD *)(v14 + 144);
  *(_OWORD *)&v27[96] = *(_OWORD *)(v14 + 128);
  *(_OWORD *)&v27[112] = v18;
  __int128 v19 = *(_OWORD *)(v14 + 48);
  *(_OWORD *)uint64_t v27 = *(_OWORD *)(v14 + 32);
  *(_OWORD *)&v27[16] = v19;
  __int128 v20 = *(_OWORD *)(v14 + 80);
  *(_OWORD *)&v27[32] = *(_OWORD *)(v14 + 64);
  *(_OWORD *)&v27[48] = v20;
  sub_188FFCFF4((uint64_t)v27);
  swift_bridgeObjectRelease();
  __int128 v36 = *(_OWORD *)&v27[72];
  __int128 v37 = *(_OWORD *)&v27[88];
  __int128 v38 = *(_OWORD *)&v27[104];
  uint64_t v39 = *(void *)&v27[120];
  __int128 v32 = *(_OWORD *)&v27[8];
  __int128 v33 = *(_OWORD *)&v27[24];
  __int128 v34 = *(_OWORD *)&v27[40];
  __int128 v35 = *(_OWORD *)&v27[56];
  __int128 v40 = *(_OWORD *)&v27[88];
  uint64_t v21 = *(void *)&v27[88] & 0xFFFFFFFFFFFFLL;
  if ((*(void *)&v27[96] & 0x2000000000000000LL) != 0) {
    uint64_t v21 = HIBYTE(*(void *)&v27[96]) & 0xFLL;
  }
  if (v21)
  {
    *(_OWORD *)__int128 v24 = v37;
    swift_bridgeObjectRetain();
  }

  else
  {
    swift_bridgeObjectRetain();
    sub_189049A90((uint64_t *)v27, v24);
    sub_18900F698((uint64_t)&v40);
  }

  sub_1890099F8((uint64_t)v27);
  if (a3 <= 0xFDu)
  {
    v24[0] = sub_1890520B0(a1, a2, a3);
    v24[1] = v23;
    sub_18906788C();
  }

  else
  {
    v24[0] = 60LL;
    v24[1] = 0xE100000000000000LL;
  }

  sub_18906788C();
  sub_18906788C();
  sub_18906788C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v24[0];
}

void *sub_189021878( void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

unint64_t sub_1890218E4( unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  if (a5)
  {
    sub_188FFD0E0(result);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_188FFD0F0(a17, a18, a19);
    sub_188FFD130();
    return swift_retain();
  }

  return result;
}

void sub_1890219CC( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  *(void *)&__int128 v233 = a4;
  LODWORD(v232) = a5 & 1;
  uint64_t v261 = a1;
  MEMORY[0x1895DD34C]();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_18C761130);
  uint64_t v11 = swift_dynamicCast();
  uint64_t v236 = a1;
  *(void *)&__int128 v235 = a3;
  if ((_DWORD)v11)
  {
    *(void *)&__int128 v229 = a2;
    uint64_t v12 = v264;
    *(void *)&__int128 v240 = v263;
    uint64_t v14 = v265;
    uint64_t v13 = v266;
    uint64_t v15 = v267;
    uint64_t v16 = v272;
    uint64_t v241 = v271;
    uint64_t v17 = v273;
    v245 = (void *)v270;
    switch(v274)
    {
      case 0u:
        LOBYTE(v246) = v264;
        uint64_t v18 = v273;
        uint64_t v244 = v269;
        uint64_t v242 = v268;
        uint64_t v19 = swift_bridgeObjectRetain();
        sub_1890198C4(v19, (char *)&v246, (uint64_t *)v255);
        swift_bridgeObjectRelease();
        *(void *)&__int128 v234 = sub_189014BD0(v233, v232);
        v239 = (void *)v20;
        MEMORY[0x1895DD340](v236);
        swift_bridgeObjectRelease();
        sub_18901FFCC(v12, v14, v13, v15, v242, v244, (uint64_t)v245, v241, v16, v18, 0);
        sub_188FFC088((uint64_t)v255);
        MEMORY[0x1895DD340](v261);
        uint64_t v21 = 0LL;
        *(void *)&__int128 v235 = 0LL;
        *(void *)&__int128 v240 = 0LL;
        unint64_t v22 = 0LL;
        char v23 = 0;
        uint64_t v12 = v234;
        uint64_t v14 = (uint64_t)v239;
        goto LABEL_125;
      case 1u:
        uint64_t v46 = v266;
        uint64_t v47 = v265;
        uint64_t v48 = v273;
        unsigned __int8 v49 = v269;
        uint64_t v243 = v272;
        uint64_t v50 = sub_188FFA928(v229, v235);
        uint64_t v52 = v51;
        uint64_t v242 = v268;
        sub_18901FE80(v264, v265, v266, v267, v268, v269, (uint64_t)v245, v241, v272, v273, 1);
        swift_bridgeObjectRetain();
        sub_18900C3E4(v50, v52, v264, v265, (uint64_t *)v255);
        __int128 v235 = *(_OWORD *)&v255[8];
        *(void *)&__int128 v234 = sub_18900B6FC();
        *(void *)&__int128 v233 = v152;
        MEMORY[0x1895DD340](v236);
        swift_bridgeObjectRelease();
        sub_18901FFCC(v12, v47, v46, v15, v242, v49, (uint64_t)v245, v241, v243, v48, 1);
        sub_18901FFCC(v12, v47, v46, v15, v242, v49, (uint64_t)v245, v241, v243, v48, 1);
        swift_bridgeObjectRelease();
        uint64_t v153 = v261;
        goto LABEL_123;
      case 2u:
        MEMORY[0x1895DD340](v236);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_18901FFCC(v264, v265, v266, v267, v268, v269, (uint64_t)v245, v241, v272, v273, 2);
        MEMORY[0x1895DD340](v261);
        uint64_t v21 = 0LL;
        *(void *)&__int128 v235 = 0LL;
        *(void *)&__int128 v240 = 0LL;
        unint64_t v22 = 0LL;
        char v23 = 0;
        goto LABEL_125;
      case 0xFu:
        uint64_t v53 = v268 | v269 | v270;
        uint64_t v54 = v241 | v272 | v273;
        if (!(v266 | v265 | v264 | v267 | v53 | v54))
        {
          uint64_t v242 = v268;
          uint64_t v230 = a6;
          uint64_t v231 = v264;
          int64_t v154 = *(void *)(v240 + 16);
          uint64_t v155 = MEMORY[0x18961AFE8];
          uint64_t v244 = v269;
          uint64_t v237 = v267;
          uint64_t v238 = v273;
          if (v154)
          {
            uint64_t v243 = v272;
            v239 = (void *)v266;
            uint64_t v228 = v265;
            uint64_t v260 = MEMORY[0x18961AFE8];
            swift_bridgeObjectRetain();
            sub_188FFF34C(0LL, v154, 0);
            int64_t v156 = v154 - 1;
            for (uint64_t i = v240 + 40; ; i += 16LL)
            {
              (*(void (**)(__int128 *__return_ptr))(*(void *)i + 16LL))(&v246);
              __int128 v256 = v252;
              __int128 v257 = v253;
              uint64_t v258 = v254;
              *(_OWORD *)&v255[32] = v248;
              *(_OWORD *)&v255[48] = v249;
              *(_OWORD *)&v255[64] = v250;
              *(_OWORD *)&v255[80] = v251;
              *(_OWORD *)v255 = v246;
              *(_OWORD *)&v255[16] = v247;
              __int128 v158 = v251;
              swift_bridgeObjectRetain();
              sub_189000568((uint64_t)v255);
              uint64_t v260 = v155;
              unint64_t v160 = *(void *)(v155 + 16);
              unint64_t v159 = *(void *)(v155 + 24);
              if (v160 >= v159 >> 1)
              {
                sub_188FFF34C((char *)(v159 > 1), v160 + 1, 1);
                uint64_t v155 = v260;
              }

              *(void *)(v155 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v160 + 1;
              *(_OWORD *)(v155 + 16 * v160 + 32) = v158;
              if (!v156) {
                break;
              }
              --v156;
            }

            uint64_t v11 = swift_bridgeObjectRelease();
            uint64_t v14 = v228;
            uint64_t v17 = v238;
            uint64_t v13 = (uint64_t)v239;
            uint64_t v16 = v243;
          }

          *(void *)v255 = v155;
          uint64_t v161 = *(void *)(v155 + 16);
          if (v161)
          {
            uint64_t v162 = v161 - 1;
            __int128 v163 = (void *)(v155 + 16 * v161 + 24);
            while (1)
            {
              uint64_t v164 = *(v163 - 1) & 0xFFFFFFFFFFFFLL;
              if ((*v163 & 0x2000000000000000LL) != 0) {
                uint64_t v164 = HIBYTE(*v163) & 0xFLL;
              }
              if (v164) {
                break;
              }
              v163 -= 2;
              if (--v162 == -1)
              {
                uint64_t v165 = v17;
                uint64_t v166 = v14;
                uint64_t v167 = v16;
                uint64_t v168 = v13;
                goto LABEL_71;
              }
            }

            uint64_t v165 = v17;
            uint64_t v166 = v14;
            uint64_t v167 = v16;
            uint64_t v168 = v13;
          }

          else
          {
            uint64_t v165 = v17;
            uint64_t v166 = v14;
            uint64_t v167 = v16;
            uint64_t v168 = v13;
          }

LABEL_13:
        uint64_t v230 = a6;
        *(void *)&__int128 v226 = v10;
        uint64_t v39 = v240;
        uint64_t v43 = v241;
        uint64_t v41 = v265;
        uint64_t v44 = v272;
        swift_bridgeObjectRetain();
        sub_18901FE80(v264, v265, v266, v267, v268, v269, (uint64_t)v245, v241, v272, v273, v274);
        swift_bridgeObjectRelease();
        *(void *)&__int128 v234 = v274;
        v239 = (void *)v266;
        uint64_t v237 = v267;
        uint64_t v242 = v268;
        sub_18901FFCC(v264, v265, v266, v267, v268, v269, (uint64_t)v245, v241, v272, v273, v274);
        MEMORY[0x1895DD340](v261);
        uint64_t v42 = v269;
        uint64_t v45 = v273;
        break;
      default:
        goto LABEL_13;
    }
  }

  else
  {
    MEMORY[0x1895DD340](v261);
    uint64_t v263 = a1;
    MEMORY[0x1895DD34C](a1);
    uint64_t v230 = a6;
    if (swift_dynamicCast())
    {
      uint64_t v24 = *(void *)&v255[8];
      uint64_t v26 = *(void *)&v255[24];
      uint64_t v25 = *(void *)&v255[16];
      uint64_t v27 = *(void *)&v255[40];
      uint64_t v241 = *(void *)&v255[32];
      uint64_t v242 = *(void *)v255;
      uint64_t v29 = *(void *)&v255[56];
      uint64_t v28 = *(void *)&v255[48];
      uint64_t v244 = *(void *)&v255[72];
      v245 = *(void **)&v255[64];
      LODWORD(v243) = v255[80];
      __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC828);
      uint64_t v30 = swift_allocObject();
      *(_OWORD *)(v30 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = xmmword_1890684B0;
      *(void *)(v30 + 32) = sub_188FFA928(a2, a3);
      *(void *)(v30 + 40) = v31;
      sub_189000524();
      *(void *)&__int128 v240 = swift_allocError();
      *(void *)uint64_t v32 = v30;
      uint64_t v34 = v241;
      uint64_t v33 = v242;
      *(void *)(v32 + 8) = v242;
      *(void *)(v32 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v24;
      *(_OWORD *)(v32 + 24) = __PAIR128__(v26, v25);
      *(void *)(v32 + 40) = v34;
      *(void *)(v32 + 48) = v27;
      *(_OWORD *)(v32 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = __PAIR128__(v29, v28);
      uint64_t v35 = v244;
      uint64_t v36 = (uint64_t)v245;
      *(void *)(v32 + 72) = v245;
      *(void *)(v32 + 80) = v35;
      char v37 = v243;
      *(_BYTE *)(v32 + 88) = v243;
      sub_18901FE80(v33, v24, v25, v26, v34, v27, v28, v29, v36, v35, v37);
      sub_1890219CC(&v246, v240, a2, v235, v233, v232);
      MEMORY[0x1895DD340](v236);
      uint64_t v38 = v28;
      a6 = v230;
      sub_18901FFCC(v33, v24, v25, v26, v34, v27, v38, v29, (uint64_t)v245, v244, v243);
      uint64_t v14 = *((void *)&v246 + 1);
      uint64_t v12 = v246;
      *(void *)&__int128 v235 = *((void *)&v247 + 1);
      uint64_t v21 = v247;
      unint64_t v22 = *((void *)&v248 + 1);
      *(void *)&__int128 v240 = v248;
      char v23 = v249;
      MEMORY[0x1895DD340](v263);
      goto LABEL_125;
    }

    *(void *)&__int128 v226 = v10;
    MEMORY[0x1895DD340](v263);
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC828);
    uint64_t v39 = swift_allocObject();
    *(_OWORD *)(v39 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = xmmword_1890684B0;
    *(void *)&__int128 v229 = a2;
    *(void *)(v39 + 32) = sub_188FFA928(a2, a3);
    *(void *)(v39 + 40) = v40;
    MEMORY[0x1895DD34C](a1);
    uint64_t v41 = 0LL;
    v239 = 0LL;
    uint64_t v237 = 0LL;
    uint64_t v242 = 0LL;
    uint64_t v42 = 0LL;
    v245 = 0LL;
    uint64_t v43 = 0LL;
    uint64_t v44 = 0LL;
    uint64_t v45 = 0LL;
    *(void *)&__int128 v234 = 13LL;
    uint64_t v12 = a1;
  }

  uint64_t v238 = v45;
  uint64_t v244 = v42;
  uint64_t v241 = v43;
  uint64_t v228 = v41;
  v255[0] = 0;
  uint64_t v67 = swift_bridgeObjectRetain();
  sub_1890198C4(v67, v255, (uint64_t *)&v246);
  swift_bridgeObjectRelease();
  uint64_t v68 = sub_1890168BC();
  unint64_t v70 = v69;
  sub_188FFC088((uint64_t)&v246);
  *(void *)&__int128 v227 = v68;
  uint64_t v261 = v68;
  unint64_t v262 = v70;
  int64_t v71 = *(void *)(v39 + 16);
  uint64_t v243 = v44;
  *(void *)&__int128 v240 = v39;
  uint64_t v231 = v12;
  if (v71)
  {
    *(void *)v255 = MEMORY[0x18961AFE8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_188FFF34C(0LL, v71, 0);
    uint64_t v72 = *(void *)v255;
    uint64_t v73 = v39 + 40;
    do
    {
      uint64_t v74 = (*(uint64_t (**)(void))(*(void *)v73 + 24LL))();
      uint64_t v76 = v75;
      *(void *)v255 = v72;
      unint64_t v78 = *(void *)(v72 + 16);
      unint64_t v77 = *(void *)(v72 + 24);
      if (v78 >= v77 >> 1)
      {
        sub_188FFF34C((char *)(v77 > 1), v78 + 1, 1);
        uint64_t v72 = *(void *)v255;
      }

      *(void *)(v72 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v78 + 1;
      uint64_t v79 = v72 + 16 * v78;
      *(void *)(v79 + 32) = v74;
      *(void *)(v79 + 40) = v76;
      v73 += 16LL;
      --v71;
    }

    while (v71);
    uint64_t v39 = v240;
    swift_bridgeObjectRelease();
  }

  else
  {
    swift_bridgeObjectRetain();
    uint64_t v72 = MEMORY[0x18961AFE8];
  }

  *(void *)v255 = v72;
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C760FE8);
  sub_189014190();
  sub_1890677C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v80 = sub_18900EF44(0, v39);
  uint64_t v81 = sub_189048B28(v80);
  uint64_t v83 = v82;
  unsigned __int8 v85 = v84;
  unsigned int v86 = v84;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v86 <= 0xFD)
  {
    uint64_t v87 = HIBYTE(v70) & 0xF;
    if ((v70 & 0x2000000000000000LL) == 0) {
      uint64_t v87 = v227 & 0xFFFFFFFFFFFFLL;
    }
    if (v87) {
      sub_18906788C();
    }
    *(void *)v255 = 0LL;
    *(void *)&v255[8] = 0xE000000000000000LL;
    sub_189067C28();
    swift_bridgeObjectRelease();
    strcpy(v255, "  See '");
    *(void *)&v255[8] = 0xE700000000000000LL;
    sub_18906788C();
    swift_bridgeObjectRelease();
    sub_18906788C();
    sub_1890520B0(v81, v83, v85);
    sub_189009B7C(v81, v83, v85);
    sub_18906788C();
    swift_bridgeObjectRelease();
    sub_18906788C();
    sub_18906788C();
  }

  unint64_t v88 = v245;
  uint64_t v89 = (uint64_t)v239;
  swift_bridgeObjectRelease();
  uint64_t v90 = v241;
  unsigned __int8 v91 = v244;
  uint64_t v92 = v240;
  if ((_DWORD)v234 == 14)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC828);
    uint64_t v94 = swift_allocObject();
    *(_OWORD *)(v94 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = xmmword_1890684B0;
    *(void *)(v94 + 32) = sub_188FFA928(v229, v235);
    *(void *)(v94 + 40) = v95;
    LOBYTE(v263) = 0;
    uint64_t v93 = v228;
    sub_18901FE80(v231, v228, v89, v237, v242, v91, (uint64_t)v88, v90, v243, v238, 14);
    sub_1890198C4(v94, (char *)&v263, (uint64_t *)v255);
    swift_bridgeObjectRelease();
    sub_189014BD0(v233, v232);
    sub_188FFC088((uint64_t)v255);
    uint64_t v263 = 10LL;
    uint64_t v264 = 0xE100000000000000LL;
    sub_18906788C();
    swift_bridgeObjectRelease();
    *(void *)&__int128 v233 = v263;
    *(void *)&__int128 v235 = v264;
  }

  else
  {
    uint64_t v93 = v228;
    if ((_DWORD)v234 == 13)
    {
      uint64_t v263 = v231;
      sub_189023BEC(v231, v228, (uint64_t)v239, v237, v242, v244, (uint64_t)v245, v241, v243, v238, 0xDu);
      MEMORY[0x1895DD34C](v231);
      if (swift_dynamicCast())
      {
        swift_bridgeObjectRelease();
        *(void *)&__int128 v232 = *(void *)&v255[8];
        *(void *)&__int128 v234 = *(void *)v255;
        *(void *)&__int128 v233 = v261;
        *(void *)&__int128 v235 = v262;
        MEMORY[0x1895DD340](v236);
        sub_189023C0C(v231, v228, (uint64_t)v239, v237, v242, v244, (uint64_t)v245, v241, v243, v238, 0xDu);
        uint64_t v21 = v233;
        sub_189023C0C(v231, v228, (uint64_t)v239, v237, v242, v244, (uint64_t)v245, v241, v243, v238, 0xDu);
        MEMORY[0x1895DD340](v263);
        *(void *)&__int128 v240 = 0LL;
        char v23 = 1;
        unint64_t v22 = 0xE000000000000000LL;
        uint64_t v12 = v234;
        uint64_t v14 = v232;
        a6 = v230;
        goto LABEL_125;
      }

      MEMORY[0x1895DD340](v263);
      uint64_t v260 = v231;
      MEMORY[0x1895DD34C](v231);
      uint64_t v89 = v231;
      if (!swift_dynamicCast())
      {
        swift_bridgeObjectRelease();
        MEMORY[0x1895DD340](v260);
        *(void *)v255 = v231;
        MEMORY[0x1895DD34C](v231);
        uint64_t v89 = v243;
        if (swift_dynamicCast())
        {
          swift_bridgeObjectRelease();
          *(void *)&__int128 v233 = v263;
          MEMORY[0x1895DD340](v236);
          sub_189023C0C(v231, v228, (uint64_t)v239, v237, v242, v244, (uint64_t)v245, v241, v243, v238, 0xDu);
          uint64_t v21 = v233;
          sub_189023C0C(v231, v228, (uint64_t)v239, v237, v242, v244, (uint64_t)v245, v241, v243, v238, 0xDu);
          MEMORY[0x1895DD340](*(void *)v255);
          uint64_t v12 = 0LL;
          *(void *)&__int128 v235 = 0LL;
          *(void *)&__int128 v240 = 0LL;
          unint64_t v22 = 0LL;
          char v23 = 2;
          uint64_t v14 = 0xE000000000000000LL;
          a6 = v230;
          goto LABEL_125;
        }

        MEMORY[0x1895DD340](*(void *)v255);
        uint64_t v260 = v231;
        MEMORY[0x1895DD34C](v231);
        __swift_instantiateConcreteTypeFromMangledName(&qword_18C761138);
        a6 = v230;
        if (swift_dynamicCast())
        {
          sub_188FFCFB0((__int128 *)v255, (uint64_t)&v263);
          __swift_project_boxed_opaque_existential_1(&v263, v266);
          sub_189067700();
          uint64_t v170 = v169;
          swift_bridgeObjectRelease();
          if (v170)
          {
            unint64_t v88 = v239;
            __swift_project_boxed_opaque_existential_1(&v263, v266);
            *(void *)&__int128 v233 = sub_189067700();
            *(void *)&__int128 v234 = v171;
            if (v171)
            {
              swift_bridgeObjectRelease();
              MEMORY[0x1895DD340](v236);
              sub_189023C0C(v231, v228, (uint64_t)v239, v237, v242, v244, (uint64_t)v245, v241, v243, v238, 0xDu);
              sub_189023C0C(v231, v228, (uint64_t)v239, v237, v242, v244, (uint64_t)v245, v241, v243, v238, 0xDu);
              __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v263);
              MEMORY[0x1895DD340](v260);
              *(void *)&__int128 v235 = 0LL;
              *(void *)&__int128 v240 = 0LL;
              unint64_t v22 = 0LL;
              char v23 = 2;
              uint64_t v21 = 1LL;
              uint64_t v12 = v233;
              uint64_t v14 = v234;
              goto LABEL_125;
            }

    if (v6 == v12 && v7 == v13) {
      goto LABEL_33;
    }
    uint64_t v21 = i[4];
    unint64_t v22 = *((unsigned __int8 *)v3 + 40);
    char v23 = v3[4];
    uint64_t v24 = sub_189067F10();
    uint64_t result = 0LL;
    if ((v24 & 1) == 0) {
      return result;
    }
    uint64_t v9 = v23;
    uint64_t v11 = v22;
    uint64_t v18 = v21;
    if (v10 != v17) {
      return result;
    }
    goto LABEL_34;
  }

  return 1LL;
}

  swift_bridgeObjectRelease();
  return v15;
}

  uint64_t v14 = 0LL;
  uint64_t v15 = 0LL;
  uint64_t result = 0LL;
LABEL_14:
  *(void *)a4 = v14;
  *(int64x2_t *)(a4 + 8) = v9;
  *(void *)(a4 + 24) = v15;
  *(void *)(a4 + 32) = result;
  return result;
}

uint64_t sub_1890239C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  unint64_t v4 = v2[1];
  if (*((_BYTE *)v2 + 48))
  {
    if (*((_BYTE *)v2 + 48) == 1)
    {
      unint64_t v7 = v2[5];
      uint64_t v8 = HIBYTE(v7) & 0xF;
      if ((v7 & 0x2000000000000000LL) == 0) {
        uint64_t v8 = v2[4] & 0xFFFFFFFFFFFFLL;
      }
      if (v8)
      {
        sub_18906788C();
        sub_18906788C();
      }

      uint64_t v10 = HIBYTE(v4) & 0xF;
      if ((v4 & 0x2000000000000000LL) == 0) {
        uint64_t v10 = v3 & 0xFFFFFFFFFFFFLL;
      }
      if (v10)
      {
        uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 32))(a1, a2);
        sub_18906788C();
        sub_18906788C();
        sub_18906788C();
        uint64_t v10 = v13;
      }

      uint64_t v12 = v10;
      swift_bridgeObjectRetain();
      sub_18906788C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_18906788C();
      swift_bridgeObjectRelease();
    }

    else
    {
      uint64_t v9 = HIBYTE(v4) & 0xF;
      if ((v4 & 0x2000000000000000LL) == 0) {
        uint64_t v9 = v3 & 0xFFFFFFFFFFFFLL;
      }
      if (!v9) {
        return 0LL;
      }
      uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 32))(a1, a2);
      sub_18906788C();
      sub_18906788C();
    }

    return v12;
  }

  else
  {
    swift_bridgeObjectRetain();
  }

  return v3;
}

unint64_t *sub_189023BAC@<X0>(unint64_t *result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  unint64_t v3 = *result;
  if ((*result & 0x8000000000000000LL) != 0)
  {
    __break(1u);
  }

  else if (v3 < *(void *)(*(void *)a2 + 16LL))
  {
    uint64_t v4 = *(void *)a2 + 16 * v3;
    uint64_t v5 = *(void *)(v4 + 40);
    *a3 = *(void *)(v4 + 32);
    a3[1] = v5;
    return (unint64_t *)swift_bridgeObjectRetain();
  }

  __break(1u);
  return result;
}

void sub_189023BEC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned __int8 a11)
{
  if (a11 != 255) {
    sub_18901FE80(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
  }
}

void sub_189023C0C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned __int8 a11)
{
  if (a11 != 255) {
    sub_18901FFCC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
  }
}

unint64_t sub_189023C2C()
{
  unint64_t result = qword_18C761140;
  if (!qword_18C761140)
  {
    objc_opt_self();
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_18C761140);
  }

  return result;
}

unint64_t *sub_189023C68@<X0>(unint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_189023BAC(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_189023C84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(a1 - 8);
  MEMORY[0x1895F8858](a1);
  uint64_t v9 = &v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  swift_getAssociatedTypeWitness();
  uint64_t v17 = sub_189067748();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v9, v3, a1);
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  uint64_t v15 = a3;
  uint64_t v16 = &v17;
  uint64_t v10 = sub_189067970();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_189023D64(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v4 = MEMORY[0x1895F8858](AssociatedTypeWitness);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  MEMORY[0x1895F8858](v4);
  uint64_t v8 = (char *)&v11 - v7;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, a1, AssociatedTypeWitness);
  sub_189067A6C();
  char v9 = sub_189067A60();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, AssociatedTypeWitness);
  return v9 & 1;
}

uint64_t sub_189023E68(uint64_t a1)
{
  return sub_189023D64(a1) & 1;
}

uint64_t sub_189023E8C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_189023F14()
{
  return v0;
}

uint64_t sub_189023F60()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Tree(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Tree);
}

BOOL sub_189023F90(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

uint64_t sub_189023F9C()
{
  return sub_18906803C();
}

uint64_t sub_189023FC4()
{
  return sub_189068060();
}

uint64_t sub_189024008()
{
  return sub_189023FC4();
}

uint64_t sub_189024028()
{
  return sub_189023F9C();
}

uint64_t sub_189024048()
{
  return sub_189068060();
}

BOOL sub_189024084(uint64_t *a1, uint64_t *a2)
{
  return sub_189023F90(*a1, *a2);
}

void sub_1890240A4()
{
}

uint64_t sub_1890240B4(uint64_t a1, uint64_t a2)
{
  if ((MEMORY[0x18961AFE8] & 0xC000000000000000LL) != 0) {
    goto LABEL_108;
  }
LABEL_2:
  unint64_t v3 = MEMORY[0x18961AFF8];
LABEL_3:
  unint64_t v72 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C761148);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = xmmword_189068EF0;
  *(void *)(v4 + 32) = a1;
  uint64_t v66 = v4;
  sub_1890679C4();
  unint64_t v5 = v66;
  unint64_t v71 = v66;
  uint64_t v6 = sub_189014734(MEMORY[0x18961AFE8]);
  swift_retain();
  uint64_t v7 = 0LL;
  while (1)
  {
    if (v5 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_189067D54();
      swift_bridgeObjectRelease();
      if (v8 < v7)
      {
LABEL_111:
        __break(1u);
LABEL_112:
        __break(1u);
LABEL_113:
        __swift_instantiateConcreteTypeFromMangledName(qword_18C4FC6B8);
        uint64_t result = sub_189067FC4();
        __break(1u);
        return result;
      }

      swift_bridgeObjectRetain();
      uint64_t v52 = sub_189067D54();
      swift_bridgeObjectRelease();
      if (v52 < v7) {
        goto LABEL_112;
      }
      swift_bridgeObjectRetain();
      a1 = sub_189067D54();
      swift_bridgeObjectRelease();
      if (a1 < v8) {
        goto LABEL_103;
      }
    }

    else
    {
      uint64_t v8 = *(void *)((v5 & 0xFFFFFFFFFFFFF8LL) + 0x10);
      a1 = v8;
    }

    if (v8 < 0) {
      goto LABEL_104;
    }
    if ((v5 & 0xC000000000000001LL) != 0 && v7 != v8)
    {
      uint64_t v9 = v7;
      do
      {
        __swift_instantiateConcreteTypeFromMangledName(qword_18C4FC6B8);
        sub_189067C4C();
        ++v9;
      }

      while (v8 != v9);
    }

    if (v5 >> 62)
    {
      swift_bridgeObjectRetain();
      a1 = sub_189067D60();
      uint64_t v10 = v13;
      int64_t v12 = v14;
      unint64_t v11 = v15;
      swift_bridgeObjectRelease();
    }

    else
    {
      a1 = v5 & 0xFFFFFFFFFFFFFF8LL;
      uint64_t v10 = (v5 & 0xFFFFFFFFFFFFFF8LL) + 32;
      unint64_t v11 = (2 * v8) | 1;
      swift_bridgeObjectRetain();
      int64_t v12 = v7;
    }

    if (v12 == v11 >> 1)
    {
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v53 = MEMORY[0x18961AFE8];
      goto LABEL_95;
    }

    uint64_t v16 = *(void *)(v10 + 8 * v12);
    swift_retain();
    swift_unknownObjectRelease();
    BOOL v17 = __OFADD__(v7++, 1LL);
    if (v17)
    {
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      if (!sub_189067D54()) {
        goto LABEL_2;
      }
      unint64_t v3 = sub_189025864(MEMORY[0x18961AFE8]);
      goto LABEL_3;
    }

    if (*(void *)(v16 + 16) == a2) {
      break;
    }
    swift_retain();
    sub_18904FF5C(&v66, v16);
    swift_release();
    swift_beginAccess();
    uint64_t v62 = v16;
    a1 = *(void *)(v16 + 40);
    if ((unint64_t)a1 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v18 = sub_189067D54();
      swift_bridgeObjectRelease();
      if (!v18) {
        goto LABEL_92;
      }
LABEL_23:
      unint64_t v19 = 0LL;
      unint64_t v20 = v72;
      unint64_t v64 = v72 & 0xC000000000000001LL;
      unint64_t v65 = a1 & 0xC000000000000001LL;
      uint64_t v59 = v7;
      uint64_t v60 = a1 + 32;
      uint64_t v61 = a1 & 0xFFFFFFFFFFFFFF8LL;
      unint64_t v63 = v72 + 56;
      while (2)
      {
        while (2)
        {
          if (v65)
          {
            uint64_t v21 = MEMORY[0x1895DCCF8](v19, a1);
            BOOL v17 = __OFADD__(v19++, 1LL);
            if (v17) {
              goto LABEL_96;
            }
          }

          else
          {
            if (v19 >= *(void *)(v61 + 16)) {
              goto LABEL_99;
            }
            uint64_t v21 = *(void *)(v60 + 8 * v19);
            swift_retain();
            BOOL v17 = __OFADD__(v19++, 1LL);
            if (v17)
            {
LABEL_96:
              __break(1u);
LABEL_97:
              __break(1u);
              goto LABEL_98;
            }
          }

          if (v64)
          {
            swift_bridgeObjectRetain();
            swift_retain();
            char v22 = sub_189067BB0();
            swift_bridgeObjectRelease();
            swift_release();
            if ((v22 & 1) != 0) {
              goto LABEL_24;
            }
          }

          else if (*(void *)(v20 + 16))
          {
            sub_189068030();
            sub_18906803C();
            uint64_t v23 = sub_189068060();
            uint64_t v24 = -1LL << *(_BYTE *)(v20 + 32);
            unint64_t v25 = v23 & ~v24;
            if (((*(void *)(v63 + ((v25 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v25) & 1) != 0)
            {
              uint64_t v26 = *(void *)(v20 + 48);
              if (*(void *)(v26 + 8 * v25) == v21)
              {
LABEL_24:
                swift_release();
                if (v19 == v18) {
                  goto LABEL_4;
                }
                continue;
              }

              uint64_t v27 = ~v24;
              while (1)
              {
                unint64_t v25 = (v25 + 1) & v27;
                if (((*(void *)(v63 + ((v25 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v25) & 1) == 0) {
                  break;
                }
                if (*(void *)(v26 + 8 * v25) == v21) {
                  goto LABEL_24;
                }
              }
            }
          }

          break;
        }

        uint64_t v28 = a1;
        unint64_t v29 = v71;
        if (!(v71 >> 62))
        {
          a1 = *(void *)((v71 & 0xFFFFFFFFFFFFF8LL) + 0x10);
          swift_bridgeObjectRetain();
          if (a1) {
            goto LABEL_43;
          }
LABEL_52:
          swift_bridgeObjectRelease();
          uint64_t v32 = swift_retain();
          MEMORY[0x1895DCA58](v32);
          if (*(void *)((v71 & 0xFFFFFFFFFFFFFF8LL) + 0x10) >= *(void *)((v71 & 0xFFFFFFFFFFFFFF8LL) + 0x18) >> 1) {
            sub_1890679D0();
          }
          sub_1890679F4();
          sub_1890679C4();
          if ((v6 & 0xC000000000000001LL) != 0)
          {
LABEL_55:
            if (v6 < 0) {
              uint64_t v33 = v6;
            }
            else {
              uint64_t v33 = v6 & 0xFFFFFFFFFFFFFF8LL;
            }
            swift_retain();
            uint64_t v34 = sub_189067B8C();
            if (__OFADD__(v34, 1LL)) {
              goto LABEL_100;
            }
            uint64_t v6 = sub_189024C5C(v33, v34 + 1);
            goto LABEL_73;
          }

LABEL_98:
            __break(1u);
LABEL_99:
            __break(1u);
LABEL_100:
            __break(1u);
LABEL_101:
            __break(1u);
LABEL_102:
            __break(1u);
LABEL_103:
            __break(1u);
LABEL_104:
            __break(1u);
LABEL_105:
            __break(1u);
            goto LABEL_106;
          }

          goto LABEL_52;
        }
      }

uint64_t sub_189024934(uint64_t a1, uint64_t a2)
{
  if ((a2 & 0xC000000000000001LL) == 0)
  {
    if (*(void *)(a2 + 16))
    {
      unint64_t v5 = sub_18904DA94(a1);
      if ((v6 & 1) != 0)
      {
        uint64_t v4 = *(void *)(*(void *)(a2 + 56) + 8 * v5);
        swift_retain();
        return v4;
      }
    }

    return 0LL;
  }

  swift_retain();
  uint64_t v3 = sub_189067D24();
  swift_release();
  if (!v3) {
    return 0LL;
  }
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(qword_18C4FC6B8);
  swift_dynamicCast();
  uint64_t v4 = v8;
  swift_unknownObjectRelease();
  return v4;
}

unint64_t sub_189024A0C()
{
  uint64_t v12 = *(void *)v0;
  char v13 = *(_BYTE *)(v0 + 8);
  sub_189025B9C((uint64_t)&v12);
  swift_retain();
  unint64_t v1 = sub_189025278((uint64_t *)v0);
  sub_189025BC4((uint64_t)&v12);
  swift_release();
  unint64_t v11 = v1;
  if ((v1 & 0x8000000000000000LL) != 0 || (v1 & 0x4000000000000000LL) != 0) {
    goto LABEL_37;
  }
  uint64_t v2 = *(void *)(v1 + 16);
  sub_189025BC4((uint64_t)&v12);
  swift_release();
  unint64_t v3 = (unint64_t)v2 >> 1;
  while ((unint64_t)(v2 + 1) >= 3)
  {
    unint64_t v1 = 0LL;
    while (1)
    {
      unint64_t v4 = v1 + 1;
      unint64_t v5 = v2 - (v1 + 1);
      if (__OFSUB__(v2, v1 + 1)) {
        break;
      }
      if (v1 != v5)
      {
        if ((v11 & 0xC000000000000001LL) != 0)
        {
          uint64_t v7 = MEMORY[0x1895DCCF8](v1, v11);
          uint64_t v8 = MEMORY[0x1895DCCF8](v2 - (v1 + 1), v11);
        }

        else
        {
          if ((v1 & 0x8000000000000000LL) != 0) {
            goto LABEL_31;
          }
          unint64_t v6 = *(void *)((v11 & 0xFFFFFFFFFFFFF8LL) + 0x10);
          if (v1 >= v6) {
            goto LABEL_32;
          }
          uint64_t v7 = *(void *)(v11 + 8 * v1 + 32);
          swift_retain();
          if ((v5 & 0x8000000000000000LL) != 0) {
            goto LABEL_33;
          }
          if (v5 >= v6) {
            goto LABEL_35;
          }
          uint64_t v8 = *(void *)(v11 + 32 + 8 * v5);
          swift_retain();
        }

        if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
          || (v11 & 0x8000000000000000LL) != 0
          || (v11 & 0x4000000000000000LL) != 0)
        {
          sub_18905E6E0(v11);
        }

        swift_release();
        *(void *)((v11 & 0xFFFFFFFFFFFFFF8LL) + 8 * v1 + 0x20) = v8;
        sub_1890679C4();
        unint64_t v1 = v11;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
          || (v11 & 0x8000000000000000LL) != 0
          || (v11 & 0x4000000000000000LL) != 0)
        {
          sub_18905E6E0(v11);
        }

        if ((v5 & 0x8000000000000000LL) != 0) {
          goto LABEL_34;
        }
        if (v5 >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8LL) + 0x10)) {
          goto LABEL_36;
        }
        swift_release();
        *(void *)((v11 & 0xFFFFFFFFFFFFFF8LL) + 8 * v5 + 0x20) = v7;
        sub_1890679C4();
      }

      unint64_t v1 = v4;
      if (v3 == v4) {
        return v11;
      }
    }

    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    swift_retain();
    uint64_t v2 = sub_189067D54();
    swift_release();
    sub_189025BC4((uint64_t)&v12);
    swift_release();
    if (v2 >= 0) {
      uint64_t v10 = v2;
    }
    else {
      uint64_t v10 = v2 + 1;
    }
    if (v2 < -1) {
      __break(1u);
    }
    unint64_t v3 = v10 >> 1;
  }

  return v1;
}

uint64_t sub_189024C5C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C7610B8);
    uint64_t v2 = sub_189067D84();
    uint64_t v17 = v2;
    sub_189067D0C();
    for (; sub_189067D30(); ++*(void *)(v2 + 16))
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_18C4FC6B8);
      swift_dynamicCast();
      swift_dynamicCast();
      unint64_t v10 = *(void *)(v2 + 16);
      if (*(void *)(v2 + 24) <= v10)
      {
        sub_18904E878(v10 + 1, 1);
        uint64_t v2 = v17;
      }

      sub_189068030();
      sub_18906803C();
      uint64_t result = sub_189068060();
      uint64_t v4 = v2 + 64;
      uint64_t v5 = -1LL << *(_BYTE *)(v2 + 32);
      unint64_t v6 = result & ~v5;
      unint64_t v7 = v6 >> 6;
      if (((-1LL << v6) & ~*(void *)(v2 + 64 + 8 * (v6 >> 6))) != 0)
      {
        unint64_t v8 = __clz(__rbit64((-1LL << v6) & ~*(void *)(v2 + 64 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0LL;
      }

      else
      {
        char v11 = 0;
        unint64_t v12 = (unint64_t)(63 - v5) >> 6;
        do
        {
          if (++v7 == v12 && (v11 & 1) != 0)
          {
            __break(1u);
            return result;
          }

          BOOL v13 = v7 == v12;
          if (v7 == v12) {
            unint64_t v7 = 0LL;
          }
          v11 |= v13;
          uint64_t v14 = *(void *)(v4 + 8 * v7);
        }

        while (v14 == -1);
        unint64_t v8 = __clz(__rbit64(~v14)) + (v7 << 6);
      }

      *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v8;
      uint64_t v9 = 8 * v8;
      *(void *)(*(void *)(v2 + 48) + v9) = v16;
      *(void *)(*(void *)(v2 + 56) + v9) = v15;
    }

    swift_release();
  }

  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x18961AFF0];
  }

  return v2;
}

uint64_t sub_189024E8C(uint64_t *a1, void (*a2)(uint64_t *__return_ptr, uint64_t *))
{
  uint64_t v3 = *a1;
  if (*((_BYTE *)a1 + 8) == 1)
  {
    *((_BYTE *)a1 + 8) = 0;
    swift_retain();
  }

  else if (v3)
  {
    uint64_t v7 = *a1;
    swift_retain();
    a2(&v8, &v7);
    swift_release();
    uint64_t v5 = v8;
    swift_retain();
    swift_release();
    *a1 = v5;
    return v5;
  }

  return v3;
}

uint64_t sub_189024F24(uint64_t a1)
{
  uint64_t v54 = a1 + 32;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v3 = 0LL;
  uint64_t v4 = 0LL;
  unint64_t v5 = 0LL;
  uint64_t v53 = result + 56;
  unint64_t v6 = (void *)MEMORY[0x18961AFE8];
  uint64_t v7 = (_OWORD *)(MEMORY[0x18961AFE8] + 32LL);
LABEL_3:
  unint64_t v9 = *(void *)(a1 + 16);
  if (v5 == v9) {
    goto LABEL_32;
  }
  uint64_t v56 = v4;
  if (v5 >= v9)
  {
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }

  unint64_t v10 = v6;
  uint64_t v11 = 16 * v5;
  unint64_t v12 = (uint64_t *)(v54 + 16 * v5);
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_188FFCFC8(v3);
  ++v5;
  uint64_t v15 = (uint64_t *)(v53 + v11);
  uint64_t v3 = v14;
  if (!v14) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v8 = *(void *)(v3 + 16);
  if (v8)
  {
    unint64_t v19 = 0LL;
    uint64_t v20 = v13;
    unint64_t v6 = v10;
    uint64_t v4 = v56;
    while (1)
    {
      if (v19 >= v8) {
        goto LABEL_37;
      }
      uint64_t v21 = (_OWORD *)(v3 + 192 * v19);
      __int128 v22 = v21[2];
      __int128 v23 = v21[3];
      __int128 v24 = v21[5];
      __int128 v60 = v21[4];
      __int128 v61 = v24;
      __int128 v58 = v22;
      __int128 v59 = v23;
      __int128 v25 = v21[6];
      __int128 v26 = v21[7];
      __int128 v27 = v21[9];
      __int128 v64 = v21[8];
      __int128 v65 = v27;
      __int128 v62 = v25;
      __int128 v63 = v26;
      __int128 v28 = v21[10];
      __int128 v29 = v21[11];
      __int128 v30 = v21[13];
      __int128 v68 = v21[12];
      __int128 v69 = v30;
      __int128 v66 = v28;
      __int128 v67 = v29;
      uint64_t v55 = v20;
      if (v4)
      {
        uint64_t result = sub_188FFCFF4((uint64_t)&v58);
        uint64_t v31 = v6;
      }

      else
      {
        unint64_t v32 = v6[3];
        int64_t v33 = v32 & 0xFFFFFFFFFFFFFFFELL;
        if (v33 <= 1) {
          uint64_t v34 = 1LL;
        }
        else {
          uint64_t v34 = v33;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC818);
        uint64_t v31 = (void *)swift_allocObject();
        uint64_t v35 = (uint64_t)(_swift_stdlib_malloc_size(v31) - 32) / 192;
        v31[2] = v34;
        v31[3] = 2 * v35;
        uint64_t v36 = v6[3] >> 1;
        uint64_t v7 = &v31[24 * v36 + 4];
        uint64_t v37 = v35 & 0x7FFFFFFFFFFFFFFFLL;
        uint64_t v4 = v37 - v36;
        if (v6[2])
        {
          uint64_t v57 = v37 - v36;
          uint64_t v38 = v6;
          if (v31 < v6 || v31 + 4 >= &v6[24 * v36 + 4])
          {
            uint64_t v39 = v6 + 4;
            sub_188FFCFF4((uint64_t)&v58);
          }

          else
          {
            uint64_t v39 = v6 + 4;
            sub_188FFCFF4((uint64_t)&v58);
            if (v31 == v38) {
              goto LABEL_27;
            }
          }

          memmove(v31 + 4, v39, 192 * v36);
LABEL_27:
          v38[2] = 0LL;
          uint64_t result = swift_release();
          uint64_t v4 = v57;
          goto LABEL_28;
        }

        sub_188FFCFF4((uint64_t)&v58);
        uint64_t result = swift_release();
      }

LABEL_28:
      BOOL v40 = __OFSUB__(v4--, 1LL);
      if (v40) {
        goto LABEL_38;
      }
      ++v19;
      __int128 v41 = v58;
      __int128 v42 = v59;
      __int128 v43 = v61;
      _OWORD v7[2] = v60;
      _OWORD v7[3] = v43;
      *uint64_t v7 = v41;
      v7[1] = v42;
      __int128 v44 = v62;
      __int128 v45 = v63;
      __int128 v46 = v65;
      v7[6] = v64;
      v7[7] = v46;
      v7[4] = v44;
      v7[5] = v45;
      __int128 v47 = v66;
      __int128 v48 = v67;
      __int128 v49 = v69;
      v7[10] = v68;
      v7[11] = v49;
      v7[8] = v47;
      v7[9] = v48;
      v7 += 12;
      unint64_t v6 = v31;
      uint64_t v20 = v55;
      if (v3)
      {
        unint64_t v8 = *(void *)(v3 + 16);
        if (v19 != v8) {
          continue;
        }
      }

      goto LABEL_3;
    }
  }

      unint64_t v12 = v14;
      v18 += 24;
      ++v14;
    }

    while (v14 < v3);
    if (!v15) {
      goto LABEL_63;
    }
LABEL_45:
    uint64_t v14 = v17;
    if (v17 < v9) {
      goto LABEL_170;
    }
LABEL_46:
    if (v9 < v14)
    {
      uint64_t v21 = 24 * v14;
      __int128 v22 = 24 * v9;
      __int128 v23 = v14;
      __int128 v24 = v9;
      do
      {
        if (v24 != --v23)
        {
          if (!v10) {
            goto LABEL_175;
          }
          __int128 v25 = v10 + v22;
          __int128 v26 = v10 + v21;
          __int128 v27 = *(_BYTE *)(v10 + v22 + 16);
          __int128 v28 = *(_BYTE *)(v10 + v22 + 17);
          __int128 v29 = *(_OWORD *)(v10 + v22);
          __int128 v30 = *(void *)(v10 + v21 - 8);
          *(_OWORD *)__int128 v25 = *(_OWORD *)(v10 + v21 - 24);
          *(void *)(v25 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v30;
          *(_OWORD *)(v26 - 24) = v29;
          *(_BYTE *)(v26 - 8) = v27;
          *(_BYTE *)(v26 - 7) = v28;
        }

        ++v24;
        v21 -= 24LL;
        v22 += 24LL;
      }

      while (v24 < v23);
    }

  __break(1u);
  return result;
}

  __break(1u);
  return result;
}

  __break(1u);
  return result;
}

  __break(1u);
  return result;
}

  __break(1u);
  return result;
}

  *(_BYTE *)a9 = v47;
  *(_BYTE *)(a9 + 1) = a2 & 1;
  *(void *)(a9 + 8) = v36;
  *(void *)(a9 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v53;
  *(_BYTE *)(a9 + 24) = v51 & 1;
  *(_BYTE *)(a9 + 25) = v52 & 1;
  *(void *)(a9 + 32) = v18;
  uint64_t result = v50;
  *(__n128 *)(a9 + 40) = v50;
  *(void *)(a9 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = v49;
  *(void *)(a9 + 64) = v25;
  *(void *)(a9 + 72) = v26;
  *(void *)(a9 + 80) = v29;
  *(void *)(a9 + 88) = v24;
  *(void *)(a9 + 96) = v28;
  *(void *)(a9 + 104) = v35;
  *(void *)(a9 + 112) = v31;
  *(void *)(a9 + 120) = v39;
  *(void *)(a9 + 128) = v34;
  return result;
}

uint64_t sub_189025278(uint64_t *a1)
{
  void (*v1)(uint64_t *__return_ptr, uint64_t *);
  char v2;
  uint64_t result;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  void *v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  BOOL v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  __int128 v25 = *a1;
  __int128 v26 = *((_BYTE *)a1 + 8);
  unint64_t v1 = (void (*)(uint64_t *__return_ptr, uint64_t *))a1[2];
  uint64_t v2 = *((_BYTE *)a1 + 32);
  __int128 v23 = v25;
  __int128 v24 = v26;
  sub_189025B9C((uint64_t)&v25);
  swift_retain();
  if ((v2 & 1) != 0)
  {
    unint64_t v6 = 0LL;
    unint64_t v5 = (void *)MEMORY[0x18961AFE8];
  }

  else
  {
    swift_retain();
    v1(&v22, &v23);
    uint64_t result = swift_release();
    uint64_t v4 = v22;
    unint64_t v5 = (void *)MEMORY[0x18961AFE8];
    unint64_t v6 = 0LL;
    if (v22)
    {
      uint64_t v7 = (void *)(MEMORY[0x18961AFE8] + 32LL);
      while (1)
      {
        if (!v6)
        {
          unint64_t v8 = v5[3];
          unint64_t v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
          if (v9 <= 1) {
            unint64_t v10 = 1LL;
          }
          else {
            unint64_t v10 = v9;
          }
          __swift_instantiateConcreteTypeFromMangledName(&qword_18C761148);
          uint64_t v11 = (void *)swift_allocObject();
          unint64_t v12 = _swift_stdlib_malloc_size(v11);
          uint64_t v13 = v12 - 32;
          if (v12 < 32) {
            uint64_t v13 = v12 - 25;
          }
          uint64_t v14 = v13 >> 3;
          v11[2] = v10;
          v11[3] = (2 * (v13 >> 3)) | 1;
          uint64_t v15 = (unint64_t)(v11 + 4);
          unint64_t v16 = v5[3] >> 1;
          if (v5[2])
          {
            uint64_t v5[2] = 0LL;
          }

          uint64_t v7 = (void *)(v15 + 8 * v16);
          unint64_t v6 = (v14 & 0x7FFFFFFFFFFFFFFFLL) - v16;
          uint64_t result = swift_release();
          unint64_t v5 = v11;
        }

        uint64_t v18 = __OFSUB__(v6--, 1LL);
        if (v18) {
          break;
        }
        *v7++ = v4;
        swift_retain();
        v1(&v22, &v23);
        uint64_t result = swift_release();
        uint64_t v4 = v22;
        if (!v22) {
          goto LABEL_24;
        }
      }

      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
  }

LABEL_24:
  swift_release();
  uint64_t result = swift_release();
  unint64_t v19 = v5[3];
  if (v19 < 2) {
    return (uint64_t)v5;
  }
  uint64_t v20 = v19 >> 1;
  uint64_t v18 = __OFSUB__(v20, v6);
  uint64_t v21 = v20 - v6;
  if (!v18)
  {
    uint64_t v5[2] = v21;
    return (uint64_t)v5;
  }

    unint64_t v12 = (v12 + 1) & v13;
    if (((*(void *)(v8 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v12) & 1) == 0) {
      goto LABEL_43;
    }
  }

  if (v22 >> 6 == 1)
  {
    if (v9 != 1) {
      goto LABEL_24;
    }
    goto LABEL_30;
  }

  if (!(v21 | v20) && v22 == 128)
  {
    if ((v36 & 1) == 0)
    {
      sub_188FFD504(0LL, 0LL, 128);
      swift_bridgeObjectRelease();
      __int128 v27 = 0LL;
      goto LABEL_47;
    }

    __int128 v24 = 0LL;
    goto LABEL_42;
  }

  if (!v37)
  {
    __int128 v24 = 1LL;
LABEL_42:
    sub_188FFD504(v24, 0LL, 128);
    goto LABEL_24;
  }

  sub_188FFD504(1LL, 0LL, 128);
  swift_bridgeObjectRelease();
  __int128 v27 = 1LL;
LABEL_47:
  __int128 v28 = 0LL;
  __int128 v29 = 0x80;
LABEL_48:
  sub_188FFD504(v27, v28, v29);
  __int128 v30 = *(void *)(*v34 + 48) + 24 * v12;
  uint64_t v31 = *(void *)v30;
  unint64_t v32 = *(void *)(v30 + 8);
  *(void *)a1 = *(void *)v30;
  *(void *)(a1 + 8) = v32;
  int64_t v33 = *(_BYTE *)(v30 + 16);
  *(_BYTE *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v33;
  sub_188FFD4F4(v31, v32, v33);
  return 0LL;
}

  uint64_t v17 = *v5;
  *(void *)(*v5 + 8 * (a4 >> 6) + 56) |= 1LL << a4;
  uint64_t v18 = *(void *)(v17 + 48) + 24 * a4;
  *(void *)uint64_t v18 = v9;
  *(void *)(v18 + 8) = a2;
  *(_BYTE *)(v18 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v7;
  *(_BYTE *)(v18 + 17) = HIBYTE(a3) & 1;
  unint64_t v19 = *(void *)(v17 + 16);
  uint64_t v20 = __OFADD__(v19, 1LL);
  uint64_t v21 = v19 + 1;
  if (v20) {
    __break(1u);
  }
  else {
    *(void *)(v17 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v21;
  }
  return result;
}

  __int128 v25 = v73;
  __int128 v26 = sub_189011838(v68, v14, v71, a4, v73);
  __int128 v28 = v27[2];
  __int128 v30 = *v27;
  __int128 v29 = v27[1];
  v69[3] = v27[3];
  v69[2] = v28;
  v69[0] = v30;
  v69[1] = v29;
  uint64_t v31 = v27[6];
  int64_t v33 = v27[4];
  unint64_t v32 = v27[5];
  v69[7] = v27[7];
  v69[6] = v31;
  v69[4] = v33;
  v69[5] = v32;
  uint64_t v34 = v27[10];
  uint64_t v36 = v27[8];
  uint64_t v35 = v27[9];
  v69[11] = v27[11];
  v69[10] = v34;
  v69[8] = v36;
  v69[9] = v35;
  memmove(__dst, v27, 0xC0uLL);
  sub_188FFCFF4((uint64_t)v69);
  uint64_t result = ((uint64_t (*)(void *, void))v26)(v68, 0LL);
  if (v14 < *(void *)(v25 + 16))
  {
    ++v14;
    nullsub_1(__dst);
LABEL_27:
    while (1)
    {
      sub_18900F6C0((uint64_t)__dst, (uint64_t)v68);
      sub_18900F6C0((uint64_t)v68, (uint64_t)v69);
      uint64_t v37 = *((void *)v4 + 3);
      uint64_t v38 = v37 >> 1;
      if ((uint64_t)(v37 >> 1) < v12 + 1)
      {
        uint64_t v4 = sub_1890578E0((char *)(v37 > 1), v12 + 1, 1, v4);
        uint64_t v38 = *((void *)v4 + 3) >> 1;
      }

      sub_18900F6C0((uint64_t)__dst, (uint64_t)v66);
      sub_18900F6C0((uint64_t)v66, (uint64_t)v67);
      if (sub_18900F708((uint64_t)v67) != 1 && v12 < v38)
      {
        __int128 v62 = v71;
        uint64_t v39 = v73;
        while (1)
        {
          BOOL v40 = &v4[192 * v12 + 32];
          __int128 v41 = v12 + 1;
          while (1)
          {
            unint64_t v12 = v41;
            sub_18900F6C0((uint64_t)v66, (uint64_t)v65);
            __int128 v42 = v65[3];
            __int128 v44 = v65[0];
            __int128 v43 = v65[1];
            *((_OWORD *)v40 + 2) = v65[2];
            *((_OWORD *)v40 + 3) = v42;
            *(_OWORD *)BOOL v40 = v44;
            *((_OWORD *)v40 + 1) = v43;
            __int128 v45 = v65[7];
            __int128 v47 = v65[4];
            __int128 v46 = v65[5];
            *((_OWORD *)v40 + 6) = v65[6];
            *((_OWORD *)v40 + 7) = v45;
            *((_OWORD *)v40 + 4) = v47;
            *((_OWORD *)v40 + 5) = v46;
            __int128 v48 = v65[11];
            unint64_t v50 = v65[8];
            __int128 v49 = v65[9];
            *((_OWORD *)v40 + 10) = v65[10];
            *((_OWORD *)v40 + 11) = v48;
            *((_OWORD *)v40 + 8) = v50;
            *((_OWORD *)v40 + 9) = v49;
            if (v14 != a4) {
              break;
            }
            sub_18900F870(v64);
            sub_18900F6C0((uint64_t)v64, (uint64_t)__dst);
            sub_18900F6C0((uint64_t)__dst, (uint64_t)v66);
            sub_18900F6C0((uint64_t)v66, (uint64_t)v67);
            if (sub_18900F708((uint64_t)v67) == 1)
            {
              uint64_t v14 = a4;
              *((void *)v4 + 2) = v12;
              goto LABEL_27;
            }

            v40 += 192;
            __int128 v41 = v12 + 1;
            if (v12 >= v38)
            {
              uint64_t v14 = a4;
              *((void *)v4 + 2) = v12;
              goto LABEL_27;
            }
          }

          unint64_t v51 = sub_189011838(v63, v14, v62, a4, v39);
          uint64_t v53 = v52[3];
          uint64_t v55 = *v52;
          uint64_t v54 = v52[1];
          void v64[2] = v52[2];
          v64[3] = v53;
          v64[0] = v55;
          v64[1] = v54;
          uint64_t v56 = v52[7];
          __int128 v58 = v52[4];
          uint64_t v57 = v52[5];
          v64[6] = v52[6];
          v64[7] = v56;
          v64[4] = v58;
          v64[5] = v57;
          __int128 v59 = v52[11];
          __int128 v61 = v52[8];
          __int128 v60 = v52[9];
          v64[10] = v52[10];
          v64[11] = v59;
          v64[8] = v61;
          v64[9] = v60;
          memmove(__dst, v52, 0xC0uLL);
          sub_188FFCFF4((uint64_t)v64);
          uint64_t result = ((uint64_t (*)(void *, void))v51)(v63, 0LL);
          if (v14 >= *(void *)(v39 + 16)) {
            break;
          }
          ++v14;
          nullsub_1(__dst);
          sub_18900F6C0((uint64_t)__dst, (uint64_t)v66);
          sub_18900F6C0((uint64_t)v66, (uint64_t)v67);
        }

        __break(1u);
        break;
      }

  sub_189068048();
  if (!v8) {
    return sub_189068048();
  }
LABEL_16:
  sub_189068048();
  uint64_t v13 = *(void *)(v8 + 16);
  uint64_t result = sub_18906803C();
  if (v13)
  {
    swift_bridgeObjectRetain();
    ArgumentInfoV0.hash(into:)(a1);
    uint64_t v15 = v13 - 1;
    if (v15)
    {
      unint64_t v16 = v8 + 168;
      do
      {
        ArgumentInfoV0.hash(into:)(a1);
        v16 += 136LL;
        --v15;
      }

      while (v15);
    }

    return swift_bridgeObjectRelease();
  }

  return result;
}

LABEL_30:
  __break(1u);
  return result;
}

  uint64_t v38 = *(void *)(v11 + 16);
  uint64_t v164 = v11;
  uint64_t v165 = v11 + 32;
  uint64_t v166 = 0LL;
  uint64_t v167 = (2 * v38) | 1;
  if (!v38) {
    return swift_release();
  }
  uint64_t v39 = *(void *)(v4 + 16);
  if (!*(void *)(v39 + 16))
  {
    uint64_t v7 = MEMORY[0x18961AFF8];
    goto LABEL_97;
  }

  uint64_t v4 = v39 + 32;
  uint64_t v144 = *(void *)(v39 + 16);
  uint64_t v145 = v39;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  BOOL v40 = v4;
  __int128 v41 = v144;
  __int128 v42 = v145;
  __int128 v43 = 0LL;
  uint64_t v7 = MEMORY[0x18961AFF8];
  uint64_t v11 = 24LL;
  uint64_t v140 = v4;
  while (1)
  {
    __int128 v44 = (__int128 *)(v40 + 192 * v43);
    __int128 v45 = *v44;
    __int128 v46 = v44[1];
    __int128 v47 = v44[3];
    uint64_t v170 = v44[2];
    uint64_t v171 = v47;
    uint64_t v168 = v45;
    uint64_t v169 = v46;
    __int128 v48 = v44[4];
    __int128 v49 = v44[5];
    unint64_t v50 = v44[7];
    v174 = v44[6];
    unint64_t v175 = v50;
    uint64_t v172 = v48;
    char v173 = v49;
    unint64_t v51 = v44[8];
    uint64_t v52 = v44[9];
    uint64_t v53 = v44[11];
    unint64_t v178 = v44[10];
    uint64_t v179 = v53;
    unint64_t v176 = v51;
    unint64_t v177 = v52;
    if (!(void)v168)
    {
      int64_t v156 = BYTE1(v177);
      if ((BYTE1(v177) | 4) == 4) {
        break;
      }
    }

    unint64_t v10 = (v23 - 1) & v23;
    uint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    __int128 v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    __int128 v30 = v29[1];
    unint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }

    sub_189068030();
    sub_1890677A8();
    uint64_t result = sub_189068060();
    uint64_t v14 = -1LL << *(_BYTE *)(v7 + 32);
    uint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1LL << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      uint64_t v17 = __clz(__rbit64((-1LL << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0LL;
    }

    else
    {
      __int128 v25 = 0;
      __int128 v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }

        __int128 v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0LL;
        }
        v25 |= v27;
        __int128 v28 = *(void *)(v11 + 8 * v16);
      }

      while (v28 == -1);
      uint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }

    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }

  swift_release();
  __int128 v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  int64_t v33 = 1LL << *(_BYTE *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8LL);
  }
  else {
    *__int128 v22 = -1LL << v33;
  }
  *(void *)(v5 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 0LL;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

        uint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }

      __int128 v27 = 8 * v19;
      __int128 v28 = *(void *)(*(void *)(v5 + 48) + v27);
      __int128 v29 = *(void *)(*(void *)(v5 + 56) + v27);
      if ((a2 & 1) == 0)
      {
        swift_retain();
        swift_retain();
      }

      sub_189068030();
      sub_18906803C();
      uint64_t result = sub_189068060();
      uint64_t v13 = -1LL << *(_BYTE *)(v7 + 32);
      uint64_t v14 = result & ~v13;
      uint64_t v15 = v14 >> 6;
      if (((-1LL << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1LL << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0LL;
      }

      else
      {
        __int128 v23 = 0;
        __int128 v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }

          __int128 v25 = v15 == v24;
          if (v15 == v24) {
            uint64_t v15 = 0LL;
          }
          v23 |= v25;
          __int128 v26 = *(void *)(v12 + 8 * v15);
        }

        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }

      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v16;
      uint64_t v17 = 8 * v16;
      *(void *)(*(void *)(v7 + 48) + v17) = v28;
      *(void *)(*(void *)(v7 + 56) + v17) = v29;
      ++*(void *)(v7 + 16);
    }
  }

  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

      a4 = (a4 + 1) & v15;
    }

    while (((*(void *)(v12 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> a4) & 1) != 0);
  }

  __break(1u);
  return result;
}

uint64_t sub_189025450@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4 = swift_retain();
  uint64_t v5 = sub_189024934(v4, a1);
  uint64_t result = swift_release();
  *a2 = v5;
  return result;
}

void *sub_18902549C(uint64_t a1, uint64_t a2)
{
  void (*v7)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void v23[20];
  uint64_t v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(qword_18C4FC6B8);
  unint64_t v6 = (void *)swift_allocObject();
  swift_weakInit();
  v6[2] = a1;
  void v6[3] = a2;
  swift_weakAssign();
  v6[5] = MEMORY[0x18961AFE8];
  uint64_t v7 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(a2 + 16);
  swift_retain();
  v7(v23, a1, a2);
  unint64_t v8 = v23[13];
  swift_bridgeObjectRetain();
  sub_189000568((uint64_t)v23);
  unint64_t v9 = *(void *)(v8 + 16);
  v23[19] = v8;
  if (v9)
  {
    unint64_t v10 = (void *)(v8 + 40);
    while (1)
    {
      uint64_t v11 = *(v10 - 1);
      unint64_t v12 = *v10;
      if (v11 == a1)
      {
        swift_release();
        swift_bridgeObjectRelease();
        sub_189025BEC(0LL, v14, v15, v16);
        sub_189025C44(v17, v18, v19, v20);
        swift_allocError();
        *uint64_t v21 = a1;
        v21[1] = v12;
        swift_willThrow();
        swift_release();
        return v6;
      }

      sub_18902549C(v11, *v10);
      if (v3) {
        break;
      }
      swift_beginAccess();
      uint64_t v13 = swift_retain();
      MEMORY[0x1895DCA58](v13);
      if (*(void *)((v6[5] & 0xFFFFFFFFFFFFFF8LL) + 0x10) >= *(void *)((v6[5] & 0xFFFFFFFFFFFFFF8LL) + 0x18) >> 1) {
        sub_1890679D0();
      }
      sub_1890679F4();
      sub_1890679C4();
      swift_endAccess();
      swift_weakAssign();
      swift_release();
      v10 += 2;
      if (!--v9) {
        goto LABEL_8;
      }
    }

    swift_release_n();
  }

  else
  {
LABEL_8:
    swift_release();
  }

  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1890256A0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_18C4FC8B8);
    uint64_t v3 = sub_189067BF8();
    uint64_t v4 = 0LL;
    uint64_t v5 = v3 + 56;
    uint64_t v24 = v1;
    uint64_t v25 = a1 + 32;
    while (1)
    {
      unint64_t v6 = (uint64_t *)(v25 + 24 * v4);
      uint64_t v7 = *v6;
      uint64_t v8 = v6[1];
      char v9 = *((_BYTE *)v6 + 16);
      char v10 = *((_BYTE *)v6 + 17);
      sub_189068030();
      if ((v10 & 1) == 0)
      {
        sub_18906803C();
        sub_18906803C();
        if ((v9 & 1) == 0) {
          sub_18906803C();
        }
      }

      sub_18906803C();
      uint64_t result = sub_189068060();
      uint64_t v12 = ~(-1LL << *(_BYTE *)(v3 + 32));
      unint64_t v13 = result & v12;
      unint64_t v14 = (result & (unint64_t)v12) >> 6;
      uint64_t v15 = *(void *)(v5 + 8 * v14);
      uint64_t v16 = 1LL << (result & v12);
      uint64_t v17 = *(void *)(v3 + 48);
      if ((v16 & v15) != 0)
      {
        do
        {
          uint64_t v22 = v17 + 24 * v13;
          if ((*(_BYTE *)(v22 + 17) & 1) != 0)
          {
            if ((v10 & 1) != 0) {
              goto LABEL_3;
            }
          }

          else
          {
            if (*(void *)v22 == v7) {
              char v23 = v10;
            }
            else {
              char v23 = 1;
            }
            if ((v23 & 1) == 0)
            {
              if ((*(_BYTE *)(v22 + 16) & 1) != 0)
              {
                if ((v9 & 1) != 0) {
                  goto LABEL_3;
                }
              }

              else if ((v9 & 1) == 0 && *(void *)(v22 + 8) == v8)
              {
                goto LABEL_3;
              }
            }
          }

          unint64_t v13 = (v13 + 1) & v12;
          unint64_t v14 = v13 >> 6;
          uint64_t v15 = *(void *)(v5 + 8 * (v13 >> 6));
          uint64_t v16 = 1LL << v13;
        }

        while ((v15 & (1LL << v13)) != 0);
      }

      *(void *)(v5 + 8 * v14) = v16 | v15;
      uint64_t v18 = v17 + 24 * v13;
      *(void *)uint64_t v18 = v7;
      *(void *)(v18 + 8) = v8;
      *(_BYTE *)(v18 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v9;
      *(_BYTE *)(v18 + 17) = v10;
      uint64_t v19 = *(void *)(v3 + 16);
      BOOL v20 = __OFADD__(v19, 1LL);
      uint64_t v21 = v19 + 1;
      if (v20) {
        break;
      }
      *(void *)(v3 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v21;
LABEL_3:
      if (++v4 == v24) {
        return v3;
      }
    }

    __break(1u);
  }

  else
  {
    return MEMORY[0x18961AFF8];
  }

  return result;
}

unint64_t sub_189025864(unint64_t result)
{
  unint64_t v1 = result;
  unint64_t v2 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_189067D54();
    uint64_t result = swift_bridgeObjectRelease();
    if (v5)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_18C761150);
      uint64_t result = sub_189067BF8();
      unint64_t v3 = result;
      if (!v2) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }

  else if (*(void *)((result & 0xFFFFFFFFFFFFF8LL) + 0x10))
  {
    goto LABEL_3;
  }

  unint64_t v3 = MEMORY[0x18961AFF8];
  if (!v2)
  {
LABEL_4:
    uint64_t v4 = *(void *)((v1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    if (!v4) {
      return v3;
    }
    goto LABEL_9;
  }

LABEL_23:
    *(void *)(v6 + 8 * v27) = v29 | v28;
    *(void *)(v30 + 8 * v26) = v24;
    uint64_t v22 = *(void *)(v3 + 16);
    BOOL v8 = __OFADD__(v22, 1LL);
    uint64_t v23 = v22 + 1;
    if (v8) {
      goto LABEL_36;
    }
    *(void *)(v3 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v23;
    uint64_t result = swift_retain();
    goto LABEL_25;
  }

  uint64_t v7 = 0LL;
  while (1)
  {
    uint64_t result = MEMORY[0x1895DCCF8](v7, v1);
    BOOL v8 = __OFADD__(v7++, 1LL);
    if (v8) {
      break;
    }
    unint64_t v9 = result;
    sub_189068030();
    sub_18906803C();
    uint64_t result = sub_189068060();
    uint64_t v10 = -1LL << *(_BYTE *)(v3 + 32);
    unint64_t v11 = result & ~v10;
    unint64_t v12 = v11 >> 6;
    uint64_t v13 = *(void *)(v6 + 8 * (v11 >> 6));
    uint64_t v14 = 1LL << v11;
    uint64_t v15 = *(void *)(v3 + 48);
    if (((1LL << v11) & v13) == 0) {
      goto LABEL_19;
    }
    if (*(void *)(v15 + 8 * v11) == v9)
    {
LABEL_11:
      swift_unknownObjectRelease();
      if (v7 == v4) {
        return v3;
      }
    }

    else
    {
      uint64_t v16 = ~v10;
      while (1)
      {
        unint64_t v11 = (v11 + 1) & v16;
        unint64_t v12 = v11 >> 6;
        uint64_t v13 = *(void *)(v6 + 8 * (v11 >> 6));
        uint64_t v14 = 1LL << v11;
        if ((v13 & (1LL << v11)) == 0) {
          break;
        }
        if (*(void *)(v15 + 8 * v11) == v9) {
          goto LABEL_11;
        }
      }

        unint64_t v9 = (v16 - 1) & v16;
        uint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }

      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      sub_189068030();
      sub_18906803C();
      uint64_t result = sub_189068060();
      uint64_t v19 = -1LL << *(_BYTE *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      uint64_t v21 = v20 >> 6;
      if (((-1LL << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1LL << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0LL;
      }

      else
      {
        uint64_t v22 = 0;
        uint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }

          uint64_t v24 = v21 == v23;
          if (v21 == v23) {
            uint64_t v21 = 0LL;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }

        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }

      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }

  uint64_t result = swift_release();
  *unint64_t v1 = v4;
  return result;
}

  __break(1u);
  return result;
}

    unint64_t v9 = (v16 - 1) & v16;
    uint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    sub_189068030();
    sub_18906803C();
    uint64_t result = sub_189068060();
    uint64_t v19 = -1LL << *(_BYTE *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    uint64_t v21 = v20 >> 6;
    if (((-1LL << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1LL << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0LL;
    }

    else
    {
      uint64_t v22 = 0;
      uint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }

        uint64_t v24 = v21 == v23;
        if (v21 == v23) {
          uint64_t v21 = 0LL;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }

      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }

    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
    uint64_t result = swift_retain();
  }

  uint64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    unint64_t v1 = v0;
    goto LABEL_35;
  }

  uint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    uint64_t v5 = v17;
    goto LABEL_23;
  }

  while (1)
  {
    uint64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1LL)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    uint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }

  sub_189068048();
  if (v6)
  {
LABEL_11:
    sub_189068048();
    unint64_t v11 = *(void *)(v6 + 16);
    sub_18906803C();
    if (v11)
    {
      swift_bridgeObjectRetain();
      unint64_t v12 = v6 + 56;
      do
      {
        CommandInfoV0.hash(into:)(a1);
        v12 += 88LL;
        --v11;
      }

      while (v11);
      swift_bridgeObjectRelease();
    }

    if (v8) {
      goto LABEL_16;
    }
    return sub_189068048();
  }

LABEL_19:
      *(void *)(v6 + 8 * v12) = v14 | v13;
      *(void *)(v15 + 8 * v11) = v9;
      uint64_t v17 = *(void *)(v3 + 16);
      BOOL v8 = __OFADD__(v17, 1LL);
      uint64_t v18 = v17 + 1;
      if (v8) {
        goto LABEL_34;
      }
      *(void *)(v3 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v18;
      if (v7 == v4) {
        return v3;
      }
    }
  }

  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

    uint64_t v10 = (v20 - 1) & v20;
    uint64_t v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_20:
    uint64_t v22 = *(void *)(v5 + 48) + 24 * v17;
    uint64_t v24 = *(void *)v22;
    uint64_t v23 = *(void *)(v22 + 8);
    uint64_t v25 = *(unsigned __int8 *)(v22 + 16);
    uint64_t v38 = *(void *)(*(void *)(v5 + 56) + 8 * v17);
    if ((a2 & 1) == 0) {
      sub_188FFCF80(v24, v23, v25);
    }
    sub_189068030();
    sub_18906803C();
    sub_1890677A8();
    if (v25 >> 6 == 1)
    {
      a2 = v35;
      sub_189068048();
    }

    uint64_t result = sub_189068060();
    unint64_t v26 = -1LL << *(_BYTE *)(v7 + 32);
    unint64_t v27 = result & ~v26;
    uint64_t v28 = v27 >> 6;
    if (((-1LL << v27) & ~*(void *)(v11 + 8 * (v27 >> 6))) != 0)
    {
      uint64_t v14 = __clz(__rbit64((-1LL << v27) & ~*(void *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0LL;
    }

    else
    {
      uint64_t v29 = 0;
      uint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }

        uint64_t v31 = v28 == v30;
        if (v28 == v30) {
          uint64_t v28 = 0LL;
        }
        v29 |= v31;
        unint64_t v32 = *(void *)(v11 + 8 * v28);
      }

      while (v32 == -1);
      uint64_t v14 = __clz(__rbit64(~v32)) + (v28 << 6);
    }

    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v14;
    uint64_t v15 = *(void *)(v7 + 48) + 24 * v14;
    *(void *)uint64_t v15 = v24;
    *(void *)(v15 + 8) = v23;
    *(_BYTE *)(v15 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v25;
    *(void *)(*(void *)(v7 + 56) + 8 * v14) = v38;
    ++*(void *)(v7 + 16);
  }

  swift_release();
  unint64_t v3 = v34;
  uint64_t v19 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  int64_t v33 = 1LL << *(_BYTE *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v19, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8LL);
  }
  else {
    *uint64_t v19 = -1LL << v33;
  }
  *(void *)(v5 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 0LL;
LABEL_40:
  uint64_t result = swift_release();
  *unint64_t v3 = v7;
  return result;
}

        uint64_t v7 = (v14 - 1) & v14;
        unint64_t v12 = __clz(__rbit64(v14)) + (v10 << 6);
      }

      uint64_t result = sub_189050AF0( *(void *)(*(void *)(v2 + 48) + 24 * v12),  *(void *)(*(void *)(v2 + 48) + 24 * v12 + 8),  *(_BYTE *)(*(void *)(v2 + 48) + 24 * v12 + 16),  v3);
    }
  }

  uint64_t result = swift_release();
  *unint64_t v1 = v3;
  return result;
}

    uint64_t v7 = (v18 - 1) & v18;
    unint64_t v12 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_6:
    uint64_t v13 = *(void *)(v2 + 48) + 24 * v12;
    uint64_t v14 = *(void *)v13;
    uint64_t v15 = *(void *)(v13 + 8);
    uint64_t v16 = *(_BYTE *)(v13 + 16);
    sub_188FFD4F4(*(void *)v13, v15, v16);
    uint64_t result = sub_189050AF0(v14, v15, v16, v3);
  }

  uint64_t v19 = v17 + 2;
  if (v19 >= v8)
  {
LABEL_20:
    swift_release_n();
    unint64_t v1 = v20;
    goto LABEL_21;
  }

  uint64_t v18 = *(void *)(v5 + 8 * v19);
  if (v18)
  {
    uint64_t v10 = v19;
    goto LABEL_19;
  }

  while (1)
  {
    uint64_t v10 = v19 + 1;
    if (__OFADD__(v19, 1LL)) {
      break;
    }
    if (v10 >= v8) {
      goto LABEL_20;
    }
    uint64_t v18 = *(void *)(v5 + 8 * v10);
    ++v19;
    if (v18) {
      goto LABEL_19;
    }
  }

  if (v4 != v7) {
    goto LABEL_21;
  }
  BOOL v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_189025B24()
{
  return swift_deallocObject();
}

uint64_t sub_189025B48@<X0>(uint64_t *a1@<X8>)
{
  return sub_189025450(*(void *)(v1 + 16), a1);
}

uint64_t sub_189025B50()
{
  return swift_deallocObject();
}

uint64_t sub_189025B74@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_189024E8C(a1, *(void (**)(uint64_t *__return_ptr, uint64_t *))(v2 + 16));
  *a2 = result;
  return result;
}

uint64_t sub_189025B9C(uint64_t a1)
{
  return a1;
}

uint64_t sub_189025BC4(uint64_t a1)
{
  return a1;
}

void sub_189025BEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!qword_18C761158)
  {
    unint64_t v4 = _s19InitializationErrorOMa(0LL, a2, a3, a4);
    if (!v5) {
      atomic_store(v4, (unint64_t *)&qword_18C761158);
    }
  }

uint64_t _s19InitializationErrorOMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s19InitializationErrorOMn);
}

unint64_t sub_189025C44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t result = qword_18C761160[0];
  if (!qword_18C761160[0])
  {
    sub_189025BEC(255LL, a2, a3, a4);
    unint64_t result = MEMORY[0x1895DD3F4](&unk_189069008, v5);
    atomic_store(result, qword_18C761160);
  }

  return result;
}

uint64_t sub_189025C8C()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t getEnumTagSinglePayload for ArgumentSet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *((_BYTE *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ArgumentSet(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0LL;
    if (a3 < 0) {
      *(_BYTE *)(result + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for Platform.StandardError()
{
  return &type metadata for Platform.StandardError;
}

uint64_t sub_189025D28()
{
  uint64_t v0 = (uint64_t *)MEMORY[0x1895DCC5C]();
  uint64_t result = sub_189067BC8();
  if ((_DWORD)result)
  {
    uint64_t v2 = 8LL * (int)result;
    uint64_t v3 = MEMORY[0x18961AFE8];
    while (1)
    {
      uint64_t result = *v0;
      if (!*v0) {
        break;
      }
      uint64_t result = MEMORY[0x1895DC8C0]();
      if (v5)
      {
        uint64_t v6 = result;
        uint64_t v7 = v5;
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_189056E74(0LL, *(void *)(v3 + 16) + 1LL, 1, (char *)v3);
          uint64_t v3 = result;
        }

        unint64_t v9 = *(void *)(v3 + 16);
        unint64_t v8 = *(void *)(v3 + 24);
        if (v9 >= v8 >> 1)
        {
          uint64_t result = (uint64_t)sub_189056E74((char *)(v8 > 1), v9 + 1, 1, (char *)v3);
          uint64_t v3 = result;
        }

        *(void *)(v3 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v9 + 1;
        uint64_t v4 = v3 + 16 * v9;
        *(void *)(v4 + 32) = v6;
        *(void *)(v4 + 40) = v7;
      }

      ++v0;
      v2 -= 8LL;
      if (!v2) {
        goto LABEL_12;
      }
    }

    __break(1u);
  }

  else
  {
    uint64_t v3 = MEMORY[0x18961AFE8];
LABEL_12:
    qword_18C4FDA60 = v3;
  }

  return result;
}

unint64_t sub_189025E1C(unint64_t a1, unint64_t a2)
{
  if ((a2 & 0x2000000000000000LL) != 0) {
    unint64_t v4 = HIBYTE(a2) & 0xF;
  }
  else {
    unint64_t v4 = a1 & 0xFFFFFFFFFFFFLL;
  }
  swift_bridgeObjectRetain();
  if (!v4) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v5 = (a1 >> 59) & 1;
  if ((a2 & 0x1000000000000000LL) == 0) {
    LOBYTE(v5) = 1;
  }
  uint64_t v6 = 4LL << v5;
  unint64_t v7 = 15LL;
  while (1)
  {
    unint64_t v9 = v7 & 0xC;
    unint64_t result = v7;
    if (v9 == v6) {
      unint64_t result = sub_18902621C(v7, a1, a2);
    }
    unint64_t v11 = result >> 16;
    if (result >> 16 >= v4) {
      break;
    }
    if ((a2 & 0x1000000000000000LL) != 0)
    {
      unint64_t result = sub_1890678D4();
      unsigned __int8 v12 = result;
      if (v9 != v6) {
        goto LABEL_20;
      }
    }

    else if ((a2 & 0x2000000000000000LL) != 0)
    {
      v13[0] = a1;
      v13[1] = a2 & 0xFFFFFFFFFFFFFFLL;
      unsigned __int8 v12 = *((_BYTE *)v13 + v11);
      if (v9 != v6) {
        goto LABEL_20;
      }
    }

    else
    {
      unint64_t result = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
      if ((a1 & 0x1000000000000000LL) == 0) {
        unint64_t result = sub_189067C70();
      }
      unsigned __int8 v12 = *(_BYTE *)(result + v11);
      if (v9 != v6)
      {
LABEL_20:
        if ((a2 & 0x1000000000000000LL) == 0) {
          goto LABEL_8;
        }
        goto LABEL_21;
      }
    }

    unint64_t result = sub_18902621C(v7, a1, a2);
    unint64_t v7 = result;
    if ((a2 & 0x1000000000000000LL) == 0)
    {
LABEL_8:
      unint64_t v7 = (v7 & 0xFFFFFFFFFFFF0000LL) + 65540;
      goto LABEL_9;
    }

unint64_t sub_189025FB8(unint64_t a1, unint64_t a2)
{
  return sub_189025E1C(a1, a2);
}

uint64_t sub_189025FD0(uint64_t result, unint64_t a2)
{
  uint64_t v3 = HIBYTE(a2) & 0xF;
  uint64_t v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000LL) != 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return 0LL;
  }

  if ((a2 & 0x1000000000000000LL) == 0)
  {
    if ((a2 & 0x2000000000000000LL) == 0)
    {
      if ((result & 0x1000000000000000LL) != 0) {
        uint64_t v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        uint64_t v6 = (unsigned __int8 *)sub_189067C70();
      }
      uint64_t v7 = (uint64_t)sub_189026DC8(v6, v4, 10LL);
      char v9 = v8 & 1;
      goto LABEL_37;
    }

    v23[0] = result;
    v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v3) {
        goto LABEL_50;
      }
      uint64_t v7 = (BYTE1(result) - 48);
      uint64_t v14 = v3 - 2;
      if (v14)
      {
        uint64_t v15 = (unsigned __int8 *)v23 + 2;
        while (1)
        {
          unsigned int v16 = *v15 - 48;
          if (v16 > 9) {
            goto LABEL_34;
          }
          uint64_t v17 = 10 * v7;
          uint64_t v7 = v17 + v16;
          char v9 = 0;
          ++v15;
          if (!--v14) {
            goto LABEL_37;
          }
        }
      }
    }

    else
    {
      if (result == 45)
      {
        if (v3)
        {
          if (v3 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            uint64_t v7 = -(uint64_t)(BYTE1(result) - 48);
            uint64_t v10 = v3 - 2;
            if (v10)
            {
              unint64_t v11 = (unsigned __int8 *)v23 + 2;
              while (1)
              {
                unsigned int v12 = *v11 - 48;
                if (v12 > 9) {
                  goto LABEL_34;
                }
                uint64_t v13 = 10 * v7;
                uint64_t v7 = v13 - v12;
                char v9 = 0;
                ++v11;
                if (!--v10) {
                  goto LABEL_37;
                }
              }
            }

            goto LABEL_36;
          }

LABEL_34:
          uint64_t v7 = 0LL;
          char v9 = 1;
          goto LABEL_37;
        }

        __break(1u);
LABEL_50:
        __break(1u);
        return result;
      }

      uint64_t v7 = (result - 48);
      uint64_t v18 = v3 - 1;
      if (v18)
      {
        uint64_t v19 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          unsigned int v20 = *v19 - 48;
          if (v20 > 9) {
            goto LABEL_34;
          }
          uint64_t v21 = 10 * v7;
          uint64_t v7 = v21 + v20;
          char v9 = 0;
          ++v19;
          if (!--v18) {
            goto LABEL_37;
          }
        }
      }
    }

    if (++v43 == v41)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_96;
    }

    if (v43 >= *(void *)(v42 + 16)) {
      goto LABEL_203;
    }
  }

  uint64_t v142 = v43;
  if (BYTE8(v178) == 1)
  {
    uint64_t v4 = *((void *)&v177 + 1);
    uint64_t v147 = BYTE8(v168);
    sub_188FFCFF4((uint64_t)&v168);
    uint64_t v186 = v4;
    sub_188FFD130();
    while (1)
    {
      sub_18903EAF0(v156 == 4, &v164, (uint64_t)v180);
      sub_189011B78((uint64_t)v180, (uint64_t)v181, &qword_18C761480);
      if ((v182 & 0x7FFFFFFFFFFFFF3ELL) == 0x7FFFFFF3ELL) {
        break;
      }
      uint64_t v6 = v183;
      uint64_t v10 = v184;
      uint64_t v54 = v185;
      sub_189041354((uint64_t)v180);
      if (v6 < 0)
      {
        __break(1u);
LABEL_201:
        __break(1u);
LABEL_202:
        __break(1u);
LABEL_203:
        __break(1u);
LABEL_204:
        __break(1u);
        goto LABEL_205;
      }

      char v8 = v54 & 1;
      uint64_t v55 = (uint64_t *)(a3 + 32 + 16 * v6);
      uint64_t v56 = *v55;
      uint64_t v57 = v55[1];
      __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC888);
      char v9 = swift_allocObject();
      *(_OWORD *)(v9 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = xmmword_1890684B0;
      *(void *)(v9 + 32) = v6;
      *(void *)(v9 + 40) = v10;
      __int128 v58 = v10;
      *(_WORD *)(v9 + 48) = v8;
      swift_bridgeObjectRetain();
      uint64_t v10 = sub_1890473A0(v9);
      swift_setDeallocating();
      swift_deallocClassInstance();
      ((void (*)(unint64_t, void, void, uint64_t, uint64_t, uint64_t, void *))v186)( v10,  0LL,  0LL,  254LL,  v56,  v57,  a4);
      if (v5)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_189009B34();
        sub_1890099F8((uint64_t)&v168);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_197;
      }

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v7 + 16))
      {
        sub_189068030();
        sub_18906803C();
        sub_18906803C();
        if (!(_DWORD)v8) {
          sub_18906803C();
        }
        sub_18906803C();
        uint64_t v4 = (uint64_t)v162;
        __int128 v59 = sub_189068060();
        __int128 v60 = -1LL << *(_BYTE *)(v7 + 32);
        __int128 v61 = v59 & ~v60;
        if (((*(void *)(v7 + 56 + ((v61 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v61) & 1) != 0)
        {
          __int128 v62 = ~v60;
          do
          {
            __int128 v63 = *(void *)(v7 + 48) + 24 * v61;
            if ((*(_BYTE *)(v63 + 17) & 1) == 0 && *(void *)v63 == v6)
            {
              if ((*(_BYTE *)(v63 + 16) & 1) != 0)
              {
                if ((_DWORD)v8) {
                  goto LABEL_40;
                }
              }

              else if (!(_DWORD)v8 && *(void *)(v63 + 8) == v58)
              {
                goto LABEL_40;
              }
            }

            __int128 v61 = (v61 + 1) & v62;
          }

          while (((*(void *)(v7 + 56 + ((v61 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v61) & 1) != 0);
        }
      }

      sub_189068030();
      sub_18906803C();
      sub_18906803C();
      if (!(_DWORD)v8) {
        sub_18906803C();
      }
      sub_18906803C();
      uint64_t v4 = (uint64_t)v162;
      __int128 v64 = sub_189068060();
      __int128 v65 = -1LL << *(_BYTE *)(v7 + 32);
      char v9 = v64 & ~v65;
      if (((*(void *)(v7 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v9) & 1) != 0)
      {
        __int128 v66 = ~v65;
        do
        {
          __int128 v67 = *(void *)(v7 + 48) + 24 * v9;
          if ((*(_BYTE *)(v67 + 17) & 1) == 0 && *(void *)v67 == v6)
          {
            if ((*(_BYTE *)(v67 + 16) & 1) != 0)
            {
              if ((_DWORD)v8) {
                goto LABEL_40;
              }
            }

            else if (!(_DWORD)v8 && *(void *)(v67 + 8) == v58)
            {
              goto LABEL_40;
            }
          }

          char v9 = (v9 + 1) & v66;
        }

        while (((*(void *)(v7 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v9) & 1) != 0);
      }

      __int128 v68 = swift_isUniquelyReferenced_nonNull_native();
      __int128 v163 = v7;
      if (*(void *)(v7 + 24) <= *(void *)(v7 + 16))
      {
        if (v68) {
          sub_189050558();
        }
        else {
          sub_1890519C0();
        }
        uint64_t v7 = v163;
        sub_189068030();
        sub_18906803C();
        sub_18906803C();
        if (!(_DWORD)v8) {
          sub_18906803C();
        }
        sub_18906803C();
        uint64_t v4 = (uint64_t)v162;
        __int128 v69 = sub_189068060();
        char v70 = -1LL << *(_BYTE *)(v7 + 32);
        char v9 = v69 & ~v70;
        if (((*(void *)(v7 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v9) & 1) != 0)
        {
          unint64_t v71 = ~v70;
          do
          {
            unint64_t v72 = *(void *)(v7 + 48) + 24 * v9;
            if ((*(_BYTE *)(v72 + 17) & 1) == 0 && *(void *)v72 == v6)
            {
              if ((*(_BYTE *)(v72 + 16) & 1) != 0)
              {
                if ((_DWORD)v8) {
                  goto LABEL_221;
                }
              }

              else if (!(_DWORD)v8 && *(void *)(v72 + 8) == v58)
              {
                goto LABEL_221;
              }
            }

            char v9 = (v9 + 1) & v71;
          }

          while (((*(void *)(v7 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v9) & 1) != 0);
        }
      }

      else if ((v68 & 1) == 0)
      {
        uint64_t v4 = (uint64_t)&v163;
        sub_1890514BC();
        uint64_t v7 = v163;
      }

      *(void *)(v7 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8LL) + 56) |= 1LL << v9;
      uint64_t v73 = *(void *)(v7 + 48) + 24 * v9;
      *(void *)uint64_t v73 = v6;
      *(void *)(v73 + 8) = v58;
      *(_BYTE *)(v73 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v8;
      *(_BYTE *)(v73 + 17) = 0;
      uint64_t v74 = *(void *)(v7 + 16);
      uint64_t v75 = __OFADD__(v74, 1LL);
      uint64_t v76 = v74 + 1;
      if (v75) {
        goto LABEL_202;
      }
      *(void *)(v7 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v76;
      swift_bridgeObjectRelease();
LABEL_40:
      if ((v147 & 2) == 0)
      {
        sub_189009B34();
        sub_1890099F8((uint64_t)&v168);
        __int128 v41 = v144;
        __int128 v42 = v145;
        BOOL v40 = v140;
        __int128 v43 = v142;
        goto LABEL_34;
      }
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_189009B34();
    sub_1890099F8((uint64_t)&v168);
LABEL_96:
    uint64_t v4 = v146;
LABEL_97:
    unint64_t v78 = *(void *)(v4 + 16);
    uint64_t v79 = *(void *)(v78 + 16);
    if (v79)
    {
      uint64_t v80 = *(_OWORD *)(v78 + 176);
      unint64_t v176 = *(_OWORD *)(v78 + 160);
      unint64_t v177 = v80;
      uint64_t v81 = *(_OWORD *)(v78 + 208);
      unint64_t v178 = *(_OWORD *)(v78 + 192);
      uint64_t v179 = v81;
      uint64_t v82 = *(_OWORD *)(v78 + 112);
      uint64_t v172 = *(_OWORD *)(v78 + 96);
      char v173 = v82;
      uint64_t v83 = *(_OWORD *)(v78 + 144);
      v174 = *(_OWORD *)(v78 + 128);
      unint64_t v175 = v83;
      unsigned __int8 v84 = *(_OWORD *)(v78 + 48);
      uint64_t v168 = *(_OWORD *)(v78 + 32);
      uint64_t v169 = v84;
      unsigned __int8 v85 = *(_OWORD *)(v78 + 80);
      uint64_t v170 = *(_OWORD *)(v78 + 64);
      uint64_t v171 = v85;
      for (int64_t j = (__int128 *)(v78 + 224); ; j += 12)
      {
        --v79;
        if (!(void)v168 && (BYTE8(v168) & 2) != 0 && BYTE1(v177) == 6) {
          break;
        }
        if (!v79) {
          goto LABEL_197;
        }
        uint64_t v87 = *j;
        unint64_t v88 = j[1];
        uint64_t v89 = j[3];
        uint64_t v170 = j[2];
        uint64_t v171 = v89;
        uint64_t v168 = v87;
        uint64_t v169 = v88;
        uint64_t v90 = j[4];
        unsigned __int8 v91 = j[5];
        uint64_t v92 = j[7];
        v174 = j[6];
        unint64_t v175 = v92;
        uint64_t v172 = v90;
        char v173 = v91;
        uint64_t v93 = j[8];
        uint64_t v94 = j[9];
        uint64_t v95 = j[11];
        unint64_t v178 = j[10];
        uint64_t v179 = v95;
        unint64_t v176 = v93;
        unint64_t v177 = v94;
      }

      if (BYTE8(v178) == 1)
      {
        char v9 = *((void *)&v177 + 1);
        uint64_t v4 = v178;
        swift_beginAccess();
        char v8 = v164;
        unint64_t v11 = v165;
        uint64_t v6 = v166;
        uint64_t v10 = v167;
        if ((v167 & 1) == 0)
        {
          sub_188FFCFF4((uint64_t)&v168);
          sub_188FFD130();
          swift_unknownObjectRetain();
          goto LABEL_107;
        }

LABEL_36:
    char v9 = 0;
    goto LABEL_37;
  }

  uint64_t v7 = (uint64_t)sub_189026CE4(result, a2, 10LL);
  char v9 = v22;
LABEL_37:
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0) {
    return 0LL;
  }
  else {
    return v7;
  }
}

uint64_t sub_18902621C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000LL) == 0 || (a2 & 0x800000000000000LL) != 0)
  {
    uint64_t v10 = sub_1890678EC();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000LL;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }

  else
  {
    uint64_t v5 = MEMORY[0x1895DC95C](15LL, a1 >> 16);
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000LL;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }

unint64_t sub_189026294( uint64_t a1, char a2, uint64_t (*a3)(void *), uint64_t a4, unint64_t a5, unint64_t a6, uint64_t a7)
{
  void v44[3] = a4;
  if (a1 < 0)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }

  uint64_t v11 = a7;
  unint64_t v12 = a6;
  unint64_t v9 = a5;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = MEMORY[0x18961AFE8];
  uint64_t v41 = swift_allocObject();
  *(void *)(v41 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v9;
  if (!a1 || (unint64_t v42 = v12 >> 14, v12 >> 14 == v9 >> 14))
  {
    sub_189026AC4(v12, v41, a2 & 1, v14);
    swift_bridgeObjectRelease();
    unint64_t v12 = *(void *)(v14 + 16);
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_5;
  }

  uint64_t v32 = a1;
  uint64_t v33 = v14;
  BOOL v40 = (char *)MEMORY[0x18961AFE8];
  unint64_t v16 = v9;
  unint64_t v10 = v9;
  unint64_t v37 = v9;
  while (1)
  {
    v44[0] = sub_189067AF0();
    v44[1] = v17;
    uint64_t v18 = a3(v44);
    if (v8)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v12;
    }

    unint64_t v7 = v18;
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0) {
      break;
    }
    unint64_t v16 = sub_189067AC0();
LABEL_9:
    if (v42 == v16 >> 14) {
      goto LABEL_24;
    }
  }

  if (v10 >> 14 == v16 >> 14 && (a2 & 1) != 0)
  {
    unint64_t v16 = sub_189067AC0();
    *(void *)(v41 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v16;
    unint64_t v10 = v16;
    unint64_t v37 = v16;
    goto LABEL_9;
  }

  if (v16 >> 14 < v10 >> 14)
  {
    __break(1u);
    goto LABEL_34;
  }

  uint64_t v19 = sub_189067B08();
  uint64_t v36 = v20;
  uint64_t v38 = v19;
  uint64_t v34 = v22;
  uint64_t v35 = v21;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    BOOL v40 = sub_1890579F8(0LL, *((void *)v40 + 2) + 1LL, 1, v40);
  }
  unint64_t v7 = *((void *)v40 + 2);
  unint64_t v23 = *((void *)v40 + 3);
  if (v7 >= v23 >> 1) {
    BOOL v40 = sub_1890579F8((char *)(v23 > 1), v7 + 1, 1, v40);
  }
  *((void *)v40 + 2) = v7 + 1;
  uint64_t v24 = &v40[32 * v7];
  *((void *)v24 + 4) = v38;
  *((void *)v24 + 5) = v36;
  *((void *)v24 + 6) = v35;
  *((void *)v24 + 7) = v34;
  *(void *)(v33 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v40;
  uint64_t v25 = sub_189067AC0();
  unint64_t v16 = v25;
  *(void *)(v41 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v25;
  if (*((void *)v40 + 2) != v32)
  {
    unint64_t v10 = v25;
    unint64_t v37 = v25;
    goto LABEL_9;
  }

  unint64_t v37 = v25;
  unint64_t v10 = v25;
LABEL_24:
  if (v42 == v10 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    unint64_t v12 = (unint64_t)v40;
    goto LABEL_32;
  }

  if (v42 >= v37 >> 14)
  {
    unint64_t v7 = sub_189067B08();
    unint64_t v9 = v26;
    unint64_t v10 = v27;
    uint64_t v11 = v28;
    swift_bridgeObjectRelease();
    unint64_t v12 = (unint64_t)v40;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      goto LABEL_36;
    }
    goto LABEL_29;
  }

LABEL_35:
  __break(1u);
LABEL_36:
  unint64_t v12 = (unint64_t)sub_1890579F8(0LL, *(void *)(v12 + 16) + 1LL, 1, (char *)v12);
LABEL_29:
  unint64_t v30 = *(void *)(v12 + 16);
  unint64_t v29 = *(void *)(v12 + 24);
  if (v30 >= v29 >> 1) {
    unint64_t v12 = (unint64_t)sub_1890579F8((char *)(v29 > 1), v30 + 1, 1, (char *)v12);
  }
  *(void *)(v12 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v30 + 1;
  uint64_t v31 = (void *)(v12 + 32 * v30);
  v31[4] = v7;
  v31[5] = v9;
  v31[6] = v10;
  v31[7] = v11;
  *(void *)(v33 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v12;
LABEL_32:
  swift_bridgeObjectRetain();
  swift_release();
LABEL_5:
  swift_release();
  return v12;
}

            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
LABEL_36:
            sub_188FFAD68();
            swift_allocError();
            *(void *)uint64_t v24 = 3LL;
            *(_OWORD *)(v24 + 8) = 0u;
            *(_OWORD *)(v24 + 24) = 0u;
            *(_OWORD *)(v24 + 40) = 0u;
            *(_OWORD *)(v24 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = 0u;
            *(void *)(v24 + 72) = 0LL;
            *(_BYTE *)(v24 + 80) = 15;
            swift_willThrow();
            swift_unknownObjectRelease();
            return swift_release();
          }

          uint64_t v5 = v2;
          if (v81 == v7) {
            goto LABEL_8;
          }
          char v3 = v80;
          if (v81 >= v7) {
            goto LABEL_79;
          }
          uint64_t v25 = (uint64_t *)(v10 + 16 * v81);
          uint64_t v6 = *v25;
          uint64_t v4 = v25[1];
          v14 += 2LL;
          sub_189067F34();
          swift_unknownObjectRetain_n();
          swift_bridgeObjectRetain();
          unint64_t v26 = swift_dynamicCastClass();
          if (!v26)
          {
            swift_unknownObjectRelease();
            unint64_t v26 = MEMORY[0x18961AFE8];
          }

          unint64_t v27 = *(void *)(v26 + 16);
          swift_release();
          unint64_t v12 = v76;
          if (v27 == v76 - v14)
          {
            uint64_t v28 = swift_dynamicCastClass();
            if (!v28)
            {
              swift_unknownObjectRelease();
              uint64_t v28 = MEMORY[0x18961AFE8];
            }

  *(void *)&unint64_t v42 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C760FE8);
  sub_189014190();
  uint64_t v28 = sub_1890677C0();
  unint64_t v30 = v29;
  swift_bridgeObjectRelease();
  uint64_t v34 = 15392LL;
  uint64_t v35 = 0xE200000000000000LL;
  __int128 v46 = *(_OWORD *)&v36[72];
  __int128 v47 = *(_OWORD *)&v36[88];
  __int128 v48 = *(_OWORD *)&v36[104];
  __int128 v49 = *(void *)&v36[120];
  unint64_t v42 = *(_OWORD *)&v36[8];
  __int128 v43 = *(_OWORD *)&v36[24];
  __int128 v44 = *(_OWORD *)&v36[40];
  __int128 v45 = *(_OWORD *)&v36[56];
  uint64_t v41 = *(_OWORD *)&v36[88];
  uint64_t v31 = *(void *)&v36[88] & 0xFFFFFFFFFFFFLL;
  if ((*(void *)&v36[96] & 0x2000000000000000LL) != 0) {
    uint64_t v31 = HIBYTE(*((void *)&v41 + 1)) & 0xFLL;
  }
  if (v31)
  {
    uint64_t v33 = v47;
    swift_bridgeObjectRetain();
  }

  else
  {
    sub_188FFCFF4((uint64_t)v36);
    sub_18900F670((uint64_t)&v41);
    sub_189049A90((uint64_t *)v36, (unint64_t *)&v33);
    sub_18900F698((uint64_t)&v41);
    sub_1890099F8((uint64_t)v36);
  }

  sub_18906788C();
  swift_bridgeObjectRelease();
  sub_18906788C();
  uint64_t v34 = v28;
  uint64_t v35 = v30;
  swift_bridgeObjectRetain();
  sub_18906788C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v34;
}

char *sub_1890266AC( uint64_t a1, char a2, uint64_t (*a3)(void *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  v46[3] = a4;
  if (a1 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }

  uint64_t v11 = a5;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = MEMORY[0x18961AFE8];
  uint64_t v43 = swift_allocObject();
  *(void *)(v43 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 15LL;
  uint64_t v15 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000LL) != 0 ? (uint64_t v16 = HIBYTE(a6) & 0xF) : (uint64_t v16 = v11 & 0xFFFFFFFFFFFFLL), !v16))
  {
    if ((a6 & 0x2000000000000000LL) == 0) {
      uint64_t v15 = v11 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v30 = 7LL;
    if (((a6 >> 60) & ((v11 & 0x800000000000000LL) == 0)) != 0) {
      uint64_t v30 = 11LL;
    }
    sub_189026BD8(v30 | (v15 << 16), v43, a2 & 1, v14);
    swift_bridgeObjectRelease();
    unint64_t v10 = *(char **)(v14 + 16);
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_38;
  }

  uint64_t v38 = a1;
  uint64_t v39 = v14;
  unint64_t v44 = 4 * v16;
  unint64_t v10 = (char *)MEMORY[0x18961AFE8];
  unint64_t v9 = 15LL;
  unint64_t v8 = 15LL;
  unint64_t v17 = 15LL;
  while (1)
  {
    v46[0] = sub_189067904();
    v46[1] = v18;
    uint64_t v19 = a3(v46);
    if (v7)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v10;
    }

    uint64_t v6 = v19;
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0) {
      break;
    }
    unint64_t v9 = sub_189067850();
LABEL_9:
    if (v44 == v9 >> 14) {
      goto LABEL_29;
    }
  }

  if (v8 >> 14 == v9 >> 14 && (a2 & 1) != 0)
  {
    unint64_t v9 = sub_189067850();
    *(void *)(v43 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v9;
    unint64_t v8 = v9;
    unint64_t v17 = v9;
    goto LABEL_9;
  }

  if (v9 >> 14 < v8 >> 14)
  {
    __break(1u);
    goto LABEL_41;
  }

  uint64_t v20 = sub_189067928();
  uint64_t v40 = v21;
  uint64_t v41 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v10 = sub_1890579F8(0LL, *((void *)v10 + 2) + 1LL, 1, v10);
  }
  unint64_t v27 = *((void *)v10 + 2);
  unint64_t v26 = *((void *)v10 + 3);
  uint64_t v6 = v27 + 1;
  if (v27 >= v26 >> 1) {
    unint64_t v10 = sub_1890579F8((char *)(v26 > 1), v27 + 1, 1, v10);
  }
  *((void *)v10 + 2) = v6;
  uint64_t v28 = &v10[32 * v27];
  *((void *)v28 + 4) = v41;
  *((void *)v28 + 5) = v23;
  *((void *)v28 + 6) = v25;
  *((void *)v28 + 7) = v40;
  *(void *)(v39 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v10;
  uint64_t v29 = sub_189067850();
  unint64_t v9 = v29;
  *(void *)(v43 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v29;
  if (*((void *)v10 + 2) != v38)
  {
    unint64_t v8 = v29;
    unint64_t v17 = v29;
    goto LABEL_9;
  }

  unint64_t v17 = v29;
  unint64_t v8 = v29;
LABEL_29:
  if (v44 == v8 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_37;
  }

  if (v44 >= v17 >> 14)
  {
    uint64_t v6 = sub_189067928();
    unint64_t v8 = v31;
    unint64_t v9 = v32;
    uint64_t v11 = v33;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      goto LABEL_43;
    }
    goto LABEL_34;
  }

LABEL_42:
  __break(1u);
LABEL_43:
  unint64_t v10 = sub_1890579F8(0LL, *((void *)v10 + 2) + 1LL, 1, v10);
LABEL_34:
  unint64_t v35 = *((void *)v10 + 2);
  unint64_t v34 = *((void *)v10 + 3);
  if (v35 >= v34 >> 1) {
    unint64_t v10 = sub_1890579F8((char *)(v34 > 1), v35 + 1, 1, v10);
  }
  *((void *)v10 + 2) = v35 + 1;
  uint64_t v36 = &v10[32 * v35];
  *((void *)v36 + 4) = v6;
  *((void *)v36 + 5) = v8;
  *((void *)v36 + 6) = v9;
  *((void *)v36 + 7) = v11;
  *(void *)(v39 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v10;
LABEL_37:
  swift_bridgeObjectRetain();
  swift_release();
LABEL_38:
  swift_release();
  return v10;
}

uint64_t sub_189026AC4(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v10 = *(void *)(a2 + 16) >> 14;
  int v11 = (v10 == a1 >> 14) & a3;
  if (v11 == 1) {
    return v11 ^ 1u;
  }
  if (a1 >> 14 < v10)
  {
    __break(1u);
    goto LABEL_9;
  }

  uint64_t v4 = a4;
  uint64_t v5 = sub_189067B08();
  uint64_t v6 = v12;
  uint64_t v7 = v13;
  uint64_t v8 = v14;
  unint64_t v9 = *(char **)(v4 + 16);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v4 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v9;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_9:
    unint64_t v9 = sub_1890579F8(0LL, *((void *)v9 + 2) + 1LL, 1, v9);
    *(void *)(v4 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v9;
  }

  unint64_t v17 = *((void *)v9 + 2);
  unint64_t v16 = *((void *)v9 + 3);
  if (v17 >= v16 >> 1)
  {
    unint64_t v9 = sub_1890579F8((char *)(v16 > 1), v17 + 1, 1, v9);
    *(void *)(v4 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v9;
  }

  *((void *)v9 + 2) = v17 + 1;
  uint64_t v18 = &v9[32 * v17];
  *((void *)v18 + 4) = v5;
  *((void *)v18 + 5) = v6;
  *((void *)v18 + 6) = v7;
  *((void *)v18 + 7) = v8;
  return v11 ^ 1u;
}

uint64_t sub_189026BD8(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v10 = *(void *)(a2 + 16) >> 14;
  int v11 = (v10 == a1 >> 14) & a3;
  if (v11 == 1) {
    return v11 ^ 1u;
  }
  if (a1 >> 14 < v10)
  {
    __break(1u);
    goto LABEL_9;
  }

  uint64_t v4 = a4;
  uint64_t v5 = sub_189067928();
  uint64_t v6 = v12;
  uint64_t v7 = v13;
  uint64_t v8 = v14;
  unint64_t v9 = *(char **)(v4 + 16);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v4 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v9;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_9:
    unint64_t v9 = sub_1890579F8(0LL, *((void *)v9 + 2) + 1LL, 1, v9);
    *(void *)(v4 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v9;
  }

  unint64_t v17 = *((void *)v9 + 2);
  unint64_t v16 = *((void *)v9 + 3);
  if (v17 >= v16 >> 1)
  {
    unint64_t v9 = sub_1890579F8((char *)(v16 > 1), v17 + 1, 1, v9);
    *(void *)(v4 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v9;
  }

  *((void *)v9 + 2) = v17 + 1;
  uint64_t v18 = &v9[32 * v17];
  *((void *)v18 + 4) = v5;
  *((void *)v18 + 5) = v6;
  *((void *)v18 + 6) = v7;
  *((void *)v18 + 7) = v8;
  return v11 ^ 1u;
}

unsigned __int8 *sub_189026CE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_18906791C();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000LL) == 0)
  {
    if ((v4 & 0x2000000000000000LL) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }

  uint64_t v5 = sub_1890016D8();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000LL) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000LL) != 0)
  {
    uint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }

  else
  {
    uint64_t v7 = (unsigned __int8 *)sub_189067C70();
  }

unsigned __int8 *sub_189026DC8(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }

          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }

          if (result)
          {
            uint64_t v9 = 0LL;
            for (uint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0LL;
                  }
                  char v12 = -87;
                }

                else
                {
                  char v12 = -55;
                }
              }

              else
              {
                char v12 = -48;
              }

              uint64_t v13 = v9 * a3;
              uint64_t v9 = v13 - (v11 + v12);
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }

          return 0LL;
        }

        return 0LL;
      }

      __break(1u);
      goto LABEL_65;
    }

    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }

      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }

      if (result)
      {
        uint64_t v25 = 0LL;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0LL;
              }
              char v27 = -87;
            }

            else
            {
              char v27 = -55;
            }
          }

          else
          {
            char v27 = -48;
          }

          uint64_t v28 = v25 * a3;
          uint64_t v25 = v28 + (v26 + v27);
          ++result;
          --v3;
        }

        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }

      return 0LL;
    }

    return 0LL;
  }

  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }

  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0LL;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }

  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }

  if (!result) {
    return 0LL;
  }
  uint64_t v9 = 0LL;
  uint64_t v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0LL;
        }
        char v20 = -87;
      }

      else
      {
        char v20 = -55;
      }
    }

    else
    {
      char v20 = -48;
    }

    uint64_t v21 = v9 * a3;
    uint64_t v9 = v21 + (v19 + v20);
    ++v18;
    --v14;
  }

  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_189027044(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1LL;
  }
  else {
    return sub_189067F10() & 1;
  }
}

uint64_t sub_189027098()
{
  if (!getenv("COLUMNS")) {
    goto LABEL_55;
  }
  uint64_t result = sub_189067898();
  uint64_t v2 = v1;
  uint64_t v3 = HIBYTE(v1) & 0xF;
  uint64_t v4 = result & 0xFFFFFFFFFFFFLL;
  if ((v2 & 0x2000000000000000LL) != 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v5)
  {
    swift_bridgeObjectRelease();
LABEL_55:
    uint64_t v19 = 0LL;
    goto LABEL_56;
  }

  if ((v2 & 0x1000000000000000LL) == 0)
  {
    if ((v2 & 0x2000000000000000LL) == 0)
    {
      if ((result & 0x1000000000000000LL) != 0) {
        unsigned __int8 v6 = (unsigned __int8 *)((v2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        unsigned __int8 v6 = (unsigned __int8 *)sub_189067C70();
      }
      uint64_t v7 = (uint64_t)sub_189026DC8(v6, v4, 10LL);
      char v9 = v8 & 1;
      goto LABEL_45;
    }

    v28[0] = result;
    v28[1] = v2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v3) {
        goto LABEL_63;
      }
      uint64_t v7 = (BYTE1(result) - 48);
      if (v3 != 2)
      {
        uint64_t v7 = 10LL * (BYTE1(result) - 48) + (BYTE2(result) - 48);
        uint64_t v10 = v3 - 3;
        if (v10)
        {
          unsigned int v11 = (unsigned __int8 *)v28 + 3;
          while (1)
          {
            unsigned int v12 = *v11 - 48;
            if (v12 > 9) {
              goto LABEL_32;
            }
            uint64_t v13 = 10 * v7;
            uint64_t v7 = v13 + v12;
            char v9 = 0;
            ++v11;
            if (!--v10) {
              goto LABEL_45;
            }
          }
        }
      }
    }

    else
    {
      if (result == 45)
      {
        if (v3)
        {
          if (v3 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            if (v3 == 2)
            {
              char v9 = 0;
              uint64_t v7 = -(uint64_t)(BYTE1(result) - 48);
              goto LABEL_45;
            }

            if ((BYTE2(result) - 48) <= 9u)
            {
              uint64_t v7 = -10LL * (BYTE1(result) - 48) - (BYTE2(result) - 48);
              uint64_t v18 = v3 - 3;
              if (!v18) {
                goto LABEL_44;
              }
              char v20 = (unsigned __int8 *)v28 + 3;
              while (1)
              {
                unsigned int v21 = *v20 - 48;
                if (v21 > 9) {
                  break;
                }
                uint64_t v22 = 10 * v7;
                uint64_t v7 = v22 - v21;
                char v9 = 0;
                ++v20;
                if (!--v18) {
                  goto LABEL_45;
                }
              }
            }
          }

LABEL_32:
          uint64_t v7 = 0LL;
          char v9 = 1;
          goto LABEL_45;
        }

        __break(1u);
LABEL_63:
        __break(1u);
        return result;
      }

      uint64_t v7 = (result - 48);
      if (v3 != 1)
      {
        uint64_t v7 = 10LL * (result - 48) + (BYTE1(result) - 48);
        uint64_t v14 = v3 - 2;
        if (v14)
        {
          unsigned __int8 v15 = (unsigned __int8 *)v28 + 2;
          while (1)
          {
            unsigned int v16 = *v15 - 48;
            if (v16 > 9) {
              goto LABEL_32;
            }
            uint64_t v17 = 10 * v7;
            uint64_t v7 = v17 + v16;
            char v9 = 0;
            ++v15;
            if (!--v14) {
              goto LABEL_45;
            }
          }
        }
      }
    }

        char v20 = 0;
        return v20 & 1;
      }

      v37 &= 0x3Fu;
      uint64_t v18 = v36.n128_u64[1];
      uint64_t v17 = v36.n128_u64[0];
      sub_18904127C(&v24, &v25);
      if ((v26 & 0xC0) != 0x80) {
        goto LABEL_32;
      }
      v26 &= 0x3Fu;
    }

    else
    {
      v37 &= 0x3Fu;
      uint64_t v18 = v36.n128_u64[1];
      uint64_t v17 = v36.n128_u64[0];
      sub_18904127C(&v24, &v25);
      if (v26 >= 0x40u) {
        goto LABEL_32;
      }
    }

    if (__PAIR128__(v18, v17) != *(_OWORD *)&v25 && (sub_189067F10() & 1) == 0) {
      goto LABEL_32;
    }
    goto LABEL_38;
  }

  v32 &= ~0x8000000000000000LL;
  char v8 = v31;
  char v9 = v33;
  uint64_t v10 = v34;
  sub_189041240(a2, (uint64_t)&v27);
  unsigned int v11 = v28;
  if ((v28 & 0x8000000000000000LL) == 0)
  {
    sub_18904127C(&v27, &v36);
    goto LABEL_32;
  }

  unsigned int v12 = v3;
  v28 &= ~0x8000000000000000LL;
  uint64_t v13 = v11;
  uint64_t v14 = v3 >> 6;
  unsigned int v16 = v29;
  unsigned __int8 v15 = v30;
  if (!v14)
  {
    if (v13 >= 0x40) {
      goto LABEL_32;
    }
    goto LABEL_27;
  }

  if (v14 != 1)
  {
    if ((v13 & 0xC0) != 0x80) {
      goto LABEL_32;
    }
LABEL_27:
    if (*(_OWORD *)&v8 == *(_OWORD *)&v27) {
      goto LABEL_36;
    }
    uint64_t v19 = sub_189067F10();
    char v20 = 0;
    if ((v19 & 1) != 0) {
      goto LABEL_36;
    }
    return v20 & 1;
  }

  if ((v13 & 0xC0) != 0x40) {
    goto LABEL_32;
  }
  if (*(_OWORD *)&v8 == *(_OWORD *)&v27)
  {
    if (((v12 ^ v13) & 1) != 0) {
      goto LABEL_32;
    }
LABEL_36:
    if (v9 != v16 || v10 != v15)
    {
      char v20 = sub_189067F10();
      return v20 & 1;
    }

    goto LABEL_38;
  }

  uint64_t v23 = sub_189067F10();
  char v20 = 0;
  if (((v12 ^ v13) & 1) == 0 && (v23 & 1) != 0) {
    goto LABEL_36;
  }
  return v20 & 1;
}

LABEL_44:
    char v9 = 0;
    goto LABEL_45;
  }

  uint64_t v7 = (uint64_t)sub_189026CE4(result, v2, 10LL);
  char v9 = v27;
LABEL_45:
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0) {
    uint64_t v19 = 0LL;
  }
  else {
    uint64_t v19 = v7;
  }
LABEL_56:
  if (getenv("LINES"))
  {
    uint64_t v23 = sub_189067898();
    sub_189025FD0(v23, v24);
    char v26 = v25 & 1;
  }

  else
  {
    char v26 = 1;
  }

  char v29 = v26 & 1;
  return v19;
}

uint64_t sub_1890273B4()
{
  v2[1] = *MEMORY[0x1895F89C0];
  v2[0] = 0LL;
  uint64_t v0 = sub_189067718();
  else {
    return WORD1(v2[0]);
  }
}

uint64_t sub_189027454()
{
  if (!getenv("SHELL")) {
    return 0LL;
  }
  uint64_t v0 = sub_189067898();
  unint64_t v2 = v1;
  v13[0] = 47LL;
  v13[1] = 0xE100000000000000LL;
  MEMORY[0x1895F8858](v0);
  v12[2] = v13;
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1890266AC(0x7FFFFFFFFFFFFFFFLL, 1, sub_18901A188, (uint64_t)v12, v0, v2);
  swift_bridgeObjectRelease();
  uint64_t v4 = *((void *)v3 + 2);
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return 0LL;
  }

  uint64_t v5 = &v3[32 * v4];
  uint64_t v6 = *(void *)v5;
  uint64_t v7 = *((void *)v5 + 1);
  uint64_t v8 = *((void *)v5 + 2);
  uint64_t v9 = *((void *)v5 + 3);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  uint64_t v10 = MEMORY[0x1895DC8B4](v6, v7, v8, v9);
  swift_bridgeObjectRelease_n();
  return v10;
}

uint64_t sub_18902757C()
{
  return swift_deallocObject();
}

uint64_t sub_1890275A0()
{
  return swift_deallocObject();
}

uint64_t sub_1890275B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v6 = type metadata accessor for Parsed(0LL, *(void *)(a1 + 16), a2, a3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(a4, v4, v6);
}

uint64_t sub_1890275F0@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7 = type metadata accessor for Parsed(0LL, a2, a3, a4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32LL))(a5, a1, v7);
}

uint64_t Argument.init(from:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7 = type metadata accessor for Argument(0LL, a2, a3, a4);
  sub_189006BE4(a1, (uint64_t)v10);
  uint64_t v8 = MEMORY[0x1895DD3F4](&unk_189069130, v7);
  sub_189048038((uint64_t)v10, v7, v8, a5);
  return __swift_destroy_boxed_opaque_existential_1Tm(a1);
}

uint64_t type metadata accessor for Argument(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Argument);
}

void Argument.init()()
{
}

uint64_t Argument.wrappedValue.getter@<X0>( uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = type metadata accessor for Parsed(0LL, v7, a2, a3);
  MEMORY[0x1895F8858](v8);
  uint64_t v10 = (char *)&v13 - v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v13 - v9, v5, v8);
  uint64_t result = sub_189067D3C();
  __break(1u);
  return result;
}

uint64_t sub_189027820(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a4 + a3 - 8);
  MEMORY[0x1895F8858](a1);
  uint64_t v6 = (char *)&v14 - v5;
  (*(void (**)(char *))(v7 + 16))((char *)&v14 - v5);
  uint64_t v10 = type metadata accessor for Argument(0LL, v4, v8, v9);
  return Argument.wrappedValue.setter((uint64_t)v6, v10, v11, v12);
}

uint64_t Argument.wrappedValue.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = type metadata accessor for Parsed(0LL, v6, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8LL))(v4, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL))(v4, a1, v6);
  return swift_storeEnumTagMultiPayload();
}

void (*Argument.wrappedValue.modify( void *a1, uint64_t a2))(uint64_t **a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = malloc(0x30uLL);
  *a1 = v5;
  *uint64_t v5 = a2;
  v5[1] = v2;
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v5[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[3] = v7;
  size_t v8 = *(void *)(v7 + 64);
  v5[4] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v5[5] = v9;
  Argument.wrappedValue.getter(a2, v10, v11, (uint64_t)v9);
  return sub_189027998;
}

void sub_189027998(uint64_t **a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *a1;
  uint64_t v5 = (void *)(*a1)[4];
  uint64_t v6 = (void *)(*a1)[5];
  if ((a2 & 1) != 0)
  {
    uint64_t v7 = v4[2];
    uint64_t v8 = v4[3];
    uint64_t v9 = *v4;
    (*(void (**)(uint64_t, void *, uint64_t))(v8 + 16))((*a1)[4], v6, v7);
    Argument.wrappedValue.setter((uint64_t)v5, v9, v10, v11);
    (*(void (**)(void *, uint64_t))(v8 + 8))(v6, v7);
  }

  else
  {
    Argument.wrappedValue.setter((*a1)[5], *v4, a3, a4);
  }

  free(v6);
  free(v5);
  free(v4);
}

uint64_t sub_189027A30@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return Argument.init(from:)(a1, *(void *)(a2 + 16), a3, a4, a5);
}

uint64_t sub_189027A4C@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_1890275F0(a1, *(void *)(a2 + 16), a3, a4, a5);
}

unint64_t Argument.description.getter(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1895F8858](a1);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  MEMORY[0x1895F8858](v5);
  uint64_t v9 = (char *)&v18 - v8;
  uint64_t v12 = type metadata accessor for Parsed(0LL, v3, v10, v11);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1895F8858](v12);
  unsigned __int8 v15 = (char *)&v18 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v18 - v14, v2, v12);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    return 0xD000000000000016LL;
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v9, v15, v3);
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
    uint64_t v16 = sub_1890677FC();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  }

  return v16;
}

void static ArgumentArrayParsingStrategy.remaining.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

void static ArgumentArrayParsingStrategy.allUnrecognized.getter(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

void static ArgumentArrayParsingStrategy.postTerminator.getter(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

void static ArgumentArrayParsingStrategy.captureForPassthrough.getter(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

void static ArgumentArrayParsingStrategy.unconditionalRemaining.getter(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t ArgumentArrayParsingStrategy.hash(into:)()
{
  return sub_18906803C();
}

BOOL static ArgumentArrayParsingStrategy.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ArgumentArrayParsingStrategy.hashValue.getter()
{
  return sub_189068060();
}

BOOL sub_189027C74(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t Argument<A>.init(wrappedValue:help:completion:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v24 = a5;
  uint64_t v25 = a1;
  uint64_t v27 = a6;
  uint64_t v26 = type metadata accessor for Parsed(0LL, a4, a3, a4);
  uint64_t v9 = *(void *)(v26 - 8);
  MEMORY[0x1895F8858](v26);
  uint64_t v11 = (uint64_t *)((char *)&v23 - v10);
  sub_18902A03C(a2, (uint64_t)v28);
  uint64_t v12 = *(void *)a3;
  uint64_t v13 = *(void *)(a3 + 8);
  char v14 = *(_BYTE *)(a3 + 16);
  uint64_t v15 = *(void *)(a4 - 8);
  unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 81LL) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v17 = (*(void *)(v15 + 64) + v16 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v18 = swift_allocObject();
  uint64_t v19 = v24;
  *(void *)(v18 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = a4;
  *(void *)(v18 + 24) = v19;
  sub_18902A03C((uint64_t)v28, v18 + 32);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v15 + 32))(v18 + v16, v25, a4);
  unint64_t v20 = v18 + v17;
  *(void *)unint64_t v20 = v12;
  *(void *)(v20 + 8) = v13;
  *(_BYTE *)(v20 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v14;
  sub_189048624((uint64_t)sub_18902A120, v18, a4, v21, v11);
  return (*(uint64_t (**)(uint64_t, void *, uint64_t))(v9 + 32))(v27, v11, v26);
}

uint64_t sub_189027DBC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, ...)
{
  uint64_t v36 = a2;
  uint64_t v37 = a3;
  uint64_t v38 = a1;
  uint64_t v14 = sub_189067AB4();
  MEMORY[0x1895F8858](v14);
  unint64_t v16 = (char *)&v36 - v15;
  uint64_t v19 = type metadata accessor for Bare(0LL, a9, v17, v18);
  sub_18902A03C((uint64_t)a4, (uint64_t)v41);
  uint64_t v20 = *(void *)(a9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v16, a5, a9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v16, 0LL, 1LL, a9);
  v39[0] = a6;
  v39[1] = a7;
  char v40 = a8;
  uint64_t v21 = v36;
  swift_bridgeObjectRetain();
  uint64_t v22 = v37;
  swift_bridgeObjectRetain();
  sub_1890140A4(a4);
  sub_189014118(a6, a7, a8);
  uint64_t v23 = MEMORY[0x1895DD3F4](&unk_18906AA1C, v19, (uint64_t *)va);
  sub_189048DF0(v38, v21, v22, 0LL, (uint64_t)v41, 0, (uint64_t)v16, v42, v39, v19, v23);
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC818);
  uint64_t v24 = (_OWORD *)swift_allocObject();
  __int128 v25 = v42[8];
  __int128 v26 = v42[10];
  __int128 v27 = v42[11];
  v24[11] = v42[9];
  v24[12] = v26;
  v24[13] = v27;
  __int128 v28 = v42[4];
  __int128 v29 = v42[6];
  __int128 v30 = v42[7];
  v24[7] = v42[5];
  v24[8] = v29;
  v24[9] = v30;
  v24[10] = v25;
  __int128 v31 = v42[0];
  __int128 v32 = v42[1];
  v24[1] = xmmword_1890684B0;
  void v24[2] = v31;
  __int128 v33 = v42[2];
  __int128 v34 = v42[3];
  unint64_t v24[3] = v32;
  v24[4] = v33;
  v24[5] = v34;
  v24[6] = v28;
  return sub_189011E78((uint64_t)v24);
}

uint64_t Argument<A>.init(help:completion:)@<X0>( uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = type metadata accessor for Parsed(0LL, a3, a3, a4);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1895F8858](v10);
  uint64_t v13 = &v21[-v12 - 8];
  sub_18902A03C(a1, (uint64_t)v21);
  uint64_t v14 = *a2;
  uint64_t v15 = a2[1];
  char v16 = *((_BYTE *)a2 + 16);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = a3;
  *(void *)(v17 + 24) = a4;
  sub_18902A03C((uint64_t)v21, v17 + 32);
  *(void *)(v17 + 88) = v14;
  *(void *)(v17 + 96) = v15;
  *(_BYTE *)(v17 + 104) = v16;
  sub_189048624((uint64_t)sub_18902A17C, v17, a3, v18, v13);
  return (*(uint64_t (**)(uint64_t, void *, uint64_t))(v11 + 32))(a5, v13, v10);
}

uint64_t sub_18902809C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9)
{
  uint64_t v35 = a1;
  uint64_t v16 = sub_189067AB4();
  MEMORY[0x1895F8858](v16);
  uint64_t v18 = (char *)&v36[-1] - v17;
  uint64_t v21 = type metadata accessor for Bare(0LL, a8, v19, v20);
  sub_18902A03C((uint64_t)a4, (uint64_t)v38);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a8 - 8) + 56LL))(v18, 1LL, 1LL, a8);
  v36[0] = a5;
  v36[1] = a6;
  char v37 = a7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1890140A4(a4);
  sub_189014118(a5, a6, a7);
  uint64_t v22 = MEMORY[0x1895DD3F4](&unk_18906AA1C, v21, &a9);
  sub_189048DF0(v35, a2, a3, 0LL, (uint64_t)v38, 0, (uint64_t)v18, v39, v36, v21, v22);
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC818);
  uint64_t v23 = (_OWORD *)swift_allocObject();
  __int128 v24 = v39[8];
  __int128 v25 = v39[10];
  __int128 v26 = v39[11];
  v23[11] = v39[9];
  v23[12] = v25;
  v23[13] = v26;
  __int128 v27 = v39[4];
  __int128 v28 = v39[6];
  __int128 v29 = v39[7];
  v23[7] = v39[5];
  v23[8] = v28;
  v23[9] = v29;
  v23[10] = v24;
  __int128 v30 = v39[0];
  __int128 v31 = v39[1];
  v23[1] = xmmword_1890684B0;
  v23[2] = v30;
  __int128 v32 = v39[2];
  __int128 v33 = v39[3];
  void v23[3] = v31;
  void v23[4] = v32;
  v23[5] = v33;
  void v23[6] = v27;
  return sub_189011E78((uint64_t)v23);
}

uint64_t Argument.init(wrappedValue:help:completion:transform:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v27 = a4;
  uint64_t v28 = a5;
  uint64_t v29 = a1;
  uint64_t v30 = a7;
  uint64_t v10 = type metadata accessor for Parsed(0LL, a6, a3, a4);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1895F8858](v10);
  uint64_t v13 = (uint64_t *)((char *)&v26 - v12);
  sub_18902A03C(a2, (uint64_t)v31);
  uint64_t v14 = *(void *)a3;
  uint64_t v26 = *(void *)(a3 + 8);
  char v15 = *(_BYTE *)(a3 + 16);
  uint64_t v16 = *(void *)(a6 - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 96LL) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (*(void *)(v16 + 64) + v17 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v19 = (char *)swift_allocObject();
  *((void *)v19 + 2) = a6;
  sub_18902A03C((uint64_t)v31, (uint64_t)(v19 + 24));
  uint64_t v21 = v28;
  uint64_t v20 = v29;
  *((void *)v19 + 10) = v27;
  *((void *)v19 + 11) = v21;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 32))(&v19[v17], v20, a6);
  uint64_t v22 = &v19[v18];
  uint64_t v23 = v26;
  *(void *)uint64_t v22 = v14;
  *((void *)v22 + 1) = v23;
  v22[16] = v15;
  sub_189048624((uint64_t)sub_18902A250, (uint64_t)v19, a6, v24, v13);
  return (*(uint64_t (**)(uint64_t, void *, uint64_t))(v11 + 32))(v30, v13, v10);
}

uint64_t sub_1890283A4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11)
{
  uint64_t v38 = a3;
  uint64_t v39 = a6;
  uint64_t v40 = a1;
  uint64_t v41 = a5;
  uint64_t v37 = a2;
  uint64_t v14 = sub_189067AB4();
  MEMORY[0x1895F8858](v14);
  uint64_t v16 = (char *)&v37 - v15;
  uint64_t v19 = type metadata accessor for Bare(0LL, a11, v17, v18);
  sub_18902A03C((uint64_t)a4, (uint64_t)v44);
  uint64_t v20 = *(void *)(a11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v16, a7, a11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v16, 0LL, 1LL, a11);
  v42[0] = a8;
  v42[1] = a9;
  char v43 = a10;
  uint64_t v21 = v37;
  swift_bridgeObjectRetain();
  uint64_t v22 = v38;
  swift_bridgeObjectRetain();
  sub_1890140A4(a4);
  sub_189014118(a8, a9, a10);
  uint64_t v23 = v39;
  swift_retain();
  uint64_t v24 = MEMORY[0x1895DD3F4](&unk_18906AA44, v19);
  sub_1890490C0(v40, v21, v22, 0LL, (uint64_t)v44, 0, v41, v45, v23, (uint64_t)v16, v42, v19, v24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC818);
  __int128 v25 = (_OWORD *)swift_allocObject();
  __int128 v26 = v45[8];
  __int128 v27 = v45[10];
  __int128 v28 = v45[11];
  v25[11] = v45[9];
  v25[12] = v27;
  v25[13] = v28;
  __int128 v29 = v45[4];
  __int128 v30 = v45[6];
  __int128 v31 = v45[7];
  uint64_t v25[7] = v45[5];
  v25[8] = v30;
  v25[9] = v31;
  v25[10] = v26;
  __int128 v32 = v45[0];
  __int128 v33 = v45[1];
  v25[1] = xmmword_1890684B0;
  uint64_t v25[2] = v32;
  __int128 v34 = v45[2];
  __int128 v35 = v45[3];
  _OWORD v25[3] = v33;
  v25[4] = v34;
  v25[5] = v35;
  v25[6] = v29;
  return sub_189011E78((uint64_t)v25);
}

uint64_t Argument.init(help:completion:transform:)@<X0>( uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v21 = a6;
  uint64_t v11 = type metadata accessor for Parsed(0LL, a5, a3, a4);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1895F8858](v11);
  uint64_t v14 = &v22[-v13 - 8];
  sub_18902A03C(a1, (uint64_t)v22);
  uint64_t v15 = *a2;
  uint64_t v16 = a2[1];
  char v17 = *((_BYTE *)a2 + 16);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = a5;
  sub_18902A03C((uint64_t)v22, v18 + 24);
  *(void *)(v18 + 80) = a3;
  *(void *)(v18 + 88) = a4;
  *(void *)(v18 + 96) = v15;
  *(void *)(v18 + 104) = v16;
  *(_BYTE *)(v18 + 112) = v17;
  sub_189048624((uint64_t)sub_18902A2B8, v18, a5, v19, v14);
  return (*(uint64_t (**)(uint64_t, void *, uint64_t))(v12 + 32))(v21, v14, v11);
}

uint64_t sub_18902869C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10)
{
  uint64_t v35 = a6;
  uint64_t v36 = a1;
  uint64_t v37 = a5;
  uint64_t v15 = sub_189067AB4();
  MEMORY[0x1895F8858](v15);
  char v17 = (char *)&v35 - v16;
  uint64_t v20 = type metadata accessor for Bare(0LL, a10, v18, v19);
  sub_18902A03C((uint64_t)a4, (uint64_t)v40);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a10 - 8) + 56LL))(v17, 1LL, 1LL, a10);
  v38[0] = a7;
  v38[1] = a8;
  char v39 = a9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1890140A4(a4);
  sub_189014118(a7, a8, a9);
  uint64_t v21 = v35;
  swift_retain();
  uint64_t v22 = MEMORY[0x1895DD3F4](&unk_18906AA44, v20);
  sub_1890490C0(v36, a2, a3, 0LL, (uint64_t)v40, 0, v37, v41, v21, (uint64_t)v17, v38, v20, v22);
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC818);
  uint64_t v23 = (_OWORD *)swift_allocObject();
  __int128 v24 = v41[8];
  __int128 v25 = v41[10];
  __int128 v26 = v41[11];
  v23[11] = v41[9];
  v23[12] = v25;
  v23[13] = v26;
  __int128 v27 = v41[4];
  __int128 v28 = v41[6];
  __int128 v29 = v41[7];
  v23[7] = v41[5];
  v23[8] = v28;
  v23[9] = v29;
  v23[10] = v24;
  __int128 v30 = v41[0];
  __int128 v31 = v41[1];
  v23[1] = xmmword_1890684B0;
  v23[2] = v30;
  __int128 v32 = v41[2];
  __int128 v33 = v41[3];
  void v23[3] = v31;
  void v23[4] = v32;
  v23[5] = v33;
  void v23[6] = v27;
  return sub_189011E78((uint64_t)v23);
}

uint64_t Argument.init<A>(wrappedValue:help:completion:)@<X0>( uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v22 = a5;
  uint64_t v9 = sub_189067AB4();
  uint64_t v12 = type metadata accessor for Parsed(0LL, v9, v10, v11);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1895F8858](v12);
  uint64_t v15 = &v23[-v14 - 8];
  sub_18902A03C(a1, (uint64_t)v23);
  uint64_t v16 = *a2;
  uint64_t v17 = a2[1];
  char v18 = *((_BYTE *)a2 + 16);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = a3;
  *(void *)(v19 + 24) = a4;
  sub_18902A03C((uint64_t)v23, v19 + 32);
  *(void *)(v19 + 88) = v16;
  *(void *)(v19 + 96) = v17;
  *(_BYTE *)(v19 + 104) = v18;
  sub_189048624((uint64_t)sub_18902A2F4, v19, v9, v20, v15);
  return (*(uint64_t (**)(uint64_t, void *, uint64_t))(v13 + 32))(v22, v15, v12);
}

uint64_t Argument.init<A>(wrappedValue:help:completion:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v27 = a5;
  uint64_t v28 = a1;
  uint64_t v30 = a6;
  uint64_t v9 = sub_189067AB4();
  uint64_t v29 = type metadata accessor for Parsed(0LL, v9, v10, v11);
  uint64_t v12 = *(void *)(v29 - 8);
  MEMORY[0x1895F8858](v29);
  uint64_t v14 = (uint64_t *)((char *)&v26 - v13);
  sub_18902A03C(a2, (uint64_t)v31);
  uint64_t v15 = *a3;
  uint64_t v26 = a3[1];
  char v16 = *((_BYTE *)a3 + 16);
  uint64_t v17 = *(void *)(v9 - 8);
  unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 81LL) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  unint64_t v19 = (*(void *)(v17 + 64) + v18 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v20 = swift_allocObject();
  uint64_t v21 = v27;
  *(void *)(v20 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = a4;
  *(void *)(v20 + 24) = v21;
  sub_18902A03C((uint64_t)v31, v20 + 32);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v17 + 32))(v20 + v18, v28, v9);
  unint64_t v22 = v20 + v19;
  uint64_t v23 = v26;
  *(void *)unint64_t v22 = v15;
  *(void *)(v22 + 8) = v23;
  *(_BYTE *)(v22 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v16;
  sub_189048624((uint64_t)sub_18902A3F0, v20, v9, v24, v14);
  return (*(uint64_t (**)(uint64_t, void *, uint64_t))(v12 + 32))(v30, v14, v29);
}

uint64_t sub_189028AC8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, ...)
{
  uint64_t v34 = a3;
  uint64_t v35 = a1;
  uint64_t v15 = sub_189067AB4();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1895F8858](v15);
  unint64_t v18 = (char *)&v33 - v17;
  sub_18902A03C((uint64_t)a4, (uint64_t)v38);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a5, v15);
  v36[0] = a6;
  v36[1] = a7;
  char v37 = a8;
  swift_bridgeObjectRetain();
  uint64_t v19 = v34;
  swift_bridgeObjectRetain();
  sub_1890140A4(a4);
  sub_189014118(a6, a7, a8);
  uint64_t v20 = MEMORY[0x1895DD3F4](&unk_18906A880, v15, (uint64_t *)va);
  sub_189048DF0(v35, a2, v19, 0LL, (uint64_t)v38, 0, (uint64_t)v18, v39, v36, v15, v20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC818);
  uint64_t v21 = (_OWORD *)swift_allocObject();
  __int128 v22 = v39[8];
  __int128 v23 = v39[10];
  __int128 v24 = v39[11];
  v21[11] = v39[9];
  __int128 v21[12] = v23;
  v21[13] = v24;
  __int128 v25 = v39[4];
  __int128 v26 = v39[6];
  __int128 v27 = v39[7];
  v21[7] = v39[5];
  v21[8] = v26;
  v21[9] = v27;
  v21[10] = v22;
  __int128 v28 = v39[0];
  __int128 v29 = v39[1];
  v21[1] = xmmword_1890684B0;
  v21[2] = v28;
  __int128 v30 = v39[2];
  __int128 v31 = v39[3];
  v21[3] = v29;
  v21[4] = v30;
  v21[5] = v31;
  v21[6] = v25;
  return sub_189011E78((uint64_t)v21);
}

uint64_t Argument.init<A>(help:completion:)@<X0>( uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v22 = a5;
  uint64_t v9 = sub_189067AB4();
  uint64_t v12 = type metadata accessor for Parsed(0LL, v9, v10, v11);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1895F8858](v12);
  uint64_t v15 = &v23[-v14 - 8];
  sub_18902A03C(a1, (uint64_t)v23);
  uint64_t v16 = *a2;
  uint64_t v17 = a2[1];
  char v18 = *((_BYTE *)a2 + 16);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = a3;
  *(void *)(v19 + 24) = a4;
  sub_18902A03C((uint64_t)v23, v19 + 32);
  *(void *)(v19 + 88) = v16;
  *(void *)(v19 + 96) = v17;
  *(_BYTE *)(v19 + 104) = v18;
  sub_189048624((uint64_t)sub_18902A2F4, v19, v9, v20, v15);
  return (*(uint64_t (**)(uint64_t, void *, uint64_t))(v13 + 32))(v22, v15, v12);
}

uint64_t sub_189028D88( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9)
{
  uint64_t v32 = a1;
  uint64_t v16 = sub_189067AB4();
  MEMORY[0x1895F8858](v16);
  char v18 = (char *)&v33[-1] - v17;
  sub_18902A03C((uint64_t)a4, (uint64_t)v35);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a8 - 8) + 56LL))(v18, 1LL, 1LL, a8);
  v33[0] = a5;
  v33[1] = a6;
  char v34 = a7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1890140A4(a4);
  sub_189014118(a5, a6, a7);
  uint64_t v19 = MEMORY[0x1895DD3F4](&unk_18906A880, v16, &a9);
  sub_189048DF0(v32, a2, a3, 0LL, (uint64_t)v35, 0, (uint64_t)v18, v36, v33, v16, v19);
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC818);
  uint64_t v20 = (_OWORD *)swift_allocObject();
  __int128 v21 = v36[8];
  __int128 v22 = v36[10];
  __int128 v23 = v36[11];
  v20[11] = v36[9];
  v20[12] = v22;
  v20[13] = v23;
  __int128 v24 = v36[4];
  __int128 v25 = v36[6];
  __int128 v26 = v36[7];
  v20[7] = v36[5];
  v20[8] = v25;
  v20[9] = v26;
  v20[10] = v21;
  __int128 v27 = v36[0];
  __int128 v28 = v36[1];
  v20[1] = xmmword_1890684B0;
  _OWORD v20[2] = v27;
  __int128 v29 = v36[2];
  __int128 v30 = v36[3];
  v20[3] = v28;
  v20[4] = v29;
  v20[5] = v30;
  void v20[6] = v24;
  return sub_189011E78((uint64_t)v20);
}

uint64_t Argument.init<A>(wrappedValue:help:completion:transform:)@<X0>( uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v25 = a4;
  uint64_t v26 = a6;
  uint64_t v10 = sub_189067AB4();
  uint64_t v13 = type metadata accessor for Parsed(0LL, v10, v11, v12);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1895F8858](v13);
  uint64_t v16 = (uint64_t *)((char *)&v24 - v15);
  sub_18902A03C(a1, (uint64_t)v27);
  uint64_t v18 = *a2;
  uint64_t v17 = a2[1];
  char v19 = *((_BYTE *)a2 + 16);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = a5;
  sub_18902A03C((uint64_t)v27, v20 + 24);
  uint64_t v21 = v25;
  *(void *)(v20 + 80) = a3;
  *(void *)(v20 + 88) = v21;
  *(void *)(v20 + 96) = v18;
  *(void *)(v20 + 104) = v17;
  *(_BYTE *)(v20 + 112) = v19;
  sub_189048624((uint64_t)sub_18902A48C, v20, v10, v22, v16);
  return (*(uint64_t (**)(uint64_t, void *, uint64_t))(v14 + 32))(v26, v16, v13);
}

uint64_t Argument.init<A>(wrappedValue:help:completion:transform:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v31 = a4;
  uint64_t v32 = a5;
  uint64_t v33 = a1;
  uint64_t v34 = a7;
  uint64_t v10 = sub_189067AB4();
  uint64_t v13 = type metadata accessor for Parsed(0LL, v10, v11, v12);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1895F8858](v13);
  uint64_t v16 = (uint64_t *)((char *)&v28 - v15);
  sub_18902A03C(a2, (uint64_t)v35);
  uint64_t v17 = *a3;
  uint64_t v30 = a3[1];
  int v29 = *((unsigned __int8 *)a3 + 16);
  uint64_t v18 = *(void *)(v10 - 8);
  unint64_t v19 = (*(unsigned __int8 *)(v18 + 80) + 96LL) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  unint64_t v20 = (*(void *)(v18 + 64) + v19 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v21 = (char *)swift_allocObject();
  *((void *)v21 + 2) = a6;
  sub_18902A03C((uint64_t)v35, (uint64_t)(v21 + 24));
  uint64_t v23 = v32;
  uint64_t v22 = v33;
  *((void *)v21 + 10) = v31;
  *((void *)v21 + 11) = v23;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 32))(&v21[v19], v22, v10);
  uint64_t v24 = &v21[v20];
  uint64_t v25 = v30;
  *(void *)uint64_t v24 = v17;
  *((void *)v24 + 1) = v25;
  char v24[16] = v29;
  sub_189048624((uint64_t)sub_18902A598, (uint64_t)v21, v10, v26, v16);
  return (*(uint64_t (**)(uint64_t, void *, uint64_t))(v14 + 32))(v34, v16, v13);
}

uint64_t sub_1890291B0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  uint64_t v34 = a3;
  uint64_t v35 = a6;
  uint64_t v36 = a1;
  uint64_t v37 = a5;
  uint64_t v14 = sub_189067AB4();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1895F8858](v14);
  uint64_t v17 = (char *)&v33 - v16;
  sub_18902A03C((uint64_t)a4, (uint64_t)v40);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a7, v14);
  v38[0] = a8;
  v38[1] = a9;
  char v39 = a10;
  swift_bridgeObjectRetain();
  uint64_t v18 = v34;
  swift_bridgeObjectRetain();
  sub_1890140A4(a4);
  sub_189014118(a8, a9, a10);
  uint64_t v19 = v35;
  swift_retain();
  uint64_t v20 = MEMORY[0x1895DD3F4](&unk_18906A864, v14);
  sub_1890490C0(v36, a2, v18, 0LL, (uint64_t)v40, 0, v37, v41, v19, (uint64_t)v17, v38, v14, v20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC818);
  uint64_t v21 = (_OWORD *)swift_allocObject();
  __int128 v22 = v41[8];
  __int128 v23 = v41[10];
  __int128 v24 = v41[11];
  v21[11] = v41[9];
  __int128 v21[12] = v23;
  v21[13] = v24;
  __int128 v25 = v41[4];
  __int128 v26 = v41[6];
  __int128 v27 = v41[7];
  v21[7] = v41[5];
  v21[8] = v26;
  v21[9] = v27;
  v21[10] = v22;
  __int128 v28 = v41[0];
  __int128 v29 = v41[1];
  v21[1] = xmmword_1890684B0;
  v21[2] = v28;
  __int128 v30 = v41[2];
  __int128 v31 = v41[3];
  v21[3] = v29;
  v21[4] = v30;
  v21[5] = v31;
  v21[6] = v25;
  return sub_189011E78((uint64_t)v21);
}

uint64_t Argument.init<A>(help:completion:transform:)@<X0>( uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v25 = a4;
  uint64_t v26 = a6;
  uint64_t v10 = sub_189067AB4();
  uint64_t v13 = type metadata accessor for Parsed(0LL, v10, v11, v12);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1895F8858](v13);
  uint64_t v16 = (uint64_t *)((char *)&v24 - v15);
  sub_18902A03C(a1, (uint64_t)v27);
  uint64_t v18 = *a2;
  uint64_t v17 = a2[1];
  char v19 = *((_BYTE *)a2 + 16);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = a5;
  sub_18902A03C((uint64_t)v27, v20 + 24);
  uint64_t v21 = v25;
  *(void *)(v20 + 80) = a3;
  *(void *)(v20 + 88) = v21;
  *(void *)(v20 + 96) = v18;
  *(void *)(v20 + 104) = v17;
  *(_BYTE *)(v20 + 112) = v19;
  sub_189048624((uint64_t)sub_18902A48C, v20, v10, v22, v16);
  return (*(uint64_t (**)(uint64_t, void *, uint64_t))(v14 + 32))(v26, v16, v13);
}

uint64_t sub_189029488( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10)
{
  uint64_t v32 = a6;
  uint64_t v33 = a1;
  uint64_t v34 = a5;
  uint64_t v15 = sub_189067AB4();
  MEMORY[0x1895F8858](v15);
  uint64_t v17 = (char *)&v32 - v16;
  sub_18902A03C((uint64_t)a4, (uint64_t)v37);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a10 - 8) + 56LL))(v17, 1LL, 1LL, a10);
  v35[0] = a7;
  v35[1] = a8;
  char v36 = a9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1890140A4(a4);
  sub_189014118(a7, a8, a9);
  uint64_t v18 = v32;
  swift_retain();
  uint64_t v19 = MEMORY[0x1895DD3F4](&unk_18906A864, v15);
  sub_1890490C0(v33, a2, a3, 0LL, (uint64_t)v37, 0, v34, v38, v18, (uint64_t)v17, v35, v15, v19);
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC818);
  uint64_t v20 = (_OWORD *)swift_allocObject();
  __int128 v21 = v38[8];
  __int128 v22 = v38[10];
  __int128 v23 = v38[11];
  v20[11] = v38[9];
  v20[12] = v22;
  v20[13] = v23;
  __int128 v24 = v38[4];
  __int128 v25 = v38[6];
  __int128 v26 = v38[7];
  v20[7] = v38[5];
  v20[8] = v25;
  v20[9] = v26;
  v20[10] = v21;
  __int128 v27 = v38[0];
  __int128 v28 = v38[1];
  v20[1] = xmmword_1890684B0;
  _OWORD v20[2] = v27;
  __int128 v29 = v38[2];
  __int128 v30 = v38[3];
  v20[3] = v28;
  v20[4] = v29;
  v20[5] = v30;
  void v20[6] = v24;
  return sub_189011E78((uint64_t)v20);
}

double Argument.init<A>(wrappedValue:parsing:help:completion:)@<D0>( uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  char v12 = *a2;
  sub_18902A03C(a3, (uint64_t)v30);
  uint64_t v13 = *a4;
  uint64_t v14 = a4[1];
  char v15 = *((_BYTE *)a4 + 16);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = a5;
  *(void *)(v16 + 24) = a6;
  sub_18902A03C((uint64_t)v30, v16 + 32);
  *(_BYTE *)(v16 + 81) = v12;
  *(void *)(v16 + 88) = a1;
  *(void *)(v16 + 96) = v13;
  *(void *)(v16 + 104) = v14;
  *(_BYTE *)(v16 + 112) = v15;
  uint64_t v17 = sub_189067A30();
  sub_189048624((uint64_t)sub_18902A690, v16, v17, v18, &v26);
  __int128 v24 = v26;
  char v25 = v27;
  uint64_t v21 = type metadata accessor for Parsed(0LL, v17, v19, v20);
  (*(void (**)(__int128 *, __int128 *, uint64_t))(*(void *)(v21 - 8) + 32LL))(&v28, &v24, v21);
  char v22 = v29;
  double result = *(double *)&v28;
  *(_OWORD *)a7 = v28;
  *(_BYTE *)(a7 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v22;
  return result;
}

uint64_t sub_189029760( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10, ...)
{
  uint64_t v17 = sub_189067A30();
  sub_18902A03C((uint64_t)a4, (uint64_t)v32);
  uint64_t v31 = a6;
  v29[0] = a7;
  v29[1] = a8;
  char v30 = a9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1890140A4(a4);
  swift_bridgeObjectRetain();
  sub_189014118(a7, a8, a9);
  uint64_t v18 = MEMORY[0x1895DD3F4](&unk_18906A8C4, v17, (uint64_t *)va);
  sub_189048DF0(a1, a2, a3, 0LL, (uint64_t)v32, a5, (uint64_t)&v31, v33, v29, v17, v18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC818);
  uint64_t v19 = (_OWORD *)swift_allocObject();
  __int128 v20 = v33[10];
  v19[11] = v33[9];
  v19[12] = v20;
  _OWORD v19[13] = v33[11];
  __int128 v21 = v33[6];
  v19[7] = v33[5];
  v19[8] = v21;
  __int128 v22 = v33[8];
  v19[9] = v33[7];
  v19[10] = v22;
  __int128 v23 = v33[0];
  __int128 v24 = v33[1];
  v19[1] = xmmword_1890684B0;
  void v19[2] = v23;
  __int128 v25 = v33[2];
  v19[3] = v24;
  void v19[4] = v25;
  __int128 v26 = v33[4];
  v19[5] = v33[3];
  v19[6] = v26;
  return sub_189011E78((uint64_t)v19);
}

double Argument.init<A>(parsing:help:completion:)@<D0>( char *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  char v10 = *a1;
  sub_18902A03C(a2, (uint64_t)v28);
  uint64_t v11 = *a3;
  uint64_t v12 = a3[1];
  char v13 = *((_BYTE *)a3 + 16);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = a4;
  *(void *)(v14 + 24) = a5;
  sub_18902A03C((uint64_t)v28, v14 + 32);
  *(_BYTE *)(v14 + 81) = v10;
  *(void *)(v14 + 88) = v11;
  *(void *)(v14 + 96) = v12;
  *(_BYTE *)(v14 + 104) = v13;
  uint64_t v15 = sub_189067A30();
  sub_189048624((uint64_t)sub_18902A71C, v14, v15, v16, &v24);
  __int128 v22 = v24;
  char v23 = v25;
  uint64_t v19 = type metadata accessor for Parsed(0LL, v15, v17, v18);
  (*(void (**)(__int128 *, __int128 *, uint64_t))(*(void *)(v19 - 8) + 32LL))(&v26, &v22, v19);
  char v20 = v27;
  double result = *(double *)&v26;
  *(_OWORD *)a6 = v26;
  *(_BYTE *)(a6 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v20;
  return result;
}

uint64_t sub_1890299CC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, int a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, ...)
{
  uint64_t v17 = sub_189067A30();
  sub_18902A03C((uint64_t)a4, (uint64_t)v31);
  uint64_t v30 = 0LL;
  v28[0] = a6;
  v28[1] = a7;
  char v29 = a8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1890140A4(a4);
  sub_189014118(a6, a7, a8);
  uint64_t v18 = MEMORY[0x1895DD3F4](&unk_18906A8C4, v17, (uint64_t *)va);
  sub_189048DF0(a1, a2, a3, 0LL, (uint64_t)v31, a5, (uint64_t)&v30, v32, v28, v17, v18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC818);
  uint64_t v19 = (_OWORD *)swift_allocObject();
  __int128 v20 = v32[10];
  v19[11] = v32[9];
  v19[12] = v20;
  _OWORD v19[13] = v32[11];
  __int128 v21 = v32[6];
  v19[7] = v32[5];
  v19[8] = v21;
  __int128 v22 = v32[8];
  v19[9] = v32[7];
  v19[10] = v22;
  __int128 v23 = v32[0];
  __int128 v24 = v32[1];
  v19[1] = xmmword_1890684B0;
  void v19[2] = v23;
  __int128 v25 = v32[2];
  v19[3] = v24;
  void v19[4] = v25;
  __int128 v26 = v32[4];
  v19[5] = v32[3];
  v19[6] = v26;
  return sub_189011E78((uint64_t)v19);
}

double Argument.init<A>(wrappedValue:parsing:help:completion:transform:)@<D0>( uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  char v14 = *a2;
  sub_18902A03C(a3, (uint64_t)v32);
  uint64_t v15 = *a4;
  uint64_t v16 = a4[1];
  char v17 = *((_BYTE *)a4 + 16);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = a7;
  sub_18902A03C((uint64_t)v32, v18 + 24);
  *(_BYTE *)(v18 + 73) = v14;
  *(void *)(v18 + 80) = a5;
  *(void *)(v18 + 88) = a6;
  *(void *)(v18 + 96) = a1;
  *(void *)(v18 + 104) = v15;
  *(void *)(v18 + 112) = v16;
  *(_BYTE *)(v18 + 120) = v17;
  uint64_t v19 = sub_189067A30();
  sub_189048624((uint64_t)sub_18902A7AC, v18, v19, v20, &v28);
  __int128 v26 = v28;
  char v27 = v29;
  uint64_t v23 = type metadata accessor for Parsed(0LL, v19, v21, v22);
  (*(void (**)(__int128 *, __int128 *, uint64_t))(*(void *)(v23 - 8) + 32LL))(&v30, &v26, v23);
  char v24 = v31;
  double result = *(double *)&v30;
  *(_OWORD *)a8 = v30;
  *(_BYTE *)(a8 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v24;
  return result;
}

uint64_t sub_189029C40( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v16 = sub_189067A30();
  sub_18902A03C((uint64_t)a4, (uint64_t)v33);
  uint64_t v32 = a8;
  v30[0] = a9;
  v30[1] = a10;
  char v31 = a11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1890140A4(a4);
  swift_bridgeObjectRetain();
  sub_189014118(a9, a10, a11);
  swift_retain();
  uint64_t v17 = MEMORY[0x1895DD3F4](&unk_18906A8A8, v16);
  sub_1890490C0(a1, a2, a3, 0LL, (uint64_t)v33, a5, a6, v34, a7, (uint64_t)&v32, v30, v16, v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC818);
  uint64_t v18 = (_OWORD *)swift_allocObject();
  __int128 v19 = v34[10];
  v18[11] = v34[9];
  v18[12] = v19;
  v18[13] = v34[11];
  __int128 v20 = v34[6];
  v18[7] = v34[5];
  _OWORD v18[8] = v20;
  __int128 v21 = v34[8];
  v18[9] = v34[7];
  v18[10] = v21;
  __int128 v22 = v34[0];
  __int128 v23 = v34[1];
  v18[1] = xmmword_1890684B0;
  v18[2] = v22;
  __int128 v24 = v34[2];
  v18[3] = v23;
  void v18[4] = v24;
  __int128 v25 = v34[4];
  v18[5] = v34[3];
  v18[6] = v25;
  return sub_189011E78((uint64_t)v18);
}

double Argument.init<A>(parsing:help:completion:transform:)@<D0>( char *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  char v12 = *a1;
  sub_18902A03C(a2, (uint64_t)v30);
  uint64_t v13 = *a3;
  uint64_t v14 = a3[1];
  char v15 = *((_BYTE *)a3 + 16);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = a6;
  sub_18902A03C((uint64_t)v30, v16 + 24);
  *(_BYTE *)(v16 + 73) = v12;
  *(void *)(v16 + 80) = a4;
  *(void *)(v16 + 88) = a5;
  *(void *)(v16 + 96) = v13;
  *(void *)(v16 + 104) = v14;
  *(_BYTE *)(v16 + 112) = v15;
  uint64_t v17 = sub_189067A30();
  sub_189048624((uint64_t)sub_18902A848, v16, v17, v18, &v26);
  __int128 v24 = v26;
  char v25 = v27;
  uint64_t v21 = type metadata accessor for Parsed(0LL, v17, v19, v20);
  (*(void (**)(__int128 *, __int128 *, uint64_t))(*(void *)(v21 - 8) + 32LL))(&v28, &v24, v21);
  char v22 = v29;
  double result = *(double *)&v28;
  *(_OWORD *)a7 = v28;
  *(_BYTE *)(a7 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v22;
  return result;
}

uint64_t sub_189029ECC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  uint64_t v16 = sub_189067A30();
  sub_18902A03C((uint64_t)a4, (uint64_t)v32);
  uint64_t v31 = 0LL;
  v29[0] = a8;
  v29[1] = a9;
  char v30 = a10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1890140A4(a4);
  sub_189014118(a8, a9, a10);
  swift_retain();
  uint64_t v17 = MEMORY[0x1895DD3F4](&unk_18906A8A8, v16);
  sub_1890490C0(a1, a2, a3, 0LL, (uint64_t)v32, a5, a6, v33, a7, (uint64_t)&v31, v29, v16, v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC818);
  uint64_t v18 = (_OWORD *)swift_allocObject();
  __int128 v19 = v33[10];
  v18[11] = v33[9];
  v18[12] = v19;
  v18[13] = v33[11];
  __int128 v20 = v33[6];
  v18[7] = v33[5];
  _OWORD v18[8] = v20;
  __int128 v21 = v33[8];
  v18[9] = v33[7];
  v18[10] = v21;
  __int128 v22 = v33[0];
  __int128 v23 = v33[1];
  v18[1] = xmmword_1890684B0;
  v18[2] = v22;
  __int128 v24 = v33[2];
  v18[3] = v23;
  void v18[4] = v24;
  __int128 v25 = v33[4];
  v18[5] = v33[3];
  v18[6] = v25;
  return sub_189011E78((uint64_t)v18);
}

uint64_t sub_18902A03C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC3A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_18902A084()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 81LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  if (*(void *)(v0 + 40))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  int v5 = *(unsigned __int8 *)(v0 + v4 + 16);
  if (v5 != 255) {
    sub_189009AF4(*(void *)(v0 + v4), *(void *)(v0 + v4 + 8), v5);
  }
  return swift_deallocObject();
}

uint64_t sub_18902A120(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(v3[2] - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 81LL) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = (char *)v3 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8LL);
  return sub_189027DBC(a1, a2, a3, v3 + 4, (uint64_t)v3 + v5, *(void *)v6, *((void *)v6 + 1), v6[16], v3[2], v3[3]);
}

uint64_t sub_18902A17C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18902809C( a1,  a2,  a3,  (uint64_t *)(v3 + 32),  *(void *)(v3 + 88),  *(void *)(v3 + 96),  *(_BYTE *)(v3 + 104),  *(void *)(v3 + 16),  *(void *)(v3 + 24));
}

uint64_t sub_18902A1AC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 96LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  if (*(void *)(v0 + 32))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  int v5 = *(unsigned __int8 *)(v0 + v4 + 16);
  if (v5 != 255) {
    sub_189009AF4(*(void *)(v0 + v4), *(void *)(v0 + v4 + 8), v5);
  }
  return swift_deallocObject();
}

uint64_t sub_18902A250(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(v3[2] - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 96LL) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = (char *)v3 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8LL);
  return sub_1890283A4( a1,  a2,  a3,  v3 + 3,  v3[10],  v3[11],  (uint64_t)v3 + v5,  *(void *)v6,  *((void *)v6 + 1),  v6[16],  v3[2]);
}

uint64_t sub_18902A2B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18902869C( a1,  a2,  a3,  (uint64_t *)(v3 + 24),  *(void *)(v3 + 80),  *(void *)(v3 + 88),  *(void *)(v3 + 96),  *(void *)(v3 + 104),  *(_BYTE *)(v3 + 112),  *(void *)(v3 + 16));
}

uint64_t sub_18902A2F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_189028D88( a1,  a2,  a3,  (uint64_t *)(v3 + 32),  *(void *)(v3 + 88),  *(void *)(v3 + 96),  *(_BYTE *)(v3 + 104),  *(void *)(v3 + 16),  *(void *)(v3 + 24));
}

uint64_t sub_18902A328()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(sub_189067AB4() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 81LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64) + v3 + 7;
  if (*(void *)(v0 + 40))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = *(void *)(v1 - 8);
  int v8 = *(unsigned __int8 *)(v0 + v5 + 16);
  if (v8 != 255) {
    sub_189009AF4(*(void *)(v0 + v5), *(void *)(v0 + v5 + 8), v8);
  }
  return swift_deallocObject();
}

uint64_t sub_18902A3F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = v3[2];
  uint64_t v8 = v3[3];
  uint64_t v9 = *(void *)(sub_189067AB4() - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 81LL) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = (char *)v3 + ((*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8LL);
  return sub_189028AC8(a1, a2, a3, v3 + 4, (uint64_t)v3 + v10, *(void *)v11, *((void *)v11 + 1), v11[16], v7, v8);
}

uint64_t sub_18902A490(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_189029488( a1,  a2,  a3,  (uint64_t *)(v3 + 24),  *(void *)(v3 + 80),  *(void *)(v3 + 88),  *(void *)(v3 + 96),  *(void *)(v3 + 104),  *(_BYTE *)(v3 + 112),  *(void *)(v3 + 16));
}

uint64_t sub_18902A4C8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(sub_189067AB4() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 96LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64) + v3 + 7;
  if (*(void *)(v0 + 32))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFF8LL;
  swift_release();
  uint64_t v6 = v0 + v3;
  uint64_t v7 = *(void *)(v1 - 8);
  int v8 = *(unsigned __int8 *)(v0 + v5 + 16);
  if (v8 != 255) {
    sub_189009AF4(*(void *)(v0 + v5), *(void *)(v0 + v5 + 8), v8);
  }
  return swift_deallocObject();
}

uint64_t sub_18902A598(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(sub_189067AB4() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 96LL) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (char *)v3 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8LL);
  return sub_1890291B0(a1, a2, a3, v3 + 3, v3[10], v3[11], (uint64_t)v3 + v8, *(void *)v9, *((void *)v9 + 1), v9[16]);
}

uint64_t sub_18902A63C()
{
  if (*(void *)(v0 + 40))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  int v1 = *(unsigned __int8 *)(v0 + 112);
  if (v1 != 255) {
    sub_189009AF4(*(void *)(v0 + 96), *(void *)(v0 + 104), v1);
  }
  return swift_deallocObject();
}

uint64_t sub_18902A690(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_189029760( a1,  a2,  a3,  (uint64_t *)(v3 + 32),  *(unsigned __int8 *)(v3 + 81),  *(void *)(v3 + 88),  *(void *)(v3 + 96),  *(void *)(v3 + 104),  *(_BYTE *)(v3 + 112),  *(void *)(v3 + 16),  *(void *)(v3 + 24));
}

uint64_t objectdestroy_2Tm_0()
{
  if (*(void *)(v0 + 40))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  int v1 = *(unsigned __int8 *)(v0 + 104);
  if (v1 != 255) {
    sub_189009AF4(*(void *)(v0 + 88), *(void *)(v0 + 96), v1);
  }
  return swift_deallocObject();
}

uint64_t sub_18902A71C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1890299CC( a1,  a2,  a3,  (uint64_t *)(v3 + 32),  *(unsigned __int8 *)(v3 + 81),  *(void *)(v3 + 88),  *(void *)(v3 + 96),  *(_BYTE *)(v3 + 104),  *(void *)(v3 + 16),  *(void *)(v3 + 24));
}

uint64_t sub_18902A750()
{
  if (*(void *)(v0 + 32))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  swift_release();
  swift_bridgeObjectRelease();
  int v1 = *(unsigned __int8 *)(v0 + 120);
  if (v1 != 255) {
    sub_189009AF4(*(void *)(v0 + 104), *(void *)(v0 + 112), v1);
  }
  return swift_deallocObject();
}

uint64_t sub_18902A7AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_189029C40( a1,  a2,  a3,  (uint64_t *)(v3 + 24),  *(unsigned __int8 *)(v3 + 73),  *(void *)(v3 + 80),  *(void *)(v3 + 88),  *(void *)(v3 + 96),  *(void *)(v3 + 104),  *(void *)(v3 + 112),  *(_BYTE *)(v3 + 120));
}

uint64_t objectdestroy_8Tm()
{
  if (*(void *)(v0 + 32))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  swift_release();
  int v1 = *(unsigned __int8 *)(v0 + 112);
  if (v1 != 255) {
    sub_189009AF4(*(void *)(v0 + 96), *(void *)(v0 + 104), v1);
  }
  return swift_deallocObject();
}

uint64_t sub_18902A848(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_189029ECC( a1,  a2,  a3,  (uint64_t *)(v3 + 24),  *(unsigned __int8 *)(v3 + 73),  *(void *)(v3 + 80),  *(void *)(v3 + 88),  *(void *)(v3 + 96),  *(void *)(v3 + 104),  *(_BYTE *)(v3 + 112));
}

uint64_t sub_18902A888(uint64_t a1)
{
  uint64_t result = MEMORY[0x1895DD3F4](&protocol conformance descriptor for Argument<A>);
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = result;
  return result;
}

uint64_t sub_18902A8B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return *(void *)(a3 - 8);
}

uint64_t sub_18902A8BC(uint64_t a1)
{
  uint64_t result = MEMORY[0x1895DD3F4](&unk_189069130);
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_18902A8EC()
{
  unint64_t result = qword_18C761230;
  if (!qword_18C761230)
  {
    unint64_t result = MEMORY[0x1895DD3F4]( &protocol conformance descriptor for ArgumentArrayParsingStrategy,  &type metadata for ArgumentArrayParsingStrategy);
    atomic_store(result, (unint64_t *)&qword_18C761230);
  }

  return result;
}

uint64_t sub_18902A930@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v5 = type metadata accessor for Argument(0LL, *(void *)(a2 + a1 - 8), a2, a3);
  return Argument.wrappedValue.getter(v5, v6, v7, a4);
}

uint64_t sub_18902A96C()
{
  return 8LL;
}

void *sub_18902A978(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_18902A984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Parsed(319LL, *(void *)(a1 + 16), a3, a4);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0LL;
  }

  return result;
}

uint64_t *sub_18902A9F0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8LL);
  if (*(void *)(v4 + 64) <= 0x10uLL) {
    uint64_t v5 = 16LL;
  }
  else {
    uint64_t v5 = *(void *)(v4 + 64);
  }
  int v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    uint64_t v8 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
  }

  else
  {
    unsigned int v9 = *((unsigned __int8 *)a2 + v5);
    if (v9 >= 2)
    {
      else {
        uint64_t v10 = 4LL;
      }
      __asm { BR              X13 }
    }

    if (v9 != 1)
    {
      (*(void (**)(uint64_t *))(v4 + 16))(a1);
      *((_BYTE *)v3 + v5) = 0;
      return v3;
    }

    uint64_t v11 = a2[1];
    *uint64_t v3 = *a2;
    v3[1] = v11;
    *((_BYTE *)v3 + v5) = 1;
  }

  swift_retain();
  return v3;
}

uint64_t sub_18902AB04(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8LL);
  unint64_t v3 = *(void *)(v2 + 64);
  if (v3 <= 0x10) {
    unint64_t v3 = 16LL;
  }
  unsigned int v4 = *(unsigned __int8 *)(a1 + v3);
  if (v4 < 2)
  {
    if (v4 == 1) {
      return swift_release();
    }
    else {
      return (*(uint64_t (**)(void))(v2 + 8))();
    }
  }

  else
  {
    else {
      uint64_t v5 = 4LL;
    }
    return ((uint64_t (*)(void))((char *)&loc_18902AB4C + 4 * byte_1890690C9[v5]))();
  }

void *sub_18902ABA4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8LL);
  if (*(void *)(v4 + 64) <= 0x10uLL) {
    uint64_t v5 = 16LL;
  }
  else {
    uint64_t v5 = *(void *)(v4 + 64);
  }
  unsigned int v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 2)
  {
    else {
      uint64_t v7 = 4LL;
    }
    __asm { BR              X13 }
  }

  if (v6 == 1)
  {
    uint64_t v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    swift_retain();
    char v9 = 1;
  }

  else
  {
    (*(void (**)(void *))(v4 + 16))(a1);
    char v9 = 0;
  }

  *((_BYTE *)a1 + v5) = v9;
  return a1;
}

void *sub_18902AC7C(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 0x10uLL) {
      uint64_t v7 = 16LL;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = *((unsigned __int8 *)a1 + v7);
    if (v8 >= 2)
    {
      else {
        uint64_t v9 = 4LL;
      }
      __asm { BR              X12 }
    }

    if (v8 == 1) {
      swift_release();
    }
    else {
      (*(void (**)(void *, void))(v6 + 8))(a1, *(void *)(a3 + 16));
    }
    unsigned int v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 2)
    {
      else {
        uint64_t v11 = 4LL;
      }
      __asm { BR              X12 }
    }

    if (v10 == 1)
    {
      uint64_t v12 = a2[1];
      *a1 = *a2;
      a1[1] = v12;
      *((_BYTE *)a1 + v7) = 1;
      swift_retain();
    }

    else
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
      *((_BYTE *)a1 + v7) = 0;
    }
  }

  return a1;
}

_OWORD *sub_18902AE0C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8LL);
  if (*(void *)(v4 + 64) <= 0x10uLL) {
    uint64_t v5 = 16LL;
  }
  else {
    uint64_t v5 = *(void *)(v4 + 64);
  }
  unsigned int v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 2)
  {
    else {
      uint64_t v7 = 4LL;
    }
    __asm { BR              X13 }
  }

  if (v6 == 1)
  {
    *a1 = *a2;
    char v8 = 1;
  }

  else
  {
    (*(void (**)(_OWORD *))(v4 + 32))(a1);
    char v8 = 0;
  }

  *((_BYTE *)a1 + v5) = v8;
  return a1;
}

_OWORD *sub_18902AEE0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 0x10uLL) {
      uint64_t v7 = 16LL;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = *((unsigned __int8 *)a1 + v7);
    if (v8 >= 2)
    {
      else {
        uint64_t v9 = 4LL;
      }
      __asm { BR              X12 }
    }

    if (v8 == 1) {
      swift_release();
    }
    else {
      (*(void (**)(_OWORD *, void))(v6 + 8))(a1, *(void *)(a3 + 16));
    }
    unsigned int v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 2)
    {
      else {
        uint64_t v11 = 4LL;
      }
      __asm { BR              X12 }
    }

    if (v10 == 1)
    {
      *a1 = *a2;
      char v12 = 1;
    }

    else
    {
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v6 + 32))(a1, a2, v5);
      char v12 = 0;
    }

    *((_BYTE *)a1 + v7) = v12;
  }

  return a1;
}

uint64_t sub_18902B06C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = 16LL;
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8LL) + 64LL) > 0x10uLL) {
    uint64_t v3 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8LL) + 64LL);
  }
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0xFF) {
    goto LABEL_21;
  }
  uint64_t v4 = v3 + 1;
  char v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    unsigned int v8 = ((a2 + ~(-1 << v5) - 254) >> v5) + 1;
    if (HIWORD(v8))
    {
      int v6 = *(_DWORD *)(a1 + v4);
      if (!v6) {
        goto LABEL_21;
      }
      goto LABEL_14;
    }

    if (v8 > 0xFF)
    {
      int v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4)) {
        goto LABEL_21;
      }
      goto LABEL_14;
    }

    if (v8 < 2)
    {
LABEL_21:
      unsigned int v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 2) {
        return (v10 ^ 0xFF) + 1;
      }
      else {
        return 0LL;
      }
    }
  }

  int v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4)) {
    goto LABEL_21;
  }
LABEL_14:
  int v9 = (v6 - 1) << v5;
  if (!(_DWORD)v4) {
    return (v9 + 255);
  }
  return ((uint64_t (*)(void))((char *)&loc_18902B130 + 4 * byte_1890690EC[(v4 - 1)]))();
}

void sub_18902B17C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8LL) + 64LL);
  if (v5 <= 0x10) {
    unint64_t v5 = 16LL;
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFF)
  {
    unsigned int v7 = 0u;
  }

  else if (v6 <= 3)
  {
    unsigned int v9 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v9))
    {
      unsigned int v7 = 4u;
    }

    else if (v9 >= 0x100)
    {
      unsigned int v7 = 2;
    }

    else
    {
      unsigned int v7 = v9 > 1;
    }
  }

  else
  {
    unsigned int v7 = 1u;
  }

  if (a2 <= 0xFE) {
    __asm { BR              X11 }
  }

  unsigned int v8 = a2 - 255;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      int v10 = v8 & ~(-1 << (8 * v6));
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v10;
        *((_BYTE *)a1 + 2) = BYTE2(v10);
      }

      else if ((_DWORD)v6 == 2)
      {
        *a1 = v10;
      }

      else
      {
        *(_BYTE *)a1 = v10;
      }
    }
  }

  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v8;
  }

  __asm { BR              X10 }

uint64_t getEnumTagSinglePayload for ArgumentDefinition.ParsingStrategy(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }

  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }

    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }

uint64_t storeEnumTagSinglePayload for ArgumentArrayParsingStrategy( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xF9) {
    return ((uint64_t (*)(void))((char *)&loc_18902B400 + 4 * byte_1890690FF[v4]))();
  }
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_18902B434 + 4 * byte_1890690FA[v4]))();
}

uint64_t sub_18902B434(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_18902B43C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x18902B444LL);
  }
  return result;
}

uint64_t sub_18902B450(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x18902B458LL);
  }
  *(_BYTE *)uint64_t result = a2 + 6;
  return result;
}

uint64_t sub_18902B45C(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_18902B464(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArgumentArrayParsingStrategy()
{
  return &type metadata for ArgumentArrayParsingStrategy;
}

uint64_t Option.init(from:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7 = type metadata accessor for Option(0LL, a2, a3, a4);
  sub_189006BE4(a1, (uint64_t)v10);
  uint64_t v8 = MEMORY[0x1895DD3F4](&unk_1890692E0, v7);
  sub_189048038((uint64_t)v10, v7, v8, a5);
  return __swift_destroy_boxed_opaque_existential_1Tm(a1);
}

uint64_t type metadata accessor for Option(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Option);
}

void Option.init()()
{
}

uint64_t Option.wrappedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = type metadata accessor for Parsed(0LL, v7, a2, a3);
  MEMORY[0x1895F8858](v8);
  int v10 = (char *)&v13 - v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v13 - v9, v5, v8);
  uint64_t result = sub_189067D3C();
  __break(1u);
  return result;
}

uint64_t sub_18902B674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a4 + a3 - 8);
  MEMORY[0x1895F8858](a1);
  unsigned int v6 = (char *)&v14 - v5;
  (*(void (**)(char *))(v7 + 16))((char *)&v14 - v5);
  uint64_t v10 = type metadata accessor for Option(0LL, v4, v8, v9);
  return Option.wrappedValue.setter((uint64_t)v6, v10, v11, v12);
}

uint64_t Option.wrappedValue.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = type metadata accessor for Parsed(0LL, v6, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8LL))(v4, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL))(v4, a1, v6);
  return swift_storeEnumTagMultiPayload();
}

void (*Option.wrappedValue.modify( void *a1, uint64_t a2))(uint64_t **a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = malloc(0x30uLL);
  *a1 = v5;
  *uint64_t v5 = a2;
  v5[1] = v2;
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v5[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[3] = v7;
  size_t v8 = *(void *)(v7 + 64);
  v5[4] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v5[5] = v9;
  Option.wrappedValue.getter(a2, v10, v11, (uint64_t)v9);
  return sub_18902B7EC;
}

void sub_18902B7EC(uint64_t **a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *a1;
  uint64_t v5 = (void *)(*a1)[4];
  uint64_t v6 = (void *)(*a1)[5];
  if ((a2 & 1) != 0)
  {
    uint64_t v7 = v4[2];
    uint64_t v8 = v4[3];
    uint64_t v9 = *v4;
    (*(void (**)(uint64_t, void *, uint64_t))(v8 + 16))((*a1)[4], v6, v7);
    Option.wrappedValue.setter((uint64_t)v5, v9, v10, v11);
    (*(void (**)(void *, uint64_t))(v8 + 8))(v6, v7);
  }

  else
  {
    Option.wrappedValue.setter((*a1)[5], *v4, a3, a4);
  }

  free(v6);
  free(v5);
  free(v4);
}

uint64_t sub_18902B884@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return Option.init(from:)(a1, *(void *)(a2 + 16), a3, a4, a5);
}

unint64_t Option.description.getter(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1895F8858](a1);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  MEMORY[0x1895F8858](v5);
  uint64_t v9 = (char *)&v18 - v8;
  uint64_t v12 = type metadata accessor for Parsed(0LL, v3, v10, v11);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1895F8858](v12);
  char v15 = (char *)&v18 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v18 - v14, v2, v12);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    return 0xD000000000000014LL;
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v9, v15, v3);
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
    uint64_t v16 = sub_1890677FC();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  }

  return v16;
}

void static SingleValueParsingStrategy.scanningForValue.getter(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

void static ArrayParsingStrategy.singleValue.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

void static ArrayParsingStrategy.unconditionalSingleValue.getter(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

void static ArrayParsingStrategy.upToNextOption.getter(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

void static ArrayParsingStrategy.remaining.getter(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t ArrayParsingStrategy.hash(into:)()
{
  return sub_18906803C();
}

BOOL static ArrayParsingStrategy.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t Option<A>.init(wrappedValue:name:parsing:help:completion:)@<X0>( uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v30 = a7;
  uint64_t v31 = a1;
  uint64_t v11 = (_BYTE *)a3;
  uint64_t v33 = a8;
  uint64_t v32 = type metadata accessor for Parsed(0LL, a6, a3, a4);
  uint64_t v13 = *(void *)(v32 - 8);
  MEMORY[0x1895F8858](v32);
  char v15 = (uint64_t *)((char *)&v27 - v14);
  uint64_t v16 = *a2;
  LOBYTE(v11) = *v11;
  sub_18902A03C(a4, (uint64_t)v34);
  uint64_t v17 = *a5;
  uint64_t v29 = a5[1];
  int v28 = *((unsigned __int8 *)a5 + 16);
  uint64_t v18 = *(void *)(a6 - 8);
  unint64_t v19 = (*(unsigned __int8 *)(v18 + 80) + 90LL) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  unint64_t v20 = (*(void *)(v18 + 64) + v19 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v21 = swift_allocObject();
  uint64_t v22 = v30;
  *(void *)(v21 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = a6;
  *(void *)(v21 + 24) = v22;
  *(void *)(v21 + 32) = v16;
  sub_18902A03C((uint64_t)v34, v21 + 40);
  *(_BYTE *)(v21 + 89) = (_BYTE)v11;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v18 + 32))(v21 + v19, v31, a6);
  unint64_t v23 = v21 + v20;
  uint64_t v24 = v29;
  *(void *)unint64_t v23 = v17;
  *(void *)(v23 + 8) = v24;
  *(_BYTE *)(v23 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v28;
  sub_189048624((uint64_t)sub_18902E4B0, v21, a6, v25, v15);
  return (*(uint64_t (**)(uint64_t, void *, uint64_t))(v13 + 32))(v33, v15, v32);
}

uint64_t sub_18902BBE4( uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10, uint64_t a11, ...)
{
  uint64_t v40 = a8;
  uint64_t v37 = a1;
  uint64_t v38 = a7;
  int v41 = a6;
  char v36 = (uint64_t *)a5;
  int v39 = a10;
  uint64_t v14 = sub_189067AB4();
  MEMORY[0x1895F8858](v14);
  uint64_t v16 = (char *)&v34 - v15;
  uint64_t v19 = type metadata accessor for Bare(0LL, a11, v17, v18);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v20 = swift_bridgeObjectRetain();
  unint64_t v35 = sub_189038EA0(v20, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v21 = v36;
  sub_18902A03C((uint64_t)v36, (uint64_t)v44);
  uint64_t v22 = *(void *)(a11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v16, v38, a11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v16, 0LL, 1LL, a11);
  uint64_t v23 = v40;
  v42[0] = v40;
  v42[1] = a9;
  LOBYTE(v22) = v39;
  char v43 = v39;
  sub_1890140A4(v21);
  sub_189014118(v23, a9, v22);
  uint64_t v24 = MEMORY[0x1895DD3F4](&unk_18906AA1C, v19, (uint64_t *)va);
  sub_189048DF0(v37, a2, a3, v35, (uint64_t)v44, v41, (uint64_t)v16, v45, v42, v19, v24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC818);
  uint64_t v25 = (_OWORD *)swift_allocObject();
  __int128 v26 = v45[10];
  v25[11] = v45[9];
  v25[12] = v26;
  v25[13] = v45[11];
  __int128 v27 = v45[6];
  uint64_t v25[7] = v45[5];
  v25[8] = v27;
  __int128 v28 = v45[8];
  v25[9] = v45[7];
  v25[10] = v28;
  __int128 v29 = v45[0];
  __int128 v30 = v45[1];
  v25[1] = xmmword_1890684B0;
  uint64_t v25[2] = v29;
  __int128 v31 = v45[2];
  _OWORD v25[3] = v30;
  v25[4] = v31;
  __int128 v32 = v45[4];
  v25[5] = v45[3];
  v25[6] = v32;
  return sub_189011E78((uint64_t)v25);
}

uint64_t Option<A>.init(wrappedValue:name:parsing:completion:help:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X5>, uint64_t a3@<X6>, uint64_t a4@<X8>)
{
  uint64_t v27 = a4;
  uint64_t v28 = a3;
  uint64_t v26 = a1;
  uint64_t v5 = *(void *)(a2 - 8);
  MEMORY[0x1895F8858](a1);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = *v8;
  char v11 = *v10;
  uint64_t v13 = *(void *)v12;
  uint64_t v14 = *(void *)(v12 + 8);
  int v25 = *(unsigned __int8 *)(v12 + 16);
  __int128 v16 = *v15;
  __int128 v23 = v15[1];
  __int128 v24 = v16;
  uint64_t v18 = *((void *)v15 + 4);
  uint64_t v17 = *((void *)v15 + 5);
  char v19 = *((_BYTE *)v15 + 48);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v21, v20);
  uint64_t v36 = v9;
  char v35 = v11;
  v31[0] = v24;
  v31[1] = v23;
  uint64_t v32 = v18;
  uint64_t v33 = v17;
  char v34 = v19;
  v29[0] = v13;
  v29[1] = v14;
  char v30 = v25;
  Option<A>.init(wrappedValue:name:parsing:help:completion:)( (uint64_t)v7,  &v36,  (uint64_t)&v35,  (uint64_t)v31,  v29,  a2,  v28,  v27);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v26, a2);
}

uint64_t Option<A>.init(name:parsing:help:completion:)@<X0>( uint64_t *a1@<X0>, _BYTE *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v25 = a6;
  uint64_t v26 = a7;
  uint64_t v12 = type metadata accessor for Parsed(0LL, a5, a3, a4);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1895F8858](v12);
  uint64_t v15 = (uint64_t *)((char *)&v24 - v14);
  uint64_t v16 = *a1;
  LOBYTE(a2) = *a2;
  sub_18902A03C(a3, (uint64_t)v27);
  uint64_t v18 = *(void *)a4;
  uint64_t v17 = *(void *)(a4 + 8);
  char v19 = *(_BYTE *)(a4 + 16);
  uint64_t v20 = swift_allocObject();
  uint64_t v21 = v25;
  *(void *)(v20 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = a5;
  *(void *)(v20 + 24) = v21;
  *(void *)(v20 + 32) = v16;
  sub_18902A03C((uint64_t)v27, v20 + 40);
  *(_BYTE *)(v20 + 89) = (_BYTE)a2;
  *(void *)(v20 + 96) = v18;
  *(void *)(v20 + 104) = v17;
  *(_BYTE *)(v20 + 112) = v19;
  sub_189048624((uint64_t)sub_18902E51C, v20, a5, v22, v15);
  return (*(uint64_t (**)(uint64_t, void *, uint64_t))(v13 + 32))(v26, v15, v12);
}

uint64_t sub_18902C02C( uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10, ...)
{
  uint64_t v36 = a7;
  uint64_t v37 = a8;
  int v38 = a6;
  uint64_t v34 = a1;
  char v35 = (uint64_t *)a5;
  uint64_t v13 = sub_189067AB4();
  MEMORY[0x1895F8858](v13);
  uint64_t v15 = (char *)&v33 - v14;
  uint64_t v18 = type metadata accessor for Bare(0LL, a10, v16, v17);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v19 = swift_bridgeObjectRetain();
  unint64_t v33 = sub_189038EA0(v19, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v20 = v35;
  sub_18902A03C((uint64_t)v35, (uint64_t)v41);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a10 - 8) + 56LL))(v15, 1LL, 1LL, a10);
  uint64_t v22 = v36;
  uint64_t v21 = v37;
  v39[0] = v36;
  v39[1] = v37;
  char v40 = a9;
  sub_1890140A4(v20);
  sub_189014118(v22, v21, a9);
  uint64_t v23 = MEMORY[0x1895DD3F4](&unk_18906AA1C, v18, (uint64_t *)va);
  sub_189048DF0(v34, a2, a3, v33, (uint64_t)v41, v38, (uint64_t)v15, v42, v39, v18, v23);
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC818);
  uint64_t v24 = (_OWORD *)swift_allocObject();
  __int128 v25 = v42[10];
  v24[11] = v42[9];
  v24[12] = v25;
  v24[13] = v42[11];
  __int128 v26 = v42[6];
  v24[7] = v42[5];
  v24[8] = v26;
  __int128 v27 = v42[8];
  v24[9] = v42[7];
  v24[10] = v27;
  __int128 v28 = v42[0];
  __int128 v29 = v42[1];
  v24[1] = xmmword_1890684B0;
  void v24[2] = v28;
  __int128 v30 = v42[2];
  unint64_t v24[3] = v29;
  v24[4] = v30;
  __int128 v31 = v42[4];
  v24[5] = v42[3];
  v24[6] = v31;
  return sub_189011E78((uint64_t)v24);
}

uint64_t Option.init(wrappedValue:name:parsing:help:completion:transform:)@<X0>( uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v32 = a1;
  uint64_t v33 = a7;
  uint64_t v31 = a6;
  uint64_t v12 = (_BYTE *)a3;
  uint64_t v35 = a9;
  uint64_t v34 = type metadata accessor for Parsed(0LL, a8, a3, a4);
  uint64_t v14 = *(void *)(v34 - 8);
  MEMORY[0x1895F8858](v34);
  uint64_t v16 = (uint64_t *)((char *)&v29 - v15);
  uint64_t v17 = *a2;
  LOBYTE(v12) = *v12;
  sub_18902A03C(a4, (uint64_t)v36);
  uint64_t v18 = *a5;
  uint64_t v30 = a5[1];
  HIDWORD(v29) = *((unsigned __int8 *)a5 + 16);
  uint64_t v19 = *(void *)(a8 - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 104LL) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (*(void *)(v19 + 64) + v20 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = a8;
  *(void *)(v22 + 24) = v17;
  sub_18902A03C((uint64_t)v36, v22 + 32);
  *(_BYTE *)(v22 + 81) = (_BYTE)v12;
  uint64_t v23 = v32;
  uint64_t v24 = v33;
  *(void *)(v22 + 88) = v31;
  *(void *)(v22 + 96) = v24;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v19 + 32))(v22 + v20, v23, a8);
  unint64_t v25 = v22 + v21;
  uint64_t v26 = v30;
  *(void *)unint64_t v25 = v18;
  *(void *)(v25 + 8) = v26;
  *(_BYTE *)(v25 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = BYTE4(v29);
  sub_189048624((uint64_t)sub_18902E5D0, v22, a8, v27, v16);
  return (*(uint64_t (**)(uint64_t, void *, uint64_t))(v14 + 32))(v35, v16, v34);
}

uint64_t sub_18902C384( uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned __int8 a12, uint64_t a13)
{
  uint64_t v44 = a8;
  uint64_t v46 = a7;
  int v45 = a6;
  int v39 = (uint64_t *)a5;
  uint64_t v41 = a1;
  int v43 = a12;
  uint64_t v42 = a11;
  uint64_t v38 = a9;
  uint64_t v16 = sub_189067AB4();
  MEMORY[0x1895F8858](v16);
  uint64_t v18 = (char *)&v37 - v17;
  uint64_t v21 = type metadata accessor for Bare(0LL, a13, v19, v20);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v22 = swift_bridgeObjectRetain();
  unint64_t v40 = sub_189038EA0(v22, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v23 = v39;
  sub_18902A03C((uint64_t)v39, (uint64_t)v49);
  uint64_t v24 = *(void *)(a13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v18, v38, a13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v18, 0LL, 1LL, a13);
  uint64_t v25 = v42;
  v47[0] = a10;
  v47[1] = v42;
  LOBYTE(v24) = v43;
  char v48 = v43;
  sub_1890140A4(v23);
  sub_189014118(a10, v25, v24);
  uint64_t v26 = v44;
  swift_retain();
  uint64_t v27 = MEMORY[0x1895DD3F4](&unk_18906AA44, v21);
  sub_1890490C0(v41, a2, a3, v40, (uint64_t)v49, v45, v46, v50, v26, (uint64_t)v18, v47, v21, v27);
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC818);
  __int128 v28 = (_OWORD *)swift_allocObject();
  __int128 v29 = v50[10];
  v28[11] = v50[9];
  v28[12] = v29;
  v28[13] = v50[11];
  __int128 v30 = v50[6];
  v28[7] = v50[5];
  v28[8] = v30;
  __int128 v31 = v50[8];
  v28[9] = v50[7];
  v28[10] = v31;
  __int128 v32 = v50[0];
  __int128 v33 = v50[1];
  v28[1] = xmmword_1890684B0;
  uint64_t v28[2] = v32;
  __int128 v34 = v50[2];
  v28[3] = v33;
  v28[4] = v34;
  __int128 v35 = v50[4];
  v28[5] = v50[3];
  v28[6] = v35;
  return sub_189011E78((uint64_t)v28);
}

uint64_t Option.init(name:parsing:help:completion:transform:)@<X0>( uint64_t *a1@<X0>, _BYTE *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v25 = a5;
  uint64_t v26 = a6;
  uint64_t v27 = a8;
  uint64_t v13 = type metadata accessor for Parsed(0LL, a7, a3, a4);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1895F8858](v13);
  uint64_t v16 = (uint64_t *)((char *)&v25 - v15);
  uint64_t v17 = *a1;
  LOBYTE(a2) = *a2;
  sub_18902A03C(a3, (uint64_t)v28);
  uint64_t v19 = *(void *)a4;
  uint64_t v18 = *(void *)(a4 + 8);
  char v20 = *(_BYTE *)(a4 + 16);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = a7;
  *(void *)(v21 + 24) = v17;
  sub_18902A03C((uint64_t)v28, v21 + 32);
  *(_BYTE *)(v21 + 81) = (_BYTE)a2;
  uint64_t v22 = v26;
  *(void *)(v21 + 88) = v25;
  *(void *)(v21 + 96) = v22;
  *(void *)(v21 + 104) = v19;
  *(void *)(v21 + 112) = v18;
  *(_BYTE *)(v21 + 120) = v20;
  sub_189048624((uint64_t)sub_18902E640, v21, a7, v23, v16);
  return (*(uint64_t (**)(uint64_t, void *, uint64_t))(v14 + 32))(v27, v16, v13);
}

uint64_t sub_18902C6D8( uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned __int8 a11, uint64_t a12)
{
  uint64_t v39 = a8;
  uint64_t v41 = a7;
  int v40 = a6;
  uint64_t v36 = a1;
  uint64_t v37 = (uint64_t *)a5;
  int v38 = a11;
  uint64_t v15 = sub_189067AB4();
  MEMORY[0x1895F8858](v15);
  uint64_t v17 = (char *)&v36 - v16;
  uint64_t v20 = type metadata accessor for Bare(0LL, a12, v18, v19);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v21 = swift_bridgeObjectRetain();
  unint64_t v22 = sub_189038EA0(v21, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v23 = v37;
  sub_18902A03C((uint64_t)v37, (uint64_t)v44);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a12 - 8) + 56LL))(v17, 1LL, 1LL, a12);
  v42[0] = a9;
  v42[1] = a10;
  char v24 = v38;
  char v43 = v38;
  sub_1890140A4(v23);
  sub_189014118(a9, a10, v24);
  uint64_t v25 = v39;
  swift_retain();
  uint64_t v26 = MEMORY[0x1895DD3F4](&unk_18906AA44, v20);
  sub_1890490C0(v36, a2, a3, v22, (uint64_t)v44, v40, v41, v45, v25, (uint64_t)v17, v42, v20, v26);
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC818);
  uint64_t v27 = (_OWORD *)swift_allocObject();
  __int128 v28 = v45[10];
  v27[11] = v45[9];
  v27[12] = v28;
  v27[13] = v45[11];
  __int128 v29 = v45[6];
  v27[7] = v45[5];
  v27[8] = v29;
  __int128 v30 = v45[8];
  v27[9] = v45[7];
  v27[10] = v30;
  __int128 v31 = v45[0];
  __int128 v32 = v45[1];
  v27[1] = xmmword_1890684B0;
  v27[2] = v31;
  __int128 v33 = v45[2];
  v27[3] = v32;
  v27[4] = v33;
  __int128 v34 = v45[4];
  v27[5] = v45[3];
  v27[6] = v34;
  return sub_189011E78((uint64_t)v27);
}

uint64_t Option.init<A>(wrappedValue:name:parsing:help:completion:)@<X0>( uint64_t *a1@<X0>, _BYTE *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v27 = a6;
  uint64_t v28 = a7;
  uint64_t v26 = sub_189067AB4();
  uint64_t v14 = type metadata accessor for Parsed(0LL, v26, v12, v13);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1895F8858](v14);
  uint64_t v17 = (uint64_t *)((char *)&v26 - v16);
  uint64_t v18 = *a1;
  LOBYTE(a2) = *a2;
  sub_18902A03C(a3, (uint64_t)v29);
  uint64_t v20 = *a4;
  uint64_t v19 = a4[1];
  char v21 = *((_BYTE *)a4 + 16);
  uint64_t v22 = swift_allocObject();
  uint64_t v23 = v27;
  *(void *)(v22 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = a5;
  *(void *)(v22 + 24) = v23;
  *(void *)(v22 + 32) = v18;
  sub_18902A03C((uint64_t)v29, v22 + 40);
  *(_BYTE *)(v22 + 89) = (_BYTE)a2;
  *(void *)(v22 + 96) = v20;
  *(void *)(v22 + 104) = v19;
  *(_BYTE *)(v22 + 112) = v21;
  sub_189048624((uint64_t)sub_18902E650, v22, v26, v24, v17);
  return (*(uint64_t (**)(uint64_t, void *, uint64_t))(v15 + 32))(v28, v17, v14);
}

uint64_t Option.init<A>(wrappedValue:name:parsing:help:completion:)@<X0>( uint64_t a1@<X0>, uint64_t *a2@<X1>, _BYTE *a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v33 = a7;
  uint64_t v34 = a1;
  uint64_t v36 = a8;
  uint64_t v13 = sub_189067AB4();
  uint64_t v35 = type metadata accessor for Parsed(0LL, v13, v14, v15);
  uint64_t v16 = *(void *)(v35 - 8);
  MEMORY[0x1895F8858](v35);
  uint64_t v18 = (uint64_t *)((char *)&v30 - v17);
  uint64_t v19 = *a2;
  LOBYTE(a3) = *a3;
  sub_18902A03C(a4, (uint64_t)v37);
  uint64_t v20 = *a5;
  uint64_t v31 = a5[1];
  uint64_t v32 = v20;
  HIDWORD(v30) = *((unsigned __int8 *)a5 + 16);
  uint64_t v21 = *(void *)(v13 - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 90LL) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (*(void *)(v21 + 64) + v22 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v24 = swift_allocObject();
  uint64_t v25 = v33;
  *(void *)(v24 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = a6;
  *(void *)(v24 + 24) = v25;
  *(void *)(v24 + 32) = v19;
  sub_18902A03C((uint64_t)v37, v24 + 40);
  *(_BYTE *)(v24 + 89) = (_BYTE)a3;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v21 + 32))(v24 + v22, v34, v13);
  unint64_t v26 = v24 + v23;
  uint64_t v27 = v31;
  *(void *)unint64_t v26 = v32;
  *(void *)(v26 + 8) = v27;
  *(_BYTE *)(v26 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = BYTE4(v30);
  sub_189048624((uint64_t)sub_18902E760, v24, v13, v28, v18);
  return (*(uint64_t (**)(uint64_t, void *, uint64_t))(v16 + 32))(v36, v18, v35);
}

uint64_t sub_18902CB88( uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, ...)
{
  uint64_t v34 = a7;
  uint64_t v35 = a8;
  int v36 = a6;
  uint64_t v32 = a1;
  uint64_t v33 = (uint64_t *)a5;
  uint64_t v14 = sub_189067AB4();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1895F8858](v14);
  uint64_t v17 = (char *)&v31 - v16;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v18 = swift_bridgeObjectRetain();
  unint64_t v31 = sub_189038EA0(v18, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v19 = v33;
  sub_18902A03C((uint64_t)v33, (uint64_t)v39);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v34, v14);
  uint64_t v20 = v35;
  v37[0] = v35;
  v37[1] = a9;
  char v38 = a10;
  sub_1890140A4(v19);
  sub_189014118(v20, a9, a10);
  uint64_t v21 = MEMORY[0x1895DD3F4](&unk_18906A880, v14, (uint64_t *)va);
  sub_189048DF0(v32, a2, a3, v31, (uint64_t)v39, v36, (uint64_t)v17, v40, v37, v14, v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC818);
  unint64_t v22 = (_OWORD *)swift_allocObject();
  __int128 v23 = v40[10];
  v22[11] = v40[9];
  v22[12] = v23;
  v22[13] = v40[11];
  __int128 v24 = v40[6];
  v22[7] = v40[5];
  v22[8] = v24;
  __int128 v25 = v40[8];
  v22[9] = v40[7];
  v22[10] = v25;
  __int128 v26 = v40[0];
  __int128 v27 = v40[1];
  v22[1] = xmmword_1890684B0;
  _OWORD v22[2] = v26;
  __int128 v28 = v40[2];
  v22[3] = v27;
  void v22[4] = v28;
  __int128 v29 = v40[4];
  v22[5] = v40[3];
  v22[6] = v29;
  return sub_189011E78((uint64_t)v22);
}

uint64_t Option.init<A>(name:parsing:help:completion:)@<X0>( uint64_t *a1@<X0>, _BYTE *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v27 = a6;
  uint64_t v28 = a7;
  uint64_t v26 = sub_189067AB4();
  uint64_t v14 = type metadata accessor for Parsed(0LL, v26, v12, v13);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1895F8858](v14);
  uint64_t v17 = (uint64_t *)((char *)&v26 - v16);
  uint64_t v18 = *a1;
  LOBYTE(a2) = *a2;
  sub_18902A03C(a3, (uint64_t)v29);
  uint64_t v20 = *a4;
  uint64_t v19 = a4[1];
  char v21 = *((_BYTE *)a4 + 16);
  uint64_t v22 = swift_allocObject();
  uint64_t v23 = v27;
  *(void *)(v22 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = a5;
  *(void *)(v22 + 24) = v23;
  *(void *)(v22 + 32) = v18;
  sub_18902A03C((uint64_t)v29, v22 + 40);
  *(_BYTE *)(v22 + 89) = (_BYTE)a2;
  *(void *)(v22 + 96) = v20;
  *(void *)(v22 + 104) = v19;
  *(_BYTE *)(v22 + 112) = v21;
  sub_189048624((uint64_t)sub_18902E650, v22, v26, v24, v17);
  return (*(uint64_t (**)(uint64_t, void *, uint64_t))(v15 + 32))(v28, v17, v14);
}

uint64_t sub_18902CE94( uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10, ...)
{
  uint64_t v33 = a7;
  uint64_t v34 = a8;
  int v35 = a6;
  unint64_t v31 = (uint64_t *)a5;
  uint64_t v32 = a1;
  uint64_t v13 = sub_189067AB4();
  MEMORY[0x1895F8858](v13);
  uint64_t v15 = (char *)&v30 - v14;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v16 = swift_bridgeObjectRetain();
  unint64_t v30 = sub_189038EA0(v16, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v17 = v31;
  sub_18902A03C((uint64_t)v31, (uint64_t)v38);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a10 - 8) + 56LL))(v15, 1LL, 1LL, a10);
  uint64_t v19 = v33;
  uint64_t v18 = v34;
  v36[0] = v33;
  v36[1] = v34;
  char v37 = a9;
  sub_1890140A4(v17);
  sub_189014118(v19, v18, a9);
  uint64_t v20 = MEMORY[0x1895DD3F4](&unk_18906A880, v13, (uint64_t *)va);
  sub_189048DF0(v32, a2, a3, v30, (uint64_t)v38, v35, (uint64_t)v15, v39, v36, v13, v20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC818);
  char v21 = (_OWORD *)swift_allocObject();
  __int128 v22 = v39[10];
  v21[11] = v39[9];
  __int128 v21[12] = v22;
  v21[13] = v39[11];
  __int128 v23 = v39[6];
  v21[7] = v39[5];
  v21[8] = v23;
  __int128 v24 = v39[8];
  v21[9] = v39[7];
  v21[10] = v24;
  __int128 v25 = v39[0];
  __int128 v26 = v39[1];
  v21[1] = xmmword_1890684B0;
  v21[2] = v25;
  __int128 v27 = v39[2];
  v21[3] = v26;
  v21[4] = v27;
  __int128 v28 = v39[4];
  v21[5] = v39[3];
  v21[6] = v28;
  return sub_189011E78((uint64_t)v21);
}

uint64_t Option.init<A>(wrappedValue:name:parsing:help:completion:transform:)@<X0>( uint64_t *a1@<X0>, _BYTE *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v30 = a5;
  uint64_t v31 = a6;
  uint64_t v32 = a8;
  uint64_t v29 = sub_189067AB4();
  uint64_t v15 = type metadata accessor for Parsed(0LL, v29, v13, v14);
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1895F8858](v15);
  uint64_t v18 = (uint64_t *)((char *)&v28 - v17);
  uint64_t v19 = *a1;
  LOBYTE(a2) = *a2;
  sub_18902A03C(a3, (uint64_t)v33);
  uint64_t v21 = *a4;
  uint64_t v20 = a4[1];
  char v22 = *((_BYTE *)a4 + 16);
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = a7;
  *(void *)(v23 + 24) = v19;
  sub_18902A03C((uint64_t)v33, v23 + 32);
  *(_BYTE *)(v23 + 81) = (_BYTE)a2;
  uint64_t v24 = v29;
  uint64_t v25 = v31;
  *(void *)(v23 + 88) = v30;
  *(void *)(v23 + 96) = v25;
  *(void *)(v23 + 104) = v21;
  *(void *)(v23 + 112) = v20;
  *(_BYTE *)(v23 + 120) = v22;
  sub_189048624((uint64_t)sub_18902E80C, v23, v24, v26, v18);
  return (*(uint64_t (**)(uint64_t, void *, uint64_t))(v16 + 32))(v32, v18, v15);
}

uint64_t Option.init<A>(wrappedValue:name:parsing:help:completion:transform:)@<X0>( uint64_t a1@<X0>, uint64_t *a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v38 = a1;
  uint64_t v39 = a7;
  uint64_t v37 = a6;
  uint64_t v41 = a9;
  uint64_t v14 = sub_189067AB4();
  uint64_t v40 = type metadata accessor for Parsed(0LL, v14, v15, v16);
  uint64_t v17 = *(void *)(v40 - 8);
  MEMORY[0x1895F8858](v40);
  uint64_t v19 = (uint64_t *)((char *)&v33 - v18);
  uint64_t v20 = *a2;
  char v21 = *a3;
  sub_18902A03C(a4, (uint64_t)v42);
  uint64_t v22 = *a5;
  uint64_t v35 = a5[1];
  uint64_t v36 = v22;
  int v34 = *((unsigned __int8 *)a5 + 16);
  uint64_t v23 = *(void *)(v14 - 8);
  unint64_t v24 = (*(unsigned __int8 *)(v23 + 80) + 104LL) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  unint64_t v25 = (*(void *)(v23 + 64) + v24 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = a8;
  *(void *)(v26 + 24) = v20;
  sub_18902A03C((uint64_t)v42, v26 + 32);
  *(_BYTE *)(v26 + 81) = v21;
  uint64_t v27 = v38;
  uint64_t v28 = v39;
  *(void *)(v26 + 88) = v37;
  *(void *)(v26 + 96) = v28;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v23 + 32))(v26 + v24, v27, v14);
  unint64_t v29 = v26 + v25;
  uint64_t v30 = v35;
  *(void *)unint64_t v29 = v36;
  *(void *)(v29 + 8) = v30;
  *(_BYTE *)(v29 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v34;
  sub_189048624((uint64_t)sub_18902E928, v26, v14, v31, v19);
  return (*(uint64_t (**)(uint64_t, void *, uint64_t))(v17 + 32))(v41, v19, v40);
}

uint64_t sub_18902D324( uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned __int8 a12)
{
  uint64_t v39 = a8;
  uint64_t v41 = a7;
  int v40 = a6;
  uint64_t v35 = (uint64_t *)a5;
  uint64_t v37 = a1;
  int v38 = a12;
  uint64_t v36 = a11;
  uint64_t v34 = a9;
  uint64_t v15 = sub_189067AB4();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1895F8858](v15);
  uint64_t v18 = (char *)&v34 - v17;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v19 = swift_bridgeObjectRetain();
  unint64_t v20 = sub_189038EA0(v19, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v21 = v35;
  sub_18902A03C((uint64_t)v35, (uint64_t)v44);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v34, v15);
  uint64_t v22 = v36;
  v42[0] = a10;
  v42[1] = v36;
  LOBYTE(v__swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v38;
  char v43 = v38;
  sub_1890140A4(v21);
  sub_189014118(a10, v22, v16);
  uint64_t v23 = v39;
  swift_retain();
  uint64_t v24 = MEMORY[0x1895DD3F4](&unk_18906A864, v15);
  sub_1890490C0(v37, a2, a3, v20, (uint64_t)v44, v40, v41, v45, v23, (uint64_t)v18, v42, v15, v24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC818);
  unint64_t v25 = (_OWORD *)swift_allocObject();
  __int128 v26 = v45[10];
  v25[11] = v45[9];
  v25[12] = v26;
  v25[13] = v45[11];
  __int128 v27 = v45[6];
  uint64_t v25[7] = v45[5];
  v25[8] = v27;
  __int128 v28 = v45[8];
  v25[9] = v45[7];
  v25[10] = v28;
  __int128 v29 = v45[0];
  __int128 v30 = v45[1];
  v25[1] = xmmword_1890684B0;
  uint64_t v25[2] = v29;
  __int128 v31 = v45[2];
  _OWORD v25[3] = v30;
  v25[4] = v31;
  __int128 v32 = v45[4];
  v25[5] = v45[3];
  v25[6] = v32;
  return sub_189011E78((uint64_t)v25);
}

uint64_t Option.init<A>(name:parsing:help:completion:transform:)@<X0>( uint64_t *a1@<X0>, _BYTE *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v30 = a5;
  uint64_t v31 = a6;
  uint64_t v32 = a8;
  uint64_t v29 = sub_189067AB4();
  uint64_t v15 = type metadata accessor for Parsed(0LL, v29, v13, v14);
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1895F8858](v15);
  uint64_t v18 = (uint64_t *)((char *)&v28 - v17);
  uint64_t v19 = *a1;
  LOBYTE(a2) = *a2;
  sub_18902A03C(a3, (uint64_t)v33);
  uint64_t v21 = *a4;
  uint64_t v20 = a4[1];
  char v22 = *((_BYTE *)a4 + 16);
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = a7;
  *(void *)(v23 + 24) = v19;
  sub_18902A03C((uint64_t)v33, v23 + 32);
  *(_BYTE *)(v23 + 81) = (_BYTE)a2;
  uint64_t v24 = v29;
  uint64_t v25 = v31;
  *(void *)(v23 + 88) = v30;
  *(void *)(v23 + 96) = v25;
  *(void *)(v23 + 104) = v21;
  *(void *)(v23 + 112) = v20;
  *(_BYTE *)(v23 + 120) = v22;
  sub_189048624((uint64_t)sub_18902E80C, v23, v24, v26, v18);
  return (*(uint64_t (**)(uint64_t, void *, uint64_t))(v16 + 32))(v32, v18, v15);
}

uint64_t sub_18902D660( uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned __int8 a11, uint64_t a12)
{
  uint64_t v39 = a8;
  uint64_t v41 = a7;
  int v40 = a6;
  uint64_t v35 = (uint64_t *)a5;
  uint64_t v37 = a1;
  int v38 = a11;
  uint64_t v36 = a10;
  uint64_t v15 = sub_189067AB4();
  MEMORY[0x1895F8858](v15);
  uint64_t v17 = (char *)&v34 - v16;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v18 = swift_bridgeObjectRetain();
  unint64_t v19 = sub_189038EA0(v18, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v20 = v35;
  sub_18902A03C((uint64_t)v35, (uint64_t)v44);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a12 - 8) + 56LL))(v17, 1LL, 1LL, a12);
  uint64_t v21 = v36;
  v42[0] = a9;
  v42[1] = v36;
  char v22 = v38;
  char v43 = v38;
  sub_1890140A4(v20);
  sub_189014118(a9, v21, v22);
  uint64_t v23 = v39;
  swift_retain();
  uint64_t v24 = MEMORY[0x1895DD3F4](&unk_18906A864, v15);
  sub_1890490C0(v37, a2, a3, v19, (uint64_t)v44, v40, v41, v45, v23, (uint64_t)v17, v42, v15, v24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC818);
  uint64_t v25 = (_OWORD *)swift_allocObject();
  __int128 v26 = v45[10];
  v25[11] = v45[9];
  v25[12] = v26;
  v25[13] = v45[11];
  __int128 v27 = v45[6];
  uint64_t v25[7] = v45[5];
  v25[8] = v27;
  __int128 v28 = v45[8];
  v25[9] = v45[7];
  v25[10] = v28;
  __int128 v29 = v45[0];
  __int128 v30 = v45[1];
  v25[1] = xmmword_1890684B0;
  uint64_t v25[2] = v29;
  __int128 v31 = v45[2];
  _OWORD v25[3] = v30;
  v25[4] = v31;
  __int128 v32 = v45[4];
  v25[5] = v45[3];
  v25[6] = v32;
  return sub_189011E78((uint64_t)v25);
}

double Option.init<A>(wrappedValue:name:parsing:help:completion:)@<D0>( uint64_t a1@<X0>, uint64_t *a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v13 = *a2;
  char v14 = *a3;
  sub_18902A03C(a4, (uint64_t)v32);
  uint64_t v15 = *a5;
  uint64_t v16 = a5[1];
  char v17 = *((_BYTE *)a5 + 16);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = a6;
  *(void *)(v18 + 24) = a7;
  *(void *)(v18 + 32) = v13;
  sub_18902A03C((uint64_t)v32, v18 + 40);
  *(_BYTE *)(v18 + 89) = v14;
  *(void *)(v18 + 96) = a1;
  *(void *)(v18 + 104) = v15;
  *(void *)(v18 + 112) = v16;
  *(_BYTE *)(v18 + 120) = v17;
  uint64_t v19 = sub_189067A30();
  sub_189048624((uint64_t)sub_18902EA34, v18, v19, v20, &v28);
  __int128 v26 = v28;
  char v27 = v29;
  uint64_t v23 = type metadata accessor for Parsed(0LL, v19, v21, v22);
  (*(void (**)(__int128 *, __int128 *, uint64_t))(*(void *)(v23 - 8) + 32LL))(&v30, &v26, v23);
  char v24 = v31;
  double result = *(double *)&v30;
  *(_OWORD *)a8 = v30;
  *(_BYTE *)(a8 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v24;
  return result;
}

uint64_t sub_18902D994( uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, ...)
{
  uint64_t v17 = sub_189067A30();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v18 = swift_bridgeObjectRetain();
  unint64_t v19 = sub_189038EA0(v18, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_18902A03C((uint64_t)a5, (uint64_t)v38);
  uint64_t v37 = a7;
  v35[0] = a8;
  v35[1] = a9;
  char v36 = a10;
  sub_1890140A4(a5);
  swift_bridgeObjectRetain();
  sub_189014118(a8, a9, a10);
  uint64_t v20 = MEMORY[0x1895DD3F4](&unk_18906A8C4, v17, (uint64_t *)va);
  sub_189048DF0(a1, a2, a3, v19, (uint64_t)v38, a6, (uint64_t)&v37, v39, v35, v17, v20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC818);
  uint64_t v21 = (_OWORD *)swift_allocObject();
  __int128 v22 = v39[8];
  __int128 v23 = v39[10];
  __int128 v24 = v39[11];
  v21[11] = v39[9];
  __int128 v21[12] = v23;
  v21[13] = v24;
  __int128 v25 = v39[4];
  __int128 v26 = v39[6];
  __int128 v27 = v39[7];
  v21[7] = v39[5];
  v21[8] = v26;
  v21[9] = v27;
  v21[10] = v22;
  __int128 v28 = v39[0];
  __int128 v29 = v39[1];
  v21[1] = xmmword_1890684B0;
  v21[2] = v28;
  __int128 v30 = v39[2];
  __int128 v31 = v39[3];
  v21[3] = v29;
  v21[4] = v30;
  v21[5] = v31;
  v21[6] = v25;
  return sub_189011E78((uint64_t)v21);
}

double Option.init<A>(name:parsing:help:completion:)@<D0>( uint64_t *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v11 = *a1;
  char v12 = *a2;
  sub_18902A03C(a3, (uint64_t)v30);
  uint64_t v13 = *a4;
  uint64_t v14 = a4[1];
  char v15 = *((_BYTE *)a4 + 16);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = a5;
  *(void *)(v16 + 24) = a6;
  *(void *)(v16 + 32) = v11;
  sub_18902A03C((uint64_t)v30, v16 + 40);
  *(_BYTE *)(v16 + 89) = v12;
  *(void *)(v16 + 96) = v13;
  *(void *)(v16 + 104) = v14;
  *(_BYTE *)(v16 + 112) = v15;
  uint64_t v17 = sub_189067A30();
  sub_189048624((uint64_t)sub_18902EAD0, v16, v17, v18, &v26);
  __int128 v24 = v26;
  char v25 = v27;
  uint64_t v21 = type metadata accessor for Parsed(0LL, v17, v19, v20);
  (*(void (**)(__int128 *, __int128 *, uint64_t))(*(void *)(v21 - 8) + 32LL))(&v28, &v24, v21);
  char v22 = v29;
  double result = *(double *)&v28;
  *(_OWORD *)a7 = v28;
  *(_BYTE *)(a7 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v22;
  return result;
}

uint64_t sub_18902DC6C( uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, int a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10, ...)
{
  uint64_t v16 = sub_189067A30();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v17 = swift_bridgeObjectRetain();
  unint64_t v18 = sub_189038EA0(v17, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_18902A03C((uint64_t)a5, (uint64_t)v36);
  uint64_t v35 = 0LL;
  v33[0] = a7;
  v33[1] = a8;
  char v34 = a9;
  sub_1890140A4(a5);
  sub_189014118(a7, a8, a9);
  uint64_t v19 = MEMORY[0x1895DD3F4](&unk_18906A8C4, v16, (uint64_t *)va);
  sub_189048DF0(a1, a2, a3, v18, (uint64_t)v36, a6, (uint64_t)&v35, v37, v33, v16, v19);
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC818);
  uint64_t v20 = (_OWORD *)swift_allocObject();
  __int128 v21 = v37[8];
  __int128 v22 = v37[10];
  __int128 v23 = v37[11];
  v20[11] = v37[9];
  v20[12] = v22;
  v20[13] = v23;
  __int128 v24 = v37[4];
  __int128 v25 = v37[6];
  __int128 v26 = v37[7];
  v20[7] = v37[5];
  v20[8] = v25;
  v20[9] = v26;
  v20[10] = v21;
  __int128 v27 = v37[0];
  __int128 v28 = v37[1];
  v20[1] = xmmword_1890684B0;
  _OWORD v20[2] = v27;
  __int128 v29 = v37[2];
  __int128 v30 = v37[3];
  v20[3] = v28;
  v20[4] = v29;
  v20[5] = v30;
  void v20[6] = v24;
  return sub_189011E78((uint64_t)v20);
}

double Option.init<A>(wrappedValue:name:parsing:help:completion:transform:)@<D0>( uint64_t a1@<X0>, uint64_t *a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v14 = *a2;
  char v15 = *a3;
  sub_18902A03C(a4, (uint64_t)v34);
  uint64_t v16 = *a5;
  uint64_t v17 = a5[1];
  char v18 = *((_BYTE *)a5 + 16);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = a8;
  *(void *)(v19 + 24) = v14;
  sub_18902A03C((uint64_t)v34, v19 + 32);
  *(_BYTE *)(v19 + 81) = v15;
  *(void *)(v19 + 88) = a6;
  *(void *)(v19 + 96) = a7;
  *(void *)(v19 + 104) = a1;
  *(void *)(v19 + 112) = v16;
  *(void *)(v19 + 120) = v17;
  *(_BYTE *)(v19 + 128) = v18;
  uint64_t v20 = sub_189067A30();
  sub_189048624((uint64_t)sub_18902EB80, v19, v20, v21, &v30);
  __int128 v28 = v30;
  char v29 = v31;
  uint64_t v24 = type metadata accessor for Parsed(0LL, v20, v22, v23);
  (*(void (**)(__int128 *, __int128 *, uint64_t))(*(void *)(v24 - 8) + 32LL))(&v32, &v28, v24);
  char v25 = v33;
  double result = *(double *)&v32;
  *(_OWORD *)a9 = v32;
  *(_BYTE *)(a9 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v25;
  return result;
}

uint64_t sub_18902DF44( uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  uint64_t v16 = sub_189067A30();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v17 = swift_bridgeObjectRetain();
  unint64_t v18 = sub_189038EA0(v17, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_18902A03C((uint64_t)a5, (uint64_t)v39);
  uint64_t v38 = a9;
  v36[0] = a10;
  v36[1] = a11;
  char v37 = a12;
  sub_1890140A4(a5);
  swift_bridgeObjectRetain();
  sub_189014118(a10, a11, a12);
  swift_retain();
  uint64_t v19 = MEMORY[0x1895DD3F4](&unk_18906A8A8, v16);
  sub_1890490C0(a1, a2, a3, v18, (uint64_t)v39, a6, a7, v40, a8, (uint64_t)&v38, v36, v16, v19);
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC818);
  uint64_t v20 = (_OWORD *)swift_allocObject();
  __int128 v21 = v40[8];
  __int128 v22 = v40[10];
  __int128 v23 = v40[11];
  v20[11] = v40[9];
  v20[12] = v22;
  v20[13] = v23;
  __int128 v24 = v40[4];
  __int128 v25 = v40[6];
  __int128 v26 = v40[7];
  v20[7] = v40[5];
  v20[8] = v25;
  v20[9] = v26;
  v20[10] = v21;
  __int128 v27 = v40[0];
  __int128 v28 = v40[1];
  v20[1] = xmmword_1890684B0;
  _OWORD v20[2] = v27;
  __int128 v29 = v40[2];
  __int128 v30 = v40[3];
  v20[3] = v28;
  v20[4] = v29;
  v20[5] = v30;
  void v20[6] = v24;
  return sub_189011E78((uint64_t)v20);
}

double Option.init<A>(name:parsing:help:completion:transform:)@<D0>( uint64_t *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v13 = *a1;
  char v14 = *a2;
  sub_18902A03C(a3, (uint64_t)v32);
  uint64_t v15 = *a4;
  uint64_t v16 = a4[1];
  char v17 = *((_BYTE *)a4 + 16);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = a7;
  *(void *)(v18 + 24) = v13;
  sub_18902A03C((uint64_t)v32, v18 + 32);
  *(_BYTE *)(v18 + 81) = v14;
  *(void *)(v18 + 88) = a5;
  *(void *)(v18 + 96) = a6;
  *(void *)(v18 + 104) = v15;
  *(void *)(v18 + 112) = v16;
  *(_BYTE *)(v18 + 120) = v17;
  uint64_t v19 = sub_189067A30();
  sub_189048624((uint64_t)sub_18902EC28, v18, v19, v20, &v28);
  __int128 v26 = v28;
  char v27 = v29;
  uint64_t v23 = type metadata accessor for Parsed(0LL, v19, v21, v22);
  (*(void (**)(__int128 *, __int128 *, uint64_t))(*(void *)(v23 - 8) + 32LL))(&v30, &v26, v23);
  char v24 = v31;
  double result = *(double *)&v30;
  *(_OWORD *)a8 = v30;
  *(_BYTE *)(a8 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v24;
  return result;
}

uint64_t sub_18902E238( uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v15 = sub_189067A30();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v16 = swift_bridgeObjectRetain();
  unint64_t v17 = sub_189038EA0(v16, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_18902A03C((uint64_t)a5, (uint64_t)v37);
  uint64_t v36 = 0LL;
  v34[0] = a9;
  v34[1] = a10;
  char v35 = a11;
  sub_1890140A4(a5);
  sub_189014118(a9, a10, a11);
  swift_retain();
  uint64_t v18 = MEMORY[0x1895DD3F4](&unk_18906A8A8, v15);
  sub_1890490C0(a1, a2, a3, v17, (uint64_t)v37, a6, a7, v38, a8, (uint64_t)&v36, v34, v15, v18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC818);
  uint64_t v19 = (_OWORD *)swift_allocObject();
  __int128 v20 = v38[8];
  __int128 v21 = v38[10];
  __int128 v22 = v38[11];
  v19[11] = v38[9];
  v19[12] = v21;
  _OWORD v19[13] = v22;
  __int128 v23 = v38[4];
  __int128 v24 = v38[6];
  __int128 v25 = v38[7];
  v19[7] = v38[5];
  v19[8] = v24;
  v19[9] = v25;
  v19[10] = v20;
  __int128 v26 = v38[0];
  __int128 v27 = v38[1];
  v19[1] = xmmword_1890684B0;
  void v19[2] = v26;
  __int128 v28 = v38[2];
  __int128 v29 = v38[3];
  v19[3] = v27;
  void v19[4] = v28;
  v19[5] = v29;
  v19[6] = v23;
  return sub_189011E78((uint64_t)v19);
}

uint64_t sub_18902E40C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 90LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 48))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  int v5 = *(unsigned __int8 *)(v0 + v4 + 16);
  if (v5 != 255) {
    sub_189009AF4(*(void *)(v0 + v4), *(void *)(v0 + v4 + 8), v5);
  }
  return swift_deallocObject();
}

uint64_t sub_18902E4B0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(v3 + 16) - 8LL);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 90LL) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v3 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8LL);
  return sub_18902BBE4( a1,  a2,  a3,  *(void *)(v3 + 32),  v3 + 40,  *(unsigned __int8 *)(v3 + 89),  v3 + v5,  *(void *)v6,  *(void *)(v6 + 8),  *(_BYTE *)(v6 + 16),  *(void *)(v3 + 16),  *(void *)(v3 + 24));
}

uint64_t sub_18902E51C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18902EADC( a1,  a2,  a3,  (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, uint64_t, void, void, void, char, void, void))sub_18902C02C);
}

uint64_t sub_18902E528()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 104LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 40))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  int v5 = *(unsigned __int8 *)(v0 + v4 + 16);
  if (v5 != 255) {
    sub_189009AF4(*(void *)(v0 + v4), *(void *)(v0 + v4 + 8), v5);
  }
  return swift_deallocObject();
}

uint64_t sub_18902E5D0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(v3 + 16) - 8LL);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 104LL) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v3 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8LL);
  return sub_18902C384( a1,  a2,  a3,  *(void *)(v3 + 24),  v3 + 32,  *(unsigned __int8 *)(v3 + 81),  *(void *)(v3 + 88),  *(void *)(v3 + 96),  v3 + v5,  *(void *)v6,  *(void *)(v6 + 8),  *(_BYTE *)(v6 + 16),  *(void *)(v3 + 16));
}

uint64_t sub_18902E640(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18902EC34( a1,  a2,  a3,  (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, uint64_t, void, void, void, void, void, char, void))sub_18902C6D8);
}

uint64_t sub_18902E654(uint64_t a1, unint64_t a2, uint64_t a3)
{
  return sub_18902CE94( a1,  a2,  a3,  *(void *)(v3 + 32),  v3 + 40,  *(unsigned __int8 *)(v3 + 89),  *(void *)(v3 + 96),  *(void *)(v3 + 104),  *(_BYTE *)(v3 + 112),  *(void *)(v3 + 16),  *(void *)(v3 + 24));
}

uint64_t sub_18902E690()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(sub_189067AB4() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 90LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64) + v3 + 7;
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 48))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = *(void *)(v1 - 8);
  int v8 = *(unsigned __int8 *)(v0 + v5 + 16);
  if (v8 != 255) {
    sub_189009AF4(*(void *)(v0 + v5), *(void *)(v0 + v5 + 8), v8);
  }
  return swift_deallocObject();
}

uint64_t sub_18902E760(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(v3 + 16);
  uint64_t v8 = *(void *)(v3 + 24);
  uint64_t v9 = *(void *)(sub_189067AB4() - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 90LL) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = v3 + ((*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8LL);
  return sub_18902CB88( a1,  a2,  a3,  *(void *)(v3 + 32),  v3 + 40,  *(unsigned __int8 *)(v3 + 89),  v3 + v10,  *(void *)v11,  *(void *)(v11 + 8),  *(_BYTE *)(v11 + 16),  v7,  v8);
}

uint64_t sub_18902E810(uint64_t a1, unint64_t a2, uint64_t a3)
{
  return sub_18902D660( a1,  a2,  a3,  *(void *)(v3 + 24),  v3 + 32,  *(unsigned __int8 *)(v3 + 81),  *(void *)(v3 + 88),  *(void *)(v3 + 96),  *(void *)(v3 + 104),  *(void *)(v3 + 112),  *(_BYTE *)(v3 + 120),  *(void *)(v3 + 16));
}

uint64_t sub_18902E850()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(sub_189067AB4() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 104LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64) + v3 + 7;
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 40))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFF8LL;
  swift_release();
  uint64_t v6 = v0 + v3;
  uint64_t v7 = *(void *)(v1 - 8);
  int v8 = *(unsigned __int8 *)(v0 + v5 + 16);
  if (v8 != 255) {
    sub_189009AF4(*(void *)(v0 + v5), *(void *)(v0 + v5 + 8), v8);
  }
  return swift_deallocObject();
}

uint64_t sub_18902E928(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(sub_189067AB4() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 104LL) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  return sub_18902D324( a1,  a2,  a3,  *(void *)(v3 + 24),  v3 + 32,  *(unsigned __int8 *)(v3 + 81),  *(void *)(v3 + 88),  *(void *)(v3 + 96),  v3 + v8,  *(void *)(v3 + v9),  *(void *)(v3 + v9 + 8),  *(_BYTE *)(v3 + v9 + 16));
}

uint64_t sub_18902E9D8()
{
  if (*(void *)(v0 + 48))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  int v1 = *(unsigned __int8 *)(v0 + 120);
  if (v1 != 255) {
    sub_189009AF4(*(void *)(v0 + 104), *(void *)(v0 + 112), v1);
  }
  return swift_deallocObject();
}

uint64_t sub_18902EA34(uint64_t a1, unint64_t a2, uint64_t a3)
{
  return sub_18902D994( a1,  a2,  a3,  *(void *)(v3 + 32),  (uint64_t *)(v3 + 40),  *(unsigned __int8 *)(v3 + 89),  *(void *)(v3 + 96),  *(void *)(v3 + 104),  *(void *)(v3 + 112),  *(_BYTE *)(v3 + 120),  *(void *)(v3 + 16),  *(void *)(v3 + 24));
}

uint64_t objectdestroy_2Tm_1()
{
  if (*(void *)(v0 + 48))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  int v1 = *(unsigned __int8 *)(v0 + 112);
  if (v1 != 255) {
    sub_189009AF4(*(void *)(v0 + 96), *(void *)(v0 + 104), v1);
  }
  return swift_deallocObject();
}

uint64_t sub_18902EAD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18902EADC( a1,  a2,  a3,  (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, uint64_t, void, void, void, char, void, void))sub_18902DC6C);
}

uint64_t sub_18902EADC( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, void, uint64_t, void, void, void, char, void, void))
{
  char v6 = *(_BYTE *)(v4 + 112);
  return a4( a1,  a2,  a3,  *(void *)(v4 + 32),  v4 + 40,  *(unsigned __int8 *)(v4 + 89),  *(void *)(v4 + 96),  *(void *)(v4 + 104),  v6,  *(void *)(v4 + 16),  *(void *)(v4 + 24));
}

uint64_t sub_18902EB1C()
{
  if (*(void *)(v0 + 40))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  swift_release();
  swift_bridgeObjectRelease();
  int v1 = *(unsigned __int8 *)(v0 + 128);
  if (v1 != 255) {
    sub_189009AF4(*(void *)(v0 + 112), *(void *)(v0 + 120), v1);
  }
  return swift_deallocObject();
}

uint64_t sub_18902EB80(uint64_t a1, unint64_t a2, uint64_t a3)
{
  return sub_18902DF44( a1,  a2,  a3,  *(void *)(v3 + 24),  (uint64_t *)(v3 + 32),  *(unsigned __int8 *)(v3 + 81),  *(void *)(v3 + 88),  *(void *)(v3 + 96),  *(void *)(v3 + 104),  *(void *)(v3 + 112),  *(void *)(v3 + 120),  *(_BYTE *)(v3 + 128));
}

uint64_t objectdestroy_8Tm_0()
{
  if (*(void *)(v0 + 40))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  swift_release();
  int v1 = *(unsigned __int8 *)(v0 + 120);
  if (v1 != 255) {
    sub_189009AF4(*(void *)(v0 + 104), *(void *)(v0 + 112), v1);
  }
  return swift_deallocObject();
}

uint64_t sub_18902EC28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18902EC34( a1,  a2,  a3,  (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, uint64_t, void, void, void, void, void, char, void))sub_18902E238);
}

uint64_t sub_18902EC34( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, void, uint64_t, void, void, void, void, void, char, void))
{
  char v6 = *(_BYTE *)(v4 + 120);
  return a4( a1,  a2,  a3,  *(void *)(v4 + 24),  v4 + 32,  *(unsigned __int8 *)(v4 + 81),  *(void *)(v4 + 88),  *(void *)(v4 + 96),  *(void *)(v4 + 104),  *(void *)(v4 + 112),  v6,  *(void *)(v4 + 16));
}

uint64_t sub_18902EC78(uint64_t a1)
{
  uint64_t result = MEMORY[0x1895DD3F4](&protocol conformance descriptor for Option<A>);
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = result;
  return result;
}

uint64_t sub_18902ECA4(uint64_t a1)
{
  uint64_t result = MEMORY[0x1895DD3F4](&unk_1890692E0);
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_18902ECD4()
{
  unint64_t result = qword_18C761280;
  if (!qword_18C761280)
  {
    unint64_t result = MEMORY[0x1895DD3F4]( &protocol conformance descriptor for SingleValueParsingStrategy,  &type metadata for SingleValueParsingStrategy);
    atomic_store(result, (unint64_t *)&qword_18C761280);
  }

  return result;
}

unint64_t sub_18902ED1C()
{
  unint64_t result = qword_18C761288;
  if (!qword_18C761288)
  {
    unint64_t result = MEMORY[0x1895DD3F4]( &protocol conformance descriptor for ArrayParsingStrategy,  &type metadata for ArrayParsingStrategy);
    atomic_store(result, (unint64_t *)&qword_18C761288);
  }

  return result;
}

uint64_t sub_18902ED60@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v5 = type metadata accessor for Option(0LL, *(void *)(a2 + a1 - 8), a2, a3);
  return Option.wrappedValue.getter(v5, v6, v7, a4);
}

uint64_t sub_18902ED9C()
{
  return 8LL;
}

void *sub_18902EDA8(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t *sub_18902EDB4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8LL);
  if (*(void *)(v4 + 64) <= 0x10uLL) {
    uint64_t v5 = 16LL;
  }
  else {
    uint64_t v5 = *(void *)(v4 + 64);
  }
  int v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    uint64_t v8 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
  }

  else
  {
    unsigned int v9 = *((unsigned __int8 *)a2 + v5);
    if (v9 >= 2)
    {
      else {
        uint64_t v10 = 4LL;
      }
      __asm { BR              X13 }
    }

    if (v9 != 1)
    {
      (*(void (**)(uint64_t *))(v4 + 16))(a1);
      *((_BYTE *)v3 + v5) = 0;
      return v3;
    }

    uint64_t v11 = a2[1];
    *uint64_t v3 = *a2;
    v3[1] = v11;
    *((_BYTE *)v3 + v5) = 1;
  }

  swift_retain();
  return v3;
}

uint64_t sub_18902EEC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8LL);
  unint64_t v3 = *(void *)(v2 + 64);
  if (v3 <= 0x10) {
    unint64_t v3 = 16LL;
  }
  unsigned int v4 = *(unsigned __int8 *)(a1 + v3);
  if (v4 < 2)
  {
    if (v4 == 1) {
      return swift_release();
    }
    else {
      return (*(uint64_t (**)(void))(v2 + 8))();
    }
  }

  else
  {
    else {
      uint64_t v5 = 4LL;
    }
    return ((uint64_t (*)(void))((char *)&loc_18902EF10 + 4 * byte_189069279[v5]))();
  }

void *sub_18902EF68(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8LL);
  if (*(void *)(v4 + 64) <= 0x10uLL) {
    uint64_t v5 = 16LL;
  }
  else {
    uint64_t v5 = *(void *)(v4 + 64);
  }
  unsigned int v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 2)
  {
    else {
      uint64_t v7 = 4LL;
    }
    __asm { BR              X13 }
  }

  if (v6 == 1)
  {
    uint64_t v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    swift_retain();
    char v9 = 1;
  }

  else
  {
    (*(void (**)(void *))(v4 + 16))(a1);
    char v9 = 0;
  }

  *((_BYTE *)a1 + v5) = v9;
  return a1;
}

void *sub_18902F040(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 0x10uLL) {
      uint64_t v7 = 16LL;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = *((unsigned __int8 *)a1 + v7);
    if (v8 >= 2)
    {
      else {
        uint64_t v9 = 4LL;
      }
      __asm { BR              X12 }
    }

    if (v8 == 1) {
      swift_release();
    }
    else {
      (*(void (**)(void *, void))(v6 + 8))(a1, *(void *)(a3 + 16));
    }
    unsigned int v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 2)
    {
      else {
        uint64_t v11 = 4LL;
      }
      __asm { BR              X12 }
    }

    if (v10 == 1)
    {
      uint64_t v12 = a2[1];
      *a1 = *a2;
      a1[1] = v12;
      *((_BYTE *)a1 + v7) = 1;
      swift_retain();
    }

    else
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
      *((_BYTE *)a1 + v7) = 0;
    }
  }

  return a1;
}

_OWORD *sub_18902F1D0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8LL);
  if (*(void *)(v4 + 64) <= 0x10uLL) {
    uint64_t v5 = 16LL;
  }
  else {
    uint64_t v5 = *(void *)(v4 + 64);
  }
  unsigned int v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 2)
  {
    else {
      uint64_t v7 = 4LL;
    }
    __asm { BR              X13 }
  }

  if (v6 == 1)
  {
    *a1 = *a2;
    char v8 = 1;
  }

  else
  {
    (*(void (**)(_OWORD *))(v4 + 32))(a1);
    char v8 = 0;
  }

  *((_BYTE *)a1 + v5) = v8;
  return a1;
}

_OWORD *sub_18902F2A4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 0x10uLL) {
      uint64_t v7 = 16LL;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = *((unsigned __int8 *)a1 + v7);
    if (v8 >= 2)
    {
      else {
        uint64_t v9 = 4LL;
      }
      __asm { BR              X12 }
    }

    if (v8 == 1) {
      swift_release();
    }
    else {
      (*(void (**)(_OWORD *, void))(v6 + 8))(a1, *(void *)(a3 + 16));
    }
    unsigned int v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 2)
    {
      else {
        uint64_t v11 = 4LL;
      }
      __asm { BR              X12 }
    }

    if (v10 == 1)
    {
      *a1 = *a2;
      char v12 = 1;
    }

    else
    {
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v6 + 32))(a1, a2, v5);
      char v12 = 0;
    }

    *((_BYTE *)a1 + v7) = v12;
  }

  return a1;
}

uint64_t sub_18902F430(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = 16LL;
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8LL) + 64LL) > 0x10uLL) {
    uint64_t v3 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8LL) + 64LL);
  }
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0xFF) {
    goto LABEL_21;
  }
  uint64_t v4 = v3 + 1;
  char v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    unsigned int v8 = ((a2 + ~(-1 << v5) - 254) >> v5) + 1;
    if (HIWORD(v8))
    {
      int v6 = *(_DWORD *)(a1 + v4);
      if (!v6) {
        goto LABEL_21;
      }
      goto LABEL_14;
    }

    if (v8 > 0xFF)
    {
      int v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4)) {
        goto LABEL_21;
      }
      goto LABEL_14;
    }

    if (v8 < 2)
    {
LABEL_21:
      unsigned int v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 2) {
        return (v10 ^ 0xFF) + 1;
      }
      else {
        return 0LL;
      }
    }
  }

  int v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4)) {
    goto LABEL_21;
  }
LABEL_14:
  int v9 = (v6 - 1) << v5;
  if (!(_DWORD)v4) {
    return (v9 + 255);
  }
  return ((uint64_t (*)(void))((char *)&loc_18902F4F4 + 4 * byte_18906929C[(v4 - 1)]))();
}

void sub_18902F540(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8LL) + 64LL);
  if (v5 <= 0x10) {
    unint64_t v5 = 16LL;
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFF)
  {
    unsigned int v7 = 0u;
  }

  else if (v6 <= 3)
  {
    unsigned int v9 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v9))
    {
      unsigned int v7 = 4u;
    }

    else if (v9 >= 0x100)
    {
      unsigned int v7 = 2;
    }

    else
    {
      unsigned int v7 = v9 > 1;
    }
  }

  else
  {
    unsigned int v7 = 1u;
  }

  if (a2 <= 0xFE) {
    __asm { BR              X11 }
  }

  unsigned int v8 = a2 - 255;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      int v10 = v8 & ~(-1 << (8 * v6));
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v10;
        *((_BYTE *)a1 + 2) = BYTE2(v10);
      }

      else if ((_DWORD)v6 == 2)
      {
        *a1 = v10;
      }

      else
      {
        *(_BYTE *)a1 = v10;
      }
    }
  }

  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v8;
  }

  __asm { BR              X10 }

ValueMetadata *type metadata accessor for SingleValueParsingStrategy()
{
  return &type metadata for SingleValueParsingStrategy;
}

uint64_t _s22ArgumentParserInternal26SingleValueParsingStrategyVwst_0( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xF9) {
    return ((uint64_t (*)(void))((char *)&loc_18902F74C + 4 * byte_1890692AF[v4]))();
  }
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_18902F780 + 4 * byte_1890692AA[v4]))();
}

uint64_t sub_18902F780(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_18902F788(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x18902F790LL);
  }
  return result;
}

uint64_t sub_18902F79C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x18902F7A4LL);
  }
  *(_BYTE *)unint64_t result = a2 + 6;
  return result;
}

uint64_t sub_18902F7A8(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_18902F7B0(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArrayParsingStrategy()
{
  return &type metadata for ArrayParsingStrategy;
}

void static CompletionKind.default.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0LL;
  *(void *)(a1 + 8) = 0LL;
  *(_BYTE *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 4;
}

uint64_t static CompletionKind.list(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = a1;
  *(void *)(a2 + 8) = 0LL;
  *(_BYTE *)(a2 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 0;
  return swift_bridgeObjectRetain();
}

uint64_t static CompletionKind.file(extensions:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = a1;
  *(void *)(a2 + 8) = 0LL;
  *(_BYTE *)(a2 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 1;
  return swift_bridgeObjectRetain();
}

double static CompletionKind.directory.getter@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = 1LL;
  *(_OWORD *)a1 = xmmword_1890694A0;
  *(_BYTE *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 4;
  return result;
}

uint64_t static CompletionKind.shellCommand(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = a2;
  *(_BYTE *)(a3 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 2;
  return swift_bridgeObjectRetain();
}

uint64_t static CompletionKind.custom(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = a2;
  *(_BYTE *)(a3 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 3;
  return swift_retain();
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for CompletionKind()
{
  return &type metadata for CompletionKind;
}

uint64_t destroy for CompletionKind.Kind(uint64_t a1)
{
  return sub_189009AF4(*(void *)a1, *(void *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s22ArgumentParserInternal14CompletionKindV4KindOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(_BYTE *)(a2 + 16);
  sub_188FFD0F0(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v5;
  return a1;
}

uint64_t _s22ArgumentParserInternal14CompletionKindV4KindOwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(_BYTE *)(a2 + 16);
  sub_188FFD0F0(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v5;
  sub_189009AF4(v6, v7, v8);
  return a1;
}

uint64_t _s22ArgumentParserInternal14CompletionKindV4KindOwta_0(uint64_t a1, uint64_t a2)
{
  char v3 = *(_BYTE *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v3;
  sub_189009AF4(v4, v5, v6);
  return a1;
}

uint64_t _s22ArgumentParserInternal14CompletionKindV4KindOwet_0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 4) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t _s22ArgumentParserInternal14CompletionKindV4KindOwst_0( uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_BYTE *)(result + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 0;
    *(void *)__n128 result = a2 - 252;
    *(void *)(result + 8) = 0LL;
    if (a3 >= 0xFC) {
      *(_BYTE *)(result + 17) = 1;
    }
  }

  else
  {
    if (a3 >= 0xFC) {
      *(_BYTE *)(result + 17) = 0;
    }
    if (a2) {
      *(_BYTE *)(result + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = -(char)a2;
    }
  }

  return result;
}

uint64_t sub_18902FA04(uint64_t a1)
{
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

uint64_t sub_18902FA1C(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(void *)__n128 result = a2 - 4;
    *(void *)(result + 8) = 0LL;
    LOBYTE(a2) = 4;
  }

  *(_BYTE *)(result + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for CompletionKind.Kind()
{
  return &type metadata for CompletionKind.Kind;
}

uint64_t sub_18902FA48@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(v2 + *(int *)(result + 36));
  return result;
}

uint64_t OptionGroup.title.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 44));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t OptionGroup.title.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = (void *)(v3 + *(int *)(a3 + 44));
  uint64_t result = swift_bridgeObjectRelease();
  *char v6 = a1;
  v6[1] = a2;
  return result;
}

uint64_t (*OptionGroup.title.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_18902FADC@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v8 = (int *)type metadata accessor for OptionGroup(0LL, a2, a3, a4);
  *(_BYTE *)(a5 + v8[10]) = 0;
  unsigned int v9 = (void *)(a5 + v8[11]);
  *unsigned int v9 = 0LL;
  v9[1] = 0xE000000000000000LL;
  uint64_t v12 = type metadata accessor for Parsed(0LL, a2, v10, v11);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32LL))(a5, a1, v12);
  *(_BYTE *)(a5 + v8[9]) = 0;
  return result;
}

uint64_t OptionGroup.init(from:)@<X0>( uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6 = v5;
  uint64_t v69 = a5;
  uint64_t v49 = a3;
  uint64_t v50 = type metadata accessor for OptionGroup(0LL, a2, a3, a4);
  uint64_t v46 = *(void *)(v50 - 8);
  MEMORY[0x1895F8858](v50);
  uint64_t v47 = (uint64_t)v43 - v9;
  v43[0] = type metadata accessor for Parsed(0LL, a2, v10, v11);
  MEMORY[0x1895F8858](v43[0]);
  uint64_t v13 = (char *)v43 - v12;
  uint64_t v14 = sub_189067AB4();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x1895F8858](v14);
  uint64_t v18 = (char *)v43 - v17;
  uint64_t v48 = *(void *)(a2 - 8);
  uint64_t v19 = MEMORY[0x1895F8858](v16);
  int v45 = (char *)v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = MEMORY[0x1895F8858](v19);
  uint64_t v44 = (uint64_t)v43 - v22;
  MEMORY[0x1895F8858](v21);
  __int128 v24 = (char *)v43 - v23;
  uint64_t v51 = a1;
  sub_189006BE4(a1, (uint64_t)v60);
  v43[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC868);
  if ((swift_dynamicCast() & 1) != 0)
  {
    __int128 v65 = v56;
    __int128 v66 = v57;
    __int128 v67 = v58;
    char v68 = v59;
    __int128 v61 = v52;
    __int128 v62 = v53;
    __int128 v63 = v54;
    __int128 v64 = v55;
    sub_1890591B8(a2);
    if (!v5)
    {
      uint64_t v38 = v48;
      (*(void (**)(char *, void, uint64_t, unint64_t))(v48 + 56))(v18, 0LL, 1LL, a2);
      (*(void (**)(char *, char *, unint64_t))(v38 + 32))(v24, v18, a2);
      (*(void (**)(char *, char *, unint64_t))(v38 + 16))(v13, v24, a2);
      swift_storeEnumTagMultiPayload();
      unint64_t v28 = v49;
      sub_18902FADC((uint64_t)v13, a2, v49, v39, v69);
      (*(void (**)(char *, unint64_t))(v38 + 8))(v24, a2);
      sub_189030230((uint64_t)&v61);
      uint64_t v26 = v50;
      uint64_t v25 = v51;
      uint64_t v33 = (uint64_t)v45;
LABEL_10:
      OptionGroup.wrappedValue.getter(v26, v36, v37, v33);
      (*(void (**)(unint64_t, unint64_t))(v28 + 24))(a2, v28);
      OptionGroup.wrappedValue.setter(v33, v26, v40, v41);
      return __swift_destroy_boxed_opaque_existential_1Tm(v25);
    }

    MEMORY[0x1895DD340](v5);
    (*(void (**)(char *, uint64_t, uint64_t, unint64_t))(v48 + 56))(v18, 1LL, 1LL, a2);
    sub_189030230((uint64_t)&v61);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    uint64_t v6 = 0LL;
  }

  else
  {
    char v59 = 0;
    __int128 v57 = 0u;
    __int128 v58 = 0u;
    __int128 v55 = 0u;
    __int128 v56 = 0u;
    __int128 v53 = 0u;
    __int128 v54 = 0u;
    __int128 v52 = 0u;
    sub_18903007C((uint64_t)&v52);
  }

  uint64_t v25 = v51;
  sub_189006BE4(v51, (uint64_t)&v61);
  uint64_t v26 = v50;
  uint64_t v27 = MEMORY[0x1895DD3F4](&unk_18906954C, v50);
  unint64_t v28 = v49;
  uint64_t v29 = v47;
  sub_1890486B8((uint64_t)&v61, v26, v27, v47);
  if (!v6)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 32))(v69, v29, v26);
    sub_189006BE4(v25, (uint64_t)v60);
    char v30 = swift_dynamicCast();
    uint64_t v33 = (uint64_t)v45;
    if ((v30 & 1) != 0)
    {
      __int128 v65 = v56;
      __int128 v66 = v57;
      __int128 v67 = v58;
      char v68 = v59;
      __int128 v61 = v52;
      __int128 v62 = v53;
      __int128 v63 = v54;
      __int128 v64 = v55;
      uint64_t v34 = v44;
      OptionGroup.wrappedValue.getter(v26, v31, v32, v44);
      __n128 v35 = sub_189059384(v34, a2, a2, v28);
      (*(void (**)(uint64_t, unint64_t, __n128))(v48 + 8))(v34, a2, v35);
      sub_189030230((uint64_t)&v61);
    }

    else
    {
      char v59 = 0;
      __int128 v57 = 0u;
      __int128 v58 = 0u;
      __int128 v55 = 0u;
      __int128 v56 = 0u;
      __int128 v53 = 0u;
      __int128 v54 = 0u;
      __int128 v52 = 0u;
      sub_18903007C((uint64_t)&v52);
    }

    goto LABEL_10;
  }

  return __swift_destroy_boxed_opaque_existential_1Tm(v25);
}

uint64_t type metadata accessor for OptionGroup(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for OptionGroup);
}

uint64_t sub_18903007C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_18C761290);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t OptionGroup.wrappedValue.getter@<X0>( uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = type metadata accessor for Parsed(0LL, v7, a2, a3);
  MEMORY[0x1895F8858](v8);
  uint64_t v10 = (char *)&v13 - v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v13 - v9, v5, v8);
  uint64_t result = sub_189067D3C();
  __break(1u);
  return result;
}

uint64_t OptionGroup.wrappedValue.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = type metadata accessor for Parsed(0LL, v6, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8LL))(v4, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL))(v4, a1, v6);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_189030230(uint64_t a1)
{
  return a1;
}

uint64_t OptionGroup.init(title:visibility:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8 = (_BYTE *)a3;
  uint64_t v12 = type metadata accessor for Parsed(0LL, a4, a3, a4);
  MEMORY[0x1895F8858](v12);
  uint64_t v14 = (uint64_t *)((char *)&v22 - v13);
  LOBYTE(v8) = *v8;
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = a4;
  uint64_t v15[3] = a5;
  v15[4] = a1;
  void v15[5] = a2;
  sub_189048624((uint64_t)sub_1890304A8, (uint64_t)v15, a4, v16, v14);
  sub_18902FADC((uint64_t)v14, a4, a5, v17, a6);
  uint64_t v19 = type metadata accessor for OptionGroup(0LL, a4, a5, v18);
  *(_BYTE *)(a6 + *(int *)(v19 + 36)) = (_BYTE)v8;
  uint64_t v20 = (void *)(a6 + *(int *)(v19 + 44));
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v20 = a1;
  v20[1] = a2;
  return result;
}

uint64_t sub_189030368( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7)
{
  unsigned __int8 v21 = 2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_188FFB780(a6, a7, &v21, a1, a2, a3);
  uint64_t v15 = v14;
  uint64_t v16 = HIBYTE(a5) & 0xF;
  if ((a5 & 0x2000000000000000LL) == 0) {
    uint64_t v16 = a4 & 0xFFFFFFFFFFFFLL;
  }
  if (!v16 || !*(void *)(v14 + 16)) {
    return v15;
  }
  uint64_t v17 = 0LL;
  unint64_t v18 = 0LL;
  while (1)
  {
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_18905E75C(v15);
      uint64_t v15 = result;
    }

    if (v18 >= *(void *)(v15 + 16)) {
      break;
    }
    uint64_t v20 = v15 + v17;
    *(void *)(v20 + 144) = a4;
    *(void *)(v20 + 152) = a5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    ++v18;
    v17 += 192LL;
    if (v18 >= *(void *)(v15 + 16)) {
      return v15;
    }
  }

  __break(1u);
  return result;
}

uint64_t sub_189030484()
{
  return swift_deallocObject();
}

uint64_t sub_1890304A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_189030368( a1,  a2,  a3,  *(void *)(v3 + 32),  *(void *)(v3 + 40),  *(void *)(v3 + 16),  *(void *)(v3 + 24));
}

uint64_t sub_1890304B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a4 + a3 - 16);
  uint64_t v5 = *(void *)(a4 + a3 - 8);
  MEMORY[0x1895F8858](a1);
  uint64_t v7 = (char *)&v14 - v6;
  (*(void (**)(char *))(v8 + 16))((char *)&v14 - v6);
  uint64_t v10 = type metadata accessor for OptionGroup(0LL, v4, v5, v9);
  return OptionGroup.wrappedValue.setter((uint64_t)v7, v10, v11, v12);
}

void (*OptionGroup.wrappedValue.modify( void *a1, uint64_t a2))(uint64_t **a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = malloc(0x30uLL);
  *a1 = v5;
  *uint64_t v5 = a2;
  v5[1] = v2;
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v5[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[3] = v7;
  size_t v8 = *(void *)(v7 + 64);
  v5[4] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v5[5] = v9;
  OptionGroup.wrappedValue.getter(a2, v10, v11, (uint64_t)v9);
  return sub_1890305C0;
}

void sub_1890305C0(uint64_t **a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *a1;
  uint64_t v5 = (void *)(*a1)[4];
  uint64_t v6 = (void *)(*a1)[5];
  if ((a2 & 1) != 0)
  {
    uint64_t v7 = v4[2];
    uint64_t v8 = v4[3];
    uint64_t v9 = *v4;
    (*(void (**)(uint64_t, void *, uint64_t))(v8 + 16))((*a1)[4], v6, v7);
    OptionGroup.wrappedValue.setter((uint64_t)v5, v9, v10, v11);
    (*(void (**)(void *, uint64_t))(v8 + 8))(v6, v7);
  }

  else
  {
    OptionGroup.wrappedValue.setter((*a1)[5], *v4, a3, a4);
  }

  free(v6);
  free(v5);
  free(v4);
}

uint64_t sub_189030658@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  return OptionGroup.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3, a4);
}

uint64_t sub_189030674@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  return sub_18902FADC(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3, a4);
}

unint64_t OptionGroup.description.getter(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1895F8858](a1);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  MEMORY[0x1895F8858](v5);
  uint64_t v9 = (char *)&v18 - v8;
  uint64_t v12 = type metadata accessor for Parsed(0LL, v3, v10, v11);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1895F8858](v12);
  uint64_t v15 = (char *)&v18 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v18 - v14, v2, v12);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    return 0xD000000000000019LL;
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v9, v15, v3);
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
    uint64_t v16 = sub_1890677FC();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  }

  return v16;
}

uint64_t OptionGroup.init(_hiddenFromHelp:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  char v4 = 1;
  return OptionGroup.init(title:visibility:)(0LL, 0xE000000000000000LL, (uint64_t)&v4, a1, a2, a3);
}

uint64_t OptionGroup.init()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v4 = 0;
  return OptionGroup.init(title:visibility:)(0LL, 0xE000000000000000LL, (uint64_t)&v4, a1, a2, a3);
}

uint64_t OptionGroup.init(visibility:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v5 = *a1;
  return OptionGroup.init(title:visibility:)(0LL, 0xE000000000000000LL, (uint64_t)&v5, a2, a3, a4);
}

uint64_t sub_189030890(uint64_t a1)
{
  uint64_t result = MEMORY[0x1895DD3F4](&protocol conformance descriptor for OptionGroup<A>);
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = result;
  return result;
}

uint64_t sub_1890308BC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v5 = type metadata accessor for OptionGroup(0LL, *(void *)(a2 + a1 - 16), *(void *)(a2 + a1 - 8), a3);
  return OptionGroup.wrappedValue.getter(v5, v6, v7, a4);
}

uint64_t sub_1890308F8()
{
  return 16LL;
}

__n128 sub_189030904(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_189030910()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_189030918(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Parsed(319LL, *(void *)(a1 + 16), a3, a4);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0LL;
  }

  return result;
}

void *sub_1890309A0(void *a1, void *a2, uint64_t a3)
{
  char v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8LL);
  if (*(void *)(v5 + 64) <= 0x10uLL) {
    uint64_t v6 = 16LL;
  }
  else {
    uint64_t v6 = *(void *)(v5 + 64);
  }
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 10) & 0xFFFFFFFFFFFFFFF8LL) + 16 > 0x18)
  {
    uint64_t v9 = *a2;
    void *v4 = *a2;
    char v4 = (void *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }

  else
  {
    unsigned int v10 = *((unsigned __int8 *)a2 + v6);
    if (v10 >= 2)
    {
      else {
        uint64_t v11 = 4LL;
      }
      __asm { BR              X13 }
    }

    uint64_t v12 = v6 + 1;
    if (v10 == 1)
    {
      uint64_t v13 = a2[1];
      void *v4 = *a2;
      v4[1] = v13;
      swift_retain();
      char v14 = 1;
    }

    else
    {
      (*(void (**)(void *, void *))(v5 + 16))(a1, a2);
      char v14 = 0;
    }

    *((_BYTE *)v4 + v6) = v14;
    uint64_t v15 = (char *)v4 + v12;
    *uint64_t v15 = *((_BYTE *)a2 + v12);
    v15[1] = *((_BYTE *)a2 + v12 + 1);
    uint64_t v16 = (void *)(((unint64_t)v4 + v12 + 9) & 0xFFFFFFFFFFFFFFF8LL);
    uint64_t v17 = (void *)(((unint64_t)a2 + v12 + 9) & 0xFFFFFFFFFFFFFFF8LL);
    *uint64_t v16 = *v17;
    v16[1] = v17[1];
    swift_bridgeObjectRetain();
  }

  return v4;
}

uint64_t sub_189030B10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8LL);
  if (*(void *)(v2 + 64) <= 0x10uLL) {
    uint64_t v3 = 16LL;
  }
  else {
    uint64_t v3 = *(void *)(v2 + 64);
  }
  unsigned int v4 = *(unsigned __int8 *)(a1 + v3);
  if (v4 >= 2)
  {
    else {
      uint64_t v5 = 4LL;
    }
    __asm { BR              X13 }
  }

  if (v4 == 1) {
    swift_release();
  }
  else {
    (*(void (**)(uint64_t))(v2 + 8))(a1);
  }
  return swift_bridgeObjectRelease();
}

void *sub_189030BE4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8LL);
  if (*(void *)(v5 + 64) <= 0x10uLL) {
    uint64_t v6 = 16LL;
  }
  else {
    uint64_t v6 = *(void *)(v5 + 64);
  }
  unsigned int v7 = *((unsigned __int8 *)a2 + v6);
  if (v7 >= 2)
  {
    else {
      uint64_t v8 = 4LL;
    }
    __asm { BR              X13 }
  }

  if (v7 == 1)
  {
    uint64_t v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    swift_retain();
    char v10 = 1;
  }

  else
  {
    (*(void (**)(void *, void *))(v5 + 16))(a1, a2);
    char v10 = 0;
  }

  *((_BYTE *)a1 + v6) = v10;
  uint64_t v11 = (char *)a1 + v6 + 1;
  uint64_t v12 = (char *)a2 + v6 + 1;
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  uint64_t v13 = (void *)((unint64_t)(v11 + 9) & 0xFFFFFFFFFFFFFFF8LL);
  char v14 = (void *)((unint64_t)(v12 + 9) & 0xFFFFFFFFFFFFFFF8LL);
  *uint64_t v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_189030D0C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (*(void *)(v6 + 64) <= 0x10uLL) {
    uint64_t v7 = 16LL;
  }
  else {
    uint64_t v7 = *(void *)(v6 + 64);
  }
  if (a1 != a2)
  {
    unsigned int v8 = *((unsigned __int8 *)a1 + v7);
    if (v8 >= 2)
    {
      else {
        uint64_t v9 = 4LL;
      }
      __asm { BR              X12 }
    }

    if (v8 == 1) {
      swift_release();
    }
    else {
      (*(void (**)(void *, void))(v6 + 8))(a1, *(void *)(a3 + 16));
    }
    unsigned int v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 2)
    {
      else {
        uint64_t v11 = 4LL;
      }
      __asm { BR              X12 }
    }

    if (v10 == 1)
    {
      uint64_t v12 = a2[1];
      *a1 = *a2;
      a1[1] = v12;
      *((_BYTE *)a1 + v7) = 1;
      swift_retain();
    }

    else
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
      *((_BYTE *)a1 + v7) = 0;
    }
  }

  uint64_t v13 = (char *)a1 + v7 + 1;
  char v14 = (char *)a2 + v7 + 1;
  *uint64_t v13 = *v14;
  v13[1] = v14[1];
  uint64_t v15 = (void *)((unint64_t)(v13 + 9) & 0xFFFFFFFFFFFFFFF8LL);
  uint64_t v16 = (void *)((unint64_t)(v14 + 9) & 0xFFFFFFFFFFFFFFF8LL);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_189030EE8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8LL);
  if (*(void *)(v5 + 64) <= 0x10uLL) {
    uint64_t v6 = 16LL;
  }
  else {
    uint64_t v6 = *(void *)(v5 + 64);
  }
  unsigned int v7 = *((unsigned __int8 *)a2 + v6);
  if (v7 >= 2)
  {
    else {
      uint64_t v8 = 4LL;
    }
    __asm { BR              X13 }
  }

  if (v7 == 1)
  {
    *a1 = *a2;
    char v9 = 1;
  }

  else
  {
    (*(void (**)(_OWORD *, _OWORD *))(v5 + 32))(a1, a2);
    char v9 = 0;
  }

  *((_BYTE *)a1 + v6) = v9;
  unsigned int v10 = (char *)a1 + v6 + 1;
  uint64_t v11 = (char *)a2 + v6 + 1;
  *unsigned int v10 = *v11;
  v10[1] = v11[1];
  *(_OWORD *)((unint64_t)(v10 + 9) & 0xFFFFFFFFFFFFF8LL) = *(_OWORD *)((unint64_t)(v11 + 9) & 0xFFFFFFFFFFFFF8LL);
  return a1;
}

_OWORD *sub_189031000(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (*(void *)(v6 + 64) <= 0x10uLL) {
    uint64_t v7 = 16LL;
  }
  else {
    uint64_t v7 = *(void *)(v6 + 64);
  }
  if (a1 != a2)
  {
    unsigned int v8 = *((unsigned __int8 *)a1 + v7);
    if (v8 >= 2)
    {
      else {
        uint64_t v9 = 4LL;
      }
      __asm { BR              X12 }
    }

    if (v8 == 1) {
      swift_release();
    }
    else {
      (*(void (**)(_OWORD *, void))(v6 + 8))(a1, *(void *)(a3 + 16));
    }
    unsigned int v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 2)
    {
      else {
        uint64_t v11 = 4LL;
      }
      __asm { BR              X12 }
    }

    if (v10 == 1)
    {
      *a1 = *a2;
      char v12 = 1;
    }

    else
    {
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v6 + 32))(a1, a2, v5);
      char v12 = 0;
    }

    *((_BYTE *)a1 + v7) = v12;
  }

  uint64_t v13 = (char *)a1 + v7 + 1;
  char v14 = (char *)a2 + v7 + 1;
  *uint64_t v13 = *v14;
  v13[1] = v14[1];
  uint64_t v15 = (void *)((unint64_t)(v13 + 9) & 0xFFFFFFFFFFFFFFF8LL);
  uint64_t v16 = (void *)((unint64_t)(v14 + 9) & 0xFFFFFFFFFFFFFFF8LL);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRelease();
  return a1;
}

void sub_1890311D0(unsigned int *a1, int a2, int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8LL) + 64LL);
  if (v5 <= 0x10) {
    unint64_t v5 = 16LL;
  }
  if (a3 < 0)
  {
    unsigned int v7 = a3 - 2147483646;
    if ((((_DWORD)v5 + 10) & 0xFFFFFFF8) != 0xFFFFFFF0) {
      unsigned int v7 = 2;
    }
    if (v7 >= 0x10000) {
      int v8 = 4;
    }
    else {
      int v8 = 2;
    }
    if (v7 < 0x100) {
      int v6 = 1;
    }
    else {
      int v6 = v8;
    }
    if ((a2 & 0x80000000) == 0) {
LABEL_5:
    }
      __asm { BR              X11 }
  }

  else
  {
    int v6 = 0u;
    if ((a2 & 0x80000000) == 0) {
      goto LABEL_5;
    }
  }

  if ((((_DWORD)v5 + 10) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    unsigned int v9 = a2 ^ 0x80000000;
    bzero(a1, ((v5 + 10) & 0xFFFFFFFFFFFFFFF8LL) + 16);
    *a1 = v9;
  }

  __asm { BR              X10 }

void sub_1890312EC(uint64_t a1, int a2)
{
  *(_DWORD *)(v2 + v3) = 0;
  if (!a2) {
    JUMPOUT(0x1890312D8LL);
  }
  JUMPOUT(0x1890312C4LL);
}

void sub_1890312F8()
{
  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1890312D8LL);
}

void sub_189031300()
{
  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1890312D8LL);
}

uint64_t static CleanExit.helpRequest(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = swift_getDynamicType();
  uint64_t v5 = a1[4];
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v5;
  *(_BYTE *)(a2 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 0;
  return result;
}

ArgumentParserInternal::ValidationError __swiftcall ValidationError.init(_:)( ArgumentParserInternal::ValidationError result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t ValidationError.description.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_18903138C()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ExitCode.rawValue.getter()
{
  return *v0;
}

uint64_t ExitCode.rawValue.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*ExitCode.rawValue.modify())(void)
{
  return nullsub_1;
}

uint64_t ExitCode.init(_:)@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t ExitCode.init(rawValue:)@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

void static ExitCode.success.getter(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

void static ExitCode.failure.getter(_DWORD *a1@<X8>)
{
  *a1 = 1;
}

void static ExitCode.validationFailure.getter(_DWORD *a1@<X8>)
{
  *a1 = 64;
}

BOOL ExitCode.isSuccess.getter()
{
  return *v0 == 0;
}

uint64_t sub_189031418()
{
  return sub_18906800C();
}

_DWORD *sub_18903145C@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

void sub_18903146C(_DWORD *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_189031478()
{
  return sub_189068060();
}

uint64_t sub_1890314BC()
{
  return sub_189068054();
}

uint64_t sub_1890314E4()
{
  return sub_189068060();
}

BOOL sub_189031524(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

uint64_t static CleanExit.helpRequest(_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = result;
  *(void *)(a3 + 8) = a2;
  *(_BYTE *)(a3 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 0;
  return result;
}

uint64_t static CleanExit.message(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = a2;
  *(_BYTE *)(a3 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 1;
  return swift_bridgeObjectRetain();
}

uint64_t CleanExit.description.getter()
{
  if (!*((_BYTE *)v0 + 16)) {
    return 0x706C65682D2DLL;
  }
  if (*((_BYTE *)v0 + 16) != 1) {
    return 0xD000000000000018LL;
  }
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_1890315C8()
{
  unint64_t result = qword_18C761348;
  if (!qword_18C761348)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&protocol conformance descriptor for ExitCode, &type metadata for ExitCode);
    atomic_store(result, (unint64_t *)&qword_18C761348);
  }

  return result;
}

uint64_t sub_18903160C()
{
  if (!*((_BYTE *)v0 + 16)) {
    return 0x706C65682D2DLL;
  }
  if (*((_BYTE *)v0 + 16) != 1) {
    return 0xD000000000000018LL;
  }
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

ValueMetadata *type metadata accessor for ValidationError()
{
  return &type metadata for ValidationError;
}

ValueMetadata *type metadata accessor for ExitCode()
{
  return &type metadata for ExitCode;
}

uint64_t sub_18903169C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1890316B4(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

ValueMetadata *type metadata accessor for CleanExit()
{
  return &type metadata for CleanExit;
}

uint64_t destroy for CleanExit.Representation(uint64_t a1)
{
  return sub_1890316B4(*(void *)a1, *(void *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s22ArgumentParserInternal9CleanExitV14RepresentationOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(_BYTE *)(a2 + 16);
  sub_18903169C(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v5;
  return a1;
}

uint64_t _s22ArgumentParserInternal9CleanExitV14RepresentationOwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(_BYTE *)(a2 + 16);
  sub_18903169C(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v5;
  sub_1890316B4(v6, v7, v8);
  return a1;
}

uint64_t _s22ArgumentParserInternal9CleanExitV14RepresentationOwta_0(uint64_t a1, uint64_t a2)
{
  char v3 = *(_BYTE *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v3;
  sub_1890316B4(v4, v5, v6);
  return a1;
}

uint64_t _s22ArgumentParserInternal9CleanExitV14RepresentationOwet_0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t _s22ArgumentParserInternal9CleanExitV14RepresentationOwst_0( uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 0;
    *(void *)uint64_t result = a2 - 254;
    *(void *)(result + 8) = 0LL;
    if (a3 >= 0xFE) {
      *(_BYTE *)(result + 17) = 1;
    }
  }

  else
  {
    if (a3 >= 0xFE) {
      *(_BYTE *)(result + 17) = 0;
    }
    if (a2) {
      *(_BYTE *)(result + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = -(char)a2;
    }
  }

  return result;
}

uint64_t sub_189031868(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_189031870(uint64_t result, char a2)
{
  *(_BYTE *)(result + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for CleanExit.Representation()
{
  return &type metadata for CleanExit.Representation;
}

unint64_t sub_189031888()
{
  unint64_t result = qword_18C761350;
  if (!qword_18C761350)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&protocol conformance descriptor for ExitCode, &type metadata for ExitCode);
    atomic_store(result, (unint64_t *)&qword_18C761350);
  }

  return result;
}

unint64_t sub_1890318CC()
{
  unint64_t result = qword_18C761358;
  if (!qword_18C761358)
  {
    unint64_t result = MEMORY[0x1895DD3F4](MEMORY[0x18961A488], MEMORY[0x18961A458]);
    atomic_store(result, (unint64_t *)&qword_18C761358);
  }

  return result;
}

void static ArgumentHelp.private.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0LL;
  *(void *)(a1 + 8) = 0xE000000000000000LL;
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 0LL;
  *(void *)(a1 + 24) = 0xE000000000000000LL;
  *(void *)(a1 + 32) = 0LL;
  *(void *)(a1 + 40) = 0LL;
  *(_BYTE *)(a1 + 48) = 2;
}

void __swiftcall ArgumentHelp.init(stringLiteral:)( ArgumentParserInternal::ArgumentHelp *__return_ptr retstr, Swift::String stringLiteral)
{
  retstr->abstract = stringLiteral;
  retstr->discussion._uint64_t countAndFlagsBits = 0LL;
  retstr->discussion._object = (void *)0xE000000000000000LL;
  retstr->valueName.value._uint64_t countAndFlagsBits = 0LL;
  retstr->valueName.value._object = 0LL;
  retstr->visibility.base = ArgumentParserInternal_ArgumentVisibility_Representation_default;
}

uint64_t ArgumentHelp.abstract.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ArgumentHelp.abstract.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *__int16 v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ArgumentHelp.abstract.modify())(void)
{
  return nullsub_1;
}

uint64_t ArgumentHelp.discussion.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ArgumentHelp.discussion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ArgumentHelp.discussion.modify())(void)
{
  return nullsub_1;
}

uint64_t ArgumentHelp.valueName.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ArgumentHelp.valueName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*ArgumentHelp.valueName.modify())(void)
{
  return nullsub_1;
}

void ArgumentHelp.visibility.getter(_BYTE *a1@<X8>)
{
  *a1 = *(_BYTE *)(v1 + 48);
}

_BYTE *ArgumentHelp.visibility.setter(_BYTE *result)
{
  *(_BYTE *)(v1 + 48) = *result;
  return result;
}

uint64_t (*ArgumentHelp.visibility.modify())(void)
{
  return nullsub_1;
}

BOOL ArgumentHelp.shouldDisplay.getter()
{
  return *(_BYTE *)(v0 + 48) == 0;
}

uint64_t ArgumentHelp.shouldDisplay.setter(uint64_t result)
{
  *(_BYTE *)(v1 + 48) = result ^ 1;
  return result;
}

_BYTE *(*ArgumentHelp.shouldDisplay.modify(uint64_t a1))(_BYTE *result)
{
  *(void *)a1 = v1;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(v1 + 48) == 0;
  return sub_189031B04;
}

_BYTE *sub_189031B04(_BYTE *result)
{
  *(_BYTE *)(*(void *)result + 48LL) = (result[8] & 1) == 0;
  return result;
}

void __swiftcall ArgumentHelp.init(_:discussion:valueName:shouldDisplay:)( ArgumentParserInternal::ArgumentHelp *__return_ptr retstr, Swift::String _, Swift::String discussion, Swift::String_optional valueName, Swift::Bool shouldDisplay)
{
  retstr->abstract = _;
  retstr->discussion = discussion;
  retstr->valueName = valueName;
  retstr->visibility.base = !shouldDisplay;
}

void __swiftcall ArgumentHelp.init(_:discussion:valueName:visibility:)( ArgumentParserInternal::ArgumentHelp *__return_ptr retstr, Swift::String _, Swift::String discussion, Swift::String_optional valueName, ArgumentParserInternal::ArgumentVisibility visibility)
{
  ArgumentParserInternal::ArgumentVisibility::Representation v5 = *(_BYTE *)visibility.base;
  retstr->abstract = _;
  retstr->discussion = discussion;
  retstr->valueName = valueName;
  retstr->visibility.base = v5;
}

void static ArgumentHelp.hidden.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0LL;
  *(void *)(a1 + 8) = 0xE000000000000000LL;
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 0LL;
  *(void *)(a1 + 24) = 0xE000000000000000LL;
  *(void *)(a1 + 32) = 0LL;
  *(void *)(a1 + 40) = 0LL;
  *(_BYTE *)(a1 + 48) = 1;
}

unint64_t sub_189031B6C()
{
  unint64_t result = qword_18C761360;
  if (!qword_18C761360)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&protocol conformance descriptor for ArgumentHelp, &type metadata for ArgumentHelp);
    atomic_store(result, (unint64_t *)&qword_18C761360);
  }

  return result;
}

uint64_t sub_189031BB0()
{
  return MEMORY[0x189619FF8];
}

uint64_t sub_189031BBC()
{
  return sub_189067FAC();
}

unint64_t sub_189031BD4()
{
  unint64_t result = qword_18C761368;
  if (!qword_18C761368)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&protocol conformance descriptor for ArgumentHelp, &type metadata for ArgumentHelp);
    atomic_store(result, (unint64_t *)&qword_18C761368);
  }

  return result;
}

uint64_t sub_189031C18()
{
  return MEMORY[0x189618028];
}

unint64_t sub_189031C2C()
{
  unint64_t result = qword_18C761370;
  if (!qword_18C761370)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&protocol conformance descriptor for ArgumentHelp, &type metadata for ArgumentHelp);
    atomic_store(result, (unint64_t *)&qword_18C761370);
  }

  return result;
}

uint64_t sub_189031C70()
{
  return MEMORY[0x189618038];
}

uint64_t sub_189031C7C()
{
  return MEMORY[0x189618030];
}

void *sub_189031C88@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = result[1];
  *(void *)a2 = *result;
  *(void *)(a2 + 8) = v2;
  *(void *)(a2 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 0LL;
  *(void *)(a2 + 24) = 0xE000000000000000LL;
  *(void *)(a2 + 32) = 0LL;
  *(void *)(a2 + 40) = 0LL;
  *(_BYTE *)(a2 + 48) = 0;
  return result;
}

uint64_t sub_189031CA4@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 48) == 0;
  return result;
}

_BYTE *sub_189031CB8(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(a2 + 48) = (*result & 1) == 0;
  return result;
}

uint64_t initializeWithCopy for ArgumentHelp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ArgumentHelp(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  __int128 v3 = *(_OWORD *)(a2 + 16);
  __int128 v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ArgumentHelp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArgumentHelp(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 49)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ArgumentHelp(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0LL;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 49) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 49) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for ArgumentHelp()
{
  return &type metadata for ArgumentHelp;
}

void static ArgumentVisibility.default.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

void static ArgumentVisibility.hidden.getter(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

void static ArgumentVisibility.private.getter(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t ArgumentVisibility.hash(into:)()
{
  return sub_18906803C();
}

BOOL static ArgumentVisibility.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ArgumentVisibility.hashValue.getter()
{
  return sub_189068060();
}

unint64_t sub_189031F80()
{
  unint64_t result = qword_18C761378;
  if (!qword_18C761378)
  {
    unint64_t result = MEMORY[0x1895DD3F4]( &protocol conformance descriptor for ArgumentVisibility,  &type metadata for ArgumentVisibility);
    atomic_store(result, (unint64_t *)&qword_18C761378);
  }

  return result;
}

ValueMetadata *type metadata accessor for ArgumentVisibility()
{
  return &type metadata for ArgumentVisibility;
}

uint64_t getEnumTagSinglePayload for HelpRequested(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }

  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }

    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }

uint64_t _s22ArgumentParserInternal18ArgumentVisibilityV14RepresentationOwst_0( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFD) {
    return ((uint64_t (*)(void))((char *)&loc_1890320B8 + 4 * byte_189069985[v4]))();
  }
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1890320EC + 4 * asc_189069980[v4]))();
}

uint64_t sub_1890320EC(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1890320F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x1890320FCLL);
  }
  return result;
}

uint64_t sub_189032108(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x189032110LL);
  }
  *(_BYTE *)unint64_t result = a2 + 2;
  return result;
}

uint64_t sub_189032114(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_18903211C(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_189032128(_BYTE *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for ArgumentVisibility.Representation()
{
  return &type metadata for ArgumentVisibility.Representation;
}

unint64_t sub_189032144()
{
  unint64_t result = qword_18C761380;
  if (!qword_18C761380)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&unk_189069A84, &type metadata for ArgumentVisibility.Representation);
    atomic_store(result, (unint64_t *)&qword_18C761380);
  }

  return result;
}

uint64_t static NameSpecification.long.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_188FFD338((uint64_t)&unk_18A3391F0);
  swift_bridgeObjectRelease();
  uint64_t result = swift_arrayDestroy();
  *a1 = v2;
  return result;
}

uint64_t NameSpecification.init(arrayLiteral:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_188FFD338(a1);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

double static NameSpecification.Element.short.getter@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = 1LL;
  *(_OWORD *)a1 = xmmword_1890694A0;
  *(_BYTE *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 0x80;
  return result;
}

void static NameSpecification.Element.long.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0LL;
  *(void *)(a1 + 8) = 0LL;
  *(_BYTE *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 0x80;
}

uint64_t static NameSpecification.Element.customLong(_:withSingleDash:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  *(void *)a4 = a1;
  *(void *)(a4 + 8) = a2;
  *(_BYTE *)(a4 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = a3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_189032298(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v5 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000LL) == 0) {
    uint64_t v5 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (v5)
  {
    sub_189067904();
    uint64_t v16 = a1;
    swift_bridgeObjectRetain();
    sub_18906776C();
    swift_bridgeObjectRelease();
    sub_18906788C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    unint64_t v8 = sub_189058224(1uLL, a3, a4);
    uint64_t v10 = v9;
    uint64_t v12 = v11;
    uint64_t v14 = v13;
    swift_bridgeObjectRelease();
    MEMORY[0x1895DC8B4](v8, v10, v12, v14);
    sub_18906788C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v16;
  }

  else
  {
    swift_bridgeObjectRetain();
  }

  return a1;
}

unint64_t sub_1890323BC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = sub_1890680CC();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1895F8858](v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v28 = a3;
  unint64_t v29 = a4;
  uint64_t v24 = 45LL;
  unint64_t v25 = 0xE100000000000000LL;
  sub_188FFCC74();
  if ((sub_189067B38() & 1) != 0) {
    goto LABEL_23;
  }
  uint64_t v24 = 95LL;
  unint64_t v25 = 0xE100000000000000LL;
  if ((sub_189067B38() & 1) != 0) {
    goto LABEL_23;
  }
  sub_189058654(a3, a4);
  if (!v12) {
    goto LABEL_23;
  }
  char v13 = sub_189067778();
  swift_bridgeObjectRelease();
  if ((v13 & 1) == 0) {
    goto LABEL_23;
  }
  uint64_t v14 = HIBYTE(a4) & 0xF;
  uint64_t v24 = a3;
  unint64_t v25 = a4;
  if ((a4 & 0x2000000000000000LL) == 0) {
    uint64_t v14 = a3 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v26 = 0LL;
  uint64_t v27 = v14;
  swift_bridgeObjectRetain_n();
  uint64_t v15 = sub_1890678A4();
  if (!v16)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_23:
    uint64_t v24 = a1;
    unint64_t v25 = a2;
    swift_bridgeObjectRetain();
    sub_18906788C();
    sub_18906788C();
    return v24;
  }

  unint64_t v17 = v15;
  unint64_t v18 = v16;
  while (1)
  {
    if ((sub_18906779C() & 1) == 0) {
      goto LABEL_13;
    }
    unint64_t result = sub_1890334F4(v17, v18);
    if ((result & 0x100000000LL) != 0) {
      break;
    }
    sub_1890680D8();
    char v20 = sub_1890680B4();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    if ((v20 & 1) != 0) {
      goto LABEL_24;
    }
LABEL_13:
    if ((sub_189067790() & 1) != 0)
    {
      if ((sub_18906779C() & 1) != 0)
      {
        unint64_t result = sub_1890334F4(v17, v18);
        if ((result & 0x100000000LL) != 0) {
          goto LABEL_27;
        }
        sub_1890680D8();
        char v21 = sub_1890680C0();
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
        if ((v21 & 1) != 0) {
          goto LABEL_24;
        }
      }

      if ((sub_189067790() & 1) == 0)
      {
LABEL_24:
        swift_bridgeObjectRelease();
LABEL_25:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return sub_189032298(a1, a2, v28, v29);
      }

      char v22 = sub_189067784();
      swift_bridgeObjectRelease();
      if ((v22 & 1) == 0) {
        goto LABEL_25;
      }
    }

    else
    {
      swift_bridgeObjectRelease();
    }

    unint64_t v17 = sub_1890678A4();
    unint64_t v18 = v23;
    if (!v23) {
      goto LABEL_22;
    }
  }

  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1890326A8(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 >> 6 && a4 >> 6 != 1) {
    return sub_18906803C();
  }
  sub_18906803C();
  sub_1890677A8();
  return sub_189068048();
}

uint64_t sub_189032750(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 >> 6 && a3 >> 6 != 1)
  {
    sub_18906803C();
  }

  else
  {
    sub_18906803C();
    sub_1890677A8();
    sub_189068048();
  }

  return sub_189068060();
}

uint64_t sub_189032828()
{
  return sub_189032750(*(void *)v0, *(void *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

uint64_t sub_189032834(uint64_t a1)
{
  return sub_1890326A8(a1, *(void *)v1, *(void *)(v1 + 8), *(_BYTE *)(v1 + 16));
}

uint64_t sub_189032840()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + 16);
  sub_189068030();
  sub_18906803C();
  if (v1 >> 6 <= 1)
  {
    sub_1890677A8();
    sub_189068048();
  }

  return sub_189068060();
}

uint64_t sub_18903290C(uint64_t a1, uint64_t a2)
{
  return sub_1890337E8( *(void *)a1,  *(void *)(a1 + 8),  *(_BYTE *)(a1 + 16),  *(void *)a2,  *(void *)(a2 + 8),  *(_BYTE *)(a2 + 16));
}

uint64_t static NameSpecification.Element.customShort(_:allowingJoined:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  *(void *)a4 = a1;
  *(void *)(a4 + 8) = a2;
  *(_BYTE *)(a4 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = a3 | 0x40;
  return swift_bridgeObjectRetain();
}

uint64_t NameSpecification.Element.hash(into:)()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  unsigned int v3 = *(unsigned __int8 *)(v0 + 16);
  if (v3 >> 6)
  {
    if (v3 >> 6 == 1)
    {
      sub_18906803C();
      sub_1890677A8();
      return sub_189068048();
    }

    else
    {
      return sub_18906803C();
    }
  }

  else
  {
    sub_18906803C();
    swift_bridgeObjectRetain();
    sub_1890677A8();
    sub_189068048();
    return sub_188FFD504(v1, v2, v3);
  }

uint64_t NameSpecification.Element.hashValue.getter()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  unsigned int v3 = *(unsigned __int8 *)(v0 + 16);
  sub_189068030();
  if (v3 >> 6)
  {
    sub_18906803C();
    if (v3 >> 6 == 1)
    {
      sub_1890677A8();
      sub_189068048();
    }
  }

  else
  {
    sub_18906803C();
    swift_bridgeObjectRetain();
    sub_1890677A8();
    sub_189068048();
    sub_188FFD504(v1, v2, v3);
  }

  return sub_189068060();
}

uint64_t sub_189032B28()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  unsigned int v3 = *(unsigned __int8 *)(v0 + 16);
  sub_189068030();
  if (v3 >> 6)
  {
    sub_18906803C();
    if (v3 >> 6 == 1)
    {
      sub_1890677A8();
      sub_189068048();
    }
  }

  else
  {
    sub_18906803C();
    swift_bridgeObjectRetain();
    sub_1890677A8();
    sub_189068048();
    sub_188FFD504(v1, v2, v3);
  }

  return sub_189068060();
}

uint64_t NameSpecification.init<A>(_:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  unint64_t v8 = sub_1890339B4();
  uint64_t v9 = sub_189023C84(a2, a3, v8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8LL))(a1, a2);
  *a4 = v9;
  return result;
}

uint64_t sub_189032C84@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_188FFD338(a1);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t static NameSpecification.customLong(_:withSingleDash:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t *a4@<X8>)
{
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 32) = a1;
  *(_OWORD *)(inited + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = xmmword_1890684B0;
  *(void *)(inited + 40) = a2;
  *(_BYTE *)(inited + 48) = a3;
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_188FFD338(inited);
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  uint64_t result = swift_arrayDestroy();
  *a4 = v9;
  return result;
}

uint64_t static NameSpecification.short.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_188FFD338((uint64_t)&unk_18A3392F8);
  swift_bridgeObjectRelease();
  uint64_t result = swift_arrayDestroy();
  *a1 = v2;
  return result;
}

uint64_t static NameSpecification.customShort(_:allowingJoined:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t *a4@<X8>)
{
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = xmmword_1890684B0;
  *(void *)(inited + 32) = a1;
  *(void *)(inited + 40) = a2;
  *(_BYTE *)(inited + 48) = a3 | 0x40;
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_188FFD338(inited);
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  uint64_t result = swift_arrayDestroy();
  *a4 = v9;
  return result;
}

uint64_t static NameSpecification.shortAndLong.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_188FFD338((uint64_t)&unk_18A339330);
  swift_bridgeObjectRelease();
  uint64_t result = swift_arrayDestroy();
  *a1 = v2;
  return result;
}

uint64_t sub_189032F5C( uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7)
{
  uint64_t v7 = *(void *)(a4 + 16);
  if (v7)
  {
    uint64_t v10 = HIBYTE(a6) & 0xF;
    if ((a6 & 0x2000000000000000LL) == 0) {
      uint64_t v10 = a5 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v53 = v10;
    swift_bridgeObjectRetain_n();
    uint64_t v11 = (char *)(a4 + 48);
    uint64_t v12 = (char *)MEMORY[0x18961AFE8];
    while (1)
    {
      uint64_t v15 = *((void *)v11 - 2);
      unint64_t v14 = *((void *)v11 - 1);
      unsigned int v16 = *v11;
      unsigned int v17 = v16 >> 6;
      if (!(v16 >> 6))
      {
        sub_188FFD4F4(*((void *)v11 - 2), *((void *)v11 - 1), *v11);
        unint64_t v19 = sub_1890323BC(a1, a2, v15, v14);
        unint64_t v21 = v20;
        sub_188FFD504(v15, v14, v16);
        char v18 = (_BYTE)v16 << 7;
        uint64_t v15 = v19;
        unint64_t v14 = v21;
        goto LABEL_35;
      }

      if (v17 == 1)
      {
        if ((a3 & 1) != 0) {
          goto LABEL_10;
        }
      }

      else
      {
        if (!(v14 | v15) && v16 == 128)
        {
          if (v53)
          {
            swift_bridgeObjectRetain();
            sub_189067904();
            swift_bridgeObjectRetain();
            sub_18906776C();
            swift_bridgeObjectRelease();
            sub_18906788C();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRetain();
            unint64_t v22 = sub_189058224(1uLL, a5, a6);
            uint64_t v24 = v23;
            uint64_t v26 = v25;
            uint64_t v28 = v27;
            swift_bridgeObjectRelease();
            MEMORY[0x1895DC8B4](v22, v24, v26, v28);
            sub_18906788C();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v30 = a1;
            unint64_t v29 = a2;
          }

          else
          {
            unint64_t v29 = a2;
            swift_bridgeObjectRetain();
            uint64_t v30 = a1;
          }

          if ((v29 & 0x2000000000000000LL) != 0) {
            uint64_t v32 = HIBYTE(v29) & 0xF;
          }
          else {
            uint64_t v32 = v30 & 0xFFFFFFFFFFFFLL;
          }
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v32)
          {
            swift_bridgeObjectRetain();
            uint64_t v33 = sub_189067904();
            uint64_t v35 = v34;
            swift_bridgeObjectRelease();
            if (v33 == 95 && v35 == 0xE100000000000000LL)
            {
              swift_bridgeObjectRelease();
              goto LABEL_29;
            }

            char v36 = sub_189067F10();
            swift_bridgeObjectRelease();
            if ((v36 & 1) != 0)
            {
LABEL_29:
              unint64_t v37 = sub_189058224(1uLL, v30, v29);
              uint64_t v39 = v38;
              uint64_t v41 = v40;
              uint64_t v43 = v42;
              swift_bridgeObjectRelease();
              uint64_t v30 = MEMORY[0x1895DC8B4](v37, v39, v41, v43);
              unint64_t v29 = v44;
              swift_bridgeObjectRelease();
            }
          }

          swift_bridgeObjectRetain();
          int v45 = (char *)a7;
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            int v45 = sub_189056E74(0LL, *(void *)(a7 + 16) + 1LL, 1, (char *)a7);
          }
          unint64_t v47 = *((void *)v45 + 2);
          unint64_t v46 = *((void *)v45 + 3);
          if (v47 >= v46 >> 1) {
            int v45 = sub_189056E74((char *)(v46 > 1), v47 + 1, 1, v45);
          }
          *((void *)v45 + 2) = v47 + 1;
          uint64_t v48 = &v45[16 * v47];
          *((void *)v48 + 4) = a5;
          *((void *)v48 + 5) = a6;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          uint64_t v15 = sub_188FFDD70(45LL, 0xE100000000000000LL, v30, v29);
          unint64_t v14 = v49;
          swift_bridgeObjectRelease();
          sub_188FFD4F4(0LL, 0LL, 128);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_188FFD504(0LL, 0LL, 128);
          char v18 = 0;
LABEL_35:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v12 = sub_189057094(0LL, *((void *)v12 + 2) + 1LL, 1, v12);
          }
          unint64_t v51 = *((void *)v12 + 2);
          unint64_t v50 = *((void *)v12 + 3);
          if (v51 >= v50 >> 1) {
            uint64_t v12 = sub_189057094((char *)(v50 > 1), v51 + 1, 1, v12);
          }
          *((void *)v12 + 2) = v51 + 1;
          char v13 = &v12[24 * v51];
          *((void *)v13 + 4) = v15;
          *((void *)v13 + 5) = v14;
          v13[48] = v18;
          goto LABEL_6;
        }

        if ((a3 & 1) != 0)
        {
          if (v17 == 2)
          {
            if (!v53)
            {
              sub_188FFD4F4(1LL, 0LL, 128);
              sub_189067C28();
              sub_18906788C();
              swift_bridgeObjectRetain();
              sub_18906788C();
              swift_bridgeObjectRelease();
              sub_18906788C();
              uint64_t result = sub_189067D3C();
              __break(1u);
              return result;
            }

            sub_188FFD4F4(1LL, 0LL, 128);
            swift_bridgeObjectRetain();
            uint64_t v15 = sub_189067904();
            unint64_t v14 = v31;
            swift_bridgeObjectRelease();
            sub_188FFD504(1LL, 0LL, 128);
            char v18 = 64;
          }

          else
          {
LABEL_10:
            char v18 = v16 & 1 | 0x40;
            sub_188FFD4F4(*((void *)v11 - 2), *((void *)v11 - 1), *v11);
          }

          goto LABEL_35;
        }
      }

unint64_t sub_1890334F4(unint64_t a1, unint64_t a2)
{
  if ((a2 & 0x2000000000000000LL) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    sub_1890335D0(0xFuLL, a1, a2);
    if ((a2 & 0x1000000000000000LL) != 0)
    {
      unsigned int v5 = sub_189067C1C();
    }

    else
    {
      if ((a2 & 0x2000000000000000LL) == 0 && (a1 & 0x1000000000000000LL) == 0) {
        sub_189067C70();
      }
      unsigned int v5 = sub_189067C7C();
    }
  }

  else
  {
    unsigned int v5 = 0;
  }

  return v5 | ((unint64_t)(v2 == 0) << 32);
}

unint64_t sub_1890335D0(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000LL) == 0) {
    LOBYTE(v5) = 1;
  }
  if ((result & 1) == 0 || (result & 0xC) == 4LL << v5) {
    goto LABEL_9;
  }
  unint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000LL) == 0) {
    unint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6 <= result >> 16)
  {
    __break(1u);
LABEL_9:
    uint64_t result = sub_18903366C(result, a2, a3);
    if ((result & 1) == 0) {
      return result & 0xC | sub_1890336D8(result, a2, a3) & 0xFFFFFFFFFFFFFFF3LL | 1;
    }
  }

  return result;
}

unint64_t sub_18903366C(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000LL) == 0) {
    LOBYTE(v5) = 1;
  }
  if ((result & 0xC) == 4LL << v5) {
    uint64_t result = sub_18902621C(result, a2, a3);
  }
  unint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000LL) == 0) {
    unint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6 <= result >> 16) {
    __break(1u);
  }
  return result;
}

unint64_t sub_1890336D8(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0xC000) != 0 || result < 0x10000)
  {
    result &= 0xFFFFFFFFFFFF0000LL;
  }

  else
  {
    unint64_t v5 = result >> 16;
    if ((a3 & 0x1000000000000000LL) == 0)
    {
      void v13[2] = v3;
      uint64_t v13[3] = v4;
      if ((a3 & 0x2000000000000000LL) != 0)
      {
        v13[0] = a2;
        v13[1] = a3 & 0xFFFFFFFFFFFFFFLL;
        if (v5 != (HIBYTE(a3) & 0xF) && (*((_BYTE *)v13 + v5) & 0xC0) == 0x80)
        {
          do
          {
            unint64_t v7 = v5 - 1;
            int v11 = *((_BYTE *)&v12 + v5-- + 7) & 0xC0;
          }

          while (v11 == 128);
          return v7 << 16;
        }

        goto LABEL_14;
      }

      if ((a2 & 0x1000000000000000LL) != 0)
      {
        uint64_t v6 = (a3 & 0xFFFFFFFFFFFFFFFLL) + 32;
        if (v5 == (a2 & 0xFFFFFFFFFFFFLL)) {
          goto LABEL_14;
        }
      }

      else
      {
        unint64_t v12 = result >> 16;
        uint64_t v6 = sub_189067C70();
        unint64_t v5 = v12;
        if (v12 == v10) {
          goto LABEL_14;
        }
      }

      if ((*(_BYTE *)(v6 + v5) & 0xC0) == 0x80)
      {
        do
        {
          unint64_t v7 = v5 - 1;
          int v8 = *(_BYTE *)(v6 - 1 + v5--) & 0xC0;
        }

        while (v8 == 128);
        return v7 << 16;
      }

LABEL_14:
      unint64_t v7 = v5;
      return v7 << 16;
    }

    uint64_t v9 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000LL) == 0) {
      uint64_t v9 = a2 & 0xFFFFFFFFFFFFLL;
    }
    if (v5 != v9) {
      return sub_189067C10();
    }
  }

  return result;
}

  unint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1LL << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a2) = v5;
  char v13 = *(void *)(v12 + 16);
  unint64_t v14 = __OFADD__(v13, 1LL);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v15;
  }
  return result;
}

uint64_t sub_1890337E8( uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (!(a3 >> 6))
  {
    if (a6 >= 0x40u)
    {
LABEL_21:
      char v9 = 0;
      return v9 & 1;
    }

    goto LABEL_6;
  }

  if (a3 >> 6 == 1)
  {
    if ((a6 & 0xC0) != 0x40) {
      goto LABEL_21;
    }
LABEL_6:
    if (a1 == a4 && a2 == a5 || (char v8 = sub_189067F10(), v9 = 0, (v8 & 1) != 0)) {
      char v9 = ((a3 & 1) == 0) ^ a6;
    }
    return v9 & 1;
  }

  if (a2 | a1 || a3 != 128)
  {
    if ((a6 & 0xC0) != 0x80 || a4 != 1 || a5 || a6 != 128) {
      goto LABEL_21;
    }
  }

  else if ((a6 & 0xC0) != 0x80 || a5 | a4 || a6 != 128)
  {
    goto LABEL_21;
  }

  char v9 = 1;
  return v9 & 1;
}

BOOL _s22ArgumentParserInternal17NameSpecificationV7ElementV2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  unsigned int v6 = *((unsigned __int8 *)a1 + 16);
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  unsigned int v9 = *((unsigned __int8 *)a2 + 16);
  if (v6 >> 6)
  {
    if (v6 >> 6 != 1)
    {
      if (v5 | v4 || v6 != 128)
      {
        if ((v9 & 0xC0) != 0x80 || v7 != 1 || v8 != 0) {
          return 0LL;
        }
      }

      else if ((v9 & 0xC0) != 0x80 || (v8 | v7) != 0)
      {
        return 0LL;
      }

      return v9 == 128;
    }

    if ((v9 & 0xC0) != 0x40) {
      return 0LL;
    }
    if (v4 == v7 && v5 == v8) {
      return (v6 & 1) == (v9 & 1);
    }
  }

  else
  {
    if (v9 >= 0x40) {
      return 0LL;
    }
    if (v4 == v7 && v5 == v8) {
      return ((v6 ^ v9) & 1) == 0;
    }
  }

  if ((sub_189067F10() & 1) != 0) {
    return ((v6 ^ v9) & 1) == 0;
  }
  return 0LL;
}

unint64_t sub_1890339B4()
{
  unint64_t result = qword_18C761388;
  if (!qword_18C761388)
  {
    unint64_t result = MEMORY[0x1895DD3F4]( &protocol conformance descriptor for NameSpecification.Element,  &type metadata for NameSpecification.Element);
    atomic_store(result, (unint64_t *)&qword_18C761388);
  }

  return result;
}

unint64_t sub_1890339FC()
{
  unint64_t result = qword_18C4FC4A0;
  if (!qword_18C4FC4A0)
  {
    unint64_t result = MEMORY[0x1895DD3F4]( &protocol conformance descriptor for NameSpecification.Element,  &type metadata for NameSpecification.Element);
    atomic_store(result, (unint64_t *)&qword_18C4FC4A0);
  }

  return result;
}

ValueMetadata *type metadata accessor for NameSpecification()
{
  return &type metadata for NameSpecification;
}

ValueMetadata *type metadata accessor for NameSpecification.Element()
{
  return &type metadata for NameSpecification.Element;
}

uint64_t destroy for NameSpecification.Element.Representation(uint64_t a1)
{
  return sub_188FFD504(*(void *)a1, *(void *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s22ArgumentParserInternal17NameSpecificationV7ElementV14RepresentationOwCP_0( uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(_BYTE *)(a2 + 16);
  sub_188FFD4F4(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v5;
  return a1;
}

uint64_t _s22ArgumentParserInternal17NameSpecificationV7ElementV14RepresentationOwca_0( uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(_BYTE *)(a2 + 16);
  sub_188FFD4F4(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v5;
  sub_188FFD504(v6, v7, v8);
  return a1;
}

uint64_t _s22ArgumentParserInternal17NameSpecificationV7ElementV14RepresentationOwta_0( uint64_t a1, uint64_t a2)
{
  char v3 = *(_BYTE *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v3;
  sub_188FFD504(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for Name(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 >= 0x7E && *(_BYTE *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 126);
  }
  unsigned int v3 = ((*(unsigned __int8 *)(a1 + 16) >> 6) & 0xFFFFFF83 | (4 * ((*(unsigned __int8 *)(a1 + 16) >> 1) & 0x1F))) ^ 0x7F;
  if (v3 >= 0x7D) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for Name(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(_BYTE *)(result + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 0;
    *(void *)unint64_t result = a2 - 126;
    *(void *)(result + 8) = 0LL;
    if (a3 >= 0x7E) {
      *(_BYTE *)(result + 17) = 1;
    }
  }

  else
  {
    if (a3 >= 0x7E) {
      *(_BYTE *)(result + 17) = 0;
    }
    if (a2)
    {
      *(void *)unint64_t result = 0LL;
      *(void *)(result + 8) = 0LL;
      *(_BYTE *)(result + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
    }
  }

  return result;
}

uint64_t sub_189033C0C(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 16);
  int v2 = (char)v1;
  unsigned int v3 = v1 >> 6;
  if (v2 >= 0) {
    return v3;
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_189033C2C(uint64_t result)
{
  *(_BYTE *)(result + 16) &= 0x3Fu;
  return result;
}

uint64_t sub_189033C3C(uint64_t result, unsigned int a2)
{
  if (a2 < 2)
  {
    *(_BYTE *)(result + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = *(_BYTE *)(result + 16) & 1 | ((_BYTE)a2 << 6);
  }

  else
  {
    *(void *)unint64_t result = a2 - 2;
    *(void *)(result + 8) = 0LL;
    *(_BYTE *)(result + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 0x80;
  }

  return result;
}

ValueMetadata *type metadata accessor for NameSpecification.Element.Representation()
{
  return &type metadata for NameSpecification.Element.Representation;
}

unint64_t sub_189033C7C()
{
  unint64_t result = qword_18C761390;
  if (!qword_18C761390)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&unk_189069B9C, &type metadata for NameSpecification.Element.Representation);
    atomic_store(result, (unint64_t *)&qword_18C761390);
  }

  return result;
}

uint64_t sub_189033CC4@<X0>( void (*a1)(char *, char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v26 = a5;
  uint64_t v27 = a2;
  uint64_t v28 = a1;
  uint64_t v29 = a6;
  uint64_t v9 = *(void *)(a3 - 8);
  uint64_t v10 = ((uint64_t (*)(void))MEMORY[0x1895F8858])();
  unint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = *(void *)(v13 + 16);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x1895F8858](v10);
  char v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  MEMORY[0x1895F8858](v16);
  unint64_t v20 = (char *)&v25 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, uint64_t))(v21 + 16))(v20, v22);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v20, 1LL, v14) == 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 56LL))( v29,  1LL,  1LL,  a4);
  }
  uint64_t v25 = a3;
  uint64_t v24 = v26;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v20, v14);
  v28(v18, v12);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  if (v6) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(v24, v12, v25);
  }
  return result;
}

uint64_t Flag<A>.init(wrappedValue:name:help:)@<X0>( char a1@<W0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6 = *a2;
  sub_18902A03C(a3, (uint64_t)v9);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v6;
  *(_BYTE *)(v7 + 24) = a1;
  uint64_t result = sub_18902A03C((uint64_t)v9, v7 + 32);
  *(void *)a4 = sub_189014094;
  *(void *)(a4 + 8) = v7;
  *(_BYTE *)(a4 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 1;
  return result;
}

uint64_t Flag.init(from:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7 = type metadata accessor for Flag(0LL, a2, a3, a4);
  sub_189006BE4(a1, (uint64_t)v10);
  uint64_t v8 = MEMORY[0x1895DD3F4](&unk_189069C84, v7);
  sub_189048038((uint64_t)v10, v7, v8, a5);
  return __swift_destroy_boxed_opaque_existential_1Tm(a1);
}

void Flag.init()()
{
}

uint64_t Flag.wrappedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = type metadata accessor for Parsed(0LL, v7, a2, a3);
  MEMORY[0x1895F8858](v8);
  uint64_t v10 = (char *)&v13 - v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v13 - v9, v5, v8);
  uint64_t result = sub_189067D3C();
  __break(1u);
  return result;
}

uint64_t sub_1890340C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a4 + a3 - 8);
  MEMORY[0x1895F8858](a1);
  uint64_t v6 = (char *)&v14 - v5;
  (*(void (**)(char *))(v7 + 16))((char *)&v14 - v5);
  uint64_t v10 = type metadata accessor for Flag(0LL, v4, v8, v9);
  return Flag.wrappedValue.setter((uint64_t)v6, v10, v11, v12);
}

uint64_t Flag.wrappedValue.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = type metadata accessor for Parsed(0LL, v6, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8LL))(v4, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL))(v4, a1, v6);
  return swift_storeEnumTagMultiPayload();
}

void (*Flag.wrappedValue.modify( void *a1, uint64_t a2))(uint64_t **a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = malloc(0x30uLL);
  *a1 = v5;
  *uint64_t v5 = a2;
  v5[1] = v2;
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v5[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[3] = v7;
  size_t v8 = *(void *)(v7 + 64);
  v5[4] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v5[5] = v9;
  Flag.wrappedValue.getter(a2, v10, v11, (uint64_t)v9);
  return sub_18903423C;
}

void sub_18903423C(uint64_t **a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *a1;
  uint64_t v5 = (void *)(*a1)[4];
  uint64_t v6 = (void *)(*a1)[5];
  if ((a2 & 1) != 0)
  {
    uint64_t v7 = v4[2];
    uint64_t v8 = v4[3];
    uint64_t v9 = *v4;
    (*(void (**)(uint64_t, void *, uint64_t))(v8 + 16))((*a1)[4], v6, v7);
    Flag.wrappedValue.setter((uint64_t)v5, v9, v10, v11);
    (*(void (**)(void *, uint64_t))(v8 + 8))(v6, v7);
  }

  else
  {
    Flag.wrappedValue.setter((*a1)[5], *v4, a3, a4);
  }

  free(v6);
  free(v5);
  free(v4);
}

uint64_t sub_1890342D4@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return Flag.init(from:)(a1, *(void *)(a2 + 16), a3, a4, a5);
}

unint64_t Flag.description.getter(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1895F8858](a1);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  MEMORY[0x1895F8858](v5);
  uint64_t v9 = (char *)&v18 - v8;
  uint64_t v12 = type metadata accessor for Parsed(0LL, v3, v10, v11);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1895F8858](v12);
  uint64_t v15 = (char *)&v18 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v18 - v14, v2, v12);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    return 0xD000000000000012LL;
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v9, v15, v3);
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
    uint64_t v16 = sub_1890677FC();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  }

  return v16;
}

void static FlagInversion.prefixedNo.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

void static FlagInversion.prefixedEnableDisable.getter(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t FlagInversion.hash(into:)()
{
  return sub_18906803C();
}

BOOL static FlagInversion.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FlagInversion.hashValue.getter()
{
  return sub_189068060();
}

void static FlagExclusivity.exclusive.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

void static FlagExclusivity.chooseFirst.getter(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

void static FlagExclusivity.chooseLast.getter(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t FlagExclusivity.hash(into:)()
{
  return sub_18906803C();
}

BOOL static FlagExclusivity.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t FlagExclusivity.hashValue.getter()
{
  return sub_189068060();
}

uint64_t Flag<A>.init(name:inversion:exclusivity:help:)@<X0>( uint64_t *a1@<X0>, char *a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6 = *a1;
  char v7 = *a2;
  char v8 = *a3;
  sub_18902A03C(a4, (uint64_t)v11);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v6;
  *(_BYTE *)(v9 + 24) = v7;
  *(_BYTE *)(v9 + 25) = v8;
  uint64_t result = sub_18902A03C((uint64_t)v11, v9 + 32);
  *(void *)a5 = sub_189034990;
  *(void *)(a5 + 8) = v9;
  *(_BYTE *)(a5 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 1;
  return result;
}

{
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t result;
  _BYTE v11[56];
  uint64_t v6 = *a1;
  char v7 = *a2;
  char v8 = *a3;
  sub_18902A03C(a4, (uint64_t)v11);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v6;
  *(_BYTE *)(v9 + 24) = 2;
  *(_BYTE *)(v9 + 25) = v7;
  *(_BYTE *)(v9 + 26) = v8;
  uint64_t result = sub_18902A03C((uint64_t)v11, v9 + 32);
  *(void *)a5 = sub_189034AD8;
  *(void *)(a5 + 8) = v9;
  *(_BYTE *)(a5 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 1;
  return result;
}

uint64_t sub_18903461C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6, uint64_t a7)
{
  uint64_t v14 = a4;
  char v13 = a5 & 1;
  char v12 = a6;
  sub_18902A03C(a7, (uint64_t)v11);
  return sub_1890409F4(a1, a2, a3, &v14, 2u, 0, &v13, &v12, (uint64_t)v11);
}

uint64_t Flag<A>.init(wrappedValue:name:inversion:exclusivity:help:)@<X0>( uint64_t *a1@<X0>, char *a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6 = *a1;
  char v7 = *a2;
  char v8 = *a3;
  sub_18902A03C(a4, (uint64_t)v11);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v6;
  *(_BYTE *)(v9 + 24) = v7;
  *(_BYTE *)(v9 + 25) = v8;
  uint64_t result = sub_18902A03C((uint64_t)v11, v9 + 32);
  *(void *)a5 = sub_189039700;
  *(void *)(a5 + 8) = v9;
  *(_BYTE *)(a5 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 1;
  return result;
}

uint64_t sub_189034728(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t *a6)
{
  BOOL v11 = a5 != 2;
  if ((a5 & 1) != 0) {
    uint64_t v12 = 1702195828LL;
  }
  else {
    uint64_t v12 = 0LL;
  }
  if ((a5 & 1) != 0) {
    uint64_t v13 = 0xE400000000000000LL;
  }
  else {
    uint64_t v13 = 0LL;
  }
  sub_18902A03C((uint64_t)a6, (uint64_t)v31);
  sub_1890140A4(a6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_189048BAC(MEMORY[0x18961AFE8], v11, v31, v12, v13, a1, a2, a3, (uint64_t)&v32, 0);
  uint64_t v14 = v33;
  char v30 = v35;
  __int128 v28 = v37;
  __int128 v29 = v36;
  uint64_t v15 = v38;
  uint64_t v16 = v39;
  char v27 = v40;
  uint64_t v25 = v42;
  uint64_t v26 = v41;
  __int128 v23 = v34;
  __int128 v24 = v32;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v17 = swift_bridgeObjectRetain();
  uint64_t v18 = sub_189038EA0(v17, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v19 = (void *)swift_allocObject();
  void v19[2] = a1;
  v19[3] = a2;
  void v19[4] = a3;
  uint64_t v20 = swift_allocObject();
  *(_BYTE *)(v20 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = a5;
  *(void *)(v20 + 24) = a1;
  *(void *)(v20 + 32) = a2;
  *(void *)(v20 + 40) = a3;
  LOBYTE(v32) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC818);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = xmmword_1890684B0;
  *(void *)(v21 + 32) = v18;
  *(_OWORD *)(v21 + 40) = v24;
  *(void *)(v21 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = v14;
  *(_OWORD *)(v21 + 64) = v23;
  *(_BYTE *)(v21 + 80) = v30;
  *(_OWORD *)(v21 + 88) = v29;
  *(_OWORD *)(v21 + 104) = v28;
  *(void *)(v21 + 120) = v15;
  *(void *)(v21 + 128) = v16;
  *(_BYTE *)(v21 + 136) = v27;
  *(void *)(v21 + 144) = v26;
  *(void *)(v21 + 152) = v25;
  *(void *)(v21 + 160) = 0LL;
  *(void *)(v21 + 168) = 0LL;
  *(_WORD *)(v21 + 176) = 4;
  *(void *)(v21 + 184) = sub_189039698;
  *(void *)(v21 + 192) = v19;
  *(_BYTE *)(v21 + 200) = v32;
  *(void *)(v21 + 208) = sub_1890396E0;
  *(void *)(v21 + 2__swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v20;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  return sub_189011E78(v21);
}

uint64_t type metadata accessor for Flag(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Flag);
}

uint64_t sub_189034990(uint64_t a1, unint64_t a2, uint64_t a3)
{
  return sub_18903461C(a1, a2, a3, *(void *)(v3 + 16), *(_BYTE *)(v3 + 24), *(_BYTE *)(v3 + 25), v3 + 32);
}

uint64_t sub_1890349A8( uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5, char a6, char a7, uint64_t a8)
{
  uint64_t v17 = a4;
  char v12 = a5 == 2;
  char v16 = a6 & 1;
  char v15 = a7;
  sub_18902A03C(a8, (uint64_t)v14);
  return sub_1890409F4(a1, a2, a3, &v17, a5, v12, &v16, &v15, (uint64_t)v14);
}

uint64_t Flag<A>.init(wrappedValue:name:inversion:exclusivity:help:)@<X0>( char a1@<W0>, uint64_t *a2@<X1>, char *a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8 = *a2;
  char v9 = *a3;
  char v10 = *a4;
  sub_18902A03C(a5, (uint64_t)v13);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v8;
  *(_BYTE *)(v11 + 24) = a1;
  *(_BYTE *)(v11 + 25) = v9;
  *(_BYTE *)(v11 + 26) = v10;
  uint64_t result = sub_18902A03C((uint64_t)v13, v11 + 32);
  *(void *)a6 = sub_189034AD8;
  *(void *)(a6 + 8) = v11;
  *(_BYTE *)(a6 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 1;
  return result;
}

uint64_t sub_189034B78(uint64_t a1, unint64_t a2, uint64_t a3)
{
  return sub_1890349A8( a1,  a2,  a3,  *(void *)(v3 + 16),  *(_BYTE *)(v3 + 24),  *(_BYTE *)(v3 + 25),  *(_BYTE *)(v3 + 26),  v3 + 32);
}

uint64_t Flag<A>.init(name:help:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *a1;
  sub_18902A03C(a2, (uint64_t)v7);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v4;
  uint64_t result = sub_18902A03C((uint64_t)v7, v5 + 24);
  *(void *)a3 = sub_189034E6C;
  *(void *)(a3 + 8) = v5;
  *(_BYTE *)(a3 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 1;
  return result;
}

uint64_t sub_189034C0C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v9 = v28;
  char v25 = v30;
  __int128 v23 = v32;
  __int128 v24 = v31;
  uint64_t v10 = v33;
  uint64_t v11 = v34;
  char v12 = v35;
  uint64_t v21 = v37;
  uint64_t v22 = v36;
  __int128 v19 = v29;
  __int128 v20 = v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v13 = swift_bridgeObjectRetain();
  uint64_t v14 = sub_189038EA0(v13, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v15 = (void *)swift_allocObject();
  v15[2] = a1;
  uint64_t v15[3] = a2;
  v15[4] = a3;
  char v16 = (void *)swift_allocObject();
  void v16[2] = a1;
  v16[3] = a2;
  v16[4] = a3;
  LOBYTE(v27) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC818);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = xmmword_1890684B0;
  *(void *)(v17 + 32) = v14;
  *(_OWORD *)(v17 + 40) = v20;
  *(void *)(v17 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = v9;
  *(_OWORD *)(v17 + 64) = v19;
  *(_BYTE *)(v17 + 80) = v25;
  *(_OWORD *)(v17 + 88) = v24;
  *(_OWORD *)(v17 + 104) = v23;
  *(void *)(v17 + 120) = v10;
  *(void *)(v17 + 128) = v11;
  *(_BYTE *)(v17 + 136) = v12;
  *(void *)(v17 + 144) = v22;
  *(void *)(v17 + 152) = v21;
  *(void *)(v17 + 160) = 0LL;
  *(void *)(v17 + 168) = 0LL;
  *(_WORD *)(v17 + 176) = 4;
  *(void *)(v17 + 184) = sub_18903962C;
  *(void *)(v17 + 192) = v15;
  *(_BYTE *)(v17 + 200) = v27;
  *(void *)(v17 + 208) = sub_18903964C;
  *(void *)(v17 + 2__swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v16;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  return sub_189011E78(v17);
}

uint64_t sub_189034E2C()
{
  if (*(void *)(v0 + 32))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_deallocObject();
}

uint64_t sub_189034E6C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  return sub_189034C0C(a1, a2, a3, *(void *)(v3 + 16), (uint64_t *)(v3 + 24));
}

uint64_t sub_189034E78@<X0>( uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v24 = a5;
  uint64_t v25 = a1;
  uint64_t v26 = a6;
  uint64_t v9 = type metadata accessor for Parsed(0LL, a4, a3, a4);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1895F8858](v9);
  char v12 = (uint64_t *)((char *)&v24 - v11);
  char v13 = *a2;
  sub_18902A03C(a3, (uint64_t)v27);
  uint64_t v14 = sub_189067AB4();
  uint64_t v15 = *(void *)(v14 - 8);
  unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v17 = (*(void *)(v15 + 64) + v16 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v18 = swift_allocObject();
  uint64_t v20 = v24;
  uint64_t v19 = v25;
  *(void *)(v18 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = a4;
  *(void *)(v18 + 24) = v20;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v15 + 32))(v18 + v16, v19, v14);
  uint64_t v21 = v18 + v17;
  sub_18902A03C((uint64_t)v27, v21);
  *(_BYTE *)(v21 + 49) = v13;
  sub_189048624((uint64_t)sub_1890393E4, v18, a4, v22, v12);
  return (*(uint64_t (**)(uint64_t, void *, uint64_t))(v10 + 32))(v26, v12, v9);
}

uint64_t sub_189034FB4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8)
{
  int v55 = a6;
  uint64_t v56 = a4;
  uint64_t v54 = a5;
  sub_18902A03C(a5, (uint64_t)v67);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v46 = *(void *)(AssociatedConformanceWitness + 8);
  uint64_t v53 = sub_189067D48();
  uint64_t v51 = *(void *)(v53 - 8);
  uint64_t v14 = MEMORY[0x1895F8858](v53);
  uint64_t v48 = (char *)&v43 - v15;
  uint64_t v16 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1895F8858](v14);
  uint64_t v18 = (char *)&v43 - v17;
  uint64_t v61 = a7;
  uint64_t v62 = a8;
  uint64_t v49 = a1;
  uint64_t v63 = a1;
  uint64_t v64 = a2;
  uint64_t v50 = a2;
  uint64_t v52 = a3;
  uint64_t v65 = a3;
  sub_189067AB4();
  uint64_t v19 = MEMORY[0x18961A520];
  uint64_t v20 = MEMORY[0x18961A528];
  sub_189033CC4( (void (*)(char *, char *))sub_189039468,  (uint64_t)v60,  MEMORY[0x18961A520],  MEMORY[0x189617FA8],  v21,  (uint64_t)v66);
  uint64_t v45 = v66[0];
  uint64_t v47 = v66[1];
  sub_189067C34();
  uint64_t v58 = a7;
  uint64_t v59 = a8;
  uint64_t v22 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC3A0);
  uint64_t v24 = sub_189000678( (void (*)(char *, char *))sub_189039708,  (uint64_t)v57,  AssociatedTypeWitness,  v22,  v19,  AssociatedConformanceWitness,  v20,  v23);
  uint64_t v25 = *(void (**)(char *, uint64_t))(v16 + 8);
  v25(v18, AssociatedTypeWitness);
  uint64_t v26 = *(void *)(v24 + 16);
  if (v26)
  {
    __int128 v27 = (uint64_t *)(v24 + 40);
    uint64_t v28 = v26 - 1;
    do
    {
      uint64_t v29 = *v27;
      v27 += 7;
      BOOL v30 = v29 != 0;
      if (v29) {
        BOOL v31 = 1;
      }
      else {
        BOOL v31 = v28 == 0;
      }
      --v28;
    }

    while (!v31);
  }

  else
  {
    BOOL v30 = 0;
  }

  sub_189067C34();
  __int128 v32 = v48;
  sub_18906794C();
  uint64_t v33 = ((uint64_t (*)(char *, uint64_t))v25)(v18, AssociatedTypeWitness);
  uint64_t v34 = MEMORY[0x1895F8858](v33);
  *(&v43 - 12) = a7;
  *(&v43 - 11) = a8;
  uint64_t v35 = v50;
  *(&v43 - 10) = v49;
  *(&v43 - 9) = v35;
  *(&v43 - 8) = v52;
  *(&v43 - 7) = v24;
  *(&v43 - 6) = v54;
  *((_BYTE *)&v43 - 40) = v30;
  uint64_t v36 = v45;
  *(&v43 - 4) = v56;
  *(&v43 - 3) = v36;
  *(&v43 - 2) = v47;
  *((_BYTE *)&v43 - 8) = v55;
  MEMORY[0x1895F8858](v34);
  *(&v43 - 4) = a7;
  *(&v43 - 3) = a8;
  *(&v43 - 2) = (uint64_t)sub_18903948C;
  *(&v43 - 1) = v37;
  uint64_t v38 = v53;
  uint64_t v39 = MEMORY[0x1895DD3F4](MEMORY[0x189619908], v53);
  uint64_t v41 = sub_189036324( (void (*)(char *, char *))sub_189038BB0,  (uint64_t)(&v43 - 6),  v38,  (uint64_t)&type metadata for ArgumentDefinition,  MEMORY[0x18961A520],  v39,  MEMORY[0x18961A528],  v40);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v32, v38);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_189011E78(v41);
}

uint64_t sub_189035394@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v17 = sub_1890677FC();
  unint64_t v19 = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_1890582C0(v17, v19, a2, a3, a4);
  unint64_t v22 = v21;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))(a6 + 24))(&v33, a1, a5, a6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v23 = swift_bridgeObjectRetain();
  uint64_t v24 = sub_189038EA0(v23, v20, v22);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  if (*(void *)(v24 + 16))
  {
    uint64_t v25 = *(void *)(v24 + 32);
    uint64_t v26 = *(void *)(v24 + 40);
    unsigned __int8 v27 = *(_BYTE *)(v24 + 48);
    sub_188FFCF80(v25, v26, v27);
    swift_bridgeObjectRelease();
    uint64_t v28 = sub_1890520B0(v25, v26, v27);
    uint64_t v30 = v29;
    uint64_t result = sub_188FFCF98(v25, v26, v27);
  }

  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v28 = 0LL;
    uint64_t v30 = 0LL;
  }

  *a7 = v28;
  a7[1] = v30;
  return result;
}

void *sub_189035554@<X0>( unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, unsigned __int8 a13, uint64_t a14, uint64_t a15)
{
  void *(*v39)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t);
  void *result;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  char *v69;
  void (*v70)(char *, char *, uint64_t);
  uint64_t v71;
  uint64_t v72;
  unsigned int (*v73)(char *, uint64_t, uint64_t);
  unsigned int v74;
  void (*v75)(char *, uint64_t);
  unsigned int v76;
  unsigned int (*v77)(uint64_t, uint64_t, uint64_t);
  char *v78;
  char *v79;
  char *v80;
  char v81;
  void (*v82)(char *, uint64_t);
  char *v83;
  void (*v84)(char *, uint64_t);
  BOOL v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  unint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  int v102;
  uint64_t v103;
  uint64_t v104;
  unsigned int (*v105)(uint64_t, uint64_t, uint64_t);
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  char *v113;
  uint64_t TupleTypeMetadata2;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t *v133;
  void (*v134)(char *, uint64_t, uint64_t);
  uint64_t v135;
  uint64_t v136;
  uint64_t v137[6];
  char v138;
  uint64_t v139[12];
  void v140[6];
  unsigned __int8 v141;
  LODWORD(v136) = a8;
  uint64_t v128 = a9;
  uint64_t v133 = (uint64_t *)a7;
  sub_18902A03C(a7, (uint64_t)v140);
  unint64_t v120 = v140[0];
  unint64_t v119 = v140[1];
  uint64_t v118 = v140[2];
  uint64_t v117 = v140[3];
  uint64_t v116 = v140[4];
  unsigned __int8 v115 = v140[5];
  LODWORD(v110) = v141;
  uint64_t v21 = sub_189067AB4();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v109 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v22 = MEMORY[0x1895F8858](TupleTypeMetadata2);
  uint64_t v111 = (char *)&v96 - v23;
  uint64_t v112 = v21;
  uint64_t v125 = *(void *)(v21 - 8);
  uint64_t v24 = MEMORY[0x1895F8858](v22);
  uint64_t v108 = (char *)&v96 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v26 = MEMORY[0x1895F8858](v24);
  uint64_t v113 = (char *)&v96 - v27;
  MEMORY[0x1895F8858](v26);
  uint64_t v126 = v28;
  uint64_t v29 = (char *)&v96 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v127 = v30;
  uint64_t v134 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 16);
  v134(v29, a2, a14);
  unsigned __int8 v131 = v29;
  uint64_t v31 = sub_1890677FC();
  unint64_t v33 = v32;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v129 = a3;
  uint64_t v130 = a4;
  uint64_t v34 = sub_1890582C0(v31, v33, a3, a4, a5);
  unint64_t v36 = v35;
  uint64_t v38 = v37;
  uint64_t v39 = *(void *(**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))(a15 + 24);
  unint64_t v135 = a2;
  uint64_t v132 = a15;
  uint64_t result = v39(v139, a2, a14, a15);
  if ((a1 & 0x8000000000000000LL) != 0)
  {
    __break(1u);
  }

  else if (*(void *)(a6 + 16) > a1)
  {
    unint64_t v122 = v34;
    uint64_t v123 = v38;
    uint64_t v124 = v36;
    uint64_t v41 = a11;
    uint64_t v42 = a12;
    uint64_t v121 = v139[0];
    uint64_t v43 = a6 + 56 * a1;
    uint64_t v45 = *(void *)(v43 + 32);
    unint64_t v44 = *(void *)(v43 + 40);
    uint64_t v46 = *(void *)(v43 + 48);
    uint64_t v47 = *(void *)(v43 + 56);
    uint64_t v48 = *(void *)(v43 + 64);
    uint64_t v49 = *(void *)(v43 + 72);
    uint64_t v50 = v45;
    uint64_t v51 = v44;
    uint64_t v52 = v46;
    uint64_t v53 = *(unsigned __int8 *)(v43 + 80);
    uint64_t v54 = v47;
    int v55 = v48;
    uint64_t v56 = v49;
    __int128 v57 = v53;
    if (!v44)
    {
      uint64_t v58 = v133;
      uint64_t v59 = v49;
      __int128 v60 = v48;
      uint64_t v61 = v53;
      uint64_t v62 = v47;
      uint64_t v133 = 0LL;
      uint64_t v63 = v45;
      uint64_t v64 = v46;
      sub_1890140A4(v58);
      uint64_t v46 = v64;
      uint64_t v45 = v63;
      uint64_t v41 = a11;
      uint64_t v42 = a12;
      unint64_t v44 = (uint64_t)v133;
      uint64_t v47 = v62;
      uint64_t v53 = v61;
      uint64_t v48 = v60;
      uint64_t v49 = v59;
      uint64_t v50 = v120;
      uint64_t v51 = v119;
      uint64_t v52 = v118;
      uint64_t v54 = v117;
      int v55 = v116;
      uint64_t v56 = v115;
      __int128 v57 = v110;
    }

    LODWORD(v115) = v57;
    uint64_t v116 = v55;
    uint64_t v117 = v54;
    uint64_t v118 = v52;
    unint64_t v119 = v51;
    LODWORD(v120) = a13;
    uint64_t v65 = a10;
    __int128 v66 = v127;
    uint64_t v133 = (uint64_t *)a10;
    if ((v136 & 1) == 0)
    {
      sub_1890140DC(v45, v44);
      unint64_t v77 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v66 + 48);
      swift_bridgeObjectRetain();
LABEL_17:
      unsigned __int8 v85 = v77(v65, 1LL, a14) != 1;
      v137[0] = v50;
      v137[1] = v119;
      v137[2] = v118;
      v137[3] = v117;
      v137[4] = v116;
      v137[5] = v56;
      unint64_t v138 = v115;
      unsigned int v86 = v130;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v87 = v41;
      unint64_t v88 = v129;
      sub_189048BAC(MEMORY[0x18961AFE8], v85, v137, v87, v42, v129, v86, a5, (uint64_t)v139, (v136 & 1) == 0);
      unint64_t v136 = v139[2];
      uint64_t v125 = v139[3];
      unint64_t v119 = v139[4];
      uint64_t v118 = v139[7];
      uint64_t v117 = v139[9];
      uint64_t v116 = v139[11];
      v137[0] = v121;
      uint64_t v89 = v131;
      v134(v131, v135, a14);
      uint64_t v90 = (*(unsigned __int8 *)(v66 + 80) + 56LL) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80);
      unsigned __int8 v91 = v90 + v126;
      uint64_t v92 = (char *)swift_allocObject();
      uint64_t v93 = v66;
      uint64_t v94 = (uint64_t)v92;
      uint64_t v95 = v132;
      *((void *)v92 + 2) = a14;
      *((void *)v92 + 3) = v95;
      *((void *)v92 + 4) = v88;
      *((void *)v92 + 5) = v86;
      *((void *)v92 + 6) = a5;
      (*(void (**)(char *, char *, uint64_t))(v93 + 32))(&v92[v90], v89, a14);
      *(_BYTE *)(v94 + v91) = v120;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_189035FC8(v88, v86, a5, v122, v124, v139, v128, 0, (uint64_t)v133, (uint64_t)sub_18903931C, v94, 0, a14);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (void *)swift_bridgeObjectRelease();
    }

    uint64_t v100 = v46;
    uint64_t v101 = v47;
    uint64_t v102 = v53;
    uint64_t v103 = v48;
    uint64_t v104 = v49;
    uint64_t v106 = v56;
    uint64_t v107 = v50;
    char v97 = v42;
    uint64_t v98 = v41;
    uint64_t v110 = a5;
    __int128 v67 = v113;
    v134(v113, v135, a14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(v67, 0LL, 1LL, a14);
    char v68 = v111;
    uint64_t v69 = &v111[*(int *)(TupleTypeMetadata2 + 48)];
    char v70 = *(void (**)(char *, char *, uint64_t))(v125 + 16);
    unint64_t v71 = v112;
    v70(v111, v67, v112);
    uint64_t v99 = v69;
    v70(v69, (char *)a10, v71);
    unint64_t v72 = v66;
    uint64_t v73 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48);
    uint64_t v74 = v73(v68, 1LL, a14);
    uint64_t v105 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v73;
    if (v74 == 1)
    {
      sub_1890140DC(v45, v44);
      uint64_t v75 = *(void (**)(char *, uint64_t))(v125 + 8);
      v75(v67, v71);
      uint64_t v76 = v73(v99, 1LL, a14);
      a5 = v110;
      __int128 v66 = v72;
      uint64_t v56 = v106;
      if (v76 == 1)
      {
        v75(v68, v71);
        uint64_t v65 = (uint64_t)v133;
LABEL_14:
        uint64_t v42 = v97;
        swift_bridgeObjectRetain();
        uint64_t v41 = v98;
        goto LABEL_16;
      }
    }

    else
    {
      unint64_t v78 = v108;
      v70(v108, v68, v71);
      uint64_t v79 = v99;
      if (v73(v99, 1LL, a14) != 1)
      {
        __int128 v66 = v72;
        uint64_t v80 = v131;
        (*(void (**)(char *, char *, uint64_t))(v72 + 32))(v131, v79, a14);
        sub_1890140DC(v45, v44);
        uint64_t v81 = sub_1890677CC();
        uint64_t v82 = *(void (**)(char *, uint64_t))(v72 + 8);
        v82(v80, a14);
        uint64_t v83 = v68;
        unsigned __int8 v84 = *(void (**)(char *, uint64_t))(v125 + 8);
        v84(v113, v71);
        v82(v78, a14);
        v84(v83, v71);
        a5 = v110;
        uint64_t v65 = (uint64_t)v133;
        uint64_t v56 = v106;
        if ((v81 & 1) == 0)
        {
          uint64_t v41 = 0LL;
          uint64_t v42 = 0LL;
          goto LABEL_16;
        }

        goto LABEL_14;
      }

      sub_1890140DC(v45, v44);
      (*(void (**)(char *, uint64_t))(v125 + 8))(v113, v71);
      __int128 v66 = v72;
      (*(void (**)(char *, uint64_t))(v72 + 8))(v78, a14);
      a5 = v110;
      uint64_t v56 = v106;
    }

    (*(void (**)(char *, uint64_t))(v109 + 8))(v68, TupleTypeMetadata2);
    uint64_t v41 = 0LL;
    uint64_t v42 = 0LL;
    uint64_t v65 = (uint64_t)v133;
LABEL_16:
    uint64_t v50 = v107;
    unint64_t v77 = v105;
    goto LABEL_17;
  }

  __break(1u);
  return result;
}

uint64_t sub_189035FC8@<X0>( uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, unint64_t a5@<X5>, uint64_t *a6@<X7>, uint64_t a7@<X8>, unsigned __int8 a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned __int8 a12, uint64_t a13)
{
  uint64_t v63 = a2;
  uint64_t v64 = a3;
  uint64_t v59 = a1;
  int v60 = a8;
  int v58 = a12;
  uint64_t v61 = a10;
  uint64_t v62 = a11;
  uint64_t v41 = a9;
  uint64_t v42 = a13;
  uint64_t v17 = sub_189067AB4();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void *)(v18 + 64);
  MEMORY[0x1895F8858](v17);
  uint64_t v21 = (char *)&v41 - v20;
  uint64_t v48 = *a6;
  uint64_t v47 = a6[1];
  uint64_t v43 = a6[2];
  uint64_t v44 = a6[3];
  uint64_t v45 = a6[4];
  int v46 = *((unsigned __int8 *)a6 + 40);
  uint64_t v22 = a6[6];
  uint64_t v23 = a6[7];
  uint64_t v54 = a6[8];
  uint64_t v55 = v22;
  uint64_t v24 = a6[9];
  uint64_t v49 = v23;
  uint64_t v50 = v24;
  uint64_t v53 = a6[10];
  uint64_t v51 = a6[11];
  int v52 = *((unsigned __int8 *)a6 + 96);
  uint64_t v25 = a6[13];
  uint64_t v56 = a6[14];
  uint64_t v57 = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v26 = swift_bridgeObjectRetain();
  uint64_t v27 = sub_189038EA0(v26, a4, a5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v21, v41, v17);
  unint64_t v28 = (*(unsigned __int8 *)(v18 + 80) + 24LL) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v42;
  (*(void (**)(unint64_t, char *, uint64_t))(v18 + 32))(v29 + v28, v21, v17);
  uint64_t v30 = (void *)(v29 + ((v19 + v28 + 7) & 0xFFFFFFFFFFFFFFF8LL));
  uint64_t v31 = v63;
  *uint64_t v30 = v59;
  v30[1] = v31;
  uint64_t v30[2] = v64;
  LODWORD(v59) = v58 & 1;
  char v66 = v58 & 1;
  uint64_t v32 = v48;
  *(void *)a7 = v27;
  *(void *)(a7 + 8) = v32;
  uint64_t v33 = v43;
  *(void *)(a7 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v47;
  *(void *)(a7 + 24) = v33;
  uint64_t v34 = v45;
  *(void *)(a7 + 32) = v44;
  *(void *)(a7 + 40) = v34;
  *(_BYTE *)(a7 + 48) = v46;
  *(_DWORD *)(a7 + 49) = v70[0];
  *(_DWORD *)(a7 + 52) = *(_DWORD *)((char *)v70 + 3);
  uint64_t v35 = v56;
  uint64_t v36 = v49;
  uint64_t v37 = v50;
  *(void *)(a7 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = v55;
  *(void *)(a7 + 64) = v36;
  *(void *)(a7 + 72) = v54;
  *(void *)(a7 + 80) = v37;
  uint64_t v38 = v51;
  *(void *)(a7 + 88) = v53;
  *(void *)(a7 + 96) = v38;
  *(_BYTE *)(a7 + 104) = v52;
  *(_DWORD *)(a7 + 105) = *(_DWORD *)v69;
  *(_DWORD *)(a7 + 108) = *(_DWORD *)&v69[3];
  *(void *)(a7 + 112) = v57;
  *(void *)(a7 + 120) = v35;
  *(void *)(a7 + 128) = 0LL;
  *(void *)(a7 + 136) = 0LL;
  *(_BYTE *)(a7 + 144) = 4;
  *(_BYTE *)(a7 + 145) = v60;
  *(_DWORD *)(a7 + 146) = v67;
  *(_WORD *)(a7 + 150) = v68;
  uint64_t v39 = v62;
  *(void *)(a7 + 152) = v61;
  *(void *)(a7 + 160) = v39;
  *(_BYTE *)(a7 + 168) = v66;
  *(_DWORD *)(a7 + 172) = *(_DWORD *)&v65[3];
  *(_DWORD *)(a7 + 169) = *(_DWORD *)v65;
  *(void *)(a7 + 176) = sub_1890391E0;
  *(void *)(a7 + 184) = v29;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_188FFD130();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_189036324( void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v40 = a8;
  uint64_t v41 = a5;
  uint64_t v9 = v8;
  uint64_t v53 = a4;
  uint64_t v54 = a1;
  uint64_t v55 = a2;
  uint64_t v39 = *(void *)(a5 - 8);
  uint64_t v10 = MEMORY[0x1895F8858](a1);
  int v52 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  MEMORY[0x1895F8858](v10);
  uint64_t v51 = (char *)v37 - v12;
  uint64_t v45 = v13;
  uint64_t v15 = v14;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v17 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1895F8858](AssociatedTypeWitness);
  uint64_t v38 = (char *)v37 - v18;
  uint64_t v19 = sub_189067AB4();
  uint64_t v42 = *(void *)(v19 - 8);
  uint64_t v43 = v19;
  uint64_t v20 = MEMORY[0x1895F8858](v19);
  uint64_t v49 = (char *)v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = MEMORY[0x1895F8858](v20);
  uint64_t v24 = (char *)v37 - v23;
  uint64_t v25 = MEMORY[0x1895F8858](v22);
  v37[1] = (char *)v37 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v27 = MEMORY[0x1895F8858](v25);
  uint64_t v48 = *((void *)v15 - 1);
  MEMORY[0x1895F8858](v27);
  uint64_t v47 = (char *)v37 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v56 = swift_getAssociatedTypeWitness();
  uint64_t v44 = *(void *)(v56 - 8);
  MEMORY[0x1895F8858](v56);
  int v46 = (char *)v37 - v29;
  uint64_t v30 = v15;
  uint64_t v31 = sub_189067940();
  uint64_t v57 = sub_18906773C();
  uint64_t v53 = sub_189067CAC();
  sub_189067C88();
  (*(void (**)(char *, void, void *))(v48 + 16))(v47, v50, v15);
  uint64_t v32 = v46;
  uint64_t v50 = v30;
  uint64_t result = sub_189067934();
  if (v31 < 0)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }

  if (v31)
  {
    swift_getAssociatedConformanceWitness();
    while (1)
    {
      sub_189067B14();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v24, 1LL, AssociatedTypeWitness);
      if ((_DWORD)result == 1) {
        goto LABEL_18;
      }
      v54(v24, v52);
      if (v9)
      {
        (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v56);
        swift_release();
        (*(void (**)(uint64_t, char *, uint64_t))(v39 + 32))(v40, v52, v41);
        return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v24, AssociatedTypeWitness);
      }

      uint64_t v9 = 0LL;
      (*(void (**)(char *, uint64_t))(v17 + 8))(v24, AssociatedTypeWitness);
      sub_189067C94();
      if (!--v31)
      {
        uint64_t v34 = v49;
        goto LABEL_9;
      }
    }
  }

  swift_getAssociatedConformanceWitness();
  uint64_t v34 = v49;
LABEL_9:
  sub_189067B14();
  int v52 = *(char **)(v17 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v52)(v34, 1LL, AssociatedTypeWitness) == 1)
  {
    uint64_t v35 = v49;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v56);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v35, v43);
    return v57;
  }

  else
  {
    uint64_t v50 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    uint64_t v36 = v38;
    uint64_t v35 = v49;
    while (1)
    {
      v50(v36, v35, AssociatedTypeWitness);
      v54(v36, v51);
      if (v9) {
        break;
      }
      uint64_t v9 = 0LL;
      (*(void (**)(char *, uint64_t))(v17 + 8))(v36, AssociatedTypeWitness);
      sub_189067C94();
      sub_189067B14();
    }

    (*(void (**)(char *, uint64_t))(v17 + 8))(v36, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v56);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v39 + 32))(v40, v51, v41);
  }

uint64_t Flag<A>.init(wrappedValue:exclusivity:help:)@<X0>( uint64_t a1@<X0>, _BYTE *a2@<X1>, __int128 *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12 = sub_189067AB4();
  MEMORY[0x1895F8858](v12);
  uint64_t v14 = (char *)&v20 - v13;
  LOBYTE(a2) = *a2;
  __int128 v15 = *a3;
  __int128 v20 = a3[1];
  __int128 v21 = v15;
  uint64_t v16 = *((void *)a3 + 4);
  uint64_t v17 = *((void *)a3 + 5);
  LOBYTE(a3) = *((_BYTE *)a3 + 48);
  uint64_t v18 = *(void *)(a4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))((char *)&v20 - v13, a1, a4);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v14, 0LL, 1LL, a4);
  char v26 = (char)a2;
  v22[0] = v21;
  v22[1] = v20;
  uint64_t v23 = v16;
  uint64_t v24 = v17;
  char v25 = (char)a3;
  sub_189034E78((uint64_t)v14, &v26, (uint64_t)v22, a4, a5, a6);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8))(a1, a4);
}

uint64_t Flag<A>.init(exclusivity:help:)@<X0>( _BYTE *a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = sub_189067AB4();
  MEMORY[0x1895F8858](v10);
  uint64_t v12 = (char *)&v17 - v11;
  LOBYTE(a1) = *a1;
  __int128 v13 = *a2;
  __int128 v17 = a2[1];
  __int128 v18 = v13;
  uint64_t v14 = *((void *)a2 + 4);
  uint64_t v15 = *((void *)a2 + 5);
  LOBYTE(a2) = *((_BYTE *)a2 + 48);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 56LL))( (char *)&v17 - v11,  1LL,  1LL,  a3);
  char v23 = (char)a1;
  v19[0] = v18;
  v19[1] = v17;
  uint64_t v20 = v14;
  uint64_t v21 = v15;
  char v22 = (char)a2;
  return sub_189034E78((uint64_t)v12, &v23, (uint64_t)v19, a3, a4, a5);
}

uint64_t Flag.init<A>(exclusivity:help:)@<X0>( _BYTE *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = sub_189067AB4();
  uint64_t v13 = type metadata accessor for Parsed(0LL, v10, v11, v12);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1895F8858](v13);
  uint64_t v16 = &v21[-v15 - 8];
  LOBYTE(a1) = *a1;
  sub_18902A03C(a2, (uint64_t)v21);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = a3;
  *(void *)(v17 + 24) = a4;
  sub_18902A03C((uint64_t)v21, v17 + 32);
  *(_BYTE *)(v17 + 81) = (_BYTE)a1;
  sub_189048624((uint64_t)sub_189036E4C, v17, v10, v18, v16);
  return (*(uint64_t (**)(uint64_t, void *, uint64_t))(v14 + 32))(a5, v16, v13);
}

uint64_t sub_189036B3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  int v45 = a5;
  uint64_t v44 = a4;
  uint64_t v41 = a2;
  uint64_t v42 = a3;
  uint64_t v40 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v39[1] = *(void *)(AssociatedConformanceWitness + 8);
  uint64_t v46 = sub_189067D48();
  uint64_t v43 = *(void *)(v46 - 8);
  uint64_t v11 = MEMORY[0x1895F8858](v46);
  uint64_t v13 = (char *)v39 - v12;
  uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1895F8858](v11);
  uint64_t v16 = (char *)v39 - v15;
  sub_189067C34();
  uint64_t v49 = a6;
  uint64_t v50 = a7;
  uint64_t v47 = a7;
  uint64_t v17 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC3A0);
  uint64_t v19 = sub_189000678( (void (*)(char *, char *))sub_1890392AC,  (uint64_t)v48,  AssociatedTypeWitness,  v17,  MEMORY[0x18961A520],  AssociatedConformanceWitness,  MEMORY[0x18961A528],  v18);
  uint64_t v20 = *(void (**)(char *, uint64_t))(v14 + 8);
  v20(v16, AssociatedTypeWitness);
  uint64_t v21 = *(void *)(v19 + 16);
  if (v21)
  {
    char v22 = (uint64_t *)(v19 + 40);
    uint64_t v23 = v21 - 1;
    do
    {
      uint64_t v24 = *v22;
      v22 += 7;
      BOOL v25 = v24 != 0;
      if (v24) {
        BOOL v26 = 1;
      }
      else {
        BOOL v26 = v23 == 0;
      }
      --v23;
    }

    while (!v26);
  }

  else
  {
    BOOL v25 = 0;
  }

  sub_189067C34();
  sub_18906794C();
  uint64_t v27 = ((uint64_t (*)(char *, uint64_t))v20)(v16, AssociatedTypeWitness);
  uint64_t v28 = MEMORY[0x1895F8858](v27);
  uint64_t v29 = v47;
  v39[-10] = a6;
  v39[-9] = v29;
  uint64_t v30 = v41;
  v39[-8] = v40;
  v39[-7] = v30;
  v39[-6] = v42;
  LOBYTE(v39[-5]) = v25;
  uint64_t v31 = v44;
  v39[-4] = v19;
  v39[-3] = v31;
  LOBYTE(v39[-2]) = v45;
  MEMORY[0x1895F8858](v28);
  v39[-4] = a6;
  v39[-3] = v32;
  v39[-2] = sub_1890392DC;
  v39[-1] = v33;
  uint64_t v34 = v46;
  uint64_t v35 = MEMORY[0x1895DD3F4](MEMORY[0x189619908], v46);
  uint64_t v37 = sub_189036324( (void (*)(char *, char *))sub_189038BB0,  (uint64_t)&v39[-6],  v34,  (uint64_t)&type metadata for ArgumentDefinition,  MEMORY[0x18961A520],  v35,  MEMORY[0x18961A528],  v36);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v13, v34);
  swift_bridgeObjectRelease();
  return sub_189011E78(v37);
}

uint64_t sub_189036E14()
{
  if (*(void *)(v0 + 40))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_deallocObject();
}

uint64_t sub_189036E4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_189036B3C(a1, a2, a3, v3 + 32, *(unsigned __int8 *)(v3 + 81), *(void *)(v3 + 16), *(void *)(v3 + 24));
}

void *sub_189036E5C@<X0>( unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, unsigned __int8 a10, uint64_t a11, uint64_t a12)
{
  void *(*v32)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t);
  void *result;
  uint64_t v34;
  char v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  char *v46;
  unint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74[6];
  char v75;
  uint64_t v76[15];
  void v77[6];
  unsigned __int8 v78;
  uint64_t v51 = a7;
  int v52 = a1;
  uint64_t v69 = a9;
  sub_18902A03C((uint64_t)a8, (uint64_t)v77);
  unint64_t v71 = v77[0];
  uint64_t v53 = v77[1];
  char v70 = v77[2];
  unint64_t v72 = v77[3];
  uint64_t v73 = v77[4];
  uint64_t v54 = v77[5];
  uint64_t v55 = v78;
  __int16 v68 = sub_189067AB4();
  int v67 = *(void *)(v68 - 8);
  uint64_t v18 = MEMORY[0x1895F8858](v68);
  char v66 = (char *)&v51 - v19;
  MEMORY[0x1895F8858](v18);
  int v60 = v20;
  uint64_t v21 = (char *)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v63 = v22;
  uint64_t v59 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
  v59(v21, a2, a11);
  uint64_t v56 = v21;
  uint64_t v23 = sub_1890677FC();
  unint64_t v25 = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v26 = v23;
  uint64_t v27 = a2;
  int v58 = a3;
  uint64_t v61 = sub_1890582C0(v26, v25, a3, a4, a5);
  unint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v32 = *(void *(**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))(a12 + 24);
  uint64_t v57 = v27;
  uint64_t v65 = a12;
  uint64_t result = v32(v76, v27, a11, a12);
  uint64_t v34 = v76[0];
  uint64_t v35 = a6;
  uint64_t v64 = v29;
  uint64_t v62 = v31;
  if ((a6 & 1) == 0) {
    goto LABEL_6;
  }
  if ((v52 & 0x8000000000000000LL) != 0)
  {
    __break(1u);
  }

  else if (*(void *)(v51 + 16) > v52)
  {
    uint64_t v36 = v51 + 56 * v52;
    uint64_t v37 = *(void *)(v36 + 40);
    if (v37)
    {
      uint64_t v38 = v36 + 32;
      uint64_t v39 = *(_BYTE *)(v38 + 48);
      uint64_t v40 = *(void *)(v38 + 40);
      uint64_t v73 = *(void *)(v38 + 32);
      uint64_t v41 = *(void *)(v38 + 24);
      char v70 = *(void *)(v38 + 16);
      unint64_t v71 = *(void *)v38;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v72 = v41;
      swift_bridgeObjectRetain();
LABEL_7:
      uint64_t v55 = a10;
      v74[0] = v71;
      v74[1] = v37;
      v74[2] = v70;
      v74[3] = v72;
      v74[4] = v73;
      v74[5] = v40;
      uint64_t v75 = v39;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v42 = v58;
      sub_189048BAC(MEMORY[0x18961AFE8], 1LL, v74, 0LL, 0LL, v58, a4, a5, (uint64_t)v76, (v35 & 1) == 0);
      uint64_t v73 = v76[2];
      unint64_t v72 = v76[3];
      unint64_t v71 = v76[4];
      char v70 = v76[7];
      uint64_t v54 = v76[9];
      uint64_t v53 = v76[11];
      int v52 = v76[14];
      v74[0] = v34;
      uint64_t v43 = v63;
      uint64_t v44 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v63 + 56);
      uint64_t v51 = v34;
      int v45 = (uint64_t)v66;
      v44(v66, 1LL, 1LL, a11);
      uint64_t v46 = v56;
      v59(v56, v57, a11);
      uint64_t v47 = (*(unsigned __int8 *)(v43 + 80) + 56LL) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
      uint64_t v48 = v47 + v60;
      uint64_t v49 = (char *)swift_allocObject();
      uint64_t v50 = v65;
      *((void *)v49 + 2) = a11;
      *((void *)v49 + 3) = v50;
      *((void *)v49 + 4) = v42;
      *((void *)v49 + 5) = a4;
      *((void *)v49 + 6) = a5;
      (*(void (**)(char *, char *, uint64_t))(v43 + 32))(&v49[v47], v46, a11);
      v49[v48] = v55;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_189035FC8(v42, a4, a5, v61, v64, v76, v69, 0, v45, (uint64_t)sub_18903931C, (uint64_t)v49, 0, a11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v45, v68);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (void *)swift_bridgeObjectRelease();
    }

double sub_18903742C@<D0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = a3;
  v9[3] = a4;
  sub_18902A03C((uint64_t)v23, (uint64_t)(v9 + 4));
  v9[11] = a1;
  uint64_t v10 = sub_189067A30();
  sub_189048624((uint64_t)sub_189038B64, (uint64_t)v9, v10, v11, &v19);
  __int128 v17 = v19;
  char v18 = v20;
  uint64_t v14 = type metadata accessor for Parsed(0LL, v10, v12, v13);
  (*(void (**)(__int128 *, __int128 *, uint64_t))(*(void *)(v14 - 8) + 32LL))(&v21, &v17, v14);
  char v15 = v22;
  double result = *(double *)&v21;
  *(_OWORD *)a5 = v21;
  *(_BYTE *)(a5 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v15;
  return result;
}

uint64_t sub_189037514(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v44 = a4;
  uint64_t v45 = a5;
  uint64_t v41 = a2;
  uint64_t v42 = a3;
  uint64_t v40 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v39[1] = *(void *)(AssociatedConformanceWitness + 8);
  uint64_t v46 = sub_189067D48();
  uint64_t v43 = *(void *)(v46 - 8);
  uint64_t v11 = MEMORY[0x1895F8858](v46);
  uint64_t v13 = (char *)v39 - v12;
  uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1895F8858](v11);
  uint64_t v16 = (char *)v39 - v15;
  sub_189067C34();
  uint64_t v49 = a6;
  uint64_t v50 = a7;
  uint64_t v47 = a7;
  __int128 v17 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC3A0);
  uint64_t v19 = sub_189000678( (void (*)(char *, char *))sub_189039708,  (uint64_t)v48,  AssociatedTypeWitness,  v17,  MEMORY[0x18961A520],  AssociatedConformanceWitness,  MEMORY[0x18961A528],  v18);
  char v20 = *(void (**)(char *, uint64_t))(v14 + 8);
  v20(v16, AssociatedTypeWitness);
  uint64_t v21 = *(void *)(v19 + 16);
  if (v21)
  {
    char v22 = (uint64_t *)(v19 + 40);
    uint64_t v23 = v21 - 1;
    do
    {
      uint64_t v24 = *v22;
      v22 += 7;
      BOOL v25 = v24 != 0;
      if (v24) {
        BOOL v26 = 1;
      }
      else {
        BOOL v26 = v23 == 0;
      }
      --v23;
    }

    while (!v26);
  }

  else
  {
    BOOL v25 = 0;
  }

  sub_189067C34();
  sub_18906794C();
  uint64_t v27 = ((uint64_t (*)(char *, uint64_t))v20)(v16, AssociatedTypeWitness);
  uint64_t v28 = MEMORY[0x1895F8858](v27);
  uint64_t v29 = v47;
  v39[-10] = a6;
  v39[-9] = v29;
  uint64_t v30 = v41;
  v39[-8] = v40;
  v39[-7] = v30;
  v39[-6] = v42;
  LOBYTE(v39[-5]) = v25;
  uint64_t v31 = v44;
  v39[-4] = v19;
  v39[-3] = v31;
  v39[-2] = v45;
  MEMORY[0x1895F8858](v28);
  v39[-4] = a6;
  v39[-3] = v32;
  v39[-2] = sub_189038B74;
  v39[-1] = v33;
  uint64_t v34 = v46;
  uint64_t v35 = MEMORY[0x1895DD3F4](MEMORY[0x189619908], v46);
  uint64_t v37 = sub_189036324( (void (*)(char *, char *))sub_189038BB0,  (uint64_t)&v39[-6],  v34,  (uint64_t)&type metadata for ArgumentDefinition,  MEMORY[0x18961A520],  v35,  MEMORY[0x18961A528],  v36);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v13, v34);
  swift_bridgeObjectRelease();
  return sub_189011E78(v37);
}

void *sub_1890377E8@<X0>( unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  void *(*v32)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  char v34;
  void *result;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  unint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77[6];
  char v78;
  uint64_t v79[12];
  void v80[6];
  unsigned __int8 v81;
  uint64_t v55 = a7;
  LODWORD(v72) = a6;
  uint64_t v56 = a1;
  unint64_t v71 = a9;
  uint64_t v17 = sub_18902A03C((uint64_t)a8, (uint64_t)v80);
  uint64_t v74 = v80[0];
  uint64_t v57 = v80[1];
  uint64_t v73 = v80[2];
  uint64_t v75 = v80[3];
  int v58 = v80[4];
  uint64_t v59 = v80[5];
  LODWORD(v60) = v81;
  MEMORY[0x1895F8858](v17);
  uint64_t v62 = v18;
  uint64_t v19 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v65 = v20;
  uint64_t v61 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  v61(v19, a2, a11);
  uint64_t v64 = v19;
  uint64_t v21 = sub_1890677FC();
  unint64_t v23 = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v24 = v21;
  uint64_t v63 = a3;
  uint64_t v25 = a4;
  uint64_t v26 = a4;
  uint64_t v27 = a5;
  int v67 = sub_1890582C0(v24, v23, a3, v26, a5);
  unint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v32 = *(void *(**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))(a12 + 24);
  char v66 = a2;
  uint64_t v33 = a2;
  uint64_t v34 = v72;
  __int16 v68 = a12;
  double result = v32(v79, v33, a11, a12);
  uint64_t v36 = v79[0];
  char v70 = v29;
  uint64_t v69 = v31;
  if ((v34 & 1) == 0) {
    goto LABEL_6;
  }
  if ((v56 & 0x8000000000000000LL) != 0)
  {
    __break(1u);
  }

  else if (*(void *)(v55 + 16) > v56)
  {
    uint64_t v37 = v55 + 56 * v56;
    uint64_t v38 = *(void *)(v37 + 40);
    if (v38)
    {
      uint64_t v39 = v37 + 32;
      uint64_t v40 = *(_BYTE *)(v39 + 48);
      uint64_t v42 = *(void *)(v39 + 32);
      uint64_t v41 = *(void *)(v39 + 40);
      uint64_t v43 = *(void *)(v39 + 24);
      uint64_t v73 = *(void *)(v39 + 16);
      uint64_t v74 = *(void *)v39;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v75 = v43;
      swift_bridgeObjectRetain();
LABEL_7:
      v77[0] = v74;
      v77[1] = v38;
      v77[2] = v73;
      v77[3] = v75;
      v77[4] = v42;
      v77[5] = v41;
      unint64_t v78 = v40;
      uint64_t v44 = v25;
      swift_bridgeObjectRetain();
      uint64_t v45 = v27;
      swift_bridgeObjectRetain();
      uint64_t v53 = (v34 & 1) == 0;
      uint64_t v46 = v63;
      sub_189048BAC(MEMORY[0x18961AFE8], 1LL, v77, 0LL, 0LL, v63, v25, v27, (uint64_t)v79, v53);
      uint64_t v75 = v79[2];
      uint64_t v74 = v79[3];
      uint64_t v73 = v79[4];
      unint64_t v72 = v79[7];
      int v60 = v79[9];
      uint64_t v59 = v79[11];
      v77[0] = v36;
      uint64_t v76 = a10;
      uint64_t v47 = v64;
      v61(v64, v66, a11);
      uint64_t v48 = v65;
      uint64_t v49 = (*(unsigned __int8 *)(v65 + 80) + 56LL) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
      uint64_t v50 = (char *)swift_allocObject();
      uint64_t v51 = v68;
      *((void *)v50 + 2) = a11;
      *((void *)v50 + 3) = v51;
      *((void *)v50 + 4) = v46;
      *((void *)v50 + 5) = v44;
      *((void *)v50 + 6) = v45;
      (*(void (**)(char *, char *, uint64_t))(v48 + 32))(&v50[v49], v47, a11);
      int v52 = sub_189067A30();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_189035FC8(v46, v44, v45, v67, v70, v79, v71, 0, (uint64_t)&v76, (uint64_t)sub_189038DDC, (uint64_t)v50, 0, v52);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (void *)swift_bridgeObjectRelease();
    }

uint64_t sub_189037D28(uint64_t a1)
{
  return sub_189067A0C();
}

double Flag.init<A>(wrappedValue:help:)@<D0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v6 = *(_BYTE *)(a2 + 48);
  __int128 v7 = *(_OWORD *)(a2 + 16);
  v10[0] = *(_OWORD *)a2;
  v10[1] = v7;
  uint64_t v10[2] = *(_OWORD *)(a2 + 32);
  char v11 = v6;
  sub_18903742C(a1, (uint64_t)v10, a3, a4, (uint64_t)&v12);
  char v8 = v13;
  double result = *(double *)&v12;
  *(_OWORD *)a5 = v12;
  *(_BYTE *)(a5 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v8;
  return result;
}

double Flag.init<A>(help:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v5 = *(_BYTE *)(a1 + 48);
  __int128 v6 = *(_OWORD *)(a1 + 16);
  v9[0] = *(_OWORD *)a1;
  v9[1] = v6;
  void v9[2] = *(_OWORD *)(a1 + 32);
  char v10 = v5;
  sub_18903742C(0LL, (uint64_t)v9, a2, a3, (uint64_t)&v11);
  char v7 = v12;
  double result = *(double *)&v11;
  *(_OWORD *)a4 = v11;
  *(_BYTE *)(a4 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v7;
  return result;
}

uint64_t sub_189037E60(uint64_t a1)
{
  uint64_t result = MEMORY[0x1895DD3F4](&protocol conformance descriptor for Flag<A>);
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = result;
  return result;
}

uint64_t sub_189037E8C(uint64_t a1)
{
  uint64_t result = MEMORY[0x1895DD3F4](&unk_189069C84);
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_189037EBC()
{
  unint64_t result = qword_18C7613E0;
  if (!qword_18C7613E0)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&protocol conformance descriptor for FlagInversion, &type metadata for FlagInversion);
    atomic_store(result, (unint64_t *)&qword_18C7613E0);
  }

  return result;
}

unint64_t sub_189037F04()
{
  unint64_t result = qword_18C7613E8;
  if (!qword_18C7613E8)
  {
    unint64_t result = MEMORY[0x1895DD3F4]( &protocol conformance descriptor for FlagExclusivity,  &type metadata for FlagExclusivity);
    atomic_store(result, (unint64_t *)&qword_18C7613E8);
  }

  return result;
}

uint64_t sub_189037F48@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v5 = type metadata accessor for Flag(0LL, *(void *)(a2 + a1 - 8), a2, a3);
  return Flag.wrappedValue.getter(v5, v6, v7, a4);
}

uint64_t sub_189037F84()
{
  return 8LL;
}

void *sub_189037F90(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t *sub_189037F9C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8LL);
  if (*(void *)(v4 + 64) <= 0x10uLL) {
    uint64_t v5 = 16LL;
  }
  else {
    uint64_t v5 = *(void *)(v4 + 64);
  }
  int v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    uint64_t v8 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
  }

  else
  {
    unsigned int v9 = *((unsigned __int8 *)a2 + v5);
    if (v9 >= 2)
    {
      else {
        uint64_t v10 = 4LL;
      }
      __asm { BR              X13 }
    }

    if (v9 != 1)
    {
      (*(void (**)(uint64_t *))(v4 + 16))(a1);
      *((_BYTE *)v3 + v5) = 0;
      return v3;
    }

    uint64_t v11 = a2[1];
    *uint64_t v3 = *a2;
    v3[1] = v11;
    *((_BYTE *)v3 + v5) = 1;
  }

  swift_retain();
  return v3;
}

uint64_t sub_1890380B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8LL);
  unint64_t v3 = *(void *)(v2 + 64);
  if (v3 <= 0x10) {
    unint64_t v3 = 16LL;
  }
  unsigned int v4 = *(unsigned __int8 *)(a1 + v3);
  if (v4 < 2)
  {
    if (v4 == 1) {
      return swift_release();
    }
    else {
      return (*(uint64_t (**)(void))(v2 + 8))();
    }
  }

  else
  {
    else {
      uint64_t v5 = 4LL;
    }
    return ((uint64_t (*)(void))((char *)&loc_1890380F8 + 4 * byte_189069C15[v5]))();
  }

void *sub_189038150(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8LL);
  if (*(void *)(v4 + 64) <= 0x10uLL) {
    uint64_t v5 = 16LL;
  }
  else {
    uint64_t v5 = *(void *)(v4 + 64);
  }
  unsigned int v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 2)
  {
    else {
      uint64_t v7 = 4LL;
    }
    __asm { BR              X13 }
  }

  if (v6 == 1)
  {
    uint64_t v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    swift_retain();
    char v9 = 1;
  }

  else
  {
    (*(void (**)(void *))(v4 + 16))(a1);
    char v9 = 0;
  }

  *((_BYTE *)a1 + v5) = v9;
  return a1;
}

void *sub_189038228(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 0x10uLL) {
      uint64_t v7 = 16LL;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = *((unsigned __int8 *)a1 + v7);
    if (v8 >= 2)
    {
      else {
        uint64_t v9 = 4LL;
      }
      __asm { BR              X12 }
    }

    if (v8 == 1) {
      swift_release();
    }
    else {
      (*(void (**)(void *, void))(v6 + 8))(a1, *(void *)(a3 + 16));
    }
    unsigned int v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 2)
    {
      else {
        uint64_t v11 = 4LL;
      }
      __asm { BR              X12 }
    }

    if (v10 == 1)
    {
      uint64_t v12 = a2[1];
      *a1 = *a2;
      a1[1] = v12;
      *((_BYTE *)a1 + v7) = 1;
      swift_retain();
    }

    else
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
      *((_BYTE *)a1 + v7) = 0;
    }
  }

  return a1;
}

_OWORD *sub_1890383B8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8LL);
  if (*(void *)(v4 + 64) <= 0x10uLL) {
    uint64_t v5 = 16LL;
  }
  else {
    uint64_t v5 = *(void *)(v4 + 64);
  }
  unsigned int v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 2)
  {
    else {
      uint64_t v7 = 4LL;
    }
    __asm { BR              X13 }
  }

  if (v6 == 1)
  {
    *a1 = *a2;
    char v8 = 1;
  }

  else
  {
    (*(void (**)(_OWORD *))(v4 + 32))(a1);
    char v8 = 0;
  }

  *((_BYTE *)a1 + v5) = v8;
  return a1;
}

_OWORD *sub_18903848C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 0x10uLL) {
      uint64_t v7 = 16LL;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = *((unsigned __int8 *)a1 + v7);
    if (v8 >= 2)
    {
      else {
        uint64_t v9 = 4LL;
      }
      __asm { BR              X12 }
    }

    if (v8 == 1) {
      swift_release();
    }
    else {
      (*(void (**)(_OWORD *, void))(v6 + 8))(a1, *(void *)(a3 + 16));
    }
    unsigned int v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 2)
    {
      else {
        uint64_t v11 = 4LL;
      }
      __asm { BR              X12 }
    }

    if (v10 == 1)
    {
      *a1 = *a2;
      char v12 = 1;
    }

    else
    {
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v6 + 32))(a1, a2, v5);
      char v12 = 0;
    }

    *((_BYTE *)a1 + v7) = v12;
  }

  return a1;
}

uint64_t sub_189038618(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = 16LL;
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8LL) + 64LL) > 0x10uLL) {
    uint64_t v3 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8LL) + 64LL);
  }
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0xFF) {
    goto LABEL_21;
  }
  uint64_t v4 = v3 + 1;
  char v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    unsigned int v8 = ((a2 + ~(-1 << v5) - 254) >> v5) + 1;
    if (HIWORD(v8))
    {
      int v6 = *(_DWORD *)(a1 + v4);
      if (!v6) {
        goto LABEL_21;
      }
      goto LABEL_14;
    }

    if (v8 > 0xFF)
    {
      int v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4)) {
        goto LABEL_21;
      }
      goto LABEL_14;
    }

    if (v8 < 2)
    {
LABEL_21:
      unsigned int v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 2) {
        return (v10 ^ 0xFF) + 1;
      }
      else {
        return 0LL;
      }
    }
  }

  int v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4)) {
    goto LABEL_21;
  }
LABEL_14:
  int v9 = (v6 - 1) << v5;
  if (!(_DWORD)v4) {
    return (v9 + 255);
  }
  return ((uint64_t (*)(void))((char *)&loc_1890386DC + 4 * byte_189069C38[(v4 - 1)]))();
}

void sub_189038728(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8LL) + 64LL);
  if (v5 <= 0x10) {
    unint64_t v5 = 16LL;
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFF)
  {
    unsigned int v7 = 0u;
  }

  else if (v6 <= 3)
  {
    unsigned int v9 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v9))
    {
      unsigned int v7 = 4u;
    }

    else if (v9 >= 0x100)
    {
      unsigned int v7 = 2;
    }

    else
    {
      unsigned int v7 = v9 > 1;
    }
  }

  else
  {
    unsigned int v7 = 1u;
  }

  if (a2 <= 0xFE) {
    __asm { BR              X11 }
  }

  unsigned int v8 = a2 - 255;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      int v10 = v8 & ~(-1 << (8 * v6));
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v10;
        *((_BYTE *)a1 + 2) = BYTE2(v10);
      }

      else if ((_DWORD)v6 == 2)
      {
        *a1 = v10;
      }

      else
      {
        *(_BYTE *)a1 = v10;
      }
    }
  }

  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v8;
  }

  __asm { BR              X10 }

ValueMetadata *type metadata accessor for FlagInversion()
{
  return &type metadata for FlagInversion;
}

ValueMetadata *type metadata accessor for FlagExclusivity()
{
  return &type metadata for FlagExclusivity;
}

uint64_t _s22ArgumentParserInternal15FlagExclusivityV14RepresentationOwst_0( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFD) {
    return ((uint64_t (*)(void))((char *)&loc_189038948 + 4 * byte_189069C4B[v4]))();
  }
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_18903897C + 4 * byte_189069C46[v4]))();
}

uint64_t sub_18903897C(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_189038984(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x18903898CLL);
  }
  return result;
}

uint64_t sub_189038998(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x1890389A0LL);
  }
  *(_BYTE *)unint64_t result = a2 + 2;
  return result;
}

uint64_t sub_1890389A4(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1890389AC(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FlagExclusivity.Representation()
{
  return &type metadata for FlagExclusivity.Representation;
}

uint64_t _s22ArgumentParserInternal13FlagInversionV14RepresentationOwst_0( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_189038A14 + 4 * byte_189069C55[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_189038A48 + 4 * byte_189069C50[v4]))();
}

uint64_t sub_189038A48(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_189038A50(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x189038A58LL);
  }
  return result;
}

uint64_t sub_189038A64(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x189038A6CLL);
  }
  *(_BYTE *)unint64_t result = a2 + 1;
  return result;
}

uint64_t sub_189038A70(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_189038A78(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FlagInversion.Representation()
{
  return &type metadata for FlagInversion.Representation;
}

unint64_t sub_189038A98()
{
  unint64_t result = qword_18C7613F0;
  if (!qword_18C7613F0)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&unk_189069E80, &type metadata for FlagInversion.Representation);
    atomic_store(result, (unint64_t *)&qword_18C7613F0);
  }

  return result;
}

unint64_t sub_189038AE0()
{
  unint64_t result = qword_18C7613F8;
  if (!qword_18C7613F8)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&unk_189069EE8, &type metadata for FlagExclusivity.Representation);
    atomic_store(result, (unint64_t *)&qword_18C7613F8);
  }

  return result;
}

uint64_t sub_189038B24()
{
  if (*(void *)(v0 + 40))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_189038B64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_189037514(a1, a2, a3, (uint64_t)(v3 + 4), v3[11], v3[2], v3[3]);
}

void *sub_189038B74@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1890377E8( a1,  a2,  *(void *)(v3 + 32),  *(void *)(v3 + 40),  *(void *)(v3 + 48),  *(unsigned __int8 *)(v3 + 56),  *(void *)(v3 + 64),  *(uint64_t **)(v3 + 72),  a3,  *(void *)(v3 + 80),  *(void *)(v3 + 16),  *(void *)(v3 + 24));
}

uint64_t sub_189038BB0(char *a1)
{
  return sub_1890394D8(a1);
}

uint64_t sub_189038BC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v21 = a4;
  uint64_t v22 = a6;
  uint64_t v23 = a2;
  uint64_t v11 = sub_189067AB4();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1895F8858](v11);
  uint64_t v15 = (char *)&v21 - v14;
  uint64_t v16 = *(void *)(a7 - 8);
  MEMORY[0x1895F8858](v13);
  uint64_t v18 = (char *)&v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a3, v11);
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v15, a7);
  v27[3] = a7;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v27);
  (*(void (**)(uint64_t *, char *, uint64_t))(v16 + 16))(boxed_opaque_existential_1Tm, v18, a7);
  sub_188FFCE1C((uint64_t)v27, (uint64_t)v25);
  v24[0] = v21;
  v24[1] = a5;
  void v24[2] = v22;
  v25[4] = a1;
  char v26 = 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_18904CEF0(v24);
  sub_189014560((uint64_t)v24);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, a7);
  return sub_189039260((uint64_t)v27);
}

uint64_t sub_189038D68()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_189038DDC(uint64_t a1)
{
  uint64_t v3 = v1[4];
  uint64_t v4 = v1[5];
  unint64_t v5 = (void *)v1[6];
  uint64_t v6 = sub_18906773C();
  sub_18904C718(v3, v4, v5, a1, v6, (void (*)(uint64_t *))sub_1890392A0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_189038EA0(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000LL) == 0) {
      uint64_t v4 = a2 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v19 = v4;
    unint64_t v5 = (unsigned __int8 *)(swift_bridgeObjectRetain() + 48);
    uint64_t v6 = (char *)MEMORY[0x18961AFE8];
    while (1)
    {
      uint64_t v7 = *((void *)v5 - 2);
      uint64_t v8 = *((void *)v5 - 1);
      unsigned int v9 = *v5;
      if (!(v9 >> 6)) {
        break;
      }
      if (v9 >> 6 == 1)
      {
        char v10 = v9 & 1 | 0x40;
LABEL_9:
        unint64_t v11 = *((void *)v5 - 2);
        uint64_t v12 = *((void *)v5 - 1);
        goto LABEL_10;
      }

      if (v8 | v7 || v9 != 128)
      {
        if (!v19)
        {
          sub_189067C28();
          sub_18906788C();
          swift_bridgeObjectRetain();
          sub_18906788C();
          swift_bridgeObjectRelease();
          sub_18906788C();
          uint64_t result = sub_189067D3C();
          __break(1u);
          return result;
        }

        swift_bridgeObjectRetain();
        unint64_t v11 = sub_189067904();
        uint64_t v12 = v17;
        swift_bridgeObjectRelease();
        char v10 = 64;
      }

      else
      {
        swift_bridgeObjectRetain();
        unint64_t v11 = sub_188FFDD70(45LL, 0xE100000000000000LL, a2, a3);
        uint64_t v12 = v16;
        swift_bridgeObjectRelease();
        char v10 = 0;
      }

LABEL_10:
      sub_188FFD4F4(v7, v8, v9);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v6 = sub_189057094(0LL, *((void *)v6 + 2) + 1LL, 1, v6);
      }
      unint64_t v14 = *((void *)v6 + 2);
      unint64_t v13 = *((void *)v6 + 3);
      if (v14 >= v13 >> 1) {
        uint64_t v6 = sub_189057094((char *)(v13 > 1), v14 + 1, 1, v6);
      }
      v5 += 24;
      *((void *)v6 + 2) = v14 + 1;
      uint64_t v15 = &v6[24 * v14];
      *((void *)v15 + 4) = v11;
      *((void *)v15 + 5) = v12;
      v15[48] = v10;
      if (!--v3)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)v6;
      }
    }

    char v10 = (_BYTE)v9 << 7;
    goto LABEL_9;
  }

  return MEMORY[0x18961AFE8];
}

    *((void *)&v37 + 1) = MEMORY[0x1896184C8];
    LOBYTE(v36) = v55 & 1;
    sub_188FFCE1C((uint64_t)&v36, (uint64_t)&v42 + 8);
    *(void *)&uint64_t v41 = a1;
    *((void *)&v41 + 1) = a2;
    *(void *)&uint64_t v42 = a3;
    *((void *)&v44 + 1) = a5;
    uint64_t v45 = 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_18904CEF0((uint64_t *)&v41);
    sub_189014560((uint64_t)&v41);
    uint64_t v21 = &qword_18C4FC878;
    goto LABEL_11;
  }

  uint64_t result = swift_release();
  __break(1u);
  return result;
}

      sub_188FFD4F4(v20, v19, v21);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v18 = sub_189057094(0LL, *((void *)v18 + 2) + 1LL, 1, v18);
      }
      char v26 = *((void *)v18 + 2);
      uint64_t v25 = *((void *)v18 + 3);
      if (v26 >= v25 >> 1) {
        uint64_t v18 = sub_189057094((char *)(v25 > 1), v26 + 1, 1, v18);
      }
      v17 += 24;
      *((void *)v18 + 2) = v26 + 1;
      uint64_t v27 = &v18[24 * v26];
      *((void *)v27 + 4) = v23;
      *((void *)v27 + 5) = v24;
      v27[48] = v22;
      if (!--v14)
      {
        swift_bridgeObjectRelease_n();
        unsigned int v9 = a8;
        a3 = v51;
        char v10 = a7;
        unint64_t v11 = a5;
        goto LABEL_22;
      }
    }

    uint64_t v22 = (_BYTE)v21 << 7;
    goto LABEL_9;
  }

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v18 = (char *)MEMORY[0x18961AFE8];
LABEL_22:
  if (a9 == 255) {
    uint64_t v30 = 0LL;
  }
  else {
    uint64_t v30 = v10;
  }
  uint64_t v55 = v30;
  if (a9 == 255) {
    uint64_t v31 = 0LL;
  }
  else {
    uint64_t v31 = v9;
  }
  int v52 = v31;
  if (a9 == 255) {
    uint64_t v32 = 4;
  }
  else {
    uint64_t v32 = a9;
  }
  uint64_t v50 = v32;
  sub_189011B78((uint64_t)v11, (uint64_t)v58, &qword_18C4FC3A0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1890140A4(v11);
  sub_189014118(v10, v9, a9);
  sub_189048BAC(MEMORY[0x18961AFE8], 0LL, v58, 0LL, 0LL, a1, a2, a3, (uint64_t)&v59, 0);
  uint64_t v41 = v59;
  uint64_t v33 = v60;
  uint64_t v34 = v62;
  uint64_t v46 = v64;
  uint64_t v48 = v63;
  uint64_t v35 = v65;
  uint64_t v44 = v66;
  uint64_t v43 = v67;
  uint64_t v36 = v68;
  uint64_t v42 = v69;
  uint64_t v37 = (void *)swift_allocObject();
  void v37[2] = sub_189013E80;
  v37[3] = 0LL;
  v37[4] = a1;
  v37[5] = a2;
  v37[6] = a3;
  v58[0] = 0LL;
  v58[1] = 0LL;
  uint64_t v38 = (void *)swift_allocObject();
  uint64_t v38[2] = v18;
  sub_189011B78((uint64_t)v58, (uint64_t)(v38 + 3), &qword_18C4FC7E0);
  v38[5] = a1;
  v38[6] = a2;
  v38[7] = a3;
  char v70 = 1;
  uint64_t v57 = v61;
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC818);
  uint64_t v39 = swift_allocObject();
  *(_OWORD *)(v39 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = xmmword_1890684B0;
  *(void *)(v39 + 32) = v18;
  *(_OWORD *)(v39 + 40) = v41;
  *(void *)(v39 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = v33;
  *(_OWORD *)(v39 + 64) = v57;
  *(_BYTE *)(v39 + 80) = v34;
  *(_OWORD *)(v39 + 88) = v48;
  *(_OWORD *)(v39 + 104) = v46;
  *(void *)(v39 + 120) = v35;
  *(void *)(v39 + 128) = v44;
  *(_BYTE *)(v39 + 136) = v43;
  *(void *)(v39 + 144) = v36;
  *(void *)(v39 + 152) = v42;
  *(void *)(v39 + 160) = v55;
  *(void *)(v39 + 168) = v52;
  *(_BYTE *)(v39 + 176) = v50;
  *(_BYTE *)(v39 + 177) = a6;
  *(void *)(v39 + 184) = sub_18904691C;
  *(void *)(v39 + 192) = v37;
  *(_BYTE *)(v39 + 200) = v70;
  *(void *)(v39 + 208) = sub_189046990;
  *(void *)(v39 + 2__swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v38;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_189011E78(v39);
}

      uint64_t v17 = sub_189052F08(a1, a2, a3);
      sub_188FFAD68();
      swift_allocError();
      *(void *)uint64_t v18 = v17;
      *(_OWORD *)(v18 + 8) = 0u;
      *(_OWORD *)(v18 + 24) = 0u;
      *(_OWORD *)(v18 + 40) = 0u;
      *(_OWORD *)(v18 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = 0u;
      *(void *)(v18 + 72) = 0LL;
      uint64_t v19 = 9;
    }

    else
    {
      uint64_t v34 = a6;
      uint64_t v46 = 0LL;
      uint64_t v20 = *(void *)(a5 + 16);
      if (v20)
      {
        uint64_t v21 = (_OWORD *)(a5 + 32);
        swift_bridgeObjectRetain();
        uint64_t v33 = v20;
        while (1)
        {
          sub_189046084(v21, &v38);
          sub_189006BE4((uint64_t)v39, (uint64_t)&v35);
          swift_bridgeObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC4A8);
          __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC490);
          if ((swift_dynamicCast() & 1) == 0)
          {
            uint64_t v42 = 0LL;
            uint64_t v40 = 0u;
            uint64_t v41 = 0u;
          }

          sub_1890460C0((uint64_t)&v38);
          sub_189011B78((uint64_t)&v40, (uint64_t)&v38, &qword_18C4FC498);
          swift_bridgeObjectRelease();
          uint64_t v22 = v39[1];
          sub_1890460F4((uint64_t)&v38);
          if (v22) {
            break;
          }
          uint64_t v21 = (_OWORD *)((char *)v21 + 56);
          if (!--v20) {
            goto LABEL_25;
          }
        }

        uint64_t v23 = v33 - 1;
        uint64_t v24 = (_OWORD *)(a5 + 56 * v33 - 24);
        while (1)
        {
          sub_189046084(v24, &v38);
          sub_189006BE4((uint64_t)v39, (uint64_t)&v35);
          if ((swift_dynamicCast() & 1) == 0)
          {
            uint64_t v42 = 0LL;
            uint64_t v40 = 0u;
            uint64_t v41 = 0u;
          }

          sub_1890460C0((uint64_t)&v38);
          uint64_t v25 = *((void *)&v41 + 1);
          sub_1890460F4((uint64_t)&v40);
          if (v25) {
            break;
          }
          --v23;
          uint64_t v24 = (_OWORD *)((char *)v24 - 56);
          if (v23 >= v33)
          {
            __break(1u);
            goto LABEL_25;
          }
        }

        sub_189046084(v24, &v38);
        sub_189006BE4((uint64_t)v39, (uint64_t)&v40);
        if ((swift_dynamicCast() & 1) == 0)
        {
          uint64_t v37 = 0LL;
          uint64_t v35 = 0u;
          uint64_t v36 = 0u;
        }

        sub_1890460C0((uint64_t)&v38);
        sub_189011B78((uint64_t)&v35, (uint64_t)&v40, &qword_18C4FC498);
        uint64_t result = sub_189046134((uint64_t)&v40, (uint64_t)&v35);
        char v26 = v34;
        if (!*((void *)&v36 + 1)) {
          goto LABEL_40;
        }
        sub_188FFCFB0(&v35, (uint64_t)&v38);
        sub_1890460F4((uint64_t)&v40);
        sub_188FFCFB0(&v38, (uint64_t)&v43);
      }

      else
      {
        swift_bridgeObjectRetain();
LABEL_25:
        uint64_t v45 = 0LL;
        uint64_t v43 = 0u;
        uint64_t v44 = 0u;
        char v26 = v34;
      }

      swift_bridgeObjectRelease();
      if (*((void *)&v44 + 1)) {
        return sub_188FFCFB0(&v43, v26);
      }
      sub_1890460F4((uint64_t)&v43);
      sub_188FFAD68();
      swift_allocError();
      *(void *)uint64_t v18 = 3LL;
      *(_OWORD *)(v18 + 8) = 0u;
      *(_OWORD *)(v18 + 24) = 0u;
      *(_OWORD *)(v18 + 40) = 0u;
      *(_OWORD *)(v18 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = 0u;
      *(void *)(v18 + 72) = 0LL;
      uint64_t v19 = 15;
    }

    *(_BYTE *)(v18 + 80) = v19;
    return swift_willThrow();
  }

  return result;
}

    if (__OFADD__(v2, 1LL)) {
      __break(1u);
    }
    else {
      v3[1] = (char *)(v2 + 1);
    }
  }

  return result;
}

  __break(1u);
  return result;
}

uint64_t sub_189039128()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(sub_189067AB4() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v1 - 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1890391E0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(sub_189067AB4() - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 24LL) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (uint64_t *)(v2 + ((*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8LL));
  return sub_189038BC4(a1, a2, v2 + v7, *v8, v8[1], v8[2], v5);
}

uint64_t sub_189039260(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC878);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_1890392A0(uint64_t a1)
{
  return sub_189037D28(a1);
}

uint64_t sub_1890392AC()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 24) + 32LL))();
}

void *sub_1890392DC@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_189036E5C( a1,  a2,  *(void *)(v3 + 32),  *(void *)(v3 + 40),  *(void *)(v3 + 48),  *(_BYTE *)(v3 + 56),  *(void *)(v3 + 64),  *(uint64_t **)(v3 + 72),  a3,  *(_BYTE *)(v3 + 80),  *(void *)(v3 + 16),  *(void *)(v3 + 24));
}

uint64_t sub_18903931C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int128 *a5)
{
  return sub_1890395C8(a1, a2, a3, a4, a5);
}

uint64_t sub_189039330()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(sub_189067AB4() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v5 = v0 + v3;
  uint64_t v6 = *(void *)(v1 - 8);
  if (*(void *)(v0 + v4 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_deallocObject();
}

uint64_t sub_1890393E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(v3 + 16);
  uint64_t v8 = *(void *)(v3 + 24);
  uint64_t v9 = *(void *)(sub_189067AB4() - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = v3 + ((*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8LL);
  return sub_189034FB4(a1, a2, a3, v3 + v10, v11, *(unsigned __int8 *)(v11 + 49), v7, v8);
}

uint64_t sub_189039468@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_189035394(a1, v2[4], v2[5], v2[6], v2[2], v2[3], a2);
}

void *sub_18903948C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_189035554( a1,  a2,  *(void *)(v3 + 32),  *(void *)(v3 + 40),  *(void *)(v3 + 48),  *(void *)(v3 + 56),  *(void *)(v3 + 64),  *(unsigned __int8 *)(v3 + 72),  a3,  *(void *)(v3 + 80),  *(void *)(v3 + 88),  *(void *)(v3 + 96),  *(_BYTE *)(v3 + 104),  *(void *)(v3 + 16),  *(void *)(v3 + 24));
}

uint64_t sub_1890394D8(char *a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, char *))(v1 + 32);
  uint64_t v4 = *(void *)a1;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return v3(v4, &a1[*(int *)(TupleTypeMetadata2 + 48)]);
}

uint64_t objectdestroy_31Tm()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1890395C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int128 *a5)
{
  uint64_t v8 = v5[2];
  uint64_t v9 = v5[3];
  uint64_t v10 = *(void *)(v8 - 8);
  unint64_t v11 = (*(unsigned __int8 *)(v10 + 80) + 56LL) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = v5[4];
  uint64_t v13 = v5[5];
  unint64_t v14 = (void *)v5[6];
  unsigned __int8 v16 = *((_BYTE *)v5 + v11 + *(void *)(v10 + 64));
  return sub_18903A02C(v12, v13, v14, (uint64_t)v5 + v11, a1, a5, &v16, v8, *(void *)(v9 + 16));
}

uint64_t sub_18903962C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_18903B2E4(a1, a2, a3, a4, a5, *(void *)(v5 + 16), *(void *)(v5 + 24), *(void **)(v5 + 32));
}

uint64_t sub_18903964C(uint64_t a1, uint64_t a2)
{
  return sub_18903B4E0(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t objectdestroy_40Tm()
{
  return swift_deallocObject();
}

uint64_t sub_189039698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_18903B144(a1, a2, a3, a4, a5, v5[2], v5[3], v5[4]);
}

uint64_t sub_1890396B4()
{
  return swift_deallocObject();
}

uint64_t sub_1890396E0(uint64_t a1, uint64_t a2)
{
  return sub_18903B208(a1, a2, *(_BYTE *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_189039708()
{
  return sub_1890392AC();
}

uint64_t sub_18903971C()
{
  return sub_189009B3C(&qword_18C761400, &qword_18C761408, MEMORY[0x189619678]);
}

uint64_t sub_189039748(__int128 *a1)
{
  uint64_t v2 = v1;
  unint64_t v3 = (unsigned __int8 *)&v46;
  __int128 v4 = a1[3];
  __int128 v48 = a1[2];
  __int128 v49 = v4;
  __int128 v5 = a1[7];
  __int128 v52 = a1[6];
  __int128 v53 = v5;
  __int128 v6 = a1[5];
  __int128 v50 = a1[4];
  __int128 v51 = v6;
  __int128 v7 = a1[11];
  __int128 v56 = a1[10];
  __int128 v57 = v7;
  __int128 v8 = a1[9];
  __int128 v54 = a1[8];
  __int128 v55 = v8;
  __int128 v9 = a1[1];
  __int128 v46 = *a1;
  __int128 v47 = v9;
  uint64_t v10 = *v1;
  uint64_t v45 = *((void *)v10 + 2);
  sub_188FFCFF4((uint64_t)&v46);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_31:
  }
    uint64_t v10 = sub_1890578E0(0LL, v45 + 1, 1, v10);
  unint64_t v12 = *((void *)v10 + 2);
  unint64_t v11 = *((void *)v10 + 3);
  if (v12 >= v11 >> 1) {
    uint64_t v10 = sub_1890578E0((char *)(v11 > 1), v12 + 1, 1, v10);
  }
  *((void *)v10 + 2) = v12 + 1;
  uint64_t v13 = &v10[192 * v12];
  __int128 v14 = v46;
  __int128 v15 = v47;
  __int128 v16 = v49;
  *((_OWORD *)v13 + 4) = v48;
  *((_OWORD *)v13 + 5) = v16;
  *((_OWORD *)v13 + 2) = v14;
  *((_OWORD *)v13 + 3) = v15;
  __int128 v17 = v50;
  __int128 v18 = v51;
  __int128 v19 = v53;
  *((_OWORD *)v13 + 8) = v52;
  *((_OWORD *)v13 + 9) = v19;
  *((_OWORD *)v13 + 6) = v17;
  *((_OWORD *)v13 + 7) = v18;
  __int128 v20 = *((_OWORD *)v3 + 8);
  __int128 v21 = *((_OWORD *)v3 + 9);
  __int128 v22 = *((_OWORD *)v3 + 11);
  *((_OWORD *)v13 + 12) = *((_OWORD *)v3 + 10);
  *((_OWORD *)v13 + 13) = v22;
  *((_OWORD *)v13 + 10) = v20;
  *((_OWORD *)v13 + 11) = v21;
  *uint64_t v2 = v10;
  else {
    uint64_t v23 = MEMORY[0x18961AFE8];
  }
  uint64_t v24 = *(void *)(v23 + 16);
  if (!v24) {
    return swift_bridgeObjectRelease();
  }
  unint64_t v3 = (unsigned __int8 *)(v23 + 48);
  uint64_t v44 = v2;
  while (1)
  {
    uint64_t v25 = *((void *)v3 - 2);
    uint64_t v26 = *((void *)v3 - 1);
    unsigned __int8 v27 = *v3;
    if ((*v3 & 0xC0) == 0x40) {
      int v28 = 64;
    }
    else {
      int v28 = *v3;
    }
    uint64_t v29 = *((void *)v2[1] + 2);
    sub_188FFCF80(*((void *)v3 - 2), *((void *)v3 - 1), *v3);
    if (v29)
    {
      sub_18904D914(v25, v26, v28);
      if ((v30 & 1) != 0) {
        goto LABEL_11;
      }
    }

    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v10 = v2[1];
    v2[1] = (char *)0x8000000000000000LL;
    unint64_t v33 = sub_18904D914(v25, v26, v28);
    uint64_t v34 = *((void *)v10 + 2);
    BOOL v35 = (v32 & 1) == 0;
    uint64_t v36 = v34 + v35;
    if (__OFADD__(v34, v35))
    {
      __break(1u);
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }

    uint64_t v2 = v32;
    if (*((void *)v10 + 3) < v36) {
      break;
    }
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
    }

    else
    {
      sub_18904DAEC();
      if ((v2 & 1) == 0)
      {
LABEL_24:
        *(void *)&v10[8 * (v33 >> 6) + 64] |= 1LL << v33;
        uint64_t v39 = *((void *)v10 + 6) + 24 * v33;
        *(void *)uint64_t v39 = v25;
        *(void *)(v39 + 8) = v26;
        *(_BYTE *)(v39 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v28;
        *(void *)(*((void *)v10 + 7) + 8 * v33) = v45;
        uint64_t v40 = *((void *)v10 + 2);
        BOOL v41 = __OFADD__(v40, 1LL);
        uint64_t v42 = v40 + 1;
        if (v41) {
          goto LABEL_30;
        }
        *((void *)v10 + 2) = v42;
        sub_188FFCF80(v25, v26, v28);
        goto LABEL_10;
      }
    }

LABEL_9:
    *(void *)(*((void *)v10 + 7) + 8 * v33) = v45;
LABEL_10:
    uint64_t v2 = v44;
    v44[1] = v10;
    swift_bridgeObjectRelease();
LABEL_11:
    sub_188FFCF98(v25, v26, v27);
    v3 += 24;
    if (!--v24) {
      return swift_bridgeObjectRelease();
    }
  }

  sub_18904E1F8(v36, isUniquelyReferenced_nonNull_native);
  unint64_t v37 = sub_18904D914(v25, v26, v28);
  if ((v2 & 1) == (v38 & 1))
  {
    unint64_t v33 = v37;
    goto LABEL_9;
  }

  uint64_t result = sub_189067FC4();
  __break(1u);
  return result;
}

uint64_t sub_189039A58(uint64_t a1, uint64_t a2, __int16 a3, uint64_t a4)
{
  if (*(void *)(a4 + 16))
  {
    sub_189068030();
    if ((a3 & 0x100) == 0)
    {
      sub_18906803C();
      sub_18906803C();
      if ((a3 & 1) == 0) {
        sub_18906803C();
      }
    }

    sub_18906803C();
    uint64_t v8 = sub_189068060();
    uint64_t v9 = -1LL << *(_BYTE *)(a4 + 32);
    unint64_t v10 = v8 & ~v9;
    if (((*(void *)(a4 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v10) & 1) != 0)
    {
      uint64_t v11 = ~v9;
      do
      {
        uint64_t v12 = *(void *)(a4 + 48) + 24 * v10;
        if ((*(_BYTE *)(v12 + 17) & 1) != 0)
        {
          if ((a3 & 0x100) != 0) {
            return 1LL;
          }
        }

        else if ((a3 & 0x100) == 0 && *(void *)v12 == a1)
        {
          if ((*(_BYTE *)(v12 + 16) & 1) != 0)
          {
            if ((a3 & 1) != 0) {
              return 1LL;
            }
          }

          else if ((a3 & 1) == 0 && *(void *)(v12 + 8) == a2)
          {
            return 1LL;
          }
        }

        unint64_t v10 = (v10 + 1) & v11;
      }

      while (((*(void *)(a4 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v10) & 1) != 0);
    }
  }

  return 0LL;
}

uint64_t sub_189039B94(uint64_t a1, uint64_t a2, void *a3, int a4, uint64_t a5, __int128 *a6, char a7)
{
  int v55 = a4;
  __int128 v14 = a6[1];
  __int128 v52 = *a6;
  __int128 v53 = v14;
  uint64_t v54 = *((void *)a6 + 4);
  sub_18904C90C(a1, a2, a3, (uint64_t)&v36);
  if (!*((void *)&v36 + 1))
  {
    sub_188FFCDB0((uint64_t)&v36, &qword_18C4FC488);
    goto LABEL_10;
  }

  uint64_t v32 = a5;
  __int128 v43 = v38;
  __int128 v44 = v39;
  char v45 = v40;
  __int128 v41 = v36;
  __int128 v42 = v37;
  uint64_t v15 = *((void *)&v39 + 1);
  swift_bridgeObjectRetain_n();
  __int128 v16 = sub_188FFF0D0(v15);
  swift_bridgeObjectRelease();
  *(void *)&__int128 v36 = v16;
  swift_retain();
  sub_18903FCA8((char **)&v36);
  if (!v7)
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v17 = *(void *)(v36 + 16);
    swift_release();
    sub_189014560((uint64_t)&v41);
    if (v17)
    {
      a5 = v32;
      if (!a7)
      {
        __int128 v24 = a6[1];
        __int128 v46 = *a6;
        __int128 v47 = v24;
        uint64_t v48 = *((void *)a6 + 4);
        sub_18904C90C(a1, a2, a3, (uint64_t)&v36);
        if (*((void *)&v36 + 1))
        {
          __int128 v43 = v38;
          __int128 v44 = v39;
          char v45 = v40;
          __int128 v41 = v36;
          __int128 v42 = v37;
          sub_188FFCE1C((uint64_t)&v42 + 8, (uint64_t)&v36);
          __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC878);
          uint64_t v25 = MEMORY[0x1896184C8];
          if ((swift_dynamicCast() & 1) == 0 || v34[0] == 2 || ((v34[0] ^ v55) & 1) != 0)
          {
            uint64_t v26 = *((void *)&v44 + 1);
            uint64_t v27 = *((void *)a6 + 1);
            sub_188FFAD68();
            swift_allocError();
            *(void *)uint64_t v28 = v26;
            *(void *)(v28 + 8) = v32;
            *(void *)(v28 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v27;
            *(_OWORD *)(v28 + 24) = 0u;
            *(_OWORD *)(v28 + 40) = 0u;
            *(_OWORD *)(v28 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = 0u;
            *(void *)(v28 + 72) = 0LL;
            *(_BYTE *)(v28 + 80) = 10;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_willThrow();
            return sub_189014560((uint64_t)&v41);
          }

          uint64_t v35 = v25;
          v34[0] = v55 & 1;
          sub_188FFCE1C((uint64_t)v34, (uint64_t)&v37 + 8);
          *(void *)&__int128 v36 = a1;
          *((void *)&v36 + 1) = a2;
          *(void *)&__int128 v37 = a3;
          *((void *)&v39 + 1) = v32;
          char v40 = 1;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_18904CEF0((uint64_t *)&v36);
          sub_189014560((uint64_t)&v36);
          sub_189014560((uint64_t)&v41);
          __int128 v21 = &qword_18C4FC878;
          __int128 v22 = (__int128 *)v34;
          return sub_188FFCDB0((uint64_t)v22, v21);
        }

        __int128 v21 = &qword_18C4FC488;
LABEL_11:
        __int128 v22 = &v36;
        return sub_188FFCDB0((uint64_t)v22, v21);
      }

      if (a7 == 1)
      {
        __int128 v18 = a6[1];
        __int128 v49 = *a6;
        __int128 v50 = v18;
        uint64_t v51 = *((void *)a6 + 4);
        sub_18904C90C(a1, a2, a3, (uint64_t)&v36);
        uint64_t v19 = MEMORY[0x1896184C8];
        if (*((void *)&v36 + 1))
        {
          __int128 v43 = v38;
          __int128 v44 = v39;
          char v45 = v40;
          __int128 v41 = v36;
          __int128 v42 = v37;
          char v20 = v55;
        }

        else
        {
          char v20 = v55;
          BYTE8(v42) = v55 & 1;
          *(void *)&__int128 v41 = a1;
          *((void *)&v41 + 1) = a2;
          *(void *)&__int128 v42 = a3;
          *(void *)&__int128 v44 = MEMORY[0x1896184C8];
          *((void *)&v44 + 1) = MEMORY[0x18961AFF8];
          char v45 = 1;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_188FFCDB0((uint64_t)&v36, &qword_18C4FC488);
        }

        sub_188FFCE1C((uint64_t)&v42 + 8, (uint64_t)v34);
        __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC878);
        int v29 = swift_dynamicCast();
        char v30 = v33;
        if (v33 == 2) {
          char v30 = v20;
        }
        if (!v29) {
          char v30 = v20;
        }
        uint64_t v35 = v19;
        v34[0] = v30 & 1;
        sub_1890145A0((uint64_t)v34, (uint64_t)&v42 + 8);
        uint64_t v31 = swift_bridgeObjectRetain();
        sub_18904CD8C(v31);
        sub_18904CEF0((uint64_t *)&v41);
        return sub_189014560((uint64_t)&v41);
      }
    }

    else
    {
      a5 = v32;
    }

uint64_t sub_18903A02C( uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, __int128 *a6, unsigned __int8 *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v81 = *(void *)(a8 - 8);
  uint64_t v82 = a4;
  MEMORY[0x1895F8858](a1);
  unint64_t v71 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v83 = v16;
  uint64_t v17 = sub_189067AB4();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v73 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v18 = MEMORY[0x1895F8858](TupleTypeMetadata2);
  uint64_t v79 = (char *)&v67 - v19;
  uint64_t v74 = v17;
  uint64_t v77 = *(void *)(v17 - 8);
  uint64_t v20 = MEMORY[0x1895F8858](v18);
  unint64_t v72 = (char *)&v67 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = MEMORY[0x1895F8858](v20);
  uint64_t v76 = (char *)&v67 - v23;
  MEMORY[0x1895F8858](v22);
  unint64_t v78 = (char *)&v67 - v24;
  int v25 = *a7;
  __int128 v26 = a6[1];
  __int128 v100 = *a6;
  __int128 v101 = v26;
  uint64_t v27 = a6;
  uint64_t v28 = *((void *)a6 + 4);
  uint64_t v29 = a2;
  uint64_t v102 = v28;
  uint64_t v84 = a1;
  unsigned __int8 v85 = a3;
  sub_18904C90C(a1, a2, a3, (uint64_t)&v87);
  if (!*((void *)&v87 + 1))
  {
    sub_188FFCDB0((uint64_t)&v87, &qword_18C4FC488);
    uint64_t v36 = v83;
LABEL_9:
    *((void *)&v88 + 1) = v36;
    boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)&v87);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v81 + 16))(boxed_opaque_existential_1Tm, v82, v36);
    sub_188FFCE1C((uint64_t)&v87, (uint64_t)&v93 + 8);
    *(void *)&__int128 v92 = v84;
    *((void *)&v92 + 1) = v29;
    *(void *)&__int128 v93 = v85;
    *((void *)&v95 + 1) = a5;
    char v96 = 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_18904CEF0((uint64_t *)&v92);
    sub_189014560((uint64_t)&v92);
    __int128 v39 = &qword_18C4FC878;
    return sub_188FFCDB0((uint64_t)&v87, v39);
  }

  uint64_t v80 = a5;
  __int128 v94 = v89;
  __int128 v95 = v90;
  char v96 = v91;
  __int128 v92 = v87;
  __int128 v93 = v88;
  uint64_t v30 = *((void *)&v90 + 1);
  swift_bridgeObjectRetain_n();
  uint64_t v31 = sub_188FFF0D0(v30);
  swift_bridgeObjectRelease();
  *(void *)&__int128 v87 = v31;
  swift_retain();
  uint64_t v32 = v103;
  sub_18903FCA8((char **)&v87);
  uint64_t v103 = v32;
  if (!v32)
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v33 = *(void *)(v87 + 16);
    swift_release();
    uint64_t v34 = sub_189014560((uint64_t)&v92);
    uint64_t v35 = v27;
    uint64_t v36 = v83;
    if (!v33)
    {
LABEL_8:
      a5 = v80;
      goto LABEL_9;
    }

    if (v25)
    {
      if (v25 == 1)
      {
        MEMORY[0x1895F8858](v34);
        *(&v67 - 2) = v36;
        *(&v67 - 1) = a9;
        return sub_18904C9CC(v84, v29, v85, v80, v82, (void (*)(char *))nullsub_1, (uint64_t)(&v67 - 4), v36);
      }

      goto LABEL_8;
    }

    __int128 v40 = v27[1];
    __int128 v97 = *v27;
    __int128 v98 = v40;
    uint64_t v99 = *((void *)v27 + 4);
    sub_18904C90C(v84, v29, v85, (uint64_t)&v87);
    if (!*((void *)&v87 + 1))
    {
      __int128 v39 = &qword_18C4FC488;
      return sub_188FFCDB0((uint64_t)&v87, v39);
    }

    uint64_t v67 = a9;
    uint64_t v69 = v29;
    __int128 v94 = v89;
    __int128 v95 = v90;
    char v96 = v91;
    __int128 v92 = v87;
    __int128 v93 = v88;
    sub_188FFCE1C((uint64_t)&v93 + 8, (uint64_t)&v87);
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC878);
    __int128 v41 = v78;
    int v42 = swift_dynamicCast();
    uint64_t v43 = v81;
    __int128 v44 = *(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56);
    v44(v41, v42 ^ 1u, 1LL, v36);
    char v45 = v76;
    __int16 v68 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
    v68(v76, v82, v36);
    v44(v45, 0LL, 1LL, v36);
    __int128 v46 = v79;
    __int128 v47 = &v79[*(int *)(TupleTypeMetadata2 + 48)];
    uint64_t v48 = *(void (**)(char *, char *, uint64_t))(v77 + 16);
    __int128 v49 = v41;
    uint64_t v50 = v74;
    v48(v79, v49, v74);
    char v70 = v47;
    v48(v47, v45, v50);
    uint64_t v51 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48);
    if (v51(v46, 1LL, v36) == 1)
    {
      __int128 v52 = *(void (**)(char *, uint64_t))(v77 + 8);
      v52(v45, v50);
      if (v51(v70, 1LL, v36) == 1)
      {
        v52(v79, v50);
        v52(v78, v50);
LABEL_22:
        v86[3] = v36;
        char v66 = __swift_allocate_boxed_opaque_existential_1Tm(v86);
        v68((char *)v66, v82, v36);
        sub_188FFCE1C((uint64_t)v86, (uint64_t)&v88 + 8);
        *(void *)&__int128 v87 = v84;
        *((void *)&v87 + 1) = v69;
        *(void *)&__int128 v88 = v85;
        *((void *)&v90 + 1) = v80;
        char v91 = 1;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_18904CEF0((uint64_t *)&v87);
        sub_189014560((uint64_t)&v87);
        sub_189014560((uint64_t)&v92);
        return sub_188FFCDB0((uint64_t)v86, &qword_18C4FC878);
      }

      __int128 v56 = v79;
    }

    else
    {
      __int128 v53 = v72;
      uint64_t v54 = v79;
      v48(v72, v79, v50);
      int v55 = v70;
      if (v51(v70, 1LL, v36) != 1)
      {
        uint64_t v61 = v81;
        uint64_t v62 = v71;
        (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v71, v55, v36);
        char v63 = sub_1890677CC();
        uint64_t v64 = *(void (**)(char *, uint64_t))(v61 + 8);
        v64(v62, v36);
        uint64_t v65 = *(void (**)(char *, uint64_t))(v77 + 8);
        v65(v76, v50);
        v64(v53, v36);
        v65(v54, v50);
        v65(v78, v50);
        if ((v63 & 1) != 0) {
          goto LABEL_22;
        }
LABEL_20:
        uint64_t v57 = *((void *)&v95 + 1);
        uint64_t v58 = *((void *)v35 + 1);
        sub_188FFAD68();
        swift_allocError();
        uint64_t v59 = v80;
        *(void *)uint64_t v60 = v57;
        *(void *)(v60 + 8) = v59;
        *(void *)(v60 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v58;
        *(_OWORD *)(v60 + 24) = 0u;
        *(_OWORD *)(v60 + 40) = 0u;
        *(_OWORD *)(v60 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = 0u;
        *(void *)(v60 + 72) = 0LL;
        *(_BYTE *)(v60 + 80) = 10;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_willThrow();
        return sub_189014560((uint64_t)&v92);
      }

      __int128 v52 = *(void (**)(char *, uint64_t))(v77 + 8);
      v52(v76, v50);
      (*(void (**)(char *, uint64_t))(v81 + 8))(v53, v36);
      __int128 v56 = v54;
    }

    (*(void (**)(char *, uint64_t))(v73 + 8))(v56, TupleTypeMetadata2);
    v52(v78, v50);
    goto LABEL_20;
  }

  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_18903A730()
{
  uint64_t v9 = MEMORY[0x18961AFE8];
  sub_188FFF2DC(0LL, 0LL, 0);
  swift_bridgeObjectRetain();
  uint64_t result = sub_1890678A4();
  if (v1)
  {
    uint64_t v2 = result;
    uint64_t v3 = v1;
    uint64_t v4 = 0LL;
    while (!__OFADD__(v4, 1LL))
    {
      unint64_t v6 = *(void *)(v9 + 16);
      unint64_t v5 = *(void *)(v9 + 24);
      if (v6 >= v5 >> 1) {
        sub_188FFF2DC((void *)(v5 > 1), v6 + 1, 1);
      }
      *(void *)(v9 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v6 + 1;
      uint64_t v7 = (void *)(v9 + 48 * v6);
      v7[4] = v4;
      v7[5] = v2;
      v7[6] = v3;
      v7[7] = 64LL;
      v7[8] = 0LL;
      v7[9] = 0LL;
      uint64_t result = sub_1890678A4();
      uint64_t v2 = result;
      uint64_t v3 = v8;
      ++v4;
      if (!v8) {
        goto LABEL_7;
      }
    }

    __break(1u);
  }

  else
  {
LABEL_7:
    swift_bridgeObjectRelease();
    return v9;
  }

  return result;
}

uint64_t sub_18903A864()
{
  return sub_189040F54(*v0);
}

void *sub_18903A878@<X0>(void *result@<X0>, unint64_t *a2@<X8>)
{
  unint64_t v3 = *result - 1LL;
  if (__OFSUB__(*result, 1LL))
  {
    __break(1u);
  }

  else if (v3 < *(void *)(*(void *)v2 + 16LL))
  {
    *a2 = v3;
    return result;
  }

  __break(1u);
  return result;
}

unint64_t *sub_18903A8A4(unint64_t *result)
{
  unint64_t v2 = *result - 1;
  if (__OFSUB__(*result, 1LL))
  {
    __break(1u);
  }

  else if (v2 < *(void *)(*(void *)v1 + 16LL))
  {
    *uint64_t result = v2;
    return result;
  }

  __break(1u);
  return result;
}

void sub_18903A8D0(void *a1@<X8>)
{
  *a1 = 0LL;
}

void sub_18903A8D8(void *a1@<X8>)
{
  *a1 = *(void *)(*(void *)v1 + 16LL);
}

void (*sub_18903A8E8(void *a1, unint64_t *a2))(void *a1)
{
  unint64_t v5 = malloc(0x28uLL);
  *a1 = v5;
  v5[4] = sub_18903A964(v5, *a2, *v2);
  return sub_18903A938;
}

void sub_18903A938(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32LL))(*a1);
  free(v1);
}

_OWORD *sub_18903A964(void *a1, unint64_t a2, uint64_t a3)
{
  uint64_t result = malloc(0x240uLL);
  *a1 = result;
  if ((a2 & 0x8000000000000000LL) != 0)
  {
    __break(1u);
  }

  else if (*(void *)(a3 + 16) > a2)
  {
    uint64_t v7 = (_OWORD *)(a3 + 192 * a2);
    __int128 v9 = v7[10];
    __int128 v8 = v7[11];
    __int128 v10 = v7[9];
    result[8] = v9;
    result[9] = v8;
    __int128 v11 = v7[11];
    __int128 v13 = v7[12];
    __int128 v12 = v7[13];
    result[10] = v13;
    result[11] = v12;
    __int128 v15 = v7[6];
    __int128 v14 = v7[7];
    __int128 v16 = v7[5];
    result[4] = v15;
    result[5] = v14;
    __int128 v17 = v7[7];
    __int128 v19 = v7[8];
    __int128 v18 = v7[9];
    result[6] = v19;
    result[7] = v18;
    __int128 v20 = v7[3];
    *uint64_t result = v7[2];
    result[1] = v20;
    __int128 v21 = v7[5];
    __int128 v23 = v7[2];
    __int128 v22 = v7[3];
    __int128 v24 = v7[4];
    result[2] = v24;
    result[3] = v21;
    result[20] = v9;
    result[21] = v11;
    __int128 v25 = v7[13];
    result[22] = v13;
    result[23] = v25;
    result[16] = v15;
    result[17] = v17;
    result[18] = v19;
    result[19] = v10;
    result[12] = v23;
    result[13] = v22;
    result[14] = v24;
    result[15] = v16;
    sub_188FFCFF4((uint64_t)result);
    return sub_18901192C;
  }

  __break(1u);
  return result;
}

uint64_t *sub_18903AA34@<X0>(uint64_t *result@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *result;
  if (*result < 0 || (uint64_t v4 = result[1], result = *v2, (*v2)[2] < v4))
  {
    __break(1u);
  }

  else
  {
    unint64_t v5 = v2[1];
    *a2 = v3;
    a2[1] = v4;
    a2[2] = result;
    a2[3] = v5;
    swift_bridgeObjectRetain();
    return (uint64_t *)swift_bridgeObjectRetain();
  }

  return result;
}

void sub_18903AA80(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 16LL);
  *a1 = 0LL;
  a1[1] = v2;
}

BOOL sub_18903AA90()
{
  return *(void *)(*(void *)v0 + 16LL) == 0LL;
}

void sub_18903AAA4(uint64_t a1@<X8>)
{
  *(void *)a1 = 0LL;
  *(_WORD *)(a1 + 8) = 256;
}

void *sub_18903AAB4@<X0>(void *result@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  unint64_t v4 = *result + a2;
  if (__OFADD__(*result, a2))
  {
    __break(1u);
  }

  else if (v4 <= *(void *)(*(void *)v3 + 16LL))
  {
    *a3 = v4;
    return result;
  }

  __break(1u);
  return result;
}

unint64_t sub_18903AAE0@<X0>( unint64_t *a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t result = sub_189040988(*a1, a2, *a3, *v4);
  *(void *)a4 = result;
  *(_BYTE *)(a4 + 8) = v7 & 1;
  return result;
}

unint64_t *sub_18903AB18(unint64_t *result, unint64_t *a2)
{
  unint64_t v3 = *a2;
  unint64_t v4 = *(void *)(*(void *)v2 + 16LL);
  if (*result <= v4 && v3 <= v4) {
    return (unint64_t *)(v3 - *result);
  }
  __break(1u);
  return result;
}

uint64_t *sub_18903AB40(uint64_t *result, uint64_t *a2)
{
  uint64_t v2 = *result;
  uint64_t v3 = a2[1];
  if (*result >= *a2)
  {
    BOOL v5 = __OFSUB__(v2, v3);
    BOOL v4 = v2 - v3 < 0;
  }

  else
  {
    BOOL v5 = 0;
    BOOL v4 = 0;
  }

  if (v4 == v5) {
    __break(1u);
  }
  return result;
}

void *sub_18903AB5C(void *result, void *a2)
{
  if (*result < *a2 || a2[1] < *result) {
    __break(1u);
  }
  return result;
}

void *sub_18903AB78(void *result, void *a2)
{
  if (*result < *a2 || a2[1] < result[1]) {
    __break(1u);
  }
  return result;
}

void *sub_18903AB94@<X0>(void *result@<X0>, void *a2@<X8>)
{
  if (*result >= *(void *)(*(void *)v2 + 16LL)) {
    __break(1u);
  }
  else {
    *a2 = *result + 1LL;
  }
  return result;
}

void *sub_18903ABB8(void *result)
{
  if (*result >= *(void *)(*(void *)v1 + 16LL)) {
    __break(1u);
  }
  else {
    ++*result;
  }
  return result;
}

__n128 sub_18903ABDC@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = *v1;
  *a1 = *v1;
  a1[1].n128_u64[0] = 0LL;
  return result;
}

uint64_t sub_18903ABEC()
{
  return *(void *)(*(void *)v0 + 16LL);
}

uint64_t sub_18903ABF8()
{
  return 2LL;
}

uint64_t sub_18903AC00()
{
  uint64_t v1 = sub_188FFEE54(*v0, v0[1]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

void *sub_18903AC48(void *a1, char *a2, uint64_t a3)
{
  return sub_18903AC50(a1, a2, a3, *v3, v3[1]);
}

void *sub_18903AC50(void *result, char *__dst, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v7 = result;
  if (!__dst)
  {
LABEL_11:
    uint64_t v8 = 0LL;
    goto LABEL_15;
  }

  uint64_t v8 = a3;
  if (!a3)
  {
LABEL_15:
    *char v7 = a4;
    v7[1] = a5;
    _OWORD v7[2] = v8;
    return (void *)v8;
  }

  if ((a3 & 0x8000000000000000LL) == 0)
  {
    uint64_t v9 = *(void *)(a4 + 16);
    if (v9)
    {
      __int128 v10 = __dst;
      __int128 v11 = (_OWORD *)(a4 + 32);
      unint64_t v12 = 1LL;
      while (1)
      {
        __int128 v13 = v11[9];
        v20[8] = v11[8];
        v20[9] = v13;
        __int128 v14 = v11[11];
        v20[10] = v11[10];
        v20[11] = v14;
        __int128 v15 = v11[5];
        v20[4] = v11[4];
        v20[5] = v15;
        __int128 v16 = v11[7];
        void v20[6] = v11[6];
        v20[7] = v16;
        __int128 v17 = v11[1];
        v20[0] = *v11;
        v20[1] = v17;
        __int128 v18 = v11[3];
        _OWORD v20[2] = v11[2];
        v20[3] = v18;
        memmove(v10, v11, 0xC0uLL);
        if (v8 == v12)
        {
          sub_188FFCFF4((uint64_t)v20);
          goto LABEL_15;
        }

        if (v9 == v12) {
          break;
        }
        v10 += 192;
        sub_188FFCFF4((uint64_t)v20);
        v11 += 12;
        if (v12++ >= *(void *)(a4 + 16))
        {
          __break(1u);
          goto LABEL_11;
        }
      }

      sub_188FFCFF4((uint64_t)v20);
    }

    uint64_t v8 = v9;
    goto LABEL_15;
  }

  __break(1u);
  return result;
}

uint64_t sub_18903AD68(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!a2)
  {
    BOOL v7 = 0;
    a3 = 0LL;
    goto LABEL_14;
  }

  if (!a3)
  {
    BOOL v7 = 0;
LABEL_14:
    uint64_t v8 = a4;
LABEL_15:
    *(void *)__n128 result = a4;
    *(void *)(result + 8) = a5;
    *(void *)(result + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v8;
    *(_BYTE *)(result + 24) = v7;
    return a3;
  }

  if (a3 < 0) {
    goto LABEL_17;
  }
  uint64_t v5 = 0LL;
  uint64_t v6 = a4;
  while (1)
  {
    BOOL v7 = v6 == a5;
    if (v6 != a5) {
      break;
    }
    uint64_t v8 = 0LL;
LABEL_8:
    *(void *)(a2 + 8 * v5) = v6;
    if (a3 - 1 == v5) {
      goto LABEL_15;
    }
    ++v5;
    BOOL v9 = v6 == a5;
    uint64_t v6 = v8;
    if (v9)
    {
      BOOL v7 = 1;
      a3 = v5;
      goto LABEL_15;
    }
  }

  uint64_t v8 = v6 + 1;
  if (!__OFADD__(v6, 1LL)) {
    goto LABEL_8;
  }
  __break(1u);
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_18903ADF4()
{
  return sub_189067958();
}

unint64_t sub_18903AE18()
{
  unint64_t result = qword_18C761410;
  if (!qword_18C761410)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&unk_189069F18, &type metadata for ArgumentSet);
    atomic_store(result, (unint64_t *)&qword_18C761410);
  }

  return result;
}

uint64_t sub_18903AE5C()
{
  return MEMORY[0x189618758];
}

uint64_t sub_18903AE68()
{
  return sub_18903B000(&qword_18C761418, MEMORY[0x189618A60]);
}

unint64_t sub_18903AE8C()
{
  unint64_t result = qword_18C761428;
  if (!qword_18C761428)
  {
    unint64_t result = MEMORY[0x1895DD3F4](MEMORY[0x189618768], MEMORY[0x189618740]);
    atomic_store(result, (unint64_t *)&qword_18C761428);
  }

  return result;
}

uint64_t sub_18903AED0()
{
  return sub_189009B3C(&qword_18C761430, &qword_18C761438, MEMORY[0x18961A5E8]);
}

unint64_t sub_18903AF00()
{
  unint64_t result = qword_18C761440;
  if (!qword_18C761440)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&unk_189069F80, &type metadata for ArgumentSet);
    atomic_store(result, (unint64_t *)&qword_18C761440);
  }

  return result;
}

uint64_t sub_18903AF44()
{
  return sub_18903B000(&qword_18C761448, MEMORY[0x189618A40]);
}

uint64_t sub_18903AF68()
{
  return sub_18903B098(&qword_18C761450, (uint64_t (*)(void))sub_18903AF94, MEMORY[0x18961A5C8]);
}

unint64_t sub_18903AF94()
{
  unint64_t result = qword_18C761458;
  if (!qword_18C761458)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&unk_18906A060, &type metadata for ArgumentSet);
    atomic_store(result, (unint64_t *)&qword_18C761458);
  }

  return result;
}

uint64_t sub_18903AFDC()
{
  return sub_18903B000(&qword_18C761460, MEMORY[0x189618A58]);
}

uint64_t sub_18903B000(unint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_18C761420);
    unint64_t v6 = sub_18903AE8C();
    v7[0] = MEMORY[0x189618780];
    v7[1] = v6;
    uint64_t result = MEMORY[0x1895DD3F4](a2, v5, v7);
    atomic_store(result, a1);
  }

  return result;
}

uint64_t sub_18903B06C()
{
  return sub_18903B098(&qword_18C761468, (uint64_t (*)(void))sub_18903B100, MEMORY[0x18961A5E0]);
}

uint64_t sub_18903B098(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_18C761438);
    uint64_t v8 = a2();
    uint64_t result = MEMORY[0x1895DD3F4](a3, v7, &v8);
    atomic_store(result, a1);
  }

  return result;
}

unint64_t sub_18903B100()
{
  unint64_t result = qword_18C761470;
  if (!qword_18C761470)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&unk_18906A0C0, &type metadata for ArgumentSet);
    atomic_store(result, (unint64_t *)&qword_18C761470);
  }

  return result;
}

uint64_t sub_18903B144( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v17 = MEMORY[0x1896184C8];
  v16[0] = 1;
  sub_188FFCE1C((uint64_t)v16, (uint64_t)v14);
  v13[0] = a6;
  v13[1] = a7;
  void v13[2] = a8;
  v14[4] = a1;
  char v15 = 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_18904CEF0(v13);
  sub_189014560((uint64_t)v13);
  return sub_188FFCDB0((uint64_t)v16, &qword_18C4FC878);
}

uint64_t sub_18903B208(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_18903B21C(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_18903B21C(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a3 != 2)
  {
    uint64_t v9 = result;
    uint64_t v14 = MEMORY[0x1896184C8];
    v13[0] = a3 & 1;
    sub_188FFCE1C((uint64_t)v13, (uint64_t)v11);
    v10[0] = a4;
    v10[1] = a5;
    uint64_t v10[2] = a6;
    v11[4] = v9;
    char v12 = 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_18904CEF0(v10);
    sub_189014560((uint64_t)v10);
    return sub_188FFCDB0((uint64_t)v13, &qword_18C4FC878);
  }

  return result;
}

uint64_t sub_18903B2E4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  __int128 v12 = *(_OWORD *)(a5 + 16);
  v23[2] = *(_OWORD *)a5;
  void v23[3] = v12;
  uint64_t v24 = *(void *)(a5 + 32);
  sub_18904C90C(a6, a7, a8, (uint64_t)&v16);
  if (!v17)
  {
    sub_188FFCDB0((uint64_t)&v16, &qword_18C4FC488);
    __int128 v21 = 0u;
    __int128 v22 = 0u;
    goto LABEL_7;
  }

  sub_188FFCE1C((uint64_t)v19, (uint64_t)&v21);
  sub_189014560((uint64_t)&v16);
  if (!*((void *)&v22 + 1))
  {
LABEL_7:
    sub_188FFCDB0((uint64_t)&v21, &qword_18C4FC878);
LABEL_9:
    sub_188FFAD68();
    swift_allocError();
    *(void *)uint64_t v15 = 3LL;
    *(_OWORD *)(v15 + 8) = 0u;
    *(_OWORD *)(v15 + 24) = 0u;
    *(_OWORD *)(v15 + 40) = 0u;
    *(_OWORD *)(v15 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = 0u;
    *(void *)(v15 + 72) = 0LL;
    *(_BYTE *)(v15 + 80) = 15;
    return swift_willThrow();
  }

  sub_189014724(&v21, v23);
  sub_188FFCD54((uint64_t)v23, (uint64_t)&v16);
  uint64_t v13 = MEMORY[0x189618740];
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v23);
    goto LABEL_9;
  }

  if (__OFADD__((void)v21, 1LL))
  {
    __break(1u);
  }

  else
  {
    *((void *)&v22 + 1) = v13;
    *(void *)&__int128 v21 = v21 + 1;
    sub_188FFCE1C((uint64_t)&v21, (uint64_t)v19);
    uint64_t v16 = a6;
    uint64_t v17 = a7;
    __int128 v18 = a8;
    void v19[4] = a1;
    char v20 = 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_18904CEF0(&v16);
    sub_189014560((uint64_t)&v16);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v23);
    return sub_188FFCDB0((uint64_t)&v21, &qword_18C4FC878);
  }

  return result;
}

uint64_t sub_18903B4E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13[3] = MEMORY[0x189618740];
  v13[0] = 0LL;
  sub_188FFCE1C((uint64_t)v13, (uint64_t)v11);
  v10[0] = a3;
  v10[1] = a4;
  uint64_t v10[2] = a5;
  v11[4] = a1;
  char v12 = 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_18904CEF0(v10);
  sub_189014560((uint64_t)v10);
  return sub_188FFCDB0((uint64_t)v13, &qword_18C4FC878);
}

uint64_t sub_18903B59C(uint64_t result, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(a2 + 16);
  if (v4)
  {
    uint64_t v6 = result;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v7 = v4 - 1;
    uint64_t v8 = 32LL;
    uint64_t v9 = MEMORY[0x18961AFF8];
    while (1)
    {
      __int128 v10 = *(_OWORD *)(a2 + v8 + 144);
      v17[8] = *(_OWORD *)(a2 + v8 + 128);
      v17[9] = v10;
      __int128 v11 = *(_OWORD *)(a2 + v8 + 176);
      v17[10] = *(_OWORD *)(a2 + v8 + 160);
      __int128 v18 = v11;
      __int128 v12 = *(_OWORD *)(a2 + v8 + 80);
      v17[4] = *(_OWORD *)(a2 + v8 + 64);
      _OWORD v17[5] = v12;
      __int128 v13 = *(_OWORD *)(a2 + v8 + 112);
      v17[6] = *(_OWORD *)(a2 + v8 + 96);
      v17[7] = v13;
      __int128 v14 = *(_OWORD *)(a2 + v8 + 16);
      v17[0] = *(_OWORD *)(a2 + v8);
      v17[1] = v14;
      __int128 v15 = *(_OWORD *)(a2 + v8 + 48);
      v17[2] = *(_OWORD *)(a2 + v8 + 32);
      v17[3] = v15;
      uint64_t v16 = (void (*)(uint64_t, uint64_t))v18;
      sub_188FFCFF4((uint64_t)v17);
      v16(v9, v6);
      sub_1890099F8((uint64_t)v17);
      if (v3 || !v7) {
        break;
      }
      v8 += 192LL;
      --v7;
    }

    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }

  return result;
}

void sub_18903B698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int16 a5)
{
  __int128 v9 = *(_OWORD *)(a1 + 112);
  v19[8] = *(_OWORD *)(a1 + 96);
  v19[9] = v9;
  v19[10] = *(_OWORD *)(a1 + 128);
  char v20 = *(_BYTE *)(a1 + 144);
  __int128 v10 = *(_OWORD *)(a1 + 48);
  void v19[4] = *(_OWORD *)(a1 + 32);
  void v19[5] = v10;
  __int128 v11 = *(_OWORD *)(a1 + 80);
  v19[6] = *(_OWORD *)(a1 + 64);
  v19[7] = v11;
  __int128 v12 = *(_OWORD *)(a1 + 16);
  _OWORD v19[2] = *(_OWORD *)a1;
  v19[3] = v12;
  uint64_t v13 = *(unsigned __int8 *)(a1 + 145);
  v19[0] = *(_OWORD *)(a1 + 146);
  *(_OWORD *)((char *)v19 + 14) = *(_OWORD *)(a1 + 160);
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC888);
  uint64_t v14 = swift_allocObject();
  uint64_t v15 = sub_189013E70(v14, 1LL);
  *(void *)uint64_t v16 = a3;
  *(void *)(v16 + 8) = a4;
  *(_BYTE *)(v16 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = a5;
  *(_BYTE *)(v16 + 17) = HIBYTE(a5) & 1;
  uint64_t v17 = nullsub_1(v15);
  if (sub_18904D894(MEMORY[0x18961AFE8]))
  {
    sub_1890256A0(MEMORY[0x18961AFE8]);
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  uint64_t v21 = sub_1890473A0(v17);
  swift_bridgeObjectRelease();
  __asm { BR              X9 }

uint64_t sub_18903B7EC()
{
  *(void *)uint64_t v0 = 3LL;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = 0u;
  *(void *)(v0 + 72) = 0LL;
  *(_BYTE *)(v0 + 80) = 15;
  return swift_willThrow();
}

uint64_t sub_18903D804(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 < a2) {
    goto LABEL_204;
  }
  unint64_t v9 = a2;
  if (a2 < 0)
  {
LABEL_205:
    __break(1u);
LABEL_206:
    __break(1u);
    goto LABEL_207;
  }

  uint64_t v6 = a1;
  uint64_t v154 = v5;
  uint64_t v12 = *(void *)(v4 + 16);
  uint64_t v13 = *(void *)(v12 + 16);
  uint64_t v146 = v4;
  if (!v13) {
    goto LABEL_17;
  }
  __int128 v14 = *(_OWORD *)(v12 + 176);
  __int128 v176 = *(_OWORD *)(v12 + 160);
  __int128 v177 = v14;
  __int128 v15 = *(_OWORD *)(v12 + 208);
  __int128 v178 = *(_OWORD *)(v12 + 192);
  __int128 v179 = v15;
  __int128 v16 = *(_OWORD *)(v12 + 112);
  __int128 v172 = *(_OWORD *)(v12 + 96);
  __int128 v173 = v16;
  __int128 v17 = *(_OWORD *)(v12 + 144);
  __int128 v174 = *(_OWORD *)(v12 + 128);
  __int128 v175 = v17;
  __int128 v18 = *(_OWORD *)(v12 + 48);
  __int128 v168 = *(_OWORD *)(v12 + 32);
  __int128 v169 = v18;
  __int128 v19 = *(_OWORD *)(v12 + 80);
  __int128 v170 = *(_OWORD *)(v12 + 64);
  __int128 v171 = v19;
  for (uint64_t i = (__int128 *)(v12 + 224); ; i += 12)
  {
    --v13;
    if (!(void)v168 && (BYTE8(v168) & 2) != 0 && BYTE1(v177) == 5) {
      break;
    }
    if (!v13) {
      goto LABEL_17;
    }
    __int128 v21 = *i;
    __int128 v22 = i[1];
    __int128 v23 = i[3];
    __int128 v170 = i[2];
    __int128 v171 = v23;
    __int128 v168 = v21;
    __int128 v169 = v22;
    __int128 v24 = i[4];
    __int128 v25 = i[5];
    __int128 v26 = i[7];
    __int128 v174 = i[6];
    __int128 v175 = v26;
    __int128 v172 = v24;
    __int128 v173 = v25;
    __int128 v27 = i[8];
    __int128 v28 = i[9];
    __int128 v29 = i[11];
    __int128 v178 = i[10];
    __int128 v179 = v29;
    __int128 v176 = v27;
    __int128 v177 = v28;
  }

  if (BYTE8(v178) == 1)
  {
    unint64_t v8 = *((void *)&v177 + 1);
    unint64_t v7 = v178;
    uint64_t v143 = a1 + 32;
    uint64_t v30 = sub_1890408FC(a1 + 32, a2, (2 * v11) | 1);
    uint64_t v4 = v31;
    sub_188FFCFF4((uint64_t)&v168);
    sub_188FFD130();
    if ((v4 & 1) != 0)
    {
      sub_189009B34();
      sub_1890099F8((uint64_t)&v168);
      uint64_t v30 = v11;
    }

    else
    {
      uint64_t v32 = v30 + 1;
      if (__OFADD__(v30, 1LL)) {
        goto LABEL_214;
      }
      if (v11 < v32) {
        goto LABEL_215;
      }
      if (v32 != v11)
      {
        uint64_t v150 = v6;
        swift_bridgeObjectRetain();
        unint64_t v139 = v8;
        unint64_t v141 = v7;
        uint64_t v6 = v30 + 1;
        while (1)
        {
          if (v6 >= v11) {
            goto LABEL_208;
          }
          uint64_t v157 = v6;
          uint64_t v97 = v143 + (v6 << 6);
          unint64_t v98 = *(void *)(v97 + 16);
          if ((v98 & 0x6000000000000000LL) != 0x2000000000000000LL) {
            goto LABEL_220;
          }
          uint64_t v99 = *(void *)(v97 + 8);
          unint64_t v159 = *(void *)v97;
          uint64_t v6 = *(void *)(v97 + 40);
          uint64_t v100 = *(void *)(v97 + 48);
          int v101 = *(unsigned __int8 *)(v97 + 56);
          sub_189041310();
          uint64_t v149 = v99;
          swift_bridgeObjectRetain();
          unint64_t v7 = sub_189067A54();
          sub_189068030();
          sub_18906803C();
          sub_18906803C();
          LODWORD(v186) = v101;
          unint64_t v148 = v98;
          if (!v101) {
            sub_18906803C();
          }
          uint64_t v102 = v100;
          sub_18906803C();
          uint64_t v103 = sub_189068060();
          uint64_t v104 = -1LL << *(_BYTE *)(v7 + 32);
          unint64_t v8 = v103 & ~v104;
          int v105 = v186;
          if (((*(void *)(v7 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v8) & 1) != 0)
          {
            uint64_t v106 = ~v104;
            unint64_t v107 = v159;
            uint64_t v4 = v102;
            unint64_t v10 = 24LL;
            while (1)
            {
              uint64_t v108 = *(void *)(v7 + 48) + 24 * v8;
              if ((*(_BYTE *)(v108 + 17) & 1) == 0 && *(void *)v108 == v6)
              {
                if ((*(_BYTE *)(v108 + 16) & 1) != 0)
                {
                  if ((v186 & 1) != 0) {
                    goto LABEL_123;
                  }
                }

                else if ((v186 & 1) == 0 && *(void *)(v108 + 8) == v4)
                {
LABEL_123:
                  unint64_t v10 = v139;
                  uint64_t v4 = v141;
                  uint64_t v109 = v157;
                  goto LABEL_145;
                }
              }

              unint64_t v8 = (v8 + 1) & v106;
              if (((*(void *)(v7 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v8) & 1) == 0) {
                goto LABEL_125;
              }
            }
          }

          uint64_t v4 = v102;
          unint64_t v10 = 24LL;
LABEL_125:
          int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v164 = v7;
          if (*(void *)(v7 + 24) <= *(void *)(v7 + 16))
          {
            if (isUniquelyReferenced_nonNull_native) {
              sub_189050558();
            }
            else {
              sub_1890519C0();
            }
            unint64_t v7 = v164;
            sub_189068030();
            sub_18906803C();
            sub_18906803C();
            if (!v105) {
              sub_18906803C();
            }
            sub_18906803C();
            uint64_t v111 = sub_189068060();
            uint64_t v112 = -1LL << *(_BYTE *)(v164 + 32);
            unint64_t v8 = v111 & ~v112;
            if (((*(void *)(v164 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v8) & 1) != 0)
            {
              uint64_t v113 = ~v112;
              do
              {
                uint64_t v114 = *(void *)(v164 + 48) + 24 * v8;
                if ((*(_BYTE *)(v114 + 17) & 1) == 0 && *(void *)v114 == v6)
                {
                  if ((*(_BYTE *)(v114 + 16) & 1) != 0)
                  {
                    if ((v105 & 1) != 0) {
                      goto LABEL_221;
                    }
                  }

                  else if ((v105 & 1) == 0 && *(void *)(v114 + 8) == v4)
                  {
                    goto LABEL_221;
                  }
                }

                unint64_t v8 = (v8 + 1) & v113;
              }

              while (((*(void *)(v164 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v8) & 1) != 0);
            }
          }

          else if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1890514BC();
            LOBYTE(v105) = v186;
            unint64_t v7 = v164;
          }

          *(void *)(v7 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8LL) + 56) |= 1LL << v8;
          uint64_t v115 = *(void *)(v7 + 48) + 24 * v8;
          *(void *)uint64_t v115 = v6;
          *(void *)(v115 + 8) = v4;
          *(_BYTE *)(v115 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v105;
          *(_BYTE *)(v115 + 17) = 0;
          uint64_t v116 = *(void *)(v7 + 16);
          BOOL v75 = __OFADD__(v116, 1LL);
          uint64_t v117 = v116 + 1;
          if (v75) {
            goto LABEL_212;
          }
          *(void *)(v7 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v117;
          swift_bridgeObjectRelease();
          unint64_t v10 = v139;
          uint64_t v4 = v141;
          uint64_t v109 = v157;
          unint64_t v107 = v159;
LABEL_145:
          unint64_t v8 = v107;
          ((void (*)(unint64_t, void, void, uint64_t, unint64_t, uint64_t, void *))v10)( v7,  0LL,  0LL,  254LL,  v107,  v149,  a4);
          if (v5) {
            break;
          }
          uint64_t v6 = v109 + 1;
          swift_bridgeObjectRelease();
          sub_1890411F4(v8, v149, v148);
          if (v6 == v11)
          {
            uint64_t v6 = v150;
            swift_bridgeObjectRelease();
            goto LABEL_148;
          }
        }

        swift_bridgeObjectRelease();
        sub_189009B34();
        swift_bridgeObjectRelease();
        sub_1890411F4(v8, v149, v148);
        return sub_1890099F8((uint64_t)&v168);
      }

LABEL_148:
      sub_189009B34();
      sub_1890099F8((uint64_t)&v168);
    }

    uint64_t v4 = v146;
  }

  else
  {
LABEL_17:
    uint64_t v30 = v11;
    if (v11 < a2)
    {
LABEL_150:
      __break(1u);
      goto LABEL_151;
    }
  }

  if (v11 < v30) {
    goto LABEL_206;
  }
  uint64_t v11 = MEMORY[0x18961AFE8];
  unint64_t v8 = v30 - v9;
  if (v30 != v9)
  {
    if (v30 > (uint64_t)v9)
    {
      swift_bridgeObjectRetain();
      unint64_t v10 = v6 + (v9 << 6) + 48;
      do
      {
        if (*(_BYTE *)(v10 + 40) == 1)
        {
          uint64_t v6 = *(void *)(v10 - 8);
          unint64_t v36 = *(void *)v10;
          unint64_t v9 = *(void *)(v10 + 8);
          uint64_t v155 = *(void *)(v10 + 32);
          __int128 v158 = *(_OWORD *)(v10 + 16);
          uint64_t v186 = *(void *)(v10 - 16);
          sub_1890411A8(v186, v6, v36);
          char v37 = swift_isUniquelyReferenced_nonNull_native();
          *(void *)&__int128 v168 = v11;
          if ((v37 & 1) == 0)
          {
            sub_188FFF2F8(0LL, *(void *)(v11 + 16) + 1LL, 1);
            uint64_t v11 = v168;
          }

          unint64_t v34 = *(void *)(v11 + 16);
          unint64_t v33 = *(void *)(v11 + 24);
          if (v34 >= v33 >> 1)
          {
            sub_188FFF2F8((char *)(v33 > 1), v34 + 1, 1);
            uint64_t v11 = v168;
          }

          *(void *)(v11 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v34 + 1;
          uint64_t v35 = v11 + (v34 << 6);
          *(void *)(v35 + 32) = v186;
          *(void *)(v35 + 40) = v6;
          *(void *)(v35 + 48) = v36;
          *(void *)(v35 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = v9;
          *(_OWORD *)(v35 + 64) = v158;
          *(void *)(v35 + 80) = v155;
          *(_BYTE *)(v35 + 88) = 1;
        }

        v10 += 64LL;
        --v8;
      }

      while (v8);
      swift_bridgeObjectRelease();
      uint64_t v4 = v146;
      goto LABEL_30;
    }

LABEL_207:
    __break(1u);
LABEL_208:
    __break(1u);
    while (1)
    {
      __break(1u);
LABEL_210:
      __break(1u);
LABEL_211:
      __break(1u);
LABEL_212:
      __break(1u);
LABEL_213:
      __break(1u);
LABEL_214:
      __break(1u);
LABEL_215:
      __break(1u);
LABEL_216:
      __break(1u);
LABEL_217:
      __break(1u);
LABEL_218:
      swift_unknownObjectRelease();
LABEL_107:
      sub_188FFF004(v8, v11, v6, v10);
      uint64_t v11 = v96;
LABEL_157:
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a4[2] = v11;
      a4[3] = 0LL;
      a4[4] = MEMORY[0x18961AFE8];
      int64_t v120 = v166;
      int64_t v121 = v167 >> 1;
      if (v166 == v167 >> 1) {
        break;
      }
      unint64_t v8 = 24LL;
      unint64_t v151 = v7;
      while (v120 < v121)
      {
        unint64_t v122 = (void (*)(uint64_t, void, void, uint64_t, uint64_t, uint64_t, void *))v9;
        uint64_t v123 = v165 + (v120 << 6);
        unint64_t v7 = *(void *)(v123 + 40);
        unint64_t v9 = *(void *)(v123 + 48);
        int v124 = *(unsigned __int8 *)(v123 + 56);
        uint64_t v166 = v120 + 1;
        if ((v7 & 0x8000000000000000LL) != 0) {
          goto LABEL_210;
        }
        if (v7 >= *(void *)(a3 + 16)) {
          goto LABEL_211;
        }
        uint64_t v6 = v4;
        uint64_t v125 = (uint64_t *)(a3 + 32 + 16 * v7);
        uint64_t v126 = v125[1];
        uint64_t v186 = *v125;
        sub_189041310();
        swift_bridgeObjectRetain();
        uint64_t v11 = sub_189067A54();
        sub_189068030();
        sub_18906803C();
        sub_18906803C();
        uint64_t v160 = v126;
        if (!v124) {
          sub_18906803C();
        }
        sub_18906803C();
        uint64_t v4 = (uint64_t)v162;
        uint64_t v127 = sub_189068060();
        uint64_t v128 = -1LL << *(_BYTE *)(v11 + 32);
        unint64_t v10 = v127 & ~v128;
        if (((*(void *)(v11 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v10) & 1) != 0)
        {
          uint64_t v129 = ~v128;
          do
          {
            uint64_t v130 = *(void *)(v11 + 48) + 24 * v10;
            if ((*(_BYTE *)(v130 + 17) & 1) == 0 && *(void *)v130 == v7)
            {
              if ((*(_BYTE *)(v130 + 16) & 1) != 0)
              {
                if ((v124 & 1) != 0) {
                  goto LABEL_194;
                }
              }

              else if ((v124 & 1) == 0 && *(void *)(v130 + 8) == v9)
              {
                goto LABEL_194;
              }
            }

            unint64_t v10 = (v10 + 1) & v129;
          }

          while (((*(void *)(v11 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v10) & 1) != 0);
        }

        int v131 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v161 = v11;
        if (*(void *)(v11 + 24) <= *(void *)(v11 + 16))
        {
          if (v131) {
            sub_189050558();
          }
          else {
            sub_1890519C0();
          }
          uint64_t v11 = v161;
          sub_189068030();
          sub_18906803C();
          sub_18906803C();
          if (!v124) {
            sub_18906803C();
          }
          sub_18906803C();
          uint64_t v4 = (uint64_t)v162;
          uint64_t v132 = sub_189068060();
          uint64_t v133 = -1LL << *(_BYTE *)(v11 + 32);
          unint64_t v10 = v132 & ~v133;
          if (((*(void *)(v11 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v10) & 1) != 0)
          {
            uint64_t v134 = ~v133;
            do
            {
              uint64_t v135 = *(void *)(v11 + 48) + 24 * v10;
              if ((*(_BYTE *)(v135 + 17) & 1) == 0 && *(void *)v135 == v7)
              {
                if ((*(_BYTE *)(v135 + 16) & 1) != 0)
                {
                  if ((v124 & 1) != 0) {
                    goto LABEL_221;
                  }
                }

                else if ((v124 & 1) == 0 && *(void *)(v135 + 8) == v9)
                {
                  goto LABEL_221;
                }
              }

              unint64_t v10 = (v10 + 1) & v134;
            }

            while (((*(void *)(v11 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v10) & 1) != 0);
          }
        }

        else if ((v131 & 1) == 0)
        {
          uint64_t v4 = (uint64_t)&v161;
          sub_1890514BC();
          uint64_t v11 = v161;
        }

        *(void *)(v11 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8LL) + 56) |= 1LL << v10;
        uint64_t v136 = *(void *)(v11 + 48) + 24 * v10;
        *(void *)uint64_t v136 = v7;
        *(void *)(v136 + 8) = v9;
        *(_BYTE *)(v136 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v124;
        *(_BYTE *)(v136 + 17) = 0;
        uint64_t v137 = *(void *)(v11 + 16);
        BOOL v75 = __OFADD__(v137, 1LL);
        uint64_t v138 = v137 + 1;
        if (v75) {
          goto LABEL_213;
        }
        *(void *)(v11 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v138;
        swift_bridgeObjectRelease();
LABEL_194:
        unint64_t v7 = v151;
        uint64_t v4 = v6;
        unint64_t v9 = (unint64_t)v122;
        v122(v11, 0LL, 0LL, 254LL, v186, v160, a4);
        if (v154)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_189009B34();
          sub_1890099F8((uint64_t)&v168);
          swift_unknownObjectRelease();
          return swift_bridgeObjectRelease();
        }

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        int64_t v120 = v166;
        int64_t v121 = v167 >> 1;
        if (v166 == v167 >> 1) {
          goto LABEL_196;
        }
      }
    }

LABEL_196:
    sub_189009B34();
    sub_1890099F8((uint64_t)&v168);
LABEL_197:
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }

uint64_t sub_18903EAF0@<X0>(char a1@<W0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = swift_beginAccess();
  uint64_t v7 = a2[2];
  uint64_t v8 = a2[3] >> 1;
  if (v7 <= v8) {
    uint64_t v9 = a2[3] >> 1;
  }
  else {
    uint64_t v9 = a2[2];
  }
  uint64_t v10 = (v7 << 6) | 0x38;
  while (1)
  {
    if (v8 == v7)
    {
      uint64_t v12 = 0LL;
      uint64_t v13 = 0LL;
      uint64_t v14 = 0LL;
      uint64_t v17 = 0LL;
      char v18 = 0;
      __int128 v19 = 0uLL;
      unint64_t v15 = 0x7FFFFFF3ELL;
      goto LABEL_11;
    }

    if (v9 == v7) {
      break;
    }
    uint64_t v11 = (_BYTE *)(a2[1] + v10);
    uint64_t v12 = *((void *)v11 - 7);
    uint64_t v13 = *((void *)v11 - 6);
    unint64_t v15 = *((void *)v11 - 5);
    uint64_t v14 = *((void *)v11 - 4);
    __int128 v16 = *(_OWORD *)(v11 - 24);
    uint64_t v17 = *((void *)v11 - 1);
    char v18 = *v11;
    a2[2] = ++v7;
    if ((v15 & 0x6000000000000000LL) != 0x2000000000000000LL)
    {
      v10 += 64LL;
      if ((a1 & 1) == 0) {
        continue;
      }
    }

    __int128 v20 = v16;
    uint64_t result = sub_1890411A8(v12, v13, v15);
    __int128 v19 = v20;
LABEL_11:
    *(void *)a3 = v12;
    *(void *)(a3 + 8) = v13;
    *(void *)(a3 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v15;
    *(void *)(a3 + 24) = v14;
    *(_OWORD *)(a3 + 32) = v19;
    *(void *)(a3 + 48) = v17;
    *(_BYTE *)(a3 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = v18;
    return result;
  }

  __break(1u);
  return result;
}

uint64_t sub_18903EC10@<X0>(uint64_t a1@<X8>)
{
  void (*v37)(__int128 *__return_ptr, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  char v51;
  unint64_t v52;
  _OWORD *v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  void (*v63)(uint64_t, uint64_t, uint64_t, unint64_t, __int128 *);
  __int128 *v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  BOOL v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t *v113;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  int v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  __int128 v124;
  uint64_t v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  uint64_t v151;
  __int128 v152;
  __int128 v153;
  unint64_t v154;
  void v155[8];
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[6];
  uint64_t v119 = v1[5];
  uint64_t v7 = *v1;
  uint64_t v8 = v4[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((sub_188FFEB48(v7, v8) & 1) != 0)
  {
    int v9 = 1;
  }

  else
  {
    uint64_t v10 = v4[2];
    uint64_t v11 = *(void *)(v10 + 16);
    if (v11)
    {
      uint64_t v12 = v11 - 1;
      uint64_t v13 = (_BYTE *)(v10 + 177);
      do
      {
        uint64_t v14 = v12;
        int v9 = (*(void *)(v13 - 145) == 0LL) & (*(v13 - 137) >> 1);
        if (*v13 != 4) {
          int v9 = 0;
        }
        if ((v9 & 1) != 0) {
          break;
        }
        --v12;
        v13 += 192;
      }

      while (v14);
    }

    else
    {
      int v9 = 0;
    }
  }

  int64_t v120 = v9;
  unint64_t v15 = MEMORY[0x18961AFE8];
  *(void *)&uint64_t v152 = sub_189012088(MEMORY[0x18961AFE8]);
  *((void *)&v152 + 1) = v6;
  uint64_t v153 = v15;
  uint64_t v154 = v15;
  v155[7] = MEMORY[0x18961AFF8];
  uint64_t v16 = v4[2];
  swift_bridgeObjectRetain();
  sub_18903B59C((uint64_t)&v152, v16);
  uint64_t v17 = v3;
  if (v3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    v4[4] = v5;
    v4[5] = v119;
    v4[6] = v6;
    return result;
  }

  uint64_t v19 = *(void *)(v5 + 16);
  if (v19 < v119) {
    goto LABEL_117;
  }
  if ((v119 & 0x8000000000000000LL) == 0)
  {
    if (v119 == v19)
    {
LABEL_16:
      *(void *)&unint64_t v139 = v5;
      *((void *)&v139 + 1) = v119;
      *(void *)&uint64_t v140 = v6;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v20 = swift_bridgeObjectRetain();
      sub_189044850(v20);
      swift_bridgeObjectRelease_n();
      uint64_t v21 = v6;
      sub_18903D804(v139, *((uint64_t *)&v139 + 1), v140, &v152);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v103 = v154;
      int v124 = v152;
      uint64_t v126 = v153;
      v4[4] = v5;
      v4[5] = v119;
      v4[6] = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      *(_OWORD *)a1 = v124;
      *(_OWORD *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v126;
      *(void *)(a1 + 32) = v103;
      return result;
    }

    uint64_t v22 = v119;
    uint64_t v23 = v5;
    uint64_t v118 = v6;
    uint64_t v24 = MEMORY[0x18961AFF8];
    uint64_t v117 = v5;
    uint64_t v113 = v4;
    while (1)
    {
      if (v22 >= (unint64_t)v19)
      {
        __break(1u);
LABEL_115:
        __break(1u);
LABEL_116:
        __break(1u);
LABEL_117:
        __break(1u);
        goto LABEL_118;
      }

      uint64_t v125 = v17;
      uint64_t v25 = v23 + (v22 << 6);
      uint64_t v27 = *(void *)(v25 + 32);
      uint64_t v26 = *(void *)(v25 + 40);
      unint64_t v28 = *(void *)(v25 + 48);
      uint64_t v29 = *(void *)(v25 + 56);
      uint64_t v30 = *(void *)(v25 + 64);
      uint64_t v31 = *(void *)(v25 + 72);
      uint64_t v32 = *(void *)(v25 + 80);
      uint64_t v33 = *(unsigned __int8 *)(v25 + 88);
      v4[5] = v22 + 1;
      unint64_t v151 = v24;
      uint64_t v34 = (v28 >> 61) & 3;
      if ((_DWORD)v34) {
        break;
      }
      uint64_t v116 = v32;
      v155[0] = v27;
      v155[1] = v26;
      v155[2] = v28;
      v155[3] = v29;
      v155[4] = v30;
      __int128 v46 = v4[2];
      __int128 v47 = v4[3];
      __int128 v48 = *(void *)(v47 + 16);
      __int128 v49 = v28;
      unint64_t v122 = v29;
      uint64_t v123 = v30;
      sub_1890411A8(v27, v26, v28);
      if (v48)
      {
        sub_188FFCF80(v27, v26, v49);
        __int128 v50 = sub_18904D914(v27, v26, v49);
        if ((v51 & 1) != 0)
        {
          __int128 v52 = *(void *)(*(void *)(v47 + 56) + 8 * v50);
          sub_188FFCF98(v27, v26, v49);
          if ((v52 & 0x8000000000000000LL) != 0) {
            goto LABEL_119;
          }
          if (v52 >= *(void *)(v46 + 16)) {
            goto LABEL_120;
          }
          __int128 v53 = (_OWORD *)(v46 + 192 * v52);
          char v54 = v53[2];
          int v55 = v53[3];
          uint64_t v56 = v53[5];
          unint64_t v141 = v53[4];
          unint64_t v142 = v56;
          unint64_t v139 = v54;
          uint64_t v140 = v55;
          uint64_t v57 = v53[6];
          unint64_t v58 = v53[7];
          uint64_t v59 = v53[9];
          uint64_t v145 = v53[8];
          uint64_t v146 = v59;
          uint64_t v143 = v57;
          uint64_t v144 = v58;
          uint64_t v60 = v53[10];
          unint64_t v61 = v53[11];
          uint64_t v62 = v53[13];
          uint64_t v149 = v53[12];
          uint64_t v150 = v62;
          char v147 = v60;
          unint64_t v148 = v61;
          uint64_t v63 = (void (*)(uint64_t, uint64_t, uint64_t, unint64_t, __int128 *))*((void *)&v61 + 1);
          if ((BYTE8(v149) & 1) != 0)
          {
            uint64_t v64 = v53 + 2;
            uint64_t v65 = v64[9];
            uint64_t v135 = v64[8];
            uint64_t v136 = v65;
            uint64_t v66 = v64[11];
            uint64_t v137 = v64[10];
            uint64_t v138 = v66;
            uint64_t v67 = v64[5];
            int v131 = v64[4];
            uint64_t v132 = v67;
            int v68 = v64[7];
            uint64_t v133 = v64[6];
            uint64_t v134 = v68;
            uint64_t v69 = v64[1];
            uint64_t v127 = *v64;
            uint64_t v128 = v69;
            uint64_t v70 = v64[3];
            uint64_t v129 = v64[2];
            uint64_t v130 = v70;
            sub_188FFCFF4((uint64_t)&v139);
            sub_188FFD130();
            sub_18903B698((uint64_t)&v127, (uint64_t)v155, v31, v116, v33);
            uint64_t v17 = v125;
            uint64_t v6 = v118;
            sub_1890411F4(v27, v26, v49);
            sub_1890099F8((uint64_t)&v139);
            sub_189009B34();
            uint64_t v5 = v117;
          }

          else
          {
            if ((v49 & 0x8000000000000000LL) != 0)
            {
              sub_188FFCFF4((uint64_t)&v139);
              sub_188FFD130();
              sub_188FFCF80(v27, v26, v49);
              swift_bridgeObjectRetain();
              sub_1890411F4(v27, v26, v49);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_188FFAD68();
              swift_allocError();
              *(void *)uint64_t v110 = v31;
              *(void *)(v110 + 8) = v116;
              *(void *)(v110 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v33;
              *(void *)(v110 + 24) = v27;
              *(void *)(v110 + 32) = v26;
              *(void *)(v110 + 40) = v49;
              *(void *)(v110 + 48) = v122;
              *(void *)(v110 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = v123;
              *(void *)(v110 + 64) = 0LL;
              *(void *)(v110 + 72) = 0LL;
              *(_BYTE *)(v110 + 80) = 8;
              swift_willThrow();
              sub_189009B34();
              sub_1890099F8((uint64_t)&v139);
              uint64_t v111 = swift_bridgeObjectRetain();
              sub_189044850(v111);
              swift_bridgeObjectRelease();
              uint64_t v112 = swift_bridgeObjectRetain();
              sub_18904CD8C(v112);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v4[4] = v117;
              v4[5] = v119;
              v4[6] = v118;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              return swift_bridgeObjectRelease();
            }

            __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC888);
            uint64_t v77 = swift_allocObject();
            *(_OWORD *)(v77 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = xmmword_1890684B0;
            *(void *)(v77 + 32) = v31;
            *(void *)(v77 + 40) = v116;
            *(_WORD *)(v77 + 48) = v33;
            sub_188FFCFF4((uint64_t)&v139);
            sub_188FFD130();
            uint64_t v78 = sub_1890473A0(v77);
            swift_setDeallocating();
            swift_deallocClassInstance();
            v63(v78, v27, v26, v49, &v152);
            sub_1890411F4(v27, v26, v49);
            swift_bridgeObjectRelease();
            uint64_t v5 = v117;
            uint64_t v6 = v118;
            if (*(void *)(MEMORY[0x18961AFF8] + 16LL))
            {
              sub_189068030();
              sub_18906803C();
              sub_18906803C();
              if (!(_DWORD)v33) {
                sub_18906803C();
              }
              sub_18906803C();
              uint64_t v79 = sub_189068060();
              __int128 v80 = -1LL << *(_BYTE *)(MEMORY[0x18961AFF8] + 32LL);
              __int128 v81 = v79 & ~v80;
              if (((*(void *)(MEMORY[0x18961AFF8] + ((v81 >> 3) & 0xFFFFFFFFFFFFF8LL) + 56) >> v81) & 1) != 0)
              {
                __int128 v82 = ~v80;
                do
                {
                  __int128 v83 = *(void *)(MEMORY[0x18961AFF8] + 48LL) + 24 * v81;
                  if ((*(_BYTE *)(v83 + 17) & 1) == 0 && *(void *)v83 == v31)
                  {
                    if ((*(_BYTE *)(v83 + 16) & 1) != 0)
                    {
                      if ((v33 & 1) != 0) {
                        goto LABEL_80;
                      }
                    }

                    else if ((v33 & 1) == 0 && *(void *)(v83 + 8) == v116)
                    {
LABEL_80:
                      sub_1890099F8((uint64_t)&v139);
                      sub_189009B34();
                      goto LABEL_103;
                    }
                  }

                  __int128 v81 = (v81 + 1) & v82;
                }

                while (((*(void *)(MEMORY[0x18961AFF8] + ((v81 >> 3) & 0xFFFFFFFFFFFFF8LL) + 56) >> v81) & 1) != 0);
              }
            }

            sub_189068030();
            sub_18906803C();
            sub_18906803C();
            if (!(_DWORD)v33) {
              sub_18906803C();
            }
            sub_18906803C();
            __int128 v84 = sub_189068060();
            __int128 v85 = MEMORY[0x18961AFF8];
            unsigned int v86 = -1LL << *(_BYTE *)(MEMORY[0x18961AFF8] + 32LL);
            __int128 v87 = v84 & ~v86;
            if (((*(void *)(MEMORY[0x18961AFF8] + ((v87 >> 3) & 0xFFFFFFFFFFFFF8LL) + 56) >> v87) & 1) != 0)
            {
              __int128 v88 = ~v86;
              do
              {
                __int128 v89 = *(void *)(MEMORY[0x18961AFF8] + 48LL) + 24 * v87;
                if ((*(_BYTE *)(v89 + 17) & 1) == 0 && *(void *)v89 == v31)
                {
                  if ((*(_BYTE *)(v89 + 16) & 1) != 0)
                  {
                    if ((v33 & 1) != 0) {
                      goto LABEL_80;
                    }
                  }

                  else if ((v33 & 1) == 0 && *(void *)(v89 + 8) == v116)
                  {
                    goto LABEL_80;
                  }
                }

                __int128 v87 = (v87 + 1) & v88;
              }

              while (((*(void *)(MEMORY[0x18961AFF8] + ((v87 >> 3) & 0xFFFFFFFFFFFFF8LL) + 56) >> v87) & 1) != 0);
            }

            int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            if (*(void *)(v85 + 24) <= *(void *)(v85 + 16))
            {
              if (isUniquelyReferenced_nonNull_native) {
                sub_189050558();
              }
              else {
                sub_1890519C0();
              }
              __int128 v92 = v85;
              sub_189068030();
              sub_18906803C();
              sub_18906803C();
              if (!(_DWORD)v33) {
                sub_18906803C();
              }
              sub_18906803C();
              __int128 v93 = sub_189068060();
              __int128 v94 = -1LL << *(_BYTE *)(v85 + 32);
              __int128 v87 = v93 & ~v94;
              if (((*(void *)(v85 + 56 + ((v87 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v87) & 1) != 0)
              {
                __int128 v95 = ~v94;
                __int128 v91 = v116;
                while (1)
                {
                  uint64_t v96 = *(void *)(v85 + 48) + 24 * v87;
                  if ((*(_BYTE *)(v96 + 17) & 1) == 0 && *(void *)v96 == v31)
                  {
                    if ((*(_BYTE *)(v96 + 16) & 1) != 0)
                    {
                      if ((v33 & 1) != 0) {
                        goto LABEL_122;
                      }
                    }

                    else if ((v33 & 1) == 0 && *(void *)(v96 + 8) == v116)
                    {
                      goto LABEL_122;
                    }
                  }

                  __int128 v87 = (v87 + 1) & v95;
                  if (((*(void *)(v85 + 56 + ((v87 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v87) & 1) == 0) {
                    goto LABEL_101;
                  }
                }
              }

              __int128 v91 = v116;
            }

            else
            {
              __int128 v91 = v116;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                sub_1890514BC();
                __int128 v91 = v116;
              }

              __int128 v92 = v85;
            }

LABEL_101:
            *(void *)(v92 + ((v87 >> 3) & 0xFFFFFFFFFFFFFF8LL) + 56) |= 1LL << v87;
            uint64_t v97 = *(void *)(v92 + 48) + 24 * v87;
            *(void *)uint64_t v97 = v31;
            *(void *)(v97 + 8) = v91;
            *(_BYTE *)(v97 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v33;
            *(_BYTE *)(v97 + 17) = 0;
            unint64_t v98 = *(void *)(v92 + 16);
            uint64_t v99 = __OFADD__(v98, 1LL);
            uint64_t v100 = v98 + 1;
            if (v99) {
              goto LABEL_121;
            }
            *(void *)(v92 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v100;
            unint64_t v151 = v92;
            swift_bridgeObjectRelease();
            sub_1890099F8((uint64_t)&v139);
            sub_189009B34();
            uint64_t v6 = v118;
LABEL_103:
            uint64_t v17 = v125;
          }

LABEL_104:
          int v101 = swift_bridgeObjectRetain();
          sub_189044850(v101);
          swift_bridgeObjectRelease();
          uint64_t v102 = swift_bridgeObjectRetain();
          sub_18904CD8C(v102);
          swift_bridgeObjectRelease();
          goto LABEL_105;
        }

        sub_188FFCF98(v27, v26, v49);
      }

      if (v120)
      {
        uint64_t v6 = v118;
        uint64_t v17 = v125;
        if ((v49 & 0x8000000000000080LL) == 0x80)
        {
          sub_188FFCF80(v27, v26, v49);
          uint64_t v71 = sub_18903A730();
          sub_1890411F4(v27, v26, v49);
          uint64_t v72 = v49;
        }

        else
        {
          uint64_t v72 = v49;
          uint64_t v71 = MEMORY[0x18961AFE8];
        }

        sub_1890411F4(v27, v26, v72);
        BOOL v75 = *(void *)(v71 + 16);
        swift_bridgeObjectRelease();
        if (!v75)
        {
          uint64_t v106 = swift_bridgeObjectRetain();
          sub_189044850(v106);
          swift_bridgeObjectRelease();
          unint64_t v107 = swift_bridgeObjectRetain();
          sub_18904CD8C(v107);
          swift_bridgeObjectRelease();
          uint64_t v5 = v117;
          goto LABEL_16;
        }
      }

      else
      {
        sub_1890411F4(v27, v26, v49);
        uint64_t v6 = v118;
        uint64_t v17 = v125;
      }

      uint64_t v24 = MEMORY[0x18961AFF8];
      uint64_t v5 = v117;
      uint64_t v76 = swift_bridgeObjectRetain();
      sub_189044850(v76);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_18904CD8C(MEMORY[0x18961AFF8]);
      swift_bridgeObjectRelease();
LABEL_106:
      uint64_t v23 = v4[4];
      uint64_t v22 = v4[5];
      uint64_t v19 = *(void *)(v23 + 16);
      if (v19 < v22) {
        goto LABEL_115;
      }
      if (v22 < 0) {
        goto LABEL_116;
      }
      if (v22 == v19) {
        goto LABEL_16;
      }
    }

    if ((_DWORD)v34 != 1) {
      goto LABEL_103;
    }
    uint64_t v35 = *v4;
    uint64_t v36 = v4[1];
    char v37 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v36 + 16);
    int64_t v121 = v28;
    sub_1890411A8(v27, v26, v28);
    uint64_t v115 = v36;
    v37(&v127, v35, v36);
    uint64_t v145 = v133;
    uint64_t v146 = v134;
    *(void *)&char v147 = v135;
    unint64_t v141 = v129;
    unint64_t v142 = v130;
    uint64_t v143 = v131;
    uint64_t v144 = v132;
    unint64_t v139 = v127;
    uint64_t v140 = v128;
    uint64_t v38 = *((void *)&v133 + 1);
    swift_bridgeObjectRetain();
    sub_189000568((uint64_t)&v139);
    uint64_t v39 = *(void *)(v38 + 16);
    if (!v39)
    {
      swift_bridgeObjectRelease();
LABEL_37:
      sub_1890411F4(v27, v26, v121);
      uint64_t v17 = v125;
      if (v120)
      {
LABEL_110:
        uint64_t v104 = swift_bridgeObjectRetain();
        sub_189044850(v104);
        swift_bridgeObjectRelease();
        int v105 = swift_bridgeObjectRetain();
        sub_18904CD8C(v105);
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }

      goto LABEL_104;
    }

    swift_bridgeObjectRetain();
    uint64_t v40 = (uint64_t *)(v38 + 40);
    while (1)
    {
      uint64_t v41 = *(v40 - 1);
      uint64_t v42 = *v40;
      if ((*(uint64_t (**)(uint64_t, uint64_t))(*v40 + 24))(v41, *v40) == v27 && v26 == v43)
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        goto LABEL_46;
      }

      __int128 v45 = sub_189067F10();
      swift_bridgeObjectRelease();
      if ((v45 & 1) != 0) {
        break;
      }
      v40 += 2;
      if (!--v39)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v5 = v117;
        uint64_t v6 = v118;
        uint64_t v4 = v113;
        goto LABEL_37;
      }
    }

    swift_bridgeObjectRelease_n();
LABEL_46:
    sub_1890411F4(v27, v26, v121);
    uint64_t v17 = v125;
    if ((sub_188FFEA00(v41, v42) & 1) != 0 || (sub_188FFEB48(v35, v115) & 1) == 0)
    {
      if ((sub_188FFEA00(v41, v42) & 1) != 0)
      {
        uint64_t v108 = swift_bridgeObjectRetain();
        sub_189044850(v108);
        swift_bridgeObjectRelease();
        uint64_t v109 = swift_bridgeObjectRetain();
        sub_18904CD8C(v109);
        swift_bridgeObjectRelease();
        uint64_t v5 = v117;
        uint64_t v6 = v118;
        uint64_t v4 = v113;
        goto LABEL_16;
      }

      uint64_t v5 = v117;
      uint64_t v6 = v118;
      uint64_t v4 = v113;
      if (v120) {
        goto LABEL_110;
      }
      goto LABEL_104;
    }

    uint64_t v73 = swift_bridgeObjectRetain();
    sub_189044850(v73);
    swift_bridgeObjectRelease();
    uint64_t v74 = swift_bridgeObjectRetain();
    sub_18904CD8C(v74);
    swift_bridgeObjectRelease();
    uint64_t v5 = v117;
    uint64_t v6 = v118;
    uint64_t v4 = v113;
LABEL_105:
    uint64_t v24 = MEMORY[0x18961AFF8];
    goto LABEL_106;
  }

LABEL_118:
  __break(1u);
LABEL_119:
  __break(1u);
LABEL_120:
  __break(1u);
LABEL_121:
  __break(1u);
LABEL_122:
  uint64_t result = sub_189067FB8();
  __break(1u);
  return result;
}

uint64_t sub_18903FCA8(char **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1890408E8((uint64_t)v2);
  }
  uint64_t v3 = *((void *)v2 + 2);
  v5[0] = (uint64_t)(v2 + 32);
  v5[1] = v3;
  uint64_t result = sub_18903FD10(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_18903FD10(uint64_t *a1)
{
  uint64_t v2 = a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_189067E68();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_169;
    }
    if (v3) {
      return sub_189040454(0LL, v3, 1LL, v2);
    }
    return result;
  }

  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_168;
  }
  uint64_t v6 = result;
  if (v3 <= 1)
  {
    uint64_t v8 = MEMORY[0x18961AFE8];
    uint64_t v100 = (char *)(MEMORY[0x18961AFE8] + 32LL);
    uint64_t v96 = MEMORY[0x18961AFE8];
    if (v3 != 1)
    {
      unint64_t v11 = *(void *)(MEMORY[0x18961AFE8] + 16LL);
      if (v11 < 2) {
        goto LABEL_146;
      }
      goto LABEL_134;
    }
  }

  else
  {
    uint64_t v7 = v5 >> 1;
    uint64_t result = sub_1890679E8();
    *(void *)(result + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v7;
    uint64_t v96 = result;
    uint64_t v100 = (char *)(result + 32);
  }

  uint64_t v9 = 0LL;
  __int128 v95 = v2;
  uint64_t v10 = *v2;
  uint64_t v8 = MEMORY[0x18961AFE8];
  uint64_t v97 = v6;
  uint64_t v98 = v3;
  while (2)
  {
    uint64_t v12 = v9 + 1;
    if (v9 + 1 >= v3) {
      goto LABEL_53;
    }
    uint64_t v13 = v10 + 24 * v12;
    if ((*(_BYTE *)(v13 + 17) & 1) != 0) {
      goto LABEL_17;
    }
    uint64_t v16 = v10 + 24 * v9;
    if ((*(_BYTE *)(v16 + 17) & 1) == 0 && *(void *)v13 >= *(void *)v16)
    {
      if (*(void *)v13 == *(void *)v16)
      {
        if ((*(_BYTE *)(v13 + 16) & 1) != 0)
        {
          if ((*(_BYTE *)(v16 + 16) & 1) == 0) {
            goto LABEL_21;
          }
        }

        else if ((*(_BYTE *)(v16 + 16) & 1) == 0 && *(void *)(v13 + 8) < *(void *)(v16 + 8))
        {
          goto LABEL_21;
        }
      }

LABEL_52:
    uint64_t v12 = v14;
LABEL_53:
    if (v12 >= v3) {
      goto LABEL_62;
    }
    if (__OFSUB__(v12, v9)) {
      goto LABEL_167;
    }
    if (v12 - v9 >= v6)
    {
LABEL_62:
      uint64_t v17 = v12;
      goto LABEL_63;
    }

    if (__OFADD__(v9, v6)) {
      goto LABEL_171;
    }
    if (v9 + v6 >= v3) {
      uint64_t v17 = v3;
    }
    else {
      uint64_t v17 = v9 + v6;
    }
    if (v17 >= v9)
    {
      if (v12 == v17) {
        goto LABEL_62;
      }
      uint64_t v80 = v10 - 24 + 24 * v12;
      do
      {
        uint64_t v81 = v9;
        uint64_t v82 = v80;
        do
        {
          if ((*(_BYTE *)(v82 + 41) & 1) != 0) {
            break;
          }
          uint64_t v83 = v82 + 24;
          uint64_t v84 = *(void *)(v82 + 24);
          uint64_t v85 = *(void *)(v82 + 32);
          char v86 = *(_BYTE *)(v82 + 40);
          if ((*(_BYTE *)(v82 + 17) & 1) == 0 && v84 >= *(void *)v82)
          {
            if (v84 != *(void *)v82) {
              break;
            }
            if ((*(_BYTE *)(v82 + 40) & 1) != 0)
            {
              if ((*(_BYTE *)(v82 + 16) & 1) != 0) {
                break;
              }
            }

            else if ((*(_BYTE *)(v82 + 16) & 1) != 0 || v85 >= *(void *)(v82 + 8))
            {
              break;
            }
          }

          if (!v10) {
            goto LABEL_173;
          }
          __int128 v87 = *(_OWORD *)v82;
          uint64_t v88 = *(void *)(v82 + 16);
          *(void *)uint64_t v82 = v84;
          *(void *)(v82 + 8) = v85;
          *(_BYTE *)(v82 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v86;
          *(_BYTE *)(v82 + 17) = 0;
          v82 -= 24LL;
          *(_OWORD *)uint64_t v83 = v87;
          *(void *)(v83 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v88;
          ++v81;
        }

        while (v12 != v81);
        ++v12;
        v80 += 24LL;
      }

      while (v12 != v17);
LABEL_63:
      if (v17 < v9) {
        goto LABEL_162;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1890407C8(0LL, *(void *)(v8 + 16) + 1LL, 1, (char *)v8);
        uint64_t v8 = result;
      }

      unint64_t v32 = *(void *)(v8 + 16);
      unint64_t v31 = *(void *)(v8 + 24);
      unint64_t v11 = v32 + 1;
      uint64_t v99 = v17;
      if (v32 >= v31 >> 1)
      {
        uint64_t result = (uint64_t)sub_1890407C8((char *)(v31 > 1), v32 + 1, 1, (char *)v8);
        uint64_t v8 = result;
      }

      *(void *)(v8 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v11;
      uint64_t v33 = v8 + 32;
      uint64_t v34 = (uint64_t *)(v8 + 32 + 16 * v32);
      uint64_t *v34 = v9;
      v34[1] = v99;
      if (v32)
      {
        while (2)
        {
          unint64_t v35 = v11 - 1;
          if (v11 >= 4)
          {
            unint64_t v40 = v33 + 16 * v11;
            uint64_t v41 = *(void *)(v40 - 64);
            uint64_t v42 = *(void *)(v40 - 56);
            BOOL v46 = __OFSUB__(v42, v41);
            uint64_t v43 = v42 - v41;
            if (v46) {
              goto LABEL_151;
            }
            uint64_t v45 = *(void *)(v40 - 48);
            uint64_t v44 = *(void *)(v40 - 40);
            BOOL v46 = __OFSUB__(v44, v45);
            uint64_t v38 = v44 - v45;
            char v39 = v46;
            if (v46) {
              goto LABEL_152;
            }
            unint64_t v47 = v11 - 2;
            __int128 v48 = (uint64_t *)(v33 + 16 * (v11 - 2));
            uint64_t v50 = *v48;
            uint64_t v49 = v48[1];
            BOOL v46 = __OFSUB__(v49, v50);
            uint64_t v51 = v49 - v50;
            if (v46) {
              goto LABEL_153;
            }
            BOOL v46 = __OFADD__(v38, v51);
            uint64_t v52 = v38 + v51;
            if (v46) {
              goto LABEL_155;
            }
            if (v52 >= v43)
            {
              uint64_t v70 = (uint64_t *)(v33 + 16 * v35);
              uint64_t v72 = *v70;
              uint64_t v71 = v70[1];
              BOOL v46 = __OFSUB__(v71, v72);
              uint64_t v73 = v71 - v72;
              if (v46) {
                goto LABEL_161;
              }
              BOOL v63 = v38 < v73;
            }

            else
            {
LABEL_82:
              if ((v39 & 1) != 0) {
                goto LABEL_154;
              }
              unint64_t v47 = v11 - 2;
              __int128 v53 = (uint64_t *)(v33 + 16 * (v11 - 2));
              uint64_t v55 = *v53;
              uint64_t v54 = v53[1];
              BOOL v56 = __OFSUB__(v54, v55);
              uint64_t v57 = v54 - v55;
              char v58 = v56;
              if (v56) {
                goto LABEL_156;
              }
              uint64_t v59 = (uint64_t *)(v33 + 16 * v35);
              uint64_t v61 = *v59;
              uint64_t v60 = v59[1];
              BOOL v46 = __OFSUB__(v60, v61);
              uint64_t v62 = v60 - v61;
              if (v46) {
                goto LABEL_158;
              }
              if (__OFADD__(v57, v62)) {
                goto LABEL_160;
              }
              if (v57 + v62 < v38) {
                goto LABEL_94;
              }
              BOOL v63 = v38 < v62;
            }

            if (v63) {
              unint64_t v35 = v47;
            }
          }

          else
          {
            if (v11 == 3)
            {
              uint64_t v37 = *(void *)(v8 + 32);
              uint64_t v36 = *(void *)(v8 + 40);
              BOOL v46 = __OFSUB__(v36, v37);
              uint64_t v38 = v36 - v37;
              char v39 = v46;
              goto LABEL_82;
            }

            uint64_t v64 = *(void *)(v8 + 32);
            uint64_t v65 = *(void *)(v8 + 40);
            BOOL v46 = __OFSUB__(v65, v64);
            uint64_t v57 = v65 - v64;
            char v58 = v46;
LABEL_94:
            if ((v58 & 1) != 0) {
              goto LABEL_157;
            }
            uint64_t v66 = (uint64_t *)(v33 + 16 * v35);
            uint64_t v68 = *v66;
            uint64_t v67 = v66[1];
            BOOL v46 = __OFSUB__(v67, v68);
            uint64_t v69 = v67 - v68;
            if (v46) {
              goto LABEL_159;
            }
            if (v69 < v57) {
              goto LABEL_14;
            }
          }

          unint64_t v74 = v35 - 1;
          if (v35 - 1 >= v11)
          {
            __break(1u);
LABEL_148:
            __break(1u);
LABEL_149:
            __break(1u);
LABEL_150:
            __break(1u);
LABEL_151:
            __break(1u);
LABEL_152:
            __break(1u);
LABEL_153:
            __break(1u);
LABEL_154:
            __break(1u);
LABEL_155:
            __break(1u);
LABEL_156:
            __break(1u);
LABEL_157:
            __break(1u);
LABEL_158:
            __break(1u);
LABEL_159:
            __break(1u);
LABEL_160:
            __break(1u);
LABEL_161:
            __break(1u);
LABEL_162:
            __break(1u);
LABEL_163:
            __break(1u);
LABEL_164:
            __break(1u);
LABEL_165:
            __break(1u);
LABEL_166:
            __break(1u);
LABEL_167:
            __break(1u);
LABEL_168:
            __break(1u);
LABEL_169:
            __break(1u);
LABEL_170:
            __break(1u);
LABEL_171:
            __break(1u);
            goto LABEL_172;
          }

          if (!v10) {
            goto LABEL_174;
          }
          BOOL v75 = (uint64_t *)(v33 + 16 * v74);
          uint64_t v76 = *v75;
          uint64_t v77 = (void *)(v33 + 16 * v35);
          uint64_t v78 = v77[1];
          uint64_t result = sub_189040514((char *)(v10 + 24 * *v75), (char *)(v10 + 24LL * *v77), v10 + 24 * v78, v100);
          if (v1) {
            goto LABEL_146;
          }
          if (v78 < v76) {
            goto LABEL_148;
          }
          if (v35 > *(void *)(v8 + 16)) {
            goto LABEL_149;
          }
          *BOOL v75 = v76;
          *(void *)(v33 + 16 * v74 + 8) = v78;
          unint64_t v79 = *(void *)(v8 + 16);
          if (v35 >= v79) {
            goto LABEL_150;
          }
          unint64_t v11 = v79 - 1;
          uint64_t result = (uint64_t)memmove((void *)(v33 + 16 * v35), v77 + 2, 16 * (v79 - 1 - v35));
          *(void *)(v8 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v79 - 1;
          if (v79 <= 2) {
            goto LABEL_14;
          }
          continue;
        }
      }

      unint64_t v11 = 1LL;
LABEL_14:
      uint64_t v3 = v98;
      uint64_t v9 = v99;
      uint64_t v6 = v97;
      if (v99 >= v98)
      {
        uint64_t v2 = v95;
        if (v11 < 2)
        {
LABEL_146:
          swift_bridgeObjectRelease();
          *(void *)(v96 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 0LL;
          return swift_bridgeObjectRelease();
        }

LABEL_172:
  __break(1u);
LABEL_173:
  __break(1u);
LABEL_174:
  __break(1u);
LABEL_175:
  __break(1u);
LABEL_176:
  __break(1u);
  return result;
}

uint64_t sub_189040454(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = *a4;
    uint64_t v5 = *a4 + 24 * a3 - 24;
LABEL_5:
    uint64_t v6 = result;
    uint64_t v7 = v5;
    while (1)
    {
      if ((*(_BYTE *)(v7 + 41) & 1) != 0)
      {
LABEL_4:
        ++a3;
        v5 += 24LL;
        if (a3 == a2) {
          return result;
        }
        goto LABEL_5;
      }

      uint64_t v8 = v7 + 24;
      uint64_t v9 = *(void *)(v7 + 24);
      uint64_t v10 = *(void *)(v7 + 32);
      char v11 = *(_BYTE *)(v7 + 40);
      if ((*(_BYTE *)(v7 + 17) & 1) == 0 && v9 >= *(void *)v7)
      {
        if (v9 != *(void *)v7) {
          goto LABEL_4;
        }
        if ((*(_BYTE *)(v7 + 40) & 1) != 0)
        {
          if ((*(_BYTE *)(v7 + 16) & 1) != 0) {
            goto LABEL_4;
          }
        }

        else if ((*(_BYTE *)(v7 + 16) & 1) != 0 || v10 >= *(void *)(v7 + 8))
        {
          goto LABEL_4;
        }
      }

      if (!v4) {
        break;
      }
      __int128 v12 = *(_OWORD *)v7;
      uint64_t v13 = *(void *)(v7 + 16);
      *(void *)uint64_t v7 = v9;
      *(void *)(v7 + 8) = v10;
      *(_BYTE *)(v7 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v11;
      *(_BYTE *)(v7 + 17) = 0;
      v7 -= 24LL;
      *(_OWORD *)uint64_t v8 = v12;
      *(void *)(v8 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v13;
      if (a3 == ++v6) {
        goto LABEL_4;
      }
    }

    __break(1u);
  }

  return result;
}

uint64_t sub_189040514(char *__src, char *__dst, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = __dst;
  uint64_t v7 = __src;
  int64_t v8 = __dst - __src;
  int64_t v9 = (__dst - __src) / 24;
  uint64_t v10 = a3 - (void)__dst;
  uint64_t v11 = (uint64_t)(a3 - (void)__dst) / 24;
  if (v9 >= v11)
  {
    uint64_t v17 = 24 * v11;
    if (a4 != __dst || &__dst[v17] <= a4) {
      memmove(a4, __dst, 24 * v11);
    }
    uint64_t v13 = &v4[v17];
    if (v7 >= v6 || v10 < 24) {
      goto LABEL_56;
    }
    unint64_t v18 = a3 - 24;
    while (1)
    {
      uint64_t v19 = (char *)(v18 + 24);
      uint64_t v20 = *((void *)v13 - 3);
      if ((*(v13 - 7) & 1) != 0) {
        break;
      }
      uint64_t v21 = v6 - 24;
      uint64_t v23 = *((void *)v6 - 3);
      if ((*(v6 - 7) & 1) == 0 && v20 >= v23)
      {
        if (v20 != v23) {
          break;
        }
        if ((*(v13 - 8) & 1) != 0)
        {
          if ((*(v6 - 8) & 1) != 0) {
            break;
          }
        }

        else if ((*(v6 - 8) & 1) != 0 || *((void *)v13 - 2) >= *((void *)v6 - 2))
        {
          break;
        }
      }

      if (v19 != v6)
      {
        v6 -= 24;
        goto LABEL_49;
      }

      BOOL v22 = v18 >= (unint64_t)v6;
      v6 -= 24;
      if (v22) {
        goto LABEL_49;
      }
LABEL_50:
      if (v6 > v7)
      {
        v18 -= 24LL;
        if (v13 > v4) {
          continue;
        }
      }

      goto LABEL_56;
    }

    uint64_t v21 = v13 - 24;
    if (v19 != v13)
    {
      v13 -= 24;
LABEL_49:
      __int128 v24 = *(_OWORD *)v21;
      *(void *)(v18 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = *((void *)v21 + 2);
      *(_OWORD *)unint64_t v18 = v24;
      goto LABEL_50;
    }

    BOOL v22 = v18 >= (unint64_t)v13;
    v13 -= 24;
    if (v22) {
      goto LABEL_49;
    }
    goto LABEL_50;
  }

  size_t v12 = 24 * v9;
  if (a4 != __src || &__src[v12] <= a4) {
    memmove(a4, __src, v12);
  }
  uint64_t v13 = &v4[v12];
  if ((unint64_t)v6 < a3 && v8 >= 24)
  {
    while ((v6[17] & 1) == 0)
    {
      if ((v4[17] & 1) == 0 && *(void *)v6 >= *(void *)v4)
      {
        if (*(void *)v6 != *(void *)v4) {
          break;
        }
        if ((v6[16] & 1) != 0)
        {
          if ((v4[16] & 1) != 0) {
            break;
          }
        }

        else if ((v4[16] & 1) != 0 || *((void *)v6 + 1) >= *((void *)v4 + 1))
        {
          break;
        }
      }

      uint64_t v14 = v6;
      BOOL v15 = v7 == v6;
      v6 += 24;
      if (!v15) {
        goto LABEL_9;
      }
LABEL_10:
      v7 += 24;
    }

    uint64_t v14 = v4;
    BOOL v15 = v7 == v4;
    v4 += 24;
    if (v15) {
      goto LABEL_10;
    }
LABEL_9:
    __int128 v16 = *(_OWORD *)v14;
    *((void *)v7 + 2) = *((void *)v14 + 2);
    *(_OWORD *)uint64_t v7 = v16;
    goto LABEL_10;
  }

char *sub_1890407C8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C761478);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }

  else
  {
    uint64_t v10 = (char *)MEMORY[0x18961AFE8];
  }

  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0LL;
  }

  else
  {
    memcpy(v13, v14, 16 * v8);
  }

  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1890408C0(uint64_t a1)
{
  return sub_1890407C8(0LL, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_1890408D4(uint64_t a1)
{
  return sub_188FFF78C(0LL, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_1890408E8(uint64_t a1)
{
  return sub_189000034(0LL, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1890408FC(uint64_t result, uint64_t a2, unint64_t a3)
{
  int64_t v3 = a3 >> 1;
  if (a3 >> 1 == a2)
  {
    return 0LL;
  }

  else
  {
    uint64_t v4 = (int8x16_t *)(result + (a2 << 6) + 24);
    while (a2 < v3)
    {
      uint64_t v5 = v4[-1].i64[1];
      if ((v5 & 0x6000000000000000LL) == 0x4000000000000000LL)
      {
        int8x16_t v6 = vorrq_s8(*v4, *(int8x16_t *)((char *)v4 - 24));
        int8x16_t v7 = vextq_s8(v6, v6, 8uLL);
        int8x8_t v8 = vorr_s8(*(int8x8_t *)v7.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v7, v7, 8uLL));
        if (v5 == 0x4000000000000000LL && *(void *)&v8 == 0LL) {
          return a2;
        }
      }

      ++a2;
      v4 += 4;
      if (v3 == a2) {
        return 0LL;
      }
    }

    __break(1u);
  }

  return result;
}

unint64_t sub_189040988(unint64_t result, uint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = *(void *)(a4 + 16);
  if (v4 < result || v4 < a3)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }

  uint64_t v6 = a3 - result;
  if (a2 >= 1)
  {
    return 0LL;
  }

  if (v6 <= 0 && v6 > a2) {
    return 0LL;
  }
LABEL_13:
  BOOL v7 = __OFADD__(result, a2);
  result += a2;
  if (v7) {
    goto LABEL_16;
  }
  if (result > v4) {
LABEL_17:
  }
    __break(1u);
  return result;
}

uint64_t sub_1890409F4( uint64_t a1, unint64_t a2, uint64_t a3, uint64_t *a4, unsigned __int8 a5, char a6, _BYTE *a7, char *a8, uint64_t a9)
{
  uint64_t v12 = *a4;
  int v13 = a5;
  char v67 = *a8;
  uint64_t v14 = *(void *)(a9 + 16);
  uint64_t v68 = *(void *)a9;
  uint64_t v70 = *(void *)(a9 + 8);
  uint64_t v16 = *(void *)(a9 + 24);
  uint64_t v15 = *(void *)(a9 + 32);
  uint64_t v17 = *(void *)(a9 + 40);
  char v60 = *(_BYTE *)(a9 + 48);
  if ((*a7 & 1) != 0)
  {
    uint64_t v18 = sub_189032F5C(0x656C62616E65LL, 0xE600000000000000LL, 1, v12, a1, a2, a3);
    uint64_t v19 = 0x656C6261736964LL;
    uint64_t v20 = 0xE700000000000000LL;
  }

  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v21 = swift_bridgeObjectRetain();
    uint64_t v18 = sub_189038EA0(v21, a1, a2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v19 = 28526LL;
    uint64_t v20 = 0xE200000000000000LL;
  }

  uint64_t v22 = sub_189032F5C(v19, v20, 0, v12, a1, a2, a3);
  uint64_t v23 = v22;
  if (v13 == 2)
  {
    uint64_t v24 = 0LL;
  }

  else
  {
    if ((v13 & 1) != 0) {
      uint64_t v24 = v18;
    }
    else {
      uint64_t v24 = v22;
    }
    swift_bridgeObjectRetain();
  }

  char v25 = v60;
  v85[0] = v68;
  v85[1] = v70;
  v85[2] = v14;
  v85[3] = v16;
  v85[4] = v15;
  v85[5] = v17;
  char v86 = v60;
  char v66 = v13;
  uint64_t v64 = v23;
  uint64_t v65 = v18;
  uint64_t v48 = v14;
  if (!v24)
  {
    uint64_t v29 = v17;
    sub_1890140DC(v68, v70);
LABEL_15:
    uint64_t v30 = 0LL;
    uint64_t v32 = 0LL;
    goto LABEL_16;
  }

  if (!*(void *)(v24 + 16))
  {
    uint64_t v29 = v17;
    sub_1890140DC(v68, v70);
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }

  uint64_t v26 = *(void *)(v24 + 32);
  uint64_t v27 = *(void *)(v24 + 40);
  unsigned __int8 v28 = *(_BYTE *)(v24 + 48);
  uint64_t v29 = v17;
  sub_1890140DC(v68, v70);
  sub_188FFCF80(v26, v27, v28);
  swift_bridgeObjectRelease();
  uint64_t v30 = sub_1890520B0(v26, v27, v28);
  uint64_t v32 = v31;
  sub_188FFCF98(v26, v27, v28);
LABEL_16:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v33 = MEMORY[0x18961AFE8];
  sub_189048BAC(MEMORY[0x18961AFE8], (a6 & 1) == 0, v85, v30, v32, a1, a2, a3, (uint64_t)&v87, 1);
  __int128 v51 = v87;
  uint64_t v50 = v88;
  char v61 = v90;
  __int128 v57 = v92;
  __int128 v59 = v91;
  uint64_t v55 = v94;
  uint64_t v56 = v93;
  char v54 = v95;
  uint64_t v52 = v97;
  uint64_t v53 = v96;
  v72[0] = v68;
  v72[1] = v70;
  v72[2] = v48;
  v72[3] = v16;
  v72[4] = v15;
  v72[5] = v29;
  char v73 = v25;
  sub_1890140DC(v68, v70);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_189048BAC(v33, 1LL, v72, 0LL, 0LL, a1, a2, a3, (uint64_t)&v74, 0);
  uint64_t v34 = v75;
  char v35 = v77;
  __int128 v44 = v74;
  __int128 v45 = v78;
  __int128 v71 = v79;
  uint64_t v36 = v80;
  uint64_t v69 = v81;
  char v49 = v82;
  uint64_t v46 = v84;
  uint64_t v47 = v83;
  __int128 v43 = v76;
  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = a1;
  *(void *)(v37 + 24) = a2;
  *(void *)(v37 + 32) = a3;
  *(_BYTE *)(v37 + 40) = v67;
  uint64_t v38 = swift_allocObject();
  *(_BYTE *)(v38 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v66;
  *(void *)(v38 + 24) = a1;
  *(void *)(v38 + 32) = a2;
  *(void *)(v38 + 40) = a3;
  LOBYTE(v72[0]) = 0;
  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = a1;
  *(void *)(v39 + 24) = a2;
  *(void *)(v39 + 32) = a3;
  *(_BYTE *)(v39 + 40) = v67;
  LOBYTE(v74) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC818);
  uint64_t v40 = swift_allocObject();
  *(_OWORD *)(v40 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = xmmword_189068A40;
  *(void *)(v40 + 32) = v65;
  *(_OWORD *)(v40 + 40) = v51;
  *(void *)(v40 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = v50;
  *(_OWORD *)(v40 + 64) = v89;
  *(_BYTE *)(v40 + 80) = v61;
  *(_OWORD *)(v40 + 88) = v59;
  *(_OWORD *)(v40 + 104) = v57;
  *(void *)(v40 + 120) = v56;
  *(void *)(v40 + 128) = v55;
  *(_BYTE *)(v40 + 136) = v54;
  *(void *)(v40 + 144) = v53;
  *(void *)(v40 + 152) = v52;
  *(void *)(v40 + 160) = 0LL;
  *(void *)(v40 + 168) = 0LL;
  *(_WORD *)(v40 + 176) = 4;
  *(void *)(v40 + 184) = sub_1890410D0;
  *(void *)(v40 + 192) = v37;
  *(_BYTE *)(v40 + 200) = v72[0];
  *(void *)(v40 + 208) = sub_189041114;
  *(void *)(v40 + 2__swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v38;
  *(void *)(v40 + 224) = v64;
  *(_OWORD *)(v40 + 232) = v44;
  *(void *)(v40 + 248) = v34;
  *(_OWORD *)(v40 + 2__swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = v43;
  *(_BYTE *)(v40 + 272) = v35;
  *(_OWORD *)(v40 + 280) = v45;
  *(_OWORD *)(v40 + 296) = v71;
  *(void *)(v40 + 312) = v36;
  *(void *)(v40 + 320) = v69;
  *(_BYTE *)(v40 + 328) = v49;
  *(void *)(v40 + 336) = v47;
  *(void *)(v40 + 344) = v46;
  *(void *)(v40 + 352) = 0LL;
  *(void *)(v40 + 360) = 0LL;
  *(_WORD *)(v40 + 368) = 4;
  *(void *)(v40 + 376) = sub_189041164;
  *(void *)(v40 + 384) = v39;
  *(_BYTE *)(v40 + 392) = v74;
  *(void *)(v40 + 400) = nullsub_1;
  *(void *)(v40 + 408) = 0LL;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  return sub_189011E78(v40);
}

uint64_t sub_189040F54(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v11 = MEMORY[0x18961AFE8];
    swift_bridgeObjectRetain();
    sub_188FFF34C(0LL, v1, 0);
    uint64_t v2 = 32LL;
    do
    {
      unint64_t v3 = sub_1890492A0();
      uint64_t v5 = v4;
      unint64_t v7 = *(void *)(v11 + 16);
      unint64_t v6 = *(void *)(v11 + 24);
      if (v7 >= v6 >> 1) {
        sub_188FFF34C((char *)(v6 > 1), v7 + 1, 1);
      }
      *(void *)(v11 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v7 + 1;
      uint64_t v8 = v11 + 16 * v7;
      *(void *)(v8 + 32) = v3;
      *(void *)(v8 + 40) = v5;
      v2 += 192LL;
      --v1;
    }

    while (v1);
    swift_bridgeObjectRelease();
  }

  __swift_instantiateConcreteTypeFromMangledName(&qword_18C760FE8);
  sub_189009B3C((unint64_t *)&qword_18C760FF0, &qword_18C760FE8, MEMORY[0x189618458]);
  uint64_t v9 = sub_1890677C0();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1890410D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int128 *a5)
{
  return sub_18904117C(a1, a2, a3, a4, a5, 1);
}

uint64_t sub_1890410E8()
{
  return swift_deallocObject();
}

uint64_t sub_189041114(uint64_t a1, uint64_t a2)
{
  return sub_18903B21C(a1, a2, *(_BYTE *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t objectdestroyTm_0()
{
  return swift_deallocObject();
}

uint64_t sub_189041164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int128 *a5)
{
  return sub_18904117C(a1, a2, a3, a4, a5, 0);
}

uint64_t sub_18904117C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int128 *a5, int a6)
{
  return sub_189039B94( *(void *)(v6 + 16),  *(void *)(v6 + 24),  *(void **)(v6 + 32),  a6,  a1,  a5,  *(_BYTE *)(v6 + 40));
}

uint64_t sub_1890411A8(uint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3 = (a3 >> 61) & 3;
  if ((_DWORD)v3 == 1) {
    return swift_bridgeObjectRetain();
  }
  if (!(_DWORD)v3) {
    return sub_1890411C8(result, a2, a3);
  }
  return result;
}

uint64_t sub_1890411C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((a3 & 0x8000000000000000LL) == 0) {
    return sub_188FFCF80(a1, a2, a3);
  }
  sub_188FFCF80(a1, a2, a3);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1890411F4(uint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3 = (a3 >> 61) & 3;
  if ((_DWORD)v3 == 1) {
    return swift_bridgeObjectRelease();
  }
  if (!(_DWORD)v3) {
    return sub_189041214(result, a2, a3);
  }
  return result;
}

uint64_t sub_189041214(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((a3 & 0x8000000000000000LL) == 0) {
    return sub_188FFCF98(a1, a2, a3);
  }
  sub_188FFCF98(a1, a2, a3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_189041240(uint64_t a1, uint64_t a2)
{
  return a2;
}

__n128 *sub_18904127C(__n128 *a1, __n128 *a2)
{
  return a2;
}

uint64_t *sub_1890412B8(uint64_t *a1)
{
  return a1;
}

uint64_t sub_1890412E8(uint64_t a1)
{
  return a1;
}

unint64_t sub_189041310()
{
  unint64_t result = qword_18C4FC948;
  if (!qword_18C4FC948)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&unk_18906A764, &type metadata for InputOrigin.Element);
    atomic_store(result, (unint64_t *)&qword_18C4FC948);
  }

  return result;
}

uint64_t sub_189041354(uint64_t a1)
{
  return a1;
}

uint64_t sub_18904138C(uint64_t result, uint64_t a2, unint64_t a3)
{
  if ((a3 & 0x7FFFFFFFFFFFFF3ELL) != 0x7FFFFFF3ELL) {
    return sub_1890411F4(result, a2, a3);
  }
  return result;
}

uint64_t destroy for ArgumentSet()
{
  return swift_bridgeObjectRelease();
}

void *_s22ArgumentParserInternal11ArgumentSetVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ArgumentSet(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for ArgumentSet(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ArgumentSet()
{
  return &type metadata for ArgumentSet;
}

void destroy for ParserError(uint64_t a1)
{
}

uint64_t initializeWithCopy for ParserError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v13 = *(void *)(a2 + 72);
  char v14 = *(_BYTE *)(a2 + 80);
  sub_18901FE80(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v13, v14);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v13;
  *(_BYTE *)(a1 + 80) = v14;
  return a1;
}

uint64_t assignWithCopy for ParserError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v24 = *(void *)(a2 + 72);
  char v25 = *(_BYTE *)(a2 + 80);
  sub_18901FE80(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v24, v25);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  uint64_t v20 = *(void *)(a1 + 64);
  uint64_t v21 = *(void *)(a1 + 72);
  char v22 = *(_BYTE *)(a1 + 80);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v24;
  *(_BYTE *)(a1 + 80) = v25;
  sub_18901FFCC(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22);
  return a1;
}

__n128 __swift_memcpy81_8(uint64_t a1, uint64_t a2)
{
  __int128 v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  __int128 v4 = *(_OWORD *)(a2 + 48);
  __int128 v5 = *(_OWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for ParserError(uint64_t a1, uint64_t a2)
{
  char v3 = *(_BYTE *)(a2 + 80);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  uint64_t v12 = *(void *)(a1 + 64);
  uint64_t v13 = *(void *)(a1 + 72);
  char v14 = *(_BYTE *)(a1 + 80);
  __int128 v15 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v15;
  __int128 v16 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v16;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 80) = v3;
  sub_18901FFCC(v4, v6, v5, v7, v8, v9, v10, v11, v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for ParserError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 >= 0xF1 && *(_BYTE *)(a1 + 81)) {
    return (*(_DWORD *)a1 + 241);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 80);
  if (v3 <= 0xF) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ParserError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF0)
  {
    *(void *)(result + 72) = 0LL;
    *(_OWORD *)(result + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 80) = 0;
    *(void *)__n128 result = a2 - 241;
    if (a3 >= 0xF1) {
      *(_BYTE *)(result + 81) = 1;
    }
  }

  else
  {
    if (a3 >= 0xF1) {
      *(_BYTE *)(result + 81) = 0;
    }
    if (a2) {
      *(_BYTE *)(result + 80) = -(char)a2;
    }
  }

  return result;
}

uint64_t sub_1890417C4(uint64_t a1)
{
  else {
    return (*(_DWORD *)a1 + 15);
  }
}

uint64_t sub_1890417DC(uint64_t result, unsigned int a2)
{
  if (a2 >= 0xF)
  {
    *(void *)__n128 result = a2 - 15;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = 0u;
    *(void *)(result + 72) = 0LL;
    LOBYTE(a2) = 15;
  }

  *(_BYTE *)(result + 80) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ParserError()
{
  return &type metadata for ParserError;
}

uint64_t sub_18904181C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if (!a6)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }

  return result;
}

uint64_t destroy for InternalParseError(uint64_t a1)
{
  return sub_189041874( *(void *)a1,  *(void *)(a1 + 8),  *(void *)(a1 + 16),  *(void *)(a1 + 24),  *(void *)(a1 + 32),  *(_BYTE *)(a1 + 40));
}

uint64_t sub_189041874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if (!a6)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }

  return result;
}

uint64_t initializeWithCopy for InternalParseError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  char v8 = *(_BYTE *)(a2 + 40);
  sub_18904181C(*(void *)a2, v4, v5, v6, v7, v8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v8;
  return a1;
}

uint64_t assignWithCopy for InternalParseError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  char v8 = *(_BYTE *)(a2 + 40);
  sub_18904181C(*(void *)a2, v4, v5, v6, v7, v8);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  uint64_t v13 = *(void *)(a1 + 32);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  char v14 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v8;
  sub_189041874(v9, v10, v11, v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for InternalParseError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 32);
  char v4 = *(_BYTE *)(a2 + 40);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  __int128 v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v10;
  *(void *)(a1 + 32) = v3;
  char v11 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v4;
  sub_189041874(v5, v7, v6, v8, v9, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for InternalParseError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 <= 4) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for InternalParseError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(void *)uint64_t result = a2 - 252;
    if (a3 >= 0xFC) {
      *(_BYTE *)(result + 41) = 1;
    }
  }

  else
  {
    if (a3 >= 0xFC) {
      *(_BYTE *)(result + 41) = 0;
    }
    if (a2) {
      *(_BYTE *)(result + 40) = -(char)a2;
    }
  }

  return result;
}

uint64_t sub_189041A98(uint64_t a1)
{
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

uint64_t sub_189041AB0(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(void *)uint64_t result = a2 - 4;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    LOBYTE(a2) = 4;
  }

  *(_BYTE *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for InternalParseError()
{
  return &type metadata for InternalParseError;
}

void destroy for CommandError(uint64_t a1)
{
}

uint64_t initializeWithCopy for CommandError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 40);
  uint64_t v8 = *(void *)(a2 + 48);
  uint64_t v9 = *(void *)(a2 + 56);
  uint64_t v10 = *(void *)(a2 + 72);
  uint64_t v14 = *(void *)(a2 + 64);
  uint64_t v15 = v3;
  uint64_t v11 = *(void *)(a2 + 80);
  char v12 = *(_BYTE *)(a2 + 88);
  swift_bridgeObjectRetain();
  sub_18901FE80(v15, v4, v5, v6, v7, v8, v9, v14, v10, v11, v12);
  *(void *)(a1 + 8) = v15;
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = v9;
  *(void *)(a1 + 64) = v14;
  *(void *)(a1 + 72) = v10;
  *(void *)(a1 + 80) = v11;
  *(_BYTE *)(a1 + 88) = v12;
  return a1;
}

uint64_t assignWithCopy for CommandError(uint64_t a1, void *a2)
{
  __int128 v2 = a2;
  *(void *)a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = v2[1];
  uint64_t v5 = v2[2];
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[4];
  uint64_t v8 = v2[5];
  uint64_t v9 = v2[6];
  uint64_t v10 = v2[7];
  uint64_t v11 = v2[8];
  uint64_t v24 = v2[9];
  uint64_t v25 = v2[10];
  LOBYTE(v2) = *((_BYTE *)v2 + 88);
  sub_18901FE80(v4, v5, v6, v7, v8, v9, v10, v11, v24, v25, (char)v2);
  uint64_t v12 = *(void *)(a1 + 8);
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = *(void *)(a1 + 24);
  uint64_t v15 = *(void *)(a1 + 32);
  uint64_t v16 = *(void *)(a1 + 40);
  uint64_t v17 = *(void *)(a1 + 48);
  uint64_t v18 = *(void *)(a1 + 56);
  uint64_t v19 = *(void *)(a1 + 64);
  uint64_t v20 = *(void *)(a1 + 72);
  uint64_t v21 = *(void *)(a1 + 80);
  char v22 = *(_BYTE *)(a1 + 88);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v24;
  *(void *)(a1 + 80) = v25;
  *(_BYTE *)(a1 + 88) = (_BYTE)v2;
  sub_18901FFCC(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22);
  return a1;
}

__n128 __swift_memcpy89_8(uint64_t a1, uint64_t a2)
{
  __int128 v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  __int128 v4 = *(_OWORD *)(a2 + 48);
  __int128 v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for CommandError(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  char v4 = *(_BYTE *)(a2 + 88);
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  uint64_t v12 = *(void *)(a1 + 64);
  uint64_t v13 = *(void *)(a1 + 72);
  uint64_t v14 = *(void *)(a1 + 80);
  char v15 = *(_BYTE *)(a1 + 88);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 88) = v4;
  sub_18901FFCC(v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for CommandError(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *((_BYTE *)a1 + 89)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CommandError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 88) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 89) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 89) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for CommandError()
{
  return &type metadata for CommandError;
}

uint64_t sub_189041E54@<X0>( uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, void *a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_8:
    sub_18900F870(&v30);
    uint64_t v27 = &v30;
    goto LABEL_9;
  }

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __int128 v11 = *(_OWORD *)(a1 + 176);
  __int128 v38 = *(_OWORD *)(a1 + 160);
  __int128 v39 = v11;
  __int128 v12 = *(_OWORD *)(a1 + 208);
  __int128 v40 = *(_OWORD *)(a1 + 192);
  __int128 v41 = v12;
  __int128 v13 = *(_OWORD *)(a1 + 112);
  __int128 v34 = *(_OWORD *)(a1 + 96);
  __int128 v35 = v13;
  __int128 v14 = *(_OWORD *)(a1 + 144);
  __int128 v36 = *(_OWORD *)(a1 + 128);
  __int128 v37 = v14;
  __int128 v15 = *(_OWORD *)(a1 + 48);
  __int128 v30 = *(_OWORD *)(a1 + 32);
  __int128 v31 = v15;
  __int128 v16 = *(_OWORD *)(a1 + 80);
  __int128 v32 = *(_OWORD *)(a1 + 64);
  __int128 v33 = v16;
  if ((sub_18901C2AC(a2, a3, a4, v32) & 1) == 0)
  {
    uint64_t v17 = 224LL;
    while (--v8)
    {
      uint64_t v18 = v17 + 192;
      uint64_t v19 = (__int128 *)(a1 + v17);
      __int128 v20 = v19[9];
      __int128 v38 = v19[8];
      __int128 v39 = v20;
      __int128 v21 = v19[11];
      __int128 v40 = v19[10];
      __int128 v41 = v21;
      __int128 v22 = v19[5];
      __int128 v34 = v19[4];
      __int128 v35 = v22;
      __int128 v23 = v19[7];
      __int128 v36 = v19[6];
      __int128 v37 = v23;
      __int128 v24 = v19[1];
      __int128 v30 = *v19;
      __int128 v31 = v24;
      __int128 v25 = v19[3];
      __int128 v32 = v19[2];
      __int128 v33 = v25;
      char v26 = sub_18901C2AC(a2, a3, a4, v32);
      uint64_t v17 = v18;
      if ((v26 & 1) != 0) {
        goto LABEL_6;
      }
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }

uint64_t sub_18904200C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *v2;
  uint64_t v5 = v2[1];
  uint64_t v6 = v2[2];
  sub_189044D68(a1, (void *)*v2);
  uint64_t v7 = swift_bridgeObjectRetain();
  uint64_t v57 = sub_189055694(v7);
  int64_t v58 = v8;
  uint64_t v59 = v9;
  sub_189043EE4(&v57, v4, v5, v6);
  sub_189043800(&v57);
  sub_189042EE4(v57, v58, v59, v2[1], v2[2], (uint64_t)v49);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_189006BE4((uint64_t)v49, (uint64_t)v48);
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC490);
  if (!swift_dynamicCast())
  {
    uint64_t result = sub_188FFCFB0(v49, a2);
    goto LABEL_31;
  }

  if ((v52 & 1) != 0)
  {
LABEL_34:
    uint64_t result = sub_189067D3C();
    __break(1u);
    return result;
  }

  uint64_t v11 = v51;
  uint64_t v10 = v50;
  uint64_t v12 = v53;
  uint64_t v13 = v54;
  char v14 = v55;
  char v15 = BYTE8(v56);
  uint64_t v16 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC828);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = xmmword_1890684B0;
  *(_OWORD *)(v17 + 32) = *(_OWORD *)(v16 + 16);
  uint64_t v40 = *(void *)(v10 + 16);
  if (!v40) {
    goto LABEL_30;
  }
  char v36 = v15;
  char v37 = v14;
  uint64_t v38 = v13;
  uint64_t v39 = v12;
  uint64_t v43 = v10 + 32;
  sub_189011BBC(v10, v11, 0);
  sub_189011BBC(v10, v11, 0);
  swift_retain();
  unint64_t v18 = 0LL;
  uint64_t v41 = v11;
  uint64_t v42 = v10;
  while (1)
  {
    uint64_t v44 = v17;
    if (v18 >= *(void *)(v10 + 16))
    {
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }

    unint64_t v45 = v18;
    uint64_t v19 = (uint64_t *)(v43 + 16 * v18);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    swift_beginAccess();
    unint64_t v22 = *(void *)(v16 + 40);
    if (v22 >> 62) {
      break;
    }
    uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    if (!v23) {
      goto LABEL_28;
    }
LABEL_8:
    unint64_t v46 = v45 + 1;
    uint64_t v24 = 4LL;
    while (1)
    {
      if ((v22 & 0xC000000000000001LL) != 0)
      {
        uint64_t v25 = MEMORY[0x1895DCCF8](v24 - 4, v22);
      }

      else
      {
        uint64_t v25 = *(void *)(v22 + 8 * v24);
        swift_retain();
      }

      uint64_t v26 = v24 - 3;
      if (__OFADD__(v24 - 4, 1LL))
      {
        __break(1u);
        goto LABEL_33;
      }

      char v29 = sub_189067F10();
      swift_bridgeObjectRelease();
      if ((v29 & 1) != 0) {
        goto LABEL_21;
      }
      swift_release();
      ++v24;
      if (v26 == v23) {
        goto LABEL_28;
      }
    }

    swift_bridgeObjectRelease();
LABEL_21:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __int128 v30 = *(_OWORD *)(v25 + 16);
    uint64_t v17 = v44;
    unint64_t v32 = *(void *)(v44 + 16);
    unint64_t v31 = *(void *)(v44 + 24);
    if (v32 >= v31 >> 1)
    {
      __int128 v47 = *(_OWORD *)(v25 + 16);
      __int128 v33 = sub_1890573A8((char *)(v31 > 1), v32 + 1, 1, (char *)v44);
      __int128 v30 = v47;
      uint64_t v17 = (uint64_t)v33;
    }

    uint64_t v11 = v41;
    uint64_t v10 = v42;
    *(void *)(v17 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v32 + 1;
    *(_OWORD *)(v17 + 16 * v32 + 32) = v30;
    swift_release();
    uint64_t v16 = v25;
    unint64_t v18 = v46;
    if (v46 == v40)
    {
      sub_188FFADAC(v42, v41, 0);
      swift_release();
      goto LABEL_29;
    }
  }

  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_189067D54();
  swift_bridgeObjectRelease();
  if (v23) {
    goto LABEL_8;
  }
LABEL_28:
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  uint64_t v11 = v41;
  uint64_t v10 = v42;
  sub_188FFADAC(v42, v41, 0);
  swift_release();
  uint64_t v17 = v44;
LABEL_29:
  sub_188FFADAC(v10, v11, 0);
  uint64_t v13 = v38;
  uint64_t v12 = v39;
  char v14 = v37;
  char v15 = v36;
LABEL_30:
  swift_bridgeObjectRelease();
  *(void *)(a2 + 24) = &type metadata for HelpCommand;
  *(void *)(a2 + 32) = sub_1890099B4();
  uint64_t v35 = swift_allocObject();
  *(void *)a2 = v35;
  *(void *)(v35 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v10;
  *(void *)(v35 + 24) = v11;
  *(_BYTE *)(v35 + 32) = 0;
  *(void *)(v35 + 40) = v12;
  *(void *)(v35 + 48) = v13;
  *(_BYTE *)(v35 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = v14;
  *(void *)(v35 + 64) = v17;
  *(_BYTE *)(v35 + 72) = v15;
  uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v49);
LABEL_31:
  *(_BYTE *)(a2 + 89) = 0;
  return result;
}

uint64_t sub_1890429F0( uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, char a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  uint64_t v9 = a8;
  uint64_t v10 = a7;
  uint64_t v11 = a5;
  uint64_t v14 = *(void *)(a4 + 16);
  if (v14)
  {
    uint64_t v16 = HIBYTE(a2) & 0xF;
    if ((a2 & 0x2000000000000000LL) == 0) {
      uint64_t v16 = a1 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v54 = v16;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v51 = a3;
    swift_bridgeObjectRetain();
    uint64_t v17 = (unsigned __int8 *)(a4 + 48);
    unint64_t v18 = (char *)MEMORY[0x18961AFE8];
    while (1)
    {
      uint64_t v20 = *((void *)v17 - 2);
      uint64_t v19 = *((void *)v17 - 1);
      unsigned int v21 = *v17;
      if (!(v21 >> 6)) {
        break;
      }
      if (v21 >> 6 == 1)
      {
        char v22 = v21 & 1 | 0x40;
LABEL_9:
        unint64_t v23 = *((void *)v17 - 2);
        uint64_t v24 = *((void *)v17 - 1);
        goto LABEL_10;
      }

      if (v19 | v20 || v21 != 128)
      {
        if (!v54)
        {
          sub_189067C28();
          sub_18906788C();
          swift_bridgeObjectRetain();
          sub_18906788C();
          swift_bridgeObjectRelease();
          sub_18906788C();
          uint64_t result = sub_189067D3C();
          __break(1u);
          return result;
        }

        swift_bridgeObjectRetain();
        unint64_t v23 = sub_189067904();
        uint64_t v24 = v29;
        swift_bridgeObjectRelease();
        sub_188FFD504(1LL, 0LL, 128);
        char v22 = 64;
      }

      else
      {
        swift_bridgeObjectRetain();
        unint64_t v23 = sub_188FFDD70(45LL, 0xE100000000000000LL, a1, a2);
        uint64_t v24 = v28;
        swift_bridgeObjectRelease();
        char v22 = 0;
      }

uint64_t sub_189042EE4@<X0>( uint64_t a1@<X0>, int64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t result = sub_189045948(a1, a2, a3, 0, a4, a5);
  if (!v6)
  {
    uint64_t result = sub_189055A90(a1, a2);
    if ((result & 1) != 0)
    {
      int64_t v13 = *(void *)(a1 + 16);
      if (v13 < a2)
      {
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }

      if (a2 < 0)
      {
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        return result;
      }

      if (v13 != a2)
      {
        uint64_t v14 = a1 + (a2 << 6) + 48;
        int64_t v15 = a2;
        while (v15 < v13)
        {
          uint64_t v16 = *(void *)v14;
          if ((*(void *)v14 & 0x6000000000000000LL) == 0)
          {
            uint64_t v27 = *(void *)(v14 - 16);
            uint64_t v28 = *(void *)(v14 - 8);
            uint64_t v29 = *(void *)(v14 + 24);
            uint64_t v30 = *(void *)(v14 + 32);
            uint64_t v31 = *(unsigned __int8 *)(v14 + 40);
            sub_188FFAD68();
            swift_allocError();
            *(void *)uint64_t v32 = v29;
            *(void *)(v32 + 8) = v30;
            *(void *)(v32 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v31;
            *(void *)(v32 + 24) = v27;
            *(void *)(v32 + 32) = v28;
            *(void *)(v32 + 40) = v16;
            *(_OWORD *)(v32 + 48) = 0u;
            *(_OWORD *)(v32 + 64) = 0u;
            *(_BYTE *)(v32 + 80) = 4;
            sub_188FFCF80(v27, v28, v16);
            return swift_willThrow();
          }

          ++v15;
          v14 += 64LL;
          if (v13 == v15) {
            goto LABEL_10;
          }
        }

        __break(1u);
        goto LABEL_38;
      }

uint64_t sub_189043310@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 + 8);
  uint64_t v5 = *(void *)(v4 + 16);
  uint64_t v6 = *(void *)(v4 + 24);
  uint64_t v8 = *a1;
  uint64_t v7 = a1[1];
  uint64_t v9 = a1[2];
  uint64_t v10 = *(void *)(v6 + 8);
  LOBYTE(v51) = 2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_188FFB780(v5, v10, (unsigned __int8 *)&v51, 0LL, 0LL, 0LL);
  uint64_t v58 = v5;
  uint64_t v59 = v6;
  uint64_t v60 = v11;
  uint64_t v61 = v12;
  uint64_t v62 = v8;
  uint64_t v63 = v7;
  uint64_t v64 = v9;
  uint64_t v13 = v70;
  sub_18903EC10((uint64_t)&v65);
  uint64_t v70 = v13;
  if (v13)
  {
    swift_bridgeObjectRelease();
LABEL_3:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }

  uint64_t v49 = v9;
  if ((sub_188FFEAA4(*(void *)(v4 + 16), *(void *)(v4 + 24)) & 1) != 0)
  {
    uint64_t v15 = v3;
    uint64_t v16 = *(void *)(v3 + 16);
    __int128 v17 = v66;
    uint64_t v18 = v67;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v19 = v70;
    sub_189045948(v17, *((uint64_t *)&v17 + 1), v18, 0, v4, v16);
    uint64_t v70 = v19;
    if (v19)
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      uint64_t v69 = v65;
      sub_18901A160((uint64_t)&v69);
      uint64_t v68 = *((void *)&v65 + 1);
      sub_18901A160((uint64_t)&v68);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_3;
    }

    uint64_t v47 = v8;
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
  }

  else
  {
    uint64_t v47 = v8;
    uint64_t v15 = v3;
  }

  unint64_t v20 = (char **)(v15 + 16);
  uint64_t v21 = *(void *)(v15 + 16);
  uint64_t v48 = v15;
  uint64_t v22 = type metadata accessor for ArgumentDecoder();
  uint64_t v23 = swift_allocObject();
  uint64_t v24 = MEMORY[0x18961AFE8];
  *(void *)(v23 + 64) = 0LL;
  *(void *)(v23 + 72) = v24;
  *(void *)(v23 + 80) = v24;
  swift_bridgeObjectRetain();
  *(void *)(v23 + 88) = sub_1890121F0(v24);
  __int128 v25 = v66;
  *(_OWORD *)(v23 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v65;
  *(_OWORD *)(v23 + 32) = v25;
  *(void *)(v23 + 48) = v67;
  uint64_t v26 = v21;
  *(void *)(v23 + 72) = v21;
  swift_bridgeObjectRelease();
  *(void *)(v23 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = MEMORY[0x18961AFF8];
  uint64_t v27 = *(void *)(v4 + 16);
  uint64_t v28 = *(void *)(v4 + 24);
  uint64_t v56 = v22;
  unint64_t v57 = sub_189046244();
  uint64_t v55 = v23;
  *((void *)&v52 + 1) = v27;
  *(void *)&__int128 v53 = v28;
  __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)&v51);
  swift_retain();
  uint64_t v29 = v70;
  sub_189067A48();
  uint64_t v70 = v29;
  if (v29)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_deallocate_boxed_opaque_existential_1((uint64_t)&v51);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_189045948(v47, v7, v49, 0, v4, v26);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_willThrow();
    return swift_release();
  }

  else
  {
    sub_188FFCFB0(&v51, (uint64_t)a2);
    swift_beginAccess();
    uint64_t v30 = swift_bridgeObjectRetain();
    uint64_t v31 = v70;
    sub_189044850(v30);
    swift_bridgeObjectRelease();
    uint64_t v32 = swift_bridgeObjectRetain();
    uint64_t v33 = sub_189045F2C(v32, v48);
    uint64_t v70 = v31;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1890588F4(v33);
    uint64_t v34 = *(void *)(v4 + 16);
    uint64_t v35 = *(void *)(*(void *)(v4 + 24) + 8LL);
    uint64_t v36 = a2[3];
    uint64_t v37 = a2[4];
    __int128 v38 = __swift_project_boxed_opaque_existential_1(a2, v36);
    *((void *)&v53 + 1) = v36;
    uint64_t v54 = *(void *)(v37 + 8);
    boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)&v52);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v36 - 8) + 16LL))( boxed_opaque_existential_1Tm,  v38,  v36);
    *(void *)&__int128 v51 = v34;
    *((void *)&v51 + 1) = v35;
    __int128 v40 = *(char **)(v48 + 16);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      __int128 v40 = sub_1890574A0(0LL, *((void *)v40 + 2) + 1LL, 1, v40);
    }
    unint64_t v42 = *((void *)v40 + 2);
    unint64_t v41 = *((void *)v40 + 3);
    if (v42 >= v41 >> 1) {
      __int128 v40 = sub_1890574A0((char *)(v41 > 1), v42 + 1, 1, v40);
    }
    *((void *)v40 + 2) = v42 + 1;
    __int128 v43 = &v40[56 * v42];
    __int128 v44 = v51;
    __int128 v45 = v52;
    __int128 v46 = v53;
    *((void *)v43 + 10) = v54;
    *((_OWORD *)v43 + 3) = v45;
    *((_OWORD *)v43 + 4) = v46;
    *((_OWORD *)v43 + 2) = v44;
    uint64_t result = swift_release();
    *unint64_t v20 = v40;
  }

  return result;
}

uint64_t sub_189043800(uint64_t *a1)
{
  uint64_t v3 = v1;
  uint64_t v4 = a1;
  uint64_t result = sub_189043310(a1, v86);
  uint64_t v6 = v2;
  if (v2) {
    return result;
  }
  uint64_t v64 = v1;
  do
  {
    uint64_t v8 = v87;
    uint64_t v7 = v88;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v86, v87);
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(v7 + 8) + 24LL))(v8);
    if (v6)
    {
      uint64_t v58 = *(void *)(v3 + 8);
      uint64_t v59 = *(void *)(v3 + 16);
      sub_189045948(*v4, v4[1], v4[2], 0, v58, v59);
      uint64_t v60 = sub_18904573C(v58, v59);
      sub_189000524();
      swift_allocError();
      *(void *)uint64_t v61 = v60;
      *(void *)(v61 + 8) = v6;
      *(_OWORD *)(v61 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 0u;
      *(_OWORD *)(v61 + 32) = 0u;
      *(_OWORD *)(v61 + 48) = 0u;
      *(_OWORD *)(v61 + 64) = 0u;
      *(void *)(v61 + 80) = 0LL;
      *(_BYTE *)(v61 + 88) = 13;
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v86);
    }

    uint64_t v9 = *(void *)(v3 + 16);
    if (!*(void *)(v9 + 16)) {
      goto LABEL_61;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) != 0)
    {
      uint64_t v10 = *(void *)(v9 + 16);
      if (!v10) {
        goto LABEL_62;
      }
    }

    else
    {
      uint64_t result = (uint64_t)sub_18905E6CC(v9);
      uint64_t v9 = result;
      uint64_t v10 = *(void *)(result + 16);
      if (!v10) {
        goto LABEL_62;
      }
    }

    uint64_t v11 = v10 - 1;
    uint64_t v12 = v9 + 56 * v11;
    uint64_t v13 = *(void *)(v12 + 80);
    __int128 v15 = *(_OWORD *)(v12 + 48);
    __int128 v14 = *(_OWORD *)(v12 + 64);
    __int128 v16 = *(_OWORD *)(v12 + 32);
    *(void *)(v9 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v11;
    *(void *)(v3 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v9;
    __int128 v77 = v16;
    __int128 v78 = v15;
    __int128 v79 = v14;
    *(void *)&__int128 v80 = v13;
    uint64_t v17 = v87;
    uint64_t v18 = v88;
    uint64_t v19 = __swift_project_boxed_opaque_existential_1(v86, v87);
    *((void *)&v69 + 1) = v17;
    *(void *)&__int128 v70 = *(void *)(v18 + 8);
    boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)&v68);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v17 - 8) + 16LL))( boxed_opaque_existential_1Tm,  v19,  v17);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v78);
    sub_188FFCFB0(&v68, (uint64_t)&v78);
    sub_189046084(&v77, &v68);
    uint64_t v21 = *(char **)(v3 + 16);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v21 = sub_1890574A0(0LL, *((void *)v21 + 2) + 1LL, 1, v21);
    }
    unint64_t v23 = *((void *)v21 + 2);
    unint64_t v22 = *((void *)v21 + 3);
    uint64_t v94 = 0LL;
    if (v23 >= v22 >> 1) {
      uint64_t v21 = sub_1890574A0((char *)(v22 > 1), v23 + 1, 1, v21);
    }
    *((void *)v21 + 2) = v23 + 1;
    uint64_t v24 = &v21[56 * v23];
    __int128 v25 = v68;
    __int128 v26 = v69;
    __int128 v27 = v70;
    *((void *)v24 + 10) = v71;
    *((_OWORD *)v24 + 3) = v26;
    *((_OWORD *)v24 + 4) = v27;
    *((_OWORD *)v24 + 2) = v25;
    *(void *)(v3 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v21;
    sub_1890460C0((uint64_t)&v77);
    uint64_t v28 = *(void *)(v3 + 8);
    uint64_t v29 = v4[2];
    unint64_t v65 = v4[1];
    uint64_t v66 = *v4;
    sub_1890559B4(*v4, v65, (uint64_t)v89);
    sub_189011B78((uint64_t)v89, (uint64_t)&v91, &qword_18C4FC480);
    uint64_t v30 = v93;
    uint64_t v67 = v28;
    if ((v93 & 0x7FFFFFFFFFFFFF3ELL) == 0x7FFFFFF3ELL) {
      goto LABEL_31;
    }
    unint64_t v31 = v91;
    char v32 = v92;
    uint64_t result = sub_1890461C0((uint64_t)v89);
    if ((v30 & 0x6000000000000000LL) != 0x2000000000000000LL || (v32 & 1) != 0) {
      goto LABEL_31;
    }
    if ((v31 & 0x8000000000000000LL) != 0) {
      goto LABEL_63;
    }
    if (v31 >= *(void *)(v29 + 16)) {
      goto LABEL_64;
    }
    uint64_t v62 = v29;
    uint64_t v63 = v4;
    uint64_t v33 = v29 + 16 * v31;
    uint64_t v34 = *(void *)(v33 + 32);
    uint64_t v35 = *(void *)(v33 + 40);
    swift_beginAccess();
    unint64_t v36 = *(void *)(v28 + 40);
    if (!(v36 >> 62))
    {
      uint64_t v37 = *(void *)((v36 & 0xFFFFFFFFFFFFF8LL) + 0x10);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      if (!v37) {
        goto LABEL_30;
      }
      goto LABEL_18;
    }

    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v37 = sub_189067D54();
    if (!v37)
    {
LABEL_30:
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      uint64_t v4 = v63;
      uint64_t v3 = v64;
      uint64_t v28 = v67;
      uint64_t v29 = v62;
LABEL_31:
      uint64_t v47 = v94;
      sub_189045948(v66, v65, v29, 1, v28, *(void *)(v3 + 16));
      if (!v47)
      {
        (*(void (**)(__int128 *__return_ptr))(*(void *)(v28 + 24) + 16LL))(&v68);
        __int128 v83 = v74;
        __int128 v84 = v75;
        uint64_t v85 = v76;
        __int128 v79 = v70;
        __int128 v80 = v71;
        __int128 v81 = v72;
        __int128 v82 = v73;
        __int128 v77 = v68;
        __int128 v78 = v69;
        sub_189000568((uint64_t)&v77);
        uint64_t v48 = v84;
        if ((void)v84)
        {
          swift_beginAccess();
          unint64_t v49 = *(void *)(v28 + 40);
          uint64_t v94 = 0LL;
          if (v49 >> 62)
          {
            swift_bridgeObjectRetain_n();
            uint64_t v50 = sub_189067D54();
            swift_bridgeObjectRelease();
            if (v50) {
              goto LABEL_35;
            }
          }

          else
          {
            uint64_t v50 = *(void *)((v49 & 0xFFFFFFFFFFFFF8LL) + 0x10);
            swift_bridgeObjectRetain_n();
            if (v50)
            {
LABEL_35:
              uint64_t v51 = 4LL;
              do
              {
                uint64_t v52 = v51 - 4;
                if ((v49 & 0xC000000000000001LL) != 0)
                {
                  uint64_t result = MEMORY[0x1895DCCF8](v51 - 4, v49);
                  uint64_t v53 = result;
                  BOOL v54 = __OFADD__(v52, 1LL);
                  uint64_t v55 = v51 - 3;
                  if (v54) {
                    goto LABEL_59;
                  }
                }

                else
                {
                  uint64_t v53 = *(void *)(v49 + 8 * v51);
                  uint64_t result = swift_retain();
                  BOOL v54 = __OFADD__(v52, 1LL);
                  uint64_t v55 = v51 - 3;
                  if (v54)
                  {
LABEL_59:
                    __break(1u);
                    goto LABEL_60;
                  }
                }

                if (*(void *)(v53 + 16) == v48)
                {
                  swift_release();
                  swift_bridgeObjectRelease_n();
                  uint64_t v3 = v64;
                  *(void *)(v64 + 8) = v53;
                  goto LABEL_47;
                }

                swift_release();
                ++v51;
              }

              while (v55 != v50);
            }
          }

          swift_bridgeObjectRelease_n();
          sub_188FFAD68();
          swift_allocError();
          *(void *)uint64_t v57 = 3LL;
          *(_OWORD *)(v57 + 8) = 0u;
          *(_OWORD *)(v57 + 24) = 0u;
          *(_OWORD *)(v57 + 40) = 0u;
          *(_OWORD *)(v57 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = 0u;
          *(void *)(v57 + 72) = 0LL;
          *(_BYTE *)(v57 + 80) = 15;
          swift_willThrow();
        }
      }

      return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v86);
    }

LABEL_18:
    uint64_t v38 = 4LL;
    while (1)
    {
      uint64_t v39 = v38 - 4;
      if ((v36 & 0xC000000000000001LL) != 0)
      {
        uint64_t result = MEMORY[0x1895DCCF8](v38 - 4, v36);
        uint64_t v40 = result;
        uint64_t v41 = v38 - 3;
        if (__OFADD__(v39, 1LL))
        {
LABEL_60:
          __break(1u);
LABEL_61:
          __break(1u);
LABEL_62:
          __break(1u);
LABEL_63:
          __break(1u);
LABEL_64:
          __break(1u);
          return result;
        }
      }

      else
      {
        uint64_t v40 = *(void *)(v36 + 8 * v38);
        uint64_t result = swift_retain();
        uint64_t v41 = v38 - 3;
        if (__OFADD__(v39, 1LL)) {
          goto LABEL_60;
        }
      }

      uint64_t v44 = v34;
      uint64_t v45 = v35;
      char v46 = sub_189067F10();
      swift_bridgeObjectRelease();
      if ((v46 & 1) != 0) {
        goto LABEL_46;
      }
      swift_release();
      ++v38;
      uint64_t v35 = v45;
      uint64_t v34 = v44;
      if (v41 == v37) {
        goto LABEL_30;
      }
    }

    swift_bridgeObjectRelease();
LABEL_46:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_189052E2C((uint64_t)v90);
    sub_1890412E8((uint64_t)v90);
    swift_release();
    uint64_t v3 = v64;
    *(void *)(v64 + 8) = v40;
    uint64_t v4 = v63;
LABEL_47:
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v86);
    uint64_t v56 = v94;
    uint64_t result = sub_189043310(v4, v86);
    uint64_t v6 = v56;
  }

  while (!v56);
  return result;
}

  __break(1u);
  return result;
}

    *a5 = v22;
    a5[1] = v24;
    a5[2] = v27;
    a5[3] = v25;
    a5[4] = v26;
    return result;
  }

  if (a1 >> 14 > result >> 14)
  {
    __break(1u);
    goto LABEL_20;
  }

  uint64_t v12 = sub_189067B08();
  uint64_t v48 = v15;
  if ((v12 ^ v13) < 0x4000)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    __int128 v16 = sub_189067AE4();
    uint64_t result = swift_bridgeObjectRelease();
    if (v16 != 1)
    {
      uint64_t v17 = MEMORY[0x1895DC8B4](a1, a2, a3, a4);
      uint64_t v19 = v41;
      unint64_t v20 = 0x80;
      goto LABEL_15;
    }

    if (a1 >> 14 != a2 >> 14)
    {
      swift_bridgeObjectRetain();
      uint64_t v17 = sub_189067AF0();
      uint64_t v19 = v18;
      swift_bridgeObjectRelease();
      unint64_t v20 = 64;
LABEL_15:
      swift_bridgeObjectRelease();
      uint64_t v42 = sub_1890520B0(v17, v19, v20);
      uint64_t v44 = v43;
      sub_188FFCF98(v17, v19, v20);
      sub_188FFAD68();
      swift_allocError();
      *(void *)uint64_t v45 = v42;
      *(void *)(v45 + 8) = v44;
      *(_OWORD *)(v45 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 0u;
      *(_OWORD *)(v45 + 32) = 0u;
      *(_OWORD *)(v45 + 48) = 0u;
      *(_OWORD *)(v45 + 64) = 0u;
      *(_BYTE *)(v45 + 80) = 5;
      return swift_willThrow();
    }

    goto LABEL_22;
  }

  uint64_t v29 = v12;
  uint64_t v30 = v13;
  uint64_t v47 = v14;
  uint64_t result = sub_189067AC0();
  if (a2 >> 14 >= result >> 14)
  {
    __int128 v27 = 0x8000000000000040LL;
    unint64_t v31 = sub_189067B08();
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    uint64_t v37 = v36;
    swift_bridgeObjectRelease();
    __int128 v25 = MEMORY[0x1895DC8B4](v31, v33, v35, v37);
    __int128 v26 = v38;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v39 = sub_189067AE4();
    swift_bridgeObjectRelease();
    if (v39 == 1)
    {
      swift_bridgeObjectRetain();
      unint64_t v22 = sub_189067AF0();
      uint64_t v24 = v40;
      swift_bridgeObjectRelease();
    }

    else
    {
      unint64_t v22 = MEMORY[0x1895DC8B4](v29, v30, v48, v47);
      uint64_t v24 = v46;
      __int128 v27 = 0x8000000000000080LL;
    }

    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_18;
  }

  __break(1u);
  return result;
}

  __break(1u);
  return result;
}

  __break(1u);
  return result;
}

  __break(1u);
  return result;
}

  __break(1u);
  return result;
}

  __break(1u);
  return result;
}

  __break(1u);
  return result;
}

  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = (_OWORD *)(a1 + 128);
  uint64_t v18 = (_OWORD *)(a2 + 128);
  uint64_t v19 = *(void *)(a2 + 136);
  if (*(void *)(a1 + 136))
  {
    if (v19)
    {
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      unint64_t v20 = *(void *)(a2 + 176);
      if (*(void *)(a1 + 176))
      {
        if (v20)
        {
          __swift_assign_boxed_opaque_existential_0((uint64_t *)(a1 + 152), (uint64_t *)(a2 + 152));
LABEL_32:
          *(void *)(a1 + 184) = *(void *)(a2 + 184);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
          return a1;
        }

        __swift_destroy_boxed_opaque_existential_1Tm(a1 + 152);
      }

      else if (v20)
      {
        *(void *)(a1 + 176) = v20;
        (**(void (***)(uint64_t, uint64_t))(v20 - 8))(a1 + 152, a2 + 152);
        goto LABEL_32;
      }

      uint64_t v28 = *(_OWORD *)(a2 + 168);
      *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
      *(_OWORD *)(a1 + 168) = v28;
      goto LABEL_32;
    }

    sub_189014560(a1 + 128);
    *uint64_t v17 = *v18;
    unint64_t v23 = *(_OWORD *)(a2 + 160);
    unint64_t v22 = *(_OWORD *)(a2 + 176);
    uint64_t v24 = *(_OWORD *)(a2 + 144);
    *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
    *(_OWORD *)(a1 + 160) = v23;
    *(_OWORD *)(a1 + 176) = v22;
    *(_OWORD *)(a1 + 144) = v24;
  }

  else if (v19)
  {
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    uint64_t v21 = *(void *)(a2 + 176);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v21)
    {
      *(void *)(a1 + 176) = v21;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v21 - 8))(a1 + 152, a2 + 152, v21);
    }

    else
    {
      uint64_t v29 = *(_OWORD *)(a2 + 168);
      *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
      *(_OWORD *)(a1 + 168) = v29;
    }

    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
    swift_bridgeObjectRetain();
  }

  else
  {
    *uint64_t v17 = *v18;
    __int128 v25 = *(_OWORD *)(a2 + 144);
    __int128 v26 = *(_OWORD *)(a2 + 160);
    __int128 v27 = *(_OWORD *)(a2 + 176);
    *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
    *(_OWORD *)(a1 + 160) = v26;
    *(_OWORD *)(a1 + 176) = v27;
    *(_OWORD *)(a1 + 144) = v25;
  }

  return a1;
}

  if (v7)
  {
    sub_189068048();
    swift_bridgeObjectRetain();
    sub_1890677A8();
    swift_bridgeObjectRelease();
    if (v14)
    {
LABEL_20:
      sub_189068048();
      swift_bridgeObjectRetain();
      sub_1890677A8();
      return swift_bridgeObjectRelease();
    }
  }

  else
  {
    sub_189068048();
    if (v14) {
      goto LABEL_20;
    }
  }

  return sub_189068048();
}

uint64_t sub_189043EE4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  (*(void (**)(void *__return_ptr))(*(void *)(a2 + 24) + 16LL))(v25);
  uint64_t result = sub_189000568((uint64_t)v25);
  if (!v25[3])
  {
    unint64_t v9 = sub_1890462C0();
    v24[5] = sub_189044A44((uint64_t)&type metadata for GenerateCompletions, v9);
    v24[6] = v10;
    v24[7] = v11;
    sub_189043310(a1, v24);
    if (v4)
    {
      MEMORY[0x1895DD340](v4);
    }

    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC490);
      if ((swift_dynamicCast() & 1) != 0)
      {
        uint64_t v12 = sub_18904573C(a3, a4);
        if ((v23 & 1) == 0)
        {
          uint64_t v13 = v12;
          sub_189000524();
          swift_allocError();
          *(void *)uint64_t v14 = v13;
          *(void *)(v14 + 8) = v21;
          *(void *)(v14 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v22;
          *(_OWORD *)(v14 + 24) = 0u;
          *(_OWORD *)(v14 + 40) = 0u;
          *(_OWORD *)(v14 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = 0u;
          *(_OWORD *)(v14 + 72) = 0u;
          *(_BYTE *)(v14 + 88) = 1;
          swift_willThrow();
LABEL_13:
          swift_release();
          swift_release();
          return swift_bridgeObjectRelease();
        }

        goto LABEL_15;
      }
    }

    unint64_t v15 = sub_189046304();
    sub_189044A44((uint64_t)&type metadata for AutodetectedGenerateCompletions, v15);
    sub_189043310(a1, v24);
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC490);
    if ((swift_dynamicCast() & 1) == 0)
    {
LABEL_12:
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_13;
    }

    if ((v20 & 1) == 0)
    {
      sub_188FFADBC(v18, v19, 0);
      sub_188FFADBC(v18, v19, 0);
      if ((v18 & 1) != 0)
      {
        __int128 v16 = sub_18904573C(a3, a4);
        sub_189000524();
        swift_allocError();
        *(void *)uint64_t v17 = v16;
        *(_OWORD *)(v17 + 8) = 0u;
        *(_OWORD *)(v17 + 24) = 0u;
        *(_OWORD *)(v17 + 40) = 0u;
        *(_OWORD *)(v17 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = 0u;
        *(_OWORD *)(v17 + 72) = 0u;
        *(_BYTE *)(v17 + 88) = 1;
        swift_willThrow();
      }

      sub_188FFADBC(v18, v19, 0);
      goto LABEL_12;
    }

uint64_t sub_189044204@<X0>(uint64_t a1@<X8>)
{
  char v6 = 0;
  memset(v5, 0, sizeof(v5));
  uint64_t v2 = sub_188FFD338((uint64_t)&unk_18A338FC0);
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v2;
  uint64_t result = sub_189011B78((uint64_t)v5, v3 + 24, &qword_18C4FC3A0);
  *(_BYTE *)(v3 + 73) = 0;
  *(void *)(v3 + 80) = 0LL;
  *(void *)(v3 + 88) = 0LL;
  *(_BYTE *)(v3 + 96) = -1;
  *(void *)a1 = sub_1890468B4;
  *(void *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 1;
  return result;
}

uint64_t sub_1890442D8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v13 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC808);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1895F8858](v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)&__int128 v11 = MEMORY[0x18961AFF8];
  sub_188FFD338((uint64_t)&unk_18A339080);
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1890469B0();
  sub_189068090();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }

  else
  {
    uint64_t v8 = v13;
    __swift_instantiateConcreteTypeFromMangledName(qword_18C4FC748);
    sub_189009B3C(&qword_18C4FC740, qword_18C4FC748, (uint64_t)&protocol conformance descriptor for Option<A>);
    sub_189067DFC();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_bridgeObjectRelease();
    char v9 = v12;
    *(_OWORD *)uint64_t v8 = v11;
    *(_BYTE *)(v8 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v9;
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }

unint64_t sub_189044494()
{
  return 0xD000000000000018LL;
}

uint64_t sub_1890444B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = sub_1890449C0(a1, a2);
  *a3 = result & 1;
  return result;
}

void sub_1890444D8(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1890444E4()
{
  return sub_1890680F0();
}

uint64_t sub_18904450C()
{
  return sub_1890680FC();
}

uint64_t sub_189044538@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1890442D8(a1, a2);
}

uint64_t sub_18904454C@<X0>(uint64_t a1@<X8>)
{
  char v6 = 0;
  memset(v5, 0, sizeof(v5));
  uint64_t v2 = sub_188FFD338((uint64_t)&unk_18A338FF8);
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v2;
  *(_BYTE *)(v3 + 24) = 0;
  uint64_t result = sub_189011B78((uint64_t)v5, v3 + 32, &qword_18C4FC3A0);
  *(void *)a1 = sub_189014094;
  *(void *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 1;
  return result;
}

uint64_t sub_189044614@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v17 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC810);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1895F8858](v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = MEMORY[0x18961AFF8];
  sub_188FFD338((uint64_t)&unk_18A3390B8);
  swift_bridgeObjectRelease();
  swift_arrayDestroy();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_18904681C();
  sub_189068090();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }

  else
  {
    uint64_t v8 = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC620);
    sub_189009B3C(&qword_18C4FC618, &qword_18C4FC620, (uint64_t)&protocol conformance descriptor for Flag<A>);
    sub_189067DFC();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v9 = v14;
    uint64_t v10 = v15;
    char v11 = v16;
    sub_189000668(v14, v15, v16);
    swift_bridgeObjectRelease();
    *(void *)uint64_t v8 = v9;
    *(void *)(v8 + 8) = v10;
    *(_BYTE *)(v8 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v11;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    return sub_188FFADBC(v9, v10, v11);
  }

uint64_t sub_1890447E8()
{
  return sub_1890680F0();
}

uint64_t sub_189044810()
{
  return sub_1890680FC();
}

uint64_t sub_18904483C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_189044614(a1, a2);
}

uint64_t sub_189044850(uint64_t a1)
{
  uint64_t v2 = a1 + 56;
  uint64_t v3 = 1LL << *(_BYTE *)(a1 + 32);
  uint64_t v4 = -1LL;
  if (v3 < 64) {
    uint64_t v4 = ~(-1LL << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 56);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0LL;
  while (v5)
  {
    unint64_t v9 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    unint64_t v10 = v9 | (v8 << 6);
LABEL_22:
    uint64_t v14 = *(void *)(a1 + 48) + 24 * v10;
    if ((*(_BYTE *)(v14 + 17) & 1) == 0) {
      uint64_t result = sub_1890547B4(*(void *)v14, *(void *)(v14 + 8), *(_BYTE *)(v14 + 16) & 1);
    }
  }

  int64_t v11 = v8 + 1;
  if (__OFADD__(v8, 1LL))
  {
    __break(1u);
    goto LABEL_26;
  }

  if (v11 >= v6) {
    return swift_release();
  }
  unint64_t v12 = *(void *)(v2 + 8 * v11);
  ++v8;
  if (v12) {
    goto LABEL_21;
  }
  int64_t v8 = v11 + 1;
  if (v11 + 1 >= v6) {
    return swift_release();
  }
  unint64_t v12 = *(void *)(v2 + 8 * v8);
  if (v12) {
    goto LABEL_21;
  }
  int64_t v8 = v11 + 2;
  if (v11 + 2 >= v6) {
    return swift_release();
  }
  unint64_t v12 = *(void *)(v2 + 8 * v8);
  if (v12) {
    goto LABEL_21;
  }
  int64_t v8 = v11 + 3;
  if (v11 + 3 >= v6) {
    return swift_release();
  }
  unint64_t v12 = *(void *)(v2 + 8 * v8);
  if (v12)
  {
LABEL_21:
    unint64_t v5 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v8 << 6);
    goto LABEL_22;
  }

  int64_t v13 = v11 + 4;
  if (v13 >= v6) {
    return swift_release();
  }
  unint64_t v12 = *(void *)(v2 + 8 * v13);
  if (v12)
  {
    int64_t v8 = v13;
    goto LABEL_21;
  }

  while (1)
  {
    int64_t v8 = v13 + 1;
    if (__OFADD__(v13, 1LL)) {
      break;
    }
    if (v8 >= v6) {
      return swift_release();
    }
    unint64_t v12 = *(void *)(v2 + 8 * v8);
    ++v13;
    if (v12) {
      goto LABEL_21;
    }
  }

uint64_t sub_1890449C0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000018LL && a2 == 0x800000018906DAB0LL)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }

  else
  {
    char v3 = sub_189067F10();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }

  return v2 & 1;
}

void *sub_189044A44(uint64_t a1, uint64_t a2)
{
  char v2 = sub_18902549C(a1, a2);
  swift_beginAccess();
  unint64_t v3 = v2[5];
  if (v3 >> 62)
  {
    swift_retain_n();
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_189067D54();
    swift_bridgeObjectRelease();
    if (!v9) {
      goto LABEL_6;
    }
  }

  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    swift_retain_n();
    if (!v4) {
      goto LABEL_6;
    }
  }

  unint64_t v5 = sub_1890099B4();
  __swift_instantiateConcreteTypeFromMangledName(qword_18C4FC6B8);
  int64_t v6 = (void *)swift_allocObject();
  swift_weakInit();
  v6[2] = &type metadata for HelpCommand;
  void v6[3] = v5;
  swift_weakAssign();
  v6[5] = MEMORY[0x18961AFE8];
  swift_beginAccess();
  uint64_t v7 = swift_retain();
  MEMORY[0x1895DCA58](v7);
  if (*(void *)((v2[5] & 0xFFFFFFFFFFFFFF8LL) + 0x10) >= *(void *)((v2[5] & 0xFFFFFFFFFFFFFF8LL) + 0x18) >> 1) {
    sub_1890679D0();
  }
  sub_1890679F4();
  sub_1890679C4();
  swift_endAccess();
  swift_weakAssign();
  swift_release();
LABEL_6:
  swift_release();
  return v2;
}

uint64_t sub_189044D68(uint64_t result, void *a2)
{
  uint64_t v6 = v2;
  unint64_t v7 = *(void *)(result + 16);
  if (v7)
  {
    uint64_t v9 = result;
    uint64_t v10 = result + 32;
    BOOL v11 = *(void *)(result + 32) == 0x6C706D6F632D2D2DLL && *(void *)(result + 40) == 0xED00006E6F697465LL;
    if (v11 || (uint64_t result = sub_189067F10(), (result & 1) != 0))
    {
      uint64_t v80 = v9;
      swift_bridgeObjectRetain();
      swift_retain();
      if (v7 == 1)
      {
LABEL_8:
        sub_188FFAD68();
        swift_allocError();
        *(void *)uint64_t v13 = 3LL;
        *(_OWORD *)(v13 + 8) = 0u;
        *(_OWORD *)(v13 + 24) = 0u;
        *(_OWORD *)(v13 + 40) = 0u;
        *(_OWORD *)(v13 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = 0u;
        *(void *)(v13 + 72) = 0LL;
        *(_BYTE *)(v13 + 80) = 15;
        swift_willThrow();
        swift_unknownObjectRelease();
        return swift_release();
      }

      uint64_t v75 = v10;
      uint64_t v14 = 1LL;
      unint64_t v76 = v7;
      while (2)
      {
        if (v14 == v7)
        {
          __break(1u);
        }

        else
        {
          uint64_t v15 = (unint64_t *)(v10 + 16 * v14);
          unint64_t v4 = *v15;
          uint64_t v6 = v15[1];
          unint64_t v81 = v14 + 1;
          BOOL v16 = *v15 == 11565 && v6 == 0xE200000000000000LL;
          if (!v16 && (sub_189067F10() & 1) == 0)
          {
            swift_beginAccess();
            unint64_t v5 = a2[5];
            if (v5 >> 62)
            {
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain();
              uint64_t v17 = sub_189067D54();
              swift_bridgeObjectRelease();
              if (v17)
              {
LABEL_18:
                uint64_t v79 = v14 + 1;
                unint64_t v88 = v5 & 0xC000000000000001LL;
                uint64_t v18 = 4LL;
                while (1)
                {
                  uint64_t v19 = v18 - 4;
                  if (v88)
                  {
                    uint64_t v20 = MEMORY[0x1895DCCF8](v18 - 4, v5);
                    uint64_t v21 = v18 - 3;
                    if (__OFADD__(v19, 1LL)) {
                      goto LABEL_61;
                    }
                  }

                  else
                  {
                    uint64_t v20 = *(void *)(v5 + 8 * v18);
                    swift_retain();
                    uint64_t v21 = v18 - 3;
                    if (__OFADD__(v19, 1LL))
                    {
LABEL_61:
                      __break(1u);
                      goto LABEL_62;
                    }
                  }

                  uint64_t v3 = sub_189067F10();
                  swift_bridgeObjectRelease();
                  if ((v3 & 1) != 0) {
                    goto LABEL_32;
                  }
                  swift_release();
                  ++v18;
                  if (v21 == v17) {
                    goto LABEL_35;
                  }
                }

                swift_bridgeObjectRelease();
LABEL_32:
                uint64_t v10 = v75;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_release();
                swift_bridgeObjectRelease();
                a2 = (void *)v20;
                unint64_t v7 = v76;
                uint64_t v14 = v81;
                if (v81 != v76) {
                  continue;
                }
                goto LABEL_8;
              }
            }

            else
            {
              uint64_t v17 = *(void *)((v5 & 0xFFFFFFFFFFFFF8LL) + 0x10);
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain();
              if (v17) {
                goto LABEL_18;
              }
            }

LABEL_46:
            swift_unknownObjectRelease();
            uint64_t v29 = a2[2];
            uint64_t v30 = *(void *)(a2[3] + 8LL);
            LOBYTE(v87[0]) = 2;
            uint64_t v31 = sub_188FFB780(v29, v30, (unsigned __int8 *)v87, 0LL, 0LL, 0LL);
            uint64_t v33 = v32;
            uint64_t v34 = sub_1890530B0(v6, v4, 0LL);
            if (v5)
            {
LABEL_80:
              swift_bridgeObjectRelease();
              uint64_t result = swift_unexpectedError();
              __break(1u);
              return result;
            }

            uint64_t v35 = (void *)v34;
            swift_bridgeObjectRelease();
            if (!v35[2]) {
              goto LABEL_78;
            }
            uint64_t v18 = v35[4];
            uint64_t v20 = v35[5];
            unint64_t v5 = v35[6];
            unint64_t v88 = v35[8];
            sub_1890411A8(v18, v20, v5);
            swift_bridgeObjectRelease();
            uint64_t v36 = (v5 >> 61) & 3;
            if ((_DWORD)v36)
            {
              if ((_DWORD)v36 != 1)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_release();
                goto LABEL_36;
              }

              swift_bridgeObjectRetain();
              uint64_t v37 = sub_189058654(v18, v20);
              unint64_t v81 = v28;
              uint64_t v79 = v31;
              if (!v38)
              {
LABEL_62:
                uint64_t v54 = v18;
                uint64_t v55 = v20;
                goto LABEL_65;
              }

              if (v37 == 95 && v38 == 0xE100000000000000LL)
              {
                swift_bridgeObjectRelease();
              }

              else
              {
                char v56 = sub_189067F10();
                swift_bridgeObjectRelease();
                uint64_t v54 = v18;
                uint64_t v55 = v20;
                if ((v56 & 1) == 0) {
                  goto LABEL_65;
                }
              }

              unint64_t v57 = sub_189058224(1uLL, v18, v20);
              uint64_t v78 = v58;
              uint64_t v60 = v59;
              uint64_t v62 = v61;
              sub_1890411F4(v18, v20, v5);
              uint64_t v54 = MEMORY[0x1895DC8B4](v57, v78, v60, v62);
              uint64_t v55 = v63;
              swift_bridgeObjectRelease();
LABEL_65:
              swift_bridgeObjectRetain();
              sub_189041E54(v79, v54, v55, MEMORY[0x18961AFE8], (uint64_t)v87);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1890411F4(v18, v20, v5);
              sub_189011B78((uint64_t)v87, (uint64_t)v82, &qword_18C761058);
              sub_189011B78((uint64_t)v82, (uint64_t)v83, &qword_18C761058);
              uint64_t v28 = v81;
              if (sub_18900F708((uint64_t)v83) != 1)
              {
                uint64_t v52 = v84;
                uint64_t v64 = v85;
                int v65 = v86;
                sub_188FFD0F0((uint64_t)v84, v85, v86);
                sub_18900F720((uint64_t)v82);
                if (v65 == 3)
                {
LABEL_67:
                  uint64_t v66 = v52(v28);
                  swift_release();
                  *(void *)&v87[0] = v66;
                  __swift_instantiateConcreteTypeFromMangledName(&qword_18C760FE8);
                  sub_189009B3C((unint64_t *)&qword_18C760FF0, &qword_18C760FE8, MEMORY[0x189618458]);
                  uint64_t v67 = sub_1890677C0();
                  uint64_t v69 = v68;
                  swift_bridgeObjectRelease();
                  sub_188FFAD68();
                  swift_allocError();
                  *(void *)uint64_t v70 = v67;
                  *(void *)(v70 + 8) = v69;
                  *(_OWORD *)(v70 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 0u;
                  *(_OWORD *)(v70 + 32) = 0u;
                  *(_OWORD *)(v70 + 48) = 0u;
                  *(_OWORD *)(v70 + 64) = 0u;
                  *(_BYTE *)(v70 + 80) = 2;
                  swift_willThrow();
                  swift_unknownObjectRelease();
                  swift_release();
                  return swift_release();
                }

                sub_189009AF4((uint64_t)v52, v64, v65);
              }

              swift_release();
              sub_188FFAD68();
              swift_allocError();
              *(void *)uint64_t v72 = 3LL;
              *(_OWORD *)(v72 + 8) = 0u;
              *(_OWORD *)(v72 + 24) = 0u;
              *(_OWORD *)(v72 + 40) = 0u;
              *(_OWORD *)(v72 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = 0u;
              *(void *)(v72 + 72) = 0LL;
              *(_BYTE *)(v72 + 80) = 15;
              swift_willThrow();
              swift_unknownObjectRelease();
              return swift_release();
            }

            if (*(void *)(v33 + 16))
            {
              sub_188FFCF80(v18, v20, v5);
              unint64_t v39 = sub_18904D914(v18, v20, v5);
              if ((v40 & 1) != 0)
              {
                unint64_t v41 = *(void *)(*(void *)(v33 + 56) + 8 * v39);
                sub_188FFCF98(v18, v20, v5);
                if ((v41 & 0x8000000000000000LL) != 0)
                {
                  __break(1u);
                }

                else if (v41 < *(void *)(v31 + 16))
                {
                  uint64_t v42 = (_OWORD *)(v31 + 192 * v41);
                  __int128 v43 = v42[2];
                  __int128 v44 = v42[3];
                  __int128 v45 = v42[5];
                  v87[2] = v42[4];
                  v87[3] = v45;
                  v87[0] = v43;
                  v87[1] = v44;
                  __int128 v46 = v42[6];
                  __int128 v47 = v42[7];
                  __int128 v48 = v42[9];
                  v87[6] = v42[8];
                  v87[7] = v48;
                  v87[4] = v46;
                  v87[5] = v47;
                  __int128 v49 = v42[10];
                  __int128 v50 = v42[11];
                  __int128 v51 = v42[13];
                  v87[10] = v42[12];
                  v87[11] = v51;
                  v87[8] = v49;
                  v87[9] = v50;
                  uint64_t v77 = *((void *)&v49 + 1);
                  uint64_t v52 = (uint64_t (*)(uint64_t))v49;
                  int v53 = v50;
                  sub_188FFCFF4((uint64_t)v87);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  sub_1890411F4(v18, v20, v5);
                  sub_188FFD0F0((uint64_t)v52, v77, v53);
                  sub_1890099F8((uint64_t)v87);
                  if (v53 == 3) {
                    goto LABEL_67;
                  }
                  sub_189009AF4((uint64_t)v52, v77, v53);
LABEL_70:
                  swift_release();
                  sub_188FFAD68();
                  swift_allocError();
                  *(void *)uint64_t v71 = 3LL;
                  *(_OWORD *)(v71 + 8) = 0u;
                  *(_OWORD *)(v71 + 24) = 0u;
                  *(_OWORD *)(v71 + 40) = 0u;
                  *(_OWORD *)(v71 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = 0u;
                  *(void *)(v71 + 72) = 0LL;
                  *(_BYTE *)(v71 + 80) = 15;
                  swift_willThrow();
                  swift_unknownObjectRelease();
                  return swift_release();
                }

                __break(1u);
LABEL_78:
                swift_bridgeObjectRelease();
                __break(1u);
LABEL_79:
                __break(1u);
                goto LABEL_80;
              }

              sub_188FFCF98(v18, v20, v5);
            }

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1890411F4(v18, v20, v5);
            goto LABEL_70;
          }
        }

        break;
      }

      unint64_t v73 = (2 * v12) | 1;
      swift_unknownObjectRelease();
      sub_188FFEF38(v3, v75, v14, v73);
      uint64_t v28 = v74;
      goto LABEL_46;
    }
  }

  return result;
}

      uint64_t result = swift_bridgeObjectRelease();
      __break(1u);
      return result;
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC890);
    unint64_t v12 = swift_allocObject();
    uint64_t v3 = v12;
    *(_OWORD *)(v12 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = xmmword_1890684B0;
    *(void *)(v12 + 32) = v47;
    *(void *)(v12 + 40) = v48;
    *(void *)(v12 + 48) = v51;
    *(void *)(v12 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = v27;
    *(void *)(v12 + 64) = v28;
    *(void *)(v12 + 72) = a3;
LABEL_15:
    *(void *)(v12 + 80) = 0LL;
    *(_BYTE *)(v12 + 88) = 1;
    return v3;
  }

  if (!v14)
  {
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC890);
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = xmmword_1890684B0;
    *(void *)(v3 + 32) = a1;
    *(void *)(v3 + 40) = a2;
    *(void *)(v3 + 48) = 0x2000000000000000LL;
    *(void *)(v3 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = 0LL;
    *(void *)(v3 + 64) = 0LL;
    *(void *)(v3 + 72) = a3;
    *(void *)(v3 + 80) = 0LL;
    *(_BYTE *)(v3 + 88) = 1;
    swift_bridgeObjectRetain();
    return v3;
  }

  swift_bridgeObjectRelease();
  if (v14 == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC890);
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = xmmword_1890684B0;
    swift_bridgeObjectRetain();
    sub_1890536E0(a1, a2, (uint64_t *)v54);
    char v23 = v55;
    uint64_t v24 = v54[1];
    *(_OWORD *)(v3 + 32) = v54[0];
    *(_OWORD *)(v3 + 48) = v24;
    *(void *)(v3 + 64) = v23;
    goto LABEL_24;
  }

          uint64_t v6 = 0;
          return v6 & 1;
        }

        v45 &= 0x3Fu;
        char v23 = v44.n128_u64[1];
        uint64_t v22 = v44.n128_u64[0];
        sub_18904127C(&v30, &v31);
        if ((v32 & 0xC0) != 0x80) {
          goto LABEL_46;
        }
        v32 &= 0x3Fu;
      }

      else
      {
        v45 &= 0x3Fu;
        char v23 = v44.n128_u64[1];
        uint64_t v22 = v44.n128_u64[0];
        sub_18904127C(&v30, &v31);
        if (v32 >= 0x40u) {
          goto LABEL_46;
        }
      }

      if (__PAIR128__(v23, v22) == *(_OWORD *)&v31) {
        goto LABEL_18;
      }
LABEL_45:
      if ((sub_189067F10() & 1) != 0) {
        goto LABEL_18;
      }
      goto LABEL_46;
    }

    v41 &= ~0x8000000000000000LL;
    uint64_t v14 = v40;
    uint64_t v15 = v42;
    sub_189041240((uint64_t)v29, (uint64_t)&v33);
    BOOL v16 = v34;
    if ((v34 & 0x8000000000000000LL) == 0)
    {
      sub_18904127C(&v33, &v44);
      goto LABEL_46;
    }

    uint64_t v17 = v7;
    v34 &= ~0x8000000000000000LL;
    uint64_t v18 = v16;
    uint64_t v19 = v7 >> 6;
    uint64_t v21 = v35;
    uint64_t v20 = v36;
    if (v19)
    {
      if (v19 == 1)
      {
        if ((v18 & 0xC0) != 0x40) {
          goto LABEL_46;
        }
        if (*(_OWORD *)&v14 == *(_OWORD *)&v33)
        {
          if (((v17 ^ v18) & 1) != 0) {
            goto LABEL_46;
          }
        }

        else
        {
          __int128 v25 = sub_189067F10();
          if (((v17 ^ v18) & 1) != 0 || (v25 & 1) == 0) {
            goto LABEL_46;
          }
        }

        goto LABEL_44;
      }

      if ((v18 & 0xC0) != 0x80) {
        goto LABEL_46;
      }
    }

    else if (v18 >= 0x40)
    {
      goto LABEL_46;
    }

    if (*(_OWORD *)&v14 != *(_OWORD *)&v33 && (sub_189067F10() & 1) == 0) {
      goto LABEL_46;
    }
LABEL_44:
    if (*(_OWORD *)&v15 == __PAIR128__(v20, v21)) {
      goto LABEL_18;
    }
    goto LABEL_45;
  }

  if ((_DWORD)v3 != 1)
  {
    sub_189041240(a2, (uint64_t)&v40);
    if ((v41 & 0x6000000000000000LL) == 0x4000000000000000LL && v41 == 0x4000000000000000LL)
    {
      unint64_t v12 = vorrq_s8(v42, v40);
      uint64_t v13 = vextq_s8(v12, v12, 8uLL);
    }

    goto LABEL_46;
  }

  v38 &= 0x9FFFFFFFFFFFFFFFLL;
  unint64_t v4 = v37[0];
  unint64_t v5 = v37[1];
  sub_189041240(a2, (uint64_t)&v40);
  if ((v41 & 0x6000000000000000LL) != 0x2000000000000000LL) {
    goto LABEL_46;
  }
  v41 &= 0x9FFFFFFFFFFFFFFFLL;
  if (__PAIR128__(v5, v4) == *(_OWORD *)&v40)
  {
LABEL_18:
    uint64_t v6 = 1;
    return v6 & 1;
  }

  uint64_t v6 = sub_189067F10();
  return v6 & 1;
}

char *sub_18904573C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  if (v3)
  {
    unint64_t v4 = (_OWORD *)(a2 + 32);
    swift_bridgeObjectRetain();
    unint64_t v5 = (char *)MEMORY[0x18961AFE8];
    do
    {
      sub_189046084(v4, v19);
      uint64_t v7 = *(void *)&v19[0];
      uint64_t v8 = swift_conformsToProtocol2();
      if (v8) {
        uint64_t v9 = v8;
      }
      else {
        uint64_t v9 = 0LL;
      }
      if (v8) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 0LL;
      }
      sub_1890460C0((uint64_t)v19);
      if (v10)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v5 = sub_1890573A8(0LL, *((void *)v5 + 2) + 1LL, 1, v5);
        }
        unint64_t v12 = *((void *)v5 + 2);
        unint64_t v11 = *((void *)v5 + 3);
        if (v12 >= v11 >> 1) {
          unint64_t v5 = sub_1890573A8((char *)(v11 > 1), v12 + 1, 1, v5);
        }
        *((void *)v5 + 2) = v12 + 1;
        uint64_t v6 = &v5[16 * v12];
        *((void *)v6 + 4) = v10;
        *((void *)v6 + 5) = v9;
      }

      unint64_t v4 = (_OWORD *)((char *)v4 + 56);
      --v3;
    }

    while (v3);
    swift_bridgeObjectRelease();
  }

  else
  {
    unint64_t v5 = (char *)MEMORY[0x18961AFE8];
  }

  uint64_t v13 = *((void *)v5 + 2);
  if (!v13 || *(void *)(a1 + 16) != *(void *)&v5[16 * v13 + 16])
  {
    __int128 v18 = *(_OWORD *)(a1 + 16);
    swift_bridgeObjectRetain();
    uint64_t v14 = v5;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v14 = sub_1890573A8(0LL, v13 + 1, 1, v5);
    }
    unint64_t v16 = *((void *)v14 + 2);
    unint64_t v15 = *((void *)v14 + 3);
    if (v16 >= v15 >> 1) {
      uint64_t v14 = sub_1890573A8((char *)(v15 > 1), v16 + 1, 1, v14);
    }
    *((void *)v14 + 2) = v16 + 1;
    *(_OWORD *)&v14[16 * v16 + 32] = v18;
    swift_bridgeObjectRelease();
    return v14;
  }

  return v5;
}

uint64_t sub_18904590C()
{
  return swift_deallocObject();
}

uint64_t sub_189045948(uint64_t result, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = result;
  if ((a4 & 1) != 0 && *(void *)(a3 + 16) != 1LL) {
    return result;
  }
  uint64_t v8 = sub_18904573C(a5, a6);
  uint64_t v55 = sub_18900EF44(0, (uint64_t)v8);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v52 = v7;
  uint64_t v9 = *(void *)(v7 + 16);
  if (v9 < a2)
  {
LABEL_97:
    __break(1u);
    goto LABEL_98;
  }

  if (a2 < 0)
  {
LABEL_98:
    __break(1u);
LABEL_99:
    __break(1u);
    return result;
  }

  uint64_t v66 = v7 + 32;
  uint64_t v57 = v9;
  uint64_t v58 = a2;
  if (v9 != a2)
  {
    uint64_t v18 = a2;
    while (v18 < v9)
    {
      uint64_t v19 = (uint64_t *)(v66 + (v18 << 6));
      uint64_t v20 = v19[2];
      if ((v20 & 0x6000000000000000LL) == 0)
      {
        uint64_t v21 = *(void *)(v55 + 16);
        if (v21)
        {
          uint64_t v22 = *v19;
          uint64_t v23 = v19[1];
          int v24 = v20 & 0xC0;
          __int128 v25 = (unsigned __int8 *)(v55 + 48);
          do
          {
            uint64_t result = *((void *)v25 - 2);
            uint64_t v26 = *((void *)v25 - 1);
            unsigned int v27 = *v25;
            if (v27 >> 6)
            {
              if (v27 >> 6 == 1)
              {
                if (v24 == 64)
                {
                  if (result == v22 && v26 == v23)
                  {
                  }

                  else
                  {
                    uint64_t result = sub_189067F10();
                  }
                }

                goto LABEL_22;
              }

              if (v24 != 128) {
                goto LABEL_22;
              }
            }

            else if (v20 >= 0x40u)
            {
              goto LABEL_22;
            }

            BOOL v29 = result == v22 && v26 == v23;
            if (v29 || (uint64_t result = sub_189067F10(), (result & 1) != 0))
            {
LABEL_41:
              swift_bridgeObjectRelease();
              sub_18904617C();
              swift_allocError();
              *uint64_t v30 = 0;
              return swift_willThrow();
            }

LABEL_22:
            v25 += 24;
            --v21;
          }

          while (v21);
        }
      }

      ++v18;
      uint64_t v9 = v57;
      a2 = v58;
      if (v18 == v57) {
        goto LABEL_6;
      }
    }

    __break(1u);
LABEL_95:
    __break(1u);
LABEL_96:
    __break(1u);
    goto LABEL_97;
  }

    uint64_t v6 = (v11 - 1) & v11;
    uint64_t v9 = __clz(__rbit64(v11)) + (v2 << 6);
LABEL_5:
    uint64_t result = sub_18904FDA4( (uint64_t)v13,  *(void *)(*(void *)(v1 + 48) + 24 * v9),  *(void *)(*(void *)(v1 + 48) + 24 * v9 + 8),  *(unsigned __int8 *)(*(void *)(v1 + 48) + 24 * v9 + 16) | (*(unsigned __int8 *)(*(void *)(v1 + 48)
                                                                                               + 24 * v9
                                                                                               + 17) << 8));
  }

  unint64_t v12 = v10 + 4;
  if (v12 >= v7) {
    return swift_release();
  }
  uint64_t v11 = *(void *)(v3 + 8 * v12);
  if (v11)
  {
    unint64_t v2 = v12;
    goto LABEL_22;
  }

  while (1)
  {
    unint64_t v2 = v12 + 1;
    if (__OFADD__(v12, 1LL)) {
      break;
    }
    if (v2 >= v7) {
      return swift_release();
    }
    uint64_t v11 = *(void *)(v3 + 8 * v2);
    ++v12;
    if (v11) {
      goto LABEL_22;
    }
  }

  __break(1u);
  return result;
}

LABEL_43:
    ++v31;
    uint64_t v9 = v57;
    a2 = v58;
    if (v31 == v57)
    {
      uint64_t result = swift_bridgeObjectRelease();
      __int128 v48 = (void *)(v52 + (v58 << 6) + 48);
      uint64_t v49 = v58;
      while (v49 < v57)
      {
        if ((*v48 & 0x60000000000000C0LL) == 0)
        {
          if (*(v48 - 2) == 0xD000000000000016LL && *(v48 - 1) == 0x800000018906D9F0LL
            || (uint64_t result = sub_189067F10(), (result & 1) != 0))
          {
            __int128 v50 = sub_18904573C(a5, a6);
            sub_189000524();
            swift_allocError();
            *(void *)uint64_t v47 = v50;
            *(void *)(v47 + 8) = 1LL;
            *(_OWORD *)(v47 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 0u;
            *(_OWORD *)(v47 + 32) = 0u;
            *(_OWORD *)(v47 + 48) = 0u;
            *(_OWORD *)(v47 + 64) = 0u;
            *(void *)(v47 + 80) = 0LL;
LABEL_93:
            *(_BYTE *)(v47 + 88) = 15;
            return swift_willThrow();
          }
        }

        ++v49;
        v48 += 8;
        if (v57 == v49) {
          goto LABEL_8;
        }
      }

      goto LABEL_96;
    }
  }

  uint64_t v35 = *v32;
  uint64_t v36 = v32[1];
  int v37 = v33 & 0xC0;
  uint64_t v38 = v51;
  while (1)
  {
    uint64_t result = *((void *)v38 - 2);
    uint64_t v39 = *((void *)v38 - 1);
    unsigned int v40 = *v38;
    if (v40 >> 6) {
      break;
    }
LABEL_49:
    v38 += 24;
    if (!--v34) {
      goto LABEL_43;
    }
  }

  if (v40 >> 6 == 1)
  {
    if (v37 == 64)
    {
      if (result == v35 && v39 == v36)
      {
      }

      else
      {
        uint64_t result = sub_189067F10();
      }
    }

    goto LABEL_49;
  }

  if (v37 != 128) {
    goto LABEL_49;
  }
LABEL_63:
  if (result != v35 || v39 != v36)
  {
    uint64_t result = sub_189067F10();
    if ((result & 1) == 0) {
      goto LABEL_49;
    }
  }

LABEL_68:
  swift_bridgeObjectRelease();
  sub_18904617C();
  swift_allocError();
  *__int128 v43 = 1;
  return swift_willThrow();
}

uint64_t sub_189045F2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = MEMORY[0x18961AFE8];
  uint64_t v20 = MEMORY[0x18961AFE8];
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v5 = 0LL;
    uint64_t v6 = a1 + 32;
    do
    {
      sub_189046084((_OWORD *)(v6 + 56 * v5), v18);
      uint64_t v7 = *(void *)(a2 + 16);
      uint64_t v8 = *(void *)(v7 + 16);
      if (v8)
      {
        uint64_t v9 = (void *)(v7 + 32);
        while (*v9 != *(void *)&v18[0])
        {
          v9 += 7;
          if (!--v8) {
            goto LABEL_9;
          }
        }

        sub_1890460C0((uint64_t)v18);
      }

      else
      {
LABEL_9:
        __int128 v14 = v18[0];
        __int128 v15 = v18[1];
        __int128 v16 = v18[2];
        uint64_t v17 = v19;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_188FFF314(0LL, *(void *)(v2 + 16) + 1LL, 1);
        }
        uint64_t v2 = v20;
        unint64_t v11 = *(void *)(v20 + 16);
        unint64_t v10 = *(void *)(v20 + 24);
        if (v11 >= v10 >> 1)
        {
          sub_188FFF314((char *)(v10 > 1), v11 + 1, 1);
          uint64_t v2 = v20;
        }

        *(void *)(v2 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v11 + 1;
        uint64_t v12 = v2 + 56 * v11;
        *(_OWORD *)(v12 + 32) = v14;
        *(_OWORD *)(v12 + 48) = v15;
        *(_OWORD *)(v12 + 64) = v16;
        *(void *)(v12 + 80) = v17;
      }

      ++v5;
    }

    while (v5 != v3);
  }

  return v2;
}

_OWORD *sub_189046084(_OWORD *a1, _OWORD *a2)
{
  return a2;
}

uint64_t sub_1890460C0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1890460F4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC498);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_189046134(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC498);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

unint64_t sub_18904617C()
{
  unint64_t result = qword_18C761488;
  if (!qword_18C761488)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&unk_18906A414, &type metadata for HelpRequested);
    atomic_store(result, (unint64_t *)&qword_18C761488);
  }

  return result;
}

uint64_t sub_1890461C0(uint64_t a1)
{
  return a1;
}

uint64_t sub_189046210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x7FFFFFFFFFFFFF3ELL) != 0x7FFFFFF3ELL) {
    return sub_1890411F4(a4, a5, a6);
  }
  return result;
}

unint64_t sub_189046244()
{
  unint64_t result = qword_18C4FC3A8;
  if (!qword_18C4FC3A8)
  {
    uint64_t v1 = type metadata accessor for ArgumentDecoder();
    unint64_t result = MEMORY[0x1895DD3F4](&unk_18906B50C, v1);
    atomic_store(result, (unint64_t *)&qword_18C4FC3A8);
  }

  return result;
}

uint64_t __swift_deallocate_boxed_opaque_existential_1(uint64_t result)
{
  if ((*(_DWORD *)(*(void *)(*(void *)(result + 24) - 8LL) + 80LL) & 0x20000) != 0) {
    JUMPOUT(0x1895DD49CLL);
  }
  return result;
}

unint64_t sub_1890462C0()
{
  unint64_t result = qword_18C4FC4D8;
  if (!qword_18C4FC4D8)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&unk_18906A3F8, &type metadata for GenerateCompletions);
    atomic_store(result, (unint64_t *)&qword_18C4FC4D8);
  }

  return result;
}

unint64_t sub_189046304()
{
  unint64_t result = qword_18C4FC588;
  if (!qword_18C4FC588)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&unk_18906A3DC, &type metadata for AutodetectedGenerateCompletions);
    atomic_store(result, (unint64_t *)&qword_18C4FC588);
  }

  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for AutodetectedGenerateCompletions( uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1890463C8(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_189000668);
}

uint64_t destroy for AutodetectedGenerateCompletions(uint64_t a1)
{
  return sub_188FFADBC(*(void *)a1, *(void *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t *assignWithCopy for AutodetectedGenerateCompletions(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_189046424( a1,  a2,  a3,  (void (*)(void, uint64_t, uint64_t))sub_189000668,  (void (*)(uint64_t, uint64_t, uint64_t))sub_188FFADBC);
}

uint64_t *assignWithTake for AutodetectedGenerateCompletions(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_189046490(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_188FFADBC);
}

ValueMetadata *type metadata accessor for AutodetectedGenerateCompletions()
{
  return &type metadata for AutodetectedGenerateCompletions;
}

uint64_t initializeBufferWithCopyOfBuffer for GenerateCompletions(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1890463C8(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_189000658);
}

uint64_t destroy for GenerateCompletions(uint64_t a1)
{
  return sub_1890463B8(*(void *)a1, *(void *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_1890463B8(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1890463C8(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t))
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = *((unsigned __int8 *)a2 + 16);
  a4(*a2, v6, v7);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v7;
  return a1;
}

uint64_t *assignWithCopy for GenerateCompletions(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_189046424( a1,  a2,  a3,  (void (*)(void, uint64_t, uint64_t))sub_189000658,  (void (*)(uint64_t, uint64_t, uint64_t))sub_1890463B8);
}

uint64_t *sub_189046424( uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  uint64_t v9 = *((unsigned __int8 *)a2 + 16);
  a4(*a2, v8, v9);
  uint64_t v10 = *a1;
  uint64_t v11 = a1[1];
  uint64_t v12 = *((unsigned __int8 *)a1 + 16);
  *a1 = v7;
  a1[1] = v8;
  *((_BYTE *)a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v9;
  a5(v10, v11, v12);
  return a1;
}

uint64_t *assignWithTake for GenerateCompletions(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_189046490(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1890463B8);
}

uint64_t *sub_189046490( uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  char v5 = *(_BYTE *)(a2 + 16);
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  uint64_t v8 = *((unsigned __int8 *)a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_BYTE *)a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v5;
  a4(v6, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArgumentDefinition.Update(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ArgumentDefinition.Update( uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 0;
    *(void *)unint64_t result = a2 - 255;
    *(void *)(result + 8) = 0LL;
    if (a3 >= 0xFF) {
      *(_BYTE *)(result + 17) = 1;
    }
  }

  else
  {
    if (a3 >= 0xFF) {
      *(_BYTE *)(result + 17) = 0;
    }
    if (a2) {
      *(_BYTE *)(result + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = -(char)a2;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for GenerateCompletions()
{
  return &type metadata for GenerateCompletions;
}

uint64_t storeEnumTagSinglePayload for HelpRequested(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFD) {
    return ((uint64_t (*)(void))((char *)&loc_1890465BC + 4 * byte_18906A289[v4]))();
  }
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1890465F0 + 4 * byte_18906A284[v4]))();
}

uint64_t sub_1890465F0(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1890465F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x189046600LL);
  }
  return result;
}

uint64_t sub_18904660C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x189046614LL);
  }
  *(_BYTE *)unint64_t result = a2 + 2;
  return result;
}

uint64_t sub_189046618(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_189046620(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HelpRequested()
{
  return &type metadata for HelpRequested;
}

unint64_t sub_18904663C(uint64_t a1)
{
  unint64_t result = sub_189046660();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_189046660()
{
  unint64_t result = qword_18C4FC4D0;
  if (!qword_18C4FC4D0)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&unk_18906A354, &type metadata for GenerateCompletions);
    atomic_store(result, (unint64_t *)&qword_18C4FC4D0);
  }

  return result;
}

unint64_t sub_1890466A4(uint64_t a1)
{
  unint64_t result = sub_1890466C8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1890466C8()
{
  unint64_t result = qword_18C4FC580;
  if (!qword_18C4FC580)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&unk_18906A398, &type metadata for AutodetectedGenerateCompletions);
    atomic_store(result, (unint64_t *)&qword_18C4FC580);
  }

  return result;
}

unint64_t sub_18904670C(uint64_t a1)
{
  unint64_t result = sub_189046730();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_189046730()
{
  unint64_t result = qword_18C4FC590[0];
  if (!qword_18C4FC590[0])
  {
    unint64_t result = MEMORY[0x1895DD3F4](&unk_18906A3C0, &type metadata for AutodetectedGenerateCompletions);
    atomic_store(result, qword_18C4FC590);
  }

  return result;
}

unint64_t sub_189046774(uint64_t a1)
{
  unint64_t result = sub_189046798();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_189046798()
{
  unint64_t result = qword_18C4FC4E0[0];
  if (!qword_18C4FC4E0[0])
  {
    unint64_t result = MEMORY[0x1895DD3F4](&unk_18906A37C, &type metadata for GenerateCompletions);
    atomic_store(result, qword_18C4FC4E0);
  }

  return result;
}

uint64_t sub_1890467DC()
{
  if (*(void *)(v0 + 40))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_deallocObject();
}

unint64_t sub_18904681C()
{
  unint64_t result = qword_18C4FC568;
  if (!qword_18C4FC568)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&unk_18906A620, &type metadata for AutodetectedGenerateCompletions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_18C4FC568);
  }

  return result;
}

uint64_t sub_189046860()
{
  if (*(void *)(v0 + 32))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  int v1 = *(unsigned __int8 *)(v0 + 96);
  if (v1 != 255) {
    sub_189009AF4(*(void *)(v0 + 80), *(void *)(v0 + 88), v1);
  }
  return swift_deallocObject();
}

uint64_t sub_1890468B4(uint64_t a1, unint64_t a2, uint64_t a3)
{
  return sub_1890429F0( a1,  a2,  a3,  *(void *)(v3 + 16),  (uint64_t *)(v3 + 24),  *(_BYTE *)(v3 + 73),  *(void *)(v3 + 80),  *(void *)(v3 + 88),  *(_BYTE *)(v3 + 96));
}

uint64_t sub_1890468E8()
{
  return swift_deallocObject();
}

void *sub_18904691C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_18901380C( a1,  a2,  a3,  a4,  a5,  a6,  a7,  *(void *(**)(void *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 16),  *(void *)(v7 + 24),  *(void *)(v7 + 32),  *(void *)(v7 + 40),  *(void *)(v7 + 48));
}

uint64_t sub_18904694C()
{
  if (*(void *)(v0 + 16) >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_189046990(uint64_t a1, uint64_t a2)
{
  return sub_189013B64(a1, a2, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7]);
}

unint64_t sub_1890469B0()
{
  unint64_t result = qword_18C4FC4B8;
  if (!qword_18C4FC4B8)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&unk_18906A5D0, &type metadata for GenerateCompletions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_18C4FC4B8);
  }

  return result;
}

ValueMetadata *type metadata accessor for GenerateCompletions.CodingKeys()
{
  return &type metadata for GenerateCompletions.CodingKeys;
}

uint64_t _s22ArgumentParserInternal19GenerateCompletionsV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  else {
    int v3 = 2;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2) {
    return ((uint64_t (*)(void))((char *)sub_189046A4C + 4 * byte_18906A28E[v4]))();
  }
  else {
    return ((uint64_t (*)(void))((char *)sub_189046A6C + 4 * byte_18906A293[v4]))();
  }
}

_BYTE *sub_189046A4C(_BYTE *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

_BYTE *sub_189046A6C(_BYTE *result)
{
  *unint64_t result = 0;
  return result;
}

_DWORD *sub_189046A74(_DWORD *result, int a2)
{
  *unint64_t result = a2;
  return result;
}

_WORD *sub_189046A7C(_WORD *result, __int16 a2)
{
  *unint64_t result = a2;
  return result;
}

_WORD *sub_189046A84(_WORD *result)
{
  *unint64_t result = 0;
  return result;
}

_DWORD *sub_189046A8C(_DWORD *result)
{
  *unint64_t result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AutodetectedGenerateCompletions.CodingKeys()
{
  return &type metadata for AutodetectedGenerateCompletions.CodingKeys;
}

unint64_t sub_189046AAC()
{
  unint64_t result = qword_18C761490;
  if (!qword_18C761490)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&unk_18906A4F0, &type metadata for AutodetectedGenerateCompletions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_18C761490);
  }

  return result;
}

unint64_t sub_189046AF4()
{
  unint64_t result = qword_18C761498;
  if (!qword_18C761498)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&unk_18906A5A8, &type metadata for GenerateCompletions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_18C761498);
  }

  return result;
}

unint64_t sub_189046B3C()
{
  unint64_t result = qword_18C4FC4C8;
  if (!qword_18C4FC4C8)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&unk_18906A518, &type metadata for GenerateCompletions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_18C4FC4C8);
  }

  return result;
}

unint64_t sub_189046B84()
{
  unint64_t result = qword_18C4FC4C0;
  if (!qword_18C4FC4C0)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&unk_18906A540, &type metadata for GenerateCompletions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_18C4FC4C0);
  }

  return result;
}

unint64_t sub_189046BCC()
{
  unint64_t result = qword_18C4FC578;
  if (!qword_18C4FC578)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&unk_18906A460, &type metadata for AutodetectedGenerateCompletions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_18C4FC578);
  }

  return result;
}

unint64_t sub_189046C14()
{
  unint64_t result = qword_18C4FC570;
  if (!qword_18C4FC570)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&unk_18906A488, &type metadata for AutodetectedGenerateCompletions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_18C4FC570);
  }

  return result;
}

ValueMetadata *type metadata accessor for InputOrigin()
{
  return &type metadata for InputOrigin;
}

uint64_t sub_189046C70(uint64_t a1, uint64_t a2, __int16 a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if ((sub_189039A58(a1, a2, a3 & 0x1FF, a4) & 1) != 0 || (uint64_t v10 = v4, (sub_189039A58(a1, a2, a3 & 0x1FF, v4) & 1) != 0))
  {
    swift_bridgeObjectRetain();
  }

  else
  {
    swift_bridgeObjectRetain();
    sub_18904FDA4((uint64_t)v9, a1, a2, a3 & 0x1FF);
    return v10;
  }

  return v4;
}

BOOL sub_189046D18(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(a1 + 17) & 1) != 0) {
    return 0LL;
  }
  if ((*(_BYTE *)(a2 + 17) & 1) != 0) {
    return 1LL;
  }
  if (*(void *)a1 < *(void *)a2) {
    return 1LL;
  }
  if (*(void *)a1 != *(void *)a2) {
    return 0LL;
  }
  if ((*(_BYTE *)(a1 + 16) & 1) == 0) {
    return (*(_BYTE *)(a2 + 16) & 1) == 0 && *(void *)(a1 + 8) < *(void *)(a2 + 8);
  }
  return (*(_BYTE *)(a2 + 16) & 1) == 0;
}

uint64_t sub_189046D88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_189046DE4( a1,  a2,  a3,  a4,  (uint64_t (*)(void, void, void, void, void, void))sub_189046D94);
}

BOOL sub_189046D94(uint64_t a1, uint64_t a2, __int16 a3, uint64_t a4, uint64_t a5, __int16 a6)
{
  if ((a6 & 0x100) == 0)
  {
    if ((a3 & 0x100) != 0 || a4 < a1) {
      return 0LL;
    }
    if (a4 == a1)
    {
      if ((a6 & 1) == 0) {
        return (a3 & 1) != 0 || a5 >= a2;
      }
      if ((a3 & 1) == 0) {
        return 0LL;
      }
    }
  }

  return 1LL;
}

uint64_t sub_189046DD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_189046DE4( a1,  a2,  a3,  a4,  (uint64_t (*)(void, void, void, void, void, void))sub_189046E1C);
}

uint64_t sub_189046DE4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, void, void, void, void, void))
{
  return a5( *(void *)a1,  *(void *)(a1 + 8),  *(unsigned __int8 *)(a1 + 16) | (*(unsigned __int8 *)(a1 + 17) << 8),  *(void *)a2,  *(void *)(a2 + 8),  *(unsigned __int8 *)(a2 + 16) | (*(unsigned __int8 *)(a2 + 17) << 8));
}

BOOL sub_189046E1C(uint64_t a1, uint64_t a2, __int16 a3, uint64_t a4, uint64_t a5, __int16 a6)
{
  if ((a3 & 0x100) == 0)
  {
    if ((a6 & 0x100) != 0 || a1 < a4) {
      return 0LL;
    }
    if (a1 == a4)
    {
      if ((a3 & 1) == 0) {
        return (a6 & 1) != 0 || a2 >= a5;
      }
      if ((a6 & 1) == 0) {
        return 0LL;
      }
    }
  }

  return 1LL;
}

BOOL sub_189046E60(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(a2 + 17) & 1) != 0) {
    return 0LL;
  }
  if ((*(_BYTE *)(a1 + 17) & 1) != 0) {
    return 1LL;
  }
  if (*(void *)a2 < *(void *)a1) {
    return 1LL;
  }
  if (*(void *)a2 != *(void *)a1) {
    return 0LL;
  }
  if ((*(_BYTE *)(a2 + 16) & 1) == 0) {
    return (*(_BYTE *)(a1 + 16) & 1) == 0 && *(void *)(a2 + 8) < *(void *)(a1 + 8);
  }
  return (*(_BYTE *)(a1 + 16) & 1) == 0;
}

uint64_t sub_189046ED0()
{
  char v1 = *(_BYTE *)(v0 + 16);
  char v2 = *(_BYTE *)(v0 + 17);
  sub_189068030();
  if ((v2 & 1) == 0)
  {
    sub_18906803C();
    sub_18906803C();
    if ((v1 & 1) == 0) {
      sub_18906803C();
    }
  }

  sub_18906803C();
  return sub_189068060();
}

uint64_t sub_189046F5C()
{
  if ((*(_BYTE *)(v0 + 17) & 1) == 0)
  {
    char v1 = *(_BYTE *)(v0 + 16);
    sub_18906803C();
    sub_18906803C();
    if ((v1 & 1) == 0) {
      sub_18906803C();
    }
  }

  return sub_18906803C();
}

uint64_t sub_189046FC0()
{
  char v1 = *(_BYTE *)(v0 + 16);
  char v2 = *(_BYTE *)(v0 + 17);
  sub_189068030();
  if ((v2 & 1) == 0)
  {
    sub_18906803C();
    sub_18906803C();
    if ((v1 & 1) == 0) {
      sub_18906803C();
    }
  }

  sub_18906803C();
  return sub_189068060();
}

uint64_t sub_189047044(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(unsigned __int8 *)(a2 + 17);
  if ((*(_BYTE *)(a1 + 17) & 1) == 0)
  {
    if ((v2 & 1) == 0 && *(void *)a1 == *(void *)a2)
    {
      if ((*(_BYTE *)(a1 + 16) & 1) != 0)
      {
        if ((*(_BYTE *)(a2 + 16) & 1) != 0) {
          return 1LL;
        }
      }

      else if ((*(_BYTE *)(a2 + 16) & 1) == 0 && *(void *)(a1 + 8) == *(void *)(a2 + 8))
      {
        return 1LL;
      }
    }

    return 0LL;
  }

  return v2;
}

uint64_t sub_18904709C(uint64_t *a1, uint64_t *a2)
{
  return sub_1890470E4(*a1, *a2);
}

uint64_t sub_1890470A8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_1890473A0(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t sub_1890470E4(uint64_t result, uint64_t a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
      return 0LL;
    }
    int64_t v4 = 0LL;
    uint64_t v25 = result + 56;
    uint64_t v5 = 1LL << *(_BYTE *)(result + 32);
    if (v5 < 64) {
      uint64_t v6 = ~(-1LL << v5);
    }
    else {
      uint64_t v6 = -1LL;
    }
    unint64_t v7 = v6 & *(void *)(result + 56);
    int64_t v26 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = a2 + 56;
LABEL_7:
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      int64_t v27 = v4;
      unint64_t v10 = v9 | (v4 << 6);
LABEL_25:
      uint64_t v15 = *(void *)(v3 + 48) + 24 * v10;
      uint64_t v16 = *(void *)v15;
      uint64_t v17 = *(void *)(v15 + 8);
      char v18 = *(_BYTE *)(v15 + 16);
      char v19 = *(_BYTE *)(v15 + 17);
      sub_189068030();
      if ((v19 & 1) == 0)
      {
        sub_18906803C();
        sub_18906803C();
        if ((v18 & 1) == 0) {
          sub_18906803C();
        }
      }

      sub_18906803C();
      uint64_t result = sub_189068060();
      uint64_t v20 = -1LL << *(_BYTE *)(a2 + 32);
      unint64_t v21 = result & ~v20;
      if (((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v21) & 1) != 0)
      {
        uint64_t v22 = ~v20;
        while (1)
        {
          uint64_t v23 = *(void *)(a2 + 48) + 24 * v21;
          if ((*(_BYTE *)(v23 + 17) & 1) != 0)
          {
            if ((v19 & 1) != 0)
            {
              int64_t v4 = v27;
              goto LABEL_7;
            }
          }

          else
          {
            if (*(void *)v23 == v16) {
              char v24 = v19;
            }
            else {
              char v24 = 1;
            }
            if ((v24 & 1) == 0)
            {
              if ((*(_BYTE *)(v23 + 16) & 1) != 0)
              {
                if ((v18 & 1) != 0)
                {
                  int64_t v4 = v27;
                  goto LABEL_7;
                }
              }

              else if ((v18 & 1) == 0 && *(void *)(v23 + 8) == v17)
              {
                int64_t v4 = v27;
                goto LABEL_7;
              }
            }
          }

          unint64_t v21 = (v21 + 1) & v22;
          if (((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v21) & 1) == 0) {
            return 0LL;
          }
        }
      }

      return 0LL;
    }

    int64_t v11 = v4 + 1;
    if (__OFADD__(v4, 1LL))
    {
      __break(1u);
LABEL_48:
      __break(1u);
      return result;
    }

    if (v11 < v26)
    {
      unint64_t v12 = *(void *)(v25 + 8 * v11);
      int64_t v13 = v4 + 1;
      if (v12) {
        goto LABEL_24;
      }
      int64_t v13 = v4 + 2;
      if (v4 + 2 >= v26) {
        return 1LL;
      }
      unint64_t v12 = *(void *)(v25 + 8 * v13);
      if (v12) {
        goto LABEL_24;
      }
      int64_t v13 = v4 + 3;
      if (v4 + 3 >= v26) {
        return 1LL;
      }
      unint64_t v12 = *(void *)(v25 + 8 * v13);
      if (v12) {
        goto LABEL_24;
      }
      int64_t v13 = v4 + 4;
      if (v4 + 4 >= v26) {
        return 1LL;
      }
      unint64_t v12 = *(void *)(v25 + 8 * v13);
      if (v12)
      {
LABEL_24:
        unint64_t v7 = (v12 - 1) & v12;
        int64_t v27 = v13;
        unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
        goto LABEL_25;
      }

      uint64_t v14 = v4 + 5;
      if (v4 + 5 < v26)
      {
        unint64_t v12 = *(void *)(v25 + 8 * v14);
        if (v12)
        {
          int64_t v13 = v4 + 5;
          goto LABEL_24;
        }

        while (1)
        {
          int64_t v13 = v14 + 1;
          if (__OFADD__(v14, 1LL)) {
            goto LABEL_48;
          }
          if (v13 >= v26) {
            return 1LL;
          }
          unint64_t v12 = *(void *)(v25 + 8 * v13);
          ++v14;
          if (v12) {
            goto LABEL_24;
          }
        }
      }
    }
  }

  return 1LL;
}

uint64_t sub_1890473A0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_189041310();
  uint64_t result = sub_189067A54();
  uint64_t v10 = result;
  if (v2)
  {
    int64_t v4 = (unsigned __int8 *)(a1 + 49);
    do
    {
      uint64_t v5 = *(void *)(v4 - 17);
      uint64_t v6 = *(void *)(v4 - 9);
      int v7 = *(v4 - 1);
      int v8 = *v4;
      v4 += 24;
      sub_18904FDA4((uint64_t)v9, v5, v6, v7 | (v8 << 8));
      --v2;
    }

    while (v2);
    return v10;
  }

  return result;
}

__n128 __swift_memcpy18_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for InputOrigin.Element(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 18)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0LL;
  }
}

uint64_t storeEnumTagSinglePayload for InputOrigin.Element(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = 0LL;
    *(void *)(result + 8) = 0LL;
    *(_WORD *)(result + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 0;
    *(_DWORD *)__n128 result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }

  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }

  *(_BYTE *)(result + 18) = v3;
  return result;
}

uint64_t sub_189047484(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0LL;
  }
}

uint64_t sub_1890474A0(uint64_t result, int a2)
{
  if (a2)
  {
    *(_BYTE *)(result + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0LL;
    *(_BYTE *)(result + 17) = 1;
  }

  else
  {
    *(_BYTE *)(result + 17) = 0;
  }

  return result;
}

ValueMetadata *type metadata accessor for InputOrigin.Element()
{
  return &type metadata for InputOrigin.Element;
}

unint64_t sub_1890474D8()
{
  unint64_t result = qword_18C4FC950;
  if (!qword_18C4FC950)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&unk_18906A6F4, &type metadata for InputOrigin.Element);
    atomic_store(result, (unint64_t *)&qword_18C4FC950);
  }

  return result;
}

uint64_t sub_18904751C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_189047524(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t sub_18904752C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0LL;
  }

  return result;
}

uint64_t *sub_1890475A0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8LL);
  if (*(void *)(v4 + 64) <= 0x10uLL) {
    uint64_t v5 = 16LL;
  }
  else {
    uint64_t v5 = *(void *)(v4 + 64);
  }
  int v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    uint64_t v8 = *a2;
    *char v3 = *a2;
    char v3 = (uint64_t *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
  }

  else
  {
    unsigned int v9 = *((unsigned __int8 *)a2 + v5);
    if (v9 >= 2)
    {
      else {
        uint64_t v10 = 4LL;
      }
      __asm { BR              X13 }
    }

    if (v9 != 1)
    {
      (*(void (**)(uint64_t *))(v4 + 16))(a1);
      *((_BYTE *)v3 + v5) = 0;
      return v3;
    }

    uint64_t v11 = a2[1];
    *char v3 = *a2;
    v3[1] = v11;
    *((_BYTE *)v3 + v5) = 1;
  }

  swift_retain();
  return v3;
}

uint64_t sub_1890476B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8LL);
  unint64_t v3 = *(void *)(v2 + 64);
  if (v3 <= 0x10) {
    unint64_t v3 = 16LL;
  }
  unsigned int v4 = *(unsigned __int8 *)(a1 + v3);
  if (v4 < 2)
  {
    if (v4 == 1) {
      return swift_release();
    }
    else {
      return (*(uint64_t (**)(void))(v2 + 8))();
    }
  }

  else
  {
    else {
      uint64_t v5 = 4LL;
    }
    return ((uint64_t (*)(void))((char *)&loc_1890476FC + 4 * byte_18906A7B5[v5]))();
  }

void *sub_189047754(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8LL);
  if (*(void *)(v4 + 64) <= 0x10uLL) {
    uint64_t v5 = 16LL;
  }
  else {
    uint64_t v5 = *(void *)(v4 + 64);
  }
  unsigned int v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 2)
  {
    else {
      uint64_t v7 = 4LL;
    }
    __asm { BR              X13 }
  }

  if (v6 == 1)
  {
    uint64_t v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    swift_retain();
    char v9 = 1;
  }

  else
  {
    (*(void (**)(void *))(v4 + 16))(a1);
    char v9 = 0;
  }

  *((_BYTE *)a1 + v5) = v9;
  return a1;
}

void *sub_18904782C(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 0x10uLL) {
      uint64_t v7 = 16LL;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = *((unsigned __int8 *)a1 + v7);
    if (v8 >= 2)
    {
      else {
        uint64_t v9 = 4LL;
      }
      __asm { BR              X12 }
    }

    if (v8 == 1) {
      swift_release();
    }
    else {
      (*(void (**)(void *, void))(v6 + 8))(a1, *(void *)(a3 + 16));
    }
    unsigned int v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 2)
    {
      else {
        uint64_t v11 = 4LL;
      }
      __asm { BR              X12 }
    }

    if (v10 == 1)
    {
      uint64_t v12 = a2[1];
      *a1 = *a2;
      a1[1] = v12;
      *((_BYTE *)a1 + v7) = 1;
      swift_retain();
    }

    else
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
      *((_BYTE *)a1 + v7) = 0;
    }
  }

  return a1;
}

_OWORD *sub_1890479BC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8LL);
  if (*(void *)(v4 + 64) <= 0x10uLL) {
    uint64_t v5 = 16LL;
  }
  else {
    uint64_t v5 = *(void *)(v4 + 64);
  }
  unsigned int v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 2)
  {
    else {
      uint64_t v7 = 4LL;
    }
    __asm { BR              X13 }
  }

  if (v6 == 1)
  {
    *a1 = *a2;
    char v8 = 1;
  }

  else
  {
    (*(void (**)(_OWORD *))(v4 + 32))(a1);
    char v8 = 0;
  }

  *((_BYTE *)a1 + v5) = v8;
  return a1;
}

_OWORD *sub_189047A90(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 0x10uLL) {
      uint64_t v7 = 16LL;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = *((unsigned __int8 *)a1 + v7);
    if (v8 >= 2)
    {
      else {
        uint64_t v9 = 4LL;
      }
      __asm { BR              X12 }
    }

    if (v8 == 1) {
      swift_release();
    }
    else {
      (*(void (**)(_OWORD *, void))(v6 + 8))(a1, *(void *)(a3 + 16));
    }
    unsigned int v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 2)
    {
      else {
        uint64_t v11 = 4LL;
      }
      __asm { BR              X12 }
    }

    if (v10 == 1)
    {
      *a1 = *a2;
      char v12 = 1;
    }

    else
    {
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v6 + 32))(a1, a2, v5);
      char v12 = 0;
    }

    *((_BYTE *)a1 + v7) = v12;
  }

  return a1;
}

uint64_t sub_189047C1C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = 16LL;
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8LL) + 64LL) > 0x10uLL) {
    uint64_t v3 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8LL) + 64LL);
  }
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0xFF) {
    goto LABEL_21;
  }
  uint64_t v4 = v3 + 1;
  char v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    unsigned int v8 = ((a2 + ~(-1 << v5) - 254) >> v5) + 1;
    if (HIWORD(v8))
    {
      int v6 = *(_DWORD *)(a1 + v4);
      if (!v6) {
        goto LABEL_21;
      }
      goto LABEL_14;
    }

    if (v8 > 0xFF)
    {
      int v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4)) {
        goto LABEL_21;
      }
      goto LABEL_14;
    }

    if (v8 < 2)
    {
LABEL_21:
      unsigned int v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 2) {
        return (v10 ^ 0xFF) + 1;
      }
      else {
        return 0LL;
      }
    }
  }

  int v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4)) {
    goto LABEL_21;
  }
LABEL_14:
  int v9 = (v6 - 1) << v5;
  if (!(_DWORD)v4) {
    return (v9 + 255);
  }
  return ((uint64_t (*)(void))((char *)&loc_189047CE0 + 4 * byte_18906A7D8[(v4 - 1)]))();
}

void sub_189047D2C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8LL) + 64LL);
  if (v5 <= 0x10) {
    unint64_t v5 = 16LL;
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFF)
  {
    unsigned int v7 = 0u;
  }

  else if (v6 <= 3)
  {
    unsigned int v9 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v9))
    {
      unsigned int v7 = 4u;
    }

    else if (v9 >= 0x100)
    {
      unsigned int v7 = 2;
    }

    else
    {
      unsigned int v7 = v9 > 1;
    }
  }

  else
  {
    unsigned int v7 = 1u;
  }

  if (a2 <= 0xFE) {
    __asm { BR              X11 }
  }

  unsigned int v8 = a2 - 255;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      int v10 = v8 & ~(-1 << (8 * v6));
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v10;
        *((_BYTE *)a1 + 2) = BYTE2(v10);
      }

      else if ((_DWORD)v6 == 2)
      {
        *a1 = v10;
      }

      else
      {
        *(_BYTE *)a1 = v10;
      }
    }
  }

  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v8;
  }

  __asm { BR              X10 }

uint64_t sub_189047ED4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = 16LL;
  if (*(void *)(*(void *)(*(void *)(a2 + 16) - 8LL) + 64LL) > 0x10uLL) {
    uint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8LL) + 64LL);
  }
  else {
    uint64_t v3 = 4LL;
  }
  return ((uint64_t (*)(void))((char *)&loc_189047F1C + 4 * byte_18906A7E6[v3]))();
}

void sub_189047F64(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8LL) + 64LL) <= 0x10uLL) {
    size_t v4 = 16LL;
  }
  else {
    size_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8LL) + 64LL);
  }
  if (a2 > 1)
  {
    unsigned int v5 = a2 - 2;
    if (v4 < 4)
    {
      unsigned int v6 = v5 >> (8 * v4);
      int v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if ((_DWORD)v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }

      else if ((_DWORD)v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }

      else
      {
        *a1 = v7;
      }
    }

    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }

  else
  {
    a1[v4] = a2;
  }

uint64_t type metadata accessor for Parsed(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Parsed);
}

uint64_t sub_189048038@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v41 = a4;
  uint64_t v42 = a3;
  uint64_t v40 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v39 = type metadata accessor for Parsed(0LL, AssociatedTypeWitness, v6, v7);
  MEMORY[0x1895F8858](v39);
  unsigned int v9 = (char *)&v33 - v8;
  uint64_t v10 = sub_189067AB4();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1895F8858](v10);
  uint64_t v14 = (char *)&v33 - v13;
  uint64_t v15 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1895F8858](v12);
  uint64_t v17 = (char *)&v33 - v16;
  uint64_t v55 = a1;
  sub_189006BE4(a1, (uint64_t)v51);
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC868);
  if ((swift_dynamicCast() & 1) != 0)
  {
    uint64_t v18 = AssociatedTypeWitness;
    uint64_t v34 = v11;
    uint64_t v35 = v10;
    uint64_t v36 = v14;
    uint64_t v37 = v15;
    uint64_t v38 = v17;
    uint64_t v19 = v42;
    v53[1] = v47;
    void v53[2] = v48;
    v53[3] = v49;
    char v54 = v50;
    v52[0] = v43;
    v52[1] = v44;
    v52[2] = v45;
    v53[0] = v46;
    sub_18901484C((uint64_t)v53, (uint64_t)&v43, &qword_18C4FC488);
    if (*((void *)&v43 + 1))
    {
      sub_18901484C((uint64_t)&v44 + 8, (uint64_t)v51, &qword_18C4FC878);
      sub_189014560((uint64_t)&v43);
    }

    else
    {
      sub_188FFCDB0((uint64_t)&v43, &qword_18C4FC488);
      memset(v51, 0, 32);
    }

    uint64_t v22 = v9;
    uint64_t v24 = v37;
    uint64_t v23 = v38;
    uint64_t v25 = v36;
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC878);
    char v26 = swift_dynamicCast();
    int64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
    if ((v26 & 1) != 0)
    {
      v27(v25, 0LL, 1LL, v18);
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v23, v25, v18);
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v22, v23, v18);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, uint64_t, uint64_t))(v19 + 40))(v22, v40, v19);
      __swift_destroy_boxed_opaque_existential_1Tm(v55);
      (*(void (**)(char *, uint64_t))(v24 + 8))(v23, v18);
      return sub_189030230((uint64_t)v52);
    }

    else
    {
      v27(v25, 1LL, 1LL, v18);
      (*(void (**)(char *, uint64_t))(v34 + 8))(v25, v35);
      sub_18901484C((uint64_t)v53, (uint64_t)&v43, &qword_18C4FC488);
      uint64_t v28 = *((void *)&v43 + 1);
      if (*((void *)&v43 + 1))
      {
        uint64_t v29 = v43;
        uint64_t v30 = v44;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_189014560((uint64_t)&v43);
        sub_189048AEC((uint64_t)v52, (uint64_t)&v43);
      }

      else
      {
        sub_188FFCDB0((uint64_t)&v43, &qword_18C4FC488);
        sub_189048AEC((uint64_t)v52, (uint64_t)&v43);
        uint64_t v29 = *((void *)&v44 + 1);
        uint64_t v30 = *((void *)&v45 + 1);
        uint64_t v28 = v45;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }

      uint64_t v31 = v55;
      sub_189030230((uint64_t)&v43);
      sub_188FFAD68();
      swift_allocError();
      *(void *)uint64_t v32 = v29;
      *(void *)(v32 + 8) = v28;
      *(void *)(v32 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v30;
      *(_OWORD *)(v32 + 24) = 0u;
      *(_OWORD *)(v32 + 40) = 0u;
      *(_OWORD *)(v32 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = 0u;
      *(void *)(v32 + 72) = 0LL;
      *(_BYTE *)(v32 + 80) = 11;
      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_1Tm(v31);
      return sub_189030230((uint64_t)v52);
    }
  }

  else
  {
    char v50 = 0;
    __int128 v48 = 0u;
    __int128 v49 = 0u;
    __int128 v46 = 0u;
    __int128 v47 = 0u;
    __int128 v44 = 0u;
    __int128 v45 = 0u;
    __int128 v43 = 0u;
    sub_188FFCDB0((uint64_t)&v43, qword_18C761290);
    sub_188FFAD68();
    swift_allocError();
    *(void *)uint64_t v20 = 3LL;
    *(_OWORD *)(v20 + 8) = 0u;
    *(_OWORD *)(v20 + 24) = 0u;
    *(_OWORD *)(v20 + 40) = 0u;
    *(_OWORD *)(v20 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = 0u;
    *(void *)(v20 + 72) = 0LL;
    *(_BYTE *)(v20 + 80) = 15;
    swift_willThrow();
    return __swift_destroy_boxed_opaque_existential_1Tm(v55);
  }

uint64_t sub_189048480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = MEMORY[0x1895DD3F4](&unk_189069130, a4);
  return sub_1890484DC(a1, a2, a3, a4, v8);
}

uint64_t sub_1890484DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = type metadata accessor for Parsed(0LL, AssociatedTypeWitness, v11, v12);
  MEMORY[0x1895F8858](v13);
  uint64_t v15 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))((char *)&v18 - v14);
  (*(void (**)(uint64_t, uint64_t))(a5 + 32))(a4, a5);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = (*v15)(a1, a2, a3);
    swift_release();
    return v16;
  }

  else
  {
    uint64_t result = sub_189067D3C();
    __break(1u);
  }

  return result;
}

uint64_t sub_189048624@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = a1;
  a5[1] = a2;
  type metadata accessor for Parsed(0LL, a3, a3, a4);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_18904865C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = MEMORY[0x1895DD3F4](&unk_1890692E0, a4);
  return sub_1890484DC(a1, a2, a3, a4, v8);
}

uint64_t sub_1890486B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v29 = a4;
  uint64_t v43 = a3;
  uint64_t v30 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = sub_189067AB4();
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v25 = v7;
  MEMORY[0x1895F8858](v7);
  char v26 = (char *)&v24 - v8;
  uint64_t v28 = type metadata accessor for Parsed(0LL, AssociatedTypeWitness, v9, v10);
  uint64_t v11 = MEMORY[0x1895F8858](v28);
  int64_t v27 = (char *)&v24 - v12;
  uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v14 = MEMORY[0x1895F8858](v11);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  MEMORY[0x1895F8858](v14);
  uint64_t v18 = (char *)&v24 - v17;
  sub_189006BE4(a1, (uint64_t)v40);
  sub_189067A48();
  if (!v4)
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v18, v16, AssociatedTypeWitness);
LABEL_10:
    uint64_t v22 = v27;
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v27, v18, AssociatedTypeWitness);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, uint64_t))(v43 + 40))(v22, v30);
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v18, AssociatedTypeWitness);
  }

  sub_189006BE4(a1, (uint64_t)v39);
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC868);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v41[1] = v35;
    v41[2] = v36;
    v41[3] = v37;
    char v42 = v38;
    v40[0] = v31;
    v40[1] = v32;
    v40[2] = v33;
    v41[0] = v34;
    sub_18901484C((uint64_t)v41, (uint64_t)&v31, &qword_18C4FC488);
    sub_189030230((uint64_t)v40);
    if (*((void *)&v31 + 1))
    {
      sub_18901484C((uint64_t)&v32 + 8, (uint64_t)v39, &qword_18C4FC878);
      sub_189014560((uint64_t)&v31);
    }

    else
    {
      sub_188FFCDB0((uint64_t)&v31, &qword_18C4FC488);
      memset(v39, 0, 32);
    }

    __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC878);
    uint64_t v19 = v26;
    char v20 = swift_dynamicCast();
    unint64_t v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
    if ((v20 & 1) != 0)
    {
      v21(v19, 0LL, 1LL, AssociatedTypeWitness);
      MEMORY[0x1895DD340](v4);
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v18, v19, AssociatedTypeWitness);
      goto LABEL_10;
    }

    v21(v19, 1LL, 1LL, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v19, v25);
  }

  else
  {
    char v38 = 0;
    __int128 v36 = 0u;
    __int128 v37 = 0u;
    __int128 v34 = 0u;
    __int128 v35 = 0u;
    __int128 v32 = 0u;
    __int128 v33 = 0u;
    __int128 v31 = 0u;
    sub_188FFCDB0((uint64_t)&v31, qword_18C761290);
  }

  swift_willThrow();
  return __swift_destroy_boxed_opaque_existential_1Tm(a1);
}

uint64_t sub_189048A34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = MEMORY[0x1895DD3F4](&unk_18906954C, a4);
  return sub_1890484DC(a1, a2, a3, a4, v8);
}

uint64_t sub_189048A90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = MEMORY[0x1895DD3F4](&unk_189069C84, a4);
  return sub_1890484DC(a1, a2, a3, a4, v8);
}

uint64_t sub_189048AEC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_189048B28(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0LL;
  }
  uint64_t v2 = (unsigned __int8 *)(a1 + 48);
  while (1)
  {
    unsigned __int8 v3 = *v2;
    if ((*v2 & 0xC0) != 0x40) {
      break;
    }
    v2 += 24;
    if (!--v1)
    {
      uint64_t v4 = *(void *)(a1 + 32);
      uint64_t v5 = *(void *)(a1 + 40);
      unsigned __int8 v3 = *(_BYTE *)(a1 + 48);
      goto LABEL_8;
    }
  }

  uint64_t v4 = *((void *)v2 - 2);
  uint64_t v5 = *((void *)v2 - 1);
LABEL_8:
  sub_188FFCF80(v4, v5, v3);
  return v4;
}

uint64_t sub_189048BAC@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10)
{
  unint64_t v16 = a3[1];
  unint64_t v17 = a3[3];
  uint64_t v27 = *a3;
  uint64_t v28 = a3[2];
  unint64_t v18 = a3[5];
  uint64_t v29 = a3[4];
  char v26 = *((_BYTE *)a3 + 48);
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC850);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = xmmword_1890684B0;
  *(void *)(v19 + 32) = a6;
  *(void *)(v19 + 40) = a7;
  *(void *)(v19 + 48) = a8;
  if (v16)
  {
    if (v18)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      unint64_t v20 = v18;
      unint64_t v21 = v17;
      unint64_t v22 = v16;
      goto LABEL_8;
    }

    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v21 = v17;
    unint64_t v22 = v16;
  }

  else
  {
    uint64_t v27 = 0LL;
    uint64_t v28 = 0LL;
    unint64_t v21 = 0xE000000000000000LL;
    unint64_t v22 = 0xE000000000000000LL;
  }

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (!v16)
  {
    char v26 = 0;
    uint64_t v29 = 0LL;
    unint64_t v20 = 0xE000000000000000LL;
    goto LABEL_10;
  }

  uint64_t v29 = 0LL;
  unint64_t v20 = 0xE000000000000000LL;
LABEL_8:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_10:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  uint64_t result = swift_bridgeObjectRelease_n();
  *(void *)a9 = a2;
  *(void *)(a9 + 8) = a4;
  *(void *)(a9 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = a5;
  *(void *)(a9 + 24) = v19;
  *(void *)(a9 + 32) = a1;
  *(_BYTE *)(a9 + 40) = a10 & 1;
  *(void *)(a9 + 48) = v27;
  *(void *)(a9 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = v22;
  *(void *)(a9 + 64) = v28;
  *(void *)(a9 + 72) = v21;
  *(void *)(a9 + 80) = v29;
  *(void *)(a9 + 88) = v20;
  *(_BYTE *)(a9 + 96) = v26;
  *(void *)(a9 + 104) = 0LL;
  *(void *)(a9 + 112) = 0xE000000000000000LL;
  return result;
}

double sub_189048DF0@<D0>( uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, unint64_t a4@<X4>, uint64_t a5@<X5>, int a6@<W6>, uint64_t a7@<X7>, _OWORD *a8@<X8>, uint64_t *a9, uint64_t a10, uint64_t a11)
{
  unint64_t v54 = a4;
  uint64_t v55 = a7;
  int v51 = a6;
  uint64_t v52 = a2;
  uint64_t v53 = a3;
  uint64_t v50 = a1;
  uint64_t v13 = *(void *)(a11 + 8);
  swift_getAssociatedTypeWitness();
  uint64_t v45 = sub_189067AB4();
  uint64_t v43 = *(void *)(v45 - 8);
  MEMORY[0x1895F8858](v45);
  uint64_t v15 = (char *)&v38 - v14;
  __int128 v16 = *(_OWORD *)a5;
  __int128 v46 = *(_OWORD *)(a5 + 16);
  __int128 v47 = v16;
  uint64_t v17 = *(void *)(a5 + 32);
  uint64_t v42 = *(void *)(a5 + 40);
  int v41 = *(unsigned __int8 *)(a5 + 48);
  uint64_t v18 = *a9;
  uint64_t v39 = a9[1];
  uint64_t v40 = v18;
  int v44 = *((unsigned __int8 *)a9 + 16);
  uint64_t v49 = v13;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v48 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 24))( AssociatedTypeWitness,  AssociatedConformanceWitness);
  v61[0] = v47;
  v61[1] = v46;
  uint64_t v62 = v17;
  uint64_t v21 = v55;
  uint64_t v63 = v42;
  char v64 = v41;
  uint64_t v22 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a11 + 24))(v55, a10, a11);
  uint64_t v23 = v43;
  *(void *)&__int128 v47 = v22;
  *(void *)&__int128 v46 = v24;
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = a10;
  *(void *)(v25 + 24) = a11;
  uint64_t v26 = v45;
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v15, v21, v45);
  char v27 = v44;
  if (v44 == 255)
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(AssociatedConformanceWitness + 32))( &v58,  AssociatedTypeWitness,  AssociatedConformanceWitness);
    uint64_t v28 = v58;
    uint64_t v29 = v59;
    char v27 = v60;
  }

  else
  {
    uint64_t v29 = v39;
    uint64_t v28 = v40;
    uint64_t v58 = v40;
    uint64_t v59 = v39;
    char v60 = v44;
  }

  v56[0] = v28;
  v56[1] = v29;
  char v57 = v27;
  double v30 = sub_189049C7C( v50,  v52,  v53,  v54,  v48,  v61,  v47,  (uint64_t)v65,  v46,  v51,  (uint64_t)sub_18904B6D4,  v25,  (uint64_t)v15,  (uint64_t)v56,  a10,  v49);
  (*(void (**)(uint64_t, uint64_t, double))(v23 + 8))(v55, v26, v30);
  __int128 v31 = v73;
  a8[8] = v72;
  a8[9] = v31;
  __int128 v32 = v75;
  a8[10] = v74;
  a8[11] = v32;
  __int128 v33 = v69;
  a8[4] = v68;
  a8[5] = v33;
  __int128 v34 = v71;
  a8[6] = v70;
  a8[7] = v34;
  __int128 v35 = v65[1];
  *a8 = v65[0];
  a8[1] = v35;
  double result = *(double *)&v66;
  __int128 v37 = v67;
  a8[2] = v66;
  a8[3] = v37;
  return result;
}

double sub_1890490C0@<D0>( uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, unint64_t a4@<X4>, uint64_t a5@<X5>, int a6@<W6>, uint64_t a7@<X7>, _OWORD *a8@<X8>, uint64_t a9, uint64_t a10, uint64_t *a11, uint64_t a12, uint64_t a13)
{
  uint64_t v39 = a7;
  int v40 = a6;
  uint64_t v43 = a3;
  unint64_t v44 = a4;
  uint64_t v41 = a1;
  uint64_t v42 = a2;
  uint64_t v38 = a10;
  uint64_t v37 = a9;
  swift_getAssociatedTypeWitness();
  uint64_t v15 = sub_189067AB4();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1895F8858](v15);
  uint64_t v18 = (char *)&v34 - v17;
  LOBYTE(v17) = *(_BYTE *)(a5 + 48);
  uint64_t v19 = *a11;
  uint64_t v36 = a11[1];
  int v35 = *((unsigned __int8 *)a11 + 16);
  __int128 v20 = *(_OWORD *)(a5 + 16);
  v47[0] = *(_OWORD *)a5;
  v47[1] = v20;
  uint64_t v47[2] = *(_OWORD *)(a5 + 32);
  char v48 = v17;
  uint64_t v21 = (void *)swift_allocObject();
  v21[2] = a12;
  v21[3] = a13;
  uint64_t v22 = v38;
  uint64_t v23 = v37;
  v21[4] = v39;
  v21[5] = v23;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v22, v15);
  v45[0] = v19;
  v45[1] = v36;
  char v46 = v35;
  double v24 = sub_189049C7C( v41,  v42,  v43,  v44,  MEMORY[0x18961AFE8],  v47,  0LL,  (uint64_t)v49,  0LL,  v40,  (uint64_t)sub_18904B48C,  (uint64_t)v21,  (uint64_t)v18,  (uint64_t)v45,  a12,  a13);
  (*(void (**)(uint64_t, uint64_t, double))(v16 + 8))(v22, v15, v24);
  __int128 v25 = v57;
  __int128 v26 = v58;
  __int128 v27 = v55;
  a8[8] = v56;
  a8[9] = v25;
  __int128 v28 = v59;
  a8[10] = v26;
  a8[11] = v28;
  __int128 v29 = v53;
  __int128 v30 = v54;
  __int128 v31 = v51;
  a8[4] = v52;
  a8[5] = v29;
  a8[6] = v30;
  a8[7] = v27;
  __int128 v32 = v49[1];
  *a8 = v49[0];
  a8[1] = v32;
  double result = *(double *)&v50;
  a8[2] = v50;
  a8[3] = v31;
  return result;
}

unint64_t sub_1890492A0()
{
  __int128 v1 = v0[9];
  __int128 v37 = v0[8];
  v38[0] = v1;
  __int128 v2 = v0[11];
  v38[1] = v0[10];
  uint64_t v38[2] = v2;
  __int128 v3 = v0[5];
  *(_OWORD *)&_BYTE v36[64] = v0[4];
  *(_OWORD *)&v36[80] = v3;
  __int128 v4 = v0[7];
  *(_OWORD *)&v36[96] = v0[6];
  *(_OWORD *)&v36[112] = v4;
  __int128 v5 = v0[1];
  *(_OWORD *)uint64_t v36 = *v0;
  *(_OWORD *)&v36[16] = v5;
  __int128 v6 = v0[3];
  *(_OWORD *)&v36[32] = v0[2];
  *(_OWORD *)&v36[48] = v6;
  sub_18904B40C(v36, &v40);
  sub_18904B40C(&v40, &v50);
  uint64_t v7 = v50;
  if (!v50)
  {
    v39.n128_u64[0] = 60LL;
    v39.n128_u64[1] = 0xE100000000000000LL;
    __int128 v46 = *(_OWORD *)&v36[72];
    __int128 v47 = *(_OWORD *)&v36[88];
    __int128 v48 = *(_OWORD *)&v36[104];
    uint64_t v49 = *(void *)&v36[120];
    __int128 v42 = *(_OWORD *)&v36[8];
    __int128 v43 = *(_OWORD *)&v36[24];
    __int128 v44 = *(_OWORD *)&v36[40];
    __int128 v45 = *(_OWORD *)&v36[56];
    __n128 v51 = *(__n128 *)&v36[88];
    uint64_t v9 = *(void *)&v36[88] & 0xFFFFFFFFFFFFLL;
    if ((*(void *)&v36[96] & 0x2000000000000000LL) != 0) {
      uint64_t v9 = HIBYTE(*(void *)&v36[96]) & 0xFLL;
    }
    if (v9)
    {
      __int128 v41 = v47;
      swift_bridgeObjectRetain();
    }

    else
    {
      sub_188FFCFF4((uint64_t)v36);
      sub_18900F670((uint64_t)&v51);
      sub_189049A90((uint64_t *)v36, (unint64_t *)&v41);
      sub_18900F698((uint64_t)&v51);
      sub_1890099F8((uint64_t)v36);
    }

    sub_18906788C();
    swift_bridgeObjectRelease();
    sub_18906788C();
    return v39.n128_u64[0];
  }

  if (v50 == 1) {
    return 0LL;
  }
  sub_18900F634((__n128 *)((char *)v38 + 8), &v39);
  sub_18900F634(&v39, &v51);
  int64_t v10 = *(void *)(v7 + 16);
  uint64_t v11 = MEMORY[0x18961AFE8];
  if ((v52 & 1) == 0)
  {
    if (!v10)
    {
LABEL_32:
      *(void *)&__int128 v42 = v11;
      __swift_instantiateConcreteTypeFromMangledName(&qword_18C760FE8);
      sub_189014190();
      uint64_t v8 = sub_1890677C0();
      swift_bridgeObjectRelease();
      return v8;
    }

    *(void *)&__int128 v41 = MEMORY[0x18961AFE8];
    sub_188FFF34C(0LL, v10, 0);
    uint64_t v11 = v41;
    __int128 v20 = (unsigned __int8 *)(v7 + 48);
    while (1)
    {
      uint64_t v22 = *((void *)v20 - 2);
      uint64_t v21 = *((void *)v20 - 1);
      unsigned int v23 = *v20;
      if (!(v23 >> 6)) {
        break;
      }
      if (v23 >> 6 != 1)
      {
        *(void *)&__int128 v42 = 45LL;
        unint64_t v24 = 0xE100000000000000LL;
        goto LABEL_28;
      }

      *(void *)&__int128 v42 = 0LL;
      *((void *)&v42 + 1) = 0xE000000000000000LL;
      swift_bridgeObjectRetain();
      sub_18906788C();
      sub_1890677B4();
LABEL_29:
      sub_188FFCF98(v22, v21, v23);
      __int128 v25 = v42;
      *(void *)&__int128 v41 = v11;
      unint64_t v27 = *(void *)(v11 + 16);
      unint64_t v26 = *(void *)(v11 + 24);
      if (v27 >= v26 >> 1)
      {
        sub_188FFF34C((char *)(v26 > 1), v27 + 1, 1);
        uint64_t v11 = v41;
      }

      v20 += 24;
      *(void *)(v11 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v27 + 1;
      *(_OWORD *)(v11 + 16 * v27 + 32) = v25;
      if (!--v10) {
        goto LABEL_32;
      }
    }

    *(void *)&__int128 v42 = 11565LL;
    unint64_t v24 = 0xE200000000000000LL;
LABEL_28:
    *((void *)&v42 + 1) = v24;
    swift_bridgeObjectRetain();
    sub_18906788C();
    goto LABEL_29;
  }

  if (v10)
  {
    *(void *)&__int128 v41 = MEMORY[0x18961AFE8];
    sub_188FFF34C(0LL, v10, 0);
    uint64_t v11 = v41;
    uint64_t v12 = (unsigned __int8 *)(v7 + 48);
    while (1)
    {
      uint64_t v14 = *((void *)v12 - 2);
      uint64_t v13 = *((void *)v12 - 1);
      unsigned int v15 = *v12;
      if (!(v15 >> 6)) {
        break;
      }
      if (v15 >> 6 != 1)
      {
        *(void *)&__int128 v42 = 45LL;
        unint64_t v16 = 0xE100000000000000LL;
        goto LABEL_16;
      }

      *(void *)&__int128 v42 = 0LL;
      *((void *)&v42 + 1) = 0xE000000000000000LL;
      swift_bridgeObjectRetain();
      sub_18906788C();
      sub_1890677B4();
LABEL_17:
      sub_188FFCF98(v14, v13, v15);
      __int128 v17 = v42;
      *(void *)&__int128 v41 = v11;
      unint64_t v19 = *(void *)(v11 + 16);
      unint64_t v18 = *(void *)(v11 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_188FFF34C((char *)(v18 > 1), v19 + 1, 1);
        uint64_t v11 = v41;
      }

      v12 += 24;
      *(void *)(v11 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v19 + 1;
      *(_OWORD *)(v11 + 16 * v19 + 32) = v17;
      if (!--v10) {
        goto LABEL_35;
      }
    }

    *(void *)&__int128 v42 = 11565LL;
    unint64_t v16 = 0xE200000000000000LL;
LABEL_16:
    *((void *)&v42 + 1) = v16;
    swift_bridgeObjectRetain();
    sub_18906788C();
    goto LABEL_17;
  }

BOOL sub_189049820()
{
  if (*v0 < 2uLL)
  {
    uint64_t v1 = MEMORY[0x18961AFE8];
    uint64_t v2 = *(void *)(MEMORY[0x18961AFE8] + 16LL);
    if (v2) {
      goto LABEL_3;
    }
LABEL_11:
    BOOL v6 = 0LL;
    goto LABEL_12;
  }

  uint64_t v1 = swift_bridgeObjectRetain();
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2) {
    goto LABEL_11;
  }
LABEL_3:
  __int128 v3 = (unsigned __int8 *)(v1 + 48);
  uint64_t v4 = v2 - 1;
  do
  {
    int v5 = *v3;
    v3 += 24;
    BOOL v6 = (v5 & 0xFFFFFFC1) == 65;
  }

  while ((v5 & 0xFFFFFFC1) != 0x41 && v4-- != 0);
LABEL_12:
  swift_bridgeObjectRelease();
  return v6;
}

void *sub_189049894@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void *sub_1890498A0@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_1890498B4@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *sub_1890498C8@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_1890498DC(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_18904990C@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_189049938@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_18904995C(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_189049970(void *result)
{
  *v1 &= *result;
  return result;
}

void *sub_189049984(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_189049998@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1890499AC(void *a1)
{
  return (*v1 & ~*a1) == 0LL;
}

BOOL sub_1890499C0(void *a1)
{
  return (*v1 & *a1) == 0LL;
}

BOOL sub_1890499D4(void *a1)
{
  return (*a1 & ~*v1) == 0LL;
}

BOOL sub_1890499E8()
{
  return *v0 == 0LL;
}

uint64_t sub_1890499F8()
{
  return sub_189067B5C();
}

void *sub_189049A10(void *result)
{
  *v1 &= ~*result;
  return result;
}

void *sub_189049A24@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_189049A34(void *a1@<X8>)
{
  *a1 = *v1;
}

BOOL sub_189049A40(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_189049A54@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_18904BF28(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t sub_189049A90@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v4 = *a1;
  if ((unint64_t)*a1 >= 2)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = *(void *)(v4 + 16);
    if (v5)
    {
LABEL_3:
      uint64_t v6 = v4 + 32;
      while (*(unsigned __int8 *)(v6 + 16) >> 6 == 1)
      {
        v6 += 24LL;
        if (!--v5)
        {
          unint64_t v7 = *(void *)(v4 + 32);
          uint64_t v8 = *(void *)(v4 + 40);
          sub_188FFCF80(v7, v8, *(_BYTE *)(v4 + 48));
          goto LABEL_11;
        }
      }

      unint64_t v7 = *(void *)v6;
      uint64_t v8 = *(void *)(v6 + 8);
      swift_bridgeObjectRetain();
      goto LABEL_11;
    }
  }

  else
  {
    uint64_t v4 = MEMORY[0x18961AFE8];
    uint64_t v5 = *(void *)(MEMORY[0x18961AFE8] + 16LL);
    if (v5) {
      goto LABEL_3;
    }
  }

  uint64_t result = swift_bridgeObjectRelease();
  int64_t v10 = (void *)a1[4];
  if (!v10[2])
  {
    uint64_t v8 = 0xE500000000000000LL;
    unint64_t v7 = 0x65756C6176LL;
    goto LABEL_12;
  }

  uint64_t v11 = v10[4];
  unint64_t v12 = v10[5];
  swift_bridgeObjectRetain();
  unint64_t v7 = sub_188FFDD70(45LL, 0xE100000000000000LL, v11, v12);
  uint64_t v8 = v13;
LABEL_11:
  uint64_t result = swift_bridgeObjectRelease();
LABEL_12:
  *a2 = v7;
  a2[1] = v8;
  return result;
}

uint64_t sub_189049B98( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 a7, uint64_t a8, uint64_t a9)
{
  uint64_t v15 = a7;
  sub_188FFAD68();
  swift_allocError();
  *(void *)uint64_t v16 = a4;
  *(void *)(v16 + 8) = a5;
  *(void *)(v16 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = a6;
  *(void *)(v16 + 24) = v15;
  *(void *)(v16 + 32) = a8;
  *(void *)(v16 + 40) = a9;
  *(void *)(v16 + 48) = a1;
  *(void *)(v16 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = a2;
  *(void *)(v16 + 64) = a3;
  *(void *)(v16 + 72) = 0LL;
  *(_BYTE *)(v16 + 80) = 12;
  swift_bridgeObjectRetain();
  sub_18901FFB8(a5, a6, a7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_willThrow();
}

double sub_189049C7C@<D0>( uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, unint64_t a4@<X4>, uint64_t a5@<X5>, __int128 *a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, unsigned __int8 a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v69 = a7;
  uint64_t v68 = a5;
  unint64_t v75 = a4;
  uint64_t v78 = a3;
  uint64_t v77 = a2;
  uint64_t v79 = a1;
  int v76 = a10;
  *(void *)&__int128 v74 = a12;
  uint64_t v73 = a11;
  uint64_t v67 = a9;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v71 = sub_189067AB4();
  uint64_t v70 = *(void *)(v71 - 8);
  uint64_t v72 = *(void *)(v70 + 64);
  MEMORY[0x1895F8858](v71);
  __int128 v61 = (char *)&v53 - v19;
  __int128 v66 = *a6;
  __int128 v65 = a6[1];
  uint64_t v21 = *((void *)a6 + 4);
  uint64_t v20 = *((void *)a6 + 5);
  char v22 = *((_BYTE *)a6 + 48);
  uint64_t v60 = *(void *)a14;
  uint64_t v59 = *(void *)(a14 + 8);
  int v23 = *(unsigned __int8 *)(a14 + 16);
  uint64_t v55 = a16;
  unint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t))(a16 + 24);
  uint64_t v54 = a15;
  uint64_t v25 = v24(a15, a16);
  int v26 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 48LL))( a13,  1LL,  AssociatedTypeWitness);
  v85[0] = v66;
  v85[1] = v65;
  uint64_t v27 = v25 | (v26 != 1);
  uint64_t v86 = v21;
  uint64_t v87 = v20;
  char v88 = v22;
  uint64_t v28 = v77;
  swift_bridgeObjectRetain();
  uint64_t v29 = v78;
  swift_bridgeObjectRetain();
  uint64_t v30 = v79;
  sub_189048BAC(v68, v27, (uint64_t *)v85, v69, v67, v79, v28, v29, (uint64_t)&v89, 0);
  __int128 v57 = v89;
  uint64_t v56 = v90;
  int v58 = v92;
  __int128 v66 = v93;
  __int128 v65 = v94;
  uint64_t v64 = v95;
  uint64_t v63 = v96;
  int v62 = v97;
  uint64_t v31 = v60;
  if (v23 == 255) {
    uint64_t v31 = 0LL;
  }
  uint64_t v69 = v31;
  uint64_t v32 = v59;
  if (v23 == 255) {
    uint64_t v32 = 0LL;
  }
  uint64_t v68 = v32;
  if (v23 == 255) {
    int v33 = 4;
  }
  else {
    int v33 = v23;
  }
  LODWORD(v67) = v33;
  uint64_t v59 = v98;
  uint64_t v60 = v99;
  uint64_t v34 = (void *)swift_allocObject();
  uint64_t v35 = v54;
  uint64_t v36 = v55;
  uint64_t v34[2] = v54;
  v34[3] = v36;
  uint64_t v37 = v74;
  v34[4] = v73;
  v34[5] = v37;
  v34[6] = v30;
  v34[7] = v28;
  v34[8] = v29;
  uint64_t v38 = v70;
  __n128 v39 = *(void (**)(char *, uint64_t, uint64_t))(v70 + 16);
  __int128 v74 = v91;
  uint64_t v40 = v61;
  uint64_t v53 = a13;
  uint64_t v41 = v71;
  v39(v61, a13, v71);
  uint64_t v42 = v38;
  unint64_t v43 = (*(unsigned __int8 *)(v38 + 80) + 40LL) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  unint64_t v44 = (v72 + v43 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  __int128 v45 = (char *)swift_allocObject();
  *((void *)v45 + 2) = v35;
  *((void *)v45 + 3) = v36;
  unint64_t v46 = v75;
  *((void *)v45 + 4) = v75;
  (*(void (**)(char *, char *, uint64_t))(v42 + 32))(&v45[v43], v40, v41);
  __int128 v47 = &v45[v44];
  uint64_t v48 = v77;
  *(void *)__int128 v47 = v79;
  *((void *)v47 + 1) = v48;
  *((void *)v47 + 2) = v78;
  char v81 = 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_188FFD0E0(v46);
  (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v53, v41);
  *(void *)a8 = v46;
  *(_OWORD *)(a8 + 8) = v57;
  *(void *)(a8 + 24) = v56;
  *(_OWORD *)(a8 + 32) = v74;
  *(_BYTE *)(a8 + 48) = v58;
  *(_DWORD *)(a8 + 49) = v85[0];
  *(_DWORD *)(a8 + 52) = *(_DWORD *)((char *)v85 + 3);
  *(_OWORD *)(a8 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = v66;
  double result = *(double *)&v65;
  *(_OWORD *)(a8 + 72) = v65;
  uint64_t v50 = v63;
  *(void *)(a8 + 88) = v64;
  *(void *)(a8 + 96) = v50;
  *(_BYTE *)(a8 + 104) = v62;
  *(_DWORD *)(a8 + 108) = *(_DWORD *)&v84[3];
  *(_DWORD *)(a8 + 105) = *(_DWORD *)v84;
  uint64_t v51 = v60;
  *(void *)(a8 + 112) = v59;
  *(void *)(a8 + 120) = v51;
  uint64_t v52 = v68;
  *(void *)(a8 + 128) = v69;
  *(void *)(a8 + 136) = v52;
  *(_BYTE *)(a8 + 144) = v67;
  *(_BYTE *)(a8 + 145) = v76;
  *(_DWORD *)(a8 + 146) = v82;
  *(_WORD *)(a8 + 150) = v83;
  *(void *)(a8 + 152) = sub_18904B4F4;
  *(void *)(a8 + 160) = v34;
  *(_BYTE *)(a8 + 168) = v81;
  *(_DWORD *)(a8 + 169) = *(_DWORD *)v80;
  *(_DWORD *)(a8 + 172) = *(_DWORD *)&v80[3];
  *(void *)(a8 + 176) = sub_18904B60C;
  *(void *)(a8 + 184) = v45;
  return result;
}

uint64_t sub_18904A1D4@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v31 = a6;
  uint64_t v32 = a7;
  uint64_t v29 = a4;
  uint64_t v30 = a5;
  uint64_t v34 = a3;
  uint64_t v33 = a2;
  uint64_t v27 = a9;
  uint64_t v28 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v12 = sub_189067AB4();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1895F8858](v12);
  uint64_t v15 = (char *)&v26 - v14;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  __int128 v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(AssociatedConformanceWitness + 8);
  swift_bridgeObjectRetain();
  v17(a8, a10, AssociatedTypeWitness, AssociatedConformanceWitness);
  uint64_t v18 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  unsigned __int8 v19 = v32;
  uint64_t v20 = v32;
  sub_188FFAD68();
  swift_allocError();
  uint64_t v21 = v30;
  *(void *)uint64_t v22 = v29;
  *(void *)(v22 + 8) = v21;
  uint64_t v23 = v31;
  *(void *)(v22 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v31;
  *(void *)(v22 + 24) = v20;
  *(void *)(v22 + 32) = a8;
  *(void *)(v22 + 40) = a10;
  uint64_t v24 = v33;
  *(void *)(v22 + 48) = v28;
  *(void *)(v22 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = v24;
  *(void *)(v22 + 64) = v34;
  *(void *)(v22 + 72) = 0LL;
  *(_BYTE *)(v22 + 80) = 12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_18901FFB8(v21, v23, v19);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_willThrow();
}

uint64_t sub_18904A3B8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t, uint64_t))
{
  uint64_t result = a10(a8, a9);
  if (v10)
  {
    sub_188FFAD68();
    swift_allocError();
    *(void *)uint64_t v19 = a4;
    *(void *)(v19 + 8) = a5;
    *(void *)(v19 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = a6;
    *(void *)(v19 + 24) = a7;
    *(void *)(v19 + 32) = a8;
    *(void *)(v19 + 40) = a9;
    *(void *)(v19 + 48) = a1;
    *(void *)(v19 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = a2;
    *(void *)(v19 + 64) = a3;
    *(void *)(v19 + 72) = v10;
    *(_BYTE *)(v19 + 80) = 12;
    swift_bridgeObjectRetain();
    sub_18901FFB8(a5, a6, a7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }

  return result;
}

uint64_t sub_18904A4C0( uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t), uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v28 = a5;
  uint64_t v30 = a8;
  uint64_t v25 = a7;
  uint64_t v26 = a3;
  unsigned int v27 = a4;
  uint64_t v24 = a14;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v22 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v23 = AssociatedTypeWitness;
  MEMORY[0x1895F8858](AssociatedTypeWitness);
  uint64_t v19 = (char *)&v22 - v18;
  uint64_t v20 = v29;
  uint64_t result = v30(a10, a11, a12, a1, a2, v26, v27, v28, a6);
  if (!v20)
  {
    (*(void (**)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 32))( v25,  v19,  a10,  a11,  a12,  a1,  a13);
    return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v19, v23);
  }

  return result;
}

uint64_t sub_18904A5EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v21 = a5;
  uint64_t v22 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = sub_189067AB4();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1895F8858](v13);
  uint64_t v16 = (char *)&v20 - v15;
  if (a3 == 1) {
    a1 = sub_1890473A0((uint64_t)&unk_18A339428);
  }
  else {
    swift_bridgeObjectRetain();
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a4, v13);
  uint64_t v17 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v16, 1LL, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    __int128 v26 = 0u;
    __int128 v27 = 0u;
  }

  else
  {
    *((void *)&v27 + 1) = AssociatedTypeWitness;
    boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)&v26);
    (*(void (**)(uint64_t *, char *, uint64_t))(v17 + 32))( boxed_opaque_existential_1Tm,  v16,  AssociatedTypeWitness);
  }

  sub_188FFCE1C((uint64_t)&v26, (uint64_t)v24);
  v23[0] = v21;
  v23[1] = a6;
  v23[2] = a7;
  v24[4] = a1;
  char v25 = 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_18904CEF0(v23);
  sub_189014560((uint64_t)v23);
  swift_bridgeObjectRelease();
  return sub_188FFCDB0((uint64_t)&v26, &qword_18C4FC878);
}

uint64_t sub_18904A7A4()
{
  return 0LL;
}

uint64_t sub_18904A7B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_18904A7E8(a1, a2, a3, a4, a5, a6, *(void *)(a7 + 16));
}

uint64_t sub_18904A7CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18904A8BC(a1, *(void *)(a2 + 16), *(void *)(a3 - 8));
}

uint64_t sub_18904A7E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _OWORD v18[3] = a7;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v18);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a7 - 8) + 16LL))( boxed_opaque_existential_1Tm,  a2,  a7);
  sub_188FFCE1C((uint64_t)v18, (uint64_t)v16);
  v15[0] = a3;
  v15[1] = a4;
  v15[2] = a5;
  v16[4] = a6;
  char v17 = 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_18904CEF0(v15);
  sub_189014560((uint64_t)v15);
  return sub_188FFCDB0((uint64_t)v18, &qword_18C4FC878);
}

uint64_t sub_18904A8BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_189067AB4();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1895F8858](v6);
  uint64_t v10 = (char *)&v16 - v9;
  uint64_t v11 = *(void *)(a2 - 8);
  MEMORY[0x1895F8858](v8);
  uint64_t v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, a1, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1LL, a2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    return 0LL;
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v10, a2);
    uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, a2);
  }

  return v14;
}

uint64_t sub_18904A9F0(uint64_t a1)
{
  uint64_t result = MEMORY[0x1895DD3F4](&unk_18906A864);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_18904AA1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v10 = sub_18906773C();
  sub_18904C718(a3, a4, a5, a6, v10, (void (*)(uint64_t *))sub_18904B41C);
  return swift_bridgeObjectRelease();
}

uint64_t sub_18904AAB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  return sub_18904AA1C(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_18904AABC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    *(void *)&__int128 v16 = a1;
    uint64_t v6 = sub_189067A30();
    swift_bridgeObjectRetain();
    MEMORY[0x1895DD3F4](MEMORY[0x189618488], v6);
    if ((sub_189067A9C() & 1) == 0)
    {
      *(void *)&__int128 v16 = a1;
      MEMORY[0x1895DD3F4](MEMORY[0x189618470], v6);
      sub_18906794C();
      swift_bridgeObjectRelease();
      uint64_t v15 = v13;
      uint64_t v8 = swift_allocObject();
      *(void *)(v8 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = a2;
      *(void *)(v8 + 24) = a3;
      uint64_t v9 = sub_189067C40();
      MEMORY[0x1895DD3F4](MEMORY[0x189619258], v9);
      sub_189067DA8();
      swift_release();
      swift_bridgeObjectRelease();
      __int128 v13 = v16;
      uint64_t v14 = v17;
      uint64_t v10 = sub_189067CB8();
      uint64_t v12 = MEMORY[0x1895DD3F4](MEMORY[0x189618458], v6);
      MEMORY[0x1895DD3F4](MEMORY[0x189619610], v10, &v12);
      uint64_t v7 = sub_1890677C0();
      swift_release();
      swift_bridgeObjectRelease();
      return v7;
    }

    swift_bridgeObjectRelease();
  }

  return 0LL;
}

uint64_t sub_18904AC94(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_18904AABC(*a1, *(void *)(a2 + 16), *(void *)(a3 - 8));
}

uint64_t sub_18904ACA4(uint64_t a1)
{
  uint64_t result = MEMORY[0x1895DD3F4](&unk_18906A8A8);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_18904ACD0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_18904ACD8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 32))();
}

uint64_t sub_18904ACE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t destroy for ArgumentDefinition(uint64_t a1)
{
  if (*(void *)a1 >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_189009AF4(*(void *)(a1 + 128), *(void *)(a1 + 136), *(_BYTE *)(a1 + 144));
  sub_189009B34();
  return swift_release();
}

uint64_t initializeWithCopy for ArgumentDefinition(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  if (*(void *)a2 >= 2uLL) {
    uint64_t v4 = swift_bridgeObjectRetain();
  }
  *(void *)a1 = v4;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  uint64_t v8 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v8;
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  uint64_t v9 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v9;
  uint64_t v10 = *(void *)(a2 + 128);
  uint64_t v11 = *(void *)(a2 + 136);
  char v16 = *(_BYTE *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_188FFD0F0(v10, v11, v16);
  *(void *)(a1 + 128) = v10;
  *(void *)(a1 + 136) = v11;
  *(_BYTE *)(a1 + 144) = v16;
  *(_BYTE *)(a1 + 145) = *(_BYTE *)(a2 + 145);
  uint64_t v12 = *(void *)(a2 + 152);
  uint64_t v13 = *(void *)(a2 + 160);
  LOBYTE(v6) = *(_BYTE *)(a2 + 168);
  sub_188FFD130();
  *(void *)(a1 + 152) = v12;
  *(void *)(a1 + 160) = v13;
  *(_BYTE *)(a1 + 168) = v6;
  uint64_t v14 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v14;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ArgumentDefinition(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)a2;
  if (v4 >= 2)
  {
    if (v5 >= 2)
    {
      *(void *)a1 = v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }

    else
    {
      sub_188FFCDB0(a1, &qword_18C761530);
      *(void *)a1 = *(void *)a2;
    }
  }

  else
  {
    *(void *)a1 = v5;
    if (v5 >= 2) {
      swift_bridgeObjectRetain();
    }
  }

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 128);
  uint64_t v7 = *(void *)(a2 + 136);
  char v8 = *(_BYTE *)(a2 + 144);
  sub_188FFD0F0(v6, v7, v8);
  uint64_t v9 = *(void *)(a1 + 128);
  uint64_t v10 = *(void *)(a1 + 136);
  *(void *)(a1 + 128) = v6;
  *(void *)(a1 + 136) = v7;
  char v11 = *(_BYTE *)(a1 + 144);
  *(_BYTE *)(a1 + 144) = v8;
  sub_189009AF4(v9, v10, v11);
  *(_BYTE *)(a1 + 145) = *(_BYTE *)(a2 + 145);
  uint64_t v12 = *(void *)(a2 + 152);
  uint64_t v13 = *(void *)(a2 + 160);
  char v14 = *(_BYTE *)(a2 + 168);
  sub_188FFD130();
  *(void *)(a1 + 152) = v12;
  *(void *)(a1 + 160) = v13;
  *(_BYTE *)(a1 + 168) = v14;
  sub_189009B34();
  uint64_t v15 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v15;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy192_8(uint64_t a1, __int128 *a2)
{
  __int128 v2 = *a2;
  __int128 v3 = a2[1];
  __int128 v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v3;
  __int128 v5 = a2[4];
  __int128 v6 = a2[5];
  __int128 v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  __n128 result = (__n128)a2[8];
  __int128 v9 = a2[9];
  __int128 v10 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 128) = result;
  *(_OWORD *)(a1 + 144) = v9;
  return result;
}

uint64_t assignWithTake for ArgumentDefinition(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)a2;
  if (*(void *)a1 >= 2uLL)
  {
    if (v4 >= 2)
    {
      *(void *)a1 = v4;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }

    sub_188FFCDB0(a1, &qword_18C761530);
  }

  *(void *)a1 = v4;
LABEL_6:
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  uint64_t v8 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v8;
  swift_bridgeObjectRelease();
  char v9 = *(_BYTE *)(a2 + 144);
  uint64_t v10 = *(void *)(a1 + 128);
  uint64_t v11 = *(void *)(a1 + 136);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  char v12 = *(_BYTE *)(a1 + 144);
  *(_BYTE *)(a1 + 144) = v9;
  sub_189009AF4(v10, v11, v12);
  *(_BYTE *)(a1 + 145) = *(_BYTE *)(a2 + 145);
  char v13 = *(_BYTE *)(a2 + 168);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_BYTE *)(a1 + 168) = v13;
  sub_189009B34();
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ArgumentDefinition(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 192)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ArgumentDefinition(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 184) = 0LL;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 192) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 192) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for ArgumentDefinition()
{
  return &type metadata for ArgumentDefinition;
}

uint64_t storeEnumTagSinglePayload for ArgumentDefinition.ParsingStrategy( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xF9) {
    return ((uint64_t (*)(void))((char *)&loc_18904B318 + 4 * byte_18906A85D[v4]))();
  }
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_18904B34C + 4 * byte_18906A858[v4]))();
}

uint64_t sub_18904B34C(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_18904B354(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x18904B35CLL);
  }
  return result;
}

uint64_t sub_18904B368(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x18904B370LL);
  }
  *(_BYTE *)__n128 result = a2 + 6;
  return result;
}

uint64_t sub_18904B374(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_18904B37C(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArgumentDefinition.ParsingStrategy()
{
  return &type metadata for ArgumentDefinition.ParsingStrategy;
}

unint64_t sub_18904B39C()
{
  unint64_t result = qword_18C761538;
  if (!qword_18C761538)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&unk_18906A9F4, &type metadata for ArgumentDefinition.ParsingStrategy);
    atomic_store(result, (unint64_t *)&qword_18C761538);
  }

  return result;
}

uint64_t sub_18904B3E0(uint64_t a1)
{
  uint64_t result = MEMORY[0x1895DD3F4](&unk_18906AA44);
  *(void *)(a1 + 8) = result;
  return result;
}

void *sub_18904B40C(void *a1, void *a2)
{
  *a2 = *a1;
  return a2;
}

uint64_t sub_18904B41C(uint64_t a1)
{
  return sub_189037D28(a1);
}

uint64_t sub_18904B424()
{
  return swift_deallocObject();
}

uint64_t sub_18904B434@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(v1 + 24) + 16LL))(*(void *)(v1 + 16));
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_18904B468()
{
  return swift_deallocObject();
}

uint64_t sub_18904B48C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 a7, uint64_t a8, uint64_t a9)
{
  return sub_18904A3B8(a1, a2, a3, a4, a5, a6, a7, a8, a9, *(uint64_t (**)(uint64_t, uint64_t))(v9 + 32));
}

uint64_t sub_18904B4C0()
{
  return swift_deallocObject();
}

uint64_t sub_18904B4F4( uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_18904A4C0( a1,  a2,  a3,  a4,  a5,  a6,  a7,  *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t))(v7 + 32),  *(void *)(v7 + 40),  *(void *)(v7 + 48),  *(void *)(v7 + 56),  *(void *)(v7 + 64),  *(void *)(v7 + 16),  *(void *)(v7 + 24));
}

uint64_t sub_18904B528()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(sub_189067AB4() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  if (*(void *)(v0 + 32) >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))( v0 + v3,  1LL,  AssociatedTypeWitness)) {
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v3, AssociatedTypeWitness);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_18904B60C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_189067AB4() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 40LL) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (uint64_t *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8LL));
  return sub_18904A5EC(a1, a2, *(void *)(v2 + 32), v2 + v6, *v7, v7[1], v7[2]);
}

uint64_t sub_18904B6C4()
{
  return swift_deallocObject();
}

uint64_t sub_18904B6D4@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  return sub_18904A1D4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t sub_18904B700()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t type metadata accessor for Bare(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Bare);
}

uint64_t destroy for ArgumentDefinition.Update()
{
  return sub_189009B34();
}

uint64_t _s22ArgumentParserInternal18ArgumentDefinitionV6UpdateOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((_BYTE *)a2 + 16);
  sub_188FFD130();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ArgumentDefinition.Update(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((_BYTE *)a2 + 16);
  sub_188FFD130();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v5;
  sub_189009B34();
  return a1;
}

uint64_t assignWithTake for ArgumentDefinition.Update(uint64_t a1, uint64_t a2)
{
  char v3 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v3;
  sub_189009B34();
  return a1;
}

uint64_t sub_18904B808(uint64_t result, char a2)
{
  *(_BYTE *)(result + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ArgumentDefinition.Update()
{
  return &type metadata for ArgumentDefinition.Update;
}

uint64_t destroy for ArgumentDefinition.Help()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ArgumentDefinition.Help(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = v4;
  uint64_t v5 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v5;
  uint64_t v6 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v6;
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  uint64_t v7 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ArgumentDefinition.Help(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy120_8(uint64_t a1, __int128 *a2)
{
  __int128 v2 = *a2;
  __int128 v3 = a2[1];
  __int128 v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v3;
  __n128 result = (__n128)a2[4];
  __int128 v6 = a2[5];
  __int128 v7 = a2[6];
  *(void *)(a1 + 112) = *((void *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for ArgumentDefinition.Help(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  uint64_t v7 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ArgumentDefinition.Help(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 120)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ArgumentDefinition.Help(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 120) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 120) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for ArgumentDefinition.Help()
{
  return &type metadata for ArgumentDefinition.Help;
}

uint64_t *initializeBufferWithCopyOfBuffer for ArgumentDefinition.Kind(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *a1 = v3;
  return a1;
}

unint64_t destroy for ArgumentDefinition.Kind(unint64_t *a1)
{
  unint64_t result = *a1;
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t *assignWithCopy for ArgumentDefinition.Kind(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  if (v3 < 0xFFFFFFFF)
  {
    *a1 = v4;
    if (v4 >= 0xFFFFFFFF) {
      swift_bridgeObjectRetain();
    }
  }

  else if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    *a1 = *a2;
  }

  else
  {
    *a1 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }

  return a1;
}

void *__swift_memcpy8_8(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

unint64_t *assignWithTake for ArgumentDefinition.Kind(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  if (*a1 < 0xFFFFFFFF) {
    goto LABEL_5;
  }
  if (v3 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *a1 = v3;
    return a1;
  }

  *a1 = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ArgumentDefinition.Kind(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 >= 0x7FFFFFFE && *((_BYTE *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  uint64_t v3 = *a1;
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0LL;
  }
}

uint64_t storeEnumTagSinglePayload for ArgumentDefinition.Kind( uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0LL;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(_BYTE *)(result + 8) = 1;
    }
  }

  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(_BYTE *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 1;
    }
  }

  return result;
}

uint64_t sub_18904BDB0(uint64_t *a1)
{
  uint64_t v1 = *a1;
  return (v1 + 1);
}

void *sub_18904BDC8(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }

  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }

  *unint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for ArgumentDefinition.Kind()
{
  return &type metadata for ArgumentDefinition.Kind;
}

ValueMetadata *type metadata accessor for ArgumentDefinition.Help.Options()
{
  return &type metadata for ArgumentDefinition.Help.Options;
}

unint64_t sub_18904BE0C()
{
  unint64_t result = qword_18C761608;
  if (!qword_18C761608)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&unk_18906AAEC, &type metadata for ArgumentDefinition.Help.Options);
    atomic_store(result, (unint64_t *)&qword_18C761608);
  }

  return result;
}

unint64_t sub_18904BE54()
{
  unint64_t result = qword_18C761610;
  if (!qword_18C761610)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&unk_18906AABC, &type metadata for ArgumentDefinition.Help.Options);
    atomic_store(result, (unint64_t *)&qword_18C761610);
  }

  return result;
}

unint64_t sub_18904BE9C()
{
  unint64_t result = qword_18C761618;
  if (!qword_18C761618)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&unk_18906AB14, &type metadata for ArgumentDefinition.Help.Options);
    atomic_store(result, (unint64_t *)&qword_18C761618);
  }

  return result;
}

unint64_t sub_18904BEE4()
{
  unint64_t result = qword_18C761620;
  if (!qword_18C761620)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&unk_18906AB4C, &type metadata for ArgumentDefinition.Help.Options);
    atomic_store(result, (unint64_t *)&qword_18C761620);
  }

  return result;
}

uint64_t sub_18904BF28(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0LL;
  }
  uint64_t result = 0LL;
  unsigned int v4 = (uint64_t *)(a1 + 32);
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v5 = v6;
    if ((v6 & ~result) == 0) {
      uint64_t v5 = 0LL;
    }
    result |= v5;
    --v1;
  }

  while (v1);
  return result;
}

uint64_t destroy for ParsedValues()
{
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ParsedValues(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ParsedValues(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  __int128 v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ParsedValues(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ParsedValues(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *((_BYTE *)a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ParsedValues(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 40) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for ParsedValues()
{
  return &type metadata for ParsedValues;
}

uint64_t destroy for ParsedValues.Element(uint64_t a1)
{
  if (*(void *)(a1 + 48)) {
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 24);
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ParsedValues.Element(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = *(void *)(a2 + 16);
  uint64_t v5 = (_OWORD *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    *(void *)(a1 + 48) = v6;
    (**(void (***)(uint64_t, _OWORD *, uint64_t))(v6 - 8))(a1 + 24, v5, v6);
  }

  else
  {
    __int128 v7 = v5[1];
    *(_OWORD *)(a1 + 24) = *v5;
    *(_OWORD *)(a1 + 40) = v7;
  }

  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = *(void *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ParsedValues.Element(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 48);
  if (!*(void *)(a1 + 48))
  {
    if (v4)
    {
      *(void *)(a1 + 48) = v4;
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 24, a2 + 24);
      goto LABEL_8;
    }

uint64_t *__swift_assign_boxed_opaque_existential_0(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    __int128 v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v9 = *(void *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        uint64_t v10 = *a2;
        swift_retain();
        __n128 result = (uint64_t *)swift_release();
        *__int128 v3 = v10;
      }

      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }

    else
    {
      result[3] = v5;
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      int v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *__n128 result = *a2;
          swift_retain();
        }

        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }

        return (uint64_t *)swift_release();
      }

      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *__int128 v3 = *a2;
          swift_retain();
        }

        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }

        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }

  return result;
}

__n128 __swift_memcpy65_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  __int128 v3 = *(_OWORD *)(a2 + 32);
  __int128 v4 = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = result;
  return result;
}

uint64_t assignWithTake for ParsedValues.Element(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 48)) {
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 24);
  }
  __int128 v5 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = v5;
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for ParsedValues.Element(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 65)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ParsedValues.Element(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = 0LL;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 64) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 65) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 65) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for ParsedValues.Element()
{
  return &type metadata for ParsedValues.Element;
}

uint64_t sub_18904C618(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (*(void *)(a1 + 8))
  {
    __int128 v8 = *(_OWORD *)(a1 + 48);
    void v13[2] = *(_OWORD *)(a1 + 32);
    uint64_t v13[3] = v8;
    char v14 = *(_BYTE *)(a1 + 64);
    __int128 v9 = *(_OWORD *)(a1 + 16);
    v13[0] = *(_OWORD *)a1;
    v13[1] = v9;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = *v4;
    uint64_t *v4 = 0x8000000000000000LL;
    sub_18904F8F8((uint64_t)v13, a2, a3, a4, isUniquelyReferenced_nonNull_native);
    uint64_t *v4 = v12;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }

  else
  {
    sub_188FFCDB0(a1, &qword_18C4FC488);
    sub_18904F544(a2, a3, a4, (uint64_t)v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_188FFCDB0((uint64_t)v13, &qword_18C4FC488);
  }

uint64_t sub_18904C718( uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t *))
{
  __int128 v12 = v6[1];
  __int128 v27 = *v6;
  __int128 v28 = v12;
  uint64_t v29 = *((void *)v6 + 4);
  sub_18904C90C(a1, a2, a3, (uint64_t)&v18);
  if (*((void *)&v18 + 1))
  {
    v24[1] = v20;
    __int128 v25 = v21;
    char v26 = v22;
    __int128 v23 = v18;
    v24[0] = v19;
  }

  else
  {
    uint64_t v13 = sub_189067A30();
    *(void *)&__int128 v23 = a1;
    *((void *)&v23 + 1) = a2;
    *(void *)&v24[0] = a3;
    *((void *)&v24[0] + 1) = a5;
    *(void *)&__int128 v25 = v13;
    *((void *)&v25 + 1) = MEMORY[0x18961AFF8];
    char v26 = 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_188FFCDB0((uint64_t)&v18, &qword_18C4FC488);
  }

  sub_188FFCE1C((uint64_t)v24 + 8, (uint64_t)&v18);
  if (!*((void *)&v19 + 1))
  {
    sub_188FFCDB0((uint64_t)&v18, &qword_18C4FC878);
    goto LABEL_8;
  }

  sub_189067A30();
  if (!swift_dynamicCast())
  {
LABEL_8:
    uint64_t v17 = a5;
    swift_bridgeObjectRetain();
  }

  if (v26 == 1)
  {
    sub_189067A30();
    sub_189067A24();
    char v26 = 0;
  }

  a6(&v17);
  uint64_t v14 = v17;
  *((void *)&v19 + 1) = sub_189067A30();
  *(void *)&__int128 v18 = v14;
  sub_1890145A0((uint64_t)&v18, (uint64_t)v24 + 8);
  uint64_t v15 = swift_bridgeObjectRetain();
  sub_18904CD8C(v15);
  sub_18904CEF0((uint64_t *)&v23);
  return sub_189014560((uint64_t)&v23);
}

uint64_t sub_18904C90C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6 = *v4;
  if (*(void *)(v6 + 16))
  {
    uint64_t v9 = result;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v10 = sub_18904D89C(v9, a2, a3);
    if ((v11 & 1) != 0)
    {
      sub_1890145E8(*(void *)(v6 + 56) + 72 * v10, a4);
    }

    else
    {
      *(_BYTE *)(a4 + 64) = 0;
      *(_OWORD *)(a4 + 32) = 0u;
      *(_OWORD *)(a4 + 48) = 0u;
      *(_OWORD *)a4 = 0u;
      *(_OWORD *)(a4 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 0u;
    }

    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }

  else
  {
    *(_BYTE *)(a4 + 64) = 0;
    *(_OWORD *)(a4 + 32) = 0u;
    *(_OWORD *)(a4 + 48) = 0u;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 0u;
  }

  return result;
}

uint64_t sub_18904C9CC( uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void (*a6)(char *), uint64_t a7, uint64_t a8)
{
  uint64_t v38 = a7;
  __n128 v39 = a6;
  uint64_t v43 = a5;
  uint64_t v40 = a4;
  uint64_t v37 = sub_189067AB4();
  uint64_t v36 = *(void *)(v37 - 8);
  uint64_t v13 = MEMORY[0x1895F8858](v37);
  uint64_t v15 = (char *)&v33 - v14;
  uint64_t v16 = *(void *)(a8 - 8);
  uint64_t v17 = MEMORY[0x1895F8858](v13);
  uint64_t v42 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = MEMORY[0x1895F8858](v17);
  __int128 v21 = (char *)&v33 - v20;
  MEMORY[0x1895F8858](v19);
  __int128 v23 = (char *)&v33 - v22;
  __int128 v24 = v8[1];
  __int128 v52 = *v8;
  __int128 v53 = v24;
  uint64_t v41 = v8;
  uint64_t v54 = *((void *)v8 + 4);
  uint64_t v35 = a1;
  sub_18904C90C(a1, a2, a3, (uint64_t)v46);
  __int128 v25 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v25(v23, v43, a8);
  if (*((void *)&v46[0] + 1))
  {
    char v26 = *(void (**)(char *, uint64_t))(v16 + 8);
    v26(v23, a8);
    v49[1] = v46[2];
    __int128 v50 = v46[3];
    char v51 = v47;
    __int128 v48 = v46[0];
    v49[0] = v46[1];
  }

  else
  {
    uint64_t v45 = a8;
    boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v44);
    v25((char *)boxed_opaque_existential_1Tm, (uint64_t)v23, a8);
    char v26 = *(void (**)(char *, uint64_t))(v16 + 8);
    uint64_t v34 = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v26(v23, a8);
    *(void *)&__int128 v48 = v35;
    *((void *)&v48 + 1) = a2;
    __int128 v25 = v34;
    *(void *)&v49[0] = a3;
    sub_188FFCF14((uint64_t)v44, (uint64_t)v49 + 8);
    *((void *)&v50 + 1) = MEMORY[0x18961AFF8];
    char v51 = 1;
    sub_188FFCDB0((uint64_t)v46, &qword_18C4FC488);
  }

  sub_188FFCE1C((uint64_t)v49 + 8, (uint64_t)v44);
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC878);
  int v28 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v15, v28 ^ 1u, 1LL, a8);
  uint64_t v29 = v42;
  v25(v42, v43, a8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1LL, a8) == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v21, v29, a8);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v37);
  }

  else
  {
    v26(v29, a8);
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v21, v15, a8);
  }

  v39(v21);
  uint64_t v45 = a8;
  uint64_t v30 = __swift_allocate_boxed_opaque_existential_1Tm(v44);
  v25((char *)v30, (uint64_t)v21, a8);
  sub_1890145A0((uint64_t)v44, (uint64_t)v49 + 8);
  uint64_t v31 = swift_bridgeObjectRetain();
  sub_18904CD8C(v31);
  sub_18904CEF0((uint64_t *)&v48);
  v26(v21, a8);
  return sub_189014560((uint64_t)&v48);
}

uint64_t sub_18904CD8C(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0LL;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1LL << *(_BYTE *)(result + 32);
  uint64_t v5 = -1LL;
  if (v4 < 64) {
    uint64_t v5 = ~(-1LL << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }

    int64_t v10 = v2 + 1;
    if (__OFADD__(v2, 1LL))
    {
      __break(1u);
      goto LABEL_25;
    }

    if (v10 >= v7) {
      return swift_release();
    }
    unint64_t v11 = *(void *)(v3 + 8 * v10);
    ++v2;
    if (!v11)
    {
      int64_t v2 = v10 + 1;
      if (v10 + 1 >= v7) {
        return swift_release();
      }
      unint64_t v11 = *(void *)(v3 + 8 * v2);
      if (!v11)
      {
        int64_t v2 = v10 + 2;
        if (v10 + 2 >= v7) {
          return swift_release();
        }
        unint64_t v11 = *(void *)(v3 + 8 * v2);
        if (!v11)
        {
          int64_t v2 = v10 + 3;
          if (v10 + 3 >= v7) {
            return swift_release();
          }
          unint64_t v11 = *(void *)(v3 + 8 * v2);
          if (!v11) {
            break;
          }
        }
      }
    }

uint64_t sub_18904CEF0(uint64_t *a1)
{
  uint64_t v3 = *v1;
  if (*(void *)(v3 + 16))
  {
    uint64_t v5 = *a1;
    uint64_t v4 = a1[1];
    unint64_t v6 = (void *)a1[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v7 = sub_18904D89C(v5, v4, v6);
    if ((v8 & 1) != 0)
    {
      sub_1890145E8(*(void *)(v3 + 56) + 72 * v7, (uint64_t)&v17);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*((void *)&v17 + 1))
      {
        _OWORD v22[2] = v19;
        v22[3] = v20;
        char v23 = v21;
        v22[0] = v17;
        v22[1] = v18;
        sub_1890145E8((uint64_t)a1, (uint64_t)&v17);
        uint64_t v9 = swift_bridgeObjectRetain();
        sub_18904CD8C(v9);
        __int128 v10 = v17;
        unint64_t v11 = (void *)v18;
        sub_1890145E8((uint64_t)&v17, (uint64_t)v16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_18904C618((uint64_t)v16, v10, *((uint64_t *)&v10 + 1), v11);
        sub_189014560((uint64_t)&v17);
        return sub_189014560((uint64_t)v22);
      }
    }

    else
    {
      char v21 = 0;
      __int128 v19 = 0u;
      __int128 v20 = 0u;
      __int128 v17 = 0u;
      __int128 v18 = 0u;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }

  else
  {
    char v21 = 0;
    __int128 v19 = 0u;
    __int128 v20 = 0u;
    __int128 v17 = 0u;
    __int128 v18 = 0u;
  }

  sub_188FFCDB0((uint64_t)&v17, &qword_18C4FC488);
  uint64_t v13 = *a1;
  uint64_t v14 = a1[1];
  uint64_t v15 = (void *)a1[2];
  sub_1890145E8((uint64_t)a1, (uint64_t)v22);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_18904C618((uint64_t)v22, v13, v14, v15);
}

uint64_t sub_18904D0A0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0LL;
  }
  if (!v2 || a1 == a2) {
    return 1LL;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (char v6 = sub_189067F10(), result = 0LL, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1LL;
    }
    uint64_t v9 = a2 + 7;
    for (uint64_t i = a1 + 7; ; i += 2)
    {
      BOOL v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_189067F10() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1LL;
      }
    }

    return 0LL;
  }

  return result;
}

uint64_t sub_18904D164(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0LL;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (uint64_t *)(a1 + 48);
    for (uint64_t i = (uint64_t *)(a2 + 48); ; i += 8)
    {
      uint64_t v6 = *(v3 - 2);
      uint64_t v7 = *(v3 - 1);
      unint64_t v8 = *v3;
      uint64_t v10 = v3[3];
      uint64_t v9 = v3[4];
      int v11 = *((unsigned __int8 *)v3 + 40);
      uint64_t v12 = *(i - 2);
      uint64_t v13 = *(i - 1);
      uint64_t v15 = *i;
      uint64_t v14 = i[1];
      uint64_t v16 = i[2];
      uint64_t v17 = i[3];
      uint64_t v18 = i[4];
      uint64_t v19 = ((unint64_t)*v3 >> 61) & 3;
      char v20 = *((_BYTE *)i + 40);
      if ((_DWORD)v19)
      {
        if ((_DWORD)v19 != 1)
        {
          uint64_t result = 0LL;
          if ((v15 & 0x6000000000000000LL) != 0x4000000000000000LL
            || v15 != 0x4000000000000000LL
            || v13 | v12 | v14 | v16)
          {
            return result;
          }

          uint64_t v27 = v3[4];
          int v28 = *((unsigned __int8 *)v3 + 40);
          uint64_t v29 = i[4];
          sub_1890411A8(0LL, 0LL, 0x4000000000000000uLL);
          uint64_t v18 = v29;
          int v11 = v28;
          uint64_t v9 = v27;
LABEL_33:
          if (v10 != v17) {
            return 0LL;
          }
          goto LABEL_34;
        }

        if ((v15 & 0x6000000000000000LL) != 0x2000000000000000LL) {
          return 0LL;
        }
        goto LABEL_13;
      }

      if ((v15 & 0x6000000000000000LL) != 0) {
        return 0LL;
      }
      if ((v8 & 0x8000000000000000LL) != 0)
      {
        if ((v15 & 0x8000000000000000LL) == 0) {
          return 0LL;
        }
        uint64_t v30 = v3[1];
        uint64_t v31 = v3[2];
        uint64_t v50 = i[4];
        if (v8 >> 6)
        {
          int v32 = v15 & 0xC0;
          if (v8 >> 6 == 1)
          {
            if (v32 != 64) {
              return 0LL;
            }
            if (v6 == v12 && v7 == v13)
            {
            }

            else
            {
              uint64_t v47 = v3[2];
              uint64_t v49 = v3[4];
              uint64_t v44 = v3[1];
              int v45 = *((unsigned __int8 *)v3 + 40);
              char v40 = sub_189067F10();
              uint64_t result = 0LL;
              if ((v40 & 1) == 0) {
                return result;
              }
              uint64_t v9 = v49;
              uint64_t v18 = v50;
              int v11 = v45;
              uint64_t v30 = v44;
              uint64_t v31 = v47;
            }

LABEL_61:
            if (v30 == v14 && v31 == v16) {
              goto LABEL_33;
            }
            int v41 = v11;
            uint64_t v42 = v9;
            char v43 = sub_189067F10();
            uint64_t result = 0LL;
            if ((v43 & 1) == 0) {
              return result;
            }
            BOOL v39 = v10 == v17;
            uint64_t v9 = v42;
            int v11 = v41;
            goto LABEL_65;
          }

          if (v32 != 128) {
            return 0LL;
          }
        }

        else if (*i >= 0x40u)
        {
          return 0LL;
        }

        if (v6 != v12 || v7 != v13)
        {
          uint64_t v46 = v3[2];
          uint64_t v48 = v3[4];
          int v33 = *((unsigned __int8 *)v3 + 40);
          uint64_t v34 = v3[1];
          char v35 = sub_189067F10();
          uint64_t v31 = v46;
          uint64_t v9 = v48;
          uint64_t v30 = v34;
          uint64_t v18 = v50;
          int v11 = v33;
          if ((v35 & 1) == 0) {
            return 0LL;
          }
        }

        goto LABEL_61;
      }

      if (v15 < 0) {
        return 0LL;
      }
      int v26 = v15 & 0xC0;
      if (v8 >> 6 != 1)
      {
        if (v26 != 128) {
          return 0LL;
        }
        goto LABEL_13;
      }

      if (v26 != 64) {
        return 0LL;
      }
      if (v6 != v12 || v7 != v13)
      {
        uint64_t v50 = i[4];
        int v36 = *((unsigned __int8 *)v3 + 40);
        uint64_t v37 = v3[4];
        char v38 = sub_189067F10();
        uint64_t result = 0LL;
        BOOL v39 = v10 == v17;
        uint64_t v9 = v37;
        int v11 = v36;
LABEL_65:
        uint64_t v18 = v50;
        if (!v39) {
          return result;
        }
        goto LABEL_34;
      }

      uint64_t result = 0LL;
LABEL_34:
      if (v11)
      {
        if ((v20 & 1) == 0) {
          return 0LL;
        }
      }

      else
      {
        if (v9 == v18) {
          char v5 = v20;
        }
        else {
          char v5 = 1;
        }
        if ((v5 & 1) != 0) {
          return 0LL;
        }
      }

      v3 += 8;
      if (!--v2) {
        return 1LL;
      }
    }

  if (!v54)
  {
    if (v53) {
      return 0LL;
    }
LABEL_68:
    if (v51)
    {
      if (!v50) {
        return 0LL;
      }
      if (v47 != v46 || v51 != v50)
      {
        char v35 = sub_189067F10();
        uint64_t result = 0LL;
        if ((v35 & 1) == 0) {
          return result;
        }
      }
    }

    else if (v50)
    {
      return 0LL;
    }

    if (v45)
    {
      if (!v44 || (sub_18904D0A0(v45, v44) & 1) == 0) {
        return 0LL;
      }
    }

    else if (v44)
    {
      return 0LL;
    }

    if (v43)
    {
      if (!v42) {
        return 0LL;
      }
      if (v41 != v40 || v43 != v42)
      {
        int v36 = sub_189067F10();
        uint64_t result = 0LL;
        if ((v36 & 1) == 0) {
          return result;
        }
      }
    }

    else if (v42)
    {
      return 0LL;
    }

    if (v8) {
      return v39 && (v7 == v38 && v8 == v39 || (sub_189067F10() & 1) != 0);
    }
    return !v39;
  }

  if (!v53) {
    return 0LL;
  }
  if (v49 == v48 && v54 == v53) {
    goto LABEL_68;
  }
  uint64_t v34 = sub_189067F10();
  uint64_t result = 0LL;
  if ((v34 & 1) != 0) {
    goto LABEL_68;
  }
  return result;
}

uint64_t sub_18904D4C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      char v10 = 1;
    }

    else
    {
      uint64_t v3 = (_OWORD *)(a2 + 56);
      uint64_t v4 = (_OWORD *)(a1 + 56);
      uint64_t v5 = v2 - 1;
      do
      {
        __int128 v20 = *(_OWORD *)((char *)v4 - 24);
        __int128 v6 = v4[1];
        __int128 v22 = *v4;
        __int128 v23 = v6;
        __int128 v7 = v4[3];
        __int128 v24 = v4[2];
        __int128 v25 = v7;
        __int128 v14 = *(_OWORD *)((char *)v3 - 24);
        __int128 v8 = v3[1];
        __int128 v16 = *v3;
        __int128 v17 = v8;
        __int128 v9 = v3[3];
        __int128 v18 = v3[2];
        uint64_t v21 = *((void *)v4 - 1);
        uint64_t v15 = *((void *)v3 - 1);
        __int128 v19 = v9;
        char v10 = static CommandInfoV0.== infix(_:_:)(&v20, &v14);
        BOOL v12 = v5-- != 0;
        if ((v10 & 1) == 0) {
          break;
        }
        uint64_t v3 = (_OWORD *)((char *)v3 + 88);
        uint64_t v4 = (_OWORD *)((char *)v4 + 88);
      }

      while (v12);
    }
  }

  else
  {
    char v10 = 0;
  }

  return v10 & 1;
}

BOOL sub_18904D59C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      return 1;
    }

    else
    {
      uint64_t v3 = a1 + 32;
      uint64_t v4 = a2 + 32;
      uint64_t v5 = v2 - 1;
      do
      {
        uint64_t v6 = v5;
        __int128 v7 = *(_OWORD *)(v3 + 112);
        v19[6] = *(_OWORD *)(v3 + 96);
        v19[7] = v7;
        uint64_t v20 = *(void *)(v3 + 128);
        __int128 v8 = *(_OWORD *)(v3 + 48);
        _OWORD v19[2] = *(_OWORD *)(v3 + 32);
        _OWORD v19[3] = v8;
        __int128 v9 = *(_OWORD *)(v3 + 80);
        void v19[4] = *(_OWORD *)(v3 + 64);
        void v19[5] = v9;
        __int128 v10 = *(_OWORD *)(v3 + 16);
        v19[0] = *(_OWORD *)v3;
        v19[1] = v10;
        __int128 v11 = *(_OWORD *)(v4 + 112);
        v17[6] = *(_OWORD *)(v4 + 96);
        v17[7] = v11;
        uint64_t v18 = *(void *)(v4 + 128);
        __int128 v12 = *(_OWORD *)(v4 + 48);
        v17[2] = *(_OWORD *)(v4 + 32);
        v17[3] = v12;
        __int128 v13 = *(_OWORD *)(v4 + 80);
        v17[4] = *(_OWORD *)(v4 + 64);
        _OWORD v17[5] = v13;
        __int128 v14 = *(_OWORD *)(v4 + 16);
        v17[0] = *(_OWORD *)v4;
        v17[1] = v14;
        BOOL v15 = _s22ArgumentParserInternal0A6InfoV0V2eeoiySbAC_ACtFZ_0((uint64_t)v19, (uint64_t)v17);
        if (!v15) {
          break;
        }
        uint64_t v5 = v6 - 1;
        v4 += 136LL;
        v3 += 136LL;
      }

      while (v6);
    }
  }

  else
  {
    return 0;
  }

  return v15;
}

uint64_t sub_18904D674(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0LL;
  }
  if (!v2 || a1 == a2) {
    return 1LL;
  }
  uint64_t v3 = (uint64_t *)(a2 + 48);
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v7 = *(v4 - 1);
    uint64_t v6 = *v4;
    int v8 = *((unsigned __int8 *)v4 - 16);
    int v9 = *((unsigned __int8 *)v3 - 16);
    uint64_t v11 = *(v3 - 1);
    uint64_t v10 = *v3;
    v3 += 3;
    v4 += 3;
    if (v8 == 1) {
      unint64_t v12 = 0x74726F6873LL;
    }
    else {
      unint64_t v12 = 0xD000000000000012LL;
    }
    unint64_t v13 = 0x800000018906C3B0LL;
    if (v8 == 1) {
      unint64_t v13 = 0xE500000000000000LL;
    }
    if (v8) {
      uint64_t v14 = v12;
    }
    else {
      uint64_t v14 = 1735290732LL;
    }
    if (v8) {
      unint64_t v15 = v13;
    }
    else {
      unint64_t v15 = 0xE400000000000000LL;
    }
    unint64_t v16 = 0x800000018906C3B0LL;
    if (v9 == 1) {
      unint64_t v17 = 0x74726F6873LL;
    }
    else {
      unint64_t v17 = 0xD000000000000012LL;
    }
    if (v9 == 1) {
      unint64_t v16 = 0xE500000000000000LL;
    }
    if (v9) {
      uint64_t v18 = v17;
    }
    else {
      uint64_t v18 = 1735290732LL;
    }
    if (v9) {
      unint64_t v19 = v16;
    }
    else {
      unint64_t v19 = 0xE400000000000000LL;
    }
    if (v14 == v18 && v15 == v19)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease_n();
      goto LABEL_33;
    }

    char v20 = sub_189067F10();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v20 & 1) == 0) {
      break;
    }
LABEL_33:
    if (v7 == v11 && v6 == v10)
    {
      swift_bridgeObjectRelease_n();
    }

    else
    {
      char v5 = sub_189067F10();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v5 & 1) == 0) {
        return 0LL;
      }
    }

    if (!--v2) {
      return 1LL;
    }
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0LL;
}

unint64_t sub_18904D874(unint64_t result, char a2, uint64_t a3)
{
  if ((a2 & 1) != 0)
  {
    if ((result & 0x8000000000000000LL) != 0)
    {
      __break(1u);
    }

    else if (*(void *)(a3 + 16) > result)
    {
      return result;
    }

    __break(1u);
  }

  return result;
}

uint64_t sub_18904D894(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

unint64_t sub_18904D89C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = sub_189068060();
  return sub_18904EF60(a1, a2, a3, v6);
}

unint64_t sub_18904D914(uint64_t a1, uint64_t a2, int a3)
{
  if (a3 >> 6 && a3 >> 6 == 1)
  {
    sub_18906803C();
    sub_1890677A8();
    sub_189068048();
  }

  else
  {
    sub_18906803C();
    sub_1890677A8();
  }

  uint64_t v6 = sub_189068060();
  return sub_18904F0F8(a1, a2, a3, v6);
}

unint64_t sub_18904D9E0(uint64_t a1)
{
  uint64_t v2 = sub_189067754();
  return sub_18904F234(a1, v2);
}

unint64_t sub_18904DA30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_189068060();
  return sub_18904F35C(a1, a2, v4);
}

unint64_t sub_18904DA94(uint64_t a1)
{
  uint64_t v2 = sub_189068060();
  return sub_18904F43C(a1, v2);
}

void *sub_18904DAEC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC7F8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_189067D6C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_24:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }

  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1LL << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  int64_t v9 = 0LL;
  *(void *)(v4 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1LL << *(_BYTE *)(v2 + 32);
  uint64_t v11 = -1LL;
  if (v10 < 64) {
    uint64_t v11 = ~(-1LL << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }

    if (__OFADD__(v9++, 1LL)) {
      goto LABEL_26;
    }
    if (v9 >= v13) {
      goto LABEL_24;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v9);
    if (!v25) {
      break;
    }
LABEL_23:
    unint64_t v12 = (v25 - 1) & v25;
    unint64_t v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 24 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 24 * v15;
    uint64_t v18 = *(void *)v17;
    uint64_t v19 = *(void *)(v17 + 8);
    uint64_t v20 = 8 * v15;
    uint64_t v21 = *(void *)(*(void *)(v2 + 56) + v20);
    uint64_t v22 = *(void *)(v4 + 48) + v16;
    unsigned __int8 v23 = *(_BYTE *)(v17 + 16);
    *(void *)uint64_t v22 = *(void *)v17;
    *(void *)(v22 + 8) = v19;
    *(_BYTE *)(v22 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v23;
    *(void *)(*(void *)(v4 + 56) + v20) = v21;
    uint64_t result = (void *)sub_188FFCF80(v18, v19, v23);
  }

  int64_t v26 = v9 + 1;
  if (v9 + 1 >= v13) {
    goto LABEL_24;
  }
  unint64_t v25 = *(void *)(v6 + 8 * v26);
  if (v25)
  {
    ++v9;
    goto LABEL_23;
  }

  while (1)
  {
    int64_t v9 = v26 + 1;
    if (__OFADD__(v26, 1LL)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_24;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v9);
    ++v26;
    if (v25) {
      goto LABEL_23;
    }
  }

  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

void *sub_18904DC8C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C7610C0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_189067D6C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }

  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1LL << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  int64_t v9 = 0LL;
  *(void *)(v4 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1LL << *(_BYTE *)(v2 + 32);
  uint64_t v11 = -1LL;
  if (v10 < 64) {
    uint64_t v11 = ~(-1LL << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }

    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1LL))
    {
      __break(1u);
      goto LABEL_28;
    }

    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }

void *sub_18904DE40()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C7610B8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_189067D6C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }

  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1LL << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  int64_t v9 = 0LL;
  *(void *)(v4 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1LL << *(_BYTE *)(v2 + 32);
  uint64_t v11 = -1LL;
  if (v10 < 64) {
    uint64_t v11 = ~(-1LL << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }

    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1LL))
    {
      __break(1u);
      goto LABEL_28;
    }

    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }

void *sub_18904DFE8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC800);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_189067D6C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }

  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1LL << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  int64_t v9 = 0LL;
  *(void *)(v4 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1LL << *(_BYTE *)(v2 + 32);
  uint64_t v11 = -1LL;
  if (v10 < 64) {
    uint64_t v11 = ~(-1LL << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }

    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1LL))
    {
      __break(1u);
      goto LABEL_28;
    }

    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }

uint64_t sub_18904E1F8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC7F8);
  uint64_t v6 = sub_189067D78();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v34 = v2;
  uint64_t v8 = 1LL << *(_BYTE *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1LL << v8);
  }
  else {
    uint64_t v9 = -1LL;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0LL;
  char v35 = a2;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v13 << 6);
      goto LABEL_20;
    }

    if (__OFADD__(v13++, 1LL)) {
      goto LABEL_42;
    }
    if (v13 >= v36) {
      break;
    }
    uint64_t v19 = (void *)(v5 + 64);
    unint64_t v20 = *(void *)(v37 + 8 * v13);
    if (!v20)
    {
      int64_t v21 = v13 + 1;
      if (v13 + 1 >= v36)
      {
LABEL_33:
        swift_release();
        uint64_t v3 = v34;
        if ((a2 & 1) == 0) {
          goto LABEL_40;
        }
        goto LABEL_36;
      }

      unint64_t v20 = *(void *)(v37 + 8 * v21);
      if (!v20)
      {
        while (1)
        {
          int64_t v13 = v21 + 1;
          if (__OFADD__(v21, 1LL)) {
            break;
          }
          if (v13 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = *(void *)(v37 + 8 * v13);
          ++v21;
          if (v20) {
            goto LABEL_19;
          }
        }

LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        return result;
      }

      ++v13;
    }

uint64_t sub_18904E564(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C7610C0);
  char v36 = a2;
  uint64_t v6 = sub_189067D78();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1LL << *(_BYTE *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1LL << v8);
  }
  else {
    uint64_t v9 = -1LL;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0LL;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }

    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1LL))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }

    if (v21 >= v34) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }

        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1LL)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }

        int64_t v13 = v24;
      }
    }

uint64_t sub_18904E878(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C7610B8);
  uint64_t result = sub_189067D78();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0LL;
    uint64_t v32 = (void *)(v5 + 64);
    uint64_t v9 = 1LL << *(_BYTE *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1LL << v9);
    }
    else {
      uint64_t v10 = -1LL;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v31 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }

      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1LL))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }

        uint64_t result = v5 + 64;
        if (v20 >= v31) {
          goto LABEL_33;
        }
        unint64_t v21 = v32[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v31) {
            goto LABEL_33;
          }
          unint64_t v21 = v32[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v31)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }

              uint64_t v30 = 1LL << *(_BYTE *)(v5 + 32);
              if (v30 >= 64) {
                bzero(v32, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8LL);
              }
              else {
                *uint64_t v32 = -1LL << v30;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 0LL;
              break;
            }

            unint64_t v21 = v32[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1LL)) {
                  goto LABEL_42;
                }
                if (v8 >= v31) {
                  goto LABEL_33;
                }
                unint64_t v21 = v32[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }

            int64_t v8 = v22;
          }
        }

uint64_t sub_18904EB58(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC800);
  char v48 = a2;
  uint64_t v6 = sub_189067D78();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_45;
  }
  uint64_t v8 = 1LL << *(_BYTE *)(v5 + 32);
  uint64_t v47 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1LL << v8);
  }
  else {
    uint64_t v9 = -1LL;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int v45 = v2;
  int64_t v46 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  for (int64_t i = 0LL; ; int64_t i = v49)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (i << 6);
      goto LABEL_22;
    }

    int64_t v23 = i + 1;
    if (__OFADD__(i, 1LL))
    {
LABEL_46:
      __break(1u);
LABEL_47:
      __break(1u);
      return result;
    }

    if (v23 >= v46) {
      break;
    }
    unint64_t v24 = v47;
    unint64_t v25 = v47[v23];
    ++i;
    if (!v25)
    {
      int64_t i = v23 + 1;
      if (v23 + 1 >= v46) {
        goto LABEL_38;
      }
      unint64_t v25 = v47[i];
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v46)
        {
LABEL_38:
          swift_release();
          uint64_t v3 = v45;
          if ((v48 & 1) == 0) {
            goto LABEL_45;
          }
          goto LABEL_41;
        }

        unint64_t v25 = v47[v26];
        if (!v25)
        {
          while (1)
          {
            int64_t i = v26 + 1;
            if (__OFADD__(v26, 1LL)) {
              goto LABEL_47;
            }
            if (i >= v46) {
              goto LABEL_38;
            }
            unint64_t v25 = v47[i];
            ++v26;
            if (v25) {
              goto LABEL_21;
            }
          }
        }

        int64_t i = v26;
      }
    }

unint64_t sub_18904EF60(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v5 = v4 + 64;
  uint64_t v6 = -1LL << *(_BYTE *)(v4 + 32);
  unint64_t v7 = a4 & ~v6;
  if (((*(void *)(v4 + 64 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v7) & 1) != 0)
  {
    uint64_t v11 = ~v6;
    uint64_t v12 = *(void *)(v4 + 48);
    unint64_t v24 = a3 + 9;
    do
    {
      uint64_t v13 = (void *)(v12 + 24 * v7);
      unint64_t v14 = (void *)v13[2];
      BOOL v15 = *v13 == a1 && v13[1] == a2;
      if (v15 || (sub_189067F10() & 1) != 0)
      {
        uint64_t v16 = v14[2];
        if (v16 == a3[2])
        {
          if (!v16 || v14 == a3) {
            return v7;
          }
          BOOL v17 = v14[4] == a3[4] && v14[5] == a3[5];
          if (v17 || (sub_189067F10() & 1) != 0)
          {
            if (v16 == 1) {
              return v7;
            }
            BOOL v18 = v14[6] == a3[6] && v14[7] == a3[7];
            if (v18 || (sub_189067F10() & 1) != 0)
            {
              uint64_t v19 = v16 - 2;
              if (!v19) {
                return v7;
              }
              __int128 v20 = v14 + 9;
              for (int64_t i = v24; ; i += 2)
              {
                BOOL v22 = *(v20 - 1) == *(i - 1) && *v20 == *i;
                if (!v22 && (sub_189067F10() & 1) == 0) {
                  break;
                }
                v20 += 2;
                if (!--v19) {
                  return v7;
                }
              }
            }
          }
        }
      }

      unint64_t v7 = (v7 + 1) & v11;
    }

    while (((*(void *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v7) & 1) != 0);
  }

  return v7;
}

unint64_t sub_18904F0F8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = v4 + 64;
  uint64_t v6 = -1LL << *(_BYTE *)(v4 + 32);
  unint64_t v7 = a4 & ~v6;
  if (((*(void *)(v4 + 64 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v7) & 1) != 0)
  {
    uint64_t v11 = ~v6;
    uint64_t v12 = *(void *)(v4 + 48);
    unsigned __int8 v13 = a3 & 0xC0;
    do
    {
      unint64_t v14 = (uint64_t *)(v12 + 24 * v7);
      uint64_t v15 = *v14;
      uint64_t v16 = v14[1];
      unsigned int v17 = *((unsigned __int8 *)v14 + 16);
      if (v17 >> 6)
      {
        if (v17 >> 6 == 1)
        {
          if (v13 == 64)
          {
            BOOL v18 = v15 == a1 && v16 == a2;
            if ((v18 || (sub_189067F10() & 1) != 0) && ((a3 ^ v17) & 1) == 0) {
              return v7;
            }
          }

          goto LABEL_4;
        }

        if (v13 != 128) {
          goto LABEL_4;
        }
      }

      else if (a3 >= 0x40u)
      {
        goto LABEL_4;
      }

      BOOL v19 = v15 == a1 && v16 == a2;
      if (v19 || (sub_189067F10() & 1) != 0) {
        return v7;
      }
LABEL_4:
      unint64_t v7 = (v7 + 1) & v11;
    }

    while (((*(void *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v7) & 1) != 0);
  }

  return v7;
}

unint64_t sub_18904F234(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  v16[1] = a1;
  uint64_t v5 = sub_189067D00();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1895F8858](v5);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = -1LL << *(_BYTE *)(v3 + 32);
  unint64_t v10 = a2 & ~v9;
  if (((*(void *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v10) & 1) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v12 = *(void *)(v6 + 72);
    unsigned __int8 v13 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    do
    {
      v13(v8, *(void *)(v3 + 48) + v12 * v10, v5);
      char v14 = sub_1890677CC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if ((v14 & 1) != 0) {
        break;
      }
      unint64_t v10 = (v10 + 1) & v11;
    }

    while (((*(void *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v10) & 1) != 0);
  }

  return v10;
}

unint64_t sub_18904F35C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1LL << *(_BYTE *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if (((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v6) & 1) != 0)
  {
    uint64_t v9 = *(void *)(v3 + 48);
    unint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_189067F10() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v6) & 1) == 0) {
          break;
        }
        unsigned __int8 v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }

      while (!v14 && (sub_189067F10() & 1) == 0);
    }
  }

  return v6;
}

unint64_t sub_18904F43C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1LL << *(_BYTE *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if (((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8LL)) >> result) & 1) != 0)
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8LL)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }

  return result;
}

unint64_t sub_18904F4D8( unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  a6[(result >> 6) + 8] |= 1LL << result;
  unint64_t v6 = (void *)(a6[6] + 24 * result);
  *unint64_t v6 = a2;
  v6[1] = a3;
  v6[2] = a4;
  uint64_t v7 = a6[7] + 72 * result;
  *(_BYTE *)(v7 + 64) = *(_BYTE *)(a5 + 64);
  __int128 v8 = *(_OWORD *)(a5 + 48);
  *(_OWORD *)(v7 + 32) = *(_OWORD *)(a5 + 32);
  *(_OWORD *)(v7 + 48) = v8;
  __int128 v9 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)uint64_t v7 = *(_OWORD *)a5;
  *(_OWORD *)(v7 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v9;
  uint64_t v10 = a6[2];
  BOOL v11 = __OFADD__(v10, 1LL);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a6[2] = v12;
  }
  return result;
}

double sub_18904F544@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  swift_bridgeObjectRetain();
  unint64_t v10 = sub_18904D89C(a1, a2, a3);
  LOBYTE(a3) = v11;
  swift_bridgeObjectRelease();
  if ((a3 & 1) != 0)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v5;
    uint64_t v18 = *v5;
    *uint64_t v5 = 0x8000000000000000LL;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_18904DFE8();
      uint64_t v13 = v18;
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void *)(v13 + 56) + 72 * v10;
    __int128 v15 = *(_OWORD *)(v14 + 48);
    *(_OWORD *)(a4 + 32) = *(_OWORD *)(v14 + 32);
    *(_OWORD *)(a4 + 48) = v15;
    *(_BYTE *)(a4 + 64) = *(_BYTE *)(v14 + 64);
    __int128 v16 = *(_OWORD *)(v14 + 16);
    *(_OWORD *)a4 = *(_OWORD *)v14;
    *(_OWORD *)(a4 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v16;
    sub_18904F664(v10, v13);
    *uint64_t v5 = v13;
    swift_bridgeObjectRelease();
  }

  else
  {
    *(_BYTE *)(a4 + 64) = 0;
    double result = 0.0;
    *(_OWORD *)(a4 + 32) = 0u;
    *(_OWORD *)(a4 + 48) = 0u;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 0u;
  }

  return result;
}

unint64_t sub_18904F664(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1LL << *(_BYTE *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1LL << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_189067B68();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1LL << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      unint64_t v28 = v8;
      do
      {
        uint64_t v9 = *(void *)(*(void *)(a2 + 48) + 24 * v6 + 16);
        sub_189068030();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1890677A8();
        sub_18906803C();
        uint64_t v10 = *(void *)(v9 + 16);
        if (v10)
        {
          uint64_t v11 = v4;
          swift_bridgeObjectRetain();
          uint64_t v12 = v9 + 40;
          do
          {
            swift_bridgeObjectRetain();
            sub_1890677A8();
            swift_bridgeObjectRelease();
            v12 += 16LL;
            --v10;
          }

          while (v10);
          swift_bridgeObjectRelease();
          uint64_t v4 = v11;
          unint64_t v8 = v28;
        }

        uint64_t v13 = sub_189068060();
        swift_bridgeObjectRelease();
        double result = swift_bridgeObjectRelease();
        unint64_t v14 = v13 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v14 < v8) {
            goto LABEL_5;
          }
        }

        else if (v14 >= v8)
        {
          goto LABEL_15;
        }

        if (v3 >= (uint64_t)v14)
        {
LABEL_15:
          uint64_t v15 = *(void *)(a2 + 48);
          unint64_t v16 = v15 + 24 * v3;
          unsigned int v17 = (__int128 *)(v15 + 24 * v6);
          if (v3 != v6 || v16 >= (unint64_t)v17 + 24)
          {
            __int128 v18 = *v17;
            *(void *)(v16 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = *((void *)v17 + 2);
            *(_OWORD *)unint64_t v16 = v18;
          }

          uint64_t v19 = *(void *)(a2 + 56);
          double result = v19 + 72 * v3;
          __int128 v20 = (const void *)(v19 + 72 * v6);
          if (72 * v3 < (uint64_t)(72 * v6) || result >= (unint64_t)v20 + 72 || (v21 = v3 == v6, int64_t v3 = v6, !v21))
          {
            double result = (unint64_t)memmove((void *)result, v20, 0x48uLL);
            int64_t v3 = v6;
          }
        }

LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }

      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v6) & 1) != 0);
    }

    BOOL v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v23 = *v22;
    uint64_t v24 = (-1LL << v3) - 1;
  }

  else
  {
    BOOL v22 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v24 = *v22;
    uint64_t v23 = (-1LL << result) - 1;
  }

  *BOOL v22 = v24 & v23;
  uint64_t v25 = *(void *)(a2 + 16);
  BOOL v26 = __OFSUB__(v25, 1LL);
  uint64_t v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }

  else
  {
    *(void *)(a2 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }

  return result;
}

  if ((*(void *)(v3 + 24) >> 1) - *(void *)(v3 + 16) < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }

  double result = swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    double result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }

  uint64_t v7 = *(void *)(v3 + 16);
  unint64_t v8 = __OFADD__(v7, v2);
  uint64_t v9 = v7 + v2;
  if (!v8)
  {
    *(void *)(v3 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v9;
    goto LABEL_14;
  }

  if ((*(void *)(v3 + 24) >> 1) - *(void *)(v3 + 16) < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }

  double result = swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    double result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }

  uint64_t v7 = *(void *)(v3 + 16);
  unint64_t v8 = __OFADD__(v7, v2);
  uint64_t v9 = v7 + v2;
  if (!v8)
  {
    *(void *)(v3 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v9;
    goto LABEL_14;
  }

  if ((*(void *)(v3 + 24) >> 1) - *(void *)(v3 + 16) < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }

  double result = swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    double result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }

  uint64_t v7 = *(void *)(v3 + 16);
  unint64_t v8 = __OFADD__(v7, v2);
  uint64_t v9 = v7 + v2;
  if (!v8)
  {
    *(void *)(v3 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v9;
    goto LABEL_14;
  }

  if ((*(void *)(v3 + 24) >> 1) - *(void *)(v3 + 16) < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }

  double result = swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    double result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }

  uint64_t v7 = *(void *)(v3 + 16);
  unint64_t v8 = __OFADD__(v7, v2);
  uint64_t v9 = v7 + v2;
  if (!v8)
  {
    *(void *)(v3 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v9;
    goto LABEL_14;
  }

  if ((*(void *)(v3 + 24) >> 1) - *(void *)(v3 + 16) < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }

  double result = swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    double result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }

  uint64_t v7 = *(void *)(v3 + 16);
  unint64_t v8 = __OFADD__(v7, v2);
  uint64_t v9 = v7 + v2;
  if (!v8)
  {
    *(void *)(v3 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v9;
    goto LABEL_14;
  }

  if ((*(void *)(v3 + 24) >> 1) - *(void *)(v3 + 16) < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }

  double result = swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    double result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }

  uint64_t v7 = *(void *)(v3 + 16);
  unint64_t v8 = __OFADD__(v7, v2);
  uint64_t v9 = v7 + v2;
  if (!v8)
  {
    *(void *)(v3 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v9;
    goto LABEL_14;
  }

  if ((v3[3] >> 1) - v3[2] < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }

  __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC870);
  double result = (void *)swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    double result = (void *)swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }

  uint64_t v7 = v3[2];
  unint64_t v8 = __OFADD__(v7, v2);
  uint64_t v9 = v7 + v2;
  if (!v8)
  {
    v3[2] = v9;
    goto LABEL_14;
  }

uint64_t sub_18904F8F8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, char a5)
{
  unint64_t v6 = (void **)v5;
  uint64_t v12 = (void *)*v5;
  unint64_t v14 = sub_18904D89C(a2, a3, a4);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }

  else
  {
    char v18 = v13;
    uint64_t v19 = v12[3];
    if (v19 >= v17 && (a5 & 1) != 0)
    {
LABEL_7:
      __int128 v20 = *v6;
      if ((v18 & 1) != 0) {
        return sub_189051C8C(a1, v20[7] + 72 * v14);
      }
      goto LABEL_11;
    }

    if (v19 >= v17 && (a5 & 1) == 0)
    {
      sub_18904DFE8();
      goto LABEL_7;
    }

    sub_18904EB58(v17, a5 & 1);
    unint64_t v22 = sub_18904D89C(a2, a3, a4);
    if ((v18 & 1) == (v23 & 1))
    {
      unint64_t v14 = v22;
      __int128 v20 = *v6;
      if ((v18 & 1) != 0) {
        return sub_189051C8C(a1, v20[7] + 72 * v14);
      }
LABEL_11:
      sub_18904F4D8(v14, a2, a3, (uint64_t)a4, a1, v20);
      swift_bridgeObjectRetain();
      return swift_bridgeObjectRetain();
    }
  }

  uint64_t result = sub_189067FC4();
  __break(1u);
  return result;
}

uint64_t sub_18904FA44(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v8 = *v4;
  sub_189068030();
  int v9 = a4 >> 6;
  if (a4 >> 6)
  {
    sub_18906803C();
    if (v9 == 1)
    {
      sub_1890677A8();
      sub_189068048();
    }

    swift_bridgeObjectRetain();
  }

  else
  {
    sub_18906803C();
    swift_bridgeObjectRetain();
    sub_188FFD4F4(a2, a3, a4);
    sub_1890677A8();
    sub_189068048();
    sub_188FFD504(a2, a3, a4);
  }

  uint64_t v10 = sub_189068060();
  uint64_t v11 = -1LL << *(_BYTE *)(v8 + 32);
  unint64_t v12 = v10 & ~v11;
  if (((*(void *)(v8 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v12) & 1) == 0)
  {
LABEL_43:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v38 = *v34;
    uint64_t *v34 = 0x8000000000000000LL;
    sub_188FFD4F4(a2, a3, a4);
    sub_189050CF4(a2, a3, a4, v12, isUniquelyReferenced_nonNull_native);
    uint64_t *v34 = v38;
    swift_bridgeObjectRelease();
    *(void *)a1 = a2;
    *(void *)(a1 + 8) = a3;
    uint64_t result = 1LL;
    *(_BYTE *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = a4;
    return result;
  }

  uint64_t v13 = ~v11;
  BOOL v15 = a2 == 1 && a3 == 0;
  if (a4 == 128)
  {
    BOOL v16 = (a3 | a2) != 0;
  }

  else
  {
    BOOL v15 = 0;
    BOOL v16 = 1;
  }

  BOOL v17 = v9 == 2 && v15;
  char v18 = v9 != 2 || v16;
  char v36 = v18;
  BOOL v37 = v17;
  while (1)
  {
    uint64_t v19 = *(void *)(v8 + 48) + 24 * v12;
    uint64_t v20 = *(void *)v19;
    uint64_t v21 = *(void *)(v19 + 8);
    unsigned int v22 = *(unsigned __int8 *)(v19 + 16);
    if (v22 >> 6) {
      break;
    }
LABEL_30:
    BOOL v23 = v20 == a2 && v21 == a3;
    if ((v23 || (sub_189067F10() & 1) != 0) && ((a4 ^ v22) & 1) == 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v27 = a2;
      uint64_t v28 = a3;
      char v29 = a4;
      goto LABEL_48;
    }

uint64_t sub_18904FDA4(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  uint64_t v5 = v4;
  unsigned int v6 = a4;
  unsigned int v10 = a4 >> 8;
  uint64_t v11 = *v5;
  sub_189068030();
  if ((v10 & 1) == 0)
  {
    sub_18906803C();
    sub_18906803C();
    if ((v6 & 1) == 0) {
      sub_18906803C();
    }
  }

  sub_18906803C();
  uint64_t v12 = sub_189068060();
  uint64_t v13 = -1LL << *(_BYTE *)(v11 + 32);
  unint64_t v14 = v12 & ~v13;
  if (((*(void *)(v11 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v14) & 1) == 0)
  {
LABEL_17:
    int v19 = (v6 >> 8) & 1;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = *v5;
    *uint64_t v5 = 0x8000000000000000LL;
    sub_189050FE8(a2, a3, v6 & 0x1FF, v14, isUniquelyReferenced_nonNull_native);
    *uint64_t v5 = v21;
    swift_bridgeObjectRelease();
    uint64_t result = 1LL;
    goto LABEL_18;
  }

  uint64_t v15 = ~v13;
  while (1)
  {
    uint64_t v16 = *(void *)(v11 + 48) + 24 * v14;
    if ((*(_BYTE *)(v16 + 17) & 1) != 0)
    {
      if ((v6 & 0x100) != 0) {
        goto LABEL_16;
      }
      goto LABEL_7;
    }

    if ((v6 & 0x100) != 0 || *(void *)v16 != a2) {
      goto LABEL_7;
    }
    if ((*(_BYTE *)(v16 + 16) & 1) == 0) {
      break;
    }
    if ((v6 & 1) != 0) {
      goto LABEL_16;
    }
LABEL_7:
    unint64_t v14 = (v14 + 1) & v15;
    if (((*(void *)(v11 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v14) & 1) == 0) {
      goto LABEL_17;
    }
  }

  if ((v6 & 1) != 0 || *(void *)(v16 + 8) != a3) {
    goto LABEL_7;
  }
LABEL_16:
  uint64_t result = 0LL;
  uint64_t v18 = *(void *)(*v5 + 48) + 24 * v14;
  a2 = *(void *)v18;
  a3 = *(void *)(v18 + 8);
  LOBYTE(v6) = *(_BYTE *)(v18 + 16);
  LOBYTE(v19) = *(_BYTE *)(v18 + 17);
LABEL_18:
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = a3;
  *(_BYTE *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v6;
  *(_BYTE *)(a1 + 17) = v19;
  return result;
}

uint64_t sub_18904FF5C(uint64_t *a1, uint64_t a2)
{
  int64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001LL) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_189067B98();
    swift_release();
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(qword_18C4FC6B8);
      swift_dynamicCast();
      *a1 = v19;
      swift_unknownObjectRelease();
      return 0LL;
    }

    uint64_t result = sub_189067B8C();
    if (__OFADD__(result, 1LL))
    {
      __break(1u);
      return result;
    }

    uint64_t v17 = sub_1890501A0(v7, result + 1);
    uint64_t v21 = v17;
    if (*(void *)(v17 + 24) <= *(void *)(v17 + 16))
    {
      swift_retain();
      sub_189050848();
      uint64_t v18 = v21;
    }

    else
    {
      uint64_t v18 = v17;
      swift_retain();
    }

    sub_189050C54(a2, v18);
    *int64_t v3 = v18;
  }

  else
  {
    sub_189068030();
    sub_18906803C();
    uint64_t v10 = sub_189068060();
    uint64_t v11 = -1LL << *(_BYTE *)(v6 + 32);
    unint64_t v12 = v10 & ~v11;
    if (((*(void *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v12) & 1) != 0)
    {
      uint64_t v13 = *(void *)(v6 + 48);
      if (*(void *)(v13 + 8 * v12) == a2)
      {
LABEL_12:
        swift_release();
        *a1 = *(void *)(*(void *)(*v2 + 48) + 8 * v12);
        swift_retain();
        return 0LL;
      }

      uint64_t v14 = ~v11;
      while (1)
      {
        unint64_t v12 = (v12 + 1) & v14;
        if (((*(void *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v12) & 1) == 0) {
          break;
        }
        if (*(void *)(v13 + 8 * v12) == a2) {
          goto LABEL_12;
        }
      }
    }

    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v20 = *v2;
    *uint64_t v2 = 0x8000000000000000LL;
    uint64_t v16 = swift_retain();
    sub_1890511C4(v16, v12, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v20;
  }

  swift_bridgeObjectRelease();
  *a1 = a2;
  return 1LL;
}

uint64_t sub_1890501A0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C761150);
    uint64_t v2 = sub_189067BEC();
    uint64_t v14 = v2;
    sub_189067B80();
    for (; sub_189067BA4(); ++*(void *)(v2 + 16))
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_18C4FC6B8);
      swift_dynamicCast();
      if (*(void *)(v2 + 24) <= *(void *)(v2 + 16))
      {
        sub_189050848();
        uint64_t v2 = v14;
      }

      sub_189068030();
      sub_18906803C();
      uint64_t result = sub_189068060();
      uint64_t v4 = v2 + 56;
      uint64_t v5 = -1LL << *(_BYTE *)(v2 + 32);
      unint64_t v6 = result & ~v5;
      unint64_t v7 = v6 >> 6;
      if (((-1LL << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
      {
        unint64_t v8 = __clz(__rbit64((-1LL << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0LL;
      }

      else
      {
        char v9 = 0;
        unint64_t v10 = (unint64_t)(63 - v5) >> 6;
        do
        {
          if (++v7 == v10 && (v9 & 1) != 0)
          {
            __break(1u);
            return result;
          }

          BOOL v11 = v7 == v10;
          if (v7 == v10) {
            unint64_t v7 = 0LL;
          }
          v9 |= v11;
          uint64_t v12 = *(void *)(v4 + 8 * v7);
        }

        while (v12 == -1);
        unint64_t v8 = __clz(__rbit64(~v12)) + (v7 << 6);
      }

      *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v8;
      *(void *)(*(void *)(v2 + 48) + 8 * v8) = v13;
    }

    swift_release();
  }

  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x18961AFF8];
  }

  return v2;
}

unint64_t sub_189050398()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC7E8);
  uint64_t v3 = sub_189067BE0();
  if (*(void *)(v2 + 16))
  {
    uint64_t v4 = 1LL << *(_BYTE *)(v2 + 32);
    uint64_t v5 = (void *)(v2 + 56);
    uint64_t v6 = -1LL;
    if (v4 < 64) {
      uint64_t v6 = ~(-1LL << v4);
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v4 + 63) >> 6;
    unint64_t result = swift_retain();
    int64_t v10 = 0LL;
    while (1)
    {
      if (v7)
      {
        unint64_t v11 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v12 = v11 | (v10 << 6);
      }

      else
      {
        int64_t v13 = v10 + 1;
        if (__OFADD__(v10, 1LL))
        {
          __break(1u);
LABEL_26:
          __break(1u);
          return result;
        }

        if (v13 >= v8) {
          goto LABEL_20;
        }
        unint64_t v14 = v5[v13];
        ++v10;
        if (!v14)
        {
          int64_t v10 = v13 + 1;
          if (v13 + 1 >= v8) {
            goto LABEL_20;
          }
          unint64_t v14 = v5[v10];
          if (!v14)
          {
            int64_t v15 = v13 + 2;
            if (v15 >= v8)
            {
LABEL_20:
              swift_release();
              uint64_t v16 = 1LL << *(_BYTE *)(v2 + 32);
              if (v16 > 63) {
                bzero((void *)(v2 + 56), ((unint64_t)(v16 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8LL);
              }
              else {
                *uint64_t v5 = -1LL << v16;
              }
              *(void *)(v2 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 0LL;
              break;
            }

            unint64_t v14 = v5[v15];
            if (!v14)
            {
              while (1)
              {
                int64_t v10 = v15 + 1;
                if (__OFADD__(v15, 1LL)) {
                  goto LABEL_26;
                }
                if (v10 >= v8) {
                  goto LABEL_20;
                }
                unint64_t v14 = v5[v10];
                ++v15;
                if (v14) {
                  goto LABEL_19;
                }
              }
            }

            int64_t v10 = v15;
          }
        }

uint64_t sub_189050558()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(qword_18C4FC8B8);
  uint64_t result = sub_189067BE0();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0LL;
    uint64_t v31 = (void *)(v2 + 56);
    uint64_t v6 = 1LL << *(_BYTE *)(v2 + 32);
    if (v6 < 64) {
      uint64_t v7 = ~(-1LL << v6);
    }
    else {
      uint64_t v7 = -1LL;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v30 = (unint64_t)(v6 + 63) >> 6;
    uint64_t v9 = result + 56;
    while (1)
    {
      if (v8)
      {
        unint64_t v12 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v13 = v12 | (v5 << 6);
      }

      else
      {
        int64_t v14 = v5 + 1;
        if (__OFADD__(v5, 1LL))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }

        uint64_t result = v2 + 56;
        if (v14 >= v30) {
          goto LABEL_34;
        }
        unint64_t v15 = v31[v14];
        ++v5;
        if (!v15)
        {
          int64_t v5 = v14 + 1;
          if (v14 + 1 >= v30) {
            goto LABEL_34;
          }
          unint64_t v15 = v31[v5];
          if (!v15)
          {
            int64_t v16 = v14 + 2;
            if (v16 >= v30)
            {
LABEL_34:
              uint64_t v29 = 1LL << *(_BYTE *)(v2 + 32);
              if (v29 > 63) {
                bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8LL);
              }
              else {
                *uint64_t v31 = -1LL << v29;
              }
              uint64_t v1 = v0;
              *(void *)(v2 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 0LL;
              break;
            }

            unint64_t v15 = v31[v16];
            if (!v15)
            {
              while (1)
              {
                int64_t v5 = v16 + 1;
                if (__OFADD__(v16, 1LL)) {
                  goto LABEL_40;
                }
                if (v5 >= v30) {
                  goto LABEL_34;
                }
                unint64_t v15 = v31[v5];
                ++v16;
                if (v15) {
                  goto LABEL_21;
                }
              }
            }

            int64_t v5 = v16;
          }
        }

uint64_t sub_189050848()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C761150);
  uint64_t result = sub_189067BE0();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0LL;
    uint64_t v6 = (void *)(v2 + 56);
    uint64_t v7 = 1LL << *(_BYTE *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1LL << v7);
    }
    else {
      uint64_t v8 = -1LL;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }

      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1LL))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }

        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                uint64_t v26 = 1LL << *(_BYTE *)(v2 + 32);
                if (v26 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8LL);
                }
                else {
                  *uint64_t v6 = -1LL << v26;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 0LL;
                break;
              }

              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1LL)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }

              int64_t v5 = v17;
            }
          }
        }

unint64_t sub_189050AF0(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  if (a3 >> 6)
  {
    sub_18906803C();
    if (a3 >> 6 == 1)
    {
      sub_1890677A8();
      sub_189068048();
    }
  }

  else
  {
    sub_18906803C();
    swift_bridgeObjectRetain();
    sub_1890677A8();
    sub_189068048();
    sub_188FFD504(a1, a2, a3);
  }

  sub_189068060();
  unint64_t result = sub_189067B74();
  *(void *)(a4 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << result;
  uint64_t v9 = *(void *)(a4 + 48) + 24 * result;
  *(void *)uint64_t v9 = a1;
  *(void *)(v9 + 8) = a2;
  *(_BYTE *)(v9 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = a3;
  ++*(void *)(a4 + 16);
  return result;
}

unint64_t sub_189050C54(uint64_t a1, uint64_t a2)
{
  unint64_t result = sub_189067B74();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

uint64_t sub_189050CF4(uint64_t result, uint64_t a2, int a3, unint64_t a4, char a5)
{
  uint64_t v9 = result;
  unint64_t v10 = *(void *)(*v5 + 16);
  unint64_t v11 = *(void *)(*v5 + 24);
  if (v11 > v10 && (a5 & 1) != 0) {
    goto LABEL_48;
  }
  if ((a5 & 1) != 0)
  {
    sub_189050398();
  }

  else
  {
    if (v11 > v10)
    {
      unint64_t result = (uint64_t)sub_189051314();
      goto LABEL_48;
    }

    sub_189051800();
  }

  uint64_t v12 = *v5;
  sub_189068030();
  int v13 = a3 >> 6;
  if (a3 >> 6)
  {
    sub_18906803C();
    if (v13 == 1)
    {
      sub_1890677A8();
      sub_189068048();
    }
  }

  else
  {
    sub_18906803C();
    swift_bridgeObjectRetain();
    sub_1890677A8();
    sub_189068048();
    sub_188FFD504(v9, a2, a3);
  }

  unint64_t result = sub_189068060();
  uint64_t v14 = -1LL << *(_BYTE *)(v12 + 32);
  a4 = result & ~v14;
  if (((*(void *)(v12 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> a4) & 1) != 0)
  {
    uint64_t v15 = ~v14;
    BOOL v17 = v9 == 1 && a2 == 0;
    if (a3 == 128)
    {
      BOOL v18 = (a2 | v9) != 0;
    }

    else
    {
      BOOL v17 = 0;
      BOOL v18 = 1;
    }

    BOOL v19 = v13 == 2 && v17;
    char v20 = v13 != 2 || v18;
    char v30 = v20;
    BOOL v31 = v19;
    do
    {
      uint64_t v21 = *(void *)(v12 + 48) + 24 * a4;
      unint64_t result = *(void *)v21;
      uint64_t v22 = *(void *)(v21 + 8);
      unsigned int v23 = *(unsigned __int8 *)(v21 + 16);
      if (v23 >> 6)
      {
        if (v23 >> 6 != 1)
        {
          if (v22 | result || v23 != 128)
          {
            unint64_t result = sub_188FFD504(1LL, 0LL, 128);
            if (v31) {
              goto LABEL_47;
            }
          }

          else
          {
            unint64_t result = sub_188FFD504(0LL, 0LL, 128);
            if ((v30 & 1) == 0) {
              goto LABEL_47;
            }
          }

          goto LABEL_30;
        }

        if (v13 != 1) {
          goto LABEL_30;
        }
      }

      else if (a3 >= 0x40u)
      {
        goto LABEL_30;
      }

      BOOL v24 = result == v9 && v22 == a2;
      if (v24 || (unint64_t result = sub_189067F10(), (result & 1) != 0))
      {
        if (((a3 ^ v23) & 1) == 0)
        {
LABEL_47:
          unint64_t result = sub_189067FB8();
          __break(1u);
          break;
        }
      }

LABEL_48:
  uint64_t v25 = *v32;
  *(void *)(*v32 + 8 * (a4 >> 6) + 56) |= 1LL << a4;
  uint64_t v26 = *(void *)(v25 + 48) + 24 * a4;
  *(void *)uint64_t v26 = v9;
  *(void *)(v26 + 8) = a2;
  *(_BYTE *)(v26 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = a3;
  uint64_t v27 = *(void *)(v25 + 16);
  BOOL v28 = __OFADD__(v27, 1LL);
  uint64_t v29 = v27 + 1;
  if (v28) {
    __break(1u);
  }
  else {
    *(void *)(v25 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v29;
  }
  return result;
}

uint64_t sub_189050FE8(uint64_t result, uint64_t a2, __int16 a3, unint64_t a4, char a5)
{
  char v7 = a3;
  uint64_t v9 = result;
  unint64_t v11 = *(void *)(*v5 + 16);
  unint64_t v12 = *(void *)(*v5 + 24);
  if (v12 > v11 && (a5 & 1) != 0) {
    goto LABEL_24;
  }
  if ((a5 & 1) != 0)
  {
    sub_189050558();
  }

  else
  {
    if (v12 > v11)
    {
      unint64_t result = (uint64_t)sub_1890514BC();
      goto LABEL_24;
    }

    sub_1890519C0();
  }

  uint64_t v13 = *v5;
  sub_189068030();
  if ((a3 & 0x100) == 0)
  {
    sub_18906803C();
    sub_18906803C();
    if ((a3 & 1) == 0) {
      sub_18906803C();
    }
  }

  sub_18906803C();
  unint64_t result = sub_189068060();
  uint64_t v14 = -1LL << *(_BYTE *)(v13 + 32);
  a4 = result & ~v14;
  if (((*(void *)(v13 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> a4) & 1) != 0)
  {
    uint64_t v15 = ~v14;
    do
    {
      uint64_t v16 = *(void *)(v13 + 48) + 24 * a4;
      if ((*(_BYTE *)(v16 + 17) & 1) != 0)
      {
        if ((a3 & 0x100) != 0) {
          goto LABEL_23;
        }
      }

      else if ((a3 & 0x100) == 0 && *(void *)v16 == v9)
      {
        if ((*(_BYTE *)(v16 + 16) & 1) != 0)
        {
          if ((a3 & 1) != 0) {
            goto LABEL_23;
          }
        }

        else if ((a3 & 1) == 0 && *(void *)(v16 + 8) == a2)
        {
LABEL_23:
          unint64_t result = sub_189067FB8();
          __break(1u);
          break;
        }
      }

      a4 = (a4 + 1) & v15;
    }

    while (((*(void *)(v13 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> a4) & 1) != 0);
  }

uint64_t sub_1890511C4(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if ((a3 & 1) != 0)
  {
    sub_189050848();
  }

  else
  {
    if (v7 > v6)
    {
      unint64_t result = (uint64_t)sub_189051658();
      goto LABEL_14;
    }

    sub_189051CC0();
  }

  uint64_t v8 = *v3;
  sub_189068030();
  sub_18906803C();
  unint64_t result = sub_189068060();
  uint64_t v9 = -1LL << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> a2) & 1) != 0)
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(void *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      __swift_instantiateConcreteTypeFromMangledName(qword_18C4FC6B8);
      unint64_t result = sub_189067FB8();
      __break(1u);
    }

    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v10 + 8 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }

void *sub_189051314()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC7E8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_189067BD4();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }

  unint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1LL << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  int64_t v9 = 0LL;
  *(void *)(v4 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1LL << *(_BYTE *)(v2 + 32);
  uint64_t v11 = -1LL;
  if (v10 < 64) {
    uint64_t v11 = ~(-1LL << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }

    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1LL))
    {
      __break(1u);
      goto LABEL_28;
    }

    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }

void *sub_1890514BC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(qword_18C4FC8B8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_189067BD4();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }

  unint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1LL << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  int64_t v9 = 0LL;
  *(void *)(v4 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1LL << *(_BYTE *)(v2 + 32);
  uint64_t v11 = -1LL;
  if (v10 < 64) {
    uint64_t v11 = ~(-1LL << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }

    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1LL))
    {
      __break(1u);
      goto LABEL_28;
    }

    if (v21 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22) {
        break;
      }
    }

void *sub_189051658()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C761150);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_189067BD4();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }

  unint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1LL << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  int64_t v9 = 0LL;
  *(void *)(v4 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1LL << *(_BYTE *)(v2 + 32);
  uint64_t v11 = -1LL;
  if (v10 < 64) {
    uint64_t v11 = ~(-1LL << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }

    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1LL))
    {
      __break(1u);
      goto LABEL_30;
    }

    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }

unint64_t sub_189051800()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC7E8);
  uint64_t v3 = sub_189067BE0();
  if (!*(void *)(v2 + 16))
  {
LABEL_21:
    unint64_t result = swift_release();
    *uint64_t v1 = v3;
    return result;
  }

  uint64_t v20 = v1;
  uint64_t v4 = 1LL << *(_BYTE *)(v2 + 32);
  uint64_t v5 = v2 + 56;
  uint64_t v6 = -1LL;
  if (v4 < 64) {
    uint64_t v6 = ~(-1LL << v4);
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v8 = (unint64_t)(v4 + 63) >> 6;
  unint64_t result = swift_retain_n();
  int64_t v10 = 0LL;
  while (1)
  {
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      goto LABEL_6;
    }

    int64_t v17 = v10 + 1;
    if (__OFADD__(v10, 1LL))
    {
      __break(1u);
      goto LABEL_23;
    }

    if (v17 >= v8) {
      goto LABEL_20;
    }
    unint64_t v18 = *(void *)(v5 + 8 * v17);
    ++v10;
    if (!v18)
    {
      int64_t v10 = v17 + 1;
      if (v17 + 1 >= v8) {
        goto LABEL_20;
      }
      unint64_t v18 = *(void *)(v5 + 8 * v10);
      if (!v18) {
        break;
      }
    }

uint64_t sub_1890519C0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(qword_18C4FC8B8);
  uint64_t result = sub_189067BE0();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_36:
    *uint64_t v1 = v4;
    return result;
  }

  int64_t v5 = 0LL;
  uint64_t v29 = v2 + 56;
  uint64_t v6 = 1LL << *(_BYTE *)(v2 + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1LL << v6);
  }
  else {
    uint64_t v7 = -1LL;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v30 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v9 = result + 56;
  while (v8)
  {
    unint64_t v12 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v13 = v12 | (v5 << 6);
LABEL_22:
    uint64_t v17 = *(void *)(v2 + 48) + 24 * v13;
    uint64_t v18 = *(void *)v17;
    uint64_t v19 = *(void *)(v17 + 8);
    char v20 = *(_BYTE *)(v17 + 16);
    char v21 = *(_BYTE *)(v17 + 17);
    sub_189068030();
    if ((v21 & 1) == 0)
    {
      sub_18906803C();
      sub_18906803C();
      if ((v20 & 1) == 0) {
        sub_18906803C();
      }
    }

    sub_18906803C();
    uint64_t result = sub_189068060();
    uint64_t v22 = -1LL << *(_BYTE *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1LL << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v10 = __clz(__rbit64((-1LL << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0LL;
    }

    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_37;
        }

        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0LL;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }

      while (v28 == -1);
      unint64_t v10 = __clz(__rbit64(~v28)) + (v24 << 6);
    }

    *(void *)(v9 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v10;
    uint64_t v11 = *(void *)(v4 + 48) + 24 * v10;
    *(void *)uint64_t v11 = v18;
    *(void *)(v11 + 8) = v19;
    *(_BYTE *)(v11 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v20;
    *(_BYTE *)(v11 + 17) = v21;
    ++*(void *)(v4 + 16);
  }

  int64_t v14 = v5 + 1;
  if (__OFADD__(v5, 1LL))
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }

  if (v14 >= v30) {
    goto LABEL_34;
  }
  unint64_t v15 = *(void *)(v29 + 8 * v14);
  ++v5;
  if (v15) {
    goto LABEL_21;
  }
  int64_t v5 = v14 + 1;
  if (v14 + 1 >= v30) {
    goto LABEL_34;
  }
  unint64_t v15 = *(void *)(v29 + 8 * v5);
  if (v15)
  {
LABEL_21:
    unint64_t v8 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v5 << 6);
    goto LABEL_22;
  }

  int64_t v16 = v14 + 2;
  if (v16 >= v30)
  {
LABEL_34:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_36;
  }

  unint64_t v15 = *(void *)(v29 + 8 * v16);
  if (v15)
  {
    int64_t v5 = v16;
    goto LABEL_21;
  }

  while (1)
  {
    int64_t v5 = v16 + 1;
    if (__OFADD__(v16, 1LL)) {
      break;
    }
    if (v5 >= v30) {
      goto LABEL_34;
    }
    unint64_t v15 = *(void *)(v29 + 8 * v5);
    ++v16;
    if (v15) {
      goto LABEL_21;
    }
  }

uint64_t sub_189051C8C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_189051CC0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C761150);
  uint64_t result = sub_189067BE0();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }

  int64_t v5 = 0LL;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1LL << *(_BYTE *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1LL << v7);
  }
  else {
    uint64_t v8 = -1LL;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }

    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1LL))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }

    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }

uint64_t destroy for Name(uint64_t a1)
{
  return sub_188FFCF98(*(void *)a1, *(void *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s22ArgumentParserInternal4NameOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(_BYTE *)(a2 + 16);
  sub_188FFCF80(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for Name(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(_BYTE *)(a2 + 16);
  sub_188FFCF80(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v5;
  sub_188FFCF98(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for Name(uint64_t a1, uint64_t a2)
{
  char v3 = *(_BYTE *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v3;
  sub_188FFCF98(v4, v5, v6);
  return a1;
}

uint64_t sub_189052038(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16) >> 6;
}

uint64_t sub_189052044(uint64_t result, char a2)
{
  *(_BYTE *)(result + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = *(_BYTE *)(result + 16) & 1 | (a2 << 6);
  return result;
}

ValueMetadata *type metadata accessor for Name()
{
  return &type metadata for Name;
}

unint64_t sub_18905206C()
{
  unint64_t result = qword_18C4FC628;
  if (!qword_18C4FC628)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&unk_18906ACDC, &type metadata for Name);
    atomic_store(result, (unint64_t *)&qword_18C4FC628);
  }

  return result;
}

uint64_t sub_1890520B0(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (!(a3 >> 6))
  {
    uint64_t v3 = 11565LL;
LABEL_6:
    uint64_t v5 = v3;
    sub_18906788C();
    return v5;
  }

  if (a3 >> 6 != 1)
  {
    uint64_t v3 = 45LL;
    goto LABEL_6;
  }

  uint64_t v5 = 0LL;
  sub_18906788C();
  sub_1890677B4();
  return v5;
}

uint64_t sub_189052158(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 >> 6 && a3 >> 6 == 1)
  {
    sub_18906803C();
    sub_1890677A8();
    sub_189068048();
  }

  else
  {
    sub_18906803C();
    sub_1890677A8();
  }

  return sub_189068060();
}

uint64_t sub_189052208(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  unsigned __int8 v4 = *(_BYTE *)(a2 + 16);
  uint64_t v5 = sub_1890520B0(*(void *)a1, *(void *)(a1 + 8), *(_BYTE *)(a1 + 16));
  uint64_t v7 = v6;
  if (v5 == sub_1890520B0(v2, v3, v4) && v7 == v8) {
    char v10 = 0;
  }
  else {
    char v10 = sub_189067F10();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10 & 1;
}

uint64_t sub_1890522B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  unsigned __int8 v4 = *(_BYTE *)(a1 + 16);
  uint64_t v5 = sub_1890520B0(*(void *)a2, *(void *)(a2 + 8), *(_BYTE *)(a2 + 16));
  uint64_t v7 = v6;
  if (v5 == sub_1890520B0(v2, v3, v4) && v7 == v8)
  {
    swift_bridgeObjectRelease_n();
    char v11 = 1;
  }

  else
  {
    char v10 = sub_189067F10();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v11 = v10 ^ 1;
  }

  return v11 & 1;
}

uint64_t sub_189052364(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  unsigned __int8 v4 = *(_BYTE *)(a2 + 16);
  uint64_t v5 = sub_1890520B0(*(void *)a1, *(void *)(a1 + 8), *(_BYTE *)(a1 + 16));
  uint64_t v7 = v6;
  if (v5 == sub_1890520B0(v2, v3, v4) && v7 == v8)
  {
    swift_bridgeObjectRelease_n();
    char v11 = 1;
  }

  else
  {
    char v10 = sub_189067F10();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v11 = v10 ^ 1;
  }

  return v11 & 1;
}

uint64_t sub_189052418(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  unsigned __int8 v4 = *(_BYTE *)(a1 + 16);
  uint64_t v5 = sub_1890520B0(*(void *)a2, *(void *)(a2 + 8), *(_BYTE *)(a2 + 16));
  uint64_t v7 = v6;
  if (v5 == sub_1890520B0(v2, v3, v4) && v7 == v8) {
    char v10 = 0;
  }
  else {
    char v10 = sub_189067F10();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10 & 1;
}

uint64_t sub_1890524C0(uint64_t a1, uint64_t a2)
{
  return sub_1890527C4( *(void *)a1,  *(void *)(a1 + 8),  *(_BYTE *)(a1 + 16),  *(void *)a2,  *(void *)(a2 + 8),  *(_BYTE *)(a2 + 16));
}

uint64_t sub_1890524DC()
{
  return sub_189052158(*(void *)v0, *(void *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

uint64_t sub_1890524E8()
{
  if (*(unsigned __int8 *)(v0 + 16) >> 6 == 1)
  {
    sub_18906803C();
    sub_1890677A8();
    return sub_189068048();
  }

  else
  {
    sub_18906803C();
    return sub_1890677A8();
  }

uint64_t sub_189052588()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + 16);
  sub_189068030();
  sub_18906803C();
  sub_1890677A8();
  if (v1 >> 6 == 1) {
    sub_189068048();
  }
  return sub_189068060();
}

BOOL sub_189052630(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v5 = a4 >> 14;
  swift_bridgeObjectRetain();
  if (v5 == a3 >> 14)
  {
LABEL_10:
    sub_1890678A4();
    uint64_t v14 = v13;
    swift_bridgeObjectRelease();
    BOOL v15 = v14 == 0;
  }

  else
  {
    swift_bridgeObjectRetain();
    while (1)
    {
      while (1)
      {
        uint64_t v7 = sub_189067AF0();
        uint64_t v9 = v8;
        unint64_t v10 = sub_189067AC0();
        uint64_t v11 = sub_1890678A4();
        if (!v12)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          BOOL v15 = 1LL;
          goto LABEL_13;
        }

        if (v7 != v11 || v12 != v9) {
          break;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v5 == v10 >> 14)
        {
LABEL_9:
          swift_bridgeObjectRelease();
          goto LABEL_10;
        }
      }

      char v6 = sub_189067F10();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v6 & 1) == 0) {
        break;
      }
      if (v5 == v10 >> 14) {
        goto LABEL_9;
      }
    }

    swift_bridgeObjectRelease();
    BOOL v15 = 0LL;
  }

uint64_t sub_1890527C4( uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a3 >> 6)
  {
    if (a3 >> 6 == 1)
    {
      if ((a6 & 0xC0) == 0x40)
      {
        if (a1 == a4 && a2 == a5 || (char v8 = sub_189067F10(), v9 = 0, (v8 & 1) != 0)) {
          char v9 = ((a3 & 1) == 0) ^ a6;
        }
        return v9 & 1;
      }

      goto LABEL_13;
    }

    if ((a6 & 0xC0) != 0x80)
    {
LABEL_13:
      char v9 = 0;
      return v9 & 1;
    }
  }

  else if (a6 >= 0x40u)
  {
    goto LABEL_13;
  }

  if (a1 == a4 && a2 == a5)
  {
    char v9 = 1;
    return v9 & 1;
  }

  return sub_189067F10();
}

uint64_t sub_189052888(unint64_t a1, unint64_t a2)
{
  if (sub_189052630(11565LL, 0xE200000000000000LL, a1, a2))
  {
    unint64_t v4 = sub_189067AD8();
    if ((v5 & 1) != 0) {
      unint64_t v4 = a2;
    }
    if (a2 >> 14 >= v4 >> 14)
    {
LABEL_12:
      uint64_t v10 = sub_189067B08();
      uint64_t v12 = v11;
      uint64_t v14 = v13;
      uint64_t v16 = v15;
      swift_bridgeObjectRelease();
      uint64_t v7 = MEMORY[0x1895DC8B4](v10, v12, v14, v16);
      goto LABEL_13;
    }

    __break(1u);
    goto LABEL_15;
  }

  swift_bridgeObjectRetain();
  uint64_t v6 = sub_189067AE4();
  swift_bridgeObjectRelease();
  if (v6 != 2)
  {
    unint64_t v8 = sub_189067AD8();
    if ((v9 & 1) != 0) {
      unint64_t v8 = a2;
    }
    if (a2 >> 14 >= v8 >> 14) {
      goto LABEL_12;
    }
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }

  if ((a2 ^ a1) >= 0x4000)
  {
    sub_189067ACC();
    uint64_t v7 = sub_189067AF0();
LABEL_13:
    swift_bridgeObjectRelease();
    return v7;
  }

uint64_t sub_189052A98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int16 a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v6 = *v4;
  uint64_t v7 = v4[1];
  uint64_t result = sub_189055910(a1, a2, a3 & 0x1FF, *v4, v7);
  int64x2_t v9 = 0uLL;
  if ((v10 & 1) != 0) {
    goto LABEL_16;
  }
  if (v7 < 0)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }

  int64_t v11 = result;
  int64_t v12 = *(void *)(v6 + 16);
  if (result >= v7)
  {
    if (result != v12)
    {
      uint64_t v14 = v6 + (result << 6) + 48;
      while (1)
      {
        if (v11 >= v12)
        {
          __break(1u);
          goto LABEL_19;
        }

        if ((*(_BYTE *)(v14 + 40) & 1) != 0) {
          break;
        }
        ++v11;
        v14 += 64LL;
        if (v12 == v11) {
          goto LABEL_16;
        }
      }

      if ((*(void *)v14 & 0x6000000000000000LL) != 0x2000000000000000LL) {
        goto LABEL_16;
      }
      uint64_t v15 = *(void *)(v14 - 16);
      uint64_t v16 = *(void *)(v14 - 8);
      uint64_t v17 = *(void *)(v14 + 24);
      int64x2_t v18 = vdupq_n_s64(1uLL);
      v18.i64[0] = *(void *)(v14 + 32);
      int64x2_t v19 = v18;
      sub_1890411A8(v15, v16, *(void *)v14);
      uint64_t result = sub_189054654((uint64_t)v4, v11);
      int64x2_t v9 = v19;
      goto LABEL_17;
    }

uint64_t sub_189052BB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int16 a3@<W2>, void *a4@<X8>)
{
  uint64_t v6 = *v4;
  uint64_t v7 = v4[1];
  uint64_t result = sub_189055910(a1, a2, a3 & 0x1FF, *v4, v7);
  if ((v9 & 1) != 0) {
    goto LABEL_16;
  }
  if (v7 < 0)
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }

  int64_t v10 = result;
  int64_t v11 = *(void *)(v6 + 16);
  if (result < v7) {
    goto LABEL_25;
  }
  if (result == v11)
  {
LABEL_16:
    uint64_t v15 = 0LL;
    uint64_t v16 = 0LL;
    uint64_t v17 = 0LL;
    uint64_t v18 = 0LL;
    uint64_t v19 = 0LL;
    goto LABEL_17;
  }

  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v13 = v6 + (v10 << 6) + 48;
  while (1)
  {
    if (v10 >= v11)
    {
      __break(1u);
      goto LABEL_23;
    }

    uint64_t v14 = (*(void *)v13 >> 61) & 3LL;
    if ((_DWORD)v14) {
      break;
    }
LABEL_10:
    ++v10;
    v13 += 64LL;
    if (v11 == v10)
    {
      uint64_t result = swift_bridgeObjectRelease();
      goto LABEL_16;
    }
  }

  if ((_DWORD)v14 == 2)
  {
    uint64_t result = sub_1890411F4(*(void *)(v13 - 16), *(void *)(v13 - 8), *(void *)v13);
    goto LABEL_10;
  }

  uint64_t result = swift_bridgeObjectRelease();
  int64_t v20 = *(void *)(v6 + 16);
  if (v20 < v7) {
    goto LABEL_26;
  }
  if (v10 >= v20)
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    return result;
  }

  unint64_t v21 = *(void *)v13;
  if ((*(void *)v13 & 0x6000000000000000LL) != 0x2000000000000000LL) {
    goto LABEL_28;
  }
  uint64_t v18 = *(void *)(v13 - 16);
  uint64_t v19 = *(void *)(v13 - 8);
  uint64_t v17 = *(unsigned __int8 *)(v13 + 40);
  uint64_t v22 = v13 + 24;
  uint64_t v15 = *(void *)(v13 + 24);
  uint64_t v16 = *(void *)(v22 + 8);
  sub_1890411A8(v18, v19, v21);
  uint64_t result = sub_189054654((uint64_t)v4, v10);
LABEL_17:
  *a4 = v15;
  a4[1] = v16;
  a4[2] = v17;
  a4[3] = v18;
  a4[4] = v19;
  return result;
}

uint64_t sub_189052D24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int16 a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v6 = *v4;
  uint64_t v7 = v4[1];
  uint64_t result = sub_189055910(a1, a2, a3 & 0x1FF, *v4, v7);
  int64x2_t v9 = 0uLL;
  if ((v10 & 1) != 0) {
    goto LABEL_13;
  }
  if (v7 < 0)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    return result;
  }

  int64_t v11 = *(void *)(v6 + 16);
  if (result < v7) {
    goto LABEL_21;
  }
  if (result != v11)
  {
    uint64_t v13 = (_BYTE *)(v6 + (result << 6) + 88);
    while (1)
    {
      if (result >= v11)
      {
        __break(1u);
        goto LABEL_19;
      }

      if ((*v13 & 1) != 0) {
        break;
      }
      ++result;
      v13 += 64;
      if (v11 == result) {
        goto LABEL_13;
      }
    }

    unint64_t v14 = *((void *)v13 - 2);
    uint64_t v16 = *((void *)v13 - 1);
    uint64_t result = sub_1890547B4(v14, v16, 1);
    if ((v14 & 0x8000000000000000LL) != 0) {
      goto LABEL_22;
    }
    uint64_t v17 = v4[2];
    if (v14 < *(void *)(v17 + 16))
    {
      uint64_t v15 = *(void *)(v17 + 16 * v14 + 32);
      uint64_t result = swift_bridgeObjectRetain();
      int64x2_t v9 = vdupq_n_s64(1uLL);
      v9.i64[0] = v16;
      goto LABEL_14;
    }

    goto LABEL_23;
  }

uint64_t sub_189052E2C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1[1];
  uint64_t v4 = *(void *)(*v1 + 16LL);
  if (v4 < v3)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }

  if (v3 < 0)
  {
LABEL_13:
    __break(1u);
    return result;
  }

  __int128 v5 = 0uLL;
  if (v3 != v4)
  {
    uint64_t v6 = *v1 + (v3 << 6) + 48;
    while (v3 < v4)
    {
      if ((*(void *)v6 & 0x6000000000000000LL) == 0x2000000000000000LL)
      {
        uint64_t v8 = *(void *)(v6 - 16);
        uint64_t v9 = *(void *)(v6 - 8);
        __int128 v11 = *(_OWORD *)(v6 + 24);
        uint64_t v7 = *(unsigned __int8 *)(v6 + 40);
        sub_1890411A8(v8, v9, *(void *)v6);
        uint64_t result = sub_189054950(v3);
        __int128 v5 = v11;
        goto LABEL_10;
      }

      ++v3;
      v6 += 64LL;
      if (v4 == v3) {
        goto LABEL_8;
      }
    }

    __break(1u);
    goto LABEL_12;
  }

uint64_t sub_189052F08(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(result + 16);
  if (v3 < a2)
  {
    __break(1u);
    goto LABEL_17;
  }

  if (a2 < 0)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }

  uint64_t v6 = result;
  uint64_t v7 = v3 - a2;
  if (v3 == a2)
  {
    uint64_t v8 = (char *)MEMORY[0x18961AFE8];
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_189055B08(v6 + 32, a2, (2 * v3) | 1, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_189055D10(v13, a3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v14;
  }

  if (v3 > (unint64_t)a2)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = (_BYTE *)(v6 + (a2 << 6) + 88);
    uint64_t v8 = (char *)MEMORY[0x18961AFE8];
    do
    {
      if (*v9 == 1)
      {
        uint64_t v10 = *((void *)v9 - 2);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v8 = sub_1890575BC(0LL, *((void *)v8 + 2) + 1LL, 1, v8);
        }
        unint64_t v12 = *((void *)v8 + 2);
        unint64_t v11 = *((void *)v8 + 3);
        if (v12 >= v11 >> 1) {
          uint64_t v8 = sub_1890575BC((char *)(v11 > 1), v12 + 1, 1, v8);
        }
        *((void *)v8 + 2) = v12 + 1;
        *(void *)&v8[8 * v12 + 32] = v10;
      }

      v9 += 64;
      --v7;
    }

    while (v7);
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }

uint64_t sub_1890530B0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  if ((a2 & 0x2000000000000000LL) != 0) {
    uint64_t v6 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v6 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v6)
  {
LABEL_11:
    unint64_t v11 = sub_189067844();
    if (v11 < 2)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC890);
      unint64_t v3 = swift_allocObject();
      *(_OWORD *)(v3 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = xmmword_1890684B0;
      *(void *)(v3 + 32) = a1;
      *(void *)(v3 + 40) = a2;
      *(void *)(v3 + 48) = 0x2000000000000000LL;
      *(void *)(v3 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = 0LL;
      *(void *)(v3 + 64) = 0LL;
      *(void *)(v3 + 72) = a3;
      *(void *)(v3 + 80) = 0LL;
      *(_BYTE *)(v3 + 88) = 1;
      swift_bridgeObjectRetain();
      return v3;
    }

    if (v11 != 2) {
      goto LABEL_25;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC890);
    uint64_t v12 = swift_allocObject();
    unint64_t v3 = v12;
    *(_OWORD *)(v12 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = xmmword_1890684B0;
    *(void *)(v12 + 32) = 0LL;
    *(void *)(v12 + 40) = 0LL;
    *(void *)(v12 + 48) = 0x4000000000000000LL;
    *(void *)(v12 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = 0LL;
    *(void *)(v12 + 64) = 0LL;
    *(void *)(v12 + 72) = a3;
    goto LABEL_15;
  }

  unint64_t v7 = 0LL;
  unint64_t v8 = 4 * v6;
  unint64_t v3 = 15LL;
  while (1)
  {
    if (sub_189067904() == 45 && v10 == 0xE100000000000000LL)
    {
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }

    char v9 = sub_189067F10();
    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0) {
      break;
    }
LABEL_7:
    unint64_t v3 = sub_189067850();
    unint64_t v7 = v3 >> 14;
    if (v3 >> 14 == v8) {
      goto LABEL_11;
    }
  }

  uint64_t v13 = sub_1890678E0();
  if (v8 < v7)
  {
    __break(1u);
    goto LABEL_46;
  }

  uint64_t v14 = v13;
  uint64_t v15 = sub_189067928();
  uint64_t v19 = v18;
  if (v14 == 1)
  {
    unint64_t v20 = v15;
    unint64_t v21 = v16;
    uint64_t v22 = v17;
    swift_bridgeObjectRetain();
    sub_1890552C0(v20, v21, v22, v19, v53);
    if (v50)
    {
LABEL_21:
      swift_bridgeObjectRelease();
      return v3;
    }

    uint64_t v47 = v53[0];
    uint64_t v48 = v53[1];
    uint64_t v27 = v53[3];
    uint64_t v51 = v53[2];
    uint64_t v28 = v53[4];
    sub_189041240((uint64_t)v53, (uint64_t)&v56);
    if (v57 < 0)
    {
      v57 &= ~0x8000000000000000LL;
    }

    else
    {
      sub_18904127C(&v56, &v58);
      sub_18904127C(&v58, &v59);
      if (v60 >> 6 > 1u)
      {
        v60 &= 0x3Fu;
        sub_188FFCF80(v47, v48, v51);
        uint64_t v29 = sub_18903A730();
        sub_1890412B8(v53);
        goto LABEL_33;
      }

      v60 &= 0x3Fu;
    }

    uint64_t v29 = MEMORY[0x18961AFE8];
LABEL_33:
    uint64_t v30 = *(void *)(v29 + 16);
    if (v30)
    {
      if (v30 != 1)
      {
        swift_bridgeObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC890);
        unint64_t v3 = swift_allocObject();
        *(_OWORD *)(v3 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = xmmword_1890684B0;
        *(void *)(v3 + 32) = v47;
        *(void *)(v3 + 40) = v48;
        *(void *)(v3 + 48) = v51;
        *(void *)(v3 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = v27;
        *(void *)(v3 + 64) = v28;
        *(void *)(v3 + 72) = a3;
        *(void *)(v3 + 80) = 0LL;
        *(_BYTE *)(v3 + 88) = 1;
        uint64_t v35 = *(void *)(v29 + 16);
        if (v35)
        {
          char v36 = (uint64_t *)(v29 + 72);
          do
          {
            uint64_t v37 = *(v36 - 4);
            uint64_t v49 = *(v36 - 5);
            uint64_t v38 = *(v36 - 3);
            uint64_t v39 = *(v36 - 2);
            uint64_t v40 = *(v36 - 1);
            uint64_t v41 = *v36;
            sub_1890411C8(v37, v38, v39);
            unint64_t v43 = *(void *)(v3 + 16);
            unint64_t v42 = *(void *)(v3 + 24);
            unint64_t v44 = v43 + 1;
            if (v43 >= v42 >> 1)
            {
              int64_t v46 = sub_1890572A8((char *)(v42 > 1), v43 + 1, 1, (char *)v3);
              unint64_t v44 = v43 + 1;
              unint64_t v3 = (unint64_t)v46;
            }

            v36 += 6;
            *(void *)(v3 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v44;
            unint64_t v45 = v3 + (v43 << 6);
            *(void *)(v45 + 32) = v37;
            *(void *)(v45 + 40) = v38;
            *(void *)(v45 + 48) = v39;
            *(void *)(v45 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = v40;
            *(void *)(v45 + 64) = v41;
            *(void *)(v45 + 72) = a3;
            *(void *)(v45 + 80) = v49;
            *(_BYTE *)(v45 + 88) = 0;
            --v35;
          }

          while (v35);
        }

        goto LABEL_21;
      }

      sub_1890412B8(v53);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC890);
      uint64_t v31 = swift_allocObject();
      *(_OWORD *)(v31 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = xmmword_1890684B0;
      if ((v20 ^ v21) >> 14)
      {
        unint64_t v3 = v31;
        uint64_t v32 = sub_189067AF0();
        uint64_t v34 = v33;
        swift_bridgeObjectRelease();
        *(void *)(v3 + 32) = v32;
        *(void *)(v3 + 40) = v34;
        *(void *)(v3 + 48) = 64LL;
        *(void *)(v3 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = 0LL;
        *(void *)(v3 + 64) = 0LL;
LABEL_24:
        *(void *)(v3 + 72) = a3;
        *(void *)(v3 + 80) = 0LL;
        *(_BYTE *)(v3 + 88) = 1;
        return v3;
      }

unint64_t sub_1890536E0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  unint64_t v6 = sub_1890170E8(61LL, 0xE100000000000000LL, a1, a2);
  if ((v7 & 1) != 0)
  {
    uint64_t v9 = HIBYTE(a2) & 0xF;
    if ((a2 & 0x2000000000000000LL) == 0) {
      uint64_t v9 = a1;
    }
    uint64_t v10 = v9 << 16;
    if ((a2 & 0x1000000000000000LL) == 0 || (a1 & 0x800000000000000LL) != 0) {
      unint64_t v8 = v10 | 7;
    }
    else {
      unint64_t v8 = v10 | 0xB;
    }
  }

  else
  {
    unint64_t v8 = v6;
  }

  unint64_t v11 = sub_189067928();
  unint64_t v13 = v12;
  sub_189014B84(v8, a1, a2);
  unint64_t v15 = v14;
  unint64_t result = sub_189067AD8();
  if ((v17 & 1) != 0) {
    unint64_t result = v15;
  }
  if (v15 >> 14 < result >> 14)
  {
    __break(1u);
  }

  else
  {
    uint64_t v18 = sub_189067B08();
    unint64_t v20 = v19;
    uint64_t v22 = v21;
    uint64_t v24 = v23;
    swift_bridgeObjectRelease();
    uint64_t v25 = sub_189052888(v11, v13);
    uint64_t v27 = v26;
    unsigned __int8 v29 = v28;
    if ((v18 ^ v20) >> 14)
    {
      uint64_t v30 = MEMORY[0x1895DC8B4](v18, v20, v22, v24);
      uint64_t v31 = v33;
      swift_bridgeObjectRelease();
      unint64_t result = swift_bridgeObjectRelease();
      unint64_t v32 = v29 | 0x8000000000000000LL;
    }

    else
    {
      swift_bridgeObjectRelease();
      unint64_t result = swift_bridgeObjectRelease();
      uint64_t v30 = 0LL;
      uint64_t v31 = 0LL;
      unint64_t v32 = v29;
    }

    *a3 = v25;
    a3[1] = v27;
    a3[2] = v32;
    a3[3] = v30;
    a3[4] = v31;
  }

  return result;
}

unint64_t sub_1890538A8()
{
  unsigned __int8 v1 = v8;
  if (v8 < 0)
  {
    v8 &= ~0x8000000000000000LL;
    v10.n128_u64[0] = sub_1890520B0(v7.n128_i64[0], v7.n128_i64[1], v1);
    v10.n128_u64[1] = v3;
    sub_18906788C();
    sub_18906788C();
    return v10.n128_u64[0];
  }

  sub_18904127C(&v7, &v9);
  sub_18904127C(&v9, &v10);
  int v2 = v11 >> 6;
  if (!v2)
  {
    v11 &= 0x3Fu;
    uint64_t v5 = 11565LL;
LABEL_8:
    uint64_t v6 = v5;
    sub_18906788C();
    return v6;
  }

  if (v2 != 1)
  {
    v11 &= 0x3Fu;
    uint64_t v5 = 45LL;
    goto LABEL_8;
  }

  v11 &= 0x3Fu;
  uint64_t v6 = 0LL;
  sub_18906788C();
  sub_1890677B4();
  return v6;
}

uint64_t sub_1890539CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_189053A28( a1,  a2,  a3,  a4,  (void (*)(uint64_t, _BYTE *))sub_189041240,  (uint64_t (*)(_BYTE *, _BYTE *))sub_189054C58);
}

unint64_t sub_1890539E0()
{
  return sub_1890538A8();
}

uint64_t sub_189053A14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_189053A28( a1,  a2,  a3,  a4,  (void (*)(uint64_t, _BYTE *))sub_188FFCFB0,  (uint64_t (*)(_BYTE *, _BYTE *))sub_189054F14);
}

uint64_t sub_189053A28( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, _BYTE *), uint64_t (*a6)(_BYTE *, _BYTE *))
{
  return a6(v10, v11) & 1;
}

uint64_t sub_189053A80(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  int v6 = *(unsigned __int8 *)(a1 + 56);
  sub_189041240(a2, (uint64_t)v13);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v7 = *(void *)(a2 + 48);
  int v9 = *(unsigned __int8 *)(a2 + 56);
  if ((sub_189054F14((uint64_t)v12, (uint64_t)v13) & 1) != 0 && v5 == v8)
  {
    if (v6)
    {
      if ((v9 & 1) != 0) {
        return 1LL;
      }
    }

    else
    {
      if (v4 == v7) {
        int v11 = v9;
      }
      else {
        int v11 = 1;
      }
      if (v11 != 1) {
        return 1LL;
      }
    }
  }

  return 0LL;
}

uint64_t sub_189053B18()
{
  return sub_189068060();
}

uint64_t sub_189053B5C()
{
  return sub_18906803C();
}

uint64_t sub_189053B84()
{
  return sub_189068060();
}

BOOL sub_189053BC4(void *a1, void *a2)
{
  return *a1 < *a2;
}

BOOL sub_189053BD8(void *a1, void *a2)
{
  return *a2 >= *a1;
}

BOOL sub_189053BEC(void *a1, void *a2)
{
  return *a1 >= *a2;
}

BOOL sub_189053C00(void *a1, void *a2)
{
  return *a2 < *a1;
}

uint64_t sub_189053C14()
{
  char v1 = *(_BYTE *)(v0 + 8);
  sub_189068030();
  if ((v1 & 1) == 0) {
    sub_18906803C();
  }
  sub_18906803C();
  return sub_189068060();
}

uint64_t sub_189053C70()
{
  if ((*(_BYTE *)(v0 + 8) & 1) == 0) {
    sub_18906803C();
  }
  return sub_18906803C();
}

uint64_t sub_189053CB4()
{
  char v1 = *(_BYTE *)(v0 + 8);
  sub_189068030();
  if ((v1 & 1) == 0) {
    sub_18906803C();
  }
  sub_18906803C();
  return sub_189068060();
}

uint64_t sub_189053D10(uint64_t a1, uint64_t a2)
{
  char v2 = *(_BYTE *)(a2 + 8);
  if (*(_BYTE *)(a1 + 8) == 1)
  {
    if ((*(_BYTE *)(a2 + 8) & 1) == 0) {
      return 1LL;
    }
  }

  else
  {
    if (*(void *)a1 >= *(void *)a2) {
      char v2 = 1;
    }
    if ((v2 & 1) == 0) {
      return 1LL;
    }
  }

  return 0LL;
}

uint64_t sub_189053D48(uint64_t a1, uint64_t a2)
{
  char v2 = *(_BYTE *)(a1 + 8);
  if (*(_BYTE *)(a2 + 8) == 1)
  {
    if ((*(_BYTE *)(a1 + 8) & 1) == 0) {
      return 0LL;
    }
  }

  else
  {
    if (*(void *)a2 >= *(void *)a1) {
      char v2 = 1;
    }
    if ((v2 & 1) == 0) {
      return 0LL;
    }
  }

  return 1LL;
}

uint64_t sub_189053D80(uint64_t a1, uint64_t a2)
{
  char v2 = *(_BYTE *)(a2 + 8);
  if (*(_BYTE *)(a1 + 8) == 1)
  {
    if ((*(_BYTE *)(a2 + 8) & 1) == 0) {
      return 0LL;
    }
  }

  else
  {
    if (*(void *)a1 >= *(void *)a2) {
      char v2 = 1;
    }
    if ((v2 & 1) == 0) {
      return 0LL;
    }
  }

  return 1LL;
}

uint64_t sub_189053DB8(uint64_t a1, uint64_t a2)
{
  char v2 = *(_BYTE *)(a1 + 8);
  if (*(_BYTE *)(a2 + 8) == 1)
  {
    if ((*(_BYTE *)(a1 + 8) & 1) == 0) {
      return 1LL;
    }
  }

  else
  {
    if (*(void *)a2 >= *(void *)a1) {
      char v2 = 1;
    }
    if ((v2 & 1) == 0) {
      return 1LL;
    }
  }

  return 0LL;
}

BOOL sub_189053DF0(uint64_t a1, uint64_t a2)
{
  if (*(_BYTE *)(a1 + 8) == 1) {
    return (*(_BYTE *)(a2 + 8) & 1) != 0;
  }
  if ((*(_BYTE *)(a2 + 8) & 1) != 0) {
    return 0LL;
  }
  return *(void *)a1 == *(void *)a2;
}

uint64_t sub_189053E2C()
{
  char v1 = *(_BYTE *)(v0 + 16);
  sub_189068030();
  sub_18906803C();
  if ((v1 & 1) == 0) {
    sub_18906803C();
  }
  sub_18906803C();
  return sub_189068060();
}

uint64_t sub_189053E9C()
{
  char v1 = *(_BYTE *)(v0 + 16);
  sub_18906803C();
  if ((v1 & 1) == 0) {
    sub_18906803C();
  }
  return sub_18906803C();
}

uint64_t sub_189053EEC()
{
  char v1 = *(_BYTE *)(v0 + 16);
  sub_189068030();
  sub_18906803C();
  if ((v1 & 1) == 0) {
    sub_18906803C();
  }
  sub_18906803C();
  return sub_189068060();
}

uint64_t sub_189053F5C(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 < *(void *)a2) {
    return 1LL;
  }
  if (*(void *)a1 == *(void *)a2)
  {
    int v3 = *(unsigned __int8 *)(a2 + 16);
    if (*(_BYTE *)(a1 + 16))
    {
      if ((v3 & 1) == 0) {
        return 1LL;
      }
    }

    else
    {
      if (*(void *)(a1 + 8) >= *(void *)(a2 + 8)) {
        int v3 = 1;
      }
      if (v3 != 1) {
        return 1LL;
      }
    }
  }

  return 0LL;
}

uint64_t sub_189053FAC(uint64_t a1, uint64_t a2)
{
  if (*(void *)a2 < *(void *)a1) {
    return 0LL;
  }
  if (*(void *)a2 == *(void *)a1)
  {
    int v3 = *(unsigned __int8 *)(a1 + 16);
    if (*(_BYTE *)(a2 + 16))
    {
      if ((v3 & 1) == 0) {
        return 0LL;
      }
    }

    else
    {
      if (*(void *)(a2 + 8) >= *(void *)(a1 + 8)) {
        int v3 = 1;
      }
      if (v3 != 1) {
        return 0LL;
      }
    }
  }

  return 1LL;
}

uint64_t sub_189053FFC(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 < *(void *)a2) {
    return 0LL;
  }
  if (*(void *)a1 == *(void *)a2)
  {
    int v3 = *(unsigned __int8 *)(a2 + 16);
    if (*(_BYTE *)(a1 + 16))
    {
      if ((v3 & 1) == 0) {
        return 0LL;
      }
    }

    else
    {
      if (*(void *)(a1 + 8) >= *(void *)(a2 + 8)) {
        int v3 = 1;
      }
      if (v3 != 1) {
        return 0LL;
      }
    }
  }

  return 1LL;
}

uint64_t sub_18905404C(uint64_t a1, uint64_t a2)
{
  if (*(void *)a2 < *(void *)a1) {
    return 1LL;
  }
  if (*(void *)a2 == *(void *)a1)
  {
    int v3 = *(unsigned __int8 *)(a1 + 16);
    if (*(_BYTE *)(a2 + 16))
    {
      if ((v3 & 1) == 0) {
        return 1LL;
      }
    }

    else
    {
      if (*(void *)(a2 + 8) >= *(void *)(a1 + 8)) {
        int v3 = 1;
      }
      if (v3 != 1) {
        return 1LL;
      }
    }
  }

  return 0LL;
}

uint64_t sub_18905409C(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 == *(void *)a2)
  {
    int v2 = *(unsigned __int8 *)(a2 + 16);
    if (*(_BYTE *)(a1 + 16) == 1)
    {
      if ((v2 & 1) != 0) {
        return 1LL;
      }
    }

    else
    {
      if (*(void *)(a1 + 8) != *(void *)(a2 + 8)) {
        int v2 = 1;
      }
      if (v2 != 1) {
        return 1LL;
      }
    }
  }

  return 0LL;
}

uint64_t sub_1890540E8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  int v3 = (void *)a1[2];
  uint64_t v4 = a2[1];
  uint64_t v5 = (void *)a2[2];
  if ((sub_18904D164(*a1, *a2) & 1) != 0 && v2 == v4) {
    return sub_18904D0A0(v3, v5);
  }
  else {
    return 0LL;
  }
}

unint64_t sub_18905414C()
{
  uint64_t v1 = (v12 >> 61) & 3;
  if (!(_DWORD)v1)
  {
    v12 &= 0x9FFFFFFFFFFFFFFFLL;
    sub_189041240((uint64_t)&v11, (uint64_t)v13);
    sub_189041240((uint64_t)v13, (uint64_t)&v14);
    unsigned __int8 v3 = v15;
    if (v15 < 0)
    {
      v15 &= ~0x8000000000000000LL;
      uint64_t v5 = sub_1890520B0(v14.n128_i64[0], v14.n128_i64[1], v3);
      unint64_t v7 = v6;
      v17.n128_u64[0] = 0x2065756C6176203BLL;
      v17.n128_u64[1] = 0xE900000000000027LL;
      sub_18906788C();
      sub_18906788C();
      v17.n128_u64[0] = v5;
      v17.n128_u64[1] = v7;
      swift_bridgeObjectRetain();
      sub_18906788C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v17.n128_u64[0];
    }

    sub_18904127C(&v14, &v16);
    sub_18904127C(&v16, &v17);
    int v4 = v18 >> 6;
    if (v4)
    {
      if (v4 == 1)
      {
        v18 &= 0x3Fu;
        uint64_t v9 = 0LL;
        sub_18906788C();
        sub_1890677B4();
        return v9;
      }

      v18 &= 0x3Fu;
      uint64_t v8 = 45LL;
    }

    else
    {
      v18 &= 0x3Fu;
      uint64_t v8 = 11565LL;
    }

    uint64_t v9 = v8;
    sub_18906788C();
    return v9;
  }

  if ((_DWORD)v1 != 1) {
    return 0x74616E696D726574LL;
  }
  v12 &= 0x9FFFFFFFFFFFFFFFLL;
  v14.n128_u64[0] = 0x272065756C6176LL;
  v14.n128_u64[1] = 0xE700000000000000LL;
  sub_18906788C();
  sub_18906788C();
  return v14.n128_u64[0];
}

unint64_t sub_189054364()
{
  return sub_18905414C();
}

uint64_t sub_1890543A4(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0) {
    return sub_189067E74();
  }
  uint64_t v4 = sub_189067E74();
  sub_18906788C();
  sub_189067E74();
  sub_18906788C();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_189054458()
{
  return sub_1890543A4(*(void *)v0, *(void *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

uint64_t sub_189054464@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *(void *)a1;
  uint64_t v4 = *(void *)(a1 + 8);
  unint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t v8 = *(void *)(a1 + 48);
  char v9 = *(_BYTE *)(a1 + 56);
  uint64_t v10 = (v6 >> 61) & 3;
  if ((_DWORD)v10)
  {
    if ((_DWORD)v10 != 1)
    {
      sub_1890543A4(v7, v8, v9);
      sub_18906788C();
      swift_bridgeObjectRelease();
LABEL_9:
      uint64_t result = sub_18906788C();
      goto LABEL_10;
    }

    sub_1890543A4(v7, v8, v9);
    sub_18906788C();
    swift_bridgeObjectRelease();
    sub_18906788C();
LABEL_8:
    sub_18906788C();
    goto LABEL_9;
  }

  if ((v6 & 0x8000000000000000LL) != 0)
  {
    sub_1890543A4(v7, v8, v9);
    sub_18906788C();
    swift_bridgeObjectRelease();
    sub_18906788C();
    sub_1890520B0(v5, v4, v6);
    sub_18906788C();
    swift_bridgeObjectRelease();
    sub_18906788C();
    goto LABEL_8;
  }

  sub_1890543A4(v7, v8, v9);
  sub_18906788C();
  swift_bridgeObjectRelease();
  sub_18906788C();
  sub_1890520B0(v5, v4, v6);
  sub_18906788C();
  uint64_t result = swift_bridgeObjectRelease();
LABEL_10:
  *a2 = 91LL;
  a2[1] = 0xE100000000000000LL;
  return result;
}

uint64_t sub_18905464C()
{
  return sub_1890560A8(*v0, v0[1]);
}

uint64_t sub_189054654(uint64_t result, int64_t a2)
{
  int64_t v2 = *(void *)(result + 8);
  if (v2 <= a2)
  {
    unsigned __int8 v3 = (char **)result;
    if (v2 != a2)
    {
      uint64_t v4 = a2;
      uint64_t v5 = *(char **)result;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *unsigned __int8 v3 = v5;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        goto LABEL_16;
      }
      while (1)
      {
        uint64_t v7 = (v4 << 6) + 88;
        int64_t v17 = v2;
        while (v2 < v4)
        {
          unint64_t v8 = v4 - 1;
          if (v4 < 1) {
            goto LABEL_13;
          }
          unint64_t v9 = *((void *)v5 + 2);
          if (v8 >= v9) {
            goto LABEL_14;
          }
          uint64_t v10 = &v5[v7];
          uint64_t v4 = *(void *)&v5[v7 - 120];
          uint64_t v11 = *(void *)&v5[v7 - 112];
          uint64_t v21 = v5;
          int64_t v2 = *(void *)&v5[v7 - 104];
          uint64_t v5 = *(char **)&v5[v7 - 96];
          uint64_t v12 = *((void *)v10 - 11);
          uint64_t v19 = *((void *)v10 - 9);
          uint64_t v20 = *((void *)v10 - 10);
          char v18 = *(v10 - 64);
          sub_1890411A8(v4, v11, v2);
          *unsigned __int8 v3 = v21;
          unint64_t v13 = v8 + 1;
          if (v13 >= v9) {
            goto LABEL_15;
          }
          uint64_t v14 = *((void *)v10 - 7);
          uint64_t v15 = *((void *)v10 - 6);
          unint64_t v16 = *((void *)v10 - 5);
          *((void *)v10 - 7) = v4;
          *((void *)v10 - 6) = v11;
          *((void *)v10 - 5) = v2;
          *((void *)v10 - 4) = v5;
          *((void *)v10 - 3) = v12;
          *((void *)v10 - 2) = v20;
          *((void *)v10 - 1) = v19;
          *uint64_t v10 = v18;
          uint64_t result = sub_1890411F4(v14, v15, v16);
          uint64_t v5 = *v3;
          v7 -= 64LL;
          uint64_t v4 = v13 - 1;
          int64_t v2 = v17;
          if (v13 - 1 == v17) {
            goto LABEL_10;
          }
        }

        __break(1u);
LABEL_13:
        __break(1u);
LABEL_14:
        __break(1u);
LABEL_15:
        __break(1u);
LABEL_16:
        uint64_t v5 = sub_18905E6B8((uint64_t)v5);
      }
    }

uint64_t sub_1890547B4(uint64_t result, uint64_t a2, char a3)
{
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = *(void *)(*v3 + 16LL);
  if (v6 < v5)
  {
    __break(1u);
    goto LABEL_39;
  }

  if (v5 < 0)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }

  if (v5 != v6)
  {
    uint64_t v8 = result;
    uint64_t v9 = v3[1];
    if (v5 < (unint64_t)v6)
    {
      uint64_t v10 = (uint64_t *)(v4 + (v5 << 6) + 72);
      uint64_t v9 = v3[1];
      while (1)
      {
        uint64_t v11 = *v10;
        v10 += 8;
        BOOL v12 = v11 <= result;
        if (v11 == result) {
          break;
        }
        if (!v12 || v6 - 1 == v9++) {
          return result;
        }
      }
    }

    if (v9 < v6)
    {
      if ((a3 & 1) != 0)
      {
        if (v9 >= v5)
        {
          uint64_t v15 = (uint64_t *)(v4 + (v9 << 6) + 72);
          int64_t v16 = v9;
          while (1)
          {
            uint64_t v17 = *v15;
            v15 += 8;
            if (v17 != result) {
              break;
            }
            if (v6 == ++v16)
            {
              int64_t v16 = *(void *)(*v3 + 16LL);
              break;
            }
          }

          if (v16 >= v9) {
            return sub_189054AA0(v9, v16);
          }
          goto LABEL_46;
        }

LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
        return result;
      }

      if (v9 < v5) {
        goto LABEL_41;
      }
      if (*(_BYTE *)(v4 + (v9 << 6) + 88) == 1)
      {
        uint64_t result = sub_189054950(v9++);
        uint64_t v4 = *v3;
        uint64_t v5 = v3[1];
      }

      if (v5 < 0) {
        goto LABEL_42;
      }
      uint64_t v14 = *(void *)(v4 + 16);
      if (v9 < v5)
      {
LABEL_44:
        __break(1u);
        goto LABEL_45;
      }

      if (v9 == v14) {
        return result;
      }
      char v18 = (_BYTE *)(v4 + (v9 << 6) + 88);
      while (v9 < v14)
      {
        if (*((void *)v18 - 2) == v8 && (*v18 & 1) == 0 && *((void *)v18 - 1) == a2) {
          return sub_189054950(v9);
        }
        ++v9;
        v18 += 64;
        if (v14 == v9) {
          return result;
        }
      }

uint64_t sub_189054950(uint64_t result)
{
  uint64_t v2 = (uint64_t)v1[1];
  if (v2 <= result)
  {
    if (v2 != result)
    {
      uint64_t v3 = result;
      char v18 = *v1;
      int64_t v16 = v1;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_17:
      }
        char v18 = sub_18905E6B8((uint64_t)v18);
      uint64_t v4 = (uint64_t)&v18[64 * v3 + 32];
      uint64_t v17 = v2;
      do
      {
        if (v2 >= v3)
        {
          __break(1u);
LABEL_14:
          __break(1u);
LABEL_15:
          __break(1u);
LABEL_16:
          __break(1u);
          goto LABEL_17;
        }

        unint64_t v5 = v3 - 1;
        if (v3 < 1) {
          goto LABEL_14;
        }
        unint64_t v6 = *((void *)v18 + 2);
        if (v5 >= v6) {
          goto LABEL_15;
        }
        uint64_t v3 = *(void *)(v4 - 64);
        uint64_t v2 = *(void *)(v4 - 56);
        unint64_t v7 = *(void *)(v4 - 48);
        uint64_t v8 = *(void *)(v4 - 40);
        uint64_t v9 = *(void *)(v4 - 32);
        uint64_t v19 = *(void *)(v4 - 24);
        uint64_t v10 = *(void *)(v4 - 16);
        char v11 = *(_BYTE *)(v4 - 8);
        sub_1890411A8(v3, v2, v7);
        unint64_t v12 = v5 + 1;
        if (v12 >= v6) {
          goto LABEL_16;
        }
        uint64_t v13 = *(void *)v4;
        uint64_t v14 = *(void *)(v4 + 8);
        unint64_t v15 = *(void *)(v4 + 16);
        *(void *)uint64_t v4 = v3;
        *(void *)(v4 + 8) = v2;
        *(void *)(v4 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v7;
        *(void *)(v4 + 24) = v8;
        *(void *)(v4 + 32) = v9;
        *(void *)(v4 + 40) = v19;
        *(void *)(v4 + 48) = v10;
        *(_BYTE *)(v4 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = v11;
        uint64_t result = sub_1890411F4(v13, v14, v15);
        v4 -= 64LL;
        uint64_t v3 = v12 - 1;
        uint64_t v2 = v17;
      }

      while (v12 - 1 != v17);
      uint64_t v1 = v16;
      *int64_t v16 = v18;
    }

    if (__OFADD__(v2, 1LL)) {
      __break(1u);
    }
    else {
      v1[1] = (char *)(v2 + 1);
    }
  }

  return result;
}

uint64_t sub_189054AA0(uint64_t result, unint64_t a2)
{
  uint64_t v4 = result;
  uint64_t v25 = (uint64_t)v2[1];
  if (v25 >= result) {
    goto LABEL_10;
  }
  uint64_t v24 = *v2;
  uint64_t v23 = v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    goto LABEL_19;
  }
  while (1)
  {
    uint64_t v21 = v4;
    unint64_t v22 = a2;
    uint64_t v5 = v4;
    unint64_t v6 = &v24[64 * v4];
    do
    {
      BOOL v7 = __OFSUB__(a2--, 1LL);
      if (v7)
      {
        __break(1u);
LABEL_14:
        __break(1u);
LABEL_15:
        __break(1u);
LABEL_16:
        __break(1u);
        goto LABEL_17;
      }

      if (v5-- < 1) {
        goto LABEL_14;
      }
      unint64_t v9 = *((void *)v24 + 2);
      if (v5 >= v9) {
        goto LABEL_15;
      }
      uint64_t v10 = *((void *)v6 - 4);
      uint64_t v11 = *((void *)v6 - 3);
      unint64_t v12 = *((void *)v6 - 2);
      uint64_t v13 = *((void *)v6 - 1);
      uint64_t v14 = *(void *)v6;
      uint64_t v4 = *((void *)v6 + 1);
      uint64_t v27 = *((void *)v6 + 2);
      char v26 = v6[24];
      sub_1890411A8(v10, v11, v12);
      if (a2 >= v9) {
        goto LABEL_16;
      }
      uint64_t v15 = (uint64_t)&v24[64 * a2 + 32];
      uint64_t v16 = *(void *)v15;
      uint64_t v17 = *(void *)(v15 + 8);
      unint64_t v18 = *(void *)(v15 + 16);
      *(void *)uint64_t v15 = v10;
      *(void *)(v15 + 8) = v11;
      *(void *)(v15 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v12;
      *(void *)(v15 + 24) = v13;
      *(void *)(v15 + 32) = v14;
      *(void *)(v15 + 40) = v4;
      *(void *)(v15 + 48) = v27;
      *(_BYTE *)(v15 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = v26;
      uint64_t result = sub_1890411F4(v16, v17, v18);
      v6 -= 64;
    }

    while (v25 < v5);
    a2 = v22;
    uint64_t v2 = v23;
    *uint64_t v23 = v24;
    uint64_t v4 = v21;
LABEL_10:
    unint64_t v19 = a2 - v4;
    if (__OFSUB__(a2, v4))
    {
LABEL_17:
      __break(1u);
      goto LABEL_18;
    }

    BOOL v7 = __OFADD__(v25, v19);
    uint64_t v20 = (char *)(v25 + v19);
    if (!v7) {
      break;
    }
LABEL_18:
    __break(1u);
LABEL_19:
    uint64_t v24 = sub_18905E6B8((uint64_t)v24);
  }

  v2[1] = v20;
  return result;
}

uint64_t sub_189054C14(uint64_t result, uint64_t a2, __int16 a3)
{
  if ((a3 & 0x100) == 0) {
    return sub_1890547B4(result, a2, a3 & 1);
  }
  return result;
}

uint64_t sub_189054C3C(uint64_t result, uint64_t a2)
{
  if (*(void *)(a2 + 16) < result)
  {
    __break(1u);
    goto LABEL_5;
  }

  if (result < 0) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t sub_189054C58(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v3 = v32;
  if ((v32 & 0x8000000000000000LL) == 0)
  {
    sub_18904127C(&v31, &v35);
    sub_189041240(a2, (uint64_t)&v27);
    if (v28 < 0) {
      goto LABEL_32;
    }
    sub_18904127C(&v27, &v24);
    sub_18904127C(&v35, &v36);
    int v4 = v37;
    int v5 = v37 >> 6;
    if (v5)
    {
      if (v5 == 1)
      {
        v37 &= 0x3Fu;
        __n128 v6 = v36;
        sub_18904127C(&v24, &v25);
        int v7 = v26;
        if ((v26 & 0xC0) == 0x40)
        {
          v26 &= 0x3Fu;
          if (*(_OWORD *)&v6 == *(_OWORD *)&v25)
          {
            if (((v4 ^ v7) & 1) != 0) {
              goto LABEL_32;
            }
          }

          else
          {
            char v21 = sub_189067F10();
            if (((v4 ^ v7) & 1) != 0 || (v21 & 1) == 0) {
              goto LABEL_32;
            }
          }

uint64_t sub_189054F14(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (v38 >> 61) & 3;
  if (!(_DWORD)v3)
  {
    v38 &= 0x9FFFFFFFFFFFFFFFLL;
    sub_189041240((uint64_t)v37, (uint64_t)v39);
    sub_189041240(a2, (uint64_t)v27);
    if ((v28 & 0x6000000000000000LL) != 0) {
      goto LABEL_46;
    }
    v28 &= 0x9FFFFFFFFFFFFFFFLL;
    sub_189041240((uint64_t)v27, (uint64_t)v29);
    sub_189041240((uint64_t)v39, (uint64_t)&v40);
    unsigned __int8 v7 = v41;
    if ((v41 & 0x8000000000000000LL) == 0)
    {
      sub_18904127C((__n128 *)&v40, &v43);
      sub_189041240((uint64_t)v29, (uint64_t)&v33);
      if (v34 < 0) {
        goto LABEL_46;
      }
      sub_18904127C(&v33, &v30);
      sub_18904127C(&v43, &v44);
      int v8 = v45;
      int v9 = v45 >> 6;
      if (v9)
      {
        if (v9 == 1)
        {
          v45 &= 0x3Fu;
          __n128 v10 = v44;
          sub_18904127C(&v30, &v31);
          int v11 = v32;
          if ((v32 & 0xC0) == 0x40)
          {
            v32 &= 0x3Fu;
            if (*(_OWORD *)&v10 == *(_OWORD *)&v31)
            {
              if (((v8 ^ v11) & 1) == 0) {
                goto LABEL_18;
              }
            }

            else
            {
              char v24 = sub_189067F10();
              if (((v8 ^ v11) & 1) == 0 && (v24 & 1) != 0) {
                goto LABEL_18;
              }
            }
          }

unint64_t sub_1890552C0@<X0>( unint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  unint64_t result = sub_189016F70(61LL, 0xE100000000000000LL, a1, a2);
  if ((v11 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_189067AE4();
    unint64_t result = swift_bridgeObjectRelease();
    if (v21 == 1)
    {
      if ((a2 ^ a1) < 0x4000)
      {
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }

      swift_bridgeObjectRetain();
      uint64_t v22 = sub_189067AF0();
      uint64_t v24 = v23;
      unint64_t result = swift_bridgeObjectRelease_n();
      uint64_t v25 = 0LL;
      uint64_t v26 = 0LL;
      unint64_t v27 = 64LL;
    }

    else
    {
      uint64_t v22 = MEMORY[0x1895DC8B4](a1, a2, a3, a4);
      uint64_t v24 = v28;
      unint64_t result = swift_bridgeObjectRelease();
      uint64_t v25 = 0LL;
      uint64_t v26 = 0LL;
      unint64_t v27 = 128LL;
    }

uint64_t sub_189055694(uint64_t a1)
{
  uint64_t v2 = v1;
  unint64_t v4 = (char *)MEMORY[0x18961AFE8];
  unint64_t v27 = (char *)MEMORY[0x18961AFE8];
  unint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = 0LL;
    unsigned __int8 v7 = (uint64_t *)(a1 + 56);
    unint64_t v26 = v5 - 1;
    while (1)
    {
      uint64_t v9 = *(v7 - 3);
      unint64_t v8 = *(v7 - 2);
      swift_bridgeObjectRetain();
      uint64_t v10 = sub_1890530B0(v9, v8, v6);
      if (v2)
      {
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v4 = v27;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return (uint64_t)v4;
      }

      char v11 = (void *)v10;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_18905880C((uint64_t)v11);
      if (!v11[2]) {
        goto LABEL_30;
      }
      uint64_t v12 = v11[4];
      uint64_t v13 = v11[5];
      uint64_t v14 = v11[6];
      uint64_t v15 = v11[7];
      uint64_t v16 = v11[8];
      swift_bridgeObjectRelease();
      if ((v14 & 0x6000000000000000LL) == 0x4000000000000000LL)
      {
        BOOL v18 = v14 == 0x4000000000000000LL && (v13 | v12 | v15 | v16) == 0;
        if (v26 == v6 || v18)
        {
          if (v26 == v6)
          {
LABEL_17:
            swift_unknownObjectRelease();
            return (uint64_t)v27;
          }

          uint64_t v19 = v6 + 1;
          if (v6 + 1 < v5)
          {
            unint64_t v4 = v27;
            swift_unknownObjectRetain();
            do
            {
              uint64_t v21 = *(v7 - 1);
              uint64_t v20 = *v7;
              swift_bridgeObjectRetain();
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                unint64_t v4 = sub_1890572A8(0LL, *((void *)v4 + 2) + 1LL, 1, v4);
              }
              unint64_t v23 = *((void *)v4 + 2);
              unint64_t v22 = *((void *)v4 + 3);
              if (v23 >= v22 >> 1) {
                unint64_t v4 = sub_1890572A8((char *)(v22 > 1), v23 + 1, 1, v4);
              }
              uint64_t v24 = &v4[64 * v23];
              *((void *)v24 + 8) = 0LL;
              *((void *)v24 + 9) = v19;
              v7 += 2;
              *((void *)v4 + 2) = v23 + 1;
              *((void *)v24 + 4) = v21;
              *((void *)v24 + 5) = v20;
              *((void *)v24 + 6) = 0x2000000000000000LL;
              *((void *)v24 + 7) = 0LL;
              *((void *)v24 + 10) = 0LL;
              ++v19;
              v24[88] = 1;
            }

            while (v5 != v19);
            swift_unknownObjectRelease_n();
            return (uint64_t)v4;
          }

LABEL_29:
          __break(1u);
LABEL_30:
          uint64_t result = swift_bridgeObjectRelease();
          __break(1u);
          return result;
        }
      }

      else if (v26 == v6)
      {
        goto LABEL_17;
      }

      ++v6;
      v7 += 2;
      uint64_t v2 = 0LL;
      if (v5 == v6)
      {
        __break(1u);
        goto LABEL_29;
      }
    }
  }

  return (uint64_t)v4;
}

uint64_t sub_189055910(uint64_t result, uint64_t a2, __int16 a3, uint64_t a4, uint64_t a5)
{
  if ((a3 & 0x100) != 0) {
    return 0LL;
  }
  uint64_t v5 = *(void *)(a4 + 16);
  if (v5 < a5)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }

  if ((a5 & 0x8000000000000000LL) == 0)
  {
    if (v5 != a5)
    {
      uint64_t v6 = (unsigned __int8 *)(a4 + (a5 << 6) + 88);
      while (a5 < v5)
      {
        uint64_t v7 = *((void *)v6 - 2);
        if (v7 > result) {
          return a5;
        }
        if (v7 == result)
        {
          int v8 = *v6;
          if ((a3 & 1) != 0)
          {
            if ((v8 & 1) == 0) {
              return a5;
            }
          }

          else
          {
            if (*((void *)v6 - 1) <= a2) {
              int v8 = 1;
            }
            if (v8 != 1) {
              return a5;
            }
          }
        }

        if (__OFADD__(a5, 1LL)) {
          goto LABEL_20;
        }
        ++a5;
        v6 += 64;
        if (a5 == v5) {
          return 0LL;
        }
      }

      __break(1u);
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }

    return 0LL;
  }

uint64_t sub_1890559B4@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v4 = *(void *)(result + 16);
  if ((uint64_t)v4 < (uint64_t)a2)
  {
    __break(1u);
    goto LABEL_9;
  }

  if ((a2 & 0x8000000000000000LL) != 0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }

  if (v4 == a2)
  {
    uint64_t v5 = 0LL;
    uint64_t v6 = 0LL;
    uint64_t v7 = 0LL;
    uint64_t v8 = 0LL;
    uint64_t v9 = 0LL;
    uint64_t v10 = 0LL;
    uint64_t v11 = 0LL;
    char v12 = 0;
    unint64_t v13 = 0x7FFFFFF3ELL;
LABEL_7:
    *(void *)a3 = v5;
    *(void *)(a3 + 8) = v6;
    *(void *)(a3 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v7;
    *(void *)(a3 + 24) = v8;
    *(void *)(a3 + 32) = v9;
    *(void *)(a3 + 40) = v13;
    *(void *)(a3 + 48) = v10;
    *(void *)(a3 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = v11;
    *(void *)(a3 + 64) = v5;
    *(void *)(a3 + 72) = v6;
    *(_BYTE *)(a3 + 80) = v12;
    return result;
  }

  if (v4 > a2)
  {
    uint64_t v14 = result + (a2 << 6);
    uint64_t v8 = *(void *)(v14 + 32);
    uint64_t v9 = *(void *)(v14 + 40);
    unint64_t v13 = *(void *)(v14 + 48);
    uint64_t v10 = *(void *)(v14 + 56);
    uint64_t v11 = *(void *)(v14 + 64);
    uint64_t v5 = *(void *)(v14 + 72);
    uint64_t v6 = *(void *)(v14 + 80);
    uint64_t v7 = *(unsigned __int8 *)(v14 + 88);
    uint64_t result = sub_1890411A8(v8, v9, v13);
    char v12 = v7;
    goto LABEL_7;
  }

uint64_t sub_189055A90(uint64_t result, unint64_t a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if ((uint64_t)v2 < (uint64_t)a2)
  {
    __break(1u);
    goto LABEL_15;
  }

  if ((a2 & 0x8000000000000000LL) != 0)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    return result;
  }

  if (v2 == a2) {
    return 0LL;
  }
  if (v2 <= a2) {
    goto LABEL_16;
  }
  uint64_t v3 = result + (a2 << 6);
  int8x16_t v4 = vorrq_s8(*(int8x16_t *)(v3 + 32), *(int8x16_t *)(v3 + 56));
  int8x8_t v5 = vorr_s8(*(int8x8_t *)v4.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v4, v4, 8uLL));
  return *(void *)(v3 + 48) != 0x4000000000000000LL || *(void *)&v5 != 0LL;
}

uint64_t sub_189055B08(uint64_t result, uint64_t a2, unint64_t a3, void *a4)
{
  int64_t v4 = a3 >> 1;
  if (a3 >> 1 == a2) {
    return MEMORY[0x18961AFE8];
  }
  uint64_t v5 = MEMORY[0x18961AFE8];
  uint64_t v7 = a2;
  unint64_t v29 = a3 >> 1;
  uint64_t v30 = a2;
  uint64_t v28 = result;
  do
  {
    uint64_t v8 = v7;
    while (1)
    {
      if (v8 < a2 || v7 >= v4) {
        goto LABEL_33;
      }
      uint64_t v9 = result + (v7 << 6);
      uint64_t v10 = *(void *)v9;
      uint64_t v11 = *(void *)(v9 + 8);
      unint64_t v12 = *(void *)(v9 + 16);
      uint64_t v13 = *(void *)(v9 + 24);
      ++v7;
      BOOL v14 = (v12 & 0x6000000000000000LL) == 0x4000000000000000LL && v12 == 0x4000000000000000LL;
      if (!v14 || (v11 | *(void *)v9 | v13 | *(void *)(v9 + 32)) != 0)
      {
        uint64_t v16 = *(void *)(v9 + 40);
        char v17 = *(_BYTE *)(v9 + 56);
        if ((v17 & 1) != 0) {
          goto LABEL_26;
        }
        uint64_t v18 = a4[2];
        if (!v18) {
          goto LABEL_26;
        }
        if (a4[4] != v16)
        {
          if (v18 == 1) {
            goto LABEL_26;
          }
          if (a4[5] != v16) {
            break;
          }
        }
      }

uint64_t sub_189055D10(uint64_t a1, uint64_t a2)
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x18961AFE8];
  if (!v3) {
    return result;
  }
  uint64_t v29 = MEMORY[0x18961AFE8];
  sub_188FFF330(0LL, v3, 0);
  uint64_t result = v29;
  uint64_t v20 = a2 + 32;
  uint64_t v21 = a2;
  for (uint64_t i = a1 + 48; ; i += 64LL)
  {
    uint64_t v7 = *(void *)(i - 16);
    uint64_t v8 = *(void *)(i - 8);
    unint64_t v9 = *(void *)i;
    unint64_t v10 = *(void *)(i + 24);
    uint64_t v24 = *(void *)(i + 32);
    uint64_t v25 = result;
    unsigned int v23 = *(unsigned __int8 *)(i + 40);
    if (v23 == 1) {
      break;
    }
    if ((v9 & 0x6000000000000000LL) == 0)
    {
      int v17 = v9 >> 6;
      if ((v9 & 0x8000000000000000LL) != 0)
      {
        if (v9 >> 6)
        {
          if (v17 == 1)
          {
            uint64_t v26 = 0LL;
            unint64_t v27 = 0xE000000000000000LL;
            sub_1890411A8(v7, v8, v9);
            sub_18906788C();
            sub_1890677B4();
LABEL_29:
            sub_18906788C();
            sub_18906788C();
            unint64_t v12 = v27;
            uint64_t v22 = v26;
            goto LABEL_11;
          }

          uint64_t v26 = 45LL;
          unint64_t v19 = 0xE100000000000000LL;
        }

        else
        {
          uint64_t v26 = 11565LL;
          unint64_t v19 = 0xE200000000000000LL;
        }

        unint64_t v27 = v19;
        sub_1890411A8(v7, v8, v9);
        sub_18906788C();
        goto LABEL_29;
      }

      if (v9 >> 6)
      {
        if (v17 == 1)
        {
          uint64_t v26 = 0LL;
          unint64_t v27 = 0xE000000000000000LL;
          sub_1890411A8(v7, v8, v9);
          sub_18906788C();
          sub_1890677B4();
LABEL_25:
          unint64_t v12 = v27;
          uint64_t v22 = v26;
          goto LABEL_11;
        }

        uint64_t v26 = 45LL;
        unint64_t v18 = 0xE100000000000000LL;
      }

      else
      {
        uint64_t v26 = 11565LL;
        unint64_t v18 = 0xE200000000000000LL;
      }

      unint64_t v27 = v18;
      sub_1890411A8(v7, v8, v9);
      sub_18906788C();
      goto LABEL_25;
    }

    if ((v10 & 0x8000000000000000LL) != 0) {
      goto LABEL_33;
    }
    if (v10 >= *(void *)(v21 + 16)) {
      goto LABEL_34;
    }
LABEL_10:
    uint64_t v11 = (uint64_t *)(v20 + 16 * v10);
    unint64_t v12 = v11[1];
    uint64_t v22 = *v11;
    sub_1890411A8(v7, v8, v9);
    swift_bridgeObjectRetain();
LABEL_11:
    sub_189041310();
    uint64_t v28 = sub_189067A54();
    sub_18904FDA4((uint64_t)&v26, v10, v24, v23);
    uint64_t v13 = v28;
    sub_1890411F4(v7, v8, v9);
    uint64_t result = v25;
    uint64_t v29 = v25;
    unint64_t v15 = *(void *)(v25 + 16);
    unint64_t v14 = *(void *)(v25 + 24);
    if (v15 >= v14 >> 1)
    {
      sub_188FFF330((void *)(v14 > 1), v15 + 1, 1);
      uint64_t result = v29;
    }

    *(void *)(result + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v15 + 1;
    uint64_t v16 = (void *)(result + 24 * v15);
    v16[4] = v13;
    void v16[5] = v22;
    void v16[6] = v12;
    if (!--v3) {
      return result;
    }
  }

  if ((v10 & 0x8000000000000000LL) == 0)
  {
    if (v10 >= *(void *)(v21 + 16)) {
      goto LABEL_32;
    }
    goto LABEL_10;
  }

  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1890560A8(uint64_t result, uint64_t a2)
{
  uint64_t v20 = *(void *)(result + 16);
  if (v20 < a2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }

  if (a2 < 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }

  uint64_t v2 = v20 - a2;
  if (v20 != a2)
  {
    uint64_t v4 = result;
    uint64_t v25 = MEMORY[0x18961AFE8];
    swift_bridgeObjectRetain();
    uint64_t result = (uint64_t)sub_188FFF34C(0LL, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
    {
LABEL_19:
      __break(1u);
      return result;
    }

    uint64_t v5 = 0LL;
    uint64_t v6 = v25;
    uint64_t v7 = a2;
    uint64_t v8 = (_BYTE *)(v4 + (a2 << 6) + 88);
    uint64_t v19 = v2;
    while (1)
    {
      uint64_t v9 = v5 + 1;
      if (__OFADD__(v5, 1LL)) {
        break;
      }
      if (v7 + v5 >= v20 || v5 >= v2) {
        goto LABEL_16;
      }
      uint64_t v10 = *((void *)v8 - 1);
      char v11 = *v8;
      __int128 v12 = *(_OWORD *)(v8 - 40);
      v21[0] = *(_OWORD *)(v8 - 56);
      v21[1] = v12;
      v21[2] = *(_OWORD *)(v8 - 24);
      uint64_t v22 = v10;
      char v23 = v11;
      uint64_t result = sub_189054464((uint64_t)v21, v24);
      uint64_t v14 = v24[0];
      uint64_t v13 = v24[1];
      uint64_t v25 = v6;
      unint64_t v16 = *(void *)(v6 + 16);
      unint64_t v15 = *(void *)(v6 + 24);
      if (v16 >= v15 >> 1)
      {
        uint64_t result = (uint64_t)sub_188FFF34C((char *)(v15 > 1), v16 + 1, 1);
        uint64_t v7 = a2;
        uint64_t v6 = v25;
      }

      *(void *)(v6 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v16 + 1;
      uint64_t v17 = v6 + 16 * v16;
      *(void *)(v17 + 32) = v14;
      *(void *)(v17 + 40) = v13;
      ++v5;
      v8 += 64;
      uint64_t v2 = v19;
      if (v9 == v19)
      {
        swift_bridgeObjectRelease();
        *(void *)&v21[0] = v6;
        __swift_instantiateConcreteTypeFromMangledName(&qword_18C760FE8);
        sub_189014190();
        uint64_t v3 = sub_1890677C0();
        swift_bridgeObjectRelease();
        return v3;
      }
    }

    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }

  return 0x3E7974706D653CLL;
}

ValueMetadata *type metadata accessor for SplitArguments.InputIndex()
{
  return &type metadata for SplitArguments.InputIndex;
}

uint64_t destroy for ParsedArgument(void *a1, uint64_t a2)
{
  return sub_1890565AC(a1, a2, (uint64_t (*)(void, void, void, void, void))sub_189041214);
}

void *initializeWithCopy for ParsedArgument(void *a1, void *a2, uint64_t a3)
{
  return sub_189056334(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t, uint64_t))sub_1890411C8);
}

uint64_t *assignWithCopy for ParsedArgument(uint64_t *a1, void *a2, uint64_t a3)
{
  return sub_1890563AC( a1,  a2,  a3,  (void (*)(void, uint64_t, uint64_t, uint64_t, uint64_t))sub_1890411C8,  (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_189041214);
}

void *assignWithTake for ParsedArgument(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_189056438(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_189041214);
}

uint64_t sub_1890562D8(uint64_t a1)
{
  return *(void *)(a1 + 16) >> 63;
}

uint64_t sub_1890562E4(uint64_t result)
{
  *(void *)(result + 16) &= ~0x8000000000000000LL;
  return result;
}

uint64_t sub_1890562F4(uint64_t result, uint64_t a2)
{
  *(void *)(result + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = *(void *)(result + 16) & 0xC1LL | (a2 << 63);
  return result;
}

ValueMetadata *type metadata accessor for ParsedArgument()
{
  return &type metadata for ParsedArgument;
}

uint64_t destroy for SplitArguments.Element.Value(void *a1, uint64_t a2)
{
  return sub_1890565AC(a1, a2, (uint64_t (*)(void, void, void, void, void))sub_1890411F4);
}

void *initializeWithCopy for SplitArguments.Element.Value(void *a1, void *a2, uint64_t a3)
{
  return sub_189056334(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t, uint64_t))sub_1890411A8);
}

void *sub_189056334( void *a1, void *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  uint64_t v8 = a2[3];
  uint64_t v9 = a2[4];
  a4(*a2, v6, v7, v8, v9);
  *a1 = v5;
  a1[1] = v6;
  a1[2] = v7;
  a1[3] = v8;
  a1[4] = v9;
  return a1;
}

uint64_t *assignWithCopy for SplitArguments.Element.Value(uint64_t *a1, void *a2, uint64_t a3)
{
  return sub_1890563AC( a1,  a2,  a3,  (void (*)(void, uint64_t, uint64_t, uint64_t, uint64_t))sub_1890411A8,  (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1890411F4);
}

uint64_t *sub_1890563AC( uint64_t *a1, void *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  uint64_t v9 = a2[2];
  uint64_t v10 = a2[3];
  uint64_t v11 = a2[4];
  a4(*a2, v8, v9, v10, v11);
  uint64_t v12 = *a1;
  uint64_t v13 = a1[1];
  uint64_t v14 = a1[2];
  uint64_t v15 = a1[3];
  uint64_t v16 = a1[4];
  *a1 = v7;
  a1[1] = v8;
  a1[2] = v9;
  a1[3] = v10;
  a1[4] = v11;
  a5(v12, v13, v14, v15, v16);
  return a1;
}

void *assignWithTake for SplitArguments.Element.Value(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_189056438(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1890411F4);
}

void *sub_189056438( void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v7 = *a1;
  uint64_t v9 = a1[1];
  uint64_t v8 = a1[2];
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  __int128 v12 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v12;
  a1[4] = v6;
  a4(v7, v9, v8, v10, v11);
  return a1;
}

uint64_t _s22ArgumentParserInternal14ParsedArgumentOwet_0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unsigned int v2 = (*(void *)(a1 + 16) >> 3) & 0xFFFFFFE0 | (*(void *)(a1 + 16) >> 1) & 0x1F;
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

uint64_t sub_1890564D4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 40) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = 0LL;
      *(void *)(result + 8) = 0LL;
      *(void *)(result + 24) = 0LL;
      *(void *)(result + 32) = 0LL;
      *(void *)(result + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = (8LL * -a2) & 0x7FFFFFF00LL | (2 * (-a2 & 0x1FLL));
      return result;
    }

    *(_BYTE *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

uint64_t sub_189056530(uint64_t a1)
{
  if (((*(void *)(a1 + 16) >> 61) & 2) != 0) {
    return (*(_DWORD *)a1 + 2);
  }
  else {
    return (*(void *)(a1 + 16) >> 61) & 3LL;
  }
}

uint64_t sub_189056550(uint64_t result)
{
  *(void *)(result + 16) &= 0x9FFFFFFFFFFFFFFFLL;
  return result;
}

uint64_t sub_189056560(uint64_t result, uint64_t a2)
{
  if (a2 < 2)
  {
    *(void *)(result + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = *(void *)(result + 16) & 0x80000000000000C1LL | (a2 << 61);
  }

  else
  {
    *(void *)uint64_t result = (a2 - 2);
    *(_OWORD *)(result + 8) = xmmword_18906AD50;
    *(void *)(result + 24) = 0LL;
    *(void *)(result + 32) = 0LL;
  }

  return result;
}

ValueMetadata *type metadata accessor for SplitArguments.Element.Value()
{
  return &type metadata for SplitArguments.Element.Value;
}

uint64_t sub_1890565AC( void *a1, uint64_t a2, uint64_t (*a3)(void, void, void, void, void))
{
  return a3(*a1, a1[1], a1[2], a1[3], a1[4]);
}

uint64_t initializeWithCopy for SplitArguments.Element(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  unint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  sub_1890411A8(*(void *)a2, v5, v6);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_BYTE *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t assignWithCopy for SplitArguments.Element(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  unint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  sub_1890411A8(*(void *)a2, v5, v6);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  unint64_t v11 = *(void *)(a1 + 16);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  sub_1890411F4(v9, v10, v11);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v12 = *(void *)(a2 + 48);
  *(_BYTE *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = *(_BYTE *)(a2 + 56);
  *(void *)(a1 + 48) = v12;
  return a1;
}

uint64_t assignWithTake for SplitArguments.Element(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  unint64_t v6 = *(void *)(a1 + 16);
  __int128 v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v7;
  sub_1890411F4(v4, v5, v6);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_BYTE *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for SplitArguments.Element(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 57)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unsigned int v2 = (*(void *)(a1 + 16) >> 3) & 0xFFFFFFE0 | (*(void *)(a1 + 16) >> 1) & 0x1F;
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for SplitArguments.Element(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 57) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = 0LL;
      *(void *)(result + 8) = 0LL;
      *(void *)(result + 24) = 0LL;
      *(void *)(result + 32) = 0LL;
      *(void *)(result + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = (8LL * -a2) & 0x7FFFFFF00LL | (2 * (-a2 & 0x1FLL));
      return result;
    }

    *(_BYTE *)(result + 57) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for SplitArguments.Element()
{
  return &type metadata for SplitArguments.Element;
}

uint64_t getEnumTagSinglePayload for SplitArguments.Index(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0LL;
  }
}

uint64_t storeEnumTagSinglePayload for SplitArguments.Index(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_BYTE *)(result + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 0;
    *(void *)uint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0LL;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }

  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }

  *(_BYTE *)(result + 17) = v3;
  return result;
}

ValueMetadata *type metadata accessor for SplitArguments.Index()
{
  return &type metadata for SplitArguments.Index;
}

uint64_t destroy for SplitArguments()
{
  return swift_bridgeObjectRelease();
}

void *_s22ArgumentParserInternal14SplitArgumentsVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SplitArguments(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

void *assignWithTake for SplitArguments(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SplitArguments(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *((_BYTE *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SplitArguments(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0LL;
    *(void *)(result + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 0LL;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 24) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for SplitArguments()
{
  return &type metadata for SplitArguments;
}

unint64_t sub_189056A0C()
{
  unint64_t result = qword_18C761628;
  if (!qword_18C761628)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&unk_18906AE5C, &type metadata for SplitArguments.Index);
    atomic_store(result, (unint64_t *)&qword_18C761628);
  }

  return result;
}

unint64_t sub_189056A54()
{
  unint64_t result = qword_18C761630;
  if (!qword_18C761630)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&unk_18906AFAC, &type metadata for SplitArguments.InputIndex);
    atomic_store(result, (unint64_t *)&qword_18C761630);
  }

  return result;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for SplitArguments.SubIndex(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0LL;
  }
}

uint64_t storeEnumTagSinglePayload for SplitArguments.SubIndex(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)unint64_t result = 0LL;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }

  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }

  *(_BYTE *)(result + 9) = v3;
  return result;
}

uint64_t sub_189056AFC(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0LL;
  }
}

uint64_t sub_189056B18(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)unint64_t result = (a2 - 1);
    *(_BYTE *)(result + 8) = 1;
  }

  else
  {
    *(_BYTE *)(result + 8) = 0;
  }

  return result;
}

ValueMetadata *type metadata accessor for SplitArguments.SubIndex()
{
  return &type metadata for SplitArguments.SubIndex;
}

unint64_t sub_189056B4C()
{
  unint64_t result = qword_18C761638;
  if (!qword_18C761638)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&unk_18906B0A0, &type metadata for SplitArguments.SubIndex);
    atomic_store(result, (unint64_t *)&qword_18C761638);
  }

  return result;
}

uint64_t sub_189056B90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(a4 + 16);
  uint64_t result = sub_18906803C();
  if (v5)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = a4 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1890677A8();
      swift_bridgeObjectRelease();
      v7 += 16LL;
      --v5;
    }

    while (v5);
    return swift_bridgeObjectRelease();
  }

  return result;
}

uint64_t sub_189056C4C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v3 = v0[2];
  sub_189068030();
  sub_189056B90((uint64_t)v5, v1, v2, v3);
  return sub_189068060();
}

uint64_t sub_189056CA4(uint64_t a1)
{
  return sub_189056B90(a1, *v1, v1[1], v1[2]);
}

uint64_t sub_189056CB0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v3 = v0[2];
  sub_189068030();
  sub_189056B90((uint64_t)v5, v1, v2, v3);
  return sub_189068060();
}

uint64_t sub_189056D04(void *a1, void *a2)
{
  uint64_t v2 = (void *)a1[2];
  uint64_t v3 = (void *)a2[2];
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (sub_189067F10() & 1) != 0) {
    return sub_18904D0A0(v2, v3);
  }
  else {
    return 0LL;
  }
}

uint64_t sub_189056D64(uint64_t a1, uint64_t a2, char *a3)
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    a3 = sub_189056E74(0LL, *((void *)a3 + 2) + 1LL, 1, a3);
  }
  unint64_t v7 = *((void *)a3 + 2);
  unint64_t v6 = *((void *)a3 + 3);
  if (v7 >= v6 >> 1) {
    a3 = sub_189056E74((char *)(v6 > 1), v7 + 1, 1, a3);
  }
  *((void *)a3 + 2) = v7 + 1;
  uint64_t v8 = &a3[16 * v7];
  *((void *)v8 + 4) = a1;
  *((void *)v8 + 5) = a2;
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C760FE8);
  sub_189014190();
  uint64_t v9 = sub_1890677C0();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_189056E68()
{
  return sub_189056D64(*(void *)v0, *(void *)(v0 + 8), *(char **)(v0 + 16));
}

char *sub_189056E74(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC858);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }

  else
  {
    uint64_t v10 = (char *)MEMORY[0x18961AFE8];
  }

  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0LL;
  }

  else
  {
    swift_arrayInitWithCopy();
  }

  swift_bridgeObjectRelease();
  return v10;
}

void *sub_189056F74(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC848);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    uint64_t v10[2] = v8;
    uint64_t v10[3] = 2 * (v12 >> 5);
  }

  else
  {
    uint64_t v10 = (void *)MEMORY[0x18961AFE8];
  }

  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v10 + 4 >= &a4[4 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 32 * v8);
    }
    a4[2] = 0LL;
  }

  else
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_18C4FC630);
    swift_arrayInitWithCopy();
  }

  swift_bridgeObjectRelease();
  return v10;
}

char *sub_189057094(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC840);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }

  else
  {
    uint64_t v10 = (char *)MEMORY[0x18961AFE8];
  }

  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0LL;
  }

  else
  {
    swift_arrayInitWithCopy();
  }

  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1890571A8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC820);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }

  else
  {
    uint64_t v10 = (char *)MEMORY[0x18961AFE8];
  }

  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0LL;
  }

  else
  {
    swift_arrayInitWithCopy();
  }

  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1890572A8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC890);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 + 31;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 6);
  }

  else
  {
    uint64_t v10 = (char *)MEMORY[0x18961AFE8];
  }

  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[64 * v8]) {
      memmove(v13, v14, v8 << 6);
    }
    *((void *)a4 + 2) = 0LL;
  }

  else
  {
    swift_arrayInitWithCopy();
  }

  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1890573A8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC828);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }

  else
  {
    uint64_t v10 = (char *)MEMORY[0x18961AFE8];
  }

  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0LL;
  }

  else
  {
    memcpy(v13, v14, 16 * v8);
  }

  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1890574A0(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC830);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 56);
  }

  else
  {
    uint64_t v10 = (char *)MEMORY[0x18961AFE8];
  }

  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[56 * v8]) {
      memmove(v12, v13, 56 * v8);
    }
    *((void *)a4 + 2) = 0LL;
  }

  else
  {
    swift_arrayInitWithCopy();
  }

  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1890575BC(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C761658);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }

  else
  {
    uint64_t v10 = (char *)MEMORY[0x18961AFE8];
  }

  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0LL;
  }

  else
  {
    memcpy(v13, v14, 8 * v8);
  }

  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1890576B4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C760F78);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }

  else
  {
    uint64_t v10 = (char *)MEMORY[0x18961AFE8];
  }

  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8]) {
      memmove(v12, v13, 48 * v8);
    }
    *((void *)a4 + 2) = 0LL;
  }

  else
  {
    swift_arrayInitWithCopy();
  }

  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1890577C8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C761650);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }

  else
  {
    uint64_t v10 = (char *)MEMORY[0x18961AFE8];
  }

  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8]) {
      memmove(v12, v13, 48 * v8);
    }
    *((void *)a4 + 2) = 0LL;
  }

  else
  {
    swift_arrayInitWithCopy();
  }

  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1890578E0(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC818);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 192);
  }

  else
  {
    uint64_t v10 = (char *)MEMORY[0x18961AFE8];
  }

  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[192 * v8]) {
      memmove(v12, v13, 192 * v8);
    }
    *((void *)a4 + 2) = 0LL;
  }

  else
  {
    swift_arrayInitWithCopy();
  }

  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1890579F8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C760F60);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }

  else
  {
    uint64_t v10 = (char *)MEMORY[0x18961AFE8];
  }

  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0LL;
  }

  else
  {
    swift_arrayInitWithCopy();
  }

  swift_bridgeObjectRelease();
  return v10;
}

char *sub_189057AF8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C761648);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 136);
  }

  else
  {
    uint64_t v10 = (char *)MEMORY[0x18961AFE8];
  }

  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[136 * v8]) {
      memmove(v12, v13, 136 * v8);
    }
    *((void *)a4 + 2) = 0LL;
  }

  else
  {
    swift_arrayInitWithCopy();
  }

  swift_bridgeObjectRelease();
  return v10;
}

void *sub_189057C0C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C761640);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    uint64_t v10[2] = v8;
    uint64_t v10[3] = 2 * (v12 >> 3);
  }

  else
  {
    uint64_t v10 = (void *)MEMORY[0x18961AFE8];
  }

  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v10 + 4 >= &a4[v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0LL;
  }

  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C760FE8);
    swift_arrayInitWithCopy();
  }

  swift_bridgeObjectRelease();
  return v10;
}

char *sub_189057D2C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C761020);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }

  else
  {
    uint64_t v10 = (char *)MEMORY[0x18961AFE8];
  }

  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0LL;
  }

  else
  {
    swift_arrayInitWithCopy();
  }

  swift_bridgeObjectRelease();
  return v10;
}

char *sub_189057E2C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C760F80);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }

  else
  {
    uint64_t v10 = (char *)MEMORY[0x18961AFE8];
  }

  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0LL;
  }

  else
  {
    memcpy(v13, v14, 8 * v8);
  }

  swift_bridgeObjectRelease();
  return v10;
}

void *sub_189057F24(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC860);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v10[2] = v8;
    uint64_t v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }

  else
  {
    uint64_t v10 = (void *)MEMORY[0x18961AFE8];
  }

  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v10 + 4 >= &a4[5 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0LL;
  }

  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC870);
    swift_arrayInitWithCopy();
  }

  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_189058058(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 - 8);
  MEMORY[0x1895F8858](a1);
  int64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *))(v5 + 32))(v7);
  uint64_t v8 = sub_1890680E4();
  uint64_t v10 = v8;
  int64_t v11 = *(void *)(a2 + 16);
  if (v11)
  {
    uint64_t v21 = v9;
    uint64_t v22 = v8;
    uint64_t v24 = v5;
    uint64_t v26 = MEMORY[0x18961AFE8];
    sub_188FFF34C(0LL, v11, 0);
    uint64_t v23 = a2;
    uint64_t v12 = a2 + 32;
    uint64_t v13 = v26;
    do
    {
      sub_189006BE4(v12, (uint64_t)v25);
      __swift_project_boxed_opaque_existential_1(v25, v25[3]);
      uint64_t v14 = sub_1890680E4();
      uint64_t v16 = v15;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_188FFF34C(0LL, *(void *)(v13 + 16) + 1LL, 1);
        uint64_t v13 = v26;
      }

      unint64_t v18 = *(void *)(v13 + 16);
      unint64_t v17 = *(void *)(v13 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_188FFF34C((char *)(v17 > 1), v18 + 1, 1);
        uint64_t v13 = v26;
      }

      *(void *)(v13 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v18 + 1;
      uint64_t v19 = v13 + 16 * v18;
      *(void *)(v19 + 32) = v14;
      *(void *)(v19 + 40) = v16;
      v12 += 40LL;
      --v11;
    }

    while (v11);
    swift_bridgeObjectRelease();
    uint64_t v5 = v24;
    uint64_t v10 = v22;
  }

  else
  {
    swift_bridgeObjectRelease();
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, a3);
  return v10;
}

unint64_t sub_189058224(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0x8000000000000000LL) != 0)
  {
    __break(1u);
  }

  else
  {
    if ((a3 & 0x2000000000000000LL) != 0) {
      uint64_t v3 = HIBYTE(a3) & 0xF;
    }
    else {
      uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v4 = 7LL;
    if (((a3 >> 60) & ((a2 & 0x800000000000000LL) == 0)) != 0) {
      uint64_t v4 = 11LL;
    }
    unint64_t v5 = v4 | (v3 << 16);
    uint64_t result = sub_189067868();
    if ((v6 & 1) != 0) {
      uint64_t result = v5;
    }
    if (4 * v3 >= result >> 14) {
      return sub_189067928();
    }
  }

  __break(1u);
  return result;
}

uint64_t sub_1890582C0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_189058654(a1, a2);
  uint64_t v12 = v11;
  swift_bridgeObjectRelease();
  if (v12)
  {
    if (v10 == 95 && v12 == 0xE100000000000000LL)
    {
      swift_bridgeObjectRelease();
    }

    else
    {
      char v13 = sub_189067F10();
      swift_bridgeObjectRelease();
      if ((v13 & 1) == 0) {
        goto LABEL_7;
      }
    }

    unint64_t v14 = sub_189058224(1uLL, a1, a2);
    uint64_t v16 = v15;
    uint64_t v18 = v17;
    uint64_t v20 = v19;
    swift_bridgeObjectRelease();
    a1 = MEMORY[0x1895DC8B4](v14, v16, v18, v20);
    swift_bridgeObjectRelease();
  }

uint64_t destroy for InputKey()
{
  return swift_bridgeObjectRelease();
}

void *_s22ArgumentParserInternal8InputKeyVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for InputKey(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for InputKey(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for InputKey(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InputKey(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0LL;
    *(void *)(result + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 0LL;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 24) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for InputKey()
{
  return &type metadata for InputKey;
}

unint64_t sub_189058610()
{
  unint64_t result = qword_18C4FC7D0;
  if (!qword_18C4FC7D0)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&unk_18906B1A0, &type metadata for InputKey);
    atomic_store(result, (unint64_t *)&qword_18C4FC7D0);
  }

  return result;
}

uint64_t sub_189058654(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000LL) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2) {
    return sub_189067904();
  }
  else {
    return 0LL;
  }
}

uint64_t sub_189058694(uint64_t a1)
{
  uint64_t result = sub_18905E918(a1);
  if ((v4 & 1) != 0) {
    goto LABEL_7;
  }
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }

  if (result == 1LL << *(_BYTE *)(a1 + 32)) {
    return 0LL;
  }
  else {
    return sub_18905E9B8(result, v3, 0LL, a1);
  }
}

uint64_t sub_189058724(uint64_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }

  uint64_t v6 = result;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)result && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(v6 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }

  if (v4 <= v5) {
    int64_t v10 = v4 + v2;
  }
  else {
    int64_t v10 = v4;
  }
  uint64_t result = (uint64_t)sub_189056E74((char *)result, v10, 1, (char *)v3);
  uint64_t v3 = result;
  if (!*(void *)(v6 + 16))
  {
LABEL_13:
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }

uint64_t sub_18905880C(uint64_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }

  uint64_t v6 = result;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)result && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(v6 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }

  if (v4 <= v5) {
    int64_t v10 = v4 + v2;
  }
  else {
    int64_t v10 = v4;
  }
  uint64_t result = (uint64_t)sub_1890572A8((char *)result, v10, 1, (char *)v3);
  uint64_t v3 = result;
  if (!*(void *)(v6 + 16))
  {
LABEL_13:
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }

uint64_t sub_1890588F4(uint64_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }

  uint64_t v6 = result;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)result && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(v6 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }

  if (v4 <= v5) {
    int64_t v10 = v4 + v2;
  }
  else {
    int64_t v10 = v4;
  }
  uint64_t result = (uint64_t)sub_1890574A0((char *)result, v10, 1, (char *)v3);
  uint64_t v3 = result;
  if (!*(void *)(v6 + 16))
  {
LABEL_13:
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }

uint64_t sub_1890589E0(uint64_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }

  uint64_t v6 = result;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)result && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(v6 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }

  if (v4 <= v5) {
    int64_t v10 = v4 + v2;
  }
  else {
    int64_t v10 = v4;
  }
  uint64_t result = (uint64_t)sub_189057094((char *)result, v10, 1, (char *)v3);
  uint64_t v3 = result;
  if (!*(void *)(v6 + 16))
  {
LABEL_13:
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }

uint64_t sub_189058ACC(uint64_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }

  uint64_t v6 = result;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)result && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(v6 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }

  if (v4 <= v5) {
    int64_t v10 = v4 + v2;
  }
  else {
    int64_t v10 = v4;
  }
  uint64_t result = (uint64_t)sub_1890576B4((char *)result, v10, 1, (char *)v3);
  uint64_t v3 = result;
  if (!*(void *)(v6 + 16))
  {
LABEL_13:
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }

uint64_t sub_189058BB8(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v6 = *(void *)(a3 + 16);
  if (v6 < a1 || v6 < a2)
  {
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }

  int64_t v10 = a2 - a1;
  int64_t v4 = *v5;
  int64_t v11 = *((void *)*v5 + 2);
  int64_t v12 = v11 + a2 - a1;
  if (__OFADD__(v11, a2 - a1)) {
    goto LABEL_19;
  }
  unint64_t v14 = a3;
  char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || (int64_t v16 = *((void *)v4 + 3) >> 1, v16 < v12))
  {
    if (v11 <= v12) {
      int64_t v17 = v12;
    }
    else {
      int64_t v17 = v11;
    }
    int64_t v4 = sub_1890578E0(isUniquelyReferenced_nonNull_native, v17, 1, v4);
    int64_t v16 = *((void *)v4 + 3) >> 1;
  }

  uint64_t v18 = *((void *)v4 + 2);
  uint64_t v19 = (uint64_t *)(v16 - v18);
  uint64_t v20 = sub_18905E784(&v71, &v4[192 * v18 + 32], v16 - v18, a1, a2, v14, a4);
  if ((uint64_t)v20 >= 1)
  {
    uint64_t v21 = *((void *)v4 + 2);
    BOOL v22 = __OFADD__(v21, v20);
    unint64_t v23 = (char *)v20 + v21;
    if (v22)
    {
      __break(1u);
      goto LABEL_24;
    }

    *((void *)v4 + 2) = v23;
  }

  if (v20 != v19)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    *int64_t v5 = v4;
    return result;
  }

uint64_t sub_189058FD4(uint64_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }

  uint64_t v6 = result;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)result && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(v6 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }

  if (v4 <= v5) {
    int64_t v10 = v4 + v2;
  }
  else {
    int64_t v10 = v4;
  }
  uint64_t result = (uint64_t)sub_1890579F8((char *)result, v10, 1, (char *)v3);
  uint64_t v3 = result;
  if (!*(void *)(v6 + 16))
  {
LABEL_13:
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }

void *sub_1890590BC(void *result)
{
  uint64_t v2 = result[2];
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16LL);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }

  uint64_t v6 = result;
  uint64_t result = (void *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)result && v5 <= v3[3] >> 1)
  {
    if (v6[2]) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }

  if (v4 <= v5) {
    int64_t v10 = v4 + v2;
  }
  else {
    int64_t v10 = v4;
  }
  uint64_t result = sub_189057F24(result, v10, 1, v3);
  uint64_t v3 = result;
  if (!v6[2])
  {
LABEL_13:
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }

uint64_t sub_1890591B8(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)(v1 + 8) + 72LL);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v6 = (_OWORD *)(v3 + 32);
    swift_bridgeObjectRetain_n();
    while (1)
    {
      sub_189046084(v6, v9);
      if (v2)
      {
        sub_1890460C0((uint64_t)v9);
        uint64_t result = swift_bridgeObjectRelease();
        __break(1u);
        return result;
      }

      if (*(void *)&v9[0] == a1) {
        break;
      }
      sub_1890460C0((uint64_t)v9);
      uint64_t v6 = (_OWORD *)((char *)v6 + 56);
      if (!--v4)
      {
        swift_bridgeObjectRelease();
        goto LABEL_8;
      }
    }

    swift_bridgeObjectRelease();
    __int128 v11 = v9[0];
    __int128 v12 = v9[1];
    __int128 v13 = v9[2];
    uint64_t v14 = v10;
    swift_bridgeObjectRelease();
    if (!(void)v11) {
      goto LABEL_9;
    }
    __int128 v15 = v11;
    v16[0] = v12;
    v16[1] = v13;
    uint64_t v17 = v14;
    sub_188FFCFB0(v16, (uint64_t)&v11);
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC4A8);
    return swift_dynamicCast();
  }

  else
  {
    swift_bridgeObjectRetain();
LABEL_8:
    uint64_t v14 = 0LL;
    __int128 v12 = 0u;
    __int128 v13 = 0u;
    __int128 v11 = 0u;
    swift_bridgeObjectRelease();
LABEL_9:
    sub_188FFCDB0((uint64_t)&v11, qword_18C761690);
    sub_188FFAD68();
    swift_allocError();
    *(void *)uint64_t v7 = 3LL;
    *(_OWORD *)(v7 + 8) = 0u;
    *(_OWORD *)(v7 + 24) = 0u;
    *(_OWORD *)(v7 + 40) = 0u;
    *(_OWORD *)(v7 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = 0u;
    *(void *)(v7 + 72) = 0LL;
    *(_BYTE *)(v7 + 80) = 15;
    return swift_willThrow();
  }

__n128 sub_189059384(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v9 = *(void *)(v4 + 8);
  *((void *)&v21 + 1) = a3;
  unint64_t v22 = a4;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)&v20);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16LL))( boxed_opaque_existential_1Tm,  a1,  a3);
  v19.n128_u64[0] = a2;
  v19.n128_u64[1] = a4;
  __int128 v11 = *(char **)(v9 + 72);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v9 + 72) = v11;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    __int128 v11 = sub_1890574A0(0LL, *((void *)v11 + 2) + 1LL, 1, v11);
    *(void *)(v9 + 72) = v11;
  }

  unint64_t v14 = *((void *)v11 + 2);
  unint64_t v13 = *((void *)v11 + 3);
  if (v14 >= v13 >> 1)
  {
    __int128 v11 = sub_1890574A0((char *)(v13 > 1), v14 + 1, 1, v11);
    *(void *)(v9 + 72) = v11;
  }

  *((void *)v11 + 2) = v14 + 1;
  __int128 v15 = &v11[56 * v14];
  __n128 result = v19;
  __int128 v17 = v20;
  __int128 v18 = v21;
  *((void *)v15 + 10) = v22;
  *((_OWORD *)v15 + 3) = v17;
  *((_OWORD *)v15 + 4) = v18;
  *((__n128 *)v15 + 2) = v19;
  return result;
}

uint64_t sub_189059484(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = type metadata accessor for ParsedArgumentsContainer(0LL, a2, a3, a4);
  uint64_t v6 = *(void *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v6;
  *(void *)(v7 + 24) = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  MEMORY[0x1895DD3F4](&unk_18906B38C, v5);
  return sub_189067E14();
}

uint64_t sub_189059518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = a3;
  *(void *)(result + 24) = a1;
  return result;
}

uint64_t sub_189059554()
{
  return v0;
}

uint64_t sub_1890595C0()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ArgumentDecoder()
{
  return objc_opt_self();
}

uint64_t sub_189059600()
{
  return swift_initClassMetadata2();
}

uint64_t sub_189059650()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_18905965C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_189059668(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_189059484(a1, a2, a3, a4);
}

uint64_t sub_189059688()
{
  *uint64_t v0 = 0u;
  v0[1] = 0u;
  return swift_willThrow();
}

uint64_t sub_1890596D4()
{
  *uint64_t v0 = 1LL;
  v0[1] = 0LL;
  v0[2] = 0LL;
  v0[3] = 0LL;
  return swift_willThrow();
}

double sub_189059724@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6 = *(void *)(v4 + 16);
  if (*(void *)(v6 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v10 = sub_18904D89C(a1, a2, a3);
    if ((v11 & 1) != 0)
    {
      sub_1890145E8(*(void *)(v6 + 56) + 72 * v10, (uint64_t)&v16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*((void *)&v16 + 1))
      {
        __int128 v21 = v16;
        __int128 v22 = v17;
        __int128 v23 = v18;
        uint64_t v12 = *((void *)&v19 + 1);
        uint64_t v24 = v19;
        char v13 = v20;
        swift_beginAccess();
        swift_bridgeObjectRetain_n();
        sub_18904CD8C(v12);
        swift_endAccess();
        swift_bridgeObjectRelease();
        __int128 v14 = v22;
        *(_OWORD *)a4 = v21;
        *(_OWORD *)(a4 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v14;
        double result = *(double *)&v23;
        *(_OWORD *)(a4 + 32) = v23;
        *(void *)(a4 + 48) = v24;
        *(void *)(a4 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = v12;
        *(_BYTE *)(a4 + 64) = v13;
        return result;
      }
    }

    else
    {
      char v20 = 0;
      __int128 v18 = 0u;
      __int128 v19 = 0u;
      __int128 v16 = 0u;
      __int128 v17 = 0u;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }

  else
  {
    char v20 = 0;
    __int128 v18 = 0u;
    __int128 v19 = 0u;
    __int128 v16 = 0u;
    __int128 v17 = 0u;
  }

  sub_188FFCDB0((uint64_t)&v16, &qword_18C4FC488);
  *(_BYTE *)(a4 + 64) = 0;
  double result = 0.0;
  *(_OWORD *)(a4 + 32) = 0u;
  *(_OWORD *)(a4 + 48) = 0u;
  *(_OWORD *)a4 = 0u;
  *(_OWORD *)(a4 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 0u;
  return result;
}

uint64_t sub_189059890(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = a3;
  *(void *)(v3 + 24) = a1;
  return v3;
}

uint64_t sub_18905989C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(*v2 + 80LL);
  MEMORY[0x1895F8858](a1);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = v2[2];
  (*(void (**)(char *))(v8 + 16))(v6);
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_189058058((uint64_t)v6, v7, v4);
  sub_189059724(v9, v10, v11, a2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

BOOL sub_18905995C(uint64_t a1)
{
  BOOL v1 = v4 != 0;
  sub_188FFCDB0((uint64_t)v3, &qword_18C4FC488);
  return v1;
}

uint64_t sub_1890599A4(uint64_t a1)
{
  if (!v4)
  {
    sub_188FFCDB0((uint64_t)v3, &qword_18C4FC488);
    __int128 v6 = 0u;
    __int128 v7 = 0u;
    goto LABEL_5;
  }

  sub_18901484C((uint64_t)&v5, (uint64_t)&v6, &qword_18C4FC878);
  sub_189014560((uint64_t)v3);
  if (!*((void *)&v7 + 1))
  {
LABEL_5:
    uint64_t v1 = 1LL;
    goto LABEL_6;
  }

  uint64_t v1 = 0LL;
LABEL_6:
  sub_188FFCDB0((uint64_t)&v6, &qword_18C4FC878);
  return v1;
}

uint64_t sub_189059A44@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v59 = a1;
  uint64_t v60 = a4;
  uint64_t v61 = a5;
  uint64_t v9 = *v5;
  uint64_t v10 = *(void *)(*v5 + 80);
  __int128 v56 = *(char **)(v10 - 8);
  MEMORY[0x1895F8858](a1);
  __int128 v57 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_189067AB4();
  uint64_t v52 = *(void *)(v12 - 8);
  unint64_t v53 = v12;
  uint64_t v13 = MEMORY[0x1895F8858](v12);
  __int128 v54 = (char *)&v51 - v14;
  uint64_t v15 = *(void *)(a3 - 8);
  MEMORY[0x1895F8858](v13);
  __int128 v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v58 = a2;
  uint64_t v18 = a2;
  __int128 v19 = v5;
  sub_18905989C(v18, (uint64_t)v73);
  sub_18901484C((uint64_t)v73, (uint64_t)&v68, &qword_18C4FC488);
  uint64_t v62 = v6;
  uint64_t v74 = a3;
  if (!v69)
  {
    __int128 v29 = &qword_18C4FC488;
    __int128 v30 = &v68;
LABEL_10:
    sub_188FFCDB0((uint64_t)v30, v29);
LABEL_12:
    __int128 v55 = v19;
    uint64_t v32 = v19[2];
    unint64_t v31 = v19[3];
    uint64_t v33 = v10;
    __int128 v34 = *(char **)(v31 + 88);
    unint64_t v53 = v31;
    __int128 v54 = v34;
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC860);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = xmmword_1890684B0;
    *(void *)(inited + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = v33;
    *(void *)(inited + 64) = *(void *)(v9 + 88);
    boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)(inited + 32));
    unint64_t v37 = (void (*)(uint64_t *, uint64_t, uint64_t))*((void *)v56 + 2);
    uint64_t v38 = v58;
    v37(boxed_opaque_existential_1Tm, v58, v33);
    uint64_t v68 = (char *)v32;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1890590BC((void *)inited);
    __int128 v56 = v68;
    uint64_t v39 = (uint64_t)v57;
    v37((uint64_t *)v57, v38, v33);
    swift_bridgeObjectRetain();
    uint64_t v40 = sub_189058058(v39, v32, v33);
    uint64_t v42 = v41;
    uint64_t v44 = v43;
    sub_18905989C(v38, (uint64_t)v72);
    uint64_t v68 = v54;
    unint64_t v69 = v53;
    uint64_t v70 = v56;
    v71[0] = v40;
    v71[1] = v42;
    v71[2] = v44;
    __int128 v66 = &type metadata for SingleValueDecoder;
    unint64_t v67 = sub_18905EA28();
    *(void *)&__int128 v65 = swift_allocObject();
    sub_189048AEC((uint64_t)&v68, v65 + 16);
    sub_189067A48();
    sub_189030230((uint64_t)&v68);
    return sub_188FFCDB0((uint64_t)v73, &qword_18C4FC488);
  }

  uint64_t v20 = v72[1];
  swift_bridgeObjectRetain();
  sub_189014560((uint64_t)&v68);
  if (*(void *)(v20 + 16) != 1LL)
  {
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }

  sub_189058694(v20);
  int v22 = v21;
  swift_bridgeObjectRelease();
  if ((v22 & 0x10000) != 0 || (v22 & 0x100) == 0) {
    goto LABEL_12;
  }
  sub_18901484C((uint64_t)v73, (uint64_t)&v68, &qword_18C4FC488);
  if (!v69)
  {
    sub_188FFCDB0((uint64_t)&v68, &qword_18C4FC488);
    __int128 v63 = 0u;
    __int128 v64 = 0u;
    goto LABEL_15;
  }

  sub_18901484C((uint64_t)v71, (uint64_t)&v63, &qword_18C4FC878);
  sub_189014560((uint64_t)&v68);
  if (!*((void *)&v64 + 1))
  {
LABEL_15:
    __int128 v29 = &qword_18C4FC878;
    __int128 v30 = (char **)&v63;
    goto LABEL_10;
  }

  sub_189014724(&v63, &v65);
  sub_188FFCD54((uint64_t)&v65, (uint64_t)&v68);
  __int128 v23 = v54;
  uint64_t v24 = v74;
  int v25 = swift_dynamicCast();
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  if (v25)
  {
    v26(v23, 0LL, 1LL, v24);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v65);
    sub_188FFCDB0((uint64_t)v73, &qword_18C4FC488);
    unint64_t v27 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v27(v17, v23, v24);
    return ((uint64_t (*)(uint64_t, char *, uint64_t))v27)(v61, v17, v24);
  }

  v26(v23, 1LL, 1LL, v24);
  (*(void (**)(char *, unint64_t))(v52 + 8))(v23, v53);
  uint64_t v68 = 0LL;
  unint64_t v69 = 0xE000000000000000LL;
  sub_189067CD0();
  __int128 v45 = v68;
  unint64_t v46 = v69;
  uint64_t result = sub_18901484C((uint64_t)v73, (uint64_t)&v68, &qword_18C4FC488);
  unint64_t v47 = v69;
  if (v69)
  {
    __int128 v48 = v68;
    __int128 v49 = v70;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_189014560((uint64_t)&v68);
    sub_18905EADC();
    swift_allocError();
    *(void *)uint64_t v50 = v45;
    *(void *)(v50 + 8) = v46;
    *(void *)(v50 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v48;
    *(void *)(v50 + 24) = v47;
    *(void *)(v50 + 32) = v49;
    *(_BYTE *)(v50 + 40) = 0;
    swift_willThrow();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v65);
    return sub_188FFCDB0((uint64_t)v73, &qword_18C4FC488);
  }

  __break(1u);
  return result;
}

uint64_t sub_189059F1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v10 = *v4;
  uint64_t v11 = *(void *)(*v4 + 80LL);
  *(void *)&__int128 v45 = *(void *)(v11 - 8);
  MEMORY[0x1895F8858](a1);
  *(void *)&__int128 v46 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)&__int128 v47 = v13;
  sub_18905989C(v13, (uint64_t)v58);
  sub_18901484C((uint64_t)v58, (uint64_t)&v48, &qword_18C4FC488);
  if (*((void *)&v48 + 1))
  {
    __int128 v55 = *(_OWORD *)&v49[16];
    __int128 v56 = *(_OWORD *)&v49[32];
    char v57 = v49[48];
    __int128 v53 = v48;
    __int128 v54 = *(_OWORD *)v49;
    if (*(void *)(*(void *)&v49[40] + 16LL) == 1LL)
    {
      sub_189058694(*(uint64_t *)&v49[40]);
      if ((v14 & 0x10100) == 0x100)
      {
        sub_188FFCDB0((uint64_t)v58, &qword_18C4FC488);
        sub_18901484C((uint64_t)&v54 + 8, (uint64_t)&v48, &qword_18C4FC878);
        sub_189014560((uint64_t)&v53);
        __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC878);
        int v15 = swift_dynamicCast();
        return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56LL))( a4,  v15 ^ 1u,  1LL,  a2);
      }
    }

    uint64_t v40 = a1;
    uint64_t v41 = a3;
    uint64_t v42 = a4;
    uint64_t v43 = a2;
    uint64_t v44 = v5;
    sub_189014560((uint64_t)&v53);
  }

  else
  {
    uint64_t v40 = a1;
    uint64_t v41 = a3;
    uint64_t v42 = a4;
    uint64_t v43 = a2;
    uint64_t v44 = v5;
    sub_188FFCDB0((uint64_t)&v48, &qword_18C4FC488);
  }

  uint64_t v17 = v45;
  uint64_t v18 = v4[2];
  uint64_t v19 = v4[3];
  *(void *)&__int128 v45 = *(void *)(v19 + 88);
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC860);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = xmmword_1890684B0;
  *(void *)(inited + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = v11;
  *(void *)(inited + 64) = *(void *)(v10 + 88);
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)(inited + 32));
  int v22 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v17 + 16);
  uint64_t v23 = v47;
  v22(boxed_opaque_existential_1Tm, v47, v11);
  *(void *)&__int128 v48 = v18;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1890590BC((void *)inited);
  uint64_t v59 = v48;
  uint64_t v24 = v46;
  v22((uint64_t *)v46, v23, v11);
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_189058058(v24, v18, v11);
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  sub_18901484C((uint64_t)v58, (uint64_t)&v56, &qword_18C4FC488);
  *(void *)&__int128 v53 = v45;
  *((void *)&v53 + 1) = v19;
  *(void *)&__int128 v54 = v59;
  *((void *)&v54 + 1) = v25;
  *(void *)&__int128 v55 = v27;
  *((void *)&v55 + 1) = v29;
  *(void *)&_OWORD v49[8] = &type metadata for SingleValueDecoder;
  *(void *)&v49[16] = sub_18905EA28();
  *(void *)&__int128 v48 = swift_allocObject();
  sub_189048AEC((uint64_t)&v53, v48 + 16);
  uint64_t v31 = v42;
  uint64_t v30 = v43;
  uint64_t v32 = v44;
  sub_189067A48();
  if (v32)
  {
    uint64_t v52 = v32;
    MEMORY[0x1895DD34C](v32);
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C761130);
    if (swift_dynamicCast())
    {
      MEMORY[0x1895DD340](v32);
      uint64_t v34 = *((void *)&v48 + 1);
      uint64_t v33 = *(void *)v49;
      char v35 = v51;
      if (v51 == 11)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_189030230((uint64_t)&v53);
        sub_188FFCDB0((uint64_t)v58, &qword_18C4FC488);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56LL))(v31, 1LL, 1LL, v30);
        return MEMORY[0x1895DD340](v52);
      }

      uint64_t v36 = v50;
      __int128 v46 = *(_OWORD *)&v49[24];
      __int128 v47 = *(_OWORD *)&v49[40];
      __int128 v45 = *(_OWORD *)&v49[8];
      uint64_t v37 = v48;
      sub_188FFAD68();
      swift_allocError();
      *(void *)uint64_t v38 = v37;
      *(void *)(v38 + 8) = v34;
      *(void *)(v38 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v33;
      *(_OWORD *)(v38 + 24) = v45;
      *(_OWORD *)(v38 + 40) = v46;
      *(_OWORD *)(v38 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = v47;
      *(void *)(v38 + 72) = v36;
      *(_BYTE *)(v38 + 80) = v35;
      swift_willThrow();
    }

    sub_189030230((uint64_t)&v53);
    sub_188FFCDB0((uint64_t)v58, &qword_18C4FC488);
    return MEMORY[0x1895DD340](v52);
  }

  else
  {
    sub_189030230((uint64_t)&v53);
    sub_188FFCDB0((uint64_t)v58, &qword_18C4FC488);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56LL))( v31,  0LL,  1LL,  v30);
  }

void sub_18905A388()
{
}

void sub_18905A3D0()
{
}

void sub_18905A418()
{
}

void sub_18905A460()
{
}

uint64_t sub_18905A4A8()
{
  return v0;
}

uint64_t sub_18905A4CC()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ParsedArgumentsContainer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata( a1,  a2,  a3,  a4,  (uint64_t)&nominal type descriptor for ParsedArgumentsContainer);
}

uint64_t sub_18905A504(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t destroy for DecodedArguments(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1Tm(a1 + 16);
}

_OWORD *initializeWithCopy for DecodedArguments(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  __int128 v3 = *(_OWORD *)((char *)a2 + 40);
  *(_OWORD *)((char *)a1 + 40) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))((uint64_t)(a1 + 1), (uint64_t)(a2 + 1));
  return a1;
}

uint64_t assignWithCopy for DecodedArguments(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    __int128 v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v9 = *(void *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        uint64_t v10 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *__int128 v3 = v10;
      }

      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }

    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      int v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }

        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }

        return (uint64_t *)swift_release();
      }

      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *__int128 v3 = *a2;
          swift_retain();
        }

        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }

        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }

  return result;
}

uint64_t assignWithTake for DecodedArguments(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 16);
  __int128 v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

ValueMetadata *type metadata accessor for DecodedArguments()
{
  return &type metadata for DecodedArguments;
}

uint64_t destroy for SingleValueDecoder(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 56);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 96)) {
      __swift_destroy_boxed_opaque_existential_1Tm(a1 + 72);
    }
    return swift_bridgeObjectRelease();
  }

  return result;
}

uint64_t initializeWithCopy for SingleValueDecoder(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7)
  {
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = v7;
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    uint64_t v8 = *(void *)(a2 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v8)
    {
      *(void *)(a1 + 96) = v8;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8))(a1 + 72, a2 + 72, v8);
    }

    else
    {
      __int128 v11 = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 88) = v11;
    }

    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
    swift_bridgeObjectRetain();
  }

  else
  {
    __int128 v9 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v9;
    *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
    __int128 v10 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v10;
  }

  return a1;
}

uint64_t assignWithCopy for SingleValueDecoder(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 48);
  uint64_t v5 = (_OWORD *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 56);
  if (*(void *)(a1 + 56))
  {
    if (v6)
    {
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = *(void *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v7 = *(void *)(a2 + 96);
      if (*(void *)(a1 + 96))
      {
        if (v7)
        {
          __swift_assign_boxed_opaque_existential_0((uint64_t *)(a1 + 72), (uint64_t *)(a2 + 72));
LABEL_15:
          *(void *)(a1 + 104) = *(void *)(a2 + 104);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
          return a1;
        }

        __swift_destroy_boxed_opaque_existential_1Tm(a1 + 72);
      }

      else if (v7)
      {
        *(void *)(a1 + 96) = v7;
        (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 72, a2 + 72);
        goto LABEL_15;
      }

      __int128 v15 = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 88) = v15;
      goto LABEL_15;
    }

    sub_189014560(a1 + 48);
    _OWORD *v4 = *v5;
    __int128 v10 = *(_OWORD *)(a2 + 80);
    __int128 v9 = *(_OWORD *)(a2 + 96);
    __int128 v11 = *(_OWORD *)(a2 + 64);
    *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
    *(_OWORD *)(a1 + 80) = v10;
    *(_OWORD *)(a1 + 96) = v9;
    *(_OWORD *)(a1 + 64) = v11;
  }

  else if (v6)
  {
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    uint64_t v8 = *(void *)(a2 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v8)
    {
      *(void *)(a1 + 96) = v8;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8))(a1 + 72, a2 + 72, v8);
    }

    else
    {
      __int128 v16 = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 88) = v16;
    }

    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
    swift_bridgeObjectRetain();
  }

  else
  {
    _OWORD *v4 = *v5;
    __int128 v12 = *(_OWORD *)(a2 + 64);
    __int128 v13 = *(_OWORD *)(a2 + 80);
    __int128 v14 = *(_OWORD *)(a2 + 96);
    *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
    *(_OWORD *)(a1 + 80) = v13;
    *(_OWORD *)(a1 + 96) = v14;
    *(_OWORD *)(a1 + 64) = v12;
  }

  return a1;
}

__n128 __swift_memcpy113_8(uint64_t a1, __int128 *a2)
{
  __int128 v2 = *a2;
  __int128 v3 = a2[1];
  __int128 v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v3;
  __n128 result = (__n128)a2[4];
  __int128 v6 = a2[5];
  __int128 v7 = a2[6];
  *(_BYTE *)(a1 + 112) = *((_BYTE *)a2 + 112);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for SingleValueDecoder(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 56)) {
    goto LABEL_7;
  }
  uint64_t v5 = *(void *)(a2 + 56);
  if (!v5)
  {
    sub_189014560(a1 + 48);
LABEL_7:
    __int128 v7 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v7;
    *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
    __int128 v8 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v8;
    return a1;
  }

  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 96)) {
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 72);
  }
  __int128 v6 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = v6;
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  return a1;
}

uint64_t getEnumTagSinglePayload for SingleValueDecoder(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *((_BYTE *)a1 + 113)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SingleValueDecoder(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0LL;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 112) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 113) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 113) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for SingleValueDecoder()
{
  return &type metadata for SingleValueDecoder;
}

uint64_t sub_18905AD24()
{
  return swift_bridgeObjectRetain();
}

void sub_18905AD30()
{
}

BOOL sub_18905AD3C(uint64_t a1)
{
  return sub_18905995C(a1);
}

uint64_t sub_18905AD60(uint64_t a1)
{
  return sub_1890599A4(a1) & 1;
}

uint64_t sub_18905AD84(uint64_t a1)
{
  if (!v1) {
    char v2 = v4;
  }
  return v2 & 1;
}

uint64_t sub_18905ADD0(uint64_t a1)
{
  uint64_t result = sub_189059A44(MEMORY[0x189617FA8], a1, MEMORY[0x189617FA8], MEMORY[0x189617FD8], (uint64_t)&v3);
  if (!v1) {
    return v3;
  }
  return result;
}

double sub_18905AE20(uint64_t a1)
{
  if (!v1) {
    return v3;
  }
  return result;
}

float sub_18905AE68(uint64_t a1)
{
  if (!v1) {
    return v3;
  }
  return result;
}

uint64_t sub_18905AEB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18905B0EC(a1, a2, a3, MEMORY[0x189618740], MEMORY[0x189618770]);
}

uint64_t sub_18905AED4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18905AFC0(a1, a2, a3, MEMORY[0x18961A350], MEMORY[0x18961A368]);
}

uint64_t sub_18905AEF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18905B024(a1, a2, a3, MEMORY[0x18961A408], MEMORY[0x18961A420]);
}

uint64_t sub_18905AF1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18905B088(a1, a2, a3, MEMORY[0x18961A458], MEMORY[0x18961A478]);
}

uint64_t sub_18905AF40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18905B0EC(a1, a2, a3, MEMORY[0x18961A4C0], MEMORY[0x18961A4E8]);
}

uint64_t sub_18905AF64()
{
  return sub_189067F94();
}

uint64_t sub_18905AF78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18905B0EC(a1, a2, a3, MEMORY[0x189618CD8], MEMORY[0x189618CF0]);
}

uint64_t sub_18905AF9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18905AFC0(a1, a2, a3, MEMORY[0x18961A610], MEMORY[0x18961A638]);
}

uint64_t sub_18905AFC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = sub_189059A44(a4, a1, a4, a5, (uint64_t)&v7);
  if (!v5) {
    return v7;
  }
  return result;
}

uint64_t sub_18905B000(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18905B024(a1, a2, a3, MEMORY[0x18961A800], MEMORY[0x18961A818]);
}

uint64_t sub_18905B024(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = sub_189059A44(a4, a1, a4, a5, (uint64_t)&v7);
  if (!v5) {
    return v7;
  }
  return result;
}

uint64_t sub_18905B064(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18905B088(a1, a2, a3, MEMORY[0x18961A860], MEMORY[0x18961A880]);
}

uint64_t sub_18905B088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = sub_189059A44(a4, a1, a4, a5, (uint64_t)&v7);
  if (!v5) {
    return v7;
  }
  return result;
}

uint64_t sub_18905B0C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18905B0EC(a1, a2, a3, MEMORY[0x18961A8C8], MEMORY[0x18961A8E8]);
}

uint64_t sub_18905B0EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = sub_189059A44(a4, a1, a4, a5, (uint64_t)&v7);
  if (!v5) {
    return v7;
  }
  return result;
}

uint64_t sub_18905B12C()
{
  return sub_189067FA0();
}

uint64_t sub_18905B140@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_189059A44(a1, a2, a3, a4, a5);
}

uint64_t sub_18905B160()
{
  return sub_189067F4C();
}

uint64_t sub_18905B174()
{
  return sub_189067F40();
}

uint64_t sub_18905B188()
{
  uint64_t result = sub_189067F58();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_18905B1A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18905B338(a1, a2, a3, MEMORY[0x18961A180]);
}

uint64_t sub_18905B1C4()
{
  uint64_t result = sub_189067F64();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_18905B1E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18905B2B0(a1, a2, a3, MEMORY[0x18961A1A0]);
}

uint64_t sub_18905B200(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18905B2F4(a1, a2, a3, MEMORY[0x18961A1A8]);
}

uint64_t sub_18905B21C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18905B338(a1, a2, a3, MEMORY[0x18961A1B0]);
}

uint64_t sub_18905B238()
{
  uint64_t result = sub_189067F7C();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_18905B258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18905B3A4(a1, a2, a3, MEMORY[0x18961A1C8]);
}

uint64_t sub_18905B274()
{
  uint64_t result = sub_189067F70();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_18905B294(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18905B2B0(a1, a2, a3, MEMORY[0x18961A1C0]);
}

uint64_t sub_18905B2B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4() & 0x1FF;
}

uint64_t sub_18905B2D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18905B2F4(a1, a2, a3, MEMORY[0x18961A1D0]);
}

uint64_t sub_18905B2F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4() & 0x1FFFF;
}

uint64_t sub_18905B31C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18905B338(a1, a2, a3, MEMORY[0x18961A1D8]);
}

uint64_t sub_18905B338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  unint64_t v4 = a4();
  return v4 | ((HIDWORD(v4) & 1) << 32);
}

uint64_t sub_18905B368()
{
  uint64_t result = sub_189067F88();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_18905B388(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18905B3A4(a1, a2, a3, MEMORY[0x18961A1E8]);
}

uint64_t sub_18905B3A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t result = a4();
  if (v4) {
    return v6;
  }
  return result;
}

uint64_t sub_18905B3C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  return sub_189059F1C(a1, a2, a3, a4);
}

void sub_18905B3E8()
{
}

void sub_18905B3F4()
{
}

void sub_18905B400()
{
}

void sub_18905B40C()
{
}

uint64_t sub_18905B418(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = type metadata accessor for ParsedArgumentsContainer(0LL, a2, a3, a4);
  uint64_t v7 = *(void *)(v4 + 8);
  uint64_t v6 = *(void *)(v4 + 16);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v6;
  *(void *)(v8 + 24) = v7;
  swift_retain();
  swift_bridgeObjectRetain();
  MEMORY[0x1895DD3F4](&unk_18906B38C, v5);
  return sub_189067E14();
}

void sub_18905B4B4(uint64_t *a1@<X8>)
{
  if (*((void *)&v23 + 1))
  {
    v29[1] = v25;
    uint64_t v29[2] = v26;
    char v30 = v27;
    __int128 v28 = v23;
    v29[0] = v24;
    sub_18901484C((uint64_t)v29 + 8, (uint64_t)&v23, &qword_18C4FC878);
    if (*((void *)&v24 + 1))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_18C761678);
      if ((swift_dynamicCast() & 1) != 0)
      {
        uint64_t v3 = *(void *)(v1 + 16);
        sub_1890145E8((uint64_t)&v28, (uint64_t)&v23);
        uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_18C761680);
        int v22 = &off_18A33D4D8;
        *((void *)&v20 + 1) = 0LL;
        swift_bridgeObjectRetain();
        sub_189014560((uint64_t)&v28);
        a1[3] = (uint64_t)&type metadata for SingleValueDecoder.UnkeyedContainer;
        a1[4] = sub_18905EC50();
        uint64_t v4 = swift_allocObject();
        *a1 = v4;
        *(void *)(v4 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v3;
        __int128 v5 = v23;
        *(_OWORD *)(v4 + 40) = v24;
        __int128 v6 = v26;
        *(_OWORD *)(v4 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = v25;
        *(_OWORD *)(v4 + 72) = v6;
        *(_BYTE *)(v4 + 88) = v27;
        *(_OWORD *)(v4 + 24) = v5;
        sub_188FFCFB0(&v20, v4 + 96);
        return;
      }
    }

    else
    {
      sub_188FFCDB0((uint64_t)&v23, &qword_18C4FC878);
    }

    sub_188FFAD68();
    swift_allocError();
    *(void *)uint64_t v19 = 3LL;
    *(_OWORD *)(v19 + 8) = 0u;
    *(_OWORD *)(v19 + 24) = 0u;
    *(_OWORD *)(v19 + 40) = 0u;
    *(_OWORD *)(v19 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = 0u;
    *(void *)(v19 + 72) = 0LL;
    *(_BYTE *)(v19 + 80) = 15;
    swift_willThrow();
    sub_189014560((uint64_t)&v28);
  }

  else
  {
    sub_188FFCDB0((uint64_t)&v23, &qword_18C4FC488);
    *(void *)&__int128 v20 = *(void *)(v1 + 16);
    swift_bridgeObjectRetain();
    sub_18905B7B4((uint64_t)&v23);
    if (*((void *)&v24 + 1))
    {
      sub_188FFCFB0(&v23, (uint64_t)&v28);
      sub_189006BE4((uint64_t)&v28, (uint64_t)&v23);
      uint64_t v7 = v20;
      uint64_t v8 = *((void *)&v24 + 1);
      uint64_t v9 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v23, *((uint64_t *)&v24 + 1));
      MEMORY[0x1895F8858](v9);
      __int128 v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
      (*(void (**)(char *))(v12 + 16))(v11);
      uint64_t v13 = sub_189058058((uint64_t)v11, v7, v8);
      uint64_t v15 = v14;
      uint64_t v17 = v16;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v23);
      sub_188FFAD68();
      swift_allocError();
      *(void *)uint64_t v18 = v13;
      *(void *)(v18 + 8) = v15;
      *(void *)(v18 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v17;
      *(_OWORD *)(v18 + 24) = 0u;
      *(_OWORD *)(v18 + 40) = 0u;
      *(_OWORD *)(v18 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = 0u;
      *(void *)(v18 + 72) = 0LL;
      *(_BYTE *)(v18 + 80) = 11;
      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v28);
    }

    else
    {
      __break(1u);
    }
  }

void sub_18905B7B4(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)(*(void *)v1 + 16LL))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
    {
      uint64_t v4 = v3[2];
      if (v4)
      {
LABEL_4:
        uint64_t v5 = v4 - 1;
        sub_188FFCFB0((__int128 *)&v3[5 * v4 - 1], (uint64_t)v6);
        v3[2] = v5;
        *(void *)uint64_t v1 = v3;
        sub_188FFCFB0(v6, (uint64_t)v7);
        sub_188FFCFB0(v7, a1);
        return;
      }
    }

    else
    {
      uint64_t v3 = sub_18905E770(v3);
      uint64_t v4 = v3[2];
      if (v4) {
        goto LABEL_4;
      }
    }

    __break(1u);
  }

  else
  {
    *(void *)(a1 + 32) = 0LL;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 0u;
  }

void sub_18905B860()
{
  if (*((void *)&v17 + 1))
  {
    v23[1] = v19;
    v23[2] = v20;
    char v24 = v21;
    __int128 v22 = v17;
    v23[0] = v18;
    sub_18901484C((uint64_t)v23 + 8, (uint64_t)&v17, &qword_18C4FC878);
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC878);
    if ((swift_dynamicCast() & 1) == 0)
    {
      __int128 v13 = v22;
      uint64_t v14 = *(void *)&v23[0];
      sub_18905EADC();
      swift_allocError();
      *(_OWORD *)uint64_t v15 = xmmword_18906B210;
      *(_OWORD *)(v15 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v13;
      *(void *)(v15 + 32) = v14;
      *(_BYTE *)(v15 + 40) = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_willThrow();
    }

    sub_189014560((uint64_t)&v22);
  }

  else
  {
    sub_188FFCDB0((uint64_t)&v17, &qword_18C4FC488);
    uint64_t v25 = *(void *)(v0 + 120);
    swift_bridgeObjectRetain();
    sub_18905B7B4((uint64_t)&v17);
    if (*((void *)&v18 + 1))
    {
      sub_188FFCFB0(&v17, (uint64_t)&v22);
      sub_189006BE4((uint64_t)&v22, (uint64_t)&v17);
      uint64_t v1 = v25;
      uint64_t v2 = *((void *)&v18 + 1);
      uint64_t v3 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v17, *((uint64_t *)&v18 + 1));
      MEMORY[0x1895F8858](v3);
      uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
      (*(void (**)(char *))(v6 + 16))(v5);
      uint64_t v7 = sub_189058058((uint64_t)v5, v1, v2);
      uint64_t v9 = v8;
      uint64_t v11 = v10;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v17);
      sub_188FFAD68();
      swift_allocError();
      *(void *)uint64_t v12 = v7;
      *(void *)(v12 + 8) = v9;
      *(void *)(v12 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v11;
      *(_OWORD *)(v12 + 24) = 0u;
      *(_OWORD *)(v12 + 40) = 0u;
      *(_OWORD *)(v12 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = 0u;
      *(void *)(v12 + 72) = 0LL;
      *(_BYTE *)(v12 + 80) = 11;
      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v22);
    }

    else
    {
      __break(1u);
    }
  }

void sub_18905BAB8()
{
  if (*((void *)&v18 + 1))
  {
    v24[1] = v20;
    void v24[2] = v21;
    char v25 = v22;
    __int128 v23 = v18;
    v24[0] = v19;
    sub_18901484C((uint64_t)v24 + 8, (uint64_t)&v18, &qword_18C4FC878);
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC878);
    if ((swift_dynamicCast() & 1) == 0)
    {
      __int128 v13 = v23;
      uint64_t v14 = *(void *)&v24[0];
      sub_18905EADC();
      swift_allocError();
      *(_OWORD *)uint64_t v15 = xmmword_18906B210;
      *(_OWORD *)(v15 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v13;
      *(void *)(v15 + 32) = v14;
      *(_BYTE *)(v15 + 40) = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_willThrow();
    }

    sub_189014560((uint64_t)&v23);
  }

  else
  {
    sub_188FFCDB0((uint64_t)&v18, &qword_18C4FC488);
    uint64_t v17 = *(void *)(v0 + 120);
    swift_bridgeObjectRetain();
    sub_18905B7B4((uint64_t)&v18);
    if (*((void *)&v19 + 1))
    {
      sub_188FFCFB0(&v18, (uint64_t)&v23);
      sub_189006BE4((uint64_t)&v23, (uint64_t)&v18);
      uint64_t v1 = v17;
      uint64_t v2 = *((void *)&v19 + 1);
      uint64_t v3 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v18, *((uint64_t *)&v19 + 1));
      MEMORY[0x1895F8858](v3);
      uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
      (*(void (**)(char *))(v6 + 16))(v5);
      uint64_t v7 = sub_189058058((uint64_t)v5, v1, v2);
      uint64_t v9 = v8;
      uint64_t v11 = v10;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v18);
      sub_188FFAD68();
      swift_allocError();
      *(void *)uint64_t v12 = v7;
      *(void *)(v12 + 8) = v9;
      *(void *)(v12 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v11;
      *(_OWORD *)(v12 + 24) = 0u;
      *(_OWORD *)(v12 + 40) = 0u;
      *(_OWORD *)(v12 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = 0u;
      *(void *)(v12 + 72) = 0LL;
      *(_BYTE *)(v12 + 80) = 11;
      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v23);
    }

    else
    {
      __break(1u);
    }
  }

void sub_18905BD08()
{
  if (*((void *)&v19 + 1))
  {
    v25[1] = v21;
    uint64_t v25[2] = v22;
    char v26 = v23;
    __int128 v24 = v19;
    v25[0] = v20;
    sub_18901484C((uint64_t)v25 + 8, (uint64_t)&v19, &qword_18C4FC878);
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC878);
    if ((swift_dynamicCast() & 1) != 0)
    {
      char v18 = 0;
    }

    else
    {
      __int128 v13 = v24;
      uint64_t v14 = *(void *)&v25[0];
      sub_18905EADC();
      swift_allocError();
      *(_OWORD *)uint64_t v15 = xmmword_18906B210;
      *(_OWORD *)(v15 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v13;
      *(void *)(v15 + 32) = v14;
      *(_BYTE *)(v15 + 40) = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_willThrow();
    }

    sub_189014560((uint64_t)&v24);
  }

  else
  {
    sub_188FFCDB0((uint64_t)&v19, &qword_18C4FC488);
    uint64_t v17 = *(void *)(v0 + 120);
    swift_bridgeObjectRetain();
    sub_18905B7B4((uint64_t)&v19);
    if (*((void *)&v20 + 1))
    {
      sub_188FFCFB0(&v19, (uint64_t)&v24);
      sub_189006BE4((uint64_t)&v24, (uint64_t)&v19);
      uint64_t v1 = v17;
      uint64_t v2 = *((void *)&v20 + 1);
      uint64_t v3 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v19, *((uint64_t *)&v20 + 1));
      MEMORY[0x1895F8858](v3);
      uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
      (*(void (**)(char *))(v6 + 16))(v5);
      uint64_t v7 = sub_189058058((uint64_t)v5, v1, v2);
      uint64_t v9 = v8;
      uint64_t v11 = v10;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v19);
      sub_188FFAD68();
      swift_allocError();
      *(void *)uint64_t v12 = v7;
      *(void *)(v12 + 8) = v9;
      *(void *)(v12 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v11;
      *(_OWORD *)(v12 + 24) = 0u;
      *(_OWORD *)(v12 + 40) = 0u;
      *(_OWORD *)(v12 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = 0u;
      *(void *)(v12 + 72) = 0LL;
      *(_BYTE *)(v12 + 80) = 11;
      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v24);
    }

    else
    {
      __break(1u);
    }
  }

void sub_18905BF5C()
{
  if (*((void *)&v17 + 1))
  {
    v23[1] = v19;
    v23[2] = v20;
    char v24 = v21;
    __int128 v22 = v17;
    v23[0] = v18;
    sub_18901484C((uint64_t)v23 + 8, (uint64_t)&v17, &qword_18C4FC878);
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC878);
    if ((swift_dynamicCast() & 1) != 0)
    {
      BYTE4(v25) = 0;
    }

    else
    {
      __int128 v13 = v22;
      uint64_t v14 = *(void *)&v23[0];
      sub_18905EADC();
      swift_allocError();
      *(_OWORD *)uint64_t v15 = xmmword_18906B210;
      *(_OWORD *)(v15 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v13;
      *(void *)(v15 + 32) = v14;
      *(_BYTE *)(v15 + 40) = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_willThrow();
    }

    sub_189014560((uint64_t)&v22);
  }

  else
  {
    sub_188FFCDB0((uint64_t)&v17, &qword_18C4FC488);
    uint64_t v25 = *(void *)(v0 + 120);
    swift_bridgeObjectRetain();
    sub_18905B7B4((uint64_t)&v17);
    if (*((void *)&v18 + 1))
    {
      sub_188FFCFB0(&v17, (uint64_t)&v22);
      sub_189006BE4((uint64_t)&v22, (uint64_t)&v17);
      uint64_t v1 = v25;
      uint64_t v2 = *((void *)&v18 + 1);
      uint64_t v3 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v17, *((uint64_t *)&v18 + 1));
      MEMORY[0x1895F8858](v3);
      uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
      (*(void (**)(char *))(v6 + 16))(v5);
      uint64_t v7 = sub_189058058((uint64_t)v5, v1, v2);
      uint64_t v9 = v8;
      uint64_t v11 = v10;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v17);
      sub_188FFAD68();
      swift_allocError();
      *(void *)uint64_t v12 = v7;
      *(void *)(v12 + 8) = v9;
      *(void *)(v12 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v11;
      *(_OWORD *)(v12 + 24) = 0u;
      *(_OWORD *)(v12 + 40) = 0u;
      *(_OWORD *)(v12 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = 0u;
      *(void *)(v12 + 72) = 0LL;
      *(_BYTE *)(v12 + 80) = 11;
      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v22);
    }

    else
    {
      __break(1u);
    }
  }

void sub_18905C1B0()
{
  if (*((void *)&v19 + 1))
  {
    v25[1] = v21;
    uint64_t v25[2] = v22;
    char v26 = v23;
    __int128 v24 = v19;
    v25[0] = v20;
    sub_18901484C((uint64_t)v25 + 8, (uint64_t)&v19, &qword_18C4FC878);
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC878);
    if ((swift_dynamicCast() & 1) != 0)
    {
      char v18 = 0;
    }

    else
    {
      __int128 v13 = v24;
      uint64_t v14 = *(void *)&v25[0];
      sub_18905EADC();
      swift_allocError();
      *(_OWORD *)uint64_t v15 = xmmword_18906B210;
      *(_OWORD *)(v15 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v13;
      *(void *)(v15 + 32) = v14;
      *(_BYTE *)(v15 + 40) = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_willThrow();
    }

    sub_189014560((uint64_t)&v24);
  }

  else
  {
    sub_188FFCDB0((uint64_t)&v19, &qword_18C4FC488);
    uint64_t v17 = *(void *)(v0 + 120);
    swift_bridgeObjectRetain();
    sub_18905B7B4((uint64_t)&v19);
    if (*((void *)&v20 + 1))
    {
      sub_188FFCFB0(&v19, (uint64_t)&v24);
      sub_189006BE4((uint64_t)&v24, (uint64_t)&v19);
      uint64_t v1 = v17;
      uint64_t v2 = *((void *)&v20 + 1);
      uint64_t v3 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v19, *((uint64_t *)&v20 + 1));
      MEMORY[0x1895F8858](v3);
      uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
      (*(void (**)(char *))(v6 + 16))(v5);
      uint64_t v7 = sub_189058058((uint64_t)v5, v1, v2);
      uint64_t v9 = v8;
      uint64_t v11 = v10;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v19);
      sub_188FFAD68();
      swift_allocError();
      *(void *)uint64_t v12 = v7;
      *(void *)(v12 + 8) = v9;
      *(void *)(v12 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v11;
      *(_OWORD *)(v12 + 24) = 0u;
      *(_OWORD *)(v12 + 40) = 0u;
      *(_OWORD *)(v12 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = 0u;
      *(void *)(v12 + 72) = 0LL;
      *(_BYTE *)(v12 + 80) = 11;
      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v24);
    }

    else
    {
      __break(1u);
    }
  }

void sub_18905C404()
{
  if (*((void *)&v17 + 1))
  {
    v23[1] = v19;
    v23[2] = v20;
    char v24 = v21;
    __int128 v22 = v17;
    v23[0] = v18;
    sub_18901484C((uint64_t)v23 + 8, (uint64_t)&v17, &qword_18C4FC878);
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC878);
    if ((swift_dynamicCast() & 1) != 0)
    {
      BYTE1(v25) = 0;
    }

    else
    {
      __int128 v13 = v22;
      uint64_t v14 = *(void *)&v23[0];
      sub_18905EADC();
      swift_allocError();
      *(_OWORD *)uint64_t v15 = xmmword_18906B210;
      *(_OWORD *)(v15 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v13;
      *(void *)(v15 + 32) = v14;
      *(_BYTE *)(v15 + 40) = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_willThrow();
    }

    sub_189014560((uint64_t)&v22);
  }

  else
  {
    sub_188FFCDB0((uint64_t)&v17, &qword_18C4FC488);
    uint64_t v25 = *(void *)(v0 + 120);
    swift_bridgeObjectRetain();
    sub_18905B7B4((uint64_t)&v17);
    if (*((void *)&v18 + 1))
    {
      sub_188FFCFB0(&v17, (uint64_t)&v22);
      sub_189006BE4((uint64_t)&v22, (uint64_t)&v17);
      uint64_t v1 = v25;
      uint64_t v2 = *((void *)&v18 + 1);
      uint64_t v3 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v17, *((uint64_t *)&v18 + 1));
      MEMORY[0x1895F8858](v3);
      uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
      (*(void (**)(char *))(v6 + 16))(v5);
      uint64_t v7 = sub_189058058((uint64_t)v5, v1, v2);
      uint64_t v9 = v8;
      uint64_t v11 = v10;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v17);
      sub_188FFAD68();
      swift_allocError();
      *(void *)uint64_t v12 = v7;
      *(void *)(v12 + 8) = v9;
      *(void *)(v12 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v11;
      *(_OWORD *)(v12 + 24) = 0u;
      *(_OWORD *)(v12 + 40) = 0u;
      *(_OWORD *)(v12 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = 0u;
      *(void *)(v12 + 72) = 0LL;
      *(_BYTE *)(v12 + 80) = 11;
      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v22);
    }

    else
    {
      __break(1u);
    }
  }

void sub_18905C658()
{
  if (*((void *)&v17 + 1))
  {
    v23[1] = v19;
    v23[2] = v20;
    char v24 = v21;
    __int128 v22 = v17;
    v23[0] = v18;
    sub_18901484C((uint64_t)v23 + 8, (uint64_t)&v17, &qword_18C4FC878);
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC878);
    if ((swift_dynamicCast() & 1) != 0)
    {
      BYTE2(v25) = 0;
    }

    else
    {
      __int128 v13 = v22;
      uint64_t v14 = *(void *)&v23[0];
      sub_18905EADC();
      swift_allocError();
      *(_OWORD *)uint64_t v15 = xmmword_18906B210;
      *(_OWORD *)(v15 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v13;
      *(void *)(v15 + 32) = v14;
      *(_BYTE *)(v15 + 40) = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_willThrow();
    }

    sub_189014560((uint64_t)&v22);
  }

  else
  {
    sub_188FFCDB0((uint64_t)&v17, &qword_18C4FC488);
    uint64_t v25 = *(void *)(v0 + 120);
    swift_bridgeObjectRetain();
    sub_18905B7B4((uint64_t)&v17);
    if (*((void *)&v18 + 1))
    {
      sub_188FFCFB0(&v17, (uint64_t)&v22);
      sub_189006BE4((uint64_t)&v22, (uint64_t)&v17);
      uint64_t v1 = v25;
      uint64_t v2 = *((void *)&v18 + 1);
      uint64_t v3 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v17, *((uint64_t *)&v18 + 1));
      MEMORY[0x1895F8858](v3);
      uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
      (*(void (**)(char *))(v6 + 16))(v5);
      uint64_t v7 = sub_189058058((uint64_t)v5, v1, v2);
      uint64_t v9 = v8;
      uint64_t v11 = v10;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v17);
      sub_188FFAD68();
      swift_allocError();
      *(void *)uint64_t v12 = v7;
      *(void *)(v12 + 8) = v9;
      *(void *)(v12 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v11;
      *(_OWORD *)(v12 + 24) = 0u;
      *(_OWORD *)(v12 + 40) = 0u;
      *(_OWORD *)(v12 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = 0u;
      *(void *)(v12 + 72) = 0LL;
      *(_BYTE *)(v12 + 80) = 11;
      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v22);
    }

    else
    {
      __break(1u);
    }
  }

void sub_18905C8AC()
{
  if (*((void *)&v17 + 1))
  {
    v23[1] = v19;
    v23[2] = v20;
    char v24 = v21;
    __int128 v22 = v17;
    v23[0] = v18;
    sub_18901484C((uint64_t)v23 + 8, (uint64_t)&v17, &qword_18C4FC878);
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC878);
    if ((swift_dynamicCast() & 1) != 0)
    {
      BYTE4(v25) = 0;
    }

    else
    {
      __int128 v13 = v22;
      uint64_t v14 = *(void *)&v23[0];
      sub_18905EADC();
      swift_allocError();
      *(_OWORD *)uint64_t v15 = xmmword_18906B210;
      *(_OWORD *)(v15 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v13;
      *(void *)(v15 + 32) = v14;
      *(_BYTE *)(v15 + 40) = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_willThrow();
    }

    sub_189014560((uint64_t)&v22);
  }

  else
  {
    sub_188FFCDB0((uint64_t)&v17, &qword_18C4FC488);
    uint64_t v25 = *(void *)(v0 + 120);
    swift_bridgeObjectRetain();
    sub_18905B7B4((uint64_t)&v17);
    if (*((void *)&v18 + 1))
    {
      sub_188FFCFB0(&v17, (uint64_t)&v22);
      sub_189006BE4((uint64_t)&v22, (uint64_t)&v17);
      uint64_t v1 = v25;
      uint64_t v2 = *((void *)&v18 + 1);
      uint64_t v3 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v17, *((uint64_t *)&v18 + 1));
      MEMORY[0x1895F8858](v3);
      uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
      (*(void (**)(char *))(v6 + 16))(v5);
      uint64_t v7 = sub_189058058((uint64_t)v5, v1, v2);
      uint64_t v9 = v8;
      uint64_t v11 = v10;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v17);
      sub_188FFAD68();
      swift_allocError();
      *(void *)uint64_t v12 = v7;
      *(void *)(v12 + 8) = v9;
      *(void *)(v12 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v11;
      *(_OWORD *)(v12 + 24) = 0u;
      *(_OWORD *)(v12 + 40) = 0u;
      *(_OWORD *)(v12 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = 0u;
      *(void *)(v12 + 72) = 0LL;
      *(_BYTE *)(v12 + 80) = 11;
      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v22);
    }

    else
    {
      __break(1u);
    }
  }

void sub_18905CB00(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_189067AB4();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1895F8858](v5);
  uint64_t v8 = (char *)&v27 - v7;
  sub_18901484C(v2 + 128, (uint64_t)&v28, &qword_18C4FC488);
  if (*((void *)&v28 + 1))
  {
    v34[1] = v30;
    uint64_t v34[2] = v31;
    char v35 = v32;
    __int128 v33 = v28;
    v34[0] = v29;
    sub_18901484C((uint64_t)v34 + 8, (uint64_t)&v28, &qword_18C4FC878);
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C4FC878);
    char v9 = swift_dynamicCast();
    uint64_t v10 = *(void *)(a1 - 8);
    uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    if ((v9 & 1) != 0)
    {
      v11(v8, 0LL, 1LL, a1);
      sub_189014560((uint64_t)&v33);
      (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(a2, v8, a1);
    }

    else
    {
      v11(v8, 1LL, 1LL, a1);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      __int128 v24 = v33;
      uint64_t v25 = *(void *)&v34[0];
      sub_18905EADC();
      swift_allocError();
      *(_OWORD *)uint64_t v26 = xmmword_18906B210;
      *(_OWORD *)(v26 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v24;
      *(void *)(v26 + 32) = v25;
      *(_BYTE *)(v26 + 40) = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_willThrow();
      sub_189014560((uint64_t)&v33);
    }
  }

  else
  {
    sub_188FFCDB0((uint64_t)&v28, &qword_18C4FC488);
    uint64_t v36 = *(void *)(v2 + 120);
    swift_bridgeObjectRetain();
    sub_18905B7B4((uint64_t)&v28);
    if (*((void *)&v29 + 1))
    {
      sub_188FFCFB0(&v28, (uint64_t)&v33);
      sub_189006BE4((uint64_t)&v33, (uint64_t)&v28);
      uint64_t v12 = v36;
      uint64_t v13 = *((void *)&v29 + 1);
      uint64_t v14 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v28, *((uint64_t *)&v29 + 1));
      MEMORY[0x1895F8858](v14);
      uint64_t v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
      (*(void (**)(char *))(v17 + 16))(v16);
      uint64_t v18 = sub_189058058((uint64_t)v16, v12, v13);
      uint64_t v20 = v19;
      uint64_t v22 = v21;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v28);
      sub_188FFAD68();
      swift_allocError();
      *(void *)uint64_t v23 = v18;
      *(void *)(v23 + 8) = v20;
      *(void *)(v23 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v22;
      *(_OWORD *)(v23 + 24) = 0u;
      *(_OWORD *)(v23 + 40) = 0u;
      *(_OWORD *)(v23 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = 0u;
      *(void *)(v23 + 72) = 0LL;
      *(_BYTE *)(v23 + 80) = 11;
      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v33);
    }

    else
    {
      __break(1u);
    }
  }

uint64_t sub_18905CDE0()
{
  return swift_bridgeObjectRetain();
}

BOOL sub_18905CDE8()
{
  BOOL v1 = v4 == 0;
  sub_188FFCDB0((uint64_t)v3, &qword_18C4FC488);
  return v1;
}

uint64_t sub_18905CE3C()
{
  return v0 & 1;
}

void sub_18905CE54()
{
}

void sub_18905CE68()
{
}

void sub_18905CE7C()
{
}

void sub_18905CE90()
{
}

void sub_18905CEAC()
{
}

void sub_18905CEC8()
{
}

void sub_18905CEE4()
{
}

void sub_18905CF00()
{
}

uint64_t sub_18905CF1C()
{
  return sub_189067F1C();
}

void sub_18905CF30()
{
}

void sub_18905CF4C()
{
}

void sub_18905CF68()
{
}

void sub_18905CF84()
{
}

void sub_18905CFA0()
{
}

uint64_t sub_18905CFBC()
{
  return sub_189067F28();
}

void sub_18905CFD0(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
}

uint64_t sub_18905CFE4()
{
  BOOL v1 = v0;
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[14];
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 10), v2);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v3 + 32))(&v12, v2, v3);
  if (v13)
  {
    sub_189014724(&v12, v14);
    sub_188FFCD54((uint64_t)v14, (uint64_t)&v12);
    if ((swift_dynamicCast() & 1) != 0)
    {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
      char v4 = v11 & 1;
    }

    else
    {
      *(void *)&__int128 v12 = 0LL;
      *((void *)&v12 + 1) = 0xE000000000000000LL;
      sub_189067CD0();
      __int128 v5 = v12;
      uint64_t v7 = v0[1];
      uint64_t v6 = v0[2];
      uint64_t v8 = v1[3];
      sub_18905EADC();
      swift_allocError();
      *(_OWORD *)uint64_t v9 = v5;
      *(void *)(v9 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v7;
      *(void *)(v9 + 24) = v6;
      *(void *)(v9 + 32) = v8;
      *(_BYTE *)(v9 + 40) = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
    }

    return v4 & 1;
  }

  else
  {
    sub_188FFCDB0((uint64_t)&v12, &qword_18C4FC878);
    uint64_t result = sub_189067D3C();
    __break(1u);
  }

  return result;
}

uint64_t sub_18905D17C()
{
  BOOL v1 = v0;
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[14];
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 10), v2);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v3 + 32))(&v11, v2, v3);
  if (v12)
  {
    sub_189014724(&v11, v13);
    sub_188FFCD54((uint64_t)v13, (uint64_t)&v11);
    if ((swift_dynamicCast() & 1) != 0)
    {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
      return v10;
    }

    else
    {
      *(void *)&__int128 v11 = 0LL;
      *((void *)&v11 + 1) = 0xE000000000000000LL;
      sub_189067CD0();
      __int128 v5 = v11;
      uint64_t v7 = v0[1];
      uint64_t v6 = v0[2];
      uint64_t v8 = v1[3];
      sub_18905EADC();
      swift_allocError();
      *(_OWORD *)uint64_t v9 = v5;
      *(void *)(v9 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v7;
      *(void *)(v9 + 24) = v6;
      *(void *)(v9 + 32) = v8;
      *(_BYTE *)(v9 + 40) = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
    }
  }

  else
  {
    sub_188FFCDB0((uint64_t)&v11, &qword_18C4FC878);
    uint64_t result = sub_189067D3C();
    __break(1u);
  }

  return result;
}

uint64_t sub_18905D30C()
{
  BOOL v1 = v0;
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[14];
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 10), v2);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v3 + 32))(&v10, v2, v3);
  if (v11)
  {
    sub_189014724(&v10, v12);
    sub_188FFCD54((uint64_t)v12, (uint64_t)&v10);
    if ((swift_dynamicCast() & 1) == 0)
    {
      *(void *)&__int128 v10 = 0LL;
      *((void *)&v10 + 1) = 0xE000000000000000LL;
      sub_189067CD0();
      __int128 v5 = v10;
      uint64_t v7 = v0[1];
      uint64_t v6 = v0[2];
      uint64_t v8 = v1[3];
      sub_18905EADC();
      swift_allocError();
      *(_OWORD *)uint64_t v9 = v5;
      *(void *)(v9 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v7;
      *(void *)(v9 + 24) = v6;
      *(void *)(v9 + 32) = v8;
      *(_BYTE *)(v9 + 40) = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_willThrow();
    }

    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  }

  else
  {
    sub_188FFCDB0((uint64_t)&v10, &qword_18C4FC878);
    uint64_t result = sub_189067D3C();
    __break(1u);
  }

  return result;
}

uint64_t sub_18905D4A0()
{
  BOOL v1 = v0;
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[14];
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 10), v2);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v3 + 32))(&v10, v2, v3);
  if (v11)
  {
    sub_189014724(&v10, v12);
    sub_188FFCD54((uint64_t)v12, (uint64_t)&v10);
    if ((swift_dynamicCast() & 1) == 0)
    {
      *(void *)&__int128 v10 = 0LL;
      *((void *)&v10 + 1) = 0xE000000000000000LL;
      sub_189067CD0();
      __int128 v5 = v10;
      uint64_t v7 = v0[1];
      uint64_t v6 = v0[2];
      uint64_t v8 = v1[3];
      sub_18905EADC();
      swift_allocError();
      *(_OWORD *)uint64_t v9 = v5;
      *(void *)(v9 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v7;
      *(void *)(v9 + 24) = v6;
      *(void *)(v9 + 32) = v8;
      *(_BYTE *)(v9 + 40) = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_willThrow();
    }

    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  }

  else
  {
    sub_188FFCDB0((uint64_t)&v10, &qword_18C4FC878);
    uint64_t result = sub_189067D3C();
    __break(1u);
  }

  return result;
}

uint64_t sub_18905D634()
{
  BOOL v1 = v0;
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[14];
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 10), v2);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v3 + 32))(&v11, v2, v3);
  if (v12)
  {
    sub_189014724(&v11, v13);
    sub_188FFCD54((uint64_t)v13, (uint64_t)&v11);
    if ((swift_dynamicCast() & 1) != 0)
    {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
      return v10;
    }

    else
    {
      *(void *)&__int128 v11 = 0LL;
      *((void *)&v11 + 1) = 0xE000000000000000LL;
      sub_189067CD0();
      __int128 v5 = v11;
      uint64_t v7 = v0[1];
      uint64_t v6 = v0[2];
      uint64_t v8 = v1[3];
      sub_18905EADC();
      swift_allocError();
      *(_OWORD *)uint64_t v9 = v5;
      *(void *)(v9 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v7;
      *(void *)(v9 + 24) = v6;
      *(void *)(v9 + 32) = v8;
      *(_BYTE *)(v9 + 40) = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
    }
  }

  else
  {
    sub_188FFCDB0((uint64_t)&v11, &qword_18C4FC878);
    uint64_t result = sub_189067D3C();
    __break(1u);
  }

  return result;
}

uint64_t sub_18905D7C8()
{
  BOOL v1 = v0;
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[14];
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 10), v2);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v3 + 32))(&v11, v2, v3);
  if (v12)
  {
    sub_189014724(&v11, v13);
    sub_188FFCD54((uint64_t)v13, (uint64_t)&v11);
    if ((swift_dynamicCast() & 1) != 0)
    {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
      return v10;
    }

    else
    {
      *(void *)&__int128 v11 = 0LL;
      *((void *)&v11 + 1) = 0xE000000000000000LL;
      sub_189067CD0();
      __int128 v5 = v11;
      uint64_t v7 = v0[1];
      uint64_t v6 = v0[2];
      uint64_t v8 = v1[3];
      sub_18905EADC();
      swift_allocError();
      *(_OWORD *)uint64_t v9 = v5;
      *(void *)(v9 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v7;
      *(void *)(v9 + 24) = v6;
      *(void *)(v9 + 32) = v8;
      *(_BYTE *)(v9 + 40) = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
    }
  }

  else
  {
    sub_188FFCDB0((uint64_t)&v11, &qword_18C4FC878);
    uint64_t result = sub_189067D3C();
    __break(1u);
  }

  return result;
}

uint64_t sub_18905D95C()
{
  BOOL v1 = v0;
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[14];
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 10), v2);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v3 + 32))(&v11, v2, v3);
  if (v12)
  {
    sub_189014724(&v11, v13);
    sub_188FFCD54((uint64_t)v13, (uint64_t)&v11);
    if ((swift_dynamicCast() & 1) != 0)
    {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
      return v10;
    }

    else
    {
      *(void *)&__int128 v11 = 0LL;
      *((void *)&v11 + 1) = 0xE000000000000000LL;
      sub_189067CD0();
      __int128 v5 = v11;
      uint64_t v7 = v0[1];
      uint64_t v6 = v0[2];
      uint64_t v8 = v1[3];
      sub_18905EADC();
      swift_allocError();
      *(_OWORD *)uint64_t v9 = v5;
      *(void *)(v9 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v7;
      *(void *)(v9 + 24) = v6;
      *(void *)(v9 + 32) = v8;
      *(_BYTE *)(v9 + 40) = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
    }
  }

  else
  {
    sub_188FFCDB0((uint64_t)&v11, &qword_18C4FC878);
    uint64_t result = sub_189067D3C();
    __break(1u);
  }

  return result;
}

uint64_t sub_18905DAF0()
{
  BOOL v1 = v0;
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[14];
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 10), v2);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v3 + 32))(&v11, v2, v3);
  if (v12)
  {
    sub_189014724(&v11, v13);
    sub_188FFCD54((uint64_t)v13, (uint64_t)&v11);
    if ((swift_dynamicCast() & 1) != 0)
    {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
      return v10;
    }

    else
    {
      *(void *)&__int128 v11 = 0LL;
      *((void *)&v11 + 1) = 0xE000000000000000LL;
      sub_189067CD0();
      __int128 v5 = v11;
      uint64_t v7 = v0[1];
      uint64_t v6 = v0[2];
      uint64_t v8 = v1[3];
      sub_18905EADC();
      swift_allocError();
      *(_OWORD *)uint64_t v9 = v5;
      *(void *)(v9 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v7;
      *(void *)(v9 + 24) = v6;
      *(void *)(v9 + 32) = v8;
      *(_BYTE *)(v9 + 40) = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
    }
  }

  else
  {
    sub_188FFCDB0((uint64_t)&v11, &qword_18C4FC878);
    uint64_t result = sub_189067D3C();
    __break(1u);
  }

  return result;
}

uint64_t sub_18905DC84@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v23 = a2;
  uint64_t v5 = sub_189067AB4();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1895F8858](v5);
  uint64_t v8 = (char *)&v20 - v7;
  uint64_t v9 = v2[13];
  uint64_t v10 = v2[14];
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v2 + 10), v9);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v10 + 32))(&v20, v9, v10);
  if (v21)
  {
    sub_189014724(&v20, v22);
    sub_188FFCD54((uint64_t)v22, (uint64_t)&v20);
    char v11 = swift_dynamicCast();
    uint64_t v12 = *(void *)(a1 - 8);
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
    if ((v11 & 1) != 0)
    {
      v13(v8, 0LL, 1LL, a1);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v22);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 32))(v23, v8, a1);
    }

    else
    {
      v13(v8, 1LL, 1LL, a1);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      *(void *)&__int128 v20 = 0LL;
      *((void *)&v20 + 1) = 0xE000000000000000LL;
      sub_189067CD0();
      __int128 v15 = v20;
      uint64_t v17 = v2[1];
      uint64_t v16 = v2[2];
      uint64_t v18 = v3[3];
      sub_18905EADC();
      swift_allocError();
      *(_OWORD *)uint64_t v19 = v15;
      *(void *)(v19 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v17;
      *(void *)(v19 + 24) = v16;
      *(void *)(v19 + 32) = v18;
      *(_BYTE *)(v19 + 40) = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v22);
    }
  }

  else
  {
    sub_188FFCDB0((uint64_t)&v20, &qword_18C4FC878);
    uint64_t result = sub_189067D3C();
    __break(1u);
  }

  return result;
}

void sub_18905DEB4()
{
}

uint64_t sub_18905DEFC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_18905DF04()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[14];
  __swift_project_boxed_opaque_existential_1(v0 + 10, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
}

uint64_t sub_18905DF4C()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[14];
  __swift_project_boxed_opaque_existential_1(v0 + 10, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2) & 1;
}

uint64_t sub_18905DF94()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[14];
  __swift_project_boxed_opaque_existential_1(v0 + 10, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 24))(v1, v2);
}

uint64_t sub_18905DFD8()
{
  return sub_18905CFE4() & 1;
}

uint64_t sub_18905DFF0()
{
  return sub_18905D17C();
}

uint64_t sub_18905E004()
{
  return sub_18905D30C();
}

uint64_t sub_18905E018()
{
  return sub_18905D4A0();
}

uint64_t sub_18905E02C()
{
  return sub_18905D634();
}

uint64_t sub_18905E048()
{
  return sub_18905D7C8();
}

uint64_t sub_18905E064()
{
  return sub_18905D95C();
}

uint64_t sub_18905E080()
{
  return sub_18905DAF0();
}

uint64_t sub_18905E09C()
{
  return sub_18905D634();
}

uint64_t sub_18905E0B8()
{
  return sub_189067EE0();
}

uint64_t sub_18905E0CC()
{
  return sub_18905D634();
}

uint64_t sub_18905E0E8()
{
  return sub_18905D7C8();
}

uint64_t sub_18905E104()
{
  return sub_18905D95C();
}

uint64_t sub_18905E120()
{
  return sub_18905DAF0();
}

uint64_t sub_18905E13C()
{
  return sub_18905D634();
}

uint64_t sub_18905E158()
{
  return sub_189067EEC();
}

uint64_t sub_18905E16C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_18905DC84(a1, a2);
}

uint64_t sub_18905E180()
{
  return sub_189067E8C();
}

uint64_t sub_18905E194()
{
  return sub_189067E80();
}

uint64_t sub_18905E1A8()
{
  uint64_t result = sub_189067E98();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_18905E1C8(uint64_t a1, uint64_t a2)
{
  return sub_18905E358(a1, a2, MEMORY[0x189619DA8]);
}

uint64_t sub_18905E1E4()
{
  uint64_t result = sub_189067EA4();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_18905E204(uint64_t a1, uint64_t a2)
{
  return sub_18905E2D0(a1, a2, MEMORY[0x189619DC8]);
}

uint64_t sub_18905E220(uint64_t a1, uint64_t a2)
{
  return sub_18905E314(a1, a2, MEMORY[0x189619DD0]);
}

uint64_t sub_18905E23C(uint64_t a1, uint64_t a2)
{
  return sub_18905E358(a1, a2, MEMORY[0x189619DD8]);
}

uint64_t sub_18905E258()
{
  uint64_t result = sub_189067EC8();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_18905E278(uint64_t a1, uint64_t a2)
{
  return sub_18905E3C4(a1, a2, MEMORY[0x189619DF0]);
}

uint64_t sub_18905E294()
{
  uint64_t result = sub_189067EB0();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_18905E2B4(uint64_t a1, uint64_t a2)
{
  return sub_18905E2D0(a1, a2, MEMORY[0x189619DE8]);
}

uint64_t sub_18905E2D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3() & 0x1FF;
}

uint64_t sub_18905E2F8(uint64_t a1, uint64_t a2)
{
  return sub_18905E314(a1, a2, MEMORY[0x189619DF8]);
}

uint64_t sub_18905E314(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3() & 0x1FFFF;
}

uint64_t sub_18905E33C(uint64_t a1, uint64_t a2)
{
  return sub_18905E358(a1, a2, MEMORY[0x189619E00]);
}

uint64_t sub_18905E358(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  unint64_t v3 = a3();
  return v3 | ((HIDWORD(v3) & 1) << 32);
}

uint64_t sub_18905E388()
{
  uint64_t result = sub_189067ED4();
  if (v0) {
    return v2;
  }
  return result;
}

uint64_t sub_18905E3A8(uint64_t a1, uint64_t a2)
{
  return sub_18905E3C4(a1, a2, MEMORY[0x189619E10]);
}

uint64_t sub_18905E3C4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t result = a3();
  if (v3) {
    return v5;
  }
  return result;
}

uint64_t sub_18905E3E8()
{
  return sub_189067EBC();
}

void sub_18905E410()
{
}

void sub_18905E41C()
{
}

void sub_18905E464()
{
}

uint64_t sub_18905E4AC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_18905E4B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_18905B418(a1, a2, a3, a4);
}

void sub_18905E4C8(uint64_t *a1@<X8>)
{
}

uint64_t sub_18905E4DC@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = (uint64_t)&type metadata for SingleValueDecoder.SingleValueContainer;
  a1[4] = sub_18905EB68();
  uint64_t v3 = swift_allocObject();
  *a1 = v3;
  sub_189048AEC(v1, v3 + 16);
  uint64_t v4 = *(void *)(v1 + 16);
  sub_18901484C(v1 + 48, v3 + 144, &qword_18C4FC488);
  *(void *)(v3 + 136) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_18905E568(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 88);
}

unint64_t sub_18905E570()
{
  unint64_t result = qword_18C761660;
  if (!qword_18C761660)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&unk_18906B804, &type metadata for ArgumentDecoder.Error);
    atomic_store(result, (unint64_t *)&qword_18C761660);
  }

  return result;
}

uint64_t sub_18905E5B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1895DCAA0](a1, a3);
}

BOOL sub_18905E5D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1895DCAB8](a1, a3) <= a2;
}

double sub_18905E5FC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2[1];
  uint64_t v5 = *(void *)(a1 + 16);
  if (v4 >= MEMORY[0x1895DCAB8](*v2, v5))
  {
    double result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 0u;
  }

  else
  {
    *(void *)(a2 + 24) = v5;
    __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)a2);
    sub_189067A3C();
    v2[1] = v4 + 1;
  }

  return result;
}

uint64_t sub_18905E678(uint64_t a1, uint64_t a2)
{
  return sub_18905E5B4(*v2, a2, *(void *)(a1 + 16));
}

BOOL sub_18905E69C(uint64_t a1)
{
  return sub_18905E5D0(*v1, v1[1], *(void *)(a1 + 16));
}

uint64_t sub_18905E6AC()
{
  return *(void *)(v0 + 8);
}

char *sub_18905E6B8(uint64_t a1)
{
  return sub_1890572A8(0LL, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_18905E6CC(uint64_t a1)
{
  return sub_1890574A0(0LL, *(void *)(a1 + 16), 0, (char *)a1);
}

void sub_18905E6E0(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_189067D54();
    swift_bridgeObjectRelease();
  }

  JUMPOUT(0x1895DCD04LL);
}

char *sub_18905E748(uint64_t a1)
{
  return sub_189057E2C(0LL, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_18905E75C(uint64_t a1)
{
  return sub_1890578E0(0LL, *(void *)(a1 + 16), 0, (char *)a1);
}

void *sub_18905E770(void *a1)
{
  return sub_189057F24(0LL, a1[2], 0, a1);
}

uint64_t *sub_18905E784( uint64_t *result, char *__dst, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v11 = result;
  if (!__dst) {
    goto LABEL_5;
  }
  if (!a3)
  {
    uint64_t v7 = a4;
    double result = 0LL;
    goto LABEL_21;
  }

  if ((a3 & 0x8000000000000000LL) == 0)
  {
    if (a5 == a4)
    {
LABEL_5:
      double result = 0LL;
      uint64_t v7 = a4;
LABEL_21:
      *char v11 = a4;
      v11[1] = a5;
      v11[2] = a6;
      v11[3] = a7;
      v11[4] = v7;
      return result;
    }

    uint64_t v25 = a7;
    uint64_t v24 = a5 - a4;
    if (a5 <= a4)
    {
LABEL_18:
      __break(1u);
LABEL_19:
      sub_188FFCFF4((uint64_t)result);
      a7 = v25;
      double result = (uint64_t *)a3;
      goto LABEL_21;
    }

    uint64_t v12 = __dst;
    uint64_t v13 = 0LL;
    uint64_t v14 = *(void *)(a6 + 16);
    if (v14 <= a4) {
      uint64_t v14 = a4;
    }
    uint64_t v27 = v14 - a4;
    uint64_t v15 = a3 - 1;
    uint64_t v16 = (_OWORD *)(a6 + 192 * a4 + 32);
    uint64_t v17 = a4 - a5 + 1;
    while ((a4 & 0x8000000000000000LL) == 0)
    {
      __int128 v18 = v16[9];
      v28[8] = v16[8];
      v28[9] = v18;
      __int128 v19 = v16[11];
      v28[10] = v16[10];
      v28[11] = v19;
      __int128 v20 = v16[5];
      v28[4] = v16[4];
      v28[5] = v20;
      __int128 v21 = v16[7];
      v28[6] = v16[6];
      v28[7] = v21;
      __int128 v22 = v16[1];
      v28[0] = *v16;
      v28[1] = v22;
      __int128 v23 = v16[3];
      uint64_t v28[2] = v16[2];
      v28[3] = v23;
      if (v27 == v13) {
        goto LABEL_24;
      }
      uint64_t v7 = a4 + v13 + 1;
      memmove(v12, v16, 0xC0uLL);
      double result = (uint64_t *)v28;
      if (v15 == v13) {
        goto LABEL_19;
      }
      if (!(v17 + v13))
      {
        sub_188FFCFF4((uint64_t)v28);
        uint64_t v7 = a5;
        double result = (uint64_t *)v24;
        a7 = v25;
        goto LABEL_21;
      }

      double result = (uint64_t *)sub_188FFCFF4((uint64_t)v28);
      if (v7 >= a4)
      {
        v12 += 192;
        ++v13;
        v16 += 12;
        if (v7 < a5) {
          continue;
        }
      }

      goto LABEL_18;
    }

    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
  }

  __break(1u);
  return result;
}

uint64_t sub_18905E918(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0LL;
    return __clz(__rbit64(v1)) + v2;
  }

  char v5 = *(_BYTE *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1LL << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64LL;
    return __clz(__rbit64(v1)) + v2;
  }

  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128LL;
    return __clz(__rbit64(v1)) + v2;
  }

  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3LL;
  }
  unint64_t v8 = v7 - 3;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128LL;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64LL;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }

  return v3;
}

uint64_t sub_18905E9B8(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1LL << *(_BYTE *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }

  if (((*(void *)(a4 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8LL) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }

  if (*(_DWORD *)(a4 + 36) == a2) {
    return *(void *)(*(void *)(a4 + 48) + 24 * result);
  }
LABEL_8:
  __break(1u);
  return result;
}

unint64_t sub_18905EA28()
{
  unint64_t result = qword_18C4FC4B0;
  if (!qword_18C4FC4B0)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&unk_18906B344, &type metadata for SingleValueDecoder);
    atomic_store(result, (unint64_t *)&qword_18C4FC4B0);
  }

  return result;
}

uint64_t sub_18905EA6C()
{
  if (*(void *)(v0 + 72))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v0 + 112)) {
      __swift_destroy_boxed_opaque_existential_1Tm(v0 + 88);
    }
    swift_bridgeObjectRelease();
  }

  return swift_deallocObject();
}

unint64_t sub_18905EADC()
{
  unint64_t result = qword_18C761668;
  if (!qword_18C761668)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&unk_18906A214, &type metadata for InternalParseError);
    atomic_store(result, (unint64_t *)&qword_18C761668);
  }

  return result;
}

void sub_18905EB20()
{
}

unint64_t sub_18905EB68()
{
  unint64_t result = qword_18C761670;
  if (!qword_18C761670)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&unk_18906B74C, &type metadata for SingleValueDecoder.SingleValueContainer);
    atomic_store(result, (unint64_t *)&qword_18C761670);
  }

  return result;
}

uint64_t sub_18905EBAC()
{
  if (v0[9])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v0[14]) {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 11));
    }
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  if (v0[19])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v0[24]) {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 21));
    }
    swift_bridgeObjectRelease();
  }

  return swift_deallocObject();
}

unint64_t sub_18905EC50()
{
  unint64_t result = qword_18C761688;
  if (!qword_18C761688)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&unk_18906B5CC, &type metadata for SingleValueDecoder.UnkeyedContainer);
    atomic_store(result, (unint64_t *)&qword_18C761688);
  }

  return result;
}

uint64_t sub_18905EC94()
{
  if (*(void *)(v0 + 72)) {
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 48);
  }
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 96);
  return swift_deallocObject();
}

uint64_t destroy for SingleValueDecoder.UnkeyedContainer(uint64_t a1)
{
  if (*(void *)(a1 + 56)) {
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 32);
  }
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1Tm(a1 + 80);
}

uint64_t initializeWithCopy for SingleValueDecoder.UnkeyedContainer(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  unsigned int v6 = (_OWORD *)(a1 + 32);
  unint64_t v7 = (_OWORD *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8)
  {
    *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = v8;
    (**(void (***)(uint64_t, _OWORD *, uint64_t))(v8 - 8))(a1 + 32, v7, v8);
  }

  else
  {
    __int128 v9 = v7[1];
    *unsigned int v6 = *v7;
    *(_OWORD *)(a1 + 48) = v9;
  }

  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  uint64_t v10 = a2 + 80;
  __int128 v11 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 104) = v11;
  uint64_t v12 = v11;
  uint64_t v13 = **(void (***)(uint64_t, uint64_t, uint64_t))(v11 - 8);
  swift_bridgeObjectRetain();
  v13(a1 + 80, v10, v12);
  return a1;
}

uint64_t assignWithCopy for SingleValueDecoder.UnkeyedContainer(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 56);
  if (!*(void *)(a1 + 56))
  {
    if (v4)
    {
      *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = v4;
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 32, a2 + 32);
      goto LABEL_8;
    }

uint64_t assignWithTake for SingleValueDecoder.UnkeyedContainer(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 56)) {
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 32);
  }
  __int128 v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 80);
  __int128 v6 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v6;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  return a1;
}

uint64_t getEnumTagSinglePayload for SingleValueDecoder.UnkeyedContainer(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *((_BYTE *)a1 + 120)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SingleValueDecoder.UnkeyedContainer(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 120) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 120) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for SingleValueDecoder.UnkeyedContainer()
{
  return &type metadata for SingleValueDecoder.UnkeyedContainer;
}

void *sub_18905F070(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_18905F09C()
{
  return swift_bridgeObjectRelease();
}

void *sub_18905F0A4(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

void *sub_18905F0F0(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

uint64_t type metadata accessor for ArrayWrapper(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ArrayWrapper);
}

uint64_t destroy for SingleValueDecoder.SingleValueContainer(void *a1)
{
  if (a1[7])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (a1[12]) {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(a1 + 9));
    }
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  uint64_t result = a1[17];
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (a1[22]) {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(a1 + 19));
    }
    return swift_bridgeObjectRelease();
  }

  return result;
}

uint64_t initializeWithCopy for SingleValueDecoder.SingleValueContainer(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7)
  {
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = v7;
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    uint64_t v8 = *(void *)(a2 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v8)
    {
      *(void *)(a1 + 96) = v8;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8))(a1 + 72, a2 + 72, v8);
    }

    else
    {
      __int128 v11 = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 88) = v11;
    }

    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
    swift_bridgeObjectRetain();
  }

  else
  {
    __int128 v9 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v9;
    *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
    __int128 v10 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v10;
  }

  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  uint64_t v12 = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  if (v12)
  {
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = v12;
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    uint64_t v13 = *(void *)(a2 + 176);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13)
    {
      *(void *)(a1 + 176) = v13;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v13 - 8))(a1 + 152, a2 + 152, v13);
    }

    else
    {
      __int128 v16 = *(_OWORD *)(a2 + 168);
      *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
      *(_OWORD *)(a1 + 168) = v16;
    }

    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
    swift_bridgeObjectRetain();
  }

  else
  {
    __int128 v14 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v14;
    *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
    __int128 v15 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v15;
  }

  return a1;
}

uint64_t assignWithCopy for SingleValueDecoder.SingleValueContainer(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 48);
  uint64_t v5 = (_OWORD *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 56);
  if (*(void *)(a1 + 56))
  {
    if (!v6)
    {
      sub_189014560(a1 + 48);
      _OWORD *v4 = *v5;
      __int128 v10 = *(_OWORD *)(a2 + 80);
      __int128 v9 = *(_OWORD *)(a2 + 96);
      __int128 v11 = *(_OWORD *)(a2 + 64);
      *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
      *(_OWORD *)(a1 + 80) = v10;
      *(_OWORD *)(a1 + 96) = v9;
      *(_OWORD *)(a1 + 64) = v11;
      goto LABEL_18;
    }

    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = *(void *)(a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v7 = *(void *)(a2 + 96);
    if (*(void *)(a1 + 96))
    {
      if (v7)
      {
        __swift_assign_boxed_opaque_existential_0((uint64_t *)(a1 + 72), (uint64_t *)(a2 + 72));
LABEL_15:
        *(void *)(a1 + 104) = *(void *)(a2 + 104);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
        goto LABEL_18;
      }

      __swift_destroy_boxed_opaque_existential_1Tm(a1 + 72);
    }

    else if (v7)
    {
      *(void *)(a1 + 96) = v7;
      (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 72, a2 + 72);
      goto LABEL_15;
    }

    __int128 v15 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v15;
    goto LABEL_15;
  }

  if (v6)
  {
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    uint64_t v8 = *(void *)(a2 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v8)
    {
      *(void *)(a1 + 96) = v8;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8))(a1 + 72, a2 + 72, v8);
    }

    else
    {
      __int128 v16 = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 88) = v16;
    }

    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
    swift_bridgeObjectRetain();
  }

  else
  {
    _OWORD *v4 = *v5;
    __int128 v12 = *(_OWORD *)(a2 + 64);
    __int128 v13 = *(_OWORD *)(a2 + 80);
    __int128 v14 = *(_OWORD *)(a2 + 96);
    *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
    *(_OWORD *)(a1 + 80) = v13;
    *(_OWORD *)(a1 + 96) = v14;
    *(_OWORD *)(a1 + 64) = v12;
  }

__n128 __swift_memcpy193_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __int128 v2 = *(_OWORD *)(a2 + 16);
  __int128 v3 = *(_OWORD *)(a2 + 32);
  __int128 v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __int128 v5 = *(_OWORD *)(a2 + 80);
  __int128 v6 = *(_OWORD *)(a2 + 96);
  __int128 v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  __n128 result = *(__n128 *)(a2 + 144);
  __int128 v9 = *(_OWORD *)(a2 + 160);
  __int128 v10 = *(_OWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 144) = result;
  return result;
}

uint64_t assignWithTake for SingleValueDecoder.SingleValueContainer(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 56)) {
    goto LABEL_7;
  }
  uint64_t v5 = *(void *)(a2 + 56);
  if (!v5)
  {
    sub_189014560(a1 + 48);
LABEL_7:
    __int128 v7 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v7;
    *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
    __int128 v8 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v8;
    goto LABEL_8;
  }

  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 96)) {
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 72);
  }
  __int128 v6 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = v6;
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
LABEL_8:
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 136))
  {
LABEL_14:
    __int128 v11 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v11;
    *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
    __int128 v12 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v12;
    return a1;
  }

  uint64_t v9 = *(void *)(a2 + 136);
  if (!v9)
  {
    sub_189014560(a1 + 128);
    goto LABEL_14;
  }

  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v9;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 176)) {
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 152);
  }
  __int128 v10 = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = v10;
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  return a1;
}

uint64_t getEnumTagSinglePayload for SingleValueDecoder.SingleValueContainer(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *((_BYTE *)a1 + 193)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SingleValueDecoder.SingleValueContainer( uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 184) = 0LL;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 192) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 193) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 193) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for SingleValueDecoder.SingleValueContainer()
{
  return &type metadata for SingleValueDecoder.SingleValueContainer;
}

uint64_t getEnumTagSinglePayload for ArgumentDecoder.Error(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 >= 0x7FFFFFFD && *((_BYTE *)a1 + 32)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  uint64_t v3 = *a1;
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 2;
  if (v4 >= 4) {
    return v5;
  }
  else {
    return 0LL;
  }
}

uint64_t storeEnumTagSinglePayload for ArgumentDecoder.Error( uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(_OWORD *)__n128 result = 0u;
    *(_OWORD *)(result + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 0u;
    *(_DWORD *)__n128 result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(_BYTE *)(result + 32) = 1;
    }
  }

  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(_BYTE *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2 + 2;
    }
  }

  return result;
}

void *sub_18905FAE8(void *result, int a2)
{
  if (a2 < 0)
  {
    uint64_t v2 = a2 ^ 0x80000000;
    result[2] = 0LL;
    result[3] = 0LL;
    result[1] = 0LL;
  }

  else
  {
    if (!a2) {
      return result;
    }
    uint64_t v2 = (a2 - 1);
  }

  *__n128 result = v2;
  return result;
}

ValueMetadata *type metadata accessor for ArgumentDecoder.Error()
{
  return &type metadata for ArgumentDecoder.Error;
}

uint64_t sub_18905FB20(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xEA00000000006C61LL;
  uint64_t v3 = 0x6E6F697469736F70LL;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0x6E6F6974706FLL;
    }
    else {
      uint64_t v5 = 1734437990LL;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xE600000000000000LL;
    }
    else {
      unint64_t v6 = 0xE400000000000000LL;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }

  uint64_t v5 = 0x6E6F697469736F70LL;
  unint64_t v6 = 0xEA00000000006C61LL;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      uint64_t v3 = 0x6E6F6974706FLL;
    }
    else {
      uint64_t v3 = 1734437990LL;
    }
    if (v7 == 1) {
      unint64_t v2 = 0xE600000000000000LL;
    }
    else {
      unint64_t v2 = 0xE400000000000000LL;
    }
  }

uint64_t sub_18905FC20(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v3 = 0x74726F6873LL;
    }
    else {
      unint64_t v3 = 0xD000000000000012LL;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE500000000000000LL;
    }
    else {
      unint64_t v4 = 0x800000018906C3B0LL;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        unint64_t v6 = 0x74726F6873LL;
      }
      else {
        unint64_t v6 = 0xD000000000000012LL;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE500000000000000LL;
      }
      else {
        unint64_t v7 = 0x800000018906C3B0LL;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }

  else
  {
    unint64_t v4 = 0xE400000000000000LL;
    unint64_t v3 = 1735290732LL;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }

  unint64_t v7 = 0xE400000000000000LL;
  if (v3 != 1735290732)
  {
LABEL_21:
    char v8 = sub_189067F10();
    goto LABEL_22;
  }

__n128 ToolInfoV0.init(command:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 16);
  *(void *)a2 = 0LL;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)a1;
  *(void *)(a2 + 24) = v2;
  __int128 v3 = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 48) = v3;
  __n128 result = *(__n128 *)(a1 + 56);
  __int128 v5 = *(_OWORD *)(a1 + 72);
  *(__n128 *)(a2 + 64) = result;
  *(_OWORD *)(a2 + 80) = v5;
  return result;
}

uint64_t CommandInfoV0.init(superCommands:commandName:abstract:discussion:defaultSubcommand:subcommands:arguments:)@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, unint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v17 = a1;
  if (!*(void *)(a1 + 16))
  {
    swift_bridgeObjectRelease();
    uint64_t v17 = 0LL;
  }

  unint64_t v19 = a10;
  if ((a5 & 0x2000000000000000LL) != 0) {
    uint64_t v20 = HIBYTE(a5) & 0xF;
  }
  else {
    uint64_t v20 = a4 & 0xFFFFFFFFFFFFLL;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v20)
  {
    swift_bridgeObjectRelease();
    a4 = 0LL;
    a5 = 0LL;
  }

  uint64_t v21 = a11;
  if ((a7 & 0x2000000000000000LL) != 0) {
    uint64_t v22 = HIBYTE(a7) & 0xF;
  }
  else {
    uint64_t v22 = a6 & 0xFFFFFFFFFFFFLL;
  }
  swift_bridgeObjectRetain();
  if (v22)
  {
    uint64_t v23 = a12;
    if (!a10) {
      goto LABEL_18;
    }
  }

  else
  {
    swift_bridgeObjectRelease();
    a6 = 0LL;
    a7 = 0LL;
    uint64_t v23 = a12;
    if (!a10) {
      goto LABEL_18;
    }
  }

  uint64_t v24 = HIBYTE(a10) & 0xF;
  if ((a10 & 0x2000000000000000LL) == 0) {
    uint64_t v24 = a8 & 0xFFFFFFFFFFFFLL;
  }
  if (v24)
  {
LABEL_18:
    swift_bridgeObjectRetain();
    if (*(void *)(a11 + 16)) {
      goto LABEL_19;
    }
LABEL_22:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v21 = 0LL;
    if (*(void *)(v23 + 16)) {
      goto LABEL_20;
    }
LABEL_23:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v23 = 0LL;
    goto LABEL_24;
  }

  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a8 = 0LL;
  unint64_t v19 = 0LL;
  if (!*(void *)(a11 + 16)) {
    goto LABEL_22;
  }
LABEL_19:
  swift_bridgeObjectRetain();
  if (!*(void *)(v23 + 16)) {
    goto LABEL_23;
  }
LABEL_20:
  swift_bridgeObjectRetain();
LABEL_24:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a9 = v17;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  a9[8] = v19;
  a9[9] = v21;
  a9[10] = v23;
  return result;
}

__n128 ArgumentInfoV0.init(kind:shouldDisplay:sectionTitle:isOptional:isRepeating:names:preferredName:valueName:defaultValue:allValues:abstract:discussion:)@<Q0>( char *a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, char a6@<W5>, uint64_t a7@<X6>, __n128 *a8@<X7>, uint64_t a9@<X8>, uint64_t a10, unint64_t a11, uint64_t a12, unint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17, unint64_t a18)
{
  uint64_t v18 = a7;
  unint64_t v24 = a13;
  uint64_t v25 = a10;
  unint64_t v26 = a11;
  __n128 v50 = *a8;
  unint64_t v27 = a8[1].n128_u64[0];
  char v47 = *a1;
  if (a7 && !*(void *)(a7 + 16))
  {
    swift_bridgeObjectRelease();
    uint64_t v25 = a10;
    uint64_t v18 = 0LL;
  }

  uint64_t v28 = a14;
  uint64_t v29 = a12;
  uint64_t v53 = a4;
  if (a11)
  {
    uint64_t v30 = HIBYTE(a11) & 0xF;
    if ((a11 & 0x2000000000000000LL) == 0) {
      uint64_t v30 = v25 & 0xFFFFFFFFFFFFLL;
    }
    if (!v30)
    {
      swift_bridgeObjectRelease();
      uint64_t v29 = a12;
      uint64_t v25 = 0LL;
      unint64_t v26 = 0LL;
    }
  }

  unint64_t v31 = a16;
  char v51 = a5;
  char v52 = a6;
  if (a13)
  {
    uint64_t v32 = HIBYTE(a13) & 0xF;
    if ((a13 & 0x2000000000000000LL) == 0) {
      uint64_t v32 = v29 & 0xFFFFFFFFFFFFLL;
    }
    if (!v32)
    {
      uint64_t v33 = v25;
      swift_bridgeObjectRelease();
      uint64_t v25 = v33;
      uint64_t v29 = 0LL;
      unint64_t v24 = 0LL;
    }
  }

  unint64_t v34 = a18;
  uint64_t v35 = a15;
  unint64_t v49 = v27;
  if (a14)
  {
    uint64_t v36 = a3;
    if (!*(void *)(a14 + 16))
    {
      uint64_t v37 = v25;
      uint64_t v38 = v29;
      swift_bridgeObjectRelease();
      uint64_t v29 = v38;
      uint64_t v25 = v37;
      uint64_t v28 = 0LL;
    }
  }

  else
  {
    uint64_t v36 = a3;
  }

  uint64_t v39 = a17;
  if (!a16) {
    goto LABEL_22;
  }
  uint64_t v40 = HIBYTE(a16) & 0xF;
  if ((a16 & 0x2000000000000000LL) == 0) {
    uint64_t v40 = a15 & 0xFFFFFFFFFFFFLL;
  }
  if (!v40)
  {
    uint64_t v44 = v25;
    uint64_t v45 = v29;
    swift_bridgeObjectRelease();
    uint64_t v29 = v45;
    uint64_t v25 = v44;
    uint64_t v35 = 0LL;
    unint64_t v31 = 0LL;
    if (!a18) {
      goto LABEL_28;
    }
  }

  else
  {
LABEL_22:
    if (!a18) {
      goto LABEL_28;
    }
  }

  uint64_t v41 = HIBYTE(a18) & 0xF;
  if ((a18 & 0x2000000000000000LL) == 0) {
    uint64_t v41 = a17 & 0xFFFFFFFFFFFFLL;
  }
  if (!v41)
  {
    uint64_t v42 = v25;
    uint64_t v43 = v29;
    swift_bridgeObjectRelease();
    uint64_t v29 = v43;
    uint64_t v25 = v42;
    uint64_t v39 = 0LL;
    unint64_t v34 = 0LL;
  }

ArgumentParserInternal::ArgumentInfoV0::NameInfoV0 __swiftcall ArgumentInfoV0.NameInfoV0.init(kind:name:)( ArgumentParserInternal::ArgumentInfoV0::NameInfoV0::KindV0 kind, Swift::String name)
{
  *(_BYTE *)uint64_t v2 = *(_BYTE *)kind;
  *(Swift::String *)(v2 + 8) = name;
  result.name = name;
  result.kind = kind;
  return result;
}

uint64_t ToolInfoHeader.serializationVersion.getter()
{
  return *(void *)v0;
}

uint64_t ToolInfoHeader.serializationVersion.setter(uint64_t result)
{
  *unint64_t v1 = result;
  return result;
}

uint64_t (*ToolInfoHeader.serializationVersion.modify())(void)
{
  return nullsub_1;
}

ArgumentParserInternal::ToolInfoHeader __swiftcall ToolInfoHeader.init(serializationVersion:)( ArgumentParserInternal::ToolInfoHeader serializationVersion)
{
  v1->serializationVersion = serializationVersion.serializationVersion;
  return serializationVersion;
}

unint64_t sub_189060170()
{
  return 0xD000000000000014LL;
}

uint64_t sub_18906018C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = sub_189065080(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1890601B4()
{
  return sub_1890680F0();
}

uint64_t sub_1890601DC()
{
  return sub_1890680FC();
}

uint64_t ToolInfoHeader.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_18C761718);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1895F8858](v5);
  char v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_18906304C();
  sub_189068090();
  if (!v2)
  {
    uint64_t v9 = sub_189067DF0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
  }

  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_189060308@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ToolInfoHeader.init(from:)(a1, a2);
}

uint64_t ToolInfoV0.serializationVersion.getter()
{
  return *(void *)v0;
}

uint64_t ToolInfoV0.serializationVersion.setter(uint64_t result)
{
  *unint64_t v1 = result;
  return result;
}

uint64_t (*ToolInfoV0.serializationVersion.modify())(void)
{
  return nullsub_1;
}

uint64_t ToolInfoV0.command.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v2 = *(void *)(v1 + 32);
  uint64_t v4 = *(void *)(v1 + 72);
  uint64_t v5 = *(void *)(v1 + 80);
  uint64_t v6 = *(void *)(v1 + 88);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 8);
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v3;
  *(void *)(a1 + 24) = v2;
  __int128 v7 = *(_OWORD *)(v1 + 56);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 40);
  *(_OWORD *)(a1 + 48) = v7;
  *(void *)(a1 + 64) = v4;
  *(void *)(a1 + 72) = v5;
  *(void *)(a1 + 80) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 ToolInfoV0.command.setter(__int128 *a1)
{
  __int128 v7 = a1[1];
  __int128 v8 = *a1;
  __int128 v5 = a1[3];
  __int128 v6 = a1[2];
  __n128 v4 = (__n128)a1[4];
  uint64_t v2 = *((void *)a1 + 10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(v1 + 8) = v8;
  *(_OWORD *)(v1 + 24) = v7;
  *(_OWORD *)(v1 + 40) = v6;
  *(_OWORD *)(v1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = v5;
  __n128 result = v4;
  *(__n128 *)(v1 + 72) = v4;
  *(void *)(v1 + 88) = v2;
  return result;
}

uint64_t (*ToolInfoV0.command.modify())(void)
{
  return nullsub_1;
}

uint64_t ToolInfoV0.hash(into:)(uint64_t a1)
{
  return CommandInfoV0.hash(into:)(a1);
}

uint64_t static ToolInfoV0.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 == *(void *)a2)
  {
    __int128 v15 = *(_OWORD *)(a1 + 8);
    __int128 v2 = *(_OWORD *)(a1 + 48);
    __int128 v17 = *(_OWORD *)(a1 + 32);
    __int128 v18 = v2;
    __int128 v3 = *(_OWORD *)(a1 + 80);
    __int128 v19 = *(_OWORD *)(a1 + 64);
    __int128 v20 = v3;
    __int128 v9 = *(_OWORD *)(a2 + 8);
    __int128 v4 = *(_OWORD *)(a2 + 48);
    __int128 v11 = *(_OWORD *)(a2 + 32);
    __int128 v12 = v4;
    __int128 v5 = *(_OWORD *)(a2 + 80);
    __int128 v13 = *(_OWORD *)(a2 + 64);
    uint64_t v6 = *(void *)(a2 + 24);
    uint64_t v16 = *(void *)(a1 + 24);
    uint64_t v10 = v6;
    __int128 v14 = v5;
    char v7 = _s22ArgumentParserInternal13CommandInfoV0V2eeoiySbAC_ACtFZ_0((uint64_t)&v15, (uint64_t)&v9);
  }

  else
  {
    char v7 = 0;
  }

  return v7 & 1;
}

uint64_t sub_1890605DC()
{
  if (*v0) {
    return 0x646E616D6D6F63LL;
  }
  else {
    return 0xD000000000000014LL;
  }
}

uint64_t sub_18906061C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = sub_189064C4C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_189060640()
{
  return sub_1890680F0();
}

uint64_t sub_189060668()
{
  return sub_1890680FC();
}

uint64_t ToolInfoV0.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_18C761728);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1895F8858](v4);
  char v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = v1[1];
  uint64_t v24 = v1[2];
  uint64_t v25 = v8;
  uint64_t v9 = v1[3];
  uint64_t v22 = v1[4];
  uint64_t v23 = v9;
  uint64_t v10 = v1[5];
  uint64_t v20 = v1[6];
  uint64_t v21 = v10;
  uint64_t v11 = v1[7];
  uint64_t v18 = v1[8];
  uint64_t v19 = v11;
  uint64_t v12 = v1[9];
  uint64_t v16 = v1[10];
  uint64_t v17 = v12;
  uint64_t v15 = v1[11];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1890659A8();
  sub_18906809C();
  LOBYTE(v26) = 0;
  sub_189067E50();
  if (!v2)
  {
    uint64_t v26 = v25;
    uint64_t v27 = v24;
    uint64_t v28 = v23;
    uint64_t v29 = v22;
    uint64_t v30 = v21;
    uint64_t v31 = v20;
    uint64_t v32 = v19;
    uint64_t v33 = v18;
    uint64_t v34 = v17;
    uint64_t v35 = v16;
    uint64_t v36 = v15;
    char v37 = 1;
    sub_1890659EC();
    sub_189067E5C();
  }

  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t ToolInfoV0.hashValue.getter()
{
  return sub_189068060();
}

uint64_t ToolInfoV0.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_18C761740);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1895F8858](v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1890659A8();
  sub_189068090();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  LOBYTE(v19) = 0;
  uint64_t v9 = sub_189067DF0();
  char v27 = 1;
  sub_189065A30();
  sub_189067DFC();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v11 = v20;
  uint64_t v10 = v21;
  uint64_t v12 = v24;
  uint64_t v13 = v25;
  uint64_t v14 = v26;
  __int128 v15 = v19;
  __int128 v16 = v22;
  __int128 v17 = v23;
  *(void *)a2 = v9;
  *(_OWORD *)(a2 + 8) = v15;
  *(void *)(a2 + 24) = v11;
  *(void *)(a2 + 32) = v10;
  *(_OWORD *)(a2 + 40) = v16;
  *(_OWORD *)(a2 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = v17;
  *(void *)(a2 + 72) = v12;
  *(void *)(a2 + 80) = v13;
  *(void *)(a2 + 88) = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_189060AFC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ToolInfoV0.init(from:)(a1, a2);
}

uint64_t sub_189060B10(void *a1)
{
  return ToolInfoV0.encode(to:)(a1);
}

uint64_t sub_189060B24()
{
  return sub_189068060();
}

uint64_t sub_189060BC4(uint64_t a1)
{
  return CommandInfoV0.hash(into:)(a1);
}

uint64_t sub_189060C58()
{
  return sub_189068060();
}

uint64_t sub_189060CF4(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 == *(void *)a2)
  {
    __int128 v15 = *(_OWORD *)(a1 + 8);
    __int128 v2 = *(_OWORD *)(a1 + 48);
    __int128 v17 = *(_OWORD *)(a1 + 32);
    __int128 v18 = v2;
    __int128 v3 = *(_OWORD *)(a1 + 80);
    __int128 v19 = *(_OWORD *)(a1 + 64);
    __int128 v20 = v3;
    __int128 v9 = *(_OWORD *)(a2 + 8);
    __int128 v4 = *(_OWORD *)(a2 + 48);
    __int128 v11 = *(_OWORD *)(a2 + 32);
    __int128 v12 = v4;
    __int128 v5 = *(_OWORD *)(a2 + 80);
    __int128 v13 = *(_OWORD *)(a2 + 64);
    uint64_t v6 = *(void *)(a2 + 24);
    uint64_t v16 = *(void *)(a1 + 24);
    uint64_t v10 = v6;
    __int128 v14 = v5;
    char v7 = _s22ArgumentParserInternal13CommandInfoV0V2eeoiySbAC_ACtFZ_0((uint64_t)&v15, (uint64_t)&v9);
  }

  else
  {
    char v7 = 0;
  }

  return v7 & 1;
}

uint64_t CommandInfoV0.superCommands.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CommandInfoV0.superCommands.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*CommandInfoV0.superCommands.modify())(void)
{
  return nullsub_1;
}

uint64_t CommandInfoV0.commandName.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CommandInfoV0.commandName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = a2;
  return result;
}

uint64_t (*CommandInfoV0.commandName.modify())(void)
{
  return nullsub_1;
}

uint64_t CommandInfoV0.abstract.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CommandInfoV0.abstract.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*CommandInfoV0.abstract.modify())(void)
{
  return nullsub_1;
}

uint64_t CommandInfoV0.discussion.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CommandInfoV0.discussion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return result;
}

uint64_t (*CommandInfoV0.discussion.modify())(void)
{
  return nullsub_1;
}

uint64_t CommandInfoV0.defaultSubcommand.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CommandInfoV0.defaultSubcommand.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = a1;
  *(void *)(v2 + 64) = a2;
  return result;
}

uint64_t (*CommandInfoV0.defaultSubcommand.modify())(void)
{
  return nullsub_1;
}

uint64_t CommandInfoV0.subcommands.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CommandInfoV0.subcommands.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 72) = a1;
  return result;
}

uint64_t (*CommandInfoV0.subcommands.modify())(void)
{
  return nullsub_1;
}

uint64_t CommandInfoV0.arguments.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CommandInfoV0.arguments.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 80) = a1;
  return result;
}

uint64_t (*CommandInfoV0.arguments.modify())(void)
{
  return nullsub_1;
}

uint64_t CommandInfoV0.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[6];
  uint64_t v7 = v1[8];
  uint64_t v6 = v1[9];
  uint64_t v8 = v1[10];
  if (*v1)
  {
    sub_189068048();
    sub_18906803C();
    uint64_t v9 = *(void *)(v3 + 16);
    if (v9)
    {
      uint64_t v17 = v7;
      swift_bridgeObjectRetain();
      uint64_t v10 = v3 + 40;
      do
      {
        swift_bridgeObjectRetain();
        sub_1890677A8();
        swift_bridgeObjectRelease();
        v10 += 16LL;
        --v9;
      }

      while (v9);
      swift_bridgeObjectRelease();
      uint64_t v7 = v17;
    }
  }

  else
  {
    sub_189068048();
  }

  swift_bridgeObjectRetain();
  sub_1890677A8();
  swift_bridgeObjectRelease();
  if (v4)
  {
    sub_189068048();
    swift_bridgeObjectRetain();
    sub_1890677A8();
    swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_9;
    }
  }

  else
  {
    sub_189068048();
    if (v5)
    {
LABEL_9:
      sub_189068048();
      swift_bridgeObjectRetain();
      sub_1890677A8();
      swift_bridgeObjectRelease();
      if (v7) {
        goto LABEL_10;
      }
      goto LABEL_23;
    }
  }

  sub_189068048();
  if (v7)
  {
LABEL_10:
    sub_189068048();
    swift_bridgeObjectRetain();
    sub_1890677A8();
    swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_11;
    }
    goto LABEL_24;
  }

uint64_t sub_189061328(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_189061368 + 4 * byte_18906B850[a1]))( 0x6D6F437265707573LL,  0xED000073646E616DLL);
}

uint64_t sub_189061368()
{
  return 0x4E646E616D6D6F63LL;
}

uint64_t sub_189061388()
{
  return 0x7463617274736261LL;
}

uint64_t sub_1890613A0()
{
  return 0x6973737563736964LL;
}

unint64_t sub_1890613BC()
{
  return 0xD000000000000011LL;
}

uint64_t sub_1890613D8()
{
  return 0x616D6D6F63627573LL;
}

uint64_t sub_1890613F8()
{
  return 0x746E656D75677261LL;
}

uint64_t sub_189061414()
{
  return sub_189061328(*v0);
}

uint64_t sub_18906141C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = sub_189064D38(a1, a2);
  *a3 = result;
  return result;
}

void sub_189061440(_BYTE *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_18906144C()
{
  return sub_1890680F0();
}

uint64_t sub_189061474()
{
  return sub_1890680FC();
}

uint64_t CommandInfoV0.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_18C761750);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1895F8858](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v24 = v1[2];
  uint64_t v25 = v8;
  uint64_t v10 = v1[3];
  uint64_t v22 = v1[4];
  uint64_t v23 = v10;
  uint64_t v11 = v1[5];
  uint64_t v20 = v1[6];
  uint64_t v21 = v11;
  uint64_t v12 = v1[7];
  uint64_t v18 = v1[8];
  uint64_t v19 = v12;
  uint64_t v13 = v1[9];
  uint64_t v16 = v1[10];
  uint64_t v17 = v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_189065A74();
  sub_18906809C();
  uint64_t v27 = v9;
  char v26 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C760FE8);
  sub_189065AFC(&qword_18C761760, MEMORY[0x189617FB0], MEMORY[0x189618448]);
  sub_189067E2C();
  if (!v2)
  {
    LOBYTE(v27) = 1;
    sub_189067E38();
    LOBYTE(v27) = 2;
    sub_189067E20();
    LOBYTE(v27) = 3;
    sub_189067E20();
    LOBYTE(v27) = 4;
    sub_189067E20();
    uint64_t v27 = v17;
    char v26 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C761768);
    sub_189065D7C(&qword_18C761770, &qword_18C761768, (uint64_t (*)(void))sub_1890659EC, MEMORY[0x189618448]);
    sub_189067E2C();
    uint64_t v27 = v16;
    char v26 = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C761778);
    sub_189065D7C(&qword_18C761780, &qword_18C761778, (uint64_t (*)(void))sub_189065AB8, MEMORY[0x189618448]);
    sub_189067E2C();
  }

  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t CommandInfoV0.hashValue.getter()
{
  uint64_t v1 = *((void *)v0 + 2);
  __int128 v4 = *v0;
  uint64_t v5 = v1;
  __int128 v6 = *(__int128 *)((char *)v0 + 24);
  __int128 v7 = *(__int128 *)((char *)v0 + 40);
  __int128 v8 = *(__int128 *)((char *)v0 + 56);
  __int128 v9 = *(__int128 *)((char *)v0 + 72);
  sub_189068030();
  CommandInfoV0.hash(into:)((uint64_t)v3);
  return sub_189068060();
}

uint64_t CommandInfoV0.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_18C761790);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1895F8858](v5);
  __int128 v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_189065A74();
  sub_189068090();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }

  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C760FE8);
    char v40 = 0;
    sub_189065AFC((unint64_t *)&qword_18C7610B0, MEMORY[0x189617FD8], MEMORY[0x189618478]);
    sub_189067DCC();
    uint64_t v10 = v41;
    LOBYTE(v41) = 1;
    swift_bridgeObjectRetain();
    uint64_t v37 = sub_189067DD8();
    uint64_t v38 = v10;
    LOBYTE(v41) = 2;
    uint64_t v12 = v11;
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_189067DC0();
    uint64_t v39 = v12;
    uint64_t v15 = v14;
    uint64_t v36 = v13;
    LOBYTE(v41) = 3;
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_189067DC0();
    uint64_t v34 = a2;
    uint64_t v35 = v15;
    LOBYTE(v41) = 4;
    uint64_t v18 = v17;
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_189067DC0();
    uint64_t v21 = v20;
    uint64_t v31 = v19;
    uint64_t v32 = v16;
    uint64_t v33 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C761768);
    char v40 = 5;
    sub_189065D7C(&qword_18C761798, &qword_18C761768, (uint64_t (*)(void))sub_189065A30, MEMORY[0x189618478]);
    swift_bridgeObjectRetain();
    sub_189067DCC();
    uint64_t v22 = v41;
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C761778);
    char v40 = 6;
    sub_189065D7C(&qword_18C7617A0, &qword_18C761778, (uint64_t (*)(void))sub_189065B5C, MEMORY[0x189618478]);
    swift_bridgeObjectRetain();
    sub_189067DCC();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v23 = v41;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v24 = v37;
    uint64_t v25 = v34;
    uint64_t v26 = v35;
    void *v34 = v38;
    v25[1] = v24;
    uint64_t v27 = v36;
    uint64_t v25[2] = v39;
    _OWORD v25[3] = v27;
    uint64_t v28 = v32;
    uint64_t v29 = v33;
    void v25[4] = v26;
    void v25[5] = v28;
    uint64_t v30 = v31;
    v25[6] = v29;
    uint64_t v25[7] = v30;
    v25[8] = v21;
    v25[9] = v22;
    v25[10] = v23;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_189061D94@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return CommandInfoV0.init(from:)(a1, a2);
}

uint64_t sub_189061DA8(void *a1)
{
  return CommandInfoV0.encode(to:)(a1);
}

uint64_t sub_189061DBC()
{
  uint64_t v1 = *((void *)v0 + 2);
  __int128 v4 = *v0;
  uint64_t v5 = v1;
  __int128 v6 = *(__int128 *)((char *)v0 + 24);
  __int128 v7 = *(__int128 *)((char *)v0 + 40);
  __int128 v8 = *(__int128 *)((char *)v0 + 56);
  __int128 v9 = *(__int128 *)((char *)v0 + 72);
  sub_189068030();
  CommandInfoV0.hash(into:)((uint64_t)v3);
  return sub_189068060();
}

uint64_t sub_189061E34()
{
  uint64_t v1 = *((void *)v0 + 2);
  __int128 v4 = *v0;
  uint64_t v5 = v1;
  __int128 v6 = *(__int128 *)((char *)v0 + 24);
  __int128 v7 = *(__int128 *)((char *)v0 + 40);
  __int128 v8 = *(__int128 *)((char *)v0 + 56);
  __int128 v9 = *(__int128 *)((char *)v0 + 72);
  sub_189068030();
  CommandInfoV0.hash(into:)((uint64_t)v3);
  return sub_189068060();
}

ArgumentParserInternal::ArgumentInfoV0::NameInfoV0::KindV0_optional __swiftcall ArgumentInfoV0.NameInfoV0.KindV0.init(rawValue:)( Swift::String rawValue)
{
  return (ArgumentParserInternal::ArgumentInfoV0::NameInfoV0::KindV0_optional)sub_189062A30(v1);
}

uint64_t ArgumentInfoV0.NameInfoV0.KindV0.rawValue.getter()
{
  unint64_t v1 = 0x74726F6873LL;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000012LL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1735290732LL;
  }
}

uint64_t sub_189061F08(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_18905FC20(*a1, *a2);
}

ArgumentParserInternal::ArgumentInfoV0::NameInfoV0::KindV0_optional sub_189061F14(Swift::String *a1)
{
  return ArgumentInfoV0.NameInfoV0.KindV0.init(rawValue:)(*a1);
}

void sub_189061F20(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE400000000000000LL;
  unint64_t v4 = 0xE500000000000000LL;
  unint64_t v5 = 0x74726F6873LL;
  if (v2 != 1)
  {
    unint64_t v5 = 0xD000000000000012LL;
    unint64_t v4 = 0x800000018906C3B0LL;
  }

  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 1735290732LL;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_189061F78()
{
  return sub_1890679AC();
}

uint64_t sub_189061FD4()
{
  return sub_1890679A0();
}

uint64_t sub_189062020()
{
  return sub_189068060();
}

uint64_t sub_1890620B8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_18906212C()
{
  return sub_189068060();
}

void ArgumentInfoV0.NameInfoV0.kind.getter(_BYTE *a1@<X8>)
{
  *a1 = *v1;
}

_BYTE *ArgumentInfoV0.NameInfoV0.kind.setter(_BYTE *result)
{
  *unint64_t v1 = *result;
  return result;
}

uint64_t (*ArgumentInfoV0.NameInfoV0.kind.modify())(void)
{
  return nullsub_1;
}

uint64_t ArgumentInfoV0.NameInfoV0.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ArgumentInfoV0.NameInfoV0.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = a2;
  return result;
}

uint64_t (*ArgumentInfoV0.NameInfoV0.name.modify())(void)
{
  return nullsub_1;
}

uint64_t ArgumentInfoV0.NameInfoV0.hash(into:)()
{
  return swift_bridgeObjectRelease();
}

uint64_t static ArgumentInfoV0.NameInfoV0.== infix(_:_:)(unsigned __int8 *a1, uint64_t a2)
{
  int v2 = *a1;
  uint64_t v3 = *((void *)a1 + 1);
  uint64_t v4 = *((void *)a1 + 2);
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  unint64_t v7 = 0xE500000000000000LL;
  unint64_t v8 = 0x74726F6873LL;
  unint64_t v9 = 0x800000018906C3B0LL;
  if (v2 != 1)
  {
    unint64_t v8 = 0xD000000000000012LL;
    unint64_t v7 = 0x800000018906C3B0LL;
  }

  if (*a1) {
    uint64_t v10 = v8;
  }
  else {
    uint64_t v10 = 1735290732LL;
  }
  if (v2) {
    unint64_t v11 = v7;
  }
  else {
    unint64_t v11 = 0xE400000000000000LL;
  }
  unint64_t v12 = 0x74726F6873LL;
  if (*(_BYTE *)a2 == 1) {
    unint64_t v9 = 0xE500000000000000LL;
  }
  else {
    unint64_t v12 = 0xD000000000000012LL;
  }
  if (*(_BYTE *)a2) {
    uint64_t v13 = v12;
  }
  else {
    uint64_t v13 = 1735290732LL;
  }
  if (*(_BYTE *)a2) {
    unint64_t v14 = v9;
  }
  else {
    unint64_t v14 = 0xE400000000000000LL;
  }
  if (v10 == v13 && v11 == v14)
  {
    swift_bridgeObjectRelease_n();
  }

  else
  {
    char v15 = sub_189067F10();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = 0LL;
    if ((v15 & 1) == 0) {
      return result;
    }
  }

  if (v3 == v5 && v4 == v6) {
    return 1LL;
  }
  else {
    return sub_189067F10();
  }
}

uint64_t sub_189062450()
{
  if (*v0) {
    return 1701667182LL;
  }
  else {
    return 1684957547LL;
  }
}

uint64_t sub_189062474@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = sub_189064614(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_189062498()
{
  return sub_1890680F0();
}

uint64_t sub_1890624C0()
{
  return sub_1890680FC();
}

uint64_t ArgumentInfoV0.NameInfoV0.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_18C7617B0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1895F8858](v4);
  unint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  char v8 = *v1;
  uint64_t v9 = *((void *)v1 + 1);
  v11[0] = *((void *)v1 + 2);
  v11[1] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_189065BA0();
  sub_18906809C();
  char v14 = v8;
  char v13 = 0;
  sub_189065BE4();
  sub_189067E5C();
  if (!v2)
  {
    char v12 = 1;
    sub_189067E38();
  }

  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t ArgumentInfoV0.NameInfoV0.hashValue.getter()
{
  return sub_189068060();
}

uint64_t ArgumentInfoV0.NameInfoV0.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_18C7617C8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1895F8858](v5);
  char v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_189065BA0();
  sub_189068090();
  if (!v2)
  {
    char v16 = 0;
    sub_189065C28();
    sub_189067DFC();
    char v9 = v17;
    char v15 = 1;
    uint64_t v11 = sub_189067DD8();
    uint64_t v13 = v12;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(_BYTE *)a2 = v9;
    *(void *)(a2 + 8) = v11;
    *(void *)(a2 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v13;
  }

  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_189062840@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ArgumentInfoV0.NameInfoV0.init(from:)(a1, a2);
}

uint64_t sub_189062854(void *a1)
{
  return ArgumentInfoV0.NameInfoV0.encode(to:)(a1);
}

uint64_t sub_18906286C()
{
  return sub_1890677A8();
}

uint64_t sub_189062900()
{
  return sub_189068060();
}

uint64_t sub_1890629B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  if ((sub_18905FC20(*(_BYTE *)a1, *(_BYTE *)a2) & 1) == 0) {
    return 0LL;
  }
  if (v2 == v4 && v3 == v5) {
    return 1LL;
  }
  else {
    return sub_189067F10();
  }
}

ArgumentParserInternal::ArgumentInfoV0::KindV0_optional __swiftcall ArgumentInfoV0.KindV0.init(rawValue:)( Swift::String rawValue)
{
  return (ArgumentParserInternal::ArgumentInfoV0::KindV0_optional)sub_189062A30(v1);
}

uint64_t sub_189062A30@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_189067DB4();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 3;
  if (v2 < 3) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

uint64_t ArgumentInfoV0.KindV0.rawValue.getter()
{
  uint64_t v1 = 0x6E6F6974706FLL;
  if (*v0 != 1) {
    uint64_t v1 = 1734437990LL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E6F697469736F70LL;
  }
}

uint64_t sub_189062AD8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_18905FB20(*a1, *a2);
}

ArgumentParserInternal::ArgumentInfoV0::KindV0_optional sub_189062AE4(Swift::String *a1)
{
  return ArgumentInfoV0.KindV0.init(rawValue:)(*a1);
}

void sub_189062AF0(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xEA00000000006C61LL;
  unint64_t v4 = 0xE600000000000000LL;
  uint64_t v5 = 0x6E6F6974706FLL;
  if (v2 != 1)
  {
    uint64_t v5 = 1734437990LL;
    unint64_t v4 = 0xE400000000000000LL;
  }

  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6E6F697469736F70LL;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_189062B48()
{
  return sub_1890679AC();
}

uint64_t sub_189062BA4()
{
  return sub_1890679A0();
}

uint64_t sub_189062BF0()
{
  return sub_189068060();
}

uint64_t sub_189062C88()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_189062CFC()
{
  return sub_189068060();
}

void ArgumentInfoV0.kind.getter(_BYTE *a1@<X8>)
{
  *a1 = *v1;
}

_BYTE *ArgumentInfoV0.kind.setter(_BYTE *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*ArgumentInfoV0.kind.modify())(void)
{
  return nullsub_1;
}

uint64_t ArgumentInfoV0.shouldDisplay.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t ArgumentInfoV0.shouldDisplay.setter(uint64_t result)
{
  *(_BYTE *)(v1 + 1) = result;
  return result;
}

uint64_t (*ArgumentInfoV0.shouldDisplay.modify())(void)
{
  return nullsub_1;
}

uint64_t ArgumentInfoV0.sectionTitle.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ArgumentInfoV0.sectionTitle.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = a2;
  return result;
}

uint64_t (*ArgumentInfoV0.sectionTitle.modify())(void)
{
  return nullsub_1;
}

uint64_t ArgumentInfoV0.isOptional.getter()
{
  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t ArgumentInfoV0.isOptional.setter(uint64_t result)
{
  *(_BYTE *)(v1 + 24) = result;
  return result;
}

uint64_t (*ArgumentInfoV0.isOptional.modify())(void)
{
  return nullsub_1;
}

uint64_t ArgumentInfoV0.isRepeating.getter()
{
  return *(unsigned __int8 *)(v0 + 25);
}

uint64_t ArgumentInfoV0.isRepeating.setter(uint64_t result)
{
  *(_BYTE *)(v1 + 25) = result;
  return result;
}

uint64_t (*ArgumentInfoV0.isRepeating.modify())(void)
{
  return nullsub_1;
}

uint64_t ArgumentInfoV0.names.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ArgumentInfoV0.names.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = a1;
  return result;
}

uint64_t (*ArgumentInfoV0.names.modify())(void)
{
  return nullsub_1;
}

uint64_t ArgumentInfoV0.preferredName.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 56);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 40);
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v2;
  return swift_bridgeObjectRetain();
}

__n128 ArgumentInfoV0.preferredName.setter(__n128 *a1)
{
  __n128 v4 = *a1;
  unint64_t v2 = a1[1].n128_u64[0];
  swift_bridgeObjectRelease();
  __n128 result = v4;
  *(__n128 *)(v1 + 40) = v4;
  *(void *)(v1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = v2;
  return result;
}

uint64_t (*ArgumentInfoV0.preferredName.modify())(void)
{
  return nullsub_1;
}

uint64_t ArgumentInfoV0.valueName.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ArgumentInfoV0.valueName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = a2;
  return result;
}

uint64_t (*ArgumentInfoV0.valueName.modify())(void)
{
  return nullsub_1;
}

uint64_t ArgumentInfoV0.defaultValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ArgumentInfoV0.defaultValue.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 80) = a1;
  *(void *)(v2 + 88) = a2;
  return result;
}

uint64_t (*ArgumentInfoV0.defaultValue.modify())(void)
{
  return nullsub_1;
}

uint64_t (*ArgumentInfoV0.allValues.modify())(void)
{
  return nullsub_1;
}

uint64_t ArgumentInfoV0.allValueStrings.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ArgumentInfoV0.allValueStrings.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 96) = a1;
  return result;
}

unint64_t sub_18906304C()
{
  unint64_t result = qword_18C761720;
  if (!qword_18C761720)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&unk_18906C34C, &type metadata for ToolInfoHeader.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_18C761720);
  }

  return result;
}

uint64_t (*ArgumentInfoV0.allValueStrings.modify(void *a1))(uint64_t *a1, char a2)
{
  *a1 = *(void *)(v1 + 96);
  a1[1] = v1;
  swift_bridgeObjectRetain();
  return sub_1890630C8;
}

uint64_t sub_1890630C8(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v3 + 96) = v2;
    return swift_bridgeObjectRelease();
  }

  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)(v3 + 96) = v2;
  }

  return result;
}

uint64_t ArgumentInfoV0.abstract.getter()
{
  uint64_t v1 = *(void *)(v0 + 104);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ArgumentInfoV0.abstract.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 104) = a1;
  *(void *)(v2 + 112) = a2;
  return result;
}

uint64_t (*ArgumentInfoV0.abstract.modify())(void)
{
  return nullsub_1;
}

uint64_t ArgumentInfoV0.discussion.getter()
{
  uint64_t v1 = *(void *)(v0 + 120);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ArgumentInfoV0.discussion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 120) = a1;
  *(void *)(v2 + 128) = a2;
  return result;
}

uint64_t (*ArgumentInfoV0.discussion.modify())(void)
{
  return nullsub_1;
}

uint64_t ArgumentInfoV0.hash(into:)(uint64_t a1)
{
  uint64_t v2 = v1[2];
  uint64_t v3 = v1[4];
  uint64_t v4 = v1[7];
  uint64_t v5 = v1[12];
  uint64_t v12 = v1[9];
  uint64_t v13 = v1[11];
  uint64_t v11 = v1[14];
  uint64_t v14 = v1[16];
  sub_1890677A8();
  swift_bridgeObjectRelease();
  sub_189068048();
  sub_189068048();
  if (v2)
  {
    swift_bridgeObjectRetain();
    sub_1890677A8();
    swift_bridgeObjectRelease();
  }

  sub_189068048();
  sub_189068048();
  if (!v3)
  {
    sub_189068048();
    uint64_t v7 = v11;
    if (v4) {
      goto LABEL_5;
    }
LABEL_7:
    sub_189068048();
    if (v12) {
      goto LABEL_12;
    }
LABEL_8:
    sub_189068048();
    if (v13) {
      goto LABEL_13;
    }
LABEL_9:
    sub_189068048();
    if (v5) {
      goto LABEL_14;
    }
LABEL_10:
    sub_189068048();
    goto LABEL_18;
  }

  sub_189068048();
  swift_bridgeObjectRetain();
  sub_189064528(a1, v3);
  swift_bridgeObjectRelease();
  uint64_t v7 = v11;
  if (!v4) {
    goto LABEL_7;
  }
LABEL_5:
  sub_189068048();
  swift_bridgeObjectRetain_n();
  sub_1890677A8();
  swift_bridgeObjectRelease();
  sub_1890677A8();
  swift_bridgeObjectRelease_n();
  if (!v12) {
    goto LABEL_8;
  }
LABEL_12:
  sub_189068048();
  swift_bridgeObjectRetain();
  sub_1890677A8();
  swift_bridgeObjectRelease();
  if (!v13) {
    goto LABEL_9;
  }
LABEL_13:
  sub_189068048();
  swift_bridgeObjectRetain();
  sub_1890677A8();
  swift_bridgeObjectRelease();
  if (!v5) {
    goto LABEL_10;
  }
LABEL_14:
  sub_189068048();
  sub_18906803C();
  uint64_t v8 = *(void *)(v5 + 16);
  if (v8)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = v5 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1890677A8();
      swift_bridgeObjectRelease();
      v9 += 16LL;
      --v8;
    }

    while (v8);
    swift_bridgeObjectRelease();
  }

uint64_t sub_1890635F8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_189063624 + 4 * byte_18906B857[a1]))( 1684957547LL,  0xE400000000000000LL);
}

uint64_t sub_189063624()
{
  return 0x6944646C756F6873LL;
}

uint64_t sub_189063648()
{
  return 0x546E6F6974636573LL;
}

uint64_t sub_189063668()
{
  return 0x6E6F6974704F7369LL;
}

uint64_t sub_189063684()
{
  return 0x7461657065527369LL;
}

uint64_t sub_1890636A4()
{
  return 0x73656D616ELL;
}

uint64_t sub_1890636B8()
{
  return 0x6572726566657270LL;
}

uint64_t sub_1890636DC()
{
  return 0x6D614E65756C6176LL;
}

uint64_t sub_1890636F8()
{
  return 0x56746C7561666564LL;
}

uint64_t sub_189063718()
{
  return 0x65756C61566C6C61LL;
}

uint64_t sub_189063738()
{
  return 0x7463617274736261LL;
}

uint64_t sub_189063750()
{
  return 0x6973737563736964LL;
}

uint64_t sub_189063774()
{
  return sub_1890635F8(*v0);
}

uint64_t sub_18906377C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = sub_1890646E4(a1, a2);
  *a3 = result;
  return result;
}

void sub_1890637A0(_BYTE *a1@<X8>)
{
  *a1 = 12;
}

uint64_t sub_1890637AC()
{
  return sub_1890680F0();
}

uint64_t sub_1890637D4()
{
  return sub_1890680FC();
}

uint64_t ArgumentInfoV0.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_18C7617D8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1895F8858](v4);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  char v8 = *v1;
  LODWORD(v34) = v1[1];
  uint64_t v9 = *((void *)v1 + 1);
  uint64_t v32 = *((void *)v1 + 2);
  uint64_t v33 = v9;
  int v38 = v1[24];
  int v31 = v1[25];
  uint64_t v10 = *((void *)v1 + 4);
  uint64_t v11 = *((void *)v1 + 6);
  uint64_t v27 = *((void *)v1 + 5);
  uint64_t v28 = v11;
  uint64_t v29 = *((void *)v1 + 7);
  uint64_t v30 = v10;
  uint64_t v12 = *((void *)v1 + 9);
  uint64_t v25 = *((void *)v1 + 8);
  uint64_t v26 = v12;
  uint64_t v13 = *((void *)v1 + 11);
  uint64_t v23 = *((void *)v1 + 10);
  uint64_t v24 = v13;
  uint64_t v14 = *((void *)v1 + 12);
  uint64_t v15 = *((void *)v1 + 13);
  _OWORD v21[3] = *((void *)v1 + 14);
  uint64_t v22 = v14;
  v21[1] = *((void *)v1 + 15);
  v21[2] = v15;
  uint64_t v16 = a1[3];
  char v17 = a1;
  uint64_t v19 = v18;
  __swift_project_boxed_opaque_existential_1(v17, v16);
  sub_189065C6C();
  sub_18906809C();
  LOBYTE(v35) = v8;
  char v39 = 0;
  sub_189065CB0();
  sub_189067E5C();
  if (!v2)
  {
    LOBYTE(v35) = 1;
    sub_189067E44();
    LOBYTE(v35) = 2;
    sub_189067E20();
    uint64_t v34 = v5;
    LOBYTE(v35) = 3;
    sub_189067E44();
    LOBYTE(v35) = 4;
    sub_189067E44();
    uint64_t v35 = v30;
    char v39 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C7617F0);
    sub_189065D7C(&qword_18C7617F8, &qword_18C7617F0, (uint64_t (*)(void))sub_189065CF4, MEMORY[0x189618448]);
    sub_189067E2C();
    uint64_t v35 = v27;
    uint64_t v36 = v28;
    uint64_t v37 = v29;
    char v39 = 6;
    sub_189065CF4();
    sub_189067E2C();
    LOBYTE(v35) = 7;
    sub_189067E20();
    LOBYTE(v35) = 8;
    sub_189067E20();
    uint64_t v35 = v22;
    char v39 = 9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_18C760FE8);
    sub_189065AFC(&qword_18C761760, MEMORY[0x189617FB0], MEMORY[0x189618448]);
    sub_189067E2C();
    LOBYTE(v35) = 10;
    sub_189067E20();
    LOBYTE(v35) = 11;
    sub_189067E20();
  }

  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v19);
}

uint64_t ArgumentInfoV0.hashValue.getter()
{
  return sub_189068060();
}

uint64_t ArgumentInfoV0.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_18C761808);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1895F8858](v5);
  char v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = a1[3];
  uint64_t v61 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_189065C6C();
  sub_189068090();
  if (v2)
  {
    uint64_t v96 = v2;
LABEL_4:
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v61);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }

  uint64_t v10 = v6;
  LOBYTE(v62) = 0;
  sub_189065D38();
  sub_189067DFC();
  int v11 = v71;
  LOBYTE(v71) = 1;
  int v60 = sub_189067DE4();
  LOBYTE(v71) = 2;
  uint64_t v13 = sub_189067DC0();
  uint64_t v15 = v14;
  int v59 = v11;
  LOBYTE(v71) = 3;
  swift_bridgeObjectRetain();
  int v56 = sub_189067DE4();
  uint64_t v57 = v13;
  uint64_t v58 = v15;
  LOBYTE(v71) = 4;
  int v55 = sub_189067DE4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C7617F0);
  LOBYTE(v62) = 5;
  sub_189065D7C(&qword_18C761818, &qword_18C7617F0, (uint64_t (*)(void))sub_189065DE0, MEMORY[0x189618478]);
  sub_189067DCC();
  uint64_t v16 = v71;
  LOBYTE(v62) = 6;
  sub_189065DE0();
  uint64_t v54 = v16;
  swift_bridgeObjectRetain();
  sub_189067DCC();
  uint64_t v17 = v71;
  uint64_t v53 = v72;
  LOBYTE(v71) = 7;
  uint64_t v18 = v73;
  swift_bridgeObjectRetain();
  uint64_t v49 = sub_189067DC0();
  uint64_t v50 = v17;
  uint64_t v51 = v18;
  uint64_t v52 = v19;
  LOBYTE(v71) = 8;
  swift_bridgeObjectRetain();
  uint64_t v48 = sub_189067DC0();
  uint64_t v96 = 0LL;
  uint64_t v21 = v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_18C760FE8);
  LOBYTE(v62) = 9;
  sub_189065AFC((unint64_t *)&qword_18C7610B0, MEMORY[0x189617FD8], MEMORY[0x189618478]);
  uint64_t v47 = v21;
  swift_bridgeObjectRetain();
  uint64_t v22 = v96;
  sub_189067DCC();
  uint64_t v96 = v22;
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_4;
  }

  uint64_t v23 = v71;
  LOBYTE(v71) = 10;
  uint64_t v24 = v23;
  swift_bridgeObjectRetain();
  uint64_t v25 = v96;
  uint64_t v46 = sub_189067DC0();
  uint64_t v96 = v25;
  if (v25)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_4;
  }

  uint64_t v27 = v26;
  char v91 = 11;
  swift_bridgeObjectRetain();
  uint64_t v28 = v96;
  uint64_t v45 = sub_189067DC0();
  uint64_t v96 = v28;
  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_4;
  }

  uint64_t v30 = v29;
  int v44 = v60 & 1;
  v56 &= 1u;
  int v60 = v55 & 1;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v5);
  uint64_t v43 = v30;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  char v31 = v59;
  LOBYTE(v62) = v59;
  BYTE1(v62) = v44;
  uint64_t v32 = v58;
  *((void *)&v62 + 1) = v57;
  *(void *)&__int128 v63 = v58;
  BYTE8(v63) = v56;
  BYTE9(v63) = v60;
  uint64_t v33 = v51;
  *(void *)&__int128 v64 = v54;
  *((void *)&v64 + 1) = v50;
  *(void *)&__int128 v65 = v53;
  *((void *)&v65 + 1) = v51;
  *(void *)&__int128 v66 = v49;
  *((void *)&v66 + 1) = v52;
  uint64_t v34 = v47;
  *(void *)&__int128 v67 = v48;
  *((void *)&v67 + 1) = v47;
  uint64_t v42 = v24;
  *(void *)&__int128 v68 = v24;
  *((void *)&v68 + 1) = v46;
  *(void *)&__int128 v69 = v27;
  *((void *)&v69 + 1) = v45;
  uint64_t v35 = v43;
  uint64_t v70 = v43;
  sub_189065E24((uint64_t)&v62);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v36 = v42;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __int128 v37 = v69;
  *(_OWORD *)(a2 + 96) = v68;
  *(_OWORD *)(a2 + 112) = v37;
  *(void *)(a2 + 128) = v70;
  __int128 v38 = v65;
  *(_OWORD *)(a2 + 32) = v64;
  *(_OWORD *)(a2 + 48) = v38;
  __int128 v39 = v67;
  *(_OWORD *)(a2 + 64) = v66;
  *(_OWORD *)(a2 + 80) = v39;
  __int128 v40 = v63;
  *(_OWORD *)a2 = v62;
  *(_OWORD *)(a2 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v40;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v61);
  LOBYTE(v71) = v31;
  BYTE1(v71) = v44;
  *(_DWORD *)((char *)&v71 + 2) = v94;
  HIWORD(v71) = v95;
  uint64_t v72 = v57;
  uint64_t v73 = v32;
  char v74 = v56;
  char v75 = v60;
  int v76 = v92;
  __int16 v77 = v93;
  uint64_t v78 = v54;
  uint64_t v79 = v50;
  uint64_t v80 = v53;
  uint64_t v81 = v33;
  uint64_t v82 = v49;
  uint64_t v83 = v52;
  uint64_t v84 = v48;
  uint64_t v85 = v34;
  uint64_t v86 = v36;
  uint64_t v87 = v46;
  uint64_t v88 = v27;
  uint64_t v89 = v45;
  uint64_t v90 = v35;
  return sub_189065EB4((uint64_t)&v71);
}

uint64_t sub_189064484@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ArgumentInfoV0.init(from:)(a1, a2);
}

uint64_t sub_189064498(void *a1)
{
  return ArgumentInfoV0.encode(to:)(a1);
}

uint64_t sub_1890644AC()
{
  return sub_189068060();
}

uint64_t sub_1890644EC()
{
  return sub_189068060();
}

uint64_t sub_189064528(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = sub_18906803C();
  if (v3)
  {
    uint64_t v5 = a2 + 48;
    do
    {
      v5 += 24LL;
      swift_bridgeObjectRetain();
      sub_1890677A8();
      swift_bridgeObjectRelease();
      sub_1890677A8();
      uint64_t result = swift_bridgeObjectRelease();
      --v3;
    }

    while (v3);
  }

  return result;
}

uint64_t sub_189064614(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1684957547 && a2 == 0xE400000000000000LL;
  if (v2 || (sub_189067F10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0LL;
  }

  else if (a1 == 1701667182 && a2 == 0xE400000000000000LL)
  {
    swift_bridgeObjectRelease();
    return 1LL;
  }

  else
  {
    char v6 = sub_189067F10();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0) {
      return 1LL;
    }
    else {
      return 2LL;
    }
  }

uint64_t sub_1890646E4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1684957547 && a2 == 0xE400000000000000LL;
  if (v2 || (sub_189067F10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0LL;
  }

  else if (a1 == 0x6944646C756F6873LL && a2 == 0xED000079616C7073LL || (sub_189067F10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1LL;
  }

  else if (a1 == 0x546E6F6974636573LL && a2 == 0xEC000000656C7469LL || (sub_189067F10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2LL;
  }

  else if (a1 == 0x6E6F6974704F7369LL && a2 == 0xEA00000000006C61LL || (sub_189067F10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3LL;
  }

  else if (a1 == 0x7461657065527369LL && a2 == 0xEB00000000676E69LL || (sub_189067F10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4LL;
  }

  else if (a1 == 0x73656D616ELL && a2 == 0xE500000000000000LL || (sub_189067F10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5LL;
  }

  else if (a1 == 0x6572726566657270LL && a2 == 0xED0000656D614E64LL || (sub_189067F10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6LL;
  }

  else if (a1 == 0x6D614E65756C6176LL && a2 == 0xE900000000000065LL || (sub_189067F10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7LL;
  }

  else if (a1 == 0x56746C7561666564LL && a2 == 0xEC00000065756C61LL || (sub_189067F10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8LL;
  }

  else if (a1 == 0x65756C61566C6C61LL && a2 == 0xE900000000000073LL || (sub_189067F10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9LL;
  }

  else if (a1 == 0x7463617274736261LL && a2 == 0xE800000000000000LL || (sub_189067F10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10LL;
  }

  else if (a1 == 0x6973737563736964LL && a2 == 0xEA00000000006E6FLL)
  {
    swift_bridgeObjectRelease();
    return 11LL;
  }

  else
  {
    char v6 = sub_189067F10();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0) {
      return 11LL;
    }
    else {
      return 12LL;
    }
  }

uint64_t sub_189064C4C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014LL && a2 == 0x800000018906DC10LL || (sub_189067F10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0LL;
  }

  else if (a1 == 0x646E616D6D6F63LL && a2 == 0xE700000000000000LL)
  {
    swift_bridgeObjectRelease();
    return 1LL;
  }

  else
  {
    char v5 = sub_189067F10();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0) {
      return 1LL;
    }
    else {
      return 2LL;
    }
  }

uint64_t sub_189064D38(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D6F437265707573LL && a2 == 0xED000073646E616DLL;
  if (v2 || (sub_189067F10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0LL;
  }

  else if (a1 == 0x4E646E616D6D6F63LL && a2 == 0xEB00000000656D61LL || (sub_189067F10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1LL;
  }

  else if (a1 == 0x7463617274736261LL && a2 == 0xE800000000000000LL || (sub_189067F10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2LL;
  }

  else if (a1 == 0x6973737563736964LL && a2 == 0xEA00000000006E6FLL || (sub_189067F10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3LL;
  }

  else if (a1 == 0xD000000000000011LL && a2 == 0x800000018906DC30LL || (sub_189067F10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4LL;
  }

  else if (a1 == 0x616D6D6F63627573LL && a2 == 0xEB0000000073646ELL || (sub_189067F10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5LL;
  }

  else if (a1 == 0x746E656D75677261LL && a2 == 0xE900000000000073LL)
  {
    swift_bridgeObjectRelease();
    return 6LL;
  }

  else
  {
    char v6 = sub_189067F10();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0) {
      return 6LL;
    }
    else {
      return 7LL;
    }
  }

uint64_t sub_189065080(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014LL && a2 == 0x800000018906DC10LL)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }

  else
  {
    char v3 = sub_189067F10();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }

  return v2 & 1;
}

BOOL _s22ArgumentParserInternal0A6InfoV0V2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = 0xEA00000000006C61LL;
  uint64_t v3 = 0x6E6F697469736F70LL;
  if (*(_BYTE *)a1)
  {
    if (*(_BYTE *)a1 == 1)
    {
      unint64_t v4 = 0xE600000000000000LL;
      uint64_t v5 = 0x6E6F6974706FLL;
      if (!*(_BYTE *)a2) {
        goto LABEL_11;
      }
    }

    else
    {
      unint64_t v4 = 0xE400000000000000LL;
      uint64_t v5 = 1734437990LL;
      if (!*(_BYTE *)a2) {
        goto LABEL_11;
      }
    }
  }

  else
  {
    uint64_t v5 = 0x6E6F697469736F70LL;
    unint64_t v4 = 0xEA00000000006C61LL;
    if (!*(_BYTE *)a2) {
      goto LABEL_11;
    }
  }

  if (*(_BYTE *)a2 == 1)
  {
    unint64_t v2 = 0xE600000000000000LL;
    uint64_t v3 = 0x6E6F6974706FLL;
  }

  else
  {
    unint64_t v2 = 0xE400000000000000LL;
    uint64_t v3 = 1734437990LL;
  }

uint64_t _s22ArgumentParserInternal13CommandInfoV0V2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void **)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t v32 = *(void *)(a1 + 56);
  uint64_t v36 = *(void *)(a1 + 64);
  uint64_t v28 = *(void *)(a1 + 80);
  uint64_t v10 = *(void **)a2;
  uint64_t v12 = *(void *)(a2 + 8);
  uint64_t v11 = *(void *)(a2 + 16);
  uint64_t v14 = *(void *)(a2 + 24);
  uint64_t v13 = *(void *)(a2 + 32);
  uint64_t v15 = *(void *)(a2 + 48);
  uint64_t v33 = *(void *)(a2 + 40);
  uint64_t v34 = *(void *)(a1 + 40);
  uint64_t v30 = *(void *)(a1 + 72);
  uint64_t v31 = *(void *)(a2 + 56);
  uint64_t v35 = *(void *)(a2 + 64);
  uint64_t v17 = *(void *)(a2 + 72);
  uint64_t v16 = *(void *)(a2 + 80);
  uint64_t v29 = v17;
  if (v4)
  {
    if (!v10) {
      return 0LL;
    }
    uint64_t v27 = v16;
    if ((sub_18904D0A0(v4, v10) & 1) == 0) {
      return 0LL;
    }
  }

  else
  {
    uint64_t v27 = v16;
    if (v10) {
      return 0LL;
    }
  }

  if (v6 == v12 && v5 == v11 || (char v18 = sub_189067F10(), result = 0LL, (v18 & 1) != 0))
  {
    if (v8)
    {
      if (!v13) {
        return 0LL;
      }
      if (v7 != v14 || v8 != v13)
      {
        char v20 = sub_189067F10();
        uint64_t result = 0LL;
        if ((v20 & 1) == 0) {
          return result;
        }
      }
    }

    else if (v13)
    {
      return 0LL;
    }

    if (v9)
    {
      if (!v15) {
        return 0LL;
      }
      if (v34 != v33 || v9 != v15)
      {
        char v21 = sub_189067F10();
        uint64_t result = 0LL;
        if ((v21 & 1) == 0) {
          return result;
        }
      }
    }

    else if (v15)
    {
      return 0LL;
    }

    if (v36)
    {
      if (!v35) {
        return 0LL;
      }
      if (v32 != v31 || v36 != v35)
      {
        char v22 = sub_189067F10();
        uint64_t result = 0LL;
        if ((v22 & 1) == 0) {
          return result;
        }
      }
    }

    else if (v35)
    {
      return 0LL;
    }

    if (v30)
    {
      if (!v29) {
        return 0LL;
      }
      swift_bridgeObjectRetain();
      uint64_t v23 = swift_bridgeObjectRetain();
      char v24 = sub_18904D4C0(v23, v29);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v24 & 1) == 0) {
        return 0LL;
      }
    }

    else if (v29)
    {
      return 0LL;
    }

    if (v28)
    {
      if (v27)
      {
        swift_bridgeObjectRetain();
        uint64_t v25 = swift_bridgeObjectRetain();
        BOOL v26 = sub_18904D59C(v25, v27);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v26) {
          return 1LL;
        }
      }
    }

    else if (!v27)
    {
      return 1LL;
    }

    return 0LL;
  }

  return result;
}

unint64_t sub_1890659A8()
{
  unint64_t result = qword_18C761730;
  if (!qword_18C761730)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&unk_18906C2FC, &type metadata for ToolInfoV0.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_18C761730);
  }

  return result;
}

unint64_t sub_1890659EC()
{
  unint64_t result = qword_18C761738;
  if (!qword_18C761738)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&protocol conformance descriptor for CommandInfoV0, &type metadata for CommandInfoV0);
    atomic_store(result, (unint64_t *)&qword_18C761738);
  }

  return result;
}

unint64_t sub_189065A30()
{
  unint64_t result = qword_18C761748;
  if (!qword_18C761748)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&protocol conformance descriptor for CommandInfoV0, &type metadata for CommandInfoV0);
    atomic_store(result, (unint64_t *)&qword_18C761748);
  }

  return result;
}

unint64_t sub_189065A74()
{
  unint64_t result = qword_18C761758;
  if (!qword_18C761758)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&unk_18906C2AC, &type metadata for CommandInfoV0.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_18C761758);
  }

  return result;
}

unint64_t sub_189065AB8()
{
  unint64_t result = qword_18C761788;
  if (!qword_18C761788)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&protocol conformance descriptor for ArgumentInfoV0, &type metadata for ArgumentInfoV0);
    atomic_store(result, (unint64_t *)&qword_18C761788);
  }

  return result;
}

uint64_t sub_189065AFC(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_18C760FE8);
    uint64_t v8 = a2;
    uint64_t result = MEMORY[0x1895DD3F4](a3, v7, &v8);
    atomic_store(result, a1);
  }

  return result;
}

unint64_t sub_189065B5C()
{
  unint64_t result = qword_18C7617A8;
  if (!qword_18C7617A8)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&protocol conformance descriptor for ArgumentInfoV0, &type metadata for ArgumentInfoV0);
    atomic_store(result, (unint64_t *)&qword_18C7617A8);
  }

  return result;
}

unint64_t sub_189065BA0()
{
  unint64_t result = qword_18C7617B8;
  if (!qword_18C7617B8)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&unk_18906C25C, &type metadata for ArgumentInfoV0.NameInfoV0.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_18C7617B8);
  }

  return result;
}

unint64_t sub_189065BE4()
{
  unint64_t result = qword_18C7617C0;
  if (!qword_18C7617C0)
  {
    unint64_t result = MEMORY[0x1895DD3F4]( &protocol conformance descriptor for ArgumentInfoV0.NameInfoV0.KindV0,  &type metadata for ArgumentInfoV0.NameInfoV0.KindV0);
    atomic_store(result, (unint64_t *)&qword_18C7617C0);
  }

  return result;
}

unint64_t sub_189065C28()
{
  unint64_t result = qword_18C7617D0;
  if (!qword_18C7617D0)
  {
    unint64_t result = MEMORY[0x1895DD3F4]( &protocol conformance descriptor for ArgumentInfoV0.NameInfoV0.KindV0,  &type metadata for ArgumentInfoV0.NameInfoV0.KindV0);
    atomic_store(result, (unint64_t *)&qword_18C7617D0);
  }

  return result;
}

unint64_t sub_189065C6C()
{
  unint64_t result = qword_18C7617E0;
  if (!qword_18C7617E0)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&unk_18906C20C, &type metadata for ArgumentInfoV0.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_18C7617E0);
  }

  return result;
}

unint64_t sub_189065CB0()
{
  unint64_t result = qword_18C7617E8;
  if (!qword_18C7617E8)
  {
    unint64_t result = MEMORY[0x1895DD3F4]( &protocol conformance descriptor for ArgumentInfoV0.KindV0,  &type metadata for ArgumentInfoV0.KindV0);
    atomic_store(result, (unint64_t *)&qword_18C7617E8);
  }

  return result;
}

unint64_t sub_189065CF4()
{
  unint64_t result = qword_18C761800;
  if (!qword_18C761800)
  {
    unint64_t result = MEMORY[0x1895DD3F4]( &protocol conformance descriptor for ArgumentInfoV0.NameInfoV0,  &type metadata for ArgumentInfoV0.NameInfoV0);
    atomic_store(result, (unint64_t *)&qword_18C761800);
  }

  return result;
}

unint64_t sub_189065D38()
{
  unint64_t result = qword_18C761810;
  if (!qword_18C761810)
  {
    unint64_t result = MEMORY[0x1895DD3F4]( &protocol conformance descriptor for ArgumentInfoV0.KindV0,  &type metadata for ArgumentInfoV0.KindV0);
    atomic_store(result, (unint64_t *)&qword_18C761810);
  }

  return result;
}

uint64_t sub_189065D7C(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t v9 = a3();
    uint64_t result = MEMORY[0x1895DD3F4](a4, v8, &v9);
    atomic_store(result, a1);
  }

  return result;
}

unint64_t sub_189065DE0()
{
  unint64_t result = qword_18C761820;
  if (!qword_18C761820)
  {
    unint64_t result = MEMORY[0x1895DD3F4]( &protocol conformance descriptor for ArgumentInfoV0.NameInfoV0,  &type metadata for ArgumentInfoV0.NameInfoV0);
    atomic_store(result, (unint64_t *)&qword_18C761820);
  }

  return result;
}

uint64_t sub_189065E24(uint64_t a1)
{
  return a1;
}

uint64_t sub_189065EB4(uint64_t a1)
{
  return a1;
}

unint64_t sub_189065F48()
{
  unint64_t result = qword_18C761828;
  if (!qword_18C761828)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&protocol conformance descriptor for ToolInfoV0, &type metadata for ToolInfoV0);
    atomic_store(result, (unint64_t *)&qword_18C761828);
  }

  return result;
}

unint64_t sub_189065F90()
{
  unint64_t result = qword_18C761830;
  if (!qword_18C761830)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&protocol conformance descriptor for CommandInfoV0, &type metadata for CommandInfoV0);
    atomic_store(result, (unint64_t *)&qword_18C761830);
  }

  return result;
}

unint64_t sub_189065FD8()
{
  unint64_t result = qword_18C761838;
  if (!qword_18C761838)
  {
    unint64_t result = MEMORY[0x1895DD3F4]( &protocol conformance descriptor for ArgumentInfoV0.NameInfoV0.KindV0,  &type metadata for ArgumentInfoV0.NameInfoV0.KindV0);
    atomic_store(result, (unint64_t *)&qword_18C761838);
  }

  return result;
}

unint64_t sub_189066020()
{
  unint64_t result = qword_18C761840;
  if (!qword_18C761840)
  {
    unint64_t result = MEMORY[0x1895DD3F4]( &protocol conformance descriptor for ArgumentInfoV0.NameInfoV0,  &type metadata for ArgumentInfoV0.NameInfoV0);
    atomic_store(result, (unint64_t *)&qword_18C761840);
  }

  return result;
}

unint64_t sub_189066068()
{
  unint64_t result = qword_18C761848;
  if (!qword_18C761848)
  {
    unint64_t result = MEMORY[0x1895DD3F4]( &protocol conformance descriptor for ArgumentInfoV0.KindV0,  &type metadata for ArgumentInfoV0.KindV0);
    atomic_store(result, (unint64_t *)&qword_18C761848);
  }

  return result;
}

unint64_t sub_1890660B0()
{
  unint64_t result = qword_18C761850;
  if (!qword_18C761850)
  {
    unint64_t result = MEMORY[0x1895DD3F4](&protocol conformance descriptor for ArgumentInfoV0, &type metadata for ArgumentInfoV0);
    atomic_store(result, (unint64_t *)&qword_18C761850);
  }

  return result;
}

uint64_t sub_1890660F4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 96);
  return swift_bridgeObjectRetain();
}

uint64_t sub_189066100(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 96) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ToolInfoHeader()
{
  return &type metadata for ToolInfoHeader;
}

uint64_t destroy for ToolInfoV0()
{
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ToolInfoV0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ToolInfoV0(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy96_8(uint64_t a1, uint64_t a2)
{
  __int128 v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  __int128 v4 = *(_OWORD *)(a2 + 48);
  __int128 v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t assignWithTake for ToolInfoV0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolInfoV0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ToolInfoV0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0LL;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 96) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for ToolInfoV0()
{
  return &type metadata for ToolInfoV0;
}

uint64_t destroy for CommandInfoV0()
{
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for CommandInfoV0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for CommandInfoV0(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  __int128 v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  __int128 v4 = *(_OWORD *)(a2 + 48);
  __int128 v5 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for CommandInfoV0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CommandInfoV0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CommandInfoV0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 88) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for CommandInfoV0()
{
  return &type metadata for CommandInfoV0;
}

uint64_t destroy for ArgumentInfoV0()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ArgumentInfoV0(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v3;
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = v4;
  uint64_t v5 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v5;
  uint64_t v6 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v6;
  uint64_t v7 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v7;
  uint64_t v8 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v8;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ArgumentInfoV0(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ArgumentInfoV0(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ArgumentInfoV0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 136)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ArgumentInfoV0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(_BYTE *)(result + 136) = 1;
    }
  }

  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(_BYTE *)(result + 136) = 0;
    }
    if (a2) {
      *(void *)(result + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = a2;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for ArgumentInfoV0()
{
  return &type metadata for ArgumentInfoV0;
}

uint64_t destroy for ArgumentInfoV0.NameInfoV0()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s22ArgumentParserInternal14ArgumentInfoV0V10NameInfoV0VwCP_0(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ArgumentInfoV0.NameInfoV0(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ArgumentInfoV0.NameInfoV0(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ArgumentInfoV0.NameInfoV0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ArgumentInfoV0.NameInfoV0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0LL;
    *(void *)(result + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = 0LL;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 24) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for ArgumentInfoV0.NameInfoV0()
{
  return &type metadata for ArgumentInfoV0.NameInfoV0;
}

ValueMetadata *type metadata accessor for ArgumentInfoV0.NameInfoV0.KindV0()
{
  return &type metadata for ArgumentInfoV0.NameInfoV0.KindV0;
}

uint64_t _s22ArgumentParserInternal14ArgumentInfoV0V6KindV0Owst_0( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFD) {
    return ((uint64_t (*)(void))((char *)&loc_189066DA8 + 4 * byte_18906B868[v4]))();
  }
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_189066DDC + 4 * byte_18906B863[v4]))();
}

uint64_t sub_189066DDC(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_189066DE4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x189066DECLL);
  }
  return result;
}

uint64_t sub_189066DF8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x189066E00LL);
  }
  *(_BYTE *)__n128 result = a2 + 2;
  return result;
}

uint64_t sub_189066E04(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_189066E0C(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArgumentInfoV0.KindV0()
{
  return &type metadata for ArgumentInfoV0.KindV0;
}

uint64_t getEnumTagSinglePayload for ArgumentInfoV0.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0xF5) {
    goto LABEL_17;
  }
  if (a2 + 11 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 11) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }

  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 11;
    }

    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }

uint64_t storeEnumTagSinglePayload for ArgumentInfoV0.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xF4) {
    return ((uint64_t (*)(void))((char *)&loc_189066F04 + 4 * byte_18906B872[v4]))();
  }
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_189066F38 + 4 * byte_18906B86D[v4]))();
}

uint64_t sub_189066F38(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_189066F40(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x189066F48LL);
  }
  return result;
}

uint64_t sub_189066F54(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x189066F5CLL);
  }
  *(_BYTE *)__n128 result = a2 + 11;
  return result;
}

uint64_t sub_189066F60(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_189066F68(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArgumentInfoV0.CodingKeys()
{
  return &type metadata for ArgumentInfoV0.CodingKeys;
}

ValueMetadata *type metadata accessor for ArgumentInfoV0.NameInfoV0.CodingKeys()
{
  return &type metadata for ArgumentInfoV0.NameInfoV0.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for CommandInfoV0.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xF9) {
    return ((uint64_t (*)(void))((char *)&loc_189066FE4 + 4 * byte_18906B87C[v4]))();
  }
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_189067018 + 4 * byte_18906B877[v4]))();
}

uint64_t sub_189067018(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_189067020(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x189067028LL);
  }
  return result;
}

uint64_t sub_189067034(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x18906703CLL);
  }
  *(_BYTE *)__n128 result = a2 + 6;
  return result;
}

uint64_t sub_189067040(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_189067048(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CommandInfoV0.CodingKeys()
{
  return &type metadata for CommandInfoV0.CodingKeys;
}

uint64_t _s22ArgumentParserInternal14ArgumentInfoV0V10NameInfoV0V10CodingKeysOwst_0( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_1890670B0 + 4 * byte_18906B886[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1890670E4 + 4 * byte_18906B881[v4]))();
}

uint64_t sub_1890670E4(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1890670EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x1890670F4LL);
  }
  return result;
}

uint64_t sub_189067100(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x189067108LL);
  }
  *(_BYTE *)__n128 result = a2 + 1;
  return result;
}

uint64_t sub_18906710C(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_189067114(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}